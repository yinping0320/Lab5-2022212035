{"version":3,"file":"farris-ui-list-filter.js.map","sources":["ng://@farris/ui-list-filter/lib/entity/fieldconfig/fieldconfig.ts","ng://@farris/ui-list-filter/lib/entity/controltype.ts","ng://@farris/ui-list-filter/lib/entity/controltype/text/textcontrol.ts","ng://@farris/ui-list-filter/lib/entity/controltype/search/searchcontrol.ts","ng://@farris/ui-list-filter/lib/entity/controltype/date/datecontrol.ts","ng://@farris/ui-list-filter/lib/entity/controltype/dropdownlist/enumtype.ts","ng://@farris/ui-list-filter/lib/entity/controltype/dropdownlist/integerenumvalue.ts","ng://@farris/ui-list-filter/lib/entity/controltype/dropdownlist/stringenumvalue.ts","ng://@farris/ui-list-filter/lib/entity/controltype/dropdownlist/boolenumvalue.ts","ng://@farris/ui-list-filter/lib/entity/controltype/dropdownlist/ienumvalue.ts","ng://@farris/ui-list-filter/lib/entity/controltype/dropdownlist/dropdowncontrol.ts","ng://@farris/ui-list-filter/lib/entity/controltype/numberrange/numberrangecontrol.ts","ng://@farris/ui-list-filter/lib/entity/controltype/help/helpcontrol.ts","ng://@farris/ui-list-filter/lib/entity/controltype/checkbox/checkboxcontrol.ts","ng://@farris/ui-list-filter/lib/entity/controltype/datarange/daterangecontrol.ts","ng://@farris/ui-list-filter/lib/entity/controltype/year/yearcontrol.ts","ng://@farris/ui-list-filter/lib/entity/conditionvalue/daterangevalue.ts","ng://@farris/ui-list-filter/lib/entity/conditionvalue/textvalue.ts","ng://@farris/ui-list-filter/lib/entity/conditionvalue/searchvalue.ts","ng://@farris/ui-list-filter/lib/entity/conditionvalue/datevalue.ts","ng://@farris/ui-list-filter/lib/entity/conditionvalue/numberrangevaue.ts","ng://@farris/ui-list-filter/lib/entity/conditionvalue/dropdownlistvalue.ts","ng://@farris/ui-list-filter/lib/entity/conditionvalue/helpvalue.ts","ng://@farris/ui-list-filter/lib/entity/conditionvalue/checkboxgroupvalue.ts","ng://@farris/ui-list-filter/lib/entity/conditionvalue/daterangetimevalue.ts","ng://@farris/ui-list-filter/lib/entity/controltype/datarangetime/daterangetimecontrol.ts","ng://@farris/ui-list-filter/lib/entity/conditionvalue/radiovalue.ts","ng://@farris/ui-list-filter/lib/entity/controltype/radio/radiocontrol.ts","ng://@farris/ui-list-filter/lib/entity/conditionvalue/yearvalue.ts","ng://@farris/ui-list-filter/lib/entity/controltype/month/monthcontrol.ts","ng://@farris/ui-list-filter/lib/entity/conditionvalue/month.ts","ng://@farris/ui-list-filter/lib/entity/conditionvalue/yearrange.ts","ng://@farris/ui-list-filter/lib/entity/controltype/yearrange/yearrangecontrol.ts","ng://@farris/ui-list-filter/lib/entity/conditionvalue/monthrange.ts","ng://@farris/ui-list-filter/lib/entity/controltype/monthrange/monthrangecontrol.ts","ng://@farris/ui-list-filter/lib/entity/conditionvalue/inputgroup.ts","ng://@farris/ui-list-filter/lib/entity/controltype/input-group/inputgroupcontrol.ts","ng://@farris/ui-list-filter/lib/service/list-filter.service.ts","ng://@farris/ui-list-filter/lib/submithandlers/enum/compare-type.enum.ts","ng://@farris/ui-list-filter/lib/submithandlers/enum/value-type.enum.ts","ng://@farris/ui-list-filter/lib/submithandlers/enum/relation-type.enum.ts","ng://@farris/ui-list-filter/lib/submithandlers/handlers/text.handler.ts","ng://@farris/ui-list-filter/lib/submithandlers/handlers/daterage.handler.ts","ng://@farris/ui-list-filter/lib/submithandlers/handlers/dropdown.handler.ts","ng://@farris/ui-list-filter/lib/submithandlers/handlers/numberrage.handler.ts","ng://@farris/ui-list-filter/lib/submithandlers/handlers/smarthelp.handler.ts","ng://@farris/ui-list-filter/lib/submithandlers/handlers/search.handler.ts","ng://@farris/ui-list-filter/lib/submithandlers/handlers/date.handler.ts","ng://@farris/ui-list-filter/lib/submithandlers/handlers/checkboxgroup.handler.ts","ng://@farris/ui-list-filter/lib/submithandlers/handlers/dateragetime.handler.ts","ng://@farris/ui-list-filter/lib/submithandlers/handlers/radio.handler.ts","ng://@farris/ui-list-filter/lib/submithandlers/handlers/monthrage.handler.ts","ng://@farris/ui-list-filter/lib/submithandlers/handlers/yearrage.handler.ts","ng://@farris/ui-list-filter/lib/submithandlers/handlers/month.handler.ts","ng://@farris/ui-list-filter/lib/submithandlers/handlers/year.handler.ts","ng://@farris/ui-list-filter/lib/submithandlers/handlers/inputgroup.handler.ts","ng://@farris/ui-list-filter/lib/submithandlers/querycondition.handler.factory.ts","ng://@farris/ui-list-filter/lib/submithandlers/query-solution.service.ts","ng://@farris/ui-list-filter/lib/entity/querycondition.ts","ng://@farris/ui-list-filter/lib/entity/comparetype.ts","ng://@farris/ui-list-filter/lib/entity/valuetype.ts","ng://@farris/ui-list-filter/lib/entity/relationtype.ts","ng://@farris/ui-list-filter/lib/entity/controltype/checkbox/ienumvalue.ts","ng://@farris/ui-list-filter/lib/service/convertorservice.ts","ng://@farris/ui-list-filter/lib/interface/IistFilterHandler.ts","ng://@farris/ui-list-filter/lib/list-filter.component.ts","ng://@farris/ui-list-filter/lib/service/solution.service.ts","ng://@farris/ui-list-filter/lib/controlcomponent/inputcomponent/input.component.ts","ng://@farris/ui-list-filter/lib/controlcomponent/searchcomponent/search.component.ts","ng://@farris/ui-list-filter/lib/controlcomponent/helpcomponent.ts/help.component.ts","ng://@farris/ui-list-filter/lib/controlcomponent/datecomponent/date.component.ts","ng://@farris/ui-list-filter/lib/controlcomponent/dropdowncomponent/dropdown.component.ts","ng://@farris/ui-list-filter/lib/controlcomponent/numbercomponent/number.component.ts","ng://@farris/ui-list-filter/lib/entity/controltype/checkbox/checkboxvalue.ts","ng://@farris/ui-list-filter/lib/controlcomponent/checkboxcomponent/checkbox.component.ts","ng://@farris/ui-list-filter/lib/controlcomponent/daterangecomponent/daterange.component.ts","ng://@farris/ui-list-filter/lib/list-filter-common.ts","ng://@farris/ui-list-filter/lib/controlType.pipe.ts","ng://@farris/ui-list-filter/lib/entity/controltype/radio/radiovalue.ts","ng://@farris/ui-list-filter/lib/controlcomponent/radiocomponent/radio.component.ts","ng://@farris/ui-list-filter/lib/controlcomponent/inputgroupcomponent/inputgroup.component.ts","ng://@farris/ui-list-filter/lib/directives/clear-fields.directive.ts","ng://@farris/ui-list-filter/lib/list-filter.module.ts","ng://@farris/ui-list-filter/lib/entity/list-filter.model.ts","ng://@farris/ui-list-filter/lib/entity/conditionvalue/ivalue.ts","ng://@farris/ui-list-filter/lib/entity/controltype/radio/ienumvalue.ts","ng://@farris/ui-list-filter/lib/entity/controltype/help/displayType.ts","ng://@farris/ui-list-filter/lib/entity/controltype/icontrol.ts"],"sourcesContent":["import { IControl } from \"../controltype/icontrol\";\r\nimport { IValue } from '../conditionvalue/ivalue';\r\n\r\n/**\r\n * å­æ®µéç½®\r\n */\r\nexport class FieldConfig {\r\n\r\n    /**\r\n     * å­æ®µID\r\n     */\r\n    id?: string;\r\n\r\n    /**\r\n     * å­æ®µæ ç­¾ï¼å­æ®µç¼å·çå¯ä¸æ è¯\r\n     */\r\n    labelCode: string;\r\n\r\n    /**\r\n     * å­æ®µç¼å·\r\n     */\r\n    code?: string;\r\n\r\n    /**\r\n     * å­æ®µåç§°\r\n     */\r\n    name?: string;\r\n\r\n    /**\r\n     * æ§ä»¶ç±»åï¼ç®ååæ¬ææ¬ç±»åï¼ä¸æåè¡¨ï¼æ¥æåºé´ï¼æ°å­åºé´ï¼å¸®å©ç±»å\r\n     * æ§ä»¶ç±»åä¸ºIControlæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åå¯¹åºä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n     * 1. ææ¬ç±»åï¼TextControl\r\n     * 2. ä¸æåè¡¨ï¼DropDownListControl\r\n     * 3. æ¥æåºé´ï¼DateRangeControl\r\n     * 4. æ°å­åºé´ï¼NumberRangeControl\r\n     * 5. å¸®å©ç±»åï¼SmartHelpContol\r\n     */\r\n    control?: IControl;\r\n\r\n    /** è¡¨åæ°æ® */\r\n    value?: any;\r\n\r\n    // é»è®¤æ¾ç¤º\r\n    placeHolder?: string;\r\n    beginPlaceHolder?: string;\r\n    endPlaceHolder?: string;\r\n}\r\n","export enum ControlType {\r\n    Text = 0,\r\n    //DateTime=1,\r\n    Help = 1,\r\n    DropDown = 2,\r\n    DateRange = 3,\r\n    NumberRange = 4,\r\n    Search = 5,\r\n    Date = 6,\r\n    CheckboxGroup = 7,\r\n    DateRangeTime = 8,\r\n    Radio = 9,\r\n    Year = 10,\r\n    Month = 11,\r\n    MonthRange = 12,\r\n    YearRange = 13,\r\n    InputGroup = 14\r\n}\r\n","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * ææ¬æ§ä»¶\r\n */\r\nexport class TextControl implements IControl{\r\n    \r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼ææ¬æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Text;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æç´¢æ§ä»¶\r\n */\r\nexport class SearchControl implements IControl{\r\n    \r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼æç´¢æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Search;\r\n    }\r\n\r\n    /**\r\n     * æç´¢æ¡é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    \r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { CompareType } from '../../comparetype';\r\n\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class DateControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Date;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    //format:string;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æç´¢æ¥æç±»å\r\n     */\r\n    compareType:CompareType;\r\n    showType:string;\r\n}","export enum EnumType {\r\n    IntType = 0,\r\n    StringType = 1,\r\n    BoolType = 2\r\n}\r\n","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Integerç±»å\r\n */\r\nexport class EnumIntegerValue implements IEnumValue{\r\n    getEnumType(): EnumType {\r\n        return EnumType.IntType;\r\n    }\r\n    \r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:number;\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Stringç±»å\r\n */\r\nexport class EnumStringValue implements IEnumValue{\r\n    getEnumType(): EnumType {\r\n        return  EnumType.StringType;\r\n    }\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Boolç±»å\r\n */\r\nexport class EnumBoolValue implements IEnumValue{\r\n    \r\n    getEnumType(): EnumType {\r\n        return  EnumType.BoolType;\r\n    }\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:boolean;\r\n}","import { EnumType } from \"./enumtype\";\r\nimport { EnumIntegerValue } from \"./integerenumvalue\";\r\nimport { EnumStringValue } from \"./stringenumvalue\";\r\nimport { EnumBoolValue } from \"./boolenumvalue\";\r\n\r\nexport interface IEnumValue{\r\n    getEnumType():EnumType;\r\n    getEnumValueName():string;\r\n    getEnumValue():any;\r\n}\r\n\r\nexport class EnumValueConvert{\r\n\r\n    convertJObject(obj:IEnumValue):Object{\r\n        let enumValue=obj as IEnumValue;\r\n        let enumType=enumValue.getEnumType();\r\n        let jobj=new Object();\r\n        jobj[\"Type\"]=enumType;\r\n        jobj[\"Content\"]=enumValue;\r\n        return jobj;\r\n    }\r\n\r\n    initFromJobject(jobj:Object):IEnumValue{\r\n        let enumType=jobj[\"Type\"] as EnumType;\r\n        let content=jobj[\"Content\"] as IEnumValue;\r\n        if(enumType==EnumType.IntType){\r\n            return Object.assign(new EnumIntegerValue(),content) ;\r\n        }\r\n        else if(enumType==EnumType.BoolType){\r\n            return Object.assign(new EnumBoolValue(),content) ;\r\n        }\r\n        else{\r\n            return Object.assign(new EnumStringValue(),content) ;\r\n        }\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { EnumType } from \"./enumtype\";\r\nimport { IEnumValue, EnumValueConvert } from \"./ienumvalue\";\r\nimport { EnumStringValue } from \"./stringenumvalue\";\r\nimport { EnumBoolValue } from \"./boolenumvalue\";\r\nimport { EnumIntegerValue } from \"./integerenumvalue\";\r\n\r\n/**\r\n * ä¸æåè¡¨æ§ä»¶\r\n */\r\nexport class DropDownControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DropDown;\r\n    }\r\n\r\n    /**\r\n     * ä¸æå¼ç±»å\r\n     */\r\n    valueType:EnumType;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * ä¸ææ°æ®æºåè¡¨\r\n     * è¯¥å±æ§ä¸ºIEnumValueæ¥å£ç±»åï¼å·ä½å®ç°ç±»å¦ä¸ï¼\r\n     * 1.å¸å°ç±»åï¼EnumBoolValue,å¸å°ç±»åçæ§ä»¶ä¼è½¬æä¸æåè¡¨ï¼å®ç°ç±»ä½¿ç¨EnumBoolValue\r\n     * 2.å­ç¬¦ä¸²ç±»åï¼EnumStringValue\r\n     * 3.æ´åç±»åï¼EnumIntegerValue ä¾å¦Radio Buttonç±»åéè¦ä½¿ç¨EnumIntegerValueå®ç°ç±»\r\n     */\r\n    enumValues:Array<IEnumValue>;\r\n\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}\r\n\r\n/**\r\n * ä¸æåè¡¨æ§ä»¶åºååä¸ååºååå¨\r\n */\r\nexport class DropDownListControlConvert{\r\n\r\n    /**\r\n     * åºåå\r\n     * @param obj ä¸æåè¡¨æ§ä»¶å®ä½\r\n     */\r\n    convertToObject(obj:DropDownControl){\r\n        let dropDownListControl= obj as DropDownControl;\r\n        let jobj=new Object();\r\n        jobj[\"valueType\"]=dropDownListControl.valueType;\r\n        if(dropDownListControl.enumValues!=null){\r\n            let jarray=jobj[\"enumValues\"]=[];\r\n            let convertor=new EnumValueConvert();\r\n            dropDownListControl.enumValues.forEach(element => {\r\n                if(dropDownListControl.valueType==EnumType.BoolType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumBoolValue(),element)));\r\n                }\r\n                else if(dropDownListControl.valueType==EnumType.IntType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumIntegerValue(),element)));\r\n                }\r\n                else{\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumStringValue(),element)));\r\n                }\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    /**\r\n     * ååºåå\r\n     * @param jobj ä¸æåè¡¨æ§ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n     */\r\n    initFromObject(jobj:Object):DropDownControl{\r\n        let control=new DropDownControl();\r\n        if(jobj[\"valueType\"]!=null){\r\n            control.valueType=jobj[\"valueType\"] as number;\r\n        }\r\n        if(jobj[\"enumValues\"]!=null){\r\n            control.enumValues=new Array<IEnumValue>();\r\n            jobj[\"enumValues\"].forEach(element => {\r\n                let convertor=new EnumValueConvert();\r\n                control.enumValues.push(convertor.initFromJobject(element));\r\n            });\r\n        }\r\n        return control;\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class NumberRangeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.NumberRange;\r\n    }\r\n\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length:number;\r\n\r\n    /**\r\n     * ç²¾åº¦\r\n     */\r\n    precision:number;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¯å¦æ¯å¤§æ° */\r\n    bigNumber:boolean;\r\n}","import { IControl } from '../icontrol';\r\nimport { ControlType } from '../../controltype';\r\nimport { DisplayType } from './displayType';\r\n\r\n/**\r\n * å¸®å©æ§ä»¶\r\n */\r\nexport class HelpContol implements IControl {\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder: string;\r\n    /**\r\n     * å¸®å©æ°æ®æº\r\n     */\r\n    uri: string;\r\n\r\n    /**\r\n     * å¸®å©çææ¬æ¾ç¤ºå­æ®µ\r\n     */\r\n    textField: string;\r\n\r\n    /**\r\n     * å¸®å©å¼å­æ®µ\r\n     */\r\n    valueField: string;\r\n\r\n    idField: string;\r\n    helpId: string;\r\n    displayType: DisplayType;\r\n\r\n    /**\r\n     * å­æ®µæ å°ä¿¡æ¯\r\n     */\r\n    mapFields: any;\r\n\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend: boolean;\r\n\r\n    /** æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel: boolean;\r\n\r\n    /** æ¯å¦å¿å¡« */\r\n    required: boolean;\r\n\r\n    /**\r\n     * å¸®å©åäºä»¶\r\n     */\r\n    preEventCmd: any;\r\n\r\n    title: string;\r\n\r\n    /**\r\n     * å¸®å©åäºä»¶\r\n     */\r\n    postEventCmd: any;\r\n\r\n    /**\r\n     * è¿è¡æ¶åæ°éç½®ä¼ é\r\n     */\r\n    context: any;\r\n\r\n    /** å¯ç¨æé å®æ´æ è¿æ»¤ */\r\n    enableFullTree: boolean;\r\n    /** æ å½¢å¸®å©æ°æ®å è½½æ¹å¼ï¼ default: åç½®åæ°ï¼ loadall: å è½½ææ layerloadï¼åå±å è½½ */\r\n    loadTreeDataType: 'default' | 'loadall' | 'layerload';\r\n    /** æ¯å¦æ¯æå¤é */\r\n    singleSelect: boolean;\r\n    /** å±å¼å°æå®çº§æ° */\r\n    expandLevel: number;\r\n    /** æ¯å¦å¯ç¨çº§èéæ©æ§å¶éé¡¹ */\r\n    enableCascade: boolean;\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Help;\r\n    }\r\n    /**\r\n  * å¼ååæ¶ï¼éè¦æ¸ç©ºåªäºå­æ®µ\r\n  */\r\n    clearFields: string;\r\n    /** åè®¸ç¼è¾ */\r\n    editable?: boolean;\r\n    /** å¤å­æ®µæ¥è¯¢ */\r\n    enableMultiFieldSearch?: boolean;\r\n}\r\n","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { CheckboxIEnumValue } from './ienumvalue';\r\n\r\n/**\r\n * å¤éç»æ§ä»¶\r\n */\r\nexport class CheckboxGroupControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.CheckboxGroup;\r\n    }\r\n\r\n    /**\r\n     * å¤éç»æ°æ®æºåè¡¨\r\n     */\r\n    enumValues:Array<CheckboxIEnumValue>;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´æ§ä»¶\r\n */\r\nexport class DateRangeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    \r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { CompareType } from '../../comparetype';\r\n\r\n/**\r\n * å¹´ä»½æ§ä»¶\r\n */\r\nexport class YearControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Year;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    //format:string;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æç´¢æ¥æç±»å\r\n     */\r\n    compareType:CompareType;\r\n    showType:string;\r\n}","import { EventEmitter } from '@angular/core';\r\nimport { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class DateRangeValue implements IValue {\r\n    clear$ = new EventEmitter();\r\n\r\n\r\n    startTime: string;\r\n    endTime: string;\r\n\r\n    constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n        this.startTime = value.startTime;\r\n        this.endTime = value.endTime;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.startTime || !this.endTime;\r\n    }\r\n\r\n    setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n        if (value.formatted) {\r\n            this.startTime = value.formatted.split(value.delimiter)[0];\r\n            this.endTime = value.formatted.split(value.delimiter)[1];\r\n        } else {\r\n            this.clearValue();\r\n        }\r\n    }\r\n    getOriginalValue() {\r\n        return `${this.startTime}~${this.endTime}`;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n    clearValue(): void {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n\r\n        this.clear$.emit();\r\n    }\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class TextValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(data: string = '') {\r\n        this.value = data;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Text;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n}\r\n","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { EventEmitter } from \"@angular/core\";\r\n\r\nexport class SearchValue implements IValue {\r\n\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(data: string = '') {\r\n        this.value = data;\r\n    }\r\n\r\n    \r\n    getControlType(): ControlType {\r\n        return ControlType.Search;\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = '';\r\n        this.clear$.emit();\r\n    }\r\n\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n}\r\n","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { EventEmitter } from \"@angular/core\";\r\n\r\nexport class DateValue implements IValue{\r\n \r\n    clear$ = new EventEmitter();\r\n    value: string;\r\n    \r\n    constructor(date: string = ''){\r\n        this.value = date;\r\n    }\r\n\r\n    setOriginalValue(value: any): void {\r\n        this.value = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Date;\r\n    }\r\n \r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { EventEmitter } from \"@angular/core\";\r\n\r\nexport class NumberRangeValue implements IValue {\r\n\r\n    startValue: number;\r\n    endValue: number;\r\n\r\n    clear$ = new EventEmitter();\r\n\r\n    constructor(data: { startValue: string, endValue: string } = { startValue: '', endValue: '' }) {\r\n        this.startValue = data.startValue ? parseFloat(data.startValue) : null;\r\n        this.endValue = data.endValue ? parseFloat(data.endValue) : null;\r\n    }\r\n\r\n\r\n    isEmpty(): boolean {\r\n        return (this.startValue == null && this.endValue == null);\r\n    }\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.NumberRange;\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.startValue = undefined;\r\n        this.endValue = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return {\r\n            begin: this.startValue,\r\n            end: this.endValue\r\n        };\r\n    }\r\n\r\n}\r\n\r\nexport class NumberRangeValueConvertor {\r\n    convertToObject(obj: IValue): Object {\r\n        let dropDownListValue = obj as NumberRangeValue;\r\n        let jobj = new Object();\r\n        jobj[\"startValue\"] = dropDownListValue.startValue;\r\n        jobj[\"endValue\"] = dropDownListValue.endValue;\r\n        return jobj;\r\n    }\r\n\r\n    initFromObject(jobj: Object): NumberRangeValue {\r\n        let numberRangeValue = new NumberRangeValue();\r\n        if (!!(jobj[\"startValue\"])) {\r\n            numberRangeValue.startValue = jobj[\"startValue\"] as number;\r\n        }\r\n        if (!!(jobj[\"endValue\"])) {\r\n            numberRangeValue.endValue = jobj[\"endValue\"] as number;\r\n        }\r\n        return numberRangeValue;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { IEnumValue, EnumValueConvert } from \"../controltype/dropdownlist/ienumvalue\";\r\nimport { EventEmitter } from \"@angular/core\";\r\n\r\nexport class DropDownListValue implements IValue{\r\n\r\n    clear$ = new EventEmitter();\r\n\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DropDown;\r\n    }\r\n    value: string;\r\n    constructor(data: string = ''){\r\n        this.value = data;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n}\r\n\r\nexport class DropDownListValueConvert{\r\n    convertToObject(obj:IValue):Object{\r\n        let dropDownListValue=obj as DropDownListValue;\r\n        let jobj=new Object();\r\n        let convertor=new EnumValueConvert();\r\n        if(!!(dropDownListValue.value)){\r\n            // jobj[\"value\"]=convertor.convertJObject(dropDownListValue.value);\r\n            jobj[\"value\"] = dropDownListValue.value;\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    initFromObject(jobj:Object):DropDownListValue{\r\n        let dropDownListValue=new DropDownListValue();\r\n        if(!!(jobj[\"value\"])){\r\n            let convertor=new EnumValueConvert();\r\n            // dropDownListValue.value=convertor.initFromJobject(jobj[\"value\"]);\r\n            dropDownListValue.value = jobj[\"value\"];\r\n        }\r\n        return dropDownListValue;\r\n    }\r\n}\r\n\r\n","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { EventEmitter } from \"@angular/core\";\r\n\r\nexport class HelpValue implements IValue {\r\n\r\n    valueField: string;\r\n    value: any[];\r\n    textValue: string;\r\n    clear$ = new EventEmitter();\r\n\r\n    static getPropValue(helpItem: any, args: Array<string>): any {\r\n        if (args.length > 1) {\r\n            const arg = args.shift();\r\n            return helpItem[arg] ? this.getPropValue(helpItem[arg], args) : null;\r\n        }\r\n        return helpItem[args[0]];\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.valueField = undefined;\r\n        this.textValue = undefined;\r\n\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    getOriginalValue(): string {\r\n        const args = this.valueField.split('.');\r\n        const valueArr = this.value.map(helpItem => HelpValue.getPropValue(helpItem, cloneDeep(args)));\r\n        return valueArr && valueArr.length ? valueArr.join(',') : '';\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Help;\r\n    }\r\n\r\n\r\n    constructor(data: {\r\n        value: any,\r\n        valueField: string,\r\n        textValue: string;\r\n    } = { value: [], valueField: undefined, textValue: undefined }) {\r\n        if (data.hasOwnProperty('textValue')) {// æ°ç»æï¼valueæ¯æ°ç»\r\n            this.valueField = data.valueField;\r\n            this.value = data.value;\r\n            this.textValue = data.textValue;\r\n        } else {// æ§ç»æï¼valueæ¯å¯¹è±¡\r\n            this.valueField = data.valueField;\r\n            this.value = data.value ? [data.value] : [];\r\n            this.textValue = 'help-text-value-null'; // æ§ç»ææ textValueå±æ§\r\n        }\r\n\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.valueField;\r\n    }\r\n\r\n    getTextValue(textField: string): string {\r\n        const args = textField.split('.');\r\n        const textArr = this.value.map(helpItem => HelpValue.getPropValue(helpItem, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(',') : '';\r\n    }\r\n\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nexport class CheckboxGroupValue implements IValue {\r\n    clear$ = new EventEmitter();\r\n    valueChanged = new EventEmitter();\r\n    value: any[];\r\n    constructor(value: any[] = []) {\r\n        this.value = value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return this.value.length == 0;\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any[]): void {\r\n        this.value = value;\r\n    }\r\n\r\n    setValue(value: any) {\r\n        this.value = value;\r\n        this.valueChanged.emit(this.value);\r\n    }\r\n\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.CheckboxGroup;\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class DateRangeTimeValue implements IValue {\r\n    startTime: string;\r\n    endTime: string;\r\n    clear$ = new EventEmitter();\r\n\r\n    constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n        this.startTime = value.startTime;\r\n        this.endTime = value.endTime;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.startTime || !this.endTime;\r\n    }\r\n\r\n    setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n        if (value.formatted) {\r\n            this.startTime = value.formatted.split(value.delimiter)[0];\r\n            this.endTime = value.formatted.split(value.delimiter)[1];\r\n        } else {\r\n            this.clearValue();\r\n        }\r\n    }\r\n    getOriginalValue() {\r\n        return `${this.startTime}~${this.endTime}`;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRangeTime;\r\n    }\r\n    clearValue(): void {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n\r\n        this.clear$.emit();\r\n    }\r\n}\r\n\r\n","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´å¸¦æ¶é´æ§ä»¶\r\n */\r\nexport class DateRangeTimeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRangeTime;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    \r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { EventEmitter } from \"@angular/core\";\r\n\r\nexport class RadioGroupValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(data: string = '') {\r\n        this.value = data;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Radio;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    getValueText(): string {\r\n        return this.value;\r\n    }\r\n}\r\n","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { RadioIEnumValue } from './ienumvalue';\r\n\r\n/**\r\n * å¤éç»æ§ä»¶\r\n */\r\nexport class RadioControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Radio;\r\n    }\r\n\r\n    /**\r\n     * å¤éç»æ°æ®æºåè¡¨\r\n     */\r\n    enumValues:Array<RadioIEnumValue>;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { EventEmitter } from \"@angular/core\";\r\n\r\nexport class YearValue implements IValue {\r\n\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(date: string = '') {\r\n        this.value = date;\r\n    }\r\n\r\n    setOriginalValue(value: any): void {\r\n        this.value = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Date;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n}\r\n","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { CompareType } from '../../comparetype';\r\n\r\n/**\r\n * å¹´ææ§ä»¶\r\n */\r\nexport class MonthControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Month;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    //format:string;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æç´¢æ¥æç±»å\r\n     */\r\n    compareType:CompareType;\r\n    showType:string;\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { EventEmitter } from \"@angular/core\";\r\n\r\nexport class MonthValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n\r\n    constructor(date: string = '') {\r\n        this.value = date;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        this.value = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Date;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n}\r\n","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { EventEmitter } from \"@angular/core\";\r\n\r\nexport class YearRangeValue implements IValue {\r\n    startTime: string;\r\n    endTime: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n        this.startTime = value.startTime;\r\n        this.endTime = value.endTime;\r\n    }\r\n    setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n        if (value.formatted) {\r\n            this.startTime = value.formatted.split(value.delimiter)[0];\r\n            this.endTime = value.formatted.split(value.delimiter)[1];\r\n        } else {\r\n            this.clearValue();\r\n        }\r\n    }\r\n    getOriginalValue() {\r\n        return `${this.startTime}~${this.endTime}`;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n    clearValue(): void {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n        this.clear$.emit();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.startTime || !this.endTime;\r\n    }\r\n}\r\n","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * å¹´åº¦åºé´æ§ä»¶\r\n */\r\nexport class YearRangeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.YearRange;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    \r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    showType:string;\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { EventEmitter } from \"@angular/core\";\r\n\r\nexport class MonthRangeValue implements IValue {\r\n    clear$ = new EventEmitter();\r\n\r\n    startTime: string;\r\n    endTime: string;\r\n\r\n    constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n        this.startTime = value.startTime;\r\n        this.endTime = value.endTime;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.startTime || !this.endTime;\r\n    }\r\n\r\n    setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n        if (value.formatted) {\r\n            this.startTime = value.formatted.split(value.delimiter)[0];\r\n            this.endTime = value.formatted.split(value.delimiter)[1];\r\n        } else {\r\n            this.clearValue();\r\n        }\r\n    }\r\n    getOriginalValue() {\r\n        return `${this.startTime}~${this.endTime}`;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n    clearValue(): void {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n        this.clear$.emit();\r\n    }\r\n}\r\n\r\n","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * å¹´æåºé´æ§ä»¶\r\n */\r\nexport class MonthRangeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.MonthRange;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    \r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    showType:string;\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { EventEmitter } from \"@angular/core\";\r\n\r\nexport class InputGroupValue implements IValue{\r\n\r\n    // å¯è½æ¯ç¨æ·æå¨è¾å¥çå­ç¬¦ä¸²ï¼ä¹å¯è½æ¯éè¿å¼¹çªè¿åçå¤ä¸ªå¼\r\n    value: any[];\r\n    // æ§ä»¶åæ¾ç¤ºçå¼\r\n    textValue: string;\r\n    // å¼¹çªæ¨¡å¼ä¸ï¼åå¼¹çªåè¡¨ååªä¸ªå­æ®µçå¼æ å°å°å½åå­æ®µ\r\n    textField: string;\r\n    // æ¯å¦æ¯æå¨è¾å¥çå¼\r\n    isInputText: boolean;\r\n\r\n    clear$ = new EventEmitter();\r\n\r\n    constructor(data: {\r\n        value: any,\r\n        textValue: string,\r\n        textField: string,\r\n        isInputText: boolean\r\n    } = {value: [], textValue: undefined, textField: undefined, isInputText: undefined}){\r\n        this.value = data.value;\r\n        this.textValue = data.textValue ? data.textValue.trim() : '';\r\n        this.textField = data.textField;\r\n        this.isInputText = data.isInputText;\r\n    }\r\n\r\n    getTextValue(targetField: string): string {\r\n        const args = targetField.split('.');\r\n        const textArr = this.value.map(item => this.getPropValue(item, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(','): '';\r\n    }\r\n\r\n    getPropValue(item: any, args: Array<string>): any{\r\n        if(args.length > 1){\r\n            const arg = args.shift();\r\n            if(arg){\r\n                return item[arg] ? this.getPropValue(item[arg], args) : '';\r\n            }\r\n            else {\r\n                return '';\r\n            }\r\n        }\r\n        return item[args[0]];\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.InputGroup;\r\n    }\r\n\r\n    setOriginalValue(value: any) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    getOriginalValue(): string {\r\n        const args = this.textField.split('.');\r\n        const textArr = this.value.map(item => this.getPropValue(item, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(','): '';\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.textValue = undefined;\r\n        this.textField = undefined;\r\n        this.isInputText = undefined;\r\n\r\n        this.clear$.emit();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.textValue;\r\n    }\r\n\r\n}\r\n","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æºè½è¾å¥æ¡æ§ä»¶\r\n */\r\nexport class InputGroupControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼æºè½è¾å¥æ¡æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.InputGroup;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.required;\r\n    }\r\n\r\n    /**\r\n     * æ¯å¦åè®¸è¾å¥\r\n     */\r\n    editable: boolean;\r\n\r\n    /**\r\n     * æé®æ¾ç¤ºææ¬\r\n     */\r\n    groupText: string;\r\n\r\n    /**\r\n     * ä½¿ç¨æ¨¡å¼ï¼ææ¬ãå¼¹åºè¡¨åï¼\r\n     */\r\n    usageMode: string;\r\n\r\n    /**\r\n     * å¼¹åºè¡¨åç¸å³éç½®\r\n     */\r\n    dialogOptions: DialogConfig;\r\n\r\n    /**\r\n     * æé®ç¹å»äºä»¶\r\n     */\r\n    click: any;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n}\r\n\r\nexport class DialogConfig {\r\n    modalId: string;\r\n    mapFields: any;\r\n    title: string;\r\n    width: number;\r\n    height: number;\r\n    // showButtons: boolean;\r\n    // buttons: DialogButtonConfig[];\r\n}\r\n\r\nexport class DialogButtonConfig {\r\n    text: string;\r\n    cls: any;\r\n    handle: any;\r\n}","import { Injectable } from '@angular/core';\r\nimport { FieldConfig } from '../entity/fieldconfig/fieldconfig';\r\nimport { TextControl } from '../entity/controltype/text/textcontrol';\r\nimport { SearchControl } from '../entity/controltype/search/searchcontrol';\r\nimport { DateControl } from '../entity/controltype/date/datecontrol';\r\nimport { DropDownControl } from '../entity/controltype/dropdownlist/dropdowncontrol';\r\nimport { NumberRangeControl } from '../entity/controltype/numberrange/numberrangecontrol';\r\nimport { HelpContol } from '../entity/controltype/help/helpcontrol';\r\nimport { CheckboxGroupControl } from '../entity/controltype/checkbox/checkboxcontrol';\r\n\r\n\r\nimport { IControl } from '../entity/controltype/icontrol';\r\nimport { DateRangeControl } from '../entity/controltype/datarange/daterangecontrol';\r\n\r\nimport { EnumType } from '../entity/controltype/dropdownlist/enumtype';\r\nimport { EnumStringValue } from '../entity/controltype/dropdownlist/stringenumvalue';\r\nimport { CheckboxValue } from '../entity/controltype/checkbox/checkboxvalue';\r\nimport { YearControl } from '../entity/controltype/year/yearcontrol';\r\n\r\nimport { EnumBoolValue } from '../entity/controltype/dropdownlist/boolenumvalue';\r\nimport { EnumIntegerValue } from '../entity/controltype/dropdownlist/integerenumvalue';\r\nimport { DateRangeValue } from '../entity/conditionvalue/daterangevalue';\r\n\r\nimport { TextValue } from '../entity/conditionvalue/textvalue';\r\nimport { SearchValue } from '../entity/conditionvalue/searchvalue';\r\nimport { DateValue } from '../entity/conditionvalue/datevalue';\r\nimport { NumberRangeValue } from '../entity/conditionvalue/numberrangevaue';\r\nimport { DropDownListValue } from '../entity/conditionvalue/dropdownlistvalue';\r\nimport { HelpValue } from '../entity/conditionvalue/helpvalue';\r\nimport { CheckboxGroupValue } from '../entity/conditionvalue/checkboxgroupvalue';\r\nimport { DateRangeTimeValue } from '../entity/conditionvalue/daterangetimevalue';\r\nimport { DateRangeTimeControl } from '../entity/controltype/datarangetime/daterangetimecontrol';\r\nimport { ControlType } from '../entity/controltype';\r\nimport { RadioGroupValue } from '../entity/conditionvalue/radiovalue';\r\nimport { RadioControl } from '../entity/controltype/radio/radiocontrol';\r\nimport { RadioIEnumValue } from '../entity/controltype/radio/ienumvalue';\r\nimport { YearValue } from '../entity/conditionvalue/yearvalue';\r\nimport { MonthControl } from '../entity/controltype/month/monthcontrol';\r\nimport { MonthValue } from '../entity/conditionvalue/month';\r\nimport { YearRangeValue } from '../entity/conditionvalue/yearrange';\r\nimport { YearRangeControl } from '../entity/controltype/yearrange/yearrangecontrol';\r\nimport { MonthRangeValue } from '../entity/conditionvalue/monthrange';\r\nimport { MonthRangeControl } from '../entity/controltype/monthrange/monthrangecontrol';\r\nimport { InputGroupValue } from '../entity/conditionvalue/inputgroup';\r\nimport { DialogButtonConfig, DialogConfig, InputGroupControl } from '../entity/controltype/input-group/inputgroupcontrol';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ListFilterService {\r\n    constructor() { }\r\n    fieldSchemasConvert(filedSchemas: Array<any>): Array<FieldConfig> {\r\n        let fieldConfigs = new Array<FieldConfig>();\r\n        if (!(filedSchemas) || filedSchemas.length <= 0) {\r\n            return fieldConfigs;\r\n        }\r\n        else {\r\n            filedSchemas.forEach(filedSchema => {\r\n                let fieldConfig = new FieldConfig();\r\n                fieldConfig.id = filedSchema.hasOwnProperty('id') ? filedSchema.id : '';\r\n                fieldConfig.labelCode = filedSchema.labelCode;\r\n                fieldConfig.code = filedSchema.hasOwnProperty('code') ? filedSchema.code : '';\r\n                fieldConfig.placeHolder = filedSchema.placeHolder;\r\n                fieldConfig.beginPlaceHolder = filedSchema.beginPlaceHolder;\r\n                fieldConfig.endPlaceHolder = filedSchema.endPlaceHolder;\r\n                fieldConfig.name = filedSchema.name;\r\n                if (!(filedSchema.control) || !(filedSchema.control.controltype)) {\r\n                    fieldConfig.control = new TextControl();\r\n                    fieldConfig.value = new TextValue(filedSchema.value);\r\n                }\r\n                else {\r\n                    if (filedSchema.control.controltype == 'text') {\r\n                        fieldConfig.control = this.getTextControl(filedSchema);\r\n                        fieldConfig.value = new TextValue(filedSchema.value);\r\n                    }\r\n                    else if (filedSchema.control.controltype == 'search') {\r\n                        fieldConfig.control = this.getSearchControl(filedSchema);\r\n                        fieldConfig.value = new SearchValue(filedSchema.value);\r\n                    }\r\n                    else if (filedSchema.control.controltype == 'singleDate') {\r\n                        fieldConfig.control = this.getDateControl(filedSchema);\r\n                        fieldConfig.value = new DateValue(filedSchema.value);\r\n                    }\r\n                    else if (filedSchema.control.controltype == 'date') {\r\n                        fieldConfig.control = this.getDateRangeControl(filedSchema);\r\n                        fieldConfig.value = new DateRangeValue(filedSchema.value);\r\n                    }\r\n                    else if (filedSchema.control.controltype == 'yearRange') {\r\n                        fieldConfig.control = this.getYearRangeControl(filedSchema);\r\n                        fieldConfig.value = new YearRangeValue(filedSchema.value);\r\n                    }\r\n                    else if (filedSchema.control.controltype == 'monthRange') {\r\n                        fieldConfig.control = this.getMonthRangeControl(filedSchema);\r\n                        fieldConfig.value = new MonthRangeValue(filedSchema.value);\r\n                    }\r\n                    else if (filedSchema.control.controltype == 'datetime') {\r\n                        fieldConfig.control = this.getDateRangeTimeControl(filedSchema);\r\n                        fieldConfig.value = new DateRangeTimeValue(filedSchema.value);\r\n                    }\r\n                    else if (filedSchema.control.controltype == 'year') {\r\n                        fieldConfig.control = this.getYearControl(filedSchema);\r\n                        fieldConfig.value = new YearValue(filedSchema.value);\r\n                    }\r\n                    else if (filedSchema.control.controltype == 'month') {\r\n                        fieldConfig.control = this.getMonthControl(filedSchema);\r\n                        fieldConfig.value = new MonthValue(filedSchema.value);\r\n                    }\r\n                    else if (filedSchema.control.controltype == 'dropdown') {\r\n                        fieldConfig.control = this.getDropDownControl(filedSchema);\r\n                        fieldConfig.value = new DropDownListValue(filedSchema.value);\r\n                    }\r\n                    else if (filedSchema.control.controltype == 'number') {\r\n                        fieldConfig.control = this.getNumberRangeControl(filedSchema);\r\n                        fieldConfig.value = new NumberRangeValue(filedSchema.value);\r\n                    }\r\n                    else if (filedSchema.control.controltype == 'help') {\r\n                        fieldConfig.control = this.getLookUpEditControl(filedSchema);\r\n                        fieldConfig.value = new HelpValue(filedSchema.value);\r\n                    }\r\n                    else if (filedSchema.control.controltype == 'checkboxgroup') {\r\n                        fieldConfig.control = this.getCheckboxGroupControl(filedSchema);\r\n                        fieldConfig.value = new CheckboxGroupValue(filedSchema.value);\r\n                    }\r\n                    else if (filedSchema.control.controltype == 'radio') {\r\n                        fieldConfig.control = this.getRadioControl(filedSchema);\r\n                        fieldConfig.value = new RadioGroupValue(filedSchema.value);\r\n                    }\r\n                    else if (filedSchema.control.controltype == 'input-group') {\r\n                        fieldConfig.control = this.getInputGroupControl(filedSchema);\r\n                        fieldConfig.value = new InputGroupValue(filedSchema.value);\r\n                    }\r\n                    else {\r\n                        fieldConfig.control = this.getTextControl(filedSchema);\r\n                        fieldConfig.value = new TextValue(filedSchema.value);\r\n                    }\r\n\r\n                    if (filedSchema.control.enableClear === undefined) {\r\n                        fieldConfig.control.enableClear = true;\r\n                    } else {\r\n                        fieldConfig.control.enableClear = filedSchema.control.enableClear;\r\n                    }\r\n                }\r\n                fieldConfigs.push(fieldConfig);\r\n            });\r\n        }\r\n        return fieldConfigs;\r\n    }\r\n\r\n    private getTextControl(filedSchema: any): IControl {\r\n        let textControl = new TextControl();\r\n        textControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n        textControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n        textControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n        textControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n        return textControl;\r\n    }\r\n    private getInputGroupControl(filedSchema: any): IControl {\r\n        let inputGroupControl = new InputGroupControl();\r\n        inputGroupControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n        inputGroupControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n        inputGroupControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n        inputGroupControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n        inputGroupControl.editable = filedSchema.control.hasOwnProperty('editable') ? filedSchema.control.editable : true;\r\n        inputGroupControl.groupText = filedSchema.control.hasOwnProperty('groupText') ? filedSchema.control.groupText : '<span class=\"f-icon f-icon-lookup\"></span>';\r\n        inputGroupControl.usageMode = filedSchema.control.usageMode;\r\n        inputGroupControl.dialogOptions = this.setInputGroupDialog(filedSchema.control.usageMode, filedSchema.control.modalConfig,filedSchema.id);\r\n        inputGroupControl.click = filedSchema.control.click;\r\n        return inputGroupControl;\r\n    }\r\n    private getDateControl(filedSchema: any): IControl {\r\n        let dateControl = new DateControl();\r\n        dateControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n        dateControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n        dateControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n        dateControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n        dateControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n        dateControl.compareType = filedSchema.control.hasOwnProperty('compareType') ? filedSchema.control.compareType : 0;\r\n        // dateControl.showType = filedSchema.control.hasOwnProperty('showType')? filedSchema.control.showType : '';\r\n        return dateControl;\r\n    }\r\n    private getYearControl(filedSchema: any): IControl {\r\n        let yearControl = new YearControl();\r\n        yearControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n        yearControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n        yearControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n        yearControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n        yearControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n        yearControl.compareType = filedSchema.control.hasOwnProperty('compareType') ? filedSchema.control.compareType : 0;\r\n        // yearControl.showType = filedSchema.control.hasOwnProperty('showType')? filedSchema.control.showType : '';\r\n        return yearControl;\r\n    }\r\n    private getMonthControl(filedSchema: any): IControl {\r\n        let monthControl = new MonthControl();\r\n        monthControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n        monthControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n        monthControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n        monthControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n        monthControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n        monthControl.compareType = filedSchema.control.hasOwnProperty('compareType') ? filedSchema.control.compareType : 0;\r\n        // yearControl.showType = filedSchema.control.hasOwnProperty('showType')? filedSchema.control.showType : '';\r\n        return monthControl;\r\n    }\r\n    private getNumberRangeControl(filedSchema: any): IControl {\r\n        let numberRangeControl = new NumberRangeControl();\r\n        numberRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n        numberRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n        numberRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n        numberRangeControl.precision = filedSchema.control.hasOwnProperty('precision') ? filedSchema.control.precision : 2;\r\n        numberRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n        numberRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n        numberRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n        numberRangeControl.bigNumber = filedSchema.control.hasOwnProperty('bigNumber') ? filedSchema.control.bigNumber : false;\r\n        return numberRangeControl;\r\n    }\r\n\r\n    private getSearchControl(filedSchema: any): IControl {\r\n        let searchControl = new SearchControl();\r\n        searchControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n        searchControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n        searchControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n        searchControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n        return searchControl;\r\n    }\r\n    private getDropDownControl(filedSchema: any): IControl {\r\n        let dropdowncontrol = new DropDownControl();\r\n        dropdowncontrol.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n        filedSchema.control.valueType = filedSchema.control.valueType ? filedSchema.control.valueType : '1';\r\n        dropdowncontrol.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n        dropdowncontrol.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n        dropdowncontrol.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n        if (filedSchema.control.valueType == \"1\") {\r\n            dropdowncontrol.valueType = EnumType.StringType;\r\n            dropdowncontrol.enumValues = filedSchema.control.enumValues as Array<EnumStringValue>;\r\n        }\r\n        else if (filedSchema.control.valueType == \"2\") {\r\n            dropdowncontrol.valueType = EnumType.BoolType;\r\n            dropdowncontrol.enumValues = filedSchema.control.enumValues as Array<EnumBoolValue>;\r\n        }\r\n        else if (filedSchema.control.valueType == \"0\") {\r\n            dropdowncontrol.valueType = EnumType.IntType;\r\n            dropdowncontrol.enumValues = filedSchema.control.enumValues as Array<EnumIntegerValue>;\r\n        }\r\n        return dropdowncontrol;\r\n    }\r\n\r\n    private getLookUpEditControl(filedSchema: any): IControl {\r\n        let lookupEdit = new HelpContol();\r\n        if (!!(filedSchema.control.uri)) {\r\n            lookupEdit.uri = filedSchema.control.uri;\r\n        }\r\n        lookupEdit.textField = filedSchema.control.textField;\r\n        lookupEdit.valueField = filedSchema.control.valueField;\r\n        lookupEdit.idField = filedSchema.control.idField;\r\n        lookupEdit.helpId = filedSchema.control.helpId;\r\n        lookupEdit.mapFields = filedSchema.control.mapFields;\r\n        lookupEdit.context = filedSchema.control.context;\r\n        lookupEdit.preEventCmd = filedSchema.control.preEventCmd;\r\n        lookupEdit.postEventCmd = filedSchema.control.postEventCmd;\r\n        lookupEdit.enableFullTree = filedSchema.control.enableFullTree;\r\n        lookupEdit.loadTreeDataType = filedSchema.control.loadTreeDataType;\r\n        //æ°å¢\r\n        lookupEdit.singleSelect = filedSchema.control.hasOwnProperty('singleSelect') ? filedSchema.control.singleSelect : true;\r\n        lookupEdit.expandLevel = filedSchema.control.expandLevel;\r\n        lookupEdit.enableCascade = filedSchema.control.enableCascade;\r\n        lookupEdit.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n        lookupEdit.displayType = filedSchema.control.hasOwnProperty('displayType') ? filedSchema.control.displayType : \"LIST\";\r\n        lookupEdit.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n        lookupEdit.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n        lookupEdit.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n        lookupEdit.clearFields = filedSchema.control.hasOwnProperty('clearFields')?filedSchema.control.clearFields:'';\r\n        lookupEdit.editable =  filedSchema.control.hasOwnProperty('editable')?filedSchema.control.editable: false;\r\n        lookupEdit.enableMultiFieldSearch =  filedSchema.control.hasOwnProperty('enableMultiFieldSearch')?filedSchema.control.enableMultiFieldSearch: false;\r\n        \r\n        return lookupEdit;\r\n    }\r\n    private getCheckboxGroupControl(filedSchema: any): IControl {\r\n        let checkboxGroupcontrol = new CheckboxGroupControl();\r\n        checkboxGroupcontrol.enumValues = filedSchema.control.enumValues as Array<CheckboxValue>;\r\n        checkboxGroupcontrol.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n        checkboxGroupcontrol.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n        checkboxGroupcontrol.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n        return checkboxGroupcontrol;\r\n    }\r\n    private getDateRangeControl(filedSchema: any): IControl {\r\n        let dateRangeControl = new DateRangeControl();\r\n        dateRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n        dateRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n        dateRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n        dateRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n        dateRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n        dateRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n        dateRangeControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n        // dateRangeControl.showType = filedSchema.control.hasOwnProperty('showType')? filedSchema.control.showType : '';\r\n        return dateRangeControl;\r\n    }\r\n    private getYearRangeControl(filedSchema: any): IControl {\r\n        let yearRangeControl = new YearRangeControl();\r\n        yearRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n        yearRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n        yearRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n        yearRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n        yearRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n        yearRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n        yearRangeControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n        return yearRangeControl;\r\n    }\r\n    private getMonthRangeControl(filedSchema: any): IControl {\r\n        let monthRangeControl = new MonthRangeControl();\r\n        monthRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n        monthRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n        monthRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n        monthRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n        monthRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n        monthRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n        monthRangeControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n        return monthRangeControl;\r\n    }\r\n    private getDateRangeTimeControl(filedSchema: any): IControl {\r\n        let dateRangeControl = new DateRangeTimeControl();\r\n        dateRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n        dateRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n        dateRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n        dateRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n        dateRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n        dateRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n        dateRangeControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n        return dateRangeControl;\r\n    }\r\n    private getRadioControl(filedSchema: any): IControl {\r\n        let checkboxGroupcontrol = new RadioControl();\r\n        checkboxGroupcontrol.enumValues = filedSchema.control.enumValues as Array<RadioIEnumValue>;\r\n        checkboxGroupcontrol.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n        checkboxGroupcontrol.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n        checkboxGroupcontrol.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n        return checkboxGroupcontrol;\r\n    }\r\n    //æ ¹æ®ç±»åï¼new valueå¼\r\n    setValues(controltype, value) {\r\n        if (controltype == 'input') {\r\n            return new TextValue(value);\r\n        }\r\n        else if (controltype == 'search') {\r\n            return new SearchValue(value);\r\n        }\r\n        else if (controltype == 'date') {\r\n            return new DateValue(value);\r\n        }\r\n        else if (controltype == 'year') {\r\n            return new YearValue(value);\r\n        }\r\n        else if (controltype == 'month') {\r\n            return new MonthValue(value);\r\n        }\r\n        else if (controltype == 'daterange') {\r\n            return new DateRangeValue(value);\r\n        }\r\n        else if (controltype == 'daterangetime') {\r\n            return new DateRangeTimeValue(value);\r\n        }\r\n        else if (controltype == 'yearrange') {\r\n            return new YearRangeValue(value);\r\n        }\r\n        else if (controltype == 'monthrange') {\r\n            return new MonthRangeValue(value);\r\n        }\r\n        else if (controltype == 'dropdown') {\r\n            return new DropDownListValue(value);\r\n        }\r\n        else if (controltype == 'number') {\r\n            return new NumberRangeValue(value);\r\n        }\r\n        else if (controltype == 'help') {\r\n            return new HelpValue(value);\r\n        }\r\n        else if (controltype == 'checkboxgroup') {\r\n            return new CheckboxGroupValue(value);\r\n        }\r\n        else if (controltype == 'radio') {\r\n            return new RadioGroupValue(value);\r\n        }\r\n        else if (controltype == 'input-group') {\r\n            return new InputGroupValue(value);\r\n        }\r\n        else {\r\n            return new TextValue(value);\r\n        }\r\n    }\r\n\r\n    /**\r\n * æºè½è¾å¥æ¡æ§ä»¶éè¦å¼¹åºè¡¨åæ¶ï¼å°è¡¨åéç½®JSONæè¿°è½¬æ¢ä¸ºå¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªåæ°\r\n * @param usageMode æºè½è¾å¥æ¡æ§ä»¶ä½¿ç¨æ¨¡å¼\r\n * @param modalConfigData è¡¨åéç½®JSONæè¿°\r\n * @returns å¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªåæ°\r\n */\r\n    private setInputGroupDialog(usageMode: string, modalConfigData: any,id:string): DialogConfig {\r\n        if (usageMode == 'text' || usageMode == undefined || modalConfigData == undefined || id == undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        let dialogConfig = new DialogConfig();\r\n        //dialogConfig.modalId = modalConfigData.modalId;\r\n        dialogConfig.modalId = id;\r\n        if(modalConfigData.mapFields){\r\n            dialogConfig.mapFields = JSON.parse(modalConfigData.mapFields.replace(/'/g, '\"'));\r\n        }\r\n        if (modalConfigData.showHeader) {\r\n            dialogConfig.title = modalConfigData.title;\r\n        }\r\n        dialogConfig.width = modalConfigData.width;\r\n        dialogConfig.height = modalConfigData.height;\r\n        // dialogConfig.showButtons = modalConfigData.showFooterButtons;\r\n        // dialogConfig.buttons = this.setInputGroupDialogButtons(modalConfigData.footerButtons);\r\n        return dialogConfig;\r\n    }\r\n\r\n    /**\r\n     * æºè½è¾å¥æ¡æ§ä»¶éè¦å¼¹åºè¡¨åæ¶ï¼å°å¼¹çªæé®ç»éç½®JSONæè¿°è½¬æ¢ä¸ºå¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªæé®ç»åæ°\r\n     * @param buttonData å¼¹çªæé®ç»éç½®JSONæè¿°\r\n     * @returns å¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªæé®ç»åæ°\r\n     */\r\n    private setInputGroupDialogButtons(buttonData: any): Array<DialogButtonConfig> {\r\n        if (!buttonData) {\r\n            return [];\r\n        }\r\n\r\n        let button: DialogButtonConfig;\r\n        return buttonData.map(item => {\r\n            button = new DialogButtonConfig();\r\n            button.text = item.text;\r\n            if (item.appearance && item.appearance.class) {\r\n                button.cls = item.appearance.class;\r\n            }\r\n            button.handle = item.click;\r\n            return button;\r\n        });\r\n    }\r\n\r\n}\r\n","/**\r\n * æ¯è¾ç¬¦\r\n */\r\nexport enum CompareType{\r\n\r\n    /**\r\n     * ç­äº\r\n     */\r\n    // Equal=1,\r\n    Equal = 0,\r\n\r\n    /**\r\n     * å¤§äº\r\n     */\r\n    GreaterThan = 2,\r\n\r\n    /**\r\n     * å¤§äºæç­äº\r\n     */\r\n    GreaterThanOrEqual = 3,\r\n\r\n    /**\r\n     * å°äº\r\n     */\r\n    LessThan = 4,\r\n\r\n    /**\r\n     * å°äºæç­äº\r\n     */\r\n    LessThanOrEqual = 5, \r\n\r\n    /**\r\n     * ä¹é´\r\n     */\r\n    // BetWeen=6\r\n    Like = 6,\r\n    /**\r\n     * åå«\r\n     */\r\n    In = 14\r\n}","export enum ValueType{\r\n\r\n    /**\r\n     *å¼ç±»å\r\n     */\r\n    Value = 0,\r\n\r\n    /**\r\n     * è¡¨è¾¾å¼\r\n     */\r\n    Express = 1\r\n}","export enum RelationType{\r\n\r\n    /**\r\n     * ä¸\r\n     */\r\n    // And=0,\r\n    And = 1,\r\n\r\n    /**\r\n     * æ\r\n     */\r\n    // Or=1\r\n    Or = 2\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\n\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\nimport { TextValue } from '../../entity/conditionvalue/textvalue';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\n\r\nexport class TextHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const tv = (qc.value as TextValue);\r\n        return Object.keys(tv).length > 0 && tv.value ? [{\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.Like, //like CompareType.like undefined\r\n            'Value' : tv.value,\r\n            'Relation' : RelationType.And, //and undefined\r\n            'Expresstype':ValueType.Value\r\n        }] : [];\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\n\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { DateRangeValue } from '../../entity/conditionvalue/daterangevalue';\r\n\r\nexport class DateRangeHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const arr = [];\r\n        const drv = (qc.value as DateRangeValue);\r\n        if(Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime))\r\n            return arr;\r\n        drv.startTime && arr.push({\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.GreaterThanOrEqual, //GreaterOrEqual\r\n            'Value' : drv.startTime,\r\n            'Relation' : RelationType.And, //and\r\n            'Expresstype': ValueType.Value\r\n        });\r\n        drv.endTime && arr.push({\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.LessThanOrEqual, //LessOrEqual\r\n            'Value' : drv.endTime,\r\n            'Relation' : RelationType.And,//and\r\n            'Expresstype': ValueType.Value\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\n\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { DropDownListValue } from '../../entity/conditionvalue/dropdownlistvalue';\r\nimport { EnumStringValue } from '../../entity/controltype/dropdownlist/stringenumvalue';\r\n\r\nexport class DropDownHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const ddv = (qc.value as DropDownListValue);\r\n        if(ddv === undefined || ddv === null || Object.keys(ddv).length === 0 || Object.keys(ddv.value || {}).length === 0)\r\n            return [];\r\n        return [{\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.Equal, //equal\r\n            // 'Value' : (ddv.value.getEnumValue() as EnumStringValue),\r\n            'Value' : ddv.value,\r\n            'Relation' : RelationType.And, //and\r\n            'Expresstype': ValueType.Value\r\n        }];\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\n\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\nimport { NumberRangeValue } from '../../entity/conditionvalue/numberrangevaue';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\n\r\nexport class NumberRangeHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const arr = [];\r\n        const nrv = (qc.value as NumberRangeValue);\r\n        if(Object.keys(nrv).length === 0)\r\n            return arr;\r\n        (nrv.startValue != null) && arr.push({\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.GreaterThanOrEqual, //GreaterOrEqual\r\n            'Value' : nrv.startValue,\r\n            'Relation' : RelationType.And, //and\r\n            'Expresstype': ValueType.Value\r\n        });\r\n        (nrv.endValue != null) && arr.push({\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.LessThanOrEqual, //LessOrEqual\r\n            'Value' : nrv.endValue,\r\n            'Relation' : RelationType.And,//and\r\n            'Expresstype': ValueType.Value\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\n\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { HelpValue } from '../../entity/conditionvalue/helpvalue';\r\n\r\nexport class SmartHelpHandler implements IQueryConditionHandler{\r\n    // convert(qc: QueryCondition) {\r\n    //     const shv = (qc.value as HelpValue);\r\n    //     if(Object.keys(shv).length === 0 || !shv.value || !shv.valueField){\r\n    //         return [];\r\n    //     }else{\r\n    //         // return [{\r\n    //         //     'FilterField' : qc.fieldCode,\r\n    //         //     'Compare' : CompareType.Equal, //equal\r\n    //         //     'Value' : (shv.value)[shv.valueField],\r\n    //         //     'Relation' : RelationType.And,\r\n    //         //     'Expresstype': ValueType.Value\r\n    //         // }];\r\n    //         return [{\r\n    //             'FilterField' : qc.fieldCode,\r\n    //             'Compare' : CompareType.Equal, //equal\r\n    //             'Value' : HelpValue.getPropValues(shv.value, shv.valueField.split('.')),\r\n    //             'Relation' : RelationType.And,\r\n    //             'Expresstype': ValueType.Value\r\n    //         }];\r\n    //     }\r\n    // }\r\n\r\n    convert(qc: QueryCondition) {\r\n        const shv = (qc.value as HelpValue);\r\n        if(shv.value.length == 0 || !shv.valueField){\r\n            return [];\r\n        }else{\r\n            const arr = [];\r\n            shv.getOriginalValue().split(',').forEach(id => {\r\n                id && arr.push({\r\n                    'FilterField' : qc.fieldCode,\r\n                    'Compare' : CompareType.Equal,\r\n                    'Value' : id,\r\n                    'Relation' : RelationType.Or,\r\n                    'Expresstype':ValueType.Value\r\n                });\r\n            });\r\n            if(arr.length > 0){\r\n                arr[0]['Lbracket'] = '(';\r\n                arr[arr.length -1]['Rbracket'] = ')';\r\n                arr[arr.length -1]['Relation'] = RelationType.And;\r\n                return arr;\r\n            }else{\r\n                return [];\r\n            }\r\n        }\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\n\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SearchValue } from '../../entity/conditionvalue/searchvalue';\r\n\r\nexport class SearchHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const tv = (qc.value as SearchValue);\r\n        return Object.keys(tv).length > 0 && tv.value ? [{\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.Like, //like CompareType.like undefined\r\n            'Value' : tv.value,\r\n            'Relation' : RelationType.And, //and undefined\r\n            'Expresstype':ValueType.Value\r\n        }] : [];\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\n\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { DateValue } from '../../entity/conditionvalue/datevalue';\r\n\r\nexport class DateHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const drv = (qc.value as DateValue);\r\n        return Object.keys(drv).length > 0 && drv.value ? [{\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : qc.control.compareType, //èªå®ä¹\r\n            'Value' : drv.value,\r\n            'Relation' : RelationType.And,\r\n            'Expresstype':ValueType.Value\r\n        }] : [];\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\n\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { CheckboxGroupValue } from '../../entity/conditionvalue/checkboxgroupvalue';\r\nimport { CheckboxIEnumValue } from '../../entity/controltype/checkbox/ienumvalue';\r\n\r\nexport class CheckboxGroupHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const cbgv = (qc.value as CheckboxGroupValue);\r\n        if(Object.keys(cbgv).length === 0 || Object.keys(cbgv.value).length === 0)\r\n            return [];\r\n        let CheckboxArr = [];\r\n        if(cbgv.value.length === 1){\r\n            return [{\r\n                'FilterField' : qc.fieldCode,\r\n                'Compare' : CompareType.Equal,\r\n                'Value' : (cbgv.value[0]),\r\n                'Relation' : RelationType.And,\r\n                'Expresstype': ValueType.Value\r\n            }]\r\n        }\r\n        cbgv.value.forEach(value => {\r\n            CheckboxArr.push({\r\n                'FilterField' : qc.fieldCode,\r\n                'Compare' : CompareType.Equal,\r\n                'Value' : value,\r\n                'Relation' : RelationType.Or,\r\n                'Expresstype': ValueType.Value\r\n            })\r\n        });\r\n        CheckboxArr[0]['Lbracket'] = '(';\r\n        CheckboxArr[CheckboxArr.length - 1]['Rbracket'] = ')';\r\n        CheckboxArr[CheckboxArr.length -1]['Relation'] = RelationType.And;\r\n        return CheckboxArr;\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\n\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { DateRangeTimeValue } from '../../entity/conditionvalue/daterangetimevalue';\r\n\r\nexport class DateRangeTimeHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const arr = [];\r\n        const drv = (qc.value as DateRangeTimeValue);\r\n        if(Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime))\r\n            return arr;\r\n        drv.startTime && arr.push({\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.GreaterThanOrEqual, //GreaterOrEqual\r\n            'Value' : drv.startTime,\r\n            'Relation' : RelationType.And, //and\r\n            'Expresstype': ValueType.Value\r\n        });\r\n        drv.endTime && arr.push({\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.LessThanOrEqual, //LessOrEqual\r\n            'Value' : drv.endTime,\r\n            'Relation' : RelationType.And,//and\r\n            'Expresstype': ValueType.Value\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\n\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { RadioGroupValue } from '../../entity/conditionvalue/radiovalue';\r\n\r\nexport class RadioHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const radiov = (qc.value as RadioGroupValue);\r\n        if(radiov.value === undefined || radiov.value === null ||  Object.keys(radiov).length === 0 || Object.keys(radiov.value).length === 0)\r\n            return [];\r\n        return [{\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.Equal, //equal\r\n            'Value' : radiov.value,\r\n            'Relation' : RelationType.And, //and\r\n            'Expresstype': ValueType.Value\r\n        }];\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\n\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { MonthRangeValue } from '../../entity/conditionvalue/monthrange';\r\n\r\nexport class MonthRangeHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const arr = [];\r\n        const drv = (qc.value as MonthRangeValue);\r\n        if(Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime))\r\n            return arr;\r\n        drv.startTime && arr.push({\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.GreaterThanOrEqual, //GreaterOrEqual\r\n            'Value' : drv.startTime,\r\n            'Relation' : RelationType.And, //and\r\n            'Expresstype': ValueType.Value\r\n        });\r\n        drv.endTime && arr.push({\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.LessThanOrEqual, //LessOrEqual\r\n            'Value' : drv.endTime,\r\n            'Relation' : RelationType.And,//and\r\n            'Expresstype': ValueType.Value\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\n\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { YearRangeValue } from '../../entity/conditionvalue/yearrange';\r\n\r\nexport class YearRangeHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const arr = [];\r\n        const drv = (qc.value as YearRangeValue);\r\n        if(Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime))\r\n            return arr;\r\n        drv.startTime && arr.push({\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.GreaterThanOrEqual, //GreaterOrEqual\r\n            'Value' : drv.startTime,\r\n            'Relation' : RelationType.And, //and\r\n            'Expresstype': ValueType.Value\r\n        });\r\n        drv.endTime && arr.push({\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.LessThanOrEqual, //LessOrEqual\r\n            'Value' : drv.endTime,\r\n            'Relation' : RelationType.And,//and\r\n            'Expresstype': ValueType.Value\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\n\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { MonthValue } from '../../entity/conditionvalue/month';\r\n\r\nexport class MonthHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const drv = (qc.value as MonthValue);\r\n        return Object.keys(drv).length > 0 && drv.value ? [{\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : qc.control.compareType, //èªå®ä¹\r\n            'Value' : drv.value,\r\n            'Relation' : RelationType.And,\r\n            'Expresstype':ValueType.Value\r\n        }] : [];\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\n\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { YearValue } from '../../entity/conditionvalue/yearvalue';\r\n\r\nexport class YearHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const drv = (qc.value as YearValue);\r\n        return Object.keys(drv).length > 0 && drv.value ? [{\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : qc.control.compareType, //èªå®ä¹\r\n            'Value' : drv.value,\r\n            'Relation' : RelationType.And,\r\n            'Expresstype':ValueType.Value\r\n        }] : [];\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\n\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { InputGroupValue } from \"../../entity/conditionvalue/inputgroup\";\r\n\r\nexport class InputGroupHandler implements IQueryConditionHandler {\r\n    convert(qc: QueryCondition) {\r\n        const igv = (qc.value as InputGroupValue);\r\n        const arr = [];\r\n        if(igv.textValue === undefined || igv.textValue === null || igv.textValue.length == 0 ){\r\n            return [];\r\n        }\r\n        else if (igv.isInputText) {\r\n            arr.push({\r\n                'FilterField': qc.fieldCode,\r\n                'Compare': CompareType.Like,\r\n                'Value': igv.textValue,\r\n                'Relation': RelationType.And,\r\n                'Expresstype': ValueType.Value\r\n            });\r\n            return arr;\r\n        }\r\n        else {\r\n            igv.getOriginalValue().split(',').forEach(itemValue => {\r\n                itemValue && arr.push({\r\n                    'FilterField': qc.fieldCode,\r\n                    'Compare': CompareType.Equal,\r\n                    'Value': itemValue,\r\n                    'Relation': RelationType.Or,\r\n                    'Expresstype': ValueType.Value\r\n                });\r\n            });\r\n            if (arr.length > 0) {\r\n                arr[0]['Lbracket'] = '(';\r\n                arr[arr.length - 1]['Rbracket'] = ')';\r\n                arr[arr.length - 1]['Relation'] = RelationType.And;\r\n                return arr;\r\n            } else {\r\n                return [];\r\n            }\r\n        }\r\n    }\r\n}","\r\nimport { IQueryConditionHandler } from \"./handlers/iquerycondition.handler\";\r\nimport { TextHandler } from \"./handlers/text.handler\";\r\nimport { DateRangeHandler } from \"./handlers/daterage.handler\";\r\nimport { DropDownHandler } from \"./handlers/dropdown.handler\";\r\nimport { NumberRangeHandler } from \"./handlers/numberrage.handler\";\r\nimport { SmartHelpHandler } from \"./handlers/smarthelp.handler\";\r\nimport { ControlType } from '../entity/controltype';\r\nimport { SearchHandler } from './handlers/search.handler';\r\nimport { DateHandler } from './handlers/date.handler';\r\nimport { CheckboxGroupHandler } from './handlers/checkboxgroup.handler';\r\nimport { DateRangeTimeHandler } from './handlers/dateragetime.handler';\r\nimport { RadioHandler } from './handlers/radio.handler';\r\nimport { MonthRangeHandler } from './handlers/monthrage.handler';\r\nimport { YearRangeHandler } from './handlers/yearrage.handler';\r\nimport { MonthHandler } from './handlers/month.handler';\r\nimport { YearHandler } from './handlers/year.handler';\r\nimport { InputGroupHandler } from \"./handlers/inputgroup.handler\";\r\n\r\nexport class QueryConditionHandlerFactory {\r\n\r\n    private static _instance: QueryConditionHandlerFactory = null;\r\n    private queryConditionHandlerMapping: Map<ControlType, IQueryConditionHandler> = new Map<ControlType, IQueryConditionHandler>();\r\n    private constructor(){\r\n        this.queryConditionHandlerMapping.set(ControlType.Text, new TextHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.DateRange, new DateRangeHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.DateRangeTime, new DateRangeTimeHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.MonthRange, new MonthRangeHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.YearRange, new YearRangeHandler());\r\n\r\n        this.queryConditionHandlerMapping.set(ControlType.DropDown, new DropDownHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.NumberRange, new NumberRangeHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.Help, new SmartHelpHandler());\r\n\r\n        this.queryConditionHandlerMapping.set(ControlType.Search, new SearchHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.Date, new DateHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.Month, new MonthHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.Year, new YearHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.CheckboxGroup, new CheckboxGroupHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.Radio, new RadioHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.InputGroup, new InputGroupHandler());\r\n    }\r\n    public static getInstance(){\r\n        if(!QueryConditionHandlerFactory._instance){\r\n            QueryConditionHandlerFactory._instance = new QueryConditionHandlerFactory();\r\n        }\r\n        return QueryConditionHandlerFactory._instance;\r\n    }\r\n\r\n    getHandler(controlType: ControlType): IQueryConditionHandler{\r\n        return this.queryConditionHandlerMapping.get(controlType);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { IQueryConditionHandler } from './handlers/iquerycondition.handler';\r\nimport { QueryConditionHandlerFactory } from './querycondition.handler.factory';\r\nimport { QueryCondition } from '../entity/querycondition';\r\n// import { FrameContext } from '@farris/devkit';\r\n// import { IQuerySolutionHandler } from './IQuerySolutionHandler';\r\n// import { FrameworkSessionService } from '@farris/bef';\r\n\r\n\r\n@Injectable()\r\nexport class QuerySolutionService {\r\n\r\n    constructor() {}\r\n\r\n    // private frameContext: FrameContext,\r\n        // private frameworkSessionService: FrameworkSessionService\r\n    // getUserSessionId(): string {\r\n    //     return this.frameworkSessionService.getUserSessionId();\r\n    // }\r\n\r\n    public setFilterConditions(params: Array<QueryCondition>) {\r\n        let queryConditionHandler: IQueryConditionHandler;\r\n        const filterConditionList = [];\r\n        params.forEach(qc => {\r\n            queryConditionHandler = QueryConditionHandlerFactory.getInstance().getHandler(qc.control.getControlType());\r\n            filterConditionList.push(...queryConditionHandler.convert(qc));\r\n        });\r\n        // è®¾ç½®å°NgCommand params.filterå±æ§ä¸ï¼{UISTATE~/root-component/filterConditionList}\r\n        // this.frameContext.uiState['filterConditionList'] = JSON.stringify(filterConditionList);\r\n        // return JSON.stringify(filterConditionList);\r\n        return filterConditionList;\r\n    }\r\n\r\n}\r\n","import { CompareType } from \"./comparetype\";\r\nimport { ValueType } from \"./valuetype\";\r\nimport { RelationType } from \"./relationtype\";\r\nimport { IControl, ControlConvert } from \"./controltype/icontrol\";\r\nimport { IValue, ConditionValueConvert } from \"./conditionvalue/ivalue\";\r\n\r\n/**\r\n * æ¥è¯¢æ¡ä»¶å®ä½ç±»\r\n */\r\nexport class QueryCondition{\r\n\r\n    /**\r\n     * å¯ä¸æ§æ è¯\r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * å·¦æ¬å·\r\n     */\r\n    leftBrackets: string;\r\n\r\n    /**\r\n     * å­æ®µç¼å·\r\n     */\r\n    fieldCode: string;\r\n\r\n    /**\r\n     * å­æ®µåç§°\r\n     */\r\n    fieldName: string;\r\n    name: string;\r\n\r\n    /**\r\n     * æ¯è¾ç¬¦\r\n     */\r\n    compareType: CompareType;\r\n\r\n    /**\r\n     * å¼ç±»å\r\n     */\r\n    valueType: ValueType;\r\n\r\n    /**\r\n     * å¼\r\n     * è¯¥å±æ§ä¸ºIValueæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åæä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n     * 1. ææ¬ç±»åï¼TextValue\r\n     * 2. ä¸æåè¡¨ï¼DropDownListValue\r\n     * 3. æ¥æåºé´ï¼DateRangeValue\r\n     * 4. æ°å­åºé´ï¼NumberRangeValue\r\n     * 5. å¸®å©ç±»åï¼SmartHelpValue\r\n     */\r\n    value: IValue;\r\n\r\n    /**\r\n     * å³æ¬å·\r\n     */\r\n    rightBrackets: string;\r\n\r\n    /**\r\n     * å³ç³»ç¬¦\r\n     */\r\n    relationType: RelationType;\r\n\r\n    /**\r\n     * æ§ä»¶ç±»åï¼ç®ååæ¬ææ¬ç±»åï¼ä¸æåè¡¨ï¼æ¥æåºé´ï¼æ°å­åºé´ï¼å¸®å©ç±»å\r\n     * æ§ä»¶ç±»åä¸ºIControlæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åå¯¹åºä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n     * 1. ææ¬ç±»åï¼TextControl\r\n     * 2. ä¸æåè¡¨ï¼DropDownListControl\r\n     * 3. æ¥æåºé´ï¼DateRangeControl\r\n     * 4. æ°å­åºé´ï¼NumberRangeControl\r\n     * 5. å¸®å©ç±»åï¼SmartHelpContol\r\n     */\r\n    control: IControl;\r\n    // é»è®¤æ¾ç¤º\r\n    placeHolder: string;\r\n    beginPlaceHolder?: string;\r\n    endPlaceHolder?: string;\r\n}\r\n\r\n/**\r\n * æ¥è¯¢æ¡ä»¶åºååä¸ååºååå¨\r\n */\r\n// export class QueryConditionConvert{\r\n\r\n//     /**\r\n//      * åºåå\r\n//      * @param obj æ¥è¯¢æ¡ä»¶å®ä½\r\n//      */\r\n//     convertJObject(obj:QueryCondition):Object{\r\n//         let queryCondition=obj as QueryCondition;\r\n//         let jobj=new Object();\r\n//         jobj[\"id\"]=queryCondition.id;\r\n//         jobj[\"leftBrackets\"]=queryCondition.leftBrackets;\r\n//         jobj[\"fieldCode\"]=queryCondition.fieldCode;\r\n//         jobj[\"fieldName\"]=queryCondition.fieldName;\r\n//         jobj[\"compareType\"]=queryCondition.compareType;\r\n//         jobj[\"valueType\"]=queryCondition.valueType;\r\n//         let valueConvert=new ConditionValueConvert();\r\n//         if(queryCondition.value){\r\n//             jobj[\"value\"]=valueConvert.convertToObject(queryCondition.value);\r\n//         }\r\n//         jobj[\"rightBrackets\"]=queryCondition.rightBrackets;\r\n//         jobj[\"relationType\"]=queryCondition.relationType;\r\n//         let controlConvertor=new ControlConvert();\r\n//         if(queryCondition.control){\r\n//             jobj[\"control\"]=controlConvertor.convertJObject(queryCondition.control);\r\n//         }\r\n//         return jobj;\r\n//     }\r\n\r\n//     /**\r\n//      * ååºåå\r\n//      * @param jobj æ¥è¯¢æ¡ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n//      */\r\n//     initFromJobject(jobj:Object):QueryCondition{\r\n//         let queryCondition=new QueryCondition();\r\n//         queryCondition.id=jobj[\"id\"];\r\n//         queryCondition.fieldCode=jobj[\"fieldCode\"];\r\n//         queryCondition.fieldName=jobj[\"fieldName\"];\r\n//         queryCondition.leftBrackets=jobj[\"leftBrackets\"];\r\n//         queryCondition.compareType=jobj[\"compareType\"] as CompareType;\r\n//         queryCondition.valueType=jobj[\"valueType\"] as ValueType;\r\n//         if(jobj[\"value\"]){\r\n//             let valueConvert=new ConditionValueConvert();\r\n//             queryCondition.value=valueConvert.initFromObject(jobj[\"value\"]);\r\n//         }\r\n//         queryCondition.rightBrackets=jobj[\"rightBrackets\"];\r\n//         queryCondition.relationType=jobj[\"relationType\"] as RelationType;\r\n//         if(jobj[\"control\"]){\r\n//             let controlConvertor=new ControlConvert();\r\n//             queryCondition.control=controlConvertor.initFromJobject(jobj[\"control\"]);\r\n//         }\r\n//         return queryCondition;\r\n//     }\r\n// }\r\n","/**\r\n * æ¯è¾ç¬¦\r\n */\r\nexport enum CompareType{\r\n\r\n    /**\r\n     * ç­äº\r\n     */\r\n    // Equal=1,\r\n    Equal = 0,\r\n\r\n    /**\r\n     * å¤§äº\r\n     */\r\n    GreaterThan=2,\r\n\r\n    /**\r\n     * å¤§äºæç­äº\r\n     */\r\n    GreaterThanOrEqual=3,\r\n\r\n    /**\r\n     * å°äº\r\n     */\r\n    LessThan =4,\r\n\r\n    /**\r\n     * å°äºæç­äº\r\n     */\r\n    LessThanOrEqual = 5, \r\n\r\n    /**\r\n     * ä¹é´\r\n     */\r\n    BetWeen=6\r\n}","export enum ValueType{\r\n\r\n    /**\r\n     *å¼ç±»å\r\n     */\r\n    Value=0,\r\n\r\n    /**\r\n     * å¸®å©ç±»å\r\n     */\r\n    SmartHelp=1,\r\n\r\n    /**\r\n     * æä¸¾ç±»å\r\n     */\r\n    Enum=2,\r\n\r\n    /**\r\n     * è¡¨è¾¾å¼\r\n     */\r\n    Express=3\r\n}","export enum RelationType{\r\n\r\n    /**\r\n     * ä¸\r\n     */\r\n    // And=0,\r\n    And = 1,\r\n\r\n    /**\r\n     * æ\r\n     */\r\n    // Or=1\r\n    Or = 2\r\n}","// import { EnumIntegerValue } from \"./integerenumvalue\";\r\n// import { EnumStringValue } from \"./stringenumvalue\";\r\n// import { EnumBoolValue } from \"./boolenumvalue\";\r\n\r\nexport interface CheckboxIEnumValue{\r\n    getEnumValueName():string;\r\n    getEnumValue():any;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}\r\n\r\nexport class CheckboxEnumValue implements CheckboxIEnumValue{\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { FieldConfig } from '../entity/fieldconfig/fieldconfig';\r\nimport { QueryCondition } from '../entity/querycondition';\r\n// import { SolutionService } from './solution.service';\r\nimport { EnumType } from '../entity/controltype/dropdownlist/enumtype';\r\nimport { EnumBoolValue } from '../entity/controltype/dropdownlist/boolenumvalue';\r\nimport { EnumIntegerValue } from '../entity/controltype/dropdownlist/integerenumvalue';\r\nimport { EnumStringValue } from '../entity/controltype/dropdownlist/stringenumvalue';\r\nimport { ControlType } from '../entity/controltype';\r\nimport { CompareType } from '../entity/comparetype';\r\nimport { DropDownListValue } from '../entity/conditionvalue/dropdownlistvalue';\r\nimport { ValueType } from '../entity/valuetype';\r\nimport { RelationType } from '../entity/relationtype';\r\nimport { NumberRangeValue } from '../entity/conditionvalue/numberrangevaue';\r\nimport { DateRangeValue } from '../entity/conditionvalue/daterangevalue';\r\nimport { TextValue } from '../entity/conditionvalue/textvalue';\r\nimport { DropDownControl } from '../entity/controltype/dropdownlist/dropdowncontrol';\r\nimport { HelpValue } from '../entity/conditionvalue/helpvalue';\r\nimport { CheckboxGroupControl } from '../entity/controltype/checkbox/checkboxcontrol';\r\nimport { SearchValue } from '../entity/conditionvalue/searchvalue';\r\nimport { CheckboxGroupValue } from '../entity/conditionvalue/checkboxgroupvalue';\r\nimport { DateValue } from '../entity/conditionvalue/datevalue';\r\nimport { CheckboxIEnumValue, CheckboxEnumValue } from '../entity/controltype/checkbox/ienumvalue';\r\nimport { DateRangeTimeValue } from '../entity/conditionvalue/daterangetimevalue';\r\n\r\n@Injectable()\r\nexport class ConvertorService {\r\n\r\n    constructor() { }\r\n    // private solutionservice:SolutionService\r\n    /**\r\n    * è·åå·²éæ©çå­æ®µéç½®\r\n    * @param selectedConditions \r\n    */\r\n    getFeildConfigs(selectedConditions: Array<QueryCondition>) {\r\n        let fieldsConfigs = new Array<FieldConfig>();\r\n        if (!selectedConditions || selectedConditions.length <= 0) {\r\n            return fieldsConfigs;\r\n        }\r\n        else {\r\n            selectedConditions.forEach(condition => {\r\n                let fieldConfig = new FieldConfig();\r\n                fieldConfig.id = condition.id;\r\n                fieldConfig.labelCode = condition.fieldCode;\r\n                fieldConfig.name = condition.fieldName;\r\n                fieldConfig.control = condition.control;\r\n                fieldsConfigs.push(fieldConfig);\r\n            });\r\n        }\r\n        return fieldsConfigs;\r\n    }\r\n\r\n    getSelectedFieldConditions(fileds: Array<FieldConfig>, selectedFieldConditions: Array<QueryCondition>) {\r\n        // console.log(selectedFieldConditions);\r\n        let tempSelectedFieldConditions = new Array<QueryCondition>();\r\n        tempSelectedFieldConditions = this.arrayClone(selectedFieldConditions);\r\n        selectedFieldConditions = new Array<QueryCondition>();\r\n        fileds.forEach(filed => {\r\n            filed.control = this.getDropListEnumValues(filed.control as DropDownControl);\r\n            // filed.control = this.getCheckGroupEnumValues(filed.control as CheckboxGroupControl);\r\n            if (tempSelectedFieldConditions.length > 0) {\r\n                let tempIndex = tempSelectedFieldConditions.findIndex(x => x.id == filed.id);\r\n                if (tempIndex != (-1)) {\r\n                    selectedFieldConditions.push(tempSelectedFieldConditions[tempIndex]);\r\n                }\r\n                else {\r\n                    selectedFieldConditions = this.getNewFieldConditions(filed, selectedFieldConditions);\r\n                }\r\n            } else {\r\n                selectedFieldConditions = this.getNewFieldConditions(filed, selectedFieldConditions);\r\n            }\r\n\r\n        });\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDropListEnumValues(control: DropDownControl): DropDownControl {\r\n        if (control.valueType == EnumType.BoolType) {\r\n            let enumValues = new Array<EnumBoolValue>();\r\n            control.enumValues.forEach(element => {\r\n                enumValues.push(Object.assign(new EnumBoolValue(), element));\r\n            });\r\n            control.enumValues = enumValues;\r\n        }\r\n        else if (control.valueType == EnumType.IntType) {\r\n            let enumValues = new Array<EnumIntegerValue>();\r\n            control.enumValues.forEach(element => {\r\n                enumValues.push(Object.assign(new EnumIntegerValue(), element));\r\n            });\r\n            control.enumValues = enumValues;\r\n        }\r\n        else if (control.valueType == EnumType.StringType) {\r\n            let enumValues = new Array<EnumStringValue>();\r\n            control.enumValues.forEach(element => {\r\n                enumValues.push(Object.assign(new EnumStringValue(), element));\r\n            });\r\n            control.enumValues = enumValues;\r\n        }\r\n        return control;\r\n    }\r\n\r\n    private getCheckGroupEnumValues(control: CheckboxGroupControl): CheckboxGroupControl {\r\n        let enumValues = new Array<CheckboxIEnumValue>();\r\n        control.enumValues.forEach(element => {\r\n            enumValues.push(Object.assign(new CheckboxEnumValue(), element));\r\n        });\r\n        control.enumValues = enumValues;\r\n        return control;\r\n    }\r\n\r\n    public getNewFieldConditions(filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        let selectedFieldCondition = new QueryCondition();\r\n\r\n        if (filed.control.getControlType() == ControlType.Text) {\r\n            selectedFieldConditions = this.getTextValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.DateRange) {\r\n            selectedFieldConditions = this.getDateRangeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.DateRangeTime) {\r\n            selectedFieldConditions = this.getDateRangeTimeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.MonthRange) {\r\n            selectedFieldConditions = this.getDateRangeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.YearRange) {\r\n            selectedFieldConditions = this.getDateRangeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.NumberRange) {\r\n            selectedFieldConditions = this.getNumberRangeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Help) {\r\n            selectedFieldConditions = this.getSmartHelpValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.DropDown) {\r\n            selectedFieldConditions = this.getDropDownListValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Search) {\r\n            selectedFieldConditions = this.getSearchValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Date) {\r\n            selectedFieldConditions = this.getDateValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Year) {\r\n            selectedFieldConditions = this.getDateValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Month) {\r\n            selectedFieldConditions = this.getDateValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.CheckboxGroup) {\r\n            selectedFieldConditions = this.getCheckboxGroupValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Radio) {\r\n            selectedFieldConditions = this.getRadioValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.InputGroup) {\r\n            selectedFieldConditions = this.getInputGroupValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDropDownListValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.id = filed.id;\r\n        selectedFieldCondition.fieldCode = filed.labelCode;\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.fieldName = filed.name;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldCondition.valueType = ValueType.Value;\r\n        selectedFieldCondition.value = filed.value;\r\n        selectedFieldCondition.relationType = RelationType.And;\r\n        selectedFieldCondition.control = filed.control;\r\n        this.getDropListEnumValues(selectedFieldCondition.control as DropDownControl);\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getCheckboxGroupValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.id = filed.id;\r\n        selectedFieldCondition.fieldCode = filed.labelCode;\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.fieldName = filed.name;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldCondition.valueType = ValueType.Value;\r\n        selectedFieldCondition.value = filed.value;\r\n        selectedFieldCondition.relationType = RelationType.And;\r\n        selectedFieldCondition.control = filed.control;\r\n        this.getCheckGroupEnumValues(selectedFieldCondition.control as CheckboxGroupControl);\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getRadioValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.id = filed.id;\r\n        selectedFieldCondition.fieldCode = filed.labelCode;\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.fieldName = filed.name;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldCondition.valueType = ValueType.Value;\r\n        selectedFieldCondition.value = filed.value;\r\n        selectedFieldCondition.relationType = RelationType.And;\r\n        selectedFieldCondition.control = filed.control;\r\n        this.getCheckGroupEnumValues(selectedFieldCondition.control as CheckboxGroupControl);\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getSmartHelpValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.id = filed.id;\r\n        selectedFieldCondition.fieldCode = filed.labelCode;\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.fieldName = filed.name;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldCondition.valueType = ValueType.Value;\r\n        selectedFieldCondition.value = filed.value;\r\n        selectedFieldCondition.relationType = RelationType.And;\r\n        selectedFieldCondition.control = filed.control;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getNumberRangeValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.id = filed.id;\r\n        selectedFieldCondition.fieldCode = filed.labelCode;\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.fieldName = filed.name;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldCondition.valueType = ValueType.Value;\r\n        selectedFieldCondition.value = filed.value;\r\n        selectedFieldCondition.relationType = RelationType.And;\r\n        selectedFieldCondition.control = filed.control;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDateRangeValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.id = filed.id;\r\n        selectedFieldCondition.fieldCode = filed.labelCode;\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.fieldName = filed.name;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldCondition.valueType = ValueType.Value;\r\n        selectedFieldCondition.value = filed.value;\r\n        selectedFieldCondition.relationType = RelationType.And;\r\n        selectedFieldCondition.control = filed.control;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDateRangeTimeValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.id = filed.id;\r\n        selectedFieldCondition.fieldCode = filed.labelCode;\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.fieldName = filed.name;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldCondition.valueType = ValueType.Value;\r\n        selectedFieldCondition.value = filed.value;\r\n        selectedFieldCondition.relationType = RelationType.And;\r\n        selectedFieldCondition.control = filed.control;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getTextValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.id = filed.id;\r\n        selectedFieldCondition.fieldCode = filed.labelCode;\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.fieldName = filed.name;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldCondition.valueType = ValueType.Value;\r\n        selectedFieldCondition.value = filed.value;\r\n        selectedFieldCondition.relationType = RelationType.And;\r\n        selectedFieldCondition.control = filed.control;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n    private getInputGroupValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.id = filed.id;\r\n        selectedFieldCondition.fieldCode = filed.labelCode;\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.fieldName = filed.name;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldCondition.valueType = ValueType.Value;\r\n        selectedFieldCondition.value = filed.value;\r\n        selectedFieldCondition.relationType = RelationType.And;\r\n        selectedFieldCondition.control = filed.control;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDateValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.id = filed.id;\r\n        selectedFieldCondition.fieldCode = filed.labelCode;\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.fieldName = filed.name;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldCondition.valueType = ValueType.Value;\r\n        selectedFieldCondition.value = filed.value;\r\n        selectedFieldCondition.relationType = RelationType.And;\r\n        selectedFieldCondition.control = filed.control;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getSearchValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.id = filed.id;\r\n        selectedFieldCondition.fieldCode = filed.labelCode;\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.fieldName = filed.name;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldCondition.valueType = ValueType.Value;\r\n        selectedFieldCondition.value = filed.value;\r\n        selectedFieldCondition.relationType = RelationType.And;\r\n        selectedFieldCondition.control = filed.control;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private arrayClone(input: Array<any>): Array<any> {\r\n        let result = new Array<any>();\r\n        if (input && input.length > 0) {\r\n            input.forEach(element => {\r\n                result.push(Object.assign({}, element));\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n}","import { InjectionToken } from '@angular/core';\r\nimport { QueryCondition } from '../entity/querycondition';\r\n\r\nexport interface ListFilterHandler{\r\n    setCurrentFilterConditions(conditions: QueryCondition[]): void;\r\n}\r\n\r\nexport const LISTFILTER_HANDLER_TOKEN = new InjectionToken<ListFilterHandler>('gsp-cmp/LISTFILTER_HANDLER');","import {\r\n    Component, OnInit, Input, ViewChild, AfterViewInit, ChangeDetectorRef,\r\n    ChangeDetectionStrategy, Output, EventEmitter, ElementRef,\r\n    Renderer2, Injector, LOCALE_ID, Optional, InjectFlags, OnDestroy\r\n} from '@angular/core';\r\nimport { FieldConfig } from './entity/fieldconfig/fieldconfig';\r\nimport { QueryCondition } from './entity/querycondition';\r\nimport { ControlType } from './entity/controltype';\r\nimport { ListFilterService } from './service/list-filter.service';\r\nimport { QuerySolutionService } from './submithandlers/query-solution.service';\r\nimport { ConvertorService } from './service/convertorservice';\r\nimport { TextValue } from './entity/conditionvalue/textvalue';\r\nimport { HelpValue } from './entity/conditionvalue/helpvalue';\r\nimport { DropDownListValue } from './entity/conditionvalue/dropdownlistvalue';\r\nimport { DateRangeValue } from './entity/conditionvalue/daterangevalue';\r\nimport { NumberRangeValue } from './entity/conditionvalue/numberrangevaue';\r\nimport { SearchValue } from './entity/conditionvalue/searchvalue';\r\nimport { DateValue } from './entity/conditionvalue/datevalue';\r\nimport { CheckboxGroupValue } from './entity/conditionvalue/checkboxgroupvalue';\r\nimport { DateRangeTimeValue } from './entity/conditionvalue/daterangetimevalue';\r\nimport { ListFilterHandler, LISTFILTER_HANDLER_TOKEN } from './interface/IistFilterHandler';\r\nimport { RadioGroupValue } from './entity/conditionvalue/radiovalue';\r\nimport { MonthValue } from './entity/conditionvalue/month';\r\nimport { YearValue } from './entity/conditionvalue/yearvalue';\r\nimport { YearRangeValue } from './entity/conditionvalue/yearrange';\r\nimport { MonthRangeValue } from './entity/conditionvalue/monthrange';\r\nimport { InputGroupValue } from './entity/conditionvalue/inputgroup';\r\nimport { IdService, OverLayHiddenService } from '@farris/ui-common';\r\n\r\n@Component({\r\n    selector: 'farris-list-filter',\r\n    templateUrl: './list-filter.component.html',\r\n    styleUrls: ['./list-filter.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ListFilterComponent implements OnInit, AfterViewInit,OnDestroy {\r\n\r\n    @ViewChild('filterMainBasis') filterMainBasisRef: ElementRef;\r\n    @ViewChild('floatPanel') floatPanel: ElementRef;\r\n    //  è¡¨åå·¦å¯¹é½\r\n    @Input() alLeft = false;\r\n    //  å¹³åç©ºé´\r\n    @Input() autoWidth = true;\r\n    //  å®æ¶æç´¢\r\n    @Input() liveSearch = false;\r\n    //  labelçå®½åº¦æ¯å¦èªéåº\r\n    @Input() autoLabel = false;\r\n    //  æ¯å¦ç¦ç¨\r\n    @Input() disabled = false;\r\n\r\n    @Input() filterClass: string;\r\n    @Input() filterPaddingNone = false;\r\n\r\n    @Input() filterType: string;\r\n    // åå§åå¼\r\n    _defaultValue: FieldConfig[];\r\n    // é»è®¤å¼æ¯ç©ºå¼æ¶æ§è¡æ¥è¯¢ï¼å¼å®¹æ§æ¹å¼\r\n    @Input() defaultEmptyValueSearch=true;\r\n    @Input()\r\n    set defaultValue(configs: FieldConfig[]) {\r\n        this._defaultValue = configs;\r\n        let canFilter=this.defaultEmptyValueSearch||configs&&configs.length>0;\r\n        if(canFilter){\r\n            setTimeout(() => {\r\n                this.setFilterValue(this._defaultValue);\r\n            });\r\n        }\r\n    }\r\n    get defaultValue() {\r\n        return this._defaultValue;\r\n    }\r\n\r\n    @Output() query = new EventEmitter();\r\n    @Output() clear = new EventEmitter();\r\n    @Output() searchChange = new EventEmitter();\r\n    @Output() conditionsChange = new EventEmitter();\r\n\r\n    filterDatas: Array<FieldConfig>;\r\n    //  filterWidth:number = 1000;\r\n    //  æ è®°æ¯å¦ææ»å¨æ¡\r\n    //  hasScroll = true;\r\n    //  éè¦çå¬æ¶æçè¡¨å\r\n    //  resizeGroups: listFilterGroup;\r\n    // ç­éiconé¨åå°çº¢ç¹\r\n    showExpandTag = false;\r\n    //  ååºå¼å®¹å¨\r\n    //  @ViewChild('resizedContainer') resizedContainerEl;\r\n    //  ååºå¼åå®¹å®¹å¨\r\n    //  @ViewChild('resizedContent') resizedContentEl;\r\n    //  @ViewChild('resizeLists') resizeListsEl;\r\n    //  @ViewChild('simulateExtend') simulateExtendEl;\r\n\r\n    //  @ViewChild('resizedContainer', { read: FResizedDirective })\r\n    //  resizedContainerDirective: FResizedDirective;\r\n\r\n    /** æç´¢è¡¨ååè¡¨ */\r\n    _filterList: Array<any>;\r\n\r\n    /** æ¯å¦éè¦æ¾ç¤ºå±å¼æ´å¤icon */\r\n    showMoreIcon = false;\r\n    //  moreIconWidth:number = 0;\r\n    showFilter = false;\r\n    // æ¯å¦å±ç°åºçåªæä¸ä¸ªæç´¢æ§ä»¶\r\n    formExpand = false;\r\n    // æäº¤è¡¨åæ°æ®\r\n    //  queryList;\r\n    // éèæäº¤è¡¨åæ°æ®\r\n    //  extendqueryList;\r\n    /** å¾ªç¯è¡¨å */\r\n    listFilterConditions: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** ç¨æ¥å­å¨setvalueåæ°æ® */\r\n    stagListFilterConditions: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** è®°å½é»è®¤æ¶èµ·çæç´¢è¡¨ååè¡¨ */\r\n    extendFilterList: Array<QueryCondition> = [];\r\n    /** è®°å½æ¾ç¤ºçæç´¢è¡¨ååè¡¨ */\r\n    showFilterList: Array<QueryCondition> = [];\r\n    /** æ¾ç¤ºä¸­è¡¨åçå¿å¡«é¡¹ */\r\n    requiredListFilter: Array<QueryCondition> = [];\r\n    /** éèä¸­è¡¨åçå¿å¡«é¡¹ */\r\n    //  extendRequiredListFilter: Array<QueryCondition> = [];\r\n    /** è¡¨åæ¯å¦åè®¸æäº¤ */\r\n    canSubmit = false;\r\n    /** æ©å±è¡¨åæ¯å¦åè®¸æäº¤ */\r\n    //  extendCanSubmit:boolean = false;\r\n\r\n    localeIds = {\r\n        en: 'en',\r\n        'zh-CHS': 'zh-CHS'\r\n    };\r\n    currentLocale = 'zh-CHS';\r\n    @Input() isControlInline = true;\r\n\r\n    @Input()\r\n    get filterList(): Array<any> {\r\n        return this._filterList;\r\n    }\r\n    set filterList(filterList: Array<any>) {\r\n        this._filterList = filterList;\r\n        this.initFilterList();\r\n    }\r\n\r\n    /**\r\n     * ç»ä»¶æå¡æ¥å£\r\n     */\r\n    listfilterHandler: ListFilterHandler;\r\n    \r\n    fieldCodeOfClearFields: Array<string> = [];\r\n\r\n    private idService: IdService;\r\n    UPDATE_FILTER_VALUES_TIMER = null;\r\n    private overLayService: OverLayHiddenService = null;\r\n    constructor(\r\n        private filterService: ListFilterService,\r\n        private cd: ChangeDetectorRef,\r\n        private handler: QuerySolutionService,\r\n        private convertorService: ConvertorService,\r\n        private render: Renderer2,\r\n        @Optional() private injector: Injector,\r\n    ) {\r\n        if (this.injector) {\r\n            this.currentLocale = this.injector.get(LOCALE_ID);\r\n            this.listfilterHandler = this.injector.get<ListFilterHandler>(LISTFILTER_HANDLER_TOKEN, null, InjectFlags.Optional);\r\n            this.idService = this.injector.get(IdService);\r\n            this.overLayService = this.injector.get(OverLayHiddenService, null);\r\n        }\r\n        if (!this.overLayService) {\r\n            this.overLayService = new OverLayHiddenService();\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        // if (this.currentLocale === this.localeIds['en']) {\r\n        //     this.isControlInline = false;\r\n        // } else {\r\n        //     this.isControlInline = true;\r\n        // }\r\n        this.canShowMoreIcon();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.autoWidth && !this.formExpand && this.filterMainBasisRef) {\r\n            const basicList = this.filterMainBasisRef.nativeElement.querySelectorAll('.filter-input-list');\r\n            let basicWidth = 0;\r\n            if (basicList && basicList.length) {\r\n                for (let k = 0; k < basicList.length; k++) {\r\n                    const offW = Math.ceil(parseFloat(basicList[k].offsetWidth || 0));\r\n                    if (offW > 0) {\r\n                        basicWidth += offW;\r\n                    }\r\n                }\r\n            }\r\n            if (basicWidth > 0) {\r\n                this.render.setStyle(this.filterMainBasisRef.nativeElement, 'width', basicWidth + 'px');\r\n            }\r\n        }\r\n\r\n    }\r\n    ngOnDestroy(){\r\n        if (this.floatPanel) {\r\n            this.overLayService.destory(this.floatPanel.nativeElement);\r\n        }\r\n    }\r\n    /** åå§åå¤çè¡¨åæ°æ® */\r\n    initFilterList() {\r\n        this.listFilterConditions = new Array<QueryCondition>();\r\n        this.extendFilterList = [];\r\n        this.showFilterList = [];\r\n        this.filterDatas = this.filterService.fieldSchemasConvert(this._filterList);\r\n        if (this.filterDatas && this.filterDatas.length) {\r\n            this.listFilterConditions = this.convertorService.getSelectedFieldConditions(this.filterDatas, this.listFilterConditions);\r\n            this.stagListFilterConditions = this.listFilterConditions.map(o => ({ ...o }));\r\n            // å­å¨æ©å±é¡¹åé»è®¤å±ç¤ºè¡¨å\r\n            this.listFilterConditions.forEach(field => {\r\n                if (field.control.isExtend) {\r\n                    this.extendFilterList.push(field);\r\n                } else {\r\n                    this.showFilterList.push(field);\r\n                }\r\n            });\r\n            // å¤æ­æ¯å¦æ¯å·¦å¯¹é½ åªæä¸ä¸ªæç´¢\r\n            const _basisFilterList = this.listFilterConditions.filter((field) => {\r\n                return !field.control.isExtend;\r\n            })\r\n            if (_basisFilterList && _basisFilterList.length === 1 && this.getControlType(_basisFilterList[0]) === 'search') {\r\n                this.formExpand = true;\r\n            }\r\n            this.conditionChangeHandler();\r\n            this.inSetCurrentFilterConditions();\r\n            // å­å¨é»è®¤å±ç¤ºä¸­å¿å¡«é¡¹\r\n            this.requiredListInit();\r\n            this.canShowMoreIcon();\r\n            //  this.listSearch();\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    inSetCurrentFilterConditions() {\r\n        if (this.listfilterHandler) {\r\n            this.listfilterHandler.setCurrentFilterConditions(this.listFilterConditions);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     * @param selectedFieldCondition\r\n     */\r\n    getControlType(selectedFieldCondition: QueryCondition): string {\r\n        if (selectedFieldCondition) {\r\n            if (selectedFieldCondition.control.getControlType() == ControlType.Text) {\r\n                return 'input';\r\n            } else if (selectedFieldCondition.control.getControlType() == ControlType.Search) {\r\n                return 'search';\r\n            } else if (selectedFieldCondition.control.getControlType() == ControlType.Date) {\r\n                return 'date';\r\n            } else if (selectedFieldCondition.control.getControlType() == ControlType.Month) {\r\n                return 'month';\r\n            } else if (selectedFieldCondition.control.getControlType() == ControlType.Year) {\r\n                return 'year';\r\n            } else if (selectedFieldCondition.control.getControlType() == ControlType.DateRange) {\r\n                return 'daterange';\r\n            } else if (selectedFieldCondition.control.getControlType() == ControlType.DateRangeTime) {\r\n                return 'daterangetime';\r\n            } else if (selectedFieldCondition.control.getControlType() == ControlType.MonthRange) {\r\n                return 'monthrange';\r\n            } else if (selectedFieldCondition.control.getControlType() == ControlType.YearRange) {\r\n                return 'yearrange';\r\n            } else if (selectedFieldCondition.control.getControlType() == ControlType.DropDown) {\r\n                return 'dropdown';\r\n            } else if (selectedFieldCondition.control.getControlType() == ControlType.NumberRange) {\r\n                return 'number';\r\n            } else if (selectedFieldCondition.control.getControlType() == ControlType.Help) {\r\n                return 'help';\r\n            } else if (selectedFieldCondition.control.getControlType() == ControlType.CheckboxGroup) {\r\n                return 'checkboxgroup';\r\n            } else if (selectedFieldCondition.control.getControlType() == ControlType.Radio) {\r\n                return 'radio';\r\n            } else if (selectedFieldCondition.control.getControlType() == ControlType.InputGroup) {\r\n                return 'input-group';\r\n            } else {\r\n                return 'input';\r\n            }\r\n        }\r\n\r\n    }\r\n    /** è·å¾ç±»å */\r\n    getStyle(currentItem: any): string {\r\n        const defaultCondtionStyle = 'col-12 col-md-6 col-xl-3 col-el-2';\r\n        return (this.filterClass && !this.autoWidth) ? this.filterClass : defaultCondtionStyle;\r\n    }\r\n\r\n    /** å¤æ­æ¯å¦éè¦æ¾ç¤ºæ´å¤æé® */\r\n    canShowMoreIcon() {\r\n        if (this.extendFilterList.length > 0) {\r\n            this.showMoreIcon = true;\r\n        } else {\r\n            this.showMoreIcon = false;\r\n        }\r\n    }\r\n\r\n    /** å¤æ­æ¯å¦ææå¿å¡«é¡¹é½å¡«åå®æ¯ */\r\n    canSubmitFilter(requirelist) {\r\n        let formCanSubmit = false;\r\n        if (!requirelist || !requirelist.length) {\r\n            formCanSubmit = true;\r\n            return formCanSubmit;\r\n        } else {\r\n            for (let i = 0; i < requirelist.length; i++) {\r\n                const item = requirelist[i];\r\n                if (item.control.getControlType() === ControlType.Text) {\r\n                    const tv = (item.value as TextValue);\r\n                    if (Object.keys(tv).length < 0 || !tv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.Help) {\r\n                    const shv = (item.value as HelpValue);\r\n                    if (Object.keys(shv).length === 0 || !shv.value || !shv.valueField) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.DropDown) {\r\n                    const ddv = (item.value as DropDownListValue);\r\n                    if (Object.keys(ddv).length === 0 || !ddv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.DateRange) {\r\n                    const drv = (item.value as DateRangeValue);\r\n                    if (Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.DateRangeTime) {\r\n                    const drv = (item.value as DateRangeTimeValue);\r\n                    if (Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.MonthRange) {\r\n                    const mrv = (item.value as MonthRangeValue);\r\n                    if (Object.keys(mrv).length === 0 || (!mrv.startTime && !mrv.endTime)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.YearRange) {\r\n                    const yrv = (item.value as YearRangeValue);\r\n                    if (Object.keys(yrv).length === 0 || (!yrv.startTime && !yrv.endTime)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.NumberRange) {\r\n                    const nrv = (item.value as NumberRangeValue);\r\n                    if (Object.keys(nrv).length === 0 || (!nrv.startValue && !nrv.endValue)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.Search) {\r\n                    const sv = (item.value as SearchValue);\r\n                    if (Object.keys(sv).length < 0 || !sv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.Date) {\r\n                    const dv = (item.value as DateValue);\r\n                    if (Object.keys(dv).length < 0 || !dv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.Month) {\r\n                    const mv = (item.value as MonthValue);\r\n                    if (Object.keys(mv).length < 0 || !mv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.Year) {\r\n                    const yv = (item.value as YearValue);\r\n                    if (Object.keys(yv).length < 0 || !yv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.CheckboxGroup) {\r\n                    const cbgv = (item.value as CheckboxGroupValue);\r\n                    if (Object.keys(cbgv).length === 0 || Object.keys(cbgv.value).length === 0) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.Radio) {\r\n                    const ddv = (item.value as RadioGroupValue);\r\n                    if (Object.keys(ddv).length === 0 || !ddv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.InputGroup) {\r\n                    const sv = (item.value as InputGroupValue);\r\n                    if (Object.keys(sv).length < 0 || !sv.textValue) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n\r\n            }\r\n            return formCanSubmit;\r\n        }\r\n\r\n    }\r\n    /** æç´¢è¡¨ååå */\r\n    onSearch($event, item) {\r\n        if (this.disabled) { return; }\r\n        this.conditionChangeHandler(false);\r\n        this.searchChange.emit({ item, conditions: this.listFilterConditions, instance: this});\r\n        this.inSetCurrentFilterConditions();\r\n        this.canSubmit = this.canSubmitFilter(this.requiredListFilter);\r\n        if (item.control.isExtend || !this.canSubmit || !this.liveSearch) {\r\n            return;\r\n        }\r\n        this.submit('showFormData', this.listFilterConditions);\r\n    }\r\n    /** å¼å§ç­é */\r\n    filterClick() {\r\n        if (this.disabled || !this.canSubmit) { return; }\r\n        this.submit('showFormData', this.listFilterConditions);\r\n    }\r\n    /** æ¶æé¨åç¹å»ç¡®å®æäº¤ */\r\n    listSearch() {\r\n        if (this.disabled || !this.canSubmit) { return; }\r\n        this.showFilter = false;\r\n        this.submit('extendFormData', this.listFilterConditions);\r\n    }\r\n    /** åæ¶æç´¢ */\r\n    listSearchCancel() {\r\n        this.showFilter = false;\r\n    }\r\n    /** æäº¤è¡¨å */\r\n    submit(type, filterlist) {\r\n        let queryList;\r\n        queryList = this.handler.setFilterConditions(filterlist);\r\n        if (type == 'extendFormData') {\r\n            if (queryList.length > 0) {\r\n                this.showExpandTag = true;\r\n            }\r\n            else {\r\n                this.showExpandTag = false;\r\n            }\r\n        }\r\n        this.query.emit({ type, data: JSON.stringify(queryList) });\r\n    }\r\n    /** å¯¹å¤æä¾è·å¾è¡¨åæç´¢æ°æ® */\r\n    getFilterData() {\r\n        let queryList;\r\n        queryList = this.handler.setFilterConditions(this.listFilterConditions);\r\n        return JSON.stringify(queryList);\r\n    }\r\n    /** è·åå±ç¤ºå¨å¤é¨çè¡¨åé¿åº¦ */\r\n    getShowLength() {\r\n        if (this.showFilterList) {\r\n            return this.showFilterList.length;\r\n        }\r\n    }\r\n    /** æ¸ç©ºæ¡ä»¶ */\r\n    resetSearch() {\r\n        if (this.disabled) { return; }\r\n        if (this.listFilterConditions && this.listFilterConditions.length) {\r\n            this.listFilterConditions.forEach(listFilterCondition => {\r\n                if (listFilterCondition.control.getControlType() == ControlType.Text) {\r\n                    listFilterCondition.value = new TextValue();\r\n                } else if (listFilterCondition.control.getControlType() == ControlType.Search) {\r\n                    listFilterCondition.value = new SearchValue();\r\n                } else if (listFilterCondition.control.getControlType() == ControlType.Date) {\r\n                    listFilterCondition.value = new DateValue();\r\n                } else if (listFilterCondition.control.getControlType() == ControlType.Month) {\r\n                    listFilterCondition.value = new MonthValue();\r\n                } else if (listFilterCondition.control.getControlType() == ControlType.Year) {\r\n                    listFilterCondition.value = new YearValue();\r\n                } else if (listFilterCondition.control.getControlType() == ControlType.DateRange) {\r\n                    listFilterCondition.value = new DateRangeValue();\r\n                } else if (listFilterCondition.control.getControlType() == ControlType.MonthRange) {\r\n                    listFilterCondition.value = new MonthRangeValue();\r\n                } else if (listFilterCondition.control.getControlType() == ControlType.YearRange) {\r\n                    listFilterCondition.value = new YearRangeValue();\r\n                } else if (listFilterCondition.control.getControlType() == ControlType.DropDown) {\r\n                    listFilterCondition.value = new DropDownListValue();\r\n                } else if (listFilterCondition.control.getControlType() == ControlType.NumberRange) {\r\n                    listFilterCondition.value = new NumberRangeValue();\r\n                } else if (listFilterCondition.control.getControlType() == ControlType.Help) {\r\n                    listFilterCondition.value = new HelpValue();\r\n                } else if (listFilterCondition.control.getControlType() == ControlType.CheckboxGroup) {\r\n                    listFilterCondition.value = new CheckboxGroupValue();\r\n                } else if (listFilterCondition.control.getControlType() == ControlType.Radio) {\r\n                    listFilterCondition.value = new RadioGroupValue();\r\n                } else if (listFilterCondition.control.getControlType() == ControlType.InputGroup) {\r\n                    listFilterCondition.value = new InputGroupValue();\r\n                } else {\r\n                    listFilterCondition.value = new TextValue();\r\n                }\r\n            });\r\n            //  let listFilter = this.listFilterConditions.map(o => Object.assign({}, o));\r\n            const listFilter = this.listFilterConditions.map(o => ({ ...o }));\r\n            this.listFilterConditions = listFilter;\r\n            this.stagListFilterConditions=this.listFilterConditions.map(o => ({ ...o }));\r\n            this.requiredListInit();\r\n            //  this.cd.markForCheck();\r\n        }\r\n        this.conditionChangeHandler(false);\r\n        this.clear.emit();\r\n    }\r\n\r\n    // è®¾ç½®é»è®¤å¼\r\n    setFilterValue(fieldConfigs: FieldConfig[]) {\r\n\r\n        if (this.UPDATE_FILTER_VALUES_TIMER) {\r\n            clearTimeout(this.UPDATE_FILTER_VALUES_TIMER);\r\n        }\r\n\r\n        this.UPDATE_FILTER_VALUES_TIMER = setTimeout(() => {\r\n\r\n            const _filters = this.stagListFilterConditions.map(o => ({ ...o }));\r\n            if (_filters && _filters.length) {\r\n                this.setValues(_filters, fieldConfigs);\r\n                const listFilter = _filters.map(o => ({ ...o }));\r\n                this.listFilterConditions = listFilter;\r\n                this.requiredListInit();\r\n                this.conditionChangeHandler();\r\n                this.inSetCurrentFilterConditions();\r\n                //  this.listSearch();\r\n                this.cd.detectChanges();\r\n                this.cd.markForCheck();\r\n                this.canSubmit = this.canSubmitFilter(this.requiredListFilter);\r\n                if (!this.canSubmit) {\r\n                    return;\r\n                }\r\n                this.submit('showFormData', this.listFilterConditions);\r\n            }\r\n        });\r\n\r\n\r\n        // this.listFilterConditions = this.stagListFilterConditions.map(o => ({ ...o }));\r\n        // if (this.listFilterConditions && this.listFilterConditions.length) {\r\n        //     this.setValues(this.listFilterConditions, fieldConfigs);\r\n        //     const listFilter = this.listFilterConditions.map(o => ({ ...o }));\r\n        //     this.listFilterConditions = listFilter;\r\n        //     this.requiredListInit();\r\n        //     this.searchChange.emit(this.listFilterConditions);\r\n        //     this.inSetCurrentFilterConditions();\r\n        //     //  this.listSearch();\r\n        //     this.cd.detectChanges();\r\n        //     this.cd.markForCheck();\r\n        //     this.canSubmit = this.canSubmitFilter(this.requiredListFilter);\r\n        //     if (!this.canSubmit) {\r\n        //         return;\r\n        //     }\r\n        //     this.submit('showFormData', this.listFilterConditions);\r\n        // }\r\n    }\r\n    // è®¾ç½®value\r\n    setValues(conditions, fieldConfigs: FieldConfig[]) {\r\n        let qc: QueryCondition;\r\n        let controlType: string;\r\n        if (fieldConfigs && fieldConfigs.length) {\r\n            fieldConfigs.forEach(v => {\r\n                qc = conditions.find(c => c.fieldCode == v.labelCode);\r\n                if (qc) {\r\n                    controlType = this.getControlType(qc);\r\n                    qc.value = this.filterService.setValues(controlType, v.value);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        const queryList = this.handler.setFilterConditions(this.listFilterConditions);\r\n        const item = queryList.find((n: any) => n['FilterField'] === fieldName);\r\n        if (item) {\r\n            return item.value;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    // å¿å¡«é¡¹åå§å\r\n    requiredListInit() {\r\n        const requiredList = this.listFilterConditions.filter((listitem) => {\r\n            return listitem.control.required;\r\n        });\r\n        if (requiredList && requiredList.length) {\r\n            this.requiredListFilter = requiredList;\r\n            this.canSubmit = this.canSubmitFilter(this.requiredListFilter);\r\n        } else {\r\n            this.requiredListFilter = [];\r\n            this.canSubmit = true;\r\n        }\r\n    }\r\n\r\n    clearFilterValue(fields: any) {\r\n        if (fields && fields.length) {\r\n            if (typeof fields === 'string') {\r\n                fields = fields.split(',');\r\n            }\r\n            fields = fields.map(n => {\r\n                return n.toLowerCase();\r\n            });\r\n\r\n            this.listFilterConditions.forEach(n => {\r\n                if (fields.indexOf(n.fieldCode.toLowerCase()) > -1) {\r\n                    n.value.clearValue();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    updateValues(values: { [field: string]: any }) {\r\n        if (values && Object.keys(values)) {\r\n            const fields = Object.keys(values);\r\n            fields.forEach( f => {\r\n                this.listFilterConditions.forEach(n => {\r\n                    if (fields.indexOf(n.fieldCode.toLowerCase()) > -1) {\r\n                        n.value['value'] = values[f];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    buildSmartHelpKey(value: string) {\r\n        if(this.idService) {\r\n            let prefix = '';\r\n            if (location.hash) {\r\n                const pathArr = location.hash.split('?');\r\n                prefix = pathArr ? pathArr[0] : '';\r\n            } else {\r\n                const pathArr  = location.pathname.split('/');\r\n                prefix = pathArr ? pathArr[pathArr.length - 1] : '';\r\n            }\r\n            return this.idService.encrypt(prefix + '/list-filter/' + value);\r\n        } else {\r\n            return 'list-filter/' + value;\r\n        }\r\n    }\r\n    private conditionChangeHandler(searchEmit=true){\r\n        const queryList = this.handler.setFilterConditions(this.listFilterConditions);\r\n        this.conditionsChange.emit({data:JSON.stringify(queryList)});\r\n        if(searchEmit){\r\n            this.searchChange.emit(this.listFilterConditions);\r\n        }\r\n    }\r\n    /**\r\n     * æµ®å¨ç­éé¢æ¿éè¿æ¹æ³å±å¼åå³é­\r\n     * @param evt \r\n     */\r\n   floatFilterOpen(evt: MouseEvent){\r\n    this.showFilter = !this.showFilter\r\n    if (this.showFilter) {\r\n        this.overLayService.registerMouseEvent(this.floatPanel.nativeElement, (e: any) => {           \r\n            if (this.floatPanel.nativeElement.contains(e.target)) {\r\n                return;\r\n            } else {\r\n                if (e.target.nodeName === 'SPAN' && e.target.className.indexOf('f-icon-filtrate')) {\r\n                    return;\r\n                }\r\n                const cls = ['.f-datepicker-container', '.farris-timer-picker', '.farris-modal', '.f-combo-lookup', '.date-overlay-container']\r\n                if (cls.find(k => e.target.closest(k))) {\r\n                    return;\r\n                }\r\n            }\r\n            this.showFilter = false;\r\n            this.overLayService.destory(this.floatPanel.nativeElement);\r\n            this.cd.detectChanges();\r\n        });\r\n    } else {\r\n        this.overLayService.destory(this.floatPanel.nativeElement);\r\n    }\r\n   }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { QueryCondition } from '../entity/querycondition';\r\n@Injectable()\r\nexport class SolutionService {\r\n\r\n    filterEditors = {};\r\n\r\n    constructor() { }\r\n\r\n    getGuid() {\r\n        return (this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + this.s4() + this.s4());\r\n    }\r\n\r\n    private s4() {\r\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    }\r\n\r\n    /**\r\n     * æ ¹æ®å­æ®µè·åLableæ§ä»¶çTitle\r\n     * @param field\r\n     */\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        if (field.id && field.id !== '') {\r\n            return field.fieldName;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ°ç»åé ä¹å¯ä½¿ç¨JSON.Parse(JSON.Stringify([input])),åæç±»ç»æä¸­æ²¡æåå£\r\n     * @param input\r\n     */\r\n    arrayClone(input: Array<any>): Array<any> {\r\n        let result = new Array<any>();\r\n        if (input && input.length > 0) {\r\n            input.forEach(element => {\r\n                result.push(Object.assign({}, element));\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    addFilterEditorInstance(fieldName: string, cmpIns: any) {\r\n        this.filterEditors[fieldName] = cmpIns;\r\n    }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, HostBinding, EventEmitter, Output, AfterViewInit, ElementRef, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-input',\r\n    templateUrl: './input.component.html',\r\n    styleUrls: ['./input.component.scss']\r\n})\r\n\r\nexport class InputComponent implements OnInit, OnChanges, AfterViewInit {\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item: any;\r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend: boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel: boolean = true;\r\n    placeholder: string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    constructor(private solutionService: SolutionService, private readonly element: ElementRef) { }\r\n\r\n    ngOnInit(): void {\r\n        //console.log(this.item);\r\n        if (this.item) {\r\n            const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            if (type == '[object Undefined]') {\r\n                if (this.item.control && this.item.control.hasOwnProperty('placeholder')) {\r\n                    this.placeholder = this.item.control.placeholder;\r\n                }\r\n            }\r\n            else {\r\n                this.placeholder = this.item.placeHolder;\r\n            }\r\n        }\r\n        if (this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this.item.control.isExtend;\r\n            if (!this.extend) {\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n        this.solutionService.addFilterEditorInstance(this.item.fieldCode, this);\r\n\r\n        // (this.item.value as HelpValue).clear$.subscribe(() => {\r\n        //     this.textValue = '';\r\n        // });\r\n    }\r\n    ngAfterViewInit() {\r\n        // if(!this.extend){\r\n        //     const El = this.element.nativeElement;\r\n        //     const itemWidth = El.clientWidth;\r\n        //     El.querySelector('.list-filter-input-item').style.width = itemWidth + 'px';\r\n        //     El.querySelector('.input-item-btns').style.width = itemWidth + 100 + 'px';\r\n        // }\r\n    }\r\n    ngOnChanges(): void {\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    InputChanged(e) {\r\n        // let keycode = window.event ? e.keyCode : e.which;\r\n        // if(keycode == 13){//åè½¦é®\r\n        //     this.searchHandle.emit(this.item.value.value);\r\n        // }\r\n        if (this.disabled) { return; }\r\n        this.searchHandle.emit(this.item.value.value);\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, HostBinding, Output, EventEmitter, SimpleChanges} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-search',\r\n    templateUrl: './search.component.html'\r\n})\r\n\r\nexport class SearchComponent implements OnInit,OnChanges{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    placeholder: string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    groupIcon = '<span class=\"k-icon k-i-search\"></span>';\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        if(this.item){\r\n            const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            if(type == '[object Undefined]'){\r\n                if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n                    this.placeholder = this.item.control.placeholder;\r\n                }\r\n            }\r\n            else{\r\n                this.placeholder = this.item.placeHolder;\r\n            }\r\n        }\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n\r\n        this.solutionService.addFilterEditorInstance(this.item.fieldCode, this);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n       \r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch($event){\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit($event);\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, HostBinding, Output, EventEmitter, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { HelpContol } from '../../entity/controltype/help/helpcontrol';\r\nimport { IControl } from '../../entity/controltype/icontrol';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { HelpValue } from '../../entity/conditionvalue/helpvalue';\r\nimport { DisplayType } from '../../entity/controltype/help/displayType';\r\n\r\n// import { ServerSideToken } from '@farris/ui-lookup';\r\n// import { LookupHttpBeQueryService } from './service/Lookup-http.service';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-filter-help',\r\n    templateUrl: './help.component.html'\r\n    // providers: [{ provide: ServerSideToken, useClass: LookupHttpBeQueryService }]\r\n})\r\n\r\nexport class HelpComponent implements OnInit, OnChanges {\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item: any;\r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() hostRef: any;\r\n\r\n    @Input() instanceId: string;\r\n\r\n    @Output() searchHandle = new EventEmitter();\r\n\r\n    uri: string;\r\n    textField: string;\r\n    idField: string;\r\n    valueField: any;\r\n    textValue: any;\r\n    displayType: DisplayType;\r\n    mapFields: any;\r\n    context: any;\r\n    preEventCmd: any;\r\n    postEventCmd: any;\r\n    enableFullTree: boolean;\r\n    loadTreeDataType: 'default' | 'loadall' | 'layerload';\r\n    singleSelect: boolean;\r\n    expandLevel: number;\r\n    enableCascade: boolean;\r\n    helpId: string;\r\n    title: string;\r\n\r\n    /** å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend = false;\r\n    /** å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel = true;\r\n    placeholder: string;\r\n\r\n    editable = false;\r\n    /** å¤å­æ®µæ¥è¯¢ */\r\n    enableMultiFieldSearch = false;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n      /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n    /**\r\n     * è¦æ¸ç©ºçå³èå­æ®µ\r\n     */\r\n    clearFields: string;\r\n    constructor(private solutionService: SolutionService) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.item) {\r\n            const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            if (type == '[object Undefined]') {\r\n                if (this.item.control && this.item.control.hasOwnProperty('placeholder')) {\r\n                    this.placeholder = this.item.control.placeholder;\r\n                }\r\n            } else {\r\n                this.placeholder = this.item.placeHolder;\r\n            }\r\n        }\r\n        this.getHelpBindingInfo();\r\n        if (this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this.item.control.isExtend;\r\n            if (!this.extend) {\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n\r\n        this.solutionService.addFilterEditorInstance(this.item.fieldCode, this);\r\n\r\n        (this.item.value as HelpValue).clear$.subscribe(() => {\r\n            this.textValue = '';\r\n        });\r\n        \r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.getHelpBindingInfo();\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.textValue = (this.item.value as HelpValue).textValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    selectedDataHandler(selectedItem: any) {\r\n        // console.log(selectedItem);\r\n        //    let mapFields=new Function('return'+(this.item.control as HelpContol).mapFields);\r\n        //    let mapFieldsKeys=Object.keys(mapFields());\r\n        //    (this.item.value as HelpValue).value=new Object();\r\n        //    mapFieldsKeys.forEach(mapFeildKey => {\r\n        //     (this.item.value as HelpValue).value[mapFeildKey]=selectedItem[mapFeildKey];\r\n        //    });\r\n        //    (this.item.value as HelpValue).valueField=(this.item.control as HelpContol).valueField;\r\n        //    let textField=(this.item.control as HelpContol).textField;\r\n        //    this.textValue=(this.item.value as HelpValue).value[textField];\r\n\r\n        const helpValue = (this.item.value as HelpValue);\r\n        helpValue.value = this.singleSelect ? [selectedItem] : selectedItem; // åéè¿åå¯¹è±¡ï¼å¤éè¿åæ°ç»\r\n        helpValue.valueField = this.valueField;\r\n        helpValue.textValue = helpValue.getTextValue(this.textField);\r\n        this.textValue = helpValue.textValue;\r\n        // this.conditionChange.emit();\r\n        if (this.disabled) { return; }\r\n        this.searchHandle.emit();\r\n\r\n    }\r\n\r\n    getHelpBindingInfo() {\r\n        if (this.item && this.item.control && this.item.control.getControlType() == ControlType.Help) {\r\n            const helpList = (this.item.control as HelpContol);\r\n            this.uri = helpList.uri;\r\n            this.textField = helpList.textField;\r\n            this.valueField = helpList.valueField;\r\n            this.idField = helpList.idField;\r\n            this.mapFields = helpList.mapFields;\r\n            this.context = helpList.context;\r\n            if (helpList.preEventCmd) {\r\n                this.preEventCmd = (e) => {\r\n                    e['hostRef'] = this.hostRef;\r\n                    return helpList.preEventCmd(e);\r\n                };\r\n            }\r\n\r\n            if (helpList.postEventCmd) {\r\n                this.postEventCmd = (e) => {\r\n                    e['hostRef'] = this.hostRef;\r\n                    return helpList.postEventCmd(e);\r\n                };\r\n            }\r\n            this.singleSelect = helpList.singleSelect;\r\n            this.enableFullTree = helpList.enableFullTree;\r\n            this.loadTreeDataType = helpList.loadTreeDataType;\r\n            this.expandLevel = helpList.expandLevel;\r\n            this.enableCascade = helpList.enableCascade;\r\n            this.helpId = helpList.helpId;\r\n            this.title = helpList.title;\r\n            const helpValue = (this.item.value as HelpValue);\r\n            this.clearFields = helpList.clearFields;\r\n            // if (helpValue && helpValue.value) {\r\n            //     // this.textValue = (this.item.value as HelpValue).value[this.textField];\r\n            //     this.textValue = HelpValue.getPropValue(helpValue.value, this.textField.split('.'));\r\n            // }\r\n            this.displayType = helpList.displayType;\r\n            if (helpValue.textValue == 'help-text-value-null') {// æ§æ°æ®å¼å®¹\r\n                this.textValue = helpValue.getTextValue(this.textField);\r\n            } else {\r\n                this.textValue = helpValue.textValue;\r\n            }\r\n\r\n            this.editable = !!helpList.editable;\r\n            this.enableMultiFieldSearch = !!helpList.enableMultiFieldSearch;\r\n        }\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch = () => {\r\n        if (this.disabled) { return; }\r\n        this.searchHandle.emit();\r\n        return of(true);\r\n    }\r\n\r\n    clearData(data: any) {\r\n        (this.item.value as HelpValue).clearValue();\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n}\r\n","import { Component, Input, OnInit, OnChanges, HostBinding, Output, EventEmitter, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { DateValue } from '../../entity/conditionvalue/datevalue';\r\n\r\n@Component({\r\n    selector: 'app-filter-date',\r\n    templateUrl: './date.component.html'\r\n})\r\n\r\nexport class DateComponent implements OnInit, OnChanges {\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item: any;\r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input() showType: string;\r\n    @Output() searchHandle = new EventEmitter();\r\n\r\n    // time:Date;\r\n    date: string;\r\n    /** å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend = false;\r\n    /** å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel = true;\r\n    placeholder: string;\r\n    dateFormat: string;\r\n    returnFormat: string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n    /**\r\n   * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n   */\r\n    @Input() changeFields: Array<string> = [];\r\n    constructor(private solutionService: SolutionService) { }\r\n\r\n    ngOnInit(): void {\r\n        // console.log(this.showType);\r\n        this.initDate();\r\n        if (this.item) {\r\n            const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            if (type == '[object Undefined]') {\r\n                if (this.item.control && this.item.control.hasOwnProperty('placeholder')) {\r\n                    this.placeholder = this.item.control.placeholder;\r\n                }\r\n            }\r\n            else {\r\n                this.placeholder = this.item.placeHolder;\r\n            }\r\n        }\r\n        if (this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this.item.control.isExtend;\r\n            if (!this.extend) {\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n\r\n        this.solutionService.addFilterEditorInstance(this.item.fieldCode, this);\r\n\r\n\r\n        (this.item.value as DateValue).clear$.subscribe(() => {\r\n            this.date = '';\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.initDate();\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange) {\r\n                this.date = this.item.value.getOriginalValue();             \r\n            }\r\n        }\r\n    }\r\n\r\n    initDate() {\r\n        // if(this.item && this.item.value.value){\r\n        //     //this.time = this.getDate((this.item.value as DateValue).value);\r\n        //     this.time = (this.item.value as DateValue).value;\r\n        // }\r\n\r\n        if (this.item && this.item.value\r\n            && (this.item.value as DateValue).value) {\r\n            this.date = this.item.value.getOriginalValue();\r\n        } else {\r\n            this.date = undefined;\r\n        }\r\n        const format = this.showType == '2' ? 'yyyy-MM' : (this.showType == '3' ? 'yyyy' : 'yyyy-MM-dd');\r\n        this.returnFormat = format;\r\n        this.dateFormat = this.item.control.format ? this.item.control.format : format;\r\n        // console.log('æ ¼å¼',this.dateFormat);\r\n\r\n    }\r\n\r\n    // getDate(dateString:string):Date{\r\n    //     let arr1:Array<any> = dateString.split(\" \"); \r\n    //     let sdate = arr1[0].split('-'); \r\n    //     let date = new Date(sdate[0], sdate[1]-1, sdate[2]); \r\n    //     return date;\r\n    // }\r\n\r\n    onDateChange(event: any) {\r\n        // console.log(event);\r\n        if (event) {\r\n            (this.item.value as DateValue).value = event.returnFormatted;\r\n        } else {\r\n            (this.item.value as DateValue).value = '';\r\n            // this.item.value = new DateValue();\r\n        }\r\n        if (this.disabled) { return; }\r\n        this.searchHandle.emit(event);\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, HostBinding, EventEmitter, Output, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { DropDownControl } from '../../entity/controltype/dropdownlist/dropdowncontrol';\r\nimport { EnumType } from '../../entity/controltype/dropdownlist/enumtype';\r\nimport { EnumIntegerValue } from '../../entity/controltype/dropdownlist/integerenumvalue';\r\nimport { EnumStringValue } from '../../entity/controltype/dropdownlist/stringenumvalue';\r\nimport { EnumBoolValue } from '../../entity/controltype/dropdownlist/boolenumvalue';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { DropDownListValue } from '../../entity/conditionvalue/dropdownlistvalue';\r\n\r\n@Component({\r\n    selector: 'app-filter-dropdown',\r\n    templateUrl: './dropdown.component.html'\r\n})\r\n\r\nexport class DropDownComponent implements OnInit, OnChanges {\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item: any;\r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input() enableClear = true;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    dropDownListDataSource: Array<any> = new Array<any>();\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend: boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel: boolean = true;\r\n\r\n    selectedItemId: any;\r\n    placeholder: string;\r\n\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n    /**\r\n    * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n    */\r\n    @Input() changeFields: Array<string> = [];\r\n    constructor(private solutionService: SolutionService) { }\r\n\r\n    ngOnInit(): void {\r\n        // this.getDataSource();\r\n        // const initialValue = this.item.value as DropDownListValue;\r\n        // initialValue.value && (this.selectedItemId = initialValue.value.getEnumValue());\r\n        if (this.item) {\r\n            const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            if (type == '[object Undefined]') {\r\n                if (this.item.control && this.item.control.hasOwnProperty('placeholder')) {\r\n                    this.placeholder = this.item.control.placeholder;\r\n                }\r\n            }\r\n            else {\r\n                this.placeholder = this.item.placeHolder;\r\n            }\r\n        }\r\n        this.getDataSource();\r\n        const initialValue = this.item.value as DropDownListValue;\r\n        initialValue.value && (this.selectedItemId = initialValue.value);\r\n        if (this.item && this.item.control) {\r\n            if (this.item.control.hasOwnProperty('isExtend')) {\r\n                this.extend = this.item.control.isExtend;\r\n                if (!this.extend) {\r\n                    this.showlabel = this.item.control.showLabel;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.solutionService.addFilterEditorInstance(this.item.fieldCode, this);\r\n\r\n\r\n        (this.item.value as DropDownListValue).clear$.subscribe(() => {\r\n            this.selectedItemId = '';\r\n        });\r\n        // this.testId = this.solutionService.getGuid();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.getDataSource();\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.selectedItemId = (this.item.value as DropDownListValue).value;\r\n            }\r\n        }\r\n        //console.log(this.dropDownListDataSource);\r\n    }\r\n\r\n    getDataSource() {\r\n        if (this.item && this.item.value\r\n            && this.item.control && this.item.control.getControlType() == ControlType.DropDown) {\r\n            let dropDownList = (this.item.control as DropDownControl);\r\n            if (dropDownList.valueType == EnumType.BoolType) {\r\n                this.dropDownListDataSource = Array<EnumBoolValue>();\r\n                if (dropDownList.enumValues && dropDownList.enumValues.length > 0) {\r\n                    dropDownList.enumValues.forEach(element => {\r\n                        this.dropDownListDataSource.push(Object.assign(new EnumBoolValue(), element));\r\n                    });\r\n                }\r\n            }\r\n            else if (dropDownList.valueType == EnumType.IntType) {\r\n                this.dropDownListDataSource = Array<EnumIntegerValue>();\r\n                if (dropDownList.enumValues && dropDownList.enumValues.length > 0) {\r\n                    dropDownList.enumValues.forEach(element => {\r\n                        this.dropDownListDataSource.push(Object.assign(new EnumIntegerValue(), element));\r\n                    });\r\n                }\r\n            }\r\n            else if (dropDownList.valueType == EnumType.StringType) {\r\n                this.dropDownListDataSource = Array<EnumStringValue>();\r\n                if (dropDownList.enumValues && dropDownList.enumValues.length > 0) {\r\n                    dropDownList.enumValues.forEach(element => {\r\n                        this.dropDownListDataSource.push(Object.assign(new EnumStringValue(), element));\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch(event) {\r\n        if (event) {\r\n            (this.item.value as DropDownListValue).value = event.data.value;\r\n        } else {\r\n            (this.item.value as DropDownListValue).value = '';\r\n        }\r\n\r\n        if (this.disabled) { return; }\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    onClear(event) {\r\n        (this.item.value as DropDownListValue).value = '';\r\n        this.searchHandle.emit();\r\n    }\r\n}\r\n","import { Component, Input, OnInit, HostBinding, EventEmitter, Output, AfterViewInit, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { NumberRangeValue, NumberRangeValueConvertor } from '../../entity/conditionvalue/numberrangevaue';\r\nimport { BigNumber } from 'bignumber.js';\r\n// import { NumberRangeValue } from '../../entity/conditionvalue/numberrangevaue';\r\n\r\n\r\n@Component({\r\n    selector: 'app-filter-number',\r\n    templateUrl: './number.component.html',\r\n    styleUrls: ['./number.component.scss']\r\n})\r\n\r\nexport class NumberComponent implements OnInit, AfterViewInit,OnChanges {\r\n\r\n    // @Input() item:any;\r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend: boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel: boolean = true;\r\n    canNull: boolean = true;\r\n\r\n    number: string;\r\n    beginValue: any;\r\n    endValue: any;\r\n    precision: number;\r\n    placeholder: string;\r\n    beginPlaceHolder: string;\r\n    endPlaceHolder: string;\r\n    bigNumber: boolean;\r\n    max: number;\r\n    min: number;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    _item: any;\r\n    numberRange: string;\r\n    @Input()\r\n    set item(nr: any) {\r\n        this._item = nr;\r\n        this.precision = nr.control.precision;\r\n        this.bigNumber = nr.control.bigNumber;\r\n        this.constructMultiFieldNumberRange(nr.value as NumberRangeValue);\r\n        if (this._item && this._item.control && this._item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this._item.control.isExtend;\r\n            if (!this.extend) {\r\n                this.showlabel = this._item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    get item() {\r\n        return this._item;\r\n    }\r\n\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n    constructor(private solutionService: SolutionService, private readonly element: ElementRef) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.item) {\r\n            const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            if (type == '[object Undefined]') {\r\n                if (this.item.control && this.item.control.hasOwnProperty('placeholder')) {\r\n                    this.placeholder = this.item.control.placeholder;\r\n                }\r\n            }\r\n            else {\r\n                this.placeholder = this.item.placeHolder;\r\n            }\r\n            const beginplac = Object.prototype.toString.call(this.item.beginPlaceHolder);\r\n            if (beginplac == '[object Undefined]') {\r\n                if (this.item.control && this.item.control.hasOwnProperty('placeholder')) {\r\n                    this.beginPlaceHolder = this.item.control.beginPlaceHolder;\r\n                }\r\n            }\r\n            else {\r\n                this.beginPlaceHolder = this.item.beginPlaceHolder;\r\n            }\r\n            const endplac = Object.prototype.toString.call(this.item.beginPlaceHolder);\r\n            if (endplac == '[object Undefined]') {\r\n                if (this.item.control && this.item.control.hasOwnProperty('placeholder')) {\r\n                    this.endPlaceHolder = this.item.control.endPlaceHolder;\r\n                }\r\n            }\r\n            else {\r\n                this.endPlaceHolder = this.item.endPlaceHolder;\r\n            }\r\n\r\n            if (!this.bigNumber) {\r\n                this.min = -2147483648;\r\n                this.max = 2147483647;\r\n            }\r\n        }\r\n\r\n\r\n        (this.item.value as NumberRangeValue).clear$.subscribe(() => {\r\n            this.beginValue = '';\r\n            this.endValue = '';\r\n        });\r\n\r\n        this.solutionService.addFilterEditorInstance(this.item.fieldCode, this);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n          const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n          if(isChange){\r\n            this.constructMultiFieldNumberRange(this.item.value as NumberRangeValue);\r\n          }\r\n      }\r\n      }\r\n    ngAfterViewInit() {\r\n        // if(!this.extend){\r\n        //     const El = this.element.nativeElement;\r\n        //     const itemWidth = El.clientWidth;\r\n        //     El.querySelector('.list-filter-number-item').style.width = itemWidth + 'px';\r\n        //     El.querySelector('.number-item-btns').style.width = itemWidth + 100 + 'px';\r\n        // }\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    // constructNumberRange(value: NumberRangeValue): string{\r\n    //     return \"a~b\".replace(/a/,value.startValue?value.startValue.toString().trim():\"\").replace(/b/,value.endValue?value.endValue.toString().trim():\"\");\r\n    // }\r\n    constructMultiFieldNumberRange(value: NumberRangeValue) {\r\n        // this.beginValue = value && value.startValue ? value.startValue.toString().trim() : '';\r\n        // this.endValue = value && value.endValue ? value.endValue.toString().trim() : '';\r\n        this.beginValue = value.startValue == null ? null : value.startValue;\r\n        this.endValue = value.endValue == null ? null : value.endValue;\r\n    }\r\n\r\n    numberChange(event) {\r\n        if (event) {\r\n            // const dataArray = event.split(\"~\");\r\n            // console.log(dataArray);\r\n            // this._item.value = (new NumberRangeValueConvertor).initFromObject({startValue: dataArray[0], endValue: dataArray[1]});\r\n            const dataArray = event.split(\"~\");\r\n            this.item.value.startValue = dataArray[0] ? dataArray[0] : null;\r\n            this.item.value.endValue = dataArray[1] ? dataArray[1] : null;\r\n        }\r\n        else {\r\n            this._item.value.startValue = null;\r\n            this._item.value.endValue = null;\r\n        }\r\n        // const dataArray = event.split(\"~\");\r\n        // this._item.value = (new NumberRangeValueConvertor).initFromObject({startValue: dataArray[0], endValue: dataArray[1]});\r\n        if (this.disabled) { return; }\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    beginValueChange($event) {\r\n        this.beginValue = $event;\r\n\r\n    }\r\n\r\n    endValueChange($event) {\r\n        this.endValue = $event;\r\n    }\r\n\r\n\r\n    // onSearch(){\r\n    //     if(this.disabled){return;}\r\n    //     this.searchHandle.emit();\r\n    // }\r\n}","import { CheckboxIEnumValue } from \"./ienumvalue\";\r\n\r\n/**\r\n * checboxgroupç±»å\r\n */\r\nexport class CheckboxValue implements CheckboxIEnumValue{\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { Component, Input, OnInit, OnChanges, ViewEncapsulation, HostBinding, EventEmitter, Output, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { CheckboxGroupControl } from '../../entity/controltype/checkbox/checkboxcontrol';\r\nimport { CheckboxValue } from '../../entity/controltype/checkbox/checkboxvalue';\r\nimport { CheckboxGroupValue } from '../../entity/conditionvalue/checkboxgroupvalue';\r\n\r\n@Component({\r\n    selector: 'app-filter-checkbox',\r\n    templateUrl: './checkbox.component.html',\r\n    styleUrls: ['./checkbox.component.scss']\r\n    // encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class FilterCheckboxComponent implements OnInit, OnChanges {\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item: any;\r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n    @Output() searchHandle = new EventEmitter();\r\n    /** å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend = false;\r\n    /** å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel = true;\r\n    checkValue: any[];\r\n\r\n    selectCheck = [];\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-checbox-wrap')\r\n    get isCheckExtend(): boolean {\r\n        return !this.extend;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-checkboxgroup') cla = true;\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    checkboxDataSource: Array<any> = new Array<any>();\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n    constructor(private solutionService: SolutionService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.getDataSource();\r\n        this.checkValue = this.item.value.getOriginalValue();\r\n        if (this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this.item.control.isExtend;\r\n            if (!this.extend) {\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n\r\n        this.solutionService.addFilterEditorInstance(this.item.fieldCode, this);\r\n\r\n\r\n        (this.item.value as CheckboxGroupValue).clear$.subscribe( () => {\r\n            this.checkValue = [];\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.getDataSource();\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.checkValue = (this.item.value as CheckboxGroupValue).getOriginalValue();\r\n            }\r\n        }\r\n    }\r\n\r\n    getDataSource() {\r\n        if (this.item && this.item.control && this.item.control.getControlType() == ControlType.CheckboxGroup) {\r\n            let checkboxList = (this.item.control as CheckboxGroupControl);\r\n            this.checkboxDataSource = Array<CheckboxValue>();\r\n\r\n            if (checkboxList.enumValues && checkboxList.enumValues.length > 0) {\r\n                checkboxList.enumValues.forEach(element => {\r\n                    this.checkboxDataSource.push(Object.assign(new CheckboxValue(), element));\r\n                });\r\n            }\r\n        }\r\n        // if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n        //     this.extend = this.item.control.isExtend;\r\n        // }\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch(event) {\r\n        let checkboxValue = [];\r\n        if (event) {\r\n            // let checkboxList = event.split(',');\r\n            let checkboxList = event;\r\n            if (checkboxList && checkboxList.length) {\r\n                checkboxValue = checkboxList;\r\n            }\r\n            this.item.value.value = checkboxValue;\r\n        }\r\n        else {\r\n            this.item.value.value = new CheckboxGroupValue();\r\n        }\r\n        if (this.disabled) { return; }\r\n        this.searchHandle.emit();\r\n    }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, HostBinding, Output, EventEmitter, Injector, ChangeDetectorRef, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { DateRangeValue } from '../../entity/conditionvalue/daterangevalue';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-daterange',\r\n    templateUrl: './daterange.component.html'\r\n})\r\n\r\nexport class DateRangeComponent implements OnInit, OnChanges {\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item: any;\r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input() showTime: boolean;\r\n    @Input() showType: string;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    startTime: Date;\r\n    endTime: Date;\r\n    //TODO: need 2 placeholder text for date range\r\n    // rangeDate = {\r\n    //     begin:null,\r\n    //     end:null\r\n    // };\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend: boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel: boolean = true;\r\n\r\n    rangeDate: string;\r\n    placeholder: string;\r\n    beginPlaceHolder: string;\r\n    endPlaceHolder: string;\r\n    dateFormat: string;\r\n    returnFormat: string;\r\n    // showType:string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n     /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n    constructor(private solutionService: SolutionService, private injector: Injector, private cdr: ChangeDetectorRef) { }\r\n\r\n    ngOnInit(): void {\r\n        this.initDate();\r\n        if (this.item) {\r\n            const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            if (type == '[object Undefined]') {\r\n                if (this.item.control && this.item.control.hasOwnProperty('placeholder')) {\r\n                    this.placeholder = this.item.control.placeholder;\r\n                }\r\n            }\r\n            else {\r\n                this.placeholder = this.item.placeHolder;\r\n            }\r\n            const beginplac = Object.prototype.toString.call(this.item.beginPlaceHolder);\r\n            if (beginplac == '[object Undefined]') {\r\n                if (this.item.control && this.item.control.hasOwnProperty('placeholder')) {\r\n                    this.beginPlaceHolder = this.item.control.beginPlaceHolder;\r\n                }\r\n            }\r\n            else {\r\n                this.beginPlaceHolder = this.item.beginPlaceHolder;\r\n            }\r\n            const endplac = Object.prototype.toString.call(this.item.endPlaceHolder);\r\n            if (endplac == '[object Undefined]') {\r\n                if (this.item.control && this.item.control.hasOwnProperty('placeholder')) {\r\n                    this.endPlaceHolder = this.item.control.endPlaceHolder;\r\n                }\r\n            }\r\n            else {\r\n                this.endPlaceHolder = this.item.endPlaceHolder;\r\n            }\r\n            // this.showType = this.item.control.showType;\r\n        }\r\n        if (this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this.item.control.isExtend;\r\n            if (!this.extend) {\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n\r\n        this.solutionService.addFilterEditorInstance(this.item.fieldCode, this);\r\n\r\n\r\n        (this.item.value as DateRangeValue).clear$.subscribe(() => {\r\n            this.rangeDate = '';\r\n        });\r\n\r\n        // this.cdr.detectChanges();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        // this.initDate();\r\n        if (changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if (isChange) {\r\n                let beginValue = this.item.value && this.item.value.startTime ? this.item.value.startTime.toString().trim() : '';\r\n                let endValue = this.item.value && this.item.value.endTime ? this.item.value.endTime.toString().trim() : '';\r\n                this.rangeDate = `${beginValue}~${endValue}`;\r\n            }\r\n        }\r\n    }\r\n\r\n    initDate() {\r\n        if (this.item && this.item.control && this.item.control.hasOwnProperty('format')) {\r\n            let itemDateFormat = this.item.control.format;\r\n            if (this.showTime) {\r\n                if (itemDateFormat.length > 0 && itemDateFormat.indexOf('HH:mm') == -1) {\r\n                    itemDateFormat = itemDateFormat + ' HH:mm:ss';\r\n                }\r\n            }\r\n            const format = this.showTime ? 'yyyy-MM-dd HH:mm:ss' : (this.showType == '2' ? 'yyyy-MM' : (this.showType == '3' ? 'yyyy' : 'yyyy-MM-dd'));\r\n            this.returnFormat = format;\r\n            this.dateFormat = itemDateFormat ? itemDateFormat : format;\r\n        }\r\n        const rangeDateValue: DateRangeValue = this.item && this.item.value;\r\n        if (rangeDateValue.startTime && rangeDateValue.endTime) {\r\n            this.rangeDate = `${rangeDateValue.startTime}~${rangeDateValue.endTime}`;\r\n        }\r\n    }\r\n\r\n    getDate(dateString: Date): Date {\r\n        // let arr1:Array<any> = dateString.split(\" \"); \r\n        // let sdate = arr1[0].split('-'); \r\n        // let date = new Date(sdate[0], sdate[1]-1, sdate[2]);\r\n        let date = new Date(dateString);\r\n        return date;\r\n    }\r\n\r\n    onDateChange(event: any) {\r\n        if (event) {\r\n            (this.item.value as DateRangeValue).startTime = event.returnFormatted.split('~')[0];\r\n            (this.item.value as DateRangeValue).endTime = event.returnFormatted.split('~')[1];\r\n        } else {\r\n            // this.item.value = new DateRangeValue();\r\n            this.item.value.startTime = '';\r\n            this.item.value.endTime = '';\r\n        }\r\n        if (this.disabled) { return; }\r\n        this.searchHandle.emit(event);\r\n    }\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}\r\n","import { Component, ViewEncapsulation} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-filter-common',\r\n    template:``,\r\n    styleUrls:['./list-filter.common.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class ListFilterCommonComponent{}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { QueryCondition } from './entity/querycondition';\r\nimport { ControlType } from './entity/controltype';\r\n\r\n@Pipe({name: 'controlType'})\r\nexport class ControlTypeXPipe implements PipeTransform {\r\n    transform(value: QueryCondition): Array<any> {\r\n        let type;\r\n        switch(value.control.getControlType()){\r\n            case ControlType.Text:\r\n                type = 'input';\r\n                break;\r\n            case ControlType.Search:\r\n                type = 'search';\r\n                break;\r\n            case ControlType.Date:\r\n                type = 'date';\r\n                break;\r\n            case ControlType.Year:\r\n                type = 'year';\r\n                break;\r\n            case ControlType.Month:\r\n                type = 'month';\r\n                break;\r\n            case ControlType.MonthRange:\r\n                type = 'monthrange';\r\n                break;\r\n            case ControlType.YearRange:\r\n                type = 'yearrange';\r\n                break;\r\n            case ControlType.DateRange:\r\n                type = 'daterange';\r\n                break;\r\n            case ControlType.DateRangeTime:\r\n                type = 'daterangetime';\r\n                break;\r\n            case ControlType.DropDown:\r\n                type = 'dropdown';\r\n                break;\r\n            case ControlType.NumberRange:\r\n                type = 'number';\r\n                break;\r\n            case ControlType.Help:\r\n                type = 'help';\r\n                break;\r\n            case ControlType.CheckboxGroup:\r\n                type = 'checkboxgroup';\r\n                break; \r\n            case ControlType.Radio:\r\n                type = 'radio';\r\n                break;\r\n            case ControlType.InputGroup:\r\n                type = 'input-group';\r\n                break;\r\n            default:\r\n                type = 'input';\r\n                break;     \r\n        }\r\n        return type;\r\n    }\r\n}\r\n","import { RadioIEnumValue } from \"./ienumvalue\";\r\n\r\n/**\r\n * checboxgroupç±»å\r\n */\r\nexport class RadioValue implements RadioIEnumValue{\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { Component, Input, OnInit, OnChanges, ViewEncapsulation, HostBinding, EventEmitter, Output, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { RadioValue } from '../../entity/controltype/radio/radiovalue';\r\nimport { RadioControl } from '../../entity/controltype/radio/radiocontrol';\r\nimport { RadioGroupValue } from '../../entity/conditionvalue/radiovalue';\r\n\r\n@Component({\r\n    selector: 'app-filter-radio',\r\n    templateUrl: './radio.component.html',\r\n    styleUrls: ['./radio.component.scss']\r\n    // encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class FilterRadioComponent implements OnInit, OnChanges {\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item: any;\r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend: boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel: boolean = true;\r\n    radioValue: any[];\r\n\r\n    selectCheck = [];\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-checbox-wrap')\r\n    get isCheckExtend(): boolean {\r\n        return !this.extend;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-radio') cla = true;\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    radioDataSource: Array<any> = new Array<any>();\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    constructor(private solutionService: SolutionService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.getDataSource();\r\n        this.radioValue = this.item.value.getOriginalValue();\r\n        if (this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this.item.control.isExtend;\r\n            if (!this.extend) {\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n\r\n        this.solutionService.addFilterEditorInstance(this.item.fieldCode, this);\r\n\r\n        (this.item.value as RadioGroupValue).clear$.subscribe(() => {\r\n            this.radioValue = [];\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.getDataSource();\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                let orginalValue=this.item.value.getOriginalValue()\r\n                this.radioValue =orginalValue==undefined?[]:orginalValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    getDataSource() {\r\n        if (this.item && this.item.control && this.item.control.getControlType() == ControlType.Radio) {\r\n            let radioList = (this.item.control as RadioControl);\r\n            this.radioDataSource = Array<RadioValue>();\r\n\r\n            if (radioList.enumValues && radioList.enumValues.length > 0) {\r\n                radioList.enumValues.forEach(element => {\r\n                    this.radioDataSource.push(Object.assign(new RadioValue(), element));\r\n                });\r\n            }\r\n        }\r\n        // if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n        //     this.extend = this.item.control.isExtend;\r\n        // }\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch(event) {\r\n        if (event) {\r\n            this.item.value.value = event;\r\n        }\r\n        else {\r\n            this.item.value.value = new RadioGroupValue();\r\n        }\r\n        if (this.disabled) { return; }\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Component, Input, OnInit, ViewChild, EventEmitter, Output, HostBinding } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { InputGroupControl } from '../../entity/controltype/input-group/inputgroupcontrol';\r\nimport { InputGroupValue } from '../../entity/conditionvalue/inputgroup';\r\nimport { InputGroupComponent } from '@farris/ui-input-group';\r\n\r\n\r\n@Component({\r\n    selector: 'app-filter-inputgroup',\r\n    templateUrl: './inputgroup.component.html',\r\n})\r\n\r\nexport class FilterInputGroupComponent implements OnInit {\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    _inputItem: QueryCondition;\r\n\r\n    testId: string;\r\n\r\n    usageMode: string;\r\n\r\n    dialogOptions: any;\r\n\r\n    @Input()\r\n    set item(textItem: any) {\r\n        this._inputItem = textItem;\r\n    }\r\n    get item(): any {\r\n        return this.constructTextItem(this._inputItem);\r\n    }\r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend: boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel: boolean = true;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    @ViewChild('inputgroup') inputgroup: InputGroupComponent;\r\n\r\n    textField: string;\r\n    isTextFromDialog = false;\r\n    textFormDialog: string;\r\n\r\n    constructTextItem(textItem: QueryCondition): QueryCondition {\r\n        const textValueObj = textItem.value as InputGroupValue;\r\n        textValueObj.textValue = textValueObj.textValue && textValueObj.textValue.trim();\r\n        textItem.value = textValueObj;\r\n        return textItem;\r\n    }\r\n\r\n    constructor(private solutionService: SolutionService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.testId = this.solutionService.getGuid();\r\n        this.getInputGroupBindingInfo();\r\n\r\n        if (this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this.item.control.isExtend;\r\n            if (!this.extend) {\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n        this.solutionService.addFilterEditorInstance(this.item.fieldCode, this);\r\n    }\r\n\r\n    getInputGroupBindingInfo() {\r\n        const inputGroupControl = (this.item.control as InputGroupControl);\r\n        this.usageMode = inputGroupControl.usageMode;\r\n        if (this.usageMode == 'open-modal' || this.usageMode == 'open-remote-modal') {\r\n            this.dialogOptions = inputGroupControl.dialogOptions;\r\n            /*\r\n                example of dialogOptions = {\r\n                   modalId: \"1e011720-eb0f-4c9c-82b6-6844c89b2303\"\r\n                   mapFields: {hDepartment: \"Name\"}\r\n                   title: \"æµè¯æ é¢æ \"\r\n                   width: 800\r\n                   height: 600\r\n                }\r\n             */\r\n            if (this.dialogOptions.mapFields) {\r\n                this.textField = JSON.stringify(this.dialogOptions.mapFields).split('\"')[1];\r\n            }\r\n        }\r\n    }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    /*\r\n        dialogOptions = {\r\n            modalId: \"ae011720-eb0f-4c9c-82b6-6844c89b2303\"\r\n            mapFields: {hDepartment: \"Name\"}\r\n            title: \"æµè¯æ é¢æ \"\r\n            width: 800\r\n            height: 600\r\n            showButtons: true\r\n            buttons: [\r\n                { text: \"ç¡®å®\", cls: \"btn-primary\", handle: _this.viewModel.rootviewmodelconfirm1 },\r\n                { text: \"åæ¶\", cls: \"btn-secondary\", handle: _this.viewModel.rootviewmodelcancel1}\r\n            ]\r\n        }\r\n    */\r\n    onClick(event: any) {\r\n        if (this.usageMode == 'text') {\r\n            this.item.control.click();\r\n        }\r\n        else {\r\n            const options = this.dialogOptions;\r\n            options.handle = (selectedItem) => {\r\n                // let modalData = item[0];\r\n                // this.item.value.value = modalData[this.targetField];\r\n                let selectedItems = selectedItem.filter(n => n);\r\n                if (selectedItems && this.textField) {\r\n                    this.item.value.value = selectedItems;\r\n                    this.item.value.textValue = this.item.value.getTextValue(this.textField);\r\n                    this.item.value.textField = this.textField;\r\n                    this.item.value.isInputText = false;\r\n                    if (this.inputgroup) {\r\n                        this.inputgroup.cd.detectChanges();\r\n                        this.inputgroup.value = this.item.value.textValue;\r\n                    }\r\n                    this.isTextFromDialog = true;\r\n                    this.textFormDialog = this.item.value.textValue;\r\n                    this.onBlur();\r\n                }\r\n            }\r\n            this.item.control.click({ event, options });\r\n        }\r\n    }\r\n\r\n    onBlur() {\r\n        if (this.disabled) { return; }\r\n        if (this.usageMode == 'text') {\r\n            this.item.value.isInputText = true;\r\n        }\r\n        if (this.usageMode == 'open-modal' || this.usageMode == 'open-remote-modal') {\r\n            if (!this.isTextFromDialog) {\r\n                this.item.value.isInputText = true;\r\n            }\r\n            if (this.item.value.textValue != this.textFormDialog) {\r\n                this.isTextFromDialog = false;\r\n                this.item.value.value = [];\r\n                this.item.value.textField = undefined;\r\n                this.item.value.isInputText = true;\r\n            }\r\n        }\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    onClear() {\r\n        (this.item.value as InputGroupValue).clearValue();\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Directive, Input, OnInit, Optional, Self, Injector } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { ListFilterComponent } from '../list-filter.component';\r\n\r\n@Directive({\r\n    selector: '[clear-fields]'\r\n})\r\nexport class ClearFieldsDirective implements OnInit {\r\n    @Input('clear-fields') clearFields = '';\r\n\r\n    constructor(@Optional() @Self() private ngCtrl: NgControl, private listFilterCmp: ListFilterComponent, private inject: Injector) { }\r\n\r\n    ngOnInit() {\r\n        if (this.clearFields && this.ngCtrl) {\r\n            this.ngCtrl.valueChanges.subscribe((v) => {\r\n                if (!this.ngCtrl.dirty) {\r\n                    return;\r\n                }\r\n                this.listFilterCmp.fieldCodeOfClearFields = [];\r\n                this.clearFields.split(',').forEach(n => {\r\n                    // å­æ®µç¼å·\r\n                    const conditionItem = this.listFilterCmp.listFilterConditions.find(c => c.fieldCode === n);\r\n                    if (conditionItem) {\r\n                        // è§¦åæ¸ç©ºå­æ®µåè¡¨åæ´ï¼ç¹æ®æ§ä»¶ç±»åçæ¸ç©ºï¼ä¸è½åªæ¯æ¸ç©ºå¼\r\n                        this.listFilterCmp.fieldCodeOfClearFields.push(n);\r\n                        // æ¸ç©ºå­æ®µ\r\n                        conditionItem.value.clearValue();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ListFilterComponent } from './list-filter.component';\r\n\r\nimport { InputComponent } from './controlcomponent/inputcomponent/input.component';\r\nimport { SearchComponent } from './controlcomponent/searchcomponent/search.component';\r\nimport { HelpComponent } from './controlcomponent/helpcomponent.ts/help.component';\r\nimport { DateComponent } from './controlcomponent/datecomponent/date.component';\r\nimport { DropDownComponent } from './controlcomponent/dropdowncomponent/dropdown.component';\r\nimport { NumberComponent } from './controlcomponent/numbercomponent/number.component';\r\nimport { FilterCheckboxComponent } from './controlcomponent/checkboxcomponent/checkbox.component';\r\nimport { DateRangeComponent } from './controlcomponent/daterangecomponent/daterange.component';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\nimport { DatalistModule } from '@farris/ui-datalist';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\n\r\n// import { InputsModule } from '@progress/kendo-angular-inputs';\r\nimport { SolutionService } from './service/solution.service';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\n\r\nimport { QuerySolutionService } from './submithandlers/query-solution.service';\r\nimport { ConvertorService } from './service/convertorservice';\r\nimport { ListFilterCommonComponent } from './list-filter-common';\r\n\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { ControlTypeXPipe } from './controlType.pipe';\r\nimport { FilterRadioComponent } from './controlcomponent/radiocomponent/radio.component';\r\nimport { FilterInputGroupComponent } from './controlcomponent/inputgroupcomponent/inputgroup.component';\r\nimport { ClearFieldsDirective } from './directives/clear-fields.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ListFilterComponent,\r\n    DateComponent,\r\n    NumberComponent,\r\n    HelpComponent,\r\n    InputComponent,\r\n    DropDownComponent,\r\n    SearchComponent,\r\n    FilterCheckboxComponent,\r\n    DateRangeComponent,\r\n    ListFilterCommonComponent,\r\n    FilterRadioComponent,\r\n    FilterInputGroupComponent,\r\n    ControlTypeXPipe,\r\n    ClearFieldsDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    InputGroupModule,\r\n    FarrisDatePickerModule,\r\n    DatalistModule,\r\n    ComboListModule,\r\n    LookupModule,\r\n    FarrisFormsModule,\r\n    NumberSpinnerModule,\r\n    PerfectScrollbarModule,\r\n    LocaleModule.forRoot()\r\n    // InputsModule\r\n  ],\r\n  providers:[\r\n    ConvertorService,\r\n    SolutionService,\r\n    QuerySolutionService\r\n  ],\r\n  exports: [\r\n    ListFilterComponent,\r\n    DateComponent,\r\n    NumberComponent,\r\n    HelpComponent,\r\n    InputComponent,\r\n    DropDownComponent,\r\n    SearchComponent,\r\n    FilterCheckboxComponent,\r\n    DateRangeComponent,\r\n    ListFilterCommonComponent,\r\n    FilterRadioComponent,\r\n    FilterInputGroupComponent,\r\n    ControlTypeXPipe\r\n  ]\r\n})\r\nexport class ListFilterModule { }\r\n","import { FieldConfig } from './fieldconfig/fieldconfig';\r\n\r\nexport class listFilterItem{\r\n    id: string;\r\n    name: string;\r\n    width: Number; // è®°å½å®½åº¦\r\n    isExtend: boolean\r\n    constructor(_id: string, _groupName: string) {\r\n        this.id = _id;\r\n        this.name = _groupName;\r\n        this.width = 0;\r\n        this.isExtend = false;\r\n    }\r\n    // è®¾ç½®å®½åº¦\r\n    setWidth(value: string) {\r\n        this.width = parseInt(value, 10);\r\n    }\r\n    // è·åå®½åº¦\r\n    getWidth(): any {\r\n        return this.width;\r\n    }\r\n}\r\nexport class listFilterGroup {\r\n    listItems:Array<listFilterItem>;\r\n    responsedIndex:number = 0;\r\n    constructor(){\r\n        this.listItems = [];\r\n    }\r\n}\r\n\r\n// export class listFilterGroup {\r\n//     id: string;\r\n//     name: string;\r\n//     presetId: Array<string> = []; // è®°å½åç´ çId\r\n//     responsedIndex: Array<Number> = []; // è®°å½è½¬åä¸ºä¸ææ¶åç´ çä½ç½®\r\n//     width: number; // è®°å½å®½åº¦\r\n//     constructor(_id: string, _groupName: string) {\r\n//         this.id = _id;\r\n//         this.name = _groupName;\r\n//         this.width = 0;\r\n//     }\r\n//     // è®¾ç½®å®½åº¦\r\n//     setWidth(value: any) {\r\n//         this.width = parseInt(value + '', 10);\r\n//     }\r\n//     // è·åå®½åº¦\r\n//     getWidth(): any {\r\n//         return this.width;\r\n//     }\r\n//     // æ´æ°presetIndex\r\n//     setPreset(value: Array<string> | string) {\r\n//         if (Array.isArray(value)) {\r\n//             this.presetId = this.presetId.concat(value);\r\n//         } else {\r\n//             this.presetId.push(value);\r\n//         }\r\n//     }\r\n//     // æ¸é¤preset\r\n//     delPreset(){\r\n//         this.presetId=[];\r\n//     }\r\n//     // å é¤\r\n//     removeResponsed(index) {\r\n//         this.responsedIndex.splice(index, 1);\r\n//     }\r\n//     // æ´æ°responsedIndex\r\n//     setResponsed(value: Array<Number> | Number) {\r\n//         if (Array.isArray(value)) {\r\n//             this.responsedIndex = this.responsedIndex.concat(value);\r\n//         } else {\r\n//             this.responsedIndex.push(value);\r\n//         }\r\n//     }\r\n//     // æ¯å¦å·²ç»å¼å§å¤çååºå¼\r\n//     isResponsing() {\r\n//         return this.responsedIndex.length > 0;\r\n//     }\r\n//     // æ¯å¦å·²ç»å¤çå®ååºå¼\r\n//     isResponsed() {\r\n//         return this.presetId.length === this.responsedIndex.length;\r\n//     }\r\n// }\r\n","import { ControlType } from '../controltype';\r\nimport { TextValue } from './textvalue';\r\nimport { NumberRangeValueConvertor } from './numberrangevaue';\r\nimport { DateRangeValue } from './daterangevalue';\r\nimport { HelpValue } from './helpvalue';\r\nimport { DropDownListValueConvert } from './dropdownlistvalue';\r\n\r\nexport interface IValue {\r\n    getControlType(): ControlType;\r\n    getOriginalValue(): any;\r\n    setOriginalValue(value: any): void;\r\n    clearValue(): void;\r\n    isEmpty(): boolean;\r\n}\r\n\r\nexport class ConditionValueConvert {\r\n    convertToObject(obj: IValue): Object {\r\n        let conditionValue = obj as IValue;\r\n        let controlType = conditionValue.getControlType();\r\n        let jobj = new Object();\r\n        jobj['Type'] = controlType;\r\n        if (controlType == ControlType.DropDown) {\r\n            let convertor = new DropDownListValueConvert();\r\n            jobj['Content'] = convertor.convertToObject(conditionValue);\r\n        }\r\n        else if (controlType == ControlType.NumberRange) {\r\n            let convertor = new NumberRangeValueConvertor();\r\n            jobj['Content'] = convertor.convertToObject(conditionValue);\r\n        }\r\n        else {\r\n            jobj['Content'] = conditionValue;\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    initFromObject(jobj: Object): IValue {\r\n        let controlType = jobj['Type'] as ControlType;\r\n        let content: IValue = jobj['Content'];\r\n        if (controlType == ControlType.Text) {\r\n            return Object.assign(new TextValue(), content as TextValue);\r\n        }\r\n        else if (controlType == ControlType.NumberRange) {\r\n            let convertor = new NumberRangeValueConvertor();\r\n            return convertor.initFromObject(content);\r\n        }\r\n        else if (controlType == ControlType.DateRange) {\r\n            return Object.assign(new DateRangeValue(), content as DateRangeValue);\r\n        }\r\n        else if (controlType == ControlType.DropDown) {\r\n            let convertor = new DropDownListValueConvert();\r\n            return convertor.initFromObject(content);\r\n        }\r\n        else if (controlType == ControlType.Help) {\r\n            return Object.assign(new HelpValue(), content as HelpValue);\r\n        }\r\n    }\r\n}","export interface RadioIEnumValue{\r\n    getEnumValueName():string;\r\n    getEnumValue():any;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}\r\n\r\nexport class RadioEnumValue implements RadioIEnumValue{\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","export enum DisplayType{\r\n    LIST=0,\r\n    TREELIST=1\r\n}","import { ControlType } from \"../controltype\";\r\nimport { DropDownControl, DropDownListControlConvert } from \"./dropdownlist/dropdowncontrol\";\r\nimport { TextControl } from \"./text/textcontrol\";\r\nimport { SearchControl } from './search/searchcontrol';\r\n\r\n\r\nimport { DateRangeControl } from \"./datarange/daterangecontrol\";\r\nimport { DateControl } from \"./date/datecontrol\";\r\nimport { HelpContol } from \"./help/helpcontrol\";\r\nimport { NumberRangeControl } from \"./numberrange/numberrangecontrol\";\r\nimport { CompareType } from '../comparetype';\r\n\r\n/**\r\n * æ§ä»¶æ¥å£\r\n */\r\nexport interface IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType():ControlType;\r\n    \r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¥æéè¦å¢å ç±»åæ¯è¾ */\r\n    compareType?:CompareType;\r\n    enableClear?: boolean;\r\n}\r\n\r\nexport class ControlConvert{\r\n    convertJObject(obj:IControl):Object{\r\n        let control=obj as IControl;\r\n        let controlType=control.getControlType();\r\n        let jobj=new Object();\r\n        jobj[\"Type\"]=controlType;\r\n        if(controlType!=ControlType.DropDown){\r\n            jobj[\"Content\"]=control;\r\n        }\r\n        else{\r\n            let convertor=new DropDownListControlConvert();\r\n            jobj[\"Content\"]=convertor.convertToObject(control as DropDownControl);\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    initFromJobject(jobj:Object):IControl{\r\n        let controlType=jobj[\"Type\"] as ControlType;\r\n        let content:IControl=jobj[\"Content\"];\r\n        if(controlType==ControlType.Text){\r\n            return Object.assign(new TextControl(),content as TextControl);\r\n        }\r\n        else if( controlType==ControlType.Search ){\r\n            return Object.assign(new SearchControl(),content as SearchControl);\r\n        }\r\n\r\n\r\n        else if(controlType==ControlType.DateRange){\r\n            return Object.assign(new DateRangeControl(),content as DateRangeControl);\r\n        }\r\n        else if(controlType==ControlType.NumberRange){\r\n            return Object.assign(new NumberRangeControl(),content as NumberRangeControl);\r\n        }\r\n        // else if(controlType==ControlType.DateTime){\r\n        //     return Object.assign(new DateControl(),content as DateControl);\r\n        // }\r\n        else if(controlType==ControlType.DropDown){\r\n            let convert=new DropDownListControlConvert();\r\n            return convert.initFromObject(content);\r\n        }\r\n        else if(controlType==ControlType.Help){\r\n            return Object.assign(new HelpContol(),content as HelpContol);\r\n        }\r\n    }\r\n}"],"names":["CompareType","ValueType","RelationType"],"mappings":"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"}
