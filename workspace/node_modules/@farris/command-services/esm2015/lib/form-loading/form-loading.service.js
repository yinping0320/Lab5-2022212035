import { Injectable, Optional } from '@angular/core';
import { LoadingService } from '@farris/ui-loading';
import { HideEventService } from './hide-event.service';
import { AppContext } from '@farris/devkit';
// tslint:disable: no-string-literal
/**
 * 加载提示Helper
 * 1、包装@farris/ui的LoadingService；
 * 2、提供针对表单的快捷方法；
 */
class FormLoadingService {
    /**
     * 强制显示，不能隐藏
     */
    /**
     * 构造函数
     * 注入@farris/ui的LoadingService
     */
    constructor(loadingService, hideEventService, applicationContext) {
        this.loadingService = loadingService;
        this.hideEventService = hideEventService;
        this.applicationContext = applicationContext;
        /**
         * 延迟loading定时器
         */
        this.loadingTimerIds = [];
        if (hideEventService) {
            this.hideEventService.hideEvent.subscribe(result => {
                this.hide();
            });
        }
    }
    setSuspend(flag) {
        FormLoadingService.isSuspend = flag;
    }
    /**
     * 显示加载中
     */
    show(configOrMessage) {
        if (FormLoadingService.isSuspend === true) {
            return;
        }
        if (this.loadingCmp) {
            this.loadingCmp.close();
            this.loadingCmp = null;
        }
        this.registerService();
        const loadingConfig = this.buildLoadingConfig(configOrMessage);
        this.loadingCmp = this.loadingService.show(loadingConfig);
        return this.loadingCmp;
    }
    /**
     * 延迟显示Loading
     */
    showLoadingWithDelay(delayTime, configOrMessage) {
        // this.show(configOrMessage);
        const timerId = setTimeout(() => {
            this.show(configOrMessage);
        }, delayTime);
        this.loadingTimerIds.push(timerId);
        this.registerService();
        return timerId;
    }
    /**
     * 隐藏延迟的Loading
     */
    hideDelayLoading(timerIdToClear) {
        this.clearLoadingTimer(timerIdToClear);
        this.hide();
    }
    /**
     * 构造LoadingConfig
     * @param configOrMessage 配置对象或消息字符串
     */
    buildLoadingConfig(configOrMessage) {
        let loadingConfig;
        if (!!configOrMessage) {
            if (typeof configOrMessage === 'object') {
                loadingConfig = configOrMessage;
            }
            else {
                loadingConfig = { 'message': configOrMessage };
            }
        }
        else {
            loadingConfig = {};
        }
        if (!loadingConfig.hasOwnProperty('delay')) {
            loadingConfig.delay = 0;
        }
        return loadingConfig;
    }
    /**
     * 关闭所有loading
     */
    clearAll() {
        FormLoadingService.isSuspend = false;
        window.setTimeout(() => {
            this.loadingService.clearAll();
        }, 350);
        this.loadingCmp = null;
        this.clearAllLoadingTimers();
        this.destroy();
    }
    /**
     * 清空Loading定时器
     */
    clearLoadingTimer(timerIdToClear) {
        clearTimeout(timerIdToClear);
        this.loadingTimerIds = this.loadingTimerIds.filter((timerId) => {
            return timerId !== timerIdToClear;
        });
    }
    /**
     * 清空所有Loading定时器
     */
    clearAllLoadingTimers() {
        this.loadingTimerIds.forEach((timerId) => {
            this.clearLoadingTimer(timerId);
        });
    }
    /**
     * 隐藏加载中
     */
    hide() {
        if (!this.loadingCmp) {
            this.destroy();
            return;
        }
        if (FormLoadingService.isSuspend === true) {
            return;
        }
        this.loadingCmp.close();
        this.loadingCmp = null;
        this.destroy();
    }
    /**
     * 销毁loadingService
     */
    destroy() {
        if (FormLoadingService.isSuspend === true) {
            return;
        }
        const services = window['DEVKIT_LOADING_SERVICE'] || [];
        if (services && Array.isArray(services) && services.length > 0) {
            services.forEach((service) => {
                if (service) {
                    service.clearAllLoadingTimers();
                    if (service.loadingCmp) {
                        service.loadingCmp.close();
                        service.loadingCmp = null;
                    }
                }
            });
        }
        window['DEVKIT_LOADING_SERVICE'] = [];
    }
    /**
     * 注册所有的LoadingService实例
     */
    registerService() {
        const services = window['DEVKIT_LOADING_SERVICE'] || [];
        services.push(this);
        window['DEVKIT_LOADING_SERVICE'] = services;
    }
}
FormLoadingService.isSuspend = false;
FormLoadingService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
FormLoadingService.ctorParameters = () => [
    { type: LoadingService },
    { type: HideEventService, decorators: [{ type: Optional }] },
    { type: AppContext, decorators: [{ type: Optional }] }
];
export { FormLoadingService };
//# sourceMappingURL=data:application/json;base64,