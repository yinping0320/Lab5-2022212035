import { Injectable, Optional } from '@angular/core';
import { EMPTY } from 'rxjs';
import { FormMessageService } from './form-message.service';
import { LanguageService } from './languag.service';
import { CloudprintService, OutputType, FileType, PrintType } from '@gsp-svc/cloudprint';
import { FormNotifyService } from './form-notify.service';
// tslint:disable: unified-signatures
// tslint:disable: max-line-length
/**
 * 打印服务
 * @Scope FrameComponent
 */
class PrintService {
    /**
     * 构造函数
     */
    constructor(msgService, languageService, printService, formNotifyService) {
        this.msgService = msgService;
        this.languageService = languageService;
        this.printService = printService;
        this.formNotifyService = formNotifyService;
    }
    /**
     * 打印单据
     * @param beMetaId BE元数据标识
     * @param bizBillId 业务单据标识
     */
    printSingle(beMetaId, bizBillId) {
        if (!bizBillId) {
            // this.msgService.error(this.languageService.unallowEmptyBizBillId);
            this.showWarning(this.languageService.unallowEmptyBizBillId);
            return EMPTY;
        }
        return this.printArray(beMetaId, [bizBillId]);
    }
    /**
     * 打印单据（通过id或ids）
     * @param beMetaId be元数据Id
     * @param ids 单据id或ids
     */
    printByIds(beMetaId, ids) {
        if (!ids) {
            // this.msgService.error(this.languageService.unallowEmptyBizBillId);
            this.showWarning(this.languageService.unallowEmptyBizBillId);
            return EMPTY;
        }
        const dataIds = ids.split(',').filter(item => item);
        return this.printArray(beMetaId, dataIds);
    }
    /**
     * 打印单据（带维度）
     * @param beMetaId be元数据Id
     * @param ids 单据id或ids
     * @param dim1 维度1值
     * @param dim2 维度2值
     * @param billCategoryId 单据类型Id
     */
    printByIdsWithDimension(beMetaId, ids, dim1, dim2, billCategoryId) {
        if (!ids) {
            // this.msgService.error(this.languageService.unallowEmptyBizBillId);
            this.showWarning(this.languageService.unallowEmptyBizBillId);
            return EMPTY;
        }
        const dataIds = ids.split(',').filter(item => item);
        return this.printArray(beMetaId, dataIds, dim1, dim2, billCategoryId);
    }
    /**
     * 打印多个单据
     * @param beMetaId BE元数据标识
     * @param dataIds 业务单据标识数组
     * @param dim1 维度1
     * @param dim2 维度2
     * @param billCategoryId 业务单据类型Id
     */
    printArray(beMetaId, dataIds, dim1, dim2, billCategoryId) {
        if (!dataIds || dataIds.length === 0) {
            // this.msgService.error(this.languageService.unallowEmptyBizBillId);
            this.showWarning(this.languageService.unallowEmptyBizBillId);
            return EMPTY;
        }
        const sourceOptions = this.buildSourceOptions({
            dataIds: dataIds,
            sourceId: beMetaId
        });
        const outputOptions = this.buildOutputOptions();
        if (typeof dim1 !== 'undefined') {
            sourceOptions.FirstDimensionVal = dim1;
        }
        if (typeof dim2 !== 'undefined') {
            sourceOptions.SecondDimensionVal = dim2;
        }
        if (typeof billCategoryId !== 'undefined') {
            sourceOptions.billCategoryId = billCategoryId;
        }
        return this.printService.outputBEData(sourceOptions, outputOptions, 'tab');
    }
    /**
     * 按照BE取数方式批量打印单据
     * @param beMetaId BE元数据标识
     * @param filterCondition 过滤条件
     * @param sortCondition 排序条件
     * @param includeChildData 包含子表数据
     */
    printMulti(beMetaId, filterCondition, sortCondition, includeChildData = true) {
        const entryFilter = { 'isUsePagination': false, 'filterConditions': [], 'sortConditions': [], 'pagination': null };
        if (filterCondition) {
            // 统一纠正最后一个过滤条件的Relation
            const filters = JSON.parse(filterCondition);
            if (filters && filters.length > 0) {
                filters[filters.length - 1].Relation = 0;
            }
            entryFilter.filterConditions = filters;
        }
        if (sortCondition) {
            entryFilter.sortConditions = JSON.parse(sortCondition);
        }
        // sfo:SourceFilterOptions
        const sourceFilterOptions = this.buildSourceFilterOptions({ sourceId: beMetaId, entryFilter, includeChildData });
        const outputOptions = this.buildOutputOptions();
        return this.printService.outputBEDataWithFilter(sourceFilterOptions, outputOptions, 'tab');
    }
    /**
     * 按照BE取数方式批量打印单据(带维度)
     * @param beMetaId BE元数据标识
     * @param filterCondition 过滤条件
     * @param sortCondition 排序条件
     * @param dim1 维度1value
     * @param dim2 维度2value
     * @param billCategoryId 业务单据类型Id
     * @param includeChildData 包含子表数据
     */
    printMultiWithDimension(beMetaId, filterCondition, sortCondition, dim1, dim2, billCategoryId, includeChildData = true) {
        const entryFilter = { 'isUsePagination': false, 'filterConditions': [], 'sortConditions': [], 'pagination': null };
        if (filterCondition) {
            // 统一纠正最后一个过滤条件的Relation
            const filters = JSON.parse(filterCondition);
            if (filters && filters.length > 0) {
                filters[filters.length - 1].Relation = 0;
            }
            entryFilter.filterConditions = filters;
        }
        if (sortCondition) {
            entryFilter.sortConditions = JSON.parse(sortCondition);
        }
        const sfo = this.buildSourceFilterOptions({ sourceId: beMetaId, entryFilter, includeChildData });
        if (typeof dim1 !== 'undefined') {
            sfo.FirstDimensionVal = dim1;
        }
        if (typeof dim2 !== 'undefined') {
            sfo.SecondDimensionVal = dim2;
        }
        if (typeof billCategoryId !== 'undefined') {
            sfo.billCategoryId = billCategoryId;
        }
        const outputOptions = this.buildOutputOptions();
        return this.printService.outputBEDataWithFilter(sfo, outputOptions, 'tab');
    }
    /**
     * 构造SourceOptions
     * @param options options
     */
    buildSourceOptions(options) {
        const so = {
            DataIds: options && options.dataIds || undefined,
            SourceId: options && options.sourceId || undefined,
            FirstDimensionVal: options && options.dim1 || undefined,
            SecondDimensionVal: options && options.dim2 || undefined,
            RetrieveParam: options && options.retrieveParam || undefined,
            FormatId: options && options.formatId || undefined,
            billCategoryId: options && options.billCategoryId || undefined,
            ServiceUnit: options && options.serviceUnit || undefined,
            currentPage: options && options.currentPage || undefined,
            pageRowCount: options && options.pageRowCount || undefined,
            queryType: options && options.queryType || undefined,
            queryServiceId: options && options.queryServiceId || undefined,
            queryParam: options && options.queryParam || undefined
        };
        return so;
    }
    /**
     * 构造OutputOptions
     * @param options options
     */
    buildOutputOptions(options) {
        const oo = {
            OutputType: options && options.outputType || OutputType.PRINT,
            FileType: options && options.fileType || FileType.Html5,
            Path: options && options.path || undefined,
            DeviceId: options && options.deviceId || undefined,
            printJob: options && options.printJob || undefined,
            printerName: options && options.printerName || undefined,
            printSetting: options && options.printSetting || undefined,
            printType: options && options.printType || PrintType.Form
        };
        return oo;
    }
    /**
     * 构造SourceFilterOptions
     * @param options options
     */
    buildSourceFilterOptions(options) {
        const entryFilter = { 'isUsePagination': false, 'filterConditions': [], 'sortConditions': [], 'pagination': null };
        const sfo = {
            SourceId: options.sourceId,
            EntityFilter: options && options.entryFilter || entryFilter,
            FirstDimensionVal: options && options.dim1 || undefined,
            SecondDimensionVal: options && options.dim2 || undefined,
            FormatId: options && options.formatId || undefined,
            ServiceUnit: options && options.serviceUnit || undefined,
            billCategoryId: options && options.billCategoryId || undefined,
            currentPage: options && options.currentPage || undefined,
            pageRowCount: options && options.pageRowCount || undefined,
            queryParam: options && options.queryParam || undefined,
            queryServiceId: options && options.queryServiceId || undefined,
            queryType: options && options.queryType || undefined,
            includeChildData: options && options.hasOwnProperty('includeChildData') ? options.includeChildData : true
        };
        return sfo;
    }
    /**
     * 展示错误消息
     * @param message 错误消息
     */
    showWarning(message) {
        if (this.notifyService) {
            this.notifyService.warning(message, { hideTitle: true });
        }
        else if (this.msgService) {
            this.msgService.error(message);
        }
    }
    get notifyService() {
        if (this.formNotifyService) {
            return this.formNotifyService;
        }
        else if (this.injector) {
            return this.injector.get(FormNotifyService, null);
        }
        return null;
    }
    get commandContext() {
        return this['context'] || null;
    }
    get frameContext() {
        return this.commandContext && this.commandContext.frameContext || null;
    }
    get injector() {
        return this.frameContext && this.frameContext.injector || null;
    }
}
PrintService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
PrintService.ctorParameters = () => [
    { type: FormMessageService },
    { type: LanguageService },
    { type: CloudprintService },
    { type: FormNotifyService, decorators: [{ type: Optional }] }
];
export { PrintService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpbnQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvY29tbWFuZC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbImxpYi9wcmludC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQVksUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9ELE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDN0IsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBR3BELE9BQU8sRUFBRSxpQkFBaUIsRUFBZ0MsVUFBVSxFQUFFLFFBQVEsRUFBdUIsU0FBUyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDNUksT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQscUNBQXFDO0FBQ3JDLGtDQUFrQztBQUNsQzs7O0dBR0c7QUFDSCxNQUNNLFlBQVk7SUFNaEI7O09BRUc7SUFDSCxZQUNVLFVBQThCLEVBQzlCLGVBQWdDLEVBQ2hDLFlBQStCLEVBQ25CLGlCQUFvQztRQUhoRCxlQUFVLEdBQVYsVUFBVSxDQUFvQjtRQUM5QixvQkFBZSxHQUFmLGVBQWUsQ0FBaUI7UUFDaEMsaUJBQVksR0FBWixZQUFZLENBQW1CO1FBQ25CLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7SUFFMUQsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxXQUFXLENBQUMsUUFBZ0IsRUFBRSxTQUFpQjtRQUNwRCxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2QscUVBQXFFO1lBQ3JFLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1lBQzdELE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFDRCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFF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RixVQUFVOzs7O1lBWkYsa0JBQWtCO1lBQ2xCLGVBQWU7WUFHZixpQkFBaUI7WUFDakIsaUJBQWlCLHVCQXFCckIsUUFBUTs7QUE0T2IsT0FBTyxFQUFFLFlBQVksRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0b3IsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEVNUFRZIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IEZvcm1NZXNzYWdlU2VydmljZSB9IGZyb20gJy4vZm9ybS1tZXNzYWdlLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBMYW5ndWFnZVNlcnZpY2UgfSBmcm9tICcuL2xhbmd1YWcuc2VydmljZSc7XHJcbmltcG9ydCB7IEJlZlJlcG9zaXRvcnkgfSBmcm9tICdAZmFycmlzL2JlZic7XHJcbmltcG9ydCB7IENvbW1hbmRDb250ZXh0LCBFbnRpdHksIEZyYW1lQ29udGV4dCB9IGZyb20gJ0BmYXJyaXMvZGV2a2l0JztcclxuaW1wb3J0IHsgQ2xvdWRwcmludFNlcnZpY2UsIE91dHB1dE9wdGlvbnMsIFNvdXJjZU9wdGlvbnMsIE91dHB1dFR5cGUsIEZpbGVUeXBlLCBTb3VyY2VGaWx0ZXJPcHRpb25zLCBQcmludFR5cGUgfSBmcm9tICdAZ3NwLXN2Yy9jbG91ZHByaW50JztcclxuaW1wb3J0IHsgRm9ybU5vdGlmeVNlcnZpY2UgfSBmcm9tICcuL2Zvcm0tbm90aWZ5LnNlcnZpY2UnO1xyXG4vLyB0c2xpbnQ6ZGlzYWJsZTogdW5pZmllZC1zaWduYXR1cmVzXHJcbi8vIHRzbGludDpkaXNhYmxlOiBtYXgtbGluZS1sZW5ndGhcclxuLyoqXHJcbiAqIOaJk+WNsOacjeWKoVxyXG4gKiBAU2NvcGUgRnJhbWVDb21wb25lbnRcclxuICovXHJcbkBJbmplY3RhYmxlKClcclxuY2xhc3MgUHJpbnRTZXJ2aWNlIHtcclxuICAvKipcclxuICAgKiDlrp7kvZPku5PlupNcclxuICAgKi9cclxuICBwcml2YXRlIHJlcG9zaXRvcnk6IEJlZlJlcG9zaXRvcnk8RW50aXR5PjtcclxuXHJcbiAgLyoqXHJcbiAgICog5p6E6YCg5Ye95pWwXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIG1zZ1NlcnZpY2U6IEZvcm1NZXNzYWdlU2VydmljZSxcclxuICAgIHByaXZhdGUgbGFuZ3VhZ2VTZXJ2aWNlOiBMYW5ndWFnZVNlcnZpY2UsXHJcbiAgICBwcml2YXRlIHByaW50U2VydmljZTogQ2xvdWRwcmludFNlcnZpY2UsXHJcbiAgICBAT3B0aW9uYWwoKSBwcml2YXRlIGZvcm1Ob3RpZnlTZXJ2aWNlOiBGb3JtTm90aWZ5U2VydmljZSxcclxuICApIHtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOaJk+WNsOWNleaNrlxyXG4gICAqIEBwYXJhbSBiZU1ldGFJZCBCReWFg+aVsOaNruagh+ivhlxyXG4gICAqIEBwYXJhbSBiaXpCaWxsSWQg5Lia5Yqh5Y2V5o2u5qCH6K+GXHJcbiAgICovXHJcbiAgcHVibGljIHByaW50U2luZ2xlKGJlTWV0YUlkOiBzdHJpbmcsIGJpekJpbGxJZDogc3RyaW5nKSB7XHJcbiAgICBpZiAoIWJpekJpbGxJZCkge1xyXG4gICAgICAvLyB0aGlzLm1zZ1NlcnZpY2UuZXJyb3IodGhpcy5sYW5ndWFnZVNlcnZpY2UudW5hbGxvd0VtcHR5Qml6QmlsbElkKTtcclxuICAgICAgdGhpcy5zaG93V2FybmluZyh0aGlzLmxhbmd1YWdlU2VydmljZS51bmFsbG93RW1wdHlCaXpCaWxsSWQpO1xyXG4gICAgICByZXR1cm4gRU1QVFk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5wcmludEFycmF5KGJlTWV0YUlkLCBbYml6QmlsbElkXSk7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOaJk+WNsOWNleaNru+8iOmAmui/h2lk5oiWaWRz77yJXHJcbiAgICogQHBhcmFtIGJlTWV0YUlkIGJl5YWD5pWw5o2uSWRcclxuICAgKiBAcGFyYW0gaWRzIOWNleaNrmlk5oiWaWRzXHJcbiAgICovXHJcbiAgcHVibGljIHByaW50QnlJZHMoYmVNZXRhSWQ6IHN0cmluZywgaWRzOiBzdHJpbmcpIHtcclxuICAgIGlmICghaWRzKSB7XHJcbiAgICAgIC8vIHRoaXMubXNnU2VydmljZS5lcnJvcih0aGlzLmxhbmd1YWdlU2VydmljZS51bmFsbG93RW1wdHlCaXpCaWxsSWQpO1xyXG4gICAgICB0aGlzLnNob3dXYXJuaW5nKHRoaXMubGFuZ3VhZ2VTZXJ2aWNlLnVuYWxsb3dFbXB0eUJpekJpbGxJZCk7XHJcbiAgICAgIHJldHVybiBFTVBUWTtcclxuICAgIH1cclxuICAgIGNvbnN0IGRhdGFJZHM6IEFycmF5PHN0cmluZz4gPSBpZHMuc3BsaXQoJywnKS5maWx0ZXIoaXRlbSA9PiBpdGVtKTtcclxuICAgIHJldHVybiB0aGlzLnByaW50QXJyYXkoYmVNZXRhSWQsIGRhdGFJZHMpO1xyXG4gIH1cclxuICAvKipcclxuICAgKiDmiZPljbDljZXmja7vvIjluKbnu7TluqbvvIlcclxuICAgKiBAcGFyYW0gYmVNZXRhSWQgYmXlhYPmlbDmja5JZFxyXG4gICAqIEBwYXJhbSBpZHMg5Y2V5o2uaWTmiJZpZHNcclxuICAgKiBAcGFyYW0gZGltMSDnu7TluqYx5YC8XHJcbiAgICogQHBhcmFtIGRpbTIg57u05bqmMuWAvFxyXG4gICAqIEBwYXJhbSBiaWxsQ2F0ZWdvcnlJZCDljZXmja7nsbvlnotJZFxyXG4gICAqL1xyXG4gIHB1YmxpYyBwcmludEJ5SWRzV2l0aERpbWVuc2lvbihiZU1ldGFJZDogc3RyaW5nLCBpZHM6IHN0cmluZywgZGltMTogc3RyaW5nLCBkaW0yOiBzdHJpbmcsIGJpbGxDYXRlZ29yeUlkPzogc3RyaW5nKSB7XHJcbiAgICBpZiAoIWlkcykge1xyXG4gICAgICAvLyB0aGlzLm1zZ1NlcnZpY2UuZXJyb3IodGhpcy5sYW5ndWFnZVNlcnZpY2UudW5hbGxvd0VtcHR5Qml6QmlsbElkKTtcclxuICAgICAgdGhpcy5zaG93V2FybmluZyh0aGlzLmxhbmd1YWdlU2VydmljZS51bmFsbG93RW1wdHlCaXpCaWxsSWQpO1xyXG4gICAgICByZXR1cm4gRU1QVFk7XHJcbiAgICB9XHJcbiAgICBjb25zdCBkYXRhSWRzOiBBcnJheTxzdHJpbmc+ID0gaWRzLnNwbGl0KCcsJykuZmlsdGVyKGl0ZW0gPT4gaXRlbSk7XHJcbiAgICByZXR1cm4gdGhpcy5wcmludEFycmF5KGJlTWV0YUlkLCBkYXRhSWRzLCBkaW0xLCBkaW0yLCBiaWxsQ2F0ZWdvcnlJZCk7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOaJk+WNsOWkmuS4quWNleaNrlxyXG4gICAqIEBwYXJhbSBiZU1ldGFJZCBCReWFg+aVsOaNruagh+ivhlxyXG4gICAqIEBwYXJhbSBkYXRhSWRzIOS4muWKoeWNleaNruagh+ivhuaVsOe7hFxyXG4gICAqIEBwYXJhbSBkaW0xIOe7tOW6pjFcclxuICAgKiBAcGFyYW0gZGltMiDnu7TluqYyXHJcbiAgICogQHBhcmFtIGJpbGxDYXRlZ29yeUlkIOS4muWKoeWNleaNruexu+Wei0lkXHJcbiAgICovXHJcbiAgcHVibGljIHByaW50QXJyYXkoYmVNZXRhSWQ6IHN0cmluZywgZGF0YUlkczogc3RyaW5nW10sIGRpbTE/OiBhbnksIGRpbTI/OiBhbnksIGJpbGxDYXRlZ29yeUlkPzogc3RyaW5nKSB7XHJcbiAgICBpZiAoIWRhdGFJZHMgfHwgZGF0YUlkcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgLy8gdGhpcy5tc2dTZXJ2aWNlLmVycm9yKHRoaXMubGFuZ3VhZ2VTZXJ2aWNlLnVuYWxsb3dFbXB0eUJpekJpbGxJZCk7XHJcbiAgICAgIHRoaXMuc2hvd1dhcm5pbmcodGhpcy5sYW5ndWFnZVNlcnZpY2UudW5hbGxvd0VtcHR5Qml6QmlsbElkKTtcclxuICAgICAgcmV0dXJuIEVNUFRZO1xyXG4gICAgfVxyXG4gICAgY29uc3Qgc291cmNlT3B0aW9uczogU291cmNlT3B0aW9ucyA9IHRoaXMuYnVpbGRTb3VyY2VPcHRpb25zKHtcclxuICAgICAgZGF0YUlkczogZGF0YUlkcyxcclxuICAgICAgc291cmNlSWQ6IGJlTWV0YUlkXHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCBvdXRwdXRPcHRpb25zOiBPdXRwdXRPcHRpb25zID0gdGhpcy5idWlsZE91dHB1dE9wdGlvbnMoKTtcclxuXHJcbiAgICBpZiAodHlwZW9mIGRpbTEgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgIHNvdXJjZU9wdGlvbnMuRmlyc3REaW1lbnNpb25WYWwgPSBkaW0xO1xyXG4gICAgfVxyXG4gICAgaWYgKHR5cGVvZiBkaW0yICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICBzb3VyY2VPcHRpb25zLlNlY29uZERpbWVuc2lvblZhbCA9IGRpbTI7XHJcbiAgICB9XHJcbiAgICBpZiAodHlwZW9mIGJpbGxDYXRlZ29yeUlkICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICBzb3VyY2VPcHRpb25zLmJpbGxDYXRlZ29yeUlkID0gYmlsbENhdGVnb3J5SWQ7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5wcmludFNlcnZpY2Uub3V0cHV0QkVEYXRhKHNvdXJjZU9wdGlvbnMsIG91dHB1dE9wdGlvbnMsICd0YWInKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOaMieeFp0JF5Y+W5pWw5pa55byP5om56YeP5omT5Y2w5Y2V5o2uXHJcbiAgICogQHBhcmFtIGJlTWV0YUlkIEJF5YWD5pWw5o2u5qCH6K+GXHJcbiAgICogQHBhcmFtIGZpbHRlckNvbmRpdGlvbiDov4fmu6TmnaHku7ZcclxuICAgKiBAcGFyYW0gc29ydENvbmRpdGlvbiDmjpLluo/mnaHku7ZcclxuICAgKiBAcGFyYW0gaW5jbHVkZUNoaWxkRGF0YSDljIXlkKvlrZDooajmlbDmja5cclxuICAgKi9cclxuICBwdWJsaWMgcHJpbnRNdWx0aShiZU1ldGFJZDogc3RyaW5nLCBmaWx0ZXJDb25kaXRpb246IHN0cmluZywgc29ydENvbmRpdGlvbjogc3RyaW5nLCBpbmNsdWRlQ2hpbGREYXRhOiBib29sZWFuID0gdHJ1ZSkge1xyXG4gICAgY29uc3QgZW50cnlGaWx0ZXIgPSB7ICdpc1VzZVBhZ2luYXRpb24nOiBmYWxzZSwgJ2ZpbHRlckNvbmRpdGlvbnMnOiBbXSwgJ3NvcnRDb25kaXRpb25zJzogW10sICdwYWdpbmF0aW9uJzogbnVsbCB9O1xyXG4gICAgaWYgKGZpbHRlckNvbmRpdGlvbikge1xyXG4gICAgICAvLyDnu5/kuIDnuqDmraPmnIDlkI7kuIDkuKrov4fmu6TmnaHku7bnmoRSZWxhdGlvblxyXG4gICAgICBjb25zdCBmaWx0ZXJzID0gSlNPTi5wYXJzZShmaWx0ZXJDb25kaXRpb24pO1xyXG4gICAgICBpZiAoZmlsdGVycyAmJiBmaWx0ZXJzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICBmaWx0ZXJzW2ZpbHRlcnMubGVuZ3RoIC0gMV0uUmVsYXRpb24gPSAwO1xyXG4gICAgICB9XHJcbiAgICAgIGVudHJ5RmlsdGVyLmZpbHRlckNvbmRpdGlvbnMgPSBmaWx0ZXJzO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChzb3J0Q29uZGl0aW9uKSB7XHJcbiAgICAgIGVudHJ5RmlsdGVyLnNvcnRDb25kaXRpb25zID0gSlNPTi5wYXJzZShzb3J0Q29uZGl0aW9uKTtcclxuICAgIH1cclxuICAgIC8vIHNmbzpTb3VyY2VGaWx0ZXJPcHRpb25zXHJcbiAgICBjb25zdCBzb3VyY2VGaWx0ZXJPcHRpb25zOiBTb3VyY2VGaWx0ZXJPcHRpb25zID0gdGhpcy5idWlsZFNvdXJjZUZpbHRlck9wdGlvbnMoeyBzb3VyY2VJZDogYmVNZXRhSWQsIGVudHJ5RmlsdGVyLCBpbmNsdWRlQ2hpbGREYXRhIH0pO1xyXG4gICAgY29uc3Qgb3V0cHV0T3B0aW9uczogT3V0cHV0T3B0aW9ucyA9IHRoaXMuYnVpbGRPdXRwdXRPcHRpb25zKCk7XHJcbiAgICByZXR1cm4gdGhpcy5wcmludFNlcnZpY2Uub3V0cHV0QkVEYXRhV2l0aEZpbHRlcihzb3VyY2VGaWx0ZXJPcHRpb25zLCBvdXRwdXRPcHRpb25zLCAndGFiJyk7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOaMieeFp0JF5Y+W5pWw5pa55byP5om56YeP5omT5Y2w5Y2V5o2uKOW4pue7tOW6pilcclxuICAgKiBAcGFyYW0gYmVNZXRhSWQgQkXlhYPmlbDmja7moIfor4ZcclxuICAgKiBAcGFyYW0gZmlsdGVyQ29uZGl0aW9uIOi/h+a7pOadoeS7tlxyXG4gICAqIEBwYXJhbSBzb3J0Q29uZGl0aW9uIOaOkuW6j+adoeS7tlxyXG4gICAqIEBwYXJhbSBkaW0xIOe7tOW6pjF2YWx1ZVxyXG4gICAqIEBwYXJhbSBkaW0yIOe7tOW6pjJ2YWx1ZVxyXG4gICAqIEBwYXJhbSBiaWxsQ2F0ZWdvcnlJZCDkuJrliqHljZXmja7nsbvlnotJZFxyXG4gICAqIEBwYXJhbSBpbmNsdWRlQ2hpbGREYXRhIOWMheWQq+WtkOihqOaVsOaNrlxyXG4gICAqL1xyXG4gIHB1YmxpYyBwcmludE11bHRpV2l0aERpbWVuc2lvbihiZU1ldGFJZDogc3RyaW5nLCBmaWx0ZXJDb25kaXRpb246IHN0cmluZywgc29ydENvbmRpdGlvbjogc3RyaW5nLCBkaW0xOiBzdHJpbmcsIGRpbTI6IHN0cmluZywgYmlsbENhdGVnb3J5SWQ/OiBzdHJpbmcsIGluY2x1ZGVDaGlsZERhdGE6IGJvb2xlYW4gPSB0cnVlKSB7XHJcbiAgICBjb25zdCBlbnRyeUZpbHRlciA9IHsgJ2lzVXNlUGFnaW5hdGlvbic6IGZhbHNlLCAnZmlsdGVyQ29uZGl0aW9ucyc6IFtdLCAnc29ydENvbmRpdGlvbnMnOiBbXSwgJ3BhZ2luYXRpb24nOiBudWxsIH07XHJcbiAgICBpZiAoZmlsdGVyQ29uZGl0aW9uKSB7XHJcbiAgICAgIC8vIOe7n+S4gOe6oOato+acgOWQjuS4gOS4qui/h+a7pOadoeS7tueahFJlbGF0aW9uXHJcbiAgICAgIGNvbnN0IGZpbHRlcnMgPSBKU09OLnBhcnNlKGZpbHRlckNvbmRpdGlvbik7XHJcbiAgICAgIGlmIChmaWx0ZXJzICYmIGZpbHRlcnMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIGZpbHRlcnNbZmlsdGVycy5sZW5ndGggLSAxXS5SZWxhdGlvbiA9IDA7XHJcbiAgICAgIH1cclxuICAgICAgZW50cnlGaWx0ZXIuZmlsdGVyQ29uZGl0aW9ucyA9IGZpbHRlcnM7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHNvcnRDb25kaXRpb24pIHtcclxuICAgICAgZW50cnlGaWx0ZXIuc29ydENvbmRpdGlvbnMgPSBKU09OLnBhcnNlKHNvcnRDb25kaXRpb24pO1xyXG4gICAgfVxyXG4gICAgY29uc3Qgc2ZvOiBTb3VyY2VGaWx0ZXJPcHRpb25zID0gdGhpcy5idWlsZFNvdXJjZUZpbHRlck9wdGlvbnMoeyBzb3VyY2VJZDogYmVNZXRhSWQsIGVudHJ5RmlsdGVyLCBpbmNsdWRlQ2hpbGREYXRhIH0pO1xyXG4gICAgaWYgKHR5cGVvZiBkaW0xICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICBzZm8uRmlyc3REaW1lbnNpb25WYWwgPSBkaW0xO1xyXG4gICAgfVxyXG4gICAgaWYgKHR5cGVvZiBkaW0yICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICBzZm8uU2Vjb25kRGltZW5zaW9uVmFsID0gZGltMjtcclxuICAgIH1cclxuICAgIGlmICh0eXBlb2YgYmlsbENhdGVnb3J5SWQgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgIHNmby5iaWxsQ2F0ZWdvcnlJZCA9IGJpbGxDYXRlZ29yeUlkO1xyXG4gICAgfVxyXG4gICAgY29uc3Qgb3V0cHV0T3B0aW9uczogT3V0cHV0T3B0aW9ucyA9IHRoaXMuYnVpbGRPdXRwdXRPcHRpb25zKCk7XHJcbiAgICByZXR1cm4gdGhpcy5wcmludFNlcnZpY2Uub3V0cHV0QkVEYXRhV2l0aEZpbHRlcihzZm8sIG91dHB1dE9wdGlvbnMsICd0YWInKTtcclxuICB9XHJcbiAgLyoqXHJcbiAgICog5p6E6YCgU291cmNlT3B0aW9uc1xyXG4gICAqIEBwYXJhbSBvcHRpb25zIG9wdGlvbnNcclxuICAgKi9cclxuICBwcml2YXRlIGJ1aWxkU291cmNlT3B0aW9ucyhvcHRpb25zOiB7IGRhdGFJZHM6IHN0cmluZ1tdLCBzb3VyY2VJZDogc3RyaW5nLCBbcHJvcDogc3RyaW5nXTogYW55IH0pOiBTb3VyY2VPcHRpb25zIHtcclxuICAgIGNvbnN0IHNvOiBTb3VyY2VPcHRpb25zID0ge1xyXG4gICAgICBEYXRhSWRzOiBvcHRpb25zICYmIG9wdGlvbnMuZGF0YUlkcyB8fCB1bmRlZmluZWQsXHJcbiAgICAgIFNvdXJjZUlkOiBvcHRpb25zICYmIG9wdGlvbnMuc291cmNlSWQgfHwgdW5kZWZpbmVkLFxyXG4gICAgICBGaXJzdERpbWVuc2lvblZhbDogb3B0aW9ucyAmJiBvcHRpb25zLmRpbTEgfHwgdW5kZWZpbmVkLFxyXG4gICAgICBTZWNvbmREaW1lbnNpb25WYWw6IG9wdGlvbnMgJiYgb3B0aW9ucy5kaW0yIHx8IHVuZGVmaW5lZCxcclxuICAgICAgUmV0cmlldmVQYXJhbTogb3B0aW9ucyAmJiBvcHRpb25zLnJldHJpZXZlUGFyYW0gfHwgdW5kZWZpbmVkLFxyXG4gICAgICBGb3JtYXRJZDogb3B0aW9ucyAmJiBvcHRpb25zLmZvcm1hdElkIHx8IHVuZGVmaW5lZCxcclxuICAgICAgYmlsbENhdGVnb3J5SWQ6IG9wdGlvbnMgJiYgb3B0aW9ucy5iaWxsQ2F0ZWdvcnlJZCB8fCB1bmRlZmluZWQsXHJcbiAgICAgIFNlcnZpY2VVbml0OiBvcHRpb25zICYmIG9wdGlvbnMuc2VydmljZVVuaXQgfHwgdW5kZWZpbmVkLFxyXG4gICAgICBjdXJyZW50UGFnZTogb3B0aW9ucyAmJiBvcHRpb25zLmN1cnJlbnRQYWdlIHx8IHVuZGVmaW5lZCxcclxuICAgICAgcGFnZVJvd0NvdW50OiBvcHRpb25zICYmIG9wdGlvbnMucGFnZVJvd0NvdW50IHx8IHVuZGVmaW5lZCxcclxuICAgICAgcXVlcnlUeXBlOiBvcHRpb25zICYmIG9wdGlvbnMucXVlcnlUeXBlIHx8IHVuZGVmaW5lZCxcclxuICAgICAgcXVlcnlTZXJ2aWNlSWQ6IG9wdGlvbnMgJiYgb3B0aW9ucy5xdWVyeVNlcnZpY2VJZCB8fCB1bmRlZmluZWQsXHJcbiAgICAgIHF1ZXJ5UGFyYW06IG9wdGlvbnMgJiYgb3B0aW9ucy5xdWVyeVBhcmFtIHx8IHVuZGVmaW5lZFxyXG4gICAgfTtcclxuICAgIHJldHVybiBzbztcclxuICB9XHJcbiAgLyoqXHJcbiAgICog5p6E6YCgT3V0cHV0T3B0aW9uc1xyXG4gICAqIEBwYXJhbSBvcHRpb25zIG9wdGlvbnNcclxuICAgKi9cclxuICBwcml2YXRlIGJ1aWxkT3V0cHV0T3B0aW9ucyhvcHRpb25zPzogeyBbcHJvcDogc3RyaW5nXTogYW55IH0pOiBPdXRwdXRPcHRpb25zIHtcclxuICAgIGNvbnN0IG9vOiBPdXRwdXRPcHRpb25zID0ge1xyXG4gICAgICBPdXRwdXRUeXBlOiBvcHRpb25zICYmIG9wdGlvbnMub3V0cHV0VHlwZSB8fCBPdXRwdXRUeXBlLlBSSU5ULFxyXG4gICAgICBGaWxlVHlwZTogb3B0aW9ucyAmJiBvcHRpb25zLmZpbGVUeXBlIHx8IEZpbGVUeXBlLkh0bWw1LFxyXG4gICAgICBQYXRoOiBvcHRpb25zICYmIG9wdGlvbnMucGF0aCB8fCB1bmRlZmluZWQsXHJcbiAgICAgIERldmljZUlkOiBvcHRpb25zICYmIG9wdGlvbnMuZGV2aWNlSWQgfHwgdW5kZWZpbmVkLFxyXG4gICAgICBwcmludEpvYjogb3B0aW9ucyAmJiBvcHRpb25zLnByaW50Sm9iIHx8IHVuZGVmaW5lZCxcclxuICAgICAgcHJpbnRlck5hbWU6IG9wdGlvbnMgJiYgb3B0aW9ucy5wcmludGVyTmFtZSB8fCB1bmRlZmluZWQsXHJcbiAgICAgIHByaW50U2V0dGluZzogb3B0aW9ucyAmJiBvcHRpb25zLnByaW50U2V0dGluZyB8fCB1bmRlZmluZWQsXHJcbiAgICAgIHByaW50VHlwZTogb3B0aW9ucyAmJiBvcHRpb25zLnByaW50VHlwZSB8fCBQcmludFR5cGUuRm9ybVxyXG4gICAgfTtcclxuICAgIHJldHVybiBvbztcclxuICB9XHJcbiAgLyoqXHJcbiAgICog5p6E6YCgU291cmNlRmlsdGVyT3B0aW9uc1xyXG4gICAqIEBwYXJhbSBvcHRpb25zIG9wdGlvbnNcclxuICAgKi9cclxuICBwcml2YXRlIGJ1aWxkU291cmNlRmlsdGVyT3B0aW9ucyhvcHRpb25zOiB7IHNvdXJjZUlkOiBzdHJpbmcsIFtwcm9wOiBzdHJpbmddOiBhbnkgfSk6IFNvdXJjZUZpbHRlck9wdGlvbnMge1xyXG4gICAgY29uc3QgZW50cnlGaWx0ZXIgPSB7ICdpc1VzZVBhZ2luYXRpb24nOiBmYWxzZSwgJ2ZpbHRlckNvbmRpdGlvbnMnOiBbXSwgJ3NvcnRDb25kaXRpb25zJzogW10sICdwYWdpbmF0aW9uJzogbnVsbCB9O1xyXG4gICAgY29uc3Qgc2ZvOiBTb3VyY2VGaWx0ZXJPcHRpb25zICYgeyBbcHJvcDogc3RyaW5nXTogYW55IH0gPSB7XHJcbiAgICAgIFNvdXJjZUlkOiBvcHRpb25zLnNvdXJjZUlkLFxyXG4gICAgICBFbnRpdHlGaWx0ZXI6IG9wdGlvbnMgJiYgb3B0aW9ucy5lbnRyeUZpbHRlciB8fCBlbnRyeUZpbHRlcixcclxuICAgICAgRmlyc3REaW1lbnNpb25WYWw6IG9wdGlvbnMgJiYgb3B0aW9ucy5kaW0xIHx8IHVuZGVmaW5lZCxcclxuICAgICAgU2Vjb25kRGltZW5zaW9uVmFsOiBvcHRpb25zICYmIG9wdGlvbnMuZGltMiB8fCB1bmRlZmluZWQsXHJcbiAgICAgIEZvcm1hdElkOiBvcHRpb25zICYmIG9wdGlvbnMuZm9ybWF0SWQgfHwgdW5kZWZpbmVkLFxyXG4gICAgICBTZXJ2aWNlVW5pdDogb3B0aW9ucyAmJiBvcHRpb25zLnNlcnZpY2VVbml0IHx8IHVuZGVmaW5lZCxcclxuICAgICAgYmlsbENhdGVnb3J5SWQ6IG9wdGlvbnMgJiYgb3B0aW9ucy5iaWxsQ2F0ZWdvcnlJZCB8fCB1bmRlZmluZWQsXHJcbiAgICAgIGN1cnJlbnRQYWdlOiBvcHRpb25zICYmIG9wdGlvbnMuY3VycmVudFBhZ2UgfHwgdW5kZWZpbmVkLFxyXG4gICAgICBwYWdlUm93Q291bnQ6IG9wdGlvbnMgJiYgb3B0aW9ucy5wYWdlUm93Q291bnQgfHwgdW5kZWZpbmVkLFxyXG4gICAgICBxdWVyeVBhcmFtOiBvcHRpb25zICYmIG9wdGlvbnMucXVlcnlQYXJhbSB8fCB1bmRlZmluZWQsXHJcbiAgICAgIHF1ZXJ5U2VydmljZUlkOiBvcHRpb25zICYmIG9wdGlvbnMucXVlcnlTZXJ2aWNlSWQgfHwgdW5kZWZpbmVkLFxyXG4gICAgICBxdWVyeVR5cGU6IG9wdGlvbnMgJiYgb3B0aW9ucy5xdWVyeVR5cGUgfHwgdW5kZWZpbmVkLFxyXG4gICAgICBpbmNsdWRlQ2hpbGREYXRhOiBvcHRpb25zICYmIG9wdGlvbnMuaGFzT3duUHJvcGVydHkoJ2luY2x1ZGVDaGlsZERhdGEnKSA/IG9wdGlvbnMuaW5jbHVkZUNoaWxkRGF0YSA6IHRydWVcclxuICAgIH07XHJcbiAgICByZXR1cm4gc2ZvO1xyXG4gIH1cclxuICAvKipcclxuICAgKiDlsZXnpLrplJnor6/mtojmga9cclxuICAgKiBAcGFyYW0gbWVzc2FnZSDplJnor6/mtojmga9cclxuICAgKi9cclxuICBwcml2YXRlIHNob3dXYXJuaW5nKG1lc3NhZ2U6IHN0cmluZykge1xyXG4gICAgaWYgKHRoaXMubm90aWZ5U2VydmljZSkge1xyXG4gICAgICB0aGlzLm5vdGlmeVNlcnZpY2Uud2FybmluZyhtZXNzYWdlLCB7IGhpZGVUaXRsZTogdHJ1ZSB9KTtcclxuICAgIH0gZWxzZSBpZiAodGhpcy5tc2dTZXJ2aWNlKSB7XHJcbiAgICAgIHRoaXMubXNnU2VydmljZS5lcnJvcihtZXNzYWdlKTtcclxuICAgIH1cclxuICB9XHJcbiAgcHJpdmF0ZSBnZXQgbm90aWZ5U2VydmljZSgpOiBGb3JtTm90aWZ5U2VydmljZSB8IG51bGwge1xyXG4gICAgaWYgKHRoaXMuZm9ybU5vdGlmeVNlcnZpY2UpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuZm9ybU5vdGlmeVNlcnZpY2U7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuaW5qZWN0b3IpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuaW5qZWN0b3IuZ2V0PEZvcm1Ob3RpZnlTZXJ2aWNlPihGb3JtTm90aWZ5U2VydmljZSwgbnVsbCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbiAgcHJpdmF0ZSBnZXQgY29tbWFuZENvbnRleHQoKTogQ29tbWFuZENvbnRleHQgfCBudWxsIHtcclxuICAgIHJldHVybiB0aGlzWydjb250ZXh0J10gfHwgbnVsbDtcclxuICB9XHJcbiAgcHJpdmF0ZSBnZXQgZnJhbWVDb250ZXh0KCk6IEZyYW1lQ29udGV4dCB8IG51bGwge1xyXG4gICAgcmV0dXJuIHRoaXMuY29tbWFuZENvbnRleHQgJiYgdGhpcy5jb21tYW5kQ29udGV4dC5mcmFtZUNvbnRleHQgfHwgbnVsbDtcclxuICB9XHJcbiAgcHJpdmF0ZSBnZXQgaW5qZWN0b3IoKTogSW5qZWN0b3IgfCBudWxsIHtcclxuICAgIHJldHVybiB0aGlzLmZyYW1lQ29udGV4dCAmJiB0aGlzLmZyYW1lQ29udGV4dC5pbmplY3RvciB8fCBudWxsO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IHsgUHJpbnRTZXJ2aWNlIH07XHJcbiJdfQ==