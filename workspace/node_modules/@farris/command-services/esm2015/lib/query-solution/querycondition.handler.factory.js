import { ControlType } from "@farris/component-querycondition";
import { TextHandler } from "./handlers/text.handler";
import { DateRangeHandler } from "./handlers/daterage.handler";
import { DropDownHandler } from "./handlers/dropdown.handler";
import { NumberRangeHandler } from "./handlers/numberrage.handler";
import { SmartHelpHandler } from "./handlers/smarthelp.handler";
import { SingleYearHandler } from './handlers/single-year.handler';
import { CheckBoxHandler } from './handlers/checkbox.handler';
import { SingleMonthHandler } from './handlers/single-month.handler';
import { MonthRangeHandler } from './handlers/monthrange.handler';
import { SingleDateTimeHandler } from './handlers/single-date-time.handler';
import { SingleNumberHandler } from './handlers/single-number.handler';
import { SingleDateHandler } from './handlers/single-date.handler';
import { ComboLookUpHandler } from './handlers/combolookup.handler';
import { RadioHandler } from './handlers/radio.handler';
import { InputGroupHandler } from './handlers/inputgroup.handler';
export class QueryConditionHandlerFactory {
    constructor() {
        this.queryConditionHandlerMapping = new Map();
        this.queryConditionHandlerMapping.set(ControlType.Text, new TextHandler());
        this.queryConditionHandlerMapping.set(ControlType.InputGroup, new InputGroupHandler());
        this.queryConditionHandlerMapping.set(ControlType.DateRange, new DateRangeHandler());
        this.queryConditionHandlerMapping.set(ControlType.DateTimeRange, new DateRangeHandler());
        this.queryConditionHandlerMapping.set(ControlType.DropDownList, new DropDownHandler());
        this.queryConditionHandlerMapping.set(ControlType.NumberRange, new NumberRangeHandler());
        this.queryConditionHandlerMapping.set(ControlType.SmartHelp, new SmartHelpHandler());
        this.queryConditionHandlerMapping.set(ControlType.SingleYear, new SingleYearHandler());
        this.queryConditionHandlerMapping.set(ControlType.BoolCheck, new CheckBoxHandler());
        this.queryConditionHandlerMapping.set(ControlType.SingleMonth, new SingleMonthHandler());
        this.queryConditionHandlerMapping.set(ControlType.MonthRange, new MonthRangeHandler());
        this.queryConditionHandlerMapping.set(ControlType.SingleDateTime, new SingleDateTimeHandler());
        this.queryConditionHandlerMapping.set(ControlType.SingleNumber, new SingleNumberHandler());
        this.queryConditionHandlerMapping.set(ControlType.SingleDate, new SingleDateHandler());
        this.queryConditionHandlerMapping.set(ControlType.ComboLookUp, new ComboLookUpHandler());
        this.queryConditionHandlerMapping.set(ControlType.Radio, new RadioHandler());
    }
    static getInstance() {
        if (!QueryConditionHandlerFactory._instance) {
            QueryConditionHandlerFactory._instance = new QueryConditionHandlerFactory();
        }
        return QueryConditionHandlerFactory._instance;
    }
    getHandler(controlType) {
        return this.queryConditionHandlerMapping.get(controlType);
    }
}
QueryConditionHandlerFactory._instance = null;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnljb25kaXRpb24uaGFuZGxlci5mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9jb21tYW5kLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsibGliL3F1ZXJ5LXNvbHV0aW9uL3F1ZXJ5Y29uZGl0aW9uLmhhbmRsZXIuZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFFL0QsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDckUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDNUUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDdkUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbkUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDcEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBRWxFLE1BQU0sT0FBTyw0QkFBNEI7SUFJckM7UUFEUSxpQ0FBNEIsR0FBNkMsSUFBSSxHQUFHLEVBQXVDLENBQUM7UUFFNUgsSUFBSSxDQUFDLDRCQUE0QixDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLElBQUksV0FBVyxFQUFFLENBQUMsQ0FBQztRQUMzRSxJQUFJLENBQUMsNEJBQTRCLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxVQUFVLEVBQUUsSUFBSSxpQkFBaUIsRUFBRSxDQUFDLENBQUM7UUFDdkYsSUFBSSxDQUFDLDRCQUE0QixDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsU0FBUyxFQUFFLElBQUksZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO1FBQ3JGLElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLGFBQWEsRUFBRSxJQUFJLGdCQUFnQixFQUFFLENBQUMsQ0FBQztRQUN6RixJQUFJLENBQUMsNEJBQTRCLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxZQUFZLEVBQUUsSUFBSSxlQUFlLEVBQUUsQ0FBQyxDQUFDO1FBQ3ZGLElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLFdBQVcsRUFBRSxJQUFJLGtCQUFrQixFQUFFLENBQUMsQ0FBQztRQUN6RixJQUFJLENBQUMsNEJBQTRCLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxTQUFTLEVBQUUsSUFBSSxnQkFBZ0IsRUFBRSxDQUFDLENBQUM7UUFDckYsSUFBSSxDQUFDLDRCQUE0QixDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsVUFBVSxFQUFFLElBQUksaUJBQWlCLEVBQUUsQ0FBQyxDQUFDO1FBQ3ZGLElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLFNBQVMsRUFBRSxJQUFJLGVBQWUsRUFBRSxDQUFDLENBQUM7UUFDcEYsSUFBSSxDQUFDLDRCQUE0QixDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsV0FBVyxFQUFFLElBQUksa0JBQWtCLEVBQUUsQ0FBQyxDQUFDO1FBQ3pGLElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLFVBQVUsRUFBRSxJQUFJLGlCQUFpQixFQUFFLENBQUMsQ0FBQztRQUN2RixJQUFJLENBQUMsNEJBQTRCLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxjQUFjLEVBQUUsSUFBSSxxQkFBcUIsRUFBRSxDQUFDLENBQUM7UUFDL0YsSUFBSSxDQUFDLDRCQUE0QixDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsWUFBWSxFQUFFLElBQUksbUJBQW1CLEVBQUUsQ0FBQyxDQUFDO1FBQzNGLElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLFVBQVUsRUFBRSxJQUFJLGlCQUFpQixFQUFFLENBQUMsQ0FBQztRQUN2RixJQUFJLENBQUMsNEJBQTRCLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxXQUFXLEVBQUUsSUFBSSxrQkFBa0IsRUFBRSxDQUFDLENBQUM7UUFDekYsSUFBSSxDQUFDLDRCQUE0QixDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLElBQUksWUFBWSxFQUFFLENBQUMsQ0FBQztJQUNqRixDQUFDO0lBQ00sTUFBTSxDQUFDLFdBQVc7UUFDckIsSUFBRyxDQUFDLDRCQUE0QixDQUFDLFNBQVMsRUFBQztZQUN2Qyw0QkFBNEIsQ0FBQyxTQUFTLEdBQUcsSUFBSSw0QkFBNEIsRUFBRSxDQUFDO1NBQy9FO1FBQ0QsT0FBTyw0QkFBNEIsQ0FBQyxTQUFTLENBQUM7SUFDbEQsQ0FBQztJQUVELFVBQVUsQ0FBQyxXQUF3QjtRQUMvQixPQUFPLElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDOUQsQ0FBQzs7QUE3QmMsc0NBQVMsR0FBaUMsSUFBSSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udHJvbFR5cGUgfSBmcm9tIFwiQGZhcnJpcy9jb21wb25lbnQtcXVlcnljb25kaXRpb25cIjtcclxuaW1wb3J0IHsgSVF1ZXJ5Q29uZGl0aW9uSGFuZGxlciB9IGZyb20gXCIuL2hhbmRsZXJzL2lxdWVyeWNvbmRpdGlvbi5oYW5kbGVyXCI7XHJcbmltcG9ydCB7IFRleHRIYW5kbGVyIH0gZnJvbSBcIi4vaGFuZGxlcnMvdGV4dC5oYW5kbGVyXCI7XHJcbmltcG9ydCB7IERhdGVSYW5nZUhhbmRsZXIgfSBmcm9tIFwiLi9oYW5kbGVycy9kYXRlcmFnZS5oYW5kbGVyXCI7XHJcbmltcG9ydCB7IERyb3BEb3duSGFuZGxlciB9IGZyb20gXCIuL2hhbmRsZXJzL2Ryb3Bkb3duLmhhbmRsZXJcIjtcclxuaW1wb3J0IHsgTnVtYmVyUmFuZ2VIYW5kbGVyIH0gZnJvbSBcIi4vaGFuZGxlcnMvbnVtYmVycmFnZS5oYW5kbGVyXCI7XHJcbmltcG9ydCB7IFNtYXJ0SGVscEhhbmRsZXIgfSBmcm9tIFwiLi9oYW5kbGVycy9zbWFydGhlbHAuaGFuZGxlclwiO1xyXG5pbXBvcnQgeyBTaW5nbGVZZWFySGFuZGxlciB9IGZyb20gJy4vaGFuZGxlcnMvc2luZ2xlLXllYXIuaGFuZGxlcic7XHJcbmltcG9ydCB7IENoZWNrQm94SGFuZGxlciB9IGZyb20gJy4vaGFuZGxlcnMvY2hlY2tib3guaGFuZGxlcic7XHJcbmltcG9ydCB7IFNpbmdsZU1vbnRoSGFuZGxlciB9IGZyb20gJy4vaGFuZGxlcnMvc2luZ2xlLW1vbnRoLmhhbmRsZXInO1xyXG5pbXBvcnQgeyBNb250aFJhbmdlSGFuZGxlciB9IGZyb20gJy4vaGFuZGxlcnMvbW9udGhyYW5nZS5oYW5kbGVyJztcclxuaW1wb3J0IHsgU2luZ2xlRGF0ZVRpbWVIYW5kbGVyIH0gZnJvbSAnLi9oYW5kbGVycy9zaW5nbGUtZGF0ZS10aW1lLmhhbmRsZXInO1xyXG5pbXBvcnQgeyBTaW5nbGVOdW1iZXJIYW5kbGVyIH0gZnJvbSAnLi9oYW5kbGVycy9zaW5nbGUtbnVtYmVyLmhhbmRsZXInO1xyXG5pbXBvcnQgeyBTaW5nbGVEYXRlSGFuZGxlciB9IGZyb20gJy4vaGFuZGxlcnMvc2luZ2xlLWRhdGUuaGFuZGxlcic7XHJcbmltcG9ydCB7IENvbWJvTG9va1VwSGFuZGxlciB9IGZyb20gJy4vaGFuZGxlcnMvY29tYm9sb29rdXAuaGFuZGxlcic7XHJcbmltcG9ydCB7IFJhZGlvSGFuZGxlciB9IGZyb20gJy4vaGFuZGxlcnMvcmFkaW8uaGFuZGxlcic7XHJcbmltcG9ydCB7IElucHV0R3JvdXBIYW5kbGVyIH0gZnJvbSAnLi9oYW5kbGVycy9pbnB1dGdyb3VwLmhhbmRsZXInO1xyXG5cclxuZXhwb3J0IGNsYXNzIFF1ZXJ5Q29uZGl0aW9uSGFuZGxlckZhY3Rvcnkge1xyXG5cclxuICAgIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTogUXVlcnlDb25kaXRpb25IYW5kbGVyRmFjdG9yeSA9IG51bGw7XHJcbiAgICBwcml2YXRlIHF1ZXJ5Q29uZGl0aW9uSGFuZGxlck1hcHBpbmc6IE1hcDxDb250cm9sVHlwZSwgSVF1ZXJ5Q29uZGl0aW9uSGFuZGxlcj4gPSBuZXcgTWFwPENvbnRyb2xUeXBlLCBJUXVlcnlDb25kaXRpb25IYW5kbGVyPigpO1xyXG4gICAgcHJpdmF0ZSBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgIHRoaXMucXVlcnlDb25kaXRpb25IYW5kbGVyTWFwcGluZy5zZXQoQ29udHJvbFR5cGUuVGV4dCwgbmV3IFRleHRIYW5kbGVyKCkpO1xyXG4gICAgICAgIHRoaXMucXVlcnlDb25kaXRpb25IYW5kbGVyTWFwcGluZy5zZXQoQ29udHJvbFR5cGUuSW5wdXRHcm91cCwgbmV3IElucHV0R3JvdXBIYW5kbGVyKCkpO1xyXG4gICAgICAgIHRoaXMucXVlcnlDb25kaXRpb25IYW5kbGVyTWFwcGluZy5zZXQoQ29udHJvbFR5cGUuRGF0ZVJhbmdlLCBuZXcgRGF0ZVJhbmdlSGFuZGxlcigpKTtcclxuICAgICAgICB0aGlzLnF1ZXJ5Q29uZGl0aW9uSGFuZGxlck1hcHBpbmcuc2V0KENvbnRyb2xUeXBlLkRhdGVUaW1lUmFuZ2UsIG5ldyBEYXRlUmFuZ2VIYW5kbGVyKCkpO1xyXG4gICAgICAgIHRoaXMucXVlcnlDb25kaXRpb25IYW5kbGVyTWFwcGluZy5zZXQoQ29udHJvbFR5cGUuRHJvcERvd25MaXN0LCBuZXcgRHJvcERvd25IYW5kbGVyKCkpO1xyXG4gICAgICAgIHRoaXMucXVlcnlDb25kaXRpb25IYW5kbGVyTWFwcGluZy5zZXQoQ29udHJvbFR5cGUuTnVtYmVyUmFuZ2UsIG5ldyBOdW1iZXJSYW5nZUhhbmRsZXIoKSk7XHJcbiAgICAgICAgdGhpcy5xdWVyeUNvbmRpdGlvbkhhbmRsZXJNYXBwaW5nLnNldChDb250cm9sVHlwZS5TbWFydEhlbHAsIG5ldyBTbWFydEhlbHBIYW5kbGVyKCkpO1xyXG4gICAgICAgIHRoaXMucXVlcnlDb25kaXRpb25IYW5kbGVyTWFwcGluZy5zZXQoQ29udHJvbFR5cGUuU2luZ2xlWWVhciwgbmV3IFNpbmdsZVllYXJIYW5kbGVyKCkpO1xyXG4gICAgICAgIHRoaXMucXVlcnlDb25kaXRpb25IYW5kbGVyTWFwcGluZy5zZXQoQ29udHJvbFR5cGUuQm9vbENoZWNrLCBuZXcgQ2hlY2tCb3hIYW5kbGVyKCkpO1xyXG4gICAgICAgIHRoaXMucXVlcnlDb25kaXRpb25IYW5kbGVyTWFwcGluZy5zZXQoQ29udHJvbFR5cGUuU2luZ2xlTW9udGgsIG5ldyBTaW5nbGVNb250aEhhbmRsZXIoKSk7XHJcbiAgICAgICAgdGhpcy5xdWVyeUNvbmRpdGlvbkhhbmRsZXJNYXBwaW5nLnNldChDb250cm9sVHlwZS5Nb250aFJhbmdlLCBuZXcgTW9udGhSYW5nZUhhbmRsZXIoKSk7XHJcbiAgICAgICAgdGhpcy5xdWVyeUNvbmRpdGlvbkhhbmRsZXJNYXBwaW5nLnNldChDb250cm9sVHlwZS5TaW5nbGVEYXRlVGltZSwgbmV3IFNpbmdsZURhdGVUaW1lSGFuZGxlcigpKTtcclxuICAgICAgICB0aGlzLnF1ZXJ5Q29uZGl0aW9uSGFuZGxlck1hcHBpbmcuc2V0KENvbnRyb2xUeXBlLlNpbmdsZU51bWJlciwgbmV3IFNpbmdsZU51bWJlckhhbmRsZXIoKSk7XHJcbiAgICAgICAgdGhpcy5xdWVyeUNvbmRpdGlvbkhhbmRsZXJNYXBwaW5nLnNldChDb250cm9sVHlwZS5TaW5nbGVEYXRlLCBuZXcgU2luZ2xlRGF0ZUhhbmRsZXIoKSk7XHJcbiAgICAgICAgdGhpcy5xdWVyeUNvbmRpdGlvbkhhbmRsZXJNYXBwaW5nLnNldChDb250cm9sVHlwZS5Db21ib0xvb2tVcCwgbmV3IENvbWJvTG9va1VwSGFuZGxlcigpKTtcclxuICAgICAgICB0aGlzLnF1ZXJ5Q29uZGl0aW9uSGFuZGxlck1hcHBpbmcuc2V0KENvbnRyb2xUeXBlLlJhZGlvLCBuZXcgUmFkaW9IYW5kbGVyKCkpO1xyXG4gICAgfVxyXG4gICAgcHVibGljIHN0YXRpYyBnZXRJbnN0YW5jZSgpe1xyXG4gICAgICAgIGlmKCFRdWVyeUNvbmRpdGlvbkhhbmRsZXJGYWN0b3J5Ll9pbnN0YW5jZSl7XHJcbiAgICAgICAgICAgIFF1ZXJ5Q29uZGl0aW9uSGFuZGxlckZhY3RvcnkuX2luc3RhbmNlID0gbmV3IFF1ZXJ5Q29uZGl0aW9uSGFuZGxlckZhY3RvcnkoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFF1ZXJ5Q29uZGl0aW9uSGFuZGxlckZhY3RvcnkuX2luc3RhbmNlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEhhbmRsZXIoY29udHJvbFR5cGU6IENvbnRyb2xUeXBlKTogSVF1ZXJ5Q29uZGl0aW9uSGFuZGxlcntcclxuICAgICAgICByZXR1cm4gdGhpcy5xdWVyeUNvbmRpdGlvbkhhbmRsZXJNYXBwaW5nLmdldChjb250cm9sVHlwZSk7XHJcbiAgICB9XHJcbn0iXX0=