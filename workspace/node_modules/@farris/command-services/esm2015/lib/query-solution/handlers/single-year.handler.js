import { CompareType } from '../enum/compare-type.enum';
import { ValueType } from '../enum/value-type.enum';
import { RelationType } from '../enum/relation-type.enum';
export class SingleYearHandler {
    convert(qc) {
        const yv = qc.value;
        return [{
                'FilterField': qc.fieldCode,
                'Compare': (qc.compareType || qc.compareType === 0) ? qc.compareType : CompareType.Equal,
                'Value': yv.yearValue,
                'Relation': (qc.relation || qc.relation === 0) ? qc.relation : RelationType.And,
                'Expresstype': ValueType.Value,
                'Lbracket': qc.Lbracket || null,
                'Rbracket': qc.Rbracket || null
            }];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLXllYXIuaGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvY29tbWFuZC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbImxpYi9xdWVyeS1zb2x1dGlvbi9oYW5kbGVycy9zaW5nbGUteWVhci5oYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDcEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRTFELE1BQU0sT0FBTyxpQkFBaUI7SUFDMUIsT0FBTyxDQUFDLEVBQWtCO1FBQ3RCLE1BQU0sRUFBRSxHQUFJLEVBQUUsQ0FBQyxLQUF5QixDQUFDO1FBQ3pDLE9BQU8sQ0FBQztnQkFDSixhQUFhLEVBQUcsRUFBRSxDQUFDLFNBQVM7Z0JBQzVCLFNBQVMsRUFBRyxDQUFDLEVBQUUsQ0FBQyxXQUFXLElBQUksRUFBRSxDQUFDLFdBQVcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLEtBQUs7Z0JBQ3pGLE9BQU8sRUFBRyxFQUFFLENBQUMsU0FBUztnQkFDdEIsVUFBVSxFQUFHLENBQUMsRUFBRSxDQUFDLFFBQVEsSUFBSSxFQUFFLENBQUMsUUFBUSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsR0FBRztnQkFDaEYsYUFBYSxFQUFDLFNBQVMsQ0FBQyxLQUFLO2dCQUM3QixVQUFVLEVBQUUsRUFBRSxDQUFDLFFBQVEsSUFBSSxJQUFJO2dCQUMvQixVQUFVLEVBQUUsRUFBRSxDQUFDLFFBQVEsSUFBSSxJQUFJO2FBQ2xDLENBQUMsQ0FBQztJQUNQLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElRdWVyeUNvbmRpdGlvbkhhbmRsZXIgfSBmcm9tIFwiLi9pcXVlcnljb25kaXRpb24uaGFuZGxlclwiO1xyXG5pbXBvcnQgeyBRdWVyeUNvbmRpdGlvbiwgU2luZ2xlWWVhclZhbHVlIH0gZnJvbSBcIkBmYXJyaXMvY29tcG9uZW50LXF1ZXJ5Y29uZGl0aW9uXCI7XHJcbmltcG9ydCB7IENvbXBhcmVUeXBlIH0gZnJvbSAnLi4vZW51bS9jb21wYXJlLXR5cGUuZW51bSc7XHJcbmltcG9ydCB7IFZhbHVlVHlwZSB9IGZyb20gJy4uL2VudW0vdmFsdWUtdHlwZS5lbnVtJztcclxuaW1wb3J0IHsgUmVsYXRpb25UeXBlIH0gZnJvbSAnLi4vZW51bS9yZWxhdGlvbi10eXBlLmVudW0nO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNpbmdsZVllYXJIYW5kbGVyIGltcGxlbWVudHMgSVF1ZXJ5Q29uZGl0aW9uSGFuZGxlcntcclxuICAgIGNvbnZlcnQocWM6IFF1ZXJ5Q29uZGl0aW9uKSB7XHJcbiAgICAgICAgY29uc3QgeXYgPSAocWMudmFsdWUgYXMgU2luZ2xlWWVhclZhbHVlKTtcclxuICAgICAgICByZXR1cm4gW3tcclxuICAgICAgICAgICAgJ0ZpbHRlckZpZWxkJyA6IHFjLmZpZWxkQ29kZSxcclxuICAgICAgICAgICAgJ0NvbXBhcmUnIDogKHFjLmNvbXBhcmVUeXBlIHx8IHFjLmNvbXBhcmVUeXBlID09PSAwKSA/IHFjLmNvbXBhcmVUeXBlIDogQ29tcGFyZVR5cGUuRXF1YWwsXHJcbiAgICAgICAgICAgICdWYWx1ZScgOiB5di55ZWFyVmFsdWUsXHJcbiAgICAgICAgICAgICdSZWxhdGlvbicgOiAocWMucmVsYXRpb24gfHwgcWMucmVsYXRpb24gPT09IDApID8gcWMucmVsYXRpb24gOiBSZWxhdGlvblR5cGUuQW5kLCAvL2FuZCB1bmRlZmluZWRcclxuICAgICAgICAgICAgJ0V4cHJlc3N0eXBlJzpWYWx1ZVR5cGUuVmFsdWUsXHJcbiAgICAgICAgICAgICdMYnJhY2tldCc6IHFjLkxicmFja2V0IHx8IG51bGwsXHJcbiAgICAgICAgICAgICdSYnJhY2tldCc6IHFjLlJicmFja2V0IHx8IG51bGxcclxuICAgICAgICB9XTtcclxuICAgIH1cclxufSJdfQ==