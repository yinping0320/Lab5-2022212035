import { Injectable } from '@angular/core';
import { of, from, EMPTY } from 'rxjs';
import { every, concatMap, switchMap, take, tap } from 'rxjs/operators';
import { RuntimeFrameworkService } from './rtf-service';
import { MenuStateService } from './menu-state.service';
import { TAB_EVENT } from './types';
import { QuerystringService } from './querystring';
import { UID } from '@farris/devkit';
/**
 * 导航事件服务
 * @scope FormModule
 */
export class NavigationEventService {
    constructor(runtimeFrameworkService, menuStateService, querystringService) {
        this.runtimeFrameworkService = runtimeFrameworkService;
        this.menuStateService = menuStateService;
        this.querystringService = querystringService;
        this.onClosedListeners = new Map();
        this.onClosingListeners = new Map();
        this.onTabSwitchListeners = new Map();
    }
    get querystrings() {
        const params = this.querystringService.parse(window.location.hash);
        // 修正formToken
        if (params) {
            params.formToken = this.runtimeFrameworkService.formToken;
        }
        return params;
    }
    /**
     * 注册事件
     */
    registerEvent() {
        const options = this.querystrings;
        this.params = options;
        // 注册标签页切换事件
        this.runtimeFrameworkService.addEventListener(TAB_EVENT.onTabSwitched, (e) => this.handleTabSwitchEvent(e), options);
        // 注册标签页关闭后事件
        this.runtimeFrameworkService.addEventListener(TAB_EVENT.onTabClosed, (e) => this.handleTabClosedEvent(e), options);
        // 注册标签页关闭前事件
        this.runtimeFrameworkService.addEventListener(TAB_EVENT.onTabClosing, (e) => this.handleTabClosingEvent(e), options);
    }
    /**
     * 处理标签页切换事件
     */
    handleTabSwitchEvent(e) {
        if (!e) {
            return;
        }
        // 选中的表单为系统表单，只能返回id，没有tabId
        const eventTabId = e.tabId || e.id || null;
        if (!eventTabId) {
            return;
        }
        const options = this.params; // this.querystrings;
        const tabId = options.tabId || options.funcId || options.appId;
        const menuState = this.menuStateService.getMenuState(eventTabId);
        if (!!tabId && tabId === eventTabId && !!menuState && menuState.length > 0) {
            this.formReload();
        }
        this.fireTabSwitchEvent(e);
    }
    /**
     * 触发tab切换事件
     * @param e e
     */
    fireTabSwitchEvent(e) {
        if (!this.onTabSwitchListeners || this.onTabSwitchListeners.size < 1) {
            return;
        }
        this.onTabSwitchListeners.forEach((handle, key, map) => {
            if (typeof handle === 'function') {
                handle(e);
            }
        });
    }
    /**
     * 标签页关闭前事件
     */
    handleTabClosingEvent(e) {
        if (!e) {
            return;
        }
        // 要关闭的表单为系统表单，只能返回id，没有tabId
        const eventTabId = e.tabId || e.id || null;
        const options = this.params; // this.querystrings;
        const tabId = options.tabId || options.funcId || options.appId;
        if (!!eventTabId && !!tabId && tabId === eventTabId) {
            this.fireTabClosingEvent(e).subscribe((result) => {
                if (result) {
                    setTimeout(() => this.removeMenuState(eventTabId), 500);
                    const formEventServices = window['formEventServices'];
                    if (formEventServices.has(eventTabId)) {
                        formEventServices.delete(eventTabId);
                        window['formEventServices'] = formEventServices;
                    }
                    if (!(e && e.hasOwnProperty('token'))) {
                        e = Object.assign({}, e, { token: options.formToken });
                    }
                    // TODO:不再主动销毁appContext，可能存在内存泄漏问题
                    // if (this.frameContext && this.frameContext.appContext) {
                    //   this.frameContext.appContext.dispose();
                    // }
                    this.runtimeFrameworkService.closeMenu(e);
                }
            });
        }
    }
    /**
     * 触发关闭前事件
     */
    fireTabClosingEvent(e) {
        if (!this.onClosingListeners || this.onClosingListeners.size < 1) {
            return of(true);
        }
        const listeners = this.onClosingListeners.values();
        const result$ = from(listeners);
        // 用户拒绝
        let userRejected = false;
        return result$.pipe(concatMap((handle) => {
            if (userRejected) {
                return EMPTY;
            }
            return handle(e).pipe(take(1), tap((result) => userRejected = !result), switchMap((result) => of(result)));
        }), every((result) => result));
    }
    /**
     * 标签页关闭后事件
     */
    handleTabClosedEvent(e) {
        if (!e) {
            return;
        }
        const options = this.params; // this.querystrings;
        const tabId = options.tabId || options.funcId || options.appId;
        const eventTabId = e.tabId || e.id || null;
        if (tabId === eventTabId) {
            return;
        }
        const menuState = this.menuStateService.getMenuState(tabId, eventTabId);
        if (!!eventTabId && !!menuState && menuState.length > 0) {
            this.removeMenuState(eventTabId);
            this.formReload();
        }
        this.fireTabClosedEvent(e);
    }
    removeMenuState(tabId) {
        if (this['context']) {
            this.menuStateService.removeMenu(tabId);
        }
    }
    /**
     * 触发关闭后事件
     * @param e event
     */
    fireTabClosedEvent(e) {
        if (!this.onClosedListeners || this.onClosedListeners.size < 1) {
            return;
        }
        this.onClosedListeners.forEach((handle, key, map) => {
            if (typeof handle === 'function') {
                handle(e);
            }
        });
    }
    // #endregion
    /**
     * 注册事件监听器
     * @param eventType 事件类型 onTabClosed
     * @param handler 处理器
     */
    addEventListener(eventType, handler) {
        const key = UID.create();
        if (eventType === TAB_EVENT.onTabClosed) {
            this.onClosedListeners.set(key, handler);
            return key;
        }
        else if (eventType === TAB_EVENT.onTabClosing) {
            this.onClosingListeners.set(key, handler);
            return key;
        }
        else if (eventType === TAB_EVENT.onTabSwitched) {
            this.onTabSwitchListeners.set(key, handler);
            return key;
        }
        return null;
    }
    /**
     * 移除事件监听器
     * @param eventType 事件类型
     * @param key 事件标识
     */
    removeEventListener(eventType, key) {
        if (eventType === TAB_EVENT.onTabClosed) {
            return this.onClosedListeners.delete(key);
        }
        else if (eventType === TAB_EVENT.onTabClosing) {
            return this.onClosingListeners.delete(key);
        }
        return false;
    }
    /**
     * 清空事件监听器
     * @param eventType 事件类型
     */
    clearEventListener(eventType) {
        if (eventType === TAB_EVENT.onTabClosed) {
            this.onClosedListeners.clear();
        }
        else if (eventType === TAB_EVENT.onTabClosing) {
            this.onClosingListeners.clear();
        }
    }
    /**
     * 刷新组件数据
     */
    formReload() {
        try {
            // tslint:disable-next-line: no-string-literal
            this['context']['frameContext']['appContext']['refresh']();
        }
        catch (_a) { }
    }
}
NavigationEventService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
NavigationEventService.ctorParameters = () => [
    { type: RuntimeFrameworkService },
    { type: MenuStateService },
    { type: QuerystringService }
];
//# sourceMappingURL=data:application/json;base64,