import { Injectable } from "@angular/core";
export class FormControlService {
    constructor() { }
    getFormControlsByFrameContext(frameContext) {
        return frameContext && frameContext.form && frameContext.form.ngFormControls || null;
    }
    /**
     * 通过binding元数据获取NgFormControl
     * @param frameContext
     * @param binding binding
     * @returns
     */
    getFormControlByBinding(frameContext, binding) {
        const ngFormControls = this.getFormControlsByFrameContext(frameContext);
        if (!ngFormControls) {
            return null;
        }
        return Object.values(ngFormControls).find((ngFormControl) => ngFormControl && ngFormControl.binding === binding);
    }
    /**
     *
     * @param frameContext frameContext
     * @param fullPath
     * @returns
     */
    getFormControlIndexByFullPath(frameContext, fullPath) {
        const ngFormControls = this.getFormControlsByFrameContext(frameContext);
        if (!ngFormControls) {
            return null;
        }
        const bindings = fullPath.split('/').filter(p => p);
        return Object.values(ngFormControls).findIndex((ngFormControl) => {
            if (!ngFormControl) {
                return false;
            }
            const bindingPath = frameContext.viewModel.bindingPath;
            const bindingPaths = bindingPath.split('/').filter(p => p);
            const formControlBindingPaths = ngFormControl.binding.split('.').filter(p => p);
            const fullPath = bindingPaths.concat(formControlBindingPaths);
            return fullPath.join('/') === bindings.join('/');
        });
    }
    /**
     * 通过binding元数据获取NgFormControl位置
     * @param frameContext
     * @param binding binding
     * @returns 从0开始
     */
    getFormControlIndexByBinding(frameContext, binding) {
        const ngFormControls = this.getFormControlsByFrameContext(frameContext);
        if (!ngFormControls) {
            return null;
        }
        return Object.values(ngFormControls).findIndex((ngFormControl) => ngFormControl && ngFormControl.binding === binding);
    }
}
FormControlService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
FormControlService.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1jb250cm9sLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbW1hbmQtc2VydmljZXMvIiwic291cmNlcyI6WyJsaWIvZm9ybS1jb250cm9sLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzQyxNQUFNLE9BQU8sa0JBQWtCO0lBQzdCLGdCQUFnQixDQUFDO0lBQ1YsNkJBQTZCLENBQUMsWUFBMEI7UUFDN0QsT0FBTyxZQUFZLElBQUksWUFBWSxDQUFDLElBQUksSUFBSSxZQUFZLENBQUMsSUFBSSxDQUFDLGNBQWMsSUFBSSxJQUFJLENBQUM7SUFDdkYsQ0FBQztJQUNEOzs7OztPQUtHO0lBQ0ksdUJBQXVCLENBQUMsWUFBMEIsRUFBRSxPQUFlO1FBQ3hFLE1BQU0sY0FBYyxHQUFHLElBQUksQ0FBQyw2QkFBNkIsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUN4RSxJQUFJLENBQUMsY0FBYyxFQUFFO1lBQ25CLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsYUFBNEIsRUFBRSxFQUFFLENBQUMsYUFBYSxJQUFJLGFBQWEsQ0FBQyxPQUFPLEtBQUssT0FBTyxDQUFDLENBQUM7SUFFbEksQ0FBQztJQUNEOzs7OztPQUtHO0lBQ0ksNkJBQTZCLENBQUMsWUFBMEIsRUFBRSxRQUFnQjtRQUMvRSxNQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMsNkJBQTZCLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDeEUsSUFBSSxDQUFDLGNBQWMsRUFBRTtZQUNuQixPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNwRCxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsYUFBNEIsRUFBRSxFQUFFO1lBQzlFLElBQUksQ0FBQyxhQUFhLEVBQUU7Z0JBQ2xCLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7WUFDRCxNQUFNLFdBQVcsR0FBRyxZQUFZLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQztZQUN2RCxNQUFNLFlBQVksR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzNELE1BQU0sdUJBQXVCLEdBQUcsYUFBYSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDaEYsTUFBTSxRQUFRLEdBQUcsWUFBWSxDQUFDLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1lBQzlELE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ25ELENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUNEOzs7OztPQUtHO0lBQ0ksNEJBQTRCLENBQUMsWUFBMEIsRUFBRSxPQUFlO1FBQzdFLE1BQU0sY0FBYyxHQUFHLElBQUksQ0FBQyw2QkFBNkIsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUN4RSxJQUFJLENBQUMsY0FBYyxFQUFFO1lBQ25CLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsYUFBNEIsRUFBRSxFQUFFLENBQUMsYUFBYSxJQUFJLGFBQWEsQ0FBQyxPQUFPLEtBQUssT0FBTyxDQUFDLENBQUM7SUFDdkksQ0FBQzs7O1lBdkRGLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgRnJhbWVDb250ZXh0LCBOZ0Zvcm1Db250cm9sIH0gZnJvbSBcIkBmYXJyaXMvZGV2a2l0XCI7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBGb3JtQ29udHJvbFNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcbiAgcHVibGljIGdldEZvcm1Db250cm9sc0J5RnJhbWVDb250ZXh0KGZyYW1lQ29udGV4dDogRnJhbWVDb250ZXh0KTogeyBbcHJvcGVydHlOYW1lOiBzdHJpbmddOiBOZ0Zvcm1Db250cm9sIH0gfCBudWxsIHtcclxuICAgIHJldHVybiBmcmFtZUNvbnRleHQgJiYgZnJhbWVDb250ZXh0LmZvcm0gJiYgZnJhbWVDb250ZXh0LmZvcm0ubmdGb3JtQ29udHJvbHMgfHwgbnVsbDtcclxuICB9XHJcbiAgLyoqXHJcbiAgICog6YCa6L+HYmluZGluZ+WFg+aVsOaNruiOt+WPlk5nRm9ybUNvbnRyb2xcclxuICAgKiBAcGFyYW0gZnJhbWVDb250ZXh0IFxyXG4gICAqIEBwYXJhbSBiaW5kaW5nIGJpbmRpbmdcclxuICAgKiBAcmV0dXJucyBcclxuICAgKi9cclxuICBwdWJsaWMgZ2V0Rm9ybUNvbnRyb2xCeUJpbmRpbmcoZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQsIGJpbmRpbmc6IHN0cmluZyk6IE5nRm9ybUNvbnRyb2wge1xyXG4gICAgY29uc3QgbmdGb3JtQ29udHJvbHMgPSB0aGlzLmdldEZvcm1Db250cm9sc0J5RnJhbWVDb250ZXh0KGZyYW1lQ29udGV4dCk7XHJcbiAgICBpZiAoIW5nRm9ybUNvbnRyb2xzKSB7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIE9iamVjdC52YWx1ZXMobmdGb3JtQ29udHJvbHMpLmZpbmQoKG5nRm9ybUNvbnRyb2w6IE5nRm9ybUNvbnRyb2wpID0+IG5nRm9ybUNvbnRyb2wgJiYgbmdGb3JtQ29udHJvbC5iaW5kaW5nID09PSBiaW5kaW5nKTtcclxuXHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIFxyXG4gICAqIEBwYXJhbSBmcmFtZUNvbnRleHQgZnJhbWVDb250ZXh0XHJcbiAgICogQHBhcmFtIGZ1bGxQYXRoIFxyXG4gICAqIEByZXR1cm5zIFxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXRGb3JtQ29udHJvbEluZGV4QnlGdWxsUGF0aChmcmFtZUNvbnRleHQ6IEZyYW1lQ29udGV4dCwgZnVsbFBhdGg6IHN0cmluZyk6IG51bWJlciB7XHJcbiAgICBjb25zdCBuZ0Zvcm1Db250cm9scyA9IHRoaXMuZ2V0Rm9ybUNvbnRyb2xzQnlGcmFtZUNvbnRleHQoZnJhbWVDb250ZXh0KTtcclxuICAgIGlmICghbmdGb3JtQ29udHJvbHMpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgICBjb25zdCBiaW5kaW5ncyA9IGZ1bGxQYXRoLnNwbGl0KCcvJykuZmlsdGVyKHAgPT4gcCk7XHJcbiAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyhuZ0Zvcm1Db250cm9scykuZmluZEluZGV4KChuZ0Zvcm1Db250cm9sOiBOZ0Zvcm1Db250cm9sKSA9PiB7XHJcbiAgICAgIGlmICghbmdGb3JtQ29udHJvbCkge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgfVxyXG4gICAgICBjb25zdCBiaW5kaW5nUGF0aCA9IGZyYW1lQ29udGV4dC52aWV3TW9kZWwuYmluZGluZ1BhdGg7XHJcbiAgICAgIGNvbnN0IGJpbmRpbmdQYXRocyA9IGJpbmRpbmdQYXRoLnNwbGl0KCcvJykuZmlsdGVyKHAgPT4gcCk7XHJcbiAgICAgIGNvbnN0IGZvcm1Db250cm9sQmluZGluZ1BhdGhzID0gbmdGb3JtQ29udHJvbC5iaW5kaW5nLnNwbGl0KCcuJykuZmlsdGVyKHAgPT4gcCk7XHJcbiAgICAgIGNvbnN0IGZ1bGxQYXRoID0gYmluZGluZ1BhdGhzLmNvbmNhdChmb3JtQ29udHJvbEJpbmRpbmdQYXRocyk7XHJcbiAgICAgIHJldHVybiBmdWxsUGF0aC5qb2luKCcvJykgPT09IGJpbmRpbmdzLmpvaW4oJy8nKTtcclxuICAgIH0pO1xyXG4gIH1cclxuICAvKipcclxuICAgKiDpgJrov4diaW5kaW5n5YWD5pWw5o2u6I635Y+WTmdGb3JtQ29udHJvbOS9jee9rlxyXG4gICAqIEBwYXJhbSBmcmFtZUNvbnRleHQgXHJcbiAgICogQHBhcmFtIGJpbmRpbmcgYmluZGluZ1xyXG4gICAqIEByZXR1cm5zIOS7jjDlvIDlp4tcclxuICAgKi9cclxuICBwdWJsaWMgZ2V0Rm9ybUNvbnRyb2xJbmRleEJ5QmluZGluZyhmcmFtZUNvbnRleHQ6IEZyYW1lQ29udGV4dCwgYmluZGluZzogc3RyaW5nKTogbnVtYmVyIHtcclxuICAgIGNvbnN0IG5nRm9ybUNvbnRyb2xzID0gdGhpcy5nZXRGb3JtQ29udHJvbHNCeUZyYW1lQ29udGV4dChmcmFtZUNvbnRleHQpO1xyXG4gICAgaWYgKCFuZ0Zvcm1Db250cm9scykge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIHJldHVybiBPYmplY3QudmFsdWVzKG5nRm9ybUNvbnRyb2xzKS5maW5kSW5kZXgoKG5nRm9ybUNvbnRyb2w6IE5nRm9ybUNvbnRyb2wpID0+IG5nRm9ybUNvbnRyb2wgJiYgbmdGb3JtQ29udHJvbC5iaW5kaW5nID09PSBiaW5kaW5nKTtcclxuICB9XHJcbn0iXX0=