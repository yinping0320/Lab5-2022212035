{"version":3,"sources":["ng://@farris/command-services/lib/form-loading/hide-event.service.ts","ng://@farris/command-services/lib/form-loading/form-loading.service.ts","ng://@farris/command-services/lib/languages/language-message-en.ts","ng://@farris/command-services/lib/languages/language-message-zh.ts","ng://@farris/command-services/lib/languages/language-message-zhft.ts","ng://@farris/command-services/lib/languages/language-message-factory.ts","ng://@farris/command-services/lib/languag.service.ts","node_modules/tslib/tslib.es6.js","ng://@farris/command-services/lib/util/device-ability.ts","ng://@farris/command-services/lib/error/exception_strategy.ts","ng://@farris/command-services/lib/error/exception_strategy_factory.ts","ng://@farris/command-services/lib/util/http.ts","ng://@farris/command-services/lib/error/form-error.service.ts","ng://@farris/command-services/lib/form-message.service.ts","ng://@farris/command-services/lib/form-notify.service.ts","ng://@farris/command-services/lib/form-wizard.service.ts","ng://@farris/command-services/lib/check.service.ts","ng://@farris/command-services/lib/data-check.service.ts","ng://@farris/command-services/lib/event.service.ts","ng://@farris/command-services/lib/menu-state.service.ts","ng://@farris/command-services/lib/router.service.ts","ng://@farris/command-services/lib/types.ts","ng://@farris/command-services/lib/querystring.ts","ng://@farris/command-services/lib/rtf-service.ts","ng://@farris/command-services/lib/navigation-event.service.ts","ng://@farris/command-services/lib/farris-form.service.ts","ng://@farris/command-services/lib/navigation.service.ts","ng://@farris/command-services/lib/data-services/utils/edit-state.util.ts","ng://@farris/command-services/lib/form-notify-strategy.service.ts","ng://@farris/command-services/lib/command-service.ts","ng://@farris/command-services/lib/verify.service.ts","ng://@farris/command-services/lib/validation.service.ts","ng://@farris/command-services/lib/data-change-detection.service.ts","ng://@farris/command-services/lib/data-services/card-data.service.ts","ng://@farris/command-services/lib/navigation-middleware.service.ts","ng://@farris/command-services/lib/grid.middleware.service.ts","ng://@farris/command-services/lib/param.service.ts","ng://@farris/command-services/lib/keybinding-service.ts","ng://@farris/command-services/lib/filter-condition.service.ts","ng://@farris/command-services/lib/ui-state.service.ts","ng://@farris/command-services/lib/state-machine.service.ts","ng://@farris/command-services/lib/binding-data.service.ts","ng://@farris/command-services/lib/application-param.service.ts","ng://@farris/command-services/lib/entity-services/entity-traversing.service.ts","ng://@farris/command-services/lib/entity-services/entity-manipulation.service.ts","ng://@farris/command-services/lib/entity-services/entity-aggregation.service.ts","ng://@farris/command-services/lib/entity-services/entity-list.service.ts","ng://@farris/command-services/lib/entity-services/entity.service.ts","ng://@farris/command-services/lib/binding-path.service.ts","ng://@farris/command-services/lib/form-control.service.ts","ng://@farris/command-services/lib/frame-context.service.ts","ng://@farris/command-services/lib/focus-invalid.service.ts","ng://@farris/command-services/lib/change-item.service.ts","ng://@farris/command-services/lib/service.ts","ng://@farris/command-services/lib/data-grid.service.ts","ng://@farris/command-services/lib/data-services/list-data.service.ts","ng://@farris/command-services/lib/data-services/sub-list-data.service.ts","ng://@farris/command-services/lib/data-services/base-data.service.ts","ng://@farris/command-services/lib/data-services/tree-table/util/parent-tree.util.ts","ng://@farris/command-services/lib/data-services/tree-table/util/path-tree.util.ts","ng://@farris/command-services/lib/data-services/tree-table/util/tree-util-factory.ts","ng://@farris/command-services/lib/data-services/tree-table/repository/parent-tree-repository.ts","ng://@farris/command-services/lib/data-services/tree-table/repository/path-tree-repository.ts","ng://@farris/command-services/lib/data-services/tree-table/repository/tree-repository-factory.ts","ng://@farris/command-services/lib/data-services/tree-data.service.ts","ng://@farris/command-services/lib/data-services/filter-condition-data.service.ts","ng://@farris/command-services/lib/data-services/edit-data.service.ts","ng://@farris/command-services/lib/data-services/remove-data.service.ts","ng://@farris/command-services/lib/data-services/save-data.service.ts","ng://@farris/command-services/lib/data-services/sub-tree-data-service.ts","ng://@farris/command-services/lib/be-action.service.ts","ng://@farris/command-services/lib/approve.service.ts","ng://@farris/command-services/lib/print.service.ts","ng://@farris/command-services/lib/attachment/types.ts","ng://@farris/command-services/lib/attachment/attachment.util.ts","ng://@farris/command-services/lib/attachment/attachment-data.service.ts","ng://@farris/command-services/lib/attachment/attachment.service.ts","ng://@farris/command-services/lib/attachment/file.service.ts","ng://@farris/command-services/lib/dialog.service.ts","ng://@farris/command-services/lib/sidebar-service.ts","ng://@farris/command-services/lib/filter-service.ts","ng://@farris/command-services/lib/component-manager.service.ts","ng://@farris/command-services/lib/authority/authority.service.ts","ng://@farris/command-services/lib/authority/authority.ts","ng://@farris/command-services/lib/exception.handler.ts","ng://@farris/command-services/lib/providers/legacy_providers.ts","ng://@farris/command-services/lib/user-settings.service.ts","ng://@farris/command-services/lib/work-flow/work-flow-message.service.ts","ng://@farris/command-services/lib/work-flow/work-flow-message.ts","ng://@farris/command-services/lib/work-flow/work-flow-message.handler.ts","ng://@farris/command-services/lib/providers/module_providers.ts","ng://@farris/command-services/lib/query-solution/enum/compare-type.enum.ts","ng://@farris/command-services/lib/query-solution/enum/value-type.enum.ts","ng://@farris/command-services/lib/query-solution/enum/relation-type.enum.ts","ng://@farris/command-services/lib/query-solution/handlers/text.handler.ts","ng://@farris/command-services/lib/query-solution/handlers/daterage.handler.ts","ng://@farris/command-services/lib/query-solution/handlers/dropdown.handler.ts","ng://@farris/command-services/lib/query-solution/handlers/numberrage.handler.ts","ng://@farris/command-services/lib/query-solution/handlers/smarthelp.handler.ts","ng://@farris/command-services/lib/query-solution/handlers/single-year.handler.ts","ng://@farris/command-services/lib/query-solution/handlers/checkbox.handler.ts","ng://@farris/command-services/lib/query-solution/handlers/single-month.handler.ts","ng://@farris/command-services/lib/query-solution/handlers/monthrange.handler.ts","ng://@farris/command-services/lib/query-solution/handlers/single-date-time.handler.ts","ng://@farris/command-services/lib/query-solution/handlers/single-number.handler.ts","ng://@farris/command-services/lib/query-solution/handlers/single-date.handler.ts","ng://@farris/command-services/lib/query-solution/handlers/combolookup.handler.ts","ng://@farris/command-services/lib/query-solution/handlers/radio.handler.ts","ng://@farris/command-services/lib/query-solution/handlers/inputgroup.handler.ts","ng://@farris/command-services/lib/query-solution/querycondition.handler.factory.ts","ng://@farris/command-services/lib/query-solution/query-solution.service.ts","ng://@farris/command-services/lib/end-edit.service.ts","ng://@farris/command-services/lib/remote-summary.service.ts","ng://@farris/command-services/lib/batch-edit.service.ts","ng://@farris/command-services/lib/discussion-group.service.ts","ng://@farris/command-services/lib/list-filter/list-filter.service.ts","ng://@farris/command-services/lib/manifest/form_manifest_service.ts","ng://@farris/command-services/lib/manifest/form_expression_manifest_service.ts","ng://@farris/command-services/lib/localization.service.ts","ng://@farris/command-services/lib/form-attention.service.ts","ng://@farris/command-services/lib/feature-edit/types.ts","ng://@farris/command-services/lib/feature-edit/feature-repository.ts","ng://@farris/command-services/lib/feature-edit/feature-data.service.ts","ng://@farris/command-services/lib/feature-edit/feature-edit.service.ts","ng://@farris/command-services/lib/expression_service.ts","ng://@farris/command-services/lib/dirty-checking.service.ts","ng://@farris/command-services/lib/pop_up.service.ts","ng://@farris/command-services/lib/form.service.ts","ng://@farris/command-services/lib/view-model.service.ts","ng://@farris/command-services/lib/pagination.service.ts","ng://@farris/command-services/lib/providers/frame_providers.ts","ng://@farris/command-services/lib/providers/dynamic_providers.ts","ng://@farris/command-services/lib/command-services-module.ts","ng://@farris/command-services/lib/rtf-message/message-pipe.ts","ng://@farris/command-services/lib/rtf-message/message-pipe-service.ts","ng://@farris/command-services/lib/back_end_message_handler.ts"],"names":["HideEventService","Injectable","this","hideEvent","Subject","FormLoadingService","prototype","setSuspend","flag","isSuspend","show","configOrMessage","loadingCmp","close","registerService","loadingConfig","buildLoadingConfig","loadingService","showLoadingWithDelay","delayTime","_this","timerId","setTimeout","loadingTimerIds","push","hideDelayLoading","timerIdToClear","clearLoadingTimer","hide","message","hasOwnProperty","delay","clearAll","window","clearAllLoadingTimers","destroy","clearTimeout","filter","forEach","services","Array","isArray","length","service","LoadingService","decorators","type","Optional","AppContext","hideEventService","applicationContext","subscribe","result","LanguageMessageForEn","yes","no","unsaveNotifyTitle","clientNotifyTitle","serverNotifyTitle","cancelApproveSuccess","cancelApproveFailed","unallowEmptyProcessInstanceName","unallowEmptyBizBillId","unallowEmptyChildBizBillId","bizDefKeyRequired","procInsIdRequired","addChildFailed","addSiblingFailed","addSubChildFailed","addSubSiblingFailed","deleteFailed","multiSaveFailed","appendFailed","queryFailed","cancelFailed","updateFailed","addFailed","loadFailed","saveSuccess","saveFailed","deleteSuccess","deleteFaild","confirmDeletion","submitSuccess","submitFaild","notifyTitle","httpError","gridDataNotSave","exitWithoutSave","notSupportMenuType","cancelWithoutSave","plsSelectDeleteData","errorHierarchyKey","plsSelectParentNode","deleteChildFirst","incorrectHierarchyConfig","operationFailed","plsSelectEditData","plsSelectViewData","plsUploadFirst","defaultDialogTitle","changeToFirst","changeToLast","noProcessInstanceId","noDataExist","noAttachment","confirm","cancel","plsSelectCopyData","copyFieldsRequired","pathIsRequired","propsIsEmpty","historyAttachment","plsSelectDownloadAtt","noDownloadAtt","plsCheckBatchEditRows","plsSelectDetailFormData","dataAndStateChanged","dataChanged","stateChanged","defaultStateName","copy","copySuccess","copyFailed","roger","appOrFuncIdRequired","tableCanNotEmpty","plsSelectRemoveAtt","plsSelectUpdateRow","LanguageMessageForZh","LanguageMessageForZhft","LanguageMessageFactory","create","language","languageMessageMap","has","get","languageMessage","set","Map","LanguageService","Object","defineProperty","getInstance","innerInstance","instance","extendProperties","keys","propName","Inject","args","LOCALE_ID","localeId","extendStatics","d","b","setPrototypeOf","__proto__","p","__extends","__","constructor","__assign","assign","t","s","i","n","arguments","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","error","__spread","concat","DeviceAbility","copyToClipboard","text","windowRef","clipboardData","setData","document","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","ExceptionStrategy","MessagerService","messagerService","languageService","_super","InfoExceptionStrategy","tslib_1.__extends","handleException","info","Message","WarningExceptionStrategy","warning","ErrorExceptionStrategy","handleErrorLevel","bsModalRef","exceptionMsg","date","Date","localDate","moment","format","detail","Detail","innerMessage","options","showMaxButton","buttons","langService","cls","handle","width","height","safeHtml","exception","copyButton","onClick","content","showMiniNotify","displayError","console","FatalExceptionStrategy","HttpStatusType","ExceptionFactory","exceptionFactory","getExceptionHandleStrategy","exceptionLevel","exceptionStrategy","HttpUtil","getHttpStatusType","httpResponseSatus","statusType","Info","Success","Redirect","ClientError","ServerError","FormErrorService","isHttpErrorResponse","httpErrorHandler","commonErrorHandler","status","msgService","http401Error","httpErrorInClient","httpErrorInServer","Error","errorMsg","name","HttpErrorResponse","FormMessageService","question","confirmResult$","confirmPromise","from","question2","promise$","Promise","resolve","reject","dialogRef","defaultFocus","prompt","title","JSON","parse","Level","undefined","replace","showHeader","dialogShownKey","i18n","en","sessionInvalid","ok","zh-CHS","curLanguage","messageOptions","initialState","okText","okHandle","modalRef","redirectUri","redirect_uri","location","href","cancelText","cancelHandle","fitContent","dialog","closed","FormNotifyService","default","notifyService","msg","timeout","notifyOptions","hideTitle","success","NotifyService","FormWizardService","preStep","currentPageId","wizardSer","getCurrentPageId","updateWizardState","WizardEventType","Prev","nextStep","Next","cancelWizard","finishWizard","WizardService","CheckService","checkEmpty","DataCheckService","checkBeforeEdit","idToEdit","ifSkipCheck","formNotifyService","empty","checkBeforeView","idToView","id","params","command","messageService","EventService","trigger","eventType","eventData","frameIds","eventBus","FrameEventBus","MenuStateService","getState","data","sessionStorage","getItem","COMMAND_SERVICE_LINK_STORAGE_KEY","setState","links","setItem","stringify","addMenuState","parentMenuId","childMenuId","state","isParentExist","childItem","find","item","getMenuState","parentMenu","childMenu","updateMenuState","key","removeMenu","menuId","removeParentMenu","removeChildMenu","childMenus","child","index","splice","RouterService","route","url","router","createUrlTree","toString","setParams","navigateByUrl","registerEvent","getParams","hash","getAppId","getFuncId","frameworkService","eventListner","FuncSwitch","getOriginalId","tabId","menuState","menuStateService","formReload","lastSwitchId","FuncClosed","onClosed","removeMenuState","lastCloseId","indexOf","split","_a","openMenu","funcId","reload","paramsMap","buildParamMap","openFuncWithParam","openApp","appId","appEntrance","paramMap","appService","closeMenu","findDialog","isDialogComponent","rootComponent","closeFunc","getAppEntrance","closeApp","frameContext","parentFrameContext","object","path","defaultVal","PATH","shift","paramsObj","routerParamService","decodeURLParams","getParentMenuId","WEB_FORM_ROUTER_PARENT_ID","query","search","slice","reduce","val","decodeURIComponent","queryString","Router","RouterParamService","FrameworkService","AppService","TAB_EVENT","onTabClosed","onTabClosing","onTabSwitched","INSIDE_DIALOG_TOKEN","InjectionToken","MODAL_REF","QuerystringService","RuntimeFrameworkService","getService","env","top","isSameOrigin","parent","rtfService","func","openMenu$","openMenuByStream","EMPTY","getEntityParam","callback","once","beforeCloseMenu","beforeClose","getMenuParams","addEventListener","token","handler","frmEvent","eventListener","getMenuSwitchControlEvent","subject","tabId_1","options_1","response","menuSwitchControl","subjectRegister","code","broadcast","subjectRemove","subjectNotify","notify","subjectResponse","observerToken","UID","responseUnSubscribe","environment","host","NavigationEventService","querystringService","formToken","runtimeFrameworkService","querystrings","handleTabSwitchEvent","handleTabClosedEvent","handleTabClosingEvent","eventTabId","fireTabSwitchEvent","onTabSwitchListeners","size","map","fireTabClosingEvent","formEventServices","delete","onClosingListeners","of","listeners","values","result$","userRejected","pipe","concatMap","take","tap","switchMap","every","fireTabClosedEvent","onClosedListeners","removeEventListener","clearEventListener","clear","FARRIS_FORM_COMPONENTS","FarrisFormService","append","cmpIns","controls","getControls","warn","initCtrls","APP_CONTEXT_MANAGER","NavigationService","context","navigationEventService","appContext","injector","FrameContext","formAppContext","ApplicationId","appContextManager","registerDestroyEvent","destorySignal","enableRefresh","tabName","destructuring","translate","queryStringParams","convertToBoolean","buildParam","currentTabId","appType","AppType","Menu","entityParams","isReload","frameworkTabId","openMenuWithDimension","dim1","dim2","metadataId","App","openApp$","isInDialog","modalRefFactory","refs","destory","parseParams","open","mode","modalId","configs","tabType","funcOrAppId","pageModalService","FEPageModalService","uiStateConfig","getObjectTypeConfig","modalConfig","buildConfigs","dialogType","pageModalRef","farrisFormService","componentType","componentRef","createComponentRef","showByUrl","isDialogRootComponent","header","el","nativeElement","querySelector","draggbar","cursor","navigate","commands","activatedRoute","ActivatedRoute","queryParams","lodash","merge","extras","skipLocationChange","relativeTo","String","translateService","TranslateToken","startsWith","endsWith","trim","transform","config","defaultConfigs","showButtons","objectTypeConfig","onClosingHandler","refresh","refreshCommandName","commandName","refreshFrameId","frameId","cancelChanges","ref","refreshForm","component","repository","frameContextManager","getFrameContextById","viewModel","uiStateObject","getFrameContext","componentFactoryResolver","getComponentFactoryResolver","contentCmptFactory","resolveComponentFactory","modalContentInjector","ReflectiveInjector","resolveAndCreate","uiState","setPropertyValue","ComponentFactoryResolver","Injector","IS_ADD","LAST_MODIFIED_ID","EditStateUtil","getLastModifiedId","virtualRootFrameContext","getVirtualRootFrameContext","lastModifiedId","getParam","setLastModifiedId","setParam","getAddState","setAddState","cancelAddState","setEditState","FormNotifyStrategyService","querystring","odocDisableNotification","toLowerCase","urlSearchParams","URLSearchParams","CommandService","innerContext","execute","waitForBeSession","restService","sessionService","getBeSessionId","beSessionId","extractResult","taskName","results","suspendFrameContextRowSelectedEvent","bindingData","rowSelectedEventSuspend","resumeFrameContextRowSelectedEvent","ViewModel","VerifyService","focusElement","selector","elementRef","target","ownerDocument","getElementById","tagName","input","getElementsByTagName","focus","ValidationService","validate","getList","result_1","tslib_1.__values","result_1_1","isValid","alert","validationResults","validateCurrentRow","entityTypeInfo","primaryValue","list","currentId","entity","entityCollection","getEntityById","entities","namespace","frameContexts","getFrameContextsByNamespace","getFrameContexts","isModal","hasOwnVerifyDetailService","rootViewModel","root","toValidate","formErrors","form","enableValidate","verifyInformations","formValid","formValidationRules","formContext","bindingObject","getObject","setShowValidationMsg","getValidationRules","rules","rule","isFormValid","observableList","getIndexById","zip","resultList","handleErrors","errors","validationError","children","errMsgObj","findId","PARENT_CLASS","parentPathData","isUdt","isGrid","getPaths","join","constraints","paths","property","changes","ChangeType","UpdateErrors","x","isValidated","collectValidationErrors","verifycationChanged","handleErrorClickEvent","validateEntityAllowEmptyRule","validateAll","getAllEntities","isMultiEntityValiate","getNotAllowEmptyBindingPaths","invalidPaths","bindingPaths","bindingList","getValue","tableNames_1","viewModelName","getViewModelNameByBindingPaths","bindingPath","formGroupName","deepFirstTraversalEntityTypeInfo","previousValue","isAllowEmpty","entityInfo","allowEmpty","getPropInfosByGroup","DataPropGroup","List","propInfo","typeInfo","nodeCode","pop","getFrameContextByBindingPath","caller","frameComponent","Function","validationResultTypes","offset","findIndex","targetField","field","propertyName","fullPath","resetValidation","isDialog","namespace_1","VerifyDetailService","InjectFlags","Self","verifyDetailService","verifyContainer","validatorClick","onErrorItemClick","isGridComponent","grid","componentRefManager","getComponentByType","DatagridComponent","editCell","showList","ElementRef","Repository","validationAllResult","DataChangeDetectionService","hasChange","befRepository","BefRepositoryUtil","isExistUnsaveData","enableServerSideChangeDetection","hasChanges","returnValue","CardDataService","load","loadingTimerId","getById","formErrorService","onLoading","transitionActionParamName","skip","listening","sync","action_1","action","ngCommand","metadatas","actionName","formPrimaryValue","formState","stateMachine","stateName","ngAction","actions","transitTo","states","primaryValueChanged","showLoadingConfirm","resetForm","add","cascadeAdd","currentNamespace","currentFormFrameContexts","childFrameContexts","childBindingPaths_1","sort","a","rid","fpath","getPath","appendByPath","last","edit","update","update$","updateById","updateWithoutEmpty","checkBeforeUpdate","updateWithNotify","loadPaged","save","successMsg","updateChangesById","save$","applyChangesById","updateResult","showMessage","cancelWithCheck","revert","cancelWithoutCheck","changed","formMessageService","ifCancel","loadEntities","subPaths","subPath","subData","validationService","commandService","NavigationMiddlewareService","onClosing","navigationService","isDisposed","isChanged","opened","beforeCloseHandle","selectedChange","conform","cardDataService","getTabId","targetId","throwIfEmpty","getFormAppContext","GridMiddlewareService","onPageChanging","filters","eventParam","pageIndex","filterConditionManager","setConditions","ParamService","parseMapParams","asObservable","param","KeybindingService","bind","keybindingMap","keyBinding","method","register","binding","combo","_getCombo","keyMap","ctrlKey","altKey","shiftKey","bindingProvider","_dispatch","unregister","unbind","repeat","ready","keyInfo","charCodeAt","metaKey","Mousetrap.default","FilterConditionService","UIStateService","componentId","StateMachineService","transit","_currentFrameContext","_initLoad","initFormState","currentRootFrameContext","getCurrentRootFrameContext","toggleFormState","currentFrameContext","getAllRootFrameContext","rootFc","getFrameContextManagerMap","getFrameContextMap","rootFrameContextArr","className","includes","_clsDefaultName","addCssClass","removeCssClass","originalClassName","getFormRootComponent","viewContext","virtualRootContext","StateMachine","BindingDataService","setCurrentId","getAllFrameContexts","setCurrentRow","BindingData","ApplicationParamService","highOrderInvoke","paramService","setupParams","setQueryParams","setStaticParams","parsedQueryParams","innerData","paramName","updateUIState","staicParams","staticParamsObj","mapStaticParamsToObject","staticParams","inDialog","sessionInfo","setSessionInfo","sessionId","Token","setBeSessionId","webFormRouteParams","decodeURI","encodeURI","prop","controlEvent","isObservable","event","EntityTraversingService","getPropValue","getEntityData","bindingListOrObject","BindingList","currentItem","toJSON","getEntityListData","EntityManipulationService","setPropValue","setValue","EntityAggregationService","count","splitedPath","splitPath","traversingService","listPath","sum","accTotal","entityData","propValue","parseFloat","propPath","isNaN","avg","total","max","accMax","min","accMin","currentData","pathItem","currentNode","propPathItem","unshift","EntityListService","pageSize","EntityService","manipulationService","aggregationService","BindingPathService","getBindingPathsByFrameContext","getBindingPathsByTableName","dataTypeInfo","tableName","level","originalCode","props","propInfoMap","idx","dataTypeInfo_1","getBindingPathsByPath","nodeCodes","getPropInfoByPath","group","getPathInfo","entityPath","propertyNames","FormControlService","getFormControlsByFrameContext","ngFormControls","getFormControlByBinding","ngFormControl","getFormControlIndexByFullPath","bindings","formControlBindingPaths","getFormControlIndexByBinding","FrameContextService","getFrameContextsByTableName","bindingPathService","getFrameContextsByPropertyPath","propertyPath","separtor","formControls","formControl","getFrameContextsByColumnName","columnName","getTypeInfoByPath","columnPropInfo","getPropInfos","dataPropInfo","metadataInfo","originalDataField","dataField","formControlService","getFrameContextsByBindingPath","FocusInvalidService","focusInvalidInput","rootElement","firstVerifyInformation","selectFirstVerifyInformation","focusGridCell","focusableDataGrid","disabled","updateVerifyInformationsIndex","verifyInformation","tabIndex","getInputElementById","getAttribute","Number","frameIndex","domIndex","getFieldIndex","rowIndex","getColumnIndex","dataGridColumnsName","columns","column","fields","fixed_1","fixed","fixedColumns","fixedColumnIndex","this_1","getIndexFromColumns","v1","v2","element","inputs","getFormControlIndexByBindingPath","elementId","focused","elementToFocus","elements","querySelectorAll","subElements","grid_1","getGridRef","frameElement_1","getComponentRef","focusById","matchedFrameContexts","componentsMap","componentManager","getComponentsByFrameId","datagridComponent","frameContextService","POSTER","RECEIVER","REPOSITORY","TAB_ID","ChangeItemService","init","changeItem","setBykey","getByKey","setIframePoster","itemChangePoster","getIframePoster","itemChangeReceiver","parentId","Observable","subscriber","getNextItemByCurrentId","setRepository","paginationInfo","currentIdx","nextIdx","getEntities","Service","DataGridService","clearChecks","gridComponents","getFormGridComponents","gridComponent","clearSelections","clearCheckeds","uncheckDeletedRows","ids","ns","frameContextsInCurrentBindingPath","gridInCurrentFrame","getGridComponentByFrameContexts","unCheckRows","childrenFrameContexts","childrenGridComponents","checkedRows","uncheckRows","commandContext","grids","componentRefs","componentsRef","ListDataService","mergeFilterConditions","mergeSortConditions","fireQueryEvent","queryChild","fullPaths","EntityPathConverter","toEntityPathArray","substr","parentPaths","configPath","getPaginationConfigByPath","_b","messagePipe","messageType","insert","updateChanges","updateAllChanges","applyChanges","remove","ifSave","breakable","remove$","removeById","datagridService","removeRows","deleteCurrentRowIfNoChecks","removeByIds","refreshAfterRemoving","loadCmdName","loadCmdFrameId","_cancel","originalConditions","getFilters","conditions","lastFilter","Relation","relation","sorts","sortConditionManager","getConditionsByBindingPath","direction","filterConditionService","SubListDataService","insertByPath","innerRemove","removeWithoutConfirm","removeChildrenByIds","batchRemoveByPath","isConfirm","removeByPath","removeAndSave","fid","move","targets","findById","exchangeRowIndex","exchangeRowId","getIdByIndex","exchangeRow","exchangeRowPosition","isNullOrEmpty","swapById","BaseDataService","ParentTreeNodeUtil","selectFirstRootNode","hierarchyInfoKey","treeNodesData","firstRootNodeId","getFirstNodeId","selectedNode","selectNodeByBindingList","selectedNodeId","selectedNodeData","getNodeDataById","hasChildNodes","rootData","itemData","rootLayer_1","getRootLayer","layer","layers","minLayer","Math","getNextNodeId","currentNodeData","fLayer","fParentElement","siblingtreeNodesData","getChildNodesData","getNextSiblingNodeId","parentData","currentIndex","parentElement","nodeData","PathTreeNodeUtil","currentPath","fPath","substring","TreeUtilFactory","treeType","util","ParentTreeRepository","addSibling","addSiblingUri","baseUri","dataID","requestInfo","buildRequestInfo","headers","HttpHeaders","Content-Type","invoke","responseInfo","buildEntity","addEntity","addChild","addChildUri","addSubSibling","nodes","addSubSiblingUri","entityManager","appendEntityByPath","addSubChild","addSubChildUri","loadByParentId","frozenCurrentRow","pagination","localEntities","getChildren","parentHierarchyInfo","getHierarchyInfoById","originalHierarchyInfoKey","getOriginalHierarchyInfoKey","entityFilter","FilterConditions","buildFiltersWithParent","SortConditions","IsUsePagination","Pagination","PageIndex","PageSize","PageCount","TotalCount","extendQuery","getPaginationInfo","updatePaginationInfoByPath","clearDescendantEntities","listData","buildEntities","addData","isTreeNodeLoadScene","addEntities","loadFullTree","fullTreeType","loadType","queryUrl","dataId","isUsePagination","virtualPropertyName","buildEntityFilter","selectedRowId","selectedRowId_1","hierarchyInfo","primaryKey","getAllParentIds","filterArray","relationType","parentLayer","parentFilterArray","FilterField","Value","Lbracket","Rbracket","Expresstype","Compare","hierarchyInfokey","getChildNodes","removeEntities","removeData","fparentElement","flayer","childHierarchyInfo","childs","getHierarchyInfo","FieldMetadataUtil","getNgObjects","entityType","findParent","currentHierarchyInfo","PathTreeRepository","pathHierarchyInfo","parentPath","TreeRepositoryFactory","TreeDataService","filtersArray","parseConditions","sortsArray","correctSelectedNode","hierarchyType","getHierarchyType","treeNodeUtil","errorService","loadByLevel","setLoadByLevelState","getIdToExpand","buildPaginationInfo","currentRowId","primaryKeyValue","firstChildId","computedFirstRowId","expandNodes","idToExpand","setIdToExpand","conditionsString","reloadChild$","reloadByLevel","addChild$","nextNodeId","enableNodePagination","nodePageSize","nodePageIndex","isAdd","removeEntityById","getTreeNodeUtil","getNextNodeIdAfterRemoving","idToRemove","setNextNodeAfterRemoving","selectFirstRow","hierarchyInfoNgObjectInfo","FilterConditionDataService","EditDataService","editEntityById","RemoveDataService","enableRemoveAndSave","innerRemoveById","removeAndSaveById","removeAndSaveByIdForTree","checkIdsToRemove","treeDataService","removeAndSaveByIds","confirm$","confirmToRemove","removeEntityAndSaveById","ifRemove","listDataService","SaveDataService","SubTreeDataService","hierarchyInfoField","nodeCodeArray","BeActionService","invokeAction","actionUri","httpMethod","httpHeaders","innerInvokeAction","executeAction","buildQueryParams","queryParamsString","getRestService","hasRequestInfo","fullActionUri","ApproveService","submitApproveWithInteraction","bizBillID","submitApprove","interactionResult","beActionService","bizInstID","procDefId","processDefinitionId","formLoadingService","excutionResponse","procInstId","needInteraction","submitter","excute","interactionResponse","catchError","submitApproveWithBizDefKey","bizDefKey","approvePayload","startProcessPayload","variables","processDefinitionKey","submitApproveWithBizDefKeyUseControl","payload","wfTaskHandlerService","startProcess","childSubmitApproveWithBizDefKey","bizId","childBizId","cancelApprove","cancelSubmit","viewProcess","flowchartService","viewFlowChart","switchPrefixLetter","jsonObj","toUpper","_c","toUpperCase","WFSubmiteService","WFFlowchartService","WfTaskHandlerService","PrintService","printSingle","beMetaId","bizBillId","printArray","showWarning","printByIds","dataIds","printByIdsWithDimension","billCategoryId","sourceOptions","buildSourceOptions","sourceId","outputOptions","buildOutputOptions","FirstDimensionVal","SecondDimensionVal","printService","outputBEData","printMulti","filterCondition","sortCondition","includeChildData","entryFilter","filterConditions","sortConditions","sourceFilterOptions","buildSourceFilterOptions","outputBEDataWithFilter","printMultiWithDimension","sfo","DataIds","SourceId","RetrieveParam","retrieveParam","FormatId","formatId","ServiceUnit","serviceUnit","currentPage","pageRowCount","queryType","queryServiceId","queryParam","OutputType","outputType","PRINT","FileType","fileType","Html5","Path","DeviceId","deviceId","printJob","printerName","printSetting","printType","PrintType","Form","EntityFilter","CloudprintService","ATTACHMENT_ORDER_FIELD","AttachmentUtil","convertToAttachmentInfos","fileInfos","fileInfo","convertToAttachmentInfo","attachmentId","fileName","getFirstAttachmentInfo","attachmentInfos","peekAttachmentIds","attachmentInfo","AttachmentDataService","updateRow","attachmentInfoFieldPath","updateUri","updateAttachInfo","createUpdateAttachInfo","syncAttachmentInfosToClient","updateRowWithPropertyName","removeAttachment","serverAttachInfo","deleteAttachInfo","updateRows","createBatchCreateAttachInfo","isRootEntity","NodeCodes","batchUploadInfo","appendAttachmentInfosToClient","updateRowsWithConfigs","appendAttachmentInfos","updateRowsWithPropertyName","parentBindingPathArray","BindingPathConverter","toBindingPathArray","BefDataPathUtil","convertToObjectCodes","HiretryIds","convertToDataIdsForUpdate","AttachmentIds","AttachmentId","attachmentIds","convertToDataIdsForAdd","rootDataId","updateEntityById","keyValues","updateEntities","updateEntity","setValueByPath","prev","AttachmentService","setLanguageService","uploadAndUpdateRow","rootDirId","parentDirName","rootId","defaultRootDirId","formId","defaultParentDirName","uploadLimit","UploadLimit","fileCount","attachmentIdList","getSpecialRow","getCurrentRow","getAttachmentIdsByPathAndDataIds","uploadDialogService","uploadFileWithLimit","FileState","New","firstAttachmentInfo","attachDataService","uploadAndUpdateRowWithPropertyName","uploadAndBatchAddRows","uploadAndBatchAddRowsWithPropertyName","download","attachId","getDownloadUrl","batchDownload","attachIds","metadataidlist","downloadService","attachIdsString","getMultipleDownloadUrl","BasePathService","convertPath","downloadByDataId","batchDownloadByDataIds","previewByAttachmentInfoFieldPath","previewByAttachmentIds","previewByAttachmentInfoFieldPathWithIndex","currentRow","attachmentFieldName","getCurrentAttachmentId","previewFileListWithIndex","previewBySubDirName","subDirName","fileViewerService","viewerFormFile","previewBySubDirNameWithIndex","viewerFormFileWithIndex","viewerFileList","viewerFileListWithIndex","genVersion","versions","updateAttachmentVersion","versionField","historyField","attachmentFieldPath","attachmentField","attachmentBindingList","DataPathCreator","createByShortPathFromRoot","toArray","attachments_1","versionedRows","row","getEntityByPath","version","isAttachmentCanDelete","updateAttachmentHistory","fileNameMap_1","paths_1","array","y","xVersion","parseInt","entityListData","entityService","filteredEntityListData","UploadDialogService","DownloadService","FileViewerService","FileService","addFileRows","fileInfoFieldPath","getAttachmentInfosToAddFromContext","addFileRowsWithConfigs","process","attachmentInfos_1","mapFields","fileExtends","getFileExtendsFromContext","fUploadOutPut","extend","removeFileRows","getDataIdsToRemoveFromContext","isSublist","removeObservables","removeObservable","subListDataService","forkJoin","fileExtendFieldPath","fileExtend","fileId","convertFileIdToDataId","fileBindingPath","fileFieldName","fileListBindingPath","updateOrder","attachment","debounceTime","DialogService","createModalComponentRef","createInjector","_providers","modalService","openModal","configObj","innerCompopnent","remote","useIsolateJs","parameter","dialogServiceInstance","componentCallback","componentModify","modalInstanceCallback","createRemoteForm","cmpRef","uistate","openHelpModal","events","editor","_d","_e","areaResponse","mapFields_1","valueOf","modals","openCallbackableModal","subject_1","frameId_1","_f","handle_1","_g","currentRow_1","formCmp","selectedItems","frameComtext","rows","mapFields_2","_h","event_1","_j","context_1","selectedItems_1","k","sourceKeyArray","targetValue","bindingPaths_1","targetPath","closeModal","moduleName_1","moduleName","System","import","then","module","moduleRef","trans","entryComponent","compFactory","componentRef_1","providers","provide","useValue","forwardRef","BsModalService","_componentFactoryResolver","SidebarService","openSidebar","sidebarUIService","sendIsOpen","closeSidebar","confirmBeforeClosingSidebar","checkAllEntityChanges","confirmResult","continueClosingSidebar","stopClosingSidebar","FarrisSidebarService","FilterService","stripFiltersWithSpecialValue","specialValues","strippedFilterArray","filterValue","getFilterValue","ComponentManagerService","appendControl","getControl","AuthorityService","queryOperationAuthority","operationIds","queryResult","j","dummyResult","Authority","setLabelMap","labelMap","operationLabelMap","opId","label","initialize","authorityService","operationAuth","authOfLabel","hasOperation","ExceptionHandler","setContext","FARRIS_COMMAND_SERVICE_PROVIDERS","UserSettingsService","timezone","baseOffset","i18nSetting","defaultLanguage","userDateFormat","userTimeFormat","userNumberFormat","negativeSign","numberDecimalDigits","numberDecimalSeparator","numberGroupSeparator","userRegionCode","frmI18nSettingService","getSetting","userSettings","FrmI18nSettingService","WorkFlowMessageService","listen","messageHandler","send","win","postMessage","sender","source","WorkFlowMessage","setup","workFlowMessageService","ceil","random","eventId","WorkFlowMessageHandler","onComponentInit","workFlowMessage","frameContextDestroySignal","appContextDestroySignal","resultTask","formFrameContexts","getFormFrameContexts","validation","message_1","buildMessage","AppContextManager","appContexts","getAppContexts","contexts","frame","CompareType","ValueType","RelationType","FARRIS_COMMAND_SERVICE_MODULE_PROVIDERS","UserSettingsToken","useClass","TextHandler","convert","qc","tv","fieldCode","compareType","Like","And","DateRangeHandler","control","arr","drv","startTime","startFieldCode","GreaterOrEqual","endTime","endFieldCode","LessOrEqual","DropDownHandler","ddv","dv","Equal","NotEqual","Or","NumberRangeHandler","nrv","startValue","endValue","SmartHelpHandler","shv","isInputText","valueField","textValue","getOriginalValue","SingleYearHandler","yv","yearValue","CheckBoxHandler","tvv","SingleMonthHandler","mv","monthValue","MonthRangeHandler","mrv","SingleDateTimeHandler","dtv","datetimeValue","SingleNumberHandler","numValue","SingleDateHandler","_dateValue","getDate","dateValue","dtvFormat","today","isFirstDay","isLastDay","dateType","getDay","addDays","startOfWeek","endOfWeek","startOfMonth","endOfMonth","startOfYear","endOfYear","period","_date","addWeeks","addMonths","addYears","returnFormat","ComboLookUpHandler","cluv","arr_1","RadioHandler","rv","InputGroupHandler","igv","textField","itemValue","QueryConditionHandlerFactory","_instance","getHandler","controlType","queryConditionHandlerMapping","ControlType","Text","InputGroup","DateRange","DateTimeRange","DropDownList","NumberRange","SmartHelp","SingleYear","BoolCheck","SingleMonth","MonthRange","SingleDateTime","SingleNumber","SingleDate","ComboLookUp","Radio","QuerySolutionService","getUserSessionId","frameworkSessionService","setFilterConditions","queryConditionHandler","filterConditionList","isEmpty","getControlType","setCurrentQueryConditions","FrameworkSessionService","EndEditService","endEdit","RemoteSummaryService","summary","methodName","proxy","BatchEditService","openBatchEditDialog","enableDictPicking","batchEditDialogService","gridViewModel","ids_1","dialogRef_1","batchEdit","onConfirm","changeDetectionController","detach","updateBindingData","reattach","openHiddenHelp","helpId","componentManagerService","showDialog","clearHelpSelections","helpElement","displayValue","checkCurrentRow","mappings","getValueByPath","batchAppend","mappings_1","defaultValues_1","defaultValue","batchAppendByPathBasedOnHelpSelections","mappings_2","defaultValues_2","buildPath","batchAppendByPath","batchAppendByPathWithAttachment","mappings_3","bindingPath_1","attachmentFields_1","copyRowFiles","cafError","throwError","takeLast","defaultValues","buildDefaultValues","selectedValues","attachmentFields","fileUploadService","copyFile","batchAppendBasedOnRowHelpSelections","bindingPath_2","defaultValues_3","bindingList_1","currentEntity","headItem","data_1","idMapField","sourceItemId_1","mappingRow","emptyRows_1","targetItem","request","clone","buildIds","cloneWithAttachment","uri","clearAttachmentInfo","log","copyRow","ignoreFields","ignoreFieldsArray","sources","action$","extractedFields","current","loadChild","afterIncrementalSelectHelpClose","associatedField","foreignKey","rootFrameContext","currentData_1","currentDataArray_1","appends","itemId","removes","selectItem","addAction$","removeAction$","removeEntityByPath","beforeMultiSelectHelpOpen","afterMultiSelectHelpClose","commandFrameId","onHelpClose","onHelpCloseHandler","path_1","createByPath","newEntity","suspendFrameContextEvent","resumeFrameContextEvent","suspend","updateLookupField","updateSimpleField","currentColumnType","dataType","dateStr","dateService","formatTo","updateBindingList","helpData","helpFields","idIndex","reverse","helpField","helpValue","targetBindingObject_1","fpaths","targetPropertyName","getBindingPathArray","f","filteredPaths","part","tailPath","EntityList","currentItemId","Entity","BatchEditDialogService","DateTimeHelperService","UploadService","DiscussionGroupService","addComment","configId","visibility","buildAddCommentParam","queryComments","buildQueryCommentsUrl","queryAllOrgs","queryFrequentAtUsers","buildQueryFrequentAtUsersUrl","queryAtUsers","user","buildQueryAtUsersUrl","serverUri","bill","billId","comment","ListFilterConditionsService","setCurrentFilterConditions","FormManifestService","modulePath","formManifestPath","request$","mainfests","req$","httpClient","responseType","share","FORM_PATH_TOKEN","HttpClient","FormExpressionManifestService","formManifestService","formManifest","expressionManifest","expressions","expressionPath","FORM_MANIFEST_SERVICE_TOKEN","LocalizationService","dateFormat","timeFormat","dateTimeFormat","numberFormat","date$$1","number","localize","transformDate","transformDateTime","transformNumber","getFormat","localizationType","formats","parseDateFormat","dateTime","parseTimeFormat","bigNumber","BigNumber","isBigNumber","isNegative","buildNumberFormat","prefix","absoluteValue","toFormat","groupSize","decimalSeparator","groupSeparator","FormAttentionService","blink","duration","idOrEl","attentionService","catchAttention","AttentionService","Prop","InputType","FeatureRepository","getFeaturesByMaterialId","materialId","materialID","getConfigedValueByFeatureId","configID","configType","objType","objID","applyFeatures","charactValue","getHelpInfo","helpid","httpParams","condition","searchValue","helpID","filterStr","FeatureDataService","propset","propsets","translateName","inputtype","enum","enuminfo","isreadonly","isrequired","FeatureEditService","materialFeatureId","featureDataService","featureEditorService","buildFeatures","featureSet","featureTemplate","mergeFeatures","FeatureEditorService","ExpressionService","expression","customContext","deps","resolveService","groupDependencies","ExpressionUtil","getGroupFunctionDependency","entityContext","buildEntityContext","stateContext","buildStateContext","entityOriginalNodeCode","bignumber_js","expressionExecutor","eval","executeAsync","isGroupdMainEntity","dep","isEntityDependency","isGroupDependency","getEntity","collection","ENTITY_TEMPLATE","childrenEntityPaths","getChildrenEntityPaths","getCurrentRowByPaths","parent_1","node","__items__","__type__","uiState_1","getOwnPropertyNames","match","ResolveService","ExpressionExecutor","DirtyCheckingService","detectChanges","global","appRef","tick","cd","detectChangesAfter","ChangeDetectorRef","ApplicationRef","PopUpService","longPaths","entityListPaths","originalData","entityList_1","getEntityNodeByPath","item_1","entity_1","updateCurrentRow","paths_2","modalBindingList","closeCheck","entityList","removeRow","showConfirm","closeDialog","getPrimaryValue","getPersisteData","isDataChanged","entityPaths","persiste","getBindingObject","FormService","getIndex","ViewModelService","getGridColumns","PaginationService","resetChildrenPagination","childrenEntityCodes","getPropNamesByGroup","pageCount","FARRIS_COMMAND_SERVICE_FRAME_PROVIDERS","QUERYSOLUTION_HANDLER_TOKEN","LISTFILTER_HANDLER_TOKEN","FORM_EXPRESSION_MANIFEST_SERVICE_TOKEN","MESSAGE_SERVICE_TOKEN","NOTIFY_SERVICE_TOKEN","FRAME_COMPONENT_INIT_HANDLER_TOKEN","multi","DYNAMIC_FARRIS_COMMAND_SERVICE_PROVIDERS","NgModule","imports","WfTaskHandlerModule","exports","CommandServicesModule","MessagePipe","sendMessage","MessagePipeService","pipeName","useFormContext","pipeType","BackEndMessageHandler","isException","hasThrowError","collect","updateFormErrors","resetFormMessage","targetFrameContext","findTargetFrameContext","all","backEndMessage","bizMessages","hasFormlessError","bizMessage","location_1","getBindingPath","getFrameContextsByBindingPathAndColumnName","isDataGridComponent","isReadonlyDataGrid","isCurrentRow","getFormControlByColumnName","domPropertyName","mergeMessage","primary_1","buildItemTitle","defaultI18nValue","columns_1","columns_1_1","rows_1","rows_1_1","bizMessages_1","bizMessages_1_1","post","formItems","isPropertyExist","backend-message-1","template","zh-CHT","currentLanguage","getCurrentLanguage","getBindingPathByTableName","entityPropertyInfo","entityPropertyName_1","randomFrameContext","mappingName_1","entries","clearBackendError","virtualRootComponent","TabId","AppId","AppEntrance","FuncId"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n/**\r\n * åéæ¶æ¯ç»FormLoadingServiceï¼\r\n * ä½¿å¶æ¥æ¶åè°ç¨hide()å½æ°\r\n * æ­¤æå¡ä»ç¨äºå¤çHttpå¼å¸¸\r\n */\r\n@Injectable()\r\nclass HideEventService {\r\n    public hideEvent = new Subject<any>();\r\n}\r\n\r\nexport { HideEventService };","import { Injectable, SkipSelf, Optional } from '@angular/core';\r\nimport { LoadingService, LoadingConfig, LoadingComponent } from '@farris/ui-loading';\r\nimport { HideEventService } from './hide-event.service';\r\nimport { AppContext, FrameContext } from '@farris/devkit';\r\n// tslint:disable: no-string-literal\r\n/**\r\n * å è½½æç¤ºHelper\r\n * 1ãåè£@farris/uiçLoadingServiceï¼\r\n * 2ãæä¾éå¯¹è¡¨åçå¿«æ·æ¹æ³ï¼\r\n */\r\n@Injectable()\r\nclass FormLoadingService {\r\n  private static isSuspend = false;\r\n  /**\r\n   * å è½½ä¸­ç»ä»¶å®ä¾\r\n   */\r\n  private loadingCmp: LoadingComponent;\r\n\r\n  /**\r\n   * å»¶è¿loadingå®æ¶å¨\r\n   */\r\n  private loadingTimerIds: any[] = [];\r\n\r\n  /**\r\n   * å¼ºå¶æ¾ç¤ºï¼ä¸è½éè\r\n   */\r\n\r\n  /**\r\n   * æé å½æ°\r\n   * æ³¨å¥@farris/uiçLoadingService\r\n   */\r\n  constructor(\r\n    private loadingService: LoadingService,\r\n    @Optional() private hideEventService: HideEventService,\r\n    @Optional() private applicationContext: AppContext,\r\n  ) {\r\n    if (hideEventService) {\r\n      this.hideEventService.hideEvent.subscribe(\r\n        result => {\r\n          this.hide();\r\n        }\r\n      );\r\n    }\r\n  }\r\n  public setSuspend(flag: boolean) {\r\n    FormLoadingService.isSuspend = flag;\r\n  }\r\n  /**\r\n   * æ¾ç¤ºå è½½ä¸­\r\n   */\r\n  public show(configOrMessage?: any): LoadingComponent {\r\n    if (FormLoadingService.isSuspend === true) {\r\n      return;\r\n    }\r\n    if (this.loadingCmp) {\r\n      this.loadingCmp.close();\r\n      this.loadingCmp = null;\r\n    }\r\n    this.registerService();\r\n    const loadingConfig = this.buildLoadingConfig(configOrMessage);\r\n    this.loadingCmp = this.loadingService.show(loadingConfig);\r\n    return this.loadingCmp;\r\n  }\r\n\r\n  /**\r\n   * å»¶è¿æ¾ç¤ºLoading\r\n   */\r\n  public showLoadingWithDelay(delayTime: number, configOrMessage?: any): any {\r\n    // this.show(configOrMessage);\r\n    const timerId = setTimeout(() => {\r\n      this.show(configOrMessage);\r\n    }, delayTime);\r\n    this.loadingTimerIds.push(timerId);\r\n    this.registerService();\r\n    return timerId;\r\n  }\r\n\r\n  /**\r\n   * éèå»¶è¿çLoading\r\n   */\r\n  public hideDelayLoading(timerIdToClear: any) {\r\n    this.clearLoadingTimer(timerIdToClear);\r\n    this.hide();\r\n  }\r\n\r\n  /**\r\n   * æé LoadingConfig\r\n   * @param configOrMessage éç½®å¯¹è±¡ææ¶æ¯å­ç¬¦ä¸²\r\n   */\r\n  private buildLoadingConfig(configOrMessage: any): LoadingConfig {\r\n    let loadingConfig: LoadingConfig;\r\n    if (!!configOrMessage) {\r\n      if (typeof configOrMessage === 'object') {\r\n        loadingConfig = configOrMessage;\r\n      } else {\r\n        loadingConfig = { 'message': configOrMessage };\r\n      }\r\n    } else {\r\n      loadingConfig = {};\r\n    }\r\n    if (!loadingConfig.hasOwnProperty('delay')) {\r\n      loadingConfig.delay = 0;\r\n    }\r\n    return loadingConfig;\r\n  }\r\n\r\n  /**\r\n   * å³é­ææloading\r\n   */\r\n  public clearAll() {\r\n    FormLoadingService.isSuspend = false;\r\n    window.setTimeout(() => {\r\n      this.loadingService.clearAll();\r\n    }, 350);\r\n    this.loadingCmp = null;\r\n    this.clearAllLoadingTimers();\r\n    this.destroy();\r\n  }\r\n\r\n  /**\r\n   * æ¸ç©ºLoadingå®æ¶å¨\r\n   */\r\n  private clearLoadingTimer(timerIdToClear: any) {\r\n    clearTimeout(timerIdToClear);\r\n    this.loadingTimerIds = this.loadingTimerIds.filter((timerId: any) => {\r\n      return timerId !== timerIdToClear;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * æ¸ç©ºææLoadingå®æ¶å¨\r\n   */\r\n  private clearAllLoadingTimers() {\r\n    this.loadingTimerIds.forEach((timerId: any) => {\r\n      this.clearLoadingTimer(timerId);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * éèå è½½ä¸­\r\n   */\r\n  public hide() {\r\n    if (!this.loadingCmp) {\r\n      this.destroy();\r\n      return;\r\n    }\r\n    if (FormLoadingService.isSuspend === true) {\r\n      return;\r\n    }\r\n    this.loadingCmp.close();\r\n    this.loadingCmp = null;\r\n    this.destroy();\r\n  }\r\n  /**\r\n   * éæ¯loadingService\r\n   */\r\n  public destroy() {\r\n    if (FormLoadingService.isSuspend === true) {\r\n      return;\r\n    }\r\n    const services: any[] = window['DEVKIT_LOADING_SERVICE'] || [];\r\n    if (services && Array.isArray(services) && services.length > 0) {\r\n      services.forEach((service: FormLoadingService) => {\r\n        if (service) {\r\n          service.clearAllLoadingTimers();\r\n          if (service.loadingCmp) {\r\n            service.loadingCmp.close();\r\n            service.loadingCmp = null;\r\n        }\r\n        }\r\n      });\r\n    }\r\n    window['DEVKIT_LOADING_SERVICE'] = [];\r\n  }\r\n\r\n  /**\r\n   * æ³¨åææçLoadingServiceå®ä¾\r\n   */\r\n  private registerService() {\r\n    const services: any[] = window['DEVKIT_LOADING_SERVICE'] || [];\r\n    services.push(this);\r\n    window['DEVKIT_LOADING_SERVICE'] = services;\r\n  }\r\n}\r\n\r\n\r\nexport { FormLoadingService };\r\n","\r\nimport { LanguageMessage } from './language-message';\r\n\r\n/**\r\n * è±æè¯­è¨æ¶æ¯\r\n */\r\nclass LanguageMessageForEn implements LanguageMessage {\r\n  yes = 'Yes';\r\n  no = 'No';\r\n  unsaveNotifyTitle = 'Exist unsave record. Do save operation or not?';\r\n  clientNotifyTitle = 'System Prompt In The Frontend';\r\n  serverNotifyTitle = 'System Prompt In The Backend';\r\n  cancelApproveSuccess = 'Cancel Approve Success';\r\n  cancelApproveFailed = 'Cancel Approve Failed';\r\n  unallowEmptyProcessInstanceName = 'Process Instance Name Can Not Be Empty';\r\n  unallowEmptyBizBillId = 'Biz Bill Id Can Not Be Empty';\r\n  unallowEmptyChildBizBillId = 'Child Biz Bill Id Can Not Be Empty';\r\n  bizDefKeyRequired = 'Biz Def Key can\\'t be empty.';\r\n  procInsIdRequired = 'Process instance Id can\\'t be empty.';\r\n  addChildFailed = 'Add Child Failed';\r\n  addSiblingFailed = 'Add Sibling Failed';\r\n  addSubChildFailed = 'Add Sub Child Failed';\r\n  addSubSiblingFailed = 'Add Sub Sibling Failed';\r\n  deleteFailed = 'Delete Failed';\r\n  multiSaveFailed = 'MultiSave Failed';\r\n  appendFailed = 'Append Failed';\r\n  queryFailed = 'Query Failed';\r\n  cancelFailed = 'Cancel Failed';\r\n  updateFailed = 'Update Failed';\r\n  addFailed = 'Add Failed';\r\n  loadFailed = 'Load Failed';\r\n  saveSuccess = 'Successfully saved!';\r\n  saveFailed = 'Save failed!';\r\n  deleteSuccess = 'Successfully deleted!';\r\n  deleteFaild = 'Failed to delete!';\r\n  confirmDeletion = 'Confirm deletion?';\r\n  submitSuccess = 'Submit successfully!';\r\n  submitFaild = 'Submit failed!';\r\n  notifyTitle = 'System prompt';\r\n  httpError = 'HTTP request error! Please check the server error!';\r\n  gridDataNotSave = 'The current page data is not saved. Turning the page will result in data loss. Do you want to continue turning the page?';\r\n  exitWithoutSave = 'There is unsaved data. Do you want to continue closing?';\r\n  notSupportMenuType = 'Not supported menu type!';\r\n  cancelWithoutSave = 'Exist unsaved change,Confirm to cancel?';\r\n  plsSelectDeleteData = 'Please select the data to delete!';\r\n  errorHierarchyKey = 'Incorrect ierarchy key';\r\n  plsSelectParentNode = 'Please select parent node!';\r\n  deleteChildFirst = 'Please delete the child nodes first!';\r\n  incorrectHierarchyConfig = 'Hierarchy config is incorrect!';\r\n  operationFailed = 'The operation failed.';\r\n  plsSelectEditData = 'Please select the data you want to edit!';\r\n  plsSelectViewData = 'Please select the data you want to view!';\r\n  plsUploadFirst = 'Please upload attachment first!';\r\n  defaultDialogTitle = 'Dialog';\r\n  public changeToFirst = 'The first data.';\r\n  public changeToLast = 'The last data.';\r\n  public noProcessInstanceId = 'Please provide the process instance id.';\r\n  public noDataExist = 'Data does not exist to access the edit state!';\r\n  public noAttachment = 'There are no attachments to preview.';\r\n  public confirm = 'Confirm';\r\n  public cancel = 'Cancel';\r\n  public plsSelectCopyData = 'Please select the data you want to copy!';\r\n  public copyFieldsRequired = 'The copy fields can`t be empty!';\r\n  public pathIsRequired = 'The request url can`t be empty!';\r\n  public propsIsEmpty = 'The material has no props!';\r\n  public historyAttachment = 'The history attachment can`t be delete!';\r\n  public plsSelectDownloadAtt = 'Please select the attachment you want to download!';\r\n  public noDownloadAtt = 'There are no attachments to download!';\r\n  public plsCheckBatchEditRows = 'Please check the rows you want to edit!';\r\n  public plsSelectDetailFormData = 'Please select a detail form data first!';\r\n  public dataAndStateChanged = 'Are you sure you want to load the new data and switch to $1 state?';\r\n  public dataChanged = 'Are you sure you want to load the data and discards the current modification?';\r\n  public stateChanged = 'Are you sure you want to switch $1 state?';\r\n  public defaultStateName = 'init';\r\n  public copy = 'Copy detail message';\r\n  public copySuccess = 'Copy success';\r\n  public copyFailed = 'Copy failed';\r\n  public roger = 'Roger';\r\n  public appOrFuncIdRequired = 'No menu or application parameters are configured, please configure them in the designer.';\r\n  public tableCanNotEmpty = 'can not empty.';\r\n  public plsSelectRemoveAtt = 'Please select the attachment to delete!';\r\n  public plsSelectUpdateRow = 'Please select the row where you want to update the attachment!';\r\n}\r\n\r\nexport { LanguageMessageForEn };\r\n","import { LanguageMessage } from './language-message';\r\n\r\n/**\r\n * è±æè¯­è¨æ¶æ¯\r\n */\r\nclass LanguageMessageForZh implements LanguageMessage {\r\n  public yes = 'æ¯';\r\n  public no = 'å¦';\r\n  public unsaveNotifyTitle = 'å­å¨æªä¿å­è®°å½ãæ¯å¦è¦ä¿å­ï¼';\r\n  public clientNotifyTitle = 'åç«¯å¼å¸¸æç¤º';\r\n  public serverNotifyTitle = 'æå¡å¨ç«¯å¼å¸¸æç¤º';\r\n  public cancelApproveSuccess = 'åæ¶æäº¤æåï¼';\r\n  public cancelApproveFailed = 'åæ¶æäº¤å¤±è´¥ï¼';\r\n  public unallowEmptyProcessInstanceName = 'æµç¨å®ä¾åç§°ä¸è½ä¸ºç©º';\r\n  public unallowEmptyBizBillId = 'è¯·éæ©ä¸æ¡æ°æ®';\r\n  public bizDefKeyRequired = 'å¥å£åæ®ä¸è½ä¸ºç©º';\r\n  public unallowEmptyChildBizBillId = 'ä»è¡¨ä¸å¡åæ®ç¼å·ä¸è½ä¸ºç©ºï¼';\r\n  public procInsIdRequired = 'æµç¨å®ä¾Idä¸è½ä¸ºç©ºï¼';\r\n  public addChildFailed = 'æ°å¢å­çº§å¤±è´¥';\r\n  public addSiblingFailed = 'æ°å¢åçº§å¤±è´¥';\r\n  public addSubChildFailed = 'æ°å¢ä»è¡¨å­çº§å¤±è´¥';\r\n  public addSubSiblingFailed = 'æ°å¢ä»è¡¨åçº§å¤±è´¥';\r\n  public deleteFailed = 'å é¤å¤±è´¥';\r\n  public multiSaveFailed = 'æ¹éä¿å­å¤±è´¥';\r\n  public appendFailed = 'è¿½å å¤±è´¥';\r\n  public queryFailed = 'æ¥è¯¢å¤±è´¥';\r\n  public cancelFailed = 'åæ¶å¤±è´¥';\r\n  public updateFailed = 'æ´æ°å¤±è´¥';\r\n  public addFailed = 'æ°å¢å¤±è´¥';\r\n  public loadFailed = 'å è½½å¤±è´¥';\r\n  public saveSuccess = 'ä¿å­æåï¼';\r\n  public saveFailed = 'ä¿å­å¤±è´¥ï¼';\r\n  public deleteSuccess = 'å é¤æåï¼';\r\n  public deleteFaild = 'å é¤å¤±è´¥ï¼';\r\n  public confirmDeletion = 'ç¡®è®¤å é¤ï¼';\r\n  public submitSuccess = 'æäº¤å®¡æ¹æåï¼';\r\n  public submitFaild = 'æäº¤å®¡æ¹å¤±è´¥ï¼';\r\n  public notifyTitle = 'ç³»ç»æç¤º';\r\n  public httpError = 'HTTPè¯·æ±éè¯¯ï¼è¯·æ£æ¥Serverç«¯éè¯¯ï¼';\r\n  public gridDataNotSave = 'å½åé¡µæ°æ®æªä¿å­ï¼ç¿»é¡µå°å¯¼è´æ°æ®ä¸¢å¤±ï¼æ¯å¦ç»§ç»­ç¿»é¡µï¼';\r\n  public exitWithoutSave = 'å­å¨æªä¿å­çæ°æ®ï¼æ¯å¦ç»§ç»­å³é­ï¼';\r\n  public notSupportMenuType = 'å³é­çæ¢ä¸æ¯èåä¹ä¸æ¯åºç¨ã';\r\n  public cancelWithoutSave = 'å­å¨æªä¿å­çåæ´ï¼ç¡®è®¤åæ¶ï¼';\r\n  public plsSelectDeleteData = 'è¯·éæ©è¦å é¤çæ°æ®ï¼';\r\n  public errorHierarchyKey = 'éè¯¯çåçº§ç ';\r\n  public plsSelectParentNode = 'è¯·éæ©ç¶èç¹';\r\n  public deleteChildFirst = 'è¯·åå é¤å­èç¹';\r\n  public incorrectHierarchyConfig = 'åçº§ç éç½®ä¿¡æ¯éè¯¯';\r\n  public operationFailed = 'æä½æ§è¡å¤±è´¥ã';\r\n  public plsSelectEditData = 'è¯·éæ©è¦ç¼è¾çæ°æ®ï¼';\r\n  public plsSelectViewData = 'è¯·éæ©è¦æ¥ççæ°æ®ï¼';\r\n  public plsUploadFirst = 'è¯·åä¸ä¼ éä»¶ï¼';\r\n  public defaultDialogTitle = 'å¼¹çª';\r\n  public changeToFirst = 'å·²å°è¾¾ç¬¬ä¸æ¡æ°æ®';\r\n  public changeToLast = 'å·²å°è¾¾æåä¸æ¡æ°æ®';\r\n  public noProcessInstanceId = 'è¯·æå®æµç¨å®ä¾æ è¯ã';\r\n  public noDataExist = 'è¦ç¼è¾çæ°æ®ä¸å­å¨ï¼æ æ³è¿å¥ç¼è¾ç¶æï¼';\r\n  public noAttachment = 'æ²¡æå¯ä»¥é¢è§çéä»¶ã';\r\n  public confirm = 'ç¡®å®';\r\n  public cancel = 'åæ¶';\r\n  public plsSelectCopyData = 'è¯·éæ©è¦å¤å¶çæ°æ®ï¼';\r\n  public copyFieldsRequired = 'è¦å¤å¶çå­æ®µä¸è½ä¸ºç©ºï¼';\r\n  public pathIsRequired = 'è¯·æ±è·¯å¾ä¸è½ä¸ºç©ºï¼';\r\n  public propsIsEmpty = 'æ²¡æå¯ä»¥ç¼è¾çç©æç¹å¾ï¼';\r\n  public historyAttachment = 'åå²çæ¬éä»¶ç¦æ­¢å é¤ï¼';\r\n  public plsSelectDownloadAtt = 'è¯·éæ©è¦ä¸è½½çéä»¶!';\r\n  public noDownloadAtt = 'æ¾ä¸å°è¦ä¸è½½çéä»¶!'\r\n  public plsCheckBatchEditRows = 'è¯·å¾éè¦æ¹éç¼è¾çè¡ï¼';\r\n  public plsSelectDetailFormData = 'è¯·åéæ©ä¸æ¡ä»è¡¨æ°æ®ï¼';\r\n  public dataAndStateChanged = 'ç¡®å®è¦å è½½æ°æ®å¹¶åæ¢å°$1ç¶æï¼';\r\n  public dataChanged = 'ç¡®å®è¦å è½½æ°æ®å¹¶æ¾å¼å½åä¿®æ¹ï¼';\r\n  public stateChanged = 'ç¡®å®è¦åæ¢å°$1ç¶æï¼';\r\n  public defaultStateName = 'åå§';\r\n  public copy = 'å¤å¶è¯¦ç»ä¿¡æ¯';\r\n  public copySuccess = 'å¤å¶æå';\r\n  public copyFailed = 'å¤å¶å¤±è´¥';\r\n  public roger = 'ç¥éäº';\r\n  public appOrFuncIdRequired = 'æªéç½®èåæåºç¨åæ°ï¼è¯·å¨è®¾è®¡å¨ä¸­éç½®ã';\r\n  public tableCanNotEmpty = 'ä¸è½ä¸ºç©ºã';\r\n  public plsSelectRemoveAtt = 'è¯·éæ©è¦å é¤çéä»¶!';\r\n  public plsSelectUpdateRow = 'è¯·éæ©è¦æ´æ°éä»¶çè¡ï¼';\r\n}\r\n\r\nexport { LanguageMessageForZh };\r\n","import { LanguageMessage } from './language-message';\r\n\r\n/**\r\n * ç¹ä½ä¸­æè¯­è¨æ¶æ¯\r\n */\r\nclass LanguageMessageForZhft implements LanguageMessage {\r\n  public yes = 'æ¯';\r\n  public no = 'å¦';\r\n  public unsaveNotifyTitle = 'å­å¨æªä¿å­è¨éãæ¯å¦è¦ä¿å­ï¼';\r\n  public clientNotifyTitle = 'åç«¯ç°å¸¸æç¤º';\r\n  public serverNotifyTitle = 'æåå¨ç«¯ç°å¸¸æç¤º';\r\n  public cancelApproveSuccess = 'åæ¶æäº¤æåï¼';\r\n  public cancelApproveFailed = 'åæ¶æäº¤å¤±æï¼';\r\n  public unallowEmptyProcessInstanceName = 'æµç¨å¯¦ä¾åç¨±ä¸è½çºç©º';\r\n  public unallowEmptyBizBillId = 'è«é¸æå£¹æ¢æ¸æ';\r\n  public bizDefKeyRequired = 'å¥å£å®æä¸è½çºç©º';\r\n  public unallowEmptyChildBizBillId = 'å¾è¡¨æ¥­åå®æç·¨èä¸è½çºç©ºï¼';\r\n  public procInsIdRequired = 'æµç¨å¯¦ä¾idä¸è½çºç©ºï¼';\r\n  public addChildFailed = 'æ°å¢å­ç´å¤±æ';\r\n  public addSiblingFailed = 'æ°å¢åç´å¤±æ';\r\n  public addSubChildFailed = 'æ°å¢å¾è¡¨å­ç´å¤±æ';\r\n  public addSubSiblingFailed = 'æ°å¢å¾è¡¨åç´å¤±æ';\r\n  public deleteFailed = 'åªé¤å¤±æ';\r\n  public multiSaveFailed = 'æ¹éä¿å­å¤±æ';\r\n  public appendFailed = 'è¿½å å¤±æ';\r\n  public queryFailed = 'æ¥è©¢å¤±æ';\r\n  public cancelFailed = 'åæ¶å¤±æ';\r\n  public updateFailed = 'æ´æ°å¤±æ';\r\n  public addFailed = 'æ°å¢å¤±æ';\r\n  public loadFailed = 'å è¼å¤±æ';\r\n  public saveSuccess = 'ä¿å­æåï¼';\r\n  public saveFailed = 'ä¿å­å¤±æï¼';\r\n  public deleteSuccess = 'åªé¤æåï¼';\r\n  public deleteFaild = 'åªé¤å¤±æï¼';\r\n  public confirmDeletion = 'ç¢ºèªåªé¤ï¼';\r\n  public submitSuccess = 'æäº¤å¯©æ¹æåï¼';\r\n  public submitFaild = 'æäº¤å¯©æ¹å¤±æï¼';\r\n  public notifyTitle = 'ç³»çµ±æç¤º';\r\n  public httpError = 'HTTPè«æ±é¯èª¤ï¼è«æª¢æ¥Serverç«¯é¯èª¤ï¼';\r\n  public gridDataNotSave = 'ç¶åé æ¸ææªä¿å­ï¼ç¿»é å°å°è´æ¸æä¸å¤±ï¼æ¯å¦ç¹¼çºç¿»é ï¼';\r\n  public exitWithoutSave = 'å­å¨æªä¿å­çæ¸æï¼æ¯å¦ç¹¼çºééï¼';\r\n  public notSupportMenuType = 'ééçæ¢ä¸æ¯èå®ä¹ä¸æ¯æç¨ã';\r\n  public cancelWithoutSave = 'å­å¨æªä¿å­çè®æ´ï¼ç¢ºèªåæ¶ï¼';\r\n  public plsSelectDeleteData = 'è«é¸æè¦åªé¤çæ¸æï¼';\r\n  public errorHierarchyKey = 'é¯èª¤çåç´ç¢¼';\r\n  public plsSelectParentNode = 'è«é¸æç¶ç¯é»';\r\n  public deleteChildFirst = 'è«ååªé¤å­ç¯é»';\r\n  public incorrectHierarchyConfig = 'åç´ç¢¼éç½®ä¿¡æ¯é¯èª¤';\r\n  public operationFailed = 'æä½å·è¡å¤±æã';\r\n  public plsSelectEditData = 'è«é¸æè¦ç·¨è¼¯çæ¸æï¼';\r\n  public plsSelectViewData = 'è«é¸æè¦æ¥ççæ¸æï¼';\r\n  public plsUploadFirst = 'è«åä¸å³éä»¶ï¼';\r\n  public defaultDialogTitle = 'å½çª';\r\n  public changeToFirst = 'å·²å°éç¬¬å£¹æ¢æ¸æ';\r\n  public changeToLast = 'å·²å°éæå¾å£¹æ¢æ¸æ';\r\n  public noProcessInstanceId = 'è«æå®æµç¨å¯¦ä¾æ¨è­ã';\r\n  public noDataExist = 'è¦ç·¨è¼¯çæ¸æä¸å­å¨ï¼ç¡æ³é²å¥ç·¨è¼¯çæï¼';\r\n  public noAttachment = 'æ²æå¯ä»¥é è¦½çéä»¶ã';\r\n  public confirm = 'ç¢ºå®';\r\n  public cancel = 'åæ¶';\r\n  public plsSelectCopyData = 'è«é¸æè¦å¾©å¶çæ¸æï¼';\r\n  public copyFieldsRequired = 'è¦å¾©å¶çå­æ®µä¸è½çºç©ºï¼';\r\n  public pathIsRequired = 'è«æ±è·¯å¾ä¸è½çºç©ºï¼';\r\n  public propsIsEmpty = 'æ²æå¯ä»¥ç·¨è¼¯çç©æç¹å¾ï¼';\r\n  public historyAttachment = 'æå²çæ¬éä»¶ç¦æ­¢åªé¤ï¼';\r\n  public plsSelectDownloadAtt = 'è«é¸æè¦ä¸è¼çéä»¶!';\r\n  public noDownloadAtt = 'æ¾ä¸å°è¦ä¸è¼çéä»¶ï¼';\r\n  public plsCheckBatchEditRows = 'è«å¾é¸è¦æ¹éç·¨è¼¯çè¡ï¼';\r\n  public plsSelectDetailFormData = 'è«åé¸æä¸æ¢å¾è¡¨æ¸æï¼';\r\n  public dataAndStateChanged = 'ç¢ºå®è¦å è¼æ¸æä¸¦åæå°$1çæï¼';\r\n  public dataChanged = 'ç¢ºå®è¦å è¼æ¸æä¸¦æ¾æ£ç¶åä¿®æ¹ï¼';\r\n  public stateChanged = 'ç¢ºå®è¦åæå°$1çæï¼';\r\n  public defaultStateName = 'åå§';\r\n  public copy = 'å¾©å¶è©³ç´°ä¿¡æ¯';\r\n  public copySuccess = 'å¾©å¶æå';\r\n  public copyFailed = 'å¾©å¶å¤±æ';\r\n  public roger = 'ç¥éäº';\r\n  public appOrFuncIdRequired = 'æªéç½®èå®ææç¨åæ¸ï¼è«å¨è¨­è¨å¨ä¸­éç½®ã';\r\n  public tableCanNotEmpty = 'ä¸è½çºç©ºã';\r\n  public plsSelectRemoveAtt = 'è«é¸æè¦åªé¤çéä»¶!';\r\n  public plsSelectUpdateRow = 'è«é¸ææ´æ°éä»¶çè¡ï¼';\r\n}\r\n\r\nexport { LanguageMessageForZhft };\r\n","import { LanguageMessage } from './language-message';\r\nimport { LanguageMessageForZh } from './language-message-zh';\r\nimport { LanguageMessageForEn } from './language-message-en';\r\nimport { LanguageMessageForZhft } from './language-message-zhft';\r\nclass LanguageMessageFactory {\r\n\r\n  private static languageMessageMap: Map<string, LanguageMessage> = new Map<string, LanguageMessage>();\r\n\r\n  /**\r\n   * Create an instance by language\r\n   */\r\n  public static create(language: string): LanguageMessage {\r\n    if (this.languageMessageMap.has(language) === true) {\r\n      return this.languageMessageMap.get(language);\r\n    }\r\n\r\n    let languageMessage: LanguageMessage;\r\n    switch (language) {\r\n      case 'zh-CHS':\r\n        languageMessage = new LanguageMessageForZh();\r\n        break;\r\n      case 'en':\r\n        languageMessage = new LanguageMessageForEn();\r\n        break;\r\n      case 'zh-CHT':\r\n        languageMessage = new LanguageMessageForZhft();\r\n        break;\r\n      default:\r\n        languageMessage = new LanguageMessageForZh();\r\n        break;\r\n    }\r\n    this.languageMessageMap.set(language, languageMessage);\r\n\r\n    return languageMessage;\r\n  }\r\n}\r\n\r\nexport { LanguageMessageFactory };\r\n","import { Injectable, LOCALE_ID, Optional, Inject } from '@angular/core';\r\nimport { LanguageMessage, LanguageMessageFactory } from './languages/index';\r\n\r\n\r\n/**\r\n * å¤è¯­è¨æå¡\r\n * @scope FormModule\r\n */\r\n@Injectable()\r\nclass LanguageService implements LanguageMessage {\r\n\r\n  /**\r\n   * åä¾å¯¹è±¡\r\n   */\r\n  private static innerInstance: LanguageService = null;\r\n\r\n  // #region å®ç°LanguageMessageæ¥å£ï¼æ¹ä¾¿ä¹¦å\r\n  public yes: string;\r\n  public no: string;\r\n  public unsaveNotifyTitle: string;\r\n  public clientNotifyTitle: string;\r\n  public serverNotifyTitle: string;\r\n  public cancelApproveSuccess: string;\r\n  public cancelApproveFailed: string;\r\n  public unallowEmptyProcessInstanceName: string;\r\n  public unallowEmptyBizBillId: string;\r\n  public unallowEmptyChildBizBillId: string;\r\n  public bizDefKeyRequired: string;\r\n  public procInsIdRequired: string;\r\n  public addChildFailed: string;\r\n  public addSiblingFailed: string;\r\n  public addSubChildFailed: string;\r\n  public addSubSiblingFailed: string;\r\n  public deleteFailed: string;\r\n  public multiSaveFailed: string;\r\n  public appendFailed: string;\r\n  public queryFailed: string;\r\n  public cancelFailed: string;\r\n  public updateFailed: string;\r\n  public addFailed: string;\r\n  public loadFailed: string;\r\n  public saveSuccess: string;\r\n  public saveFailed: string;\r\n  public deleteSuccess: string;\r\n  public deleteFaild: string;\r\n  public confirmDeletion: string;\r\n  public submitSuccess: string;\r\n  public submitFaild: string;\r\n  public notifyTitle: string;\r\n  public httpError: string;\r\n  public gridDataNotSave: string;\r\n  public exitWithoutSave: string;\r\n  public notSupportMenuType: string;\r\n  public cancelWithoutSave: string;\r\n  public plsSelectDeleteData: string;\r\n  public errorHierarchyKey: string;\r\n  public plsSelectParentNode: string;\r\n  public deleteChildFirst: string;\r\n  public incorrectHierarchyConfig: string;\r\n  public operationFailed: string;\r\n  public plsSelectEditData: string;\r\n  public plsSelectViewData: string;\r\n  public plsUploadFirst: string;\r\n  public defaultDialogTitle: string;\r\n  public changeToFirst: string;\r\n  public changeToLast: string;\r\n  public noProcessInstanceId: string;\r\n  public noDataExist: string;\r\n  public noAttachment: string;\r\n  public confirm: string;\r\n  public cancel: string;\r\n  public plsSelectCopyData: string;\r\n  public copyFieldsRequired: string;\r\n  public pathIsRequired: string;\r\n  public propsIsEmpty: string;\r\n  public historyAttachment: string;\r\n  public plsSelectDownloadAtt: string;\r\n  public noDownloadAtt: string;\r\n  public plsCheckBatchEditRows: string;\r\n  public plsSelectDetailFormData: string;\r\n  public dataAndStateChanged: string;\r\n  public dataChanged: string;\r\n  public stateChanged: string;\r\n  public defaultStateName: string;\r\n  public copy: string;\r\n  public copySuccess: string;\r\n  public copyFailed: string;\r\n  public roger: string;\r\n  public appOrFuncIdRequired: string;\r\n  public tableCanNotEmpty: string;\r\n  public plsSelectRemoveAtt: string;\r\n  public plsSelectUpdateRow: string;\r\n  // #endregion\r\n\r\n  /**\r\n   * å½åè¯­è¨\r\n   */\r\n  protected language = 'zh-CHS';\r\n\r\n  /**\r\n   * å½åè¯­è¨å\r\n   */\r\n  protected get languageMessage(): LanguageMessage {\r\n    return LanguageMessageFactory.create(this.language);\r\n  }\r\n\r\n  /**\r\n   * æé å½æ°\r\n   */\r\n  constructor(@Optional() @Inject(LOCALE_ID) localeId?: string) {\r\n    this.language = localeId || 'zh-CHS';\r\n    this.extendProperties();\r\n    LanguageService.innerInstance = this;\r\n  }\r\n\r\n  /**\r\n   * è·åå®ä¾\r\n   */\r\n  public static getInstance() {\r\n    if (this.innerInstance) {\r\n      return this.innerInstance;\r\n    }\r\n    const instance = new LanguageService('zh-CHS');\r\n    LanguageService.innerInstance = instance;\r\n    return instance;\r\n  }\r\n\r\n  /**\r\n   * æ©å±å±æ§\r\n   */\r\n  private extendProperties() {\r\n    Object.keys(this.languageMessage).forEach((propName: string) => {\r\n      Object.defineProperty(this, propName, {\r\n        get: () => {\r\n          return this.languageMessage[propName];\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport { LanguageService };\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class DeviceAbility {\r\n  /**\r\n   * å¤å¶å°ç²è´´æ¿\r\n   * @param text \r\n   * @returns \r\n   */\r\n  public static copyToClipboard(text): boolean {\r\n    const windowRef: any = window;\r\n    if (windowRef.clipboardData && windowRef.clipboardData.setData) {\r\n      return windowRef.clipboardData.setData(\"Text\", text);\r\n    } else if (document.queryCommandSupported && document.queryCommandSupported(\"copy\")) {\r\n      var textarea = document.createElement(\"textarea\");\r\n      textarea.textContent = text;\r\n      textarea.style.position = \"fixed\";\r\n      document.body.appendChild(textarea);\r\n      textarea.select();\r\n      try {\r\n        return document.execCommand(\"copy\");\r\n      } catch (ex) {\r\n      } finally {\r\n        document.body.removeChild(textarea);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}","\r\nimport { Optional } from '@angular/core';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { LanguageService } from '../languag.service';\r\nimport { ServerExceptionEntity } from './types';\r\nimport { DeviceAbility } from '../util/device-ability';\r\nimport { BsModalRef } from '@farris/ui-modal';\r\nimport { FormNotifyService } from '../form-notify.service';\r\nimport { FrameContext } from '@farris/devkit';\r\nimport moment from 'moment';\r\n/**\r\n * å¼å¸¸å¤çæ¥å£\r\n */\r\nexport interface IExceptionStrategy {\r\n  handleException(error: ServerExceptionEntity): void;\r\n}\r\n\r\n\r\n/**\r\n * å¼å¸¸å¤çåºç±»\r\n */\r\nexport class ExceptionStrategy {\r\n  constructor(\r\n    public messagerService: MessagerService,\r\n    @Optional() public languageService: LanguageService) {\r\n  }\r\n}\r\n\r\n/**\r\n * ä¿¡æ¯çº§å«å¼å¸¸å¤ç\r\n */\r\nexport class InfoExceptionStrategy extends ExceptionStrategy implements IExceptionStrategy {\r\n  constructor(\r\n    messagerService: MessagerService,\r\n    @Optional() languageService: LanguageService) {\r\n    super(messagerService, languageService);\r\n  }\r\n\r\n  public handleException(error: ServerExceptionEntity): void {\r\n    if (!error) {\r\n      return;\r\n    }\r\n\r\n    this.messagerService.info(error.Message);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * è­¦åçº§å«å¼å¸¸å¤ç\r\n */\r\nexport class WarningExceptionStrategy extends ExceptionStrategy implements IExceptionStrategy {\r\n  constructor(\r\n    messagerService: MessagerService,\r\n    @Optional() languageService: LanguageService) {\r\n    super(messagerService, languageService);\r\n  }\r\n\r\n  public handleException(error: ServerExceptionEntity): void {\r\n    if (!error) {\r\n      return;\r\n    }\r\n\r\n    this.messagerService.warning(error.Message);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * éè¯¯çº§å«å¼å¸¸å¤ç\r\n */\r\nexport class ErrorExceptionStrategy extends ExceptionStrategy implements IExceptionStrategy {\r\n  private langService: LanguageService = null;\r\n  constructor(\r\n    messagerService: MessagerService,\r\n    @Optional() languageService: LanguageService) {\r\n    super(messagerService, languageService);\r\n    this.langService = languageService;\r\n    if (!this.langService) {\r\n      this.langService = new LanguageService();\r\n    }\r\n\r\n  }\r\n\r\n  public handleException(error: ServerExceptionEntity): void {\r\n    if (!error) {\r\n      return;\r\n    }\r\n\r\n    this.handleErrorLevel(error);\r\n  }\r\n\r\n  private handleErrorLevel(error: ServerExceptionEntity): void {\r\n    const exceptionMsg = error.Message || '';\r\n    const date = error.date || new Date();\r\n    const localDate = moment(date).format('YYYY-MM-DD HH:mm:ss');\r\n    const detail = error.Detail || `${error.Message}\\r\\nåçæ¶é´ï¼${localDate}\\r\\nè¯¦ç»ä¿¡æ¯ï¼${error.innerMessage}` || '';\r\n\r\n    const innerMessage = error.innerMessage || null;\r\n    let bsModalRef: BsModalRef;\r\n    const options = {\r\n      // title: this.languageService.serverNotifyTitle,\r\n      showMaxButton: false,\r\n      buttons: [\r\n        {\r\n          text: this.langService.roger,\r\n          cls: 'btn btn-primary btn-lg',\r\n          handle: () => {\r\n            bsModalRef.close();\r\n          }\r\n        }\r\n      ],\r\n      // showHeader: false,\r\n      width: 440,\r\n      height: 200,\r\n      safeHtml: false,\r\n      exception: {\r\n        date: localDate,\r\n        message: innerMessage,\r\n        copyButton: {\r\n          text: this.langService.copy,\r\n          onClick: (e) => {\r\n            const result = DeviceAbility.copyToClipboard(detail);\r\n            const text = result ? this.langService.copySuccess : this.langService.copyFailed;\r\n            bsModalRef.content.showMiniNotify(text, 1500);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    this.displayError(error);\r\n    bsModalRef = this.messagerService.show('exception', exceptionMsg, options);\r\n  }\r\n  /**\r\n   * å¨æ§å¶å°ä¸­æ¾ç¤ºéè¯¯ä¿¡æ¯\r\n   */\r\n  private displayError(error: ServerExceptionEntity) {\r\n    if (!error) {\r\n      return;\r\n    }\r\n    if (!console || !console.error) {\r\n      return;\r\n    }\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n/**\r\n * è´å½éè¯¯çº§å«å¼å¸¸å¤ç\r\n */\r\nexport class FatalExceptionStrategy extends ExceptionStrategy implements IExceptionStrategy {\r\n  constructor(\r\n    messagerService: MessagerService,\r\n    @Optional() languageService: LanguageService) {\r\n    super(messagerService, languageService);\r\n  }\r\n\r\n  public handleException(error: ServerExceptionEntity): void {\r\n    if (!error) {\r\n      return;\r\n    }\r\n\r\n    this.messagerService.error(error.Message);\r\n  }\r\n}\r\n","import { Optional, Injectable } from '@angular/core';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { LanguageService } from '../languag.service';\r\nimport { ServerExceptionEntity, ExceptionLevel } from './types';\r\nimport {\r\n  IExceptionStrategy, InfoExceptionStrategy, WarningExceptionStrategy, ErrorExceptionStrategy, FatalExceptionStrategy\r\n} from './exception_strategy';\r\n\r\n\r\n@Injectable()\r\nexport class ExceptionFactory {\r\n\r\n  /**\r\n   * å¼å¸¸å·¥åå®ä¾\r\n   */\r\n  private static exceptionFactory: ExceptionFactory = null;\r\n\r\n  /**\r\n   * æé å½æ°\r\n   * @param messagerService æ¶æ¯æå¡\r\n   * @param languageService å¤è¯­è¨æå¡\r\n   */\r\n  private constructor(\r\n    public messagerService: MessagerService,\r\n    @Optional() private languageService: LanguageService,\r\n  ) {\r\n\r\n  }\r\n\r\n  /**\r\n   * è·åå·¥åå®ä¾\r\n   * @param messagerService æ¶æ¯æå¡\r\n   * @param languageService å¤è¯­è¨æå¡\r\n   */\r\n  public static getInstance(messagerService: MessagerService, languageService: LanguageService): ExceptionFactory {\r\n    if (!this.exceptionFactory) {\r\n      this.exceptionFactory = new ExceptionFactory(messagerService, languageService);\r\n    }\r\n\r\n    return this.exceptionFactory;\r\n  }\r\n\r\n  /**\r\n   * è·åå¼å¸¸å¤çç­ç¥\r\n   * @param exceptionLevel å¼å¸¸ç­çº§\r\n   */\r\n  public getExceptionHandleStrategy(exceptionLevel: ExceptionLevel): IExceptionStrategy {\r\n    let exceptionStrategy: IExceptionStrategy;\r\n\r\n    switch (exceptionLevel) {\r\n      case ExceptionLevel.Info:\r\n        exceptionStrategy = new InfoExceptionStrategy(this.messagerService, this.languageService);\r\n        break;\r\n      case ExceptionLevel.Warning:\r\n        exceptionStrategy = new WarningExceptionStrategy(this.messagerService, this.languageService);\r\n        break;\r\n      case ExceptionLevel.Error:\r\n        exceptionStrategy = new ErrorExceptionStrategy(this.messagerService, this.languageService);\r\n        break;\r\n      case ExceptionLevel.Fatal:\r\n        exceptionStrategy = new FatalExceptionStrategy(this.messagerService, this.languageService);\r\n        break;\r\n      default:\r\n\r\n        // é»è®¤å¼å¸¸ç­çº§æ¯éè¯¯\r\n        exceptionStrategy = new ErrorExceptionStrategy(this.messagerService, this.languageService);\r\n        break;\r\n    }\r\n\r\n    return exceptionStrategy;\r\n  }\r\n}\r\n","// https://github.com/typeslick/status-code-enum\r\nenum HttpStatusType {\r\n    Info = 1,\r\n    Success,\r\n    Redirect,\r\n    ClientError,\r\n    ServerError\r\n}\r\n\r\n/**\r\n * httpéç¨ç±»\r\n */\r\nclass HttpUtil {\r\n\r\n    /**\r\n     * åºäºhttpç¶æç è¿åç¶æç±»å\r\n     * @param httpResponseSatus httpè¯·æ±è¿åç¶æç \r\n     * @returns null | HttpStatusType\r\n     */\r\n    public static getHttpStatusType(httpResponseSatus: number): any {\r\n        if (!httpResponseSatus) {\r\n            return null;\r\n        }\r\n        \r\n        let statusType = null; // é»è®¤å¼ä¸ºç©º\r\n        \r\n        if (httpResponseSatus < 100 || httpResponseSatus > 600) {\r\n            statusType = null; // ä¸åçç¶æç \r\n        } else if (httpResponseSatus >= 100 && httpResponseSatus < 200) {\r\n            statusType = HttpStatusType.Info;\r\n        } else if (httpResponseSatus >= 200 && httpResponseSatus < 300) {\r\n            statusType = HttpStatusType.Success;\r\n        } else if (httpResponseSatus >= 300 && httpResponseSatus < 400) {\r\n            statusType = HttpStatusType.Redirect;\r\n        } else if (httpResponseSatus >= 400 && httpResponseSatus < 500) {\r\n            statusType = HttpStatusType.ClientError;\r\n        } else if (httpResponseSatus >= 500 && httpResponseSatus < 600) {\r\n            statusType = HttpStatusType.ServerError;\r\n        }\r\n\r\n        return statusType;\r\n    }\r\n}\r\n\r\nexport { HttpUtil, HttpStatusType };","import { Injectable, Optional } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { FormMessageService } from '../form-message.service';\r\nimport { LanguageService } from '../languag.service';\r\nimport { HttpUtil, HttpStatusType } from '../util/http';\r\n\r\n/**\r\n * è¡¨åéè¯¯æç¤ºæå¡\r\n * @description ç»ä¸å¤çååç«¯å¼å¸¸\r\n */\r\n@Injectable()\r\nclass FormErrorService {\r\n  constructor(\r\n    private msgService: FormMessageService,\r\n    @Optional() private languageService: LanguageService\r\n  ) {\r\n  }\r\n\r\n  /**\r\n   * å¼å¸¸è·¯ç±æ¹æ³\r\n   */\r\n  public exception(message: string, error: any) {\r\n    // éå¯¹sessionå¤±æåç¹æ®å¤ç\r\n    if (error && error.hasOwnProperty('expired') && error['expired'] === true) {\r\n      return;\r\n    }\r\n    if (error && this.isHttpErrorResponse(error)) {\r\n      this.httpErrorHandler(error);\r\n    } else {\r\n      // todo: ç»åå¼å¸¸å¤çåï¼ç»§ç»­æè§£è¯¥æ¹æ³\r\n      this.commonErrorHandler(message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * httpè¯·æ±å¼å¸¸å¤çå¨\r\n   */\r\n  public httpErrorHandler(httpError: HttpErrorResponse): void {\r\n    if (!httpError) {\r\n      return;\r\n    }\r\n\r\n    const statusType = HttpUtil.getHttpStatusType(httpError.status);\r\n\r\n    switch (statusType) {\r\n      case HttpStatusType.ClientError:\r\n        if (httpError.status === 401) {\r\n          this.msgService.http401Error(httpError);\r\n          break;\r\n        }\r\n\r\n        this.msgService.httpErrorInClient(httpError);\r\n        break;\r\n      case HttpStatusType.ServerError:\r\n        this.msgService.httpErrorInServer(httpError);\r\n        break;\r\n      default:\r\n        throw new Error('Get invalid status code when using httpErrorHandler method.');\r\n    }\r\n  }\r\n\r\n  private commonErrorHandler(errorMsg: string): void {\r\n    if (!errorMsg) {\r\n      return;\r\n    }\r\n    this.msgService.error(errorMsg);\r\n  }\r\n  /**\r\n   * httpErrorResponse like\r\n   * @param error å¼å¸¸\r\n   */\r\n  private isHttpErrorResponse(error) {\r\n    if (!error) {\r\n      return false;\r\n    }\r\n    if (typeof error !== 'object') {\r\n      return false;\r\n    }\r\n    if (error.name === 'HttpErrorResponse' && error.hasOwnProperty('status') && error.hasOwnProperty('error')) {\r\n      return true;\r\n    }\r\n    if (error instanceof HttpErrorResponse) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport { FormErrorService };\r\n\r\n","import { Inject, Injectable, LOCALE_ID, Optional } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, Subject, of, from } from 'rxjs';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { fromPromise } from 'rxjs/observable/fromPromise';\r\nimport { LanguageService } from './languag.service';\r\nimport { ServerExceptionEntity, ExceptionFactory, IExceptionStrategy } from './error/index';\r\nimport { BsModalRef } from '@farris/ui-modal';\r\n\r\n/**\r\n * è¡¨åæ¶æ¯æå¡\r\n * @scope FormModule\r\n * @summary\r\n * 1ãåè£@farris/uiçæ¶æ¯æå¡ï¼\r\n * 2ãæä¾éå¯¹è¡¨åçå¿«æ·æ¹æ³ï¼\r\n */\r\n@Injectable()\r\nclass FormMessageService {\r\n\r\n  /**\r\n   * æé å½æ°\r\n   * æ³¨å¥@farris/uiçLoadingService\r\n   */\r\n  constructor(\r\n    private messagerService: MessagerService,\r\n    @Optional() private languageService: LanguageService,\r\n    @Inject(LOCALE_ID) private curLanguage: string, // ä¸ºäºç¬ç«å¼¹åºéæ°ç»å½æç¤ºæ¡ï¼åæ¢å°è¿è¡æ¡æ¶httpæå¡åå¯ä»¥å é¤\r\n  ) {\r\n    this.languageService = this.languageService || LanguageService.getInstance();\r\n  }\r\n  /**\r\n   * questionå¼¹çª\r\n   */\r\n  public question(content: string): Observable<boolean> {\r\n    const confirmResult$: Promise<boolean> = this.confirmPromise(content);\r\n    return from(confirmResult$);\r\n  }\r\n\r\n  /**\r\n   * å¸¦é»è®¤ç¦ç¹çå¼¹åºæç¤º\r\n   * @param content åå®¹\r\n   */\r\n  public question2(content: string): Observable<boolean> {\r\n    const promise$: Promise<boolean> = new Promise((resolve, reject) => {\r\n      const dialogRef = this.messagerService.question2(\r\n        content,\r\n        [\r\n          {\r\n            text: this.languageService.no,\r\n            cls: 'btn btn-secondary',\r\n            handle: () => {\r\n              resolve(false);\r\n              dialogRef.close();\r\n            }\r\n          },\r\n          {\r\n            text: this.languageService.yes,\r\n            cls: 'btn btn-primary',\r\n            defaultFocus: true,\r\n            handle: () => {\r\n              resolve(true);\r\n              dialogRef.close();\r\n            }\r\n          }\r\n        ]);\r\n    });\r\n    return from(promise$);\r\n  }\r\n\r\n  /**\r\n   * å¼¹åºè¾å¥å¯¹è¯æ¡\r\n   * @param title æ é¢\r\n   */\r\n  public prompt(title: string): Observable<any> {\r\n    return this.messagerService.prompt(title);\r\n  }\r\n\r\n  /**\r\n   * ä½¿ç¨Promiseå®ä¾åè£åè°æ¹æ³ï¼ä»¥åæ­¥åè°æ¹æ³æ§è¡åç»æ\r\n   * @param content\r\n   */\r\n  private confirmPromise(content: string): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      this.messagerService.question(\r\n        content,\r\n        () => { resolve(true); },\r\n        () => { resolve(false); }\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ç¡®è®¤å¼¹æ¡\r\n   * @param content å¼¹åºåå®¹æç¤º\r\n   */\r\n  public confirm(content: string): Observable<boolean> {\r\n    return this.messagerService.confirm(content);\r\n  }\r\n\r\n  /**\r\n   * æ¶æ¯å¼¹æ¡\r\n   */\r\n  public info(content: string) {\r\n    this.messagerService.info(content);\r\n  }\r\n\r\n  /**\r\n   * éè¯¯å¼¹æ¡\r\n   */\r\n  public error(content: string) {\r\n    this.messagerService.error(content);\r\n  }\r\n\r\n  /**\r\n   * è­¦åå¼¹æ¡\r\n   */\r\n  public warning(content: string) {\r\n    this.messagerService.warning(content);\r\n  }\r\n\r\n  /**\r\n   * æå¡å¨ç«¯å¼å¸¸æç¤ºå¼¹æ¡\r\n   */\r\n  public httpErrorInServer(httpError: HttpErrorResponse): void {\r\n    let error: ServerExceptionEntity = httpError.error;\r\n    if (typeof (error) === 'string') {\r\n      try {\r\n        error = JSON.parse(error);\r\n      } catch (e) { }\r\n    }\r\n    if (!error || error.Level == null || error.Level == undefined) { // æªå°è£errorææªè®¾ç½®å¼å¸¸ç­çº§\r\n      this.messagerService.error(httpError.message);\r\n      return;\r\n    }\r\n    const exceptionStrategy: IExceptionStrategy = ExceptionFactory.getInstance(this.messagerService, this.languageService).getExceptionHandleStrategy(error.Level);\r\n    exceptionStrategy.handleException(error);\r\n  }\r\n\r\n  /**\r\n   * å®¢æ·ç«¯å¼å¸¸æç¤ºå¼¹æ¡\r\n   */\r\n  public httpErrorInClient(httpError: HttpErrorResponse): void {\r\n    if (!httpError) {\r\n      return;\r\n    }\r\n    const message = httpError.error && httpError.error.error && httpError.error.error.message;\r\n    const exceptionMsg = message || httpError.message && httpError.message.replace(/http:\\/\\/[a-zA-Z0-9.:]{1,}/, '');\r\n    const options = {\r\n      // title: this.languageService.clientNotifyTitle,\r\n      // showMaxButton: true,\r\n      showHeader: false,\r\n      width: 400,\r\n      height: 200,\r\n      safeHtml: false\r\n    };\r\n\r\n    this.messagerService.show('error', exceptionMsg, options);\r\n  }\r\n\r\n  /**\r\n   * 401å¼å¸¸å¤ç\r\n   * ä¸ºäºç¬ç«å¼¹åºéæ°ç»å½æç¤ºæ¡ï¼åæ¢å°è¿è¡æ¡æ¶httpæå¡åå¯ä»¥å é¤\r\n   * @param httpError å¼å¸¸\r\n   */\r\n  public http401Error(httpError: HttpErrorResponse): void {\r\n    const dialogShownKey = '401ErrorShownFlag';\r\n\r\n    if (!httpError || window[dialogShownKey]) {\r\n      return;\r\n    }\r\n\r\n    const i18n = {\r\n      en: {\r\n        title: 'Warning',\r\n        sessionInvalid: 'Your login has expired, please login again.',\r\n        ok: 'ok',\r\n        cancel: 'cancel'\r\n      },\r\n      'zh-CHS': {\r\n        title: 'æç¤º',\r\n        sessionInvalid: 'ç¨æ·ç»å½ä¿¡æ¯å·²å¤±æï¼æ¯å¦éæ°ç»å½?',\r\n        ok: 'ç¡®è®¤',\r\n        cancel: 'åæ¶'\r\n      }\r\n    };\r\n    this.curLanguage = this.curLanguage || 'zh-CHS';\r\n\r\n    const messageOptions = {\r\n      title: i18n[this.curLanguage].title,\r\n      initialState: {\r\n        okText: i18n[this.curLanguage].ok,\r\n        okHandle: () => {\r\n          modalRef.close();\r\n          window[dialogShownKey] = false;\r\n          const eventResult = httpError && httpError.error || {};\r\n          const redirectUri = eventResult.redirect_uri || '/login.html';\r\n          window.location.href = `/logout.html#?logout-before-redirect=true&loginUri=${redirectUri}`;\r\n        },\r\n        cancelText: i18n[this.curLanguage].cancel,\r\n        cancelHandle: () => {\r\n          modalRef.close();\r\n          window[dialogShownKey] = false;\r\n        }\r\n      },\r\n      showHeader: true,\r\n      width: 420,\r\n      height: 180,\r\n      fitContent: false\r\n    };\r\n    const modalRef = this.messagerService.show('question', i18n[this.curLanguage].sessionInvalid, messageOptions);\r\n    window[dialogShownKey] = true;\r\n    if (modalRef && modalRef.dialog && modalRef.dialog.instance.closed) {\r\n      modalRef.dialog.instance.closed.subscribe(() => {\r\n        window[dialogShownKey] = false;\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { FormMessageService };\r\n\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { NotifyService, NotifyOptions } from '@farris/ui-notify';\r\nimport { LanguageService } from './languag.service';\r\n\r\n/**\r\n * éç¥æå¡\r\n * @scope FormModule\r\n * @description\r\n * æ¶æ¯æç¤ºä½¿ç¨ç­ç¥ï¼æåä½¿ç¨successï¼å¤±è´¥ä½¿ç¨errorï¼è­¦åä½¿ç¨warningï¼å¶ä»åºæ¯ä½¿ç¨info\r\n */\r\n@Injectable()\r\nclass FormNotifyService {\r\n\r\n  /**\r\n   * æé å½æ°\r\n   * æ³¨å¥@farris/uiçNotifyService\r\n   */\r\n  constructor(private notifyService: NotifyService,\r\n    @Optional() private languageService: LanguageService\r\n  ) {\r\n    if (!languageService) {\r\n      this.languageService = LanguageService.getInstance();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ä¿¡æ¯æç¤º\r\n   * @param content åå®¹\r\n   */\r\n  public default(content: string) {\r\n    return this.notifyService.default(<NotifyOptions>{\r\n      title: this.languageService.notifyTitle,\r\n      msg: content,\r\n      timeout: 3000\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ä¿¡æ¯æç¤º\r\n   * @param content åå®¹\r\n   */\r\n  public info(content: string, options?: { [prop: string]: any }) {\r\n    const notifyOptions: NotifyOptions = {\r\n      title: this.languageService.notifyTitle,\r\n      msg: content,\r\n      timeout: 3000\r\n    } as NotifyOptions;\r\n    if (options && options.hideTitle) {\r\n      delete notifyOptions.title;\r\n    }\r\n    return this.notifyService.info(notifyOptions);\r\n  }\r\n\r\n  /**\r\n   * æåæç¤º\r\n   * @param content åå®¹\r\n   * @param options? éé¡¹ {shorTitle: false}\r\n   */\r\n  public success(content: string, options?: { [prop: string]: any }) {\r\n    const notifyOptions: NotifyOptions = {\r\n      title: this.languageService.notifyTitle,\r\n      msg: content,\r\n      timeout: 3000\r\n    } as NotifyOptions;\r\n    if (options && options.hideTitle) {\r\n      delete notifyOptions.title;\r\n    }\r\n    this.notifyService.success(notifyOptions);\r\n  }\r\n\r\n  /**\r\n   * è­¦åæç¤º\r\n   * @param content åå®¹\r\n   * @param options éé¡¹\r\n   */\r\n  public warning(content: string, options?: { [prop: string]: any }) {\r\n    const notifyOptions: NotifyOptions = {\r\n      title: this.languageService.notifyTitle,\r\n      msg: content,\r\n      timeout: 3000\r\n    } as NotifyOptions;\r\n    if (options && options.hideTitle) {\r\n      delete notifyOptions.title;\r\n    }\r\n    this.notifyService.warning(notifyOptions);\r\n  }\r\n\r\n  /**\r\n   * éè¯¯æç¤º\r\n   * @param content åå®¹\r\n   */\r\n  public error(content: string, options?: { [prop: string]: any }) {\r\n    const notifyOptions: NotifyOptions = {\r\n      title: this.languageService.notifyTitle,\r\n      msg: content,\r\n      timeout: 3000\r\n    } as NotifyOptions;\r\n    if (options && options.hideTitle) {\r\n      delete notifyOptions.title;\r\n    }\r\n    this.notifyService.error(notifyOptions);\r\n  }\r\n}\r\n\r\nexport { FormNotifyService };\r\n","import { Injectable } from '@angular/core';\r\nimport { WizardService, WizardEventType } from '@farris/ui-wizard';\r\nimport { FrameContext } from '@farris/devkit';\r\n\r\n@Injectable()\r\nexport class FormWizardService {\r\n    constructor(\r\n        private wizardSer: WizardService\r\n    ) { }\r\n\r\n    public preStep() {\r\n        const currentPageId = this.wizardSer.getCurrentPageId();\r\n        this.wizardSer.updateWizardState(WizardEventType.Prev, currentPageId);\r\n    }\r\n    public nextStep() {\r\n        const currentPageId = this.wizardSer.getCurrentPageId();\r\n        this.wizardSer.updateWizardState(WizardEventType.Next, currentPageId);\r\n    }\r\n    public cancelWizard() {\r\n        this.wizardSer.cancelWizard();\r\n    }\r\n\r\n    public finishWizard() {\r\n        this.wizardSer.finishWizard();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * æ£æ¥è§å\r\n * @scope FormModule\r\n */\r\n@Injectable()\r\nclass CheckService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   * æ£æ¥æ¯å¦ä¸ºç©º\r\n   */\r\n  public checkEmpty(value: any) {\r\n    return !!value;\r\n  }\r\n}\r\n\r\nexport { CheckService };\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { Observable, empty, of } from 'rxjs';\r\nimport { CommandContext } from '@farris/devkit';\r\nimport { FormMessageService } from './form-message.service';\r\nimport { FormNotifyService } from './form-notify.service';\r\nimport { LanguageService } from './languag.service';\r\n\r\n/**\r\n * æ°æ®æ£æ¥æå¡\r\n */\r\n@Injectable()\r\nclass DataCheckService {\r\n\r\n  constructor(\r\n    private messageService: FormMessageService,\r\n    private formNotifyService: FormNotifyService,\r\n    @Optional() private languageService: LanguageService,\r\n  ) {\r\n    if (!this.languageService) {\r\n      this.languageService = LanguageService.getInstance();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ç¼è¾åæ£æ¥\r\n   */\r\n  public checkBeforeEdit(idToEdit: string): any {\r\n\r\n    const ifSkipCheck = this.ifSkipCheck(idToEdit);\r\n    if (ifSkipCheck === true) {\r\n      return true;\r\n    }\r\n\r\n    if (idToEdit) {\r\n      return true;\r\n    }\r\n\r\n    this.formNotifyService.warning(this.languageService.plsSelectEditData, { hideTitle: true });\r\n    return empty();\r\n  }\r\n\r\n  /**\r\n   * æ¥çåæ£æ¥\r\n   */\r\n  public checkBeforeView(idToView: string): any {\r\n    const ifSkipCheck = this.ifSkipCheck(idToView);\r\n    if (ifSkipCheck === true) {\r\n      return true;\r\n    }\r\n\r\n    if (idToView) {\r\n      return true;\r\n    }\r\n\r\n    this.formNotifyService.warning(this.languageService.plsSelectViewData, { hideTitle: true });\r\n    return empty();\r\n  }\r\n  /**\r\n   * èè¡¨åè·³è¿æ£æ¥\r\n   * @todoï¼å¾å é¤ï¼å¼å®¹èè¡¨å\r\n   */\r\n  public ifSkipCheck(id: string): boolean {\r\n    const context = this['context'] as CommandContext;\r\n    const params = context.command.params;\r\n\r\n    // è¡¨åæ²¡æéæ°ä¿å­è¿çæåµ\r\n    if (params.hasOwnProperty('idToEdit') === false && params.hasOwnProperty('idToView') === false) {\r\n      return true;\r\n    }\r\n\r\n    // ä¿å­è¿ä½æ²¡æå¡«åæ°çæåµ\r\n    // @todo: ä¼æ¼æç©ºä¸²çæåµï¼ç®åä¸»é®è§£æçè¿åå¼æ¯undefinedï¼æä¸èèç©ºä¸²åºæ¯\r\n    if (id === '') {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nexport { DataCheckService };\r\n","import { Injectable } from '@angular/core';\r\nimport { FrameEventBus } from '@farris/devkit';\r\n\r\n/**\r\n * æ¡æ¶äºä»¶æå¡\r\n * @scope FormModule\r\n */\r\n@Injectable()\r\nclass EventService {\r\n\r\n  constructor(private eventBus: FrameEventBus) {\r\n  }\r\n\r\n  trigger(eventType: string, eventData?: any, frameIds?: string[]) {\r\n    this.eventBus.trigger(eventType, eventData, frameIds);\r\n  }\r\n}\r\n\r\nexport { EventService };\r\n","import { Injectable } from '@angular/core';\r\n// tslint:disable: no-unused-expression\r\n/**\r\n * èåç¶ææå¡\r\n * @scope FormModule\r\n */\r\n@Injectable()\r\nclass MenuStateService {\r\n    private readonly COMMAND_SERVICE_LINK_STORAGE_KEY = 'COMMAND_SERVICE_LINK_STORAGE_KEY';\r\n    private getState() {\r\n        const data = !!sessionStorage && sessionStorage.getItem(this.COMMAND_SERVICE_LINK_STORAGE_KEY) || null;\r\n        if (!!data) {\r\n            return JSON.parse(data);\r\n        }\r\n        return {};\r\n    }\r\n    private setState(links) {\r\n        !!sessionStorage && sessionStorage.setItem(this.COMMAND_SERVICE_LINK_STORAGE_KEY, JSON.stringify(links));\r\n    }\r\n    public addMenuState(parentMenuId: string, childMenuId: string, status: boolean = true) {\r\n        if (!childMenuId) {\r\n            return;\r\n        }\r\n        const state = this.getState();\r\n        const isParentExist = !!state && state.hasOwnProperty(parentMenuId);\r\n        const childItem = { id: childMenuId, status };\r\n        if (isParentExist) {\r\n            const parent = state[parentMenuId];\r\n            const isChildItemExist = parent.find(item => item.id === childMenuId);\r\n            if (!isChildItemExist) {\r\n                state[parentMenuId].push(childItem);\r\n            }\r\n        } else {\r\n            state[parentMenuId] = [childItem];\r\n        }\r\n        this.setState(state);\r\n    }\r\n    public getMenuState(parentMenuId: string, childMenuId?: string) {\r\n        const state = this.getState();\r\n        if (state === null) {\r\n            return null;\r\n        }\r\n        const isParentExist = state.hasOwnProperty(parentMenuId);\r\n        if (!isParentExist) {\r\n            return null;\r\n        }\r\n        const parentMenu = state[parentMenuId];\r\n        const childMenu = parentMenu.filter(item => item.status === true);\r\n        if (typeof childMenuId === 'undefined' || childMenuId.length < 1) {\r\n            return childMenu;\r\n        }\r\n        return parentMenu.filter(item => item.status && item.id === childMenuId);\r\n    }\r\n    public updateMenuState(childMenuId: string, status: boolean) {\r\n        const state = this.getState();\r\n        if (state === null) {\r\n            return;\r\n        }\r\n        Object.keys(state).forEach(key => {\r\n            const childMenu = state[key].find(item => item.id === childMenuId);\r\n            if (!!childMenu) {\r\n                childMenu.status = status;\r\n            }\r\n        });\r\n        this.setState(state);\r\n    }\r\n    public removeMenu(menuId: string) {\r\n        this.removeParentMenu(menuId);\r\n        this.removeChildMenu(menuId);\r\n    }\r\n    private removeParentMenu(menuId: string) {\r\n        const state = this.getState();\r\n        if (state === null) {\r\n            return null;\r\n        }\r\n        Object.keys(state).forEach(item => {\r\n            if (item === menuId && state[menuId].length < 1) {\r\n                delete state[item];\r\n            }\r\n        });\r\n        this.setState(state);\r\n    }\r\n    private removeChildMenu(menuId: string) {\r\n        const state = this.getState();\r\n        if (state === null) {\r\n            return;\r\n        }\r\n        Object.keys(state).forEach(parentMenuId => {\r\n            const childMenus = state[parentMenuId];\r\n            if (childMenus && childMenus.length > 0) {\r\n                childMenus.forEach((child, index) => {\r\n                    if (child.id === menuId) {\r\n                        childMenus.splice(index, 1);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        this.setState(state);\r\n    }\r\n}\r\n\r\nexport { MenuStateService };\r\n","/*\r\n * @Author: Witt\r\n * @Date: 2018-11-15 15:56:11\r\n * @Last Modified by: aalizzwell\r\n * @Last Modified time: 2019-07-09 16:23:04\r\n */\r\n\r\nimport { Injectable, Optional } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { RouterParamService } from '@farris/devkit';\r\nimport { FrameworkService, AppService } from '@gsp-sys/rtf-common';\r\nimport { MenuStateService } from './menu-state.service';\r\nimport { Subject } from 'rxjs';\r\nimport { LanguageService } from './languag.service';\r\n\r\n// tslint:disable: no-string-literal\r\n/**\r\n * è·¯ç±æå¡\r\n * @scope FormModule\r\n */\r\n@Injectable()\r\nclass RouterService {\r\n  /**\r\n   * ä¸æ¬¡åæ¢çTabId\r\n   */\r\n  private lastSwitchId: string = null;\r\n  /**\r\n   * ä¸æ¬¡å³é­çTabId\r\n   */\r\n  private lastCloseId: string = null;\r\n  // private menuStateService: MenuStateService = null;\r\n  public onClosed: Subject<any> = null;\r\n  constructor(\r\n    private router: Router,\r\n    private routerParamService: RouterParamService,\r\n    private frameworkService: FrameworkService,\r\n    @Optional() private appService: AppService,\r\n    @Optional() private menuStateService: MenuStateService,\r\n    @Optional() private languageService: LanguageService,\r\n  ) {\r\n    if (!this.menuStateService) {\r\n      this.menuStateService = new MenuStateService();\r\n    }\r\n    if (!this.languageService) {\r\n      this.languageService = LanguageService.getInstance();\r\n    }\r\n    this.onClosed = new Subject<any>();\r\n    this.registerEvent();\r\n  }\r\n\r\n  /**\r\n   * åæ¢è·¯ç±\r\n   * @param url èåID\r\n   * @param params è·¯ç±åæ°\r\n   */\r\n  public route(url: string, params: any) {\r\n    url = this.router.createUrlTree([url]).toString();\r\n    this.setParams(url, params);\r\n    this.router.navigateByUrl(url);\r\n  }\r\n  /**\r\n   * æ³¨åè¿è¡æ¡æ¶äºä»¶\r\n   */\r\n  public registerEvent() {\r\n    const params: any = this.getParams(window.location.hash);\r\n    const menuId = this.getAppId() || this.getFuncId();\r\n    this.frameworkService.eventListner(this.frameworkService.FuncSwitch, e => {\r\n      if (!e) {\r\n        return;\r\n      }\r\n      const id = this.getOriginalId(e.id) || e.tabId;\r\n      const menuState = this.menuStateService.getMenuState(id);\r\n      if (!!id && menuId === id && !!menuState && menuState.length > 0) {\r\n        this.formReload();\r\n        this.lastSwitchId = id;\r\n      }\r\n    }, params);\r\n\r\n    this.frameworkService.eventListner(this.frameworkService.FuncClosed, e => {\r\n      if (!e) {\r\n        return;\r\n      }\r\n      this.onClosed.next(e);\r\n      const id = this.getOriginalId(e.id) || e.tabId;\r\n      if (menuId === id) {\r\n        return;\r\n      }\r\n      const menuState = this.menuStateService.getMenuState(menuId, id);\r\n      // && id !== this.lastCloseId\r\n      if (!!id && !!menuState && menuState.length > 0) {\r\n        this.removeMenuState(id);\r\n        this.formReload();\r\n        this.lastCloseId = id;\r\n      }\r\n    }, params);\r\n  }\r\n\r\n  private removeMenuState(tabId: string) {\r\n    if (this['context']) {\r\n      this.menuStateService.removeMenu(tabId);\r\n    }\r\n  }\r\n  /**\r\n   * è·ååå§åè½id\r\n   * @param id id\r\n   */\r\n  private getOriginalId(id: string) {\r\n    if (!id) {\r\n      return id;\r\n    }\r\n    if (id.indexOf('_') !== -1) {\r\n      id = id.split('_')[0];\r\n    }\r\n    return id;\r\n  }\r\n  /**\r\n   * å·æ°ç»ä»¶æ°æ®\r\n   */\r\n  private formReload() {\r\n    try {\r\n      this['context']['frameContext']['appContext']['refresh']();\r\n    } catch{ }\r\n  }\r\n  /**\r\n   * æå¼åè½èå\r\n   * @param funcId èååç \r\n   * @param params è·¯ç±åæ°ï¼å½¢å¦ï¼ { key1: val1, key2: value2 }\r\n   */\r\n  public openMenu(funcId: string, params: any, reload?: boolean) {\r\n    if (typeof reload === 'undefined' || typeof reload !== 'boolean') {\r\n      reload = false;\r\n    }\r\n    const paramsMap = this.buildParamMap(params);\r\n    const parentMenuId = this.getFuncId() || this.getAppId();\r\n    this.menuStateService.addMenuState(parentMenuId, funcId);\r\n    paramsMap.set('WEB_FORM_ROUTER_PARENT_ID', parentMenuId);\r\n    this.frameworkService.openFuncWithParam(funcId, paramsMap, reload);\r\n  }\r\n\r\n  /**\r\n   * æå¼åºç¨\r\n   * @param appId åºç¨åç \r\n   * @param appEntrance åºç¨å¥å£\r\n   * @param params è·¯ç±åæ°ï¼å½¢å¦ï¼ { key1: val1, key2: value2 }\r\n   */\r\n  public openApp(appId: string, appEntrance: string, params: any, reload?: boolean) {\r\n    if (typeof reload === 'undefined' || typeof reload !== 'boolean') {\r\n      reload = false;\r\n    }\r\n    const paramMap = this.buildParamMap(params);\r\n    const parentMenuId = this.getAppId() || this.getFuncId();\r\n    this.menuStateService.addMenuState(parentMenuId, appId);\r\n    paramMap.set('WEB_FORM_ROUTER_PARENT_ID', parentMenuId);\r\n    if (!!this.appService) {\r\n      this.appService.openApp(appId, appEntrance, paramMap, reload);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æé åæ°\r\n   */\r\n  private buildParamMap(params: any): Map<string, string> {\r\n    if (typeof params === 'undefined' || params === null || (typeof params === 'string' && params.length < 1)) {\r\n      params = {};\r\n    }\r\n    const paramMap = new Map<string, any>();\r\n    if (typeof params === 'object') {\r\n      params = JSON.stringify(params);\r\n    }\r\n    params = window['encodeURIComponent'](params);\r\n    paramMap.set('WEB_FORM_ROUTE_PARAMS', params);\r\n    return paramMap;\r\n  }\r\n\r\n  /**\r\n   * å³é­åè½èå\r\n   */\r\n  public closeMenu() {\r\n    const funcId: string | null = this.getFuncId();\r\n    const appId: string | null = this.getAppId();\r\n    const { isDialogComponent, rootComponent } = this.findDialog();\r\n    if (isDialogComponent) {\r\n      const modalRef = this.get(rootComponent, 'dialogRef');\r\n      modalRef['close']();\r\n      return;\r\n    }\r\n\r\n    if (funcId !== null && typeof funcId === 'string' && funcId.length > 0) {\r\n      this.closeFunc(funcId);\r\n    } else if (appId !== null && typeof appId === 'string' && appId.length > 0) {\r\n      const appEntrance = this.getAppEntrance();\r\n      this.closeApp(appId, appEntrance);\r\n    } else {\r\n      console.error(this.languageService['notSupportMenuType']);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æ¥æ¾å¼¹çªç»ä»¶\r\n   */\r\n  private findDialog() {\r\n    let frameContext = this.get(this, 'context.frameContext');\r\n    let isDialogComponent = this.get(frameContext, 'frameComponent.isDialogRootComponent', false);\r\n\r\n    let parentFrameContext = this.get(frameContext, 'parent');\r\n    while (parentFrameContext != null && !isDialogComponent) {\r\n      frameContext = this.get(frameContext, 'parent');\r\n      parentFrameContext = this.get(parentFrameContext, 'parent');\r\n      isDialogComponent = this.get(frameContext, 'frameComponent.isDialogRootComponent', false);\r\n    }\r\n    const rootComponent = this.get(frameContext, 'frameComponent');\r\n    return { isDialogComponent, rootComponent };\r\n\r\n  }\r\n\r\n  /**\r\n   * loadsh get\r\n   * @param object å¯¹è±¡\r\n   * @param path è·¯å¾\r\n   * @param defaultVal é»è®¤å¼\r\n   */\r\n  private get(object: any, path: Array<string> | string, defaultVal: any = null) {\r\n    const PATH = Array.isArray(path)\r\n      ? path\r\n      : path.split('.').filter(i => i.length);\r\n    if (!PATH.length) {\r\n      return object === undefined ? defaultVal : object;\r\n    }\r\n\r\n    if (object === null || object === undefined || typeof (object[PATH[0]]) === 'undefined') {\r\n      return defaultVal;\r\n    }\r\n\r\n    return this.get(object[PATH.shift()], PATH, defaultVal);\r\n  }\r\n\r\n  /**\r\n   * å³é­èå\r\n   * @param funcId èåid\r\n   */\r\n  public closeFunc(funcId?: string) {\r\n    if (!funcId) {\r\n      funcId = this.getFuncId();\r\n    }\r\n    if (!!this.frameworkService) {\r\n      this.frameworkService.closeFunc(funcId).subscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * å³é­app\r\n   * @param appId åºç¨id\r\n   */\r\n  public closeApp(appId?: string, appEntrance?: string) {\r\n    if (!appId) {\r\n      appId = this.getAppId();\r\n    }\r\n    if (typeof appEntrance === 'undefined') {\r\n      appEntrance = this.getAppEntrance();\r\n    }\r\n    if (!!this.appService) {\r\n      this.appService.closeApp(appId, appEntrance).subscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®åæ°\r\n   * @param params è·¯ç±åæ°\r\n   */\r\n  private setParams(url: string, params: string | { [key: string]: any; }) {\r\n    let paramsObj;\r\n    if (typeof params === 'string' && params !== '') {\r\n      paramsObj = JSON.parse(params);\r\n    } else {\r\n      paramsObj = params || {};\r\n    }\r\n\r\n    // è®¾ç½®è·¯ç±åæ°\r\n    this.routerParamService.setParams(url, paramsObj);\r\n  }\r\n\r\n  /**\r\n   * è·åfuncId\r\n   */\r\n  private getFuncId() {\r\n    const hash = window.location.hash;\r\n    if (!hash) {\r\n      return null;\r\n    }\r\n    const params = this.decodeURLParams(hash);\r\n    if (params && params.hasOwnProperty('funcId')) {\r\n      return params.funcId;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è·åappId\r\n   */\r\n  private getAppId() {\r\n    const hash = window.location.hash;\r\n    if (!hash) {\r\n      return null;\r\n    }\r\n    const params = this.decodeURLParams(hash);\r\n    if (params && params.hasOwnProperty('appId')) {\r\n      return params.appId;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private getParentMenuId() {\r\n    const hash = window.location.hash;\r\n    if (!hash) {\r\n      return null;\r\n    }\r\n    const params = this.decodeURLParams(hash);\r\n    if (params && params.hasOwnProperty('WEB_FORM_ROUTER_PARENT_ID')) {\r\n      return params.WEB_FORM_ROUTER_PARENT_ID;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  /**\r\n   * è·ååºç¨å¥å£\r\n   */\r\n  private getAppEntrance() {\r\n    const hash = window.location.hash;\r\n    if (!hash) {\r\n      return null;\r\n    }\r\n    const params = this.decodeURLParams(hash);\r\n    if (params && params.hasOwnProperty('appEntrance')) {\r\n      return params.appEntrance;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  /**\r\n   * è§£ç åæ°\r\n   * @param query search|hash\r\n   */\r\n  private decodeURLParams(query: string): { [propName: string]: any } {\r\n    if (typeof query === 'undefined') {\r\n      query = window.location.hash || window.location.search;\r\n    }\r\n    const hashes = query.slice(query.indexOf('?') + 1).split('&');\r\n    return hashes.reduce((params, hash) => {\r\n      const split = hash.indexOf('=');\r\n      const key = hash.slice(0, split);\r\n      const val = hash.slice(split + 1);\r\n      return Object.assign(params, { [key]: decodeURIComponent(val) });\r\n    }, {});\r\n  }\r\n  private getParams(queryString: string): { [propName: string]: any } {\r\n    if (!queryString) {\r\n      return {};\r\n    }\r\n    const hashes = queryString.slice(queryString.indexOf('?') + 1).split('&');\r\n    return hashes.reduce((params, hash) => {\r\n      const split = hash.indexOf('=');\r\n      const key = hash.slice(0, split);\r\n      const val = hash.slice(split + 1);\r\n      return Object.assign(params, { [key]: decodeURIComponent(val) });\r\n    }, {});\r\n  }\r\n}\r\n\r\nexport { RouterService };\r\n","import { InjectionToken } from '@angular/core';\r\nimport { RequestInfo } from '@farris/bef';\r\nimport { BsModalRef } from '@farris/ui-modal';\r\n// tslint:disable: unified-signatures\r\nexport const TAB_EVENT = {\r\n    /**\r\n     * Tabå³é­å\r\n     */\r\n    onTabClosed: 'FuncClosed',\r\n    /**\r\n     * Tabå³é­å\r\n     */\r\n    onTabClosing: 'beforeFuncCloseEvent',\r\n    /**\r\n     * Tabåæ¢\r\n     */\r\n    onTabSwitched: 'funcSwitchEvent'\r\n};\r\n\r\nexport const TAB_QUERY_STRING = {\r\n    TabId: 'tabId',\r\n    AppType: 'appType',\r\n    AppId: 'appId',\r\n    AppEntrance: 'appEntrance',\r\n    FuncId: 'funcId'\r\n};\r\n\r\n/**\r\n * å¸¦RequestInfoçbodyå¯¹è±¡\r\n */\r\nexport interface BodyWithRequestInfo {\r\n    requestInfo: RequestInfo;\r\n    [key: string]: any;\r\n}\r\n\r\nexport const WEB_FORM_ROUTE_PARAMS_KEY = 'WEB_FORM_ROUTE_PARAMS';\r\nexport const enum DataType{\r\n  map = '[object Map]'\r\n}\r\nexport type KeyObject<T = any> = { key: T };\r\n\r\nexport const INSIDE_DIALOG_TOKEN = new InjectionToken<boolean>('@farris/command-service-inside-dialog');\r\n\r\nexport const MODAL_REF = new InjectionToken<BsModalRef>('@farris/command-service-modal-ref');\r\n","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * æ¥è¯¢åæ°æå¡\r\n * @scope FormModule\r\n */\r\n@Injectable()\r\nexport class QuerystringService {\r\n    /**\r\n     * è§£ç åæ°\r\n     * @param queryString search|hash\r\n     */\r\n    public parse(queryString: string): { [propName: string]: any } {\r\n        if (!queryString) {\r\n            return {};\r\n        }\r\n        const hashes = queryString.slice(queryString.indexOf('?') + 1).split('&');\r\n        return hashes.reduce((params, hash) => {\r\n            const split = hash.indexOf('=');\r\n            const key = hash.slice(0, split);\r\n            const val = hash.slice(split + 1);\r\n            return Object.assign(params, { [key]: decodeURIComponent(val) });\r\n        }, {});\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EMPTY, Observable, Subject } from 'rxjs';\r\nimport { UID } from '@farris/devkit';\r\nimport { switchMap } from 'rxjs/operators';\r\n/*\r\n * @Author: aalizzwell \r\n * @Date: 2019-07-23 15:56:11 \r\n * @Last Modified by: aalizzwell\r\n * @Last Modified time: 2019-11-27 15:31:36\r\n */\r\n\r\n\r\n/**\r\n * RuntimeFrameworkService\r\n * @scope @FormModule\r\n */\r\n// tslint:disable: no-string-literal disable: max-line-length\r\n@Injectable()\r\nexport class RuntimeFrameworkService {\r\n  private rtfService: any;\r\n  constructor() {\r\n    this.rtfService = this.getService();\r\n  }\r\n  /**\r\n   * éåè·årtfæå¡\r\n   */\r\n  private getService() {\r\n    let env: Window = window;\r\n    while (!env['gspframeworkService'] && env !== window.top && this.isSameOrigin(env)) {\r\n      env = env.parent;\r\n    }\r\n    return env['gspframeworkService'] && env['gspframeworkService']['rtf'] || {};\r\n  }\r\n  // #region å¯¼èªæå¡\r\n  /**\r\n   * æå¼èåæåºç¨\r\n   * @param options options\r\n   */\r\n  openMenu(options: any) {\r\n    if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['openMenu'] === 'function') {\r\n      this.rtfService.func.openMenu(options);\r\n    }\r\n  }\r\n  /**\r\n   * æå¼èåæåºç¨\r\n   * @param options options\r\n   */\r\n  openMenu$(options: any) {\r\n    if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['openMenuByStream'] === 'function') {\r\n      return this.rtfService.func.openMenuByStream(options);\r\n    }\r\n    return EMPTY;\r\n  }\r\n  /**\r\n   * è·åå¯¼èªå®ä½æ°æ®\r\n   * @param tabId tabid\r\n   * @param callback callback\r\n   * @param once once\r\n   */\r\n  getEntityParam(tabId: string, callback: any, once: boolean = true) {\r\n    if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['getEntityParam'] === 'function') {\r\n      this.rtfService.func.getEntityParam(tabId, callback, once);\r\n    }\r\n  }\r\n  /**\r\n   * å°è¯å³é­èåæåºç¨\r\n   * @param options optins\r\n   */\r\n  beforeCloseMenu(options: any) {\r\n    if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['beforeClose'] === 'function') {\r\n      this.rtfService.func.beforeClose(options);\r\n    }\r\n  }\r\n  /**\r\n   * å³é­èå\r\n   * @param options options\r\n   */\r\n  closeMenu(options: any) {\r\n    if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['close'] === 'function') {\r\n      this.rtfService.func.close(options);\r\n    }\r\n  }\r\n  /**\r\n   * è·åèåéæåæ°\r\n   * @param funcId èåid\r\n   * @param callback åè°\r\n   */\r\n  getMenuParams(funcId: string, callback: (params) => void) {\r\n    if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['getMenuParams'] === 'function') {\r\n      this.rtfService.func.getMenuParams(funcId, callback);\r\n    }\r\n  }\r\n  /**\r\n   * æ·»å äºä»¶çå¬\r\n   */\r\n  addEventListener(token: string, handler: (value: any) => void, options: any) {\r\n    if (this.rtfService && this.rtfService.hasOwnProperty('frmEvent') && typeof this.rtfService['frmEvent']['eventListener'] === 'function') {\r\n      this.rtfService.frmEvent.eventListener(token, handler, options);\r\n    }\r\n  }\r\n  /**\r\n   * è·åè¿è¡æ¡æ¶èååæ¢æ§å¶äºä»¶\r\n   * @returns Observable<any>\r\n   */\r\n  public getMenuSwitchControlEvent(): Observable<any> {\r\n    const subject = new Subject<any>();\r\n    const frmEvent = this.rtfService && this.rtfService.frmEvent || null;\r\n    if (frmEvent) {\r\n      const tabId = this.tabId;\r\n      const options = this.params;\r\n      window.setTimeout(() => {\r\n        frmEvent.eventListener(tabId, (response: { menuSwitchControl: { key: any, value: any }, [prop: string]: any }) => {\r\n          const menuSwitchControl = response && response.menuSwitchControl || null;\r\n          if (menuSwitchControl && menuSwitchControl.key === tabId) {\r\n            subject.next(menuSwitchControl.value);\r\n          } else {\r\n            subject.next(null);\r\n          }\r\n        }, options);\r\n      }, 0);\r\n    }\r\n    return subject;\r\n  }\r\n  //#endregion\r\n\r\n  // #region ééå±å±æ§\r\n  public get params() {\r\n    if (this.rtfService && this.rtfService.hasOwnProperty('session') && typeof this.rtfService['session']['getCommonVariable'] === 'function') {\r\n      return this.rtfService['session']['getCommonVariable']();\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * è·åtabId\r\n   */\r\n  public get tabId() {\r\n    return this.params && this.params['tabId'] || null;\r\n  }\r\n  /**\r\n   * è·åformToken\r\n   */\r\n  public get formToken() {\r\n    return this.params && this.params['formToken'] || null;\r\n  }\r\n  /**\r\n   * è·åfuncId\r\n   */\r\n  public get funcId() {\r\n    return this.params && this.params['funcId'] || null;\r\n  }\r\n  // #endregion\r\n\r\n  // #region äºä»¶éä¿¡\r\n  /**\r\n   * æ³¨åä¸»é¢\r\n   * @param code ä¸»é¢çæ è¯\r\n   * @param options tokençæè§å\r\n   * @param subject èªå®ä¹ä¸»é¢ï¼é»è®¤ä½¿ç¨Subject\r\n   * @returns string æ³¨åæååè¿åä¸»é¢çå¯ä¸æ è¯\r\n   */\r\n  public subjectRegister(code: string, options: any, subject?: Subject<any>): string {\r\n    if (this.rtfService && this.rtfService.hasOwnProperty('broadcast') && typeof this.rtfService['broadcast']['subjectRegister'] === 'function') {\r\n      return this.rtfService.broadcast.subjectRegister(code, options, subject);\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * ç§»é¤ä¸»é¢\r\n   * @param token ä¸»é¢å¯ä¸æ è¯\r\n   */\r\n  public subjectRemove(token: string) {\r\n    if (this.rtfService && this.rtfService.hasOwnProperty('broadcast') && typeof this.rtfService['broadcast']['subjectRemove'] === 'function') {\r\n      this.rtfService.broadcast.subjectRemove(token);\r\n    }\r\n  }\r\n  /**\r\n   * ç»ä¸»é¢åéæ¶æ¯\r\n   * @param token ä¸»é¢æ è¯\r\n   * @param info æ¶æ¯\r\n   */\r\n  public subjectNotify(token: string, info: any) {\r\n    if (this.rtfService && this.rtfService.hasOwnProperty('broadcast') && typeof this.rtfService['broadcast']['notify'] === 'function') {\r\n      this.rtfService.broadcast.notify(token, info);\r\n    }\r\n  }\r\n  /**\r\n   * æ³¨åä¸»é¢çå¬å¨\r\n   * @param token ä¸»é¢æ è¯\r\n   * @param handler ä¸»é¢å¤çå¨\r\n   * @param observerToken çå¬å¨id(å¯é)\r\n   * @returns çå¬å¨Id\r\n   * @description çå¬ä¸»é¢æ¶æ¯ï¼çå¬æåè¿åå½åçå¬èçå¯ä¸æ è¯\r\n   */\r\n  public subjectResponse(token: string, handler: (data: any) => void, observerToken?: string): string {\r\n    if (this.rtfService && this.rtfService.hasOwnProperty('broadcast') && typeof this.rtfService['broadcast']['response'] === 'function') {\r\n      let code = observerToken;\r\n      if (typeof observerToken === 'undefined' || !observerToken || observerToken.length < 1) {\r\n        code = UID.create();\r\n      }\r\n      this.rtfService.broadcast.response(token, code, handler);\r\n      return code;\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * åæ¶å¯¹ä¸»é¢ççå¬\r\n   * @param token ä¸»é¢æ è¯\r\n   * @param observerToken çå¬å¨æ è¯\r\n   */\r\n  public responseUnSubscribe(token: string, observerToken: string) {\r\n    if (this.rtfService && this.rtfService.hasOwnProperty('broadcast') && typeof this.rtfService['broadcast']['responseUnSubscribe'] === 'function') {\r\n      this.rtfService.broadcast.responseUnSubscribe(token, observerToken);\r\n    }\r\n  }\r\n  // #endregion\r\n\r\n  // #region å·¥å·å½æ°\r\n  /**\r\n   * æ¯å¦åæº\r\n   * @param environment window\r\n   */\r\n  private isSameOrigin(environment: Window) {\r\n    const host = window.location.host;\r\n    try {\r\n      if (environment && environment.location && typeof environment.location.host !== 'undefined') {\r\n        return environment.location.host === host;\r\n      }\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  // #endregion\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { Observable, of, from, EMPTY } from 'rxjs';\r\nimport { every, concatMap, switchMap, take, tap } from 'rxjs/operators';\r\nimport { AppOptions } from '@gsp-sys/rtf-common';\r\nimport { RuntimeFrameworkService } from './rtf-service';\r\nimport { MenuStateService } from './menu-state.service';\r\nimport { TAB_EVENT } from './types';\r\nimport { QuerystringService } from './querystring';\r\nimport { FrameContext, UID } from '@farris/devkit';\r\n\r\n/**\r\n * å¯¼èªäºä»¶æå¡\r\n * @scope FormModule\r\n */\r\n@Injectable()\r\nexport class NavigationEventService {\r\n  public frameContext: FrameContext;\r\n  /**\r\n   * å³é­åäºä»¶å¤çå¨\r\n   */\r\n  private onClosedListeners: Map<string, (options?: AppOptions) => void>;\r\n  /**\r\n   * å³é­åå¤çå¨\r\n   */\r\n  private onClosingListeners: Map<string, (options?: AppOptions) => Observable<boolean>>;\r\n  private onTabSwitchListeners: Map<string, (options?: AppOptions) => void>;\r\n  private params: { [propName: string]: any };\r\n\r\n  constructor(\r\n    private runtimeFrameworkService: RuntimeFrameworkService,\r\n    private menuStateService: MenuStateService,\r\n    private querystringService: QuerystringService\r\n  ) {\r\n    this.onClosedListeners = new Map<string, (options?: AppOptions) => void>();\r\n    this.onClosingListeners = new Map<string, (options?: AppOptions) => Observable<boolean>>();\r\n    this.onTabSwitchListeners = new Map<string, (options?: AppOptions) => void>();\r\n  }\r\n  private get querystrings() {\r\n    const params = this.querystringService.parse(window.location.hash);\r\n    // ä¿®æ­£formToken\r\n    if (params) {\r\n      params.formToken = this.runtimeFrameworkService.formToken;\r\n    }\r\n    return params;\r\n  }\r\n  /**\r\n   * æ³¨åäºä»¶\r\n   */\r\n  public registerEvent() {\r\n    const options = this.querystrings;\r\n    this.params = options;\r\n    // æ³¨åæ ç­¾é¡µåæ¢äºä»¶\r\n    this.runtimeFrameworkService.addEventListener(TAB_EVENT.onTabSwitched, (e) => this.handleTabSwitchEvent(e), options);\r\n    // æ³¨åæ ç­¾é¡µå³é­åäºä»¶\r\n    this.runtimeFrameworkService.addEventListener(TAB_EVENT.onTabClosed, (e) => this.handleTabClosedEvent(e), options);\r\n    // æ³¨åæ ç­¾é¡µå³é­åäºä»¶\r\n    this.runtimeFrameworkService.addEventListener(TAB_EVENT.onTabClosing, (e) => this.handleTabClosingEvent(e), options);\r\n  }\r\n  /**\r\n   * å¤çæ ç­¾é¡µåæ¢äºä»¶\r\n   */\r\n  private handleTabSwitchEvent(e: any) {\r\n    if (!e) {\r\n      return;\r\n    }\r\n    // éä¸­çè¡¨åä¸ºç³»ç»è¡¨åï¼åªè½è¿åidï¼æ²¡ætabId\r\n    const eventTabId = e.tabId || e.id || null;\r\n    if (!eventTabId) {\r\n      return;\r\n    }\r\n    const options = this.params; // this.querystrings;\r\n    const tabId = options.tabId || options.funcId || options.appId;\r\n    const menuState = this.menuStateService.getMenuState(eventTabId);\r\n    if (!!tabId && tabId === eventTabId && !!menuState && menuState.length > 0) {\r\n      this.formReload();\r\n    }\r\n    this.fireTabSwitchEvent(e);\r\n  }\r\n  /**\r\n   * è§¦åtabåæ¢äºä»¶\r\n   * @param e e\r\n   */\r\n  private fireTabSwitchEvent(e: any) {\r\n    if (!this.onTabSwitchListeners || this.onTabSwitchListeners.size < 1) {\r\n      return;\r\n    }\r\n    this.onTabSwitchListeners.forEach((handle, key, map) => {\r\n      if (typeof handle === 'function') {\r\n        handle(e);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * æ ç­¾é¡µå³é­åäºä»¶\r\n   */\r\n  private handleTabClosingEvent(e: any) {\r\n    if (!e) {\r\n      return;\r\n    }\r\n    // è¦å³é­çè¡¨åä¸ºç³»ç»è¡¨åï¼åªè½è¿åidï¼æ²¡ætabId\r\n    const eventTabId = e.tabId || e.id || null;\r\n    const options = this.params; // this.querystrings;\r\n    const tabId = options.tabId || options.funcId || options.appId;\r\n    if (!!eventTabId && !!tabId && tabId === eventTabId) {\r\n      this.fireTabClosingEvent(e).subscribe((result) => {\r\n        if (result) {\r\n          setTimeout(() => this.removeMenuState(eventTabId), 500);\r\n          const formEventServices: Map<string, any> = window['formEventServices'];\r\n          if (formEventServices.has(eventTabId)) {\r\n            formEventServices.delete(eventTabId);\r\n            window['formEventServices'] = formEventServices;\r\n          }\r\n          if (!(e && e.hasOwnProperty('token'))) {\r\n            e = Object.assign({}, e, { token: options.formToken });\r\n          }\r\n          // TODO:ä¸åä¸»å¨éæ¯appContextï¼å¯è½å­å¨åå­æ³æ¼é®é¢\r\n          // if (this.frameContext && this.frameContext.appContext) {\r\n          //   this.frameContext.appContext.dispose();\r\n          // }\r\n          this.runtimeFrameworkService.closeMenu(e);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * è§¦åå³é­åäºä»¶\r\n   */\r\n  private fireTabClosingEvent(e: any): Observable<boolean> {\r\n    if (!this.onClosingListeners || this.onClosingListeners.size < 1) {\r\n      return of(true);\r\n    }\r\n    const listeners = this.onClosingListeners.values();\r\n    const result$ = from(listeners);\r\n    // ç¨æ·æç»\r\n    let userRejected = false;\r\n    return result$.pipe(\r\n      concatMap((handle) => {\r\n        if (userRejected) {\r\n          return EMPTY;\r\n        }\r\n        return handle(e).pipe(\r\n          take(1),\r\n          tap((result) => userRejected = !result),\r\n          switchMap((result) => of(result))\r\n        );\r\n      }),\r\n      every((result) => result)\r\n    );\r\n  }\r\n  /**\r\n   * æ ç­¾é¡µå³é­åäºä»¶\r\n   */\r\n  private handleTabClosedEvent(e: any) {\r\n    if (!e) {\r\n      return;\r\n    }\r\n    const options = this.params; // this.querystrings;\r\n    const tabId = options.tabId || options.funcId || options.appId;\r\n    const eventTabId = e.tabId || e.id || null;\r\n    if (tabId === eventTabId) {\r\n      return;\r\n    }\r\n    const menuState = this.menuStateService.getMenuState(tabId, eventTabId);\r\n    if (!!eventTabId && !!menuState && menuState.length > 0) {\r\n      this.removeMenuState(eventTabId);\r\n      this.formReload();\r\n    }\r\n    this.fireTabClosedEvent(e);\r\n  }\r\n  private removeMenuState(tabId: string) {\r\n    if (this['context']) {\r\n      this.menuStateService.removeMenu(tabId);\r\n    }\r\n  }\r\n  /**\r\n   * è§¦åå³é­åäºä»¶\r\n   * @param e event\r\n   */\r\n  private fireTabClosedEvent(e: any) {\r\n    if (!this.onClosedListeners || this.onClosedListeners.size < 1) {\r\n      return;\r\n    }\r\n    this.onClosedListeners.forEach((handle, key, map) => {\r\n      if (typeof handle === 'function') {\r\n        handle(e);\r\n      }\r\n    });\r\n  }\r\n  // #endregion\r\n  /**\r\n   * æ³¨åäºä»¶çå¬å¨\r\n   * @param eventType äºä»¶ç±»å onTabClosed\r\n   * @param handler å¤çå¨\r\n   */\r\n  public addEventListener(eventType: string, handler: (options: AppOptions) => any): string {\r\n    const key = UID.create();\r\n    if (eventType === TAB_EVENT.onTabClosed) {\r\n      this.onClosedListeners.set(key, handler);\r\n      return key;\r\n    } else if (eventType === TAB_EVENT.onTabClosing) {\r\n      this.onClosingListeners.set(key, handler);\r\n      return key;\r\n    } else if (eventType === TAB_EVENT.onTabSwitched) {\r\n      this.onTabSwitchListeners.set(key, handler);\r\n      return key;\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * ç§»é¤äºä»¶çå¬å¨\r\n   * @param eventType äºä»¶ç±»å\r\n   * @param key äºä»¶æ è¯\r\n   */\r\n  public removeEventListener(eventType: string, key: string) {\r\n    if (eventType === TAB_EVENT.onTabClosed) {\r\n      return this.onClosedListeners.delete(key);\r\n    } else if (eventType === TAB_EVENT.onTabClosing) {\r\n      return this.onClosingListeners.delete(key);\r\n    }\r\n    return false;\r\n  }\r\n  /**\r\n   * æ¸ç©ºäºä»¶çå¬å¨\r\n   * @param eventType äºä»¶ç±»å\r\n   */\r\n  public clearEventListener(eventType: string): void {\r\n    if (eventType === TAB_EVENT.onTabClosed) {\r\n      this.onClosedListeners.clear();\r\n    } else if (eventType === TAB_EVENT.onTabClosing) {\r\n      this.onClosingListeners.clear();\r\n    }\r\n  }\r\n  /**\r\n   * å·æ°ç»ä»¶æ°æ®\r\n   */\r\n  private formReload() {\r\n    try {\r\n      // tslint:disable-next-line: no-string-literal\r\n      this['context']['frameContext']['appContext']['refresh']();\r\n    } catch { }\r\n  }\r\n}\r\n","import { Injectable, InjectionToken, Inject, Optional } from '@angular/core';\r\nexport const FARRIS_FORM_COMPONENTS = new InjectionToken<{[key: string]: any}>('è¡¨åå¼¹åºçªå£æéèç»ä»¶åè¡¨');\r\n\r\n/**\r\n * è¡¨åæå¡\r\n * @scope FormModule\r\n */\r\n@Injectable()\r\nexport class FarrisFormService {\r\n\r\n    private controls: { [key: string]: any} = {};\r\n\r\n    constructor(@Optional()@Inject(FARRIS_FORM_COMPONENTS) initCtrls: any = {}) {\r\n      if (!initCtrls) {\r\n        initCtrls = {};\r\n      }\r\n      this.controls = { ...initCtrls };\r\n    }\r\n\r\n    append(key: string, cmpIns: any) {\r\n        this.controls[key] = cmpIns;\r\n    }\r\n\r\n    getControls(key: string) {\r\n        if (this.controls[key]) {\r\n            return this.controls[key];\r\n        } else {\r\n            console.warn(`æªæ¾å°Keyä¸º${key}çç»ä»¶ï¼`);\r\n            return null;\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * @Author: aalizzwell\r\n * @Date: 2019-08-02 15:31:34\r\n * @Last Modified by: aalizzwell\r\n * @Last Modified time: 2020-03-03 09:33:43\r\n */\r\nimport { Injectable, Optional, Injector, ComponentFactoryResolver, ReflectiveInjector } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { RuntimeFrameworkService } from './rtf-service';\r\nimport { AppOptions, AppType } from '@gsp-sys/rtf-common';\r\nimport { MenuStateService } from './menu-state.service';\r\nimport { NavigationEventService } from './navigation-event.service';\r\nimport { QuerystringService } from './querystring';\r\nimport { FrameContext, TranslateToken, Translate, FrameComponent } from '@farris/devkit';\r\nimport { FEPageModalService } from '@farris/extend-page-modal';\r\nimport lodash from 'lodash-es';\r\nimport { FarrisFormService } from './farris-form.service';\r\nimport { LanguageService } from './languag.service';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { EMPTY, Observable, of } from 'rxjs';\r\nimport { FormNotifyService } from './form-notify.service';\r\nimport { INSIDE_DIALOG_TOKEN, MODAL_REF } from './types';\r\nimport { BsModalRef } from '@farris/ui-modal';\r\ndeclare const System: any;\r\n// tslint:disable: no-string-literal max-line-length\r\nconst APP_CONTEXT_MANAGER = 'DEVKIT_APP_CONTEXT_MANAGER';\r\n/**\r\n * å¯¼èªæå¡\r\n * @scope FormModule\r\n */\r\n@Injectable()\r\nexport class NavigationService {\r\n\r\n  constructor(\r\n    private runtimeFrameworkService: RuntimeFrameworkService,\r\n    private menuStateService: MenuStateService,\r\n    private navigationEventService: NavigationEventService,\r\n    private querystringService: QuerystringService,\r\n    @Optional() private frameContext: FrameContext,\r\n    @Optional() private injector: Injector,\r\n    @Optional() private languageService: LanguageService\r\n    // @Optional() private pageModalService: FEPageModalService,\r\n    // @Optional() private farrisFormService: FarrisFormService,\r\n    // @Optional() private languageService: LanguageService\r\n  ) {\r\n    // appIdä¸åäºtabIdï¼æ¯æ¬¡è¡¨åå®ä¾åæ¶é½ä¼éæ°çæ\r\n    const appId = this.formAppContext && this.formAppContext.ApplicationId;\r\n    let tabId = this.querystrings.tabId || this.querystrings.funcId || this.querystrings.appId;\r\n    // å·²ç»ç¼è¯çè¡¨åï¼ä½¿ç¨appIdè®°å½hash\r\n    if (appId) {\r\n      const appContextManager = window[APP_CONTEXT_MANAGER] || new Map<string, any>();\r\n      if (appContextManager && !appContextManager.has(appId)) {\r\n        appContextManager.set(appId, { hash: window.location.hash });\r\n        window[APP_CONTEXT_MANAGER] = appContextManager;\r\n      }\r\n    }\r\n    if (tabId) {\r\n      const formEventServices: Map<string, any> = window['formEventServices'] || new Map<string, any>();\r\n      // tabIdãappIdé½å­å¨æ¶ï¼ä½¿ç¨appIdæ¿æ¢tabId\r\n      if (appId) {\r\n        tabId = appId;\r\n      }\r\n      if (formEventServices && formEventServices.has(tabId)) {\r\n        this.navigationEventService = formEventServices.get(tabId);\r\n      } else {\r\n        this.navigationEventService.registerEvent();\r\n        formEventServices.set(tabId, this.navigationEventService);\r\n        this.navigationEventService.frameContext = this.frameContext;\r\n        window['formEventServices'] = formEventServices;\r\n        this.registerDestroyEvent(tabId);\r\n      }\r\n    }\r\n    if (!languageService) {\r\n      this.languageService = new LanguageService();\r\n    }\r\n  }\r\n  public set context(context) {\r\n    this.navigationEventService['context'] = context;\r\n    this['commandContext'] = context;\r\n  }\r\n  /**\r\n   * è·åæ´ä¸ªè¡¨åçappcontextï¼é¤moduleä¸çappcontextï¼\r\n   */\r\n  private get formAppContext() {\r\n    if (this.frameContext) {\r\n      let appContext = this.frameContext.appContext;\r\n      // tslint:disable-next-line: max-line-length\r\n      while (appContext && appContext.parent && appContext.parent.injector && appContext.parent.injector.get(FrameContext, null) !== null) {\r\n        appContext = appContext.parent;\r\n      }\r\n      return appContext;\r\n    }\r\n    return null;\r\n  }\r\n  private get querystrings() {\r\n    let hash = window.location.hash;\r\n    const appId = this.formAppContext && this.formAppContext.ApplicationId;\r\n    if (appId) {\r\n      const appContextManager = window[APP_CONTEXT_MANAGER];\r\n      const appContext = appContextManager && appContextManager.get(appId);\r\n      hash = appContext && appContext.hash || hash;\r\n    }\r\n    const params = this.querystringService.parse(hash);\r\n    if (params) {\r\n      params.formToken = this.runtimeFrameworkService.formToken;\r\n    }\r\n    return params;\r\n  }\r\n  /**\r\n   * æç¤ºæå¡\r\n   */\r\n  private get formNotifyService() {\r\n    return this.injector && this.injector.get<FormNotifyService>(FormNotifyService, null);\r\n  }\r\n  /**\r\n   * æ³¨åéæ¯äºä»¶\r\n   * @param tabId\r\n   */\r\n  private registerDestroyEvent(tabId: string) {\r\n    if (this.frameContext && this.frameContext.destorySignal) {\r\n      this.frameContext.destorySignal.subscribe(() => {\r\n        this.navigationEventService = null;\r\n      });\r\n    }\r\n    if (this.frameContext && this.frameContext.appContext && this.frameContext.appContext.destorySignal) {\r\n      this.frameContext.appContext.destorySignal.subscribe(() => {\r\n        const formEventServices = window['formEventServices'] as Map<string, any>;\r\n        if (formEventServices) {\r\n          formEventServices.delete(tabId);\r\n        }\r\n        const appContextManager = window[APP_CONTEXT_MANAGER] as Map<string, any>;\r\n        if (appContextManager) {\r\n          appContextManager.delete(tabId);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  // #region æ¥å£\r\n\r\n  /**\r\n   * æå¼èå\r\n   * @param tabId æ ¹æ®TabIdå³å®æå¼æ°æ ç­¾é¡µæå®ä½ä¹åæå¼çæ ç­¾é¡µ\r\n   * @param funcId èåId\r\n   * @param params åæ°\r\n   * @param reload æ¯å¦éæ°å·æ°\r\n   * @param enableRefresh å¯ç¨æ°æ®å·æ°\r\n   * @param tabName tabæ é¢\r\n   * @param destructuring æ¯å¦è§£æåæ°\r\n   */\r\n  public openMenu(tabId: string, funcId: string, params: any, reload?: boolean, enableRefresh?: any, tabName?: string, destructuring?: any) {\r\n    if (!funcId && this.formNotifyService) {\r\n      this.formNotifyService.warning(this.languageService.appOrFuncIdRequired, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    if (tabName) {\r\n      tabName = this.translate(tabName);\r\n    }\r\n\r\n    let queryStringParams = this.buildParamMap(params);\r\n    destructuring = this.convertToBoolean(destructuring, false);\r\n    if (destructuring === true) {\r\n      queryStringParams = this.buildParam(params);\r\n    }\r\n    // const paramsMap = this.buildParamMap(params);\r\n    const currentTabId = this.querystrings.tabId || this.querystrings.funcId || this.querystrings.appId;\r\n    const options: AppOptions = {\r\n      tabId,\r\n      funcId,\r\n      appType: AppType.Menu,\r\n      queryStringParams: queryStringParams,\r\n      entityParams: queryStringParams,\r\n      appId: undefined,\r\n      appEntrance: undefined,\r\n      isReload: reload,\r\n      tabName: tabName || null\r\n    };\r\n    // å¯ç¨æ°æ®å·æ°åæ°ä¸ºtrueæèæ²¡æå®ä¹ï¼åæå·æ°å¤ç\r\n    // æ²¡æä¼ éè¯¥åæ°æè¯¥åæ°ä¸ºç©ºï¼åè®¤ä¸ºæç§ä¹åçé»è¾å¤çï¼é»è®¤å·æ°\r\n    // null false \"false\" \"true\" undefined\r\n    enableRefresh = this.convertToBoolean(enableRefresh, true);\r\n    if (enableRefresh === true) {\r\n      const frameworkTabId = tabId ? `${funcId}_${tabId}` : funcId;\r\n      this.menuStateService.addMenuState(currentTabId, frameworkTabId);\r\n    }\r\n    this.runtimeFrameworkService.openMenu(options);\r\n  }\r\n  /**\r\n   * æå¼èåï¼æµï¼\r\n   * @param tabId æ ¹æ®TabIdå³å®æå¼æ°æ ç­¾é¡µæå®ä½ä¹åæå¼çæ ç­¾é¡µ\r\n   * @param funcId èåId\r\n   * @param params åæ°\r\n   * @param reload æ¯å¦éæ°å·æ°\r\n   * @param enableRefresh å¯ç¨æ°æ®å·æ°\r\n   * @param destructuring è§£æåæ°\r\n   */\r\n  public openMenu$(tabId: string, funcId: string, params: any, reload?: boolean, enableRefresh?: any, tabName?: string, destructuring?: any) {\r\n    if (!funcId && this.formNotifyService) {\r\n      this.formNotifyService.warning(this.languageService.appOrFuncIdRequired, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    if (tabName) {\r\n      tabName = this.translate(tabName);\r\n    }\r\n    let queryStringParams = this.buildParamMap(params);\r\n    destructuring = this.convertToBoolean(destructuring, false);\r\n    if (destructuring === true) {\r\n      queryStringParams = this.buildParam(params);\r\n    }\r\n    // const paramsMap = this.buildParamMap(params);\r\n    const currentTabId = this.querystrings.tabId || this.querystrings.funcId || this.querystrings.appId;\r\n    const options: AppOptions = {\r\n      tabId,\r\n      funcId,\r\n      appType: AppType.Menu,\r\n      queryStringParams: queryStringParams,\r\n      entityParams: queryStringParams,\r\n      appId: undefined,\r\n      appEntrance: undefined,\r\n      isReload: reload,\r\n      tabName: tabName || null\r\n    };\r\n    // å¯ç¨æ°æ®å·æ°åæ°ä¸ºtrueæèæ²¡æå®ä¹ï¼åæå·æ°å¤ç\r\n    enableRefresh = this.convertToBoolean(enableRefresh, true);\r\n    if (enableRefresh === true) {\r\n      const frameworkTabId = tabId ? `${funcId}_${tabId}` : funcId;\r\n      this.menuStateService.addMenuState(currentTabId, frameworkTabId);\r\n    }\r\n    return this.runtimeFrameworkService.openMenu$(options);\r\n  }\r\n  /**\r\n   * æå¼èå(å¸¦ç»´åº¦)\r\n   * @param tabId æ ¹æ®TabIdå³å®æå¼æ°æ ç­¾é¡µæå®ä½ä¹åæå¼çæ ç­¾é¡µ\r\n   * @param funcId èåId\r\n   * @param params åæ°\r\n   * @param reload æ¯å¦éæ°å·æ°\r\n   * @param enableRefresh å¯ç¨æ°æ®å·æ°\r\n   * @param dim1 dim1\r\n   * @param dim2 dim2\r\n   * @param destructuring è§£æåæ°\r\n   */\r\n  public openMenuWithDimension(tabId: string, funcId: string, params: any, enableRefresh?: any, dim1?: any, dim2?: any, tabName?: string, metadataId?: string, destructuring?: any) {\r\n    if (!funcId && this.formNotifyService) {\r\n      this.formNotifyService.warning(this.languageService.appOrFuncIdRequired, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    if (tabName) {\r\n      tabName = this.translate(tabName);\r\n    }\r\n    if (metadataId === undefined || metadataId === null) {\r\n      metadataId = '';\r\n    }\r\n    let queryStringParams = this.buildParamMap(params);\r\n    destructuring = this.convertToBoolean(destructuring, false);\r\n    if (destructuring === true) {\r\n      queryStringParams = this.buildParam(params);\r\n    }\r\n\r\n    // const paramsMap = this.buildParamMap(params);\r\n    queryStringParams.set('dim1', dim1 ? dim1 : 'public');\r\n    queryStringParams.set('dim2', dim2 ? dim2 : 'public');\r\n    queryStringParams.set('metadataId', metadataId);\r\n    queryStringParams.set('isRtc', '1');\r\n    queryStringParams.set('isRootMetadata', 'true');\r\n    const currentTabId = this.querystrings.tabId || this.querystrings.funcId || this.querystrings.appId;\r\n    const options: AppOptions = {\r\n      tabId,\r\n      funcId,\r\n      appType: AppType.Menu,\r\n      queryStringParams: queryStringParams,\r\n      entityParams: queryStringParams,\r\n      appId: undefined,\r\n      appEntrance: undefined,\r\n      isReload: false,\r\n      tabName: tabName || null\r\n    };\r\n    // å¯ç¨æ°æ®å·æ°åæ°ä¸ºtrueæèæ²¡æå®ä¹ï¼åæå·æ°å¤ç\r\n    // æ²¡æä¼ éè¯¥åæ°æè¯¥åæ°ä¸ºç©ºï¼åè®¤ä¸ºæç§ä¹åçé»è¾å¤çï¼é»è®¤å·æ°\r\n    // null false \"false\" \"true\" undefined\r\n    enableRefresh = this.convertToBoolean(enableRefresh, true);\r\n    if (enableRefresh === true) {\r\n      const frameworkTabId = tabId ? `${funcId}_${tabId}` : funcId;\r\n      this.menuStateService.addMenuState(currentTabId, frameworkTabId);\r\n    }\r\n    this.runtimeFrameworkService.openMenu(options);\r\n  }\r\n  /**\r\n   * æå¼åºç¨\r\n   * @param tabId tabId æ ¹æ®TabIdå³å®æå¼æ°æ ç­¾é¡µæå®ä½ä¹åæå¼çæ ç­¾é¡µ\r\n   * @param appId åºç¨Id\r\n   * @param appEntrance åºç¨å¥å£\r\n   * @param params åæ°\r\n   * @param reload æ¯å¦éæ°å·æ°\r\n   * @param tabName tabæ é¢\r\n   * @param enableRefresh å¯ç¨æ°æ®å·æ°\r\n   * @param destructuring è§£æåæ°\r\n   */\r\n\r\n  public openApp(tabId: string, appId: string, appEntrance: string, params: any, reload?: boolean, tabName?: string, enableRefresh?: any, destructuring?: any) {\r\n    if (!appId && this.formNotifyService) {\r\n      this.formNotifyService.warning(this.languageService.appOrFuncIdRequired, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    if (tabName) {\r\n      tabName = this.translate(tabName);\r\n    }\r\n    let queryStringParams = this.buildParamMap(params);\r\n    destructuring = this.convertToBoolean(destructuring, false);\r\n    if (destructuring === true) {\r\n      queryStringParams = this.buildParam(params);\r\n    }\r\n    // const paramsMap = this.buildParamMap(params);\r\n    const currentTabId = this.querystrings.tabId || this.querystrings.funcId || this.querystrings.appId;\r\n    const options: AppOptions = {\r\n      tabId,\r\n      appId,\r\n      appEntrance,\r\n      funcId: undefined,\r\n      appType: AppType.App,\r\n      queryStringParams: queryStringParams,\r\n      entityParams: queryStringParams,\r\n      isReload: reload,\r\n      tabName: tabName || null\r\n    };\r\n    enableRefresh = this.convertToBoolean(enableRefresh, true);\r\n    if (enableRefresh === true) {\r\n      const frameworkTabId = tabId ? `${appId}_${appEntrance}_${tabId}` : `${appId}_${appEntrance}`;\r\n      this.menuStateService.addMenuState(currentTabId, frameworkTabId);\r\n    }\r\n    this.runtimeFrameworkService.openMenu(options);\r\n  }\r\n  /**\r\n   * æå¼åºç¨(æµå¼)\r\n   * @param tabId tabId æ ¹æ®TabIdå³å®æå¼æ°æ ç­¾é¡µæå®ä½ä¹åæå¼çæ ç­¾é¡µ\r\n   * @param appId åºç¨Id\r\n   * @param appEntrance åºç¨å¥å£\r\n   * @param params åæ°\r\n   * @param reload æ¯å¦éæ°å·æ°\r\n   * @param tabName tabæ é¢\r\n   * @param enableRefresh å¯ç¨æ°æ®å·æ°\r\n   * @param destructuring è§£æåæ°\r\n   */\r\n  public openApp$(tabId: string, appId: string, appEntrance: string, params: any, reload?: boolean, tabName?: string, enableRefresh?: any, destructuring?: any) {\r\n    if (!appId && this.formNotifyService) {\r\n      this.formNotifyService.warning(this.languageService.appOrFuncIdRequired, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    if (tabName) {\r\n      tabName = this.translate(tabName);\r\n    }\r\n    let queryStringParams = this.buildParamMap(params);\r\n    destructuring = this.convertToBoolean(destructuring, false);\r\n    if (destructuring === true) {\r\n      queryStringParams = this.buildParam(params);\r\n    }\r\n    // const paramsMap = this.buildParamMap(params);\r\n    const currentTabId = this.querystrings.tabId || this.querystrings.funcId || this.querystrings.appId;\r\n    const options: AppOptions = {\r\n      tabId,\r\n      appId,\r\n      appEntrance,\r\n      funcId: undefined,\r\n      appType: AppType.App,\r\n      queryStringParams: queryStringParams,\r\n      entityParams: queryStringParams,\r\n      isReload: reload,\r\n      tabName: tabName || null\r\n    };\r\n    enableRefresh = this.convertToBoolean(enableRefresh, true);\r\n    if (enableRefresh === true) {\r\n      const frameworkTabId = tabId ? `${appId}_${appEntrance}_${tabId}` : `${appId}_${appEntrance}`;\r\n      this.menuStateService.addMenuState(currentTabId, frameworkTabId);\r\n    }\r\n    return this.runtimeFrameworkService.openMenu$(options);\r\n  }\r\n  /**\r\n   * å³é­\r\n   * @param onCloseing å³é­åäºä»¶å¤çå¨\r\n   */\r\n  public close() {\r\n    const options = this.querystrings;\r\n    const { isDialogComponent: isInDialog, rootComponent } = this.findDialog();\r\n    if (isInDialog) {\r\n      const modalRefFactory = this.get(rootComponent, 'dialogRef');\r\n      let modalRef = null;\r\n      if (typeof modalRefFactory === 'function') {\r\n        const refs = modalRefFactory();\r\n        modalRef = refs && refs.modalRef;\r\n      } else {\r\n        modalRef = modalRefFactory;\r\n      }\r\n      modalRef && modalRef['close']();\r\n      return;\r\n    }\r\n    options.token = options.formToken;\r\n    this.runtimeFrameworkService.beforeCloseMenu(options);\r\n  }\r\n  /**\r\n   * å¼ºå¶å³é­\r\n   */\r\n  public destory() {\r\n    const options = this.querystrings;\r\n    options.token = options.formToken;\r\n    this.runtimeFrameworkService.closeMenu(options);\r\n  }\r\n  /**\r\n   *\r\n   * @param params params\r\n   * @deprecated å¾åºå¼ï¼ä¸buildParamMapéå¤\r\n   */\r\n  private parseParams(params: any) {\r\n    if (typeof params === 'undefined' || params === null || (typeof params === 'string' && params.length < 1)) {\r\n      params = {};\r\n    }\r\n    const paramMap = new Map<string, any>();\r\n    if (typeof params === 'object') {\r\n      params = JSON.stringify(params);\r\n    }\r\n    params = window['encodeURIComponent'](params);\r\n    paramMap.set('WEB_FORM_ROUTE_PARAMS', params);\r\n    return paramMap;\r\n  }\r\n  /**\r\n   * æ³¨åäºä»¶çå¬å¨\r\n   * @param eventType äºä»¶ç±»å onTabClosed\r\n   * @param handler å¤çå¨\r\n   * @returns string è¿åäºä»¶æ è¯\r\n   */\r\n  public addEventListener(eventType: string, handler: (options: AppOptions) => any): string {\r\n    return this.navigationEventService.addEventListener(eventType, handler);\r\n  }\r\n  /**\r\n   * ç§»é¤äºä»¶çå¬å¨\r\n   * @param eventType äºä»¶ç±»å onTabClosed | onTabCloseing\r\n   * @param key äºä»¶æ è¯\r\n   */\r\n  public removeEventListener(eventType: string, key: string): boolean {\r\n    return this.navigationEventService.removeEventListener(eventType, key);\r\n  }\r\n  /**\r\n   * æ¸ç©ºäºä»¶çå¬å¨\r\n   * @param eventType äºä»¶ç±»å\r\n   */\r\n  public clearEventListener(eventType: string): void {\r\n    this.navigationEventService.clearEventListener(eventType);\r\n  }\r\n  /**\r\n   * ä»¥å¼¹æ¡ãä¾§è¾¹æ ææ°æ ç­¾é¡µæ¹å¼æå¼è¡¨å\r\n   * @param mode æå¼æ¹å¼ï¼æ¯æ`modal`å¼¹çªã`sidebar`ä¾§è¾¹æ ã`tab`æ°æ ç­¾é¡µ\r\n   * @param modalId å¼¹çªidï¼å¦æmode=`modal`ä¸æ²¡æurlï¼\r\n   * @param configs å¼¹çªéç½®\r\n   * @param url è¿ç«¯è¡¨åurl\r\n   * @param tabId æ ç­¾é¡µidï¼modal=tabæ¶å¿å¡«\r\n   * @param tabType æ ç­¾é¡µç±»åï¼`menu` æ`app`\r\n   * @param funcOrAppId èåæåºç¨id\r\n   * @param appEntrance åºç¨å¥å£\r\n   * @param params åæ°\r\n   * @param tabName æ°æ ç­¾é¡µåç§°\r\n   * @param enableRefresh å¯ç¨å¯å¨å·æ°\r\n   * @param destructuring æ¯å¦è§£æ\r\n   */\r\n  public open(mode: 'modal' | 'sidebar' | 'tab', modalId?: string, url?: string, configs?: any, tabId?: string, tabType?: 'menu' | 'app', funcOrAppId?: string, appEntrance?: string, params?: any, tabName?: string, enableRefresh?: any, destructuring?: any) {\r\n    const pageModalService = this.injector.get<FEPageModalService>(FEPageModalService, null);\r\n    if (!pageModalService) {\r\n      throw new Error('get FEPageModalService failed.');\r\n    }\r\n    // æ ¡éªåæ°æ¯å¦åæ³\r\n    if (!mode) {\r\n      throw new Error('[NavigationService]->open,modeåæ°ä¸è½ä¸ºç©ºï¼');\r\n    }\r\n    if (mode === 'modal' || mode === 'sidebar') {\r\n      if (!modalId && !url) {\r\n        throw new Error('å¼¹çªåä¾§è¾¹æ æ¨¡å¼æ¶å¼¹çªå®¹å¨idåè¡¨åè·¯å¾ä¸è½åæ¶ä¸ºç©ºï¼');\r\n      }\r\n      if (modalId && url) {\r\n        throw new Error('å¼¹çªåä¾§è¾¹æ æ¨¡å¼æ¶å¼¹çªå®¹å¨idåè¡¨åè·¯å¾ä¸è½åæ¶å­å¨ï¼');\r\n      }\r\n      const uiStateConfig = this.getObjectTypeConfig(params);\r\n      const modalConfig = this.buildConfigs(configs);\r\n      if (mode === 'sidebar') {\r\n        modalConfig.dialogType = mode;\r\n      }\r\n      let pageModalRef = null;\r\n      if (modalId) {\r\n        const farrisFormService = this.injector.get<FarrisFormService>(FarrisFormService, null);\r\n        if (!farrisFormService) {\r\n          return;\r\n        }\r\n        const componentType = farrisFormService.getControls(modalId);\r\n        const componentRef = this.createComponentRef(componentType, uiStateConfig);\r\n        pageModalRef = pageModalService.show(componentRef, modalConfig);\r\n      } else if (url) {\r\n        pageModalRef = pageModalService.showByUrl(url, modalConfig);\r\n      }\r\n      if (pageModalRef && !!pageModalRef.content) {\r\n        pageModalRef.content.isDialogRootComponent = true;\r\n        pageModalRef.content.dialogRef = pageModalRef;\r\n        const header = pageModalRef.dialog && pageModalRef.dialog.instance && pageModalRef.dialog.instance.el && pageModalRef.dialog.instance.el.nativeElement && pageModalRef.dialog.instance.el.nativeElement.querySelector(\".f-page-header\");\r\n        if (header && pageModalRef.dialog.instance.draggbar) {\r\n          pageModalRef.dialog.instance.draggbar.handle = header;\r\n          header.style.cursor = 'move';\r\n        }\r\n      }\r\n    } else if (mode === 'tab') {\r\n      if (!tabId || !tabType || !funcOrAppId) {\r\n        if (this.formNotifyService) {\r\n          this.formNotifyService.warning(this.languageService.appOrFuncIdRequired, { hideTitle: true });\r\n        }\r\n        throw new Error('æ°æ ç­¾æ¨¡å¼æ¶æ ç­¾é¡µidãæ ç­¾ç±»åãèåæåºç¨idåä¸è½ä¸ºç©ºï¼');\r\n      }\r\n      if (tabType === 'app' && !appEntrance) {\r\n        throw new Error('ä»¥åºç¨æ¹å¼æå¼æ¶å¥å£åºç¨ä¸è½ä¸ºç©ºï¼');\r\n      }\r\n      if (tabType == 'app') {\r\n        this.openApp(tabId, funcOrAppId, appEntrance, params, false, tabName, enableRefresh, destructuring);\r\n      } else if (tabType === 'menu') {\r\n        this.openMenu(tabId, funcOrAppId, params, false, enableRefresh, tabName, destructuring);\r\n      }\r\n    } else {\r\n      throw new Error('ä¸æ¯æçæ¨¡å¼ï¼');\r\n    }\r\n    // this.pageModalService.\r\n  }\r\n  /**\r\n   * in app navigate\r\n   * @param commands commands\r\n   */\r\n  // public navigate(commands: any[]);\r\n  /**\r\n   * in app navigate\r\n   * @param commands commands\r\n   * @param options options\r\n   * @description options:{ relativeTo: this.activatedRoute, queryParams:{a:1,b:2},etc:...}\r\n   */\r\n  public navigate(commands: any[], options?: any): Promise<boolean> {\r\n    const router = this.injector && this.injector.get<Router>(Router, null);\r\n    const activatedRoute = this.injector && this.injector.get<ActivatedRoute>(ActivatedRoute, null);\r\n    const queryParams = lodash.merge({}, this.querystrings, options && options.queryParams || {});\r\n    if (options && options.hasOwnProperty('queryParams')) {\r\n      delete options.queryParams;\r\n    }\r\n    const extras = lodash.merge({ skipLocationChange: false, relativeTo: activatedRoute, queryParams }, options || {});\r\n    if (router) {\r\n      return router.navigate(commands, extras);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  // #endregion\r\n\r\n  // #region ç§ææ¹æ³\r\n\r\n  /**\r\n   * å°è£è·¯ç±åæ°\r\n   * @param params åæ°\r\n   * @param options éç½®åæ°\r\n   */\r\n  private buildParamMap(params: any, options?: any): Map<string, string> {\r\n    if (typeof params === 'undefined' || params === null || (typeof params === 'string' && params.length < 1)) {\r\n      params = {};\r\n    }\r\n    const paramMap = new Map<string, any>();\r\n    if (options && Object.keys(options).length > 0) {\r\n      if (typeof params !== 'object') {\r\n        params = JSON.parse(params);\r\n      }\r\n      params = lodash.merge(params, options);\r\n    }\r\n    if (typeof params === 'object') {\r\n      params = JSON.stringify(params);\r\n    }\r\n    const currentTabId = this.querystrings.tabId || this.querystrings.funcId || this.querystrings.appId;\r\n    params = window['encodeURIComponent'](params);\r\n    paramMap.set('WEB_FORM_ROUTE_PARAMS', params);\r\n    paramMap.set('WEB_FORM_ROUTER_PARENT_ID', currentTabId);\r\n    return paramMap;\r\n  }\r\n  private buildParam(params, options?: any): Map<string, string> {\r\n    if (typeof params === 'undefined' || params === null || (typeof params === 'string' && params.length < 1)) {\r\n      params = {};\r\n    }\r\n    const paramMap = new Map<string, any>();\r\n    if (options && Object.keys(options).length > 0) {\r\n      if (typeof params !== 'object') {\r\n        params = JSON.parse(params);\r\n      }\r\n      params = lodash.merge(params, options);\r\n    }\r\n    if (typeof params !== 'object') {\r\n      params = JSON.parse(params);\r\n    }\r\n    Object.keys(params).forEach(key => {\r\n      paramMap.set(key, params[key]);\r\n    });\r\n\r\n    const currentTabId = this.querystrings.tabId || this.querystrings.funcId || this.querystrings.appId;\r\n    params = window['encodeURIComponent'](JSON.stringify(params));\r\n    paramMap.set('WEB_FORM_ROUTE_PARAMS', params);\r\n    paramMap.set('WEB_FORM_ROUTER_PARENT_ID', currentTabId);\r\n    return paramMap;\r\n  }\r\n  /**\r\n   * æ¥æ¾å¼¹çªç»ä»¶\r\n   */\r\n  private findDialog() {\r\n    let frameContext = this.get(this, 'commandContext.frameContext');\r\n    let isDialogComponent = this.get(frameContext, 'frameComponent.isDialogRootComponent', false);\r\n    let rootComponent = null;\r\n    let parentFrameContext = this.get(frameContext, 'parent');\r\n    while (parentFrameContext != null && !isDialogComponent) {\r\n      frameContext = this.get(frameContext, 'parent');\r\n      parentFrameContext = this.get(parentFrameContext, 'parent');\r\n      isDialogComponent = this.get(frameContext, 'frameComponent.isDialogRootComponent', false);\r\n    }\r\n    rootComponent = this.get(frameContext, 'frameComponent');\r\n    if (!isDialogComponent) {\r\n      isDialogComponent = this.frameContext.injector.get<boolean>(INSIDE_DIALOG_TOKEN, false);\r\n      if (isDialogComponent) {\r\n        const modalRef = this.frameContext.injector.get<BsModalRef>(MODAL_REF, null);\r\n        rootComponent = { dialogRef: modalRef };\r\n      }\r\n    }\r\n    return { isDialogComponent, rootComponent };\r\n  }\r\n\r\n  /**\r\n   * loadsh get\r\n   * @param object å¯¹è±¡\r\n   * @param path è·¯å¾\r\n   * @param defaultVal é»è®¤å¼\r\n   */\r\n  private get(object: any, path: Array<string> | string, defaultVal: any = null) {\r\n    const PATH = Array.isArray(path)\r\n      ? path\r\n      : path.split('.').filter(i => i.length);\r\n    if (!PATH.length) {\r\n      return object === undefined ? defaultVal : object;\r\n    }\r\n\r\n    if (object === null || object === undefined || typeof (object[PATH[0]]) === 'undefined') {\r\n      return defaultVal;\r\n    }\r\n\r\n    return this.get(object[PATH.shift()], PATH, defaultVal);\r\n  }\r\n  private convertToBoolean(value: any, defaultVal: boolean = false) {\r\n    if (typeof value === 'undefined' || value === null) {\r\n      value = defaultVal;\r\n    }\r\n    if (typeof value === 'string') {\r\n      value = value || String(defaultVal);\r\n      value = value === 'true' ? true : false;\r\n    }\r\n    return value;\r\n  }\r\n  /**\r\n   * ç¿»è¯èµæºé¡¹\r\n   * @param key èµæºé¡¹key\r\n   */\r\n  private translate(key: string) {\r\n    const translateService = this.injector && this.injector.get<Translate>(TranslateToken, null) || null;\r\n    if (translateService && key && key.startsWith('{{') && key.endsWith('}}')) {\r\n      key = key.replace('{{', '').replace('}}', '').trim();\r\n      return translateService.transform(key, null);\r\n    }\r\n    return key;\r\n  }\r\n  // #endregion\r\n\r\n  //#region å¼¹çªç¸å³æ¹æ³\r\n  private buildConfigs(config: any): { [prop: string]: any } {\r\n    let languageService = this.injector.get<LanguageService>(LanguageService, null);\r\n    if (!languageService) {\r\n      languageService = LanguageService.getInstance();\r\n    }\r\n\r\n    const defaultConfigs: any = {\r\n      title: languageService && languageService.defaultDialogTitle || '',\r\n      width: 800,\r\n      height: 500,\r\n      showButtons: false\r\n    };\r\n    const objectTypeConfig = this.getObjectTypeConfig(config);\r\n    const configs = Object.assign(defaultConfigs, objectTypeConfig);\r\n    const onClosingHandler = configs.beforeClose;\r\n    const refresh = configs['refresh'] || {};\r\n    const refreshCommandName = refresh && refresh.commandName || null;\r\n    const refreshFrameId = refresh && refresh.frameId || null;\r\n    // tslint:disable: no-string-literal\r\n    const cancelChanges = configs['cancelChanges'] || false;\r\n    configs.beforeClose = (ref) => {\r\n      if (!!onClosingHandler && typeof onClosingHandler === 'function') {\r\n        return onClosingHandler(ref).pipe(\r\n          switchMap(result => {\r\n            if (result) {\r\n              if (cancelChanges) {\r\n                return this.cancelChanges(ref).pipe(\r\n                  switchMap(() => this.refreshForm(refreshCommandName, refreshFrameId))\r\n                );\r\n              }\r\n            }\r\n            return of(result);\r\n          })\r\n        );\r\n      } else {\r\n        if (cancelChanges) {\r\n          return this.cancelChanges(ref).pipe(\r\n            switchMap(() => this.refreshForm(refreshCommandName, refreshFrameId))\r\n          );\r\n        } else {\r\n          return of(true);\r\n        }\r\n      }\r\n\r\n    };\r\n    return configs;\r\n  }\r\n  private getObjectTypeConfig(config: any) {\r\n    let objectTypeConfig: any\r\n    if (typeof config === 'undefined') {\r\n      config = {};\r\n    }\r\n    if (typeof config === 'string') {\r\n      if (config.length) {\r\n        try {\r\n          objectTypeConfig = JSON.parse(config);\r\n        } catch {\r\n          throw new Error(config + 'ä¸æ¯åæ³çjsonå­ç¬¦ä¸²');\r\n        }\r\n      } else {\r\n        objectTypeConfig = {};\r\n      }\r\n    } else if (typeof config === 'object') {\r\n      objectTypeConfig = Object.assign({}, config);\r\n    } else {\r\n      throw new Error('å¡«åå¯¹è±¡æ ¼å¼æjsonå­ç¬¦ä¸²');\r\n    }\r\n    return objectTypeConfig;\r\n  }\r\n  /**\r\n   * åæ¶æå¡å¨åæ´é\r\n   */\r\n  private cancelChanges(ref: any): Observable<boolean> {\r\n    if (ref && ref.modalRef && ref.modalRef.content) {\r\n      const component: FrameComponent = ref.modalRef.content as FrameComponent;\r\n      if (component && component.context) {\r\n        const repository = component.context.repository || null;\r\n        if (repository) {\r\n          return repository.cancelChanges().pipe(switchMap(() => of(true)));\r\n        }\r\n      }\r\n    }\r\n    return of(true);\r\n  }\r\n  private refreshForm(refreshCommandName: string, refreshFrameId: string): Observable<any> {\r\n    if (refreshCommandName && refreshFrameId) {\r\n      const frameContext = this.frameContext.appContext.frameContextManager.getFrameContextById(refreshFrameId);\r\n      if (frameContext) {\r\n        const viewModel = frameContext.viewModel;\r\n        return viewModel[refreshCommandName]().pipe(\r\n          map(() => true)\r\n        );\r\n      }\r\n    }\r\n    return of(true);\r\n  }\r\n  private createComponentRef(componentType: any, uiStateObject: any) {\r\n    let componentRef: any;\r\n    const frameContext = this.getFrameContext();\r\n    const componentFactoryResolver = this.getComponentFactoryResolver();\r\n    if (frameContext && componentFactoryResolver) {\r\n      const contentCmptFactory = componentFactoryResolver.resolveComponentFactory(componentType);\r\n      const modalContentInjector = ReflectiveInjector.resolveAndCreate([], frameContext.injector);\r\n      componentRef = contentCmptFactory.create(modalContentInjector);\r\n      if (componentRef && componentRef.instance && componentRef.instance.viewModel && componentRef.instance.viewModel.uiState) {\r\n        if (typeof uiStateObject === 'object' && Object.keys(uiStateObject).length) {\r\n          Object.keys(uiStateObject).forEach(item => {\r\n            componentRef.instance.viewModel.uiState.setPropertyValue(item, uiStateObject[item]);\r\n          });\r\n        }\r\n        // éå isDialogåæ°\r\n        componentRef.instance.viewModel.uiState.setPropertyValue('DEVKIT_DIALOG', true);\r\n      }\r\n    }\r\n    return componentRef;\r\n  }\r\n  /**\r\n   * å¼å®¹æ§å¼¹çªï¼è·åframeContext\r\n   */\r\n  private getFrameContext() {\r\n    if (this.frameContext) {\r\n      return this.frameContext\r\n    }\r\n    if (this['context'] && this['context']['frameContext']) {\r\n      return this['context']['frameContext'];\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * å¼å®¹æ§å¼¹çªï¼è·åComponentFactoryResolver\r\n   */\r\n  private getComponentFactoryResolver() {\r\n    const frameContext = this.getFrameContext();\r\n    let componentFactoryResolver: any;\r\n    if (frameContext) {\r\n      componentFactoryResolver = frameContext.injector.get(ComponentFactoryResolver);\r\n    }\r\n    return componentFactoryResolver;\r\n  }\r\n  //#endregion\r\n}\r\n","import { FrameContext } from '@farris/devkit';\r\nimport { AppParamUtil } from './app-param.util';\r\n\r\nconst IS_ADD = 'IS_ADD';\r\nconst LAST_MODIFIED_ID = 'LAST_MODIFIED_ID';\r\n\r\n/**\r\n * è¡¨åç¶æå·¥å·ç±»\r\n * @internal\r\n */\r\nclass EditStateUtil {\r\n\r\n    /**\r\n     * è·åå½åè¡id\r\n     */\r\n    public static getLastModifiedId(frameContext: FrameContext): string {\r\n        // const lastModifiedId = AppParamUtil.get(frameContext, LAST_MODIFIED_ID);\r\n        const virtualRootFrameContext = frameContext.getVirtualRootFrameContext();\r\n        let lastModifiedId = null;\r\n        if (virtualRootFrameContext) {\r\n            lastModifiedId = virtualRootFrameContext.getParam(LAST_MODIFIED_ID);\r\n            return lastModifiedId ? lastModifiedId : null;\r\n        }\r\n        return lastModifiedId;\r\n    }\r\n\r\n    /**\r\n     * è®¾ç½®æåä¿®æ¹çid\r\n     */\r\n    public static setLastModifiedId(frameContext: FrameContext, lastModifiedId: string): void {\r\n        // AppParamUtil.set(frameContext, LAST_MODIFIED_ID, lastModifiedId);\r\n        const virtualRootFrameContext = frameContext.getVirtualRootFrameContext();\r\n        if (virtualRootFrameContext) {\r\n            virtualRootFrameContext.setParam(LAST_MODIFIED_ID, lastModifiedId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * è·åæ°å¢ç¶æ\r\n     */\r\n    public static getAddState(frameContext: FrameContext, ): boolean {\r\n        // return AppParamUtil.get(frameContext, IS_ADD);\r\n        const virtualRootFrameContext = frameContext.getVirtualRootFrameContext();\r\n        if (virtualRootFrameContext) {\r\n            return virtualRootFrameContext.getParam(IS_ADD);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * è®¾ç½®æ°å¢ç¶æ\r\n     */\r\n    public static setAddState(frameContext: FrameContext, lastModifiedId: string): void {\r\n        // AppParamUtil.set(frameContext, IS_ADD, true);\r\n        const virtualRootFrameContext = frameContext.getVirtualRootFrameContext();\r\n        if (virtualRootFrameContext) {\r\n            virtualRootFrameContext.setParam(IS_ADD, true);\r\n        }\r\n        this.setLastModifiedId(frameContext, lastModifiedId);\r\n    }\r\n\r\n    /**\r\n     * åæ¶æ°å¢ç¶æ\r\n     */\r\n    public static cancelAddState(frameContext: FrameContext) {\r\n        // AppParamUtil.set(frameContext, IS_ADD, false);\r\n        const virtualRootFrameContext = frameContext.getVirtualRootFrameContext();\r\n        if (virtualRootFrameContext) {\r\n            virtualRootFrameContext.setParam(IS_ADD, false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * è®¾ç½®ç¼è¾ç¶æ\r\n     */\r\n    public static setEditState(frameContext: FrameContext, id: string) {\r\n        // AppParamUtil.set(frameContext, IS_ADD, false);\r\n        const virtualRootFrameContext = frameContext.getVirtualRootFrameContext();\r\n        if (virtualRootFrameContext) {\r\n            virtualRootFrameContext.setParam(IS_ADD, false);\r\n        }\r\n        this.setLastModifiedId(frameContext, id);\r\n    }\r\n}\r\n\r\nexport { EditStateUtil };\r\n","import { FormNotifyService } from './form-notify.service';\r\n\r\nclass FormNotifyStrategyService {\r\n  /**\r\n   * æ¶æ¯æç¤º\r\n   * @param formNotifyService formNotifyService\r\n   * @param content content\r\n   */\r\n  public static info(formNotifyService: FormNotifyService, content: string) {\r\n    const search = window.location.hash;\r\n    const { odocDisableNotification = '' } = FormNotifyStrategyService.querystring(search);\r\n    if (odocDisableNotification && odocDisableNotification.toLowerCase() === 'true') {\r\n      return;\r\n    }\r\n    formNotifyService.info(content, { hideTitle: true });\r\n  }\r\n  /**\r\n   * æåæç¤º\r\n   * @param formNotifyService formNotifyService\r\n   * @param content content\r\n   */\r\n  public static success(formNotifyService: FormNotifyService, content: string) {\r\n    const search = window.location.hash;\r\n    const { odocDisableNotification = '' } = FormNotifyStrategyService.querystring(search);\r\n    if (odocDisableNotification && odocDisableNotification.toLowerCase() === 'true') {\r\n      return;\r\n    }\r\n    formNotifyService.success(content, { hideTitle: true });\r\n  }\r\n  private static querystring(querystring: string): any {\r\n    const urlSearchParams = new URLSearchParams(querystring);\r\n    const result = {};\r\n    urlSearchParams.forEach((value: string, key: string) => {\r\n      result[key] = value;\r\n    });\r\n    return result;\r\n  }\r\n}\r\nexport { FormNotifyStrategyService };\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, take } from 'rxjs/operators';\r\nimport { AppContext, ViewModel, CommandContext, Entity, FrameContext } from '@farris/devkit';\r\nimport { BefRepository } from '@farris/bef';\r\n\r\n/**\r\n * å½ä»¤æå¡\r\n * @scope FrameConmponent\r\n */\r\n@Injectable()\r\nclass CommandService {\r\n\r\n  /**\r\n   * åé¨cotnext\r\n   */\r\n  private innerContext: CommandContext;\r\n\r\n  /**\r\n   * contextåå¼æ¹æ³\r\n   */\r\n  public get context(): CommandContext {\r\n    return this.innerContext;\r\n  }\r\n\r\n  /**\r\n   * contextè®¾å¼æ¹æ³\r\n   */\r\n  public set context(context: CommandContext) {\r\n    this.innerContext = context;\r\n  }\r\n\r\n  constructor(\r\n    private viewModel: ViewModel,\r\n    private appContext: AppContext\r\n  ) { }\r\n\r\n  /**\r\n   * æ§è¡å½ä»¤\r\n   * @param commandName å½ä»¤åç§°\r\n   * @param frameId æ¡æ¶ID\r\n   */\r\n  public execute(commandName: string, frameId?: string): Observable<any> {\r\n    if (!commandName || commandName === '' || commandName === 'undefined') {\r\n      return;\r\n    }\r\n    let viewModel = this.viewModel;\r\n    if (frameId) {\r\n      const targetContext = this.appContext.frameContextManager.getFrameContextById(frameId);\r\n      viewModel = targetContext.viewModel;\r\n    }\r\n    return viewModel[commandName]();\r\n  }\r\n\r\n  /**\r\n   * ç­å¾BeSessionåå»º\r\n   * @returns ææ°åå»ºåºæ¥çBeSession\r\n   */\r\n  public waitForBeSession(): Observable<string> {\r\n    const frameContext = this.context.frameContext;\r\n    const befRepository = frameContext.repository as BefRepository<Entity>;\r\n    const sessionService = befRepository.restService.sessionService;\r\n    return sessionService.getBeSessionId().pipe(\r\n      filter((beSessionId: string) => {\r\n        return beSessionId !== null;\r\n      }),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * æåæä¸ªä»»å¡çæ§è¡ç»æ\r\n   * @param taskName ä»»å¡åç§°\r\n   * @reutrn è¿åtaskNameå¯¹åºä»»å¡çæ§è¡ç»æ\r\n   */\r\n  public extractResult(taskName: string) {\r\n    const results = this.context.results;\r\n    return results[taskName];\r\n  }\r\n  /**\r\n   * æåå½åç»ä»¶çè¡åæ¢äºä»¶æåº\r\n   */\r\n  public suspendFrameContextRowSelectedEvent(frameId?: string) {\r\n    let frameContext: FrameContext = this.viewModel.frameContext;\r\n    if (frameId) {\r\n      frameContext = this.viewModel.frameContext.appContext.frameContextManager.getFrameContextById(frameId);\r\n    }\r\n    if (frameContext) {\r\n      frameContext.bindingData.rowSelectedEventSuspend = true;\r\n    }\r\n\r\n  }\r\n  public resumeFrameContextRowSelectedEvent(frameId?: string) {\r\n    let frameContext: FrameContext = this.viewModel.frameContext;\r\n    if (frameId) {\r\n      frameContext = this.viewModel.frameContext.appContext.frameContextManager.getFrameContextById(frameId);\r\n    }\r\n    if (frameContext) {\r\n      frameContext.bindingData.rowSelectedEventSuspend = false;\r\n    }\r\n  }\r\n}\r\n\r\nexport { CommandService };\r\n","import { ElementRef } from \"@angular/core\";\r\n\r\nexport class VerifyService {\r\n  public static focusElement(selector: string, elementRef?: ElementRef) {\r\n    const nativeElement = elementRef && elementRef.nativeElement || document;\r\n    let target = nativeElement.ownerDocument.getElementById(selector);\r\n    if (target) {\r\n      if (target.tagName !== 'INPUT') {\r\n        const input = target.getElementsByTagName('input');\r\n        if (input.length) {\r\n          target = input[0];\r\n        }\r\n      }\r\n      target.focus();\r\n    }\r\n  }\r\n}","// tslint:disable: max-line-length\r\nimport { ElementRef, InjectFlags, Injectable, Optional, Self } from '@angular/core';\r\nimport { Repository, Entity, FrameContext, PARENT_CLASS, ChangeType, ValidationResult, ValidationError, ValidateRule, ViewModel, DataTypeInfo, DataPropGroup, DataPropInfo, BindingList, ComponentType } from '@farris/devkit';\r\nimport { tap, switchMap } from 'rxjs/operators';\r\nimport { EMPTY, Observable, Subject } from 'rxjs';\r\nimport { zip } from 'rxjs/observable/zip';\r\nimport { empty } from 'rxjs/observable/empty';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { VerifyDetailService } from '@farris/ui-verify-detail';\r\nimport { FormNotifyService } from './form-notify.service';\r\nimport { LanguageService } from './languag.service';\r\nimport { VerifyService } from './verify.service';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\n\r\n/**\r\n * è¡¨åéªè¯æå¡\r\n * @scope FrameComponent\r\n */\r\n\r\n@Injectable()\r\nclass ValidationService {\r\n\r\n  private validationResults = new Subject<any>();\r\n  private validationAllResult = new Subject<any>();\r\n  /**\r\n   * æé å½æ°\r\n   */\r\n  constructor(\r\n    private repository: Repository<any>,\r\n    private frameContext: FrameContext,\r\n    @Optional() private notifyService: FormNotifyService,\r\n    @Optional() private languageService: LanguageService\r\n  ) {\r\n    if (!this.languageService) {\r\n      this.languageService = new LanguageService();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * éªè¯è¡¨ååçææè¡¨å\r\n   */\r\n  public validate() {\r\n    this.repository.getList().subscribe(\r\n      (result: Entity[]) => {\r\n        for (const entity of result) {\r\n          entity.validate().subscribe((result: ValidationResult) => {\r\n            if (!result.isValid) {\r\n              alert(result.message);\r\n              this.validationResults.next(result);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    );\r\n    return this.validationResults;\r\n  }\r\n  /**\r\n   * æ ¡éªå½åè¡\r\n   */\r\n  public validateCurrentRow(): Observable<any> {\r\n    const entityTypeInfo = this.repository.entityTypeInfo;\r\n    // ç»åè¡¨ååªæ ¡éªå½åæé®æå¨çè¡¨å\r\n    const primaryValue = this.frameContext.bindingData.list.currentId;\r\n    if (!primaryValue) {\r\n      return of(true);\r\n    }\r\n    // é¦åæ ¡éªå®ä½ä¸è½ä¸ºç©ºè§å\r\n    const entity = this.repository.entityCollection.getEntityById(primaryValue);\r\n    if (!entity) {\r\n      return of(true);\r\n    }\r\n\r\n    const entities: Entity[] = [entity];\r\n    const namespace = this.frameContext.namespace;\r\n    let frameContexts = [];\r\n    // ä¿®å¤ä½¿ç¨ç¸åbeåå»ºçvoçç»åè¡¨åæ ¡éªæ¶å¤ä¸ªè¡¨åæ ¡éªè§åè¢«åå¹¶çé®é¢\r\n    // TODO: ç®åæªèèç»åè¡¨åç»ä¸ä¿å­çåºæ¯ï¼åç»­æ¯æç»åè¡¨åç»ä¸ä¿å­æ¶åä¿®æ¹\r\n    if (namespace !== null) {\r\n      // å­å¨å½åç©ºé´ï¼è¯´æè¡¨åè¾æ°ï¼å¯ä»¥ä¾èµè¯¥ç¹æ§\r\n      frameContexts = this.frameContext.appContext.frameContextManager.getFrameContextsByNamespace(namespace);\r\n    } else {\r\n      // è¡¨åè¾èï¼è·åææçä¸ä¸æï¼å¨æ ¡éªé¶æ®µè¿æ»¤è§å\r\n      frameContexts = this.frameContext.appContext.frameContextManager.getFrameContexts();\r\n    }\r\n\r\n    const isModal = this.isInDialog();\r\n    const hasOwnVerifyDetailService = this.hasOwnVerifyDetailService();\r\n    let rootViewModel = this.frameContext.root.viewModel;\r\n    if (isModal && hasOwnVerifyDetailService) {\r\n      rootViewModel = this.frameContext.getVirtualRootFrameContext().viewModel;\r\n    }\r\n\r\n    let toValidate = false;\r\n    const formErrors = [];\r\n    frameContexts.forEach((frameContext: FrameContext) => {\r\n      if (frameContext.form && frameContext.form.enableValidate) {\r\n        toValidate = true;\r\n      }\r\n    });\r\n    if (!toValidate || entities.length < 1) {\r\n      return of(true);\r\n    }\r\n    rootViewModel.verifyInformations = [];\r\n    let formValid = true;\r\n    let entityValid = true;\r\n    const formValidationRules = new Map<string, ValidateRule[]>();\r\n    frameContexts.forEach((formContext: FrameContext) => {\r\n      const bindingObject = formContext.bindingData.getObject();\r\n      // éç¥ææbindingData,\r\n      bindingObject && bindingObject.setShowValidationMsg(true);\r\n      if (formContext.form && formContext.form.enableValidate) {\r\n        // è·åå½åè¡¨åä¸çææéªè¯è§å\r\n        const currentFormValidationRules = formContext.form.getValidationRules();\r\n        currentFormValidationRules.forEach((rules, path) => {\r\n          if (formValidationRules.has(path)) {\r\n            rules.forEach(rule => formValidationRules.get(path).push(rule));\r\n          } else {\r\n            formValidationRules.set(path, [...rules]);\r\n          }\r\n        });\r\n        formContext.form.setShowValidationMsg(true);\r\n        // éä¸ªè°ç¨è¡¨åçéªè¯ï¼éªè¯åç«¯è¡¨åè§å\r\n        if (!formContext.form.isFormValid()) {\r\n          formErrors.push(formContext.form);\r\n          formValid = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    // éªè¯ææå®ä½\r\n    const observableList = entities.map((entity: Entity) => {\r\n      const index = this.frameContext.bindingData.list.getIndexById(entity.primaryValue);\r\n      return entity.validate(undefined, undefined, formValidationRules, null, this.frameContext);\r\n    });\r\n    const result$ = zip(...observableList).pipe(\r\n      tap((resultList) => {\r\n        frameContexts.forEach((formContext: FrameContext) => {\r\n          if (!formContext.form.enableValidate) {\r\n            return;\r\n          }\r\n          const handleErrors = (errors: ValidationError[]) => {\r\n            errors.forEach((validationError: ValidationError) => {\r\n              if (validationError.children && validationError.children.length) {\r\n                handleErrors(validationError.children);\r\n              }\r\n              const errMsgObj = {};\r\n              let id = '';\r\n              const findId = (target: any) => {\r\n                if (target && target.data && target.data.id) {\r\n                  id = target.data.id;\r\n                  return;\r\n                } else if (target[PARENT_CLASS]) {\r\n                  findId(target[PARENT_CLASS]);\r\n                }\r\n              };\r\n              findId(validationError.target);\r\n\r\n              // å®ä½éªè¯åºéï¼éè¦å°éè¯¯å±ç¤ºå°çé¢ä¸\r\n              // å®ä½ä¸ä¸å®æ¯å½åè¡\r\n              let parentPathData = {\r\n                path: [],\r\n                isUdt: false,\r\n                isGrid: false\r\n              };\r\n              if (validationError.target) {\r\n                parentPathData = validationError.target.getPaths();\r\n              }\r\n              const bindingPath = '/' + parentPathData.path.join('/');\r\n              if (validationError.constraints) {\r\n                Object.keys(validationError.constraints).forEach(key => {\r\n                  errMsgObj[key] = {\r\n                    name: validationError.constraints[key]\r\n                  };\r\n                  // if (this.frameContext.viewModel.bindingPath === bindingPath) {\r\n                  //   rootViewModel['verifyInformations'].push({\r\n                  //     id: id,\r\n                  //     title: key,\r\n                  //     msg: validationError.constraints[key],\r\n                  //     type: 'warn'\r\n                  //   })\r\n                  // }\r\n                });\r\n              }\r\n              const paths = parentPathData.path.concat(validationError.property);\r\n\r\n              //if (this.frameContext.viewModel.bindingPath === bindingPath) {\r\n              // å°éè¯¯ä¿¡æ¯æ´æ°å°formControlä¸\r\n              formContext.bindingData.changes.next({\r\n                type: ChangeType.UpdateErrors,\r\n                id,\r\n                path: paths,\r\n                isUdt: parentPathData.isUdt,\r\n                isGrid: parentPathData.isGrid,\r\n                value: validationError.value,\r\n                errors: errMsgObj\r\n              });\r\n              //}\r\n            });\r\n          };\r\n          // å±å¼éªè¯ç»æ\r\n          const isValidList = resultList.map((result: ValidationResult) => result.isValid);\r\n          // ä¿å­ååè°ç¨å®ä½ä¸çéªè¯è§åï¼å¨é¨éè¿ä¹åæä¿å­\r\n          // å®ä½éªè¯éè¿\r\n          if (isValidList.filter(x => x).length === observableList.length) {\r\n            // å°éè¯¯ä¿¡æ¯æ´æ°å°formControlä¸\r\n            formContext.bindingData.changes.next({\r\n              type: ChangeType.UpdateErrors,\r\n              path: []\r\n            });\r\n            // éªè¯æååéèè¾å¥æ¶çéªè¯\r\n            if (formValid) {\r\n              const bindingObject = formContext.bindingData.getObject();\r\n              bindingObject && bindingObject.setShowValidationMsg(false);\r\n              const form = formContext.form;\r\n              if (form) {\r\n                form.setShowValidationMsg(false);\r\n              }\r\n            }\r\n          } else {\r\n            // å®ä½éªè¯æéè¯¯\r\n            entityValid = false;\r\n            resultList.forEach((result: ValidationResult) => {\r\n              if (result.isValid) {\r\n                // æ¸é¤éªè¯éè¿çéè¯¯\r\n                formContext.bindingData.changes.next({\r\n                  type: ChangeType.UpdateErrors,\r\n                  path: []\r\n                });\r\n              } else {\r\n                handleErrors(result.errors);\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }),\r\n      switchMap((resultList) => {\r\n        let isValidated = true;\r\n        const errors = [];\r\n        resultList.forEach((result: ValidationResult) => {\r\n          if (!result.isValid) {\r\n            isValidated = false;\r\n          }\r\n          errors.push(...result.errors);\r\n        });\r\n        if (errors.length > 0) {\r\n          this.collectValidationErrors(rootViewModel, errors, this.frameContext.namespace);\r\n        }\r\n        // rootViewModel.verifycationChanged.next(rootViewModel.verifyInformations);\r\n        let verifyInformations = rootViewModel.verifyInformations;\r\n        if (isModal && hasOwnVerifyDetailService) {\r\n          verifyInformations = rootViewModel.verifyInformations.filter(item => item.namespace === namespace);\r\n        }\r\n        rootViewModel.verifycationChanged.next(verifyInformations);\r\n        this.handleErrorClickEvent();\r\n        if (isValidated && !formValid) {\r\n          // å®ä½æ ¡éªéè¿ä½è¡¨åæ ¡éªä¸éè¿ï¼æ­¤æ¶å®ä½åè¡¨åå­å¨æ ¡éªè§åä¸ä¸è´çæåµ\r\n          console.warn('å®ä½åæ§ä»¶æ ¡éªè§åä¸ä¸è´ï¼è¯·ç¡®è®¤å®ä½æ ¡éªè§åéç½®ä¸æ§ä»¶ä¸è´ãå¦æéç½®ä¸ä¸è´å¯è½ä¼å¯¼è´æ ¡éªå¤±æï¼');\r\n        }\r\n        // å®ä½æ ¡éªéè¿ï¼å®ä½æ ¡éªä½¿ç¨çè§åæ¯æ§ä»¶+å®ä½ï¼æ­£å¸¸å®ä½æ ¡éªéè¿åæ§ä»¶æ ¡éªä¸å®ä¹ä¼éè¿\r\n        if (isValidated) {\r\n          const isEntityValid = this.validateEntityAllowEmptyRule(entityTypeInfo);\r\n          if (!isEntityValid) {\r\n            return EMPTY;\r\n          }\r\n          return of(true);\r\n        } else {\r\n          return empty();\r\n        }\r\n      })\r\n    );\r\n    return result$;\r\n  }\r\n  /**\r\n   * è°ç¨è¡¨ååå®ä½ä¸çéªè¯è§å, éè¿åè°ç¨åè°cb\r\n   */\r\n  validateAll(): Observable<any> {\r\n    const entityTypeInfo = this.repository.entityTypeInfo;\r\n    // ç»åè¡¨ååªæ ¡éªå½åæé®æå¨çè¡¨å\r\n    const entities: Entity[] = this.repository.entityCollection.getAllEntities();\r\n    const namespace = this.frameContext.namespace;\r\n    let frameContexts = [];\r\n    if (namespace !== null) {\r\n      // å­å¨å½åç©ºé´ï¼è¯´æè¡¨åè¾æ°ï¼å¯ä»¥ä¾èµè¯¥ç¹æ§\r\n      frameContexts = this.frameContext.appContext.frameContextManager.getFrameContextsByNamespace(namespace);\r\n    } else {\r\n      // è¡¨åè¾èï¼è·åææçä¸ä¸æï¼å¨æ ¡éªé¶æ®µè¿æ»¤è§å\r\n      frameContexts = this.frameContext.appContext.frameContextManager.getFrameContexts();\r\n    }\r\n\r\n    let toValidate = false;\r\n    const formErrors = [];\r\n    frameContexts.forEach((frameContext: FrameContext) => {\r\n      if (frameContext.form && frameContext.form.enableValidate) {\r\n        toValidate = true;\r\n      }\r\n    });\r\n    if (!toValidate || entities.length < 1) {\r\n      return of(true);\r\n    }\r\n    const isModal = this.isInDialog();\r\n    const hasOwnVerifyDetailService = this.hasOwnVerifyDetailService();\r\n    let rootViewModel = this.frameContext.root.viewModel;\r\n    if (isModal && hasOwnVerifyDetailService) {\r\n      rootViewModel = this.frameContext.getVirtualRootFrameContext().viewModel;\r\n    }\r\n\r\n    let formValid = true;\r\n    let entityValid = true;\r\n    const formValidationRules = new Map<string, ValidateRule[]>();\r\n    frameContexts.forEach((formContext: FrameContext) => {\r\n      const bindingObject = formContext.bindingData.getObject();\r\n      // éç¥ææbindingData,\r\n      bindingObject && bindingObject.setShowValidationMsg(true);\r\n      if (formContext.form && formContext.form.enableValidate) {\r\n        // è·åå½åè¡¨åä¸çææéªè¯è§å\r\n        const currentFormValidationRules = formContext.form.getValidationRules();\r\n        currentFormValidationRules.forEach((rules, path) => {\r\n          if (formValidationRules.has(path)) {\r\n            rules.forEach(rule => formValidationRules.get(path).push(rule));\r\n          } else {\r\n            formValidationRules.set(path, [...rules]);\r\n          }\r\n        });\r\n        formContext.form.setShowValidationMsg(true);\r\n        // éä¸ªè°ç¨è¡¨åçéªè¯ï¼éªè¯åç«¯è¡¨åè§å\r\n        if (!formContext.form.isFormValid()) {\r\n          formErrors.push(formContext.form);\r\n          formValid = false;\r\n        }\r\n      }\r\n    });\r\n    // è§¦åææå®ä½çvalidateäºä»¶\r\n    const isMultiEntityValiate = entities.length > 0;\r\n\r\n    // éªè¯ææå®ä½\r\n    const observableList = entities.map((entity: Entity, index: number) =>\r\n      entity.validate(undefined, undefined, formValidationRules, isMultiEntityValiate ? index : null, this.frameContext));\r\n    const result$ = zip(...observableList).pipe(\r\n      tap((resultList) => {\r\n        frameContexts.forEach((formContext: FrameContext) => {\r\n          if (!formContext.form.enableValidate) {\r\n            return;\r\n          }\r\n          const handleErrors = (errors: ValidationError[]) => {\r\n            errors.forEach((validationError: ValidationError) => {\r\n              if (validationError.children && validationError.children.length) {\r\n                handleErrors(validationError.children);\r\n              }\r\n              const errMsgObj = {};\r\n              let id = '';\r\n              const findId = (target: any) => {\r\n                if (target && target.data && target.data.id) {\r\n                  id = target.data.id;\r\n                  return;\r\n                } else if (target[PARENT_CLASS]) {\r\n                  findId(target[PARENT_CLASS]);\r\n                }\r\n              };\r\n              findId(validationError.target);\r\n\r\n              // å®ä½éªè¯åºéï¼éè¦å°éè¯¯å±ç¤ºå°çé¢ä¸\r\n              // å®ä½ä¸ä¸å®æ¯å½åè¡\r\n              let parentPathData = {\r\n                path: [],\r\n                isUdt: false,\r\n                isGrid: false\r\n              };\r\n              if (validationError.target) {\r\n                parentPathData = validationError.target.getPaths();\r\n              }\r\n              const bindingPath = '/' + parentPathData.path.join('/');\r\n              if (validationError.constraints) {\r\n                Object.keys(validationError.constraints).forEach(key => {\r\n                  errMsgObj[key] = {\r\n                    name: validationError.constraints[key]\r\n                  };\r\n                  // if (this.frameContext.viewModel.bindingPath === bindingPath) {\r\n                  //   rootViewModel['verifyInformations'].push({\r\n                  //     id: id,\r\n                  //     title: key,\r\n                  //     msg: validationError.constraints[key],\r\n                  //     type: 'warn'\r\n                  //   })\r\n                  // }\r\n                });\r\n              }\r\n              const paths = parentPathData.path.concat(validationError.property);\r\n\r\n              //if (this.frameContext.viewModel.bindingPath === bindingPath) {\r\n              // å°éè¯¯ä¿¡æ¯æ´æ°å°formControlä¸\r\n              formContext.bindingData.changes.next({\r\n                type: ChangeType.UpdateErrors,\r\n                id,\r\n                path: paths,\r\n                isUdt: parentPathData.isUdt,\r\n                isGrid: parentPathData.isGrid,\r\n                value: validationError.value,\r\n                errors: errMsgObj\r\n              });\r\n              //}\r\n            });\r\n          };\r\n          // å±å¼éªè¯ç»æ\r\n          const isValidList = resultList.map((result: ValidationResult) => result.isValid);\r\n          // ä¿å­ååè°ç¨å®ä½ä¸çéªè¯è§åï¼å¨é¨éè¿ä¹åæä¿å­\r\n          // å®ä½éªè¯éè¿\r\n          if (isValidList.filter(x => x).length === observableList.length) {\r\n            // å°éè¯¯ä¿¡æ¯æ´æ°å°formControlä¸\r\n            formContext.bindingData.changes.next({\r\n              type: ChangeType.UpdateErrors,\r\n              path: []\r\n            });\r\n            // éªè¯æååéèè¾å¥æ¶çéªè¯\r\n            if (formValid) {\r\n              const bindingObject = formContext.bindingData.getObject();\r\n              bindingObject && bindingObject.setShowValidationMsg(false);\r\n              const form = formContext.form;\r\n              if (form) {\r\n                form.setShowValidationMsg(false);\r\n              }\r\n            }\r\n          } else {\r\n            // å®ä½éªè¯æéè¯¯\r\n            entityValid = false;\r\n            resultList.forEach((result: ValidationResult) => {\r\n              if (result.isValid) {\r\n                // æ¸é¤éªè¯éè¿çéè¯¯\r\n                formContext.bindingData.changes.next({\r\n                  type: ChangeType.UpdateErrors,\r\n                  path: []\r\n                });\r\n              } else {\r\n                handleErrors(result.errors);\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }),\r\n      switchMap((resultList) => {\r\n        let isValidated = true;\r\n        const errors = [];\r\n        resultList.forEach((result: ValidationResult) => {\r\n          if (!result.isValid) {\r\n            isValidated = false;\r\n          }\r\n          errors.push(...result.errors);\r\n        });\r\n        if (errors.length > 0) {\r\n          this.collectValidationErrors(rootViewModel, errors, this.frameContext.namespace);\r\n        }\r\n        let verifyInformations = rootViewModel.verifyInformations;\r\n        if (isModal && hasOwnVerifyDetailService) {\r\n          verifyInformations = rootViewModel.verifyInformations.filter(item => item.namespace === namespace);\r\n        }\r\n        // å ä¸ºæ ¡éªç´¯å çç¼æï¼å¯¼è´ä¹åçæ ¡éªä¿¡æ¯ä¸ç´å­å¨ï¼åªè½éè¿æ ¡éªç»ææ¥ç¡®å®æ¯å¦è¿æéè¯¯ä¿¡æ¯\r\n        if (isValidated && formValid) {\r\n          verifyInformations = rootViewModel.verifyInformations = [];\r\n        }\r\n        rootViewModel.verifycationChanged.next(verifyInformations);\r\n        this.handleErrorClickEvent();\r\n        if (isValidated) {\r\n          const isEntityValid = this.validateEntityAllowEmptyRule(entityTypeInfo);\r\n          if (!isEntityValid) {\r\n            return EMPTY;\r\n          }\r\n          return of(true);\r\n        } else {\r\n          return empty();\r\n        }\r\n      })\r\n    );\r\n    return result$;\r\n  }\r\n  /**\r\n   * æ ¡éªå®ä½æ¯å¦æ»¡è¶³ä¸è½ä¸ºç©ºçè§å\r\n   * @param entity ä¸»å®ä½\r\n   */\r\n  private validateEntityAllowEmptyRule(entityTypeInfo: DataTypeInfo) {\r\n    // ç¡®è®¤å®ä½åä¸ªå±çº§ä¸­æ¯å¦å­å¨ä¸è½ä¸ºç©ºçè§å\r\n    const paths = this.getNotAllowEmptyBindingPaths(entityTypeInfo);\r\n    if (!paths || paths.length < 1) {\r\n      return true;\r\n    }\r\n    // æ¾å°ææä¸åæ³çbindingPaths\r\n    const invalidPaths = paths.filter((path: string) => {\r\n      const bindingPaths = path.split('/').filter(p => p);\r\n      const bindingList = this.frameContext.bindingData.getValue(bindingPaths) as BindingList;\r\n      if (!bindingList || bindingList.length < 1) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    // æå®ä½å¿å¡«ï¼ä½å®ä½æ°æ®ä¸ºç©º\r\n    if (invalidPaths.length > 0) {\r\n      const tableNames = [];\r\n      invalidPaths.forEach((path: string) => {\r\n        //const frameContexts = this.getFrameContextByBindingPath(path.split('/'));\r\n        //const frameComponents = frameContexts.map(frameContext => frameContext.frameComponent);\r\n        // æ¾å°ææå®¹å¨ç±»ç»ä»¶\r\n        //const containerComponents = frameComponents.filter(frameComponent => [ComponentType.farrisDataGridComponent, ComponentType.farrisTreeTalbeComponent, ComponentType.kendoGridComponent, ComponentType.primengTreeComponent].includes(frameComponent.componentType));\r\n        //if (!(!containerComponents || containerComponents.length < 1)) {\r\n        const viewModelName = this.getViewModelNameByBindingPaths(path.split('/')) || `ç»å®è·¯å¾${path}`;\r\n        tableNames.push(viewModelName);\r\n        //}\r\n      });\r\n      if (this.notifyService) {\r\n        this.notifyService.error(`${tableNames.join('ï¼')} ${this.languageService.tableCanNotEmpty}`, { hideTitle: true });\r\n      }\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  /**\r\n   * \r\n   * @param bindingPaths pathä¸è½ä¸ºç©ºæ/ï¼ä¸æ¯æä¸»è¡¨\r\n   */\r\n  private getViewModelNameByBindingPaths(bindingPaths: string[]) {\r\n    const namespace = this.frameContext.namespace;\r\n    let frameContexts: FrameContext[] = null;\r\n    if (namespace !== null) {\r\n      // å­å¨å½åç©ºé´ï¼è¯´æè¡¨åè¾æ°ï¼å¯ä»¥ä¾èµè¯¥ç¹æ§\r\n      frameContexts = this.frameContext.appContext.frameContextManager.getFrameContextsByNamespace(namespace);\r\n    } else {\r\n      // è¡¨åè¾èï¼è·åææçä¸ä¸æï¼å¨æ ¡éªé¶æ®µè¿æ»¤è§å\r\n      frameContexts = this.frameContext.appContext.frameContextManager.getFrameContexts();\r\n    }\r\n    const bindingPath = bindingPaths.filter(p => p).join('/');\r\n    const frameContext = frameContexts.find((frameContext: FrameContext) => frameContext.viewModel && frameContext.viewModel.bindingPath.split('/').filter(p => p).join('/') === bindingPath);\r\n    const viewModelName = frameContext && frameContext.form && frameContext.form.formGroupName || '';\r\n    return viewModelName;\r\n  }\r\n  /**\r\n   * éåè·åææä¸è½ä¸ºç©ºçå®ä½çç»å®è·¯å¾\r\n   * @param entityTypeInfo \r\n   * @param results \r\n   * @returns \r\n   */\r\n  private getNotAllowEmptyBindingPaths(entityTypeInfo: DataTypeInfo, results: string[] = []): string[] {\r\n    if (!entityTypeInfo) {\r\n      return;\r\n    }\r\n    this.deepFirstTraversalEntityTypeInfo(entityTypeInfo, results);\r\n    return results;\r\n  }\r\n  private deepFirstTraversalEntityTypeInfo(entityTypeInfo: DataTypeInfo, result: string[] = [], previousValue: string[] = []) {\r\n    // ç¡®è®¤å½åå®ä½æ¯å¦å¿å¡«\r\n    const isAllowEmpty = this.isAllowEmpty(entityTypeInfo.entityInfo.allowEmpty, previousValue);\r\n    if (isAllowEmpty === false) {\r\n      if (previousValue.length < 1) {\r\n        result.push('');\r\n      } else {\r\n        result.push(previousValue.join('/'));\r\n      }\r\n    }\r\n    // è·åææå­è¡¨\r\n    const list = entityTypeInfo.getPropInfosByGroup(DataPropGroup.List);\r\n    if (list && list.length > 0) {\r\n      list.forEach((propInfo: DataPropInfo) => {\r\n        const typeInfo = propInfo.typeInfo;\r\n        if (typeInfo && typeInfo.entityInfo) {\r\n          previousValue.push(typeInfo.entityInfo.nodeCode);\r\n          this.deepFirstTraversalEntityTypeInfo(typeInfo, result, previousValue);\r\n        }\r\n      });\r\n    }\r\n    // æ²¡æä¸çº§äºï¼æ­¤æ¶åºè¯¥æ¸ç©ºæ¸¸æ ï¼å°æ¶éå°çè·¯å¾æ¾å°ç»æéä¸­\r\n    if (previousValue && previousValue.length > 0) {\r\n      previousValue.pop();\r\n    }\r\n  }\r\n  private isAllowEmpty(value: string | boolean, paths: string[]) {\r\n    if (value === undefined || value === true || value === '') {\r\n      return true;\r\n    }\r\n    // å¼åèå®ä¹äºä¸è½ä¸ºç©ºçè§å\r\n    const frameContexts = this.getFrameContextByBindingPath(paths);\r\n    let caller = this.frameContext.frameComponent;\r\n    if (!frameContexts || frameContexts.length < 1) {\r\n      // å®ä¹äºè§åä½å¯¹åºçFrameæ²¡ææ¸²æ\r\n      console.warn(`ç»å®è·¯å¾ ${paths.join('/')} å®ä¹äºä¸è½ä¸ºç©ºçè§åï¼ä½æ¾ä¸å°è¯¥ç»å®è·¯å¾å¯¹åºçç»ä»¶ãè¯·ç¡®ä¿ç»ä»¶æ¾éä¸å¿å¡«ä¸è´ã`);\r\n    } else {\r\n      caller = frameContexts.pop().frameComponent;\r\n    }\r\n    if (typeof value === 'boolean') {\r\n      return value;\r\n    } else if (typeof value === 'string') {\r\n      value = value.trim().startsWith('return') ? value : `return ${value}`;\r\n      const factory = new Function(`\r\n        var viewModel = this.viewModel;\r\n        var bindingData = this.bindingData;\r\n        var context = this.context;\r\n        ${value}\r\n      `);\r\n      return factory.apply(caller);\r\n    } else {\r\n      console.warn(`æ æçå¿å¡«è§åã`);\r\n    }\r\n  }\r\n  collectValidationErrors(rootViewModel: ViewModel, errors: ValidationError[], namespace: string, filter: boolean = true) {\r\n    if (filter) {\r\n      rootViewModel.verifyInformations = rootViewModel.verifyInformations.filter(item => item.namespace !== namespace);\r\n    }\r\n    errors.forEach((validationError: ValidationError) => {\r\n      if (validationError.children && validationError.children.length) {\r\n        this.collectValidationErrors(rootViewModel, validationError.children, namespace, false);\r\n      }\r\n      let id = '';\r\n      const findId = (target: any) => {\r\n        if (target && target.data && target.data.id) {\r\n          id = target.data.id;\r\n          return;\r\n        } else if (target[PARENT_CLASS]) {\r\n          findId(target[PARENT_CLASS]);\r\n        }\r\n      };\r\n      findId(validationError.target);\r\n      if (validationError.constraints) {\r\n        const validationResultTypes = Object.keys(validationError.constraints);\r\n        if (validationResultTypes.length) {\r\n          const offset = rootViewModel.verifyInformations.filter(item => item.namespace === namespace).length;\r\n          let index = rootViewModel.verifyInformations.findIndex(item => item.namespace === namespace);\r\n          index = index === -1 ? 0 : index + offset;\r\n          rootViewModel.verifyInformations.splice(index, 0, {\r\n            id: id,\r\n            namespace,\r\n            targetField: validationError.field,\r\n            index: validationError.index,\r\n            title: validationError.propertyName,\r\n            msg: validationError.constraints[validationResultTypes[0]],\r\n            frameContext: validationError.frameContext,\r\n            fullPath: validationError.fullPath,\r\n            type: validationResultTypes[0] === 'required' ? 'empty' : 'error'\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * éç½®æ ¡éªä¿¡æ¯ï¼ä»å½åè¡¨åï¼\r\n   */\r\n  public resetValidation(): Observable<any> {\r\n    const isDialog = this.isInDialog();\r\n    let rootViewModel = this.frameContext.root.viewModel;\r\n    if (isDialog) {\r\n      rootViewModel = this.frameContext.getVirtualRootFrameContext().viewModel;\r\n    }\r\n    let verifyInformations = rootViewModel.verifyInformations;\r\n    if (verifyInformations.length) {\r\n      const namespace = this.frameContext.namespace;\r\n      if (namespace !== null) {\r\n        verifyInformations = rootViewModel.verifyInformations.filter(item => item.namespace !== namespace);\r\n      }\r\n      rootViewModel.verifyInformations = verifyInformations;\r\n      //rootViewModel.verifyInformations.splice(0, rootViewModel.verifyInformations.length);\r\n    }\r\n    if (rootViewModel && rootViewModel.verifycationChanged) {\r\n      rootViewModel.verifycationChanged.next(verifyInformations);\r\n    }\r\n    return of(null);\r\n  }\r\n  /**\r\n   * æ¯å¦å¨å¼¹çªåé¨\r\n   */\r\n  private isInDialog() {\r\n    return this.frameContext && this.frameContext.getVirtualRootFrameContext() && this.frameContext.getVirtualRootFrameContext().frameComponent && this.frameContext.getVirtualRootFrameContext().frameComponent['isDialogRootComponent'] || false;\r\n  }\r\n  /**\r\n   * æ¥æç¬èªçæ ¡éªæç¤ºæå¡\r\n   */\r\n  private hasOwnVerifyDetailService() {\r\n    return this.frameContext.injector.get<VerifyDetailService>(VerifyDetailService, null) !== this.frameContext.root.appContext.injector.get<VerifyDetailService>(VerifyDetailService, null);;\r\n  }\r\n  /**\r\n   * éè¿bindingPathè·åææå¹éçframeContext\r\n   * @param bindingPath \r\n   * @returns \r\n   */\r\n  private getFrameContextByBindingPath(bindingPaths: string[]): FrameContext[] {\r\n    const bindingPath = bindingPaths.filter(p => p).join('/');\r\n    return this.frameContext.appContext.frameContextManager.getFrameContexts().filter(frameContext => frameContext.viewModel.bindingPath.split('/').filter(p => p).join('/') === bindingPath);\r\n  }\r\n  private get verifyDetailService() {\r\n    return this.frameContext.injector.get<VerifyDetailService>(VerifyDetailService, null, InjectFlags.Self);\r\n  }\r\n  private handleErrorClickEvent() {\r\n    if (this.verifyDetailService && this.verifyDetailService.verifyContainer && this.verifyDetailService.verifyContainer.instance) {\r\n      this.verifyDetailService.verifyContainer.instance.validatorClick.subscribe((item: any) => {\r\n        this.onErrorItemClick(item);\r\n      });\r\n    }\r\n  }\r\n  private onErrorItemClick(item: { frameContext: FrameContext, id: string, targetField: string, fullPath: string } = { frameContext: null, id: null, targetField: null, fullPath: null }) {\r\n    const { frameContext, id, targetField, fullPath } = item;\r\n    const isGridComponent = frameContext && frameContext.frameComponent.isGridComponent || false;\r\n    if (!isGridComponent) {\r\n      if (!targetField) { }\r\n      const elementRef = frameContext.injector.get(ElementRef, null, InjectFlags.Self) || frameContext.injector.get(ElementRef, null);\r\n      VerifyService.focusElement(targetField, elementRef);\r\n      this.verifyDetailService.verifyContainer.instance.showList = false;\r\n    } else {\r\n      // find grid component\r\n      const grid: DatagridComponent = frameContext.componentRefManager.getComponentByType(DatagridComponent);\r\n      if (grid && targetField && id) {\r\n        grid.editCell(id, targetField);\r\n        this.verifyDetailService.verifyContainer.instance.showList = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport { ValidationService };\r\n","import { BefRepository, BefRepositoryUtil, ResponseInfo } from \"@farris/bef\";\r\nimport { FrameContext } from \"@farris/devkit\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nexport class DataChangeDetectionService {\r\n    public static hasChange(frameContext: FrameContext): Observable<boolean> {\r\n        const befRepository = frameContext && frameContext.repository as BefRepository<any>;\r\n        const hasLocalChanges = BefRepositoryUtil.isExistUnsaveData(befRepository);\r\n        if (hasLocalChanges) {\r\n            return of(true);\r\n        }\r\n        // æ¬å°æ²¡æåæ´ï¼ç¡®è®¤æå¡å¨ç«¯æ¯å¦ææªä¿å­çåæ´\r\n        const virtualRootFrameContext = frameContext && frameContext.getVirtualRootFrameContext();\r\n        const serverSideChangeDetectionEnabled = virtualRootFrameContext && virtualRootFrameContext.enableServerSideChangeDetection;\r\n        if (!serverSideChangeDetectionEnabled) {\r\n            return of(false);\r\n        } else {\r\n            // å¯ç¨äºåç«¯åæ´æ£æµ\r\n            return frameContext.repository.hasChanges().pipe(map((response: ResponseInfo) => {\r\n                return response.returnValue;\r\n            }));\r\n        }\r\n    }\r\n}","import { Injectable, Optional } from '@angular/core';\r\nimport { Entity, BindingData, FrameContext, ViewModel } from '@farris/devkit';\r\nimport { BefRepository, BefRepositoryUtil } from '@farris/bef';\r\nimport { Observable, of, empty, EMPTY, concat, zip, from, Subject } from 'rxjs';\r\nimport { tap, switchMap, concatMap, concatAll, takeLast, last } from 'rxjs/operators';\r\nimport { FormLoadingService } from '../form-loading/form-loading.service';\r\nimport { LanguageService } from '../languag.service';\r\nimport { FormNotifyService } from '../form-notify.service';\r\nimport { FormMessageService } from '../form-message.service';\r\nimport { FormErrorService } from '../error/form-error.service';\r\nimport { EditStateUtil } from './utils/index';\r\nimport { FormNotifyStrategyService } from '../form-notify-strategy.service';\r\nimport { RuntimeFrameworkService } from '../rtf-service';\r\nimport { DataType, WEB_FORM_ROUTE_PARAMS_KEY } from '../types';\r\nimport { CommandService } from '../command-service';\r\nimport { ValidationService } from '../validation.service';\r\nimport { DataChangeDetectionService } from '../data-change-detection.service';\r\n// tslint:disable: no-string-literal\r\n// tslint:disable: max-line-length\r\n/**\r\n * å¡çä»åºæå¡\r\n */\r\n@Injectable()\r\nclass CardDataService {\r\n\r\n  /**\r\n   * å®ä½ä»åº\r\n   */\r\n  private repository: BefRepository<Entity>;\r\n\r\n  /**\r\n   * ç»å®æ°æ®\r\n   */\r\n  private bindingData: BindingData;\r\n\r\n  /**\r\n   * æé å½æ°\r\n   */\r\n  constructor(\r\n    private formMessageService: FormMessageService,\r\n    private frameContext: FrameContext,\r\n    private loadingService: FormLoadingService,\r\n    private formNotifyService: FormNotifyService,\r\n    @Optional() private languageService: LanguageService,\r\n    private formErrorService: FormErrorService,\r\n    private runtimeFrameworkService: RuntimeFrameworkService,\r\n    private commandService: CommandService\r\n  ) {\r\n    if (!languageService) {\r\n      this.languageService = LanguageService.getInstance();\r\n    }\r\n    this.repository = this.frameContext.repository as BefRepository<Entity>;\r\n    this.bindingData = this.frameContext.bindingData;\r\n  }\r\n\r\n  /**\r\n   * å è½½æ°æ®\r\n   * @param id ä¸»å®ä½id\r\n   * @param enableChildrenPagination å¯ç¨å­è¡¨åé¡µ\r\n   */\r\n  public load(id: string): Observable<Entity> {\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    this.frameContext.appContext.params.set(\"retrieveing\", true);\r\n    this.frameContext.appContext.params.delete('queryChild');\r\n    const get$ = this.repository.getById(id);\r\n    return get$.pipe(\r\n      tap(\r\n        () => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n        },\r\n        (error: any) => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.formErrorService.exception(this.languageService.loadFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  /**\r\n   * å è½½å\r\n   * @param id id\r\n   * @param transitionActionParamName ç¶æè¿ç§»å¨ä½åæ°ç¼å·\r\n   * @returns\r\n   */\r\n  public onLoading(transitionActionParamName: string) {\r\n    const tabId = this.runtimeFrameworkService && this.runtimeFrameworkService.tabId || null;\r\n    if (!tabId) {\r\n      return;\r\n    }\r\n    let skip = true;\r\n    const listening = this.frameContext.appContext.params.get(tabId) || false;\r\n    transitionActionParamName = transitionActionParamName || 'transitionAction';\r\n    if (!listening) {\r\n      this.frameContext.appContext.params.set(tabId, true);\r\n      this.runtimeFrameworkService.getEntityParam(tabId, (options: any) => {\r\n        if (skip) {\r\n          skip = false;\r\n          return;\r\n        }\r\n        const params = this.parseParams(options);\r\n        if (params && params.sync) {\r\n          const action = params.action;\r\n          const id = params.id;\r\n          const ngCommand = this.frameContext && this.frameContext.viewModel && this.frameContext.viewModel.metadatas && this.frameContext.viewModel.metadatas[action];\r\n          const actionName = ngCommand.params && ngCommand.params[transitionActionParamName] || null;\r\n          const formPrimaryValue = this.frameContext.bindingData.list.currentId;\r\n          const formState = this.frameContext.stateMachine.context.state;\r\n          let state = null;\r\n          let stateName: string;\r\n          if (!actionName) {\r\n            // å¯è½æ¯ç¨æ·èªå·±éç½®çå½ä»¤ï¼æ²¡æç¶ææºåæ¢ï¼æ­¤æ¶ä¸åå¤æ­ç¶ææº\r\n            state = formState;\r\n          }\r\n          else {\r\n            const ngAction = this.frameContext && this.frameContext.stateMachine && this.frameContext.stateMachine.metadatas && this.frameContext.stateMachine.metadatas.actions && this.frameContext.stateMachine.metadatas.actions[actionName];\r\n            state = ngAction && ngAction.transitTo || formState;\r\n            stateName = this.frameContext && this.frameContext.stateMachine && this.frameContext.stateMachine.metadatas && this.frameContext.stateMachine.metadatas && this.frameContext.stateMachine.metadatas.states[state] && this.frameContext.stateMachine.metadatas.states[state].name || this.languageService.defaultStateName;\r\n            if (stateName && stateName.startsWith('{{') && stateName.endsWith('}}')) {\r\n              const key = stateName.replace('{{', '').replace('}}', '');\r\n              stateName = this.frameContext.translate.transform(key, null);\r\n            }\r\n          }\r\n          const primaryValueChanged = formPrimaryValue !== id;\r\n          const stateChanged = formState !== state;\r\n\r\n          if (primaryValueChanged && stateChanged) {\r\n            // ååçåå\r\n            const message = this.languageService.dataAndStateChanged.replace(/\\$1/g, stateName);\r\n            this.showLoadingConfirm(message).pipe(switchMap(() => {\r\n              return this.resetForm(action);\r\n            })).subscribe();\r\n          } else if (primaryValueChanged) {\r\n            // ä¸»é®åçåå\r\n            this.showLoadingConfirm(this.languageService.dataChanged).pipe(switchMap(() => {\r\n              return this.resetForm(action);\r\n            })).subscribe();\r\n          } else if (stateChanged) {\r\n            // ç¶æåçåå\r\n            const message = this.languageService.stateChanged.replace(/\\$1/g, stateName);\r\n            this.showLoadingConfirm(message).pipe(switchMap(() => {\r\n              return this.resetForm(action);\r\n            })).subscribe();\r\n          } else {\r\n            // æ°æ®åç¶æåæªåçåå\r\n            return of(true);\r\n          }\r\n        }\r\n      }, false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æ°å¢\r\n   */\r\n  public add(): Observable<any> {\r\n    const lastModifiedId = this.bindingData.list.currentId;\r\n\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    const create$ = this.repository.create();\r\n    return create$.pipe(\r\n      tap(\r\n        () => {\r\n          EditStateUtil.setEditState(this.frameContext, lastModifiedId);\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n        },\r\n        (error: any) => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.formErrorService.exception(this.languageService.addFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  /**\r\n   * çº§èæ°å¢\r\n   */\r\n  public cascadeAdd(): Observable<any> {\r\n    const subject = new Subject<any>();\r\n    // æ¾å°ææviewmodel,æ¿å°äºææçframeContextï¼å¯è½æç»åè¡¨åç\r\n    const frameContexts = this.frameContext.appContext.frameContextManager.getFrameContexts();\r\n    // æ¾å°å½åframeContextçå¬å±namespace\r\n    const currentNamespace = this.frameContext.getVirtualRootFrameContext().namespace;\r\n    // æ¿å°å½åå½ä»¤æå¨frameçè¡¨åçææframeContext\r\n    const currentFormFrameContexts = frameContexts.filter((context: FrameContext) => context.namespace === currentNamespace) || [];\r\n    let bindingPaths = [];\r\n    if (currentFormFrameContexts && currentFormFrameContexts.length > 0) {\r\n      // æ¾å°ææä¸çº§frameContext\r\n      const childFrameContexts = currentFormFrameContexts.filter((context: FrameContext) => context.viewModel.bindingPath && context.viewModel.bindingPath !== '/');\r\n      if (childFrameContexts && childFrameContexts.length > 0) {\r\n        let childBindingPaths = childFrameContexts.map((context: FrameContext) => context.viewModel.bindingPath);\r\n        childBindingPaths = childBindingPaths.filter((item, index) => childBindingPaths.indexOf(item) === index);\r\n        if (childBindingPaths && childBindingPaths.length > 0) {\r\n          bindingPaths = childBindingPaths.map((path) => path.split('/').filter((p) => p)).sort((a, b) => a.length - b.length);\r\n        }\r\n      }\r\n    }\r\n    this.loadingService.show();\r\n    this.repository.create().pipe(\r\n      switchMap((entity: Entity) => {\r\n        const rid = entity.primaryValue;\r\n        if (bindingPaths && bindingPaths.length > 0) {\r\n          return from(bindingPaths).pipe(\r\n            concatMap((bindingPath: Array<any>) => {\r\n              const fpath = this.getPath(this.frameContext.viewModel, '/' + bindingPath.join('/'), rid);\r\n              return this.repository.appendByPath(fpath);\r\n            })\r\n          );\r\n        } else {\r\n          return of(entity);\r\n        }\r\n      })\r\n    ).pipe(last()).subscribe(\r\n      () => {\r\n        this.loadingService.hide();\r\n        subject.next();\r\n      },\r\n      (error: any) => {\r\n        this.loadingService.hide();\r\n        this.formErrorService.exception(this.languageService.addFailed, error);\r\n      });\r\n    return subject;\r\n  }\r\n\r\n  /**\r\n   * ç¼è¾ï¼æ´æ°æ°æ®å¹¶æ è®°ç¼è¾ç¶æï¼\r\n   */\r\n  public edit(id?: string): Observable<Entity> {\r\n    const update$ = this.update();\r\n    return update$.pipe(\r\n      tap(() => {\r\n        const currentId = this.bindingData.list.currentId\r\n        EditStateUtil.setEditState(this.frameContext, currentId);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * æ´æ°\r\n   * @param id ä¸»å®ä½id\r\n   * @param enableChildrenPagination å¯ç¨å­è¡¨åé¡µ\r\n   */\r\n  public update(id?: string): Observable<Entity> {\r\n    // è·åid\r\n    id = this.bindingData.list.currentId as string;\r\n    if (!id) {\r\n      return empty();\r\n    }\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    const update$ = this.repository.updateById(id);\r\n    this.frameContext.appContext.params.set(\"retrieveing\", true);\r\n    return update$.pipe(\r\n      tap(() => {\r\n        this.loadingService.hideDelayLoading(loadingTimerId);\r\n      },\r\n        (error) => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.formErrorService.exception(this.languageService.updateFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  public updateWithoutEmpty() {\r\n    // è·åid\r\n    const id = this.bindingData.list.currentId as string;\r\n    if (!id) {\r\n      return of(null);\r\n    } else {\r\n      return this.update();\r\n    }\r\n  }\r\n  /**\r\n   * æ ¡éªå½åè¡æ¯å¦å­å¨\r\n   * @returns\r\n   */\r\n  public checkBeforeUpdate(): Observable<boolean> {\r\n    const bindingList = this.frameContext.bindingData.list;\r\n    const id = bindingList && bindingList.currentId;\r\n    if (!id) {\r\n      this.formNotifyService.warning(this.languageService.noDataExist, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    return of(true);\r\n  }\r\n  /**\r\n   * å·²åºå¼\r\n   * @returns\r\n   */\r\n  public updateWithNotify() {\r\n    // è·åid\r\n    const id = this.bindingData.list.currentId as string;\r\n    if (!id) {\r\n      this.formNotifyService.warning(this.languageService.noDataExist, { hideTitle: true });\r\n      return EMPTY;\r\n    } else {\r\n      return this.update();\r\n    }\r\n  }\r\n  /**\r\n   * å è½½å¡çæ°æ®ï¼åé¡µå è½½å­è¡¨æ°æ®ï¼\r\n   * @deprecated æ¹æ³å·²åºå¼ï¼è¯·å¿ä½¿ç¨\r\n   */\r\n  public loadPaged(filter?: string, sort?: string) {\r\n    // è·åid\r\n    const id = this.bindingData.list.currentId as string;\r\n    if (!id) {\r\n      return EMPTY;\r\n    }\r\n\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    // this.frameContext.root.params.set('updateWithPaging', true);\r\n    const update$ = of(null);//this.repository.updateEntityById(id, true);\r\n    return update$.pipe(\r\n      tap(() => {\r\n        this.loadingService.hideDelayLoading(loadingTimerId);\r\n      },\r\n        (error) => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.formErrorService.exception(this.languageService.updateFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  /**\r\n   * ä¿å­\r\n   */\r\n  public save(successMsg?: string): Observable<boolean> {\r\n    // è·åå½åè¡\r\n    const id = this.bindingData.list.currentId as string;\r\n    if (!id) {\r\n      return of(false);\r\n    }\r\n\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    const update$ = this.repository.updateChangesById(id);\r\n    const save$ = this.repository.applyChangesById(id);\r\n    const result$ = update$.pipe(\r\n\r\n      // update$ => save$\r\n      switchMap((updateResult: boolean) => {\r\n        if (updateResult === false) {\r\n          return of(false);\r\n        } else {\r\n          return save$;\r\n        }\r\n      }),\r\n\r\n      // éèloading\r\n      tap(() => {\r\n\r\n        // åæ¶æ°å¢ç¶æ\r\n        EditStateUtil.setEditState(this.frameContext, id);\r\n        this.loadingService.hideDelayLoading(loadingTimerId);\r\n        // this.formNotifyService.info(this.languageService.saveSuccess);\r\n        if (successMsg && successMsg.trim()) {\r\n          let showMessage: boolean = true;\r\n          if (successMsg.startsWith('{') && successMsg.endsWith('}')) {\r\n            try {\r\n              const options = JSON.parse(successMsg);\r\n              if (options.showMessage === false) {\r\n                showMessage = false;\r\n              }\r\n            } catch { }\r\n          }\r\n          if (showMessage !== false) {\r\n            this.formNotifyService.success(successMsg, { hideTitle: true });\r\n          }\r\n        } else {\r\n          FormNotifyStrategyService.success(this.formNotifyService, this.languageService.saveSuccess);\r\n        }\r\n        // FormNotifyStrategyService.success(this.formNotifyService, this.languageService.saveSuccess);\r\n      },\r\n        (error) => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.formErrorService.exception(this.languageService.saveFailed, error);\r\n        }\r\n      )\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n\r\n  // #region åæ¶ç¸å³æ¹æ³\r\n\r\n  /**\r\n   * åæ¶ï¼é»è®¤åæ¶ï¼\r\n   */\r\n  public cancel(): Observable<any> {\r\n    return this.cancelWithCheck();\r\n  }\r\n\r\n  /**\r\n   * è¿ååæ´é\r\n   * @description ä¸å¸¦åæ´æ£æµæç¤º\r\n   */\r\n  public revert(options?: any): Observable<any> {\r\n    return this.cancelWithoutCheck(options);\r\n  }\r\n\r\n  /**\r\n   * åæ¶ï¼åæ¶åæ£æ¥æªä¿å­çåæ´ï¼\r\n   * @summary\r\n   * 1ãç¨æ·è¯¯æä½ï¼åªéè¦åä¸ªæç¤ºå°±å¯ä»¥äºï¼\r\n   * 2ãç¨æ·ææåæ¶ï¼ç¹å»åæ¶å°±æ¯è¦æ¾å¼ææåæ´ï¼è¿æ¶åè¯¢é®äººå®¶æ¯å¦è¦ä¿å­æèæç¤ºå­å¨åæ´æç¹å¤æ­¤ä¸ä¸¾ï¼ç¡®è®¤ä¸æå³å¯ã\r\n   * 3ãç¨æ·è¯¯æä½ï¼æ²¡æåæ´çæåµä¸ç´æ¥ç»åæ¶äºï¼ç¨æ·ä¼äº§çææï¼å ä¸ºç¨æ·ææ¶åå¹¶ä¸ç¡®å®æ¯å¦æåæ´ï¼åºè¯¥ä¹ç¡®è®¤ä¸æã\r\n   * @todo\r\n   * 1ãç±äºäº§åé¨å¾å¤ä»£ç è¯¯ç¨äºè¯¥æ¹æ³ï¼ä¾èµäºæ²¡æåæ´çæ¶åç´æ¥åæ¶ï¼ç°å¨å¼¹çªç¡®è®¤æ¡æ¥ï¼ä¸å¤ªåéï¼\r\n   * 2ãäº§åé¨éè¦ç¨cancelWithoutCheckæ¹æ³ä»£æ¿ï¼ç®ååç»å¼å®¹çï¼å¾å é¤ã\r\n   */\r\n  public cancelWithCheck() {\r\n    const hasChange$ = DataChangeDetectionService.hasChange(this.frameContext);\r\n    return hasChange$.pipe(\r\n      switchMap((changed: boolean) => {\r\n        if (!changed) {\r\n          return this.cancelChanges();\r\n        } else {\r\n          // ç¡®è®¤æ¯å¦åæ¶\r\n          const confirm$ = this.formMessageService.question(this.languageService['cancelWithoutSave']);\r\n          const result$ = confirm$.pipe(\r\n            switchMap((ifCancel: boolean) => {\r\n              if (ifCancel === false) {\r\n                return EMPTY;\r\n              }\r\n              return this.cancelChanges();\r\n            })\r\n          );\r\n          return result$;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * åæ¶ï¼ç´æ¥åæ¶ï¼ä¸æ§è¡æ£æ¥ï¼\r\n   */\r\n  public cancelWithoutCheck(options?: any) {\r\n    return this.cancelChanges(options);\r\n  }\r\n\r\n  /**\r\n   * åæ¶\r\n   */\r\n  private cancelChanges(options?: any): Observable<any> {\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    const cancel$ = this.repository.cancelChanges(options);\r\n    return cancel$.pipe(\r\n      tap(\r\n        () => {\r\n          EditStateUtil.setEditState(this.frameContext, '');\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n        },\r\n        (error) => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.formErrorService.exception(this.languageService.cancelFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  // #endregion\r\n\r\n\r\n  /**\r\n   * éæ°å è½½ï¼ä»ä¾å¡çåæ¶åéæ°å è½½æ°æ®ï¼å¶ä»åºæ¯è¯·å¿ä½¿ç¨ï¼\r\n   */\r\n  public reload() {\r\n    const isAdd = EditStateUtil.getAddState(this.frameContext);\r\n    let id;\r\n    if (isAdd === true) {\r\n      id = EditStateUtil.getLastModifiedId(this.frameContext);\r\n    } else {\r\n      id = this.bindingData.list.currentId as string;\r\n    }\r\n\r\n    if (!id) {\r\n      this.repository.entityCollection.loadEntities([]);\r\n      return;\r\n    }\r\n\r\n    return this.load(id);\r\n  }\r\n  private getPath(viewModel: ViewModel, bindingPath: string, rid: string): string {\r\n    let path = '/' + rid;\r\n\r\n    const subPaths = bindingPath.split('/');\r\n    if (subPaths.length > 0) {\r\n      // eg:bindingPathå½¢å¦/edus/grades,splitåæ¯['', 'edus', 'grades']\r\n      // å æ­¤indexä»1å¼å§\r\n      for (let index = 1; index < subPaths.length - 1; index++) {\r\n        const subPath = subPaths[index];\r\n        const subData = viewModel.bindingData[subPath];\r\n        if (!subData || !subData.currentId) {\r\n          throw Error(`è·åå­è¡¨å®æ´è·¯å¾åºéï¼æ¾ä¸å°${subData}å¯¹åºçå­è¡¨ï¼æå¯¹åºå­è¡¨æ²¡æå½åè¡ã`);\r\n        }\r\n        path += `/${subPath}/${subData.currentId}`;\r\n      }\r\n    }\r\n    path += '/' + subPaths[subPaths.length - 1];\r\n\r\n    return path;\r\n  }\r\n  private resetForm(action: string) {\r\n    const validationService = this.frameContext.injector.get<ValidationService>(ValidationService, null);\r\n    return this.frameContext.repository.cancelChanges().pipe(\r\n      switchMap(() => this.commandService.execute(action).pipe(switchMap(() => {\r\n        return validationService && validationService.resetValidation() || of(null);\r\n      }))));\r\n  }\r\n  private parseParams(options: any): { action: string, id: string, sync: boolean } | null {\r\n    if (options && Object.prototype.toString.call(options) === DataType.map) {\r\n      let params = options.get(WEB_FORM_ROUTE_PARAMS_KEY);\r\n      if (params && typeof params === 'string') {\r\n        params = decodeURIComponent(params);\r\n        if (params.startsWith('{') && params.endsWith('}')) {\r\n          params = JSON.parse(params);\r\n        }\r\n        return {\r\n          action: params.action,\r\n          id: params.idToView || params.idToEdit || params.id,\r\n          sync: params.sync || false\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  private showLoadingConfirm(message: string) {\r\n    return this.formMessageService.confirm(message).pipe(\r\n      switchMap((result: boolean) => {\r\n        if (result === true) {\r\n          return of(true);\r\n        } else {\r\n          return EMPTY;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\nexport { CardDataService };\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { EMPTY, Observable, of } from 'rxjs';\r\nimport { switchMap, throwIfEmpty } from 'rxjs/operators';\r\nimport { INSIDE_DIALOG_TOKEN, TAB_EVENT } from './types';\r\nimport { NavigationService } from './navigation.service';\r\nimport { AppContext, FrameContext, Repository, UID } from '@farris/devkit';\r\nimport { FormMessageService } from './form-message.service';\r\nimport { LanguageService } from './languag.service';\r\nimport { CardDataService } from './data-services/card-data.service';\r\nimport { DataChangeDetectionService } from './data-change-detection.service';\r\n/**\r\n * å¯¼èªä¸­é´ä»¶æå¡\r\n * @scope FrameComponent\r\n */\r\n// tslint:disable: no-string-literal\r\n@Injectable()\r\nexport class NavigationMiddlewareService {\r\n  private repository: Repository<any>;\r\n\r\n  private appContext: AppContext;\r\n  constructor(\r\n    private navigationService: NavigationService,\r\n    private frameContext: FrameContext,\r\n    private msgService: FormMessageService,\r\n    @Optional() private languageService: LanguageService,\r\n    private cardDataService: CardDataService\r\n  ) {\r\n    this.repository = frameContext.repository;\r\n    if (!this.languageService) {\r\n      this.languageService = LanguageService.getInstance();\r\n    }\r\n    if (this.frameContext) {\r\n      this.appContext = this.frameContext.getFormAppContext() || null;\r\n    }\r\n  }\r\n  /**\r\n   * å³é­åå¤ç\r\n   */\r\n  public onClosing() {\r\n    if (this.isInDialog()) {\r\n      return;\r\n    }\r\n    this.navigationService.addEventListener(TAB_EVENT.onTabClosing, (options) => {\r\n      if (!this.frameContext || this.frameContext.isDisposed) {\r\n        return of(true);\r\n      }\r\n      return this.isChanged.pipe(switchMap((changed: boolean) => {\r\n        if (changed && !this.appContext.opened) {\r\n          // å¦æéè¦ç¨æ·ç¡®è®¤å°±åæ¢å°å½åtab\r\n          if (options && options.beforeCloseHandle && typeof options.beforeCloseHandle === 'function') {\r\n            options.beforeCloseHandle({ selectedChange: true });\r\n          }\r\n          const conform = this.msgService.question(this.languageService['exitWithoutSave']);\r\n          /*è®°å½å¼¹çªå·²æå¼*/\r\n          this.appContext.opened = true;\r\n          return conform.pipe(\r\n            switchMap((result: boolean) => {\r\n              this.appContext.opened = false;\r\n              if (result) {\r\n                /*è®°å½ç¨æ·å³é­å¼¹çª*/\r\n                if (!!this.cardDataService) {\r\n                  const revert$ = this.cardDataService.revert(options);\r\n                  return revert$.pipe(\r\n                    switchMap(() => of(result))\r\n                  );\r\n                }\r\n              }\r\n              return of(result);\r\n            })\r\n          );\r\n        } else if (changed && this.appContext.opened) {\r\n          return of(false);\r\n        } else {\r\n          return of(true);\r\n        }\r\n      }));\r\n    });\r\n  }\r\n  /**\r\n   * æ¯å¦å¨æ¯å¼¹çªçªå£å\r\n   */\r\n  private isInDialog() {\r\n    let frameContext = this.frameContext;\r\n    let isDialogRootComponent = frameContext.frameComponent['isDialogRootComponent'] || false;\r\n    while (frameContext.parent !== null && !isDialogRootComponent) {\r\n      frameContext = frameContext.parent;\r\n      isDialogRootComponent = frameContext.frameComponent['isDialogRootComponent'];\r\n    }\r\n    if (!isDialogRootComponent) {\r\n      isDialogRootComponent = this.frameContext.injector.get<boolean>(INSIDE_DIALOG_TOKEN, false);\r\n    }\r\n    return isDialogRootComponent;\r\n  }\r\n  /**\r\n   * è·åtabid,å¦ætargetIdå­å¨åç´æ¥ä½¿ç¨targetId\r\n   * @description å°ç¨æ·è¦æ¥ççæ°æ®idè½¬æ¢ä¸ºè¿è¡æ¡æ¶éè¦çtabId\r\n   * @param params - routeråæ°\r\n   * @param targetId - è¦ç¼è¾/æ¥ççæ°æ®id\r\n   */\r\n  public getTabId(params: string, targetId: string): any {\r\n    if (!!targetId) {\r\n      return targetId;\r\n    }\r\n    let paramsObj: any = null;\r\n    if (!!params && params.startsWith('{') && params.endsWith('}')) {\r\n      paramsObj = JSON.parse(params);\r\n    }\r\n    let paramId = null;\r\n    if (paramsObj && paramsObj.hasOwnProperty('id') && !!paramsObj.id) {\r\n      paramId = paramsObj.id;\r\n    } else {\r\n      paramId = UID.create();\r\n    }\r\n    return paramId;\r\n  }\r\n  /**\r\n   * æ¯å¦ææªä¿å­çåæ´\r\n   */\r\n  private get isChanged(): Observable<boolean> {\r\n    return DataChangeDetectionService.hasChange(this.frameContext).pipe(throwIfEmpty(()=>EMPTY));\r\n  }\r\n}\r\n","/*\r\n * @Author: aalizzwell\r\n * @Date: 2019-08-05 11:48:27\r\n * @Last Modified by: aalizzwell\r\n * @Last Modified time: 2019-08-06 15:01:53\r\n */\r\n\r\nimport { Injectable, Optional } from '@angular/core';\r\nimport { EMPTY, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { FrameContext, Repository, ViewModel } from '@farris/devkit';\r\nimport { FormMessageService } from './form-message.service';\r\nimport { LanguageService } from './languag.service';\r\nimport { BefRepositoryUtil, BefRepository } from '@farris/bef';\r\nimport { CommandService } from './command-service';\r\n\r\n// tslint:disable: no-string-literal\r\n/**\r\n * Gridä¸­é´ä»¶æå¡\r\n * @scope FrameComponent\r\n */\r\n@Injectable()\r\nexport class GridMiddlewareService {\r\n  private repository: Repository<any>;\r\n\r\n  constructor(\r\n    private frameContext: FrameContext,\r\n    private msgService: FormMessageService,\r\n    @Optional() private languageService: LanguageService,\r\n    private viewModel: ViewModel,\r\n    private commandService: CommandService\r\n  ) {\r\n    this.repository = this.frameContext.repository;\r\n    if (!this.languageService) {\r\n      this.languageService = LanguageService.getInstance();\r\n    }\r\n  }\r\n  /**\r\n   * é¡µç åæ¢å\r\n   */\r\n  public onPageChanging() {\r\n    if (this.isChanged) {\r\n      return this.msgService.question(this.languageService['gridDataNotSave']).pipe(\r\n        switchMap((result: boolean) => {\r\n          if (!result) {\r\n            return EMPTY;\r\n          } else {\r\n            return of(true);\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      return of(true);\r\n    }\r\n  }\r\n  /**\r\n   * è¡¨æ ¼è¿æ»¤\r\n   * @param commandName å½ä»¤åç§°\r\n   * @param frameId frameId\r\n   * @returns \r\n   */\r\n  public filter(commandName: string, frameId: string) {\r\n    const self: any = this;\r\n    let filters = self.context && self.context.eventParam || [];\r\n    if (typeof (filters) === 'string') {\r\n      filters = JSON.parse(filters);\r\n    }\r\n    // æ¥è¯¢æ¶éç½®é¡µç ä¸ºç¬¬ä¸é¡µ\r\n    this.viewModel.frameContext.repository.entityCollection.pageIndex = 1;\r\n    this.viewModel.frameContext.repository.filterConditionManager.setConditions(this.viewModel.bindingPath, filters);\r\n    return this.commandService.execute(commandName, frameId);\r\n  }\r\n  /**\r\n   * æ¯å¦ææªä¿å­çåæ´\r\n   */\r\n  private get isChanged(): boolean {\r\n    const befRepository = this.repository as BefRepository<any>;\r\n    return BefRepositoryUtil.isExistUnsaveData(befRepository);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { QuerystringService } from './querystring';\r\nimport { RuntimeFrameworkService } from './rtf-service';\r\nimport { of, Observable, BehaviorSubject, Subject } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n// tslint:disable: no-string-literal\r\n/**\r\n * åæ°æå¡\r\n * @scope FormModule\r\n */\r\n@Injectable()\r\nexport class ParamService {\r\n  constructor(\r\n    private querystringService: QuerystringService,\r\n    private runtimeFrameworkService: RuntimeFrameworkService\r\n  ) { }\r\n  /**\r\n   * ééè·åææåæ°\r\n   */\r\n  public get params(): Observable<{ [propName: string]: any }> {\r\n    // åä»hashä¸­è·ååæ°\r\n    const hash = window.location.hash;\r\n    const params = this.querystringService.parse(hash);\r\n    /*\r\n    const appMode = params.appMode;\r\n    // appModeæ²¡æå®ä¹ï¼è®¤ä¸ºæ¯èè¡¨å,appMode = mdi æ spa\r\n    if (typeof appMode === 'undefined' || appMode === null) {\r\n        return of(params);\r\n    }\r\n    // appModeå­å¨ï¼ä½ä¸ºç©ºï¼ä¹è®¤ä¸ºæ¯èè¡¨å\r\n    if (appMode.length < 1) {\r\n        return of(params);\r\n    }\r\n    // æ°è¡¨åï¼ä½¿ç¨iframeæ¨¡å¼\r\n    if (appMode.toLowerCase() === 'mdi') {\r\n        return of(params);\r\n    }\r\n    */\r\n    // è·åtabIdï¼ææ°çæ¬ä¸å®ætabIdï¼å¦æåä¸å°tabIdåè®¤ä¸ºæ¯èè¡¨åï¼ç´æ¥ä»urlè·ååæ°\r\n    const tabId = params.tabId;\r\n    if (!tabId) {\r\n      // throw new Error('TabId can`t be empty!');\r\n      return of(params);\r\n    }\r\n    const subject = new Subject<any>();\r\n    // ç®¡éåæ°eå¯è½ä¸ºobjectãMapç±»å\r\n    this.runtimeFrameworkService.addEventListener(tabId, (e: any) => {\r\n      let map = {};\r\n      if (e instanceof Map || (e && typeof (e['get']) === 'function' && typeof e['entries'] === 'function')) {\r\n        map = this.parseMapParams(e);\r\n      }\r\n      let args = {};\r\n      if (e instanceof Map || (e && typeof (e['get']) === 'function' && typeof e['entries'] === 'function')) {\r\n        args = new Map(e);\r\n      } else {\r\n        args = Object.assign({}, e);\r\n      }\r\n      setTimeout(() => {\r\n        subject.next(Object.assign({}, args, map, params));\r\n      }, 0);\r\n    }, params);\r\n    return subject.asObservable();\r\n  }\r\n  /**\r\n   * è§£æmapç±»åçåæ°\r\n   * @param params params\r\n   */\r\n  private parseMapParams(params: Map<any, any>) {\r\n    const map = {};\r\n    map['WEB_FORM_ROUTE_PARAMS'] = decodeURIComponent(params.get('WEB_FORM_ROUTE_PARAMS'));\r\n    params.forEach((value, key) => {\r\n      if (key !== 'WEB_FORM_ROUTE_PARAMS') {\r\n        map[key] = value;\r\n      }\r\n    });\r\n    return map;\r\n  }\r\n  /**\r\n   * è·åparamåæ°\r\n   * @param param key\r\n   */\r\n  public get(param: string): Observable<any> {\r\n    return this.params.pipe(\r\n      switchMap(options => {\r\n        if (!!options && options.hasOwnProperty(param)) {\r\n          return of(options.param);\r\n        } else {\r\n          return of(undefined);\r\n        }\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * åæ°è½¬ä¸ºå¯¹è±¡\r\n   */\r\n  public parse(): Observable<any> {\r\n    return this.params.pipe(\r\n      switchMap(options => {\r\n        return of(options);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Keybinding, ViewModel } from '@farris/devkit'\r\nimport * as Mousetrap from 'mousetrap';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst enum CharCode {\r\n\r\n  Digit0 = 48,\r\n  Digit1 = 49,\r\n  Digit2 = 50,\r\n  Digit3 = 51,\r\n  Digit4 = 52,\r\n  Digit5 = 53,\r\n  Digit6 = 54,\r\n  Digit7 = 55,\r\n  Digit8 = 56,\r\n  Digit9 = 57,\r\n\r\n  A = 65,\r\n  B = 66,\r\n  C = 67,\r\n  D = 68,\r\n  E = 69,\r\n  F = 70,\r\n  G = 71,\r\n  H = 72,\r\n  I = 73,\r\n  J = 74,\r\n  K = 75,\r\n  L = 76,\r\n  M = 77,\r\n  N = 78,\r\n  O = 79,\r\n  P = 80,\r\n  Q = 81,\r\n  R = 82,\r\n  S = 83,\r\n  T = 84,\r\n  U = 85,\r\n  V = 86,\r\n  W = 87,\r\n  X = 88,\r\n  Y = 89,\r\n  Z = 90,\r\n\r\n  a = 97,\r\n  b = 98,\r\n  c = 99,\r\n  d = 100,\r\n  e = 101,\r\n  f = 102,\r\n  g = 103,\r\n  h = 104,\r\n  i = 105,\r\n  j = 106,\r\n  k = 107,\r\n  l = 108,\r\n  m = 109,\r\n  n = 110,\r\n  o = 111,\r\n  p = 112,\r\n  q = 113,\r\n  r = 114,\r\n  s = 115,\r\n  t = 116,\r\n  u = 117,\r\n  v = 118,\r\n  w = 119,\r\n  x = 120,\r\n  y = 121,\r\n  z = 122\r\n}\r\n\r\n/**\r\n * å¿«æ·é®æå¡\r\n * @scope FormModule\r\n */\r\n@Injectable()\r\nexport class KeybindingService {\r\n  private keyMap: Map<String, () => Observable<any>>;\r\n  private bindingProvider: Mousetrap;\r\n  private ready: boolean;\r\n\r\n  constructor() {\r\n    this.keyMap = new Map<String, () => Observable<any>>();\r\n    this.bindingProvider = Mousetrap.default;\r\n    this.ready = true;\r\n  }\r\n\r\n  /**\r\n   * å¯¹è§å¾æ¨¡åè®¾ç½®çå¿«æ·é®è¿è¡ç»å®å¤ç\r\n   * @param viewModel è§å¾æ¨¡å\r\n   */\r\n  public bind(viewModel: ViewModel) {\r\n    viewModel.keybindingMap.forEach((keyBinding, method) => {\r\n      this.register(keyBinding, () => {\r\n        return viewModel[method]();\r\n      });\r\n    });\r\n  }\r\n\r\n\t/**\r\n\t * æ³¨åå¿«æ·é®\r\n\t * @param binding é®çç»å®ä¿¡æ¯\r\n\t * @param handler ååºäºä»¶\r\n\t */\r\n  public register(binding: Keybinding, handler: () => Observable<any>) {\r\n    var combo = this._getCombo(binding);\r\n    if (combo) {\r\n      this.keyMap.set(combo, handler);\r\n      if (binding.ctrlKey && binding.altKey && !binding.shiftKey) {\r\n        // å®éåç°ï¼ctrl+altç»åï¼åªè½è§¦åkeyupäºä»¶\r\n        this.bindingProvider.bind(combo, this._dispatch.bind(this), 'keyup');\r\n      } else {\r\n        this.bindingProvider.bind(combo, this._dispatch.bind(this));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * åæ¶å¿«æ·é®æ³¨å\r\n   * @param binding é®çç»å®ä¿¡æ¯ \r\n   */\r\n  public unregister(binding: Keybinding) {\r\n    var combo = this._getCombo(binding);\r\n    if (combo) {\r\n      this.keyMap.delete(combo);\r\n      this.bindingProvider.unbind(combo);\r\n    }\r\n  }\r\n\r\n  private _dispatch(e: KeyboardEvent): boolean {\r\n    if (e.repeat) return false;\r\n    if (this.ready) {\r\n      var combo = this._getCombo(e);\r\n      if (combo && this.keyMap.has(combo)) {\r\n        this.ready = false;\r\n        this.keyMap.get(combo)().subscribe(() => {\r\n          this.ready = true;\r\n        }, (error) => {\r\n          this.ready = true;\r\n        }, () => {\r\n          this.ready = true;\r\n        });\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\t/**\r\n\t * è¿åctrl+shift+alt+aå½¢å¼çç»åå­ç¬¦ä¸²ï¼å¨é¨ä¸ºå°å\r\n\t * @param keyInfo \r\n\t */\r\n  private _getCombo(keyInfo: Keybinding | KeyboardEvent): String | null {\r\n    var key = keyInfo.key.toLowerCase();\r\n    if (key.length != 1 || key.charCodeAt(0) < CharCode.a || key.charCodeAt(0) > CharCode.z) {\r\n      console.warn(\"å¿«æ·é®å­æ¯å½¢å¼ä¸ºa-z\");\r\n      return null;\r\n    }\r\n    var combo = (keyInfo.ctrlKey ? 'ctrl+' : '')\r\n      + (keyInfo.shiftKey ? 'shift+' : '')\r\n      + (keyInfo.altKey ? 'alt+' : '')\r\n      + (keyInfo.metaKey ? 'meta+' : '')\r\n      + key;\r\n\r\n    if (combo.length == 1) {\r\n      console.warn(\"å¿«æ·é®è³å°åå«ä¸ä¸ªModifieré®\");\r\n      return null;\r\n    }\r\n\r\n    return combo;\r\n  }\r\n}","// tslint:disable: max-line-length\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * @deprecated å·²åºé¤\r\n */\r\n@Injectable()\r\nclass FilterConditionService {\r\n}\r\nexport { FilterConditionService };\r\n","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * UIç¶ææå¡\r\n * @scope FrameComponent\r\n */\r\n@Injectable()\r\nclass UIStateService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  getState(componentId: string, stateName: string) {\r\n    throw new Error('Not Implemented');\r\n  }\r\n\r\n  setState(componentId: string, stateName: string, value: any) {\r\n    throw new Error('Not Implemented');\r\n  }\r\n}\r\n\r\nexport { UIStateService };\r\n","import { Injectable, ElementRef } from '@angular/core';\r\nimport { StateMachine, FrameContext, AppContext } from '@farris/devkit';\r\n// tslint:disable: max-line-length\r\n/**\r\n * ç¶ææºæå¡\r\n * @scope FrameComponent\r\n */\r\n@Injectable()\r\nclass StateMachineService {\r\n\r\n  constructor(\r\n    private stateMachine: StateMachine\r\n  ) {\r\n    if (this.stateMachine.initialState.name === 'init') {\r\n      window.setTimeout(() => {\r\n        this.initFormState();\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  private _clsDefaultName = 'f-form-state-default';\r\n  private _initLoad = true;\r\n  private _currentFrameContext: any\r\n\r\n  transit(action: string) {\r\n    if (action && typeof this.stateMachine[action] === 'function') {\r\n      this.stateMachine[action]();\r\n      this._currentFrameContext = this['context'] && this['context']['frameContext'];\r\n      if (this._initLoad) {\r\n        this.initFormState();\r\n        this._initLoad = false;\r\n      }\r\n      if (!this._currentFrameContext) {\r\n        return;\r\n      }\r\n      const currentRootFrameContext = this.getCurrentRootFrameContext(this._currentFrameContext);\r\n      if (!!currentRootFrameContext) {\r\n        this.toggleFormState(action, currentRootFrameContext);\r\n      }\r\n    }\r\n  }\r\n\r\n  private getCurrentRootFrameContext(currentFrameContext: FrameContext): FrameContext {\r\n    let currentRootFrameContext: FrameContext;\r\n    this.getAllRootFrameContext().forEach((rootFc: FrameContext) => {\r\n      if (currentFrameContext.namespace === rootFc.namespace) {\r\n        currentRootFrameContext = rootFc;\r\n      }\r\n    })\r\n    return currentRootFrameContext;\r\n  }\r\n\r\n  private getFrameContextManagerMap() {\r\n    if (this.stateMachine && this.stateMachine.frameContext) {\r\n      const appContext = this.stateMachine.frameContext.appContext as AppContext;\r\n      if (appContext) {\r\n        const frameContextManager = appContext.frameContextManager;\r\n        return frameContextManager.getFrameContextMap();\r\n      }\r\n    }\r\n    return null;\r\n    // return this.stateMachine && this.stateMachine.frameContext && this.stateMachine.frameContext.appContext && this.stateMachine.frameContext.appContext.frameContextManager && this.stateMachine.frameContext.appContext.frameContextManager.getFrameContextMap();\r\n  }\r\n\r\n  private getAllRootFrameContext(): any[] {\r\n    const rootFrameContextArr = [];\r\n    const frameContexts = this.getFrameContextManagerMap();\r\n    if (frameContexts) {\r\n      frameContexts.forEach(item => {\r\n        if ((item['namespace'] === '' && item['parent'] === null) || (item['parent'] !== null && item['namespace'] !== item['parent']['namespace'])) {\r\n          rootFrameContextArr.push(item);\r\n        }\r\n      })\r\n    }\r\n    return rootFrameContextArr;\r\n  }\r\n\r\n  private initFormState() {\r\n    if (!this.getFrameContextManagerMap()) {\r\n      return;\r\n    }\r\n    this.getAllRootFrameContext().forEach((rootFc: FrameContext) => {\r\n      const rootComponent = rootFc.injector.get<ElementRef>(ElementRef, null) || null;\r\n      if (!rootComponent || !rootComponent.nativeElement) {\r\n        return;\r\n      }\r\n      if (!rootComponent.nativeElement.className.includes(this._clsDefaultName) && !rootComponent.nativeElement.className.includes('f-form-state-create') && !rootComponent.nativeElement.className.includes('f-form-state-edit')) {\r\n        this.addCssClass(rootComponent, this._clsDefaultName);\r\n      }\r\n    })\r\n  }\r\n\r\n  private toggleFormState(action: string, frameContext: FrameContext) {\r\n    const rootComponent = frameContext.injector.get<ElementRef>(ElementRef, null) || null;\r\n    if (!rootComponent || !rootComponent.nativeElement || !action) {\r\n      return;\r\n    }\r\n    action = action.toLowerCase();\r\n    if (action && ['create', 'edit'].includes(action)) {\r\n      if (action === 'create') {\r\n        this.addCssClass(rootComponent, 'f-form-state-create');\r\n      } else if (action === 'edit') {\r\n        this.addCssClass(rootComponent, 'f-form-state-edit');\r\n      }\r\n      this.removeCssClass(rootComponent, this._clsDefaultName);\r\n    } else {\r\n      ['f-form-state-create', 'f-form-state-edit'].forEach(item => this.removeCssClass(rootComponent, item));\r\n      this.addCssClass(rootComponent, this._clsDefaultName);\r\n    }\r\n  }\r\n  private addCssClass(elementRef: ElementRef, className: string) {\r\n    if (!elementRef || !className || !elementRef.nativeElement) {\r\n      return;\r\n    }\r\n    const originalClassName: string = elementRef.nativeElement.className || '';\r\n    if (!originalClassName.includes(className)) {\r\n      elementRef.nativeElement.className = `${originalClassName} ${className}`;\r\n    }\r\n  }\r\n  private removeCssClass(elementRef: ElementRef, className: string) {\r\n    if (!elementRef || !className || !elementRef.nativeElement) {\r\n      return;\r\n    }\r\n    const originalClassName: string = elementRef.nativeElement.className || '';\r\n    if (originalClassName.includes(className)) {\r\n      elementRef.nativeElement.className = originalClassName.split(' ').filter(p => p && p !== className).join(' ');\r\n    }\r\n  }\r\n  private getFormRootComponent() {\r\n    if (this.stateMachine && this.stateMachine.frameContext) {\r\n      const viewContext = this.stateMachine.frameContext;\r\n      if (viewContext) {\r\n        const virtualRootContext = viewContext.getVirtualRootFrameContext();\r\n        if (virtualRootContext) {\r\n          const injector = virtualRootContext.injector;\r\n          if (typeof injector.get === 'function') {\r\n            return injector.get<ElementRef>(ElementRef, null);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n    // return this.stateMachine && this.stateMachine.frameContext && this.stateMachine.frameContext.getVirtualRootFrameContext() && this.stateMachine.frameContext.getVirtualRootFrameContext().injector && typeof this.stateMachine.frameContext.getVirtualRootFrameContext().injector.get === 'function' && this.stateMachine.frameContext.getVirtualRootFrameContext().injector.get<ElementRef>(ElementRef, null) || null;\r\n  }\r\n}\r\n\r\nexport { StateMachineService };\r\n","import { Injectable } from '@angular/core';\r\nimport { AppContext, BindingData, FrameContext } from '@farris/devkit';\r\n\r\n/**\r\n * å®ä½æå¡\r\n * @scope FrameComponent\r\n */\r\n@Injectable()\r\nclass BindingDataService {\r\n\r\n  /**\r\n   * æé å½æ°\r\n   */\r\n  constructor(\r\n    private bindingData: BindingData,\r\n    private appContext: AppContext\r\n  ) { }\r\n\r\n  /**\r\n   * è®¾ç½®å½åæ¡æ¶çå½åè¡\r\n   */\r\n  setCurrentId(id: string, frameId: string) {\r\n    // let bindingData = this.bindingData;\r\n    // if (frameId) {\r\n    //   const targetContext = this.appContext.getFrameContext(frameId);\r\n    //   bindingData = targetContext.bindingData;\r\n    // }\r\n    // bindingData.list.setCurrentId(id);\r\n\r\n    // @todoï¼å¨é¨éæ°è®¾ç½®ä¸é\r\n    const frameContexts = Array.from(this.appContext.getAllFrameContexts().values());\r\n    frameContexts.forEach((frameContext: FrameContext) => {\r\n      const bindingData = frameContext.bindingData;\r\n      bindingData.list.setCurrentId(id, true, false);\r\n    });\r\n  }\r\n  public setCurrentRow(id: string, frameId: string) {\r\n    let bindingData = this.bindingData;\r\n    if (frameId) {\r\n      const targetContext = this.appContext.getFrameContext(frameId);\r\n      bindingData = targetContext.bindingData;\r\n    }\r\n    bindingData.getList().setCurrentId(id);\r\n  }\r\n}\r\n\r\nexport { BindingDataService };\r\n","import { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\nimport { FrameworkService } from '@gsp-sys/rtf-common';\r\nimport { ViewModel } from '@farris/devkit';\r\nimport { Injectable, Optional } from '@angular/core';\r\nimport { ParamService } from './param.service';\r\nimport { RuntimeFrameworkService } from './rtf-service';\r\nimport { BefRepository } from '@farris/bef';\r\nimport { isObservable } from 'rxjs';\r\n\r\n/**\r\n * åºç¨åæ°æå¡\r\n * @scope FormModule\r\n */\r\n\r\n@Injectable()\r\nexport class ApplicationParamService {\r\n  private params: any;\r\n  constructor(\r\n    @Optional() private paramService: ParamService,\r\n    @Optional() private runtimeFrameworkService: RuntimeFrameworkService,\r\n  ) {\r\n    if (!this.runtimeFrameworkService) {\r\n      this.runtimeFrameworkService = new RuntimeFrameworkService();\r\n    }\r\n  }\r\n  /**\r\n   * è§£æåæ°\r\n   */\r\n  public parseParams(route: ActivatedRoute, frameworkService: FrameworkService, viewModel: ViewModel, callback: () => void) {\r\n    const highOrderInvoke = this.highOrderInvoke(callback);\r\n    if (!this.paramService) {\r\n      route.queryParams.pipe(take(1)).subscribe((params: any) => {\r\n        this.params = params;\r\n        this.setupParams(params, frameworkService, viewModel, highOrderInvoke);\r\n      });\r\n    } else {\r\n      this.paramService.parse().pipe(take(1)).subscribe(params => {\r\n        this.params = params;\r\n        this.setupParams(params, frameworkService, viewModel, highOrderInvoke);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®åæ°\r\n   */\r\n  private setupParams(params, frameworkService: FrameworkService, viewModel: ViewModel, callback: () => void) {\r\n    if (viewModel && viewModel.frameContext && viewModel.frameContext.appContext && params.tabId) {\r\n      viewModel.frameContext.appContext.tabId = params.tabId;\r\n    }\r\n    const queryParams = this.getParams(params);\r\n    if (!queryParams) {\r\n      callback();\r\n      return;\r\n    }\r\n\r\n    // åè®¾ç½®åæ°ï¼ä¿è¯æ®éè·¯ç±ä¹è½æ­£å¸¸æ§è¡ã\r\n    this.setQueryParams(queryParams, viewModel);\r\n\r\n    const funcId = this.getFuncId(queryParams);\r\n    const appId = this.getAppId(queryParams);\r\n    if (!funcId && !appId) {\r\n      callback();\r\n      return;\r\n    }\r\n\r\n    if (funcId) {\r\n      this.setStaticParams(funcId, queryParams, frameworkService, viewModel, callback);\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n  /**\r\n   * è®¾ç½®æ¥è¯¢åæ°\r\n   */\r\n  private setQueryParams(queryParams: any, viewModel: ViewModel): any {\r\n    const parsedQueryParams = {};\r\n    // è®¾ç½®è¡¨ååæ°\r\n    // é¦åå¤æ­æ¯å¦ä¸ºå¼¹çª\r\n    const isInDialog = this.isInDialog(viewModel);\r\n    const uiState = viewModel && viewModel.uiState && viewModel.uiState.innerData || {};\r\n    // å¦ææ¯å¼¹çªï¼å¼¹çªå¤çåæ°ï¼æ è®ºè¡¨ååæ°æéæåæ°ï¼ä¸åºè¯¥è¦çå¼¹çªçåæ°ãå¼¹çªæå¼æ¶ä¼ éçåæ°ç¸å½äºå±é¨åéï¼ä¸åºè¢«è¦ç\r\n    Object.keys(queryParams).forEach((paramName: string) => {\r\n      if (!isInDialog) {\r\n        parsedQueryParams[paramName] = queryParams[paramName];\r\n      } else {\r\n        if (!uiState.hasOwnProperty(paramName)) {\r\n          parsedQueryParams[paramName] = queryParams[paramName];\r\n        }\r\n      }\r\n    });\r\n    this.updateUIState(viewModel, parsedQueryParams);\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®éæåæ°\r\n   */\r\n  private setStaticParams(\r\n    funcId: string, queryParams: any, frameworkService: FrameworkService, viewModel: ViewModel, callback: () => void\r\n  ) {\r\n    this.runtimeFrameworkService.getMenuParams(funcId, (staicParams) => {\r\n      const staticParamsObj = this.mapStaticParamsToObject(staicParams, queryParams, viewModel);\r\n      if (!staticParamsObj) {\r\n        callback();\r\n        return;\r\n      }\r\n      this.updateUIState(viewModel, staticParamsObj);\r\n      callback();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * å°staticParamsè½¬æ¢ä¸ºæ®éå¯¹è±¡\r\n   * @param staticParamsï¼å½¢å¦ï¼[{'name': 'key1', 'value': 'val1'}, {'name': 'key2', 'value': 'val2'}]\r\n   * @return å½¢å¦ï¼{key1: val1, key2: value2 }\r\n   */\r\n  private mapStaticParamsToObject(staticParams: Map<any, any>, queryParams: any, viewModel?: ViewModel): any {\r\n    if (!staticParams) {\r\n      return;\r\n    }\r\n    const inDialog = this.isInDialog(viewModel);\r\n    const uiState = viewModel && viewModel.uiState && viewModel.uiState.innerData || {};\r\n    const result = {};\r\n    staticParams.forEach((value, key, map) => {\r\n      if (!inDialog) {\r\n        // éæåæ°ä¸è½è¦çæ¥è¯¢åæ°\r\n        if (!queryParams.hasOwnProperty(key)) {\r\n          result[key] = value;\r\n        }\r\n      } else {\r\n        if (!queryParams.hasOwnProperty(key) && !uiState.hasOwnProperty(key)) {\r\n          result[key] = value;\r\n        }\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  /**\r\n   * æ¯å¦å¨å¼¹çªå\r\n   * @param viewModel viewmodel\r\n   */\r\n  private isInDialog(viewModel: ViewModel) {\r\n    let isInDialog = false;\r\n    if (viewModel && viewModel.uiState) {\r\n      // tslint:disable-next-line: max-line-length\r\n      if (viewModel.uiState.innerData && viewModel.uiState.innerData.hasOwnProperty('DEVKIT_DIALOG') || viewModel.uiState['DEVKIT_DIALOG']) {\r\n        isInDialog = true;\r\n      }\r\n    }\r\n    return isInDialog;\r\n  }\r\n  /**\r\n   * æ´æ°UIState\r\n   */\r\n  private updateUIState(viewModel: ViewModel, params: any) {\r\n    if (!viewModel || !params) {\r\n      return;\r\n    }\r\n    const uiState = viewModel.uiState;\r\n\r\n    // å¼å®¹ä½¿ç¨stringä¼ éparamså¯¹è±¡çåºæ¯\r\n    if (typeof params === 'string' && params !== '') {\r\n      params = JSON.parse(params);\r\n    }\r\n\r\n    // å¨UIStateä¸ºåæ°åå»ºå±æ§\r\n    Object.keys(params).forEach((propName: string) => {\r\n      uiState.setPropertyValue(propName, params[propName]);\r\n      if (propName && propName === 'union_session') {\r\n        let sessionInfo = params[propName];\r\n        this.setSessionInfo(viewModel, sessionInfo);\r\n      }\r\n    });\r\n  }\r\n  private setSessionInfo(viewModel: ViewModel, sessionInfo: any) {\r\n    if (!viewModel || !sessionInfo) {\r\n      return;\r\n    }\r\n    if (sessionInfo && typeof sessionInfo === 'string' && sessionInfo.startsWith('{') && sessionInfo.endsWith('}')) {\r\n      sessionInfo = JSON.parse(sessionInfo);\r\n    }\r\n    const token = sessionInfo && sessionInfo.token || null;\r\n    const sessionId = sessionInfo && sessionInfo.sessionId || null;\r\n    if (token) {\r\n      viewModel.frameContext.appContext.Token = token;\r\n    }\r\n    if (sessionId) {\r\n      const befRepository = viewModel.frameContext.repository as BefRepository<any>;\r\n      if (befRepository) {\r\n        befRepository.restService.sessionService.setBeSessionId(sessionId);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * è·ååè½èåid\r\n   */\r\n  private getFuncId(queryParams: any): any {\r\n    if (!queryParams) {\r\n      return;\r\n    }\r\n    return queryParams['funcId'];\r\n  }\r\n\r\n  /**\r\n   * è·ååºç¨id\r\n   */\r\n  private getAppId(queryParams: any): any {\r\n    if (!queryParams) {\r\n      return;\r\n    }\r\n    return queryParams['appId'];\r\n  }\r\n  private getTabId(queryParams: any) {\r\n    if (!queryParams) {\r\n      return;\r\n    }\r\n    return queryParams['tabId'];\r\n  }\r\n  /**\r\n   * è·åurlåæ°å¯¹è±¡\r\n   * @param queryParams urlåæ°\r\n   */\r\n  private getParams(queryParams: any): { [propName: string]: any } {\r\n    if (!queryParams) {\r\n      return {};\r\n    }\r\n    let result = {};\r\n    if (queryParams.hasOwnProperty('WEB_FORM_ROUTE_PARAMS')) {\r\n      let webFormRouteParams: string = queryParams['WEB_FORM_ROUTE_PARAMS'];\r\n      if (webFormRouteParams && webFormRouteParams.startsWith('{') && webFormRouteParams.endsWith('}')) {\r\n        webFormRouteParams = decodeURI(encodeURI(webFormRouteParams).replace(/%0A/g, '\\\\n').replace(/%09/g, '\\\\t').replace(/%0D/g, '\\\\r'));\r\n        result = JSON.parse(webFormRouteParams);\r\n      }\r\n      Object.keys(queryParams).forEach(prop => {\r\n        if (prop !== 'WEB_FORM_ROUTE_PARAMS') {\r\n          result[prop] = queryParams[prop];\r\n        }\r\n      });\r\n      return result;\r\n    }\r\n    return queryParams;\r\n  }\r\n  private highOrderInvoke(callback) {\r\n    return () => {\r\n      try {\r\n        const queryParams = this.getParams(this.params);\r\n        const tabId = this.getTabId(queryParams);\r\n        if (tabId) {\r\n          const controlEvent = this.runtimeFrameworkService.getMenuSwitchControlEvent();\r\n          if (controlEvent && isObservable(controlEvent)) {\r\n            controlEvent.subscribe((event: any) => {\r\n              if (event) {\r\n                event.next('ok');\r\n              }\r\n            });\r\n          }\r\n        }\r\n      } catch (e) { console.warn(e); }\r\n      if (callback && typeof callback === 'function') {\r\n        callback();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FrameContext, BindingData, BindingList, BindingObject } from '@farris/devkit';\r\n\r\n/**\r\n * å®ä½éåæå¡\r\n * @todo\r\n * å®ä½å±æ²¡æå°è£ç¸å³æ¹æ³ï¼ä¸´æ¶éè¿BindingDataæ¥è·åæ°æ®\r\n */\r\n@Injectable()\r\nclass EntityTraversingService {\r\n\r\n  private get bindingData(): BindingData {\r\n    return this.frameContext.bindingData;\r\n  }\r\n\r\n  constructor(private frameContext: FrameContext) {\r\n  }\r\n\r\n  /**\r\n   * è·åå¼\r\n   */\r\n  public getPropValue(path: string[]): any {\r\n    return this.bindingData.getValue(path);\r\n  }\r\n\r\n  /**\r\n   * è·åå®ä½æ°æ®\r\n   */\r\n  public getEntityData(path: string[]): any {\r\n    let bindingObj: BindingObject;\r\n    const bindingListOrObject = this.bindingData.getValue(path);\r\n    if (bindingListOrObject instanceof BindingList === true) {\r\n      bindingObj = bindingListOrObject.currentItem;\r\n    } else {\r\n      bindingObj = bindingListOrObject;\r\n    }\r\n    return bindingObj.toJSON();\r\n  }\r\n\r\n  /**\r\n   * è·åå®ä½åè¡¨æ°æ®\r\n   */\r\n  public getEntityListData(path: string[]): any[] {\r\n    const bindingList = this.bindingData.getValue(path) as BindingList;\r\n    return bindingList.toJSON();\r\n  }\r\n\r\n}\r\n\r\nexport { EntityTraversingService };\r\n","import { Injectable } from '@angular/core';\r\nimport { FrameContext, BindingData } from '@farris/devkit';\r\n\r\n@Injectable()\r\nclass EntityManipulationService {\r\n\r\n  private get bindingData(): BindingData {\r\n    return this.frameContext.bindingData;\r\n  }\r\n\r\n  constructor(private frameContext: FrameContext) {\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®pathå¯¹åºçå­æ®µå¼\r\n   */\r\n  public setPropValue(path: string[], value: any): any {\r\n\r\n    // å®ä½å±è¿æ²¡æå°è£ï¼ä¸´æ¶ç¨BindingDataç¸å³æ¹æ³ä»£æ¿\r\n    this.bindingData.setValue(path, value, true, true);\r\n  }\r\n\r\n}\r\n\r\nexport { EntityManipulationService };\r\n","import { Injectable } from '@angular/core';\r\nimport { FrameContext, BindingData, BindingList, BindingObject } from '@farris/devkit';\r\nimport { EntityTraversingService } from './entity-traversing.service';\r\n\r\ninterface SplitedPath {\r\n  listPath: string[];\r\n  propPath: string[];\r\n}\r\n\r\n/**\r\n * å®ä½èåæå¡\r\n */\r\n@Injectable()\r\nclass EntityAggregationService {\r\n\r\n  private get bindingData(): BindingData {\r\n    return this.frameContext.bindingData;\r\n  }\r\n\r\n  private traversingService: EntityTraversingService;\r\n\r\n  constructor(private frameContext: FrameContext) {\r\n    this.traversingService   = this.frameContext.injector.get<EntityTraversingService>(EntityTraversingService);\r\n  }\r\n\r\n  /**\r\n   * è·åpathå¯¹åºåè¡¨è®°å½çæ¡æ°\r\n   */\r\n  public count(path: string[]): number {\r\n    const splitedPath = this.splitPath(path);\r\n    const entityListData = this.traversingService.getEntityListData(splitedPath.listPath);\r\n    return entityListData.length;\r\n  }\r\n\r\n  /**\r\n   * è·åpathå¯¹åºå­æ®µçå\r\n   */\r\n  public sum(path: string[]) {\r\n    const splitedPath = this.splitPath(path);\r\n    const entityListData = this.traversingService.getEntityListData(splitedPath.listPath);\r\n\r\n    const total = entityListData.reduce((accTotal: number, entityData: any) => {\r\n      let propValue = parseFloat(this.getPropValue(entityData, splitedPath.propPath));\r\n      propValue = isNaN(propValue) ? 0 : propValue;\r\n      accTotal += propValue;\r\n      return accTotal;\r\n    }, 0);\r\n    return total;\r\n  }\r\n\r\n  /**\r\n   * è·åpathå¯¹åºå­æ®µçå¹³åå¼\r\n   */\r\n  public avg(path: string[]) {\r\n    const count = this.count(path);\r\n    const total = this.sum(path);\r\n    return count !== 0 ? total / count : 0;\r\n  }\r\n\r\n  /**\r\n   * è·åpathå¯¹åºå­æ®µçæå¤§å¼\r\n   */\r\n  public max(path: string[]): number {\r\n    const splitedPath = this.splitPath(path);\r\n    const entityListData = this.traversingService.getEntityListData(splitedPath.listPath);\r\n\r\n    const max =  entityListData.reduce((accMax: number, entityData: any) => {\r\n      const propValue = parseFloat(this.getPropValue(entityData, splitedPath.propPath));\r\n      if (isNaN(propValue) === false && ( !accMax || propValue > accMax)) {\r\n        accMax = propValue;\r\n      }\r\n      return accMax;\r\n    }, null);\r\n    return max ? max : 0;\r\n  }\r\n\r\n  /**\r\n   * è·åpathå¯¹åºå­æ®µçæå°å¼\r\n   */\r\n  public min(path: string[]): number {\r\n    const splitedPath = this.splitPath(path);\r\n    const entityListData = this.traversingService.getEntityListData(splitedPath.listPath);\r\n\r\n    const min = entityListData.reduce((accMin: number, entityData: any) => {\r\n      const propValue = parseFloat(this.getPropValue(entityData, splitedPath.propPath));\r\n      if (isNaN(propValue) === false && ( !accMin || propValue < accMin)) {\r\n        accMin = propValue;\r\n      }\r\n      return accMin;\r\n    }, null);\r\n    return min ? min : 0;\r\n  }\r\n\r\n  /**\r\n   * è·åå±æ§å¼\r\n   */\r\n  private getPropValue(entityData: any, path: string[]) {\r\n    let currentData = entityData;\r\n    path.forEach((pathItem: string) => {\r\n\r\n      // æåéåºçé½éç½®ä¸ºnullï¼ä¸»è¦éå¯¹å³èå¯¹è±¡æªèµå¼åºæ¯\r\n      if (!currentData) {\r\n        currentData = null;\r\n        return;\r\n      }\r\n      currentData = currentData[pathItem];\r\n    });\r\n\r\n    return currentData;\r\n  }\r\n\r\n  /**\r\n   * åéè·¯å¾ï¼åéç¬¦åè¡¨è·¯å¾åå±æ§è·¯å¾\r\n   * @return å½¢å¦ {parentListPath: [], propertyPath: []}\r\n   */\r\n  private splitPath(path: string[]): SplitedPath {\r\n    const listPath = path.concat([]);\r\n    const propPath = [];\r\n    let currentNode = this.bindingData.getValue(listPath);\r\n    while (currentNode instanceof BindingList !== true) {\r\n      const propPathItem = listPath.pop();\r\n      if (!propPathItem) {\r\n        return;\r\n      }\r\n      propPath.unshift(propPathItem);\r\n      currentNode = this.bindingData.getValue(listPath);\r\n    }\r\n\r\n    return {\r\n      listPath: listPath,\r\n      propPath: propPath\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport { EntityAggregationService };\r\n","/*\r\n * @Author: aalizzwell \r\n * @Date: 2019-05-29 19:07:30 \r\n * @Last Modified by: aalizzwell\r\n * @Last Modified time: 2019-05-29 19:31:19\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { BindingData } from '@farris/devkit';\r\n\r\n/**\r\n * EntityListæå¡\r\n * @scope FrameComponent\r\n */\r\n@Injectable()\r\nclass EntityListService {\r\n\r\n  constructor(private bindingData: BindingData) {}\r\n\r\n    /**\r\n     * è·åå½åé¡µç \r\n     */\r\n    public get pageIndex() {\r\n        return this.bindingData.list.pageIndex;\r\n    }\r\n\r\n    /**\r\n     * è·åå½ååé¡µå¤§å°\r\n     */\r\n    public get pageSize() {\r\n        return this.bindingData.list.pageSize;\r\n    }\r\n}\r\n\r\nexport { EntityListService };\r\n","import { Injectable } from '@angular/core';\r\nimport { FrameContext } from '@farris/devkit';\r\nimport { EntityTraversingService } from './entity-traversing.service';\r\nimport { EntityManipulationService } from './entity-manipulation.service';\r\nimport { EntityAggregationService} from './entity-aggregation.service';\r\n\r\n/**\r\n * å®ä½æå¡\r\n * @scope FrameComponent\r\n */\r\n@Injectable()\r\nclass EntityService {\r\n\r\n  private traversingService: EntityTraversingService;\r\n\r\n  private manipulationService: EntityManipulationService;\r\n\r\n  private aggregationService: EntityAggregationService;\r\n\r\n  constructor(private frameContext: FrameContext) {\r\n    const injector = this.frameContext.injector;\r\n    this.traversingService   = injector.get<EntityTraversingService>(EntityTraversingService);\r\n    this.manipulationService = injector.get<EntityManipulationService>(EntityManipulationService);\r\n    this.aggregationService  = injector.get<EntityAggregationService>(EntityAggregationService);\r\n  }\r\n\r\n  /**\r\n   * è·åpathå¯¹åºçå±æ§å¼\r\n   */\r\n  public getPropValue(path: string[]): any {\r\n    return this.traversingService.getPropValue(path);\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®pathå¯¹åºçå±æ§å¼\r\n   */\r\n  public setPropValue(path: string[], value: any): void {\r\n    return this.manipulationService.setPropValue(path, value);\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®pathå¯¹åºçEntityæ°æ®\r\n   */\r\n  public getEntityData(path: string[]): any {\r\n    return this.traversingService.getEntityData(path);\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®pathå¯¹åºçEntityListæ°æ®\r\n   */\r\n  public getEntityListData(path: string[]): any {\r\n    return this.traversingService.getEntityListData(path);\r\n  }\r\n\r\n  /**\r\n   * è·åpathå¯¹åºEntityListè®°å½æ°\r\n   */\r\n  public count(path: string[]): number {\r\n    return this.aggregationService.count(path);\r\n  }\r\n\r\n  /**\r\n   * è·åpathå¯¹åºå±æ§çåè®¡å¼\r\n   */\r\n  public sum(path: string[]): number {\r\n    return this.aggregationService.sum(path);\r\n  }\r\n\r\n  /**\r\n   * è·åpathå¯¹åºå±æ§çå¹³åå¼\r\n   */\r\n  public avg(path: string[]): number {\r\n    return this.aggregationService.avg(path);\r\n  }\r\n\r\n  /**\r\n   * è·åpathå¯¹åºå±æ§çæå¤§å¼\r\n   */\r\n  public max(path: string[]): number {\r\n    return this.aggregationService.max(path);\r\n  }\r\n\r\n  /**\r\n   * è·åpathå¯¹åºå±æ§çæå°å¼\r\n   */\r\n  public min(path: string[]): number {\r\n    return this.aggregationService.min(path);\r\n  }\r\n}\r\n\r\nexport { EntityService };\r\n","import { Injectable, Injector } from \"@angular/core\";\r\nimport { AppContext, DataTypeInfo, Entity, FrameContext, Repository } from \"@farris/devkit\";\r\n\r\n@Injectable()\r\nexport class BindingPathService {\r\n  constructor(private injector: Injector, private appContext: AppContext, private repository: Repository<Entity>) { }\r\n  /**\r\n   * è·åç»ä»¶ä¸ä¸æçç»å®è·¯å¾\r\n   * @param frameContext ç»ä»¶ä¸ä¸æ\r\n   * @returns \r\n   */\r\n  public getBindingPathsByFrameContext(frameContext: FrameContext): string[] {\r\n    return frameContext && frameContext.viewModel && frameContext.viewModel.bindingPath && frameContext.viewModel.bindingPath.split('/').filter(p => p) || null;\r\n  }\r\n  /**\r\n   * éè¿BEè¡¨åè·åbindingPath\r\n   * @param dataTypeInfo \r\n   * @param tableName \r\n   * @param paths \r\n   * @param level\r\n   * @returns \r\n   */\r\n  public getBindingPathsByTableName(dataTypeInfo: DataTypeInfo, tableName: string, paths: string[] = [], level: number = 0): string[] {\r\n    level++;\r\n    if (dataTypeInfo.entityInfo && (dataTypeInfo.entityInfo.nodeCode === tableName || dataTypeInfo.entityInfo.originalCode === tableName)) {\r\n      if (level !== 1) {\r\n        paths.push(dataTypeInfo.entityInfo.nodeCode);\r\n      }\r\n      return paths;\r\n    }\r\n    const props = Array.from(dataTypeInfo.propInfoMap.values()).filter(p => p.typeInfo);\r\n    if (props.length < 1) {\r\n      paths = [];\r\n      return paths;\r\n    }\r\n    if (dataTypeInfo.entityInfo) {\r\n      if (level !== 1) {\r\n        paths.push(dataTypeInfo.entityInfo.nodeCode);\r\n      }\r\n    }\r\n\r\n    for (let idx = 0; idx < props.length; idx++) {\r\n      const dataTypeInfo = props[idx].typeInfo;\r\n      const path = this.getBindingPathsByTableName(dataTypeInfo, tableName, paths, level);\r\n      if (!path || path.length < 1) {\r\n        continue;\r\n      } else {\r\n        paths = paths.concat(path);\r\n        return paths;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * è·åå±æ§è·¯å¾ä¸­çç»å®è·¯å¾\r\n   * @param paths paths\r\n   * @param entityTypeInfo \r\n   * @returns \r\n   */\r\n  public getBindingPathsByPath(paths: string[] | string, entityTypeInfo: DataTypeInfo): string[] {\r\n    let nodeCodes = [];\r\n    if (typeof paths === 'string') {\r\n      paths = paths.split('/').filter(p => p);\r\n    }\r\n    paths = paths.concat([]);\r\n    while (paths.length > 0) {\r\n      const dataPropInfo = entityTypeInfo.getPropInfoByPath(paths);\r\n      if (dataPropInfo.group === 'List') {\r\n        nodeCodes = paths;\r\n        break;\r\n      }\r\n      paths.pop();\r\n    }\r\n    return nodeCodes;\r\n  }\r\n  /**\r\n   * è·åå±æ§è·¯å¾ä¿¡æ¯\r\n   * @param path å±æ§è·¯å¾\r\n   * @returns \r\n   */\r\n  public getPathInfo(path: string): { bindingPath: string, propertyName: string, bindingPaths: string[], propertyNames: string[] } {\r\n    const paths = path.split('/').filter(p => p);\r\n    // è·åæå¤§å®ä½å±çº§ï¼å¶ä½ä¸ºå±æ§ï¼ç®åå±æ§ãudtãå³èãå³èåµå¥å³èï¼\r\n    const entityPath = this.getBindingPathsByPath(paths, this.repository.entityTypeInfo);\r\n    const propertyName = paths.slice(entityPath.length).join('/');\r\n    return { bindingPath: entityPath.join('/'), propertyName, bindingPaths: entityPath, propertyNames: propertyName.split('/').filter(p => p) };\r\n  }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { FrameContext, NgFormControl } from \"@farris/devkit\";\r\n\r\n@Injectable()\r\nexport class FormControlService {\r\n  constructor() { }\r\n  public getFormControlsByFrameContext(frameContext: FrameContext): { [propertyName: string]: NgFormControl } | null {\r\n    return frameContext && frameContext.form && frameContext.form.ngFormControls || null;\r\n  }\r\n  /**\r\n   * éè¿bindingåæ°æ®è·åNgFormControl\r\n   * @param frameContext \r\n   * @param binding binding\r\n   * @returns \r\n   */\r\n  public getFormControlByBinding(frameContext: FrameContext, binding: string): NgFormControl {\r\n    const ngFormControls = this.getFormControlsByFrameContext(frameContext);\r\n    if (!ngFormControls) {\r\n      return null;\r\n    }\r\n    return Object.values(ngFormControls).find((ngFormControl: NgFormControl) => ngFormControl && ngFormControl.binding === binding);\r\n\r\n  }\r\n  /**\r\n   * \r\n   * @param frameContext frameContext\r\n   * @param fullPath \r\n   * @returns \r\n   */\r\n  public getFormControlIndexByFullPath(frameContext: FrameContext, fullPath: string): number {\r\n    const ngFormControls = this.getFormControlsByFrameContext(frameContext);\r\n    if (!ngFormControls) {\r\n      return null;\r\n    }\r\n    const bindings = fullPath.split('/').filter(p => p);\r\n    return Object.values(ngFormControls).findIndex((ngFormControl: NgFormControl) => {\r\n      if (!ngFormControl) {\r\n        return false;\r\n      }\r\n      const bindingPath = frameContext.viewModel.bindingPath;\r\n      const bindingPaths = bindingPath.split('/').filter(p => p);\r\n      const formControlBindingPaths = ngFormControl.binding.split('.').filter(p => p);\r\n      const fullPath = bindingPaths.concat(formControlBindingPaths);\r\n      return fullPath.join('/') === bindings.join('/');\r\n    });\r\n  }\r\n  /**\r\n   * éè¿bindingåæ°æ®è·åNgFormControlä½ç½®\r\n   * @param frameContext \r\n   * @param binding binding\r\n   * @returns ä»0å¼å§\r\n   */\r\n  public getFormControlIndexByBinding(frameContext: FrameContext, binding: string): number {\r\n    const ngFormControls = this.getFormControlsByFrameContext(frameContext);\r\n    if (!ngFormControls) {\r\n      return null;\r\n    }\r\n    return Object.values(ngFormControls).findIndex((ngFormControl: NgFormControl) => ngFormControl && ngFormControl.binding === binding);\r\n  }\r\n}","import { Injectable, Injector } from \"@angular/core\";\r\nimport { AppContext, DataPropInfo, Entity, FrameContext, Repository } from \"@farris/devkit\";\r\nimport { BindingPathService } from \"./binding-path.service\";\r\nimport { FormControlService } from './form-control.service';\r\n\r\n@Injectable()\r\nexport class FrameContextService {\r\n  constructor(\r\n    private injector: Injector, \r\n    private appContext: AppContext, \r\n    private frameContext: FrameContext, \r\n    private repository: Repository<Entity>,\r\n    private bindingPathService: BindingPathService,\r\n    private formControlService: FormControlService\r\n    ) { }\r\n  /**\r\n     * éè¿BEè¡¨åè·åå¯¹åºçframeContext\r\n     * @param tableName \r\n     * @returns \r\n     */\r\n  public getFrameContextsByTableName(tableName: string): null | FrameContext[] {\r\n    if (!tableName) {\r\n      throw new Error('tableName ä¸è½ä¸ºç©ºã');\r\n    }\r\n    const dataTypeInfo = this.repository && this.repository.entityTypeInfo || null;\r\n    if (!dataTypeInfo) {\r\n      return null;\r\n    }\r\n    const bindingPaths = [];\r\n    this.bindingPathService.getBindingPathsByTableName(dataTypeInfo, tableName, bindingPaths);\r\n    const frameContexts = this.appContext && this.appContext.frameContextManager.getFrameContexts() || [];\r\n    if (!frameContexts || frameContexts.length === 0) {\r\n      return null;\r\n    }\r\n    return frameContexts.filter((frameContext: FrameContext) => frameContext && frameContext.viewModel && frameContext.viewModel.bindingPath.split('/').filter(p => p).join('/') === bindingPaths.join('/'));\r\n  }\r\n  /**\r\n   * æ ¹æ®å­æ®µå®æ´è·¯å¾è·åæå¨çä¸ä¸æ\r\n   * @param propertyPath \r\n   * @param separtor \r\n   * @returns \r\n   */\r\n  public getFrameContextsByPropertyPath(propertyPath: string, separtor: string = '/'): FrameContext[] {\r\n    if (!propertyPath) {\r\n      throw new Error('propertyPath ä¸è½ä¸ºç©ºã');\r\n    }\r\n    const frameContexts = this.appContext && this.appContext.frameContextManager.getFrameContexts() || [];\r\n    return frameContexts.filter((frameContext: FrameContext) => {\r\n      const formControls = frameContext && frameContext.form && frameContext.form.ngFormControls || {};\r\n      const bindingPath = frameContext && frameContext.viewModel && frameContext.viewModel.bindingPath || '';\r\n      if (formControls && Object.keys(formControls).length > 0) {\r\n        const key = Object.keys(formControls).find((key: string) => {\r\n          const formControl = formControls[key];\r\n          if (!formControl || !formControl.binding) {\r\n            return false;\r\n          }\r\n          const bindings = formControl.binding.split('.').filter(p => p);\r\n          const bindingPaths = bindingPath.split('/').filter(p => p);\r\n          const fullPath = bindingPaths.concat(bindings);\r\n          return propertyPath.split(separtor).filter(p => p).join('/') === fullPath.join('/');\r\n        });\r\n        return key ? true : false;\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n  /**\r\n   * éè¿BEå­æ®µåè·åå­æ®µçbindingPath\r\n   * @param bindingPaths ç»å®è·¯å¾\r\n   * @param columnName BEå­æ®µå\r\n   * @returns \r\n   */\r\n  public getFrameContextsByColumnName(bindingPaths: string[], columnName: string): FrameContext[] | null {\r\n    if (!bindingPaths) {\r\n      throw new Error('bindingPath ä¸è½ä¸ºç©ºã');\r\n    }\r\n    if (!columnName) {\r\n      throw new Error('columnName ä¸è½ä¸ºç©ºã');\r\n    }\r\n    bindingPaths = bindingPaths.filter(p => p);\r\n    const entityTypeInfo = this.repository && this.repository.entityTypeInfo || null;\r\n    if (!entityTypeInfo) {\r\n      return null;\r\n    }\r\n    const dataTypeInfo = entityTypeInfo.getTypeInfoByPath(bindingPaths);\r\n    const dataPropInfos = dataTypeInfo && dataTypeInfo.getPropInfos() || [];\r\n    const columnPropInfo = dataPropInfos.find((dataPropInfo: DataPropInfo) => dataPropInfo.metadataInfo && (dataPropInfo.metadataInfo.originalDataField === columnName || dataPropInfo.metadataInfo.dataField === columnName));\r\n    if (!columnPropInfo || !columnPropInfo.metadataInfo) {\r\n      return null;\r\n    }\r\n    const frameContexts = this.appContext.frameContextManager.getFrameContexts();\r\n    return frameContexts.filter((frameContext: FrameContext) => {\r\n      const ngFormControls = this.formControlService.getFormControlsByFrameContext(frameContext);\r\n      if (!ngFormControls || Object.keys(ngFormControls).length < 1) {\r\n        return false;\r\n      }\r\n      const currentBindingPaths = this.bindingPathService.getBindingPathsByFrameContext(frameContext) || [];\r\n      const isValidFrameContext = currentBindingPaths.join('/') === bindingPaths.join('/');\r\n      if (!isValidFrameContext) {\r\n        return false;\r\n      }\r\n      const ngFormControl = Object.values(frameContext.viewModel.form.ngFormControls).find(item => item.binding === columnPropInfo.metadataInfo.path);\r\n      return ngFormControl ? true : false;\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * éè¿ç»å®è·¯å¾è·åå¯¹åºçç»ä»¶ä¸ä¸ææ°ç»\r\n   * @param bindingPath bindingPathå­ç¬¦ä¸²\r\n   * @param namespace ns,é»è®¤ä¸º''\r\n   */\r\n   public getFrameContextsByBindingPath(bindingPath: string | string[], namespace: string = ''): FrameContext[] {\r\n    if (Array.isArray(bindingPath)) {\r\n      bindingPath = bindingPath.join('/');\r\n    }\r\n    const frameContexts = this.appContext && this.appContext.frameContextManager.getFrameContexts() || [];\r\n    return frameContexts.filter((frameContext: FrameContext) => frameContext && frameContext.namespace === namespace && frameContext.viewModel.bindingPath === bindingPath);\r\n  }\r\n}","import { Injectable, ElementRef } from '@angular/core';\r\nimport { Repository, FrameContext, NgFormControl } from '@farris/devkit';\r\nimport { FrameContextService } from './frame-context.service';\r\nimport { FormControlService } from './form-control.service';\r\n\r\nconst FIXED_COLUMN_START_INDEX = 5000;\r\nconst GRID_COLUMN_START_INDEX = 10000;\r\ninterface FocusableInvalidationGrid {\r\n  editCell(rowId: any, field: string): void;\r\n  disabled: boolean;\r\n}\r\n\r\n/**\r\n * è¡¨åéªè¯æå¡\r\n * @scope FrameComponent\r\n */\r\n@Injectable()\r\nclass FocusInvalidService {\r\n  /**\r\n   * æé å½æ°\r\n   */\r\n  constructor(\r\n    private repository: Repository<any>,\r\n    private frameContext: FrameContext,\r\n    private frameContextService: FrameContextService,\r\n    private formControlService: FormControlService\r\n  ) {\r\n  }\r\n\r\n  /**\r\n   * åç¬¬ä¸ä¸ªéªè¯ä¸éè¿çå­æ®µè®¾ç½®ç¦ç¹\r\n   */\r\n  public focusInvalidInput(verifyInformations: any[], rootElement: ElementRef<any>) {\r\n    // æ éªè¯ä¸éè¿ä¿¡æ¯æ¶ï¼ç´æ¥è¿åã\r\n    if (!verifyInformations || !verifyInformations.length) {\r\n      return;\r\n    }\r\n    let targetField = null;\r\n    const firstVerifyInformation = this.selectFirstVerifyInformation(verifyInformations, rootElement);\r\n    if (firstVerifyInformation) {\r\n      targetField = firstVerifyInformation.targetField;\r\n      if (targetField) {\r\n        const canFocus = this.focusElement(targetField, rootElement);\r\n        if (canFocus) {\r\n          verifyInformations['focused'] = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®DataGridååæ ¼ç¦ç¹\r\n   */\r\n  public focusGridCell(verifyInformations: any[], focusableDataGrid: FocusableInvalidationGrid) {\r\n    if (!verifyInformations || !verifyInformations.length || verifyInformations['focused'] == true || focusableDataGrid.disabled === true) {\r\n      return;\r\n    }\r\n    let targetField = null;\r\n    let targetId = null;\r\n    const firstVerifyInformation = this.selectFirstVerifyInformation(verifyInformations);\r\n    if (firstVerifyInformation) {\r\n      targetField = firstVerifyInformation.targetField;\r\n      targetId = firstVerifyInformation.id;\r\n      verifyInformations['focused'] = true;\r\n      focusableDataGrid.editCell(targetId, targetField);\r\n    }\r\n  }\r\n  private updateVerifyInformationsIndex(verifyInformations: any[], rootElement?: ElementRef<any>) {\r\n    verifyInformations = verifyInformations.filter((verifyInformation: any) => {\r\n      const frameContexts = this.getFrameContextsByPropertyPath(verifyInformation.fullPath, '/');\r\n      const frameContext = frameContexts && frameContexts.filter(frameContext => frameContext && frameContext.frameId === this.frameContext.frameId);\r\n      return frameContext ? true : false;\r\n    });\r\n    return verifyInformations.map((verifyInformation: any) => {\r\n      let tabIndex = -1;\r\n      if (verifyInformation) {\r\n        if (rootElement && verifyInformation.targetField) {\r\n          const input = this.getInputElementById(verifyInformation.targetField, rootElement);\r\n          tabIndex = input && input.getAttribute('tabindex') || -1;\r\n          tabIndex = Number(tabIndex);\r\n        }\r\n        // const frameContexts = this.getFrameContextsByPropertyPath(verifyInformation.fullPath, '/');\r\n        const frameContext = this.frameContext;//frameContexts && frameContexts[0] || null;\r\n        const frameIndex = frameContext.index + 1;\r\n        verifyInformation.tabIndex = tabIndex;\r\n        verifyInformation.domIndex = -1;\r\n        verifyInformation.frameIndex = -1;\r\n        verifyInformation.position = tabIndex;\r\n        if (frameContext) {\r\n          const domIndex = verifyInformation.fullPath && this.getFieldIndex(frameContext, verifyInformation.fullPath) || 0;\r\n          if (domIndex > 0) {\r\n            const rowIndex = verifyInformation.index || 0;\r\n            verifyInformation.domIndex = domIndex;\r\n            verifyInformation.frameIndex = frameContext.index;\r\n            verifyInformation.position = tabIndex > 0 ? tabIndex : (frameIndex * 1000 + rowIndex * 1000 + domIndex);\r\n          }\r\n        }\r\n      }\r\n      return verifyInformation;\r\n    });\r\n  }\r\n  private isGridComponent(frameContext: FrameContext) {\r\n    if (frameContext) {\r\n      const dataGridColumnsName = frameContext.viewModel['dataGridColumnsName'] || null;\r\n      return dataGridColumnsName ? true : false;\r\n    }\r\n    return undefined;\r\n  }\r\n  private getColumnIndex(frameContext: FrameContext, binding: string) {\r\n    binding = binding.split('/').filter(p => p).join('/');\r\n    const bindingPaths = frameContext.viewModel.bindingPath.split('/').filter(p => p);\r\n    const dataGridColumnsName = frameContext.viewModel['dataGridColumnsName'] || null;\r\n    const frameIndex = frameContext.index + 1;\r\n    if (!dataGridColumnsName) {\r\n      return undefined;\r\n    }\r\n    let columns: any[] = frameContext.viewModel[dataGridColumnsName];\r\n    if (!columns || columns.length < 1) {\r\n      return undefined;\r\n    }\r\n    // æå¹³columns\r\n    columns = columns.reduce((results: any[], item) => {\r\n      if (Array.isArray(item)) {\r\n        return results.concat(item);\r\n      }\r\n      return results.concat([item]);\r\n    }, []);\r\n    let position = -1;\r\n    for (let index = 0; index < columns.length; index++) {\r\n      const column: any | any[] = columns[index];\r\n      const fields = column && column.field && column.field.split('.').filter(p => p) || null;\r\n      if (!fields) {\r\n        continue;\r\n      }\r\n      if (bindingPaths.concat(fields).join('/') === binding) {\r\n        const fixed = column.fixed;\r\n        if (fixed) {\r\n          const fixedColumns = columns.filter(item => item.fixed === fixed);\r\n          const fixedColumnIndex = this.getIndexFromColumns(fixedColumns, binding);\r\n          if (fixed === 'left') {\r\n            position = frameIndex * FIXED_COLUMN_START_INDEX + fixedColumnIndex;\r\n          } else {\r\n            position = frameIndex * GRID_COLUMN_START_INDEX + 1000 + fixedColumnIndex;\r\n          }\r\n        } else {\r\n          position = frameIndex * GRID_COLUMN_START_INDEX + index;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    return position;\r\n  }\r\n  private getIndexFromColumns(columns: any[], binding: string) {\r\n    const bindingPaths = this.frameContext.viewModel.bindingPath.split('/').filter(p => p);\r\n    return columns.findIndex(column => {\r\n      const fields = column && column.field && column.field.split('.').filter(p => p) || null;\r\n      if (!fields) {\r\n        return false;\r\n      }\r\n      if (bindingPaths.concat(fields).join('/') === binding) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n  private selectFirstVerifyInformation(verifyInformations: any[], rootElement?: ElementRef<any>) {\r\n    verifyInformations = this.updateVerifyInformationsIndex(verifyInformations, rootElement);\r\n    verifyInformations.sort((v1: any, v2: any) => Number(v1.position) - Number(v2.position));\r\n    return verifyInformations && verifyInformations.length > 0 && verifyInformations[0] || null;\r\n  }\r\n  private getInputElementById(targetField: string, rootElement: ElementRef<any>) {\r\n    let element = rootElement.nativeElement.ownerDocument.getElementById(targetField) || null;\r\n    if (element && element.tagName !== 'INPUT') {\r\n      const inputs = element.getElementsByTagName('input');\r\n      if (inputs.length) {\r\n        element = inputs[0];\r\n      }\r\n    }\r\n    return element;\r\n  }\r\n  public getFrameContextsByPropertyPath(propertyPath: string, separtor: string = '/'): FrameContext[] {\r\n    if (!propertyPath) {\r\n      return [];\r\n    }\r\n    const frameContexts = this.frameContext && this.frameContext.appContext.frameContextManager.getFrameContexts() || [];\r\n    return frameContexts.filter((frameContext: FrameContext) => {\r\n      const formControls = frameContext && frameContext.form && frameContext.form.ngFormControls || {};\r\n      const bindingPath = frameContext && frameContext.viewModel && frameContext.viewModel.bindingPath || '';\r\n      if (formControls && Object.keys(formControls).length > 0) {\r\n        const key = Object.keys(formControls).find((key: string) => {\r\n          const formControl = formControls[key];\r\n          if (!formControl || !formControl.binding) {\r\n            return false;\r\n          }\r\n          const bindings = formControl.binding.split('.').filter(p => p);\r\n          const bindingPaths = bindingPath.split('/').filter(p => p);\r\n          const fullPath = bindingPaths.concat(bindings);\r\n          return propertyPath.split(separtor).filter(p => p).join('/') === fullPath.join('/');\r\n        });\r\n        return key ? true : false;\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n  public getFormControlIndexByBindingPath(frameContext: FrameContext, binding: string): number {\r\n    const ngFormControls = this.getFormControlsByFrameContext(frameContext);\r\n    if (!ngFormControls) {\r\n      return null;\r\n    }\r\n    const bindings = binding.split('/').filter(p => p);\r\n    return Object.values(ngFormControls).findIndex((ngFormControl: NgFormControl) => {\r\n      if (!ngFormControl) {\r\n        return false;\r\n      }\r\n      const bindingPath = frameContext.viewModel.bindingPath;\r\n      const bindingPaths = bindingPath.split('/').filter(p => p);\r\n      const formControlBindingPaths = ngFormControl.binding.split('.').filter(p => p);\r\n      const fullPath = bindingPaths.concat(formControlBindingPaths);\r\n      return fullPath.join('/') === bindings.join('/');\r\n    });\r\n  }\r\n  public getFieldIndex(frameContext: FrameContext, binding: string) {\r\n    const isGridComponent = this.isGridComponent(frameContext);\r\n    if (isGridComponent) {\r\n      return this.getColumnIndex(frameContext, binding);\r\n    } else {\r\n      return this.getFormControlIndexByBindingPath(frameContext, binding);\r\n    }\r\n  }\r\n  public getFormControlsByFrameContext(frameContext: FrameContext): { [propertyName: string]: NgFormControl } | null {\r\n    return frameContext && frameContext.form && frameContext.form.ngFormControls || null;\r\n  }\r\n  public focusElement(elementId: string, rootElement: ElementRef<any>): boolean {\r\n    let focused = false;\r\n    let elementToFocus = rootElement.nativeElement.ownerDocument.getElementById(elementId);\r\n    // æªè·åå°æå®å­æ®µæ¶ï¼è¿åï¼ä¸åè®¾ç½®ç¦ç¹ã\r\n    if (elementToFocus) {\r\n      // å¦ææå¤ä¸ªidéå¤çåç´ ï¼åä¸å®ä½\r\n      const elements = rootElement.nativeElement.ownerDocument.querySelectorAll(`#${elementId}`);\r\n      if (elements && elements.length > 1) {\r\n        return focused;\r\n      }\r\n      // å¦æç»å®ç®æ å­æ®µçæ§ä»¶ä¸æ¯Inputåç´ ï¼åæ¥æ¾å¶ä¸çº§èç¹ã\r\n      if (elementToFocus.tagName !== 'INPUT') {\r\n        const subElements = elementToFocus.getElementsByTagName('input');\r\n        if (subElements.length) {\r\n          elementToFocus = subElements[0];\r\n        }\r\n      }\r\n      elementToFocus.focus();\r\n      focused = true;\r\n    }\r\n    return focused;\r\n  }\r\n  /**\r\n   * è®¾ç½®ç¦ç¹\r\n   * @param verifyInformation éè¯¯ä¿¡æ¯\r\n   * @param frameContext ä¸ä¸æ\r\n   * @returns \r\n   */\r\n  public focus(verifyInformation: any, frameContext: FrameContext) {\r\n    if (!verifyInformation) {\r\n      return;\r\n    }\r\n    const isGridValidation = verifyInformation.index !== null;\r\n    if (isGridValidation) {\r\n      const grid = this.getGridRef(frameContext);\r\n      if (grid) {\r\n        setTimeout(() => {\r\n          grid.editCell(verifyInformation.id, verifyInformation.targetField);\r\n        }, 0);\r\n      }\r\n    } else {\r\n      const frameElement = this.getComponentRef(frameContext);\r\n      const elementId = verifyInformation.targetField;\r\n      this.focusById(elementId, frameElement);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * éè¿æ§ä»¶idè®¾ç½®ç¦ç¹\r\n   * @param elementId \r\n   * @param elementRef \r\n   */\r\n  private focusById(elementId: string, elementRef?: ElementRef) {\r\n    const document: any = elementRef && elementRef.nativeElement.ownerDocument || window.document;\r\n    if (document) {\r\n      const element = document.getElementById(elementId);\r\n      if (element.tagName !== 'INPUT') {\r\n        const subElements = element.getElementsByTagName('input');\r\n        if (subElements.length) {\r\n          const input = subElements[0];\r\n          if (input && typeof input.focus === 'function') {\r\n            input.focus();\r\n          }\r\n        }\r\n      } else {\r\n        element.focus();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * è·åç»ä»¶å®ä¾\r\n   * @param frameContext \r\n   * @returns \r\n   */\r\n  private getComponentRef(frameContext: FrameContext) {\r\n    return this.frameContext && this.frameContext.injector.get<ElementRef>(ElementRef, null) || null;\r\n  }\r\n  /**\r\n   * è·ågridå®ä¾\r\n   * @param frameContext frameContext\r\n   * @returns \r\n   */\r\n  private getGridRef(frameContext: FrameContext): FocusableInvalidationGrid {\r\n    const namespace = frameContext.namespace;\r\n    const bindingPath = frameContext.viewModel.bindingPath;\r\n    const frameContexts: FrameContext[] = this.frameContext.appContext.frameContextManager.getFrameContextsByNamespace(namespace) || [];\r\n    const matchedFrameContexts = frameContexts.filter((frameContext: FrameContext) => frameContext.viewModel && frameContext.viewModel.bindingPath.split('/').filter(p => p).toString() === bindingPath.split('/').filter(p => p).toString());\r\n    let result = null;\r\n    if (matchedFrameContexts) {\r\n      matchedFrameContexts.every((frameContext: FrameContext) => {\r\n        const frameId = frameContext.frameId;\r\n        const componentsMap = this.frameContext.appContext.componentManager.getComponentsByFrameId(frameId);\r\n        if (!componentsMap) {\r\n          return true;\r\n        }\r\n        const datagridComponent = Array.from(componentsMap.values()).find((component: any) => component && component['__component_type__'] === 'DatagridComponent');\r\n        if (datagridComponent) {\r\n          result = datagridComponent;\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport { FocusableInvalidationGrid, FocusInvalidService };\r\n","import { Injectable } from '@angular/core';\r\nimport { Repository, FrameContext } from '@farris/devkit';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { EMPTY, Observable, Subject, Subscriber } from 'rxjs';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { FormNotifyService } from './form-notify.service';\r\nimport { LanguageService } from './languag.service';\r\n\r\n\r\nconst POSTER = 'iframePoster';\r\nconst RECEIVER = 'iframeReceiver';\r\nconst REPOSITORY = 'repository';\r\n// window.hashä¸­funcIdçå±æ§å\r\nconst FUNC_ID = 'funcId=';\r\nconst TAB_ID = 'tabId=';\r\n/**\r\n * ChangeItemService\r\n * @scope FrameComponent\r\n */\r\n@Injectable()\r\nclass ChangeItemService {\r\n\r\n  public top = top;\r\n  private funcId: string;\r\n  private tabId: string;\r\n  public itemChangePoster = new Subject<any>();\r\n  public itemChangeReceiver = new Subject<any>();\r\n  /**\r\n   * æé å½æ°\r\n   */\r\n  constructor(\r\n    private repository: Repository<any>,\r\n    private frameContext: FrameContext,\r\n    private notifyService: FormNotifyService,\r\n    private languageService: LanguageService\r\n  ) {\r\n  }\r\n\r\n  init() {\r\n    this.top['topMap'] = this.top['topMap'] || {};\r\n    this.changeItem = this.changeItem.bind(this);\r\n  }\r\n\r\n  setBykey(key: string, value: any) {\r\n    this.top['topMap'] = this.top['topMap'] || {};\r\n    this.top['topMap'][this.tabId] = this.top['topMap'][this.tabId] || {};\r\n    const topObject = this.top['topMap'][this.tabId];\r\n    topObject[key] = value;\r\n  }\r\n\r\n  getByKey(key: string) {\r\n    const topObject = this.top['topMap'][this.tabId] || {};\r\n    return topObject[key];\r\n  }\r\n\r\n  // å»ºç«iframeéä¿¡\r\n  setIframePoster() {\r\n    if (this.getByKey[POSTER]) {\r\n      return;\r\n    } else {\r\n      this.setBykey(POSTER, this.itemChangePoster);\r\n    }\r\n  }\r\n\r\n  getIframePoster() {\r\n    this.itemChangePoster = this.getByKey(RECEIVER);\r\n    this.setBykey(RECEIVER, this.itemChangeReceiver);\r\n  }\r\n\r\n  changeItem(type: string, id: string, parentId: string) {\r\n    // æ ¹æ®æ¯å¦æ¯å¼¹åºå¼å¡çåä¸åçtabId\r\n    const virtualRootFrameContext = this.frameContext.getVirtualRootFrameContext();\r\n    const virtualRootComponent = virtualRootFrameContext.frameComponent;\r\n    const isDialogComponent = virtualRootComponent['isDialogRootComponent'] || false;\r\n    if (isDialogComponent) {\r\n      this.tabId = window.location.hash.split(TAB_ID)[1].slice(0, window.location.hash.split(TAB_ID)[1].indexOf('&'));\r\n    } else {\r\n      this.tabId = parentId;\r\n    }\r\n    this.itemChangeReceiver = this.getByKey(RECEIVER);\r\n    return Observable.create((subscriber: Subscriber<any>) => {\r\n      this.getNextItemByCurrentId(id, type).subscribe((result: any) => {\r\n        subscriber.next(result);\r\n      });\r\n    });\r\n  }\r\n\r\n  // å¨liståå§åæ¶è°ç¨ï¼ç¼å­listçrepository\r\n  setRepository() {\r\n    if (window.location.hash.includes(TAB_ID)) {\r\n      this.tabId = window.location.hash.split(TAB_ID)[1].slice(0, window.location.hash.split(TAB_ID)[1].indexOf('&'));\r\n      this.setBykey(REPOSITORY, this.frameContext.repository);\r\n      this.setIframePoster();\r\n      this.getIframePoster();\r\n    }\r\n  }\r\n\r\n  // æ ¹æ®ç±»ååidè·åç¸é»çæ°æ®\r\n  getNextItemByCurrentId(currentId: string, type: string) {\r\n    const repository = this.getByKey(REPOSITORY);\r\n    const { pageSize, pageIndex, total } = repository.entityCollection.paginationInfo;\r\n    let currentIdx = null;\r\n    const list = repository.entityCollection.getAllEntities();\r\n    list.find((x: any, idx: string) => {\r\n      if (x.id === currentId) {\r\n        currentIdx = idx;\r\n      }\r\n    });\r\n    // æ²¡æå¨åè¡¨ä¸­æ¾å°æ°æ®ï¼è¿åç©º\r\n    if (currentIdx === null) {\r\n      // æ°å¢åæ¶å½åæ æ°æ®æ¶ç¹ä¸ä¸æ¡ä¸ä¸æ¡\r\n      if (list.length) {\r\n        switch (type) {\r\n          case 'prev':\r\n            return of(list[list.length - 1].id);\r\n            break;\r\n          case 'next':\r\n            this.notifyService.info(this.languageService.changeToLast, { hideTitle: true });\r\n            return EMPTY;\r\n        }\r\n      }\r\n      return of(null);\r\n    }\r\n    let nextIdx = currentIdx;\r\n    switch (type) {\r\n      case 'prev':\r\n        // å½åé¡µç¬¬ä¸æ¡,ä¸éç¬¬ä¸é¡µ,åä¸ä¸é¡µæåä¸æ¡\r\n        if (currentIdx === 0 && pageIndex !== 1) {\r\n          return repository.getEntities([], [], pageSize, pageIndex - 1).pipe(\r\n            switchMap(result => {\r\n              nextIdx = pageSize - 1;\r\n              return of(result[nextIdx].id);\r\n            })\r\n          );\r\n        }\r\n        // ç¬¬ä¸é¡µç¬¬ä¸æ¡ï¼ä»è¿ååææ°æ®\r\n        else if (currentIdx === 0 && pageIndex === 1) {\r\n          this.notifyService.info(this.languageService.changeToFirst, { hideTitle: true });\r\n          return of(list[nextIdx].id);\r\n        }\r\n        // ä¸æ¯ç¬¬ä¸æ¡ï¼è¿åä¸ä¸æ¡\r\n        else {\r\n          nextIdx = currentIdx - 1;\r\n          return of(list[nextIdx].id);\r\n        }\r\n        break;\r\n      case 'next':\r\n        // è¶è¿å½åé¡µ\r\n        if (currentIdx + 1 + 1 > list.length) {\r\n          // ä¸éæåä¸æ¡æ°æ®,åä¸ä¸é¡µç¬¬ä¸æ¡æ°æ®\r\n          if (((pageIndex - 1) * pageSize + currentIdx + 1) < total) {\r\n            return repository.getEntities([], [], pageSize, pageIndex + 1).pipe(switchMap(result => {\r\n              return of(result[0].id);\r\n            }));\r\n          }\r\n          // æåä¸æ¡æ°æ®ï¼ä»è¿ååæ°æ®\r\n          else {\r\n            this.notifyService.info(this.languageService.changeToLast, { hideTitle: true });\r\n            return of(list[nextIdx].id);\r\n          }\r\n        } else {\r\n          nextIdx = currentIdx + 1;\r\n          return of(list[nextIdx].id);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nexport { ChangeItemService };\r\n","import { CommandContext } from \"@farris/devkit\";\r\n\r\nexport abstract class Service {\r\n  public context: CommandContext;\r\n  /**\r\n   * å½ä»¤åæ°\r\n   */\r\n  public get eventParam(){\r\n    return this.context && this.context.eventParam || null;\r\n  }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Service } from \"./service\";\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { QueryCondition } from '@farris/component-querycondition';\r\nimport { CommandContext, FrameContext } from \"@farris/devkit\";\r\n@Injectable()\r\nexport class DataGridService extends Service {\r\n  /**\r\n   * æ¸ç©ºææå¾éè¡\r\n   * @description åæ¶å¾éå½åè¡¨åææå¾éè¡\r\n   */\r\n  public clearChecks() {\r\n    // const params = this.eventParam;\r\n    // if (params && Array.isArray(params)) {\r\n    // const param = params[0];\r\n    // if (param instanceof QueryCondition) {\r\n    const gridComponents = this.getFormGridComponents(this.context);\r\n    if (gridComponents && gridComponents.length > 0) {\r\n      gridComponents.forEach((gridComponent: DatagridComponent) => {\r\n        let clearSelections = true;\r\n        if (gridComponent.hasOwnProperty('clearSelectionsWhenDataIsEmpty')) {\r\n          clearSelections = gridComponent['clearSelectionsWhenDataIsEmpty'];\r\n        }\r\n        if (clearSelections) {\r\n          gridComponent.clearCheckeds(true);\r\n        }\r\n      });\r\n    }\r\n    // }\r\n    // }\r\n  }\r\n  /**\r\n   * åæ¶å¾éå é¤çè¡\r\n   * @param ids ids\r\n   * @returns \r\n   * @description åæ¶å¾éå½åç»å®è·¯å¾ä¸æå®æ°æ®ï¼æ¸ç©ºä¸çº§è¡¨æ ¼ä¸­ææå¾éè¡ï¼ä»ä¾å é¤åºæ¯ä½¿ç¨\r\n   */\r\n  public uncheckDeletedRows(ids: any) {\r\n    if (typeof ids === 'string') {\r\n      if (ids.indexOf(',') !== -1) {\r\n        ids = ids.split(',').filter(p => p);\r\n      } else {\r\n        ids = [ids];\r\n      }\r\n    }\r\n    if (!ids || ids.length < 1) {\r\n      return;\r\n    }\r\n    // è·åbindingPathåns\r\n    const frameContext = this.context.frameContext;\r\n    if (!frameContext) {\r\n      return;\r\n    }\r\n    const appContext = frameContext.appContext;\r\n    const ns = frameContext.namespace;\r\n    const bindingPath = frameContext.viewModel && frameContext.viewModel.bindingPath;\r\n    if (!appContext) {\r\n      return;\r\n    }\r\n    // æ ¹æ®bindingPathè·åææå¯è½çframeContext\r\n    const frameContexts = appContext.frameContextManager.getFrameContextsByNamespace(ns);\r\n    const frameContextsInCurrentBindingPath = frameContexts.filter(frameContext => frameContext && frameContext.viewModel && frameContext.viewModel.bindingPath === bindingPath);\r\n    // è·åè¿äºframeä¸­ææçè¡¨æ ¼ç»ä»¶map\r\n    const gridInCurrentFrame = this.getGridComponentByFrameContexts(frameContextsInCurrentBindingPath);\r\n    if (!gridInCurrentFrame) {\r\n      return;\r\n    }\r\n    // ä¸ä¸ªbindingPathä¸åºè¯¥åªæä¸ä¸ªgrid\r\n    const grid: DatagridComponent = gridInCurrentFrame.pop();\r\n    // æ¸ç©ºå½ä»¤æå¨çframeä¸è¡¨æ ¼çæå®å¾é\r\n    if(grid){\r\n      grid.unCheckRows(ids, true);\r\n    }\r\n    // æ¸ç©ºä¸çº§è¡¨æ ¼çææå¾éè¡æ°æ®\r\n    const childrenFrameContexts = frameContexts.filter(frameContext => frameContext.viewModel.bindingPath !== bindingPath && frameContext.viewModel.bindingPath.startsWith(bindingPath));\r\n    const childrenGridComponents = this.getGridComponentByFrameContexts(childrenFrameContexts);\r\n    // æ¸ç©ºå½ä»¤æå¨frame\r\n    if (childrenGridComponents && childrenGridComponents.length > 0) {\r\n      childrenGridComponents.forEach((gridComponent: DatagridComponent) => {\r\n        // æ¸ç©ºææå¾é\r\n        gridComponent.checkedRows = [];\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * åæ¶å¾éè¡\r\n   * @param ids ids\r\n   * @returns \r\n   */\r\n  public uncheckRows(ids: any) {\r\n    if (typeof ids === 'string') {\r\n      ids = [ids];\r\n    }\r\n    if (!ids || ids.length < 1) {\r\n      return;\r\n    }\r\n    const gridComponents = this.getFormGridComponents(this.context);\r\n    if (gridComponents && gridComponents.length > 0) {\r\n      gridComponents.forEach((gridComponent: DatagridComponent) => {\r\n        gridComponent.unCheckRows(ids, true);\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * æ ¹æ®å½ä»¤ä¸ä¸æè·åå½åå½ä»¤æå¨ç»ä»¶çè¡¨æ ¼å®ä¾\r\n   * @param commandContext å½ä»¤ä¸ä¸æ\r\n   * @returns \r\n   */\r\n  private getFormGridComponents(commandContext: CommandContext) {\r\n    let grids = [];\r\n    const frameContext = commandContext && commandContext.frameContext;\r\n    const appContext = frameContext && frameContext.appContext || null;\r\n    if (appContext) {\r\n      const componentRefs: Map<string, Map<string, any>> = appContext.componentRefs;\r\n      const collect = Array.from(componentRefs.values());// [Map<string,any>,Map<string,any>]\r\n      collect.forEach((item: Map<string, any>) => {\r\n        const components = Array.from(item.values());\r\n        const bindingPath = frameContext\r\n        const gridComponents = components.filter((component: any) => component instanceof DatagridComponent);\r\n        grids = grids.concat(gridComponents);\r\n      });\r\n    }\r\n    return grids;\r\n  }\r\n  private getGridComponentByFrameContexts(frameContexts: FrameContext[]) {\r\n    return frameContexts.reduce((result, frameContext) => {\r\n      const appContext = frameContext.appContext;\r\n      const frameId = frameContext.frameId;\r\n      // è·åå½åç»ä»¶ä¸ææçç»ä»¶å®ä¾\r\n      const componentsRef = appContext.componentRefs.get(frameId);\r\n      const grids = componentsRef && Array.from(componentsRef.values()).filter(component => component instanceof DatagridComponent);\r\n      if (grids && grids.length > 0) {\r\n        result = result.concat(grids);\r\n      }\r\n      return result;\r\n    }, []);\r\n  }\r\n}","import { Injectable, Optional } from '@angular/core';\r\nimport { Observable, of, empty, EMPTY } from 'rxjs';\r\nimport { tap, switchMap, concatMap, catchError } from 'rxjs/operators';\r\nimport { Repository, BindingData, Entity, ViewModel, BindingList, EntityPathConverter, BindingObject } from '@farris/devkit';\r\nimport { BefRepository, BefRepositoryUtil, BefDataPathUtil } from '@farris/bef';\r\nimport { FormLoadingService } from '../form-loading/form-loading.service';\r\nimport { FormNotifyService } from '../form-notify.service';\r\nimport { LanguageService } from '../languag.service';\r\nimport { FormMessageService } from '../form-message.service';\r\nimport { FormErrorService } from '../error/form-error.service';\r\nimport { CommandService } from '../command-service';\r\nimport { FilterConditionService } from '../filter-condition.service';\r\nimport { DataGridService } from '../data-grid.service';\r\nimport { DataChangeDetectionService } from '../data-change-detection.service';\r\n// tslint:disable: no-string-literal max-line-length\r\n\r\n/**\r\n * åè¡¨ä»åºæå¡\r\n */\r\n@Injectable()\r\nclass ListDataService {\r\n\r\n  /**\r\n   * æé \r\n   * @param msgService msgService\r\n   * @param repository repository\r\n   * @param bindingData bindingData\r\n   * @param loadingService loadingService\r\n   * @param languageService languageService\r\n   * @param formNotifyService formNotifyService\r\n   * @param formErrorService formErrorService\r\n   * ! @param viewModel viewModel,vmæ¯åææ³¨å¥çï¼èè¡¨åè·åä¸å°ï¼ä¸å®è¦åéç©ºå¤æ­\r\n   * @param filterConditionService filterConditionService\r\n   */\r\n  constructor(\r\n    private msgService: FormMessageService,\r\n    private repository: Repository<any>,\r\n    private bindingData: BindingData,\r\n    private loadingService: FormLoadingService,\r\n    @Optional() private languageService: LanguageService,\r\n    private formNotifyService: FormNotifyService,\r\n    private formErrorService: FormErrorService,\r\n    private viewModel: ViewModel,\r\n    private filterConditionService: FilterConditionService,\r\n  ) {\r\n    if (!languageService) {\r\n      this.languageService = LanguageService.getInstance();\r\n    }\r\n\r\n    // if (!filterConditionService) {\r\n    //   this.filterConditionService = new FilterConditionService();\r\n    // }\r\n  }\r\n\r\n  /**\r\n   * å è½½\r\n   */\r\n  public load(filter?: string, sort?: string): Observable<Entity[]> {\r\n\r\n    // åæ°å¤ç\r\n    filter = !filter ? '[]' : filter;\r\n    sort = !sort ? '[]' : sort;\r\n    // åå¹¶è¿æ»¤æ¡ä»¶\r\n    filter = this.mergeFilterConditions(filter);\r\n    // åå¹¶æåºæ¡ä»¶\r\n    sort = this.mergeSortConditions(sort);\r\n\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(200);\r\n    const query$ = this.repository.getEntities(JSON.parse(filter), JSON.parse(sort), null, null);\r\n    return query$.pipe(\r\n      tap(\r\n        () => {\r\n          // è§¦åè¿ç«¯åè®¡äºä»¶\r\n          this.fireQueryEvent(filter);\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n        },\r\n        (error: any) => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.formErrorService.exception(this.languageService.loadFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  /**\r\n   * è¿æ»¤æ°æ®\r\n   * @param filter è¿æ»¤æ¡ä»¶\r\n   * @param sort æåºæ¡ä»¶\r\n   */\r\n  public filter(filter?: string, sort?: string): Observable<Entity[]> {\r\n    // åæ°å¤ç\r\n    filter = !filter ? '[]' : filter;\r\n    sort = !sort ? '[]' : sort;\r\n    // åå¹¶è¿æ»¤æ¡ä»¶\r\n    filter = this.mergeFilterConditions(filter);\r\n    // åå¹¶æåºæ¡ä»¶\r\n    sort = this.mergeSortConditions(sort);\r\n\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(200);\r\n    const query$ = this.repository.filter(JSON.parse(filter), JSON.parse(sort));\r\n    return query$.pipe(\r\n      tap(\r\n        () => {\r\n          // è§¦åè¿ç«¯åè®¡äºä»¶\r\n          this.fireQueryEvent(filter);\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n        },\r\n        (error: any) => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.formErrorService.exception(this.languageService.loadFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  /**\r\n   * æ¥è¯¢\r\n   */\r\n  public query(filter: string, sort: string, pageSize: number, pageIndex: number): Observable<Entity[]> {\r\n    // åæ°å¤ç\r\n    filter = (filter === '') ? '[]' : filter;\r\n    sort = (sort === '') ? '[]' : sort;\r\n    // åå¹¶è¿æ»¤æ¡ä»¶\r\n    filter = this.mergeFilterConditions(filter);\r\n    // åå¹¶æåºæ¡ä»¶\r\n    sort = this.mergeSortConditions(sort);\r\n    // æ§è¡åæ°\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(5);\r\n    const query$ = this.repository.getEntities(JSON.parse(filter), JSON.parse(sort), pageSize, pageIndex);\r\n    return query$.pipe(\r\n      tap(\r\n        () => {\r\n          // è§¦åè¿ç«¯åè®¡äºä»¶\r\n          this.fireQueryEvent(filter);\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n        },\r\n        (error: any) => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.formErrorService.exception(this.languageService.queryFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  public queryChild(filter: string, sort: string) {\r\n    // const isUpdateWithPaging = this.viewModel.frameContext.root.params.get('updateWithPaging') || false;\r\n    // if (isUpdateWithPaging) {\r\n    //   return of(null);\r\n    // }\r\n    // tslint:disable-next-line: max-line-length\r\n    const fullPaths = EntityPathConverter.toEntityPathArray(this.viewModel.bindingPath, this.bindingData);\r\n    const paths = fullPaths.slice(0, fullPaths.length - 1);\r\n    // debug\r\n    // tslint:disable-next-line: max-line-length\r\n    const bindingPaths = this.viewModel.bindingPath.split('/').filter(item => item);\r\n    const bindingData = this.viewModel.bindingData;\r\n    let nodeCode = bindingPaths[bindingPaths.length - 1];\r\n    nodeCode = nodeCode.substr(0, nodeCode.length - 1);\r\n    // è·åä¸çº§å®ä½\r\n    const parentPaths = bindingPaths.slice(0, bindingPaths.length - 1);\r\n    const BindingList = bindingData.getValue(parentPaths) as BindingList;\r\n    if (!BindingList) {\r\n      return;\r\n    }\r\n    this.viewModel.frameContext.appContext.params.delete(\"retrieveing\");\r\n    const configPath = `/${nodeCode}`;\r\n    const config = this.repository.entityCollection.getPaginationConfigByPath(configPath);\r\n    if (config) {\r\n      const { pageIndex = 1, pageSize = 0 } = config;\r\n      // pageSize = 0è¡¨ç¤ºæªåé¡µ\r\n      if (pageSize !== 0) {\r\n        this.viewModel.frameContext.appContext.params.set('queryChild', true);\r\n        const request$ = this.repository.queryChild(paths, pageIndex, pageSize);\r\n        return request$.pipe(\r\n          tap(() => { },\r\n            error => {\r\n              this.formErrorService.exception(this.languageService.queryFailed, error);\r\n            }\r\n          )\r\n        );\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * è·ååé¡µä¿¡æ¯\r\n   * @param nodeCode nodeCode\r\n   * @returns åé¡µä¿¡æ¯ï¼åæ¬ï¼åé¡µå¤§å°ãå½åé¡µç \r\n   * @description åºæ¬åé¡µä¿¡æ¯å¨åé¡µä¿¡æ¯ä¸­å­å¨æ¶keyä¸ºnodeCode\r\n   */\r\n  /*private getPagingInfo(nodeCode: string) {\r\n    const result: { pageIndex?: number, pageSize?: number } = {};\r\n    const nodeCodePath = `/${nodeCode}`;\r\n    const defaultPagingInfo = this.repository.entityCollection.getPaginationConfigByPath(nodeCodePath);\r\n    const pageSize = defaultPagingInfo && defaultPagingInfo.pageSize || 0;\r\n    const pageIndex = defaultPagingInfo && defaultPagingInfo.pageIndex || 1;\r\n    result.pageIndex = pageIndex;\r\n    result.pageSize = pageSize;\r\n    return result;\r\n  }*/\r\n  /**\r\n   * è¿½å ä¸æ¡æ°æ°æ®\r\n   */\r\n  public append(): Observable<Entity> {\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    if (this.messagePipe) {\r\n      this.messagePipe.next({ messageType: 'append' });\r\n    }\r\n    const append$ = this.repository.append();\r\n    return append$.pipe(\r\n      tap(() => {\r\n        this.loadingService.hideDelayLoading(loadingTimerId);\r\n      },\r\n        error => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.formErrorService.exception(this.languageService.appendFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  /**\r\n   * å½åè¡åæåæå¥æ°æ®\r\n   * @param position 1 | -1\r\n   */\r\n  public insert(position: 1 | -1 = -1) {\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    if (this.messagePipe) {\r\n      this.messagePipe.next({ messageType: 'insert' });\r\n    }\r\n    const append$ = this.repository.insert(position);\r\n    return append$.pipe(\r\n      tap(() => {\r\n        this.loadingService.hideDelayLoading(loadingTimerId);\r\n      },\r\n        error => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.formErrorService.exception(this.languageService.appendFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * æäº¤åæ´ï¼æ¹éç¼è¾é¡µé¢ï¼è¡åæ¢æ¶æäº¤å¢éï¼\r\n   */\r\n  public updateChanges(): Observable<boolean> {\r\n    const update$ = this.repository.updateAllChanges();\r\n    return update$;\r\n  }\r\n\r\n  /**\r\n   * æ¹éä¿å­\r\n   * @param successMsg èªå®ä¹æç¤ºä¿¡æ¯\r\n   */\r\n  public save(successMsg?: string): Observable<boolean> {\r\n    if (this.messagePipe) {\r\n      this.messagePipe.next({ messageType: 'save' });\r\n    }\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    const save$ = this.repository.applyChanges();\r\n    const result$ = save$.pipe(\r\n      tap(\r\n        () => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          if (successMsg && successMsg.trim()) {\r\n            let showMessage: boolean = true;\r\n            if (successMsg.startsWith('{') && successMsg.endsWith('}')) {\r\n              try {\r\n                const options = JSON.parse(successMsg);\r\n                if (options.showMessage === false) {\r\n                  showMessage = false;\r\n                }\r\n              } catch { }\r\n            }\r\n            if (showMessage !== false) {\r\n              this.formNotifyService.success(successMsg, { hideTitle: true });\r\n            }\r\n          } else {\r\n            this.formNotifyService.success(this.languageService.saveSuccess, { hideTitle: true });\r\n          }\r\n        },\r\n        error => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.formErrorService.exception(this.languageService.multiSaveFailed, error);\r\n        }\r\n      )\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * å é¤\r\n   * @param id è¦å é¤çæ°æ®çid\r\n   * @param ifSave æ¯å¦ä¿å­\r\n   * @param successMsg èªå®ä¹æç¤ºä¿¡æ¯\r\n   * @param confirm æ¯å¦éè¦ç¡®è®¤\r\n   * @param breakable æ¯å¦å¯ä¸­æ­ï¼ifSaveä¸ºfalseæ¶æµä¼ä¸­æ­\r\n   */\r\n  public remove(id: string, ifSave?: boolean | string, successMsg?: string, confirm: boolean | string = true, breakable: boolean | string = true): Observable<any> {\r\n    if (this.messagePipe) {\r\n      this.messagePipe.next({ messageType: 'delete' });\r\n    }\r\n    if (!id) {\r\n      this.formNotifyService.warning(this.languageService['plsSelectDeleteData'], { hideTitle: true });\r\n      return empty();\r\n    }\r\n    confirm = (confirm === false || confirm === 'false') ? false : true;\r\n    breakable = (breakable === false || breakable === 'false') ? false : true;\r\n    const action$ = confirm ? this.msgService.question(this.languageService.confirmDeletion) : of(true);\r\n    return action$.pipe(\r\n      concatMap(result => {\r\n        if (!result) {\r\n          return empty();\r\n        }\r\n        ifSave = (ifSave === false || ifSave === 'false') ? false : true;\r\n        const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n        const remove$ = this.repository.removeById(id, ifSave);\r\n        if (!remove$) {\r\n          return empty();\r\n        }\r\n        return remove$.pipe(\r\n          tap(\r\n            () => {\r\n              this.loadingService.hideDelayLoading(loadingTimerId);\r\n              if (successMsg && successMsg.trim()) {\r\n                let showMessage: boolean = true;\r\n                if (successMsg.startsWith('{') && successMsg.endsWith('}')) {\r\n                  try {\r\n                    const options = JSON.parse(successMsg);\r\n                    if (options.showMessage === false) {\r\n                      showMessage = false;\r\n                    }\r\n                  } catch { }\r\n                }\r\n                if (showMessage !== false) {\r\n                  this.formNotifyService.success(successMsg, { hideTitle: true });\r\n                }\r\n              } else {\r\n                this.formNotifyService.success(this.languageService.deleteSuccess, { hideTitle: true });\r\n              }\r\n            },\r\n            error => {\r\n              this.loadingService.hideDelayLoading(loadingTimerId);\r\n              this.formErrorService.exception(this.languageService.deleteFailed, error);\r\n            }\r\n          ),\r\n          switchMap(() => {\r\n            if (ifSave === true || !breakable) {\r\n              // return this.load();\r\n              return of([]);\r\n            } else {\r\n              // æ¹éç¼è¾åè¡¨è¡¨æ ¼å¤äºç¼è¾æåºæ¯æ¶ï¼ä¸ºé²æ­¢æ§è¡åç»­å½ä»¤å¯¼è´æ°æ®éæ°å è½½ï¼æä»¥å¨æ­¤å°å½ä»¤ä¸­æ­äºãä½åæ¶ä¹å¯¼è´äºå é¤æ°æ®åå¾éè®°å½ä¾ç¶å­å¨ãæä»¥å¨è¿ééè¦åç¬è°ç¨ä¸æ¬¡æ¸ç©ºå¾éæ¹æ³ã\r\n              const datagridService = new DataGridService();\r\n              datagridService.context = this['context'];\r\n              datagridService.uncheckDeletedRows([id]);\r\n              return empty();\r\n            }\r\n          })\r\n        );\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * æ¹éå é¤\r\n   * @param ids ids\r\n   * @param ifSave æ¯å¦ä¿å­\r\n   * @param successMsg èªå®ä¹æç¤ºä¿¡æ¯\r\n   * @param deleteCurrentRowIfNoChecks æ²¡æå¾éæ¶å é¤å½åè¡\r\n   */\r\n  public removeRows(ids: string[], ifSave?: boolean | string, successMsg?: string, deleteCurrentRowIfNoChecks: boolean | string = false): Observable<any> {\r\n    if (this.messagePipe) {\r\n      this.messagePipe.next({ messageType: 'removeRows' });\r\n    }\r\n    deleteCurrentRowIfNoChecks = (deleteCurrentRowIfNoChecks === 'true' || deleteCurrentRowIfNoChecks === true) ? true : false;\r\n    if (!ids || ids.length === 0) {\r\n      const currentId = this.bindingData.list.currentId;\r\n      if (deleteCurrentRowIfNoChecks === true && currentId) {\r\n        ids = [this.bindingData.list.currentId];\r\n      } else {\r\n        this.formNotifyService.warning(this.languageService['plsSelectDeleteData'], { hideTitle: true });\r\n        return empty();\r\n      }\r\n    }\r\n    const action$ = this.msgService.confirm(this.languageService.confirmDeletion);\r\n    return action$.pipe(\r\n      concatMap(result => {\r\n        if (!result) {\r\n          return empty();\r\n        }\r\n        if (typeof ifSave === 'undefined') {\r\n          ifSave = true;\r\n        }\r\n        if (typeof ifSave === 'string') {\r\n          ifSave = ifSave.toLowerCase() === 'false' ? false : true;\r\n        }\r\n        ifSave = (ifSave === false) ? false : true;\r\n        const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n        const remove$ = this.repository.removeByIds(ids, ifSave);\r\n\r\n        if (!remove$) {\r\n          return empty();\r\n        }\r\n\r\n        return remove$.pipe(\r\n          tap(\r\n            () => {\r\n              this.loadingService.hideDelayLoading(loadingTimerId);\r\n              if (successMsg && successMsg.trim()) {\r\n                let showMessage: boolean = true;\r\n                if (successMsg.startsWith('{') && successMsg.endsWith('}')) {\r\n                  try {\r\n                    const options = JSON.parse(successMsg);\r\n                    if (options.showMessage === false) {\r\n                      showMessage = false;\r\n                    }\r\n                  } catch { }\r\n                }\r\n                if (showMessage !== false) {\r\n                  this.formNotifyService.success(successMsg, { hideTitle: true });\r\n                }\r\n              } else {\r\n                this.formNotifyService.success(this.languageService.deleteSuccess, { hideTitle: true });\r\n              }\r\n              // this.formNotifyService.success(this.languageService.deleteSuccess, { hideTitle: true });\r\n            },\r\n            error => {\r\n              this.loadingService.hideDelayLoading(loadingTimerId);\r\n              this.formErrorService.exception(this.languageService.deleteFailed, error);\r\n            }\r\n          ),\r\n          switchMap(() => {\r\n            return of([]);\r\n          })\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * å é¤åçå·æ°\r\n   */\r\n  public refreshAfterRemoving(loadCmdName: string, loadCmdFrameId: string): Observable<any> {\r\n    if (this.viewModel && loadCmdName && loadCmdFrameId) {\r\n      const commandService = this.viewModel.frameContext.injector.get<CommandService>(CommandService, null);\r\n      return commandService.execute(loadCmdName, loadCmdFrameId);\r\n    }\r\n    return this.load();\r\n  }\r\n\r\n  /**\r\n   * å·æ°\r\n   * @param loadCmdName å·æ°å½ä»¤\r\n   * @param loadCmdFrameId å·æ°å½ä»¤æå¨çframeId\r\n   */\r\n  public refresh(loadCmdName: string, loadCmdFrameId: string): Observable<any> {\r\n    if (this.viewModel && loadCmdName && loadCmdFrameId) {\r\n      const commandService = this.viewModel.frameContext.injector.get<CommandService>(CommandService, null);\r\n      return commandService.execute(loadCmdName, loadCmdFrameId);\r\n    }\r\n    return this.load();\r\n  }\r\n  /**\r\n   * åæ¶æ¶æ£æµæªä¿å­è®°å½\r\n   */\r\n  public cancel(): Observable<any> {\r\n    if (this.messagePipe) {\r\n      this.messagePipe.next({ messageType: 'cancel' });\r\n    }\r\n    const hasChange$ = DataChangeDetectionService.hasChange(this.viewModel.frameContext);\r\n    return hasChange$.pipe(\r\n      switchMap((changed: boolean) => {\r\n        if (!changed) {\r\n          return this._cancel();\r\n        } else {\r\n          return this.msgService.question(this.languageService['cancelWithoutSave']).pipe(\r\n            switchMap((ifCancel: boolean) => {\r\n              if (ifCancel === false) {\r\n                return EMPTY;\r\n              }\r\n              return this._cancel();\r\n            })\r\n          );\r\n        }\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * è¿ååæ´é\r\n   * @description ä¸å¸¦åæ´æ£æµæç¤º\r\n   */\r\n  public revert(): Observable<any> {\r\n    return this._cancel();\r\n  }\r\n  /**\r\n   * åæ¶ï¼åé¨åæ¶ï¼\r\n   */\r\n  private _cancel(): Observable<any> {\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    const cancel$ = this.repository.cancelChanges();\r\n    return cancel$.pipe(\r\n      tap(() => {\r\n        this.loadingService.hideDelayLoading(loadingTimerId);\r\n      },\r\n        error => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.formErrorService.exception(this.languageService.cancelFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  /**\r\n   * è·åæ ¹ç»ä»¶appContext\r\n   */\r\n  private get messagePipe() {\r\n    if (this.viewModel && this.viewModel.frameContext) {\r\n      const appContext = this.viewModel.frameContext.getFormAppContext() || null;\r\n      if (appContext) {\r\n        return appContext.messagePipe || null;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * è§¦åæ¥è¯¢äºä»¶\r\n   * @param filters è¿æ»¤æ¡ä»¶\r\n   */\r\n  private fireQueryEvent(filters: any) {\r\n    const messagePipe = this.messagePipe;\r\n    // const frameId = this.viewModel && this.viewModel.frameContext && this.viewModel.frameContext.frameId || null;\r\n    if (messagePipe) {\r\n      messagePipe.next({ type: 'query' });\r\n    }\r\n  }\r\n  /**\r\n   * åå¹¶è¿æ»¤æ¡ä»¶\r\n   * @param filter è¡¨åè¿æ»¤æ¡ä»¶\r\n   */\r\n  private mergeFilterConditions(filter: any) {\r\n    if (typeof filter === 'string') {\r\n      filter = JSON.parse(filter) || [];\r\n    }\r\n    const filters: Array<any> = filter;\r\n    const bindingPath = this.viewModel && this.viewModel.bindingPath || null;\r\n    if (bindingPath) {\r\n      const originalConditions = this.viewModel && this.viewModel.frameContext.repository.filterConditionManager.getFilters(bindingPath) || [];\r\n      // this.filterConditionService.getFilters(bindingPath) || [];\r\n      const conditions = Array.from(originalConditions);\r\n      if (conditions && conditions.length > 0) {\r\n        /* filters.forEach((item: any, index: number) => {\r\n          const field = item.FilterField || null;\r\n          if (field) {\r\n            const duplicateIndex = conditions.findIndex(condition => condition.FilterField === field);\r\n            if (duplicateIndex !== -1) {\r\n              filters[index] = conditions[duplicateIndex];\r\n              conditions.splice(duplicateIndex, 1);\r\n            }\r\n          }\r\n        });*/\r\n        // ä¿®æ¹å½ä»¤ä¸è¿æ»¤æ¡ä»¶çæåä¸ä¸ªæ¥è¯¢å³ç³»ä¸ºand\r\n        if (filters.length > 0) {\r\n          // æåä¸ä¸ªè¿æ»¤æ¡ä»¶\r\n          const lastFilter = filters[filters.length - 1];\r\n          if (lastFilter) {\r\n            if (lastFilter.hasOwnProperty('Relation')) {\r\n              delete lastFilter.Relation;\r\n            }\r\n            lastFilter.relation = 1;\r\n          }\r\n        }\r\n        // åå¹¶æ°çè¿æ»¤æ¡ä»¶ååæ¥å½ä»¤ä¸çè¿æ»¤æ¡ä»¶\r\n        filters.push(...conditions);\r\n      }\r\n    }\r\n\r\n    return JSON.stringify(filters);\r\n  }\r\n  /**\r\n   * åå¹¶æåºæ¡ä»¶\r\n   * @param sort æåºæ¡ä»¶\r\n   */\r\n  private mergeSortConditions(sort: any) {\r\n    if (typeof sort === 'string') {\r\n      sort = JSON.parse(sort) || [];\r\n    }\r\n    const sorts: Array<any> = sort;\r\n    const bindingPath = this.viewModel && this.viewModel.bindingPath || null;\r\n    if (bindingPath) {\r\n      // è·åå½åç»å®è·¯å¾çæææåºæ¡ä»¶\r\n      const originalConditions = this.viewModel && this.viewModel.frameContext.repository.sortConditionManager.getConditionsByBindingPath(bindingPath, (direction) => {\r\n        if (direction === 'asc') {\r\n          return 0;\r\n        } else { return 1; }\r\n      }) || [];\r\n      const conditions = Array.from(originalConditions);\r\n      // å¦æå½åç»å®è·¯å¾ææåºæ¡ä»¶ï¼åå¿½ç¥å½ä»¤ä¸é¢å¶çæåºæ¡ä»¶\r\n      if (conditions && conditions.length > 0) {\r\n        // éåå·²æçè¿æ»¤æ¡ä»¶ï¼å¦ææéå¤çfieldï¼ç¨åèçè¦çå·²æç\r\n        /* sorts.forEach((item: any, index: number) => {\r\n          const field = item.SortField || null;\r\n          if (field) {\r\n            const duplicateIndex = conditions.findIndex(condition => condition.SortField === field);\r\n            if (duplicateIndex !== -1) {\r\n              sorts[index] = conditions[duplicateIndex];\r\n              conditions.splice(duplicateIndex, 1);\r\n            }\r\n          }\r\n        });*/\r\n        return JSON.stringify(conditions);\r\n        // å°å¶ä½æåºæ¡ä»¶æ·»å å°æåºæ°ç»\r\n        // sorts.push(...conditions);\r\n      }\r\n    }\r\n    return JSON.stringify(sorts);\r\n  }\r\n}\r\nexport { ListDataService };\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { Observable, empty, of, EMPTY } from 'rxjs';\r\nimport { tap, switchMap, concatMap } from 'rxjs/operators';\r\nimport { BindingList, Repository, ViewModel } from '@farris/devkit';\r\nimport { FormLoadingService } from '../form-loading/form-loading.service';\r\nimport { FormNotifyService } from '../form-notify.service';\r\nimport { LanguageService } from '../languag.service';\r\nimport { FormMessageService } from '../form-message.service';\r\nimport { FormErrorService } from '../error/form-error.service';\r\n\r\n/**\r\n * å­åè¡¨åæ°æå¡\r\n */\r\n@Injectable()\r\nclass SubListDataService {\r\n\r\n  /**\r\n   * æé å½æ°\r\n   */\r\n  constructor(\r\n    private msgService: FormMessageService,\r\n    private repository: Repository<any>,\r\n    private loadingService: FormLoadingService,\r\n    private viewModel: ViewModel,\r\n    @Optional() private languageService: LanguageService,\r\n    private formNotifyService: FormNotifyService,\r\n    private formErrorService: FormErrorService\r\n  ) {\r\n    if (!languageService) {\r\n      this.languageService = LanguageService.getInstance();\r\n    }\r\n    this.viewModel = viewModel;\r\n  }\r\n\r\n  /**\r\n   * æ°å¢\r\n   */\r\n  add(): Observable<any> {\r\n    if (this.messagePipe) {\r\n      this.messagePipe.next({ messageType: 'add' });\r\n    }\r\n    const path = this.getPath();\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    const append$ = this.repository.appendByPath(path);\r\n    return append$.pipe(\r\n      tap(() => {\r\n        this.loadingService.hideDelayLoading(loadingTimerId);\r\n      },\r\n        error => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.formErrorService.exception(this.languageService.addFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  /**\r\n   * å¨æå®ä½ç½®æå¥\r\n   * @param position ä½ç½®\r\n   */\r\n  public insert(position: 1 | -1 = -1) {\r\n    if (this.messagePipe) {\r\n      this.messagePipe.next({ messageType: 'insert' });\r\n    }\r\n    const path = this.getPath();\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    const append$ = this.repository.insertByPath(path, position);\r\n    return append$.pipe(\r\n      tap(() => {\r\n        this.loadingService.hideDelayLoading(loadingTimerId);\r\n      },\r\n        error => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.formErrorService.exception(this.languageService.addFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  /**\r\n   * å é¤å­è¡¨æ°æ®\r\n   */\r\n  remove(id: string, successMsg?: string): Observable<any> {\r\n    const msg = successMsg ? successMsg : '';\r\n    return this.innerRemove(id, false, msg);\r\n  }\r\n\r\n  /**\r\n   * å é¤å­è¡¨æ°æ®ï¼ä¸ç¡®è®¤ï¼\r\n   */\r\n  removeWithoutConfirm(id: string): Observable<any> {\r\n    return this.innerRemove(id, true, '');\r\n  }\r\n\r\n  /**\r\n   * æ¹éå é¤å­è¡¨\r\n   * @param ids ids\r\n   * @param successMsg èªå®ä¹æç¤ºä¿¡æ¯\r\n   */\r\n  removeChildrenByIds(ids: string, successMsg?: string): Observable<any> {\r\n    if (!ids) {\r\n      this.formNotifyService.warning(this.languageService['plsSelectDeleteData'], { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    const action$ = this.msgService.confirm(this.languageService.confirmDeletion);\r\n    return action$.pipe(\r\n      concatMap(result => {\r\n        if (!result) {\r\n          return EMPTY;\r\n        }\r\n        const path = this.getPath();\r\n        const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n        const remove$ = this.repository.batchRemoveByPath(path, ids);\r\n        return remove$.pipe(\r\n          tap(() => {\r\n            this.loadingService.hideDelayLoading(loadingTimerId);\r\n            if (successMsg && successMsg.trim()) {\r\n              let showMessage: boolean = true;\r\n              if (successMsg.startsWith('{') && successMsg.endsWith('}')) {\r\n                try {\r\n                  const options = JSON.parse(successMsg);\r\n                  if (options.showMessage === false) {\r\n                    showMessage = false;\r\n                  }\r\n                } catch { }\r\n              }\r\n              if (showMessage !== false) {\r\n                this.formNotifyService.success(successMsg, { hideTitle: true });\r\n              }\r\n            } else {\r\n              this.formNotifyService.success(this.languageService.deleteSuccess, { hideTitle: true });\r\n            }\r\n            // this.formNotifyService.success(this.languageService.deleteSuccess, { hideTitle: true });\r\n          },\r\n            error => {\r\n              this.loadingService.hideDelayLoading(loadingTimerId);\r\n              this.formErrorService.exception(this.languageService.deleteFailed, error);\r\n            }\r\n          )\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * å é¤\r\n   */\r\n  innerRemove(id: string, isConfirm: boolean, successMsg: string): Observable<any> {\r\n    if (this.messagePipe) {\r\n      this.messagePipe.next({ messageType: 'remove' });\r\n    }\r\n    if (!id) {\r\n      this.formNotifyService.warning(this.languageService['plsSelectDeleteData'], { hideTitle: true });\r\n      return empty();\r\n    }\r\n\r\n    let action$: Observable<boolean>;\r\n    if (isConfirm === false) {\r\n      action$ = this.msgService.question(this.languageService.confirmDeletion);\r\n    } else {\r\n      action$ = of(true);\r\n    }\r\n\r\n    return action$.pipe(\r\n      concatMap(result => {\r\n        if (!result) {\r\n          return empty();\r\n        }\r\n        const path = this.getPath();\r\n        const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n        const remove$ = this.repository.removeByPath(path, id);\r\n        return remove$.pipe(\r\n          tap(() => {\r\n            this.loadingService.hideDelayLoading(loadingTimerId);\r\n            if (successMsg && successMsg.trim()) {\r\n              let showMessage: boolean = true;\r\n              if (successMsg.startsWith('{') && successMsg.endsWith('}')) {\r\n                try {\r\n                  const options = JSON.parse(successMsg);\r\n                  if (options.showMessage === false) {\r\n                    showMessage = false;\r\n                  }\r\n                } catch { }\r\n              }\r\n              if (showMessage !== false) {\r\n                this.formNotifyService.success(successMsg, { hideTitle: true });\r\n              }\r\n            } else {\r\n              this.formNotifyService.success(this.languageService.deleteSuccess, { hideTitle: true });\r\n            }\r\n            // this.formNotifyService.success(this.languageService.deleteSuccess, { hideTitle: true });\r\n          },\r\n            error => {\r\n              this.loadingService.hideDelayLoading(loadingTimerId);\r\n              this.formErrorService.exception(this.languageService.deleteFailed, error);\r\n            }\r\n          )\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * å é¤å¹¶ä¿å­\r\n   * @param id id\r\n   * @param successMsg èªå®ä¹æç¤ºä¿¡æ¯\r\n   */\r\n  removeAndSave(id: string, successMsg?: string): Observable<any> {\r\n    if (this.messagePipe) {\r\n      this.messagePipe.next({ messageType: 'removeAndSave' });\r\n    }\r\n    if (!id) {\r\n      this.formNotifyService.warning(this.languageService.plsSelectDeleteData, { hideTitle: true });\r\n      return empty();\r\n    }\r\n    const action$ = this.msgService.confirm(this.languageService.confirmDeletion);\r\n    return action$.pipe(\r\n      concatMap(result => {\r\n        if (!result) {\r\n          return empty();\r\n        }\r\n\r\n        // å é¤å­è¡¨æ°æ®\r\n        const path = this.getPath();\r\n        const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n        const remove$ = this.repository.removeByPath(path, id);\r\n\r\n        return remove$.pipe(\r\n\r\n          // æ§è¡ä¸»è¡¨ä¿å­\r\n          switchMap(() => {\r\n            const fid = this.viewModel.bindingData.list.currentId as string;\r\n            return this.repository.applyChangesById(fid);\r\n          }),\r\n\r\n          // éèå è½½ä¸­\r\n          tap(() => {\r\n            this.loadingService.hideDelayLoading(loadingTimerId);\r\n            if (successMsg && successMsg.trim()) {\r\n              let showMessage: boolean = true;\r\n              if (successMsg.startsWith('{') && successMsg.endsWith('}')) {\r\n                try {\r\n                  const options = JSON.parse(successMsg);\r\n                  if (options.showMessage === false) {\r\n                    showMessage = false;\r\n                  }\r\n                } catch { }\r\n              }\r\n              if (showMessage !== false) {\r\n                this.formNotifyService.success(successMsg, { hideTitle: true });\r\n              }\r\n            } else {\r\n              this.formNotifyService.success(this.languageService.deleteSuccess, { hideTitle: true });\r\n            }\r\n            // this.formNotifyService.success(this.languageService.deleteSuccess, { hideTitle: true });\r\n          },\r\n            error => {\r\n              this.loadingService.hideDelayLoading(loadingTimerId);\r\n              this.formErrorService.exception(this.languageService.deleteFailed, error);\r\n            })\r\n        );\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * ä¸ç§»æä¸ç§»æ°æ®\r\n   * @param direction æ¹åï¼up | down\r\n   * @param field æåºå­æ®µ\r\n   * @param targets è¦ç§»å¨çæ°æ®\r\n   * @description\r\n   * ä½¿ç¨è¯¥æ¹æ³æ¶æåºå­æ®µå¿é¡»æå¼ï¼å¦åæ æ³æåº\r\n   */\r\n  public move(direction: string | 'up' | 'down', field: string, targets: Array<any> | string) {\r\n    if (!targets) {\r\n      return;\r\n    }\r\n    if (typeof targets === 'string') {\r\n      targets = targets.split(',').filter(p => p);\r\n    }\r\n    const bindingPath = this.viewModel && this.viewModel.bindingPath || null;\r\n    if (!bindingPath) {\r\n      return;\r\n    }\r\n    const bindingList = this.viewModel.bindingData.getList() as BindingList;\r\n    if (!bindingList || bindingList.length < 1) {\r\n      return;\r\n    }\r\n    targets.forEach((target) => {\r\n      const index = bindingList.getIndexById(target);\r\n      if (index === -1) {\r\n        return;\r\n      }\r\n      const item = bindingList.findById(target);\r\n      const position = item.getValue(field);\r\n      const base = direction === 'up' ? -1 : 1;\r\n      // å¾äº¤æ¢çè¡ä¿¡æ¯\r\n      const exchangeRowIndex = index + base;\r\n      if (exchangeRowIndex < 0 || exchangeRowIndex > bindingList.length) {\r\n        // ç¬¬ä¸è¡æ æ³ä¸ç§»ï¼æåä¸è¡æ æ³ä¸ç§»\r\n        return;\r\n      }\r\n      const exchangeRowId = bindingList.getIdByIndex(exchangeRowIndex);\r\n      const exchangeRow = bindingList.findById(exchangeRowId);\r\n      const exchangeRowPosition = exchangeRow[field];\r\n      // ç§»å¨è¡åäº¤æ¢è¡é½æ²¡ææåº\r\n      if (this.isNullOrEmpty(position) && this.isNullOrEmpty(exchangeRowPosition)) {\r\n        return;\r\n      }\r\n      bindingList.swapById(target, exchangeRowId);\r\n      exchangeRow.setValue(field, position, true, true);\r\n      item.setValue(field, exchangeRowPosition, true, true);\r\n    });\r\n\r\n  }\r\n  private isNullOrEmpty(value: any) {\r\n    return value === '' || value === null || value === undefined;\r\n  }\r\n  /**\r\n   * è·åå®æ´è·¯å¾\r\n   * @todoï¼å¼ºè¯å«å°ä»è¡¨è¿ä¸çº§\r\n   * fixed by justin: æ ¹æ®bindingPathï¼å¦ææ¯ä»ä»è¡¨ï¼éè¦è·åä¸»è¡¨æ°æ®idåä»è¡¨æ°æ®id\r\n   */\r\n  private getPath(): string {\r\n    const bindingPath = this.viewModel.bindingPath;\r\n    const rid = this.viewModel.bindingData.list.currentId; // rootè¡¨æ°æ®id\r\n    let path = '/' + rid;\r\n\r\n    const subPaths = bindingPath.split('/');\r\n    if (subPaths.length > 0) {\r\n      // eg:bindingPathå½¢å¦/edus/grades,splitåæ¯['', 'edus', 'grades']\r\n      // å æ­¤indexä»1å¼å§\r\n      for (let index = 1; index < subPaths.length - 1; index++) {\r\n        const subPath = subPaths[index];\r\n        const subData = this.viewModel.bindingData[subPath];\r\n        if (!subData || !subData.currentId) {\r\n          this.formNotifyService.warning(this.languageService['plsSelectDetailFormData'], { hideTitle: true });\r\n          throw Error(`è·åå­è¡¨å®æ´è·¯å¾åºéï¼æ¾ä¸å°${subData}å¯¹åºçå­è¡¨ï¼æå¯¹åºå­è¡¨æ²¡æå½åè¡ã`);\r\n        }\r\n        path += `/${subPath}/${subData.currentId}`;\r\n      }\r\n    }\r\n    path += '/' + subPaths[subPaths.length - 1];\r\n\r\n    return path;\r\n  }\r\n  /**\r\n   * è·åæ ¹ç»ä»¶appContext\r\n   */\r\n  private get messagePipe() {\r\n    if (this.viewModel && this.viewModel.frameContext) {\r\n      const appContext = this.viewModel.frameContext.getFormAppContext() || null;\r\n      if (appContext) {\r\n        return appContext.messagePipe || null;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\nexport { SubListDataService };\r\n","\r\nimport { Entity, FrameContext, BindingData } from '@farris/devkit';\r\nimport { BefRepository, BefRestService } from '@farris/bef';\r\n\r\n/**\r\n * åºç¡æ°æ®æå¡\r\n */\r\nclass BaseDataService {\r\n\r\n  /**\r\n   * æ¡æ¶ä¸ä¸æ\r\n   */\r\n  protected frameContext: FrameContext;\r\n\r\n  /**\r\n   * å®ä½ä»åº\r\n   */\r\n  protected get repository(): BefRepository<Entity> {\r\n    return this.frameContext.repository as BefRepository<Entity>;\r\n  }\r\n\r\n  /**\r\n   * Restæå¡\r\n   */\r\n  protected get restService(): BefRestService {\r\n    return this.repository.restService;\r\n  }\r\n\r\n  /**\r\n   * æ°æ®ç»å®\r\n   */\r\n  protected get bindingData(): BindingData {\r\n    return this.frameContext.bindingData;\r\n  }\r\n\r\n  /**\r\n   * æé å½æ°\r\n   */\r\n  constructor(frameContext: FrameContext) {\r\n    this.frameContext = frameContext;\r\n  }\r\n\r\n}\r\n\r\nexport { BaseDataService };\r\n","import { BindingData, BindingList } from '@farris/devkit';\r\n\r\n/**\r\n * æ æ°æ®çå¸®å©ç±»\r\n */\r\nclass ParentTreeNodeUtil {\r\n\r\n  /**\r\n   * éä¸­ç¬¬ä¸ä¸ªæ ¹èç¹\r\n   */\r\n  public selectFirstRootNode(bindingData: BindingData, hierarchyInfoKey: string): string {\r\n\r\n    const treeNodesData = bindingData.list.toJSON();\r\n    const firstRootNodeId = this.getFirstNodeId(treeNodesData, hierarchyInfoKey);\r\n    this.selectedNode(bindingData, hierarchyInfoKey, firstRootNodeId);\r\n    return firstRootNodeId;\r\n  }\r\n  public selectNodeByBindingList(bindingList: BindingList, hierarchyInfoKey: string, selectedNodeId: string): void {\r\n    const treeNodesData = bindingList.toJSON();\r\n    // å¦æè¦è®¾ç½®çèç¹ä¸å­å¨ï¼åè®¾ç½®ç¬¬1ä¸ªæ ¹èç¹\r\n    const selectedNodeData = this.getNodeDataById(treeNodesData, selectedNodeId);\r\n    let currentId = selectedNodeId;\r\n    if (!selectedNodeData) {\r\n      currentId = this.getFirstNodeId(treeNodesData, hierarchyInfoKey);\r\n    }\r\n    setTimeout(() => {\r\n      bindingList.setCurrentId(currentId, true, true);\r\n    }, 0);\r\n  }\r\n  /**\r\n   * éä¸­èç¹\r\n   */\r\n  public selectedNode(bindingData: BindingData, hierarchyInfoKey: string, selectedNodeId: string): void {\r\n    const treeNodesData = bindingData.list.toJSON();\r\n    // å¦æè¦è®¾ç½®çèç¹ä¸å­å¨ï¼åè®¾ç½®ç¬¬1ä¸ªæ ¹èç¹\r\n    const selectedNodeData = this.getNodeDataById(treeNodesData, selectedNodeId);\r\n    let currentId = selectedNodeId;\r\n    if (!selectedNodeData) {\r\n      currentId = this.getFirstNodeId(treeNodesData, hierarchyInfoKey);\r\n    }\r\n    if (bindingData.rowSelectedEventSuspend === true) {\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      bindingData.list.currentId = null;\r\n      bindingData.list.setCurrentId(currentId, true, true);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * æ£æ¥æ¯å¦æå­èç¹\r\n   */\r\n  public hasChildNodes(treeNodesData: any[], hierarchyInfoKey: string, fid: string): boolean {\r\n    const fNodeData = this.getNodeDataById(treeNodesData, fid);\r\n    // const fLayer = fNodeData[hierarchyInfoKey]['layer'];\r\n    const fIsDetail = fNodeData[hierarchyInfoKey]['isDetail'];\r\n\r\n    // éæç»èç¹ï¼è¿åtrue\r\n    if (fIsDetail === false) {\r\n      return true;\r\n    }\r\n    return false;\r\n\r\n    // const childNodesData = this.getChildNodesData(treeNodesData, hierarchyInfoKey, fLayer, fid);\r\n    // return childNodesData.length > 0;\r\n  }\r\n\r\n  /**\r\n   * è·åæ ¹èç¹ï¼å¤ä¸ªæ ¹èç¹æ¶è·åç¬¬ä¸ä¸ªï¼\r\n   * @return æ¾ä¸å°æ¶è¿ånull\r\n   */\r\n  private getFirstNodeId(treeNodesData: any[], hierarchyInfoKey: string): string {\r\n    let rootData = treeNodesData.find((itemData: any) => {\r\n      const layer = itemData[hierarchyInfoKey]['layer'];\r\n      return layer === 1;\r\n    });\r\n    if (!rootData) {\r\n      const rootLayer = this.getRootLayer(treeNodesData, hierarchyInfoKey);\r\n      rootData = treeNodesData.find((itemData: any) => {\r\n        const layer = itemData[hierarchyInfoKey]['layer'];\r\n        return layer === rootLayer;\r\n      });\r\n    }\r\n    return rootData ? rootData['id'] : '';\r\n  }\r\n  private getRootLayer(treeNodesData: any[], hierarchyInfoKey: string) {\r\n    let layer = null;\r\n    if (treeNodesData && Array.isArray(treeNodesData)) {\r\n      const layers = treeNodesData.map(item => {\r\n        const layer = item[hierarchyInfoKey]['layer'];\r\n        return layer;\r\n      });\r\n      const minLayer = Math.min.apply(Math, layers);\r\n      if (!isNaN(minLayer)) {\r\n        layer = minLayer;\r\n      }\r\n    }\r\n    return layer;\r\n  }\r\n  /**\r\n   * è·åä¸ä¸ä¸ªèç¹ï¼å é¤åï¼\r\n   */\r\n  public getNextNodeId(treeNodesData: any[], hierarchyInfoKey: string, currentId: string): string {\r\n\r\n    // å½åèç¹ä¿¡æ¯\r\n    const currentNodeData = treeNodesData.find((itemData: any) => {\r\n      return itemData['id'] === currentId;\r\n    });\r\n    const currentLayer = currentNodeData[hierarchyInfoKey]['layer'];\r\n\r\n    // ç¶èç¹ä¿¡æ¯\r\n    const fLayer = currentLayer - 1;\r\n    const fParentElement = currentNodeData[hierarchyInfoKey]['parentElement'];\r\n\r\n    // æ¥æ¾åå¼èç¹\r\n    const siblingtreeNodesData = this.getChildNodesData(treeNodesData, hierarchyInfoKey, fLayer, fParentElement);\r\n\r\n    // å¦ææ²¡æåå¼èç¹ï¼åä¸æ¥æ¾\r\n    if (siblingtreeNodesData.length === 1) {\r\n      const parentData = treeNodesData.find((itemData: any) => {\r\n        return itemData['id'] === fParentElement;\r\n      });\r\n\r\n      // å­å¨ç¶èç¹ï¼åè®¾ç½®ç¶èç¹ï¼\r\n      // ä¸å­å¨ç¶èç¹ï¼åè®¾ç½®ç¬¬ä¸ä¸ªæ ¹èç¹ã\r\n      if (!parentData) {\r\n        return this.getFirstNodeId(treeNodesData, hierarchyInfoKey);\r\n      }\r\n      return parentData['id'];\r\n    } else {\r\n      return this.getNextSiblingNodeId(siblingtreeNodesData, currentId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è·åä¸ä¸ªåå¼èç¹çid\r\n   */\r\n  public getNextSiblingNodeId(siblingtreeNodesData: any[], currentId: string): string {\r\n    if (siblingtreeNodesData.length <= 1) {\r\n      return '';\r\n    }\r\n\r\n    const currentIndex = siblingtreeNodesData.findIndex((itemData: any) => {\r\n      return itemData['id'] === currentId;\r\n    });\r\n\r\n    // æåä¸è¡ä¸ç§»ä¸è¡ï¼å¶ä»ä¸ç§»ä¸è¡\r\n    let nextIndex = -1;\r\n    if (currentIndex === siblingtreeNodesData.length - 1) {\r\n      nextIndex = currentIndex - 1;\r\n    } else {\r\n      nextIndex = currentIndex + 1;\r\n    }\r\n\r\n    return siblingtreeNodesData[nextIndex]['id'];\r\n  }\r\n\r\n  /**\r\n   * è·åä¸çº§èç¹çBindingObjectséå\r\n   */\r\n  public getChildNodesData(treeNodesData: any[], hierarchyInfoKey: string, fLayer: number, fParentElement: string): any[] {\r\n    const childtreeNodesData = treeNodesData.filter((itemData) => {\r\n      const layer = itemData[hierarchyInfoKey]['layer'];\r\n      const parentElement = itemData[hierarchyInfoKey]['parentElement'];\r\n      return (layer === fLayer + 1) && fParentElement == parentElement;\r\n    });\r\n    return childtreeNodesData;\r\n  }\r\n\r\n  /**\r\n   * è·åidè·åèç¹æ°æ®\r\n   */\r\n  public getNodeDataById(treeNodesData: any[], id: string): any {\r\n    const nodeData = treeNodesData.find((itemData: any) => {\r\n      return itemData['id'] === id;\r\n    });\r\n    return nodeData ? nodeData : null;\r\n  }\r\n}\r\n\r\nexport { ParentTreeNodeUtil };\r\n","import { BindingData, BindingList } from '@farris/devkit';\r\n\r\n/**\r\n * æ æ°æ®çå¸®å©ç±»\r\n */\r\nclass PathTreeNodeUtil {\r\n\r\n  /**\r\n   * éä¸­ç¬¬ä¸ä¸ªæ ¹èç¹\r\n   */\r\n  public selectFirstRootNode(bindingData: BindingData, hierarchyInfoKey: string): string {\r\n\r\n    const treeNodesData = bindingData.list.toJSON();\r\n    const firstRootNodeId = this.getFirstNodeId(treeNodesData, hierarchyInfoKey);\r\n    this.selectedNode(bindingData, hierarchyInfoKey, firstRootNodeId);\r\n    return firstRootNodeId;\r\n  }\r\n  public selectNodeByBindingList(bindingList: BindingList, hierarchyInfoKey: string, selectedNodeId: string): void {\r\n    const treeNodesData = bindingList.toJSON();\r\n    // å¦æè¦è®¾ç½®çèç¹ä¸å­å¨ï¼åè®¾ç½®ç¬¬1ä¸ªæ ¹èç¹\r\n    const selectedNodeData = this.getNodeDataById(treeNodesData, selectedNodeId);\r\n    let currentId = selectedNodeId;\r\n    if (!selectedNodeData) {\r\n      currentId = this.getFirstNodeId(treeNodesData, hierarchyInfoKey);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      bindingList.setCurrentId(currentId, true, true);\r\n    }, 0);\r\n  }\r\n  /**\r\n   * éä¸­èç¹\r\n   */\r\n  public selectedNode(bindingData: BindingData, hierarchyInfoKey: string, selectedNodeId: string): void {\r\n    const treeNodesData = bindingData.list.toJSON();\r\n    // å¦æè¦è®¾ç½®çèç¹ä¸å­å¨ï¼åè®¾ç½®ç¬¬1ä¸ªæ ¹èç¹\r\n    const selectedNodeData = this.getNodeDataById(treeNodesData, selectedNodeId);\r\n    let currentId = selectedNodeId;\r\n    if (!selectedNodeData) {\r\n      currentId = this.getFirstNodeId(treeNodesData, hierarchyInfoKey);\r\n    }\r\n    if (bindingData.rowSelectedEventSuspend === true) {\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      bindingData.list.currentId = null;\r\n      bindingData.list.setCurrentId(currentId, true, true);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * æ£æ¥æ¯å¦æå­èç¹\r\n   */\r\n  public hasChildNodes(treeNodesData: any[], hierarchyInfoKey: string, fid: string): boolean {\r\n    const fNodeData = this.getNodeDataById(treeNodesData, fid);\r\n    // const fLayer = fNodeData[hierarchyInfoKey]['layer'];\r\n    // const fPath  = fNodeData[hierarchyInfoKey]['path'];\r\n    const fIsDetail = fNodeData[hierarchyInfoKey]['isDetail'];\r\n\r\n    // éæç»èç¹ï¼è¿åtrue\r\n    if (fIsDetail === false) {\r\n      return true;\r\n    }\r\n    return false;\r\n    // const childNodesData = this.getChildNodesData(treeNodesData, hierarchyInfoKey, fLayer, fPath);\r\n    // return childNodesData.length > 0;\r\n  }\r\n\r\n  /**\r\n   * è·åæ ¹èç¹ï¼å¤ä¸ªæ ¹èç¹æ¶è·åç¬¬ä¸ä¸ªï¼\r\n   * @return æ¾ä¸å°æ¶è¿ånull\r\n   */\r\n  private getFirstNodeId(treeNodesData: any[], hierarchyInfoKey: string): string {\r\n    let rootData = treeNodesData.find((itemData: any) => {\r\n      const layer = itemData[hierarchyInfoKey]['layer'];\r\n      return layer === 1;\r\n    });\r\n    if (!rootData) {\r\n      const rootLayer = this.getRootLayer(treeNodesData, hierarchyInfoKey);\r\n      rootData = treeNodesData.find((itemData: any) => {\r\n        const layer = itemData[hierarchyInfoKey]['layer'];\r\n        return layer === rootLayer;\r\n      });\r\n    }\r\n    return rootData ? rootData['id'] : '';\r\n  }\r\n  private getRootLayer(treeNodesData: any[], hierarchyInfoKey: string) {\r\n    let layer = null;\r\n    if (treeNodesData && Array.isArray(treeNodesData)) {\r\n      const layers = treeNodesData.map(item => {\r\n        const layer = item[hierarchyInfoKey]['layer'];\r\n        return layer;\r\n      });\r\n      const minLayer = Math.min.apply(Math, layers);\r\n      if (!isNaN(minLayer)) {\r\n        layer = minLayer;\r\n      }\r\n    }\r\n    return layer;\r\n  }\r\n  /**\r\n   * è·åä¸ä¸ä¸ªèç¹ï¼å é¤åï¼\r\n   */\r\n  public getNextNodeId(treeNodesData: any[], hierarchyInfoKey: string, currentId: string): string {\r\n\r\n    // å½åèç¹ä¿¡æ¯\r\n    const currentNodeData = treeNodesData.find((itemData: any) => {\r\n      return itemData['id'] === currentId;\r\n    });\r\n    const currentPath = currentNodeData[hierarchyInfoKey]['path'];\r\n    const currentLayer = currentNodeData[hierarchyInfoKey]['layer'];\r\n\r\n    // ç¶èç¹ä¿¡æ¯\r\n    const fLayer = currentLayer - 1;\r\n    const fPath = currentPath.substring(0, currentPath.length - 4);\r\n\r\n    // æ¥æ¾åå¼èç¹\r\n    const siblingtreeNodesData = this.getChildNodesData(treeNodesData, hierarchyInfoKey, fLayer, fPath);\r\n\r\n    // å¦ææ²¡æåå¼èç¹ï¼åä¸æ¥æ¾\r\n    if (siblingtreeNodesData.length === 1) {\r\n      const parentData = treeNodesData.find((itemData: any) => {\r\n        return itemData[hierarchyInfoKey]['path'] === fPath;\r\n      });\r\n\r\n      // å­å¨ç¶èç¹ï¼åè®¾ç½®ç¶èç¹ï¼\r\n      // ä¸å­å¨ç¶èç¹ï¼åè®¾ç½®ç¬¬ä¸ä¸ªæ ¹èç¹ã\r\n      if (!parentData) {\r\n        return this.getFirstNodeId(treeNodesData, hierarchyInfoKey);\r\n      }\r\n      return parentData['id'];\r\n    } else {\r\n      return this.getNextSiblingNodeId(siblingtreeNodesData, currentId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è·åä¸ä¸ªåå¼èç¹çid\r\n   */\r\n  public getNextSiblingNodeId(siblingtreeNodesData: any[], currentId: string): string {\r\n    if (siblingtreeNodesData.length <= 1) {\r\n      return '';\r\n    }\r\n\r\n    const currentIndex = siblingtreeNodesData.findIndex((itemData: any) => {\r\n      return itemData['id'] === currentId;\r\n    });\r\n\r\n    // æåä¸è¡ä¸ç§»ä¸è¡ï¼å¶ä»ä¸ç§»ä¸è¡\r\n    let nextIndex = -1;\r\n    if (currentIndex === siblingtreeNodesData.length - 1) {\r\n      nextIndex = currentIndex - 1;\r\n    } else {\r\n      nextIndex = currentIndex + 1;\r\n    }\r\n\r\n    return siblingtreeNodesData[nextIndex]['id'];\r\n  }\r\n\r\n  /**\r\n   * è·åä¸çº§èç¹çBindingObjectséå\r\n   */\r\n  public getChildNodesData(treeNodesData: any[], hierarchyInfoKey: string, fLayer: number, fPath: string): any[] {\r\n    const childtreeNodesData = treeNodesData.filter((itemData) => {\r\n      const layer = itemData[hierarchyInfoKey]['layer'];\r\n      const path = itemData[hierarchyInfoKey]['path'];\r\n      return (layer === fLayer + 1) && path.startsWith(fPath);\r\n    });\r\n    return childtreeNodesData;\r\n  }\r\n\r\n  /**\r\n   * è·åidè·åèç¹æ°æ®\r\n   */\r\n  public getNodeDataById(treeNodesData: any[], id: string): any {\r\n    const nodeData = treeNodesData.find((itemData: any) => {\r\n      return itemData['id'] === id;\r\n    });\r\n    return nodeData ? nodeData : null;\r\n  }\r\n}\r\n\r\nexport { PathTreeNodeUtil };\r\n","/*\r\n * @Author: aalizzwell \r\n * @Date: 2019-05-30 14:12:39 \r\n * @Last Modified by: aalizzwell\r\n * @Last Modified time: 2019-05-30 16:18:47\r\n */\r\nimport { ParentTreeNodeUtil } from './parent-tree.util';\r\nimport { PathTreeNodeUtil } from './path-tree.util';\r\n\r\nexport class TreeUtilFactory {\r\n  static getInstance(treeType: string) {\r\n    let util = null;\r\n    switch (treeType) {\r\n      case 'path':\r\n        util = new PathTreeNodeUtil();\r\n        break;\r\n      case 'parent':\r\n        util = new ParentTreeNodeUtil();\r\n        break;\r\n      default: break;\r\n    }\r\n    return util;\r\n  }\r\n}","import { HttpHeaders } from '@angular/common/http';\r\nimport { of, Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { Entity, FieldMetadataUtil, FrameContext, Repository } from '@farris/devkit';\r\nimport { ResponseInfo, BefRepository } from '@farris/bef';\r\n\r\n/**\r\n * ç¶å­æ ä»åº\r\n */\r\nclass ParentTreeRepository {\r\n\r\n  /**\r\n   * æ·»å åå¼èç¹\r\n   */\r\n  public addSibling(repository: BefRepository<Entity>, id: string): Observable<Entity> {\r\n    const restService = repository.restService;\r\n    const baseUri = restService.baseUri;\r\n    const addSiblingUri = `${baseUri}/service/parenthierarchycreatesibling`;\r\n    const body = {\r\n      dataID: id,\r\n      requestInfo: restService.buildRequestInfo()\r\n    };\r\n    const options = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      body: body\r\n    };\r\n    return restService.invoke(addSiblingUri, 'PUT', null, options).pipe(\r\n      map((responseInfo: ResponseInfo) => {\r\n        const entity = repository.buildEntity(responseInfo.returnValue);\r\n        repository.entityCollection.addEntity(entity);\r\n        return entity;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * æ·»å åå¼èç¹\r\n   */\r\n  public addChild(repository: BefRepository<Entity>, parentId: string) {\r\n    const restService = repository.restService;\r\n    const baseUri = restService.baseUri;\r\n    const addChildUri = `${baseUri}/service/parenthierarchycreatechildlayer`;\r\n\r\n    const body = {\r\n      dataID: parentId,\r\n      requestInfo: restService.buildRequestInfo()\r\n    };\r\n    const options = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      body: body\r\n    };\r\n    return restService.invoke(addChildUri, 'PUT', null, options).pipe(\r\n      map((responseInfo: ResponseInfo) => {\r\n        const entity = repository.buildEntity(responseInfo.returnValue);\r\n        repository.entityCollection.addEntity(entity);\r\n        return entity;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * æ·»å å­è¡¨åå¼èç¹\r\n   */\r\n  public addSubSibling(repository: BefRepository<Entity>, nodes: Array<string>, ids: Array<string>): Observable<Entity> {\r\n    const restService = repository.restService;\r\n    const baseUri = restService.baseUri;\r\n    const addSubSiblingUri = `${baseUri}/service/childnodeparenthierarchycreatesibling`;\r\n    const body = {\r\n      nodes: nodes,\r\n      ids: ids,\r\n      requestInfo: restService.buildRequestInfo()\r\n    };\r\n    const options = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      body: body\r\n    };\r\n    return restService.invoke(addSubSiblingUri, 'PUT', null, options).pipe(\r\n      map((responseInfo: ResponseInfo) => {\r\n        let path = this.getPaths(nodes, ids);\r\n        const entity = repository.entityManager.appendEntityByPath(path, responseInfo.returnValue)\r\n        return entity;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * æ·»å å­è¡¨å­èç¹\r\n   */\r\n  public addSubChild(repository: BefRepository<Entity>, nodes: Array<string>, ids: Array<string>) {\r\n    const restService = repository.restService;\r\n    const baseUri = restService.baseUri;\r\n    const addSubChildUri = `${baseUri}/service/childnodeparenthierarchycreatechildlayer`;\r\n\r\n    const body = {\r\n      nodes: nodes,\r\n      ids: ids,\r\n      requestInfo: restService.buildRequestInfo()\r\n    };\r\n    const options = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      body: body\r\n    };\r\n    return restService.invoke(addSubChildUri, 'PUT', null, options).pipe(\r\n      map((responseInfo: ResponseInfo) => {\r\n        let paths = this.getPaths(nodes, ids);\r\n        const entity = repository.entityManager.appendEntityByPath(paths, responseInfo.returnValue);\r\n        return entity;\r\n      })\r\n    );\r\n  }\r\n\r\n  private getPaths(nodes: string[], ids: string[]) {\r\n    let paths = '';\r\n    if (nodes && nodes.length > 0 && ids && ids.length > 0) {\r\n      for (let i = 0; i < ids.length; i++) {\r\n        if (nodes[i]) {\r\n          paths = paths + `/${ids[i]}`;\r\n          paths = paths + `/${nodes[i]}s`;\r\n        }\r\n      }\r\n    }\r\n    return paths;\r\n  }\r\n\r\n  /**\r\n   * å è½½ç¶èç¹\r\n   */\r\n  // tslint:disable-next-line: max-line-length\r\n  public loadByParentId(repository: BefRepository<Entity>, hierarchyInfoKey: string, parentId: string, filters: any[], sorts: any[], frozenCurrentRow: boolean = false, pagination?: { pageSize: number, pageIndex: number }, frameContext?: FrameContext, reload: boolean = false): Observable<Entity[]> {\r\n    const localEntities = this.getChildren(repository, hierarchyInfoKey, parentId);\r\n    if (localEntities && localEntities.length > 0 && !reload) {\r\n      return of(localEntities);\r\n    }\r\n    const restService = repository.restService;\r\n    const parentHierarchyInfo = this.getHierarchyInfoById(repository, hierarchyInfoKey, parentId);\r\n    const originalHierarchyInfoKey = this.getOriginalHierarchyInfoKey(repository, hierarchyInfoKey);\r\n    const filtersWithParent = this.buildFiltersWithParent(originalHierarchyInfoKey, parentHierarchyInfo, filters);\r\n    const isUsePagination = pagination && pagination.pageSize > 0 || false;\r\n    // ç»ç»EntityFilter\r\n    const entityFilter = {\r\n      FilterConditions: filtersWithParent,\r\n      SortConditions: sorts,\r\n      IsUsePagination: isUsePagination,\r\n      Pagination: { PageIndex: pagination && pagination.pageIndex || 0, PageSize: pagination && pagination.pageSize || 0, PageCount: 0, TotalCount: 0 }\r\n    };\r\n    const requestInfo = restService.buildRequestInfo();\r\n    return restService.extendQuery(entityFilter, requestInfo).pipe(\r\n      map((responseInfo: ResponseInfo) => {\r\n        const paginationInfo = this.getPaginationInfo(responseInfo);\r\n        if (parentId) {\r\n          if (paginationInfo && paginationInfo.pageSize !== 0 && frameContext) {\r\n            frameContext.params.set(`_NODE_${parentId}_PAGINATION_INFO_`, paginationInfo);\r\n          }\r\n        } else {\r\n          if (paginationInfo && paginationInfo.pageSize !== 0 && frameContext) {\r\n            frameContext.repository.entityCollection.updatePaginationInfoByPath('/', paginationInfo);\r\n          }\r\n        }\r\n        // åæ¸ç©ºä¸çº§å®ä½\r\n        this.clearDescendantEntities(repository, hierarchyInfoKey, parentHierarchyInfo, frozenCurrentRow);\r\n        // è¿½å ä¸çº§å®ä½\r\n        const listData = responseInfo.returnValue.result;\r\n        const entities = repository.buildEntities(listData);\r\n        if (frozenCurrentRow) {\r\n          repository.entityCollection.addData(entities, { isTreeNodeLoadScene: true });\r\n        } else {\r\n          repository.entityCollection.addEntities(entities, { isTreeNodeLoadScene: true });\r\n        }\r\n        return entities;\r\n      })\r\n    );\r\n  }\r\n  // tslint:disable-next-line: max-line-length\r\n  public loadFullTree(repository: BefRepository<Entity>, hierarchyInfoKey: string, parentId: string, propertyName: string, fullTreeType: string, loadType: string, filters?: any[], context?: any): Observable<Entity[]> {\r\n    const restService = repository.restService;\r\n    const baseUri = restService.baseUri;\r\n    const queryUrl = `${baseUri}/service/parentidfulltreequery`;\r\n    const parentHierarchyInfo = this.getHierarchyInfoById(repository, hierarchyInfoKey, parentId);\r\n    const entityFilter = this.buildEntityFilter(filters, null, 0, 0);\r\n\r\n    const body = {\r\n      dataId: parentId || '',\r\n      isUsePagination: false,\r\n      virtualPropertyName: propertyName,\r\n      pagination: {},\r\n      fullTreeType,\r\n      loadType,\r\n      filter: entityFilter,\r\n      requestInfo: restService.buildRequestInfo()\r\n    };\r\n    const options = {\r\n      body: body\r\n    };\r\n    return restService.invoke(queryUrl, 'PUT', null, options).pipe(\r\n      tap((responseInfo: ResponseInfo) => {\r\n        // ä¿å­å±å¼çèç¹\r\n        if (responseInfo.returnValue && responseInfo.returnValue.selectedRowId && context && context.frameContext) {\r\n          const frameContext = context.frameContext as FrameContext;\r\n          const virtualRootFrameContext = frameContext && frameContext.getVirtualRootFrameContext() || null;\r\n          if (virtualRootFrameContext) {\r\n            const list = responseInfo.returnValue.result as any[];\r\n            const selectedRowId = responseInfo.returnValue.selectedRowId;\r\n            // ä»é¡¶å±å¼å§è®¡ç®ææéè¦å±å¼çèç¹\r\n            const leafNodeInfo = list.find(item => item[repository.primaryKey] === selectedRowId);\r\n            const hierarchyInfo = leafNodeInfo[hierarchyInfoKey] as { isDetail: boolean, layer: number, parentElement: string };\r\n            const ids = this.getAllParentIds(hierarchyInfo, list, hierarchyInfoKey, repository);\r\n            virtualRootFrameContext.params.set('_DEVKIT_expandRowIds', ids.join(','));\r\n            virtualRootFrameContext.params.set('_DEVKIT_selectedRowId', selectedRowId);\r\n            virtualRootFrameContext.uiState.setPropertyValue('__DEVKIT__selectedRow', selectedRowId);\r\n          }\r\n        }\r\n      }),\r\n      map((responseInfo: ResponseInfo) => {\r\n        const frozenCurrentRow = context && context.frozenCurrentRow || false;\r\n        // åæ¸ç©ºä¸çº§å®ä½\r\n        this.clearDescendantEntities(repository, hierarchyInfoKey, parentHierarchyInfo, frozenCurrentRow);\r\n        // è¿½å ä¸çº§å®ä½\r\n        const listData = responseInfo.returnValue.result;\r\n        const entities = repository.buildEntities(listData);\r\n        if (frozenCurrentRow) {\r\n          repository.entityCollection.addData(entities, { isTreeNodeLoadScene: true });\r\n        } else {\r\n          repository.entityCollection.addEntities(entities, { isTreeNodeLoadScene: true });\r\n        }\r\n        return entities;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * æå¥å¯¹ç¶èç¹çè¿æ»¤\r\n   */\r\n  public buildFiltersWithParent(originalHierarchyInfoKey: string, parentHierarchyInfo: any, filterArray: any[]): any {\r\n    const relationType = filterArray && filterArray.length >= 1 ? 1 : 0;\r\n    const parentLayer = parentHierarchyInfo ? parentHierarchyInfo['layer'] : 0;\r\n    const parentElement = parentHierarchyInfo ? parentHierarchyInfo['id'] : '';\r\n\r\n    const parentFilterArray = [\r\n      {\r\n        \"FilterField\": `${originalHierarchyInfoKey}.Layer`,\r\n        \"Value\": parentLayer + 1,\r\n        \"Lbracket\": null,\r\n        \"Rbracket\": null,\r\n        \"Relation\": 1,\r\n        \"Expresstype\": 0,\r\n        \"Compare\": 0\r\n      }\r\n    ];\r\n    if (parentElement) {\r\n      parentFilterArray.push(\r\n        {\r\n          \"FilterField\": `${originalHierarchyInfoKey}.ParentElement`,\r\n          \"Value\": parentElement,\r\n          \"Lbracket\": null,\r\n          \"Rbracket\": null,\r\n          \"Relation\": relationType,\r\n          \"Expresstype\": 0,\r\n          \"Compare\": 0\r\n        }\r\n      );\r\n    } else {\r\n      parentFilterArray[0].Relation = relationType;\r\n    }\r\n    return parentFilterArray.concat(filterArray);\r\n  }\r\n  public buildEntityFilter(filter: any[], sort: any[], pageSize: number, pageIndex: number) {\r\n\r\n    // @todoï¼ä¸´æ¶å¼å®¹èä»£ç ï¼éä½æ¹å¨å¸¦æ¥çé£é©\r\n    if (!filter && !sort && !pageSize && !pageIndex) {\r\n      return null;\r\n    }\r\n    if (!filter) {\r\n      filter = [];\r\n    }\r\n    if (!sort) {\r\n      sort = [];\r\n    }\r\n    // çº æ­£æåä¸ä¸ªè¿æ»¤æ¡ä»¶çRelation\r\n    if (filter && filter.length > 0) {\r\n      filter[filter.length - 1].Relation = 0;\r\n    }\r\n    const entityFilter = {\r\n      FilterConditions: filter,\r\n      SortConditions: sort,\r\n      IsUsePagination: pageSize === 0 ? false : true,\r\n      Pagination: {\r\n        PageIndex: pageIndex,\r\n        PageSize: pageSize,\r\n        PageCount: 0,\r\n        TotalCount: 0\r\n      }\r\n    };\r\n    return entityFilter;\r\n  }\r\n  /**\r\n   * æ¸ç©ºåä»£å®ä½\r\n   * @description parentHierarchyInfoä¸­layerä¸ºè¦æ¸ç©ºåä»£èç¹çlayerï¼ä½éé¢çparentElementä¸æ¯ç¶çº§çidï¼èæ¯è¦æ¸ç©ºåä»£èç¹çid\r\n   */\r\n  public clearDescendantEntities(repository: BefRepository<Entity>, hierarchyInfokey: string, parentHierarchyInfo: any, frozenCurrentRow: boolean = false): void {\r\n    // æ¸ç©ºæ ¹èç¹\r\n    if (!parentHierarchyInfo) {\r\n      repository.entityCollection.clear();\r\n      return;\r\n    }\r\n    const nodes = this.getChildNodes(repository, hierarchyInfokey, parentHierarchyInfo);\r\n    if (frozenCurrentRow) {\r\n      repository.entityCollection.removeEntities((entity: Entity) => {\r\n        const id = entity[entity.primaryKey];\r\n        return nodes.includes(id);\r\n      });\r\n    } else {\r\n      repository.entityCollection.removeData((entity: Entity) => {\r\n        const id = entity[entity.primaryKey];\r\n        return nodes.includes(id);\r\n      });\r\n    }\r\n\r\n  }\r\n  /**\r\n   * è·åæä¸ªèç¹çææå­èç¹\r\n   * @param repository repository\r\n   * @param hierarchyInfokey hierarchyInfokey\r\n   * @param parentHierarchyInfo parentHierarchyInfo\r\n   */\r\n  private getChildNodes(repository: BefRepository<Entity>, hierarchyInfokey: string, parentHierarchyInfo: any) {\r\n    const fparentElement = parentHierarchyInfo.id;\r\n    const flayer = parentHierarchyInfo.layer;\r\n    let nodes = [];\r\n    repository.entityCollection.getAllEntities().forEach(entity => {\r\n      const hierarchyInfo = entity[hierarchyInfokey];\r\n      const parentElement = hierarchyInfo.parentElement;\r\n      const layer = hierarchyInfo.layer;\r\n      const result = layer >= (flayer + 1) && parentElement === fparentElement;\r\n      if (result) {\r\n        const id = entity[entity.primaryKey];\r\n        nodes.push(id);\r\n        const childHierarchyInfo = this.getHierarchyInfoById(repository, hierarchyInfokey, id);\r\n        const childs = this.getChildNodes(repository, hierarchyInfokey, childHierarchyInfo);\r\n        if (childs && childs.length > 0) {\r\n          nodes = nodes.concat(childs);\r\n        }\r\n      }\r\n    });\r\n    return nodes;\r\n  }\r\n  /**\r\n   * è·åå®ä½çåçº§ä¿¡æ¯\r\n   */\r\n  public getHierarchyInfoById(repository: BefRepository<Entity>, hierarchyInfokey: string, id: string): any {\r\n    if (!id) {\r\n      return null;\r\n    }\r\n    const entity: Entity = repository.entityCollection.getEntityById(id);\r\n    const hierarchyInfoEntity: Entity = entity[hierarchyInfokey];\r\n    const result = hierarchyInfoEntity.toJSON();\r\n    result['id'] = id;\r\n    return result;\r\n  }\r\n  public getHierarchyInfo(entity: Entity, hierarchyInfokey: string): { parentElement: string, layer: number, isDetail: boolean } {\r\n    return entity[hierarchyInfokey];\r\n  }\r\n  /**\r\n   * è·ååçº§ç çåå§çå­æ®µå\r\n   */\r\n  public getOriginalHierarchyInfoKey(repository: BefRepository<Entity>, hierarchyInfokey: string): string {\r\n    const ngObjects = FieldMetadataUtil.getNgObjects(repository.entityType);\r\n    const hierarchyInfoNgObject = ngObjects[hierarchyInfokey];\r\n    return hierarchyInfoNgObject.originalDataField as string;\r\n  }\r\n  private getPaginationInfo(responseInfo: ResponseInfo) {\r\n    return responseInfo && responseInfo.returnValue && responseInfo.returnValue.pagination || null;\r\n  }\r\n  private findParent(hierarchyInfo: { isDetail: boolean, layer: number, parentElement: string }, list: any[], hierarchyInfoKey: string) {\r\n    return list.find(item => {\r\n      const currentHierarchyInfo = item[hierarchyInfoKey] as { isDetail: boolean, layer: number, parentElement: string };\r\n      return currentHierarchyInfo.layer === hierarchyInfo.layer - 1 && hierarchyInfo.parentElement === currentHierarchyInfo.parentElement;\r\n    });\r\n  }\r\n  private getAllParentIds(hierarchyInfo: { isDetail: boolean, layer: number, parentElement: string }, list: any[], hierarchyInfoKey: string, repository: Repository<any>) {\r\n    let item = this.findParent(hierarchyInfo, list, hierarchyInfoKey);\r\n    const ids = [];\r\n    while (item) {\r\n      ids.push(item[repository.primaryKey]);\r\n      item = this.findParent(item[hierarchyInfoKey], list, hierarchyInfoKey);\r\n    }\r\n    return ids;\r\n  }\r\n  /**\r\n   * æ¥æ¾èç¹ä¸ææå­çº§ï¼ç¬¬ä¸çº§ï¼\r\n   * @param repository repository\r\n   * @param hierarchyInfoKey åçº§ç å­æ®µ\r\n   * @param id id\r\n   * @returns \r\n   */\r\n  private getChildren(repository: BefRepository<Entity>, hierarchyInfoKey: string, id: string): Entity[] {\r\n    const hierarchyInfo = this.getHierarchyInfoById(repository, hierarchyInfoKey, id);\r\n    if (!hierarchyInfo) {\r\n      return null;\r\n    }\r\n    const layer = hierarchyInfo.layer;\r\n    const parentElement = hierarchyInfo.parentElement;\r\n    const entities: Entity[] = repository.entityCollection.getEntities((entity: Entity) => {\r\n      const hierarchyInfo = this.getHierarchyInfo(entity, hierarchyInfoKey);\r\n      const matched = hierarchyInfo.layer === layer + 1 && (hierarchyInfo.parentElement === parentElement || !parentElement && !hierarchyInfo.parentElement);\r\n      if (matched) {\r\n        return entity;\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n    return entities;\r\n  }\r\n}\r\n\r\nexport { ParentTreeRepository };\r\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { Entity, FieldMetadataUtil, FrameContext, Repository } from '@farris/devkit';\r\nimport { ResponseInfo, BefRepository } from '@farris/bef';\r\n\r\n/**\r\n * è·¯å¾æ ä»åº\r\n */\r\nclass PathTreeRepository {\r\n\r\n  /**\r\n   * æ·»å åå¼èç¹\r\n   */\r\n  public addSibling(repository: BefRepository<Entity>, id: string): Observable<Entity> {\r\n    const restService = repository.restService;\r\n    const baseUri = restService.baseUri;\r\n    const addSiblingUri = `${baseUri}/service/pathhierarchycreatesibling`;\r\n    const body = {\r\n      dataID: id,\r\n      requestInfo: restService.buildRequestInfo()\r\n    };\r\n    const options = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      body: body\r\n    };\r\n    return restService.invoke(addSiblingUri, 'PUT', null, options).pipe(\r\n      map((responseInfo: ResponseInfo) => {\r\n        const entity = repository.buildEntity(responseInfo.returnValue);\r\n        repository.entityCollection.addEntity(entity);\r\n        return entity;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * æ·»å åå¼èç¹\r\n   */\r\n  public addChild(repository: BefRepository<Entity>, parentId: string) {\r\n    const restService = repository.restService;\r\n    const baseUri = restService.baseUri;\r\n    const addChildUri = `${baseUri}/service/pathhierarchycreatechildlayer`;\r\n\r\n    const body = {\r\n      dataID: parentId,\r\n      requestInfo: restService.buildRequestInfo()\r\n    };\r\n    const options = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      body: body\r\n    };\r\n    return restService.invoke(addChildUri, 'PUT', null, options).pipe(\r\n      map((responseInfo: ResponseInfo) => {\r\n        const entity = repository.buildEntity(responseInfo.returnValue);\r\n        repository.entityCollection.addEntity(entity);\r\n        return entity;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * æ·»å å­è¡¨åå¼èç¹\r\n   */\r\n  public addSubSibling(repository: BefRepository<Entity>, nodes: Array<string>, ids: Array<string>): Observable<Entity> {\r\n    const restService = repository.restService;\r\n    const baseUri = restService.baseUri;\r\n    const addSubSiblingUri = `${baseUri}/service/childnodepathhierarchycreatesibling`;\r\n    const body = {\r\n      nodes: nodes,\r\n      ids: ids,\r\n      requestInfo: restService.buildRequestInfo()\r\n    };\r\n    const options = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      body: body\r\n    };\r\n    return restService.invoke(addSubSiblingUri, 'PUT', null, options).pipe(\r\n      map((responseInfo: ResponseInfo) => {\r\n        let path = this.getPaths(nodes, ids);\r\n        const entity = repository.entityManager.appendEntityByPath(path, responseInfo.returnValue)\r\n        return entity;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n  * æ·»å å­è¡¨å­èç¹\r\n  */\r\n  public addSubChild(repository: BefRepository<Entity>, nodes: Array<string>, ids: Array<string>) {\r\n    const restService = repository.restService;\r\n    const baseUri = restService.baseUri;\r\n    const addSubChildUri = `${baseUri}/service/childnodepathhierarchycreatechildlayer`;\r\n\r\n    const body = {\r\n      nodes: nodes,\r\n      ids: ids,\r\n      requestInfo: restService.buildRequestInfo()\r\n    };\r\n    const options = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      body: body\r\n    };\r\n    return restService.invoke(addSubChildUri, 'PUT', null, options).pipe(\r\n      map((responseInfo: ResponseInfo) => {\r\n        let path = this.getPaths(nodes, ids);\r\n        const entity = repository.entityManager.appendEntityByPath(path, responseInfo.returnValue)\r\n        return entity;\r\n      })\r\n    );\r\n  }\r\n\r\n  private getPaths(nodes: string[], ids: string[]) {\r\n    let paths = '';\r\n    if (nodes && nodes.length > 0 && ids && ids.length > 0) {\r\n      for (let i = 0; i < ids.length; i++) {\r\n        if (nodes[i]) {\r\n          paths = paths + `/${ids[i]}`;\r\n          paths = paths + `/${nodes[i]}s`;\r\n        }\r\n      }\r\n    }\r\n    return paths;\r\n  }\r\n\r\n  /**\r\n   * å è½½ç¶èç¹\r\n   */\r\n  // tslint:disable-next-line: max-line-length\r\n  public loadByParentId(repository: BefRepository<Entity>, hierarchyInfoKey: string, parentId: string, filters: any[], sorts: any[], frozenCurrentRow: boolean = false, pagination?: { pageSize: number, pageIndex: number }, frameContext?: FrameContext, reload: boolean = false): Observable<Entity[]> {\r\n    const localEntities = this.getChildren(repository, hierarchyInfoKey, parentId);\r\n    if (localEntities && localEntities.length > 0 && !reload) {\r\n      return of(localEntities);\r\n    }\r\n    const restService = repository.restService;\r\n    const parentHierarchyInfo = this.getHierarchyInfoById(repository, hierarchyInfoKey, parentId);\r\n    const originalHierarchyInfoKey = this.getOriginalHierarchyInfoKey(repository, hierarchyInfoKey);\r\n    const filtersWithParent = this.buildFiltersWithParent(originalHierarchyInfoKey, parentHierarchyInfo, filters);\r\n    const isUsePagination = pagination && pagination.pageSize > 0 || false;\r\n    // ç»ç»EntityFilter\r\n    const entityFilter = {\r\n      FilterConditions: filtersWithParent,\r\n      SortConditions: sorts,\r\n      IsUsePagination: isUsePagination,\r\n      Pagination: { PageIndex: pagination && pagination.pageIndex || 0, PageSize: pagination && pagination.pageSize || 0, PageCount: 0, TotalCount: 0 }\r\n    };\r\n    const requestInfo = restService.buildRequestInfo();\r\n    return restService.extendQuery(entityFilter, requestInfo).pipe(\r\n      map((responseInfo: ResponseInfo) => {\r\n        const paginationInfo = this.getPaginationInfo(responseInfo);\r\n        if (parentId) {\r\n          if (paginationInfo && paginationInfo.pageSize !== 0 && frameContext) {\r\n            frameContext.params.set(`_NODE_${parentId}_PAGINATION_INFO_`, paginationInfo);\r\n          }\r\n        } else {\r\n          if (paginationInfo && paginationInfo.pageSize !== 0 && frameContext) {\r\n            frameContext.repository.entityCollection.updatePaginationInfoByPath('/', paginationInfo);\r\n          }\r\n        }\r\n        // åæ¸ç©ºä¸çº§å®ä½\r\n        this.clearDescendantEntities(repository, hierarchyInfoKey, parentHierarchyInfo, frozenCurrentRow);\r\n        // è¿½å ä¸çº§å®ä½\r\n        const listData = responseInfo.returnValue.result;\r\n        const entities = repository.buildEntities(listData);\r\n        if (frozenCurrentRow) {\r\n          repository.entityCollection.addData(entities, { isTreeNodeLoadScene: true });\r\n        } else {\r\n          repository.entityCollection.addEntities(entities, { isTreeNodeLoadScene: true });\r\n        }\r\n\r\n        return entities;\r\n      })\r\n    );\r\n  }\r\n  // tslint:disable-next-line: max-line-length\r\n  public loadFullTree(repository: BefRepository<Entity>, hierarchyInfoKey: string, parentId: string, propertyName: string, fullTreeType: string, loadType: string, filters?: any[], context?: any): Observable<Entity[]> {\r\n    const restService = repository.restService;\r\n    const baseUri = restService.baseUri;\r\n    const queryUrl = `${baseUri}/service/parentidfulltreequery`;\r\n    const pathHierarchyInfo = this.getHierarchyInfoById(repository, hierarchyInfoKey, parentId);\r\n    const entityFilter = this.buildEntityFilter(filters, null, 0, 0);\r\n    const body = {\r\n      dataId: parentId || '',\r\n      isUsePagination: false,\r\n      virtualPropertyName: propertyName,\r\n      pagination: {},\r\n      fullTreeType,\r\n      loadType,\r\n      filter: entityFilter,\r\n      requestInfo: restService.buildRequestInfo()\r\n    };\r\n    const options = {\r\n      body: body\r\n    };\r\n    return restService.invoke(queryUrl, 'PUT', null, options).pipe(\r\n      tap((responseInfo: ResponseInfo) => {\r\n        // ä¿å­å±å¼çèç¹\r\n        if (responseInfo.returnValue && responseInfo.returnValue.selectedRowId && context && context.frameContext) {\r\n          const frameContext = context.frameContext as FrameContext;\r\n          const virtualRootFrameContext = frameContext && frameContext.getVirtualRootFrameContext() || null;\r\n          if (virtualRootFrameContext) {\r\n            const list = responseInfo.returnValue.result as any[];\r\n            const selectedRowId = responseInfo.returnValue.selectedRowId;\r\n            // ä»é¡¶å±å¼å§è®¡ç®ææéè¦å±å¼çèç¹\r\n            const leafNodeInfo = list.find(item => item[repository.primaryKey] === selectedRowId);\r\n            const hierarchyInfo = leafNodeInfo[hierarchyInfoKey] as { isDetail: boolean, layer: number, path: string };\r\n            const ids = this.getAllParentIds(hierarchyInfo, list, hierarchyInfoKey, repository);\r\n            virtualRootFrameContext.params.set('_DEVKIT_expandRowIds', ids.join(','));\r\n            virtualRootFrameContext.params.set('_DEVKIT_selectedRowId', selectedRowId);\r\n            virtualRootFrameContext.uiState.setPropertyValue('__DEVKIT__selectedRow', selectedRowId);\r\n          }\r\n        }\r\n      }),\r\n      map((responseInfo: ResponseInfo) => {\r\n        const frozenCurrentRow: boolean = context && context.frozenCurrentRow || false;\r\n        // åæ¸ç©ºä¸çº§å®ä½\r\n        this.clearDescendantEntities(repository, hierarchyInfoKey, pathHierarchyInfo, frozenCurrentRow);\r\n        // è¿½å ä¸çº§å®ä½\r\n        const listData = responseInfo.returnValue.result;\r\n        const entities = repository.buildEntities(listData);\r\n        if (frozenCurrentRow) {\r\n          repository.entityCollection.addData(entities, {isTreeNodeLoadScene: true});\r\n        } else {\r\n          repository.entityCollection.addEntities(entities, {isTreeNodeLoadScene: true});\r\n        }\r\n        return entities;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * æå¥å¯¹ç¶èç¹çè¿æ»¤\r\n   */\r\n  public buildFiltersWithParent(originalHierarchyInfoKey: string, parentHierarchyInfo: any, filterArray: any[]): any {\r\n    const relationType = filterArray && filterArray.length >= 1 ? 1 : 0;\r\n\r\n    const parentLayer = parentHierarchyInfo ? parentHierarchyInfo['layer'] : 0;\r\n    const parentFilterArray = [\r\n      {\r\n        \"FilterField\": `${originalHierarchyInfoKey}.Layer`,\r\n        \"Value\": parentLayer + 1,\r\n        \"Lbracket\": null,\r\n        \"Rbracket\": null,\r\n        \"Relation\": 1,\r\n        \"Expresstype\": 0,\r\n        \"Compare\": 0\r\n      }\r\n    ];\r\n\r\n    // ç¶è·¯å¾è¿æ»¤ï¼å¦æä¸ºç©ºï¼åä¸æ·»å ï¼å¼å®¹oracleåæ°ï¼\r\n    const parentPath = parentHierarchyInfo ? parentHierarchyInfo['path'] : '';\r\n    if (parentPath) {\r\n      parentFilterArray.push({\r\n        \"FilterField\": `${originalHierarchyInfoKey}.Path`,\r\n        \"Value\": parentPath,\r\n        \"Lbracket\": null,\r\n        \"Rbracket\": null,\r\n        \"Relation\": relationType,\r\n        \"Expresstype\": 0,\r\n        \"Compare\": 7\r\n      });\r\n    } else {\r\n      parentFilterArray[0].Relation = relationType;\r\n    }\r\n\r\n    return parentFilterArray.concat(filterArray);\r\n  }\r\n  public buildEntityFilter(filter: any[], sort: any[], pageSize: number, pageIndex: number) {\r\n\r\n    // @todoï¼ä¸´æ¶å¼å®¹èä»£ç ï¼éä½æ¹å¨å¸¦æ¥çé£é©\r\n    if (!filter && !sort && !pageSize && !pageIndex) {\r\n      return null;\r\n    }\r\n    if (!filter) {\r\n      filter = [];\r\n    }\r\n    if (!sort) {\r\n      sort = [];\r\n    }\r\n    // çº æ­£æåä¸ä¸ªè¿æ»¤æ¡ä»¶çRelation\r\n    if (filter && filter.length > 0) {\r\n      filter[filter.length - 1].Relation = 0;\r\n    }\r\n    const entityFilter = {\r\n      FilterConditions: filter,\r\n      SortConditions: sort,\r\n      IsUsePagination: pageSize === 0 ? false : true,\r\n      Pagination: {\r\n        PageIndex: pageIndex,\r\n        PageSize: pageSize,\r\n        PageCount: 0,\r\n        TotalCount: 0\r\n      }\r\n    };\r\n    return entityFilter;\r\n  }\r\n  /**\r\n   * æ¸ç©ºåä»£å®ä½\r\n   */\r\n  public clearDescendantEntities(repository: BefRepository<Entity>, hierarchyInfokey: string, parentHierarchyInfo: any, frozenCurrentRow: boolean = false): void {\r\n\r\n    // æ¸ç©ºæ ¹èç¹\r\n    if (!parentHierarchyInfo) {\r\n      repository.entityCollection.clear();\r\n      return;\r\n    }\r\n    const fPath = parentHierarchyInfo.path;\r\n    const fLayer = parentHierarchyInfo.layer;\r\n    if (frozenCurrentRow) {\r\n      repository.entityCollection.removeData((entity: Entity) => {\r\n        const hierarchyInfo = entity[hierarchyInfokey];\r\n        const path = hierarchyInfo.path;\r\n        const layer = hierarchyInfo.layer;\r\n        return layer > fLayer && path.startsWith(fPath);\r\n      });\r\n    } else {\r\n      repository.entityCollection.removeEntities((entity: Entity) => {\r\n        const hierarchyInfo = entity[hierarchyInfokey];\r\n        const path = hierarchyInfo.path;\r\n        const layer = hierarchyInfo.layer;\r\n        return layer > fLayer && path.startsWith(fPath);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * è·åå®ä½çåçº§ä¿¡æ¯\r\n   */\r\n  public getHierarchyInfoById(repository: BefRepository<Entity>, hierarchyInfokey: string, id: string): any {\r\n    if (!id) {\r\n      return null;\r\n    }\r\n    const entity: Entity = repository.entityCollection.getEntityById(id);\r\n    const hierarchyInfoEntity: Entity = entity[hierarchyInfokey];\r\n    return hierarchyInfoEntity.toJSON();\r\n  }\r\n\r\n  /**\r\n   * è·ååçº§ç çåå§çå­æ®µå\r\n   */\r\n  public getOriginalHierarchyInfoKey(repository: BefRepository<Entity>, hierarchyInfokey: string): string {\r\n    const ngObjects = FieldMetadataUtil.getNgObjects(repository.entityType);\r\n    const hierarchyInfoNgObject = ngObjects[hierarchyInfokey];\r\n    return hierarchyInfoNgObject.originalDataField as string;\r\n  }\r\n  private getPaginationInfo(responseInfo: ResponseInfo) {\r\n    return responseInfo && responseInfo.returnValue && responseInfo.returnValue.pagination || null;\r\n  }\r\n  private findParent(hierarchyInfo: { isDetail: boolean, layer: number, path: string }, list: any[], hierarchyInfoKey: string) {\r\n    return list.find(item => {\r\n      const currentHierarchyInfo = item[hierarchyInfoKey] as { isDetail: boolean, layer: number, path: string };\r\n      return currentHierarchyInfo.layer === hierarchyInfo.layer - 1 && hierarchyInfo.path.startsWith(currentHierarchyInfo.path);\r\n    });\r\n  }\r\n  private getAllParentIds(hierarchyInfo: { isDetail: boolean, layer: number, path: string }, list: any[], hierarchyInfoKey: string, repository: Repository<any>) {\r\n    let item = this.findParent(hierarchyInfo, list, hierarchyInfoKey);\r\n    const ids = [];\r\n    while (item) {\r\n      ids.push(item[repository.primaryKey]);\r\n      item = this.findParent(item[hierarchyInfoKey], list, hierarchyInfoKey);\r\n    }\r\n    return ids;\r\n  }\r\n  private getHierarchyInfo(entity: Entity, hierarchyInfoKey: string): { path: string, layer: number, isDetail: boolean } {\r\n    return entity[hierarchyInfoKey];\r\n  }\r\n  /**\r\n   * æ¥æ¾èç¹ä¸ææå­çº§ï¼ç¬¬ä¸çº§ï¼\r\n   * @param repository repository\r\n   * @param hierarchyInfoKey åçº§ç å­æ®µ\r\n   * @param id id\r\n   * @returns \r\n   */\r\n  private getChildren(repository: BefRepository<Entity>, hierarchyInfoKey: string, id: string): Entity[] {\r\n    const hierarchyInfo = this.getHierarchyInfoById(repository, hierarchyInfoKey, id);\r\n    if (!hierarchyInfo) {\r\n      return null;\r\n    }\r\n    const layer = hierarchyInfo.layer;\r\n    const path = hierarchyInfo.path;\r\n    const entities: Entity[] = repository.entityCollection.getEntities((entity: Entity) => {\r\n      const hierarchyInfo = this.getHierarchyInfo(entity, hierarchyInfoKey);\r\n      const matched = hierarchyInfo.layer === layer + 1 && hierarchyInfo.path.startsWith(path);\r\n      if (matched) {\r\n        return entity;\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n    return entities;\r\n  }\r\n}\r\n\r\nexport { PathTreeRepository };\r\n","import { ParentTreeRepository } from './parent-tree-repository';\r\nimport { PathTreeRepository } from './path-tree-repository';\r\n\r\nexport class TreeRepositoryFactory {\r\n    static getInstance(treeType: string){\r\n        let repository=null;\r\n        switch (treeType) {\r\n            case \"path\":\r\n                repository = new PathTreeRepository();\r\n                break;\r\n            case \"parent\":\r\n                repository = new ParentTreeRepository();\r\n                break;\r\n            default: break;\r\n        }\r\n        return repository;\r\n    }\r\n}","import { Injectable, Optional } from '@angular/core';\r\nimport { Observable, of, empty, EMPTY } from 'rxjs';\r\nimport { tap, switchMap, concatMap } from 'rxjs/operators';\r\n\r\nimport { Entity, FrameContext, FieldMetadataUtil, NgFieldProperty } from '@farris/devkit';\r\nimport { BefRepository, BefRepositoryUtil } from '@farris/bef';\r\n\r\nimport { FormLoadingService } from '../form-loading/form-loading.service';\r\nimport { FormNotifyService } from '../form-notify.service';\r\nimport { LanguageService } from '../languag.service';\r\nimport { FormMessageService } from '../form-message.service';\r\nimport { FormErrorService } from '../error/form-error.service';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\nimport { EditStateUtil } from './utils/index';\r\nimport { TreeUtilFactory } from './tree-table/util/tree-util-factory';\r\nimport { TreeRepositoryFactory } from './tree-table/repository/tree-repository-factory';\r\nimport { DataChangeDetectionService } from '../data-change-detection.service';\r\n// tslint:disable: no-string-literal\r\n\r\n/**\r\n * æ æ°æ®æå¡\r\n */\r\n@Injectable()\r\nclass TreeDataService extends BaseDataService {\r\n\r\n  /**\r\n   * åçº§ä¿¡æ¯å­æ®µå\r\n   */\r\n  private get hierarchyInfoKey(): string {\r\n    return this.virtualRootFrameContext.getParam('hierarchyInfoKey');\r\n  }\r\n  private get virtualRootFrameContext() {\r\n    return this.frameContext.getVirtualRootFrameContext();\r\n  }\r\n\r\n  /**\r\n   * æé å½æ°\r\n   */\r\n  constructor(\r\n    frameContext: FrameContext,\r\n    private messageService: FormMessageService,\r\n    private loadingService: FormLoadingService,\r\n    private notifyService: FormNotifyService,\r\n    private errorService: FormErrorService,\r\n    @Optional() private languageService: LanguageService\r\n  ) {\r\n    super(frameContext);\r\n    if (!languageService) {\r\n      this.languageService = LanguageService.getInstance();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * å è½½æ°æ®\r\n   */\r\n  public load(filters?: string, sorts?: string): Observable<Entity[]> {\r\n    const filtersArray = this.parseConditions(filters);\r\n    const sortsArray = this.parseConditions(sorts);\r\n    const correctSelectedNode = this.repository.entityCollection.count() === 0;\r\n\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    const query$ = this.repository.getEntities(filtersArray, sortsArray, null, null);\r\n    return query$.pipe(\r\n      tap(\r\n        () => {\r\n\r\n          // çº æ­£éä¸­èç¹\r\n          if (correctSelectedNode === true) {\r\n            const hierarchyType = this.getHierarchyType();\r\n            const treeNodeUtil = TreeUtilFactory.getInstance(hierarchyType);\r\n            if (treeNodeUtil !== null) {\r\n              treeNodeUtil.selectFirstRootNode(this.bindingData, this.hierarchyInfoKey);\r\n            }\r\n          }\r\n\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n        },\r\n        (error: any) => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.errorService.exception(this.languageService.loadFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * åå±å è½½æ°æ®\r\n   */\r\n  public loadByLevel(filters?: string, sorts?: string, frozenCurrentRow?: boolean | string): Observable<Entity[]> {\r\n    this.setLoadByLevelState(filters, sorts);\r\n    const filtersArray = this.parseConditions(filters);\r\n    const sortsArray = this.parseConditions(sorts);\r\n    // const parentId = this.bindingData.list.currentId;\r\n    const parentId = this.getIdToExpand();\r\n    const correctSelectedNode = this.repository.entityCollection.count() === 0;\r\n    if (frozenCurrentRow === undefined) {\r\n      frozenCurrentRow = false;\r\n    }\r\n    if (typeof frozenCurrentRow !== 'boolean') {\r\n      frozenCurrentRow = frozenCurrentRow === 'true' ? true : false;\r\n    }\r\n    const hierarchyType = this.getHierarchyType();\r\n    const repository = TreeRepositoryFactory.getInstance(hierarchyType);\r\n\r\n    if (repository === null) {\r\n      return empty();\r\n    }\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    // æé åé¡µä¿¡æ¯\r\n    const pagination = this.buildPaginationInfo(parentId);\r\n    const reload = this.frameContext.params.get('_RELOAD_CHILDREN_') || false;\r\n    const query$ = repository.loadByParentId(this.repository, this.hierarchyInfoKey, parentId, filtersArray, sortsArray, frozenCurrentRow, pagination, this.frameContext, reload);\r\n    return query$.pipe(\r\n      tap(\r\n        (entities: Entity[]) => {\r\n          this.frameContext.params.delete('_RELOAD_CHILDREN_');\r\n          // çº æ­£éä¸­èç¹\r\n          if (correctSelectedNode === true) {\r\n            const treeNodeUtil = TreeUtilFactory.getInstance(hierarchyType);\r\n            if (treeNodeUtil !== null) {\r\n              treeNodeUtil.selectFirstRootNode(this.bindingData, this.hierarchyInfoKey);\r\n            }\r\n          }\r\n          const currentRowId = this.bindingData.list.currentItem.primaryKeyValue;\r\n          if (frozenCurrentRow) {\r\n            // å¦æä¸ä¸æ¬¡éä¸­è¡ä¸ºæ¬æ¬¡å è½½æ°æ®ä¸­çä¸æ¡ï¼ååºè¯¥éæ°éä¸­è¯¥è¡\r\n            const containsCurrentRow = entities.find(item => item.primaryValue === currentRowId);\r\n            if (containsCurrentRow) {\r\n              this.setCurrentId(currentRowId);\r\n            }\r\n            // åæ¥çå½åè¡ä¸å¨å·²ç»å è½½çæ°æ®ä¸­ï¼å¦å±å¼å°ç¬¬ä¸çº§ï¼å°ç¬¬ä¸çº§çæè¡è®¾ä¸ºå½åè¡ï¼å¨é¨æ¶èµ·ï¼å±å¼ç¬¬ä¸çº§\r\n            if (!this.repository.entityCollection.getEntityById(currentRowId)) {\r\n              const firstChildId = entities && Array.isArray(entities) && entities.length > 0 && entities[0].primaryValue || null;\r\n              if (firstChildId) {\r\n                this.setCurrentId(firstChildId);\r\n              }\r\n            }\r\n          }\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n        },\r\n        error => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.errorService.exception(this.languageService.loadFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  /**\r\n   * å è½½å®æ´æ \r\n   * @param virtualPropertyName èæå­æ®µ\r\n   * @param fullTreeType æ¯å¦æ¯å®æ´æ å è½½ 0ï¼å®æ´æ  1ï¼é¨åæ \r\n   * @param loadType æ¯å¦åçº§å è½½ 0ï¼å¨é¨å è½½ 1ï¼åçº§å è½½\r\n   * @param filter è¿æ»¤æ¡ä»¶\r\n   * @param frozenCurrentRow å»ç»å½åè¡\r\n   */\r\n  public loadFullTree(virtualPropertyName: string, fullTreeType: string, loadType: string, filters: string, frozenCurrentRow?: boolean | string): Observable<Entity[]> {\r\n    if (typeof fullTreeType !== 'string') {\r\n      throw new Error('ArgumentError: fullTreeType ä¸è½ä¸ºç©ºä¸å¿é¡»ä¸ºå­ç¬¦ä¸²ã');\r\n    }\r\n    if (typeof loadType !== 'string') {\r\n      throw new Error('ArgumentError: loadType ä¸è½ä¸ºç©ºä¸å¿é¡»ä¸ºå­ç¬¦ä¸²ã');\r\n    }\r\n    if (frozenCurrentRow === undefined) {\r\n      frozenCurrentRow = false;\r\n    }\r\n    if (typeof frozenCurrentRow !== 'boolean') {\r\n      frozenCurrentRow = frozenCurrentRow === 'true' ? true : false;\r\n    }\r\n    const virtualRootFrameContext = this.virtualRootFrameContext;\r\n    // è¿åä¸æ¬¡è®¾ç½®çç»æé\r\n    virtualRootFrameContext.params.delete('_DEVKIT_expandRowIds');\r\n    virtualRootFrameContext.params.delete('_DEVKIT_selectedRowId');\r\n    virtualRootFrameContext.uiState.setPropertyValue('__DEVKIT__selectedRow', null);\r\n    const filtersArray = this.parseConditions(filters);\r\n    const parentId = this.getIdToExpand();\r\n    const correctSelectedNode = this.repository.entityCollection.count() === 0;\r\n    const hierarchyType = this.getHierarchyType();\r\n    const repository = TreeRepositoryFactory.getInstance(hierarchyType);\r\n\r\n    if (repository === null) {\r\n      return EMPTY;\r\n    }\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    const context = {\r\n      frameContext: this.frameContext,\r\n      frozenCurrentRow\r\n    };\r\n    // tslint:disable-next-line: max-line-length\r\n    const query$ = repository.loadFullTree(this.repository, this.hierarchyInfoKey, parentId, virtualPropertyName, fullTreeType, loadType, filtersArray, context);\r\n    return query$.pipe(\r\n      tap(\r\n        (entities: Entity[]) => {\r\n          const selectedRowId = virtualRootFrameContext.params.get('_DEVKIT_selectedRowId');\r\n          // çº æ­£éä¸­èç¹\r\n          if (correctSelectedNode === true || !selectedRowId) {\r\n            const treeNodeUtil = TreeUtilFactory.getInstance(hierarchyType);\r\n            if (treeNodeUtil !== null) {\r\n              const computedFirstRowId = treeNodeUtil.selectFirstRootNode(this.bindingData, this.hierarchyInfoKey);\r\n              if (computedFirstRowId) {\r\n                virtualRootFrameContext.uiState.setPropertyValue('__DEVKIT__selectedRow', computedFirstRowId);\r\n              }\r\n            }\r\n          }\r\n          const currentRowId = this.bindingData.list.currentItem.primaryKeyValue;\r\n          if (frozenCurrentRow) {\r\n            // å¦æä¸ä¸æ¬¡éä¸­è¡ä¸ºæ¬æ¬¡å è½½æ°æ®ä¸­çä¸æ¡ï¼ååºè¯¥éæ°éä¸­è¯¥è¡\r\n            const containsCurrentRow = entities.find(item => item.primaryValue === currentRowId);\r\n            if (containsCurrentRow) {\r\n              this.setCurrentId(currentRowId);\r\n            }\r\n            // åæ¥çå½åè¡ä¸å¨å·²ç»å è½½çæ°æ®ä¸­ï¼å¦å±å¼å°ç¬¬ä¸çº§ï¼å°ç¬¬ä¸çº§çæè¡è®¾ä¸ºå½åè¡ï¼å¨é¨æ¶èµ·ï¼å±å¼ç¬¬ä¸çº§\r\n            if (!this.repository.entityCollection.getEntityById(currentRowId) && entities && entities.length > 0) {\r\n              const firstChildId = entities && Array.isArray(entities) && entities.length > 0 && entities[0].primaryValue || null;\r\n              if (firstChildId) {\r\n                this.setCurrentId(firstChildId);\r\n              }\r\n            }\r\n          }\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n        },\r\n        error => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.errorService.exception(this.languageService.loadFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  /**\r\n   * è·åææ°å±å¼çèç¹\r\n   */\r\n  public getIdToExpand() {\r\n    const expandNodes = this.virtualRootFrameContext.getParam('TREE_LATEST_EXPANDED_ID') || [];\r\n    const idToExpand = expandNodes.pop();\r\n    this.virtualRootFrameContext.setParam('TREE_LATEST_EXPANDED_ID', expandNodes);\r\n    return idToExpand;\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®ææ°å±å¼çèç¹\r\n   */\r\n  public setIdToExpand(idToExpand: string): void {\r\n    const expandNodes = this.virtualRootFrameContext.getParam('TREE_LATEST_EXPANDED_ID') || [];\r\n    expandNodes.push(idToExpand);\r\n    this.virtualRootFrameContext.setParam('TREE_LATEST_EXPANDED_ID', expandNodes);\r\n  }\r\n\r\n  /**\r\n   * è§£æè¿æ»¤æ¡ä»¶\r\n   */\r\n  public parseConditions(conditions?: string): any[] {\r\n    const conditionsString = (!conditions || conditions === '') ? '[]' : conditions;\r\n    return JSON.parse(conditionsString);\r\n  }\r\n\r\n  /**\r\n   * æ°å¢åçº§\r\n   */\r\n  public addSibling(id: string): Observable<any> {\r\n\r\n    // è®¾è®¡æ¶idçè·åæ¹ä¸ºä»å½ä»¤åæ°ä¸è·åï¼ä½è®¾è®¡æ¶æ²¡æåæ°å¿å¡«æ£æ¥ï¼\r\n    // å¦ææå¼è¡¨åä¿å­äºï¼å³æ´æ°äºææ°çå½ä»¤æä»¶ï¼ï¼ä½æ²¡æéç½®è¯¥åæ°ï¼å¯è½ä¼ä¼ éè¿æ¥ä¸ä¸ªç©ºå¼ï¼\r\n    // ä¸ºäºå¼å®¹æ­¤æåµï¼ä½¿ç¨å½åè¡idä½ä¸ºidçå¼\r\n    id = id ? id : this.bindingData.list.currentId;\r\n\r\n    // åæ°æ£æ¥\r\n    if (!id || id === 'undefined') {\r\n      id = '';\r\n    }\r\n\r\n    // è®°å½æè¿ä¸æ¬¡ä¿®æ¹çæ°æ®id\r\n    const lastModifiedId = this.bindingData.list.currentId;\r\n    // è·ååçº§æ¹å¼\r\n    const hierarchyType: string = this.getHierarchyType();\r\n    // æ§è¡åæ°\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    const repository = TreeRepositoryFactory.getInstance(hierarchyType);\r\n    if (!repository) {\r\n      // éè¯¯çåçº§ç \r\n      throw new Error(this.languageService['errorHierarchyKey']);\r\n    }\r\n    const result$ = repository.addSibling(this.repository, id);\r\n    return result$.pipe(\r\n      tap(\r\n        () => {\r\n          this.virtualRootFrameContext.setParam('IS_ADD', true);\r\n          this.virtualRootFrameContext.setParam('LAST_MODIFIED_ID', lastModifiedId);\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n        },\r\n        error => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.errorService.exception(this.languageService.addSiblingFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * æ°å¢ä¸çº§\r\n   */\r\n  public addChild(id: string): Observable<any> {\r\n\r\n    // åå åaddSiblingçä¿®æ¹\r\n    id = id ? id : this.bindingData.list.currentId;\r\n\r\n    // åæ°æ£æ¥\r\n    if (!id) {\r\n      // è¯·éæ©ç¶èç¹\r\n      this.notifyService.warning(this.languageService['plsSelectParentNode'], { hideTitle: true });\r\n      return empty();\r\n    }\r\n\r\n    // è®°å½æè¿ä¸æ¬¡ä¿®æ¹çæ°æ®id\r\n    const lastModifiedId = this.bindingData.list.currentId;\r\n    // è·ååçº§æ¹å¼\r\n    const hierarchyType = this.getHierarchyType();\r\n    // æ§è¡åæ°\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n\r\n    // æ°å¢çæ¶åï¼è¦å±å¼ç¶èç¹\r\n    this.setIdToExpand(id);\r\n    const reloadChild$ = this.reloadByLevel();\r\n\r\n    const repository = TreeRepositoryFactory.getInstance(hierarchyType);\r\n    if (!repository) {\r\n      throw new Error(this.languageService['errorHierarchyKey']);\r\n    }\r\n    const addChild$ = repository.addChild(this.repository, id);\r\n    const result$ = reloadChild$.pipe(\r\n      switchMap(() => {\r\n        return addChild$;\r\n      }),\r\n      tap(\r\n        () => {\r\n          this.virtualRootFrameContext.setParam('IS_ADD', true);\r\n          this.virtualRootFrameContext.setParam('LAST_MODIFIED_ID', lastModifiedId);\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n        },\r\n        error => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.errorService.exception(this.languageService.addChildFailed, error);\r\n        }\r\n      )\r\n    );\r\n    return result$;\r\n  }\r\n  /**\r\n   * æ¹éä¿å­\r\n   */\r\n  public save(): Observable<boolean> {\r\n    if (this.messagePipe) {\r\n      this.messagePipe.next({ messageType: 'save' });\r\n    }\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    const save$ = this.repository.applyChanges();\r\n    const result$ = save$.pipe(\r\n      tap(\r\n        () => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.notifyService.success(this.languageService.saveSuccess, { hideTitle: true });\r\n        },\r\n        error => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.errorService.exception(this.languageService.multiSaveFailed, error);\r\n        }\r\n      )\r\n    );\r\n    return result$;\r\n  }\r\n  /**\r\n   * å é¤\r\n   */\r\n  public remove(id: string, successMsg?: string): Observable<boolean> {\r\n\r\n    // åå åaddSibling\r\n    id = id ? id : this.bindingData.list.currentId;\r\n\r\n    // åæ°æ£æ¥\r\n    if (!id) {\r\n      this.notifyService.warning(this.languageService['plsSelectDeleteData'], { hideTitle: true });\r\n      return empty();\r\n    }\r\n\r\n    // å­å¨å­èç¹ä¸åè®¸å é¤\r\n    const treeNodesData = this.repository.entityCollection.toJSON();\r\n    const hierarchyType = this.getHierarchyType();\r\n    const treeNodeUtil = TreeUtilFactory.getInstance(hierarchyType);\r\n    if (treeNodeUtil === null) {\r\n      return empty();\r\n    }\r\n    if (treeNodeUtil.hasChildNodes(treeNodesData, this.hierarchyInfoKey, id) === true) {\r\n      this.notifyService.warning(this.languageService['deleteChildFirst'], { hideTitle: true });\r\n      return empty();\r\n    }\r\n\r\n    // ç¡®è®¤å é¤\r\n    const action$ = this.messageService.question(this.languageService.confirmDeletion);\r\n    return action$.pipe(\r\n      concatMap(result => {\r\n        if (!result) {\r\n          return empty();\r\n        }\r\n\r\n        // è·åå é¤åè¦è®¾ç½®çèç¹id\r\n        const nextNodeId = treeNodeUtil.getNextNodeId(treeNodesData, this.hierarchyInfoKey, id);\r\n\r\n        // æ§è¡å é¤\r\n        const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n        const remove$ = this.frameContext.repository.removeById(id);\r\n        return remove$.pipe(\r\n          tap(() => {\r\n\r\n            // è®¾ç½®éä¸­èç¹\r\n            treeNodeUtil.selectedNode(this.bindingData, this.hierarchyInfoKey, nextNodeId);\r\n\r\n            this.loadingService.hideDelayLoading(loadingTimerId);\r\n            if (successMsg && successMsg.trim()) {\r\n              let showMessage: boolean = true;\r\n              if (successMsg.startsWith('{') && successMsg.endsWith('}')) {\r\n                try {\r\n                  const options = JSON.parse(successMsg);\r\n                  if (options.showMessage === false) {\r\n                    showMessage = false;\r\n                  }\r\n                } catch { }\r\n              }\r\n              if (showMessage !== false) {\r\n                this.notifyService.success(successMsg, { hideTitle: true });\r\n              }\r\n            } else {\r\n              this.notifyService.success(this.languageService.deleteSuccess, { hideTitle: true });\r\n            }\r\n            // this.notifyService.success(this.languageService.deleteSuccess, { hideTitle: true });\r\n          },\r\n            error => {\r\n              this.loadingService.hideDelayLoading(loadingTimerId);\r\n              this.errorService.exception(this.languageService.deleteFailed, error);\r\n            }\r\n          )\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * åæ¶æ¶æ£æµæªä¿å­è®°å½\r\n   */\r\n  public cancel(): Observable<any> {\r\n    const hasChange$ = DataChangeDetectionService.hasChange(this.frameContext);\r\n    return hasChange$.pipe(\r\n      switchMap((changed: boolean) => {\r\n        if (!changed) {\r\n          return this._cancel();\r\n        } else {\r\n          return this.messageService.question(this.languageService['cancelWithoutSave']).pipe(\r\n            switchMap((ifCancel: boolean) => {\r\n              if (ifCancel === false) {\r\n                return EMPTY;\r\n              }\r\n              return this._cancel();\r\n            })\r\n          );\r\n        }\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * æé åé¡µä¿¡æ¯\r\n   * @param parentId parentId\r\n   * @returns\r\n   */\r\n  private buildPaginationInfo(parentId: any) {\r\n    const pagination: any = { pageIndex: 0, pageSize: 0 };\r\n    const enableNodePagination = this.frameContext.params.get('enableNodePagination');\r\n    if (!parentId) {\r\n      // ä¸çº§åé¡µ\r\n      const pageSize = this.repository.entityCollection.pageSize || 0;\r\n      const pageIndex = this.repository.entityCollection.pageIndex || 0;\r\n      // å¯ç¨äºä¸çº§åé¡µ\r\n      if (pageSize !== 0) {\r\n        pagination.pageSize = pageSize;\r\n        pagination.pageIndex = pageIndex;\r\n      }\r\n    } else {\r\n      // å¦ææªå¯ç¨èç¹åé¡µæå½åä¸ºé¡¶çº§èç¹å è½½ï¼åä¸å¤çèç¹åé¡µ\r\n      if (enableNodePagination) {\r\n        const nodePageSize = this.frameContext.params.get('nodePageSize') || 0;\r\n        let nodePageIndex = this.frameContext.params.get(`_NODE_${parentId}_PAGE_INDEX_`);\r\n        if (!nodePageIndex) {\r\n          this.frameContext.params.set(`_NODE_${parentId}_PAGE_INDEX_`, 1);\r\n          nodePageIndex = 1;\r\n        }\r\n        pagination.pageIndex = nodePageIndex;\r\n        pagination.pageSize = nodePageSize;\r\n      }\r\n    }\r\n    return pagination;\r\n  }\r\n\r\n  /**\r\n   * åæ¶åæ´\r\n   */\r\n  private _cancel(): Observable<any> {\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    const cancel$ = this.repository.cancelChanges();\r\n    return cancel$.pipe(\r\n      switchMap(() => {\r\n        const isAdd = this.virtualRootFrameContext.getParam('IS_ADD');\r\n        const lastModifiedId = this.virtualRootFrameContext.getParam('LAST_MODIFIED_ID');\r\n        const currentId = this.bindingData.list.currentId;\r\n\r\n        if (isAdd === true) {\r\n          this.repository.entityCollection.removeEntityById(currentId);\r\n\r\n          // éç½®ç¼è¾ç¶æ\r\n          this.virtualRootFrameContext.setParam('IS_ADD', false);\r\n          if (lastModifiedId) {\r\n            setTimeout(() => {\r\n              this.bindingData.list.setCurrentId(lastModifiedId, true, true);\r\n            }, 0);\r\n          }\r\n          return of(null);\r\n        } else {\r\n          return this.repository.updateById(currentId);\r\n        }\r\n      }),\r\n      tap(\r\n        () => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n        },\r\n        (error: any) => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.errorService.exception(this.languageService.cancelFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * æ£æ¥æ¯å¦å­å¨ä¸çº§èç¹ï¼åé¨æ¹æ³ï¼è¯·å¿ä½¿ç¨ï¼\r\n   */\r\n  public hasChildNodes(id: string, treeNodesData: any[]): boolean {\r\n    const treeNodeUtil = this.getTreeNodeUtil();\r\n    if (treeNodeUtil.hasChildNodes(treeNodesData, this.hierarchyInfoKey, id) === true) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * è®¡ç®å é¤åçå½åèç¹idï¼åé¨æ¹æ³ï¼è¯·å¿ä½¿ç¨ï¼\r\n   */\r\n  public getNextNodeIdAfterRemoving(idToRemove: string, treeNodesData: any[]): string {\r\n    const treeNodeUtil = this.getTreeNodeUtil();\r\n    const nextNodeId = treeNodeUtil.getNextNodeId(treeNodesData, this.hierarchyInfoKey, idToRemove);\r\n    return nextNodeId;\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®å é¤åçå½åèç¹èç¹ï¼åé¨æ¹æ³ï¼è¯·å¿ä½¿ç¨ï¼\r\n   */\r\n  public setNextNodeAfterRemoving(nextNodeId: string): void {\r\n    const treeNodeUtil = this.getTreeNodeUtil();\r\n    treeNodeUtil.selectedNode(this.bindingData, this.hierarchyInfoKey, nextNodeId);\r\n  }\r\n  /**\r\n   * è®¾ç½®æ çå½åè¡(ç»å®æ´æ ä½¿ç¨)\r\n   * @param id id\r\n   */\r\n  public setCurrentId(id: string) {\r\n    id = id || this.frameContext.getVirtualRootFrameContext().uiState['__DEVKIT__selectedRow'] || this.bindingData.list.currentItem.primaryKeyValue;\r\n    this.frameContext.bindingData.list.setCurrentId(id, true, true, true);\r\n  }\r\n  /**\r\n   * éä¸­æ çç¬¬ä¸ä¸ªèç¹\r\n   */\r\n  public selectFirstRow() {\r\n    const hierarchyType = this.getHierarchyType();\r\n    const treeNodeUtil = TreeUtilFactory.getInstance(hierarchyType);\r\n    if (treeNodeUtil !== null) {\r\n      treeNodeUtil.selectFirstRootNode(this.bindingData, this.hierarchyInfoKey);\r\n    }\r\n  }\r\n  /**\r\n   * è·åæ èç¹å·¥å·ç±»å®ä¾\r\n   */\r\n  private getTreeNodeUtil(): any {\r\n    const hierarchyType = this.getHierarchyType();\r\n    const treeNodeUtil = TreeUtilFactory.getInstance(hierarchyType);\r\n    if (treeNodeUtil === null) {\r\n      throw new Error(`ä¸æ¯æ${hierarchyType}ç±»åçåçº§`);\r\n    }\r\n    return treeNodeUtil;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * è®°å½å è½½ç¶æ\r\n   * @todoï¼å¾å é¤\r\n   */\r\n  private setLoadByLevelState(filters: string, sorts: string) {\r\n\r\n    // @todoï¼ä¸´æ¶å¤ç\r\n    this.virtualRootFrameContext.setParam('isLoadTreeByLevel', true);\r\n    this.virtualRootFrameContext.setParam('loadTreeByLevelFilter', filters);\r\n    this.virtualRootFrameContext.setParam('loadTreeByLevelSort', sorts);\r\n  }\r\n\r\n  /**\r\n   * å±å¼å½åèç¹\r\n   * @todoï¼å¾å é¤\r\n   */\r\n  private reloadByLevel(): Observable<Entity[]> {\r\n    const isLoadByLevel = this.virtualRootFrameContext.getParam('isLoadTreeByLevel');\r\n    if (isLoadByLevel === true) {\r\n      const filters = this.virtualRootFrameContext.getParam('loadTreeByLevelFilter');\r\n      const sorts = this.virtualRootFrameContext.getParam('loadTreeByLevelSort');\r\n      return this.loadByLevel(filters, sorts);\r\n    }\r\n    return of([]);\r\n  }\r\n\r\n  private getHierarchyType() {\r\n    const ngObjects = FieldMetadataUtil.getNgObjects(this.repository.entityType);\r\n    const hierarchyInfoNgObjectInfo = ngObjects[this.hierarchyInfoKey];\r\n    let hierarchyType = 'path'; // åçº§ç é»è®¤ä¸ºpathï¼å¼å®¹åè¡¨å\r\n    if (hierarchyInfoNgObjectInfo.hasOwnProperty('hierarchyType') && hierarchyInfoNgObjectInfo['hierarchyType'] != null) {\r\n      hierarchyType = hierarchyInfoNgObjectInfo['hierarchyType'] as string;\r\n    }\r\n    if (hierarchyType == null || hierarchyType.length < 1) {\r\n      // 'åçº§ç éç½®ä¿¡æ¯éè¯¯'\r\n      throw new Error(this.languageService['incorrectHierarchyConfig']);\r\n    }\r\n    return hierarchyType;\r\n  }\r\n  /**\r\n   * è·åæ ¹ç»ä»¶æ¶æ¯ç®¡é\r\n   */\r\n  private get messagePipe() {\r\n    if (this.frameContext) {\r\n      const appContext = this.frameContext.getFormAppContext() || null;\r\n      if (appContext) {\r\n        return appContext.messagePipe || null;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\nexport { TreeDataService };\r\n","import { Injectable } from '@angular/core';\r\nimport { ViewModel } from '@farris/devkit';\r\nimport { FilterConditionService } from '../filter-condition.service';\r\nimport { CommandService } from '../command-service';\r\n\r\n@Injectable()\r\nclass FilterConditionDataService {\r\n    constructor(\r\n        private viewModel: ViewModel,\r\n        private filterConditionService: FilterConditionService,\r\n        private commandService: CommandService\r\n    ) { }\r\n\r\n    /**\r\n     * æ§è¡è¿æ»¤\r\n     * @param commandName å½ä»¤åç§°\r\n     * @param frameId å½ä»¤æå¨çframeId\r\n     */\r\n    public filter(commandName: string, frameId: string) {\r\n        const self: any = this;\r\n        let filters = self.context && self.context.eventParam && self.context.eventParam.data || [];\r\n        if (typeof (filters) === 'string') {\r\n            filters = JSON.parse(filters);\r\n        }\r\n        // æ¥è¯¢æ¶éç½®é¡µç ä¸ºç¬¬ä¸é¡µ\r\n        this.viewModel.frameContext.repository.entityCollection.pageIndex = 1;\r\n        this.viewModel.frameContext.repository.filterConditionManager.setConditions(this.viewModel.bindingPath, filters);\r\n        return this.commandService.execute(commandName, frameId);\r\n    }\r\n}\r\nexport { FilterConditionDataService };\r\n","import { Injectable } from '@angular/core';\r\nimport { Entity, BindingData, FrameContext } from '@farris/devkit';\r\nimport { BefRepository } from '@farris/bef';\r\nimport { Observable, EMPTY } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { FormLoadingService } from '../form-loading/form-loading.service';\r\nimport { LanguageService } from '../languag.service';\r\nimport { FormErrorService } from '../error/form-error.service';\r\nimport { EditStateUtil } from './utils/index';\r\n\r\n\r\n/**\r\n * æ°æ®ç¼è¾æå¡\r\n */\r\n@Injectable()\r\nclass EditDataService {\r\n\r\n  /**\r\n   * å®ä½ä»åº\r\n   */\r\n  private repository: BefRepository<Entity>;\r\n\r\n  /**\r\n   * ç»å®æ°æ®\r\n   */\r\n  private bindingData: BindingData;\r\n\r\n  /**\r\n   * Loadingæå¡\r\n   */\r\n  private loadingService: FormLoadingService;\r\n\r\n  /**\r\n   * è¯­è¨æå¡\r\n   */\r\n  private languageService: LanguageService;\r\n\r\n  /**\r\n   * éè¯¯å¤çæå¡\r\n   */\r\n  private errorService: FormErrorService;\r\n\r\n  /**\r\n   * æé å½æ°\r\n   */\r\n  constructor(private frameContext: FrameContext) {\r\n    this.repository = this.frameContext.repository as BefRepository<Entity>;\r\n    this.bindingData = this.frameContext.bindingData;\r\n    this.loadingService = this.frameContext.injector.get<FormLoadingService>(FormLoadingService, null);\r\n    this.languageService = this.frameContext.injector.get<LanguageService>(LanguageService, null);\r\n    this.errorService = this.frameContext.injector.get<FormErrorService>(FormErrorService, null);\r\n  }\r\n\r\n  /**\r\n   * ç¼è¾ï¼æ¯æå éï¼\r\n   */\r\n  public edit(id: string): Observable<Entity> {\r\n\r\n    id = id || this.bindingData.list.currentId;\r\n    if (!id) {\r\n      return EMPTY;\r\n    }\r\n\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    const edit$ = this.repository.editEntityById(id);\r\n    const result$ = edit$.pipe(\r\n      tap(\r\n        () => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          EditStateUtil.setEditState(this.frameContext, id);\r\n        },\r\n        (error: any) => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.errorService.exception(this.languageService.updateFailed, error);\r\n        }\r\n      )\r\n    );\r\n    return result$;\r\n  }\r\n}\r\n\r\n\r\nexport { EditDataService };\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\nimport { tap, switchMap, concatMap } from 'rxjs/operators';\r\nimport { FrameContext, Entity, } from '@farris/devkit';\r\nimport { BefRepository, } from '@farris/bef';\r\nimport { FormLoadingService } from '../form-loading/form-loading.service';\r\nimport { FormNotifyService } from '../form-notify.service';\r\nimport { LanguageService } from '../languag.service';\r\nimport { FormMessageService } from '../form-message.service';\r\nimport { FormErrorService } from '../error/form-error.service';\r\nimport { CommandService } from '../command-service';\r\nimport { ListDataService } from './list-data.service';\r\nimport { TreeDataService } from './tree-data.service';\r\n\r\n/**\r\n * å é¤æå¡\r\n */\r\n@Injectable()\r\nclass RemoveDataService {\r\n\r\n  private notifyService: FormNotifyService;\r\n\r\n  private messageService: FormMessageService;\r\n\r\n  private loadingService: FormLoadingService;\r\n\r\n  private errorService: FormErrorService;\r\n\r\n  private languageService: LanguageService;\r\n\r\n  private befRepository: BefRepository<any>;\r\n\r\n  private commandService: CommandService;\r\n\r\n  private listDataService: ListDataService;\r\n\r\n  private treeDataService: TreeDataService;\r\n\r\n  /**\r\n   * æé å½æ°\r\n   * @param frameContext ç»ä»¶ä¸ä¸æ\r\n   */\r\n  constructor(private frameContext: FrameContext) {\r\n    this.notifyService = this.frameContext.injector.get<FormNotifyService>(FormNotifyService, null);\r\n    this.messageService = this.frameContext.injector.get<FormMessageService>(FormMessageService, null);\r\n    this.errorService = this.frameContext.injector.get<FormErrorService>(FormErrorService, null);\r\n    this.loadingService = this.frameContext.injector.get<FormLoadingService>(FormLoadingService, null);\r\n\r\n    this.languageService = this.frameContext.injector.get<LanguageService>(LanguageService, null);\r\n    this.commandService = this.frameContext.injector.get<CommandService>(CommandService, null);\r\n    this.listDataService = this.frameContext.injector.get<ListDataService>(ListDataService, null);\r\n    this.treeDataService = this.frameContext.injector.get<TreeDataService>(TreeDataService, null);\r\n    this.befRepository = this.frameContext.repository as BefRepository<Entity>;\r\n  }\r\n\r\n  /**\r\n   * å é¤idå¯¹åºçå®ä½\r\n   * @param id è¦å é¤çæ°æ®id\r\n   * @param ifSave æ¯å¦ä¿å­\r\n   * @param enableRemoveAndSave æ¯å¦å¯ç¨å é¤å¹¶ä¿å­ï¼ä»ä¸ºå¼å®¹ï¼æ°è°ç¨è¯·å¿è®¾ç½®ï¼\r\n   * @summary\r\n   * enableRemoveAndSaveå­å¨çæä¹ï¼\r\n   * 1ãèè¡¨åçå¯è½æ²¡ædelAndSaveæ¹æ³ï¼\r\n   * 2ãä¸ºäºå°ListDataServiceä¸­çremoveæ¹æ³è¿ç§»å°æ­¤æ¹æ³ä¸ï¼æ¾ç¤ºè®¾ç½®ä¸ºfalseï¼ä¿æåä»¥åè¡ä¸ºä¸è´ï¼\r\n   * 3ãè¯¥åæ°é»è®¤ä¸ºtrueï¼å¹¶ä¸å¨WebComponentå±ä¸æ´é²ï¼æ°å½ä»¤ä¸éè¦ä¼ éï¼é»è®¤ä¸ºtrueï¼\r\n   */\r\n  public removeById(id: string, ifSave: boolean, enableRemoveAndSave: boolean = true, successMsg?: string): Observable<boolean> {\r\n    const msg = successMsg ? successMsg : '';\r\n    return this.innerRemoveById(id, ifSave, enableRemoveAndSave, msg);\r\n  }\r\n\r\n  public removeByIds(ids: string[]): Observable<boolean> {\r\n    throw new Error('Not Implemented');\r\n  }\r\n\r\n  /**\r\n   * å é¤idå¯¹åºçå®ä½ï¼å¹¶æ§è¡ä¿å­\r\n   */\r\n  public removeAndSaveById(id: string, successMsg?: string): Observable<boolean> {\r\n    const msg = successMsg ? successMsg : '';\r\n    return this.innerRemoveById(id, true, true, msg);\r\n  }\r\n\r\n  /**\r\n   * å é¤å¹¶ä¿å­æ èç¹æ°æ®\r\n   */\r\n  public removeAndSaveByIdForTree(id: string, successMsg?: string): Observable<boolean> {\r\n    const msg = successMsg ? successMsg : '';\r\n    // æ£æ¥è¦å é¤çidæ¯å¦å­å¨\r\n    if (this.checkIdsToRemove([id]) === false) {\r\n      this.notifyService.warning(this.languageService.plsSelectDeleteData, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n\r\n    // æ£æ¥æ¯å¦æå­èç¹\r\n    const treeNodesData = this.befRepository.entityCollection.toJSON();\r\n    if (this.treeDataService.hasChildNodes(id, treeNodesData) === true) {\r\n      this.messageService.warning(this.languageService.deleteChildFirst);\r\n      return EMPTY;\r\n    }\r\n\r\n    // æ§è¡å é¤\r\n    const remove$ = this.innerRemoveById(id, true, true, msg);\r\n    const nextNodeId = this.treeDataService.getNextNodeIdAfterRemoving(id, treeNodesData);;\r\n    const result$ = remove$.pipe(\r\n      tap(() => {\r\n        this.treeDataService.setNextNodeAfterRemoving(nextNodeId);\r\n      })\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n\r\n  /**\r\n   * æ¹éå é¤å¹¶ä¿å­\r\n   */\r\n  public removeAndSaveByIds() {\r\n    throw new Error('Not Implemented');\r\n  }\r\n\r\n  /**\r\n   * å é¤åçå·æ°\r\n   */\r\n  public refreshAfterRemoving(loadCmdName: string, loadCmdFrameId: string): Observable<any> {\r\n    if (!this.frameContext || !loadCmdName || !loadCmdFrameId) {\r\n      return;\r\n    }\r\n    const commandService = this.frameContext.injector.get<CommandService>(CommandService, null);\r\n    return commandService.execute(loadCmdName, loadCmdFrameId);\r\n  }\r\n\r\n  /**\r\n   * å é¤idå¯¹åºçå®ä½\r\n   * @param id å®ä½id\r\n   * @param ifSave æ¯å¦ä¿å­\r\n   * @param enableRemoveAndSave æ¯å¦å¯ç¨å é¤å¹¶ä¿å­ï¼èEAPIä¸æ²¡ææ­¤æ¹æ³ï¼éè¿å¼å³è¿è¡å¼å®¹ï¼\r\n   * @summary\r\n   * enableRemoveAndSaveåæ°è¯´æï¼\r\n   * 1ãèEAPIä¸æ²¡ædelAndSaveæ¹æ³ï¼åªè½åä¸¤æ¬¡è¯·æ±ï¼å é¤åä¿å­ï¼ï¼\r\n   * 2ãæ­¤å¼å³ç¨äºéæ©ä½¿ç¨åªç§æ¹å¼ï¼å¼å®¹èè¡¨åã\r\n   */\r\n  private innerRemoveById(id: string, ifSave: boolean, enableRemoveAndSave: boolean, successMsg: string): Observable<boolean> {\r\n\r\n    // æ£æ¥è¦å é¤çidæ¯å¦å­å¨\r\n    if (this.checkIdsToRemove([id]) === false) {\r\n      this.notifyService.warning(this.languageService.plsSelectDeleteData, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n\r\n    const confirm$ = this.confirmToRemove();\r\n    const remove$ = enableRemoveAndSave && ifSave ?\r\n      this.befRepository.removeEntityAndSaveById(id) :\r\n      this.befRepository.removeById(id, ifSave);\r\n\r\n    const result$ = confirm$.pipe(\r\n      concatMap((ifRemove: boolean) => {\r\n        if (ifRemove === false) {\r\n          return EMPTY;\r\n        }\r\n        const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n        return remove$.pipe(\r\n          tap(\r\n            () => {\r\n              this.loadingService.hideDelayLoading(loadingTimerId);\r\n              if (successMsg && successMsg.trim()) {\r\n                let showMessage: boolean = true;\r\n                if (successMsg.startsWith('{') && successMsg.endsWith('}')) {\r\n                  try {\r\n                    const options = JSON.parse(successMsg);\r\n                    if (options.showMessage === false) {\r\n                      showMessage = false;\r\n                    }\r\n                  } catch { }\r\n                }\r\n                if (showMessage !== false) {\r\n                  this.notifyService.success(successMsg, { hideTitle: true });\r\n                }\r\n              } else {\r\n                this.notifyService.success(this.languageService.deleteSuccess, { hideTitle: true });\r\n              }\r\n              // this.notifyService.success(this.languageService.deleteSuccess, { hideTitle: true });\r\n            },\r\n            (error: any) => {\r\n              this.loadingService.hideDelayLoading(loadingTimerId);\r\n              this.errorService.exception(this.languageService.deleteFailed, error);\r\n            }\r\n          ),\r\n          switchMap(() => {\r\n            const saved = enableRemoveAndSave && ifSave;\r\n            if (!saved) {\r\n              return EMPTY;\r\n            } else {\r\n              return of(null);\r\n            }\r\n          })\r\n        );\r\n      })\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * æ£æ¥è¦å é¤çidsæ¯å¦ä¸ºç©º\r\n   */\r\n  private checkIdsToRemove(ids: string[]): boolean {\r\n    if (!ids) {\r\n      return false;\r\n    }\r\n    const filteredIds = ids.filter((id: string) => {\r\n      return !!id;\r\n    });\r\n    if (filteredIds.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * ç¡®è®¤å é¤\r\n   */\r\n  private confirmToRemove(): Observable<boolean> {\r\n    const confirm$ = this.messageService.question(this.languageService.confirmDeletion);\r\n    const result$ = confirm$.pipe(\r\n      concatMap((ifRemove: boolean) => {\r\n        if (ifRemove === false) {\r\n          return EMPTY;\r\n        } else {\r\n          return of(true);\r\n        }\r\n      }\r\n      ));\r\n    return result$;\r\n  }\r\n}\r\n\r\nexport { RemoveDataService };\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { FrameContext, Entity } from '@farris/devkit';\r\nimport { BefRepository } from '@farris/bef';\r\nimport { FormLoadingService } from '../form-loading/form-loading.service';\r\nimport { FormNotifyService } from '../form-notify.service';\r\nimport { LanguageService } from '../languag.service';\r\nimport { FormMessageService } from '../form-message.service';\r\nimport { FormErrorService } from '../error/form-error.service';\r\n\r\n/**\r\n * å é¤æå¡\r\n */\r\n@Injectable()\r\nclass SaveDataService {\r\n\r\n  private notifyService: FormNotifyService;\r\n\r\n  private messageService: FormMessageService;\r\n\r\n  private loadingService: FormLoadingService;\r\n\r\n  private errorService: FormErrorService;\r\n\r\n  private languageService: LanguageService;\r\n\r\n  private befRepository: BefRepository<any>;\r\n\r\n  /**\r\n   * æé å½æ°\r\n   * @param frameContext ç»ä»¶ä¸ä¸æ\r\n   */\r\n  constructor(private frameContext: FrameContext) {\r\n    this.notifyService = this.frameContext.injector.get<FormNotifyService>(FormNotifyService, null);\r\n    this.messageService = this.frameContext.injector.get<FormMessageService>(FormMessageService, null);\r\n    this.loadingService = this.frameContext.injector.get<FormLoadingService>(FormLoadingService, null);\r\n    this.languageService = this.frameContext.injector.get<LanguageService>(LanguageService, null);\r\n    this.befRepository = this.frameContext.repository as BefRepository<Entity>;\r\n  }\r\n}\r\n\r\nexport { SaveDataService };\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { tap, switchMap, concatMap } from 'rxjs/operators';\r\n\r\nimport { BindingList, FrameContext, ViewModel } from '@farris/devkit';\r\nimport { BaseDataService } from './base-data.service';\r\nimport { FormMessageService } from '../form-message.service';\r\nimport { FormLoadingService } from '../form-loading/form-loading.service';\r\nimport { FormErrorService } from '../error/form-error.service';\r\nimport { FormNotifyService } from '../form-notify.service';\r\nimport { LanguageService } from '../languag.service';\r\nimport { TreeRepositoryFactory } from './tree-table/repository/tree-repository-factory';\r\nimport { TreeUtilFactory } from './tree-table/util/tree-util-factory';\r\n\r\n\r\n\r\n/**\r\n * æ æ°æ®æå¡\r\n */\r\n@Injectable()\r\nclass SubTreeDataService extends BaseDataService {\r\n\r\n  /**\r\n   * åçº§ç ä¿¡æ¯\r\n   */\r\n  private get hierarchyInfoKey(): string {\r\n    return this.virtualRootFrameContext.getParam('hierarchyInfoKey');\r\n  }\r\n  private get hierarchyInfoField(): string {\r\n    return this.hierarchyInfoKey.split('/').filter(p => p).pop();\r\n  }\r\n  private get virtualRootFrameContext() {\r\n    return this.frameContext.getVirtualRootFrameContext();\r\n  }\r\n\r\n  /**\r\n   * æé å½æ°\r\n   */\r\n  constructor(\r\n    frameContext: FrameContext,\r\n    private viewModel: ViewModel,\r\n    private messageService: FormMessageService,\r\n    private loadingService: FormLoadingService,\r\n    private errorService: FormErrorService,\r\n    private formNotifyService: FormNotifyService,\r\n    @Optional() private languageService: LanguageService\r\n  ) {\r\n    super(frameContext);\r\n    if (!languageService) {\r\n      this.languageService = LanguageService.getInstance();\r\n    }\r\n  }\r\n\r\n  private get messagePipe() {\r\n    if (this.viewModel && this.viewModel.frameContext) {\r\n      const appContext = this.viewModel.frameContext.getFormAppContext() || null;\r\n      if (appContext) {\r\n        return appContext.messagePipe || null;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * æ°å¢å­è¡¨åçº§\r\n   */\r\n  public addSubSibling(): Observable<any> {\r\n    if (this.messagePipe) {\r\n      this.messagePipe.next({ messageType: 'addSubSibling' });\r\n    }\r\n    let params: { nodeCodes: string[], ids: string[] } = this.getParams();\r\n    // è·ååçº§æ¹å¼\r\n    const hierarchyType: string = this.getHierarchyType();\r\n    // æ§è¡åæ°\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n    const repository = TreeRepositoryFactory.getInstance(hierarchyType);\r\n    if (!repository) {\r\n      // éè¯¯çåçº§ç \r\n      throw new Error(this.languageService['errorHierarchyKey']);\r\n    }\r\n    const result$ = repository.addSubSibling(this.repository, params.nodeCodes, params.ids);\r\n    return result$.pipe(\r\n      tap(\r\n        () => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n        },\r\n        error => {\r\n          this.errorService.exception(this.languageService.addSubSiblingFailed, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * æ°å¢ä¸çº§\r\n   */\r\n  public addSubChild(): Observable<any> {\r\n    if (this.messagePipe) {\r\n      this.messagePipe.next({ messageType: 'addSubChild' });\r\n    }\r\n    let params: { nodeCodes: string[], ids: string[] } = this.getParams();\r\n    // è·ååçº§æ¹å¼\r\n    const hierarchyType = this.getHierarchyType();\r\n\r\n    const currentList = this.frameContext && this.frameContext.bindingData && this.frameContext.bindingData.getList();\r\n    if (!currentList['currentId']) {\r\n      // è¯·éæ©ç¶èç¹\r\n      this.formNotifyService.warning(this.languageService['plsSelectParentNode'], { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    // æ§è¡åæ°\r\n    const loadingTimerId = this.loadingService.showLoadingWithDelay(500);\r\n\r\n    const repository = TreeRepositoryFactory.getInstance(hierarchyType);\r\n    if (!repository) {\r\n      throw new Error(this.languageService['errorHierarchyKey']);\r\n    }\r\n    const addSubChild$ = repository.addSubChild(this.repository, params.nodeCodes, params.ids);\r\n    const result$ = addSubChild$.pipe(\r\n      tap(\r\n        () => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n        },\r\n        error => {\r\n          this.loadingService.hideDelayLoading(loadingTimerId);\r\n          this.errorService.exception(this.languageService.addSubChildFailed, error);\r\n        }\r\n      )\r\n    );\r\n    return result$;\r\n  }\r\n  /**\r\n   * å é¤å­è¡¨æ èç¹\r\n   * @param id id\r\n   */\r\n  public remove(id: string, successMsg?: string): Observable<any> {\r\n    // åæ°æ£æ¥\r\n    if (!id) {\r\n      this.formNotifyService.warning(this.languageService['plsSelectDeleteData'], { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    // è·ååçº§æ¹å¼\r\n    const hierarchyType = this.getHierarchyType();\r\n    // æå­èç¹æ¶ä¸åè®¸å é¤\r\n    const treeNodesData = this.frameContext.bindingData.getList().toJSON();\r\n    const bindingList = this.frameContext.bindingData.getList();\r\n    const treeNodeUtil = TreeUtilFactory.getInstance(hierarchyType);\r\n    if (treeNodeUtil === null) {\r\n      return EMPTY;\r\n    }\r\n    if (treeNodeUtil.hasChildNodes(treeNodesData, this.hierarchyInfoField, id) === true) {\r\n      this.messageService.warning(this.languageService['deleteChildFirst']);\r\n      return EMPTY;\r\n    }\r\n    // ç¡®è®¤å é¤\r\n    const action$ = this.messageService.question(this.languageService.confirmDeletion);\r\n    return action$.pipe(\r\n      concatMap(result => {\r\n        if (!result) {\r\n          return EMPTY;\r\n        }\r\n        // è·åå é¤åè¦è®¾ç½®çèç¹id\r\n        const nextNodeId = treeNodeUtil.getNextNodeId(treeNodesData, this.hierarchyInfoField, id);\r\n\r\n        // æ§è¡å é¤\r\n        const loadingTimerId = this.loadingService.show();\r\n        const path = this.getPath();\r\n        const remove$ = this.frameContext.repository.removeByPath(path, id);\r\n        return remove$.pipe(\r\n          tap(() => {\r\n            // è®¾ç½®éä¸­èç¹\r\n            treeNodeUtil.selectNodeByBindingList(bindingList, this.hierarchyInfoField, nextNodeId);\r\n            this.loadingService.hideDelayLoading(loadingTimerId);\r\n            if (successMsg && successMsg.trim()) {\r\n              let showMessage: boolean = true;\r\n              if (successMsg.startsWith('{') && successMsg.endsWith('}')) {\r\n                try {\r\n                  const options = JSON.parse(successMsg);\r\n                  if (options.showMessage === false) {\r\n                    showMessage = false;\r\n                  }\r\n                } catch { }\r\n              }\r\n              if (showMessage !== false) {\r\n                this.formNotifyService.success(successMsg, { hideTitle: true });\r\n              }\r\n            } else {\r\n              this.formNotifyService.success(this.languageService.deleteSuccess, { hideTitle: true });\r\n            }\r\n            // this.formNotifyService.success(this.languageService.deleteSuccess, { hideTitle: true });\r\n          },\r\n            error => {\r\n              this.loadingService.hideDelayLoading(loadingTimerId);\r\n              this.errorService.exception(this.languageService.deleteFailed, error);\r\n            }\r\n          )\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  private getHierarchyType() {\r\n    const propInfo = this.repository.entityTypeInfo.getPropInfoByPath(this.hierarchyInfoKey.split('/'));\r\n    let hierarchyType = propInfo.metadataInfo['hierarchyType'] || null;\r\n    if (hierarchyType == null || hierarchyType.length < 1) {\r\n      // 'åçº§ç éç½®ä¿¡æ¯éè¯¯'\r\n      throw new Error(this.languageService['incorrectHierarchyConfig']);\r\n    }\r\n    return hierarchyType;\r\n  }\r\n\r\n  /**\r\n   * è·ååæ°\r\n   * /parentId/childCodes/childId/grandsonCodes\r\n   * [childCodes, grandsonCodes]\r\n   * [parntId, childId]\r\n   */\r\n  private getParams(): { nodeCodes: string[], ids: string[] } {\r\n    let nodeCodes = this.viewModel.bindingPath.substr(1).split('/');\r\n    let ids = [];\r\n    let nodeCodeArray = [];\r\n    const rid = this.viewModel.bindingData.list.currentId; // rootè¡¨æ°æ®id\r\n    ids.push(rid);\r\n    let subData: any = this.viewModel.bindingData;\r\n    if (nodeCodes.length > 0) {\r\n      nodeCodes.map(nodeCode => {\r\n        subData = subData[nodeCode];\r\n        if (subData && subData.currentId) {\r\n          ids.push(subData.currentId);\r\n        }\r\n        //å»é¤nodeCodeçs\r\n        nodeCode ? nodeCodeArray.push(nodeCode.substring(0, nodeCode.length - 1)) : nodeCodeArray.push(nodeCode);\r\n      })\r\n    }\r\n    return { nodeCodes: nodeCodeArray, ids: ids };\r\n  }\r\n  /**\r\n   * è·åå®æ´è·¯å¾\r\n   * fixed by justin: æ ¹æ®bindingPathï¼å¦ææ¯ä»ä»è¡¨ï¼éè¦è·åä¸»è¡¨æ°æ®idåä»è¡¨æ°æ®id\r\n   */\r\n  private getPath(): string {\r\n    const bindingPath = this.viewModel.bindingPath;\r\n    const rid = this.viewModel.bindingData.list.currentId; // rootè¡¨æ°æ®id\r\n    let path = '/' + rid;\r\n\r\n    const subPaths = bindingPath.split('/').filter(p => p);\r\n    if (subPaths.length > 0) {\r\n      // eg:bindingPathå½¢å¦/edus/grades,splitåæ¯['edus', 'grades']\r\n      let subData: any = this.viewModel.bindingData;\r\n      for (let index = 1; index < subPaths.length - 1; index++) {\r\n        const subPath = subPaths[index];\r\n        subData = subData[subPath];\r\n        if (!subData || !subData.currentId) {\r\n          throw Error(`è·åå­è¡¨å®æ´è·¯å¾åºéï¼æ¾ä¸å°${subData}å¯¹åºçå­è¡¨ï¼æå¯¹åºå­è¡¨æ²¡æå½åè¡ã`);\r\n        }\r\n        path += `/${subPath}/${subData.currentId}`;\r\n      }\r\n    }\r\n    path += '/' + subPaths[subPaths.length - 1];\r\n\r\n    return path;\r\n  }\r\n}\r\nexport { SubTreeDataService };\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Repository } from '@farris/devkit';\r\nimport { BefRepository, BefRestService, RequestInfo, ResponseInfo } from '@farris/bef';\r\nimport { BodyWithRequestInfo } from './types';\r\nimport { FormLoadingService } from './form-loading/form-loading.service';\r\nimport { FormMessageService } from './form-message.service';\r\nimport { FormNotifyService } from './form-notify.service';\r\nimport { FormErrorService } from './error/form-error.service';\r\nimport { LanguageService } from './languag.service';\r\n// tslint:disable: no-string-literal\r\n\r\n/**\r\n * åè¡¨ä»åºæå¡\r\n * @scope FrameComponent\r\n */\r\n@Injectable()\r\nclass BeActionService {\r\n\r\n  /**\r\n   * æé å½æ°\r\n   */\r\n  constructor(\r\n    private repository: Repository<any>,\r\n    private loadingService: FormLoadingService,\r\n    private msgService: FormMessageService,\r\n    private notifyService: FormNotifyService,\r\n    private formErrorService: FormErrorService,\r\n    @Optional() private languageService: LanguageService,\r\n  ) {\r\n    if (!this.languageService) {\r\n      this.languageService = LanguageService.getInstance();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æ§è¡èªå®ä¹å¨ä½\r\n   */\r\n  public invokeAction(\r\n    actionUri: string, httpMethod: string, httpHeaders?: any, queryParams?: any, body?: BodyWithRequestInfo\r\n  ): Observable<ResponseInfo> {\r\n    return this.innerInvokeAction(actionUri, httpMethod, httpHeaders, queryParams, body, true);\r\n  }\r\n\r\n  /**\r\n   * å·²å¼ç¨ï¼è¯·ä½¿ç¨invokeActionä»£æ¿\r\n   * @deprecated\r\n   * @summary\r\n   * è¿ç§»æ¶è¯·æ³¨æï¼invokeActionä¸­bodyè¯·ä¼ éæ»¡è¶³BodyWithRequestInfoæ¥å£çæ ¼å¼ï¼å½¢å¦ï¼\r\n   * { requestInfo: reqeustInfoInstance, key1: value1, key2: value2 }\r\n   */\r\n  public executeAction(\r\n    actionUri: string, httpMethod: string, httpHeaders?: any, queryParams?: any, body?: any\r\n  ): Observable<any> {\r\n\r\n    // 1ãä¸ç¡®å®bodyä¸­æ¯å¦æRequestInfoå¯¹è±¡\r\n    // 2ãrestServiceçreqeustä¼æ ¹æ®bodyä¸­æ¯å¦ækeyä¸ºReqeustInfoï¼å¤§åå¼å¤´ï¼çåæ°æ¥ç¡®å®ï¼\r\n    // 3ãå¦æbodyä¸­æ²¡ækeyä¸ºReqeustInfoçåæ°ï¼ä¸ç´æ¥è¿åResponseInfoï¼èæ¯è¿ä¸æ­¥è§£æï¼è¿åå¶ä¸­çreturnValueã\r\n    return this.innerInvokeAction(actionUri, httpMethod, httpHeaders, queryParams, body, false);\r\n  }\r\n\r\n  /**\r\n   * æé æ¥è¯¢å­ç¬¦ä¸²\r\n   */\r\n  public buildQueryParams(queryParams: string): string {\r\n    if (typeof queryParams === 'string') {\r\n      queryParams = JSON.parse(queryParams);\r\n    }\r\n\r\n    let queryParamsString = '';\r\n    Object.keys(queryParams).forEach((key: string) => {\r\n      queryParamsString += `${key}=${queryParams[key]}`;\r\n    });\r\n\r\n    return queryParamsString;\r\n  }\r\n\r\n  /**\r\n   * è·åRestæå¡\r\n   */\r\n  public getRestService(): BefRestService {\r\n    const befRepository = this.repository as BefRepository<any>;\r\n    return befRepository.restService;\r\n  }\r\n\r\n\r\n  /**\r\n   * è°ç¨èªå®ä¹å¨ä½\r\n   */\r\n  private innerInvokeAction(\r\n    actionUri: string, httpMethod: string, httpHeaders?: any, queryParams?: any, body?: any, hasRequestInfo?: boolean\r\n  ): Observable<any>  {\r\n    const options = {};\r\n    const restService = this.getRestService();\r\n    const baseUri = restService.baseUri;\r\n\r\n    // æé url\r\n    let fullActionUri = `${baseUri}/service/${actionUri}`;\r\n    if (queryParams && queryParams !== '') {\r\n      const queryParamsString = this.buildQueryParams(queryParams);\r\n      fullActionUri += queryParamsString;\r\n    }\r\n\r\n\r\n    // bodyæé \r\n    if (body && body !== '') {\r\n      if (typeof body === 'string' && body.startsWith('{') && body.endsWith('}')) {\r\n        body = JSON.parse(body);\r\n      }\r\n      options['body'] = body;\r\n    }\r\n\r\n    // httpå¤´æé \r\n    if (httpHeaders && httpHeaders !== '') {\r\n      httpHeaders = JSON.parse(httpHeaders);\r\n\r\n      // å¦ææ²¡æè®¾ç½®Content-Typeï¼é»è®¤ç¨jsonæ ¼å¼\r\n      if (!httpHeaders['Content-Type']) {\r\n        httpHeaders['Content-Type'] = 'application/json';\r\n      }\r\n      options['headers'] = new HttpHeaders(httpHeaders);\r\n    } else {\r\n      options['headers'] = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    }\r\n\r\n    // æ§è¡æå¡å¨ç«¯è¯·æ±\r\n    this.loadingService.show();\r\n\r\n    // invokeæ¹æ³\r\n    // 1ãRequestInfo=>æ¥é\r\n    // 2ãrequestInfo=>ResponseInfo\r\n    // requestæ¹æ³\r\n    // 1ãRequestInfo=>ResponseInfo\r\n    // 2ãrequestInfo=>returnValue\r\n    const methodName = hasRequestInfo ? 'invoke' : 'request';\r\n    const result$ = restService[methodName](fullActionUri, httpMethod, null, options);\r\n    return result$.pipe(\r\n      tap(\r\n        () => {\r\n          this.loadingService.hide();\r\n        },\r\n        (error: any) => {\r\n          this.loadingService.hide();\r\n          const errorMsg = fullActionUri + this.languageService['operationFailed'];\r\n          this.formErrorService.exception(errorMsg, error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport { BeActionService };\r\n\r\n\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { Observable, empty, of, from, EMPTY } from 'rxjs';\r\nimport { tap, map, switchMap, catchError } from 'rxjs/operators';\r\nimport { BeActionService } from './be-action.service';\r\nimport { FormMessageService } from './form-message.service';\r\nimport { FormNotifyService } from './form-notify.service';\r\nimport { LanguageService } from './languag.service';\r\nimport { FormLoadingService } from './form-loading/form-loading.service';\r\nimport { FormErrorService } from './error/form-error.service';\r\nimport { WFSubmiteService, InteractionResponse, ExcutionResponse } from '@gsp-wf/rtdevkit';\r\nimport { WfTaskHandlerService } from '@gsp-wf/wf-task-handler';\r\nimport { BefRepository } from '@farris/bef';\r\nimport { Entity, FrameContext } from '@farris/devkit';\r\nimport { WFFlowchartService } from '@gsp-wf/ui-flowchart';\r\nimport { FormNotifyStrategyService } from './form-notify-strategy.service';\r\nimport { BodyWithRequestInfo } from './../lib/types';\r\n// tslint:disable: max-line-length\r\n/**\r\n * å®¡æ¹æå¡\r\n * @Scope FrameComponent\r\n */\r\n@Injectable()\r\nclass ApproveService {\r\n\r\n  /**\r\n   * å®ä½ä»åº\r\n   */\r\n  private repository: BefRepository<Entity>;\r\n\r\n  /**\r\n   * æé å½æ°\r\n   */\r\n  constructor(\r\n    private formLoadingService: FormLoadingService,\r\n    private beActionService: BeActionService,\r\n    private msgService: FormMessageService,\r\n    private notifyService: FormNotifyService,\r\n    @Optional() private languageService: LanguageService,\r\n    private formErrorService: FormErrorService,\r\n    private frameContext: FrameContext,\r\n    @Optional() private submitter: WFSubmiteService,\r\n    @Optional() private flowchartService: WFFlowchartService,\r\n    @Optional() private wfTaskHandlerService: WfTaskHandlerService\r\n  ) {\r\n    if (this.frameContext) {\r\n      this.repository = this.frameContext.repository as BefRepository<Entity>;\r\n      if (!this.wfTaskHandlerService) {\r\n        this.wfTaskHandlerService = this.frameContext.injector.get(WfTaskHandlerService, null);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * å¸¦æäº¤äºçæäº¤å®¡æ¹\r\n   */\r\n  submitApproveWithInteraction(bizBillID: string) {\r\n    return this.submitApprove(bizBillID);\r\n  }\r\n\r\n  /**\r\n   * æäº¤å®¡æ¹\r\n   * @param bizBillID ä¸å¡åæ®id\r\n   * @param interactionResult åç«¯äº¤äºç»æ\r\n   * @deprecated å·²åºå¼ï¼æ¸ä½¿ç¨åå«å¥å£åæ®çå®¡æ¹\r\n   */\r\n  submitApprove(bizBillID: string, interactionResult?: InteractionResponse): Observable<any> {\r\n    if (!bizBillID) {\r\n      // this.msgService.error(this.languageService.unallowEmptyBizBillId);\r\n      this.notifyService.info(this.languageService.unallowEmptyBizBillId, { hideTitle: true });\r\n      return empty();\r\n    }\r\n\r\n    const actionUri = 'submittoapprovevoaction';\r\n\r\n    const restService = this.beActionService.getRestService();\r\n\r\n    const body: BodyWithRequestInfo = {\r\n      requestInfo: restService.buildRequestInfo(),\r\n      bizInstID: bizBillID,\r\n      interactionResult: interactionResult ? {\r\n        procDefId: interactionResult.processDefinitionId\r\n      } : {}\r\n    };\r\n\r\n    this.formLoadingService.show();\r\n\r\n    // æ·»å æç¤º\r\n    const action$ = this.beActionService.invokeAction(actionUri, 'PUT', null, null, body);\r\n    // ç®ååå«ä¸ç§æåµï¼\r\n    // 1. ç¬¬ä¸æ¬¡æäº¤æåï¼æå¡ç«¯è¿åæµç¨å®ä¾id\r\n    // 2. ç¬¬ä¸æ¬¡æäº¤æåï¼æå¡ç«¯è¿åæµç¨å®ä¾idï¼å¹¶è¿åå¤ä¸ªåä¸èï¼äº¤äºæ¶æäº¤åä¸è\r\n    // 3. ç¬¬ä¸æ¬¡æäº¤æªæåï¼æå¡ç«¯è¿åå¤ä¸ªæµç¨å®ä¹ï¼éè¦äº¤äºåç¬¬äºæ¬¡æäº¤å®¡æ¹ï¼ç¬¬äºæ¬¡æäº¤ä¼åºç°æåµ1åæåµ2\r\n\r\n    return action$.pipe(\r\n      map((result): ExcutionResponse => {\r\n        if (result && result.returnValue && result.returnValue.excutionResponse) {\r\n          var wfResponse: ExcutionResponse = result.returnValue.excutionResponse;\r\n          return wfResponse;\r\n        }\r\n      }),\r\n      switchMap((response: ExcutionResponse) => {\r\n        if (response && response.procInstId) {\r\n          if (this.repository) {\r\n            const updating$ = this.repository.updateById(bizBillID);\r\n            return updating$.pipe(tap(() => {\r\n              this.formLoadingService.hide();\r\n              // this.notifyService.info(this.languageService.submitSuccess);\r\n              FormNotifyStrategyService.success(this.notifyService, this.languageService.submitSuccess);\r\n            }), map(() => {\r\n              return response;\r\n            }));\r\n          } else {\r\n            this.formLoadingService.hide();\r\n            // this.notifyService.info(this.languageService.submitSuccess);\r\n            FormNotifyStrategyService.success(this.notifyService, this.languageService.submitSuccess);\r\n            return of(response);\r\n          }\r\n        } else {\r\n          return of(response);\r\n        }\r\n      }),\r\n      switchMap((response: ExcutionResponse) => {\r\n        if (response.needInteraction) {\r\n          return from(new Promise((resolve) => {\r\n            this.submitter.excute(response, (interactionResponse: InteractionResponse) => {\r\n              // å¦ææ­¤æ¬¡æªæäº¤ï¼èéæ©åå¾å°äºæµç¨å®ä¹IDï¼åå¨æ­¤æäº¤å®¡æ¹\r\n              if (!response.procInstId && interactionResponse.processDefinitionId) {\r\n                this.submitApprove(bizBillID, interactionResponse).subscribe(() => {\r\n                  resolve();\r\n                });\r\n              } else {\r\n                resolve();\r\n              }\r\n            });\r\n          }));\r\n        } else {\r\n          return of(null);\r\n        }\r\n      }),\r\n      catchError(\r\n        error => {\r\n          this.formLoadingService.hide();\r\n          // this.formErrorService.exception(this.languageService.submitFaild, error);\r\n          return of(error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  /**\r\n   * æäº¤å®¡æ¹(å¸¦å¥å£åæ®)\r\n   * @param bizBillID ä¸å¡åæ®Id\r\n   * @param bizDefKey å¥å£åæ®Id\r\n   * @param options options\r\n   * @param interactionResult äº¤äºç»æ\r\n   */\r\n\r\n  public submitApproveWithBizDefKey(bizBillID: string, bizDefKey: string, options?: any, interactionResult?: InteractionResponse): Observable<any> {\r\n    if (!bizBillID) {\r\n      this.notifyService.warning(this.languageService.unallowEmptyBizBillId, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.notifyService.warning(this.languageService.bizDefKeyRequired, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    try {\r\n      if (options && typeof (options) === 'string') {\r\n        options = JSON.parse(options);\r\n      }\r\n    } catch (e) {\r\n      throw new Error('ArgumentError:options not a valid json string.');\r\n    }\r\n\r\n    const actionUri = 'submittoapprovewithpayload';\r\n\r\n    const restService = this.beActionService.getRestService();\r\n\r\n    const body: BodyWithRequestInfo = {\r\n      requestInfo: restService.buildRequestInfo(),\r\n      approvePayload: {\r\n        startProcessPayload: {\r\n          bizDefKey: bizDefKey,\r\n          dataId: bizBillID,\r\n          name: options && options.name || '',\r\n          variables: options && options.variables || {}\r\n        }\r\n      }\r\n    };\r\n    if (interactionResult) {\r\n      body.approvePayload.startProcessPayload.processDefinitionId = interactionResult.processDefinitionId;\r\n      body.approvePayload.startProcessPayload.processDefinitionKey = interactionResult['processDefinitionKey'];\r\n    }\r\n    this.formLoadingService.show();\r\n\r\n    // æ·»å æç¤º\r\n    const action$ = this.beActionService.invokeAction(actionUri, 'PUT', null, null, body);\r\n    // ç®ååå«ä¸ç§æåµï¼\r\n    // 1. ç¬¬ä¸æ¬¡æäº¤æåï¼æå¡ç«¯è¿åæµç¨å®ä¾id\r\n    // 2. ç¬¬ä¸æ¬¡æäº¤æåï¼æå¡ç«¯è¿åæµç¨å®ä¾idï¼å¹¶è¿åå¤ä¸ªåä¸èï¼äº¤äºæ¶æäº¤åä¸è\r\n    // 3. ç¬¬ä¸æ¬¡æäº¤æªæåï¼æå¡ç«¯è¿åå¤ä¸ªæµç¨å®ä¹ï¼éè¦äº¤äºåç¬¬äºæ¬¡æäº¤å®¡æ¹ï¼ç¬¬äºæ¬¡æäº¤ä¼åºç°æåµ1åæåµ2\r\n\r\n    return action$.pipe(\r\n      map((result): ExcutionResponse => {\r\n        if (result && result.returnValue && result.returnValue.excutionResponse) {\r\n          const wfResponse: ExcutionResponse = result.returnValue.excutionResponse;\r\n          return wfResponse;\r\n        }\r\n      }),\r\n      switchMap((response: ExcutionResponse) => {\r\n        if (response && response.procInstId) {\r\n          if (this.repository) {\r\n            const updating$ = this.repository.updateById(bizBillID);\r\n            return updating$.pipe(tap(() => {\r\n              this.formLoadingService.hide();\r\n              // this.notifyService.info(this.languageService.submitSuccess);\r\n              FormNotifyStrategyService.success(this.notifyService, this.languageService.submitSuccess);\r\n            }), map(() => {\r\n              return response;\r\n            }));\r\n          } else {\r\n            this.formLoadingService.hide();\r\n            // this.notifyService.info(this.languageService.submitSuccess);\r\n            FormNotifyStrategyService.success(this.notifyService, this.languageService.submitSuccess);\r\n            return of(response);\r\n          }\r\n        } else {\r\n          return of(response);\r\n        }\r\n      }),\r\n      switchMap((response: ExcutionResponse) => {\r\n        if (response.needInteraction) {\r\n          return from(new Promise((resolve) => {\r\n            this.submitter.excute(response, (interactionResponse: InteractionResponse) => {\r\n              // å¦ææ­¤æ¬¡æªæäº¤ï¼èéæ©åå¾å°äºæµç¨å®ä¹IDï¼åå¨æ­¤æäº¤å®¡æ¹\r\n              if (!response.procInstId && interactionResponse.processDefinitionId) {\r\n                this.submitApproveWithBizDefKey(bizBillID, bizDefKey, options, interactionResponse).subscribe(() => {\r\n                  resolve();\r\n                });\r\n              } else {\r\n                resolve();\r\n              }\r\n            });\r\n          }));\r\n        } else {\r\n          return of(null);\r\n        }\r\n      }),\r\n      catchError(\r\n        error => {\r\n          this.formLoadingService.hide();\r\n          // this.formErrorService.exception(this.languageService.submitFaild, error);\r\n          return of(error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  /**\r\n   * æäº¤å®¡æ¹(å¸¦å¥å£åæ®ä½¿ç¨wfæ§ä»¶)\r\n   * @param bizBillID ä¸å¡åæ®Id\r\n   * @param bizDefKey å¥å£åæ®Id\r\n   * @param options ä¸ä¸æåæ°\r\n   * @param variables å¯éåæ°\r\n   */\r\n  public submitApproveWithBizDefKeyUseControl(bizBillID: string, bizDefKey: string, options: any = {}, variables?: any) {\r\n    if (!bizBillID) {\r\n      this.notifyService.warning(this.languageService.unallowEmptyBizBillId, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.notifyService.warning(this.languageService.bizDefKeyRequired, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    if (!options || typeof options !== 'object') {\r\n      options = {};\r\n    }\r\n    const payload: any = {\r\n      dataId: bizBillID,\r\n      bizDefKey,\r\n      ...options\r\n    };\r\n    // å¤çvariablesåæ°\r\n    if (variables) {\r\n      if (variables.startsWith('{') && variables.endsWith('}')) {\r\n        try {\r\n          variables = JSON.parse(variables);\r\n        } catch {\r\n          variables = {};\r\n        }\r\n      }\r\n      payload.variables = variables;\r\n    }\r\n    return this.wfTaskHandlerService && this.wfTaskHandlerService.startProcess(payload);\r\n  }\r\n  /**\r\n   * å­è¡¨æäº¤å®¡æ¹\r\n   * @param bizDefKey å¥å£åæ®Id\r\n   * @param bizId ä¸å¡åæ®Idï¼ä¸»è¡¨ï¼\r\n   * @param childBizId ä¸å¡åæ®Idï¼ä»è¡¨ï¼\r\n   * @param options ä¸ä¸æåæ°\r\n   * @param variables å¯éåæ°\r\n   */\r\n  public childSubmitApproveWithBizDefKey(bizDefKey: string, bizId: string, childBizId: string, options: any = {}, variables?: any): Observable<any> {\r\n    // å¥å£åæ®ä¸è½ä¸ºç©º\r\n    if (!bizDefKey) {\r\n      this.notifyService.warning(this.languageService.bizDefKeyRequired, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    // ä¸»ä¸å¡åæ®Idä¸è½ä¸ºç©º\r\n    if (!bizId) {\r\n      this.notifyService.warning(this.languageService.unallowEmptyBizBillId, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    // ä»è¡¨ä¸å¡åæ®Idä¸è½ä¸ºç©º\r\n    if (!childBizId) {\r\n      this.notifyService.warning(this.languageService.unallowEmptyChildBizBillId, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    if (!options || typeof options !== 'object') {\r\n      options = {};\r\n    }\r\n    const payload: any = {\r\n      dataId: `${bizId},${childBizId}`,\r\n      bizDefKey,\r\n      ...options\r\n    };\r\n    // å¤çvariablesåæ°\r\n    if (variables) {\r\n      if (variables.startsWith('{') && variables.endsWith('}')) {\r\n        try {\r\n          variables = JSON.parse(variables);\r\n        } catch {\r\n          variables = {};\r\n        }\r\n      }\r\n      payload.variables = variables;\r\n    }\r\n    return this.wfTaskHandlerService && this.wfTaskHandlerService.startProcess(payload);\r\n  }\r\n  /**\r\n   * åæ¶å®¡æ¹\r\n   * @deprecated å·²åºå¼ï¼è¯·ä½¿ç¨cancelSubmit\r\n   */\r\n  public cancelApprove(bizBillID: string): Observable<any> {\r\n    if (!bizBillID) {\r\n      this.notifyService.warning(this.languageService.unallowEmptyBizBillId, { hideTitle: true });\r\n      return empty();\r\n    }\r\n\r\n    const actionUri = 'canceltosubmitvoaction';\r\n\r\n    const restService = this.beActionService.getRestService();\r\n\r\n    const body = {\r\n      requestInfo: restService.buildRequestInfo(),\r\n      bizInstID: bizBillID,\r\n    };\r\n\r\n    this.formLoadingService.show();\r\n\r\n    const action$ = this.beActionService.executeAction(actionUri, 'PUT', null, null, body);\r\n    return action$.pipe(\r\n      switchMap(() => {\r\n        if (this.repository) {\r\n          const updating$ = this.repository.updateById(bizBillID);\r\n          return updating$.pipe(tap(() => {\r\n            this.formLoadingService.hide();\r\n            // this.notifyService.info(this.languageService.cancelApproveSuccess);\r\n            FormNotifyStrategyService.success(this.notifyService, this.languageService.cancelApproveSuccess);\r\n          }));\r\n        } else {\r\n          this.formLoadingService.hide();\r\n          // this.notifyService.info(this.languageService.cancelApproveSuccess);\r\n          FormNotifyStrategyService.success(this.notifyService, this.languageService.cancelApproveSuccess);\r\n          return of();\r\n        }\r\n      }\r\n      ),\r\n      catchError(error => {\r\n        this.formLoadingService.hide();\r\n        // this.formErrorService.exception(this.languageService.cancelApproveFailed, error);\r\n        return of(error);\r\n      }));\r\n  }\r\n  /**\r\n   * åæ¶å®¡æ¹(æ¯æä¸»è¡¨ãå­è¡¨)\r\n   * @param procInstId æµç¨å®ä¾Id\r\n   */\r\n  public cancelSubmit(procInstId: string): Observable<any> {\r\n    if (!procInstId) {\r\n      this.notifyService.warning(this.languageService.procInsIdRequired, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    return this.wfTaskHandlerService && this.wfTaskHandlerService.cancelSubmit({ procInstId: procInstId });\r\n  }\r\n  /**\r\n   * æ¥çæµç¨å¾\r\n   * @param procInstId æµç¨å®ä¾ID\r\n   */\r\n  viewProcess(procInstId: string) {\r\n    if (this.flowchartService) {\r\n      if (!procInstId) {\r\n        this.notifyService.warning(this.languageService.noProcessInstanceId, { hideTitle: true });\r\n        return;\r\n      }\r\n      return this.flowchartService.viewFlowChart(procInstId);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * è½¬æ¢éç½®å¤§å°å\r\n   * @param jsonObj Object\r\n   * @deprecated\r\n   */\r\n  private switchPrefixLetter(jsonObj: any, toUpper: boolean): any {\r\n    if (typeof (jsonObj) === 'object' && !!jsonObj) {\r\n      if (Array.isArray(jsonObj)) {\r\n        for (var i = 0; i < jsonObj.length; i++) {\r\n          this.switchPrefixLetter(jsonObj[i], toUpper);\r\n        }\r\n      } else {\r\n        for (const key of Object.keys(jsonObj)) {\r\n          var newKey = (toUpper ? key.substring(0, 1).toUpperCase() : key.substring(0, 1).toLowerCase()) + key.substring(1);\r\n          jsonObj[newKey] = jsonObj[key];\r\n          if (typeof jsonObj[key] === 'object') {\r\n            this.switchPrefixLetter(jsonObj[key], toUpper);\r\n          }\r\n          delete (jsonObj[key]);\r\n        }\r\n      }\r\n    }\r\n    return jsonObj;\r\n  }\r\n}\r\nexport { ApproveService };\r\n","import { Injectable, Injector, Optional } from '@angular/core';\r\nimport { EMPTY } from 'rxjs';\r\nimport { FormMessageService } from './form-message.service';\r\nimport { LanguageService } from './languag.service';\r\nimport { BefRepository } from '@farris/bef';\r\nimport { CommandContext, Entity, FrameContext } from '@farris/devkit';\r\nimport { CloudprintService, OutputOptions, SourceOptions, OutputType, FileType, SourceFilterOptions, PrintType } from '@gsp-svc/cloudprint';\r\nimport { FormNotifyService } from './form-notify.service';\r\n// tslint:disable: unified-signatures\r\n// tslint:disable: max-line-length\r\n/**\r\n * æå°æå¡\r\n * @Scope FrameComponent\r\n */\r\n@Injectable()\r\nclass PrintService {\r\n  /**\r\n   * å®ä½ä»åº\r\n   */\r\n  private repository: BefRepository<Entity>;\r\n\r\n  /**\r\n   * æé å½æ°\r\n   */\r\n  constructor(\r\n    private msgService: FormMessageService,\r\n    private languageService: LanguageService,\r\n    private printService: CloudprintService,\r\n    @Optional() private formNotifyService: FormNotifyService,\r\n  ) {\r\n  }\r\n\r\n  /**\r\n   * æå°åæ®\r\n   * @param beMetaId BEåæ°æ®æ è¯\r\n   * @param bizBillId ä¸å¡åæ®æ è¯\r\n   */\r\n  public printSingle(beMetaId: string, bizBillId: string) {\r\n    if (!bizBillId) {\r\n      // this.msgService.error(this.languageService.unallowEmptyBizBillId);\r\n      this.showWarning(this.languageService.unallowEmptyBizBillId);\r\n      return EMPTY;\r\n    }\r\n    return this.printArray(beMetaId, [bizBillId]);\r\n  }\r\n  /**\r\n   * æå°åæ®ï¼éè¿idæidsï¼\r\n   * @param beMetaId beåæ°æ®Id\r\n   * @param ids åæ®idæids\r\n   */\r\n  public printByIds(beMetaId: string, ids: string) {\r\n    if (!ids) {\r\n      // this.msgService.error(this.languageService.unallowEmptyBizBillId);\r\n      this.showWarning(this.languageService.unallowEmptyBizBillId);\r\n      return EMPTY;\r\n    }\r\n    const dataIds: Array<string> = ids.split(',').filter(item => item);\r\n    return this.printArray(beMetaId, dataIds);\r\n  }\r\n  /**\r\n   * æå°åæ®ï¼å¸¦ç»´åº¦ï¼\r\n   * @param beMetaId beåæ°æ®Id\r\n   * @param ids åæ®idæids\r\n   * @param dim1 ç»´åº¦1å¼\r\n   * @param dim2 ç»´åº¦2å¼\r\n   * @param billCategoryId åæ®ç±»åId\r\n   */\r\n  public printByIdsWithDimension(beMetaId: string, ids: string, dim1: string, dim2: string, billCategoryId?: string) {\r\n    if (!ids) {\r\n      // this.msgService.error(this.languageService.unallowEmptyBizBillId);\r\n      this.showWarning(this.languageService.unallowEmptyBizBillId);\r\n      return EMPTY;\r\n    }\r\n    const dataIds: Array<string> = ids.split(',').filter(item => item);\r\n    return this.printArray(beMetaId, dataIds, dim1, dim2, billCategoryId);\r\n  }\r\n  /**\r\n   * æå°å¤ä¸ªåæ®\r\n   * @param beMetaId BEåæ°æ®æ è¯\r\n   * @param dataIds ä¸å¡åæ®æ è¯æ°ç»\r\n   * @param dim1 ç»´åº¦1\r\n   * @param dim2 ç»´åº¦2\r\n   * @param billCategoryId ä¸å¡åæ®ç±»åId\r\n   */\r\n  public printArray(beMetaId: string, dataIds: string[], dim1?: any, dim2?: any, billCategoryId?: string) {\r\n    if (!dataIds || dataIds.length === 0) {\r\n      // this.msgService.error(this.languageService.unallowEmptyBizBillId);\r\n      this.showWarning(this.languageService.unallowEmptyBizBillId);\r\n      return EMPTY;\r\n    }\r\n    const sourceOptions: SourceOptions = this.buildSourceOptions({\r\n      dataIds: dataIds,\r\n      sourceId: beMetaId\r\n    });\r\n\r\n    const outputOptions: OutputOptions = this.buildOutputOptions();\r\n\r\n    if (typeof dim1 !== 'undefined') {\r\n      sourceOptions.FirstDimensionVal = dim1;\r\n    }\r\n    if (typeof dim2 !== 'undefined') {\r\n      sourceOptions.SecondDimensionVal = dim2;\r\n    }\r\n    if (typeof billCategoryId !== 'undefined') {\r\n      sourceOptions.billCategoryId = billCategoryId;\r\n    }\r\n    return this.printService.outputBEData(sourceOptions, outputOptions, 'tab');\r\n  }\r\n\r\n  /**\r\n   * æç§BEåæ°æ¹å¼æ¹éæå°åæ®\r\n   * @param beMetaId BEåæ°æ®æ è¯\r\n   * @param filterCondition è¿æ»¤æ¡ä»¶\r\n   * @param sortCondition æåºæ¡ä»¶\r\n   * @param includeChildData åå«å­è¡¨æ°æ®\r\n   */\r\n  public printMulti(beMetaId: string, filterCondition: string, sortCondition: string, includeChildData: boolean = true) {\r\n    const entryFilter = { 'isUsePagination': false, 'filterConditions': [], 'sortConditions': [], 'pagination': null };\r\n    if (filterCondition) {\r\n      // ç»ä¸çº æ­£æåä¸ä¸ªè¿æ»¤æ¡ä»¶çRelation\r\n      const filters = JSON.parse(filterCondition);\r\n      if (filters && filters.length > 0) {\r\n        filters[filters.length - 1].Relation = 0;\r\n      }\r\n      entryFilter.filterConditions = filters;\r\n    }\r\n\r\n    if (sortCondition) {\r\n      entryFilter.sortConditions = JSON.parse(sortCondition);\r\n    }\r\n    // sfo:SourceFilterOptions\r\n    const sourceFilterOptions: SourceFilterOptions = this.buildSourceFilterOptions({ sourceId: beMetaId, entryFilter, includeChildData });\r\n    const outputOptions: OutputOptions = this.buildOutputOptions();\r\n    return this.printService.outputBEDataWithFilter(sourceFilterOptions, outputOptions, 'tab');\r\n  }\r\n  /**\r\n   * æç§BEåæ°æ¹å¼æ¹éæå°åæ®(å¸¦ç»´åº¦)\r\n   * @param beMetaId BEåæ°æ®æ è¯\r\n   * @param filterCondition è¿æ»¤æ¡ä»¶\r\n   * @param sortCondition æåºæ¡ä»¶\r\n   * @param dim1 ç»´åº¦1value\r\n   * @param dim2 ç»´åº¦2value\r\n   * @param billCategoryId ä¸å¡åæ®ç±»åId\r\n   * @param includeChildData åå«å­è¡¨æ°æ®\r\n   */\r\n  public printMultiWithDimension(beMetaId: string, filterCondition: string, sortCondition: string, dim1: string, dim2: string, billCategoryId?: string, includeChildData: boolean = true) {\r\n    const entryFilter = { 'isUsePagination': false, 'filterConditions': [], 'sortConditions': [], 'pagination': null };\r\n    if (filterCondition) {\r\n      // ç»ä¸çº æ­£æåä¸ä¸ªè¿æ»¤æ¡ä»¶çRelation\r\n      const filters = JSON.parse(filterCondition);\r\n      if (filters && filters.length > 0) {\r\n        filters[filters.length - 1].Relation = 0;\r\n      }\r\n      entryFilter.filterConditions = filters;\r\n    }\r\n\r\n    if (sortCondition) {\r\n      entryFilter.sortConditions = JSON.parse(sortCondition);\r\n    }\r\n    const sfo: SourceFilterOptions = this.buildSourceFilterOptions({ sourceId: beMetaId, entryFilter, includeChildData });\r\n    if (typeof dim1 !== 'undefined') {\r\n      sfo.FirstDimensionVal = dim1;\r\n    }\r\n    if (typeof dim2 !== 'undefined') {\r\n      sfo.SecondDimensionVal = dim2;\r\n    }\r\n    if (typeof billCategoryId !== 'undefined') {\r\n      sfo.billCategoryId = billCategoryId;\r\n    }\r\n    const outputOptions: OutputOptions = this.buildOutputOptions();\r\n    return this.printService.outputBEDataWithFilter(sfo, outputOptions, 'tab');\r\n  }\r\n  /**\r\n   * æé SourceOptions\r\n   * @param options options\r\n   */\r\n  private buildSourceOptions(options: { dataIds: string[], sourceId: string, [prop: string]: any }): SourceOptions {\r\n    const so: SourceOptions = {\r\n      DataIds: options && options.dataIds || undefined,\r\n      SourceId: options && options.sourceId || undefined,\r\n      FirstDimensionVal: options && options.dim1 || undefined,\r\n      SecondDimensionVal: options && options.dim2 || undefined,\r\n      RetrieveParam: options && options.retrieveParam || undefined,\r\n      FormatId: options && options.formatId || undefined,\r\n      billCategoryId: options && options.billCategoryId || undefined,\r\n      ServiceUnit: options && options.serviceUnit || undefined,\r\n      currentPage: options && options.currentPage || undefined,\r\n      pageRowCount: options && options.pageRowCount || undefined,\r\n      queryType: options && options.queryType || undefined,\r\n      queryServiceId: options && options.queryServiceId || undefined,\r\n      queryParam: options && options.queryParam || undefined\r\n    };\r\n    return so;\r\n  }\r\n  /**\r\n   * æé OutputOptions\r\n   * @param options options\r\n   */\r\n  private buildOutputOptions(options?: { [prop: string]: any }): OutputOptions {\r\n    const oo: OutputOptions = {\r\n      OutputType: options && options.outputType || OutputType.PRINT,\r\n      FileType: options && options.fileType || FileType.Html5,\r\n      Path: options && options.path || undefined,\r\n      DeviceId: options && options.deviceId || undefined,\r\n      printJob: options && options.printJob || undefined,\r\n      printerName: options && options.printerName || undefined,\r\n      printSetting: options && options.printSetting || undefined,\r\n      printType: options && options.printType || PrintType.Form\r\n    };\r\n    return oo;\r\n  }\r\n  /**\r\n   * æé SourceFilterOptions\r\n   * @param options options\r\n   */\r\n  private buildSourceFilterOptions(options: { sourceId: string, [prop: string]: any }): SourceFilterOptions {\r\n    const entryFilter = { 'isUsePagination': false, 'filterConditions': [], 'sortConditions': [], 'pagination': null };\r\n    const sfo: SourceFilterOptions & { [prop: string]: any } = {\r\n      SourceId: options.sourceId,\r\n      EntityFilter: options && options.entryFilter || entryFilter,\r\n      FirstDimensionVal: options && options.dim1 || undefined,\r\n      SecondDimensionVal: options && options.dim2 || undefined,\r\n      FormatId: options && options.formatId || undefined,\r\n      ServiceUnit: options && options.serviceUnit || undefined,\r\n      billCategoryId: options && options.billCategoryId || undefined,\r\n      currentPage: options && options.currentPage || undefined,\r\n      pageRowCount: options && options.pageRowCount || undefined,\r\n      queryParam: options && options.queryParam || undefined,\r\n      queryServiceId: options && options.queryServiceId || undefined,\r\n      queryType: options && options.queryType || undefined,\r\n      includeChildData: options && options.hasOwnProperty('includeChildData') ? options.includeChildData : true\r\n    };\r\n    return sfo;\r\n  }\r\n  /**\r\n   * å±ç¤ºéè¯¯æ¶æ¯\r\n   * @param message éè¯¯æ¶æ¯\r\n   */\r\n  private showWarning(message: string) {\r\n    if (this.notifyService) {\r\n      this.notifyService.warning(message, { hideTitle: true });\r\n    } else if (this.msgService) {\r\n      this.msgService.error(message);\r\n    }\r\n  }\r\n  private get notifyService(): FormNotifyService | null {\r\n    if (this.formNotifyService) {\r\n      return this.formNotifyService;\r\n    } else if (this.injector) {\r\n      return this.injector.get<FormNotifyService>(FormNotifyService, null);\r\n    }\r\n    return null;\r\n  }\r\n  private get commandContext(): CommandContext | null {\r\n    return this['context'] || null;\r\n  }\r\n  private get frameContext(): FrameContext | null {\r\n    return this.commandContext && this.commandContext.frameContext || null;\r\n  }\r\n  private get injector(): Injector | null {\r\n    return this.frameContext && this.frameContext.injector || null;\r\n  }\r\n}\r\n\r\nexport { PrintService };\r\n","/**\r\n * éä»¶ä¿¡æ¯å®ä¹\r\n */\r\ninterface AttachmentInfo {\r\n\r\n  /**\r\n   * éä»¶id\r\n   */\r\n  attachmentId: string;\r\n\r\n  /**\r\n   * éä»¶åç§°\r\n   */\r\n  fileName: string;\r\n}\r\n\r\n\r\n/**\r\n * æå¡å¨ç«¯æéçéä»¶ä¿¡æ¯å®ä¹\r\n */\r\ninterface ServerAttachmentInfo {\r\n\r\n  /**\r\n   * è¡¨åè·¯å¾\r\n   */\r\n  NodeCodes: string[];\r\n\r\n  /**\r\n   * ä¸»é®è·¯å¾\r\n   */\r\n  HiretryIds: string[];\r\n\r\n  /**\r\n   * éä»¶idæ°ç»ï¼æ¹éæ°å¢æ¶ä½¿ç¨ï¼\r\n   */\r\n  AttachmentIds?: string[];\r\n\r\n  /**\r\n   * éä»¶idï¼æ´æ°æ¶ä½¿ç¨ï¼\r\n   */\r\n  AttachmentId?: string;\r\n}\r\n/**\r\n * éä»¶udtæåºå­æ®µ\r\n */\r\nconst ATTACHMENT_ORDER_FIELD = 'fileSortOrder';\r\n\r\nexport { AttachmentInfo, ServerAttachmentInfo, ATTACHMENT_ORDER_FIELD };\r\n","import { UploadFileInfo } from '@gsp-svc/formdoc-upload';\r\nimport { AttachmentInfo } from './types';\r\n\r\n/**\r\n * éä»¶ä¿¡æ¯å¤çå·¥å·ç±»\r\n */\r\nclass AttachmentUtil {\r\n\r\n  /**\r\n   * è½¬æ¢ä¸ºéä»¶ä¿¡æ¯æ°ç»\r\n   */\r\n  public static convertToAttachmentInfos(fileInfos: UploadFileInfo[]): AttachmentInfo[] {\r\n    if (!fileInfos) {\r\n      return [];\r\n    }\r\n    const attachmentInfos: AttachmentInfo[] = fileInfos.map((fileInfo: UploadFileInfo) => {\r\n      return this.convertToAttachmentInfo(fileInfo);\r\n    });\r\n    return attachmentInfos;\r\n  }\r\n\r\n  /**\r\n   * è½¬æ¢ä¸ºéä»¶ä¿¡æ¯\r\n   */\r\n  public static convertToAttachmentInfo(fileInfo: UploadFileInfo): AttachmentInfo {\r\n    const attachmentInfo: AttachmentInfo = {\r\n      attachmentId: fileInfo.metadataId,\r\n      fileName: fileInfo.fileName\r\n    };\r\n    return attachmentInfo;\r\n  }\r\n\r\n  /**\r\n   * è·åéä»¶åè¡¨ä¸­çç¬¬ä¸ä¸ªéä»¶\r\n   */\r\n  public static getFirstAttachmentInfo(attachmentInfos: AttachmentInfo[]) {\r\n    if (!attachmentInfos || attachmentInfos.length === 0) {\r\n      return;\r\n    }\r\n    const firstAttachmentInfo = attachmentInfos[0];\r\n    return firstAttachmentInfo;\r\n  }\r\n\r\n  /**\r\n   * æåéä»¶idæ°ç»\r\n   */\r\n  public static peekAttachmentIds(attachmentInfos: AttachmentInfo[]) {\r\n    if (!attachmentInfos) {\r\n      attachmentInfos = [];\r\n    }\r\n    const attachmentIds = attachmentInfos.map((attachmentInfo: AttachmentInfo) => {\r\n      return attachmentInfo.attachmentId;\r\n    });\r\n\r\n    return attachmentIds;\r\n  }\r\n\r\n}\r\n\r\nexport { AttachmentUtil };\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap, switchMap, map } from 'rxjs/operators';\r\nimport { FrameContext, Entity, BindingData, BindingPathConverter } from '@farris/devkit';\r\nimport { BefRepository, BefDataPathUtil, ResponseInfo } from '@farris/bef';\r\nimport { FormLoadingService } from '../form-loading/form-loading.service';\r\nimport { AttachmentInfo, ServerAttachmentInfo } from './types';\r\nimport { AttachmentUtil } from './attachment.util';\r\n\r\n/**\r\n * éä»¶è°ç¨\r\n */\r\n@Injectable()\r\nclass AttachmentDataService {\r\n\r\n  /**\r\n   * å®ä½ä»åº\r\n   */\r\n  private get repository(): BefRepository<Entity> {\r\n    return this.frameContext.repository as BefRepository<Entity>;\r\n  }\r\n\r\n  /**\r\n   * ç»å®æ°æ®\r\n   */\r\n  private get bindingData(): BindingData {\r\n    return this.frameContext.bindingData;\r\n  }\r\n\r\n  constructor(private frameContext: FrameContext, private loadingService: FormLoadingService) {\r\n  }\r\n\r\n  /**\r\n   * æ´æ°éä»¶ä¿¡æ¯\r\n   */\r\n  public updateRow(attachmentInfoFieldPath: string, attachmentInfo: AttachmentInfo): Observable<any> {\r\n    const restService = this.repository.restService;\r\n    const baseUri = restService.baseUri;\r\n    const updateUri = `${baseUri}/service/updateattachment`;\r\n    const serverAttachInfo = this.createUpdateAttachInfo(attachmentInfoFieldPath, attachmentInfo);\r\n    const body = {\r\n      updateAttachInfo: serverAttachInfo,\r\n      requestInfo: restService.buildRequestInfo()\r\n    };\r\n    const options = {\r\n      body: body\r\n    };\r\n    this.loadingService.show();\r\n    return restService.invoke(updateUri, 'PUT', null, options).pipe(\r\n      switchMap((responseInfo: ResponseInfo) => {\r\n        return this.syncAttachmentInfosToClient();\r\n      }),\r\n      tap(() => {\r\n        this.loadingService.hide();\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * éè¿å±æ§åæ´æ°éä»¶ä¿¡æ¯\r\n   * @param attachmentInfoFieldPath éä»¶å­æ®µ\r\n   * @param attachmentInfo éä»¶ä¿¡æ¯\r\n   */\r\n  public updateRowWithPropertyName(attachmentInfoFieldPath: string, attachmentInfo: AttachmentInfo): Observable<any> {\r\n    const restService = this.repository.restService;\r\n    const baseUri = restService.baseUri;\r\n    const updateUri = `${baseUri}/service/updateattachmentwithproptyname`;\r\n    const serverAttachInfo = this.createUpdateAttachInfo(attachmentInfoFieldPath, attachmentInfo);\r\n    const propertyName = attachmentInfoFieldPath.split('/').filter(p => p).pop();\r\n    const body = {\r\n      updateAttachInfo: serverAttachInfo,\r\n      propertyName,\r\n      requestInfo: restService.buildRequestInfo()\r\n    };\r\n    const options = {\r\n      body: body\r\n    };\r\n    this.loadingService.show();\r\n    return restService.invoke(updateUri, 'PUT', null, options).pipe(\r\n      switchMap((responseInfo: ResponseInfo) => {\r\n        return this.syncAttachmentInfosToClient();\r\n      }),\r\n      tap(() => {\r\n        this.loadingService.hide();\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * å é¤éä»¶\r\n   * @param attachmentInfoFieldPath \r\n   * @param attachmentInfo \r\n   * @returns \r\n   */\r\n  public removeAttachment(attachmentInfoFieldPath: string, attachmentInfo: AttachmentInfo) {\r\n    const restService = this.repository.restService;\r\n    const baseUri = restService.baseUri;\r\n    const updateUri = `${baseUri}/service/deleteattachment`;\r\n    const serverAttachInfo = this.createUpdateAttachInfo(attachmentInfoFieldPath, attachmentInfo);\r\n    const propertyName = attachmentInfoFieldPath.split('/').filter(p => p).pop();\r\n    const body = {\r\n      deleteAttachInfo: serverAttachInfo,\r\n      requestInfo: restService.buildRequestInfo(),\r\n      propertyName,\r\n    };\r\n    const options = {\r\n      body: body\r\n    };\r\n    this.loadingService.show();\r\n    return restService.invoke(updateUri, 'PUT', null, options).pipe(\r\n      switchMap((responseInfo: ResponseInfo) => {\r\n        return this.syncAttachmentInfosToClient();\r\n      }),\r\n      tap(() => {\r\n        this.loadingService.hide();\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * æ¹éåå»ºéä»¶è¡æ°æ®\r\n   */\r\n  public updateRows(attachmentInfoFieldPath: string, attachmentInfos: AttachmentInfo[]): Observable<any> {\r\n    const restService = this.repository.restService;\r\n    const baseUri = restService.baseUri;\r\n    const updateUri = `${baseUri}/service/batchuploadattachment`;\r\n    const serverAttachInfo = this.createBatchCreateAttachInfo(attachmentInfoFieldPath, attachmentInfos);\r\n    const isRootEntity = serverAttachInfo.NodeCodes.length === 0;\r\n\r\n    const body = {\r\n      batchUploadInfo: serverAttachInfo,\r\n      requestInfo: restService.buildRequestInfo()\r\n    };\r\n    const options = {\r\n      body: body\r\n    };\r\n    return restService.invoke(updateUri, 'PUT', null, options).pipe(\r\n      switchMap((responseInfo: ResponseInfo) => {\r\n        return this.appendAttachmentInfosToClient(responseInfo.returnValue, isRootEntity);\r\n      }),\r\n      tap(() => {\r\n        this.loadingService.hide();\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * æ¹éåå»ºéä»¶è¡æ°æ®\r\n   */\r\n  public updateRowsWithConfigs(attachmentInfoFieldPath: string, attachmentInfos: AttachmentInfo[], configs: { [prop: string]: any }): Observable<any> {\r\n    const restService = this.repository.restService;\r\n    const baseUri = restService.baseUri;\r\n    const updateUri = `${baseUri}/service/batchuploadattachment`;\r\n    const serverAttachInfo = this.createBatchCreateAttachInfo(attachmentInfoFieldPath, attachmentInfos);\r\n    // const isRootEntity = serverAttachInfo.NodeCodes.length === 0;\r\n\r\n    const body = {\r\n      batchUploadInfo: serverAttachInfo,\r\n      requestInfo: restService.buildRequestInfo()\r\n    };\r\n    const options = {\r\n      body: body\r\n    };\r\n    return restService.invoke(updateUri, 'PUT', null, options).pipe(\r\n      switchMap((responseInfo: ResponseInfo) => {\r\n        return this.appendAttachmentInfos(responseInfo.returnValue, configs);\r\n      }),\r\n      tap(() => {\r\n        this.loadingService.hide();\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * æ ¹æ®å±æ§åæ¹éåå»ºéä»¶è¡æ°æ®\r\n   */\r\n  public updateRowsWithPropertyName(attachmentInfoFieldPath: string, attachmentInfos: AttachmentInfo[]): Observable<any> {\r\n    const restService = this.repository.restService;\r\n    const baseUri = restService.baseUri;\r\n    const updateUri = `${baseUri}/service/batchuploadattachmentwithproptyname`;\r\n    const serverAttachInfo = this.createBatchCreateAttachInfo(attachmentInfoFieldPath, attachmentInfos);\r\n    const isRootEntity = serverAttachInfo.NodeCodes.length === 0;\r\n    const propertyName = attachmentInfoFieldPath.split('/').filter(p => p).pop();\r\n\r\n    const body = {\r\n      batchUploadInfo: serverAttachInfo,\r\n      propertyName,\r\n      requestInfo: restService.buildRequestInfo()\r\n    };\r\n    const options = {\r\n      body: body\r\n    };\r\n    return restService.invoke(updateUri, 'PUT', null, options).pipe(\r\n      switchMap((responseInfo: ResponseInfo) => {\r\n        return this.appendAttachmentInfosToClient(responseInfo.returnValue, isRootEntity);\r\n      }),\r\n      tap(() => {\r\n        this.loadingService.hide();\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * åå»ºæå¡å¨ç«¯éè¦çæ´æ°ä¿¡æ¯\r\n   */\r\n  private createUpdateAttachInfo(attachmentInfoFieldPath: string, attachmentInfo: AttachmentInfo): ServerAttachmentInfo {\r\n\r\n    const attachmentId = attachmentInfo.attachmentId;\r\n    const parentBindingPathArray = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);\r\n    parentBindingPathArray.pop();\r\n    const nodeCodes = BefDataPathUtil.convertToObjectCodes(parentBindingPathArray, this.bindingData);\r\n    const hiretryIds = BefDataPathUtil.convertToDataIdsForUpdate(parentBindingPathArray, this.bindingData);\r\n\r\n    const serverAttachInfo: ServerAttachmentInfo = {\r\n      NodeCodes: nodeCodes,\r\n      HiretryIds: hiretryIds,\r\n      AttachmentIds: [attachmentId],\r\n      AttachmentId: attachmentId\r\n    };\r\n\r\n    return serverAttachInfo;\r\n  }\r\n\r\n  /**\r\n   * åå»ºæå¡å¨ç«¯éè¦çæ¹éæ°å¢éä»¶ä¿¡æ¯\r\n   */\r\n  private createBatchCreateAttachInfo(attachmentInfoFieldPath: string, attachmentInfo: AttachmentInfo[]): ServerAttachmentInfo {\r\n    const attachmentIds = AttachmentUtil.peekAttachmentIds(attachmentInfo);\r\n\r\n    const parentBindingPathArray = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);\r\n    parentBindingPathArray.pop();\r\n    const nodeCodes = BefDataPathUtil.convertToObjectCodes(parentBindingPathArray, this.bindingData);\r\n    const hiretryIds = BefDataPathUtil.convertToDataIdsForAdd(parentBindingPathArray, this.bindingData);\r\n\r\n    const serverAttachInfo = {\r\n      NodeCodes: nodeCodes,\r\n      HiretryIds: hiretryIds,\r\n      AttachmentIds: attachmentIds,\r\n      AttachmentId: null\r\n    };\r\n\r\n    return serverAttachInfo;\r\n  }\r\n\r\n  /**\r\n   * åæ­¥æå¡å¨ç«¯ææ°ä¿¡æ¯å°å®¢æ·ç«¯\r\n   * @todo:\r\n   * 1ãä¸»å¯¹è±¡æ¹éæ°å¢æ¶ä¸æ¯æ\r\n   */\r\n  public syncAttachmentInfosToClient() {\r\n    const rootDataId = this.bindingData.list.currentId;\r\n    return this.repository.updateEntityById(rootDataId);\r\n  }\r\n\r\n  /**\r\n   * è¿½å ä¸»è¡¨æ°æ®å°å®¢æ·ç«¯\r\n   */\r\n  public appendAttachmentInfosToClient(listData: any[], isRootEntity: boolean): Observable<any[]> {\r\n    if (isRootEntity === true) {\r\n      const entities = this.repository.buildEntities(listData);\r\n      this.repository.entityCollection.addEntities(entities);\r\n      return of(listData);\r\n    } else {\r\n      const rootDataId = this.bindingData.list.currentId;\r\n      return this.repository.updateEntityById(rootDataId).pipe(\r\n        map(() => listData)\r\n      );\r\n    }\r\n  }\r\n  public appendAttachmentInfos(listData: any[], keyValues: { [prop: string]: any }): Observable<any[]> {\r\n    const entities = this.repository.buildEntities(listData);\r\n    this.repository.entityCollection.addEntities(entities);\r\n    // æ´æ°å®ä½ä½¿ä¹äº§çåæ´é\r\n    this.updateEntities(entities, keyValues);\r\n    return of(listData);\r\n  }\r\n  private updateEntities(entities: Entity[], keyValues: { [prop: string]: any }) {\r\n    entities.forEach((entity: Entity) => {\r\n      this.updateEntity(entity, keyValues);\r\n    });\r\n  }\r\n  private updateEntity(target: Entity, keyValues: { [prop: string]: any }) {\r\n    Object.keys(keyValues).forEach((key: string) => {\r\n      this.setValueByPath(target, key, keyValues[key]);\r\n    });\r\n  }\r\n  private setValueByPath(target: object, path: string, value: any) {\r\n    if (target) {\r\n      const paths = path.split('.');\r\n      if (paths.length <= 1) {\r\n        target[path] = value;\r\n      } else {\r\n        paths.slice(0, -1).reduce((prev, path) => {\r\n          if (!(prev.hasOwnProperty(path) || prev['__proto__'].hasOwnProperty(path))) {\r\n            prev[path] = {};\r\n          }\r\n          return prev[path];\r\n        }, target)[paths[paths.length - 1]] = value;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport { AttachmentDataService };\r\n","import { Injectable, InjectFlags, Optional } from '@angular/core';\r\nimport { Observable, from, of, empty, EMPTY } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { UploadDialogService, UploadFileInfo, UploadLimit, DownloadService, FileState } from '@gsp-svc/formdoc-upload';\r\nimport { FileViewerService } from '@gsp-svc/file-viewer';\r\nimport { FrameContext, BindingData, BindingPathConverter, BindingList, DataPathUtil, DataPathCreator, EntityList, Entity } from '@farris/devkit';\r\nimport { FormNotifyService } from '../form-notify.service';\r\nimport { AttachmentUtil } from './attachment.util';\r\nimport { AttachmentDataService } from './attachment-data.service';\r\nimport { LanguageService } from '../languag.service';\r\nimport { EntityService } from '../entity-services/index';\r\nimport { BefRepository } from '@farris/bef';\r\nimport { BasePathService } from '@farris/rtf';\r\n\r\n// tslint:disable: max-line-length\r\n/**\r\n * éä»¶æå¡\r\n */\r\n@Injectable()\r\nclass AttachmentService {\r\n  /**\r\n   * é»è®¤æ ¹ç®å½\r\n   */\r\n  private defaultRootDirId = '';\r\n\r\n  /**\r\n   * é»è®¤ç¶è·¯å¾\r\n   */\r\n  private get defaultParentDirName(): string {\r\n    return this.frameContext.bindingData.list.currentId;\r\n  }\r\n\r\n  /**\r\n   * ç»å®æ°æ®\r\n   */\r\n  private get bindingData(): BindingData {\r\n    return this.frameContext.bindingData;\r\n  }\r\n\r\n  /**\r\n   * å¤è¯­æå¡\r\n   */\r\n  private languageService: LanguageService;\r\n\r\n  /**\r\n   * éä»¶é¢è§æå¡\r\n   */\r\n  private fileViewerService: FileViewerService;\r\n\r\n  /**\r\n   * å®ä½æå¡\r\n   */\r\n  private entityService: EntityService;\r\n\r\n  /**\r\n   * æé å½æ°\r\n   */\r\n  constructor(\r\n    private frameContext: FrameContext,\r\n    private attachDataService: AttachmentDataService,\r\n    private notifyService: FormNotifyService,\r\n    private uploadDialogService: UploadDialogService,\r\n    @Optional() private downloadService: DownloadService\r\n  ) {\r\n    this.setLanguageService();\r\n    this.fileViewerService = this.frameContext.injector.get<FileViewerService>(FileViewerService, null, InjectFlags.Optional);\r\n    this.entityService = this.frameContext.injector.get<EntityService>(EntityService, null, InjectFlags.Optional);\r\n    if (!this.downloadService && typeof DownloadService !== 'undefined') {\r\n      this.downloadService = this.frameContext.injector.get<DownloadService>(DownloadService, null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®è¯­è¨æå¡\r\n   */\r\n  private setLanguageService() {\r\n    const injector = this.frameContext.injector;\r\n    this.languageService = injector.get<LanguageService>(LanguageService, null, InjectFlags.Optional);\r\n    if (!this.languageService) {\r\n      this.languageService = LanguageService.getInstance();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ä¸ä¼ åä¸ªæä»¶\r\n   * @param attachmentIdPath éä»¶åç å­æ®µçè·¯å¾ï¼å½¢å¦/attachInfo/attachmentIdï¼\r\n   * @param attachmentNamePath éä»¶åç§°å­æ®µçè·¯å¾\r\n   */\r\n  public uploadAndUpdateRow(attachmentInfoFieldPath: string, rootDirId?: string, parentDirName?: string, fileType?: string, id?: string): Observable<any> {\r\n    const rootId = rootDirId ? rootDirId : this.defaultRootDirId;\r\n    const formId = parentDirName ? parentDirName : this.defaultParentDirName;\r\n    if (!rootId || !formId) {\r\n      throw new Error('rootDirIdåparentDirNameä¸è½ä¸ºç©ºï¼è¯·å¡«å');\r\n    }\r\n\r\n    const uploadLimit: UploadLimit = new UploadLimit();\r\n    uploadLimit.fileCount = 1;\r\n    if (fileType) {\r\n      uploadLimit.fileType = fileType;\r\n    }\r\n    // è·åèçéä»¶idæ°ç»\r\n    const attachmentIdList = [];\r\n    let currentItem = null;\r\n    if (id) {\r\n      // ä¿®æ­£å½åè¡\r\n      const bindingList: BindingList = this.frameContext.bindingData.getList();\r\n      if (bindingList.currentId !== id) {\r\n        bindingList.setCurrentId(id, true, true);\r\n      }\r\n      // å¦ææå®äºidåè·åæå®idçè¡\r\n      currentItem = this.getSpecialRow(attachmentInfoFieldPath, id);\r\n    } else {\r\n      // æ²¡ææå®åä½¿ç¨å½åè¡ï¼å¯è½å­å¨å½åè¡åäºä»¶è¡ä¸ä¸è´çæåµï¼æ­¤æ¶åºè¯¥å¨å½ä»¤ä¸­ä¼ éidåæ°\r\n      currentItem = this.getCurrentRow(attachmentInfoFieldPath);\r\n    }\r\n    if (currentItem && currentItem.primaryKeyValue) {\r\n      const attachmentIds = this.getAttachmentIdsByPathAndDataIds(attachmentInfoFieldPath, [currentItem.primaryKeyValue]);\r\n      if (attachmentIds && attachmentIds.length > 0) {\r\n        attachmentIdList.push.apply(attachmentIdList, attachmentIds);\r\n      }\r\n    } else {\r\n      this.notifyService.warning(this.languageService.plsSelectUpdateRow, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n\r\n    const dialog$ = from(this.uploadDialogService.uploadFileWithLimit(formId, rootId, uploadLimit, attachmentIdList));\r\n    const result$ = dialog$.pipe(\r\n      switchMap((fileInfos: UploadFileInfo[]) => {\r\n        if (!fileInfos || fileInfos.length === 0) {\r\n          this.notifyService.warning(this.languageService.plsUploadFirst, { hideTitle: true });\r\n          return empty();\r\n        }\r\n        // è¿æ»¤åºstateä¸ºæ°å¢çéä»¶\r\n        fileInfos = fileInfos.filter((fileInfo: UploadFileInfo) => {\r\n          if (fileInfo.hasOwnProperty('state')) {\r\n            return fileInfo.state === FileState.New;\r\n          }\r\n          return true;\r\n        });\r\n        if (fileInfos.length === 0) {\r\n          return of(true);\r\n        }\r\n        // æ¯å¦ä¸ä¼ å¤æ­\r\n        const attachmentInfos = AttachmentUtil.convertToAttachmentInfos(fileInfos);\r\n        const firstAttachmentInfo = AttachmentUtil.getFirstAttachmentInfo(attachmentInfos);\r\n        return this.attachDataService.updateRow(attachmentInfoFieldPath, firstAttachmentInfo);\r\n      })\r\n    );\r\n\r\n    return result$;\r\n  }\r\n  /**\r\n   * ä¸ä¼ åä¸ªæä»¶ï¼æ¯æå¤åï¼\r\n   * @param attachmentInfoFieldPath éä»¶åç å­æ®µçè·¯å¾ï¼å½¢å¦/attachInfo/attachmentIdï¼\r\n   * @param rootDirId éä»¶å­å¨æ ¹ç®å½\r\n   * @param parentDirName éä»¶å­å¨ç®å½\r\n   * @param fileType æä»¶ç±»åï¼like .txt,.docx\r\n   */\r\n  public uploadAndUpdateRowWithPropertyName(attachmentInfoFieldPath: string, rootDirId?: string, parentDirName?: string, fileType?: string, id?: string): Observable<any> {\r\n    const rootId = rootDirId ? rootDirId : this.defaultRootDirId;\r\n    const formId = parentDirName ? parentDirName : this.defaultParentDirName;\r\n    if (!rootId || !formId) {\r\n      throw new Error('rootDirIdåparentDirNameä¸è½ä¸ºç©ºï¼è¯·å¡«å');\r\n    }\r\n\r\n    const uploadLimit: UploadLimit = new UploadLimit();\r\n    uploadLimit.fileCount = 1;\r\n    if (fileType) {\r\n      uploadLimit.fileType = fileType;\r\n    }\r\n\r\n    // è·åèçéä»¶idæ°ç»\r\n    const attachmentIdList = [];\r\n    let currentItem = null;\r\n    if (id) {\r\n      // ä¿®æ­£å½åè¡\r\n      const bindingList: BindingList = this.frameContext.bindingData.getList();\r\n      if (bindingList.currentId !== id) {\r\n        bindingList.setCurrentId(id, true, true);\r\n      }\r\n      // å¦ææå®äºidåè·åæå®idçè¡\r\n      currentItem = this.getSpecialRow(attachmentInfoFieldPath, id);\r\n    } else {\r\n      // æ²¡ææå®åä½¿ç¨å½åè¡ï¼å¯è½å­å¨å½åè¡åäºä»¶è¡ä¸ä¸è´çæåµï¼æ­¤æ¶åºè¯¥å¨å½ä»¤ä¸­ä¼ éidåæ°\r\n      currentItem = this.getCurrentRow(attachmentInfoFieldPath);\r\n    }\r\n    if (currentItem && currentItem.primaryKeyValue) {\r\n      const attachmentIds = this.getAttachmentIdsByPathAndDataIds(attachmentInfoFieldPath, [currentItem.primaryKeyValue]);\r\n      if (attachmentIds && attachmentIds.length > 0) {\r\n        attachmentIdList.push.apply(attachmentIdList, attachmentIds);\r\n      }\r\n    } else {\r\n      this.notifyService.warning(this.languageService.plsSelectUpdateRow, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n\r\n    const dialog$ = from(this.uploadDialogService.uploadFileWithLimit(formId, rootId, uploadLimit, attachmentIdList));\r\n    const result$ = dialog$.pipe(\r\n      switchMap((fileInfos: UploadFileInfo[]) => {\r\n        if (!fileInfos || fileInfos.length === 0) {\r\n          this.notifyService.warning(this.languageService.plsUploadFirst, { hideTitle: true });\r\n          return EMPTY;\r\n        }\r\n        // è¿æ»¤åºstateä¸ºæ°å¢çéä»¶\r\n        fileInfos = fileInfos.filter((fileInfo: UploadFileInfo) => {\r\n          if (fileInfo.hasOwnProperty('state')) {\r\n            return fileInfo.state === FileState.New;\r\n          }\r\n          return true;\r\n        });\r\n        if (fileInfos.length === 0) {\r\n          return of(true);\r\n        }\r\n        // æ¯å¦ä¸ä¼ å¤æ­\r\n        const attachmentInfos = AttachmentUtil.convertToAttachmentInfos(fileInfos);\r\n        const firstAttachmentInfo = AttachmentUtil.getFirstAttachmentInfo(attachmentInfos);\r\n        return this.attachDataService.updateRowWithPropertyName(attachmentInfoFieldPath, firstAttachmentInfo);\r\n      })\r\n    );\r\n\r\n    return result$;\r\n  }\r\n  /**\r\n   * ä¸ä¼ å¤ä¸ªæä»¶\r\n   */\r\n  public uploadAndBatchAddRows(attachmentInfoFieldPath: string, rootDirId?: string, parentDirName?: string, fileType?: string): Observable<any> {\r\n    const rootId = rootDirId ? rootDirId : this.defaultRootDirId;\r\n    const formId = parentDirName ? parentDirName : this.defaultParentDirName;\r\n    if (!rootId || !formId) {\r\n      throw new Error('rootDirIdåparentDirNameä¸è½ä¸ºç©ºï¼è¯·å¡«å');\r\n    }\r\n\r\n    const uploadLimit: UploadLimit = new UploadLimit();\r\n    if (fileType) {\r\n      uploadLimit.fileType = fileType;\r\n    }\r\n    const dialog$ = from(this.uploadDialogService.uploadFileWithLimit(formId, rootId, uploadLimit));\r\n    const result$ = dialog$.pipe(\r\n      switchMap((fileInfos: UploadFileInfo[]) => {\r\n        if (!fileInfos || fileInfos.length === 0) {\r\n          this.notifyService.warning(this.languageService.plsUploadFirst, { hideTitle: true });\r\n          return EMPTY;\r\n        }\r\n        // è¿æ»¤åºstateä¸ºæ°å¢çéä»¶\r\n        fileInfos = fileInfos.filter((fileInfo: UploadFileInfo) => {\r\n          if (fileInfo.hasOwnProperty('state')) {\r\n            return fileInfo.state === FileState.New;\r\n          }\r\n          return true;\r\n        });\r\n        if (fileInfos.length === 0) {\r\n          return of(true);\r\n        }\r\n        const attachmentInfos = AttachmentUtil.convertToAttachmentInfos(fileInfos);\r\n        return this.attachDataService.updateRows(attachmentInfoFieldPath, attachmentInfos);\r\n      })\r\n    );\r\n    return result$;\r\n  }\r\n  /**\r\n   * ä¸ä¼ å¤ä¸ªæä»¶\r\n   */\r\n  public uploadAndBatchAddRowsWithPropertyName(attachmentInfoFieldPath: string, rootDirId?: string, parentDirName?: string, fileType?: string, id?: string): Observable<any> {\r\n    const rootId = rootDirId ? rootDirId : this.defaultRootDirId;\r\n    const formId = parentDirName ? parentDirName : this.defaultParentDirName;\r\n    if (!rootId || !formId) {\r\n      throw new Error('rootDirIdåparentDirNameä¸è½ä¸ºç©ºï¼è¯·å¡«å');\r\n    }\r\n    const uploadLimit: UploadLimit = new UploadLimit();\r\n    if (fileType) {\r\n      uploadLimit.fileType = fileType;\r\n    }\r\n    if (id) {\r\n      // ä¿®æ­£å½åè¡\r\n      const bindingList: BindingList = this.frameContext.bindingData.getList();\r\n      if (bindingList.currentId !== id) {\r\n        bindingList.setCurrentId(id, true, true);\r\n      }\r\n    }\r\n    const dialog$ = from(this.uploadDialogService.uploadFileWithLimit(formId, rootId, uploadLimit));\r\n    const result$ = dialog$.pipe(\r\n      switchMap((fileInfos: UploadFileInfo[]) => {\r\n        if (!fileInfos || fileInfos.length === 0) {\r\n          this.notifyService.warning(this.languageService.plsUploadFirst, { hideTitle: true });\r\n          return EMPTY;\r\n        }\r\n        // è¿æ»¤åºstateä¸ºæ°å¢çéä»¶\r\n        fileInfos = fileInfos.filter((fileInfo: UploadFileInfo) => {\r\n          if (fileInfo.hasOwnProperty('state')) {\r\n            return fileInfo.state === FileState.New;\r\n          }\r\n          return true;\r\n        });\r\n        if (fileInfos.length === 0) {\r\n          return of(true);\r\n        }\r\n        const attachmentInfos = AttachmentUtil.convertToAttachmentInfos(fileInfos);\r\n        return this.attachDataService.updateRowsWithPropertyName(attachmentInfoFieldPath, attachmentInfos);\r\n      })\r\n    );\r\n    return result$;\r\n  }\r\n  /**\r\n   * ä¸è½½éä»¶ï¼æ ¹æ®éä»¶idï¼\r\n   */\r\n  public download(attachId: string, rootId?: string): any {\r\n    if (!attachId) {\r\n      this.notifyService.warning(this.languageService.plsSelectDownloadAtt, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    rootId = rootId || 'default-root';\r\n    const url = this.getDownloadUrl([attachId], rootId);\r\n    // let url = '';\r\n    // if (rootId) {\r\n    //   url = `/api/runtime/dfs/v1.0/formdoc/filecontent?metadataid=${attachId}&rootid=${rootId}`;\r\n    // } else {\r\n    //   url = `/api/runtime/dfs/v1.0/formdoc/download/${attachId}`;\r\n    // }\r\n    window.open(url);\r\n    return of(true);\r\n  }\r\n  /**\r\n   * æ¹éä¸è½½éä»¶ï¼æ ¹æ®éä»¶idæ°ç»ï¼\r\n   */\r\n  public batchDownload(attachIds: string[], rootId: string): any {\r\n    if (!attachIds || attachIds.length === 0) {\r\n      this.notifyService.warning(this.languageService.plsSelectDownloadAtt, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    // åªéæ©ä¸ä¸ªéä»¶æ¶æåä¸ªéä»¶ä¸è½½å¤ç\r\n    if (attachIds.length === 1) {\r\n      return this.download(attachIds[0], rootId);\r\n    }\r\n    // const attachIdsString = JSON.stringify(attachIds);\r\n    // const url = `/api/runtime/dfs/v1.0/formdoc/multiple/download?metadataidlist=${attachIdsString}&rootid=${rootId}`;\r\n    const url = this.getDownloadUrl(attachIds, rootId);\r\n    window.open(url);\r\n    return of(true);\r\n  }\r\n  /**\r\n   * è·åä¸è½½è·¯å¾\r\n   * @param metadataidlist éä»¶idæ°ç»\r\n   * @param rootId rootId\r\n   */\r\n  private getDownloadUrl(metadataidlist: Array<string>, rootId: string): string {\r\n    rootId = rootId || 'default-root';\r\n    if (this.downloadService) {\r\n      if (metadataidlist.length === 1) {\r\n        return this.downloadService.getDownloadUrl(metadataidlist[0], rootId);\r\n      } else {\r\n        const attachIdsString = JSON.stringify(metadataidlist);\r\n        return this.downloadService.getMultipleDownloadUrl(attachIdsString, rootId);\r\n      }\r\n    } else {\r\n      console.warn('å å®å¨é®é¢ï¼éä»¶ä¸è½½æä¾å®å¨æ ¡éªæºå¶ï¼éä»¶ä¸è½½åè½ééæ°ç¼è¯ã');\r\n      if (metadataidlist.length === 1) {\r\n        return BasePathService.convertPath(`/api/runtime/dfs/v1.0/formdoc/filecontent?metadataid=${metadataidlist[0]}&rootid=${rootId}`);\r\n      } else {\r\n        const attachIdsString = JSON.stringify(metadataidlist);\r\n        return BasePathService.convertPath(`/api/runtime/dfs/v1.0/formdoc/multiple/download?metadataidlist=${attachIdsString}&rootid=${rootId}`);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * ä¸è½½ï¼æ ¹æ®æ°æ®idï¼\r\n   */\r\n  public downloadByDataId(dataId: string, attachmentInfoFieldPath: string, rootId: string): Observable<any> {\r\n    if (!dataId) {\r\n      this.notifyService.warning(this.languageService.plsSelectDownloadAtt, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n\r\n    const dataIds = [dataId];\r\n    const attachIds = this.getAttachmentIdsByPathAndDataIds(attachmentInfoFieldPath, dataIds);\r\n    if (attachIds.length === 0) {\r\n      this.notifyService.warning(this.languageService.noDownloadAtt, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n\r\n    const attachId = attachIds[0];\r\n    return this.download(attachId);\r\n  }\r\n\r\n  /**\r\n   * æ¹éä¸è½½éä»¶\r\n   */\r\n  public batchDownloadByDataIds(dataIds: string[] | string, attachmentInfoFieldPath: string, rootId: string): Observable<any> {\r\n    if (typeof dataIds === 'string' && dataIds && dataIds.length > 0) {\r\n      dataIds = dataIds.split(',').filter(p => p);\r\n    }\r\n    if (!dataIds || Array.isArray(dataIds) === false || dataIds.length === 0) {\r\n      this.notifyService.warning(this.languageService.plsSelectDownloadAtt, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    const ids = [].concat(dataIds);\r\n    const attachIds = this.getAttachmentIdsByPathAndDataIds(attachmentInfoFieldPath, ids);\r\n    if (attachIds.length === 0) {\r\n      this.notifyService.warning(this.languageService.noDownloadAtt, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n\r\n    return this.batchDownload(attachIds, rootId);\r\n  }\r\n\r\n  /**\r\n   * æ ¹æ®éä»¶UDTå­æ®µçè·¯å¾é¢è§éä»¶\r\n   * @param attachmentInfoFieldPath éä»¶UDTå­æ®µpath\r\n   * @param rootDirId è·ç®å½id\r\n   * @param ids éä»¶id\r\n   */\r\n  public previewByAttachmentInfoFieldPath(attachmentInfoFieldPath: string, rootDirId: string, ids?: any) {\r\n    if (!attachmentInfoFieldPath || !rootDirId) {\r\n      throw new Error('attachmentInfoFieldPathårootDirIdä¸è½ä¸ºç©ºï¼è¯·å¡«å');\r\n    }\r\n    let attachIds = [];\r\n    let dataIds = [];\r\n    if (ids && ids.length > 0) {\r\n      if (typeof (ids) === 'string') {\r\n        dataIds.push(ids);\r\n      } else {\r\n        dataIds = ids;\r\n      }\r\n      attachIds = this.getAttachmentIdsByPathAndDataIds(attachmentInfoFieldPath, dataIds);\r\n    } else {\r\n      attachIds = this.getAttachmentIdsByPathAndDataIds(attachmentInfoFieldPath, null);\r\n    }\r\n    if (attachIds && attachIds.length === 0) {\r\n      this.notifyService.warning(this.languageService.noAttachment, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    return this.previewByAttachmentIds(attachIds, rootDirId);\r\n  }\r\n  /**\r\n   * æ ¹æ®éä»¶UDTå­æ®µçè·¯å¾é¢è§å½åè¡çéä»¶\r\n   * @param attachmentInfoFieldPath éä»¶UDTå­æ®µpath\r\n   * @param rootDirId æ ¹ç®å½id\r\n   */\r\n  public previewByAttachmentInfoFieldPathWithIndex(attachmentInfoFieldPath: string, rootDirId: string): Observable<any> {\r\n    if (!attachmentInfoFieldPath || !rootDirId) {\r\n      throw new Error('attachmentInfoFieldPathårootDirIdä¸è½ä¸ºç©ºï¼è¯·å¡«å');\r\n    }\r\n    const currentRow = this.getCurrentRow(attachmentInfoFieldPath);\r\n    const parentBindingPathArray = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);\r\n    const attachmentFieldName = parentBindingPathArray.pop();\r\n    if (!currentRow[attachmentFieldName] || !currentRow[attachmentFieldName]['attachmentId']) {\r\n      this.notifyService.warning(this.languageService.noAttachment, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    const attachIds = this.getAttachmentIdsByPathAndDataIds(attachmentInfoFieldPath, null);\r\n    if (attachIds && attachIds.length === 0) {\r\n      this.notifyService.warning(this.languageService.noAttachment, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    const attachmentId = this.getCurrentAttachmentId(attachmentInfoFieldPath);\r\n    if (!attachmentId) {\r\n      throw new Error('è¦é¢è§çéä»¶idä¸å­å¨ï¼è¯·ç¡®è®¤');\r\n    } else {\r\n      return this.previewFileListWithIndex(attachIds, rootDirId, attachmentId);\r\n    }\r\n  }\r\n  /**\r\n   * æ ¹æ®ç®å½é¢è§éä»¶\r\n   * @param subDirName ç¶ç®å½åç§°\r\n   * @param rootDirId æ ¹ç®å½id\r\n   */\r\n  public previewBySubDirName(subDirName: string, rootDirId: string): Observable<any> {\r\n    if (!subDirName || !rootDirId) {\r\n      throw new Error('subDirNameårootDirIdä¸è½ä¸ºç©ºï¼è¯·å¡«å');\r\n    }\r\n    const viewer$ = from(this.fileViewerService.viewerFormFile(subDirName, rootDirId));\r\n    return viewer$;\r\n  }\r\n  /**\r\n   * æ ¹æ®ç®å½é¢è§æå®ç´¢å¼çéä»¶\r\n   * @param attachmentInfoFieldPath éä»¶UDTå­æ®µpath\r\n   * @param subDirName å­ç®å½åç§°\r\n   * @param rootDirId æ ¹ç®å½id\r\n   */\r\n  public previewBySubDirNameWithIndex(attachmentInfoFieldPath: string, subDirName: string, rootDirId: string): Observable<any> {\r\n    if (!subDirName || !rootDirId) {\r\n      throw new Error('subDirNameårootDirIdä¸è½ä¸ºç©ºï¼è¯·å¡«å');\r\n    }\r\n    // const attachIds = this.getAttachmentIdsByPathAndDataIds(attachmentInfoFieldPath, null);\r\n    const attachmentId = this.getCurrentAttachmentId(attachmentInfoFieldPath);\r\n    if (!attachmentId) {\r\n      this.notifyService.warning(this.languageService.noAttachment, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    const viewer$ = from(this.fileViewerService.viewerFormFileWithIndex(subDirName, rootDirId, attachmentId));\r\n    return viewer$;\r\n  }\r\n  /**\r\n   * æ ¹æ®éä»¶idæ°ç»é¢è§éä»¶\r\n   * @param attachmentIds éä»¶idæ°ç»\r\n   * @param rootDirId æ ¹ç®å½id\r\n   */\r\n  public previewByAttachmentIds(attachmentIds: string[], rootDirId: string): Observable<any> {\r\n    const viewer$ = from(this.fileViewerService.viewerFileList(attachmentIds, rootDirId));\r\n    return viewer$;\r\n  }\r\n  /**\r\n   * æ ¹æ®éä»¶idæ°ç»é¢è§æå®ç´¢å¼çéä»¶\r\n   * @param attachmentIds éä»¶idæ°ç»\r\n   * @param rootDirId æ ¹ç®å½id\r\n   * @param attachmentId éä»¶Id\r\n   */\r\n  public previewFileListWithIndex(attachmentIds: string[], rootDirId: string, attachmentId: string) {\r\n    const viewer$ = from(this.fileViewerService.viewerFileListWithIndex(attachmentIds, rootDirId, attachmentId));\r\n    return viewer$;\r\n  }\r\n  /**\r\n   * çæçæ¬å·\r\n   * @param versions åå²çæ¬å·\r\n   * @description é»è®¤ç¼ç è§åv1.0 v2.0 ...\r\n   */\r\n  public genVersion(versions: string[]) {\r\n    if (!versions) {\r\n      versions = [];\r\n    }\r\n    const mainCode = versions.length + 1;\r\n    return `V${mainCode}.0`;\r\n  }\r\n  /**\r\n   * æ´æ°éä»¶çæ¬ä¿¡æ¯\r\n   * @param versionField éä»¶çæ¬å­æ®µ\r\n   * @param historyField æ¯å¦åå²çæ¬å­æ®µ\r\n   * @param attachmentFieldPath éä»¶udtå­æ®µè·¯å¾\r\n   */\r\n  public updateAttachmentVersion(versionField: string, historyField: string, attachmentFieldPath: string) {\r\n    /**\r\n     * éåææéä»¶è¡\r\n     * æ¾å°æææ²¡æéä»¶çæ¬çè¡\r\n     * éåè¿äºè¡\r\n     * éè¿æä»¶åå»æ¥æ¾ååçä¸æéä»¶çæ¬å·çè¡\r\n     * è¿äºè¡åå²çæ¬å­æ®µç½®ä¸ºtrue\r\n     * æ çæ¬å·çè¡ï¼çæ¬= ä¸è¡æ° + 1\r\n     *\r\n     */\r\n    const bindingPaths = attachmentFieldPath.split('/').filter(p => p);\r\n    // å¼¹åºéä»¶udtå­æ®µ\r\n    const attachmentField = bindingPaths.pop();\r\n    // è·åå°ææçéä»¶\r\n    const attachmentBindingList = this.frameContext.bindingData.getValue(bindingPaths) as BindingList;\r\n    const befRepository = this.frameContext.repository as BefRepository<any>;\r\n    const entityManager = befRepository.entityManager;\r\n    const dataPath = DataPathCreator.createByShortPathFromRoot(bindingPaths, entityManager, this.frameContext.bindingData);\r\n    const paths = dataPath.toArray().map((path: string) => {\r\n      if (path.startsWith('PropName:')) {\r\n        return path.split(':')[1];\r\n      } else {\r\n        return path;\r\n      }\r\n    });\r\n    if (attachmentBindingList) {\r\n      const attachments = attachmentBindingList.toJSON();\r\n      // åªå¤çæéä»¶çæåµ\r\n      if (attachments) {\r\n        const versionLessRows = attachments.filter(item => !item[versionField]);\r\n        versionLessRows.forEach(item => {\r\n          const fileName = item[attachmentField]['fileName'];\r\n          const versionedRows = attachments.filter(row => row[attachmentField]['fileName'] === fileName && row[versionField]);\r\n          paths.pop();\r\n          paths.push(`DataId:${item[attachmentBindingList.primaryKey]}`);\r\n          let entity = this.frameContext.repository.entityCollection.getEntityByPath(paths);\r\n          const version = this.genVersion(versionedRows);\r\n          entity[versionField] = version;\r\n          entity[historyField] = false;\r\n          // å¤çåå²è®°å½\r\n          versionedRows.forEach(row => {\r\n            paths.pop();\r\n            paths.push(`DataId:${row[attachmentBindingList.primaryKey]}`);\r\n            entity = this.frameContext.repository.entityCollection.getEntityByPath(paths);\r\n            entity[historyField] = true;\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n  public isAttachmentCanDelete(historyField: string, attachmentFieldPath: string) {\r\n    const bindingPaths = attachmentFieldPath.split('/').filter(p => p);\r\n    // å¼¹åºéä»¶udtå­æ®µ\r\n    bindingPaths.pop();\r\n    const attachmentBindingList = this.frameContext.bindingData.getValue(bindingPaths) as BindingList;\r\n    const bindingObject = attachmentBindingList.currentItem;\r\n    if (bindingObject[historyField] === true) {\r\n      this.notifyService.warning(this.languageService.historyAttachment, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n  }\r\n  public updateAttachmentHistory(versionField: string, historyField: string, attachmentFieldPath: string) {\r\n    const bindingPaths = attachmentFieldPath.split('/').filter(p => p);\r\n    // å¼¹åºéä»¶udtå­æ®µ\r\n    const attachmentField = bindingPaths.pop();\r\n    // è·åå°ææçéä»¶\r\n    const attachmentBindingList = this.frameContext.bindingData.getValue(bindingPaths) as BindingList;\r\n    // const befRepository = this.frameContext.repository as BefRepository<any>;\r\n    // const entityManager = befRepository.entityManager;\r\n    if (attachmentBindingList) {\r\n      const attachments = attachmentBindingList.toJSON();\r\n      const versionedRows = attachments.filter(item => item[versionField]);\r\n      const fileNameMap = new Map<string, Array<any>>();\r\n      const befRepository = this.frameContext.repository as BefRepository<any>;\r\n      const entityManager = befRepository.entityManager;\r\n      const dataPath = DataPathCreator.createByShortPathFromRoot(bindingPaths, entityManager, this.frameContext.bindingData);\r\n      const paths = dataPath.toArray().map((path: string) => {\r\n        if (path.startsWith('PropName:')) {\r\n          return path.split(':')[1];\r\n        } else {\r\n          return path;\r\n        }\r\n      });\r\n      versionedRows.forEach(item => {\r\n        const fileName = item[attachmentField]['fileName'];\r\n        if (fileNameMap.has(fileName)) {\r\n          fileNameMap.get(fileName).push(item);\r\n        } else {\r\n          fileNameMap.set(fileName, [item]);\r\n        }\r\n      });\r\n      Array.from(fileNameMap.values()).forEach((array: Array<any>) => {\r\n        array.sort((x, y) => {\r\n          const xVersion = parseInt(x[versionField].replace(/[a-zA-Z\\.]/g, ''));\r\n          const yVersion = parseInt(y[versionField].replace(/[a-zA-Z\\.]/g, ''));\r\n          return yVersion - xVersion;\r\n        });\r\n        const row = array[0];\r\n        paths.pop();\r\n        paths.push(`DataId:${row[attachmentBindingList.primaryKey]}`);\r\n        const entity = this.frameContext.repository.entityCollection.getEntityByPath(paths);\r\n        entity[historyField] = false;\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * å é¤éä»¶\r\n   * @param attachmentInfoFieldPath éä»¶udtå­æ®µè·¯å¾\r\n   * @param id æ°æ®id\r\n   * @param rootDirId æ ¹ç®å½\r\n   * @returns\r\n   */\r\n  public removeAttachment(attachmentInfoFieldPath: string, id: string, rootDirId: string): Observable<any> {\r\n    const rootId = rootDirId;\r\n    if (!rootId) {\r\n      throw new Error('rootDirIdåparentDirNameä¸è½ä¸ºç©ºï¼è¯·å¡«å');\r\n    }\r\n    const dataIds = [id];\r\n    const attachIds = this.getAttachmentIdsByPathAndDataIds(attachmentInfoFieldPath, dataIds);\r\n    if (attachIds.length === 0) {\r\n      this.notifyService.warning(this.languageService.plsSelectRemoveAtt, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    const attachmentId = attachIds[0];\r\n    return this.attachDataService.removeAttachment(attachmentInfoFieldPath, { attachmentId, fileName: null });\r\n  }\r\n  /**\r\n   * è·åå½åè§å¾æ¨¡åå½åè¡çéä»¶id\r\n   * @param attachmentInfoFieldPath éä»¶udtå­æ®µ\r\n   */\r\n  private getCurrentAttachmentId(attachmentInfoFieldPath: string) {\r\n    const parentBindingPathArray = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);\r\n    const attachmentFieldName = parentBindingPathArray.pop();\r\n    const bindingList: BindingList = this.frameContext.bindingData.getValue(parentBindingPathArray) as BindingList;\r\n    const currentItem = bindingList.currentItem;\r\n    if (currentItem && currentItem.primaryKeyValue) {\r\n      return currentItem[attachmentFieldName] && currentItem[attachmentFieldName]['attachmentId'] || null;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  /**\r\n   * è·åå½åè¡\r\n   * @param attachmentInfoFieldPath udtå­æ®µ\r\n   */\r\n  private getCurrentRow(attachmentInfoFieldPath: string) {\r\n    const parentBindingPathArray = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);\r\n    parentBindingPathArray.pop();\r\n    const bindingList: BindingList = this.frameContext.bindingData.getValue(parentBindingPathArray) as BindingList;\r\n    const currentItem = bindingList && bindingList.currentItem;\r\n    return currentItem;\r\n  }\r\n  /**\r\n   * è·åæå®éä»¶ä¿¡æ¯è¡¨çæå®è¡\r\n   * @param attachmentInfoFieldPath\r\n   * @param primaryValue\r\n   * @returns\r\n   */\r\n  private getSpecialRow(attachmentInfoFieldPath: string, primaryValue: string) {\r\n    const parentBindingPathArray = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);\r\n    parentBindingPathArray.pop();\r\n    const bindingList: BindingList = this.frameContext.bindingData.getValue(parentBindingPathArray) as BindingList;\r\n    const currentItem = bindingList && bindingList.findById(primaryValue);\r\n    return currentItem;\r\n  }\r\n  /**\r\n   * è·ådataIdså¯¹åºEntityä¸çéä»¶idæ°ç»\r\n   */\r\n  private getAttachmentIdsByPathAndDataIds(attachmentInfoFieldPath: string, dataIds?: string[]): string[] {\r\n\r\n    // è§£æè·¯å¾\r\n    const parentBindingPathArray = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);\r\n    const attachmentFieldName = parentBindingPathArray.pop();\r\n\r\n    // è·åéä»¶æå¨å®ä½çæ°æ®åè¡¨ï¼ä¸ä¼ édataIdsåæ°ï¼åè¿åå¨é¨\r\n    const entityListData = this.entityService.getEntityListData(parentBindingPathArray);\r\n    let filteredEntityListData = [];\r\n    if (dataIds && Array.isArray(dataIds) === true) {\r\n      filteredEntityListData = entityListData.filter((entityData: any) => {\r\n        return dataIds.indexOf(entityData.id) > -1;\r\n      });\r\n    } else {\r\n      filteredEntityListData = entityListData;\r\n    }\r\n\r\n    // è½¬æ¢ä¸ºéä»¶Idæ°ç»\r\n    const attachmentIds = [];\r\n    filteredEntityListData.forEach((entityData: any) => {\r\n      if (entityData[attachmentFieldName]) {\r\n        const attachmentId = entityData[attachmentFieldName]['attachmentId'];\r\n        if (attachmentId) {\r\n          attachmentIds.push(attachmentId);\r\n        }\r\n      }\r\n    });\r\n\r\n    return attachmentIds;\r\n  }\r\n}\r\n\r\nexport { AttachmentService };\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { Observable, forkJoin, Subject } from 'rxjs';\r\nimport { FUploadFileExtend } from '@farris/extend-file-upload';\r\nimport { FrameContext, CommandContext, BindingPathConverter, BindingList, BindingObject } from '@farris/devkit';\r\nimport { FormNotifyService } from '../form-notify.service';\r\nimport { AttachmentInfo, ATTACHMENT_ORDER_FIELD } from './types';\r\nimport { AttachmentDataService } from './attachment-data.service';\r\nimport { LanguageService } from '../languag.service';\r\nimport { EntityService } from '../entity-services/index';\r\nimport { ListDataService, SubListDataService } from '../data-services/index';\r\nimport { FormLoadingService } from '../form-loading/form-loading.service';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\n\r\n/**\r\n * éä»¶ä¸ä¼ \r\n * @summary\r\n * fileExtendï¼å½åæä»¶ä¸ä¼ æé¢è§ç»ä»¶ä¼ éè¿æ¥çæ°æ®ï¼\r\n * fileExtendFieldPathï¼å½åéä»¶UDTçå­æ®µè·¯å¾ï¼\r\n * attachmentInfoï¼å½åéä»¶UDTæéçä¿¡æ¯ï¼\r\n */\r\n@Injectable()\r\nclass FileService {\r\n  private subject: Subject<{ fileInfoFieldPath: string, configs: string }>;\r\n  private attachmentInfos: AttachmentInfo[];\r\n  /**\r\n   * æé å½æ°\r\n   */\r\n  constructor(\r\n    private frameContext: FrameContext,\r\n    private attachDataService: AttachmentDataService,\r\n    private entityService: EntityService,\r\n    private subListDataService: SubListDataService,\r\n    private notifyService: FormNotifyService,\r\n    private languageService: LanguageService,\r\n    private listDataService: ListDataService,\r\n    @Optional() private formLoadingService: FormLoadingService\r\n  ) {\r\n    this.subject = new Subject<{ fileInfoFieldPath: string, configs: string }>();\r\n    this.subject.pipe(debounceTime(500)).subscribe((data: { fileInfoFieldPath: string, configs: string }) => {\r\n      this.process(data.fileInfoFieldPath, data.configs);\r\n    });\r\n    this.attachmentInfos = [];\r\n  }\r\n\r\n  // #region ä¸ä¼ æä»¶\r\n\r\n  /**\r\n   * æ¹éæ·»å éä»¶è¡\r\n   */\r\n  public addFileRows(fileInfoFieldPath: string) {\r\n    const attachmentInfos = this.getAttachmentInfosToAddFromContext();\r\n    if (attachmentInfos.length === 0) {\r\n      this.notifyService.info('è¯·åä¸ä¼ éä»¶');\r\n    }\r\n    return this.attachDataService.updateRows(fileInfoFieldPath, attachmentInfos);\r\n  }\r\n  /**\r\n   * æ¹éæ·»å å¸¦éä»¶ç±»åçéä»¶è¡\r\n   * @param fileInfoFieldPath éä»¶udtå­æ®µ\r\n   * @param configs éä»¶æ©å±ä¿¡æ¯éç½® \r\n   * @description configséç½®å¦{\"billId\":\"{UISTATE~/root/billId}\",\"rowId\":\"{UISTATE~/root/rowId}\",\"attachmentType\":\"xueli\"}\r\n   */\r\n  public addFileRowsWithConfigs(fileInfoFieldPath: string, configs: string) {\r\n    const attachmentInfos = this.getAttachmentInfosToAddFromContext();\r\n    if (attachmentInfos.length === 0) {\r\n      this.notifyService.info('è¯·åä¸ä¼ éä»¶');\r\n    }\r\n    // let mapFields = null;\r\n    // if (typeof configs === 'string') {\r\n    //   // å»æé¦å°¾ç©ºæ ¼\r\n    //   configs = configs.trim();\r\n    // }\r\n    // if (configs.startsWith('{') && configs.endsWith('}')) {\r\n    //   try {\r\n    //     mapFields = JSON.parse(configs);\r\n    //   } catch {\r\n    //     throw new Error('éä»¶æ©å±ä¿¡æ¯éç½®ä¸æ¯åæ³çjsonå­ç¬¦ä¸²ã');\r\n    //   }\r\n    // } else {\r\n    //   throw new Error('éä»¶æ©å±ä¿¡æ¯éç½®ä¸æ¯åæ³çjsonå­ç¬¦ä¸²ã');\r\n    // }\r\n    this.attachmentInfos = this.attachmentInfos.concat(attachmentInfos);\r\n    this.subject.next({ fileInfoFieldPath, configs });\r\n    //return this.attachDataService.updateRowsWithConfigs(fileInfoFieldPath, attachmentInfos, mapFields);\r\n  }\r\n  private process(fileInfoFieldPath: string, configs: string) {\r\n    if (this.attachmentInfos && this.attachmentInfos.length > 0) {\r\n      const attachmentInfos = this.attachmentInfos.concat([]);\r\n      let mapFields = null;\r\n      if (typeof configs === 'string') {\r\n        // å»æé¦å°¾ç©ºæ ¼\r\n        configs = configs.trim();\r\n      }\r\n      if (configs.startsWith('{') && configs.endsWith('}')) {\r\n        try {\r\n          mapFields = JSON.parse(configs);\r\n        } catch {\r\n          throw new Error('éä»¶æ©å±ä¿¡æ¯éç½®ä¸æ¯åæ³çjsonå­ç¬¦ä¸²ã');\r\n        }\r\n      } else {\r\n        throw new Error('éä»¶æ©å±ä¿¡æ¯éç½®ä¸æ¯åæ³çjsonå­ç¬¦ä¸²ã');\r\n      }\r\n      this.attachDataService.updateRowsWithConfigs(fileInfoFieldPath, attachmentInfos, mapFields).pipe(\r\n        tap(() => {\r\n          this.attachmentInfos = this.attachmentInfos.filter(item => !attachmentInfos.find(attachmentInfo => attachmentInfo.attachmentId === item.attachmentId));\r\n          if (this.attachmentInfos.length > 0) {\r\n            this.process(fileInfoFieldPath, configs);\r\n          }\r\n        })\r\n      ).subscribe();\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * è·åè¦æ·»å çéä»¶ä¿¡æ¯æ°ç»\r\n   */\r\n  private getAttachmentInfosToAddFromContext(): AttachmentInfo[] {\r\n    const fileExtends = this.getFileExtendsFromContext();\r\n    const attachmentInfos = this.convertToAttachmentInfos(fileExtends);\r\n    return attachmentInfos;\r\n  }\r\n\r\n  /**\r\n   * å°éä»¶ä¸ä¼ ç»ä»¶è¿åçéä»¶ä¿¡æ¯è½¬æ¢ä¸ºæå¡å¨ç«¯éè¦çæ ¼å¼\r\n   */\r\n  private convertToAttachmentInfos(fileExtends: FUploadFileExtend[]): AttachmentInfo[] {\r\n    if (!fileExtends) {\r\n      return [];\r\n    }\r\n\r\n    const attachmentInfos: AttachmentInfo[] = [];\r\n    fileExtends.forEach((fUploadOutPut: FUploadFileExtend) => {\r\n      const attachmentInfo: AttachmentInfo = {\r\n        attachmentId: fUploadOutPut.extend.metadataId,\r\n        fileName: fUploadOutPut.extend.fileName,\r\n      };\r\n      attachmentInfos.push(attachmentInfo);\r\n    });\r\n    return attachmentInfos;\r\n  }\r\n\r\n  // #endregion\r\n\r\n\r\n  // #region å é¤æä»¶\r\n\r\n  /**\r\n   * å é¤éä»¶è¡\r\n   */\r\n  public removeFileRows(fileInfoFieldPath: string): Observable<any> {\r\n    const dataIds = this.getDataIdsToRemoveFromContext(fileInfoFieldPath);\r\n    if (dataIds.length === 0) {\r\n      this.notifyService.info('è¯·éæ©è¦å é¤çéä»¶');\r\n    }\r\n    const isSublist = fileInfoFieldPath.split('/').filter(p => p).length >= 2;\r\n    const removeObservables: Observable<any>[] = [];\r\n    if (isSublist) {\r\n      dataIds.forEach((dataId: string) => {\r\n        let removeObservable;\r\n        removeObservable = this.subListDataService.removeWithoutConfirm(dataId);\r\n        removeObservables.push(removeObservable);\r\n      });\r\n      return forkJoin(removeObservables);\r\n    } else {\r\n      return this.listDataService.removeRows(dataIds, false, null, false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è·åè¦å é¤çæ°æ®\r\n   */\r\n  private getDataIdsToRemoveFromContext(fileExtendFieldPath: string): string[] {\r\n\r\n    // ä»ä¸ä¸æä¸­è·åè¦å¤ççéä»¶ä¿¡æ¯æ°ç»\r\n    const fileExtends = this.getFileExtendsFromContext();\r\n\r\n    // å°éä»¶æ°ç»è½¬æ¢ä¸ºå¯¹åºçæ°æ®id\r\n    const dataIds: string[] = [];\r\n    fileExtends.forEach((fileExtend: FUploadFileExtend) => {\r\n\r\n      // ä¸ä¼ å é¤åé¢è§å é¤ä¼ éè¿æ¥çfileIdçkeyå¯è½ä¸ä¸è´ï¼è¦åå¼å®¹\r\n      const fileId = fileExtend.extend.metadataId;\r\n      const dataId = this.convertFileIdToDataId(fileId, fileExtendFieldPath);\r\n      dataIds.push(dataId);\r\n    });\r\n    return dataIds;\r\n  }\r\n\r\n  /**\r\n   * æ ¹æ®è·¯å¾è·åéä»¶å­æ®µå¼æ°ç»\r\n   * @param fieldPath å­æ®µè·¯å¾\r\n   */\r\n  private convertFileIdToDataId(fileId: string, fileExtendFieldPath: string): string {\r\n\r\n    // è§£æè·¯å¾\r\n    const fileBindingPath = BindingPathConverter.toBindingPathArray(fileExtendFieldPath);\r\n    const fileFieldName = fileBindingPath.pop();\r\n    const fileListBindingPath = fileBindingPath;\r\n\r\n    // è·åéä»¶idæ°ç»\r\n    const entityListData = this.entityService.getEntityListData(fileListBindingPath);\r\n    const targetEntityData = entityListData.find((entityData: any) => {\r\n      if (entityData[fileFieldName]) {\r\n        const attachmentId = entityData[fileFieldName]['attachmentId'];\r\n        if (attachmentId === fileId) {\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n\r\n    return targetEntityData.id;\r\n  }\r\n\r\n  // #endregion\r\n  //#region æä»¶æåº\r\n  /**\r\n   * æ´æ°éä»¶æåº\r\n   * @param attachmentInfoFieldPath éä»¶udtå­æ®µè·¯å¾\r\n   * @param ids éä»¶æåºåçéä»¶idæ°ç»\r\n   */\r\n  public updateOrder(attachmentInfoFieldPath: string, ids: string[]) {\r\n    if (!attachmentInfoFieldPath) {\r\n      throw new Error('éä»¶udtå­æ®µè·¯å¾åæ°ä¸è½ä¸ºç©º');\r\n    }\r\n    // æ¯æä»ä»£ç ä¸­ç´æ¥è°ç¨ï¼å¦æåæ°ä¸­ä¼ éäºidsåä½¿ç¨ï¼å¦åä½¿ç¨å½ä»¤ä¸ä¸æä¸­çäºä»¶åæ°\r\n    if (!ids) {\r\n      // è·åäºä»¶åæ°\r\n      const commandContext = this['context'] as CommandContext;\r\n      // ä¸ç»ä»¶çº¦å®äºä»¶åæ°ä¸ºæ°æ®ä¸»é®æ°ç»\r\n      ids = commandContext && commandContext.eventParam && commandContext.eventParam.data;\r\n    }\r\n    // å¯¹æ¶éçä¸»é®æ°ç»è¿è¡å¤æ­\r\n    if (!ids || !Array.isArray(ids)) {\r\n      return;\r\n    }\r\n    // å½åå½ä»¤æå¨ç»ä»¶çç»å®æ°æ®\r\n    const bindingList: BindingList = this.frameContext.bindingData.getList();\r\n    // æ ç»å®æ°æ®æ¶ä¸å¤ç\r\n    if (!bindingList || bindingList.length < 1) {\r\n      return;\r\n    }\r\n    // ç»ä¸è·åéä»¶udtä¿¡æ¯\r\n    const parentBindingPathArray = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);\r\n    const attachmentField = parentBindingPathArray.pop();\r\n    // åºç°udtå­æ®µä¸å­å¨çæåµï¼è¯´æå½ä»¤ä¸­éä»¶udtå­æ®µéç½®éè¯¯ævoä¸­æ²¡æéä»¶udtãæ§å¶å¨ä¸å¼å®¹éè¯¯ï¼æ­¤å¤å¤æ­åªä¸ºé»æ­¢åç»­çéå\r\n    if (!attachmentField) {\r\n      throw new Error('æ æ³è·åéä»¶udtå­æ®µï¼è¯·ç¡®è®¤å½ä»¤ä¸­éä»¶udtå­æ®µè·¯å¾éç½®æ­£ç¡®ï¼ä¸è§å¾æ¨¡åä¸­å­å¨éä»¶udtå­æ®µ');\r\n    }\r\n    const data = bindingList.toJSON();\r\n    // æ´æ°ç»å®æ°æ®ä¸­éä»¶udtå­æ®µä¸­æåºå­æ®µçå¼,ä»æ´æ°æéä»¶çè¡\r\n    ids.forEach((id: string, index: number) => {\r\n      const item = data.find(item => item && item[attachmentField] && item[attachmentField]['attachmentId'] === id);\r\n      const primaryKeyValue = item && item.id;\r\n      if (!primaryKeyValue) {\r\n        return;\r\n      }\r\n      const bindingObject = bindingList.findById(primaryKeyValue);\r\n      if (bindingObject) {\r\n        // éä»¶udtå¯¹è±¡\r\n        const attachment = bindingObject[attachmentField] as BindingObject;\r\n        if (attachment) {\r\n          // è·åæ§å¼\r\n          const order = attachment.getValue(ATTACHMENT_ORDER_FIELD);\r\n          if (order !== index) {\r\n            // æ´æ°æåº\r\n            attachment.setValue(ATTACHMENT_ORDER_FIELD, index, true, true);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  //#endregion\r\n\r\n  // #region å¶ä»å·¥å·æ¹æ³\r\n\r\n  /**\r\n   * ä»ä¸ä¸æä¸­è·åè¦å¤ççéä»¶ä¿¡æ¯æ°ç»\r\n   * @summary\r\n   * ä¸ºäºç»ä¸åä¸ªåå¤ä¸ªéä»¶çå¤çæ¹å¼ï¼ç»ä¸åè£ä¸ºæ°ç»\r\n   */\r\n  private getFileExtendsFromContext(): FUploadFileExtend[] {\r\n\r\n    const commandContext = this['context'] as CommandContext;\r\n    const eventParam = commandContext.eventParam;\r\n    if (!eventParam) {\r\n      return [];\r\n    }\r\n\r\n    let fileExtends: any[];\r\n    if (Array.isArray(eventParam) === false) {\r\n      fileExtends = [eventParam];\r\n    } else {\r\n      fileExtends = eventParam.concat([]);\r\n    }\r\n\r\n    return fileExtends as FUploadFileExtend[];\r\n  }\r\n  // #endregion\r\n}\r\n\r\nexport { FileService };\r\n","import { Injectable, ComponentFactoryResolver, ReflectiveInjector, Provider, ComponentRef, InjectFlags, NgModuleFactory, Injector, Optional, forwardRef, NgModuleRef } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from '@farris/ui-modal';\r\nimport { FarrisFormService } from './farris-form.service';\r\nimport { FrameContext, FrameComponent, BindingList } from '@farris/devkit';\r\nimport { of, Observable, Subject } from 'rxjs';\r\nimport { LanguageService } from './languag.service';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { INSIDE_DIALOG_TOKEN, MODAL_REF } from './types';\r\n\r\ndeclare const System: any;\r\n/**\r\n * å¼¹çªæå¡\r\n * @scope FormModule\r\n */\r\n@Injectable()\r\nclass DialogService {\r\n  private _providers: Provider[] = [];\r\n  /**\r\n   * å¤é¨å¼ç¨\r\n   */\r\n  private refs: any = {};\r\n  private languageService: LanguageService;\r\n  private modalRef: any;\r\n  private modals: any = {};\r\n\r\n  constructor(\r\n    private modalService: BsModalService,\r\n    private farrisFormService: FarrisFormService,\r\n    private _componentFactoryResolver: ComponentFactoryResolver,\r\n    private frameContext?: FrameContext,\r\n    @Optional() private injector?: Injector\r\n  ) {\r\n    this.setLanguageService();\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®è¯­è¨æå¡\r\n   */\r\n  private setLanguageService() {\r\n    // FrameContextä¸ä¸å®å­å¨ï¼ä¸è½ç´æ¥ç¨\r\n    const frameContext = this.getFrameContext();\r\n    if (frameContext) {\r\n      const injector = this.frameContext.injector;\r\n      this.languageService = injector.get<LanguageService>(LanguageService, null, InjectFlags.Optional);\r\n    }\r\n\r\n    if (!this.languageService) {\r\n      this.languageService = LanguageService.getInstance();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * å¼å®¹æ§å¼¹çªï¼è·åframeContext\r\n   */\r\n  private getFrameContext() {\r\n    if (this.frameContext) {\r\n      return this.frameContext;\r\n    }\r\n    if (this['context'] && this['context']['frameContext']) {\r\n      return this['context']['frameContext'];\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * å¼å®¹æ§å¼¹çªï¼è·åComponentFactoryResolver\r\n   */\r\n  private getComponentFactoryResolver() {\r\n    const frameContext = this.getFrameContext();\r\n    let componentFactoryResolver: any;\r\n    if (frameContext) {\r\n      componentFactoryResolver = frameContext.injector.get(ComponentFactoryResolver);\r\n    }\r\n    return componentFactoryResolver;\r\n  }\r\n\r\n  /**\r\n   * è·åconfigè½¬æ¢æå¯¹è±¡ç±»åçéç½®\r\n   * @param config éç½®é¡¹\r\n   * @throws å¡«åå¯¹è±¡æ ¼å¼æjsonå­ç¬¦ä¸²\r\n   */\r\n  private getObjectTypeConfig(config: any) {\r\n    let objectTypeConfig: any\r\n    if (typeof config === 'string') {\r\n      if (config.length) {\r\n        try {\r\n          objectTypeConfig = JSON.parse(config);\r\n        } catch {\r\n          throw new Error(config + 'ä¸æ¯åæ³çjsonå­ç¬¦ä¸²');\r\n        }\r\n      } else {\r\n        objectTypeConfig = {};\r\n      }\r\n    } else if (typeof config === 'object') {\r\n      objectTypeConfig = Object.assign({}, config);\r\n    } else {\r\n      throw new Error('å¡«åå¯¹è±¡æ ¼å¼æjsonå­ç¬¦ä¸²');\r\n    }\r\n    return objectTypeConfig;\r\n  }\r\n\r\n  /**\r\n   * åå»ºæ¨¡ææ¡åç»ä»¶å®ä¾ï¼å¹¶è¿åæ¨¡ææ¡å®ä¾ï¼åäºå¼å®¹èè¡¨åå¤ç\r\n   * @param config å¼¹çªéç½®\r\n   * @param component å¼¹çªåç»ä»¶\r\n   * @param uiStateObject ç»å®å¼¹çªåç»ä»¶uiState\r\n   */\r\n  private createModalComponentRef(config: any, component: any, uiStateObject: any) {\r\n    let componentRef: any;\r\n    let modalRef: any;\r\n    const frameContext = this.getFrameContext();\r\n    const componentFactoryResolver = this.getComponentFactoryResolver();\r\n    if (frameContext && componentFactoryResolver) {\r\n      const contentCmptFactory = componentFactoryResolver.resolveComponentFactory(component);\r\n      const injector = this.createInjector(this.refs, this.frameContext.injector);\r\n      const modalContentInjector = ReflectiveInjector.resolveAndCreate([...this._providers], injector);\r\n      componentRef = contentCmptFactory.create(modalContentInjector);\r\n      if (componentRef && componentRef.instance && componentRef.instance.viewModel && componentRef.instance.viewModel.uiState) {\r\n        if (typeof uiStateObject === 'object' && Object.keys(uiStateObject).length) {\r\n          Object.keys(uiStateObject).forEach((item) => {\r\n            componentRef.instance.viewModel.uiState.setPropertyValue(item, uiStateObject[item]);\r\n          });\r\n        }\r\n        // éå isDialogåæ°\r\n        componentRef.instance.viewModel.uiState.setPropertyValue('DEVKIT_DIALOG', true);\r\n      }\r\n      modalRef = this.modalService.show(componentRef, config);\r\n    } else {\r\n      modalRef = this.modalService.show(component, config);\r\n    }\r\n    return modalRef;\r\n  }\r\n  /**\r\n   *æå¼å¼¹çª\r\n   * @param config æ¨¡ææ¡æ¬èº«éç½®\r\n   * @param modalId æ¨¡ææ¡åç»ä»¶çid\r\n   * @param uiStateConfig æ¨¡ææ¡åç»ä»¶uiStateä¸çå­æ®µåå¼\r\n   * @param callback åè°\r\n   */\r\n  public openModal(config: any = {}, modalId: string, uiStateConfig: any = {}, callback?: (modalRef: any) => any) {\r\n    const configObj = this.getObjectTypeConfig(config);\r\n    const uiStateObject = this.getObjectTypeConfig(uiStateConfig);\r\n    const innerCompopnent = this.farrisFormService.getControls(modalId);\r\n    let modalRef: any;\r\n    let modalConfig: any = {\r\n      title: this.languageService.defaultDialogTitle,\r\n      width: 760,\r\n      height: 450,\r\n      showButtons: false\r\n    };\r\n    modalConfig = Object.assign(modalConfig, configObj);\r\n    const onClosingHandler = modalConfig.beforeClose;\r\n    // tslint:disable: no-string-literal\r\n    const cancelChanges = modalConfig['cancelChanges'] || false;\r\n    modalConfig.beforeClose = (ref) => {\r\n      // if (ref && ref.modalRef && ref.modalRef.content) {\r\n      //   ref.modalRef.content.isDialogRootComponent = false;\r\n      // }\r\n      if (!!onClosingHandler && typeof onClosingHandler === 'function') {\r\n        return onClosingHandler(ref).pipe(\r\n          switchMap((result) => {\r\n            if (result) {\r\n              if (cancelChanges) {\r\n                return this.cancelChanges(ref);\r\n              }\r\n            }\r\n            return of(result);\r\n          })\r\n        );\r\n      }\r\n      if (cancelChanges) {\r\n        return this.cancelChanges(ref);\r\n      } else {\r\n        return of(true);\r\n      }\r\n    };\r\n    const remote = modalConfig.remote || false;\r\n    if (remote) {\r\n      this.createRemoteForm(modalConfig, uiStateObject).subscribe(\r\n        (modalRef: any) => {\r\n          this.modalRef = modalRef;\r\n          this.refs.modalRef = modalRef;\r\n          if (modalRef && !!modalRef.content) {\r\n            modalRef.content.isDialogRootComponent = true;\r\n            modalRef.content.dialogRef = modalRef;\r\n          }\r\n          callback(modalRef);\r\n        }\r\n      );\r\n    } else {\r\n      if (!innerCompopnent) {\r\n        console.error(`è·åæ§ä»¶å¤±è´¥ï¼modalId=${modalId}`);\r\n        return;\r\n      }\r\n      if (typeof innerCompopnent === 'string') {\r\n        modalConfig.dialogType = 'iframe';\r\n        modalRef = this.modalService.show(innerCompopnent, modalConfig);\r\n      } else if (typeof innerCompopnent === 'function') {\r\n        modalRef = this.createModalComponentRef(modalConfig, innerCompopnent, uiStateObject);\r\n      } else if (typeof innerCompopnent === 'object') {\r\n        // å¦ææ¯å¯¹è±¡ ä¸ä½¿ç¨ç¬ç«jså è½½\r\n        // {\"useIsolateJs\":true,\"modalInstance\":f()}\r\n        if (innerCompopnent.useIsolateJs) {\r\n          const injector = this.createInjector(this.refs);\r\n          const parameter = {\r\n            injector: injector,\r\n            uiState: uiStateObject,\r\n            modalService: this.modalService,\r\n            dialogServiceInstance: this,\r\n            eventBus: this.frameContext.getVirtualRootFrameContext().eventBus,\r\n            componentCallback: this.componentModify,\r\n            modalInstanceCallback: this.modalInstanceCallback.bind(this)\r\n          };\r\n          // ä¼å¨åé¨è¿è¡\r\n          const subject: Subject<any> = innerCompopnent['modalInstance'](modalConfig, parameter);\r\n          return subject;\r\n        } else {\r\n          modalRef = this.modalService.show(innerCompopnent, modalConfig);\r\n        }\r\n      }\r\n\r\n      this.modalRef = modalRef;\r\n      this.refs.modalRef = modalRef;\r\n      if (modalRef && !!modalRef.content) {\r\n        modalRef.content.isDialogRootComponent = true;\r\n        modalRef.content.dialogRef = modalRef;\r\n      }\r\n      return modalRef;\r\n    }\r\n  }\r\n  private componentModify(cmpRef: any, parameter: {\r\n    uistate: any\r\n  }) {\r\n    if (cmpRef && cmpRef.instance && cmpRef.instance.viewModel && cmpRef.instance.viewModel.uiState) {\r\n      if (parameter.uistate && typeof parameter.uistate === 'string') {\r\n        parameter.uistate = JSON.parse(parameter.uistate);\r\n      }\r\n      if (typeof parameter.uistate === 'object' && Object.keys(parameter.uistate).length) {\r\n        Object.keys(parameter.uistate).forEach((item) => {\r\n          cmpRef.instance.viewModel.uiState.setPropertyValue(item, parameter.uistate[item]);\r\n        });\r\n      }\r\n      // éå isDialogåæ°\r\n      cmpRef.instance.viewModel.uiState.setPropertyValue('DEVKIT_DIALOG', true);\r\n    }\r\n  }\r\n\r\n  private modalInstanceCallback(cmpRef: any, options: any, parameter: any) {\r\n    if (parameter && parameter.modalService) {\r\n      const modalRef = parameter.modalService.show(cmpRef, options);\r\n      this.modalRef = modalRef;\r\n      this.refs.modalRef = modalRef;\r\n      if (modalRef && !!modalRef.content) {\r\n        modalRef.content.isDialogRootComponent = true;\r\n        modalRef.content.dialogRef = modalRef;\r\n      }\r\n      return modalRef;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æå¼ç±»å¸®å©è¡¨å\r\n   * @param frameId\r\n   * @param params\r\n   * @param configs\r\n   * @description å¼¹åºè¡¨ååå¼¹åºè¿ç«¯è¡¨ååºå«ä¸ºå¼¹åºè¡¨åéè¦éç½®å­æ®µæ å°\r\n   */\r\n  public openHelpModal(frameId: string, params: string, configs?: any) {\r\n    const events = this['context']['eventParam'] || {};\r\n    // å¡çåºæ¯ä¼ éè¿æ¥çäºä»¶æ¯èªå®ä¹å¯¹è±¡ï¼åå«eventåoptionsãåè¡¨åºæ¯ä¼ éè¿æ¥çäºä»¶åæ°æ¯æ®éäºä»¶åæ°ï¼å¨åæ°ä¸­æºå¸¦äºeditor.options\r\n    const event = events.event || events;\r\n    const options = events.options || events.editor && events.editor.options || {};\r\n    const context = events && events.context;\r\n    const subject = new Subject<any>();\r\n    // modalIdå¨ä¸¤ç§åºæ¯ä¸é½éè¦ï¼ç¨æ¥åºåå®ä¾\r\n    const { modalId = null } = options;\r\n    if (!configs) {\r\n      configs = '{}';\r\n    }\r\n    if (typeof configs === 'string' && configs.length > 0) {\r\n      configs = JSON.parse(configs);\r\n    }\r\n    const { remote = false, currentRow = false, areaResponse = undefined } = configs || {};\r\n    // æ¯æareaResponseéç½®\r\n    if (areaResponse !== undefined && options.areaResponse === undefined) {\r\n      options.areaResponse = areaResponse;\r\n    }\r\n    if (remote) {\r\n      const mapFields = configs.mapFields || {};\r\n      options.remote = remote + '?v=' + new Date().valueOf();\r\n      this.openModal(options, modalId, params, (dialogRef: any) => {\r\n        // æ°å¢eventåæ°ï¼ä¸ºäºä»¥åè°ç¨eventä¸­çformControlä»¥ééåè¡¨ä¸­çæºè½è¾å¥æ¡å¼¹åºè¡¨åï¼\r\n        this.modals[modalId] = { subject, frameId: frameId, mapFields, dialogRef, currentRow, event: event, context };\r\n      });\r\n    } else {\r\n      const dialogRef = this.openModal(options, modalId, params);\r\n      const mapFields = options.mapFields || {};\r\n      this.modals[modalId] = { subject, frameId: frameId, mapFields, dialogRef, currentRow, event: event, context };\r\n    }\r\n    return subject;\r\n  }\r\n\r\n  /**\r\n   * æå¼å¸¦åè°çå¼¹çª\r\n   * @param frameId frameId\r\n   * @param params åæ°\r\n   * @param configs éç½®\r\n   * @returns\r\n   */\r\n  public openCallbackableModal(frameId: string, params?: string, configs?: any) {\r\n    if (!configs) {\r\n      configs = '{}';\r\n    }\r\n    if (typeof configs === 'string') {\r\n      configs = JSON.parse(configs);\r\n    }\r\n    const events = this['context'] && this['context']['eventParam'] || {};\r\n    const options = events.options;\r\n    options.showButtons = true;\r\n    options.buttons = [\r\n      { text: this.languageService.cancel, cls: 'btn', handle: (event: any) => this.cancel(options) },\r\n      {\r\n        text: this.languageService.confirm, cls: 'btn btn-primary', handle: (event: any) => {\r\n          const { modalId = null } = options || {};\r\n          if (modalId) {\r\n            const modal = this.modals[modalId];\r\n            const { subject = null, dialogRef = null, frameId = null, handle = null, currentRow = false } = modal || {};\r\n            const formCmp = dialogRef.content; // å¼¹çªè¡¨åå®ä¾\r\n            if (!formCmp) {\r\n              throw new Error('ä¸æ¯æçè¡¨åç±»å');\r\n            }\r\n            let selectedItems = [];\r\n            if (currentRow === true) {\r\n              let frameComtext: FrameContext;\r\n              if (formCmp.context) {\r\n                frameComtext = formCmp.context.appContext.frameContextManager.getFrameContextById(frameId) as FrameContext;\r\n              } else {\r\n                frameComtext = formCmp.appContext.frameContextManager.getFrameContextById(frameId) as FrameContext;\r\n              }\r\n\r\n              if (!frameComtext) {\r\n                throw new Error(`æ æçframeIdï¼${frameId}ï¼è¯·ç¡®è®¤å½ä»¤ä¸­frameIdæ­£ç¡®ã`);\r\n              }\r\n              const bindingList = frameComtext.bindingData.getList() as BindingList;\r\n              const item = bindingList && bindingList.currentItem && bindingList.currentItem.toJSON();\r\n              selectedItems = [item];\r\n            } else {\r\n              let rows: Map<string, any>;\r\n              // å¦æcontextä¸ºç©º é£ä¹å°è¯ä»å¯¹åºçappcontextè¯»åï¼ä¸»è¦ç®çæ¯ä¸ºäºè§£æè¡¨åçå¼¹åº\r\n              if (formCmp.context) {\r\n                rows = formCmp.context.appContext.frameContextManager.getFrameContextById(frameId).uiState.rows || new Map<string, any>();\r\n              } else {\r\n                rows = formCmp.appContext.frameContextManager.getFrameContextById(frameId).uiState.rows || new Map<string, any>();\r\n              }\r\n\r\n              selectedItems = Array.from(rows.values());\r\n            }\r\n            if (typeof handle === 'function') {\r\n              handle(selectedItems);\r\n            }\r\n            if (subject) {\r\n              subject.next();\r\n            }\r\n            dialogRef.close(options);\r\n          }\r\n        }\r\n      }\r\n    ];\r\n\r\n    const subject = new Subject<any>();\r\n    const { modalId = null } = options;\r\n    const { remote = null, currentRow = false, areaResponse = undefined } = configs;\r\n    const handle = options.handle;\r\n    // æ¯æareaResponseéç½®\r\n    if (areaResponse !== undefined && options.areaResponse === undefined) {\r\n      options.areaResponse = areaResponse;\r\n    }\r\n    if (remote) {\r\n      options.remote = remote + '?v=' + new Date().valueOf();\r\n      this.openModal(options, modalId, params, (dialogRef: any) => {\r\n        this.modals[modalId] = { subject, frameId: frameId, dialogRef, handle, currentRow, event: events.event };\r\n      });\r\n    } else {\r\n      const dialogRef = this.openModal(options, modalId, params);\r\n      this.modals[modalId] = { subject, frameId: frameId, dialogRef, handle, currentRow, event: events.event };\r\n    }\r\n    return subject;\r\n  }\r\n\r\n  /**\r\n   * ç¡®è®¤æé®äºä»¶\r\n   * @throws frameId\r\n   */\r\n  public confirm() {\r\n    const events = this['context'] && this['context']['eventParam'] || {};\r\n    const { modalId = null } = events || {};\r\n    if (modalId) {\r\n      const modal = this.modals[modalId];\r\n      const { subject = null, dialogRef = null, mapFields = {}, frameId = null, currentRow = false, event = null, context = null } = modal || {};\r\n      const formCmp = dialogRef.content; // å¼¹çªè¡¨åå®ä¾\r\n      if (!formCmp) {\r\n        throw new Error('ä¸æ¯æçè¡¨åç±»å');\r\n      }\r\n      // const selectedIds = formCmp.context.appContext.frameContextManager.getFrameContextById(frameId).uiState.ids;\r\n\r\n      let selectedItems = [];\r\n      if (currentRow === true) {\r\n        const frameComtext = formCmp.context.appContext.frameContextManager.getFrameContextById(frameId) as FrameContext;\r\n        if (!frameComtext) {\r\n          throw new Error(`æ æçframeIdï¼${frameId}ï¼è¯·ç¡®è®¤å½ä»¤ä¸­frameIdæ­£ç¡®ã`);\r\n        }\r\n        const bindingList = frameComtext.bindingData.getList() as BindingList;\r\n        const item = bindingList && bindingList.currentItem && bindingList.currentItem.toJSON();\r\n        if (item && Object.keys(item).length > 0) {\r\n          selectedItems = [item];\r\n        }\r\n      } else {\r\n        const rows: Map<string, any> = formCmp.context.appContext.frameContextManager.getFrameContextById(frameId).uiState.rows || new Map<string, any>();\r\n        selectedItems = Array.from(rows.values());\r\n      }\r\n\r\n      // æ å°å­æ®µæ°æ®\r\n      // è·åè§¦åå¼¹æ¡çç¼è¾å¨çå­æ®µåç§°\r\n      let editorField = undefined;\r\n      if (event && event.editor && event.editor.column) {\r\n        editorField = event.editor.column.field;\r\n      }\r\n      if (selectedItems && mapFields) {\r\n        Object.keys(mapFields).forEach((k) => {\r\n          const targetField: string = mapFields[k];\r\n          const sourceKeyArray = k.split('.').filter((p) => p) || [];\r\n          const targetValue = selectedItems.map((r) => {\r\n            return sourceKeyArray.reduce((target, key) => {\r\n              if (target && (target.hasOwnProperty(key) || target['__proto__'].hasOwnProperty(key))) {\r\n                return target[key];\r\n              } else {\r\n                return '';\r\n              }\r\n            }, r);\r\n          }).join(',');\r\n          if (targetField) {\r\n            const bindingPaths = this.frameContext.viewModel.bindingPath.split('/').filter((p) => p);\r\n            const targetFields = targetField.split(',').filter((p) => p);\r\n            targetFields.forEach((target) => {\r\n              if (context) {\r\n                this.setValueByPath(context, target, targetValue);\r\n              } else {\r\n                // ä¿®å¤è¡¨æ ¼æºè½è¾å¥æ¡éæ©å¼åæºè½è¾å¥æ¡å¼ä¸¢å¤±çé®é¢\r\n                if (event.formControl && event.formControl.setValue && event.editor && event.editor.column && event.editor.column.field === target) {\r\n                  event.formControl.setValue(targetValue);\r\n                }\r\n                const targetPath = target.split('.');\r\n                this.frameContext.bindingData.setValue(bindingPaths.concat(targetPath), targetValue, true, true);\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      if (subject) {\r\n        subject.next();\r\n      }\r\n      dialogRef.close();\r\n    }\r\n  }\r\n  /**\r\n   * åæ¶æé®äºä»¶\r\n   * @param event\r\n   */\r\n  public cancel(event?: any) {\r\n    const events = event || this['context'] && this['context']['eventParam'] || {};\r\n    const { modalId = null } = events || {};\r\n    if (modalId) {\r\n      const modal = this.modals[modalId];\r\n      const { subject = null, dialogRef = null } = modal || {};\r\n      if (subject) {\r\n        subject.next();\r\n      }\r\n      if (dialogRef) {\r\n        dialogRef.close();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * åæ¶æå¡å¨åæ´é\r\n   * @param ref\r\n   */\r\n  private cancelChanges(ref: any): Observable<boolean> {\r\n    if (ref && ref.modalRef && ref.modalRef.content) {\r\n      const component: FrameComponent = ref.modalRef.content as FrameComponent;\r\n      if (component && component.context) {\r\n        const repository = component.context.repository || null;\r\n        if (repository) {\r\n          return repository.cancelChanges().pipe(switchMap(() => of(true)));\r\n        }\r\n      }\r\n    }\r\n    return of(true);\r\n  }\r\n  /**\r\n   * å³é­è¯¥å¼¹çª\r\n   */\r\n  closeModal() {\r\n    if (this.modalRef) {\r\n      this.modalRef.close();\r\n    }\r\n  }\r\n  /**\r\n   * åå»ºè¿ç¨è¡¨åå®ä¾\r\n   * @param options dialogéç½®\r\n   * @param uiState uistate\r\n   */\r\n  private createRemoteForm(options: any, uiState: any): Subject<any> {\r\n    const remote = options.remote || false;\r\n    const subject = new Subject<any>();\r\n    if (remote) {\r\n      let moduleName = options.moduleName || null;\r\n      System.import(remote).then((module: any) => {\r\n        if (!moduleName) {\r\n          moduleName = Object.keys(module).pop();\r\n        }\r\n        const moduleFactory = module[moduleName] as NgModuleFactory<any>;\r\n        const moduleRef: NgModuleRef<{ trans?: { resolve?: () => Observable<any> } }> = moduleFactory.create(this.injector);\r\n        const resolve = moduleRef && moduleRef.instance && moduleRef.instance.trans && typeof moduleRef.instance.trans.resolve === 'function' && moduleRef.instance.trans.resolve || (() => of(true));\r\n        resolve.apply(moduleRef.instance.trans).subscribe(() => {\r\n          const entryComponent = moduleRef['_bootstrapComponents'][0];\r\n          if (entryComponent) {\r\n            const compFactory = moduleRef.componentFactoryResolver.resolveComponentFactory(entryComponent);\r\n            const injector = this.createInjector(this.refs);\r\n            const componentRef: ComponentRef<any> = compFactory.create(injector);\r\n            if (componentRef && componentRef.instance && componentRef.instance.viewModel && componentRef.instance.viewModel.uiState) {\r\n              if (typeof uiState === 'object' && Object.keys(uiState).length) {\r\n                Object.keys(uiState).forEach((item) => {\r\n                  componentRef.instance.viewModel.uiState.setPropertyValue(item, uiState[item]);\r\n                });\r\n              }\r\n              // éå isDialogåæ°\r\n              componentRef.instance.viewModel.uiState.setPropertyValue('DEVKIT_DIALOG', true);\r\n            }\r\n            const modalRef = this.modalService.show(componentRef, options);\r\n            subject.next(modalRef);\r\n          } else {\r\n            throw new Error(`æ æ³æ¾å°å¥å£è¡¨åï¼`);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    return subject;\r\n  }\r\n  private setValueByPath(target: object, path: string, value: any) {\r\n    if (target) {\r\n      const paths = path.split('.');\r\n      if (paths.length <= 1) {\r\n        target[path] = value;\r\n      } else {\r\n        paths.slice(0, -1).reduce((prev, path) => {\r\n          if (!(prev.hasOwnProperty(path) || prev['__proto__'].hasOwnProperty(path))) {\r\n            prev[path] = {};\r\n          }\r\n          return prev[path];\r\n        }, target)[paths[paths.length - 1]] = value;\r\n      }\r\n    }\r\n  }\r\n  private createInjector(modalRef: BsModalRef, injector?: Injector) {\r\n    const providers = [\r\n      { provide: INSIDE_DIALOG_TOKEN, useValue: true },\r\n      {\r\n        provide: MODAL_REF, useValue: forwardRef(() => modalRef)\r\n      }\r\n    ];\r\n    return Injector.create({ providers, parent: injector || this.injector });\r\n  }\r\n}\r\n\r\nexport { DialogService };\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { FarrisSidebarService } from '@farris/ui-sidebar';\r\nimport { Entity, FrameContext } from '@farris/devkit';\r\nimport { BefRepository } from '@farris/bef';\r\nimport { FormMessageService } from './form-message.service';\r\nimport { LanguageService } from './languag.service';\r\n\r\n\r\n/**\r\n * ä¾§è¾¹æ æå¡\r\n * @scope FrameComponent\r\n */\r\n@Injectable()\r\nclass SidebarService {\r\n\r\n  private get repository(): BefRepository<Entity> {\r\n    return this.frameContext.repository as BefRepository<Entity>;\r\n  }\r\n\r\n  constructor(\r\n    private frameContext: FrameContext,\r\n    private sidebarUIService: FarrisSidebarService,\r\n    private messageService: FormMessageService,\r\n    @Optional() private languageService: LanguageService,\r\n  ) {\r\n    if (!this.languageService) {\r\n      this.languageService = LanguageService.getInstance();\r\n    }\r\n  }\r\n\r\n  openSidebar() {\r\n    this.sidebarUIService.sendIsOpen(true);\r\n  }\r\n\r\n  closeSidebar() {\r\n    this.sidebarUIService.sendIsOpen(false);\r\n  }\r\n\r\n  /**\r\n   * å³é­åååæ¶åæ´\r\n   */\r\n  confirmBeforeClosingSidebar(): Observable<boolean> {\r\n\r\n    // æ£æ¥æ¯å¦æåæ´ï¼æ²¡æåæ´ç´æ¥å³é­\r\n    const ifChangesExist = this.repository.entityManager.checkAllEntityChanges();\r\n    if (!ifChangesExist) {\r\n      return of(true);\r\n    }\r\n\r\n    // ç¡®è®¤æ¯å¦å³é­\r\n    const confirm$ = this.messageService.question(this.languageService['exitWithoutSave']);\r\n    const result$ = confirm$.pipe(\r\n      switchMap((confirmResult: boolean) => {\r\n        if (confirmResult === false) {\r\n          return of(false);\r\n        } else {\r\n          return of(true);\r\n        }\r\n      })\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * ç»§ç»­å³é­ä¾§è¾¹æ \r\n   */\r\n  public continueClosingSidebar(): Observable<boolean> {\r\n    return of(true);\r\n  }\r\n\r\n  /**\r\n   * é»æ­¢ä¾§è¾¹æ å³é­\r\n   */\r\n  public stopClosingSidebar(): Observable<boolean> {\r\n    return of(false);\r\n  }\r\n}\r\n\r\nexport { SidebarService };\r\n","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * è¿æ»¤æ¡ä»¶æå¡\r\n * @scope FormModule\r\n */\r\n@Injectable()\r\nclass FilterService {\r\n\r\n  /**\r\n   * ç§»é¤åå«ç¹æ®å¼çè¿æ»¤æ¡ä»¶\r\n   * @todoï¼åå®filtersä¸ºå­ç¬¦ä¸²ï¼å¾è®¾è®¡æ¶æ¯ææ°ç»åæ°åä¸èµ·è°æ´\r\n   */\r\n  public stripFiltersWithSpecialValue(filters: string, specialValues: string): string {\r\n    if (!filters || !specialValues) {\r\n      return filters;\r\n    }\r\n\r\n    const filterArray: any[] = JSON.parse(filters);\r\n    const strippedFilterArray = filterArray.filter((filter: any) => {\r\n      const filterValue = this.getFilterValue(filter);\r\n      return specialValues.indexOf(filterValue) === -1;\r\n    });\r\n\r\n    return JSON.stringify(strippedFilterArray);\r\n  }\r\n\r\n  /**\r\n   * è·åè¿æ»¤æ¡ä»¶çå¼\r\n   * @todoï¼æ²¡æFilteræ¥å£å®ä¹ï¼ç®åäº§åé¨å¤§å°åä¸ä¸è´ã\r\n   */\r\n  private getFilterValue(filter: any) {\r\n    return filter.Value || filter.value;\r\n  }\r\n}\r\n\r\nexport { FilterService };\r\n","import { Injectable, InjectionToken, Inject, Optional } from '@angular/core';\r\nexport const FARRIS_FORM_COMPONENTS = new InjectionToken<{ [key: string]: any }>('è¡¨åå¼¹åºçªå£æéèç»ä»¶åè¡¨');\r\n\r\n/**\r\n * è¡¨åæå¡\r\n * @scope FormModule\r\n */\r\n@Injectable()\r\nexport class ComponentManagerService {\r\n\r\n  private controls: { [key: string]: any } = {};\r\n\r\n  appendControl(key: string, cmpIns: any) {\r\n    this.controls[key] = cmpIns;\r\n  }\r\n\r\n  getControl(key: string) {\r\n    if (this.controls[key]) {\r\n      return this.controls[key];\r\n    } else {\r\n      console.warn(`æªæ¾å°Keyä¸º${key}çç»ä»¶ï¼`);\r\n      return null;\r\n    }\r\n  }\r\n  public clear(key?: string) {\r\n    if (key) {\r\n      this.controls[key] = null;\r\n      delete this.controls[key];\r\n    } else {\r\n      this.controls = {};\r\n    }\r\n  }\r\n}\r\n","import { Observable, of,Subject } from \"rxjs\";\r\n\r\nexport class AuthorityService {\r\n    queryOperationAuthority(operationIds: Array<string>): Observable<Map<string, boolean>>{\r\n        var queryResult = new Map<string, boolean>();\r\n        var i=0;\r\n        for(var j=0; j<operationIds.length; j++) {\r\n            queryResult.set(operationIds[j], i%2==0? true:false);\r\n            i++;            \r\n        }\r\n\r\n        var dummyResult = new Subject<Map<string, boolean>>();\r\n        setTimeout(() => {\r\n            dummyResult.next(queryResult);\r\n        }, 0);\r\n\r\n        return dummyResult;\r\n    }\r\n}\r\n","import { AuthorityService } from './authority.service';\r\nimport {Observable, empty} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n/**\r\n * æé\r\n */\r\nexport class Authority {\r\n    \r\n    constructor() {\r\n        this.operationLabelMap = new Map<string, string>();\r\n        this.authOfLabel = new Map<string, boolean>();\r\n    }\r\n\r\n    /**\r\n     * ä»labelå°æä½æéIDçæ å°ï¼labelå¯ä»¥æ¯button idç­\r\n     */\r\n    private operationLabelMap: Map<string, string>;\r\n\r\n    /**\r\n     * è®°å½labelå¯¹äºçæä½æéï¼æ¯å¦éè¿\r\n     */\r\n    private authOfLabel: Map<string, boolean>;\r\n\r\n    /**\r\n     * è®¾ç½®labelå°operation idçæ å°\r\n     * @param labelMap \r\n     */\r\n    protected setLabelMap(labelMap: Object) {\r\n        for(var i in labelMap) {\r\n            this.operationLabelMap.set(i, labelMap[i]);\r\n        }\r\n        this.operationLabelMap.forEach((opId, label) => {\r\n            this[label] = false;\r\n        });        \r\n    }\r\n    \r\n    /**\r\n     * åå§åæéçå¼\r\n     */\r\n    initialize(authorityService: AuthorityService): Observable<void> {\r\n        if(this.operationLabelMap && this.operationLabelMap.size>0) {\r\n            return authorityService.queryOperationAuthority(Array.from(this.operationLabelMap.values())).pipe(\r\n                map((operationAuth) => {\r\n                    this.operationLabelMap.forEach((opId, label) => {\r\n                        this.authOfLabel.set(label, operationAuth.has(opId) ? operationAuth.get(opId) : false);\r\n                    });\r\n                })\r\n            );\r\n        }else{\r\n            return empty();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * è¿åæä½æéï¼å³ç¨æ·æ¯å¦æ¥æLabelæå¯¹åºçæé\r\n     * @param label æ ç­¾ï¼å¯ä»¥æ¯button idç­\r\n     */\r\n    hasOperation(label:string) {        \r\n        return this.authOfLabel.has(label) && this.authOfLabel.get(label);\r\n    }\r\n\r\n    // è¿åå­æ®µæé\r\n    // hasField(field:string)\r\n}","/*\r\n * @Author: aalizzwell\r\n * @Date: 2019-05-30 10:35:09\r\n * @Last Modified by: aalizzwell\r\n * @Last Modified time: 2019-06-15 19:22:13\r\n */\r\nimport { Injectable, Optional } from '@angular/core';\r\nimport { LanguageService } from './languag.service';\r\nimport { FormErrorService } from './error/form-error.service';\r\nimport { IExceptionHandler, AppContext } from '@farris/devkit';\r\n\r\n/**\r\n * é»è®¤å¼å¸¸å¤çå¨\r\n * @scope æ²¡ææä¾å¯¹åºProvider\r\n */\r\n@Injectable()\r\nclass ExceptionHandler implements IExceptionHandler {\r\n  private appContext: AppContext = null;\r\n  constructor(\r\n    private formErrorService: FormErrorService,\r\n    @Optional() private languageService: LanguageService,\r\n    private applicationContext: AppContext,\r\n  ) {\r\n    if (this.languageService == null) {\r\n      this.languageService = LanguageService.getInstance();\r\n    }\r\n  }\r\n  public setContext(applicationContext: AppContext) {\r\n    this.appContext = applicationContext;\r\n  }\r\n  public handle(error: any) {\r\n    if (!!this.formErrorService) {\r\n      this.formErrorService.exception(this.languageService.loadFailed, error);\r\n    }\r\n  }\r\n}\r\n\r\nexport { ExceptionHandler };\r\n","import { Provider } from '@angular/core';\r\nimport { FormLoadingService } from '../form-loading/form-loading.service';\r\nimport { FormMessageService } from '../form-message.service';\r\nimport { HideEventService } from '../form-loading/hide-event.service';\r\nimport { FormNotifyService } from '../form-notify.service';\r\nimport { FormErrorService } from '../error/form-error.service';\r\nimport { CheckService } from '../check.service';\r\nimport { DataCheckService } from '../data-check.service';\r\n\r\nimport { EventService } from '../event.service';\r\nimport { MenuStateService } from '../menu-state.service';\r\nimport { RouterService } from '../router.service';\r\nimport { UIStateService } from '../ui-state.service';\r\nimport { StateMachineService } from '../state-machine.service';\r\nimport { ValidationService } from '../validation.service';\r\nimport { BindingDataService } from '../binding-data.service';\r\nimport { CommandService } from '../command-service';\r\n\r\nimport { QuerystringService } from '../querystring';\r\nimport { RuntimeFrameworkService } from '../rtf-service';\r\nimport { NavigationEventService } from '../navigation-event.service';\r\nimport { NavigationService } from '../navigation.service';\r\nimport { NavigationMiddlewareService } from '../navigation-middleware.service';\r\nimport { GridMiddlewareService } from '../grid.middleware.service';\r\nimport { ParamService } from '../param.service';\r\n\r\nimport { BeActionService } from '../be-action.service';\r\nimport { ApproveService } from '../approve.service';\r\nimport { PrintService } from '../print.service';\r\nimport { AttachmentDataService, AttachmentService } from '../attachment/index';\r\nimport { ApplicationParamService } from '../application-param.service';\r\nimport {\r\n  EntityTraversingService, EntityManipulationService, EntityAggregationService,\r\n  EntityListService, EntityService\r\n} from '../entity-services/index';\r\nimport { LanguageService } from '../languag.service';\r\nimport { DialogService } from '../dialog.service';\r\nimport { SidebarService } from '../sidebar-service';\r\nimport { FarrisFormService } from '../farris-form.service';\r\nimport { FilterService } from '../filter-service';\r\nimport { ChangeItemService } from '../change-item.service';\r\n\r\n// data-services\r\nimport { ListDataService } from '../data-services/list-data.service';\r\nimport { TreeDataService } from '../data-services/tree-data.service';\r\nimport { CardDataService } from '../data-services/card-data.service';\r\nimport { SubListDataService } from '../data-services/sub-list-data.service';\r\nimport { KeybindingService } from '../keybinding-service';\r\nimport { FocusInvalidService } from '../focus-invalid.service';\r\nimport { SubTreeDataService } from '../data-services/sub-tree-data-service';\r\n\r\n/**\r\n * éççèProviders\r\n */\r\nconst FARRIS_COMMAND_SERVICE_PROVIDERS: Provider[] = [\r\n\r\n  // è¡¨åæ¨¡åæ³¨å¥ï¼18ä¸ªï¼\r\n  FormLoadingService,\r\n  FormMessageService,\r\n  FormNotifyService,\r\n  FormErrorService,\r\n  CheckService,\r\n  DataCheckService,\r\n  EventService,\r\n  FilterService,\r\n  KeybindingService,\r\n  LanguageService,\r\n  ParamService,\r\n  MenuStateService,\r\n  QuerystringService,\r\n  RuntimeFrameworkService,\r\n  NavigationEventService,\r\n  NavigationService,\r\n  RouterService,\r\n  ApplicationParamService,\r\n\r\n  // FrameComponentï¼20ä¸ªï¼\r\n  ValidationService,\r\n  FocusInvalidService,\r\n  ChangeItemService,\r\n  UIStateService,\r\n  StateMachineService,\r\n  BindingDataService,\r\n  CommandService,\r\n\r\n  // entity-services\r\n  EntityTraversingService,\r\n  EntityManipulationService,\r\n  EntityAggregationService,\r\n  EntityListService,\r\n  EntityService,\r\n\r\n  ListDataService,\r\n  TreeDataService,\r\n  SubTreeDataService,\r\n  CardDataService,\r\n  SubListDataService,\r\n\r\n  BeActionService,\r\n  ApproveService,\r\n  PrintService,\r\n  AttachmentDataService,\r\n  AttachmentService,\r\n  NavigationMiddlewareService,\r\n  GridMiddlewareService,\r\n  SidebarService,\r\n  FarrisFormService,\r\n  DialogService,\r\n];\r\n\r\nexport { FARRIS_COMMAND_SERVICE_PROVIDERS };\r\n","import { Injectable, Injector, Optional } from '@angular/core';\r\nimport { NumberFormat, UserSettings } from '@farris/devkit';\r\nimport { FrmI18nSettingService } from '@gsp-sys/rtf-common';\r\n\r\n@Injectable()\r\nexport class UserSettingsService implements UserSettings {\r\n  constructor(private injector: Injector, @Optional() private frmI18nSettingService: FrmI18nSettingService) { }\r\n\r\n  /**\r\n   * ç¨æ·æ¶åºå­ç¬¦ä¸²\r\n   */\r\n  public get timeZone(): string {\r\n    return this.timezone && this.timezone.id || null;\r\n  }\r\n  /**\r\n   * æ¶åºåç§»\r\n   */\r\n  public get timeZoneOffset(): number {\r\n    const offset = this.timezone && this.timezone.baseOffset;\r\n    if (offset !== null && offset !== undefined) {\r\n      return offset;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  /**\r\n   * é»è®¤è¯­è¨\r\n   */\r\n  public get defaultLanguage(): string {\r\n    return this.i18nSetting && this.i18nSetting.defaultLanguage || null;\r\n  }\r\n  /**\r\n   * æ¥ææ ¼å¼åå­ç¬¦ä¸²\r\n   * like: yyyy-MM-dd\r\n   */\r\n  public get dateFormat(): string {\r\n    return this.i18nSetting && this.i18nSetting.userDateFormat || null;\r\n  }\r\n  /**\r\n   * æ¶é´æ ¼å¼\r\n   * like: HH:MM:ss\r\n   */\r\n  public get timeFormat(): string {\r\n    return this.i18nSetting && this.i18nSetting.userTimeFormat || null;\r\n  }\r\n  public get dateTimeFormat(): string {\r\n    const dateFormat = this.i18nSetting && this.i18nSetting.userDateFormat || 'yyyy-MM-dd';\r\n    const timeFormat = this.i18nSetting && this.i18nSetting.userTimeFormat || 'HH:mm:ss';\r\n    return `${dateFormat} ${timeFormat}`;\r\n  }\r\n  /**\r\n   * å°åæ ¼å¼\r\n   */\r\n  public get addressFormat(): any {\r\n    return null;\r\n  }\r\n  /**\r\n   * æ°å­æ ¼å¼\r\n   */\r\n  public get numberFormat(): NumberFormat {\r\n    if (this.i18nSetting && this.i18nSetting.userNumberFormat) {\r\n      const userNumberFormat = this.i18nSetting.userNumberFormat;\r\n      const numberFormat: NumberFormat = {\r\n        negativeSign: userNumberFormat.negativeSign || '-',\r\n        numberDecimalDigits: userNumberFormat.numberDecimalDigits || 2,\r\n        numberDecimalSeparator: userNumberFormat.numberDecimalSeparator || '.',\r\n        numberGroupSeparator: userNumberFormat.numberGroupSeparator || ','\r\n      };\r\n      return numberFormat;\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * åºåä»£ç \r\n   */\r\n  public get regionCode(): string {\r\n    return this.i18nSetting && this.i18nSetting.userRegionCode || null;\r\n  }\r\n  /**\r\n   * ç¨æ·éç½®\r\n   */\r\n  private get userSettings(): any {\r\n    const userSettings = this.frmI18nSettingService && this.frmI18nSettingService.getSetting();\r\n    return userSettings;\r\n  }\r\n  private get timezone() {\r\n    return this.i18nSetting && this.i18nSetting.timezone;\r\n  }\r\n  private get i18nSetting() {\r\n    return this.userSettings && this.userSettings.i18nSetting;\r\n  }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { WorkFlow } from \"./types\";\r\n\r\n@Injectable()\r\nexport class WorkFlowMessageService {\r\n  private messageHandler: (callback: (e: WorkFlow.IMessage) => void) => (event: any) => void;\r\n  private handler: (event: any) => void;\r\n  constructor() {\r\n    this.messageHandler = (callback: (e: WorkFlow.IMessage) => void) => {\r\n      return (event: any) => {\r\n        var message = event.data as WorkFlow.IMessage;\r\n        if (message) {\r\n          message.sender = event.source;\r\n        }\r\n        if (typeof callback === 'function') {\r\n          callback(message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * çå¬å·¥ä½æµæ¶æ¯\r\n   * @param callback åè°\r\n   */\r\n  public listen(callback: (e: WorkFlow.IMessage) => void) {\r\n    this.handler = this.messageHandler(callback);\r\n    window.addEventListener('message', this.handler);\r\n  }\r\n  public destroy() {\r\n    if (this.handler) {\r\n      window.removeEventListener('message', this.handler);\r\n    }\r\n\r\n  }\r\n  /**\r\n   * ç»å·¥ä½æµè¡¨ååéæ¶æ¯\r\n   * @param message \r\n   */\r\n  public send(message: WorkFlow.IMessage): void {\r\n    if (!message) {\r\n      return;\r\n    }\r\n    let win: Window = window;\r\n    if (message.target) {\r\n      win = message.target as Window || window;\r\n      delete message.target;\r\n    }\r\n    if (win) {\r\n      win.postMessage(message, '*');\r\n    }\r\n  }\r\n}","import { Injectable, Injector } from \"@angular/core\";\r\nimport { WorkFlow } from \"./types\";\r\nimport { WorkFlowMessageService } from \"./work-flow-message.service\";\r\n\r\n/**\r\n * å·¥ä½æµæ¶æ¯\r\n * @warning ç¦æ­¢ä½¿ç¨è¡¨åä¸ä¸æï¼ææä¸ä¸æå¿é¡»ä»å¤é¨ä¼ å¥\r\n */\r\n@Injectable()\r\nexport class WorkFlowMessage {\r\n  private listeners: Map<string, any>;\r\n  constructor(private injector: Injector, public workFlowMessageService: WorkFlowMessageService) {\r\n    this.listeners = new Map<string, any>();\r\n  }\r\n  public setup() {\r\n    if (!this.workFlowMessageService) {\r\n      return;\r\n    }\r\n    this.workFlowMessageService.listen((message: WorkFlow.IMessage) => {\r\n      if (!this.listeners || this.listeners.size < 1) {\r\n        return;\r\n      }\r\n      this.listeners.forEach((callback: any, key: string) => {\r\n        if (typeof callback === 'function') {\r\n          callback(message);\r\n        }\r\n      })\r\n    });\r\n  }\r\n  public addEventListener(callback: (event: MessageEvent) => void): string {\r\n    const id = `${new Date().valueOf().toString(16)}-${Math.ceil(Math.random() * 100)}`;\r\n    this.listeners.set(id, callback);\r\n    return id;\r\n  }\r\n  public removeEventListener(eventId: string): void {\r\n    if (!this.listeners || this.listeners.size < 1) {\r\n      return;\r\n    }\r\n    this.listeners.delete(eventId);\r\n    eventId = null;\r\n  }\r\n}\r\n","import { Injectable, Injector } from \"@angular/core\";\r\nimport { AppContext, AppContextManager, FrameContext, onFrameComponentInit } from \"@farris/devkit\";\r\nimport { from, Observable, of } from \"rxjs\";\r\nimport { BefRepository, BefRepositoryUtil } from '@farris/bef';\r\nimport { concatMap, throwIfEmpty } from \"rxjs/operators\";\r\nimport { ValidationService } from \"../validation.service\";\r\nimport { WorkFlow } from \"./types\";\r\nimport { WorkFlowMessage } from \"./work-flow-message\";\r\nimport { WorkFlowMessageService } from \"./work-flow-message.service\";\r\n\r\n@Injectable()\r\nexport class WorkFlowMessageHandler implements onFrameComponentInit {\r\n  constructor(private injector: Injector, private frameContext: FrameContext, private workFlowMessageService: WorkFlowMessageService, private workFlowMessage: WorkFlowMessage) {\r\n\r\n  }\r\n  public onComponentInit(frameContext: FrameContext) {\r\n    const eventId = this.workFlowMessage.addEventListener(this.handle.bind(this));\r\n    const frameContextDestroySignal = this.frameContext.destorySignal;\r\n    if (frameContextDestroySignal) {\r\n      frameContextDestroySignal.subscribe(() => {\r\n        this.workFlowMessage.removeEventListener(eventId);\r\n      });\r\n    }\r\n    const appContextDestroySignal = this.frameContext.appContext.destorySignal;\r\n    if (appContextDestroySignal) {\r\n      appContextDestroySignal.subscribe(() => {\r\n        this.workFlowMessage.workFlowMessageService.destroy();\r\n      });\r\n    }\r\n  }\r\n  public handle(message: WorkFlow.IMessage): void {\r\n    const source = message.sender as Window;\r\n    const data = message.data as WorkFlow.IMessageBody;\r\n    const commandName = data && data.command || null;\r\n    let resultTask: Observable<any> = null;\r\n    if (!commandName) {\r\n      return;\r\n    }\r\n    if (commandName == 'wf-required-verification') {\r\n      // å·¥ä½æµçå¿å¡«æ ¡éª\r\n      // å¦æ­¤è·åçæ¯å½åç»ä»¶çæ ¡éªæå¡ï¼åºè¯¥ænamespaceæ¥åºåï¼ä¸åçnamespaceéè¦åå«æ§è¡æ ¡éª\r\n      const formFrameContexts = this.getFormFrameContexts();\r\n      resultTask = from(formFrameContexts).pipe(\r\n        concatMap((frameContext: FrameContext) => {\r\n          var validation = frameContext.injector.get<ValidationService>(ValidationService, null);\r\n          if (validation) {\r\n            return validation.validateAll();\r\n          }\r\n          return of(true);\r\n        })\r\n      );\r\n    } else {\r\n      var command = this.frameContext.viewModel[commandName];\r\n      if (command) {\r\n        resultTask = command(data.arguments);\r\n      }\r\n    }\r\n    if (resultTask) {\r\n      const message: WorkFlow.IMessage = this.buildMessage(true, source, this.isChanged);\r\n      resultTask.pipe(throwIfEmpty()).subscribe((result) => {\r\n        // åæ¥æºæ¹åä¼ æ¶æ¯\r\n        this.workFlowMessageService.send(message);\r\n      }, () => {\r\n        message.data.result = false;\r\n        this.workFlowMessageService.send(message);\r\n      });\r\n    }\r\n  }\r\n  private buildMessage(result: boolean, target: any, dataChanged: boolean, type: string = 'message') {\r\n    const message: WorkFlow.IMessage = {\r\n      data: {\r\n        result,\r\n        dataChanged\r\n      },\r\n      type: type,\r\n      target: target,\r\n    };\r\n    return message;\r\n  }\r\n  private getFormFrameContexts(): FrameContext[] {\r\n    const appContextManager = this.injector.get<AppContextManager>(AppContextManager, null);\r\n    const formFrameContexts = [];\r\n    if (appContextManager) {\r\n      const appContexts: AppContext[] = appContextManager.getAppContexts();\r\n      if (appContexts && appContexts.length > 0) {\r\n        appContexts.forEach((appContext: AppContext) => {\r\n          const frameContexts: FrameContext[] = appContext.frameContextManager.getFrameContexts();\r\n          frameContexts.reduce((contexts: FrameContext[], frameContext: FrameContext) => {\r\n            const namespace = frameContext.namespace;\r\n            const index = contexts.findIndex((frame: FrameContext) => frame.namespace === namespace);\r\n            if (index === -1) {\r\n              const root = frameContext.getVirtualRootFrameContext();\r\n              contexts.push(root);\r\n            }\r\n            return contexts;\r\n          }, formFrameContexts);\r\n        });\r\n      }\r\n    }\r\n    return formFrameContexts;\r\n  }\r\n  /**\r\n   * æ¯å¦ææªä¿å­çåæ´\r\n   */\r\n  private get isChanged(): boolean {\r\n    const befRepository = this.frameContext.repository as BefRepository<any>;\r\n    return BefRepositoryUtil.isExistUnsaveData(befRepository);\r\n  }\r\n}","import { FormLoadingService } from '../form-loading/form-loading.service';\r\nimport { FormMessageService } from '../form-message.service';\r\nimport { FormNotifyService } from '../form-notify.service';\r\nimport { FormErrorService } from '../error/form-error.service';\r\nimport { FormWizardService } from '../form-wizard.service';\r\n\r\nimport { CheckService } from '../check.service';\r\nimport { DataCheckService } from '../data-check.service';\r\nimport { EventService } from '../event.service';\r\nimport { ComponentManagerService } from '../component-manager.service';\r\nimport { FilterService } from '../filter-service';\r\nimport { KeybindingService } from '../keybinding-service';\r\nimport { LanguageService } from '../languag.service';\r\n\r\nimport { MenuStateService } from '../menu-state.service';\r\nimport { QuerystringService } from '../querystring';\r\nimport { RuntimeFrameworkService } from '../rtf-service';\r\nimport { NavigationEventService } from '../navigation-event.service';\r\nimport { NavigationService } from '../navigation.service';\r\nimport { ParamService } from '../param.service';\r\nimport { RouterService } from '../router.service';\r\nimport { ApplicationParamService } from '../application-param.service';\r\nimport { FilterConditionService } from '../filter-condition.service';\r\nimport { UserSettingsService } from '../user-settings.service';\r\nimport { UserSettingsToken } from '@farris/devkit';\r\nimport { WorkFlowMessage, WorkFlowMessageService } from '../work-flow/index';\r\n/**\r\n * æ¨¡åçº§æ³¨å¥(å±20ä¸ª)\r\n */\r\nconst FARRIS_COMMAND_SERVICE_MODULE_PROVIDERS = [\r\n  FormLoadingService,\r\n  FormMessageService,\r\n  FormNotifyService,\r\n  FormErrorService,\r\n  FormWizardService,\r\n  CheckService,\r\n  DataCheckService,\r\n  EventService,\r\n  ComponentManagerService,\r\n  FilterService,\r\n  KeybindingService,\r\n  LanguageService,\r\n  ParamService,\r\n  MenuStateService,\r\n  QuerystringService,\r\n  RuntimeFrameworkService,\r\n  NavigationEventService,\r\n  NavigationService,\r\n  RouterService,\r\n  ApplicationParamService,\r\n  FilterConditionService,\r\n  { provide: UserSettingsToken, useClass: UserSettingsService },\r\n  WorkFlowMessageService,\r\n  WorkFlowMessage\r\n];\r\n\r\nexport { FARRIS_COMMAND_SERVICE_MODULE_PROVIDERS }\r\n","/**\r\n * æ¯è¾ç¬¦\r\n */\r\nexport enum CompareType{\r\n    Equal = 0,\r\n    NotEqual = 1,\r\n    Greater = 2,\r\n    GreaterOrEqual = 3,\r\n    Less = 4,\r\n    LessOrEqual = 5,\r\n    Like = 6,\r\n    LikeStartWith = 7,\r\n    LikeEndWith = 8,\r\n    NotLike = 9,\r\n    NotLikeStartWith = 10,\r\n    NotLikeEndWith = 11,\r\n    Is = 12,\r\n    IsNot = 13,\r\n    In = 14,\r\n    NotIn = 15\r\n}","export enum ValueType{\r\n\r\n    /**\r\n     *å¼ç±»å\r\n     */\r\n    Value = 0,\r\n\r\n    /**\r\n     * è¡¨è¾¾å¼\r\n     */\r\n    Express = 1\r\n}","export enum RelationType{\r\n\r\n    Empty = 0,\r\n\r\n    /**\r\n     * ä¸\r\n     */\r\n    // And=0,\r\n    And = 1,\r\n\r\n    /**\r\n     * æ\r\n     */\r\n    // Or=1\r\n    Or = 2\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\nimport { QueryCondition, TextValue } from \"@farris/component-querycondition\";\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\n\r\nexport class TextHandler implements IQueryConditionHandler {\r\n  convert(qc: QueryCondition) {\r\n    const tv = (qc.value as TextValue);\r\n    return [{\r\n      'FilterField': qc.fieldCode,\r\n      'Compare':  (qc.compareType || qc.compareType === 0) ? qc.compareType : CompareType.Like,\r\n      'Value': tv.value, // jsonè½¬ä¹ä¸encodeUriComponentä¸åï¼ä¸åºå¨æ­¤è½¬ä¹ï¼ç±jsonåé¨è½¬ä¹å³å¯\r\n      'Relation': (qc.relation || qc.relation === 0) ? qc.relation : RelationType.And,\r\n      'Expresstype': ValueType.Value,\r\n      'Lbracket': qc.Lbracket || null,\r\n      'Rbracket': qc.Rbracket || null\r\n    }];\r\n  }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\nimport { QueryCondition, DateRangeValue, DateRangeControl} from \"@farris/component-querycondition\";\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\n\r\nexport class DateRangeHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        let control:DateRangeControl = qc.control as DateRangeControl\r\n        const arr = [];\r\n        const drv = (qc.value as DateRangeValue);\r\n        drv.startTime && arr.push({\r\n            'FilterField' : control.startFieldCode ? control.startFieldCode : qc.fieldCode,\r\n            'Compare' : CompareType.GreaterOrEqual, //GreaterOrEqual\r\n            'Value' : drv.startTime,\r\n            'Relation' : RelationType.And, //and\r\n            'Expresstype': ValueType.Value\r\n        });\r\n        drv.endTime && arr.push({\r\n            'FilterField' : control.endFieldCode ? control.endFieldCode : qc.fieldCode,\r\n            'Compare' : CompareType.LessOrEqual, //LessOrEqual\r\n            'Value' : drv.endTime,\r\n            'Relation' : RelationType.And,//and\r\n            'Expresstype': ValueType.Value\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\nimport { QueryCondition, DropDownListValue } from \"@farris/component-querycondition\";\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\n\r\nexport class DropDownHandler implements IQueryConditionHandler{\r\n    //qc.comparetypeåªæç­äºãä¸ç­äº\r\n    convert(qc: QueryCondition) {\r\n        const ddv = (qc.value as DropDownListValue);\r\n        const arr = [];\r\n        ddv.value.forEach(dv => {\r\n            arr.push({\r\n                'FilterField' : qc.fieldCode,\r\n                'Compare' : (qc.compareType || qc.compareType === 0) ? qc.compareType : CompareType.Equal,\r\n                'Value' : dv.value,\r\n                'Relation' : qc.compareType === CompareType.NotEqual ? RelationType.And : RelationType.Or,\r\n                'Expresstype':ValueType.Value\r\n            });\r\n        });\r\n        arr[0]['Lbracket'] = qc.Lbracket ? (qc.Lbracket + '(') :'(';\r\n        arr[arr.length -1]['Rbracket'] = qc.Rbracket ? (qc.Rbracket + ')') : ')';\r\n        arr[arr.length - 1]['Relation'] = (qc.relation || qc.relation === 0) ? qc.relation : RelationType.And;\r\n        return arr;\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\nimport { QueryCondition, NumberRangeValue } from \"@farris/component-querycondition\";\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\n\r\nexport class NumberRangeHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const arr = [];\r\n        const nrv = (qc.value as NumberRangeValue);\r\n        (nrv.startValue != null) && arr.push({\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.GreaterOrEqual, //GreaterOrEqual\r\n            'Value' : nrv.startValue,\r\n            'Relation' : RelationType.And, //and\r\n            'Expresstype': ValueType.Value\r\n        });\r\n        (nrv.endValue != null) && arr.push({\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.LessOrEqual, //LessOrEqual\r\n            'Value' : nrv.endValue,\r\n            'Relation' : RelationType.And,//and\r\n            'Expresstype': ValueType.Value\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\nimport { QueryCondition, SmartHelpValue } from \"@farris/component-querycondition\";\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\n\r\nexport class SmartHelpHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const shv = (qc.value as SmartHelpValue);\r\n        if(shv.value.length == 0) return [];\r\n\r\n        const arr = [];\r\n        if(shv.isInputText || shv.valueField == null){\r\n            arr.push({\r\n                'FilterField' : qc.fieldCode,\r\n                'Compare' : (qc.compareType || qc.compareType === 0) ? qc.compareType : CompareType.Like,\r\n                'Value' : shv.textValue,\r\n                'Relation' : (qc.relation || qc.relation === 0) ? qc.relation : RelationType.And ,\r\n                'Expresstype':ValueType.Value\r\n            });\r\n            return arr;\r\n        }else{\r\n            shv.getOriginalValue().split(',').forEach(id => {\r\n                id && arr.push({\r\n                    'FilterField' : qc.fieldCode,\r\n                    'Compare' : (qc.compareType || qc.compareType === 0) ? qc.compareType : CompareType.Equal,\r\n                    'Value' : id,\r\n                    'Relation' : qc.compareType === CompareType.NotEqual ? RelationType.And : RelationType.Or,\r\n                    'Expresstype':ValueType.Value\r\n                });\r\n            });\r\n            if(arr.length > 0){\r\n                arr[0]['Lbracket'] = qc.Lbracket ? (qc.Lbracket + '(') :'(';\r\n                arr[arr.length -1]['Rbracket'] = qc.Rbracket ? (qc.Rbracket + ')') : ')';\r\n                arr[arr.length - 1]['Relation'] = (qc.relation || qc.relation === 0) ? qc.relation : RelationType.And;\r\n                return arr;\r\n            }else{\r\n                return [];\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\nimport { QueryCondition, SingleYearValue } from \"@farris/component-querycondition\";\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\n\r\nexport class SingleYearHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const yv = (qc.value as SingleYearValue);\r\n        return [{\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : (qc.compareType || qc.compareType === 0) ? qc.compareType : CompareType.Equal,\r\n            'Value' : yv.yearValue,\r\n            'Relation' : (qc.relation || qc.relation === 0) ? qc.relation : RelationType.And, //and undefined\r\n            'Expresstype':ValueType.Value,\r\n            'Lbracket': qc.Lbracket || null,\r\n            'Rbracket': qc.Rbracket || null\r\n        }];\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\nimport { QueryCondition, CheckBoxValue } from \"@farris/component-querycondition\";\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\n\r\nexport class CheckBoxHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        //å¤éæ¡çqc.compareType åªæç­äº\r\n        const arr = [];\r\n        const tv = (qc.value as CheckBoxValue);\r\n        if(tv.value.length == 1)\r\n            return [{\r\n                'FilterField' : qc.fieldCode,\r\n                'Compare' : CompareType.Equal,\r\n                'Value' : tv.value[0],\r\n                'Relation' : (qc.relation || qc.relation === 0) ? qc.relation : RelationType.And,\r\n                'Expresstype':ValueType.Value,\r\n                'Lbracket': qc.Lbracket || null,\r\n                'Rbracket': qc.Rbracket || null\r\n            }];\r\n        tv.value.forEach(tvv => {\r\n            arr.push({\r\n                'FilterField' : qc.fieldCode,\r\n                'Compare' : CompareType.Equal,\r\n                'Value' : tvv,\r\n                'Relation' : RelationType.Or,\r\n                'Expresstype':ValueType.Value\r\n            });\r\n        });\r\n        arr[0]['Lbracket'] = qc.Lbracket ? (qc.Lbracket + '(') :'(';\r\n        arr[arr.length -1]['Rbracket'] = qc.Rbracket ? (qc.Rbracket + ')') : ')';\r\n        arr[arr.length -1]['Relation'] = (qc.relation || qc.relation === 0) ? qc.relation : RelationType.And;\r\n        return arr;\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\nimport { QueryCondition, SingleMonthValue } from \"@farris/component-querycondition\";\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\n\r\nexport class SingleMonthHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const mv = (qc.value as SingleMonthValue);\r\n        return [{\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' :(qc.compareType || qc.compareType === 0) ? qc.compareType : CompareType.Equal,\r\n            'Value' : mv.monthValue,\r\n            'Relation' : (qc.relation || qc.relation === 0) ? qc.relation : RelationType.And, //and undefined\r\n            'Expresstype':ValueType.Value,\r\n            'Lbracket': qc.Lbracket || null,\r\n            'Rbracket': qc.Rbracket || null\r\n        }];\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\nimport { QueryCondition, MonthRangeValue} from \"@farris/component-querycondition\";\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\n\r\nexport class MonthRangeHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const arr = [];\r\n        const mrv = (qc.value as MonthRangeValue);\r\n        mrv.startTime && arr.push({\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.GreaterOrEqual, //GreaterOrEqual\r\n            'Value' : mrv.startTime,\r\n            'Relation' : RelationType.And, //and\r\n            'Expresstype': ValueType.Value\r\n        });\r\n        mrv.endTime && arr.push({\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : CompareType.LessOrEqual, //LessOrEqual\r\n            'Value' : mrv.endTime,\r\n            'Relation' : RelationType.And,//and\r\n            'Expresstype': ValueType.Value\r\n        });\r\n\r\n        return arr;\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\nimport { QueryCondition, SingleDateTimeValue } from \"@farris/component-querycondition\";\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\n\r\nexport class SingleDateTimeHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const dtv = (qc.value as SingleDateTimeValue);\r\n        return [{\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : (qc.compareType || qc.compareType === 0) ? qc.compareType : CompareType.Equal,\r\n            'Value' : dtv.datetimeValue,\r\n            'Relation' : (qc.relation || qc.relation === 0) ? qc.relation : RelationType.And,//and undefined\r\n            'Expresstype':ValueType.Value,\r\n            'Lbracket': qc.Lbracket || null,\r\n            'Rbracket': qc.Rbracket || null\r\n        }];\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\nimport { QueryCondition, SingleNumberValue } from \"@farris/component-querycondition\";\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\n\r\nexport class SingleNumberHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const dtv = (qc.value as SingleNumberValue);\r\n        return [{\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : (qc.compareType || qc.compareType === 0) ? qc.compareType : CompareType.Equal,\r\n            'Value' : dtv.numValue,\r\n            'Relation' : (qc.relation || qc.relation === 0) ? qc.relation : RelationType.And, //and undefined\r\n            'Expresstype':ValueType.Value,\r\n            'Lbracket': qc.Lbracket || null,\r\n            'Rbracket': qc.Rbracket || null\r\n        }];\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\nimport { QueryCondition, SingleDateValue } from \"@farris/component-querycondition\";\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\nimport { format, addDays, addWeeks, addMonths, addYears, startOfMonth, endOfMonth, startOfYear, endOfYear, startOfWeek, endOfWeek, getDay } from 'date-fns'\r\nfunction getDate(dateValue, dtvFormat) {\r\n    let today = new Date()\r\n    // today.toLocaleString()\r\n    let result = []\r\n    //é¦åå¤æ­åªäºæ¯åä¸ªæ¥æï¼ä½¿ç¨equalå­å¥ä¸ä¸ªæ¥æå³å¯\r\n    if (dateValue.isFirstDay || dateValue.isLastDay) {\r\n\r\n        let switchValue = dateValue.dateType + '-' + (dateValue.isFirstDay ? 'first' : 'last')\r\n        switch (switchValue) {\r\n            case 'week-first':\r\n                if(getDay(today) === 0) {\r\n                    today = addDays(today, -1)\r\n                }\r\n                result.push(addDays(startOfWeek(today), 1))\r\n                break;\r\n            case 'week-last':\r\n                if(getDay(today) === 0) {\r\n                    today = addDays(today, -1)\r\n                }\r\n                result.push(addDays(endOfWeek(today), 1))\r\n                break;\r\n            case 'month-first':\r\n                result.push(startOfMonth(today))\r\n                break;\r\n            case 'month-last':\r\n                result.push(endOfMonth(today))\r\n                break;\r\n            case 'year-first':\r\n                result.push(startOfYear(today))\r\n                break;\r\n            case 'year-last':\r\n                result.push(endOfYear(today))\r\n                break;\r\n            default:\r\n                result.push(today)\r\n\r\n        }\r\n    } else if (dateValue.dateType === 'day' && dateValue.period === 'present') {\r\n        //ä»å¤©\r\n        result.push(today)\r\n    } else if (dateValue.dateType === 'day' && dateValue.count === 1) {\r\n        //æ¨å¤©ãæå¤©\r\n        let _date = addDays(today, dateValue.period === 'future' ? 1 : -1)\r\n        result.push(_date)\r\n    } else if (dateValue.period === 'present') {\r\n        //æ¬å¨ãæ¬æãæ¬å¹´\r\n        switch (dateValue.dateType) {\r\n            case 'week':\r\n                result.push(startOfWeek(today), endOfWeek(today))\r\n                break;\r\n            case 'month':\r\n                result.push(startOfMonth(today), endOfMonth(today))\r\n                break;\r\n            case 'year':\r\n                result.push(startOfYear(today), endOfYear(today))\r\n                break;\r\n            default:\r\n                result.push(today)\r\n        }\r\n\r\n    } else {\r\n        let switchValue = dateValue.dateType + '-' + dateValue.period\r\n        switch (switchValue) {\r\n            case 'day-previous':\r\n                result.push(addDays(today, dateValue.count * -1), addDays(today, -1))\r\n                break;\r\n            case 'day-future':\r\n                result.push(addDays(today, 1), addDays(today, dateValue.count))\r\n                break;\r\n            case 'week-previous':\r\n                result.push(addWeeks(today, dateValue.count * -1), addDays(today, -1))\r\n                break;\r\n            case 'week-future':\r\n                result.push(addDays(today, 1), addWeeks(today, dateValue.count))\r\n                break;\r\n            case 'month-previous':\r\n                result.push(addMonths(today, dateValue.count * -1), addDays(today, -1))\r\n                break;\r\n            case 'month-future':\r\n                result.push(addDays(today, 1), addMonths(today, dateValue.count))\r\n                break;\r\n            case 'year-previous':\r\n                result.push(addYears(today, dateValue.count * -1), addDays(today, -1))\r\n                break;\r\n            case 'year-future':\r\n                result.push(addDays(today, 1), addYears(today, dateValue.count))\r\n                break;\r\n            default:\r\n                result.push(today)\r\n        \r\n        }\r\n    }\r\n\r\n    result = result.map(item => format(item, dtvFormat.returnFormat || 'yyyy-MM-dd'))\r\n    return result\r\n\r\n};\r\nexport class SingleDateHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const arr = []\r\n        const dtv = (qc.value as SingleDateValue);\r\n        if(typeof(dtv.dateValue) !== 'string') {\r\n            let _dateValue = getDate(dtv.dateValue, qc.control)\r\n            _dateValue.length === 1 && arr.push({\r\n                'FilterField' : qc.fieldCode,\r\n                'Compare' : qc.compareType ? CompareType[qc.compareType] : CompareType.Equal,\r\n                'Value' : _dateValue[0],\r\n                'Relation' : qc.relation ? RelationType[qc.relation] : RelationType.And, //and undefined\r\n                'Expresstype':ValueType.Value,\r\n                'Lbracket': qc.Lbracket || null,\r\n                'Rbracket': qc.Rbracket || null\r\n            })\r\n            _dateValue.length === 2 && arr.push({\r\n                'FilterField' : qc.fieldCode,\r\n                'Compare' : CompareType.GreaterOrEqual, //GreaterOrEqual\r\n                'Value' : _dateValue[0],\r\n                'Relation' : RelationType.And, //and\r\n                'Expresstype': ValueType.Value,\r\n                'Lbracket': qc.Lbracket ? (qc.Lbracket + '(') :'('\r\n            }, {\r\n                'FilterField' : qc.fieldCode,\r\n                'Compare' : CompareType.LessOrEqual, //LessOrEqual\r\n                'Value' : _dateValue[1],\r\n                'Relation' : RelationType.And,//and\r\n                'Expresstype': ValueType.Value,\r\n                'Rbracket': qc.Rbracket ? (qc.Rbracket + ')') : ')'\r\n            });\r\n            \r\n        } else {\r\n            arr.push({\r\n                'FilterField' : qc.fieldCode,\r\n                'Compare' : (qc.compareType || qc.compareType === 0) ? qc.compareType : CompareType.Equal,\r\n                'Value' : dtv.dateValue,\r\n                'Relation' : (qc.relation || qc.relation === 0) ? qc.relation : RelationType.And, //and undefined\r\n                'Expresstype':ValueType.Value,\r\n                'Lbracket': qc.Lbracket || null,\r\n                'Rbracket': qc.Rbracket || null\r\n            })\r\n        }\r\n        return arr;\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\nimport { QueryCondition, ComboLookUpValue } from \"@farris/component-querycondition\";\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\n\r\nexport class ComboLookUpHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        //å¸®å©çqc.comparetypeåªæç­äºãä¸ç­äº\r\n        const cluv = (qc.value as ComboLookUpValue);\r\n        if(cluv.value.length == 0 || !cluv.valueField){\r\n            return [];\r\n        }else{\r\n            const arr = [];\r\n            cluv.getOriginalValue().split(',').forEach(id => {\r\n                id && arr.push({\r\n                    'FilterField' : qc.fieldCode,\r\n                    'Compare' : (qc.compareType || qc.compareType === 0) ? qc.compareType : CompareType.Equal,\r\n                    'Value' : id,\r\n                    'Relation' : qc.compareType === CompareType.NotEqual ? RelationType.And : RelationType.Or,\r\n                    'Expresstype':ValueType.Value\r\n                });\r\n            });\r\n            if(arr.length > 0){\r\n                arr[0]['Lbracket'] = qc.Lbracket ? (qc.Lbracket + '(') :'(';\r\n                arr[arr.length -1]['Rbracket'] = qc.Rbracket ? (qc.Rbracket + ')') : ')';\r\n                arr[arr.length - 1]['Relation'] = (qc.relation || qc.relation === 0) ? qc.relation : RelationType.And;\r\n                return arr;\r\n            }else{\r\n                return [];\r\n            }\r\n        }\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\nimport { QueryCondition, RadioValue } from \"@farris/component-querycondition\";\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\n\r\nexport class RadioHandler implements IQueryConditionHandler{\r\n    convert(qc: QueryCondition) {\r\n        const arr = [];\r\n        const rv = (qc.value as RadioValue);\r\n        return [{\r\n            'FilterField' : qc.fieldCode,\r\n            'Compare' : (qc.compareType || qc.compareType === 0) ? qc.compareType : CompareType.Equal,\r\n            'Value' : rv.value,\r\n            'Relation' : (qc.relation || qc.relation === 0) ? qc.relation : RelationType.And,\r\n            'Expresstype':ValueType.Value,\r\n            'Lbracket': qc.Lbracket || null,\r\n            'Rbracket': qc.Rbracket || null\r\n        }];\r\n    }\r\n}","import { IQueryConditionHandler } from \"./iquerycondition.handler\";\r\nimport { QueryCondition, InputGroupValue } from \"@farris/component-querycondition\";\r\nimport { CompareType } from '../enum/compare-type.enum';\r\nimport { ValueType } from '../enum/value-type.enum';\r\nimport { RelationType } from '../enum/relation-type.enum';\r\n\r\nexport class InputGroupHandler implements IQueryConditionHandler {\r\n  //qc.comparetypeåªæç­äºãç¸ä¼¼\r\n  convert(qc: QueryCondition) {\r\n    const igv = (qc.value as InputGroupValue);\r\n    const arr = [];\r\n\r\n    if (igv.isInputText || igv.textField == null) {\r\n      arr.push({\r\n        'FilterField': qc.fieldCode,\r\n        'Compare': (qc.compareType || qc.compareType === 0) ? qc.compareType : CompareType.Like,\r\n        'Value': igv.textValue,//encodeURIComponent(igv.textValue),\r\n        'Relation': (qc.relation || qc.relation === 0) ? qc.relation : RelationType.And,\r\n        'Expresstype': ValueType.Value,\r\n        'Lbracket': qc.Lbracket || null,\r\n        'Rbracket': qc.Rbracket || null\r\n      });\r\n      return arr;\r\n    }\r\n    else {\r\n      igv.getOriginalValue().split(',').forEach(itemValue => {\r\n        itemValue && arr.push({\r\n          'FilterField': qc.fieldCode,\r\n          'Compare': (qc.compareType || qc.compareType === 0) ? qc.compareType : CompareType.Equal,\r\n          'Value': itemValue,\r\n          'Relation': qc.compareType === CompareType.NotEqual ? RelationType.And : RelationType.Or,\r\n          'Expresstype': ValueType.Value\r\n        });\r\n      });\r\n      if (arr.length > 0) {\r\n        arr[0]['Lbracket'] = qc.Lbracket ? (qc.Lbracket + '(') :'(';\r\n        arr[arr.length -1]['Rbracket'] = qc.Rbracket ? (qc.Rbracket + ')') : ')';\r\n        arr[arr.length - 1]['Relation'] = (qc.relation || qc.relation === 0) ? qc.relation : RelationType.And;\r\n        return arr;\r\n      } else {\r\n        return [];\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { ControlType } from \"@farris/component-querycondition\";\r\nimport { IQueryConditionHandler } from \"./handlers/iquerycondition.handler\";\r\nimport { TextHandler } from \"./handlers/text.handler\";\r\nimport { DateRangeHandler } from \"./handlers/daterage.handler\";\r\nimport { DropDownHandler } from \"./handlers/dropdown.handler\";\r\nimport { NumberRangeHandler } from \"./handlers/numberrage.handler\";\r\nimport { SmartHelpHandler } from \"./handlers/smarthelp.handler\";\r\nimport { SingleYearHandler } from './handlers/single-year.handler';\r\nimport { CheckBoxHandler } from './handlers/checkbox.handler';\r\nimport { SingleMonthHandler } from './handlers/single-month.handler';\r\nimport { MonthRangeHandler } from './handlers/monthrange.handler';\r\nimport { SingleDateTimeHandler } from './handlers/single-date-time.handler';\r\nimport { SingleNumberHandler } from './handlers/single-number.handler';\r\nimport { SingleDateHandler } from './handlers/single-date.handler';\r\nimport { ComboLookUpHandler } from './handlers/combolookup.handler';\r\nimport { RadioHandler } from './handlers/radio.handler';\r\nimport { InputGroupHandler } from './handlers/inputgroup.handler';\r\n\r\nexport class QueryConditionHandlerFactory {\r\n\r\n    private static _instance: QueryConditionHandlerFactory = null;\r\n    private queryConditionHandlerMapping: Map<ControlType, IQueryConditionHandler> = new Map<ControlType, IQueryConditionHandler>();\r\n    private constructor(){\r\n        this.queryConditionHandlerMapping.set(ControlType.Text, new TextHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.InputGroup, new InputGroupHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.DateRange, new DateRangeHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.DateTimeRange, new DateRangeHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.DropDownList, new DropDownHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.NumberRange, new NumberRangeHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.SmartHelp, new SmartHelpHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.SingleYear, new SingleYearHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.BoolCheck, new CheckBoxHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.SingleMonth, new SingleMonthHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.MonthRange, new MonthRangeHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.SingleDateTime, new SingleDateTimeHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.SingleNumber, new SingleNumberHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.SingleDate, new SingleDateHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.ComboLookUp, new ComboLookUpHandler());\r\n        this.queryConditionHandlerMapping.set(ControlType.Radio, new RadioHandler());\r\n    }\r\n    public static getInstance(){\r\n        if(!QueryConditionHandlerFactory._instance){\r\n            QueryConditionHandlerFactory._instance = new QueryConditionHandlerFactory();\r\n        }\r\n        return QueryConditionHandlerFactory._instance;\r\n    }\r\n\r\n    getHandler(controlType: ControlType): IQueryConditionHandler{\r\n        return this.queryConditionHandlerMapping.get(controlType);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { QueryCondition } from '@farris/component-querycondition';\r\nimport { IQueryConditionHandler } from './handlers/iquerycondition.handler';\r\nimport { QueryConditionHandlerFactory } from './querycondition.handler.factory';\r\nimport { FrameContext } from '@farris/devkit';\r\nimport { IQuerySolutionHandler,QuerySolutionComponent } from '@gsp-cmp/querysolution';\r\nimport { FrameworkSessionService } from '@farris/bef';\r\n\r\n@Injectable()\r\nexport class QuerySolutionService implements IQuerySolutionHandler {\r\n\r\n  constructor(\r\n    private frameContext: FrameContext,\r\n    private frameworkSessionService: FrameworkSessionService\r\n  ) {\r\n\r\n  }\r\n\r\n  getUserSessionId(): string {\r\n    return this.frameworkSessionService.getUserSessionId();\r\n  }\r\n\r\n  public setFilterConditions(params: Array<QueryCondition>): void {\r\n    let queryConditionHandler: IQueryConditionHandler;\r\n    const filterConditionList = [];\r\n    params.forEach(qc => {\r\n      if (!qc.value.isEmpty()) {\r\n        queryConditionHandler = QueryConditionHandlerFactory.getInstance().getHandler(qc.control.getControlType());\r\n        queryConditionHandler && filterConditionList.push(...queryConditionHandler.convert(qc));\r\n      }\r\n    });\r\n    //è®¾ç½®å°NgCommand params.filterå±æ§ä¸ï¼{UISTATE~/root-component/filterConditionList}\r\n    this.frameContext.uiState['filterConditionList'] = JSON.stringify(filterConditionList);\r\n    // const originalConditions = this.getOriginalQueryConditions(filterConditionList);\r\n    this.frameContext.uiState['originalFilterConditionList'] = JSON.stringify(filterConditionList);\r\n  }\r\n\r\n  public setCurrentQueryConditions(conditions: QueryCondition[]): void {\r\n    this.frameContext.uiState['currentQueryConditions'] = conditions;\r\n  }\r\n  /**\r\n   * è¿åè¿æ»¤æ¡ä»¶ä¸­çencode\r\n   * @param conditions æ¥è¯¢æ¹æ¡æé å®çè¿æ»¤æ¡ä»¶\r\n   */\r\n  // private getOriginalQueryConditions(conditions: Array<any>): Array<any> {\r\n  //   conditions = JSON.parse(JSON.stringify(conditions));\r\n  //   if (conditions && Array.isArray(conditions) && conditions.length > 0) {\r\n  //     conditions = conditions.map((item) => {\r\n  //       if (item.hasOwnProperty('Value')) {\r\n  //         item.Value = decodeURIComponent(item.Value);\r\n  //       } else if (item.hasOwnProperty('value')) {\r\n  //         const value = item.value;\r\n  //         delete item.value;\r\n  //         item.Value = decodeURIComponent(value);\r\n  //       }\r\n  //       return item;\r\n  //     });\r\n  //   }\r\n  //   return conditions;\r\n  // }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AppContext, FrameContext } from '@farris/devkit';\r\nimport { of } from 'rxjs';\r\nimport { tap, delay } from 'rxjs/operators';\r\n\r\n/**\r\n * ç»æè¡¨åç¼è¾ç¶ææå¡\r\n */\r\n@Injectable()\r\nclass EndEditService {\r\n  constructor(private frameContext: FrameContext) {\r\n  }\r\n  /**\r\n   * ç»æç¼è¾\r\n   */\r\n  public endEdit() {\r\n    const appContext: AppContext = this.frameContext && this.frameContext.getFormAppContext();\r\n    return of(null).pipe(\r\n      tap(() => {\r\n        if (appContext) {\r\n          appContext.messagePipe.next({ type: 'endEdit' });\r\n        }\r\n      }),\r\n      // todo: ä¸åºè¯¥ä½¿ç¨delayï¼åºè¯¥ä¸²æµ\r\n      delay(120)\r\n    );\r\n  }\r\n}\r\nexport { EndEditService };\r\n","import { Injectable } from '@angular/core';\r\nimport { ViewModel } from '@farris/devkit';\r\nimport { BefRepository } from '@farris/bef';\r\nimport { of, Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class RemoteSummaryService {\r\n  constructor(private viewModel: ViewModel) { }\r\n  /**\r\n   * æå¡å¨ç«¯åè®¡\r\n   * @param methodName æå¡å¨ç«¯åè®¡èªå®ä¹å¨ä½åç§°\r\n   * @param filters è¿æ»¤æ¡ä»¶\r\n   */\r\n  public summary(methodName: string, filters: any) {\r\n    const repository = this.viewModel.frameContext.repository as BefRepository<any> || null;\r\n    if (repository) {\r\n      const proxy = repository.proxy;\r\n      if (proxy && typeof proxy[methodName] === 'function') {\r\n        return proxy[methodName](filters) as Observable<any>;\r\n      }\r\n    }\r\n    return of(null);\r\n  }\r\n}\r\n","import { Injectable, Injector, Optional } from '@angular/core';\r\nimport { BindingList, ViewModel, BindingObject, Repository, Entity, FrameContext, BindingData, AppContext, BindingProperty, DataTypeInfo, createEntities, EntityList } from '@farris/devkit';\r\nimport { from, EMPTY, concat, of, Subject, Observable, throwError } from 'rxjs';\r\nimport { concatMap, catchError, tap, switchMap, last, map, delay, takeLast } from 'rxjs/operators';\r\nimport { BefRepository, ResponseInfo } from '@farris/bef';\r\nimport { BatchEditDialogService } from '@farris/ui-batch-edit-dialog';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\nimport { ComponentManagerService } from './component-manager.service';\r\nimport { FormLoadingService } from './form-loading/form-loading.service';\r\nimport { LanguageService } from './languag.service';\r\nimport { FormNotifyService } from './form-notify.service';\r\nimport { UploadService } from '@gsp-svc/formdoc-upload';\r\nimport { FormErrorService } from './error';\r\n\r\n// tslint:disable: max-line-length\r\n/**\r\n * æ¹éç¼è¾æå¡\r\n */\r\n@Injectable()\r\nexport class BatchEditService {\r\n  private formLoadingService: FormLoadingService;\r\n  private onHelpClose: Subject<any>;\r\n  constructor(\r\n    private injector: Injector,\r\n    private componentManagerService: ComponentManagerService,\r\n    private viewModel: ViewModel,\r\n    private repository: Repository<any>,\r\n    private batchEditDialogService: BatchEditDialogService,\r\n    private dateService: DateTimeHelperService,\r\n    private languageService: LanguageService,\r\n    private formNotifyService: FormNotifyService,\r\n    private fileUploadService: UploadService\r\n  ) {\r\n    this.formLoadingService = this.injector.get<FormLoadingService>(FormLoadingService, null);\r\n    if (!this.languageService) {\r\n      this.languageService = LanguageService.getInstance();\r\n    }\r\n    if (!this.formNotifyService) {\r\n      this.formNotifyService = this.injector.get<FormNotifyService>(FormNotifyService, null);\r\n    }\r\n    this.onHelpClose = new Subject<any>();\r\n    this.onHelpClose.subscribe(result => {\r\n      const { frameId = '', mapFields = '', data = [] } = result || {};\r\n      this.onHelpCloseHandler(frameId, mapFields, data);\r\n    });\r\n  }\r\n  private get formErrorService() {\r\n    return this.injector && this.injector.get<FormErrorService>(FormErrorService, null);\r\n  }\r\n  /**\r\n   * æå¼æ¹éç¼è¾å¯¹è¯æ¡\r\n   * @param frameId frameId\r\n   */\r\n  public openBatchEditDialog(frameId: string, enableDictPicking: boolean | string = false) {\r\n    if (!frameId) {\r\n      throw new Error('frameId is required.');\r\n    }\r\n    if (typeof enableDictPicking === 'string') {\r\n      enableDictPicking = (enableDictPicking === 'true' ? true : false);\r\n    }\r\n    if (this.batchEditDialogService) {\r\n      let columns = [];\r\n      if (this.viewModel) {\r\n        const gridFrameContext: FrameContext = this.viewModel.frameContext.root.appContext.frameContextManager.getFrameContextById(frameId);\r\n        const gridViewModel = gridFrameContext.viewModel;\r\n        if (gridViewModel && gridViewModel.hasOwnProperty('dataGridColumnsName')) {\r\n          // tslint:disable-next-line: no-string-literal\r\n          const gridColumnsAttrName = gridViewModel['dataGridColumnsName'];\r\n          columns = gridViewModel[gridColumnsAttrName];\r\n        } else if (gridViewModel && gridViewModel.hasOwnProperty('dataGridColumns')) {\r\n          columns = gridViewModel['dataGridColumns'];\r\n        }\r\n        const ids: string[] = gridViewModel.uiState['ids'] || [];\r\n        if (!ids || ids.length < 1) {\r\n          this.formNotifyService.warning(this.languageService.plsCheckBatchEditRows, { hideTitle: true });\r\n          return EMPTY;\r\n        }\r\n        const dialogRef: any = this.batchEditDialogService.batchEdit(columns, {\r\n          rows: ids.length,\r\n          enableDictPicking,\r\n          onConfirm: (inputs: Array<any>) => {\r\n            if (Array.isArray(ids) && ids.length > 0) {\r\n              // console.log('openBatchEditDialog', inputs);\r\n              const appContext = this.viewModel.frameContext.appContext;\r\n              appContext.changeDetectionController.detach();\r\n              inputs.forEach(input => {\r\n                this.updateBindingData(input, ids);\r\n              });\r\n              appContext.changeDetectionController.reattach();\r\n            }\r\n            dialogRef.close();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * æå¼éèå¸®å©\r\n   * @param helpId å¸®å©id\r\n   */\r\n  public openHiddenHelp(helpId: string) {\r\n    if (!helpId) {\r\n      throw new Error('Argument error,helpId can`t be empty');\r\n    }\r\n    const componentManagerService = this.componentManagerService.getControl(helpId);\r\n    if (componentManagerService) {\r\n      componentManagerService.showDialog();\r\n    } else {\r\n      throw new Error(`the component which id is ${helpId} can't be found!`);\r\n    }\r\n  }\r\n  /**\r\n   * æ¸ç©ºå¸®å©å¾éï¼åªè½æè½½å°å¸®å©åäºä»¶ï¼\r\n   */\r\n  public clearHelpSelections() {\r\n    const self: any = this;\r\n    const helpElement = self.context && self.context.eventParam && self.context.eventParam.instance || null;\r\n    if (helpElement) {\r\n      helpElement.displayValue = '';\r\n    }\r\n  }\r\n  /**\r\n   * å¾éå½åè¡\r\n   * @param frameId frameId\r\n   * @param mapFields å­æ®µæ å°\r\n   * @param primaryKeyValue å¸®å©ä¸»é®å­æ®µ\r\n   */\r\n  public checkCurrentRow(frameId: string, mapFields: string, primaryKeyValue: string) {\r\n    const self: any = this;\r\n    const helpElement = self.context && self.context.eventParam && self.context.eventParam.instance || null;\r\n    if (!primaryKeyValue) {\r\n      primaryKeyValue = 'id';\r\n    }\r\n    const mappings = JSON.parse(mapFields);\r\n    if (helpElement) {\r\n      frameId = frameId || this.viewModel.frameContext.frameId;\r\n      if (frameId) {\r\n        const frameContext = this.getFrameContextById(frameId);\r\n        if (frameContext) {\r\n          const bindingPath = frameContext.viewModel.bindingPath;\r\n          if (bindingPath) {\r\n            const bindingPaths = bindingPath.split('/').filter(p => p);\r\n            const bindingList = frameContext.bindingData.getValue(bindingPaths) as BindingList;\r\n            const currentRow = bindingList.currentItem;\r\n            const path = mappings[primaryKeyValue];\r\n            if (path) {\r\n              const value = this.getValueByPath(currentRow, path);\r\n              helpElement.displayValue = value;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * ä»¥å¸®å©å¾éæ°æ®ä½ä¸ºä¾æ®ï¼æ¹éæ°å¢ä¸»è¡¨æ°æ®\r\n   * @param frameId ä¸»è¡¨æå¨frameçid\r\n   * @param mapFields å¸®å©å­æ®µä¸ä¸»è¡¨å­æ®µæ å°\r\n   * @description ä»¥å¸®å©å¾éæ°æ®ä½ä¸ºä¾æ®ï¼æ¹éæ°å¢ä¸»è¡¨æ°æ®\r\n   */\r\n  public batchAppend(frameId: string, mapFields: string) {\r\n    const self: any = this;\r\n    const result = self.context && self.context.eventParam || [];\r\n    if (!mapFields) {\r\n      throw new Error('mapFields can`t be empty.');\r\n    }\r\n    if (result && Array.isArray(result) && result.length > 0) {\r\n      const mappings = JSON.parse(mapFields);\r\n      // ä¸æ¯bindingPathåæframeIdå¤ç\r\n      let bindingPath = '/';\r\n      const appContext = this.injector.get<AppContext>(AppContext, null);\r\n      if (appContext) {\r\n        const frameContext = appContext.frameContextManager.getFrameContextById(frameId);\r\n        if (frameContext) {\r\n          bindingPath = frameContext.viewModel.bindingPath || '/';\r\n        } else {\r\n          throw new Error('frameId is invalid!');\r\n        }\r\n      }\r\n      const defaultValues = [];\r\n      result.forEach((item) => {\r\n        const defaultValue = {};\r\n        Object.keys(mappings).forEach((prop: string) => {\r\n          const value = this.getValueByPath(item, prop);\r\n          const fields = mappings[prop];\r\n          const groups: any[] = fields.split(',').filter(p => p);\r\n          groups.forEach(group => {\r\n            const paths = group.split('.').filter(p => p);\r\n            this.setValueByPath(defaultValue, paths.join('.'), value);\r\n          });\r\n        });\r\n        defaultValues.push(defaultValue);\r\n      });\r\n      this.formLoadingService.show();\r\n      return this.repository.batchAppend(defaultValues).pipe(\r\n        tap(() => this.formLoadingService.hide()),\r\n        map(() => true)\r\n      );\r\n    }\r\n    return of(true);\r\n  }\r\n  /**\r\n   * ä»¥å¸®å©å¾éæ°æ®ä½ä¸ºä¾æ®ï¼æ¹éæ°å¢ä»è¡¨/ä»ä»è¡¨\r\n   * @param frameId ä»è¡¨/ä»ä»è¡¨æå¨frameçid\r\n   * @param mapFields å¸®å©å­æ®µä¸ä»è¡¨/ä»ä»è¡¨å­æ®µæ å°\r\n   * @description ä»¥å¸®å©å¾éæ°æ®ä½ä¸ºä¾æ®ï¼æ¹éæ°å¢ä»è¡¨/ä»ä»è¡¨\r\n   */\r\n  public batchAppendByPathBasedOnHelpSelections(frameId: string, mapFields: string) {\r\n    const self: any = this;\r\n    const result = self.context && self.context.eventParam || [];\r\n    if (!mapFields) {\r\n      throw new Error('mapFields can`t be empty.');\r\n    }\r\n    if (result && Array.isArray(result) && result.length > 0) {\r\n      const mappings = JSON.parse(mapFields);\r\n      // ä¸æ¯bindingPathåæframeIdå¤ç\r\n      let bindingPath = '/';\r\n      const appContext = this.injector.get<AppContext>(AppContext, null);\r\n      if (appContext) {\r\n        const frameContext = appContext.frameContextManager.getFrameContextById(frameId);\r\n        if (frameContext) {\r\n          bindingPath = frameContext.viewModel.bindingPath || '/';\r\n        } else {\r\n          throw new Error('frameId is invalid!');\r\n        }\r\n      }\r\n      const defaultValues = [];\r\n      result.forEach((item) => {\r\n        const defaultValue = {};\r\n        Object.keys(mappings).forEach((prop: string) => {\r\n          const value = this.getValueByPath(item, prop);\r\n          const fields = mappings[prop];\r\n          const groups: any[] = fields.split(',').filter(p => p);\r\n          groups.forEach(group => {\r\n            const paths = group.split('.').filter(p => p);\r\n            this.setValueByPath(defaultValue, paths.join('.'), value);\r\n          });\r\n        });\r\n        defaultValues.push(defaultValue);\r\n      });\r\n      this.formLoadingService.show();\r\n      const path = this.buildPath(bindingPath, this.viewModel.bindingData.list.currentId);\r\n      return this.repository.batchAppendByPath(path, defaultValues).pipe(\r\n        tap(() => this.formLoadingService.hide()),\r\n        map(() => true)\r\n      );\r\n    }\r\n    return of(true);\r\n  }\r\n  /**\r\n   * æ¹éæ°å¢å¸¦éä»¶çä»è¡¨æä»ä»è¡¨æ°æ®\r\n   * @param frameId\r\n   * @param mapFields\r\n   * @param attachmentInfoFieldPath éä»¶udtå­æ®µè·¯å¾ï¼å¯æ¯æå¤ä¸ªï¼ä»¥éå·åé\r\n   * @param rootId éä»¶å­å¨æ ¹ç®å½\r\n   * @param path éä»¶å­å¨ç®å½\r\n   * @description æ¹éæ°å¢å¸¦éä»¶çä»è¡¨æä»ä»è¡¨æ°æ®ä¸æ¹éæ°å¢ä»è¡¨ä»ä»è¡¨æ°æ®ä¸è´ï¼å¨æ¹éæ°å¢æ°æ®çåºç¡ä¸å¢å äºéä»¶å¤å¶\r\n   * @todo ç®åéä»¶å¤å¶å¨åç«¯è°ç¨ï¼ä¼åèµ·å¤ä¸ªè¯·æ±ï¼ä¸å­å¨å®å¨é®é¢ï¼åç»­åºå¨voéæ\r\n   */\r\n  public batchAppendByPathWithAttachment(frameId: string, mapFields: string, attachmentInfoFieldPath: string, rootId: string, path: string) {\r\n    const self: any = this;\r\n    const result = self.context && self.context.eventParam || [];\r\n    if (!mapFields) {\r\n      throw new Error('mapFields can`t be empty.');\r\n    }\r\n    if (!attachmentInfoFieldPath) {\r\n      throw new Error('éä»¶udtå­æ®µè·¯å¾ä¸è½ä¸ºç©º');\r\n    }\r\n    if (result && Array.isArray(result) && result.length > 0) {\r\n      const mappings = JSON.parse(mapFields);\r\n      let bindingPath = '/';\r\n      const appContext = this.injector.get<AppContext>(AppContext, null);\r\n      // ä¿®æ­£bindingPath\r\n      if (appContext) {\r\n        const frameContext = appContext.frameContextManager.getFrameContextById(frameId);\r\n        if (frameContext) {\r\n          bindingPath = frameContext.viewModel.bindingPath || '/';\r\n        } else {\r\n          throw new Error('frameId is invalid!');\r\n        }\r\n      }\r\n      // å¤çéä»¶udtå­æ®µ\r\n      const attachmentFields = attachmentInfoFieldPath.split(',').filter(p => p).map(path => path.split('/').pop());\r\n      this.formLoadingService.show();\r\n      // åå¤å¶éä»¶\r\n      const copyFiles$ = from(result).pipe(concatMap((item => {\r\n        return this.copyRowFiles(item, attachmentFields, rootId, path).pipe(\r\n          catchError((error) => {\r\n            this.formLoadingService.hide();\r\n            let cafError = error.error;\r\n            if (typeof cafError === 'string') {\r\n              cafError = JSON.parse(cafError);\r\n            }\r\n            if (this.formErrorService) {\r\n              this.formErrorService.exception(cafError.message || this.languageService.copyFailed, error);\r\n            }\r\n            return throwError(error);\r\n          })\r\n        );\r\n      })));\r\n      return copyFiles$.pipe(takeLast(1)).pipe(switchMap(() => {\r\n        // æ¼è£é»è®¤å¼\r\n        const defaultValues = this.buildDefaultValues(result, mappings);\r\n        const path = this.buildPath(bindingPath, this.viewModel.bindingData.list.currentId);\r\n        return this.repository.batchAppendByPath(path, defaultValues).pipe(\r\n          tap(() => this.formLoadingService.hide()),\r\n          map(() => true)\r\n        );\r\n      }));\r\n    }\r\n    return of(true);\r\n  }\r\n  /**\r\n   * æé é»è®¤å¼æ°ç»\r\n   * @param selectedValues\r\n   * @param mapFields\r\n   * @returns\r\n   */\r\n  private buildDefaultValues(selectedValues: any[], mapFields: { [prop: string]: any }): any[] {\r\n    const defaultValues = [];\r\n    selectedValues.forEach((item) => {\r\n      const defaultValue = {};\r\n      Object.keys(mapFields).forEach((prop: string) => {\r\n        // å¸®å©æ°æ®\r\n        const value = this.getValueByPath(item, prop);\r\n        // ç®æ å­æ®µ\r\n        const fields = mapFields[prop];\r\n        const groups: any[] = fields.split(',').filter(p => p);\r\n        groups.forEach(group => {\r\n          const paths = group.split('.').filter(p => p);\r\n          this.setValueByPath(defaultValue, paths.join('.'), value);\r\n        });\r\n      });\r\n      defaultValues.push(defaultValue);\r\n    });\r\n    return defaultValues;\r\n  }\r\n  /**\r\n   * å¤å¶è¡ä¸­ææéä»¶\r\n   * @param row\r\n   * @param attachmentFields\r\n   * @param rootId\r\n   * @param path\r\n   * @returns\r\n   */\r\n  private copyRowFiles(row: any, attachmentFields: string[], rootId: string, path: string) {\r\n    return from(attachmentFields).pipe(\r\n      concatMap((field: string) => {\r\n        const attachmentId = this.getValueByPath(row, `${field}.attachmentId`);\r\n        if (attachmentId) {\r\n          // åéå¤å¶éä»¶çè¯·æ±ï¼è·åéä»¶id\r\n          return this.fileUploadService.copyFile(attachmentId, rootId, path).pipe(\r\n            tap((attachmentId: string) => {\r\n              // å¤å¶æå\r\n              this.setValueByPath(row, [field, 'attachmentId'].join('.'), attachmentId);\r\n            }\r\n            ));\r\n        } else {\r\n          return of(null);\r\n        }\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * è¡åå¸®å©å¤éæ¹éæ°å¢ææ¿æ¢å­è¡¨æ°æ®\r\n   * @param frameId frameId, optional,ä¸ºç©ºæ¶ä½¿ç¨å½ä»¤æ§è¡æ¶æå¨çä¸ä¸æ\r\n   * @param mapFields å­æ®µæ å°\r\n   * @param primaryKey å¸®å©ä¸»é®å­æ®µï¼é»è®¤ä¸ºid\r\n   * @returns\r\n   */\r\n  public batchAppendBasedOnRowHelpSelections(frameId: string, mapFields: string) {\r\n    const self: any = this;\r\n    let result: any[] = self.context && self.context.eventParam || [];\r\n    if (!mapFields) {\r\n      return of(true);\r\n    }\r\n    const mappings = JSON.parse(mapFields);\r\n    if (!mappings || !mappings.hasOwnProperty('id')) {\r\n      return of(true);\r\n    }\r\n    frameId = frameId || this.viewModel.frameContext.frameId;\r\n    if (!frameId) {\r\n      return of(true);\r\n    }\r\n    const frameContext = this.getFrameContextById(frameId);\r\n    if (!frameContext) {\r\n      return of(true);\r\n    }\r\n    setTimeout(() => {\r\n      this.endEdit(frameContext).subscribe(() => {\r\n        setTimeout(() => {\r\n          if (result && Array.isArray(result) && result.length > 0) {\r\n            const bindingPath = frameContext.viewModel.bindingPath || '/';\r\n            const bindingPaths = bindingPath.split('/').filter(p => p);\r\n            const defaultValues = [];\r\n            // è·åå½åè¡\r\n            const bindingList: BindingList = frameContext.bindingData.getValue(bindingPaths) as BindingList;\r\n            const currentRow = bindingList.currentItem;\r\n            const currentRowId = bindingList.currentId;\r\n            const currentEntity = this.getEntityByPath(frameContext, bindingPaths, currentRowId);\r\n            const headItem = result[0];\r\n            // å¦æä»å¾éä¸æ¡ï¼ååºæ¿æ¢å½åè¡çæ å°\r\n            if (result.length === 1) {\r\n              // this.mappingRow(headItem, mappings, currentEntity, bindingPath);\r\n              const data = headItem;\r\n              Object.keys(mappings).forEach((prop: string) => {\r\n                const value = this.getValueByPath(data, prop);\r\n                const fields = mappings[prop];\r\n                const groups: any[] = fields.split(',').filter(p => p);\r\n                groups.forEach(group => {\r\n                  const paths = group.split('.').filter(p => p);\r\n                  frameContext.bindingData.setValue(bindingPaths.concat(paths), value, true, true);\r\n                });\r\n              });\r\n              return of(true);\r\n            } else {\r\n              const idMapField = mappings['id'];\r\n              const sourceItemId = this.getValueByPath(currentEntity, idMapField);\r\n              // å¦æå½åè¡æ²¡ææ å°æå¾éç»æä¸­æ¾ä¸å°å½åè¡çæ å°\r\n              if (!sourceItemId || result.findIndex(item => item[bindingList.primaryKey] === sourceItemId) === -1) {\r\n                // éæ°æ å°å½åè¡\r\n                this.mappingRow(headItem, mappings, currentEntity, bindingPath);\r\n                result = result.slice(1);\r\n              } else if (sourceItemId) {\r\n                const index = result.findIndex(item => item[bindingList.primaryKey] === sourceItemId);\r\n                // éæ°æ å°å½åè¡\r\n                this.mappingRow(result[index], mappings, currentEntity, bindingPath);\r\n                result.splice(index, 1);\r\n              }\r\n              // å½åè¡å¤çå®æ\r\n              // å¤çæªæ å°çè¡\r\n              const emptyRows = bindingList.toArray().filter(bindingObject => {\r\n                const id = this.getValueByPath(bindingObject, mappings[bindingList.primaryKey]);\r\n                return !id;\r\n              });\r\n              if (emptyRows && emptyRows.length > 0) {\r\n                let rows = result;\r\n                if (result.length > emptyRows.length) {\r\n                  rows = result.slice(0, emptyRows.length);\r\n                  result = result.slice(emptyRows.length);\r\n                } else {\r\n                  result = [];\r\n                }\r\n                rows.forEach((item, index) => {\r\n                  const targetItem = emptyRows[index];\r\n                  const entity = this.getEntityByPath(frameContext, bindingPaths, targetItem.primaryKeyValue);\r\n                  this.mappingRow(item, mappings, entity, bindingPath);\r\n                });\r\n              }\r\n              // å¤çå©ä½å¾é\r\n              result.forEach((item) => {\r\n                const defaultValue = {};\r\n                Object.keys(mappings).forEach((prop: string) => {\r\n                  const value = this.getValueByPath(item, prop);\r\n                  const fields = mappings[prop];\r\n                  const groups: any[] = fields.split(',').filter(p => p);\r\n                  groups.forEach(group => {\r\n                    const paths = group.split('.').filter(p => p);\r\n                    this.setValueByPath(defaultValue, paths.join('.'), value);\r\n                  });\r\n                });\r\n                defaultValues.push(defaultValue);\r\n              });\r\n              if (defaultValues.length > 0) {\r\n                this.formLoadingService.show();\r\n                const path = this.buildPath(bindingPath, this.viewModel.bindingData.list.currentId);\r\n                this.repository.batchAppendByPath(path, defaultValues).pipe(\r\n                  tap(() => this.formLoadingService.hide())\r\n                ).subscribe();\r\n              }\r\n            }\r\n          }\r\n        }, 350);\r\n      });\r\n    }, 50);\r\n    return of(true);\r\n  }\r\n  /**\r\n   * å¤å¶ä¸»è¡¨æ°æ®\r\n   * @param id è¦å¤å¶çæ°æ®id\r\n   * @param fields è¦å¤å¶çå­æ®µ\r\n   * @description ä»æ¯æå¤å¶ä¸»è¡¨æ°æ®\r\n   * @deprecated è¯¥æ¹æ³å·²è¢«åºå¼ï¼è¯·ä½¿ç¨cloneæ¹æ³æ¿ä»£ã\r\n   */\r\n  public copy(id: string): Observable<any> {\r\n    if (!id) {\r\n      this.formNotifyService.warning(this.languageService.plsSelectCopyData, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n\r\n    const befRepository = this.repository as BefRepository<any>;\r\n    const baseUri = befRepository.restService.baseUri;\r\n    const url = `${baseUri}/service/copymainobjvoaction`;\r\n    const requestInfo = befRepository.restService.buildRequestInfo();\r\n    const body = {\r\n      requestInfo,\r\n      dataID: id\r\n    };\r\n    const options = {\r\n      body\r\n    };\r\n    this.formLoadingService.show();\r\n    return befRepository.proxy.request(url, 'PUT', null, options).pipe(\r\n      tap(() => {\r\n        this.formLoadingService.hide();\r\n      }),\r\n      map((responseInfo: ResponseInfo) => {\r\n        const returnValue = responseInfo.returnValue;\r\n        const entity = this.repository.buildEntity(returnValue);\r\n        this.repository.entityCollection.addEntity(entity);\r\n        return entity;\r\n      }),\r\n    );\r\n  }\r\n  /**\r\n   * å¤å¶æ°æ®ï¼æ¯æä¸»è¡¨ãä»è¡¨ãä»ä»è¡¨ï¼\r\n   * @param id è¦å¤å¶çè¡\r\n   * @param path è¯·æ±è·¯å¾\r\n   * @returns\r\n   */\r\n  public clone(id: string, path: string) {\r\n    if (!id) {\r\n      this.formNotifyService.warning(this.languageService.plsSelectCopyData, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    if (!path) {\r\n      this.formNotifyService.warning(this.languageService.pathIsRequired, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    if (!path.startsWith('/')) {\r\n      path = '/' + path;\r\n    }\r\n    path = path.toLowerCase();\r\n    const bindingPath = this.viewModel.bindingPath;\r\n    const befRepository = this.repository as BefRepository<any>;\r\n    const baseUri = befRepository.restService.baseUri;\r\n    const url = `${baseUri}${path}`;\r\n    const requestInfo = befRepository.restService.buildRequestInfo();\r\n    const ids = this.buildIds(bindingPath);\r\n    ids.push(id);\r\n    const body = {\r\n      requestInfo,\r\n      dataID: ids.join(',')\r\n    };\r\n    const options = {\r\n      body\r\n    };\r\n    this.formLoadingService.show();\r\n    return befRepository.proxy.request(url, 'PUT', null, options).pipe(\r\n      tap(() => {\r\n        this.formLoadingService.hide();\r\n      }),\r\n      map((responseInfo: ResponseInfo) => {\r\n        const returnValue = responseInfo.returnValue;\r\n        let entity = null;\r\n        if (bindingPath.split('/').filter(p => p).length === 0) {\r\n          entity = this.repository.buildEntity(returnValue);\r\n          this.repository.entityCollection.addEntity(entity, true);\r\n        } else {\r\n          const fpath = this.buildPath(bindingPath, this.viewModel.bindingData.list.currentId);\r\n          entity = befRepository.entityManager.appendEntityByPath(fpath, returnValue, returnValue, true);\r\n        }\r\n        return entity;\r\n      }),\r\n    );\r\n  }\r\n  /**\r\n   * å¸¦éä»¶çå¤å¶\r\n   * @param id\r\n   * @param url\r\n   * @param attachmentInfoFieldPath\r\n   * @param rootId\r\n   * @param path\r\n   * @returns\r\n   */\r\n  public cloneWithAttachment(id: string, url: string, attachmentInfoFieldPath: string, rootId: string, path: string) {\r\n    if (!id) {\r\n      this.formNotifyService.warning(this.languageService.plsSelectCopyData, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    if (!url) {\r\n      this.formNotifyService.warning(this.languageService.pathIsRequired, { hideTitle: true });\r\n      return EMPTY;\r\n    }\r\n    if (!attachmentInfoFieldPath) {\r\n      throw new Error('éä»¶udtå­æ®µè·¯å¾ä¸è½ä¸ºç©º');\r\n    }\r\n    if (!url.startsWith('/')) {\r\n      url = '/' + url;\r\n    }\r\n    url = url.toLowerCase();\r\n    const bindingPath = this.viewModel.bindingPath;\r\n    const befRepository = this.repository as BefRepository<any>;\r\n    const baseUri = befRepository.restService.baseUri;\r\n    const uri = `${baseUri}${url}`;\r\n    const requestInfo = befRepository.restService.buildRequestInfo();\r\n    const ids = this.buildIds(bindingPath);\r\n    ids.push(id);\r\n    const body = {\r\n      requestInfo,\r\n      dataID: ids.join(',')\r\n    };\r\n    const options = {\r\n      body\r\n    };\r\n    this.formLoadingService.show();\r\n    const attachmentFields = attachmentInfoFieldPath.split(',').filter((p) => p).map((path) => path.split('/').pop());\r\n    return befRepository.proxy.request(uri, 'PUT', null, options).pipe(\r\n      switchMap((responseInfo: ResponseInfo) => {\r\n        const entityData = responseInfo.returnValue;\r\n        let entity = null;\r\n        if (bindingPath.split('/').filter((p) => p).length === 0) {\r\n          entity = this.repository.buildEntity(entityData);\r\n          this.repository.entityCollection.addEntity(entity, true);\r\n        } else {\r\n          const fpath = this.buildPath(bindingPath, this.viewModel.bindingData.list.currentId);\r\n          entity = befRepository.entityManager.appendEntityByPath(fpath, entityData, entityData, true);\r\n        }\r\n        // å¤å¶éä»¶\r\n        return this.copyRowFiles(entity, attachmentFields, rootId, path).pipe(\r\n          switchMap(() => {\r\n            this.formLoadingService.hide();\r\n            return this.repository.updateAllChanges().pipe(map(() => {\r\n              return entity;\r\n            }));\r\n          }),\r\n          catchError((error) => {\r\n            this.formLoadingService.hide();\r\n            // æ¸ç©ºå®ä½éä»¶å±æ§\r\n            this.clearAttachmentInfo(entity, attachmentFields);\r\n            let cafError = error.error;\r\n            if (typeof cafError === 'string') {\r\n              cafError = JSON.parse(cafError);\r\n            }\r\n            if (this.formErrorService) {\r\n              this.formErrorService.exception(cafError.message || this.languageService.copyFailed, error);\r\n            }\r\n            return EMPTY;\r\n          })\r\n        );\r\n      }),\r\n    );\r\n  }\r\n  private clearAttachmentInfo(entity: Entity, attachmentFields: string[]) {\r\n    try {\r\n      attachmentFields.forEach((attachmentField: string) => {\r\n        this.setValueByPath(entity, [attachmentField, 'attachmentId'].join('.'), null);\r\n        this.setValueByPath(entity, [attachmentField, 'fileName'].join('.'), null);\r\n        this.setValueByPath(entity, [attachmentField, 'fileCreateTime'].join('.'), null);\r\n        this.setValueByPath(entity, [attachmentField, 'fileSize'].join('.'), null);\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  //#region æ§çå®ç°\r\n\r\n  /**\r\n   * å¤å¶è¡\r\n   * @param frameId frameId\r\n   * @param ignoreFields å¤å¶æ¶å¿½ç¥å­æ®µ\r\n   * @param repeat éå¤å¤å¶æ¬¡æ°ï¼é»è®¤ä¸º1\r\n   */\r\n  public copyRow(frameId: string, ignoreFields: string, repeat: number = 1) {\r\n    if (typeof repeat !== 'number') {\r\n      repeat = parseInt(repeat, 10);\r\n    }\r\n    if (repeat < 1) {\r\n      throw new Error('ArgumentError: repeat must >= 1');\r\n    }\r\n    // è·åå½åè¡\r\n    const frameContext = this.viewModel.frameContext.appContext.frameContextManager.getFrameContextById(frameId);\r\n    const primaryValue = frameContext.bindingData.list.currentId;\r\n    const bindingPath = frameContext.viewModel.bindingPath || '/';\r\n    let bindingData = null;\r\n    let currentItem: BindingObject = null;\r\n    if (bindingPath === '/') {\r\n      // ä¸»è¡¨ç´æ¥åå½åè¡\r\n      currentItem = frameContext.bindingData.list.currentItem;\r\n    } else {\r\n      // åä»è¡¨/ä»ä»è¡¨å½åè¡\r\n      const paths = bindingPath.split('/').filter(p => p);\r\n      currentItem = (frameContext.bindingData.getValue(paths) as BindingList).currentItem;\r\n    }\r\n    bindingData = currentItem.toJSON();\r\n    if (!currentItem.primaryKeyValue) {\r\n      if (this.formNotifyService) {\r\n        this.formNotifyService.warning(this.languageService.plsSelectCopyData, { hideTitle: true });\r\n      }\r\n      return EMPTY;\r\n    }\r\n    const ignoreFieldsArray = ignoreFields.split(',').filter(item => item);\r\n\r\n    const sources = new Array(repeat);\r\n    return from(sources).pipe(\r\n      concatMap(() => {\r\n        let action$ = null;\r\n        if (bindingPath !== '/') {\r\n          const fullPath = this.buildPath(bindingPath, primaryValue);\r\n          action$ = this.repository.appendByPath(fullPath);\r\n        } else {\r\n          action$ = this.repository.append();\r\n        }\r\n        return action$.pipe(\r\n          tap((entity: Entity) => {\r\n            // ä¿®æ­£å®ä½ä¸»é®\r\n            bindingData[entity.primaryKey] = entity.primaryValue;\r\n            // å¿½ç¥æå®å­æ®µ\r\n            ignoreFieldsArray.forEach((field: string) => {\r\n              const extractedFields = field.split('.').filter(item => item);\r\n              if (extractedFields.length === 1) {\r\n                delete bindingData[field];\r\n              }\r\n              const parent = extractedFields.slice(0, -1).reduce((prev, current, index) => {\r\n                return prev[current];\r\n              }, bindingData);\r\n              delete parent[extractedFields[extractedFields.length - 1]];\r\n            });\r\n            bindingData = Object.assign({}, entity.toJSON(), bindingData);\r\n            entity.load(bindingData, { loadChild: false });\r\n          }),\r\n          catchError(() => {\r\n            return EMPTY;\r\n          })\r\n        );\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * å¢éå¤éå¸®å©æ¹éèµå¼å¸®å©åäºä»¶\r\n   * @param frameId frameId\r\n   * @param mapFields å­æ®µæ å°\r\n   * @param associatedField å³èå­æ®µ\r\n   */\r\n  public afterIncrementalSelectHelpClose(frameId: string, mapFields: string, associatedField: string) {\r\n    const self: any = this;\r\n    const result = self.context && self.context.eventParam || [];\r\n    // tslint:disable-next-line: max-line-length\r\n    // const mapping = '{\"id\":\"userRef.userRef\", \"name\":\"name\", \"sex\":\"sex\",\"age\":\"userRef.userRef_Age\",\"address\":\"userRef.userRef_Address\",\"birthday\":\"userRef.userRef_Birthday\",\"height\":\"userRef.userRef_Height\",\"isMarried\":\"userRef.userRef_IsMarried\"}';\r\n    if (!associatedField) {\r\n      throw new Error('associated field can`t be empty.');\r\n    }\r\n    if (!mapFields) {\r\n      throw new Error('mapFields can`t be empty.');\r\n    }\r\n    const mappings = JSON.parse(mapFields);\r\n    const foreignKey = associatedField;\r\n    // å°éæ©äººåä¿å­å°uistateä¸­\r\n    const rootFrameContext = this.viewModel.frameContext.root;\r\n    // ä¸æ¯bindingPathåæframeIdå¤ç\r\n    let bindingPath = '/';\r\n    const appContext = this.injector.get<AppContext>(AppContext, null);\r\n    if (appContext) {\r\n      const frameContext = appContext.frameContextManager.getFrameContextById(frameId);\r\n      if (frameContext) {\r\n        bindingPath = frameContext.viewModel.bindingPath || '/';\r\n      } else {\r\n        throw new Error('frameId is invalid!');\r\n      }\r\n    }\r\n    // tslint:disable-next-line: no-string-literal\r\n    rootFrameContext.uiState['selections'] = result;\r\n    if (result && Array.isArray(result)) {\r\n      // æ ¹æ®bindingPathè·åbindingdataä¸­ç°ææ°æ®\r\n      const bindingPaths = bindingPath.split('/').filter(item => item);\r\n      const currentData: BindingList = this.viewModel.bindingData.getValue(bindingPaths);\r\n      const currentDataArray = currentData.toArray();\r\n      // æ¾å°resultä¸­æï¼ä½bindingDataä¸­æ²¡æçï¼ä¸ºå¾æ°å¢é¡¹\r\n      const appends = [];\r\n      result.reduce((prev: Array<any>, item) => {\r\n        const itemId = item && item[currentData.primaryKey] || null;\r\n        const isExist = currentDataArray.find((bindingObject: BindingObject) => bindingObject[foreignKey][foreignKey] === itemId);\r\n        if (!isExist) {\r\n          prev.push(item);\r\n        }\r\n        return prev;\r\n      }, appends);\r\n\r\n      // æ¾å°bindingDataä¸­æï¼resultä¸­æ²¡æçï¼ä¸ºå¾å é¤é¡¹\r\n      const removes = [];\r\n      currentDataArray.reduce((results: any, item: BindingObject) => {\r\n        const index = result.findIndex(selectItem => selectItem[currentData.primaryKey] === item[foreignKey][foreignKey]);\r\n        if (index === -1) {\r\n          results.push(item.primaryKeyValue);\r\n        }\r\n        return results;\r\n      }, removes);\r\n\r\n      // console.log('addItems', appends, 'removeItems', removes);\r\n      // è°ç¨åç«¯æ¥å£æ°å¢æ°æ®\r\n      const addAction$ = from(appends).pipe(\r\n        concatMap(item => {\r\n          const path = this.buildPath(bindingPath, this.viewModel.bindingData.list.currentId);\r\n          return this.repository.appendByPath(path).pipe(\r\n            tap((entity: Entity) => {\r\n              Object.keys(mappings).forEach(prop => {\r\n                const value = this.getValueByPath(item, prop);\r\n                const fields = mappings[prop];\r\n                const groups: any[] = fields.split(',').filter(p => p);\r\n                groups.forEach(group => {\r\n                  const paths = group.split('.').filter(p => p);\r\n                  this.setValueByPath(entity, paths.join('.'), value);\r\n                });\r\n              });\r\n            }),\r\n            catchError(() => {\r\n              return EMPTY;\r\n            })\r\n          );\r\n        })\r\n      );\r\n\r\n      const removeAction$ = from(removes).pipe(\r\n        concatMap(item => {\r\n          const path = this.buildPath(bindingPath, this.viewModel.bindingData.list.currentId);\r\n          return this.repository.removeByPath(path, item).pipe(\r\n            tap(() => {\r\n              const befRepository: BefRepository<any> = this.repository as BefRepository<any>;\r\n              befRepository.entityManager.removeEntityByPath(path, item);\r\n            }),\r\n            catchError(() => {\r\n              return EMPTY;\r\n            })\r\n          );\r\n        })\r\n      );\r\n      if (!appends && !removes || appends && appends.length < 1 && removes && removes.length < 1) {\r\n        return of(true);\r\n      }\r\n      return concat(addAction$, removeAction$).pipe(\r\n        catchError(() => EMPTY)\r\n      );\r\n    }\r\n    return of(true);\r\n  }\r\n  // todo:æ¨¡æç¨æ·æä½ï¼å¾åç«¯æ¥å£æ¯æä¸»è¡¨æ¹éæ°å¢åéå\r\n  /**\r\n   * å¤éå¸®å©æ¹éèµå¼å¸®å©åäºä»¶\r\n   */\r\n  public beforeMultiSelectHelpOpen() {\r\n    return this.clearHelpSelections();\r\n  }\r\n  /**\r\n   * å¤éå¸®å©æ¹éèµå¼å¸®å©åäºä»¶\r\n   * @param frameId ç»å®è·¯å¾\r\n   * @param mapFields å­æ®µæ å°\r\n   * @param commandFrameId åè°å½ä»¤æå¨frameId\r\n   * @param commandName åè°å½ä»¤\r\n   * @deprecated æ¨¡æç¨æ·æä½ï¼å¾æ¹éèµå¼æ¯æä¸»è¡¨ååºå¼\r\n   */\r\n  public afterMultiSelectHelpClose(frameId: string, mapFields: string, commandFrameId?: string, commandName?: string) {\r\n    const self: any = this;\r\n    const result = self.context && self.context.eventParam || [];\r\n    if (result && Array.isArray(result)) {\r\n      // è°ç¨åç«¯æ¥å£æ°å¢æ°æ®\r\n      if (!result || result.length < 1) {\r\n        return of(true);\r\n      }\r\n      this.onHelpClose.next({ frameId, mapFields, data: result, commandFrameId, commandName });\r\n      return of(true);\r\n    }\r\n    return of(true);\r\n  }\r\n  /**\r\n    * å¸®å©å³é­åå¤çå¨\r\n    * @param frameId frameid\r\n    * @param mapFields mapFields\r\n    * @param result å¸®å©æ°æ®ç»æ\r\n    */\r\n  private onHelpCloseHandler(frameId: string, mapFields: string, result: any[]) {\r\n    if (!mapFields) {\r\n      throw new Error('mapFields can`t be empty.');\r\n    }\r\n    const mappings = JSON.parse(mapFields);\r\n    // ä¸æ¯bindingPathåæframeIdå¤ç\r\n    let bindingPath = '/';\r\n    const appContext = this.injector.get<AppContext>(AppContext, null);\r\n    if (appContext) {\r\n      const frameContext = appContext.frameContextManager.getFrameContextById(frameId);\r\n      if (frameContext) {\r\n        bindingPath = frameContext.viewModel.bindingPath || '/';\r\n      } else {\r\n        throw new Error('frameId is invalid!');\r\n      }\r\n    }\r\n    // å°éæ©äººåä¿å­å°uistateä¸­\r\n    const rootFrameContext = this.viewModel.frameContext.root;\r\n    const befRepository = this.repository as BefRepository<any>;\r\n    const bindingPaths = bindingPath.split('/').filter(p => p);\r\n    // tslint:disable-next-line: no-string-literal\r\n    rootFrameContext.uiState['selections'] = result;\r\n    if (result && Array.isArray(result)) {\r\n      const addAction$ = from(result).pipe(\r\n        concatMap(item => {\r\n          const requestInfo = befRepository.restService.buildRequestInfo();\r\n          if (bindingPaths.length > 0) {\r\n            const path = this.buildPath(bindingPath, this.viewModel.bindingData.list.currentId);\r\n            return befRepository.restService.createByPath(path, requestInfo).pipe(\r\n              tap((responseInfo: ResponseInfo) => {\r\n                const data = responseInfo.returnValue;\r\n                const newEntity = befRepository.entityManager.appendEntityByPath(path, data, data);\r\n                Object.keys(mappings).forEach(prop => {\r\n                  const value = this.getValueByPath(item, prop);\r\n                  const fields = mappings[prop];\r\n                  const groups: any[] = fields.split(',').filter(p => p);\r\n                  groups.forEach(group => {\r\n                    const paths = group.split('.').filter(p => p);\r\n                    this.setValueByPath(newEntity, paths.join('.'), value);\r\n                  });\r\n                });\r\n                return newEntity;\r\n              })\r\n            );\r\n          } else {\r\n            return befRepository.restService.create(null, requestInfo).pipe(\r\n              tap((responseInfo: ResponseInfo) => {\r\n                const data = responseInfo.returnValue;\r\n                const newEntity = this.repository.buildEntity(data);\r\n                Object.keys(mappings).forEach(prop => {\r\n                  const value = this.getValueByPath(item, prop);\r\n                  const fields = mappings[prop];\r\n                  const groups: any[] = fields.split(',').filter(p => p);\r\n                  groups.forEach(group => {\r\n                    const paths = group.split('.').filter(p => p);\r\n                    this.setValueByPath(newEntity, paths.join('.'), value);\r\n                  });\r\n                });\r\n                this.repository.entityCollection.addEntity(newEntity);\r\n                return newEntity;\r\n              })\r\n            );\r\n          }\r\n        })\r\n      );\r\n      // const formLoadingService = this.injector.get<FormLoadingService>(FormLoadingService, null);\r\n      if (this.formLoadingService) {\r\n        this.suspendFrameContextEvent(frameId);\r\n        this.formLoadingService.show();\r\n        this.formLoadingService.setSuspend(true);\r\n      }\r\n      return addAction$.pipe(\r\n        last(),\r\n      ).pipe(\r\n        switchMap(() => {\r\n          const primaryValue = this.viewModel.bindingData.list.currentId;\r\n          if (primaryValue) {\r\n            return befRepository.updateChangesById(primaryValue);\r\n          } else {\r\n            return of(null);\r\n          }\r\n        })\r\n      ).subscribe(() => {\r\n        if (this.formLoadingService) {\r\n          this.resumeFrameContextEvent(frameId);\r\n          this.formLoadingService.setSuspend(false);\r\n          this.formLoadingService.hide();\r\n        }\r\n      }, () => {\r\n        if (this.formLoadingService) {\r\n          this.resumeFrameContextEvent(frameId);\r\n          this.formLoadingService.setSuspend(false);\r\n          this.formLoadingService.hide();\r\n        }\r\n      });\r\n    }\r\n    return of(null);\r\n  }\r\n  private suspendFrameContextEvent(frameId: string) {\r\n    const appContext = this.injector.get<AppContext>(AppContext, null);\r\n    if (appContext) {\r\n      const frameContext = appContext.frameContextManager.getFrameContextById(frameId);\r\n      frameContext.suspend = true;\r\n    }\r\n  }\r\n  private resumeFrameContextEvent(frameId: string) {\r\n    const appContext = this.injector.get<AppContext>(AppContext, null);\r\n    if (appContext) {\r\n      const frameContext = appContext.frameContextManager.getFrameContextById(frameId);\r\n      frameContext.suspend = false;\r\n      frameContext.appContext.messagePipe.next('bindData');\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n  private setValueByPath(target: object, path: string, value: any) {\r\n    if (target) {\r\n      const paths = path.split('.');\r\n      if (paths.length <= 1) {\r\n        target[path] = value;\r\n      } else {\r\n        paths.slice(0, -1).reduce((prev, path) => {\r\n          if (!(prev.hasOwnProperty(path) || prev['__proto__'].hasOwnProperty(path))) {\r\n            prev[path] = {};\r\n          }\r\n          return prev[path];\r\n        }, target)[paths[paths.length - 1]] = value;\r\n      }\r\n    }\r\n  }\r\n  private getValueByPath(target: object, path: string) {\r\n    const paths = path.split('.');\r\n    if (paths.length < 1) {\r\n      return;\r\n    }\r\n    if (paths.length === 1) {\r\n      return target[path];\r\n    }\r\n    let result = null;\r\n    paths.forEach((prop, index) => {\r\n      if (index === 0) {\r\n        result = target && target[prop] || null;\r\n      } else {\r\n        result = result && result[prop] || null;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  /**\r\n   * æé å­è¡¨è·¯å¾\r\n   * @param bindingPath ç»å®è·¯å¾\r\n   * @param id id\r\n   */\r\n  private buildPath(bindingPath: string, id: any) {\r\n    let path = '/' + id;\r\n    const subPaths = bindingPath.split('/');\r\n    if (subPaths.length > 0) {\r\n      // eg:bindingPathå½¢å¦/edus/grades,splitåæ¯['', 'edus', 'grades']\r\n      // å æ­¤indexä»1å¼å§\r\n      for (let index = 1; index < subPaths.length - 1; index++) {\r\n        const subPath = subPaths[index];\r\n        const subData = this.viewModel.bindingData[subPath];\r\n        if (!subData || !subData.currentId) {\r\n          throw Error(`è·åå­è¡¨å®æ´è·¯å¾åºéï¼æ¾ä¸å°${subData}å¯¹åºçå­è¡¨ï¼æå¯¹åºå­è¡¨æ²¡æå½åè¡ã`);\r\n        }\r\n        path += `/${subPath}/${subData.currentId}`;\r\n      }\r\n    }\r\n    path += '/' + subPaths[subPaths.length - 1];\r\n\r\n    return path;\r\n  }\r\n  /**\r\n   * è·åç»å®è·¯å¾çå½åè¡æ°ç»\r\n   * @param bindingPath bindingPath\r\n   * @returns\r\n   */\r\n  private buildIds(bindingPath: string): string[] {\r\n    const bindingPaths = bindingPath.split('/').filter(p => p);\r\n    const primaryValue = this.viewModel.bindingData.list.currentId;\r\n    const result = [];\r\n    const paths = [];\r\n    if (bindingPaths.length > 0) {\r\n      result.push(primaryValue);\r\n      // ä»è¡¨æä»ä»è¡¨è¦å¤å¶çè¡ä¸ä¸å®æ¯å½åè¡ï¼ç¨æ·å¯ä»¥æå®\r\n      bindingPaths.pop();\r\n      bindingPaths.forEach((path: string) => {\r\n        paths.push(path);\r\n        const bindingList = this.viewModel.bindingData.getValue(paths) as BindingList;\r\n        if (bindingList) {\r\n          result.push(bindingList.currentId);\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n  private updateBindingData(input: any, ids: Array<any>) {\r\n    const { controlType = null, value = null, options = {}, dataType = null } = input || {};\r\n    if (controlType) {\r\n      // å¯¹å¸®å©åç¹æ®å¤ç\r\n      if (controlType === 'lookup' || controlType === 'combo-lookup') {\r\n        const mapFields = options.mapFields;\r\n        this.updateLookupField(ids, value, mapFields);\r\n      } else {\r\n        this.updateSimpleField(ids, value, input);\r\n      }\r\n    }\r\n  }\r\n  private updateSimpleField(ids: Array<any>, value: any, column: any) {\r\n    if (!column) {\r\n      return;\r\n    }\r\n    const currentColumnType = column.dataType;\r\n    // å­å¨è¡ç¼è¾å¨\r\n    let result = value;\r\n    if (currentColumnType === 'date') {\r\n      let dateStr = this.dateService.formatTo(value, 'yyyy-MM-dd');\r\n      if (!dateStr) {\r\n        dateStr = '0001-01-01T00:00:00';\r\n      }\r\n      result = dateStr;\r\n    } else if (currentColumnType === 'number') {\r\n      result = Number(value) || 0;\r\n    }\r\n    const field = column.field;\r\n    ids.forEach(id => {\r\n      this.updateBindingList(id, field, result);\r\n    });\r\n  }\r\n  private updateLookupField(ids: Array<any>, helpData: any, mapFields: any) {\r\n    if (!mapFields) {\r\n      return;\r\n    }\r\n    let helpFields = Object.keys(mapFields);\r\n    const idIndex = helpFields.findIndex(item => item === 'id');\r\n    if (helpFields.includes('id') && idIndex !== 0) {\r\n      helpFields.splice(idIndex, 1);\r\n      helpFields = ['id', ...helpFields];\r\n    }\r\n    if (!helpData) {\r\n      helpFields.reverse();\r\n    }\r\n    helpFields.forEach((helpField: any) => {\r\n      let helpValue: any = '';\r\n      if (helpData) {\r\n        if (helpData instanceof Array) {\r\n          helpValue = helpData.map((item: any) => {\r\n            return this.getValue(helpField, item);\r\n          }).join(',');\r\n        } else {\r\n          helpValue = this.getValue(helpField, helpData);\r\n        }\r\n      }\r\n      ids.forEach(id => {\r\n        this.updateBindingList(id, mapFields[helpField], helpValue);\r\n      });\r\n    });\r\n  }\r\n  private updateBindingList(primaryValue: any, propertyName: string, value: any) {\r\n    const viewModel = this.viewModel || null;\r\n    if (!viewModel || !propertyName) {\r\n      return;\r\n    }\r\n    // æ´æ°ä¸»è¡¨é¨åè¡çå­æ®µ\r\n    const propertyNames = propertyName.split('.').filter(item => item);\r\n    const bindingObject = this.bindingList.findById(primaryValue);\r\n\r\n    if (propertyNames.length < 2) {\r\n      bindingObject.setValue(propertyName, value, true, true);\r\n    } else {\r\n      let targetBindingObject = null;\r\n      const fpaths = propertyNames.slice(0, propertyNames.length - 1);\r\n      const targetPropertyName = propertyNames[propertyNames.length - 1];\r\n      fpaths.forEach(prop => {\r\n        targetBindingObject = targetBindingObject && targetBindingObject[prop] || bindingObject[prop];\r\n      });\r\n      // todo:éè¦æ·»å å¼ååäºä»¶\r\n      targetBindingObject.setValue(targetPropertyName, value, true, true);\r\n    }\r\n  }\r\n  private getBindingPathArray(): any[] {\r\n    const path = this.viewModel.bindingPath;\r\n    if (path) {\r\n      return path.split('/').filter(n => n !== '');\r\n    }\r\n    return [];\r\n  }\r\n  private getValue(f: string, data: any) {\r\n    let val = '';\r\n    if (f.indexOf('.') === -1) {\r\n      val = data[f];\r\n    } else {\r\n      val = f.split('.').reduce((a, b) => {\r\n        return a[b];\r\n      }, data);\r\n    }\r\n\r\n    return val;\r\n  }\r\n  protected get bindingList(): BindingList {\r\n    // æ ¹å®ä½\r\n    if (this.viewModel.bindingPath === '/' || !this.viewModel.bindingPath) {\r\n      return this.viewModel.bindingData.list;\r\n    }\r\n    // å­å®ä½\r\n    let bindingPath = this.viewModel.bindingPath.substr(1);\r\n    bindingPath = bindingPath[0].toLowerCase() + bindingPath.substring(1, bindingPath.length);\r\n    const paths = bindingPath.split('/');\r\n\r\n    const filteredPaths = paths.filter((part: string) => {\r\n      return part !== '';\r\n    });\r\n    return this.viewModel.bindingData.getValue(filteredPaths);\r\n  }\r\n  /**\r\n   * æ ¹æ®æ å°å°æ°æ®èµå¼ç»bindingData\r\n   * @param data\r\n   * @param mapFields\r\n   * @param bindingData\r\n   */\r\n  private mappingRow(data: any, mapFields: any, entity: Entity, bindingPath: string) {\r\n    Object.keys(mapFields).forEach((prop: string) => {\r\n      const value = this.getValueByPath(data, prop);\r\n      const fields = mapFields[prop];\r\n      const groups: any[] = fields.split(',').filter(p => p);\r\n      groups.forEach(group => {\r\n        const paths = group.split('.').filter(p => p);\r\n        this.setValueByPath(entity, paths.join('.'), value);\r\n      });\r\n    });\r\n  }\r\n  /**\r\n   * éè¿frameIdè·åå¯¹åºçç»ä»¶ä¸ä¸æ\r\n   * @param frameId frameId\r\n   * @returns\r\n   */\r\n  private getFrameContextById(frameId: string): FrameContext | null {\r\n    if (!frameId) {\r\n      return null;\r\n    }\r\n    const appContext = this.injector.get<AppContext>(AppContext, null);\r\n    let frameContext: FrameContext = null;\r\n    if (appContext) {\r\n      frameContext = appContext.frameContextManager.getFrameContextById(frameId);\r\n    }\r\n    return frameContext;\r\n  }\r\n  private getEntityByPath(frameContext: FrameContext, bindingPaths: any[], currentId: string) {\r\n    bindingPaths = [...bindingPaths];\r\n    const id = frameContext.bindingData.list.currentId;\r\n    const entity: Entity = frameContext.repository.entityCollection.getEntityById(id) as Entity;\r\n    let item: Entity = entity;\r\n    const paths = [];\r\n    const tailPath = bindingPaths.pop();\r\n    const parent = bindingPaths.reduce((object: Entity, path: string) => {\r\n      paths.push(path);\r\n      if (object && (object.hasOwnProperty(path) || object['__proto__'].hasOwnProperty(path))) {\r\n        const value = object[path];\r\n        if (value && value instanceof EntityList) {\r\n          const bindingList = frameContext.bindingData.getValue(paths) as BindingList;\r\n          const currentItemId = bindingList.currentId;\r\n          return value.get(currentItemId);\r\n        } else {\r\n          return value;\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    }, item);\r\n    if (parent instanceof Entity) {\r\n      const list = parent[tailPath] as EntityList<any>;\r\n      if (list) {\r\n        return list.get(currentId);\r\n      } else {\r\n        throw new Error(`æ æçbindingPath.`);\r\n      }\r\n    } else {\r\n      throw new Error(`æ æçbindingPath.`);\r\n    }\r\n  }\r\n  private endEdit(frameContext: FrameContext) {\r\n    const appContext: AppContext = frameContext && frameContext.getFormAppContext();\r\n    return of(null).pipe(\r\n      tap(() => {\r\n        if (appContext) {\r\n          appContext.messagePipe.next({ type: 'endEdit' });\r\n        }\r\n      }),\r\n      // todo: ä¸åºè¯¥ä½¿ç¨delayï¼åºè¯¥ä¸²æµ\r\n      delay(5)\r\n    );\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { FrameContext, Entity } from '@farris/devkit';\r\nimport { BefRepository } from '@farris/bef';\r\nimport { FormLoadingService } from './form-loading/form-loading.service';\r\nimport { RuntimeFrameworkService } from './rtf-service';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\nimport { BasePathService } from '@farris/rtf';\r\n// tslint:disable: max-line-length\r\n@Injectable()\r\nexport class DiscussionGroupService {\r\n  /**\r\n   * å®ä½ä»åº\r\n   */\r\n  private get repository(): BefRepository<Entity> {\r\n    return this.frameContext.repository as BefRepository<Entity>;\r\n  }\r\n  /**\r\n   * å½ä»¤åæ°\r\n   */\r\n  private get params() {\r\n    return this['context'] && this['context']['eventParam'] || {};\r\n  }\r\n  constructor(private injector: Injector, private frameContext: FrameContext, private loadingService: FormLoadingService, private runtimeFrameworkService: RuntimeFrameworkService) {\r\n  }\r\n\r\n  public addComment(id?: string, summary?: string, configId?: string, text?: string, visibility?: string, parentId?: string): Observable<any> {\r\n    id = id || this.frameContext && this.frameContext.bindingData.list.currentId || null;\r\n    if (!id) {\r\n      return EMPTY;\r\n    }\r\n    const params = this.buildAddCommentParam(id, text, parentId, summary, visibility, configId);\r\n    const restService = this.repository.restService;\r\n    const url = BasePathService.convertPath('/api/runtime/comment/v1.0/bill-comment/comment');\r\n    const requestInfo = restService.buildRequestInfo();\r\n    const options = {\r\n      body: {\r\n        requestInfo,\r\n        ...params\r\n      }\r\n    };\r\n    this.loadingService.show();\r\n    return restService.invoke(url, 'POST', null, options).pipe(\r\n      tap(() => {\r\n        this.loadingService.hide();\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * æ¥è¯¢è¯è®º\r\n   * @param id id\r\n   */\r\n  public queryComments(id: string, configId: string, pageIndex?: number | null, pageSize?: number | null): Observable<any> {\r\n    id = id || this.frameContext && this.frameContext.bindingData.list.currentId || null;\r\n    if (!id) {\r\n      return EMPTY;\r\n    }\r\n\r\n    const restService = this.repository.restService;\r\n\r\n    const url = this.buildQueryCommentsUrl(id, pageIndex, pageSize, configId);\r\n    this.loadingService.show();\r\n    return restService.invoke(url, 'GET').pipe(\r\n      tap(() => {\r\n        this.loadingService.hide();\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * æ¥è¯¢ææé¨é¨ä¿¡æ¯\r\n   */\r\n  public queryAllOrgs() {\r\n    const restService = this.repository.restService;\r\n    const url = BasePathService.convertPath('/api/runtime/sys/v1.0/sysOrgs?param={\"layer\":\"1\"}');\r\n    this.loadingService.show();\r\n    return restService.invoke(url, 'GET').pipe(\r\n      tap(() => {\r\n        this.loadingService.hide();\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * æ¥è¯¢å¸¸ç¨@ç¨æ·\r\n   * @param pageIndex\r\n   * @param pageSize\r\n   */\r\n  public queryFrequentAtUsers(pageIndex?: number | null, pageSize?: number | null) {\r\n    const restService = this.repository.restService;\r\n    const url = this.buildQueryFrequentAtUsersUrl(pageIndex, pageSize);\r\n    this.loadingService.show();\r\n    return restService.invoke(url, 'GET').pipe(\r\n      tap(() => {\r\n        this.loadingService.hide();\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * è·åatç¨æ·åè¡¨\r\n   * @param user ç¨æ·ç¼å·æèç¨æ·åç§°ï¼è¿æ»¤ä½¿ç¨ï¼\r\n   * @param pageIndex pageIndex\r\n   * @param pageSize pageSize\r\n   */\r\n  public queryAtUsers(user?: string, pageIndex?: number | null, pageSize?: number | null) {\r\n    const restService = this.repository.restService;\r\n    const url = this.buildQueryAtUsersUrl(user, pageIndex, pageSize);\r\n    this.loadingService.show();\r\n    return restService.invoke(url, 'GET').pipe(\r\n      tap(() => {\r\n        this.loadingService.hide();\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * æé è·åè¯è®ºåè¡¨çurl\r\n   * @param id id\r\n   */\r\n  private buildQueryCommentsUrl(id: string, pageIndex: number | null, pageSize: number | null, configId: string) {\r\n    if (typeof pageIndex === 'undefined' || pageIndex === null) {\r\n      pageIndex = this.params.pageIndex || 0;\r\n    }\r\n    if (typeof pageSize === 'undefined' || pageSize === null) {\r\n      pageSize = this.params.pageSize || 10;\r\n    }\r\n    const serverUri = this.repository.serverUri;\r\n    // const funcId = this.runtimeFrameworkService && this.runtimeFrameworkService.funcId || '';\r\n    return BasePathService.convertPath(`/api/runtime/comment/v1.0/bill-comment/comment/byBill?configId=${configId}&billId=${id}&pageSize=${pageSize}&pageIndex=${pageIndex}`);\r\n  }\r\n  /**\r\n   * æé è·å@ç¨æ·url\r\n   */\r\n  private buildQueryAtUsersUrl(user?: string, pageIndex?: number | null, pageSize?: number | null) {\r\n    const params: string[] = [];\r\n    if (typeof pageIndex === 'undefined' || pageIndex === null) {\r\n      pageIndex = this.params.pageIndex || 0;\r\n    }\r\n    if (typeof pageSize === 'undefined' || pageSize === null) {\r\n      pageSize = this.params.pageSize || 1000;\r\n    }\r\n    if (user) {\r\n      params.push(`param=${user}`);\r\n    }\r\n    params.push(`pageSize=${pageSize}`);\r\n    params.push(`pageIndex=${pageIndex}`);\r\n    return BasePathService.convertPath(`/api/runtime/comment/v1.0/bill-comment/atUser?${params.join('&')}`);\r\n  }\r\n  private buildQueryFrequentAtUsersUrl(pageIndex?: number | null, pageSize?: number | null) {\r\n    const params: string[] = [];\r\n    if (typeof pageIndex === 'undefined' || pageIndex === null) {\r\n      pageIndex = this.params.pageIndex || 0;\r\n    }\r\n    if (typeof pageSize === 'undefined' || pageSize === null) {\r\n      pageSize = this.params.pageSize || 6;\r\n    }\r\n    params.push(`pageSize=${pageSize}`);\r\n    params.push(`pageIndex=${pageIndex}`);\r\n    return BasePathService.convertPath(`/api/runtime/comment/v1.0/bill-comment/frequentAtUsers?${params.join('&')}`);\r\n  }\r\n  private buildAddCommentParam(id: string, text: string, parentId: string, summary: string, visibility: string, configId: string) {\r\n    if (typeof text === 'undefined') {\r\n      text = this.params.text;\r\n    }\r\n    if (typeof parentId === 'undefined') {\r\n      parentId = this.params.parentId;\r\n    }\r\n    if (typeof visibility === 'undefined') {\r\n      visibility = this.params.visibility;\r\n    }\r\n    return {\r\n      'bill': {\r\n        'billId': id,\r\n        'configId': configId,\r\n        'summary': summary\r\n      },\r\n      'comment': {\r\n        'billId': id,\r\n        'configId': configId,\r\n        'parentId': parentId || null,\r\n        'text': text,\r\n        'visibility': visibility\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FrameContext } from '@farris/devkit';\r\nimport { ListFilterHandler, QueryCondition } from '@farris/ui-list-filter';\r\n\r\n@Injectable()\r\nexport class ListFilterConditionsService implements ListFilterHandler {\r\n\r\n    constructor(private frameContext: FrameContext) { }\r\n\r\n    public setCurrentFilterConditions(conditions: QueryCondition[]): void {\r\n        this.frameContext.uiState['currentFilterConditions'] = conditions;\r\n    }\r\n\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Inject, Injectable, Injector } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { FORM_PATH_TOKEN, FormManifest, IFormManifestService } from \"@farris/devkit\";\r\nimport { share } from \"rxjs/operators\";\r\nimport { BasePathService } from \"@farris/rtf\";\r\n\r\n@Injectable()\r\nexport class FormManifestService implements IFormManifestService {\r\n  private static mainfests = new Map<string, Observable<FormManifest>>();\r\n  constructor(\r\n    private injector: Injector,\r\n    @Inject(FORM_PATH_TOKEN) private modulePath,\r\n    private httpClient: HttpClient\r\n  ) { }\r\n  public load(): Observable<FormManifest> {\r\n    if (this.modulePath.endsWith('\\/')) {\r\n      this.modulePath = this.modulePath.substring(0, this.modulePath.length - 1);\r\n    }\r\n    const formManifestPath = BasePathService.convertPath(`${this.modulePath}/expressions/form.manifest.json?version=${new Date().valueOf().toString()}`);\r\n    const request$ = FormManifestService.mainfests.get(this.modulePath);\r\n    if (request$) {\r\n      return request$;\r\n    } else {\r\n      const req$ = this.httpClient.get<FormManifest>(formManifestPath, { responseType: 'json' }).pipe(share());\r\n      FormManifestService.mainfests.set(this.modulePath, req$);\r\n      return req$;\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Inject, Injectable, Injector } from \"@angular/core\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { share, switchMap } from \"rxjs/operators\";\r\nimport { FORM_PATH_TOKEN, FrameContext, FormExpressionsManifest, FormManifest, IFormExpressionManifestService, FORM_MANIFEST_SERVICE_TOKEN, IFormManifestService } from \"@farris/devkit\";\r\nimport { BasePathService } from \"@farris/rtf\";\r\n\r\n@Injectable()\r\nexport class FormExpressionManifestService implements IFormExpressionManifestService {\r\n  private static mainfests = new Map<string, Observable<any>>();\r\n  constructor(\r\n    private injector: Injector,\r\n    private frameContext: FrameContext,\r\n    private httpClient: HttpClient,\r\n    @Inject(FORM_PATH_TOKEN) private modulePath,\r\n    @Inject(FORM_MANIFEST_SERVICE_TOKEN) private formManifestService: IFormManifestService) { }\r\n\r\n  public load(): Observable<any> {\r\n    if (this.modulePath.endsWith('\\/')) {\r\n      this.modulePath = this.modulePath.substring(0, this.modulePath.length - 1);\r\n    }\r\n\r\n    return this.formManifestService.load().pipe(\r\n      switchMap((formManifest: FormManifest) => {\r\n        const expressions = formManifest.expressions;\r\n        const expressionManifest = expressions.find((expressionManifest: FormExpressionsManifest) => expressionManifest.ns === this.frameContext.namespace);\r\n        if (expressionManifest) {\r\n          const expressionPath = BasePathService.convertPath(`${this.modulePath}/expressions/${expressionManifest.path}?version=${new Date().valueOf().toString()}`);\r\n          const key = BasePathService.convertPath(`${this.modulePath}/expressions/${expressionManifest.path}`);\r\n          const request$ = FormExpressionManifestService.mainfests.get(key);\r\n          if (request$) {\r\n            return request$;\r\n          } else {\r\n            const req$ = this.httpClient.get(expressionPath, { responseType: 'json' }).pipe(share());\r\n            FormExpressionManifestService.mainfests.set(key, req$);\r\n            return req$;\r\n          }\r\n        } else {\r\n          return of({});\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Inject, Injectable, Injector } from \"@angular/core\";\r\nimport { BigNumber } from 'bignumber.js';\r\nimport moment from 'moment';\r\nimport { NumberFormat, UserSettings, UserSettingsToken } from \"@farris/devkit\";\r\n\r\n@Injectable()\r\nexport class LocalizationService {\r\n  constructor(private injector: Injector, @Inject(UserSettingsToken) private userSettings: UserSettings) { }\r\n\r\n  /**\r\n   * ç¨æ·éç½®æ ¼å¼\r\n   */\r\n  public get formats(): { date: { dateFormat: string, timeFormat: string, dateTimeFormat: string }, number: { negativeSign: string, numberDecimalDigits: number, numberDecimalSeparator: string, numberGroupSeparator: string }, [prop: string]: any } {\r\n    const { dateFormat = null, timeFormat = null } = this.userSettings || {};\r\n    let dateTimeFormat = null;\r\n    if (dateFormat && timeFormat) {\r\n      dateTimeFormat = `${dateFormat} ${timeFormat}`;\r\n    }\r\n    const date = {\r\n      dateFormat,\r\n      timeFormat,\r\n      dateTimeFormat\r\n    };\r\n    const { negativeSign = null, numberDecimalDigits = null, numberDecimalSeparator = null, numberGroupSeparator = null } = this.numberFormat || {};\r\n    const number = {\r\n      negativeSign,\r\n      numberDecimalDigits,\r\n      numberDecimalSeparator,\r\n      numberGroupSeparator\r\n    };\r\n    return { date, number };\r\n  }\r\n  /**\r\n   * æ ¹æ®æ°æ®ç±»åæ¬å°åæ°æ®\r\n   * @param value value\r\n   * @param dataType æ°æ®ç±»å\r\n   * @returns string\r\n   */\r\n  public localize(value: any, dataType: string): string {\r\n    if (dataType && value) {\r\n      dataType = dataType.toLowerCase();\r\n      if (dataType === 'date') {\r\n        return this.transformDate(value);\r\n      } else if (dataType === 'datetime') {\r\n        return this.transformDateTime(value);\r\n      } else if (dataType === 'number') {\r\n        return this.transformNumber(value);\r\n      } else {\r\n        return value;\r\n      }\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n  /**\r\n   * æ ¹æ®å½éåç±»åè·åæ ¼å¼åå­ç¬¦ä¸²\r\n   * @param localizationType å½éåç±»å\r\n   * @returns \r\n   */\r\n  public getFormat(localizationType: string): string {\r\n    if (localizationType) {\r\n      localizationType = localizationType.toLowerCase();\r\n    }\r\n    if (localizationType === 'date') {\r\n      return this.formats.date.dateFormat;\r\n    } else if (localizationType === 'datetime') {\r\n      return this.formats.date.dateTimeFormat;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n  /**\r\n   * è½¬æ¢æ¥æ\r\n   * @param value value\r\n   */\r\n  private transformDate(value: any) {\r\n    let dateFormat = this.userSettings && this.userSettings.dateFormat || 'YYYY-MM-DD';\r\n    if (!dateFormat || !value) {\r\n      return value;\r\n    }\r\n    const date = moment(value);\r\n    const isValid = date.isValid();\r\n    if (!isValid) {\r\n      return value;\r\n    }\r\n    dateFormat = this.parseDateFormat(dateFormat);\r\n    return date.format(dateFormat);\r\n  }\r\n  /**\r\n   * è½¬æ¢æ¥ææ¶é´\r\n   * @param value value\r\n   * todo: ç®åæ æ³å®ä¹æ¥ææ¶é´æ ¼å¼\r\n   */\r\n  private transformDateTime(value: any) {\r\n    let dateFormat = this.userSettings && this.userSettings.dateFormat || 'YYYY-MM-DD';\r\n    let timeFormat = this.userSettings && this.userSettings.timeFormat || 'HH:mm:ss';\r\n    if (!dateFormat || !timeFormat) {\r\n      return value;\r\n    }\r\n    const dateTime = moment(value);\r\n    const isValid = dateTime.isValid();\r\n    if (!isValid) {\r\n      return value;\r\n    }\r\n    if (dateFormat) {\r\n      dateFormat = this.parseDateFormat(dateFormat);\r\n    }\r\n    if (timeFormat) {\r\n      timeFormat = this.parseTimeFormat(timeFormat);\r\n    }\r\n    const dateTimeFormat = dateFormat + ' ' + timeFormat;\r\n    return dateTime.format(dateTimeFormat);\r\n  }\r\n  /**\r\n   * è½¬æ¢æ°å­\r\n   * @param value value\r\n   */\r\n  private transformNumber(value): string {\r\n    if (value === null || value === undefined || value === '') {\r\n      return '';\r\n    }\r\n    const bigNumber = new BigNumber(value);\r\n    // å¦æä¸æ¯æ°å­ï¼ä¸åä»»ä½å¤ç\r\n    if (!BigNumber.isBigNumber(bigNumber)) {\r\n      return value;\r\n    }\r\n    const isNegative = bigNumber.isNegative();\r\n    const format = this.buildNumberFormat();\r\n    const { negativeSign = null, numberDecimalDigits = null } = this.numberFormat || {};\r\n    if (isNegative) {\r\n      if (negativeSign !== null) {\r\n        format.prefix = negativeSign;\r\n        return bigNumber.absoluteValue().toFormat(numberDecimalDigits, null, format);\r\n      }\r\n    }\r\n    return bigNumber.toFormat(numberDecimalDigits, null, format);\r\n  }\r\n  /**\r\n   * è½¬æ¢æ¥ææ ¼å¼è§åä¸ºmomentçformatè§å\r\n   * @param format format\r\n   */\r\n  private parseDateFormat(format: string) {\r\n    return format.replace(/y/g, 'Y').replace(/d/g, 'D');\r\n  }\r\n  /**\r\n   * è½¬æ¢æ¶é´æ ¼å¼è§åä¸ºmomentçformatè§å\r\n   * @param format format\r\n   */\r\n  private parseTimeFormat(format: string) {\r\n    return format.replace(/M/g, 'm');\r\n  }\r\n  /**\r\n   * æé bignumberæ°å­æ ¼å¼åéé¡¹\r\n   */\r\n  private buildNumberFormat() {\r\n    if (this.numberFormat) {\r\n      const { numberDecimalSeparator = null, numberGroupSeparator = null } = this.numberFormat;\r\n      const format: any = {\r\n        groupSize: 3,\r\n      };\r\n      if (numberDecimalSeparator !== null) {\r\n        format.decimalSeparator = numberDecimalSeparator;\r\n      }\r\n      if (numberGroupSeparator !== null) {\r\n        format.groupSeparator = numberGroupSeparator;\r\n      }\r\n      return format;\r\n    }\r\n  }\r\n  private get numberFormat(): NumberFormat {\r\n    return this.userSettings && this.userSettings.numberFormat || null;\r\n  }\r\n}","import { Injectable, Injector } from \"@angular/core\";\r\nimport { FrameContext } from \"@farris/devkit\";\r\nimport { EMPTY } from \"rxjs\";\r\nimport { AttentionService, AttentionElement } from '@farris/ui-tooltip';\r\n\r\n\r\n@Injectable()\r\nexport class FormAttentionService {\r\n  constructor(private injector: Injector, private frameContext: FrameContext, private attentionService: AttentionService) { }\r\n  /**\r\n   * éªçæé®\r\n   * @param ids idå­ç¬¦ä¸²ææ°ç»\r\n   * @param duration æ¶é´é´é\r\n   * @returns \r\n   */\r\n  public blink(ids: string | string[], duration?: any) {\r\n    if (typeof ids === 'string') {\r\n      ids = ids.split(',').filter(p => p);\r\n    }\r\n    if (!Array.isArray(ids) || ids.length < 1) {\r\n      return EMPTY;\r\n    }\r\n    if (typeof duration === 'string') {\r\n      duration = duration.trim();\r\n    }\r\n    if (!duration) {\r\n      duration = 600;\r\n    }\r\n    duration = parseInt(duration);\r\n    if (isNaN(duration) || duration <= 0) {\r\n      duration = 600;\r\n    }\r\n    const elements: AttentionElement[] = ids.map((item: string) => {\r\n      return {\r\n        idOrEl: item,\r\n        // type:'',\r\n        // class:''\r\n      };\r\n    });\r\n    this.attentionService.catchAttention(elements, duration);\r\n  }\r\n}","export namespace Prop {\r\n  /**\r\n   * ç¹å¾é\r\n   */\r\n  export interface IPropSet {\r\n    id: string;\r\n    /**\r\n     * ç¹å¾éç¼å·\r\n     */\r\n    code: string;\r\n    /**\r\n     * å¨æå­æ®µï¼è¿åå¼ä¸­ä¸å­å¨ï¼ç¨äºå±ç¤ºå½åè¯­è¨çææ¬\r\n     */\r\n    name?: string;\r\n    /**\r\n     * ç¹å¾éåç§°-è±æ\r\n     */\r\n    name_en: string;\r\n    /**\r\n     * ç¹å¾éåç§°-ç®ä½\r\n     */\r\n    name_chs: string;\r\n    /**\r\n     * ç¹å¾éåç§°-ç¹ä½\r\n     */\r\n    name_cht: string;\r\n  }\r\n  /**\r\n   * ç¹å¾é¡¹\r\n   */\r\n  export interface IProp {\r\n    /**\r\n     * ç¹å¾é¡¹id\r\n     */\r\n    id: string;\r\n    /**\r\n     * ç¹å¾é¡¹ç¼å·\r\n     */\r\n    code: string;\r\n    /**\r\n     * ç¼å·å­æ®µï¼æä¸ä½¿ç¨ï¼\r\n     */\r\n    codefield: string;\r\n    /**\r\n     * å¨æå­æ®µ\r\n     */\r\n    name?: string;\r\n    /**\r\n     * ç¹å¾é¡¹åç§°-è±æ\r\n     */\r\n    name_en: string;\r\n    /**\r\n     * ç¹å¾é¡¹ç¼å·-ç®ä½\r\n     */\r\n    name_chs: string;\r\n    /**\r\n     * ç¹å¾é¡¹ç¼å·-ç¹ä½\r\n     */\r\n    name_cht: string;\r\n    /**\r\n     * ç¹å¾å¼\r\n     */\r\n    value: any;\r\n    /**\r\n     * å¼å­æ®µ\r\n     */\r\n    valuefield: string;\r\n    /**\r\n     * ç¹å¾é¡¹å¯¹åºçè¾å¥æ§ä»¶ç±»å\r\n     */\r\n    inputtype: string;\r\n    /**\r\n     * æ°å­ç²¾åº¦\r\n     */\r\n    digitalaccuracy: number;\r\n    /**\r\n     * ç¹å¾éid\r\n     */\r\n    setid: string;\r\n    helpid: string;\r\n    /**\r\n     * æä¸¾æ°æ®æº\r\n     * @attention æ¥å£è¿åç»æä¸ºå­ç¬¦ä¸²\r\n     */\r\n    enuminfo: string;\r\n    /**\r\n     * æä¸¾æ°æ®æº\r\n     */\r\n    data: IEnumInfo[];\r\n    /**\r\n     * æ åä»£ç éæ¯å¦ä¸ºæ \r\n     */\r\n    setistree: string;\r\n    /**\r\n     * æ åä»£ç éid\r\n     */\r\n    codesetid: string;\r\n    /**\r\n     * ææ¬å­æ®µ\r\n     */\r\n    textfield: string;\r\n    /**\r\n     * è¿æ»¤æ¡ä»¶\r\n     */\r\n    filtercondition: any;\r\n    /**\r\n     * å¿å¡«\r\n     */\r\n    isrequired: string | boolean;\r\n    /**\r\n     * åªè¯»\r\n     */\r\n    isreadonly: string | boolean;\r\n    /**\r\n     * æåº\r\n     */\r\n    sortorder: number;\r\n\r\n    timestamp_createdon: string;\r\n    timestamp_lastchangedon: string;\r\n\r\n    timestamp_createdby: string;\r\n    timestamp_lastchangedby: string;\r\n\r\n  }\r\n  /**\r\n   * æä¸¾æ°æ®æºæ ¼å¼\r\n   */\r\n  export interface IEnumInfo {\r\n    id: string;\r\n    text: string;\r\n  }\r\n  export interface IReturnValue {\r\n    propset: IPropSet[],\r\n    props: IProp[]\r\n  }\r\n  export enum InputType {\r\n    enum = 'Enum',\r\n    string = 'String',\r\n    help = 'Help',\r\n    number = 'Number',\r\n    date = 'Date'\r\n  }\r\n}\r\n","import { Injectable, Injector } from \"@angular/core\";\r\nimport { BefRepository, ResponseInfo } from \"@farris/bef\";\r\nimport { Repository } from '@farris/devkit';\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Prop } from \"./types\";\r\nimport { BasePathService } from \"@farris/rtf\";\r\n\r\n@Injectable()\r\nexport class FeatureRepository {\r\n  constructor(\r\n    private injector: Injector,\r\n    private repository: Repository<any>,\r\n  ) { }\r\n  /**\r\n   * æ ¹æ®ç©æidè·åç©æç¹å¾é¡¹åç¹å¾å¼ï¼å¬å±é»è®¤å¼ï¼\r\n   * @param materialId ç©æid\r\n   */\r\n  public getFeaturesByMaterialId(materialId: string): Observable<ResponseInfo> {\r\n    const url = BasePathService.convertPath('/api/scm/scmfnd/v1.0/scmcommoncmpservice/service/getmaterialprops');\r\n    const body = {\r\n      materialID: materialId\r\n    };\r\n    const options = {\r\n      body\r\n    };\r\n    const befRepository: BefRepository<any> = this.repository as BefRepository<any>;\r\n    return befRepository.proxy.request(url, 'put', null, options);\r\n  }\r\n  /**\r\n   * æ ¹æ®ç©æidåç©æç¹å¾ä¿å­åçhashè·åè¯¥ç©æå·²ç»å­å¨çç¹å¾é¡¹å¼\r\n   * @param materialId ç©æId\r\n   * @param configID å¯¹åºè¯¥ç©æçç¹å¾é¡¹hash\r\n   * @returns\r\n   */\r\n  public getConfigedValueByFeatureId(materialId: string, configID: string, configType: string = 'Materials'): Observable<ResponseInfo> {\r\n    const url = BasePathService.convertPath('/api/bf/df/v1.0/charactconfigservice/service/getcharactconfiginfo');\r\n    const body = { objType: configType, objID: materialId, configID };\r\n    const befRepository: BefRepository<any> = this.repository as BefRepository<any>;\r\n    const options = {\r\n      body\r\n    };\r\n    return befRepository.proxy.request(url, 'put', null, options);\r\n  }\r\n  /**\r\n   * ä¿å­ç©æç¹å¾é¡¹\r\n   * @param materialId ç©æid\r\n   * @param charactValue ç¹å¾å¼\r\n   * @param configType éç½®ç±»å\r\n   * @returns\r\n   */\r\n  public applyFeatures(materialId: string, charactValue: any, configType: string = 'Materials') {\r\n    const body = { objType: configType, objID: materialId, charactValue };\r\n    const befRepository: BefRepository<any> = this.repository as BefRepository<any>;\r\n    const options = {\r\n      body\r\n    };\r\n    return befRepository.proxy.request(BasePathService.convertPath('/api/bf/df/v1.0/charactconfigservice/service/matchcharactconfigid'), 'put', null, options);\r\n  }\r\n  /**\r\n   * è·åå¸®å©ä¿¡æ¯\r\n   * @param helpid å¸®å©id\r\n   * @param filter è¿æ»¤æ¡ä»¶\r\n   * @param params åæ°\r\n   * @returns\r\n   */\r\n  public getHelpInfo(helpid: string, filter: string, params: any): Observable<any> {\r\n    const url = BasePathService.convertPath('/api/scm/scmfnd/v1.0/scmcommoncmpservice/service/gethelpdata');\r\n    const httpParams: any = {};\r\n    if (params) {\r\n      if (params.pageIndex) {\r\n        httpParams['pageIndex'] = JSON.stringify(params.pageIndex - 0);\r\n      }\r\n      if (params.pageSize) {\r\n        httpParams['pageSize'] = JSON.stringify(params.pageSize - 0);\r\n      }\r\n      if (params.condition) {\r\n        httpParams['condition'] = JSON.stringify(params.condition);\r\n      }\r\n      if (params.searchValue) {\r\n        httpParams['search'] = params.searchValue;\r\n      }\r\n    }\r\n    const body = {\r\n      helpID: helpid,\r\n      queryParam: JSON.stringify(httpParams),\r\n      filterStr: filter\r\n    };\r\n    const befRepository: BefRepository<any> = this.repository as BefRepository<any>;\r\n    const options = {\r\n      body\r\n    };\r\n    return befRepository.proxy.request(url, 'put', null, options);\r\n  }\r\n}\r\n","import { Inject, Injectable, Injector, LOCALE_ID, Optional } from \"@angular/core\";\r\nimport { BefRepository, ResponseInfo } from \"@farris/bef\";\r\nimport { FrameContext, RestfulService, Repository } from '@farris/devkit';\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { FeatureRepository } from \"./feature-repository\";\r\nimport { Prop } from \"./types\";\r\nimport { BasePathService } from \"@farris/rtf\";\r\n\r\n@Injectable()\r\nexport class FeatureDataService {\r\n  constructor(\r\n    private injector: Injector,\r\n    private repository: FeatureRepository,\r\n    @Optional() @Inject(LOCALE_ID) private localeId?: string\r\n  ) {\r\n    this.localeId = this.localeId || 'zh-CHS';\r\n  }\r\n  /**\r\n   * æ ¹æ®ç©æidè·åç©æç¹å¾é¡¹åç¹å¾å¼ï¼å¬å±é»è®¤å¼ï¼\r\n   * @param materialId ç©æid\r\n   */\r\n  public getFeaturesByMaterialId(materialId: string): Observable<Prop.IReturnValue> {\r\n    return this.repository.getFeaturesByMaterialId(materialId).pipe(\r\n      map((response: ResponseInfo) => {\r\n        if (!response || !response.returnValue) {\r\n          return null;\r\n        }\r\n        const returnValue = JSON.parse(response.returnValue);\r\n        const result: Prop.IReturnValue = { propset: [], props: [] };\r\n        const propsets = returnValue.propset || null;\r\n        const props = returnValue.props || null;\r\n        if (propsets && Array.isArray(propsets)) {\r\n          propsets.map((propset: Prop.IPropSet) => {\r\n            propset.name = this.translateName(propset);\r\n            return propset;\r\n          });\r\n          result.propset = propsets;\r\n        }\r\n        if (props && Array.isArray(props) && props.length > 0) {\r\n          props.map((prop: Prop.IProp) => {\r\n            // å¤çå¤è¯­\r\n            prop.name = this.translateName(prop);\r\n            // å¤çæä¸¾\r\n            if (prop.inputtype === Prop.InputType.enum && prop.enuminfo) {\r\n              prop.data = JSON.parse(prop.enuminfo);\r\n            }\r\n            // å¤çå¿å¡«ååªè¯»\r\n            prop.isreadonly = prop.isreadonly === '1' ? true : false;\r\n            prop.isrequired = prop.isrequired === '1' ? true : false;\r\n            return prop;\r\n          });\r\n          result.props = props;\r\n        }\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * æ ¹æ®ç©æidåç©æç¹å¾ä¿å­åçhashè·åè¯¥ç©æå·²ç»å­å¨çç¹å¾é¡¹å¼\r\n   * @param materialId ç©æId\r\n   * @param configID å¯¹åºè¯¥ç©æçç¹å¾é¡¹hash\r\n   * @returns\r\n   */\r\n  public getConfigedValueByFeatureId(materialId: string, configID: string, configType: string = 'Materials'): Observable<any> {\r\n    return this.repository.getConfigedValueByFeatureId(materialId, configID, configType).pipe(map((result: any) => {\r\n      return JSON.parse(result);\r\n    }));\r\n  }\r\n  /**\r\n   * ä¿å­ç©æç¹å¾é¡¹\r\n   * @param materialId ç©æid\r\n   * @param charactValue ç¹å¾å¼\r\n   * @param configType éç½®ç±»å\r\n   * @returns\r\n   */\r\n  public applyFeatures(materialId: string, charactValue: any, configType: string = 'Materials') {\r\n    return this.repository.applyFeatures(materialId, charactValue, configType).pipe(map((config: any) => {\r\n      return JSON.parse(config);\r\n    }));\r\n  }\r\n  /**\r\n   * è·åå¸®å©ä¿¡æ¯\r\n   * @param helpid å¸®å©id\r\n   * @param filter è¿æ»¤æ¡ä»¶\r\n   * @param params åæ°\r\n   * @returns\r\n   */\r\n  public getHelpInfo(helpid: string, filter: string, params: any): Observable<any> {\r\n    const url = BasePathService.convertPath('/api/scm/scmfnd/v1.0/scmcommoncmpservice/service/gethelpdata');\r\n    const httpParams: any = {};\r\n    if (params) {\r\n      if (params.pageIndex) {\r\n        httpParams['pageIndex'] = JSON.stringify(params.pageIndex - 0);\r\n      }\r\n      if (params.pageSize) {\r\n        httpParams['pageSize'] = JSON.stringify(params.pageSize - 0);\r\n      }\r\n      if (params.condition) {\r\n        httpParams['condition'] = JSON.stringify(params.condition);\r\n      }\r\n      if (params.searchValue) {\r\n        httpParams['search'] = params.searchValue;\r\n      }\r\n    }\r\n    const body = {\r\n      helpID: helpid,\r\n      queryParam: JSON.stringify(httpParams),\r\n      filterStr: filter\r\n    };\r\n    const befRepository: BefRepository<any> = null;//this.repository as BefRepository<any>;\r\n    const options = {\r\n      body\r\n    };\r\n    return befRepository.proxy.request(url, 'put', null, options).pipe(\r\n      map((result: any) => JSON.parse(result))\r\n    );\r\n  }\r\n  /**\r\n   * å½éåç¹å¾é¡¹æç¹å¾éåç§°\r\n   * @param object ç¹å¾éæç¹å¾é¡¹å¯¹è±¡\r\n   * @returns\r\n   */\r\n  private translateName(object: Prop.IPropSet | Prop.IProp): string {\r\n    if (!object) {\r\n      return null;\r\n    }\r\n    let name = null;\r\n    switch (this.localeId) {\r\n      case 'en': {\r\n        name = object['name_en'];\r\n      } break;\r\n      case 'zh-CHS': {\r\n        name = object['name_chs'];\r\n      } break;\r\n      case 'zh-CHT': {\r\n        name = object['name_cht'];\r\n      } break;\r\n      default: name = object['name_chs'];\r\n    }\r\n    return name;\r\n  }\r\n}\r\n","import { Injectable, Injector } from \"@angular/core\";\r\nimport { FeatureEditorService } from '@farris/ui-feature-editor';\r\nimport { FormNotifyService } from \"../form-notify.service\";\r\nimport { map, switchMap, tap } from \"rxjs/operators\";\r\nimport { FormLoadingService } from \"../form-loading/form-loading.service\";\r\nimport { FeatureDataService } from './feature-data.service';\r\nimport { LanguageService } from '../languag.service';\r\nimport { of } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class FeatureEditService {\r\n  constructor(\r\n    private injector: Injector,\r\n    private featureEditorService: FeatureEditorService,\r\n    private featureDataService: FeatureDataService,\r\n    private loadingService: FormLoadingService,\r\n    private notifyService: FormNotifyService,\r\n    private languageService: LanguageService,\r\n  ) { }\r\n\r\n  public edit(materialId: string, materialFeatureId?: string, options?: any) {\r\n    if (!materialId) {\r\n      throw new Error('[FeatureEditService]ç©æidä¸è½ä¸ºç©ºï¼');\r\n    }\r\n    if (!options) {\r\n      options = {};\r\n    }\r\n    if (typeof options === 'string' && options.startsWith('{') && options.endsWith('}')) {\r\n      options = JSON.parse(options);\r\n    }\r\n    options.getHelpInfo = this.featureDataService.getHelpInfo;\r\n    this.loadingService.show();\r\n    return this.featureDataService.getFeaturesByMaterialId(materialId).pipe(\r\n      tap((result: any) => {\r\n        this.loadingService.hide();\r\n        const returnValue = result || null;\r\n        if (returnValue) {\r\n          const featureInfo = JSON.parse(returnValue);\r\n          const props = featureInfo.props || null;\r\n          if (!props || props.length < 1) {\r\n            this.notifyService.warning(this.languageService.propsIsEmpty);\r\n            return;\r\n          }\r\n          this.featureEditorService.show(props, options);\r\n        } else {\r\n          this.notifyService.error(this.languageService.propsIsEmpty);\r\n        }\r\n      })\r\n    );\r\n  }\r\n  private buildFeatures(materialId: string, materialFeatureId?: string) {\r\n    const features$ = this.featureDataService.getFeaturesByMaterialId(materialId);\r\n    return features$.pipe(\r\n      switchMap(featureSet => {\r\n        if (materialFeatureId) {\r\n          const configedFeatures$ = this.featureDataService.getConfigedValueByFeatureId(materialFeatureId, materialFeatureId);\r\n          return configedFeatures$.pipe(\r\n            map(defaultConfigs => {\r\n              const featureTemplate = featureSet.props;\r\n              const features = this.mergeFeatures(featureTemplate, defaultConfigs);\r\n              return features;\r\n            })\r\n          );\r\n        } else {\r\n          return of(featureSet.props);\r\n        }\r\n      })\r\n    );\r\n\r\n  }\r\n  private mergeFeatures(featureTemplate: any, defaultConfigs: any) {\r\n    return null;\r\n  }\r\n}","import { Injectable, Injector } from \"@angular/core\";\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { AppContext, FrameContext, Repository, ENTITY_TEMPLATE, ResolveService, ExpressionUtil, ExpressionExecutor } from \"@farris/devkit\";\r\nimport { Observable, of } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class ExpressionService {\r\n  constructor(private injector: Injector, private resolveService: ResolveService, private frameContext: FrameContext, private expressionExecutor: ExpressionExecutor) { }\r\n  /**\r\n   * æ§è¡è¡¨è¾¾å¼è®¡ç®\r\n   * @param expression è¡¨è¾¾å¼\r\n   * @param customContext èªå®ä¹ä¸ä¸æ\r\n   * @returns \r\n   */\r\n  public execute(expression: string, customContext?: { [prop: string]: any }): any {\r\n    const deps = this.resolveService.resolve(expression);\r\n    const groupDependencies = ExpressionUtil.getGroupFunctionDependency(expression, this.frameContext.repository.entityTypeInfo);\r\n    const entityContext = this.buildEntityContext(deps, groupDependencies);\r\n    const stateContext = this.buildStateContext();\r\n    const context = {\r\n      [this.entityOriginalNodeCode]: entityContext,\r\n      ...stateContext,\r\n      BigNumber,\r\n      frameContext: this.frameContext,\r\n      bindingData: this.frameContext.bindingData,\r\n      repository: this.frameContext.repository,\r\n      ...customContext\r\n    }\r\n    return this.expressionExecutor.eval(expression, context);\r\n  }\r\n  /**\r\n   * æ§è¡è¡¨è¾¾å¼ï¼è¿åå¯è§å¯å¯¹è±¡ï¼\r\n   * @param expression è¡¨è¾¾å¼\r\n   * @param customContext èªå®ä¹ä¸ä¸æ\r\n   * @returns \r\n   */\r\n  public executeAsync(expression: string, customContext?: { [prop: string]: any }): Observable<any> {\r\n    const result = this.execute(expression, customContext);\r\n    return of(result);\r\n  }\r\n  /**\r\n   * æé å®ä½ä¸ä¸æ\r\n   * @param deps \r\n   * @param groupDependencies \r\n   * @param context \r\n   * @returns \r\n   */\r\n  private buildEntityContext(deps: string[], groupDependencies: string[], context?: { [prop: string]: any }) {\r\n    let isGroupdMainEntity = false;\r\n    deps.forEach((dep: string) => {\r\n      const isEntityDependency = this.isEntityDependency(dep);\r\n      const isGroupDependency = groupDependencies.findIndex(item => item === dep) !== -1;\r\n      // å¦æä¾èµçæ¯stateï¼æ éå¤çï¼ç°å¨éè¦ç¡®å®çæ¯è¿åå¤å°å®ä½çé®é¢ï¼åstateæ²¡æå³ç³»\r\n      // è¡¨è¾¾å¼ä¾èµäºå®ä½\r\n      if (isEntityDependency) {\r\n        // æ¯èåä¾èµ\r\n        if (isGroupDependency) {\r\n          const dependencyLength = dep.split('/').filter(p => p).length - 1;\r\n          if (dependencyLength === 1) {\r\n            // èåäºä¸»è¡¨å­æ®µï¼ææä¸»è¡¨æ°æ®é½éè¦åä¸è¿ç®ï¼æ­¤æ¶å·²ç»ç¡®å®è®¡ç®çå®ä½ä¸ä¸æäºã\r\n            isGroupdMainEntity = true;\r\n          } else {\r\n            // èåäºå­è¡¨å­æ®µï¼åªéè¦ä¼ éå½åå®ä½\r\n          }\r\n        } else {\r\n          // å½åä¾èµä¸æ¯èåï¼åªéè¦ä¼ éå½åå®ä½\r\n        }\r\n      }\r\n    });\r\n    const data = this.getEntity();\r\n    if (isGroupdMainEntity) {\r\n      const collection = this.frameContext.repository.entityCollection.toJSON();\r\n      data['__type__'] = 'List';\r\n      data['__items__'] = collection;\r\n    }\r\n    return data;\r\n  }\r\n  /**\r\n   * æ¯å¦ä¸ºå®ä½ä¾èµ\r\n   * @param dep \r\n   * @returns \r\n   */\r\n  private isEntityDependency(dep: string) {\r\n    return dep.startsWith(ENTITY_TEMPLATE);\r\n  }\r\n  /**\r\n   * è·åå®ä½\r\n   * @param event \r\n   * @returns \r\n   */\r\n  public getEntity() {\r\n    const entityTypeInfo = this.frameContext.repository.entityTypeInfo;\r\n    const bindingData = this.frameContext.bindingData;\r\n    const childrenEntityPaths = [];\r\n    ExpressionUtil.getChildrenEntityPaths(entityTypeInfo, childrenEntityPaths);\r\n    const entity = this.frameContext.bindingData.list.currentItem.toJSON();\r\n    entity['__type__'] = 'Entity';\r\n    if (!childrenEntityPaths || childrenEntityPaths.length < 1) {\r\n      return entity;\r\n    }\r\n    // æ¾å°ææå­è¡¨\r\n    childrenEntityPaths.forEach((paths: string[]) => {\r\n      const row = ExpressionUtil.getCurrentRowByPaths(paths, bindingData);\r\n      if (row) {\r\n        const propertyName = paths.pop();\r\n        let parent = paths.reduce((object: any, path: string) => {\r\n          return object && object[path] || null;\r\n        }, entity);\r\n        const node = { __items__: [...parent[propertyName]], ...row, __type__: 'List' };\r\n        parent[propertyName] = node;\r\n      }\r\n    });\r\n    return entity;\r\n  }\r\n  /**\r\n   * è·åä¸»å®ä½åå§å­æ®µå\r\n   */\r\n  protected get entityOriginalNodeCode(): string {\r\n    const repository = this.injector.get(Repository);\r\n    return repository && repository.entityTypeInfo && repository.entityTypeInfo.entityInfo && repository.entityTypeInfo.entityInfo.originalCode || null;\r\n  }\r\n  /**\r\n   * æé åéä¸ä¸æ\r\n   * @param event \r\n   * @returns \r\n   */\r\n  public buildStateContext() {\r\n    const ns = this.frameContext.namespace;\r\n    const appContext = this.injector.get<AppContext>(AppContext, null);\r\n    const frameContexts = appContext.frameContextManager.getFrameContextsByNamespace(ns);\r\n    const result = {};\r\n    if (frameContexts && frameContexts.length > 0) {\r\n      const anonymousFrameContext = frameContexts[0];\r\n      const rootFrameContext = anonymousFrameContext.getVirtualRootFrameContext();\r\n      if (rootFrameContext) {\r\n        const uiState = rootFrameContext.viewModel.uiState;\r\n        const propertyNames = Object.getOwnPropertyNames(uiState) || [];\r\n        propertyNames.forEach((prop: string) => {\r\n          if (prop.match(/^[a-zA-Z0-9_\\$]+$/g) !== null) {\r\n            result[prop] = uiState[prop];\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n}","import { ApplicationRef, ChangeDetectorRef, Injectable, Injector } from \"@angular/core\";\r\n\r\n/**\r\n * angular èå¼æ£æ¥æå¡\r\n */\r\n@Injectable()\r\nexport class DirtyCheckingService {\r\n  constructor(public injector: Injector, private cd: ChangeDetectorRef, private appRef: ApplicationRef) {\r\n  }\r\n  /**\r\n   * Checks this view and its children. \r\n   * @param global æ¯å¦å¨å±æ£æ¥\r\n   */\r\n  public detectChanges(global?: boolean | string) {\r\n    global = (global === true || global === 'true') ? true : false;\r\n    if (global && this.appRef) {\r\n      this.appRef.tick();\r\n    } else if (this.cd) {\r\n      this.cd.detectChanges();\r\n    }\r\n  }\r\n  /**\r\n   * å¨æå®æ¶é´ï¼msï¼åè§¦åAngularèå¼æ£æ¥\r\n   * @param duration è¶æ¶æ¶é´(ms)\r\n   * @param global æ¯å¦å¨å±æ£æ¥\r\n   */\r\n  public detectChangesAfter(duration: number, global?: boolean | string) {\r\n    global = (global === true || global === 'true') ? true : false;\r\n    if (isNaN(duration)) {\r\n      return;\r\n    }\r\n    if (global && this.appRef) {\r\n      window.setTimeout(() => {\r\n        this.appRef.tick();\r\n      }, duration);\r\n    } else if (this.cd) {\r\n      window.setTimeout(() => {\r\n        this.cd.detectChanges();\r\n      }, duration);\r\n    }\r\n  }\r\n}","import { Injectable, Injector } from '@angular/core';\r\nimport { EMPTY, of } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { BefRepository } from '@farris/bef';\r\nimport { FrameContext, DataPathCreator, Repository, DataPath, EntityList, BindingList, Entity } from '@farris/devkit';\r\nimport { LanguageService } from './languag.service';\r\nimport { FormMessageService } from './form-message.service';\r\n\r\n@Injectable()\r\nexport class PopUpService {\r\n  constructor(\r\n    private injector: Injector,\r\n    private frameContext: FrameContext,\r\n    private repository: Repository<any>,\r\n    private languageService: LanguageService,\r\n    private messageService: FormMessageService\r\n  ) { }\r\n  public confirm() { }\r\n  /**\r\n   * åæ¶åæ´\r\n   * @param frameId\r\n   * @param id\r\n   * @returns\r\n   * @throws invalid frameid\r\n   */\r\n  public cancel(frameId: string, id?: string) {\r\n    const frameContext = this.frameContext.appContext.frameContextManager.getFrameContextById(frameId);\r\n    if (!frameContext) {\r\n      throw new Error(`[PopUpService]Invalid frameId ${frameId}`);\r\n    }\r\n    const primaryValue = this.frameContext.bindingData.list.currentId;\r\n    const bindingPath = frameContext.viewModel.bindingPath;\r\n    const bindingPaths = bindingPath.split('/').filter((p) => p);\r\n    if (!id) {\r\n      const bindingList = this.frameContext.bindingData.getList() as BindingList;\r\n      id = bindingList.currentId;\r\n    }\r\n    const befRepository = this.repository as BefRepository<any>;\r\n    const longPaths = (DataPathCreator.createByShortPathFromRoot(bindingPaths, befRepository.entityManager, this.frameContext.bindingData) as DataPath).toArray().map((path: string) => path.split(':')[1]);\r\n    const entityListPaths = Array.from(longPaths);\r\n    // èå¼å½åè¡¨å½åè¡\r\n    entityListPaths.pop();\r\n    const dialogRef = this.frameContext.frameComponent['dialogRef'];\r\n    if (entityListPaths.length < 1) {\r\n      // ä¸»è¡¨\r\n      const entity = this.repository.entityCollection.getEntityById(id) as Entity;\r\n      const originalData = entity['originalData'];\r\n      entity.load(originalData, { loadChild: false });\r\n    } else {\r\n      const entityList = befRepository.entityManager.getEntityNodeByPath(entityListPaths) as EntityList<any>;\r\n      if (entityList) {\r\n        const originalData: any[] = entityList['originalData'];\r\n        const item = originalData.find((item) => item.id === id);\r\n        if (item) {\r\n          // å·²ææ°æ®ï¼è¿ååæ´\r\n          const entity: Entity = befRepository.entityManager.getEntityByPath(longPaths) as Entity;\r\n          if (entity.changes && entity.changes.length > 0) {\r\n            return this.messageService.confirm(this.languageService.cancelWithoutSave).pipe(\r\n              tap((result: boolean) => {\r\n                if (result) {\r\n                  entity.load(item, { loadChild: false });\r\n                  entity.changes.splice(0, entity.changes.length);\r\n                }\r\n              })\r\n            );\r\n          } else {\r\n            // æ²¡æä¿®æ¹ï¼ç´æ¥å³é­\r\n            if (dialogRef) {\r\n              dialogRef.close();\r\n            }\r\n          }\r\n        } else {\r\n          // æ°å¢çæ°æ®ï¼å é¤\r\n          const paths = this.buildPath(bindingPath, primaryValue);\r\n          return this.messageService.confirm(this.languageService.cancelWithoutSave).pipe(\r\n            switchMap((result) => {\r\n              if (result) {\r\n                return befRepository.removeEntityByPath(paths, id).pipe(\r\n                  tap(() => {\r\n                    befRepository.entityManager.removeEntityByPath(paths, id);\r\n\r\n                    if (entityList.count() === 0 && dialogRef) {\r\n                      dialogRef.close();\r\n                    }\r\n                  })\r\n                );\r\n              } else {\r\n                return EMPTY;\r\n              }\r\n            })\r\n          );\r\n        }\r\n      }\r\n    }\r\n    return of([]);\r\n  }\r\n  /**\r\n   * åæ­¥å½åè¡\r\n   * @param id å½åè¡\r\n   */\r\n  public updateCurrentRow(id?: string) {\r\n    const bindingPath = this.frameContext.viewModel.bindingPath;\r\n    const bindingPaths = bindingPath.split('/').filter((p) => p);\r\n    // const frameId = this.frameContext.frameId;\r\n    const root = this.frameContext.getVirtualRootFrameContext();\r\n    const primaryKeyValue = root.bindingData.list.currentId;\r\n    this.frameContext.bindingData.list.setCurrentId(primaryKeyValue);\r\n    if (bindingPaths.length > 0) {\r\n      const paths = [];\r\n      bindingPaths.forEach((path: string, index: number, array) => {\r\n        paths.push(path);\r\n        const bindingList = root.bindingData.getValue(paths) as BindingList;\r\n        if (bindingList) {\r\n          const currentId = bindingList.currentId;\r\n          const modalBindingList = this.frameContext.bindingData.getValue(paths) as BindingList;\r\n          if (index === bindingPath.length - 1 && id) {\r\n            modalBindingList.setCurrentId(id);\r\n          } else if (modalBindingList) {\r\n            modalBindingList.setCurrentId(currentId);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  public closeCheck() {\r\n    const frameContext = this.frameContext;\r\n    const bindingPath = frameContext.viewModel.bindingPath;\r\n    const bindingPaths = bindingPath.split('/').filter((p) => p);\r\n    const befRepository = this.repository as BefRepository<any>;\r\n    const longPaths = (DataPathCreator.createByShortPathFromRoot(bindingPaths, befRepository.entityManager, this.frameContext.bindingData) as DataPath).toArray().map((path: string) => path.split(':')[1]);\r\n    const entityListPaths = Array.from(longPaths);\r\n    entityListPaths.pop();\r\n    const entityList = befRepository.entityManager.getEntityNodeByPath(entityListPaths) as EntityList<any>;\r\n    const dialogRef = this.frameContext.frameComponent['dialogRef'];\r\n    if (entityList.count() === 0 && dialogRef) {\r\n      dialogRef.close();\r\n    }\r\n  }\r\n  /**\r\n   * å é¤å¼¹çªä¸­çå½åè¡æ°æ®\r\n   * @param frameId -å¯éï¼è¦å é¤æ°æ®æå¨ç»ä»¶çidï¼é»è®¤ä¸ºå½ä»¤æå¨çç»ä»¶\r\n   * @param id -å¯éï¼è¦å é¤æ°æ®çidï¼é»è®¤ä¸ºå½ä»¤æå¨ç»ä»¶çå½åè¡æ°æ®id\r\n   * @param showConfirm -å¯éï¼å é¤æ°æ®æ¶æ¯å¦è¿è¡å é¤åçç¡®è®¤ï¼é»è®¤ä¸º`true`\r\n   * @returns\r\n   * @throws ç»ä»¶idéè¯¯æ¶æåºéè¯¯\r\n   */\r\n  public removeRow(frameId?: string, id?: string, showConfirm: string | boolean = true) {\r\n    const frameContext = frameId ? this.frameContext.appContext.frameContextManager.getFrameContextById(frameId) : this.frameContext;\r\n    if (!frameContext) {\r\n      throw new Error(`æ æçç»ä»¶idï¼${frameId}`);\r\n    }\r\n    // çº æ­£ä¸»é®\r\n    if (!id) {\r\n      const bindingList = frameContext.bindingData.getList() as BindingList;\r\n      id = bindingList.currentId;\r\n    }\r\n    const bindingPath = frameContext.viewModel.bindingPath;\r\n    const bindingPaths = bindingPath.split('/').filter((p) => p);\r\n    const paths = this.buildPath(bindingPath, this.frameContext.bindingData.list.currentId);\r\n    const befRepository = this.repository as BefRepository<any>;\r\n    // è½¬æ¢showConfirmä¸ºå¸å°\r\n    if (typeof showConfirm == 'string') {\r\n      showConfirm = showConfirm.trim() === 'false' ? false : true;\r\n    }\r\n    let confirm$ = of(true);\r\n    if (showConfirm) {\r\n      confirm$ = this.messageService.confirm(this.languageService.confirmDeletion);\r\n    }\r\n    return confirm$.pipe(\r\n      switchMap((result) => {\r\n        if (result) {\r\n          if (bindingPaths.length === 0) {\r\n            // ä¸»è¡¨å é¤ï¼ä¸ç«å³ä¿å­\r\n            return befRepository.removeEntityById(id, false);\r\n          } else {\r\n            return befRepository.removeEntityByPath(paths, id).pipe(\r\n              tap(() => {\r\n                befRepository.entityManager.removeEntityByPath(paths, id);\r\n              })\r\n            );\r\n          }\r\n        } else {\r\n          return EMPTY;\r\n        }\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * å³é­å¼¹çª\r\n   * @param frameId -å¯éï¼ç»ä»¶idï¼ä¸æå®æ¶ä½¿ç¨å½ä»¤æå¨çä¸ä¸æç»ä»¶\r\n   * @throws ä½¿ç¨æå®çç»ä»¶idæ æ³è·åç»ä»¶åå¼¹çªç»ä»¶å®ä¾è·åå¤±è´¥æ¶ä¼æåºå¼å¸¸\r\n   */\r\n  public closeDialog(frameId?: string) {\r\n    let frameContext = this.frameContext;\r\n    let dialogRef = null;\r\n    // å¼åèæå®äºç»ä»¶id\r\n    if (frameId) {\r\n      frameContext = this.frameContext.appContext.frameContextManager.getFrameContextById(frameId);\r\n      if (!frameContext) {\r\n        throw new Error('æå®äºæ æçç»ä»¶id');\r\n      }\r\n      dialogRef = frameContext.frameComponent['dialogRef'];\r\n    } else {\r\n      // å°è¯ä»å½åç»ä»¶ä¸ä¸æä¸­è·åå¼¹çªå¼ç¨\r\n      dialogRef = frameContext.frameComponent['dialogRef'];\r\n      if (!dialogRef) {\r\n        // å¦æå½ä»¤æè½½å°äºåå®¹ç»ä»¶ä¸\r\n        dialogRef = this.frameContext.parent.frameComponent['dialogRef'];\r\n      }\r\n    }\r\n    if (!dialogRef) {\r\n      throw new Error(`æ æ³è·åå¼¹çªç»ä»¶å®ä¾`);\r\n    }\r\n    dialogRef.close();\r\n  }\r\n  /**\r\n   * è¿åèªä¸æ¬¡æä¹åä»¥åäº§ççåæ´\r\n   * @param frameId - ç»ä»¶id\r\n   * @param id - æ°æ®id\r\n   * @param showConfirm - æ¯å¦å±ç¤ºæç¤ºä¿¡æ¯\r\n   */\r\n  public cancelChanges(frameId?: string, id?: string, showConfirm: boolean | string = true) {\r\n    const frameContext = this.getFrameContext(frameId);\r\n    // çº æ­£ä¸»é®\r\n    id = this.getPrimaryValue(frameId, id);\r\n    const data = this.getPersisteData(frameId, id);\r\n    if (typeof showConfirm === 'string') {\r\n      showConfirm = showConfirm.trim().toLowerCase() === 'false' ? false : true;\r\n    }\r\n    const isDataChanged = this.isDataChanged(data, frameId, id);\r\n    let result$ = of(true);\r\n    if (showConfirm && isDataChanged) {\r\n      result$ = this.messageService.confirm(this.languageService.cancelWithoutSave);\r\n    }\r\n    return result$.pipe(\r\n      switchMap((result: boolean) => {\r\n        if (result) {\r\n          const befRepository = frameContext.repository as BefRepository<any>;\r\n          const bindingPaths = frameContext.viewModel.bindingPath.split('/').filter((p) => p);\r\n          const longPaths = (DataPathCreator.createByShortPathFromRoot(bindingPaths, befRepository.entityManager, this.frameContext.bindingData) as DataPath).toArray().map((path: string) => path.split(':')[1]);\r\n          const entityPaths = Array.from(longPaths);\r\n          const entity = befRepository.entityManager.getEntityNodeByPath(entityPaths) as Entity;\r\n          if (entity) {\r\n            entity.load(data);\r\n          }\r\n          return of(true);\r\n        } else {\r\n          return EMPTY;\r\n        }\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * æä¹åæ°æ®\r\n   * @param frameId - ç»ä»¶id\r\n   * @param id - æ°æ®id\r\n   */\r\n  public persiste(frameId?: string, id?: string) {\r\n    // æä¹åæ°æ®\r\n    const bindingObject = this.getBindingObject(frameId, id);\r\n    bindingObject['__PSESISTE__DATA'] = bindingObject.toJSON();\r\n  }\r\n  /**\r\n   * è·åæä¹åæ°æ®\r\n   * @param frameId - ç»ä»¶id\r\n   * @param id - æ°æ®id\r\n   * @returns\r\n   */\r\n  private getPersisteData(frameId?: string, id?: string) {\r\n    const bindingObject = this.getBindingObject(frameId, id);\r\n    return bindingObject['__PSESISTE__DATA'];\r\n  }\r\n  private isDataChanged(data: { [prop: string]: any }, frameId?: string, id?: string) {\r\n    const bindingObject = this.getBindingObject(frameId, id);\r\n    const value = bindingObject.toJSON();\r\n    return JSON.stringify(value) !== JSON.stringify(data);\r\n  }\r\n  /**\r\n   * è·åå½åè¡\r\n   * @param frameId - ç»ä»¶id\r\n   * @param id - æ°æ®id\r\n   * @returns\r\n   * @throws æ¾ä¸å°å¯¹åºæ°æ®æ¶æåºæ æ³æ¾å°å¯¹åºæ°æ®çå¼å¸¸\r\n   */\r\n  private getBindingObject(frameId?: string, id?: string) {\r\n    const frameContext = this.getFrameContext(frameId);\r\n    // çº æ­£ä¸»é®\r\n    id = this.getPrimaryValue(frameId, id);\r\n    const bindingPaths = frameContext.viewModel.bindingPath.split('/').filter((p) => p);\r\n    // æ¿å°å½åè¡\r\n    const bindingList: BindingList = frameContext.bindingData.getValue(bindingPaths) as BindingList;\r\n    if (!bindingList || bindingList.length < 1) {\r\n      throw new Error(`æ æ³æ¾å°idä¸º:${id}çæ°æ®`);\r\n    }\r\n    return bindingList.currentItem;\r\n  }\r\n  /**\r\n   * æé å­è¡¨è·¯å¾\r\n   * @param bindingPath - ç»å®è·¯å¾\r\n   * @param id - id\r\n   * @throws å­è¡¨è·¯å¾éè¯¯\r\n   */\r\n  private buildPath(bindingPath: string, id: any) {\r\n    let path = '/' + id;\r\n    const subPaths = bindingPath.split('/');\r\n    if (subPaths.length > 0) {\r\n      // eg:bindingPathå½¢å¦/edus/grades,splitåæ¯['', 'edus', 'grades']\r\n      // å æ­¤indexä»1å¼å§\r\n      for (let index = 1; index < subPaths.length - 1; index++) {\r\n        const subPath = subPaths[index];\r\n        const subData = this.frameContext.viewModel.bindingData[subPath];\r\n        if (!subData || !subData.currentId) {\r\n          throw Error(`è·åå­è¡¨å®æ´è·¯å¾åºéï¼æ¾ä¸å°${subData}å¯¹åºçå­è¡¨ï¼æå¯¹åºå­è¡¨æ²¡æå½åè¡ã`);\r\n        }\r\n        path += `/${subPath}/${subData.currentId}`;\r\n      }\r\n    }\r\n    path += '/' + subPaths[subPaths.length - 1];\r\n    return path;\r\n  }\r\n  /**\r\n   * æ ¹æ®ç»ä»¶idè·åç»ä»¶ä¸ä¸æ\r\n   * @param frameId - ç»ä»¶id\r\n   * @returns\r\n   * @throws æ æçç»ä»¶id\r\n   */\r\n  private getFrameContext(frameId?: string) {\r\n    const frameContext = frameId ? this.frameContext.appContext.frameContextManager.getFrameContextById(frameId) : this.frameContext;\r\n    if (!frameContext) {\r\n      throw new Error(`æ æçç»ä»¶idï¼${frameId}`);\r\n    }\r\n    return frameContext;\r\n  }\r\n  /**\r\n   * è·åä¸»é®\r\n   * @param frameId - ç»ä»¶id\r\n   * @param id - æ°æ®id\r\n   * @returns\r\n   * @throws ç»ä»¶idæ ææ¶æåºå¼å¸¸\r\n   */\r\n  private getPrimaryValue(frameId?: string, id?: string) {\r\n    if (!id) {\r\n      const frameContext = this.getFrameContext(frameId);\r\n      if (!frameContext) {\r\n        throw new Error(`æ æçç»ä»¶idï¼${frameId}`);\r\n      }\r\n      const bindingList = frameContext.bindingData.getList() as BindingList;\r\n      if (!bindingList || bindingList.length < 1) {\r\n        throw new Error(`æ æçä¸»é®:${id}`);\r\n      }\r\n      id = bindingList.currentId;\r\n    }\r\n    return id;\r\n  }\r\n}\r\n","import { Injectable, Injector } from \"@angular/core\";\r\nimport { AppContext, DataPropInfo, DataTypeInfo, Entity, FrameContext, NgFormControl, Repository } from \"@farris/devkit\";\r\n\r\n@Injectable()\r\nexport class FormService {\r\n  constructor(\r\n    private injector: Injector,\r\n    private appContext: AppContext,\r\n    private repository: Repository<Entity>\r\n  ) {\r\n  }\r\n  /**\r\n   * æ ¹æ®å­æ®µè·¯å¾è·åè¯¥å­æ®µå¨å¡çæè¡¨æ ¼ä¸­çç´¢å¼\r\n   * @param source ngFormControlsæany[][]\r\n   * @param propertyPath å­æ®µé¤bindingPathä¹å¤çå®æ´è·¯å¾\r\n   * @returns \r\n   */\r\n  public getIndex(source: { [propertyName: string]: NgFormControl } | any[], propertyPath: string) {\r\n    if (Array.isArray(source)) {\r\n      const combine: any[] = source.reduce((result: any[], group: any[]) => {\r\n        return result.concat(group);\r\n      }, []);\r\n      return combine.findIndex((item: any) => item.field === propertyPath);\r\n    } else if (Object.prototype.toString.call(source) === '[object Object]') {\r\n      return Object.keys(source).findIndex(key => source[key].binding === propertyPath);\r\n    }\r\n  }\r\n  \r\n}","import { Injectable } from \"@angular/core\";\r\nimport { FrameContext } from \"@farris/devkit\";\r\n\r\n@Injectable()\r\nexport class ViewModelService {\r\n  constructor() { }\r\n  public getGridColumns(frameContext: FrameContext): any[] {\r\n    const dataGridColumnsName = frameContext && frameContext.viewModel && frameContext.viewModel['dataGridColumnsName'] || null;\r\n    return dataGridColumnsName && frameContext.viewModel[dataGridColumnsName] || [];\r\n  }\r\n}","import { Injectable, Injector } from \"@angular/core\";\r\nimport { DataPropGroup, FrameContext } from \"@farris/devkit\";\r\n\r\n@Injectable()\r\nexport class PaginationService {\r\n  constructor(private injector: Injector, private frameContext: FrameContext) { }\r\n  /**\r\n   * éç½®å­è¡¨åé¡µä¿¡æ¯\r\n   */\r\n  public resetChildrenPagination() {\r\n    const paginationInfo = this.frameContext.repository.entityCollection.paginationInfo || {};\r\n    const childrenEntityCodes = this.frameContext.repository.entityTypeInfo.getPropNamesByGroup(DataPropGroup.List) || [];\r\n    if (paginationInfo && Object.keys(paginationInfo).length > 0) {\r\n      const keys = Object.keys(paginationInfo);\r\n      keys.forEach((key: string) => {\r\n        const value = paginationInfo[key];\r\n        if (Object.prototype.toString.apply(value) !== '[object Object]') {\r\n          return;\r\n        }\r\n        const rowPagination = childrenEntityCodes.find((nodeCode: string) => {\r\n          // å»æs\r\n          nodeCode = nodeCode.slice(0, -1);\r\n          return key.startsWith(`${nodeCode}_`);\r\n        });\r\n        if (rowPagination) {\r\n          delete paginationInfo[key];\r\n        } else {\r\n          paginationInfo[key].pageIndex = 1;\r\n          delete paginationInfo[key].total;\r\n          delete paginationInfo[key].pageCount;\r\n        }\r\n      });\r\n      this.frameContext.repository.entityCollection.updatePaginationInfoByPath('/', paginationInfo);\r\n    }\r\n  }\r\n}","import { Provider } from '@angular/core';\r\n\r\nimport { UIStateService } from '../ui-state.service';\r\nimport { StateMachineService } from '../state-machine.service';\r\nimport { ValidationService } from '../validation.service';\r\nimport { BindingDataService } from '../binding-data.service';\r\nimport { CommandService } from '../command-service';\r\nimport { NavigationMiddlewareService } from '../navigation-middleware.service';\r\nimport { GridMiddlewareService } from '../grid.middleware.service';\r\nimport { BeActionService } from '../be-action.service';\r\nimport { ApproveService } from '../approve.service';\r\nimport { PrintService } from '../print.service';\r\nimport { AttachmentDataService, AttachmentService, FileService } from '../attachment/index';\r\nimport {\r\n  EntityTraversingService, EntityManipulationService, EntityAggregationService,\r\n  EntityListService, EntityService\r\n} from '../entity-services/index';\r\nimport { SidebarService } from '../sidebar-service';\r\nimport { ChangeItemService } from '../change-item.service';\r\n\r\nimport {\r\n  ListDataService, CardDataService, SubListDataService, TreeDataService,\r\n  RemoveDataService, SaveDataService, EditDataService, SubTreeDataService\r\n} from '../data-services/index';\r\n\r\nimport { FarrisFormService } from '../farris-form.service';\r\nimport { DialogService } from '../dialog.service';\r\nimport { NavigationEventService } from '../navigation-event.service';\r\nimport { NavigationService } from '../navigation.service';\r\nimport { RouterService } from '../router.service';\r\nimport { AuthorityService } from '../authority/authority.service';\r\n\r\nimport { QuerySolutionService } from '../query-solution/query-solution.service';\r\nimport { QUERYSOLUTION_HANDLER_TOKEN } from '@gsp-cmp/querysolution';\r\nimport { FilterConditionDataService } from '../data-services/filter-condition-data.service';\r\nimport { FocusInvalidService } from '../focus-invalid.service';\r\nimport { EndEditService } from '../end-edit.service';\r\nimport { RemoteSummaryService } from '../remote-summary.service';\r\nimport { BatchEditService } from '../batch-edit.service';\r\nimport { BatchEditDialogService } from '@farris/ui-batch-edit-dialog';\r\nimport { FeatureEditorService } from '@farris/ui-feature-editor';\r\nimport { DiscussionGroupService } from '../discussion-group.service';\r\nimport { ListFilterConditionsService } from '../list-filter/list-filter.service';\r\nimport { LISTFILTER_HANDLER_TOKEN } from '@farris/ui-list-filter';\r\nimport { FORM_MANIFEST_SERVICE_TOKEN, FORM_EXPRESSION_MANIFEST_SERVICE_TOKEN, MESSAGE_SERVICE_TOKEN, NOTIFY_SERVICE_TOKEN, FRAME_COMPONENT_INIT_HANDLER_TOKEN } from '@farris/devkit';\r\nimport { FormManifestService, FormExpressionManifestService } from '../manifest/index';\r\nimport { LocalizationService } from '../localization.service';\r\nimport { DataGridService } from '../data-grid.service';\r\nimport { FormAttentionService } from '../form-attention.service';\r\nimport { FeatureDataService, FeatureEditService } from '../feature-edit/index';\r\nimport { ExpressionService } from '../expression_service';\r\nimport { DirtyCheckingService } from '../dirty-checking.service';\r\nimport { FormMessageService } from '../form-message.service';\r\nimport { FormNotifyService } from '../form-notify.service';\r\nimport { PopUpService } from '../pop_up.service';\r\nimport { WorkFlowMessageHandler } from '../work-flow/index';\r\nimport { FormService } from '../form.service';\r\nimport { FormControlService } from '../form-control.service';\r\nimport { BindingPathService } from '../binding-path.service';\r\nimport { FrameContextService } from '../frame-context.service';\r\nimport { ViewModelService } from '../view-model.service';\r\nimport { PaginationService } from '../pagination.service';\r\n/**\r\n * ç»ä»¶çº§æ³¨å¥æ³¨å¥(å±23ä¸ª)\r\n */\r\nconst FARRIS_COMMAND_SERVICE_FRAME_PROVIDERS: Provider[] = [\r\n  ValidationService,\r\n  FocusInvalidService,\r\n  ChangeItemService,\r\n  UIStateService,\r\n  StateMachineService,\r\n  BindingDataService,\r\n  CommandService,\r\n\r\n  // entity-services\r\n  EntityTraversingService,\r\n  EntityManipulationService,\r\n  EntityAggregationService,\r\n  EntityListService,\r\n  EntityService,\r\n\r\n  // data-services\r\n  ListDataService,\r\n  TreeDataService,\r\n  SubTreeDataService,\r\n  CardDataService,\r\n  SubListDataService,\r\n  RemoveDataService,\r\n  SaveDataService,\r\n  EditDataService,\r\n  FilterConditionDataService,\r\n  RemoteSummaryService,\r\n\r\n  BeActionService,\r\n  ApproveService,\r\n  PrintService,\r\n  AttachmentDataService,\r\n  AttachmentService,\r\n  FileService,\r\n  NavigationMiddlewareService,\r\n  GridMiddlewareService,\r\n  SidebarService,\r\n  FarrisFormService,\r\n  DialogService,\r\n  NavigationEventService,\r\n  NavigationService,\r\n  RouterService,\r\n  AuthorityService,\r\n  {\r\n    provide: QUERYSOLUTION_HANDLER_TOKEN,\r\n    useClass: QuerySolutionService\r\n  },\r\n  {\r\n    provide: LISTFILTER_HANDLER_TOKEN,\r\n    useClass: ListFilterConditionsService\r\n  },\r\n  EndEditService,\r\n  BatchEditDialogService,\r\n  BatchEditService,\r\n  DiscussionGroupService,\r\n  LocalizationService,\r\n  DataGridService,\r\n  FormAttentionService,\r\n  FeatureEditorService,\r\n  FeatureDataService,\r\n  FeatureEditService,\r\n  ExpressionService,\r\n  PopUpService,\r\n  DirtyCheckingService,\r\n  FormService,\r\n  FormControlService,\r\n  BindingPathService,\r\n  FrameContextService,\r\n  ViewModelService,\r\n  PaginationService,\r\n  // è¡¨è¾¾å¼\r\n  { provide: FORM_MANIFEST_SERVICE_TOKEN, useClass: FormManifestService },\r\n  { provide: FORM_EXPRESSION_MANIFEST_SERVICE_TOKEN, useClass: FormExpressionManifestService },\r\n  { provide: MESSAGE_SERVICE_TOKEN, useClass: FormMessageService },\r\n  { provide: NOTIFY_SERVICE_TOKEN, useClass: FormNotifyService },\r\n  { provide: FRAME_COMPONENT_INIT_HANDLER_TOKEN, useClass: WorkFlowMessageHandler, multi: true }\r\n];\r\n\r\nexport { FARRIS_COMMAND_SERVICE_FRAME_PROVIDERS };\r\n","import { Provider } from '@angular/core';\r\n\r\nimport { RouterService } from '../router.service';\r\nimport { UIStateService } from '../ui-state.service';\r\nimport { StateMachineService } from '../state-machine.service';\r\nimport { ValidationService } from '../validation.service';\r\nimport { BindingDataService } from '../binding-data.service';\r\nimport { CommandService } from '../command-service';\r\n\r\nimport { NavigationEventService } from '../navigation-event.service';\r\nimport { NavigationService } from '../navigation.service';\r\nimport { NavigationMiddlewareService } from '../navigation-middleware.service';\r\nimport { GridMiddlewareService } from '../grid.middleware.service';\r\n\r\nimport { BeActionService } from '../be-action.service';\r\nimport { ApproveService } from '../approve.service';\r\nimport { PrintService } from '../print.service';\r\nimport { AttachmentDataService, AttachmentService, FileService } from '../attachment/index';\r\nimport {\r\n    EntityTraversingService, EntityManipulationService, EntityAggregationService,\r\n    EntityListService, EntityService\r\n} from '../entity-services/index';\r\nimport { DialogService } from '../dialog.service';\r\nimport { SidebarService } from '../sidebar-service';\r\nimport { FarrisFormService } from '../farris-form.service';\r\nimport { ChangeItemService } from '../change-item.service';\r\n\r\n// data-services\r\nimport { ListDataService } from '../data-services/list-data.service';\r\nimport { TreeDataService } from '../data-services/tree-data.service';\r\nimport { CardDataService } from '../data-services/card-data.service';\r\nimport { SubListDataService } from '../data-services/sub-list-data.service';\r\nimport { FocusInvalidService } from '../focus-invalid.service';\r\nimport { SubTreeDataService } from '../data-services/sub-tree-data-service';\r\nimport { RemoveDataService } from '../data-services/remove-data.service';\r\nimport { SaveDataService } from '../data-services/save-data.service';\r\nimport { EditDataService } from '../data-services/edit-data.service';\r\nimport { FilterConditionDataService } from '../data-services/filter-condition-data.service';\r\nimport { RemoteSummaryService } from '../remote-summary.service';\r\nimport { AuthorityService } from '../authority/authority.service';\r\nimport { EndEditService } from '../end-edit.service';\r\nimport { BatchEditService } from '../batch-edit.service';\r\nimport { DiscussionGroupService } from '../discussion-group.service';\r\nimport { LocalizationService } from '../localization.service';\r\nimport { DataGridService } from '../data-grid.service';\r\nimport { FormAttentionService } from '../form-attention.service';\r\nimport { FormManifestService } from '../manifest/form_manifest_service';\r\nimport { FormExpressionManifestService } from '../manifest/form_expression_manifest_service';\r\nimport { ListFilterConditionsService } from '../list-filter/list-filter.service';\r\nimport { QuerySolutionService } from '../query-solution/query-solution.service';\r\nimport { BatchEditDialogService } from '@farris/ui-batch-edit-dialog';\r\nimport { FORM_MANIFEST_SERVICE_TOKEN, FORM_EXPRESSION_MANIFEST_SERVICE_TOKEN } from '@farris/devkit';\r\nimport { QUERYSOLUTION_HANDLER_TOKEN } from '@gsp-cmp/querysolution';\r\nimport { LISTFILTER_HANDLER_TOKEN } from '@farris/ui-list-filter';\r\n\r\n/**\r\n * ç»ä»¶çº§æ³¨å¥æ³¨å¥(å±23ä¸ª)\r\n */\r\nconst DYNAMIC_FARRIS_COMMAND_SERVICE_PROVIDERS: Provider[] = [\r\n    { provide: 'ValidationService', useClass: ValidationService },\r\n    { provide: 'FocusInvalidService', useClass: FocusInvalidService },\r\n    { provide: 'ChangeItemService', useClass: ChangeItemService },\r\n    { provide: 'UIStateService', useClass: UIStateService },\r\n    { provide: 'StateMachineService', useClass: StateMachineService },\r\n    { provide: 'BindingDataService', useClass: BindingDataService },\r\n    { provide: 'CommandService', useClass: CommandService },\r\n\r\n    // entity-services\r\n    { provide: 'EntityTraversingService', useClass: EntityTraversingService },\r\n    { provide: 'EntityManipulationService', useClass: EntityManipulationService },\r\n    { provide: 'EntityAggregationService', useClass: EntityAggregationService },\r\n    { provide: 'EntityListService', useClass: EntityListService },\r\n    { provide: 'EntityService', useClass: EntityService },\r\n\r\n    // data-services\r\n    { provide: 'ListDataService', useClass: ListDataService },\r\n    { provide: 'TreeDataService', useClass: TreeDataService },\r\n    { provide: 'SubTreeDataService', useClass: SubTreeDataService },\r\n    { provide: 'CardDataService', useClass: CardDataService },\r\n    { provide: 'SubListDataService', useClass: SubListDataService },\r\n    { provide: 'RemoveDataService', useClass: RemoveDataService },\r\n    { provide: 'SaveDataService', useClass: SaveDataService },\r\n    { provide: 'EditDataService', useClass: EditDataService },\r\n    { provide: 'FilterConditionDataService', useClass: FilterConditionDataService },\r\n    { provide: 'RemoteSummaryService', useClass: RemoteSummaryService },\r\n\r\n    { provide: 'BeActionService', useClass: BeActionService },\r\n    { provide: 'ApproveService', useClass: ApproveService },\r\n    { provide: 'PrintService', useClass: PrintService },\r\n    { provide: 'AttachmentDataService', useClass: AttachmentDataService },\r\n    { provide: 'AttachmentService', useClass: AttachmentService },\r\n    { provide: 'FileService', useClass: FileService },\r\n    { provide: 'NavigationMiddlewareService', useClass: NavigationMiddlewareService },\r\n    { provide: 'GridMiddlewareService', useClass: GridMiddlewareService },\r\n    { provide: 'SidebarService', useClass: SidebarService },\r\n    { provide: 'FarrisFormService', useClass: FarrisFormService },\r\n    { provide: 'DialogService', useClass: DialogService },\r\n    { provide: 'NavigationEventService', useClass: NavigationEventService },\r\n    { provide: 'NavigationService', useClass: NavigationService },\r\n    { provide: 'RouterService', useClass: RouterService },\r\n    { provide: 'AuthorityService', useClass: AuthorityService },\r\n    {\r\n        provide: QUERYSOLUTION_HANDLER_TOKEN,\r\n        useClass: QuerySolutionService\r\n    },\r\n    {\r\n        provide: LISTFILTER_HANDLER_TOKEN,\r\n        useClass: ListFilterConditionsService\r\n    },\r\n    { provide: 'EndEditService', useClass: EndEditService },\r\n    { provide: 'BatchEditDialogService', useClass: BatchEditDialogService },\r\n    { provide: 'BatchEditService', useClass: BatchEditService },\r\n    { provide: 'DiscussionGroupService', useClass: DiscussionGroupService },\r\n    { provide: 'LocalizationService', useClass: LocalizationService },\r\n    { provide: 'DataGridService', useClass: DataGridService },\r\n    { provide: 'FormAttentionService', useClass: FormAttentionService },\r\n    // è¡¨è¾¾å¼\r\n    { provide: FORM_MANIFEST_SERVICE_TOKEN, useClass: FormManifestService },\r\n    { provide: FORM_EXPRESSION_MANIFEST_SERVICE_TOKEN, useClass: FormExpressionManifestService }\r\n];\r\n\r\n\r\nexport { DYNAMIC_FARRIS_COMMAND_SERVICE_PROVIDERS };\r\n","import { NgModule } from '@angular/core';\r\nimport { FARRIS_COMMAND_SERVICE_MODULE_PROVIDERS } from './providers/index';\r\nimport { WfTaskHandlerModule } from '@gsp-wf/wf-task-handler';\r\nimport { WorkFlowMessage } from './work-flow/index';\r\n\r\n@NgModule({\r\n  providers: FARRIS_COMMAND_SERVICE_MODULE_PROVIDERS,\r\n  imports: [\r\n    WfTaskHandlerModule\r\n  ],\r\n  exports: [\r\n    WfTaskHandlerModule\r\n  ]\r\n})\r\nclass CommandServicesModule {\r\n  constructor(private workFlowMessage: WorkFlowMessage) {\r\n    if (this.workFlowMessage) {\r\n      this.workFlowMessage.setup();\r\n    }\r\n  }\r\n}\r\n\r\nexport { CommandServicesModule };\r\n","import { RuntimeFrameworkService } from '../rtf-service';\r\nimport { UID } from '@farris/devkit';\r\n\r\nexport class MessagePipe {\r\n    constructor(public token: string, private rtfService: RuntimeFrameworkService) { }\r\n    /**\r\n     * åç®¡éåéæ¶æ¯\r\n     * @param message æ¶æ¯\r\n     */\r\n    public sendMessage(message: any) {\r\n        this.rtfService.subjectNotify(this.token, message);\r\n        return this;\r\n    }\r\n    /**\r\n     * çå¬ç®¡éæ¶æ¯\r\n     * @param handler æ¶æ¯å¤çå¨\r\n     */\r\n    public listen(handler: (data: any) => void): () => void {\r\n        const observerToken = UID.create();\r\n        this.rtfService.subjectResponse(this.token, handler, observerToken);\r\n        const unListen = () => {\r\n            this.rtfService.responseUnSubscribe(this.token, observerToken);\r\n        };\r\n        return unListen;\r\n    }\r\n    /**\r\n     * éæ¯ç®¡é\r\n     */\r\n    public destory() {\r\n        this.rtfService.subjectRemove(this.token);\r\n    }\r\n}\r\n","import { MessagePipe } from './message-pipe';\r\nimport { RuntimeFrameworkService } from '../rtf-service';\r\nimport { Subject } from 'rxjs';\r\nimport { QuerystringService } from '../querystring';\r\n\r\nexport class MessagePipeService {\r\n  private static rtfService: RuntimeFrameworkService = new RuntimeFrameworkService();\r\n  private static querystringService: QuerystringService = new QuerystringService();\r\n  /**\r\n   * éè¿tokenè·åæ¶æ¯ç®¡é\r\n   * @param token æ¶æ¯ç®¡éæ è¯\r\n   */\r\n  public static get(token: string): MessagePipe {\r\n    const pipe = new MessagePipe(token, this.rtfService);\r\n    return pipe;\r\n  }\r\n  /**\r\n   * åå»ºæ¶æ¯ç®¡é\r\n   * @param pipeName ç®¡éåç§°\r\n   * @param useFormContext æ¯å¦ä½¿ç¨è¡¨åä¸ä¸æåå»ºç®¡éæ è¯\r\n   * @param pipeType ç®¡éç±»å(å¯é)ï¼é»è®¤Subject<any>\r\n   */\r\n  public static create(pipeName: string, useFormContext: boolean, pipeType?: Subject<any>): MessagePipe {\r\n    let options = null;\r\n    if (useFormContext) {\r\n      const params = this.querystringService.parse(window.location.hash);\r\n      const { funcId, appId, appEntrance } = params;\r\n      options = { funcId, appId, appEntrance };\r\n    }\r\n    const token = this.rtfService.subjectRegister(pipeName, options, pipeType);\r\n    if (!token) {\r\n      return null;\r\n    }\r\n    const pipe = new MessagePipe(token, this.rtfService);\r\n    return pipe;\r\n  }\r\n}\r\n","import { Inject, Injectable, Injector } from '@angular/core';\r\nimport { AppContext, BackEndMessage, BindingList, DataPropInfo, EventBus, FrameComponent, FrameContext, NgFormControl, Translate, TranslateToken } from '@farris/devkit';\r\n/**\r\n * åç«¯æ¶æ¯å¤çæå¡\r\n * @description\r\n * ### æå¡æ³¨å¥ä½ç½®\r\n *  1ãæ´ä¸ªè¡¨åçroot-component \r\n *  2ãå¼¹åºçªå£çroot-component \r\n */\r\n@Injectable()\r\nexport class BackEndMessageHandler implements BackEndMessage.IBackEndMessageHandler {\r\n  constructor(private injector: Injector, private frameContext: FrameContext, @Inject(TranslateToken) private translate: Translate) { }\r\n  /**\r\n   * å¤çåç«¯è¿åçæ¶æ¯æéè¯¯\r\n   * @param message æ¶æ¯æéè¯¯\r\n   */\r\n  public handle(message: BackEndMessage.IMessage, context: any) {\r\n    const isException = context && context.isException || false;\r\n    const hasThrowError = context && context.hasThrowError || false;\r\n    const eventBus = context && context.eventBus || null;\r\n    const error = context && context.error || null;\r\n    const formAppContext = context && context.formAppContext || null;\r\n    const result = this.collect(message, isException, hasThrowError, eventBus, error, formAppContext);\r\n    if (result && result.form && result.form.length > 0) {\r\n      result.form.forEach((item: { frameContext: FrameContext, message: any }) => {\r\n        item.frameContext.viewModel.form.updateFormErrors(item.message, true, 'backend');\r\n      });\r\n    } else {\r\n      this.resetFormMessage(message.context.appContext, message.context.ns);\r\n    }\r\n    const targetFrameContext: FrameContext = this.findTargetFrameContext(this.frameContext);\r\n    if (result && result.all && result.all.length > 0) {\r\n      targetFrameContext.viewModel.verifycationChanged.next(result.all);\r\n    } else {\r\n      if (result !== null) {\r\n        targetFrameContext.viewModel.verifycationChanged.next([]);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * æ¶éæ±æ»ä¿¡æ¯åformä¿¡æ¯\r\n   * @param backEndMessage \r\n   */\r\n  private collect(backEndMessage: BackEndMessage.IMessage, isException: boolean = false, hasThrowError: boolean = false, eventBus: EventBus = null, error: any = null, formAppContext: AppContext = null): { form: { frameContext: FrameContext, message: any }[], all: any[] } {\r\n    const bizMessages = backEndMessage && backEndMessage.bizMessages || null;\r\n    const appContext = backEndMessage && backEndMessage.context.appContext;\r\n    const ns = backEndMessage.context.ns;\r\n    if (!bizMessages || bizMessages.length < 1) {\r\n      return null;\r\n    }\r\n    const result = {\r\n      form: [],\r\n      all: []\r\n    };\r\n    let hasFormlessError = false;\r\n    for (let bizMessage of bizMessages) {\r\n      const message = bizMessage.message;\r\n      const location = bizMessage.location || null;\r\n      const columns = location && location.columns || null;\r\n      const nodeCode = location && location.nodeCode || null;\r\n      const rows = location && location.rows;\r\n      const bindingPath = this.getBindingPath(appContext, ns, nodeCode);\r\n      const bindingPaths = bindingPath && bindingPath.split('/').filter(p => p);\r\n\r\n      // ç®åä»å¤çælocationï¼ä¸æidãååãè¡¨åçã\r\n      if (!location || !columns || columns.length < 1 || !nodeCode || !rows || rows.length < 1) {\r\n        continue;\r\n      }\r\n      // éåæ°æ®è¡\r\n      for (let row of rows) {\r\n        for (let column of columns) {\r\n          // è·åå°ææç»å®è¯¥åæ°æ®çframeContext\r\n          let frameContexts = this.getFrameContextsByBindingPathAndColumnName(appContext, ns, bindingPath, column);\r\n          if (!frameContexts || frameContexts.length < 1) {\r\n            // æ²¡æä»»ä½ä¸ä¸ªç»ä»¶ç»å®è¯¥åçæ°æ®\r\n            hasFormlessError = true;\r\n            continue;\r\n          }\r\n          // æé¤æåªè¯»datagrid\r\n          frameContexts = frameContexts.filter((frameContext: FrameContext) => {\r\n            const isDataGridComponent = this.isDataGridComponent(frameContext.frameComponent);\r\n            if (isDataGridComponent) {\r\n              const isReadonlyDataGrid = this.isReadonlyDataGrid(frameContext.frameComponent);\r\n              if (isReadonlyDataGrid) {\r\n                return false;\r\n              } else {\r\n                return true;\r\n              }\r\n            }\r\n            return true;\r\n          });\r\n          // éåçè¡æ¯å¦ä¸ºå½åè¡\r\n          const isCurrentRow = this.isCurrentRow(appContext, ns, bindingPath, row);\r\n          // å¦ææ¯å½åè¡çè¯éè¦å°éè¯¯ä¿¡æ¯æ¾å°formä¸­\r\n          if (isCurrentRow) {\r\n            // å¿½ç¥grid\r\n            // const formFrameContexts = frameContexts.filter(frameContext => !this.isGridComponent(frameContext.frameComponent));\r\n            if (frameContexts && frameContexts.length > 0) {\r\n              frameContexts.forEach((frameContext: FrameContext) => {\r\n                // åªå¤çäºä¸ä¸ªç»ä»¶ä¸­ååªç»å®å°ä¸ä¸ªåç«¯æ§ä»¶çåºæ¯\r\n                const formControls = this.getFormControlByColumnName(frameContext, column);\r\n                if (formControls && formControls.length > 0) {\r\n                  formControls.forEach(([domPropertyName, formControl]) => {\r\n                    //const domPropertyName = formControl && formControl. || null;\r\n                    this.mergeMessage(result.form, frameContext, domPropertyName, message);\r\n                  });\r\n                }\r\n\r\n                //if (formControl && domPropertyName) {\r\n\r\n                //}\r\n              });\r\n            } else {\r\n            }\r\n          }\r\n          // å°éè¯¯ä¿¡æ¯æ¾å°æ±æ»ä¸­\r\n          frameContexts.forEach((frameContext: FrameContext) => {\r\n            const viewModelName = frameContext.viewModel.form.formGroupName;\r\n            const formControls = this.getFormControlByColumnName(frameContext, column);\r\n            if (formControls && formControls.length > 0) {\r\n              const [domPropertyName, formControl] = formControls.find(([propertyName, formControl]) => propertyName && propertyName.length > 0);\r\n              // const domPropertyName = domProperty && domProperty.propertyName;\r\n              const bindingList = frameContext.viewModel.bindingData.getValue(bindingPaths) as BindingList;\r\n              let index = bindingList.getIndexById(row);\r\n              const primary = `${row}_${column}_${message}`;\r\n              // TODO:è½ç¶è½çº æ­£æ±æ»æ¶æ¯æ¾ç¤ºéå¤çé®é¢ï¼ä½å¯è½å¯¼è´ç¹å»éè¯¯æ æ³å®ä½å°å¯¹åºæ§ä»¶çé®é¢ï¼å¾åç»­ä¼å\r\n              if (index >= 0 && result.all.findIndex(p => p.id === primary) === -1) {\r\n                // æ°æ®æºä¸­æå¤äº1è¡æ¶æ¾ç¤ºç´¢å¼\r\n                const position = (bindingList && bindingList.length > 1) ? (index + 1) : -1;\r\n                const title = this.buildItemTitle(viewModelName, formControl.name || formControl.defaultI18nValue || domPropertyName, position);\r\n                const item = {\r\n                  id: primary,\r\n                  index,\r\n                  targetField: formControl.id,\r\n                  title,\r\n                  msg: message,\r\n                  namespace: ns,\r\n                  bindingPath,\r\n                  type: 'error'\r\n                };\r\n                result.all.push(item);\r\n              }\r\n            }\r\n\r\n          });\r\n        }\r\n      }\r\n    }\r\n    if (hasFormlessError && isException && !hasThrowError && eventBus) {\r\n      eventBus.post('Exception', '', 'onException', error, formAppContext);\r\n    }\r\n    return result;\r\n  }\r\n  private mergeMessage(formItems: { frameContext: FrameContext, message: { [domPropertyName: string]: { errors: { [messageType: string]: { name: string } } } } }[], frameContext: FrameContext, domPropertyName: string, message: string) {\r\n    const targetItem = formItems.find(item => item.frameContext.frameId === frameContext.frameId);\r\n    if (targetItem) {\r\n      const isPropertyExist = targetItem.message && Object.keys(targetItem.message).includes(domPropertyName);\r\n      const messageType = `backend-message-${Object.keys(targetItem.message).length + 1}`;\r\n      if (isPropertyExist) {\r\n        targetItem.message[domPropertyName]['errors'][messageType] = { name: message };\r\n      } else {\r\n        targetItem.message[domPropertyName] = { errors: { [messageType]: { name: message } } };\r\n      }\r\n    } else {\r\n      formItems.push({\r\n        frameContext: frameContext,\r\n        message: {\r\n          [domPropertyName]: {\r\n            errors: {\r\n              'backend-message-1': { name: message }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  private buildItemTitle(viewModelName: string, propertyName: string, index: any) {\r\n    const template = {\r\n      'zh-CHS': {\r\n        viewModelName: `$viewModel`,\r\n        index: `ç¬¬ $index è¡`,\r\n        propertyName: `- $propertyName`\r\n      },\r\n      'en': {\r\n        viewModelName: `$viewModel`,\r\n        index: `row $index`,\r\n        propertyName: `- $propertyName`\r\n      },\r\n      'zh-CHT': {\r\n        viewModelName: `$viewModel`,\r\n        index: `ç¬¬ $index è¡`,\r\n        propertyName: `- $propertyName`\r\n      }\r\n    };\r\n    const currentLanguage = this.translate.getCurrentLanguage() || 'zh-CHS';\r\n    const message = [];\r\n    if (viewModelName) {\r\n      message.push(template[currentLanguage]['viewModelName'].replace('$viewModel', viewModelName));\r\n    }\r\n    if (index > 0) {\r\n      message.push(template[currentLanguage]['index'].replace('$index', index));\r\n    }\r\n    if (propertyName) {\r\n      message.push(template[currentLanguage]['propertyName'].replace('$propertyName', propertyName));\r\n    }\r\n    return message.join(' ');\r\n  }\r\n  /**\r\n   * æ ¹æ®è¡¨åænodeCodeè·åç»å®è·¯å¾\r\n   * @param appContext appContext\r\n   * @param ns ns\r\n   * @param nodeCode è¡¨å\r\n   */\r\n  private getBindingPath(appContext: AppContext, ns: string, nodeCode: string) {\r\n    const frameContext = this.getFrameContext(appContext, ns);\r\n    return frameContext.repository.entityTypeInfo.getBindingPathByTableName(nodeCode);\r\n  }\r\n  /**\r\n   * éè¿ç»å®è·¯å¾åååæ¾å°ææç¬¦åæ¡ä»¶çè§å¾æ¨¡å(åæ¬gridåform)\r\n   * @param appContext appContext\r\n   * @param ns namespace\r\n   * @param bindingPath ç»å®è·¯å¾\r\n   * @param columnName åå\r\n   */\r\n  private getFrameContextsByBindingPathAndColumnName(appContext: AppContext, ns: string, bindingPath: string, columnName: string): FrameContext[] {\r\n    let frameContexts = appContext.frameContextManager.getFrameContexts();\r\n    if (frameContexts && frameContexts.length > 0) {\r\n      // æ¾å°formä¸­ææ§ä»¶çframeContext\r\n      frameContexts = frameContexts.filter((frameContext: FrameContext) => {\r\n        // åºæ¬æ¡ä»¶æ¯å¦æ»¡è¶³\r\n        let isValidFrameContext = frameContext.namespace === ns && frameContext.viewModel.bindingPath === bindingPath && frameContext.viewModel.form && frameContext.viewModel.form.controls && Object.keys(frameContext.viewModel.form.controls).length > 0;\r\n        if (!isValidFrameContext) {\r\n          return false;\r\n        }\r\n        // åéè¿ååè¿æ»¤\r\n        const bindingPaths = bindingPath.split('/').filter(p => p);\r\n        const dataTypeInfo = frameContext.repository.entityTypeInfo.getTypeInfoByPath(bindingPaths);\r\n        if (dataTypeInfo) {\r\n          const dataPropInfos = Array.from(dataTypeInfo.propInfoMap.values());\r\n          // ä»å½åå®ä½å±æ§ä¸­æ¾å°æ°æ®å­æ®µä¸ºååçå±æ§\r\n          const entityPropertyInfo = dataPropInfos.find((propInfo: DataPropInfo) => propInfo.metadataInfo && (propInfo.metadataInfo.originalDataField === columnName || propInfo.metadataInfo.dataField === columnName));\r\n          if (entityPropertyInfo) {\r\n            const entityPropertyName = entityPropertyInfo.name;\r\n            const ngFormControl = Object.values(frameContext.viewModel.form.ngFormControls).find(item => item.binding === entityPropertyName);\r\n            if (ngFormControl) {\r\n              return true;\r\n            } else {\r\n              const item = Object.keys(frameContext.viewModel.form.ngFormControls).find(key => key === entityPropertyName);\r\n              return item ? true : false;\r\n            }\r\n          } else {\r\n            return false;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n      return frameContexts;\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * æ¯å¦ä¸ºdatagridç»ä»¶\r\n   * @param frameComponent component\r\n   */\r\n  private isDataGridComponent(frameComponent: FrameComponent) {\r\n    const columnNames = frameComponent.context.viewModel['dataGridColumnsName'] || null;\r\n    return columnNames ? true : false;\r\n  }\r\n  /**\r\n   * gridç»ä»¶æ¯å¦æ¯åªè¯»ç\r\n   * @param frameComponent frameComponent\r\n   * @returns \r\n   */\r\n  private isReadonlyDataGrid(frameComponent: FrameComponent) {\r\n    const frameContext = frameComponent.context;\r\n    const dataGridColumnsName = frameContext.viewModel['dataGridColumnsName'] || null;\r\n    if (dataGridColumnsName) {\r\n      const datagridColumns: any[] = frameContext.viewModel[dataGridColumnsName];\r\n      return datagridColumns.every((group: Array<any>) => {\r\n        return group.every(item => !item.editor);\r\n      });\r\n    } else {\r\n      throw new Error(`ä¼ å¥çç»ä»¶ä¸æ¯ä¸ä¸ªè¡¨æ ¼ï¼`);\r\n    }\r\n  }\r\n  /**\r\n   * idæ¯å¦ä¸ºå½åè¡\r\n   * @param appContext appContext\r\n   * @param ns namespace\r\n   * @param bindingPath bindingPath\r\n   * @param id id\r\n   */\r\n  private isCurrentRow(appContext: AppContext, ns: string, bindingPath: string, id: string) {\r\n    const bindingPaths = bindingPath.split('/').filter(p => p);\r\n    const frameContext = this.getFrameContext(appContext, ns);\r\n    const bindingData = frameContext.bindingData;\r\n    const bindingList = bindingData.getValue(bindingPaths) as BindingList;\r\n    return bindingList.currentItem.primaryKeyValue === id;\r\n  }\r\n  /**\r\n   * è·åå½ånsä¸çrootFrameContext\r\n   * @param appContext appcontext\r\n   * @param ns namespace\r\n   */\r\n  private getFrameContext(appContext: AppContext, ns: string) {\r\n    const frameContexts = appContext.frameContextManager.getFrameContexts();\r\n    if (frameContexts && frameContexts.length > 0) {\r\n      const randomFrameContext = frameContexts.find(frameContext => frameContext.namespace === ns);\r\n      if (randomFrameContext) {\r\n        const virtualRootFrameContext = randomFrameContext.getVirtualRootFrameContext();\r\n        return virtualRootFrameContext;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * éè¿ç»å®è·¯å¾åååè·åç»å®å°è¯¥åçformControl\r\n   */\r\n  private getFormControlByColumnName(frameContext: FrameContext, columnName: string): Array<[string, NgFormControl]> {\r\n    const bindingPaths = frameContext.viewModel.bindingPath.split('/').filter(p => p);\r\n    // éè¿bindingPathæ¾å°å¯¹åºçå®ä½ä¿¡æ¯\r\n    const typeInfo = frameContext.repository.entityTypeInfo.getTypeInfoByPath(bindingPaths);\r\n\r\n    const propsInfo = Array.from(typeInfo.propInfoMap.values());\r\n    const propInfo = propsInfo.find((propInfo: DataPropInfo) => propInfo.metadataInfo && (propInfo.metadataInfo.originalDataField === columnName || propInfo.metadataInfo.dataField === columnName));\r\n    if (propInfo) {\r\n      const mappingName = propInfo.name;\r\n      const formControls: Array<[string, NgFormControl]> = Object.entries(frameContext.viewModel.form.ngFormControls).filter((item) => item[1].binding === mappingName || item[0] === mappingName);\r\n      // const ngFormControl = Object.values(frameContext.viewModel.form.ngFormControls).find(item => item.binding === mappingName);\r\n      if (formControls) {\r\n        return formControls;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  private resetFormMessage(appContext: AppContext, ns: string) {\r\n    const frameContexts = appContext.frameContextManager.getFrameContexts().filter(frameContext => frameContext.namespace === ns);\r\n    frameContexts.forEach(frameContext => frameContext && frameContext.viewModel && frameContext.viewModel.form && frameContext.viewModel.form.clearBackendError());\r\n  }\r\n  /**\r\n   * éå½æ¾å°å±ç¤ºæ¶æ¯çç»ä»¶ä¸ä¸æ\r\n   * @param frameContext frameContext\r\n   */\r\n  private findTargetFrameContext(frameContext: FrameContext): FrameContext {\r\n    const virtualRootFrameContext = frameContext.getVirtualRootFrameContext();\r\n    const virtualRootComponent = virtualRootFrameContext.frameComponent;\r\n    const isDialogComponent = virtualRootComponent && virtualRootComponent['isDialogRootComponent'] || false;\r\n    if (isDialogComponent) {\r\n      // å¦ææ¶æ¯å¤çæå¡æ¯å¼¹çªåçï¼åæ¶æ¯æç¤ºå±ç¤ºå¨å¼¹çªå\r\n      return virtualRootFrameContext;\r\n    } else {\r\n      // å½åæ¶æ¯æå¡ä¸å¨å¼¹çªåï¼éå½åä¸æ¥æ¾ï¼æ¾å°ç¬¬ä¸ä¸ªå¼¹çªï¼å¦ææ¾ä¸å°åæ¾å°æä¸çroot-component\r\n      const parentFrameContext = virtualRootFrameContext.parent;\r\n      if (parentFrameContext) {\r\n        return this.findTargetFrameContext(parentFrameContext);\r\n      } else {\r\n        return virtualRootFrameContext;\r\n      }\r\n    }\r\n  }\r\n}"]}