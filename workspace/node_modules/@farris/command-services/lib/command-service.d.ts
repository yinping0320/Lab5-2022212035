import { Observable } from 'rxjs';
import { AppContext, ViewModel, CommandContext } from '@farris/devkit';
/**
 * 命令服务
 * @scope FrameConmponent
 */
declare class CommandService {
    private viewModel;
    private appContext;
    /**
     * 内部cotnext
     */
    private innerContext;
    /**
     * context取值方法
     */
    /**
    * context设值方法
    */
    context: CommandContext;
    constructor(viewModel: ViewModel, appContext: AppContext);
    /**
     * 执行命令
     * @param commandName 命令名称
     * @param frameId 框架ID
     */
    execute(commandName: string, frameId?: string): Observable<any>;
    /**
     * 等待BeSession创建
     * @returns 最新创建出来的BeSession
     */
    waitForBeSession(): Observable<string>;
    /**
     * 提取某个任务的执行结果
     * @param taskName 任务名称
     * @reutrn 返回taskName对应任务的执行结果
     */
    extractResult(taskName: string): any;
    /**
     * 暂停当前组件的行切换事件抛出
     */
    suspendFrameContextRowSelectedEvent(frameId?: string): void;
    resumeFrameContextRowSelectedEvent(frameId?: string): void;
}
export { CommandService };
