import { AppOptions } from '@gsp-sys/rtf-common';
import { RuntimeFrameworkService } from './rtf-service';
import { MenuStateService } from './menu-state.service';
import { QuerystringService } from './querystring';
import { FrameContext } from '@farris/devkit';
/**
 * 导航事件服务
 * @scope FormModule
 */
export declare class NavigationEventService {
    private runtimeFrameworkService;
    private menuStateService;
    private querystringService;
    frameContext: FrameContext;
    /**
     * 关闭后事件处理器
     */
    private onClosedListeners;
    /**
     * 关闭前处理器
     */
    private onClosingListeners;
    private onTabSwitchListeners;
    private params;
    constructor(runtimeFrameworkService: RuntimeFrameworkService, menuStateService: MenuStateService, querystringService: QuerystringService);
    private readonly querystrings;
    /**
     * 注册事件
     */
    registerEvent(): void;
    /**
     * 处理标签页切换事件
     */
    private handleTabSwitchEvent;
    /**
     * 触发tab切换事件
     * @param e e
     */
    private fireTabSwitchEvent;
    /**
     * 标签页关闭前事件
     */
    private handleTabClosingEvent;
    /**
     * 触发关闭前事件
     */
    private fireTabClosingEvent;
    /**
     * 标签页关闭后事件
     */
    private handleTabClosedEvent;
    private removeMenuState;
    /**
     * 触发关闭后事件
     * @param e event
     */
    private fireTabClosedEvent;
    /**
     * 注册事件监听器
     * @param eventType 事件类型 onTabClosed
     * @param handler 处理器
     */
    addEventListener(eventType: string, handler: (options: AppOptions) => any): string;
    /**
     * 移除事件监听器
     * @param eventType 事件类型
     * @param key 事件标识
     */
    removeEventListener(eventType: string, key: string): boolean;
    /**
     * 清空事件监听器
     * @param eventType 事件类型
     */
    clearEventListener(eventType: string): void;
    /**
     * 刷新组件数据
     */
    private formReload;
}
