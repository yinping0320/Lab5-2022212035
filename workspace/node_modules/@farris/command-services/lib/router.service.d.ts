import { Router } from '@angular/router';
import { RouterParamService } from '@farris/devkit';
import { FrameworkService, AppService } from '@gsp-sys/rtf-common';
import { MenuStateService } from './menu-state.service';
import { Subject } from 'rxjs';
import { LanguageService } from './languag.service';
/**
 * 路由服务
 * @scope FormModule
 */
declare class RouterService {
    private router;
    private routerParamService;
    private frameworkService;
    private appService;
    private menuStateService;
    private languageService;
    /**
     * 上次切换的TabId
     */
    private lastSwitchId;
    /**
     * 上次关闭的TabId
     */
    private lastCloseId;
    onClosed: Subject<any>;
    constructor(router: Router, routerParamService: RouterParamService, frameworkService: FrameworkService, appService: AppService, menuStateService: MenuStateService, languageService: LanguageService);
    /**
     * 切换路由
     * @param url 菜单ID
     * @param params 路由参数
     */
    route(url: string, params: any): void;
    /**
     * 注册运行框架事件
     */
    registerEvent(): void;
    private removeMenuState;
    /**
     * 获取原始功能id
     * @param id id
     */
    private getOriginalId;
    /**
     * 刷新组件数据
     */
    private formReload;
    /**
     * 打开功能菜单
     * @param funcId 菜单内码
     * @param params 路由参数，形如： { key1: val1, key2: value2 }
     */
    openMenu(funcId: string, params: any, reload?: boolean): void;
    /**
     * 打开应用
     * @param appId 应用内码
     * @param appEntrance 应用入口
     * @param params 路由参数，形如： { key1: val1, key2: value2 }
     */
    openApp(appId: string, appEntrance: string, params: any, reload?: boolean): void;
    /**
     * 构造参数
     */
    private buildParamMap;
    /**
     * 关闭功能菜单
     */
    closeMenu(): void;
    /**
     * 查找弹窗组件
     */
    private findDialog;
    /**
     * loadsh get
     * @param object 对象
     * @param path 路径
     * @param defaultVal 默认值
     */
    private get;
    /**
     * 关闭菜单
     * @param funcId 菜单id
     */
    closeFunc(funcId?: string): void;
    /**
     * 关闭app
     * @param appId 应用id
     */
    closeApp(appId?: string, appEntrance?: string): void;
    /**
     * 设置参数
     * @param params 路由参数
     */
    private setParams;
    /**
     * 获取funcId
     */
    private getFuncId;
    /**
     * 获取appId
     */
    private getAppId;
    private getParentMenuId;
    /**
     * 获取应用入口
     */
    private getAppEntrance;
    /**
     * 解码参数
     * @param query search|hash
     */
    private decodeURLParams;
    private getParams;
}
export { RouterService };
