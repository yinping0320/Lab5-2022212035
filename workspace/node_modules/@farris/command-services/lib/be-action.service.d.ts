import { Observable } from 'rxjs';
import { Repository } from '@farris/devkit';
import { BefRestService, ResponseInfo } from '@farris/bef';
import { BodyWithRequestInfo } from './types';
import { FormLoadingService } from './form-loading/form-loading.service';
import { FormMessageService } from './form-message.service';
import { FormNotifyService } from './form-notify.service';
import { FormErrorService } from './error/form-error.service';
import { LanguageService } from './languag.service';
/**
 * 列表仓库服务
 * @scope FrameComponent
 */
declare class BeActionService {
    private repository;
    private loadingService;
    private msgService;
    private notifyService;
    private formErrorService;
    private languageService;
    /**
     * 构造函数
     */
    constructor(repository: Repository<any>, loadingService: FormLoadingService, msgService: FormMessageService, notifyService: FormNotifyService, formErrorService: FormErrorService, languageService: LanguageService);
    /**
     * 执行自定义动作
     */
    invokeAction(actionUri: string, httpMethod: string, httpHeaders?: any, queryParams?: any, body?: BodyWithRequestInfo): Observable<ResponseInfo>;
    /**
     * 已弃用：请使用invokeAction代替
     * @deprecated
     * @summary
     * 迁移时请注意：invokeAction中body请传递满足BodyWithRequestInfo接口的格式，形如：
     * { requestInfo: reqeustInfoInstance, key1: value1, key2: value2 }
     */
    executeAction(actionUri: string, httpMethod: string, httpHeaders?: any, queryParams?: any, body?: any): Observable<any>;
    /**
     * 构造查询字符串
     */
    buildQueryParams(queryParams: string): string;
    /**
     * 获取Rest服务
     */
    getRestService(): BefRestService;
    /**
     * 调用自定义动作
     */
    private innerInvokeAction;
}
export { BeActionService };
