import { Observable } from 'rxjs';
import { FrameContext, ViewModel } from '@farris/devkit';
import { BaseDataService } from './base-data.service';
import { FormMessageService } from '../form-message.service';
import { FormLoadingService } from '../form-loading/form-loading.service';
import { FormErrorService } from '../error/form-error.service';
import { FormNotifyService } from '../form-notify.service';
import { LanguageService } from '../languag.service';
/**
 * 树数据服务
 */
declare class SubTreeDataService extends BaseDataService {
    private viewModel;
    private messageService;
    private loadingService;
    private errorService;
    private formNotifyService;
    private languageService;
    /**
     * 分级码信息
     */
    private readonly hierarchyInfoKey;
    private readonly hierarchyInfoField;
    private readonly virtualRootFrameContext;
    /**
     * 构造函数
     */
    constructor(frameContext: FrameContext, viewModel: ViewModel, messageService: FormMessageService, loadingService: FormLoadingService, errorService: FormErrorService, formNotifyService: FormNotifyService, languageService: LanguageService);
    private readonly messagePipe;
    /**
     * 新增子表同级
     */
    addSubSibling(): Observable<any>;
    /**
     * 新增下级
     */
    addSubChild(): Observable<any>;
    /**
     * 删除子表树节点
     * @param id id
     */
    remove(id: string, successMsg?: string): Observable<any>;
    private getHierarchyType;
    /**
     * 获取参数
     * /parentId/childCodes/childId/grandsonCodes
     * [childCodes, grandsonCodes]
     * [parntId, childId]
     */
    private getParams;
    /**
     * 获取完整路径
     * fixed by justin: 根据bindingPath，如果是从从表，需要获取主表数据id和从表数据id
     */
    private getPath;
}
export { SubTreeDataService };
