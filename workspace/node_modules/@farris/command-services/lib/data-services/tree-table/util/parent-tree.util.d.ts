import { BindingData, BindingList } from '@farris/devkit';
/**
 * 树数据的帮助类
 */
declare class ParentTreeNodeUtil {
    /**
     * 选中第一个根节点
     */
    selectFirstRootNode(bindingData: BindingData, hierarchyInfoKey: string): string;
    selectNodeByBindingList(bindingList: BindingList, hierarchyInfoKey: string, selectedNodeId: string): void;
    /**
     * 选中节点
     */
    selectedNode(bindingData: BindingData, hierarchyInfoKey: string, selectedNodeId: string): void;
    /**
     * 检查是否有子节点
     */
    hasChildNodes(treeNodesData: any[], hierarchyInfoKey: string, fid: string): boolean;
    /**
     * 获取根节点（多个根节点时获取第一个）
     * @return 找不到时返回null
     */
    private getFirstNodeId;
    private getRootLayer;
    /**
     * 获取下一个节点（删除后）
     */
    getNextNodeId(treeNodesData: any[], hierarchyInfoKey: string, currentId: string): string;
    /**
     * 获取下个兄弟节点的id
     */
    getNextSiblingNodeId(siblingtreeNodesData: any[], currentId: string): string;
    /**
     * 获取下级节点的BindingObjects集合
     */
    getChildNodesData(treeNodesData: any[], hierarchyInfoKey: string, fLayer: number, fParentElement: string): any[];
    /**
     * 获取id获取节点数据
     */
    getNodeDataById(treeNodesData: any[], id: string): any;
}
export { ParentTreeNodeUtil };
