import { ControlType } from "@farris/component-querycondition";
import { TextHandler } from "./handlers/text.handler";
import { DateRangeHandler } from "./handlers/daterage.handler";
import { DropDownHandler } from "./handlers/dropdown.handler";
import { NumberRangeHandler } from "./handlers/numberrage.handler";
import { SmartHelpHandler } from "./handlers/smarthelp.handler";
import { SingleYearHandler } from './handlers/single-year.handler';
import { CheckBoxHandler } from './handlers/checkbox.handler';
import { SingleMonthHandler } from './handlers/single-month.handler';
import { MonthRangeHandler } from './handlers/monthrange.handler';
import { SingleDateTimeHandler } from './handlers/single-date-time.handler';
import { SingleNumberHandler } from './handlers/single-number.handler';
import { SingleDateHandler } from './handlers/single-date.handler';
import { ComboLookUpHandler } from './handlers/combolookup.handler';
import { RadioHandler } from './handlers/radio.handler';
import { InputGroupHandler } from './handlers/inputgroup.handler';
var QueryConditionHandlerFactory = /** @class */ (function () {
    function QueryConditionHandlerFactory() {
        this.queryConditionHandlerMapping = new Map();
        this.queryConditionHandlerMapping.set(ControlType.Text, new TextHandler());
        this.queryConditionHandlerMapping.set(ControlType.InputGroup, new InputGroupHandler());
        this.queryConditionHandlerMapping.set(ControlType.DateRange, new DateRangeHandler());
        this.queryConditionHandlerMapping.set(ControlType.DateTimeRange, new DateRangeHandler());
        this.queryConditionHandlerMapping.set(ControlType.DropDownList, new DropDownHandler());
        this.queryConditionHandlerMapping.set(ControlType.NumberRange, new NumberRangeHandler());
        this.queryConditionHandlerMapping.set(ControlType.SmartHelp, new SmartHelpHandler());
        this.queryConditionHandlerMapping.set(ControlType.SingleYear, new SingleYearHandler());
        this.queryConditionHandlerMapping.set(ControlType.BoolCheck, new CheckBoxHandler());
        this.queryConditionHandlerMapping.set(ControlType.SingleMonth, new SingleMonthHandler());
        this.queryConditionHandlerMapping.set(ControlType.MonthRange, new MonthRangeHandler());
        this.queryConditionHandlerMapping.set(ControlType.SingleDateTime, new SingleDateTimeHandler());
        this.queryConditionHandlerMapping.set(ControlType.SingleNumber, new SingleNumberHandler());
        this.queryConditionHandlerMapping.set(ControlType.SingleDate, new SingleDateHandler());
        this.queryConditionHandlerMapping.set(ControlType.ComboLookUp, new ComboLookUpHandler());
        this.queryConditionHandlerMapping.set(ControlType.Radio, new RadioHandler());
    }
    QueryConditionHandlerFactory.getInstance = function () {
        if (!QueryConditionHandlerFactory._instance) {
            QueryConditionHandlerFactory._instance = new QueryConditionHandlerFactory();
        }
        return QueryConditionHandlerFactory._instance;
    };
    QueryConditionHandlerFactory.prototype.getHandler = function (controlType) {
        return this.queryConditionHandlerMapping.get(controlType);
    };
    QueryConditionHandlerFactory._instance = null;
    return QueryConditionHandlerFactory;
}());
export { QueryConditionHandlerFactory };
//# sourceMappingURL=data:application/json;base64,