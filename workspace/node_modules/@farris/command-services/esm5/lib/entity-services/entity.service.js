import { Injectable } from '@angular/core';
import { FrameContext } from '@farris/devkit';
import { EntityTraversingService } from './entity-traversing.service';
import { EntityManipulationService } from './entity-manipulation.service';
import { EntityAggregationService } from './entity-aggregation.service';
/**
 * 实体服务
 * @scope FrameComponent
 */
var EntityService = /** @class */ (function () {
    function EntityService(frameContext) {
        this.frameContext = frameContext;
        var injector = this.frameContext.injector;
        this.traversingService = injector.get(EntityTraversingService);
        this.manipulationService = injector.get(EntityManipulationService);
        this.aggregationService = injector.get(EntityAggregationService);
    }
    /**
     * 获取path对应的属性值
     */
    EntityService.prototype.getPropValue = function (path) {
        return this.traversingService.getPropValue(path);
    };
    /**
     * 设置path对应的属性值
     */
    EntityService.prototype.setPropValue = function (path, value) {
        return this.manipulationService.setPropValue(path, value);
    };
    /**
     * 设置path对应的Entity数据
     */
    EntityService.prototype.getEntityData = function (path) {
        return this.traversingService.getEntityData(path);
    };
    /**
     * 设置path对应的EntityList数据
     */
    EntityService.prototype.getEntityListData = function (path) {
        return this.traversingService.getEntityListData(path);
    };
    /**
     * 获取path对应EntityList记录数
     */
    EntityService.prototype.count = function (path) {
        return this.aggregationService.count(path);
    };
    /**
     * 获取path对应属性的合计值
     */
    EntityService.prototype.sum = function (path) {
        return this.aggregationService.sum(path);
    };
    /**
     * 获取path对应属性的平均值
     */
    EntityService.prototype.avg = function (path) {
        return this.aggregationService.avg(path);
    };
    /**
     * 获取path对应属性的最大值
     */
    EntityService.prototype.max = function (path) {
        return this.aggregationService.max(path);
    };
    /**
     * 获取path对应属性的最小值
     */
    EntityService.prototype.min = function (path) {
        return this.aggregationService.min(path);
    };
    EntityService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    EntityService.ctorParameters = function () { return [
        { type: FrameContext }
    ]; };
    return EntityService;
}());
export { EntityService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50aXR5LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbW1hbmQtc2VydmljZXMvIiwic291cmNlcyI6WyJsaWIvZW50aXR5LXNlcnZpY2VzL2VudGl0eS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzFFLE9BQU8sRUFBRSx3QkFBd0IsRUFBQyxNQUFNLDhCQUE4QixDQUFDO0FBRXZFOzs7R0FHRztBQUNIO0lBU0UsdUJBQW9CLFlBQTBCO1FBQTFCLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQzVDLElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDO1FBQzVDLElBQUksQ0FBQyxpQkFBaUIsR0FBSyxRQUFRLENBQUMsR0FBRyxDQUEwQix1QkFBdUIsQ0FBQyxDQUFDO1FBQzFGLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxRQUFRLENBQUMsR0FBRyxDQUE0Qix5QkFBeUIsQ0FBQyxDQUFDO1FBQzlGLElBQUksQ0FBQyxrQkFBa0IsR0FBSSxRQUFRLENBQUMsR0FBRyxDQUEyQix3QkFBd0IsQ0FBQyxDQUFDO0lBQzlGLENBQUM7SUFFRDs7T0FFRztJQUNJLG9DQUFZLEdBQW5CLFVBQW9CLElBQWM7UUFDaEMsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFFRDs7T0FFRztJQUNJLG9DQUFZLEdBQW5CLFVBQW9CLElBQWMsRUFBRSxLQUFVO1FBQzVDLE9BQU8sSUFBSSxDQUFDLG1CQUFtQixDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUVEOztPQUVHO0lBQ0kscUNBQWEsR0FBcEIsVUFBcUIsSUFBYztRQUNqQyxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVEOztPQUVHO0lBQ0kseUNBQWlCLEdBQXhCLFVBQXlCLElBQWM7UUFDckMsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVEOztPQUVHO0lBQ0ksNkJBQUssR0FBWixVQUFhLElBQWM7UUFDekIsT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFRDs7T0FFRztJQUNJLDJCQUFHLEdBQVYsVUFBVyxJQUFjO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRUQ7O09BRUc7SUFDSSwyQkFBRyxHQUFWLFVBQVcsSUFBYztRQUN2QixPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVEOztPQUVHO0lBQ0ksMkJBQUcsR0FBVixVQUFXLElBQWM7UUFDdkIsT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRDs7T0FFRztJQUNJLDJCQUFHLEdBQVYsVUFBVyxJQUFjO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMzQyxDQUFDOztnQkE3RUYsVUFBVTs7OztnQkFURixZQUFZOztJQXVGckIsb0JBQUM7Q0FBQSxBQTlFRCxJQThFQztBQUVELE9BQU8sRUFBRSxhQUFhLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRnJhbWVDb250ZXh0IH0gZnJvbSAnQGZhcnJpcy9kZXZraXQnO1xyXG5pbXBvcnQgeyBFbnRpdHlUcmF2ZXJzaW5nU2VydmljZSB9IGZyb20gJy4vZW50aXR5LXRyYXZlcnNpbmcuc2VydmljZSc7XHJcbmltcG9ydCB7IEVudGl0eU1hbmlwdWxhdGlvblNlcnZpY2UgfSBmcm9tICcuL2VudGl0eS1tYW5pcHVsYXRpb24uc2VydmljZSc7XHJcbmltcG9ydCB7IEVudGl0eUFnZ3JlZ2F0aW9uU2VydmljZX0gZnJvbSAnLi9lbnRpdHktYWdncmVnYXRpb24uc2VydmljZSc7XHJcblxyXG4vKipcclxuICog5a6e5L2T5pyN5YqhXHJcbiAqIEBzY29wZSBGcmFtZUNvbXBvbmVudFxyXG4gKi9cclxuQEluamVjdGFibGUoKVxyXG5jbGFzcyBFbnRpdHlTZXJ2aWNlIHtcclxuXHJcbiAgcHJpdmF0ZSB0cmF2ZXJzaW5nU2VydmljZTogRW50aXR5VHJhdmVyc2luZ1NlcnZpY2U7XHJcblxyXG4gIHByaXZhdGUgbWFuaXB1bGF0aW9uU2VydmljZTogRW50aXR5TWFuaXB1bGF0aW9uU2VydmljZTtcclxuXHJcbiAgcHJpdmF0ZSBhZ2dyZWdhdGlvblNlcnZpY2U6IEVudGl0eUFnZ3JlZ2F0aW9uU2VydmljZTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBmcmFtZUNvbnRleHQ6IEZyYW1lQ29udGV4dCkge1xyXG4gICAgY29uc3QgaW5qZWN0b3IgPSB0aGlzLmZyYW1lQ29udGV4dC5pbmplY3RvcjtcclxuICAgIHRoaXMudHJhdmVyc2luZ1NlcnZpY2UgICA9IGluamVjdG9yLmdldDxFbnRpdHlUcmF2ZXJzaW5nU2VydmljZT4oRW50aXR5VHJhdmVyc2luZ1NlcnZpY2UpO1xyXG4gICAgdGhpcy5tYW5pcHVsYXRpb25TZXJ2aWNlID0gaW5qZWN0b3IuZ2V0PEVudGl0eU1hbmlwdWxhdGlvblNlcnZpY2U+KEVudGl0eU1hbmlwdWxhdGlvblNlcnZpY2UpO1xyXG4gICAgdGhpcy5hZ2dyZWdhdGlvblNlcnZpY2UgID0gaW5qZWN0b3IuZ2V0PEVudGl0eUFnZ3JlZ2F0aW9uU2VydmljZT4oRW50aXR5QWdncmVnYXRpb25TZXJ2aWNlKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPlnBhdGjlr7nlupTnmoTlsZ7mgKflgLxcclxuICAgKi9cclxuICBwdWJsaWMgZ2V0UHJvcFZhbHVlKHBhdGg6IHN0cmluZ1tdKTogYW55IHtcclxuICAgIHJldHVybiB0aGlzLnRyYXZlcnNpbmdTZXJ2aWNlLmdldFByb3BWYWx1ZShwYXRoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiuvue9rnBhdGjlr7nlupTnmoTlsZ7mgKflgLxcclxuICAgKi9cclxuICBwdWJsaWMgc2V0UHJvcFZhbHVlKHBhdGg6IHN0cmluZ1tdLCB2YWx1ZTogYW55KTogdm9pZCB7XHJcbiAgICByZXR1cm4gdGhpcy5tYW5pcHVsYXRpb25TZXJ2aWNlLnNldFByb3BWYWx1ZShwYXRoLCB2YWx1ZSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDorr7nva5wYXRo5a+55bqU55qERW50aXR55pWw5o2uXHJcbiAgICovXHJcbiAgcHVibGljIGdldEVudGl0eURhdGEocGF0aDogc3RyaW5nW10pOiBhbnkge1xyXG4gICAgcmV0dXJuIHRoaXMudHJhdmVyc2luZ1NlcnZpY2UuZ2V0RW50aXR5RGF0YShwYXRoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiuvue9rnBhdGjlr7nlupTnmoRFbnRpdHlMaXN05pWw5o2uXHJcbiAgICovXHJcbiAgcHVibGljIGdldEVudGl0eUxpc3REYXRhKHBhdGg6IHN0cmluZ1tdKTogYW55IHtcclxuICAgIHJldHVybiB0aGlzLnRyYXZlcnNpbmdTZXJ2aWNlLmdldEVudGl0eUxpc3REYXRhKHBhdGgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+WcGF0aOWvueW6lEVudGl0eUxpc3TorrDlvZXmlbBcclxuICAgKi9cclxuICBwdWJsaWMgY291bnQocGF0aDogc3RyaW5nW10pOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuYWdncmVnYXRpb25TZXJ2aWNlLmNvdW50KHBhdGgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+WcGF0aOWvueW6lOWxnuaAp+eahOWQiOiuoeWAvFxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdW0ocGF0aDogc3RyaW5nW10pOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuYWdncmVnYXRpb25TZXJ2aWNlLnN1bShwYXRoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPlnBhdGjlr7nlupTlsZ7mgKfnmoTlubPlnYflgLxcclxuICAgKi9cclxuICBwdWJsaWMgYXZnKHBhdGg6IHN0cmluZ1tdKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLmFnZ3JlZ2F0aW9uU2VydmljZS5hdmcocGF0aCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDojrflj5ZwYXRo5a+55bqU5bGe5oCn55qE5pyA5aSn5YC8XHJcbiAgICovXHJcbiAgcHVibGljIG1heChwYXRoOiBzdHJpbmdbXSk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy5hZ2dyZWdhdGlvblNlcnZpY2UubWF4KHBhdGgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+WcGF0aOWvueW6lOWxnuaAp+eahOacgOWwj+WAvFxyXG4gICAqL1xyXG4gIHB1YmxpYyBtaW4ocGF0aDogc3RyaW5nW10pOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuYWdncmVnYXRpb25TZXJ2aWNlLm1pbihwYXRoKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7IEVudGl0eVNlcnZpY2UgfTtcclxuIl19