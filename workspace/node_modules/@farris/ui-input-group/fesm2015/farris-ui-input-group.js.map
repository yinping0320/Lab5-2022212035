{"version":3,"file":"farris-ui-input-group.js.map","sources":["ng://@farris/ui-input-group/lib/input-group.service.ts","ng://@farris/ui-input-group/lib/input-group.component.ts","ng://@farris/ui-input-group/lib/input-group.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InputGroupService {\r\n\r\n  constructor() { }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-08 18:53:41\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-27 11:19:44\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { SimpleChanges, Renderer2, forwardRef, Injector, HostBinding, ChangeDetectorRef } from '@angular/core';\r\nimport { NgZone, ViewEncapsulation, TemplateRef } from '@angular/core';\r\nimport { Component, OnInit, Output, EventEmitter, ElementRef, Input, AfterViewInit, ViewChild, OnChanges } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, NgControl, MaxLengthValidator } from '@angular/forms';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nexport const INPUT_GROUP_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputGroupComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'farrisui-input-group, input-group, farris-input-group',\r\n    template: `\r\n        <div #inputGroup [class]=\"customCls + ' input-group'\"\r\n            [class.f-state-disabled]=\"disabled\"\r\n            [class.f-state-editable]=\"editable && !disabled && !readonly\"\r\n            [class.f-state-readonly]=\"readonly && !disabled\">\r\n            <span class=\"input-group-before-tips\" *ngIf=\"useExtendInfo\" (mouseenter)=\"onMouseOverInExtentInfo()\"\r\n                farrisPopover [popover]=\"extendInfo\" [triggers]=\"'hover'\" [container]=\"'body'\" [placement]=\"'top'\">\r\n                <i class=\"f-icon f-icon-info-circle\"></i><b class=\"tips-arrow\"></b>\r\n            </span>\r\n\r\n            <input\r\n                #textbox\r\n                name=\"input-group-value\"\r\n                class=\"form-control f-utils-fill\"\r\n                [class.text-left]=\"textAlign == 'left'\"\r\n                [class.text-center]=\"textAlign == 'center'\"\r\n                [class.text-right]=\"textAlign == 'right'\"\r\n                [attr.title]=\"(enableTitle && !isPassword)? value: ''\"\r\n                [attr.type]=\"inputType\"\r\n                [attr.placeholder]=\"(disabled||readonly)&&!forcePlaceholder?'':placeholder\"\r\n                [attr.autocomplete]=\"autocomplete\"\r\n                [readonly]=\"readonly || !editable\"\r\n                [ngModel]=\"value\"\r\n                [disabled]=\"disabled\"\r\n                (blur)=\"onBlur($event)\"\r\n                (mousedown)=\"onMousedown($event)\"\r\n                (ngModelChange)=\"onValueChange($event)\"\r\n                (keydown.enter)=\"onEnter($event)\"\r\n                (focus)=\"onInputFocus($event)\"\r\n                (click)=\"onInputClick($event)\"\r\n                minlength=\"{{minLength}}\"\r\n                maxlength=\"{{maxLength}}\"\r\n                (keyup)=\"keyupHandle.emit($event)\"\r\n                (keydown)=\"keydownHandle.emit($event)\"\r\n                [attr.tabindex]=\"tabIndex\"\r\n            />\r\n            <div class=\"input-group-append\" [ngClass]=\"{'append-force-show':showButtonWhenDisabled && (readonly||disabled)}\"  *ngIf=\"enableClear || groupText || groupTextTemplate\">\r\n                <span *ngIf=\"enableClear && !readonly && !disabled\"\r\n                    [style.display]=\"showClearButton ? 'flex' : 'none'\"\r\n                    class=\"input-group-text input-group-clear\" #clearIcon\r\n                    (click)=\"onClearValue($event)\" style=\"width:24px\">\r\n                    <i class=\"f-icon modal_close\"></i>\r\n                </span>\r\n                <span class=\"input-group-text\"\r\n                    (mouseenter)=\"onIconMouseEnter($event)\" (mouseleave)=\"onIconMouseLeave($event)\"\r\n                    *ngIf=\"groupText && !groupTextTemplate\" [innerHTML]=\"groupText | safe: 'html'\"\r\n                    (click)=\"onClickHandle($event)\"></span>\r\n                <ng-container *ngIf=\"groupTextTemplate\">\r\n                    <ng-container *ngTemplateOutlet=\"groupTextTemplate\" ></ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n            .input-group {\r\n                flex-wrap: nowrap;\r\n            }\r\n            .input-group-text {\r\n                cursor: pointer;\r\n            }\r\n            .input-group-clear {\r\n                cursor: pointer;\r\n            }\r\n\r\n            .input-group-text:hover {\r\n                background: #ccc;\r\n            }\r\n\r\n            .input-group-clear-right {\r\n                position: absolute;\r\n                height: 100%;\r\n                right: 0;\r\n                top: 0;\r\n                z-index: 100;\r\n            }\r\n        `\r\n    ],\r\n    // .input-group-clear:hover {\r\n    //     background: #e9ecef !important;\r\n    // }\r\n    providers: [INPUT_GROUP_VALUE_ACCESSOR],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class InputGroupComponent\r\n    implements OnInit, AfterViewInit, OnChanges, ControlValueAccessor {\r\n    @HostBinding('class.f-cmp-inputgroup')\r\n    @Input() autocomplete = 'off';\r\n    showClearButton = false;\r\n    ngControl: NgControl;\r\n    @Input() value = '';\r\n    /** åªè¯» */\r\n    @Input() readonly = false;\r\n    /** ç¦ç¨ */\r\n    @Input() disabled = false;\r\n    /** åè®¸ç¼è¾ */\r\n    @Input() editable = true;\r\n    /** å¯ç¨æ¸é¤æé® */\r\n    @Input() enableClear = true;\r\n    /** æ©å±æé® */\r\n    @Input() groupText = '';\r\n    /** èªå®ä¹CLASS */\r\n    @Input() customCls = '';\r\n    /** å½ç»ä»¶ç¦ç¨æåªè¯»æ¶æ¾ç¤ºåè¾¹çæé® */\r\n    @Input() showButtonWhenDisabled = false;\r\n    /** å¯ç¨æç¤ºä¿¡æ¯ */\r\n    @Input() placeholder = '';\r\n    /** ææ¬å¨è¾å¥æ¡ä¸­çå¯¹é½æ¹å¼ */\r\n    @Input() textAlign = 'left';\r\n\r\n    @Input() groupTextTemplate: TemplateRef<any>;\r\n    @Input() isPassword = false;\r\n    @Input() enableViewPassword = true;\r\n\r\n    @Input() noborder = false;\r\n\r\n    @Input() minLength: number | undefined = undefined;\r\n    @Input() maxLength: number | undefined = undefined;\r\n\r\n    @Input() tabIndex: number;\r\n\r\n    @Input() enableTitle = true;\r\n    /** æ©å±ä¿¡æ¯ï¼å¨è¾å¥æ¡åé¢ æ¾ç¤º â  å¾æ é¼ æ æ»è¿åæ¾ç¤º */\r\n    @Input() useExtendInfo = false;\r\n    @Input() extendInfo = '';\r\n    @Input() forcePlaceholder = false;\r\n    @Output() updateExtendInfo = new EventEmitter();\r\n\r\n    @Output() clear = new EventEmitter();\r\n    @Output() valueChange = new EventEmitter();\r\n    @Output() clickHandle = new EventEmitter();\r\n    @Output() blurHandle = new EventEmitter();\r\n    @Output() focusHandle = new EventEmitter();\r\n    @Output() enterHandle = new EventEmitter();\r\n    @Output() iconMouseEnter = new EventEmitter();\r\n    @Output() iconMouseLeave = new EventEmitter();\r\n    @Output() keyupHandle = new EventEmitter();\r\n    @Output() keydownHandle = new EventEmitter();\r\n    @Output() inputClick = new EventEmitter();\r\n\r\n    @ViewChild('inputGroup') inputGroup: ElementRef;\r\n    @ViewChild('textbox') textbox: ElementRef;\r\n    @ViewChild('clearIcon') clearIconRef: ElementRef;\r\n\r\n    inputType = 'text';\r\n\r\n    private state: boolean;\r\n    cd: ChangeDetectorRef = null;\r\n\r\n    private focusCls = 'f-state-focus';\r\n    private ro: ResizeObserver = null;\r\n    onModelChange = (obj: any) => { };\r\n    onModelTouched = (val: any) => { };\r\n\r\n\r\n    private openEyeICON = '<span class=\"f-icon f-icon-eye\" style=\"color: rgb(56, 143, 255);\"></span>';\r\n    private closeEyeICON = '<span class=\"f-icon f-icon-eye\"></span>';\r\n\r\n    constructor(\r\n        public el: ElementRef,\r\n        private renderer: Renderer2,\r\n        private ngZone: NgZone,\r\n        private injector: Injector\r\n    ) {\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.initSmartPassword();\r\n\r\n        // this.ngControl = this.injector.get(NgControl, null);\r\n        // console.log(this.ngControl);\r\n        // if (this.ngControl) {\r\n        //     this.ngControl.valueChanges.subscribe((val:any) => {\r\n        //         this.value = val;\r\n        //         this.textbox.nativeElement.value = this.value;\r\n        //     });\r\n        // }\r\n        // if (!this.editable) {\r\n        //     this.readonly = true\r\n        // }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            if (this.enableClear) {\r\n                this.inputGroup.nativeElement.addEventListener(\r\n                    'mouseenter',\r\n                    this.onMouseEnter.bind(this)\r\n                );\r\n                this.inputGroup.nativeElement.addEventListener(\r\n                    'mouseleave',\r\n                    this.onMouseLeave.bind(this)\r\n                );\r\n            }\r\n\r\n            this.ro = new ResizeObserver((entries, observer) => {\r\n                if (entries && entries[0] && this.clearIconRef) {\r\n                    const { width, height } = entries[0].contentRect;\r\n                    const target =  entries[0].target;\r\n\r\n                    if (width < 70) {\r\n                        this.clearIconRef.nativeElement.classList.add('input-group-clear-right');\r\n                    } else {\r\n                        this.clearIconRef.nativeElement.classList.remove('input-group-clear-right');\r\n                    }\r\n                }\r\n            });\r\n            this.ro.observe(this.inputGroup.nativeElement);\r\n\r\n            if (this.noborder) {\r\n                this.renderer.setStyle(this.inputGroup.nativeElement, 'borderWidth', '0px');\r\n            }\r\n\r\n            const groupAppendEl = this.el.nativeElement.querySelector('.input-group-append');\r\n            if (!this.groupText && groupAppendEl) {\r\n                this.renderer.setStyle( groupAppendEl, 'margin-left', '0');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        // if (changes.groupText && !changes.groupText.isFirstChange()) {\r\n        //     if (changes.groupText.currentValue) {\r\n        //         this.renderer.setStyle(\r\n        //             this.el.nativeElement.querySelector('.input-group-append'),\r\n        //             'margin-left',\r\n        //             '-1'\r\n        //         );\r\n        //     }\r\n        // }\r\n\r\n        ['readonly', 'disabled'].forEach(n => {\r\n            if (changes[n] && !changes[n].isFirstChange()) {\r\n                if (this[n] && this.isPassword) {\r\n                    if (this.groupText) {\r\n                        this.groupText = this.closeEyeICON;\r\n                    }\r\n                    this.inputType = 'password';\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    ngModelChange(val: any) {\r\n    }\r\n\r\n\r\n    private initSmartPassword() {\r\n        if (this.isPassword) {\r\n            \r\n            this.groupText = this.closeEyeICON;\r\n\r\n            if (!this.enableViewPassword) {\r\n                this.groupText = '';\r\n            }\r\n\r\n            this.inputType = 'password';\r\n            let openEyes = false;\r\n            this.onClickHandle = ($event) => {\r\n                openEyes = !openEyes;\r\n                const inputtype = openEyes ? 'text' : 'password';\r\n                this.groupText = openEyes ? this.openEyeICON : this.closeEyeICON;\r\n                this.inputType = inputtype;\r\n                this.cd.detectChanges();\r\n                return false;\r\n            };\r\n        } else {\r\n            this.inputType = 'text';\r\n        }\r\n    }\r\n\r\n    onEnter($event: KeyboardEvent) {\r\n        // if (this.editable) {\r\n        //     $event.stopPropagation();\r\n        // }\r\n        this.enterHandle.emit({originalEvent: $event});\r\n    }\r\n\r\n    onInputFocus($event) {\r\n        if (this.disabled) {\r\n            return;\r\n        } else {\r\n            if (!this.noborder) {\r\n                this.renderer.addClass(this.inputGroup.nativeElement, this.focusCls);\r\n            }\r\n            if (this.editable || !this.readonly) {\r\n                this.focusHandle.emit($event);\r\n            }\r\n        }\r\n    }\r\n\r\n    onInputClick($event) {\r\n        this.inputClick.emit($event);\r\n    }\r\n\r\n\r\n    onMouseEnter(event) {\r\n        if (this.value) {\r\n            if (!this.editable) {\r\n                if (!this.state && !this.disabled) {\r\n                    this.showClearButton = true;\r\n                }\r\n            } else {\r\n                if (!this.readonly && !this.disabled) {\r\n                    this.showClearButton = true;\r\n                }\r\n            }\r\n        }\r\n        if (this.showClearButton) {\r\n            this.toggleClearIcon(event, true);\r\n        }\r\n    }\r\n\r\n    onMouseLeave(event) {\r\n        this.showClearButton = false;\r\n        this.toggleClearIcon(event, false);\r\n    }\r\n\r\n    getStateCls() {\r\n        if (this.disabled) {\r\n            return { 'f-state-disabled': true };\r\n        } else {\r\n            if (!this.editable) {\r\n                return { 'f-state-editable': true, 'f-state-readonly': this.readonly };\r\n            } else {\r\n                return { 'f-state-readonly': this.readonly };\r\n            }\r\n        }\r\n    }\r\n\r\n    private toggleClearIcon(event: any, isShow = false) {\r\n        const str = isShow ? '' : 'none';\r\n        const clearIcon = event.target.querySelector('.input-group-clear');\r\n        if (clearIcon) {\r\n            clearIcon.style.display = str;\r\n        }\r\n    }\r\n\r\n    onMouseOverInExtentInfo() {\r\n        this.updateExtendInfo.emit();\r\n    }\r\n\r\n    onMousedown($event: MouseEvent) {\r\n        const target = $event.target as HTMLElement;\r\n        if (target.tagName !== 'INPUT') {\r\n            $event.preventDefault();\r\n        }\r\n        $event.stopPropagation();\r\n    }\r\n\r\n    onClearValue($event: any) {\r\n        const flag1 = !this.readonly && !this.disabled && this.editable;\r\n        const flag2 = !this.editable;\r\n        $event.stopPropagation();\r\n        if (flag1 || flag2) {\r\n            this.onValueChange('', false);\r\n            this.showClearButton = false;\r\n            this.clear.emit();\r\n        }\r\n    }\r\n\r\n    onBlur(event) {\r\n        this.renderer.removeClass(this.inputGroup.nativeElement, this.focusCls);\r\n        this.blurHandle.emit(event);\r\n        event.stopPropagation();\r\n        return false;\r\n    }\r\n\r\n    onValueChange(val: string, emit = true) {\r\n        if (this.value !== val) {\r\n            this.value = val;\r\n            this.onModelChange(val);\r\n            this.onModelTouched(val);\r\n            if (emit) {\r\n                this.valueChange.emit(val);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClickHandle(event?: Event) {\r\n        if (this.showButtonWhenDisabled || ((!this.editable  || !this.readonly) && !this.disabled)) {\r\n            this.clickHandle.emit({\r\n                originalEvent: event,\r\n                value: this.value\r\n            });\r\n        }\r\n\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n    onIconMouseEnter(e: MouseEvent) {\r\n        this.iconMouseEnter.emit(e);\r\n    }\r\n    onIconMouseLeave(e: MouseEvent) {\r\n        this.iconMouseLeave.emit(e);\r\n    }\r\n    focus() {\r\n        this.textbox.nativeElement.focus();\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        this.value = (obj === null || obj === undefined) ? '' : obj;\r\n        this.textbox.nativeElement.value = this.value;\r\n        // å¨æ­¤å¤æ§è¡ onModelChange å pristine ç¶æåä¸º false å³éç¬¬ä¸æ¬¡å è½½ï¼å¯¼è³è¡¨åä¸­çéè¯¯ä¿¡æ¯æ¾ç¤ºåºæ¥ï¼\r\n        // å¦æå¿é¡»è¦æ§è¡ä¸æ¬¡ï¼éè¦éæ°ngControl çç¶æ\r\n        // this.onModelChange(obj);\r\n    }\r\n    registerOnChange(fn: any): void {\r\n        this.onModelChange = fn;\r\n    }\r\n    registerOnTouched(fn: any): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    setFocusToEnd() {\r\n        const el = this.textbox.nativeElement;\r\n        el.focus();\r\n        el.selectionStart = el.value.length;\r\n        el.selectionEnd = el.value.length;\r\n    }\r\n}\r\n","import { PopoverModule } from '@farris/ui-popover';\r\nimport { NgModule } from '@angular/core';\r\nimport { InputGroupComponent } from './input-group.component';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [InputGroupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    PopoverModule.forRoot(),\r\n    FarrisCommonModule\r\n  ],\r\n  exports: [\r\n    InputGroupComponent\r\n  ]\r\n})\r\nexport class InputGroupModule { }\r\n"],"names":[],"mappings":"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"}
