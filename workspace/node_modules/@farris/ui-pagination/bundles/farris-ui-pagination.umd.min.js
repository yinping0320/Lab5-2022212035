!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/forms"),require("@angular/common"),require("@farris/ui-common"),require("@farris/ui-locale"),require("@angular/core")):"function"==typeof define&&define.amd?define("@farris/ui-pagination",["exports","@angular/forms","@angular/common","@farris/ui-common","@farris/ui-locale","@angular/core"],t):t((e.farris=e.farris||{},e.farris["ui-pagination"]={}),e.ng.forms,e.ng.common,e.uiCommon,e.uiLocale,e.ng.core)}(this,function(e,t,n,i,a,s){"use strict";var r=(o.prototype.defaultId=function(){return this.DEFAULT_ID+(new i.IdService).uuid()},o.prototype.removeInstance=function(e){this.instances[e]&&(this.instances[e]=null,delete this.instances[e])},o.prototype.register=function(e){null==e.id&&(e.id=this.DEFAULT_ID),this.instances[e.id]?this.updateInstance(e)&&this.change.emit(e.id):(this.instances[e.id]=e,this.change.emit(e.id))},o.prototype.updateInstance=function(e){var t=!1;for(var n in this.instances[e.id])e[n]!==this.instances[e.id][n]&&(this.instances[e.id][n]=e[n],t=!0);return t},o.prototype.getCurrentPage=function(e){if(this.instances[e])return this.instances[e].currentPage},o.prototype.setCurrentPage=function(e,t){if(this.instances[e]){var n=this.instances[e];t<=Math.ceil(n.totalItems/n.itemsPerPage)&&1<=t&&(this.instances[e].currentPage=t,this.change.emit(e))}},o.prototype.setPageList=function(e,t){this.instances[e]&&(this.instances[e].pageList=t,this.change.emit(e))},o.prototype.setTotalItems=function(e,t){this.instances[e]&&0<=t&&(this.instances[e].totalItems=t,this.change.emit(e))},o.prototype.setItemsPerPage=function(e,t){this.instances[e]&&(this.instances[e].itemsPerPage=t,this.change.emit(e))},o.prototype.getInstance=function(e){return void 0===e&&(e=this.DEFAULT_ID),this.instances[e]?this.clone(this.instances[e]):{}},o.prototype.clone=function(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t},o.decorators=[{type:s.Injectable,args:[{providedIn:"root"}]}],o.ngInjectableDef=s.defineInjectable({factory:function(){return new o},token:o,providedIn:"root"}),o);function o(){this.change=new s.EventEmitter,this.instances={},this.DEFAULT_ID="DEFAULT_PAGINATION_ID"}var l=Number.MAX_SAFE_INTEGER,p=(c.prototype.transform=function(e,t){if(!(e instanceof Array)){var n=t.id||this.service.defaultId();return this.state[n]?this.state[n].slice:e}var i,a,s=t.remote,r=this.createInstance(e,t),o=r.id,p=r.itemsPerPage;if(this.service.register(r),!s&&e instanceof Array){if(p=+p||l,a=(i=(r.currentPage-1)*p)+p,this.stateIsIdentical(o,e,i,a))return this.state[o].slice;var c=e.slice(i,a);return this.saveState(o,e,c,i,a),this.service.change.emit(o),c}return this.saveState(o,e,e,i,a),e},c.prototype.createInstance=function(e,t){return{id:null!=t.id?t.id:this.service.defaultId(),itemsPerPage:+t.itemsPerPage||0,currentPage:+t.currentPage||1,totalItems:+t.totalItems||e.length,pageList:t.pageList||[10,20,30,50,100],remote:t.remote}},c.prototype.checkConfig=function(t){var e=["itemsPerPage","currentPage"].filter(function(e){return!(e in t)});if(0<e.length)throw new Error("PaginatePipe: Argument is missing the following required properties: "+e.join(", "))},c.prototype.saveState=function(e,t,n,i,a){this.state[e]={collection:t,size:t.length,slice:n,start:i,end:a}},c.prototype.stateIsIdentical=function(e,n,i,t){var a=this.state[e];return!!a&&a.size===n.length&&a.start===i&&a.end===t&&a.slice.every(function(e,t){return e===n[i+t]})},c.decorators=[{type:s.Pipe,args:[{name:"paginate",pure:!1}]}],c.ctorParameters=function(){return[{type:r,decorators:[{type:s.Optional}]}]},c);function c(e){this.service=e,this.state={},this.service||(this.service=new r)}function g(e){return!!e&&"false"!==e}var u=(Object.defineProperty(h.prototype,"directionLinks",{get:function(){return this._directionLinks},set:function(e){this._directionLinks=g(e)},enumerable:!0,configurable:!0}),Object.defineProperty(h.prototype,"autoHide",{get:function(){return this._autoHide},set:function(e){this._autoHide=g(e)},enumerable:!0,configurable:!0}),Object.defineProperty(h.prototype,"responsive",{get:function(){return this._responsive},set:function(e){this._responsive=g(e)},enumerable:!0,configurable:!0}),h.prototype.onMouseLeave=function(e){this.showPagesPanel=!1,this.paginationDirective.changeDetectorRef.detectChanges()},h.prototype.onMouseEnter=function(e){0!==this.paginationDirective.getTotalItems()&&(this.showPagesPanel=!0)},h.prototype.changePageSizeHandler=function(e,t){e.stopPropagation(),t!==this.paginationDirective.getPageSize()&&(this.showPagesPanel=!1,this.pageSizeChange.emit(t))},h.prototype.onPageNumberChanged=function(e,t){var n=e.target;t<Number(n.value)&&(n.value=t)},h.prototype.onPageNumberBlur=function(e){var t=e.target;Number(t.value)<1&&(t.value=1)},h.prototype.setPageList=function(e){this.paginationDirective.setPageList(e)},h.prototype["goto"]=function(e){var t=Number(e.target.value);t<1&&(t=1,e.target.value=1),this.paginationDirective.getCurrent()!==t&&this.paginationDirective["goto"](t)},h.decorators=[{type:s.Component,args:[{selector:"pagination-controls",template:'<pagination-template #p="paginationApi" [id]="id" [maxSize]="maxSize" (pageChange)="pageChange.emit($event)">\r\n    <div class="pagination-container">\r\n        <ng-content select=".pager-overlay-container"></ng-content>\r\n        <ul class="ngx-pagination pagination" role="navigation" [attr.aria-label]="screenReaderPaginationLabel"\r\n            style="position: relative;align-items: center;" [class.responsive]="responsive"\r\n            [class.pager-viewmode-default]="viewMode === \'default\'"\r\n            [class.pager-viewmode-simple]="viewMode === \'simple\'" *ngIf="!(autoHide && p.pages.length <= 1)"\r\n            [style.justify-content]="position === \'center\'?\'center\': \'start\'">\r\n            <ng-container *ngIf="viewMode === \'default\'">\r\n                <li class="pagination-message text-truncate d-flex" *ngIf="showPageInfo" style="min-width: 70px"\r\n                    [class.ml-auto]="position=== \'right\'" [class.flex-fill]="position=== \'right\'"\r\n                    [style.justify-content]="position === \'right\' ? \'right\': \'\'">\r\n                    <ng-content select=".pager-pos-right"></ng-content>\r\n                    <ng-content></ng-content>\r\n                    <div class="text-truncate ">\r\n                        <span class="pg-message-text">{{ \'pagination.totalinfo.firstText\' | locale}}</span>\r\n                        <b class="pg-message-total">{{ p.getTotalItems()}}</b>\r\n                        <span class="pg-message-text">{{ \'pagination.totalinfo.lastText\' | locale}}</span>\r\n                    </div>\r\n                </li>\r\n                \x3c!--每页记录数--\x3e\r\n                <li class="pagination-pagelist" *ngIf="showPageList">\r\n                    <div class="dropup dropdown-right pg-pagelist"\r\n                        [ngClass]="{\'pagelist-disabled\':p.getTotalItems()===0,\'show\': showPagesPanel}"\r\n                        (mouseenter)="onMouseEnter($event)" (mouseleave)="onMouseLeave($event)">\r\n                        <div class="pg-pagelist-info" #pglistinfo>\r\n                            <span class="pagelist-text">{{\'pagination.pagelist.firstText\' | locale}}</span><b\r\n                                class="cur-pagesize">{{p.getPageSize()}}</b><span\r\n                                class="pagelist-text">{{\'pagination.pagelist.lastText\' | locale}}</span><i\r\n                                class="f-icon f-icon-dropdown"></i>\r\n                        </div>\r\n                        <div class="dropdown-menu" [ngClass]="{\'show\': showPagesPanel}" style="margin-bottom: -1px;">\r\n                <li class="dropdown-item" [ngClass]="{\'active\':pagesize==p.getPageSize()}"\r\n                    *ngFor="let pagesize of p.getPageList()" (click)="changePageSizeHandler($event, pagesize)">\r\n                    <span>{{ pagesize }}</span>\r\n                </li>\r\n    </div>\r\n    </div>\r\n    </li>\r\n\r\n    \x3c!--首页--\x3e\r\n    <li class="page-item" [class.disabled]="p.isFirstPage()" *ngIf="directionLinks">\r\n        <a tabindex="0" *ngIf="1 < p.getCurrent()" (keyup.enter)="p.first($event)" (click)="p.first($event)"\r\n            [attr.aria-label]="previousLabel + \' \' + screenReaderPageLabel" class="page-link">\r\n            <span class="f-icon f-page-first"></span>\r\n        </a>\r\n        <span *ngIf="p.isFirstPage()" class="page-link">\r\n            <span class="f-icon f-page-first"></span>\r\n        </span>\r\n    </li>\r\n\r\n    \x3c!--上一页--\x3e\r\n    <li class="page-item" [class.disabled]="p.isFirstPage()" *ngIf="directionLinks">\r\n        <a class="page-link" tabindex="0" *ngIf="1 < p.getCurrent()" (keyup.enter)="p.previous()" (click)="p.previous()"\r\n            [attr.aria-label]="previousLabel + \' \' + screenReaderPageLabel">\r\n            <span class="f-icon f-page-pre"></span>\r\n        </a>\r\n        <span *ngIf="p.isFirstPage()" class="page-link">\r\n            <span class="f-icon f-page-pre"></span>\r\n        </span>\r\n    </li>\r\n\r\n\r\n\r\n    <ng-container *ngIf="showPageNumber">\r\n        \x3c!--页码--\x3e\r\n        <li class="page-item" [class.current]="p.getCurrent() === page.value" [class.ellipsis]="page.label === \'...\'"\r\n            *ngFor="let page of p.pages">\r\n            <a class="page-link" tabindex="0" (keyup.enter)="p.setCurrent(page.value)"\r\n                (click)="p.setCurrent(page.value)" *ngIf="p.getCurrent() !== page.value">\r\n                <span>{{ page.label }}</span>\r\n            </a>\r\n            <span class="page-link" *ngIf="p.getCurrent() === page.value">{{page.label }}</span>\r\n        </li>\r\n    </ng-container>\r\n    \x3c!--下一页--\x3e\r\n    <li class="page-item" [class.disabled]="p.isLastPage()" *ngIf="directionLinks">\r\n        <a class="page-link" tabindex="0" *ngIf="!p.isLastPage()" (keyup.enter)="p.next()" (click)="p.next()"\r\n            [attr.aria-label]="nextLabel + \' \' + screenReaderPageLabel">\r\n            <span class="f-icon f-page-next"></span>\r\n        </a>\r\n        <span *ngIf="p.isLastPage()" class="page-link">\r\n            <span class="f-icon f-page-next"></span>\r\n        </span>\r\n    </li>\r\n    \x3c!--末页--\x3e\r\n    <li class="page-item" [class.disabled]="p.isLastPage()" *ngIf="directionLinks">\r\n        <a class="page-link" tabindex="0" *ngIf="!p.isLastPage()" (keyup.enter)="p.last($event)"\r\n            (click)="p.last($event)" [attr.aria-label]="nextLabel + \' \' + screenReaderPageLabel">\r\n            <span class="f-icon f-page-last"></span>\r\n        </a>\r\n        <span *ngIf="p.isLastPage()" class="page-link">\r\n            <span class="f-icon f-page-last"></span>\r\n        </span>\r\n    </li>\r\n\r\n\r\n\r\n    <li class="page-goto-input d-flex flex-row" *ngIf="showGotoInput"\r\n        style="padding-left: 10px; white-space: nowrap;align-items: center;">\r\n        {{\'pagination.goto.prefix\' | locale}}\r\n\r\n        <div style="min-width: 40px;position: relative;height: 24px;margin: 0 3px;">\r\n            <label style="display: inline-block;font-size: inherit;line-height: normal;visibility: hidden;font-family: inherit;\r\n            padding: 0;">{{gotoinput.value}}</label>\r\n            <input #gotoinput class="form-control farris-gotopagenumber" value="1" type="number" min="1"\r\n                max="{{p.getLastPage()}}"\r\n                style="width: 100%;position: absolute;left: 0;top: 0;padding: 0;height: 100%;line-height: 24px;"\r\n                (input)="onPageNumberChanged($event, p.getLastPage())" [value]="p.getCurrent()"\r\n                (keyup.enter)="goto($event)" (blur)="onPageNumberBlur($event)">\r\n        </div>\r\n\r\n\r\n        {{\'pagination.goto.suffix\' | locale}}\r\n    </li>\r\n\r\n    <li class="pagination-message text-truncate d-flex flex-fill ml-3" *ngIf="showPageInfo && position===\'left\'">\r\n        <ng-content select=".pager-pos-left"></ng-content>\r\n    </li>\r\n\r\n    </ng-container>\r\n    <ng-container *ngIf="viewMode === \'simple\'">\r\n        <li class="page-item d-flex flex-fill">\r\n            <ng-content select=".simple-pager-extend-area"></ng-content>\r\n        </li>\r\n        \x3c!--首页--\x3e\r\n        <li class="page-item" [class.disabled]="p.isFirstPage()" *ngIf="directionLinks && showGoToFirst">\r\n            <a tabindex="0" *ngIf="1 < p.getCurrent()" (keyup.enter)="p.first($event)" (click)="p.first($event)"\r\n                [attr.aria-label]="previousLabel + \' \' + screenReaderPageLabel" class="page-link">\r\n                <span class="f-icon f-page-first"></span>\r\n            </a>\r\n            <span *ngIf="p.isFirstPage()" class="page-link">\r\n                <span class="f-icon f-page-first"></span>\r\n            </span>\r\n        </li>\r\n        \x3c!--上一页--\x3e\r\n        <li class="page-item" [class.disabled]="p.isFirstPage()" *ngIf="directionLinks">\r\n            <a class="page-link border-0" tabindex="0" *ngIf="1 < p.getCurrent()" (keyup.enter)="p.previous()"\r\n                (click)="p.previous()" [attr.aria-label]="previousLabel + \' \' + screenReaderPageLabel">\r\n                <span class="f-icon f-page-pre"></span>\r\n            </a>\r\n            <span *ngIf="p.isFirstPage()" class="page-link border-0">\r\n                <span class="f-icon f-page-pre"></span>\r\n            </span>\r\n        </li>\r\n\r\n        <li class="page-item">\r\n            <input id="farris-gotopagenumber" class="form-control farris-gotopagenumber" min="1"\r\n                max="{{p.getLastPage()}}" type="number" [ngModel]="p.getCurrent()"\r\n                (input)="onPageNumberChanged($event, p.getLastPage())" (keyup.enter)="p.goto($event.target.value)">\r\n        </li>\r\n        <li class="page-item page-separator" style="margin-left: 10px">\r\n            <span style="font-size: 15px; font-weight: 200;"> /</span>\r\n        </li>\r\n        <li class="page-item page-total" style="margin-left: 5px">\r\n            <span style="font-size: 16px; font-weight: 600;"> {{ p.getLastPage() }}</span>\r\n        </li>\r\n\r\n        \x3c!--下一页--\x3e\r\n        <li class="page-item" [class.disabled]="p.isLastPage()" *ngIf="directionLinks">\r\n            <a class="page-link border-0" tabindex="0" *ngIf="!p.isLastPage()" (keyup.enter)="p.next()"\r\n                (click)="p.next()" [attr.aria-label]="nextLabel + \' \' + screenReaderPageLabel">\r\n                <span class="f-icon f-page-next"></span>\r\n            </a>\r\n            <span *ngIf="p.isLastPage()" class="page-link border-0">\r\n                <span class="f-icon f-page-next"></span>\r\n            </span>\r\n        </li>\r\n        \x3c!--末页--\x3e\r\n        <li class="page-item" [class.disabled]="p.isLastPage()" *ngIf="directionLinks  && showGoToLast">\r\n            <a class="page-link" tabindex="0" *ngIf="!p.isLastPage()" (keyup.enter)="p.last($event)"\r\n                (click)="p.last($event)" [attr.aria-label]="nextLabel + \' \' + screenReaderPageLabel">\r\n                <span class="f-icon f-page-last"></span>\r\n            </a>\r\n            <span *ngIf="p.isLastPage()" class="page-link">\r\n                <span class="f-icon f-page-last"></span>\r\n            </span>\r\n        </li>\r\n    </ng-container>\r\n\r\n    </ul>\r\n    </div>\r\n</pagination-template>',changeDetection:s.ChangeDetectionStrategy.OnPush,encapsulation:s.ViewEncapsulation.None}]}],h.propDecorators={viewMode:[{type:s.Input}],id:[{type:s.Input}],maxSize:[{type:s.Input}],directionLinks:[{type:s.Input}],autoHide:[{type:s.Input}],responsive:[{type:s.Input}],previousLabel:[{type:s.Input}],nextLabel:[{type:s.Input}],screenReaderPaginationLabel:[{type:s.Input}],screenReaderPageLabel:[{type:s.Input}],screenReaderCurrentLabel:[{type:s.Input}],showPageList:[{type:s.Input}],showPageInfo:[{type:s.Input}],showPageNumber:[{type:s.Input}],showSelectedList:[{type:s.Input}],showGoToLast:[{type:s.Input}],showGoToFirst:[{type:s.Input}],showGotoInput:[{type:s.Input}],position:[{type:s.Input}],message:[{type:s.Input}],pageListFirstText:[{type:s.Input}],pageListLastText:[{type:s.Input}],pageChange:[{type:s.Output}],pageSizeChange:[{type:s.Output}],paginationDirective:[{type:s.ViewChild,args:["p"]}],focusPageSizeRef:[{type:s.ViewChild,args:["focusPageSize"]}],pglistinfo:[{type:s.ViewChild,args:["pglistinfo"]}]},h);function h(){this._directionLinks=!0,this._autoHide=!1,this._responsive=!1,this.mouseInSelectedList=!1,this.viewMode="default",this.maxSize=7,this.previousLabel="Previous",this.nextLabel="Next",this.screenReaderPaginationLabel="Pagination",this.screenReaderPageLabel="page",this.screenReaderCurrentLabel="You're on page",this.showPageList=!0,this.showPageInfo=!0,this.showPageNumber=!0,this.showSelectedList=!1,this.showGoToLast=!1,this.showGoToFirst=!1,this.showGotoInput=!1,this.position="right",this.message="每页 {0} 条记录，共 {1} 条记录",this.pageListFirstText="显示",this.pageListLastText="条",this.pageChange=new s.EventEmitter,this.pageSizeChange=new s.EventEmitter,this.showPagesPanel=!1}var f=(d.prototype.ngOnInit=function(){this.id===undefined&&(this.id=this.service.defaultId()),this.updatePageLinks()},d.prototype.ngOnChanges=function(e){this.updatePageLinks()},d.prototype.ngOnDestroy=function(){this.changeSub.unsubscribe(),this.service.removeInstance(this.id)},d.prototype.previous=function(){this.checkValidId(),this.setCurrent(this.getCurrent()-1)},d.prototype.next=function(){this.checkValidId(),this.setCurrent(this.getCurrent()+1)},d.prototype.first=function(e){e.stopPropagation(),this.checkValidId(),this.setCurrent(1)},d.prototype.last=function(e){e.stopPropagation(),this.checkValidId(),this.setCurrent(this.getLastPage())},d.prototype.isFirstPage=function(){return 1===this.getCurrent()},d.prototype.isLastPage=function(){return this.getLastPage()===this.getCurrent()},d.prototype.setCurrent=function(e,t,n){n&&n.stopPropagation(),t=t||this.getPageSize(),this.pageChange.emit({pageIndex:e,pageSize:t})},d.prototype.getCurrent=function(){return this.service.getCurrentPage(this.id)},d.prototype.setPageList=function(e){this.service.setPageList(this.id,e)},d.prototype.getLastPage=function(){var e=this.service.getInstance(this.id);return e.totalItems<1?1:Math.ceil(e.totalItems/e.itemsPerPage)},d.prototype.getTotalItems=function(){return this.service.getInstance(this.id).totalItems},d.prototype.getPageList=function(){return this.service.getInstance(this.id).pageList},d.prototype.getPageSize=function(){return this.service.getInstance(this.id).itemsPerPage},d.prototype["goto"]=function(e){this.setCurrent(e)},d.prototype.checkValidId=function(){null==this.service.getInstance(this.id).id&&console.warn('PaginationControlsDirective: the specified id "'+this.id+'" does not match any registered PaginationInstance')},d.prototype.updatePageLinks=function(){var e=this,t=this.service.getInstance(this.id),n=this.outOfBoundCorrection(t);n!==t.currentPage?setTimeout(function(){e.setCurrent(n),e.pages=e.createPageArray(t.currentPage,t.itemsPerPage,t.totalItems,e.maxSize)}):this.pages=this.createPageArray(t.currentPage,t.itemsPerPage,t.totalItems,this.maxSize),this.changeDetectorRef.markForCheck(),this.changeDetectorRef.detectChanges()},d.prototype.outOfBoundCorrection=function(e){var t=Math.ceil(e.totalItems/e.itemsPerPage);return t<e.currentPage&&0<t?t:e.currentPage<1?1:e.currentPage},d.prototype.createPageArray=function(e,t,n,i){i=+i;for(var a=[],s=Math.ceil(n/t),r=Math.ceil(i/2),o=e<=r,p=s-r<e,c=!o&&!p,l=i<s,g=1;g<=s&&g<=i;){var u=void 0,h=this.calculatePageNumber(g,e,i,s);u=l&&(2===g&&(c||p)||g===i-1&&(c||o))?"...":h,a.push({label:u,value:h}),g++}return a},d.prototype.calculatePageNumber=function(e,t,n,i){var a=Math.ceil(n/2);return e===n?i:1===e?e:n<i?i-a<t?i-n+e:a<t?t-a+e:e:e},d.decorators=[{type:s.Directive,args:[{selector:"pagination-template,[pagination-template]",exportAs:"paginationApi"}]}],d.ctorParameters=function(){return[{type:r,decorators:[{type:s.Optional}]},{type:s.ChangeDetectorRef},{type:s.Injector,decorators:[{type:s.Optional}]}]},d.propDecorators={id:[{type:s.Input}],maxSize:[{type:s.Input}],pageChange:[{type:s.Output}],pageSizeChange:[{type:s.Output}]},d);function d(e,t,n){var i=this;this.service=e,this.changeDetectorRef=t,this.injector=n,this.maxSize=7,this.pageChange=new s.EventEmitter,this.pageSizeChange=new s.EventEmitter,this.pages=[],this.service||(this.injector?this.service=this.injector.get(r):this.service=new r),this.changeSub=this.service.change.subscribe(function(e){i.id===e&&(i.updatePageLinks(),i.changeDetectorRef.markForCheck(),i.changeDetectorRef.detectChanges())})}var m=(Object.defineProperty(v.prototype,"slPosition",{get:function(){return"top"==this.position},enumerable:!0,configurable:!0}),v.prototype.ngOnInit=function(){},v.prototype.ngOnChanges=function(e){},v.prototype.onClose=function(e){e.stopPropagation(),this.close.emit()},v.prototype.onRemoveClick=function(e,t){e.stopPropagation(),this.remove.emit(t)},v.prototype.onClearClick=function(e){e.stopPropagation(),this.clear.emit()},v.prototype.onClick=function(e){return e.stopPropagation(),!1},v.decorators=[{type:s.Component,args:[{selector:"pagination-selected-list",template:'\r\n<div class="f-cmp-pager-selected-list-wrapper ">\r\n\t<div class="selected-list--content" (mouseleave)="onClose($event)" (click)="onClick($event)">\r\n\t\t<div class="selected-list--arrow"></div>\r\n\t\t<div class="selected-list--title">\r\n            <div class="btn-group">\r\n                <button class="btn btn-link" (click)="onClearClick($event)"> \r\n                    <i class="f-icon f-icon-remove"></i>\r\n                    <span class="btn-text">{{ \'datagrid.selectionData.clearAll\' | locale: \'清空\' }}</span>\r\n                </button>\r\n            </div>\r\n            <div class="selected-list--close"><span class="f-icon f-icon-close" (click)="onClose($event)"></span></div>\r\n        </div>\r\n        <div class="selected-list--main">\r\n            <ul class="selected-list">  \x3c!-- selected-list--wrap --\x3e\r\n                <li class="selected-list--item ng-star-inserted" *ngFor="let item of data" style="min-height: 35px;">\r\n\t\t\t\t\t<span class="f-icon f-icon-close-outline list-icon list-error" (click)="onRemoveClick($event, item.id)"></span>\r\n                    <div class="list-con" [innerHTML]="item.text"></div>\r\n                </li>\r\n                \r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n'}]}],v.ctorParameters=function(){return[]},v.propDecorators={data:[{type:s.Input}],position:[{type:s.Input}],close:[{type:s.Output}],remove:[{type:s.Output}],clear:[{type:s.Output}],slPosition:[{type:s.HostBinding,args:["class.pos-top"]}]},v);function v(){this.data=[],this.position="bottom",this.close=new s.EventEmitter,this.remove=new s.EventEmitter,this.clear=new s.EventEmitter}var P=(y.decorators=[{type:s.NgModule,args:[{imports:[n.CommonModule,t.FormsModule,i.FarrisCommonModule.forRoot(),a.LocaleModule],declarations:[p,u,f,m],providers:[r],exports:[p,u,f,m]}]}],y);function y(){}e.PaginationService=r,e.PaginationControlsComponent=u,e.PaginationControlsDirective=f,e.PaginatePipe=p,e.PaginationModule=P,e.PaginationSelectedListComponent=m,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=farris-ui-pagination.umd.min.js.map