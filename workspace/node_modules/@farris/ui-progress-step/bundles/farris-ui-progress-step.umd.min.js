!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@farris/ui-locale")):"function"==typeof define&&define.amd?define("@farris/ui-progress-step",["exports","@angular/core","@angular/common","@farris/ui-locale"],t):t((e.farris=e.farris||{},e.farris["ui-progress-step"]={}),e.ng.core,e.ng.common,e.uiLocale)}(this,function(e,t,s,r){"use strict";var i=(p.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],p.ctorParameters=function(){return[]},p.ngInjectableDef=t.defineInjectable({factory:function(){return new p},token:p,providedIn:"root"}),p);function p(){}var n=(o.decorators=[{type:t.Directive,args:[{selector:"[progressStepItem]"}]}],o.ctorParameters=function(){return[{type:t.TemplateRef}]},o);function o(e){this.template=e}var l=(a.decorators=[{type:t.Directive,args:[{selector:"[progressStepExtend]"}]}],a.ctorParameters=function(){return[{type:t.TemplateRef}]},a);function a(e){this.template=e}var c=(Object.defineProperty(g.prototype,"subStepData",{get:function(){return this._subStepData},set:function(e){this._subStepData=e},enumerable:!0,configurable:!0}),g.prototype.ngOnInit=function(){},Object.defineProperty(g.prototype,"stepData",{get:function(){return this._stepData},set:function(e){e&&(this.steps=null,this.stepInit(e))},enumerable:!0,configurable:!0}),g.prototype.ngOnChanges=function(e){var t=this;if(e.steps||e.currentId){if(!this.steps||this.stepData)return;this.steps.forEach(function(e){return e.status=""}),this.stepMessages=this.steps.filter(function(e){return!e.hidden});var s=this.stepMessages.findIndex(function(e){return e.id===t.currentId});this.activeIndex=-1===s?0:s}},g.prototype.listClick=function(e,t){this.clickable&&this.stepClick.emit({step:e,index:t})},g.prototype.goStep=function(s){this.storedIndexState?this.activeIndex==s?this.currentIndex=null:this.currentIndex=s:(this.stepMessages.forEach(function(e,t){e.status=t<s?"finish":s<t?"":"active"}),this.activeIndex=s)},g.prototype.nextStep=function(){this.storedIndexState&&this.currentIndex<this.stepMessages.length-1&&this.currentIndex++,this.activeIndex<this.stepMessages.length-1&&(this.stepMessages[this.activeIndex].status="finish",this.stepMessages[this.activeIndex+1].status="active",this.activeIndex++,this.storedIndexState&&(this.currentIndex=this.activeIndex))},g.prototype.prevStep=function(){0<this.activeIndex&&(this.stepMessages[this.activeIndex].status="",this.stepMessages[this.activeIndex-1].status="active",this.activeIndex--,this.storedIndexState&&(this.currentIndex=this.activeIndex))},g.prototype.getCurrentStepIndex=function(){return this.activeIndex},g.prototype.stepInit=function(e){e.stepMessages&&e.stepMessages.length&&(e.stepMessages.forEach(function(e){e.status=""}),this.stepMessages=e.stepMessages.filter(function(e){return!e.hidden})),this.activeIndex=e.activeIndex,this.storedIndexState&&(this.currentIndex=this.activeIndex)},g.prototype.setProgressData=function(e){e&&this.stepInit(e)},g.prototype.setActiveIndex=function(e){var t=0<=e&&e<this.stepMessages.length?e:0;this.activeIndex=t},g.decorators=[{type:t.Component,args:[{selector:"farris-progress-step",template:'<div class="f-progress-step">\r\n    <ul class="{{stepsCls}}"\r\n    [ngClass]="{\'f-progress-step-list\':direction ===\'horizontal\', \'f-progress-step-list-block\': direction ===\'vertical\',\'f-progress-step-horizontal-fill\':direction===\'horizontal\' && fill,\'f-progress-step-vertical-fill\':direction===\'vertical\' && fill,\'f-progress-step-has-extend\':progressStepExtendTmpl}"\r\n    [ngStyle]="{\'height\': direction ===\'vertical\'? fHeight +\'px\' :\'\'}"\r\n    >\r\n        <ng-container *ngFor="let step of stepMessages;let i = index;">\r\n            <li [ngStyle]="stepStyle" class="step {{step.status? step.status:(i < activeIndex ? \'finish\': \'\')}}  {{step.hasOwnProperty(\'class\')?step.class:\'\'}}" *ngIf="!step.hidden" [ngClass]="{\'active\': i == activeIndex,\'clickable\':clickable,\'click-disable\':step.clickDisable,\'current\':i == currentIndex,\'step-has-extend\':progressStepExtendTmpl}" (click)="listClick(step,i)">\r\n                <ng-container *ngIf="!progressStepTemplate;else stepElement">\r\n                    <div class="f-progressstep-row {{step.status? \'step-\'+ step.status:(i < activeIndex ? \'step-finish\': \'\')}}" [ngClass]="{\'step-active\': i == activeIndex,\'step-current\':i == currentIndex}" *ngIf="!step[\'subSteps\'] || !step[\'subSteps\'].length">\r\n                        <div class="f-progress-step-content">\r\n                            <span class="step-icon" [ngClass]="step.icon" *ngIf="step.icon;else defaultIcon" ></span>\r\n                            <ng-template #defaultIcon>\r\n                                    <span class="step-icon" *ngIf="i >= activeIndex || i == currentIndex; else stepSuccess">{{i+1}}</span>\r\n                                    <ng-template #stepSuccess>\r\n                                        <span class="step-icon step-success k-icon k-i-check" [ngClass]="step.icon"></span>\r\n                                    </ng-template>\r\n                            </ng-template>\r\n            \r\n                            <div class="f-progress-step-title">  \r\n                                <p class="step-name" [ngClass]="{\'step-name-success\': i <= activeIndex}">{{step.title}}</p>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                        <div class="f-progress-step-line" [ngClass]="{\'f-progress-step-line-success\': i == activeIndex}"  *ngIf="i !== (stepMessages.length-1)">\r\n                            <span class="triangle" [ngClass]="{\'f-progress-step-vertical-triangle\': direction ===\'vertical\'}"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class="f-progressstep-row f-progressstep-row-multi" *ngIf="step[\'subSteps\'] && step[\'subSteps\'].length">\r\n                        <div class="f-step-multi-item" \r\n                        *ngFor="let subStep of step.subSteps;let subIndex = index"  \r\n                        [ngClass]="{\'f-step-multi-item-hidden\': subStep.visible === false,\r\n                        \'f-step-multi-item-active\':(activeIndex == i && subStepData && subStepData[step.id] == subIndex),\r\n                        \'f-step-multi-item-finish\':(activeIndex > i && subStepData && subStepData[step.id] == subIndex)}"\r\n                        >\r\n                            <div class="f-progress-step-content f-progressstep-multi-item-content">\r\n                                <span class="step-icon" \r\n                                *ngIf="(activeIndex <= i || i == currentIndex); else stepSuccess"\r\n                                >{{i+1}}</span>\r\n                                <ng-template #stepSuccess>\r\n                                    <span class="step-icon step-icon-done k-icon k-i-check" *ngIf="subStepData && subStepData[step.id] == subIndex;else doneTemplate"></span>\r\n                                    <ng-template #doneTemplate>\r\n                                        <span class="step-icon k-icon k-i-check"></span>\r\n                                    </ng-template>\r\n                                </ng-template>\r\n\r\n                                <div class="f-progress-step-title">\r\n                                    <p class="step-name">{{subStep.title}} </p>\r\n                                </div>\r\n                            </div>\r\n                            <div class="f-progress-step-line"  [ngClass]="{\'f-progress-step-line-success\': (activeIndex == i && subStep.active)}" *ngIf="i !== (step.length-1)"><span class="triangle"></span></div>\r\n                        </div>\r\n                    </div>\r\n                    <ng-container [ngTemplateOutlet]="progressStepExtendTmpl" [ngTemplateOutletContext]="{ step: step, index: i,length: stepMessages.length, activeIndex: activeIndex, direction: direction}"></ng-container>            \r\n                </ng-container>\r\n                \r\n                <ng-template #stepElement>\r\n                    <ng-container [ngTemplateOutlet]="progressStepTemplate" [ngTemplateOutletContext]="{ step: step, index: i,length: stepMessages.length, activeIndex: activeIndex, direction: direction}"></ng-container>\r\n                </ng-template>             \r\n                \r\n            </li>\r\n        </ng-container>\r\n    </ul>\r\n    <div *ngIf="!stepMessages || !stepMessages.length" class="f-progress-step-empty">{{ \'progressStep.empty\' | locale }}</div>\r\n    \x3c!-- <button (click)="nextStep()" [disabled]="activeIndex >= (stepMessages.length-1)">下一步</button>\r\n    <button (click)="prevStep()" [disabled]="activeIndex <= 0">上一步</button> --\x3e\r\n</div>',styles:[".f-progress-step .f-progress-step-list{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-align:center;align-items:center}.f-progress-step .step{display:inline-block}.f-progress-step .step .f-progressstep-row{display:-webkit-box;display:flex;position:relative;padding-right:.4375rem;padding-bottom:.9375rem}.f-progress-step .step .f-progressstep-row .f-progress-step-content{display:inline-block}.f-progress-step .step .f-progressstep-row .f-progress-step-content .step-icon{display:inline-block;width:1.875rem;height:1.875rem;margin-right:.5rem;margin-left:.5rem;line-height:1.875rem;border-radius:100%;font-size:.75rem;text-align:center;color:#fff;vertical-align:middle}.f-progress-step .step .f-progressstep-row .f-progress-step-content .f-progress-step-title{display:inline-block;vertical-align:middle}.f-progress-step .step .f-progressstep-row .f-progress-step-content .f-progress-step-title .step-message,.f-progress-step .step .f-progressstep-row .f-progress-step-content .f-progress-step-title .step-name{margin-bottom:0}.f-progress-step .step .f-progressstep-row .f-progress-step-content .f-progress-step-title .step-name{font-size:.875rem;color:#8c8c8c;line-height:1.25rem;padding-right:.625rem}.f-progress-step .step .f-progressstep-row .f-progress-step-content .f-progress-step-title .step-name.step-name-success{color:#000;opacity:.85}.f-progress-step .step .f-progressstep-row .f-progress-step-line{-webkit-box-flex:1;flex:1 1 auto;position:relative;display:-webkit-inline-box;display:inline-flex;min-width:3.75rem;vertical-align:middle}.f-progress-step .step .f-progressstep-row .f-progress-step-line::after{content:'';left:0;height:.125rem;overflow:hidden;position:absolute;right:.625rem;top:50%;margin-top:-.0625rem}.f-progress-step .step .f-progressstep-row .f-progress-step-line .triangle{position:absolute;right:0;top:50%;display:inline-block;width:.4375rem;height:.4375rem;margin-top:-.21875rem;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.f-progress-step .f-progress-step-list-block .step{display:block}.f-progress-step .f-progress-step-list-block .step .f-progressstep-row{padding:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.f-progress-step .f-progress-step-list-block .step .f-progressstep-row .f-progress-step-line{-webkit-box-flex:1;flex:1 1 auto;width:.625rem;min-width:.625rem;min-height:2.5rem;margin:.5rem 0 1.25rem 1.375rem}.f-progress-step .f-progress-step-list-block .step .f-progressstep-row .f-progress-step-line::after{content:'';border-top:0}.f-progress-step .f-progress-step-list-block .step .f-progressstep-row .f-progress-step-line .triangle{top:auto;left:-.3125rem;bottom:-.5rem;border-top:0}.f-progress-step .f-progress-step-list-block .step .f-progressstep-row .f-progress-step-line .f-progress-step-title .step-name{padding-right:.875rem}.f-progress-step .f-progress-step-horizontal-fill{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;flex-wrap:wrap}.f-progress-step .f-progress-step-horizontal-fill .step{-webkit-box-flex:1;flex:1 1 auto}.f-progress-step .f-progress-step-vertical-fill{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;align-content:space-between}.f-progress-step .f-progress-step-vertical-fill .step{display:-webkit-box;display:flex;-webkit-box-flex:1;flex:1 1 auto}.f-progress-step .f-progress-step-vertical-fill .step .f-progressstep-row{-webkit-box-flex:1;flex:1 1 auto;display:-webkit-box;display:flex}.f-progress-step li.clickable{cursor:pointer}.f-progress-step li.click-disable{cursor:not-allowed}.f-progress-step .f-progress-step-empty{color:#000;opacity:.65;font-size:.875rem}.f-progress-step .f-progressstep-row-multi{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:left;align-items:left}.f-progress-step .f-progressstep-row-multi .f-progressstep-multi-item-content{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-align:center;align-items:center;cursor:pointer}.f-progress-step .f-progressstep-row-multi .f-step-multi-item{position:relative;padding-right:.4375rem;padding-bottom:.9375rem}.f-progress-step .f-progressstep-row-multi .f-step-multi-item:last-child{padding-bottom:0}.f-progress-step .f-progressstep-row-multi .f-step-multi-item.f-step-multi-item-active .f-progress-step-title .step-name,.f-progress-step .f-progressstep-row-multi .f-step-multi-item.f-step-multi-item-finish .f-progress-step-title .step-name{color:rgba(0,0,0,.85)!important}.f-progress-step .f-progress-step-list-block .step .f-progressstep-row.f-progressstep-row-multi{-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row}.f-progress-step .f-progress-step-list-block .step .f-progressstep-row.f-progressstep-row-multi .f-step-multi-item{padding:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.f-progress-step .f-progress-step-list-block .step .f-progressstep-row.f-progressstep-row-multi .f-step-multi-item .f-progress-step-line{display:block}"]}]}],g.ctorParameters=function(){return[]},g.propDecorators={progressStepTemplate:[{type:t.ContentChild,args:[n,{read:t.TemplateRef}]}],progressStepExtendTmpl:[{type:t.ContentChild,args:[l,{read:t.TemplateRef}]}],direction:[{type:t.Input}],fill:[{type:t.Input}],clickable:[{type:t.Input}],stepsCls:[{type:t.Input}],fHeight:[{type:t.Input}],stepStyle:[{type:t.Input}],stepClick:[{type:t.Output,args:["stepClick"]}],steps:[{type:t.Input}],currentId:[{type:t.Input}],storedIndexState:[{type:t.Input}],subStepData:[{type:t.Input}],stepData:[{type:t.Input}]},g);function g(){this.direction="horizontal",this.fill=!1,this.clickable=!1,this.stepsCls="",this.stepClick=new t.EventEmitter,this.storedIndexState=!1,this.activeIndex=0}var f=(d.decorators=[{type:t.NgModule,args:[{declarations:[c,n,l],imports:[s.CommonModule,r.LocaleModule.forRoot()],exports:[c,n,l]}]}],d);function d(){}e.ProgressStepService=i,e.ProgressStepItemTemplateDirective=n,e.ProgressStepExtendTemplateDirective=l,e.ProgressStepComponent=c,e.ProgressStepModule=f,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=farris-ui-progress-step.umd.min.js.map