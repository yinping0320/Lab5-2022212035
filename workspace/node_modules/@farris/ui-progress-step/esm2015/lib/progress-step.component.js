/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, Directive, TemplateRef, ContentChild, EventEmitter, } from "@angular/core";
export class ProgressStepItemTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
ProgressStepItemTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: "[progressStepItem]",
            },] }
];
/** @nocollapse */
ProgressStepItemTemplateDirective.ctorParameters = () => [
    { type: TemplateRef }
];
if (false) {
    /** @type {?} */
    ProgressStepItemTemplateDirective.prototype.template;
}
export class ProgressStepExtendTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
ProgressStepExtendTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: "[progressStepExtend]",
            },] }
];
/** @nocollapse */
ProgressStepExtendTemplateDirective.ctorParameters = () => [
    { type: TemplateRef }
];
if (false) {
    /** @type {?} */
    ProgressStepExtendTemplateDirective.prototype.template;
}
/**
 * @record
 */
export function stepMessage() { }
if (false) {
    /** @type {?} */
    stepMessage.prototype.id;
    /** @type {?} */
    stepMessage.prototype.title;
    /** @type {?|undefined} */
    stepMessage.prototype.icon;
    /** @type {?|undefined} */
    stepMessage.prototype.status;
    /** @type {?|undefined} */
    stepMessage.prototype.clickDisable;
    /** @type {?|undefined} */
    stepMessage.prototype.hidden;
    /** @type {?|undefined} */
    stepMessage.prototype.class;
}
/**
 * @record
 */
export function progressData() { }
if (false) {
    /** @type {?} */
    progressData.prototype.activeIndex;
    /** @type {?} */
    progressData.prototype.stepMessages;
}
export class ProgressStepComponent {
    constructor() {
        //进度条数据
        // @Input() stepData:progressData;
        /**
         * 横向horizontal、竖向排列vertical
         */
        this.direction = "horizontal";
        /**
         * 是否铺满
         */
        this.fill = false;
        /**
         * 是否支持点击
         */
        this.clickable = false;
        // 步骤条整体样式
        this.stepsCls = "";
        this.stepClick = new EventEmitter();
        this.storedIndexState = false;
        /**
         * 记录当前步骤所在的位置，从0开始
         */
        this.activeIndex = 0;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set subStepData(value) {
        this._subStepData = value;
    }
    /**
     * @return {?}
     */
    get subStepData() {
        return this._subStepData;
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @param {?} value
     * @return {?}
     */
    set stepData(value) {
        if (value) {
            // 二选一属性，重置
            this.steps = null;
            this.stepInit(value);
        }
    }
    /**
     * @return {?}
     */
    get stepData() {
        return this._stepData;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes["steps"] || changes["currentId"]) {
            // steps没有值或者stepData有值，都不处理，这两个属性对用户是二选一
            if (!this.steps || this.stepData) {
                return;
            }
            this.steps.forEach((/**
             * @param {?} item
             * @return {?}
             */
            (item) => (item.status = "")));
            this.stepMessages = this.steps.filter((/**
             * @param {?} item
             * @return {?}
             */
            (item) => !item.hidden));
            /** @type {?} */
            let index = this.stepMessages.findIndex((/**
             * @param {?} item
             * @return {?}
             */
            (item) => item.id === this.currentId));
            this.activeIndex = index === -1 ? 0 : index;
        }
    }
    /**
     * 点击某一步
     * @param {?} step
     * @param {?} index
     * @return {?}
     */
    listClick(step, index) {
        if (this.clickable) {
            this.stepClick.emit({ "step": step, "index": index });
        }
    }
    /**
     * @param {?} index
     * @return {?}
     */
    goStep(index) {
        if (this.storedIndexState) {
            if (this.activeIndex == index) {
                this.currentIndex = null;
            }
            else {
                this.currentIndex = index;
            }
        }
        else {
            this.stepMessages.forEach((/**
             * @param {?} step
             * @param {?} i
             * @return {?}
             */
            (step, i) => {
                if (i < index) {
                    step.status = "finish";
                }
                else if (i > index) {
                    step.status = "";
                }
                else {
                    step.status = "active";
                }
            }));
            this.activeIndex = index;
        }
    }
    /**
     * 下一步
     * @return {?}
     */
    nextStep() {
        if (this.storedIndexState &&
            this.currentIndex < this.stepMessages.length - 1) {
            this.currentIndex++;
        }
        if (this.activeIndex < this.stepMessages.length - 1) {
            this.stepMessages[this.activeIndex].status = "finish";
            this.stepMessages[this.activeIndex + 1].status = "active";
            this.activeIndex++;
            if (this.storedIndexState) {
                this.currentIndex = this.activeIndex;
            }
        }
        //return this.activeIndex;
    }
    /**
     * 上一步
     * @return {?}
     */
    prevStep() {
        // if(this.storedIndexState && this.currentIndex > 0){
        //   this.currentIndex--;
        // }
        if (this.activeIndex > 0) {
            // else if(this.activeIndex > 0 && !this.storedIndexState){
            this.stepMessages[this.activeIndex].status = "";
            this.stepMessages[this.activeIndex - 1].status = "active";
            this.activeIndex--;
            if (this.storedIndexState) {
                this.currentIndex = this.activeIndex;
            }
        }
        //return this.activeIndex;
    }
    /**
     * @return {?}
     */
    getCurrentStepIndex() {
        return this.activeIndex;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    stepInit(data) {
        if (data["stepMessages"] && data["stepMessages"].length) {
            data["stepMessages"].forEach((/**
             * @param {?} step
             * @return {?}
             */
            (step) => {
                //if(typeof step.status === 'undefined'){
                step.status = "";
                //}
            }));
            this.stepMessages = data["stepMessages"].filter((/**
             * @param {?} step
             * @return {?}
             */
            (step) => {
                return !step.hidden;
            }));
        }
        this.activeIndex = data["activeIndex"];
        if (this.storedIndexState) {
            this.currentIndex = this.activeIndex;
        }
    }
    /**
     * @param {?} progressData
     * @return {?}
     */
    setProgressData(progressData) {
        if (progressData) {
            //this.stepData = progressData;
            this.stepInit(progressData);
        }
    }
    /**
     * @param {?} num
     * @return {?}
     */
    setActiveIndex(num) {
        /** @type {?} */
        let activeNum = num >= 0 && num < this.stepMessages.length ? num : 0;
        this.activeIndex = activeNum;
    }
}
ProgressStepComponent.decorators = [
    { type: Component, args: [{
                selector: "farris-progress-step",
                template: "<div class=\"f-progress-step\">\r\n    <ul class=\"{{stepsCls}}\"\r\n    [ngClass]=\"{'f-progress-step-list':direction ==='horizontal', 'f-progress-step-list-block': direction ==='vertical','f-progress-step-horizontal-fill':direction==='horizontal' && fill,'f-progress-step-vertical-fill':direction==='vertical' && fill,'f-progress-step-has-extend':progressStepExtendTmpl}\"\r\n    [ngStyle]=\"{'height': direction ==='vertical'? fHeight +'px' :''}\"\r\n    >\r\n        <ng-container *ngFor=\"let step of stepMessages;let i = index;\">\r\n            <li [ngStyle]=\"stepStyle\" class=\"step {{step.status? step.status:(i < activeIndex ? 'finish': '')}}  {{step.hasOwnProperty('class')?step.class:''}}\" *ngIf=\"!step.hidden\" [ngClass]=\"{'active': i == activeIndex,'clickable':clickable,'click-disable':step.clickDisable,'current':i == currentIndex,'step-has-extend':progressStepExtendTmpl}\" (click)=\"listClick(step,i)\">\r\n                <ng-container *ngIf=\"!progressStepTemplate;else stepElement\">\r\n                    <div class=\"f-progressstep-row {{step.status? 'step-'+ step.status:(i < activeIndex ? 'step-finish': '')}}\" [ngClass]=\"{'step-active': i == activeIndex,'step-current':i == currentIndex}\" *ngIf=\"!step['subSteps'] || !step['subSteps'].length\">\r\n                        <div class=\"f-progress-step-content\">\r\n                            <span class=\"step-icon\" [ngClass]=\"step.icon\" *ngIf=\"step.icon;else defaultIcon\" ></span>\r\n                            <ng-template #defaultIcon>\r\n                                    <span class=\"step-icon\" *ngIf=\"i >= activeIndex || i == currentIndex; else stepSuccess\">{{i+1}}</span>\r\n                                    <ng-template #stepSuccess>\r\n                                        <span class=\"step-icon step-success k-icon k-i-check\" [ngClass]=\"step.icon\"></span>\r\n                                    </ng-template>\r\n                            </ng-template>\r\n            \r\n                            <div class=\"f-progress-step-title\">  \r\n                                <p class=\"step-name\" [ngClass]=\"{'step-name-success': i <= activeIndex}\">{{step.title}}</p>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                        <div class=\"f-progress-step-line\" [ngClass]=\"{'f-progress-step-line-success': i == activeIndex}\"  *ngIf=\"i !== (stepMessages.length-1)\">\r\n                            <span class=\"triangle\" [ngClass]=\"{'f-progress-step-vertical-triangle': direction ==='vertical'}\"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"f-progressstep-row f-progressstep-row-multi\" *ngIf=\"step['subSteps'] && step['subSteps'].length\">\r\n                        <div class=\"f-step-multi-item\" \r\n                        *ngFor=\"let subStep of step.subSteps;let subIndex = index\"  \r\n                        [ngClass]=\"{'f-step-multi-item-hidden': subStep.visible === false,\r\n                        'f-step-multi-item-active':(activeIndex == i && subStepData && subStepData[step.id] == subIndex),\r\n                        'f-step-multi-item-finish':(activeIndex > i && subStepData && subStepData[step.id] == subIndex)}\"\r\n                        >\r\n                            <div class=\"f-progress-step-content f-progressstep-multi-item-content\">\r\n                                <span class=\"step-icon\" \r\n                                *ngIf=\"(activeIndex <= i || i == currentIndex); else stepSuccess\"\r\n                                >{{i+1}}</span>\r\n                                <ng-template #stepSuccess>\r\n                                    <span class=\"step-icon step-icon-done k-icon k-i-check\" *ngIf=\"subStepData && subStepData[step.id] == subIndex;else doneTemplate\"></span>\r\n                                    <ng-template #doneTemplate>\r\n                                        <span class=\"step-icon k-icon k-i-check\"></span>\r\n                                    </ng-template>\r\n                                </ng-template>\r\n\r\n                                <div class=\"f-progress-step-title\">\r\n                                    <p class=\"step-name\">{{subStep.title}} </p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"f-progress-step-line\"  [ngClass]=\"{'f-progress-step-line-success': (activeIndex == i && subStep.active)}\" *ngIf=\"i !== (step.length-1)\"><span class=\"triangle\"></span></div>\r\n                        </div>\r\n                    </div>\r\n                    <ng-container [ngTemplateOutlet]=\"progressStepExtendTmpl\" [ngTemplateOutletContext]=\"{ step: step, index: i,length: stepMessages.length, activeIndex: activeIndex, direction: direction}\"></ng-container>            \r\n                </ng-container>\r\n                \r\n                <ng-template #stepElement>\r\n                    <ng-container [ngTemplateOutlet]=\"progressStepTemplate\" [ngTemplateOutletContext]=\"{ step: step, index: i,length: stepMessages.length, activeIndex: activeIndex, direction: direction}\"></ng-container>\r\n                </ng-template>             \r\n                \r\n            </li>\r\n        </ng-container>\r\n    </ul>\r\n    <div *ngIf=\"!stepMessages || !stepMessages.length\" class=\"f-progress-step-empty\">{{ 'progressStep.empty' | locale }}</div>\r\n    <!-- <button (click)=\"nextStep()\" [disabled]=\"activeIndex >= (stepMessages.length-1)\">\u4E0B\u4E00\u6B65</button>\r\n    <button (click)=\"prevStep()\" [disabled]=\"activeIndex <= 0\">\u4E0A\u4E00\u6B65</button> -->\r\n</div>",
                styles: [".f-progress-step .f-progress-step-list{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-align:center;align-items:center}.f-progress-step .step{display:inline-block}.f-progress-step .step .f-progressstep-row{display:-webkit-box;display:flex;position:relative;padding-right:.4375rem;padding-bottom:.9375rem}.f-progress-step .step .f-progressstep-row .f-progress-step-content{display:inline-block}.f-progress-step .step .f-progressstep-row .f-progress-step-content .step-icon{display:inline-block;width:1.875rem;height:1.875rem;margin-right:.5rem;margin-left:.5rem;line-height:1.875rem;border-radius:100%;font-size:.75rem;text-align:center;color:#fff;vertical-align:middle}.f-progress-step .step .f-progressstep-row .f-progress-step-content .f-progress-step-title{display:inline-block;vertical-align:middle}.f-progress-step .step .f-progressstep-row .f-progress-step-content .f-progress-step-title .step-message,.f-progress-step .step .f-progressstep-row .f-progress-step-content .f-progress-step-title .step-name{margin-bottom:0}.f-progress-step .step .f-progressstep-row .f-progress-step-content .f-progress-step-title .step-name{font-size:.875rem;color:#8c8c8c;line-height:1.25rem;padding-right:.625rem}.f-progress-step .step .f-progressstep-row .f-progress-step-content .f-progress-step-title .step-name.step-name-success{color:#000;opacity:.85}.f-progress-step .step .f-progressstep-row .f-progress-step-line{-webkit-box-flex:1;flex:1 1 auto;position:relative;display:-webkit-inline-box;display:inline-flex;min-width:3.75rem;vertical-align:middle}.f-progress-step .step .f-progressstep-row .f-progress-step-line::after{content:'';left:0;height:.125rem;overflow:hidden;position:absolute;right:.625rem;top:50%;margin-top:-.0625rem}.f-progress-step .step .f-progressstep-row .f-progress-step-line .triangle{position:absolute;right:0;top:50%;display:inline-block;width:.4375rem;height:.4375rem;margin-top:-.21875rem;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.f-progress-step .f-progress-step-list-block .step{display:block}.f-progress-step .f-progress-step-list-block .step .f-progressstep-row{padding:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.f-progress-step .f-progress-step-list-block .step .f-progressstep-row .f-progress-step-line{-webkit-box-flex:1;flex:1 1 auto;width:.625rem;min-width:.625rem;min-height:2.5rem;margin:.5rem 0 1.25rem 1.375rem}.f-progress-step .f-progress-step-list-block .step .f-progressstep-row .f-progress-step-line::after{content:'';border-top:0}.f-progress-step .f-progress-step-list-block .step .f-progressstep-row .f-progress-step-line .triangle{top:auto;left:-.3125rem;bottom:-.5rem;border-top:0}.f-progress-step .f-progress-step-list-block .step .f-progressstep-row .f-progress-step-line .f-progress-step-title .step-name{padding-right:.875rem}.f-progress-step .f-progress-step-horizontal-fill{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;flex-wrap:wrap}.f-progress-step .f-progress-step-horizontal-fill .step{-webkit-box-flex:1;flex:1 1 auto}.f-progress-step .f-progress-step-vertical-fill{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;align-content:space-between}.f-progress-step .f-progress-step-vertical-fill .step{display:-webkit-box;display:flex;-webkit-box-flex:1;flex:1 1 auto}.f-progress-step .f-progress-step-vertical-fill .step .f-progressstep-row{-webkit-box-flex:1;flex:1 1 auto;display:-webkit-box;display:flex}.f-progress-step li.clickable{cursor:pointer}.f-progress-step li.click-disable{cursor:not-allowed}.f-progress-step .f-progress-step-empty{color:#000;opacity:.65;font-size:.875rem}.f-progress-step .f-progressstep-row-multi{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:left;align-items:left}.f-progress-step .f-progressstep-row-multi .f-progressstep-multi-item-content{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-align:center;align-items:center;cursor:pointer}.f-progress-step .f-progressstep-row-multi .f-step-multi-item{position:relative;padding-right:.4375rem;padding-bottom:.9375rem}.f-progress-step .f-progressstep-row-multi .f-step-multi-item:last-child{padding-bottom:0}.f-progress-step .f-progressstep-row-multi .f-step-multi-item.f-step-multi-item-active .f-progress-step-title .step-name,.f-progress-step .f-progressstep-row-multi .f-step-multi-item.f-step-multi-item-finish .f-progress-step-title .step-name{color:rgba(0,0,0,.85)!important}.f-progress-step .f-progress-step-list-block .step .f-progressstep-row.f-progressstep-row-multi{-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row}.f-progress-step .f-progress-step-list-block .step .f-progressstep-row.f-progressstep-row-multi .f-step-multi-item{padding:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.f-progress-step .f-progress-step-list-block .step .f-progressstep-row.f-progressstep-row-multi .f-step-multi-item .f-progress-step-line{display:block}"]
            }] }
];
/** @nocollapse */
ProgressStepComponent.ctorParameters = () => [];
ProgressStepComponent.propDecorators = {
    progressStepTemplate: [{ type: ContentChild, args: [ProgressStepItemTemplateDirective, { read: TemplateRef },] }],
    progressStepExtendTmpl: [{ type: ContentChild, args: [ProgressStepExtendTemplateDirective, { read: TemplateRef },] }],
    direction: [{ type: Input }],
    fill: [{ type: Input }],
    clickable: [{ type: Input }],
    stepsCls: [{ type: Input }],
    fHeight: [{ type: Input }],
    stepStyle: [{ type: Input }],
    stepClick: [{ type: Output, args: ["stepClick",] }],
    steps: [{ type: Input }],
    currentId: [{ type: Input }],
    storedIndexState: [{ type: Input }],
    subStepData: [{ type: Input }],
    stepData: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ProgressStepComponent.prototype.progressStepTemplate;
    /** @type {?} */
    ProgressStepComponent.prototype.progressStepExtendTmpl;
    /**
     * 横向horizontal、竖向排列vertical
     * @type {?}
     */
    ProgressStepComponent.prototype.direction;
    /**
     * 是否铺满
     * @type {?}
     */
    ProgressStepComponent.prototype.fill;
    /**
     * 是否支持点击
     * @type {?}
     */
    ProgressStepComponent.prototype.clickable;
    /** @type {?} */
    ProgressStepComponent.prototype.stepsCls;
    /** @type {?} */
    ProgressStepComponent.prototype.fHeight;
    /** @type {?} */
    ProgressStepComponent.prototype.stepStyle;
    /** @type {?} */
    ProgressStepComponent.prototype.stepClick;
    /**
     * steps与stepData，选择一个使用
     * 指定步骤条数据，是数组。常用在写自定义模版的地方。
     * [{id:string,title:string,icon?string,hidden?boolean}]
     * @type {?}
     */
    ProgressStepComponent.prototype.steps;
    /**
     * 指定当前步骤的数据Id
     * @type {?}
     */
    ProgressStepComponent.prototype.currentId;
    /** @type {?} */
    ProgressStepComponent.prototype.storedIndexState;
    /**
     * 指定子项数据中，哪个是活动的
     * {子项步骤id:指定子项处于活动步骤的顺序}比如{"data3":2}
     * @type {?}
     */
    ProgressStepComponent.prototype._subStepData;
    /**
     * 过滤隐藏的步骤信息，记录当前显示的步骤条，
     * @type {?}
     */
    ProgressStepComponent.prototype.stepMessages;
    /**
     * 记录当前步骤所在的位置，从0开始
     * @type {?}
     */
    ProgressStepComponent.prototype.activeIndex;
    /** @type {?} */
    ProgressStepComponent.prototype.currentIndex;
    /**
     * @type {?}
     * @private
     */
    ProgressStepComponent.prototype.innerStepData;
    /**
     * steps与stepData，选择一个使用。
     * stepData常被表单绑定使用，数据类型
     * {activeIndex:number,stepMessages:[{id:string,title:string,icon?string,hidden?boolean}]}
     * activeIndex: 指定活动的步骤在数组中的位置,
     * stepMessages: 所有步骤数据的数组
     * @type {?}
     */
    ProgressStepComponent.prototype._stepData;
}
//# sourceMappingURL=data:application/json;base64,