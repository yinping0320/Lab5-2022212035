/**
 * @fileoverview added by tsickle
 * Generated from: lib/unSelectDatagridRoleComponent.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, ViewChild } from "@angular/core";
import { ApiLocalService } from "../utils/api-service";
import { DatagridComponent } from "@farris/ui-datagrid";
import { of } from 'rxjs';
// 兼容保留，该组件无用
export class unSelectDatagridRoleComponent {
    /**
     * @param {?} ApiLocalService
     */
    constructor(ApiLocalService) {
        this.ApiLocalService = ApiLocalService;
        this.isAllSelect = new EventEmitter();
        /**
         * 人员展示区的复选框取消勾选时触发逻辑
         * @param $event
         * @return
         */
        this.onBeforeUncheck = (/**
         * @param {?} $event
         * @return {?}
         */
        ($event) => {
            this.selections.forEach((/**
             * @param {?} selection
             * @param {?} index
             * @return {?}
             */
            (selection, index) => {
                if ($event.rowData["id"] === selection["id"]) {
                    this.selections.splice(index, 1);
                }
            }));
            /** @type {?} */
            let emitojb = {
                itemsRole: this.itemsRole,
                pageIndexRole: this.pageIndexRole,
                pageSizeRole: this.pageSizeRole,
                pageTotalRole: this.pageTotalRole,
                pageTotalAllRole: this.pageTotalAllRole,
                unSelectedListRole: this.unSelectedListRole
            };
            this.isAllSelect.emit(emitojb);
            return of(true);
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.unSelectDatagridRole.loadData(this.itemsRole);
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.pageChangeCheck();
    }
    /**
     * 下级组织展示区datagrid用于数据加载
     * @return {?}
     */
    unSelectedListRoleLoad() {
        this.itemsRole = [];
        this.unSelectedListRole.forEach((/**
         * @param {?} res
         * @return {?}
         */
        res => {
            /** @type {?} */
            let name = res.nameChs;
            this.itemsRole.push({ "displayname": name, "id": res.id, "organizationName": res.remark, "userTotal": res.userTotal, "userInFo": res.userInfo, "userList": res.userList });
        }));
        this.unSelectDatagridRole.loadData(this.itemsRole);
        this.pageChangeCheck();
        /** @type {?} */
        let emitojb = {
            itemsRole: this.itemsRole,
            pageIndexRole: this.pageIndexRole,
            pageSizeRole: this.pageSizeRole,
            pageTotalRole: this.pageTotalRole,
            pageTotalAllRole: this.pageTotalAllRole,
            unSelectedListRole: this.unSelectedListRole
        };
        this.isAllSelect.emit(emitojb);
    }
    /**
     * 当前行选中
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    selectLine(data) {
        if (this.isSingleCheck) {
            if (this.selections.length == 0) {
                this._insertOneIntoSelections(data.data);
            }
            else if (this.selections.length >= 1) {
                alert(this.noSelectToRight);
            }
        }
        else {
            this._insertOneIntoSelections(data.data);
        }
        /** @type {?} */
        let emitojb = {
            itemsRole: this.itemsRole,
            pageIndexRole: this.pageIndexRole,
            pageSizeRole: this.pageSizeRole,
            pageTotalRole: this.pageTotalRole,
            pageTotalAllRole: this.pageTotalAllRole,
            unSelectedListRole: this.unSelectedListRole
        };
        this.isAllSelect.emit(emitojb);
    }
    //人员展示翻页触发查询（！）
    /**
     * @param {?} size
     * @return {?}
     */
    switchPage(size) {
        this.pageIndexRole = size.pageIndex;
        // if (this.searchPage) {
        //     let isChinese: number;
        //     if (/^[\u4e00-\u9fa5]+$/i.test(this.searchText)) {
        //         isChinese = 0;
        //     } else if (!(/^[\u4e00-\u9fa5]+$/i.test(this.searchText)) && !(escape(this.searchText).indexOf("%u") < 0)) {
        //         alert("输入框禁止同时输入汉字和拼音！")
        //     } else {
        //         isChinese = 1;
        //     }
        //     this.ApiLocalService.getPersonnelForUserName(this.pageSize, this.pageIndex, this.searchText, isChinese, this.isContain, this.path, this.isenabled).subscribe((res: any) => {
        //       this.unSelectedLists = res;
        //       var linshi: any = this.unSelectedLists;
        //       this.unSelectedList = linshi.data;
        //       this.pageTotalAll = linshi.total;
        //       this.pageTotal = Math.ceil(this.pageTotalAll / this.pageSize);
        //       if (this.pageTotal == 0) {
        //         this.pageTotal = 1;
        //       }
        //       this.unSelectedListLoad();
        //     });
        // } else {
        if (this.isLoadOutData) {
            //console.log("暂未开启")
        }
        else {
        }
        // }
    }
    /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    _insertOneIntoSelections(data) {
        /** @type {?} */
        let collection = [];
        // 如果当前数据已经移入右侧数据，则返回。
        if (this._isInArray(data["id"], "id", this.selections)) {
            return;
        }
        collection.push(data);
        this._insertSomeIntoSelections(collection);
    }
    /**
     * 判断是否在内
     * @param {?} value
     * @param {?} field
     * @param {?} array
     * @return {?}
     */
    _isInArray(value, field, array) {
        if (!field || !value) {
            throw new Error('前2个参数必填');
        }
        return array.find((/**
         * @param {?} item
         * @return {?}
         */
        item => value === item[field])) ? true : false;
    }
    /**
     * @param {?} userArray
     * @return {?}
     */
    _insertSomeIntoSelections(userArray) {
        userArray.forEach((/**
         * @param {?} user
         * @return {?}
         */
        user => {
            if (!this._isInArray(user["id"], "id", this.selections)) {
                this.selections.push(user);
            }
        }));
    }
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    pageChangeCheck() {
        if (this.unSelectedListRole) {
            this.unSelectedListRole.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                if (this._isInArray(item.id, "id", this.selections)) {
                    this.unSelectDatagridRole.checkRow(item.id);
                }
                else {
                    this.unSelectDatagridRole.unCheckRow(item.id);
                }
            }));
        }
    }
}
unSelectDatagridRoleComponent.decorators = [
    { type: Component, args: [{
                template: `<farris-datagrid #unSelectDatagridRole class="s-unSelectDatagrid" [pagerViewMode]="'simple'" [showCheckbox]="true" [checkOnSelect]="true"
[selectOnCheck]="true" [multiSelect]="true" [columns]="columnsRole" [data]="itemsRole"
[enableSelectRow]="true" [showHeader]="false" [fitColumns]="true" [height]="370"
[showBorder]="false" [striped]="false" [fit]="true" [showPageNumber]="false"
[pageIndex]="pageIndexRole" [pageSize]="pageSizeRole" [total]="pageTotalAllRole"
(checked)="selectLine($event)" (pageChanged)="switchPage($event)"
[beforeUncheck]="onBeforeUncheck">
</farris-datagrid>`
            }] }
];
/** @nocollapse */
unSelectDatagridRoleComponent.ctorParameters = () => [
    { type: ApiLocalService }
];
unSelectDatagridRoleComponent.propDecorators = {
    unSelectDatagridRole: [{ type: ViewChild, args: ['unSelectDatagridRole',] }],
    columnsRole: [{ type: Input }],
    itemsRole: [{ type: Input }],
    pageIndexRole: [{ type: Input }],
    pageSizeRole: [{ type: Input }],
    pageTotalAllRole: [{ type: Input }],
    pathRole: [{ type: Input }],
    orgIdRole: [{ type: Input }],
    isContainRole: [{ type: Input }],
    pageTotalRole: [{ type: Input }],
    isSingleCheck: [{ type: Input }],
    selections: [{ type: Input }],
    noSelectToRight: [{ type: Input }],
    searchText: [{ type: Input }],
    isLoadOutData: [{ type: Input }],
    unSelectedRoleLists: [{ type: Input }],
    unSelectedListRole: [{ type: Input }],
    organizationList: [{ type: Input }],
    type: [{ type: Input }],
    listIdField: [{ type: Input }],
    searchPage: [{ type: Input }],
    isenabled: [{ type: Input }],
    isExcludeMe: [{ type: Input }],
    isAllSelect: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.unSelectDatagridRole;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.columnsRole;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.itemsRole;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.pageIndexRole;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.pageSizeRole;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.pageTotalAllRole;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.pathRole;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.orgIdRole;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.isContainRole;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.pageTotalRole;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.isSingleCheck;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.selections;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.noSelectToRight;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.searchText;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.isLoadOutData;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.unSelectedRoleLists;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.unSelectedListRole;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.organizationList;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.type;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.listIdField;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.searchPage;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.isenabled;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.isExcludeMe;
    /** @type {?} */
    unSelectDatagridRoleComponent.prototype.isAllSelect;
    /**
     * 人员展示区的复选框取消勾选时触发逻辑
     * \@param $event
     * \@return
     * @type {?}
     */
    unSelectDatagridRoleComponent.prototype.onBeforeUncheck;
    /**
     * @type {?}
     * @private
     */
    unSelectDatagridRoleComponent.prototype.ApiLocalService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5TZWxlY3REYXRhZ3JpZFJvbGVDb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLXBlcnNvbm5lbC1zZWxlY3Rvci8iLCJzb3VyY2VzIjpbImxpYi91blNlbGVjdERhdGFncmlkUm9sZUNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDOztBQWMxQixNQUFNLE9BQU8sNkJBQTZCOzs7O0lBNkJ0QyxZQUNZLGVBQWdDO1FBQWhDLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtRQUpsQyxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7Ozs7OztRQW1HaEQsb0JBQWU7Ozs7UUFBRyxDQUFDLE1BQU0sRUFBRSxFQUFFO1lBQ3pCLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTzs7Ozs7WUFBQyxDQUFDLFNBQVMsRUFBRSxLQUFLLEVBQUUsRUFBRTtnQkFDekMsSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRTtvQkFDMUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO2lCQUNwQztZQUNMLENBQUMsRUFBQyxDQUFBOztnQkFDRSxPQUFPLEdBQUc7Z0JBQ1YsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTO2dCQUN6QixhQUFhLEVBQUUsSUFBSSxDQUFDLGFBQWE7Z0JBQ2pDLFlBQVksRUFBRSxJQUFJLENBQUMsWUFBWTtnQkFDL0Is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eUJBQ0wsS0FBSzt3QkFDTCxLQUFLOzBCQUNMLEtBQUs7MEJBQ0wsTUFBTTs7OztJQXhCUCw2REFBMkU7O0lBRTNFLG9EQUF5Qjs7SUFDekIsa0RBQXVCOztJQUN2QixzREFBMkI7O0lBQzNCLHFEQUEwQjs7SUFDMUIseURBQThCOztJQUM5QixpREFBc0I7O0lBQ3RCLGtEQUF1Qjs7SUFDdkIsc0RBQTJCOztJQUMzQixzREFBMkI7O0lBQzNCLHNEQUEyQjs7SUFDM0IsbURBQXdCOztJQUN4Qix3REFBNkI7O0lBQzdCLG1EQUF3Qjs7SUFDeEIsc0RBQTJCOztJQUMzQiw0REFBaUM7O0lBQ2pDLDJEQUFnQzs7SUFDaEMseURBQThCOztJQUM5Qiw2Q0FBa0I7O0lBQ2xCLG9EQUE0Qjs7SUFDNUIsbURBQTZCOztJQUM3QixrREFBMkI7O0lBQzNCLG9EQUE2Qjs7SUFDN0Isb0RBQWdEOzs7Ozs7O0lBbUdoRCx3REFnQkM7Ozs7O0lBL0dHLHdEQUF3QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEV2ZW50RW1pdHRlciwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBBcGlMb2NhbFNlcnZpY2UgfSBmcm9tIFwiLi4vdXRpbHMvYXBpLXNlcnZpY2VcIjtcclxuaW1wb3J0IHsgRGF0YWdyaWRDb21wb25lbnQgfSBmcm9tIFwiQGZhcnJpcy91aS1kYXRhZ3JpZFwiO1xyXG5pbXBvcnQgeyBvZiB9IGZyb20gJ3J4anMnO1xyXG5cclxuLy8g5YW85a655L+d55WZ77yM6K+l57uE5Lu25peg55SoXHJcbkBDb21wb25lbnQoe1xyXG4gICAgdGVtcGxhdGU6IGA8ZmFycmlzLWRhdGFncmlkICN1blNlbGVjdERhdGFncmlkUm9sZSBjbGFzcz1cInMtdW5TZWxlY3REYXRhZ3JpZFwiIFtwYWdlclZpZXdNb2RlXT1cIidzaW1wbGUnXCIgW3Nob3dDaGVja2JveF09XCJ0cnVlXCIgW2NoZWNrT25TZWxlY3RdPVwidHJ1ZVwiXHJcbltzZWxlY3RPbkNoZWNrXT1cInRydWVcIiBbbXVsdGlTZWxlY3RdPVwidHJ1ZVwiIFtjb2x1bW5zXT1cImNvbHVtbnNSb2xlXCIgW2RhdGFdPVwiaXRlbXNSb2xlXCJcclxuW2VuYWJsZVNlbGVjdFJvd109XCJ0cnVlXCIgW3Nob3dIZWFkZXJdPVwiZmFsc2VcIiBbZml0Q29sdW1uc109XCJ0cnVlXCIgW2hlaWdodF09XCIzNzBcIlxyXG5bc2hvd0JvcmRlcl09XCJmYWxzZVwiIFtzdHJpcGVkXT1cImZhbHNlXCIgW2ZpdF09XCJ0cnVlXCIgW3Nob3dQYWdlTnVtYmVyXT1cImZhbHNlXCJcclxuW3BhZ2VJbmRleF09XCJwYWdlSW5kZXhSb2xlXCIgW3BhZ2VTaXplXT1cInBhZ2VTaXplUm9sZVwiIFt0b3RhbF09XCJwYWdlVG90YWxBbGxSb2xlXCJcclxuKGNoZWNrZWQpPVwic2VsZWN0TGluZSgkZXZlbnQpXCIgKHBhZ2VDaGFuZ2VkKT1cInN3aXRjaFBhZ2UoJGV2ZW50KVwiXHJcbltiZWZvcmVVbmNoZWNrXT1cIm9uQmVmb3JlVW5jaGVja1wiPlxyXG48L2ZhcnJpcy1kYXRhZ3JpZD5gXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgdW5TZWxlY3REYXRhZ3JpZFJvbGVDb21wb25lbnQge1xyXG5cclxuICAgIEBWaWV3Q2hpbGQoJ3VuU2VsZWN0RGF0YWdyaWRSb2xlJykgdW5TZWxlY3REYXRhZ3JpZFJvbGU6IERhdGFncmlkQ29tcG9uZW50O1xyXG5cclxuICAgIEBJbnB1dCgpIGNvbHVtbnNSb2xlOiBhbnlcclxuICAgIEBJbnB1dCgpIGl0ZW1zUm9sZTogYW55XHJcbiAgICBASW5wdXQoKSBwYWdlSW5kZXhSb2xlOiBhbnlcclxuICAgIEBJbnB1dCgpIHBhZ2VTaXplUm9sZTogYW55XHJcbiAgICBASW5wdXQoKSBwYWdlVG90YWxBbGxSb2xlOiBhbnlcclxuICAgIEBJbnB1dCgpIHBhdGhSb2xlOiBhbnlcclxuICAgIEBJbnB1dCgpIG9yZ0lkUm9sZTogYW55XHJcbiAgICBASW5wdXQoKSBpc0NvbnRhaW5Sb2xlOiBhbnlcclxuICAgIEBJbnB1dCgpIHBhZ2VUb3RhbFJvbGU6IGFueVxyXG4gICAgQElucHV0KCkgaXNTaW5nbGVDaGVjazogYW55XHJcbiAgICBASW5wdXQoKSBzZWxlY3Rpb25zOiBhbnlcclxuICAgIEBJbnB1dCgpIG5vU2VsZWN0VG9SaWdodDogYW55XHJcbiAgICBASW5wdXQoKSBzZWFyY2hUZXh0OiBhbnlcclxuICAgIEBJbnB1dCgpIGlzTG9hZE91dERhdGE6IGFueVxyXG4gICAgQElucHV0KCkgdW5TZWxlY3RlZFJvbGVMaXN0czogYW55XHJcbiAgICBASW5wdXQoKSB1blNlbGVjdGVkTGlzdFJvbGU6IGFueVxyXG4gICAgQElucHV0KCkgb3JnYW5pemF0aW9uTGlzdDogYW55XHJcbiAgICBASW5wdXQoKSB0eXBlOiBhbnlcclxuICAgIEBJbnB1dCgpIGxpc3RJZEZpZWxkOiBzdHJpbmdcclxuICAgIEBJbnB1dCgpIHNlYXJjaFBhZ2U6IGJvb2xlYW47XHJcbiAgICBASW5wdXQoKSBpc2VuYWJsZWQ6IG51bWJlcjtcclxuICAgIEBJbnB1dCgpIGlzRXhjbHVkZU1lOiBudW1iZXI7XHJcbiAgICBAT3V0cHV0KCkgaXNBbGxTZWxlY3QgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuXHJcblxyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHJpdmF0ZSBBcGlMb2NhbFNlcnZpY2U6IEFwaUxvY2FsU2VydmljZSxcclxuICAgICkgeyB9XHJcblxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy51blNlbGVjdERhdGFncmlkUm9sZS5sb2FkRGF0YSh0aGlzLml0ZW1zUm9sZSk7XHJcbiAgICB9XHJcblxyXG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMucGFnZUNoYW5nZUNoZWNrKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDkuIvnuqfnu4Tnu4flsZXnpLrljLpkYXRhZ3JpZOeUqOS6juaVsOaNruWKoOi9vVxyXG4gICAgICovXHJcbiAgICB1blNlbGVjdGVkTGlzdFJvbGVMb2FkKCkge1xyXG4gICAgICAgIHRoaXMuaXRlbXNSb2xlID0gW107XHJcbiAgICAgICAgdGhpcy51blNlbGVjdGVkTGlzdFJvbGUuZm9yRWFjaChyZXMgPT4ge1xyXG4gICAgICAgICAgICBsZXQgbmFtZSA9IHJlcy5uYW1lQ2hzO1xyXG4gICAgICAgICAgICB0aGlzLml0ZW1zUm9sZS5wdXNoKHsgXCJkaXNwbGF5bmFtZVwiOiBuYW1lLCBcImlkXCI6IHJlcy5pZCwgXCJvcmdhbml6YXRpb25OYW1lXCI6IHJlcy5yZW1hcmssIFwidXNlclRvdGFsXCI6IHJlcy51c2VyVG90YWwsIFwidXNlckluRm9cIjogcmVzLnVzZXJJbmZvLCBcInVzZXJMaXN0XCI6IHJlcy51c2VyTGlzdCB9KVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgdGhpcy51blNlbGVjdERhdGFncmlkUm9sZS5sb2FkRGF0YSh0aGlzLml0ZW1zUm9sZSk7XHJcbiAgICAgICAgdGhpcy5wYWdlQ2hhbmdlQ2hlY2soKTtcclxuICAgICAgICBsZXQgZW1pdG9qYiA9IHtcclxuICAgICAgICAgICAgaXRlbXNSb2xlOiB0aGlzLml0ZW1zUm9sZSxcclxuICAgICAgICAgICAgcGFnZUluZGV4Um9sZTogdGhpcy5wYWdlSW5kZXhSb2xlLFxyXG4gICAgICAgICAgICBwYWdlU2l6ZVJvbGU6IHRoaXMucGFnZVNpemVSb2xlLFxyXG4gICAgICAgICAgICBwYWdlVG90YWxSb2xlOiB0aGlzLnBhZ2VUb3RhbFJvbGUsXHJcbiAgICAgICAgICAgIHBhZ2VUb3RhbEFsbFJvbGU6IHRoaXMucGFnZVRvdGFsQWxsUm9sZSxcclxuICAgICAgICAgICAgdW5TZWxlY3RlZExpc3RSb2xlOiB0aGlzLnVuU2VsZWN0ZWRMaXN0Um9sZVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmlzQWxsU2VsZWN0LmVtaXQoZW1pdG9qYik7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgICAqIOW9k+WJjeihjOmAieS4rVxyXG4gICAgICAgKiBAcGFyYW0gZGF0YSDlvZPliY3ooYznmoTmlbDmja7vvIjvvIlcclxuICAgICAgICovXHJcbiAgICBzZWxlY3RMaW5lKGRhdGE6IGFueSkge1xyXG4gICAgICAgIGlmICh0aGlzLmlzU2luZ2xlQ2hlY2spIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuc2VsZWN0aW9ucy5sZW5ndGggPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5faW5zZXJ0T25lSW50b1NlbGVjdGlvbnMoZGF0YS5kYXRhKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNlbGVjdGlvbnMubGVuZ3RoID49IDEpIHtcclxuICAgICAgICAgICAgICAgIGFsZXJ0KHRoaXMubm9TZWxlY3RUb1JpZ2h0KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2luc2VydE9uZUludG9TZWxlY3Rpb25zKGRhdGEuZGF0YSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBlbWl0b2piID0ge1xyXG4gICAgICAgICAgICBpdGVtc1JvbGU6IHRoaXMuaXRlbXNSb2xlLFxyXG4gICAgICAgICAgICBwYWdlSW5kZXhSb2xlOiB0aGlzLnBhZ2VJbmRleFJvbGUsXHJcbiAgICAgICAgICAgIHBhZ2VTaXplUm9sZTogdGhpcy5wYWdlU2l6ZVJvbGUsXHJcbiAgICAgICAgICAgIHBhZ2VUb3RhbFJvbGU6IHRoaXMucGFnZVRvdGFsUm9sZSxcclxuICAgICAgICAgICAgcGFnZVRvdGFsQWxsUm9sZTogdGhpcy5wYWdlVG90YWxBbGxSb2xlLFxyXG4gICAgICAgICAgICB1blNlbGVjdGVkTGlzdFJvbGU6IHRoaXMudW5TZWxlY3RlZExpc3RSb2xlXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuaXNBbGxTZWxlY3QuZW1pdChlbWl0b2piKTtcclxuICAgIH1cclxuXHJcbiAgICAvL+S6uuWRmOWxleekuue/u+mhteinpuWPkeafpeivou+8iO+8ge+8iVxyXG4gICAgc3dpdGNoUGFnZShzaXplKSB7XHJcbiAgICAgICAgdGhpcy5wYWdlSW5kZXhSb2xlID0gc2l6ZS5wYWdlSW5kZXg7XHJcbiAgICAgICAgLy8gaWYgKHRoaXMuc2VhcmNoUGFnZSkge1xyXG4gICAgICAgIC8vICAgICBsZXQgaXNDaGluZXNlOiBudW1iZXI7XHJcbiAgICAgICAgLy8gICAgIGlmICgvXltcXHU0ZTAwLVxcdTlmYTVdKyQvaS50ZXN0KHRoaXMuc2VhcmNoVGV4dCkpIHtcclxuICAgICAgICAvLyAgICAgICAgIGlzQ2hpbmVzZSA9IDA7XHJcbiAgICAgICAgLy8gICAgIH0gZWxzZSBpZiAoISgvXltcXHU0ZTAwLVxcdTlmYTVdKyQvaS50ZXN0KHRoaXMuc2VhcmNoVGV4dCkpICYmICEoZXNjYXBlKHRoaXMuc2VhcmNoVGV4dCkuaW5kZXhPZihcIiV1XCIpIDwgMCkpIHtcclxuICAgICAgICAvLyAgICAgICAgIGFsZXJ0KFwi6L6T5YWl5qGG56aB5q2i5ZCM5pe26L6T5YWl5rGJ5a2X5ZKM5ou86Z+z77yBXCIpXHJcbiAgICAgICAgLy8gICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gICAgICAgICBpc0NoaW5lc2UgPSAxO1xyXG4gICAgICAgIC8vICAgICB9XHJcbiAgICAgICAgLy8gICAgIHRoaXMuQXBpTG9jYWxTZXJ2aWNlLmdldFBlcnNvbm5lbEZvclVzZXJOYW1lKHRoaXMucGFnZVNpemUsIHRoaXMucGFnZUluZGV4LCB0aGlzLnNlYXJjaFRleHQsIGlzQ2hpbmVzZSwgdGhpcy5pc0NvbnRhaW4sIHRoaXMucGF0aCwgdGhpcy5pc2VuYWJsZWQpLnN1YnNjcmliZSgocmVzOiBhbnkpID0+IHtcclxuICAgICAgICAvLyAgICAgICB0aGlzLnVuU2VsZWN0ZWRMaXN0cyA9IHJlcztcclxuICAgICAgICAvLyAgICAgICB2YXIgbGluc2hpOiBhbnkgPSB0aGlzLnVuU2VsZWN0ZWRMaXN0cztcclxuICAgICAgICAvLyAgICAgICB0aGlzLnVuU2VsZWN0ZWRMaXN0ID0gbGluc2hpLmRhdGE7XHJcbiAgICAgICAgLy8gICAgICAgdGhpcy5wYWdlVG90YWxBbGwgPSBsaW5zaGkudG90YWw7XHJcbiAgICAgICAgLy8gICAgICAgdGhpcy5wYWdlVG90YWwgPSBNYXRoLmNlaWwodGhpcy5wYWdlVG90YWxBbGwgLyB0aGlzLnBhZ2VTaXplKTtcclxuICAgICAgICAvLyAgICAgICBpZiAodGhpcy5wYWdlVG90YWwgPT0gMCkge1xyXG4gICAgICAgIC8vICAgICAgICAgdGhpcy5wYWdlVG90YWwgPSAxO1xyXG4gICAgICAgIC8vICAgICAgIH1cclxuICAgICAgICAvLyAgICAgICB0aGlzLnVuU2VsZWN0ZWRMaXN0TG9hZCgpO1xyXG4gICAgICAgIC8vICAgICB9KTtcclxuICAgICAgICAvLyB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5pc0xvYWRPdXREYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwi5pqC5pyq5byA5ZCvXCIpXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgLy8gfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICAgKiDkurrlkZjlsZXnpLrljLrnmoTlpI3pgInmoYblj5bmtojli77pgInml7bop6blj5HpgLvovpFcclxuICAgICAgICogQHBhcmFtICRldmVudFxyXG4gICAgICAgKiBAcmV0dXJuc1xyXG4gICAgICAgKi9cclxuICAgIG9uQmVmb3JlVW5jaGVjayA9ICgkZXZlbnQpID0+IHtcclxuICAgICAgICB0aGlzLnNlbGVjdGlvbnMuZm9yRWFjaCgoc2VsZWN0aW9uLCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoJGV2ZW50LnJvd0RhdGFbXCJpZFwiXSA9PT0gc2VsZWN0aW9uW1wiaWRcIl0pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9ucy5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICBsZXQgZW1pdG9qYiA9IHtcclxuICAgICAgICAgICAgaXRlbXNSb2xlOiB0aGlzLml0ZW1zUm9sZSxcclxuICAgICAgICAgICAgcGFnZUluZGV4Um9sZTogdGhpcy5wYWdlSW5kZXhSb2xlLFxyXG4gICAgICAgICAgICBwYWdlU2l6ZVJvbGU6IHRoaXMucGFnZVNpemVSb2xlLFxyXG4gICAgICAgICAgICBwYWdlVG90YWxSb2xlOiB0aGlzLnBhZ2VUb3RhbFJvbGUsXHJcbiAgICAgICAgICAgIHBhZ2VUb3RhbEFsbFJvbGU6IHRoaXMucGFnZVRvdGFsQWxsUm9sZSxcclxuICAgICAgICAgICAgdW5TZWxlY3RlZExpc3RSb2xlOiB0aGlzLnVuU2VsZWN0ZWRMaXN0Um9sZVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmlzQWxsU2VsZWN0LmVtaXQoZW1pdG9qYik7XHJcbiAgICAgICAgcmV0dXJuIG9mKHRydWUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICAgKiDpgInkuK3lubbmj5LlhaXlvZPliY3ooYzmlbDmja7liLDlj7PkvqdcclxuICAgICAgICogQHBhcmFtIGRhdGEg5b2T5YmN6KGM55qE5pWw5o2uXHJcbiAgICAgICAqIEBwYXJhbSBjb2xsZWN0aW9uIOaaguWtmOW9k+WJjeaVsOaNrueahOmbhuWQiFxyXG4gICAgICAgKi9cclxuICAgIF9pbnNlcnRPbmVJbnRvU2VsZWN0aW9ucyhkYXRhOiBhbnkpIHtcclxuICAgICAgICBsZXQgY29sbGVjdGlvbjogYW55W10gPSBbXTtcclxuICAgICAgICAvLyDlpoLmnpzlvZPliY3mlbDmja7lt7Lnu4/np7vlhaXlj7PkvqfmlbDmja7vvIzliJnov5Tlm57jgIJcclxuICAgICAgICBpZiAodGhpcy5faXNJbkFycmF5KGRhdGFbXCJpZFwiXSwgXCJpZFwiLCB0aGlzLnNlbGVjdGlvbnMpKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29sbGVjdGlvbi5wdXNoKGRhdGEpXHJcbiAgICAgICAgdGhpcy5faW5zZXJ0U29tZUludG9TZWxlY3Rpb25zKGNvbGxlY3Rpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICAgICAqIOWIpOaWreaYr+WQpuWcqOWGhVxyXG4gICAgICAgICAqIEBwYXJhbSB2YWx1ZVxyXG4gICAgICAgICAqIEBwYXJhbSBmaWVsZFxyXG4gICAgICAgICAqIEBwYXJhbSBhcnJheVxyXG4gICAgICAgICAqIEByZXR1cm5zXHJcbiAgICAgICAgICovXHJcbiAgICBfaXNJbkFycmF5KHZhbHVlOiBzdHJpbmcsIGZpZWxkOiBzdHJpbmcsIGFycmF5OiBhbnlbXSkge1xyXG4gICAgICAgIGlmICghZmllbGQgfHwgIXZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcign5YmNMuS4quWPguaVsOW/heWhqycpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYXJyYXkuZmluZChpdGVtID0+IHZhbHVlID09PSBpdGVtW2ZpZWxkXSkgPyB0cnVlIDogZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgX2luc2VydFNvbWVJbnRvU2VsZWN0aW9ucyh1c2VyQXJyYXk6IGFueVtdKSB7XHJcbiAgICAgICAgdXNlckFycmF5LmZvckVhY2godXNlciA9PiB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5faXNJbkFycmF5KHVzZXJbXCJpZFwiXSwgXCJpZFwiLCB0aGlzLnNlbGVjdGlvbnMpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGlvbnMucHVzaCh1c2VyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgICAgICog57+76aG15qOA5p+l77ya5Lq65ZGY5bGV56S65Yy655qE5Yu+6YCJ54q25oCB5LiO5bey6YCJ5Lq65ZGY5Yy65piv5ZCm5a+55bqUXHJcbiAgICAgICAgICovXHJcbiAgICBwYWdlQ2hhbmdlQ2hlY2soKSB7XHJcbiAgICAgICAgaWYgKHRoaXMudW5TZWxlY3RlZExpc3RSb2xlKSB7XHJcbiAgICAgICAgICAgIHRoaXMudW5TZWxlY3RlZExpc3RSb2xlLmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5faXNJbkFycmF5KGl0ZW0uaWQsIFwiaWRcIiwgdGhpcy5zZWxlY3Rpb25zKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudW5TZWxlY3REYXRhZ3JpZFJvbGUuY2hlY2tSb3coaXRlbS5pZCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudW5TZWxlY3REYXRhZ3JpZFJvbGUudW5DaGVja1JvdyhpdGVtLmlkKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbn1cclxuIl19