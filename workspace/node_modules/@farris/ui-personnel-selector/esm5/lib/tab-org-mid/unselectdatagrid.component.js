/**
 * @fileoverview added by tsickle
 * Generated from: lib/tab-org-mid/unselectdatagrid.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, ViewChild, TemplateRef, Optional } from '@angular/core';
import { ApiLocalService } from '../../utils/api-service';
import { DatagridComponent } from '@farris/ui-datagrid';
import * as _ from 'lodash-es';
import { FavoritesTool } from '../../utils/favorites.tool';
import { noDataImg } from '../../assets/resource';
import { DataLoadingService } from '../../utils/loading-service';
import { FilterPosition } from '../../utils/user.type';
import { switchMap, tap } from 'rxjs/operators';
import { BasePathService } from '@farris/rtf';
var UnSelectDatagridComponent = /** @class */ (function () {
    function UnSelectDatagridComponent(apiService, favoritesTool) {
        this.apiService = apiService;
        this.favoritesTool = favoritesTool;
        this.idField = 'userId';
        this.items = [];
        this.orgId = '';
        this.userIds = '';
        this.unSelectedUserIds = '';
        this.enablePagination = true;
        this.selectionsChange = new EventEmitter();
        this.searchResultChange = new EventEmitter();
        this.selections = [];
        this.cloneUserIds = '';
        this.cloneSelections = [];
        this.pEnableChildHierarchy = true;
        this.pIncludeCurrentUser = true;
        this.favoritesList = [];
        this.noDataImg = noDataImg;
        this.allChecked = false;
        this.allIndexId = 'allIndexId';
        // 是否显示用户编号
        this.showUserCode = true;
        this.showPagesPanel = false;
        this.pageList = [10, 20, 50, 100, 200, 500, 1000, 2000, 5000];
        this.filterPersonWithPositionUrl = '/api/runtime/sys/v1.0/users/getPositionsByFilter';
        this.filterPositionArr = [];
        this.filterPositionId = null;
        this.isEmptyFilterPosition = false;
        this.allIndexId = Math.random().toString(16).substring(3, 10);
    }
    Object.defineProperty(UnSelectDatagridComponent.prototype, "enableChildHierarchy", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.pEnableChildHierarchy = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnSelectDatagridComponent.prototype, "includeCurrentUser", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.pIncludeCurrentUser = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var title = '';
        if (this.multiSelect) {
            title = '全选';
        }
        this.columns = [
            {
                field: 'name', template: this.opCell, title: title, width: '150'
            }
        ];
        // 基路径改造
        this.filterPersonWithPositionUrl = BasePathService.convertPath(this.filterPersonWithPositionUrl);
        if (this.favoritesTool) {
            this.favoritesTool.favoritesSubject.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                _this.favoritesList = data;
                _this.unSelectedListLoad();
            }));
        }
    };
    /**
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        // this.pageChangeCheck();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.includeCurrentUser && typeof changes.includeCurrentUser.currentValue === 'boolean'
            && !changes.includeCurrentUser.firstChange) {
            if (this.filterPosition) {
                this.assembleDataByOrgIdAndGetFilterPosition({
                    pageIndex: 1,
                    pageSize: this.pageSize
                });
            }
            else {
                this.assembleDataByOrgId();
            }
        }
        if (changes.enableChildHierarchy && typeof changes.enableChildHierarchy.currentValue === 'boolean'
            && !changes.enableChildHierarchy.firstChange) {
            if (this.filterPosition) {
                this.assembleDataByOrgIdAndGetFilterPosition({
                    pageIndex: 1,
                    pageSize: this.pageSize
                });
            }
            else {
                this.assembleDataByOrgId();
            }
        }
    };
    /**
     * @private
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.emitSelections = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var emitObj = {
            selections: this.selections,
            token: 'unDatagrid'
        };
        this.selectionsChange.emit(emitObj);
    };
    /**
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.restoreSelections = /**
     * @return {?}
     */
    function () {
        this.selections = _.cloneDeep(this.cloneSelections);
        // this.emitSelections();
        this.toggleChecked();
    };
    // 人员展示翻页触发查询（！）
    // 人员展示翻页触发查询（！）
    /**
     * @param {?} size
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.switchPage = 
    // 人员展示翻页触发查询（！）
    /**
     * @param {?} size
     * @return {?}
     */
    function (size) {
        this.pageIndex = size.pageIndex;
        this.pageSize = size.pageSize;
        if (this.searchPage) {
            this.assembleDataBySearch();
        }
        else {
            this.assembleDataByOrgId();
        }
    };
    /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.toggleFavorites = /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    function (e, item) {
        this.favoritesTool.toggleFavorites(e, item);
    };
    /**
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.assembleDataBySearch = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var requestParam = {
            pageSize: this.pageSize,
            pageIndex: this.pageIndex,
            withAllOrg: this.pEnableChildHierarchy ? 1 : 0,
            notGetStopUser: !this.includeStopUser,
            notGetCurrentUser: !this.pIncludeCurrentUser,
            orderField: this.orderField,
            userTypeMode: this.userTypeMode,
            filterId: this.filterId
        };
        // 全局搜索or局部
        if (!this.globalSearch) {
            requestParam.orgId = this.orgId;
        }
        this.apiService.getPersonnelBySearch(this.absUserOrgUrl, this.absOrgType, this.searchText, requestParam).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            /** @type {?} */
            var rcResData = res ? res.data : [];
            _this.unSelectedList = rcResData;
            _this.pageTotalAll = res.totalCount;
            _this.pageTotal = Math.ceil(_this.pageTotalAll / _this.pageSize);
            if (_this.pageTotal === 0) {
                _this.pageTotal = 1;
            }
            _this.unSelectedListLoad();
            _this.searchResultChange.emit(true);
        }));
    };
    /**
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.assembleDataByOrgId = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var orgIds = '';
        if (!this.orgId) {
            return;
        }
        if (this.dataLoadingService) {
            this.dataLoadingService.show(this.loadingServiceMessage);
        }
        orgIds = this.orgId === '*' ? '' : this.orgId;
        /** @type {?} */
        var requestParam = {
            withAllOrg: this.pEnableChildHierarchy ? 1 : 0,
            notGetStopUser: !this.includeStopUser,
            notGetCurrentUser: !this.pIncludeCurrentUser,
            orderField: this.orderField,
            userTypeMode: this.userTypeMode,
            filterId: this.filterId
        };
        if (this.enablePagination) {
            requestParam.pageSize = this.pageSize;
            requestParam.pageIndex = this.pageIndex;
        }
        // 通过岗位进行人员的二次过滤
        if (this.filterPositionId) {
            requestParam.posId = this.filterPositionId;
        }
        if (this.withPermission) {
            requestParam.withPermission = true;
            requestParam.authOp = 'UserManage';
        }
        if (this.enableSecurityControl) {
            requestParam.securityControl = true;
            requestParam.securityLevel = this.securityLevel;
        }
        // 根据组织加载人员
        this.apiService.getPersonnelByOrgId(this.absUserOrgUrl, this.absOrgType, orgIds, requestParam).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            /** @type {?} */
            var rcResData = res ? res.data : [];
            _this.unSelectedList = rcResData;
            _this.pageTotalAll = res.totalCount;
            _this.pageTotal = Math.ceil(_this.pageTotalAll / _this.pageSize);
            if (_this.pageTotal === 0) {
                _this.pageTotal = 1;
            }
            _this.unSelectedListLoad();
            if (_this.dataLoadingService) {
                _this.dataLoadingService.hide();
            }
        }));
    };
    /**
     * @param {?} size
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.assembleDataByOrgIdAndGetFilterPosition = /**
     * @param {?} size
     * @return {?}
     */
    function (size) {
        var _this = this;
        if (!this.orgId || this.orgId == '*') {
            return;
        }
        if (this.dataLoadingService) {
            this.dataLoadingService.show(this.loadingServiceMessage);
        }
        this.pageIndex = size.pageIndex;
        this.pageSize = size.pageSize;
        this.filterPositionArr = [];
        /** @type {?} */
        var filterRequestParam = {
            withAllOrg: this.pEnableChildHierarchy ? 1 : 0,
            getUserInfo: false,
            notGetStopUser: !this.includeStopUser,
            notGetCurrentUser: !this.pIncludeCurrentUser,
            orderField: this.orderField,
            userTypeMode: this.userTypeMode,
            filterId: this.filterId,
            orgId: this.orgId,
        };
        // 首先获取当前组织下所有成员所属的岗位
        /** @type {?} */
        var getFilterPosition$ = this.apiService.getFilterPosition(this.filterPersonWithPositionUrl, this.absOrgType, filterRequestParam);
        /** @type {?} */
        var requestParam = {
            withAllOrg: this.pEnableChildHierarchy ? 1 : 0,
            notGetStopUser: !this.includeStopUser,
            notGetCurrentUser: !this.pIncludeCurrentUser,
            orderField: this.orderField,
            userTypeMode: this.userTypeMode,
            filterId: this.filterId
        };
        if (this.enablePagination) {
            requestParam.pageSize = this.pageSize;
            requestParam.pageIndex = this.pageIndex;
        }
        // 通过岗位进行人员的二次过滤
        if (this.filterPositionId) {
            requestParam.posId = this.filterPositionId;
        }
        if (this.withPermission) {
            requestParam.withPermission = true;
            requestParam.authOp = 'UserManage';
        }
        if (this.enableSecurityControl) {
            requestParam.securityControl = true;
            requestParam.securityLevel = this.securityLevel;
        }
        // 然后获取当前组织下的所有成员
        /** @type {?} */
        var getPersonnel$ = this.apiService.getPersonnelByOrgId(this.absUserOrgUrl, this.absOrgType, this.orgId, requestParam);
        getFilterPosition$.pipe(switchMap((/**
         * @param {?} resData
         * @return {?}
         */
        function (resData) {
            if (resData && resData.length > 0) {
                _this.isEmptyFilterPosition = false;
                /** @type {?} */
                var filterPosition_1;
                _this.filterPositionArr = ((/** @type {?} */ (resData))).map((/**
                 * @param {?} data
                 * @return {?}
                 */
                function (data) {
                    filterPosition_1 = new FilterPosition;
                    filterPosition_1.id = data['id'];
                    filterPosition_1.code = data['code'];
                    filterPosition_1.name = data['name'];
                    return filterPosition_1;
                }));
            }
            else {
                _this.isEmptyFilterPosition = true;
            }
            return getPersonnel$.pipe(tap((/**
             * @param {?} res
             * @return {?}
             */
            function (res) {
                /** @type {?} */
                var rcResData = res ? res.data : [];
                _this.unSelectedList = rcResData;
                _this.pageTotalAll = res.totalCount;
                _this.pageTotal = Math.ceil(_this.pageTotalAll / _this.pageSize);
                if (_this.pageTotal === 0) {
                    _this.pageTotal = 1;
                }
                _this.unSelectedListLoad();
                if (_this.dataLoadingService) {
                    _this.dataLoadingService.hide();
                }
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
                if (_this.dataLoadingService) {
                    _this.dataLoadingService.hide();
                }
                throw new Error(_this.filterPositionErrorInfo);
            })));
        }))).subscribe();
    };
    /**
     * datagrid用于数据展示
     */
    /**
     * datagrid用于数据展示
     * @param {?=} initLoad
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.unSelectedListLoad = /**
     * datagrid用于数据展示
     * @param {?=} initLoad
     * @return {?}
     */
    function (initLoad) {
        var _this = this;
        if (initLoad === void 0) { initLoad = false; }
        /** @type {?} */
        var newItems = [];
        /** @type {?} */
        var count = 0;
        this.unSelectedList.forEach((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            /** @type {?} */
            var item = _.cloneDeep(res);
            // item.checked = false;
            // item.inFavorites = false;
            // item.indexId = Math.random().toString(16).substring(2);
            // if (this._isInArray(res[this.idField], this.idField, this.selections) !== -1) {
            //     item.checked = true;
            // }
            // if (this._isInArray(res[this.idField], this.idField, this.favoritesList) !== -1) {
            //     item.inFavorites = true;
            // }
            item.indexId = Math.random().toString(16).substring(2);
            item.checked = _this.selections.some((/**
             * @param {?} data
             * @return {?}
             */
            function (data) { return data[_this.idField] == res[_this.idField]; }));
            if (!!item.checked) {
                count += 1;
            }
            item.inFavorites = _this.favoritesList.some((/**
             * @param {?} data
             * @return {?}
             */
            function (data) { return data[_this.idField] == res[_this.idField]; }));
            item.displayName = !!_this.showUserCode ? ('[' + item.code + ']' + item.name) : item.name;
            if (_this.showOrgAllPathByDesc && item.orgAllPath) {
                item.orgAllPath = _this.changeDisplayOrgAllPath(item.orgAllPath);
            }
            newItems.push(item);
        }));
        //this.toggleChecked();
        this.items = newItems.slice();
        this.allChecked = this.items.length == count;
        this.cdRef ? this.cdRef.detectChanges() : null;
    };
    /**
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.toggleAll = /**
     * @return {?}
     */
    function () {
        if (!this.allChecked) {
            this.checkAll();
        }
        else {
            this.unCheckAll();
        }
        this.emitSelections();
    };
    /**
     * @param {?} data
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.toggleOne = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data.checked) {
            this.unSelectLine(data);
        }
        else {
            this.selectLine(data);
        }
        this.emitSelections();
    };
    /**
     * 全选后处理
     * @param dataArr 全选的值
     */
    /**
     * 全选后处理
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.checkAll = /**
     * 全选后处理
     * @return {?}
     */
    function () {
        var _this = this;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this._insertOneIntoSelections(item);
            item.checked = true;
        }));
    };
    /**
     * 全部取消
     * @param dataArr 取消的数据
     * @returns void
     */
    /**
     * 全部取消
     * @return {?} void
     */
    UnSelectDatagridComponent.prototype.unCheckAll = /**
     * 全部取消
     * @return {?} void
     */
    function () {
        var _this = this;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this.selections.forEach((/**
             * @param {?} selection
             * @param {?} index
             * @return {?}
             */
            function (selection, index) {
                if (item[_this.idField] === selection[_this.idField]) {
                    _this.selections.splice(index, 1);
                }
            }));
            item.checked = false;
        }));
    };
    /**
    * 当前行选中
    * @param data 当前行的数据（）
    */
    /**
     * 当前行选中
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.selectLine = /**
     * 当前行选中
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    function (data) {
        if (this.multiSelect) {
            this._insertOneIntoSelections(data);
        }
        else {
            this.userIds = '';
            this.selections = [];
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.checked) {
                    item.checked = false;
                }
            }));
            this._insertOneIntoSelections(data);
        }
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
    };
    /**
     * 单选取消选中
     * @param data 取消选中行
     */
    /**
     * 单选取消选中
     * @param {?} data 取消选中行
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.unSelectLine = /**
     * 单选取消选中
     * @param {?} data 取消选中行
     * @return {?}
     */
    function (data) {
        /** @type {?} */
        var index = this._isInArray(data[this.idField], this.idField, this.selections);
        if (index > -1) {
            this.selections.splice(index, 1);
        }
        if (this.allChecked) {
            this.allChecked = false;
        }
    };
    /**
     *  取消选中
     * @param $event 取消勾选的数据
     */
    /**
     *  取消选中
     * @param {?} $event 取消勾选的数据
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.cancelSelections = /**
     *  取消选中
     * @param {?} $event 取消勾选的数据
     * @return {?}
     */
    function ($event) {
        var _this = this;
        if (this.items.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item[_this.idField] === $event.id; })) === -1) {
            return;
        }
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            if (item[_this.idField] === $event.id) {
                item.checked = false;
            }
        }));
        this.selections.forEach((/**
         * @param {?} selection
         * @param {?} index
         * @return {?}
         */
        function (selection, index) {
            if ($event.id === selection[_this.idField]) {
                _this.selections.splice(index, 1);
            }
        }));
        this.allChecked = false;
    };
    /**
     * 全部取消勾选
     */
    /**
     * 全部取消勾选
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.clearCheckeds = /**
     * 全部取消勾选
     * @return {?}
     */
    function () {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            item.checked = false;
        }));
        this.allChecked = false;
        this.selections = [];
    };
    /**
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.clearUserIds = /**
     * @return {?}
     */
    function () {
        this.userIds = '';
    };
    /**
     * 选中并插入当前行数据到右侧
     * @param data 当前行的数据
     * @param collection 暂存当前数据的集合
     */
    /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    UnSelectDatagridComponent.prototype._insertOneIntoSelections = /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    function (data) {
        // 如果当前数据已经移入右侧数据，则返回。
        if (this._isInArray(data[this.idField], this.idField, this.selections) > -1) {
            return;
        }
        this.selections.push(data);
        this.selections = this.selections.slice();
    };
    /**
     * 判断是否在内
     * @param value value
     * @param field field
     * @param array array
     * @returns 位置索引
     */
    /**
     * 判断是否在内
     * @param {?} value value
     * @param {?} field field
     * @param {?} array array
     * @return {?} 位置索引
     */
    UnSelectDatagridComponent.prototype._isInArray = /**
     * 判断是否在内
     * @param {?} value value
     * @param {?} field field
     * @param {?} array array
     * @return {?} 位置索引
     */
    function (value, field, array) {
        if (!field || !value) {
            throw new Error(this.validElementsInfo);
        }
        return array.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return value === item[field]; }));
    };
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     */
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.toggleChecked = /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    function () {
        var _this = this;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            if (_this._isInArray(item[_this.idField], _this.idField, _this.selections) > -1) {
                item.checked = true;
            }
            else {
                item.checked = false;
            }
        }));
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
        else {
            this.allChecked = false;
        }
    };
    /**
     * @private
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.isAllChecked = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var count = 0;
        /** @type {?} */
        var allChecked = false;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this.selections.forEach((/**
             * @param {?} selection
             * @return {?}
             */
            function (selection) {
                if (item[_this.idField] === selection[_this.idField]) {
                    count += 1;
                }
            }));
        }));
        if (this.items.length === count && count > 0) {
            allChecked = true;
        }
        return allChecked;
    };
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.trackByFn = /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    function (index, item) {
        return item.userId;
    };
    /**
     * @param {?} dir
     * @param {?} num
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.turnOverPage = /**
     * @param {?} dir
     * @param {?} num
     * @return {?}
     */
    function (dir, num) {
        if ((dir === 'pre' && this.pageIndex === 1) || (dir === 'next' && this.pageIndex === this.pageTotal)) {
            return;
        }
        this.pageIndex = this.pageIndex + num;
        this.switchPage({
            pageIndex: this.pageIndex,
            pageSize: this.pageSize,
        });
    };
    /**
     * @param {?} inputEl
     * @param {?} maxNumber
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.beforePageIndexChange = /**
     * @param {?} inputEl
     * @param {?} maxNumber
     * @return {?}
     */
    function (inputEl, maxNumber) {
        /** @type {?} */
        var target = (/** @type {?} */ (inputEl.target));
        /** @type {?} */
        var currentPageNumber = Number(target.value);
        if (currentPageNumber > maxNumber) {
            target.value = maxNumber;
        }
        else {
            if (currentPageNumber < 1) {
                target.value = 1;
            }
        }
        this.pageIndex = Number(target.value);
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.onMouseEnter = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.showPagesPanel = true;
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.onMouseLeave = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.showPagesPanel = false;
    };
    /**
     * @param {?} $event
     * @param {?} num
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.changePageSizeHandler = /**
     * @param {?} $event
     * @param {?} num
     * @return {?}
     */
    function ($event, num) {
        $event.stopPropagation();
        if (num == this.pageSize) {
            return;
        }
        this.showPagesPanel = false;
        this.pageSize = num;
        this.switchPage({
            pageIndex: 1,
            pageSize: this.pageSize,
        });
    };
    /**
     * @private
     * @param {?} data
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.changeDisplayOrgAllPath = /**
     * @private
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (!data) {
            return '';
        }
        /** @type {?} */
        var orgAllPathArray = data.split('_');
        return orgAllPathArray.reverse().join('_');
    };
    UnSelectDatagridComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-unselect',
                    template: "<ng-template #unSelectDatagrid [ngIf]=\"false\"></ng-template>\r\n<ng-template #opCell [ngIf]=\"false\"></ng-template>\r\n<!-- \u517C\u5BB9\u4FDD\u7559 -->\r\n\r\n<div class=\"candidate\">\r\n    <div class=\"candidate-title\">\r\n        <div class=\"custom-control custom-checkbox mb-2\" *ngIf=\"multiSelect && items.length > 0\">\r\n            <input class=\"custom-control-input\" [id]=\"allIndexId\" type=\"checkbox\" [(ngModel)]=\"allChecked\">\r\n            <label class=\"custom-control-label\" [for]=\"allIndexId\" (click)=\"toggleAll()\">{{'personnelSelector.tabCommon.checkAll' | locale}}</label>\r\n        </div>\r\n        <div>&nbsp;</div>\r\n    </div>\r\n    <perfect-scrollbar *ngIf=\"items.length!==0\">\r\n        <div class=\"candidate-content\">\r\n            <div *ngFor=\"let data of items; let i = index;trackBy: trackByFn\" class=\"s-selectedPerson\">\r\n                <div class=\"custom-control custom-checkbox\">\r\n                    <input class=\"custom-control-input\" [(ngModel)]=\"data.checked\" [id]=\"data.indexId\" type=\"checkbox\">\r\n                    <label class=\"custom-control-label\" [for]=\"data.indexId\" (click)=\"toggleOne(data)\">\r\n                        <div style=\"display: flex; height: 32px; margin: -21px 0 0 24px;\">\r\n                            <farris-avatar [avatarWidth]=\"32\" [avatarHeight]=\"32\" [cover]=\"data.ext1\" [readonly]=\"true\">\r\n                            </farris-avatar>\r\n                            <div style=\"margin-left: 11px; margin-top: -1px; padding-right: 10px; overflow: hidden;\">\r\n                                <p class=\"candidate-content-title\" title=\"{{data.displayName}}\">\r\n                                    {{data.displayName}}</p>\r\n                                <p class=\"candidate-content-orgpath\" title=\"{{data.orgAllPath}}\">\r\n                                    {{data.orgAllPath}}</p>\r\n                            </div>\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n                <span class=\"f-icon f-icon-star\" *ngIf=\"enableFavorites\" [class.default-light-color]=\"data.inFavorites\"\r\n                    [class.default-dark-color]=\"!data.inFavorites\" (click)=\"toggleFavorites($event, data)\"></span>\r\n            </div>\r\n\r\n        </div>\r\n    </perfect-scrollbar>\r\n    <div class=\"pagination-container\" *ngIf=\"items.length!==0\">\r\n        <ul class=\"ngx-pagination pagination pager-viewmode-simple\">\r\n            <li class=\"pagination-pagelist\" style=\"padding: 0;\" *ngIf=\"showPageList\">\r\n                <div class=\"dropup dropdown-right pg-pagelist\"\r\n                    [ngClass]=\"{'show': showPagesPanel}\"\r\n                    (mouseenter)=\"onMouseEnter($event)\" (mouseleave)=\"onMouseLeave($event)\">\r\n                    <div class=\"pg-pagelist-info\">\r\n                        <span class=\"pagelist-text\">{{'pagination.pagelist.firstText' | locale}}</span><b\r\n                            class=\"cur-pagesize\">{{ pageSize }}</b><span\r\n                            class=\"pagelist-text\">{{'pagination.pagelist.lastText' | locale}}</span><i\r\n                            class=\"f-icon f-icon-dropdown\"></i>\r\n                    </div>\r\n                    <div class=\"dropdown-menu\" [ngClass]=\"{'show': showPagesPanel}\" style=\"margin-bottom: -1px;\">\r\n                        <li class=\"dropdown-item\" [ngClass]=\"{'active':num == pageSize}\"\r\n                            *ngFor=\"let num of pageList\" (click)=\"changePageSizeHandler($event, num)\">\r\n                            <span>{{ num }}</span>\r\n                        </li>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"page-item d-flex flex-fill\"></li>\r\n            <li class=\"page-item\" [class.disabled]=\"pageIndex === 1\" (click)=\"turnOverPage('pre', -1)\">\r\n                <span class=\"page-link border-0\">\r\n                    <span class=\"f-icon f-page-pre\"></span>\r\n                </span>\r\n            </li>\r\n            <li class=\"page-item\">\r\n                <input id=\"farris-datagrid-gotopagenumber\" min=\"1\" type=\"number\" max=\"{{pageTotal}}\"\r\n                    [(ngModel)]=\"pageIndex\" style=\"width: 38px;\" (keyup.enter)=\"switchPage({pageIndex: pageIndex, pageSize: pageSize})\"\r\n                    (input)=\"beforePageIndexChange($event, pageTotal)\">\r\n            </li>\r\n            <li class=\"page-item page-separator\" style=\"margin-left: 10px\"> / </li>\r\n            <li class=\"page-item page-total\" style=\"margin-left: 5px\">\r\n                <span style=\"font-size: 16px; font-weight: 600;\"> {{pageTotal}}</span>\r\n            </li>\r\n            <li class=\"page-item\" [class.disabled]=\"pageIndex === pageTotal\" (click)=\"turnOverPage('next', 1)\">\r\n                <a class=\"page-link border-0\">\r\n                    <span class=\"f-icon f-page-next\"></span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div *ngIf=\"items.length===0\" [ngStyle]=\"{'background-image': noDataImg}\" class=\"fp-candidate-nodata\">\r\n        {{'personnelSelector.tabCommon.noUserData' | locale}}</div>\r\n</div>",
                    styles: [":host{display:-webkit-box;display:flex;height:100%;-webkit-box-flex:1;flex:1;overflow:hidden;position:static}.candidate{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;width:100%}.candidate .fp-candidate-nodata{width:100px;height:100px;text-align:center;background-repeat:no-repeat;background-size:contain;margin:110px auto 0;color:#b4bccc;padding-top:110px}.candidate .group_blank_15{width:100%;height:15px}.candidate .candidate-content{clear:both}.candidate .s-selectedPerson:first-child{margin-top:0}.candidate .s-selectedPerson{min-width:240px;float:left;width:calc(100% - 6px);position:relative;height:40px;padding:5px 12px;margin:0 3px 1px}.candidate .s-selectedPerson:hover{background:#eef5ff;border-radius:5px}.candidate .f-icon{font-size:14px}.candidate .s-selectedPerson .f-icon-star{position:absolute;top:13px;right:12px;font-size:14px}.candidate .s-selectedPerson .default-light-color{color:#f7b500}.candidate .s-selectedPerson .default-dark-color{color:#d8dce6}.candidate .candidate-content-title{margin:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;font-size:13px}.candidate .candidate-content-orgpath{margin:0;font-size:12px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;color:#c7ccd7}.candidate .candidate-title{-webkit-box-pack:justify;justify-content:space-between;height:35px;margin-bottom:18px}.candidate .candidate-title .custom-control{margin:10px 0 0 15px;line-height:35px}.candidate .s-selectedPerson .custom-control-label::before{top:7px}.candidate .candidate-title .title-clearall{margin:5px 15px 0 0;color:#2a87ff;cursor:pointer;line-height:35px}.candidate .candidate-title div{line-height:35px;margin:5px 10px 0 0;color:#2a87ff;cursor:pointer}.candidate .saved-group{position:absolute;width:111px;height:26px;line-height:26px;background:#eaedf2;border-radius:5px;text-align:center;font-size:13px;bottom:10px;left:13px;z-index:999;color:#909ba2;cursor:pointer}.candidate .saved-group:hover{color:#2a87ff;background:#eaf4ff}.candidate .saved-group:hover .f-icon{color:#2a87ff}.candidate .saved-group .f-icon{color:#909ba2;margin-right:5px;cursor:pointer;font-size:14px}.s-group-dialog-container{height:520px;width:600px;position:fixed;left:50%;top:50%;margin:-260px 0 0 -300px;background:#fff;padding:15px 20px;border-radius:10px;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;z-index:9999}.s-group-dialog-container .s-personnel-group-footer{margin-top:15px}.s-help-bg{background:rgb(0 0 0 / 15%);position:fixed;left:0;top:0;right:0;bottom:0;z-index:9997}.s-group-dialog-container .s-personnel-group-title{font-size:17px;line-height:24px;color:#2d2f33;font-weight:600}.s-group-dialog-container .s-personnel-group-title .f-icon{float:right;font-size:20px;color:#878d99;margin-top:3px;cursor:pointer}.s-group-dialog-container .s-personnel-group-footer .fr{float:right;height:32px}"]
                }] }
    ];
    /** @nocollapse */
    UnSelectDatagridComponent.ctorParameters = function () { return [
        { type: ApiLocalService },
        { type: FavoritesTool, decorators: [{ type: Optional }] }
    ]; };
    UnSelectDatagridComponent.propDecorators = {
        unSelectDatagrid: [{ type: ViewChild, args: ['unSelectDatagrid',] }],
        opCell: [{ type: ViewChild, args: ['opCell',] }],
        idField: [{ type: Input }],
        items: [{ type: Input }],
        absUserOrgUrl: [{ type: Input }],
        absOrgType: [{ type: Input }],
        pageIndex: [{ type: Input }],
        pageSize: [{ type: Input }],
        pageTotalAll: [{ type: Input }],
        multiSelect: [{ type: Input }],
        noSelectToRight: [{ type: Input }],
        searchText: [{ type: Input }],
        unSelectedList: [{ type: Input }],
        pageTotal: [{ type: Input }],
        enableChildHierarchy: [{ type: Input }],
        orgId: [{ type: Input }],
        userIds: [{ type: Input }],
        unSelectedUserIds: [{ type: Input }],
        includeStopUser: [{ type: Input }],
        searchPage: [{ type: Input }],
        includeCurrentUser: [{ type: Input }],
        enablePagination: [{ type: Input }],
        enableFavorites: [{ type: Input }],
        busNum: [{ type: Input }],
        orderField: [{ type: Input }],
        userTypeMode: [{ type: Input }],
        globalSearch: [{ type: Input }],
        showPageList: [{ type: Input }],
        dataLoadingService: [{ type: Input }],
        validElementsInfo: [{ type: Input }],
        filterPosition: [{ type: Input }],
        filterPositionErrorInfo: [{ type: Input }],
        withPermission: [{ type: Input }],
        showOrgAllPathByDesc: [{ type: Input }],
        enableSecurityControl: [{ type: Input }],
        securityLevel: [{ type: Input }],
        selectionsChange: [{ type: Output }],
        searchResultChange: [{ type: Output }]
    };
    return UnSelectDatagridComponent;
}());
export { UnSelectDatagridComponent };
if (false) {
    /** @type {?} */
    UnSelectDatagridComponent.prototype.unSelectDatagrid;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.opCell;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.idField;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.items;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.absUserOrgUrl;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.absOrgType;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.pageIndex;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.pageSize;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.pageTotalAll;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.multiSelect;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.noSelectToRight;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.searchText;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.unSelectedList;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.pageTotal;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.orgId;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.userIds;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.unSelectedUserIds;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.includeStopUser;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.searchPage;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.enablePagination;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.enableFavorites;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.busNum;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.orderField;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.userTypeMode;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.globalSearch;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.showPageList;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.dataLoadingService;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.validElementsInfo;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.filterPosition;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.filterPositionErrorInfo;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.withPermission;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.showOrgAllPathByDesc;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.enableSecurityControl;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.securityLevel;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.selectionsChange;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.searchResultChange;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.columns;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.selections;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.cloneUserIds;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.cloneSelections;
    /**
     * @type {?}
     * @private
     */
    UnSelectDatagridComponent.prototype.pEnableChildHierarchy;
    /**
     * @type {?}
     * @private
     */
    UnSelectDatagridComponent.prototype.pIncludeCurrentUser;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.favoritesList;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.noDataImg;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.allChecked;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.allIndexId;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.filterId;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.showUserCode;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.cdRef;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.showPagesPanel;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.pageList;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.loadingServiceMessage;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.filterPersonWithPositionUrl;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.filterPositionArr;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.filterPositionId;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.isEmptyFilterPosition;
    /**
     * @type {?}
     * @private
     */
    UnSelectDatagridComponent.prototype.apiService;
    /**
     * @type {?}
     * @private
     */
    UnSelectDatagridComponent.prototype.favoritesTool;
}
//# sourceMappingURL=data:application/json;base64,