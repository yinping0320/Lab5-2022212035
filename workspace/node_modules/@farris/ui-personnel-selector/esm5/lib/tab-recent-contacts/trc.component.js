/**
 * @fileoverview added by tsickle
 * Generated from: lib/tab-recent-contacts/trc.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, ChangeDetectorRef, Injector } from '@angular/core';
import * as _ from 'lodash-es';
import { noDataImg } from '../../assets/resource';
import { NotifyService } from '@farris/ui-notify';
import { FavoritesTool } from '../../utils/favorites.tool';
var RecentContactsComponent = /** @class */ (function () {
    function RecentContactsComponent(notifyService, favoritesTool, injector) {
        this.notifyService = notifyService;
        this.favoritesTool = favoritesTool;
        this.injector = injector;
        this.orgId = '';
        this.userIds = '';
        this.selectionsChange = new EventEmitter();
        this.recentContactsChange = new EventEmitter();
        this.allChecked = false;
        this.selections = [];
        // 是否显示用户编号
        this.showUserCode = true;
        this.cloneUserIds = '';
        this.cloneSelections = [];
        this.allIndexId = 'allIndexId';
        this.noDataImg = noDataImg;
        this.items = [];
        this.recentContactsList = [];
        this.favoritesList = [];
        this.userInShownOrg = [];
        this.filterRecentContacts = [];
        this.allIndexId = Math.random().toString(16).substring(3, 12);
        this.cdRef = this.injector.get(ChangeDetectorRef);
    }
    /**
     * @return {?}
     */
    RecentContactsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.favoritesTool.favoritesSubject.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            _this.favoritesList = data;
            if (_this.enableFavorites) {
                _this.loadRecentContactsList();
            }
        }));
    };
    /**
     * @return {?}
     */
    RecentContactsComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    RecentContactsComponent.prototype.assembleData = /**
     * @return {?}
     */
    function () {
        if (this.searchPage) {
            this.searchByCodeOrName();
        }
        else {
            this.getRecentContactsList();
        }
    };
    /**
     * @return {?}
     */
    RecentContactsComponent.prototype.searchByCodeOrName = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.items = this.items.filter((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            return item.code.indexOf(_this.searchText) !== -1 || item.name.indexOf(_this.searchText) !== -1;
        }));
    };
    /**
     * @return {?}
     */
    RecentContactsComponent.prototype.restoreSelections = /**
     * @return {?}
     */
    function () {
        this.selections = _.cloneDeep(this.cloneSelections);
        this.toggleChecked();
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
        else {
            this.allChecked = false;
        }
    };
    /**
     * @return {?}
     */
    RecentContactsComponent.prototype.toggleAll = /**
     * @return {?}
     */
    function () {
        if (!this.allChecked) {
            this.checkAll();
        }
        else {
            this.unCheckAll();
        }
        this.cdRef.detectChanges();
        this.emitSelections();
    };
    /**
     * @param {?} data
     * @return {?}
     */
    RecentContactsComponent.prototype.toggleOne = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data.checked) {
            this.unSelectLine(data);
        }
        else {
            this.selectLine(data);
        }
        this.emitSelections();
    };
    /**
     * 用于数据展示
     */
    /**
     * 用于数据展示
     * @return {?}
     */
    RecentContactsComponent.prototype.loadRecentContactsList = /**
     * 用于数据展示
     * @return {?}
     */
    function () {
        var _this = this;
        this.items = [];
        if (this.userInShownOrg.length) {
            this.filterRecentContacts = this.recentContactsList.filter((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return _this.userInShownOrg.find((/**
             * @param {?} user
             * @return {?}
             */
            function (user) { return user.userId == item.userId; })); }));
        }
        else {
            this.filterRecentContacts = this.recentContactsList;
        }
        this.filterRecentContacts.forEach((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            /** @type {?} */
            var item = _.cloneDeep(res);
            item.checked = false;
            item.inFavorites = false;
            item.indexId = Math.random().toString(16).substring(2);
            if (_this._isInArray(res[_this.idField], _this.idField, _this.selections) !== -1) {
                item.checked = true;
            }
            if (_this._isInArray(res[_this.idField], _this.idField, _this.favoritesList) !== -1) {
                item.inFavorites = true;
            }
            item.displayName = !!_this.showUserCode ? ('[' + item.code + ']' + item.name) : item.name;
            if (_this.showOrgAllPathByDesc && item.orgAllPath) {
                item.orgAllPath = _this.changeDisplayOrgAllPath(item.orgAllPath);
            }
            _this.items.push(item);
        }));
        this.toggleChecked();
        this.cdRef.detectChanges();
    };
    /**
     * 全选后处理
     * @param dataArr 全选的值
     */
    /**
     * 全选后处理
     * @return {?}
     */
    RecentContactsComponent.prototype.checkAll = /**
     * 全选后处理
     * @return {?}
     */
    function () {
        var _this = this;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this._insertOneIntoSelections(item);
            item.checked = true;
        }));
    };
    /**
     * 全部取消
     * @param dataArr 取消的数据
     * @returns void
     */
    /**
     * 全部取消
     * @return {?} void
     */
    RecentContactsComponent.prototype.unCheckAll = /**
     * 全部取消
     * @return {?} void
     */
    function () {
        var _this = this;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this.selections.forEach((/**
             * @param {?} selection
             * @param {?} index
             * @return {?}
             */
            function (selection, index) {
                if (item[_this.idField] === selection[_this.idField]) {
                    _this.selections.splice(index, 1);
                }
            }));
            item.checked = false;
        }));
    };
    /**
     * 当前行选中
     * @param data 当前行的数据（）
     */
    /**
     * 当前行选中
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    RecentContactsComponent.prototype.selectLine = /**
     * 当前行选中
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    function (data) {
        if (this.multiSelect) {
            this._insertOneIntoSelections(data);
        }
        else {
            this.userIds = '';
            this.selections = [];
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.checked) {
                    item.checked = false;
                }
            }));
            this._insertOneIntoSelections(data);
        }
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
    };
    /**
     * 单选取消选中
     * @param data 取消选中行
     */
    /**
     * 单选取消选中
     * @param {?} data 取消选中行
     * @return {?}
     */
    RecentContactsComponent.prototype.unSelectLine = /**
     * 单选取消选中
     * @param {?} data 取消选中行
     * @return {?}
     */
    function (data) {
        /** @type {?} */
        var index = this._isInArray(data[this.idField], this.idField, this.selections);
        if (index > -1) {
            this.selections.splice(index, 1);
        }
        if (this.allChecked) {
            this.allChecked = false;
        }
    };
    /**
     * @private
     * @return {?}
     */
    RecentContactsComponent.prototype.emitSelections = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var emitObj = {
            selections: this.selections,
            token: 'recent'
        };
        this.selectionsChange.emit(emitObj);
    };
    /**
     * 获取最近联系人列表
     */
    /**
     * 获取最近联系人列表
     * @return {?}
     */
    RecentContactsComponent.prototype.getRecentContactsList = /**
     * 获取最近联系人列表
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var param = {
            absOrgType: this.absOrgType,
            bizId: this.busNum,
            objectValue: 'RecentContacts'
        };
        if (this.disableCurrentUser) {
            /** @type {?} */
            var currentUserId = ((/** @type {?} */ (window))).gspframeworkService.common.userInfos.get().id;
            param.filterUserIds = [currentUserId];
        }
        if (this.withPermission) {
            param.withPermission = true;
            param.authOp = 'UserManage';
        }
        if (this.enableSecurityControl) {
            param.securityControl = true;
            param.securityLevel = this.securityLevel;
        }
        this.favoritesTool.curdRecentContactsOrFavorites('query', param).subscribe((/**
         * @param {?} rcRes
         * @return {?}
         */
        function (rcRes) {
            /** @type {?} */
            var rcResData = rcRes ? rcRes.data : [];
            _this.recentContactsList = rcResData;
            _this.loadRecentContactsList();
            /** @type {?} */
            var ids = [];
            _this.recentContactsList.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                ids.push(item[_this.idField]);
            }));
            _this.recentContactsChange.emit({
                recentContactsList: ids
            });
        }));
    };
    /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    RecentContactsComponent.prototype.toggleFavorites = /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    function (e, item) {
        this.favoritesTool.toggleFavorites(e, item);
    };
    /**
     * 清空最近联系人
     */
    /**
     * 清空最近联系人
     * @return {?}
     */
    RecentContactsComponent.prototype.clearRecentContactsList = /**
     * 清空最近联系人
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this.items.length) {
            return;
        }
        /** @type {?} */
        var param = {
            absOrgType: this.absOrgType,
            bizId: this.busNum,
            objectValue: 'RecentContacts',
            deleteList: this.items.map((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item[_this.idField]; })),
            clearData: true
        };
        this.favoritesTool.curdRecentContactsOrFavorites('modify', param).subscribe((/**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            _this.items = [];
            _this.cdRef.detectChanges();
            _this.recentContactsChange.emit({
                recentContactsList: []
            });
            // this.notifyService.info('已清空最近联系人！');
        }));
    };
    /**
     *  取消选中
     * @param $event 取消勾选的数据
     */
    /**
     *  取消选中
     * @param {?} $event 取消勾选的数据
     * @return {?}
     */
    RecentContactsComponent.prototype.cancelSelections = /**
     *  取消选中
     * @param {?} $event 取消勾选的数据
     * @return {?}
     */
    function ($event) {
        var _this = this;
        if (this.items.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item[_this.idField] === $event.id; })) === -1) {
            return;
        }
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            if (item[_this.idField] === $event.id) {
                item.checked = false;
            }
        }));
        this.selections.forEach((/**
         * @param {?} selection
         * @param {?} index
         * @return {?}
         */
        function (selection, index) {
            if ($event.id === selection[_this.idField]) {
                _this.selections.splice(index, 1);
            }
        }));
        this.allChecked = false;
    };
    /**
     * 全部取消勾选
     */
    /**
     * 全部取消勾选
     * @return {?}
     */
    RecentContactsComponent.prototype.clearCheckeds = /**
     * 全部取消勾选
     * @return {?}
     */
    function () {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            item.checked = false;
        }));
        this.allChecked = false;
        this.selections = [];
    };
    /**
     * @return {?}
     */
    RecentContactsComponent.prototype.clearUserIds = /**
     * @return {?}
     */
    function () {
        this.userIds = '';
    };
    /**
     * 选中并插入当前行数据到右侧
     * @param data 当前行的数据
     * @param collection 暂存当前数据的集合
     */
    /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    RecentContactsComponent.prototype._insertOneIntoSelections = /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    function (data) {
        // 如果当前数据已经移入右侧数据，则返回。
        if (this._isInArray(data[this.idField], this.idField, this.selections) > -1) {
            return;
        }
        this.selections.push(data);
        this.selections = this.selections.slice();
    };
    /**
     * 判断是否在内
     * @param value value
     * @param field field
     * @param array array
     * @returns 位置索引
     */
    /**
     * 判断是否在内
     * @param {?} value value
     * @param {?} field field
     * @param {?} array array
     * @return {?} 位置索引
     */
    RecentContactsComponent.prototype._isInArray = /**
     * 判断是否在内
     * @param {?} value value
     * @param {?} field field
     * @param {?} array array
     * @return {?} 位置索引
     */
    function (value, field, array) {
        if (!field || !value) {
            throw new Error(this.validElementsInfo);
        }
        return array.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return value === item[field]; }));
    };
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     */
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    RecentContactsComponent.prototype.toggleChecked = /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    function () {
        var _this = this;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            if (_this._isInArray(item[_this.idField], _this.idField, _this.selections) > -1) {
                item.checked = true;
            }
            else {
                item.checked = false;
            }
        }));
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
        else {
            this.allChecked = false;
        }
    };
    /**
     * @private
     * @return {?}
     */
    RecentContactsComponent.prototype.isAllChecked = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var count = 0;
        /** @type {?} */
        var allChecked = false;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this.selections.forEach((/**
             * @param {?} selection
             * @return {?}
             */
            function (selection) {
                if (item[_this.idField] === selection[_this.idField]) {
                    count += 1;
                }
            }));
        }));
        if (this.items.length === count && count > 0) {
            allChecked = true;
        }
        return allChecked;
    };
    /**
     * @private
     * @param {?} data
     * @return {?}
     */
    RecentContactsComponent.prototype.changeDisplayOrgAllPath = /**
     * @private
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (!data) {
            return '';
        }
        /** @type {?} */
        var orgAllPathArray = data.split('_');
        return orgAllPathArray.reverse().join('_');
    };
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    RecentContactsComponent.prototype.trackByFn = /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    function (index, item) {
        return index;
    };
    RecentContactsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-recent-contacts',
                    template: "<div class=\"candidate\">\r\n    <div class=\"candidate-title\">\r\n        <span *ngIf=\"!multiSelect\"></span>\r\n        <div class=\"custom-control custom-checkbox mb-2\" *ngIf=\"multiSelect && items.length > 0\">\r\n            <input class=\"custom-control-input\" [id]=\"allIndexId\" type=\"checkbox\" [(ngModel)]=\"allChecked\">\r\n            <label class=\"custom-control-label\" [for]=\"allIndexId\" (click)=\"toggleAll()\">{{'personnelSelector.tabCommon.checkAll' | locale}}</label>\r\n        </div>\r\n        <a *ngIf=\"items.length > 0\" (click)=\"clearRecentContactsList()\" class=\"title-clearall\">{{'personnelSelector.tabCommon.clearAll' | locale}}</a>\r\n    </div>\r\n    <div class=\"candidate-content\">\r\n        <div *ngFor=\"let data of items; let i = index;trackBy: trackByFn\" class=\"s-selectedPerson\">\r\n            <div class=\"custom-control custom-checkbox mb-2\">\r\n                <input class=\"custom-control-input\" [id]=\"data.indexId\" type=\"checkbox\" [(ngModel)]=\"data.checked\">\r\n                <label class=\"custom-control-label\" [for]=\"data.indexId\" (click)=\"toggleOne(data)\">\r\n                    <div style=\"display: flex; height: 32px; margin: -21px 0 0 24px;\">\r\n                        <farris-avatar [avatarWidth]=\"32\" [avatarHeight]=\"32\" [cover]=\"data.ext1\" [readonly]=\"true\">\r\n                        </farris-avatar>\r\n                        <div style=\"margin-left: 11px;  margin-top: -2px;  padding-right: 10px; overflow: hidden;\">\r\n                            <p class=\"candidate-content-title\" title=\"{{data.displayName}}\">\r\n                                {{data.displayName}}</p>\r\n                            <p class=\"candidate-content-orgpath\" title=\"{{data.orgAllPath}}\">\r\n                                {{data.orgAllPath}}</p>\r\n                        </div>\r\n                    </div>\r\n                </label>\r\n            </div>\r\n            <!-- <input type=\"checkbox\" class=\"k-checkbox\" [(ngModel)]=\"data.checked\" [id]=\"data.indexId\" />\r\n            <label class=\"k-checkbox-label s-checkbox-lab\" [for]=\"data.indexId\" (click)=\"toggleOne(data)\">\r\n                <div style=\"display: flex; height: 35px;\">\r\n                    <farris-avatar [avatarWidth]=\"35\" [avatarHeight]=\"35\" [cover]=\"data.ext1\" [readonly]=\"true\"\r\n                        style=\"margin-left: 6px;\"></farris-avatar>\r\n                    <div style=\"margin-left: 11px;\">\r\n                        <p class=\"candidate-content-title\" [ngStyle]=\"{'width': enableFavorites ? '162px' : '192px'}\"\r\n                            title=\"{{data.displayName}}\">\r\n                            {{data.displayName}}</p>\r\n                        <p class=\"candidate-content-orgpath\" title=\"{{data.orgAllPath}}\"\r\n                            [ngStyle]=\"{'width': enableFavorites ? '162px' : '192px'}\">\r\n                            {{data.orgAllPath}}</p>\r\n                    </div>\r\n                </div>\r\n            </label> -->\r\n            <span class=\"f-icon f-icon-star\" *ngIf=\"enableFavorites\" [class.default-light-color]=\"data.inFavorites\"\r\n                [class.default-dark-color]=\"!data.inFavorites\" (click)=\"toggleFavorites($event, data)\"></span>\r\n        </div>\r\n        <div *ngIf=\"items.length===0\" [ngStyle]=\"{'background-image': noDataImg}\" class=\"fp-candidate-nodata\">\r\n            {{'personnelSelector.tabCommon.noUserData' | locale}}</div>\r\n    </div>\r\n</div>",
                    styles: [":host{display:-webkit-box;display:flex;height:100%;-webkit-box-flex:1;flex:1;overflow:hidden;position:static;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.candidate{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-flex:1;flex:1}.candidate .s-selectedPerson:hover{background:#eef5ff;border-radius:5px}.candidate .candidate-content{margin-top:3px;clear:both}.candidate .s-selectedPerson{min-width:240px;float:left;width:calc(50% - 6px);position:relative;height:40px;padding:5px 12px;margin:0 3px 1px}.candidate .s-selectedPerson .f-icon-star{position:absolute;top:13px;right:15px;font-size:14px}.candidate .s-selectedPerson .default-light-color{color:#f7b500}.candidate .s-selectedPerson .default-dark-color{color:#d8dce6}.candidate .k-checkbox-label::after,.candidate .k-checkbox-label::before{top:10px;font-size:16px;width:14px;height:14px}.candidate .fp-candidate-nodata{width:100px;height:100px;text-align:center;background-repeat:no-repeat;background-size:contain;margin:80px auto 0;color:#b4bccc;padding-top:110px}.candidate .candidate-content-title{margin:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;font-size:13px}.candidate .candidate-content-orgpath{margin:0;font-size:12px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;color:#c7ccd7}.candidate .candidate-title{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between}.candidate .candidate-title .custom-control{margin:10px 0 0 15px;line-height:35px}.candidate .candidate-title .title-clearall{margin:10px 15px 0 0;color:#2a87ff;cursor:pointer;line-height:35px}.candidate .s-selectedPerson .custom-control-label::before{top:8px}"]
                }] }
    ];
    /** @nocollapse */
    RecentContactsComponent.ctorParameters = function () { return [
        { type: NotifyService },
        { type: FavoritesTool },
        { type: Injector }
    ]; };
    RecentContactsComponent.propDecorators = {
        idField: [{ type: Input }],
        absOrgType: [{ type: Input }],
        absUserOrgUrl: [{ type: Input }],
        busNum: [{ type: Input }],
        searchText: [{ type: Input }],
        searchPage: [{ type: Input }],
        includeStopUser: [{ type: Input }],
        includeCurrentUser: [{ type: Input }],
        disableCurrentUser: [{ type: Input }],
        enableFavorites: [{ type: Input }],
        validElementsInfo: [{ type: Input }],
        multiSelect: [{ type: Input }],
        orgId: [{ type: Input }],
        userIds: [{ type: Input }],
        withPermission: [{ type: Input }],
        showOrgAllPathByDesc: [{ type: Input }],
        enableSecurityControl: [{ type: Input }],
        securityLevel: [{ type: Input }],
        selectionsChange: [{ type: Output }],
        recentContactsChange: [{ type: Output }]
    };
    return RecentContactsComponent;
}());
export { RecentContactsComponent };
if (false) {
    /** @type {?} */
    RecentContactsComponent.prototype.idField;
    /**
     * 数据源类型，默认为'System_organization'，即设置为系统数据源，可获取系统组织、系统人员
     * 设置为'Administrative_organization'就是扩展数据源 ，可获取行政组织、行政人员
     * @type {?}
     */
    RecentContactsComponent.prototype.absOrgType;
    /** @type {?} */
    RecentContactsComponent.prototype.absUserOrgUrl;
    /** @type {?} */
    RecentContactsComponent.prototype.busNum;
    /** @type {?} */
    RecentContactsComponent.prototype.searchText;
    /** @type {?} */
    RecentContactsComponent.prototype.searchPage;
    /** @type {?} */
    RecentContactsComponent.prototype.includeStopUser;
    /** @type {?} */
    RecentContactsComponent.prototype.includeCurrentUser;
    /** @type {?} */
    RecentContactsComponent.prototype.disableCurrentUser;
    /** @type {?} */
    RecentContactsComponent.prototype.enableFavorites;
    /** @type {?} */
    RecentContactsComponent.prototype.validElementsInfo;
    /** @type {?} */
    RecentContactsComponent.prototype.multiSelect;
    /** @type {?} */
    RecentContactsComponent.prototype.orgId;
    /** @type {?} */
    RecentContactsComponent.prototype.userIds;
    /** @type {?} */
    RecentContactsComponent.prototype.withPermission;
    /** @type {?} */
    RecentContactsComponent.prototype.showOrgAllPathByDesc;
    /** @type {?} */
    RecentContactsComponent.prototype.enableSecurityControl;
    /** @type {?} */
    RecentContactsComponent.prototype.securityLevel;
    /** @type {?} */
    RecentContactsComponent.prototype.selectionsChange;
    /** @type {?} */
    RecentContactsComponent.prototype.recentContactsChange;
    /**
     * @type {?}
     * @private
     */
    RecentContactsComponent.prototype.cdRef;
    /** @type {?} */
    RecentContactsComponent.prototype.allChecked;
    /** @type {?} */
    RecentContactsComponent.prototype.columns;
    /** @type {?} */
    RecentContactsComponent.prototype.selections;
    /** @type {?} */
    RecentContactsComponent.prototype.showUserCode;
    /** @type {?} */
    RecentContactsComponent.prototype.cloneUserIds;
    /** @type {?} */
    RecentContactsComponent.prototype.cloneSelections;
    /** @type {?} */
    RecentContactsComponent.prototype.allIndexId;
    /** @type {?} */
    RecentContactsComponent.prototype.noDataImg;
    /** @type {?} */
    RecentContactsComponent.prototype.items;
    /** @type {?} */
    RecentContactsComponent.prototype.recentContactsList;
    /** @type {?} */
    RecentContactsComponent.prototype.favoritesList;
    /** @type {?} */
    RecentContactsComponent.prototype.userInShownOrg;
    /**
     * @type {?}
     * @private
     */
    RecentContactsComponent.prototype.filterRecentContacts;
    /**
     * @type {?}
     * @private
     */
    RecentContactsComponent.prototype.notifyService;
    /**
     * @type {?}
     * @private
     */
    RecentContactsComponent.prototype.favoritesTool;
    /**
     * @type {?}
     * @private
     */
    RecentContactsComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,