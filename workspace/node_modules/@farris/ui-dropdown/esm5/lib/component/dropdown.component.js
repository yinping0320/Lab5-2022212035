/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ElementRef, ContentChild, TemplateRef, Output, EventEmitter, Renderer2 } from '@angular/core';
var FarrisDropdownComponent = /** @class */ (function () {
    function FarrisDropdownComponent(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        // 下拉框类型
        // tslint:disable-next-line:no-inferrable-types
        this.type = 'primary';
        // 点击列表项目后是否关闭列表项
        // tslint:disable-next-line:no-input-rename
        // tslint:disable-next-line:no-inferrable-types
        this.hideOnClick = true;
        // 按钮组
        // tslint:disable-next-line:no-input-rename
        this.splitButton = false;
        // 列表显示位置
        this.position = 'bottom';
        // 列表项数据
        this.model = [
            { label: '项目一', value: 'asdasd' },
            { label: '项目二', value: 'asdasd' },
            { label: '项目三', value: 'asdasd' }
        ];
        // 按钮分组之后  左边按钮事件
        // tslint:disable-next-line:no-output-rename
        this.leftClick = new EventEmitter();
        this.select = new EventEmitter();
        // 下拉列表显示或者隐藏触发的事件
        // tslint:disable-next-line:no-output-rename
        this.visibleChange = new EventEmitter();
        // 列表项的显示与否
        this.show = false;
    }
    Object.defineProperty(FarrisDropdownComponent.prototype, "width", {
        get: /**
         * @return {?}
         */
        function () {
            // 对各个单位进行处理
            return this._width;
        },
        set: /**
         * @param {?} width
         * @return {?}
         */
        function (width) {
            this._width = this.resolveSize(width);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FarrisDropdownComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.menu = this.el.nativeElement.querySelector('.dropdown-menu');
    };
    /**
     * @return {?}
     */
    FarrisDropdownComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    FarrisDropdownComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.globalListenFunc) {
            this.globalListenFunc();
        }
    };
    // 点击列表项显示与否
    // 点击列表项显示与否
    /**
     * @param {?=} event
     * @return {?}
     */
    FarrisDropdownComponent.prototype.showDropMenu = 
    // 点击列表项显示与否
    /**
     * @param {?=} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        if (this.hover) {
            return;
        }
        if (event) {
            event.stopPropagation();
        }
        this.show = !this.show;
        this.visibleChange.emit();
        this.globalListenFunc = this.renderer.listen('document', 'click', (/**
         * @return {?}
         */
        function () {
            _this.closeDropMenu();
        }));
        // 如果不设置hide-on-click,则说明点击下拉之后下拉不消失
        if (!this.hideOnClick) {
            this.menuListenFunc = this.renderer.listen(this.menu, 'click', (/**
             * @param {?} e
             * @return {?}
             */
            function (e) {
                e.stopPropagation();
            }));
        }
    };
    // 点击元素之外  列表项消失
    // 点击元素之外  列表项消失
    /**
     * @return {?}
     */
    FarrisDropdownComponent.prototype.closeDropMenu = 
    // 点击元素之外  列表项消失
    /**
     * @return {?}
     */
    function () {
        if (this.hover) {
            return;
        }
        this.show = false;
        this.visibleChange.emit();
        // 解除事件绑定
        if (this.globalListenFunc) {
            this.globalListenFunc();
        }
        if (this.menuListenFunc) {
            this.menuListenFunc();
        }
    };
    // hover 实现
    // hover 实现
    /**
     * @return {?}
     */
    FarrisDropdownComponent.prototype.hoverDropdown = 
    // hover 实现
    /**
     * @return {?}
     */
    function () {
        if (!this.hover) {
            return;
        }
        this.show = !this.show;
        this.visibleChange.emit();
    };
    /**
     * 弹出事件
     */
    /**
     * 弹出事件
     * @param {?} model
     * @return {?}
     */
    FarrisDropdownComponent.prototype.selectItem = /**
     * 弹出事件
     * @param {?} model
     * @return {?}
     */
    function (model) {
        this.select.emit(model);
    };
    /**
     * @return {?}
     */
    FarrisDropdownComponent.prototype.leftButtonClick = /**
     * @return {?}
     */
    function () {
        this.leftClick.emit();
    };
    /**
     * @param {?} size
     * @return {?}
     */
    FarrisDropdownComponent.prototype.resolveSize = /**
     * @param {?} size
     * @return {?}
     */
    function (size) {
        /** @type {?} */
        var regex = /px|em|rem|pt|%/;
        // 说明是字符串
        return regex.test(size)
            ? "" + parseInt(size, 10) + size.match(regex)[0]
            : size + "px";
    };
    FarrisDropdownComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-dropdown',
                    template: "\n        <div\n            class=\"farris-dropdown btn-group\"\n            [class.dropup]=\"position === 'top'\"\n            [class.dropdown]=\"position === 'bottom'\"\n            [class.dropleft]=\"position === 'left'\"\n            [class.dropright]=\"position === 'right'\"\n            [style.width]=\"width\"\n        >\n            <span\n                [class.btn]=\"!nest\"\n                [class.dropdown-item]=\"nest\"\n                [class.btn-lg]=\"size === 'large'\"\n                [class.btn-sm]=\"size === 'small'\"\n                [class.btn-primary]=\"type === 'primary'\"\n                [class.btn-success]=\"type === 'success'\"\n                [class.btn-warning]=\"type === 'warning'\"\n                [class.btn-danger]=\"type === 'danger'\"\n                [class.btn-info]=\"type === 'info'\"\n                (click)=\"leftButtonClick()\"\n                style=\"width:100%\"\n                *ngIf=\"splitButton\"\n                >{{ title }}</span\n            >\n            <span\n                class=\"dropdown-toggle\"\n                [class.btn]=\"!nest\"\n                [class.dropdown-item]=\"nest\"\n                [class.dropdown-toggle-split]=\"splitButton\"\n                [class.btn-lg]=\"size === 'large'\"\n                [class.btn-sm]=\"size === 'small'\"\n                [class.btn-primary]=\"type === 'primary'\"\n                [class.btn-success]=\"type === 'success'\"\n                [class.btn-warning]=\"type === 'warning'\"\n                [class.btn-danger]=\"type === 'danger'\"\n                [class.btn-info]=\"type === 'info'\"\n                [class.btn-secondary]=\"type === 'secondary'\"\n                (click)=\"showDropMenu($event)\"\n                (mouseenter)=\"hoverDropdown()\"\n                (mouseleave)=\"hoverDropdown()\"\n                style=\"width:100%\"\n            >\n                <span class=\"sr-only\" *ngIf=\"splitButton\"></span>\n                {{ splitButton ? '' : title }}\n            </span>\n            <div class=\"dropdown-menu\" [class.show]=\"show\">\n                <ng-template [ngTemplateOutlet]=\"dropdownTempl\"></ng-template>\n                <farris-dropdown-item\n                    *ngFor=\"let item of model\"\n                    [model]=\"item\"\n                    (select)=\"selectItem($event)\"\n                >\n                </farris-dropdown-item>\n            </div>\n        </div>\n    "
                }] }
    ];
    /** @nocollapse */
    FarrisDropdownComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    FarrisDropdownComponent.propDecorators = {
        nest: [{ type: Input }],
        width: [{ type: Input }],
        title: [{ type: Input }],
        hover: [{ type: Input }],
        size: [{ type: Input }],
        type: [{ type: Input }],
        hideOnClick: [{ type: Input, args: ['hide-on-click',] }],
        splitButton: [{ type: Input, args: ['split-button',] }],
        position: [{ type: Input }],
        model: [{ type: Input }],
        dropdownTempl: [{ type: ContentChild, args: ['dropdownTempl',] }],
        leftClick: [{ type: Output, args: ['left-click',] }],
        select: [{ type: Output }],
        visibleChange: [{ type: Output, args: ['visible-change',] }]
    };
    return FarrisDropdownComponent;
}());
export { FarrisDropdownComponent };
if (false) {
    /** @type {?} */
    FarrisDropdownComponent.prototype.nest;
    /** @type {?} */
    FarrisDropdownComponent.prototype._width;
    /** @type {?} */
    FarrisDropdownComponent.prototype._height;
    /** @type {?} */
    FarrisDropdownComponent.prototype.title;
    /** @type {?} */
    FarrisDropdownComponent.prototype.hover;
    /** @type {?} */
    FarrisDropdownComponent.prototype.size;
    /** @type {?} */
    FarrisDropdownComponent.prototype.type;
    /** @type {?} */
    FarrisDropdownComponent.prototype.hideOnClick;
    /** @type {?} */
    FarrisDropdownComponent.prototype.splitButton;
    /** @type {?} */
    FarrisDropdownComponent.prototype.position;
    /** @type {?} */
    FarrisDropdownComponent.prototype.model;
    /** @type {?} */
    FarrisDropdownComponent.prototype.dropdownTempl;
    /** @type {?} */
    FarrisDropdownComponent.prototype.leftClick;
    /** @type {?} */
    FarrisDropdownComponent.prototype.select;
    /** @type {?} */
    FarrisDropdownComponent.prototype.visibleChange;
    /** @type {?} */
    FarrisDropdownComponent.prototype.dropdownButton;
    /** @type {?} */
    FarrisDropdownComponent.prototype.menu;
    /** @type {?} */
    FarrisDropdownComponent.prototype.show;
    /** @type {?} */
    FarrisDropdownComponent.prototype.globalListenFunc;
    /** @type {?} */
    FarrisDropdownComponent.prototype.menuListenFunc;
    /**
     * @type {?}
     * @private
     */
    FarrisDropdownComponent.prototype.el;
    /**
     * @type {?}
     * @private
     */
    FarrisDropdownComponent.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,