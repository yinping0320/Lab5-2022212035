/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, HostBinding, ElementRef, Input, } from "@angular/core";
import { CommonUtils, OverLayHiddenService } from "@farris/ui-common";
import { debounceTime } from "rxjs/operators";
import { FDropdownDirective } from "./f-dropdown.directive";
var FDropdownMenuDirective = /** @class */ (function () {
    function FDropdownMenuDirective(elementRef, dropdown) {
        var _this = this;
        this.elementRef = elementRef;
        this.dropdown = dropdown;
        this._docRect = { width: 0, height: 0 };
        this.showDropdownMenu = true;
        // 内部使用，在不变更依赖的情况下，触发改变
        this.dpIsOpen = false;
        this.overLayService = null;
        this.overLayService = new OverLayHiddenService();
        this.commonUtils = new CommonUtils();
        this.dropdown.getOpenState().pipe(debounceTime(50)).subscribe((/**
         * @param {?} state
         * @return {?}
         */
        function (state) {
            /** @type {?} */
            var ddmel = _this.dropdown.getNativeElement();
            _this.dpIsOpen = _this.dropdown.isOpen;
            if (_this.issubMenu()) {
                if (state && !_this.dpIsOpen && _this.elementRef.nativeElement.className.indexOf("show") < 0) {
                    _this.dpIsOpen = true;
                }
                /** @type {?} */
                var dropdownMenus = _this.dropdown.getNativeElement().closest('.dropdown-menu');
                if (dropdownMenus) {
                    /** @type {?} */
                    var showMenus = dropdownMenus.querySelectorAll('.show');
                    showMenus.forEach((/**
                     * @param {?} element
                     * @return {?}
                     */
                    function (element) {
                        element.classList.remove('show');
                        element.style.cssText = '';
                    }));
                }
            }
            if (_this.dpIsOpen) {
                // 注册鼠标滚轮，点击事件，用于隐藏Panel
                _this.overLayService.registerMouseEvent(ddmel, (/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) {
                    /** @type {?} */
                    var tar = (/** @type {?} */ (e.target));
                    /** @type {?} */
                    var classList = Array.from(tar.classList || []);
                    if (classList.includes('dropdown-toggle') || tar.closest('.dropdown-item') || classList.includes("dropdown-item") ||
                        (_this.dropdown.getNativeElement().contains(tar) && e.type !== "mousewheel") || _this.elementRef.nativeElement.contains(tar)) {
                        return;
                    }
                    _this.dpIsOpen = false;
                    _this.dropdown.close(false);
                    _this.openStateChange();
                }));
            }
            else {
                _this.dropdown.close(false);
                _this.overLayService.destory(ddmel);
            }
            _this.openStateChange();
        }));
    }
    /**
     * @return {?}
     */
    FDropdownMenuDirective.prototype.ngAfterViewChecked = /**
     * @return {?}
     */
    function () { };
    /**
     * @private
     * @param {?} pment
     * @return {?}
     */
    FDropdownMenuDirective.prototype.getRealPlacement = /**
     * @private
     * @param {?} pment
     * @return {?}
     */
    function (pment) {
        /** @type {?} */
        var result = "bottom-right";
        switch (pment) {
            case "top":
                result = "top-right";
                break;
            case "left":
                result = "left-bottom";
                break;
            case "right":
                result = "right-bottom";
                break;
            case "bottom":
                result = "bottom-right";
                break;
            default:
                result = pment;
        }
        return result;
    };
    /**
     * @return {?}
     */
    FDropdownMenuDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @private
     * @return {?}
     */
    FDropdownMenuDirective.prototype.openStateChange = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.dpIsOpen) {
            if (this.elementRef.nativeElement.className.indexOf("show") < 0) {
                document.body.style.overflow = 'hidden';
                this.elementRef.nativeElement.style.visibility = 'hidden';
                this.elementRef.nativeElement.className += " show";
                if (this.dropdown.needToCalculate()) {
                    this._docRect = this.dropdown.getRectifyReferenceEl();
                }
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    _this.changeDirection();
                    document.body.style.overflow = '';
                    _this.elementRef.nativeElement.style.visibility = 'visible';
                }), 0);
            }
        }
        else {
            if (this.elementRef.nativeElement.className.indexOf("show") > -1) {
                this.elementRef.nativeElement.className = this.elementRef.nativeElement.className.replace(' show', ' ');
                this.elementRef.nativeElement.style.cssText = '';
            }
            /** @type {?} */
            var submenu = this.elementRef.nativeElement.querySelectorAll('.dropdown-menu');
            if (submenu && submenu.length) {
                submenu.forEach((/**
                 * @param {?} element
                 * @return {?}
                 */
                function (element) {
                    element.classList.remove('show');
                    element.style.cssText = '';
                }));
            }
            /** @type {?} */
            var showItem = this.elementRef.nativeElement.querySelector('.show');
            if (showItem) {
                showItem.classList.remove('show');
            }
            /** @type {?} */
            var activeItem = this.elementRef.nativeElement.querySelector('.active');
            if (activeItem) {
                activeItem.classList.remove('active');
            }
            this.dropdown['_internalOpen'] = false;
        }
    };
    /**
     * @private
     * @return {?}
     */
    FDropdownMenuDirective.prototype.changeDirection = /**
     * @private
     * @return {?}
     */
    function () {
        // if (this.dropdown.needToCalculate()) {
        //     const rect = this.elementRef.nativeElement.getBoundingClientRect();
        //     let placement = this.dropdown.placement;
        //     let newplacement = this.getRealPlacement(placement);
        //     placement = newplacement;
        //     //
        //     if (
        //         newplacement.indexOf("right") > -1 &&
        //         rect.right > this._docRect.width
        //     ) {
        //         placement = placement.replace("right", "left");
        //     }
        //     if (
        //         newplacement.indexOf("left") > -1 &&
        //         rect.left - rect.width < 0
        //     ) {
        //         placement = placement.replace("left", "right");
        //     }
        //     if (
        //         newplacement.indexOf("bottom") > -1 &&
        //         rect.bottom > this._docRect.height
        //     ) {
        //         placement = placement.replace("down", "up");
        //     }
        //     if (
        //         newplacement.indexOf("up") > -1 &&
        //         rect.bottom - rect.height < 0
        //     ) {
        //         placement = placement.replace("up", "bottom");
        //     }
        //     if (newplacement !== this.dropdown.placement) {
        //         this.dropdown.placement = newplacement;
        //     }
        //     if (placement !== newplacement) {
        //         this.dropdown.placement = placement;
        //     }
        //     this.dropdown.resetCalculate(false);
        // }
        this.setMenuPanelPosition();
    };
    /**
     * @private
     * @return {?}
     */
    FDropdownMenuDirective.prototype.issubMenu = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var dd = this.dropdown.getNativeElement();
        return dd.className.indexOf('dropdown-submenu') > -1 || dd.closest('.dropdown-submenu') || dd.classList.contains('dropright');
    };
    /**
     * @private
     * @return {?}
     */
    FDropdownMenuDirective.prototype.setMenuPanelPosition = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var parentMenuPanel = this.dropdown.getNativeElement();
        var _a = parentMenuPanel.getBoundingClientRect(), height = _a.height, left = _a.left, top = _a.top, width = _a.width;
        var _b = getComputedStyle(this.elementRef.nativeElement), menuMt = _b.marginTop, menuMb = _b.marginBottom;
        var _c = this.elementRef.nativeElement.getBoundingClientRect(), pw = _c.width, ph = _c.height;
        /** @type {?} */
        var _maxHeight = 0;
        /** @type {?} */
        var tMenuMargin = Math.ceil(parseFloat(menuMt)) + Math.ceil(parseFloat(menuMb));
        /** @type {?} */
        var _top = top + height;
        /** @type {?} */
        var _left = left;
        if (window.innerHeight - top - height - tMenuMargin < ph) {
            _top = top - ph;
            if (_top < 0) {
                //当前的界面容不下menu上的按钮，限制menu的高度
                _top = 10;
                _maxHeight = top - _top - tMenuMargin;
            }
        }
        else {
        }
        if (window.innerWidth - left - width < pw) {
            _left = left - pw + width;
        }
        if (!this.issubMenu()) {
            document.body.append(this.elementRef.nativeElement);
            this.dropdown.appendMenuEl(this.elementRef.nativeElement);
            this.elementRef.nativeElement.style.cssText = "position:fixed;bottom:unset;left:" + _left + "px !important;top:" + _top + "px !important;right: unset;max-height:" + (_maxHeight ? _maxHeight + 'px;overflow:auto' : 'none');
            this.elementRef.nativeElement.style.zIndex = this.commonUtils.getFloatingLayerIndex();
            // if (this.elementRef.nativeElement.classList.contains('solution-header-title-menu')) {
            //     this.elementRef.nativeElement.classList.add('query-solution');
            // }
            // const solutionBtns = this.elementRef.nativeElement.querySelector('.solution-header-dropdown-item-btns');
            // if (solutionBtns && !solutionBtns.classList.contains('dropdown-item')) {
            //     solutionBtns.classList.add('dropdown-item');
            // }
        }
        else {
            /** @type {?} */
            var childContainerWidth = window.innerWidth - left - parentMenuPanel.offsetWidth;
            /** @type {?} */
            var childMenuPanel = this.elementRef.nativeElement;
            if (childMenuPanel.offsetWidth > childContainerWidth) {
                /** @type {?} */
                var l = -pw;
                childMenuPanel.style.left = l + 'px';
            }
            /** @type {?} */
            var childContainerHeight = window.innerHeight - childMenuPanel.getBoundingClientRect().top;
            if (childContainerHeight < childMenuPanel.offsetHeight) {
                /** @type {?} */
                var t = window.innerHeight - top - childMenuPanel.offsetHeight - 10;
                childMenuPanel.style.top = t + 'px';
            }
        }
    };
    FDropdownMenuDirective.decorators = [
        { type: Directive, args: [{
                    selector: "[fDropdownMenu]",
                },] }
    ];
    /** @nocollapse */
    FDropdownMenuDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: FDropdownDirective }
    ]; };
    FDropdownMenuDirective.propDecorators = {
        showDropdownMenu: [{ type: HostBinding, args: ["class.dropdown-menu",] }],
        dpIsOpen: [{ type: Input }]
    };
    return FDropdownMenuDirective;
}());
export { FDropdownMenuDirective };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FDropdownMenuDirective.prototype._docRect;
    /** @type {?} */
    FDropdownMenuDirective.prototype.showDropdownMenu;
    /** @type {?} */
    FDropdownMenuDirective.prototype.dpIsOpen;
    /**
     * @type {?}
     * @private
     */
    FDropdownMenuDirective.prototype.overLayService;
    /**
     * @type {?}
     * @private
     */
    FDropdownMenuDirective.prototype.commonUtils;
    /**
     * @type {?}
     * @private
     */
    FDropdownMenuDirective.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    FDropdownMenuDirective.prototype.dropdown;
}
//# sourceMappingURL=data:application/json;base64,