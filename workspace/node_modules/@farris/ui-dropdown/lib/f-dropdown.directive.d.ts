import { EventEmitter, ElementRef, Renderer2, OnDestroy, OnInit } from '@angular/core';
import { Subject } from 'rxjs';
export declare class FDropdownDirective implements OnDestroy, OnInit {
    private elementRef;
    private render;
    toggleElement: any;
    documentClickEventListener: any;
    selfDefineEventListener: any;
    private _seflEl;
    private _internalOpen;
    private _calculateMenu;
    rectifyReference: any;
    rectifyReferenceV: any;
    autoRectify: boolean;
    forceState: Array<boolean>;
    openState: boolean;
    dpChangeEvent: EventEmitter<boolean>;
    private _placement;
    isSubDP: boolean;
    placement: string;
    readonly isOpen: boolean;
    private isOpenState;
    readonly submenuCls: boolean;
    readonly dropdownCls: boolean;
    private ngZone;
    private menuEls;
    constructor(elementRef: ElementRef, render: Renderer2);
    ngOnInit(): void;
    getNativeElement(): HTMLElement;
    private bindDocumentEvents;
    private onSelfDefineHandler;
    private unbindDocumentEvents;
    private onDocumentClick;
    needToCalculate(): boolean;
    resetCalculate(value: any): void;
    open(): void;
    close(emit?: boolean): void;
    toggle(): void;
    getOpenState(): Subject<{}>;
    ngOnDestroy(): void;
    private closeSiblingDropdowns;
    private compatibleDispatchEvent;
    private _getClsName;
    private isEventFromToggle;
    getRectifyReferenceEl(): {
        width: number;
        height: number;
    };
    appendMenuEl(menuEl: any): void;
}
