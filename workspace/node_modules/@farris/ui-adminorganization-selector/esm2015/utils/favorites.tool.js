/**
 * @fileoverview added by tsickle
 * Generated from: utils/favorites.tool.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
export class FavoritesTool {
    /**
     * @param {?} http
     */
    constructor(http) {
        this.http = http;
        this.absOrgType = 'System_organization';
        this.busNum = 'common';
        this.idField = 'id';
        this.favoritesList = [];
        this.absRfQueryUrl = '/api/runtime/sys/v1.0/absRecentContacts/query';
        this.absRfModifyUrl = '/api/runtime/sys/v1.0/absRecentContacts/modify';
        this.subject = new Subject();
    }
    /**
     * 操作最近联系人或收藏夹
     * @param {?} actionToken
     * @param {?} param any
     * @return {?} observable
     */
    curdRecentContactsOrFavorites(actionToken, param) {
        /** @type {?} */
        let url = this.absRfQueryUrl;
        if (actionToken === 'modify') {
            url = this.absRfModifyUrl;
        }
        /** @type {?} */
        const options = {
            headers: new HttpHeaders({
                'Content-Type': 'application/json',
            })
        };
        return this.http.post(url, param, options);
    }
    /**
     * @return {?}
     */
    get favoritesSubject() {
        return this.subject.asObservable();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setFavoritesList(value) {
        this.subject.next(value);
    }
    /**
     * 获取收藏夹中人员列表
     * @return {?}
     */
    getFavoritesList() {
        /** @type {?} */
        const param = {
            absOrgType: this.absOrgType,
            bizId: this.busNum,
            objectValue: 'CollectOrg'
        };
        return this.curdRecentContactsOrFavorites('query', param);
    }
    /**
     * 加入或取消收藏
     * @param {?} e 鼠标事件
     * @param {?} object
     * @return {?} Observable
     */
    toggleFavorites(e, object) {
        /** @type {?} */
        const id = object[this.idField];
        /** @type {?} */
        let action = 'add';
        /** @type {?} */
        const param = {
            absOrgType: this.absOrgType,
            bizId: this.busNum,
            objectValue: 'CollectOrg'
        };
        if (this.favoritesList.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        item => item[this.idField] === id)) !== -1) {
            param.deleteList = [id];
            action = 'delete';
        }
        else {
            param.addList = [id];
        }
        this.curdRecentContactsOrFavorites('modify', param).subscribe((/**
         * @return {?}
         */
        () => {
            if (action === 'add') {
                /** @type {?} */
                const index = this.favoritesList.findIndex((/**
                 * @param {?} item
                 * @return {?}
                 */
                item => item[this.idField] === id));
                if (index === -1) {
                    this.favoritesList.push(object);
                }
            }
            else {
                this.favoritesList = this.favoritesList.filter((/**
                 * @param {?} item
                 * @return {?}
                 */
                item => item[this.idField] !== id));
            }
            this.setFavoritesList(this.favoritesList);
        }));
        e.cancelBubble = true;
        e.stopPropagation();
    }
    /**
     * 清空我的收藏
     * @return {?}
     */
    clearFavoritesList() {
        if (!this.favoritesList.length) {
            this.setFavoritesList(this.favoritesList);
            return;
        }
        /** @type {?} */
        const ids = this.favoritesList.map((/**
         * @param {?} item
         * @return {?}
         */
        item => item[this.idField]));
        /** @type {?} */
        const param = {
            absOrgType: this.absOrgType,
            bizId: this.busNum,
            objectValue: 'CollectOrg',
            addList: [],
            deleteList: ids
        };
        this.curdRecentContactsOrFavorites('modify', param).subscribe((/**
         * @param {?} val
         * @return {?}
         */
        (val) => {
            this.favoritesList = [];
            this.setFavoritesList(this.favoritesList);
        }));
    }
}
FavoritesTool.decorators = [
    { type: Injectable }
];
/** @nocollapse */
FavoritesTool.ctorParameters = () => [
    { type: HttpClient }
];
if (false) {
    /** @type {?} */
    FavoritesTool.prototype.absOrgType;
    /** @type {?} */
    FavoritesTool.prototype.busNum;
    /** @type {?} */
    FavoritesTool.prototype.idField;
    /** @type {?} */
    FavoritesTool.prototype.favoritesList;
    /** @type {?} */
    FavoritesTool.prototype.absRfQueryUrl;
    /** @type {?} */
    FavoritesTool.prototype.absRfModifyUrl;
    /**
     * @type {?}
     * @private
     */
    FavoritesTool.prototype.subject;
    /**
     * @type {?}
     * @private
     */
    FavoritesTool.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmF2b3JpdGVzLnRvb2wuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWFkbWlub3JnYW5pemF0aW9uLXNlbGVjdG9yLyIsInNvdXJjZXMiOlsidXRpbHMvZmF2b3JpdGVzLnRvb2wudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFrQixPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFHL0MsTUFBTSxPQUFPLGFBQWE7Ozs7SUFVdEIsWUFBb0IsSUFBZ0I7UUFBaEIsU0FBSSxHQUFKLElBQUksQ0FBWTtRQVJwQyxlQUFVLEdBQUcscUJBQXFCLENBQUM7UUFDbkMsV0FBTSxHQUFHLFFBQVEsQ0FBQztRQUNsQixZQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ2Ysa0JBQWEsR0FBRyxFQUFFLENBQUM7UUFDbkIsa0JBQWEsR0FBRywrQ0FBK0MsQ0FBQztRQUNoRSxtQkFBYyxHQUFHLGdEQUFnRCxDQUFDO1FBQzFELFlBQU8sR0FBRyxJQUFJLE9BQU8sRUFBTyxDQUFDO0lBSXJDLENBQUM7Ozs7Ozs7SUFPRCw2QkFBNkIsQ0FBQyxXQUFtQixFQUFFLEtBQVU7O1lBQ3JELEdBQUcsR0FBRyxJQUFJLENBQUMsYUFBYTtRQUM1QixJQUFJLFdBQVcsS0FBSyxRQUFRLEVBQUU7WUFDMUIsR0FBRyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7U0FDN0I7O2NBQ0ssT0FBTyxHQUFHO1lBQ1osT0FBTyxFQUFFLElBQUksV0FBVyxDQUFDO2dCQUNyQixjQUFjLEVBQUUsa0JBQWtCO2FBQ3JDLENBQUM7U0FDTDtRQUNELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMvQyxDQUFDOzs7O0lB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LEdBQUc7U0FDbEI7UUFFRCxJQUFJLENBQUMsNkJBQTZCLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQyxDQUFDLFNBQVM7Ozs7UUFBQyxDQUFDLEdBQUcsRUFBRSxFQUFFO1lBQ2xFLElBQUksQ0FBQyxhQUFhLEdBQUcsRUFBRSxDQUFDO1lBQ3hCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDOUMsQ0FBQyxFQUFDLENBQUM7SUFDUCxDQUFDOzs7WUE3R0osVUFBVTs7OztZQUpGLFVBQVU7Ozs7SUFPZixtQ0FBbUM7O0lBQ25DLCtCQUFrQjs7SUFDbEIsZ0NBQWU7O0lBQ2Ysc0NBQW1COztJQUNuQixzQ0FBZ0U7O0lBQ2hFLHVDQUFrRTs7Ozs7SUFDbEUsZ0NBQXFDOzs7OztJQUV6Qiw2QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwQ2xpZW50LCBIdHRwSGVhZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBvZiwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgRmF2b3JpdGVzVG9vbCB7XHJcblxyXG4gICAgYWJzT3JnVHlwZSA9ICdTeXN0ZW1fb3JnYW5pemF0aW9uJztcclxuICAgIGJ1c051bSA9ICdjb21tb24nO1xyXG4gICAgaWRGaWVsZCA9ICdpZCc7XHJcbiAgICBmYXZvcml0ZXNMaXN0ID0gW107XHJcbiAgICBhYnNSZlF1ZXJ5VXJsID0gJy9hcGkvcnVudGltZS9zeXMvdjEuMC9hYnNSZWNlbnRDb250YWN0cy9xdWVyeSc7XHJcbiAgICBhYnNSZk1vZGlmeVVybCA9ICcvYXBpL3J1bnRpbWUvc3lzL3YxLjAvYWJzUmVjZW50Q29udGFjdHMvbW9kaWZ5JztcclxuICAgIHByaXZhdGUgc3ViamVjdCA9IG5ldyBTdWJqZWN0PGFueT4oKTtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHBDbGllbnQpIHtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmk43kvZzmnIDov5HogZTns7vkurrmiJbmlLbol4/lpLlcclxuICAgICAqIEBwYXJhbSBwYXJhbSBhbnlcclxuICAgICAqIEByZXR1cm5zIG9ic2VydmFibGVcclxuICAgICAqL1xyXG4gICAgY3VyZFJlY2VudENvbnRhY3RzT3JGYXZvcml0ZXMoYWN0aW9uVG9rZW46IHN0cmluZywgcGFyYW06IGFueSkge1xyXG4gICAgICAgIGxldCB1cmwgPSB0aGlzLmFic1JmUXVlcnlVcmw7XHJcbiAgICAgICAgaWYgKGFjdGlvblRva2VuID09PSAnbW9kaWZ5Jykge1xyXG4gICAgICAgICAgICB1cmwgPSB0aGlzLmFic1JmTW9kaWZ5VXJsO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBvcHRpb25zID0ge1xyXG4gICAgICAgICAgICBoZWFkZXJzOiBuZXcgSHR0cEhlYWRlcnMoe1xyXG4gICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAucG9zdCh1cmwsIHBhcmFtLCBvcHRpb25zKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgZmF2b3JpdGVzU3ViamVjdCgpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnN1YmplY3QuYXNPYnNlcnZhYmxlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0RmF2b3JpdGVzTGlzdCh2YWx1ZTogYW55KSB7XHJcbiAgICAgICAgdGhpcy5zdWJqZWN0Lm5leHQodmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6I635Y+W5pS26JeP5aS55Lit5Lq65ZGY5YiX6KGoXHJcbiAgICAgKi9cclxuICAgIGdldEZhdm9yaXRlc0xpc3QoKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgICAgICBjb25zdCBwYXJhbTogYW55ID0ge1xyXG4gICAgICAgICAgICBhYnNPcmdUeXBlOiB0aGlzLmFic09yZ1R5cGUsXHJcbiAgICAgICAgICAgIGJpeklkOiB0aGlzLmJ1c051bSxcclxuICAgICAgICAgICAgb2JqZWN0VmFsdWU6ICdDb2xsZWN0T3JnJ1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY3VyZFJlY2VudENvbnRhY3RzT3JGYXZvcml0ZXMoJ3F1ZXJ5JywgcGFyYW0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Yqg5YWl5oiW5Y+W5raI5pS26JePXHJcbiAgICAgKiBAcGFyYW0gZSDpvKDmoIfkuovku7ZcclxuICAgICAqIEBwYXJhbSBpZCDmoIfor4ZcclxuICAgICAqIEByZXR1cm5zIE9ic2VydmFibGVcclxuICAgICAqL1xyXG4gICAgdG9nZ2xlRmF2b3JpdGVzKGU6IGFueSwgb2JqZWN0OiBhbnkpIHtcclxuICAgICAgICBjb25zdCBpZCA9IG9iamVjdFt0aGlzLmlkRmllbGRdO1xyXG4gICAgICAgIGxldCBhY3Rpb24gPSAnYWRkJztcclxuICAgICAgICBjb25zdCBwYXJhbTogYW55ID0ge1xyXG4gICAgICAgICAgICBhYnNPcmdUeXBlOiB0aGlzLmFic09yZ1R5cGUsXHJcbiAgICAgICAgICAgIGJpeklkOiB0aGlzLmJ1c051bSxcclxuICAgICAgICAgICAgb2JqZWN0VmFsdWU6ICdDb2xsZWN0T3JnJ1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgaWYgKHRoaXMuZmF2b3JpdGVzTGlzdC5maW5kSW5kZXgoaXRlbSA9PiBpdGVtW3RoaXMuaWRGaWVsZF0gPT09IGlkKSAhPT0gLTEpIHtcclxuICAgICAgICAgICAgcGFyYW0uZGVsZXRlTGlzdCA9IFtpZF07XHJcbiAgICAgICAgICAgIGFjdGlvbiA9ICdkZWxldGUnO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHBhcmFtLmFkZExpc3QgPSBbaWRdO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmN1cmRSZWNlbnRDb250YWN0c09yRmF2b3JpdGVzKCdtb2RpZnknLCBwYXJhbSkuc3Vic2NyaWJlKCgpID0+IHtcclxuICAgICAgICAgICAgaWYgKGFjdGlvbiA9PT0gJ2FkZCcpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5mYXZvcml0ZXNMaXN0LmZpbmRJbmRleChpdGVtID0+IGl0ZW1bdGhpcy5pZEZpZWxkXSA9PT0gaWQpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGluZGV4ID09PSAtMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmF2b3JpdGVzTGlzdC5wdXNoKG9iamVjdCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZhdm9yaXRlc0xpc3QgPSB0aGlzLmZhdm9yaXRlc0xpc3QuZmlsdGVyKGl0ZW0gPT4gaXRlbVt0aGlzLmlkRmllbGRdICE9PSBpZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5zZXRGYXZvcml0ZXNMaXN0KHRoaXMuZmF2b3JpdGVzTGlzdCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgZS5jYW5jZWxCdWJibGUgPSB0cnVlO1xyXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmuIXnqbrmiJHnmoTmlLbol49cclxuICAgICAqL1xyXG4gICAgY2xlYXJGYXZvcml0ZXNMaXN0KCkge1xyXG4gICAgICAgIGlmICghdGhpcy5mYXZvcml0ZXNMaXN0Lmxlbmd0aCkge1xyXG4gICAgICAgICAgICB0aGlzLnNldEZhdm9yaXRlc0xpc3QodGhpcy5mYXZvcml0ZXNMaXN0KTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBpZHMgPSB0aGlzLmZhdm9yaXRlc0xpc3QubWFwKGl0ZW0gPT4gaXRlbVt0aGlzLmlkRmllbGRdKTtcclxuICAgICAgICBjb25zdCBwYXJhbTogYW55ID0ge1xyXG4gICAgICAgICAgICBhYnNPcmdUeXBlOiB0aGlzLmFic09yZ1R5cGUsXHJcbiAgICAgICAgICAgIGJpeklkOiB0aGlzLmJ1c051bSxcclxuICAgICAgICAgICAgb2JqZWN0VmFsdWU6ICdDb2xsZWN0T3JnJyxcclxuICAgICAgICAgICAgYWRkTGlzdDogW10sXHJcbiAgICAgICAgICAgIGRlbGV0ZUxpc3Q6IGlkc1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuY3VyZFJlY2VudENvbnRhY3RzT3JGYXZvcml0ZXMoJ21vZGlmeScsIHBhcmFtKS5zdWJzY3JpYmUoKHZhbCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmZhdm9yaXRlc0xpc3QgPSBbXTtcclxuICAgICAgICAgICAgdGhpcy5zZXRGYXZvcml0ZXNMaXN0KHRoaXMuZmF2b3JpdGVzTGlzdCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuIl19