/**
 * @fileoverview added by tsickle
 * Generated from: utils/state.mgr.tool.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Subject } from 'rxjs';
export class StateMgrTool {
    /**
     * @param {?} http
     */
    constructor(http) {
        this.http = http;
        this.slSubject = new Subject();
    }
    /**
     * @return {?}
     */
    get selectionsSubject() {
        return this.slSubject.asObservable();
    }
    /**
     * @param {?} value
     * @param {?} changeType
     * @param {?=} from
     * @return {?}
     */
    emitSelections(value, changeType, from = 'other') {
        this.slSubject.next({
            value,
            changeType,
            from
        });
    }
}
StateMgrTool.decorators = [
    { type: Injectable }
];
/** @nocollapse */
StateMgrTool.ctorParameters = () => [
    { type: HttpClient }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    StateMgrTool.prototype.slSubject;
    /**
     * @type {?}
     * @private
     */
    StateMgrTool.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGUubWdyLnRvb2wuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWFkbWlub3JnYW5pemF0aW9uLXNlbGVjdG9yLyIsInNvdXJjZXMiOlsidXRpbHMvc3RhdGUubWdyLnRvb2wudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxVQUFVLEVBQWUsTUFBTSxzQkFBc0IsQ0FBQztBQUUvRCxPQUFPLEVBQWMsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRzNDLE1BQU0sT0FBTyxZQUFZOzs7O0lBSXZCLFlBQ1UsSUFBZ0I7UUFBaEIsU0FBSSxHQUFKLElBQUksQ0FBWTtRQUhsQixjQUFTLEdBQUcsSUFBSSxPQUFPLEVBQVMsQ0FBQztJQUlyQyxDQUFDOzs7O0lBRUwsSUFBSSxpQkFBaUI7UUFDbkIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3ZDLENBQUM7Ozs7Ozs7SUFFRCxjQUFjLENBQUMsS0FBVSxFQUFFLFVBQXNCLEVBQUUsT0FBZSxPQUFPO1FBQ3ZFLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO1lBQ2xCLEtBQUs7WUFDTCxVQUFVO1lBQ1YsSUFBSTtTQUNMLENBQUMsQ0FBQztJQUNMLENBQUM7OztZQW5CRixVQUFVOzs7O1lBSkYsVUFBVTs7Ozs7OztJQU9qQixpQ0FBeUM7Ozs7O0lBR3ZDLDRCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSHR0cENsaWVudCwgSHR0cEhlYWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IENoYW5nZVR5cGUsIE9yZ1JlcXVlc3RQYXJhbSwgUGFyYW0gfSBmcm9tICcuL2luZGV4LnR5cGUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBTdGF0ZU1nclRvb2wge1xyXG5cclxuICBwcml2YXRlIHNsU3ViamVjdCA9IG5ldyBTdWJqZWN0PFBhcmFtPigpO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgaHR0cDogSHR0cENsaWVudFxyXG4gICkgeyB9XHJcblxyXG4gIGdldCBzZWxlY3Rpb25zU3ViamVjdCgpOiBPYnNlcnZhYmxlPFBhcmFtPiB7XHJcbiAgICByZXR1cm4gdGhpcy5zbFN1YmplY3QuYXNPYnNlcnZhYmxlKCk7XHJcbiAgfVxyXG5cclxuICBlbWl0U2VsZWN0aW9ucyh2YWx1ZTogYW55LCBjaGFuZ2VUeXBlOiBDaGFuZ2VUeXBlLCBmcm9tOiBzdHJpbmcgPSAnb3RoZXInKSB7XHJcbiAgICB0aGlzLnNsU3ViamVjdC5uZXh0KHtcclxuICAgICAgdmFsdWUsXHJcbiAgICAgIGNoYW5nZVR5cGUsXHJcbiAgICAgIGZyb21cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbn1cclxuIl19