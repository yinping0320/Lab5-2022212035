export interface OrgRequestParam {
    absOrgType: string;
    layer?: number;
    codeOrName?: string;
    name?: string;
    parentID?: string;
    isSearchTree?: boolean;
    getCurUser?: boolean;
    notGetStopOrg?: boolean;
    id?: string;
    idList?: string[];
    getAllParentOrg?: boolean;
    getOrgAllPath?: boolean;
    getOrgAllPathInfo?: boolean;
    withAllSub?: boolean;
    layerList?: number[];
}
export declare enum ChangeType {
    Append = "Append",
    Remove = "Remove",
    ValueChanged = "ValueChanged"
}
export interface Param {
    value: any;
    changeType: ChangeType;
    from: string;
}
export interface Organization {
    orgId: string;
    code: string;
    name: string;
    orgAllPath: string;
    path: string;
    layer: number;
    checked?: boolean;
    indexId?: string;
}
export interface Group {
    public: Array<GroupItem>;
    personal: Array<GroupItem>;
}
export interface GroupItem {
    id: string;
    title: string;
    index?: string;
    description?: string;
    total: number;
    avatar?: string;
    checked?: boolean;
}
export interface SaveGroupReqeustParam {
    groupId?: string;
    groupCode?: string;
    title?: string;
    description?: string;
    absOrgType?: string;
    addIds?: Array<string>;
    deleteIds?: Array<string>;
    changeType: Number;
}
export declare enum ValueType {
    Value = 0,
    Express = 1
}
export declare enum CompareType {
    Equal = 0,
    NotEqual = 1,
    Greater = 2,
    GreaterOrEqual = 3,
    Less = 4,
    LessOrEqual = 5,
    Like = 6,
    LikeStartWith = 7,
    LikeEndWith = 8,
    NotLike = 9,
    NotLikeStartWith = 10,
    NotLikeEndWith = 11,
    Is = 12,
    IsNot = 13,
    In = 14,
    NotIn = 15
}
export declare enum RelationType {
    Empty = 0,
    And = 1,
    Or = 2
}
