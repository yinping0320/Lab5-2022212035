import { AfterViewInit, EventEmitter, Injector, NgZone, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { DialogComponent } from '@farris/ui-dialog';
import { ApiService } from '../utils/api.service';
import { FavoritesTool } from '../utils/favorites.tool';
import { StateMgrTool } from '../utils/state.mgr.tool';
import { GroupComponent } from './tab-group/group.component';
import { OrganizationComponent } from './tab-organization/to.component';
import { FavoritesComponent } from './tab-favorites/favorites.component';
export declare class AdminOrganizationSelectorComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy, ControlValueAccessor {
    private render;
    private injector;
    private favoritesTool;
    private apiService;
    private ngZone;
    private stateMgr;
    baseCls: boolean;
    readonly bableTemplClass: boolean;
    width: string;
    dialog: DialogComponent;
    libOrgGroup: GroupComponent;
    libOrgTree: OrganizationComponent;
    libOrgFavorites: FavoritesComponent;
    isTableTemplate: boolean;
    showInput: boolean;
    busNum: string;
    multiSelect: boolean;
    placeholder: string;
    searchPlaceholder: string;
    readonly: boolean;
    absUserOrgUrl: string;
    absRfQueryUrl: string;
    absRfModifyUrl: string;
    groupApiUrl: string;
    groupExtendUrl: string;
    /**
     * 数据源类型
     * 默认为： System_organization  系统数据源   获取系统人员、系统组织
     * Administrative_organization  已扩展数据源  获取行政组织、行政人员
     * absOrgType {string}
     * PersonnelSelectorComponent
     */
    absOrgType: string;
    enableHierarchicalLoading: boolean;
    notGetStopOrg: boolean;
    primaryField: string;
    displayField: string;
    orgIds: string[];
    layer: number;
    cascadeCheck: boolean;
    cascadeDown: boolean;
    cascadeUp: boolean;
    showCheckAll: boolean;
    keepSelect: boolean;
    formatFn: (obj: any) => string;
    selectedLimit: number;
    showTabIds: string;
    activeTabId: string;
    searchPageSize: number;
    /** 字段映射, 仅在farris form中使用{ 帮助数据字段：表单字段 } */
    mapFields: {
        [sourceField: string]: string;
    };
    /** 多选分隔符 */
    multipleChoiceSeparator: string;
    draggable: boolean;
    virtualizedLoad: boolean;
    dataPermission: boolean;
    dataPermissionIds: string[];
    orgNameType: string;
    onlyDisplayCompany: boolean;
    onlyCurrentAdminOrg: boolean;
    onlyParentFinalText: boolean;
    quickSelect: boolean;
    selectionsChange: EventEmitter<any>;
    inputClear: EventEmitter<any>;
    tagRemoved: EventEmitter<any>;
    selections: any[];
    originalSelections: any[];
    finalText: any[];
    parentFinal: any[];
    abbreParentFinal: any[];
    lookupIcon: string;
    searchIcon: string;
    organizationTabId: string;
    groupTabId: string;
    favoritesTabId: string;
    dialogHeight: number;
    dialogId: string;
    isShow: boolean;
    private selectionsSub;
    private confirmToken;
    hideSearchPanel: boolean;
    searchText: string;
    onSearchToken: any;
    enableFavorites: boolean;
    enableGroup: boolean;
    groupDialogOpend: boolean;
    groupDialogTitle: string;
    groupTitle: string;
    groupNote: string;
    validGroupTitle: boolean;
    private groupTitleStream;
    ngControl: any;
    selectionsShow: boolean;
    private editingGroupId;
    private cdRef;
    private currentTabId;
    private messageService;
    private notifyService;
    orgTabActive: boolean;
    groupTabActive: boolean;
    againstSingleSelect: boolean;
    private localeService;
    languagesArray: ({
        code: string;
        name: string;
        default: boolean;
    } | {
        code: string;
        name: string;
        default?: undefined;
    })[];
    _onlyCurrentAdminOrg: boolean;
    farrisDialogbeforeClose: () => boolean;
    onModelChange: any;
    onModelTouched: any;
    constructor(render: Renderer2, injector: Injector, favoritesTool: FavoritesTool, apiService: ApiService, ngZone: NgZone, stateMgr: StateMgrTool);
    writeValue(obj: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState?(isDisabled: boolean): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private emitSelections;
    private mapFields2Component;
    private assembleDataByOrgIds;
    private assembleFinalText;
    initDialogHeight(): void;
    listenSelectionsChange(): void;
    private initTabs;
    private initGroupSearch;
    listenWindowResize(): void;
    private initFavorites;
    showFarrisDialog(): void;
    clearAll(): void;
    removeItem(data: any, index: number, event: any): void;
    clearSeletions(): void;
    onSearch(): void;
    clearSearch(): void;
    listenSearchText(e: any): void;
    listenClosePanelChange(e: any): void;
    closeGroupDialog(): void;
    listenGroupTitle(e: any): void;
    listenOpenGroup(e: any): void;
    listenGroupChange(item: any): void;
    saveGroup(): void;
    private updateNameOrNote;
    returnResult(type: number): void;
    changeTabs(e: any): void;
    quickShowDialog(e: any): void;
    private assembleParentFinal;
}
