/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
export class ListViewCheckoutComponent {
    constructor() {
        this.checkedChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @param {?} event
     * @return {?}
     */
    handleClick(event) {
        event.stopPropagation();
        if (!this.disabled) {
            this.checkedChange.emit({ originalEvent: event, checked: !this.checked });
        }
    }
}
ListViewCheckoutComponent.decorators = [
    { type: Component, args: [{
                selector: 'list-view-checkout',
                template: "<div class=\"custom-control custom-checkbox  custom-control-inline listview-checkbox\">\r\n    <input type=\"checkbox\" class=\"custom-control-input\"  [checked]=\"checked\">\r\n    <label class=\"custom-control-label\" (click)=\"handleClick($event)\"></label>\r\n</div>"
            }] }
];
/** @nocollapse */
ListViewCheckoutComponent.ctorParameters = () => [];
ListViewCheckoutComponent.propDecorators = {
    checked: [{ type: Input }],
    id: [{ type: Input }],
    disabled: [{ type: Input }],
    checkedChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    ListViewCheckoutComponent.prototype.checked;
    /** @type {?} */
    ListViewCheckoutComponent.prototype.id;
    /** @type {?} */
    ListViewCheckoutComponent.prototype.disabled;
    /** @type {?} */
    ListViewCheckoutComponent.prototype.checkedChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC12aWV3LWNoZWNrb3V0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktbGlzdC12aWV3LyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudC9saXN0LXZpZXctY2hlY2tvdXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBQyxNQUFNLEVBQUMsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBTzdFLE1BQU0sT0FBTyx5QkFBeUI7SUFPbEM7UUFGVSxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFFN0IsQ0FBQzs7OztJQUVqQixRQUFRLEtBQUssQ0FBQzs7Ozs7SUFFZCxXQUFXLENBQUMsS0FBaUI7UUFDekIsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2hCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEVBQUMsYUFBYSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFDLENBQUMsQ0FBQztTQUMzRTtJQUNMLENBQUM7OztZQXJCSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLG9CQUFvQjtnQkFDOUIsMFJBQWtEO2FBQ3JEOzs7OztzQkFHSSxLQUFLO2lCQUNMLEtBQUs7dUJBQ0wsS0FBSzs0QkFFTCxNQUFNOzs7O0lBSlAsNENBQTBCOztJQUMxQix1Q0FBb0I7O0lBQ3BCLDZDQUEyQjs7SUFFM0Isa0RBQTZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LE91dHB1dCxFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdsaXN0LXZpZXctY2hlY2tvdXQnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL2xpc3Qtdmlldy1jaGVja291dC5jb21wb25lbnQuaHRtbCdcclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBMaXN0Vmlld0NoZWNrb3V0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIEBJbnB1dCgpIGNoZWNrZWQ6IGJvb2xlYW47XHJcbiAgICBASW5wdXQoKSBpZDogc3RyaW5nO1xyXG4gICAgQElucHV0KCkgZGlzYWJsZWQ6IGJvb2xlYW47XHJcblxyXG4gICAgQE91dHB1dCgpIGNoZWNrZWRDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgICBuZ09uSW5pdCgpIHsgfVxyXG5cclxuICAgIGhhbmRsZUNsaWNrKGV2ZW50OiBNb3VzZUV2ZW50KSB7XHJcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgaWYgKCF0aGlzLmRpc2FibGVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2hlY2tlZENoYW5nZS5lbWl0KHtvcmlnaW5hbEV2ZW50OiBldmVudCwgY2hlY2tlZDogIXRoaXMuY2hlY2tlZH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0=