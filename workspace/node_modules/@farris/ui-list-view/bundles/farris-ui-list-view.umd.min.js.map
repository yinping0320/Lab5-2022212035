{"version":3,"sources":["ng://@farris/ui-list-view/lib/list-view.service.ts","node_modules/tslib/tslib.es6.js","ng://@farris/ui-list-view/lib/template.directive.ts","ng://@farris/ui-list-view/lib/list-view.component.ts","ng://@farris/ui-list-view/lib/component/list-view-checkout.component.ts","ng://@farris/ui-list-view/lib/selected-listitem-formatter.pipe.ts","ng://@farris/ui-list-view/lib/list-view.module.ts"],"names":["ListViewService","Injectable","args","providedIn","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","ListViewHeaderTemplateDirective","Directive","selector","TemplateRef","template","ListViewTemplateDirective","ListViewFooterTemplateDirective","ListViewEmptyTemplateDirective","defineProperty","ListViewComponent","_activeIndex","val","dataInit","_keepScrollPosition","undefined","bindScrollEvent","observerElement","_pageList","pager","setPageList","_total","paginationOptions","totalItems","fill","ngOnInit","id","Date","getTime","itemsPerPage","pageSize","currentPage","pageIndex","pageList","total","remote","pagerOnServer","currentData","data","ngOnChanges","changes","_this","isFirstChange","changeCurrentData","checkValues","differenceBy","currentValue","previousValue","v","enableMorePageSelect","checkRows","checkItems","selectDataListWithOtherPager","ids","map","listidName","checkedItems","ngAfterViewInit","ngAfterContentInit","ngOnDestroy","ro","unobserve","scrollEl","nativeElement","contentElBindScroll","removeEventListener","searchList","searchField","filter","list","result","listValue","values","toString","includes","gotoScrollTop","listdata","searchValue","listSelect","event","listItem","index","checkChangeEvent","isClickCheckbox","checkChange","emit","selectItemIndex","selectDataList","findIndex","item","getKey","multipleSelect","keepSelect","splice","updateDataListForMorePager","unshift","clickItem","listClick","checked","onCheckValuesChange","getSelect","changeData","state","sort","sortkeyName","sortType","compare","sortResult","selectRow","primaryValue","row","find","cdr","markForCheck","KeyName","type","obj1","obj2","val1","val2","getItemActive","onPageChange","page","pageChanged","pageInfo","onPageSizeChange","pageLength","Math","floor","pageSizeChanged","getCurrentData","getSelectData","setData","listviewData","activeIndex","dataItem","detectChanges","active","Array","isArray","indexOf","a","checkItemsChange","items","instance","newCheckeds_1","sameBy","forEach","listCheckAll","updateCheckedValues","listCheckAllCancel","checkValuesChange","onMouseEnter","$event","stopPropagation","mouseInSelectedList","openSelectedList","closeSelectedList","onDelSelectedItem","onClearSelected","onSelectListPanelClose","clearCheckeds","clearAll","_setItemsCheckedStatus","unCheckItems","keepScrollPosition","scrollRecord","bind","addEventListener","scrollToRecordPosition","scrollTarget","scrollTop","scrollPos","abs","resetRecord","inject","ngZone","get","NgZone","runOutsideAngular","ResizeObserver","entries","observer","tempHeight","contentRect","height","observe","compareDataThenScrollTop","oldData","newData","idField_1","needScrollTop","Component","ElementRef","Renderer2","ChangeDetectorRef","Injector","decorators","Optional","ContentChild","read","Input","ViewChild","Output","HostBinding","el","renderer","showEmpty","emptyTemplate","supportPaging","showSelectedList","selectedItemFormat","cardLayout","EventEmitter","showPageList","showPageInfo","showPageNumber","showGotoInput","scrollHeight","clientHeight","maxSize","directionLinks","autoHide","responsive","labels","previousLabel","nextLabel","screenReaderPaginationLabel","screenReaderPageLabel","screenReaderCurrentLabel","b","fn","Set","has","ListViewCheckoutComponent","handleClick","disabled","checkedChange","originalEvent","SelectedListFormatPipe","transform","formatter","listViewRef","d","text","txt","keys","k","join","Pipe","name","ListViewModule","NgModule","declarations","imports","CommonModule","FormsModule","LocaleModule","forRoot","FarrisCommonModule","PaginationModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ListViewService {\r\n\r\n  constructor() { }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n  selector: '[listViewHeader]'\r\n})\r\nexport class ListViewHeaderTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[listTemplate]'\r\n})\r\nexport class ListViewTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[listViewFooter]'\r\n})\r\nexport class ListViewFooterTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[listViewEmpty]'\r\n})\r\nexport class ListViewEmptyTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}","import {\r\n    Component, OnInit, AfterContentInit, ElementRef, TemplateRef, ContentChild, Output, EventEmitter, Input, Renderer2, ViewChild,\r\n    AfterViewInit, HostBinding, SimpleChanges, OnChanges, ChangeDetectorRef, DoCheck, NgZone, Injector, Optional, AfterViewChecked, OnDestroy\r\n} from '@angular/core';\r\nimport {\r\n    ListViewHeaderTemplateDirective,\r\n    ListViewTemplateDirective,\r\n    ListViewFooterTemplateDirective,\r\n    ListViewEmptyTemplateDirective,\r\n} from './template.directive';\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\nimport { PaginationInstance, PaginationControlsComponent } from '@farris/ui-pagination';\r\n\r\nimport { ComponentTemplateRef, ComponentTemplateFn } from '@farris/ui-common'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'farris-list-view',\r\n    templateUrl: './list-view.component.html',\r\n    styleUrls: ['./list-view.component.scss']\r\n})\r\nexport class ListViewComponent implements OnInit, OnChanges, AfterContentInit, AfterViewInit, OnDestroy {\r\n\r\n    @ContentChild(ListViewHeaderTemplateDirective, { read: TemplateRef }) headerTemplate: TemplateRef<any>;\r\n    @ContentChild(ListViewTemplateDirective, { read: TemplateRef }) listTemplate: TemplateRef<any>;\r\n    @ContentChild(ListViewFooterTemplateDirective, { read: TemplateRef }) footerTemplate: TemplateRef<any>;\r\n    @ContentChild(ListViewEmptyTemplateDirective, { read: TemplateRef }) emptyDataTemplate: TemplateRef<any>;\r\n\r\n\r\n    @Input() headerComponentType: ComponentTemplateRef;\r\n    @Input() listComponentType: ComponentTemplateFn;\r\n    @Input() emptyComponentType: ComponentTemplateRef;\r\n    @Input() footerComponentType: ComponentTemplateRef;\r\n\r\n\r\n    @ViewChild('scrollEl') scrollEl: ElementRef;\r\n    @ViewChild('listGroup') listGroup: ElementRef;\r\n    @ViewChild('pager') pager: PaginationControlsComponent;\r\n\r\n    // @Input() height:number;\r\n    /** åè¡¨æ°æ® */\r\n    @Input() data = [];\r\n\r\n    @Input() id: string;\r\n\r\n    /** æ°æ®ä¸ºç©ºæ¯å¦å±ç¤ºé»è®¤ */\r\n    @Input() showEmpty = true;\r\n    /** æ¯å¦èªå®ä¹ç©ºæ°æ®æ¨¡æ¿ */\r\n    @Input() emptyTemplate = false;\r\n    /** æ¯å¦æ¯æå¤é é»è®¤ä¸ºfalse */\r\n    @Input() multipleSelect = false;\r\n\r\n    /** æ¯å¦æ¯æåé¡µ é»è®¤false */\r\n    @Input() supportPaging = false;\r\n\r\n    // é»è®¤åé¡µ\r\n    @Input() pagerOnServer = true;\r\n    @Input() pageSize = 10;\r\n    @Input() pageIndex = 1;\r\n    /** å¯ç¨è·¨é¡µå¤é */\r\n    @Input() enableMorePageSelect = false;\r\n    @Input() showSelectedList = false;\r\n    @Input() selectedItemFormat: (item: any) => string = null;\r\n\r\n    /**\r\n     * ä¿æéä¸­ç¶æï¼é»è®¤ä¸º trueï¼ å¯ç¨å¤éåææã\r\n     * å½è®¾ä¸ºfalseæ¶ï¼éä¸­é¡¹åæ¬¡ç¹å»å°åæ¶éä¸­ç¶æ\r\n     */\r\n    @Input() keepSelect = true;\r\n\r\n\r\n    // æ¯å¦å¹³éº\r\n    @Input() fill = false;\r\n    // æ¯å¦æ¨ªåæå\r\n    @Input() cardLayout = false;\r\n\r\n    _activeIndex: number;\r\n    get activeIndex() {\r\n        return this._activeIndex;\r\n    }\r\n    @Input() set activeIndex(val) {\r\n        this._activeIndex = val;\r\n        this.dataInit();\r\n    }\r\n\r\n    @Input() listClassName: string;\r\n    /**\r\n     * å¾éå¼\r\n     */\r\n    @Input() checkValues: any[] = [];\r\n    @Output() checkValuesChange: EventEmitter<any[]> = new EventEmitter<any[]>();\r\n\r\n    @Input() checkItems = [];\r\n    @Input() checkItemsChange: EventEmitter<{ items: any[], instance: any }> = new EventEmitter<{ items: [], instance: any }>();\r\n\r\n    // @Input() borderBottom:boolean = true;\r\n    @Input() showPageList = true;\r\n    @Input() showPageInfo = true;\r\n    @Input() showPageNumber = true;\r\n    @Input() showGotoInput = false;\r\n    // ä¿çæ»å¨æ¡ä½ç½®\r\n    private _keepScrollPosition = false;\r\n    @Input()\r\n    set keepScrollPosition(val) {\r\n        if (val != undefined) {\r\n            this._keepScrollPosition = val;\r\n            this.bindScrollEvent();\r\n            this.observerElement();\r\n        }\r\n    }\r\n    get keepScrollPosition() {\r\n        return this._keepScrollPosition;\r\n    }\r\n    private contentElBindScroll = null;\r\n    // è®°å½ä½ç½®\r\n    private scrollPos = { scrollHeight: 0, clientHeight: 0, scrollTop: 0 };\r\n    // å¤çngzone\r\n    private ngZone = null;\r\n    // è®°å½åç´ å°ºå¯¸åæ´\r\n    private ro: ResizeObserver | null = null;\r\n\r\n    private _pageList = [10, 20, 30, 50, 100];\r\n\r\n    get pageList() {\r\n        return this._pageList;\r\n    }\r\n    @Input() set pageList(val) {\r\n        this._pageList = val;\r\n        if (this.pager) {\r\n            this.pager.setPageList(val);\r\n        }\r\n    }\r\n\r\n    private _total = 0;\r\n    @Input()\r\n    set total(val) {\r\n        if (this._total !== val) {\r\n            this._total = val || 0;\r\n            this.paginationOptions = Object.assign(this.paginationOptions || {}, { totalItems: val });\r\n        }\r\n    }\r\n\r\n    get total() {\r\n        return this._total;\r\n    }\r\n\r\n    /** ä½ä¸ºå¯ä¸æ è¯çæ°æ®keyå¼ å¦ææ²¡ä¼  å¯ä¸æ è¯ä¸ºindexå¼ */\r\n    @Input() listidName = 'id';\r\n\r\n    @HostBinding('class.f-listview-fill') get listviewFill() { return this.fill; }\r\n\r\n\r\n    /** ç¹å»æä¸è¡å */\r\n    @Output() listClick = new EventEmitter();\r\n    /** å¤éæ¡ éä¸­ç¶æåå */\r\n    @Output() checkChange = new EventEmitter();\r\n\r\n    // åé¡µäºä»¶\r\n    @Output() pageChanged = new EventEmitter();\r\n    @Output() pageSizeChanged = new EventEmitter();\r\n\r\n    /** å½åå±ç¤ºåè¡¨æ°æ® */\r\n    currentData = [];\r\n\r\n    /** éä¸­çåè¡¨æ°ç» */\r\n    selectDataList = [];\r\n    /** è·¨é¡µå¤éè®°å½ */\r\n    selectDataListWithOtherPager = [];\r\n\r\n    // å½åç¹å»\r\n    public clickItem: any;\r\n\r\n    public maxSize = 7;\r\n    public directionLinks = true;\r\n    public autoHide = false;\r\n    public responsive = true;\r\n    public paginationOptions: any = {};\r\n\r\n    public labels: any = {\r\n        previousLabel: ' ',\r\n        nextLabel: ' ',\r\n        screenReaderPaginationLabel: 'Pagination',\r\n        screenReaderPageLabel: 'page',\r\n        screenReaderCurrentLabel: `You're on page`\r\n    };\r\n\r\n    mouseInSelectedList = false;\r\n    openSelectedList = false;\r\n    private zone: NgZone;\r\n\r\n    constructor(private el: ElementRef, private renderer: Renderer2, private cdr: ChangeDetectorRef, @Optional() private inject: Injector) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.paginationOptions = {\r\n            id: 'Farris-listView-Pagination_' + (this.id || new Date().getTime()),\r\n            itemsPerPage: this.pageSize,\r\n            currentPage: this.pageIndex,\r\n            pageList: this.pageList,\r\n            totalItems: this.total,\r\n            remote: this.pagerOnServer\r\n        };\r\n        this.bindScrollEvent();\r\n        this.observerElement();\r\n\r\n        this.currentData = this.data;\r\n        this.dataInit();\r\n        // this.tRouter.events.pipe(\r\n        //     filter((event) => event instanceof NavigationEnd)\r\n        // ).subscribe((event: NavigationEnd) => {\r\n        //         console.log('è®°å½è·¯ç±');\r\n        //     });\r\n    }\r\n\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.data && !changes.data.isFirstChange()) {\r\n            this.changeCurrentData(this.data);\r\n        }\r\n        if (changes['total'] && !changes.total.isFirstChange()) {\r\n            this.paginationOptions['totalItems'] = this.total;\r\n            this.paginationOptions = { ...this.paginationOptions };\r\n        }\r\n        if (changes['pageIndex'] && !changes.pageIndex.isFirstChange()) {\r\n            this.paginationOptions['currentPage'] = this.pageIndex;\r\n            this.paginationOptions = { ...this.paginationOptions };\r\n        }\r\n\r\n        if (changes['pageSize'] && !changes.pageSize.isFirstChange()) {\r\n            this.paginationOptions['itemsPerPage'] = this.pageSize;\r\n            this.paginationOptions = { ...this.paginationOptions };\r\n        }\r\n\r\n        /**\r\n         * å¯¹æ¯æ´æ°ï¼å¤æ­ææ´æ°çæ¶åä¸æ¯è·¨é¡µå¤éçæ¶ï¼æ´æ°å·²éè¡ä¿¡æ¯\r\n         */\r\n        if (changes.checkValues && !changes.checkValues.isFirstChange()) {\r\n            const change = this.differenceBy(changes.checkValues.currentValue || [], changes.checkValues.previousValue || [], v => {\r\n                return v;\r\n            });\r\n            if (change) {\r\n                if (!this.enableMorePageSelect) {\r\n                    this.checkRows(this.checkValues);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (changes.checkItems && !changes.checkItems.isFirstChange()) {\r\n            this.selectDataListWithOtherPager = [...this.checkItems];\r\n            const ids = this.checkItems.map(n => n[this.listidName]);\r\n            this.checkedItems(ids, false);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n    ngAfterContentInit() {\r\n    }\r\n    ngOnDestroy() {\r\n        // åæ¶çå¬å°ºå¯¸åæ´\r\n        if (this.ro) {\r\n            this.ro.unobserve(this.scrollEl.nativeElement);\r\n            this.ro = null;\r\n        }\r\n        // åæ¶ç»å®\r\n        if (this.contentElBindScroll) {\r\n            this.scrollEl.nativeElement.removeEventListener('scroll', this.contentElBindScroll);\r\n            this.contentElBindScroll = null;\r\n        }\r\n    }\r\n\r\n\r\n    /**23å¹´11æ20æ¥\r\n     * åé¨æä¾çæç´¢æ¹æ³ï¼æå®è¿æ»¤å­ç¬¦ä¸²ï¼è¿æ»¤æ°æ®çææå±æ§\r\n     * ä½¿ç¨åºæ¯ï¼åè¡¨è§å¾å¤´é¨æ¨¡çå¯ä»¥æ¾ç½®æ¥è¯¢ãæåºåè½ï¼ç¹å»æé®çæ¥è¯¢åè½å¯ä»¥è°ç¨è¿ä¸ªæ¹æ³\r\n     * */\r\n    searchList(searchField) {\r\n        if (searchField !== '' && this.data && this.data.length) {\r\n            this.currentData = this.data.filter((list) => {\r\n                let result;\r\n                const listValue = Object.values(list);\r\n                for (let i = 0; i < listValue.length; i++) {\r\n                    if (typeof listValue[i] == 'string') {\r\n                        if (listValue[i].toString().includes(searchField)) {\r\n                            result = listValue[i].toString().includes(searchField);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            });\r\n            // éç½®è®°å½å¹¶æ»å¨å°é¡¶é¨\r\n            this.gotoScrollTop();\r\n        } else {\r\n            this.currentData = this.data;\r\n        }\r\n        return { listdata: this.currentData, searchValue: searchField, length: this.currentData.length }\r\n    }\r\n\r\n    /** ç¹å»æä¸åäºä»¶ */\r\n    listSelect(event, listItem, index, checkChangeEvent = false) {\r\n        const isClickCheckbox = typeof event === 'boolean';\r\n\r\n        if (listItem['unClick'] || listItem['selectDisable']) {\r\n            return;\r\n        } else {\r\n            this.checkChange.emit({ listdata: listItem, index });\r\n            const selectItemIndex = this.selectDataList.findIndex((item, i) => {\r\n                return this.getKey(item, i) === this.getKey(listItem, index);\r\n            });\r\n            if (this.multipleSelect) {\r\n                if (listItem['checked']) {\r\n                    if (!this.keepSelect || isClickCheckbox) {\r\n                        // æ¯æå¤é å é¤è¯¥éä¸­è¡\r\n                        this.selectDataList.splice(selectItemIndex, 1);\r\n                        this.updateDataListForMorePager('remove', listItem);\r\n                        listItem['checked'] = false;\r\n                    } else {\r\n                        this.selectDataList.splice(selectItemIndex, 1);\r\n                        this.selectDataList.unshift(listItem);\r\n                    }\r\n                } else {\r\n                    // æ¯æå¤é æå¥è¯¥éä¸­è¡\r\n                    if (selectItemIndex === -1) {\r\n                        this.selectDataList.unshift(listItem);\r\n                        this.updateDataListForMorePager('append', listItem);\r\n                    } else {\r\n                        this.selectDataList.splice(selectItemIndex, 1);\r\n                        this.selectDataList.unshift(listItem);\r\n                    }\r\n                    listItem['checked'] = true;\r\n                }\r\n            } else {\r\n                // ä¸æ¯æå¤é æ¿æ¢å½åéä¸­è¡\r\n                this.selectDataList = [];\r\n                this.selectDataList.push(listItem);\r\n            }\r\n            if (!checkChangeEvent) {\r\n                this.clickItem = listItem;\r\n            }\r\n            this.listClick.emit({ data: this.selectDataList, index, checkChangeEvent });\r\n        }\r\n        if (this.multipleSelect) {\r\n            let ids = this.data.filter(item => !!item.checked).map(item => item[this.listidName]);\r\n            if (this.enableMorePageSelect) {\r\n                ids = this.selectDataListWithOtherPager.map(item => item[this.listidName]);\r\n            }\r\n            this.onCheckValuesChange(ids);\r\n        }\r\n    }\r\n\r\n    /** è·å¾æ¯ä¸è¡list å¯ä¸æ è¯ */\r\n    getKey(list, index) {\r\n        if (this.listidName && list.hasOwnProperty(this.listidName)) {\r\n            return list[this.listidName];\r\n        } else {\r\n            return index;\r\n        }\r\n    }\r\n\r\n    /** checkboxç¶æåå */\r\n    getSelect(event, changeData, i) {\r\n        const state = event.checked;\r\n        this.listSelect(state, changeData, i, true);\r\n    }\r\n\r\n   /**23å¹´11æ20æ¥\r\n    * åé¨æä¾çæåºæ¹æ³ï¼æå®æåºå­æ®µãååºè¿æ¯éåº\r\n  * ä½¿ç¨åºæ¯ï¼åè¡¨è§å¾å¤´é¨æ¨¡çå¯ä»¥æå®æ¥è¯¢ãæåºåè½ï¼ç¹å»æé®çæåºåè½å¯ä»¥è°ç¨è¿ä¸ªæ¹æ³\r\n  * */\r\n    sort(sortkeyName, sortType = 'asc') {\r\n        this.currentData.sort(this.compare(sortkeyName, sortType));\r\n        // æ»å¨å°é¡¶é¨\r\n        this.gotoScrollTop();\r\n        return { sortResult: { listdata: this.currentData, sortkeyName, sortType } };\r\n    }\r\n\r\n\r\n    public selectRow(primaryValue: any) {\r\n        if (this.currentData && this.currentData.length > 0) {\r\n            const row = this.currentData.find(item => item[this.listidName] === primaryValue);\r\n            if (row) {\r\n                this.clickItem = row;\r\n                this.cdr.markForCheck();\r\n            }\r\n        }\r\n\r\n    }\r\n    private compare(KeyName, type) {\r\n        if (type === 'desc') {\r\n            return (obj1, obj2) => {\r\n                const val1 = obj1[KeyName];\r\n                const val2 = obj2[KeyName];\r\n                if (val2 < val1) {\r\n                    return 1;\r\n                } else if (val2 > val1) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            };\r\n        }\r\n        if (type === 'asc') {\r\n            return (obj1, obj2) => {\r\n                const val1 = obj1[KeyName];\r\n                const val2 = obj2[KeyName];\r\n                if (val2 > val1) {\r\n                    return 1;\r\n                } else if (val2 < val1) {\r\n                    return -1;\r\n                } else { return 0; }\r\n            };\r\n        }\r\n    }\r\n\r\n    getItemActive(item) {\r\n        // ä¸ç®¡æ¯å¦å¼å¯å¤éï¼å½åè¡åªæä¸è¡\r\n        if (this.listidName && this.clickItem) {\r\n            return item[this.listidName] === this.clickItem[this.listidName];\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * é¡µç æ¹å\r\n     * @param page \r\n     */\r\n    onPageChange(page: { pageIndex: number, pageSize: number }) {\r\n        if (this.pageIndex !== page.pageIndex) {\r\n            this.pageIndex = page.pageIndex;\r\n            this.paginationOptions.currentPage = page.pageIndex;\r\n            // this.paginationOptions = {...this.paginationOptions};\r\n            this.pageChanged.emit({ pageInfo: page });\r\n            // æ»å¨å°é¡¶é¨\r\n            this.gotoScrollTop();\r\n        }\r\n    }\r\n    /**\r\n     * æ¹ååé¡µå¤§å°\r\n     * @param pageSize \r\n     */\r\n    onPageSizeChange(pageSize: number) {\r\n        // console.log(this.pageSize !== pageSize && this.total);\r\n        if (this.pageSize !== pageSize && this.total) {\r\n            this.paginationOptions.itemsPerPage = pageSize;\r\n            this.pageSize = pageSize;\r\n\r\n            const total = this.total;\r\n            let pageLength = Math.floor(total / pageSize);\r\n            if (total % pageSize > 0) {\r\n                pageLength += 1;\r\n            }\r\n\r\n            if (pageLength && this.pageIndex > pageLength) {\r\n                this.pageIndex = pageLength;\r\n                this.paginationOptions.currentPage = this.pageIndex;\r\n            }\r\n            // this.paginationOptions = {...this.paginationOptions};            \r\n            this.pageSizeChanged.emit({ pageInfo: { pageIndex: this.pageIndex, pageSize } });\r\n             // æ»å¨å°é¡¶é¨\r\n             this.gotoScrollTop();\r\n        }\r\n    }\r\n\r\n    getCurrentData() {\r\n        return this.currentData;\r\n    }\r\n\r\n    getSelectData() {\r\n        return this.selectDataList;\r\n    }\r\n    /**23å¹´11æ20æ¥\r\n     * æ¯æéæ°è®¾ç½®listviewæ°æ® \r\n     * æ­¤æ¹æ³å¼è¢«kendo-bindingä½¿ç¨ï¼ç»å®æ°æ®\r\n    */\r\n    setData(listviewData) {\r\n        this.data = listviewData;\r\n        this.changeCurrentData(listviewData);\r\n    }\r\n\r\n    dataInit() {\r\n        if (this.data && this.data.length) {\r\n            this.selectDataList = this.data.filter((list) => {\r\n                return list['checked'];\r\n            });\r\n            if (this.activeIndex >= 0 && this.activeIndex <= (this.data.length - 1)) {\r\n                const dataItem = this.data[this.activeIndex];\r\n                if (dataItem) {\r\n                    this.clickItem = dataItem;\r\n                    this.selectDataList.push(this.clickItem);\r\n                }\r\n            } else if (this.activeIndex < 0) {\r\n                return;\r\n            } else {\r\n                if (!this.selectDataList.length && !this.multipleSelect) {\r\n                    this.selectDataList.push(this.data[0]);\r\n                }\r\n                this.clickItem = this.data[0];\r\n            }\r\n        }\r\n\r\n        this.updateDataListForMorePager();\r\n\r\n        if (this.cdr) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n\r\n    private updateDataListForMorePager(active: 'remove' | 'append' | '' = '', listItem?: any, emit = true) {\r\n        if (this.multipleSelect && this.enableMorePageSelect) {\r\n\r\n            if (active === 'remove' && listItem) {\r\n                if (!Array.isArray(listItem)) {\r\n                    this.selectDataListWithOtherPager =\r\n                        this.selectDataListWithOtherPager.filter(n => {\r\n                            if (typeof listItem === 'object') {\r\n                                return n[this.listidName] != listItem[this.listidName];\r\n                            } else {\r\n                                return n[this.listidName] != listItem;\r\n                            }\r\n                        });\r\n                } else {\r\n                    this.selectDataListWithOtherPager =\r\n                        this.selectDataListWithOtherPager.filter(n => {\r\n                            return listItem.indexOf(a => a[this.listidName] === n[this.listidName]) === -1;\r\n                        });\r\n                }\r\n\r\n                if (emit) {\r\n                    this.checkItemsChange.emit({ items: [...this.selectDataListWithOtherPager], instance: this });\r\n                }\r\n\r\n            } else if (active === 'append') {\r\n                if (!Array.isArray(listItem)) {\r\n                    this.selectDataListWithOtherPager = [...this.selectDataListWithOtherPager, listItem];\r\n                } else {\r\n                    this.selectDataListWithOtherPager = [...this.selectDataListWithOtherPager, ...listItem];\r\n                }\r\n\r\n                if (emit) {\r\n                    this.checkItemsChange.emit({ items: [...this.selectDataListWithOtherPager], instance: this });\r\n                }\r\n            } else {\r\n                if (!this.selectDataListWithOtherPager.length) {\r\n                    this.selectDataListWithOtherPager = [...this.selectDataList];\r\n                } else {\r\n\r\n                    const newCheckeds = this.sameBy(this.currentData, this.selectDataListWithOtherPager, (v) => v[this.listidName]);\r\n                    if (newCheckeds && newCheckeds.length) {\r\n                        this.data.forEach(item => {\r\n                            item.checked = newCheckeds.includes(item[this.listidName]);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /** å¨é */\r\n    listCheckAll() {\r\n        if (this.multipleSelect) {\r\n            this.currentData.forEach(item => {\r\n                item.checked = true;\r\n            });\r\n            this.selectDataList = this.currentData.filter((list) => {\r\n                return list['checked'];\r\n            });\r\n            this.updateDataListForMorePager('append', this.currentData);\r\n            this.updateCheckedValues(true);\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n    /** åæ¶å¨é */\r\n    listCheckAllCancel() {\r\n        if (this.multipleSelect) {\r\n            this.currentData.forEach(item => {\r\n                item.checked = false;\r\n            });\r\n            this.selectDataList = [];\r\n            this.updateDataListForMorePager('remove', this.currentData);\r\n            this.updateCheckedValues(true);\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n    /**\r\n     * å¾éè¡\r\n     * @param ids ids\r\n     */\r\n    public checkRows(ids: any[]): void {\r\n        if (this.multipleSelect) {\r\n            if (!ids || ids.length < 1) {\r\n                this.listCheckAllCancel();\r\n                return;\r\n            }\r\n            this.data.forEach(item => {\r\n                if (ids.includes(item[this.listidName])) {\r\n                    item.checked = true;\r\n                } else {\r\n                    item.checked = false;\r\n                }\r\n            });\r\n\r\n            // this.onCheckValuesChange(ids);\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n\r\n    private onCheckValuesChange(ids: any[]) {\r\n        this.checkValuesChange.emit(ids);\r\n    }\r\n\r\n    private differenceBy = (a, b, fn) => {\r\n        const s = new Set(b.map(fn));\r\n        return a.map(fn).filter(el => !s.has(el));\r\n    }\r\n\r\n    private sameBy = (a, b, fn) => {\r\n        const s = new Set(b.map(fn));\r\n        return a.map(fn).filter(el => s.has(el));\r\n    }\r\n\r\n\r\n    onMouseEnter($event) {\r\n        $event.stopPropagation();\r\n\r\n        this.mouseInSelectedList = true;\r\n        if (this.selectDataListWithOtherPager && this.selectDataListWithOtherPager.length) {\r\n            this.openSelectedList = !this.openSelectedList;\r\n        } else {\r\n            this.openSelectedList = false;\r\n        }\r\n    }\r\n\r\n\r\n    closeSelectedList() {\r\n        this.openSelectedList = false;\r\n        this.mouseInSelectedList = false;\r\n        if (!this.cdr['destroyed']) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n\r\n    onDelSelectedItem(id: any) {\r\n        this.currentData.forEach(item => {\r\n            if (item[this.listidName] == id) {\r\n                item.checked = false;\r\n            }\r\n        });\r\n\r\n        this.selectDataList = this.selectDataList.filter(n => n[this.listidName] != id);\r\n        this.updateDataListForMorePager('remove', id);\r\n\r\n        this.updateCheckedValues();\r\n\r\n    }\r\n\r\n    onClearSelected($event) {\r\n        // this.clearSelectedItem.emit();\r\n        this.closeSelectedList();\r\n        this.listCheckAllCancel();\r\n\r\n        this.selectDataListWithOtherPager = [];\r\n        this.checkValues = [];\r\n        this.onCheckValuesChange([]);\r\n    }\r\n\r\n    onSelectListPanelClose($event) {\r\n        this.closeSelectedList();\r\n    }\r\n\r\n    private updateCheckedValues(emit = true) {\r\n        if (this.multipleSelect) {\r\n            if (!this.enableMorePageSelect) {\r\n                this.checkValues = this.selectDataList.map(n => n[this.listidName]);\r\n            } else {\r\n                this.checkValues = this.selectDataListWithOtherPager.map(n => n[this.listidName]);\r\n            }\r\n\r\n            if (emit) {\r\n                this.onCheckValuesChange(this.checkValues);\r\n                this.checkItemsChange.emit({ items: this.selectDataListWithOtherPager, instance: this });\r\n            }\r\n        }\r\n    }\r\n\r\n    clearCheckeds(clearAll = true, emit = true) {\r\n        if (this.multipleSelect) {\r\n            this.currentData.forEach(item => {\r\n                item.checked = false;\r\n            });\r\n            this.selectDataList = [];\r\n\r\n            if (clearAll) {\r\n                this.selectDataListWithOtherPager = [];\r\n            } else {\r\n                this.updateDataListForMorePager('remove', this.currentData);\r\n            }\r\n\r\n            if (emit) {\r\n                this.updateCheckedValues(emit);\r\n            }\r\n\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n\r\n    private _setItemsCheckedStatus(ids: any, checked: boolean, emit: boolean) {\r\n        if (ids && ids.length) {\r\n            const action = checked ? 'append' : 'remove';\r\n            ids.forEach(i => {\r\n                let id = i;\r\n                if (typeof i === 'object') {\r\n                    id = i[this.listidName];\r\n                }\r\n\r\n                const item = this.data.find(n => n[this.listidName] === id);\r\n                if (item) {\r\n                    item.checked = checked;\r\n                }\r\n\r\n                if (checked) {\r\n                    this.updateDataListForMorePager('append', i, false);\r\n                } else {\r\n                    this.updateDataListForMorePager('remove', id, false);\r\n                }\r\n            });\r\n\r\n            this.updateCheckedValues(emit);\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n\r\n    unCheckItems(ids: number[] | string[] | object[], emit = false) {\r\n        this._setItemsCheckedStatus(ids, false, emit);\r\n    }\r\n\r\n    checkedItems(ids: object[], emit = false) {\r\n        this._setItemsCheckedStatus(ids, true, emit);\r\n    }\r\n    /**\r\n     * ç»å®\r\n     */\r\n    bindScrollEvent() {\r\n        if (!this.scrollEl) { return; }\r\n        if (this.keepScrollPosition) {\r\n            if (!this.contentElBindScroll) {\r\n                this.contentElBindScroll = this.scrollRecord.bind(this);\r\n                this.scrollEl.nativeElement.addEventListener('scroll', this.contentElBindScroll);\r\n            }\r\n        } else {\r\n            if (this.contentElBindScroll) {\r\n                this.scrollEl.nativeElement.removeEventListener('scroll', this.contentElBindScroll);\r\n                this.contentElBindScroll = null;\r\n            }\r\n        }\r\n\r\n    }\r\n    /**\r\n     * å¤æ­æ¯å¦éè¦æ»å¨å°ä½ç½®\r\n     * @returns \r\n     */\r\n    private scrollToRecordPosition() {\r\n        let scrollTarget = this.scrollEl.nativeElement;\r\n        // å¯ç¨ä¿ææ»å¨ä½ç½®æèåç´ æ»å¨æ¡ä½ç½®>0æèè®°å½æ»å¨æ¡ä½ç½®å¨é¡¶é¨æèè®°å½ä¸åç´ æ»å¨æ¡ç¸ç­\r\n        if (!this.keepScrollPosition || scrollTarget.scrollTop > 0 || this.scrollPos.scrollTop == 0 || Math.abs(this.scrollPos.scrollTop-scrollTarget.scrollTop)<=2) {\r\n            return;\r\n        }\r\n        // æ²¡æåæ´\r\n        let findScrollIndex = ['scrollHeight', 'clientHeight'].findIndex((item) => {\r\n            return this.scrollPos[item] != scrollTarget[item];\r\n        });\r\n        if (findScrollIndex == -1) {\r\n            scrollTarget['scrollTop'] = this.scrollPos['scrollTop'];\r\n        }\r\n\r\n    }\r\n    /**\r\n     * åé¨è®°å½\r\n     */\r\n    private scrollRecord() {\r\n        if (!this.keepScrollPosition) { return; }\r\n        let scrollTarget = this.scrollEl.nativeElement;\r\n        ['scrollHeight', 'clientHeight', 'scrollTop'].forEach((item) => {\r\n            this.scrollPos[item] = scrollTarget[item];\r\n        });\r\n    }\r\n    /**\r\n     * éç½®è®°å½\r\n     * @returns \r\n     */\r\n    private resetRecord() {\r\n        if (!this.keepScrollPosition) { return; }\r\n        let scrollTarget = this.scrollEl.nativeElement;\r\n        ['scrollHeight', 'clientHeight', 'scrollTop'].forEach((item) => {\r\n            if (item == 'scrollTop') {\r\n                this.scrollPos[item] = 0;\r\n            } else {\r\n                this.scrollPos[item] = scrollTarget[item];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * æ»å¨å°é¡¶é¨\r\n     */\r\n    private gotoScrollTop() {\r\n        let scrollTarget = this.scrollEl.nativeElement;\r\n        scrollTarget.scrollTop = 0;\r\n        this.resetRecord();\r\n    }\r\n    /**\r\n     * éè¿\r\n     */\r\n    private observerElement() {\r\n        if (!this.scrollEl || !this.inject) { return; }\r\n        if (!this.ngZone) {\r\n            this.ngZone = this.inject.get<NgZone>(NgZone, null);\r\n        }\r\n        if (this.keepScrollPosition) {\r\n            if (!this.ro) {\r\n                this.ngZone.runOutsideAngular(() => {\r\n                    this.ro = new ResizeObserver((entries, observer) => {\r\n                        const tempHeight = entries[0].contentRect.height;\r\n                        if (tempHeight > 0 && this.keepScrollPosition) {\r\n                            // å¦æé«åº¦æ¹åï¼å°±éç½®,ä¸ç¨ç½®é¡¶ãè·åé«åº¦æå°åç§»\r\n                            if (Math.abs(tempHeight-this.scrollPos['clientHeight'])<= 2) {\r\n                                this.scrollToRecordPosition();\r\n                            } else {\r\n                                this.resetRecord();\r\n                            }\r\n                        }\r\n                    });\r\n                    this.ro.observe(this.scrollEl.nativeElement);\r\n                });\r\n            }\r\n        } else {\r\n            // å»ä¿®çå¬å°ºå¯¸åæ´\r\n            if (this.ro) {\r\n                this.ro.unobserve(this.scrollEl.nativeElement);\r\n                this.ro = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * æ¯è¾æ°æ®å¤æ­æ¯å¦éè¦æ»å¨å°é¡¶é¨\r\n     * @param oldData æ§æ°æ®\r\n     * @param newData æ°æ°æ®\r\n     * @returns \r\n     */\r\n    private compareDataThenScrollTop(oldData,newData){\r\n        // æ²¡ææ°æ®ï¼éç½®\r\n        if(!oldData||!newData){\r\n            return true;\r\n        }\r\n        // æ²¡ææ°æ®ï¼éç½®\r\n        if(oldData.length==0||newData.length==0){\r\n            return true;\r\n        }\r\n        if(oldData.length!=newData.length){\r\n            return true;\r\n        }else{\r\n            // å®ä½ç½®\r\n            let idField=\"\";\r\n            if (this.listidName && oldData[0].hasOwnProperty(this.listidName)&&newData[0].hasOwnProperty(this.listidName)) {\r\n                idField=this.listidName;\r\n            }\r\n            if(!idField){\r\n                // ä¿ææ»å¨æ¡\r\n                return false;\r\n            }\r\n            // æ¾å°ä¸åçæ°æ®\r\n            let findDifferData=oldData.find((item,index)=>{\r\n                if(item[idField]==newData[index][idField]){\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n            // æä¸åæ°æ®ï¼éç½®\r\n            if(findDifferData){\r\n                return true;\r\n            }else{\r\n                // æ°æ®ç¸åï¼ä¿ææ»å¨æ¡\r\n                return false;\r\n            }\r\n        }\r\n        \r\n    }\r\n    /**\r\n     * \r\n     * @param newData \r\n     */\r\n    private changeCurrentData(newData){\r\n        let needScrollTop=this.compareDataThenScrollTop(this.currentData,newData);\r\n        this.currentData=newData;\r\n        if(needScrollTop){\r\n            this.gotoScrollTop();\r\n        }else{\r\n            this.scrollToRecordPosition();\r\n        }\r\n        this.dataInit();\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import { Component, OnInit, Input,Output,EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'list-view-checkout',\r\n    templateUrl: './list-view-checkout.component.html'\r\n})\r\n\r\nexport class ListViewCheckoutComponent implements OnInit {\r\n    @Input() checked: boolean;\r\n    @Input() id: string;\r\n    @Input() disabled: boolean;\r\n\r\n    @Output() checkedChange = new EventEmitter();\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() { }\r\n\r\n    handleClick(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        if (!this.disabled) {\r\n            this.checkedChange.emit({originalEvent: event, checked: !this.checked});\r\n        }\r\n    }\r\n}\r\n","import { ListViewComponent } from './list-view.component';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'formatItems'})\r\nexport class SelectedListFormatPipe implements PipeTransform {\r\n\r\n    constructor( private listViewRef: ListViewComponent ) {}\r\n\r\n    transform(data: any, formatter: any): any {\r\n        if (data) {\r\n\r\n            const idField = this.listViewRef.listidName;\r\n\r\n            if (formatter) {\r\n                data = data.map( d => {\r\n                    return {id: d[idField], text:  formatter(d) };\r\n                });\r\n            } else  {\r\n                data = data.map((d: any) => {\r\n                    const txt = [];\r\n                    const keys = Object.keys(d);\r\n                    keys.forEach(k => {\r\n                        txt.push(d[k]);\r\n                    });\r\n                    return {id: d[idField], text: txt.join(', ') };\r\n                });\r\n            }\r\n\r\n            return data;\r\n        }\r\n\r\n        return [];\r\n    }\r\n}\r\n","import { FarrisCommonModule } from '@farris/ui-common';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PaginationModule } from '@farris/ui-pagination';\r\nimport { ListViewComponent } from './list-view.component';\r\nimport { ListViewCheckoutComponent } from './component/list-view-checkout.component';\r\n\r\nimport {\r\n    ListViewHeaderTemplateDirective,\r\n    ListViewTemplateDirective,\r\n    ListViewFooterTemplateDirective,\r\n    ListViewEmptyTemplateDirective\r\n} from './template.directive';\r\nimport { SelectedListFormatPipe } from './selected-listitem-formatter.pipe';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ListViewComponent,\r\n        ListViewCheckoutComponent,\r\n        ListViewHeaderTemplateDirective,\r\n        ListViewTemplateDirective,\r\n        ListViewFooterTemplateDirective,\r\n        ListViewEmptyTemplateDirective,\r\n        SelectedListFormatPipe,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        LocaleModule.forRoot(),\r\n        FarrisCommonModule,\r\n        PaginationModule\r\n    ],\r\n    exports: [\r\n        ListViewComponent,\r\n        ListViewCheckoutComponent,\r\n        ListViewHeaderTemplateDirective,\r\n        ListViewTemplateDirective,\r\n        ListViewFooterTemplateDirective,\r\n        ListViewEmptyTemplateDirective,\r\n        SelectedListFormatPipe\r\n    ]\r\n})\r\nexport class ListViewModule { }\r\n"]}