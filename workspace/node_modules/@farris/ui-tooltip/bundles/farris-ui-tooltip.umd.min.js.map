{"version":3,"sources":["ng://@farris/ui-tooltip/lib/attention.service.ts","ng://@farris/ui-tooltip/lib/tooltip.service.ts","ng://@farris/ui-tooltip/lib/tooltip-component/tooltip.component.ts","ng://@farris/ui-tooltip/lib/tooltip.directive.ts","ng://@farris/ui-tooltip/lib/inputTips.directive.ts","ng://@farris/ui-tooltip/lib/tooltip-safe-html.pipe.ts","ng://@farris/ui-tooltip/lib/tooltip.module.ts"],"names":["AttentionService","prototype","catchAttention","els","timer","_this","this","length","attentionEls_1","k","attentionEl","idOrEl","document","getElementById","push","renderer","addClass","ngZone","runOutsideAngular","setTimeout","m","removeClass","ngOnInit","Injectable","args","providedIn","RendererFactory2","NgZone","renderFac","createRenderer","TooltipService","placement$","Subject","show$","calPosition$","TooltipComponent","Object","defineProperty","nfContent","value","TemplateRef","contentIsString","contentViewf","createEmbeddedView","_tipWidth","render","setStyle","innerNode","nativeElement","removeStyle","_tipCls","el","ngAfterViewInit","hostBoundingClientRect","judgeWidth","autoRectifyDirection","calculatePosition","scrollHeight","clientHeight","rectifyPlacement","placement","tooltipSize","tooltipNode","getBoundingClientRect","arrowSize","arrowNode","Math","abs","top","referenceBoundingRect","height","replace","bottom","right","width","left","classList","remove","offsetDirection","add","isOverBounding","rect","isOver","newValue","rectifyGutter","containsEl","datas","specialEl","i","hostPosition","overResult","style","arrowLeft","arrowTop","indexOf","tplacement","index","substring","Component","selector","template","encapsulation","ViewEncapsulation","None","ElementRef","Renderer2","ViewChild","read","ViewContainerRef","Input","zIndex","positionStyle","FarrisTooltipDirective","tooltipEnable","enableOrDisable","triggerMode","unbindEvent","bindEvent","ngOnDestroy","removeTooltip","overLayService","destory","hasBindEvent","trigger","clickEvent","listen","e","stopPropagation","appendTooltip","clickOutEvent","focusDownEvent","preventDefault","focusUpEvent","mouseenterEvent","delay","delayTimer","clearTimeout","mouseleaveEvent","tooltip","removeChild","body","_componentRef","changeDetectorRef","markForCheck","detectChanges","destroy","viewContainerRef","clear","showTip","generateTooltip","updateViewProps","content","getReferencePosition","registerMouseEvent","tipCls","tipWidth","createComponent","componentFactory","instance","commUtils","getFloatingLayerIndex","parentNode","appendChild","rRight","documentElement","clientWidth","rBottom","rTop","rLeft","rectifyReferenceH","rectifyReferenceHEl","getRectifyReferenceElement","rectifyReferenceV","rectifyReferenceVEl","referenceEl","querySelector","Directive","ComponentFactoryResolver","resolver","text","resolveComponentFactory","OverLayHiddenService","CommonUtils","FInputTipsDirective","_enableTips","changeEventBind","createCloneEl","el$","window","getComputedStyle","cloneEl","createElement","forEach","item","getPropertyValue","enableTips","ngzone","mouseEnterListener","onMouseEnterHandler","bind","addEventListener","mouseLeaveListener","onMouseLeaveHandler","removeEventListener","changeTitle","setAttribute","tipsText","tooltipHtmlPipe","transform","_sanitizer","sanitize","SecurityContext","HTML","bypassSecurityTrustHtml","Pipe","name","DomSanitizer","FarrisTooltipModule","NgModule","declarations","imports","CommonModule","FarrisCommonModule","providers","entryComponents","exports"],"mappings":"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","sourcesContent":["import { Injectable, OnInit, Renderer2, RendererFactory2, NgZone } from '@angular/core';\r\nexport interface AttentionElement {\r\n    idOrEl: any;\r\n    type?:string;// è®¡åé»è®¤ debounce\r\n    class?: string;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AttentionService implements OnInit {\r\n    private renderer: Renderer2\r\n    constructor(renderFac: RendererFactory2, public ngZone: NgZone) {\r\n        this.renderer = renderFac.createRenderer(null, null);\r\n    }\r\n\r\n    catchAttention(els: AttentionElement[], timer = 600) {\r\n        if (els && els.length > 0) {\r\n            let attentionEls = [];\r\n            for (let k = 0; k < els.length; k++) {\r\n                var attentionEl;\r\n                if (typeof els[k].idOrEl == 'string') {\r\n                    attentionEl = document.getElementById(els[k].idOrEl);\r\n                } else {\r\n                    attentionEl = els[k].idOrEl;\r\n                }\r\n                if (attentionEl) {\r\n                    attentionEls.push(attentionEl);\r\n                    this.renderer.addClass(attentionEl, 'f-catch-attention-debounce');\r\n                }\r\n            }\r\n            // ç§»é¤class\r\n            this.ngZone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    for (let m = 0; m < attentionEls.length; m++) {\r\n                        this.renderer.removeClass(attentionEls[m], 'f-catch-attention-debounce');\r\n                    }\r\n                }, timer);\r\n            });\r\n        }\r\n    }\r\n    ngOnInit() {\r\n    }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport interface PlacementInfo {\r\n  placement: string;\r\n  top: number;\r\n  left: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TooltipService implements OnInit {\r\n\r\n  /* tooltipä½ç½® */\r\n  public placement$ = new Subject<PlacementInfo>();\r\n\r\n  /* tooltipæ§å¶æ¾ç¤º */\r\n  public show$ = new Subject<boolean>();\r\n\r\n  /* è®¡ç®ä½ç½® */\r\n  public calPosition$ = new Subject<any>();\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import {\r\n    Component, Input, TemplateRef, ElementRef, OnInit,\r\n    ViewChild, ViewContainerRef, HostBinding, ViewEncapsulation, SimpleChanges, Renderer2, NgZone\r\n} from '@angular/core';\r\nimport { AfterViewInit } from '@angular/core';\r\n@Component({\r\n    selector: 'farris-tooltip',\r\n    templateUrl: './tooltip.component.html',\r\n    styleUrls: ['./tooltip.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class TooltipComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('contentViewf', { read: ViewContainerRef }) contentViewf: ViewContainerRef;\r\n\r\n    @ViewChild('tooltipEle', { read: ElementRef }) tooltipNode: ElementRef;\r\n    @ViewChild('arrowEle', { read: ElementRef }) arrowNode: ElementRef;\r\n    @ViewChild('innerEle', { read: ElementRef }) innerNode: ElementRef;\r\n\r\n    @Input() zIndex = \"1070\";\r\n\r\n    contentIsString = true;\r\n    /* æ®éææ¬åå®¹ */\r\n    @Input()\r\n    set content(value: string | TemplateRef<any>) {\r\n        if (value instanceof TemplateRef) {\r\n            this.contentIsString = false;\r\n            this.contentViewf.createEmbeddedView(value);\r\n        } else {\r\n            this.contentIsString = true;\r\n            this.nfContent = value;\r\n        }\r\n    }\r\n    get content() {\r\n        return this.nfContent;\r\n    }\r\n    private _tipWidth = '';\r\n    /**å ä¸ºè¡¨åçææ²¡ææé¤factory,ä¸è½ä½¿ç¨æ¨¡æ¿ */\r\n    @Input()\r\n    set tipWidth(value) {\r\n        if (value != this._tipWidth) {\r\n            if (value) {\r\n                this.render.setStyle(this.innerNode.nativeElement, 'width', value);\r\n                this.render.setStyle(this.innerNode.nativeElement, 'max-width', 'none');\r\n            } else {\r\n                this.render.removeStyle(this.innerNode.nativeElement, 'width');\r\n                this.render.removeStyle(this.innerNode.nativeElement, 'max-width');\r\n            }\r\n            this._tipWidth = value;\r\n        }\r\n    }\r\n    get tipWidth() {\r\n        return this._tipWidth;\r\n    }\r\n    private _tipCls = '';\r\n    @Input()\r\n    set tipCls(value) {\r\n        if (value != this._tipCls) {\r\n            //ç§»é¤æ§æ ·å¼\r\n            this._tipCls && this.render.removeClass(this.el.nativeElement, this._tipCls);\r\n            //è¿½å æ°æ ·å¼\r\n            value && this.render.addClass(this.el.nativeElement, value);\r\n            this._tipCls = value;\r\n        }\r\n    }\r\n    get tipCls() {\r\n        return this._tipCls;\r\n    }\r\n    /* ä½ç½® */\r\n    @Input() placement = 'top';\r\n    private rectifyPlacement = 'top';\r\n    // ç®­å¤´ä½ç½®åç§\r\n    hostBoundingClientRect: any;\r\n    // è¾¹çä½ç½®åç§\r\n    referenceBoundingRect: any;\r\n    private rectifyGutter = 20;\r\n\r\n    nfContent: string | TemplateRef<any>;\r\n\r\n    /* ä½ç½®æ ·å¼ */\r\n    positionStyle = {};\r\n\r\n    constructor(\r\n        public el: ElementRef,\r\n        private render: Renderer2\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n    ngAfterViewInit() {\r\n        if (this.hostBoundingClientRect) {\r\n            this.judgeWidth();\r\n            this.autoRectifyDirection();\r\n            this.calculatePosition(this.hostBoundingClientRect);\r\n        }\r\n    }\r\n    /**\r\n     * è§åå¤æ­é»è®¤æ ·å¼ä¸åºç°æ»å¨æ¡ï¼å°ºå¯¸ä»é»è®¤åæå¤§å·\r\n     */\r\n    judgeWidth() {\r\n        if (this.innerNode.nativeElement.scrollHeight > this.innerNode.nativeElement.clientHeight) {\r\n            this.render.addClass(this.innerNode.nativeElement, 'tooltip-inner-lg');\r\n        }\r\n    }\r\n    // èªå¨çº æ­£æ¹å\r\n    private autoRectifyDirection() {\r\n        // æ è®°é»è®¤å¼\r\n        this.rectifyPlacement = this.placement;\r\n        // æ´ä¸ªæç¤ºä½ç½®\r\n        const tooltipSize = this.tooltipNode.nativeElement.getBoundingClientRect();\r\n        const arrowSize = this.arrowNode.nativeElement.getBoundingClientRect();\r\n        /*ä¸èèï¼æç¤ºæ¡å¤ªå¤§çæåµ,åªèèä¸æ¬¡è½¬æ¢ä½ç½®ï¼\r\n        å¤ªå¤æçåºæ¯ï¼å®éé¡¹ç®ä¸­ä¸ä¼åºç°ï¼ç®åå¤çæ­¤é®é¢\r\n        if(this.referenceBoundingRect.width>tooltipSize){\r\n        }*/\r\n        switch (this.placement) {\r\n            case 'top':\r\n            case 'top-left':\r\n            case 'top-right':\r\n                if (Math.abs(this.hostBoundingClientRect.top - this.referenceBoundingRect.top) < tooltipSize.height + arrowSize.height) {\r\n                    // é«åº¦æ¾ä¸å¼ï¼è½¬å\r\n                    this.rectifyPlacement = this.rectifyPlacement.replace('top', 'bottom');\r\n                }\r\n                break;\r\n            case 'bottom':\r\n            case 'bottom-left':\r\n            case 'bottom-right':\r\n                if (Math.abs(this.hostBoundingClientRect.bottom - this.referenceBoundingRect.bottom) < tooltipSize.height + arrowSize.height) {\r\n                    // é«åº¦æ¾ä¸å¼ï¼è½¬å\r\n                    this.rectifyPlacement = this.rectifyPlacement.replace('bottom', 'top');\r\n                }\r\n                break;\r\n            case 'right':\r\n            case 'right-top':\r\n            case 'right-bottom':\r\n                if (Math.abs(this.hostBoundingClientRect.right - this.referenceBoundingRect.right) < tooltipSize.width + arrowSize.width) {\r\n                    // å®½åº¦æ¾ä¸å¼ï¼è½¬å\r\n                    this.rectifyPlacement = this.rectifyPlacement.replace('right', 'left');\r\n                }\r\n                break;\r\n            case 'left':\r\n            case 'left-top':\r\n            case 'left-bottom':\r\n                if (Math.abs(this.hostBoundingClientRect.left - this.referenceBoundingRect.left) < tooltipSize.width + arrowSize.width) {\r\n                    // å®½åº¦æ¾ä¸å¼ï¼è½¬å\r\n                    this.rectifyPlacement = this.rectifyPlacement.replace('left', 'right');\r\n                }\r\n                break;\r\n\r\n        }\r\n        if (this.rectifyPlacement != this.placement) {\r\n            this.tooltipNode.nativeElement.classList.remove('bs-tooltip-' + this.offsetDirection(this.placement));\r\n            this.tooltipNode.nativeElement.classList.add('bs-tooltip-' + this.offsetDirection(this.rectifyPlacement));\r\n        }\r\n    }\r\n    /**\r\n     * å¤æ­æ¯å¦è¶åºè¾¹ç\r\n     */\r\n    private isOverBounding(rect, value) {\r\n        let isOver = false;\r\n        let newValue = 0;\r\n        switch (rect) {\r\n            case 'left':\r\n                if (value <= this.referenceBoundingRect.left) {\r\n                    isOver = true;\r\n                    newValue = this.referenceBoundingRect.left + this.rectifyGutter;\r\n                }\r\n                break;\r\n            case 'right':\r\n                if (value >= this.referenceBoundingRect.right) {\r\n                    isOver = true;\r\n                    newValue = this.referenceBoundingRect.right - this.rectifyGutter;\r\n                }\r\n                break;\r\n            case 'top':\r\n                if (value <= this.referenceBoundingRect.top) {\r\n                    isOver = true;\r\n                    newValue = this.referenceBoundingRect.top + this.rectifyGutter;\r\n                }\r\n                break;\r\n            case 'bottom':\r\n                if (value >= this.referenceBoundingRect.bottom) {\r\n                    isOver = true;\r\n                    newValue = this.referenceBoundingRect.bottom - this.rectifyGutter;\r\n                }\r\n                break;\r\n        }\r\n        return { isOver, newValue };\r\n    }\r\n\r\n    private containsEl(datas, specialEl = '') {\r\n        if (!specialEl) {\r\n            specialEl = this.rectifyPlacement;\r\n        }\r\n        for (var i = 0; i < datas.length; i++) {\r\n            if (datas[i] == specialEl)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /* è®¡ç®tooltipææ°ä½ç½® */\r\n    calculatePosition(hostPosition: any) {\r\n        let top = 0;\r\n        let left = 0;\r\n        let right = 0;\r\n        let bottom = 0;\r\n        // æ´ä¸ªæç¤ºä½ç½®\r\n        const tooltipSize = this.tooltipNode.nativeElement.getBoundingClientRect();\r\n        const arrowSize = this.arrowNode.nativeElement.getBoundingClientRect();\r\n\r\n        switch (this.rectifyPlacement) {\r\n            case 'top':\r\n                top = hostPosition.top - tooltipSize.height - 2;\r\n                left = hostPosition.left + (hostPosition.width - tooltipSize.width) / 2;\r\n                right = left + tooltipSize.width;\r\n                break;\r\n            case 'left':\r\n                top = hostPosition.top + (hostPosition.height - tooltipSize.height) / 2;\r\n                left = hostPosition.left - tooltipSize.width - 2;\r\n                break;\r\n            case 'right':\r\n                top = hostPosition.top + (hostPosition.height - tooltipSize.height) / 2;\r\n                left = hostPosition.right + 2;\r\n                break;\r\n            case 'bottom':\r\n                top = hostPosition.bottom + arrowSize.height + 2;\r\n                left = hostPosition.left + (hostPosition.width - tooltipSize.width) / 2;\r\n                right = left + tooltipSize.width;\r\n                break;\r\n            case 'top-left':\r\n                top = hostPosition.top - tooltipSize.height - 2;\r\n                left = hostPosition.left;\r\n                right = left + tooltipSize.width;\r\n                break;\r\n            case 'top-right':\r\n                top = hostPosition.top - tooltipSize.height - 2;\r\n                left = hostPosition.right - tooltipSize.width;\r\n                right = hostPosition.right;\r\n                break;\r\n            case 'right-top':\r\n                top = hostPosition.top;\r\n                left = hostPosition.right + 2;\r\n                this.arrowNode.nativeElement.style.top = '10%';\r\n                break;\r\n            case 'right-bottom':\r\n                top = hostPosition.bottom - tooltipSize.height;\r\n                left = hostPosition.right + 2;\r\n                this.arrowNode.nativeElement.style.bottom = '10%';\r\n                break;\r\n            case 'bottom-left':\r\n                top = hostPosition.bottom + arrowSize.height + 2;\r\n                left = hostPosition.left;\r\n                right = left + tooltipSize.width;\r\n                break;\r\n            case 'bottom-right':\r\n                top = hostPosition.bottom + arrowSize.height + 2;\r\n                left = hostPosition.right - tooltipSize.width;\r\n                right = hostPosition.right;\r\n                break;\r\n            case 'left-top':\r\n                top = hostPosition.top;\r\n                left = hostPosition.left - tooltipSize.width - 2;\r\n                this.arrowNode.nativeElement.style.top = '10%';\r\n                break;\r\n            case 'left-bottom':\r\n                top = hostPosition.bottom - tooltipSize.height;\r\n                left = hostPosition.left - tooltipSize.width - 2;\r\n                this.arrowNode.nativeElement.style.bottom = '10%';\r\n        }\r\n        let overResult;\r\n        let arrowLeft = 0;\r\n        let arrowTop = 0\r\n        switch (this.rectifyPlacement) {\r\n            case 'top':\r\n            case 'top-left':\r\n            case 'top-right':\r\n            case 'bottom':\r\n            case 'bottom-left':\r\n            case 'bottom-right':\r\n                overResult = this.isOverBounding('left', left);\r\n                if (overResult.isOver) {\r\n                    left = overResult.newValue;\r\n                } else {\r\n                    overResult = this.isOverBounding('right', right);\r\n                    if (overResult.isOver) {\r\n                        left = overResult.newValue - tooltipSize.width;\r\n                    }\r\n                }\r\n                arrowLeft = left - hostPosition.left - hostPosition.width * 0.5 + arrowSize.width * 0.5;\r\n                if (this.rectifyPlacement.indexOf('-left') > 0) {\r\n                    arrowLeft += hostPosition.width * 0.4;\r\n                } else if (this.rectifyPlacement.indexOf('-right') > 0) {\r\n                    arrowLeft -= hostPosition.width * 0.4;\r\n                }\r\n                this.arrowNode.nativeElement.style.left = Math.abs(arrowLeft) + 'px';\r\n                break;\r\n            default:\r\n                overResult = this.isOverBounding('top', top);\r\n\r\n                if (overResult.isOver) {\r\n                    top = overResult.newValue;\r\n                } else {\r\n                    overResult = this.isOverBounding('bottom', bottom);\r\n                    if (overResult.isOver) {\r\n                        top = overResult.newValue - tooltipSize.height;\r\n                    }\r\n                }\r\n                arrowTop = top - hostPosition.top - hostPosition.height * 0.5 + arrowSize.height * 0.5;;\r\n                if (this.rectifyPlacement.indexOf('-top') > 0) {\r\n                    arrowTop += hostPosition.height * 0.4;\r\n                } else if (this.rectifyPlacement.indexOf('-bottom') > 0) {\r\n                    arrowTop -= hostPosition.height * 0.4;\r\n                }\r\n                this.arrowNode.nativeElement.style.top = Math.abs(arrowTop) + 'px';\r\n        }\r\n        this.tooltipNode.nativeElement.style.top = top + 'px';\r\n        this.tooltipNode.nativeElement.style.left = left + 'px';\r\n\r\n    }\r\n\r\n    /* \r\n    *12ä¸ªä½ç½®åè§£æ \r\n    * å è¡¨åçææ²¡ææé¤factory,èä¸ä½¿ç¨äº[class],åªè½å¨æ­¤å¤åæ´\r\n    */\r\n    offsetDirection(tplacement = '') {\r\n        if (!tplacement) {\r\n            tplacement = this.placement;\r\n        }\r\n        if (tplacement.indexOf('-') !== -1) {\r\n            const index = tplacement.indexOf('-');\r\n            return tplacement.substring(0, index);\r\n        }\r\n        return tplacement;\r\n    }\r\n}\r\n","import {\r\n    OnInit,\r\n    Directive,\r\n    Input,\r\n    ElementRef,\r\n    AfterViewInit,\r\n    Renderer2,\r\n    OnDestroy,\r\n    TemplateRef,\r\n    ComponentFactory,\r\n    ViewContainerRef,\r\n    ComponentFactoryResolver,\r\n    NgZone,\r\n    ComponentRef,\r\n} from \"@angular/core\";\r\nimport { OverLayHiddenService, CommonUtils } from \"@farris/ui-common\";\r\nimport { TooltipComponent } from \"./tooltip-component/tooltip.component\";\r\n@Directive({\r\n    selector: \"[farrisTooltip]\",\r\n})\r\nexport class FarrisTooltipDirective\r\n    implements OnInit, AfterViewInit, OnDestroy\r\n{\r\n    private tooltipEnable: boolean = true;\r\n    private _componentRef: ComponentRef<TooltipComponent>;\r\n    // 5æ7æ¥è¿½å è¿ç§åæ³ï¼æ§å¶ç¦ç¨ãå¯ç¨\r\n    // åæ¥çæ¶åvalueæ¯ç©ºå­ç¬¦ä¸²\r\n    @Input(\"farrisTooltip\")\r\n    set enableTooltip(value: any) {\r\n        if (typeof value == \"string\" && value == \"\") {\r\n            this.enableOrDisable(true);\r\n        } else {\r\n            this.enableOrDisable(value);\r\n        }\r\n    }\r\n    get enableTooltip() {\r\n        return this.tooltipEnable;\r\n    }\r\n    /* æç¤ºææ¬ */\r\n    @Input() text = \"\";\r\n    // æç¤ºæ¡æ ·å¼\r\n    @Input() tipCls = \"\";\r\n    // æç¤ºæ¡å®½åº¦\r\n    @Input() tipWidth = \"\";\r\n    /* ä½ç½® */\r\n    @Input() placement = \"top\";\r\n\r\n    @Input() zIndex = '';\r\n\r\n    private triggerMode = \"hover\";\r\n\r\n    /* è§¦åæ¹å¼ */\r\n    @Input()\r\n    set trigger(value) {\r\n        if (value) {\r\n            if (value !== this.triggerMode) {\r\n                this.triggerMode = value;\r\n                this.unbindEvent();\r\n                this.bindEvent();\r\n            }\r\n        }\r\n    }\r\n    get trigger() {\r\n        return this.triggerMode;\r\n    }\r\n\r\n    /* ç¦ç¨---è·å¶ä»æ§ä»¶çå±æ§å®¹æå²çªï¼éæ¸åºå¼ã\r\n     * æ¯å¦æé®å¯ä»¥è®¾ç½®ç¦ç¨ä¸è§¦åç¹å»ï¼ä½æ³ç»åºç¹å»æç¤ºï¼è¿æ ·å°±å²çªäº\r\n     */\r\n    @Input()\r\n    set disable(value) {\r\n        this.enableOrDisable(!value);\r\n    }\r\n    get disable() {\r\n        return !this.tooltipEnable;\r\n    }\r\n\r\n    @Input() showTip: boolean = true;\r\n    // æ¨ªåçº æ­£çåç§\r\n    @Input() rectifyReferenceH: Element | ElementRef | string;\r\n    // çºµåçº æ­£çåç§\r\n    @Input() rectifyReferenceV: Element | ElementRef | string;\r\n\r\n    @Input() delay = 0;\r\n\r\n    /* åå®¹æ¨¡æ¿ */\r\n    @Input() content: string | TemplateRef<any>;\r\n\r\n    mouseenterEvent: any;\r\n    mouseleaveEvent: any;\r\n    clickEvent: any;\r\n    clickOutEvent: any;\r\n    focusDownEvent: any;\r\n    focusUpEvent: any;\r\n    docBody: any;\r\n    // æ¯å¦ç»å®äºäºä»¶\r\n    private hasBindEvent = false;\r\n\r\n    private delayTimer = null;\r\n\r\n    /* çææç¤ºç»ä»¶ */\r\n    componentFactory: ComponentFactory<TooltipComponent> =\r\n        this.resolver.resolveComponentFactory(TooltipComponent);\r\n\r\n    tooltipRef: any;\r\n    tooltip: TooltipComponent;\r\n    overLayService: OverLayHiddenService;\r\n    commUtils: CommonUtils;\r\n    constructor(\r\n        private el: ElementRef,\r\n        private render: Renderer2,\r\n        private viewContainerRef: ViewContainerRef,\r\n        private resolver: ComponentFactoryResolver\r\n    ) {\r\n        this.overLayService = new OverLayHiddenService();\r\n        this.commUtils = new CommonUtils();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.bindEvent();\r\n    }\r\n\r\n    ngAfterViewInit(): void {}\r\n\r\n    ngOnDestroy() {\r\n        this.unbindEvent();\r\n        this.removeTooltip();\r\n\r\n        this.overLayService.destory(this.el.nativeElement);\r\n        this.overLayService = null;\r\n    }\r\n    private enableOrDisable(value) {\r\n        this.tooltipEnable = value;\r\n        if (this.tooltipEnable) {\r\n            this.bindEvent();\r\n        } else {\r\n            this.unbindEvent();\r\n        }\r\n    }\r\n\r\n    bindEvent() {\r\n        if (!this.tooltipEnable) {\r\n            return;\r\n        }\r\n        // æ¯å¦å·²ç»å®äºä»¶\r\n        if (this.hasBindEvent) {\r\n            return;\r\n        }\r\n        if (this.trigger === \"click\") {\r\n            // é¼ æ ç¹å»\r\n            this.clickEvent = this.render.listen(\r\n                this.el.nativeElement,\r\n                \"click\",\r\n                (e: MouseEvent) => {\r\n                    e.stopPropagation();\r\n                    this.appendTooltip();\r\n                    this.clickOutEvent = this.render.listen(\r\n                        document,\r\n                        \"click\",\r\n                        () => {\r\n                            this.removeTooltip();\r\n                            this.clickOutEvent();\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n        } else if (this.trigger === \"focus\") {\r\n            // èç¦\r\n            // @Todo éè¦æinputç­ç»ä»¶åæ®éç»ä»¶åå¼\r\n            this.focusDownEvent = this.render.listen(\r\n                this.el.nativeElement,\r\n                \"mousedown\",\r\n                (e: MouseEvent) => {\r\n                    e.preventDefault();\r\n                    this.appendTooltip();\r\n                }\r\n            );\r\n            this.focusUpEvent = this.render.listen(\r\n                this.el.nativeElement,\r\n                \"mouseup\",\r\n                (e: MouseEvent) => {\r\n                    e.stopPropagation();\r\n                    this.removeTooltip();\r\n                }\r\n            );\r\n        } else {\r\n            // é¼ æ ç§»å¨ä¸å»\r\n            this.mouseenterEvent = this.render.listen(\r\n                this.el.nativeElement,\r\n                \"mouseenter\",\r\n                (e: MouseEvent) => {\r\n                    e.stopPropagation();\r\n                    if (this.delay) {\r\n                        if (this.delayTimer) {\r\n                            clearTimeout(this.delayTimer);\r\n                        }\r\n                        this.delayTimer = setTimeout(() => {\r\n                            this.appendTooltip();\r\n                            clearTimeout(this.delayTimer);\r\n                        }, this.delay);\r\n                    } else {\r\n                        this.appendTooltip();\r\n                    }\r\n                }\r\n            );\r\n            this.mouseleaveEvent = this.render.listen(\r\n                this.el.nativeElement,\r\n                \"mouseleave\",\r\n                (e: MouseEvent) => {\r\n                    e.stopPropagation();\r\n                    if (this.delayTimer) {\r\n                        clearTimeout(this.delayTimer);\r\n                    }\r\n                    this.removeTooltip();\r\n                }\r\n            );\r\n        }\r\n        this.hasBindEvent = true;\r\n    }\r\n\r\n    /* è§£ç»äºä»¶ */\r\n    unbindEvent() {\r\n        // é¼ æ ç§»ä¸å»\r\n        if (this.mouseenterEvent) {\r\n            this.mouseenterEvent();\r\n        }\r\n        if (this.mouseleaveEvent) {\r\n            this.mouseleaveEvent();\r\n        }\r\n        if (this.clickEvent) {\r\n            this.clickEvent();\r\n        }\r\n        if (this.clickOutEvent) {\r\n            this.clickOutEvent();\r\n        }\r\n        if (this.focusDownEvent) {\r\n            this.focusDownEvent();\r\n        }\r\n        if (this.focusUpEvent) {\r\n            this.focusUpEvent();\r\n        }\r\n        this.hasBindEvent = false;\r\n    }\r\n\r\n    /* body  ç§»é¤tooltip */\r\n    removeTooltip() {\r\n        if (this.tooltip) {\r\n            this.render.removeChild(\r\n                document.body,\r\n                this.tooltip.el.nativeElement\r\n            );\r\n            this._componentRef.changeDetectorRef.markForCheck();\r\n            this._componentRef.changeDetectorRef.detectChanges();\r\n            this._componentRef.destroy();\r\n            this.viewContainerRef.clear();\r\n            this.tooltip = null;\r\n            this._componentRef = null;\r\n\r\n            this.overLayService.destory(this.el.nativeElement);\r\n        }\r\n    }\r\n\r\n    private appendTooltip() {\r\n        if (!this.showTip) return;\r\n        this.generateTooltip();\r\n        this.updateViewProps(\r\n            this.placement,\r\n            this.content,\r\n            this.el.nativeElement.getBoundingClientRect(),\r\n            this.getReferencePosition()\r\n        );\r\n\r\n        this.overLayService.registerMouseEvent(this.el.nativeElement, (e: MouseEvent) => {\r\n            this.removeTooltip();\r\n        });\r\n    }\r\n\r\n    /* æ´æ°tooltipç»ä»¶å±æ§ */\r\n    private updateViewProps(\r\n        placement: string,\r\n        content: string | TemplateRef<any>,\r\n        hostBoundingClientRect: object,\r\n        referenceBoundingRect\r\n    ) {\r\n        this.tooltip.placement = placement;\r\n        this.tooltip.content = content;\r\n        this.tooltip.hostBoundingClientRect = hostBoundingClientRect;\r\n        this.tooltip.tipCls = this.tipCls;\r\n        this.tooltip.tipWidth = this.tipWidth;\r\n        this.tooltip.referenceBoundingRect = referenceBoundingRect;\r\n        this._componentRef.changeDetectorRef.markForCheck();\r\n        this._componentRef.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    /* æé tooltipç»æ */\r\n    private generateTooltip() {\r\n        this._componentRef = this.viewContainerRef.createComponent(\r\n            this.componentFactory\r\n        );\r\n        this.tooltip = this._componentRef.instance;\r\n        this.tooltip.zIndex = '' + this.commUtils.getFloatingLayerIndex();\r\n        \r\n\r\n        // ç¶åç´ ä¸­ç§»é¤  æ·»å å°bodyä¸­\r\n        this.render.removeChild(\r\n            this.render.parentNode(this.el.nativeElement),\r\n            this.tooltip.el.nativeElement\r\n        );\r\n        this.render.appendChild(document.body, this.tooltip.el.nativeElement);\r\n    }\r\n\r\n    /**\r\n     * ç¡®è®¤åç§çè¾¹ç\r\n     */\r\n    private getReferencePosition() {\r\n        let rRight = document.documentElement.clientWidth;\r\n        let rBottom = document.documentElement.clientHeight;\r\n        let rTop = 0;\r\n        let rLeft = 0;\r\n        // æ¨ªååç§\r\n        if (this.rectifyReferenceH) {\r\n            let rectifyReferenceHEl = this.getRectifyReferenceElement(\r\n                this.rectifyReferenceH\r\n            );\r\n            rRight = rectifyReferenceHEl.getBoundingClientRect().right;\r\n            rLeft = rectifyReferenceHEl.getBoundingClientRect().left;\r\n        }\r\n        // çºµååç§\r\n        if (this.rectifyReferenceV) {\r\n            let rectifyReferenceVEl = this.getRectifyReferenceElement(\r\n                this.rectifyReferenceV\r\n            );\r\n            rBottom = rectifyReferenceVEl.getBoundingClientRect().bottom;\r\n            rTop = rectifyReferenceVEl.getBoundingClientRect().top;\r\n        }\r\n        return { top: rTop, left: rLeft, right: rRight, bottom: rBottom };\r\n    }\r\n    /**\r\n     * è·åçº æ­£åç´ \r\n     */\r\n    private getRectifyReferenceElement(referenceEl) {\r\n        if (referenceEl instanceof ElementRef) {\r\n            return referenceEl.nativeElement;\r\n        } else if (typeof referenceEl == \"string\") {\r\n            return document.querySelector(referenceEl as string);\r\n        }\r\n        return referenceEl;\r\n    }\r\n}\r\n","import { Directive, ElementRef, Renderer2, HostListener, NgZone, OnDestroy, Input, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[f-input-tips]'\r\n})\r\nexport class FInputTipsDirective implements OnDestroy, AfterViewInit {\r\n    private cloneEl = null;\r\n    private tipsText = \"\";\r\n    mouseEnterListener: any;\r\n    // å¦ææ¯ä¸æ¯ç¨é»è®¤çTitleï¼æ­¤å±æ§ç¸å³çåè½å¯ä»¥ç§»é¤\r\n    mouseLeaveListener: any;\r\n    private _enableTips = true;\r\n    @Input('f-input-tips')\r\n    set enableTips(value) {\r\n        if (this._enableTips !== value) {\r\n            this._enableTips = value;\r\n            this.changeEventBind();\r\n        }\r\n    }\r\n    get enableTips() {\r\n        return this._enableTips;\r\n    }\r\n\r\n    constructor(private el: ElementRef, public ngzone: NgZone, private render: Renderer2) {\r\n    }\r\n\r\n    private createCloneEl() {\r\n        if (!this.el.nativeElement) { return; }\r\n        const global = {\r\n            cloneCSSProperties: [\r\n                'line-height', 'letter-spacing',\r\n                'font-size', 'font-family', 'font-style', 'font-weight', 'border',\r\n                'padding', 'height'\r\n            ]\r\n        };\r\n        const el$ = window.getComputedStyle(this.el.nativeElement);\r\n        this.cloneEl = this.render.createElement('span');\r\n        this.cloneEl['innerText'] = el$['value'];\r\n        global.cloneCSSProperties.forEach((item, index) => {\r\n            this.cloneEl.style[item] = el$.getPropertyValue(item);\r\n        });\r\n        this.render.addClass(this.cloneEl, 'f-dir-hidden-el');\r\n        this.render.appendChild(document.body, this.cloneEl);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.changeEventBind();\r\n    }\r\n    \r\n    changeEventBind() {\r\n        if (this.enableTips) {\r\n            this.ngzone.runOutsideAngular(() => {\r\n                this.mouseEnterListener = this.onMouseEnterHandler.bind(this);\r\n                this.el.nativeElement.addEventListener('mouseenter', this.mouseEnterListener);\r\n                this.mouseLeaveListener = this.onMouseLeaveHandler.bind(this);\r\n                this.el.nativeElement.addEventListener('mouseleave', this.mouseLeaveListener);\r\n            });\r\n        } else {\r\n            if (this.mouseEnterListener) {\r\n                this.el.nativeElement.removeEventListener('mouseenter', this.mouseEnterListener);\r\n                this.mouseEnterListener = null;\r\n                this.el.nativeElement.removeEventListener('mouseleave', this.mouseLeaveListener);\r\n                this.mouseLeaveListener = null;\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.cloneEl) {\r\n            this.render.removeChild(document.body, this.cloneEl);\r\n        }\r\n    }\r\n    onMouseEnterHandler() {\r\n        this.changeTitle();\r\n    }\r\n    onMouseLeaveHandler() {\r\n        // ç§»é¤æç¤º\r\n        this.render.setAttribute(this.el.nativeElement, 'title', '');\r\n    }\r\n    private changeTitle() {\r\n        if (!this.cloneEl) {\r\n            this.createCloneEl();\r\n        }\r\n        this.tipsText = this.el.nativeElement['value'];\r\n        this.cloneEl['innerText'] = this.tipsText;\r\n        this.ngzone.runOutsideAngular(() => {\r\n            setTimeout(() => {\r\n                if (this.cloneEl.getBoundingClientRect().width > this.el.nativeElement.getBoundingClientRect().width) {\r\n                    this.render.setAttribute(this.el.nativeElement, \"title\", this.tipsText);\r\n                } else {\r\n                    this.onMouseLeaveHandler();\r\n                }\r\n            }, 0);\r\n        });\r\n    }\r\n}\r\n","import { Pipe, PipeTransform,SecurityContext } from \"@angular/core\";\r\nimport { DomSanitizer,SafeHtml  } from '@angular/platform-browser';\r\n \r\n// https://angular.io/guide/security\r\n@Pipe({ name: 'tooltipHtml' })\r\nexport class tooltipHtmlPipe implements PipeTransform {\r\n  constructor(private _sanitizer: DomSanitizer) { }\r\n \r\n  transform(value):SafeHtml {\r\n    return this._sanitizer.sanitize(SecurityContext.HTML, this._sanitizer.bypassSecurityTrustHtml(value));\r\n  }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FarrisTooltipDirective } from \"./tooltip.directive\";\r\nimport { FInputTipsDirective } from \"./inputTips.directive\";\r\nimport { TooltipComponent } from \"./tooltip-component/tooltip.component\";\r\nimport { AttentionService } from \"./attention.service\";\r\nimport { tooltipHtmlPipe } from \"./tooltip-safe-html.pipe\";\r\nimport { FarrisCommonModule } from \"@farris/ui-common\";\r\n@NgModule({\r\n    declarations: [\r\n        FarrisTooltipDirective,\r\n        TooltipComponent,\r\n        FInputTipsDirective,\r\n        tooltipHtmlPipe,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FarrisCommonModule\r\n    ],\r\n    providers: [AttentionService],\r\n    entryComponents: [TooltipComponent],\r\n    exports: [FarrisTooltipDirective, TooltipComponent, FInputTipsDirective],\r\n})\r\nexport class FarrisTooltipModule {}\r\n"]}