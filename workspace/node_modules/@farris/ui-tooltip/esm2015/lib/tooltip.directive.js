/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, ElementRef, Renderer2, ViewContainerRef, ComponentFactoryResolver, } from "@angular/core";
import { OverLayHiddenService, CommonUtils } from "@farris/ui-common";
import { TooltipComponent } from "./tooltip-component/tooltip.component";
export class FarrisTooltipDirective {
    /**
     * @param {?} el
     * @param {?} render
     * @param {?} viewContainerRef
     * @param {?} resolver
     */
    constructor(el, render, viewContainerRef, resolver) {
        this.el = el;
        this.render = render;
        this.viewContainerRef = viewContainerRef;
        this.resolver = resolver;
        this.tooltipEnable = true;
        /* 提示文本 */
        this.text = "";
        // 提示框样式
        this.tipCls = "";
        // 提示框宽度
        this.tipWidth = "";
        /* 位置 */
        this.placement = "top";
        this.zIndex = '';
        this.triggerMode = "hover";
        this.showTip = true;
        this.delay = 0;
        // 是否绑定了事件
        this.hasBindEvent = false;
        this.delayTimer = null;
        /* 生成提示组件 */
        this.componentFactory = this.resolver.resolveComponentFactory(TooltipComponent);
        this.overLayService = new OverLayHiddenService();
        this.commUtils = new CommonUtils();
    }
    // 5月7日追加这种写法，控制禁用、启用
    // 原来的时候value是空字符串
    /**
     * @param {?} value
     * @return {?}
     */
    set enableTooltip(value) {
        if (typeof value == "string" && value == "") {
            this.enableOrDisable(true);
        }
        else {
            this.enableOrDisable(value);
        }
    }
    /**
     * @return {?}
     */
    get enableTooltip() {
        return this.tooltipEnable;
    }
    /* 触发方式 */
    /**
     * @param {?} value
     * @return {?}
     */
    set trigger(value) {
        if (value) {
            if (value !== this.triggerMode) {
                this.triggerMode = value;
                this.unbindEvent();
                this.bindEvent();
            }
        }
    }
    /**
     * @return {?}
     */
    get trigger() {
        return this.triggerMode;
    }
    /* 禁用---跟其他控件的属性容易冲突，逐渐废弃。
         * 比如按钮可以设置禁用不触发点击，但想给出点击提示，这样就冲突了
         */
    /**
     * @param {?} value
     * @return {?}
     */
    set disable(value) {
        this.enableOrDisable(!value);
    }
    /**
     * @return {?}
     */
    get disable() {
        return !this.tooltipEnable;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.bindEvent();
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() { }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.unbindEvent();
        this.removeTooltip();
        this.overLayService.destory(this.el.nativeElement);
        this.overLayService = null;
    }
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    enableOrDisable(value) {
        this.tooltipEnable = value;
        if (this.tooltipEnable) {
            this.bindEvent();
        }
        else {
            this.unbindEvent();
        }
    }
    /**
     * @return {?}
     */
    bindEvent() {
        if (!this.tooltipEnable) {
            return;
        }
        // 是否已绑定事件
        if (this.hasBindEvent) {
            return;
        }
        if (this.trigger === "click") {
            // 鼠标点击
            this.clickEvent = this.render.listen(this.el.nativeElement, "click", (/**
             * @param {?} e
             * @return {?}
             */
            (e) => {
                e.stopPropagation();
                this.appendTooltip();
                this.clickOutEvent = this.render.listen(document, "click", (/**
                 * @return {?}
                 */
                () => {
                    this.removeTooltip();
                    this.clickOutEvent();
                }));
            }));
        }
        else if (this.trigger === "focus") {
            // 聚焦
            // @Todo 需要把input等组件和普通组件分开
            this.focusDownEvent = this.render.listen(this.el.nativeElement, "mousedown", (/**
             * @param {?} e
             * @return {?}
             */
            (e) => {
                e.preventDefault();
                this.appendTooltip();
            }));
            this.focusUpEvent = this.render.listen(this.el.nativeElement, "mouseup", (/**
             * @param {?} e
             * @return {?}
             */
            (e) => {
                e.stopPropagation();
                this.removeTooltip();
            }));
        }
        else {
            // 鼠标移动上去
            this.mouseenterEvent = this.render.listen(this.el.nativeElement, "mouseenter", (/**
             * @param {?} e
             * @return {?}
             */
            (e) => {
                e.stopPropagation();
                if (this.delay) {
                    if (this.delayTimer) {
                        clearTimeout(this.delayTimer);
                    }
                    this.delayTimer = setTimeout((/**
                     * @return {?}
                     */
                    () => {
                        this.appendTooltip();
                        clearTimeout(this.delayTimer);
                    }), this.delay);
                }
                else {
                    this.appendTooltip();
                }
            }));
            this.mouseleaveEvent = this.render.listen(this.el.nativeElement, "mouseleave", (/**
             * @param {?} e
             * @return {?}
             */
            (e) => {
                e.stopPropagation();
                if (this.delayTimer) {
                    clearTimeout(this.delayTimer);
                }
                this.removeTooltip();
            }));
        }
        this.hasBindEvent = true;
    }
    /* 解绑事件 */
    /**
     * @return {?}
     */
    unbindEvent() {
        // 鼠标移上去
        if (this.mouseenterEvent) {
            this.mouseenterEvent();
        }
        if (this.mouseleaveEvent) {
            this.mouseleaveEvent();
        }
        if (this.clickEvent) {
            this.clickEvent();
        }
        if (this.clickOutEvent) {
            this.clickOutEvent();
        }
        if (this.focusDownEvent) {
            this.focusDownEvent();
        }
        if (this.focusUpEvent) {
            this.focusUpEvent();
        }
        this.hasBindEvent = false;
    }
    /* body  移除tooltip */
    /**
     * @return {?}
     */
    removeTooltip() {
        if (this.tooltip) {
            this.render.removeChild(document.body, this.tooltip.el.nativeElement);
            this._componentRef.changeDetectorRef.markForCheck();
            this._componentRef.changeDetectorRef.detectChanges();
            this._componentRef.destroy();
            this.viewContainerRef.clear();
            this.tooltip = null;
            this._componentRef = null;
            this.overLayService.destory(this.el.nativeElement);
        }
    }
    /**
     * @private
     * @return {?}
     */
    appendTooltip() {
        if (!this.showTip)
            return;
        this.generateTooltip();
        this.updateViewProps(this.placement, this.content, this.el.nativeElement.getBoundingClientRect(), this.getReferencePosition());
        this.overLayService.registerMouseEvent(this.el.nativeElement, (/**
         * @param {?} e
         * @return {?}
         */
        (e) => {
            this.removeTooltip();
        }));
    }
    /* 更新tooltip组件属性 */
    /**
     * @private
     * @param {?} placement
     * @param {?} content
     * @param {?} hostBoundingClientRect
     * @param {?} referenceBoundingRect
     * @return {?}
     */
    updateViewProps(placement, content, hostBoundingClientRect, referenceBoundingRect) {
        this.tooltip.placement = placement;
        this.tooltip.content = content;
        this.tooltip.hostBoundingClientRect = hostBoundingClientRect;
        this.tooltip.tipCls = this.tipCls;
        this.tooltip.tipWidth = this.tipWidth;
        this.tooltip.referenceBoundingRect = referenceBoundingRect;
        this._componentRef.changeDetectorRef.markForCheck();
        this._componentRef.changeDetectorRef.detectChanges();
    }
    /* 构造tooltip结构 */
    /**
     * @private
     * @return {?}
     */
    generateTooltip() {
        this._componentRef = this.viewContainerRef.createComponent(this.componentFactory);
        this.tooltip = this._componentRef.instance;
        this.tooltip.zIndex = '' + this.commUtils.getFloatingLayerIndex();
        // 父元素中移除  添加到body中
        this.render.removeChild(this.render.parentNode(this.el.nativeElement), this.tooltip.el.nativeElement);
        this.render.appendChild(document.body, this.tooltip.el.nativeElement);
    }
    /**
     * 确认参照的边界
     * @private
     * @return {?}
     */
    getReferencePosition() {
        /** @type {?} */
        let rRight = document.documentElement.clientWidth;
        /** @type {?} */
        let rBottom = document.documentElement.clientHeight;
        /** @type {?} */
        let rTop = 0;
        /** @type {?} */
        let rLeft = 0;
        // 横向参照
        if (this.rectifyReferenceH) {
            /** @type {?} */
            let rectifyReferenceHEl = this.getRectifyReferenceElement(this.rectifyReferenceH);
            rRight = rectifyReferenceHEl.getBoundingClientRect().right;
            rLeft = rectifyReferenceHEl.getBoundingClientRect().left;
        }
        // 纵向参照
        if (this.rectifyReferenceV) {
            /** @type {?} */
            let rectifyReferenceVEl = this.getRectifyReferenceElement(this.rectifyReferenceV);
            rBottom = rectifyReferenceVEl.getBoundingClientRect().bottom;
            rTop = rectifyReferenceVEl.getBoundingClientRect().top;
        }
        return { top: rTop, left: rLeft, right: rRight, bottom: rBottom };
    }
    /**
     * 获取纠正元素
     * @private
     * @param {?} referenceEl
     * @return {?}
     */
    getRectifyReferenceElement(referenceEl) {
        if (referenceEl instanceof ElementRef) {
            return referenceEl.nativeElement;
        }
        else if (typeof referenceEl == "string") {
            return document.querySelector((/** @type {?} */ (referenceEl)));
        }
        return referenceEl;
    }
}
FarrisTooltipDirective.decorators = [
    { type: Directive, args: [{
                selector: "[farrisTooltip]",
            },] }
];
/** @nocollapse */
FarrisTooltipDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: ViewContainerRef },
    { type: ComponentFactoryResolver }
];
FarrisTooltipDirective.propDecorators = {
    enableTooltip: [{ type: Input, args: ["farrisTooltip",] }],
    text: [{ type: Input }],
    tipCls: [{ type: Input }],
    tipWidth: [{ type: Input }],
    placement: [{ type: Input }],
    zIndex: [{ type: Input }],
    trigger: [{ type: Input }],
    disable: [{ type: Input }],
    showTip: [{ type: Input }],
    rectifyReferenceH: [{ type: Input }],
    rectifyReferenceV: [{ type: Input }],
    delay: [{ type: Input }],
    content: [{ type: Input }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    FarrisTooltipDirective.prototype.tooltipEnable;
    /**
     * @type {?}
     * @private
     */
    FarrisTooltipDirective.prototype._componentRef;
    /** @type {?} */
    FarrisTooltipDirective.prototype.text;
    /** @type {?} */
    FarrisTooltipDirective.prototype.tipCls;
    /** @type {?} */
    FarrisTooltipDirective.prototype.tipWidth;
    /** @type {?} */
    FarrisTooltipDirective.prototype.placement;
    /** @type {?} */
    FarrisTooltipDirective.prototype.zIndex;
    /**
     * @type {?}
     * @private
     */
    FarrisTooltipDirective.prototype.triggerMode;
    /** @type {?} */
    FarrisTooltipDirective.prototype.showTip;
    /** @type {?} */
    FarrisTooltipDirective.prototype.rectifyReferenceH;
    /** @type {?} */
    FarrisTooltipDirective.prototype.rectifyReferenceV;
    /** @type {?} */
    FarrisTooltipDirective.prototype.delay;
    /** @type {?} */
    FarrisTooltipDirective.prototype.content;
    /** @type {?} */
    FarrisTooltipDirective.prototype.mouseenterEvent;
    /** @type {?} */
    FarrisTooltipDirective.prototype.mouseleaveEvent;
    /** @type {?} */
    FarrisTooltipDirective.prototype.clickEvent;
    /** @type {?} */
    FarrisTooltipDirective.prototype.clickOutEvent;
    /** @type {?} */
    FarrisTooltipDirective.prototype.focusDownEvent;
    /** @type {?} */
    FarrisTooltipDirective.prototype.focusUpEvent;
    /** @type {?} */
    FarrisTooltipDirective.prototype.docBody;
    /**
     * @type {?}
     * @private
     */
    FarrisTooltipDirective.prototype.hasBindEvent;
    /**
     * @type {?}
     * @private
     */
    FarrisTooltipDirective.prototype.delayTimer;
    /** @type {?} */
    FarrisTooltipDirective.prototype.componentFactory;
    /** @type {?} */
    FarrisTooltipDirective.prototype.tooltipRef;
    /** @type {?} */
    FarrisTooltipDirective.prototype.tooltip;
    /** @type {?} */
    FarrisTooltipDirective.prototype.overLayService;
    /** @type {?} */
    FarrisTooltipDirective.prototype.commUtils;
    /**
     * @type {?}
     * @private
     */
    FarrisTooltipDirective.prototype.el;
    /**
     * @type {?}
     * @private
     */
    FarrisTooltipDirective.prototype.render;
    /**
     * @type {?}
     * @private
     */
    FarrisTooltipDirective.prototype.viewContainerRef;
    /**
     * @type {?}
     * @private
     */
    FarrisTooltipDirective.prototype.resolver;
}
//# sourceMappingURL=data:application/json;base64,