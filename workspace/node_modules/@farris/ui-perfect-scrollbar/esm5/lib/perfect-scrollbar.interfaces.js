/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { InjectionToken } from '@angular/core';
/** @type {?} */
export var PERFECT_SCROLLBAR_CONFIG = new InjectionToken('PERFECT_SCROLLBAR_CONFIG');
var Geometry = /** @class */ (function () {
    function Geometry(x, y, w, h) {
        this.x = x;
        this.y = y;
        this.w = w;
        this.h = h;
    }
    return Geometry;
}());
export { Geometry };
if (false) {
    /** @type {?} */
    Geometry.prototype.x;
    /** @type {?} */
    Geometry.prototype.y;
    /** @type {?} */
    Geometry.prototype.w;
    /** @type {?} */
    Geometry.prototype.h;
}
var Position = /** @class */ (function () {
    function Position(x, y) {
        this.x = x;
        this.y = y;
    }
    return Position;
}());
export { Position };
if (false) {
    /** @type {?} */
    Position.prototype.x;
    /** @type {?} */
    Position.prototype.y;
}
/** @type {?} */
export var PerfectScrollbarEvents = [
    'psScrollY',
    'psScrollX',
    'psScrollUp',
    'psScrollDown',
    'psScrollLeft',
    'psScrollRight',
    'psYReachEnd',
    'psYReachStart',
    'psXReachEnd',
    'psXReachStart'
];
/**
 * @record
 */
export function PerfectScrollbarConfigInterface() { }
if (false) {
    /** @type {?|undefined} */
    PerfectScrollbarConfigInterface.prototype.handlers;
    /** @type {?|undefined} */
    PerfectScrollbarConfigInterface.prototype.wheelSpeed;
    /** @type {?|undefined} */
    PerfectScrollbarConfigInterface.prototype.swipeEasing;
    /** @type {?|undefined} */
    PerfectScrollbarConfigInterface.prototype.suppressScrollX;
    /** @type {?|undefined} */
    PerfectScrollbarConfigInterface.prototype.suppressScrollY;
    /** @type {?|undefined} */
    PerfectScrollbarConfigInterface.prototype.wheelPropagation;
    /** @type {?|undefined} */
    PerfectScrollbarConfigInterface.prototype.useBothWheelAxes;
    /** @type {?|undefined} */
    PerfectScrollbarConfigInterface.prototype.scrollingThreshold;
    /** @type {?|undefined} */
    PerfectScrollbarConfigInterface.prototype.minScrollbarLength;
    /** @type {?|undefined} */
    PerfectScrollbarConfigInterface.prototype.maxScrollbarLength;
    /** @type {?|undefined} */
    PerfectScrollbarConfigInterface.prototype.scrollXMarginOffset;
    /** @type {?|undefined} */
    PerfectScrollbarConfigInterface.prototype.scrollYMarginOffset;
}
var PerfectScrollbarConfig = /** @class */ (function () {
    function PerfectScrollbarConfig(config) {
        if (config === void 0) { config = {}; }
        this.assign(config);
    }
    /**
     * @param {?=} config
     * @return {?}
     */
    PerfectScrollbarConfig.prototype.assign = /**
     * @param {?=} config
     * @return {?}
     */
    function (config) {
        if (config === void 0) { config = {}; }
        for (var key in config) {
            this[(/** @type {?} */ (key))] = config[(/** @type {?} */ (key))];
        }
    };
    return PerfectScrollbarConfig;
}());
export { PerfectScrollbarConfig };
if (false) {
    /** @type {?} */
    PerfectScrollbarConfig.prototype.handlers;
    /** @type {?} */
    PerfectScrollbarConfig.prototype.wheelSpeed;
    /** @type {?} */
    PerfectScrollbarConfig.prototype.swipeEasing;
    /** @type {?} */
    PerfectScrollbarConfig.prototype.suppressScrollX;
    /** @type {?} */
    PerfectScrollbarConfig.prototype.suppressScrollY;
    /** @type {?} */
    PerfectScrollbarConfig.prototype.wheelPropagation;
    /** @type {?} */
    PerfectScrollbarConfig.prototype.useBothWheelAxes;
    /** @type {?} */
    PerfectScrollbarConfig.prototype.scrollingThreshold;
    /** @type {?} */
    PerfectScrollbarConfig.prototype.minScrollbarLength;
    /** @type {?} */
    PerfectScrollbarConfig.prototype.maxScrollbarLength;
    /** @type {?} */
    PerfectScrollbarConfig.prototype.scrollXMarginOffset;
    /** @type {?} */
    PerfectScrollbarConfig.prototype.scrollYMarginOffset;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyZmVjdC1zY3JvbGxiYXIuaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktcGVyZmVjdC1zY3JvbGxiYXIvIiwic291cmNlcyI6WyJsaWIvcGVyZmVjdC1zY3JvbGxiYXIuaW50ZXJmYWNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFL0MsTUFBTSxLQUFPLHdCQUF3QixHQUFHLElBQUksY0FBYyxDQUFDLDBCQUEwQixDQUFDO0FBRXRGO0lBT0Usa0JBQVksQ0FBUyxFQUFFLENBQVMsRUFBRSxDQUFTLEVBQUUsQ0FBUztRQUNwRCxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNiLENBQUM7SUFDSCxlQUFDO0FBQUQsQ0FBQyxBQWJELElBYUM7Ozs7SUFaQyxxQkFBaUI7O0lBQ2pCLHFCQUFpQjs7SUFFakIscUJBQWlCOztJQUNqQixxQkFBaUI7O0FBVW5CO0lBSUUsa0JBQVksQ0FBMkIsRUFBRSxDQUEyQjtRQUNsRSxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2IsQ0FBQztJQUNILGVBQUM7QUFBRCxDQUFDLEFBUkQsSUFRQzs7OztJQVBDLHFCQUFtQzs7SUFDbkMscUJBQW1DOzs7QUFXckMsTUFBTSxLQUFPLHNCQUFzQixHQUE0QjtJQUM3RCxXQUFXO0lBQ1gsV0FBVztJQUVYLFlBQVk7SUFDWixjQUFjO0lBQ2QsY0FBYztJQUNkLGVBQWU7SUFFZixhQUFhO0lBQ2IsZUFBZTtJQUNmLGFBQWE7SUFDYixlQUFlO0NBQ2hCOzs7O0FBRUQscURBbUJDOzs7SUFsQkMsbURBQW9COztJQUVwQixxREFBb0I7O0lBQ3BCLHNEQUFzQjs7SUFFdEIsMERBQTBCOztJQUMxQiwwREFBMEI7O0lBRTFCLDJEQUEyQjs7SUFDM0IsMkRBQTJCOztJQUUzQiw2REFBNEI7O0lBRTVCLDZEQUE0Qjs7SUFDNUIsNkRBQTRCOztJQUU1Qiw4REFBNkI7O0lBQzdCLDhEQUE2Qjs7QUFHL0I7SUFvQkUsZ0NBQVksTUFBNEM7UUFBNUMsdUJBQUEsRUFBQSxXQUE0QztRQUN0RCxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3RCLENBQUM7Ozs7O0lBRU0sdUNBQU07Ozs7SUFBYixVQUFjLE1BQTRDO1FBQTVDLHVCQUFBLEVBQUEsV0FBNEM7UUFDeEQsS0FBSyxJQUFNLEdBQUcsSUFBSSxNQUFNLEVBQUU7WUFDeEIsSUFBSSxDQUFDLG1CQUFBLEdBQUcsRUFBZ0MsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxtQkFBQSxHQUFHLEVBQXlDLENBQUMsQ0FBQztTQUNsRztJQUNILENBQUM7SUFDSCw2QkFBQztBQUFELENBQUMsQUE3QkQsSUE2QkM7Ozs7SUE1QkMsMENBQTJCOztJQUUzQiw0Q0FBMkI7O0lBQzNCLDZDQUE2Qjs7SUFFN0IsaURBQWlDOztJQUNqQyxpREFBaUM7O0lBRWpDLGtEQUFrQzs7SUFDbEMsa0RBQWtDOztJQUVsQyxvREFBbUM7O0lBRW5DLG9EQUFtQzs7SUFDbkMsb0RBQW1DOztJQUVuQyxxREFBb0M7O0lBQ3BDLHFEQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGlvblRva2VuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5leHBvcnQgY29uc3QgUEVSRkVDVF9TQ1JPTExCQVJfQ09ORklHID0gbmV3IEluamVjdGlvblRva2VuKCdQRVJGRUNUX1NDUk9MTEJBUl9DT05GSUcnKTtcclxuXHJcbmV4cG9ydCBjbGFzcyBHZW9tZXRyeSB7XHJcbiAgcHVibGljIHg6IG51bWJlcjtcclxuICBwdWJsaWMgeTogbnVtYmVyO1xyXG5cclxuICBwdWJsaWMgdzogbnVtYmVyO1xyXG4gIHB1YmxpYyBoOiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHg6IG51bWJlciwgeTogbnVtYmVyLCB3OiBudW1iZXIsIGg6IG51bWJlcikge1xyXG4gICAgdGhpcy54ID0geDtcclxuICAgIHRoaXMueSA9IHk7XHJcbiAgICB0aGlzLncgPSB3O1xyXG4gICAgdGhpcy5oID0gaDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBQb3NpdGlvbiB7XHJcbiAgcHVibGljIHg6IG51bWJlciB8ICdzdGFydCcgfCAnZW5kJztcclxuICBwdWJsaWMgeTogbnVtYmVyIHwgJ3N0YXJ0JyB8ICdlbmQnO1xyXG5cclxuICBjb25zdHJ1Y3Rvcih4OiBudW1iZXIgfCAnc3RhcnQnIHwgJ2VuZCcsIHk6IG51bWJlciB8ICdzdGFydCcgfCAnZW5kJykge1xyXG4gICAgdGhpcy54ID0geDtcclxuICAgIHRoaXMueSA9IHk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgdHlwZSBQZXJmZWN0U2Nyb2xsYmFyRXZlbnQgPSAncHNTY3JvbGxZJyB8ICdwc1Njcm9sbFgnIHwgJ3BzU2Nyb2xsVXAnfCAncHNTY3JvbGxEb3duJyB8XHJcbiAgJ3BzU2Nyb2xsTGVmdCcgfCAncHNTY3JvbGxSaWdodCcgfCAncHNZUmVhY2hFbmQnIHwgJ3BzWVJlYWNoU3RhcnQnIHwgJ3BzWFJlYWNoRW5kJyB8ICdwc1hSZWFjaFN0YXJ0JztcclxuXHJcbmV4cG9ydCBjb25zdCBQZXJmZWN0U2Nyb2xsYmFyRXZlbnRzOiBQZXJmZWN0U2Nyb2xsYmFyRXZlbnRbXSA9IFtcclxuICAncHNTY3JvbGxZJyxcclxuICAncHNTY3JvbGxYJyxcclxuXHJcbiAgJ3BzU2Nyb2xsVXAnLFxyXG4gICdwc1Njcm9sbERvd24nLFxyXG4gICdwc1Njcm9sbExlZnQnLFxyXG4gICdwc1Njcm9sbFJpZ2h0JyxcclxuXHJcbiAgJ3BzWVJlYWNoRW5kJyxcclxuICAncHNZUmVhY2hTdGFydCcsXHJcbiAgJ3BzWFJlYWNoRW5kJyxcclxuICAncHNYUmVhY2hTdGFydCdcclxuXTtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUGVyZmVjdFNjcm9sbGJhckNvbmZpZ0ludGVyZmFjZSB7XHJcbiAgaGFuZGxlcnM/OiBzdHJpbmdbXTtcclxuXHJcbiAgd2hlZWxTcGVlZD86IG51bWJlcjtcclxuICBzd2lwZUVhc2luZz86IGJvb2xlYW47XHJcblxyXG4gIHN1cHByZXNzU2Nyb2xsWD86IGJvb2xlYW47XHJcbiAgc3VwcHJlc3NTY3JvbGxZPzogYm9vbGVhbjtcclxuXHJcbiAgd2hlZWxQcm9wYWdhdGlvbj86IGJvb2xlYW47XHJcbiAgdXNlQm90aFdoZWVsQXhlcz86IGJvb2xlYW47XHJcblxyXG4gIHNjcm9sbGluZ1RocmVzaG9sZD86IG51bWJlcjtcclxuXHJcbiAgbWluU2Nyb2xsYmFyTGVuZ3RoPzogbnVtYmVyO1xyXG4gIG1heFNjcm9sbGJhckxlbmd0aD86IG51bWJlcjtcclxuXHJcbiAgc2Nyb2xsWE1hcmdpbk9mZnNldD86IG51bWJlcjtcclxuICBzY3JvbGxZTWFyZ2luT2Zmc2V0PzogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgUGVyZmVjdFNjcm9sbGJhckNvbmZpZyBpbXBsZW1lbnRzIFBlcmZlY3RTY3JvbGxiYXJDb25maWdJbnRlcmZhY2Uge1xyXG4gIHB1YmxpYyBoYW5kbGVycz86IHN0cmluZ1tdO1xyXG5cclxuICBwdWJsaWMgd2hlZWxTcGVlZD86IG51bWJlcjtcclxuICBwdWJsaWMgc3dpcGVFYXNpbmc/OiBib29sZWFuO1xyXG5cclxuICBwdWJsaWMgc3VwcHJlc3NTY3JvbGxYPzogYm9vbGVhbjtcclxuICBwdWJsaWMgc3VwcHJlc3NTY3JvbGxZPzogYm9vbGVhbjtcclxuXHJcbiAgcHVibGljIHdoZWVsUHJvcGFnYXRpb24/OiBib29sZWFuO1xyXG4gIHB1YmxpYyB1c2VCb3RoV2hlZWxBeGVzPzogYm9vbGVhbjtcclxuXHJcbiAgcHVibGljIHNjcm9sbGluZ1RocmVzaG9sZD86IG51bWJlcjtcclxuXHJcbiAgcHVibGljIG1pblNjcm9sbGJhckxlbmd0aD86IG51bWJlcjtcclxuICBwdWJsaWMgbWF4U2Nyb2xsYmFyTGVuZ3RoPzogbnVtYmVyO1xyXG5cclxuICBwdWJsaWMgc2Nyb2xsWE1hcmdpbk9mZnNldD86IG51bWJlcjtcclxuICBwdWJsaWMgc2Nyb2xsWU1hcmdpbk9mZnNldD86IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IoY29uZmlnOiBQZXJmZWN0U2Nyb2xsYmFyQ29uZmlnSW50ZXJmYWNlID0ge30pIHtcclxuICAgIHRoaXMuYXNzaWduKGNvbmZpZyk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYXNzaWduKGNvbmZpZzogUGVyZmVjdFNjcm9sbGJhckNvbmZpZ0ludGVyZmFjZSA9IHt9KSB7XHJcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBjb25maWcpIHtcclxuICAgICAgdGhpc1trZXkgYXMga2V5b2YgUGVyZmVjdFNjcm9sbGJhckNvbmZpZ10gPSBjb25maWdba2V5IGFzIGtleW9mIFBlcmZlY3RTY3JvbGxiYXJDb25maWdJbnRlcmZhY2VdO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=