{"version":3,"sources":["ng://@farris/ui-perfect-scrollbar/lib/perfect-scrollbar.interfaces.ts","ng://@farris/ui-perfect-scrollbar/lib/perfect-scrollbar.directive.ts","ng://@farris/ui-perfect-scrollbar/lib/perfect-scrollbar.component.ts","ng://@farris/ui-perfect-scrollbar/lib/perfect-scrollbar.module.ts"],"names":["PERFECT_SCROLLBAR_CONFIG","InjectionToken","Geometry","x","y","w","h","this","Position","PerfectScrollbarEvents","PerfectScrollbarConfig","prototype","assign","config","key","PerfectScrollbarDirective","ngOnInit","_this","disabled","isPlatformBrowser","platformId","config_1","defaults","zone","runOutsideAngular","instance","PerfectScrollbar","elementRef","nativeElement","configDiff","differs","find","create","diff","ro","ResizeObserver","update","children","observe","forEach","eventName","eventType","replace","c","toLowerCase","fromEvent","pipe","takeUntil","ngDestroy","subscribe","event","emit","ngOnDestroy","next","complete","disconnect","timeout","window","clearTimeout","destroy","ngDoCheck","ngOnChanges","changes","isFirstChange","currentValue","previousValue","ps","setTimeout","error","geometry","prefix","position","absolute","reach","scrollLeft","scrollTop","scrollable","direction","element","classList","contains","scrollTo","speed","animateScrolling","scrollToX","scrollToY","scrollToTop","offset","scrollToLeft","scrollToRight","left","scrollWidth","clientWidth","scrollToBottom","top","scrollHeight","clientHeight","scrollToElement","qs","querySelector","elementPos","getBoundingClientRect","scrollerPos","currentPos","target","value","animation","cancelAnimationFrame","newValue_1","scrollCount_1","oldTimestamp_1","performance","now","oldValue_1","cosParameter_1","step_1","newTimestamp","Math","PI","round","cos","requestAnimationFrame","Directive","args","selector","exportAs","NgZone","KeyValueDiffers","ElementRef","Object","decorators","type","Inject","PLATFORM_ID","Optional","Input","Output","Subject","psScrollY","EventEmitter","psScrollX","psScrollUp","psScrollDown","psScrollLeft","psScrollRight","psYReachEnd","psYReachStart","psXReachEnd","psXReachStart","PerfectScrollbarComponent","stateUpdate","distinctUntilChanged","a","b","stateTimeout","state","interaction","indicatorX","states","right","autoPropagation","usePropagationX","allowPropagationX","indicatorY","bottom","usePropagationY","allowPropagationY","cdRef","markForCheck","detectChanges","directiveRef","scrollDeltaX","deltaX","scrollDeltaY","deltaY","checkPropagation","scrollPositionX","touches","clientX","scrollPositionY","clientY","merge","mapTo","scrollIndicators","unsubscribe","scrollDirectionX","scrollDirectionY","preventDefault","stopPropagation","Component","template","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","HostBinding","ViewChild","usePSClass","PerfectScrollbarModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const PERFECT_SCROLLBAR_CONFIG = new InjectionToken('PERFECT_SCROLLBAR_CONFIG');\r\n\r\nexport class Geometry {\r\n  public x: number;\r\n  public y: number;\r\n\r\n  public w: number;\r\n  public h: number;\r\n\r\n  constructor(x: number, y: number, w: number, h: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.w = w;\r\n    this.h = h;\r\n  }\r\n}\r\n\r\nexport class Position {\r\n  public x: number | 'start' | 'end';\r\n  public y: number | 'start' | 'end';\r\n\r\n  constructor(x: number | 'start' | 'end', y: number | 'start' | 'end') {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n\r\nexport type PerfectScrollbarEvent = 'psScrollY' | 'psScrollX' | 'psScrollUp'| 'psScrollDown' |\r\n  'psScrollLeft' | 'psScrollRight' | 'psYReachEnd' | 'psYReachStart' | 'psXReachEnd' | 'psXReachStart';\r\n\r\nexport const PerfectScrollbarEvents: PerfectScrollbarEvent[] = [\r\n  'psScrollY',\r\n  'psScrollX',\r\n\r\n  'psScrollUp',\r\n  'psScrollDown',\r\n  'psScrollLeft',\r\n  'psScrollRight',\r\n\r\n  'psYReachEnd',\r\n  'psYReachStart',\r\n  'psXReachEnd',\r\n  'psXReachStart'\r\n];\r\n\r\nexport interface PerfectScrollbarConfigInterface {\r\n  handlers?: string[];\r\n\r\n  wheelSpeed?: number;\r\n  swipeEasing?: boolean;\r\n\r\n  suppressScrollX?: boolean;\r\n  suppressScrollY?: boolean;\r\n\r\n  wheelPropagation?: boolean;\r\n  useBothWheelAxes?: boolean;\r\n\r\n  scrollingThreshold?: number;\r\n\r\n  minScrollbarLength?: number;\r\n  maxScrollbarLength?: number;\r\n\r\n  scrollXMarginOffset?: number;\r\n  scrollYMarginOffset?: number;\r\n}\r\n\r\nexport class PerfectScrollbarConfig implements PerfectScrollbarConfigInterface {\r\n  public handlers?: string[];\r\n\r\n  public wheelSpeed?: number;\r\n  public swipeEasing?: boolean;\r\n\r\n  public suppressScrollX?: boolean;\r\n  public suppressScrollY?: boolean;\r\n\r\n  public wheelPropagation?: boolean;\r\n  public useBothWheelAxes?: boolean;\r\n\r\n  public scrollingThreshold?: number;\r\n\r\n  public minScrollbarLength?: number;\r\n  public maxScrollbarLength?: number;\r\n\r\n  public scrollXMarginOffset?: number;\r\n  public scrollYMarginOffset?: number;\r\n\r\n  constructor(config: PerfectScrollbarConfigInterface = {}) {\r\n    this.assign(config);\r\n  }\r\n\r\n  public assign(config: PerfectScrollbarConfigInterface = {}) {\r\n    for (const key in config) {\r\n      this[key as keyof PerfectScrollbarConfig] = config[key as keyof PerfectScrollbarConfigInterface];\r\n    }\r\n  }\r\n}\r\n","\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\nimport { Subject, fromEvent } from 'rxjs';\r\nimport { auditTime, takeUntil } from 'rxjs/operators';\r\n\r\nimport { PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport {\r\n    NgZone, Inject, Optional, ElementRef, Directive,\r\n    OnInit, DoCheck, OnChanges, OnDestroy, Input, Output, EventEmitter,\r\n    SimpleChanges, KeyValueDiffer, KeyValueDiffers\r\n} from '@angular/core';\r\n\r\nimport { Geometry, Position } from './perfect-scrollbar.interfaces';\r\n\r\nimport {\r\n    PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfig, PerfectScrollbarConfigInterface,\r\n    PerfectScrollbarEvent, PerfectScrollbarEvents\r\n} from './perfect-scrollbar.interfaces';\r\n\r\n@Directive({\r\n    selector: '[perfectScrollbar]',\r\n    exportAs: 'ngxPerfectScrollbar'\r\n})\r\nexport class PerfectScrollbarDirective implements OnInit, OnDestroy, DoCheck, OnChanges {\r\n    private instance: PerfectScrollbar | null = null;\r\n\r\n    private ro: ResizeObserver | null = null;\r\n\r\n    private timeout: number | null = null;\r\n    private animation: number | null = null;\r\n\r\n    private configDiff: KeyValueDiffer<string, any> | null = null;\r\n\r\n    private readonly ngDestroy: Subject<void> = new Subject();\r\n\r\n    @Input() disabled = false;\r\n\r\n    @Input('perfectScrollbar') config?: PerfectScrollbarConfigInterface;\r\n\r\n    @Output() psScrollY: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollX: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psScrollUp: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollDown: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollLeft: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollRight: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psYReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psYReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(private zone: NgZone, private differs: KeyValueDiffers,\r\n        public elementRef: ElementRef, @Inject(PLATFORM_ID) private platformId: Object,\r\n        @Optional() @Inject(PERFECT_SCROLLBAR_CONFIG) private defaults: PerfectScrollbarConfigInterface) { }\r\n\r\n    ngOnInit(): void {\r\n        if (!this.disabled && isPlatformBrowser(this.platformId)) {\r\n            const config = new PerfectScrollbarConfig(this.defaults);\r\n\r\n            config.assign(this.config); // Custom configuration\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                this.instance = new PerfectScrollbar(this.elementRef.nativeElement, config);\r\n            });\r\n\r\n            if (!this.configDiff) {\r\n                this.configDiff = this.differs.find(this.config || {}).create();\r\n\r\n                this.configDiff.diff(this.config || {});\r\n            }\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                this.ro = new ResizeObserver(() => {\r\n                    this.update();\r\n                });\r\n\r\n                if (this.elementRef.nativeElement.children[0]) {\r\n                    this.ro.observe(this.elementRef.nativeElement.children[0]);\r\n                }\r\n\r\n                this.ro.observe(this.elementRef.nativeElement);\r\n            });\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                PerfectScrollbarEvents.forEach((eventName: PerfectScrollbarEvent) => {\r\n                    const eventType = eventName.replace(/([A-Z])/g, (c) => `-${c.toLowerCase()}`);\r\n\r\n                    fromEvent<Event>(this.elementRef.nativeElement, eventType)\r\n                        .pipe(\r\n                            // auditTime(20),\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((event: Event) => {\r\n                            this[eventName].emit(event);\r\n                        });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.ngDestroy.next();\r\n            this.ngDestroy.complete();\r\n\r\n            if (this.ro) {\r\n                this.ro.disconnect();\r\n            }\r\n\r\n            if (this.timeout && typeof window !== 'undefined') {\r\n                window.clearTimeout(this.timeout);\r\n            }\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                if (this.instance) {\r\n                    this.instance.destroy();\r\n                }\r\n            });\r\n\r\n            this.instance = null;\r\n        }\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        if (!this.disabled && this.configDiff && isPlatformBrowser(this.platformId)) {\r\n            const changes = this.configDiff.diff(this.config || {});\r\n\r\n            if (changes) {\r\n                this.ngOnDestroy();\r\n\r\n                this.ngOnInit();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes['disabled'] && !changes['disabled'].isFirstChange() && isPlatformBrowser(this.platformId)) {\r\n            if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\r\n                if (changes['disabled'].currentValue === true) {\r\n                    this.ngOnDestroy();\r\n                } else if (changes['disabled'].currentValue === false) {\r\n                    this.ngOnInit();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public ps(): PerfectScrollbar | null {\r\n        return this.instance;\r\n    }\r\n\r\n    public update(): void {\r\n        if (typeof window !== 'undefined') {\r\n            if (this.timeout) {\r\n                window.clearTimeout(this.timeout);\r\n            }\r\n            this.timeout = window.setTimeout(() => {\r\n                if (!this.disabled && this.configDiff) {\r\n                    try {\r\n                        if (this.instance) {\r\n                            this.instance.update();\r\n                        }\r\n                    } catch (error) {\r\n                        // Update can be finished after destroy so catch errors\r\n                    }\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    public geometry(prefix: string = 'scroll'): Geometry {\r\n        return new Geometry(\r\n            this.elementRef.nativeElement[prefix + 'Left'],\r\n            this.elementRef.nativeElement[prefix + 'Top'],\r\n            this.elementRef.nativeElement[prefix + 'Width'],\r\n            this.elementRef.nativeElement[prefix + 'Height']\r\n        );\r\n    }\r\n\r\n    public position(absolute: boolean = false): Position {\r\n        if (!absolute && this.instance) {\r\n            return new Position(\r\n                this.instance.reach.x || 0,\r\n                this.instance.reach.y || 0\r\n            );\r\n        } else {\r\n            return new Position(\r\n                this.elementRef.nativeElement.scrollLeft,\r\n                this.elementRef.nativeElement.scrollTop\r\n            );\r\n        }\r\n    }\r\n\r\n    public scrollable(direction: string = 'any'): boolean {\r\n        const element = this.elementRef.nativeElement;\r\n\r\n        if (direction === 'any') {\r\n            return element.classList.contains('ps--active-x') ||\r\n                element.classList.contains('ps--active-y');\r\n        } else if (direction === 'both') {\r\n            return element.classList.contains('ps--active-x') &&\r\n                element.classList.contains('ps--active-y');\r\n        } else {\r\n            return element.classList.contains('ps--active-' + direction);\r\n        }\r\n    }\r\n\r\n    public scrollTo(x: number, y?: number, speed?: number): void {\r\n        if (!this.disabled) {\r\n            if (y == null && speed == null) {\r\n                this.animateScrolling('scrollTop', x, speed);\r\n            } else {\r\n                if (x != null) {\r\n                    this.animateScrolling('scrollLeft', x, speed);\r\n                }\r\n\r\n                if (y != null) {\r\n                    this.animateScrolling('scrollTop', y, speed);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public scrollToX(x: number, speed?: number): void {\r\n        this.animateScrolling('scrollLeft', x, speed);\r\n    }\r\n\r\n    public scrollToY(y: number, speed?: number): void {\r\n        this.animateScrolling('scrollTop', y, speed);\r\n    }\r\n\r\n    public scrollToTop(offset?: number, speed?: number): void {\r\n        this.animateScrolling('scrollTop', (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToLeft(offset?: number, speed?: number): void {\r\n        this.animateScrolling('scrollLeft', (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToRight(offset?: number, speed?: number): void {\r\n        const left = this.elementRef.nativeElement.scrollWidth -\r\n            this.elementRef.nativeElement.clientWidth;\r\n\r\n        this.animateScrolling('scrollLeft', left - (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToBottom(offset?: number, speed?: number): void {\r\n        const top = this.elementRef.nativeElement.scrollHeight -\r\n            this.elementRef.nativeElement.clientHeight;\r\n\r\n        this.animateScrolling('scrollTop', top - (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToElement(qs: string, offset?: number, speed?: number): void {\r\n        const element = this.elementRef.nativeElement.querySelector(qs);\r\n\r\n        if (element) {\r\n            const elementPos = element.getBoundingClientRect();\r\n\r\n            const scrollerPos = this.elementRef.nativeElement.getBoundingClientRect();\r\n\r\n            if (this.elementRef.nativeElement.classList.contains('ps--active-x')) {\r\n                const currentPos = this.elementRef.nativeElement['scrollLeft'];\r\n\r\n                const position = elementPos.left - scrollerPos.left + currentPos;\r\n\r\n                this.animateScrolling('scrollLeft', position + (offset || 0), speed);\r\n            }\r\n\r\n            if (this.elementRef.nativeElement.classList.contains('ps--active-y')) {\r\n                const currentPos = this.elementRef.nativeElement['scrollTop'];\r\n\r\n                const position = elementPos.top - scrollerPos.top + currentPos;\r\n\r\n                this.animateScrolling('scrollTop', position + (offset || 0), speed);\r\n            }\r\n        }\r\n    }\r\n\r\n    private animateScrolling(target: string, value: number, speed?: number): void {\r\n        if (this.animation) {\r\n            window.cancelAnimationFrame(this.animation);\r\n\r\n            this.animation = null;\r\n        }\r\n\r\n        if (!speed || typeof window === 'undefined') {\r\n            this.elementRef.nativeElement[target] = value;\r\n        } else if (value !== this.elementRef.nativeElement[target]) {\r\n            let newValue = 0;\r\n            let scrollCount = 0;\r\n\r\n            let oldTimestamp = performance.now();\r\n            let oldValue = this.elementRef.nativeElement[target];\r\n\r\n            const cosParameter = (oldValue - value) / 2;\r\n\r\n            const step = (newTimestamp: number) => {\r\n                scrollCount += Math.PI / (speed / (newTimestamp - oldTimestamp));\r\n\r\n                newValue = Math.round(value + cosParameter + cosParameter * Math.cos(scrollCount));\r\n\r\n                // Only continue animation if scroll position has not changed\r\n                if (this.elementRef.nativeElement[target] === oldValue) {\r\n                    if (scrollCount >= Math.PI) {\r\n                        this.animateScrolling(target, value, 0);\r\n                    } else {\r\n                        this.elementRef.nativeElement[target] = newValue;\r\n\r\n                        // On a zoomed out page the resulting offset may differ\r\n                        oldValue = this.elementRef.nativeElement[target];\r\n\r\n                        oldTimestamp = newTimestamp;\r\n\r\n                        this.animation = window.requestAnimationFrame(step);\r\n                    }\r\n                }\r\n            };\r\n\r\n            window.requestAnimationFrame(step);\r\n        }\r\n    }\r\n}\r\n","\r\n/*\r\n * @Author: Lucas.Huangï¼ç¯çç§æï¼\r\n * @Date: 2018-10-13 11:43:19\r\n * @Last Modified by:   Lucas.Huangï¼ç¯çç§æï¼\r\n * @Last Modified time: 2018-10-13 11:43:19\r\n */\r\nimport { Subject, fromEvent, merge } from 'rxjs';\r\nimport { mapTo, takeUntil, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport {\r\n    NgZone, Inject, Component,\r\n    OnInit, OnDestroy, DoCheck, Input, Output, EventEmitter, HostBinding,\r\n    ViewChild, ViewEncapsulation, ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport { PerfectScrollbarDirective } from './perfect-scrollbar.directive';\r\n\r\nimport {\r\n    PerfectScrollbarEvent, PerfectScrollbarEvents,\r\n    PerfectScrollbarConfigInterface\r\n} from './perfect-scrollbar.interfaces';\r\n\r\n@Component({\r\n    selector: 'perfect-scrollbar',\r\n    exportAs: 'ngxPerfectScrollbar',\r\n    templateUrl: './perfect-scrollbar.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    // styleUrls: [\r\n    //     './perfect-scrollbar.component.css'\r\n    // ],\r\n})\r\nexport class PerfectScrollbarComponent implements OnInit, OnDestroy, DoCheck {\r\n    public states: any = {};\r\n\r\n    public indicatorX = false;\r\n    public indicatorY = false;\r\n\r\n    public interaction = false;\r\n\r\n    private scrollPositionX = 0;\r\n    private scrollPositionY = 0;\r\n\r\n    private scrollDirectionX = 0;\r\n    private scrollDirectionY = 0;\r\n\r\n    private usePropagationX = false;\r\n    private usePropagationY = false;\r\n\r\n    private allowPropagationX = false;\r\n    private allowPropagationY = false;\r\n\r\n    private stateTimeout: number | null = null;\r\n\r\n    private readonly ngDestroy: Subject<void> = new Subject();\r\n\r\n    private readonly stateUpdate: Subject<string> = new Subject();\r\n\r\n    @Input() disabled = false;\r\n\r\n    @Input() usePSClass = true;\r\n\r\n    @HostBinding('class.ps-show-limits')\r\n    @Input() autoPropagation = false;\r\n\r\n    @HostBinding('class.ps-show-active')\r\n    @Input() scrollIndicators = false;\r\n\r\n    @Input() config?: PerfectScrollbarConfigInterface;\r\n\r\n    @Output() psScrollY: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollX: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psScrollUp: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollDown: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollLeft: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollRight: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psYReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psYReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild(PerfectScrollbarDirective) directiveRef?: PerfectScrollbarDirective;\r\n\r\n    constructor(private zone: NgZone, private cdRef: ChangeDetectorRef,\r\n        @Inject(PLATFORM_ID) private platformId: Object) { }\r\n\r\n    ngOnInit(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.stateUpdate\r\n                .pipe(\r\n                    takeUntil(this.ngDestroy),\r\n                    distinctUntilChanged((a, b) => (a === b && !this.stateTimeout))\r\n                )\r\n                .subscribe((state: string) => {\r\n                    if (this.stateTimeout && typeof window !== 'undefined') {\r\n                        window.clearTimeout(this.stateTimeout);\r\n\r\n                        this.stateTimeout = null;\r\n                    }\r\n\r\n                    if (state === 'x' || state === 'y') {\r\n                        this.interaction = false;\r\n\r\n                        if (state === 'x') {\r\n                            this.indicatorX = false;\r\n\r\n                            this.states.left = false;\r\n                            this.states.right = false;\r\n\r\n                            if (this.autoPropagation && this.usePropagationX) {\r\n                                this.allowPropagationX = false;\r\n                            }\r\n                        } else if (state === 'y') {\r\n                            this.indicatorY = false;\r\n\r\n                            this.states.top = false;\r\n                            this.states.bottom = false;\r\n\r\n                            if (this.autoPropagation && this.usePropagationY) {\r\n                                this.allowPropagationY = false;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (state === 'left' || state === 'right') {\r\n                            this.states.left = false;\r\n                            this.states.right = false;\r\n\r\n                            this.states[state] = true;\r\n\r\n                            if (this.autoPropagation && this.usePropagationX) {\r\n                                this.indicatorX = true;\r\n                            }\r\n                        } else if (state === 'top' || state === 'bottom') {\r\n                            this.states.top = false;\r\n                            this.states.bottom = false;\r\n\r\n                            this.states[state] = true;\r\n\r\n                            if (this.autoPropagation && this.usePropagationY) {\r\n                                this.indicatorY = true;\r\n                            }\r\n                        }\r\n\r\n                        if (this.autoPropagation && typeof window !== 'undefined') {\r\n                            this.stateTimeout = window.setTimeout(() => {\r\n                                this.indicatorX = false;\r\n                                this.indicatorY = false;\r\n\r\n                                this.stateTimeout = null;\r\n\r\n                                if (this.interaction && (this.states.left || this.states.right)) {\r\n                                    this.allowPropagationX = true;\r\n                                }\r\n\r\n                                if (this.interaction && (this.states.top || this.states.bottom)) {\r\n                                    this.allowPropagationY = true;\r\n                                }\r\n\r\n                                this.cdRef.markForCheck();\r\n                            }, 500);\r\n                        }\r\n                    }\r\n\r\n                    this.cdRef.markForCheck();\r\n                    this.cdRef.detectChanges();\r\n                });\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                if (this.directiveRef) {\r\n                    const element = this.directiveRef.elementRef.nativeElement;\r\n\r\n                    fromEvent<WheelEvent>(element, 'wheel')\r\n                        .pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((event: WheelEvent) => {\r\n                            if (!this.disabled && this.autoPropagation) {\r\n                                const scrollDeltaX = event.deltaX;\r\n                                const scrollDeltaY = event.deltaY;\r\n\r\n                                this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\r\n                            }\r\n                        });\r\n\r\n                    fromEvent<TouchEvent>(element, 'touchmove')\r\n                        .pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((event: TouchEvent) => {\r\n                            if (!this.disabled && this.autoPropagation) {\r\n                                const scrollPositionX = event.touches[0].clientX;\r\n                                const scrollPositionY = event.touches[0].clientY;\r\n\r\n                                const scrollDeltaX = scrollPositionX - this.scrollPositionX;\r\n                                const scrollDeltaY = scrollPositionY - this.scrollPositionY;\r\n\r\n                                this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\r\n\r\n                                this.scrollPositionX = scrollPositionX;\r\n                                this.scrollPositionY = scrollPositionY;\r\n                            }\r\n                        });\r\n\r\n                    merge(\r\n                        fromEvent(element, 'ps-scroll-x')\r\n                            .pipe(mapTo('x')),\r\n                        fromEvent(element, 'ps-scroll-y')\r\n                            .pipe(mapTo('y')),\r\n                        fromEvent(element, 'ps-x-reach-end')\r\n                            .pipe(mapTo('right')),\r\n                        fromEvent(element, 'ps-y-reach-end')\r\n                            .pipe(mapTo('bottom')),\r\n                        fromEvent(element, 'ps-x-reach-start')\r\n                            .pipe(mapTo('left')),\r\n                        fromEvent(element, 'ps-y-reach-start')\r\n                            .pipe(mapTo('top')),\r\n                    )\r\n                        .pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((state: string) => {\r\n                            if (!this.disabled && (this.autoPropagation || this.scrollIndicators)) {\r\n                                this.stateUpdate.next(state);\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n            window.setTimeout(() => {\r\n                PerfectScrollbarEvents.forEach((eventName: PerfectScrollbarEvent) => {\r\n                    if (this.directiveRef) {\r\n                        this.directiveRef[eventName] = this[eventName];\r\n                    }\r\n                });\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.ngDestroy.next();\r\n            this.ngDestroy.unsubscribe();\r\n\r\n            if (this.stateTimeout && typeof window !== 'undefined') {\r\n                window.clearTimeout(this.stateTimeout);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            if (!this.disabled && this.autoPropagation && this.directiveRef) {\r\n                const element = this.directiveRef.elementRef.nativeElement;\r\n\r\n                this.usePropagationX = element.classList.contains('ps--active-x');\r\n\r\n                this.usePropagationY = element.classList.contains('ps--active-y');\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkPropagation(event: any, deltaX: number, deltaY: number): void {\r\n        this.interaction = true;\r\n\r\n        const scrollDirectionX = (deltaX < 0) ? -1 : 1;\r\n        const scrollDirectionY = (deltaY < 0) ? -1 : 1;\r\n\r\n        if ((this.usePropagationX && this.usePropagationY) ||\r\n            (this.usePropagationX && (!this.allowPropagationX ||\r\n                (this.scrollDirectionX !== scrollDirectionX))) ||\r\n            (this.usePropagationY && (!this.allowPropagationY ||\r\n                (this.scrollDirectionY !== scrollDirectionY)))) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        if (!!deltaX) {\r\n            this.scrollDirectionX = scrollDirectionX;\r\n        }\r\n\r\n        if (!!deltaY) {\r\n            this.scrollDirectionY = scrollDirectionY;\r\n        }\r\n\r\n        this.stateUpdate.next('interaction');\r\n\r\n        this.cdRef.detectChanges();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PerfectScrollbarComponent } from './perfect-scrollbar.component';\r\nimport { PerfectScrollbarDirective } from './perfect-scrollbar.directive';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [PerfectScrollbarComponent, PerfectScrollbarDirective],\r\n    exports: [CommonModule, PerfectScrollbarComponent, PerfectScrollbarDirective]\r\n})\r\nexport class PerfectScrollbarModule {\r\n}\r\n"]}