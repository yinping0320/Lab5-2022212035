import { EVENT_HANDLER_TOKEN } from "../expression/tokens";
import { RepositoryAddEntityEventHandler } from "./repository_add_entity_event_handler";
import { RepositoryRemoveEntityEventHandler } from "./repository_remove_entity_event_handler";
import { EntityValueChangedEventHandler } from "./entity_value_changed_event_handler";
import { StateValueChangedEventHandler } from "./state_value_changed_event_handler";
import { EntityUpdateEventHandler } from "./entity_update_event_handler";
import { RepositoryLoadEventHandler } from "./repository_load_event_handler";
import { BindingDataAppendObjectEventHandler } from "./binding_data_append_object_event_handler";
import { BindingDataValueChangeEventHandler } from "./binding_data_value_change_event_handler";
import { BindingDataRemoveObjectEventHandler } from "./binding_data_remove_object_event_handler";
import { BindingDataLoadEventHandler } from "./binding_data_load_event_handler";
import { BindingDataSelectionChangedEventHandler } from "./binding_data_selection_changed_event_handler";
export class EventHandlerRegistry {
    constructor(viewModelContext) {
        this.viewModelContext = viewModelContext;
        this.handlers = this.viewModelContext.injector.get(EVENT_HANDLER_TOKEN);
    }
    /**
     * 实体值变化处理器
     */
    get entityValueChangedEventHandler() {
        return this.handlers && this.handlers.find((handler) => handler instanceof EntityValueChangedEventHandler);
    }
    /**
     * 状态值变化处理器
     */
    get stateValueChangedEventHandler() {
        return this.handlers && this.handlers.find((handler) => handler instanceof StateValueChangedEventHandler);
    }
    get repositoryAddEntityEventHandler() {
        return this.handlers && this.handlers.find((handler) => handler instanceof RepositoryAddEntityEventHandler);
    }
    get repositoryRemoveEntityEventHandler() {
        return this.handlers && this.handlers.find((handler) => handler instanceof RepositoryRemoveEntityEventHandler);
    }
    get entityUpdateEventHandler() {
        return this.handlers && this.handlers.find((handler) => handler instanceof EntityUpdateEventHandler);
    }
    get repositoryLoadEventHandler() {
        return this.handlers && this.handlers.find((handler) => handler instanceof RepositoryLoadEventHandler);
    }
    get bindingDataAppendEntityEventHandler() {
        return this.handlers && this.handlers.find((handler) => handler instanceof BindingDataAppendObjectEventHandler);
    }
    get bindingDataValueChangeEventHandler() {
        return this.handlers && this.handlers.find((handler) => handler instanceof BindingDataValueChangeEventHandler);
    }
    get bindingDataRemoveObjectEventHandler() {
        return this.handlers && this.handlers.find((handler) => handler instanceof BindingDataRemoveObjectEventHandler);
    }
    get bindingDataLoadEventHandler() {
        return this.handlers && this.handlers.find((handler) => handler instanceof BindingDataLoadEventHandler);
    }
    get bindingDataSelectionChangedHandler() {
        return this.handlers && this.handlers.find((handler) => handler instanceof BindingDataSelectionChangedEventHandler);
    }
}
//# sourceMappingURL=data:application/json;base64,