import { Expression } from '../expression/index';
import { NAMESPACE } from '../core/index';
import { EffectUtil } from './util';
export class ValidateEffector {
    constructor(viewModelContext) {
        this.viewModelContext = viewModelContext;
        this.ns = this.viewModelContext.injector.get(NAMESPACE, '');
    }
    effect(path, value, options) {
        //根据路径寻找字段
        let viewModelContext;
        if (options.viewModelId) {
            viewModelContext = this.viewModelContext.appContext.viewModelContextManager.getContextById(options.viewModelId);
        }
        else {
            return;
        }
        if (!viewModelContext)
            return;
        if (!viewModelContext.form)
            return;
        const formControl = EffectUtil.getFormValueByPath(path, viewModelContext);
        const form_name = formControl.form_name;
        if (!form_name) {
            return;
        }
        // 只认false  为flase认为验证不过
        if (value === false && options.eventType !== Expression.EventType.Append && options.eventType !== Expression.EventType.Load) {
            form_name.validationResult = { passing: !value, message: options.message };
        }
        else if (value === true) {
            form_name.validationResult = { passing: true, message: '' };
        }
        const validators = [{ "type": "expression", "constraints": [options.expressionId], message: options.message }];
        viewModelContext.form.addValidate(formControl.bindingPath, formControl.name);
        form_name.pushValidatorFnforValidate(validators, true);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWZmZWN0b3JfdmFsaWRhdGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL21vYmlsZS1kZXZraXQvIiwic291cmNlcyI6WyJsaWIvZXhwcmVzc2lvbi9lZmZlY3Rvci9lZmZlY3Rvcl92YWxpZGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFakQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRXBDLE1BQU0sT0FBTyxnQkFBZ0I7SUFHekIsWUFBb0IsZ0JBQWtDO1FBQWxDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDbEQsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDaEUsQ0FBQztJQUNNLE1BQU0sQ0FBQyxJQUFZLEVBQUUsS0FBVSxFQUFFLE9BQWlDO1FBQ3JFLFVBQVU7UUFDVixJQUFJLGdCQUFrQyxDQUFDO1FBQ3ZDLElBQUksT0FBTyxDQUFDLFdBQVcsRUFBRTtZQUNyQixnQkFBZ0IsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLHVCQUF1QixDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUE7U0FDbEg7YUFBTTtZQUNILE9BQU07U0FDVDtRQUNELElBQUksQ0FBQyxnQkFBZ0I7WUFBRSxPQUFPO1FBQzlCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJO1lBQUUsT0FBTztRQUNuQyxNQUFNLFdBQVcsR0FBRyxVQUFVLENBQUMsa0JBQWtCLENBQUMsSUFBSSxFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFDMUUsTUFBTSxTQUFTLEdBQUcsV0FBVyxDQUFDLFNBQXdCLENBQUM7UUFDdkQsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNaLE9BQU07U0FDVDtRQUNELHdCQUF3QjtRQUN4QixJQUFJLEtBQUssS0FBSyxLQUFLLElBQUksT0FBTyxDQUFDLFNBQVMsS0FBSyxVQUFVLENBQUMsU0FBUyxDQUFDLE1BQU0sSUFBSSxPQUFPLENBQUMsU0FBUyxLQUFLLFVBQVUsQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFO1lBQ3pILFNBQVMsQ0FBQyxnQkFBZ0IsR0FBRyxFQUFFLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQzlFO2FBQU0sSUFBSSxLQUFLLEtBQUssSUFBSSxFQUFFO1lBQ3ZCLFNBQVMsQ0FBQyxnQkFBZ0IsR0FBRyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRSxDQUFBO1NBQzlEO1FBQ0QsTUFBTSxVQUFVLEdBQUcsQ0FBQyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsYUFBYSxFQUFFLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztRQUMvRyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdFLFNBQVMsQ0FBQywwQkFBMEIsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDM0QsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXhwcmVzc2lvbiB9IGZyb20gJy4uL2V4cHJlc3Npb24vaW5kZXgnO1xuaW1wb3J0IHsgVmlld01vZGVsQ29udGV4dCB9IGZyb20gJy4uLy4uL3ZpZXctbW9kZWwvaW5kZXgnXG5pbXBvcnQgeyBOQU1FU1BBQ0UgfSBmcm9tICcuLi9jb3JlL2luZGV4JztcbmltcG9ydCB7IEZvcm1Db250cm9sIH0gZnJvbSAnLi4vLi4vZm9ybSdcbmltcG9ydCB7IEVmZmVjdFV0aWwgfSBmcm9tICcuL3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgVmFsaWRhdGVFZmZlY3RvciBpbXBsZW1lbnRzIEV4cHJlc3Npb24uRWZmZWN0b3Ige1xuICAgIHB1YmxpYyBuczogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSB2aWV3TW9kZWxDb250ZXh0OiBWaWV3TW9kZWxDb250ZXh0KSB7XG4gICAgICAgIHRoaXMubnMgPSB0aGlzLnZpZXdNb2RlbENvbnRleHQuaW5qZWN0b3IuZ2V0KE5BTUVTUEFDRSwgJycpO1xuICAgIH1cbiAgICBwdWJsaWMgZWZmZWN0KHBhdGg6IHN0cmluZywgdmFsdWU6IGFueSwgb3B0aW9uczogRXhwcmVzc2lvbi5FZmZlY3RPcHRpb25zKSB7XG4gICAgICAgIC8v5qC55o2u6Lev5b6E5a+75om+5a2X5q61XG4gICAgICAgIGxldCB2aWV3TW9kZWxDb250ZXh0OiBWaWV3TW9kZWxDb250ZXh0O1xuICAgICAgICBpZiAob3B0aW9ucy52aWV3TW9kZWxJZCkge1xuICAgICAgICAgICAgdmlld01vZGVsQ29udGV4dCA9IHRoaXMudmlld01vZGVsQ29udGV4dC5hcHBDb250ZXh0LnZpZXdNb2RlbENvbnRleHRNYW5hZ2VyLmdldENvbnRleHRCeUlkKG9wdGlvbnMudmlld01vZGVsSWQpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgICBpZiAoIXZpZXdNb2RlbENvbnRleHQpIHJldHVybjtcbiAgICAgICAgaWYgKCF2aWV3TW9kZWxDb250ZXh0LmZvcm0pIHJldHVybjtcbiAgICAgICAgY29uc3QgZm9ybUNvbnRyb2wgPSBFZmZlY3RVdGlsLmdldEZvcm1WYWx1ZUJ5UGF0aChwYXRoLCB2aWV3TW9kZWxDb250ZXh0KTtcbiAgICAgICAgY29uc3QgZm9ybV9uYW1lID0gZm9ybUNvbnRyb2wuZm9ybV9uYW1lIGFzIEZvcm1Db250cm9sO1xuICAgICAgICBpZiAoIWZvcm1fbmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgICAgLy8g5Y+q6K6kZmFsc2UgIOS4umZsYXNl6K6k5Li66aqM6K+B5LiN6L+HXG4gICAgICAgIGlmICh2YWx1ZSA9PT0gZmFsc2UgJiYgb3B0aW9ucy5ldmVudFR5cGUgIT09IEV4cHJlc3Npb24uRXZlbnRUeXBlLkFwcGVuZCAmJiBvcHRpb25zLmV2ZW50VHlwZSAhPT0gRXhwcmVzc2lvbi5FdmVudFR5cGUuTG9hZCkge1xuICAgICAgICAgICAgZm9ybV9uYW1lLnZhbGlkYXRpb25SZXN1bHQgPSB7IHBhc3Npbmc6ICF2YWx1ZSwgbWVzc2FnZTogb3B0aW9ucy5tZXNzYWdlIH07XG4gICAgICAgIH0gZWxzZSBpZiAodmFsdWUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGZvcm1fbmFtZS52YWxpZGF0aW9uUmVzdWx0ID0geyBwYXNzaW5nOiB0cnVlLCBtZXNzYWdlOiAnJyB9XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdmFsaWRhdG9ycyA9IFt7IFwidHlwZVwiOiBcImV4cHJlc3Npb25cIiwgXCJjb25zdHJhaW50c1wiOiBbb3B0aW9ucy5leHByZXNzaW9uSWRdLCBtZXNzYWdlOiBvcHRpb25zLm1lc3NhZ2UgfV07XG4gICAgICAgIHZpZXdNb2RlbENvbnRleHQuZm9ybS5hZGRWYWxpZGF0ZShmb3JtQ29udHJvbC5iaW5kaW5nUGF0aCwgZm9ybUNvbnRyb2wubmFtZSk7XG4gICAgICAgIGZvcm1fbmFtZS5wdXNoVmFsaWRhdG9yRm5mb3JWYWxpZGF0ZSh2YWxpZGF0b3JzLCB0cnVlKTtcbiAgICB9XG59XG4iXX0=