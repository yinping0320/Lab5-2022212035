import { Expression } from '../expression/index';
import { EffectorRegistry } from './effector_registry';
import { RepositoryEffector } from './repository_effector';
import { UIStateEffector } from './uistate_effector';
import { ReadonlyEffector } from './effector_readonly';
import { ValidateEffector } from './effector_validate';
import { RequiredEffector } from './effector_required';
import { VisibleEffector } from './effector_visible';
import { DependencyEffector } from './effector_dependency';
export class EffectorFactory {
    constructor(viewModelContext) {
        this.viewModelContext = viewModelContext;
        this.injector = this.viewModelContext.injector;
        this.effectorRegistry = this.injector.get(EffectorRegistry);
    }
    getEffector(expressionObject) {
        const path = expressionObject.path;
        const ns = expressionObject.ns;
        const bindingType = expressionObject.bindingType;
        const type = expressionObject.type;
        const nsEffectors = this.effectorRegistry.effectors.filter((effector) => effector.ns == ns);
        // 计算表达式
        if (type === Expression.ExpressionType.Compute) {
            if (bindingType === Expression.ExpressionBindingType.Field) {
                return nsEffectors.find((effector) => effector instanceof RepositoryEffector);
            }
            else if (bindingType === Expression.ExpressionBindingType.State) {
                return nsEffectors.find((effector) => effector instanceof UIStateEffector);
            }
            else {
                throw new Error(`不支持的绑定字段类型：${bindingType}`);
            }
        }
        else if (type === Expression.ExpressionType.Readonly) {
            // 只读表达式
            return nsEffectors.find((effector) => effector instanceof ReadonlyEffector);
        }
        else if (type === Expression.ExpressionType.Dependency) {
            // 依赖表达式
            return nsEffectors.find((effector) => effector instanceof DependencyEffector);
        }
        else if (type === Expression.ExpressionType.Relative) {
            // 关联表达式
            // return nsEffectors.find((effector: Expression.Effector) => effector instanceof RelativeEffector);
        }
        else if (type === Expression.ExpressionType.Validate) {
            // 校验表达式
            return nsEffectors.find((effector) => effector instanceof ValidateEffector);
        }
        else if (type === Expression.ExpressionType.Required) {
            // 必填表达式
            return nsEffectors.find((effector) => effector instanceof RequiredEffector);
        }
        else if (type === Expression.ExpressionType.Visible) {
            // 显隐表达式
            return nsEffectors.find((effector) => effector instanceof VisibleEffector);
        }
        else {
            // Core.warn(`EffectorFactory 没有找到对应的副作用器 ${type}`);
            return null;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWZmZWN0b3JfZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvbW9iaWxlLWRldmtpdC8iLCJzb3VyY2VzIjpbImxpYi9leHByZXNzaW9uL2VmZmVjdG9yL2VmZmVjdG9yX2ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzNELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFM0QsTUFBTSxPQUFPLGVBQWU7SUFNMUIsWUFBc0IsZ0JBQWtDO1FBQWxDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDdEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDO1FBQy9DLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFTSxXQUFXLENBQUMsZ0JBQTZDO1FBQzlELE1BQU0sSUFBSSxHQUFHLGdCQUFnQixDQUFDLElBQUksQ0FBQztRQUNuQyxNQUFNLEVBQUUsR0FBRyxnQkFBZ0IsQ0FBQyxFQUFFLENBQUM7UUFDL0IsTUFBTSxXQUFXLEdBQUcsZ0JBQWdCLENBQUMsV0FBVyxDQUFDO1FBQ2pELE1BQU0sSUFBSSxHQUFHLGdCQUFnQixDQUFDLElBQUksQ0FBQztRQUNuQyxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFFBQTZCLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFFakgsUUFBUTtRQUNSLElBQUksSUFBSSxLQUFLLFVBQVUsQ0FBQyxjQUFjLENBQUMsT0FBTyxFQUFFO1lBQzlDLElBQUksV0FBVyxLQUFLLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLEVBQUU7Z0JBQzFELE9BQU8sV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQTZCLEVBQUUsRUFBRSxDQUFDLFFBQVEsWUFBWSxrQkFBa0IsQ0FBQyxDQUFDO2FBQ3BHO2lCQUFNLElBQUksV0FBVyxLQUFLLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLEVBQUU7Z0JBQ2pFLE9BQU8sV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQTZCLEVBQUUsRUFBRSxDQUFDLFFBQVEsWUFBWSxlQUFlLENBQUMsQ0FBQzthQUNqRztpQkFBTTtnQkFDTCxNQUFNLElBQUksS0FBSyxDQUFDLGNBQWMsV0FBVyxFQUFFLENBQUMsQ0FBQzthQUM5QztTQUNGO2FBQU0sSUFBSSxJQUFJLEtBQUssVUFBVSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUU7WUFDdEQsUUFBUTtZQUNSLE9BQU8sV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQTZCLEVBQUUsRUFBRSxDQUFDLFFBQVEsWUFBWSxnQkFBZ0IsQ0FBQyxDQUFDO1NBQ2xHO2FBQU0sSUFBSSxJQUFJLEtBQUssVUFBVSxDQUFDLGNBQWMsQ0FBQyxVQUFVLEVBQUU7WUFDeEQsUUFBUTtZQUNSLE9BQU8sV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQTZCLEVBQUUsRUFBRSxDQUFDLFFBQVEsWUFBWSxrQkFBa0IsQ0FBQyxDQUFDO1NBQ3BHO2FBQU0sSUFBSSxJQUFJLEtBQUssVUFBVSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUU7WUFDdEQsUUFBUTtZQUNSLG9HQUFvRztTQUNyRzthQUFNLElBQUksSUFBSSxLQUFLLFVBQVUsQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFO1lBQ3RELFFBQVE7WUFDUixPQUFPLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUE2QixFQUFFLEVBQUUsQ0FBQyxRQUFRLFlBQVksZ0JBQWdCLENBQUMsQ0FBQztTQUNsRzthQUFNLElBQUksSUFBSSxLQUFLLFVBQVUsQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFO1lBQ3RELFFBQVE7WUFDUixPQUFPLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUE2QixFQUFFLEVBQUUsQ0FBQyxRQUFRLFlBQVksZ0JBQWdCLENBQUMsQ0FBQztTQUNsRzthQUFNLElBQUksSUFBSSxLQUFLLFVBQVUsQ0FBQyxjQUFjLENBQUMsT0FBTyxFQUFFO1lBQ3JELFFBQVE7WUFDUixPQUFPLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUE2QixFQUFFLEVBQUUsQ0FBQyxRQUFRLFlBQVksZUFBZSxDQUFDLENBQUM7U0FDakc7YUFBTTtZQUNMLG9EQUFvRDtZQUNwRCxPQUFPLElBQUksQ0FBQztTQUNiO0lBQ0gsQ0FBQztDQUVGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0b3IgfSBmcm9tICcuLi8uLi9jb3JlL2luZGV4JztcbmltcG9ydCB7IFZpZXdNb2RlbENvbnRleHQgfSBmcm9tICcuLi8uLi92aWV3LW1vZGVsL2luZGV4JztcbmltcG9ydCB7IEV4cHJlc3Npb24gfSBmcm9tICcuLi9leHByZXNzaW9uL2luZGV4JztcbmltcG9ydCB7IEVmZmVjdG9yUmVnaXN0cnkgfSBmcm9tICcuL2VmZmVjdG9yX3JlZ2lzdHJ5JztcbmltcG9ydCB7IFJlcG9zaXRvcnlFZmZlY3RvciB9IGZyb20gJy4vcmVwb3NpdG9yeV9lZmZlY3Rvcic7XG5pbXBvcnQgeyBVSVN0YXRlRWZmZWN0b3IgfSBmcm9tICcuL3Vpc3RhdGVfZWZmZWN0b3InO1xuaW1wb3J0IHsgUmVhZG9ubHlFZmZlY3RvciB9IGZyb20gJy4vZWZmZWN0b3JfcmVhZG9ubHknO1xuaW1wb3J0IHsgVmFsaWRhdGVFZmZlY3RvciB9IGZyb20gJy4vZWZmZWN0b3JfdmFsaWRhdGUnO1xuaW1wb3J0IHsgUmVxdWlyZWRFZmZlY3RvciB9IGZyb20gJy4vZWZmZWN0b3JfcmVxdWlyZWQnO1xuaW1wb3J0IHsgVmlzaWJsZUVmZmVjdG9yIH0gZnJvbSAnLi9lZmZlY3Rvcl92aXNpYmxlJztcbmltcG9ydCB7IERlcGVuZGVuY3lFZmZlY3RvciB9IGZyb20gJy4vZWZmZWN0b3JfZGVwZW5kZW5jeSc7XG5cbmV4cG9ydCBjbGFzcyBFZmZlY3RvckZhY3Rvcnkge1xuXG4gIHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yO1xuXG4gIHByaXZhdGUgZWZmZWN0b3JSZWdpc3RyeTogRWZmZWN0b3JSZWdpc3RyeVxuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCB2aWV3TW9kZWxDb250ZXh0OiBWaWV3TW9kZWxDb250ZXh0KSB7XG4gICAgdGhpcy5pbmplY3RvciA9IHRoaXMudmlld01vZGVsQ29udGV4dC5pbmplY3RvcjtcbiAgICB0aGlzLmVmZmVjdG9yUmVnaXN0cnkgPSB0aGlzLmluamVjdG9yLmdldChFZmZlY3RvclJlZ2lzdHJ5KTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRFZmZlY3RvcihleHByZXNzaW9uT2JqZWN0OiBFeHByZXNzaW9uLkV4cHJlc3Npb25PYmplY3QpIHtcbiAgICBjb25zdCBwYXRoID0gZXhwcmVzc2lvbk9iamVjdC5wYXRoO1xuICAgIGNvbnN0IG5zID0gZXhwcmVzc2lvbk9iamVjdC5ucztcbiAgICBjb25zdCBiaW5kaW5nVHlwZSA9IGV4cHJlc3Npb25PYmplY3QuYmluZGluZ1R5cGU7XG4gICAgY29uc3QgdHlwZSA9IGV4cHJlc3Npb25PYmplY3QudHlwZTtcbiAgICBjb25zdCBuc0VmZmVjdG9ycyA9IHRoaXMuZWZmZWN0b3JSZWdpc3RyeS5lZmZlY3RvcnMuZmlsdGVyKChlZmZlY3RvcjogRXhwcmVzc2lvbi5FZmZlY3RvcikgPT4gZWZmZWN0b3IubnMgPT0gbnMpO1xuXG4gICAgLy8g6K6h566X6KGo6L6+5byPXG4gICAgaWYgKHR5cGUgPT09IEV4cHJlc3Npb24uRXhwcmVzc2lvblR5cGUuQ29tcHV0ZSkge1xuICAgICAgaWYgKGJpbmRpbmdUeXBlID09PSBFeHByZXNzaW9uLkV4cHJlc3Npb25CaW5kaW5nVHlwZS5GaWVsZCkge1xuICAgICAgICByZXR1cm4gbnNFZmZlY3RvcnMuZmluZCgoZWZmZWN0b3I6IEV4cHJlc3Npb24uRWZmZWN0b3IpID0+IGVmZmVjdG9yIGluc3RhbmNlb2YgUmVwb3NpdG9yeUVmZmVjdG9yKTtcbiAgICAgIH0gZWxzZSBpZiAoYmluZGluZ1R5cGUgPT09IEV4cHJlc3Npb24uRXhwcmVzc2lvbkJpbmRpbmdUeXBlLlN0YXRlKSB7XG4gICAgICAgIHJldHVybiBuc0VmZmVjdG9ycy5maW5kKChlZmZlY3RvcjogRXhwcmVzc2lvbi5FZmZlY3RvcikgPT4gZWZmZWN0b3IgaW5zdGFuY2VvZiBVSVN0YXRlRWZmZWN0b3IpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGDkuI3mlK/mjIHnmoTnu5HlrprlrZfmrrXnsbvlnovvvJoke2JpbmRpbmdUeXBlfWApO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gRXhwcmVzc2lvbi5FeHByZXNzaW9uVHlwZS5SZWFkb25seSkge1xuICAgICAgLy8g5Y+q6K+76KGo6L6+5byPXG4gICAgICByZXR1cm4gbnNFZmZlY3RvcnMuZmluZCgoZWZmZWN0b3I6IEV4cHJlc3Npb24uRWZmZWN0b3IpID0+IGVmZmVjdG9yIGluc3RhbmNlb2YgUmVhZG9ubHlFZmZlY3Rvcik7XG4gICAgfSBlbHNlIGlmICh0eXBlID09PSBFeHByZXNzaW9uLkV4cHJlc3Npb25UeXBlLkRlcGVuZGVuY3kpIHtcbiAgICAgIC8vIOS+nei1luihqOi+vuW8j1xuICAgICAgcmV0dXJuIG5zRWZmZWN0b3JzLmZpbmQoKGVmZmVjdG9yOiBFeHByZXNzaW9uLkVmZmVjdG9yKSA9PiBlZmZlY3RvciBpbnN0YW5jZW9mIERlcGVuZGVuY3lFZmZlY3Rvcik7XG4gICAgfSBlbHNlIGlmICh0eXBlID09PSBFeHByZXNzaW9uLkV4cHJlc3Npb25UeXBlLlJlbGF0aXZlKSB7XG4gICAgICAvLyDlhbPogZTooajovr7lvI9cbiAgICAgIC8vIHJldHVybiBuc0VmZmVjdG9ycy5maW5kKChlZmZlY3RvcjogRXhwcmVzc2lvbi5FZmZlY3RvcikgPT4gZWZmZWN0b3IgaW5zdGFuY2VvZiBSZWxhdGl2ZUVmZmVjdG9yKTtcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09IEV4cHJlc3Npb24uRXhwcmVzc2lvblR5cGUuVmFsaWRhdGUpIHtcbiAgICAgIC8vIOagoemqjOihqOi+vuW8j1xuICAgICAgcmV0dXJuIG5zRWZmZWN0b3JzLmZpbmQoKGVmZmVjdG9yOiBFeHByZXNzaW9uLkVmZmVjdG9yKSA9PiBlZmZlY3RvciBpbnN0YW5jZW9mIFZhbGlkYXRlRWZmZWN0b3IpO1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gRXhwcmVzc2lvbi5FeHByZXNzaW9uVHlwZS5SZXF1aXJlZCkge1xuICAgICAgLy8g5b+F5aGr6KGo6L6+5byPXG4gICAgICByZXR1cm4gbnNFZmZlY3RvcnMuZmluZCgoZWZmZWN0b3I6IEV4cHJlc3Npb24uRWZmZWN0b3IpID0+IGVmZmVjdG9yIGluc3RhbmNlb2YgUmVxdWlyZWRFZmZlY3Rvcik7XG4gICAgfSBlbHNlIGlmICh0eXBlID09PSBFeHByZXNzaW9uLkV4cHJlc3Npb25UeXBlLlZpc2libGUpIHtcbiAgICAgIC8vIOaYvumakOihqOi+vuW8j1xuICAgICAgcmV0dXJuIG5zRWZmZWN0b3JzLmZpbmQoKGVmZmVjdG9yOiBFeHByZXNzaW9uLkVmZmVjdG9yKSA9PiBlZmZlY3RvciBpbnN0YW5jZW9mIFZpc2libGVFZmZlY3Rvcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIENvcmUud2FybihgRWZmZWN0b3JGYWN0b3J5IOayoeacieaJvuWIsOWvueW6lOeahOWJr+S9nOeUqOWZqCAke3R5cGV9YCk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH1cblxufVxuIl19