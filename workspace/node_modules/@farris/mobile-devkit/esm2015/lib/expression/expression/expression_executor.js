import { Expression as ExpressionEngineExpression, ExpressionContext, ExpressionEngine } from "@farris/expression-engine";
export class ExpressionExecutor {
    /**
     * 编译执行
     * @param expression
     * @param context
     * @returns
     */
    compile(expressionObject, context) {
        if (Object.prototype.toString.call(context) !== '[object Object]') {
            throw new Error('上下文必须为对象！');
        }
        const expressionContext = this.buildContext(context);
        if (!expressionObject.factory) {
            const expression = new ExpressionEngineExpression(expressionObject.expression, expressionContext);
            expressionObject.factory = expression.compile();
        }
        const expression = expressionObject.factory;
        return expression.eval(expressionContext);
    }
    /**
     * 解析
     * @param expression
     * @param context
     * @returns
     */
    eval(expression, context) {
        if (Object.prototype.toString.call(context) !== '[object Object]') {
            throw new Error('上下文必须为对象！');
        }
        const expressionContext = this.buildContext(context);
        const expressionEngine = new ExpressionEngine(expressionContext);
        return expressionEngine.eval(expression);
    }
    /**
     * 构造表达式上下文
     * @param context
     * @returns
     */
    buildContext(context) {
        const expressionContext = new ExpressionContext();
        if (context && Object.keys(context).length > 0) {
            Object.keys(context).forEach((key) => {
                expressionContext.set(key, context[key]);
            });
        }
        return expressionContext;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwcmVzc2lvbl9leGVjdXRvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvbW9iaWxlLWRldmtpdC8iLCJzb3VyY2VzIjpbImxpYi9leHByZXNzaW9uL2V4cHJlc3Npb24vZXhwcmVzc2lvbl9leGVjdXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxJQUFJLDBCQUEwQixFQUFFLGlCQUFpQixFQUFFLGdCQUFnQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFJMUgsTUFBTSxPQUFPLGtCQUFrQjtJQUM3Qjs7Ozs7T0FLRztJQUNJLE9BQU8sQ0FBQyxnQkFBNkMsRUFBRSxPQUFpQztRQUM3RixJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxpQkFBaUIsRUFBRTtZQUNqRSxNQUFNLElBQUksS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQzlCO1FBQ0QsTUFBTSxpQkFBaUIsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3JELElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUU7WUFDN0IsTUFBTSxVQUFVLEdBQUcsSUFBSSwwQkFBMEIsQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztZQUNsRyxnQkFBZ0IsQ0FBQyxPQUFPLEdBQUcsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQ2pEO1FBQ0QsTUFBTSxVQUFVLEdBQStCLGdCQUFnQixDQUFDLE9BQU8sQ0FBQztRQUN4RSxPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBQ0Q7Ozs7O09BS0c7SUFDSSxJQUFJLENBQUMsVUFBa0IsRUFBRSxPQUFpQztRQUMvRCxJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxpQkFBaUIsRUFBRTtZQUNqRSxNQUFNLElBQUksS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQzlCO1FBQ0QsTUFBTSxpQkFBaUIsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3JELE1BQU0sZ0JBQWdCLEdBQUcsSUFBSSxnQkFBZ0IsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ2pFLE9BQU8sZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFDRDs7OztPQUlHO0lBQ0ssWUFBWSxDQUFDLE9BQWdDO1FBQ25ELE1BQU0saUJBQWlCLEdBQUcsSUFBSSxpQkFBaUIsRUFBRSxDQUFDO1FBQ2xELElBQUksT0FBTyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUM5QyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQVcsRUFBRSxFQUFFO2dCQUMzQyxpQkFBaUIsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQzNDLENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFDRCxPQUFPLGlCQUFpQixDQUFDO0lBQzNCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV4cHJlc3Npb24gYXMgRXhwcmVzc2lvbkVuZ2luZUV4cHJlc3Npb24sIEV4cHJlc3Npb25Db250ZXh0LCBFeHByZXNzaW9uRW5naW5lIH0gZnJvbSBcIkBmYXJyaXMvZXhwcmVzc2lvbi1lbmdpbmVcIjtcbmltcG9ydCB7IFZpZXdNb2RlbENvbnRleHQsIFZpZXdNb2RlbCB9IGZyb20gXCIuLi8uLi92aWV3LW1vZGVsL2luZGV4XCI7XG5pbXBvcnQgeyBFeHByZXNzaW9uIH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuZXhwb3J0IGNsYXNzIEV4cHJlc3Npb25FeGVjdXRvciBpbXBsZW1lbnRzIEV4cHJlc3Npb24uSUV4ZWN1dG9yIHtcbiAgLyoqXG4gICAqIOe8luivkeaJp+ihjFxuICAgKiBAcGFyYW0gZXhwcmVzc2lvbiBcbiAgICogQHBhcmFtIGNvbnRleHQgXG4gICAqIEByZXR1cm5zIFxuICAgKi9cbiAgcHVibGljIGNvbXBpbGUoZXhwcmVzc2lvbk9iamVjdDogRXhwcmVzc2lvbi5FeHByZXNzaW9uT2JqZWN0LCBjb250ZXh0PzogeyBbcHJvcDogc3RyaW5nXTogYW55IH0pOiBhbnkge1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoY29udGV4dCkgIT09ICdbb2JqZWN0IE9iamVjdF0nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ+S4iuS4i+aWh+W/hemhu+S4uuWvueixoe+8gScpO1xuICAgIH1cbiAgICBjb25zdCBleHByZXNzaW9uQ29udGV4dCA9IHRoaXMuYnVpbGRDb250ZXh0KGNvbnRleHQpO1xuICAgIGlmICghZXhwcmVzc2lvbk9iamVjdC5mYWN0b3J5KSB7XG4gICAgICBjb25zdCBleHByZXNzaW9uID0gbmV3IEV4cHJlc3Npb25FbmdpbmVFeHByZXNzaW9uKGV4cHJlc3Npb25PYmplY3QuZXhwcmVzc2lvbiwgZXhwcmVzc2lvbkNvbnRleHQpO1xuICAgICAgZXhwcmVzc2lvbk9iamVjdC5mYWN0b3J5ID0gZXhwcmVzc2lvbi5jb21waWxlKCk7XG4gICAgfVxuICAgIGNvbnN0IGV4cHJlc3Npb246IEV4cHJlc3Npb25FbmdpbmVFeHByZXNzaW9uID0gZXhwcmVzc2lvbk9iamVjdC5mYWN0b3J5O1xuICAgIHJldHVybiBleHByZXNzaW9uLmV2YWwoZXhwcmVzc2lvbkNvbnRleHQpO1xuICB9XG4gIC8qKlxuICAgKiDop6PmnpBcbiAgICogQHBhcmFtIGV4cHJlc3Npb24gXG4gICAqIEBwYXJhbSBjb250ZXh0IFxuICAgKiBAcmV0dXJucyBcbiAgICovXG4gIHB1YmxpYyBldmFsKGV4cHJlc3Npb246IHN0cmluZywgY29udGV4dD86IHsgW3Byb3A6IHN0cmluZ106IGFueSB9KSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChjb250ZXh0KSAhPT0gJ1tvYmplY3QgT2JqZWN0XScpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcign5LiK5LiL5paH5b+F6aG75Li65a+56LGh77yBJyk7XG4gICAgfVxuICAgIGNvbnN0IGV4cHJlc3Npb25Db250ZXh0ID0gdGhpcy5idWlsZENvbnRleHQoY29udGV4dCk7XG4gICAgY29uc3QgZXhwcmVzc2lvbkVuZ2luZSA9IG5ldyBFeHByZXNzaW9uRW5naW5lKGV4cHJlc3Npb25Db250ZXh0KTtcbiAgICByZXR1cm4gZXhwcmVzc2lvbkVuZ2luZS5ldmFsKGV4cHJlc3Npb24pO1xuICB9XG4gIC8qKlxuICAgKiDmnoTpgKDooajovr7lvI/kuIrkuIvmlodcbiAgICogQHBhcmFtIGNvbnRleHQgXG4gICAqIEByZXR1cm5zIFxuICAgKi9cbiAgcHJpdmF0ZSBidWlsZENvbnRleHQoY29udGV4dDogeyBbcHJvcDogc3RyaW5nXTogYW55IH0pOiBFeHByZXNzaW9uQ29udGV4dCB7XG4gICAgY29uc3QgZXhwcmVzc2lvbkNvbnRleHQgPSBuZXcgRXhwcmVzc2lvbkNvbnRleHQoKTtcbiAgICBpZiAoY29udGV4dCAmJiBPYmplY3Qua2V5cyhjb250ZXh0KS5sZW5ndGggPiAwKSB7XG4gICAgICBPYmplY3Qua2V5cyhjb250ZXh0KS5mb3JFYWNoKChrZXk6IHN0cmluZykgPT4ge1xuICAgICAgICBleHByZXNzaW9uQ29udGV4dC5zZXQoa2V5LCBjb250ZXh0W2tleV0pO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBleHByZXNzaW9uQ29udGV4dDtcbiAgfVxufSJdfQ==