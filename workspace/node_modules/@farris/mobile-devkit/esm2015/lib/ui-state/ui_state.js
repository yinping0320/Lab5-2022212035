/*
 * @Author: Witt
 * @Date: 2018-11-17 13:38:23
 * @Last Modified by: Witt
 * @Last Modified time: 2018-11-17 13:38:50
 * @todo：临时删除原有功能，待重构
 */
import { Subject } from 'rxjs';
import { UIStateMetadataUtil } from './uistate_metadata_util';
import { ControlStateListener } from './control-state/control_state_listener';
/**
 * UI状态
 */
export class UIState {
    constructor() {
        this.changes = new Subject();
        this.innerData = Object.assign({});
        this._init();
    }
    _init() {
        const construct = this.constructor;
        const uiFields = UIStateMetadataUtil.getUIFields(construct);
        const controlFields = UIStateMetadataUtil.getControlFields(construct);
        this.initializeUIField(uiFields);
        this.initializeControlField(controlFields);
    }
    //注册监听
    config(viewModelContext) {
        const construct = this.constructor;
        const controlFields = UIStateMetadataUtil.getControlFields(construct);
        if (controlFields && Object.keys(controlFields).length > 0) {
            this.controlStateListener = viewModelContext.injector.get(ControlStateListener);
        }
    }
    initializeUIField(uiFieldMetadata) {
        Object.keys(uiFieldMetadata).forEach(propertyName => {
            const fieldMetadata = uiFieldMetadata[propertyName];
            const uiField = fieldMetadata.stateName || propertyName;
            if (delete this[propertyName]) {
                this.defineProperty(propertyName, uiField);
            }
        });
    }
    initializeControlField(controlFieldMetadata) {
        Object.keys(controlFieldMetadata).forEach(propertyName => {
            const fieldMetadata = controlFieldMetadata[propertyName];
            const uiField = fieldMetadata.stateName || propertyName;
            if (delete this[propertyName]) {
                this.defineProperty(propertyName, uiField);
            }
        });
    }
    isExistProperty(propertyName) {
        if (this.innerData.hasOwnProperty(propertyName) || this.hasOwnProperty(propertyName)) {
            return true;
        }
        return false;
    }
    defineProperty(propertyName, field = null) {
        Object.defineProperty(this, propertyName, {
            get: function () {
                return field !== null ? this.innerData[field] : this.innerData[propertyName];
            },
            set: function (value) {
                // 值相同时不触发变更
                const oldValue = field !== null ? this.innerData[field] : this.innerData[propertyName];
                if (oldValue === value) {
                    return;
                }
                if (field !== null) {
                    this.innerData[field] = value;
                }
                else {
                    this.innerData[propertyName] = value;
                }
                this.changes.next({
                    field: propertyName,
                    value: value
                });
            }
        });
    }
    setPropertyValue(propertyName, value) {
        if (propertyName === '' || propertyName === undefined) {
            return;
        }
        if (!this.isExistProperty(propertyName)) {
            this.defineProperty(propertyName);
        }
        this[propertyName] = value;
    }
}
//# sourceMappingURL=data:application/json;base64,