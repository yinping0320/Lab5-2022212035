import { of } from "rxjs";
import { HttpClient } from "../../http";
import { tap } from "rxjs/operators";
/**
 * 根据流程节点配置控制控件状态，
 * 控制逻辑：
 * 1.流程页面状态为ViewOnly时，该拦截不再生效。
 * 2.根据配置改变控件状态。
 */
export class ProcessConfigStateInterceptor {
    constructor() {
        this.canIntercept = true;
        this.httpClient = new HttpClient();
    }
    /**
     * 初始化
     */
    init(initContext) {
        const processContext = initContext.processContext;
        if (!processContext.isInWf) {
            this.canIntercept = false;
            return of(true);
        }
        if (!processContext.formConfigId) {
            this.canIntercept = false;
            return of(true);
        }
        // 获取表单的formConfigId参数
        const formConfigId = processContext.formConfigId;
        // const formConfigId = '5449bbbf-70d1-e6e8-9692-af54bf1e93bb';
        return this.httpClient.get('/api/runtime/wf/v1.0/formFormatConfig/' + formConfigId, {}).pipe(tap(reslut => {
            this.fieldConfigs = [];
            if (reslut && reslut.formFieldConfigs) {
                reslut.formFieldConfigs.forEach(item => {
                    this.fieldConfigs.push(item);
                });
            }
            this.formButtonConfigs = [];
            if (reslut && reslut.formButtonConfigs) {
                reslut.formButtonConfigs.forEach(item => {
                    this.formButtonConfigs.push(item);
                });
            }
        }));
    }
    /**
     * 拦截
     * @param interceptContext
     */
    intercept(interceptContext) {
        if (!this.canIntercept) {
            return;
        }
        //页面状态为只读，不需要在这里控制了
        const processContext = interceptContext.processContext;
        if (processContext.uiStateInProcess === "ViewOnly") {
            return;
        }
        let suffix = '';
        if (interceptContext.controlState.controlInfo && interceptContext.controlState.controlInfo.type === 'LightAttachment') {
            if (interceptContext.type === 'hideDeleteBtn') {
                suffix = '_attachment_delete_btn';
            }
            else if (interceptContext.type === 'hideUploadBtn') {
                suffix = '_attachment_upload_btn';
            }
        }
        let fieldConfig;
        let formButtonConfig;
        if (this.fieldConfigs && this.fieldConfigs.length > 0) {
            fieldConfig = this.fieldConfigs.find(item => item['fieldId'] === interceptContext.controlState.controlInfo.id);
        }
        if (this.formButtonConfigs && this.formButtonConfigs.length > 0) {
            formButtonConfig = this.formButtonConfigs.find(item => item['buttonId'] === interceptContext.controlState.controlInfo.id + suffix);
        }
        switch (interceptContext.type) {
            case 'visible': {
                this.visibleStateIntercept(interceptContext, fieldConfig, formButtonConfig);
                break;
            }
            case 'disabled': {
                this.disabledStateIntercept(interceptContext, fieldConfig, formButtonConfig);
                break;
            }
            case 'readonly': {
                this.readonlyStateIntercept(interceptContext, fieldConfig, formButtonConfig);
                break;
            }
            case 'required': {
                this.requiredStateIntercept(interceptContext, fieldConfig, formButtonConfig);
                break;
            }
            case 'hideDeleteBtn':
            case 'hideUploadBtn': {
                this.attachmentBtnStateIntercept(interceptContext, formButtonConfig);
                break;
            }
        }
    }
    visibleStateIntercept(interceptContext, fieldConfig, formButtonConfig) {
        if (fieldConfig && fieldConfig['fieldState'] === 'Hidden') {
            interceptContext.value = false;
        }
        if (formButtonConfig) {
            if (formButtonConfig['buttonState'] === 'Enable') {
                interceptContext.value = true;
            }
            else if (formButtonConfig['buttonState'] === 'Hidden') {
                interceptContext.value = false;
            }
        }
    }
    disabledStateIntercept(interceptContext, fieldConfig, formButtonConfig) {
        if (fieldConfig && fieldConfig['fieldState'] === 'Editable') {
            interceptContext.value = false;
        }
        if (formButtonConfig) {
            if (formButtonConfig['buttonState'] === 'Enable') {
                interceptContext.value = false;
            }
            else if (formButtonConfig['buttonState'] === 'Disabled') {
                interceptContext.value = true;
            }
        }
    }
    readonlyStateIntercept(interceptContext, fieldConfig, formButtonConfig) {
        if (fieldConfig && fieldConfig['fieldState'] === 'Readonly') {
            interceptContext.value = true;
        }
        else if (fieldConfig && fieldConfig['fieldState'] === 'Editable') {
            interceptContext.value = false;
        }
    }
    requiredStateIntercept(interceptContext, fieldConfig, formButtonConfig) {
        if (fieldConfig && fieldConfig['fieldState'] === 'Required') {
            interceptContext.value = true;
        }
    }
    attachmentBtnStateIntercept(interceptContext, formButtonConfig) {
        if (formButtonConfig) {
            switch (formButtonConfig['buttonState']) {
                case 'Enable': {
                    interceptContext.value = false;
                    break;
                }
                case 'Hidden': {
                    interceptContext.value = true;
                    break;
                }
                case 'Disabled': {
                    interceptContext.value = true;
                    break;
                }
            }
        }
    }
}
//# sourceMappingURL=data:application/json;base64,