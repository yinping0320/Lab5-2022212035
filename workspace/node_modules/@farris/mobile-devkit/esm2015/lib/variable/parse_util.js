/*
 * StateMachine变量解析
 * @Author: Witt
 * @Date: 2018-12-04 17:09:42
 * @Last Modified by: Witt
 * @Last Modified time: 2019-10-30 11:07:10
 */
import { AppContext } from '../app/index';
import { ViewModelContext } from '../view-model/index';
import { CommandContext } from '../command/index';
/**
 * 解析辅助工具类
 */
class ParseUtil {
    /**
     * 获取应用上下文
     */
    static getAppContext(context) {
        if (context instanceof CommandContext) {
            return context.viewModelContext.appContext;
        }
        else if (context instanceof ViewModelContext) {
            return context.appContext;
        }
        else if (context instanceof AppContext) {
            return context;
        }
        else {
            throw new Error('上下文中找不到AppContext，请检查！');
        }
    }
    /**
     * 获取当前Frame的Context
     */
    static getFrameContext(context) {
        if (context instanceof CommandContext) {
            return context.viewModelContext;
        }
        else if (context instanceof ViewModelContext) {
            return context;
        }
        else {
            throw new Error('上下文中找不到FrameContext，请检查！');
        }
    }
    /**
     * 获取根Frame的Context
     */
    static getRootFrameContext(context) {
        const frameContext = this.getFrameContext(context);
        return frameContext.root;
    }
    /**
     * 根据frameId获取FrameContext
     */
    static getFrameContextById(context, frameId) {
        const appContext = this.getAppContext(context);
        return appContext.viewModelContextManager.getContextById(frameId);
    }
}
export { ParseUtil };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VfdXRpbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvbW9iaWxlLWRldmtpdC8iLCJzb3VyY2VzIjpbImxpYi92YXJpYWJsZS9wYXJzZV91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDMUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWxEOztHQUVHO0FBQ0gsTUFBTSxTQUFTO0lBRWI7O09BRUc7SUFDSCxNQUFNLENBQUMsYUFBYSxDQUFDLE9BQVk7UUFDL0IsSUFBSSxPQUFPLFlBQVksY0FBYyxFQUFFO1lBQ3JDLE9BQU8sT0FBTyxDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQztTQUM1QzthQUFNLElBQUksT0FBTyxZQUFZLGdCQUFnQixFQUFFO1lBQzlDLE9BQU8sT0FBTyxDQUFDLFVBQVUsQ0FBQztTQUMzQjthQUFPLElBQUksT0FBTyxZQUFZLFVBQVUsRUFBRTtZQUN6QyxPQUFPLE9BQU8sQ0FBQztTQUNoQjthQUFNO1lBQ0wsTUFBTSxJQUFJLEtBQUssQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1NBQzNDO0lBQ0gsQ0FBQztJQUVEOztPQUVHO0lBQ0gsTUFBTSxDQUFDLGVBQWUsQ0FBQyxPQUFZO1FBQ2pDLElBQUksT0FBTyxZQUFZLGNBQWMsRUFBRTtZQUNyQyxPQUFPLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztTQUNqQzthQUFNLElBQUksT0FBTyxZQUFZLGdCQUFnQixFQUFFO1lBQzlDLE9BQU8sT0FBTyxDQUFDO1NBQ2hCO2FBQU07WUFDTCxNQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7U0FDN0M7SUFFSCxDQUFDO0lBRUQ7O09BRUc7SUFDSCxNQUFNLENBQUMsbUJBQW1CLENBQUMsT0FBWTtRQUNyQyxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ25ELE9BQU8sWUFBWSxDQUFDLElBQUksQ0FBQztJQUMzQixDQUFDO0lBRUQ7O09BRUc7SUFDSCxNQUFNLENBQUMsbUJBQW1CLENBQUMsT0FBWSxFQUFFLE9BQWU7UUFDdEQsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMvQyxPQUFPLFVBQVUsQ0FBQyx1QkFBdUIsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDcEUsQ0FBQztDQUNGO0FBRUQsT0FBTyxFQUFFLFNBQVMsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFN0YXRlTWFjaGluZeWPmOmHj+ino+aekFxuICogQEF1dGhvcjogV2l0dFxuICogQERhdGU6IDIwMTgtMTItMDQgMTc6MDk6NDJcbiAqIEBMYXN0IE1vZGlmaWVkIGJ5OiBXaXR0XG4gKiBATGFzdCBNb2RpZmllZCB0aW1lOiAyMDE5LTEwLTMwIDExOjA3OjEwXG4gKi9cblxuaW1wb3J0IHsgQXBwQ29udGV4dCB9IGZyb20gJy4uL2FwcC9pbmRleCc7XG5pbXBvcnQgeyBWaWV3TW9kZWxDb250ZXh0IH0gZnJvbSAnLi4vdmlldy1tb2RlbC9pbmRleCc7XG5pbXBvcnQgeyBDb21tYW5kQ29udGV4dCB9IGZyb20gJy4uL2NvbW1hbmQvaW5kZXgnO1xuXG4vKipcbiAqIOino+aekOi+heWKqeW3peWFt+exu1xuICovXG5jbGFzcyBQYXJzZVV0aWwge1xuXG4gIC8qKlxuICAgKiDojrflj5blupTnlKjkuIrkuIvmlodcbiAgICovXG4gIHN0YXRpYyBnZXRBcHBDb250ZXh0KGNvbnRleHQ6IGFueSk6IEFwcENvbnRleHQge1xuICAgIGlmIChjb250ZXh0IGluc3RhbmNlb2YgQ29tbWFuZENvbnRleHQpIHtcbiAgICAgIHJldHVybiBjb250ZXh0LnZpZXdNb2RlbENvbnRleHQuYXBwQ29udGV4dDtcbiAgICB9IGVsc2UgaWYgKGNvbnRleHQgaW5zdGFuY2VvZiBWaWV3TW9kZWxDb250ZXh0KSB7XG4gICAgICByZXR1cm4gY29udGV4dC5hcHBDb250ZXh0O1xuICAgIH0gZWxzZSAgaWYgKGNvbnRleHQgaW5zdGFuY2VvZiBBcHBDb250ZXh0KSB7XG4gICAgICByZXR1cm4gY29udGV4dDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCfkuIrkuIvmlofkuK3mib7kuI3liLBBcHBDb250ZXh077yM6K+35qOA5p+l77yBJyk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOiOt+WPluW9k+WJjUZyYW1l55qEQ29udGV4dFxuICAgKi9cbiAgc3RhdGljIGdldEZyYW1lQ29udGV4dChjb250ZXh0OiBhbnkpOiBWaWV3TW9kZWxDb250ZXh0IHtcbiAgICBpZiAoY29udGV4dCBpbnN0YW5jZW9mIENvbW1hbmRDb250ZXh0KSB7XG4gICAgICByZXR1cm4gY29udGV4dC52aWV3TW9kZWxDb250ZXh0O1xuICAgIH0gZWxzZSBpZiAoY29udGV4dCBpbnN0YW5jZW9mIFZpZXdNb2RlbENvbnRleHQpIHtcbiAgICAgIHJldHVybiBjb250ZXh0O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ+S4iuS4i+aWh+S4reaJvuS4jeWIsEZyYW1lQ29udGV4dO+8jOivt+ajgOafpe+8gScpO1xuICAgIH1cblxuICB9XG5cbiAgLyoqXG4gICAqIOiOt+WPluaguUZyYW1l55qEQ29udGV4dFxuICAgKi9cbiAgc3RhdGljIGdldFJvb3RGcmFtZUNvbnRleHQoY29udGV4dDogYW55KTogVmlld01vZGVsQ29udGV4dCB7XG4gICAgY29uc3QgZnJhbWVDb250ZXh0ID0gdGhpcy5nZXRGcmFtZUNvbnRleHQoY29udGV4dCk7XG4gICAgcmV0dXJuIGZyYW1lQ29udGV4dC5yb290O1xuICB9XG5cbiAgLyoqXG4gICAqIOagueaNrmZyYW1lSWTojrflj5ZGcmFtZUNvbnRleHRcbiAgICovXG4gIHN0YXRpYyBnZXRGcmFtZUNvbnRleHRCeUlkKGNvbnRleHQ6IGFueSwgZnJhbWVJZDogc3RyaW5nKTogVmlld01vZGVsQ29udGV4dCB7XG4gICAgY29uc3QgYXBwQ29udGV4dCA9IHRoaXMuZ2V0QXBwQ29udGV4dChjb250ZXh0KTtcbiAgICByZXR1cm4gYXBwQ29udGV4dC52aWV3TW9kZWxDb250ZXh0TWFuYWdlci5nZXRDb250ZXh0QnlJZChmcmFtZUlkKTtcbiAgfVxufVxuXG5leHBvcnQgeyBQYXJzZVV0aWwgfTtcbiJdfQ==