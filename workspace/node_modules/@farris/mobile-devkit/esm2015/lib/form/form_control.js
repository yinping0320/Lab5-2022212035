import { BindingValueAccessorFactory } from './binding_value_accessor';
import { ValidatorFactory } from '../validator/index';
/**
 * FormControl定义
 */
class FormControl {
    constructor(config, viewModelContext) {
        this.validatorFn = [];
        this.required = false;
        this.requiredExpressionFlag = false;
        this.validateExpressionFlag = false;
        this.readonly = false;
        this.visible = true;
        // 初始验证规则
        this.validRules = [];
        // 记忆验证表达式的规则
        this.validRules_validates = [];
        this.valueAccessor = BindingValueAccessorFactory.create(config.bindingType, config.bindingPath, config.valueConverter, viewModelContext);
        this.validRules = [];
        if (config.validRules) {
            this.validRules = config.validRules;
            this.setValidatorFn(config.validRules);
        }
    }
    get value() {
        return this.valueAccessor.getValue();
    }
    set value(val) {
        this.valueAccessor.setValue(val);
    }
    getValidRules() {
        return this.validRules;
    }
    setValidatorFn(validRules) {
        this.validatorFn = ValidatorFactory.create(validRules);
    }
    pushValidatorFnforValidate(validRules, flag) {
        if (flag && this.validateExpressionFlag) {
            return;
        }
        this.validateExpressionFlag = flag;
        this.validRules_validates = validRules;
        this.validatorFn = this.validatorFn.concat(ValidatorFactory.create(validRules));
    }
    pushValidatorFnforRequired(validRules, flag) {
        if (flag && this.requiredExpressionFlag) {
            return;
        }
        this.requiredExpressionFlag = flag;
        this.validatorFn = this.validatorFn.concat(ValidatorFactory.create(validRules));
    }
    resetValidatorFnforRequired() {
        this.requiredExpressionFlag = false;
        this.validatorFn = ValidatorFactory.create(this.validRules.concat(this.validRules_validates));
    }
    getValidatorFn() {
        return this.validatorFn;
    }
}
export { FormControl };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybV9jb250cm9sLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9tb2JpbGUtZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL2Zvcm0vZm9ybV9jb250cm9sLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sRUFBd0IsMkJBQTJCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUM3RixPQUFPLEVBQWtCLGdCQUFnQixFQUFFLE1BQU0sb0JBQW9CLENBQUE7QUFlckU7O0dBRUc7QUFDSCxNQUFNLFdBQVc7SUF3QmYsWUFBWSxNQUF5QixFQUFFLGdCQUFrQztRQW5CakUsZ0JBQVcsR0FBRyxFQUFFLENBQUM7UUFJekIsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUVULDJCQUFzQixHQUFHLEtBQUssQ0FBQztRQUMvQiwyQkFBc0IsR0FBRyxLQUFLLENBQUM7UUFFdkMsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUVqQixZQUFPLEdBQUcsSUFBSSxDQUFDO1FBRWYsU0FBUztRQUNELGVBQVUsR0FBRyxFQUFFLENBQUM7UUFFeEIsYUFBYTtRQUNMLHlCQUFvQixHQUFHLEVBQUUsQ0FBQztRQUdoQyxJQUFJLENBQUMsYUFBYSxHQUFHLDJCQUEyQixDQUFDLE1BQU0sQ0FDckQsTUFBTSxDQUFDLFdBQVcsRUFDbEIsTUFBTSxDQUFDLFdBQVcsRUFDbEIsTUFBTSxDQUFDLGNBQWMsRUFDckIsZ0JBQWdCLENBQ2pCLENBQUM7UUFDRixJQUFJLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQztRQUNyQixJQUFJLE1BQU0sQ0FBQyxVQUFVLEVBQUU7WUFDckIsSUFBSSxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDO1lBQ3BDLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFBO1NBQ3ZDO0lBQ0gsQ0FBQztJQUVELElBQVcsS0FBSztRQUNkLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUN2QyxDQUFDO0lBRUQsSUFBVyxLQUFLLENBQUMsR0FBRztRQUNsQixJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRU0sYUFBYTtRQUNsQixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUVNLGNBQWMsQ0FBQyxVQUFVO1FBQzlCLElBQUksQ0FBQyxXQUFXLEdBQUcsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFBO0lBQ3hELENBQUM7SUFFTSwwQkFBMEIsQ0FBQyxVQUFVLEVBQUUsSUFBSTtRQUNoRCxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsc0JBQXNCLEVBQUU7WUFDdkMsT0FBTTtTQUNQO1FBQ0QsSUFBSSxDQUFDLHNCQUFzQixHQUFHLElBQUksQ0FBQztRQUNuQyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsVUFBVSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDbEYsQ0FBQztJQUVNLDBCQUEwQixDQUFDLFVBQVUsRUFBRSxJQUFJO1FBQ2hELElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxzQkFBc0IsRUFBRTtZQUN2QyxPQUFNO1NBQ1A7UUFDRCxJQUFJLENBQUMsc0JBQXNCLEdBQUcsSUFBSSxDQUFDO1FBQ25DLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDbEYsQ0FBQztJQUVNLDJCQUEyQjtRQUNoQyxJQUFJLENBQUMsc0JBQXNCLEdBQUcsS0FBSyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxXQUFXLEdBQUcsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUE7SUFDL0YsQ0FBQztJQUVNLGNBQWM7UUFDbkIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzFCLENBQUM7Q0FFRjtBQUVELE9BQU8sRUFBcUIsV0FBVyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWaWV3TW9kZWxDb250ZXh0IH0gZnJvbSAnLi4vdmlldy1tb2RlbC9pbmRleCc7XG5pbXBvcnQgeyBCaW5kaW5nVHlwZSB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHsgQmluZGluZ1ZhbHVlQ29udmVydGVyIH0gZnJvbSAnLi9iaW5kaW5nX3ZhbHVlX2NvbnZlcnRlcic7XG5pbXBvcnQgeyBCaW5kaW5nVmFsdWVBY2Nlc3NvciwgQmluZGluZ1ZhbHVlQWNjZXNzb3JGYWN0b3J5IH0gZnJvbSAnLi9iaW5kaW5nX3ZhbHVlX2FjY2Vzc29yJztcbmltcG9ydCB7IFZhbGlkYXRpb25SdWxlLCBWYWxpZGF0b3JGYWN0b3J5IH0gZnJvbSAnLi4vdmFsaWRhdG9yL2luZGV4J1xuXG4vKipcbiAqIOihqOWNleaOp+S7tumFjee9rlxuICovXG5pbnRlcmZhY2UgRm9ybUNvbnRyb2xDb25maWcge1xuICBuYW1lOiBzdHJpbmc7XG4gIGJpbmRpbmdUeXBlOiBCaW5kaW5nVHlwZTtcbiAgYmluZGluZ1BhdGg6IHN0cmluZztcbiAgdmFsdWVDb252ZXJ0ZXI/OiBCaW5kaW5nVmFsdWVDb252ZXJ0ZXI7XG4gIHZhbHVlQ2hhbmdpbmc/OiBzdHJpbmc7XG4gIHZhbHVlQ2hhbmdlZD86IHN0cmluZztcbiAgdmFsaWRSdWxlcz86IFZhbGlkYXRpb25SdWxlW107XG59XG5cbi8qKlxuICogRm9ybUNvbnRyb2zlrprkuYlcbiAqL1xuY2xhc3MgRm9ybUNvbnRyb2wge1xuXG5cbiAgcHJpdmF0ZSB2YWx1ZUFjY2Vzc29yOiBCaW5kaW5nVmFsdWVBY2Nlc3NvcjtcblxuICBwcml2YXRlIHZhbGlkYXRvckZuID0gW107XG5cbiAgdmFsaWRhdGlvblJlc3VsdDogYW55O1xuXG4gIHJlcXVpcmVkID0gZmFsc2U7XG5cbiAgcHJpdmF0ZSByZXF1aXJlZEV4cHJlc3Npb25GbGFnID0gZmFsc2U7XG4gIHByaXZhdGUgdmFsaWRhdGVFeHByZXNzaW9uRmxhZyA9IGZhbHNlO1xuXG4gIHJlYWRvbmx5ID0gZmFsc2U7XG5cbiAgdmlzaWJsZSA9IHRydWU7XG5cbiAgLy8g5Yid5aeL6aqM6K+B6KeE5YiZXG4gIHByaXZhdGUgdmFsaWRSdWxlcyA9IFtdO1xuXG4gIC8vIOiusOW/humqjOivgeihqOi+vuW8j+eahOinhOWImVxuICBwcml2YXRlIHZhbGlkUnVsZXNfdmFsaWRhdGVzID0gW107XG5cbiAgY29uc3RydWN0b3IoY29uZmlnOiBGb3JtQ29udHJvbENvbmZpZywgdmlld01vZGVsQ29udGV4dDogVmlld01vZGVsQ29udGV4dCkge1xuICAgIHRoaXMudmFsdWVBY2Nlc3NvciA9IEJpbmRpbmdWYWx1ZUFjY2Vzc29yRmFjdG9yeS5jcmVhdGUoXG4gICAgICBjb25maWcuYmluZGluZ1R5cGUsXG4gICAgICBjb25maWcuYmluZGluZ1BhdGgsXG4gICAgICBjb25maWcudmFsdWVDb252ZXJ0ZXIsXG4gICAgICB2aWV3TW9kZWxDb250ZXh0XG4gICAgKTtcbiAgICB0aGlzLnZhbGlkUnVsZXMgPSBbXTtcbiAgICBpZiAoY29uZmlnLnZhbGlkUnVsZXMpIHtcbiAgICAgIHRoaXMudmFsaWRSdWxlcyA9IGNvbmZpZy52YWxpZFJ1bGVzO1xuICAgICAgdGhpcy5zZXRWYWxpZGF0b3JGbihjb25maWcudmFsaWRSdWxlcylcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgZ2V0IHZhbHVlKCkge1xuICAgIHJldHVybiB0aGlzLnZhbHVlQWNjZXNzb3IuZ2V0VmFsdWUoKTtcbiAgfVxuXG4gIHB1YmxpYyBzZXQgdmFsdWUodmFsKSB7XG4gICAgdGhpcy52YWx1ZUFjY2Vzc29yLnNldFZhbHVlKHZhbCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0VmFsaWRSdWxlcygpIHtcbiAgICByZXR1cm4gdGhpcy52YWxpZFJ1bGVzO1xuICB9XG5cbiAgcHVibGljIHNldFZhbGlkYXRvckZuKHZhbGlkUnVsZXMpIHtcbiAgICB0aGlzLnZhbGlkYXRvckZuID0gVmFsaWRhdG9yRmFjdG9yeS5jcmVhdGUodmFsaWRSdWxlcylcbiAgfVxuXG4gIHB1YmxpYyBwdXNoVmFsaWRhdG9yRm5mb3JWYWxpZGF0ZSh2YWxpZFJ1bGVzLCBmbGFnKSB7XG4gICAgaWYgKGZsYWcgJiYgdGhpcy52YWxpZGF0ZUV4cHJlc3Npb25GbGFnKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgdGhpcy52YWxpZGF0ZUV4cHJlc3Npb25GbGFnID0gZmxhZztcbiAgICB0aGlzLnZhbGlkUnVsZXNfdmFsaWRhdGVzID0gdmFsaWRSdWxlcztcbiAgICB0aGlzLnZhbGlkYXRvckZuID0gdGhpcy52YWxpZGF0b3JGbi5jb25jYXQoVmFsaWRhdG9yRmFjdG9yeS5jcmVhdGUodmFsaWRSdWxlcykpO1xuICB9XG5cbiAgcHVibGljIHB1c2hWYWxpZGF0b3JGbmZvclJlcXVpcmVkKHZhbGlkUnVsZXMsIGZsYWcpIHtcbiAgICBpZiAoZmxhZyAmJiB0aGlzLnJlcXVpcmVkRXhwcmVzc2lvbkZsYWcpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICB0aGlzLnJlcXVpcmVkRXhwcmVzc2lvbkZsYWcgPSBmbGFnO1xuICAgIHRoaXMudmFsaWRhdG9yRm4gPSB0aGlzLnZhbGlkYXRvckZuLmNvbmNhdChWYWxpZGF0b3JGYWN0b3J5LmNyZWF0ZSh2YWxpZFJ1bGVzKSk7XG4gIH1cblxuICBwdWJsaWMgcmVzZXRWYWxpZGF0b3JGbmZvclJlcXVpcmVkKCkge1xuICAgIHRoaXMucmVxdWlyZWRFeHByZXNzaW9uRmxhZyA9IGZhbHNlO1xuICAgIHRoaXMudmFsaWRhdG9yRm4gPSBWYWxpZGF0b3JGYWN0b3J5LmNyZWF0ZSh0aGlzLnZhbGlkUnVsZXMuY29uY2F0KHRoaXMudmFsaWRSdWxlc192YWxpZGF0ZXMpKVxuICB9XG5cbiAgcHVibGljIGdldFZhbGlkYXRvckZuKCkge1xuICAgIHJldHVybiB0aGlzLnZhbGlkYXRvckZuO1xuICB9XG5cbn1cblxuZXhwb3J0IHsgRm9ybUNvbnRyb2xDb25maWcsIEZvcm1Db250cm9sIH07XG4iXX0=