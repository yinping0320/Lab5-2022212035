import 'reflect-metadata';
import { makePropDecorator } from '../../core/index';
/**
 * 元数据名称
 */
export const PRIMITIVE_PROP_META = 'PrimitivePropMeta';
/**
 * 【简单属性装饰器工厂】的工厂
 */
function makePrimitivePropMetaDecorator(options) {
    let metadata = {
        primary: false,
        foreign: false
    };
    if (options) {
        const paramType = typeof options;
        switch (paramType) {
            case 'boolean':
                metadata.primary = Boolean(options);
                break;
            case 'string':
                metadata.dataField = String(options);
                break;
            case 'object':
                metadata = Object.assign(metadata, options);
                break;
        }
    }
    return metadata;
}
/**
 * 简单属性装饰器工厂
 */
export const PrimitivePropMeta = makePropDecorator(PRIMITIVE_PROP_META, makePrimitivePropMetaDecorator);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcF9tZXRhZGF0YV9wcmltaXRpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL21vYmlsZS1kZXZraXQvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L21ldGFkYXRhL3Byb3BfbWV0YWRhdGFfcHJpbWl0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sa0JBQWtCLENBQUM7QUFDMUIsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUE2RHJEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsbUJBQW1CLENBQUM7QUFvQnZEOztHQUVHO0FBQ0gsU0FBUyw4QkFBOEIsQ0FBQyxPQUFrRDtJQUV4RixJQUFJLFFBQVEsR0FBMEI7UUFDcEMsT0FBTyxFQUFFLEtBQUs7UUFDZCxPQUFPLEVBQUUsS0FBSztLQUNmLENBQUM7SUFFRixJQUFJLE9BQU8sRUFBRTtRQUNYLE1BQU0sU0FBUyxHQUFHLE9BQU8sT0FBTyxDQUFDO1FBQ2pDLFFBQVEsU0FBUyxFQUFFO1lBQ2pCLEtBQUssU0FBUztnQkFDWixRQUFRLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDcEMsTUFBTTtZQUNSLEtBQUssUUFBUTtnQkFDWCxRQUFRLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDckMsTUFBTTtZQUNSLEtBQUssUUFBUTtnQkFDWCxRQUFRLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUM7Z0JBQzVDLE1BQU07U0FDVDtLQUNGO0lBQ0QsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQztBQUdEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQStCLGlCQUFpQixDQUFDLG1CQUFtQixFQUFFLDhCQUE4QixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3JlZmxlY3QtbWV0YWRhdGEnO1xuaW1wb3J0IHsgbWFrZVByb3BEZWNvcmF0b3IgfSBmcm9tICcuLi8uLi9jb3JlL2luZGV4JztcbmltcG9ydCB7IENsYXNzVHlwZSB9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCB7IFByb3BNZXRhZGF0YSB9IGZyb20gJy4vcHJvcF9tZWF0YWRhdGEnO1xuXG4vKipcbiAqIOeugOWNleWxnuaAp+WFg+aVsOaNrlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFByaW1pdGl2ZVByb3BNZXRhZGF0YSBleHRlbmRzIFByb3BNZXRhZGF0YSB7XG5cbiAgLyoqXG4gICAqIOWxnuaAp+WQjeensFxuICAgKi9cbiAgcHJvcGVydHk/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIOWtl+auteWQjeensFxuICAgKi9cbiAgZGF0YUZpZWxkPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiDljp/lp4vlrZfmrrXlkI3np7BcbiAgICovXG4gIG9yaWdpbmFsRGF0YUZpZWxkPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiDljp/lp4vlrZfmrrXnsbvlnotcbiAgICovXG4gIG9yaWdpbmFsRGF0YUZpZWxkVHlwZT86IHN0cmluZztcblxuICAvKipcbiAgICog5piv5ZCm5Li65Li76ZSuXG4gICAqL1xuICBwcmltYXJ5PzogYm9vbGVhbjtcblxuICAvKipcbiAgICog5piv5ZCm5Li65aSW6ZSuXG4gICAqL1xuICBmb3JlaWduPzogYm9vbGVhbjtcblxuICAvKipcbiAgICog6buY6K6k5YC8XG4gICAqL1xuICBkZWZhdWx0VmFsdWU/OiBhbnk7XG5cbiAgLyoqXG4gICAqIOmqjOivgeinhOWImVxuICAgKi9cbiAgdmFsaWRSdWxlcz86IGFueVtdO1xuXG4gIC8qKlxuICAgKiDliJ3lp4vlgLzvvIznlKjkuo7lrZfmrrXmuIXnqbrlkI5cbiAgICovXG4gIGluaXRWYWx1ZT86IGFueTtcblxuICAvKipcbiAgICog5ZCv55So5aSa6K+t5b2V5YWlXG4gICAqL1xuICBlbmFibGVNdWx0aUxhbmdJbnB1dD86IGJvb2xlYW47XG59XG5cblxuLyoqXG4gKiDlhYPmlbDmja7lkI3np7BcbiAqL1xuZXhwb3J0IGNvbnN0IFBSSU1JVElWRV9QUk9QX01FVEEgPSAnUHJpbWl0aXZlUHJvcE1ldGEnO1xuXG5cbi8qKlxuICog44CQ566A5Y2V5bGe5oCn6KOF6aWw5Zmo5bel5Y6C44CR5o6l5Y+jXG4gKiBAc3VtbWFyeVxuICog57G75Z6L5Y+v5Lul5Li677yaTmdGaWVsZFByb3BlcnR544CBc3RyaW5n44CBQ2xhc3NUeXBlXG4gKiDlvZPkuLpzdHJpbmcg5pe277yM5YiZ6K6+5YW25pig5bCE5a2X5q6177ybXG4gKiDlvZPkuLpDbGFzc1R5cGXml7bvvIzliJnorr7nva7pm4blkIjkuK3nmoTorrDlvZXnsbvlnotcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBQcmltaXRpdmVQcm9wTWV0YURlY29yYXRvciB7XG5cbiAgKG9iajogUHJpbWl0aXZlUHJvcE1ldGFkYXRhIHwgc3RyaW5nIHwgQ2xhc3NUeXBlKTogYW55O1xuXG4gIChvYmo/OiBQcmltaXRpdmVQcm9wTWV0YWRhdGEgfCBzdHJpbmcgfCBib29sZWFuKTogYW55O1xuXG4gIG5ldyhvYmo/OiBQcmltaXRpdmVQcm9wTWV0YWRhdGEgfCBzdHJpbmcgfCBib29sZWFuKTogYW55O1xufVxuXG5cbi8qKlxuICog44CQ566A5Y2V5bGe5oCn6KOF6aWw5Zmo5bel5Y6C44CR55qE5bel5Y6CXG4gKi9cbmZ1bmN0aW9uIG1ha2VQcmltaXRpdmVQcm9wTWV0YURlY29yYXRvcihvcHRpb25zPzogUHJpbWl0aXZlUHJvcE1ldGFkYXRhIHwgc3RyaW5nIHwgYm9vbGVhbik6IGFueSB7XG5cbiAgbGV0IG1ldGFkYXRhOiBQcmltaXRpdmVQcm9wTWV0YWRhdGEgPSB7XG4gICAgcHJpbWFyeTogZmFsc2UsXG4gICAgZm9yZWlnbjogZmFsc2VcbiAgfTtcblxuICBpZiAob3B0aW9ucykge1xuICAgIGNvbnN0IHBhcmFtVHlwZSA9IHR5cGVvZiBvcHRpb25zO1xuICAgIHN3aXRjaCAocGFyYW1UeXBlKSB7XG4gICAgICBjYXNlICdib29sZWFuJzpcbiAgICAgICAgbWV0YWRhdGEucHJpbWFyeSA9IEJvb2xlYW4ob3B0aW9ucyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgICAgbWV0YWRhdGEuZGF0YUZpZWxkID0gU3RyaW5nKG9wdGlvbnMpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICAgIG1ldGFkYXRhID0gT2JqZWN0LmFzc2lnbihtZXRhZGF0YSwgb3B0aW9ucyk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbWV0YWRhdGE7XG59XG5cblxuLyoqXG4gKiDnroDljZXlsZ7mgKfoo4XppbDlmajlt6XljoJcbiAqL1xuZXhwb3J0IGNvbnN0IFByaW1pdGl2ZVByb3BNZXRhOiBQcmltaXRpdmVQcm9wTWV0YURlY29yYXRvciA9IG1ha2VQcm9wRGVjb3JhdG9yKFBSSU1JVElWRV9QUk9QX01FVEEsIG1ha2VQcmltaXRpdmVQcm9wTWV0YURlY29yYXRvcik7XG4iXX0=