/**
 * session变量解析
 * @author Witt <jiwt@inspur.com>
 */
import * as tslib_1 from "tslib";
import { ParseUtil } from './parse_util';
/**
 * 数据变量解析
 */
var UIStateVariableParser = /** @class */ (function () {
    function UIStateVariableParser() {
    }
    /**
     * 解析变量
     * @param expression 形如：/frameId/stateName
     * @param context 上下文
     */
    UIStateVariableParser.prototype.parse = function (expression, context) {
        var _this = this;
        var appContext = ParseUtil.getAppContext(context);
        var paths = this.extractPaths(expression);
        // 1、单个的表达式：直接求值
        if (paths.length === 1 && expression === "{UISTATE~" + paths[0] + "}") {
            return this.getUIState(paths[0], appContext);
        }
        // 2、其他情况：字符串替换
        paths.forEach(function (path) {
            var searchValue = "{UISTATE~" + path + "}";
            var replaceValue = _this.getUIState(path, appContext);
            expression = expression.replace(searchValue, replaceValue);
        });
        return expression;
    };
    /**
     * 提取路径
     * 变量格式：{}
     */
    UIStateVariableParser.prototype.extractPaths = function (expression) {
        var paths = [];
        // 查找所有的uiState变量字符串
        var UI_STATE_PATTERN_G = /\{UISTATE~(\S+?)\}/g;
        var uiStateVariables = expression.match(UI_STATE_PATTERN_G);
        if (uiStateVariables === null) {
            return [];
        }
        // 提取后边的路径
        var UI_STATE_PATTERN = /\{UISTATE~(\S+?)\}/;
        uiStateVariables.forEach(function (uiStateVariable) {
            var pathMatches = uiStateVariable.match(UI_STATE_PATTERN);
            if (pathMatches != null && pathMatches.length === 2) {
                paths.push(pathMatches[1]);
            }
        });
        return paths;
    };
    /**
     * 获取UIState
     */
    UIStateVariableParser.prototype.getUIState = function (path, appContext) {
        var parts = path.split('/').filter(function (part) {
            return part !== '';
        });
        var _a = tslib_1.__read(parts, 2), frameId = _a[0], stateName = _a[1];
        var frameContext = appContext.viewModelContextManager.getContextById(frameId);
        var state = frameContext.uiState[stateName];
        if (state && state.constructor.toString().startsWith('function Date()')) {
            return this.formatDate(state);
        }
        for (var i = 2; i < parts.length; i++) {
            state = state[parts[i]];
            // 复杂对象一层层查找下去，如果某一层不存在，结果可以是undefined，但是要直接返回undefined避免报错。
            if (!state) {
                return state;
            }
        }
        return state;
    };
    /**
     * @todo：待删除
     */
    UIStateVariableParser.prototype.formatDate = function (value) {
        if (!value) {
            return '';
        }
        // 年
        var year = value.getFullYear();
        // 月
        var month = (value.getMonth() + 1).toString();
        month = month.length === 1 ? ('0' + month) : month;
        // 日
        var day = value.getDate().toString();
        day = day.length === 1 ? ('0' + day) : day;
        return year + "-" + month + "-" + day;
    };
    return UIStateVariableParser;
}());
export { UIStateVariableParser };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWlfc3RhdGVfdmFyaWFibGVfcGFyc2VyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9tb2JpbGUtZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL3ZhcmlhYmxlL3VpX3N0YXRlX3ZhcmlhYmxlX3BhcnNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBSUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUV6Qzs7R0FFRztBQUNIO0lBQUE7SUFpR0EsQ0FBQztJQS9GQzs7OztPQUlHO0lBQ0kscUNBQUssR0FBWixVQUFhLFVBQWtCLEVBQUUsT0FBWTtRQUE3QyxpQkFrQkM7UUFoQkMsSUFBTSxVQUFVLEdBQUcsU0FBUyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNwRCxJQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBRTVDLGdCQUFnQjtRQUNoQixJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLFVBQVUsS0FBSyxjQUFZLEtBQUssQ0FBQyxDQUFDLENBQUMsTUFBRyxFQUFFO1lBQ2hFLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsVUFBVSxDQUFDLENBQUM7U0FDOUM7UUFFRCxlQUFlO1FBQ2YsS0FBSyxDQUFDLE9BQU8sQ0FBQyxVQUFBLElBQUk7WUFDaEIsSUFBTSxXQUFXLEdBQUcsY0FBWSxJQUFJLE1BQUcsQ0FBQztZQUN4QyxJQUFNLFlBQVksR0FBRyxLQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQztZQUN2RCxVQUFVLEdBQUcsVUFBVSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFDN0QsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLFVBQVUsQ0FBQztJQUNwQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0ssNENBQVksR0FB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LENBQUM7SUFDbkMsQ0FBQztJQUNILDRCQUFDO0FBQUQsQ0FBQyxBQWpHRCxJQWlHQztBQUVELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBzZXNzaW9u5Y+Y6YeP6Kej5p6QXG4gKiBAYXV0aG9yIFdpdHQgPGppd3RAaW5zcHVyLmNvbT5cbiAqL1xuXG5pbXBvcnQgeyBWYXJpYWJsZVBhcnNlciB9IGZyb20gJy4vdmFyaWFibGVfcGFyc2VyJztcbmltcG9ydCB7IEFwcENvbnRleHQgfSBmcm9tICcuLi9hcHAvaW5kZXgnO1xuaW1wb3J0IHsgUGFyc2VVdGlsIH0gZnJvbSAnLi9wYXJzZV91dGlsJztcblxuLyoqXG4gKiDmlbDmja7lj5jph4/op6PmnpBcbiAqL1xuY2xhc3MgVUlTdGF0ZVZhcmlhYmxlUGFyc2VyIGltcGxlbWVudHMgVmFyaWFibGVQYXJzZXIge1xuXG4gIC8qKlxuICAgKiDop6PmnpDlj5jph49cbiAgICogQHBhcmFtIGV4cHJlc3Npb24g5b2i5aaC77yaL2ZyYW1lSWQvc3RhdGVOYW1lXG4gICAqIEBwYXJhbSBjb250ZXh0IOS4iuS4i+aWh1xuICAgKi9cbiAgcHVibGljIHBhcnNlKGV4cHJlc3Npb246IHN0cmluZywgY29udGV4dDogYW55KTogYW55IHtcblxuICAgIGNvbnN0IGFwcENvbnRleHQgPSBQYXJzZVV0aWwuZ2V0QXBwQ29udGV4dChjb250ZXh0KTtcbiAgICBjb25zdCBwYXRocyA9IHRoaXMuZXh0cmFjdFBhdGhzKGV4cHJlc3Npb24pO1xuXG4gICAgLy8gMeOAgeWNleS4queahOihqOi+vuW8j++8muebtOaOpeaxguWAvFxuICAgIGlmIChwYXRocy5sZW5ndGggPT09IDEgJiYgZXhwcmVzc2lvbiA9PT0gYHtVSVNUQVRFfiR7cGF0aHNbMF19fWApIHtcbiAgICAgIHJldHVybiB0aGlzLmdldFVJU3RhdGUocGF0aHNbMF0sIGFwcENvbnRleHQpO1xuICAgIH1cblxuICAgIC8vIDLjgIHlhbbku5bmg4XlhrXvvJrlrZfnrKbkuLLmm7/mjaJcbiAgICBwYXRocy5mb3JFYWNoKHBhdGggPT4ge1xuICAgICAgY29uc3Qgc2VhcmNoVmFsdWUgPSBge1VJU1RBVEV+JHtwYXRofX1gO1xuICAgICAgY29uc3QgcmVwbGFjZVZhbHVlID0gdGhpcy5nZXRVSVN0YXRlKHBhdGgsIGFwcENvbnRleHQpO1xuICAgICAgZXhwcmVzc2lvbiA9IGV4cHJlc3Npb24ucmVwbGFjZShzZWFyY2hWYWx1ZSwgcmVwbGFjZVZhbHVlKTtcbiAgICB9KTtcblxuICAgIHJldHVybiBleHByZXNzaW9uO1xuICB9XG5cbiAgLyoqXG4gICAqIOaPkOWPlui3r+W+hFxuICAgKiDlj5jph4/moLzlvI/vvJp7fVxuICAgKi9cbiAgcHJpdmF0ZSBleHRyYWN0UGF0aHMoZXhwcmVzc2lvbjogc3RyaW5nKTogc3RyaW5nW10ge1xuICAgIGNvbnN0IHBhdGhzOiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgLy8g5p+l5om+5omA5pyJ55qEdWlTdGF0ZeWPmOmHj+Wtl+espuS4slxuICAgIGNvbnN0IFVJX1NUQVRFX1BBVFRFUk5fRyA9IC9cXHtVSVNUQVRFfihcXFMrPylcXH0vZztcbiAgICBjb25zdCB1aVN0YXRlVmFyaWFibGVzID0gZXhwcmVzc2lvbi5tYXRjaChVSV9TVEFURV9QQVRURVJOX0cpO1xuICAgIGlmICh1aVN0YXRlVmFyaWFibGVzID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuXG4gICAgLy8g5o+Q5Y+W5ZCO6L6555qE6Lev5b6EXG4gICAgY29uc3QgVUlfU1RBVEVfUEFUVEVSTiA9IC9cXHtVSVNUQVRFfihcXFMrPylcXH0vO1xuICAgIHVpU3RhdGVWYXJpYWJsZXMuZm9yRWFjaCgodWlTdGF0ZVZhcmlhYmxlOiBzdHJpbmcpID0+IHtcbiAgICAgIGNvbnN0IHBhdGhNYXRjaGVzID0gdWlTdGF0ZVZhcmlhYmxlLm1hdGNoKFVJX1NUQVRFX1BBVFRFUk4pO1xuICAgICAgaWYgKHBhdGhNYXRjaGVzICE9IG51bGwgJiYgcGF0aE1hdGNoZXMubGVuZ3RoID09PSAyKSB7XG4gICAgICAgIHBhdGhzLnB1c2gocGF0aE1hdGNoZXNbMV0pO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHBhdGhzO1xuICB9XG5cbiAgLyoqXG4gICAqIOiOt+WPllVJU3RhdGVcbiAgICovXG4gIHByaXZhdGUgZ2V0VUlTdGF0ZShwYXRoOiBzdHJpbmcsIGFwcENvbnRleHQ6IEFwcENvbnRleHQpIHtcbiAgICBjb25zdCBwYXJ0cyA9IHBhdGguc3BsaXQoJy8nKS5maWx0ZXIoKHBhcnQ6IHN0cmluZykgPT4ge1xuICAgICAgcmV0dXJuIHBhcnQgIT09ICcnO1xuICAgIH0pO1xuICAgIGNvbnN0IFtmcmFtZUlkLCBzdGF0ZU5hbWVdID0gcGFydHM7XG4gICAgY29uc3QgZnJhbWVDb250ZXh0ID0gYXBwQ29udGV4dC52aWV3TW9kZWxDb250ZXh0TWFuYWdlci5nZXRDb250ZXh0QnlJZChmcmFtZUlkKTtcbiAgICBsZXQgc3RhdGUgPSBmcmFtZUNvbnRleHQudWlTdGF0ZVtzdGF0ZU5hbWVdO1xuICAgIGlmIChzdGF0ZSAmJiBzdGF0ZS5jb25zdHJ1Y3Rvci50b1N0cmluZygpLnN0YXJ0c1dpdGgoJ2Z1bmN0aW9uIERhdGUoKScpKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb3JtYXREYXRlKHN0YXRlKTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDI7IGkgPCBwYXJ0cy5sZW5ndGg7IGkrKykge1xuICAgICAgc3RhdGUgPSBzdGF0ZVtwYXJ0c1tpXV07XG5cbiAgICAgIC8vIOWkjeadguWvueixoeS4gOWxguWxguafpeaJvuS4i+WOu++8jOWmguaenOafkOS4gOWxguS4jeWtmOWcqO+8jOe7k+aenOWPr+S7peaYr3VuZGVmaW5lZO+8jOS9huaYr+imgeebtOaOpei/lOWbnnVuZGVmaW5lZOmBv+WFjeaKpemUmeOAglxuICAgICAgaWYgKCFzdGF0ZSkge1xuICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzdGF0ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAdG9kb++8muW+heWIoOmZpFxuICAgKi9cbiAgcHJpdmF0ZSBmb3JtYXREYXRlKHZhbHVlOiBEYXRlKTogc3RyaW5nIHtcbiAgICBpZiAoIXZhbHVlKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuXG4gICAgLy8g5bm0XG4gICAgY29uc3QgeWVhciA9IHZhbHVlLmdldEZ1bGxZZWFyKCk7XG5cbiAgICAvLyDmnIhcbiAgICBsZXQgbW9udGggPSAodmFsdWUuZ2V0TW9udGgoKSArIDEpLnRvU3RyaW5nKCk7XG4gICAgbW9udGggPSBtb250aC5sZW5ndGggPT09IDEgPyAoJzAnICsgbW9udGgpIDogbW9udGg7XG5cbiAgICAvLyDml6VcbiAgICBsZXQgZGF5ID0gdmFsdWUuZ2V0RGF0ZSgpLnRvU3RyaW5nKCk7XG4gICAgZGF5ID0gZGF5Lmxlbmd0aCA9PT0gMSA/ICgnMCcgKyBkYXkpIDogZGF5O1xuICAgIHJldHVybiBgJHt5ZWFyfS0ke21vbnRofS0ke2RheX1gO1xuICB9XG59XG5cbmV4cG9ydCB7IFVJU3RhdGVWYXJpYWJsZVBhcnNlciB9O1xuIl19