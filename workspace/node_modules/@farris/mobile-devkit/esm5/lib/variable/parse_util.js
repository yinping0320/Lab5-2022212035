/*
 * StateMachine变量解析
 * @Author: Witt
 * @Date: 2018-12-04 17:09:42
 * @Last Modified by: Witt
 * @Last Modified time: 2019-10-30 11:07:10
 */
import { AppContext } from '../app/index';
import { ViewModelContext } from '../view-model/index';
import { CommandContext } from '../command/index';
/**
 * 解析辅助工具类
 */
var ParseUtil = /** @class */ (function () {
    function ParseUtil() {
    }
    /**
     * 获取应用上下文
     */
    ParseUtil.getAppContext = function (context) {
        if (context instanceof CommandContext) {
            return context.viewModelContext.appContext;
        }
        else if (context instanceof ViewModelContext) {
            return context.appContext;
        }
        else if (context instanceof AppContext) {
            return context;
        }
        else {
            throw new Error('上下文中找不到AppContext，请检查！');
        }
    };
    /**
     * 获取当前Frame的Context
     */
    ParseUtil.getFrameContext = function (context) {
        if (context instanceof CommandContext) {
            return context.viewModelContext;
        }
        else if (context instanceof ViewModelContext) {
            return context;
        }
        else {
            throw new Error('上下文中找不到FrameContext，请检查！');
        }
    };
    /**
     * 获取根Frame的Context
     */
    ParseUtil.getRootFrameContext = function (context) {
        var frameContext = this.getFrameContext(context);
        return frameContext.root;
    };
    /**
     * 根据frameId获取FrameContext
     */
    ParseUtil.getFrameContextById = function (context, frameId) {
        var appContext = this.getAppContext(context);
        return appContext.viewModelContextManager.getContextById(frameId);
    };
    return ParseUtil;
}());
export { ParseUtil };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VfdXRpbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvbW9iaWxlLWRldmtpdC8iLCJzb3VyY2VzIjpbImxpYi92YXJpYWJsZS9wYXJzZV91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDMUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWxEOztHQUVHO0FBQ0g7SUFBQTtJQThDQSxDQUFDO0lBNUNDOztPQUVHO0lBQ0ksdUJBQWEsR0FBcEIsVUFBcUIsT0FBWTtRQUMvQixJQUFJLE9BQU8sWUFBWSxjQUFjLEVBQUU7WUFDckMsT0FBTyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDO1NBQzVDO2FBQU0sSUFBSSxPQUFPLFlBQVksZ0JBQWdCLEVBQUU7WUFDOUMsT0FBTyxPQUFPLENBQUMsVUFBVSxDQUFDO1NBQzNCO2FBQU8sSUFBSSxPQUFPLFlBQVksVUFBVSxFQUFFO1lBQ3pDLE9BQU8sT0FBTyxDQUFDO1NBQ2hCO2FBQU07WUFDTCxNQUFNLElBQUksS0FBSyxDQUFDLHdCQUF3QixDQUFDLENBQUM7U0FDM0M7SUFDSCxDQUFDO0lBRUQ7O09BRUc7SUFDSSx5QkFBZSxHQUF0QixVQUF1QixPQUFZO1FBQ2pDLElBQUksT0FBTyxZQUFZLGNBQWMsRUFBRTtZQUNyQyxPQUFPLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztTQUNqQzthQUFNLElBQUksT0FBTyxZQUFZLGdCQUFnQixFQUFFO1lBQzlDLE9BQU8sT0FBTyxDQUFDO1NBQ2hCO2FBQU07WUFDTCxNQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7U0FDN0M7SUFFSCxDQUFDO0lBRUQ7O09BRUc7SUFDSSw2QkFBbUIsR0FBMUIsVUFBMkIsT0FBWTtRQUNyQyxJQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ25ELE9BQU8sWUFBWSxDQUFDLElBQUksQ0FBQztJQUMzQixDQUFDO0lBRUQ7O09BRUc7SUFDSSw2QkFBbUIsR0FBMUIsVUFBMkIsT0FBWSxFQUFFLE9BQWU7UUFDdEQsSUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMvQyxPQUFPLFVBQVUsQ0FBQyx1QkFBdUIsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDcEUsQ0FBQztJQUNILGdCQUFDO0FBQUQsQ0FBQyxBQTlDRCxJQThDQztBQUVELE9BQU8sRUFBRSxTQUFTLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTdGF0ZU1hY2hpbmXlj5jph4/op6PmnpBcbiAqIEBBdXRob3I6IFdpdHRcbiAqIEBEYXRlOiAyMDE4LTEyLTA0IDE3OjA5OjQyXG4gKiBATGFzdCBNb2RpZmllZCBieTogV2l0dFxuICogQExhc3QgTW9kaWZpZWQgdGltZTogMjAxOS0xMC0zMCAxMTowNzoxMFxuICovXG5cbmltcG9ydCB7IEFwcENvbnRleHQgfSBmcm9tICcuLi9hcHAvaW5kZXgnO1xuaW1wb3J0IHsgVmlld01vZGVsQ29udGV4dCB9IGZyb20gJy4uL3ZpZXctbW9kZWwvaW5kZXgnO1xuaW1wb3J0IHsgQ29tbWFuZENvbnRleHQgfSBmcm9tICcuLi9jb21tYW5kL2luZGV4JztcblxuLyoqXG4gKiDop6PmnpDovoXliqnlt6XlhbfnsbtcbiAqL1xuY2xhc3MgUGFyc2VVdGlsIHtcblxuICAvKipcbiAgICog6I635Y+W5bqU55So5LiK5LiL5paHXG4gICAqL1xuICBzdGF0aWMgZ2V0QXBwQ29udGV4dChjb250ZXh0OiBhbnkpOiBBcHBDb250ZXh0IHtcbiAgICBpZiAoY29udGV4dCBpbnN0YW5jZW9mIENvbW1hbmRDb250ZXh0KSB7XG4gICAgICByZXR1cm4gY29udGV4dC52aWV3TW9kZWxDb250ZXh0LmFwcENvbnRleHQ7XG4gICAgfSBlbHNlIGlmIChjb250ZXh0IGluc3RhbmNlb2YgVmlld01vZGVsQ29udGV4dCkge1xuICAgICAgcmV0dXJuIGNvbnRleHQuYXBwQ29udGV4dDtcbiAgICB9IGVsc2UgIGlmIChjb250ZXh0IGluc3RhbmNlb2YgQXBwQ29udGV4dCkge1xuICAgICAgcmV0dXJuIGNvbnRleHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcign5LiK5LiL5paH5Lit5om+5LiN5YiwQXBwQ29udGV4dO+8jOivt+ajgOafpe+8gScpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5blvZPliY1GcmFtZeeahENvbnRleHRcbiAgICovXG4gIHN0YXRpYyBnZXRGcmFtZUNvbnRleHQoY29udGV4dDogYW55KTogVmlld01vZGVsQ29udGV4dCB7XG4gICAgaWYgKGNvbnRleHQgaW5zdGFuY2VvZiBDb21tYW5kQ29udGV4dCkge1xuICAgICAgcmV0dXJuIGNvbnRleHQudmlld01vZGVsQ29udGV4dDtcbiAgICB9IGVsc2UgaWYgKGNvbnRleHQgaW5zdGFuY2VvZiBWaWV3TW9kZWxDb250ZXh0KSB7XG4gICAgICByZXR1cm4gY29udGV4dDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCfkuIrkuIvmlofkuK3mib7kuI3liLBGcmFtZUNvbnRleHTvvIzor7fmo4Dmn6XvvIEnKTtcbiAgICB9XG5cbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5bmoLlGcmFtZeeahENvbnRleHRcbiAgICovXG4gIHN0YXRpYyBnZXRSb290RnJhbWVDb250ZXh0KGNvbnRleHQ6IGFueSk6IFZpZXdNb2RlbENvbnRleHQge1xuICAgIGNvbnN0IGZyYW1lQ29udGV4dCA9IHRoaXMuZ2V0RnJhbWVDb250ZXh0KGNvbnRleHQpO1xuICAgIHJldHVybiBmcmFtZUNvbnRleHQucm9vdDtcbiAgfVxuXG4gIC8qKlxuICAgKiDmoLnmja5mcmFtZUlk6I635Y+WRnJhbWVDb250ZXh0XG4gICAqL1xuICBzdGF0aWMgZ2V0RnJhbWVDb250ZXh0QnlJZChjb250ZXh0OiBhbnksIGZyYW1lSWQ6IHN0cmluZyk6IFZpZXdNb2RlbENvbnRleHQge1xuICAgIGNvbnN0IGFwcENvbnRleHQgPSB0aGlzLmdldEFwcENvbnRleHQoY29udGV4dCk7XG4gICAgcmV0dXJuIGFwcENvbnRleHQudmlld01vZGVsQ29udGV4dE1hbmFnZXIuZ2V0Q29udGV4dEJ5SWQoZnJhbWVJZCk7XG4gIH1cbn1cblxuZXhwb3J0IHsgUGFyc2VVdGlsIH07XG4iXX0=