/**
 * session变量解析
 * @author Witt <jiwt@inspur.com>
 */
import * as tslib_1 from "tslib";
import { CommandContext } from '../command/index';
/**
 * 命令变量解析
 * {COMMAND~/params/key}
 * {COMMAND~/results/taskName}
 */
var CommandVariableParser = /** @class */ (function () {
    /**
     * 构造函数
     */
    function CommandVariableParser() {
    }
    /**
     * 解析变量
     * @param expression 变量：格式形如：/frameId/componentId/stateName
     * @param context 上下文
     */
    CommandVariableParser.prototype.parse = function (expression, context) {
        var _this = this;
        var paths = this.extractPaths(expression);
        // 1、单个的表达式：直接求值
        if (paths.length === 1 && expression === "{COMMAND~" + paths[0] + "}") {
            return this.getValue(paths[0], context);
        }
        // 2、其他情况：字符串替换
        paths.forEach(function (path) {
            var searchValue = "{COMMAND~" + path + "}";
            var replaceValue = _this.getValue(path, context);
            expression = expression.replace(searchValue, replaceValue);
        });
        return expression;
    };
    /**
     * 提取Session变量名
     * 变量格式：{}
     */
    CommandVariableParser.prototype.extractPaths = function (expression) {
        var paths = [];
        // 查找所有的uiState变量字符串
        var UI_STATE_PATTERN_G = /\{COMMAND~(\S+?)\}/g;
        var uiStateVariables = expression.match(UI_STATE_PATTERN_G);
        if (uiStateVariables === null) {
            return [];
        }
        // 提取后边的路径
        var UI_STATE_PATTERN = /\{COMMAND~(\S+?)\}/;
        uiStateVariables.forEach(function (sessionVariable) {
            var pathMatches = sessionVariable.match(UI_STATE_PATTERN);
            if (pathMatches != null && pathMatches.length === 2) {
                paths.push(pathMatches[1]);
            }
        });
        return paths;
    };
    /**
     * 获取UIState
     */
    CommandVariableParser.prototype.getValue = function (path, context) {
        if (context instanceof CommandContext === false) {
            throw new Error('当前上下文不支持COMMAND变量，请检查！');
        }
        var parts = path.split('/').filter(function (part) {
            return part !== '';
        });
        var _a = tslib_1.__read(parts, 2), type = _a[0], name = _a[1];
        if (type === 'params') {
            return context.command.params[name];
        }
        else if (type === 'results') {
            return context.results[name];
        }
    };
    return CommandVariableParser;
}());
export { CommandVariableParser };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWFuZF92YXJpYWJsZV9wYXJzZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL21vYmlsZS1kZXZraXQvIiwic291cmNlcyI6WyJsaWIvdmFyaWFibGUvY29tbWFuZF92YXJpYWJsZV9wYXJzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHOztBQUVILE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUdsRDs7OztHQUlHO0FBQ0g7SUFFRTs7T0FFRztJQUNIO0lBQ0EsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxxQ0FBSyxHQUFaLFVBQWEsVUFBa0IsRUFBRSxPQUFZO1FBQTdDLGlCQWdCQztRQWZDLElBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLENBQUM7UUFFNUMsZ0JBQWdCO1FBQ2hCLElBQUksS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLElBQUksVUFBVSxLQUFLLGNBQVksS0FBSyxDQUFDLENBQUMsQ0FBQyxNQUFHLEVBQUU7WUFDaEUsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztTQUN6QztRQUVELGVBQWU7UUFDZixLQUFLLENBQUMsT0FBTyxDQUFFLFVBQUEsSUFBSTtZQUNqQixJQUFNLFdBQVcsR0FBRyxjQUFZLElBQUksTUFBRyxDQUFDO1lBQ3hDLElBQU0sWUFBWSxHQUFHLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBQ2xELFVBQVUsR0FBRyxVQUFVLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxZQUFZLENBQUMsQ0FBQztRQUM3RCxDQUFDLENBQUMsQ0FBQztRQUVILE9BQVEsVUFBVSxDQUFDO0lBQ3JCLENBQUM7SUFFRDs7O09BR0c7SUFDSyw0Q0FBWSxHQUFwQixVQUFxQixVQUFrQjtRQUNyQyxJQUFNLEtBQUssR0FBYyxFQUFFLENBQUM7UUFFNUIsb0JBQW9CO1FBQ3BCLElBQU0sa0JBQWtCLEdBQUcscUJBQXFCLENBQUM7UUFDakQsSUFBTSxnQkFBZ0IsR0FBRyxVQUFVLENBQUMsS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFDOUQsSUFBSSxnQkFBZ0IsS0FBSyxJQUFJLEVBQUU7WUFDN0IsT0FBTyxFQUFFLENBQUM7U0FDWDtRQUVELFVBQVU7UUFDVixJQUFNLGdCQUFnQixHQUFHLG9CQUFvQixDQUFDO1FBQzlDLGdCQUFnQixDQUFDLE9BQU8sQ0FBRSxVQUFBLGVBQWU7WUFDdkMsSUFBTSxXQUFXLEdBQUcsZUFBZSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1lBQzVELElBQUksV0FBVyxJQUFJLElBQUksSUFBSSxXQUFXLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtnQkFDbkQsS0FBSyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUM1QjtRQUNILENBQUMsQ0FBQyxDQUFDO1FBRUgsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRUQ7O09BRUc7SUFDSyx3Q0FBUSxHQUFoQixVQUFpQixJQUFZLEVBQUUsT0FBWTtRQUN6QyxJQUFJLE9BQU8sWUFBWSxjQUFjLEtBQUssS0FBSyxFQUFFO1lBQy9DLE1BQU0sSUFBSSxLQUFLLENBQUMsd0JBQXdCLENBQUMsQ0FBQztTQUMzQztRQUNELElBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQUMsSUFBWTtZQUNoRCxPQUFPLElBQUksS0FBSyxFQUFFLENBQUM7UUFDckIsQ0FBQyxDQUFDLENBQUM7UUFFRyxJQUFBLDZCQUFvQixFQUFuQixZQUFJLEVBQUUsWUFBYSxDQUFDO1FBQzNCLElBQUksSUFBSSxLQUFLLFFBQVEsRUFBRTtZQUNyQixPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3JDO2FBQU0sSUFBSSxJQUFJLEtBQUssU0FBUyxFQUFFO1lBQzdCLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUM5QjtJQUNILENBQUM7SUFDSCw0QkFBQztBQUFELENBQUMsQUEzRUQsSUEyRUM7QUFFRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogc2Vzc2lvbuWPmOmHj+ino+aekFxuICogQGF1dGhvciBXaXR0IDxqaXd0QGluc3B1ci5jb20+XG4gKi9cblxuaW1wb3J0IHsgQ29tbWFuZENvbnRleHQgfSBmcm9tICcuLi9jb21tYW5kL2luZGV4JztcbmltcG9ydCB7IFZhcmlhYmxlUGFyc2VyIH0gZnJvbSAnLi92YXJpYWJsZV9wYXJzZXInO1xuXG4vKipcbiAqIOWRveS7pOWPmOmHj+ino+aekFxuICoge0NPTU1BTkR+L3BhcmFtcy9rZXl9XG4gKiB7Q09NTUFORH4vcmVzdWx0cy90YXNrTmFtZX1cbiAqL1xuY2xhc3MgQ29tbWFuZFZhcmlhYmxlUGFyc2VyIGltcGxlbWVudHMgVmFyaWFibGVQYXJzZXIge1xuXG4gIC8qKlxuICAgKiDmnoTpgKDlh73mlbBcbiAgICovXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgfVxuXG4gIC8qKlxuICAgKiDop6PmnpDlj5jph49cbiAgICogQHBhcmFtIGV4cHJlc3Npb24g5Y+Y6YeP77ya5qC85byP5b2i5aaC77yaL2ZyYW1lSWQvY29tcG9uZW50SWQvc3RhdGVOYW1lXG4gICAqIEBwYXJhbSBjb250ZXh0IOS4iuS4i+aWh1xuICAgKi9cbiAgcHVibGljIHBhcnNlKGV4cHJlc3Npb246IHN0cmluZywgY29udGV4dDogYW55KTogYW55IHtcbiAgICBjb25zdCBwYXRocyA9IHRoaXMuZXh0cmFjdFBhdGhzKGV4cHJlc3Npb24pO1xuXG4gICAgLy8gMeOAgeWNleS4queahOihqOi+vuW8j++8muebtOaOpeaxguWAvFxuICAgIGlmIChwYXRocy5sZW5ndGggPT09IDEgJiYgZXhwcmVzc2lvbiA9PT0gYHtDT01NQU5EfiR7cGF0aHNbMF19fWApIHtcbiAgICAgIHJldHVybiB0aGlzLmdldFZhbHVlKHBhdGhzWzBdLCBjb250ZXh0KTtcbiAgICB9XG5cbiAgICAvLyAy44CB5YW25LuW5oOF5Ya177ya5a2X56ym5Liy5pu/5o2iXG4gICAgcGF0aHMuZm9yRWFjaCggcGF0aCA9PiB7XG4gICAgICBjb25zdCBzZWFyY2hWYWx1ZSA9IGB7Q09NTUFORH4ke3BhdGh9fWA7XG4gICAgICBjb25zdCByZXBsYWNlVmFsdWUgPSB0aGlzLmdldFZhbHVlKHBhdGgsIGNvbnRleHQpO1xuICAgICAgZXhwcmVzc2lvbiA9IGV4cHJlc3Npb24ucmVwbGFjZShzZWFyY2hWYWx1ZSwgcmVwbGFjZVZhbHVlKTtcbiAgICB9KTtcblxuICAgIHJldHVybiAgZXhwcmVzc2lvbjtcbiAgfVxuXG4gIC8qKlxuICAgKiDmj5Dlj5ZTZXNzaW9u5Y+Y6YeP5ZCNXG4gICAqIOWPmOmHj+agvOW8j++8mnt9XG4gICAqL1xuICBwcml2YXRlIGV4dHJhY3RQYXRocyhleHByZXNzaW9uOiBzdHJpbmcpOiBzdHJpbmdbXSB7XG4gICAgY29uc3QgcGF0aHM6IHN0cmluZ1tdICA9IFtdO1xuXG4gICAgLy8g5p+l5om+5omA5pyJ55qEdWlTdGF0ZeWPmOmHj+Wtl+espuS4slxuICAgIGNvbnN0IFVJX1NUQVRFX1BBVFRFUk5fRyA9IC9cXHtDT01NQU5EfihcXFMrPylcXH0vZztcbiAgICBjb25zdCB1aVN0YXRlVmFyaWFibGVzID0gZXhwcmVzc2lvbi5tYXRjaChVSV9TVEFURV9QQVRURVJOX0cpO1xuICAgIGlmICh1aVN0YXRlVmFyaWFibGVzID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuXG4gICAgLy8g5o+Q5Y+W5ZCO6L6555qE6Lev5b6EXG4gICAgY29uc3QgVUlfU1RBVEVfUEFUVEVSTiA9IC9cXHtDT01NQU5EfihcXFMrPylcXH0vO1xuICAgIHVpU3RhdGVWYXJpYWJsZXMuZm9yRWFjaCggc2Vzc2lvblZhcmlhYmxlID0+ICB7XG4gICAgICBjb25zdCBwYXRoTWF0Y2hlcyA9IHNlc3Npb25WYXJpYWJsZS5tYXRjaChVSV9TVEFURV9QQVRURVJOKTtcbiAgICAgIGlmIChwYXRoTWF0Y2hlcyAhPSBudWxsICYmIHBhdGhNYXRjaGVzLmxlbmd0aCA9PT0gMikge1xuICAgICAgICBwYXRocy5wdXNoKHBhdGhNYXRjaGVzWzFdKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBwYXRocztcbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5ZVSVN0YXRlXG4gICAqL1xuICBwcml2YXRlIGdldFZhbHVlKHBhdGg6IHN0cmluZywgY29udGV4dDogYW55KSB7XG4gICAgaWYgKGNvbnRleHQgaW5zdGFuY2VvZiBDb21tYW5kQ29udGV4dCA9PT0gZmFsc2UpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcign5b2T5YmN5LiK5LiL5paH5LiN5pSv5oyBQ09NTUFOROWPmOmHj++8jOivt+ajgOafpe+8gScpO1xuICAgIH1cbiAgICBjb25zdCBwYXJ0cyA9IHBhdGguc3BsaXQoJy8nKS5maWx0ZXIoKHBhcnQ6IHN0cmluZykgPT4ge1xuICAgICAgcmV0dXJuIHBhcnQgIT09ICcnO1xuICAgIH0pO1xuXG4gICAgY29uc3QgW3R5cGUsIG5hbWVdID0gcGFydHM7XG4gICAgaWYgKHR5cGUgPT09ICdwYXJhbXMnKSB7XG4gICAgICByZXR1cm4gY29udGV4dC5jb21tYW5kLnBhcmFtc1tuYW1lXTtcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICdyZXN1bHRzJykge1xuICAgICAgcmV0dXJuIGNvbnRleHQucmVzdWx0c1tuYW1lXTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IHsgQ29tbWFuZFZhcmlhYmxlUGFyc2VyIH07XG4iXX0=