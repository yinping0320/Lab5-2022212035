import * as tslib_1 from "tslib";
import { CommentDependencyResolver } from "./comment_dependency_resolver";
import { ResolverRegistry } from "./resolver_registry";
var ResolveService = /** @class */ (function () {
    function ResolveService(viewModelContext) {
        this.viewModelContext = viewModelContext;
        this.resolverRegistry = this.viewModelContext.injector.get(ResolverRegistry);
    }
    ResolveService.prototype.resolve = function (expression) {
        var deps = [];
        if (!this.resolverRegistry || !this.resolverRegistry.resolvers || this.resolverRegistry.resolvers.length < 1) {
            return;
        }
        // 优先使用用户自定义的依赖
        var commentDependencyResolver = this.resolverRegistry.resolvers.find(function (resolver) { return resolver instanceof CommentDependencyResolver; });
        if (commentDependencyResolver) {
            var commentDependencies = commentDependencyResolver.resolve(expression);
            if (commentDependencies && Array.isArray(commentDependencies) && commentDependencies.length > 0) {
                deps.push.apply(deps, tslib_1.__spread(commentDependencies));
            }
        }
        // 如果用户已经自定义了依赖，则不再计算
        if (deps && deps.length > 0) {
            return;
        }
        this.resolverRegistry.resolvers.forEach(function (resolver) {
            // 再解析一次也可以，返回的依然是空数组
            if (resolver instanceof CommentDependencyResolver) {
                return;
            }
            var dependency = resolver.resolve(expression);
            if (dependency && dependency.length > 0) {
                deps.push.apply(deps, tslib_1.__spread(dependency));
            }
        });
        // 去重
        return tslib_1.__spread(new Set(deps));
    };
    return ResolveService;
}());
export { ResolveService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb2x2ZV9zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9tb2JpbGUtZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL2V4cHJlc3Npb24vcmVzb2x2ZXIvcmVzb2x2ZV9zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMxRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUl2RDtJQUlFLHdCQUFvQixnQkFBa0M7UUFBbEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUNwRCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQW1CLGdCQUFnQixDQUFDLENBQUM7SUFDakcsQ0FBQztJQUVNLGdDQUFPLEdBQWQsVUFBZSxVQUFrQjtRQUMvQixJQUFNLElBQUksR0FBYSxFQUFFLENBQUM7UUFDMUIsSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzVHLE9BQU87U0FDUjtRQUNELGVBQWU7UUFDZixJQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFVBQUMsUUFBbUIsSUFBSyxPQUFBLFFBQVEsWUFBWSx5QkFBeUIsRUFBN0MsQ0FBNkMsQ0FBQyxDQUFDO1FBQy9JLElBQUkseUJBQXlCLEVBQUU7WUFDN0IsSUFBTSxtQkFBbUIsR0FBRyx5QkFBeUIsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDMUUsSUFBSSxtQkFBbUIsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLElBQUksbUJBQW1CLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtnQkFDL0YsSUFBSSxDQUFDLElBQUksT0FBVCxJQUFJLG1CQUFTLG1CQUFtQixHQUFFO2FBQ25DO1NBQ0Y7UUFDRCxxQkFBcUI7UUFDckIsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDM0IsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsVUFBQyxRQUFtQjtZQUMxRCxxQkFBcUI7WUFDckIsSUFBSSxRQUFRLFlBQVkseUJBQXlCLEVBQUU7Z0JBQ2pELE9BQU87YUFDUjtZQUNELElBQU0sVUFBVSxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDaEQsSUFBSSxVQUFVLElBQUksVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7Z0JBQ3ZDLElBQUksQ0FBQyxJQUFJLE9BQVQsSUFBSSxtQkFBUyxVQUFVLEdBQUU7YUFDMUI7UUFDSCxDQUFDLENBQUMsQ0FBQztRQUNILEtBQUs7UUFDTCx3QkFBVyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRTtJQUM1QixDQUFDO0lBRUgscUJBQUM7QUFBRCxDQUFDLEFBdkNELElBdUNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbWVudERlcGVuZGVuY3lSZXNvbHZlciB9IGZyb20gXCIuL2NvbW1lbnRfZGVwZW5kZW5jeV9yZXNvbHZlclwiO1xuaW1wb3J0IHsgUmVzb2x2ZXJSZWdpc3RyeSB9IGZyb20gXCIuL3Jlc29sdmVyX3JlZ2lzdHJ5XCI7XG5pbXBvcnQgeyBJUmVzb2x2ZXIgfSBmcm9tIFwiLi90eXBlc1wiO1xuaW1wb3J0IHsgVmlld01vZGVsQ29udGV4dCB9IGZyb20gJy4uLy4uL3ZpZXctbW9kZWwvaW5kZXgnO1xuXG5leHBvcnQgY2xhc3MgUmVzb2x2ZVNlcnZpY2Uge1xuXG4gIHByaXZhdGUgcmVzb2x2ZXJSZWdpc3RyeTogUmVzb2x2ZXJSZWdpc3RyeTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHZpZXdNb2RlbENvbnRleHQ6IFZpZXdNb2RlbENvbnRleHQpIHtcbiAgICB0aGlzLnJlc29sdmVyUmVnaXN0cnkgPSB0aGlzLnZpZXdNb2RlbENvbnRleHQuaW5qZWN0b3IuZ2V0PFJlc29sdmVyUmVnaXN0cnk+KFJlc29sdmVyUmVnaXN0cnkpO1xuICB9XG5cbiAgcHVibGljIHJlc29sdmUoZXhwcmVzc2lvbjogc3RyaW5nKSB7XG4gICAgY29uc3QgZGVwczogc3RyaW5nW10gPSBbXTtcbiAgICBpZiAoIXRoaXMucmVzb2x2ZXJSZWdpc3RyeSB8fCAhdGhpcy5yZXNvbHZlclJlZ2lzdHJ5LnJlc29sdmVycyB8fCB0aGlzLnJlc29sdmVyUmVnaXN0cnkucmVzb2x2ZXJzLmxlbmd0aCA8IDEpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8g5LyY5YWI5L2/55So55So5oi36Ieq5a6a5LmJ55qE5L6d6LWWXG4gICAgY29uc3QgY29tbWVudERlcGVuZGVuY3lSZXNvbHZlciA9IHRoaXMucmVzb2x2ZXJSZWdpc3RyeS5yZXNvbHZlcnMuZmluZCgocmVzb2x2ZXI6IElSZXNvbHZlcikgPT4gcmVzb2x2ZXIgaW5zdGFuY2VvZiBDb21tZW50RGVwZW5kZW5jeVJlc29sdmVyKTtcbiAgICBpZiAoY29tbWVudERlcGVuZGVuY3lSZXNvbHZlcikge1xuICAgICAgY29uc3QgY29tbWVudERlcGVuZGVuY2llcyA9IGNvbW1lbnREZXBlbmRlbmN5UmVzb2x2ZXIucmVzb2x2ZShleHByZXNzaW9uKTtcbiAgICAgIGlmIChjb21tZW50RGVwZW5kZW5jaWVzICYmIEFycmF5LmlzQXJyYXkoY29tbWVudERlcGVuZGVuY2llcykgJiYgY29tbWVudERlcGVuZGVuY2llcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGRlcHMucHVzaCguLi5jb21tZW50RGVwZW5kZW5jaWVzKTtcbiAgICAgIH1cbiAgICB9XG4gICAgLy8g5aaC5p6c55So5oi35bey57uP6Ieq5a6a5LmJ5LqG5L6d6LWW77yM5YiZ5LiN5YaN6K6h566XXG4gICAgaWYgKGRlcHMgJiYgZGVwcy5sZW5ndGggPiAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMucmVzb2x2ZXJSZWdpc3RyeS5yZXNvbHZlcnMuZm9yRWFjaCgocmVzb2x2ZXI6IElSZXNvbHZlcikgPT4ge1xuICAgICAgLy8g5YaN6Kej5p6Q5LiA5qyh5Lmf5Y+v5Lul77yM6L+U5Zue55qE5L6d54S25piv56m65pWw57uEXG4gICAgICBpZiAocmVzb2x2ZXIgaW5zdGFuY2VvZiBDb21tZW50RGVwZW5kZW5jeVJlc29sdmVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGRlcGVuZGVuY3kgPSByZXNvbHZlci5yZXNvbHZlKGV4cHJlc3Npb24pO1xuICAgICAgaWYgKGRlcGVuZGVuY3kgJiYgZGVwZW5kZW5jeS5sZW5ndGggPiAwKSB7XG4gICAgICAgIGRlcHMucHVzaCguLi5kZXBlbmRlbmN5KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICAvLyDljrvph41cbiAgICByZXR1cm4gWy4uLm5ldyBTZXQoZGVwcyldO1xuICB9XG5cbn0iXX0=