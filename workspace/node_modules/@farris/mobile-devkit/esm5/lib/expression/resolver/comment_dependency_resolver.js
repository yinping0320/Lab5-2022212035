import * as tslib_1 from "tslib";
/**
 * 用户自定义参数解析器
 */
var CommentDependencyResolver = /** @class */ (function () {
    function CommentDependencyResolver() {
    }
    CommentDependencyResolver.prototype.resolve = function (expr) {
        var dependencies = [];
        if (!expr || expr.length < 1) {
            return dependencies;
        }
        var defineRegex = /\/\*\*\s*__define__\((.*)\)\s*\*\//;
        var defineMatchArray = expr.match(defineRegex);
        if (defineMatchArray && defineMatchArray.length === 2) {
            var defineString = defineMatchArray[1].trim();
            var defineObject = null;
            try {
                defineObject = JSON.parse(defineString);
            }
            catch (e) {
                console.warn("\u81EA\u5B9A\u4E49\u4F9D\u8D56\u89E3\u6790\u5931\u8D25\uFF1A" + defineString);
            }
            if (defineObject && defineObject.hasOwnProperty('deps') && Array.isArray(defineObject['deps'])) {
                dependencies.push.apply(dependencies, tslib_1.__spread(defineObject['deps']));
            }
        }
        return dependencies;
    };
    return CommentDependencyResolver;
}());
export { CommentDependencyResolver };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWVudF9kZXBlbmRlbmN5X3Jlc29sdmVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9tb2JpbGUtZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL2V4cHJlc3Npb24vcmVzb2x2ZXIvY29tbWVudF9kZXBlbmRlbmN5X3Jlc29sdmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFFQTs7R0FFRztBQUNIO0lBQUE7SUFzQkEsQ0FBQztJQXBCUSwyQ0FBTyxHQUFkLFVBQWUsSUFBWTtRQUN6QixJQUFNLFlBQVksR0FBRyxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUM1QixPQUFPLFlBQVksQ0FBQztTQUNyQjtRQUNELElBQU0sV0FBVyxHQUFHLG9DQUFvQyxDQUFDO1FBQ3pELElBQU0sZ0JBQWdCLEdBQXFCLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDbkUsSUFBSSxnQkFBZ0IsSUFBSSxnQkFBZ0IsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ3JELElBQU0sWUFBWSxHQUFXLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ3hELElBQUksWUFBWSxHQUFHLElBQUksQ0FBQztZQUN4QixJQUFJO2dCQUNGLFlBQVksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO2FBQ3pDO1lBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxpRUFBYSxZQUFjLENBQUMsQ0FBQzthQUFFO1lBQzFELElBQUksWUFBWSxJQUFJLFlBQVksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRTtnQkFDOUYsWUFBWSxDQUFDLElBQUksT0FBakIsWUFBWSxtQkFBUyxZQUFZLENBQUMsTUFBTSxDQUFDLEdBQUU7YUFDNUM7U0FDRjtRQUNELE9BQU8sWUFBWSxDQUFDO0lBQ3RCLENBQUM7SUFFSCxnQ0FBQztBQUFELENBQUMsQUF0QkQsSUFzQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJUmVzb2x2ZXIgfSBmcm9tIFwiLi90eXBlc1wiO1xuXG4vKipcbiAqIOeUqOaIt+iHquWumuS5ieWPguaVsOino+aekOWZqFxuICovXG5leHBvcnQgY2xhc3MgQ29tbWVudERlcGVuZGVuY3lSZXNvbHZlciBpbXBsZW1lbnRzIElSZXNvbHZlciB7XG5cbiAgcHVibGljIHJlc29sdmUoZXhwcjogc3RyaW5nKTogc3RyaW5nW10ge1xuICAgIGNvbnN0IGRlcGVuZGVuY2llcyA9IFtdO1xuICAgIGlmICghZXhwciB8fCBleHByLmxlbmd0aCA8IDEpIHtcbiAgICAgIHJldHVybiBkZXBlbmRlbmNpZXM7XG4gICAgfVxuICAgIGNvbnN0IGRlZmluZVJlZ2V4ID0gL1xcL1xcKlxcKlxccypfX2RlZmluZV9fXFwoKC4qKVxcKVxccypcXCpcXC8vO1xuICAgIGNvbnN0IGRlZmluZU1hdGNoQXJyYXk6IFJlZ0V4cE1hdGNoQXJyYXkgPSBleHByLm1hdGNoKGRlZmluZVJlZ2V4KTtcbiAgICBpZiAoZGVmaW5lTWF0Y2hBcnJheSAmJiBkZWZpbmVNYXRjaEFycmF5Lmxlbmd0aCA9PT0gMikge1xuICAgICAgY29uc3QgZGVmaW5lU3RyaW5nOiBzdHJpbmcgPSBkZWZpbmVNYXRjaEFycmF5WzFdLnRyaW0oKTtcbiAgICAgIGxldCBkZWZpbmVPYmplY3QgPSBudWxsO1xuICAgICAgdHJ5IHtcbiAgICAgICAgZGVmaW5lT2JqZWN0ID0gSlNPTi5wYXJzZShkZWZpbmVTdHJpbmcpO1xuICAgICAgfSBjYXRjaCAoZSkgeyBjb25zb2xlLndhcm4oYOiHquWumuS5ieS+nei1luino+aekOWksei0pe+8miR7ZGVmaW5lU3RyaW5nfWApOyB9XG4gICAgICBpZiAoZGVmaW5lT2JqZWN0ICYmIGRlZmluZU9iamVjdC5oYXNPd25Qcm9wZXJ0eSgnZGVwcycpICYmIEFycmF5LmlzQXJyYXkoZGVmaW5lT2JqZWN0WydkZXBzJ10pKSB7XG4gICAgICAgIGRlcGVuZGVuY2llcy5wdXNoKC4uLmRlZmluZU9iamVjdFsnZGVwcyddKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGRlcGVuZGVuY2llcztcbiAgfVxuXG59Il19