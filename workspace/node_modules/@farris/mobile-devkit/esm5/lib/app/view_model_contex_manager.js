/**
 * ViewModelContext管理类
 */
var ViewModelContextManager = /** @class */ (function () {
    /**
     * 构造函数
     */
    function ViewModelContextManager() {
        this.contextMap = new Map();
        this.contextSet = new Set();
    }
    /**
     * 注册Context
     */
    ViewModelContextManager.prototype.regContext = function (viewModelContext) {
        var id = viewModelContext.id;
        if (this.contextMap.has(id) === true) {
            // throw Error(`id为${id}的ViewModelContext已经存在`);
            // 临时处理，方式报错。
            this.unregContext(viewModelContext);
        }
        this.contextMap.set(id, viewModelContext);
        this.contextSet.add(viewModelContext);
    };
    /**
     * 取消注册
     */
    ViewModelContextManager.prototype.unregContext = function (context) {
        var id = context.id;
        this.contextMap.delete(id);
        this.contextSet.delete(context);
    };
    /**
     * 获取ContextMap
     */
    ViewModelContextManager.prototype.getContextMap = function () {
        return this.contextMap;
    };
    /**
     * 获取全部Context
     */
    ViewModelContextManager.prototype.getContexts = function () {
        return Array.from(this.contextSet);
    };
    /**
     * 根据命名控件获取上下文集合
     */
    ViewModelContextManager.prototype.getContextsByNamespace = function (namespace) {
        return this.getContexts();
    };
    /**
     * 根据id获取Context
     */
    ViewModelContextManager.prototype.getContextById = function (id) {
        var targetContext = this.contextMap.get(id);
        return targetContext;
    };
    /**
     * 获取根Context
     */
    ViewModelContextManager.prototype.getRootContext = function () {
        var contexts = this.getContexts();
        var rootContext = contexts.find(function (context) {
            return context.parent === null;
        });
        return rootContext;
    };
    /**
     * 获取传入视图模型id的root及root的下一代集合数组
     */
    ViewModelContextManager.prototype.getRootContextAndPosterityById = function (viewModelId) {
        var targetContext = this.getContextById(viewModelId);
        var contexts = this.getContexts();
        var contextsGroup = [];
        // 1.找到ROOT
        var RootId = this.getContextsGroupRoot(targetContext);
        // 2.可直接遍历拿到所有直系后代 (目前只有两层结构直接获取下一代)
        contexts.map(function (context) {
            if (context.parent && context.parent.id === RootId) {
                contextsGroup.push(context);
            }
        });
        contextsGroup.push(this.getContextById(RootId));
        return contextsGroup;
    };
    ViewModelContextManager.prototype.getContextsGroupRoot = function (context) {
        if (context.parent) {
            return this.getContextsGroupRoot(context.parent);
        }
        else {
            return context.id;
        }
    };
    return ViewModelContextManager;
}());
export { ViewModelContextManager };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlld19tb2RlbF9jb250ZXhfbWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvbW9iaWxlLWRldmtpdC8iLCJzb3VyY2VzIjpbImxpYi9hcHAvdmlld19tb2RlbF9jb250ZXhfbWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTs7R0FFRztBQUNIO0lBYUU7O09BRUc7SUFDSDtRQUNFLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxHQUFHLEVBQTRCLENBQUM7UUFDdEQsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLEdBQUcsRUFBb0IsQ0FBQztJQUNoRCxDQUFDO0lBRUQ7O09BRUc7SUFDSSw0Q0FBVSxHQUFqQixVQUFrQixnQkFBa0M7UUFDbEQsSUFBTSxFQUFFLEdBQUcsZ0JBQWdCLENBQUMsRUFBRSxDQUFDO1FBQy9CLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEtBQUssSUFBSSxFQUFFO1lBQ3BDLGdEQUFnRDtZQUNoRCxhQUFhO1lBQ2IsSUFBSSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1NBQ3JDO1FBRUQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQ7O09BRUc7SUFDSSw4Q0FBWSxHQUFuQixVQUFvQixPQUF5QjtRQUMzQyxJQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzNCLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRDs7T0FFRztJQUNJLCtDQUFhLEdBQXBCO1FBQ0UsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3pCLENBQUM7SUFFRDs7T0FFRztJQUNJLDZDQUFXLEdBQWxCO1FBQ0UsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRUQ7O09BRUc7SUFDSSx3REFBc0IsR0FBN0IsVUFBOEIsU0FBaUI7UUFDN0MsT0FBTyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDNUIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksZ0RBQWMsR0FBckIsVUFBc0IsRUFBVTtRQUM5QixJQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUM5QyxPQUFPLGFBQWEsQ0FBQztJQUN2QixDQUFDO0lBRUQ7O09BRUc7SUFDSSxnREFBYyxHQUFyQjtRQUNFLElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNwQyxJQUFNLFdBQVcsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLFVBQUMsT0FBeUI7WUFDMUQsT0FBTyxPQUFPLENBQUMsTUFBTSxLQUFLLElBQUksQ0FBQztRQUNqQyxDQUFDLENBQUMsQ0FBQztRQUNILE9BQU8sV0FBVyxDQUFDO0lBQ3JCLENBQUM7SUFFRDs7T0FFRztJQUNJLGdFQUE4QixHQUFyQyxVQUFzQyxXQUFXO1FBQy9DLElBQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDdkQsSUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3BDLElBQUksYUFBYSxHQUFHLEVBQUUsQ0FBQztRQUN2QixXQUFXO1FBQ1gsSUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ3hELG9DQUFvQztRQUNwQyxRQUFRLENBQUMsR0FBRyxDQUFDLFVBQUMsT0FBeUI7WUFDckMsSUFBSSxPQUFPLENBQUMsTUFBTSxJQUFJLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxLQUFLLE1BQU0sRUFBRTtnQkFDbEQsYUFBYSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQzthQUM3QjtRQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0gsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDaEQsT0FBTyxhQUFhLENBQUM7SUFDdkIsQ0FBQztJQUVPLHNEQUFvQixHQUE1QixVQUE2QixPQUF5QjtRQUNwRCxJQUFJLE9BQU8sQ0FBQyxNQUFNLEVBQUU7WUFDbEIsT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ2xEO2FBQU07WUFDTCxPQUFPLE9BQU8sQ0FBQyxFQUFFLENBQUE7U0FDbEI7SUFDSCxDQUFDO0lBQ0gsOEJBQUM7QUFBRCxDQUFDLEFBL0dELElBK0dDO0FBRUQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWaWV3TW9kZWxDb250ZXh0IH0gZnJvbSAnLi4vdmlldy1tb2RlbC9pbmRleCc7XG5cbi8qKlxuICogVmlld01vZGVsQ29udGV4dOeuoeeQhuexu1xuICovXG5jbGFzcyBWaWV3TW9kZWxDb250ZXh0TWFuYWdlciB7XG5cbiAgLyoqXG4gICAqIENvbnRleHTlrZflhbhcbiAgICovXG4gIHByaXZhdGUgY29udGV4dE1hcDogTWFwPHN0cmluZywgVmlld01vZGVsQ29udGV4dD47XG5cbiAgLyoqXG4gICAqIENvbnRleHTpm4blkIhcbiAgICovXG4gIHByaXZhdGUgY29udGV4dFNldDogU2V0PFZpZXdNb2RlbENvbnRleHQ+O1xuXG5cbiAgLyoqXG4gICAqIOaehOmAoOWHveaVsFxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5jb250ZXh0TWFwID0gbmV3IE1hcDxzdHJpbmcsIFZpZXdNb2RlbENvbnRleHQ+KCk7XG4gICAgdGhpcy5jb250ZXh0U2V0ID0gbmV3IFNldDxWaWV3TW9kZWxDb250ZXh0PigpO1xuICB9XG5cbiAgLyoqXG4gICAqIOazqOWGjENvbnRleHRcbiAgICovXG4gIHB1YmxpYyByZWdDb250ZXh0KHZpZXdNb2RlbENvbnRleHQ6IFZpZXdNb2RlbENvbnRleHQpOiB2b2lkIHtcbiAgICBjb25zdCBpZCA9IHZpZXdNb2RlbENvbnRleHQuaWQ7XG4gICAgaWYgKHRoaXMuY29udGV4dE1hcC5oYXMoaWQpID09PSB0cnVlKSB7XG4gICAgICAvLyB0aHJvdyBFcnJvcihgaWTkuLoke2lkfeeahFZpZXdNb2RlbENvbnRleHTlt7Lnu4/lrZjlnKhgKTtcbiAgICAgIC8vIOS4tOaXtuWkhOeQhu+8jOaWueW8j+aKpemUmeOAglxuICAgICAgdGhpcy51bnJlZ0NvbnRleHQodmlld01vZGVsQ29udGV4dCk7XG4gICAgfVxuXG4gICAgdGhpcy5jb250ZXh0TWFwLnNldChpZCwgdmlld01vZGVsQ29udGV4dCk7XG4gICAgdGhpcy5jb250ZXh0U2V0LmFkZCh2aWV3TW9kZWxDb250ZXh0KTtcbiAgfVxuXG4gIC8qKlxuICAgKiDlj5bmtojms6jlhoxcbiAgICovXG4gIHB1YmxpYyB1bnJlZ0NvbnRleHQoY29udGV4dDogVmlld01vZGVsQ29udGV4dCk6IHZvaWQge1xuICAgIGNvbnN0IGlkID0gY29udGV4dC5pZDtcbiAgICB0aGlzLmNvbnRleHRNYXAuZGVsZXRlKGlkKTtcbiAgICB0aGlzLmNvbnRleHRTZXQuZGVsZXRlKGNvbnRleHQpO1xuICB9XG5cbiAgLyoqXG4gICAqIOiOt+WPlkNvbnRleHRNYXBcbiAgICovXG4gIHB1YmxpYyBnZXRDb250ZXh0TWFwKCkge1xuICAgIHJldHVybiB0aGlzLmNvbnRleHRNYXA7XG4gIH1cblxuICAvKipcbiAgICog6I635Y+W5YWo6YOoQ29udGV4dFxuICAgKi9cbiAgcHVibGljIGdldENvbnRleHRzKCk6IFZpZXdNb2RlbENvbnRleHRbXSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5jb250ZXh0U2V0KTtcbiAgfVxuXG4gIC8qKlxuICAgKiDmoLnmja7lkb3lkI3mjqfku7bojrflj5bkuIrkuIvmlofpm4blkIhcbiAgICovXG4gIHB1YmxpYyBnZXRDb250ZXh0c0J5TmFtZXNwYWNlKG5hbWVzcGFjZTogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0Q29udGV4dHMoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDmoLnmja5pZOiOt+WPlkNvbnRleHRcbiAgICovXG4gIHB1YmxpYyBnZXRDb250ZXh0QnlJZChpZDogc3RyaW5nKTogVmlld01vZGVsQ29udGV4dCB7XG4gICAgY29uc3QgdGFyZ2V0Q29udGV4dCA9IHRoaXMuY29udGV4dE1hcC5nZXQoaWQpO1xuICAgIHJldHVybiB0YXJnZXRDb250ZXh0O1xuICB9XG5cbiAgLyoqXG4gICAqIOiOt+WPluaguUNvbnRleHRcbiAgICovXG4gIHB1YmxpYyBnZXRSb290Q29udGV4dCgpOiBWaWV3TW9kZWxDb250ZXh0IHtcbiAgICBjb25zdCBjb250ZXh0cyA9IHRoaXMuZ2V0Q29udGV4dHMoKTtcbiAgICBjb25zdCByb290Q29udGV4dCA9IGNvbnRleHRzLmZpbmQoKGNvbnRleHQ6IFZpZXdNb2RlbENvbnRleHQpID0+IHtcbiAgICAgIHJldHVybiBjb250ZXh0LnBhcmVudCA9PT0gbnVsbDtcbiAgICB9KTtcbiAgICByZXR1cm4gcm9vdENvbnRleHQ7XG4gIH1cblxuICAvKipcbiAgICog6I635Y+W5Lyg5YWl6KeG5Zu+5qih5Z6LaWTnmoRyb2905Y+Kcm9vdOeahOS4i+S4gOS7o+mbhuWQiOaVsOe7hFxuICAgKi9cbiAgcHVibGljIGdldFJvb3RDb250ZXh0QW5kUG9zdGVyaXR5QnlJZCh2aWV3TW9kZWxJZCk6IFZpZXdNb2RlbENvbnRleHRbXSB7XG4gICAgY29uc3QgdGFyZ2V0Q29udGV4dCA9IHRoaXMuZ2V0Q29udGV4dEJ5SWQodmlld01vZGVsSWQpO1xuICAgIGNvbnN0IGNvbnRleHRzID0gdGhpcy5nZXRDb250ZXh0cygpO1xuICAgIGxldCBjb250ZXh0c0dyb3VwID0gW107XG4gICAgLy8gMS7mib7liLBST09UXG4gICAgY29uc3QgUm9vdElkID0gdGhpcy5nZXRDb250ZXh0c0dyb3VwUm9vdCh0YXJnZXRDb250ZXh0KTtcbiAgICAvLyAyLuWPr+ebtOaOpemBjeWOhuaLv+WIsOaJgOacieebtOezu+WQjuS7oyAo55uu5YmN5Y+q5pyJ5Lik5bGC57uT5p6E55u05o6l6I635Y+W5LiL5LiA5LujKVxuICAgIGNvbnRleHRzLm1hcCgoY29udGV4dDogVmlld01vZGVsQ29udGV4dCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQucGFyZW50ICYmIGNvbnRleHQucGFyZW50LmlkID09PSBSb290SWQpIHtcbiAgICAgICAgY29udGV4dHNHcm91cC5wdXNoKGNvbnRleHQpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGNvbnRleHRzR3JvdXAucHVzaCh0aGlzLmdldENvbnRleHRCeUlkKFJvb3RJZCkpO1xuICAgIHJldHVybiBjb250ZXh0c0dyb3VwO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRDb250ZXh0c0dyb3VwUm9vdChjb250ZXh0OiBWaWV3TW9kZWxDb250ZXh0KSB7XG4gICAgaWYgKGNvbnRleHQucGFyZW50KSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRDb250ZXh0c0dyb3VwUm9vdChjb250ZXh0LnBhcmVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBjb250ZXh0LmlkXG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCB7IFZpZXdNb2RlbENvbnRleHRNYW5hZ2VyIH07XG4iXX0=