import { PARENT_CLASS, FieldMetadataUtil } from '../entity/index';
import { ModifyType } from '../changeset/index';
import { ChangeType } from './changes';
import { BindingPropertyType } from './binding_property';
import { BindingObjectFactory } from './binding_object_factory';
/**
 * 实体操作工具类
 */
var EntityUtil = /** @class */ (function () {
    function EntityUtil() {
    }
    /**
     * 将entity的数据加载到bindingObject中，并保持两者同步。
     * @param entity        实体对象
     * @param bindingObject 绑定对象
     */
    EntityUtil.loadEntity = function (entity, bindingObject) {
        var _this = this;
        // 遍历bindingObject的properties进行赋值
        bindingObject.properties.forEach(function (property) {
            var propertyName = property.name;
            if (property.type === BindingPropertyType.List) {
                _this.loadEntityList(entity[propertyName] || entity[PARENT_CLASS], bindingObject[propertyName]);
            }
            else if (property.type === BindingPropertyType.Object) {
                if (entity && entity[propertyName]) {
                    _this.loadEntity(entity[propertyName], bindingObject[propertyName]);
                }
            }
            else if (property.type === BindingPropertyType.Dynamic) {
                if (entity && entity[propertyName]) {
                    var dynamicObject = BindingObjectFactory.createDynamicBindingObject(entity[propertyName].data);
                    BindingObjectFactory.attachDynamicObjectProperty(bindingObject, propertyName, dynamicObject);
                    _this.loadEntity(entity[propertyName], bindingObject[propertyName]);
                }
            }
            else {
                bindingObject.setValue(propertyName, entity[propertyName], false, false);
            }
        });
        this.setUpEntityPipeline(entity, bindingObject);
    };
    /**
     * 建立entity和bindingObject之间的关联
     * @param entity        实体对象
     * @param bindingObject 绑定对象
     */
    EntityUtil.setUpEntityPipeline = function (entity, bindingObject) {
        // 监听entity变更
        entity.onValueChanged.subscribe(function (modification) {
            if (modification.type !== ModifyType.ValueChange || modification.path.length === 0) {
                return;
            }
            var propertyName = modification.path[modification.path.length - 1];
            var primaryKeyPath = modification.path[modification.path.length - 2];
            // 验证主键是否匹配
            // 存在主键并且主键不是id时才检查（值对象、关联对象不检查）
            if (bindingObject.primaryKey && bindingObject.primaryKey === 'id') {
                var primaryKey = bindingObject.primaryKey;
                var primaryKeyValue = bindingObject.getValue(primaryKey);
                if (primaryKeyPath !== primaryKey + ":" + primaryKeyValue) {
                    return;
                }
            }
            // 值没有发生变化，不再设置
            // TODO: 通过bindingObject修改entity属性值时，entity总会触发一个变更回来，如果不截获这个重复的变更，会导致重复或死循环
            if (bindingObject.getValue(propertyName) === modification.value) {
                return;
            }
            bindingObject.setValue(propertyName, modification.value, true, false, modification.errors);
        });
        // 监听bindingObject变更
        bindingObject.viewChanges.subscribe(function (viewChange) {
            var value = viewChange.value;
            var propertyName = viewChange.path[0];
            var pathPrefix = '';
            var pathData = entity.getPaths();
            var paths = pathData.path;
            var id = bindingObject['id'];
            if (pathData.isUdt) {
                // grid中udt没有id，从父级中取出id，以便存放验证信息
                var getParentId = function (target) {
                    var parentId = '';
                    var findId = function (item) {
                        if (item && item && item['id']) {
                            parentId = item['id'];
                            return;
                        }
                        else if (item['parent']) {
                            findId(item['parent']);
                        }
                    };
                    findId(target);
                    return parentId;
                };
                id = getParentId(bindingObject);
                if (pathData.isGrid) {
                    // grid 将从表主字段去除
                    paths.shift();
                }
                if (paths.length) {
                    pathPrefix = paths.join('.') + '.';
                }
            }
            // 不是主键值字段时，要先检查主键是否存在，并且主键是否相等（防止后代变更冒泡上来）
            // 非主键属性变更时，要先检查主键是否匹配（如果主键也修改了，要求先修改主键再修改其他值）
            if (bindingObject.primaryKey) {
                var primaryKey = bindingObject.primaryKey;
                if (propertyName !== primaryKey) {
                    if (!entity[primaryKey] || entity[primaryKey] !== bindingObject[primaryKey]) {
                        return;
                    }
                }
            }
            // 如果BindingObject上的属性值和Entity上对应属性值一样，则不再设置
            if (entity[propertyName] === value) {
                return;
            }
            // 调用表单验证,通过后调用实体验证
            // bingdingObject变化后，先调用实体上的验证，通过后再设置实体的变动
            entity[propertyName] = value;
        });
    };
    /**
     * 将entityList中的Entity对象转换为BindingObject对象，加载到bindingList中，并保持entityList和bindingList同步。
     * @param entityList  实体列表
     * @param bindingList 绑定列表
     */
    EntityUtil.loadEntityList = function (entityList, bindingList) {
        this.loadEntities(entityList.items, bindingList);
        this.setUpEntityListPipeline(entityList, bindingList);
    };
    /**
     * 建立entityList和bindingList之间的关联
     * @param entityList  实体列表
     * @param bindingList 绑定列表
     */
    EntityUtil.setUpEntityListPipeline = function (entityList, bindingList) {
        var _this = this;
        entityList.onListChanged.subscribe(function (modification) {
            switch (modification.type) {
                // 添加实体
                case ModifyType.Add:
                case ModifyType.Clone:
                    {
                        var entitiesToAdd = modification.value;
                        if (entitiesToAdd.length === 0) {
                            return;
                        }
                        // 检查父id是否一致，冒泡导致的变更不处理
                        var paths = modification.path;
                        var parentPath = paths[paths.length - 2];
                        var parentId = bindingList.parent.primaryKeyValue;
                        if (parentPath.indexOf(parentId) === -1) {
                            return;
                        }
                        _this.appendEntities(modification.value, bindingList, modification.type === ModifyType.Clone);
                    }
                    break;
                case ModifyType.Insert:
                    {
                        // 检查父id是否一致，冒泡导致的变更不处理
                        var paths = modification.path;
                        var parentPath = paths[paths.length - 2];
                        var parentId = bindingList.parent.primaryKeyValue;
                        var position = modification.position;
                        if (parentPath.indexOf(parentId) === -1) {
                            return;
                        }
                        _this.insertEntity(modification.value[0], bindingList, position);
                    }
                    break;
                // 删除实体
                case ModifyType.Remove:
                    {
                        // 删除实体（value格式待商榷，目前value的格式为 { primaryKey: primaryValue}）
                        var id = modification.value[bindingList.primaryKey];
                        bindingList.removeByIds([id]);
                        // this.removeEntities(<Entity[]>modification.value, bindingList);
                    }
                    break;
                // 加载实体
                case ModifyType.Load:
                    var entities = modification.value;
                    _this.loadEntities(entities, bindingList);
                    break;
                default:
                    break;
            }
        });
    };
    /**
     * 监听repository变化，保持repository和bindingList同步。
     * @param repository  实体仓库
     * @param bindingList 绑定列表
     */
    EntityUtil.loadRepository = function (repository, bindingList) {
        var _this = this;
        // 初次加载
        var entities = Array.from(repository.entityCollection.toArray());
        this.loadEntities(entities, bindingList);
        // 监听变化
        repository.entityCollectionChange.subscribe(function (modification) {
            switch (modification.type) {
                case ModifyType.Load:
                    _this.loadEntities(modification.value, bindingList, modification.entityCreate);
                    break;
                case ModifyType.Add:
                case ModifyType.Clone:
                    _this.appendEntities(modification.value, bindingList, modification.type === ModifyType.Clone);
                    break;
                case ModifyType.AddData:
                    _this.addData(modification.value, bindingList);
                    break;
                case ModifyType.Insert:
                    _this.insertEntity(modification.value, bindingList, modification.position);
                    break;
                case ModifyType.Remove:
                    _this.removeEntities(modification.value, bindingList);
                    break;
                case ModifyType.RemoveData:
                    _this.removeData(modification.value, bindingList);
                    break;
                case ModifyType.PaginationInfoChange:
                    bindingList.paginationInfo = modification.value;
                    break;
                default:
                    break;
            }
        });
        // 监听BindingList数据变化
        bindingList.changes.subscribe(function (change) {
            if (change.type === ChangeType.PaginationInfoChange) {
                var entityCollection = repository.entityCollection;
                // const entityTypeName = entityCollection.entityTypeName;
                // const original = entityCollection.paginationInfo[entityTypeName];
                // const entityPaginationInfo = Object.assign({}, original, change.value);
                entityCollection.paginationInfo = Object.assign({}, entityCollection.paginationInfo, change.value);
            }
        });
    };
    /**
     * 将entities中的Entity对象转换为BindingObject对象，并加载到bindingList中
     * @param entities    实体数组
     * @param bindingList 绑定列表
     */
    EntityUtil.loadEntities = function (entities, bindingList, entityCreate) {
        if (entityCreate === void 0) { entityCreate = false; }
        var bindingObjects = this.createBindingObjects(entities, bindingList);
        bindingList.load(bindingObjects, entityCreate);
    };
    /**
     * 将entities中的Entity对象转换为BIndingObject对象，并追加到bindingList中
     * @param entities    实体数组
     * @param bindingList 绑定列表
     */
    EntityUtil.appendEntities = function (entities, bindingList, isCloned) {
        if (isCloned === void 0) { isCloned = false; }
        var bindingObjects = this.createBindingObjects(entities, bindingList);
        bindingList.append(bindingObjects, isCloned);
    };
    /**
     * 增加实体数据（不切换当前行）
     * @param entities
     * @param bindingList
     */
    EntityUtil.addData = function (entities, bindingList) {
        var bindingObjects = this.createBindingObjects(entities, bindingList);
        bindingList.addData(bindingObjects);
    };
    EntityUtil.insertEntity = function (entity, bindingList, position) {
        var bindingObject = this.createBindingObject(entity, bindingList);
        bindingList.insert(bindingObject, position);
    };
    /**
     * 从bindingList移除entities对应的BindingObject对象
     * @param entities    实体数组
     * @param bindingList 绑定列表
     */
    EntityUtil.removeEntities = function (entities, bindingList) {
        if (entities === null || entities.length === 0) {
            return;
        }
        // 归集要删除的id数组
        var primaryKey = bindingList.primaryKey;
        var ids = [];
        entities.forEach(function (entity) {
            ids.push(entity[primaryKey]);
        });
        bindingList.removeByIds(ids);
    };
    EntityUtil.removeData = function (entities, bindingList) {
        if (entities === null || entities.length === 0) {
            return;
        }
        // 归集要删除的id数组
        var primaryKey = bindingList.primaryKey;
        var ids = [];
        entities.forEach(function (entity) {
            ids.push(entity[primaryKey]);
        });
        bindingList.removeDataByIds(ids);
    };
    /**
     * 将entities中的Entity对象转换为BindingObject对象
     * @param entities    实体数组
     * @param bindingList 绑定列表
     */
    EntityUtil.createBindingObjects = function (entities, bindingList) {
        var _this = this;
        if (entities === null || entities.length === 0) {
            return [];
        }
        var bindingObjects = [];
        entities.forEach(function (entity) {
            var bindingObject = BindingObjectFactory.create(bindingList.properties);
            bindingObject['_ENTITY_'] = entity;
            _this.loadEntity(entity, bindingObject);
            // // 为bindingObject设置默认值initialData属性
            // if (entity['initialData']) {
            //   bindingObject['initialData'] = entity['initialData'];
            // }
            bindingObjects.push(bindingObject);
        });
        return bindingObjects;
    };
    EntityUtil.createBindingObject = function (entity, bindingList) {
        var bindingObject = BindingObjectFactory.create(bindingList.properties);
        this.loadEntity(entity, bindingObject);
        return bindingObject;
    };
    EntityUtil.watchReposiroty = function (repository, bindingData) {
        // reposiroty => bindingData
        repository.entityCollectionChange.subscribe(function (modification) {
            switch (modification.type) {
                case ModifyType.PaginationInfoChange:
                    bindingData.pagingInfo = modification.value;
                    break;
                default:
                    break;
            }
        });
    };
    /**
     * 查找属性的类型
     * @param entityType 实体类型
     * @param targetPropName 属性名称
     * @return 属性信息，包含属性类型（NgField、NgObject、NgList）和属性对应的实体类型（当NgField类型时为null）
     */
    EntityUtil.getPropInfo = function (entityType, targetPropName) {
        var propType;
        var propEntityType;
        // NgField
        var ngFieldProperties = FieldMetadataUtil.getNgFields(entityType);
        Object.keys(ngFieldProperties).forEach(function (propName) {
            if (propName === targetPropName) {
                propType = 'NgField';
                propEntityType = null;
            }
        });
        // NgObject
        var ngObjectProperties = FieldMetadataUtil.getNgObjects(entityType);
        Object.keys(ngObjectProperties).forEach(function (propName) {
            if (propName === targetPropName) {
                propType = 'NgObject';
                propEntityType = ngObjectProperties[propName].type;
            }
        });
        // NgList
        var ngListProperties = FieldMetadataUtil.getNgList(entityType);
        Object.keys(ngListProperties).forEach(function (propName) {
            if (propName === targetPropName) {
                propType = 'NgList';
                propEntityType = ngListProperties[propName].type;
            }
        });
        var ngDynamicProperties = FieldMetadataUtil.getNgDynamic(entityType);
        Object.keys(ngDynamicProperties).forEach(function (propName) {
            if (propName === targetPropName) {
                propType = 'NgDynamic';
                propEntityType = ngDynamicProperties[propName].type;
            }
        });
        return { propType: propType, propEntityType: propEntityType };
    };
    /**
     * 获取实体的主键名
     * @param entityType 实体类型
     */
    EntityUtil.getPrimaryKey = function (entityType) {
        var primaryNgFiledProp = FieldMetadataUtil.getPrimaryFieldMetadata(entityType);
        if (primaryNgFiledProp) {
            return primaryNgFiledProp.dataField;
        }
        else {
            return '';
        }
    };
    /**
     * 是否为对象属性
     */
    EntityUtil.isObjectProp = function (entityType, targetPropName) {
        var isObjectProp = false;
        var ngObjectProperties = FieldMetadataUtil.getNgObjects(entityType);
        Object.keys(ngObjectProperties).forEach(function (propName) {
            if (propName === targetPropName) {
                isObjectProp = true;
            }
        });
        return isObjectProp;
    };
    /**
     * 检查是否是动态列属性
     */
    EntityUtil.isDynamicProp = function (entityType, targetPropName) {
        var isDynamicProp = false;
        var ngDynamicProperties = FieldMetadataUtil.getNgDynamic(entityType);
        Object.keys(ngDynamicProperties).forEach(function (propName) {
            if (propName === targetPropName) {
                isDynamicProp = true;
            }
        });
        return isDynamicProp;
    };
    /**
     * 为实体增加initialData属性
     * @param entity 实体实例
     * @param initialData 默认值对象
     */
    EntityUtil.appendInitialData = function (entity, initialData) {
        var data = Object.assign({}, initialData);
        delete data.id;
        delete data.parentID;
        entity['initialData'] = data;
    };
    return EntityUtil;
}());
export { EntityUtil };
//# sourceMappingURL=data:application/json;base64,