/**
 * 绑定列表工厂相关定义
 * @author Witt<jiwt@inspur.com>
 */
import { BindingList } from './binding_list';
/**
 * BindingList工厂用于创建一个空的BindingList对象，并将当前行的属性影射到BindingList对象上。
 *
 * **示例代码**
 * ```ts
 * const deptProperties: BindingProperty[] = PropertyUtil.getProperties(DeptEntity);
 * const deptList = BindingListFactory.create(deptProperties);
 * ```
 */
var BindingListFactory = /** @class */ (function () {
    function BindingListFactory() {
    }
    /**
     * 创建BindingList实例，并扩展其属性
     * @param bindingProperties 绑定属性集合
     */
    BindingListFactory.create = function (bindingProperties) {
        var bindingList = new BindingList(bindingProperties);
        this.extendProperties(bindingList, bindingProperties);
        return bindingList;
    };
    /**
     * 扩展BindingList属性，将当前行上的属性映射到列表上
     * @param bindingList       要扩展的绑定列表
     * @param bindingProperties 绑定属性集合
     */
    BindingListFactory.extendProperties = function (bindingList, bindingProperties) {
        bindingProperties.forEach(function (bindingProperty) {
            var propertyName = bindingProperty.name;
            Object.defineProperty(bindingList, propertyName, {
                get: function () {
                    return bindingList.currentItem[propertyName];
                }
            });
        });
    };
    return BindingListFactory;
}());
export { BindingListFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmluZGluZ19saXN0X2ZhY3RvcnkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL21vYmlsZS1kZXZraXQvIiwic291cmNlcyI6WyJsaWIvYmluZGluZy1kYXRhL2JpbmRpbmdfbGlzdF9mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUVILE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUc3Qzs7Ozs7Ozs7R0FRRztBQUNIO0lBQUE7SUE0QkEsQ0FBQztJQTFCQzs7O09BR0c7SUFDSSx5QkFBTSxHQUFiLFVBQWMsaUJBQW9DO1FBQ2hELElBQU0sV0FBVyxHQUFHLElBQUksV0FBVyxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDdkQsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO1FBQ3RELE9BQU8sV0FBVyxDQUFDO0lBQ3JCLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksbUNBQWdCLEdBQXZCLFVBQXdCLFdBQXdCLEVBQUUsaUJBQW9DO1FBRXBGLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxVQUFDLGVBQWdDO1lBQ3pELElBQU0sWUFBWSxHQUFHLGVBQWUsQ0FBQyxJQUFJLENBQUM7WUFDMUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxXQUFXLEVBQUUsWUFBWSxFQUFFO2dCQUMvQyxHQUFHLEVBQUU7b0JBQ0gsT0FBTyxXQUFXLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxDQUFDO2dCQUMvQyxDQUFDO2FBQ0YsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBQ0gseUJBQUM7QUFBRCxDQUFDLEFBNUJELElBNEJDO0FBRUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIOe7keWumuWIl+ihqOW3peWOguebuOWFs+WumuS5iVxuICogQGF1dGhvciBXaXR0PGppd3RAaW5zcHVyLmNvbT5cbiAqL1xuXG5pbXBvcnQgeyBCaW5kaW5nTGlzdCB9IGZyb20gJy4vYmluZGluZ19saXN0JztcbmltcG9ydCB7IEJpbmRpbmdQcm9wZXJ0eSB9IGZyb20gJy4vYmluZGluZ19wcm9wZXJ0eSc7XG5cbi8qKlxuICogQmluZGluZ0xpc3Tlt6XljoLnlKjkuo7liJvlu7rkuIDkuKrnqbrnmoRCaW5kaW5nTGlzdOWvueixoe+8jOW5tuWwhuW9k+WJjeihjOeahOWxnuaAp+W9seWwhOWIsEJpbmRpbmdMaXN05a+56LGh5LiK44CCXG4gKlxuICogKirnpLrkvovku6PnoIEqKlxuICogYGBgdHNcbiAqIGNvbnN0IGRlcHRQcm9wZXJ0aWVzOiBCaW5kaW5nUHJvcGVydHlbXSA9IFByb3BlcnR5VXRpbC5nZXRQcm9wZXJ0aWVzKERlcHRFbnRpdHkpO1xuICogY29uc3QgZGVwdExpc3QgPSBCaW5kaW5nTGlzdEZhY3RvcnkuY3JlYXRlKGRlcHRQcm9wZXJ0aWVzKTtcbiAqIGBgYFxuICovXG5jbGFzcyBCaW5kaW5nTGlzdEZhY3Rvcnkge1xuXG4gIC8qKlxuICAgKiDliJvlu7pCaW5kaW5nTGlzdOWunuS+i++8jOW5tuaJqeWxleWFtuWxnuaAp1xuICAgKiBAcGFyYW0gYmluZGluZ1Byb3BlcnRpZXMg57uR5a6a5bGe5oCn6ZuG5ZCIXG4gICAqL1xuICBzdGF0aWMgY3JlYXRlKGJpbmRpbmdQcm9wZXJ0aWVzOiBCaW5kaW5nUHJvcGVydHlbXSk6IEJpbmRpbmdMaXN0IHtcbiAgICBjb25zdCBiaW5kaW5nTGlzdCA9IG5ldyBCaW5kaW5nTGlzdChiaW5kaW5nUHJvcGVydGllcyk7XG4gICAgdGhpcy5leHRlbmRQcm9wZXJ0aWVzKGJpbmRpbmdMaXN0LCBiaW5kaW5nUHJvcGVydGllcyk7XG4gICAgcmV0dXJuIGJpbmRpbmdMaXN0O1xuICB9XG5cbiAgLyoqXG4gICAqIOaJqeWxlUJpbmRpbmdMaXN05bGe5oCn77yM5bCG5b2T5YmN6KGM5LiK55qE5bGe5oCn5pig5bCE5Yiw5YiX6KGo5LiKXG4gICAqIEBwYXJhbSBiaW5kaW5nTGlzdCAgICAgICDopoHmianlsZXnmoTnu5HlrprliJfooahcbiAgICogQHBhcmFtIGJpbmRpbmdQcm9wZXJ0aWVzIOe7keWumuWxnuaAp+mbhuWQiFxuICAgKi9cbiAgc3RhdGljIGV4dGVuZFByb3BlcnRpZXMoYmluZGluZ0xpc3Q6IEJpbmRpbmdMaXN0LCBiaW5kaW5nUHJvcGVydGllczogQmluZGluZ1Byb3BlcnR5W10pIHtcblxuICAgIGJpbmRpbmdQcm9wZXJ0aWVzLmZvckVhY2goKGJpbmRpbmdQcm9wZXJ0eTogQmluZGluZ1Byb3BlcnR5KSA9PiB7XG4gICAgICBjb25zdCBwcm9wZXJ0eU5hbWUgPSBiaW5kaW5nUHJvcGVydHkubmFtZTtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShiaW5kaW5nTGlzdCwgcHJvcGVydHlOYW1lLCB7XG4gICAgICAgIGdldDogKCkgPT4ge1xuICAgICAgICAgIHJldHVybiBiaW5kaW5nTGlzdC5jdXJyZW50SXRlbVtwcm9wZXJ0eU5hbWVdO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgeyBCaW5kaW5nTGlzdEZhY3RvcnkgfTtcblxuIl19