/*
 * @Author: Witt
 * @Date: 2018-12-27 09:26:41
 * @Last Modified by: Witt
 * @Last Modified time: 2019-01-15 22:00:45
 */
import { DataPathNode } from './data_path_node';
/**
 * 变更路径（简单双向列表）
 */
var DataPath = /** @class */ (function () {
    /**
     * 构造函数
     */
    function DataPath() {
        this.head = new DataPathNode(null, null);
        this.length = 0;
    }
    /**
     * 添加一个节点到头部
     */
    DataPath.prototype.unshift = function (type, data) {
        var newNode = new DataPathNode(type, data);
        newNode.next = this.head.next;
        newNode.prev = this.head;
        this.head.next = newNode;
        if (newNode.next) {
            newNode.next.prev = newNode;
        }
        this.length++;
    };
    /**
     * 在链表最后追加一个节点
     */
    DataPath.prototype.push = function (type, data) {
        var tailNode = this.getTail();
        var newNode = new DataPathNode(type, data);
        tailNode.next = newNode;
        this.length++;
    };
    /**
     * 获取链表尾部节点
     */
    DataPath.prototype.getTail = function () {
        var lastNode = this.head;
        while (lastNode.next) {
            lastNode = lastNode.next;
        }
        return lastNode;
    };
    /**
     * 转换为数组格式
     */
    DataPath.prototype.toArray = function () {
        var pathArray = [];
        var currentNode = this.head.next;
        while (currentNode) {
            pathArray.push(currentNode.type + ":" + currentNode.value);
            currentNode = currentNode.next;
        }
        return pathArray;
    };
    /**
     * 转换为字符串格式
     */
    DataPath.prototype.toString = function () {
        var pathArray = this.toArray();
        var pathString = pathArray.join(', ');
        return "[" + pathString + "]";
    };
    /**
     * 拷贝
     */
    DataPath.prototype.clone = function () {
        var newDataPath = new DataPath();
        var curDataNode = this.head.next;
        while (curDataNode) {
            newDataPath.push(curDataNode.type, curDataNode.value);
            curDataNode = curDataNode.next;
        }
        return newDataPath;
    };
    return DataPath;
}());
export { DataPath };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YV9wYXRoLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9tb2JpbGUtZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL2VudGl0eS9lbnRpdHktcGF0aC9kYXRhX3BhdGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0dBS0c7QUFFSCxPQUFPLEVBQUUsWUFBWSxFQUFvQixNQUFNLGtCQUFrQixDQUFDO0FBQ2xFOztHQUVHO0FBQ0g7SUFZRTs7T0FFRztJQUNIO1FBQ0UsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLFlBQVksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDbEIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksMEJBQU8sR0FBZCxVQUFlLElBQXNCLEVBQUUsSUFBUztRQUM5QyxJQUFNLE9BQU8sR0FBRyxJQUFJLFlBQVksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDN0MsT0FBTyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztRQUM5QixPQUFPLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFFekIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO1FBQ3pCLElBQUksT0FBTyxDQUFDLElBQUksRUFBRTtZQUNoQixPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUM7U0FDN0I7UUFFRCxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksdUJBQUksR0FBWCxVQUFZLElBQXNCLEVBQUUsSUFBUztRQUMzQyxJQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDaEMsSUFBTSxPQUFPLEdBQUcsSUFBSSxZQUFZLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzdDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBRUQ7O09BRUc7SUFDSSwwQkFBTyxHQUFkO1FBQ0UsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUN6QixPQUFPLFFBQVEsQ0FBQyxJQUFJLEVBQUU7WUFDcEIsUUFBUSxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUM7U0FDMUI7UUFDRCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0lBRUQ7O09BRUc7SUFDSSwwQkFBTyxHQUFkO1FBQ0UsSUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDO1FBQ3JCLElBQUksV0FBVyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ2pDLE9BQU8sV0FBVyxFQUFFO1lBQ2xCLFNBQVMsQ0FBQyxJQUFJLENBQUksV0FBVyxDQUFDLElBQUksU0FBSSxXQUFXLENBQUMsS0FBTyxDQUFDLENBQUU7WUFDNUQsV0FBVyxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUM7U0FDaEM7UUFDRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBRUQ7O09BRUc7SUFDSSwyQkFBUSxHQUFmO1FBQ0UsSUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2pDLElBQU0sVUFBVSxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDeEMsT0FBTyxNQUFJLFVBQVUsTUFBRyxDQUFDO0lBQzNCLENBQUM7SUFFRDs7T0FFRztJQUNJLHdCQUFLLEdBQVo7UUFDRSxJQUFNLFdBQVcsR0FBRyxJQUFJLFFBQVEsRUFBRSxDQUFDO1FBQ25DLElBQUksV0FBVyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ2pDLE9BQU8sV0FBVyxFQUFFO1lBQ2xCLFdBQVcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDdEQsV0FBVyxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUM7U0FDaEM7UUFDRCxPQUFPLFdBQVcsQ0FBQztJQUNyQixDQUFDO0lBQ0gsZUFBQztBQUFELENBQUMsQUEzRkQsSUEyRkM7QUFFRCxPQUFPLEVBQUUsUUFBUSxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQEF1dGhvcjogV2l0dFxuICogQERhdGU6IDIwMTgtMTItMjcgMDk6MjY6NDFcbiAqIEBMYXN0IE1vZGlmaWVkIGJ5OiBXaXR0XG4gKiBATGFzdCBNb2RpZmllZCB0aW1lOiAyMDE5LTAxLTE1IDIyOjAwOjQ1XG4gKi9cblxuaW1wb3J0IHsgRGF0YVBhdGhOb2RlLCBEYXRhUGF0aE5vZGVUeXBlIH0gZnJvbSAnLi9kYXRhX3BhdGhfbm9kZSc7XG4vKipcbiAqIOWPmOabtOi3r+W+hO+8iOeugOWNleWPjOWQkeWIl+ihqO+8iVxuICovXG5jbGFzcyBEYXRhUGF0aCB7XG5cbiAgLyoqXG4gICAqIOWktOiKgueCuVxuICAgKi9cbiAgcHVibGljIGhlYWQ6IERhdGFQYXRoTm9kZTtcblxuICAvKipcbiAgICog6ZW/5bqmXG4gICAqL1xuICBwdWJsaWMgbGVuZ3RoOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIOaehOmAoOWHveaVsFxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5oZWFkID0gbmV3IERhdGFQYXRoTm9kZShudWxsLCBudWxsKTtcbiAgICB0aGlzLmxlbmd0aCA9IDA7XG4gIH1cblxuICAvKipcbiAgICog5re75Yqg5LiA5Liq6IqC54K55Yiw5aS06YOoXG4gICAqL1xuICBwdWJsaWMgdW5zaGlmdCh0eXBlOiBEYXRhUGF0aE5vZGVUeXBlLCBkYXRhOiBhbnkpIHtcbiAgICBjb25zdCBuZXdOb2RlID0gbmV3IERhdGFQYXRoTm9kZSh0eXBlLCBkYXRhKTtcbiAgICBuZXdOb2RlLm5leHQgPSB0aGlzLmhlYWQubmV4dDtcbiAgICBuZXdOb2RlLnByZXYgPSB0aGlzLmhlYWQ7XG5cbiAgICB0aGlzLmhlYWQubmV4dCA9IG5ld05vZGU7XG4gICAgaWYgKG5ld05vZGUubmV4dCkge1xuICAgICAgbmV3Tm9kZS5uZXh0LnByZXYgPSBuZXdOb2RlO1xuICAgIH1cblxuICAgIHRoaXMubGVuZ3RoKys7XG4gIH1cblxuICAvKipcbiAgICog5Zyo6ZO+6KGo5pyA5ZCO6L+95Yqg5LiA5Liq6IqC54K5XG4gICAqL1xuICBwdWJsaWMgcHVzaCh0eXBlOiBEYXRhUGF0aE5vZGVUeXBlLCBkYXRhOiBhbnkpIHtcbiAgICBjb25zdCB0YWlsTm9kZSA9IHRoaXMuZ2V0VGFpbCgpO1xuICAgIGNvbnN0IG5ld05vZGUgPSBuZXcgRGF0YVBhdGhOb2RlKHR5cGUsIGRhdGEpO1xuICAgIHRhaWxOb2RlLm5leHQgPSBuZXdOb2RlO1xuICAgIHRoaXMubGVuZ3RoKys7XG4gIH1cblxuICAvKipcbiAgICog6I635Y+W6ZO+6KGo5bC+6YOo6IqC54K5XG4gICAqL1xuICBwdWJsaWMgZ2V0VGFpbCgpOiBEYXRhUGF0aE5vZGUge1xuICAgIGxldCBsYXN0Tm9kZSA9IHRoaXMuaGVhZDtcbiAgICB3aGlsZSAobGFzdE5vZGUubmV4dCkge1xuICAgICAgbGFzdE5vZGUgPSBsYXN0Tm9kZS5uZXh0O1xuICAgIH1cbiAgICByZXR1cm4gbGFzdE5vZGU7XG4gIH1cblxuICAvKipcbiAgICog6L2s5o2i5Li65pWw57uE5qC85byPXG4gICAqL1xuICBwdWJsaWMgdG9BcnJheSgpIHtcbiAgICBjb25zdCBwYXRoQXJyYXkgPSBbXTtcbiAgICBsZXQgY3VycmVudE5vZGUgPSB0aGlzLmhlYWQubmV4dDtcbiAgICB3aGlsZSAoY3VycmVudE5vZGUpIHtcbiAgICAgIHBhdGhBcnJheS5wdXNoKGAke2N1cnJlbnROb2RlLnR5cGV9OiR7Y3VycmVudE5vZGUudmFsdWV9YCkgO1xuICAgICAgY3VycmVudE5vZGUgPSBjdXJyZW50Tm9kZS5uZXh0O1xuICAgIH1cbiAgICByZXR1cm4gcGF0aEFycmF5O1xuICB9XG5cbiAgLyoqXG4gICAqIOi9rOaNouS4uuWtl+espuS4suagvOW8j1xuICAgKi9cbiAgcHVibGljIHRvU3RyaW5nKCkge1xuICAgIGNvbnN0IHBhdGhBcnJheSA9IHRoaXMudG9BcnJheSgpO1xuICAgIGNvbnN0IHBhdGhTdHJpbmcgPSBwYXRoQXJyYXkuam9pbignLCAnKTtcbiAgICByZXR1cm4gYFske3BhdGhTdHJpbmd9XWA7XG4gIH1cblxuICAvKipcbiAgICog5ou36LSdXG4gICAqL1xuICBwdWJsaWMgY2xvbmUoKTogRGF0YVBhdGgge1xuICAgIGNvbnN0IG5ld0RhdGFQYXRoID0gbmV3IERhdGFQYXRoKCk7XG4gICAgbGV0IGN1ckRhdGFOb2RlID0gdGhpcy5oZWFkLm5leHQ7XG4gICAgd2hpbGUgKGN1ckRhdGFOb2RlKSB7XG4gICAgICBuZXdEYXRhUGF0aC5wdXNoKGN1ckRhdGFOb2RlLnR5cGUsIGN1ckRhdGFOb2RlLnZhbHVlKTtcbiAgICAgIGN1ckRhdGFOb2RlID0gY3VyRGF0YU5vZGUubmV4dDtcbiAgICB9XG4gICAgcmV0dXJuIG5ld0RhdGFQYXRoO1xuICB9XG59XG5cbmV4cG9ydCB7IERhdGFQYXRoIH07XG4iXX0=