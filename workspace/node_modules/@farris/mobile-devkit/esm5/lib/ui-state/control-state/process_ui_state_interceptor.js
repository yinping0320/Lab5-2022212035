import { of } from "rxjs";
import { NoCodeRenderStateUtil } from "./render_state_util";
/**
 * 根据流程页面状态扩展
 * 控制逻辑：
 * 1.根据【流程页面状态】控制隐藏页首和页尾（隐藏按钮）（有点问题，驳回时）
 * 2.流程页面状态为ViewOnly时，按钮隐藏（包含普通按钮、按钮组内按钮、列表滑动工具栏、卡片动作按钮栏）,其他的控件设置为只读或者禁用。
 */
var ProcessUiControlStateInterceptor = /** @class */ (function () {
    function ProcessUiControlStateInterceptor() {
        this.canIntercept = true;
    }
    /**
     * 初始化
     */
    ProcessUiControlStateInterceptor.prototype.init = function (initContext) {
        var processContext = initContext.processContext;
        var isInWf = processContext.isInWf;
        if (!isInWf) {
            this.canIntercept = false;
            return of(true);
        }
        var uiStateInProcess = processContext.uiStateInProcess;
        if (!isInWf) {
            // 制单状态：单据不是在流程中心打开：允许修改
            this.renderStates = NoCodeRenderStateUtil.getRenderStatesWhenDrafting();
        }
        else if (uiStateInProcess === 'BackEdit') {
            // 退回修改：我的代办中打开驳回的表单
            this.renderStates = NoCodeRenderStateUtil.getRenderStatesWhenBackEdit();
        }
        else if (uiStateInProcess === 'Redrafting') {
            // 重新制单：我的发起撤回，并且尚未重新提交
            this.renderStates = NoCodeRenderStateUtil.getRenderStatesWhenReDrafting();
        }
        else if (uiStateInProcess === "Approving") {
            //1、审批中，待办任务（除待阅、重新提交）
            //2、默认未只读态，最终以流程节点上的配置为准
            this.renderStates = NoCodeRenderStateUtil.getRenderStatesWhenApproving();
        }
        else if (uiStateInProcess === "ViewOnly") {
            this.renderStates = NoCodeRenderStateUtil.getRenderStatesWhenViewOnly();
        }
        else {
            this.renderStates = NoCodeRenderStateUtil.getRenderStatesWhenViewOnly();
        }
        return of(true);
    };
    /**
     * 拦截
     * 根据页面状态，隐藏页头和页尾。如果为ViewOnly，把按钮和输入控件设置为只读
     * @param interceptContext
     */
    ProcessUiControlStateInterceptor.prototype.intercept = function (interceptContext) {
        if (!this.canIntercept) {
            return;
        }
        switch (interceptContext.type) {
            case 'visible': {
                this.visibleStateIntercept(interceptContext);
                break;
            }
            case 'readonly': {
                this.readonlyStateIntercept(interceptContext);
                break;
            }
            case 'disabled': {
                this.disabledStateIntercept(interceptContext);
                break;
            }
            case 'hideDeleteBtn':
            case 'hideUploadBtn': {
                this.attachmentBtnStateIntercept(interceptContext);
                break;
            }
        }
    };
    /**
     * 隐藏头部、尾部、审批日志
     * @param interceptContext
     */
    ProcessUiControlStateInterceptor.prototype.visibleStateIntercept = function (interceptContext) {
        var controlInfo = interceptContext.controlState.controlInfo;
        var viewModelContext = interceptContext.viewModelContext;
        var bindingPath = viewModelContext.viewModel.bindingPath;
        if (this.renderStates.showHeader === false) {
            if ((!bindingPath || bindingPath === '/') && controlInfo.type === 'NavigationBar') {
                interceptContext.value = false;
            }
        }
        if (this.renderStates.showFooter === false) {
            if ((!bindingPath || bindingPath === '/') && controlInfo.isInFooter && controlInfo.type === 'Button') {
                interceptContext.value = false;
            }
        }
        if (this.renderStates.showChildHeader === false) {
            if ((bindingPath && bindingPath !== '/') && controlInfo.type === 'NavigationBar') {
                interceptContext.value = false;
            }
        }
        if (this.renderStates.showChildFooter === false) {
            if ((bindingPath && bindingPath !== '/') && controlInfo.isInFooter && controlInfo.type === 'Button') {
                interceptContext.value = false;
            }
        }
        var processContext = interceptContext.processContext;
        if (processContext.uiStateInProcess === "ViewOnly") {
            if (controlInfo.type === 'Button') {
                interceptContext.value = false;
            }
        }
    };
    /**
     * 设置为只读
     * @param interceptContext
     * @returns
     */
    ProcessUiControlStateInterceptor.prototype.readonlyStateIntercept = function (interceptContext) {
        var processContext = interceptContext.processContext;
        var controlInfo = interceptContext.controlState.controlInfo;
        if (processContext.uiStateInProcess === "ViewOnly" && controlInfo.type !== 'Button') {
            interceptContext.value = true;
        }
    };
    /**
     * 设置为禁用
     * @param interceptContext
     * @returns
     */
    ProcessUiControlStateInterceptor.prototype.disabledStateIntercept = function (interceptContext) {
        var processContext = interceptContext.processContext;
        var controlInfo = interceptContext.controlState.controlInfo;
        if (processContext.uiStateInProcess === "ViewOnly" && controlInfo.type !== 'Button') {
            if (!interceptContext.controlState.originalValue.hasOwnProperty('readonly')) {
                interceptContext.value = true;
            }
        }
    };
    /**
     * 附件设置为只读
     * @param interceptContext
     * @returns
     */
    ProcessUiControlStateInterceptor.prototype.attachmentBtnStateIntercept = function (interceptContext) {
        var processContext = interceptContext.processContext;
        if (processContext.uiStateInProcess === "ViewOnly") {
            interceptContext.value = true;
        }
    };
    return ProcessUiControlStateInterceptor;
}());
export { ProcessUiControlStateInterceptor };
//# sourceMappingURL=data:application/json;base64,