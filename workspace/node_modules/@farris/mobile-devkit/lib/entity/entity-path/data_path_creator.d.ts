import { Entity } from '../index';
import { EntityManager } from '../../repository/index';
import { BindingData } from '../../binding-data/index';
import { DataPath } from './data_path';
/**
 * 数据Path工厂类
 */
declare class DataPathCreator {
    /**
     * 将长路径数组或字符串转换为
     * @param fullPathArrayOrString 路径数组或字符串
     * @param repository 实体仓库
     * @summary
     * 1、长路径格式说明参考：data-path.md
     */
    static createByLongPathFromRoot(fullPathArrayOrString: string[] | string, entityManager: EntityManager<Entity>): DataPath;
    /**
     * 获取下一个路径节点的信息
     * @param parentNodeInfo 当前路径节点信息
     * @param nextNodeValue 下一个路径节点的值
     * @summary
     * 1、这个递归写的很绕，说明数据结构设计不合理；
     * 2、多个因素混用了一个结构；
     */
    private static getNextPathNodeInfo;
    /**
     * @param fullPathArrayOrString 路径数组或字符串
     * @param repository 实体仓库
     * @summary
     * 1、长路径格式说明参考：data-path.md
     * 2、shortPathArrayOrString暂时只支持字符串数组
     */
    static createByShortPathFromRoot(shortPathArrayOrString: string[] | string, entityManager: EntityManager<Entity>, bindingData: BindingData): DataPath;
}
export { DataPathCreator };
