import { ClassType } from '../types';
import { PropMetadata } from './prop_meatadata';
/**
 * 【对象属性元数据】接口
 */
export interface ObjectPropMetadata extends PropMetadata {
    /**
     * 映射字段
     */
    dataField?: string;
    /**
     * 原始字段名称
     */
    originalDataField?: string;
    /**
     * 表名
     */
    tableName?: string;
    /**
     * 引用实体类型
     */
    type?: ClassType;
    /**
     * 树分级类型(分级码=path 父路径=parent)
     */
    hierarchyType?: string;
}
/**
 * 【对象属性元数据】名称
 */
export declare const OBJECT_PROP_META = "ObjectPropMeta";
/**
 * 【对象属性元数据装饰器工厂】接口
 * @summaryh
 * obj 参数obj的值类型可以为 NgObjectProperty、string、ClassType
 * 当为string 时，则设其映射字段；
 * 当为ClassType时，则设置集合中的记录类型
 */
export interface ObjectPropMetaDecorator {
    (obj: ObjectPropMetadata | string | ClassType): any;
    new (obj: ObjectPropMetadata | string | ClassType): any;
}
/**
 * 对象属性元数据装饰器工厂
 */
export declare const ObjectPropMeta: ObjectPropMetaDecorator;
