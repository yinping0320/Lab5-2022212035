import 'reflect-metadata';
import { ClassType } from '../types';
import { PropMetadata } from './prop_meatadata';
/**
 * 简单属性元数据
 */
export interface PrimitivePropMetadata extends PropMetadata {
    /**
     * 属性名称
     */
    property?: string;
    /**
     * 字段名称
     */
    dataField?: string;
    /**
     * 原始字段名称
     */
    originalDataField?: string;
    /**
     * 原始字段类型
     */
    originalDataFieldType?: string;
    /**
     * 是否为主键
     */
    primary?: boolean;
    /**
     * 是否为外键
     */
    foreign?: boolean;
    /**
     * 默认值
     */
    defaultValue?: any;
    /**
     * 验证规则
     */
    validRules?: any[];
    /**
     * 初始值，用于字段清空后
     */
    initValue?: any;
    /**
     * 启用多语录入
     */
    enableMultiLangInput?: boolean;
}
/**
 * 元数据名称
 */
export declare const PRIMITIVE_PROP_META = "PrimitivePropMeta";
/**
 * 【简单属性装饰器工厂】接口
 * @summary
 * 类型可以为：NgFieldProperty、string、ClassType
 * 当为string 时，则设其映射字段；
 * 当为ClassType时，则设置集合中的记录类型
 */
export interface PrimitivePropMetaDecorator {
    (obj: PrimitivePropMetadata | string | ClassType): any;
    (obj?: PrimitivePropMetadata | string | boolean): any;
    new (obj?: PrimitivePropMetadata | string | boolean): any;
}
/**
 * 简单属性装饰器工厂
 */
export declare const PrimitivePropMeta: PrimitivePropMetaDecorator;
