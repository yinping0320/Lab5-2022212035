import { Type } from '../core/index';
import { Subject } from 'rxjs';
import { DataTypeInfo } from '../entity/index';
import { Modification } from '../changeset/index';
import { Entity } from '../entity/index';
import { EntityCollection } from './entity_collection';
import { PaginationManager } from './pagination_manager';
import { DataChangeHistory } from './data_change_history';
export declare abstract class Repository<T extends Entity> {
    /**
     * 名称
     */
    abstract name: string;
    /**
     * 实体类型
     */
    entityType: Type<T>;
    /**
     * 实体类型信息
     */
    entityTypeInfo: DataTypeInfo;
    /**
     * 实体集合
     */
    entityCollection: EntityCollection<T>;
    /**
     * 用户分页配置信息
     */
    paginationInfo: any;
    /**
     * 数据变更历史
     * @summary
     * 仅针对主表增加、从表删除
     */
    dataChangeHistory: DataChangeHistory;
    /**
     * 分页管理器
     */
    paginationManager: PaginationManager<T>;
    /**
     * 构造函数
     */
    constructor();
    protected init(): void;
    readonly changes: Subject<Modification>;
    /**
     * 实体主键
     */
    readonly primaryKey: string;
    /**
     * 实体变更集合
     */
    readonly entityCollectionChange: Subject<Modification>;
    /**
     * 重置状态
     */
    reset(): void;
    /**
     * 创建实体
     */
    buildEntity(data: any): T;
    /**
     * 批量创建实体
     */
    buildEntities(listData: any[]): T[];
    /**
     * 初始化分页配置
     * @param config 用户分页配置
     */
    setPaginationConfig(config: any): void;
    /**
     * 设置分页
     */
    setPaginationInfo(paginationInfo: any): void;
}
