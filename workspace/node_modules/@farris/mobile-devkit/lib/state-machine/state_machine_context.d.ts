import { StateMachine } from './state_machine';
import { State } from './types';
import { Context } from '../context/context';
import { ViewModelContext } from '../view-model/index';
import { StateMachineWatcher } from './state_machine_watcher';
/**
 * 状态机上下文
 */
export declare class StateMachineContext {
    stateMachine: StateMachine;
    /**
     * 当前状态名称
     */
    state: string;
    /**
     * 父Context
     */
    parent: Context;
    /**
     * 变量解析器
     */
    parser: any;
    /**
     * ViewModel上下文
     */
    viewModelContext: ViewModelContext;
    /**
     * 状态机事件监听
     */
    stateMachineWatcher: StateMachineWatcher;
    /**
     * 构造函数
     * @param stateMachine 状态机实例
     * @param initialState 初始状态
     */
    constructor(stateMachine: StateMachine, initialState: State);
    /**
     * 初始化
     */
    init(frameContext: ViewModelContext): void;
    /**
     * 状态迁移
     * @param stateName 下一状态的名称
     */
    transitTo(stateName: string): void;
    /**
     * 获取expression对应的UIState值
     * @param expression UIState表达式
     */
    getUIState(expression: string): any;
    /**
     * 获取数据的值
     */
    getData(expression: string): any;
}
