/**
 * 变量解析服务
 * @author Witt<jiwt@inspur.com>
 */
import { VariableParser } from './variable_parser';
/**
 * 变量解析服务
 * 职责：
 * 1、解析字符串中的变量，并替换成相应的值；
 * 2、对表达式进行求值。
 *
 * @todo 对表达式求值的部分和表达式功能重叠，是否转移到表达式中？
 */
declare class VariableParseService {
    /**
     * 解析器集合
     */
    private parsers;
    /**
     * 构造变量解析服务
     * @param parsers 解析器集合
     */
    constructor(parsers: VariableParser[]);
    /**
     * 解析表达式
     * @param expression 表达式
     * @param context 上下文
     */
    parse(target: any, context?: any): any;
    /**
     * 表达式求值
     */
    evaluate(expression: string, context?: any): any;
    /**
     * 解析表达式
     * @param expression 表达式
     * @param context 上下文
     */
    private parseExpression;
}
export { VariableParseService };
