export interface Type<T> extends Function {
    new (...args: any[]): T;
}
export declare const Type: FunctionConstructor;
export interface Pagination {
    pageSize: number;
    pageIndex: number;
    total: number;
}
export interface Pagination {
    pageSize: number;
    pageIndex: number;
    total: number;
}
export interface ResultData {
    data?: any[];
    pagination?: Pagination;
}
export declare enum DataChangeType {
    Add = 0,
    Delete = 1,
    Edit = 2,
    Append = 3
}
export interface DataChange {
    /**
     * 变更路径，主要针对带从表的情况
     */
    fpath?: string;
    dataId: string;
    changeType: DataChangeType;
    [prop: string]: any;
}
