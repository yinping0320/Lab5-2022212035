/**
 * CommandBus相关定义
 * @author Witt<jiwt@inspur.com>
 */
import { Observable, BehaviorSubject } from 'rxjs';
import { Command } from './command';
import { CommandHandlerFactory } from './command_handler_factory';
/**
 * CommandBus用于派发Command，它接受一个Command实例，查找对应的CommandHandler，并执行。
 */
declare class CommandBus {
    /**
     * handler工厂
     */
    private handlerFactory;
    /**
     * 正在执行的命令数量流（请勿使用，后果自负）
     */
    executingCommandCount$: BehaviorSubject<number>;
    /**
     * 正在执行的命令数量
     */
    private executingCommands;
    /**
     * 构造函数
     */
    constructor(handlerFactory: CommandHandlerFactory);
    /**
     * 派发命令
     * @param command 要派发的命令
     */
    dispatch(command: Command): Observable<any>;
    /**
     * 执行命令并返回最后一个任务的执行结果流
     */
    private executeCommand;
    /**
     * 添加到执行队列
     */
    private addCommandToExecutingQueue;
    /**
     * 从执行队列中移除
     */
    private removeCommandFromExecutingQueue;
}
export { CommandBus };
