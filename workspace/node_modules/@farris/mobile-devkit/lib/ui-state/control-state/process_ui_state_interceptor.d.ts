import { Observable } from "rxjs";
import { InterceptContext, ControlStateInterceptor, InitContext } from "./control_state_interceptor";
/**
 * 根据流程页面状态扩展
 * 控制逻辑：
 * 1.根据【流程页面状态】控制隐藏页首和页尾（隐藏按钮）（有点问题，驳回时）
 * 2.流程页面状态为ViewOnly时，按钮隐藏（包含普通按钮、按钮组内按钮、列表滑动工具栏、卡片动作按钮栏）,其他的控件设置为只读或者禁用。
 */
export declare class ProcessUiControlStateInterceptor implements ControlStateInterceptor {
    private renderStates;
    private canIntercept;
    constructor();
    /**
     * 初始化
     */
    init(initContext: InitContext): Observable<any>;
    /**
     * 拦截
     * 根据页面状态，隐藏页头和页尾。如果为ViewOnly，把按钮和输入控件设置为只读
     * @param interceptContext
     */
    intercept(interceptContext: InterceptContext): void;
    /**
     * 隐藏头部、尾部、审批日志
     * @param interceptContext
     */
    private visibleStateIntercept;
    /**
     * 设置为只读
     * @param interceptContext
     * @returns
     */
    private readonlyStateIntercept;
    /**
     * 设置为禁用
     * @param interceptContext
     * @returns
     */
    private disabledStateIntercept;
    /**
     * 附件设置为只读
     * @param interceptContext
     * @returns
     */
    private attachmentBtnStateIntercept;
}
