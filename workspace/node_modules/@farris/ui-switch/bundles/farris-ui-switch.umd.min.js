!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@angular/forms")):"function"==typeof define&&define.amd?define("@farris/ui-switch",["exports","@angular/core","@angular/common","@angular/forms"],t):t((e.farris=e.farris||{},e.farris["ui-switch"]={}),e.ng.core,e.ng.common,e.ng.forms)}(this,function(e,o,t,n){"use strict";var i=new o.InjectionToken("UI_SWITCH_OPTIONS"),s={provide:n.NG_VALUE_ACCESSOR,useExisting:o.forwardRef(function(){return r}),multi:!0},r=(c.prototype.ngOnDestroy=function(){this._beforeChange&&this._beforeChange.unsubscribe()},c.prototype.getColor=function(e){return void 0===e&&(e=""),"borderColor"===e?this.defaultBoColor:"switchColor"===e?this.reverse?this.checked&&this.switchOffColor||this.switchColor:this.checked?this.switchColor:this.switchOffColor||this.switchColor:this.reverse?this.checked?this.defaultBgColor:this.color:this.checked?this.color:this.defaultBgColor},c.prototype.updateChecked=function(e,t){if(void 0===t&&(t=!0),!this.disabled&&this.editable){this.checked=!this.checked;var n=this.getValue(this.checked);this.valueChange.emit(n),this.changeEvent.emit(e),t&&this.clickHandle.emit({event:e,checked:this.checked,value:n,instance:this}),this.onChangeCallback(n),this.onTouchedCallback(n),this.cdr.destroyed||this.cdr.detectChanges()}},c.prototype.onToggle=function(t){var n=this,e=t.target.closest(".f-cmp-switch");e&&e===this.switchElRef.nativeElement&&(this.beforeChange?this._beforeChange=this.beforeChange.subscribe(function(e){e&&n.updateChecked(t)}):this.updateChecked(t))},c.prototype.onSpaceHandle=function(e){e.preventDefault(),e.stopPropagation(),this.updateChecked(e,!1)},c.prototype.getValue=function(e){return this.trueValue!==undefined&&this.falseValue!==undefined?e?this.trueValue:this.falseValue:e},c.prototype.writeValue=function(e){this.trueValue!==undefined&&this.falseValue!==undefined?this.checked=e==this.trueValue:e!==this.checked&&(this.checked=!!e),this.cdr&&!this.cdr.destroyed&&this.cdr.detectChanges()},c.prototype.registerOnChange=function(e){this.onChangeCallback=e},c.prototype.registerOnTouched=function(e){this.onTouchedCallback=e},c.prototype.setDisabledState=function(e){this.disabled=e},c.decorators=[{type:o.Component,args:[{selector:"farris-switch",template:"\n    <div class=\"farris-switch-outlayer\">\n        <span #container tabindex=\"0\" role=\"button\" hidefocus=\"true\" class=\"switch f-cmp-switch\"\n            [ngClass]=\"{\n                checked: checked,\n                disabled: disabled || !editable,\n                square: square,\n                'switch-large': size === 'large',\n                'switch-medium': size === 'medium',\n                'switch-small': size === 'small'\n            }\"\n            [ngStyle]=\"{\n                'outline': 'none',\n                'background-color': getColor(),\n                'border-color': getColor('borderColor')\n            }\"\n        >\n            <span class=\"switch-pane\" *ngIf=\"checkedLabel || uncheckedLabel\">\n                <span class=\"switch-label-checked\">{{\n                    this.checkedLabel\n                }}</span>\n                <span class=\"switch-label-unchecked\">{{\n                    this.uncheckedLabel\n                }}</span>\n            </span>\n            <small [style.background]=\"getColor('switchColor')\">\n                <ng-content></ng-content>\n            </small>\n        </span>\n    <div>\n    ",providers:[s]}]}],c.ctorParameters=function(){return[{type:undefined,decorators:[{type:o.Inject,args:[i]},{type:o.Optional}]},{type:o.ChangeDetectorRef},{type:o.Injector}]},c.propDecorators={square:[{type:o.Input}],size:[{type:o.Input}],color:[{type:o.Input}],switchOffColor:[{type:o.Input}],switchColor:[{type:o.Input}],defaultBgColor:[{type:o.Input}],defaultBoColor:[{type:o.Input}],checkedLabel:[{type:o.Input}],uncheckedLabel:[{type:o.Input}],checked:[{type:o.Input}],readonly:[{type:o.Input}],disabled:[{type:o.Input}],editable:[{type:o.Input}],reverse:[{type:o.Input}],trueValue:[{type:o.Input}],falseValue:[{type:o.Input}],beforeChange:[{type:o.Input}],changeEvent:[{type:o.Output}],clickHandle:[{type:o.Output}],valueChange:[{type:o.Output}],switchElRef:[{type:o.ViewChild,args:["container"]}],onToggle:[{type:o.HostListener,args:["click",["$event"]]}],onSpaceHandle:[{type:o.HostListener,args:["keydown.Space",["$event"]]}]},c);function c(e,t,n){void 0===e&&(e={}),this.config=e,this.cdr=t,this.injector=n,this.size="medium",this.editable=!0,this.trueValue=!0,this.falseValue=!1,this.changeEvent=new o.EventEmitter,this.clickHandle=new o.EventEmitter,this.valueChange=new o.EventEmitter,this.onTouchedCallback=function(e){},this.onChangeCallback=function(e){},this.square=e&&e.square||!1,this.size=e&&e.size||this.size,this.color=e&&e.color,this.switchOffColor=e&&e.switchOffColor,this.switchColor=e&&e.switchColor,this.defaultBgColor=e&&e.defaultBgColor,this.defaultBoColor=e&&e.defaultBoColor,this.checkedLabel=e&&e.checkedLabel,this.uncheckedLabel=e&&e.uncheckedLabel}var a=(h.forRoot=function(e){return{ngModule:h,providers:[{provide:i,useValue:e||{}}]}},h.decorators=[{type:o.NgModule,args:[{declarations:[r],imports:[t.CommonModule,n.FormsModule],exports:[n.FormsModule,r]}]}],h);function h(){}e.SwitchComponent=r,e.SwitchModule=a,e.SWITCH_OPTIONS=i,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=farris-ui-switch.umd.min.js.map