{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@farris/ui-datagrid/lib/types/data-column.ts","ng://@farris/ui-datagrid/lib/types/constant.ts","ng://@farris/ui-datagrid/lib/services/state.ts","ng://@farris/ui-datagrid/lib/utils/utils.ts","ng://@farris/ui-datagrid/lib/services/datagrid-columns.helper.ts","ng://@farris/ui-datagrid/lib/services/datagrid-facade.service.ts","ng://@farris/ui-datagrid/lib/services/datagrid.service.ts","ng://@farris/ui-datagrid/lib/services/rest.service.ts","ng://@farris/ui-datagrid/lib/types/datagrid-validator.ts","ng://@farris/ui-datagrid/lib/services/validator-messager.service.ts","ng://@farris/ui-datagrid/lib/services/domhandler.ts","ng://@farris/ui-datagrid/lib/services/datagrid-filter.service.ts","ng://@farris/ui-datagrid/lib/pagination/ngx-pagination.module.ts","ng://@farris/ui-datagrid/lib/pagination/pagination.service.ts","ng://@farris/ui-datagrid/lib/scrollbar/scrollbar.interfaces.ts","ng://@farris/ui-datagrid/lib/scrollbar/scrollbar.directive.ts","ng://@farris/ui-datagrid/lib/scrollbar/scrollbar.component.ts","ng://@farris/ui-datagrid/lib/scrollbar/arrow/scrollbar-arrows.component.ts","ng://@farris/ui-datagrid/lib/scrollbar/scrollbar.module.ts","ng://@farris/ui-datagrid/lib/components/columns/column-cell-edit.directive.ts","ng://@farris/ui-datagrid/lib/components/columns/datagrid-column.directive.ts","ng://@farris/ui-datagrid/lib/components/filter-toolbar/smart-filter-toolbar.component.ts","ng://@farris/ui-datagrid/lib/plugins/smart-filter/controlData/filter-control.options.ts","ng://@farris/ui-datagrid/lib/services/datagrid-smart-filter.service.ts","ng://@farris/ui-datagrid/lib/services/selection-mode.service.ts","ng://@farris/ui-datagrid/lib/datagrid.component.ts","ng://@farris/ui-datagrid/lib/plugins/smart-filter/datagrid-smart-filter.component.ts","ng://@farris/ui-datagrid/lib/plugins/smart-filter/datagrid-smart-filter.module.ts","ng://@farris/ui-datagrid/lib/utils/format-cell-data.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-body.component.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-row-hover.directive.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-row.directive.ts","ng://@farris/ui-datagrid/lib/components/editors/cell-editor.directive.ts","ng://@farris/ui-datagrid/lib/utils/safe.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-cell.component.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-cell-editable.directive.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-rows.component.ts","ng://@farris/ui-datagrid/lib/components/editors/text-editor.component.ts","ng://@farris/ui-datagrid/lib/components/header/datagrid-header.component.ts","ng://@farris/ui-datagrid/lib/components/header/datagrid-resize-column.directive.ts","ng://@farris/ui-datagrid/lib/components/footer/datagrid-footer.component.ts","ng://@farris/ui-datagrid/lib/components/pager/pager.component.ts","ng://@farris/ui-datagrid/lib/components/loading.component.ts","ng://@farris/ui-datagrid/lib/components/pager/selected-list/selected-list.component.ts","ng://@farris/ui-datagrid/lib/components/pager/selected-item.pipe.ts","ng://@farris/ui-datagrid/lib/datagrid-error-handler.ts","ng://@farris/ui-datagrid/lib/components/checkbox/datagrid-checkbox.component.ts","ng://@farris/ui-datagrid/lib/components/checkbox/datagrid-header-checkbox.component.ts","ng://@farris/ui-datagrid/lib/utils/rowid.pipe.ts","ng://@farris/ui-datagrid/lib/utils/format-group-row.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/fixed-left-rows.component.ts","ng://@farris/ui-datagrid/lib/utils/rexplaceX.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-grouprow.directive.ts","ng://@farris/ui-datagrid/lib/utils/show-required-label.pipe.ts","ng://@farris/ui-datagrid/lib/utils/disable-row.pipe.ts","ng://@farris/ui-datagrid/lib/utils/select-row.pipe.ts","ng://@farris/ui-datagrid/lib/utils/field-value.pipe.ts","ng://@farris/ui-datagrid/lib/components/tooltip/cell-tooltip.directive.ts","ng://@farris/ui-datagrid/lib/components/tooltip/tip-message.pipe.ts","ng://@farris/ui-datagrid/lib/components/filter-toolbar/filter-toolbar.component.ts","ng://@farris/ui-datagrid/lib/components/header/header-style.directive.ts","ng://@farris/ui-datagrid/lib/components/auto-height/auto-height.component.ts","ng://@farris/ui-datagrid/lib/utils/row-is-selected.pipe.ts","ng://@farris/ui-datagrid/lib/utils/row-is-checked.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-group-footer-styler.directive.ts","ng://@farris/ui-datagrid/lib/components/auto-height/auto-height.directive.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-row-dblclick.directive.ts","ng://@farris/ui-datagrid/lib/components/footer/datagrid-footer-cell.styler.directive.ts","ng://@farris/ui-datagrid/lib/components/header/drag-drop-column.service.ts","ng://@farris/ui-datagrid/lib/components/header/datagrid-drag-column.directive.ts","ng://@farris/ui-datagrid/lib/components/header/datagrid-drop-column.directive.ts","ng://@farris/ui-datagrid/lib/utils/cell-readonly.pipe.ts","ng://@farris/ui-datagrid/lib/datagrid.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","string","number","boolean","date","time","datetime","enum","fromdata","none","max","min","sum","average","count","GRID_EDITORS","InjectionToken","GRID_VALIDATORS","GRID_FILTER_ROW","GRID_SETTINGS_PANEL","GRID_SETTINGS_SERVICE","GRID_SETTINGS_HTTP","SCROLL_X_ACTION","SCROLL_X_REACH_END_ACTION","SCROLL_X_REACH_START_ACTION","FIXED_LEFT_SHADOW_CLS","CELL_SELECTED_CLS","CELL_EDITING_CLS","SIZE_TYPE","sm","row","header","pager","md","lg","xl","ALLOW_EDIT_CELL_HIGHLIGHT_CLS","datagrid","textarea","textbox","checkbox","datepicker","input-group","select","lookup","numberbox","combolist","combo-lookup","switch","timepicker","language-textbox","enum-editor","initDataGridState","idField","showLineNumber","selections","checkedRows","currentRow","columnsGroup","columns","fitColumns","onlySelectSelf","selectOnCheck","checkOnSelect","pageIndex","pageSize","pagerHeight","checkboxColumnWidth","pagination","virtual","rowIndex","scrollTop","topHideHeight","bottomHideHeight","isScrollChange","sortName","undefined","sortOrder","multiSort","remoteSort","changes","showGroupColumn","ROW_INDEX_FIELD","IS_GROUP_ROW_FIELD","GROUP_ROW_FIELD","IS_GROUP_FOOTER_ROW_FIELD","GROUP_VISIBLE_FIELD","GROUP_LEVEL_FIELD","IgnoreProperties","Utils","uuid","S4","Math","random","toString","substring","keysInData","field","data","split","reduce","obj","key","getValue","safe","resultVal","indexOf","escapeValue","setValue","val","nest","lastObj_1","_fields","c","pop","getMultilingualValue","valObj","localeId","keys","replace","eventPath","evt","path","composedPath","target","window","getParents","node","memo","parentNode","hasDialogOpen","document","body","className","on","el","fn","opts","delegatorFn","matches","addEventListener","options","removeEventListener","off","getBLen","str","getWhenEmptyText","col","EMPTY_INPUT_TEXT","zh-CHS","zh-CHT","en","editor","type","getRowIdByTr","tr","id","getAttribute","getTrDomById","dataid","parentElement","querySelector","DatagridColumnsHelper","getColumnTotal","firstCols","total","forEach","colspan","findUndefinedItem","arr","getColumnFields","aa","colTotal","Array","k","rowspan","columnIsVisible","ins","visible","instance","column","getFields","_cols","map","cols","filter","gridInstance","fields","getFilterEnumOptions","enumSetting","ColumnFilterType","fmt","getEnumText","enumOpts","value1","valueField","textField","v","find","d","join","columnVisibleAsObservable","bindCallback","visibleAsObservable","of","getParentColumns","allCols","_getParents","parentId","parentCol","getChildColumns","_getChilds","childs","splice","child","checkGroupHeaderColumnVisible","_col","_childs","onlyOneColumn","DatagridFacadeService","http","localId","store","BehaviorSubject","virtualRowSubject","gridSizeSubject","Subject","errorSubject","selectRowSubject","unSelectRowSubject","columnResizeSubject","clearSelectionSubject","checkRowSubject","unCheckRowSubject","clearCheckedsSubject","clearAllSubject","checkAllSubject","unCheckAllSubject","selectAllSubject","selectCellSubject","error$","asObservable","selectRow$","unSelectRow$","columnResize$","clearSelections$","checkRow$","unCheckRow$","clearCheckeds$","clearAll$","checkAll$","unCheckAll$","selectAll$","currentCell$","editCell$","EventEmitter","clientSort$","rowAppend$","rowUpdate$","rowDelete$","expandGroupRow","collapseGroupRow","updateCheckboxState$","state$","pipe","state","columnGroup$","switchMap","colgroup","distinctUntilChanged","gridSize$","_a","headerHeight","width","height","rowHeight","data$","vs","index","startIndex","rows","virtualRows","top","bottom","scrolling","difference","first","second","item","includes","differenceBy","a","b","Set","has","_state","cloneDeep","updateVirthualRows","scrolltop","getVirthualRows","updateState","autoHeight","groupRows","flatColumns","groupRows2","mergeCell","enableClientSortForMergeCell","sort","getData","original","originalData","getState","getVirtualState","getPageInfo","initState","initColumns","loadData","updateOriginalData","sortable","sortedData","getCheckedRowsFromSource","resetRow","rowId","_this","origData","origRowData","primaryId","getCurrentRow","updateRow","fetchData","url","get","setTotal","updateProperty","property","setPagination","setScrollTop","isMultiSelect","multiSelect","_isRowSelected","isRowSelected","flag","_canCancelSelectWhenMulti","findIndex","sr","isRowChecked","checkeds","getCheckeds","isCheckAll","allRows","getAllRowsForLive","checkIds","getCurrentPageCheckeds","getSelections","temp_1","findRow","fromDataSource","updateCheckedData","rowid","rowData","item_1","setCheckedRows","ids","checked","checkeds_1","srow","enableMorePageSelect","_clearCheckeds","checkRecord","checkRow","unCheckRow","grid","beforeSelect","subscribe","selectRow","emit","beforeUnselect","unSelectRow","setCurrentPageData","currentPageData","getCurrentPageData","allData","pagerOnServer","disableRow","checkAll","allCheckeds","_checkeds_1","element","selectAll","index_1","findRowIndex","setSelectRow","selectRowForMulti","unSelectRowForMulti","_sr","selectRecord","gridOpts","showCheckbox","beforeCheck","_clearSelections","keepSelect","excludeIds","clearSelections","unCheckRows","t1","clearCheckeds","clearAll","_rows","setMultiSelect","setCheckOnSelect","setSelectOnCheck","setCurrentCell","dr","cellElement","cellRef","currentCell","ControlPanelFeild","getColumn","isLastRow","cancelSelectCell","getCurrentCell","editCell","isEditing","cei","endEditCell","appendRow","Error","pid","newData","refresh","rowUpdateParam","keyID","deleteRow","removeRow","isCellSelected","cellInfo","cc","newState","resize","newSize","resetColumnsSize","fit","useUserSetColumnSize","autoFitColumns","gridWidth","leftFixedWidth","rightFixedWidth","originalTotalWidth","setFitColumnsWidth","updateColumns","restitute","resizeColumns","getGroupColumns","getAllFlatColumns","restColumnWidth","leftFixed","rightFixed","normalColumns","leftFixedCols","getFixedCols","rightFixedCols","normalCols","originalWidth","initColumnsWidth","normalWidth","totalWidth","getColumnIndex","fixed","fast","columnResizeEnd","flatten","fieldName","showBorder","minWidth_1","Number","toFixed","direction","newcols_1","f","offset","lineNumberWidth","getColsWidth","reset","left","isShow","hideCheckbox","hideLineNumber","setSortInfo","orders","updateFieldOrder","order","orderBy","props","colObj","tslib_1.__spread","acc","prop","valA","valB","p1","p2","localeCompare","mergeFields","newOrders_1","newFields_1","clientSort","clearSort","loadFilterData","filterData","hasRowChanges","_changes","appendChanges","_id","acceptChanges","rejectChanges","orgiRow_1","getChanges","getFooterData","footerRow","footer","text","typ","calculation","arrToGroup","items","first_1","shift","g1","groupBy","toGroup","fieldArr","_nextFields","_f","groupRows2Flat","initLevel","parent","results","idfield","groupFieldArr","groupField","expandGroupRows","groupItem","expanded","isPlainObject","level","groupFooter","footerItem","_b","updateGroupFooterData","groupFooterRow","columns_1","groupData","result_1","k_1","showGroupFooter","updateGroupFooter","groupRowId","groupRow","groupFooterRows","columns_2","rows_1","CalculationType","BigNumber","div","setGroupRowsVisible","open","footerRows","setinitialOptions","initialOptions","fieldInfo","title","halign","align","allowGrouping","dataType","Injectable","HttpClient","DatagridService","scorllSubject","scrollX","rowHoverSubject","rowSelectSubject","dataSourceChangedSubject","editCellSubject","endCellEdit","changeCheckedRows","scorll$","scrollX$","x","debounceTime","scrollY$","rowHover$","rowClick$","onDataSourceChange","cellEdit$","endCellEdit$","checkedRowsTotalChanged$","updateEmptyStyle$","showGridHeader","uncheckAll","columnResized","rowHeightChanged","loadVirtualData","showFixedShadow","setSelecedRow","scrollToCurrentRow","columnsChanged","cellContentWrapChanged","onFilterChanged","clearFilter","filterTextChange","toggleFilterRow","closeFilterPanel","refreshFooterData","disableHeader","changeCheckAllStatus","setScrollbarPosition","smartFilterBarExpand","smartFilterDataChange","scrollbarUpdate","footerPositionChanged","styleElement","commonUtils","idService","cellEditorCreated","cellEditorDestory","focusRowChanged","dataloaded","toggleGroupRow$","toggleAllGroupRows$","cssTextCache","onScrollMove","action","dataSourceChanged","onRowHover","mouseEnter","mouseenter","onRowClick","onCellEdit","tdElement","onEndCellEdit","cell","onSelectCell","onCheckedRowsCountChange","onRowHeightChange","onLoadVirtualData","onClearFilter","onFilterTextChange","txt","restoreScrollbarPosition","updateEmptyStyle","getMergeCellInfo","currVal","result","firstVal","j","show","_item","strIndex","getMergeCellInfo0","getMergeCellInfo2","groupKeys","startRowIndex","getMergeCellInfo3","firstField","prevItem_1","getMergeInfo","mergeCellInfo","removeStyleSheet","remove","createStyleElement","styleSheetId","_createStyleSheet","appendCssRules","rules","_appendCssRules","sheet","removeCssRule","ruleName","_removeCssRule","isArray","htmlHead","styleEleId","innerText","createElement","appendChild","styleSheet","allCssText","rules_1","tslib_1.__values","rules_1_1","rule","slice","trim","removedCssRule","_getCssTextBySelector","cssText","_newRule","addRule","insertRule","cssRules","ii","cssRule","selectorText","toLowerCase","deleteRule","removeRule","createConfigKey","gridID","location","host","hash","pathname","href","formCode","menuId","_searchArr","searchObj_1","catchFuncIdKEY","funcId","localStorage","setItem","getItem","IdService","encrypt","getCustomStyle","styler","args","findNextTr","nextTr","dir","getNextElement","getEle","selector","DATAGRID_REST_SERVICEE","DefaultDatagridValidatorMessager","required","minlength","maxlength","email","requriedtrue","pattern","ValidatorMessagerService","getValidatorErrorMessage","validatorName","validators","validator","messager","ddvm","DomHandler","hasClass","classList","from","removeClass","RegExp","findSingle","getOffset","rect","getBoundingClientRect","scrollLeft","getOuterHeight","margin","offsetHeight","style","getComputedStyle","parseFloat","marginTop","marginBottom","getOuterWidth","offsetWidth","marginLeft","marginRight","DatagridFilterService","dfs","localeSer","inject","removeField","validateRowData","conditions","checkAllFieldInRowData","executeFilter","enableSmartFilter","executeSmartFilter","getCompareResult","fieldDataValue","operator","targetValue","parseInt","Compare","Equal","NotEqual","Greater","GreaterOrEqual","Less","LessOrEqual","Like","NotLike","In","getRelationResult","result1","relation","result2","checkAllFieldResult","resultObj","values","fieldValue","columnObj","isMultilingualField","where","operator1","operator2","value2","removeFilterField","convertFilterCondition2String","andText","orText","and","and2","or","lastANDidx","getCompareString","txt2","s2","lbracket","lastIndexOf","resultStr","substr","op","code","convert2FilterArray","condition","filterArr","excludeDataTypes","filterField","rbracket","compare","conditionVal","IsNot","Is","obj2","op2","obj21","checkEnumTypeFilters","enumFilters","enumFilterArr","convertEnumTypeFilter","createColumnFilterOptions","filterTypeOptions","enableOperator","dateFormat","returnFormat","formatter","tye","returnFmt","format","convertSmartFilter2EntityFilter","validateRowData2","checkRowDataWithCondition","FilterField","Value","Relation","_filters","LocaleService","Injector","NgxPaginationModule","NgModule","declarations","imports","CommonModule","exports","providers","PaginationService","SCROLLBAR_CONFIG","Geometry","y","w","h","Position","ScrollbarEvents","ScrollbarConfig","config","ScrollbarDirective","zone","differs","elementRef","platformId","defaults","ro","timeout","animation","configDiff","ngDestroy","disabled","psScrollY","psScrollX","psScrollUp","psScrollDown","psScrollLeft","psScrollRight","psYReachEnd","psYReachStart","psXReachEnd","psXReachStart","ngOnInit","isPlatformBrowser","config_1","runOutsideAngular","setTimeout","PerfectScrollbar","nativeElement","create","diff","ResizeObserver","update","children","observe","eventName","eventType","fromEvent","event","takeUntil","auditTime","ngAfterViewInit","ngOnDestroy","complete","disconnect","clearTimeout","destroy","ngDoCheck","ngOnChanges","isFirstChange","currentValue","previousValue","ps","geometry","prefix","position","absolute","reach","scrollable","contains","scrollTo","speed","animateScrolling","scrollToX","scrollToY","scrollToTop","scrollToLeft","scrollToRight","scrollWidth","clientWidth","scrollToBottom","scrollHeight","clientHeight","scrollToElement","qs","elementPos","scrollerPos","currentPos","cancelAnimationFrame","newValue_1","scrollCount_1","oldTimestamp_1","performance","now","oldValue_1","cosParameter_1","step_1","newTimestamp","PI","round","cos","requestAnimationFrame","Directive","exportAs","NgZone","KeyValueDiffers","ElementRef","Inject","PLATFORM_ID","Optional","Input","Output","ScrollbarComponent","cdRef","states","indicatorX","indicatorY","interaction","scrollPositionX","scrollPositionY","scrollDirectionX","scrollDirectionY","usePropagationX","usePropagationY","allowPropagationX","allowPropagationY","stateTimeout","stateUpdate","usePSClass","autoPropagation","scrollIndicators","right","markForCheck","detectChanges","directiveRef","scrollDeltaX","deltaX","scrollDeltaY","deltaY","checkPropagation","touches","clientX","clientY","merge","mapTo","unsubscribe","preventDefault","stopPropagation","Component","template","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","HostBinding","ViewChild","ScrollbarArrowsComponent","reachX","reachY","scrollbarXActive","scrollbarYActive","hasXScrollbar","hasYScrollbar","scrollMoveTo","$event","ScrollbarModule","DatagridCellEditorDirective","TemplateRef","DatagridColumnDirective","readonly","editable","ngAfterContentInit","ContentChild","SmartFilterToolbarComponent","render","padding","clearFilters","removeFilter","filterChange","sk","destory$","dg","DatagridComponent","dgs","onQuery","filterItem","JSON","parse","onResetFilter","onRemoveFilter","onResize","smartFilterWrapper","Renderer2","EnumFilterControl","enumopts","controltype","enumValues","name","DatagridSmartFilterService","controlData","filterChanged","clearAllFilter","getColumnFilterData","filterControlData","single","showType","showTime","DateFilterControl","filterConditionChanged","ctrlIdx","labelCode","removeCondition","emitRemove","SelectionModeService","dgRef","oldSettings","selectStartEvent","events","selectionMode","removeEvents","registerStopSelectionEvent","toggleMode","enableWindowsSelectionMode","restoreSettings","render2","listen","ctrlKey","shiftKey","unselectable","keyCode","enableSelectable","setAttribute","dgContainer","setStyle","removeAttribute","removeStyle","beforRowClick","param","isSelected","isCtrlKey","isShiftKey","endEditing","focusIndex","focusRowIndex","endIndex","start","end","willCheckIds","getRows","checkRows","currentPagerIds_1","unCheckIDs","checkValues","unSelectIds","zoneClick","cellref","_timer_1","r$","delay","canSelect","selectedRow","rowClick","dblclick","selected","runZoneClick","endRowClick","cd","app","domSanitizer","auther","version","__component_type__","pos","hostCls","useThemes","useHtmlTable","maxHeight","striped","showHeader","headerWrap","showFooter","footerHeight","footerDataFrom","footerPosition","_sizeType","_fit","_fitColumns","_autoFitColumns","scrollBarShowMode","scrollBarOptions","showScrollArrow","resizeColumn","lineNumberTitle","rowHover","clickToEdit","_lockPagination","__pagination","pagerContentTemplate","pagerPos","pagerViewMode","pageList","showPageList","showPageInfo","showPageNumber","pagerLabelSize","showGotoInput","showSelectedList","cellTipTimer","controlPaginationState","_total","enableSelectRow","showAllCheckbox","useBlankWhenDataIsEmpty","emptyDataHeight","emptyMessage","emptyTemplate","emptyComponentType","_footerData","endEditByInvalid","_columns","nowrap","virtualized","virtualizedAsyncLoad","editMode","_editable","enableEditCellStyle","selectOnEditing","editorHeight","hoverRowCls","enableDragColumn","rowGroupPanelHeight","groupSummaryPosition","groupCellColSpan","_groupField","groupFields$","_showRowGroupPanel","AutoColumnWidthUseDblclick","useDefaultFilter","enableFilterRow","remoteFilter","showFilterBar","filterBarHeight","filterRowHeight","selectValue","selectValues","useControlPanel","enableSimpleMode","controlPanelMode","enableScheme","defaultSchemeName","enableSetMultiHeaders","maxMultiHeaders","showConfirmWhenSchemeChanged","closeOtherGridEditor","clearSelectionsWhenDataIsEmpty","enableContextMenu","contextMenus","selectValueChange","checkValuesChange","selectValuesChange","beginEdit","endEdit","cancelEdited","scrollY","pageSizeChanged","pageChanged","loadSuccess","emptyData","enableHighlightCell","checkedRowsDataFromSource","editcellWhenTabKeydwon","beforeClickCell","dblclickRow","selectChanged","unSelect","unSelectAll","scrollYLoad","unChecked","unCheckAll","checkedChange","columnSorted","rowAppended","rowDeleted","rowUpdated","dataChange","lastCellEnterHandler","groupFieldChange","columnMoved","cellClick","resized","_loading","_selectedRow","ds","pagerOpts","editors","footerWidth","clickDelay","resizeColumnInfo","proxyLineEdge","startWidth","startX","subscriptions","realHeaderHeight","modalClickEvent","pending","scrollInstance","ignoreTarget","clientFilterService","_isResized","gridSize","clientFilterChanged","groupRowPanelPlaceholder","smartFilterService","smartFilterResult","smartFilterBarHeight","_active_datagrid_cls","_blured_datagrid_cls","_custom_datagrid_cls","documentBodyMouseDown","farrisInstances","currentPagerData","resizeTimer","debugSer","DATA_CHANGED_TIMER","exitRowEditingWhenBodyClick","formValidations","isFF","_footerRowHeight","trackByRows","onDocumentMouseDown","dgrid","closest","activeDataGrid","indlg","inDialog","currentTargetInDialog","zoneClick_1","isBeBtn_1","isOldBeBtn_1","disableClickEvent_1","pointerEvents","_timer","stopEditingRowIndex_1","closeEdit","unbindDocumentEditListener","callback","tick","localeService","restService","colFormatSer","ColumnFormatService","CommonUtils","FarrisComponentInstanceService","DebugService","perfixStr","WEBAPI_PREFIX_TOKEN","useDebugMode","settingService","setUriPerfixStr","settingsHttp","httpRestService","dataSubscription","beforeLoad","dataSource","cleanDom","setPagerTotal","updateFooterData","nodeName","writeConsole","calculateGridSize","updateAllCheckboxStatus","columnGroupSubscription","cg","colGroup","setFooterHeight","initEditorAndValidator","currentCellSubscription","unbindMoveSelectRowEvent","bindDocumentEditListener","bindDocumentMoveSelectRowEvent","filterChangedSubscription","footerDataSubscription","defineProperty","setFitColumns","restituteColumnsSize","dgPager","totalItems","itemsPerPage","correctColumns","chkeds","initSelectOrChecked","setCurrentPagerData","$data","msg","console","fdata","stringify","footerData","sms","checkFilterStyle","_checkSize","checkOptions","onFilterBarResize","getBrowserType","ff","setHeaderHeight","setPagerHeight","initBeforeEvents","setGridNewSizeWhenFit","add","res","addClass","display","_w","contentRect","_h","_floowW","floor","_floorH","_roundW","_roundH","_ceilW","ceil","_ceilH","footerTemplate","setCellStyle","dgColumns","dgc","checkNowrap","setRowHeight","isSingleClick","headerHeightChange","fh","remote","currentPage","sizeType","uncheckIds","toggleVisibleColumn","checkDragColumns","showRowGroupPanel","st","isMultiHeader","enableSettings","registerGridInstance","checkSortInfo","checkMergeCell","setCheckboxBehavior","initPaginationOptions","checkGroupHeaderColumns","checkGroupRowSetting","checkColumnsType","_defaultSetting","_flatColumns","settings$","getSettings","sets","schemalist","getStateValue","userProfileSetting","err","refreshSelectedData","rd","unsubscribes","unobserve","documentRowKeydownHandler","onClick","closeSelectedList","_editorClickEvent","updatePagerOptions","customStyleKey","renderCustomStyle2","clsName","fh_1","line-height","topFooter","bottomFooter","_footHeight","minFooterRowHeight","querySelectorAll","useSizeType","_rowHeight","key1","key2","rowHeightCSS","_data","chkids","diffIds","checkAllStatus","allDataIDs","newCheckValues","isSame","_cancelColumnFixed","colsCount","rightCols","leftCols","_cols_1","addControlCol","controlCol","cp","columnsIndex","valign","bind","gridHeaderEl","fixedLeftHeader","fixedRightHeader","tableEls","heights","minHeight","hh","ph","reloadData","useColumnSettingWidth","rebuildFilterBar","_useColumnSettingWidth","Editors","ed","_validators","outerHeight","sta","getElementPadding","border","getElementBorderWidth","setNewSize","beforeUncheck","beforeSortColumn","beforeEdit","afterEdit","isActived","targetName","selectNextRow","selectPrevRow","bindEditListenerInModal","modalElement","_fmodal","documentCellKeydownHandler","onKeyDownEvent","documentCellKeydownEvents","documentCellClickHandler","docuemntCellClickEvents","onSpaceHandler","onEnterHandler","selectNextCell","ss","isRowEditing","isCellEditing","editorTemplate","endRowEdit","getEditors","validation","trId","trDom","tdDom_1","trDomL","trDomR","cellEditorRef","hideCover","stopEdit","editRow","beforeEditEvent","click","cells","cells_1","toArray","cellEditor","componentRef","inputElement","focus","bindRowEditorKeydownEvent","canEnd","currentEditor","form","rowForm","markAsTouched","invalid","afterEditEvent","closeAllCellEditor","formControl","cancelEdit","unbindRowEditorKeydownEvent","rowEditTabKeydwonEvent","which","td","tr_1","nextTd_1","nextElementSibling","hasNoEditor","_td","editNextRow","nextRowid","tds","tdIdx_1","nextTrEdit","documentRowEditKeydownHanlder","documentClickEndRowEditHandler","_clientFilter","excuteLocaleFilter","allClientData","_conditions","checkFilterValues","smartFilterData","entityFilters","onClearSmartFilters","onRemoveSmartFilterItem","fieldCode","smartFilterEl","onSmartFilterChange","clearCondition","isFilterChange","_loadData","keepSortState","keepScrollPosition","loading","closeLoading","lst","lastScrollTop","lsl","lastScrollLeft","showLoading","params","reload","getGroupRow","_allrows","setPageIndex","setPageList","onPageChange","lockPagination","onPageSizeChange","onRemoveSelectedItem","onClearSelectedItem","replacePX2Empty","strNum","renderCustomCls","cls","dom","renderCustomStyle","cs","cssRuleText","cssClassName","paddingTop","paddingLeft","paddingBottom","paddingRight","borderTopWidth","borderBottomWidth","borderRightWidth","borderLeftWidth","formatData","getFieldValue","canOperateCheckbox","findNextTd","nextColumn","leftTrID","rightTrID","_tr","findNextCell","col_1","cellIndex","currCellEl","tdSelector","prevTr","previousElementSibling","nextTd","selectCell","tdSeletor","_next","leftTrSelector","nextTd_2","_beforeSelectRow$","beforEventParam","b$","_b$","id_1","id_2","removeCellSelectedCls","selectedCell","toCurrentPosition","_selectRow","selectAllRows","cancelSelected","checkAllRows","emitUnCheckAll","getResizeProxyPosLeft","dgRect","tdLeft","deltaEdge","pageX","toggleResizeProxy","resizeProxyBg","resizeProxy","onColumnResizeBegin","proxy","proxyPosLeft","top_1","bottomH","onColumnResize","onColumnResizeEnd","newColWidth","moveLeft","saveUserConfig","updateFixedColumnCssForFastMode","sizeToContent","th","longestText","longTextArea","innerHTML","w1","maxWidth","thMinWidth","_updateRow","currendRowData","patchValue","refreshRow","validateRow","insertRow","scrollInfo","_setColumnReadonly","setColumnReadonly","allCols_1","origianlColSpan","parents","_colspan_1","showColumn","hideColumn","updateColumn","columnObject","detectChange","setColumnFormatter","updateColumnFormatterOptions","formatterOptions","colFormatter","setColumnTitle","onColumnSorted","orders_1","updateSortInfo","newSortName","newSortOrder","sortFields","sortOrders","_sortFields","_sortOrders","nField","nIndex","colOrder","newOrder","_order","showControlPanel","checkSettingHttp","befRepository","settings","_sortName","_sortOrder","sortInfo","viewColumns","columnFormat","multiHeaders","viewCols","gridInitOptions","getMultiHeaderColumns","updateColumnFormat","newVisibleOrderColumns","setCurrentConfigs","offsetParent","tips","cellIsReadOnly","readOnly","groupFieldChanged","newGroupField","removeGroupField","delIdx","clearAllGrouppingField","setGroupFields","groupFields","active","grids","onDatagridContainerFocus","setShadowColumnForFastMode","fixedLeft_1","fixedRight","leftWidthTotal_1","rightWidthTotal_1","cssarr","css","va","verticalAlign","ha","horizontalAlign","colIndex","stylecss","groupRowIndex","expand","expandAllGroupRows","collapseAllGroupRows","dateFilters","contrlData","ctrl","less","endValue","getActionColumn","designerColumns","hideActionColumn","czl","showActionColumn","applyNewSize","sizeConfig","defautlValues","isNaN","minRowHeight","min-height","changeDetection","ChangeDetectionStrategy","OnPush","ApplicationRef","DomSanitizer","ContentChildren","HostListener","DatagridSmartFilterComponent","filterPanelService","smartFilterSer","smartFilterDataChanged$","removeFilter$","clearAllFilter$","smartFilterEvents","control","filterPanelRef","hidePanel","getFilterData","placeHolder","startValue","getPanelPosition","pageY","targetRect","moveArrow","innerWidth","hideFilterPanel","valueText","clearColumnFilter","showFilterPanel","showPanel","panelExtendTemplate","sortTmp","localStorageKey","arrowEl","filterSubmit","onSort","FilterPanelService","decorators","DatagridSmartFilterModule","FilterPanelModule","LocaleModule","forRoot","FormatCellDataPipe","cfs","injector","LOCALE_ID","transform","isPassword","formatterFn","thousand","precision","dateRange","dateRangeDatesDelimiter","locale","getDatagridInstance","dataGrid","utils","setFooterCellTitle","setPlaceHolderWhenEnableEditCellStyle","resoultStr","isFooter","elRef","span","Pipe","pure","DatagridBodyComponent","psConfig","swipeEasing","minScrollbarLength","handlers","suppressScrollY","deltaTopHeight","wheelWidth","_fixedRightScrollLeft","maxScrollLeft","showRightShadow","scrollBarMode","visibleContextMenus","currentRowId","_hoverRowIndex","minRowBuffer","vScrollDir","rowsCache","lastRenderedScrollTop","lastRenderedScrollLeft","prevScrollTop","prevScrollLeft","blankTopHeight","blankBottomHeight","cellContentFormatter","__triggerBodyClickEvent","destroy$","_onMouseClick","_scrollTimer","_scrollXTimer","resizeObserverTimer","_clickCellWeakMap","WeakMap","onBeforeShowContextMenu","contextMenuDom","rowID","rowData_1","focusTargetWidth_1","viewportW","colInfo_1","beforeShowContextMenus$","beforeShowContextMenus","showContextMenu","customData","focusTargetWidth","ngZone","columnFormatService","rowIdx","listenSubjects","s1","updateContainerSize","s10","s3","checkScrollbarPosition","s5","viewScrollContainer","onMouseClick","updateRowHeight","setPositionTop","bodyStyle","getBodyStyle","isDiffrentDataSource","isSameLength","onDataChanged","destroySubscriptions","updateCanvasHeight","scrollbarRef","rightWidth","ngAfterViewChecked","toTop","scrollBar","scrollElRef","viewportH","getViewPortHeight","renderData","sub","gridSizeSubscribe","oldWidth_1","canvasHeight","getCanvasHeight","updateColumnSize","fixedRightScrollLeft","keepScrollbarPosition","columnResizeSubscribe","selectRowSubscribe","unselectRowSubscribe","prevRow","selectAllSubscribe","checkRowSubscribe","checkedRowsChanged","clearSelectionsSubscribe","uncheckRowSubscribe","checkAllSubscribe","clearCheckedsSubscribe","updateScrollPosition","trID","oldWidth","buildCustomCellStyle","groupRowStateChanged","groupRowExpandUpdate","isExpand","gr","colsWidth","dgContainerWidth","allColsWidth","setFixedRightWidth","rightTrs","leftTrs","fixedRightEl","fixedLeftEl","trs","mainArea","updateCellStyle","_rd","getTrDomHeight","list","trdoms","t2","t3","updateRowHeight2","removeRowHeightCls","leftTr","rightTr","heightClsName_1","WORDWRAP_ROW_HEIGHT_CLS","minRowHeightClsName_1","_addRowHeightClsToDom","trdom","addRowHeightCls","_cls","heightClsName","trDomId","dgBody","leftTrId","rightTrId","_arr","rtr","ltr","fd","l","realWidth","onScrollToX","onScrollToY","handleScroll","onPsXReachStart","onPsXReachEnd","isChecked","toggleGroupRow","viewPortHeight","allRowsHeight","itemsCount","getRowFromPosition","getVisibleRange","viewportTop","viewportLeft","leftPx","rightPx","getRenderedRange","range","buffer","minBuffer","canvasWidth","renderRows","dataLength","rowNode","cellColSpans","cellNodesByColumnIdx","cellRenderQueue","removeRowFromCache","cleanupRows","rangeToKeep","showYscrollbar","hasY","onClickScrollArrow","detectchanges","rendered","_handleScroll","viewportContainer","maxScrollDistanceY","maxScrollDistanceX","vScrollDist","abs","hScrollDist","_scrollTo","dx","dy","newScrollTop","curT","Date","getTime","lastT","runTdClick","rowSelected","runSelectRow","dblclickTimer","observers","delete","set","gridCellData","rowInfo","edit","tdEl","rowisSelected_1","DatagridRowHoverDirective","dgb","_mouseenter","_mouseleave","onmouseenter","capture","onmouseleave","setRowHoverCls","hover","leftTableDom","rightTableDom","centerTableDom","method","trSelector","forwardRef","DatagridRowDirective","fb","drHover","clickHandler","FormGroup","documentRowDblclickEvent","columnsChangedSubscription","datasourceChangedSubscription","createControl","s$","updateCellEmptyStyle","s1$","s2$","getRowPosition","drl","drr","rowStyler","trStyle","initFormControl","group","controls","createFormControl","addControl","bindValidations","validations","Validators","minLength","maxLength","requiredTrue","vfn","vr","centerTr","leftTrDom","rightTrDom","heightSizeList","rowIsDisabled","emptyicon_cls","colVal","fmtVal","updateCellEmptyText","FormBuilder","Self","DatagridCellComponent","descendants","GridCellEditorDirective","resolver","container","timer","createCellEditor","editorRef","editorType","factory","resolveComponentFactory","createComponent","controlId","updateControlValue","changeDetectorRef","changeDetector","destroyed","emitEvent","hide","ComponentFactoryResolver","ViewContainerRef","SafePipe","sanitizer","dangerWords","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","hasDanger","lastColumn","_isEditing","controlHeight","_cellEditorTemplate","cellDblClick","cellContext","cellStyler","safePipe","canEdit","cfr","formGroup","input","templateRef","initCellTemplateContext","tools","fieldClsName","cellContainer","cellSubscription","rowUpdateSubscription","removeCls","updateValue","rowid_1","Default","read","DatagridCellEditableDirective","cellEditorCreatedSubscription","cellEditorDestorySubscription","validMessageEle","emitBeginEdit","bindEditorInputEvent","unBindEditorInputEvent","removeValidMessage","initCellEvent","setCellClsWithEditorType","handler","celldblclick","onDblClickCell","closeEditingCell","onClickCell","openCellEditor","clickTimer","proxyClick","excludeTarget","canUnselect","trCLS","cellclick","bindCellEventSubscription","noop","isDifferentCell","isReadonly","getReadonlyValue","dc","_cellEditorRef","editType","showDialog","showValidMessage","isValid","message","parentContainver","box","msgWrap","background","color","offsetTop","offsetLeft","zIndex","fontSize","lineHeight","append","domName","blurFn","onBlur","blur","_col_","cellEndEdit","val_1","_rid","rowIndex_1","cancelCellEditing","ceRef","editorInputKeydownEvent","onKeyDownForInput","findLastEditCell","altKey","updateChecked","lastEditCell","enterParam","gird","lastCell","lastRow","movePrevCellAndEdit","moveNextCellAndEdit","selectNextRowAndEditCell","clearCellSelectedClass","moveScrollbar","tdPosLeft","containerWidth","tdRect","scrollContainer","psContainer","scrollbarXLeft","tdPosTop","fieldIndex","tagName","firstEditor","cellFieldName","cleanOtherEditorIcon","DatagridRowsComponent","hasFixedColumns","isGroupRow","isGroupFooter","groupLevelField","filterConditions","listenEvent","_s3","_s4","_s5","_row","scrollToCurrentRowSubscription","scrollToFirstSelectedRow","_toggleGroupRow","toggleAllGroupRows","unSubscriptions","getGroupColumn","trackByField","isElementInViewport","_elementIntoView","scrollIntoViewIfNeeded","scrollIntoView","block","inline","currentTrTop","mergeInfo","showCell","getRowSpan","getGroupSummaryData","groupId","TextboxEditorComponent","DatagridHeaderComponent","wrapHeader","scrollbarMode","rightFixedColumnWidth","normalColumnWidth","showOverlay","disableSort","showShadowCls","hasFixedLeftColumns","dfrs","headerColumnsTable","fixedLeft","setFixedColumnPosition","_chkall","checkedsCount","isIndeterminate","chk","indeterminate","_checked","updateStatus","getRightFixedColWidth","setHeaderPosition","getLineNumberTitle","headerCellHeight","filterRowCls","isShowShadow","fixedLeftWidth","isColspan","isdatafield","_iscolspan","onRowNumerColumnDblClick","rntd","maxRowNumber","onSortColumnClick","_onSortClick","FilterRowCreateDirective","vc","headeRef","filterRowType","filterRowRef","clearFilterValue","rebuild","createFilterRow","_createFilterRow","columnsData","cf","conditionChange","_currentConditionsString","removedFields","mergeFilterConditions","DatagridResizeColumnDirective","dh","ngzone","isEnable","resizer","mouseUp$","resizerMouseDownListener","onMouseDown","onDblClickHandler","thRef","resizable","bindDocumentEvents","documentMouseMoveListener","onMouseMove","documentMouseUpListener","onMouseUp","unbindDocumentEvents","dblclickListener","DatagridFooterComponent","scrollEvents","renderFooterStyle","setFooterPosition","scrollXSubscription","footerBody2","footerBody","positionBottom","footerContainer","positionTop","footerStyler","trStyleAndCls","cssRuleID","cssRuleId2","cssRuleId3","DatagridPagerComponent","maxSize","directionLinks","autoHide","responsive","previousLabel","nextLabel","locked","selectedData","viewMode","contentTemplate","pageChange","pageSizeChange","removeSelectedItem","clearSelectedItem","styles","opacity","mouseInSelectedList","openSelectedList","selectionDataChange$","overLayService","notifySer","NotifyService","OverLayHiddenService","paginationDirective","getPageSize","getTotalItems","pc","listenCheckDataChanged","lockedStyles","lock","unlock","onMouseEnter","selectedListContainer","isInModal","registerMouseEvent","selectItemPanel","destory","onDelSelectedItem","onClearSelected","onSelectListPanelClose","DataGridLoadingComponent","PagerSelectedListComponent","close","clear","trackByFn","onClose","onRemoveClick","onClearClick","SelectedItemPipe","DatagridErrorHandler","handleError","ɵs","DatagridCheckboxComponent","checked$","changeCheckedStatus","rid","_setcheckrows","handleClick","canUncheck","canCheck","status","DatagridHeaderCheckboxComponent","RowDataIdPipe","FormatGroupRowPipe","valueField_1","enumItem","FixedLeftRowsComponent","toggle","selectedRows","listenSubject","_setselectrow","ReplaceXPipe","_i","DatagridGroupRowDirective","groupStyler","ShowRequiredStarPipe","DisableRowPipe","disableRowFn","SelectedRowPipe","FieldValuePipe","rowdata","DatagridCellTooltipDirective","tipMode","showTipTimer","_mouseclick","enable","onMouseLeave","fromElement","cellTiptimer","getTextContainer","donotShowTips","tdWidth","tagetSty","txtWidth","getTextWidth","font","_width","removeChild","cellEl","tipWidth","tipHeight","boxEl","elSize","getBoxSizeObj","minWidth","targetTop","targetLeft","changeTooltipPosition","arrow","tooltipSize","getTooltipSize","innerHeight","textContainer","overflow","updateArrowPosition","elOffset","halfHeight","styleClass","tooltipCls","tooltipStyleClass","tooltipArrow","tooltipText","wordBreak","textAlign","positionStyle","getThemeCls","getWindowSize","boxSize","tooltip","winSize","elLeft","elRight","toolTipTextWidth","CellTootipMessagePipe","showTips","getCellTooltipContent","tipContent","DatagridFilterToolbarComponent","empty","filterText","openFilterPanel","showExpand","enableFilterSetting","windowResizeHandler","filterToolbarRef","actionW","toolbarWidth","filterPanelTextRef","filterChangeSubscription","updateExpandState","bindEvent","filterFields","bindFilterFieldHandler","dropdownFilterFields","isShowExpand","filterTextContainerWidth","filterTextRealWidth","refreshFilter","showFilterTextPanel","HeaderStyleDirective","groupHeader","renderCss2Element","tipEl","headerStyler","renderStyle","targetEl","styleObj","clskey","tdClskey","bg","_bgcolor","tdClskey2","background-color","AutoHeightComponent","RowIsSelectedPipe","RowIsCheckedPipe","GroupFooterRowStylerDirective","buildCustomGroupFooterRowStyle","groupFooterStyler","cs_1","AutoHeightDirective","_dgb","_updateDatagridHeight","wheelHeight","updateDatagridHeight","wh","dgHeight","gridContainerEl","DatagridRowDblClickDirective","dblclickRowEvent","groupRowid","groupIndex","FooterCellStylerDirective","setGroupFooterCellStyle","rowdataid","_customStyles_1","DragDropColumnService","moveItem","newIndex","removedIndex","removedItem","backupColumns","providedIn","smoothDnd","constants","wrapperClass","animationClass","SmoothDnDForHeader","dropHandler","dropHandlers","reactDropHandler","wrapChild","DragColumnDirective","dndSer","enableDrag","groupName","orientation","behaviour","dragHandleSelector","dragClass","dropPlaceholder","getGhostParent","getChildPayload","shouldAcceptDrop","sourceContainerOptions","payload","onDropReady","dropResult","run","onDrop","onDragEnter","onDragStart","info","onDragEnd","initDnD","disposeDnd","dispose","groupColumns","middle","addedIndex","currIndex","targetColumn_1","realTagetIndex","moveColumn","newColumns","smoothDnD","DropColumnDirective","getGroupFields","newGroupFields","some","CellIsReadonlyPipe","DatagridModule","ngModule","FormsModule","ReactiveFormsModule","HttpClientModule","PaginationModule","DataColumnModule","NotifyModule","SimpleFilterModule","FarrisContextMenuModule","FarrisCommonModule","provide","ErrorHandler","useClass","useValue","ɵ0","entryComponents"],"mappings":"wrDA6BO,IAAIA,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,YAkFzB,SAASQ,EAAOC,EAAGV,GACtB,IAAIW,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBI,EAAYC,EAA3BhB,EAAIY,EAAEL,KAAKI,GAAOM,EAAK,GAC3B,IACI,WAAc,IAANhB,GAAgBA,KAAM,MAAQc,EAAIf,EAAEkB,QAAQC,MAAMF,EAAGG,KAAKL,EAAEM,OAExE,MAAOC,GAASN,EAAI,CAAEM,MAAOA,GACjC,QACQ,IACQP,IAAMA,EAAEI,OAASP,EAAIZ,EAAU,YAAIY,EAAEL,KAAKP,GAE1D,QAAkB,GAAIgB,EAAG,MAAMA,EAAEM,OAE7B,OAAOL,EAGJ,SAASM,IACZ,IAAK,IAAIN,EAAK,GAAIjB,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CiB,EAAKA,EAAGO,OAAOd,EAAOR,UAAUF,KACpC,OAAOiB,SCRPQ,OAAA,EACAC,OAAA,EACAC,QAAA,EACAC,KAAA,EACAC,KAAA,EACAC,SAAA,EACAC,OAAA,EACAC,SAAA,mLAsDAC,MAAA,EAEAC,IAAA,EAEAC,IAAA,EAEAC,IAAA,EAEAC,QAAA,EAEAC,MAAA,2GAsBJ,ICtNaC,EAAe,IAAIC,EAAAA,eAAe,4BAClCC,EAAkB,IAAID,EAAAA,eAAe,+BACrCE,EAAkB,IAAIF,EAAAA,eAAe,yCAErCG,EAAsB,IAAIH,EAAAA,eAAe,4CACzCI,EAAwB,IAAIJ,EAAAA,eAAe,oCAC3CK,EAAqB,IAAIL,EAAAA,eAAe,kCAGxCM,EAAkB,YAOlBC,EAA4B,cAC5BC,EAA8B,gBAK9BC,EAAwB,+BAOxBC,EAAoB,2BAEpBC,EAAmB,0BAGnBC,EAAY,CACrBC,GAAI,CACAC,IAAK,GACLC,OAAQ,GACRC,MAAQ,IAEZC,GAAI,CACAH,IAAK,GACLC,OAAQ,GACRC,MAAQ,IAEZE,GAAI,CACAJ,IAAK,GACLC,OAAQ,GACRC,MAAQ,IAEZG,GAAI,CACAL,IAAK,GACLC,OAAQ,GACRC,MAAQ,KAKHI,EAAgC,CACzCC,SAAU,2BACVC,SAAU,gBACVC,QAAS,eACTC,SAAU,gBACVC,WAAY,kBACZC,cAAe,mBACfC,OAAQ,iBACRC,OAAQ,cACRC,UAAW,iBACXC,UAAW,iBACXC,eAAgB,iBAChBC,SAAQ,cACRC,WAAY,kBACZC,mBAAoB,wBACpBC,cAAe,oBCmBNC,EAAyC,CAClDC,QAAS,KACTC,gBAAgB,EAChBC,WAAY,GACZC,YAAa,GACbC,WAAY,KACZC,aAAc,KACdC,QAAS,GACTC,YAAY,EACZC,gBAAgB,EAChBC,eAAe,EACfC,eAAe,EACfC,UAAW,EACXC,SAAU,GACVC,YAAa,GACbC,oBAAqB,GACrBC,YAAY,EACZC,QAAS,CACLC,SAAU,EACVC,UAAW,EACXC,cAAe,EACfC,iBAAkB,EAClBC,gBAAgB,GAEpBC,SAAUC,UACVC,UAAWD,UACXE,WAAW,EACXC,YAAY,EACZC,QAAS,KACTC,iBAAiB,GAyBRC,EAAkB,gBAElBC,EAAqB,YAErBC,EAAkB,sBAElBC,EAA4B,mBAC5BC,EAAsB,oBACtBC,EAAoB,kBA4BpBC,EAAmB,CAC5B,YACA,MACA,cACA,kBACA,aACA,eACA,mBACA,gBACA,iBACA,YACA,eACA,KACA,YACA,WACA,oBACA,UACA,gBACA,sBACA,eACA,cACA,eACA,gBACA,aACA,cACA,WACA,MACA,YACA,cACA,UACA,MACA,eACA,UACA,KACA,UACA,kBACA,gBACA,iBACA,mBACA,eACA,SACA,sBACA,cACA,gBACA,eACA,cACA,WACA,aACA,UACA,kBACA,sBACA,cACA,cACA,gBACA,KACA,aACA,iBACA,UACA,cACA,YACA,gBACA,MACA,oBACA,qBACA,iBACA,qBACA,gBACA,cACA,aACA,YACA,WACA,cACA,OACA,qBACA,eACA,uBACA,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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-11 09:52:46\r\n * @Company: Inspur\r\n * @Version: v0.0.1\r\n */\r\nimport { ComponentRef, TemplateRef } from '@angular/core';\r\nimport { ColumnFormatter } from '@farris/ui-common/column';\r\nimport { DatagridValidator } from './datagrid-validator';\r\nimport { Compare } from '@farris/ui-common/types';\r\nimport { ComponentType } from '@angular/core/src/render3';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nexport interface CustomStyle {\r\n    cls?: string;\r\n    style?: {\r\n        [key: string]: string;\r\n    };\r\n}\r\n\r\nexport type MoveDirection = 'left' | 'right' | 'up' | 'down';\r\ntype TooltipContentFn = (value: any, rowData: any, column: any) => string;\r\ntype TooltipContent = string | TooltipContentFn;\r\nexport type HeaderStyleFn = (column: DataColumn) => CustomStyle;\r\ntype HeaderStyle = string | { [cssKey: string]: string } | HeaderStyleFn;\r\n\r\ntype ColumnFormatterFn = (value, rowData, rowIndex) => any;\r\ntype ColumnFormatterType = ColumnFormatterFn | ColumnFormatter;\r\n\r\n\r\nexport interface CellContext {\r\n    field: string,\r\n    rowIndex: number,\r\n    rowData: any,\r\n    column: any,\r\n    instance: any,\r\n    formGroup: FormGroup,\r\n    tools: any\r\n}\r\n\r\nexport interface ICellTemplateComponent {\r\n    ctx: Partial<CellContext>,\r\n    bindingContext?: any;\r\n}\r\n\r\nexport type CellTemplateFn = () => ComponentType<ICellTemplateComponent> | ComponentRef<ICellTemplateComponent>;\r\nexport type CellTemplateRef = ComponentType<ICellTemplateComponent> | ComponentRef<ICellTemplateComponent>;\r\n\r\nexport interface DataColumn {\r\n    dataType?: string;\r\n    id?: string;\r\n    parentId?: any;\r\n    field: string;\r\n    title: string;\r\n    width: number;\r\n    /** è®°å½åå§å®ä¹å®½åº¦ */\r\n    originalWidth?: number;\r\n    /** æ é¢å¯¹é½æ¹å¼ */\r\n    halign?: 'left' | 'center' | 'right';\r\n    /** ææ¬å¯¹é½æ¹å¼ */\r\n    align?: 'left' | 'center' | 'right';\r\n    /** åç´å¯¹é½æ¹å¼ */\r\n    valign?: 'top' | 'middle' | 'bottom';\r\n\r\n    formatter?: ColumnFormatterType;\r\n    styler?: (value, rowData, rowIndex) => CustomStyle;\r\n    /** è¡¨å¤´èªå®ä¹æ ·å¼ */\r\n    headerStyler?: HeaderStyle;\r\n    /** å·¦ä¾§è¾¹è· */\r\n    left?: number;\r\n    /** å³ä¾§è¾¹è· */\r\n    right?: number;\r\n    /** æ¯å¦åºå® */\r\n    fixed?: 'left' | 'right' | 'center';\r\n    /** æ¯å¦æ¾ç¤º */\r\n    visible?: boolean | any;\r\n    /** åªè¯» */\r\n    readonly?: boolean | any;\r\n\r\n    editor?: GridEditor;\r\n    /** ååæ ¼èªå®ä¹æ¨¡æ¿ */\r\n    template?: TemplateRef<any>;\r\n    /** è¡¨å³æ¨¡æ¿ */\r\n    headerTemplate?: TemplateRef<any>;\r\n    /** ç¼è¾å¨æ¨¡æ¿ */\r\n    editorTemplate?: TemplateRef<any>;\r\n    /** é¼ æ ç§»å¨è³ååæ ¼åï¼æ¾ç¤ºæ¬æµ®æ¶æ¯ */\r\n    showTips?: boolean;\r\n    /** ååæ ¼æç¤ºæ¨¡å¼ï¼\r\n     *  allwaysï¼ é¼ æ æ»è¿å³æ¾ç¤º\r\n     *  auto: ååæ ¼å®½åº¦ä¸å¤æ¶æä¼æ¾ç¤º\r\n     */\r\n    tipMode?: 'allways' | 'auto';\r\n    tipContent?: TooltipContent;\r\n    tipOptions?: any;\r\n    /** True to allow the column can be sorted. */\r\n    sortable?: boolean;\r\n    order?: 'asc' | 'desc';\r\n    sorter?: (r1: any, r2: any) => 0 | 1 | -1;\r\n    /** True to allow the column can be resized. */\r\n    resizable?: boolean;\r\n    rowspan?: number;\r\n    /** ååå¹¶ */\r\n    colspan?: number;\r\n    /** ååå¹¶åå§å¼  */\r\n    origianlColSpan?: number;\r\n    index?: number;\r\n    footer?: GridFooterRow;\r\n    /** åè®¸åç»ï¼é»è®¤ä¸º true */\r\n    allowGrouping?: boolean;\r\n    groupFooter?: GridFooterRow;\r\n    validators?: DatagridValidator[];\r\n    // è¿æ»¤è¡\r\n    filter?: ColumnFilter | any;\r\n    /** æ¯å¦å¤è¯­å­æ®µ */\r\n    isMultilingualField?: boolean;\r\n\r\n    /** ç©ºæ ¼é®ååºåè°å½æ° */\r\n    onSpaceHandler?: (e) => any;\r\n    /** åè½¦ååºåè°å½æ° */\r\n    onEnterHandler?: (e) => any;\r\n\r\n    componentType?: CellTemplateFn;\r\n    headerComponentType?: CellTemplateFn;\r\n    /** ç±datagridæ¥ç®¡click äºä»¶ï¼é»è®¤ä¸º true */\r\n    proxyClick?: boolean;\r\n}\r\n\r\nexport enum ColumnFilterType {\r\n    string = 0,\r\n    number = 1,\r\n    boolean = 2,\r\n    date = 3,\r\n    time = 4,\r\n    datetime = 5,\r\n    enum = 6,\r\n    fromdata = 7\r\n}\r\n/** Client Filter Type */\r\nexport interface FilterCondition {\r\n    operator1?: Compare;\r\n    value1?: any;\r\n    relation?: 'and' | 'or' | '';\r\n    operator2?: Compare;\r\n    value2?: any;\r\n}\r\n\r\nexport interface ColumnFilter {\r\n    type?: ColumnFilterType;\r\n    enableOperator?: boolean;\r\n    options?: any;\r\n}\r\n\r\nexport interface GridEditor {\r\n    type: string;\r\n    options?: any;\r\n    validators?: DatagridValidator[];\r\n}\r\n\r\nexport interface ColumnGroup {\r\n    /** å·¦ä¾§åºå®åæ»å®½åº¦ */\r\n    leftFixedWidth?: number;\r\n    /** å·¦ä¾§åºå®åéå */\r\n    leftFixed?: DataColumn[];\r\n    /** éåºå®åéå */\r\n    normalColumns?: DataColumn[];\r\n    /** å³ä¾§åºå®åéå */\r\n    rightFixed?: DataColumn[];\r\n\r\n    columns?: DataColumn[];\r\n    /** å³ä¾§åºå®åå®½åº¦ */\r\n    rightFixedWidth?: number;\r\n    /** æ­£å¸¸å®½åº¦ */\r\n    normalWidth?: number;\r\n    /** ææåå®½åº¦ä¹å */\r\n    totalWidth?: number;\r\n    /** ç¨æ·è®¾ç½®çåå®½ä¹å */\r\n    originalTotalWidth?: number;\r\n}\r\n\r\nexport interface PaginationInfo {\r\n    enable?: boolean;\r\n    pageList?: number[];\r\n    pageSize?: number;\r\n    pageIndex?: number;\r\n    total?: number;\r\n}\r\n\r\nexport enum CalculationType {\r\n    /** æ  */\r\n    none = -1,\r\n    /** æå¤§å¼ */\r\n    max = 0,\r\n    /** æå°å¼ */\r\n    min,\r\n    /** æ±å */\r\n    sum,\r\n    /** å¹³åæ° */\r\n    average,\r\n    /** æ»è®°å½æ° */\r\n    count\r\n}\r\n\r\nexport interface GridFooterRow {\r\n    options?: {\r\n        /** è®¡ç®ç±»å */\r\n        calculationType?: CalculationType,\r\n        /** éæææ¬ï¼ç´æ¥éå å°TD ä¸­ */\r\n        text?: string;\r\n    };\r\n    /** ææ¬å¯¹é½æ¹å¼ */\r\n    align?: 'left' | 'center' | 'right';\r\n    /** æ°æ®æ ¼å¼å */\r\n    formatter?: (value, rowData, rowIndex) => any | ColumnFormatter;\r\n    /** ååæ ¼æ ·å¼ */\r\n    styler?: (value, rowData, rowIndex) => CustomStyle;\r\n    rowspan?: number;\r\n    colspan?: number;\r\n    visible?: boolean;\r\n}\r\n\r\n\r\nexport const defaultPaginationInfo: PaginationInfo = {\r\n    enable: true,\r\n    pageIndex: 1,\r\n    pageSize: 10\r\n};\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-11 10:48:38\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nimport { InjectionToken } from '@angular/core';\r\nexport const GRID_EDITORS = new InjectionToken('Farris DataGrid Editors.');\r\nexport const GRID_VALIDATORS = new InjectionToken('Farris DataGrid Validators.');\r\nexport const GRID_FILTER_ROW = new InjectionToken('Farris DataGrid Filter-Row Component.');\r\n\r\nexport const GRID_SETTINGS_PANEL = new InjectionToken('Farris DataGrid Setting Panel Component.');\r\nexport const GRID_SETTINGS_SERVICE = new InjectionToken('Farris DataGrid Setting Service.');\r\nexport const GRID_SETTINGS_HTTP = new InjectionToken(' Datagrid Settings HttpClient.');\r\n\r\nexport const SCROLL_Y_ACTION = 'psScrollY';\r\nexport const SCROLL_X_ACTION = 'psScrollX';\r\nexport const SCROLL_UP_ACTION = 'psScrollUp';\r\nexport const SCROLL_DOWN_ACTION = 'psScrollDown';\r\nexport const SCROLL_LEFT_ACTION = 'psScrollLeft';\r\nexport const SCROLL_RIGHT_ACTION = 'psScrollRight';\r\nexport const SCROLL_Y_REACH_END_ACTION = 'psYReachEnd';\r\nexport const SCROLL_Y_REACH_START_ACTION = 'psYReachStart';\r\nexport const SCROLL_X_REACH_END_ACTION = 'psXReachEnd';\r\nexport const SCROLL_X_REACH_START_ACTION = 'psXReachStart';\r\n\r\nexport const DATAGRID_SETTING_FIELDNAME = '_DATAGRID_CONTROL_PANEL_';\r\n\r\n/** å·¦ä¾§åºå®åé´å½±æ ·å¼åç§° */\r\nexport const FIXED_LEFT_SHADOW_CLS = 'f-datagrid-fixed-left-shadow';\r\nexport const FIXED_RIGHT_SHADOW_CLS = 'f-datagrid-fixed-right-shadow';\r\n\r\nexport const ROW_HOVER_CLS = 'f-datagrid-row-hover';\r\n\r\nexport const ROW_SELECTED_CLS = 'f-datagrid-row-selected';\r\n\r\nexport const CELL_SELECTED_CLS = 'f-datagrid-cell-selected';\r\n\r\nexport const CELL_EDITING_CLS = 'f-datagrid-cell-editing';\r\n\r\n/** è¡é«å°ºå¯¸å®ä¹ */\r\nexport const SIZE_TYPE = {\r\n    sm: {\r\n        row: 29,      // è¡é«\r\n        header: 35,   // è¡¨å¤´è¡é«\r\n        pager:  40    // åé¡µæ¡é«åº¦\r\n    },\r\n    md: {\r\n        row: 36,\r\n        header: 40,\r\n        pager:  44\r\n    },\r\n    lg: {\r\n        row: 46,\r\n        header: 40,\r\n        pager:  44\r\n    },\r\n    xl: {\r\n        row: 60,\r\n        header: 40,\r\n        pager:  44\r\n    },\r\n};\r\n\r\n/** åè®¸ç¼è¾æ¶ï¼éç®æ¾ç¤ºå¯ç¼è¾ååæ ¼çæ ·å¼ */\r\nexport const ALLOW_EDIT_CELL_HIGHLIGHT_CLS = {\r\n    datagrid: 'highlight-allowedit-cell',\r\n    textarea: 'cell-textarea',\r\n    textbox: 'cell-textbox',\r\n    checkbox: 'cell-checkbox',\r\n    datepicker: 'cell-datepicker',\r\n    'input-group': 'cell-input-group',\r\n    select: 'cell-combolist',\r\n    lookup: 'cell-lookup',\r\n    numberbox: 'cell-numberbox',\r\n    combolist: 'cell-combolist',\r\n    'combo-lookup': 'cell-combolist',\r\n    switch: 'cell-switch',\r\n    timepicker: 'cell-timepicker',\r\n    'language-textbox': 'cell-language-textbox',\r\n    'enum-editor': 'cell-enum-editor'\r\n};\r\n\r\n\r\nexport const TR_PREFIX = 'row_';\r\nexport const TR_ID_PREFIX = 'row_';\r\n\r\nexport const CUSTOM_CELL_CLS = 'customcellcls_';\r\nexport const CUSTOM_GROUP_ROW_CLS = 'customgrouprowcls_';\r\nexport const CUSTOM_ROW_CLS = 'customrowcls_';\r\n\r\n/** æè¡é«åº¦cls åç¼ wrap_row_height_ */\r\nexport const WORDWRAP_ROW_HEIGHT_CLS = 'wrap_row_height_';\r\n\r\nexport type SizeConfig = {\r\n    /**\r\n     * è¡¨å¤´è¡é«\r\n     */\r\n    'headerHeight'?: number, \r\n    /**\r\n     * åè®¡è¡é«\r\n     */\r\n    'footerHeight'?: number, \r\n    /**\r\n     * æ°æ®è¡é«\r\n     */\r\n    'rowHeight'?: number, \r\n    /**\r\n     * å¤éæ¡åå®½\r\n     */\r\n    'checkboxColumnWidth'?: number, \r\n    /**\r\n     * è¡å·åå®½\r\n     */\r\n    'lineNumberWidth'?: number,\r\n    /**\r\n     * è¿æ»¤è¡é«\r\n     */\r\n    'filterRowHeight'?: number\r\n};\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 07:47:12\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-19 20:30:44\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { ColumnGroup, DataColumn, FilterCondition} from './../types';\r\nimport { EntityFilter } from '@farris/ui-common/types';\r\n\r\nexport interface RowDataChanges {[id: string]: any; }\r\n\r\nexport interface FarrisDatagridState {\r\n    [key: string]: any;\r\n    width?: number;\r\n    height?: number;\r\n    rowHeight?: number;\r\n    idField?: string;\r\n    data?: any;\r\n    /** å½åé¡µæ°æ® */\r\n    currentPageData?: any;\r\n    originalData?: any;\r\n    showHeader?: boolean;\r\n    headerHeight?: number;\r\n    pageIndex?: number;\r\n    pageSize?: number;\r\n    pagerHeight?: number;\r\n    pagination?: boolean;\r\n    columns: Array<DataColumn> | Array<DataColumn>[];\r\n    flatColumns?: Array<DataColumn>;\r\n    fitColumns: boolean;\r\n    autoFitColumns?: boolean;\r\n    showLineNumber?: boolean;\r\n    showCheckbox?: boolean;\r\n    checkboxColumnWidth: number;\r\n    multiSelect?: boolean;\r\n    /** å½å¯ç¨å¤éæ¶ï¼ç¹å»è¡éä¸­ï¼åªåè®¸ä¸åªæä¸è¡è¢«éä¸­ã */\r\n    onlySelectSelf: boolean;\r\n    selectOnCheck: boolean;\r\n    checkOnSelect: boolean;\r\n    selections?: SelectedRow[];\r\n    checkedRows?: SelectedRow[];\r\n    currentRow?: SelectedRow;\r\n    currentCell?: CellInfo;\r\n    columnsGroup: ColumnGroup;\r\n    virtualized?: boolean;\r\n    showFooter?: boolean;\r\n    /** æ¯å¦å¯ç¨å¼æ­¥èæå è½½æ°æ®: false - å®¢æ·ç«¯åå­ä¸­åæ°ï¼true - è¿ç«¯æå¡å¨å è½½æ°æ®, é»è®¤å¼ä¸º false */\r\n    virtualizedAsyncLoad?: boolean;\r\n    virtual?: VirtualizedState;\r\n    sortName?: string;\r\n    sortOrder?: string;\r\n    multiSort?: boolean;\r\n    remoteSort?: boolean;\r\n    /** æå¡å¨ç«¯è¿æ»¤ */\r\n    remoteFilter?: boolean;\r\n    /** è¿æ»¤æ¡ä»¶ */\r\n    conditions?: EntityFilter | FilterCondition;\r\n    changes: RowDataChanges;\r\n    // å¯ç¨è¡åç»\r\n    groupRows?: boolean;\r\n    // åç»å­æ®µ\r\n    groupField?: string;\r\n    // åç»åè®¡è¡\r\n    groupFooter?: boolean;\r\n    /** æ¾ç¤ºåç»å */\r\n    showGroupColumn?: boolean;\r\n    mergeCell?: boolean;\r\n    enableClientSortForMergeCell?: boolean;\r\n    /** å­å¨ç»ä»¶åå§æ¶çç¸å³å±æ§è®¾ç½® */\r\n    initialOptions?: any;\r\n}\r\n\r\nexport interface VirtualizedState {\r\n    /** èæå è½½ä¸ä¸æ¾ç¤ºåé¡µæ¡æ¶ï¼è®°å½å è½½æ°è®°å½æ¶çç´¢å¼å¼ */\r\n    rowIndex: number;\r\n    /** æ°æ®æ¾ç¤ºçç´¢å¼å¼ */\r\n    startIndex?: number;\r\n    scrollTop?: number;\r\n    virtualRows?: any;\r\n    topHideHeight?: number;\r\n    bottomHideHeight?: number;\r\n    /** é¡µèæ°æ® */\r\n    footer?: any[];\r\n    /** æ¯å¦ç±æ»å¨æ¡è§¦å */\r\n    isScrollChange?: boolean;\r\n}\r\n\r\nexport interface SelectedRow {\r\n    index: number;\r\n    id: any;\r\n    data: any;\r\n    /** ä¸­é´ä½ç½®è¡å¼ç¨ */\r\n    dr?: any;\r\n    /** å·¦ä¾§ä½ç½®è¡å¼ç¨ */\r\n    drl?: any;\r\n    /** å³ä¾§ä½ç½®è¡å¼ç¨ */\r\n    drr?: any;\r\n    editors?: any[];\r\n}\r\n\r\nexport const initDataGridState: FarrisDatagridState = {\r\n    idField: 'id',\r\n    showLineNumber: false,\r\n    selections: [],\r\n    checkedRows: [],\r\n    currentRow: null,\r\n    columnsGroup: null,\r\n    columns: [],\r\n    fitColumns: false,\r\n    onlySelectSelf: true,\r\n    selectOnCheck: true,\r\n    checkOnSelect: true,\r\n    pageIndex: 1,\r\n    pageSize: 20,\r\n    pagerHeight: 40,\r\n    checkboxColumnWidth: 36,\r\n    pagination: false,\r\n    virtual: {\r\n        rowIndex: 0,\r\n        scrollTop: 0,\r\n        topHideHeight: 0,\r\n        bottomHideHeight: 0,\r\n        isScrollChange: false\r\n    },\r\n    sortName: undefined,\r\n    sortOrder: undefined,\r\n    multiSort: false,\r\n    remoteSort: true,\r\n    changes: null,\r\n    showGroupColumn: false\r\n};\r\n\r\nexport interface CellInfo {\r\n    isEditing?: boolean;\r\n    rowData?: any;\r\n    rowId?: any;\r\n    rowIndex?: number;\r\n    field?: string;\r\n    cellElement?: any;\r\n    cellRef?: any;\r\n    editor?: any;\r\n    column?: any;\r\n    cellEditorRef?: any;   //  GridCellEditorDirective\r\n    lastRow?: boolean;\r\n}\r\n\r\nexport interface DataResult {\r\n    footer?: any[];\r\n    items: any[];\r\n    total?: number;\r\n    pageIndex?: number;\r\n    pageSize?: number;\r\n}\r\n/** è¡ç´¢å¼ */\r\nexport const ROW_INDEX_FIELD = '__row_index__';\r\n/** æ¯å¦ä¸ºåç»è¡ */\r\nexport const IS_GROUP_ROW_FIELD = '__group__';\r\n/** å¼ç¨çåç»è¡å±æ§ */\r\nexport const GROUP_ROW_FIELD = '__group_parent_id__';\r\n/** æ¯å¦ä¸ºåç»åè®¡è¡ */\r\nexport const IS_GROUP_FOOTER_ROW_FIELD = '__group_footer__';\r\nexport const GROUP_VISIBLE_FIELD = '__group_visible__';\r\nexport const GROUP_LEVEL_FIELD = '__group_level__';\r\n\r\n\r\nexport interface DatagridGroupRow {\r\n    /** æ è¯æ­¤æ°æ®è¡ä¸ºåç»è¡ */\r\n    [IS_GROUP_ROW_FIELD]: boolean;\r\n    /** åç»ç­çº§ */\r\n    level: number;\r\n    /** æå¨è¡æ°æ® */\r\n    data: any;\r\n    /** åç»å­æ®µå¼ */\r\n    value: any;\r\n    /** åç»è¡æ¯å¦å¯è§ */\r\n    [GROUP_VISIBLE_FIELD]: boolean;\r\n    /** æ¯å¦å±å¼åç»è¡ */\r\n    expanded: boolean;\r\n    /** åç»å­æ®µ */\r\n    field: string;\r\n    colspan: number;\r\n    /** åç»æ»è®°å½æ° */\r\n    total: number;\r\n    /** åç»æ°æ®è¡ */\r\n    rows: any;\r\n    /** ç¶çº§åç»è¡ */\r\n    [GROUP_ROW_FIELD]: any;\r\n}\r\n\r\n\r\nexport const IgnoreProperties = [\r\n    'afterEdit',\r\n    'app',\r\n    'beforeCheck',\r\n    'beforeClickCell',\r\n    'beforeEdit',\r\n    'beforeSelect',\r\n    'beforeSortColumn',\r\n    'beforeUncheck',\r\n    'beforeUnselect',\r\n    'beginEdit',\r\n    'cancelEdited',\r\n    'cd',\r\n    'cellClick',\r\n    'checkAll',\r\n    'checkValuesChange',\r\n    'checked',\r\n    'checkedChange',\r\n    'clientFilterService',\r\n    'colFormatSer',\r\n    'columnMoved',\r\n    'columnSorted',\r\n    'componentType',\r\n    'dataChange',\r\n    'dblclickRow',\r\n    'destroy$',\r\n    'dfs',\r\n    'dgColumns',\r\n    'dgContainer',\r\n    'dgPager',\r\n    'dgs',\r\n    'domSanitizer',\r\n    'editors',\r\n    'el',\r\n    'endEdit',\r\n    'farrisInstances',\r\n    'filterChanged',\r\n    'footerTemplate',\r\n    'groupFieldChange',\r\n    'groupFields$',\r\n    'inject',\r\n    'lastCellEnterHandle',\r\n    'loadSuccess',\r\n    'localeService',\r\n    'longTextArea',\r\n    'rowAppended',\r\n    'rowClick',\r\n    'rowDeleted',\r\n    'render2',\r\n    'pageSizeChanged',\r\n    'onDocumentMouseDown',\r\n    'pageChanged',\r\n    'resizeProxy',\r\n    'resizeProxyBg',\r\n    'ro',\r\n    'rowUpdated',\r\n    'scrollInstance',\r\n    'scrollY',\r\n    'scrollYLoad',\r\n    'selectAll',\r\n    'selectChanged',\r\n    'sms',\r\n    'selectValueChange',\r\n    'selectValuesChange',\r\n    'settingService',\r\n    'smartFilterService',\r\n    'subscriptions',\r\n    'trackByRows',\r\n    'unCheckAll',\r\n    'unChecked',\r\n    'unSelect',\r\n    'unSelectAll',\r\n    'zone',\r\n    '__component_type__',\r\n    '__pagination',\r\n    '_active_datagrid_cls',\r\n    '_autoFitColumns',\r\n    '_blured_datagrid_cls',\r\n    '_columns',\r\n    '_custom_datagrid_cls',\r\n    '_editable',\r\n    '_fields',\r\n    '_fit',\r\n    '_fitColumns',\r\n    '_footerData',\r\n    '_groupField',\r\n    '_isResized',\r\n    '_loading',\r\n    '_lockPagination',\r\n    '_selectedRow',\r\n    '_showRowGroupPanel',\r\n    '_sizeType',\r\n    '_total',\r\n];\r\n","import { TR_PREFIX } from \"../types\";\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-19 20:31:27\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nexport class Utils {\r\n\r\n    static uuid() {\r\n        function S4() {\r\n            // tslint:disable-next-line: no-bitwise\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());\r\n    }\r\n\r\n    static keysInData(field, data) {\r\n        const noProperty = 'no property';\r\n        const val = field.split('.').reduce((obj, key) => {\r\n            if (obj && obj.hasOwnProperty(key)) {\r\n                return obj[key];\r\n            } else {\r\n                return noProperty;\r\n            }\r\n        }, data);\r\n\r\n        return val != noProperty;\r\n    }\r\n\r\n    /**\r\n     * è·åå¯¹è±¡ä¸­æå®å­æ®µçå¼ã field: å¯ä»¥ä¸ºå¸¦æå±çº§ç»æçè·¯å¾ï¼å¦ï¼ user.firstName | name ç­\r\n     */\r\n    static getValue(field: string, data: any, safe = false) {\r\n        if (!data) {\r\n            return  '';\r\n        }\r\n        let resultVal = '';\r\n        if (field.indexOf('.') === -1 || data.hasOwnProperty(field)) {\r\n            resultVal = data[field];\r\n        } else {\r\n            resultVal = field.split('.').reduce((obj, key) => {\r\n                if (obj) {\r\n                    return obj[key];\r\n                } else {\r\n                    return null;\r\n                }\r\n            }, data);\r\n        }\r\n\r\n        if (safe) {\r\n            return this.escapeValue(resultVal);\r\n        }\r\n        return resultVal;\r\n    }\r\n\r\n    static setValue( field: string, val: any, obj: { [key: string]: any }, nest = true) {\r\n        if (field) {\r\n            if (field.indexOf('.') > -1 && nest) {\r\n                let lastObj = null;\r\n                const _fields = field.split('.');\r\n                _fields.reduce( (c, p) => {\r\n                    lastObj = c;\r\n                    return c[p];\r\n                }, obj);\r\n\r\n                if (lastObj) {\r\n                    lastObj[_fields.pop()] = val;\r\n                }\r\n            } else {\r\n                obj[field] = val;\r\n            }\r\n        }\r\n    }\r\n\r\n    /** è·åå¤è¯­å¼ */\r\n    static getMultilingualValue(valObj, localeId) {\r\n        if (valObj && typeof valObj === 'object' && Object.keys(valObj).length > 0) {\r\n            localeId = localeId || 'zh-CHS';\r\n            const val = valObj[localeId];\r\n            if (val !== undefined) {\r\n                return val;\r\n            } else {\r\n                return '';\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n\r\n    static escapeValue(val: any) {\r\n        if (val === null || val === undefined || val === '') {\r\n            return '';\r\n        }\r\n\r\n        const escapeHTML = (unsafe_str) => {\r\n            return unsafe_str\r\n                .replace(/&/g, '&amp;')\r\n                .replace(/</g, '&lt;')\r\n                .replace(/>/g, '&gt;')\r\n                .replace(/\\\"/g, '&quot;')\r\n                .replace(/\\'/g, '&#39;')\r\n                .replace(/\\//g, '&#x2F;');\r\n                // .replace('src','drc');\r\n        };\r\n\r\n        if (typeof val === 'string') {\r\n            return escapeHTML(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static eventPath(evt: any) {\r\n        const path = (evt.composedPath && evt.composedPath()) || evt.path;\r\n        const target = evt.target;\r\n\r\n        if (path != null) {\r\n            return (path.indexOf(window) < 0) ? path.concat(window) : path;\r\n        }\r\n\r\n        if (target === window) {\r\n            return [window];\r\n        }\r\n\r\n        const getParents = (node, memo = undefined) => {\r\n            memo = memo || [];\r\n            const parentNode = node.parentNode;\r\n\r\n            if (!parentNode) {\r\n                return memo;\r\n            } else {\r\n                return getParents(parentNode, memo.concat(parentNode));\r\n            }\r\n        };\r\n\r\n        return [target].concat(getParents(target), window);\r\n    }\r\n\r\n    static hasDialogOpen() {\r\n        // return document.body.classList.value.indexOf('modal-open') > -1;\r\n        // å¼å®¹IE 11\r\n        return document.body.className.indexOf('modal-open') > -1;\r\n    }\r\n\r\n    static on(el, evt, fn, opts: any = {}) {\r\n        const delegatorFn = e => e.target.matches(opts.target) && fn.call(e.target, e);\r\n        el.addEventListener(evt, opts.target ? delegatorFn : fn, opts.options || false);\r\n        return () => {\r\n            el.removeEventListener(evt, delegatorFn, opts);\r\n        };\r\n    }\r\n\r\n    static off(el, evt, fn= () => {}, opts: any = {}) {\r\n        el.removeEventListener(evt, fn, opts);\r\n    }\r\n    /** è·åå­ç¬¦é¿åº¦ï¼ä¸­ææ±å­å 2ä¸ªå­ç¬¦ */\r\n    static getBLen(str) {\r\n        if (str == null) {\r\n            return 0;\r\n        }\r\n        if (typeof str !== 'string') {\r\n          str += '';\r\n        }\r\n        return str.replace(/[^\\x00-\\xff]/g, '01').length;\r\n    }\r\n\r\n    // static difference(first: any[], second: any[]): any[] {\r\n    //     return first.filter(item => !second.includes(item));\r\n    // }\r\n\r\n    // static getDiffItems(arr1, arr2) {\r\n    //     const diff1 = Utils.difference(arr1, arr2);\r\n    //     const diff2 = Utils.difference(arr2, arr1);\r\n\r\n    //     return diff1.concat(diff2);\r\n    // }\r\n\r\n    static getWhenEmptyText(col: any, localeId) {\r\n\r\n        const EMPTY_INPUT_TEXT = {\r\n            'zh-CHS': 'è¯·è¾å¥',\r\n            'zh-CHT': 'è«è¼¸å¥',\r\n            en: 'Please input'\r\n        };\r\n\r\n        const EMPTY_SELECT_TEXT = {\r\n            'zh-CHS': 'è¯·éæ©',\r\n            'zh-CHT': 'è«é¸æ',\r\n            en: 'Please select'\r\n        };\r\n\r\n\r\n        if (col.editor) {\r\n            switch (col.editor.type) {\r\n                case 'datepicker':\r\n                case 'select':\r\n                case 'lookup':\r\n                case 'combolist':\r\n                case 'combo-lookup':\r\n                    return  EMPTY_SELECT_TEXT[localeId];\r\n                default:\r\n                    return EMPTY_INPUT_TEXT[localeId];\r\n            }\r\n        }\r\n\r\n        // æ§å¶é¢æ¿å\r\n        if (col.field === '_datagrid-setting-control_') {\r\n            return '';\r\n        }\r\n\r\n        return EMPTY_INPUT_TEXT[localeId];\r\n    }\r\n\r\n    static getRowIdByTr(tr) {\r\n        if (tr) {\r\n            let id = tr.getAttribute('id');\r\n\r\n            if (id == null || id == undefined) {\r\n                return null;\r\n            }\r\n            return id.replace(TR_PREFIX, '').replace('_fixedright', '').replace('_fixedleft', '').replace('_grouprow', '');\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static getTrDomById(dataid, parentElement) {\r\n        if (parentElement) {\r\n            return parentElement.querySelector(`[id=\"${dataid}\"]`);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\n","import { DataColumn, ColumnFilterType } from './../types/data-column';\r\nimport { bindCallback, of } from 'rxjs';\r\n\r\nexport class DatagridColumnsHelper {\r\n\r\n    static gridInstance = null;\r\n\r\n    /** è·åæ»åæ° */\r\n    private static getColumnTotal(firstCols: any[]) {\r\n        let total = 0;\r\n        firstCols.forEach(n => {\r\n            total += (n.colspan || 1);\r\n        });\r\n        return total;\r\n    }\r\n\r\n    // æ¥æ¾æªèµå¼é¡¹çç´¢å¼\r\n    private static findUndefinedItem(arr) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i] == undefined) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    private static getColumnFields(columns) {\r\n        const aa = [];\r\n        // æ ¹æ®ç¬¬ä¸è¡è®¡ç®æ»åæ°\r\n        const colTotal = DatagridColumnsHelper.getColumnTotal(columns[0]);\r\n        // åå»ºç©ºæ°ç»\r\n        for (let i = 0; i < columns.length; i++) {\r\n            aa[i] = new Array(colTotal);\r\n        }\r\n        for (let i = 0; i < columns.length; i++) {\r\n            columns[i].forEach(col => {\r\n                let k = DatagridColumnsHelper.findUndefinedItem(aa[i]);\r\n                if (k >= 0) {\r\n                    const field = col.field || col.id || '';\r\n                    for (let c = 0; c < (col.colspan || 1); c++) {\r\n                        for (let r = 0; r < (col.rowspan || 1); r++) {\r\n                            aa[i + r][k] = field;\r\n                        }\r\n                        k++;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return aa;\r\n    }\r\n\r\n    static columnIsVisible(col: any, ins: any) {\r\n        if (col.visible === undefined) {\r\n            col.visible = true;\r\n        }\r\n\r\n        const t = typeof col.visible;\r\n        if (t === 'boolean') {\r\n            return col.visible;\r\n        } else if ( t === 'function') {\r\n            return col.visible({instance: ins, column: col});\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    static getFields(columns) {\r\n        // ç§»é¤éèçå\r\n        const _cols = columns.map(cols => {\r\n            cols = cols.filter(col => DatagridColumnsHelper.columnIsVisible(col, DatagridColumnsHelper.gridInstance));\r\n            return cols;\r\n        });\r\n\r\n        const fields =  DatagridColumnsHelper.getColumnFields(_cols);\r\n        return fields.length ? fields[fields.length - 1] : fields;\r\n    }\r\n\r\n    static getFilterEnumOptions(column: DataColumn) {\r\n        let enumSetting = null;\r\n        if (column.filter.type === ColumnFilterType.enum) {\r\n            const fmt = column.formatter as any;\r\n            if (fmt) {\r\n                enumSetting = fmt.options;\r\n            } else {\r\n                if (column.filter.options) {\r\n                    enumSetting = column.filter.options;\r\n                }\r\n            }\r\n        }\r\n\r\n        return enumSetting;\r\n    }\r\n\r\n    static getEnumText(enumOpts: any, value1: any) {\r\n        if (!enumOpts) {\r\n            return  '';\r\n        }\r\n        const { valueField, textField, data } = enumOpts;\r\n        let str = '';\r\n        if (value1) {\r\n            str += ` ${value1.map(v => {\r\n                const enumItem = data.find(d => d[valueField] === v);\r\n                return enumItem[textField];\r\n            }).join(',')}`;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    static columnVisibleAsObservable(col: DataColumn) {\r\n        if (typeof col.visible === 'function') {\r\n            const visibleAsObservable = bindCallback(col.visible);\r\n            return visibleAsObservable();\r\n        }\r\n        return of(col.visible);\r\n    }\r\n\r\n    static getParentColumns(col: DataColumn, allCols) {\r\n        const arr = [];\r\n        const _getParents = (c) => {\r\n            if (c && c.parentId) {\r\n                const parentCol = allCols.find(n => n.id === c.parentId);\r\n                // arr.splice(0, 0, parentCol);\r\n                arr.push(parentCol);\r\n                _getParents(parentCol);\r\n            }\r\n        };\r\n        _getParents(col);\r\n        return arr;\r\n    }\r\n\r\n    static getChildColumns(col: DataColumn, allCols) {\r\n        const arr = [];\r\n        const _getChilds = (c) => {\r\n            if (c && c.parentId) {\r\n                const childs = allCols.filter(n => n.parentId === c.id);\r\n                arr.splice(0, 0, ...childs);\r\n                childs.forEach(child => {\r\n                    _getChilds(child);\r\n                });\r\n            }\r\n        };\r\n        _getChilds(col);\r\n        return arr;\r\n    }\r\n\r\n    // æ£æ¥å¤è¡¨å¤´æ¶ï¼è®¾è®¡å¨ä¸­å°åè®¾ä¸ºéè\r\n    static checkGroupHeaderColumnVisible(allCols) {\r\n        const hiddenFields = allCols.filter(n => n.visible === false).map(n => n.field);\r\n        hiddenFields.forEach(field => {\r\n            const _col = allCols.find(col => col.field === field || col.id === field);\r\n            if (_col) {\r\n                const parents = DatagridColumnsHelper.getParentColumns(_col, allCols);\r\n\r\n                parents.forEach(p => {\r\n                    const _childs = allCols.filter(n => n.parentId === p.id && (n.visible || n.visible === undefined) );\r\n                    p.colspan = _childs.reduce(( r, c ) => {\r\n                        r = r + (c.colspan || 1);\r\n                        return r;\r\n                    }, 0);\r\n                    p.visible = !!p.colspan;\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    // å¤è¡¨å¤´ä¸ä»æä¸åæ¾ç¤º\r\n    static onlyOneColumn() {\r\n\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-20 07:39:45\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nimport { Injectable, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, merge, Subject } from 'rxjs';\r\nimport { map, distinctUntilChanged, filter, switchMap, auditTime, debounceTime, debounce } from 'rxjs/operators';\r\nimport { DataColumn, ColumnGroup, CalculationType } from '../types';\r\nimport { FarrisDatagridState, initDataGridState, DataResult, CellInfo, VirtualizedState, SelectedRow,\r\n        RowDataChanges, ROW_INDEX_FIELD, IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD, GROUP_VISIBLE_FIELD, GROUP_LEVEL_FIELD } from './state';\r\nimport { VirtualizedLoaderService } from './virtualized-loader.service';\r\nimport { DatagridRow } from '../types/datagrid-row';\r\nimport { cloneDeep, groupBy, sumBy, maxBy, minBy, meanBy, isPlainObject, flatten } from 'lodash-es';\r\nimport { Utils } from '../utils/utils';\r\nimport { DatagridColumnsHelper } from './datagrid-columns.helper';\r\nimport { BigNumber } from 'bignumber.js';\r\n@Injectable()\r\nexport class DatagridFacadeService {\r\n\r\n    localId = 'zh-CHS';\r\n\r\n    protected _state: FarrisDatagridState;\r\n    // public virtualizedService: VirtualizedLoaderService;\r\n\r\n    store = new BehaviorSubject<FarrisDatagridState>(null);\r\n\r\n    virtualRowSubject = new BehaviorSubject<any>(null);\r\n    gridSizeSubject = new Subject<any>();\r\n    errorSubject = new Subject();\r\n    private selectRowSubject = new Subject<any>();\r\n    private unSelectRowSubject = new Subject<any>();\r\n    private columnResizeSubject = new Subject<any>();\r\n    private clearSelectionSubject = new Subject();\r\n    private checkRowSubject = new Subject<any>();\r\n    private unCheckRowSubject = new Subject<any>();\r\n    private clearCheckedsSubject = new Subject<any>();\r\n    private clearAllSubject = new Subject<any>();\r\n    private checkAllSubject = new Subject();\r\n    private unCheckAllSubject =  new Subject();\r\n    private selectAllSubject = new Subject();\r\n    private selectCellSubject = new Subject();\r\n\r\n    error$ = this.errorSubject.asObservable();\r\n    selectRow$ = this.selectRowSubject.asObservable();\r\n    unSelectRow$ =  this.unSelectRowSubject.asObservable();\r\n    columnResize$ = this.columnResizeSubject.asObservable();\r\n    clearSelections$ = this.clearSelectionSubject.asObservable();\r\n    checkRow$ = this.checkRowSubject.asObservable();\r\n    unCheckRow$ = this.unCheckRowSubject.asObservable();\r\n    clearCheckeds$ = this.clearCheckedsSubject.asObservable();\r\n    clearAll$ = this.clearAllSubject.asObservable();\r\n    checkAll$ = this.checkAllSubject.asObservable();\r\n    unCheckAll$ = this.unCheckAllSubject.asObservable();\r\n    selectAll$ = this.selectAllSubject.asObservable();\r\n    currentCell$ = this.selectCellSubject.asObservable();\r\n    editCell$ = new EventEmitter();\r\n    clientSort$ = new EventEmitter();\r\n    rowAppend$ = new EventEmitter();\r\n    rowUpdate$ = new EventEmitter();\r\n    rowDelete$ = new EventEmitter();\r\n\r\n    expandGroupRow =  new EventEmitter();\r\n    collapseGroupRow =  new EventEmitter();\r\n\r\n    updateCheckboxState$ = new EventEmitter();\r\n\r\n    readonly state$ = this.store.asObservable().pipe(\r\n        filter( (state: any) => state)\r\n    );\r\n\r\n    readonly columnGroup$ = this.gridSizeSubject.asObservable().pipe(\r\n        filter( (state: any) => state),\r\n        map((state: FarrisDatagridState) => state.columnsGroup),\r\n        switchMap((colgroup: any) => {\r\n            return of( colgroup);\r\n        }),\r\n        distinctUntilChanged()\r\n    );\r\n\r\n    gridSize$ = this.gridSizeSubject.asObservable().pipe(\r\n        filter( (state: any) => state),\r\n        map((state: FarrisDatagridState) => {\r\n            const { headerHeight, pagerHeight, width, columnsGroup, height, rowHeight } = {...state};\r\n            return { headerHeight, pagerHeight, width, columnsGroup, height, rowHeight };\r\n        }),\r\n        distinctUntilChanged()\r\n    );\r\n\r\n    readonly data$ = this.virtualRowSubject.pipe(\r\n        filter(vs => vs),\r\n        switchMap((vs: VirtualizedState) => {\r\n            return of({\r\n                index: vs.startIndex || 0,\r\n                rows: vs.virtualRows || [],\r\n                top: vs.topHideHeight,\r\n                bottom: vs.bottomHideHeight,\r\n                scrolling: vs.isScrollChange\r\n            });\r\n        }),\r\n        distinctUntilChanged()\r\n    );\r\n\r\n    difference = (first: any[], second: any[]) => first.filter(item => !second.includes(item));\r\n    differenceBy = (a, b, fn) => {\r\n        const s = new Set(b.map(fn));\r\n        return a.map(fn).filter(el => !s.has(el));\r\n    }\r\n\r\n    constructor(private http: HttpClient) {\r\n        this._state =  cloneDeep(initDataGridState);\r\n    }\r\n\r\n    updateVirthualRows(scrolltop: number, isScrollChange = false) {\r\n        const virtual = this.getVirthualRows(scrolltop);\r\n        virtual.isScrollChange = isScrollChange;\r\n        this.updateState({virtual}, false);\r\n        this.virtualRowSubject.next(virtual);\r\n    }\r\n\r\n    getVirthualRows(scrolltop): VirtualizedState {\r\n        if (scrolltop === undefined) {\r\n            scrolltop = 0;\r\n        }\r\n\r\n        const data =  this._state.data || [];\r\n        const virtual = {rowIndex: 0, virtualRows: data, topHideHeight: 0, bottomHideHeight: 0 };\r\n\r\n        if (data.length === 0 || (this._state.autoHeight && !this._state.groupRows)) {\r\n            virtual.virtualRows = data;\r\n            return virtual;\r\n        }\r\n\r\n        if (this._state.flatColumns && this._state.flatColumns.length) {\r\n            // data = this._state.data;\r\n\r\n            // if (!this._state.groupRows) {\r\n            //     if (this._state.virtual && this._state.virtualized) {\r\n            //         this.virtualizedService.state = this._state;\r\n            //         const rows = this.virtualizedService.getRows(scrolltop);\r\n            //         virtual = { ...this._state.virtual, ...rows };\r\n            //     } else {\r\n            //         virtual.virtualRows = data;\r\n            //     }\r\n            // } else {\r\n            //     // è¡åç»æ°æ®å¤ç\r\n            //     const groupRows = this.groupRows2(cloneDeep(data));\r\n            //     virtual.virtualRows = groupRows;\r\n            // }\r\n            if (this._state.groupRows) {\r\n                // è¡åç»æ°æ®å¤ç\r\n                const groupRows = this.groupRows2(cloneDeep(data));\r\n                virtual.virtualRows = groupRows;\r\n            }\r\n        }\r\n\r\n        if (this._state.mergeCell && this._state.enableClientSortForMergeCell) {\r\n            virtual.virtualRows = this.sort(virtual.virtualRows);\r\n        }\r\n\r\n        return virtual;\r\n    }\r\n\r\n    getData(original = false) {\r\n        if (original) {\r\n            return this._state.originalData || [];\r\n        }\r\n        return this._state.data || [];\r\n    }\r\n\r\n    getState() {\r\n        return this._state;\r\n    }\r\n\r\n    getVirtualState() {\r\n        return this._state.virtual;\r\n    }\r\n\r\n    getPageInfo() {\r\n        const { pageIndex, pageSize } = {...this._state};\r\n        return { pageIndex, pageSize };\r\n\r\n    }\r\n\r\n    initState(state: Partial<FarrisDatagridState>) {\r\n        this.updateState(state, false);\r\n        this._state.originalData = cloneDeep(this._state.data);\r\n        this.initColumns();\r\n\r\n        this.gridSizeSubject.next(this._state);\r\n        this.updateVirthualRows(0);\r\n    }\r\n\r\n\r\n    /** å è½½æ°æ®\r\n     * @param data: æ°æ®åè¡¨\r\n     * @param updateOriginalData æ¯å¦æ´æ°åå§æ°æ®, é»è®¤ä¸º true\r\n     */\r\n    loadData(data: any, updateOriginalData = true, sortable = false) {\r\n        data = data || [];\r\n        this.updateState({ data }, false);\r\n\r\n        if (updateOriginalData) {\r\n            this._state.originalData = cloneDeep(this._state.data);\r\n        }\r\n        if (sortable && this._state.sortName) {\r\n            const sortedData = this.sort(this._state.data);\r\n            this.updateState({ data: sortedData }, false);\r\n        } else {\r\n            // this.updateState({ data: this._state.originalData }, false);\r\n        }\r\n\r\n        this.updateVirthualRows(this._state.virtual.scrollTop || 0);\r\n        this._state.checkedRows = this.getCheckedRowsFromSource();\r\n    }\r\n\r\n    /** å¤åæå®è¡çæ°æ® */\r\n    resetRow(rowId: any) {\r\n        const origData = this._state.originalData;\r\n        if (origData) {\r\n            const origRowData = origData.find(r => this.primaryId(r) === rowId);\r\n            this.getCurrentRow().data = cloneDeep(origRowData);\r\n            this.updateRow(rowId, origRowData);\r\n        }\r\n    }\r\n\r\n    // loadDataForVirtual(data: any) {\r\n    //     this.updateState({ data }, false);\r\n    //     // this.virtualizedService.state = this._state;\r\n    //     const virtual = { ...this._state.virtual, ...this.virtualizedService.reload() };\r\n    //     this.virtualRowSubject.next(virtual);\r\n    //     this.updateState({virtual});\r\n    // }\r\n\r\n    fetchData(url: string): Observable<DataResult> {\r\n        return this.http.get(url).pipe(\r\n            map( r => r as DataResult )\r\n        );\r\n    }\r\n\r\n    setTotal(total: number) {\r\n        this.updateState( {total}, false );\r\n    }\r\n\r\n    updateProperty(property: string, value: any) {\r\n        this.updateState({ [property]: value }, false);\r\n    }\r\n\r\n    setPagination(pageIndex: number, pageSize: number, total: number) {\r\n        this.updateState( { pageIndex, pageSize, total }, false);\r\n    }\r\n\r\n    setScrollTop(scrollTop: number) {\r\n        const virtual = { ...this._state.virtual, scrollTop};\r\n        this.updateState({virtual}, false);\r\n    }\r\n\r\n    isMultiSelect() {\r\n        return this._state.multiSelect;\r\n    }\r\n\r\n    private _isRowSelected(id: any) {\r\n        if (!id || !this._state.currentRow) {\r\n            return false;\r\n        } else {\r\n            return this._state.currentRow.id.toString() === id.toString();\r\n        }\r\n    }\r\n\r\n    isRowSelected(id: any, selections = null) {\r\n        const flag = this._isRowSelected(id);\r\n        if (!this.isMultiSelect() || this._state.onlySelectSelf) {\r\n           return flag;\r\n        } else {\r\n            if (!selections) {\r\n                selections = this._state.selections;\r\n            }\r\n\r\n            if (this._canCancelSelectWhenMulti()) {\r\n                return flag;\r\n            }\r\n\r\n            if (!selections || selections.length === 0) {\r\n                return false;\r\n            } else {\r\n                return selections.findIndex(sr => sr.id == id) > -1;\r\n            }\r\n        }\r\n    }\r\n\r\n    isRowChecked(id: any, checkeds = null) {\r\n        if (!checkeds) {\r\n            checkeds = this.getCheckeds();\r\n        }\r\n        if (!id || !checkeds.length) {\r\n            return false;\r\n        }\r\n\r\n        return checkeds.findIndex(sr => sr.id.toString() === id.toString()) > -1;\r\n    }\r\n\r\n    isCheckAll() {\r\n        const allRows = this.getAllRowsForLive().map(r => this.primaryId(r));\r\n        const checkIds = this._state.checkedRows.map(r => r.id);\r\n        if (this.difference(allRows, checkIds).length) {\r\n            return false; // this._state.checkedRows.length === allRows.length;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    getCurrentPageCheckeds() {\r\n        const allRows = this.getAllRowsForLive().map(r => this.primaryId(r));\r\n        return this._state.checkedRows.filter(n => allRows.indexOf(n.id) > -1);\r\n    }\r\n\r\n    getCurrentRow() {\r\n        return this._state.currentRow || undefined;\r\n    }\r\n\r\n    getSelections() {\r\n        // å¦ææ°æ®æºåäºï¼éè¦éæ°è®¡ç®\r\n        const data = this._state.data;\r\n        if (this._state.selections && this._state.selections.length) {\r\n            if (!data || !data.length) {\r\n                this._state.selections = [];\r\n            } else {\r\n                const temp: any[] = data.map(n => this.primaryId(n));\r\n                this._state.selections = this._state.selections.filter(n => {\r\n                    return temp.includes(n.id);\r\n                });\r\n            }\r\n        }\r\n        return this._state.selections || [];\r\n    }\r\n\r\n    private getCheckedRowsFromSource() {\r\n        return (this._state.checkedRows || []).map(n => {\r\n            const d = this.findRow(n.id);\r\n            if (d && d.data) {\r\n                n.data = d.data;\r\n            }\r\n            return n;\r\n        });\r\n    }\r\n\r\n    getCheckeds(fromDataSource = false) {\r\n        if (fromDataSource) {\r\n            this._state.checkedRows = this.getCheckedRowsFromSource();\r\n        }\r\n\r\n        return this._state.checkedRows || [];\r\n    }\r\n\r\n    updateCheckedData(rowid: any, rowData: { [key: string]: string }) {\r\n        const checkeds = this.getCheckeds();\r\n        if (checkeds.length) {\r\n            const item = checkeds.find(n => this.primaryId(n) == rowid);\r\n            if (item) {\r\n                Object.keys(rowData).forEach(k => {\r\n                    Utils.setValue(k, rowData[k], item.data);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    setCheckedRows(ids: string[], checked = true) {\r\n        if (ids && ids.length) {\r\n            let checkeds = this._state.checkedRows || [];\r\n\r\n            ids.forEach(id => {\r\n                const row = this.findRow(id);\r\n                if (checked && row) {\r\n                    if ( !this.isRowChecked(id, checkeds)) {\r\n                        const srow = { id: this.primaryId(row.data), data: row.data, index: row.index };\r\n                        checkeds.push(srow);\r\n                    }\r\n                } else {\r\n                    if (!this._state.enableMorePageSelect || !checked) {\r\n                        checkeds = checkeds.filter(sr => sr.id !== id);\r\n                    }\r\n                }\r\n            });\r\n            this._state.checkedRows = checkeds;\r\n        } else {\r\n            this._clearCheckeds();\r\n        }\r\n    }\r\n\r\n    checkRecord(id: any, checked = true) {\r\n        if (id) {\r\n            const row = this.findRow(id);\r\n            if (row) {\r\n                const {index: rowIndex, data: rowData} = {...row};\r\n                if (checked) {\r\n                    this.checkRow(rowIndex, rowData);\r\n                } else {\r\n                    this.unCheckRow(rowIndex, rowData);\r\n                }\r\n            } else {\r\n                this.errorSubject.next(`æªæ¾å°IDä¸º${id}çæ°æ®ã`);\r\n            }\r\n        } else {\r\n            this.errorSubject.next(`åæ°id ä¸è½ä¸ºç©ºã`);\r\n        }\r\n    }\r\n\r\n    checkRow(rowIndex: number, rowData: any, grid: any = null) {\r\n        if (!this._state.multiSelect) {\r\n            this._clearCheckeds();\r\n        }\r\n\r\n        const id = this.primaryId(rowData);\r\n        const checkeds = this._state.checkedRows || [];\r\n\r\n        const srow = { id, data: rowData, index: rowIndex };\r\n        if (id && !this.isRowChecked(id, checkeds)) {\r\n            checkeds.push(srow);\r\n            this._state.checkedRows = checkeds;\r\n\r\n            if (this._state.selectOnCheck) {\r\n                if (grid && grid.instance && grid.instance.beforeSelect) {\r\n                    grid.instance.beforeSelect({ rowIndex, rowData, gridInstance: grid.instance }).subscribe((e) => {\r\n                        if (e) {\r\n                            this.selectRow(rowIndex, rowData);\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.selectRow(rowIndex, rowData);\r\n                }\r\n            }\r\n\r\n            this.checkRowSubject.next(srow);\r\n        }\r\n\r\n        this.updateCheckboxState$.emit({...srow, checked: true});\r\n    }\r\n\r\n    unCheckRow(rowIndex: number, rowData: any, grid: any = null) {\r\n        const id = this.primaryId(rowData);\r\n        let checkeds = this._state.checkedRows || [];\r\n        const srow = { id, data: rowData, index: rowIndex };\r\n        if (this.isRowChecked(id, checkeds)) {\r\n            checkeds = checkeds.filter(sr => '' + sr.id !== '' + id);\r\n            this._state.checkedRows = checkeds;\r\n\r\n            if (this._state.selectOnCheck) {\r\n                if (grid && grid.instance && grid.instance.beforeUnselect) {\r\n                    grid.instance.beforeUnselect({ rowIndex, rowData, gridInstance: grid.instance }).subscribe((e) => {\r\n                        if (e) {\r\n                            this.unSelectRow(rowIndex, rowData);\r\n                        }\r\n                    });\r\n                } else  {\r\n                    this.unSelectRow(rowIndex, rowData);\r\n                }\r\n            }\r\n\r\n            this.unCheckRowSubject.next(srow);\r\n        }\r\n\r\n        this.updateCheckboxState$.emit({...srow, checked: false});\r\n    }\r\n\r\n    setCurrentPageData(data: any) {\r\n        this._state.currentPageData = data;\r\n    }\r\n\r\n    getCurrentPageData() {\r\n        return this._state.currentPageData || [];\r\n    }\r\n\r\n\r\n    /** è·åææå¯ä»¥æä½çè¡ */\r\n    private getAllRowsForLive() {\r\n        let allData = this._state.data || [];\r\n\r\n        if (this._state.pagination && !this._state.pagerOnServer) {\r\n            // è·åå½åé¡µæ°æ®\r\n            allData = this.getCurrentPageData();\r\n        }\r\n\r\n        // æé¤æç¦ç¨çè¡\r\n        if (this._state.disableRow) {\r\n            allData = allData.filter((n, i) => !this._state.disableRow(n, i));\r\n        }\r\n        return allData;\r\n    }\r\n\r\n    checkAll() {\r\n        this._state.checkedRows = this._state.checkedRows || [];\r\n        const allData = this.getAllRowsForLive();\r\n        const allCheckeds = allData.map( (r, i) => {\r\n            return {\r\n                id: this.primaryId(r),\r\n                index: i,\r\n                data: r\r\n            };\r\n        });\r\n\r\n        if (!this._state.checkedRows.length) {\r\n            this._state.checkedRows = allCheckeds;\r\n        } else {\r\n            const _checkeds = [];\r\n            allCheckeds.forEach(element => {\r\n                if (!this._state.checkedRows.find(n => n.id == element.id)) {\r\n                    _checkeds.push(element);\r\n                }\r\n            });\r\n\r\n            this._state.checkedRows = this._state.checkedRows.concat(_checkeds);\r\n        }\r\n\r\n\r\n        if (this._state.selectOnCheck && !this._state.onlySelectSelf) {\r\n            this._state.selections = [];\r\n            this._state.selections = allData.map( (r, i) => {\r\n                return {\r\n                    id: this.primaryId(r),\r\n                    index: i,\r\n                    data: r\r\n                };\r\n            });\r\n        }\r\n\r\n        this.checkAllSubject.next(this._state.checkedRows);\r\n    }\r\n\r\n    selectAll() {\r\n        this._state.selections = [];\r\n\r\n        const allData = this.getAllRowsForLive();\r\n\r\n        this._state.selections = allData.map( (r, i) => {\r\n            return {\r\n                id: this.primaryId(r),\r\n                index: i,\r\n                data: r\r\n            };\r\n        });\r\n\r\n        if (this._state.checkOnSelect) {\r\n            this._state.checkedRows = [];\r\n            this._state.checkedRows = allData.map( (r, i) => {\r\n                return {\r\n                    id: this.primaryId(r),\r\n                    index: i,\r\n                    data: r\r\n                };\r\n            });\r\n        }\r\n\r\n        this.selectAllSubject.next(this._state.selections);\r\n    }\r\n\r\n    findRow(id): {index: number, data: any} {\r\n        if (this._state.data && this._state.data.length) {\r\n            let index = -1;\r\n            const data = this._state.data.find( (n, i) => {\r\n                const r = this.primaryId(n) == id;\r\n                if (r) {\r\n                    index = i;\r\n                }\r\n                return r;\r\n            });\r\n            if (index === -1) {\r\n                return null;\r\n            }\r\n            return {index, data};\r\n        }\r\n        return null;\r\n    }\r\n\r\n    findRowIndex(id) {\r\n        if (this._state.data && this._state.data.length) {\r\n            return this._state.data.findIndex(n => this.primaryId(n) === id);\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n     * è®¾ç½®éä¸­è¡ï¼ä¸è§¦ågrid éä¸­äºä»¶ï¼åæ¶éä¸­äºä»¶\r\n     */\r\n    setSelectRow(id: string, select = true, emit = true) {\r\n        const row = this.findRow(id);\r\n        const {index: rowIndex, data: rowData} = {...row};\r\n        const srow = { id, data: rowData, index: rowIndex };\r\n\r\n        if (this.isMultiSelect()) {\r\n            if (select) {\r\n                this.selectRowForMulti(srow, false, emit);\r\n            } else {\r\n                this.unSelectRowForMulti(srow, false, emit);\r\n            }\r\n        }\r\n\r\n        const _sr = select ? srow : null;\r\n        this.updateState({ currentRow: _sr}, false);\r\n    }\r\n\r\n    selectRecord(id: any, select = true) {\r\n        if (id) {\r\n            const row = this.findRow(id);\r\n            if (row) {\r\n                const {index: rowIndex, data: rowData} = {...row};\r\n                if (select) {\r\n                    this.selectRow(rowIndex, rowData);\r\n                } else {\r\n                    this.unSelectRow(rowIndex, rowData);\r\n                }\r\n            } else {\r\n                this.errorSubject.next(`æªæ¾å°IDä¸º${id}çæ°æ®ã`);\r\n            }\r\n        } else {\r\n            this.errorSubject.next(`åæ°id ä¸è½ä¸ºç©ºã`);\r\n        }\r\n    }\r\n\r\n    selectRow(rowIndex: number, rowData: any, gridOpts = null) {\r\n        const isMultiSelect = this.isMultiSelect();\r\n        const id = this.primaryId(rowData);\r\n        const srow = { id, data: rowData, index: rowIndex };\r\n\r\n        if (!this.isRowSelected(id) || !this._state.currentRow) {\r\n            if (!isMultiSelect) {\r\n                this.updateState({ currentRow: srow }, false);\r\n                this.selectRowSubject.next(this._state.currentRow);\r\n\r\n                if (this._state.showCheckbox && this._state.checkOnSelect) {\r\n                    this._state.checkedRows = [ srow ];\r\n\r\n                    if (gridOpts && gridOpts.instance && gridOpts.instance.beforeCheck) {\r\n                        gridOpts.instance.beforeCheck({ rowIndex, rowData, gridInstance: gridOpts.instance }).subscribe(() => {\r\n                            this.checkRowSubject.next(srow);        \r\n                        })\r\n                    } else {\r\n                        this.checkRowSubject.next(srow);\r\n                    }\r\n                }\r\n            } else {\r\n                this.selectRowForMulti(srow, true, gridOpts);\r\n            }\r\n        }\r\n    }\r\n\r\n    private selectRowForMulti(srow: { id: any, data: any, index: any }, emit = true, gridOpts = null) {\r\n        if (this._state.onlySelectSelf) {\r\n            this._clearSelections();\r\n            this.updateState({ currentRow: srow, selections: [srow] }, false);\r\n        } else {\r\n            this._state.selections = this._state.selections || [];\r\n            this._state.selections = this._state.selections.filter(sr => sr.id !== srow.id);\r\n            this._state.selections.push(srow);\r\n        }\r\n        if (emit) {\r\n            this.selectRowSubject.next(srow);\r\n        }\r\n\r\n        if (this._state.checkOnSelect) {\r\n            this.checkRow(srow.index, srow.data, gridOpts);        \r\n        }\r\n    }\r\n\r\n    private unSelectRowForMulti(srow: { id: any, data: any, index: any }, emit = true, gridOpts = null) {\r\n        this._state.selections = this._state.selections.filter(sr => sr.id !== srow.id);\r\n\r\n        if (this._canCancelSelectWhenMulti() || (this._state.currentRow && this._state.currentRow.id === srow.id)) {\r\n            this.updateState({ currentRow: null });\r\n        }\r\n\r\n        if (this._state.checkOnSelect) {\r\n            this.unCheckRow(srow.index, srow.data, gridOpts);\r\n        }\r\n\r\n        if (emit) {\r\n            this.unSelectRowSubject.next(srow);\r\n        }\r\n\r\n    }\r\n\r\n    unSelectRow(rowIndex: number, rowData: any, gridOpts = null) {\r\n        const id = this.primaryId(rowData);\r\n        const isMultiSelect = this.isMultiSelect();\r\n        const srow = {id, index: rowIndex, data: rowData};\r\n        if (!isMultiSelect) {\r\n            if (this._state.currentRow) {\r\n                this.updateState({ currentRow: null });\r\n                this.unSelectRowSubject.next(srow);\r\n                if (this._state.showCheckbox) {\r\n                    this.unCheckRow(srow.index, srow.data, gridOpts);\r\n                }\r\n            }\r\n        } else {\r\n            this.unSelectRowForMulti(srow, true, gridOpts);\r\n        }\r\n    }\r\n\r\n    private _canCancelSelectWhenMulti() {\r\n        return !this._state.keepSelect && this._state.onlySelectSelf;\r\n    }\r\n\r\n    private _clearSelections(excludeIds?: string[]) {\r\n        this._state.currentRow = null;\r\n\r\n        if (!excludeIds || !excludeIds.length ) {\r\n            this._state.selections = [];\r\n        } else {\r\n            this._state.selections = this._state.selections.filter(n => {\r\n                return excludeIds.findIndex(i => i == n.id) > -1;\r\n            });\r\n        }\r\n    }\r\n\r\n    private _clearCheckeds(rows = []) {\r\n        if (!rows.length) {\r\n            this._state.checkedRows = [];\r\n        } else {\r\n            this._state.checkedRows = this._state.checkedRows.filter(n => rows.findIndex(r => this.primaryId(r) === n.id) == -1);\r\n        }\r\n    }\r\n\r\n    clearSelections(excludeIds?: string[]) {\r\n        const rows = this._state.selections;\r\n        excludeIds = excludeIds || [];\r\n        this._clearSelections(excludeIds);\r\n        const unCheckRows = rows.filter(n => excludeIds.findIndex(i => i == n.id) == -1);\r\n        if (this._state.checkOnSelect || (!this._state.multiSelect && this._state.showCheckbox)) {\r\n            // this._state.checkedRows = [];\r\n            // this.clearCheckedsSubject.next(rows);\r\n            this._state.checkedRows = this._state.checkedRows.filter(n => {\r\n                return !rows.find(t1 => t1.id == n.id && excludeIds.findIndex(i => i == n.id) == -1);\r\n            });\r\n            this.clearCheckedsSubject.next(unCheckRows);\r\n        }\r\n        this.clearSelectionSubject.next(unCheckRows);\r\n    }\r\n\r\n    clearCheckeds(clearAll = true) {\r\n        const rows = this.getAllRowsForLive();\r\n        const _rows = clearAll ? [] : rows;\r\n        this._clearCheckeds(_rows);\r\n        if (this._state.selectOnCheck) {\r\n           this._clearSelections();\r\n        }\r\n        this.clearCheckedsSubject.next(rows);\r\n    }\r\n\r\n    clearAll() {\r\n        this._clearCheckeds();\r\n        this._clearSelections();\r\n        this.clearAllSubject.next();\r\n    }\r\n\r\n    setMultiSelect(flag: boolean) {\r\n        this._state.multiSelect = flag;\r\n    }\r\n\r\n    setCheckOnSelect(flag: boolean) {\r\n        this._state.checkOnSelect = flag;\r\n    }\r\n\r\n    setSelectOnCheck(flag: boolean) {\r\n        this._state.selectOnCheck = flag;\r\n    }\r\n\r\n    setCurrentCell(dr: DatagridRow, field: string, cellElement?: any, cellRef?: any ) {\r\n        const { rowIndex, rowData } = {...dr};\r\n        let currentCell = {...this._state.currentCell, rowIndex, rowData, field, rowId: this.primaryId(rowData), cellElement };\r\n\r\n        if (field !== this._state.ControlPanelFeild) {\r\n            if (cellRef) {\r\n                currentCell.cellRef = cellRef;\r\n            }\r\n\r\n            if (field) {\r\n                currentCell.column = this.getColumn(field);\r\n            }\r\n\r\n            const isLastRow = rowIndex === this.getData().length - 1;\r\n            currentCell['lastRow'] = isLastRow;\r\n        } else {\r\n            currentCell = null;\r\n        }\r\n        this._state.currentCell = null;\r\n        this.updateState({currentCell}, false);\r\n        this.selectRow(rowIndex, rowData);\r\n        if (this._state.currentRow) {\r\n            this._state.currentRow.dr = dr;\r\n        }\r\n        this.selectCellSubject.next(currentCell);\r\n    }\r\n\r\n    cancelSelectCell() {\r\n        if (this._state.currentCell) {\r\n            this._state.currentCell = null;\r\n            this.updateState({currentCell: null}, false);\r\n            this.selectCellSubject.next(null);\r\n        }\r\n    }\r\n\r\n    primaryId(rowData: any) {\r\n        return rowData[this._state.idField];\r\n    }\r\n\r\n    getCurrentCell() {\r\n        return this._state.currentCell;\r\n    }\r\n\r\n    editCell() {\r\n        if (this._state.currentCell) {\r\n            if (!this._state.currentCell.isEditing) {\r\n                const cei = { ...this._state.currentCell, isEditing: true };\r\n                this.updateState({ currentCell: cei }, false);\r\n                this.selectCellSubject.next(cei);\r\n                // this.editCell$.next(cei);\r\n            }\r\n        }\r\n    }\r\n\r\n    endEditCell() {\r\n        if (this._state.currentCell && this._state.currentCell.isEditing) {\r\n            const cei = { ...this._state.currentCell, isEditing: false };\r\n            this.updateState({ currentCell: cei }, false);\r\n            this.selectCellSubject.next(cei);\r\n            // this.editCell$.next(cei);\r\n        }\r\n    }\r\n\r\n    appendRow(rowData: any) {\r\n        if (rowData && this.primaryId(rowData)) {\r\n            const pid = this.primaryId(rowData);\r\n            if (this.findRowIndex(pid) === -1) {\r\n                this._state.data.push(rowData);\r\n                const newData = [...this._state.data];\r\n                this.updateState({data: newData}, false);\r\n                this._state.originalData = cloneDeep(this._state.data);\r\n                this.refresh();\r\n                this.rowAppend$.emit(rowData);\r\n            } else {\r\n                throw new Error(`ä¸»é®ID å·²å­å¨ï¼ID: ${pid}`);\r\n            }\r\n        } else {\r\n            throw new Error(`ä¸»é®æ è¯å­æ®µä¸è½ä¸ºç©ºã`);\r\n        }\r\n    }\r\n\r\n    updateRow(rowid: any, rowData: any) {\r\n        const row = this.findRow(rowid);\r\n        if (row && row.data) {\r\n            if (rowData) {\r\n                const keys = Object.keys(rowData);\r\n                keys.forEach(field => {\r\n                    Utils.setValue(field, rowData[field], row.data);\r\n                });\r\n                // æ´æ°å·²å¾éçæ°æ®\r\n                this.updateCheckedData(rowid, rowData);\r\n                const rowUpdateParam = {...row, keyID: rowid};\r\n                this.rowUpdate$.emit(rowUpdateParam);\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteRow(rowid) {\r\n        const row = this.findRow(rowid);\r\n        if (row) {\r\n            const newData = this.removeRow(this._state.data, rowid);\r\n            this.updateState({data: newData}, false);\r\n            this._state.originalData = cloneDeep(this._state.data);\r\n            this.refresh();\r\n            this.rowDelete$.emit(rowid);\r\n            return row;\r\n        }\r\n    }\r\n    /**\r\n     * ä»æ°ç»ä¸­å é¤æå®çID\r\n     * @param data æ°ç»\r\n     * @param rowId è¦å é¤çID\r\n     */\r\n    removeRow(data, rowId) {\r\n        const newData = data.filter(n => {\r\n            const id = this.primaryId(n);\r\n            return rowId !== id;\r\n        });\r\n\r\n        return newData;\r\n    }\r\n\r\n    isCellSelected(cellInfo: CellInfo) {\r\n        const cc = this.getCurrentCell();\r\n        if (!cc) {\r\n            return false;\r\n        } else {\r\n            if ( this._state.currentRow.index === cc.rowIndex) {\r\n                return cc.field === cellInfo.field;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected updateState(state: Partial<FarrisDatagridState>, emit = true) {\r\n        const newState = { ...this._state, ...state };\r\n        this._state = newState;\r\n        if (emit) {\r\n            this.store.next(this._state);\r\n        }\r\n    }\r\n\r\n    resize(newSize?: {width: number, height: number, [key: string]: any}) {\r\n        if (newSize) {\r\n            this.updateState(newSize, false);\r\n        }\r\n        this.resetColumnsSize();\r\n        if (!this._state.groupRows) {\r\n            this.updateVirthualRows(this._state.virtual.scrollTop);\r\n        }\r\n    }\r\n\r\n    fitColumns(fit) {\r\n        this.updateState({fitColumns: fit}, false);\r\n        // const r = this.useUserSetColumnSize();\r\n        // this.setFitColumnsWidth(this._state.columnsGroup, true, r);\r\n        // this.gridSizeSubject.next(this._state);\r\n        this.resetColumnsSize();\r\n    }\r\n\r\n    private useUserSetColumnSize() {\r\n        if (this._state.autoFitColumns) {\r\n            const gridWidth = this._state.width;\r\n            const { leftFixedWidth, rightFixedWidth, originalTotalWidth } = this._state.columnsGroup;\r\n            return originalTotalWidth > gridWidth - leftFixedWidth - rightFixedWidth;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private resetColumnsSize() {\r\n        if (this._state.fitColumns) {\r\n            // 20200421\r\n            const r = this.useUserSetColumnSize();\r\n            this.setFitColumnsWidth(this._state.columnsGroup, r, r);\r\n        }\r\n        this.gridSizeSubject.next(this._state);\r\n    }\r\n\r\n    /**\r\n     * æ´æ°åè®¾ç½®\r\n     * @param columns æ°çåéå\r\n     * @param restitute æ¯å¦è¿ååå§å®½åº¦ é»è®¤ä¸º false\r\n     */\r\n    updateColumns(columns, restitute = false, emit = false) {\r\n        this._state.columns = columns;\r\n        this.initColumns(emit, restitute);\r\n        this.resizeColumns(restitute);\r\n    }\r\n\r\n\r\n    getGroupColumns(columns) {\r\n        let arr = [];\r\n        const allCols = this.getAllFlatColumns();\r\n        columns.forEach(c => {\r\n            if (!c.colspan || c.colspan == 1)            {\r\n                if (!arr.find(n => n.field === c.field)) {\r\n                    arr.push(c);\r\n                }\r\n            } else {\r\n                 arr = arr.concat(this.getGroupColumns(allCols.filter(n => n.parentId == c.id\t)));\r\n            }\r\n        });\r\n        return arr;\r\n    }\r\n\r\n\r\n\r\n    initColumns(emit = false, restColumnWidth = false) {\r\n        const columns = this._state.flatColumns;\r\n        let colgroup: any = {\r\n            leftFixed: [],\r\n            rightFixed: [],\r\n            normalColumns: [],\r\n            columns: []\r\n        };\r\n        if (columns && columns.length) {\r\n            const leftFixedCols = this.getFixedCols('left');\r\n            const rightFixedCols = this.getFixedCols('right');\r\n            const normalCols = this.getFixedCols();\r\n\r\n            columns.forEach(c => {\r\n                if (!c.originalWidth) {\r\n                    c.originalWidth = c.width;\r\n                } else {\r\n                    if (restColumnWidth) {\r\n                        c.width = c.originalWidth;\r\n                    }\r\n                }\r\n            });\r\n\r\n            colgroup = {\r\n                leftFixed: leftFixedCols,\r\n                rightFixed: rightFixedCols,\r\n                normalColumns: normalCols,\r\n                columns: leftFixedCols.concat(normalCols).concat(rightFixedCols)\r\n            };\r\n\r\n            this.initColumnsWidth(colgroup, restColumnWidth);\r\n\r\n            if (this._state.fitColumns) {\r\n                this.setFitColumnsWidth(colgroup, true);\r\n            }\r\n\r\n            this.updateState({ columnsGroup: colgroup }, emit);\r\n        } else {\r\n            colgroup.leftFixedWidth = 0;\r\n            colgroup.rightFixedWidth = 0;\r\n            colgroup.normalWidth = 0;\r\n            colgroup.totalWidth = 0;\r\n            this.updateState({ columnsGroup: colgroup }, emit);\r\n        }\r\n    }\r\n\r\n    getColumnIndex(field: string, fixed: 'right'| '' | 'left' | 'center' = '') {\r\n        const colgroup = this._state.columnsGroup;\r\n        if (!fixed || this._state.fast) {\r\n            return colgroup.normalColumns.findIndex(n => n.field === field);\r\n        } else {\r\n            if (fixed === 'left') {\r\n                return colgroup.leftFixed.findIndex(n => n.field === field);\r\n            } else if (fixed === 'right') {\r\n                return colgroup.rightFixed.findIndex(n => n.field === field);\r\n            }\r\n        }\r\n    }\r\n\r\n    columnResizeEnd() {\r\n        // const colgroup = this._state.columnsGroup;\r\n        // this.initColumnsWidth(colgroup, false);\r\n        // this.updateState({ columnsGroup:  {...colgroup} }, false);\r\n        // this.gridSizeSubject.next(this._state);\r\n        this.resizeColumns();\r\n    }\r\n\r\n\r\n    resizeColumns(restitute = false) {\r\n        const colgroup = this._state.columnsGroup;\r\n        this.initColumnsWidth(colgroup, restitute);\r\n        if (this._state.fitColumns) {\r\n            const r = this.useUserSetColumnSize();\r\n            if (r) {\r\n                this.setFitColumnsWidth(colgroup, restitute, r);\r\n            } else {\r\n                this.setFitColumnsWidth(colgroup, restitute);\r\n            }\r\n        }\r\n        this.updateState({ columnsGroup:  {...colgroup} }, false);\r\n        this.gridSizeSubject.next(this._state);\r\n    }\r\n\r\n    getAllFlatColumns() {\r\n        return flatten<DataColumn>(this._state.columns);\r\n    }\r\n\r\n    getColumn(fieldName: string) {\r\n        return this.getAllFlatColumns().find(n => n.field === fieldName);\r\n    }\r\n\r\n    setFitColumnsWidth(colgroup: ColumnGroup, restitute = false, useUserSetColumnSize = false) {\r\n        if (!colgroup) {\r\n            return;\r\n        }\r\n        colgroup.normalWidth = this._state.width - colgroup.leftFixedWidth - colgroup.rightFixedWidth;\r\n\r\n        if (this._state['scrollbarY']) {\r\n            colgroup.normalWidth -= this._state['scrollbarY'];\r\n        }\r\n\r\n        // tfs 613060\r\n        if (this._state.showBorder) {\r\n            colgroup.normalWidth -= 2;\r\n        }\r\n\r\n        if (useUserSetColumnSize) {\r\n            colgroup.totalWidth = colgroup.originalTotalWidth;\r\n            if (restitute) {\r\n                colgroup.normalColumns.forEach( col => {\r\n                    col.width = col.originalWidth;\r\n                });\r\n            }\r\n            // æ´æ° normalColumns width\r\n            colgroup.normalWidth = colgroup.normalColumns.reduce((totalWidth, col) => {\r\n                if (!restitute && col.width) {\r\n                    return totalWidth += col.width;\r\n                } else {\r\n                    return totalWidth += col.originalWidth;\r\n                }\r\n            }, 0);\r\n\r\n            colgroup.totalWidth = colgroup.leftFixedWidth + colgroup.rightFixedWidth + colgroup.normalWidth;\r\n        } else {\r\n            const minWidth = colgroup.normalColumns.reduce((totalWidth, col) => {\r\n                if (!restitute) {\r\n                    return totalWidth += col.width;\r\n                } else {\r\n                    return totalWidth += col.originalWidth;\r\n                }\r\n            }, 0);\r\n\r\n            // colgroup.normalWidth = colgroup.normalWidth - 2;\r\n\r\n            colgroup.normalColumns.forEach( col => {\r\n                if (!restitute) {\r\n                    // col.width = Math.floor( col.width / minWidth * colgroup.normalWidth );\r\n                    col.width = Number((col.width / minWidth * colgroup.normalWidth ).toFixed(2));\r\n                } else {\r\n                    // col.width = Math.floor( col.originalWidth / minWidth * colgroup.normalWidth );\r\n                    col.width =  Number(( col.originalWidth / minWidth * colgroup.normalWidth ).toFixed(2));\r\n                }\r\n            });\r\n            colgroup.totalWidth = colgroup.leftFixedWidth + colgroup.rightFixedWidth + colgroup.normalWidth;\r\n        }\r\n\r\n    }\r\n\r\n    private getFixedCols(direction: 'left' | 'right' | '' = '') {\r\n        let cols = [];\r\n        if (!direction) {\r\n            cols = this._state.flatColumns.filter(col => col.fixed !== 'left' && col.fixed !== 'right' );\r\n        } else {\r\n            cols = this._state.flatColumns.filter(col => col.fixed === direction);\r\n        }\r\n\r\n        // å¤è¡¨å¤´ï¼éæ°è®¡ç®åçé¡ºåº\r\n        if (this._state.columns.length > 1 && cols.length) {\r\n            const fields = DatagridColumnsHelper.getFields(this._state.columns);\r\n            const newcols = [];\r\n            fields.forEach(f => {\r\n                const c =  cols.find(col => (col.field || '' ) === f);\r\n                if (c) {\r\n                    newcols.push(c);\r\n                }\r\n            });\r\n            return newcols;\r\n        }\r\n\r\n        return cols;\r\n    }\r\n\r\n    // restitute: è¿ååå§å®½åº¦ï¼é»è®¤ false\r\n    private initColumnsWidth(colgroup: ColumnGroup,  restitute = false) {\r\n        let offset = 0;\r\n        offset = this._state.showLineNumber ? offset + this._state.lineNumberWidth : offset;\r\n        offset = this._state.showCheckbox ? offset + this._state.checkboxColumnWidth : offset;\r\n\r\n        const getColsWidth = (cols, val, reset) => {\r\n            return cols.reduce((r, c) => {\r\n                c.left = r;\r\n                if (!reset) {\r\n                    return r + c.width;\r\n                } else {\r\n                    return r + c.originalWidth;\r\n                }\r\n            }, val);\r\n        };\r\n\r\n        colgroup.leftFixedWidth = offset;\r\n        if (colgroup.leftFixed && colgroup.leftFixed.length) {\r\n            colgroup.leftFixedWidth = getColsWidth(colgroup.leftFixed, offset, restitute);\r\n        }\r\n\r\n        colgroup.rightFixedWidth = 0;\r\n        if (colgroup.rightFixed && colgroup.rightFixed.length) {\r\n            colgroup.rightFixedWidth = getColsWidth(colgroup.rightFixed, 0, restitute);\r\n        }\r\n\r\n        colgroup.normalWidth = 0;\r\n        if (this._state.columns && this._state.columns.length) {\r\n            colgroup.normalWidth = getColsWidth(colgroup.normalColumns, 0, restitute);\r\n            colgroup.originalTotalWidth = getColsWidth(colgroup.normalColumns, 0, true);\r\n        }\r\n\r\n        colgroup.totalWidth = colgroup.leftFixedWidth + colgroup.rightFixedWidth + colgroup.normalWidth;\r\n\r\n    }\r\n\r\n    showCheckbox(isShow = true) {\r\n        const colgroup = this._state.columnsGroup;\r\n        this.updateState({showCheckbox: isShow}, false);\r\n        if (isShow) {\r\n            colgroup.leftFixedWidth = colgroup.leftFixedWidth + this._state.checkboxColumnWidth;\r\n        } else {\r\n            colgroup.leftFixedWidth = colgroup.leftFixedWidth - this._state.checkboxColumnWidth;\r\n        }\r\n\r\n        this.columnResizeSubject.next(colgroup);\r\n    }\r\n\r\n    hideCheckbox() {\r\n        this.showCheckbox(false);\r\n    }\r\n\r\n    showLineNumber(isShow = true) {\r\n        const colgroup = this._state.columnsGroup;\r\n        this.updateState({showLineNumber: isShow}, false);\r\n        if (isShow) {\r\n            colgroup.leftFixedWidth = colgroup.leftFixedWidth + this._state.lineNumberWidth;\r\n        } else {\r\n            colgroup.leftFixedWidth = colgroup.leftFixedWidth - this._state.lineNumberWidth;\r\n        }\r\n\r\n        this.columnResizeSubject.next(colgroup);\r\n    }\r\n\r\n    hideLineNumber() {\r\n        this.showLineNumber(false);\r\n    }\r\n\r\n    setSortInfo(sortName, sortOrder) {\r\n        sortName = sortName || '';\r\n        sortOrder = sortOrder || '';\r\n        const fields = sortName.split(',');\r\n        const orders = sortOrder.split(',');\r\n        // if (!this._state.multiSort) {\r\n        const colgroup = this._state.columnsGroup;\r\n\r\n        const updateFieldOrder = (cols: DataColumn[]) => {\r\n            if (!cols || !cols.length) {\r\n                return;\r\n            }\r\n            cols.forEach( col => {\r\n                col.order = undefined;\r\n                const i = fields.findIndex(f => f === col.field);\r\n                if (i > -1) {\r\n                    col.order = orders[i];\r\n                }\r\n            });\r\n        };\r\n\r\n        updateFieldOrder(colgroup.normalColumns);\r\n        updateFieldOrder(colgroup.leftFixed);\r\n        updateFieldOrder(colgroup.rightFixed);\r\n        // }\r\n\r\n        this.updateState({sortName, sortOrder}, false);\r\n    }\r\n\r\n    orderBy(arr, props: any[], orders: any[]) {\r\n        const colObj = props.reduce((c, n) => {\r\n            c[n] = this.getColumn(n);\r\n            return c;\r\n        }, {});\r\n\r\n        return [...arr].sort((a, b) =>\r\n            props.reduce((acc, prop, i) => {\r\n                if (acc === 0) {\r\n                    let valA = Utils.getValue(prop, a);\r\n                    let valB = Utils.getValue(prop, b);\r\n\r\n                    if (colObj[prop] && colObj[prop]['isMultilingualField']) {\r\n                        valA = Utils.getMultilingualValue(valA, this.localId);\r\n                        valB = Utils.getMultilingualValue(valB, this.localId);\r\n                    }\r\n\r\n                    if (valA === undefined || valA === null) {\r\n                        valA = '';\r\n                    }\r\n                    if (valB === undefined || valB === null) {\r\n                        valB = '';\r\n                    }\r\n\r\n                    const [p1, p2] = orders && orders[i] === 'desc' ? [valB, valA] : [valA, valB];\r\n                    if (typeof p1 === 'string') {\r\n                        acc = p1.localeCompare(p2);\r\n                    } else {\r\n                        acc = p1 > p2 ? 1 : p1 < p2 ? -1 : 0;\r\n                    }\r\n                }\r\n                return acc;\r\n            }, 0)\r\n        );\r\n    }\r\n\r\n    sort(data: any) {\r\n        const orders = this._state.sortOrder.split(',');\r\n        const fields = this._state.sortName.split(',');\r\n\r\n        if (this._state.mergeCell && this._state.mergeFields && this._state.mergeFields.length) {\r\n            const newOrders = [];\r\n            const newFields = [...this._state.mergeFields];\r\n            fields.forEach((f, i) => {\r\n                let k = newFields.indexOf(f);\r\n                if (k == -1) {\r\n                    newFields.push(f);\r\n                    k = newFields.length - 1;\r\n                }\r\n                newOrders[k] = orders[i];\r\n            });\r\n\r\n            return this.orderBy(data, newFields, newOrders);\r\n        }\r\n\r\n        return this.orderBy(data, fields, orders);\r\n    }\r\n\r\n\r\n    clientSort(data?: any) {\r\n        if (this._state.sortName) {\r\n            if (data) {\r\n                this.updateState({ data }, false);\r\n            }\r\n            const sortedData = this.sort(this._state.data);\r\n            this.loadData(sortedData, false);\r\n        } else {\r\n            this.clearSort();\r\n        }\r\n\r\n        this.clientSort$.emit({sortName: this._state.sortName, sortOrder: this._state.sortOrder});\r\n    }\r\n\r\n    clearSort() {\r\n        this.loadData(this._state.originalData, false);\r\n    }\r\n\r\n    loadFilterData(filterData: any[]) {\r\n        this.loadData(filterData, false);\r\n    }\r\n\r\n\r\n    //#region åæ´é\r\n\r\n    private hasRowChanges(rowid: any) {\r\n        const _changes = this._state.changes;\r\n        if (!_changes) {\r\n            return false;\r\n        }\r\n        return _changes[rowid];\r\n    }\r\n\r\n    appendChanges(changes: RowDataChanges) {\r\n        if (!changes) {\r\n            return;\r\n        }\r\n        const id = changes[this._state.idField];\r\n        if (!id) {\r\n            return;\r\n        }\r\n        const _id = '' + id;\r\n        if (!this.hasRowChanges(_id)) {\r\n            this._state.changes = this._state.changes || {};\r\n            this._state.changes[_id] = changes;\r\n        } else {\r\n            this._state.changes[_id] = Object.assign(this._state.changes[_id], changes);\r\n        }\r\n    }\r\n\r\n    acceptChanges() {\r\n        const changes = this._state.changes;\r\n        if (changes) {\r\n            const keys = Object.keys(changes);\r\n            keys.forEach(id => {\r\n                this.updateRow(id, changes[id]);\r\n            });\r\n            this._state.originalData = cloneDeep(this._state.data);\r\n        }\r\n    }\r\n    rejectChanges(rowid = null) {\r\n        const changes = this._state.changes;\r\n        if (changes) {\r\n            if (!rowid) {\r\n                this._state.data = cloneDeep(this._state.originalData);\r\n                this._state.changes = null;\r\n            } else {\r\n                const rowChanges =  this._state.changes['' + rowid];\r\n                if (rowChanges) {\r\n                    const orgiRow = this._state.originalData.find(r => this.primaryId(r) === rowid);\r\n                    this._state.data.forEach(r => {\r\n                        if (this.primaryId(r) === rowid) {\r\n                            r = cloneDeep(orgiRow);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.refresh();\r\n        }\r\n    }\r\n\r\n    getChanges() {\r\n        return this._state.changes;\r\n    }\r\n\r\n    refresh() {\r\n        const data = cloneDeep(this._state.data);\r\n        this.loadData(data);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    /**\r\n     * æé åè®¡è¡\r\n     * @param data æ°æ®éå\r\n     */\r\n    getFooterData(data) {\r\n        if (!data || !data.length) {\r\n            return [];\r\n        }\r\n\r\n        // const columns = this._state.flatColumns;\r\n        const columns = flatten<DataColumn>(this._state.columns).filter((col: DataColumn) => !col.colspan || col.colspan == 1);\r\n        const footerRow = {};\r\n\r\n        columns.forEach(col => {\r\n            if (col.footer && col.footer.options) {\r\n                const options = col.footer.options;\r\n                const text = options.text;\r\n                const typ = options.calculationType as CalculationType;\r\n\r\n                if (typ !== undefined && typ != -1) {\r\n                    const val = this.calculation(data, typ, col);\r\n                    footerRow[col.field] = val;\r\n                } else {\r\n                    footerRow[col.field] = text || '';\r\n                }\r\n            } else {\r\n                footerRow[col.field] = '';\r\n            }\r\n        });\r\n\r\n        return [footerRow];\r\n    }\r\n\r\n    private arrToGroup(items, fields: string[]) {\r\n        if (fields.length) {\r\n            const first = fields.shift();\r\n            const g1 = groupBy(items, (n) => Utils.getValue(first, n));\r\n            this.toGroup(g1, fields);\r\n            return g1;\r\n        }\r\n    }\r\n\r\n    private toGroup(g1, fieldArr) {\r\n        if (fieldArr.length) {\r\n            Object.keys(g1).forEach((k) => {\r\n                const items = g1[k];\r\n                const _nextFields = fieldArr.map((n) => n);\r\n                const _f = _nextFields.shift();\r\n                g1[k] = groupBy(items, (n) => Utils.getValue(_f, n));\r\n                if (_nextFields.length) {\r\n                    this.toGroup(g1[k], _nextFields);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private groupRows2Flat(groupRows, initLevel, parent) {\r\n        let results = [];\r\n        if (initLevel === undefined) {\r\n            initLevel = 0;\r\n        }\r\n        const idfield = this._state.idField;\r\n        const columns = this._state.flatColumns;\r\n        const data = this._state.data;\r\n        const groupFieldArr = this._state.groupField.split(',');\r\n        const pid = parent ? parent[idfield] : null;\r\n        const colspan = this._state.columnsGroup.normalColumns.length;\r\n\r\n        const expandGroupRows = this._state.expandGroupRows;\r\n\r\n        Object.keys(groupRows).forEach((k, m) => {\r\n\r\n            const groupItem = { [idfield]: Utils.uuid(),\r\n                                [IS_GROUP_ROW_FIELD]: true, [GROUP_LEVEL_FIELD]: initLevel, data: { }, value: k,\r\n                                [GROUP_VISIBLE_FIELD]: true, expanded: expandGroupRows, field: groupFieldArr[initLevel],\r\n                                colspan, total: 0, rows: [], [GROUP_ROW_FIELD]: pid};\r\n\r\n            // TFS: 356955\r\n            if (parent) {\r\n                groupItem.rows = parent.rows.filter(n => !n[IS_GROUP_ROW_FIELD] &&\r\n                    !n[IS_GROUP_FOOTER_ROW_FIELD] &&  Utils.getValue(groupFieldArr[initLevel], n) === k);\r\n                \r\n                groupItem[GROUP_VISIBLE_FIELD] = expandGroupRows;\r\n            } else {\r\n                groupItem.rows = data.filter(n => '' + Utils.getValue(groupFieldArr[initLevel], n) === k);\r\n            }\r\n\r\n            if (parent) {\r\n                parent.rows.push(groupItem);\r\n            }\r\n\r\n            groupItem.total = groupItem.rows.filter(n => !n[IS_GROUP_ROW_FIELD] && !n[IS_GROUP_FOOTER_ROW_FIELD]).length;\r\n\r\n            results.push(groupItem);\r\n            let items = groupRows[k];\r\n            if (isPlainObject(items)) {\r\n                const level = initLevel + 1;\r\n                results = results.concat(this.groupRows2Flat(items, level, groupItem));\r\n            } else {\r\n                groupItem.total = items.length;\r\n                items = items.map(n => {\r\n                    n[GROUP_ROW_FIELD] = groupItem[idfield];\r\n                    n[GROUP_VISIBLE_FIELD] = expandGroupRows;\r\n                    n[GROUP_LEVEL_FIELD] = groupItem[GROUP_LEVEL_FIELD] + 1;\r\n                    return n;\r\n                });\r\n                groupItem.rows = items;\r\n                results = results.concat(items);\r\n            }\r\n\r\n            if (this._state.groupFooter) {\r\n                const footerItem = {\r\n                    [IS_GROUP_FOOTER_ROW_FIELD]: true,\r\n                    [GROUP_ROW_FIELD]: groupItem[idfield],\r\n                    [GROUP_VISIBLE_FIELD]: expandGroupRows,\r\n                    [GROUP_LEVEL_FIELD]: initLevel,\r\n                    data: {}\r\n                };\r\n                groupItem.rows.push(footerItem);\r\n                results.push(footerItem);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n\r\n    /** æ´æ°åç»åè®¡è¡æ°æ® */\r\n    private updateGroupFooterData(groupFooterRow: any, columns: any, groupRows: any) {\r\n        columns.forEach(col => {\r\n            if (col.groupFooter && col.groupFooter.options) {\r\n                const options = col.groupFooter.options;\r\n                const text = options.text;\r\n                const typ = options.calculationType as CalculationType;\r\n\r\n                if (typ !== undefined && typ != -1) {\r\n                    const val = this.calculation(groupRows, typ, col);\r\n                    groupFooterRow.data[col.field] = val;\r\n                } else {\r\n                    groupFooterRow.data[col.field] = text || '';\r\n                }\r\n            } else {\r\n                groupFooterRow.data[col.field] = '';\r\n            }\r\n        });\r\n    }\r\n\r\n    /** å¤å­æ®µåç»\r\n     * groupField ä»¥éå·åéï¼ä»å·¦å°å³ä¾æ¬¡è¿è¡åç»\r\n     */\r\n    private groupRows2(data: any[]) {\r\n        if (data && data.length) {\r\n            const columns = this._state.flatColumns;\r\n            const groupField = this._state.groupField || '';\r\n\r\n            if (!groupField) {\r\n                return data;\r\n            }\r\n\r\n            const groupData = this.arrToGroup(data, groupField.split(','));\r\n            const result = this.groupRows2Flat(groupData, 0, null);\r\n\r\n            let k = 0;\r\n\r\n            const prow = (pid) => result.find(n => n[this._state.idField] === pid);\r\n\r\n            result.map((n, i) => {\r\n                if (!n[IS_GROUP_ROW_FIELD] && !n[IS_GROUP_FOOTER_ROW_FIELD]) {\r\n                    n[ROW_INDEX_FIELD] = k;\r\n                    k++;\r\n                }\r\n\r\n                // æ´æ°åè®¡è¡æ°æ®\r\n                if (n[IS_GROUP_FOOTER_ROW_FIELD]) {\r\n                    const rows = prow(n[GROUP_ROW_FIELD]).rows.filter((r: any) => !r[IS_GROUP_ROW_FIELD] && !r[IS_GROUP_FOOTER_ROW_FIELD]);\r\n                    this.updateGroupFooterData(n, columns, rows);\r\n                }\r\n\r\n                return n;\r\n            });\r\n            return result;\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    showGroupFooter(groupFooter) {\r\n        this.updateState({groupFooter}, false);\r\n        this.updateVirthualRows(0);\r\n    }\r\n\r\n    updateGroupFooter(groupRowId: string) {\r\n        const groupRow = this._state.virtual.virtualRows.find((n: any) => {\r\n            return n['id'] === groupRowId;\r\n        });\r\n\r\n        // tfs 574567\r\n        if (groupRow && groupRow.rows) {\r\n            const groupRows = groupRow.rows;\r\n            const groupFooterRows = groupRows.filter((n: any) => n['__group_footer__']);\r\n            const columns = this._state.flatColumns;\r\n\r\n            const rows = groupRows.filter((n: any) => !n['__group_footer__']);\r\n\r\n            groupFooterRows.forEach((n: any) => {\r\n                this.updateGroupFooterData(n, columns, rows);\r\n            });\r\n\r\n            if (groupRow['__group_parent_id__']) {\r\n                this.updateGroupFooter(groupRow['__group_parent_id__']);\r\n            }\r\n        }\r\n    }\r\n\r\n    private calculation(data: any, typ: CalculationType, col: any) {\r\n        let val: any = '';\r\n        // TFS: 357000\r\n        // http://10.24.1.11:8080/tfs/GSP/GSPCloud/web/_queries?id=357000&triage=true&fullScreen=false&_a=edit\r\n        if (!data || !data.length) {\r\n            return '';\r\n        }\r\n        const field = col.field;\r\n        const arr = data.map((o) => Utils.getValue(field, o) || 0);\r\n        switch (typ) {\r\n            case CalculationType.sum:\r\n                // val = sumBy(data, (o) => Utils.getValue(field, o));\r\n                val = BigNumber.sum.apply(null, arr).toFixed();\r\n                break;\r\n            case CalculationType.max:\r\n                // const maxObj = maxBy(data, (o) => Utils.getValue(field, o));\r\n                // val = Utils.getValue(field, maxObj);\r\n                val = BigNumber.max.apply(null, arr).toFixed();\r\n                break;\r\n            case CalculationType.min:\r\n                // const minObj = minBy(data, (o) => Utils.getValue(field, o));\r\n                // val = Utils.getValue(field, minObj);\r\n                val = BigNumber.min.apply(null, arr).toFixed();\r\n                break;\r\n            case CalculationType.average:\r\n                // val = meanBy(data, (o) => Utils.getValue(field, o));\r\n                val = BigNumber.sum.apply(null, arr).div(arr.length).toFixed();\r\n                break;\r\n            case CalculationType.count:\r\n                val = data.length;\r\n                break;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    setGroupRowsVisible(row, open: boolean, emit = true) {\r\n\r\n        if (row.rows) {\r\n\r\n            // if (!this._state.virtualized) {\r\n                const groupRows = row.rows.filter(n => n[IS_GROUP_ROW_FIELD]);\r\n                const footerRows = row.rows.filter(n => n[IS_GROUP_FOOTER_ROW_FIELD]);\r\n\r\n                if (footerRows && footerRows.length) {\r\n                    footerRows.forEach(n => {\r\n                        n[GROUP_VISIBLE_FIELD] = open && row.expanded;\r\n                    });\r\n                }\r\n\r\n                groupRows.forEach(t => {\r\n                    t[GROUP_VISIBLE_FIELD] = open && row.expanded && row[GROUP_VISIBLE_FIELD];\r\n                    this.setGroupRowsVisible(t, open, false);\r\n                });\r\n\r\n                if (!groupRows.length) {\r\n                    row.rows.forEach(t => {\r\n                        t[GROUP_VISIBLE_FIELD] = open && row.expanded && row[GROUP_VISIBLE_FIELD];\r\n                    });\r\n                }\r\n            // }\r\n\r\n            // è§¦åè¡å±å¼ææå äºä»¶\r\n            if (emit) {\r\n                if (open) {\r\n                    this.expandGroupRow.emit({ data: row });\r\n                } else {\r\n                    this.collapseGroupRow.emit({ data: row });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //#region ç»ä»¶åå§å±æ§\r\n\r\n    setinitialOptions(opts: {[key: string]: any}) {\r\n        this._state.initialOptions = {};\r\n        // åç»\r\n        this._state.initialOptions['groupField'] = opts.groupField;\r\n        this._state.initialOptions['expandGroupRows'] = opts.expandGroupRows;\r\n        \r\n\r\n        // æåº\r\n        this._state.initialOptions['sort'] = {\r\n            sortName: opts.sortName,\r\n            sortOrder: opts.sortOrder\r\n        };\r\n\r\n        const fieldInfo = (n) => {\r\n            if (n.field === \"_datagrid-setting-control_\") {\r\n                return null;\r\n            }\r\n            return {\r\n                field: n.field,\r\n                title: n.title,\r\n                colspan: n.colspan,\r\n                rowspan: n.rowspan,\r\n                fixed: n.fixed,\r\n                width: n.width || 100,\r\n                sortable: n.sortable,\r\n                order: n.order,\r\n                halign: n.halign,\r\n                align: n.align,\r\n                visible: n.visible,\r\n                allowGrouping: n.allowGrouping,\r\n                groupFooter: cloneDeep(n.groupFooter || {}),\r\n                footer: cloneDeep(n.footer || {}),\r\n                dataType: n.dataType || 'string'\r\n            };\r\n        }\r\n\r\n        // åæ¾ç¤ºéèãå¯¹é½æ¹å¼\r\n        if (opts.columns) {\r\n            if ( opts.columns.length === 1) {\r\n                this._state.initialOptions['columnFields'] = (opts.columns[0] as any).map(n => {\r\n                    return fieldInfo(n);\r\n                }).filter(n => n);\r\n            } else {\r\n                this._state.initialOptions['groupHeaderFields'] = opts.columns.map(cols => {\r\n                    return cols.map((n: any) => {\r\n                        return fieldInfo(n);\r\n                    }).filter(n => n);\r\n                });\r\n            }\r\n\r\n            this._state.initialOptions['designerColumns']  = [...opts.columns.map(n => {\r\n                return [...n];\r\n            })];\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    //#endregion\r\n}\r\n","/*\r\n* @Author: ç¯çç§æ(Lucas Huang)\r\n* @Date: 2019-08-06 07:43:53\r\n* @LastEditors: ç¯çç§æ(Lucas Huang)\r\n* @LastEditTime: 2019-11-09 20:44:54\r\n* @QQ: 1055818239\r\n* @Version: v0.0.1\r\n*/\r\nimport { EventEmitter } from '@angular/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\nimport { filter, map, debounceTime } from 'rxjs/operators';\r\nimport { CommonUtils, IdService } from '@farris/ui-common';\r\nimport { RowEventParam, RowHoverEventParam } from '../types/event-params';\r\nimport { CellInfo } from './state';\r\nimport { Utils } from './../utils/utils';\r\nimport { CUSTOM_CELL_CLS, CUSTOM_GROUP_ROW_CLS, CUSTOM_ROW_CLS } from '../types/constant';\r\n\r\nexport type ScrollAction =\r\n    | 'psScrollY'\r\n    | 'psScrollX'\r\n    | 'psScrollUp'\r\n    | 'psScrollDown'\r\n    | 'psScrollLeft'\r\n    | 'psScrollRight'\r\n    | 'psYReachEnd'\r\n    | 'psYReachStart'\r\n    | 'psXReachEnd'\r\n    | 'psXReachStart';\r\n\r\nexport class DatagridService {\r\n    private scorllSubject = new Subject();\r\n    private scrollX = new BehaviorSubject(0);\r\n\r\n    private rowHoverSubject = new Subject<RowHoverEventParam>();\r\n    private rowSelectSubject = new Subject<Partial<RowHoverEventParam>>();\r\n\r\n    private dataSourceChangedSubject = new Subject();\r\n    /** ç¼è¾ååæ ¼ */\r\n    private editCellSubject = new Subject();\r\n    /** éä¸­ååæ ¼ */\r\n    private selectCellSubject = new Subject();\r\n    /** ç»æååç¼è¾ */\r\n    private endCellEdit = new Subject();\r\n    private changeCheckedRows = new Subject();\r\n    /** ç»æè¡ç¼è¾ */\r\n    // private endRowEdit = new BehaviorSubject(true);\r\n\r\n    public scorll$ = this.scorllSubject.asObservable();\r\n    public scrollX$ = this.scorll$.pipe(\r\n        filter((p: any) => p.type === 'psScrollX'),\r\n        map(t => t.x),\r\n        debounceTime(50)\r\n    );\r\n    public scrollY$ = this.scorll$.pipe(\r\n        filter((p: any) => p.type === 'psScrollY'),\r\n        map(t => t.x),\r\n        debounceTime(50)\r\n    );\r\n    public rowHover$ = this.rowHoverSubject.asObservable();\r\n    public rowClick$ = this.rowSelectSubject.asObservable();\r\n    public onDataSourceChange = this.dataSourceChangedSubject.asObservable();\r\n    public cellEdit$ = this.editCellSubject.asObservable();\r\n    public endCellEdit$ = this.endCellEdit.asObservable();\r\n    public checkedRowsTotalChanged$ = this.changeCheckedRows.asObservable();\r\n    public updateEmptyStyle$ = new EventEmitter();\r\n\r\n    public showGridHeader = new EventEmitter();\r\n    // åæ¶å¨é\r\n    public uncheckAll = new EventEmitter();\r\n    // å¨é¨éä¸­\r\n    public checkAll = new EventEmitter();\r\n\r\n    public columnResized = new EventEmitter();\r\n\r\n    public rowHeightChanged = new EventEmitter();\r\n\r\n    public loadVirtualData = new EventEmitter();\r\n    /** æ¾ç¤ºåºå®åéå½± */\r\n    public showFixedShadow = new EventEmitter();\r\n    // public endRowEdit$ = this.endRowEdit.asObservable();\r\n\r\n    public setSelecedRow = new EventEmitter();\r\n    public setCheckedRows = new EventEmitter();\r\n\r\n    public scrollToCurrentRow = new EventEmitter();\r\n\r\n    public columnsChanged = new EventEmitter();\r\n\r\n    public cellContentWrapChanged = new EventEmitter();\r\n\r\n    public onFilterChanged = new EventEmitter();\r\n    public clearFilter = new EventEmitter();\r\n    public filterTextChange = new EventEmitter();\r\n    public toggleFilterRow = new EventEmitter();\r\n\r\n    public closeFilterPanel = new EventEmitter();\r\n\r\n    public refreshFooterData = new EventEmitter();\r\n\r\n    public disableHeader = new EventEmitter();\r\n    /** æ´æ°å¨éå¤éæ¡ç¶æ */\r\n    public changeCheckAllStatus = new EventEmitter();\r\n\r\n    public setScrollbarPosition = new EventEmitter();\r\n\r\n    public smartFilterBarExpand = new EventEmitter();\r\n    public smartFilterDataChange = new EventEmitter();\r\n\r\n    public scrollbarUpdate = new EventEmitter();\r\n\r\n    footerPositionChanged = new EventEmitter();\r\n\r\n    styleElement: HTMLStyleElement = null;\r\n    commonUtils: CommonUtils = null;\r\n\r\n    idService: IdService = null;\r\n\r\n    // ååæ ¼ç¼è¾å¨åå»ºå®æ\r\n    cellEditorCreated = new EventEmitter();\r\n    // ååæ ¼ç¼è¾å¨éæ¯\r\n    cellEditorDestory = new EventEmitter();\r\n    // ç¦ç¹è¡åæ¢\r\n    focusRowChanged = new EventEmitter();\r\n    dataloaded = new EventEmitter();\r\n\r\n    toggleGroupRow$ = new EventEmitter<{ groupRowIndex: number, expand: boolean }>();\r\n    toggleAllGroupRows$ = new EventEmitter<{expand: boolean }>();\r\n    \r\n    // CSS ææ¬ç¼å­\r\n    private cssTextCache: Array<string> = [];\r\n\r\n    constructor() { }\r\n\r\n    onScrollMove(x: number, action: ScrollAction) {\r\n        this.scorllSubject.next({ x, type: action });\r\n    }\r\n\r\n    dataSourceChanged() {\r\n        this.dataSourceChangedSubject.next();\r\n    }\r\n\r\n    onRowHover(rowIndex: number, rowData: any, mouseEnter: boolean) {\r\n        this.rowHoverSubject.next({ index: rowIndex, data: rowData, mouseenter: mouseEnter });\r\n    }\r\n\r\n    onRowClick(rowIndex: number, rowData: any) {\r\n        this.rowSelectSubject.next({ index: rowIndex, data: rowData });\r\n    }\r\n\r\n    onCellEdit(tdElement: any) {\r\n        this.editCellSubject.next(tdElement);\r\n    }\r\n\r\n    onEndCellEdit(cell: CellInfo) {\r\n        this.endCellEdit.next(cell);\r\n    }\r\n\r\n    onSelectCell(cell: CellInfo) {\r\n        this.selectCellSubject.next(cell);\r\n    }\r\n\r\n    onCheckedRowsCountChange() {\r\n        this.changeCheckedRows.next();\r\n    }\r\n\r\n    onRowHeightChange(rowHeight: number) {\r\n        this.rowHeightChanged.emit(rowHeight);\r\n    }\r\n\r\n    onLoadVirtualData(data: any) {\r\n        this.loadVirtualData.emit({ data });\r\n    }\r\n\r\n    onClearFilter() {\r\n        this.clearFilter.emit();\r\n        this.filterTextChange.emit('');\r\n    }\r\n\r\n    onFilterTextChange(txt: string) {\r\n        this.filterTextChange.emit(txt);\r\n    }\r\n\r\n    restoreScrollbarPosition() {\r\n        this.setScrollbarPosition.emit();\r\n    }\r\n\r\n    updateEmptyStyle() {\r\n        this.updateEmptyStyle$.emit();\r\n    }\r\n\r\n    groupBy = (arr, fn) => arr.map(typeof fn === 'function' ? fn : val => Utils.getValue(fn, val)).reduce((acc, val, i) => {\r\n        acc[val] = (acc[val] || []).concat(arr[i]);\r\n        return acc;\r\n    }, {})\r\n\r\n    getMergeCellInfo(data, mergeFields) {\r\n        const result = {};\r\n        let firstVal = null;\r\n        let currVal;\r\n\r\n        mergeFields.forEach((f, i) => {\r\n            if (i === 0) {\r\n                data.forEach((d, j) => {\r\n                    const item = { [f]: { show: true, rowspan: 1 } };\r\n                    if (!result[j]) {\r\n                        result[j] = item;\r\n                    } else {\r\n                        if (!result[j][f]) {\r\n                            result[j] = Object.assign(result[j], item);\r\n                        }\r\n                    }\r\n\r\n                    const _item = result[j];\r\n\r\n                    currVal = d[f];\r\n                    if (firstVal === null || firstVal !== currVal) {\r\n                        firstVal = currVal;\r\n                        _item[f].show = true;\r\n                        _item[f].startIndex = j;\r\n                    } else {\r\n                        const strIndex = result[j - 1][f].startIndex;\r\n                        _item[f].startIndex = strIndex;\r\n                        _item[f].show = false;\r\n                        result[strIndex][f].rowspan++;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    getMergeCellInfo0(data, field) {\r\n        const result = {};\r\n        let firstVal;\r\n        let currVal;\r\n        data.forEach((d, j) => {\r\n            const item = { [field]: { show: true, rowspan: 1, value: '' } };\r\n            if (!result[j]) {\r\n                result[j] = item;\r\n            }\r\n\r\n            const _item = result[j];\r\n            currVal = Utils.getValue(field, d);\r\n            _item[field].value = currVal;\r\n            if (firstVal === undefined || firstVal !== currVal) {\r\n                firstVal = currVal;\r\n                _item[field].show = true;\r\n                _item[field].startIndex = j;\r\n            } else {\r\n                const strIndex = result[j - 1][field].startIndex;\r\n                _item[field].startIndex = strIndex;\r\n                _item[field].show = false;\r\n                result[strIndex][field].rowspan++;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    getMergeCellInfo2(data, mergeFields) {\r\n        let result = {};\r\n        let firstVal = null;\r\n        result = this.getMergeCellInfo0(data, mergeFields.splice(0, 1)[0]);\r\n\r\n        const groupData = this.groupBy(data, mergeFields[0]);\r\n        const groupKeys = Object.keys(groupData);\r\n        let startRowIndex = 0;\r\n        mergeFields.forEach((f, i) => {\r\n            groupKeys.forEach((k, j) => {\r\n                let currVal;\r\n                groupData[k].forEach((d, n) => {\r\n                    if (result[startRowIndex] && !result[startRowIndex][f]) {\r\n                        result[startRowIndex] = Object.assign(result[startRowIndex], { [f]: { show: true, rowspan: 1, value: '' } });\r\n                    }\r\n\r\n                    const _item = result[startRowIndex];\r\n                    currVal = Utils.getValue(f, d);\r\n                    _item[f].value = currVal;\r\n                    if (firstVal === null || firstVal !== currVal) {\r\n                        firstVal = currVal;\r\n                        _item[f].show = true;\r\n                        _item[f].startIndex = startRowIndex;\r\n                    } else {\r\n                        const strIndex = result[startRowIndex - 1][f].startIndex;\r\n                        _item[f].startIndex = strIndex;\r\n                        _item[f].show = false;\r\n                        result[strIndex][f].rowspan++;\r\n                    }\r\n\r\n                    startRowIndex++;\r\n                });\r\n            });\r\n        });\r\n        return result;\r\n    }\r\n\r\n\r\n    getMergeCellInfo3(data, mergeFields) {\r\n        let result = {};\r\n        const firstField = mergeFields.splice(0, 1)[0];\r\n        result = this.getMergeCellInfo0(data, firstField);\r\n        let prevGroupField = firstField;\r\n        // const groupData = this.groupBy(data, firstField);\r\n        // const groupKeys = Object.keys(groupData);\r\n        mergeFields.forEach((f, i) => {\r\n            let startRowIndex = 0;\r\n\r\n            let firstVal;\r\n            let currVal;\r\n\r\n            if (i > 0) {\r\n                prevGroupField = mergeFields[i - 1];\r\n            }\r\n\r\n            data.forEach((d, n) => {\r\n                if (result[startRowIndex] && !result[startRowIndex][f]) {\r\n                    result[startRowIndex] = Object.assign(result[startRowIndex], { [f]: { show: true, rowspan: 1, value: '' } });\r\n                }\r\n\r\n                const _item = result[startRowIndex];\r\n                currVal = Utils.getValue(f, d);\r\n                _item[f].value = currVal;\r\n\r\n                if (startRowIndex > 0) {\r\n                    const prevItem = result[startRowIndex - 1];\r\n                    const _c = Object.keys(_item).map(c => '' + _item[c].value).join(',');\r\n                    const _p = Object.keys(prevItem).map(p => '' + prevItem[p].value).join(',');\r\n\r\n                    if (_c !== _p) {\r\n                        firstVal = undefined;\r\n                    }\r\n                }\r\n\r\n                if ((firstVal === undefined || firstVal !== currVal)) {\r\n                    firstVal = currVal;\r\n                    _item[f].show = true;\r\n                    _item[f].startIndex = startRowIndex;\r\n                } else {\r\n                    const startIndex = result[startRowIndex - 1][f].startIndex;\r\n                    _item[f].startIndex = startIndex;\r\n                    _item[f].show = false;\r\n                    result[startIndex][f].rowspan++;\r\n                }\r\n\r\n                if (data.length - 1 > startRowIndex) {\r\n                    startRowIndex++;\r\n                }\r\n            });\r\n        });\r\n        return result;\r\n    }\r\n\r\n\r\n    getMergeInfo(rowIndex: number, field: string, mergeCellInfo: any) {\r\n        if (field && mergeCellInfo && mergeCellInfo[rowIndex] && mergeCellInfo[rowIndex][field]) {\r\n            return mergeCellInfo[rowIndex][field];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    removeStyleSheet() {\r\n        if (this.styleElement) {\r\n            this.styleElement.remove();\r\n            this.styleElement = null;\r\n            // æ¸ç©ºç¼å­\r\n            this.cssTextCache = [];\r\n        }\r\n    }\r\n\r\n    createStyleElement(styleSheetId: string) {\r\n        this.styleElement = this._createStyleSheet(styleSheetId);\r\n    }\r\n\r\n    appendCssRules(rules: string[]) {\r\n        if (this.styleElement) {\r\n            this._appendCssRules(rules, this.styleElement.sheet);\r\n        }\r\n    }\r\n\r\n    removeCssRule(ruleName: string | Array<string>) {\r\n        if (this.styleElement) {\r\n            if (typeof ruleName === 'string') {\r\n                this._removeCssRule(ruleName, this.styleElement.sheet);\r\n                this.cssTextCache = this.cssTextCache.filter(n => n.indexOf(ruleName) == -1);\r\n            } else {\r\n                if (Array.isArray(ruleName)) {\r\n                    ruleName.forEach(n => {\r\n                        this._removeCssRule(n, this.styleElement.sheet);\r\n                        this.cssTextCache = this.cssTextCache.filter(n => n.indexOf(n) == -1);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private _createStyleSheet(styleSheetId: string): HTMLStyleElement {\r\n        const htmlHead = document.querySelector('head');\r\n\r\n        const styleEleId = styleSheetId;\r\n        let styleElement = null;\r\n        if (document.querySelector('#' + styleEleId)) {\r\n            styleElement = document.querySelector('#' + styleEleId);\r\n            styleElement.innerText = '';\r\n        } else {\r\n            styleElement = document.createElement('style');\r\n            styleElement.id = styleEleId;\r\n            styleElement.type = 'text/css';\r\n            htmlHead.appendChild(styleElement);\r\n        }\r\n\r\n        return styleElement;\r\n    }\r\n\r\n    private _appendCssRules(rules: string[], styleSheet) {\r\n        let allCssText = '';\r\n        for (const rule of rules) {\r\n            const ruleName = rule.slice(0, rule.indexOf('{')).trim();\r\n\r\n            // const removedCssRule = this._removeCssRule(ruleName, styleSheet);\r\n            const removedCssRule = this._getCssTextBySelector(ruleName, styleSheet);\r\n            \r\n            let cssText = '';\r\n            if (removedCssRule && ruleName.indexOf(CUSTOM_CELL_CLS) == -1 && ruleName.indexOf(CUSTOM_GROUP_ROW_CLS) == -1  && ruleName.indexOf(CUSTOM_ROW_CLS) == -1) {\r\n                cssText += removedCssRule.cssText.slice(removedCssRule.cssText.indexOf('{') + 1, removedCssRule.cssText.indexOf('}'));\r\n            }\r\n            cssText += rule.slice(rule.indexOf('{') + 1, rule.indexOf('}')).replace(/\"/g, '').replace(/,/g, ';') + ';';\r\n            const _newRule =  `${ruleName}{ ${cssText} }`;\r\n            allCssText += _newRule;\r\n            \r\n\r\n            if (!this.cssTextCache.includes(_newRule)) {\r\n                // å°åå¹¶åCSSææ¬æ·»å å°ç¼å­\r\n                this.cssTextCache.push(_newRule);\r\n\r\n                if (styleSheet.addRule) {\r\n                    styleSheet.addRule(ruleName, cssText, 0);\r\n                } else {\r\n                    styleSheet.insertRule(_newRule, 0);\r\n                }\r\n            }\r\n\r\n            \r\n        }\r\n\r\n        return allCssText;\r\n    }\r\n\r\n    private _removeCssRule(ruleName: string, styleSheet) {\r\n\r\n        if (!styleSheet) {\r\n            return;\r\n        }\r\n\r\n        const cssRules = (styleSheet.cssRules || styleSheet.rules) as any;\r\n        let ii = 0;\r\n        let cssRule: any = false;\r\n\r\n        do {\r\n            cssRule = cssRules[ii];\r\n            if (cssRule) {\r\n                if (cssRule.selectorText.toLowerCase() == ruleName.toLowerCase()) {\r\n                    if (styleSheet.cssRules) {\r\n                        styleSheet.deleteRule(ii);\r\n                    } else {\r\n                        styleSheet.removeRule(ii);\r\n                    }\r\n\r\n                    return cssRule;\r\n                }\r\n            }\r\n            ii++;\r\n        } while (cssRule);\r\n    }\r\n\r\n    createConfigKey(gridID: string) {\r\n        const { host, hash, href, pathname } = location;\r\n        let formCode = '';\r\n        let menuId = '';\r\n        if (hash) {\r\n            const _searchArr = hash.split('?');\r\n            formCode = _searchArr[0];\r\n\r\n            const searchObj: any = {};\r\n            if (_searchArr[1]) {\r\n                _searchArr[1].split('&').map(n => {\r\n                    searchObj[n.split('=')[0]] = n.split('=')[1];\r\n                });\r\n            }\r\n\r\n            const catchFuncIdKEY = `${pathname}`;\r\n            if (searchObj && Object.keys(searchObj).length) {\r\n                menuId = searchObj.funcId || '';\r\n                if (menuId) {\r\n                    localStorage.setItem(catchFuncIdKEY, menuId);\r\n                }\r\n            }\r\n\r\n            if (!menuId) {\r\n                menuId = localStorage.getItem(catchFuncIdKEY);\r\n            }\r\n        }\r\n        const key = formCode + '_' + menuId + '_' + gridID;\r\n\r\n        if (!this.idService) {\r\n            this.idService = new IdService();\r\n        }\r\n\r\n        return this.idService.encrypt(key);\r\n    }\r\n\r\n\r\n    getCustomStyle(styler: any, args: any): { cls?: any, style?: any } {\r\n        if (typeof styler === 'object') {\r\n            return styler;\r\n        } else {\r\n            if (typeof styler === 'function') {\r\n                const p = args || [];\r\n                return styler(...p);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    findNextTr(nextTr, dir) {\r\n        const getNextElement = (target) => {\r\n            if (target && target.className.indexOf('f-datagrid-disable-row') == -1) {\r\n                return target;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        const m = dir === 'down' ? 'nextElementSibling' : 'previousElementSibling';\r\n\r\n        const getEle = (t) => {\r\n            let n = null;\r\n            let next = true;\r\n            while (next) {\r\n                n = getNextElement(t);\r\n                if (n) {\r\n                    next = false;\r\n                } else {\r\n                    if (t && t[m]) {\r\n                        n = getNextElement(t[m]);\r\n                        if (n) {\r\n                            break;\r\n                        }\r\n                    } else {\r\n                        next = false;\r\n                    }\r\n                }\r\n            }\r\n            return n;\r\n        };\r\n\r\n        return getEle(nextTr);\r\n    }\r\n\r\n    private _getCssTextBySelector(selector: string, styleSheet) {\r\n        if (!styleSheet) {\r\n            return;\r\n        }\r\n\r\n        const cssRules = (styleSheet.cssRules || styleSheet.rules) as any;\r\n        let ii = 0;\r\n        let cssRule: any = false;\r\n\r\n        do {\r\n            cssRule = cssRules[ii];\r\n            if (cssRule) {\r\n                if (cssRule.selectorText.toLowerCase() == selector.toLowerCase()) {\r\n                    return cssRule;\r\n                }\r\n            }\r\n            ii++;\r\n        } while (cssRule);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { DataResult } from './state';\r\nimport { Observable } from 'rxjs';\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport const DATAGRID_REST_SERVICEE = new InjectionToken<RestService>('DataGrid Request Data Service.');\r\n\r\nexport abstract class RestService {\r\n    abstract getData(url: string, param?: any): Observable<DataResult>;\r\n}\r\n\r\nexport class DefaultRestService implements RestService {\r\n    constructor(private http: HttpClient) {}\r\n    getData(url: string, param?: any): Observable<DataResult> {\r\n        return this.http.get<DataResult>(url, { params: param });\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-21 10:37:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-22 19:15:49\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nexport type DatagridValidatorType = 'required' | 'min' | 'max' |'minLength' |'maxLength' | 'email' | 'requriedTrue' | 'pattern' | string;\r\n\r\nexport interface DatagridValidator {\r\n    type: DatagridValidatorType;\r\n    value?: any;\r\n    messager?: string;\r\n}\r\n\r\nexport const DefaultDatagridValidatorMessager = {\r\n    required: 'æ­¤å­æ®µä¸è½ä¸ºç©ºã',\r\n    min: 'æå°å¼ä¸è½å°äº${0}',\r\n    max: 'æå¤§å¼ä¸è½å¤§äº${0}',\r\n    minlength: 'è³å°è¾å¥${0}ä¸ªå­ç¬¦',\r\n    maxlength: 'å­ç¬¦é¿åº¦ä¸è½å¤§äº${0}',\r\n    email: 'Email æ ¼å¼ä¸æ­£ç¡®',\r\n    requriedtrue: 'å¡å¿éä¸­',\r\n    pattern: 'è¾å¥çæ ¼å¼ä¸æ­£ç¡®ã'\r\n};\r\n\r\n\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-21 15:44:21\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-22 19:19:49\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { DatagridValidator } from '../types/datagrid-validator';\r\nimport { DefaultDatagridValidatorMessager as ddvm } from '../types/datagrid-validator';\r\n@Injectable()\r\nexport class ValidatorMessagerService {\r\n\r\n    getValidatorErrorMessage(validatorName: string, validators: DatagridValidator[]) {\r\n        validatorName = validatorName.toLowerCase();\r\n        const validator = validators.find(v => v.type.toLowerCase() === validatorName);\r\n        if (validator && validator.messager) {\r\n            return validator.messager;\r\n        } else {\r\n            return ddvm[validatorName] ? ddvm[validatorName] : 'éªè¯ä¸éè¿ï¼';\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-21 15:13:50\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nexport class DomHandler {\r\n    public static hasClass(element: any, className: string): boolean {\r\n        if (element) {\r\n            if (element.classList) {\r\n                return Array.from(element.classList).filter(n => n === className).length > 0;\r\n            } else {\r\n                return element.className.indexOf(className) > -1;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public static removeClass(element: any, className: string): void {\r\n        if (element) {\r\n            if (element.classList) {\r\n                element.classList.remove(className);\r\n            } else {\r\n                element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n            }\r\n        }\r\n    }\r\n\r\n    public static findSingle(element: any, selector: string): any {\r\n        if (element) {\r\n            return element.querySelector(selector);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static getOffset(el) {\r\n        const rect = el.getBoundingClientRect();\r\n\r\n        return {\r\n            top: rect.top + document.body.scrollTop,\r\n            left: rect.left + document.body.scrollLeft\r\n        };\r\n    }\r\n\r\n    public static getOuterHeight(el, margin?) {\r\n        let height = el.offsetHeight;\r\n\r\n        if (margin) {\r\n            const style = getComputedStyle(el);\r\n            height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\r\n        }\r\n\r\n        return height;\r\n    }\r\n\r\n    public static getOuterWidth(el, margin?) {\r\n        let width = el.offsetWidth;\r\n\r\n        if (margin) {\r\n            const style = getComputedStyle(el);\r\n            width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\r\n        }\r\n\r\n        return width;\r\n    }\r\n}\r\n","import { LocaleService } from '@farris/ui-locale';\r\nimport { Injectable, Injector, EventEmitter, Optional } from '@angular/core';\r\nimport { Compare, FilterCondition, Relation } from '@farris/ui-common/types';\r\nimport { DatagridFacadeService } from './datagrid-facade.service';\r\nimport { Utils } from './../utils/utils';\r\nimport { DataColumn, ColumnFilterType, ColumnFilter, FilterCondition as ClientFilterCondition } from '../types/data-column';\r\nimport { DatagridColumnsHelper } from './datagrid-columns.helper';\r\nimport { trim } from 'lodash-es';\r\n\r\n@Injectable()\r\nexport class DatagridFilterService {\r\n    removeField = new EventEmitter<string>();\r\n\r\n    constructor(private dfs: DatagridFacadeService, private localeSer: LocaleService, private inject: Injector) {\r\n    }\r\n\r\n    validateRowData(rowData: any, conditions: { [field: string]: ClientFilterCondition }) {\r\n        if (!conditions || Object.keys(conditions).length === 0) {\r\n            return true;\r\n        }\r\n        return this.checkAllFieldInRowData(rowData, conditions);\r\n    }\r\n\r\n    executeFilter(data: [], conditions: any): any[] {\r\n        if ( this.dfs.getState().enableSmartFilter) {\r\n            return this.executeSmartFilter(data, conditions);\r\n        }\r\n\r\n        if (data && data.length) {\r\n            return data.filter(n => this.validateRowData(n, conditions));\r\n        }\r\n        return data;\r\n    }\r\n\r\n    private getCompareResult(fieldDataValue: any, operator: Compare, targetValue: any) {\r\n        const op = parseInt('' + operator, 10);\r\n        switch (op) {\r\n            case Compare.Equal:\r\n                return fieldDataValue == targetValue;\r\n            case Compare.NotEqual:\r\n                return ('' + fieldDataValue).toLowerCase() !== ('' + targetValue).toLowerCase();\r\n            case Compare.Greater:\r\n                return fieldDataValue > targetValue;\r\n            case Compare.GreaterOrEqual:\r\n                return fieldDataValue >= targetValue;\r\n            case Compare.Less:\r\n                return fieldDataValue < targetValue;\r\n            case Compare.LessOrEqual:\r\n                return fieldDataValue <= targetValue;\r\n            case Compare.Like:\r\n                if (fieldDataValue == null) {\r\n                    fieldDataValue = '';\r\n                }\r\n                return ('' + fieldDataValue).toLowerCase().indexOf(targetValue.toLowerCase()) > -1;\r\n            case Compare.NotLike:\r\n                return ('' + fieldDataValue).toLowerCase().indexOf(targetValue.toLowerCase()) === -1;\r\n            case Compare.In:\r\n                targetValue = targetValue || [];\r\n                return targetValue.findIndex( n => n == fieldDataValue) > -1;\r\n            case 1001: // Empty\r\n                return trim(fieldDataValue) === '' || fieldDataValue === null || fieldDataValue === undefined;\r\n            case 1002:  // NotEmpty\r\n                return trim(fieldDataValue) !== '' && fieldDataValue !== null && fieldDataValue !== undefined;\r\n            case 1003: // Null\r\n                return fieldDataValue === null;\r\n            case 1004: // NotNull\r\n                return fieldDataValue !== null;\r\n        }\r\n    }\r\n\r\n    private getRelationResult(result1: boolean, relation: 'and' | 'or', result2: boolean) {\r\n        const _relation = relation.toLowerCase();\r\n        if (_relation === 'and') {\r\n            return result1 && result2;\r\n        } else {\r\n            return result1 || result2;\r\n        }\r\n    }\r\n\r\n    private checkAllFieldResult(resultObj: { [key: string]: boolean }) {\r\n        if (!resultObj) {\r\n            return true;\r\n        }\r\n\r\n        return Object.values(resultObj).reduce((c, n) => {\r\n            return c && n;\r\n        }, true);\r\n    }\r\n\r\n    private checkAllFieldInRowData(rowData: any, conditions: { [field: string]: ClientFilterCondition }) {\r\n        // this.state = conditions;\r\n        let resultObj = null;\r\n        if (conditions) {\r\n            const fields = Object.keys(conditions);\r\n            resultObj = {};\r\n            fields.forEach(field => {\r\n                let fieldValue = Utils.getValue(field, rowData);\r\n                const columnObj = this.dfs.getColumn(field);\r\n                if (columnObj && columnObj.isMultilingualField) {\r\n                    fieldValue = Utils.getMultilingualValue(fieldValue, this.localeSer.localeId);\r\n                }\r\n\r\n                const where = conditions[field];\r\n                const { value1, operator1, relation, operator2, value2 } = where;\r\n                if (where) {\r\n                    const result = this.getCompareResult(fieldValue , operator1, value1);\r\n                    resultObj[field] = result;\r\n                    if (relation) {\r\n                        const result2 = this.getCompareResult(fieldValue, operator2, value2);\r\n                        resultObj[field] = this.getRelationResult(result, relation, result2);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        return this.checkAllFieldResult(resultObj);\r\n    }\r\n\r\n    removeFilterField(field) {\r\n        this.removeField.emit(field);\r\n    }\r\n\r\n    convertFilterCondition2String(conditions: any) {\r\n        if (!conditions) {\r\n            return '';\r\n        }\r\n        let str = '';\r\n        const andText = this.localeSer.getValue('datagrid.filter.and');\r\n        const orText = this.localeSer.getValue('datagrid.filter.or');\r\n        const and = `<span class='badge badge-success'>${andText}</span>`;\r\n        const and2 = `<span class='badge badge-info'>${andText}</span>`;\r\n        const or = `<span class='badge badge-warning'>${orText}</span>`;\r\n        const lbracket = `<b>ã</b>`;\r\n        const rbracket = `<b>ã</b>`;\r\n        const ellipsis = `[ <span class=\"ellipsis\" title=\"$title$\">  $value$<i class=\"f-icon f-icon-lookup\"></i></span> ]`;\r\n\r\n        str = Object.keys(conditions).reduce((c, r) => {\r\n            const filter = conditions[r];\r\n            const col = this.dfs.getColumn(r);\r\n            const t = `<b>${col.title}</b>`;\r\n\r\n            let s = ` ${t} ${this.getCompareString(filter.operator1)} ${Utils.escapeValue(filter.value1)}  `;\r\n            if (filter.operator1 == Compare.In) {\r\n                let txt = filter.value1;\r\n                let txt2 = txt;\r\n                if (col.filter.type === ColumnFilterType.enum) {\r\n                    const enumOpts = DatagridColumnsHelper.getFilterEnumOptions(col);\r\n                    txt = DatagridColumnsHelper.getEnumText(enumOpts, filter.value1);\r\n                    txt2 = txt.split(',').slice(0, 2).join(',');\r\n                } else {\r\n                    txt2 = txt.slice(0, 2).join(',');\r\n                }\r\n\r\n                s = ` ${t} ${this.getCompareString(filter.operator1)} [ ${txt} ]  `;\r\n                if (filter.value1.length > 2) {\r\n                    s = ` ${t} ${this.getCompareString(filter.operator1)} ${ellipsis.replace('$title$', txt).replace('$value$', txt2)}  `;\r\n                }\r\n            } else {\r\n                if (filter.operator1 == Compare.Equal && Array.isArray(filter.value1)) {\r\n                    if (!filter.value1.length) {\r\n                        s = ` ${t} ${this.getCompareString(filter.operator1)} ''  `;\r\n                    }\r\n                }\r\n            }\r\n            if (filter.relation) {\r\n                const s2 = `${t} ${this.getCompareString(filter.operator2)} ${filter.value2}`;\r\n                s = `${lbracket} ${s} ${filter.relation === 'and' ? and2 : or} ${s2} ${rbracket}`;\r\n            }\r\n            return `${c} <span class=\"filter-field filter-column-${r}\"> ${s} AND </span>`;\r\n        }, '');\r\n        const lastANDidx = str.lastIndexOf('AND');\r\n        let resultStr = str.substr(0, lastANDidx);\r\n        resultStr += str.substr(lastANDidx + 3);\r\n        return resultStr.replace(/AND/g, and).replace(/OR/g, or);\r\n    }\r\n\r\n    private getCompareString(operator: Compare) {\r\n        const op = parseInt('' + operator, 10);\r\n        let code = '';\r\n        switch (op) {\r\n            case Compare.Equal:\r\n            case Compare.NotEqual:\r\n            case Compare.Greater:\r\n            case Compare.GreaterOrEqual:\r\n            case Compare.Less:\r\n            case Compare.LessOrEqual:\r\n            case Compare.Like:\r\n            case Compare.NotLike:\r\n            case Compare.In:\r\n                code = Compare[op];\r\n                code = code[0].toLowerCase() + code.substr(1);\r\n                return this.localeSer.getValue('datagrid.filter.operators.' + code);\r\n            case 1001: // Empty\r\n                return ' ' + this.localeSer.getValue('datagrid.filter.operators.empty');\r\n            case 1002:  // NotEmpty\r\n                return ' ' + this.localeSer.getValue('datagrid.filter.operators.notEmpty');\r\n            case 1003: // Null\r\n                return ' ' + this.localeSer.getValue('datagrid.filter.operators.null');\r\n            case 1004: // NotNull\r\n                return ' ' + this.localeSer.getValue('datagrid.filter.operators.notNull');\r\n        }\r\n    }\r\n\r\n    convert2FilterArray(condition: { [field: string]: any }): FilterCondition[] {\r\n        const filterArr = [];\r\n        const excludeDataTypes = ['number', 'date', 'datetime'];\r\n        if (condition) {\r\n            const fields = Object.keys(condition);\r\n            if (fields && fields.length) {\r\n                fields.forEach(field => {\r\n\r\n                    const columnInfo = this.dfs.getColumn(field);\r\n                    const dataType = columnInfo.dataType || 'string';\r\n\r\n                    const obj = { filterField: field, value: '', lbracket: '', rbracket: '', relation: 1, compare: 0 };\r\n                    const conditionVal = condition[field];\r\n                    if (typeof conditionVal === 'object') {\r\n                        // tfs 568484\r\n                        const operator1 = parseInt('' + conditionVal.operator1, 10);\r\n                        if (operator1 === 1001 || operator1 === 1002) {\r\n                            obj.compare = operator1 === 1001 ? Compare.Equal : Compare.NotEqual;\r\n                            obj.lbracket = '(';\r\n                            obj.relation = operator1 === 1002 ? 1 : 2;\r\n                            filterArr.push(obj);\r\n                            if (excludeDataTypes.includes(dataType)) {\r\n                                obj.value = null;\r\n                                obj.lbracket = '';\r\n                                obj.relation = 1;\r\n                                obj.compare = operator1 === 1002 ? Compare.IsNot : Compare.Is;\r\n                                return;\r\n                            }\r\n\r\n                            const obj2 = { filterField: field, value: null, lbracket: '', rbracket: ')', relation: 1, compare: 0 };\r\n\r\n                            if (operator1 === 1002) {\r\n                                obj2.compare = Compare.IsNot;\r\n                            } else {\r\n                                obj2.compare = Compare.Is;\r\n                            }\r\n\r\n                           \r\n                            filterArr.push(obj2);\r\n                            return;\r\n                        }\r\n\r\n                        obj.compare = conditionVal.operator1;\r\n                        obj.value = conditionVal.value1;\r\n                        filterArr.push(obj);\r\n                        if (conditionVal.value2) {\r\n                            obj.lbracket = '(';\r\n                            obj.relation = conditionVal.relation === 'and' ? 1 : 2;\r\n\r\n                            const obj2 = { filterField: field, value: '', lbracket: '', rbracket: ')', relation: 1, compare: 0 };\r\n                            obj2.compare = conditionVal.operator2;\r\n                            obj2.value = conditionVal.value2;\r\n\r\n                            filterArr.push(obj2);\r\n                        } else {\r\n                            if (conditionVal.operator2) {\r\n                                const op2 = parseInt('' + conditionVal.operator2, 10); //  Empty: 1001, NotEmpty: 1002\r\n                                if (op2 === 1001 || op2 === 1002) {\r\n                                    obj.lbracket = '(';\r\n                                    obj.relation = conditionVal.relation === 'and' ? 1 : 2;\r\n\r\n                                    const obj2 = { filterField: field, value: '', lbracket: '(', rbracket: '', relation: 2, compare: 0 };\r\n                                    obj2.compare = op2 === 1001 ? Compare.Equal : Compare.NotEqual;\r\n                                    obj2.relation = op2 === 1002? 1: 2;\r\n                                    filterArr.push(obj2);\r\n                                    if (excludeDataTypes.includes(dataType)) {\r\n                                        obj2.value = null;\r\n                                        obj2.lbracket = '';\r\n                                        obj2.rbracket = ')';\r\n                                        obj2.relation = 1;\r\n                                        obj2.compare = op2 === 1002 ? Compare.IsNot : Compare.Is;\r\n                                        return;\r\n                                    }\r\n\r\n                                    const obj21 = { filterField: field, value: null, lbracket: '', rbracket: '))', relation: 1, compare: 0 };\r\n                                    obj21.compare = op2 === 1001 ? Compare.Is : Compare.IsNot;\r\n                                    filterArr.push(obj21);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return obj;\r\n                });\r\n            }\r\n        }\r\n\r\n        if (filterArr.length) {\r\n            this.checkEnumTypeFilters(filterArr);\r\n            filterArr[filterArr.length - 1].relation = 0;\r\n        }\r\n\r\n        return filterArr;\r\n    }\r\n\r\n    private checkEnumTypeFilters(filterArr: FilterCondition[]) {\r\n        const enumFilters:{[key:string]: any[]} = { };\r\n        filterArr.forEach((f, i) => {\r\n            const enumFilterArr = this.convertEnumTypeFilter(f);\r\n            if (enumFilterArr && enumFilterArr.length) {\r\n                enumFilters[f.filterField] = enumFilterArr\r\n            }\r\n        });\r\n\r\n        const keys = Object.keys(enumFilters);\r\n        if (keys.length) {\r\n            keys.forEach((k) => {\r\n                const i = filterArr.findIndex(n => n.filterField === k);\r\n                filterArr.splice(i, 1, ...enumFilters[k]);\r\n            })\r\n        }\r\n\r\n        return filterArr;\r\n    }\r\n\r\n    // å°enum ç±»åçæ¡ä»¶è½¬æ¢å¤ä¸ªæ¡ä»¶\r\n    private convertEnumTypeFilter(filter: FilterCondition) : FilterCondition[] {\r\n        if (filter) {\r\n            const col = this.dfs.getColumn(filter.filterField) as DataColumn;\r\n            if (col && col.filter && col.filter.type ===  ColumnFilterType.enum)  {\r\n                if (Array.isArray(filter.value) && filter.value.length) {\r\n                    if (filter.value.length === 1) {\r\n                        filter.compare = Compare.Equal;\r\n                        filter.value = filter.value[0];\r\n                        return [];\r\n                    } else {\r\n                        // > 1\r\n                        let filterArr = filter.value.map((val: any) => {\r\n                            return {\r\n                                filterField: filter.filterField, \r\n                                value: val, \r\n                                lbracket: '',\r\n                                rbracket: '',\r\n                                relation: 2,  // or\r\n                                compare: 0\r\n                            }\r\n                        });\r\n                        filterArr[0].lbracket = '(';\r\n                        filterArr[filter.value.length -1].rbracket = ')';\r\n                        filterArr[filter.value.length -1].relation = 1;\r\n                        return filterArr;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    createColumnFilterOptions(col: DataColumn) {\r\n        let filterTypeOptions: ColumnFilter = {\r\n            type: ColumnFilterType.string,\r\n            enableOperator: true\r\n        };\r\n        if (col.editor) {\r\n            switch (col.editor.type) {\r\n                case 'textarea':\r\n                case 'textbox':\r\n                case 'language-textbox':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.string,\r\n                        enableOperator: true\r\n                    };\r\n                    break;\r\n                case 'checkbox':\r\n                case 'switch':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.boolean,\r\n                        enableOperator: false\r\n                    };\r\n                    break;\r\n                case 'numberbox':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.number,\r\n                        enableOperator: true\r\n                    };\r\n                    break;\r\n                case 'combolist':\r\n                case 'select':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.enum,\r\n                        enableOperator: true,\r\n                        options: col.editor.options\r\n                    };\r\n                    break;\r\n                case 'datepicker':\r\n                    filterTypeOptions = {\r\n                        type: col['dataType'] === 'datetime' ? ColumnFilterType.datetime : ColumnFilterType.date,\r\n                        enableOperator: true,\r\n                        options: {\r\n                            dateFormat: col.editor.options.dateFormat,\r\n                            returnFormat: col.editor.options.returnFormat\r\n                        }\r\n                    };\r\n                    break;\r\n                case 'timepicker':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.time,\r\n                        enableOperator: true\r\n                    };\r\n                    break;\r\n\r\n            }\r\n        } else if (col.formatter) {\r\n            if (typeof col.formatter === 'object' && Object.keys(col.formatter).length) {\r\n                const options: any = col.formatter['options'];\r\n                switch (col.formatter['type']) {\r\n                    case 'number':\r\n                        filterTypeOptions = {\r\n                            type: ColumnFilterType.number,\r\n                            enableOperator: true\r\n                        };\r\n                        break;\r\n                    case 'enum':\r\n                        filterTypeOptions = {\r\n                            type: ColumnFilterType.enum,\r\n                            enableOperator: true,\r\n                            options\r\n                        };\r\n                        break;\r\n                    case 'boolean':\r\n                        filterTypeOptions = {\r\n                            type: ColumnFilterType.boolean,\r\n                            enableOperator: false\r\n                        };\r\n                        break;\r\n                    case 'datetime':\r\n                        let tye = ColumnFilterType.datetime;\r\n                        let fmt = 'yyyy-MM-dd';\r\n                        let returnFmt = 'yyyy-MM-dd';\r\n                        if (options && options.format) {\r\n                            fmt = options.format;\r\n                            if (fmt.indexOf('HH:') == -1) {\r\n                                tye = ColumnFilterType.date;\r\n                            } else {\r\n                                returnFmt += ' HH:mm';\r\n                                if (fmt.indexOf('ss') > -1) {\r\n                                    returnFmt += ':ss';\r\n                                }\r\n                            }\r\n                        } else {\r\n                            tye = ColumnFilterType.date;\r\n                        }\r\n                        filterTypeOptions = {\r\n                            type: tye,\r\n                            enableOperator: true\r\n                        };\r\n\r\n                        filterTypeOptions.options = { dateFormat: fmt, returnFormat: returnFmt };\r\n                        break;\r\n                    default:\r\n                        filterTypeOptions = {\r\n                            type: ColumnFilterType.string,\r\n                            enableOperator: true\r\n                        };\r\n                }\r\n            }\r\n        } else {\r\n            filterTypeOptions = {\r\n                type: ColumnFilterType.string,\r\n                enableOperator: true\r\n            };\r\n        }\r\n        return filterTypeOptions;\r\n    }\r\n\r\n    //#region  Smart Filter\r\n\r\n    convertSmartFilter2EntityFilter(conditions: any[]) {\r\n        if (conditions && conditions.length) {\r\n            return conditions.map(n => {\r\n                return n;\r\n            });\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    private validateRowData2(rowData: any, conditions: any) {\r\n        if (!conditions || conditions.length === 0) {\r\n            return true;\r\n        }\r\n        return this.checkRowDataWithCondition(rowData, conditions);\r\n    }\r\n\r\n    private checkRowDataWithCondition(rowData: any, conditions) {\r\n        let resultObj = null;\r\n        if (conditions) {\r\n            resultObj = {};\r\n            conditions.forEach(condition => {\r\n                const field = condition.FilterField;\r\n                let fieldValue = Utils.getValue(field, rowData);\r\n                const columnObj = this.dfs.getColumn(field);\r\n                if (columnObj && columnObj.isMultilingualField) {\r\n                    fieldValue = Utils.getMultilingualValue(fieldValue, this.localeSer.localeId);\r\n                }\r\n\r\n                const where = condition;\r\n                const { Value, Relation, Compare: operator1 } = where;\r\n                if (where) {\r\n                    const r = this.getCompareResult(fieldValue, operator1, Value);\r\n                    if (resultObj[field] === undefined) {\r\n                        resultObj[field] = [ r ];\r\n                    } else {\r\n                        resultObj[field].push(r);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        // return this.checkAllFieldResult(resultObj);\r\n        const fields = Object.keys(resultObj);\r\n        const result = [];\r\n        fields.forEach( (f) => {\r\n            const _filters = conditions.filter(n => n.FilterField === f);\r\n            if (resultObj[f].length === 1) {\r\n                result.push(resultObj[f][0]);\r\n            } else {\r\n                if (_filters[0].Relation === 1 && resultObj[f].length === 2) {  // and\r\n                    result.push(resultObj[f][0] && resultObj[f][1]);\r\n                } else {  // or\r\n                    result.push(resultObj[f].indexOf(true) > -1);\r\n                }\r\n            }\r\n        });\r\n\r\n        return result.indexOf(false) === -1;\r\n    }\r\n\r\n    executeSmartFilter(data: [], conditions: any[]) {\r\n        if (data && data.length) {\r\n            return data.filter(n => this.validateRowData2(n, conditions));\r\n        }\r\n        return data;\r\n    }\r\n\r\n    //#endregion\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n/**\r\n * @deprecated åé¨åç»ä»¶å·²åºå¼ï¼åé¡µç»ä»¶ä½¿ç¨farris-ui ä¸­çå¬å±ç»ä»¶\r\n */\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [ CommonModule ],\r\n    exports: [],\r\n    providers: [\r\n    ],\r\n})\r\nexport class NgxPaginationModule {}\r\n","\r\nexport class PaginationService {}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const SCROLLBAR_CONFIG = new InjectionToken(\r\n    'PERFECT_SCROLLBAR_CONFIG'\r\n);\r\n\r\nexport class Geometry {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    public w: number;\r\n    public h: number;\r\n\r\n    constructor(x: number, y: number, w: number, h: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n}\r\n\r\nexport class Position {\r\n    public x: number | 'start' | 'end';\r\n    public y: number | 'start' | 'end';\r\n\r\n    constructor(x: number | 'start' | 'end', y: number | 'start' | 'end') {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\nexport type ScrollbarEvent =\r\n    | 'psScrollY'\r\n    | 'psScrollX'\r\n    | 'psScrollUp'\r\n    | 'psScrollDown'\r\n    | 'psScrollLeft'\r\n    | 'psScrollRight'\r\n    | 'psYReachEnd'\r\n    | 'psYReachStart'\r\n    | 'psXReachEnd'\r\n    | 'psXReachStart';\r\n\r\nexport const ScrollbarEvents: ScrollbarEvent[] = [\r\n    'psScrollY',\r\n    'psScrollX',\r\n\r\n    'psScrollUp',\r\n    'psScrollDown',\r\n    'psScrollLeft',\r\n    'psScrollRight',\r\n\r\n    'psYReachEnd',\r\n    'psYReachStart',\r\n    'psXReachEnd',\r\n    'psXReachStart'\r\n];\r\n\r\nexport interface ScrollbarConfigInterface {\r\n    handlers?: string[];\r\n\r\n    wheelSpeed?: number;\r\n    swipeEasing?: boolean;\r\n\r\n    suppressScrollX?: boolean;\r\n    suppressScrollY?: boolean;\r\n\r\n    wheelPropagation?: boolean;\r\n    useBothWheelAxes?: boolean;\r\n\r\n    scrollingThreshold?: number;\r\n\r\n    minScrollbarLength?: number;\r\n    maxScrollbarLength?: number;\r\n\r\n    scrollXMarginOffset?: number;\r\n    scrollYMarginOffset?: number;\r\n}\r\n\r\nexport class ScrollbarConfig implements ScrollbarConfigInterface {\r\n    public handlers?: string[];\r\n\r\n    public wheelSpeed?: number;\r\n    public swipeEasing?: boolean;\r\n\r\n    public suppressScrollX?: boolean;\r\n    public suppressScrollY?: boolean;\r\n\r\n    public wheelPropagation?: boolean;\r\n    public useBothWheelAxes?: boolean;\r\n\r\n    public scrollingThreshold?: number;\r\n\r\n    public minScrollbarLength?: number;\r\n    public maxScrollbarLength?: number;\r\n\r\n    public scrollXMarginOffset?: number;\r\n    public scrollYMarginOffset?: number;\r\n\r\n    constructor(config: ScrollbarConfigInterface = {}) {\r\n        this.assign(config);\r\n    }\r\n\r\n    public assign(config: ScrollbarConfigInterface = {}) {\r\n        for (const key in config) {\r\n            this[key as keyof ScrollbarConfig] = config[key as keyof ScrollbarConfigInterface];\r\n        }\r\n    }\r\n}\r\n","import { AfterViewInit } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-07-29 08:14:22\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-10 15:11:09\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\nimport { Subject, fromEvent, Observable, interval } from 'rxjs';\r\nimport { auditTime, takeUntil, debounceTime, throttle } from 'rxjs/operators';\r\n\r\nimport {\r\n    NgZone, Inject, Optional, ElementRef, Directive,\r\n    OnInit, DoCheck, OnChanges, OnDestroy, Input, Output, EventEmitter,\r\n    SimpleChanges, KeyValueDiffer, KeyValueDiffers\r\n} from '@angular/core';\r\n\r\nimport { Geometry, Position } from './scrollbar.interfaces';\r\n\r\nimport {\r\n    SCROLLBAR_CONFIG, ScrollbarConfig, ScrollbarConfigInterface,\r\n    ScrollbarEvent, ScrollbarEvents\r\n} from './scrollbar.interfaces';\r\n\r\n@Directive({\r\n    selector: '[scrollbar]',\r\n    exportAs: 'ngxScrollbar'\r\n})\r\nexport class ScrollbarDirective implements OnInit, OnDestroy, DoCheck, OnChanges, AfterViewInit {\r\n    instance: PerfectScrollbar | null = null;\r\n\r\n    private ro: ResizeObserver | null = null;\r\n\r\n    private timeout: number | null = null;\r\n    private animation: number | null = null;\r\n\r\n    private configDiff: KeyValueDiffer<string, any> | null = null;\r\n\r\n    private readonly ngDestroy: Subject<void> = new Subject();\r\n\r\n    @Input() disabled = false;\r\n\r\n    @Input('scrollbar') config?: ScrollbarConfigInterface;\r\n\r\n    @Output() psScrollY: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollX: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psScrollUp: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollDown: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollLeft: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollRight: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psYReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psYReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(private zone: NgZone, private differs: KeyValueDiffers,\r\n                public elementRef: ElementRef, @Inject(PLATFORM_ID) private platformId: any,\r\n                @Optional() @Inject(SCROLLBAR_CONFIG) private defaults: ScrollbarConfigInterface) { }\r\n\r\n    ngOnInit(): void {\r\n        if (!this.disabled && isPlatformBrowser(this.platformId)) {\r\n            const config = new ScrollbarConfig(this.defaults);\r\n\r\n            config.assign(this.config); // Custom configuration\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    this.instance = new PerfectScrollbar(this.elementRef.nativeElement, config);\r\n                });\r\n            });\r\n\r\n            if (!this.configDiff) {\r\n                this.configDiff = this.differs.find(this.config || {}).create();\r\n\r\n                this.configDiff.diff(this.config || {});\r\n            }\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                this.ro = new ResizeObserver(() => {\r\n                    this.update();\r\n                });\r\n\r\n                if (this.elementRef.nativeElement.children[0]) {\r\n                    this.ro.observe(this.elementRef.nativeElement.children[0]);\r\n                }\r\n\r\n                this.ro.observe(this.elementRef.nativeElement);\r\n            });\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                ScrollbarEvents.forEach((eventName: ScrollbarEvent) => {\r\n                    const eventType = eventName.replace(/([A-Z])/g, (c) => `-${c.toLowerCase()}`);\r\n\r\n                    if (eventName.indexOf('X') > -1 || eventName.indexOf('Left') > -1 || eventName.indexOf('Right') > -1) {\r\n                        fromEvent<Event>(this.elementRef.nativeElement, eventType).subscribe((event: Event) => {\r\n                            this[eventName].emit(event);\r\n                        });\r\n                    } else {\r\n                        fromEvent<Event>(this.elementRef.nativeElement, eventType).pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        ).pipe(\r\n                            // debounceTime(20),\r\n                            // throttle(ev => interval(20)),\r\n                            auditTime(20),  // auditTime éé»æå®çæ¶é´ï¼å¨æ­¤æ¶é´åå¿½ç¥ææååºçå¼ï¼æ¶é´è¿åï¼ååºææ°çå¼\r\n                        )\r\n                        .subscribe((event: Event) => {\r\n                            this[eventName].emit(event);\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // this.zone.runOutsideAngular(() => {\r\n        //     this.instance = new PerfectScrollbar(this.elementRef.nativeElement, this.config);\r\n        // });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.ngDestroy.next();\r\n            this.ngDestroy.complete();\r\n\r\n            if (this.ro) {\r\n                this.ro.disconnect();\r\n            }\r\n\r\n            if (this.timeout && typeof window !== 'undefined') {\r\n                window.clearTimeout(this.timeout);\r\n            }\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                if (this.instance) {\r\n                    this.instance.destroy();\r\n                }\r\n            });\r\n\r\n            this.instance = null;\r\n        }\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        if (!this.disabled && this.configDiff && isPlatformBrowser(this.platformId)) {\r\n            const changes = this.configDiff.diff(this.config || {});\r\n\r\n            if (changes) {\r\n                this.ngOnDestroy();\r\n\r\n                this.ngOnInit();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes['disabled'] && !changes['disabled'].isFirstChange() && isPlatformBrowser(this.platformId)) {\r\n            if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\r\n                if (changes['disabled'].currentValue === true) {\r\n                    this.ngOnDestroy();\r\n                } else if (changes['disabled'].currentValue === false) {\r\n                    this.ngOnInit();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public ps(): PerfectScrollbar | null {\r\n        return this.instance;\r\n    }\r\n\r\n    public update(): void {\r\n        if (typeof window !== 'undefined') {\r\n            if (this.timeout) {\r\n                window.clearTimeout(this.timeout);\r\n            }\r\n\r\n            this.timeout = window.setTimeout(() => {\r\n                if (!this.disabled && this.configDiff) {\r\n                    try {\r\n                        this.zone.runOutsideAngular(() => {\r\n                            if (this.instance) {\r\n                                this.instance.update();\r\n                            }\r\n                        });\r\n                    } catch (error) {\r\n                        // Update can be finished after destroy so catch errors\r\n                    }\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    public geometry(prefix: string = 'scroll'): Geometry {\r\n        return new Geometry(\r\n            this.elementRef.nativeElement[prefix + 'Left'],\r\n            this.elementRef.nativeElement[prefix + 'Top'],\r\n            this.elementRef.nativeElement[prefix + 'Width'],\r\n            this.elementRef.nativeElement[prefix + 'Height']\r\n        );\r\n    }\r\n\r\n    public position(absolute: boolean = false): Position {\r\n        if (!absolute && this.instance) {\r\n            return new Position(\r\n                this.instance.reach.x || 0,\r\n                this.instance.reach.y || 0\r\n            );\r\n        } else {\r\n            return new Position(\r\n                this.elementRef.nativeElement.scrollLeft,\r\n                this.elementRef.nativeElement.scrollTop\r\n            );\r\n        }\r\n    }\r\n\r\n    public scrollable(direction: string = 'any'): boolean {\r\n        const element = this.elementRef.nativeElement;\r\n\r\n        if (direction === 'any') {\r\n            return element.classList.contains('ps--active-x') ||\r\n                element.classList.contains('ps--active-y');\r\n        } else if (direction === 'both') {\r\n            return element.classList.contains('ps--active-x') &&\r\n                element.classList.contains('ps--active-y');\r\n        } else {\r\n            return element.classList.contains('ps--active-' + direction);\r\n        }\r\n    }\r\n\r\n    public scrollTo(x: number, y?: number, speed?: number): void {\r\n        if (!this.disabled) {\r\n            if (y == null && speed == null) {\r\n                this.animateScrolling('scrollTop', x, speed);\r\n            } else {\r\n                if (x != null) {\r\n                    this.animateScrolling('scrollLeft', x, speed);\r\n                }\r\n\r\n                if (y != null) {\r\n                    this.animateScrolling('scrollTop', y, speed);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public scrollToX(x: number, speed?: number): void {\r\n        this.animateScrolling('scrollLeft', x, speed);\r\n    }\r\n\r\n    public scrollToY(y: number, speed?: number): void {\r\n        this.animateScrolling('scrollTop', y, speed);\r\n    }\r\n\r\n    public scrollToTop(offset?: number, speed?: number): void {\r\n        this.animateScrolling('scrollTop', (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToLeft(offset?: number, speed?: number): void {\r\n        this.animateScrolling('scrollLeft', (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToRight(offset?: number, speed?: number): void {\r\n        const left = this.elementRef.nativeElement.scrollWidth -\r\n            this.elementRef.nativeElement.clientWidth;\r\n\r\n        this.animateScrolling('scrollLeft', left - (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToBottom(offset?: number, speed?: number): void {\r\n        const top = this.elementRef.nativeElement.scrollHeight -\r\n            this.elementRef.nativeElement.clientHeight;\r\n\r\n        this.animateScrolling('scrollTop', top - (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToElement(qs: string, offset?: number, speed?: number): void {\r\n        const element = this.elementRef.nativeElement.querySelector(qs);\r\n\r\n        if (element) {\r\n            const elementPos = element.getBoundingClientRect();\r\n\r\n            const scrollerPos = this.elementRef.nativeElement.getBoundingClientRect();\r\n\r\n            if (this.elementRef.nativeElement.classList.contains('ps--active-x')) {\r\n                const currentPos = this.elementRef.nativeElement['scrollLeft'];\r\n\r\n                const position = elementPos.left - scrollerPos.left + currentPos;\r\n\r\n                this.animateScrolling('scrollLeft', position + (offset || 0), speed);\r\n            }\r\n\r\n            if (this.elementRef.nativeElement.classList.contains('ps--active-y')) {\r\n                const currentPos = this.elementRef.nativeElement['scrollTop'];\r\n\r\n                const position = elementPos.top - scrollerPos.top + currentPos;\r\n\r\n                this.animateScrolling('scrollTop', position + (offset || 0), speed);\r\n            }\r\n        }\r\n    }\r\n\r\n    private animateScrolling(target: string, value: number, speed?: number): void {\r\n        if (this.animation) {\r\n            window.cancelAnimationFrame(this.animation);\r\n\r\n            this.animation = null;\r\n        }\r\n\r\n        if (!speed || typeof window === 'undefined') {\r\n            this.elementRef.nativeElement[target] = value;\r\n        } else if (value !== this.elementRef.nativeElement[target]) {\r\n            let newValue = 0;\r\n            let scrollCount = 0;\r\n\r\n            let oldTimestamp = performance.now();\r\n            let oldValue = this.elementRef.nativeElement[target];\r\n\r\n            const cosParameter = (oldValue - value) / 2;\r\n\r\n            const step = (newTimestamp: number) => {\r\n                scrollCount += Math.PI / (speed / (newTimestamp - oldTimestamp));\r\n\r\n                newValue = Math.round(value + cosParameter + cosParameter * Math.cos(scrollCount));\r\n\r\n                // Only continue animation if scroll position has not changed\r\n                if (this.elementRef.nativeElement[target] === oldValue) {\r\n                    if (scrollCount >= Math.PI) {\r\n                        this.animateScrolling(target, value, 0);\r\n                    } else {\r\n                        this.elementRef.nativeElement[target] = newValue;\r\n\r\n                        // On a zoomed out page the resulting offset may differ\r\n                        oldValue = this.elementRef.nativeElement[target];\r\n\r\n                        oldTimestamp = newTimestamp;\r\n\r\n                        this.animation = window.requestAnimationFrame(step);\r\n                    }\r\n                }\r\n            };\r\n\r\n            window.requestAnimationFrame(step);\r\n        }\r\n    }\r\n}\r\n","import { Subject, merge, fromEvent } from 'rxjs';\r\nimport { mapTo, takeUntil, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport {\r\n    NgZone, Inject, Component,\r\n    OnInit, OnDestroy, DoCheck, Input, Output, EventEmitter, HostBinding,\r\n    ViewChild, ViewEncapsulation, ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport { ScrollbarDirective } from './scrollbar.directive';\r\n\r\nimport {\r\n    ScrollbarEvent, ScrollbarEvents,\r\n    ScrollbarConfigInterface\r\n} from './scrollbar.interfaces';\r\n\r\n// styleUrls: [\r\n//     './scrollbar.component.css'\r\n// ],\r\n\r\n@Component({\r\n    selector: 'scrollbar',\r\n    exportAs: 'ngxScrollbar',\r\n    templateUrl: './scrollbar.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ScrollbarComponent implements OnInit, OnDestroy, DoCheck {\r\n    public states: any = {};\r\n\r\n    public indicatorX = false;\r\n    public indicatorY = false;\r\n\r\n    public interaction = false;\r\n\r\n    private scrollPositionX = 0;\r\n    private scrollPositionY = 0;\r\n\r\n    private scrollDirectionX = 0;\r\n    private scrollDirectionY = 0;\r\n\r\n    private usePropagationX = false;\r\n    private usePropagationY = false;\r\n\r\n    private allowPropagationX = false;\r\n    private allowPropagationY = false;\r\n\r\n    private stateTimeout: number | null = null;\r\n\r\n    private readonly ngDestroy: Subject<void> = new Subject();\r\n\r\n    private readonly stateUpdate: Subject<string> = new Subject();\r\n\r\n    @Input() disabled = false;\r\n\r\n    @Input() usePSClass = true;\r\n\r\n    @HostBinding('class.ps-show-limits')\r\n    @Input() autoPropagation = false;\r\n\r\n    @HostBinding('class.ps-show-active')\r\n    @Input() scrollIndicators = false;\r\n\r\n    @Input() config?: ScrollbarConfigInterface;\r\n\r\n    @Output() psScrollY: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollX: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psScrollUp: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollDown: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollLeft: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollRight: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psYReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psYReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild(ScrollbarDirective) directiveRef?: ScrollbarDirective;\r\n\r\n    constructor(private zone: NgZone, private cdRef: ChangeDetectorRef,\r\n                @Inject(PLATFORM_ID) private platformId: any) { }\r\n\r\n    ngOnInit(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.stateUpdate\r\n                .pipe( takeUntil(this.ngDestroy))\r\n                .pipe(\r\n                    distinctUntilChanged((a, b) => (a === b && !this.stateTimeout))\r\n                )\r\n                .subscribe((state: string) => {\r\n                    if (this.stateTimeout && typeof window !== 'undefined') {\r\n                        window.clearTimeout(this.stateTimeout);\r\n\r\n                        this.stateTimeout = null;\r\n                    }\r\n\r\n                    if (state === 'x' || state === 'y') {\r\n                        this.interaction = false;\r\n\r\n                        if (state === 'x') {\r\n                            this.indicatorX = false;\r\n\r\n                            this.states.left = false;\r\n                            this.states.right = false;\r\n\r\n                            if (this.autoPropagation && this.usePropagationX) {\r\n                                this.allowPropagationX = false;\r\n                            }\r\n                        } else if (state === 'y') {\r\n                            this.indicatorY = false;\r\n\r\n                            this.states.top = false;\r\n                            this.states.bottom = false;\r\n\r\n                            if (this.autoPropagation && this.usePropagationY) {\r\n                                this.allowPropagationY = false;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (state === 'left' || state === 'right') {\r\n                            this.states.left = false;\r\n                            this.states.right = false;\r\n\r\n                            this.states[state] = true;\r\n\r\n                            if (this.autoPropagation && this.usePropagationX) {\r\n                                this.indicatorX = true;\r\n                            }\r\n                        } else if (state === 'top' || state === 'bottom') {\r\n                            this.states.top = false;\r\n                            this.states.bottom = false;\r\n\r\n                            this.states[state] = true;\r\n\r\n                            if (this.autoPropagation && this.usePropagationY) {\r\n                                this.indicatorY = true;\r\n                            }\r\n                        }\r\n\r\n                        if (this.autoPropagation && typeof window !== 'undefined') {\r\n                            this.stateTimeout = window.setTimeout(() => {\r\n                                this.indicatorX = false;\r\n                                this.indicatorY = false;\r\n\r\n                                this.stateTimeout = null;\r\n\r\n                                if (this.interaction && (this.states.left || this.states.right)) {\r\n                                    this.allowPropagationX = true;\r\n                                }\r\n\r\n                                if (this.interaction && (this.states.top || this.states.bottom)) {\r\n                                    this.allowPropagationY = true;\r\n                                }\r\n\r\n                                this.cdRef.markForCheck();\r\n                            }, 500);\r\n                        }\r\n                    }\r\n\r\n                    this.cdRef.markForCheck();\r\n                    this.cdRef.detectChanges();\r\n                });\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                if (this.directiveRef) {\r\n                    const element = this.directiveRef.elementRef.nativeElement;\r\n\r\n                    fromEvent<WheelEvent>(element, 'wheel')\r\n                        .pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((event: WheelEvent) => {\r\n                            if (!this.disabled && this.autoPropagation) {\r\n                                const scrollDeltaX = event.deltaX;\r\n                                const scrollDeltaY = event.deltaY;\r\n\r\n                                this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\r\n                            }\r\n                        });\r\n\r\n                    fromEvent<TouchEvent>(element, 'touchmove')\r\n                        .pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((event: TouchEvent) => {\r\n                            if (!this.disabled && this.autoPropagation) {\r\n                                const scrollPositionX = event.touches[0].clientX;\r\n                                const scrollPositionY = event.touches[0].clientY;\r\n\r\n                                const scrollDeltaX = scrollPositionX - this.scrollPositionX;\r\n                                const scrollDeltaY = scrollPositionY - this.scrollPositionY;\r\n\r\n                                this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\r\n\r\n                                this.scrollPositionX = scrollPositionX;\r\n                                this.scrollPositionY = scrollPositionY;\r\n                            }\r\n                        });\r\n\r\n                    merge(\r\n                        fromEvent(element, 'ps-scroll-x')\r\n                            .pipe(mapTo('x')),\r\n                        fromEvent(element, 'ps-scroll-y')\r\n                            .pipe(mapTo('y')),\r\n                        fromEvent(element, 'ps-x-reach-end')\r\n                            .pipe(mapTo('right')),\r\n                        fromEvent(element, 'ps-y-reach-end')\r\n                            .pipe(mapTo('bottom')),\r\n                        fromEvent(element, 'ps-x-reach-start')\r\n                            .pipe(mapTo('left')),\r\n                        fromEvent(element, 'ps-y-reach-start')\r\n                            .pipe(mapTo('top')),\r\n                    )\r\n                        .pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((state: string) => {\r\n                            if (!this.disabled && (this.autoPropagation || this.scrollIndicators)) {\r\n                                this.stateUpdate.next(state);\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n\r\n            window.setTimeout(() => {\r\n                ScrollbarEvents.forEach((eventName: ScrollbarEvent) => {\r\n                    if (this.directiveRef) {\r\n                        this.directiveRef[eventName] = this[eventName];\r\n                    }\r\n                });\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.ngDestroy.next();\r\n            this.ngDestroy.unsubscribe();\r\n\r\n            if (this.stateTimeout && typeof window !== 'undefined') {\r\n                window.clearTimeout(this.stateTimeout);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            if (!this.disabled && this.autoPropagation && this.directiveRef) {\r\n                const element = this.directiveRef.elementRef.nativeElement;\r\n\r\n                this.usePropagationX = element.classList.contains('ps--active-x');\r\n\r\n                this.usePropagationY = element.classList.contains('ps--active-y');\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkPropagation(event: any, deltaX: number, deltaY: number): void {\r\n        this.interaction = true;\r\n\r\n        const scrollDirectionX = (deltaX < 0) ? -1 : 1;\r\n        const scrollDirectionY = (deltaY < 0) ? -1 : 1;\r\n\r\n        if ((this.usePropagationX && this.usePropagationY) ||\r\n            (this.usePropagationX && (!this.allowPropagationX ||\r\n                (this.scrollDirectionX !== scrollDirectionX))) ||\r\n            (this.usePropagationY && (!this.allowPropagationY ||\r\n                (this.scrollDirectionY !== scrollDirectionY)))) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        if (!!deltaX) {\r\n            this.scrollDirectionX = scrollDirectionX;\r\n        }\r\n\r\n        if (!!deltaY) {\r\n            this.scrollDirectionY = scrollDirectionY;\r\n        }\r\n\r\n        this.stateUpdate.next('interaction');\r\n\r\n        this.cdRef.detectChanges();\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'scrollbar-arrows',\r\n    styleUrls: [\r\n        './scrollbar-arrows.css'\r\n    ],\r\n    templateUrl: './scrollbar-arrows.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class ScrollbarArrowsComponent implements OnInit, OnChanges {\r\n\r\n    @Input() reachX: 'start'|'end' = 'start';\r\n    @Input() reachY: 'start'|'end' = 'start';\r\n\r\n\r\n    @Input() scrollbarXActive = false;\r\n    @Input() scrollbarYActive = false;\r\n\r\n    @Output() hasXScrollbar = new EventEmitter();\r\n    @Output() hasYScrollbar = new EventEmitter();\r\n\r\n    @Output() scrollMoveTo = new EventEmitter();\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() { }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.scrollbarYActive && !changes.scrollbarYActive.isFirstChange()) {\r\n            this.hasYScrollbar.emit(this.scrollbarYActive);\r\n        }\r\n    }\r\n\r\n\r\n    scrollTo($event: MouseEvent, dir: 'left'|'right'|'top'|'bottom') {\r\n        $event.stopPropagation();\r\n        this.scrollMoveTo.emit({ dir, event: $event });\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ScrollbarComponent } from './scrollbar.component';\r\nimport { ScrollbarDirective } from './scrollbar.directive';\r\nimport { ScrollbarArrowsComponent } from './arrow/scrollbar-arrows.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [\r\n        ScrollbarComponent, ScrollbarDirective,\r\n        ScrollbarArrowsComponent,\r\n    ],\r\n    exports: [\r\n        CommonModule, ScrollbarComponent, ScrollbarDirective,\r\n        ScrollbarArrowsComponent,\r\n    ]\r\n})\r\nexport class ScrollbarModule {\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[grid-cell-editor]',\r\n})\r\nexport class DatagridCellEditorDirective {\r\n    constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { OnInit, Directive, Input, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { DatagridCellEditorDirective } from './column-cell-edit.directive';\r\n\r\n@Directive({\r\n    selector: 'farris-grid-column',\r\n})\r\nexport class DatagridColumnDirective implements OnInit, AfterContentInit {\r\n\r\n    @Input() field: string;\r\n    @Input() title: string;\r\n    @Input() width: number;\r\n    @Input() halign: 'left' | 'center' |'right' = 'left';\r\n    @Input() align: 'left' | 'center' |'right' = 'left';\r\n    @Input() formatter: (value, rowData, rowIndex) => any;\r\n    @Input() readonly = true;\r\n    @Input() editable = false;\r\n\r\n    @ContentChild(DatagridCellEditorDirective) editor: any;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    ngAfterContentInit() {\r\n    }\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport { Component, EventEmitter, Input, OnInit, Output, ElementRef, Renderer2, Injector, OnChanges, SimpleChanges, ViewChild, Optional, OnDestroy } from '@angular/core';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'smart-filter-toolbar',\r\n    templateUrl: './smart-filter-toolbar.component.html',\r\n})\r\nexport class SmartFilterToolbarComponent implements OnInit, OnChanges, OnDestroy {\r\n    @Input() padding = '';\r\n    @Input() height = 40;\r\n    @Input() filterData = [];\r\n    @Output() clearFilters = new EventEmitter();\r\n    @Output() removeFilter = new EventEmitter();\r\n    @Output() filterChange = new EventEmitter();\r\n\r\n    @Output() resize = new EventEmitter();\r\n\r\n    @ViewChild('farrisFilter') filtebar: any;\r\n    sk = '';\r\n    dg: DatagridComponent;\r\n    destory$ = new Subject();\r\n    constructor(private el: ElementRef, private render: Renderer2, private inject: Injector) { }\r\n\r\n    ngOnInit(): void {\r\n        this.dg = this.inject.get<DatagridComponent>(DatagridComponent);\r\n        this.sk =  'smartfilter_' + this.dg.dgs.createConfigKey(this.dg.id);\r\n\r\n\r\n        this.dg.dgs.clearFilter.pipe(takeUntil(this.destory$)).subscribe(() => {\r\n            this.clearFilters.emit(null);\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destory$.next();\r\n        this.destory$.complete();\r\n    }\r\n\r\n    /** æ¡ä»¶ååäºä»¶ */\r\n    onQuery($event) {\r\n        const { data, filterItem } = $event;\r\n        if (data && data.length) {\r\n            const conditions = JSON.parse(data);\r\n            if (conditions && conditions.length) {\r\n                this.filterChange.emit({conditions, filterItem});\r\n            }\r\n        }\r\n    }\r\n\r\n    /** æ¸é¤æææ¡ä»¶ */\r\n    onResetFilter($event) {\r\n        this.clearFilters.emit($event);\r\n    }\r\n\r\n    /** ç§»é¤åä¸ªæ¡ä»¶ */\r\n    onRemoveFilter($event) {\r\n        this.removeFilter.emit($event);\r\n    }\r\n\r\n    /** å±å¼æå äºä»¶ */\r\n    onResize($event) {\r\n        setTimeout(() => {\r\n            const smartFilterWrapper = this.el.nativeElement.querySelector('.f-filter-wrapper');\r\n            if (smartFilterWrapper) {\r\n                const h = smartFilterWrapper.offsetHeight;\r\n                if (h) {\r\n                    this.resize.emit(h + 6);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","export function TextFilterControl(col: any) {\r\n    return {\r\n        controltype: 'text'\r\n    };\r\n}\r\n\r\nexport function BooleanFilterControl(col: any) {\r\n    return {\r\n        controltype: 'bool-check',\r\n        // enumValues: [\r\n        //     {value: true, name: 'true'},\r\n        //     {value: false, name: 'false'}\r\n        // ]\r\n    };\r\n}\r\n\r\nexport function EnumFilterControl(col: any, enumopts: any) {\r\n    const valueField = enumopts.valueField || enumopts.idField;\r\n    const data = enumopts.data.map(n => {\r\n        return {\r\n            value:  n[valueField],\r\n            name: n[enumopts.textField]\r\n        };\r\n    });\r\n\r\n    return {\r\n        controltype: 'checkboxgroup',\r\n        enumValues: data,\r\n    };\r\n}\r\n\r\nexport function DateFilterControl(col, options: any) {\r\n    let tye = 'datetime';\r\n    let fmt = 'yyyy-MM-dd';\r\n    let returnFmt = 'yyyy-MM-dd';\r\n    if (options && options.format) {\r\n        fmt = options.format;\r\n        if (fmt.indexOf('HH:') == -1) {\r\n            tye = 'date';\r\n        } else {\r\n            returnFmt += ' HH:mm';\r\n            if (fmt.indexOf('ss') > -1) {\r\n                returnFmt += ':ss';\r\n            }\r\n        }\r\n    } else {\r\n        tye = 'date';\r\n    }\r\n\r\n    // all = 1, å¹´ææ¥\r\n    // noDate = 2,  å¹´æ\r\n    // noDateAndMonth = 3,  å¹´\r\n\r\n    return {\r\n        controltype: 'flexibleDate',\r\n        dateFormat: fmt,\r\n        single: false,\r\n        showType: 1,\r\n        showTime: tye === 'datetime'\r\n    };\r\n}\r\n\r\nexport function NumberFilterControl(col) {\r\n    return  {\r\n        controltype: 'flexibleNumber',\r\n        single: false\r\n    };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ColumnFilterType } from '../types/data-column';\r\n\r\nimport { BooleanFilterControl, DateFilterControl, EnumFilterControl,\r\n        NumberFilterControl, TextFilterControl } from '../plugins/smart-filter/controlData/filter-control.options';\r\n\r\n@Injectable()\r\nexport class DatagridSmartFilterService {\r\n    private conditions: any[] = [];\r\n    controlData: any = [];\r\n\r\n    filterChanged = new Subject();\r\n\r\n    removeFilter = new Subject();\r\n    clearAllFilter = new Subject();\r\n\r\n    constructor() { }\r\n\r\n\r\n    getColumnFilterData(col: any) {\r\n        let filterControlData: any = {\r\n            controltype: 'text',\r\n        };\r\n        if (col.filter !== undefined) {\r\n            if (typeof col.filter === 'boolean') {\r\n                if (col.formatter) {\r\n                    if (typeof col.formatter === 'object' && Object.keys(col.formatter).length) {\r\n                        const options: any = col.formatter['options'];\r\n                        switch (col.formatter['type']) {\r\n                            case 'number':\r\n                                return NumberFilterControl(col);\r\n                            case 'enum':\r\n                                return EnumFilterControl(col, options);\r\n                            case 'boolean':\r\n                                return BooleanFilterControl(col);\r\n                            case 'datetime':\r\n                                let tye = 'datetime';\r\n                                let fmt = 'yyyy-MM-dd';\r\n                                let returnFmt = 'yyyy-MM-dd';\r\n                                if (options && options.format) {\r\n                                    fmt = options.format;\r\n                                    if (fmt.indexOf('HH:') == -1) {\r\n                                        tye = 'date';\r\n                                    } else {\r\n                                        returnFmt += ' HH:mm';\r\n                                        if (fmt.indexOf('ss') > -1) {\r\n                                            returnFmt += ':ss';\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    tye = 'date';\r\n                                }\r\n                                filterControlData = {\r\n                                    controltype: 'flexibleDate',\r\n                                    dateFormat: fmt,\r\n                                    single: false,\r\n                                    showType: 3,\r\n                                    showTime: tye === 'datetime'\r\n                                };\r\n                                break;\r\n                            default:\r\n                                return TextFilterControl(col);\r\n                        }\r\n                    }\r\n                }\r\n                return filterControlData;\r\n            } else {\r\n                switch (col.filter.type) {\r\n                    case ColumnFilterType.enum:\r\n                        return EnumFilterControl(col, col.filter.options);\r\n                    case ColumnFilterType.date:\r\n                    case ColumnFilterType.datetime:\r\n                        return DateFilterControl(col, col.filter.options);\r\n                    case ColumnFilterType.number:\r\n                        return NumberFilterControl(col);\r\n                    case ColumnFilterType.boolean:\r\n                        return BooleanFilterControl(col);\r\n                }\r\n            }\r\n        }\r\n\r\n        return filterControlData;\r\n    }\r\n\r\n\r\n\r\n    filterConditionChanged(e: {conditions: any[], controlData: any, from: 'toolbar' | 'panel'}) {\r\n        const items = e.conditions;\r\n\r\n        if (!this.conditions || !this.conditions.length) {\r\n            this.conditions.push(...items);\r\n            this.controlData.push({...e.controlData});\r\n        } else {\r\n            /// TODO, CONTROLDATA çç´¢å¼ä¸conditions çç´¢å¼å¾å¯è½ä¸æ¯1ä¸ª\r\n            if (e.from === 'toolbar') {\r\n                this.conditions = [...items];\r\n            } else {\r\n                this.conditions = this.conditions.filter(n => n.FilterField !== items[0].FilterField);\r\n                if (items.length === 1) {\r\n                    this.conditions.push({ ...items[0] });\r\n                } else {\r\n                    this.conditions.push(...items);\r\n                }\r\n            }\r\n\r\n            if (e.controlData) {\r\n                const ctrlIdx = this.controlData.findIndex(n => n.labelCode === e.controlData.labelCode);\r\n                if (ctrlIdx > -1) {\r\n                    this.controlData[ctrlIdx] = {...e.controlData};\r\n                } else {\r\n                    this.controlData.push({...e.controlData});\r\n                }\r\n            }\r\n        }\r\n\r\n        this.filterChanged.next({conditions: [...this.conditions], controlData: [...this.controlData] });\r\n    }\r\n\r\n    removeCondition(e, emitRemove = false) {\r\n        if (this.conditions && this.conditions.length) {\r\n            this.conditions = this.conditions.filter(n => n.FilterField !== e.labelCode);\r\n            this.controlData = this.controlData.filter(n => n.labelCode !== e.labelCode);\r\n        }\r\n        this.filterChanged.next({conditions: [...this.conditions], controlData: [...this.controlData] });\r\n        if (emitRemove) {\r\n            this.removeFilter.next(e);\r\n        }\r\n    }\r\n\r\n    clearAll() {\r\n        this.conditions = [];\r\n        this.controlData = [];\r\n        this.clearAllFilter.next(null);\r\n    }\r\n}\r\n","import { DatagridComponent } from './../datagrid.component';\r\nimport { Injectable } from '@angular/core';\r\nimport { delay } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SelectionModeService {\r\n    dgRef: DatagridComponent = null;\r\n    private oldSettings: any = null;\r\n    private selectStartEvent: any = null;\r\n    private events = null;\r\n    constructor(grid: DatagridComponent) {\r\n        this.dgRef = grid;\r\n        if (this.dgRef.selectionMode === 'default') {\r\n            grid.zone.runOutsideAngular(() => {\r\n                this.removeEvents();\r\n                this.events = this.registerStopSelectionEvent();\r\n            });\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.dgRef = null;\r\n        this.removeEvents();\r\n    }\r\n\r\n    removeEvents() {\r\n        if (this.events && this.events.length) {\r\n            this.events.forEach(e => {\r\n                e();\r\n            });\r\n\r\n            this.events = null;\r\n        }\r\n    }\r\n\r\n    public toggleMode() {\r\n        if (this.dgRef) {\r\n            if (this.dgRef.selectionMode === 'default') {\r\n                this.enableWindowsSelectionMode();\r\n            } else {\r\n                this.restoreSettings();\r\n            }\r\n        }\r\n    }\r\n\r\n    public enableWindowsSelectionMode() {\r\n        if (this.dgRef) {\r\n            this.oldSettings = {\r\n                showCheckbox: this.dgRef.showCheckbox,\r\n                keepSelect: this.dgRef.keepSelect,\r\n                onlySelectSelf: this.dgRef.onlySelectSelf,\r\n                selectOnCheck: this.dgRef.selectOnCheck,\r\n                checkOnSelect: this.dgRef.checkOnSelect\r\n            };\r\n\r\n            this.dgRef.showCheckbox = true;\r\n            this.dgRef.keepSelect = true;\r\n            this.dgRef.onlySelectSelf = false;\r\n            this.dgRef.selectOnCheck = true;\r\n            this.dgRef.checkOnSelect = true;\r\n\r\n            this.dgRef.dfs.updateProperty('keepSelect', true);\r\n            this.dgRef.dfs.updateProperty('onlySelectSelf', false);\r\n            this.dgRef.dfs.updateProperty('selectOnCheck', true);\r\n            this.dgRef.dfs.updateProperty('checkOnSelect', true);\r\n        }\r\n    }\r\n\r\n    public restoreSettings() {\r\n        if (this.dgRef && this.oldSettings) {\r\n            this.dgRef.showCheckbox = this.oldSettings.showCheckbox;\r\n            this.dgRef.keepSelect = this.oldSettings.keepSelect;\r\n            this.dgRef.onlySelectSelf = this.oldSettings.onlySelectSelf;\r\n            this.dgRef.selectOnCheck = this.oldSettings.selectOnCheck;\r\n            this.dgRef.checkOnSelect = this.oldSettings.checkOnSelect;\r\n\r\n\r\n            this.dgRef.dfs.updateProperty('keepSelect', this.oldSettings.keepSelect);\r\n            this.dgRef.dfs.updateProperty('onlySelectSelf', this.oldSettings.onlySelectSelf);\r\n            this.dgRef.dfs.updateProperty('selectOnCheck', this.oldSettings.selectOnCheck);\r\n            this.dgRef.dfs.updateProperty('checkOnSelect', this.oldSettings.checkOnSelect);\r\n        }\r\n    }\r\n\r\n\r\n    private registerStopSelectionEvent() {\r\n        const kd = this.dgRef.render2.listen(document, 'keydown', (event: any) => {\r\n            if (event.ctrlKey || event.shiftKey) {\r\n                this.unselectable();\r\n            }\r\n        });\r\n\r\n        const ku = this.dgRef.render2.listen(document, 'keyup', (event: any) => {\r\n            if (event.ctrlKey || event.shiftKey || event.keyCode === 17 || event.keyCode === 16) {\r\n                this.enableSelectable();\r\n            }\r\n        });\r\n\r\n        return [ kd, ku];\r\n    }\r\n\r\n    private unselectable() {\r\n        this.dgRef.render2.setAttribute(this.dgRef.dgContainer.nativeElement, 'unselectable', 'on');\r\n        this.dgRef.render2.setAttribute(this.dgRef.dgContainer.nativeElement, 'onselectstart', 'return false');\r\n        this.dgRef.render2.setStyle(this.dgRef.dgContainer.nativeElement, '-moz-user-select', 'none');\r\n    }\r\n\r\n    private enableSelectable() {\r\n        this.dgRef.render2.removeAttribute(this.dgRef.dgContainer.nativeElement, 'unselectable');\r\n        this.dgRef.render2.removeAttribute(this.dgRef.dgContainer.nativeElement, 'onselectstart');\r\n        this.dgRef.render2.removeStyle(this.dgRef.dgContainer.nativeElement, '-moz-user-select');\r\n    }\r\n\r\n    beforRowClick(param: any) {\r\n        if (this.dgRef && this.dgRef.selectionMode === 'default') {\r\n            const isSelected = this.dgRef.dfs.isRowSelected(param.id);\r\n            const isCtrlKey = param.e.ctrlKey;\r\n            const isShiftKey = param.e.shiftKey;\r\n\r\n            this.dgRef.endEditing();\r\n\r\n            if (!isCtrlKey && !isShiftKey) {\r\n                if (!isSelected) {\r\n                    this.dgRef.clearCheckeds();\r\n                } else {\r\n                    // å¦ææå¤æ¡éï¼ç§»é¤å¶ä»éä¸­è¡\r\n                    const currentPagerIds = this.dgRef.getRows().map(n => n.id);\r\n                    const unCheckIDs = this.dgRef.checkValues.filter(i => currentPagerIds.includes(i) && i != param.id);\r\n                    const unSelectIds = this.dgRef.checkValues.filter(n => !currentPagerIds.includes(n));\r\n                    // const unCheckIDs = this.dgRef.checkValues.filter(n => n != param.id);\r\n                    if (unCheckIDs && unCheckIDs.length) {\r\n                        this.dgRef.unCheckRows(unCheckIDs, true);\r\n                        this.dgRef.clearSelections([param.id, ...unSelectIds]);\r\n                    }\r\n                }\r\n            } else {\r\n                if (isShiftKey) {\r\n                    let focusIndex = this.dgRef.focusRowIndex;\r\n                    if (focusIndex === -1) {\r\n                        focusIndex = 0;\r\n                    }\r\n\r\n                    const endIndex = param.rowIndex;\r\n                    let start = focusIndex;\r\n                    let end = endIndex;\r\n                    if (focusIndex > endIndex) {\r\n                        start = endIndex;\r\n                        end = focusIndex;\r\n                    }\r\n\r\n                    const data = this.dgRef.getRows();\r\n                    const checkedItems = [...data].splice(start, end - start + 1);\r\n                    const willCheckIds = checkedItems.map(n => {\r\n                        return this.dgRef.dfs.primaryId(n);\r\n                    });\r\n\r\n                    if (!isCtrlKey) {\r\n                        this.dgRef.clearCheckeds(false, false);\r\n                    }\r\n                    // this.dgRef.selectValues = willCheckIds;\r\n                    this.dgRef.checkRows(willCheckIds, true);\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (isSelected && isCtrlKey) {\r\n                param.e.stopPropagation();\r\n                // æ§è¡åæ¶éæ©\r\n                this.dgRef.unCheckRow(param.id);\r\n                return true;\r\n            }\r\n\r\n            const zoneClick = param.cellref ? param.cellref['zoneClick'] : '';  \r\n            const _timer = zoneClick && zoneClick.length ? 100: 0;\r\n\r\n            let r$: Observable<any> = of(true);\r\n            if (this.dgRef.beforeSelect) {\r\n                const r = this.dgRef.beforeSelect(param);\r\n                if (r && r.subscribe) {\r\n                    r$ = r;\r\n                }\r\n            }\r\n            r$.pipe(delay(_timer)).subscribe((canSelect: boolean) => {\r\n                if (canSelect) {\r\n                    this.dgRef.dfs.selectRow(param.rowIndex, param.rowData);\r\n                    if (this.dgRef.selectedRow) {\r\n                        this.dgRef.selectedRow.dr = param.dr;\r\n                    }\r\n                }\r\n                this.dgRef.rowClick.emit({ data: param.rowData, grid: this.dgRef, dblclick: false });\r\n                this.dgRef.dgs.setSelecedRow.emit({ selected: true, id: this.dgRef.dfs.primaryId(param.rowData) });\r\n\r\n                if (_timer) {\r\n                    if (param.cellref && param.cellref.runZoneClick) {\r\n                        param.cellref.runZoneClick(param.e);\r\n                    }\r\n                }\r\n            });\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    endRowClick() {\r\n        if (this.dgRef && this.dgRef.selectionMode === 'default') {\r\n            this.dgRef.checkOnSelect = false;\r\n        }\r\n    }\r\n}\r\n\r\n","\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-30 16:42:51\r\n * @QQ: 1055818239\r\n * @Version: v0.8.0\r\n * - 2021/04/07 å¢å  enableHighlightCell å±æ§ï¼æ¯æéä¸­ååæ ¼é«äº®\r\n */\r\n\r\nimport {\r\n    Component, OnInit, Input, ViewEncapsulation,\r\n    ContentChildren, QueryList, Output, EventEmitter, Renderer2, OnDestroy, OnChanges,\r\n    SimpleChanges, ChangeDetectionStrategy, ChangeDetectorRef, Injector, HostBinding,\r\n    AfterContentInit, NgZone, ElementRef, ViewChild, AfterViewInit, ApplicationRef, TemplateRef, HostListener, DoCheck\r\n} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { FormGroup, ValidatorFn } from '@angular/forms';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { of, Subscription, Observable, from, BehaviorSubject } from 'rxjs';\r\nimport { DataColumn, CustomStyle, MoveDirection, ColumnGroup, ColumnFilterType, CellTemplateFn } from './types/data-column';\r\nimport { DatagridFacadeService } from './services/datagrid-facade.service';\r\nimport { DatagridColumnDirective } from './components/columns/datagrid-column.directive';\r\nimport { CellInfo, IgnoreProperties, IS_GROUP_ROW_FIELD, SelectedRow } from './services/state';\r\nimport { RestService, DATAGRID_REST_SERVICEE } from './services/rest.service';\r\nimport { DatagridService } from './services/datagrid.service';\r\nimport { GRID_EDITORS, CELL_SELECTED_CLS, GRID_VALIDATORS, SIZE_TYPE, GRID_SETTINGS_SERVICE, GRID_SETTINGS_HTTP, CELL_EDITING_CLS, TR_PREFIX, TR_ID_PREFIX, SizeConfig } from './types/constant';\r\nimport { DomHandler } from './services/domhandler';\r\nimport { Utils } from './utils/utils';\r\nimport { CommonUtils, DebugService, FarrisComponentInstanceService, WEBAPI_PREFIX_TOKEN } from '@farris/ui-common';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { flatten, cloneDeep } from 'lodash-es';\r\nimport { ScrollbarDirective } from './scrollbar/scrollbar.directive';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { BeforEventParam, RowEditParam } from './types/event-params';\r\nimport { DatagridColumnsHelper } from './services/datagrid-columns.helper';\r\nimport { DatagridFilterService } from './services/datagrid-filter.service';\r\nimport { debounceTime, map, switchMap, takeUntil } from 'rxjs/operators';\r\n\r\nimport { SmartFilterToolbarComponent } from './components/filter-toolbar/smart-filter-toolbar.component';\r\nimport { DatagridSmartFilterService } from './services/datagrid-smart-filter.service';\r\nimport { IdService } from '@farris/ui-common';\r\nimport { SelectionModeService } from './services/selection-mode.service';\r\nimport { ContextMenuItem } from '@farris/ui-context-menu';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Compare, FilterCondition } from '@farris/ui-common/types';\r\n\r\n@Component({\r\n    selector: 'farris-datagrid',\r\n    templateUrl: './datagrid.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        DatagridFacadeService,\r\n        DatagridService,\r\n        DatagridSmartFilterService\r\n    ],\r\n    exportAs: 'datagrid',\r\n    styles:[\r\n        `.f-datagrid-header table{\r\n            background-color: #F1F3F7;\r\n        }\r\n        .scrollbar-allways-show .ps.ps--active-x > .ps__rail-x {\r\n            margin-right: 0px!important;\r\n        }\r\n        .scrollbar-allways-show .ps.ps--active-y > .ps__rail-y {\r\n            margin-bottom: 0px!important;\r\n        }\r\n        .scrollbar-allways-show .ps.ps--active-x.ps--active-y > .ps__rail-x {\r\n            margin-right: 18px!important;\r\n        }\r\n        .scrollbar-allways-show .ps.ps--active-x.ps--active-y > .ps__rail-y {\r\n            margin-bottom: 18px!important;\r\n        }\r\n\r\n        `\r\n    ]\r\n})\r\nexport class DatagridComponent implements OnInit, OnDestroy, OnChanges, AfterContentInit, AfterViewInit, DoCheck {\r\n    private auther = `Lucas Huang - QQ:1055818239`;\r\n    private version = '0.8.x';\r\n    __component_type__ = 'DatagridComponent';\r\n\r\n    /** å¯ç¨æ§è½ä¼åçï¼é»è®¤ä¸º false */\r\n    @Input() fast = false;\r\n\r\n    @HostBinding('style.position') pos = 'relative';\r\n    @HostBinding('class.f-datagrid-full') hostCls = false;\r\n    @HostBinding('class.f-datagrid-auto-height') get autoHeightCls() {\r\n        return this.autoHeight;\r\n    }\r\n    /** ä½¿ç¨ä¸»é¢ */\r\n    @Input() useThemes = true;\r\n    // ç¨äºå­å¨ç¨æ·ä¸ªæ§åè®¾ç½®\r\n    @Input() id = '';\r\n    /** èªå¨é«åº¦ - å¯ç¨æ­¤å±æ§åï¼å°±æ¯ä¸ä¸ªæ®æ®ééç table , ä¸è½ç¼è¾ï¼ä¸è½æåºï¼ä¸è½åé¡µï¼ä¸è½... å°±æ¯ä¸å¡è */\r\n    @Input() useHtmlTable = false;\r\n    /** èªå¨é«åº¦ */\r\n    @Input() autoHeight = false;\r\n    /** éå autoHeight ä¸èµ·ä½¿ç¨ï¼å½æ­¤å¼å¤§äº0 æ¶ï¼ä¸autoHeight ä¸ºtrueæ¶ï¼æ°æ®æ»è¡é«è¾¾å°æå¤§é«åº¦æ¶ï¼å°åæ­¢èªå¨é«åº¦å¹¶ä½¿ç¨åé¨æ»å¨æ¡ */\r\n    @Input() maxHeight = 0;\r\n\r\n    /** æ¾ç¤ºè¾¹æ¡ */\r\n    @Input() showBorder = false;\r\n    /** å¯ç¨æé©¬çº¿  */\r\n    @Input() striped = true;\r\n    /** å®½åº¦ */\r\n    @Input() width = 800;\r\n    /** é«åº¦ */\r\n    @Input() height = 300;\r\n\r\n    /** æ¾ç¤ºè¡¨å¤´ */\r\n    @Input() showHeader = true;\r\n    /** è¡¨å¤´-åè¡é«åº¦ */\r\n    @Input() headerHeight = 35;\r\n    /** è¡¨å¤´æè¡ */\r\n    @Input() headerWrap = false;\r\n    /** æ¾ç¤ºé¡µè */\r\n    @Input() showFooter = false;\r\n    /** é¡µèé»è®¤è¡é« */\r\n    @Input() footerHeight = 29;\r\n\r\n\r\n    /** é¡µèæ°æ®æ¥æº, é»è®¤ä¸º client */\r\n    @Input() footerDataFrom: 'server' | 'client' = 'client';\r\n    /** é¡µèåè®¡è¡æ¨¡æ¿ */\r\n    @Input() footerTemplate: TemplateRef<any>;\r\n\r\n    @Input() footerComponentType: CellTemplateFn;\r\n    /** åè®¡è¡æ¾ç¤ºä½ç½®ï¼é»è®¤ä¸ºåºé¨ */\r\n    @Input() footerPosition: 'top' | 'bottom' | 'both' = 'bottom';\r\n    /** é¡µèè¡èªå®ä¹æ ·å¼ */\r\n    @Input() footerStyler: () => { cls?: string, style?: any };\r\n    /** è¡é« */\r\n    @Input() rowHeight = 29;\r\n\r\n    /**\r\n     * è®¾ç½®grid è¡é«å°ºå¯¸\r\n     * sm: å°ï¼md: æ­£å¸¸ï¼ lg: å¤§ï¼xl: è¶å¤§\r\n     */\r\n    private _sizeType: 'sm' | 'md' | 'lg' | 'xl' = 'sm';\r\n    get sizeType() {\r\n        return this._sizeType;\r\n    }\r\n    @Input() set sizeType(val) {\r\n        this._sizeType = val;\r\n    }\r\n\r\n    /** å¡«åå®¹å¨ */\r\n    private _fit = false;\r\n    @Input() get fit() {\r\n        return this._fit;\r\n    }\r\n    set fit(val: boolean) {\r\n        this._fit = val;\r\n        this.hostCls = val;\r\n    }\r\n    /** å¦æä¸ºçï¼åèªå¨å±å¼/æ¶ç¼©åçå¤§å°ä»¥éåç½æ ¼å®½åº¦å¹¶é²æ­¢æ°´å¹³æ»å¨ã */\r\n    private _fitColumns = false;\r\n    @Input() get fitColumns() {\r\n        return this._fitColumns;\r\n    }\r\n    set fitColumns(val: boolean) {\r\n        if (this._fitColumns !== val) {\r\n            this._fitColumns = val;\r\n            if (val) {\r\n                this.setFitColumns(val);\r\n            } else {\r\n                this.dfs.fitColumns(false);\r\n                this.dfs.initColumns(false, true);\r\n                this.restituteColumnsSize();\r\n            }\r\n        }\r\n    }\r\n    /** æ ¹æ®gridçå®½åº¦èªå¨è°æ´åå®½åº¦ */\r\n    private _autoFitColumns = false;\r\n    @Input() get autoFitColumns() {\r\n        return this._autoFitColumns;\r\n    }\r\n    set autoFitColumns(val) {\r\n        this._autoFitColumns = val;\r\n        this.dfs.updateProperty('autoFitColumns', val);\r\n    }\r\n\r\n    /** ç¦ç¨ */\r\n    @Input() disabled = false;\r\n    /**\r\n     * æ»å¨æ¡æ¾ç¤ºæ¨¡å¼ï¼é»è®¤ä¸º auto\r\n     */\r\n    @Input() scrollBarShowMode: 'auto' | 'allways' = 'auto';\r\n    @Input() scrollBarOptions = {\r\n        width: 18,\r\n        height: 18\r\n    };\r\n    /** å½æ»å¨ä¸ç´æ¾ç¤ºæ¶ï¼æ¯å¦æ¾ç¤ºä¸¤ç«¯çç®­å¤´ */\r\n    @Input() showScrollArrow = false;\r\n\r\n    /** å¯æå¨åè®¾ç½®åå®½ */\r\n    @Input() resizeColumn = true;\r\n    /** æ¾ç¤ºè¡å· */\r\n    @Input() showLineNumber = false;\r\n    /** è¡å·è¡¨å¤´å­ç¬¦ */\r\n    @Input() lineNumberTitle = '';\r\n    /** è¡å·å®½åº¦ */\r\n    @Input() lineNumberWidth = 36;\r\n    /** å¤éæ¡åå®½åº¦ï¼é»è®¤ 36px */\r\n    @Input() checkboxColumnWidth = 36;\r\n    /** é¼ æ æ»è¿ææå¼å³ï¼é»è®¤å¼å¯ */\r\n    @Input() rowHover = true;\r\n    /** åè®¸ç¼è¾æ¶ï¼åå»è¿å¥ç¼è¾ç¶æ; falseä¸ºåå»è¿å¥ç¼è¾ */\r\n    @Input() clickToEdit = true;\r\n\r\n    private _lockPagination = false;\r\n    /** éå®åé¡µæ¡ï¼éå®åé¡µç ç¹å»æ æ */\r\n    @Input() get lockPagination() {\r\n        return this._lockPagination;\r\n    }\r\n    set lockPagination(val: boolean) {\r\n        this._lockPagination = val;\r\n        if (this.dgPager) {\r\n            this.dgPager[val ? 'lock' : 'unlock']();\r\n        }\r\n    }\r\n\r\n    /** åé¡µä¿¡æ¯ */\r\n    private __pagination = true;\r\n    @Input() set pagination(val) {\r\n        if (this.__pagination !== val) {\r\n            this.__pagination = val;\r\n            this.dfs.updateProperty('pagination', val);\r\n            this.dgs.showGridHeader.emit();\r\n        }\r\n    }\r\n    get pagination() {\r\n        return this.__pagination;\r\n    }\r\n\r\n    /** åé¡µç»ä»¶èªå®ä¹åå®¹åºæ¨¡æ¿ */\r\n    @Input() pagerContentTemplate: TemplateRef<any> = null;\r\n    /** åé¡µæ¡å¯¹é½å±ç¤ºæ¹å¼ï¼ left, right, center   é»è®¤ä¸º right  */\r\n    @Input() pagerPos: 'left'|'center'| 'right' = 'right';\r\n\r\n    /** åé¡µæ¡æ¾ç¤ºæ¨¡å¼ï¼ default, simple */\r\n    @Input() pagerViewMode = 'default';\r\n    /** å¯ç¨æå¡å¨ç«¯åé¡µ */\r\n    @Input() pagerOnServer = true;\r\n    /** æ¯é¡µè®°å½æ° */\r\n    @Input() pageList = [10, 20, 30, 50, 100];\r\n    /** å½åé¡µç  */\r\n    @Input() pageIndex = 1;\r\n    /** æ¯é¡µè®°å½æ° */\r\n    @Input() pageSize = 20;\r\n    /** åé¡µåºé«åº¦ */\r\n    @Input() pagerHeight = 56;\r\n    /** æ¾ç¤ºæ¯é¡µè®°å½æ° */\r\n    @Input() showPageList = false;\r\n    /** æ¾ç¤ºåé¡µä¿¡æ¯ */\r\n    @Input() showPageInfo = true;\r\n    /** æ¾ç¤ºé¡µç  */\r\n    @Input() showPageNumber = true;\r\n    /** æ¾ç¤ºé¡µç æå¤§æ°é */\r\n    @Input() pagerLabelSize = 7;\r\n    /** æ¾ç¤ºè½¬è³æå®é¡µç è¾å¥æ¡ */\r\n    @Input() showGotoInput = false;\r\n    /** å¯ç¨è·¨é¡µå¤é */\r\n    @Input() enableMorePageSelect = false;\r\n    /** æ¾ç¤ºéä¸­åè¡¨ */\r\n    @Input() showSelectedList = false;\r\n    /** éä¸­åè¡¨ä¸­ï¼æ¯æ¡è®°å½æ¾ç¤ºçåå®¹ */\r\n    @Input() selectedItemFormatter: (data) => string;\r\n    /** ååæ ¼ä¿¡æ¯æç¤ºå»¶æ¶ï¼é»è®¤ 1000ms */\r\n    @Input() cellTipTimer = 1000;\r\n    /** grid åé¨å¤çåé¡µç¶æ */\r\n    @Input() controlPaginationState = true;\r\n    /** æ»è®°å½æ° */\r\n    private _total = 0;\r\n    get total() {\r\n        return this._total;\r\n    }\r\n\r\n    @Input() set total(val: number) {\r\n        this._total = val;\r\n        this.pagerOpts.totalItems = val;\r\n        if (!this.pagination) {\r\n            this.pagerOpts.itemsPerPage = val;\r\n        }\r\n        this.dfs.setTotal(val);\r\n    }\r\n    /** å¯ç¨éä¸­è¡ */\r\n    @Input() enableSelectRow = true;\r\n    /** å¯ç¨å¤é */\r\n    @Input() multiSelect = false;\r\n    /** å¯ç¨å¤éæ¶ï¼æ¯å¦æ¾ç¤ºcheckbox */\r\n    @Input() showCheckbox = false;\r\n    /** æ¾ç¤ºå¨écheckbox */\r\n    @Input() showAllCheckbox = false;\r\n    /** å½å¯ç¨å¤éæ¶ï¼ç¹å»è¡éä¸­ï¼åªåè®¸ä¸åªæä¸è¡è¢«éä¸­ã, é»è®¤ä¸º true */\r\n    @Input() onlySelectSelf = true;\r\n    /** å¯ç¨å¤éä¸æ¾ç¤ºcheckbox, éä¸­è¡åæ¶é©é, é»è®¤ä¸º false */\r\n    @Input() checkOnSelect = false;\r\n    /** å¯ç¨å¤éä¸æ¾ç¤ºcheckbox, é©éåéä¸­è¡, é»è®¤ä¸º false */\r\n    @Input() selectOnCheck = false;\r\n    /**\r\n     * è¡éä¸­æ¨¡å¼ï¼custom: èªå®ä¹ï¼ default: ä»¿Windowsèµæºç®¡çå¨éä¸­\r\n     * æ³¨æï¼ æ­¤å±æ§ä»å¤éï¼æ¾ç¤ºå¤éæ¡ææ\r\n     * é»è®¤å¼ï¼ custom\r\n     * addTime: 2021-12-14 by LUCAS HUANG\r\n     */\r\n    @Input() selectionMode: 'custom' | 'default' = 'custom';\r\n    /**\r\n     * åå»è¡éä¸­åï¼å¨æ¬¡ç¹å»ä¸ä¼è¢«åæ¶éä¸­ç¶æ;\r\n     */\r\n    @Input() keepSelect = true;\r\n    /** å½æ°æ®ä¸ºç©ºæ¶ï¼ä½¿ç¨ç©ºç½æ¾ç¤ºï¼ä¸é«åº¦ä¸ºä¸è¡çé«åº¦ã é»è®¤ä¸º false */\r\n    @Input() useBlankWhenDataIsEmpty = false;\r\n\r\n    /** æ°æ®ä¸ºç©ºæ¶çé«åº¦ */\r\n    @Input() emptyDataHeight = 240;\r\n    /** ç©ºæ°æ®æ¶ï¼æ¾ç¤ºçæç¤ºææ¬ */\r\n    @Input() emptyMessage = 'ææ æ°æ®';\r\n    /** æ æ°æ®æ¶çæ¨¡æ¿ */\r\n    @Input() emptyTemplate: TemplateRef<any> = null;\r\n    @Input() emptyComponentType: CellTemplateFn = null;\r\n\r\n    /** ä¸»é®å­æ®µ */\r\n    @Input() idField = 'id';\r\n    /** è¯·æ±æ°æ®æºçURL */\r\n    @Input() url: string;\r\n    /** æ°æ®æº */\r\n    @Input() data: any[];\r\n\r\n    /** é¡µèæ°æ® */\r\n    private _footerData: Observable<any> = of([]);\r\n    @Input() get footerData() {\r\n        return this._footerData;\r\n    }\r\n    set footerData(rows) {\r\n        if (rows && rows.subscribe) {\r\n            this._footerData = rows;\r\n        } else {\r\n            this._footerData = of(rows || []);\r\n        }\r\n        if (rows) {\r\n            this.setFooterHeight();\r\n        }\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    /** éªè¯ä¸éè¿æ¶å¯ä»¥ç»æç¼è¾ */\r\n    @Input() endEditByInvalid = true;\r\n\r\n    /** åéå */\r\n    private _columns = [];\r\n    @Input()\r\n    get columns() {\r\n        return this._columns;\r\n    }\r\n    set columns(values) {\r\n        this._columns = this.correctColumns(values);\r\n        this.dfs.updateProperty('columns', this._columns);\r\n    }\r\n\r\n    private _fields = [];\r\n    get fields() {\r\n        return this._fields;\r\n    }\r\n\r\n    @Input() set fields(cols) {\r\n        this._fields = cols;\r\n        this.columns = cols;\r\n        if (this.data) {\r\n            this.columnsChanged(false, true);\r\n        }\r\n    }\r\n    /** ç¦æ­¢æ°æ®æè¡ï¼é»è®¤å¼ï¼true,å³å¨ä¸è¡æ¾ç¤ºï¼ä¸æè¡ã */\r\n    @Input() nowrap = true;\r\n    /** èæå è½½ */\r\n    @Input() virtualized = false;\r\n    /** æ¯å¦å¯ç¨å¼æ­¥å è½½æ°æ® */\r\n    @Input() virtualizedAsyncLoad = false;\r\n    /** è¡æ ·å¼ */\r\n    @Input() rowStyler: (rowData, rowIndex?: number) => { cls?: string, style?: any };\r\n    /** ç¼è¾æ¹å¼ï¼ row(æ´è¡ç¼è¾)ãcell(ååæ ¼ç¼è¾)ï¼é»è®¤ä¸º row */\r\n    @Input() editMode: 'row' | 'cell' = 'row';\r\n    /** ç¼è¾ç¶æ */\r\n    private _editable = false;\r\n    get editable() {\r\n        return this._editable;\r\n    }\r\n    @Input() set editable(v) {\r\n        if (this._editable !== v) {\r\n            this._editable = v;\r\n            this.cd.detectChanges();\r\n            this.dgs.updateEmptyStyle();\r\n        }\r\n    }\r\n    /** å¯ç¨å¯ç¼è¾ååæ ¼æ ·å¼ã */\r\n    @Input() enableEditCellStyle = false;\r\n\r\n    /** è¿å¥ç¼è¾ç¶ææ¶éæ¯å¦éä¸­ææ¬ï¼é»è®¤ä¸º false\r\n     * ä»ææ¬æ¡æ¯ææ­¤ç¹æ§\r\n     */\r\n    @Input() selectOnEditing = false;\r\n\r\n    /** ç¼è¾å¨é«åº¦ */\r\n    @Input() editorHeight = 30;\r\n    /** å¯ç¨è¿ç«¯æåº */\r\n    @Input() remoteSort = false;\r\n    /** æåºå­æ®µ */\r\n    @Input() sortName: string;\r\n    /** æåºæ¹å¼ asc | desc */\r\n    @Input() sortOrder: string;\r\n    /** åè®¸å¤åæåº */\r\n    @Input() multiSort: boolean;\r\n\r\n    @Input() hoverRowCls = 'f-datagrid-row-hover';\r\n\r\n    /** åè®¸ææ½åé¡ºåº */\r\n    @Input() enableDragColumn = false;\r\n\r\n    /** è¡åç»é¢æ¿é«åº¦ï¼é»è®¤ 50PX */\r\n    @Input() rowGroupPanelHeight = 50;\r\n    /** å¯ç¨åç»è¡ */\r\n    @Input() groupRows = false;\r\n    /** å¯ç¨è¡åç»åè®¡è¡ */\r\n    @Input() groupFooter = false;\r\n    /** åç»è¡æ¯å¦å±å¼ï¼é»è®¤ä¸º å±å¼  */\r\n    @Input() expandGroupRows = true;\r\n    /**\r\n     * åç»åè®¡è¡èªå®ä¹æ ·å¼ï¼\r\n     * åè®¸çå¼ä¸º\r\n     * - { cls: 'cssclassname, ', style: { color: 'red', border: 1px solid } }\r\n     * - (groupFooterRowData): { cls: 'cssclassname, ', style: { color: 'red', border: 1px solid } } => {}\r\n     */\r\n    @Input() groupFooterStyler: any;\r\n    /** åè®¡æ°æ®æ¾ç¤ºä½ç½®\r\n     * inGroupRow: ä¸åç»å¨åä¸è¡ï¼åå«ç¸å³åè®¡å­æ®µå¯¹é½\r\n     * groupFooterRow: å¨åç»æ°æ®æåå¢å ä¸è¡\r\n     * é»è®¤ä¸º groupFooterRow\r\n     */\r\n    @Input() groupSummaryPosition: 'inGroupRow' | 'groupFooterRow' = 'groupFooterRow';\r\n    /** åç»ä¿¡æ¯åå¹¶åæ°\r\n     * é»è®¤ä¸º 1\r\n     */\r\n    @Input() groupCellColSpan = 1;\r\n\r\n    /** åç»å­æ®µåç§°, å¤å­æ®µåç»ä»¥è±æéå·åé */\r\n    private _groupField = '';\r\n    groupFields$ = new BehaviorSubject([]);\r\n    get groupField() {\r\n        return this._groupField;\r\n    }\r\n    @Input() set groupField(val) {\r\n        this._groupField = val || '';\r\n\r\n        if (Array.isArray(this._groupField)) {\r\n            this._groupField = this._groupField.join(',');\r\n        }\r\n\r\n        if (this._groupField) {\r\n            this.groupFields$.next(this._groupField.split(','));\r\n        } else {\r\n            this.groupFields$.next([]);\r\n        }\r\n\r\n        this.dfs.updateProperty('groupField', this._groupField);\r\n    }\r\n    /** æ¾ç¤ºåç»å */\r\n    @Input() showGroupColumn = true;\r\n    /** åç»æ ¼å¼å */\r\n    @Input() groupFormatter: (groupRow: any) => any;\r\n    /** åç»è¡æ ·å¼ */\r\n    @Input() groupStyler: (groupRow: any) => { cls?: string, style?: any };\r\n\r\n    /** æ¾ç¤ºåç»åé¢æ¿ãé»è®¤ä¸º false */\r\n    private _showRowGroupPanel = false;\r\n    @Input() set showRowGroupPanel(val) {\r\n        this._showRowGroupPanel = val;\r\n    }\r\n    get showRowGroupPanel() {\r\n        return this.groupRows && this._showRowGroupPanel;\r\n    }\r\n\r\n    /** åå»è¡¨å¤´éåºåå®¹å®½åº¦ */\r\n    @Input() AutoColumnWidthUseDblclick = true;\r\n    /** è¡é©éåéä¸­ç¦ç¨è¡¨è¾¾å¼ */\r\n    @Input() disableRow: (row, index?: any) => boolean;\r\n    /** ä½¿ç¨åé¨è¿æ»¤å¨; é»è®¤ä¸º false */\r\n    @Input() useDefaultFilter = false;\r\n    /** è¿æ»¤å¾æ ä¸æåºå¾æ åå¹¶ï¼æ­¤å±æ§ä¸ enableFilterRow äºæ¥ */\r\n    @Input() enableSmartFilter = false;\r\n    /** æ¾ç¤ºè¿æ»¤è¡ */\r\n    @Input() enableFilterRow = false;\r\n    /** æå¡å¨ç«¯è¿æ»¤ */\r\n    @Input() remoteFilter = false;\r\n    /** å¯ç¨è¿æ»¤æ¡ä»¶æ¾ç¤ºæ¡ */\r\n    @Input() showFilterBar = false;\r\n    /** è¿æ»¤æ¡ä»¶æ±æ»æ¡é«åº¦ï¼é»è®¤ 32px  */\r\n    @Input() filterBarHeight = 32;\r\n    @Input() filterRowHeight = 40;\r\n    @Input() conditions: any = {};\r\n\r\n    @Input() selectValue = null;\r\n    @Input() checkValues = [];\r\n    @Input() selectValues = [];\r\n\r\n    /** åå¹¶ååæ ¼ï¼åæ¯æçºµååå¹¶ */\r\n    @Input() mergeCell = false;\r\n    @Input() mergeFields = [];\r\n    /** åå¹¶ååæ ¼æ°æ®å¯ç¨å®¢æ·ç«¯æåº */\r\n    @Input() enableClientSortForMergeCell = false;\r\n    /** ä½¿ç¨é«çº§æ§å¶é¢æ¿(åè®¾ç½®) */\r\n    @Input() useControlPanel = false;\r\n    /** å¯ç¨ç®æ´æ§å¶é¢æ¿æ¨¡å¼ãé»è®¤ä¸º false */\r\n    @Input() enableSimpleMode = false;\r\n    /** ç¹å»åè®¾ç½®å¾æ ï¼é»è®¤æå¼çæ§å¶é¢æ¿ */\r\n    @Input() controlPanelMode: 'advanced' | 'simple' = 'advanced';\r\n    /** å¯ç¨åè®¾ç½®æ¹æ¡ */\r\n    @Input() enableScheme = false;\r\n    /** ç³»ç»é¢å¶æ¹æ¡åç§° */\r\n    @Input() defaultSchemeName = 'ç³»ç»é¢å¶';\r\n    /** å¤è¡¨å¤´å¯ç¨åè®¾ç½®; é»è®¤ false */\r\n    @Input() enableSetMultiHeaders = false;\r\n    /** åè®¸è¿è¡æ¶åè®¾ç½®ä¸­å¯è®¾ç½®çæå¤§è¡¨å¤´æ°ï¼åå«æ°æ®åï¼ï¼é»è®¤ä¸º 3å± */\r\n    @Input() maxMultiHeaders = 3;\r\n    /** åè®¾ç½®æ¹æ¡åååï¼å¼¹åºæ¹æ¡åæ´æç¤ºï¼é»è®¤ä¸ºfalse,ä¿®æ¹ä¿å­å°å½åæ¹æ¡ä¸­ */\r\n    @Input() showConfirmWhenSchemeChanged = false;\r\n\r\n    /** é»æ­¢click äºä»¶åæ³¡ */\r\n    @Input() stopPropagation = true;\r\n    /**\r\n     * (202105 å¼ç¨)\r\n     * ç¹å»ååæ ¼è¿è¡ç¼è¾ç¶ææ¶ï¼å³é­å¶ä»Gridçç¼è¾å¨ãé»è®¤ falseï¼\r\n     * å¤ä¸ªåè¡¨å­æ¶ï¼ä»æä¸ä¸ªåè¡¨ä¸­æç¼è¾ç¶æï¼å¶ä»åè¡¨ç»æç¼è¾\r\n     */\r\n    @Input() closeOtherGridEditor = false;\r\n    /** å½æ°æ®æºä¸ºç©ºæ¶ï¼æ¸ç©ºå·²éè®°å½, é»è®¤ true */\r\n    @Input() clearSelectionsWhenDataIsEmpty = true;\r\n    /** å¯ç¨å³é®èåï¼é»è®¤ä¸º false */\r\n    @Input() enableContextMenu = false;\r\n    /** å³é®èåæ°æ® */\r\n    @Input() contextMenus: ContextMenuItem[] = null;\r\n\r\n    @Input() beforeShowContextMenus: (e: any) => boolean;\r\n\r\n    @Output() selectValueChange = new EventEmitter();\r\n    @Output() checkValuesChange = new EventEmitter();\r\n    @Output() selectValuesChange = new EventEmitter();\r\n\r\n    @Input() beforeEdit: (param: RowEditParam) => Observable<boolean>;\r\n    @Output() beginEdit = new EventEmitter<RowEditParam>();\r\n    @Input() afterEdit: (rowIndex: number, rowData: any, column?: DataColumn, editor?: any) => Observable<boolean>;\r\n    @Output() endEdit = new EventEmitter<{ rowIndex: number, rowData: any, column?: DataColumn, value?: any }>();\r\n    @Output() cancelEdited = new EventEmitter<string>();\r\n\r\n    @Output() scrollY = new EventEmitter();\r\n\r\n    @Output() pageSizeChanged = new EventEmitter();\r\n    @Output() pageChanged = new EventEmitter();\r\n\r\n    @Output() loadSuccess = new EventEmitter();\r\n    @Output() emptyData  = new EventEmitter();\r\n\r\n    @Output() filterChanged = new EventEmitter();\r\n\r\n    @Input() beforeSelect: (params: BeforEventParam) => Observable<boolean>;\r\n    @Input() beforeUnselect: (params: BeforEventParam) => Observable<boolean>;\r\n    @Input() beforeCheck: (params: BeforEventParam) => Observable<boolean>;\r\n    @Input() beforeUncheck: (params: BeforEventParam) => Observable<boolean>;\r\n    @Input() beforeSortColumn: (field: string, order: string, instance: DatagridComponent) => Observable<boolean>;\r\n\r\n    @Input() beforeLoad: (params: {data: any, instance: DatagridComponent}) => Observable<{ data: any }>\r\n\r\n    /** å¯ç¨éä¸­ååæ ¼é«äº®æ¾ç¤º */\r\n    @Input() enableHighlightCell = false;\r\n    /**  éä¸­çæ°æ®å§ç»ä»æ°æ®æºä¸­è·å. é»è®¤ä¸º false */\r\n    @Input() checkedRowsDataFromSource = false;\r\n    /** å½åååæ ¼ä¸ºåªè¯»æ¶ï¼ä½¿ç¨tab é®è·³å°ä¸ä¸ªååæ ¼æ¶ï¼æ¯å¦åè®¸è¿å¥ç¼è¾ç¶æï¼é»è®¤ä¸º false;\r\n     * é»è®¤æåµä¸ï¼å½åååæ ¼åªè¯»ï¼æTABè·³å°ä¸ä¸ªCELL æ¶ï¼éä¸­CELL ï¼åè½¦è¿å¥ç¼è¾ã\r\n     * å¼å¯åï¼ä¸ä¸ªååæ ¼èªå¨è¿å¥ç¼è¾ç¶æã\r\n     */\r\n    @Input() editcellWhenTabKeydwon = false;\r\n\r\n    /** ååæ ¼ç¹å»åäºä»¶ */\r\n    @Output() beforeClickCell = new EventEmitter<RowEditParam>();\r\n\r\n    @Output() dblclickRow = new EventEmitter();\r\n    @Output() selectChanged = new EventEmitter<SelectedRow>();\r\n    @Output() unSelect = new EventEmitter<SelectedRow>();\r\n    @Output() selectAll = new EventEmitter<SelectedRow[]>();\r\n    @Output() unSelectAll = new EventEmitter();\r\n    /** å¼æ­¥è¯·æ±èæå è½½ */\r\n    @Output() scrollYLoad = new EventEmitter<{ pager: number, pageSize: number }>();\r\n\r\n    @Output() checked = new EventEmitter<SelectedRow>();\r\n    @Output() unChecked = new EventEmitter<SelectedRow>();\r\n    @Output() checkAll = new EventEmitter<SelectedRow[]>();\r\n    @Output() unCheckAll = new EventEmitter<SelectedRow[]>();\r\n    @Output() checkedChange = new EventEmitter<SelectedRow[]>();\r\n\r\n    @Output() columnSorted = new EventEmitter<any>();\r\n\r\n    @Output() rowClick = new EventEmitter();\r\n    @Output() rowAppended = new EventEmitter();\r\n    @Output() rowDeleted = new EventEmitter();\r\n    @Output() rowUpdated = new EventEmitter();\r\n\r\n    @Output() dataChange = new EventEmitter();\r\n\r\n    /** æåä¸è¡çæåååæ ¼åè½¦å¤çäºä»¶ */\r\n    @Output() lastCellEnterHandler = new EventEmitter();\r\n\r\n    /** åç»å­æ®µååå */\r\n    @Output() groupFieldChange = new EventEmitter();\r\n    /** æå¨åæ¹ååæ¾ç¤ºä½ç½®åè§¦å */\r\n    @Output() columnMoved = new EventEmitter();\r\n    /** ååæ ¼ç¹å»äºä»¶ */\r\n    @Output() cellClick = new EventEmitter();\r\n\r\n    @Output() resized = new EventEmitter();\r\n\r\n    @ContentChildren(DatagridColumnDirective) dgColumns?: QueryList<DatagridColumnDirective>;\r\n    @ViewChild('dgPager') dgPager: any;\r\n    @ViewChild('resizeProxy') resizeProxy: ElementRef;\r\n    @ViewChild('resizeProxyBg') resizeProxyBg: ElementRef;\r\n    @ViewChild('datagridContainer') dgContainer: ElementRef;\r\n    @ViewChild('longTextArea') longTextArea: ElementRef;\r\n    @ViewChild('smartfiltertoolbar') smartFilterToolbar: SmartFilterToolbarComponent;\r\n    colGroup: ColumnGroup;\r\n\r\n    private _loading = false;\r\n    get loading() {\r\n        return this._loading;\r\n    }\r\n    set loading(val: boolean) {\r\n        this._loading = val;\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    get selections(): SelectedRow[] {\r\n        return this.dfs.getSelections();\r\n    }\r\n\r\n    get checkeds() {\r\n        return this.checkedRows;\r\n    }\r\n\r\n    get checkedRows() {\r\n        const chkeds = this.dfs.getCheckeds();\r\n        if (this.enableMorePageSelect) {\r\n            if (chkeds && chkeds.length) {\r\n                if (!this.checkedRowsDataFromSource) {\r\n                    return [...chkeds];\r\n                }\r\n                // ä»æ°æ®æºä¸­è·åææ°æ°æ®\r\n                return chkeds.map(n => {\r\n                    const d = this.dfs.findRow(n.id);\r\n                    if (d) {\r\n                        n.data = d.data;\r\n                    }\r\n                    return n;\r\n                });\r\n            }\r\n        } else {\r\n            if (this.data && this.data.length) {\r\n                const temp = this.data.map(n => n[this.idField]);\r\n                if (!this.checkedRowsDataFromSource) {\r\n                    return chkeds.filter(n => temp.includes(n.id));\r\n                }\r\n                // ä»æ°æ®æºä¸­è·åææ°æ°æ®\r\n                return chkeds.filter(n => temp.includes(n.id)).map(n => {\r\n                    const d = this.dfs.findRow(n.id);\r\n                    if (d) {\r\n                        n.data = d.data;\r\n                    }\r\n                    return n;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    set checkedRows(rows: any[]) {\r\n        if (rows && rows.length) {\r\n            rows = rows.map(r => {\r\n                if (r.data) {\r\n                    return r;\r\n                }\r\n                return {\r\n                    id: r[this.idField],\r\n                    data: r\r\n                };\r\n            });\r\n        }\r\n\r\n        this.dfs.updateProperty('checkedRows', rows || []);\r\n        this.initSelectOrChecked();\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    private _selectedRow = null;\r\n    get selectedRow(): SelectedRow {\r\n        return this._selectedRow;\r\n    }\r\n    set selectedRow(row) {\r\n        if (row) {\r\n            if (this.selectValue != row.id) {\r\n                this._selectedRow = row;\r\n                this.selectValue = row.id;\r\n                this.selectValueChange.emit(row.id);\r\n                this.selectChanged.emit(row);\r\n            }\r\n        } else {\r\n            this.unSelect.emit(this._selectedRow);\r\n            this.selectValue = null;\r\n            this.selectValueChange.emit('');\r\n            this._selectedRow = null;\r\n        }\r\n        // this.cd.detectChanges();\r\n    }\r\n\r\n    ds = {\r\n        index: 0,\r\n        rows: [],\r\n        top: 0,\r\n        bottom: 0,\r\n        scrolling: false // æ¯å¦ç±æ»å¨æ¡è§¦å\r\n    };\r\n\r\n    pagerOpts: any = {};\r\n    restService: RestService;\r\n    editors: { [key: string]: any } = {};\r\n\r\n    validators: { name: string, value: ValidatorFn }[] = [];\r\n\r\n    currentCell: CellInfo;\r\n    flatColumns: DataColumn[];\r\n    footerWidth = 0;\r\n\r\n    clickDelay = 150;\r\n    private resizeColumnInfo = {\r\n        proxyLineEdge: 0,\r\n        startWidth: 0,\r\n        startX: 0,\r\n        left: 0\r\n    };\r\n\r\n    private ro: ResizeObserver | null = null;\r\n    subscriptions: Subscription[] = [];\r\n    realHeaderHeight = 0;\r\n    isSingleClick: boolean;\r\n\r\n    docuemntCellClickEvents: any;\r\n    documentCellClickHandler: any;\r\n    documentCellKeydownEvents: any;\r\n    documentCellKeydownHandler: any;\r\n\r\n    // å¼¹çªä¸­ä½¿ç¨æ¶ï¼çªå£ç¹å»äºä»¶å¤ç\r\n    private modalClickEvent = null;\r\n\r\n    // è¡éä¸­é®çäºä»¶\r\n    documentRowKeydownHandler: any;\r\n    // è¡ç¼è¾å¿«æ·é®\r\n    documentRowEditKeydownHanlder: any;\r\n    // document åå»æ¶ç»æè¡ç¼è¾\r\n    documentClickEndRowEditHandler: any;\r\n\r\n    pending = false;\r\n    public colFormatSer: ColumnFormatService;\r\n    scrollInstance: ScrollbarDirective = null;\r\n    // æ¬å°åæå¡\r\n    localeService: LocaleService;\r\n    // åå¹¶ååè¾å©ä¿¡æ¯\r\n    mergeCellInfo = {};\r\n    ignoreTarget = ['INPUT', 'SELECT', 'TEXTAREA'];\r\n    clientFilterService: DatagridFilterService = null;\r\n\r\n    settingService: any; // DatagridSettingsService;\r\n\r\n    /**\r\n     * æ§å¶åå­æ®µåç§°: _datagrid-setting-control_ \r\n     **/\r\n    ControlPanelFeild = '_datagrid-setting-control_';\r\n\r\n    private _isResized = false;\r\n\r\n    gridSize = { width: this.width + 'px', height: this.height + 'px' };\r\n    // å®¢æ·ç«¯è¿æ»¤æ¶ï¼æ¯å¦è¿æ»¤è¡åçåå\r\n    clientFilterChanged = false;\r\n    // style's ID\r\n    styleSheetId = '';\r\n\r\n    groupRowPanelPlaceholder = '';\r\n    commonUtils: CommonUtils = null;\r\n    smartFilterService: DatagridSmartFilterService = null;\r\n    smartFilterResult = { controlData: [], conditions: [] };\r\n    smartFilterBarHeight = 32;\r\n    idService: IdService;\r\n    private _active_datagrid_cls = 'datagrid-active';\r\n    private _blured_datagrid_cls = 'datagrid-blurred';\r\n\r\n    // èªå®ä¹gridæ ·å¼ï¼åè¡¨åå§åï¼ä¼æ·»å ä¸ä¸ªèªå®ä¹åç§°çæ ·å¼\r\n    _custom_datagrid_cls = 'datagrid';\r\n    // å¤éä»¿ windows éæ©æ¨¡å¼\r\n    sms: SelectionModeService;\r\n    // ç¦ç¹è¡ç´¢å¼ï¼æ¯æ¬¡è¡ç¹å»åæ´æ°\r\n    focusRowIndex = -1;\r\n\r\n    private documentBodyMouseDown = null;\r\n    private farrisInstances: FarrisComponentInstanceService = null;\r\n    private currentPagerData = [];\r\n    private resizeTimer = null;\r\n    private debugSer: DebugService = null;\r\n    private DATA_CHANGED_TIMER = null;\r\n    /** å½bodyclick æ¶ï¼æ¯å¦éåºè¡ç¼è¾ç¶æï¼é»è®¤ä¸º false */\r\n    @Input() exitRowEditingWhenBodyClick = false;\r\n\r\n    formValidations = null;\r\n\r\n    isFF = false;\r\n\r\n    private _footerRowHeight = this.footerHeight;\r\n\r\n    constructor(\r\n        public cd: ChangeDetectorRef,\r\n        public el: ElementRef,\r\n        public inject: Injector, public zone: NgZone,\r\n        public dfs: DatagridFacadeService,\r\n        public dgs: DatagridService,\r\n        private app: ApplicationRef,\r\n        protected domSanitizer: DomSanitizer,\r\n        public render2: Renderer2) {\r\n\r\n        this.styleSheetId = 'DATAGRID-' + Utils.uuid();\r\n\r\n        this.localeService = this.inject.get(LocaleService);\r\n        this.restService = this.inject.get<RestService>(DATAGRID_REST_SERVICEE, null);\r\n        this.colFormatSer = this.inject.get(ColumnFormatService);\r\n        this.commonUtils = this.inject.get(CommonUtils, null);\r\n        this.clientFilterService = new DatagridFilterService(dfs, this.localeService, inject);\r\n        this.farrisInstances = this.inject.get(FarrisComponentInstanceService, null);\r\n        this.debugSer = this.inject.get(DebugService, null);\r\n        let perfixStr = '';\r\n        if (WEBAPI_PREFIX_TOKEN) {\r\n            perfixStr = this.inject.get(WEBAPI_PREFIX_TOKEN, '');\r\n        }\r\n        if (!this.debugSer) {\r\n            this.debugSer = new DebugService();\r\n        }\r\n\r\n        if (this.debugSer.useDebugMode) {\r\n            this.debugSer.useDebugMode();\r\n        }\r\n\r\n        this.smartFilterService = this.inject.get(DatagridSmartFilterService, null);\r\n        this.idService = this.inject.get(IdService, null);\r\n        this.dfs.localId = this.localeService.localeId;\r\n\r\n        this.settingService = this.inject.get(GRID_SETTINGS_SERVICE, null);\r\n        if (this.settingService) {\r\n            this.settingService.setUriPerfixStr(perfixStr);\r\n            const settingsHttp = this.inject.get(GRID_SETTINGS_HTTP, null);\r\n            this.settingService.httpRestService = settingsHttp;\r\n        }\r\n\r\n        // ilink 367849\r\n        const dataSubscription = this.dfs.data$.pipe(\r\n            switchMap((ds: any) => {\r\n                if (this.beforeLoad) {\r\n                    return this.beforeLoad({data: ds.rows, instance: this}).pipe(\r\n                        map((e: {data: any}) => {\r\n                            if (e && e.data) {\r\n                                ds.rows = e.data;\r\n                            }\r\n                            return ds;\r\n                        })\r\n                    );\r\n                }\r\n                return of(ds);\r\n            })\r\n        ).subscribe((dataSource: any) => {\r\n            this.cleanDom();\r\n            const ds = { ...dataSource };\r\n\r\n            if (this.conditions && Object.keys(this.conditions).length && !this.remoteFilter && this.useDefaultFilter) {\r\n                ds.rows = this.clientFilterService.executeFilter(ds.rows, this.conditions);\r\n            }\r\n\r\n            this.ds = ds;\r\n\r\n            if (this.ds.rows && this.ds.rows.length) {\r\n                this.data = this.dfs.getData();\r\n\r\n                if (this.mergeCell && this.mergeFields && this.mergeFields.length) {\r\n                    this.mergeCellInfo = this.dgs.getMergeCellInfo3(this.ds.rows, [...this.mergeFields]);\r\n                }\r\n\r\n                this.setPagerTotal();\r\n                this.loadSuccess.emit(this.ds.rows);\r\n            } else {\r\n                this.data = [];\r\n                this.currentCell = null;\r\n                if (this.clearSelectionsWhenDataIsEmpty) {\r\n                    this.clearAll();\r\n                }\r\n                this.emptyData.emit();\r\n            }\r\n\r\n            if (!this.ds.scrolling) {\r\n                this.updateFooterData();\r\n            }\r\n            // æ§è½ä¼å\r\n            this.cd.detectChanges();\r\n\r\n            \r\n            if (this.DATA_CHANGED_TIMER) {\r\n                clearTimeout(this.DATA_CHANGED_TIMER);\r\n            }\r\n\r\n            this.DATA_CHANGED_TIMER = setTimeout(() => {\r\n                if (this.autoHeight && this.maxHeight) {\r\n                    if (this.maxHeight < 55) {\r\n                        this.maxHeight = 60;\r\n                    }\r\n\r\n                    const gridContainerEl = this.el.nativeElement.parentElement;\r\n                    if (gridContainerEl.nodeName !== 'DIV') {\r\n                        this.writeConsole('Datagridç¶å®¹å¨å¿é¡»ä¸ºDIVã');\r\n                    } else {\r\n                        // gridContainerEl.style.height = 'unset';\r\n                        // gridContainerEl.style.maxHeight = this.maxHeight + 'px';\r\n                        // gridContainerEl.style.minHeight = `${this.emptyDataHeight + this.realHeaderHeight + \r\n                        //     (this.showRowGroupPanel ? this.rowGroupPanelHeight: 0) +\r\n                        //     (this.pagination ? this.pagerHeight : 0)}px`;\r\n                    }\r\n                }\r\n\r\n                if (this.useBlankWhenDataIsEmpty) {\r\n                    this.calculateGridSize(this.fit);\r\n                }\r\n\r\n                this.dgs.dataloaded.emit();\r\n                // TFS 577078\r\n                this.updateAllCheckboxStatus();\r\n\r\n                // if (!this.nowrap && this.data && this.data.length) {\r\n                //     this.setRowHeight(false);\r\n                //     this.dgs.cellContentWrapChanged.emit();\r\n                // }\r\n            }, 100);\r\n        });\r\n        this.subscriptions.push(dataSubscription);\r\n\r\n        const columnGroupSubscription = this.dfs.columnGroup$.pipe(\r\n            debounceTime(60)\r\n        ).subscribe(cg => {\r\n            if (cg) {\r\n                this.colGroup = cg;\r\n                this.footerWidth = cg.totalWidth;\r\n\r\n                this.cd.detectChanges();\r\n            }\r\n        });\r\n        this.subscriptions.push(columnGroupSubscription);\r\n\r\n        this.subscriptions.push(\r\n            this.dfs.gridSize$.subscribe((cg: any) => {\r\n                if (cg && cg.columnsGroup) {\r\n                    this.colGroup = cg.columnsGroup;\r\n                    if (!this.nowrap) {\r\n                        this.setFooterHeight();\r\n                    }\r\n                    this.cd.detectChanges();\r\n                }\r\n            })\r\n        );\r\n\r\n        this.initEditorAndValidator();\r\n\r\n        const currentCellSubscription = this.dfs.currentCell$.subscribe((cell: any) => {\r\n            this.currentCell = cell;\r\n            if (cell && cell.cellRef) {\r\n                cell.cellRef.isEditing = cell.isEditing;\r\n            }\r\n            this.unbindMoveSelectRowEvent();\r\n            this.bindDocumentEditListener();\r\n        });\r\n\r\n\r\n        this.dfs.selectRow$.subscribe((sr: SelectedRow) => {\r\n            if (!this.currentCell) {\r\n                this.bindDocumentMoveSelectRowEvent();\r\n            }\r\n            this.selectedRow = sr;\r\n        });\r\n\r\n        this.subscriptions.push(currentCellSubscription);\r\n\r\n        DatagridColumnsHelper.gridInstance = this;\r\n\r\n        const filterChangedSubscription = this.dgs.onFilterChanged.pipe(\r\n            debounceTime(200)\r\n        ).subscribe((conditions: any) => {\r\n            // æ´æ°ç¼å­è¿æ»¤æ¡ä»¶\r\n            this.conditions = conditions;\r\n            this.clientFilterChanged = true;\r\n            this.filterData(this.conditions);\r\n        });\r\n        this.subscriptions.push(filterChangedSubscription);\r\n\r\n        // this.initPaginationOptions();\r\n\r\n        const footerDataSubscription = this.dgs.refreshFooterData.subscribe(() => {\r\n            this.updateFooterData();\r\n            // this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(footerDataSubscription);\r\n        this.dgs.commonUtils = this.commonUtils;\r\n\r\n\r\n        this.dgs.focusRowChanged.subscribe((e: any) => {\r\n            if (e) {\r\n                this.focusRowIndex = e.rowIndex;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    setCurrentPagerData($data) {\r\n        this.currentPagerData = $data;\r\n    }\r\n\r\n    writeConsole(msg, type: 'info'|'log'|'warn'|'error' = 'warn') {\r\n        if (this.debugSer) {\r\n            if (this.debugSer[type]) {\r\n                this.debugSer[type](msg);\r\n            } else {\r\n                console[type](msg)\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateFooterData() {\r\n        if ((this.showFooter || this.pagerContentTemplate ) && this.footerDataFrom === 'client' ) {\r\n            const fdata = this.dfs.getFooterData(this.data);\r\n            if (JSON.stringify(this._footerData['value']) !== JSON.stringify(fdata)) {\r\n                this.footerData = of(fdata);\r\n            }\r\n        }\r\n    }\r\n\r\n    //#region Ng Event\r\n\r\n    ngDoCheck() {\r\n        // if (!this.checkValues) {\r\n        //     this.checkValues = [];\r\n        // }\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.sms = new SelectionModeService(this);\r\n\r\n        this.checkFilterStyle();\r\n\r\n        if (this.useThemes) {\r\n            this._checkSize();\r\n        }\r\n        this.checkOptions();\r\n        this.groupRowPanelPlaceholder = this.localeService.getValue('datagrid.groupRow.tips');\r\n\r\n        if (this.smartFilterService) {\r\n\r\n            if (this.enableSmartFilter && this.showFilterBar) {\r\n                if (this.smartFilterResult && this.smartFilterResult.controlData && this.smartFilterResult.controlData.length) {\r\n                    this.filterBarHeight = this.smartFilterBarHeight;\r\n                } else {\r\n                    this.filterBarHeight = 0;\r\n                }\r\n            }\r\n\r\n            this.smartFilterService.filterChanged.subscribe((e: any) => {\r\n\r\n                if (!this.smartFilterResult && !e) {\r\n                    return;\r\n                }\r\n\r\n                if (JSON.stringify(this.smartFilterResult) !== JSON.stringify(e)) {\r\n                    this.smartFilterResult = e;\r\n                    this.clientFilterChanged = true;\r\n                    this.filterData(e.conditions);\r\n                    if (!this.smartFilterResult || (this.smartFilterResult.controlData && !this.smartFilterResult.controlData.length)) {\r\n                        this.onFilterBarResize(0);\r\n                    } else {\r\n                        if (!this.filterBarHeight) {\r\n                            this.onFilterBarResize(this.smartFilterBarHeight);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        this.isFF = this.commonUtils.getBrowserType().ff;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n\r\n        // åå»ºèªå®ä¹style å®¹å¨\r\n        // \r\n\r\n        this.setHeaderHeight();\r\n        this.setPagerHeight();\r\n        // this.setRowHeight();\r\n        this.initBeforeEvents();\r\n        if (this.fit) {\r\n            this.setGridNewSizeWhenFit();\r\n        }\r\n\r\n        this.initState();\r\n        if (this.el && this.farrisInstances) {\r\n            this.farrisInstances.add(this.el.nativeElement, this);\r\n        }\r\n        if (!this.data || !this.data.length) {\r\n            this.fetchData(1, this.pageSize).subscribe(res => {\r\n                if (!res) {\r\n                    return;\r\n                }\r\n                this.total = res.total;\r\n\r\n                if (res.footer) {\r\n                    this.footerData = res.footer;\r\n                }\r\n\r\n                this.loadData(res.items);\r\n            });\r\n        }\r\n\r\n        this.zone.runOutsideAngular(() => {\r\n            this.render2.addClass(this.dgContainer.nativeElement, this._custom_datagrid_cls);\r\n            this.ro = new ResizeObserver((e) => {\r\n                const target = e[0].target as any;\r\n                if (target.style.display === 'none') {\r\n                    return;\r\n                }\r\n\r\n                const _w = e[0].contentRect.width;\r\n                if (!_w) {\r\n                    return;\r\n                }\r\n                const _h = e[0].contentRect.height;\r\n                const _floowW = Math.floor(_w);\r\n                const _floorH = Math.floor(_h);\r\n                const _roundW = Math.round(_w);\r\n                const _roundH = Math.round(_h);\r\n                const _ceilW = Math.ceil(_w);\r\n                const _ceilH = Math.ceil(_h);\r\n\r\n                if ((this.width === _floowW || this.width === _roundW || this.width === _ceilW) && (this.height === _floorH || this.height === _roundH || this.height === _ceilH)) {\r\n                    this.dgs.restoreScrollbarPosition();\r\n                    return;\r\n                }\r\n\r\n                if (this.resizeTimer) {\r\n                    clearTimeout(this.resizeTimer);\r\n                }\r\n                this.resizeTimer = setTimeout(() => {\r\n                    this.calculateGridSize(this.fit);\r\n                    this.resized.emit();\r\n                }, 100);\r\n            });\r\n\r\n            this.ro.observe(this.el.nativeElement.parentElement);\r\n\r\n\r\n            document.body.removeEventListener('mousedown', this.documentBodyMouseDown, true);\r\n            document.body.addEventListener('mousedown', this.documentBodyMouseDown = (e) => {\r\n                if (!this.isEditing()) {\r\n                    return;\r\n                }\r\n                const target = e.target as any;\r\n                if ((target.closest('td.f-datagrid-cell') && !target.closest('.f-datagrid-footer-row'))  ||\r\n                    target.closest('.date-overlay-container') ||\r\n                    target.closest('.time-picker-overlay') ||\r\n                    target.closest('.language-textbox-panel') ||\r\n                    target.closest('.farris-notify') ||\r\n                    target.closest('.comboPanel') \r\n                    // || target.closest('.f-multi-select-date')  //æ¥æå¤é\r\n                    ) {\r\n\r\n                    return;\r\n                }\r\n                this.onDocumentMouseDown(e);\r\n            }, true);\r\n\r\n        });\r\n\r\n        if (this.showFooter) {\r\n            if (this.footerTemplate) {\r\n                const footerDom = this.el.nativeElement.querySelector('.f-datagrid-footer');\r\n                if (footerDom) {\r\n                    this.footerHeight = this.el.nativeElement.querySelector('.f-datagrid-footer').offsetHeight;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.fit) {\r\n            if (this.el.nativeElement.parentElement) {\r\n                this.el.nativeElement.parentElement.style.position = 'relative';\r\n            }\r\n            this.calculateGridSize(this.fit);\r\n        }\r\n\r\n\r\n        // æ£æ¥æ¯å¦å¯ç¨ä»¿windowsèµæºç®¡çå¨ä¸­çå¤éæ¨¡å¼\r\n        if (this.selectionMode && this.selectionMode === 'default' && this.multiSelect) {\r\n            this.sms.enableWindowsSelectionMode();\r\n        }\r\n\r\n        this.setCellStyle();\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        if (this.dgColumns && this.dgColumns.length) {\r\n            this.columns = this.dgColumns.map(dgc => {\r\n                return { ...dgc };\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.data && !changes.data.isFirstChange()) {\r\n            this.dfs.loadData(changes.data.currentValue);\r\n            this.dgs.dataSourceChanged();\r\n        }\r\n\r\n        if (changes.showAllCheckbox !== undefined && !changes.showAllCheckbox.isFirstChange()) {\r\n            if (changes.showAllCheckbox.currentValue != changes.showAllCheckbox.previousValue) {\r\n                this.columnsChanged(false);\r\n            }\r\n        }\r\n\r\n        if (changes.showCheckbox !== undefined && !changes.showCheckbox.isFirstChange()) {\r\n            this.dfs.showCheckbox(changes.showCheckbox.currentValue);\r\n        }\r\n\r\n        if (changes.showLineNumber !== undefined && !changes.showLineNumber.isFirstChange()) {\r\n            this.dfs.showLineNumber(changes.showLineNumber.currentValue);\r\n        }\r\n\r\n        if (changes.multiSelect !== undefined && !changes.multiSelect.isFirstChange()) {\r\n            this.dfs.setMultiSelect(changes.multiSelect.currentValue);\r\n            this.columnsChanged();\r\n        }\r\n\r\n        if (changes.checkOnSelect !== undefined && !changes.checkOnSelect.isFirstChange()) {\r\n            this.dfs.setCheckOnSelect(changes.checkOnSelect.currentValue);\r\n        }\r\n\r\n        if (changes.selectOnCheck !== undefined && !changes.selectOnCheck.isFirstChange()) {\r\n            this.dfs.setSelectOnCheck(changes.selectOnCheck.currentValue);\r\n        }\r\n\r\n        if (changes.onlySelectSelf !== undefined && !changes.onlySelectSelf.isFirstChange()) {\r\n            this.dfs.updateProperty('onlySelectSelf', changes.onlySelectSelf.currentValue);\r\n        }\r\n\r\n        if (changes.keepSelect !== undefined && !changes.keepSelect.isFirstChange()) {\r\n            this.dfs.updateProperty('keepSelect', changes.keepSelect.currentValue);\r\n        }\r\n\r\n        if (changes.headerWrap !== undefined && !changes.headerWrap.isFirstChange()) {\r\n            setTimeout(() => {\r\n                this.setHeaderHeight();\r\n                this.cd.detectChanges();\r\n                this.dfs.columnResizeEnd();\r\n            });\r\n        }\r\n\r\n        if (changes.nowrap !== undefined && !changes.nowrap.isFirstChange()) {\r\n            this.checkNowrap();\r\n            this.setRowHeight(false);\r\n            this.dgs.cellContentWrapChanged.emit();\r\n            this.dfs.updateProperty('nowrap', changes.nowrap.currentValue);\r\n        }\r\n\r\n        if (changes.multiSort !== undefined && !changes.multiSort.isFirstChange()) {\r\n            this.dfs.updateProperty('multiSort', changes.multiSort.currentValue);\r\n        }\r\n\r\n        if (changes.editable !== undefined && !changes.editable.isFirstChange()) {\r\n            this.dfs.updateProperty('editable', changes.editable.currentValue);\r\n            if (!changes.editable.currentValue) {\r\n                this.endCellEdit();\r\n            }\r\n            this.isSingleClick = null;\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        if (changes.showHeader !== undefined && !changes.showHeader.isFirstChange()) {\r\n            this.dfs.updateProperty('showHeader', changes.showHeader.currentValue);\r\n            this.headerHeightChange();\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        if (changes.showFilterBar !== undefined && !changes.showFilterBar.isFirstChange()) {\r\n            this.dfs.updateProperty('showFilterBar', changes.showFilterBar.currentValue);\r\n            this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n            // this.dgs.smartFilterBarExpand.emit();\r\n            let fh = 0;\r\n            if (this.conditions && this.conditions.length) {\r\n                fh = 32;\r\n            }\r\n            this.onFilterBarResize(fh);\r\n        }\r\n\r\n\r\n        if (changes.showFooter !== undefined && !changes.showFooter.isFirstChange()) {\r\n            this.dfs.updateProperty('showFooter', changes.showFooter.currentValue);\r\n            // this.cd.detectChanges();\r\n            this.calculateGridSize(this.fit);\r\n        }\r\n\r\n        if (changes.pagerOnServer !== undefined && !changes.pagerOnServer.isFirstChange()) {\r\n            this.dfs.updateProperty('pagerOnServer', changes.pagerOnServer.currentValue);\r\n            this.pagerOpts = Object.assign(this.pagerOpts, {\r\n                remote: this.pagerOnServer\r\n            });\r\n        }\r\n\r\n        if (changes.pageIndex !== undefined && !changes.pageIndex.isFirstChange()) {\r\n            this.dfs.updateProperty('pageIndex', changes.pageIndex.currentValue);\r\n            this.pagerOpts = Object.assign(this.pagerOpts, {\r\n                currentPage: this.pageIndex\r\n            });\r\n        }\r\n\r\n        if (changes.pageSize !== undefined && !changes.pageSize.isFirstChange()) {\r\n            this.dfs.updateProperty('pageSize', changes.pageSize.currentValue);\r\n            this.pagerOpts = Object.assign(this.pagerOpts, {\r\n                itemsPerPage: this.pageSize\r\n            });\r\n        }\r\n\r\n        if (changes.pageList !== undefined && !changes.pageList.isFirstChange()) {\r\n            this.dfs.updateProperty('pageList', changes.pageList.currentValue);\r\n            this.pagerOpts = Object.assign(this.pagerOpts, {\r\n                pageList: this.pageList\r\n            });\r\n        }\r\n\r\n        if (changes.columns !== undefined && !changes.columns.isFirstChange()) {\r\n            this.columnsChanged();\r\n        }\r\n\r\n        if (changes.sizeType !== undefined && !changes.sizeType.isFirstChange()) {\r\n            this._sizeType = changes.sizeType.currentValue;\r\n            this.setRowHeight(true);\r\n            // this.setHeaderHeight();\r\n            this.dfs.updateProperty('rowHeight', this.rowHeight);\r\n            this.setFooterHeight();\r\n            this.refresh();\r\n            this.dgs.onRowHeightChange(this.rowHeight);\r\n        }\r\n        if (changes.rowHeight && !changes.rowHeight.isFirstChange()) {\r\n            this.setRowHeight(false);\r\n        }\r\n\r\n        if (changes.selectValue && !changes.selectValue.isFirstChange()) {\r\n            this.selectRow(this.selectValue, false);\r\n        }\r\n\r\n        if (changes.checkValues && !changes.checkValues.isFirstChange()) {\r\n            const checkIds = this.dfs.differenceBy(changes.checkValues.currentValue || [], changes.checkValues.previousValue || [], (v) => v);\r\n            if (checkIds && checkIds.length) {\r\n                this.checkRows(checkIds, false);\r\n            }\r\n\r\n            const uncheckIds = this.dfs.differenceBy(changes.checkValues.previousValue || [], changes.checkValues.currentValue || [], (v) => v);\r\n            if (uncheckIds && uncheckIds.length) {\r\n                this.unCheckRows(uncheckIds, false);\r\n            }\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    this.checkValues = this.checkeds.map(r => r.id);\r\n                    this.checkValuesChange.emit(this.checkValues);\r\n                    this.checkedChange.emit(this.checkeds);\r\n\r\n                    this.updateAllCheckboxStatus();\r\n                }, 10);\r\n            });\r\n        }\r\n\r\n        if (changes.showGroupColumn && !changes.showGroupColumn.isFirstChange()) {\r\n            this.toggleVisibleColumn(this.groupField.split(','), changes.showGroupColumn.currentValue);\r\n            this.columnsChanged();\r\n        }\r\n\r\n        if (changes.autoFitColumns && !changes.autoFitColumns.isFirstChange()) {\r\n            this.dfs.updateProperty('autoFitColumns', changes.autoFitColumns.currentValue);\r\n        }\r\n\r\n        // if (changes.fitColumns && !changes.fitColumns.isFirstChange()) {\r\n        //     this.fitColumns = changes.fitColumns.currentValue;\r\n        // }\r\n\r\n        if (changes.groupRows && !changes.groupRows.isFirstChange()) {\r\n            this.dfs.updateProperty('groupRows', changes.groupRows.currentValue);\r\n            this.refresh();\r\n        }\r\n\r\n        if (changes.mergeCell && !changes.mergeCell.isFirstChange()) {\r\n            this.refresh();\r\n        }\r\n\r\n        if (changes.mergeFields && !changes.mergeFields.isFirstChange()) {\r\n            this.refresh();\r\n        }\r\n\r\n        if (changes.enableFilterRow && !changes.enableFilterRow.isFirstChange()) {\r\n            this.dfs.updateProperty('enableFilterRow', changes.enableFilterRow.currentValue);\r\n            if (this.showHeader) {\r\n                this.setHeaderHeight();\r\n                this.filterBarHeight = 32;\r\n                this.dgs.toggleFilterRow.emit(this.enableFilterRow);\r\n                this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n\r\n        if (changes.enableSmartFilter && !changes.enableSmartFilter.isFirstChange()) {\r\n            this.dfs.updateProperty('enableSmartFilter', changes.enableSmartFilter.currentValue);\r\n        }\r\n\r\n        if (changes.enableDragColumn && !changes.enableDragColumn.isFirstChange()) {\r\n            this.checkDragColumns();\r\n        }\r\n\r\n        if (changes.showRowGroupPanel && !changes.showRowGroupPanel.isFirstChange()) {\r\n            this.dgs.smartFilterBarExpand.emit();\r\n            this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n        }\r\n\r\n        if (changes.selectionMode && !changes.selectionMode.isFirstChange()) {\r\n            this.sms.toggleMode();\r\n        }\r\n    }\r\n\r\n    private checkFilterStyle() {\r\n        // è¿æ»¤è¡ä¸æºè½è¿æ»¤ åæ¶å¯ç¨æ¶ï¼å°è¿æ»¤è¡ç¦ç¨\r\n        if (this.enableFilterRow && this.enableSmartFilter) {\r\n            this.enableFilterRow = false;\r\n        }\r\n    }\r\n\r\n    private _checkSize() {\r\n        const themesKey = localStorage.getItem('gsp_rtf_themSKey');\r\n        let st: any = 'sm';\r\n        switch (themesKey) {\r\n            case 'default':\r\n                st = 'sm';\r\n                break;\r\n            case 'loose':\r\n                st = 'md';\r\n                break;\r\n        }\r\n\r\n        this.sizeType = st;\r\n    }\r\n\r\n    private checkDragColumns() {\r\n        if (this.isMultiHeader()) {\r\n            this.enableDragColumn = false;\r\n            // this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    private enableSettings() {\r\n        return this.useControlPanel && (!this.isMultiHeader() || (this.isMultiHeader() && this.enableSetMultiHeaders));\r\n    }\r\n\r\n    private checkOptions() {\r\n\r\n        this.gridSize = { width: this.width + 'px', height: this.height + 'px' };\r\n\r\n        if (!this.id) {\r\n            this.id = 'FarrisDataGrid' + Utils.uuid().replace(/-/g, '').substr(0, 10);\r\n            if (this.useControlPanel) {\r\n                this.useControlPanel = false;\r\n                this.writeConsole('å¯ç¨åéç½®å±æ§ï¼æªè®¾ç½®IDï¼æ­¤åè½å°ç¦ç¨ã');\r\n            }\r\n            this._custom_datagrid_cls = this.id;\r\n        } else {\r\n            this.styleSheetId = this.id + '_' + Utils.uuid().replace(/-/g, '').substr(0, 10);\r\n            this._custom_datagrid_cls = this.styleSheetId;\r\n        }\r\n        if (this.settingService && this.useControlPanel) {\r\n            this.settingService.registerGridInstance(this);\r\n        }\r\n\r\n        this.dgs.createStyleElement(this.styleSheetId);\r\n\r\n        if (!this.idField) {\r\n            throw new Error('The Datagrid\\'s idField can\\'t be Null. ');\r\n        }\r\n        this.checkNowrap();\r\n        this.checkSortInfo();\r\n        this.checkMergeCell();\r\n        this.setCheckboxBehavior();\r\n        this.initPaginationOptions();\r\n        if (!this.columns) {\r\n            this.columns = this.fields;\r\n        }\r\n\r\n        this.checkGroupHeaderColumns();\r\n\r\n        // TFS: 356956\r\n        this.checkGroupRowSetting();\r\n        this.checkColumnsType();\r\n\r\n        this.checkDragColumns();\r\n\r\n        const _defaultSetting = () => {\r\n            this._flatColumns();\r\n            this.setRowHeight();\r\n        };\r\n\r\n\r\n        this.dfs.setinitialOptions({\r\n            columns: this.columns,\r\n            groupField: this.groupField,\r\n            sortName: this.sortName,\r\n            sortOrder: this.sortOrder,\r\n            expandGroupRows: this.expandGroupRows\r\n        });\r\n\r\n        if (!this.isMultiHeader()) {\r\n            this.enableSetMultiHeaders = false;\r\n        }\r\n\r\n\r\n        \r\n\r\n        // å è½½ç¨æ·ä¸ªæ§åè®¾ç½® --ã åæ¾ç¤ºä¸åæåº\r\n        if (this.settingService && this.enableSettings()) {\r\n\r\n            const settings$ = this.settingService.getSettings(this.id);\r\n            if (!settings$) {\r\n                _defaultSetting();\r\n                return;\r\n            }\r\n            settings$.subscribe((sets) => {\r\n                if (sets) {\r\n                    if (this.enableScheme && this.settingService['schemeService']) {\r\n                        const schemalist = this.settingService['schemeService'].getStateValue(this.id, 'list');\r\n                        if (schemalist && schemalist.length) {\r\n                            this.userProfileSetting(sets);\r\n                        }\r\n                    } else {\r\n                        this.userProfileSetting(sets);\r\n                    }\r\n                    this.setRowHeight(false);\r\n                }\r\n\r\n                if (this.data && this.data.length) {\r\n                    this.dfs.updateProperty('data', this.data);\r\n                }\r\n\r\n                this.columnsChanged(this.groupRows && (this.data && !!this.data.length));\r\n            }, (err) => {\r\n                _defaultSetting();\r\n                this.writeConsole(err, 'error');\r\n            });\r\n        } else {\r\n            _defaultSetting();\r\n        }\r\n    }\r\n\r\n\r\n    refreshSelectedData() {\r\n        if (this.selectedRow && this.selectedRow.id) {\r\n            if (this.data && this.data.length) {\r\n                const rd = this.data.find(d => d[this.idField] === this.selectedRow.id);\r\n                this.selectedRow.data = rd;\r\n            } else {\r\n                this.selectedRow = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unsubscribes();\r\n\r\n        if (this.ro) {\r\n            if (this.el.nativeElement.parentElement) {\r\n                this.ro.unobserve(this.el.nativeElement.parentElement);\r\n            }\r\n            this.ro.disconnect();\r\n        }\r\n\r\n        if (this.documentRowKeydownHandler) {\r\n            this.documentRowKeydownHandler();\r\n        }\r\n\r\n        this.currentCell = null;\r\n        this.clientFilterService = null;\r\n\r\n        this.cleanDom();\r\n\r\n        // ç§»é¤å¨æçstyle\r\n        this.dgs.removeStyleSheet();\r\n\r\n        if (this.settingService && this.settingService.destroy) {\r\n            this.settingService.destroy(this.id);\r\n        }\r\n\r\n        if (this.sms) {\r\n            this.sms.destroy();\r\n            this.sms = null;\r\n        }\r\n\r\n        document.body.removeEventListener('mousedown', this.documentBodyMouseDown, true);\r\n\r\n        if (this.farrisInstances) {\r\n            this.farrisInstances.destroy(this.el.nativeElement);\r\n        }\r\n        this._selectedRow = null;\r\n        this.editors = {};\r\n        DatagridColumnsHelper.gridInstance = null;\r\n        this.unbindMoveSelectRowEvent();\r\n        this.unbindDocumentEditListener();\r\n    }\r\n\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(event: MouseEvent): void {\r\n        if (this.showSelectedList && this.dgPager) {\r\n            this.dgPager.closeSelectedList();\r\n        }\r\n\r\n        if (this.pending) {\r\n            return;\r\n        }\r\n\r\n        const target = event.target as any;\r\n        if (target.nodeName === 'TEXTAREA' || target.nodeName === 'INPUT') {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n        if (this.currentCell && this.currentCell.editor && this.currentCell.editor._editorClickEvent) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        /*\r\n        this.endCellEdit(event);\r\n        this.dfs.cancelSelectCell();\r\n        */\r\n        if (this.stopPropagation) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private initPaginationOptions() {\r\n        this.pagerOpts = {\r\n            id: this.id ? this.id + '-pager_' + Utils.uuid() : 'farris-datagrid-pager_' + Utils.uuid(),\r\n            itemsPerPage: this.pagination ? this.pageSize : this.total,\r\n            currentPage: this.pageIndex,\r\n            totalItems: this.total,\r\n            pageList: this.pageList,\r\n            remote: this.pagerOnServer\r\n        };\r\n    }\r\n\r\n    private updatePagerOptions() {\r\n        this.pagerOpts = Object.assign(this.pagerOpts, {\r\n            itemsPerPage: this.pageSize,\r\n            currentPage: this.pageIndex,\r\n            totalItems: this.total\r\n        });\r\n    }\r\n\r\n    private setPagerTotal() {\r\n        const _total = this.data.length;\r\n        if (this.pagination && this.total === 0 && this.virtualized) {\r\n            this.pagerOpts.totalItems = _total;\r\n        } else {\r\n            if (!this.pagination) {\r\n                this.pagerOpts.itemsPerPage = _total;\r\n            }\r\n        }\r\n    }\r\n\r\n    private setFooterHeight(rows?: []) {\r\n        if (this.showFooter && !this.footerTemplate) {\r\n            rows = rows || this._footerData['value'];\r\n\r\n            if (!rows || !rows.length) {\r\n                return;\r\n            }\r\n\r\n            if (this.nowrap) {\r\n                this.dgs.removeCssRule(`${this.customStyleKey()} .f-datagrid-footer .f-datagrid-footer-row`);\r\n                this.renderCustomStyle2({ style: { height: `${this._footerRowHeight}px!important`}}, null, 'f-datagrid-footer .f-datagrid-footer-row');\r\n                const clsName = 'f-datagrid-footer-row .f-datagrid-cell-content,f-datagrid-group-footer .f-datagrid-cell-content,f-datagrid-footer-row .f-datagrid-cell';\r\n                clsName.split(',').forEach(n => {\r\n                    this.dgs.removeCssRule(`${this.customStyleKey()} .${n}`);\r\n                });\r\n                let fh = this._footerRowHeight - 1;\r\n                clsName.split(',').forEach(n => {\r\n                    this.renderCustomStyle2({ style: { height: `${fh}px!important`, \"line-height\": `${fh}px!important`}}, null, n);\r\n                });\r\n\r\n                this.footerHeight = rows.length * this._footerRowHeight;\r\n\r\n            } else {\r\n                if (this['_footer_height_timer_']) {\r\n                    clearTimeout(this['_footer_height_timer_']);\r\n                }\r\n\r\n                this['_footer_height_timer_'] = setTimeout(() => {\r\n                    const topFooter = document.querySelector('.f-datagrid-footer-top');\r\n                    const bottomFooter = document.querySelector('.f-datagrid-footer-bottom');\r\n\r\n\r\n                    let _footHeight = rows.length * this._footerRowHeight;\r\n                    const minFooterRowHeight = `min_footer_row_height_${this._footerRowHeight}`;\r\n                    if (topFooter) {\r\n                        topFooter.querySelectorAll('tr').forEach(tr => {\r\n                            this.render2.addClass(tr, minFooterRowHeight);\r\n                        });\r\n\r\n                        this.render2.setStyle(topFooter, 'height', _footHeight+'px');\r\n                        _footHeight = Math.max(...Array.from(topFooter.querySelectorAll('table')).map(n => n.offsetHeight));\r\n                        this.render2.setStyle(topFooter, 'height', _footHeight + 'px');\r\n                    } else {\r\n                        if (bottomFooter) {\r\n                            bottomFooter.querySelectorAll('tr').forEach(tr => {\r\n                                this.render2.addClass(tr, minFooterRowHeight);\r\n                            });\r\n\r\n                            this.render2.setStyle(bottomFooter, 'height', _footHeight+'px');\r\n                            _footHeight = Math.max(...Array.from(bottomFooter.querySelectorAll('table')).map(n => n.offsetHeight));\r\n                            this.render2.setStyle(bottomFooter, 'height', _footHeight + 'px');\r\n                        }\r\n                    }\r\n                   \r\n                    if (_footHeight !== this.footerHeight) {\r\n                        this.footerHeight = _footHeight;\r\n\r\n                        if (rows.length * this._footerRowHeight > this.footerHeight) {\r\n                            this.footerHeight = rows.length * this._footerRowHeight;\r\n                        }\r\n\r\n                        this.dfs.columnResizeEnd();\r\n                    }\r\n                    \r\n                }, 100);\r\n            }\r\n        }\r\n    }\r\n\r\n    customStyleKey() {\r\n        return `.${this._custom_datagrid_cls}`;\r\n    }\r\n\r\n    private setRowHeight(useSizeType = false) {\r\n        const _rowHeight = SIZE_TYPE[this._sizeType].row;\r\n        const _rh = 29;\r\n        if (useSizeType) {\r\n            this.rowHeight = _rowHeight;\r\n            this.filterRowHeight = SIZE_TYPE[this._sizeType].pager;\r\n        } else {\r\n            this.rowHeight = _rowHeight > this.rowHeight ? _rowHeight : this.rowHeight;\r\n        }\r\n\r\n        const key1 = `${this.customStyleKey()}.f-datagrid-body-row, ${this.customStyleKey()} .f-datagrid-cell`;\r\n        const key2 = `${this.customStyleKey()} .f-datagrid-cell-content`;\r\n\r\n        this.dgs.removeCssRule(key1);\r\n        this.dgs.removeCssRule(key2);\r\n\r\n\r\n        if (this.rowHeight !== _rh && this.nowrap) {\r\n            const rowHeightCSS = [\r\n                `${key1} { height: ${this.rowHeight}px }`,\r\n                `${key2} { height: ${this.rowHeight}px; line-height: ${this.rowHeight}px }`\r\n            ];\r\n\r\n            this.dgs.appendCssRules(rowHeightCSS);\r\n        }\r\n    }\r\n\r\n    initSelectOrChecked() {\r\n        const _data = this.dfs.getCurrentPageData();\r\n        if (!this.enableMorePageSelect && this.multiSelect) {\r\n            // this.clearAll();\r\n            if (this.checkeds && this.checkeds.length) {\r\n                this.checkeds.forEach(r => {\r\n                    if (!_data.find(n => n[this.idField] == r.id)) {\r\n                        this.unCheckRow(r.id, false);\r\n                    }\r\n                });\r\n            } else {\r\n                this.clearCheckeds();\r\n            }\r\n        }\r\n\r\n        if (this.selectValue) {\r\n            if (_data.find(n => n[this.idField] == this.selectValue)) {\r\n                this.selectRow(this.selectValue, false);\r\n                this.refreshSelectedData();\r\n            }\r\n        }\r\n\r\n        if (this.multiSelect) {\r\n            if (this.checkValues && this.checkValues.length) {\r\n                const chkids = this.checkeds.map(r => r.id);\r\n                const diffIds = this.dfs.difference(chkids, this.checkValues);\r\n\r\n                if (diffIds.length) {\r\n                    this.checkRows(diffIds, false);\r\n                } else {\r\n                    this.checkValues = [];\r\n                }\r\n            } else {\r\n                this.checkValues = [];\r\n            }\r\n\r\n            this.checkValues = this.checkeds.map(r => r.id);\r\n\r\n            if (!this._isResized || this.virtualized) {\r\n                this.checkValuesChange.emit(this.checkValues);\r\n                this.checkedChange.emit(this.checkeds);\r\n            }\r\n            this.updateAllCheckboxStatus(_data);\r\n        }\r\n    }\r\n\r\n    private updateAllCheckboxStatus(_data?: any) {\r\n        if (!_data) {\r\n            _data = this.dfs.getCurrentPageData();\r\n        }\r\n\r\n        let checkAllStatus = 0;\r\n        if (this.showAllCheckbox) {\r\n            const allDataIDs = _data.map(r => r[this.idField]);\r\n            const newCheckValues = allDataIDs.filter(n => this.checkValues.includes(n));\r\n\r\n            if (newCheckValues && newCheckValues.length) {\r\n                const isSame = !this.dfs.difference(allDataIDs, this.checkValues).length;\r\n                if (!this.checkValues || !this.checkValues.length) {\r\n                    // æ²¡æéä¸­çæ°æ®\r\n                    checkAllStatus = 0;\r\n\r\n                } else if (isSame) { // this.checkValues.length === this.data.length ||\r\n                    // å¨é¨éä¸­\r\n                    checkAllStatus = 1;\r\n                } else if (!isSame) { // this.checkValues.length !== this.data.length &&\r\n                    // æéä¸­çæ°æ®ï¼ä½ä¸æ¯å¨é¨éä¸­\r\n                    checkAllStatus = 2;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.dgs.changeCheckAllStatus.emit(checkAllStatus);\r\n    }\r\n\r\n    // å½åéå¹¶æ¾ç¤ºå¤éæ¡æ¶ï¼é»è®¤å° checkOnSelect, selectOnCheck è®¾ç½®ä¸º true;\r\n    private setCheckboxBehavior() {\r\n        if (!this.multiSelect && this.showCheckbox) {\r\n            // TFS: 380899\r\n            // this.checkOnSelect = true;\r\n            // this.selectOnCheck = true;\r\n        }\r\n    }\r\n\r\n\r\n    private _cancelColumnFixed(columns) {\r\n        \r\n        if (!columns.filter(n =>(!n.fixed || (n.fixed !== 'left' && n.fixed !== 'right') ) && (n.visible || n.visible === undefined)).length) {\r\n            const colsCount = columns.length;\r\n            const rightCols = columns.filter(n => n.fixed === 'right');\r\n            const leftCols = columns.filter(n => n.fixed === 'left');\r\n            if ( leftCols.length == colsCount || rightCols.length == colsCount) {\r\n                columns.forEach(n => {\r\n                    n.fixed = ''\r\n                });\r\n            } else {\r\n                if (rightCols.length === 1) {\r\n                    leftCols.forEach(t =>{\r\n                        t.fixed = '';\r\n                    });\r\n                } else {\r\n                    rightCols.forEach(t =>{\r\n                        t.fixed = '';\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private _flatColumns() {\r\n        if (!this.columns || !this.columns.length) {\r\n            return;\r\n        }\r\n        // æ£æ¥åæ¯å¦ä¸ºå¨åºå®\r\n        this._cancelColumnFixed(this.columns[0].filter(n => n.field !== this.ControlPanelFeild));\r\n\r\n        if (this.isMultiHeader()) {\r\n            if (this.fast) {\r\n                this.flatColumns = this.dfs.getGroupColumns(this.columns[0]);\r\n            } else {\r\n                const _cols = flatten<DataColumn>(this.columns);\r\n                _cols.forEach(col => {\r\n                    if (col.parentId) {\r\n                        const t = _cols.find(n => n.id === col.parentId);\r\n                        if (t) {\r\n                            col.fixed = t.fixed;\r\n                        }\r\n                    }\r\n                })\r\n                this.flatColumns = _cols.filter((col: DataColumn) => (!col.colspan || col.colspan == 1) && this.columnIsVisible(col));\r\n            }\r\n        } else {\r\n            this.flatColumns = flatten<DataColumn>(this.columns).filter((col: DataColumn) => (!col.colspan || col.colspan == 1) && this.columnIsVisible(col));\r\n        }\r\n\r\n    }\r\n\r\n    columnIsVisible(col: DataColumn) {\r\n        return DatagridColumnsHelper.columnIsVisible(col, this);\r\n    }\r\n\r\n    // æ·»å åè®¾ç½®\r\n    private addControlCol() {\r\n        if (this.enableSettings()) {\r\n            const controlCol = this.columns[0].find(n => n.field === this.ControlPanelFeild);\r\n            if (!controlCol) {\r\n                const cp = { field: this.ControlPanelFeild, width: 24, rowspan: this.columns.length, fixed: 'right', visible: true };\r\n\r\n                // 2021-05-24 å¯ç¨è¿æ»¤è¡ååºé\r\n                // if (this.enableFilterRow) {\r\n                //     cp.rowspan += 1;\r\n                // }\r\n\r\n                this.columns[0].push(cp);\r\n            } else {\r\n                controlCol.visible = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkGroupHeaderColumns() {\r\n        if (this.isMultiHeader()) {\r\n            const allCols = flatten<DataColumn>(this.columns);\r\n            DatagridColumnsHelper.checkGroupHeaderColumnVisible(allCols);\r\n        }\r\n    }\r\n\r\n    // æ£æ¥åéå: [] -> [[]]\r\n\r\n    private correctColumns(values) {\r\n        if (values && values.length && !Array.isArray(values[0])) {\r\n            return [values];\r\n        } else {\r\n            return values || [];\r\n        }\r\n    }\r\n\r\n    private checkColumnsType() {\r\n        if (this.columns && this.columns.length) {\r\n            // if (!Array.isArray(this.columns[0])) {\r\n            //     this.columns = [ this.columns ];\r\n            // }\r\n\r\n            this.addControlCol();\r\n\r\n            this.columns.forEach((cols, columnsIndex) => {\r\n                cols.forEach((col: DataColumn, index) => {\r\n                    if (!col.field) {\r\n                        col.field = `farris-datagrid-column_${columnsIndex}_${index}`;\r\n                    }\r\n\r\n                    if (!col.valign) {\r\n                        col.valign = 'middle';\r\n                    }\r\n\r\n                    if (col.width === undefined || col.width === null) {\r\n                        col.width = 100;\r\n                    } else {\r\n                        if (typeof col.width === 'string') {\r\n                            col.width = parseInt(col.width, 10);\r\n                        }\r\n                    }\r\n\r\n                    // è®°å½åå§å®½åº¦\r\n                    if (!col.originalWidth) {\r\n                        col.originalWidth = col.width;\r\n                    }\r\n\r\n                    if (col.formatter && typeof col.formatter !== 'function' && Object.keys(col.formatter).length === 0) {\r\n                        col.formatter = null;\r\n                    }\r\n\r\n                    if (!this.showGroupColumn && this.groupRows) {\r\n                        this.toggleVisibleColumn(this.groupField.split(','), false);\r\n                    }\r\n                    // è¿æ»¤è¡æ£æ¥\r\n                    if (col.filter) {\r\n                        if (typeof col.filter === 'boolean') {\r\n                            if (col.field) {\r\n                                col.filter = this.clientFilterService.createColumnFilterOptions(col);\r\n                            } else {\r\n                                col.filter = false;\r\n                            }\r\n                        } else {\r\n                            if (!col.filter.options || !Object.keys(col.filter.options).length) {\r\n                                switch (col.filter.type) {\r\n                                    case ColumnFilterType.enum:\r\n                                        col.filter.options = col.formatter['options'];\r\n                                        break;\r\n                                    case ColumnFilterType.date:\r\n                                        col.filter.options = { dateFormat: 'yyyy-MM-dd', returnFormat: 'yyyy-MM-dd' };\r\n                                        break;\r\n                                    case ColumnFilterType.datetime:\r\n                                        col.filter.options = { dateFormat: 'yyyy-MM-dd HH:mm:ss', returnFormat: 'yyyy-MM-dd HH:mm:ss' };\r\n                                        break;\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // å¼å®¹ hidden 2021-05-31\r\n                    if (col['hidden'] !== undefined && col.visible === undefined) {\r\n                        if (typeof col['hidden'] === 'boolean') {\r\n                            col.visible = !col['hidden'];\r\n                        } else {\r\n                            if (typeof col['hidden'] === 'function') {\r\n                                col.visible = () => {\r\n                                    const r = col['hidden'].bind(this);\r\n                                    return !r;\r\n                                };\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // å¤è¡¨å¤´ç¦ç¨è¿æ»¤\r\n                    if (!col.field || col.field.indexOf('farris-datagrid-column_') > -1) {\r\n                        col.filter = false;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private checkGroupRowSetting() {\r\n        // å¦æå¯ç¨åç»è¡ï¼ä½æªè®¾ç½®åç»å­æ®µæ¶ï¼å°å³é­åç»è¡åè½\r\n        // if (this.groupRows) {\r\n        //     if (!this.groupField) {\r\n        //         this.groupRows = false;\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    private checkMergeCell() {\r\n        if (this.mergeCell) {\r\n            if (!this.mergeFields || !this.mergeFields.length) {\r\n                this.mergeCell = false;\r\n            } else {\r\n                this.virtualized = false;\r\n                this.virtualizedAsyncLoad = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkSortInfo() {\r\n        if (this.sortName) {\r\n            if (!this.sortOrder) {\r\n                this.sortOrder = this.sortName.split(',').map(() => 'asc').join(',');\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkNowrap() {\r\n        // å¯ç¨æè¡åï¼èæå è½½ç¹æ§å¤±æ\r\n        if (!this.nowrap) {\r\n            this.virtualized = false;\r\n        }\r\n    }\r\n\r\n    setHeaderHeight() {\r\n        this.realHeaderHeight = 0;\r\n        if (this.showHeader) {\r\n            const gridHeaderEl = this.el.nativeElement.querySelector('.f-datagrid-header');\r\n            if (!this.headerWrap) {\r\n                const { header: hh, pager: ph} = SIZE_TYPE[this._sizeType];\r\n                if (this.useThemes) {\r\n                    this.headerHeight =  hh;\r\n                    this.filterRowHeight = ph;\r\n                }\r\n                this.realHeaderHeight = this.columns.length * this.headerHeight;\r\n\r\n                if (this.enableFilterRow) {\r\n                    this.realHeaderHeight += this.filterRowHeight;\r\n                }\r\n\r\n                if (gridHeaderEl) {\r\n                    gridHeaderEl.style.minHeight = this.realHeaderHeight + 'px';\r\n                }\r\n            } else {\r\n                if (gridHeaderEl) {\r\n                    this.render2.removeStyle(gridHeaderEl, 'minHeight');\r\n\r\n                    const fixedLeftHeader = gridHeaderEl.querySelector('.f-datagrid-header-fixed-left');\r\n                    if (fixedLeftHeader) {\r\n                        this.render2.setStyle(fixedLeftHeader, 'height', 'auto');\r\n                    }\r\n\r\n                    const fixedRightHeader = gridHeaderEl.querySelector('.f-datagrid-header-fixed-right');\r\n                    if (fixedRightHeader) {\r\n                        this.render2.setStyle(fixedRightHeader, 'height', 'auto');\r\n                    }\r\n\r\n                    const trs = gridHeaderEl.querySelectorAll('table tr:not(.f-datagrid-filter-row)');\r\n                    trs.forEach(n => {\r\n                        n.style.height = 'auto';\r\n                        Array.from(n.children).forEach((a: any) => a.style.height = 'auto');\r\n                    });\r\n\r\n                    const tableEls = Array.from(gridHeaderEl.querySelectorAll('table'));\r\n                    if(tableEls) {\r\n                        const heights = tableEls.map((t: any) => t.offsetHeight);\r\n                        const maxHeight = Math.max(...heights);\r\n                        this.realHeaderHeight = maxHeight;\r\n                        gridHeaderEl.style.minHeight = this.realHeaderHeight + 'px';\r\n                    }\r\n\r\n                    if (fixedLeftHeader) {\r\n                        this.render2.setStyle(fixedLeftHeader, 'height', this.realHeaderHeight + 'px');\r\n                    }\r\n                    if (fixedRightHeader) {\r\n                        this.render2.setStyle(fixedRightHeader, 'height',  this.realHeaderHeight + 'px');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.realHeaderHeight;\r\n    }\r\n\r\n    // åéååå\r\n    columnsChanged(reloadData = true, useColumnSettingWidth = null, rebuildFilterBar = true) {\r\n        const _useColumnSettingWidth = useColumnSettingWidth === null ? this.fitColumns : useColumnSettingWidth;\r\n\r\n        this.dfs.updateProperty('expandGroupRows', this.expandGroupRows);\r\n\r\n        this.checkColumnsType();\r\n\r\n        this._flatColumns();\r\n        this.headerHeightChange();\r\n\r\n        this.dfs.updateProperty('flatColumns', this.flatColumns);\r\n        this.dfs.updateColumns(this.columns, _useColumnSettingWidth, true);\r\n\r\n        // this.colGroup = this.dfs.getState().columnsGroup;\r\n        // å¨æååè®¡è¡\r\n        this.updateFooterData();\r\n\r\n        this.dgs.columnsChanged.emit({ scrollToLeft: reloadData, rebuildFilterBar });\r\n\r\n        if (reloadData) {\r\n\r\n            if (this['_COLUMNS_CHANAGED_TIMER_']) {\r\n                clearTimeout(this['_COLUMNS_CHANAGED_TIMER_']);\r\n            }\r\n\r\n            this['_COLUMNS_CHANAGED_TIMER_'] = setTimeout(() => {\r\n                this.refresh();\r\n            }, 60);\r\n        }\r\n\r\n        this.setCellStyle();\r\n    }\r\n\r\n    // åå¤´åå\r\n    private headerHeightChange() {\r\n        this.setHeaderHeight();\r\n        this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n    }\r\n\r\n    /** å¤æ­æ¯å¦å¨å¼¹åºççªå£ä¸­ï¼è¿åundefind è¯´ææ²¡æå¨å¼¹åºççªå£ï¼å¦åè§ä¸ºå½ååè¡¨å¨å¼¹åºçªå£ä½¿ç¨ */\r\n    inDialog() {\r\n        return this.el.nativeElement.closest('.modal-body');\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Init\r\n    /** åå§ç¼è¾å¨ä¸éªè¯å¨ */\r\n    private initEditorAndValidator() {\r\n        const Editors = this.inject.get<any[]>(GRID_EDITORS, []);\r\n\r\n        if (Editors.length) {\r\n            Editors.forEach(ed => {\r\n                this.editors[ed.name] = ed.value;\r\n            });\r\n        }\r\n        const _validators = this.inject.get<any[]>(GRID_VALIDATORS, []);\r\n        if (_validators && _validators.length) {\r\n            // _validators.forEach(vr => {\r\n            //     this.validators[vr.name] = vr.value;\r\n            // });\r\n            this.validators = _validators;\r\n        }\r\n    }\r\n\r\n    setPagerHeight() {\r\n        if (!this.useHtmlTable) {\r\n            if (!this.pagination) {\r\n                this.pagerHeight = 0;\r\n            } else {\r\n                this.pagerHeight = this.dgPager && this.dgPager.outerHeight || 40;\r\n            }\r\n        }\r\n    }\r\n\r\n    private initState() {\r\n        this.data = this.data || [];\r\n\r\n        let sta = {};\r\n        Object.keys(this).forEach((k: string) => {\r\n            if (!IgnoreProperties.includes(k)) {\r\n                sta[k] = this[k];\r\n            }\r\n        });\r\n\r\n        this.dfs.initState({ ...sta, fitColumns: this.fitColumns, fit: this.fit, groupField: this._groupField });\r\n        sta = null;\r\n    }\r\n\r\n    private setFitColumns(fitColumns = true) {\r\n        if (this.columns) {\r\n            this.dfs.fitColumns(fitColumns);\r\n        }\r\n    }\r\n\r\n    private setGridNewSizeWhenFit() {\r\n        const parent = this.el.nativeElement.parentElement;\r\n        if (parent) {\r\n            const { width, height } = parent.getBoundingClientRect();\r\n\r\n            const padding = this.getElementPadding(parent);\r\n            const border = this.getElementBorderWidth(parent);\r\n\r\n            let m = 'floor'\r\n            if (this.maxHeight && this.autoHeight) {\r\n                m = 'ceil';\r\n            }\r\n\r\n\r\n            this.width = Math[m](Math.floor(width) - border.left - border.right - padding.left - padding.right);\r\n            this.height = Math[m](Math.floor(height) - border.top - border.bottom - padding.top - padding.bottom);\r\n\r\n            if (this.maxHeight && this.autoHeight) {\r\n                this.height += 1;\r\n            }\r\n\r\n            if (!this.height) {\r\n                this.height = this.dfs.getState().height || 300;\r\n            }\r\n\r\n            if (!this.width) {\r\n                this.width = this.dfs.getState().width || 800;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    calculateGridSize(fit = true) {\r\n        if (this.useHtmlTable) {\r\n            return;\r\n        }\r\n\r\n        const setNewSize = () => {\r\n            let h = this.height;\r\n            if (this.useBlankWhenDataIsEmpty && (!this.data || !this.data.length)) {\r\n                h = this.emptyDataHeight + this.realHeaderHeight;\r\n\r\n                if (this.showRowGroupPanel) {\r\n                    h += this.rowGroupPanelHeight;\r\n                }\r\n\r\n                if (this.showFilterBar) {\r\n                    h += this.filterBarHeight;\r\n                }\r\n\r\n                if (this.showFooter && this.footerData['value'].length) {\r\n                    h += this.footerHeight;\r\n                }\r\n\r\n                if (this.pagination) {\r\n                    const ph = this.pagerHeight || 40;\r\n                    h += ph;\r\n                }\r\n            }\r\n\r\n\r\n            if (this.gridSize.height === h + 'px' && this.gridSize.width === this.width + 'px') {\r\n                return;\r\n            }\r\n\r\n            this.gridSize = { width: this.width + 'px', height: h + 'px' };\r\n            this.dfs.resize({ width: this.width, height: h });\r\n        }\r\n\r\n        if (fit) {\r\n            this.setGridNewSizeWhenFit();\r\n            if (this.width && this.height) {\r\n                this._isResized = true;\r\n                setNewSize();\r\n                \r\n                this._isResized = false;\r\n                if (!this.cd['destroyed']) {\r\n                    this.cd.detectChanges();\r\n                }\r\n            }\r\n        } else {\r\n            setNewSize();\r\n        }\r\n    }\r\n\r\n    private initBeforeEvents() {\r\n        if (!this.beforeSelect) {\r\n            this.beforeSelect = () => of(true);\r\n        }\r\n        if (!this.beforeUnselect) {\r\n            this.beforeUnselect = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeCheck) {\r\n            this.beforeCheck = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeUncheck) {\r\n            this.beforeUncheck = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeSortColumn) {\r\n            this.beforeSortColumn = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeEdit) {\r\n            this.beforeEdit = () => of(true);\r\n        }\r\n\r\n        if (!this.afterEdit) {\r\n            this.afterEdit = () => of(true);\r\n        }\r\n    }\r\n\r\n    trackByRows = (index: number, row: any) => {\r\n        if (row) {\r\n            return row[this.idField] || index;\r\n        }\r\n        return index;\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region å¿«æ·é®\r\n\r\n    private unbindMoveSelectRowEvent() {\r\n        if (this.documentRowKeydownHandler) {\r\n            this.documentRowKeydownHandler();\r\n            this.documentRowKeydownHandler = null;\r\n        }\r\n    }\r\n\r\n\r\n    private bindDocumentMoveSelectRowEvent() {\r\n        this.unbindMoveSelectRowEvent();\r\n        this.unbindDocumentEditListener();\r\n        this.documentRowKeydownHandler = this.render2.listen(document, 'keydown', (e: KeyboardEvent) => {\r\n            // e.preventDefault();\r\n            if (!this.isActived()) {\r\n                return;\r\n            }\r\n\r\n            // has loading\r\n            if (document.querySelectorAll('farris-loading').length) {\r\n                return;\r\n            }\r\n\r\n            if (e.target) {\r\n                const targetName = (e.target as any).nodeName;\r\n                if (this.ignoreTarget.indexOf(targetName) > -1) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (e.keyCode === 40 || e.keyCode === 38) {\r\n                e.preventDefault();\r\n            }\r\n\r\n            switch (e.keyCode) {\r\n                case 40:\r\n                    this.selectNextRow();\r\n                    break;\r\n                case 38:\r\n                    this.selectPrevRow();\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    private bindEditListenerInModal() {\r\n        // å¼¹çªä¸­äºä»¶å¤ç\r\n        if (Utils.hasDialogOpen()) {\r\n            const modalElement = this.inDialog();\r\n            if (modalElement) {\r\n                const _fmodal = modalElement.closest('.farris-modal');\r\n                if (_fmodal) {\r\n                    this.modalClickEvent = this.render2.listen(_fmodal, 'click', () => {\r\n                        this.endEditing();\r\n                        this.currentCell = null;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onDocumentMouseDown = (event) => {\r\n        const dgrid = event.target.closest('.f-datagrid');\r\n\r\n        if (this.pending) {\r\n            return false;\r\n        }\r\n\r\n        if (!dgrid) {\r\n            this.activeDataGrid(false);\r\n        } else {\r\n            if (dgrid.id === this.id) {\r\n                if (this.isEditing() && (this.exitRowEditingWhenBodyClick || this.editMode == 'cell')) {\r\n                    this.endEditing();\r\n                }\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (Utils.hasDialogOpen()) {\r\n            const indlg = this.inDialog();\r\n            const currentTargetInDialog = event.target.closest('.modal-body');\r\n            if (indlg && currentTargetInDialog) {\r\n                if (indlg != currentTargetInDialog) {\r\n                    return;\r\n                }\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.currentCell) {\r\n            if ( !this.currentCell.cellElement) {\r\n                return;\r\n            }\r\n\r\n            if (this.currentCell.isEditing) {\r\n\r\n                const zoneClick = event.target['__zone_symbol__clickfalse'];\r\n                const isBeBtn = event.target.closest('.bedesigner-toolbar');\r\n                const isOldBeBtn = event.target.className.indexOf('beEleGridButton') > -1;\r\n                const disableClickEvent = zoneClick && zoneClick.length && (event.target.closest('.f-section-in-mainsubcard') || isOldBeBtn || isBeBtn || event.target.closest('.datagrid-toolbars'));\r\n        \r\n                if (disableClickEvent && !dgrid) {\r\n                    event.target.style.pointerEvents = 'none';\r\n                    event.stopPropagation();\r\n                }\r\n\r\n                const _timer = disableClickEvent ? ((isBeBtn || isOldBeBtn)? 50: 200) : 0;\r\n                const stopEditingRowIndex = this.currentCell.rowIndex;\r\n                this.currentCell.cellElement.closeEdit().pipe(debounceTime(_timer)).subscribe(f => {\r\n                    if (this.currentCell && stopEditingRowIndex !== this.currentCell.rowIndex) {\r\n                        return;\r\n                    }\r\n                    if (f) {\r\n                        if (this.currentCell && this.currentCell.cellElement) {\r\n                            DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n                            DomHandler.removeClass(this.currentCell.cellElement, CELL_EDITING_CLS);\r\n                        }\r\n                        this.dfs.cancelSelectCell();\r\n                        this.unbindDocumentEditListener();\r\n                        this.currentCell = null;\r\n\r\n                        \r\n                        if (disableClickEvent) {\r\n                            zoneClick.forEach(n => {\r\n                                n.callback(event);\r\n                            });\r\n                            event.target.style.pointerEvents = 'auto';\r\n\r\n                            if (isBeBtn || isOldBeBtn) {\r\n                                this.app.tick();\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            if (this.isEditing()) {\r\n                if(this.editMode == 'cell' || this.exitRowEditingWhenBodyClick) {\r\n                    this.endEditing();\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private bindDocumentEditListener() {\r\n        this.unbindDocumentEditListener();\r\n /*\r\n        if (!this.documentCellClickHandler) {\r\n            this.bindEditListenerInModal();\r\n            this.documentCellClickHandler = (event) => {\r\n                if (this.pending) {\r\n                    return false;\r\n                }\r\n                if (this.currentCell) {\r\n                    if (Utils.hasDialogOpen()) {\r\n                        const indlg = this.inDialog();\r\n                        const currentTargetInDialog = event.target.closest('.modal-body');\r\n                        if (indlg && currentTargetInDialog) {\r\n                            if (indlg != currentTargetInDialog) {\r\n                                return;\r\n                            }\r\n                        } else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    // DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n\r\n                    // if (this.currentCell.isEditing) {\r\n                    //     // this.dfs.endEditCell();\r\n                    //     this.currentCell.cellElement.closeEdit();\r\n                    // }\r\n                    // this.dfs.cancelSelectCell();\r\n                    // this.unbindDocumentEditListener();\r\n\r\n                    if (this.currentCell.isEditing) {\r\n                        // this.dfs.endEditCell();\r\n                        this.currentCell.cellElement.closeEdit().subscribe(f => {\r\n                            if (f) {\r\n                                DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n                                DomHandler.removeClass(this.currentCell.cellElement, CELL_EDITING_CLS);\r\n                                this.dfs.cancelSelectCell();\r\n                                this.unbindDocumentEditListener();\r\n                                this.currentCell = null;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            this.docuemntCellClickEvents = this.render2.listen(document, 'click', this.documentCellClickHandler);\r\n        }\r\n*/\r\n        if (!this.documentCellKeydownHandler) {\r\n            this.documentCellKeydownHandler = (event) => {\r\n                if (!event.target.closest('.f-datagrid') && event.target.nodeName !== 'BODY') {\r\n                    return;\r\n                }\r\n\r\n                if (this.isActived()) {\r\n                    this.onKeyDownEvent(event);\r\n                }\r\n            };\r\n\r\n            this.documentCellKeydownEvents = this.render2.listen(document, 'keydown', this.documentCellKeydownHandler);\r\n        }\r\n    }\r\n\r\n    private unbindDocumentEditListener() {\r\n        if (this.documentCellClickHandler) {\r\n            this.docuemntCellClickEvents();\r\n            this.documentCellClickHandler = null;\r\n        }\r\n\r\n        if (this.documentCellKeydownHandler) {\r\n            this.documentCellKeydownEvents();\r\n            this.documentCellKeydownHandler = null;\r\n        }\r\n\r\n        if (this.modalClickEvent) {\r\n            this.modalClickEvent();\r\n            this.modalClickEvent = null;\r\n        }\r\n    }\r\n\r\n    private onKeyDownEvent(e: any) {\r\n        // if (e.ctrlKey || e.shiftKey || !this.editable) {\r\n        //     return;\r\n        // }\r\n\r\n        // if (!e.target.closest('.f-datagrid')) {\r\n        //     return;\r\n        // }\r\n\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        const keyCode = e.keyCode;\r\n\r\n\r\n        if (this.currentCell && !this.currentCell.isEditing) {\r\n            if ([13, 40, 37, 38, 39, 9].indexOf(keyCode) > -1) {\r\n                e.preventDefault();\r\n            }\r\n            switch (keyCode) {\r\n                case 32: // ç©ºæ ¼\r\n                    if (this.currentCell && this.currentCell.column.onSpaceHandler) {\r\n                        e.stopPropagation();\r\n                        this.currentCell.column.onSpaceHandler({ grid: this, cell: this.currentCell, event: e });\r\n                    }\r\n                    break;\r\n                case 13: // Enter\r\n                    if (this.currentCell) {\r\n                        const fn = this.currentCell.cellElement['editCell'];\r\n                        if (fn) {\r\n                            fn.apply(this.currentCell.cellElement);\r\n                        } else {\r\n                            if (this.currentCell.column.onEnterHandler) {\r\n                                e.stopPropagation();\r\n                                this.currentCell.column.onEnterHandler({ grid: this, cell: this.currentCell, event: e });\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case 40: // â\r\n                    this.selectNextCell('down', e);\r\n                    break;\r\n                case 38: // â\r\n                    this.selectNextCell('up', e);\r\n                    break;\r\n                case 39: // â\r\n                    this.selectNextCell('right', e);\r\n                    break;\r\n                case 37: // â\r\n                    this.selectNextCell('left', e);\r\n                    break;\r\n                case 9: // Tab\r\n                    if (e.shiftKey) {\r\n                        this.selectNextCell('left', e);\r\n                    } else {\r\n                        this.selectNextCell('right', e);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private unsubscribes() {\r\n        this.subscriptions.forEach(ss => {\r\n            if (ss) {\r\n                ss.unsubscribe();\r\n                ss = null;\r\n            }\r\n        });\r\n\r\n        this.subscriptions = [];\r\n\r\n        if (this.docuemntCellClickEvents) {\r\n            this.docuemntCellClickEvents();\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Editing\r\n\r\n    isRowEditing() {\r\n        if (!this.selectedRow || this.selectedRow.index === -1) {\r\n            return false;\r\n        } else {\r\n            if (this.editMode === 'row') {\r\n                return this.selectedRow.editors && this.selectedRow.editors.length;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    isCellEditing() {\r\n        if (this.currentCell && this.editMode === 'cell') {\r\n            if (!this.currentCell.editor && this.currentCell.column && !this.currentCell.column.editorTemplate) {\r\n                this.currentCell.isEditing = false;\r\n                if (this.currentCell.cellRef) {\r\n                    this.currentCell.cellRef.isEditing = false;\r\n                }\r\n            }\r\n            return this.currentCell.isEditing;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isEditing() {\r\n        if (this.editMode === 'row') {\r\n            return this.isRowEditing();\r\n        } else {\r\n            return this.isCellEditing();\r\n        }\r\n    }\r\n\r\n    endEditing() {\r\n        if (this.editMode === 'row') {\r\n            this.endRowEdit();\r\n        } else if (this.editMode === 'cell') {\r\n            this.endCellEdit();\r\n        }\r\n    }\r\n\r\n    getEditors() {\r\n        return this.selectedRow.editors;\r\n    }\r\n\r\n    editCell(rowId: any, field: string, validation:  { isValid: boolean, message: string } = null) {\r\n        this.activeDataGrid();\r\n\r\n        const rowIndex = this.dfs.findRowIndex(rowId);\r\n        if (rowIndex > -1) {\r\n            this.endCellEdit();\r\n            const trId = TR_PREFIX + rowId;\r\n            // const trDom = this.el.nativeElement.querySelector('#' + trId);\r\n            const trDom = Utils.getTrDomById(trId, this.el.nativeElement);\r\n\r\n            let tdDom = null;\r\n            if (trDom) {\r\n                tdDom = trDom.querySelector(`[field=\"${field}\"]`);\r\n            }\r\n            const col = this.getColumn(field);\r\n            if (!tdDom && col.fixed) {\r\n                if (col.fixed === 'left') {\r\n                    // const trDomL = this.el.nativeElement.querySelector('#' + trId + '_fixedleft');\r\n                    const trDomL = Utils.getTrDomById(trId + '_fixedleft', this.el.nativeElement);\r\n                    tdDom = trDomL && trDomL.querySelector(`[field=\"${field}\"]`);\r\n                } else if (col.fixed === 'right') {\r\n                    // const trDomR = this.el.nativeElement.querySelector('#' + trId + '_fixedright');\r\n                    const trDomR = Utils.getTrDomById(trId + '_fixedright', this.el.nativeElement);\r\n                    tdDom = trDomR && trDomR.querySelector(`[field=\"${field}\"]`);\r\n                }\r\n            }\r\n\r\n            if (validation) {\r\n                this.formValidations = Object.assign( this.formValidations || {}, { [field]: validation});\r\n            }\r\n\r\n\r\n            if (tdDom && tdDom['editCell']) {\r\n                this.currentCell = null;\r\n                if (this['EDITCELL_TIMER']) {\r\n                    clearTimeout(this['EDITCELL_TIMER']);\r\n                }\r\n                this['EDITCELL_TIMER'] = setTimeout(() => {\r\n                    tdDom.editCell();\r\n                }, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    endCellEdit(event?: any) {\r\n        // document.body.click();\r\n        if (this.currentCell) {\r\n            DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n            if (this.currentCell.isEditing) {\r\n                // this.dfs.endEditCell();\r\n                if (this.currentCell.cellEditorRef) {\r\n                    this.currentCell.cellEditorRef.hideCover();\r\n                }\r\n\r\n                const stopEdit = this.currentCell.cellElement.closeEdit();\r\n                if (stopEdit) {\r\n                    stopEdit.subscribe();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    editRow(rowId?: any) {\r\n        if (!this.editable || this.editMode !== 'row') { return false; }\r\n\r\n        if (rowId) {\r\n            this.selectRow(rowId);\r\n        }\r\n\r\n\r\n        if (!this.selectedRow || this.selectedRow.index === -1) {\r\n            this.writeConsole('Please select a row.');\r\n            return false;\r\n        }\r\n\r\n        const { index: rowIndex, data: rowData } = { ...this.selectedRow };\r\n\r\n        const beforeEditEvent = this.beforeEdit({ rowIndex, rowData, gridInstance: this });\r\n        if (!beforeEditEvent || !beforeEditEvent.subscribe) {\r\n            this.writeConsole('please return an Observable Type.');\r\n            return;\r\n        }\r\n\r\n        const trId = TR_PREFIX + rowId;\r\n        // const trDom = this.el.nativeElement.querySelector('#' + trId);\r\n        const trDom = Utils.getTrDomById(trId, this.el.nativeElement);\r\n\r\n        if (!this.selectedRow.dr) {\r\n            trDom.click();\r\n        }\r\n\r\n        beforeEditEvent.subscribe((flag: boolean) => {\r\n            if (flag) {\r\n                if (this.selectedRow.dr && this.selectedRow.dr.cells) {\r\n                    const cells = this.selectedRow.dr.cells.toArray();\r\n                    if (!cells || !cells.length) {\r\n                        return;\r\n                    }\r\n\r\n                    cells.forEach(cell => {\r\n                        if (cell.column.editor) {\r\n                            cell.isEditing = true;\r\n                        }\r\n                    });\r\n                    this.selectedRow.dr.cd.detectChanges();\r\n                    setTimeout(() => {\r\n                        const editors = cells.map(cell => {\r\n                            if (cell.cellEditor) {\r\n                                return cell.cellEditor.componentRef;\r\n                            }\r\n                        }).filter(editor => editor);\r\n                        this.selectedRow.editors = editors;\r\n\r\n                        if (editors && editors.length) {\r\n                            if (editors[0].instance.inputElement) {\r\n                                editors[0].instance.inputElement.focus();\r\n                            }\r\n                        }\r\n\r\n                        // ç»å®é®çäºä»¶\r\n                        this.bindRowEditorKeydownEvent();\r\n                        if (!this.cd['destroyed']) {\r\n                            this.cd.detectChanges();\r\n                        }\r\n                        this.beginEdit.emit({ rowIndex, rowData, gridInstance: this, editor: editors });\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    endRowEdit() {\r\n        if (!this.isRowEditing()) {\r\n            return { canEnd: true };\r\n        }\r\n\r\n        if (!this.selectedRow || this.selectedRow.index === -1) {\r\n            this.writeConsole('Please select a row.');\r\n            return;\r\n        }\r\n        const { index: rowIndex, data: rowData, dr } = { ...this.selectedRow };\r\n        const { editor: currentEditor, column } = { ...this.currentCell };\r\n        // blur\r\n        document.body.click();\r\n\r\n        if (this.pending) {\r\n            return { canEnd: false };\r\n        }\r\n\r\n\r\n        if (!dr.form) {\r\n            return {canEnd: true};\r\n        }\r\n\r\n        const rowForm = dr.form as FormGroup;\r\n        rowForm.markAsTouched();\r\n        if (rowForm.invalid && !this.endEditByInvalid) {\r\n            return { canEnd: false };\r\n        }\r\n\r\n        // afterEdit è¦ä¼ éç¸å³åæ°ï¼å¨ç¼è¾ç¶ææ¶ï¼ç§»å¨æ»å¨æ¡ä¼åºäº\r\n        const afterEditEvent = this.afterEdit(rowIndex, rowData, column, currentEditor);\r\n        if (!afterEditEvent || !afterEditEvent.subscribe) {\r\n            this.writeConsole('please return an Observable Type.');\r\n            return { canEnd: false };\r\n        }\r\n\r\n        afterEditEvent.subscribe((flag: boolean) => {\r\n            if (flag) {\r\n                this.closeAllCellEditor();\r\n\r\n                if (this.selectedRow.dr.form) {\r\n                    this.selectedRow.dr.rowData = Object.assign(this.selectedRow.dr.rowData, this.selectedRow.dr.form.value);\r\n                    this.dfs.updateRow(this.selectedRow.id, this.selectedRow.dr.rowData);\r\n                    this.cd.detectChanges();\r\n                }\r\n\r\n                let val = '';\r\n                if (currentEditor && currentEditor.formControl) {\r\n                    val = currentEditor.formControl.value;\r\n                }\r\n\r\n                this.endEdit.emit({ rowIndex, rowData, column, value: val });\r\n\r\n                this.dgs.refreshFooterData.emit();\r\n            }\r\n        });\r\n    }\r\n\r\n    cancelEdit(rowId: any, emit = true) {\r\n\r\n        if (!this.isEditing()) {\r\n            return;\r\n        }\r\n\r\n        this.closeAllCellEditor();\r\n        if (rowId) {\r\n            this.dfs.rejectChanges(rowId);\r\n        }\r\n\r\n        this.cd.detectChanges();\r\n        if (emit) {\r\n            this.cancelEdited.emit();\r\n        }\r\n    }\r\n\r\n    closeAllCellEditor() {\r\n        if (this.selectedRow && this.selectedRow.dr) {\r\n            const cells = this.selectedRow.dr.cells;\r\n            if (cells) {\r\n                cells.forEach(cell => cell.isEditing = false);\r\n                if (this.currentCell) {\r\n                    this.currentCell.isEditing = false;\r\n                }\r\n            }\r\n            this.selectedRow.editors = null;\r\n        }\r\n\r\n        // åæ¶é®çäºä»¶\r\n        this.unbindRowEditorKeydownEvent();\r\n    }\r\n\r\n    private rowEditTabKeydwonEvent(e: any) {\r\n        const keyCode = e.which || e.keyCode;\r\n\r\n        if (keyCode === 9) {  // tab\r\n            const td = e.target.closest('td');\r\n            const tr = e.target.closest('tr');\r\n            const nextTd = td.nextElementSibling;\r\n\r\n            const hasNoEditor = (_td: any) => {\r\n                return !_td.querySelector('input') && !_td.querySelector('textarea') && !_td.querySelector('select');\r\n            };\r\n\r\n            const editNextRow = () => {\r\n                const nextTr = tr.nextElementSibling;\r\n                if (nextTr) {\r\n                    nextTr.click();\r\n                    const nextRowid = nextTr.getAttribute('id').replace(TR_PREFIX, '');\r\n                    if (nextRowid) {\r\n                        this.editRow(nextRowid);\r\n                    }\r\n                }\r\n            };\r\n\r\n            if (nextTd) {\r\n                if (hasNoEditor(nextTd)) {\r\n                    const tds = tr.querySelectorAll('td');\r\n                    let tdIdx = -1;\r\n                    tds.forEach((t, i) => {\r\n                        if (t === nextTd) {\r\n                            tdIdx = i;\r\n                        }\r\n                    });\r\n                    let nextTrEdit = true;\r\n                    while (tdIdx < tds.length) {\r\n                        const _ntd = tds[tdIdx];\r\n                        if (hasNoEditor(_ntd)) {\r\n                            tdIdx++;\r\n                        } else {\r\n                            nextTrEdit = false;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (nextTrEdit) {\r\n                        editNextRow();\r\n                    }\r\n                }\r\n            } else {\r\n                editNextRow();\r\n            }\r\n        }\r\n\r\n        e.stopPropagation();\r\n    }\r\n\r\n    private bindRowEditorKeydownEvent() {\r\n        if (!this.documentRowEditKeydownHanlder) {\r\n            this.documentRowEditKeydownHanlder = this.render2.listen(document, 'keydown', this.rowEditTabKeydwonEvent.bind(this));\r\n        }\r\n        this.documentClickEndRowEditHandler = this.render2.listen(document, 'click', (e: any) => {\r\n            if (this.pending) {\r\n                return false;\r\n            }\r\n            if (Utils.hasDialogOpen()) {\r\n                return;\r\n            }\r\n\r\n            if (this.isRowEditing()) {\r\n\r\n                // this.endRowEdit();\r\n            }\r\n        });\r\n    }\r\n\r\n    private unbindRowEditorKeydownEvent() {\r\n        // åæ¶é®çäºä»¶\r\n        if (this.documentRowEditKeydownHanlder) {\r\n            this.documentRowEditKeydownHanlder();\r\n            this.documentRowEditKeydownHanlder = null;\r\n        }\r\n\r\n        if (this.documentClickEndRowEditHandler) {\r\n            this.documentClickEndRowEditHandler();\r\n            this.documentClickEndRowEditHandler = null;\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Load Data\r\n\r\n\r\n    private _clientFilter(conditions: any, excuteLocaleFilter = false) {\r\n        // å®¢æ·ç«¯è¿æ»¤\r\n        if (excuteLocaleFilter) {\r\n            const allClientData = this.dfs.getData(true);\r\n            if (conditions && Object.keys(conditions).length) {\r\n                const _data = this.clientFilterService.executeFilter(allClientData, conditions);\r\n                this.dfs.loadFilterData(_data);\r\n            } else {\r\n                this.loadData(allClientData, false, true);\r\n            }\r\n        }\r\n\r\n        if (!this.virtualized) {\r\n            this.scrollToTop();\r\n        }\r\n\r\n        const _conditions = this.checkFilterValues(conditions);\r\n        this.filterChanged.emit(_conditions);\r\n    }\r\n\r\n    private smartFilterData(conditions: any) {\r\n        if (this.remoteFilter) { // æå¡å¨ç«¯è¿æ»¤\r\n            let entityFilters = this.clientFilterService.convertSmartFilter2EntityFilter(conditions);\r\n            entityFilters = this.checkFilterValues(entityFilters);\r\n            this.filterChanged.emit(entityFilters);\r\n        } else {\r\n            // å®¢æ·ç«¯è¿æ»¤\r\n            this._clientFilter(conditions, this.useDefaultFilter);\r\n        }\r\n\r\n    }\r\n\r\n    // smart fitler æ¸ç©ºæ¥è¯¢æ¡ä»¶\r\n    onClearSmartFilters($event?: any) {\r\n        this.smartFilterResult = { conditions: [], controlData: [] };\r\n        this.conditions = [];\r\n        this.smartFilterData([]);\r\n        this.smartFilterService.clearAll();\r\n        setTimeout(() => {\r\n            this.onFilterBarResize(0);\r\n        });\r\n    }\r\n\r\n    onRemoveSmartFilterItem($event) {\r\n        if ($event) {\r\n            const e = { ...$event };\r\n            e['labelCode'] = $event.fieldCode;\r\n            this.smartFilterService.removeCondition(e, true);\r\n        }\r\n    }\r\n\r\n    onFilterBarResize($event) {\r\n        this.filterBarHeight = $event;\r\n\r\n        const smartFilterEl = this.el.nativeElement.querySelector('.f-datagrid-column-drop-panel');\r\n        if (smartFilterEl && !$event) {\r\n            smartFilterEl.style.top = '0px';\r\n        }\r\n        this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n        this.dgs.smartFilterBarExpand.emit();\r\n    }\r\n\r\n    onSmartFilterChange($event) {\r\n        const { conditions, filterItem } = $event;\r\n\r\n        this.smartFilterService.filterConditionChanged({ conditions, controlData: filterItem, from: 'toolbar' });\r\n\r\n        // this.smartFilterData(conditions);\r\n        this.dgs.smartFilterDataChange.emit(filterItem);\r\n    }\r\n\r\n    filterData(conditions?: any) {\r\n        if (!conditions) {\r\n            conditions = this.conditions;\r\n        } else {\r\n            this.conditions = conditions;\r\n        }\r\n\r\n        this.scrollToTop();\r\n\r\n        if (this.enableSmartFilter) {\r\n            this.smartFilterData(conditions);\r\n            return;\r\n        }\r\n\r\n        if (this.remoteFilter) {\r\n            const entityFilters = this.clientFilterService.convert2FilterArray(conditions);\r\n            this.filterChanged.emit(entityFilters);\r\n        } else {\r\n            // å®¢æ·ç«¯è¿æ»¤\r\n            this._clientFilter(conditions, true);\r\n        }\r\n    }\r\n    /** æ¸ç©ºè¿æ»¤æ¡ä»¶ */\r\n    clearCondition() {\r\n        this.dgs.onClearFilter();\r\n\r\n        if (!this.enableFilterRow && !this.enableSmartFilter) {\r\n            return;\r\n        }\r\n\r\n        let isFilterChange = false;\r\n        if (this.conditions) {\r\n            if (Array.isArray(this.conditions)) {\r\n                isFilterChange = !!this.conditions.length;\r\n            } else {\r\n                isFilterChange = !!Object.keys(this.conditions).length;\r\n            }\r\n        }\r\n        \r\n        if (!isFilterChange) {\r\n            return;\r\n        }\r\n\r\n        this.conditions = this.enableSmartFilter ? [] : {};\r\n        this.clientFilterChanged = true;\r\n        this.filterData(this.conditions);\r\n    }\r\n\r\n    private _loadData(data?: any, keepSortState = false, keepScrollPosition = true) {\r\n        if (this.loading) {\r\n            this.closeLoading(!this.pagination);\r\n        }\r\n        data = data || [];\r\n\r\n        if (keepScrollPosition && this.scrollInstance && this.scrollInstance.instance) {\r\n            const lst = this.scrollInstance.instance.lastScrollTop;\r\n            const lsl = this.scrollInstance.instance.lastScrollLeft;\r\n            this.dfs.updateProperty('scrollInfo', { y: lst, x: lsl });\r\n        } else {\r\n            this.dfs.updateProperty('scrollInfo', { y: 0, x: 0 });\r\n        }\r\n\r\n        if (this.pagination) {\r\n            this.dfs.setPagination(this.pageIndex, this.pageSize, this.total);\r\n            this.updatePagerOptions();\r\n\r\n            if (!this.cd['destroyed']) {\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n\r\n        // éæ°å è½½æ°æ®æ¶ï¼ç§»é¤ææç¼è¾å\r\n        // this.closeAllCellEditor();\r\n\r\n        this.data = data;\r\n        if (keepSortState) {\r\n            if (this.remoteSort) {\r\n                this.dfs.loadData(data);\r\n            } else {\r\n                this.dfs.loadData(data, true, true);\r\n            }\r\n        } else {\r\n            this.dfs.loadData(data);\r\n        }\r\n\r\n        this.setPagerHeight();\r\n        this.dgs.dataSourceChanged();\r\n    }\r\n\r\n\r\n    loadData(data?: any, keepSortState = false, keepScrollPosition = true) {\r\n        this._loadData(data, keepSortState, keepScrollPosition);\r\n    }\r\n\r\n    loadVirtualData(data: any) {\r\n        if (this.groupRows) {\r\n            this.writeConsole('if you using GROUPROWS, please set [virtualized]=\"false\" [virtualizedAsyncLoad]=\"false\"');\r\n            return;\r\n        }\r\n        if (this.virtualizedAsyncLoad) {\r\n            this.dgs.onLoadVirtualData(data);\r\n        }\r\n    }\r\n\r\n    fetchData(pageIndex, pageSize) {\r\n        if (this.restService) {\r\n            this.showLoading();\r\n            const params = { pageIndex, pageSize };\r\n            if (this.sortName) {\r\n                params['sortName'] = this.sortName;\r\n            }\r\n            if (this.sortOrder) {\r\n                params['sortOrder'] = this.sortOrder;\r\n            }\r\n\r\n            return this.restService.getData(this.url, params);\r\n        }\r\n        return of(undefined);\r\n    }\r\n\r\n    refresh() {\r\n        this.dfs.refresh();\r\n    }\r\n\r\n    reload() {\r\n        this.fetchData(1, this.pageSize).subscribe(res => {\r\n            if (res) {\r\n                this.pageIndex = 1;\r\n                this.total = res.total;\r\n                this.loadData(res.items);\r\n            }\r\n        });\r\n    }\r\n\r\n    /** è·åå½åé¡µæ°æ® */\r\n    getRows() {\r\n        if (this.groupRows || this.virtualized) {\r\n            if (this.pagerOnServer) {\r\n                return this.ds.rows;\r\n            } else {\r\n                return this.currentPagerData;\r\n            }\r\n        } else {\r\n            if (this.pagerOnServer) {\r\n                return this.data;\r\n            } else {\r\n                return this.currentPagerData;\r\n            }\r\n        }\r\n    }\r\n\r\n    getGroupRow(groupRowId: string) {\r\n        const _allrows = (this.getRows() || []).filter(n => n[IS_GROUP_ROW_FIELD]);\r\n        const rowIndex = _allrows.findIndex(n => n.id == groupRowId);\r\n        return {\r\n            data: _allrows[rowIndex],\r\n            index: rowIndex\r\n        };\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Pagination\r\n\r\n    setPageIndex(pageIndex: number, detectChanges = true) {\r\n        this.pageIndex = pageIndex;\r\n        this.pagerOpts.currentPage = pageIndex;\r\n\r\n        if (detectChanges) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    // æ´æ°æ¯é¡µ\r\n    setPageList(pageList: number[], detectChanges = true) {\r\n        this.pageList = pageList;\r\n        this.pagerOpts.pageList = pageList;\r\n        if (detectChanges) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    onPageChange(pageIndex: number) {\r\n        if (this.lockPagination) {\r\n            return;\r\n        }\r\n\r\n        if (this.controlPaginationState) {\r\n            this.setPageIndex(pageIndex, false);\r\n        }\r\n\r\n\r\n        this.fetchData(pageIndex, this.pageSize).subscribe(res => {\r\n            if (res) {\r\n                this.loadData(res.items);\r\n            }\r\n        });\r\n        this.focusRowIndex = -1;\r\n        this.scrollToTop();\r\n        this.pageChanged.emit({ pageIndex, pageSize: this.pageSize });\r\n    }\r\n\r\n    onPageSizeChange(pageSize: number) {\r\n        if (this.lockPagination) {\r\n            return;\r\n        }\r\n        this.focusRowIndex = -1;\r\n        this.scrollToTop();\r\n        this.pageSize = pageSize;\r\n        this.pagerOpts.itemsPerPage = pageSize;\r\n\r\n        this.fetchData(1, pageSize).subscribe(res => {\r\n            if (res) {\r\n                this.pageIndex = 1;\r\n                this.loadData(res.items);\r\n            }\r\n        });\r\n        this.pageSizeChanged.emit({ pageSize, pageIndex: this.pageIndex });\r\n    }\r\n\r\n    onRemoveSelectedItem(id: any) {\r\n        if (this.dfs.findRowIndex(id) > -1) {\r\n            this.unCheckRow(id);\r\n            this.cd.detectChanges();\r\n        } else {\r\n            this.unCheckRow(id, false);\r\n            this.checkValues = this.checkeds.map(r => r.id);\r\n        }\r\n    }\r\n\r\n    onClearSelectedItem($event) {\r\n        // this.clearAll();\r\n        if (this.selectOnCheck) {\r\n            this.selectValue = '';\r\n        }\r\n        this.clearCheckeds(true);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Loading\r\n    showLoading() {\r\n        this.loading = true;\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    closeLoading(detectChanges = true) {\r\n        this.loading = false;\r\n        if (detectChanges) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    //#region Dom\r\n\r\n    private replacePX2Empty(strNum: string) {\r\n        if (strNum) {\r\n            return Number.parseInt(strNum.replace('px', ''), 10);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    renderCustomCls(cls: any, dom: any) {\r\n        if (cls) {\r\n            if (cls[0] === '!') {\r\n                const _cls = cls.slice(1).split(' ').filter(c => c);\r\n                _cls.forEach(c => {\r\n                    if (c) {\r\n                        this.render2.removeClass(dom, c);\r\n                    }\r\n                });\r\n            } else {\r\n                cls.split(' ').filter(c => c).forEach(c => {\r\n                    if (c) {\r\n                        this.render2.addClass(dom, c);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    renderCustomStyle(cs: CustomStyle, dom: any, cssRuleText = null) {\r\n        if (!cs) {\r\n            return;\r\n        }\r\n        if (cs.cls) {\r\n            this.renderCustomCls(cs.cls, dom);\r\n        }\r\n\r\n        if (cs.style) {\r\n            if (!cssRuleText) {\r\n\r\n                Object.keys(cs.style).forEach(n => {\r\n                    if (n.toLowerCase() === 'color' && cs.style[n] && cs.style[n].indexOf('!important') === -1 ) {\r\n                        cs.style[n] = cs.style[n] + '!important';\r\n                    }\r\n                });\r\n\r\n                cssRuleText = `${this.customStyleKey()} #${dom.id} ${JSON.stringify(cs.style)}`;\r\n            }\r\n\r\n            this.dgs.appendCssRules([cssRuleText]);\r\n        }\r\n    }\r\n\r\n    renderCustomStyle2(cs: CustomStyle, dom: any, cssClassName: string) {\r\n        if (!cs) {\r\n            return;\r\n        }\r\n        if (cs.cls && dom) {\r\n            this.renderCustomCls(cs.cls, dom);\r\n        }\r\n\r\n        if (cs.style) {\r\n            Object.keys(cs.style).forEach(n => {\r\n                if ((n.toLowerCase().indexOf('background') > -1 || n.toLowerCase() === 'color') && cs.style[n] && cs.style[n].indexOf('!important') === -1 ) {\r\n                    cs.style[n] = cs.style[n] + '!important';\r\n                }\r\n            });\r\n\r\n            let cssRuleText = `${this.customStyleKey()} .${cssClassName} ${JSON.stringify(cs.style)}`;\r\n            if (cssClassName.indexOf(this.customStyleKey()) > -1) {\r\n                cssRuleText = `${cssClassName} ${JSON.stringify(cs.style)}`;\r\n            }\r\n\r\n            this.dgs.appendCssRules([cssRuleText]);\r\n        }\r\n    }\r\n\r\n    getBoundingClientRect(el: ElementRef) {\r\n        return el.nativeElement.getBoundingClientRect();\r\n    }\r\n\r\n    getElementPadding(el: HTMLElement) {\r\n        const style = getComputedStyle(el);\r\n        return {\r\n            top: this.replacePX2Empty(style.paddingTop),\r\n            left: this.replacePX2Empty(style.paddingLeft),\r\n            bottom: this.replacePX2Empty(style.paddingBottom),\r\n            right: this.replacePX2Empty(style.paddingRight)\r\n        };\r\n    }\r\n\r\n    getElementBorderWidth(el: HTMLElement) {\r\n        const style = getComputedStyle(el);\r\n        return {\r\n            top: this.replacePX2Empty(style.borderTopWidth),\r\n            bottom: this.replacePX2Empty(style.borderBottomWidth),\r\n            right: this.replacePX2Empty(style.borderRightWidth),\r\n            left: this.replacePX2Empty(style.borderLeftWidth)\r\n        };\r\n    }\r\n\r\n    formatData(field: any, data: any, formatter: any) {\r\n        const value = this.getFieldValue(field, data);\r\n        return this.colFormatSer.format(value, data, formatter);\r\n    }\r\n\r\n    getFieldValue(field, rowData) {\r\n        return Utils.getValue(field, rowData);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Select\r\n    private canOperateCheckbox() {\r\n        return this.multiSelect && this.showCheckbox;\r\n    }\r\n\r\n    findNextTd(nextColumn) {\r\n\r\n        if (!nextColumn) {\r\n            return null;\r\n        }\r\n\r\n        const rowid = TR_ID_PREFIX + this.selectedRow.id;\r\n        const leftTrID = TR_ID_PREFIX + this.selectedRow.id + '_fixedleft';\r\n        const rightTrID = TR_ID_PREFIX + this.selectedRow.id + '_fixedright';\r\n\r\n        let _tr = null;\r\n        let _td = null;\r\n\r\n        if (nextColumn.fixed === 'left') {\r\n            // _tr = document.querySelector(leftTrID);\r\n            _tr = Utils.getTrDomById(leftTrID, document);\r\n            if (_tr) {\r\n                _td = _tr.querySelector(`[field=\"${nextColumn.field}\"]`);\r\n            }\r\n        } else if (nextColumn.fixed === 'right' ) {\r\n            // _tr = document.querySelector(rightTrID);\r\n            _tr = Utils.getTrDomById(rightTrID, document);\r\n            if (_tr) {\r\n                _td = _tr.querySelector(`[field=\"${nextColumn.field}\"]`);\r\n            }\r\n        } else {\r\n            // _tr = document.querySelector(rowid);\r\n            _tr = Utils.getTrDomById(rowid, document);\r\n            if (_tr) {\r\n                _td = _tr.querySelector(`[field=\"${nextColumn.field}\"]`);\r\n            }\r\n        }\r\n\r\n        return _td;\r\n    }\r\n\r\n    /**\r\n     * ä¾æ®å½åå­æ®µæ¥è¯¢ä¸ä¸ªå­æ®µçTD DOM\r\n     * @param field å½åå­æ®µåç§°\r\n     * @param dir ç§»å¨æ¹å\r\n     * @returns TD element\r\n     */\r\n    findNextCell(field: string, dir: MoveDirection) {\r\n        let td = null;\r\n        if (this.currentCell && this.currentCell.cellElement) {\r\n            const col = this.dfs.getColumn(field);\r\n            const fixed = col.fixed || '';\r\n            // let cellIndex = this.dfs.getColumnIndex(field, fixed);\r\n            let cellIndex = this.colGroup.columns.findIndex(n => (n.id && n.id === col.id) || n.field === col.field);\r\n\r\n            // if (fixed === 'left' || this.fast) {\r\n            //     if (this.showCheckbox) {\r\n            //         cellIndex += 1;\r\n            //     }\r\n\r\n            //     if (this.showLineNumber) {\r\n            //         cellIndex += 1;\r\n            //     }\r\n            // }\r\n\r\n            const currCellEl = this.currentCell.cellElement;\r\n            const tdSelector = `[field=\"${field}\"]`;\r\n            if (dir === 'up') {\r\n                const prevTr = this.dgs.findNextTr(currCellEl.parentElement.previousElementSibling, 'up');\r\n                if (prevTr) {\r\n                    td = prevTr.querySelector(tdSelector);\r\n                }\r\n            } else if (dir === 'down') {\r\n                const nextTr = this.dgs.findNextTr(currCellEl.parentElement.nextElementSibling, 'down');\r\n                if (nextTr) {\r\n                    td = nextTr.querySelector(tdSelector);\r\n                }\r\n            } else if (dir === 'left') {\r\n                const nextColumn = this.colGroup.columns[cellIndex - 1];\r\n                if (nextColumn) {\r\n                    td = this.findNextTd(nextColumn);\r\n                }\r\n            } else if (dir === 'right') {\r\n                const nextColumn = this.colGroup.columns[cellIndex + 1];\r\n                if (nextColumn) {\r\n                    td = this.findNextTd(nextColumn);\r\n                }\r\n            }\r\n        }\r\n        return td;\r\n    }\r\n\r\n    selectNextCell(dir: MoveDirection, event: Event) {\r\n        const nextTd = this.findNextCell(this.currentCell.field, dir);\r\n\r\n        if (dir === 'up' && !nextTd) {\r\n            return;\r\n        }\r\n\r\n        if (nextTd && nextTd.className.indexOf('f-datagrid-cell-rownumber') == -1 && nextTd.className.indexOf('f-datagrid-cell-checkbox') == -1) {\r\n            if (event['code'] === 'Tab' && this.editable && this.editcellWhenTabKeydwon) {\r\n                nextTd['click'].apply(nextTd, [event]);\r\n            } else {\r\n                if (nextTd.selectCell) {\r\n                    if (this.selectionMode === 'default' ) {\r\n                        this.clearCheckeds();\r\n                    }\r\n                    nextTd['selectCell'](event, nextTd);\r\n                }\r\n            }\r\n            // nextTd['selectCell'](event, nextTd);\r\n            return nextTd;\r\n        } else {\r\n\r\n            const nextCol = this.colGroup.columns[0];\r\n            const tdSeletor = `td[field=\"${nextCol.field}\"]`;\r\n            const tr = this.currentCell.cellElement.parentElement;\r\n\r\n            let _next = tr.nextElementSibling;\r\n            if (dir === 'left') {\r\n                _next = tr.previousElementSibling;\r\n            }\r\n            if (!_next) {\r\n                return;\r\n            }\r\n\r\n            // const trDomId = _next.id.replace('_fixedleft','').replace('_fixedright','');\r\n            const trDomId = Utils.getRowIdByTr(_next);\r\n            const leftTrSelector = trDomId + '_fixedleft';\r\n\r\n            if (_next.id.indexOf('_fixedright') > -1) {\r\n                if (this.colGroup.leftFixed && this.colGroup.leftFixed.length) {\r\n                    // _next = document.querySelector(leftTrSelector);\r\n                    _next = Utils.getTrDomById(leftTrSelector, document);\r\n                }\r\n            }\r\n           \r\n            if (dir === 'left') {\r\n                if (_next.id.indexOf('_fixedleft') > -1) {\r\n                    // _next = document.querySelector(leftTrSelector);\r\n                    _next = Utils.getTrDomById(leftTrSelector, document);\r\n                }\r\n            }\r\n\r\n\r\n            const nextTd = _next.querySelector(tdSeletor);\r\n            if (nextTd && nextTd.selectCell) {\r\n                if (this.selectionMode === 'default' ) {\r\n                    this.clearCheckeds();\r\n                }\r\n                nextTd.selectCell(event, nextTd);\r\n            }\r\n\r\n            /*\r\n            const nextTr = this.dgs.findNextTr(_next, dir === 'left' ? 'up' : 'down');\r\n            if (nextTr && nextTr.tagName === 'TR') {\r\n                // nextTr.children.find(td => td.editCell).editCell();\r\n                let firstEditor = false;\r\n                let i = 0;\r\n                while (!firstEditor) {\r\n                    firstEditor = !!nextTr.children[i].selectCell;\r\n                    if (!firstEditor) {\r\n                        i++;\r\n                    }\r\n                }\r\n                if (nextTr.children[i] && nextTr.children[i].selectCell) {\r\n                    if (this.selectionMode === 'default' ) {\r\n                        this.clearCheckeds();\r\n                    }\r\n                    nextTr.children[i].selectCell(event, nextTr.children[i]);\r\n                }\r\n            }\r\n            */\r\n        }\r\n    }\r\n\r\n    getRowIdByTr(tr: HTMLElement) {\r\n        if (tr && tr.className.indexOf('f-datagrid-group-row')>-1) {\r\n            return null;\r\n        }\r\n        // let id = tr.getAttribute('id');\r\n        let id = Utils.getRowIdByTr(tr);\r\n\r\n        if (id == null || id == undefined) {\r\n            return null;\r\n        }\r\n\r\n        // id = id.replace('row_', '').replace('_fixedright', '').replace('_fixedleft', '');\r\n\r\n        const rowInfo = this.dfs.findRow(id);\r\n        if (rowInfo) {\r\n            return {...this.dfs.findRow(id), id};\r\n        }\r\n        return null;\r\n    }\r\n\r\n    _beforeSelectRow$(index, data, id) {\r\n        const beforEventParam = {\r\n            rowIndex: index,\r\n            rowData: data,\r\n            gridInstance: this,\r\n            id: id,\r\n            dr: null\r\n        }\r\n        let b$ = of(true);\r\n\r\n        if (this.beforeSelect) {\r\n            const rowisSelected = this.dfs.isRowSelected(id);\r\n            if (!rowisSelected) {\r\n                const _b$ = this.beforeSelect(beforEventParam);\r\n                if (_b$ && _b$.subscribe) {\r\n                    b$ = _b$;\r\n                }\r\n            }\r\n        }\r\n        return b$;\r\n    }\r\n\r\n\r\n    selectNextRow() {\r\n        if (this.selectedRow) {\r\n            const tr = this.selectedRow.dr.el.nativeElement;\r\n            if (tr.nextElementSibling) {\r\n                const { id, data, index } = this.getRowIdByTr(tr.nextElementSibling);\r\n                if (id) {\r\n                    this._beforeSelectRow$(index, data, id ).subscribe((t) => {\r\n                        if (t) {\r\n                            this.selectRow(id, true);\r\n                        }\r\n                    });\r\n                }\r\n                // tr.nextElementSibling.click();\r\n            }\r\n        }\r\n    }\r\n    selectPrevRow() {\r\n        if (this.selectedRow) {\r\n            const tr = this.selectedRow.dr.el.nativeElement;\r\n            if (tr.previousElementSibling) {\r\n                // tr.previousElementSibling.click();\r\n                const { id, data, index } = this.getRowIdByTr(tr.previousElementSibling);\r\n                if (id) {\r\n                    this._beforeSelectRow$(index, data, id ).subscribe((t) => {\r\n                        if (t) {\r\n                            this.selectRow(id, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    removeCellSelectedCls() {\r\n        if (this.currentCell && this.currentCell.cellElement) {\r\n            DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n            this.render2.removeClass(this.currentCell.cellElement, CELL_EDITING_CLS);\r\n        }\r\n\r\n        const selectedCell = this.el.nativeElement.querySelectorAll('.' + CELL_SELECTED_CLS);\r\n        if (selectedCell.length) {\r\n            selectedCell.forEach(n => {\r\n                this.render2.removeClass(n, CELL_SELECTED_CLS);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * éä¸­è¡\r\n     * @param id éä¸­è¡ID\r\n     * @param emit è§¦åselect äºä»¶\r\n     * @param toCurrentPosition æ»å¨æ¡å®ä½å°å½åéæ©ä¸­è¡\r\n     */\r\n    selectRow(id: any, emit = true, toCurrentPosition = false) {\r\n        if (this.selectedRow && this.selectedRow.id === id) {\r\n            if (emit) {\r\n                this.dfs.selectRecord(id);\r\n            }\r\n            \r\n            if (toCurrentPosition) {\r\n                this.scrollToCurrentRow();\r\n            }\r\n            return;\r\n        }\r\n\r\n        const _selectRow = () => {\r\n            \r\n            this.removeCellSelectedCls();\r\n\r\n            if (!this.enableSelectRow) {\r\n                return;\r\n            }\r\n\r\n            if (!this.multiSelect && this.showCheckbox) {\r\n                this.clearCheckeds(false, false);\r\n            }\r\n\r\n            if (this.multiSelect && this.selectionMode === 'default' && !this.enableMorePageSelect) {\r\n                this.clearAll();\r\n            }\r\n\r\n            if (id && (!this.selectedRow || this.selectedRow.id != id)) {\r\n\r\n                const row = this.dfs.findRow(id);\r\n                if (row && this.disableRow) {\r\n                    if (this.disableRow(row.data, row.index)) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                if (emit) {\r\n                    this.dfs.selectRecord(id);\r\n                } else {\r\n                    this.dfs.setSelectRow(id, emit);\r\n                    this.selectedRow = this.dfs.getCurrentRow();\r\n                    if (this.checkOnSelect) {\r\n                        this.checkRows([id]);\r\n                    }\r\n                    this.dgs.setSelecedRow.emit({ id, selected: true });\r\n                }\r\n            } else {\r\n                if (this.checkOnSelect) {\r\n                    this.checkRows([id]);\r\n                }\r\n            }\r\n\r\n            if (toCurrentPosition) {\r\n                this.scrollToCurrentRow();\r\n            }\r\n        }\r\n\r\n\r\n        if (this.isEditing()) {\r\n            if (this.editMode === 'cell') {\r\n                const stopEdit = this.currentCell.cellElement.closeEdit();\r\n                if (stopEdit) {\r\n                    stopEdit.subscribe(_selectRow);\r\n                }\r\n            } else {\r\n                this.endRowEdit();\r\n                _selectRow();\r\n            }\r\n        } else {\r\n            _selectRow();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * æ»å¨æ¡æ»å¨å°å½åè¡çä½ç½®\r\n     */\r\n    scrollToCurrentRow() {\r\n        this.dgs.scrollToCurrentRow.next();\r\n    }\r\n\r\n    unSelectRow(id: any, emit = true) {\r\n        if (id) {\r\n            this.closeAllCellEditor();\r\n\r\n            if (this.currentCell && this.currentCell.rowId == id) {\r\n                this.cancelSelectCell();\r\n            }\r\n\r\n            if (emit) {\r\n                this.dfs.selectRecord(id, false);\r\n            } else {\r\n                this.dfs.setSelectRow(id, false);\r\n                this.selectedRow = null;\r\n                this.dgs.setSelecedRow.emit({ id, selected: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    selectAllRows() {\r\n        if (this.multiSelect && this.enableSelectRow) {\r\n            this.dfs.selectAll();\r\n        }\r\n    }\r\n\r\n    cancelSelectCell() {\r\n        if (this.currentCell) {\r\n            if (this.currentCell.cellElement) {\r\n                this.currentCell.cellElement.cancelSelected();\r\n            }\r\n            if (!this.currentCell.isEditing) {\r\n                this.currentCell = null;\r\n                this.dfs.cancelSelectCell();\r\n            }\r\n        }\r\n    }\r\n\r\n    clearSelections(excludeIds?: string[]) {\r\n        this.dfs.clearSelections(excludeIds);\r\n        this.selectedRow = null;\r\n        this.cancelSelectCell();\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    checkRow(id: any, emit = true) {\r\n        if (this.canOperateCheckbox()) {\r\n            if (emit) {\r\n                this.dfs.checkRecord(id);\r\n            } else {\r\n                this.checkRows([id]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** é©éè¡ï¼ä¸è§¦åéä¸­äºä»¶ */\r\n    checkRows(ids: any[], emit = false) {\r\n        if (ids && ids.length) {\r\n            this.dfs.setCheckedRows(ids, true);\r\n            this.dgs.setCheckedRows.next({ ids, checked: true });\r\n\r\n            if (this.selectionMode === 'default') {\r\n                this.dfs.updateProperty('selections', this.checkeds);\r\n            }\r\n\r\n            // this.cd.detectChanges();\r\n            if (emit) {\r\n                this.checkValues = this.checkeds.map(r => r.id);\r\n                this.checkValuesChange.emit(this.checkValues);\r\n                this.checkedChange.emit(this.checkeds);\r\n            }\r\n\r\n            this.updateAllCheckboxStatus();\r\n        }\r\n    }\r\n\r\n    /** åæ¶é©éï¼ä¸è§¦åéä¸­äºä»¶ */\r\n    unCheckRows(ids: any[], emit = false) {\r\n        if (ids && ids.length) {\r\n            this.dfs.setCheckedRows(ids, false);\r\n            this.dgs.setCheckedRows.next({ ids, checked: false });\r\n            // this.cd.detectChanges();\r\n            if (emit) {\r\n                this.checkValues = this.checkeds.map(r => r.id);\r\n                this.checkValuesChange.emit(this.checkValues);\r\n                this.checkedChange.emit(this.checkeds);\r\n            }\r\n\r\n            this.updateAllCheckboxStatus();\r\n        }\r\n    }\r\n\r\n    checkAllRows(emit = true) {\r\n        if (this.canOperateCheckbox()) {\r\n            this.dfs.checkAll();\r\n            this.dgs.checkAll.emit();\r\n            if (emit) {\r\n                this.checkAll.emit();\r\n            }\r\n        }\r\n    }\r\n\r\n    unCheckRow(id: any, emit = true) {\r\n        if (this.canOperateCheckbox()) {\r\n            if (this.currentCell && this.currentCell.rowId == id) {\r\n                this.cancelSelectCell();\r\n            }\r\n\r\n            if (emit) {\r\n                this.dfs.checkRecord(id, false);\r\n            } else {\r\n                this.unCheckRows([id]);\r\n            }\r\n\r\n            this.updateAllCheckboxStatus();\r\n        }\r\n    }\r\n    /** æ¸ç©ºé©éè¡ï¼é»è®¤åªæ¸ç©ºå½åé¡µçé©é\r\n     * clearAll: æ¸ç©ºææ é»è®¤ä¸º false; å¦åä»æ¸ç©ºå½åé¡µçé©éæ°æ®ã\r\n     */\r\n    clearCheckeds(clearAll = false, emitUnCheckAll = true) {\r\n        this.dfs.clearCheckeds(clearAll);\r\n        this.checkValues = [];\r\n        this.cancelSelectCell();\r\n        if (emitUnCheckAll) {\r\n            this.dgs.uncheckAll.emit();\r\n        }\r\n    }\r\n\r\n    clearAll() {\r\n        this.selectedRow = null;\r\n        this.checkValues = [];\r\n        this.dfs.clearAll();\r\n        this.dgs.uncheckAll.emit();\r\n        this.updateAllCheckboxStatus();\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Resize Column\r\n\r\n    private getResizeProxyPosLeft(e: MouseEvent) {\r\n        const target = e.target as any;\r\n        const dgRect = this.getBoundingClientRect(this.dgContainer);\r\n        const td = target.parentElement;\r\n        const tdLeft = td.getBoundingClientRect().left;\r\n        const deltaEdge = td.offsetWidth - (e.pageX - tdLeft);\r\n        this.resizeColumnInfo.proxyLineEdge = deltaEdge;\r\n        this.resizeColumnInfo.startWidth = td.offsetWidth;\r\n        this.resizeColumnInfo.startX = e.pageX;\r\n        this.resizeColumnInfo.left = tdLeft - dgRect.left - 1 + deltaEdge;\r\n        return e.pageX - dgRect.left - 1 + deltaEdge;\r\n    }\r\n\r\n    private toggleResizeProxy(show = true) {\r\n        let display = 'block';\r\n        if (!show) {\r\n            display = 'none';\r\n        }\r\n        this.render2.setStyle(this.resizeProxyBg.nativeElement, 'display', display);\r\n        this.render2.setStyle(this.resizeProxy.nativeElement, 'display', display);\r\n    }\r\n\r\n    onColumnResizeBegin(e: MouseEvent) {\r\n        if (this.resizeProxy) {\r\n            this.render2.setStyle(document.body, 'cursor', 'e-resize');\r\n            const proxy = this.resizeProxy.nativeElement;\r\n            const proxyPosLeft = this.getResizeProxyPosLeft(e);\r\n            this.render2.setStyle(proxy, 'left', proxyPosLeft + 'px');\r\n\r\n            let top = 0;\r\n            if ((this.enableFilterRow || this.enableSmartFilter) && this.showFilterBar) {\r\n                top += this.filterBarHeight;\r\n            }\r\n\r\n            if (this.showRowGroupPanel) {\r\n                top += this.rowGroupPanelHeight;\r\n            }\r\n\r\n            this.render2.setStyle(proxy, 'top', `${top}px`);\r\n\r\n            if (!this.autoHeight) {\r\n                this.render2.setStyle(proxy, 'height', (this.height - this.pagerHeight) + 'px');\r\n            } else {\r\n                let bottomH = 0;\r\n                if (this.pagination) {\r\n                    bottomH += this.pagerHeight;\r\n                }\r\n                if (this.showFooter) {\r\n                    bottomH += this.footerHeight;\r\n                }\r\n                this.render2.setStyle(proxy, 'height', `calc(100% - ${bottomH}px)`);\r\n            }\r\n            this.toggleResizeProxy();\r\n        }\r\n    }\r\n\r\n    onColumnResize(e: MouseEvent) {\r\n        const proxy = this.resizeProxy.nativeElement;\r\n        const dgRect = this.getBoundingClientRect(this.dgContainer);\r\n        const proxyPosLeft = e.pageX - dgRect.left - 1 + this.resizeColumnInfo.proxyLineEdge;\r\n        if (proxyPosLeft - this.resizeColumnInfo.left > 20) {\r\n            this.render2.setStyle(proxy, 'left', proxyPosLeft + 'px');\r\n        } else {\r\n            this.render2.setStyle(proxy, 'left', (this.resizeColumnInfo.left + 20) + 'px');\r\n        }\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n\r\n    onColumnResizeEnd(e: MouseEvent, col: DataColumn) {\r\n        this.render2.removeStyle(document.body, 'cursor');\r\n        this.toggleResizeProxy(false);\r\n        this.resizeColumnInfo.proxyLineEdge = 0;\r\n\r\n        let newColWidth = this.resizeColumnInfo.startWidth + e.pageX - this.resizeColumnInfo.startX;\r\n\r\n        if (newColWidth < 20) {\r\n            newColWidth = 20;\r\n        }\r\n\r\n        if (col.width > newColWidth) {\r\n            const t = col.width - newColWidth;\r\n            if (!this.fitColumns && this.scrollInstance.elementRef.nativeElement.scrollLeft) {\r\n                const moveLeft = this.scrollInstance.elementRef.nativeElement.scrollLeft - t;\r\n                this.scrollInstance.scrollToX(moveLeft);\r\n            }\r\n        }\r\n\r\n        if (col.width != newColWidth) {\r\n            col.width = newColWidth;\r\n\r\n            if (!this.nowrap && this.showFooter) {\r\n                this.setFooterHeight();\r\n            }\r\n\r\n            if (this.useControlPanel && this.settingService) {\r\n                this.settingService.saveUserConfig(this.id).subscribe(() => {\r\n                    this.dfs.columnResizeEnd();\r\n                    this.dgs.columnResized.emit();\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            this.dfs.columnResizeEnd();\r\n            this.dgs.columnResized.emit();\r\n\r\n            this.updateFixedColumnCssForFastMode(col);\r\n        }\r\n    }\r\n\r\n    /** è¿ååå®½ */\r\n    restituteColumnsSize() {\r\n        this.dfs.resizeColumns(true);\r\n        this.dgs.columnResized.emit();\r\n    }\r\n\r\n    /** ååæ ¼åå®¹èªéåºåå®½ */\r\n    sizeToContent(col: DataColumn, th: ElementRef) {\r\n        if (!this.AutoColumnWidthUseDblclick) {\r\n            return false;\r\n        }\r\n        let longestText = '';\r\n        const items = this.data;\r\n\r\n        for (let i = items.length - 1; i >= 0; i--) {\r\n            // TFS: 356964 20200203\r\n            let value = Utils.getValue(col.field, items[i]);\r\n            if (value !== 0) {\r\n                value = value || '';\r\n            }\r\n            let text = '' + value;\r\n            if (col.formatter && value !== undefined) {\r\n                text = this.colFormatSer.format(value, items[i], col.formatter);\r\n            }\r\n\r\n            if (Utils.getBLen(text) > Utils.getBLen(longestText)) {\r\n                longestText = text;\r\n            } else {\r\n                this.longTextArea.nativeElement.innerHTML = text;\r\n                const w1 = this.longTextArea.nativeElement.offsetWidth;\r\n                this.longTextArea.nativeElement.innerHTML = longestText;\r\n                const w2 = this.longTextArea.nativeElement.offsetWidth;\r\n\r\n                if (w1 > w2) {\r\n                    longestText = text;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.longTextArea.nativeElement.innerHTML = longestText;\r\n        const maxWidth = this.longTextArea.nativeElement.offsetWidth + 26;\r\n\r\n        this.longTextArea.nativeElement.innerHTML = th.nativeElement.innerText;\r\n        let thMinWidth = this.longTextArea.nativeElement.offsetWidth + 26;\r\n\r\n        if (col.sortable) {\r\n            thMinWidth += 24;\r\n        }\r\n\r\n        let newColWidth = (maxWidth > thMinWidth ? maxWidth : thMinWidth);\r\n        const colIndex = this.flatColumns.findIndex(c => c.field === col.field);\r\n        if (colIndex === this.flatColumns.length - 1) {\r\n            newColWidth += 6;\r\n        }\r\n\r\n        if (col.width > newColWidth) {\r\n            const t = col.width - newColWidth;\r\n            if (this.scrollInstance.elementRef.nativeElement.scrollLeft) {\r\n                const moveLeft = this.scrollInstance.elementRef.nativeElement.scrollLeft - t;\r\n                this.scrollInstance.scrollToX(moveLeft < 0 ? 0 : moveLeft);\r\n            }\r\n        }\r\n\r\n        if (col.width != newColWidth) {\r\n            col.width = newColWidth;\r\n            this.dfs.resizeColumns();\r\n            this.dgs.columnResized.emit();\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Changes\r\n    getChanges() {\r\n        return this.dfs.getChanges();\r\n    }\r\n\r\n    acceptChanges() {\r\n        this.dfs.acceptChanges();\r\n    }\r\n\r\n    rejectChanges() {\r\n        this.dfs.rejectChanges();\r\n    }\r\n    //#endregion\r\n\r\n    //#region CRUD\r\n\r\n    appendRow(row: any) {\r\n        this.cancelEdit(null);\r\n        this.dfs.appendRow(row);\r\n        this.dataChange.emit(this.dfs.getData());\r\n        this.rowAppended.emit();\r\n    }\r\n\r\n    updateRow(rowId, newData: { [key: string]: any }) {\r\n        this.dfs.updateRow(rowId, newData);\r\n\r\n        // æ´æ°å½åæ°æ®æºä¸­å¯¹åºçè¡æ°æ®\r\n        this._updateRow(rowId, newData);\r\n\r\n        if (this.currentCell && this.currentCell.isEditing && newData) {\r\n            const { column, cellRef } = this.currentCell;\r\n            if (cellRef && column && column.field && column.editor && column.editor.type.toLowerCase() == 'input-group' && Utils.keysInData(column.field, newData)) {\r\n                const currendRowData = cellRef.rowData;\r\n                const val = this.commonUtils.getValue(column.field, currendRowData);\r\n                if (cellRef.formControl) {\r\n                    cellRef.formControl.patchValue(val);\r\n                }\r\n            }\r\n        }\r\n        // æ´æ°åè®¡è¡æ°æ®\r\n        this.updateFooterData()\r\n\r\n        this.dataChange.emit(this.dfs.getData());\r\n        this.rowUpdated.emit();\r\n\r\n        // å¯ç¨åå¹¶ååæ ¼ï¼åè®¸ç¼è¾æ¶ï¼åå¹¶æ°æ®ä¸åç¡®\r\n        if (this.mergeCell) {\r\n            this.refresh();\r\n        }\r\n    }\r\n\r\n    private _updateRow(rowId, newData: { [key: string]: any }) {\r\n        const row = this.getRows().find((n) => {\r\n            return this.dfs.primaryId(n) === rowId;\r\n        });\r\n        if (row) {\r\n            if (newData) {\r\n                const keys = Object.keys(newData);\r\n                keys.forEach(field => {\r\n                    Utils.setValue(field, newData[field], row);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    refreshRow(rowId) {\r\n        const row = this.dfs.findRow(rowId);\r\n        if (row && row.data) {\r\n            this.dfs.rowUpdate$.emit(row);\r\n        } else {\r\n            this.writeConsole('Can not found row by id. id: ' + rowId);\r\n        }\r\n    }\r\n\r\n\r\n    deleteRow(rowId?: any) {\r\n        this.cancelEdit(rowId, false);\r\n        if (!rowId) {\r\n            if (this.selectValue) {\r\n                rowId = this.selectValue;\r\n            } else {\r\n                throw new Error(`å é¤è¡æ¶ä¸»é®æ è¯ID ä¸è½ä¸ºç©ºã`);\r\n            }\r\n        }\r\n        const deleteRow = this.dfs.deleteRow(rowId);\r\n        this.dataChange.emit(this.dfs.getData());\r\n        this.currentCell = null;\r\n        this.dfs.updateProperty('currentCell', null);\r\n        this.cd.detectChanges();\r\n        this.rowDeleted.emit(deleteRow);\r\n    }\r\n\r\n    validateRow() { }\r\n\r\n    insertRow() { }\r\n\r\n    //#endregion\r\n\r\n    //#region Scrolling\r\n\r\n    scrollToLeft() {\r\n        if (this.scrollInstance) {\r\n            this.scrollInstance.scrollToLeft(0, 200);\r\n        }\r\n    }\r\n\r\n    scrollToRight() {\r\n        if (this.scrollInstance) {\r\n            this.scrollInstance.scrollToRight(0, 200);\r\n        }\r\n    }\r\n\r\n    scrollToTop() {\r\n        if (this.scrollInstance) {\r\n            this.scrollInstance.scrollToTop(0, 100);\r\n            const scrollInfo = this.dfs.getState().scrollInfo;\r\n            if (scrollInfo) {\r\n                scrollInfo.y = 0;\r\n                this.dfs.updateProperty('scrollInfo', scrollInfo);\r\n            }\r\n        }\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if (this.scrollInstance) {\r\n            this.scrollInstance.scrollToBottom(0, 100);\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    private _setColumnReadonly(cols: DataColumn[], field: string, readonly = true) {\r\n        if (cols && cols.length && field) {\r\n            const col = cols.find(n => n.field === field);\r\n            if (col) {\r\n                col.readonly = readonly;\r\n            }\r\n        }\r\n    }\r\n\r\n    setColumnReadonly(field: string, readonly = true) {\r\n        this._setColumnReadonly(this.colGroup.leftFixed, field, readonly);\r\n        this._setColumnReadonly(this.colGroup.rightFixed, field, readonly);\r\n        this._setColumnReadonly(this.colGroup.normalColumns, field, readonly);\r\n    }\r\n\r\n    // æ¯å¦ä¸ºå¤è¡¨å¤´\r\n    isMultiHeader() {\r\n        return this.columns && this.columns.length > 1 && Array.isArray(this.columns[1]);\r\n    }\r\n\r\n    toggleVisibleColumn(fields: string[], visible = true) {\r\n        if (!this.isMultiHeader()) {\r\n            this.columns.forEach((cols: DataColumn[]) => {\r\n                fields.forEach(field => {\r\n                    const col = cols.find(c => c.field === field || c.id === field);\r\n                    if (col) {\r\n                        col.visible = visible;\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            // å¤è¡¨å¤´\r\n            const allCols = flatten<DataColumn>(this.columns);\r\n\r\n            allCols.forEach(p => {\r\n                if (p.origianlColSpan === undefined) {\r\n                    p.origianlColSpan = p.colspan;\r\n                }\r\n            });\r\n\r\n            fields.forEach(field => {\r\n                const _col = allCols.find(col => col.field === field || col.id === field);\r\n                if (_col) {\r\n\r\n                    if (_col.visible === visible) {\r\n                        return;\r\n                    }\r\n\r\n                    _col.visible = visible;\r\n                    const parents = DatagridColumnsHelper.getParentColumns(_col, allCols);\r\n                    const childs = DatagridColumnsHelper.getChildColumns(_col, allCols);\r\n                    childs.forEach(c => {\r\n                        c.visible = visible;\r\n                    });\r\n                    if (visible && childs.length) {\r\n                        _col.colspan = _col.origianlColSpan;\r\n                    }\r\n\r\n                    const _colspan = _col.colspan || 1;\r\n                    parents.forEach(p => {\r\n                        if (!visible) {\r\n                            p.colspan = p.colspan - _colspan;\r\n                        } else {\r\n                            const _childs = allCols.filter(n => n.parentId === p.id && n.visible);\r\n                            p.colspan = _childs.reduce((r, c) => {\r\n                                r = r + (c.colspan || 1);\r\n                                return r;\r\n                            }, 0);\r\n                        }\r\n\r\n                        p.visible = !!p.colspan;\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getColumn(field: string) {\r\n        const allCols = flatten<DataColumn>(this.columns);\r\n        return allCols.find(n => n.field === field || n.id === field);\r\n    }\r\n\r\n    showColumn(field: string | string[], reload = true) {\r\n        if (typeof field === 'string') {\r\n            this.toggleVisibleColumn([field], true);\r\n        } else {\r\n            this.toggleVisibleColumn(field, true);\r\n        }\r\n        this.columnsChanged(reload);\r\n    }\r\n\r\n    hideColumn(field: string | string[], reload = true) {\r\n        if (typeof field === 'string') {\r\n            this.toggleVisibleColumn([field], false);\r\n        } else {\r\n            this.toggleVisibleColumn(field, false);\r\n        }\r\n        this.columnsChanged(reload);\r\n    }\r\n\r\n    updateColumn(field: string, columnObject: { [key: string]: any }, detectChange = true) {\r\n        this.columns.forEach((cols: DataColumn[]) => {\r\n            let column = cols.find(col => col.field === field);\r\n            if (column) {\r\n                column = Object.assign(column, columnObject);\r\n            }\r\n        });\r\n\r\n        if (detectChange) {\r\n            this.columnsChanged();\r\n        }\r\n    }\r\n\r\n    setColumnFormatter(field: string, formatter: any, detectChange = true) {\r\n        this.columns.forEach((cols: DataColumn[]) => {\r\n            const column = cols.find(col => col.field === field);\r\n            if (column) {\r\n                column.formatter = formatter;\r\n            }\r\n        });\r\n\r\n        if (detectChange) {\r\n            this.columnsChanged();\r\n        }\r\n    }\r\n\r\n    updateColumnFormatterOptions(field: string, formatterOptions: any, detectChange = true) {\r\n        this.columns.forEach((cols: DataColumn[]) => {\r\n            const column = cols.find(col => col.field === field);\r\n            if (column && column.formatter) {\r\n                const colFormatter = column.formatter as any;\r\n                colFormatter.options = colFormatter.options || {};\r\n                colFormatter.options = Object.assign(colFormatter.options, formatterOptions || {});\r\n            }\r\n        });\r\n\r\n        if (detectChange) {\r\n            this.columnsChanged();\r\n        }\r\n    }\r\n\r\n    setColumnTitle(field: string, title: string, detectChange = true) {\r\n        this.columns.forEach((cols: DataColumn[]) => {\r\n            const column = cols.find(col => col.field === field);\r\n            if (column) {\r\n                column.title = title;\r\n            }\r\n        });\r\n\r\n        if (detectChange) {\r\n            this.columnsChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æåº\r\n     * @param sortName æåºå­æ®µï¼å¦ï¼ 'name,age'\r\n     * @param sortOrder æåºæ¹å¼ï¼å¦ï¼'desc, asc'\r\n     */\r\n    sort(sortName?: string, sortOrder?: string) {\r\n        if (sortName === null || sortName === '' || sortOrder === null || sortOrder === '') {\r\n            this.clearSort();\r\n        } else {\r\n            if (sortName && sortOrder) {\r\n                // this.updateSortInfo(sortName, sortOrder);\r\n                this.sortName = sortName;\r\n                this.sortOrder = sortOrder;\r\n                this.dfs.setSortInfo(this.sortName, this.sortOrder);\r\n            }\r\n\r\n            if (!this.remoteSort) {\r\n                this.dfs.clientSort();\r\n            }\r\n            this.onColumnSorted();\r\n        }\r\n    }\r\n\r\n    clearSort() {\r\n        this.sortName = '';\r\n        this.sortOrder = '';\r\n        this.dfs.setSortInfo('', '');\r\n        if (!this.remoteSort) {\r\n            if (this.data && this.data.length) {\r\n                this.dfs.clearSort();\r\n            }\r\n        }\r\n        this.onColumnSorted();\r\n    }\r\n\r\n    onColumnSorted() {\r\n        let params = null;\r\n        if (this.sortName && this.sortOrder) {\r\n            const orders = this.sortOrder.split(',');\r\n            params = this.sortName.split(',').reduce((r, n, i) => {\r\n                r[n] = orders[i] || 'asc';\r\n                return r;\r\n            }, {});\r\n        }\r\n\r\n        if (!this.remoteSort) {\r\n            this.dfs.clientSort();\r\n        }\r\n\r\n        this.columnSorted.emit(params);\r\n    }\r\n\r\n    updateSortInfo(newSortName, newSortOrder) {\r\n        const sortName = this.sortName;\r\n        const sortOrder = this.sortOrder;\r\n        let sortFields = [];\r\n        let sortOrders = [];\r\n        if (sortName) {\r\n            sortFields = sortName.split(',');\r\n            sortOrders = sortOrder.split(',');\r\n        }\r\n\r\n        const _sortFields = newSortName.split(',');\r\n        const _sortOrders = newSortOrder.split(',');\r\n\r\n\r\n        _sortFields.forEach((nField, nIndex) => {\r\n            const colOrder = _sortOrders[nIndex] || 'asc';\r\n            let newOrder = colOrder;\r\n            const i = sortFields.findIndex(n => n === nField);\r\n            if (i >= 0) {\r\n                const _order = sortOrders[i] === 'asc' ? 'desc' : 'asc';\r\n                newOrder = _order;\r\n                if (this.multiSort && newOrder === 'asc') {\r\n                    newOrder = undefined;\r\n                    sortFields.splice(i, 1);\r\n                    sortOrders.splice(i, 1);\r\n                } else {\r\n                    sortOrders[i] = _order;\r\n                }\r\n\r\n            } else {\r\n                if (this.multiSort) {\r\n                    sortFields.push(nField);\r\n                    sortOrders.push(colOrder);\r\n                } else {\r\n                    sortFields = [nField];\r\n                    sortOrders = [colOrder];\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sortName = sortFields.join(',');\r\n        this.sortOrder = sortOrders.join(',');\r\n    }\r\n    /** åè®¾ç½® */\r\n    showControlPanel($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        const self = this;\r\n        if (this.useControlPanel && this.settingService) {\r\n            this.checkSettingHttp();\r\n            this.settingService.show(self);\r\n        }\r\n    }\r\n\r\n    checkSettingHttp() {\r\n        if (!this.settingService.httpRestService || !this.settingService.httpRestService.befRepository) {\r\n            const settingsHttp = this.inject.get(GRID_SETTINGS_HTTP, null);\r\n            this.settingService.httpRestService = settingsHttp;\r\n        }\r\n    }\r\n\r\n    disableHeader(flag = true) {\r\n        this.dgs.disableHeader.emit(flag);\r\n    }\r\n\r\n    /** è·åç¨æ·ä¸ªæ§åè®¾ç½® */\r\n    private userProfileSetting(settings) {\r\n\r\n        const { sortInfo, viewColumns, groupField, columnFormat, expandGroupRows, multiHeaders  } = settings;\r\n        let _sortName, _sortOrder;\r\n        if (sortInfo) {\r\n            const { sortName, sortOrder } = sortInfo;\r\n            _sortName = sortName;\r\n            _sortOrder = sortOrder\r\n            if (sortName && sortName.length) {\r\n                this.sortName = sortName.join(',');\r\n                if (sortOrder) {\r\n                    this.sortOrder = sortOrder.join(',');\r\n                }\r\n            }\r\n\r\n            this['__sortInfo'] = sortInfo;\r\n        }\r\n\r\n        if (this.enableSetMultiHeaders && multiHeaders && (multiHeaders.viewCols|| []).length) {\r\n            const gridInitOptions = this.dfs['_state'].initialOptions;\r\n            const _cols = this.settingService.getMultiHeaderColumns(multiHeaders.viewCols, gridInitOptions);\r\n            if (_cols) {\r\n                this.columns = _cols;\r\n                this.addControlCol();\r\n            }\r\n        } else {\r\n            if (viewColumns && viewColumns.length) {\r\n                this.columns = this.columns.map(cols => {\r\n                    this.settingService.updateColumnFormat(cols, columnFormat, this);\r\n                    return this.settingService.newVisibleOrderColumns(cols, viewColumns, columnFormat, this);\r\n                });\r\n                this.addControlCol();\r\n            }\r\n        }\r\n        \r\n        this.columns.forEach(cols => {\r\n            cols.forEach(col => {\r\n                if (_sortName && _sortName.length) {\r\n                    const i = _sortName.indexOf(col.field);\r\n                    if (i > -1) {\r\n                        col.order = _sortOrder[i];\r\n                    }\r\n                }\r\n\r\n                if (!col.field || col.field.indexOf('farris-datagrid-column_') > -1) {\r\n                    col.filter = false;\r\n                }\r\n            });\r\n        });\r\n\r\n        if (this.groupRows && (groupField !== null && groupField !== undefined)) {\r\n            this.groupField = groupField;\r\n            this.expandGroupRows = expandGroupRows === undefined ? this.expandGroupRows: expandGroupRows;\r\n        }\r\n\r\n        this.settingService.setCurrentConfigs(settings);\r\n    }\r\n\r\n    // æ¯å¦ä¸ºå½åæ´»å¨çè¡¨æ ¼\r\n    private isActived() {\r\n        // å¤æ­gridæ¯å¦ä¸ºæ´»å¨ä¸å¯è§çï¼é¿åSPA ä¸å¤ä¸ªgridä¸èµ·è¿è¡ç¸å³çæä½ï¼æ¯å¦ä¸ä¸æ¹åé®ç§»å¨\r\n        return DomHandler.hasClass(this.dgContainer.nativeElement, this._active_datagrid_cls) && this.dgContainer.nativeElement.offsetParent;\r\n    }\r\n\r\n    // æ¸çæ æçDOM\r\n    private cleanDom() {\r\n        // æ¸ç TOOL-TIP\r\n        const tips = document.querySelectorAll('.datagrid-cell-tooltip');\r\n        if (tips && tips.length) {\r\n            tips.forEach(n => {\r\n                n.remove();\r\n            });\r\n        }\r\n    }\r\n\r\n    cellIsReadOnly(col: DataColumn, rowData) {\r\n        let readOnly = false;\r\n        if (this.disableRow) {\r\n            readOnly = this.disableRow(rowData);\r\n        }\r\n\r\n        if (!readOnly) {\r\n            if (col.readonly !== undefined) {\r\n                if (typeof col.readonly === 'boolean') {\r\n                    readOnly = col.readonly;\r\n                } else if (typeof col.readonly === 'function') {\r\n                    readOnly = col.readonly(rowData);\r\n                }\r\n            }\r\n        }\r\n        return readOnly;\r\n    }\r\n\r\n\r\n    private groupFieldChanged() {\r\n        this.columnsChanged();\r\n        if (this.settingService) {\r\n            this.checkSettingHttp();\r\n            this.settingService.saveUserConfig(this.id).subscribe();\r\n        }\r\n        this.groupFieldChange.emit({ newGroupField: this.groupField, grid: this });\r\n    }\r\n\r\n    removeGroupField(field: string) {\r\n        const fields = this.groupField.split(',');\r\n        const delIdx = fields.indexOf(field);\r\n        if (delIdx > -1) {\r\n            fields.splice(delIdx, 1).join(',');\r\n        }\r\n        this.groupField = fields.join(',');\r\n        this.toggleVisibleColumn([field], true);\r\n        this.groupFieldChanged();\r\n    }\r\n\r\n    clearAllGrouppingField($event) {\r\n        this.showLoading();\r\n        setTimeout(() => {\r\n            const fields = this.groupField.split(',');\r\n            this.groupField = '';\r\n            this.toggleVisibleColumn(fields, true);\r\n            this.groupFieldChanged();\r\n            this.closeLoading();\r\n        });\r\n    }\r\n\r\n    setGroupFields(groupFields) {\r\n        this.groupField = groupFields;\r\n        this.columnsChanged();\r\n    }\r\n\r\n    activeDataGrid(active = true) {\r\n        const grids = document.querySelectorAll('.f-datagrid.datagrid-active');\r\n        if (grids.length) {\r\n            grids.forEach(n => {\r\n                this.render2.removeClass(n, this._active_datagrid_cls);\r\n            });\r\n        }\r\n        if (active) {\r\n            this.render2.addClass(this.dgContainer.nativeElement, this._active_datagrid_cls);\r\n        }\r\n    }\r\n\r\n\r\n    onDatagridContainerFocus($event) {\r\n        if (!this.disabled) {\r\n            this.activeDataGrid();\r\n        }\r\n    }\r\n\r\n\r\n    private setShadowColumnForFastMode() {\r\n        if (this.fast) {\r\n            const fixedLeft = this.flatColumns.filter(n => n.fixed === 'left');\r\n            const fixedRight = this.flatColumns.filter(n => n.fixed === 'right');\r\n\r\n            if (fixedLeft && fixedLeft.length) {\r\n                let leftWidthTotal = 0;\r\n                if (this.showCheckbox) {\r\n                    leftWidthTotal += 36;\r\n                }\r\n                if (this.showLineNumber) {\r\n                    leftWidthTotal += this.lineNumberWidth;\r\n                }\r\n                fixedLeft.forEach((n, index) => {\r\n                    leftWidthTotal += index ? fixedLeft[index - 1].width : 0;\r\n                    n.left = leftWidthTotal;\r\n                });\r\n\r\n                fixedLeft[fixedLeft.length - 1]['leftShadowCol'] = true;\r\n\r\n                this.dfs.getColumn(fixedLeft[fixedLeft.length - 1].field)['leftShadowCol'] = true;\r\n            }\r\n\r\n            if (fixedRight && fixedRight.length) {\r\n                fixedRight[0]['rightShadowCol'] = true;\r\n                let rightWidthTotal = fixedRight.reduce((r, c) => {\r\n                    return r + c.width;\r\n                }, 0);\r\n\r\n                fixedRight.forEach((n, index) => {\r\n                    rightWidthTotal -= n.width;\r\n                    n.right = rightWidthTotal;\r\n                });\r\n\r\n                this.dfs.getColumn(fixedRight[0].field)['rightShadowCol'] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // ååå¯¹é½æ¹å¼æ ·å¼å¨æçæ\r\n    private setCellStyle() {\r\n\r\n        if (!this.flatColumns || !this.flatColumns.length) {\r\n            return;\r\n        }\r\n\r\n        const cssarr = [];\r\n\r\n        const  verticalAlign = (column) => {\r\n            let va = 'center';\r\n            switch (column.valign) {\r\n                case 'top':\r\n                    va = 'flex-start';\r\n                    break;\r\n                case 'bottom':\r\n                    va = 'flex-end';\r\n                    break;\r\n                default:\r\n                    va = 'center';\r\n                    break;\r\n            }\r\n            return va;\r\n        };\r\n\r\n        const horizontalAlign = (column) => {\r\n            let ha = 'flex-start';\r\n            if (column.align === 'right') {\r\n                ha = 'flex-end';\r\n            } else if (column.align === 'center') {\r\n                ha = 'center';\r\n            }\r\n            return ha;\r\n        };\r\n\r\n        this.setShadowColumnForFastMode();\r\n\r\n        this.flatColumns.forEach(col => {\r\n            const css = `${this.customStyleKey()} .cell-text-align__${col.field.replace(/\\./g, '_')} {align-items: ${verticalAlign(col)}, justify-content: ${horizontalAlign(col)}}`;\r\n            cssarr.push(css);\r\n\r\n            if (this.fast) {\r\n                if (col.fixed === 'left' || col.fixed === 'right') {\r\n                    let fixed = `${this.customStyleKey()} .f-datagrid-fast__fixed-${col.fixed}[field=\"${col.field}\"]{`;\r\n                    if (col.fixed === 'left') {\r\n                        fixed += `left: ${col.left}px}`;\r\n                    }\r\n\r\n                    if (col.fixed === 'right') {\r\n                        fixed += `right: ${col.right}px}`;\r\n                    }\r\n\r\n                    cssarr.push(fixed);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.dgs.appendCssRules(cssarr);\r\n    }\r\n\r\n    private updateFixedColumnCssForFastMode(col: DataColumn) {\r\n        if (this.fast) {\r\n            // update css.\r\n            const colIndex = this.flatColumns.findIndex(n => n.field === col.field);\r\n            const nextColumn = this.flatColumns[colIndex + 1];\r\n            this.setShadowColumnForFastMode();\r\n            if (nextColumn && nextColumn.fixed) {\r\n                const ruleName =  `${this.customStyleKey()} .f-datagrid-fast__fixed-${nextColumn.fixed}[field=\"${nextColumn.field}\"]`;\r\n                const stylecss = ruleName + '{' + nextColumn.fixed + ':' + nextColumn[nextColumn.fixed] + 'px}';\r\n                this.dgs.appendCssRules([stylecss]);\r\n            }\r\n        }\r\n    }\r\n\r\n    expandGroupRow(groupRowIndex: number) {\r\n        this.dgs.toggleGroupRow$.emit({ expand: true, groupRowIndex });\r\n    }\r\n\r\n    collapseGroupRow(groupRowIndex: number) {\r\n        this.dgs.toggleGroupRow$.emit({ expand: false, groupRowIndex });\r\n    }\r\n   \r\n\r\n    expandAllGroupRows() {\r\n        this.dgs.toggleAllGroupRows$.emit({ expand: true });\r\n    }\r\n\r\n    collapseAllGroupRows() {\r\n        this.dgs.toggleAllGroupRows$.emit({ expand: false });\r\n    }\r\n\r\n    // #382788 \r\n    private checkFilterValues(conditions: any) {\r\n        const _conditions = cloneDeep(conditions);\r\n        if (this.enableSmartFilter) {\r\n            const filterFields = Array.from(new Set(_conditions.map(n => n.FilterField)));\r\n            filterFields.forEach((n: string) => {\r\n                const col = this.dfs.getColumn(n);\r\n                if (col && col.dataType === 'datetime') {\r\n                    const dateFilters = _conditions.filter(f => f.FilterField === n);\r\n                    const contrlData = this.smartFilterService.controlData.find(ctrl => ctrl.labelCode == n);\r\n                    const val = dateFilters[0].Value;\r\n                    if (val.indexOf(':') === -1) {\r\n                        if (dateFilters.length === 1) {\r\n                            dateFilters[0].Value = val + ' 00:00:00';\r\n                            // éåºé´\r\n                            if (contrlData.value.single) {\r\n                                dateFilters[0].Compare = Compare.GreaterOrEqual;\r\n                                const less = cloneDeep(dateFilters[0]);\r\n                                less.Value = val + ' 23:59:59';\r\n                                less.Compare = Compare.LessOrEqual;\r\n                                const index = _conditions.findIndex(f => f.FilterField === n);\r\n                                _conditions.splice(index + 1, 0, less);\r\n                            } else {\r\n                                if (contrlData.value.endValue) {\r\n                                    dateFilters[0].Value = val + ' 23:59:59';\r\n                                }\r\n                            }\r\n                        } else {\r\n                            dateFilters[0].Value = dateFilters[0].Value + ' 00:00:00';\r\n                            dateFilters[1].Value = dateFilters[1].Value + ' 23:59:59';\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        return _conditions;\r\n    }\r\n        \r\n    getActionColumn() {\r\n        // æä½åid ç± åè¡¨æ è¯_caozuolie\r\n        return flatten(this.dfs.getState().initialOptions.designerColumns).find((n: any) => n.id && n.id.indexOf('_caozuolie') > -1);\r\n    }\r\n\r\n    hideActionColumn() {\r\n        const czl: any = this.getActionColumn();\r\n        if (czl) {\r\n            this.hideColumn(czl.field);\r\n        }\r\n    }\r\n\r\n    showActionColumn() {\r\n        const czl: any = this.getActionColumn();\r\n        if (czl) {\r\n            this.showColumn(czl.field);\r\n        }\r\n    }\r\n\r\n    /** \r\n     * æ¯æå¨å±è®¾ç½®è¡¨å¤´ãåè®¡è¡ãæ°æ®è¡ãè¡å·åå®½ãå¤éæ¡åå®½\r\n     * åé¡µæ¡é«åº¦å¯éè¿éç½®æ ·å¼å®ç°ï¼å¦ï¼\r\n     *  .f-datagrid-pager {\r\n            height: 60px!important;\r\n        }\r\n     * */ \r\n    applyNewSize(sizeConfig: SizeConfig) {\r\n        if (!sizeConfig || Array.isArray(sizeConfig) || typeof sizeConfig === 'boolean') {\r\n            this.writeConsole('ä¼ å¥çåæ°ç±»åä¸å¹éï¼The parameter type is incorrect!', 'warn');\r\n            return;\r\n        }\r\n\r\n        const _maxNum = 100;\r\n        \r\n        // é»è®¤å¼\r\n        const defautlValues: SizeConfig = {\r\n            'headerHeight': 35, \r\n            'footerHeight': 31, \r\n            'rowHeight': 31, \r\n            'checkboxColumnWidth': 36, \r\n            'lineNumberWidth': 36,\r\n            'filterRowHeight': 40 \r\n        };\r\n\r\n        // ææå±æ§åç§°\r\n        const props = ['headerHeight', 'footerHeight', 'rowHeight', \r\n                        'checkboxColumnWidth', 'lineNumberWidth', 'filterRowHeight'];\r\n        const keys = Object.keys(sizeConfig);\r\n\r\n        if (keys && keys.length) {\r\n            // æ¸çä¸æ¯æçå±æ§ï¼\r\n            keys.forEach(k => {\r\n                if (props.find(n => n === k)) {\r\n                    let v = sizeConfig[k];\r\n                    if (v == null || isNaN(v)) {\r\n                        delete sizeConfig[k];\r\n                    } else {\r\n                        if (typeof v === 'string' && !!parseInt(v, 10)) {\r\n                            v = parseInt(v, 10);\r\n                        } else if (typeof v === 'number') {\r\n                            v = Math.floor(v);\r\n                        }\r\n                        // å¼è®¾å¼\r\n                        if (isNaN(v) || v <= 0 || v < defautlValues[k]) {\r\n                            sizeConfig[k] = defautlValues[k];\r\n                        } else {\r\n                            sizeConfig[k] = v > _maxNum ? _maxNum: v;\r\n                        }\r\n                    }\r\n                } else {\r\n                    delete sizeConfig[k];\r\n                }\r\n            });\r\n        }\r\n\r\n        const propKeys = Object.keys(sizeConfig);\r\n\r\n        if (propKeys.length) {\r\n            this.useThemes = false;\r\n            Object.assign(this, sizeConfig);\r\n            this._footerRowHeight = this.footerHeight;\r\n\r\n            const minRowHeight = `min_row_height_${this.rowHeight}`;\r\n            this.dgs.removeCssRule(`${this.customStyleKey()} .${minRowHeight}`);\r\n            this.renderCustomStyle2({style: { \"min-height\": this.rowHeight + 'px', height:  this.rowHeight + 'px'}}, null, minRowHeight);\r\n\r\n            \r\n            const minFooterRowHeight = `min_footer_row_height_${this._footerRowHeight}`;\r\n            this.dgs.removeCssRule(`${this.customStyleKey()} .${minFooterRowHeight}`);\r\n            this.renderCustomStyle2({ style: { \"min-height\": `${this._footerRowHeight}px`,height:  this.rowHeight + 'px'}}, null, minFooterRowHeight);\r\n\r\n            this.dfs['updateState'](sizeConfig, false);\r\n            of(1).pipe(debounceTime(200)).subscribe(() => {\r\n                this.setHeaderHeight();\r\n                this.setRowHeight();\r\n                this.setFooterHeight();\r\n                this.columnsChanged();\r\n                if (!this.nowrap) {\r\n                    this.dgs.cellContentWrapChanged.emit();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { cloneDeep } from 'lodash-es';\r\nimport { IdService } from '@farris/ui-common';\r\nimport {\r\n    Component, OnInit, ViewChild, TemplateRef, Renderer2, ElementRef,\r\n    NgZone, Injector, Input, OnDestroy, HostListener, Optional\r\n} from '@angular/core';\r\nimport { FilterPanelService, FilterPanelComponent } from '@farris/ui-filter-panel';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridSmartFilterService } from '../../services/datagrid-smart-filter.service';\r\n\r\n@Component({\r\n    selector: 'datagrid-smart-filter, [datagrid-smart-filter]',\r\n    templateUrl: 'datagrid-smart-filter.component.html',\r\n    providers: [\r\n        FilterPanelService\r\n    ]\r\n})\r\nexport class DatagridSmartFilterComponent implements OnInit, OnDestroy {\r\n    @Input() column;\r\n    @Input() filterData = null;\r\n    @Input() disabled = false;\r\n\r\n    @ViewChild('sort') sortTmp: TemplateRef<any>;\r\n\r\n    filterPanelRef: FilterPanelComponent;\r\n    private idService: IdService;\r\n    private smartFilterDataChanged$ = null;\r\n    private removeFilter$ = null;\r\n    private clearAllFilter$ = null;\r\n    private smartFilterEvents = [];\r\n    constructor(\r\n        private render: Renderer2, private el: ElementRef,\r\n        private zone: NgZone, private inject: Injector,\r\n        private filterPanelService: FilterPanelService,\r\n        private smartFilterSer: DatagridSmartFilterService,\r\n        @Optional() private dg: DatagridComponent\r\n        ) {\r\n            this.idService = this.inject.get(IdService, null);\r\n        }\r\n\r\n    ngOnInit() {\r\n\r\n        if (!this.removeFilter$) {\r\n            this.removeFilter$ = this.smartFilterSer.removeFilter.subscribe((e: any) => {\r\n                if (e && e.labelCode  === this.column.field) {\r\n                    this.filterData = null;\r\n                    this.render.removeClass(this.el.nativeElement, 'active');\r\n                }\r\n            });\r\n\r\n            this.smartFilterEvents.push(this.removeFilter$);\r\n        }\r\n\r\n        if (!this.clearAllFilter$) {\r\n            this.clearAllFilter$ = this.smartFilterSer.clearAllFilter.subscribe( () => {\r\n                this.filterData = null;\r\n                this.render.removeClass(this.el.nativeElement, 'active');\r\n            });\r\n\r\n            this.smartFilterEvents.push(this.clearAllFilter$);\r\n        }\r\n        if (this.dg && !this.smartFilterDataChanged$) {\r\n            this.smartFilterDataChanged$ = this.dg.dgs['smartFilterDataChange'].subscribe((e: any) => {\r\n                if (e && this.column.field === e.fieldCode) {\r\n                    this.filterData.value = e.value;\r\n                    this.filterData.control.single = e.control.single;\r\n                }\r\n            });\r\n            this.smartFilterEvents.push(this.smartFilterDataChanged$);\r\n        }\r\n\r\n        this.dg.dgs.clearFilter.subscribe(() => {\r\n            this.filterData = null;\r\n            this.dg.smartFilterResult = { controlData: [], conditions: [] };\r\n            this.smartFilterSer.clearAll();\r\n            this.render.removeClass(this.el.nativeElement, 'active');\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.filterPanelRef) {\r\n            this.filterPanelService.hidePanel();\r\n            this.filterPanelRef = null;\r\n        }\r\n\r\n        if (this.smartFilterEvents && this.smartFilterEvents.length) {\r\n            this.smartFilterEvents.forEach(n => {\r\n                n.unsubscribe();\r\n                n = null;\r\n            });\r\n\r\n            this.smartFilterEvents = [];\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private getFilterData() {\r\n        const { field, title } = this.column;\r\n        if (!this.filterData) {\r\n            this.filterData = this.smartFilterSer.controlData.find(n => n.id === field);\r\n        }\r\n\r\n        if (!this.filterData) {\r\n            this.filterData = {\r\n                id: field,\r\n                labelCode: field,\r\n                code: field,\r\n                name: title,\r\n                control: this.smartFilterSer.getColumnFilterData(this.column),\r\n                placeHolder: '',\r\n                value: {\r\n                    value: ''\r\n                }\r\n            };\r\n        }\r\n        // tfs 578285\r\n        if (this.filterData.value && this.filterData.control.controltype.indexOf('flexible') > -1) {\r\n            if (this.filterData.value.single) {\r\n                delete this.filterData.value.startValue;\r\n                delete  this.filterData.value.endValue;\r\n            } else {\r\n                this.filterData.value.value = '';\r\n            }\r\n        }\r\n\r\n        return cloneDeep(this.filterData);\r\n    }\r\n\r\n\r\n    private getPanelPosition($event) {\r\n        let x = $event.pageX - 33;\r\n        const y = $event.pageY +  9;\r\n        const targetRect = $event.target.getBoundingClientRect();\r\n        let moveArrow = 0;\r\n        if (window.innerWidth - x < 380) {\r\n            const i = 380 - (window.innerWidth - x);\r\n            x = x - i - 20;\r\n            moveArrow = targetRect.left - x;\r\n        }\r\n\r\n        return { x, y, moveArrow};\r\n    }\r\n\r\n    private hideFilterPanel() {\r\n        if (this.filterPanelRef) {\r\n            this.filterPanelService.hidePanel();\r\n            this.filterPanelRef = null;\r\n            if (!this.filterData ||  (this.filterData.control.controltype === 'bool-check' ? !this.filterData.value.value : !this.filterData.valueText)) {\r\n                this.render.removeClass(this.el.nativeElement, 'active');\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearColumnFilter(e) {\r\n        this.filterData = null;\r\n        this.hideFilterPanel();\r\n        this.smartFilterSer.removeCondition(e);\r\n    }\r\n\r\n    showFilterPanel($event) {\r\n        $event.stopPropagation();\r\n\r\n        this.render.addClass(this.el.nativeElement, 'active');\r\n        const { x, y, moveArrow } = this.getPanelPosition($event);\r\n        this.filterPanelRef = this.filterPanelService.showPanel({\r\n            left: x,\r\n            top: y,\r\n            item: this.getFilterData(),\r\n            panelExtendTemplate: this.column.sortable ? this.sortTmp : null,\r\n            localStorageKey: 'smartfilter_' + this.dg.dgs.createConfigKey(this.dg.id),\r\n            target: $event.target\r\n        });\r\n\r\n        if (moveArrow) {\r\n            const arrowEl = this.filterPanelRef['el'].querySelector('.f-filter-panel-arrow');\r\n            if (arrowEl) {\r\n                this.render.setStyle(arrowEl, 'left', `${moveArrow}px`);\r\n            }\r\n        }\r\n\r\n        this.filterPanelRef.dataChange.subscribe(item => {\r\n            if (this.filterData && this.filterData.id == item.id) {\r\n                if (item.value && item.value.single !== undefined) {\r\n                    this.filterData.value = item.value;\r\n                    this.filterData.control.single = item.value.single;\r\n                }\r\n            }\r\n        })\r\n\r\n        this.filterPanelRef.hidePanel.subscribe(e => {\r\n            this.hideFilterPanel();\r\n        });\r\n\r\n        this.filterPanelRef.filterSubmit.subscribe(e => {\r\n            \r\n            if (e.filter && e.filter.length) {\r\n                this.filterData = e.item || null;\r\n                this.hideFilterPanel();\r\n                this.smartFilterSer.filterConditionChanged({ conditions: e.filter, controlData: e.item , from: 'panel'});\r\n            } else {\r\n                this.clearColumnFilter(e.item);\r\n            }\r\n        });\r\n\r\n        this.filterPanelRef.clearFilter.subscribe((e: any) => {\r\n            this.clearColumnFilter(e);\r\n        });\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick($event) {\r\n        $event.stopPropagation();\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        this.showFilterPanel($event);\r\n        return false;\r\n    }\r\n\r\n    onSort($event, order) {\r\n        $event.stopPropagation();\r\n\r\n        if (this.column.order === order) {\r\n            this.column.order = '';\r\n        } else {\r\n            this.column.order = order;\r\n        }\r\n\r\n        const sortName = this.dg.sortName;\r\n        const sortOrder = this.dg.sortOrder;\r\n        let sortFields = [];\r\n        let sortOrders = [];\r\n        if (sortName) {\r\n            sortFields = sortName.split(',');\r\n            sortOrders = sortOrder.split(',');\r\n        }\r\n\r\n        let newOrder =  this.column.order;\r\n        const i = sortFields.findIndex(n => n === this.column.field);\r\n        if (i >= 0) {\r\n            if (newOrder === '') {\r\n                newOrder = undefined;\r\n                sortFields.splice(i, 1);\r\n                sortOrders.splice(i, 1);\r\n            } else {\r\n                sortOrders[i] = newOrder;\r\n            }\r\n        } else {\r\n            if (this.dg.multiSort) {\r\n                sortFields.push(this.column.field);\r\n                sortOrders.push(newOrder);\r\n            } else {\r\n                sortFields = [this.column.field];\r\n                sortOrders = [newOrder];\r\n            }\r\n        }\r\n\r\n        this.hideFilterPanel();\r\n\r\n\r\n        this.dg.sortName = sortFields.join(',');\r\n        this.dg.sortOrder = sortOrders.join(',');\r\n        this.dg.dfs.setSortInfo(this.dg.sortName, this.dg.sortOrder);\r\n\r\n        this.dg.beforeSortColumn(this.dg.sortName, this.dg.sortOrder, this.dg).subscribe(() => {\r\n            this.dg.onColumnSorted();\r\n        });\r\n    }\r\n}\r\n","import { LocaleModule } from '@farris/ui-locale';\r\nimport { NgModule } from '@angular/core';\r\nimport { FilterPanelModule, FilterPanelComponent } from '@farris/ui-filter-panel';\r\nimport { DatagridSmartFilterComponent } from './datagrid-smart-filter.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DatagridSmartFilterComponent\r\n    ],\r\n    imports: [\r\n        FilterPanelModule,\r\n        LocaleModule.forRoot(),\r\n    ],\r\n    exports: [\r\n        DatagridSmartFilterComponent\r\n    ]\r\n})\r\nexport class DatagridSmartFilterModule { }\r\n","import { DatagridComponent } from './../datagrid.component';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { Pipe, PipeTransform, Injector, Optional, ElementRef, LOCALE_ID } from '@angular/core';\r\nimport { Utils } from './utils';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { DataColumn } from '../types/data-column';\r\n\r\n@Pipe({name: 'formatCellData', pure: false})\r\nexport class FormatCellDataPipe implements PipeTransform {\r\n\r\n    private localeService: LocaleService;\r\n    private dataGrid: DatagridComponent;\r\n    private elRef: ElementRef;\r\n    private localeId = 'ZH-CHS';\r\n    constructor(private cfs: ColumnFormatService, @Optional() private injector?: Injector) {\r\n        this.localeId = this.injector.get(LOCALE_ID);\r\n    }\r\n\r\n    transform(col: any, rowData: any, groupFooter = false, footer = false): any {\r\n        if (rowData && col && col.field) {\r\n            const value = Utils.getValue(col.field, rowData);\r\n            if (col.editor && col.editor.options && col.editor.options.isPassword && !col.formatter) {\r\n                return  value ? '******' : '';\r\n            }\r\n\r\n            let formatterFn = col.formatter;\r\n            if (groupFooter) {\r\n                formatterFn = col.groupFooter ? col.groupFooter.formatter : undefined;\r\n            } else if (footer) {\r\n                formatterFn = col.footer ? col.footer.formatter : undefined;\r\n                if (typeof formatterFn === 'object') {\r\n                    if (!formatterFn.options) {\r\n                        const opts = { type: formatterFn.type, options: formatterFn };\r\n                        formatterFn = opts;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!formatterFn) {\r\n                let resoultStr = value;\r\n                if (col.isMultilingualField) {\r\n                    resoultStr = this.getMultilingualValue(value);\r\n                } else {\r\n                    if (value !== null && value !== undefined && value !== '0' && typeof value === 'string') {\r\n                        this.getDatagridInstance();\r\n                        if (value.indexOf('\\n') > -1) {\r\n                            // return value.replace(/\\n/g, '<br>');\r\n                            if (this.dataGrid && this.dataGrid.nowrap) {\r\n                                resoultStr = value.replace(/\\n/g, ' ');\r\n                            }\r\n                        }\r\n\r\n                        this.setFooterCellTitle(resoultStr, footer, col.field);\r\n                    }\r\n                    // value.replace(/ /g, '&ensp;');\r\n                }\r\n                return this.setPlaceHolderWhenEnableEditCellStyle(col, resoultStr, rowData, groupFooter || footer);\r\n            } else {\r\n                if (formatterFn) {\r\n                    if ( formatterFn.type === 'number') {\r\n                        if (!formatterFn.options || !Object.keys(formatterFn.options).length ) {\r\n                            formatterFn.options = {\r\n                                thousand: ',',\r\n                                precision: 2\r\n                            };\r\n                        }\r\n                    }\r\n                    if ( formatterFn.type === 'datetime') {\r\n                        if (formatterFn.options) {\r\n                            if (col.editor && col.editor.options) {\r\n                                const { dateRange, dateRangeDatesDelimiter } = col.editor.options;\r\n                                formatterFn.options = Object.assign({ dateRange, dateRangeDatesDelimiter }, formatterFn.options);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (formatterFn.type === 'timeago') {\r\n                        if (formatterFn.options ) {\r\n                            formatterFn.options.locale = formatterFn.options.locale || this.localeId;\r\n                        } else {\r\n                            formatterFn.options = {\r\n                                locale: this.localeId\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.getDatagridInstance();\r\n                let r = '';\r\n                if (this.dataGrid) {\r\n                    r = this.cfs.format(value, rowData, formatterFn, { utils: this.dataGrid.commonUtils, locale: this.localeId });\r\n                    this.setFooterCellTitle(r, footer, col.field);\r\n                    return this.setPlaceHolderWhenEnableEditCellStyle(col, r, rowData, groupFooter || footer);\r\n                } else {\r\n                    r = this.cfs.format(value, rowData, formatterFn, {locale: this.localeId });\r\n                    this.setFooterCellTitle(r, footer, col.field);\r\n                    return r;\r\n                }\r\n            }\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    private setFooterCellTitle(text: string, isFooter: boolean, field: string) {\r\n        if (text && isFooter && this.elRef) {\r\n            const span = this.elRef.nativeElement.querySelector(`td[field=\"${field}\"] .f-datagrid-footer-cell`);\r\n            if (span) {\r\n                span.title = text;\r\n            }\r\n        }\r\n    }\r\n\r\n    // è·åå¤è¯­æ°æ®\r\n    private getMultilingualValue(valObj) {\r\n        if (valObj && typeof valObj === 'object' && Object.keys(valObj).length > 0) {\r\n            if (this.injector) {\r\n                this.localeService = this.injector.get(LocaleService);\r\n            }\r\n            if (this.localeService) {\r\n                const localeId = this.localeService.localeId;\r\n                return Utils.getMultilingualValue(valObj, localeId);\r\n            } else {\r\n                return valObj['zh-CHS'];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    // å¯ç¨æ è¯å¯ç¼è¾ååæ ¼æ¶ï¼åå®¹ä¸ºç©ºæ¶è®¾ç½®æç¤ºè¯­\r\n    private setPlaceHolderWhenEnableEditCellStyle(col, val, rowData, isFooter) {\r\n        this.getDatagridInstance();\r\n        if (this.dataGrid) {\r\n            /*\r\n            if (!this.dataGrid.editable || (val !== null && val !== undefined && val !== '') || isFooter || this.cellIsReadOnly(col, rowData)) {\r\n                if (this.elRef) {\r\n                    const span = this.elRef.nativeElement.querySelector('.cell-text-box');\r\n                    if (span && span.className.indexOf('cell-empty') > -1) {\r\n                        span.className = span.className.replace('cell-empty', ' ');\r\n                    }\r\n                }\r\n\r\n                return val;\r\n            }\r\n*/\r\n            if (this.dataGrid.enableEditCellStyle ) {\r\n\r\n                if (!this.dataGrid.editable || (val !== null && val !== undefined && val !== '') || isFooter || this.cellIsReadOnly(col, rowData)) {\r\n                    if (this.elRef) {\r\n                        const span = this.elRef.nativeElement.querySelector('.cell-text-box');\r\n                        if (span && span.className.indexOf('cell-empty') > -1) {\r\n                            span.className = span.className.replace('cell-empty', ' ');\r\n                        }\r\n                    }\r\n    \r\n                    return val;\r\n                }\r\n\r\n\r\n                if (this.elRef) {\r\n                    const span = this.elRef.nativeElement.querySelector('.cell-text-box');\r\n                    if (span && span.className.indexOf('cell-empty') === -1) {\r\n                        span.className = span.className + ' cell-empty';\r\n                    }\r\n                }\r\n                return Utils.getWhenEmptyText(col, this.localeId);\r\n            }\r\n\r\n            return val;\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    private getDatagridInstance() {\r\n        if (!this.dataGrid) {\r\n            this.dataGrid = this.injector.get(DatagridComponent, null);\r\n        }\r\n\r\n        if (!this.elRef) {\r\n            this.elRef = this.injector.get(ElementRef, null);\r\n        }\r\n    }\r\n\r\n    cellIsReadOnly(col: DataColumn, rowData) {\r\n        return this.dataGrid.cellIsReadOnly(col, rowData);\r\n    }\r\n}\r\n","\r\nimport { switchMap, delay, debounceTime, tap, takeUntil } from 'rxjs/operators';\r\nimport { Subscription, of, Subject } from 'rxjs';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 07:47:12\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-26 10:21:25\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport {\r\n    Component, OnInit, Input, ViewChild, Renderer2,\r\n    ElementRef, OnDestroy, ChangeDetectorRef, AfterViewInit, AfterViewChecked,\r\n    OnChanges, SimpleChanges, ChangeDetectionStrategy, NgZone, Injector, forwardRef, Inject, Optional, ApplicationRef, HostListener, Output, EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport { ScrollbarDirective } from '../../scrollbar/scrollbar.directive';\r\nimport { ColumnGroup } from '../../types';\r\nimport { SelectedRow, DataResult, ROW_INDEX_FIELD, IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD, GROUP_VISIBLE_FIELD } from '../../services/state';\r\nimport { SCROLL_X_ACTION, SCROLL_Y_ACTION, SCROLL_X_REACH_START_ACTION, SCROLL_X_REACH_END_ACTION, TR_PREFIX, WORDWRAP_ROW_HEIGHT_CLS } from '../../types/constant';\r\nimport { DatagridService } from '../../services/datagrid.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { FormatCellDataPipe } from '../../utils/format-cell-data.pipe';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { ContextMenuItem } from '@farris/ui-context-menu';\r\nimport { Utils } from '../../utils/utils';\r\n\r\n@Component({\r\n    selector: 'datagrid-body',\r\n    templateUrl: './body.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DatagridBodyComponent implements OnInit, OnDestroy, OnChanges, AfterViewInit, AfterViewChecked {\r\n    // èªå¨é«åº¦æ¶ï¼ç¦ç¨çºµåæ»å¨æ¡\r\n    psConfig = { swipeEasing: false, minScrollbarLength: 15, handlers: ['click-rail', 'drag-thumb', 'wheel', 'touch'], suppressScrollY: this.dg.autoHeight && this.dg.maxHeight ? false: this.dg.autoHeight };\r\n\r\n    top: number;\r\n    height: number;\r\n    width: number;\r\n    colsWidth: number;\r\n    totalWidth: number;\r\n    leftFixedWidth: number;\r\n    rightFixedWidth: number;\r\n    rowHeight: number;\r\n    bodyStyle: any;\r\n    scrollTop = 0;\r\n    scrollLeft = 0;\r\n    deltaTopHeight = 0;\r\n    // wheelHeight = 0;\r\n    wheelWidth = 0;\r\n    private _fixedRightScrollLeft = 0;\r\n    get fixedRightScrollLeft() {\r\n        return this._fixedRightScrollLeft;\r\n    }\r\n    set fixedRightScrollLeft(val) {\r\n        this._fixedRightScrollLeft = val;\r\n    }\r\n\r\n    maxScrollLeft = 0;\r\n    showRightShadow = false;\r\n    @Input() footerHeight = 0;\r\n    @Input() canvasWidth;\r\n    @Input() columnsGroup: ColumnGroup;\r\n    // èæå è½½\r\n    @Input() topHideHeight = 0;\r\n    @Input() bottomHideHeight = 0;\r\n\r\n    @Input() startRowIndex = 0;\r\n    @Input() data: any;\r\n\r\n    @Output() dataChange = new EventEmitter();\r\n\r\n    @Input() scrollBarMode = 'auto';\r\n    @Input() contextMenuItems: ContextMenuItem[];\r\n\r\n    @Input() checkedRows = [];\r\n\r\n    /** æ§è½ä¼åçï¼é»è®¤ä¸º false */\r\n    @Input() fast = false;\r\n\r\n\r\n    @ViewChild('ps') ps?: ScrollbarDirective;\r\n    @ViewChild('mainRows') tableRowsCmp: any;\r\n    @ViewChild('rightRows') rightRowsCmp: any;\r\n    @ViewChild('fixedLeft') fixedLeftEl: ElementRef;\r\n    @ViewChild('fixedRight') fixedRightEl: ElementRef;\r\n    @ViewChild('main') mainArea: ElementRef;\r\n    @ViewChild('viewScrollContainer') viewScrollContainer: ElementRef;\r\n\r\n\r\n    visibleContextMenus = [];\r\n    currentRowId = undefined;\r\n\r\n    private _hoverRowIndex = -1;\r\n    get hoverRowIndex(): number {\r\n        return this._hoverRowIndex;\r\n    }\r\n    set hoverRowIndex(rowIdx: number) {\r\n        this._hoverRowIndex = rowIdx;\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    get selectedRows() {\r\n        return this.dg.selections;\r\n    }\r\n\r\n    private gridSizeSubscribe: Subscription;\r\n    private columnResizeSubscribe: Subscription;\r\n    private onDataSourceChangeSubscribe: Subscription;\r\n    private selectRowSubscribe: Subscription;\r\n    private unselectRowSubscribe: Subscription;\r\n    private selectAllSubscribe: Subscription;\r\n    private checkRowSubscribe: Subscription;\r\n    private clearSelectionsSubscribe: Subscription;\r\n    private checkAllSubscribe: Subscription;\r\n    private uncheckRowSubscribe: Subscription;\r\n    private clearCheckedsSubscribe: Subscription;\r\n\r\n    private subscriptions = [];\r\n\r\n    public dfs: DatagridFacadeService;\r\n    public dgs: DatagridService;\r\n    public ngZone: NgZone;\r\n    public render: Renderer2;\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    private viewportH;\r\n    viewportW;\r\n    canvasHeight;\r\n    private minRowBuffer = 3;\r\n    private vScrollDir = 1;\r\n    private rowsCache = {};\r\n    private lastRenderedScrollTop = 0;\r\n    private lastRenderedScrollLeft = 0;\r\n    prevScrollTop = 0;\r\n    prevScrollLeft = 0;\r\n    rows = [];\r\n    blankTopHeight = 0;\r\n    blankBottomHeight = 0;\r\n\r\n    //////////////////////////////////////////////////////////////////////////\r\n\r\n    get scrollbarXHeight() {\r\n        if (this.dg && this.ps && this.ps.instance) {\r\n            const h = this.dg.scrollBarShowMode === 'allways' && this.ps.instance['scrollbarXActive'] ? 22 : 0;\r\n            if (this.ps.instance['scrollbarYActive'] && h) {\r\n                return h + 18; // + (this.dg.showScrollArrow && this.ps.instance['scrollbarYActive'] ? 18 : 0);\r\n            }\r\n\r\n        }\r\n    }\r\n    get scrollbarYWidth() {\r\n        if (this.dg && this.ps && this.ps.instance) {\r\n            return this.dg.scrollBarShowMode === 'allways' && this.ps.instance['scrollbarYActive'] && this.showRightShadow ? 18 : 0;\r\n        }\r\n    }\r\n\r\n    cellContentFormatter: FormatCellDataPipe = null;\r\n\r\n    // å½å¯ç¨å¤éä¸åè®¸å¤éä¸­ï¼åè¡¨ä¸è½ç¼è¾æ¶ï¼åéä¸­åç¦æ­¢è§¦åbody çclick äºä»¶\r\n    private __triggerBodyClickEvent = true;\r\n    private destroy$ = new Subject();\r\n    private _onMouseClick = null;\r\n    private _scrollTimer: any = 0;\r\n    private _scrollXTimer: any = 0;\r\n    private ro: ResizeObserver | null = null;\r\n    private resizeObserverTimer: any = 0;\r\n\r\n    private _clickCellWeakMap = new WeakMap();\r\n\r\n    constructor(\r\n        private injector: Injector,\r\n        private app: ApplicationRef,\r\n        @Optional() public dg: DatagridComponent,\r\n        private cd: ChangeDetectorRef, private el: ElementRef\r\n    ) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.ngZone = this.injector.get(NgZone);\r\n        this.render = this.injector.get(Renderer2);\r\n\r\n        const columnFormatService = this.injector.get(ColumnFormatService);\r\n        this.cellContentFormatter = new FormatCellDataPipe(columnFormatService, this.injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.listenSubjects();\r\n        this.dg.scrollInstance = this.ps;\r\n        const s1 = this.dgs.showGridHeader.subscribe(headerHeight => {\r\n            this.updateContainerSize(headerHeight);\r\n        });\r\n        this.subscriptions.push(s1);\r\n\r\n        const s10 = this.dgs.footerPositionChanged.subscribe(() => {\r\n            this.updateContainerSize();\r\n        });\r\n        this.subscriptions.push(s10);\r\n\r\n        const s2 = this.dgs.rowHeightChanged.subscribe(() => {\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(s2);\r\n\r\n        const s3 = this.dfs.clientSort$.subscribe(() => {\r\n            this.checkScrollbarPosition(true);\r\n            this.cd.detectChanges();\r\n            // this.dg.columnSorted.emit();\r\n        });\r\n        this.subscriptions.push(s3);\r\n       \r\n        const s5 = this.dg.dgs.columnsChanged.pipe(\r\n            delay(50)\r\n        ).subscribe((e: any) => {\r\n            if (e && e.scrollToLeft) {\r\n                this.ps.elementRef.nativeElement.scrollTo(0, 0);\r\n                this.ps.scrollToLeft(0, 100);\r\n            }\r\n        });\r\n        this.subscriptions.push(s5);\r\n       \r\n        this.viewScrollContainer.nativeElement.addEventListener('click', this._onMouseClick = (e) => {\r\n            this.onMouseClick(e);\r\n        });\r\n\r\n        if (!this.dg.nowrap) {\r\n            this.dgs.dataloaded.subscribe(() => {\r\n                this.updateRowHeight();\r\n            });\r\n        }\r\n    }\r\n\r\n    private updateContainerSize(headerHeight?: any) {\r\n        const hh = headerHeight || this.dg.realHeaderHeight;\r\n        this.setPositionTop(hh);\r\n        this.height = this.dg.height - this.top;\r\n        this.bodyStyle = this.getBodyStyle();\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.data && !changes.data.isFirstChange()) {\r\n            this.bodyStyle = this.getBodyStyle();\r\n            this.dfs.setCurrentPageData(changes.data.currentValue);\r\n\r\n            const isDiffrentDataSource = !!changes.data.currentValue.filter(n => !n['__group__']).map(n => n.id).filter(n => {\r\n                return !changes.data.previousValue.filter(n => !n['__group__']).find(p => p.id === n)\r\n            }).length;\r\n\r\n            const isSameLength = changes.data.currentValue.filter(n => !n['__group__']).length >= changes.data.previousValue.filter(n => !n['__group__']).length;\r\n            this.onDataChanged(isSameLength, isDiffrentDataSource);\r\n\r\n            if (!changes.data.currentValue || !changes.data.currentValue.length) {\r\n                setTimeout(() => {\r\n                    this.setPositionTop(this.dg.realHeaderHeight);\r\n                });\r\n            }\r\n        }\r\n\r\n        if (changes.footerHeight !== undefined && !changes.footerHeight.isFirstChange()) {\r\n            this.bodyStyle = this.getBodyStyle();\r\n        }\r\n\r\n        if (changes.scrollBarMode !== undefined && !changes.scrollBarMode.isFirstChange()) {\r\n            if (this.ps && this.ps.instance && this.scrollBarMode === 'allways' && this.ps.instance.scrollbarYActive) {\r\n                this.rightFixedWidth += this.showRightShadow ? 18 : 0;\r\n            } else {\r\n                this.rightFixedWidth = this.columnsGroup.rightFixedWidth;\r\n            }\r\n             \r\n            if (this.dg.scrollBarShowMode === 'allways' && this.ps && this.ps.instance && this.ps.instance.scrollbarXActive) {\r\n                this.blankBottomHeight += 22;\r\n            }\r\n        }\r\n\r\n        if (changes.showScrollArrow && !changes.showScrollArrow.isFirstChange()) {\r\n            this.ps && this.ps.update();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        this.cellContentFormatter = null;\r\n        this.dg.scrollInstance = null;\r\n        this.destroySubscriptions();\r\n        this.viewScrollContainer.nativeElement.removeEventListener('click', this._onMouseClick);\r\n\r\n        if (this.ro) {\r\n            this.ro.unobserve(this.viewScrollContainer.nativeElement);\r\n            this.ro.disconnect();\r\n        }\r\n\r\n        if (this.resizeObserverTimer) {\r\n            clearTimeout(this.resizeObserverTimer);\r\n        }\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.ro = new ResizeObserver((e) => {\r\n            if (this.viewScrollContainer.nativeElement.offsetParent) {\r\n                if (this.resizeObserverTimer) {\r\n                    clearTimeout(this.resizeObserverTimer);\r\n                }\r\n                this.resizeObserverTimer = setTimeout(() => {\r\n                    this.updateCanvasHeight();\r\n                    if (this.scrollBarMode === 'allways') {\r\n                        this.ps.update();\r\n                    }\r\n                    // this.setFixedRightWidth();\r\n                    this.cd.detectChanges();\r\n                    this.dgs.scrollbarUpdate.emit({ scrollbarRef: this.ps.instance, rightWidth: this.rightFixedWidth, showRightShadow: this.showRightShadow });\r\n                }, 100);\r\n            }\r\n        });\r\n\r\n        this.ro.observe(this.viewScrollContainer.nativeElement);\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n    }\r\n\r\n    private setPositionTop(headerHeight: number) {\r\n        this.top = headerHeight;\r\n        \r\n        if ((this.dg.enableFilterRow || this.dg.enableSmartFilter) && this.dg.showFilterBar) {\r\n            this.top += this.dg.filterBarHeight;\r\n        }\r\n\r\n        if (this.dg.showRowGroupPanel) {\r\n            this.top += this.dg.rowGroupPanelHeight;\r\n        }\r\n\r\n        if (this.dg.showFooter && (this.dg.footerPosition === 'top' || this.dg.footerPosition === 'both')) {\r\n            // headerHeight å·²åæ¬è¿æ»¤è¡çé«åº¦ tfs 542471\r\n            if (this.data && this.data.length) {\r\n                this.top += this.dg.footerHeight;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkScrollbarPosition(toTop = false) {\r\n        if (!this.dg.data || !this.dg.data.length) {\r\n            return;\r\n        }\r\n        const scrollBar: any = this.ps.instance;\r\n        const scrollElRef = this.ps.elementRef.nativeElement;\r\n        // scrollBar.update();\r\n        const lastScrollLeft = scrollBar ? scrollBar.lastScrollLeft : 0;\r\n        const lastScrollTop = scrollBar ? scrollBar.lastScrollTop : 0;\r\n\r\n        // const lastScrollLeft = this.scrollLeft;\r\n        // const lastScrollTop = this.scrollTop;\r\n\r\n        const scrollTop = scrollElRef.scrollTop;\r\n        const scrollLeft = scrollElRef.scrollLeft;\r\n\r\n        if (!toTop) {\r\n            if (scrollTop != lastScrollTop) {\r\n                this.ps.scrollToTop(lastScrollTop);\r\n                this.dgs.onScrollMove(lastScrollTop, SCROLL_Y_ACTION);\r\n            }\r\n        } else {\r\n            this.ps.scrollToTop();\r\n            this.dgs.onScrollMove(lastScrollTop, SCROLL_Y_ACTION);\r\n        }\r\n\r\n        this.scrollLeft = lastScrollLeft;\r\n        if (scrollLeft != lastScrollLeft) {\r\n            this.ps.scrollToX(lastScrollLeft);\r\n            this.dgs.onScrollMove(lastScrollLeft, SCROLL_X_ACTION);\r\n        } else {\r\n            if (lastScrollLeft) {\r\n                this.dgs.onScrollMove(lastScrollLeft, SCROLL_X_ACTION);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ°æ®åçååï¼éæ°å è½½æ°æ®æ¶æ§è¡\r\n     * éç½®æ»å¨æ¡ä½ç½®\r\n     */\r\n    private onDataChanged(isSameLength = true, isDiffrentDataSource = false) {\r\n        this.dg.setPagerHeight();\r\n        this.viewportH = this.getViewPortHeight();\r\n        this.bodyStyle = this.getBodyStyle();\r\n\r\n        /**\r\n         * update:\r\n         * node_modules\\perfect-scrollbar\\types\\perfect-scrollbar.d.ts\r\n         * lastScrollTop: number\r\n         */\r\n        if (this.ps && this.ps.instance && !this.dg.isEditing() && !this.dg.clientFilterChanged && !this.dg.autoHeight ) {\r\n            this.scrollTop = 0;\r\n            this.lastRenderedScrollTop = 0;\r\n            this.ps.scrollToTop();\r\n            this.scrollLeft = 0;\r\n            this.ps.scrollToLeft();\r\n        }\r\n\r\n        this.rowsCache = {};\r\n        const keepscrollPos = () => {\r\n            const scrollInfo = this.dg.dfs.getState().scrollInfo;\r\n            if (scrollInfo ) {\r\n                if (scrollInfo.y) {\r\n                    this.scrollTop = scrollInfo.y;\r\n                    this.dg.scrollInstance.scrollToY(scrollInfo.y);\r\n                    this.dgs.onScrollMove(scrollInfo.y, SCROLL_Y_ACTION);\r\n                }\r\n\r\n                if (scrollInfo.x) {\r\n                    this.scrollLeft = scrollInfo.x;\r\n                    this.dg.scrollInstance.scrollToX(scrollInfo.x);\r\n                    this.dg.dgs.onScrollMove(scrollInfo.x, SCROLL_X_ACTION);\r\n                }\r\n            }\r\n        };\r\n\r\n        if (!this.dg.nowrap || this.dg.autoHeight) {\r\n            this.renderData(false);\r\n            this.dgs.cellContentWrapChanged.next(this.width);\r\n        } else {\r\n            if (isSameLength) {\r\n                keepscrollPos();\r\n            }\r\n            this.renderData(false);\r\n            this.ps.update();\r\n        }\r\n       \r\n\r\n        if (isDiffrentDataSource) {\r\n            this.dg.initSelectOrChecked();\r\n        } else {\r\n            this.dg.refreshSelectedData();\r\n        }\r\n        this.dg.clientFilterChanged = false;\r\n        this.dataChange.emit(this.data);\r\n\r\n        if (this.dg.scrollBarShowMode === 'allways' && this.ps.instance && !this.dg.showScrollArrow) {\r\n            this.hasYScrollbar();\r\n        }\r\n    }\r\n\r\n    private destroySubscriptions() {\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach((sub: Subscription) => {\r\n                if (sub) {\r\n                    sub.unsubscribe();\r\n                    sub = null;\r\n                }\r\n            });\r\n\r\n            this.subscriptions = [];\r\n        }\r\n    }\r\n\r\n    private listenSubjects() {\r\n        this.destroySubscriptions();\r\n\r\n        this.gridSizeSubscribe = this.dfs.gridSize$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).pipe(\r\n            debounceTime(50)\r\n        ).subscribe(state => {\r\n            if (state) {\r\n                this.dg.setPagerHeight();\r\n                const hh = this.dg.setHeaderHeight();\r\n                this.setPositionTop(hh);\r\n\r\n                this.height = state.height - this.top;\r\n\r\n                const oldWidth = this.width;\r\n                this.width = Math.floor(state.width);\r\n                this.rowHeight = state.rowHeight;\r\n\r\n                if (this.dg.showBorder) {\r\n                    this.width -= 2;\r\n                }\r\n\r\n                this.viewportW = this.width;\r\n                this.viewportH = this.getViewPortHeight();\r\n                this.canvasHeight = this.getCanvasHeight();\r\n\r\n                this.ngZone.runOutsideAngular(() => {\r\n                    this.columnsGroup = state.columnsGroup;\r\n                    this.checkScrollbarPosition();\r\n                    // this.setFixedRightPosition();\r\n                    this.updateColumnSize(state.columnsGroup);\r\n\r\n                    this.dgs.showFixedShadow.emit({ showRightShadow: this.showRightShadow, x: this.fixedRightScrollLeft });\r\n                    this.renderData(false);\r\n\r\n                    if ((!this.dg.nowrap || this.dg.autoHeight) && this.rows && this.rows.length) {\r\n                        if (oldWidth !== this.width) {\r\n                            this.dgs.cellContentWrapChanged.next(oldWidth);\r\n                        } else {\r\n                            this.keepScrollbarPosition(oldWidth);\r\n                        }\r\n                    } else {\r\n                        if (this._scrollXTimer) {\r\n                            clearTimeout(this._scrollXTimer);\r\n                        }\r\n\r\n                        this._scrollXTimer = setTimeout(() => {\r\n                            this.keepScrollbarPosition(oldWidth);\r\n                        }, 100);\r\n                    }\r\n\r\n                });\r\n            }\r\n        });\r\n\r\n        this.subscriptions.push(this.gridSizeSubscribe);\r\n\r\n        this.columnResizeSubscribe = this.dfs.columnResize$.subscribe((cg: ColumnGroup) => {\r\n            this.updateColumnSize(cg);\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.columnResizeSubscribe);\r\n\r\n        this.dgs.setSelecedRow.subscribe((r: any) => {\r\n            if (r && r.selected) {\r\n                this.currentRowId = r.id;\r\n            } else {\r\n                this.currentRowId = undefined;\r\n            }\r\n        });\r\n        this.selectRowSubscribe = this.dfs.selectRow$.subscribe((row: SelectedRow) => {\r\n            if (row) {\r\n                this.currentRowId = row.id;\r\n                // 20210817 æ¹åé®ç§»å¨åå·æ°è§å¾ç¶æ\r\n                this.cd.detectChanges();\r\n            }\r\n        });\r\n        this.subscriptions.push(this.selectRowSubscribe);\r\n\r\n        this.unselectRowSubscribe = this.dfs.unSelectRow$.subscribe((prevRow: SelectedRow) => {\r\n            if (prevRow && prevRow.id === this.currentRowId) {\r\n                this.currentRowId = undefined;\r\n                this.dg.selectedRow = null;\r\n            }\r\n\r\n            if (!this.dg.editable && this.dg.multiSelect) {\r\n                this.__triggerBodyClickEvent = this.dg.selectionMode === 'default';\r\n            }\r\n\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.unselectRowSubscribe);\r\n\r\n        this.selectAllSubscribe = this.dfs.selectAll$.subscribe((rows: SelectedRow[]) => {\r\n            this.dg.selectAll.emit(rows);\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.selectAllSubscribe);\r\n\r\n        this.checkRowSubscribe = this.dfs.checkRow$.subscribe((row: SelectedRow) => {\r\n            this.dg.checked.emit(row);\r\n            this.checkedRowsChanged();\r\n            // this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.checkRowSubscribe);\r\n\r\n        this.clearSelectionsSubscribe = this.dfs.clearSelections$.subscribe(() => {\r\n            this.currentRowId = undefined;\r\n            if (this.dg.checkOnSelect) {\r\n                this.checkedRowsChanged();\r\n            }\r\n            this.dg.unSelectAll.emit();\r\n        });\r\n        this.subscriptions.push(this.clearSelectionsSubscribe);\r\n\r\n        this.uncheckRowSubscribe = this.dfs.unCheckRow$.subscribe((prevRow: SelectedRow) => {\r\n            this.dg.unChecked.emit(prevRow);\r\n            this.checkedRowsChanged();\r\n            // this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.uncheckRowSubscribe);\r\n\r\n        this.checkAllSubscribe = this.dfs.checkAll$.subscribe((rows: SelectedRow[]) => {\r\n            this.dg.checkAll.emit(rows);\r\n            this.checkedRowsChanged();\r\n            // this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.checkAllSubscribe);\r\n\r\n        this.clearCheckedsSubscribe = this.dfs.clearCheckeds$.subscribe((rows: SelectedRow[]) => {\r\n            if (this.dg.selectOnCheck) {\r\n                this.currentRowId = undefined;\r\n            }\r\n            this.dg.unCheckAll.emit(rows);\r\n            this.checkedRowsChanged();\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.clearCheckedsSubscribe);\r\n\r\n        this.subscriptions.push(this.dgs.setScrollbarPosition.subscribe(() => {\r\n            this.checkScrollbarPosition();\r\n            this.updateScrollPosition(this.scrollLeft);\r\n        }));\r\n\r\n        this.dgs.columnResized.pipe(\r\n            delay(100)\r\n        ).subscribe((e: any) => {\r\n            if (!this.dg.nowrap ||\r\n                (this.dg.currentCell && this.dg.currentCell.isEditing && this.dg.currentCell.column &&\r\n                    this.dg.currentCell.column.editor && this.dg.currentCell.column.editor.type === 'textarea')) {\r\n                const trdoms = this.dg.dgContainer.nativeElement.querySelectorAll('.f-datagrid-body-row:not(.f-datagrid-footer-row)');\r\n                trdoms.forEach(n => {\r\n                    this.render.setStyle(n, 'height', 'auto');\r\n                });\r\n\r\n                let trID = '';\r\n                if (e) {\r\n                    const rowId = e.id;\r\n                    trID = TR_PREFIX + rowId;\r\n                }\r\n\r\n                this.updateRowHeight(trID);\r\n            }\r\n\r\n            if (this.dg.headerWrap) {\r\n                this.dg.setHeaderHeight();\r\n                this.dfs.columnResizeEnd();\r\n            }\r\n\r\n        });\r\n\r\n        this.dgs.cellContentWrapChanged.pipe(\r\n            takeUntil(this.destroy$),\r\n            debounceTime(100)\r\n        ).subscribe((oldWidth: number) => {\r\n            this.updateRowHeight();\r\n            if (oldWidth != null) {\r\n                this.keepScrollbarPosition(oldWidth);\r\n            } else {\r\n                this.ps && this.ps.instance && this.ps.instance.update();\r\n            }\r\n        });\r\n\r\n\r\n        this.dg.dfs.rowUpdate$.subscribe((row: { index: number, data: any }) => {\r\n            if (row && row.data) {\r\n                this.buildCustomCellStyle(row);\r\n            }\r\n        });\r\n\r\n        if (this.dg.groupRows) {\r\n            this.dfs.expandGroupRow.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).subscribe((e: any) => {\r\n                if (e && e.data) {\r\n                    this.groupRowStateChanged(e.data, true);\r\n                    setTimeout(() => {this.updateRowHeight();});\r\n                }\r\n            });\r\n            this.dfs.collapseGroupRow.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).subscribe((e: any) =>{\r\n                if (e && e.data) {\r\n                    this.groupRowStateChanged(e.data, false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private groupRowExpandUpdate(groupRow, isExpand) {\r\n        if (groupRow.rows && groupRow.rows.length) {\r\n            groupRow.rows.forEach(n => {\r\n                if (n[IS_GROUP_FOOTER_ROW_FIELD]) {\r\n                    this.data.filter(t => t[GROUP_ROW_FIELD] === n[GROUP_ROW_FIELD]).forEach(d => {\r\n                        d[GROUP_VISIBLE_FIELD] = isExpand && groupRow.expanded;\r\n                    });\r\n                } else {\r\n                    const item = this.data.find(e => e.id === n.id);\r\n                    if (item) {\r\n                        item[GROUP_VISIBLE_FIELD] = isExpand && groupRow.expanded;\r\n                        if (item.rows && item.rows.length) {\r\n                            this.groupRowExpandUpdate(item, isExpand);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private groupRowStateChanged(rowData, expand: boolean) {\r\n        if (this.dg.virtualized) {\r\n            const gr = this.data.find(n => n.id === rowData.id);\r\n            this.groupRowExpandUpdate(gr, expand);\r\n            this.renderData(false);\r\n        } else {\r\n            this.getCanvasHeight();\r\n        }\r\n\r\n        if (this['_psUpdateTimer_']) {\r\n            clearTimeout(this['_psUpdateTimer_']);\r\n        }\r\n\r\n        this['_psUpdateTimer_'] = setTimeout(() => {\r\n            this.ps.update();\r\n            this.cd.detectChanges();\r\n        }, 100)\r\n    }\r\n\r\n    private keepScrollbarPosition(oldWidth: number) {\r\n        if (!this.cd[\"destroyed\"]) {\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        if (!this.ps.instance) {\r\n            return;   \r\n        }\r\n\r\n        if (this[\"keepScrollbarPositionTIMER\"]) {\r\n            clearTimeout(this[\"keepScrollbarPositionTIMER\"]);\r\n        }\r\n\r\n        this[\"keepScrollbarPositionTIMER\"] = setTimeout(() => {\r\n            if (this.width > oldWidth) {\r\n                const x = this.scrollLeft - (this.width - oldWidth);\r\n                this.ps.elementRef.nativeElement.scrollLeft = x < 0 ? 0 : x;\r\n            }\r\n            if (!this.dg.nowrap || this.dg.autoHeight) {\r\n                this.updateCanvasHeight();\r\n            }\r\n            this.ps.update();\r\n            this.updateScrollPosition(this.ps.elementRef.nativeElement.scrollLeft);\r\n            this.dgs.scrollbarUpdate.emit({ scrollbarRef: this.ps.instance, rightWidth: this.rightFixedWidth, showRightShadow: this.showRightShadow  });\r\n        }, 50);\r\n    }\r\n\r\n\r\n    private updateColumnSize(cg: ColumnGroup) {\r\n        if (cg) {\r\n            this.columnsGroup = cg;\r\n            \r\n            this.leftFixedWidth = this.columnsGroup.leftFixedWidth;\r\n            this.colsWidth = this.columnsGroup.normalWidth;\r\n\r\n            this.scrollLeft = this.ps.elementRef.nativeElement.scrollLeft;\r\n            this.maxScrollLeft = this.colsWidth + this.leftFixedWidth;\r\n            this.fixedRightScrollLeft = this.maxScrollLeft;\r\n            // grid å®¹å¨å®½åº¦\r\n            const dgContainerWidth = this.dg.dgContainer.nativeElement.offsetWidth;\r\n            // ææåå®½ä¹å\r\n            const allColsWidth = Math.floor(this.columnsGroup.totalWidth);\r\n\r\n            this.bodyStyle = this.getBodyStyle();\r\n            if (dgContainerWidth > allColsWidth || dgContainerWidth === allColsWidth) {\r\n                this.showRightShadow = false;\r\n            } else {\r\n                this.showRightShadow = true;\r\n                // å³ä¾§åºå®åçä½ç½®\r\n                this.fixedRightScrollLeft = this.width  + this.scrollLeft;\r\n            }\r\n            this.setFixedRightWidth();\r\n        }\r\n    }\r\n\r\n    private setFixedRightWidth() {\r\n        this.rightFixedWidth = this.columnsGroup.rightFixedWidth;\r\n        this.totalWidth = this.columnsGroup.totalWidth;\r\n        if (this.ps && this.ps.instance && this.dg.scrollBarShowMode === 'allways') {\r\n            if (this.ps.instance.scrollbarYActive) {\r\n                this.rightFixedWidth += 18;\r\n            }\r\n        }\r\n    }\r\n\r\n    private buildCustomCellStyle(row: { index: number, data: any }) {\r\n\r\n        let rightTrs = [];\r\n        let leftTrs = [];\r\n        if (this.fixedRightEl) {\r\n            rightTrs = this.fixedRightEl.nativeElement.querySelectorAll('tr');\r\n        }\r\n\r\n        if (this.fixedLeftEl) {\r\n            leftTrs = this.fixedLeftEl.nativeElement.querySelectorAll('.fixed-left-row');\r\n        }\r\n\r\n        const trs = this.mainArea.nativeElement.querySelectorAll('tr.f-datagrid-body-row');\r\n\r\n        const updateCellStyle = (arr, col, style) => {\r\n            if (arr.length) {\r\n                const td = arr[row.index].querySelector(`[field=\"${col.field}\"]`);\r\n                if (td) {\r\n                    this.dg.renderCustomStyle(style, td);\r\n                }\r\n            }\r\n        };\r\n\r\n        this.dg.flatColumns.forEach(col => {\r\n            if (col.styler) {\r\n                const _rd = row.data;\r\n                const val = Utils.getValue(col.field, _rd);\r\n                const cs = col.styler(val, _rd, row.index);\r\n                if (cs && Object.keys(cs).length) {\r\n                    updateCellStyle(leftTrs, col, cs);\r\n                    updateCellStyle(rightTrs, col, cs);\r\n                    updateCellStyle(trs, col, cs);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private checkedRowsChanged() {\r\n        this.dgs.onCheckedRowsCountChange();\r\n        const checkedRows = this.dg.checkeds;\r\n        this.dg.checkValues = checkedRows.map(r => r.id);\r\n        this.dg.checkValuesChange.emit(this.dg.checkValues);\r\n        this.dg.checkedChange.emit(checkedRows);\r\n    }\r\n\r\n    private getTrDomHeight() {\r\n        const list = [];\r\n        let rightTrs = [];\r\n        let leftTrs = [];\r\n        let trdoms = [];\r\n        if (this.fixedRightEl) {\r\n            rightTrs = this.fixedRightEl.nativeElement.querySelectorAll('tr');\r\n        }\r\n\r\n        if (this.fixedLeftEl) {\r\n            leftTrs = this.fixedLeftEl.nativeElement.querySelectorAll('.fixed-left-row');\r\n        }\r\n\r\n        if (this.mainArea) {\r\n            trdoms = this.mainArea.nativeElement.querySelectorAll('tr.f-datagrid-body-row');\r\n        }\r\n        trdoms.forEach((tr, i) => {\r\n            let t1 = 0;\r\n            const t2 = Math.ceil(tr.offsetHeight);\r\n            let t3 = 0;\r\n            if (leftTrs && leftTrs.length) {\r\n                t1 = Math.ceil(leftTrs[i].offsetHeight);\r\n            }\r\n\r\n            if (rightTrs && rightTrs.length) {\r\n                t3 = Math.ceil(rightTrs[i].offsetHeight);\r\n            }\r\n\r\n            const _h = Math.max(t1, t2, t3, this.dg.rowHeight);\r\n            list.push(_h);\r\n        });\r\n        return list;\r\n    }\r\n\r\n\r\n    updateRowHeight2() {\r\n        let rightTrs = [];\r\n        let leftTrs = [];\r\n        let trdoms = [];\r\n        if (this.fixedRightEl) {\r\n            rightTrs = this.fixedRightEl.nativeElement.querySelectorAll('tr');\r\n        }\r\n\r\n        if (this.fixedLeftEl) {\r\n            leftTrs = this.fixedLeftEl.nativeElement.querySelectorAll('.fixed-left-row');\r\n        }\r\n\r\n        if (this.mainArea) {\r\n            trdoms = this.mainArea.nativeElement.querySelectorAll('tr.f-datagrid-body-row');\r\n        }\r\n\r\n        trdoms.forEach((tr: any, i) => {\r\n            this.removeRowHeightCls(tr);\r\n            if (leftTrs && leftTrs[i]) {\r\n                this.removeRowHeightCls(leftTrs[i]);\r\n            }\r\n            if (rightTrs && rightTrs[i]) {\r\n                this.removeRowHeightCls(rightTrs[i]);\r\n            }\r\n        });\r\n\r\n        if (this['UPDATE_ROW_HEIGHT_TIMER']) {\r\n            clearTimeout(this['UPDATE_ROW_HEIGHT_TIMER']);\r\n        }\r\n\r\n        this['UPDATE_ROW_HEIGHT_TIMER'] = setTimeout(() => {\r\n            trdoms.forEach((tr, i) => {\r\n                let t1 = 0;\r\n                const t2 = Math.ceil(tr.offsetHeight);\r\n                let t3 = 0;\r\n\r\n                let leftTr = null;\r\n                let rightTr = null;\r\n                if (leftTrs && leftTrs.length) {\r\n                    t1 = Math.ceil(leftTrs[i].offsetHeight);\r\n                    leftTr = leftTrs[i]\r\n                }\r\n\r\n                if (rightTrs && rightTrs.length) {\r\n                    t3 = Math.ceil(rightTrs[i].offsetHeight);\r\n                    rightTr = rightTrs[i];\r\n                }\r\n\r\n                const _h = Math.max(t1, t2, t3, this.dg.rowHeight);\r\n\r\n                if (!this.dg.nowrap || this.dg.autoHeight) {\r\n                    const heightClsName = WORDWRAP_ROW_HEIGHT_CLS + '_' + _h;\r\n                    const minRowHeightClsName = 'min_row_height_' + this.rowHeight;\r\n                    \r\n                    const _addRowHeightClsToDom = (trdom) => {\r\n                        this.removeRowHeightCls(trdom);\r\n                        this.render.addClass(trdom, heightClsName);\r\n                        this.render.addClass(trdom, minRowHeightClsName);\r\n                    }\r\n\r\n                    this.addRowHeightCls(heightClsName, _h);\r\n\r\n                    _addRowHeightClsToDom(tr);\r\n\r\n                    if (leftTr) {\r\n                        _addRowHeightClsToDom(leftTr);\r\n                    }\r\n\r\n                    if (rightTr) {\r\n                        _addRowHeightClsToDom(rightTr);\r\n                    }\r\n                }\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    private removeRowHeightCls(tr) {\r\n        if (!tr) {\r\n            return;\r\n        }\r\n        const _cls = Array.from(tr.classList).find((n: string) => n.indexOf(WORDWRAP_ROW_HEIGHT_CLS) > -1);\r\n        if (_cls) {\r\n            tr.classList.remove(_cls);\r\n        }\r\n    }\r\n\r\n    private addRowHeightCls(heightClsName: string, _h: number) {\r\n        this.dgs.removeCssRule(`${this.dg.customStyleKey()} .${heightClsName}`);\r\n        this.dg.renderCustomStyle2({style: { height: _h + 'px!important' }}, null, heightClsName);\r\n    }\r\n\r\n\r\n    /** åè®¸æ°æ®æè¡æ¶ï¼è®¡ç®è¡å·çè¡é« */\r\n    updateRowHeight(trDomId = null) {\r\n        if (this.fast) {\r\n            return;\r\n        }\r\n\r\n        if (!this.mainArea) {\r\n            return;\r\n        }\r\n\r\n        const dgBody = this.el.nativeElement.querySelector('div.f-datagrid-body');\r\n        if (dgBody) {\r\n            if (!this.dg.nowrap || this.dg.autoHeight) {\r\n                this.render.addClass(dgBody, 'data-wrap');\r\n            } else {\r\n                this.render.removeClass(dgBody, 'data-wrap');\r\n            }\r\n        }\r\n        \r\n\r\n        if (!trDomId) {\r\n            this.updateRowHeight2();\r\n        } else {\r\n            const tr = Utils.getTrDomById(trDomId, document);\r\n            if (!tr) {\r\n                return;\r\n            }\r\n\r\n            const leftTrId = trDomId + '_fixedleft';\r\n            const rightTrId = trDomId + '_fixedright';\r\n            const leftTr = Utils.getTrDomById(leftTrId, document);\r\n            const rightTr = Utils.getTrDomById(rightTrId, document);\r\n            this.removeRowHeightCls(tr);\r\n            this.removeRowHeightCls(leftTr);\r\n            this.removeRowHeightCls(rightTr);\r\n\r\n\r\n            const _arr = [];\r\n            if (this.fixedRightEl) {\r\n                const rtr = Utils.getTrDomById(trDomId, this.fixedRightEl.nativeElement);\r\n                if (rtr) {\r\n                    _arr.push(Math.ceil(rtr.offsetHeight));\r\n                }\r\n            }\r\n\r\n            if (this.fixedLeftEl) {\r\n                const ltr = Utils.getTrDomById(trDomId, this.fixedLeftEl.nativeElement);\r\n                if (ltr) {\r\n                    _arr.push(Math.ceil(ltr.offsetHeight));\r\n                }\r\n            }\r\n\r\n            if (this.mainArea) {\r\n                const tr = Utils.getTrDomById(trDomId, this.mainArea.nativeElement);\r\n                if (tr) {\r\n                    _arr.push(Math.ceil(tr.offsetHeight));\r\n                }\r\n            }\r\n\r\n            const _h = Math.max(..._arr);\r\n\r\n            const heightClsName = WORDWRAP_ROW_HEIGHT_CLS + '_' + _h;\r\n\r\n            if (!this.dg.nowrap || this.dg.autoHeight) {\r\n\r\n                this.render.addClass(tr, heightClsName);\r\n                this.addRowHeightCls(heightClsName, _h);\r\n\r\n                if (leftTr) {\r\n                    this.render.addClass(leftTr, heightClsName);\r\n                }\r\n\r\n                if (rightTr) {\r\n                    this.render.addClass(rightTr, heightClsName);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.updateCanvasHeight();\r\n\r\n        // ç§»é¤height: auto\r\n        const trdoms = this.dg.dgContainer.nativeElement.querySelectorAll('.f-datagrid-body-row:not(f-datagrid-footer-row)');\r\n        trdoms.forEach(n => n.style.height = '');\r\n\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n\r\n    private getBodyStyle() {\r\n        let h = this.getViewPortHeight();\r\n        if (!this.data.length) {\r\n\r\n            if (this.dg.useBlankWhenDataIsEmpty) {\r\n                h = this.dg.emptyDataHeight;\r\n            } else {\r\n                if (this.dg.autoHeight) {\r\n                    h = this.dg.emptyDataHeight;\r\n                }\r\n\r\n                if (this.dg.footerData && this.dg.showFooter) {\r\n                    let fd = this.dg.footerData;\r\n                    if (this.dg.footerData.subscribe) {\r\n                        fd = this.dg.footerData['value'];\r\n                    }\r\n\r\n                    if (fd && Array.isArray(fd) && fd.length) {\r\n                        h = h - this.dg.footerHeight;\r\n\r\n                        if (this.dg.footerPosition === 'both') {\r\n                            h = h - this.dg.footerHeight;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n\r\n            if (this.dg.showFooter && this.dg.footerPosition === 'both') {\r\n                h = h - this.dg.footerHeight;\r\n            }\r\n        }\r\n        return {\r\n            height: `${Math.floor(h) + 1}px`\r\n        };\r\n    }\r\n\r\n    private updateScrollPosition(scrollLeft: any) {\r\n        this.scrollLeft = scrollLeft;\r\n\r\n        this.fixedRightScrollLeft = this.scrollLeft + this.width - this.rightFixedWidth;\r\n        if (this.fixedRightScrollLeft === this.maxScrollLeft || this.fixedRightScrollLeft > this.maxScrollLeft) {\r\n            this.fixedRightScrollLeft = this.maxScrollLeft;\r\n            this.showRightShadow = false;\r\n        } else {\r\n            this.showRightShadow = true;\r\n        }\r\n\r\n        if (this.fixedLeftEl) {\r\n            this.render.setStyle(this.fixedLeftEl.nativeElement, 'transform', `translate3d(${this.scrollLeft}px, 0px, 0px)`);\r\n        }\r\n\r\n        if (this.fixedRightEl) {\r\n            let l = this.dg.width - (this.dg.showBorder ? 2 : 0) - this.columnsGroup.rightFixedWidth;\r\n            if (this.ps && this.ps.instance && this.ps.instance.scrollbarYActive && this.dg.scrollBarShowMode === 'allways') {\r\n                l -= 18;\r\n            }\r\n            let realWidth = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth + this.columnsGroup.rightFixedWidth;\r\n            if (this.dg.width - (this.dg.showBorder ? 2 : 0) > realWidth) {\r\n                l = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth;\r\n            }\r\n            l += this.scrollLeft;\r\n\r\n            this.fixedRightScrollLeft = l;\r\n            this.render.setStyle(this.fixedRightEl.nativeElement, 'transform', `translate3d(${this.fixedRightScrollLeft}px, 0px, 0px)`);\r\n        }\r\n    }\r\n\r\n    onScrollToX($event: any) {\r\n        const x = $event.target.scrollLeft;\r\n        this.updateScrollPosition(x);\r\n        // this.cd.detectChanges();\r\n        this.dgs.onScrollMove(x, SCROLL_X_ACTION);\r\n        this.dfs.updateProperty('scrollInfo', { y: $event.target.scrollTop, x });\r\n        this.dgs.showFixedShadow.emit({ showRightShadow: this.showRightShadow, x: this.fixedRightScrollLeft });\r\n    }\r\n\r\n    onScrollToY($event: any) {\r\n\r\n        if (this._scrollTimer) {\r\n            clearTimeout(this._scrollTimer);\r\n        }\r\n\r\n        this._scrollTimer = setTimeout(() => {\r\n            const y = $event.target.scrollTop;\r\n\r\n            if (this.dg.virtualized) {\r\n                this.handleScroll();\r\n            }\r\n\r\n            this.scrollTop = y;\r\n\r\n            this.dfs.updateProperty('scrollInfo', { y, x: $event.target.scrollLeft });\r\n\r\n            this.dg.scrollY.emit(y);\r\n            this.dgs.onScrollMove(y, SCROLL_Y_ACTION);\r\n        }, 100);\r\n    }\r\n\r\n    onPsXReachStart($event: any) {\r\n        const x = $event.target.scrollLeft;\r\n        this.updateScrollPosition(x);\r\n        this.dgs.onScrollMove(x, SCROLL_X_REACH_START_ACTION);\r\n    }\r\n\r\n    onPsXReachEnd($event: any) {\r\n        this.showRightShadow = false;\r\n        // const x = $event.target.scrollLeft;\r\n        // this.updateScrollPosition(x);\r\n        // this.cd.detectChanges();\r\n        // // this.dgs.onShowFixedShadow(this.showRightShadow);\r\n        // this.dgs.onScrollMove(x, SCROLL_X_REACH_END_ACTION);\r\n    }\r\n\r\n    isChecked(rowData: any) {\r\n        if (rowData) {\r\n            return this.dfs.isRowChecked(rowData[this.dg.idField]);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    isSelected(rowData: any) {\r\n        if (rowData) {\r\n            return this.dfs.isRowSelected(rowData[this.dg.idField]);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    toggleGroupRow(row, open = true) {\r\n        row.expanded = open;\r\n        this.ps.update();\r\n    }\r\n\r\n\r\n\r\n    /** =================================== å ====== é ====== çº¿ =================================== */\r\n\r\n    /** è·åå¯è§åºåé«åº¦ */\r\n    public getViewPortHeight() {\r\n        let viewPortHeight = this.dg.height;\r\n        if (this.dg.showHeader) {\r\n            viewPortHeight = viewPortHeight - this.dg.realHeaderHeight;\r\n        }\r\n\r\n        if ((this.dg.enableFilterRow || this.dg.enableSmartFilter) && this.dg.showFilterBar) {\r\n            viewPortHeight -= this.dg.filterBarHeight;\r\n        }\r\n\r\n        if (this.dg.showRowGroupPanel) {\r\n            viewPortHeight -= this.dg.rowGroupPanelHeight;\r\n        }\r\n\r\n        if (this.dg.showFooter && this.data.length) {\r\n            viewPortHeight = viewPortHeight - this.dg.footerHeight;\r\n        }\r\n\r\n        if (this.dg.pagination) {\r\n            viewPortHeight = viewPortHeight - this.dg.pagerHeight - 2;\r\n        }\r\n\r\n        if (this.dg.showBorder) {\r\n            viewPortHeight -= 2;\r\n        }\r\n\r\n        this.viewportH = viewPortHeight;\r\n        return viewPortHeight;\r\n    }\r\n\r\n    // ä¸æè¡æ¶ï¼æææ°æ®çé«åº¦\r\n    private allRowsHeight() {\r\n        const rowHeightpatch = 1;  // this.dg.autoHeight ? 2 : 1;\r\n        const rowHeight = this.dg.rowHeight + rowHeightpatch;\r\n\r\n        let itemsCount = 0;\r\n        if (this.dg.groupRows) {\r\n            const data = this.data.filter(n => n['__group_visible__'] || n['__group_visible__']===undefined);\r\n            if (this.dg.groupSummaryPosition === 'inGroupRow') {\r\n                itemsCount = data.filter(n => !n['__group_footer__']).length;\r\n            } else {\r\n                itemsCount = data.length;\r\n            }\r\n        } else {\r\n            itemsCount = this.data.length;\r\n        }\r\n\r\n        let h = itemsCount * rowHeight;\r\n\r\n        if (this.dg.autoHeight) {\r\n            h += itemsCount;\r\n        } else {\r\n            h += 2;\r\n        }\r\n\r\n        return h;\r\n    }\r\n\r\n    private getCanvasHeight() {\r\n        let canvasHeight = 0;\r\n\r\n        if (!this.data || !this.data.length) {\r\n            this.canvasHeight = 0;\r\n            return 0;\r\n        }\r\n\r\n        if (this.dg.nowrap) {\r\n            // tfs 572022\r\n            if (this.dg.maxHeight && this.dg.autoHeight && this.mainArea) {\r\n                canvasHeight = Math.floor(this.mainArea.nativeElement.getBoundingClientRect().height);\r\n            } else {\r\n                canvasHeight = this.allRowsHeight();\r\n            }\r\n        } else {\r\n            canvasHeight = this.getTrDomHeight().reduce((r, c) => r + c, 0);\r\n        }\r\n\r\n        if (!canvasHeight) {\r\n            canvasHeight = this.viewportH;\r\n        }\r\n\r\n        canvasHeight = canvasHeight + (this.dg.scrollBarShowMode === 'allways' && (this.ps.instance && this.ps.instance['scrollbarXActive']) ? 18 : 0);\r\n        this.canvasHeight = canvasHeight;\r\n        return canvasHeight;\r\n    }\r\n\r\n    updateCanvasHeight() {\r\n        this.canvasHeight = this.getCanvasHeight();\r\n    }\r\n\r\n\r\n    private getRowFromPosition(y) {\r\n        return Math.floor(y / (this.dg.rowHeight + 1));\r\n    }\r\n\r\n    getVisibleRange(viewportTop?: number, viewportLeft?: number) {\r\n        if (viewportTop == null) {\r\n            viewportTop = this.scrollTop;\r\n        }\r\n        if (viewportLeft == null) {\r\n            viewportLeft = this.scrollLeft;\r\n        }\r\n\r\n        return {\r\n            top: this.getRowFromPosition(viewportTop),\r\n            bottom: this.getRowFromPosition(viewportTop + this.viewportH) + 1,\r\n            leftPx: viewportLeft,\r\n            rightPx: viewportLeft + this.viewportW\r\n        };\r\n    }\r\n\r\n    private getRenderedRange(viewportTop?: number, viewportLeft?: number) {\r\n        const range = this.getVisibleRange(viewportTop, viewportLeft);\r\n        const buffer = Math.round(this.viewportH / (this.dg.rowHeight + 1));\r\n        const minBuffer = this.minRowBuffer;\r\n\r\n        if (this.vScrollDir == -1) {\r\n            range.top -= buffer;\r\n            range.bottom += minBuffer;\r\n        } else if (this.vScrollDir == 1) {\r\n            range.top -= minBuffer;\r\n            range.bottom += buffer;\r\n        } else {\r\n            range.top -= minBuffer;\r\n            range.bottom += minBuffer;\r\n        }\r\n\r\n        range.top = Math.max(0, range.top);\r\n        range.bottom = Math.min(this.data.length - 1, range.bottom);\r\n\r\n        range.leftPx -= this.viewportW;\r\n        range.rightPx += this.viewportW;\r\n\r\n        range.leftPx = Math.max(0, range.leftPx);\r\n        range.rightPx = Math.min(this.canvasWidth, range.rightPx);\r\n\r\n        return range;\r\n    }\r\n\r\n    private renderRows(range) {\r\n        const rows = [];\r\n        let dataLength = this.data.length;\r\n        let _data =  this.data;\r\n\r\n         // å¯ç¨åç»\r\n        if (this.dg.groupRows && this.dg.groupField) {\r\n            _data =  _data.filter(n => n['__group_visible__'] || n['__group_visible__']===undefined);\r\n\r\n            if (this.dg.groupSummaryPosition === 'inGroupRow') {\r\n                _data = _data.filter(n => !n['__group_footer__']);\r\n            }\r\n\r\n            dataLength = _data.length;\r\n            this.rowsCache = {};\r\n        }\r\n\r\n        for (let i = range.top; i <= range.bottom; i++) {\r\n            if (this.rowsCache[i] || (i == dataLength) ) {\r\n                continue;\r\n            }\r\n\r\n            rows.push(i);\r\n\r\n            // Create an entry right away so that appendRowHtml() can\r\n            // start populatating it.\r\n            this.rowsCache[i] = {\r\n                rowNode: null,\r\n\r\n                // ColSpans of rendered cells (by column idx).\r\n                // Can also be used for checking whether a cell has been rendered.\r\n                cellColSpans: [],\r\n\r\n                // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\r\n                cellNodesByColumnIdx: [],\r\n\r\n                // Column indices of cell nodes that have been rendered, but not yet indexed in\r\n                // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\r\n                // end of the row.\r\n                cellRenderQueue: []\r\n            };\r\n        }\r\n\r\n        for (let i = 0, ii = rows.length; i < ii; i++) {\r\n            this.rowsCache[rows[i]].rowNode = _data[rows[i]];\r\n        }\r\n\r\n        return Object.keys(this.rowsCache).map(n => this.rowsCache[n].rowNode).filter(n => n);\r\n    }\r\n\r\n\r\n    private removeRowFromCache(row) {\r\n        const cacheEntry = this.rowsCache[row];\r\n        if (!cacheEntry) {\r\n            return;\r\n        }\r\n\r\n        delete this.rowsCache[row];\r\n    }\r\n\r\n    private cleanupRows(rangeToKeep) {\r\n        for (const i in this.rowsCache) {\r\n            if (i < rangeToKeep.top || i > rangeToKeep.bottom) {\r\n                this.removeRowFromCache(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    hasYScrollbar(showYscrollbar?: boolean) {\r\n        setTimeout(() => {\r\n            showYscrollbar = showYscrollbar == undefined ? this.ps.instance.scrollbarYActive: showYscrollbar;\r\n            const hasY = showYscrollbar && this.dg.scrollBarShowMode === 'allways' ? 18 : 0;\r\n            this.dfs.updateProperty('scrollbarY', hasY);\r\n            this.dfs.resize();\r\n        }, 60);\r\n    }\r\n\r\n    onClickScrollArrow($event) {\r\n        const { dir, event } = $event;\r\n        if (this.ps && this.ps.instance) {\r\n            const { x, y } = this.ps.instance.reach;\r\n    \r\n            switch(dir) {\r\n                case 'left':\r\n                    if (x!== 'start') {\r\n                        this.viewScrollContainer.nativeElement.scrollLeft = this.viewScrollContainer.nativeElement.scrollLeft - 40;\r\n                    }\r\n                    break;\r\n                case 'right':\r\n                    if (x!== 'end') {\r\n                        this.viewScrollContainer.nativeElement.scrollLeft = this.viewScrollContainer.nativeElement.scrollLeft + 40;\r\n                    }\r\n                    break;\r\n                case 'top':\r\n                    if (y !== 'start') {\r\n                        this.viewScrollContainer.nativeElement.scrollTop = this.viewScrollContainer.nativeElement.scrollTop - 40;\r\n                    }\r\n                    break;\r\n                case 'bottom':\r\n                    if (y !== 'end') {\r\n                        this.viewScrollContainer.nativeElement.scrollTop = this.viewScrollContainer.nativeElement.scrollTop + 40;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            this.ps.update();\r\n        }\r\n    }\r\n\r\n    private renderData(detectchanges = true) {\r\n        this.canvasHeight = this.getCanvasHeight();\r\n        if (!this.dg.virtualized || this.dg.autoHeight) {\r\n            this.rows = this.data;\r\n        } else {\r\n            const visible = this.getVisibleRange();\r\n            const rendered = this.getRenderedRange();\r\n\r\n            // remove rows no longer in the viewport\r\n            this.cleanupRows(rendered);\r\n\r\n            // render missing rows\r\n            this.rows = this.renderRows(rendered);\r\n            this.startRowIndex = rendered.top;\r\n           \r\n            this.lastRenderedScrollTop = this.scrollTop;\r\n            this.lastRenderedScrollLeft = this.scrollLeft;\r\n\r\n\r\n            \r\n            this.blankTopHeight = this.startRowIndex * (this.dg.rowHeight + 1);\r\n            this.blankBottomHeight = this.canvasHeight - this.blankTopHeight - (this.rows.length * (this.dg.rowHeight + 1));\r\n            if (this.dg.scrollBarShowMode === 'allways' && this.ps && this.ps.instance && this.ps.instance.scrollbarXActive) {\r\n                this.blankBottomHeight += 22;\r\n            }\r\n\r\n\r\n            if (detectchanges) {\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    private handleScroll() {\r\n        this.scrollTop = this.ps.elementRef.nativeElement.scrollTop;\r\n        this.scrollLeft = this.ps.elementRef.nativeElement.scrollLeft;\r\n        return this._handleScroll();\r\n    }\r\n\r\n    private _handleScroll() {\r\n        const viewportContainer = this.viewScrollContainer.nativeElement;\r\n        let maxScrollDistanceY = viewportContainer.scrollHeight - viewportContainer.clientHeight;\r\n        let maxScrollDistanceX = viewportContainer.scrollWidth - viewportContainer.clientWidth;\r\n\r\n        // Protect against erroneous clientHeight/Width greater than scrollHeight/Width.\r\n        // Sometimes seen in Chrome.\r\n        maxScrollDistanceY = Math.max(0, maxScrollDistanceY);\r\n        maxScrollDistanceX = Math.max(0, maxScrollDistanceX);\r\n\r\n        // Ceiling the max scroll values\r\n        if (this.scrollTop > maxScrollDistanceY) {\r\n            this.scrollTop = maxScrollDistanceY;\r\n        }\r\n        if (this.scrollLeft > maxScrollDistanceX) {\r\n            this.scrollLeft = maxScrollDistanceX;\r\n        }\r\n\r\n        const vScrollDist = Math.abs(this.scrollTop - this.prevScrollTop);\r\n        const hScrollDist = Math.abs(this.scrollLeft - this.prevScrollLeft);\r\n\r\n        if (hScrollDist) {\r\n            this.prevScrollLeft = this.scrollLeft;\r\n\r\n            // $viewportScrollContainerX[0].scrollLeft = scrollLeft;\r\n            // if (hasFrozenColumns()) {\r\n            //     if (hasFrozenRows) {\r\n            //         $viewportTopR[0].scrollLeft = scrollLeft;\r\n            //     }\r\n            // } else {\r\n            //     if (hasFrozenRows) {\r\n            //         $viewportTopL[0].scrollLeft = scrollLeft;\r\n            //     }\r\n            // }\r\n        }\r\n\r\n        const lastScrollTop = this.lastRenderedScrollTop;\r\n\r\n        if (vScrollDist) {\r\n            this.vScrollDir = this.prevScrollTop < this.scrollTop ? 1 : -1;\r\n            this.prevScrollTop = this.scrollTop;\r\n\r\n            // if (hasFrozenColumns()) {\r\n            //     if (hasFrozenRows && !options.frozenBottom) {\r\n            //         $viewportBottomL[0].scrollTop = scrollTop;\r\n            //     } else {\r\n            //         $viewportTopL[0].scrollTop = scrollTop;\r\n            //     }\r\n            // }\r\n\r\n            // switch virtual pages if needed\r\n            if (vScrollDist < this.viewportH) {\r\n                this._scrollTo(this.scrollTop);\r\n            }\r\n        }\r\n\r\n        if (hScrollDist || vScrollDist) {\r\n            const dx = Math.abs(this.lastRenderedScrollLeft - this.scrollLeft);\r\n            const dy = Math.abs(lastScrollTop - this.scrollTop);\r\n            if (dx > 20 || dy > 20) {\r\n                // if rendering is forced or scrolling is small enough to be \"easy\", just render\r\n                if (dy < this.viewportH && dx < this.viewportW) {\r\n                    this.renderData();\r\n                } else {\r\n                    this.renderData();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (hScrollDist || vScrollDist) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _scrollTo(y) {\r\n        const $viewportScrollContainerY = this.viewScrollContainer.nativeElement;\r\n        y = Math.max(y, 0);\r\n        y = Math.min(y, this.canvasHeight - this.viewportH);\r\n\r\n        const newScrollTop = y;\r\n\r\n        if (this.prevScrollTop != newScrollTop) {\r\n            this.vScrollDir = (this.prevScrollTop < newScrollTop) ? 1 : -1;\r\n            this.lastRenderedScrollTop = (this.scrollTop = this.prevScrollTop = newScrollTop);\r\n\r\n            // if (hasFrozenColumns()) {\r\n            //     $viewportTopL[0].scrollTop = newScrollTop;\r\n            // }\r\n\r\n            // if (hasFrozenRows) {\r\n            //     $viewportBottomL[0].scrollTop = $viewportBottomR[0].scrollTop = newScrollTop;\r\n            // }\r\n\r\n            // $viewportScrollContainerY.scrollTop = newScrollTop;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onMouseClick($event: MouseEvent) {\r\n        // document.body.click();\r\n        const target = $event.target as any;\r\n\r\n        if (target.nodeName === 'TEXTAREA' || target.nodeName === 'INPUT' ) {\r\n            return;\r\n        }\r\n    \r\n        let td = target;\r\n        if (target.nodeName !== 'TD') {\r\n            td = target.closest('TD');\r\n        }\r\n\r\n        if (!td) {\r\n            if (this.dg.isEditing() && (this.dg.exitRowEditingWhenBodyClick || this.dg.editMode == 'cell') ) {\r\n                this.dg.endEditing();\r\n            }\r\n            return;\r\n        }\r\n\r\n        let curT = new Date().getTime()\r\n        //ä¸ä¸æ¬¡æ¶é´æ³\r\n        let lastT = this['lastTapDiffTime'] || 0;\r\n        //å¯¹ä¸ä¸æ¬¡æ¶é´æ³éæ°èµå¼\r\n        this['lastTapDiffTime'] = curT;\r\n        //åå·®\r\n        let diff = curT - lastT;\r\n       \r\n\r\n        const isClickSameRow = () => {\r\n            if (this._clickCellWeakMap.has(this.el.nativeElement) && td && td.parentElement === this._clickCellWeakMap.get(this.el.nativeElement)) {\r\n                this._clickCellWeakMap.delete(this.el.nativeElement);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        const runTdClick = () => {\r\n            if (td && td.selectCell) {\r\n                td.selectCell($event, td); \r\n            } else {\r\n                this._selectRow(td, (id, rowSelected) => {\r\n                    let emit = !rowSelected;\r\n                    if (this.dg.selectionMode === 'default') {\r\n                        this.dg.clearCheckeds();\r\n                        emit = true;\r\n                    }\r\n                    this.dg.selectRow(id, emit, false);\r\n                    this.dg['updateAllCheckboxStatus']();\r\n                });\r\n            }\r\n        }\r\n\r\n        const runSelectRow = () => {\r\n            const dblclickTimer = this.dg.dblclickRow.observers.length ? 200: 0;\r\n\r\n            if (isClickSameRow() ) {\r\n                if (diff < dblclickTimer) {\r\n                    this.dg.writeConsole('åå»');\r\n                    //æ¸é¤ä¸ä¸æ¬¡åå»çå®æ¶å¨ID\r\n                    clearTimeout(this['lastTapTimeFunc'])\r\n                } else {\r\n                    //å®æ¶å¨id\r\n                    this['lastTapTimeFunc'] = setTimeout(() => {\r\n                        runTdClick();\r\n                    }, dblclickTimer);\r\n                }\r\n            } else {\r\n                this['lastTapTimeFunc'] = setTimeout(() => {\r\n                    runTdClick();\r\n                }, dblclickTimer ? 180: 0);\r\n            }\r\n\r\n            this._clickCellWeakMap.set(this.el.nativeElement, td.parentElement);\r\n        }\r\n\r\n\r\n        if (!this.dg.editable && td) {\r\n            // è§£å³è¶é¾ç¹å»äºä»¶ï¼è¦åæ§è¡éä¸­è¡\r\n            $event.stopPropagation();\r\n            runSelectRow();\r\n            return;\r\n        }\r\n\r\n        if (this.dg.editMode === 'row') {\r\n            if (this.dg.exitRowEditingWhenBodyClick && this.dg.isEditing()) {\r\n                this.dg.endEditing();\r\n            }\r\n            this._selectRow(td, (id, rowSelected) => {\r\n                this.dg.selectRow(id, !rowSelected, false);\r\n            });\r\n            return;\r\n        }\r\n        if (!td && this.dg.currentCell) {\r\n            td = this.dg.currentCell.cellElement;\r\n            if (td && td.closeEdit) {\r\n                $event.stopPropagation();\r\n                td.closeEdit();\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        if (td) {\r\n            // è¡ç¦ç¨æ¶\r\n            if (this.dg.disableRow) {\r\n                let rowData = null;\r\n                let rowIndex = -1;\r\n                if (td.gridCellData) {\r\n                    rowData = td.gridCellData.rowData;\r\n                    rowIndex = td.gridCellData.rowIndex;\r\n                } else {\r\n                    const rowInfo = this.dg.getRowIdByTr(td.parentElement);\r\n                    if (rowInfo) {\r\n                        rowData = rowInfo.data;\r\n                        rowIndex = rowInfo.index;\r\n                    }\r\n                }\r\n\r\n                if (rowData) {\r\n                    if (this.dg.disableRow(rowData, rowIndex)) {\r\n                        this.dg.endEditing();\r\n                        return;\r\n                    }\r\n                } else {\r\n                    this.dg.writeConsole('æªè·åå°è¡æ°æ®ã');\r\n                    return;\r\n                }\r\n            }\r\n            $event.stopPropagation();\r\n            if (this.dg.editable && this.dg.editMode === 'cell') {\r\n                if (td.edit) {\r\n                    this._selectRow(td, () => {\r\n                        td.edit($event);\r\n                    });\r\n                } else {\r\n                    // åè®¸ç¼è¾ç¹å»è¡å·æ¶ï¼å¯ä»¥éä¸­è¡\r\n                    if (td.selectCell || td.className.indexOf('f-datagrid-cell-rownumber') > -1) {\r\n                        runSelectRow();\r\n                    } else {\r\n                        // å½ç¹åç»è¡æåè®¡è¡æ¶ï¼é¡»ç»æç¼è¾\r\n                        this.dg.isEditing() && this.dg.endEditing();\r\n                    }\r\n                }\r\n            } else {\r\n                if (td.selectCell) {\r\n                    runSelectRow();\r\n                } else {\r\n                    if (this.dg.isEditing() && (this.dg.exitRowEditingWhenBodyClick || this.dg.editMode === 'cell')) {\r\n                        this.dg.endEditing();\r\n                    }\r\n                    // this._selectRow(td, (id, rowSelected) => {\r\n                    //     this.dg.selectRow(id, !rowSelected, false);\r\n                    // });\r\n                    runTdClick();\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    private _selectRow(tdEl: HTMLElement, callback) {\r\n        if (tdEl) {\r\n            const tr = tdEl.parentElement;\r\n            const rowInfo = this.dg.getRowIdByTr(tr);\r\n\r\n            if (!rowInfo) {\r\n                return;\r\n            }\r\n\r\n            const {data, index, id} = rowInfo\r\n            const rowisSelected = this.dfs.isRowSelected(id);\r\n            this.dg._beforeSelectRow$(index, data, id).pipe(takeUntil(this.destroy$)).subscribe((t: any) => {\r\n                if (t) {\r\n                    callback(id, rowisSelected);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onBeforeShowContextMenu = (e: any) => {\r\n        // row_1_fixedleft  row_1  row_1_fixedright\r\n        const { contextMenuDom, event } = e;\r\n\r\n        if (event.target.closest('.datagrid-editor')) {\r\n            return of({show: false});\r\n        }\r\n\r\n\r\n        let rowID = event.target.id;\r\n\r\n        if (contextMenuDom) {\r\n            // æé¤åç»è¡ãåç»åè®¡è¡\r\n            if (contextMenuDom.className.indexOf('f-datagrid-group-row') === -1 && contextMenuDom.className.indexOf('f-datagrid-group-footer') === -1) {\r\n                rowID = Utils.getRowIdByTr(contextMenuDom);\r\n                const rowData = this.dfs.findRow(rowID);\r\n\r\n                \r\n               \r\n                const focusTargetWidth = this.viewportW > this.totalWidth ? this.totalWidth : this.viewportW;\r\n                const td = event.target.closest('td') ;\r\n                let colInfo = null;\r\n                if (td) {\r\n                    const fieldName = td.getAttribute('field');\r\n                    colInfo = fieldName ? this.dfs.getColumn(fieldName) : null;\r\n                }\r\n\r\n                let beforeShowContextMenus$ = of(true);\r\n                if (this.dg.beforeShowContextMenus) {\r\n                    const showContextMenu: any = this.dg.beforeShowContextMenus({ rowid: rowID, data: rowData.data, grid: this.dg, column: colInfo});\r\n                    if (typeof showContextMenu === 'boolean') {\r\n                        beforeShowContextMenus$ = of(showContextMenu);\r\n                    } else {\r\n                        if (showContextMenu['subscribe']) {\r\n                            beforeShowContextMenus$ = showContextMenu;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return beforeShowContextMenus$.pipe(\r\n                    switchMap((e: any) => {\r\n                        const params = { rowid: rowID, data: rowData.data, grid: this.dg, column: colInfo};\r\n                        if (typeof e === 'object') {\r\n                            const { show: isShow, customData } = e;\r\n                            return of({show: isShow, data: Object.assign(params, { customData: customData ? customData: null }), focusTargetWidth});\r\n                        } else {\r\n                            return of({ show: e, data: params, focusTargetWidth });\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n        return of({ show: false });\r\n    }\r\n}\r\n","\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-09-26 17:17:32\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Directive, Input, NgZone, OnInit, Renderer2, ElementRef, OnDestroy, Inject, forwardRef, ChangeDetectorRef, HostListener } from '@angular/core';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { Utils } from './../../utils/utils';\r\n@Directive({\r\n    selector: '[row-hover]',\r\n    exportAs: 'rowHover'\r\n})\r\nexport class DatagridRowHoverDirective implements OnInit, OnDestroy {\r\n\r\n    @Input() rowIndex: number;\r\n    @Input('row-hover') rowData: any;\r\n\r\n    private _mouseenter = null;\r\n    private _mouseleave = null;\r\n\r\n    constructor(\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent,\r\n        @Inject(forwardRef(() => DatagridBodyComponent)) public dgb: DatagridBodyComponent,\r\n        private cd: ChangeDetectorRef,\r\n        private el: ElementRef, private zone: NgZone, private render: Renderer2) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.dg.rowHover && !this.dg.fast) {\r\n            this.zone.runOutsideAngular( () => {\r\n                this._mouseenter = Utils.on(this.el.nativeElement, 'mouseenter', this.onmouseenter.bind(this), { target: '.f-datagrid-body-row', options: { capture: true }});\r\n                this._mouseleave = Utils.on(this.el.nativeElement, 'mouseleave', this.onmouseleave.bind(this), { target: '.f-datagrid-body-row', options: { capture: true }});\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this._mouseenter) {\r\n            this._mouseenter();\r\n        }\r\n\r\n        if (this._mouseleave) {\r\n            this._mouseleave();\r\n        }\r\n    }\r\n\r\n    // @HostListener('mouseenter')\r\n    onmouseenter(event) {\r\n        this.setRowHoverCls(event);\r\n    }\r\n\r\n    // @HostListener('mouseleave')\r\n    onmouseleave(event) {\r\n        this.setRowHoverCls(event, false);\r\n    }\r\n\r\n    setRowHoverCls(event, hover = true) {\r\n        if (!this.dg.rowHover) {\r\n            return;\r\n        }\r\n\r\n        if (!event.target.matches('.f-datagrid-body-row')) {\r\n            return;\r\n        }\r\n\r\n        this.rowIndex = event.target.getAttribute('index');\r\n\r\n        const leftTableCls = 'f-datagrid-body-fixed-left';\r\n        const rightTableCls = 'f-datagrid-body-fixed-right';\r\n        const centerTableCls = 'f-datagrid-body-center';\r\n\r\n        const body = this.dg.el.nativeElement.querySelector('.f-datagrid-body');\r\n\r\n        if (!body) {\r\n            return;\r\n        }\r\n\r\n        const leftTableDom = body.querySelector(`.${leftTableCls}`);\r\n        const rightTableDom = body.querySelector(`.${rightTableCls}`);\r\n        const centerTableDom = body.querySelector(`.${centerTableCls}`);\r\n\r\n        const method = hover ? 'addClass' : 'removeClass';\r\n        const trSelector = `tr[index=\"${this.rowIndex}\"]`;\r\n        const dom = this.el.nativeElement.closest('div');\r\n        if (dom && dom.className) {\r\n            const trDom = centerTableDom.querySelector(trSelector);\r\n\r\n            if (!trDom) {\r\n                return;\r\n            }\r\n\r\n            if (trDom.className.indexOf('f-datagrid-disable-row') > -1) {\r\n                return;\r\n            }\r\n            let ltr = null;\r\n            let rtr = null;\r\n            if (rightTableDom) {\r\n                rtr = rightTableDom.querySelector(trSelector);\r\n            }\r\n            if (leftTableDom) {\r\n                ltr = leftTableDom.querySelector(trSelector);\r\n            }\r\n\r\n            if (leftTableDom && ltr) {\r\n                this.render[method](ltr, this.dg.hoverRowCls);\r\n            }\r\n            if (rightTableDom && rtr) {\r\n                this.render[method](rtr, this.dg.hoverRowCls);\r\n            }\r\n\r\n            this.render[method](trDom, this.dg.hoverRowCls);\r\n\r\n        }\r\n    }\r\n\r\n}\r\n","import { delay, filter, takeUntil } from 'rxjs/operators';\r\n\r\n/*\r\n* @Author: ç¯çç§æ(Lucas Huang)\r\n* @Date: 2019-08-12 07:47:12\r\n* @LastEditors: ç¯çç§æ(Lucas Huang)\r\n* @LastEditTime: 2019-11-27 13:31:43\r\n* @QQ: 1055818239\r\n* @Version: v0.0.1\r\n*/\r\nimport { Renderer2, Self, NgZone, SimpleChanges, OnChanges, ChangeDetectorRef, OnDestroy, Optional, ContentChildren, QueryList, ViewChildren } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport {\r\n    Directive, Input, Output, EventEmitter, HostListener,\r\n    OnInit, ElementRef, AfterViewInit, Injector, Inject, forwardRef\r\n} from '@angular/core';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridCellComponent } from './datagrid-cell.component';\r\nimport { DatagridRow } from '../../types/datagrid-row';\r\nimport { DatagridValidator } from '../../types/datagrid-validator';\r\nimport { DatagridRowHoverDirective } from './datagrid-row-hover.directive';\r\nimport { Utils } from '../../utils/utils';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport { FormatCellDataPipe } from '../../utils/format-cell-data.pipe';\r\nimport { ALLOW_EDIT_CELL_HIGHLIGHT_CLS, CUSTOM_ROW_CLS } from '../../types/constant';\r\n\r\n\r\n@Directive({\r\n    selector: '[grid-row]',\r\n    exportAs: 'gridRow'\r\n})\r\nexport class DatagridRowDirective implements OnInit, AfterViewInit, DatagridRow, OnChanges, OnDestroy {\r\n    @Input() editable = false;\r\n    @Input('grid-row') rowData: any;\r\n    @Input() rowIndex: number;\r\n    @Output() clickHandler = new EventEmitter();\r\n    @Output() rowUpdated = new EventEmitter();\r\n    // ç¨äºæ´è¡ç¼è¾ï¼å¿å¨ï¼ï¼ï¼\r\n    @ContentChildren(forwardRef(() => DatagridCellComponent), { descendants: true }) cells: QueryList<DatagridCellComponent>;\r\n\r\n\r\n    get rowId() {\r\n        if (this.rowData) {\r\n            return this.dfs.primaryId(this.rowData);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get disabled() {\r\n        if (this.dg.disableRow) {\r\n            return this.dg.disableRow(this.rowData, this.rowIndex);\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    form: FormGroup = new FormGroup({});\r\n    private dfs: DatagridFacadeService;\r\n    private documentRowDblclickEvent: any = null;\r\n    private ngZone: NgZone;\r\n    private dgb: DatagridBodyComponent;\r\n    cd: ChangeDetectorRef;\r\n\r\n    columnsChangedSubscription: Subscription = null;\r\n    datasourceChangedSubscription: Subscription = null;\r\n    subscriptions: Subscription[] = [];\r\n    private destroy$ = new Subject();\r\n    constructor(\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent,\r\n        private injector: Injector, private fb: FormBuilder, public el: ElementRef,\r\n        private render: Renderer2, @Optional() @Self() public drHover: DatagridRowHoverDirective) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.ngZone = this.injector.get(NgZone);\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n        this.dgb = this.injector.get(DatagridBodyComponent);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.datasourceChangedSubscription = this.dg.dgs.onDataSourceChange.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            this.renderCustomStyle();\r\n        });\r\n\r\n        this.columnsChangedSubscription = this.dg.dgs.columnsChanged.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            this.createControl();\r\n        });\r\n\r\n        const s$ = this.dg.dfs.rowUpdate$.pipe(\r\n            takeUntil(this.destroy$),\r\n            filter((row: any) => {\r\n                return row.keyID === this.rowId;\r\n            })\r\n        ).subscribe((row: { index: number, data: any }) => {\r\n            if (row && row.data) {\r\n                // this.rowData = cloneDeep(row.data);\r\n                if (this.dfs.primaryId(row.data) === this.rowId) {\r\n                    this.renderCustomStyle(row.data);\r\n                }\r\n\r\n                // æ­¤å¤ä¼å¯¼è³rowData ä¸æ°æ®æºçå¼ç¨ä¸ä¸è´\r\n                // this.rowData = {...row.data};\r\n                \r\n                // æ´æ°å½åæ°æ®\r\n                Object.assign(this.rowData, row.data);\r\n                \r\n                this.updateCellEmptyStyle();\r\n                this.rowUpdated.emit(this.rowData);\r\n                this.cd.detectChanges();\r\n            }\r\n        });\r\n        this.subscriptions.push(s$);\r\n\r\n        const s1$ = this.dg.dgs.updateEmptyStyle$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            this.updateCellEmptyStyle();\r\n        });\r\n        this.subscriptions.push(s1$);\r\n\r\n        const s2$ = this.dg.dfs.selectRow$.pipe(takeUntil(this.destroy$)).pipe(\r\n            filter((r: any) => {\r\n                return r.id === this.rowId;\r\n            })\r\n        ).subscribe(() => {\r\n            if (this.dg.selectedRow && !this.dg.selectedRow.dr) {\r\n                const p = this.getRowPosition();\r\n                if (p === 'left') {\r\n                    this.dg.selectedRow.drl = this;\r\n                } else if (p === 'right') {\r\n                    this.dg.selectedRow.drr = this;\r\n                } else {\r\n                    this.dg.selectedRow.dr = this;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.push(s2$);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        if (this.columnsChangedSubscription) {\r\n            this.columnsChangedSubscription.unsubscribe();\r\n            this.columnsChangedSubscription = null;\r\n        }\r\n\r\n        if (this.datasourceChangedSubscription) {\r\n            this.datasourceChangedSubscription.unsubscribe();\r\n            this.datasourceChangedSubscription = null;\r\n        }\r\n\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach(n => n.unsubscribe());\r\n            this.subscriptions = [];\r\n        }\r\n\r\n        if (this.form) {\r\n            this.form = null;\r\n        }\r\n\r\n        this.cells = null;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.rowData && !changes.rowData.isFirstChange()) {\r\n            this.updateCellEmptyStyle();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.renderCustomStyle();\r\n        this.updateCellEmptyStyle();\r\n    }\r\n\r\n    private getRowPosition() {\r\n        const id = this.el.nativeElement.id;\r\n        if (id.indexOf('fixedleft') > -1) {\r\n            return 'left';\r\n        } else if (id.indexOf('fixedright') > -1) {\r\n            return 'right';\r\n        } else {\r\n            return 'center';\r\n        }\r\n    }\r\n\r\n\r\n    renderCustomStyle(rowData = null) {\r\n        if (this.dg.rowStyler) {\r\n            const _rd = rowData || this.rowData;\r\n            const trStyle = this.dg.rowStyler(_rd, this.rowIndex);\r\n            const tr = this.el.nativeElement;\r\n\r\n            const _cls = Array.from(tr.classList).find((n: string) => n.indexOf(CUSTOM_ROW_CLS) > -1);\r\n            if (_cls) {\r\n                tr.classList.remove(_cls);\r\n            }\r\n\r\n            if (trStyle && Object.keys(trStyle).length) {\r\n                const str = CUSTOM_ROW_CLS + this.dg.idService.encrypt(JSON.stringify(trStyle));\r\n                this.dg.renderCustomStyle2(trStyle, this.el.nativeElement, 'f-datagrid-body .' + str);\r\n                this.render.addClass(this.el.nativeElement, str);\r\n            }\r\n        }\r\n    }\r\n\r\n    // @HostListener('click', ['$event'])\r\n    onRowClick(event: MouseEvent) {\r\n/*\r\n        if (event.target['className'] && event.target['className'].indexOf('checkbox-column') > -1) {\r\n            return;\r\n        }\r\n\r\n        if (!this.dg.enableSelectRow) {\r\n            return;\r\n        }\r\n\r\n        if (this.dg.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (this.dg.currentCell && this.dg.currentCell.isEditing && this.rowId !== this.dg.currentCell.rowId ) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.dg.disableRow) {\r\n            if (this.dg.disableRow(this.rowData, this.rowIndex)) {\r\n                event.stopPropagation();\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // if (!this.dg.editable) {\r\n        //     event.stopPropagation();\r\n        // }\r\n\r\n        const rowId = this.dfs.primaryId(this.rowData);\r\n\r\n        if (!rowId) {\r\n            this.dg.writeConsole(`å¨ç¬¬ ${this.rowIndex + 1} è¡ï¼ä¸»é®å­æ®µ[${this.dg.idField}]çå¼ä¸º ç©ºï¼è¯·æ£æ¥ç¸å³æ°æ®ã`);\r\n        }\r\n\r\n        const beforEventParam = {\r\n            rowIndex: this.rowIndex,\r\n            rowData: this.rowData,\r\n            gridInstance: this.dg\r\n        };\r\n\r\n        if (!event.shiftKey) {\r\n            this.dg.dgs.focusRowChanged.emit({\r\n                rowIndex: this.rowIndex,\r\n                rowData: this.rowData\r\n            });\r\n        }\r\n        const useNewSelectionMode = this.dg.sms.beforRowClick({ ...beforEventParam, e: event, id: rowId, dr: this });\r\n        if (useNewSelectionMode) {\r\n            return;\r\n        }\r\n\r\n        if (!this.dfs.isRowSelected(rowId)) {\r\n            const canendedit = this.dg.endRowEdit();\r\n\r\n            if (!canendedit || canendedit.canEnd) {\r\n                this.dg.beforeSelect(beforEventParam).pipe( takeUntil(this.destroy$)).pipe(\r\n                    delay(200)\r\n                ).subscribe((canSelect: boolean) => {\r\n                    if (canSelect) {\r\n                        this.dg.removeCellSelectedCls();\r\n                        this.dfs.selectRow(this.rowIndex, this.rowData, {instance: this.dg});\r\n                        if (this.dg.selectedRow) {\r\n                            this.dg.selectedRow.dr = this;\r\n                        }\r\n                        const trCLS = this.el.nativeElement.className;\r\n                        if (trCLS.indexOf('f-datagrid-row-selected') === -1) {\r\n                            this.el.nativeElement.className = trCLS + ' f-datagrid-row-selected';\r\n                        }\r\n                        // this.drHover.setRowHoverCls(false);\r\n                        // this.dg.selectChanged.emit(this.dg.selectedRow);\r\n                        this.clickHandler.emit();\r\n                    }\r\n                    this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n                    this.dg.dgs.setSelecedRow.emit({ selected: true, id: this.dfs.primaryId(this.rowData) });\r\n                });\r\n            }\r\n        } else {\r\n            if (this.dg.selectedRow && !this.dg.selectedRow.dr) {\r\n                this.dg.selectedRow.dr = this;\r\n            }\r\n\r\n            if (!this.dg.keepSelect) {\r\n                this.dg.beforeUnselect(beforEventParam).pipe(\r\n                    takeUntil(this.destroy$),\r\n                ).subscribe((canUnselect: boolean) => {\r\n                    if (canUnselect) {\r\n                        // this.dg.unSelect.emit(this.dg.selectedRow);\r\n                        this.dfs.unSelectRow(this.rowIndex, this.rowData, {instance: this.dg});\r\n\r\n                        const trCLS = this.el.nativeElement.className;\r\n                        if (trCLS.indexOf('f-datagrid-row-selected') > -1) {\r\n                            this.el.nativeElement.className = trCLS.replace('f-datagrid-row-selected', '');\r\n                        }\r\n                    }\r\n                    this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n                    this.dg.dgs.setSelecedRow.emit();\r\n                });\r\n            } else {\r\n                this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n            }\r\n        }\r\n            */\r\n        // this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n    }\r\n\r\n    initFormControl() {\r\n        this.form = this.fb.group({});\r\n        this.createControl();\r\n        this.form['bindingData'] = this.rowData;\r\n    }\r\n\r\n    createControl() {\r\n        if (this.dg && this.dg.flatColumns) {\r\n            this.dg.flatColumns.forEach(col => {\r\n                if (!col.editor && !col.editorTemplate) { return; }\r\n                if (!this.form.controls[col.field]) {\r\n                    const control = this.createFormControl(col);\r\n                    this.form.addControl(col.field, control);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private createFormControl(col) {\r\n        return this.fb.control(\r\n            Utils.getValue(col.field, this.rowData),\r\n            {\r\n                validators: col.editor ? this.bindValidations(col.editor.validators) : null\r\n            }\r\n        );\r\n    }\r\n\r\n    private bindValidations(validators: DatagridValidator[]) {\r\n        const validations = [];\r\n        if (validators && validators.length) {\r\n\r\n            validators.forEach((v: DatagridValidator) => {\r\n                let validation = null;\r\n                switch (v.type) {\r\n                    case 'required':\r\n                        validation = Validators.required;\r\n                        break;\r\n                    case 'min':\r\n                        validation = Validators.min(v.value);\r\n                        break;\r\n                    case 'max':\r\n                        validation = Validators.max(v.value);\r\n                        break;\r\n                    case 'minLength':\r\n                        validation = Validators.minLength(v.value);\r\n                        break;\r\n                    case 'maxLength':\r\n                        validation = Validators.maxLength(v.value);\r\n                        break;\r\n                    case 'email':\r\n                        validation = Validators.email;\r\n                        break;\r\n                    case 'requiredTrue':\r\n                        validation = Validators.requiredTrue;\r\n                        break;\r\n                    case 'pattern':\r\n                        validation = Validators.pattern(v.value);\r\n                        break;\r\n                }\r\n                if (validation) {\r\n                    validations.push(validation);\r\n                } else {\r\n                    if (this.dg.validators && this.dg.validators.length) {\r\n                        const vfn = this.dg.validators.find(vr => vr.name === v.type);\r\n                        if (vfn) {\r\n                            validation = vfn.value(this.rowData);\r\n                            validations.push(validation);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return validations;\r\n    }\r\n\r\n\r\n    refresh() {\r\n        this.updateRowHeight();\r\n        this.updateCellEmptyStyle();\r\n    }\r\n\r\n    updateRowHeight() {\r\n        if (!this.dg.nowrap) {\r\n            const centerTr = this.dgb.mainArea.nativeElement.querySelector('tr[index=\"' + this.rowIndex + '\"]');\r\n            centerTr.style.height = 'auto';\r\n            const trHeight = centerTr.offsetHeight;\r\n            let leftTrDom = null;\r\n            let rightTrDom = null;\r\n            const heightSizeList = [trHeight];\r\n            if (this.dgb) {\r\n                if (this.dgb.fixedLeftEl) {\r\n                    leftTrDom = this.dgb.fixedLeftEl.nativeElement.querySelector('tr[index=\"' + this.rowIndex + '\"]');\r\n                    if (leftTrDom) {\r\n                        leftTrDom.style.height = 'auto';\r\n                        heightSizeList.push(leftTrDom.offsetHeight);\r\n                    }\r\n                }\r\n                if (this.dgb.fixedRightEl) {\r\n                    rightTrDom = this.dgb.fixedRightEl.nativeElement.querySelector('tr[index=\"' + this.rowIndex + '\"]');\r\n                    if (rightTrDom) {\r\n                        rightTrDom.style.height = 'auto';\r\n                        heightSizeList.push(rightTrDom.offsetHeight);\r\n                    }\r\n                }\r\n\r\n                const maxHeight = Math.max(...heightSizeList);\r\n\r\n                centerTr.style.height = `${maxHeight}px`;\r\n                if (leftTrDom) {\r\n                    leftTrDom.style.height = `${maxHeight}px`;\r\n                }\r\n\r\n                if (rightTrDom) {\r\n                    rightTrDom.style.height = `${maxHeight}px`;\r\n                }\r\n\r\n                this.cd.markForCheck();\r\n                this.dgb.updateCanvasHeight();\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateCellEmptyStyle() {\r\n\r\n        if (!this.dg.enableEditCellStyle) {\r\n            return;\r\n        }\r\n\r\n        let rowIsDisabled = false;\r\n        if (this.dg.disableRow) {\r\n            rowIsDisabled = this.dg.disableRow(this.rowData, this.rowIndex);\r\n        }\r\n\r\n        const updateCellEmptyText = (cells) => {\r\n            if (cells.length) {\r\n\r\n                for (let k = 0; k < cells.length; k++) {\r\n                    const field = cells[k].getAttribute('field');\r\n                    if (field) {\r\n                        const col = this.dfs.getColumn(field);\r\n                        if (col) {\r\n\r\n                            if (!col.editor) {\r\n                                continue;\r\n                            }\r\n                            const cls = col.align === 'right' ? 'allow-edit-cell-left' : 'allow-edit-cell';\r\n                            const emptyicon_cls = ALLOW_EDIT_CELL_HIGHLIGHT_CLS[col.editor.type];\r\n                            const span = cells[k].querySelector('.cell-text-box');\r\n                            const colVal = Utils.getValue(field, this.rowData);\r\n                            const fmtVal = this.dg.colFormatSer.format(colVal, this.rowData, col.formatter);\r\n                            if (!this.dg.editable || rowIsDisabled || this.dg.cellIsReadOnly(col, this.rowData)) {\r\n                                cells[k].className = cells[k].className.replace(cls, '');\r\n                                cells[k].className = cells[k].className.replace(emptyicon_cls, '');\r\n                                if (span) {\r\n                                    if (span.className.indexOf('cell-empty') > -1) {\r\n                                        span.className = span.className.replace('cell-empty', '');\r\n                                    }\r\n\r\n                                    if (colVal === '' || colVal === null || colVal === undefined) {\r\n                                        span.innerHTML = '';\r\n                                    } else {\r\n                                        span.innerHTML = fmtVal;\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                if (span) {\r\n                                    if (colVal === '' || colVal === null || colVal === undefined) {\r\n                                        if (span.className.indexOf('cell-empty') === -1) {\r\n                                            span.className = span.className + ' cell-empty';\r\n                                        }\r\n\r\n                                        span.innerHTML = Utils.getWhenEmptyText(col, this.dg.localeService.localeId);\r\n                                    } else {\r\n                                        span.innerHTML = fmtVal;\r\n                                    }\r\n                                }\r\n\r\n                                if (cells[k].className.indexOf('cell-readonly') > -1) {\r\n                                    cells[k].className = cells[k].className.replace('cell-readonly', '');\r\n                                }\r\n\r\n                                if (cells[k].className.indexOf(cls) === -1) {\r\n                                    this.render.addClass(cells[k], cls);\r\n                                }\r\n\r\n                                if (cells[k].className.indexOf(emptyicon_cls) === -1) {\r\n                                    this.render.addClass(cells[k], emptyicon_cls);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        // if (this.dgb.fixedLeftEl) {\r\n        //     const leftTrDom = this.dgb.fixedLeftEl.nativeElement.querySelector('tr[index=\"' + this.rowIndex + '\"]');\r\n        //     if (leftTrDom) {\r\n        //         updateCellEmptyText(leftTrDom.querySelectorAll('td[field]'));\r\n        //     }\r\n        // }\r\n\r\n        const cells = this.el.nativeElement.querySelectorAll('td[field]:not([field=\"_datagrid-setting-control_\"])');\r\n        updateCellEmptyText(cells);\r\n    }\r\n}\r\n","import { ColumnFormatService } from '@farris/ui-common/column';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-07-29 08:14:22\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-11 11:38:58\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport {\r\n    ComponentFactoryResolver,\r\n    ComponentRef,\r\n    Directive,\r\n    Input,\r\n    OnInit,\r\n    AfterViewInit,\r\n    ViewContainerRef,\r\n    Injector,\r\n    OnDestroy,\r\n    Inject,\r\n    forwardRef,\r\n    ApplicationRef\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { DataColumn } from '../../types';\r\n\r\n@Directive({\r\n    selector: '[cell-editor]',\r\n})\r\nexport class GridCellEditorDirective implements OnInit, AfterViewInit, OnDestroy {\r\n    @Input() column: DataColumn;\r\n    @Input() group: FormGroup;\r\n    @Input() rowData: any;\r\n    @Input() value: any;\r\n    @Input() height: any;\r\n    componentRef: ComponentRef<any>;\r\n    private cfs: ColumnFormatService = null;\r\n    private timer = null;\r\n    constructor(\r\n        private resolver: ComponentFactoryResolver,\r\n        private container: ViewContainerRef,\r\n        private app: ApplicationRef,\r\n        private fb: FormBuilder,\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent\r\n    ) {\r\n        this.cfs = this.dg.inject.get(ColumnFormatService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.column.editor) {\r\n            this.createCellEditor();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dg.dgs.cellEditorCreated.emit({ editorRef: this.componentRef, column: this.column, cellEditorRef: this});\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.dg.dgs.cellEditorDestory.emit({ editorRef: this.componentRef, column: this.column, cellEditorRef: this});\r\n        if (this.componentRef) {\r\n            this.componentRef.destroy();\r\n        }\r\n        this.componentRef = null;\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n    }\r\n\r\n    private createCellEditor() {\r\n\r\n        const editorType = this.column.editor.type;\r\n\r\n        if (!this.dg.editors[editorType]) {\r\n            this.dg.writeConsole(`æ¾ä¸å°åç§°ä¸º ${editorType} å¯¹åºçç±»ã`, 'error');\r\n            return;\r\n        }\r\n\r\n        const factory = this.resolver.resolveComponentFactory(\r\n            this.dg.editors[editorType]\r\n        );\r\n        this.componentRef = this.container.createComponent(factory);\r\n\r\n        // this.componentRef.instance.dg = this.dg;\r\n        // this.app.attachView(this.componentRef.hostView);\r\n        this.componentRef.instance.column = this.column;\r\n        this.componentRef.instance.group = this.group;\r\n        this.componentRef.instance.height = this.height;\r\n        this.componentRef.instance.controlId = (this.dg.id || 'DATAGRID_EDITOR') + '_' + this.column.field;\r\n\r\n        this.updateControlValue();\r\n        this.componentRef.changeDetectorRef.markForCheck();\r\n        this.componentRef.changeDetectorRef.detectChanges();\r\n        // this.app.tick();\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n        this.timer = setTimeout(() => {\r\n            if (this.componentRef.instance.instance) {\r\n                if (editorType === 'lookup') {\r\n                    if (!this.componentRef.instance.instance.changeDetector.destroyed) {\r\n                        this.componentRef.instance.instance.changeDetector.detectChanges();\r\n                    }\r\n                    // this.componentRef.instance['bindingData'] = this.rowData;\r\n                }\r\n                // if (editorType === 'textarea') {\r\n                //     const textareaEl = this.componentRef.instance.inputElement;\r\n                //     textareaEl.style.height = textareaEl.closest('tr').style.height;\r\n                // }\r\n            }\r\n        });\r\n    }\r\n\r\n    private updateControlValue() {\r\n        if (this.group) {\r\n            this.group['bindingData'] = this.rowData;\r\n            if (this.group.controls[this.column.field]) {\r\n                // if (this.column.editor.type === 'datepicker') {\r\n                //     const dateRef = this.componentRef.instance.instance;\r\n                //     if (dateRef) {\r\n                //         setTimeout(() => {\r\n                //             const { dateFormat } = dateRef.dateOpts;\r\n                //             const val = this.cfs.format(this.value, this.rowData, {type: 'datetime', options: { format: dateFormat}});\r\n                //             this.group.controls[this.column.field].setValue(val, { emitEvent: true });\r\n                //         });\r\n                //     }\r\n                // } else {\r\n                //     this.group.controls[this.column.field].setValue(this.value, { emitEvent: true });\r\n                // }\r\n\r\n                this.group.controls[this.column.field].setValue(this.value, { emitEvent: true });\r\n            }\r\n        }\r\n    }\r\n\r\n    hideCover() {\r\n        if (this.componentRef && this.column.editor && (this.column.editor.type === 'combolist' || this.column.editor.type === 'combo-lookup')) {\r\n            this.componentRef.instance.hide(!1);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 10:11:59\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-12 10:12:05\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n    private dangerWords = ['<script', 'onerror', 'alert('];\r\n\r\n    constructor(protected sanitizer: DomSanitizer) { }\r\n\r\n    public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n        switch (type) {\r\n            case 'html': {\r\n                if (value === '' || value === null || value === undefined) {\r\n                    return value;\r\n                }\r\n                // if (!this.hasDanger(value)) {\r\n                //     return value;\r\n                // }\r\n                return this.sanitizer.bypassSecurityTrustHtml(value);\r\n            }\r\n            case 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\r\n            case 'script': return this.sanitizer.bypassSecurityTrustScript(value);\r\n            case 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\r\n            case 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n            default: throw new Error(`Invalid safe type specified: ${type}`);\r\n        }\r\n    }\r\n\r\n    private hasDanger(value) {\r\n        if (typeof value  === 'number' || typeof value === 'boolean') {\r\n            return false;\r\n        }\r\n\r\n        let r = 0;\r\n\r\n        this.dangerWords.forEach(n => {\r\n            if (value.indexOf(n) > -1) {\r\n                r++;\r\n            }\r\n        });\r\n\r\n        return r !== 0;\r\n    }\r\n\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-31 09:11:02\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, Output, EventEmitter, OnChanges,\r\n    ViewChild, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, ViewContainerRef,\r\n    OnDestroy, Injector, Inject, forwardRef, AfterViewInit, SimpleChanges, Renderer2, ComponentFactoryResolver} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { CellContext, CellTemplateFn, DataColumn, ICellTemplateComponent } from '../../types/data-column';\r\nimport { Utils } from '../../utils/utils';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridRowDirective } from './datagrid-row.directive';\r\nimport { CellInfo } from '../../services/state';\r\nimport { GridCellEditorDirective } from '../editors/cell-editor.directive';\r\nimport { DatagridService } from '../../services/datagrid.service';\r\nimport { SafePipe } from './../../utils/safe.pipe';\r\nimport { TR_PREFIX } from '../../types/constant';\r\n@Component({\r\n    selector: 'grid-body-cell',\r\n    template: `\r\n    <div\r\n     [cell-tooltip]=\"column.showTips && !isEditing\"   [attr.tipMode]=\" column.tipMode || 'auto'\"\r\n     [attr.message]=\"column | tipmsg: rowData\"  [attr.position]=\" column?.tipOptions?.position || 'top-left'\"\r\n     [attr.tipWidth]=\"column?.tipOptions?.width\" [attr.tipHeight]=\"column?.tipOptions?.height\"\r\n     class=\"f-datagrid-cell-content\" #cellContainer  [component-template]=\"column\" [ctx]=\"cellContext\"\r\n    >\r\n        <ng-container *ngIf=\"!isEditing && !column.template && !column.componentType\">\r\n            <ng-container *ngIf=\"column.formatter\">\r\n                <span class=\"cell-text-box\" *ngIf=\"cellFormatterIsFn\" [innerHtml]=\" column | formatCellData: rowData | safe: 'html'\"></span>\r\n                <span class=\"cell-text-box\" *ngIf=\"!cellFormatterIsFn\">{{  column | formatCellData: rowData }}</span>\r\n            </ng-container>\r\n            <span *ngIf=\"!column.formatter\" class=\"cell-text-box\" [class.grid-cell-nowrap]=\"dg.nowrap\" [class.grid-cell-wrap]=\"!dg.nowrap\">{{  column | formatCellData: rowData }}</span>\r\n        </ng-container>\r\n\r\n        <ng-container #cellTemplate *ngIf=\"!isEditing && column.template && !column.componentType\" [ngTemplateOutlet]=\"column.template\" [ngTemplateOutletContext]=\"{$implicit: cellContext}\"></ng-container>\r\n        <ng-container #cellEditorTemplate *ngIf=\"isEditing && column.editorTemplate\" [ngTemplateOutlet]=\"column.editorTemplate\" [ngTemplateOutletContext]=\"{$implicit: cellContext}\"></ng-container>\r\n        <ng-container #editorTemplate *ngIf=\"isEditing && !column.editorTemplate\" cell-editor [height]=\"controlHeight\" [rowData]=\"rowData\" [value]=\"value\" [column]=\"column\" [group]=\"dr.form\"></ng-container>\r\n    </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class DatagridCellComponent implements OnInit, OnDestroy, AfterViewInit, OnChanges {\r\n    @Input() width: number;\r\n    @Input() height: number;\r\n    @Input() cls = '';\r\n    @Input() column: DataColumn;\r\n    @Input() rowData: any;\r\n    @Input() rowIndex: number;\r\n    @Input() lastColumn = false;\r\n    // @ViewChild('celltip') celltip: DatagridCellTooltipDirective;\r\n\r\n    private _isEditing = false;\r\n    controlHeight = 'auto';\r\n    get isEditing() {\r\n        return this._isEditing;\r\n    }\r\n    @Input() set isEditing(v) {\r\n        if (this._isEditing === v) {\r\n            return;\r\n        }\r\n        this._isEditing = v;\r\n\r\n        if (v) {\r\n            if (!this.dr.form || !Object.keys(this.dr.form.controls).length ) {\r\n                this.dr.initFormControl();\r\n            }\r\n\r\n            if (this.column.editorTemplate && this.column.editorTemplate.elementRef) {\r\n                this.cellContext.formGroup = this.dr.form;\r\n\r\n                setTimeout(() => {\r\n\r\n                    if (this.el) {\r\n                        const input = this.el.nativeElement.querySelector('input,textarea');\r\n                        if (input) {\r\n                            input.focus();\r\n                        }\r\n                    }\r\n                }, 10);\r\n            }\r\n        }\r\n        if (this.column.editor && this.column.editor.type === 'textarea') {\r\n            if (!this.dg.nowrap) {\r\n                this.controlHeight = this.dr.el.nativeElement.offsetHeight;\r\n            }\r\n        }\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    @Input() isSelected = false;\r\n\r\n    @ViewChild('cellContainer') cellContainer: ElementRef;\r\n    @ViewChild('cellTemplate', {read: ViewContainerRef }) cellTemplateVcr: ViewContainerRef;\r\n\r\n\r\n    private _cellEditorTemplate = null;\r\n    @ViewChild('cellEditorTemplate', {read: ViewContainerRef })\r\n    get cellEditorTemplate(): ViewContainerRef {\r\n        return this._cellEditorTemplate;\r\n    }\r\n    set cellEditorTemplate(v) {\r\n        this._cellEditorTemplate = v;\r\n        if (v) {\r\n            this.dg.dgs.cellEditorCreated.emit({ editorRef: null, column: this.column, cellEditorRef: null, templateRef: v});\r\n        }\r\n    }\r\n\r\n    @ViewChild(GridCellEditorDirective) cellEditor;\r\n\r\n\r\n    @Output() cellClick = new EventEmitter();\r\n    @Output() cellDblClick = new EventEmitter();\r\n\r\n    cellContext: Partial<CellContext> = {};\r\n    get value() {\r\n        if (this.rowData && this.column && this.column.field) {\r\n            return Utils.getValue(this.column.field, this.rowData);\r\n        }\r\n        return '';\r\n    }\r\n\r\n    get formControl() {\r\n        if (this.cellEditor && this.cellEditor.componentRef) {\r\n            return this.cellEditor.componentRef.instance.formControl;\r\n        } else if (this.column.editorTemplate) {\r\n            return this.dr.form.get(this.column.field);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get cellFormatterIsFn() {\r\n        return typeof this.column.formatter === 'function' || this.column.formatter.type === 'boolean';\r\n    }\r\n\r\n    cellStyler: any = {};\r\n\r\n    private dfs: DatagridFacadeService;\r\n    private dgs: DatagridService;\r\n    private cellSubscription: Subscription;\r\n    private rowUpdateSubscription: Subscription;\r\n    private safePipe: SafePipe = null;\r\n    private render: Renderer2;\r\n    private ro: ResizeObserver = null;\r\n    canEdit = () => this.dg.editable && this.dg.editMode === 'cell' && this.column.editor;\r\n\r\n    private cfr:ComponentFactoryResolver;\r\n\r\n    constructor(\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent,\r\n        @Inject(forwardRef(() => DatagridRowDirective)) public dr: DatagridRowDirective,\r\n        public el: ElementRef, public cd: ChangeDetectorRef, private injector: Injector,\r\n        public colFormatSer: ColumnFormatService,\r\n        private domSanitizer: DomSanitizer\r\n    ) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.safePipe = new SafePipe(this.domSanitizer);\r\n        this.render = this.injector.get(Renderer2);\r\n\r\n        this.cfr = this.injector.get(ComponentFactoryResolver);\r\n       \r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initCellTemplateContext();\r\n    }\r\n\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.rowData && !changes.rowData.isFirstChange()) {\r\n            this.initCellTemplateContext();\r\n            this.buildCustomCellStyle();\r\n\r\n            if (this.formControl) {\r\n                const val = Utils.getValue(this.column.field, this.rowData);\r\n                this.formControl.setValue(val);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initCellTemplateContext() {\r\n        this.cellContext = {\r\n            field: this.column.field,\r\n            rowIndex: this.rowIndex,\r\n            rowData: this.rowData,\r\n            column: this.column,\r\n            instance: this,\r\n            formGroup: this.dr.form,\r\n            tools: {\r\n                utils: this.dg.commonUtils,\r\n                format: this.dg.colFormatSer,\r\n                number: this.dg.colFormatSer['numberhelper'],\r\n                date: this.dg.colFormatSer['datehelper']\r\n            },\r\n        };\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.buildCustomCellStyle();\r\n\r\n        const fieldClsName = 'cell-text-align__' + this.column.field.replace(/\\./g, '_');\r\n        this.render.addClass(this.cellContainer.nativeElement, fieldClsName);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.cellSubscription) {\r\n            this.cellSubscription.unsubscribe();\r\n            this.cellSubscription = null;\r\n        }\r\n\r\n        if (this.rowUpdateSubscription) {\r\n            this.rowUpdateSubscription.unsubscribe();\r\n            this.rowUpdateSubscription = null;\r\n        }\r\n\r\n\r\n        this.cellContext = null;\r\n    }\r\n\r\n\r\n    private buildCustomCellStyle(rowData = null) {\r\n        const td = this.el.nativeElement.parentNode;\r\n        const fieldName = this.column.field.replace(/\\./g,  '_');\r\n\r\n        if (!td.id) {\r\n            td.id = TR_PREFIX + this.dr.rowId + '_' + this.rowIndex + '-' + fieldName;\r\n        }\r\n        // td.id = td.id.replace(/\\./g, '_');\r\n        let clsName = 'customcellcls_' + fieldName + '_';\r\n       \r\n        const removeCls = () => {\r\n            const _cls = Array.from(td.classList).find((n: string) => n.indexOf('customcellcls_') > -1);\r\n            if (_cls) {\r\n                td.classList.remove(_cls);\r\n            }\r\n        }\r\n        \r\n        if (this.column.styler) {\r\n            const _rd = rowData || this.rowData;\r\n            const fieldValue = Utils.getValue(this.column.field, _rd);\r\n            const cs = this.column.styler(fieldValue, _rd, this.rowIndex);\r\n            if (cs && Object.keys(cs).length) {\r\n                removeCls();\r\n                // clsName = clsName.replace(/\\./g, '_');\r\n                clsName = clsName + this.dg.idService.encrypt(JSON.stringify(cs));\r\n                this.render.addClass(td, clsName);\r\n                this.dg.renderCustomStyle2(cs, td, clsName);\r\n            }\r\n        } else {\r\n            removeCls();\r\n        }\r\n    }\r\n\r\n    updateValue(val?: any) {\r\n        if (this.dr.form) {\r\n            // this.rowData = Object.assign(this.rowData, this.dr.form.value);\r\n            Utils.setValue(this.column.field, val, this.rowData);\r\n            // this.rowData = {...this.rowData};\r\n            const rowid = this.rowData[this.dg.idField];\r\n            const item = this.dg.data.find(n => n[this.dg.idField] === rowid);\r\n            if (item) {\r\n                Utils.setValue(this.column.field, val, item);\r\n            }\r\n\r\n            this.dfs.updateCheckedData(rowid, { [this.column.field]: val });\r\n\r\n            if (!this.cd['destroyed']) {\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-19 15:48:27\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Directive, Input, ElementRef, Renderer2, OnInit, ContentChild, OnDestroy, Injector, forwardRef, Inject, AfterViewInit, NgZone, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { filter, map, switchMap, takeLast, debounceTime, takeUntil } from 'rxjs/operators';\r\nimport { DatagridService } from './../../services/datagrid.service';\r\nimport { DatagridCellComponent } from './datagrid-cell.component';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport { DatagridRowDirective } from './datagrid-row.directive';\r\nimport { DataColumn } from './../../types/data-column';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { CELL_SELECTED_CLS, CELL_EDITING_CLS, ALLOW_EDIT_CELL_HIGHLIGHT_CLS, TR_PREFIX, TR_ID_PREFIX } from '../../types/constant';\r\nimport { DomHandler } from '../../services/domhandler';\r\nimport { of, Subscription,  noop, Subject, Observable  } from 'rxjs';\r\nimport { Utils } from '../../utils/utils';\r\n\r\n@Directive({\r\n    selector: '[cell-editable]',\r\n    exportAs: 'cellEditable'\r\n})\r\nexport class DatagridCellEditableDirective implements OnInit, OnDestroy, OnChanges, AfterViewInit {\r\n    @Input('cell-editable') rowData: any;\r\n    @Input() column: DataColumn;\r\n\r\n    private clickTimer: any;\r\n\r\n    private cellclick: any;\r\n    private celldblclick: any;\r\n    private bindCellEventSubscription: Subscription;\r\n\r\n    private editorInputKeydownEvent: any;\r\n    editor: any;\r\n    formControl: FormControl;\r\n    cellEditorRef: any;\r\n\r\n\r\n    @ContentChild(DatagridCellComponent) dc: DatagridCellComponent;\r\n    private dgb: DatagridBodyComponent;\r\n    private dr: DatagridRowDirective;\r\n    private dfs: DatagridFacadeService;\r\n    private dgs: DatagridService;\r\n\r\n    // private _readonly$ = null;\r\n    private cellEditorCreatedSubscription = null;\r\n    private cellEditorDestorySubscription = null;\r\n    private destroy$ = new Subject();\r\n    private validMessageEle = null;\r\n\r\n    constructor(\r\n        private injector: Injector, public el: ElementRef, private render: Renderer2,\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent, public ngZone: NgZone) {\r\n        this.dgb = this.injector.get(DatagridBodyComponent);\r\n        this.dr = this.injector.get(DatagridRowDirective);\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n\r\n\r\n        if (!this.cellEditorCreatedSubscription) {\r\n            this.cellEditorCreatedSubscription = this.dgs.cellEditorCreated.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).pipe(\r\n                filter(({ column, editorRef, cellEditorRef, templateRef }) => {\r\n                    return column.field === this.column.field && this.dg.selectedRow.id === this.dr.rowId;\r\n                })\r\n            ).subscribe(({ editorRef, cellEditorRef, templateRef }) => {\r\n                if (editorRef) {\r\n                    this['editor'] = editorRef.instance;\r\n                    this['formControl'] = this.editor.formControl as FormControl;\r\n                    this.cellEditorRef = cellEditorRef;\r\n                    this.emitBeginEdit();\r\n                } else {\r\n                    this['formControl'] = this.dr.form.get(this.column.field) as FormControl;\r\n                    this.bindEditorInputEvent();\r\n                    this.dg.beginEdit.emit({ editor: null, column: this.column, rowData: this.rowData, gridInstance: this.dg, template: templateRef });\r\n                }\r\n\r\n                this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n            });\r\n        }\r\n\r\n        this.dg.dgs.cellEditorDestory.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).pipe(\r\n            filter(({ column }) => {\r\n                return this.dg.selectedRow && column.field === this.column.field && this.dg.selectedRow.id === this.dr.rowId;\r\n            })\r\n        ).subscribe((e: any) => {\r\n            if (this.dg.editMode === 'cell') {\r\n                this.dg.selectedRow.editors = [];\r\n                if (this.dg.currentCell) {\r\n                    this.dg.currentCell.editor = null;\r\n                    this.dg.currentCell.cellEditorRef = null;\r\n                }\r\n            }\r\n            this.unBindEditorInputEvent();\r\n            this.cellEditorRef = null;\r\n            this.formControl = null;\r\n            this.editor = null;\r\n\r\n            this.removeValidMessage();\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.rowData && !changes.rowData.isFirstChange()) {\r\n            this.initCellEvent();\r\n            this.setCellClsWithEditorType();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initCellEvent();\r\n        this.setCellClsWithEditorType();\r\n    }\r\n\r\n\r\n    private runZoneClick(e: any) {\r\n        if(this['zoneClick']) {\r\n\r\n            Object.assign(e, {rowData: this.rowData});\r\n\r\n            this['zoneClick'].forEach(n => {\r\n                n.target.style.pointerEvents = 'auto';\r\n                if (n.callback) {\r\n                    n.callback(e);\r\n                } else if (n.handler) {\r\n                    n.handler(e);\r\n                }\r\n            });\r\n\r\n            if (this.dg.isFF) {\r\n                e.target['__zone_symbol__clickfalse'] = this['zoneClick'];\r\n            }\r\n        }\r\n    }\r\n\r\n    private initCellEvent() {\r\n        if (this.column && (this.column.editor || this.column.editorTemplate)) {\r\n            if (!this.dg.clickToEdit) {\r\n                this.celldblclick = this.render.listen(this.el.nativeElement, 'dblclick', (e) => {\r\n                    this.onDblClickCell(e);\r\n                });\r\n            }\r\n            this.el.nativeElement.edit = (e) => {\r\n                this.closeEditingCell().subscribe((canEdit: boolean) => {\r\n                    if (canEdit) {\r\n                        this.onClickCell(e);\r\n\r\n                        if (!this.dg.selectedRow || this.dg.selectedRow.id !== this.dr.rowId) {\r\n                            this.dg.selectRow(this.dr.rowId, true, false);\r\n                        }\r\n\r\n                        this.runZoneClick(e);\r\n                    }\r\n                });\r\n            }\r\n            this.el.nativeElement.editCell = (e) => {\r\n                this.openCellEditor();\r\n            };\r\n        } else {\r\n            this.clickTimer = 0;\r\n        }\r\n\r\n        \r\n        const excludeTarget = (e: any) => {\r\n            return e.target.parentElement.nodeName !== 'GRID-BODY-CELL' &&\r\n            e.target.nodeName !== 'INPUT' &&  e.target.nodeName !== 'TEXTAREA' &&\r\n            !(e.target.className.indexOf('custom-control-label') > -1 && \r\n            e.target.parentElement && e.target.parentElement.className.indexOf('custom-control') > -1) &&\r\n            !e.target.closest('input-group') && !e.target.closest('farris-switch') &&\r\n            !e.target.closest('farris-number-spinner') &&\r\n            !e.target.closest('farris-datepicker') &&\r\n            !e.target.closest('farris-time-picker') && \r\n            !e.target.closest('grid-editor-textarea') &&\r\n            !e.target.closest('farris-checkboxgroup') && \r\n            !e.target.closest('grid-editor-checkbox') && !e.target.closest('farris-radiogroup') &&\r\n            !e.target.closest('farris-organization-selector') && !e.target.closest('farris-personnel-selector');\r\n        }\r\n\r\n        if (this.column.proxyClick === undefined) {\r\n            this.column.proxyClick = true;\r\n        }\r\n\r\n        if (this.column.template && this.column.proxyClick) {\r\n            if (this['_tdmousedown_']) {\r\n                this.el.nativeElement.removeEventListener('mousedown', this['_tdmousedown_'], true);\r\n                this['_tdmousedown_'] = null;\r\n            }\r\n\r\n            this.el.nativeElement.addEventListener('mousedown', this['_tdmousedown_'] = (e: any) => {\r\n                if (excludeTarget(e)) {\r\n                    this['zoneClick'] = e.target['__zone_symbol__clickfalse'] || e.target['__zone_symbol__ANGULARclickFALSE'];\r\n                    if (this['zoneClick'] && this['zoneClick'].length) {\r\n                        if (!this.dg.isFF) {\r\n                            e.target.style.pointerEvents = 'none';\r\n                        } else {\r\n                            if (e.target['__zone_symbol__clickfalse']) {\r\n                                delete(e.target['__zone_symbol__clickfalse']);\r\n                            }\r\n                            if (e.target['__zone_symbol__ANGULARclickFALSE']) {\r\n                                delete(e.target['__zone_symbol__ANGULARclickFALSE']);\r\n                            }\r\n                        }\r\n                        this['zoneClick'].forEach((proxyClick => {\r\n                            if (!proxyClick.target) {\r\n                                proxyClick.target = e.target;\r\n                            }\r\n                        }));\r\n                    }\r\n                }\r\n            }, true);\r\n            \r\n            /*\r\n            this['_tdmousedown_'] = this.render.listen(this.el.nativeElement, 'mousedown', (e: any) => {\r\n                if (excludeTarget(e)) {\r\n                    this['zoneClick'] = e.target['__zone_symbol__clickfalse'] || e.target['__zone_symbol__ANGULARclickFALSE'];\r\n                    if (this['zoneClick'] && this['zoneClick'].length) {\r\n                        e.target.style.pointerEvents = 'none';\r\n                        this['zoneClick'].forEach((proxyClick => {\r\n                            if (!proxyClick.target) {\r\n                                proxyClick.target = e.target;\r\n                            }\r\n                        }));\r\n                    }\r\n                }\r\n            });\r\n            */\r\n        }\r\n\r\n        this.el.nativeElement.gridCellData = { rowData: this.rowData, rowIndex: this.dr.rowIndex };\r\n        this.el.nativeElement.closeEdit = () => this.closeEditingCell();\r\n        this.el.nativeElement.selectCell = (e, el) => {\r\n            if (this.dg.disableRow && this.dg.disableRow(this.rowData, this.dr.rowIndex)) {\r\n                return;\r\n            }\r\n\r\n            const beforEventParam = {\r\n                rowIndex: this.dr.rowIndex,\r\n                rowData: this.rowData,\r\n                gridInstance: this.dg\r\n            };\r\n\r\n            const runTemplateClickEvent = () => {\r\n\r\n                if (!this.dg.currentCell) {\r\n                    this.selectCell(this.column.field, el);\r\n                    if (!this.dg.currentCell) {\r\n                        this.dg.currentCell = { rowData: this.rowData }\r\n                    } else {\r\n                        if (!this.dg.currentCell.rowData){\r\n                            this.dg.currentCell.rowData = this.rowData;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if(this['zoneClick']) {\r\n                    this.runZoneClick(e);\r\n                }\r\n\r\n                this.dg.cellClick.emit({ column: this.column, rowData: this.rowData, gridInstance: this.dg, event: e });\r\n            }\r\n\r\n            const useNewSelectionMode = this.dg.sms.beforRowClick({ ...beforEventParam, e, id: this.dr.rowId, dr: this.dr, cellref: this });\r\n            if (useNewSelectionMode) {\r\n                this.selectCell(this.column.field, el);\r\n                if (!this.dg.currentCell) {\r\n                    this.dg.currentCell = { rowData: this.rowData }\r\n                } else {\r\n                    if (!this.dg.currentCell.rowData){\r\n                        this.dg.currentCell.rowData = this.rowData;\r\n                    }\r\n                }\r\n                this.dg.cellClick.emit({ column: this.column, rowData: this.rowData, gridInstance: this.dg, event: e });\r\n                return;\r\n            }\r\n           \r\n            if (this.dfs.isRowSelected(this.dr.rowId)) {\r\n                if (!this.dg.keepSelect && !this.column.template) {\r\n\r\n                    if (this.dg.currentCell && this.dg.currentCell.cellElement && this.dg.currentCell.cellElement.id === el.id) {\r\n                        this.dg.cancelSelectCell();\r\n                    }\r\n\r\n                    this.dg.beforeUnselect(beforEventParam).pipe(\r\n                        takeUntil(this.destroy$),\r\n                    ).subscribe((canUnselect: boolean) => {\r\n                        if (canUnselect) {\r\n                            // this.dg.unSelect.emit(this.dg.selectedRow);\r\n                            this.dfs.unSelectRow(this.dr.rowIndex, this.rowData, {instance: this.dg});\r\n    \r\n                            const trCLS = this.el.nativeElement.className;\r\n                            if (trCLS.indexOf('f-datagrid-row-selected') > -1) {\r\n                                this.el.nativeElement.className = trCLS.replace('f-datagrid-row-selected', '');\r\n                            }\r\n                        }\r\n                        this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n                        this.dg.dgs.setSelecedRow.emit();\r\n                    });\r\n                } else {\r\n                    this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n                    runTemplateClickEvent();\r\n                }\r\n            } else {\r\n                let r$: Observable<any> = of(true);\r\n                if (this.dg.beforeSelect) {\r\n                    const r = this.dg.beforeSelect({ rowIndex: this.dr.rowIndex , rowData: this.rowData, gridInstance: this.dg });\r\n                    if (r && r.subscribe) {\r\n                        r$ = r;\r\n                    }\r\n                }\r\n                const zoneClick = this['zoneClick'];\r\n                const _timer = zoneClick && zoneClick.length ? 100: 0;\r\n                r$.pipe(debounceTime(_timer)).subscribe((t) => {\r\n                    if (t) {\r\n                        this.selectCell(this.column.field, el);\r\n                        this.dg.cellClick.emit({ column: this.column, rowData: this.rowData, gridInstance: this.dg, event: e });\r\n                        if (_timer) {\r\n                            this.runZoneClick(e);\r\n                        }\r\n                    }\r\n                    this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n                    this.dg.dgs.setSelecedRow.emit();\r\n                });\r\n            }\r\n        };\r\n        this.el.nativeElement.cancelSelected = () => {\r\n            this.render.removeClass(this.el.nativeElement, CELL_SELECTED_CLS);\r\n            this.render.removeClass(this.el.nativeElement, CELL_EDITING_CLS);\r\n        };\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n\r\n        if (this.cellclick) {\r\n            this.cellclick();\r\n        }\r\n\r\n        if (this.celldblclick) {\r\n            this.celldblclick();\r\n        }\r\n\r\n        this.unBindEditorInputEvent();\r\n\r\n        if (this.bindCellEventSubscription) {\r\n            this.bindCellEventSubscription.unsubscribe();\r\n            this.bindCellEventSubscription = null;\r\n        }\r\n\r\n        if (this.cellEditorCreatedSubscription) {\r\n            this.cellEditorCreatedSubscription.unsubscribe();\r\n            this.cellEditorCreatedSubscription = null;\r\n        }\r\n\r\n        if (this.cellEditorDestorySubscription) {\r\n            this.cellEditorDestorySubscription.unsubscribe();\r\n            this.cellEditorDestorySubscription = null;\r\n        }\r\n\r\n        this.editor = null;\r\n        this.cellEditorRef = null;\r\n        this.formControl = null;\r\n\r\n        if (this.el) {\r\n            this.el.nativeElement.cancelSelected = noop;\r\n            this.el.nativeElement.selectCell = noop;\r\n            this.el.nativeElement.closeEdit = noop;\r\n            this.el.nativeElement.gridCellData = noop;\r\n            this.el.nativeElement.edit = noop;\r\n            this.el.nativeElement.selectCell = noop;\r\n\r\n            if (this['_tdmousedown_']) {\r\n                this.el.nativeElement.removeEventListener('mousedown', this['_tdmousedown_'], true);\r\n                this['_tdmousedown_'] = null;\r\n            }\r\n            this.el = null;\r\n        }\r\n\r\n    }\r\n\r\n    private isDifferentCell() {\r\n        if (!this.dg.currentCell) {\r\n            return true;\r\n        } else {\r\n            if (!this.dg.selectedRow || this.dg.selectedRow.index !== this.dr.rowIndex) {\r\n                return true;\r\n            } else {\r\n                if (this.dr.rowIndex !== this.dg.currentCell.rowIndex) {\r\n                    return true;\r\n                } else {\r\n                    return this.dg.currentCell.field !== this.column.field;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private onClickCell(event: any) {\r\n        // å³é­å¶ä»Grid çç¼è¾å¨\r\n        document.body.click();\r\n\r\n        this.dg.beforeClickCell.emit({ rowIndex: this.dr.rowIndex, rowData: this.rowData, column: this.column, gridInstance: this.dg });\r\n\r\n        if (this.dr.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (this.dg.disabled) {\r\n            return;\r\n        } else {\r\n            if (!this.dg.editable || this.isReadonly()) {\r\n                if (this.dg.enableHighlightCell) {\r\n                    event.stopPropagation();\r\n                    this.dg.endEditing();\r\n                    this.selectCell(this.column.field);\r\n                }\r\n                // åªè¯»ååæ ¼ï¼ç¹å»åé¡»è§¦åè¡ç¹å»äºä»¶ tfs 574551\r\n                this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n                return;\r\n            } else {\r\n                if (this.dg.editMode === 'row') {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.dg.selectionMode === 'default' && event) {\r\n            if (event.ctrlKey || event.shiftKey) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        event.stopPropagation();\r\n        if (event.target['nodeName'] === 'INPUT') {\r\n            return;\r\n        }\r\n\r\n\r\n        // if (this.dg.clickToEdit && !this.dg.dblclickRow.observers.length) {\r\n        //     this.dg.clickDelay = 0;\r\n        // }\r\n\r\n\r\n        this.render.addClass(this.dg.el.nativeElement, 'f-datagrid-unselect');\r\n\r\n        if (!this.dg.isSingleClick && this.dg.editMode) {\r\n            this.dg.isSingleClick = true;\r\n\r\n            if (this.clickTimer) {\r\n                clearTimeout(this.clickTimer);\r\n            }\r\n\r\n            this.clickTimer = setTimeout(() => {\r\n                if (this.dg.isSingleClick && this.dg.editable && this.dg.editMode === 'cell') {\r\n                    this.dg.isSingleClick = false;\r\n                    clearTimeout(this.clickTimer);\r\n                    // if (!this.closeEditingCell()) {\r\n                    //     return;\r\n                    // }\r\n                    this.closeEditingCell().pipe(\r\n                        takeUntil(this.destroy$)\r\n                    ).subscribe((f: any) => {\r\n                        if (f) {\r\n                            if (this.dg.clickToEdit) {\r\n                                !this.dg.nowrap && this.dgb.updateRowHeight();\r\n                                this.openCellEditor();\r\n                            } else {\r\n                                this.selectCell(this.column.field);\r\n                            }\r\n                            this.render.removeClass(this.dg.el.nativeElement, 'f-datagrid-unselect');\r\n                            event.preventDefault();\r\n                        }\r\n                    });\r\n                }\r\n            }, this.dg.clickDelay);\r\n        }\r\n    }\r\n\r\n    private onDblClickCell(event: MouseEvent) {\r\n        if (this.dg.disabled || this.isReadonly()) {\r\n            return;\r\n        }\r\n\r\n        if (event.target['nodeName'] === 'INPUT' || event.target['nodeName'] === 'TEXTAREA') {\r\n            return;\r\n        }\r\n        if (this.dg.editable && this.dg.editMode === 'cell') {\r\n            if (this.clickTimer) {\r\n                this.dg.isSingleClick = false;\r\n                clearTimeout(this.clickTimer);\r\n                this.clickTimer = null;\r\n            }\r\n            \r\n            this.closeEditingCell().pipe(takeUntil(this.destroy$)).subscribe(f => {\r\n                if (f) {\r\n                    setTimeout(() => {\r\n                        this.openCellEditor();\r\n                    });\r\n                }\r\n            });\r\n        }\r\n  \r\n    }\r\n\r\n    isReadonly(col = this.column) {\r\n        if (this.dg.editable) {\r\n            // åä¸åå¹¶çååæ ¼ä¸åè®¸ç¼è¾\r\n            if (this.dg.mergeCell && this.dg.mergeFields.indexOf(col.field) > -1) {\r\n                return true;\r\n            }\r\n            return this.getReadonlyValue(col);\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    private getReadonlyValue(col = this.column) {\r\n        if (col.readonly !== undefined) {\r\n            if (typeof col.readonly === 'boolean') {\r\n                return col.readonly;\r\n            } else if (typeof col.readonly === 'function') {\r\n                return col.readonly(this.rowData);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    openCellEditor() {\r\n        // å½åè¡ç¦ç¨ï¼ä¸åè®¸ç¼è¾ã\r\n        if (this.dr.disabled) {\r\n            return;\r\n        }\r\n\r\n        if ((!this.column.editor && !this.column.editorTemplate) || !this.dg.editable || this.isReadonly()) {\r\n            if (this.dg.selectionMode === 'default' && this.dg.multiSelect) {\r\n                this.dg.clearCheckeds();\r\n            }\r\n            this.selectCell(this.column.field);\r\n            return;\r\n        }\r\n\r\n        const beforeEditEvent = this.dg.beforeEdit({ rowIndex: this.dr.rowIndex, rowData: this.rowData, column: this.column, gridInstance: this.dg });\r\n        if (!beforeEditEvent || !beforeEditEvent.subscribe) {\r\n            this.dg.writeConsole('please return an Observable Type.');\r\n            return;\r\n        }\r\n\r\n        if (this.dg.currentCell) {\r\n            if (!this.dg.currentCell.cellRef || this.dg.currentCell.cellRef.column.field !== this.column.field) {\r\n                this.dg.currentCell.cellRef = this.dc;\r\n            }\r\n        }\r\n\r\n\r\n        beforeEditEvent.pipe(takeUntil(this.destroy$)).subscribe((flag) => {\r\n            if (flag) {\r\n                if (this.isDifferentCell()) {\r\n\r\n                    if (this.dg.selectionMode === 'default' && this.dg.multiSelect) {\r\n                        this.dg.clearCheckeds();\r\n                    }\r\n\r\n                    this.selectCell(this.column.field);\r\n                }\r\n                this.dfs.editCell();\r\n            } else {\r\n                this.selectCell(this.column.field);\r\n                // tfs 574612\r\n                this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n            }\r\n        });\r\n    }\r\n\r\n    private emitBeginEdit() {\r\n\r\n        const _cellEditorRef = this.cellEditorRef || this.dc.cellEditor;\r\n\r\n        this.render.removeClass(this.dg.el.nativeElement, 'f-datagrid-unselect');\r\n\r\n        if (this.dg.editMode === 'cell') {\r\n            this.dg.selectedRow.editors = [this.editor];\r\n            this.dg.currentCell.editor = this.editor;\r\n            this.dg.currentCell.cellEditorRef = _cellEditorRef;\r\n            this.bindEditorInputEvent();\r\n\r\n            this.render.addClass(this.el.nativeElement, CELL_EDITING_CLS);\r\n\r\n            // this.formControl.setValue(this.dc.value);\r\n            this.dg.beginEdit.emit({ editor: _cellEditorRef, column: this.column, rowData: this.rowData, gridInstance: this.dg });\r\n\r\n            if (this.column.editor.type === 'textarea' && this.column.editor.options && this.column.editor.options.editType === 'dialog') {\r\n                this.editor.showDialog();\r\n            }\r\n        }\r\n\r\n        if (this.dr && !this.dg.nowrap) {\r\n            setTimeout(() => {\r\n                this.dr.updateRowHeight();\r\n            });\r\n        }\r\n\r\n        if (this.editor) {\r\n            this.validMessageEle = this.showValidMessage();\r\n        }\r\n    }\r\n\r\n    removeValidMessage() {\r\n        // ç§»é¤éªè¯ä¿¡æ¯\r\n        if (this.validMessageEle) {\r\n            this.validMessageEle.remove();\r\n            this.validMessageEle = null;\r\n            if (this.dg.formValidations) {\r\n                delete this.dg.formValidations[this.column.field];\r\n            }\r\n        }\r\n    }\r\n\r\n    showValidMessage() {\r\n        if (this.dg.formValidations && this.dg.formValidations[this.column.field]) {\r\n            const {isValid, message} = this.dg.formValidations[this.column.field];\r\n            if (!isValid && message) {\r\n                const tr = this.editor.el.nativeElement.closest('tr');\r\n                const td = this.editor.el.nativeElement.closest('td');\r\n                const parentContainver = this.editor.el.nativeElement.closest('.f-datagrid-table');\r\n\r\n                const box = document.createElement('div');\r\n                const msgWrap = document.createElement('span');\r\n                box.appendChild(msgWrap);\r\n                msgWrap.innerText = message;\r\n\r\n                box.style.position = 'absolute';\r\n                box.style.background = '#FDEFEF';\r\n                box.style.color = '#F46160';\r\n\r\n                let top = tr.offsetTop - 21;\r\n                if (tr.getAttribute('index') == '0') {\r\n                    top = tr.offsetHeight; \r\n                }\r\n\r\n                box.style.top = `${top}px`;\r\n                box.style.left = `${td.offsetLeft + 5}px`;\r\n                box.style.zIndex = '996';\r\n                box.style.padding = '0.1875rem 0.5rem';\r\n                box.style.fontSize = '.8125rem';\r\n                box.style.lineHeight = '14px';\r\n\r\n                // document.body.append(box);\r\n                parentContainver.append(box);\r\n\r\n                return box;\r\n            }\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n    closeEditingCell() {\r\n        if (!this.dg.isCellEditing()) {\r\n            return of(true);\r\n        }\r\n\r\n        let currentCell = null;\r\n        let editor: any = null;\r\n        if (this.dg.currentCell) {\r\n\r\n            currentCell = this.dg.currentCell.cellRef as DatagridCellComponent;\r\n            if (currentCell) {\r\n                if (!currentCell.isEditing) {\r\n                    return of(true);\r\n                }\r\n\r\n                if (currentCell.cellEditor && currentCell.cellEditor.componentRef && !currentCell.column.editorTemplate) {\r\n                    editor = currentCell.cellEditor.componentRef.instance;\r\n\r\n                    if (editor) {\r\n                        // æ§è¡blur äºä»¶\r\n                        if (editor.inputElement) {\r\n                            const domName = editor.inputElement.nodeName;\r\n                            const blurFn =  editor.options && editor.options.onBlur;\r\n                            if (blurFn) {\r\n                                if ((domName === 'INPUT' || domName === 'TEXTAREA') &&  this.dg['focusElement'] === editor.inputElement) {\r\n                                    blurFn({ editorRef: editor, rowData: currentCell.rowData});\r\n                                }\r\n                            }\r\n                            if (editor.inputElement.blur) {\r\n                                editor.inputElement.blur();\r\n                            }\r\n\r\n                            this.dg['focusElement'] = null;\r\n                        }\r\n\r\n                        if (editor.blur) {\r\n                            editor.blur();\r\n                        }\r\n\r\n                        if (editor.pending) {\r\n                            return of(false);\r\n                        }\r\n\r\n                        if (editor.formControl) {\r\n                            if (editor.formControl.pending) {\r\n                                return of(false);\r\n                            }\r\n\r\n                            if (editor.formControl && editor.formControl.invalid && !this.dg.endEditByInvalid) {\r\n                                return of(false);\r\n                            }\r\n                        } else {\r\n                            return of(true);\r\n                        }\r\n                    } else {\r\n                        return of(true);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            return of(true);\r\n        }\r\n\r\n        this.dg.isSingleClick = false;\r\n        const _col_ = (editor || currentCell).column;\r\n        const afterEditEvent = this.dg.afterEdit(currentCell.rowIndex, currentCell.rowData, _col_, editor);\r\n        if (!afterEditEvent || !afterEditEvent.subscribe) {\r\n            this.dg.writeConsole('please return an Observable Type.');\r\n            return of(undefined);\r\n        }\r\n\r\n        // let cellEndEdit = of(undefined);\r\n        let cellEndEdit = new Subject();\r\n\r\n        afterEditEvent.pipe(takeUntil(this.destroy$)).subscribe((flag: boolean) => {\r\n            if (flag) {\r\n\r\n                let val = currentCell.value === undefined ? '' : currentCell.value;\r\n                if (currentCell && currentCell.formControl && currentCell.formControl.value !== undefined && val !== currentCell.formControl.value) {\r\n                    val = currentCell.formControl.value;\r\n                    currentCell.isEditing = false;\r\n                    currentCell.updateValue(val);\r\n                }\r\n\r\n                this.dfs.endEditCell();\r\n                this.dgs.onEndCellEdit(this.dfs.getCurrentCell());\r\n                this.unBindEditorInputEvent();\r\n                // ç§»é¤ç¼è¾æ ·å¼\r\n                this.render.removeClass(this.el.nativeElement, CELL_EDITING_CLS);\r\n\r\n                if (this.dg.selectedRow) {\r\n                    this.dg.selectedRow.editors = [];\r\n                }\r\n                // this.dg.selectedRow.data = this.rowData;\r\n                // æ´æ°è¡æ ·å¼æèååæ ¼æ ·å¼\r\n                const _rid = this.dfs.primaryId(currentCell.rowData);\r\n                this.dfs.rowUpdate$.next({ index: currentCell.rowIndex, data: currentCell.rowData, cellRef: currentCell, keyID: _rid });\r\n\r\n                if (this.dg.showFooter) {\r\n                    // æ´æ°footerData\r\n                    this.dgs.refreshFooterData.emit();\r\n                }\r\n               \r\n                // å·æ°è¡æ°æ®\r\n                // this.dr.refresh();\r\n                if (this.dg.selectedRow && this.dg.selectedRow.dr) {\r\n                    this.dg.selectedRow.dr.refresh();\r\n                }\r\n\r\n                if (this['ENDEDIT_TIMER']) {\r\n                    clearTimeout(this['ENDEDIT_TIMER']);\r\n                }\r\n\r\n                const { rowIndex, rowData } = currentCell;\r\n\r\n                this['ENDEDIT_TIMER'] = setTimeout(() => {\r\n                    this.dg.endEdit.emit({ rowIndex, rowData, column: _col_, value: val});\r\n                    // cellEndEdit = of(true);\r\n                    cellEndEdit.next(true);\r\n                }, 100);\r\n            } else {\r\n                if (currentCell && currentCell.cellEditor && currentCell.cellEditor.componentRef && currentCell.cellEditor.componentRef.instance) {\r\n                    editor = currentCell.cellEditor.componentRef.instance;\r\n                    editor.inputElement.focus();\r\n                    // cellEndEdit = of(false);\r\n                    cellEndEdit.next(false);\r\n                } else {\r\n                    // cellEndEdit = of(true);\r\n                    cellEndEdit.next(true);\r\n                }\r\n            }\r\n        });\r\n        return cellEndEdit.asObservable();\r\n    }\r\n\r\n    cancelCellEditing() {\r\n        if (this.dg.currentCell && this.dg.currentCell.isEditing && this.dg.selectedRow.index > -1) {\r\n            // this.dfs.resetRow(this.dg.selectedRow.id);\r\n            this.dc.rowData = this.dg.selectedRow.data;\r\n            this.formControl.reset(Utils.getValue(this.column.field, this.dc.rowData));\r\n            this.closeEditingCell();\r\n        }\r\n    }\r\n\r\n\r\n    bindEditorInputEvent() {\r\n        const ceRef = this.cellEditorRef || this.dc.cellEditor;\r\n        let input = null;\r\n        if (ceRef) {\r\n            input = ceRef.componentRef.instance.inputElement;\r\n        } else {\r\n            if (this.column.editorTemplate) {\r\n                input = this.dc.el.nativeElement.querySelector('input,textarea');\r\n            }\r\n        }\r\n        if (input) {\r\n            input.focus();\r\n            if (this.dg.selectOnEditing && this.column.editorTemplate) {\r\n                setTimeout(() => {\r\n                    if (input.select) { input.select(); }\r\n                });\r\n            }\r\n\r\n            this.editorInputKeydownEvent = this.render.listen(input, 'keydown', (e) => {\r\n                this.onKeyDownForInput(e);\r\n            });\r\n        }\r\n    }\r\n\r\n    unBindEditorInputEvent() {\r\n        if (this.editorInputKeydownEvent) {\r\n            this.editorInputKeydownEvent();\r\n            this.editorInputKeydownEvent = null;\r\n        }\r\n    }\r\n\r\n    // private isLastCell() {\r\n    //     let i = this.dg.flatColumns.length;\r\n    //     while(i <= ) {\r\n    //         if (this.dg.flatColumns[i])\r\n    //     }\r\n    // }\r\n\r\n    findLastEditCell() {\r\n        let i = this.dg.colGroup.columns.length - 1;\r\n        let _col = null;\r\n        while(i >= 0) {\r\n            const col = this.dg.colGroup.columns[i];\r\n            if (col.editor || col.editorTemplate) {\r\n                _col = col;\r\n                break;\r\n            } else {\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return _col;\r\n    }\r\n\r\n    onKeyDownForInput(e: KeyboardEvent) {\r\n        const keyCode = e.keyCode;\r\n        if (e.altKey || e.ctrlKey) {\r\n            return;\r\n        }\r\n        if ((this.editor && this.editor.stopPropagation) || keyCode === 13 || this.column.editorTemplate) {\r\n            e.stopPropagation();\r\n        }\r\n\r\n        switch (keyCode) {\r\n            case 32:  // SPACE\r\n                if (this.column.editor.type === 'switch') {\r\n                    e.preventDefault();\r\n                    this.editor.instance.updateChecked(e, false);\r\n                }\r\n                break;\r\n            case 13:  // Enter\r\n                this.closeEditingCell().pipe(takeUntil(this.destroy$)).pipe(\r\n                    debounceTime(100)\r\n                ).subscribe(f => {\r\n                    if (f) {\r\n                        this.dg.dgContainer.nativeElement.focus();\r\n                        const lastEditCell = this.findLastEditCell();\r\n                        \r\n                        const enterParam = { gird: this.dg, cell: this.dg.currentCell, event: e, lastCell: lastEditCell.field === this.column.field };\r\n                        if (this.column.onEnterHandler) {\r\n                            this.column.onEnterHandler(enterParam);\r\n                        } else {\r\n                            const nextTd = this.dg.findNextCell(this.column.field, 'right');\r\n                            if (this.dg.currentCell.lastRow && (!nextTd || lastEditCell.field === this.column.field)) {\r\n                                this.dg.lastCellEnterHandler.emit(enterParam);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                break;\r\n            case 27: // ESC\r\n                this.cancelCellEditing();\r\n                break;\r\n            case 9: // Tab\r\n                e.stopPropagation();\r\n                this.dg.clickDelay = 0;\r\n                if (e.shiftKey) {\r\n                    this.closeEditingCell().pipe(takeUntil(this.destroy$)).subscribe(f => {\r\n                        if (f) {\r\n                            this.movePrevCellAndEdit();\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.closeEditingCell().pipe(takeUntil(this.destroy$)).subscribe(f => {\r\n                        if (f) {\r\n                            this.moveNextCellAndEdit(e);\r\n                        }\r\n                    });\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n            case 40: // â\r\n                /** éä¸­ä¸ä¸è¡ï¼ä¸å½ååè¿å¥ç¼è¾æ; ä»æ®éææ¬è¾å¥æ¡æ¯æ */\r\n                if (this.column.editor.type === 'textbox') {\r\n                    this.closeEditingCell().pipe(takeUntil(this.destroy$)).subscribe(f => {\r\n                        if (f) {\r\n                            this.selectNextRowAndEditCell(this.column.field, 'down');\r\n                        }\r\n                    });\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n            case 38: // â\r\n                /** éä¸­ä¸ä¸è¡ï¼ä¸å½ååè¿å¥ç¼è¾æ; ä»æ®éææ¬è¾å¥æ¡æ¯æ */\r\n                if (this.column.editor.type === 'textbox') {\r\n                    this.closeEditingCell().pipe(takeUntil(this.destroy$)).subscribe(f => {\r\n                        if (f) {\r\n                            this.selectNextRowAndEditCell(this.column.field, 'up');\r\n                        }\r\n                    });\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    private selectCell(field: string, tdElement?: any) {\r\n        this.closeEditingCell().subscribe(t => {\r\n            if (!t) {\r\n                return;\r\n            }\r\n            tdElement = tdElement || this.el.nativeElement;\r\n            this.clearCellSelectedClass();\r\n\r\n            if (field && field !== this.dg.ControlPanelFeild && field.indexOf('farris-datagrid-column') === -1) {\r\n                this.render.addClass(tdElement, CELL_SELECTED_CLS);\r\n            }\r\n\r\n            // this.dr.drHover.setRowHoverCls(false);\r\n            this.dfs.setCurrentCell(this.dr, field, tdElement, this.dc);\r\n            if (!this.dg.fast && this.column.fixed !== 'left' && this.column.fixed !== 'right') {\r\n                this.moveScrollbar(tdElement);\r\n            }\r\n        });\r\n    }\r\n\r\n    private moveScrollbar(td: any) {\r\n        const tdPosLeft = td.offsetLeft + td.offsetWidth;\r\n        const containerWidth = this.dg.width - this.dgb.columnsGroup.leftFixedWidth - this.dgb.columnsGroup.rightFixedWidth;\r\n        const tdRect = td.getBoundingClientRect();\r\n        const scrollContainer = this.dgb.ps.elementRef.nativeElement;\r\n        const psContainer = scrollContainer.getBoundingClientRect();\r\n        const scrollTop = scrollContainer.scrollTop;\r\n        const scrollLeft = scrollContainer.scrollLeft;\r\n        const scrollbarXLeft = this.dgb.ps.elementRef.nativeElement.scrollLeft;\r\n        if (tdPosLeft > containerWidth) {\r\n            const x = tdPosLeft - containerWidth + 2;\r\n            // const x = tdPosLeft - this.dgb.ps.instance.scrollbarXWidth + 2;\r\n            if (x > scrollbarXLeft) {\r\n                this.dgb.ps.scrollToX(x);\r\n            }\r\n        } else {\r\n            // if (tdRect.x < psContainer.x) {\r\n            //     const x = scrollLeft - tdRect.x;\r\n            //     this.dgb.ps.scrollToX(x);\r\n            // }\r\n            if (td.offsetLeft < scrollLeft) {\r\n                this.dgb.ps.scrollToX(td.offsetLeft);\r\n            }\r\n        }\r\n\r\n        const tdPosTop = tdRect.top - psContainer.top + tdRect.height;\r\n        if (tdPosTop > psContainer.height) {\r\n            const y = tdPosTop - psContainer.height;\r\n            this.dgb.ps.scrollToY(scrollTop + y);\r\n        } else {\r\n            if (tdRect.y < psContainer.y) {\r\n                this.dgb.ps.scrollToY(scrollTop - (psContainer.y - tdRect.y));\r\n            }\r\n        }\r\n    }\r\n\r\n    private moveNextCellAndEdit(event?: any) {\r\n        // if (!this.closeEditingCell()) {\r\n        //     return;\r\n        // }\r\n        // const fieldIndex = this.dfs.getColumnIndex(this.column.field);\r\n        const fieldIndex = this.dg.colGroup.columns.findIndex(n => (n.id && n.id === this.column.id) || n.field === this.column.field);\r\n        if (fieldIndex + 1 < this.dgb.columnsGroup.columns.length) {\r\n            const nextColumn = this.dgb.columnsGroup.columns[fieldIndex + 1];\r\n            const nextTd: any = this.dg.findNextTd(nextColumn);\r\n\r\n            if (nextTd && (!nextColumn.fixed || nextColumn.fixed === 'center')) {\r\n                this.moveScrollbar(nextTd);\r\n            }\r\n\r\n            // const nextTd = this.dg.currentCell.cellElement.nextElementSibling;\r\n            if (nextColumn && ((!nextColumn.editor && !nextColumn.editorTemplate) || this.isReadonly(nextColumn))) {\r\n                if (nextTd) {\r\n                    nextTd.selectCell(event, nextTd);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (nextTd) {\r\n                nextTd.focus();\r\n                if (nextColumn.editor || nextColumn.editorTemplate) {\r\n                    nextTd.editCell();\r\n                    this.dgs.onCellEdit(nextTd);\r\n                }\r\n            }\r\n        } else {\r\n            // next row's first cell to editing\r\n            const nextTr = this.dg.currentCell.cellElement.parentElement.nextElementSibling;\r\n            if (nextTr && nextTr.tagName === 'TR') {\r\n                // nextTr.children.find(td => td.editCell).editCell();\r\n                let firstEditor = false;\r\n                let i = 0;\r\n                while (!firstEditor) {\r\n                    firstEditor = !!nextTr.children[i].editCell;\r\n                    if (!firstEditor) {\r\n                        i++;\r\n                    }\r\n                }\r\n                if (this.dg.selectionMode === 'default') {\r\n                    this.dg.clearCheckeds();\r\n                }\r\n                nextTr.children[i].editCell();\r\n            }\r\n        }\r\n    }\r\n\r\n    private movePrevCellAndEdit() {\r\n        // if (!this.closeEditingCell()) {\r\n        //     return;\r\n        // }\r\n        const fieldIndex = this.dfs.getColumnIndex(this.column.field);\r\n        if (fieldIndex - 1 >= 0) {\r\n            const nextColumn = this.dgb.columnsGroup.normalColumns[fieldIndex - 1];\r\n            if (nextColumn && this.isReadonly(nextColumn)) {\r\n                return;\r\n            }\r\n            const nextTd = this.dg.currentCell.cellElement.previousElementSibling;\r\n            if (nextTd) {\r\n                // this.selectCell(nextColumn.field, nextTd);\r\n                nextTd.focus();\r\n                if (nextColumn.editor) {\r\n                    // this.dfs.editCell();\r\n                    nextTd.click();\r\n                    this.dgs.onCellEdit(nextTd);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private selectNextRowAndEditCell(cellFieldName: string, dir: 'down' | 'up') {\r\n\r\n        if(!this.dg.currentCell) {\r\n            this.dg.writeConsole('å½åéä¸­ååæ ¼ä¸ºç©º');\r\n            return;\r\n        }\r\n\r\n        const p = dir === 'down' ? 'nextElementSibling': 'previousElementSibling';\r\n        const nextTr = this.dg.currentCell.cellElement.parentElement[p];\r\n        if (nextTr && nextTr.tagName === 'TR') {\r\n            const td: any = Array.from(nextTr.children).find((td: any) => td.getAttribute('field') == cellFieldName);\r\n            if (td && td.editCell) {\r\n                if (this.dg.selectionMode === 'default' ) {\r\n                    this.dg.clearCheckeds();\r\n                }\r\n                td.editCell();\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearCellSelectedClass() {\r\n        this.dg.removeCellSelectedCls();\r\n    }\r\n\r\n    private setCellClsWithEditorType() {\r\n\r\n        // è®¾ç½®å½åéä¸­ååæ ¼æ ·å¼\r\n        if (this.dg.currentCell && this.dg.enableHighlightCell) {\r\n            if (this.dg.currentCell.field === this.column.field && this.dg.currentCell.rowId === this.rowData[this.dg.idField] && !this.dc.isEditing) {\r\n                this.clearCellSelectedClass();\r\n                this.render.addClass(this.el.nativeElement, CELL_SELECTED_CLS);\r\n            }\r\n        }\r\n\r\n\r\n        if (!this.dg.enableEditCellStyle) {\r\n            return;\r\n        }\r\n\r\n        const td = this.el.nativeElement;\r\n        this.cleanOtherEditorIcon(td);\r\n        // å½åè¡ç¦ç¨ï¼ä¸åè®¸ç¼è¾ã\r\n        if (this.dr.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (!this.column.editor) {\r\n            return;\r\n        }\r\n\r\n        if (this.isReadonly()) {\r\n            return;\r\n        }\r\n\r\n        const editorType = this.column.editor.type;\r\n        const cls = this.column.align === 'right' ? 'allow-edit-cell-left' : 'allow-edit-cell';\r\n        this.render.addClass(td, cls);\r\n        this.render.addClass(td, ALLOW_EDIT_CELL_HIGHLIGHT_CLS[editorType]);\r\n    }\r\n\r\n    private cleanOtherEditorIcon(td) {\r\n        const values = Object.values(ALLOW_EDIT_CELL_HIGHLIGHT_CLS);\r\n        values.forEach(v => {\r\n            if (td.className.indexOf(v) > -1) {\r\n                td.className = td.className.replace('allow-edit-cell-left', '').replace('allow-edit-cell', '');\r\n                td.className = td.className.replace(v, '');\r\n            }\r\n        });\r\n    }\r\n}\r\n","\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-20 08:19:06\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, ViewChild, ElementRef, AfterViewInit, Injector, Inject, forwardRef } from '@angular/core';\r\nimport { ChangeDetectorRef, NgZone, OnDestroy } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { DataColumn, SCROLL_X_ACTION, TR_ID_PREFIX } from '../../types';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD, GROUP_VISIBLE_FIELD, GROUP_LEVEL_FIELD } from '../../services/state';\r\nimport { delay, takeUntil } from 'rxjs/operators';\r\nimport { Utils } from '../../utils/utils';\r\n\r\n@Component({\r\n    selector: 'datagrid-rows',\r\n    templateUrl: './datagrid-rows.component.html',\r\n    // changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DatagridRowsComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n    @Input() startRowIndex: number;\r\n    @Input() data: any;\r\n    @Input() columns: DataColumn[];\r\n    @ViewChild('tableEl') tableEl: ElementRef;\r\n    /** æ¯å¦ä¸ºå³ä¾§åºå®åãé»è®¤ä¸º false */\r\n    @Input() fixedRight = false;\r\n    /** æ¯å¦æå·¦ä¾§åºå®å */\r\n    @Input() hasFixedColumns = false;\r\n\r\n    @Input() width: number;\r\n\r\n    isGroupRow = IS_GROUP_ROW_FIELD;\r\n    /** åç»è¡ç¶IDå­æ®µ */\r\n    groupRow = GROUP_ROW_FIELD;\r\n    isGroupFooter = IS_GROUP_FOOTER_ROW_FIELD;\r\n    visible = GROUP_VISIBLE_FIELD;\r\n    groupLevelField = GROUP_LEVEL_FIELD;\r\n\r\n    filterConditions = '';\r\n\r\n\r\n    get groupSummaryDataInGroupRow() {\r\n        return this.dg.groupSummaryPosition === 'inGroupRow';\r\n    }\r\n\r\n    checkedRows = [];\r\n\r\n    private ro: ResizeObserver = null;\r\n    private scrollToCurrentRowSubscription: Subscription;\r\n    private subscriptions: Subscription[] = [];\r\n    private destroy$ = new Subject();\r\n    constructor(\r\n        public cd: ChangeDetectorRef,\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent,\r\n        @Inject(forwardRef(() => DatagridBodyComponent)) public dgb: DatagridBodyComponent,\r\n        public el: ElementRef, private injector: Injector, private ngZone: NgZone) {\r\n\r\n    }\r\n\r\n    private listenEvent() {\r\n        const _s3 = this.dg.dgs.setSelecedRow.pipe(takeUntil(this.destroy$)).subscribe((r: any) => {\r\n            this.detectChanges();\r\n        });\r\n        this.subscriptions.push(_s3);\r\n\r\n        const _s4 = this.dg.dfs.rowAppend$.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n            this.detectChanges();\r\n        });\r\n        this.subscriptions.push(_s4);\r\n\r\n        const _s5 = this.dg.dfs.rowUpdate$.pipe(takeUntil(this.destroy$)).subscribe((row: { index: number; data: any; }) => {\r\n            if (row) {\r\n                if (this.dg.groupRows && this.dg.groupFooter && this.dg.groupField) {\r\n                    let groupRowId = row.data[this.groupRow];\r\n                    if (groupRowId === undefined) {\r\n                        const _row = this.dg.getRows().find(n => n.id === this.dg.dfs.primaryId(row.data));\r\n                        if (_row) {\r\n                            groupRowId = this.dg.commonUtils.getValue(this.groupRow, _row);\r\n                        }\r\n                    }\r\n                    if (groupRowId !== '' && groupRowId !== null) {\r\n                        this.dg.dfs.updateGroupFooter(groupRowId);\r\n                    } else {\r\n                        this.dg.writeConsole('æªè·åå°groupRowIdã', 'error');\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.subscriptions.push(_s5);\r\n\r\n        this.scrollToCurrentRowSubscription = this.dg.dgs.scrollToCurrentRow.pipe(\r\n            delay(50),\r\n        ).subscribe(() => {\r\n            this.scrollToFirstSelectedRow();\r\n            const scrollInfo = this.dg.dfs.getState().scrollInfo;\r\n            this.dg.scrollInstance.scrollToLeft();\r\n            if (this.dg.enableFilterRow && scrollInfo && scrollInfo.x) {\r\n                this.dg.dgs.closeFilterPanel.emit();\r\n            }\r\n        });\r\n\r\n\r\n        this.dg.dfs.checkRow$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe( () => {\r\n            this.checkedRows = this.dg.dfs.getCheckeds();\r\n            this.detectChanges();\r\n        });\r\n\r\n        this.dg.dfs.clearCheckeds$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe( () => {\r\n            this.checkedRows =  this.dg.dfs.getCheckeds();\r\n            this.detectChanges();\r\n        });\r\n\r\n\r\n        this.dg.dgs.toggleGroupRow$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(({ expand, groupRowIndex }) => {\r\n            this._toggleGroupRow(groupRowIndex, expand);\r\n            setTimeout(() => {\r\n                if (this.dgb.ps){\r\n                    this.dgb.ps.update();\r\n                }\r\n            }, 10);\r\n        });\r\n\r\n        this.dg.dgs.toggleAllGroupRows$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(({expand}) => {\r\n            this.toggleAllGroupRows(expand);\r\n            // setTimeout(() => {\r\n            //     this.dg.scrollToTop();\r\n            // });\r\n            setTimeout(() => {\r\n                if (this.dgb.ps){\r\n                    this.dgb.ps.update();\r\n                }\r\n            }, 10)\r\n        })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.listenEvent();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unSubscriptions();\r\n    }\r\n\r\n    private _toggleGroupRow(groupRowIndex: number, expand: boolean = true) {\r\n        if (groupRowIndex > -1) {\r\n            const allRows = this.dg.getRows();\r\n            const groupRows = allRows.filter(n => n[IS_GROUP_ROW_FIELD]);\r\n            let gr = groupRows[groupRowIndex];\r\n            if (!gr) {\r\n                gr = allRows[groupRowIndex];\r\n            }\r\n            if (gr) {\r\n                this.toggleGroupRow(gr, groupRowIndex, expand);\r\n            }\r\n        }\r\n    }\r\n\r\n    private toggleAllGroupRows(expand = true) {\r\n        const groupRows = this.data.filter(n => n[IS_GROUP_ROW_FIELD]);\r\n        groupRows.forEach(gr => {\r\n            gr.expanded = expand;\r\n            this.dg.dfs.setGroupRowsVisible(gr, expand, false);\r\n        });\r\n\r\n        this.cd.detectChanges();\r\n        if (expand){\r\n            this.dg.dfs.expandGroupRow.emit();\r\n        } else {\r\n            this.dg.dfs.collapseGroupRow.emit();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private unSubscriptions() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        if (this.scrollToCurrentRowSubscription) {\r\n            this.scrollToCurrentRowSubscription.unsubscribe();\r\n            this.scrollToCurrentRowSubscription = null;\r\n        }\r\n\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach(n => n.unsubscribe);\r\n            this.subscriptions = [];\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            setTimeout(() => {\r\n                if (!this.dg.nowrap) {\r\n                    // this.dgb.updateRowHeight();\r\n                    this.dg.calculateGridSize();\r\n                }\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    getGroupColumn(field) {\r\n        return this.dg.flatColumns.find(col => col.field === field);\r\n    }\r\n\r\n    private detectChanges() {\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    trackByField(index, item) {\r\n        return item.field;\r\n    }\r\n\r\n    isElementInViewport(el) {\r\n        const container = this.dgb.ps.instance.element.getBoundingClientRect();\r\n        const box = el.getBoundingClientRect();\r\n        const top = (box.top <= container.height + container.top);\r\n        const bottom = (box.bottom <= (container.bottom));\r\n\r\n        return (top && bottom);\r\n    }\r\n\r\n    private _elementIntoView(tr: any, rowIndex: number) {\r\n        if (tr) {\r\n            if (tr.scrollIntoViewIfNeeded) {\r\n                tr.scrollIntoViewIfNeeded(false);\r\n            } else {\r\n                tr.scrollIntoView({ block: 'nearest', inline: 'nearest' });\r\n            }\r\n        } else {\r\n            const currentTrTop = rowIndex * this.dg.rowHeight;\r\n            if (currentTrTop) {\r\n                this.dg.scrollInstance.scrollToY(currentTrTop);\r\n            }\r\n        }\r\n    }\r\n\r\n    private scrollToFirstSelectedRow() {\r\n        if (this.dg.selectedRow) {\r\n            const rowIndex = this.dg.selectedRow.index;\r\n            const rowId = TR_ID_PREFIX + this.dg.selectedRow.id;\r\n            // const tr: any = document.querySelector(rowId);\r\n            const tr: any = Utils.getTrDomById(rowId, document);\r\n            if (rowIndex === 0) {\r\n                if (this.dgb.ps && this.dgb.ps.instance) {\r\n                    if (this.dgb.ps.instance.element.scrollTop === 0) {\r\n                        return;\r\n                    } else {\r\n                        this.dg.scrollInstance.scrollToY(0);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            const { top, bottom } = this.dgb.getVisibleRange();\r\n            if (rowIndex === top || rowIndex === bottom) {\r\n                this._elementIntoView(tr, rowIndex);\r\n                return;\r\n            } else {\r\n                if (rowIndex > top && rowIndex < bottom && tr && this.isElementInViewport(tr)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this._elementIntoView(tr, rowIndex);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    toggleGroupRow(row, index, open, $event?: MouseEvent) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        row.expanded = open;\r\n        this.dg.dfs.setGroupRowsVisible(row, open);\r\n    }\r\n\r\n    private mergeInfo(field: string, rowIndex: number) {\r\n        return this.dg.dgs.getMergeInfo(rowIndex, field, this.dg.mergeCellInfo);\r\n    }\r\n\r\n    showCell(col: DataColumn, rowIndex: number) {\r\n        const mergeInfo = this.mergeInfo(col.field, rowIndex);\r\n        let show = true;\r\n        if (mergeInfo) {\r\n            show = mergeInfo.show;\r\n        }\r\n\r\n        return show;\r\n    }\r\n\r\n    getRowSpan(col: DataColumn, rowIndex: number) {\r\n        const mergeInfo = this.mergeInfo(col.field, rowIndex);\r\n        if (!mergeInfo) {\r\n            return 1;\r\n        }\r\n        if (this.showCell(col, rowIndex)) {\r\n            col.readonly = true;\r\n            return mergeInfo.rowspan;\r\n        } else {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    getGroupSummaryData(groupId: string) {\r\n        const _data = this.dg.getRows();\r\n        if (_data && _data.length) {\r\n            const row = this.dg.getRows().find(n =>  n['__group_parent_id__'] === groupId && n['__group_footer__']);\r\n            if (row) {\r\n                return row.data;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-09-06 08:30:18\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-09-06 08:34:35\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n/** å¼å®¹èçæ¬ï¼xxxxxxx */\r\n@Component({\r\n    selector: 'grid-editor-textbox',\r\n    template: ''\r\n})\r\nexport class TextboxEditorComponent {}\r\n","import { QueryList, OnDestroy } from '@angular/core';\r\n/*\r\n* @Author: ç¯çç§æ(Lucas Huang)\r\n* @Date: 2019-08-06 07:43:53\r\n* @LastEditors: ç¯çç§æ(Lucas Huang)\r\n* @LastEditTime: 2019-11-20 20:14:11\r\n* @QQ: 1055818239\r\n* @Version: v0.0.1\r\n*/\r\n\r\nimport { ComponentFactoryResolver, ViewContainerRef, OnChanges, SimpleChanges, ComponentRef, ViewChildren } from '@angular/core';\r\n\r\nimport {\r\n    Component, OnInit, Input, Renderer2, ViewChild, ElementRef,\r\n    AfterViewInit, ViewEncapsulation, Injector, ChangeDetectorRef, Directive, Optional, NgZone\r\n} from '@angular/core';\r\n\r\nimport { DataColumn } from './../../types/data-column';\r\nimport { ColumnGroup } from '../../types/data-column';\r\nimport { DatagridService } from '../../services/datagrid.service';\r\nimport { SCROLL_X_ACTION, FIXED_LEFT_SHADOW_CLS, SCROLL_X_REACH_START_ACTION, FIXED_RIGHT_SHADOW_CLS, SCROLL_X_REACH_END_ACTION, GRID_FILTER_ROW } from '../../types/constant';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridHeaderCheckboxComponent } from '../checkbox/datagrid-header-checkbox.component';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { DatagridFilterService } from '../../services/datagrid-filter.service';\r\nimport { of, Observable, Subject, Subscription, fromEvent, race } from 'rxjs';\r\nimport { buffer, bufferCount, debounceTime, filter, first, map, repeat, takeUntil, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'datagrid-header',\r\n    templateUrl: './header.component.html',\r\n    styles: [`\r\n        .f-datagrid-header-cell:hover>div>div {\r\n            width: calc(100% - 15px);\r\n        }\r\n\r\n        .drag-column-bar.f-icon-more-vertical:before {\r\n            position: relative;\r\n            top: -2px;\r\n        }\r\n        .f-datagrid-header-cell-content .f-datagrid-sort:before {\r\n            position: relative;\r\n            top: -1px;\r\n        }\r\n    `],\r\n    encapsulation: ViewEncapsulation.None,\r\n    exportAs: 'dgHeader'\r\n})\r\nexport class DatagridHeaderComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n    @Input() height = 35;\r\n    @Input() columns = [];\r\n    @Input() columnsGroup: ColumnGroup;\r\n    @Input() enableDragColumn = false;\r\n    @Input() wrapHeader = false;\r\n    @Input() enableFilterRow = false;\r\n\r\n    @Input() scrollbarMode = 'auto';\r\n\r\n    /** å¯ç¨æ§è½ä¼åç */\r\n    @Input() fast = false;\r\n\r\n\r\n    @ViewChild('header') header: ElementRef;\r\n    @ViewChild('headerContainer') headerColumnsTable: ElementRef;\r\n    @ViewChild('fixedLeft') fixedLeft: ElementRef;\r\n\r\n    \r\n\r\n    private _chkall: DatagridHeaderCheckboxComponent;\r\n    @ViewChild('chkAll') set chkAll(v) {\r\n        this._chkall = v;\r\n    }\r\n\r\n    private fixedRight: ElementRef;\r\n    @ViewChild('fixedRight') set fr(val) {\r\n        if (val) {\r\n            this.fixedRight = val;\r\n        }\r\n    }\r\n\r\n    private dgs: DatagridService;\r\n    private dfs: DatagridFacadeService;\r\n    private ro: ResizeObserver | null = null;\r\n    private cfr: ComponentFactoryResolver;\r\n    private dfrs: DatagridFilterService;\r\n    private el: ElementRef;\r\n    rightFixedColumnWidth = 0;\r\n    normalColumnWidth = 0;\r\n\r\n    private cd: ChangeDetectorRef;\r\n    showOverlay = false;\r\n    disableSort = false;\r\n    private scrollX = 0;\r\n    showShadowCls = false;\r\n\r\n    top = 0;\r\n\r\n    // è¡å· ã å¤éæ¡ï¼å¨å¤è¡¨å¤´ä¸çåå¹¶è¡æ°\r\n    get rowSpan() {\r\n        // TFS 495872\r\n        // return this.columns.length + (this.dg.enableFilterRow ? 1 : 0);\r\n        return this.columns.length;\r\n    }\r\n\r\n    hasFixedLeftColumns = false;\r\n\r\n    private ps;\r\n    private destroy$ = new Subject();\r\n    lineNumberTitle = 'åºå·';\r\n\r\n\r\n    constructor(\r\n        private render2: Renderer2, private injector: Injector,\r\n        @Optional() public dg: DatagridComponent, private ngZone: NgZone) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.cfr = this.injector.get(ComponentFactoryResolver);\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n        this.el = this.injector.get(ElementRef);\r\n        this.dfrs = this.dg.clientFilterService;\r\n\r\n        this.dgs.scorll$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((d: any) => {\r\n\r\n            if (d.type === SCROLL_X_ACTION || d.type === SCROLL_X_REACH_END_ACTION || d.type === SCROLL_X_REACH_START_ACTION) {\r\n                this.scrollX = d.x;\r\n                this.render2.setStyle(this.headerColumnsTable.nativeElement, 'transform', `translate3d(-${d.x}px, 0px, 0px)`);\r\n                if (!this.dg.groupRows) {\r\n                    if (this.fixedLeft) {\r\n                        if (d.x) {\r\n                            this.render2.addClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                        } else {\r\n                            this.render2.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (d.type === SCROLL_X_REACH_START_ACTION) {\r\n                if (this.fixedLeft) {\r\n                    this.render2.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.dgs.showFixedShadow.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((e: any) => {\r\n            if (this.fixedRight) {\r\n                this.setFixedColumnPosition(e.showRightShadow, e.x);\r\n            }\r\n        });\r\n\r\n        this.dgs.disableHeader.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((flag: any) => {\r\n            this.showOverlay = flag;\r\n            this.disableSort = flag;\r\n            this.cd.detectChanges();\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.dgs.checkedRowsTotalChanged$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            if (this._chkall) {\r\n                const checkedsCount = this.dfs.getCurrentPageCheckeds().length;\r\n                const isCheckAll = this.dfs.isCheckAll();\r\n                const isIndeterminate = isCheckAll || !checkedsCount;\r\n                this._chkall.chk.nativeElement.indeterminate = !isIndeterminate;\r\n                const _checked = isCheckAll && checkedsCount > 0;\r\n                this._chkall.updateStatus(_checked);\r\n            }\r\n        });\r\n\r\n        this.dgs.uncheckAll.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            if (this.dg.showAllCheckbox && this._chkall) {\r\n                this._chkall.chk.nativeElement.indeterminate = false;\r\n                this._chkall.chk.nativeElement.checked = false;\r\n            }\r\n        });\r\n\r\n        this.dgs.checkAll.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            if (this._chkall) {\r\n                this._chkall.chk.nativeElement.checked = true;\r\n            }\r\n        });\r\n\r\n        this.dgs.scrollbarUpdate.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((ps: any) => {\r\n            this.ps = ps.scrollbarRef;\r\n            // const rw = ps.rightWidth || 0;\r\n            // if (!rw) {\r\n            //     this.rightFixedColumnWidth = this.getRightFixedColWidth(this.ps);\r\n            // } else {\r\n            //     this.rightFixedColumnWidth = rw;\r\n            // }\r\n            this.rightFixedColumnWidth = this.getRightFixedColWidth(this.ps);\r\n            if (this.fixedRight) {\r\n                this.setFixedColumnPosition(ps.showRightShadow, 0);\r\n            }\r\n            this.cd.detectChanges();\r\n        });\r\n\r\n\r\n        this.dgs.showGridHeader.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            this.setHeaderPosition();\r\n        });\r\n\r\n        this.dgs.smartFilterBarExpand.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            this.setHeaderPosition();\r\n        });\r\n\r\n        this.rightFixedColumnWidth = this.getRightFixedColWidth(this.ps);\r\n        this.hasFixedLeftColumns = this.columnsGroup && this.columnsGroup.leftFixed && !!this.columnsGroup.leftFixed.length;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        setTimeout(() => {\r\n            this.setHeaderPosition();\r\n        });\r\n\r\n        this.lineNumberTitle = this.getLineNumberTitle();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.columnsGroup && !changes.columnsGroup.isFirstChange()) {\r\n            setTimeout(() =>{\r\n                this.rightFixedColumnWidth = this.getRightFixedColWidth(this.ps);\r\n                this.hasFixedLeftColumns = this.columnsGroup && this.columnsGroup.leftFixed && !!this.columnsGroup.leftFixed.length;\r\n\r\n                if (!this.cd['destroyed']) {\r\n                    this.cd.detectChanges();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n\r\n        this.fixedRight = null;\r\n    }\r\n\r\n    private getLineNumberTitle() {\r\n        if (this.dg.lineNumberTitle) {\r\n            return this.dg.lineNumberTitle;\r\n        } else {\r\n            return this.dg.localeService.getValue('datagrid.lineNumberTitle');\r\n        }\r\n    }\r\n\r\n    private getRightFixedColWidth(ps = null) {\r\n        if (!this.columnsGroup) {\r\n            return 0;\r\n        }\r\n\r\n\r\n        let w = this.columnsGroup.rightFixedWidth;\r\n        ps = this.dg.scrollInstance ? this.dg.scrollInstance.instance : null;\r\n\r\n        if (ps && ps.scrollbarYActive && this.scrollbarMode === 'allways') {\r\n            return w += 18;\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private setHeaderPosition() {\r\n        let top = 0;\r\n        if ((this.dg.enableFilterRow || this.dg.enableSmartFilter) && this.dg.showFilterBar) {\r\n            top += this.dg.filterBarHeight;\r\n        }\r\n\r\n        if (this.dg.showRowGroupPanel) {\r\n            top += this.dg.rowGroupPanelHeight;\r\n        }\r\n\r\n        this.top = top;\r\n        this.render2.setStyle(this.el.nativeElement, 'top', `${top}px`);\r\n        \r\n\r\n        const headerCellHeight =  `${this.dg.customStyleKey()} .f-datagrid-header .f-datagrid-header-cell-content`;\r\n        this.dgs.removeCssRule(headerCellHeight);\r\n        this.dg.renderCustomStyle2({style: {'min-height': this.dg.headerHeight + 'px'}}, this.el.nativeElement, headerCellHeight);\r\n\r\n        const filterRowCls = `${this.dg.customStyleKey()} .f-datagrid-header-row.f-datagrid-filter-row .f-datagrid-header-cell-content`;\r\n        this.dgs.removeCssRule(filterRowCls);\r\n        if (this.dg.enableFilterRow) {\r\n            this.dgs.appendCssRules([`${filterRowCls} { height: ${this.dg.filterRowHeight}px;min-height:${this.dg.filterRowHeight}px }`]);\r\n        }\r\n    }\r\n\r\n    isShowShadow(fixedLeftWidth) {\r\n        const dgContainerWidth = this.dg.dgContainer.nativeElement.offsetWidth;\r\n        return dgContainerWidth < this.dg.colGroup.totalWidth;\r\n\r\n    }\r\n\r\n    isColspan(left, right, col, isdatafield = false) {\r\n        // if (this.fast) {\r\n        //     if (isdatafield) {\r\n        //         return !col.colspan;\r\n        //     } else {\r\n        //         return col.colspan;\r\n        //     }\r\n        // }\r\n\r\n        const _iscolspan = (fixed: 'none'|'left'|'right'| '') => {\r\n\r\n            if (!fixed || fixed == 'none') {\r\n                if (isdatafield) {\r\n                    return (!col.colspan || col.colspan === 1) && (!col.fixed || col.fixed === 'none');\r\n                } else {\r\n                    return col.colspan && col.colspan > 1 && (!col.fixed || col.fixed === 'none');\r\n                }\r\n            } else {\r\n                if (isdatafield) {\r\n                    return (!col.colspan || col.colspan === 1) && col.fixed === fixed;\r\n                } else {\r\n                    return col.colspan && col.colspan > 1 && col.fixed && col.fixed === fixed;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!left && !right) {\r\n            return _iscolspan('none');\r\n        } else if (left) {\r\n            return _iscolspan('left');\r\n        } else if (right) {\r\n            return _iscolspan('right');\r\n        }\r\n    }\r\n\r\n    setFixedColumnPosition(isShow, scrollLeft) {\r\n        this.showShadowCls = isShow;\r\n        const method = isShow ? 'addClass' : 'removeClass';\r\n        this.render2[method](this.fixedRight.nativeElement, FIXED_RIGHT_SHADOW_CLS);\r\n\r\n        const realWidth = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth + this.rightFixedColumnWidth;\r\n        const gridWidth = this.dg.width;\r\n        let l = this.dg.width - (this.dg.showBorder ? 2 : 0) - this.rightFixedColumnWidth;\r\n        if (gridWidth > realWidth) {\r\n            l = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth;\r\n            // if (this.dg.showBorder) {\r\n            //     l-= 2;\r\n            // }\r\n        }\r\n\r\n        this.render2.setStyle(this.fixedRight.nativeElement, 'left', l + 'px');\r\n    }\r\n\r\n    onRowNumerColumnDblClick(e: MouseEvent, rntd: any) {\r\n        let maxRowNumber = this.dg.getRows().length;\r\n        if (this.dg.pagination) {\r\n            const pageSize = this.dg.pageSize;\r\n            const pageIndex = this.dg.pageIndex;\r\n            maxRowNumber = pageSize * pageIndex + pageSize;\r\n        }\r\n\r\n        this.dg.longTextArea.nativeElement.innerHTML = maxRowNumber;\r\n        const w1 = this.dg.longTextArea.nativeElement.offsetWidth;\r\n\r\n        const currentWidth = rntd.offsetWidth;\r\n\r\n        if (w1 > currentWidth) {\r\n            this.dg.lineNumberWidth = w1 + 10;\r\n            this.dfs.updateProperty('lineNumberWidth', this.dg.lineNumberWidth);\r\n            this.dfs.resizeColumns();\r\n        }\r\n    }\r\n\r\n    onSortColumnClick(e: MouseEvent, col: DataColumn) {\r\n        if (this['SORT_CLICK_TIMER']) {\r\n            clearTimeout(this['SORT_CLICK_TIMER']);\r\n        }\r\n\r\n        this['SORT_CLICK_TIMER'] = setTimeout(() => {\r\n            this._onSortClick(e, col);\r\n        }, 250)\r\n    }\r\n\r\n\r\n    private _onSortClick(e: MouseEvent, col: DataColumn) {\r\n\r\n        e.stopPropagation();\r\n\r\n        if (this.disableSort) {\r\n            return;\r\n        }\r\n\r\n        if (!col.sortable) {\r\n            return;\r\n        }\r\n        // ç»æç¼è¾\r\n        this.dg.cancelEdit(null);\r\n        const sortName = this.dg.sortName;\r\n        const sortOrder = this.dg.sortOrder;\r\n        let sortFields = [];\r\n        let sortOrders = [];\r\n        if (sortName) {\r\n            sortFields = sortName.split(',');\r\n            sortOrders = sortOrder.split(',');\r\n        }\r\n\r\n        const colOrder = col.order || 'asc';\r\n        let newOrder = colOrder;\r\n        const i = sortFields.findIndex(n => n === col.field);\r\n        if (i >= 0) {\r\n            const _order = sortOrders[i] === 'asc' ? 'desc' : 'asc';\r\n            newOrder = _order;\r\n            // if (this.dg.multiSort && newOrder === 'asc') {\r\n            if (newOrder === 'asc') {\r\n                newOrder = undefined;\r\n                sortFields.splice(i, 1);\r\n                sortOrders.splice(i, 1);\r\n            } else {\r\n                sortOrders[i] = _order;\r\n            }\r\n        } else {\r\n            if (this.dg.multiSort) {\r\n                sortFields.push(col.field);\r\n                sortOrders.push(colOrder);\r\n            } else {\r\n                sortFields = [col.field];\r\n                sortOrders = [colOrder];\r\n            }\r\n        }\r\n\r\n        col.order = newOrder;\r\n\r\n        this.dg.sortName = sortFields.join(',');\r\n        this.dg.sortOrder = sortOrders.join(',');\r\n        this.dfs.setSortInfo(this.dg.sortName, this.dg.sortOrder);\r\n\r\n        this.dg.beforeSortColumn(this.dg.sortName, this.dg.sortOrder, this.dg).subscribe(() => {\r\n            this.dg.onColumnSorted();\r\n        });\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[filter-row-creator]'\r\n})\r\nexport class FilterRowCreateDirective implements OnInit, OnChanges, OnDestroy {\r\n    @Input() left: boolean;\r\n    @Input() right: boolean;\r\n\r\n    private dgs: DatagridService;\r\n    private dfs: DatagridFacadeService;\r\n    private cfr: ComponentFactoryResolver;\r\n    private dfrs: DatagridFilterService;\r\n    private filterRowType: any;\r\n    private filterRowRef: ComponentRef<any>;\r\n    private cd: ChangeDetectorRef;\r\n\r\n    private headeRef: DatagridHeaderComponent;\r\n    private destroy$ = new Subject();\r\n\r\n    constructor(private vc: ViewContainerRef, private injector: Injector,\r\n        public dg: DatagridComponent, private ngZone: NgZone) {\r\n\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.cfr = this.injector.get(ComponentFactoryResolver);\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n        this.dfrs = this.dg.clientFilterService;\r\n\r\n        this.headeRef = this.injector.get(DatagridHeaderComponent);\r\n\r\n        this.filterRowType = this.injector.get(GRID_FILTER_ROW, null);\r\n\r\n        this.dgs.clearFilter.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n            if (this.filterRowRef) {\r\n                this.filterRowRef.instance.clearFilterValue(false);\r\n            }\r\n        });\r\n        this.dgs.columnsChanged.pipe(takeUntil(this.destroy$)).subscribe((e: any) => {\r\n            const rebuild = e ? e.rebuildFilterBar: true;\r\n            this.createFilterRow(rebuild);\r\n        });\r\n\r\n        if (this.dfrs) {\r\n            this.dfrs.removeField.pipe(takeUntil(this.destroy$)).subscribe((f) => {\r\n                if (this.filterRowRef && f) {\r\n                    this.filterRowRef.instance.removeField(f);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.createFilterRow(true);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    /** è¿æ»¤è¡ */\r\n    createFilterRow(rebuild = false) {\r\n        if (rebuild && this.filterRowRef) {\r\n            this.filterRowRef.destroy();\r\n            this.filterRowRef = null;\r\n        }\r\n        if (this['_FILTERROW_CREATE_TIMER_']) {\r\n            clearTimeout(this['_FILTERROW_CREATE_TIMER_']);\r\n        }\r\n        this['_FILTERROW_CREATE_TIMER_'] = setTimeout(() => {\r\n            this._createFilterRow();\r\n            if (rebuild && !this.cd['destroyed']) {\r\n                this.cd.detectChanges();\r\n            }\r\n        }, 50);\r\n    }\r\n\r\n    private _createFilterRow() {\r\n        if (this.dg.enableFilterRow) {\r\n            if (!this.filterRowType) {\r\n                return;\r\n            }\r\n\r\n            let columnsData = this.dg.colGroup.normalColumns;\r\n            if (this.left) {\r\n                columnsData = this.dg.colGroup.leftFixed;\r\n            } else if (this.right) {\r\n                columnsData = this.dg.colGroup.rightFixed;\r\n            }\r\n\r\n            if (!this.filterRowRef && this.vc) {\r\n                const cf = this.cfr.resolveComponentFactory(this.filterRowType);\r\n                this.filterRowRef = this.vc.createComponent(cf);\r\n                this.filterRowRef.instance.fixedLeft = this.left;\r\n                this.filterRowRef.instance.columns = columnsData;\r\n                this.filterRowRef.instance.gridInstance = this.dg;\r\n\r\n                this.dgs.closeFilterPanel.subscribe(() => {\r\n                    this.filterRowRef.instance.dfrs.closeFilterPanel();\r\n                });\r\n\r\n                this.filterRowRef.instance.conditionChange.subscribe(n => {\r\n                    const _currentConditionsString = JSON.stringify(this.dg.conditions || {});\r\n\r\n                    const { conditions, removedFields } = n;\r\n                    if (removedFields) {\r\n                        delete this.dg.conditions[removedFields];\r\n                    }\r\n\r\n                    const _conditions = this.mergeFilterConditions(conditions || {});\r\n\r\n                    if (_currentConditionsString !== JSON.stringify(_conditions || {})) {\r\n\r\n                        // æ¸çä¸å­å¨çå\r\n                        Object.keys(_conditions).forEach(k => {\r\n                            const col = this.dg.dfs.getColumn(k);\r\n                            if (!col) {\r\n                                delete _conditions[k];\r\n                            }\r\n                        });\r\n\r\n                        this.dgs.onFilterChanged.emit(_conditions);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    private mergeFilterConditions(conditions: any) {\r\n        const _conditions = Object.assign(this.dg.conditions || {}, conditions || {});\r\n        Object.keys(_conditions).forEach(n => {\r\n            if (_conditions[n] === null) {\r\n                delete _conditions[n];\r\n            }\r\n        });\r\n\r\n        return _conditions;\r\n    }\r\n}\r\n\r\n","import { Directive, Input, NgZone, ElementRef, Renderer2, AfterViewInit, OnDestroy, Optional, HostListener } from '@angular/core';\r\nimport { DataColumn } from '../../types/data-column';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { DatagridHeaderComponent } from './datagrid-header.component';\r\nimport { fromEvent } from 'rxjs';\r\nimport { buffer, debounceTime, map, filter, takeUntil } from 'rxjs/operators';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-10 09:04:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-20 17:09:09\r\n * @QQ: 1055818239\r\n * @Version: v0.0.12\r\n */\r\n@Directive({\r\n    selector: '[resize-column]',\r\n})\r\nexport class DatagridResizeColumnDirective implements AfterViewInit, OnDestroy {\r\n    @Input('resize-column') col: DataColumn;\r\n    resizer: HTMLSpanElement;\r\n    resizerMouseDownListener: any;\r\n    documentMouseMoveListener: any;\r\n    documentMouseUpListener: any;\r\n    dblclickListener: any;\r\n    private dg: DatagridComponent;\r\n    constructor(\r\n        @Optional() public dh: DatagridHeaderComponent,\r\n        public ngzone: NgZone, public el: ElementRef, public render: Renderer2\r\n    ) {\r\n        this.dg = this.dh.dg;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.isEnable()) {\r\n            this.render.addClass(this.el.nativeElement, 'f-datagrid-header-cell-resize');\r\n\r\n            this.resizer = document.createElement('span');\r\n            this.resizer.className = 'column-resize-bar';\r\n            this.el.nativeElement.appendChild(this.resizer);\r\n\r\n            this.ngzone.runOutsideAngular(() => {\r\n                // this.resizerMouseDownListener = this.onMouseDown.bind(this);\r\n                // this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\r\n                const mouseUp$ = fromEvent(this.resizer, 'mouseup');\r\n                this.resizerMouseDownListener = fromEvent(this.resizer, 'mousedown').pipe(\r\n                    // debounceTime(260),\r\n                    takeUntil(mouseUp$)\r\n                ).subscribe((e: any) =>\r\n                    this.onMouseDown(e)\r\n                );\r\n            });\r\n\r\n            // const mouse$ = fromEvent(this.resizer, 'click');\r\n            // const buff$ = mouse$.pipe(\r\n            //     debounceTime(250)\r\n            // );\r\n\r\n            // const click$ = mouse$.pipe(\r\n            //     buffer(buff$),\r\n            //     map(list => {\r\n            //         return {event: list[0], count: list.length};\r\n            //     }),\r\n            //     filter(x => x.count === 2),\r\n            //     map(x => x.event),\r\n            //     takeUntil(mouseUp$)\r\n            // );\r\n\r\n            // click$.subscribe((e) => {\r\n            //     this.onDblClickHandler(e);\r\n            //     // this.onMouseUp(e);\r\n            // });\r\n        }\r\n    }\r\n\r\n    @HostListener('dblclick', ['$event'])\r\n    onDblClickHandler($event) {\r\n\r\n        if ($event && $event.target && $event.target.className.indexOf('f-datagrid-sort') > -1) {\r\n            return;\r\n        }\r\n\r\n        if (this.col.field && this.col.field !== this.dg.ControlPanelFeild) {\r\n            const thRef = this.el;\r\n            this.dg.sizeToContent(this.col, thRef);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private isEnable() {\r\n        if (this.dg.resizeColumn) {\r\n\r\n            if ( this.col.field === this.dg.ControlPanelFeild) {\r\n                this.col.resizable = false;\r\n            }\r\n\r\n            if (this.col.resizable === undefined) {\r\n                this.col.resizable = true;\r\n            }\r\n\r\n            return this.col.resizable;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    bindDocumentEvents() {\r\n        this.ngzone.runOutsideAngular(() => {\r\n            this.documentMouseMoveListener = this.onMouseMove.bind(this);\r\n            document.addEventListener('mousemove', this.documentMouseMoveListener);\r\n\r\n            this.documentMouseUpListener = this.onMouseUp.bind(this);\r\n            document.addEventListener('mouseup', this.documentMouseUpListener);\r\n        });\r\n    }\r\n\r\n    unbindDocumentEvents() {\r\n        if (this.documentMouseMoveListener) {\r\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\r\n            this.documentMouseMoveListener = null;\r\n        }\r\n\r\n        if (this.documentMouseUpListener) {\r\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\r\n            this.documentMouseUpListener = null;\r\n        }\r\n    }\r\n\r\n    onMouseDown(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        this.dg.onColumnResizeBegin(event);\r\n        this.render.addClass(this.el.nativeElement, 'column-resizeing');\r\n        this.bindDocumentEvents();\r\n    }\r\n\r\n    onMouseMove(event: MouseEvent) {\r\n        this.dg.onColumnResize(event);\r\n    }\r\n\r\n    onMouseUp(event: MouseEvent) {\r\n        this.dg.onColumnResizeEnd(event, this.col);\r\n        this.render.removeClass(this.el.nativeElement, 'column-resizeing');\r\n        this.unbindDocumentEvents();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.resizerMouseDownListener) {\r\n            // this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\r\n            this.resizerMouseDownListener.unsubscribe();\r\n        }\r\n\r\n        this.unbindDocumentEvents();\r\n\r\n        if (this.dblclickListener) {\r\n            this.dblclickListener();\r\n        }\r\n\r\n        this.resizer = null;\r\n    }\r\n}\r\n","import { takeUntil } from 'rxjs/operators';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 15:01:21\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-09 15:24:45\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, ElementRef, Renderer2, ViewChild, OnDestroy, Injector, Inject, forwardRef, OnChanges, SimpleChanges, ChangeDetectorRef } from '@angular/core';\r\nimport { DatagridService } from '../../services/datagrid.service';\r\nimport { FIXED_LEFT_SHADOW_CLS, FIXED_RIGHT_SHADOW_CLS, SCROLL_X_ACTION, SCROLL_X_REACH_END_ACTION, SCROLL_X_REACH_START_ACTION } from '../../types/constant';\r\nimport { Subscription, Subject } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'datagrid-footer',\r\n    templateUrl: './datagrid-footer.component.html'\r\n})\r\nexport class DatagridFooterComponent implements OnInit, OnChanges, OnDestroy {\r\n    private _footerData = [];\r\n    @Input() get data() {\r\n        return this._footerData;\r\n    }\r\n    set data(val: any[]) {\r\n        this._footerData = val;\r\n    }\r\n\r\n    @Input() height: number;\r\n    @Input() width: number;\r\n    @Input() columns: any[];\r\n    @Input() columnsGroup: any;\r\n\r\n    /** æ¾ç¤ºä½ç½®ï¼é»è®¤ä¸º åºé¨ */\r\n    @Input() position: 'top' | 'bottom' = 'bottom';\r\n    /** æ¯å¦æå·¦ä¾§åºå®å */\r\n    @Input() hasFixedColumns = false;\r\n    @Input() fast = false;\r\n\r\n    @ViewChild('footerContainer') footerContainer: ElementRef;\r\n    @ViewChild('footerBody') footerBody: ElementRef;\r\n    @ViewChild('footerBody2') footerBody2: ElementRef;\r\n    @ViewChild('fixedLeft') fixedLeft: ElementRef;\r\n    private fixedRight: ElementRef;\r\n    @ViewChild('fixedRight') set fr(val) {\r\n        if (val) {\r\n            this.fixedRight = val;\r\n        }\r\n    }\r\n    scrollXSubscription: Subscription;\r\n\r\n    private dgs: DatagridService;\r\n    private scrollX = 0;\r\n    private showShadowCls = false;\r\n    rightFixedColumnWidth = 0;\r\n    private cdRef: ChangeDetectorRef = null;\r\n    private destroy$ = new Subject();\r\n    constructor(\r\n        private render: Renderer2, private injector: Injector,\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent\r\n    ) {\r\n        this.dg = this.injector.get(DatagridComponent);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.cdRef = this.injector.get(ChangeDetectorRef);\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.scrollEvents();\r\n        this.renderFooterStyle();\r\n        this.setFooterPosition(false);\r\n\r\n        this.rightFixedColumnWidth = this.getRightFixedColWidth();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.position) {\r\n            this.setFooterPosition(true);\r\n        }\r\n\r\n        if (changes.columnsGroup && !changes.columnsGroup.isFirstChange()) {\r\n            this.rightFixedColumnWidth = this.getRightFixedColWidth();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n\r\n        if (this.scrollXSubscription) {\r\n            this.scrollXSubscription.unsubscribe();\r\n            this.scrollXSubscription = null;\r\n        }\r\n    }\r\n\r\n    private scrollEvents() {\r\n        this.dgs.showGridHeader.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(hh => {\r\n            this.setFooterPosition(false);\r\n        });\r\n\r\n        this.scrollXSubscription = this.dgs.scorll$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((d: any) => {\r\n            this.scrollX = d.x;\r\n\r\n            if (this.fast) {\r\n                if (d.type === SCROLL_X_ACTION && this.footerBody2) {\r\n                    this.footerBody2.nativeElement.scrollLeft = d.x;\r\n                }\r\n            } else  {\r\n                if (d.type === SCROLL_X_ACTION || d.type === SCROLL_X_REACH_END_ACTION || d.type === SCROLL_X_REACH_START_ACTION) {\r\n                    if (!this.dg.footerTemplate) {\r\n                        this.render.setStyle(this.footerBody.nativeElement,  'transform', `translate3d(-${d.x}px, 0px, 0px)` );\r\n\r\n                        if (this.fixedLeft) {\r\n                            if (d.x) {\r\n                                this.render.addClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                            } else {\r\n                                this.render.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (d.type === SCROLL_X_REACH_START_ACTION) {\r\n                    if (this.fixedLeft) {\r\n                        this.render.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        if (!this.fast) {\r\n\r\n            this.dgs.showFixedShadow.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).subscribe((e: any) => {\r\n                if (this.fixedRight) {\r\n                    this.setFixedColumnPosition(e.showRightShadow, e.x);\r\n                }\r\n            });\r\n\r\n\r\n            this.dgs.scrollbarUpdate.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).subscribe((ps: any) => {\r\n                // const rw = ps.rightWidth || 0;\r\n                // if (!rw) {\r\n                //     this.rightFixedColumnWidth = this.getRightFixedColWidth(ps.scrollbarRef);\r\n                // } else {\r\n                //     this.rightFixedColumnWidth = rw;\r\n                // }\r\n                this.rightFixedColumnWidth = this.getRightFixedColWidth(ps.scrollbarRef);\r\n                if (this.fixedRight) {\r\n                    this.setFixedColumnPosition(ps.showRightShadow, 0);\r\n                }\r\n                if (this.cdRef) {\r\n                    this.cdRef.detectChanges();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private getRightFixedColWidth(ps = null) {\r\n        if (!this.columnsGroup) {\r\n            return 0;\r\n        }\r\n\r\n        let w = this.columnsGroup.rightFixedWidth;\r\n        ps = this.dg.scrollInstance? this.dg.scrollInstance.instance : null;\r\n\r\n        if (ps && ps.scrollbarYActive && this.dg.scrollBarShowMode === 'allways') {\r\n            return w += 18;\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private setFooterPosition(emit = true) {\r\n        if (this.position === 'bottom') {\r\n            let positionBottom = 0;\r\n            if (this.dg.pagination) {\r\n                positionBottom = this.dg.pagerHeight || 40;\r\n            }\r\n            this.render.removeStyle(this.footerContainer.nativeElement, 'top');\r\n            this.render.setStyle(this.footerContainer.nativeElement, 'bottom', `${positionBottom}px`);\r\n        }\r\n        if (this.position === 'top') {\r\n            let positionTop = 0;\r\n            if (this.dg.showHeader) {\r\n                positionTop = this.dg.realHeaderHeight || 35;\r\n            }\r\n\r\n            if (this.dg.showRowGroupPanel) {\r\n                positionTop += this.dg.rowGroupPanelHeight;\r\n            }\r\n\r\n            if (this.dg.showFilterBar) {\r\n                positionTop += this.dg.filterBarHeight;\r\n            }\r\n\r\n            this.render.removeStyle(this.footerContainer.nativeElement, 'bottom');\r\n            this.render.setStyle(this.footerContainer.nativeElement, 'top', `${positionTop}px`);\r\n        }\r\n        if (emit) {\r\n            this.dgs.footerPositionChanged.emit();\r\n        }\r\n    }\r\n\r\n    private renderFooterStyle() {\r\n        if (this.dg.footerStyler) {\r\n\r\n            const trStyleAndCls = this.dgs.getCustomStyle(this.dg.footerStyler, null);\r\n\r\n            const cssRuleID = `${this.dg.customStyleKey()} .f-datagrid-footer`;\r\n            const cssRuleId2 = `${this.dg.customStyleKey()} .f-datagrid-footer .f-datagrid-body-fixed-left,${this.dg.customStyleKey()} .f-datagrid-footer .f-datagrid-body-fixed-right`;\r\n            const cssRuleId3 = `${this.dg.customStyleKey()}.f-datagrid-fast .f-datagrid-cell.f-datagrid-fast__fixed-left,${this.dg.customStyleKey()}.f-datagrid-fast .f-datagrid-cell.f-datagrid-fast__fixed-right`;\r\n\r\n            if (trStyleAndCls && Object.keys(trStyleAndCls).length) {\r\n                const cssRule = [];\r\n                if (trStyleAndCls.style) {\r\n                    cssRule.push(`${cssRuleID} ${JSON.stringify(trStyleAndCls.style)}`);\r\n                    cssRule.push(`${cssRuleId2} ${JSON.stringify(trStyleAndCls.style)}`);\r\n\r\n                    if (this.fast) {\r\n                        cssRule.push(`${cssRuleId3} ${JSON.stringify(trStyleAndCls.style)}`);\r\n                    }\r\n                }\r\n\r\n                this.dgs.appendCssRules(cssRule);\r\n\r\n                // this.dg.renderCustomStyle(trStyleAndCls, this.footerContainer.nativeElement, cssRule);\r\n            } else {\r\n                this.dgs.removeCssRule([cssRuleID, cssRuleId2]);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setFixedColumnPosition(isShow, scrollLeft) {\r\n        this.showShadowCls = isShow;\r\n        const method = isShow ? 'addClass' : 'removeClass';\r\n        this.render[method](this.fixedRight.nativeElement, FIXED_RIGHT_SHADOW_CLS);\r\n\r\n        const realWidth = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth + this.rightFixedColumnWidth;\r\n        const gridWidth = this.dg.width;\r\n        let l = this.dg.width - (this.dg.showBorder ? 2 : 0) - this.rightFixedColumnWidth;\r\n        if (gridWidth > realWidth) {\r\n            l = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth;\r\n            // if (this.dg.showBorder) {\r\n            //     l-= 2;\r\n            // }\r\n        }\r\n\r\n        this.render.setStyle(this.fixedRight.nativeElement, 'left', l + 'px');\r\n    }\r\n}\r\n","import { Subscription } from 'rxjs';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { ChangeDetectorRef, Injector, Optional, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-17 20:20:21\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, Output, EventEmitter, ElementRef, AfterViewInit, ViewChild, HostBinding } from '@angular/core';\r\nimport { PaginationControlsComponent, PaginationControlsDirective } from '@farris/ui-pagination';\r\nimport { OverLayHiddenService } from '@farris/ui-common';\r\n\r\n@Component({\r\n    selector: 'datagrid-pager',\r\n    templateUrl: './page.component.html'\r\n})\r\nexport class DatagridPagerComponent implements OnInit, AfterViewInit, OnChanges {\r\n    @Input() pagerPos = 'right';\r\n    @Input() id = 'farris-datagrid-pager';\r\n    /** æ¾ç¤ºé¡µç çæ°é */\r\n    @Input() maxSize = 7;\r\n    /** æ¯å¦æ¾ç¤ºé¡µç  */\r\n    @Input() directionLinks = true;\r\n\r\n    @Input() autoHide = false;\r\n\r\n    @Input() responsive = false;\r\n    /** ä¸é¡µæ ç­¾ */\r\n    @Input() previousLabel = 'ä¸é¡µ';\r\n    /** ä¸é¡µæ ç­¾ */\r\n    @Input() nextLabel = 'ä¸é¡µ';\r\n    @Input() showPageList = false;\r\n    @Input() showPageInfo = true;\r\n    @Input() showPageNumber = true;\r\n    @Input() locked = false;\r\n\r\n    @Input() selectedData = [];\r\n    @Input() viewMode: 'default' | 'simple' = 'default';\r\n    @Input() listItemFormatter: (data) => string;\r\n\r\n    @Input() showSelectedList = false;\r\n\r\n    @Input() showGotoInput = false;\r\n\r\n    /** åé¡µæ¡èªå®ä¹åå®¹åºæ¨¡æ¿ */\r\n    @Input() contentTemplate: TemplateRef<any> = null;\r\n    @Input() data = null;\r\n\r\n    @Output() pageChange = new EventEmitter();\r\n    @Output() pageSizeChange = new EventEmitter();\r\n\r\n    @Output() removeSelectedItem = new EventEmitter();\r\n    @Output() clearSelectedItem = new EventEmitter();\r\n\r\n    @ViewChild('pagerContainer') pc: ElementRef;\r\n    @ViewChild('pager') pager: PaginationControlsComponent;\r\n    @ViewChild('selectItemPanel') selectItemPanel: ElementRef;\r\n\r\n    get pagination(): PaginationControlsDirective {\r\n        return this.pager.paginationDirective;\r\n    }\r\n\r\n\r\n    get pageSize() {\r\n        return this.pagination.getPageSize();\r\n    }\r\n\r\n    get total() {\r\n        return this.pagination.getTotalItems();\r\n    }\r\n\r\n    get outerHeight() {\r\n        if (this.pc) {\r\n            return this.pc.nativeElement.offsetHeight;\r\n        }\r\n        return 40;\r\n    }\r\n    styles = { opacity: 1 };\r\n\r\n    mouseInSelectedList = false;\r\n    openSelectedList = false;\r\n\r\n    private selectionDataChange$: Subscription = null;\r\n\r\n    private notifySer: NotifyService;\r\n    private overLayService: OverLayHiddenService = null;\r\n    constructor(public el: ElementRef, private cd: ChangeDetectorRef, @Optional() private inject: Injector) {\r\n        if (this.inject) {\r\n            this.notifySer = this.inject.get<NotifyService>(NotifyService, null);\r\n        }\r\n\r\n        this.overLayService = new OverLayHiddenService();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.listenCheckDataChanged();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.lockedStyles();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.selectedData && !changes.selectedData.isFirstChange()) {\r\n            if (!this.selectedData || !this.selectedData.length) {\r\n                this.closeSelectedList();\r\n            }\r\n        }\r\n\r\n        if (changes.showSelectedList && !changes.showSelectedList.isFirstChange()) {\r\n            this.listenCheckDataChanged();\r\n        }\r\n\r\n        if (changes.locked && !changes.locked.isFirstChange()) {\r\n            this.lockedStyles();\r\n        }\r\n    }\r\n\r\n    private listenCheckDataChanged() {\r\n        if (this.showSelectedList) {\r\n            const dg = this.inject.get(DatagridComponent, null);\r\n            if (dg) {\r\n                this.selectionDataChange$ = dg.checkedChange.subscribe((data: any) => {\r\n                    this.selectedData = data;\r\n                    if (!this.cd['destroyed']) {\r\n                        this.cd.detectChanges();\r\n                    }\r\n                });\r\n\r\n                this['resized$'] = dg.resized.subscribe(() => {\r\n                    this.closeSelectedList();\r\n                })\r\n            }\r\n        } else {\r\n            if (this.selectionDataChange$) {\r\n                this.selectionDataChange$.unsubscribe();\r\n                this.selectionDataChange$ = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    onPageChange(pageIndex: any) {\r\n        if (typeof pageIndex === 'object') {\r\n            pageIndex = pageIndex.pageIndex || 1;\r\n        }\r\n        this.pageChange.emit(Number.parseInt(pageIndex, 10));\r\n    }\r\n\r\n    onPageSizeChange(pageSize: any) {\r\n        this.pageSizeChange.emit(Number.parseInt(pageSize, 10));\r\n    }\r\n\r\n    lock() {\r\n        this.locked = true;\r\n        this.lockedStyles();\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n        this.lockedStyles();\r\n    }\r\n\r\n    private lockedStyles() {\r\n        this.styles = { opacity: this.locked? 0.5 : 1 };\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    onMouseEnter($event) {\r\n        $event.stopPropagation();\r\n\r\n        if (this.locked) {\r\n            return;\r\n        }\r\n        this.mouseInSelectedList = true;\r\n        if (this.selectedData && this.selectedData.length) {\r\n            this.openSelectedList = !this.openSelectedList;\r\n        } else {\r\n            this.openSelectedList = false;\r\n        }\r\n\r\n        let target = $event.target;\r\n        if (!target.classList.contains('selected-list-badge')) {\r\n            target = $event.target.closest('.selected-list-badge');\r\n        }\r\n\r\n\r\n        if (this.openSelectedList) {\r\n\r\n            const selectedListContainer = this.el.nativeElement.querySelector('.pager-overlay-container');\r\n            const isInModal = target.closest('.modal-dialog');\r\n\r\n            let { top, left } = target.getBoundingClientRect();\r\n            if (selectedListContainer) {\r\n                if (isInModal) {\r\n                    const { top: mtop, left: mleft } = isInModal.getBoundingClientRect();\r\n                    top = top - mtop;\r\n                    left = left - mleft;\r\n                }\r\n\r\n                selectedListContainer.style.top = `${top}px`;\r\n                selectedListContainer.style.left = `${left - 10}px`;\r\n            }\r\n\r\n            this.overLayService.registerMouseEvent(this.selectItemPanel.nativeElement, (e) => {\r\n                if (this.selectItemPanel.nativeElement.contains(e.target) || e.target.classList.contains('selected-list-badge') || e.target.closest('.selected-list-badge')) {\r\n                    return;\r\n                }\r\n\r\n                this.closeSelectedList();\r\n                this.overLayService.destory(this.selectItemPanel.nativeElement);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    closeSelectedList() {\r\n        this.openSelectedList = false;\r\n        this.mouseInSelectedList = false;\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    onDelSelectedItem(id: any) {\r\n        this.removeSelectedItem.emit(id);\r\n    }\r\n\r\n    onClearSelected($event) {\r\n        this.clearSelectedItem.emit();\r\n        this.closeSelectedList();\r\n    }\r\n\r\n    onSelectListPanelClose($event) {\r\n        this.closeSelectedList();\r\n    }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\nconst loading_style_ring =\r\n`<svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n  <circle cx=\"50\" cy=\"50\" fill=\"none\" r=\"30\" stroke=\"#2c7dff\" stroke-width=\"10\"></circle>\r\n  <circle cx=\"50\" cy=\"50\" fill=\"none\" r=\"30\" stroke=\"#d0eaff\" stroke-width=\"10\" stroke-linecap=\"square\" transform=\"rotate(178.821 50 50)\">\r\n      <animateTransform attributeName=\"transform\" type=\"rotate\"\r\n          calcMode=\"linear\" values=\"0 50 50;180 50 50;720 50 50\" keyTimes=\"0;0.5;1\" dur=\"1.6s\" begin=\"0s\"\r\n          repeatCount=\"indefinite\"></animateTransform>\r\n      <animate attributeName=\"stroke-dasharray\" calcMode=\"linear\"\r\n          values=\"9.42477796076938 179.0707812546182;150.79644737231007 37.6991118430775;9.42477796076938 179.0707812546182\"\r\n          keyTimes=\"0;0.5;1\" dur=\"1.6\" begin=\"0s\" repeatCount=\"indefinite\"></animate>\r\n  </circle>\r\n</svg>`;\r\n\r\n@Component({\r\n    selector: 'datagrid-loading',\r\n    template: `\r\n    <div style=\"width:100%;height:100%;position:absolute;top:0;left: 0;background:rgba(255,255,255,0);z-index: 90000000;pointer-events: unset;\">\r\n        <div style=\"width: 50px;height: 50px;position: relative;top: 50%;margin-top: -25px;left: 50%;margin-left: -25px;\"\r\n        [innerHTML]=\"loading\" >\r\n        </div>\r\n    </div>\r\n    `\r\n})\r\nexport class DataGridLoadingComponent implements OnInit {\r\n\r\n    @Input() loading: any;\r\n\r\n    constructor(private domSanitizer: DomSanitizer) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.loading) {\r\n            this.loading = this.domSanitizer.bypassSecurityTrustHtml(this.loading);\r\n        } else {\r\n            this.loading = this.domSanitizer.bypassSecurityTrustHtml(loading_style_ring);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { debounce } from 'rxjs/operators';\r\nimport { Component, OnInit, EventEmitter, Output, Input, OnChanges, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\r\nimport { interval } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'pager-selected-list',\r\n    templateUrl: './selected-list.component.html',\r\n})\r\nexport class PagerSelectedListComponent implements OnInit, OnChanges {\r\n\r\n    @Input() data = [];\r\n\r\n    @Output() close = new EventEmitter();\r\n    @Output() remove = new EventEmitter();\r\n    @Output() clear = new EventEmitter();\r\n\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    onClose($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        this.close.emit();\r\n    }\r\n\r\n    onRemoveClick($event: MouseEvent, id: any) {\r\n        $event.stopPropagation();\r\n        this.remove.emit(id);\r\n    }\r\n\r\n    onClearClick($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        this.clear.emit();\r\n    }\r\n\r\n    onClick($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        return false;\r\n    }\r\n\r\n    trackByFn = (index, item) => {\r\n        return item.id;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'selectedItem'})\r\nexport class SelectedItemPipe implements PipeTransform {\r\n    transform(data: any, formatter: any): any {\r\n        if (data) {\r\n            if (formatter) {\r\n                data = data.map( d => {\r\n                    return {id: d.id, text:  formatter(d.data) };\r\n                });\r\n            } else  {\r\n                data = data.map(d => {\r\n                    const txt = [];\r\n                    const keys = Object.keys(d.data);\r\n                    keys.forEach(k => {\r\n                        txt.push(d.data[k]);\r\n                    });\r\n                    return {id: d.id, text: txt.join(', ') };\r\n                });\r\n            }\r\n\r\n            return data;\r\n        }\r\n    }\r\n}\r\n","import { ErrorHandler, Injector } from '@angular/core';\r\n\r\nexport class DatagridErrorHandler implements ErrorHandler {\r\n    handleError(error: any): void {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport class Éµs implements ErrorHandler {\r\n    handleError(error: any): void {\r\n        console.error(error);\r\n    }\r\n}\r\n","import { Subject, Subscription } from 'rxjs';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-30 16:08:56\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { Component, OnInit, Input, ViewChild, ElementRef, Injector, Inject, forwardRef, ChangeDetectorRef, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { DatagridFacadeService } from './../../services/datagrid-facade.service';\r\nimport { filter, map, takeUntil } from 'rxjs/operators';\r\nimport { IS_GROUP_ROW_FIELD } from '../../services/state';\r\n\r\n@Component({\r\n    selector: 'datagrid-checkbox',\r\n    template: ` <div class=\"custom-control custom-checkbox f-checkradio-single\">\r\n        <input type=\"checkbox\" #chk class=\"custom-control-input\" [disabled]=\"disabled\" [checked]=\"checked\">\r\n        <label class=\"custom-control-label\" (click)=\"handleClick($event)\"></label>\r\n    </div>`,\r\n    styles: [\r\n        `\r\n        :host {\r\n            vertical-align: middle;\r\n        }\r\n        :host .custom-checkbox {\r\n            opacity: 1;\r\n            float: none;\r\n            top: 2px;\r\n        }\r\n        `\r\n    ]\r\n})\r\nexport class DatagridCheckboxComponent implements OnInit, OnDestroy, OnChanges {\r\n    @Input() rowData: any;\r\n    @Input() rowIndex: any;\r\n    @Input() checked: boolean;\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() indeterminate = false;\r\n    @ViewChild('chk') chk: ElementRef;\r\n\r\n    private dfs: DatagridFacadeService;\r\n    private cd: ChangeDetectorRef;\r\n\r\n    checked$ = null;\r\n    private destroy$ = new Subject();\r\n    subscriptions: Subscription[] = [];\r\n    constructor(private injector: Injector, @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.indeterminate) {\r\n            this.chk.nativeElement.indeterminate = true;\r\n        }\r\n        this.listenSubjects();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.checked && !changes.checked.isFirstChange()) {\r\n            this.changeCheckedStatus(changes.checked.currentValue);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach(n => n.unsubscribe());\r\n            this.subscriptions = [];\r\n        }\r\n    }\r\n\r\n    private listenSubjects() {\r\n\r\n        const rid = this.dfs.primaryId(this.rowData);\r\n\r\n        this.subscriptions.push(\r\n            this.dg.checkAll.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).subscribe(() => {\r\n               \r\n                let flag = true;\r\n\r\n                if (this.dg.disableRow) {\r\n                    flag = !this.dg.disableRow(this.rowData, this.rowIndex);\r\n                    if (!flag) {\r\n                        flag = this.dg.dfs.isRowChecked(rid);\r\n                    }\r\n                }\r\n                this.changeCheckedStatus(flag);\r\n            })\r\n        );\r\n\r\n        this.subscriptions.push(\r\n            this.dg.unCheckAll.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).subscribe((e: any) => {\r\n                if (e && e.length) {\r\n                    if (e.find(n => n[this.dg.idField] === this.rowData[this.dg.idField])) {\r\n                        this.changeCheckedStatus(false);\r\n                    }\r\n                } else {\r\n                    this.changeCheckedStatus(false);\r\n                }\r\n            })\r\n        );\r\n\r\n        const _setcheckrows = this.dg.dgs.setCheckedRows.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).pipe(\r\n            filter((r: any) => {\r\n                return r.ids.includes(rid) || r.ids.includes('' + rid);\r\n            }),\r\n            map((r: any) => {\r\n                const flag = r.ids.includes(rid) || r.ids.includes('' + rid);\r\n                if (flag) {\r\n                    return flag && r.checked;\r\n                }\r\n                return false;\r\n            }),\r\n        ).subscribe(r => {\r\n            this.checked = r;\r\n            this.changeCheckedStatus(r);\r\n        });\r\n        this.subscriptions.push(_setcheckrows);\r\n\r\n        this.dfs.updateCheckboxState$.pipe(\r\n            takeUntil(this.destroy$),\r\n        ).pipe(\r\n            filter((r: any) => {\r\n                return r.id === rid;\r\n            }),\r\n            map((r: any) => {\r\n                return !!r.checked;\r\n            })\r\n        ).subscribe((r: any) => {\r\n            this.checked = r;\r\n            this.changeCheckedStatus(r);\r\n        });\r\n    }\r\n\r\n    handleClick(event: MouseEvent) {\r\n        if (!this.disabled) {\r\n            const beforEventParam = {\r\n                rowIndex: this.rowIndex,\r\n                rowData: this.rowData,\r\n                gridInstance: this.dg\r\n            };\r\n            this.dg.endCellEdit();\r\n            const _checked = this.chk.nativeElement.checked;\r\n            if (!_checked) {\r\n                this.dg.beforeCheck(beforEventParam).subscribe((canCheck: boolean) => {\r\n                    if (canCheck) {\r\n                        this.dfs.checkRow(this.rowIndex, this.rowData, { instance: this.dg});\r\n                        this.checked = true;\r\n                        this.changeCheckedStatus(true);\r\n                    }\r\n                });\r\n            } else {\r\n                this.dg.beforeUncheck(beforEventParam).subscribe((canUncheck: boolean) => {\r\n                    if (canUncheck) {\r\n                        this.dfs.unCheckRow(this.rowIndex, this.rowData, { instance: this.dg});\r\n                        this.checked = false;\r\n                        this.changeCheckedStatus(false);\r\n                        if (this.dg.showSelectedList) {\r\n                            this.dg.cd.detectChanges();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            // this.checked = !this.checked;\r\n            // this.cd.detectChanges();\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    private changeCheckedStatus(status: boolean) {\r\n        this.chk.nativeElement.checked = status;\r\n    }\r\n\r\n}\r\n","import { takeUntil } from 'rxjs/operators';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-09-18 10:30:21\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, ViewChild, ElementRef, Injector, OnDestroy } from '@angular/core';\r\nimport { DatagridFacadeService } from './../../services/datagrid-facade.service';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'datagrid-header-checkbox',\r\n    template: ` <div class=\"custom-control custom-checkbox f-checkradio-single\">\r\n        <input type=\"checkbox\" #chk class=\"custom-control-input\" [disabled]=\"disabled\" [checked]=\"checked\">\r\n        <label class=\"custom-control-label\" (click)=\"handleClick($event)\"></label>\r\n    </div>`,\r\n    styles: [\r\n        `\r\n        :host {\r\n            vertical-align: middle;\r\n        }\r\n        :host .custom-checkbox {\r\n            opacity: 1;\r\n            float: none;\r\n            top: 4px;\r\n        }\r\n        `\r\n    ]\r\n})\r\nexport class DatagridHeaderCheckboxComponent implements OnInit, OnDestroy {\r\n    @Input() checked: boolean;\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() indeterminate = false;\r\n\r\n    @ViewChild('chk') chk: ElementRef;\r\n    private dfs: DatagridFacadeService;\r\n    private dg: DatagridComponent;\r\n    private destroy$ = new Subject();\r\n    constructor(private injector: Injector) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dg = this.injector.get(DatagridComponent);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.indeterminate) {\r\n            this.chk.nativeElement.indeterminate = true;\r\n        }\r\n\r\n        this.dg.dgs.changeCheckAllStatus.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((status: number) => {\r\n            if (status === 2) {\r\n                this.chk.nativeElement.indeterminate = true;\r\n            } else {\r\n                this.chk.nativeElement.indeterminate = false;\r\n                this.updateStatus(!!status);\r\n            }\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    updateStatus(checked: boolean) {\r\n        this.checked = checked;\r\n        this.chk.nativeElement.checked = checked;\r\n    }\r\n\r\n\r\n    handleClick(event: MouseEvent) {\r\n        if (!this.dg.data || !this.dg.data.length) {\r\n            return;\r\n        }\r\n\r\n        if (!this.disabled) {\r\n            this.checked = !this.checked;\r\n\r\n            this.indeterminate = false;\r\n            this.chk.nativeElement.indeterminate = false;\r\n            if (this.checked) {\r\n                this.dfs.checkAll();\r\n                this.chk.nativeElement.checked = true;\r\n                // this.dg.checkAll.emit();\r\n            } else {\r\n                this.dfs.clearCheckeds(!this.dg.enableMorePageSelect);\r\n\r\n                if (this.dg.selectedRow && this.dg.checkOnSelect && this.dg.selectOnCheck) {\r\n                    this.dg.unSelectRow(this.dg.selectedRow.id);\r\n                }\r\n                this.chk.nativeElement.checked = false;\r\n                // this.dg.unCheckAll.emit();\r\n            }\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TR_PREFIX } from './../types/constant';\r\nimport { DatagridFacadeService } from '../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'rowDataId'})\r\nexport class RowDataIdPipe implements PipeTransform {\r\n\r\n    constructor(private dfs: DatagridFacadeService) {}\r\n\r\n    transform(rowData: any, fixedRight = false, fixedLeft = false, isGroupRow = false): any {\r\n        if (rowData) {\r\n            let rowID = TR_PREFIX + this.dfs.primaryId(rowData);\r\n            if (fixedRight) {\r\n                rowID += '_fixedright';\r\n            } else if (fixedLeft) {\r\n                rowID += '_fixedleft';\r\n            }\r\n\r\n            if (isGroupRow) {\r\n                rowID += '_grouprow';\r\n            }\r\n\r\n            return rowID;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import { Optional, Pipe, PipeTransform } from '@angular/core';\r\nimport { DatagridFacadeService } from './../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'formatGroupRow'})\r\nexport class FormatGroupRowPipe implements PipeTransform {\r\n\r\n    constructor(@Optional() private dfs: DatagridFacadeService) {}\r\n\r\n\r\n    transform(row: any, col: any, fn?: any): any {\r\n        if (row) {\r\n            let val = row['value'];\r\n            if (!col && this.dfs) {\r\n                col = this.dfs.getColumn(row.field);\r\n            }\r\n\r\n            if (col && col.formatter) {\r\n                if (col.formatter.type === 'enum') {\r\n                    const enumOpts: {valueField: string, textField: string, data: any} = col.formatter.options;\r\n                    const { valueField, textField, data } = {...enumOpts};\r\n                    const enumItem = data.find(item => item[valueField] === row['value']);\r\n                    val = enumItem ? enumItem[textField] : '';\r\n                }\r\n            }\r\n\r\n            return fn ? fn(row) : val;\r\n        }\r\n\r\n        return '';\r\n    }\r\n}\r\n","import { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, ChangeDetectorRef, ElementRef, Injector, NgZone, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChanges, Renderer2 } from '@angular/core';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { DatagridService } from './../../services/datagrid.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport { ROW_INDEX_FIELD, IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD, GROUP_VISIBLE_FIELD, GROUP_LEVEL_FIELD } from '../../services/state';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\n\r\n\r\n@Component({\r\n    selector: 'fixed-left-rows',\r\n    templateUrl: 'fixed-left-rows.component.html'\r\n})\r\n\r\nexport class FixedLeftRowsComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() columns = [];\r\n    @Output() toggle = new EventEmitter();\r\n    @Input() checkedRows = [];\r\n    @Input() selectedRows = [];\r\n    @Input() data = [];\r\n\r\n    /** å¯ç¨åç»æ¶ï¼æ°æ®æºä¸­èªå¨è®¾ç½®è¡ç´¢å¼å­æ®µ */\r\n    groupRowIndex = ROW_INDEX_FIELD;\r\n    isGroupRow = IS_GROUP_ROW_FIELD;\r\n    groupRow = GROUP_ROW_FIELD;\r\n    isGroupFooter = IS_GROUP_FOOTER_ROW_FIELD;\r\n    visible = GROUP_VISIBLE_FIELD;\r\n    groupLevelField = GROUP_LEVEL_FIELD;\r\n\r\n    filterConditions = '';\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    dgs: DatagridService = null;\r\n    render2: Renderer2;\r\n    private destroy$ = new Subject();\r\n    constructor(\r\n        private cd: ChangeDetectorRef,\r\n        public dg: DatagridComponent,\r\n        public dgb: DatagridBodyComponent,\r\n        public dfs: DatagridFacadeService,\r\n        public el: ElementRef, private injector: Injector, private ngZone: NgZone) {\r\n            this.dgs = this.injector.get(DatagridService);\r\n            this.render2 = this.injector.get(Renderer2);\r\n        }\r\n\r\n    private listenSubject() {\r\n        // const _selectrow = this.dfs.selectRow$.subscribe(() => {\r\n        //     this.detectChanges();\r\n        // });\r\n        // this.subscriptions.push(_selectrow);\r\n\r\n        // const _unselectrow = this.dfs.unSelectRow$.subscribe(() => {\r\n        //     this.detectChanges();\r\n        // });\r\n        // this.subscriptions.push(_unselectrow);\r\n\r\n        const _setselectrow = this.dgs.setSelecedRow.pipe(\r\n            takeUntil(this.destroy$)\r\n        )\r\n        .subscribe((r: any) => {\r\n            this.detectChanges();\r\n        });\r\n        this.subscriptions.push(_setselectrow);\r\n\r\n        this.dfs.checkRow$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe( () => {\r\n            this.checkedRows = this.dfs.getCheckeds();\r\n            this.detectChanges();\r\n        });\r\n\r\n        this.dfs.clearCheckeds$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe( () => {\r\n            this.checkedRows = this.dfs.getCheckeds();\r\n            this.detectChanges();\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.listenSubject();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach(n => n.unsubscribe());\r\n            this.subscriptions = [];\r\n        }\r\n    }\r\n\r\n    private detectChanges() {\r\n        if (!this.cd['destroyed']) {\r\n            // this.cd.markForCheck();\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    toggleGroupRow(row, index, open, $event?: MouseEvent) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        row.expanded = open;\r\n        this.dg.dfs.setGroupRowsVisible(row, open);\r\n    }\r\n\r\n    getGroupSummaryData(groupId: string) {\r\n        const _data = this.dg.getRows();\r\n        if (_data && _data.length) {\r\n            const row = this.dg.getRows().find(n =>  n['__group_parent_id__'] === groupId && n['__group_footer__']);\r\n            if (row) {\r\n                return row.data;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    getGroupColumn(field) {\r\n        return this.dg.flatColumns.find(col => col.field === field);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * ä½¿ç¨è¯´æ\r\n * let message = \"ä»å¤©å¤©æ° {0}ï¼å¤å¤å¥½ {1}ã\"\r\n * template:\r\n * <h1>{{ message| replaceX: 'æ´æ', 'é£å' }}</h1>\r\n * resule:\r\n * <h1>ä»å¤©å¤©æ° æ´æï¼å¤å¤å¥½ é£åã</h1>\r\n */\r\n@Pipe({name: 'replaceX'})\r\nexport class ReplaceXPipe implements PipeTransform {\r\n    transform(value: any, ...args: any[]) {\r\n        args.forEach((v, i) => {\r\n            value = value.replace(`{${i}}`, v);\r\n        });\r\n\r\n        return value;\r\n    }\r\n}\r\n","import { Directive, Input, Injector, Renderer2, ElementRef, OnInit } from '@angular/core';\r\nimport { CUSTOM_GROUP_ROW_CLS } from '../../types/constant';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\n\r\n@Directive({\r\n    selector: '[group-row]',\r\n})\r\nexport class DatagridGroupRowDirective implements OnInit {\r\n    @Input('group-row') groupRow;\r\n\r\n    constructor(private injector: Injector, private render: Renderer2, private el: ElementRef, private dg: DatagridComponent) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        setTimeout(() => {\r\n            if (this.dg && this.dg.groupStyler) {\r\n\r\n                const tr = this.el.nativeElement;\r\n                const _cls = Array.from(tr.classList).find((n: string) => n.indexOf(CUSTOM_GROUP_ROW_CLS) > -1);\r\n                if (_cls) {\r\n                    tr.classList.remove(_cls);\r\n                }\r\n\r\n                const styler = this.dg.groupStyler(this.groupRow);\r\n\r\n                if (!styler) {\r\n                    return;\r\n                }\r\n\r\n                if (!tr.id) {\r\n                    tr.id = 'group-tr_' + this.groupRow.id;\r\n                }\r\n\r\n                const str = CUSTOM_GROUP_ROW_CLS + this.dg.idService.encrypt(JSON.stringify(styler));\r\n               \r\n                this.render.addClass(tr, str);\r\n                this.dg.renderCustomStyle2(styler, tr, str);\r\n                // this.dg.renderCustomStyle(styler, tr);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'showStar'})\r\nexport class ShowRequiredStarPipe implements PipeTransform {\r\n    transform(validators: any): any {\r\n        if (validators && validators.length) {\r\n            const isRequired = validators.find(v => v.type === 'required');\r\n            return isRequired;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'disableRow'})\r\nexport class DisableRowPipe implements PipeTransform {\r\n    transform(rowData: any, rowIndex: number, disableRowFn: (row, index) => {}): any {\r\n        if (disableRowFn) {\r\n            return disableRowFn(rowData, rowIndex);\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatagridFacadeService } from './../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'selectedRow'})\r\nexport class SelectedRowPipe implements PipeTransform {\r\n    constructor(private dfs: DatagridFacadeService) {}\r\n    transform(rowId: any): any {\r\n        return this.dfs.isRowSelected(rowId);\r\n    }\r\n}\r\n","import { Utils } from './utils';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'fieldvalue'})\r\nexport class FieldValuePipe implements PipeTransform {\r\n    transform(field: any, rowdata: any, safe = false): any {\r\n        return Utils.getValue(field, rowdata, safe);\r\n    }\r\n}\r\n","import { DatagridComponent } from './../../datagrid.component';\r\nimport { Utils } from './../../utils/utils';\r\nimport { OnDestroy, Input, HostListener, ElementRef, Directive, Injector, OnInit, NgZone, Renderer2 } from '@angular/core';\r\nimport { CommonUtils } from '@farris/ui-common';\r\nimport { DomHandler } from '../../services/domhandler';\r\n\r\n@Directive({\r\n    selector: '[cell-tooltip]',\r\n    exportAs: 'cellTooltip'\r\n})\r\nexport class DatagridCellTooltipDirective implements OnInit, OnDestroy {\r\n    @Input('cell-tooltip') enable: boolean;\r\n    @Input() position: 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-center' | 'top-right' = 'top-left';\r\n    @Input() positionStyle: string;\r\n    @Input() tooltipStyleClass: string;\r\n    @Input() message: string;\r\n    @Input() delay = 1000;\r\n\r\n    @Input() cls = '';\r\n    @Input() type: 'danger' | 'success' | 'info' | 'warning' = 'info';\r\n    @Input() tipMode: 'allways' | 'auto' = 'auto';\r\n\r\n    // @HostBinding('style.width') cmpWidth = '100%';\r\n\r\n    container: any;\r\n    private commonUtils: CommonUtils;\r\n    private showTipTimer = null;\r\n\r\n\r\n    private _mouseenter = null;\r\n    private _mouseleave = null;\r\n    private _mouseclick = null;\r\n    private ngZone: NgZone = null;\r\n    private render: Renderer2 = null;\r\n    private dg: DatagridComponent;\r\n    constructor(private el: ElementRef, private injector: Injector) {\r\n        if (this.injector) {\r\n            this.commonUtils = this.injector.get(CommonUtils, new CommonUtils());\r\n            this.ngZone = this.injector.get(NgZone);\r\n            this.render = this.injector.get(Renderer2);\r\n\r\n            this.dg = this.injector.get(DatagridComponent);\r\n        } else {\r\n            this.commonUtils = new CommonUtils();\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        if (this.ngZone && this.enable) {\r\n            this.ngZone.runOutsideAngular(() => {\r\n                this._mouseenter = Utils.on(this.el.nativeElement, 'mouseenter', this.onMouseEnter.bind(this), { target: '.f-datagrid-cell-content', options: { capture: true }});\r\n                this._mouseleave = Utils.on(this.el.nativeElement, 'mouseleave', this.onMouseLeave.bind(this), { target: '.f-datagrid-cell-content', options: { capture: true }});\r\n                this._mouseclick = Utils.on(this.el.nativeElement, 'mousedown', this.onClick.bind(this));\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.hide();\r\n        if (this._mouseenter) {\r\n            this._mouseenter();\r\n        }\r\n\r\n        if (this._mouseleave) {\r\n            this._mouseleave();\r\n        }\r\n\r\n        if (this._mouseclick) {\r\n            this._mouseclick();\r\n        }\r\n\r\n        // this.dg = null;\r\n    }\r\n\r\n    onMouseEnter($event: any) {\r\n\r\n        if (!this.enable) {\r\n            return;\r\n        }\r\n\r\n\r\n        if ($event.fromElement) {\r\n            if (!$event.fromElement.closest('.f-datagrid')) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        const cellTiptimer = this.dg ? this.dg.cellTipTimer : 1000;\r\n\r\n        if (this.showTipTimer) {\r\n            clearTimeout(this.showTipTimer);\r\n            this.showTipTimer = null;\r\n        }\r\n        this.showTipTimer = setTimeout(() => {\r\n            this.show($event);\r\n        }, cellTiptimer);\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this.hide();\r\n    }\r\n\r\n    onClick(e: MouseEvent) {\r\n        // e.stopPropagation();\r\n        this.hide();\r\n    }\r\n\r\n    private getTextContainer() {\r\n        return DomHandler.findSingle(this.container, '.f-tooltip-text');\r\n    }\r\n\r\n    private donotShowTips(target: any) {\r\n        const tdWidth = target.offsetWidth;\r\n        const tagetSty =  window.getComputedStyle(target);\r\n        const txtWidth = this.commonUtils.getTextWidth(this.message, tagetSty.font);\r\n        const { paddingLeft, paddingRight } = tagetSty;\r\n        const _width = tdWidth - (Number(paddingLeft.replace('px', '')) || 0) - (Number(paddingRight.replace('px', '')) || 0);\r\n\r\n        let tr = target.closest('tr');\r\n        if (tr) {\r\n            const trId = tr.id;\r\n            // tr = document.querySelector('#'+ trId);\r\n            tr = Utils.getTrDomById(trId, document);\r\n        }\r\n\r\n        if (this.tipMode === 'auto') {\r\n            if (tr) {\r\n                return _width && _width > txtWidth;\r\n            }\r\n            return true;\r\n        } else {\r\n            return tr ? false : true;\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        if (!this.enable) {\r\n            return;\r\n        }\r\n\r\n        if (this.showTipTimer) {\r\n            clearTimeout(this.showTipTimer);\r\n            this.showTipTimer = null;\r\n        }\r\n\r\n        if (this.container && this.container.parentElement) {\r\n            document.body.removeChild(this.container);\r\n        }\r\n        this.container = null;\r\n    }\r\n\r\n    show($event: MouseEvent) {\r\n        const cellEl = $event.target as any;\r\n        // this.enable = cellEl.getAttribute('cell-tooltip') === 'true';\r\n        this.message = cellEl.getAttribute('message');\r\n        this.tipMode = cellEl.getAttribute('tipMode') || 'auto';\r\n\r\n        if (!this.enable || !this.message) {\r\n            return;\r\n        }\r\n\r\n        const tipWidth = cellEl.getAttribute('tipWidth');\r\n        const tipHeight = cellEl.getAttribute('tipHeight');\r\n        this.position = cellEl.getAttribute('position') || 'top-left';\r\n\r\n        // æ£æ¥ä¸åå®¹å®½åº¦æ¯å¦è¶åºåå®½\r\n        if (this.donotShowTips($event.target) && cellEl.innerText === this.message) {\r\n            return;\r\n        }\r\n\r\n        // const boxEl = this.el.nativeElement;\r\n        const boxEl = $event.target;\r\n        const elSize = this.getBoxSizeObj(boxEl);\r\n\r\n\r\n        /** å¦æå­å¨åä¸æ°å»ºï¼åªéè¦ä¿®æ¹éé¢çåå®¹ */\r\n        if (!this.container) {\r\n            this.create(elSize);\r\n        } else {\r\n            DomHandler.findSingle(this.container, '.f-tooltip-text').innerHTML = this.message;\r\n        }\r\n\r\n        this.container.style.maxWidth = `${window.innerWidth - 30}px`;\r\n        this.container.style.minWidth = '35px';\r\n\r\n        if (tipWidth) {\r\n            this.container.style.width = tipWidth;\r\n        }\r\n\r\n        if (tipHeight) {\r\n            this.container.style.height = tipHeight;\r\n        }\r\n\r\n\r\n        const offset = DomHandler.getOffset(boxEl);\r\n        const targetTop = offset.top;\r\n        const targetLeft = offset.left;\r\n        let left: number;\r\n        let top: number;\r\n        this.container.style.display = 'block';\r\n\r\n        this.changeTooltipPosition(boxEl);\r\n        const arrow = DomHandler.findSingle(this.container, '.f-tooltip-arrow');\r\n        const tooltipSize = this.getTooltipSize();\r\n\r\n        // æ£æ¥åå®¹é«åº¦\r\n        if (window.innerHeight - 10 < tooltipSize.height) {\r\n            this.container.style.height = `${window.innerHeight - 20}px`;\r\n\r\n            tooltipSize.height = window.innerHeight - 25;\r\n            const textContainer = this.getTextContainer();\r\n            textContainer.style.height = `${tooltipSize.height}px`;\r\n            textContainer.style.overflow = 'hidden';\r\n        }\r\n\r\n\r\n        const n = this.updateArrowPosition(arrow, offset, $event);\r\n        switch (this.position) {\r\n            case 'right':\r\n                left = targetLeft + elSize.width;\r\n                top = n;\r\n                break;\r\n            case 'left':\r\n                left = targetLeft - tooltipSize.width;\r\n                top = n;\r\n                break;\r\n            case 'top-left':\r\n                top = targetTop - tooltipSize.height - 7;\r\n                left = n;\r\n                break;\r\n        }\r\n\r\n        if (left) {\r\n            this.container.style.left = left + 'px';\r\n        }\r\n\r\n        this.container.style.top = top + 'px';\r\n        this.container.style.zIndex = 999999;\r\n    }\r\n\r\n    private updateArrowPosition(arrow: any, elOffset: { top, left }, $event: any) {\r\n        const tooltipSize = this.getTooltipSize();\r\n        if (this.position === 'left' || this.position === 'right') {\r\n            const targetTop = elOffset.top;\r\n            const halfHeight = tooltipSize.height / 2;\r\n            let top = 10;\r\n            if (targetTop > halfHeight && window.innerHeight - targetTop > halfHeight) {\r\n                top = targetTop - tooltipSize.height / 2;\r\n            }\r\n\r\n            // è°æ´ç®­å¤´çä½ç½®\r\n            if (arrow) {\r\n                arrow.style.top = `${targetTop - top}px`;\r\n            }\r\n\r\n            return top;\r\n        } else if (this.position === 'top-left') {\r\n            let left = $event.pageX - tooltipSize.width / 2;\r\n\r\n            if (left < 10) {\r\n                left = elOffset.left;\r\n            }\r\n\r\n            if (left + tooltipSize.width > window.innerWidth) {\r\n                left = window.innerWidth - tooltipSize.width - 20;\r\n            }\r\n            // è°æ´ç®­å¤´çä½ç½®\r\n            if (arrow) {\r\n                if ($event.pageX - left > 28) {\r\n                    if ($event.pageX - left + 28 > tooltipSize.width) {\r\n                        arrow.style.left = `${tooltipSize.width - 28 }px`;\r\n                    } else {\r\n                        arrow.style.left = `${$event.pageX - left }px`;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return left;\r\n        }\r\n    }\r\n\r\n    create(elSize: any) {\r\n        let styleClass = this.tooltipCls();\r\n        this.container = document.createElement('div');\r\n        if (this.tooltipStyleClass) {\r\n            styleClass += ' ' + this.tooltipStyleClass;\r\n        }\r\n        this.container.className = styleClass;\r\n\r\n        const tooltipArrow = document.createElement('div');\r\n        tooltipArrow.className = 'f-tooltip-arrow ';\r\n        this.container.appendChild(tooltipArrow);\r\n\r\n        const tooltipText = document.createElement('div');\r\n        tooltipText.className = 'f-tooltip-text ';\r\n        tooltipText.innerHTML = this.message;\r\n\r\n        const maxWidth = window.innerWidth - 50;\r\n        tooltipText.style.maxWidth = `${maxWidth}px`;\r\n\r\n        tooltipText.style.wordBreak = 'break-all';\r\n        this.container.style.textAlign = 'center';\r\n\r\n        if (this.positionStyle) {\r\n            this.container.style.position = this.positionStyle;\r\n        }\r\n\r\n        this.container.appendChild(tooltipText);\r\n        document.body.appendChild(this.container);\r\n    }\r\n\r\n    private tooltipCls() {\r\n        return 'datagrid-cell-tooltip f-tooltip ' + this.getThemeCls() + ' f-tooltip-' + this.position + ' ' + this.cls;\r\n    }\r\n\r\n    private getThemeCls() {\r\n        if (this.type) {\r\n            return 'f-tooltip-' + this.type;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /** è·åå®¿ä¸»å°ºå¯¸ */\r\n    private getBoxSizeObj(boxEl) {\r\n        const p = boxEl.getBoundingClientRect();\r\n        return {\r\n            width: DomHandler.getOuterWidth(boxEl),\r\n            height: DomHandler.getOuterHeight(boxEl),\r\n            left: p.left,\r\n            right: p.right,\r\n            top: p.top,\r\n            bottom: p.bottom\r\n        };\r\n    }\r\n\r\n    /** è·åtooltip å®¹å¨å°ºå¯¸ */\r\n    private getTooltipSize() {\r\n        return {\r\n            width: DomHandler.getOuterWidth(this.container),\r\n            height: DomHandler.getOuterHeight(this.container)\r\n        };\r\n    }\r\n\r\n    /** è·åçªå£å°ºå¯¸ */\r\n    private getWindowSize() {\r\n        return {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        };\r\n    }\r\n\r\n    /** æ ¹æ®åå®¹çå¤å°ï¼èªå¨æ´æ¹tooltip çä½ç½® */\r\n    private changeTooltipPosition(boxEl: any) {\r\n        const boxSize = this.getBoxSizeObj(boxEl);\r\n        const tooltip = this.getTooltipSize();\r\n        const winSize = this.getWindowSize();\r\n\r\n        this.container.className = this.tooltipCls();\r\n\r\n        if (tooltip.width < winSize.width && tooltip.height < boxSize.top) {\r\n            // this.position = 'top-left';\r\n            return;\r\n        } else {\r\n            const elOffset = DomHandler.getOffset(boxEl);\r\n            const elLeft = elOffset.left;\r\n            const elRight = winSize.width - elLeft - boxSize.width;\r\n\r\n            if (elLeft > elRight) {\r\n                this.position = 'left';\r\n            } else {\r\n                this.position = 'right';\r\n            }\r\n\r\n            const toolTipTextWidth = elLeft > elRight ? elLeft : elRight;\r\n            const textEl = this.getTextContainer();\r\n            textEl.style.maxWidth = `${toolTipTextWidth - 30}px`;\r\n            this.container.style.maxWidth = `${toolTipTextWidth}px`;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Pipe, PipeTransform, Injector } from '@angular/core';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { Utils } from './../../utils/utils';\r\nimport { DataColumn } from './../../types/data-column';\r\n\r\n@Pipe({ name: 'tipmsg' , pure: false})\r\nexport class CellTootipMessagePipe implements PipeTransform {\r\n\r\n    private colFormatSer: ColumnFormatService;\r\n    constructor( private injector: Injector) {\r\n    }\r\n\r\n    transform(col: any, ...args: any[]) {\r\n        if (col.showTips) {\r\n            this.colFormatSer = this.injector.get(ColumnFormatService);\r\n            const msg = this.getCellTooltipContent(col, args[0]);\r\n            return msg;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private getCellTooltipContent(col: DataColumn, rowData) {\r\n        let txt = Utils.getValue(col.field, rowData);\r\n        if (col.tipContent) {\r\n            if ( typeof col.tipContent === 'string') {\r\n                txt = col.tipContent;\r\n            } else {\r\n                if (typeof col.tipContent === 'function') {\r\n                    txt = col.tipContent(txt, rowData, col);\r\n                }\r\n            }\r\n        } else {\r\n            if (col.formatter && (typeof col.formatter === 'function' ||\r\n                (typeof col.formatter === 'object' && Object.keys(col.formatter).length))) {\r\n                txt = this.colFormatSer.format(txt, rowData, col.formatter);\r\n            } else {\r\n                txt = Utils.escapeValue(txt);\r\n            }\r\n        }\r\n        return txt;\r\n    }\r\n}\r\n","import { takeUntil } from 'rxjs/operators';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { Component, OnInit, ViewEncapsulation, Injector, ChangeDetectorRef, ElementRef, ViewChild, Renderer2, Input, NgZone, OnDestroy, Optional, Host } from '@angular/core';\r\nimport { DatagridService } from './../../services/datagrid.service';\r\nimport { DatagridFilterService } from './../../services/datagrid-filter.service';\r\nimport {  } from './../../services/datagrid-facade.service';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\n\r\n\r\n@Component({\r\n    selector: 'filter-toolbar',\r\n    template: `\r\n        <div class=\"f-datagrid-filter-toolbar-panel\" #filterPanel [class.show]=\"openFilterPanel\" style=\"width: auto\">\r\n            <span class=\"filter-text\" #filterPanelText [innerHTML]=\"filterText\"></span>\r\n        </div>\r\n        <div class=\"f-datagrid-filter-toolbar\" #filterToolbar>\r\n            <span class=\"title\">{{'datagrid.filter.title'| locale}}ï¼</span>\r\n            <span #filterbarTxt class=\"filter-text\" [innerHTML]=\"filterText\"> </span>\r\n            <span class=\"filter-action\" *ngIf=\"filterText !== empty \">\r\n                <span *ngIf=\"showExpand\" class=\"f-icon filter-action-item\"\r\n                    [class.f-icon-arrow-chevron-up]=\"openFilterPanel\"\r\n                    [class.f-icon-arrow-chevron-down]=\"!openFilterPanel\"\r\n                (click)=\"showFilterTextPanel()\" title=\"{{'datagrid.filter.more'|locale}}\"></span>\r\n                <span title=\"{{'datagrid.filter.clearAll'|locale}}\" class=\"f-icon f-icon-x filter-action-item filter-clear\" (click)=\"clearFilter($event)\"></span>\r\n                <span title=\"refresh\" class=\"f-icon f-icon-reload-sm filter-action-item filter-refresh\" style=\"color: #388fff\" (click)=\"refreshFilter($event)\"></span>\r\n                <span *ngIf=\"enableFilterSetting\" class=\"f-icon f-icon-cog filter-action-item\" title=\"{{'datagrid.filter.setting'|locale}}\"></span>\r\n            </span>\r\n        </div>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DatagridFilterToolbarComponent implements OnInit, OnDestroy {\r\n    empty = '[ æ  ]';\r\n    filterText = this.empty;\r\n\r\n    openFilterPanel = false;\r\n    showExpand = false;\r\n\r\n    @Input() enableFilterSetting = false;\r\n\r\n    @ViewChild('filterPanel') filterPanelRef: ElementRef;\r\n    @ViewChild('filterPanelText') filterPanelTextRef: ElementRef;\r\n    @ViewChild('filterbarTxt') filterTextRef: ElementRef;\r\n    @ViewChild('filterToolbar') filterToolbarRef: ElementRef;\r\n\r\n    get toolbarWidth() {\r\n        return this.filterToolbarRef.nativeElement.offsetWidth;\r\n    }\r\n\r\n    get filterTextContainerWidth() {\r\n        let actionW = 52;\r\n        if (this.enableFilterSetting) {\r\n            actionW = 65;\r\n        }\r\n        return this.toolbarWidth - 85 - actionW;\r\n    }\r\n\r\n    get filterTextRealWidth() {\r\n        this.render.setStyle(this.filterPanelTextRef.nativeElement, 'white-space', 'nowrap');\r\n        const w = this.filterPanelTextRef.nativeElement.scrollWidth;\r\n        this.render.setStyle(this.filterPanelTextRef.nativeElement, 'white-space', 'normal');\r\n        return w;\r\n    }\r\n\r\n    filterChangeSubscription: Subscription;\r\n    windowResizeHandler = null;\r\n    ro: ResizeObserver = null;\r\n    private destory$ = new Subject();\r\n    private dfrs: DatagridFilterService;\r\n    private dg: DatagridComponent;\r\n    constructor(\r\n        private inject: Injector,\r\n        private el: ElementRef,\r\n        private cd: ChangeDetectorRef,\r\n        private dgs: DatagridService,\r\n        private render: Renderer2,\r\n        private ngZone: NgZone,\r\n        private localeSer: LocaleService,\r\n      ) {\r\n            this.empty = this.localeSer.getValue('datagrid.filter.nofilter');\r\n            this.filterText = this.empty;\r\n        }\r\n\r\n    ngOnInit(): void {\r\n        this.dg = this.inject.get<DatagridComponent>(DatagridComponent);\r\n        this.dfrs = this.dg.clientFilterService;\r\n\r\n        this.dgs.clearFilter.pipe(takeUntil(this.destory$)).subscribe(() => {\r\n            this.filterText = this.empty;\r\n            this.openFilterPanel = false;\r\n            this.dgs.onFilterTextChange(this.filterText);\r\n            this.cd.detectChanges();\r\n        });\r\n\r\n        this.filterChangeSubscription = this.dgs.onFilterChanged.pipe(takeUntil(this.destory$)).subscribe((n) => {\r\n            this.filterText = this.dfrs.convertFilterCondition2String(n);\r\n            if (!this.filterText) {\r\n                this.filterText = this.empty;\r\n            }\r\n\r\n            this.updateExpandState();\r\n            setTimeout(() => {\r\n                this.bindEvent();\r\n            }, 100);\r\n            if (!this.showExpand) {\r\n                this.openFilterPanel = false;\r\n            }\r\n            this.cd.detectChanges();\r\n            this.dgs.onFilterTextChange(this.filterText);\r\n        });\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n\r\n            this.ro = new ResizeObserver(() => {\r\n                if (this['_CONTAINER_SIZE_CHANGED_TIMER_']) {\r\n                    clearTimeout(this['_CONTAINER_SIZE_CHANGED_TIMER_']);\r\n                }\r\n                this['_CONTAINER_SIZE_CHANGED_TIMER_'] = setTimeout(() => {\r\n                    this.updateExpandState();\r\n                    this.cd.detectChanges();\r\n                }, 100);\r\n            });\r\n\r\n            this.ro.observe(this.el.nativeElement.closest('div.f-datagrid'));\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destory$.next();\r\n        this.destory$.complete();\r\n        this.ro.disconnect();\r\n        if (this.filterChangeSubscription) {\r\n            this.filterChangeSubscription.unsubscribe();\r\n            this.filterChangeSubscription = null;\r\n        }\r\n        if (this.windowResizeHandler) {\r\n            this.windowResizeHandler();\r\n            this.windowResizeHandler = null;\r\n        }\r\n    }\r\n\r\n    private bindEvent() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            const filterFields = this.filterToolbarRef.nativeElement.querySelectorAll('.filter-field');\r\n            this.bindFilterFieldHandler(filterFields);\r\n\r\n            const dropdownFilterFields = this.filterPanelTextRef.nativeElement.querySelectorAll('.filter-field');\r\n            this.bindFilterFieldHandler(dropdownFilterFields, false);\r\n        });\r\n    }\r\n\r\n    private bindFilterFieldHandler(filterFields: any, hidePanel = true) {\r\n        if (filterFields && filterFields.length) {\r\n            filterFields.forEach(ff => {\r\n                this.render.listen(ff, 'click', () => {\r\n                    this.removeFilterField(ff, hidePanel);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private removeFilterField(ff: any, hidePanel = true) {\r\n        const field = ff.classList[1].replace('filter-column-', '');\r\n        // delete this.dg.conditions[field];\r\n        ff.remove();\r\n        if (hidePanel) {\r\n            this.openFilterPanel = false;\r\n            this.updateExpandState();\r\n        }\r\n        this.dfrs.removeFilterField(field);\r\n    }\r\n\r\n    private updateExpandState() {\r\n        this.showExpand = this.isShowExpand();\r\n    }\r\n\r\n    isShowExpand() {\r\n\r\n        if (this.filterTextContainerWidth > this.filterTextRealWidth) {\r\n            return false;\r\n        } else if (this.filterTextRealWidth > this.filterTextContainerWidth) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    clearFilter($event) {\r\n        this.filterText = this.empty;\r\n        this.dgs.onClearFilter();\r\n        this.dgs.onFilterChanged.emit({});\r\n        return false;\r\n    }\r\n\r\n    refreshFilter($event) {\r\n        this.dg.filterData();\r\n        return false;\r\n    }\r\n\r\n    showFilterTextPanel() {\r\n        this.openFilterPanel = !this.openFilterPanel;\r\n        this.cd.detectChanges();\r\n    }\r\n}\r\n","import { Directive, ElementRef, Renderer2, Injector, Input, OnInit, RendererStyleFlags2, AfterViewInit } from '@angular/core';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DataColumn, HeaderStyleFn } from './../../types/data-column';\r\n\r\n@Directive({\r\n    selector: '[header-style]',\r\n    exportAs: 'HeaderStyler'\r\n})\r\nexport class HeaderStyleDirective implements OnInit, AfterViewInit {\r\n    @Input('header-style') column: DataColumn;\r\n    @Input() groupHeader = false;\r\n\r\n\r\n    private dg: DatagridComponent = null;\r\n    constructor(private el: ElementRef, private render: Renderer2, private inject: Injector) {\r\n        this.dg = this.inject.get(DatagridComponent);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.renderCss2Element();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        // å¯ç¨è¡¨å¤´èªæç¤º\r\n        if (this.column.halign && this.column.halign !== 'left') {\r\n            const tipEl = this.el.nativeElement.querySelector('.farris-label-tips');\r\n            if (tipEl && tipEl.parentElement && tipEl.parentElement.nodeName == 'DIV') {\r\n                this.render.setStyle(tipEl.parentElement, 'width', '100%');\r\n                if (this.column.halign === 'right') {\r\n                    this.render.setStyle(tipEl.parentElement, 'justify-content', 'end');\r\n                } else {\r\n                    this.render.setStyle(tipEl.parentElement, 'justify-content', 'center');\r\n                }\r\n            } else {\r\n                if (this.groupHeader) {\r\n                    if (this.column.halign === 'right') {\r\n                        this.render.setStyle(this.el.nativeElement, 'justify-content', 'end');\r\n                    } else {\r\n                        this.render.setStyle(this.el.nativeElement, 'justify-content', 'center');\r\n                    }   \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderCss2Element() {\r\n        if (this.column && this.column.headerStyler) {\r\n            const styler = this.column.headerStyler;\r\n            const dom = this.el.nativeElement;\r\n            const st = typeof this.column.headerStyler;\r\n\r\n            if (st === 'string') {\r\n                this.render.addClass(this.el.nativeElement, styler as string);\r\n            } else if (st === 'function') {\r\n                const r = (this.column.headerStyler as HeaderStyleFn)(this.column);\r\n                if (r.cls) {\r\n                    this.render.addClass(this.el.nativeElement, r.cls);\r\n                }\r\n                if (r.style) {\r\n                    this.renderStyle(dom, r.style);\r\n                }\r\n            } else if (st === 'object' && Object.keys(st).length) {\r\n                this.renderStyle(dom, styler);\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderStyle(targetEl: any, styleObj: any) {\r\n        const clskey = `${this.dg.customStyleKey()} td[field=\"${this.column.field}\"] span.f-datagrid-header-cell-title`;\r\n        this.dg.renderCustomStyle2({style: styleObj}, targetEl, clskey);\r\n\r\n\r\n        const tdClskey = `${this.dg.customStyleKey()} td[field=\"${this.column.field}\"].f-datagrid-header-cell`;\r\n        this.dg.renderCustomStyle2({style: styleObj}, targetEl, tdClskey);\r\n\r\n        const bg = Object.keys(styleObj).filter(n => n.toLowerCase().indexOf('background') > -1);\r\n        if (bg && bg.length) {\r\n            const _bgcolor = styleObj[bg[bg.length - 1]];\r\n            const tdClskey2 = `${this.dg.customStyleKey()} td[field=\"${this.column.field}\"] div.f-datagrid-header-cell-content::after`;\r\n            this.dg.renderCustomStyle2({style: {'background-color': _bgcolor}}, targetEl, tdClskey2);\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n","import { DatagridComponent } from './../../datagrid.component';\r\nimport { Component, OnInit, Injector, Input } from '@angular/core';\r\n\r\n\r\n/**\r\n * èªå¨é«åº¦\r\n * ç¦ç¨åé¡µï¼ç¦ç¨åºå®è¡¨å¤´ï¼ç¦ç¨èæå è½½ï¼ç¦ç¨åºå®å\r\n * æ¯æååæ ¼ç¼è¾, æ¯ææåº, æ¯ææå¨åå®½\r\n */\r\n\r\n@Component({\r\n    selector: 'auto-height',\r\n    templateUrl: './auto-height.component.html'\r\n})\r\nexport class AutoHeightComponent implements OnInit {\r\n\r\n    @Input() columns: any[];\r\n    @Input() columnsGroup: any;\r\n    @Input() data: any;\r\n\r\n    constructor(public dg: DatagridComponent, private inject: Injector) { }\r\n\r\n    ngOnInit(): void { }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatagridFacadeService } from '../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'rowIsSelected', pure: false})\r\nexport class RowIsSelectedPipe implements PipeTransform {\r\n    constructor(private dfs: DatagridFacadeService) {}\r\n    transform(rowData: any, selections?: any[]): any {\r\n        if (!rowData) {\r\n            return false;\r\n        }\r\n        const id = this.dfs.primaryId(rowData);\r\n\r\n        if (id) {\r\n            return this.dfs.isRowSelected(id, selections);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatagridFacadeService } from './../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'rowIsChecked', pure: false})\r\nexport class RowIsCheckedPipe implements PipeTransform {\r\n    constructor(private dfs: DatagridFacadeService) {}\r\n    transform(rowData: any, checkeds: any[]): any {\r\n        if (!rowData) {\r\n            return false;\r\n        }\r\n\r\n        const id = this.dfs.primaryId(rowData);\r\n        if (id) {\r\n            return this.dfs.isRowChecked(id, checkeds);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { Directive, ElementRef, Renderer2, Injector, Input, OnInit, AfterViewInit } from '@angular/core';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\n\r\n@Directive({\r\n    selector: '[group-footer-row-styler]',\r\n})\r\nexport class GroupFooterRowStylerDirective implements OnInit, AfterViewInit {\r\n    @Input() column: any;\r\n    @Input('group-footer-row-styler') rowData: any;\r\n    @Input() rowIndex: any;\r\n\r\n    constructor(private el: ElementRef, private render: Renderer2, private inject: Injector, public dg: DatagridComponent) { }\r\n\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.buildCustomGroupFooterRowStyle(this.rowData);\r\n    }\r\n\r\n    private buildCustomGroupFooterRowStyle(rowData) {\r\n\r\n        if (this.dg.groupFooterStyler) {\r\n\r\n            const cs = this.dg.dgs.getCustomStyle(this.dg.groupFooterStyler, [rowData]);\r\n            if (cs) {\r\n                this.dg.renderCustomCls(cs.cls, this.el.nativeElement);\r\n                if (cs.style) {\r\n                    Object.keys(cs.style).forEach(n => {\r\n                        this.el.nativeElement.style[n] = cs.style[n];\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { DatagridComponent } from '../../datagrid.component';\r\nimport { Component, Directive, OnInit, Injector, Input, ElementRef, AfterViewInit, OnChanges, SimpleChanges, DoCheck } from '@angular/core';\r\nimport { DatagridBodyComponent } from '../body';\r\n\r\n@Directive({\r\n    selector: '[auto-height]',\r\n})\r\nexport class AutoHeightDirective implements OnInit, AfterViewInit, OnChanges, DoCheck {\r\n\r\n    @Input('auto-height') autoHeight = false;\r\n    /** æ°æ®åè¡¨æ»é«åº¦ */\r\n    @Input() wheelHeight: number;\r\n\r\n    private _timer = null;\r\n    private _dgb = null;\r\n\r\n    constructor(public dg: DatagridComponent, private inject: Injector, private el: ElementRef) {\r\n        this._dgb = this.inject.get(DatagridBodyComponent);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // this.updateDatagridHeight(this.wheelHeight);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this._updateDatagridHeight(this.wheelHeight);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.wheelHeight) {\r\n            this._updateDatagridHeight(this.wheelHeight);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        // this.checkScrollbarPosition();\r\n    }\r\n\r\n    private updateDatagridHeight(wheelHeight) {\r\n\r\n        if (this.el && this.el.nativeElement && this.el.nativeElement.parentElement) {\r\n            if (this.autoHeight) {\r\n                if (!wheelHeight) {\r\n                    wheelHeight = 240;\r\n\r\n                    if (!this.dg.ds || !this.dg.ds.rows || !this.dg.ds.rows.length) {\r\n                        wheelHeight = (!this.dg.emptyDataHeight || this.dg.emptyDataHeight < 0 ) ? 240 : this.dg.emptyDataHeight;\r\n                    }\r\n                }\r\n                let h =  parseInt(wheelHeight, 10);\r\n\r\n                if (this.dg.showHeader) {\r\n\r\n                    if (!this.dg.realHeaderHeight) {\r\n                        h += this.dg.setHeaderHeight();\r\n                    } else {\r\n                        h += this.dg.realHeaderHeight;\r\n                    }\r\n                }\r\n\r\n                if (this.dg.showFooter) {\r\n                    h += this.dg.footerHeight;\r\n                }\r\n\r\n                if (this.dg.pagination) {\r\n                    const ph = this.dg.pagerHeight || 40;\r\n                    h += ph;\r\n                }\r\n\r\n                if (this.dg.showFilterBar) {\r\n                    h += this.dg.filterBarHeight;\r\n                }\r\n\r\n                if (this.dg.showRowGroupPanel) {\r\n                    h += this.dg.rowGroupPanelHeight;\r\n                }\r\n\r\n                let wh =  `${wheelHeight}px`;\r\n\r\n                if (this.dg.maxHeight && h > this.dg.maxHeight) {\r\n                    wh = this._dgb.getViewPortHeight();\r\n                }\r\n                this.el.nativeElement.parentElement.style.height = wh;\r\n                this.el.nativeElement.parentElement.parentElement.style.height = wh;    \r\n\r\n                if (this.dg.dgContainer) {\r\n                    if (this.dg.maxHeight && h > this.dg.maxHeight) {\r\n                        h = this.dg.maxHeight;\r\n                    }\r\n\r\n                    const dgHeight = `${h}px`;\r\n                    // æ´æ°grid æå¤å±çé«åº¦\r\n                    this.dg.dgContainer.nativeElement.style.height = dgHeight;\r\n                    // farris-datagrid å¢å é«åº¦\r\n                    this.dg.el.nativeElement.style.height = dgHeight;\r\n\r\n                    this.dg.height = h;\r\n\r\n                    if (this.dg.maxHeight) {\r\n                        if (this.dg.maxHeight && this.dg.maxHeight < 55) {\r\n                            this.dg.maxHeight = 60;\r\n                        }\r\n    \r\n                        const gridContainerEl = this.dg.el.nativeElement.parentElement;\r\n                        gridContainerEl.style.height = 'unset';\r\n                        gridContainerEl.style.maxHeight = this.dg.maxHeight + 'px';\r\n                        gridContainerEl.style.minHeight = h + 'px';\r\n                    }\r\n\r\n                } else {\r\n                    this.dg.el.nativeElement.querySelector('.f-datagrid').style.height = `${h}px`;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _updateDatagridHeight(wheelHeight) {\r\n        if (this.dg.autoHeight) {\r\n            if (this.dg.el.nativeElement.parentElement.className.indexOf('f-utils-fill') > -1) {\r\n                this.dg.el.nativeElement.parentElement.className = this.dg.el.nativeElement.parentElement.className.replace('f-utils-fill', '');\r\n            }\r\n            setTimeout(() => {\r\n                this.updateDatagridHeight(wheelHeight);\r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}\r\n","import { Directive, ElementRef, Injector, OnInit, NgZone, Renderer2, OnDestroy, HostListener } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { TR_PREFIX } from '../../types/constant';\r\nimport { Utils } from '../../utils/utils';\r\n\r\n@Directive({\r\n    selector: '[row-dblclick]',\r\n})\r\nexport class DatagridRowDblClickDirective implements OnInit, OnDestroy {\r\n\r\n\r\n    constructor(private el: ElementRef, private injector: Injector, private ngZone: NgZone, private render: Renderer2,\r\n                public dg: DatagridComponent) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n\r\n\r\n    @HostListener('dblclick', ['$event'])\r\n    dblclickRowEvent(event: any) {\r\n\r\n        const tr = event.target.closest('tr');\r\n        if (!tr) {\r\n            return;\r\n        }\r\n\r\n        if (tr.id == null || tr.id == undefined) {\r\n            return;\r\n        }\r\n\r\n        // const rowid = tr.id.replace(TR_PREFIX, '').replace('_fixedright', '').replace('_fixedleft', '').replace('');\r\n        const rowid = Utils.getRowIdByTr(tr);\r\n\r\n        if (tr.className.indexOf('f-datagrid-group-row') > -1) {\r\n            const groupRowid = rowid.replace('group-tr_', '');\r\n            const {data: groupData, index: groupIndex} = this.dg.getGroupRow(groupRowid);\r\n            if (groupData && !isNaN(groupIndex)) {\r\n                if (groupData.expanded) {\r\n                    this.dg.collapseGroupRow(groupIndex);\r\n                } else {\r\n                    this.dg.expandGroupRow(groupIndex);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n\r\n        const rowIndex = tr.getAttribute('index');\r\n        const rowData = this.dg.dfs.findRow(rowid);\r\n\r\n        if (!rowData) {\r\n            return;\r\n        }\r\n       \r\n        if (this.dg.disableRow) {\r\n            if (this.dg.disableRow(rowData.data, rowData.index)) {\r\n                event.stopPropagation();\r\n                return false;\r\n            }\r\n        }\r\n\r\n        const handler = () => {\r\n\r\n            if (!this.dg.dfs.isRowSelected(rowid)) {\r\n                const r = this.dg.beforeSelect({ rowIndex: rowIndex, rowData: rowData.data, gridInstance: this.dg });\r\n                let r$: Observable<any> = of(true);\r\n                if (r && r.subscribe) {\r\n                    r$ = r;\r\n                }\r\n                r$.subscribe((t) => {\r\n                    if (t) {\r\n                        this.dg.selectRow(rowid, true, false);\r\n                        this.dg.dblclickRow.emit({ rowData, id: rowid, index: rowIndex, grid: this.dg, dblclick: true });        \r\n                    }\r\n                })\r\n            } else {\r\n                this.dg.dblclickRow.emit({ rowData, id: rowid, index: rowIndex, grid: this.dg, dblclick: true });\r\n            }\r\n        }\r\n\r\n        if (this.dg.editable) {\r\n            if (this.dg.editMode === 'row' && this.dg.clickToEdit) {\r\n                this.dg.endRowEdit();\r\n                setTimeout(() => {\r\n                    this.dg.editRow(rowid);\r\n                }, 200);\r\n            } else {\r\n                this.dg.isSingleClick = false;\r\n                // this.dg.dblclickRow.emit({ rowData, id: rowid, index: rowIndex, grid: this.dg, dblclick: true });\r\n                handler();\r\n            }\r\n        } else {\r\n            // this.dg.dblclickRow.emit({ rowData, id: rowid, index: rowIndex, grid: this.dg,  dblclick: true });\r\n            handler();\r\n        }\r\n\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n}\r\n","import { Directive, ElementRef, Renderer2, Injector, Input, OnInit, AfterViewInit } from '@angular/core';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\n\r\n@Directive({\r\n    selector: '[footer-cell-styler]',\r\n})\r\nexport class FooterCellStylerDirective implements OnInit, AfterViewInit {\r\n    @Input() column: any;\r\n    @Input() rowData: any;\r\n    @Input() rowIndex: any;\r\n    @Input() isGroupFooter = false;\r\n    constructor(private el: ElementRef, private render: Renderer2, private inject: Injector, public dg: DatagridComponent) { }\r\n\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.isGroupFooter) {\r\n            this.setGroupFooterCellStyle(this.column);\r\n        } else {\r\n            this.buildCustomCellStyle(this.column, this.rowData);\r\n        }\r\n    }\r\n\r\n    private buildCustomCellStyle(column, rowData) {\r\n\r\n        const tr = this.el.nativeElement.parentNode;\r\n        if (tr && !tr.id) {\r\n            const rowdataid = this.dg.dfs.primaryId(rowData);\r\n            let fixed = '';\r\n            if (tr.closest('.f-datagrid-body-fixed-left')) {\r\n                fixed = '-left';\r\n            } else if (tr.closest('.f-datagrid-body-fixed-right')) {\r\n                fixed = '-right';\r\n            }\r\n\r\n            const trID = 'footer-row'+ fixed + '_' + (rowdataid || this.rowIndex);\r\n            tr.id = trID;\r\n        }\r\n\r\n        if (!this.el.nativeElement.id) {\r\n            this.el.nativeElement.id = 'footer-td_' + this.rowIndex + '_'  + this.column.field.replace(/\\./g, '_') ;\r\n        }\r\n\r\n        if (column && column.footer && column.footer.styler) {\r\n            const _rd = rowData;\r\n            const styler = column.footer.styler;\r\n            const cs = styler(_rd[column.field], _rd);\r\n            if (cs && Object.keys(cs).length) {\r\n                this.dg.renderCustomStyle(cs, this.el.nativeElement);\r\n            } else {\r\n                this.dg.dgs.removeCssRule('#' + this.el.nativeElement.id);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private setGroupFooterCellStyle(col: any) {\r\n        // åç»åè®¡è¡èªå®ä¹æ ·å¼ 20210909\r\n        if (col.groupFooter && col.groupFooter.styler) {\r\n            const val = this.dg.commonUtils.getValue(col.field, this.rowData);\r\n            const _customStyles = this.dg.dgs.getCustomStyle(col.groupFooter.styler, [val, this.rowData]);\r\n            if (_customStyles) {\r\n                this.dg.renderCustomCls(_customStyles.cls, this.el.nativeElement);\r\n                if (_customStyles.style) {\r\n                    Object.keys(_customStyles.style).forEach(n => {\r\n                        this.el.nativeElement.style[n] = _customStyles.style[n];\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DragDropColumnService {\r\n    private initColumns;\r\n    constructor() {}\r\n\r\n    /** åç´ ä½ç½®è°æ´\r\n     * arr: æ°ç»\r\n     * newIndex: æ°ä½ç½®ç´¢å¼\r\n     * removedIndex: èä½ç½®ç´¢å¼\r\n     */\r\n    moveItem(arr, newIndex, removedIndex) {\r\n        const removedItem = arr.splice(removedIndex, 1);\r\n        arr.splice(newIndex, 0, ...removedItem);\r\n        return arr;\r\n    }\r\n\r\n    backupColumns(columns) {\r\n        this.initColumns = columns.map( cols => {\r\n            return cols.map( n => {\r\n                return {\r\n                    id: n.id,\r\n                    field: n.field\r\n                };\r\n            });\r\n        });\r\n    }\r\n}\r\n","\r\nimport { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD as SmoothDnDForHeader, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridHeaderComponent } from './datagrid-header.component';\r\nimport { DragDropColumnService } from './drag-drop-column.service';\r\n\r\n\r\nconst { wrapperClass, animationClass } = constants;\r\nSmoothDnDForHeader.dropHandler = dropHandlers.reactDropHandler().handler;\r\nSmoothDnDForHeader.wrapChild = false;\r\n\r\nexport interface DragStartEndInfo {\r\n    isSource: boolean;\r\n    payload: any;\r\n    willAcceptDrop: boolean;\r\n}\r\n\r\n@Directive({\r\n    selector: '[drag-column]',\r\n    providers: [\r\n        DragDropColumnService\r\n    ]\r\n})\r\nexport class DragColumnDirective implements AfterViewInit, OnChanges, OnDestroy {\r\n    private container: any;\r\n    @Input('drag-column') enableDrag = true;\r\n    @Input() groupName = '';\r\n\r\n    @Input() options: ContainerOptions = {\r\n        groupName: this.groupName,\r\n        orientation: 'horizontal',\r\n        behaviour: 'move',\r\n        dragHandleSelector: '.drag-column-bar',\r\n        dragClass: 'drag-column-moving',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        getChildPayload: this.getChildPayload.bind(this),\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            if (typeof payload === 'number') {\r\n                return false;\r\n            }\r\n\r\n            if (sourceContainerOptions.groupName !== this.groupName) {\r\n                return false;\r\n            }\r\n\r\n            return !this.dg.isMultiHeader();\r\n        },\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDrop(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2,\r\n                private el: ElementRef, private header: DatagridHeaderComponent, private dg: DatagridComponent,\r\n                private dndSer: DragDropColumnService) { }\r\n\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.enableDrag && !changes.enableDrag.isFirstChange()) {\r\n            if (this.enableDrag) {\r\n                this.initDnD();\r\n            } else {\r\n                this.disposeDnd();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n    private initDnD() {\r\n        if (!this.dg.enableDragColumn) {\r\n            return;\r\n        }\r\n        if (this.groupName === 'left' || this.groupName === 'right') {\r\n            const { left, right } = this.columnsGroup();\r\n\r\n            if (this.groupName === 'left' && !left.length) {\r\n                return;\r\n            }\r\n\r\n            if (this.groupName === 'right' && (!right.length || (right.length === 1 && right[0].field === '_datagrid-setting-control_'))) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.options.groupName = this.groupName;\r\n        this.disposeDnd();\r\n\r\n\r\n        if (this.enableDrag) {\r\n            this.container = SmoothDnDForHeader(\r\n                this.el.nativeElement,\r\n                this.options\r\n            );\r\n\r\n            this.dndSer.backupColumns(this.header.columns);\r\n        }\r\n    }\r\n\r\n    private getChildPayload(index) {\r\n        if (this.groupName === 'left') {\r\n            if (this.dg.showCheckbox) {\r\n                index--;\r\n            }\r\n            if (this.dg.showLineNumber) {\r\n                index--;\r\n            }\r\n        }\r\n\r\n        const groupColumns = this.columnsGroup();\r\n\r\n        if (this.groupName === 'left') {\r\n            return groupColumns.left.filter((n, i) => this.dg.columnIsVisible(n))[index];\r\n        } else if (this.groupName === 'right') {\r\n            return groupColumns.right.filter((n, i) => this.dg.columnIsVisible(n))[index];\r\n        } else {\r\n            return groupColumns.middle.filter((n, i) => this.dg.columnIsVisible(n))[index];\r\n        }\r\n    }\r\n\r\n    onDropReady(dropResult) {\r\n    }\r\n\r\n    private onDrop(dropResult: DropResult) {\r\n        const { addedIndex, payload, removedIndex } = dropResult;\r\n        if (addedIndex === null) {\r\n            return;\r\n        }\r\n\r\n        const groupColumns = this.columnsGroup();\r\n\r\n        const cols = this.dg.columns[0];\r\n        const currIndex = cols.findIndex(n => n.field === payload.field);\r\n\r\n        let newIndex = addedIndex;\r\n\r\n        const moveColumn = (columns: any) => {\r\n            if (columns) {\r\n                const targetColumn = columns.filter(n => n.visible || n.visible === undefined)[newIndex];\r\n                if (targetColumn) {\r\n                    const realTagetIndex = cols.findIndex(n => n.field === targetColumn.field);\r\n                    this.dg.columns[0] = this.dndSer.moveItem(this.dg.columns[0], realTagetIndex, currIndex);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        let columns = [];\r\n        if (this.groupName === 'left') {\r\n            if (this.dg.showCheckbox) {\r\n                newIndex--;\r\n            }\r\n            if (this.dg.showLineNumber) {\r\n                newIndex--;\r\n            }\r\n            columns = groupColumns.left;\r\n        } else if (this.groupName === 'center') {\r\n            columns = groupColumns.middle;\r\n        } else if (this.groupName === 'right') {\r\n            columns = groupColumns.right;\r\n        }\r\n\r\n        if (moveColumn(columns)) {\r\n            this.dg.columnsChanged(false);\r\n\r\n            if (this.dg.useControlPanel && this.dg.settingService) {\r\n                this.dg.settingService.saveUserConfig(this.dg.id);\r\n            }\r\n\r\n            this.dg.columnMoved.emit({ newColumns: this.dg.columns, grid: this.dg });\r\n        }\r\n    }\r\n\r\n    private onDragStart(info) {\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n    }\r\n\r\n\r\n    private columnsGroup() {\r\n        const leftColumns = this.dg.columns[0].filter(n => n.fixed === 'left');\r\n        const rightColumns = this.dg.columns[0].filter(n => n.fixed === 'right');\r\n        const middleColumns = this.dg.columns[0].filter(n => n.fixed !== 'right' && n.fixed !== 'left');\r\n\r\n        return {\r\n            left: leftColumns,\r\n            right: rightColumns,\r\n            middle: middleColumns\r\n        };\r\n    }\r\n}\r\n\r\n","\r\nimport { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { DragStartEndInfo } from './datagrid-drag-column.directive';\r\nimport { DragDropColumnService } from './drag-drop-column.service';\r\n\r\n\r\nsmoothDnD.dropHandler = dropHandlers.reactDropHandler().handler;\r\nsmoothDnD.wrapChild = false;\r\nconst { wrapperClass, animationClass } = constants;\r\n\r\n@Directive({\r\n    selector: '[drop-column]',\r\n    providers: [\r\n        DragDropColumnService\r\n    ]\r\n})\r\nexport class DropColumnDirective implements AfterViewInit, OnDestroy {\r\n    @Input() options: ContainerOptions = {\r\n        orientation: 'horizontal',\r\n        behaviour: 'move',\r\n        dragHandleSelector: '.group-field',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            if(payload === undefined || payload === null) {\r\n                return false;\r\n            }\r\n            if (typeof payload === 'number') {\r\n                return true;\r\n            }\r\n\r\n            if (this.getGroupFields().length < 3) {\r\n                return payload.allowGrouping === undefined || payload.allowGrouping;\r\n            }\r\n            return false;\r\n        },\r\n        getChildPayload: (index) => {\r\n            return index;\r\n        },\r\n        // dragClass: 'drag-column-moving',\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDrop(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    private container: any;\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2, private el: ElementRef,\r\n                private dg: DatagridComponent, private dndSer: DragDropColumnService) { }\r\n\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n    private initDnD() {\r\n        this.disposeDnd();\r\n        if (this.dg.showRowGroupPanel) {\r\n            this.container = smoothDnD(\r\n                this.el.nativeElement,\r\n                this.options\r\n            );\r\n        }\r\n    }\r\n\r\n    private onDropReady(dropResult) {\r\n    }\r\n\r\n    private getGroupFields() {\r\n        return this.dg.groupField ? this.dg.groupField.split(',') : [];\r\n    }\r\n\r\n\r\n    private onDrop(dropResult: DropResult) {\r\n        const { addedIndex, payload, removedIndex } = dropResult;\r\n\r\n        if (addedIndex === null) {\r\n            return;\r\n        }\r\n\r\n        const newGroupFields = this.getGroupFields();\r\n\r\n        if (removedIndex === null) {\r\n            if (!newGroupFields.some((v) => v === payload.field)) {\r\n                // newGroupFields.splice(0, 0, payload.field);\r\n                newGroupFields.push(payload.field);\r\n            }\r\n        } else {\r\n            this.dndSer.moveItem(newGroupFields, addedIndex, removedIndex);\r\n        }\r\n        this.dg.groupField = newGroupFields.join(',');\r\n        // this.dg.toggleVisibleColumn([this.dg.groupField], false);\r\n\r\n        if (this.dg.useControlPanel && this.dg.settingService) {\r\n            this.dg.checkSettingHttp();\r\n            this.dg.settingService.saveUserConfig(this.dg.id).subscribe( () => {\r\n                this.dg.columnsChanged();\r\n            });\r\n        } else {\r\n            this.dg.columnsChanged();\r\n        }\r\n\r\n        this.dg.groupFieldChange.emit({ newGroupField: this.dg.groupField, grid: this.dg });\r\n    }\r\n\r\n    private onDragStart(info) {\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'cellReadonly'\r\n})\r\nexport class CellIsReadonlyPipe implements PipeTransform {\r\n    transform(col: any, ...args: any[]): any {\r\n        return this.isReadonly(col, args[0], args[1]);\r\n    }\r\n\r\n    private isReadonly(col, rowData, dg) {\r\n        if (dg.editable) {\r\n            // åä¸åå¹¶çååæ ¼ä¸åè®¸ç¼è¾\r\n            if (dg.mergeCell && dg.mergeFields.indexOf(col.field) > -1) {\r\n                return true;\r\n            }\r\n            return this.getReadonlyValue(col, rowData);\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    private getReadonlyValue(col, rowData) {\r\n        if (col.readonly !== undefined) {\r\n            if (typeof col.readonly === 'boolean') {\r\n                return col.readonly;\r\n            } else if (typeof col.readonly === 'function') {\r\n                return col.readonly(rowData);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","\r\n\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-28 09:28:28\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { NgModule, ModuleWithProviders, Provider, ErrorHandler } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { DataColumnModule } from '@farris/ui-common/column';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { PaginationModule } from '@farris/ui-pagination';\r\nimport { SimpleFilterModule } from '@farris/ui-filter';\r\n// import { FilterPanelModule, FilterPanelComponent } from '@farris/ui-filter-panel';\r\n\r\nimport { DatagridSmartFilterModule } from './plugins/smart-filter/datagrid-smart-filter.module';\r\n\r\nimport { DatagridComponent } from './datagrid.component';\r\nimport { NgxPaginationModule } from './pagination/ngx-pagination.module';\r\nimport { DatagridPagerComponent } from './components/pager/pager.component';\r\nimport { DataGridLoadingComponent } from './components/loading.component';\r\nimport { DatagridHeaderComponent, FilterRowCreateDirective } from './components/header/datagrid-header.component';\r\nimport { DatagridCellEditableDirective } from './components/body/datagrid-cell-editable.directive';\r\nimport { DatagridCellComponent } from './components/body/datagrid-cell.component';\r\nimport { DatagridRowDirective } from './components/body/datagrid-row.directive';\r\nimport { DatagridBodyComponent } from './components/body/datagrid-body.component';\r\nimport { DatagridCellEditorDirective } from './components/columns/column-cell-edit.directive';\r\nimport { DatagridColumnDirective } from './components/columns/datagrid-column.directive';\r\nimport { GridCellEditorDirective } from './components/editors/cell-editor.directive';\r\nimport { ScrollbarModule } from './scrollbar/scrollbar.module';\r\nimport { ScrollbarConfigInterface, SCROLLBAR_CONFIG } from './scrollbar/scrollbar.interfaces';\r\n\r\nimport { DatagridRowHoverDirective } from './components/body/datagrid-row-hover.directive';\r\nimport { DatagridRowsComponent } from './components/body/datagrid-rows.component';\r\nimport { DatagridCheckboxComponent } from './components/checkbox/datagrid-checkbox.component';\r\nimport { DatagridHeaderCheckboxComponent } from './components/checkbox/datagrid-header-checkbox.component';\r\nimport { DatagridResizeColumnDirective } from './components/header/datagrid-resize-column.directive';\r\nimport { DatagridFooterComponent } from './components/footer/datagrid-footer.component';\r\nimport { SafePipe } from './utils/safe.pipe';\r\nimport { FormatCellDataPipe } from './utils/format-cell-data.pipe';\r\nimport { RowDataIdPipe } from './utils/rowid.pipe';\r\nimport { FormatGroupRowPipe } from './utils/format-group-row.pipe';\r\nimport { FixedLeftRowsComponent } from './components/body/fixed-left-rows.component';\r\n\r\n/** å¼å®¹ä¸èçæ¬ */\r\nimport { TextboxEditorComponent } from './components/editors/text-editor.component';\r\n\r\nimport { ReplaceXPipe } from './utils/rexplaceX.pipe';\r\nimport { DatagridGroupRowDirective } from './components/body/datagrid-grouprow.directive';\r\nimport { ShowRequiredStarPipe } from './utils/show-required-label.pipe';\r\nimport { DisableRowPipe } from './utils/disable-row.pipe';\r\nimport { SelectedRowPipe } from './utils/select-row.pipe';\r\nimport { FieldValuePipe } from './utils/field-value.pipe';\r\nimport { DatagridCellTooltipDirective } from './components/tooltip/cell-tooltip.directive';\r\nimport { CellTootipMessagePipe } from './components/tooltip/tip-message.pipe';\r\nimport { DatagridFilterToolbarComponent } from './components/filter-toolbar/filter-toolbar.component';\r\nimport { HeaderStyleDirective } from './components/header/header-style.directive';\r\nimport { AutoHeightComponent } from './components/auto-height/auto-height.component';\r\nimport { RowIsSelectedPipe } from './utils/row-is-selected.pipe';\r\nimport { RowIsCheckedPipe } from './utils/row-is-checked.pipe';\r\nimport { DatagridErrorHandler } from './datagrid-error-handler';\r\nimport { AutoHeightDirective } from './components/auto-height/auto-height.directive';\r\nimport { ValidatorMessagerService } from './services/validator-messager.service';\r\nimport { PagerSelectedListComponent } from './components/pager/selected-list/selected-list.component';\r\nimport { SelectedItemPipe } from './components/pager/selected-item.pipe';\r\nimport { DatagridRowDblClickDirective } from './components/body/datagrid-row-dblclick.directive';\r\nimport { FooterCellStylerDirective } from './components/footer/datagrid-footer-cell.styler.directive';\r\nimport { DragColumnDirective } from './components/header/datagrid-drag-column.directive';\r\nimport { DropColumnDirective } from './components/header/datagrid-drop-column.directive';\r\nimport { SmartFilterToolbarComponent } from './components/filter-toolbar/smart-filter-toolbar.component';\r\n\r\nimport { FarrisContextMenuModule } from '@farris/ui-context-menu';\r\nimport { GroupFooterRowStylerDirective } from './components/body/datagrid-group-footer-styler.directive';\r\nimport { CellIsReadonlyPipe } from './utils/cell-readonly.pipe';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: ScrollbarConfigInterface = {\r\n    minScrollbarLength: 20\r\n};\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        PaginationModule,\r\n        NgxPaginationModule,\r\n        ScrollbarModule,\r\n        LocaleModule.forRoot(),\r\n        DataColumnModule.forRoot(),\r\n        NotifyModule.forRoot(),\r\n        SimpleFilterModule,\r\n        DatagridSmartFilterModule,\r\n        FarrisContextMenuModule,\r\n        FarrisCommonModule.forRoot()\r\n    ],\r\n    declarations: [\r\n        SafePipe,\r\n        FormatCellDataPipe,\r\n        RowDataIdPipe,\r\n        FormatGroupRowPipe,\r\n        ShowRequiredStarPipe,\r\n        FieldValuePipe,\r\n        ReplaceXPipe,\r\n        DisableRowPipe,\r\n        SelectedRowPipe,\r\n        CellIsReadonlyPipe,\r\n        CellTootipMessagePipe,\r\n        DatagridComponent,\r\n        DatagridHeaderComponent,\r\n        DatagridFooterComponent,\r\n        DatagridResizeColumnDirective,\r\n        DatagridCellEditableDirective,\r\n        DatagridCellComponent,\r\n        DatagridRowDirective,\r\n        DatagridBodyComponent,\r\n        DatagridPagerComponent,\r\n        DatagridCellEditorDirective,\r\n        DatagridColumnDirective,\r\n        DatagridRowsComponent,\r\n        FixedLeftRowsComponent,\r\n        DatagridRowHoverDirective,\r\n        DataGridLoadingComponent,\r\n        DatagridCheckboxComponent,\r\n        DatagridHeaderCheckboxComponent,\r\n        GridCellEditorDirective,\r\n        TextboxEditorComponent,\r\n        DatagridGroupRowDirective,\r\n        DatagridCellTooltipDirective,\r\n        DatagridFilterToolbarComponent,\r\n        HeaderStyleDirective,\r\n        AutoHeightDirective,\r\n        AutoHeightComponent,\r\n        RowIsSelectedPipe,\r\n        RowIsCheckedPipe,\r\n        SelectedItemPipe,\r\n        PagerSelectedListComponent,\r\n        DatagridRowDblClickDirective,\r\n        FooterCellStylerDirective,\r\n        DragColumnDirective,\r\n        DropColumnDirective,\r\n        FilterRowCreateDirective,\r\n        SmartFilterToolbarComponent,\r\n        GroupFooterRowStylerDirective,\r\n    ],\r\n    providers: [\r\n        { provide: ErrorHandler, useClass: DatagridErrorHandler },\r\n        {\r\n            provide: SCROLLBAR_CONFIG,\r\n            useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n        },\r\n        ValidatorMessagerService\r\n    ],\r\n    exports: [\r\n        SafePipe,\r\n        DatagridComponent,\r\n        DatagridHeaderComponent,\r\n        DatagridColumnDirective,\r\n        DatagridCellEditorDirective,\r\n        DatagridCellEditableDirective,\r\n        DatagridRowHoverDirective,\r\n        DatagridResizeColumnDirective,\r\n        TextboxEditorComponent,\r\n        FormatCellDataPipe,\r\n        RowDataIdPipe,\r\n        ReplaceXPipe,\r\n        FieldValuePipe,\r\n        CellTootipMessagePipe,\r\n        ShowRequiredStarPipe,\r\n        DatagridCellTooltipDirective,\r\n        DatagridFilterToolbarComponent,\r\n        RowIsSelectedPipe,\r\n        RowIsCheckedPipe,\r\n        DatagridRowDblClickDirective,\r\n        FooterCellStylerDirective,\r\n        DragColumnDirective,\r\n        DropColumnDirective,\r\n        FilterRowCreateDirective,\r\n        SmartFilterToolbarComponent,\r\n        DatagridSmartFilterModule,\r\n        GroupFooterRowStylerDirective,\r\n        FarrisContextMenuModule,\r\n        CellIsReadonlyPipe\r\n    ],\r\n    entryComponents: [\r\n        // FilterPanelComponent\r\n    ]\r\n})\r\nexport class DatagridModule {\r\n    static forRoot(editors?: Provider[]): ModuleWithProviders {\r\n        return {\r\n            ngModule: DatagridModule,\r\n            providers: editors || []\r\n        };\r\n    }\r\n}\r\n"]}