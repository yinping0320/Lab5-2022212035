/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { DatagridFacadeService } from './../services/datagrid-facade.service';
export class RowIsCheckedPipe {
    /**
     * @param {?} dfs
     */
    constructor(dfs) {
        this.dfs = dfs;
    }
    /**
     * @param {?} rowData
     * @param {?} checkeds
     * @return {?}
     */
    transform(rowData, checkeds) {
        if (!rowData) {
            return false;
        }
        /** @type {?} */
        const id = this.dfs.primaryId(rowData);
        if (id) {
            return this.dfs.isRowChecked(id, checkeds);
        }
        else {
            return false;
        }
    }
}
RowIsCheckedPipe.decorators = [
    { type: Pipe, args: [{ name: 'rowIsChecked', pure: false },] }
];
/** @nocollapse */
RowIsCheckedPipe.ctorParameters = () => [
    { type: DatagridFacadeService }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    RowIsCheckedPipe.prototype.dfs;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93LWlzLWNoZWNrZWQucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktZGF0YWdyaWQvIiwic291cmNlcyI6WyJsaWIvdXRpbHMvcm93LWlzLWNoZWNrZWQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFHOUUsTUFBTSxPQUFPLGdCQUFnQjs7OztJQUN6QixZQUFvQixHQUEwQjtRQUExQixRQUFHLEdBQUgsR0FBRyxDQUF1QjtJQUFHLENBQUM7Ozs7OztJQUNsRCxTQUFTLENBQUMsT0FBWSxFQUFFLFFBQWU7UUFDbkMsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNWLE9BQU8sS0FBSyxDQUFDO1NBQ2hCOztjQUVLLEVBQUUsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUM7UUFDdEMsSUFBSSxFQUFFLEVBQUU7WUFDSixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLEVBQUUsRUFBRSxRQUFRLENBQUMsQ0FBQztTQUM5QzthQUFNO1lBQ0gsT0FBTyxLQUFLLENBQUM7U0FDaEI7SUFDTCxDQUFDOzs7WUFkSixJQUFJLFNBQUMsRUFBQyxJQUFJLEVBQUUsY0FBYyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUM7Ozs7WUFGaEMscUJBQXFCOzs7Ozs7O0lBSWQsK0JBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEYXRhZ3JpZEZhY2FkZVNlcnZpY2UgfSBmcm9tICcuLy4uL3NlcnZpY2VzL2RhdGFncmlkLWZhY2FkZS5zZXJ2aWNlJztcclxuXHJcbkBQaXBlKHtuYW1lOiAncm93SXNDaGVja2VkJywgcHVyZTogZmFsc2V9KVxyXG5leHBvcnQgY2xhc3MgUm93SXNDaGVja2VkUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBkZnM6IERhdGFncmlkRmFjYWRlU2VydmljZSkge31cclxuICAgIHRyYW5zZm9ybShyb3dEYXRhOiBhbnksIGNoZWNrZWRzOiBhbnlbXSk6IGFueSB7XHJcbiAgICAgICAgaWYgKCFyb3dEYXRhKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IGlkID0gdGhpcy5kZnMucHJpbWFyeUlkKHJvd0RhdGEpO1xyXG4gICAgICAgIGlmIChpZCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kZnMuaXNSb3dDaGVja2VkKGlkLCBjaGVja2Vkcyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0=