/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { takeUntil } from 'rxjs/operators';
import { DatagridComponent } from './../../datagrid.component';
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-08-12 15:01:21
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-11-09 15:24:45
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
import { Component, Input, ElementRef, Renderer2, ViewChild, Injector, Inject, forwardRef, ChangeDetectorRef } from '@angular/core';
import { DatagridService } from '../../services/datagrid.service';
import { FIXED_LEFT_SHADOW_CLS, FIXED_RIGHT_SHADOW_CLS, SCROLL_X_ACTION, SCROLL_X_REACH_END_ACTION, SCROLL_X_REACH_START_ACTION } from '../../types/constant';
import { Subject } from 'rxjs';
export class DatagridFooterComponent {
    /**
     * @param {?} render
     * @param {?} injector
     * @param {?} dg
     */
    constructor(render, injector, dg) {
        this.render = render;
        this.injector = injector;
        this.dg = dg;
        this._footerData = [];
        /**
         * 显示位置，默认为 底部
         */
        this.position = 'bottom';
        /**
         * 是否有左侧固定列
         */
        this.hasFixedColumns = false;
        this.fast = false;
        this.scrollX = 0;
        this.showShadowCls = false;
        this.rightFixedColumnWidth = 0;
        this.cdRef = null;
        this.destroy$ = new Subject();
        this.dg = this.injector.get(DatagridComponent);
        this.dgs = this.injector.get(DatagridService);
        this.cdRef = this.injector.get(ChangeDetectorRef);
    }
    /**
     * @return {?}
     */
    get data() {
        return this._footerData;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set data(val) {
        this._footerData = val;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set fr(val) {
        if (val) {
            this.fixedRight = val;
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.scrollEvents();
        this.renderFooterStyle();
        this.setFooterPosition(false);
        this.rightFixedColumnWidth = this.getRightFixedColWidth();
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes.position) {
            this.setFooterPosition(true);
        }
        if (changes.columnsGroup && !changes.columnsGroup.isFirstChange()) {
            this.rightFixedColumnWidth = this.getRightFixedColWidth();
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
        if (this.scrollXSubscription) {
            this.scrollXSubscription.unsubscribe();
            this.scrollXSubscription = null;
        }
    }
    /**
     * @private
     * @return {?}
     */
    scrollEvents() {
        this.dgs.showGridHeader.pipe(takeUntil(this.destroy$)).subscribe((/**
         * @param {?} hh
         * @return {?}
         */
        hh => {
            this.setFooterPosition(false);
        }));
        this.scrollXSubscription = this.dgs.scorll$.pipe(takeUntil(this.destroy$)).subscribe((/**
         * @param {?} d
         * @return {?}
         */
        (d) => {
            this.scrollX = d.x;
            if (this.fast) {
                if (d.type === SCROLL_X_ACTION && this.footerBody2) {
                    this.footerBody2.nativeElement.scrollLeft = d.x;
                }
            }
            else {
                if (d.type === SCROLL_X_ACTION || d.type === SCROLL_X_REACH_END_ACTION || d.type === SCROLL_X_REACH_START_ACTION) {
                    if (!this.dg.footerTemplate) {
                        this.render.setStyle(this.footerBody.nativeElement, 'transform', `translate3d(-${d.x}px, 0px, 0px)`);
                        if (this.fixedLeft) {
                            if (d.x) {
                                this.render.addClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);
                            }
                            else {
                                this.render.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);
                            }
                        }
                    }
                }
                if (d.type === SCROLL_X_REACH_START_ACTION) {
                    if (this.fixedLeft) {
                        this.render.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);
                    }
                }
            }
        }));
        if (!this.fast) {
            this.dgs.showFixedShadow.pipe(takeUntil(this.destroy$)).subscribe((/**
             * @param {?} e
             * @return {?}
             */
            (e) => {
                if (this.fixedRight) {
                    this.setFixedColumnPosition(e.showRightShadow, e.x);
                }
            }));
            this.dgs.scrollbarUpdate.pipe(takeUntil(this.destroy$)).subscribe((/**
             * @param {?} ps
             * @return {?}
             */
            (ps) => {
                // const rw = ps.rightWidth || 0;
                // if (!rw) {
                //     this.rightFixedColumnWidth = this.getRightFixedColWidth(ps.scrollbarRef);
                // } else {
                //     this.rightFixedColumnWidth = rw;
                // }
                this.rightFixedColumnWidth = this.getRightFixedColWidth(ps.scrollbarRef);
                if (this.fixedRight) {
                    this.setFixedColumnPosition(ps.showRightShadow, 0);
                }
                if (this.cdRef) {
                    this.cdRef.detectChanges();
                }
            }));
        }
    }
    /**
     * @private
     * @param {?=} ps
     * @return {?}
     */
    getRightFixedColWidth(ps = null) {
        if (!this.columnsGroup) {
            return 0;
        }
        /** @type {?} */
        let w = this.columnsGroup.rightFixedWidth;
        ps = this.dg.scrollInstance ? this.dg.scrollInstance.instance : null;
        if (ps && ps.scrollbarYActive && this.dg.scrollBarShowMode === 'allways') {
            return w += 18;
        }
        return w;
    }
    /**
     * @private
     * @param {?=} emit
     * @return {?}
     */
    setFooterPosition(emit = true) {
        if (this.position === 'bottom') {
            /** @type {?} */
            let positionBottom = 0;
            if (this.dg.pagination) {
                positionBottom = this.dg.pagerHeight || 40;
            }
            this.render.removeStyle(this.footerContainer.nativeElement, 'top');
            this.render.setStyle(this.footerContainer.nativeElement, 'bottom', `${positionBottom}px`);
        }
        if (this.position === 'top') {
            /** @type {?} */
            let positionTop = 0;
            if (this.dg.showHeader) {
                positionTop = this.dg.realHeaderHeight || 35;
            }
            if (this.dg.showRowGroupPanel) {
                positionTop += this.dg.rowGroupPanelHeight;
            }
            if (this.dg.showFilterBar) {
                positionTop += this.dg.filterBarHeight;
            }
            this.render.removeStyle(this.footerContainer.nativeElement, 'bottom');
            this.render.setStyle(this.footerContainer.nativeElement, 'top', `${positionTop}px`);
        }
        if (emit) {
            this.dgs.footerPositionChanged.emit();
        }
    }
    /**
     * @private
     * @return {?}
     */
    renderFooterStyle() {
        if (this.dg.footerStyler) {
            /** @type {?} */
            const trStyleAndCls = this.dgs.getCustomStyle(this.dg.footerStyler, null);
            /** @type {?} */
            const cssRuleID = `${this.dg.customStyleKey()} .f-datagrid-footer`;
            /** @type {?} */
            const cssRuleId2 = `${this.dg.customStyleKey()} .f-datagrid-footer .f-datagrid-body-fixed-left,${this.dg.customStyleKey()} .f-datagrid-footer .f-datagrid-body-fixed-right`;
            /** @type {?} */
            const cssRuleId3 = `${this.dg.customStyleKey()}.f-datagrid-fast .f-datagrid-cell.f-datagrid-fast__fixed-left,${this.dg.customStyleKey()}.f-datagrid-fast .f-datagrid-cell.f-datagrid-fast__fixed-right`;
            if (trStyleAndCls && Object.keys(trStyleAndCls).length) {
                /** @type {?} */
                const cssRule = [];
                if (trStyleAndCls.style) {
                    cssRule.push(`${cssRuleID} ${JSON.stringify(trStyleAndCls.style)}`);
                    cssRule.push(`${cssRuleId2} ${JSON.stringify(trStyleAndCls.style)}`);
                    if (this.fast) {
                        cssRule.push(`${cssRuleId3} ${JSON.stringify(trStyleAndCls.style)}`);
                    }
                }
                this.dgs.appendCssRules(cssRule);
                // this.dg.renderCustomStyle(trStyleAndCls, this.footerContainer.nativeElement, cssRule);
            }
            else {
                this.dgs.removeCssRule([cssRuleID, cssRuleId2]);
            }
        }
    }
    /**
     * @param {?} isShow
     * @param {?} scrollLeft
     * @return {?}
     */
    setFixedColumnPosition(isShow, scrollLeft) {
        this.showShadowCls = isShow;
        /** @type {?} */
        const method = isShow ? 'addClass' : 'removeClass';
        this.render[method](this.fixedRight.nativeElement, FIXED_RIGHT_SHADOW_CLS);
        /** @type {?} */
        const realWidth = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth + this.rightFixedColumnWidth;
        /** @type {?} */
        const gridWidth = this.dg.width;
        /** @type {?} */
        let l = this.dg.width - (this.dg.showBorder ? 2 : 0) - this.rightFixedColumnWidth;
        if (gridWidth > realWidth) {
            l = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth;
            // if (this.dg.showBorder) {
            //     l-= 2;
            // }
        }
        this.render.setStyle(this.fixedRight.nativeElement, 'left', l + 'px');
    }
}
DatagridFooterComponent.decorators = [
    { type: Component, args: [{
                selector: 'datagrid-footer',
                template: "<!--\r\n * @Author: \u75AF\u72C2\u79C0\u624D(Lucas Huang)\r\n * @Date: 2019-08-12 15:02:10\r\n * @LastEditors: \u75AF\u72C2\u79C0\u624D(Lucas Huang)\r\n * @LastEditTime: 2019-10-31 14:50:47\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n -->\r\n\r\n <ng-template #footer_content_template_fast let-columns let-left=\"fixedLeft\" let-right=\"fixedRight\">\r\n    <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border:0;\" class=\"f-datagrid-rows\" [style.width.px]=\"columnsGroup?.normalWidth\" >\r\n        <colgroup>\r\n            <col [style.width.px]=\"dg.checkboxColumnWidth || 36\" *ngIf=\"dg.showCheckbox\"/>\r\n            <col [width]=\"dg.lineNumberWidth + 'px'\" *ngIf=\"dg.showLineNumber\"/>\r\n            <col *ngFor=\"let col of columns\" [width]=\"col.width + 'px'\"/>\r\n        </colgroup>\r\n        <tbody>\r\n            <tr #tr class=\"f-datagrid-body-row f-datagrid-footer-row\"\r\n                *ngFor=\"let row of data;let rowIndex = index;trackBy: dg.trackByRows\" \r\n                [attr.index]=\"rowIndex\">\r\n\r\n                <td *ngIf=\"dg.showCheckbox\" class=\"f-datagrid-cell f-datagrid-cell-checkbox\" style=\"text-align: center; left: 0\"\r\n                [class.f-datagrid-fast__fixed-left]=\"dg.fast\" [class.l-shadow-col]=\"!dg.showLineNumber && !hasFixedColumns\"></td>\r\n                <td *ngIf=\"dg.showLineNumber\" class=\"f-datagrid-cell f-datagrid-cell-rownumber\" \r\n                [class.f-datagrid-fast__fixed-left]=\"dg.fast\"  [style.left.px]=\"dg.showCheckbox ? 36: 0\" [class.l-shadow-col]=\"!hasFixedColumns\"></td>\r\n\r\n                <td class=\"f-datagrid-cell {{ 'footer-td-'+ col.field }}\"\r\n                    [style.width.px]=\"col.width\"\r\n                    [attr.colspan]=\"col.footer?.colspan || 1\"\r\n                    [style.display]=\"col.footer?.visible === false ? 'none': ''\"\r\n                    [attr.field]=\"col.field\" [attr.align]=\"col.footer?.align || col.align\"\r\n                    *ngFor=\"let col of columns; let ci = index;\"\r\n                    footer-cell-styler [column]=\"col\" [rowData]=\"row\" [rowIndex]=\"rowIndex\"\r\n                    [class.f-datagrid-fast__fixed-left]=\" col.fixed && col.fixed === 'left'\"\r\n                    [class.f-datagrid-fast__fixed-right]=\" col.fixed && col.fixed === 'right'\"\r\n                    [class.r-shadow-col]=\"col.rightShadowCol\"\r\n                    [class.l-shadow-col]=\"col.leftShadowCol\">\r\n                    <div class=\"f-datagrid-cell-content\" style=\"width: 100%\">\r\n                        <span *ngIf=\"col.footer && col.footer.formatter\" [innerHtml]=\"col | formatCellData: row : false: true | safe: 'html'\"></span>\r\n                        <span *ngIf=\"!col.footer || !col.footer.formatter\">{{ col | formatCellData: row : false: true }}</span>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</ng-template>\r\n<ng-template #footer_content_template let-columns let-left=\"fixedLeft\" let-right=\"fixedRight\">\r\n    <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border:0;height: 100%;\" class=\"f-datagrid-rows\" [style.width.px]=\"right? columnsGroup?.rightFixedWidth: left? columnsGroup?.leftFixedWidth: columnsGroup?.normalWidth\">\r\n        <colgroup>\r\n            <col [style.width.px]=\"dg.checkboxColumnWidth || 36\" *ngIf=\"dg.showCheckbox && left\"/>\r\n            <col [width]=\"dg.lineNumberWidth + 'px'\" *ngIf=\"dg.showLineNumber && left\"/>\r\n            <col *ngFor=\"let col of columns\" [width]=\"col.width + 'px'\"/>\r\n        </colgroup>\r\n        <tbody>\r\n            <tr #tr class=\"f-datagrid-body-row f-datagrid-footer-row\"\r\n                *ngFor=\"let row of data;let rowIndex = index;trackBy: dg.trackByRows\" \r\n                [attr.index]=\"rowIndex\">\r\n\r\n                <td *ngIf=\"dg.showCheckbox && left\" class=\"f-datagrid-cell f-datagrid-cell-checkbox\" style=\"text-align: center\"></td>\r\n                <td *ngIf=\"dg.showLineNumber  && left\" class=\"f-datagrid-cell f-datagrid-cell-rownumber\" ></td>\r\n\r\n                <td class=\"f-datagrid-cell {{ 'footer-td-'+ col.field }}\"\r\n                    [style.width.px]=\"col.width\"\r\n                    [attr.colspan]=\"col.footer?.colspan || 1\"\r\n                    [style.display]=\"col.footer?.visible === false ? 'none': ''\"\r\n                    [attr.field]=\"col.field\" [attr.align]=\"col.footer?.align || col.align\"\r\n                    *ngFor=\"let col of columns; let ci = index;\"\r\n                    footer-cell-styler [column]=\"col\" [rowData]=\"row\" [rowIndex]=\"rowIndex\">\r\n                    <div class=\"f-datagrid-cell-content\" style=\"width: 100%\">\r\n                        <span class=\"f-datagrid-footer-cell\" *ngIf=\"col.footer && col.footer.formatter\" [innerHtml]=\"col | formatCellData: row : false: true | safe: 'html'\"></span>\r\n                        <span class=\"f-datagrid-footer-cell\" *ngIf=\"!col.footer || !col.footer.formatter\">{{ col | formatCellData: row : false: true }}</span>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</ng-template>\r\n\r\n<div #footerContainer class=\"f-datagrid-footer\" [style.height.px]=\"height\" style=\"overflow: hidden;\"\r\n    [style.width.px]=\"dg.width\"\r\n    [class.f-datagrid-footer-top]=\"position === 'top'\" [class.f-datagrid-footer-bottom]=\"position === 'bottom'\"\r\n    component-template [ctx]=\"{ footerData: data }\" [cmpRef]=\"dg.footerComponentType\"\r\n    [style.border-radius]=\"position === 'top'? '0': '0 0 7px 7px'\">\r\n    <ng-container *ngIf=\"!dg.footerTemplate && !dg.footerComponentType\">\r\n        \r\n        <div #fixedLeft class=\"f-datagrid-body-fixed-left\" \r\n            [style.width.px]=\"columnsGroup?.leftFixedWidth\" style=\"height: 100%;\"\r\n            *ngIf=\"!fast && (columnsGroup?.leftFixed && columnsGroup?.leftFixed.length  || dg?.showLineNumber || dg?.showCheckbox) \">\r\n\r\n            <ng-container *ngTemplateOutlet=\"footer_content_template; context: {$implicit: columnsGroup?.leftFixed, fixedLeft: true}\"></ng-container>\r\n            \r\n        </div>\r\n\r\n        <div #fixedRight class=\"f-datagrid-body-fixed-right\" style=\"position: absolute;border: 0;height: 100%;\"\r\n            [style.width.px]=\"dg.showBorder?  rightFixedColumnWidth : rightFixedColumnWidth + 1\" \r\n            *ngIf=\"!fast && columnsGroup?.rightFixed && columnsGroup?.rightFixed.length\">\r\n\r\n            <ng-container *ngTemplateOutlet=\"footer_content_template; context: {$implicit: columnsGroup?.rightFixed, fixedRight: true}\"></ng-container>\r\n            \r\n        </div>\r\n\r\n        <div #footerBody class=\"f-datagrid-footer-rows\" style=\"position: absolute; height: 100%;\" *ngIf=\"!fast\"\r\n            [style.left.px]=\"columnsGroup?.leftFixedWidth\" [style.width.px]=\"columnsGroup?.normalWidth\" >\r\n            <ng-container *ngTemplateOutlet=\"footer_content_template; context: {$implicit: columnsGroup?.normalColumns}\"></ng-container>\r\n        </div>\r\n\r\n\r\n        <div #footerBody2 class=\"f-datagrid-footer-rows\" style=\"position: absolute;width: 100%\" *ngIf=\"fast\">\r\n            <ng-container *ngTemplateOutlet=\"footer_content_template_fast; context: {$implicit: columnsGroup?.columns}\"></ng-container>\r\n        </div>\r\n\r\n\r\n    </ng-container>\r\n\r\n\r\n    <ng-container *ngIf=\"dg.footerTemplate && !dg.footerComponentType\" [ngTemplateOutlet]=\"dg.footerTemplate\" [ngTemplateOutletContext]=\"{footerData: data }\" ></ng-container>\r\n    \r\n</div>"
            }] }
];
/** @nocollapse */
DatagridFooterComponent.ctorParameters = () => [
    { type: Renderer2 },
    { type: Injector },
    { type: DatagridComponent, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => DatagridComponent)),] }] }
];
DatagridFooterComponent.propDecorators = {
    data: [{ type: Input }],
    height: [{ type: Input }],
    width: [{ type: Input }],
    columns: [{ type: Input }],
    columnsGroup: [{ type: Input }],
    position: [{ type: Input }],
    hasFixedColumns: [{ type: Input }],
    fast: [{ type: Input }],
    footerContainer: [{ type: ViewChild, args: ['footerContainer',] }],
    footerBody: [{ type: ViewChild, args: ['footerBody',] }],
    footerBody2: [{ type: ViewChild, args: ['footerBody2',] }],
    fixedLeft: [{ type: ViewChild, args: ['fixedLeft',] }],
    fr: [{ type: ViewChild, args: ['fixedRight',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype._footerData;
    /** @type {?} */
    DatagridFooterComponent.prototype.height;
    /** @type {?} */
    DatagridFooterComponent.prototype.width;
    /** @type {?} */
    DatagridFooterComponent.prototype.columns;
    /** @type {?} */
    DatagridFooterComponent.prototype.columnsGroup;
    /**
     * 显示位置，默认为 底部
     * @type {?}
     */
    DatagridFooterComponent.prototype.position;
    /**
     * 是否有左侧固定列
     * @type {?}
     */
    DatagridFooterComponent.prototype.hasFixedColumns;
    /** @type {?} */
    DatagridFooterComponent.prototype.fast;
    /** @type {?} */
    DatagridFooterComponent.prototype.footerContainer;
    /** @type {?} */
    DatagridFooterComponent.prototype.footerBody;
    /** @type {?} */
    DatagridFooterComponent.prototype.footerBody2;
    /** @type {?} */
    DatagridFooterComponent.prototype.fixedLeft;
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype.fixedRight;
    /** @type {?} */
    DatagridFooterComponent.prototype.scrollXSubscription;
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype.dgs;
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype.scrollX;
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype.showShadowCls;
    /** @type {?} */
    DatagridFooterComponent.prototype.rightFixedColumnWidth;
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype.cdRef;
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype.destroy$;
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype.render;
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype.injector;
    /** @type {?} */
    DatagridFooterComponent.prototype.dg;
}
//# sourceMappingURL=data:application/json;base64,