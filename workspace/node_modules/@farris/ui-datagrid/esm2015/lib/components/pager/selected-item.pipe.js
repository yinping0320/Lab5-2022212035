/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
export class SelectedItemPipe {
    /**
     * @param {?} data
     * @param {?} formatter
     * @return {?}
     */
    transform(data, formatter) {
        if (data) {
            if (formatter) {
                data = data.map((/**
                 * @param {?} d
                 * @return {?}
                 */
                d => {
                    return { id: d.id, text: formatter(d.data) };
                }));
            }
            else {
                data = data.map((/**
                 * @param {?} d
                 * @return {?}
                 */
                d => {
                    /** @type {?} */
                    const txt = [];
                    /** @type {?} */
                    const keys = Object.keys(d.data);
                    keys.forEach((/**
                     * @param {?} k
                     * @return {?}
                     */
                    k => {
                        txt.push(d.data[k]);
                    }));
                    return { id: d.id, text: txt.join(', ') };
                }));
            }
            return data;
        }
    }
}
SelectedItemPipe.decorators = [
    { type: Pipe, args: [{ name: 'selectedItem' },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0ZWQtaXRlbS5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1kYXRhZ3JpZC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BhZ2VyL3NlbGVjdGVkLWl0ZW0ucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFHcEQsTUFBTSxPQUFPLGdCQUFnQjs7Ozs7O0lBQ3pCLFNBQVMsQ0FBQyxJQUFTLEVBQUUsU0FBYztRQUMvQixJQUFJLElBQUksRUFBRTtZQUNOLElBQUksU0FBUyxFQUFFO2dCQUNYLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRzs7OztnQkFBRSxDQUFDLENBQUMsRUFBRTtvQkFDakIsT0FBTyxFQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUM7Z0JBQ2pELENBQUMsRUFBQyxDQUFDO2FBQ047aUJBQU87Z0JBQ0osSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHOzs7O2dCQUFDLENBQUMsQ0FBQyxFQUFFOzswQkFDVixHQUFHLEdBQUcsRUFBRTs7MEJBQ1IsSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztvQkFDaEMsSUFBSSxDQUFDLE9BQU87Ozs7b0JBQUMsQ0FBQyxDQUFDLEVBQUU7d0JBQ2IsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ3hCLENBQUMsRUFBQyxDQUFDO29CQUNILE9BQU8sRUFBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO2dCQUM3QyxDQUFDLEVBQUMsQ0FBQzthQUNOO1lBRUQsT0FBTyxJQUFJLENBQUM7U0FDZjtJQUNMLENBQUM7OztZQXJCSixJQUFJLFNBQUMsRUFBQyxJQUFJLEVBQUUsY0FBYyxFQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQFBpcGUoe25hbWU6ICdzZWxlY3RlZEl0ZW0nfSlcclxuZXhwb3J0IGNsYXNzIFNlbGVjdGVkSXRlbVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICAgIHRyYW5zZm9ybShkYXRhOiBhbnksIGZvcm1hdHRlcjogYW55KTogYW55IHtcclxuICAgICAgICBpZiAoZGF0YSkge1xyXG4gICAgICAgICAgICBpZiAoZm9ybWF0dGVyKSB7XHJcbiAgICAgICAgICAgICAgICBkYXRhID0gZGF0YS5tYXAoIGQgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7aWQ6IGQuaWQsIHRleHQ6ICBmb3JtYXR0ZXIoZC5kYXRhKSB9O1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSAge1xyXG4gICAgICAgICAgICAgICAgZGF0YSA9IGRhdGEubWFwKGQgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHR4dCA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhkLmRhdGEpO1xyXG4gICAgICAgICAgICAgICAgICAgIGtleXMuZm9yRWFjaChrID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHh0LnB1c2goZC5kYXRhW2tdKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge2lkOiBkLmlkLCB0ZXh0OiB0eHQuam9pbignLCAnKSB9O1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0=