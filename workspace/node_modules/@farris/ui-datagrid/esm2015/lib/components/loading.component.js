/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
/** @type {?} */
const loading_style_ring = `<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">
  <circle cx="50" cy="50" fill="none" r="30" stroke="#2c7dff" stroke-width="10"></circle>
  <circle cx="50" cy="50" fill="none" r="30" stroke="#d0eaff" stroke-width="10" stroke-linecap="square" transform="rotate(178.821 50 50)">
      <animateTransform attributeName="transform" type="rotate"
          calcMode="linear" values="0 50 50;180 50 50;720 50 50" keyTimes="0;0.5;1" dur="1.6s" begin="0s"
          repeatCount="indefinite"></animateTransform>
      <animate attributeName="stroke-dasharray" calcMode="linear"
          values="9.42477796076938 179.0707812546182;150.79644737231007 37.6991118430775;9.42477796076938 179.0707812546182"
          keyTimes="0;0.5;1" dur="1.6" begin="0s" repeatCount="indefinite"></animate>
  </circle>
</svg>`;
export class DataGridLoadingComponent {
    /**
     * @param {?} domSanitizer
     */
    constructor(domSanitizer) {
        this.domSanitizer = domSanitizer;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.loading) {
            this.loading = this.domSanitizer.bypassSecurityTrustHtml(this.loading);
        }
        else {
            this.loading = this.domSanitizer.bypassSecurityTrustHtml(loading_style_ring);
        }
    }
}
DataGridLoadingComponent.decorators = [
    { type: Component, args: [{
                selector: 'datagrid-loading',
                template: `
    <div style="width:100%;height:100%;position:absolute;top:0;left: 0;background:rgba(255,255,255,0);z-index: 90000000;pointer-events: unset;">
        <div style="width: 50px;height: 50px;position: relative;top: 50%;margin-top: -25px;left: 50%;margin-left: -25px;"
        [innerHTML]="loading" >
        </div>
    </div>
    `
            }] }
];
/** @nocollapse */
DataGridLoadingComponent.ctorParameters = () => [
    { type: DomSanitizer }
];
DataGridLoadingComponent.propDecorators = {
    loading: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    DataGridLoadingComponent.prototype.loading;
    /**
     * @type {?}
     * @private
     */
    DataGridLoadingComponent.prototype.domSanitizer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWRhdGFncmlkLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbG9hZGluZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxZQUFZLEVBQVksTUFBTSwyQkFBMkIsQ0FBQzs7TUFFN0Qsa0JBQWtCLEdBQ3hCOzs7Ozs7Ozs7O09BVU87QUFZUCxNQUFNLE9BQU8sd0JBQXdCOzs7O0lBSWpDLFlBQW9CLFlBQTBCO1FBQTFCLGlCQUFZLEdBQVosWUFBWSxDQUFjO0lBQUksQ0FBQzs7OztJQUVuRCxRQUFRO1FBQ0osSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2QsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUMxRTthQUFNO1lBQ0gsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLHVCQUF1QixDQUFDLGtCQUFrQixDQUFDLENBQUM7U0FDaEY7SUFDTCxDQUFDOzs7WUF0QkosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLFFBQVEsRUFBRTs7Ozs7O0tBTVQ7YUFDSjs7OztZQXhCUSxZQUFZOzs7c0JBMkJoQixLQUFLOzs7O0lBQU4sMkNBQXNCOzs7OztJQUVWLGdEQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEb21TYW5pdGl6ZXIsIFNhZmVIdG1sIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XHJcblxyXG5jb25zdCBsb2FkaW5nX3N0eWxlX3JpbmcgPVxyXG5gPHN2ZyB3aWR0aD1cIjEwMCVcIiBoZWlnaHQ9XCIxMDAlXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMTAwIDEwMFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZFwiPlxyXG4gIDxjaXJjbGUgY3g9XCI1MFwiIGN5PVwiNTBcIiBmaWxsPVwibm9uZVwiIHI9XCIzMFwiIHN0cm9rZT1cIiMyYzdkZmZcIiBzdHJva2Utd2lkdGg9XCIxMFwiPjwvY2lyY2xlPlxyXG4gIDxjaXJjbGUgY3g9XCI1MFwiIGN5PVwiNTBcIiBmaWxsPVwibm9uZVwiIHI9XCIzMFwiIHN0cm9rZT1cIiNkMGVhZmZcIiBzdHJva2Utd2lkdGg9XCIxMFwiIHN0cm9rZS1saW5lY2FwPVwic3F1YXJlXCIgdHJhbnNmb3JtPVwicm90YXRlKDE3OC44MjEgNTAgNTApXCI+XHJcbiAgICAgIDxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9XCJ0cmFuc2Zvcm1cIiB0eXBlPVwicm90YXRlXCJcclxuICAgICAgICAgIGNhbGNNb2RlPVwibGluZWFyXCIgdmFsdWVzPVwiMCA1MCA1MDsxODAgNTAgNTA7NzIwIDUwIDUwXCIga2V5VGltZXM9XCIwOzAuNTsxXCIgZHVyPVwiMS42c1wiIGJlZ2luPVwiMHNcIlxyXG4gICAgICAgICAgcmVwZWF0Q291bnQ9XCJpbmRlZmluaXRlXCI+PC9hbmltYXRlVHJhbnNmb3JtPlxyXG4gICAgICA8YW5pbWF0ZSBhdHRyaWJ1dGVOYW1lPVwic3Ryb2tlLWRhc2hhcnJheVwiIGNhbGNNb2RlPVwibGluZWFyXCJcclxuICAgICAgICAgIHZhbHVlcz1cIjkuNDI0Nzc3OTYwNzY5MzggMTc5LjA3MDc4MTI1NDYxODI7MTUwLjc5NjQ0NzM3MjMxMDA3IDM3LjY5OTExMTg0MzA3NzU7OS40MjQ3Nzc5NjA3NjkzOCAxNzkuMDcwNzgxMjU0NjE4MlwiXHJcbiAgICAgICAgICBrZXlUaW1lcz1cIjA7MC41OzFcIiBkdXI9XCIxLjZcIiBiZWdpbj1cIjBzXCIgcmVwZWF0Q291bnQ9XCJpbmRlZmluaXRlXCI+PC9hbmltYXRlPlxyXG4gIDwvY2lyY2xlPlxyXG48L3N2Zz5gO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2RhdGFncmlkLWxvYWRpbmcnLFxyXG4gICAgdGVtcGxhdGU6IGBcclxuICAgIDxkaXYgc3R5bGU9XCJ3aWR0aDoxMDAlO2hlaWdodDoxMDAlO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6IDA7YmFja2dyb3VuZDpyZ2JhKDI1NSwyNTUsMjU1LDApO3otaW5kZXg6IDkwMDAwMDAwO3BvaW50ZXItZXZlbnRzOiB1bnNldDtcIj5cclxuICAgICAgICA8ZGl2IHN0eWxlPVwid2lkdGg6IDUwcHg7aGVpZ2h0OiA1MHB4O3Bvc2l0aW9uOiByZWxhdGl2ZTt0b3A6IDUwJTttYXJnaW4tdG9wOiAtMjVweDtsZWZ0OiA1MCU7bWFyZ2luLWxlZnQ6IC0yNXB4O1wiXHJcbiAgICAgICAgW2lubmVySFRNTF09XCJsb2FkaW5nXCIgPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgICBgXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEYXRhR3JpZExvYWRpbmdDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICAgIEBJbnB1dCgpIGxvYWRpbmc6IGFueTtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGRvbVNhbml0aXplcjogRG9tU2FuaXRpemVyKSB7IH1cclxuXHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5sb2FkaW5nKSB7XHJcbiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IHRoaXMuZG9tU2FuaXRpemVyLmJ5cGFzc1NlY3VyaXR5VHJ1c3RIdG1sKHRoaXMubG9hZGluZyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gdGhpcy5kb21TYW5pdGl6ZXIuYnlwYXNzU2VjdXJpdHlUcnVzdEh0bWwobG9hZGluZ19zdHlsZV9yaW5nKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxufVxyXG4iXX0=