import { ColumnGroup, DataColumn, FilterCondition } from './../types';
import { EntityFilter } from '@farris/ui-common/types';
export interface RowDataChanges {
    [id: string]: any;
}
export interface FarrisDatagridState {
    [key: string]: any;
    width?: number;
    height?: number;
    rowHeight?: number;
    idField?: string;
    data?: any;
    /** 当前页数据 */
    currentPageData?: any;
    originalData?: any;
    showHeader?: boolean;
    headerHeight?: number;
    pageIndex?: number;
    pageSize?: number;
    pagerHeight?: number;
    pagination?: boolean;
    columns: Array<DataColumn> | Array<DataColumn>[];
    flatColumns?: Array<DataColumn>;
    fitColumns: boolean;
    autoFitColumns?: boolean;
    showLineNumber?: boolean;
    showCheckbox?: boolean;
    checkboxColumnWidth: number;
    multiSelect?: boolean;
    /** 当启用多选时，点击行选中，只允许且只有一行被选中。 */
    onlySelectSelf: boolean;
    selectOnCheck: boolean;
    checkOnSelect: boolean;
    selections?: SelectedRow[];
    checkedRows?: SelectedRow[];
    currentRow?: SelectedRow;
    currentCell?: CellInfo;
    columnsGroup: ColumnGroup;
    virtualized?: boolean;
    showFooter?: boolean;
    /** 是否启用异步虚拟加载数据: false - 客户端内存中取数；true - 远端服务器加载数据, 默认值为 false */
    virtualizedAsyncLoad?: boolean;
    virtual?: VirtualizedState;
    sortName?: string;
    sortOrder?: string;
    multiSort?: boolean;
    remoteSort?: boolean;
    /** 服务器端过滤 */
    remoteFilter?: boolean;
    /** 过滤条件 */
    conditions?: EntityFilter | FilterCondition;
    changes: RowDataChanges;
    groupRows?: boolean;
    groupField?: string;
    groupFooter?: boolean;
    /** 显示分组列 */
    showGroupColumn?: boolean;
    mergeCell?: boolean;
    enableClientSortForMergeCell?: boolean;
    /** 存储组件初始时的相关属性设置 */
    initialOptions?: any;
}
export interface VirtualizedState {
    /** 虚拟加载且不显示分页条时，记录加载新记录时的索引值 */
    rowIndex: number;
    /** 数据显示的索引值 */
    startIndex?: number;
    scrollTop?: number;
    virtualRows?: any;
    topHideHeight?: number;
    bottomHideHeight?: number;
    /** 页脚数据 */
    footer?: any[];
    /** 是否由滚动条触发 */
    isScrollChange?: boolean;
}
export interface SelectedRow {
    index: number;
    id: any;
    data: any;
    /** 中间位置行引用 */
    dr?: any;
    /** 左侧位置行引用 */
    drl?: any;
    /** 右侧位置行引用 */
    drr?: any;
    editors?: any[];
}
export declare const initDataGridState: FarrisDatagridState;
export interface CellInfo {
    isEditing?: boolean;
    rowData?: any;
    rowId?: any;
    rowIndex?: number;
    field?: string;
    cellElement?: any;
    cellRef?: any;
    editor?: any;
    column?: any;
    cellEditorRef?: any;
    lastRow?: boolean;
}
export interface DataResult {
    footer?: any[];
    items: any[];
    total?: number;
    pageIndex?: number;
    pageSize?: number;
}
/** 行索引 */
export declare const ROW_INDEX_FIELD = "__row_index__";
/** 是否为分组行 */
export declare const IS_GROUP_ROW_FIELD = "__group__";
/** 引用的分组行属性 */
export declare const GROUP_ROW_FIELD = "__group_parent_id__";
/** 是否为分组合计行 */
export declare const IS_GROUP_FOOTER_ROW_FIELD = "__group_footer__";
export declare const GROUP_VISIBLE_FIELD = "__group_visible__";
export declare const GROUP_LEVEL_FIELD = "__group_level__";
export interface DatagridGroupRow {
    /** 标识此数据行为分组行 */
    [IS_GROUP_ROW_FIELD]: boolean;
    /** 分组等级 */
    level: number;
    /** 所在行数据 */
    data: any;
    /** 分组字段值 */
    value: any;
    /** 分组行是否可见 */
    [GROUP_VISIBLE_FIELD]: boolean;
    /** 是否展开分组行 */
    expanded: boolean;
    /** 分组字段 */
    field: string;
    colspan: number;
    /** 分组总记录数 */
    total: number;
    /** 分组数据行 */
    rows: any;
    /** 父级分组行 */
    [GROUP_ROW_FIELD]: any;
}
export declare const IgnoreProperties: string[];
