import { OnInit, EventEmitter, OnChanges, ElementRef, ChangeDetectorRef, ViewContainerRef, OnDestroy, Injector, AfterViewInit, SimpleChanges } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { ColumnFormatService } from '@farris/ui-common/column';
import { CellContext, DataColumn } from '../../types/data-column';
import { DatagridComponent } from '../../datagrid.component';
import { DatagridRowDirective } from './datagrid-row.directive';
export declare class DatagridCellComponent implements OnInit, OnDestroy, AfterViewInit, OnChanges {
    dg: DatagridComponent;
    dr: DatagridRowDirective;
    el: ElementRef;
    cd: ChangeDetectorRef;
    private injector;
    colFormatSer: ColumnFormatService;
    private domSanitizer;
    width: number;
    height: number;
    cls: string;
    column: DataColumn;
    rowData: any;
    rowIndex: number;
    lastColumn: boolean;
    private _isEditing;
    controlHeight: string;
    isEditing: boolean;
    isSelected: boolean;
    cellContainer: ElementRef;
    cellTemplateVcr: ViewContainerRef;
    private _cellEditorTemplate;
    cellEditorTemplate: ViewContainerRef;
    cellEditor: any;
    cellClick: EventEmitter<{}>;
    cellDblClick: EventEmitter<{}>;
    cellContext: Partial<CellContext>;
    readonly value: any;
    readonly formControl: any;
    readonly cellFormatterIsFn: boolean;
    cellStyler: any;
    private dfs;
    private dgs;
    private cellSubscription;
    private rowUpdateSubscription;
    private safePipe;
    private render;
    private ro;
    canEdit: () => import("../../types/data-column").GridEditor;
    private cfr;
    constructor(dg: DatagridComponent, dr: DatagridRowDirective, el: ElementRef, cd: ChangeDetectorRef, injector: Injector, colFormatSer: ColumnFormatService, domSanitizer: DomSanitizer);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private initCellTemplateContext;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private buildCustomCellStyle;
    updateValue(val?: any): void;
}
