import { OnInit, ElementRef, AfterViewInit, Injector } from '@angular/core';
import { ChangeDetectorRef, NgZone, OnDestroy } from '@angular/core';
import { DataColumn } from '../../types';
import { DatagridComponent } from '../../datagrid.component';
import { DatagridBodyComponent } from './datagrid-body.component';
export declare class DatagridRowsComponent implements OnInit, AfterViewInit, OnDestroy {
    cd: ChangeDetectorRef;
    dg: DatagridComponent;
    dgb: DatagridBodyComponent;
    el: ElementRef;
    private injector;
    private ngZone;
    startRowIndex: number;
    data: any;
    columns: DataColumn[];
    tableEl: ElementRef;
    /** 是否为右侧固定列。默认为 false */
    fixedRight: boolean;
    /** 是否有左侧固定列 */
    hasFixedColumns: boolean;
    width: number;
    isGroupRow: string;
    /** 分组行父ID字段 */
    groupRow: string;
    isGroupFooter: string;
    visible: string;
    groupLevelField: string;
    filterConditions: string;
    readonly groupSummaryDataInGroupRow: boolean;
    checkedRows: any[];
    private ro;
    private scrollToCurrentRowSubscription;
    private subscriptions;
    private destroy$;
    constructor(cd: ChangeDetectorRef, dg: DatagridComponent, dgb: DatagridBodyComponent, el: ElementRef, injector: Injector, ngZone: NgZone);
    private listenEvent;
    ngOnInit(): void;
    ngOnDestroy(): void;
    private _toggleGroupRow;
    private toggleAllGroupRows;
    private unSubscriptions;
    ngAfterViewInit(): void;
    getGroupColumn(field: any): DataColumn;
    private detectChanges;
    trackByField(index: any, item: any): any;
    isElementInViewport(el: any): boolean;
    private _elementIntoView;
    private scrollToFirstSelectedRow;
    toggleGroupRow(row: any, index: any, open: any, $event?: MouseEvent): void;
    private mergeInfo;
    showCell(col: DataColumn, rowIndex: number): boolean;
    getRowSpan(col: DataColumn, rowIndex: number): any;
    getGroupSummaryData(groupId: string): any;
}
