/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-08-21 15:44:21
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-08-22 19:19:49
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
import { Injectable } from '@angular/core';
import { DefaultDatagridValidatorMessager as ddvm } from '../types/datagrid-validator';
var ValidatorMessagerService = /** @class */ (function () {
    function ValidatorMessagerService() {
    }
    /**
     * @param {?} validatorName
     * @param {?} validators
     * @return {?}
     */
    ValidatorMessagerService.prototype.getValidatorErrorMessage = /**
     * @param {?} validatorName
     * @param {?} validators
     * @return {?}
     */
    function (validatorName, validators) {
        validatorName = validatorName.toLowerCase();
        /** @type {?} */
        var validator = validators.find((/**
         * @param {?} v
         * @return {?}
         */
        function (v) { return v.type.toLowerCase() === validatorName; }));
        if (validator && validator.messager) {
            return validator.messager;
        }
        else {
            return ddvm[validatorName] ? ddvm[validatorName] : '验证不通过！';
        }
    };
    ValidatorMessagerService.decorators = [
        { type: Injectable }
    ];
    return ValidatorMessagerService;
}());
export { ValidatorMessagerService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdG9yLW1lc3NhZ2VyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWRhdGFncmlkLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL3ZhbGlkYXRvci1tZXNzYWdlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQVFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLGdDQUFnQyxJQUFJLElBQUksRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3ZGO0lBQUE7SUFhQSxDQUFDOzs7Ozs7SUFWRywyREFBd0I7Ozs7O0lBQXhCLFVBQXlCLGFBQXFCLEVBQUUsVUFBK0I7UUFDM0UsYUFBYSxHQUFHLGFBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQzs7WUFDdEMsU0FBUyxHQUFHLFVBQVUsQ0FBQyxJQUFJOzs7O1FBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxLQUFLLGFBQWEsRUFBdEMsQ0FBc0MsRUFBQztRQUM5RSxJQUFJLFNBQVMsSUFBSSxTQUFTLENBQUMsUUFBUSxFQUFFO1lBQ2pDLE9BQU8sU0FBUyxDQUFDLFFBQVEsQ0FBQztTQUM3QjthQUFNO1lBQ0gsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDO1NBQy9EO0lBQ0wsQ0FBQzs7Z0JBWEosVUFBVTs7SUFhWCwrQkFBQztDQUFBLEFBYkQsSUFhQztTQVpZLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIEBBdXRob3I6IOeWr+eLguengOaJjShMdWNhcyBIdWFuZylcclxuICogQERhdGU6IDIwMTktMDgtMjEgMTU6NDQ6MjFcclxuICogQExhc3RFZGl0b3JzOiDnlq/ni4Lnp4DmiY0oTHVjYXMgSHVhbmcpXHJcbiAqIEBMYXN0RWRpdFRpbWU6IDIwMTktMDgtMjIgMTk6MTk6NDlcclxuICogQFFROiAxMDU1ODE4MjM5XHJcbiAqIEBWZXJzaW9uOiB2MC4wLjFcclxuICovXHJcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRGF0YWdyaWRWYWxpZGF0b3IgfSBmcm9tICcuLi90eXBlcy9kYXRhZ3JpZC12YWxpZGF0b3InO1xyXG5pbXBvcnQgeyBEZWZhdWx0RGF0YWdyaWRWYWxpZGF0b3JNZXNzYWdlciBhcyBkZHZtIH0gZnJvbSAnLi4vdHlwZXMvZGF0YWdyaWQtdmFsaWRhdG9yJztcclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgVmFsaWRhdG9yTWVzc2FnZXJTZXJ2aWNlIHtcclxuXHJcbiAgICBnZXRWYWxpZGF0b3JFcnJvck1lc3NhZ2UodmFsaWRhdG9yTmFtZTogc3RyaW5nLCB2YWxpZGF0b3JzOiBEYXRhZ3JpZFZhbGlkYXRvcltdKSB7XHJcbiAgICAgICAgdmFsaWRhdG9yTmFtZSA9IHZhbGlkYXRvck5hbWUudG9Mb3dlckNhc2UoKTtcclxuICAgICAgICBjb25zdCB2YWxpZGF0b3IgPSB2YWxpZGF0b3JzLmZpbmQodiA9PiB2LnR5cGUudG9Mb3dlckNhc2UoKSA9PT0gdmFsaWRhdG9yTmFtZSk7XHJcbiAgICAgICAgaWYgKHZhbGlkYXRvciAmJiB2YWxpZGF0b3IubWVzc2FnZXIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHZhbGlkYXRvci5tZXNzYWdlcjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gZGR2bVt2YWxpZGF0b3JOYW1lXSA/IGRkdm1bdmFsaWRhdG9yTmFtZV0gOiAn6aqM6K+B5LiN6YCa6L+H77yBJztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==