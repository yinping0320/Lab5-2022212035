/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { InjectionToken } from '@angular/core';
/** @type {?} */
export var SCROLLBAR_CONFIG = new InjectionToken('PERFECT_SCROLLBAR_CONFIG');
var Geometry = /** @class */ (function () {
    function Geometry(x, y, w, h) {
        this.x = x;
        this.y = y;
        this.w = w;
        this.h = h;
    }
    return Geometry;
}());
export { Geometry };
if (false) {
    /** @type {?} */
    Geometry.prototype.x;
    /** @type {?} */
    Geometry.prototype.y;
    /** @type {?} */
    Geometry.prototype.w;
    /** @type {?} */
    Geometry.prototype.h;
}
var Position = /** @class */ (function () {
    function Position(x, y) {
        this.x = x;
        this.y = y;
    }
    return Position;
}());
export { Position };
if (false) {
    /** @type {?} */
    Position.prototype.x;
    /** @type {?} */
    Position.prototype.y;
}
/** @type {?} */
export var ScrollbarEvents = [
    'psScrollY',
    'psScrollX',
    'psScrollUp',
    'psScrollDown',
    'psScrollLeft',
    'psScrollRight',
    'psYReachEnd',
    'psYReachStart',
    'psXReachEnd',
    'psXReachStart'
];
/**
 * @record
 */
export function ScrollbarConfigInterface() { }
if (false) {
    /** @type {?|undefined} */
    ScrollbarConfigInterface.prototype.handlers;
    /** @type {?|undefined} */
    ScrollbarConfigInterface.prototype.wheelSpeed;
    /** @type {?|undefined} */
    ScrollbarConfigInterface.prototype.swipeEasing;
    /** @type {?|undefined} */
    ScrollbarConfigInterface.prototype.suppressScrollX;
    /** @type {?|undefined} */
    ScrollbarConfigInterface.prototype.suppressScrollY;
    /** @type {?|undefined} */
    ScrollbarConfigInterface.prototype.wheelPropagation;
    /** @type {?|undefined} */
    ScrollbarConfigInterface.prototype.useBothWheelAxes;
    /** @type {?|undefined} */
    ScrollbarConfigInterface.prototype.scrollingThreshold;
    /** @type {?|undefined} */
    ScrollbarConfigInterface.prototype.minScrollbarLength;
    /** @type {?|undefined} */
    ScrollbarConfigInterface.prototype.maxScrollbarLength;
    /** @type {?|undefined} */
    ScrollbarConfigInterface.prototype.scrollXMarginOffset;
    /** @type {?|undefined} */
    ScrollbarConfigInterface.prototype.scrollYMarginOffset;
}
var ScrollbarConfig = /** @class */ (function () {
    function ScrollbarConfig(config) {
        if (config === void 0) { config = {}; }
        this.assign(config);
    }
    /**
     * @param {?=} config
     * @return {?}
     */
    ScrollbarConfig.prototype.assign = /**
     * @param {?=} config
     * @return {?}
     */
    function (config) {
        if (config === void 0) { config = {}; }
        for (var key in config) {
            this[(/** @type {?} */ (key))] = config[(/** @type {?} */ (key))];
        }
    };
    return ScrollbarConfig;
}());
export { ScrollbarConfig };
if (false) {
    /** @type {?} */
    ScrollbarConfig.prototype.handlers;
    /** @type {?} */
    ScrollbarConfig.prototype.wheelSpeed;
    /** @type {?} */
    ScrollbarConfig.prototype.swipeEasing;
    /** @type {?} */
    ScrollbarConfig.prototype.suppressScrollX;
    /** @type {?} */
    ScrollbarConfig.prototype.suppressScrollY;
    /** @type {?} */
    ScrollbarConfig.prototype.wheelPropagation;
    /** @type {?} */
    ScrollbarConfig.prototype.useBothWheelAxes;
    /** @type {?} */
    ScrollbarConfig.prototype.scrollingThreshold;
    /** @type {?} */
    ScrollbarConfig.prototype.minScrollbarLength;
    /** @type {?} */
    ScrollbarConfig.prototype.maxScrollbarLength;
    /** @type {?} */
    ScrollbarConfig.prototype.scrollXMarginOffset;
    /** @type {?} */
    ScrollbarConfig.prototype.scrollYMarginOffset;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsYmFyLmludGVyZmFjZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWRhdGFncmlkLyIsInNvdXJjZXMiOlsibGliL3Njcm9sbGJhci9zY3JvbGxiYXIuaW50ZXJmYWNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFL0MsTUFBTSxLQUFPLGdCQUFnQixHQUFHLElBQUksY0FBYyxDQUM5QywwQkFBMEIsQ0FDN0I7QUFFRDtJQU9JLGtCQUFZLENBQVMsRUFBRSxDQUFTLEVBQUUsQ0FBUyxFQUFFLENBQVM7UUFDbEQsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDZixDQUFDO0lBQ0wsZUFBQztBQUFELENBQUMsQUFiRCxJQWFDOzs7O0lBWkcscUJBQWlCOztJQUNqQixxQkFBaUI7O0lBRWpCLHFCQUFpQjs7SUFDakIscUJBQWlCOztBQVVyQjtJQUlJLGtCQUFZLENBQTJCLEVBQUUsQ0FBMkI7UUFDaEUsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNmLENBQUM7SUFDTCxlQUFDO0FBQUQsQ0FBQyxBQVJELElBUUM7Ozs7SUFQRyxxQkFBbUM7O0lBQ25DLHFCQUFtQzs7O0FBb0J2QyxNQUFNLEtBQU8sZUFBZSxHQUFxQjtJQUM3QyxXQUFXO0lBQ1gsV0FBVztJQUVYLFlBQVk7SUFDWixjQUFjO0lBQ2QsY0FBYztJQUNkLGVBQWU7SUFFZixhQUFhO0lBQ2IsZUFBZTtJQUNmLGFBQWE7SUFDYixlQUFlO0NBQ2xCOzs7O0FBRUQsOENBbUJDOzs7SUFsQkcsNENBQW9COztJQUVwQiw4Q0FBb0I7O0lBQ3BCLCtDQUFzQjs7SUFFdEIsbURBQTBCOztJQUMxQixtREFBMEI7O0lBRTFCLG9EQUEyQjs7SUFDM0Isb0RBQTJCOztJQUUzQixzREFBNEI7O0lBRTVCLHNEQUE0Qjs7SUFDNUIsc0RBQTRCOztJQUU1Qix1REFBNkI7O0lBQzdCLHVEQUE2Qjs7QUFHakM7SUFvQkkseUJBQVksTUFBcUM7UUFBckMsdUJBQUEsRUFBQSxXQUFxQztRQUM3QyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3hCLENBQUM7Ozs7O0lBRU0sZ0NBQU07Ozs7SUFBYixVQUFjLE1BQXFDO1FBQXJDLHVCQUFBLEVBQUEsV0FBcUM7UUFDL0MsS0FBSyxJQUFNLEdBQUcsSUFBSSxNQUFNLEVBQUU7WUFDdEIsSUFBSSxDQUFDLG1CQUFBLEdBQUcsRUFBeUIsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxtQkFBQSxHQUFHLEVBQWtDLENBQUMsQ0FBQztTQUN0RjtJQUNMLENBQUM7SUFDTCxzQkFBQztBQUFELENBQUMsQUE3QkQsSUE2QkM7Ozs7SUE1QkcsbUNBQTJCOztJQUUzQixxQ0FBMkI7O0lBQzNCLHNDQUE2Qjs7SUFFN0IsMENBQWlDOztJQUNqQywwQ0FBaUM7O0lBRWpDLDJDQUFrQzs7SUFDbEMsMkNBQWtDOztJQUVsQyw2Q0FBbUM7O0lBRW5DLDZDQUFtQzs7SUFDbkMsNkNBQW1DOztJQUVuQyw4Q0FBb0M7O0lBQ3BDLDhDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGlvblRva2VuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5leHBvcnQgY29uc3QgU0NST0xMQkFSX0NPTkZJRyA9IG5ldyBJbmplY3Rpb25Ub2tlbihcclxuICAgICdQRVJGRUNUX1NDUk9MTEJBUl9DT05GSUcnXHJcbik7XHJcblxyXG5leHBvcnQgY2xhc3MgR2VvbWV0cnkge1xyXG4gICAgcHVibGljIHg6IG51bWJlcjtcclxuICAgIHB1YmxpYyB5OiBudW1iZXI7XHJcblxyXG4gICAgcHVibGljIHc6IG51bWJlcjtcclxuICAgIHB1YmxpYyBoOiBudW1iZXI7XHJcblxyXG4gICAgY29uc3RydWN0b3IoeDogbnVtYmVyLCB5OiBudW1iZXIsIHc6IG51bWJlciwgaDogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy54ID0geDtcclxuICAgICAgICB0aGlzLnkgPSB5O1xyXG4gICAgICAgIHRoaXMudyA9IHc7XHJcbiAgICAgICAgdGhpcy5oID0gaDtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFBvc2l0aW9uIHtcclxuICAgIHB1YmxpYyB4OiBudW1iZXIgfCAnc3RhcnQnIHwgJ2VuZCc7XHJcbiAgICBwdWJsaWMgeTogbnVtYmVyIHwgJ3N0YXJ0JyB8ICdlbmQnO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHg6IG51bWJlciB8ICdzdGFydCcgfCAnZW5kJywgeTogbnVtYmVyIHwgJ3N0YXJ0JyB8ICdlbmQnKSB7XHJcbiAgICAgICAgdGhpcy54ID0geDtcclxuICAgICAgICB0aGlzLnkgPSB5O1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgdHlwZSBTY3JvbGxiYXJFdmVudCA9XHJcbiAgICB8ICdwc1Njcm9sbFknXHJcbiAgICB8ICdwc1Njcm9sbFgnXHJcbiAgICB8ICdwc1Njcm9sbFVwJ1xyXG4gICAgfCAncHNTY3JvbGxEb3duJ1xyXG4gICAgfCAncHNTY3JvbGxMZWZ0J1xyXG4gICAgfCAncHNTY3JvbGxSaWdodCdcclxuICAgIHwgJ3BzWVJlYWNoRW5kJ1xyXG4gICAgfCAncHNZUmVhY2hTdGFydCdcclxuICAgIHwgJ3BzWFJlYWNoRW5kJ1xyXG4gICAgfCAncHNYUmVhY2hTdGFydCc7XHJcblxyXG5leHBvcnQgY29uc3QgU2Nyb2xsYmFyRXZlbnRzOiBTY3JvbGxiYXJFdmVudFtdID0gW1xyXG4gICAgJ3BzU2Nyb2xsWScsXHJcbiAgICAncHNTY3JvbGxYJyxcclxuXHJcbiAgICAncHNTY3JvbGxVcCcsXHJcbiAgICAncHNTY3JvbGxEb3duJyxcclxuICAgICdwc1Njcm9sbExlZnQnLFxyXG4gICAgJ3BzU2Nyb2xsUmlnaHQnLFxyXG5cclxuICAgICdwc1lSZWFjaEVuZCcsXHJcbiAgICAncHNZUmVhY2hTdGFydCcsXHJcbiAgICAncHNYUmVhY2hFbmQnLFxyXG4gICAgJ3BzWFJlYWNoU3RhcnQnXHJcbl07XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFNjcm9sbGJhckNvbmZpZ0ludGVyZmFjZSB7XHJcbiAgICBoYW5kbGVycz86IHN0cmluZ1tdO1xyXG5cclxuICAgIHdoZWVsU3BlZWQ/OiBudW1iZXI7XHJcbiAgICBzd2lwZUVhc2luZz86IGJvb2xlYW47XHJcblxyXG4gICAgc3VwcHJlc3NTY3JvbGxYPzogYm9vbGVhbjtcclxuICAgIHN1cHByZXNzU2Nyb2xsWT86IGJvb2xlYW47XHJcblxyXG4gICAgd2hlZWxQcm9wYWdhdGlvbj86IGJvb2xlYW47XHJcbiAgICB1c2VCb3RoV2hlZWxBeGVzPzogYm9vbGVhbjtcclxuXHJcbiAgICBzY3JvbGxpbmdUaHJlc2hvbGQ/OiBudW1iZXI7XHJcblxyXG4gICAgbWluU2Nyb2xsYmFyTGVuZ3RoPzogbnVtYmVyO1xyXG4gICAgbWF4U2Nyb2xsYmFyTGVuZ3RoPzogbnVtYmVyO1xyXG5cclxuICAgIHNjcm9sbFhNYXJnaW5PZmZzZXQ/OiBudW1iZXI7XHJcbiAgICBzY3JvbGxZTWFyZ2luT2Zmc2V0PzogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgU2Nyb2xsYmFyQ29uZmlnIGltcGxlbWVudHMgU2Nyb2xsYmFyQ29uZmlnSW50ZXJmYWNlIHtcclxuICAgIHB1YmxpYyBoYW5kbGVycz86IHN0cmluZ1tdO1xyXG5cclxuICAgIHB1YmxpYyB3aGVlbFNwZWVkPzogbnVtYmVyO1xyXG4gICAgcHVibGljIHN3aXBlRWFzaW5nPzogYm9vbGVhbjtcclxuXHJcbiAgICBwdWJsaWMgc3VwcHJlc3NTY3JvbGxYPzogYm9vbGVhbjtcclxuICAgIHB1YmxpYyBzdXBwcmVzc1Njcm9sbFk/OiBib29sZWFuO1xyXG5cclxuICAgIHB1YmxpYyB3aGVlbFByb3BhZ2F0aW9uPzogYm9vbGVhbjtcclxuICAgIHB1YmxpYyB1c2VCb3RoV2hlZWxBeGVzPzogYm9vbGVhbjtcclxuXHJcbiAgICBwdWJsaWMgc2Nyb2xsaW5nVGhyZXNob2xkPzogbnVtYmVyO1xyXG5cclxuICAgIHB1YmxpYyBtaW5TY3JvbGxiYXJMZW5ndGg/OiBudW1iZXI7XHJcbiAgICBwdWJsaWMgbWF4U2Nyb2xsYmFyTGVuZ3RoPzogbnVtYmVyO1xyXG5cclxuICAgIHB1YmxpYyBzY3JvbGxYTWFyZ2luT2Zmc2V0PzogbnVtYmVyO1xyXG4gICAgcHVibGljIHNjcm9sbFlNYXJnaW5PZmZzZXQ/OiBudW1iZXI7XHJcblxyXG4gICAgY29uc3RydWN0b3IoY29uZmlnOiBTY3JvbGxiYXJDb25maWdJbnRlcmZhY2UgPSB7fSkge1xyXG4gICAgICAgIHRoaXMuYXNzaWduKGNvbmZpZyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzc2lnbihjb25maWc6IFNjcm9sbGJhckNvbmZpZ0ludGVyZmFjZSA9IHt9KSB7XHJcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gY29uZmlnKSB7XHJcbiAgICAgICAgICAgIHRoaXNba2V5IGFzIGtleW9mIFNjcm9sbGJhckNvbmZpZ10gPSBjb25maWdba2V5IGFzIGtleW9mIFNjcm9sbGJhckNvbmZpZ0ludGVyZmFjZV07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==