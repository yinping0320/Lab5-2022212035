/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DatagridComponent } from './../../datagrid.component';
import { Component, Injector, Input } from '@angular/core';
/**
 * 自动高度
 * 禁用分页，禁用固定表头，禁用虚拟加载，禁用固定列
 * 支持单元格编辑, 支持排序, 支持拖动列宽
 */
var AutoHeightComponent = /** @class */ (function () {
    function AutoHeightComponent(dg, inject) {
        this.dg = dg;
        this.inject = inject;
    }
    /**
     * @return {?}
     */
    AutoHeightComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    AutoHeightComponent.decorators = [
        { type: Component, args: [{
                    selector: 'auto-height',
                    template: "<table style=\"width:100%\" class=\"f-datagrid-ah\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n    <colgroup>\r\n        <col *ngIf=\"dg.showLineNumber\" [width]=\"dg.lineNumberWidth + 'px'\">\r\n        <ng-container *ngFor=\"let col of columnsGroup?.normalColumns\">\r\n            <col [width]=\"col.width + 'px'\">\r\n        </ng-container>\r\n    </colgroup>\r\n    <thead>\r\n        <tr class=\"f-datagrid-header-row\" *ngFor=\"let cols of columns\">\r\n            <td class=\"f-datagrid-header-cell\" *ngIf=\"dg.showLineNumber\"></td>\r\n            <ng-container *ngFor=\"let col of cols\">\r\n                <ng-container *ngIf=\"col.colspan && !col.fixed\">\r\n                    <td class=\"f-datagrid-header-cell f-datagrid-header-cell-group\" \r\n                        [attr.align]=\"col.halign\"\r\n                        [attr.colspan]=\"col.colspan\">\r\n                        <div class=\"f-datagrid-header-cell-content\" >\r\n                            {{ col.title }}\r\n                        </div>\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!col.colspan && !col.fixed\">\r\n                    <td class=\"f-datagrid-header-cell\" \r\n                        [attr.align]=\"col.halign\" \r\n                        [attr.field]=\"col.field\"\r\n                        [attr.rowspan]=\"col.rowspan\">\r\n                        <div class=\"f-datagrid-header-cell-content\">\r\n                            {{ col.title }}\r\n                        </div>\r\n                    </td>\r\n                </ng-container>\r\n            </ng-container>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr class=\"f-datagrid-body-row\" [attr.id]=\"row | rowDataId\" *ngFor=\"let row of data; trackBy: dg.trackByRows; let i = index\">\r\n            <td class=\"f-datagrid-cell f-datagrid-cell-rownumber\" [style.width.px]=\"dg.lineNumberWidth\" *ngIf=\"dg.showLineNumber\">{{ i+1 }}</td>\r\n            <td class=\"f-datagrid-cell\" [attr.align]=\"col.align\" *ngFor=\"let col of columnsGroup?.normalColumns; let ci = index;\">\r\n                <span [innerHtml]=\" col | formatCellData: row | safe: 'html'\"></span>\r\n            </td>\r\n        </tr>\r\n        <ng-container *ngIf=\"dg.showFooter && data && data.length\">\r\n            <tr class=\"f-datagrid-body-row\" *ngFor=\"let row of dg.footerData\">\r\n                <td class=\"f-datagrid-cell f-datagrid-cell-rownumber\" [style.width.px]=\"dg.lineNumberWidth\" *ngIf=\"dg.showLineNumber\"></td>\r\n                <td class=\"f-datagrid-cell\" [attr.align]=\"col.align\" *ngFor=\"let col of columnsGroup?.normalColumns\" [attr.title]=\"col | formatCellData: row \">\r\n                    <div class=\"f-datagrid-cell-content\">\r\n                        <span *ngIf=\"col.footer && col.footer.formatter\" [innerHtml]=\" col | formatCellData: row : false: true | safe: 'html'\"></span>\r\n                        <span *ngIf=\"!col.footer || !col.footer.formatter\">{{ col | formatCellData: row: false: true }}</span>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </ng-container>\r\n    </tbody>\r\n</table>"
                }] }
    ];
    /** @nocollapse */
    AutoHeightComponent.ctorParameters = function () { return [
        { type: DatagridComponent },
        { type: Injector }
    ]; };
    AutoHeightComponent.propDecorators = {
        columns: [{ type: Input }],
        columnsGroup: [{ type: Input }],
        data: [{ type: Input }]
    };
    return AutoHeightComponent;
}());
export { AutoHeightComponent };
if (false) {
    /** @type {?} */
    AutoHeightComponent.prototype.columns;
    /** @type {?} */
    AutoHeightComponent.prototype.columnsGroup;
    /** @type {?} */
    AutoHeightComponent.prototype.data;
    /** @type {?} */
    AutoHeightComponent.prototype.dg;
    /**
     * @type {?}
     * @private
     */
    AutoHeightComponent.prototype.inject;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1oZWlnaHQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1kYXRhZ3JpZC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2F1dG8taGVpZ2h0L2F1dG8taGVpZ2h0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDL0QsT0FBTyxFQUFFLFNBQVMsRUFBVSxRQUFRLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7QUFTbkU7SUFVSSw2QkFBbUIsRUFBcUIsRUFBVSxNQUFnQjtRQUEvQyxPQUFFLEdBQUYsRUFBRSxDQUFtQjtRQUFVLFdBQU0sR0FBTixNQUFNLENBQVU7SUFBSSxDQUFDOzs7O0lBRXZFLHNDQUFROzs7SUFBUixjQUFtQixDQUFDOztnQkFadkIsU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxhQUFhO29CQUN2Qiw2cUdBQTJDO2lCQUM5Qzs7OztnQkFiUSxpQkFBaUI7Z0JBQ0UsUUFBUTs7OzBCQWUvQixLQUFLOytCQUNMLEtBQUs7dUJBQ0wsS0FBSzs7SUFLViwwQkFBQztDQUFBLEFBYkQsSUFhQztTQVRZLG1CQUFtQjs7O0lBRTVCLHNDQUF3Qjs7SUFDeEIsMkNBQTJCOztJQUMzQixtQ0FBbUI7O0lBRVAsaUNBQTRCOzs7OztJQUFFLHFDQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGFncmlkQ29tcG9uZW50IH0gZnJvbSAnLi8uLi8uLi9kYXRhZ3JpZC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5qZWN0b3IsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5cclxuLyoqXHJcbiAqIOiHquWKqOmrmOW6plxyXG4gKiDnpoHnlKjliIbpobXvvIznpoHnlKjlm7rlrprooajlpLTvvIznpoHnlKjomZrmi5/liqDovb3vvIznpoHnlKjlm7rlrprliJdcclxuICog5pSv5oyB5Y2V5YWD5qC857yW6L6RLCDmlK/mjIHmjpLluo8sIOaUr+aMgeaLluWKqOWIl+WuvVxyXG4gKi9cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdhdXRvLWhlaWdodCcsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vYXV0by1oZWlnaHQuY29tcG9uZW50Lmh0bWwnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBdXRvSGVpZ2h0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgICBASW5wdXQoKSBjb2x1bW5zOiBhbnlbXTtcclxuICAgIEBJbnB1dCgpIGNvbHVtbnNHcm91cDogYW55O1xyXG4gICAgQElucHV0KCkgZGF0YTogYW55O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBkZzogRGF0YWdyaWRDb21wb25lbnQsIHByaXZhdGUgaW5qZWN0OiBJbmplY3RvcikgeyB9XHJcblxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7IH1cclxufVxyXG4iXX0=