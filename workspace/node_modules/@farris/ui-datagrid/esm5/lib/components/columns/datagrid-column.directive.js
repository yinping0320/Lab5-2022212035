/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, ContentChild } from '@angular/core';
import { DatagridCellEditorDirective } from './column-cell-edit.directive';
var DatagridColumnDirective = /** @class */ (function () {
    function DatagridColumnDirective() {
        this.halign = 'left';
        this.align = 'left';
        this.readonly = true;
        this.editable = false;
    }
    /**
     * @return {?}
     */
    DatagridColumnDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    DatagridColumnDirective.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
    };
    DatagridColumnDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'farris-grid-column',
                },] }
    ];
    /** @nocollapse */
    DatagridColumnDirective.ctorParameters = function () { return []; };
    DatagridColumnDirective.propDecorators = {
        field: [{ type: Input }],
        title: [{ type: Input }],
        width: [{ type: Input }],
        halign: [{ type: Input }],
        align: [{ type: Input }],
        formatter: [{ type: Input }],
        readonly: [{ type: Input }],
        editable: [{ type: Input }],
        editor: [{ type: ContentChild, args: [DatagridCellEditorDirective,] }]
    };
    return DatagridColumnDirective;
}());
export { DatagridColumnDirective };
if (false) {
    /** @type {?} */
    DatagridColumnDirective.prototype.field;
    /** @type {?} */
    DatagridColumnDirective.prototype.title;
    /** @type {?} */
    DatagridColumnDirective.prototype.width;
    /** @type {?} */
    DatagridColumnDirective.prototype.halign;
    /** @type {?} */
    DatagridColumnDirective.prototype.align;
    /** @type {?} */
    DatagridColumnDirective.prototype.formatter;
    /** @type {?} */
    DatagridColumnDirective.prototype.readonly;
    /** @type {?} */
    DatagridColumnDirective.prototype.editable;
    /** @type {?} */
    DatagridColumnDirective.prototype.editor;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtY29sdW1uLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktZGF0YWdyaWQvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9jb2x1bW5zL2RhdGFncmlkLWNvbHVtbi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBVSxTQUFTLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBb0IsTUFBTSxlQUFlLENBQUM7QUFDekYsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFFM0U7SUFnQkk7UUFSUyxXQUFNLEdBQStCLE1BQU0sQ0FBQztRQUM1QyxVQUFLLEdBQStCLE1BQU0sQ0FBQztRQUUzQyxhQUFRLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLGFBQVEsR0FBRyxLQUFLLENBQUM7SUFJVixDQUFDOzs7O0lBRWpCLDBDQUFROzs7SUFBUixjQUFtQixDQUFDOzs7O0lBRXBCLG9EQUFrQjs7O0lBQWxCO0lBQ0EsQ0FBQzs7Z0JBckJKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsb0JBQW9CO2lCQUNqQzs7Ozs7d0JBR0ksS0FBSzt3QkFDTCxLQUFLO3dCQUNMLEtBQUs7eUJBQ0wsS0FBSzt3QkFDTCxLQUFLOzRCQUNMLEtBQUs7MkJBQ0wsS0FBSzsyQkFDTCxLQUFLO3lCQUVMLFlBQVksU0FBQywyQkFBMkI7O0lBUTdDLDhCQUFDO0NBQUEsQUF0QkQsSUFzQkM7U0FuQlksdUJBQXVCOzs7SUFFaEMsd0NBQXVCOztJQUN2Qix3Q0FBdUI7O0lBQ3ZCLHdDQUF1Qjs7SUFDdkIseUNBQXFEOztJQUNyRCx3Q0FBb0Q7O0lBQ3BELDRDQUFzRDs7SUFDdEQsMkNBQXlCOztJQUN6QiwyQ0FBMEI7O0lBRTFCLHlDQUF1RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgRGlyZWN0aXZlLCBJbnB1dCwgQ29udGVudENoaWxkLCBBZnRlckNvbnRlbnRJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IERhdGFncmlkQ2VsbEVkaXRvckRpcmVjdGl2ZSB9IGZyb20gJy4vY29sdW1uLWNlbGwtZWRpdC5kaXJlY3RpdmUnO1xyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgICBzZWxlY3RvcjogJ2ZhcnJpcy1ncmlkLWNvbHVtbicsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEYXRhZ3JpZENvbHVtbkRpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJDb250ZW50SW5pdCB7XHJcblxyXG4gICAgQElucHV0KCkgZmllbGQ6IHN0cmluZztcclxuICAgIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmc7XHJcbiAgICBASW5wdXQoKSB3aWR0aDogbnVtYmVyO1xyXG4gICAgQElucHV0KCkgaGFsaWduOiAnbGVmdCcgfCAnY2VudGVyJyB8J3JpZ2h0JyA9ICdsZWZ0JztcclxuICAgIEBJbnB1dCgpIGFsaWduOiAnbGVmdCcgfCAnY2VudGVyJyB8J3JpZ2h0JyA9ICdsZWZ0JztcclxuICAgIEBJbnB1dCgpIGZvcm1hdHRlcjogKHZhbHVlLCByb3dEYXRhLCByb3dJbmRleCkgPT4gYW55O1xyXG4gICAgQElucHV0KCkgcmVhZG9ubHkgPSB0cnVlO1xyXG4gICAgQElucHV0KCkgZWRpdGFibGUgPSBmYWxzZTtcclxuXHJcbiAgICBAQ29udGVudENoaWxkKERhdGFncmlkQ2VsbEVkaXRvckRpcmVjdGl2ZSkgZWRpdG9yOiBhbnk7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHsgfVxyXG5cclxuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcclxuICAgIH1cclxufVxyXG4iXX0=