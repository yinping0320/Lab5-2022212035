/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
/** @type {?} */
var loading_style_ring = "<svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n  <circle cx=\"50\" cy=\"50\" fill=\"none\" r=\"30\" stroke=\"#2c7dff\" stroke-width=\"10\"></circle>\n  <circle cx=\"50\" cy=\"50\" fill=\"none\" r=\"30\" stroke=\"#d0eaff\" stroke-width=\"10\" stroke-linecap=\"square\" transform=\"rotate(178.821 50 50)\">\n      <animateTransform attributeName=\"transform\" type=\"rotate\"\n          calcMode=\"linear\" values=\"0 50 50;180 50 50;720 50 50\" keyTimes=\"0;0.5;1\" dur=\"1.6s\" begin=\"0s\"\n          repeatCount=\"indefinite\"></animateTransform>\n      <animate attributeName=\"stroke-dasharray\" calcMode=\"linear\"\n          values=\"9.42477796076938 179.0707812546182;150.79644737231007 37.6991118430775;9.42477796076938 179.0707812546182\"\n          keyTimes=\"0;0.5;1\" dur=\"1.6\" begin=\"0s\" repeatCount=\"indefinite\"></animate>\n  </circle>\n</svg>";
var DataGridLoadingComponent = /** @class */ (function () {
    function DataGridLoadingComponent(domSanitizer) {
        this.domSanitizer = domSanitizer;
    }
    /**
     * @return {?}
     */
    DataGridLoadingComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.loading) {
            this.loading = this.domSanitizer.bypassSecurityTrustHtml(this.loading);
        }
        else {
            this.loading = this.domSanitizer.bypassSecurityTrustHtml(loading_style_ring);
        }
    };
    DataGridLoadingComponent.decorators = [
        { type: Component, args: [{
                    selector: 'datagrid-loading',
                    template: "\n    <div style=\"width:100%;height:100%;position:absolute;top:0;left: 0;background:rgba(255,255,255,0);z-index: 90000000;pointer-events: unset;\">\n        <div style=\"width: 50px;height: 50px;position: relative;top: 50%;margin-top: -25px;left: 50%;margin-left: -25px;\"\n        [innerHTML]=\"loading\" >\n        </div>\n    </div>\n    "
                }] }
    ];
    /** @nocollapse */
    DataGridLoadingComponent.ctorParameters = function () { return [
        { type: DomSanitizer }
    ]; };
    DataGridLoadingComponent.propDecorators = {
        loading: [{ type: Input }]
    };
    return DataGridLoadingComponent;
}());
export { DataGridLoadingComponent };
if (false) {
    /** @type {?} */
    DataGridLoadingComponent.prototype.loading;
    /**
     * @type {?}
     * @private
     */
    DataGridLoadingComponent.prototype.domSanitizer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWRhdGFncmlkLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbG9hZGluZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxZQUFZLEVBQVksTUFBTSwyQkFBMkIsQ0FBQzs7SUFFN0Qsa0JBQWtCLEdBQ3hCLHM3QkFVTztBQUVQO0lBY0ksa0NBQW9CLFlBQTBCO1FBQTFCLGlCQUFZLEdBQVosWUFBWSxDQUFjO0lBQUksQ0FBQzs7OztJQUVuRCwyQ0FBUTs7O0lBQVI7UUFDSSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDZCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzFFO2FBQU07WUFDSCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsdUJBQXVCLENBQUMsa0JBQWtCLENBQUMsQ0FBQztTQUNoRjtJQUNMLENBQUM7O2dCQXRCSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLGtCQUFrQjtvQkFDNUIsUUFBUSxFQUFFLHdWQU1UO2lCQUNKOzs7O2dCQXhCUSxZQUFZOzs7MEJBMkJoQixLQUFLOztJQWFWLCtCQUFDO0NBQUEsQUF6QkQsSUF5QkM7U0FmWSx3QkFBd0I7OztJQUVqQywyQ0FBc0I7Ozs7O0lBRVYsZ0RBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IERvbVNhbml0aXplciwgU2FmZUh0bWwgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcclxuXHJcbmNvbnN0IGxvYWRpbmdfc3R5bGVfcmluZyA9XHJcbmA8c3ZnIHdpZHRoPVwiMTAwJVwiIGhlaWdodD1cIjEwMCVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAxMDAgMTAwXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaWRZTWlkXCI+XHJcbiAgPGNpcmNsZSBjeD1cIjUwXCIgY3k9XCI1MFwiIGZpbGw9XCJub25lXCIgcj1cIjMwXCIgc3Ryb2tlPVwiIzJjN2RmZlwiIHN0cm9rZS13aWR0aD1cIjEwXCI+PC9jaXJjbGU+XHJcbiAgPGNpcmNsZSBjeD1cIjUwXCIgY3k9XCI1MFwiIGZpbGw9XCJub25lXCIgcj1cIjMwXCIgc3Ryb2tlPVwiI2QwZWFmZlwiIHN0cm9rZS13aWR0aD1cIjEwXCIgc3Ryb2tlLWxpbmVjYXA9XCJzcXVhcmVcIiB0cmFuc2Zvcm09XCJyb3RhdGUoMTc4LjgyMSA1MCA1MClcIj5cclxuICAgICAgPGFuaW1hdGVUcmFuc2Zvcm0gYXR0cmlidXRlTmFtZT1cInRyYW5zZm9ybVwiIHR5cGU9XCJyb3RhdGVcIlxyXG4gICAgICAgICAgY2FsY01vZGU9XCJsaW5lYXJcIiB2YWx1ZXM9XCIwIDUwIDUwOzE4MCA1MCA1MDs3MjAgNTAgNTBcIiBrZXlUaW1lcz1cIjA7MC41OzFcIiBkdXI9XCIxLjZzXCIgYmVnaW49XCIwc1wiXHJcbiAgICAgICAgICByZXBlYXRDb3VudD1cImluZGVmaW5pdGVcIj48L2FuaW1hdGVUcmFuc2Zvcm0+XHJcbiAgICAgIDxhbmltYXRlIGF0dHJpYnV0ZU5hbWU9XCJzdHJva2UtZGFzaGFycmF5XCIgY2FsY01vZGU9XCJsaW5lYXJcIlxyXG4gICAgICAgICAgdmFsdWVzPVwiOS40MjQ3Nzc5NjA3NjkzOCAxNzkuMDcwNzgxMjU0NjE4MjsxNTAuNzk2NDQ3MzcyMzEwMDcgMzcuNjk5MTExODQzMDc3NTs5LjQyNDc3Nzk2MDc2OTM4IDE3OS4wNzA3ODEyNTQ2MTgyXCJcclxuICAgICAgICAgIGtleVRpbWVzPVwiMDswLjU7MVwiIGR1cj1cIjEuNlwiIGJlZ2luPVwiMHNcIiByZXBlYXRDb3VudD1cImluZGVmaW5pdGVcIj48L2FuaW1hdGU+XHJcbiAgPC9jaXJjbGU+XHJcbjwvc3ZnPmA7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnZGF0YWdyaWQtbG9hZGluZycsXHJcbiAgICB0ZW1wbGF0ZTogYFxyXG4gICAgPGRpdiBzdHlsZT1cIndpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDogMDtiYWNrZ3JvdW5kOnJnYmEoMjU1LDI1NSwyNTUsMCk7ei1pbmRleDogOTAwMDAwMDA7cG9pbnRlci1ldmVudHM6IHVuc2V0O1wiPlxyXG4gICAgICAgIDxkaXYgc3R5bGU9XCJ3aWR0aDogNTBweDtoZWlnaHQ6IDUwcHg7cG9zaXRpb246IHJlbGF0aXZlO3RvcDogNTAlO21hcmdpbi10b3A6IC0yNXB4O2xlZnQ6IDUwJTttYXJnaW4tbGVmdDogLTI1cHg7XCJcclxuICAgICAgICBbaW5uZXJIVE1MXT1cImxvYWRpbmdcIiA+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICAgIGBcclxufSlcclxuZXhwb3J0IGNsYXNzIERhdGFHcmlkTG9hZGluZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gICAgQElucHV0KCkgbG9hZGluZzogYW55O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZG9tU2FuaXRpemVyOiBEb21TYW5pdGl6ZXIpIHsgfVxyXG5cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLmxvYWRpbmcpIHtcclxuICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gdGhpcy5kb21TYW5pdGl6ZXIuYnlwYXNzU2VjdXJpdHlUcnVzdEh0bWwodGhpcy5sb2FkaW5nKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSB0aGlzLmRvbVNhbml0aXplci5ieXBhc3NTZWN1cml0eVRydXN0SHRtbChsb2FkaW5nX3N0eWxlX3JpbmcpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG59XHJcbiJdfQ==