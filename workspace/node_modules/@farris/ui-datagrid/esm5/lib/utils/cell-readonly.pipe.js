/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
var CellIsReadonlyPipe = /** @class */ (function () {
    function CellIsReadonlyPipe() {
    }
    /**
     * @param {?} col
     * @param {...?} args
     * @return {?}
     */
    CellIsReadonlyPipe.prototype.transform = /**
     * @param {?} col
     * @param {...?} args
     * @return {?}
     */
    function (col) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return this.isReadonly(col, args[0], args[1]);
    };
    /**
     * @private
     * @param {?} col
     * @param {?} rowData
     * @param {?} dg
     * @return {?}
     */
    CellIsReadonlyPipe.prototype.isReadonly = /**
     * @private
     * @param {?} col
     * @param {?} rowData
     * @param {?} dg
     * @return {?}
     */
    function (col, rowData, dg) {
        if (dg.editable) {
            // 参与合并的单元格不允许编辑
            if (dg.mergeCell && dg.mergeFields.indexOf(col.field) > -1) {
                return true;
            }
            return this.getReadonlyValue(col, rowData);
        }
        else {
            return true;
        }
    };
    /**
     * @private
     * @param {?} col
     * @param {?} rowData
     * @return {?}
     */
    CellIsReadonlyPipe.prototype.getReadonlyValue = /**
     * @private
     * @param {?} col
     * @param {?} rowData
     * @return {?}
     */
    function (col, rowData) {
        if (col.readonly !== undefined) {
            if (typeof col.readonly === 'boolean') {
                return col.readonly;
            }
            else if (typeof col.readonly === 'function') {
                return col.readonly(rowData);
            }
        }
        return false;
    };
    CellIsReadonlyPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'cellReadonly'
                },] }
    ];
    return CellIsReadonlyPipe;
}());
export { CellIsReadonlyPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VsbC1yZWFkb25seS5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1kYXRhZ3JpZC8iLCJzb3VyY2VzIjpbImxpYi91dGlscy9jZWxsLXJlYWRvbmx5LnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRXBEO0lBQUE7SUE4QkEsQ0FBQzs7Ozs7O0lBMUJHLHNDQUFTOzs7OztJQUFULFVBQVUsR0FBUTtRQUFFLGNBQWM7YUFBZCxVQUFjLEVBQWQscUJBQWMsRUFBZCxJQUFjO1lBQWQsNkJBQWM7O1FBQzlCLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7Ozs7O0lBRU8sdUNBQVU7Ozs7Ozs7SUFBbEIsVUFBbUIsR0FBRyxFQUFFLE9BQU8sRUFBRSxFQUFFO1FBQy9CLElBQUksRUFBRSxDQUFDLFFBQVEsRUFBRTtZQUNiLGdCQUFnQjtZQUNoQixJQUFJLEVBQUUsQ0FBQyxTQUFTLElBQUksRUFBRSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFO2dCQUN4RCxPQUFPLElBQUksQ0FBQzthQUNmO1lBQ0QsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1NBQzlDO2FBQU07WUFDSCxPQUFPLElBQUksQ0FBQztTQUNmO0lBQ0wsQ0FBQzs7Ozs7OztJQUVPLDZDQUFnQjs7Ozs7O0lBQXhCLFVBQXlCLEdBQUcsRUFBRSxPQUFPO1FBQ2pDLElBQUksR0FBRyxDQUFDLFFBQVEsS0FBSyxTQUFTLEVBQUU7WUFDNUIsSUFBSSxPQUFPLEdBQUcsQ0FBQyxRQUFRLEtBQUssU0FBUyxFQUFFO2dCQUNuQyxPQUFPLEdBQUcsQ0FBQyxRQUFRLENBQUM7YUFDdkI7aUJBQU0sSUFBSSxPQUFPLEdBQUcsQ0FBQyxRQUFRLEtBQUssVUFBVSxFQUFFO2dCQUMzQyxPQUFPLEdBQUcsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7YUFDaEM7U0FDSjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7O2dCQTdCSixJQUFJLFNBQUM7b0JBQ0YsSUFBSSxFQUFFLGNBQWM7aUJBQ3ZCOztJQTRCRCx5QkFBQztDQUFBLEFBOUJELElBOEJDO1NBM0JZLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBQaXBlKHtcclxuICAgIG5hbWU6ICdjZWxsUmVhZG9ubHknXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDZWxsSXNSZWFkb25seVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICAgIHRyYW5zZm9ybShjb2w6IGFueSwgLi4uYXJnczogYW55W10pOiBhbnkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmlzUmVhZG9ubHkoY29sLCBhcmdzWzBdLCBhcmdzWzFdKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGlzUmVhZG9ubHkoY29sLCByb3dEYXRhLCBkZykge1xyXG4gICAgICAgIGlmIChkZy5lZGl0YWJsZSkge1xyXG4gICAgICAgICAgICAvLyDlj4LkuI7lkIjlubbnmoTljZXlhYPmoLzkuI3lhYHorrjnvJbovpFcclxuICAgICAgICAgICAgaWYgKGRnLm1lcmdlQ2VsbCAmJiBkZy5tZXJnZUZpZWxkcy5pbmRleE9mKGNvbC5maWVsZCkgPiAtMSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UmVhZG9ubHlWYWx1ZShjb2wsIHJvd0RhdGEpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGdldFJlYWRvbmx5VmFsdWUoY29sLCByb3dEYXRhKSB7XHJcbiAgICAgICAgaWYgKGNvbC5yZWFkb25seSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29sLnJlYWRvbmx5ID09PSAnYm9vbGVhbicpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBjb2wucmVhZG9ubHk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGNvbC5yZWFkb25seSA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbC5yZWFkb25seShyb3dEYXRhKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbn1cclxuIl19