/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { DatagridFacadeService } from './../services/datagrid-facade.service';
var RowIsCheckedPipe = /** @class */ (function () {
    function RowIsCheckedPipe(dfs) {
        this.dfs = dfs;
    }
    /**
     * @param {?} rowData
     * @param {?} checkeds
     * @return {?}
     */
    RowIsCheckedPipe.prototype.transform = /**
     * @param {?} rowData
     * @param {?} checkeds
     * @return {?}
     */
    function (rowData, checkeds) {
        if (!rowData) {
            return false;
        }
        /** @type {?} */
        var id = this.dfs.primaryId(rowData);
        if (id) {
            return this.dfs.isRowChecked(id, checkeds);
        }
        else {
            return false;
        }
    };
    RowIsCheckedPipe.decorators = [
        { type: Pipe, args: [{ name: 'rowIsChecked', pure: false },] }
    ];
    /** @nocollapse */
    RowIsCheckedPipe.ctorParameters = function () { return [
        { type: DatagridFacadeService }
    ]; };
    return RowIsCheckedPipe;
}());
export { RowIsCheckedPipe };
if (false) {
    /**
     * @type {?}
     * @private
     */
    RowIsCheckedPipe.prototype.dfs;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93LWlzLWNoZWNrZWQucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktZGF0YWdyaWQvIiwic291cmNlcyI6WyJsaWIvdXRpbHMvcm93LWlzLWNoZWNrZWQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFFOUU7SUFFSSwwQkFBb0IsR0FBMEI7UUFBMUIsUUFBRyxHQUFILEdBQUcsQ0FBdUI7SUFBRyxDQUFDOzs7Ozs7SUFDbEQsb0NBQVM7Ozs7O0lBQVQsVUFBVSxPQUFZLEVBQUUsUUFBZTtRQUNuQyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ1YsT0FBTyxLQUFLLENBQUM7U0FDaEI7O1lBRUssRUFBRSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQztRQUN0QyxJQUFJLEVBQUUsRUFBRTtZQUNKLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1NBQzlDO2FBQU07WUFDSCxPQUFPLEtBQUssQ0FBQztTQUNoQjtJQUNMLENBQUM7O2dCQWRKLElBQUksU0FBQyxFQUFDLElBQUksRUFBRSxjQUFjLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBQzs7OztnQkFGaEMscUJBQXFCOztJQWlCOUIsdUJBQUM7Q0FBQSxBQWZELElBZUM7U0FkWSxnQkFBZ0I7Ozs7OztJQUNiLCtCQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRGF0YWdyaWRGYWNhZGVTZXJ2aWNlIH0gZnJvbSAnLi8uLi9zZXJ2aWNlcy9kYXRhZ3JpZC1mYWNhZGUuc2VydmljZSc7XHJcblxyXG5AUGlwZSh7bmFtZTogJ3Jvd0lzQ2hlY2tlZCcsIHB1cmU6IGZhbHNlfSlcclxuZXhwb3J0IGNsYXNzIFJvd0lzQ2hlY2tlZFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZGZzOiBEYXRhZ3JpZEZhY2FkZVNlcnZpY2UpIHt9XHJcbiAgICB0cmFuc2Zvcm0ocm93RGF0YTogYW55LCBjaGVja2VkczogYW55W10pOiBhbnkge1xyXG4gICAgICAgIGlmICghcm93RGF0YSkge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBpZCA9IHRoaXMuZGZzLnByaW1hcnlJZChyb3dEYXRhKTtcclxuICAgICAgICBpZiAoaWQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGZzLmlzUm93Q2hlY2tlZChpZCwgY2hlY2tlZHMpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19