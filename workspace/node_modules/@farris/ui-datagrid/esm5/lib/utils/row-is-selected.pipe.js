/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { DatagridFacadeService } from '../services/datagrid-facade.service';
var RowIsSelectedPipe = /** @class */ (function () {
    function RowIsSelectedPipe(dfs) {
        this.dfs = dfs;
    }
    /**
     * @param {?} rowData
     * @param {?=} selections
     * @return {?}
     */
    RowIsSelectedPipe.prototype.transform = /**
     * @param {?} rowData
     * @param {?=} selections
     * @return {?}
     */
    function (rowData, selections) {
        if (!rowData) {
            return false;
        }
        /** @type {?} */
        var id = this.dfs.primaryId(rowData);
        if (id) {
            return this.dfs.isRowSelected(id, selections);
        }
        else {
            return false;
        }
    };
    RowIsSelectedPipe.decorators = [
        { type: Pipe, args: [{ name: 'rowIsSelected', pure: false },] }
    ];
    /** @nocollapse */
    RowIsSelectedPipe.ctorParameters = function () { return [
        { type: DatagridFacadeService }
    ]; };
    return RowIsSelectedPipe;
}());
export { RowIsSelectedPipe };
if (false) {
    /**
     * @type {?}
     * @private
     */
    RowIsSelectedPipe.prototype.dfs;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93LWlzLXNlbGVjdGVkLnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWRhdGFncmlkLyIsInNvdXJjZXMiOlsibGliL3V0aWxzL3Jvdy1pcy1zZWxlY3RlZC5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUU1RTtJQUVJLDJCQUFvQixHQUEwQjtRQUExQixRQUFHLEdBQUgsR0FBRyxDQUF1QjtJQUFHLENBQUM7Ozs7OztJQUNsRCxxQ0FBUzs7Ozs7SUFBVCxVQUFVLE9BQVksRUFBRSxVQUFrQjtRQUN0QyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ1YsT0FBTyxLQUFLLENBQUM7U0FDaEI7O1lBQ0ssRUFBRSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQztRQUV0QyxJQUFJLEVBQUUsRUFBRTtZQUNKLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsRUFBRSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1NBQ2pEO2FBQU07WUFDSCxPQUFPLEtBQUssQ0FBQztTQUNoQjtJQUNMLENBQUM7O2dCQWRKLElBQUksU0FBQyxFQUFDLElBQUksRUFBRSxlQUFlLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBQzs7OztnQkFGakMscUJBQXFCOztJQWlCOUIsd0JBQUM7Q0FBQSxBQWZELElBZUM7U0FkWSxpQkFBaUI7Ozs7OztJQUNkLGdDQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRGF0YWdyaWRGYWNhZGVTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvZGF0YWdyaWQtZmFjYWRlLnNlcnZpY2UnO1xyXG5cclxuQFBpcGUoe25hbWU6ICdyb3dJc1NlbGVjdGVkJywgcHVyZTogZmFsc2V9KVxyXG5leHBvcnQgY2xhc3MgUm93SXNTZWxlY3RlZFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZGZzOiBEYXRhZ3JpZEZhY2FkZVNlcnZpY2UpIHt9XHJcbiAgICB0cmFuc2Zvcm0ocm93RGF0YTogYW55LCBzZWxlY3Rpb25zPzogYW55W10pOiBhbnkge1xyXG4gICAgICAgIGlmICghcm93RGF0YSkge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGlkID0gdGhpcy5kZnMucHJpbWFyeUlkKHJvd0RhdGEpO1xyXG5cclxuICAgICAgICBpZiAoaWQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGZzLmlzUm93U2VsZWN0ZWQoaWQsIHNlbGVjdGlvbnMpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19