{"version":3,"sources":["ng://@farris/ui-datatable/lib/datatable-column.ts","ng://@farris/ui-datatable/lib/datatable.service.ts","node_modules/tslib/tslib.es6.js","ng://@farris/ui-datatable/lib/datatable-column.component.ts","ng://@farris/ui-datatable/lib/datatable.component.ts","ng://@farris/ui-datatable/lib/table/datatable-header.component.ts","ng://@farris/ui-datatable/lib/table/datatable-body.component.ts","ng://@farris/ui-datatable/lib/table/datatable-footer.component.ts","ng://@farris/ui-datatable/lib/datatable-checkbox.component.ts","ng://@farris/ui-datatable/lib/utils/drag.directive.ts","ng://@farris/ui-datatable/lib/table/cell-style.directive.ts","ng://@farris/ui-datatable/lib/datatable.module.ts"],"names":["convertColumns","columns","direction","tempFixedColumns","tempNotFixedColumns","forEach","ele","fixed","type","push","concat","deepCopy","data","cloneDeep","DataTableService","Injectable","this","loadSuccess","Subject","selectedRow","unSelectedRow","selectedAll","dblClickRow","updateCheckAllStatus","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","ColumnDirective","ngOnInit","Directive","args","selector","ElementRef","Input","HostBinding","el","align","multipleFilter","fixedClass","defineProperty","DataTableComponent","_pageList","val","pager","setPageList","_data","dtBody","selections","v","_currentRowIndex","_currentRow","_this","setTimeout","setBodyHeight","ps","perfectScrollbar","directiveRef","id","idService","generate","paginationOptions","remote","pagerOnServer","copyData","beforeSortColumn","of","refresh","_tableheight","height","showFilterBar","tableHeight","_scorllableBodyHeight","showHeader","tableHeader","nativeElement","querySelector","clientHeight","pagination","scorllableBodyHeight","cd","detectChanges","onClearSearchValue","searchData","value","clearSearchValue","emit","ngOnChanges","changes","isFirstChange","total","totalItems","currentValue","pageSize","itemsPerPage","pageIndex","currentPage","rows","updateCheckboxState","dataService","next","ngAfterContentInit","columnsRef","map","col","width","title","field","className","filter","media","sortable","edit","ngZone","runOutsideAngular","tablePager","pagerViewMode","addEventListener","mouseEnterOnPager","e","overflowX","target","indexOf","closest","pgScrollbar","scrollLeft","style","mouseLeaveOnPager","mouseWheelOnPager","box","sw","scrollWidth","ow","offsetWidth","right","sl","Math","abs","deltaY","preventDefault","ngOnDestroy","subscription","sub","unsubscribe","removeEventListener","ngAfterViewInit","datatableContainer","minHeight","f","dtHeader","isCheckAll","keys","_selections","count_1","ids_1","row","idField","toString","getContainerOffset","rect","getBoundingClientRect","left","document","body","top","scrollTop","bottom","beginDrag","dragLineX","pageX","event","moveDrag","containerLeft","dragLine","offsetHeight","display","stopDrag","column","autoFitColumns","resizeColumn2","update","resizeColumn","isCheckBox","delta","columnWidth","newColumnWidth","minWidth","colIndex","othersCol","cols","querySelectorAll","parentWidth","parentElement","firstElement","firstElementChild","checkBoxWidth","othersWidth","newOthersWidth","rate","colWidth","resizeColGroup","getAttribute","find","elements","cName","match","RegExp","table","resizeColumnIndex","othersColumn","colGroup","childNodes","children","nodeName","Error","otherCol","onScrollX","x","srcElement","scrollTo","onScrollY","hasFixed","y","dtLeftFixed","dtRightFixed","onPageChange","page","pageChanged","pageInfo","search","sortName","sortOrder","onPageSizeChange","pageLength","floor","pageSizeChanged","onSearch","$event","originalEvent","stopPropagation","onCheckAll","state","checkAll","onSelectedRow","rowData","index","rowIndex","selectRows","resize","size","loadData","_a","_b","_c","_d","pageList","onCellClick","cellClick","addRows","dataItem","removeRows","SELECTIONS","singleSelect","splice","j","checkRow","rid","reduce","r","unCheckRow","unSelectRow","unCheckRows","ids","includes","clearSelections","onKeydownEvent","newIdx","code","trDoms","scrollIntoView","block","Component","template","encapsulation","ViewEncapsulation","None","providers","IdService","ChangeDetectorRef","NgZone","ViewChild","Output","ContentChildren","ContentChild","searchButtonText","keydownEnterEdit","allColumnsTitle","searchAnyField","fill","showPageInfo","showPageNumber","showPageList","virtualized","remoteSort","multiSort","hover","EventEmitter","columnSorted","rowDblClick","searchValueChange","sortChange","resizableColumns","keepSelect","hasRowTepml","moveable","maxSize","directionLinks","autoHide","responsive","labels","previousLabel","nextLabel","screenReaderPaginationLabel","screenReaderPageLabel","screenReaderCurrentLabel","undefined","d","trackByRows","subscribe","DataTableHeaderComponent","onCheckedChange","checked","checkedAll","createRowClassName","rowClassName","compare","a","b","localeCompare","_sort","r1","r2","sortFields","dt","split","orders","sn","so","orderby","this_1","c","v1","utils","getValue","v2","clientSort","sortedData","sort","bind","onSortColumnClick","sortOrders","colOrder","order","newOrder","findIndex","_order","join","k","deepCopyData","copyColumns","copyRows","element","sortType","hasChecked","filterFields","some","Renderer2","CommonUtils","render","rowsChange","clickedUp","clickedDown","allClass","classList","DTDblClickRowDirective","ondblclick","decorators","Optional","HostListener","DataTableBodyComponent","allChecked","idfield","isRowTempl","emptyMessage","localeService","_rows","checkBodyHeightWhenEmptyData","emptyTbodyElRef","checkedRows_1","isSelected","idfield_1","checkTotal_1","obj","key","selectedRowIndex","onChecked","tr","formatData","formatter","colFormatSer","format","getTdClassName","tempClassName","cellClassName","renderRowStyle","rowStyler","renderCellStyle","cellStyler","ColumnFormatService","Injector","injector","selectRow","cellEdit","lastRowIndex","lastColumnIndex","get","LocaleService","ngzone","DatatableFooterComponent","TemplateRef","DTCheckboxComponent","handleClick","disabled","checkedChange","DragColumnDirective","isEnable","bindDocumentEvents","documentMouseMoveListener","onMouseMove","documentMouseUpListener","onMouseUp","unbindDocumentEvents","onMouseDown","exportAs","CellStylerDirective","dtb","options","_sty_1","rowStyle","cellStyle","toLowerCase","elRef","setProperty","DataTableModule","NgModule","imports","CommonModule","FormsModule","PerfectScrollbarModule","PaginationModule","FarrisCommonModule","forRoot","InputGroupModule","DataColumnModule","FarrisFormsModule","exports","declarations","source","jsonObj","JSON","parse","replace"],"mappings":"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","sourcesContent":["/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-04-08 16:51:39\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-17 13:44:33\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\n/**\r\n * è½¬æ¢åçé¡ºåº\r\n * @param columns-ææåæ°æ®\r\n * @param direction-left|right å·¦åºå®æèå³åºå®\r\n */\r\nexport const convertColumns = (columns, direction) => {\r\n    const tempFixedColumns = [];\r\n    const tempNotFixedColumns = [];\r\n    columns.forEach(ele => {\r\n        if (ele.fixed && (ele.fixed === direction || ele.fixed.type === direction)) {\r\n            tempFixedColumns.push(ele);\r\n        } else {\r\n            tempNotFixedColumns.push(ele);\r\n        }\r\n    });\r\n    return tempFixedColumns.concat(tempNotFixedColumns);\r\n};\r\n/**\r\n *  å¯¹è±¡æèæ°ç»æ·±æ·è´\r\n * @param data æºæ°æ®\r\n */\r\nexport const deepCopy = (data) => {\r\n    return cloneDeep(data);\r\n};\r\nexport const toUpper = (source: string) => {\r\n    const jsonObj = JSON.parse(source.replace(/\\\\/g, ''));\r\n    return deepCopy(jsonObj);\r\n};\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport interface SelectRowArgs {\r\n    rowIndex: number;\r\n    rowData: any;\r\n}\r\n\r\n@Injectable()\r\nexport class DataTableService {\r\n\r\n    loadSuccess = new Subject();\r\n\r\n    /**\r\n     * éä¸­è¡äºä»¶\r\n     */\r\n    selectedRow = new Subject<SelectRowArgs>();\r\n\r\n    unSelectedRow = new Subject<SelectRowArgs>();\r\n\r\n    selectedAll = new Subject();\r\n\r\n    dblClickRow = new Subject();\r\n\r\n    updateCheckAllStatus = new Subject();\r\n\r\n    constructor() { }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, OnInit, Input, ContentChild, TemplateRef, ElementRef, HostBinding } from '@angular/core';\r\n@Directive({\r\n    selector: 'data-column'\r\n})\r\nexport class ColumnDirective implements OnInit {\r\n\r\n    @Input() edit: string;\r\n    @Input() title: string;\r\n    @Input() field: string;\r\n    @Input() width: number;\r\n    @Input() align: 'left' | 'center' | 'right' = 'left';\r\n    @Input() fixed?: any;\r\n    @Input() className?: string;\r\n    @Input() media?: object;\r\n    @Input() sortable?: boolean;\r\n    @Input() multipleFilter?: boolean = true;\r\n    @Input() filter?: any;\r\n    @HostBinding('class.fixed') fixedClass = this.fixed === 'left';\r\n\r\n    constructor(private el: ElementRef) {\r\n\r\n    }\r\n\r\n    ngOnInit() { }\r\n}\r\n","import { InputGroupComponent } from '@farris/ui-input-group';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-07-10 11:44:49\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-05 11:44:18\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nimport {\r\n    Component, OnInit, ViewChild, ElementRef, OnChanges, Input, SimpleChanges, ContentChild, TemplateRef,\r\n    QueryList, AfterContentInit, AfterViewInit, ContentChildren, Output, EventEmitter, ViewEncapsulation, OnDestroy, Inject, NgZone\r\n} from '@angular/core';\r\n\r\nimport { Subscription, Observable, of, fromEvent } from 'rxjs';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\nimport { PerfectScrollbarComponent } from '@farris/ui-perfect-scrollbar';\r\nimport { PaginationInstance, PaginationControlsComponent } from '@farris/ui-pagination';\r\nimport { IdService } from '@farris/ui-common';\r\nimport { DataColumn } from '@farris/ui-common/column';\r\n\r\nimport { deepCopy } from './datatable-column';\r\nimport { ColumnDirective } from './datatable-column.component';\r\nimport { DataTableService } from './datatable.service';\r\nimport { DataTableHeaderComponent } from './table/datatable-header.component';\r\nimport { delay } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'farrisui-datatable,farris-datatable',\r\n    templateUrl: './datatable.component.html',\r\n    styleUrls: ['./datatable.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [\r\n        DataTableService\r\n    ]\r\n})\r\nexport class DataTableComponent implements OnInit, OnChanges, OnDestroy, AfterContentInit, AfterViewInit {\r\n    searchButtonText = '<i class=\"f-icon f-icon-search\"></i>';\r\n    @Input() keydownEnterEdit = false;\r\n    @Input() id: string;\r\n    @Input() size: string;\r\n    @Input() allColumnsTitle = 'ææå';\r\n    // table å°ºå¯¸\r\n    @Input() width;\r\n    // ç»ä»¶çº§é«åº¦åæ¬è¿æ»¤æ¡é«åº¦\r\n    @Input() height;\r\n\r\n    /** æ¯å¦æ¯æä»»æå­æ®µæç´¢ */\r\n    @Input() searchAnyField = true;\r\n\r\n    tableHeight: number; // æ°æ®è¡¨é«åº¦\r\n    // æ¯å¦å¡«å\r\n    @Input() fill = false;\r\n    // é»è®¤åé¡µ\r\n    @Input() pagination = true;\r\n    @Input() pagerOnServer = true;\r\n    @Input() pageSize = 10;\r\n    @Input() pageIndex = 1;\r\n    @Input() showPageInfo = true;\r\n    @Input() showPageNumber = true;\r\n    @Input() showPageList = true;\r\n    @Input() pagerViewMode: 'simple'| 'default' = 'default';\r\n    /** åé¡µæ¡ä¸ºç®åæ¨¡å¼æ¶ï¼åé¡µæ¡å·¦ä¾§åºåæ¨¡æ¿ */\r\n    @Input() pagerExtendTemplate: TemplateRef<any>;\r\n    /** æ¾ç¤ºè¡¨å¤´ */\r\n    @Input() showHeader = true;\r\n\r\n    private _pageList = [10, 20, 30, 50, 100];\r\n\r\n    get pageList() {\r\n        return this._pageList;\r\n    }\r\n    @Input() set pageList(val) {\r\n        this._pageList = val;\r\n        if (this.pager) {\r\n            this.pager.setPageList(val);\r\n        }\r\n    }\r\n\r\n    @Input() total = 0;\r\n    // å æ°æ®\r\n    @Input() columns: DataColumn[];\r\n    @Input() searchFields: { label: string, value: string }[];\r\n    // å¯ç­é\r\n    @Input() showFilterBar = false;\r\n    /** å¯ç¨èææ¸²æ */\r\n    @Input() virtualized = false;\r\n\r\n    @Input() autoFitColumns = false;\r\n\r\n    // table  æ°æ®\r\n    _data = [];\r\n    @Input()\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    set data(data: Array<any>) {\r\n        this._data = data || [];\r\n    }\r\n    // æ·±æ·è´data æ°æ®\r\n    copyData: any;\r\n\r\n    @Input() remote = 'client';\r\n\r\n    /** å¯ç¨è¿ç«¯æåº */\r\n    @Input() remoteSort = true;\r\n    /** æåºå­æ®µ */\r\n    @Input() sortName: string;\r\n    /** æåºæ¹å¼ asc | desc */\r\n    @Input() sortOrder: string;\r\n    /** åè®¸å¤åæåº */\r\n    @Input() multiSort = false;\r\n    @Input() beforeSortColumn: (field: string, order: string) => Observable<boolean>;\r\n\r\n    // å¤é  åé\r\n    @Input() singleSelect = true;\r\n    @Input() idField = 'id';\r\n    // æ¾ç¤ºé¼ æ æ¬åé«äº®\r\n    @Input() hover = true;\r\n    // æé©¬çº¿\r\n    @Input() striped: boolean;\r\n    // è¾¹æ¡\r\n    @Input() bordered: boolean;\r\n    // æ¯ææ·»å è¡ ååæ ¼ ç±»æ ·å¼\r\n    @Input() rowClassName: (row: any, index: number) => string;\r\n    @Input() cellClassName: (value: any, col: any) => string;\r\n\r\n    @Input() rowStyler: (args: any) => any;\r\n    @Input() cellStyler: (val: any ) => any;\r\n\r\n    @Input()\r\n    set selections(v) {\r\n        this.dtBody.selections = v ? v : {};\r\n    }\r\n    get selections() {\r\n        return this.dtBody.selections;\r\n    }\r\n    // æ»å¨æ¡å¼ç¨\r\n    @ViewChild('scorllableBody') scorllableBody: ElementRef;\r\n    @ViewChild('tableHeader') tableHeader: ElementRef;\r\n    @ViewChild('tablePager') tablePager: ElementRef;\r\n    @ViewChild('dtHeader') dtHeader: DataTableHeaderComponent;\r\n    @ViewChild('dtBody') dtBody: any;\r\n    @ViewChild('dtLeftBody') dtLeftBody: any;\r\n    @ViewChild('dtRightBody') dtRightBody: any;\r\n    @ViewChild('dtLeftFixed') dtLeftFixed: ElementRef;\r\n    @ViewChild('dtRightFixed') dtRightFixed: ElementRef;\r\n    @ViewChild('pager') pager: PaginationControlsComponent;\r\n    @ViewChild('inputgroup') inputGroup: InputGroupComponent;\r\n\r\n    @ViewChild('pgScrollbar') pgScrollbar: ElementRef;\r\n\r\n    // åé¡µäºä»¶\r\n    @Output() pageChanged = new EventEmitter();\r\n    @Output() pageSizeChanged = new EventEmitter();\r\n    @Output() search = new EventEmitter<{ field: string, value: string }>();\r\n    @Output() columnSorted = new EventEmitter<any>();\r\n    @Output() rowDblClick = new EventEmitter<any>();\r\n    @Output() selectedRow = new EventEmitter<any>();\r\n    // å¼å®¹\r\n    @Output() selectRows = new EventEmitter<any>();\r\n    @Output() unSelectRow = new EventEmitter<any>();\r\n    @Output() cellClick = new EventEmitter<any>();\r\n    @Output() clearSearchValue = new EventEmitter();\r\n    @Output() checkAll = new EventEmitter<any>();\r\n    @Output() searchValueChange = new EventEmitter<any>();\r\n\r\n\r\n    @Output() sortChange = new EventEmitter();\r\n\r\n    @ContentChildren(ColumnDirective) columnsRef: QueryList<ColumnDirective>;\r\n    // è¡¨å°¾\r\n    @ContentChild('footer') footer: TemplateRef<any>;\r\n    // è¡¨æ ¼å¯ææ½å®½åº¦ç³»å\r\n    // ææ½çº¿\r\n    @ViewChild('dragLine') dragLine: ElementRef;\r\n    // æ¯å¦å¯ææ½  é»è®¤å¯ä»¥\r\n    @Input() resizableColumns = true;\r\n\r\n    /** éå¯¹åä¸æ¡è®°å½ï¼åéæ¶ï¼å¤æ¬¡åå»åä¸åæ¶éä¸­ã */\r\n    @Input() keepSelect = true;\r\n\r\n    // æ¯å¦æè¡æ¨¡æ¿\r\n    hasRowTepml = false;\r\n    // ç¨æ·è·åè¡¨å¤´+è¡¨æ ¼åå®¹çé«åº¦  å®½åº¦  ç­\r\n    datatableContainer: HTMLDivElement;\r\n    // ææ½çº¿åå§åä½ç½®\r\n    dragLineX: number;\r\n    // è®¾ç½®ææ½åæ­¢å¨\r\n    moveable = false;\r\n    //\r\n    currentColumn: any;\r\n    // è®¾ç½®å·¦åºå®å\r\n    hasFixed: boolean;\r\n    fixedLeftWidth: string;\r\n    // è®¾ç½®å³åºå®å\r\n    fixedRightWidth: string;\r\n    searchData = { field: '*', value: '' };\r\n    // äºä»¶è®¢éå­å¨  ä¾¿äºéæ¯\r\n    subscription: Subscription[] = [];\r\n    // åºå®åæ¶  åä¸è¡çtr hoveräºä»¶\r\n    headerTr: any;\r\n    leftFixedHeaderTr: any;\r\n    rightFixedHeaderTr: any;\r\n\r\n    // åæ°æ®\r\n    public filter = '';\r\n    public maxSize = 7;\r\n    public directionLinks = true;\r\n    public autoHide = false;\r\n    public responsive = true;\r\n    public paginationOptions: PaginationInstance = {\r\n        id: 'Farris-DataTable-Pagination',\r\n        itemsPerPage: this.pageSize,\r\n        currentPage: this.pageIndex,\r\n        pageList: this.pageList,\r\n        totalItems: this.total,\r\n        remote: this.pagerOnServer\r\n    };\r\n    public labels: any = {\r\n        previousLabel: ' ',\r\n        nextLabel: ' ',\r\n        screenReaderPaginationLabel: 'Pagination',\r\n        screenReaderPageLabel: 'page',\r\n        screenReaderCurrentLabel: `You're on page`\r\n    };\r\n\r\n    private _currentRowIndex = -1;\r\n    get currentRowIndex(): number {\r\n        return this._currentRowIndex;\r\n    }\r\n\r\n    private _currentRow = undefined;\r\n    get currentRow() {\r\n        return this._currentRow;\r\n    }\r\n\r\n    @ViewChild('perfectScrollbar') perfectScrollbar: PerfectScrollbarComponent;\r\n\r\n    private isCheckAll = () => {\r\n        if (!this.selections || !this.selections.length) {\r\n            return false;\r\n        }\r\n\r\n        if (!this.data || !this.data.length) {\r\n            return false;\r\n        }\r\n\r\n        let total = 0;\r\n        this.selections.forEach(n => {\r\n            if (this.data.find(d => d[this.idField] === n[this.idField])) {\r\n                total += 1;\r\n            }\r\n        });\r\n\r\n        return this.data.length === total;\r\n    }\r\n\r\n    scorllableBodyHeight: number;\r\n    mouseEnterOnPager = null;\r\n    mouseLeaveOnPager = null;\r\n    mouseWheelOnPager = null;\r\n\r\n    constructor(private dataService: DataTableService, private idService: IdService, private el: ElementRef,\r\n        public cd: ChangeDetectorRef, private ngZone: NgZone) {\r\n\r\n        this.dataService.selectedRow.subscribe((e: any) => {\r\n            if (this.singleSelect) {\r\n                this._currentRowIndex = e.rowIndex;\r\n                this._currentRow = e.rowData;\r\n            } else {\r\n                if (this.selections) {\r\n                    this.dtHeader.isCheckAll = this.isCheckAll();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.dataService.unSelectedRow.subscribe((e: any) => {\r\n            if (this.singleSelect) {\r\n                this._currentRow = undefined;\r\n                this._currentRowIndex = -1;\r\n            } else {\r\n                this.dtHeader.isCheckAll = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    private ps: PerfectScrollbar;\r\n    ngOnInit() {\r\n        setTimeout(() => {\r\n            this.setBodyHeight(true);\r\n            this.ps = this.perfectScrollbar.directiveRef.ps();\r\n        });\r\n\r\n        if (!this.id) {\r\n            this.id = `datatable_${this.idService.generate()}`;\r\n        }\r\n\r\n        this.paginationOptions.id = this.paginationOptions.id + this.id;\r\n        this.paginationOptions.remote = this.pagerOnServer;\r\n\r\n        this.copyData = deepCopy(this.data);\r\n\r\n        if (!this.beforeSortColumn) {\r\n            this.beforeSortColumn = () => of(true);\r\n        }\r\n    }\r\n\r\n    private setBodyHeight(refresh = true) {\r\n        let _tableheight = this.height;\r\n        if (this.showFilterBar) {\r\n            _tableheight = this.height - 46;\r\n        }\r\n        this.tableHeight = _tableheight;\r\n\r\n        let _scorllableBodyHeight = 0;\r\n        if (this.showHeader && this.tableHeader) {\r\n            // _scorllableBodyHeight = this.tableHeight - this.tableHeader.nativeElement.clientHeight;\r\n            _scorllableBodyHeight = this.tableHeight - this.tableHeader.nativeElement.querySelector('table').clientHeight;\r\n        }\r\n\r\n        if (this.pagination) {\r\n            _scorllableBodyHeight = _scorllableBodyHeight - 50;\r\n        }\r\n\r\n        this.scorllableBodyHeight = _scorllableBodyHeight;\r\n\r\n        if (refresh && this.cd && !this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    onClearSearchValue() {\r\n        this.searchData.value = '';\r\n        this.cd.detectChanges();\r\n        this.clearSearchValue.emit();\r\n    }\r\n\r\n    trackByRows = (index: number, row: any) => {\r\n        return row ? row[this.idField]: index;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.height && !changes.height.isFirstChange()) {\r\n            this.setBodyHeight();\r\n        }\r\n\r\n        if (changes.total && !changes.total.isFirstChange()) {\r\n            this.paginationOptions.totalItems = changes.total.currentValue;\r\n        }\r\n\r\n        if (changes.pageSize) {\r\n            this.paginationOptions.itemsPerPage = changes.pageSize.currentValue;\r\n        }\r\n\r\n        if (changes.pagerOnServer && !changes.pagerOnServer.isFirstChange()) {\r\n            this.paginationOptions.remote = changes.pagerOnServer.currentValue;\r\n        }\r\n        \r\n\r\n        if (changes.pageIndex && !changes.pageIndex.isFirstChange()) {\r\n            this.paginationOptions.currentPage = changes.pageIndex.currentValue;\r\n        }\r\n\r\n        if (changes.data && !changes.data.isFirstChange()) {\r\n\r\n            const rows = changes.data.currentValue;\r\n            this.updateCheckboxState(rows);\r\n            this.paginationOptions = { ...this.paginationOptions };\r\n            this.dataService.loadSuccess.next(changes.data.currentValue);\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        // æ¯æåç»ä»¶åå¥\r\n        if (!this.columns) {\r\n            if (this.columnsRef && this.columnsRef.length) {\r\n                this.columns = this.columnsRef.map(col => {\r\n                    return {\r\n                        width: col.width,\r\n                        title: col.title,\r\n                        field: col.field,\r\n                        align: col.align,\r\n                        fixed: col.fixed,\r\n                        className: col.className,\r\n                        multipleFilter: col.multipleFilter,\r\n                        filter: col.filter,\r\n                        media: col.media,\r\n                        sortable: col.sortable,\r\n                        edit: col.edit\r\n                    };\r\n                });\r\n            }\r\n        }\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            setTimeout(() => {\r\n                if (this.tablePager && this.pagerViewMode !== 'simple' ) {\r\n                    this.tablePager.nativeElement.addEventListener('mouseenter', this.mouseEnterOnPager = (e) => {\r\n                        let overflowX = 'auto';\r\n                        if (e.target.className.indexOf('pg-pagelist') > -1 || e.target.closest('.pg-pagelist')) {\r\n                            overflowX = \"unset\";\r\n                            this.pgScrollbar.nativeElement.scrollLeft = 0;\r\n                        } \r\n                        this.pgScrollbar.nativeElement.style.overflowX = overflowX;\r\n                    }, true);\r\n    \r\n                    this.tablePager.nativeElement.addEventListener('mouseleave', this.mouseLeaveOnPager =(e) => {\r\n                        this.pgScrollbar.nativeElement.style.overflowX = \"hidden\";\r\n                    });\r\n    \r\n                    this.tablePager.nativeElement.addEventListener('wheel', this.mouseWheelOnPager = (e) => {\r\n                        const box = this.tablePager.nativeElement;\r\n                        const sw = this.pgScrollbar.nativeElement.scrollWidth;\r\n                        const ow = box.offsetWidth;\r\n                \r\n                        if (sw > ow) {\r\n                            const right = sw - ow;\r\n                            const sl = Math.abs(this.pgScrollbar.nativeElement.scrollLeft);\r\n                            if (sl < right && e.deltaY > 0) {\r\n                                e.preventDefault();\r\n                                this.pgScrollbar.nativeElement.scrollLeft = sl + 50;\r\n                            }\r\n                \r\n                            if (sl > 0 && e.deltaY < 0) {\r\n                                e.preventDefault();\r\n                                this.pgScrollbar.nativeElement.scrollLeft = sl - 50;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        \r\n    }\r\n    ngOnDestroy() {\r\n        this.subscription.forEach(sub => {\r\n            sub.unsubscribe();\r\n        });\r\n        this.subscription = [];\r\n\r\n        this.pager = null;\r\n\r\n        if (this.tablePager && this.tablePager.nativeElement) {\r\n            this.tablePager.nativeElement.removeEventListener('mouseenter', this.mouseEnterOnPager, true);\r\n            this.tablePager.nativeElement.removeEventListener('mouseleave', this.mouseLeaveOnPager);\r\n            this.tablePager.nativeElement.removeEventListener('wheel', this.mouseWheelOnPager);\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        // è·åè¡¨æ ¼å®¹å¨  å³è¡¨æ ¼\r\n        this.datatableContainer = this.el.nativeElement.querySelector('.farris-datatable');\r\n        // this.headerTr = this.tableHeader.nativeElement.querySelectorAll('tr');\r\n\r\n        if (this.pagerViewMode == 'simple' && this.tablePager) {\r\n            this.tablePager.nativeElement.style.minHeight = '44px';\r\n            this.tablePager.nativeElement.style.height = '44px';\r\n        }\r\n    }\r\n\r\n    updateCheckboxState(rows: any[]) {\r\n\r\n        const updateCheckAllStatus = (f) => {\r\n            if (this.showHeader && this.dtHeader) {\r\n                this.dtHeader.isCheckAll = f;\r\n            }\r\n        };\r\n\r\n        if (rows && rows.length) {\r\n            if (this.selections) {\r\n                const keys = Object.keys(this.dtBody._selections);\r\n                if (keys.length) {\r\n                    let count = 0;\r\n                    const ids = rows.map((row: any) => {\r\n                        return row[this.idField].toString();\r\n                    });\r\n                    keys.forEach(id => {\r\n                        if (ids.indexOf(id) > -1) {\r\n                            count++;\r\n                        }\r\n                    });\r\n\r\n                    updateCheckAllStatus(ids.length === count);\r\n                } else {\r\n                    updateCheckAllStatus(false);\r\n                }\r\n            } else {\r\n                updateCheckAllStatus(false);\r\n            }\r\n        } else {\r\n            updateCheckAllStatus(false);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * è·åè¡¨æ ¼å®¹å¨çä½ç½®  è·ç¦»å·¦è¾¹è§å£åä¸è¾¹è§å£çè·ç¦»  å¦æé¡µé¢ææ»å¨æ¡  éè¦å ä¸æ»å¨æ¡æ»å¨çæ°å¼\r\n     */\r\n    getContainerOffset() {\r\n        const rect = this.datatableContainer.getBoundingClientRect();\r\n        return {\r\n            left: rect.left + document.body.scrollLeft,\r\n            top: rect.top + document.body.scrollTop,\r\n            right: rect.right,\r\n            bottom: rect.bottom,\r\n        };\r\n    }\r\n    /**\r\n     *  é¼ æ æä¸  å¼å§è®°å½ææ½çº¿çä½ç½®  ææ½çº¿å°è¾¾å½åé¼ æ ä½ç½®\r\n     * @param e é¼ æ å¯¹è±¡\r\n     */\r\n    beginDrag(e) {\r\n        this.dragLineX = e.pageX;\r\n        event.preventDefault();\r\n    }\r\n    /**\r\n     * é¼ æ ç§»å¨ ç§»å¨ææ½çº¿ä½ç½®åå¨\r\n     * @param e é¼ æ å¯¹è±¡\r\n     */\r\n    moveDrag(e) {\r\n        // è·åè¡¨æ ¼çå·¦è¾¹è·ç¦»\r\n        const containerLeft = this.getContainerOffset().left;\r\n        // è®¾ç½®ææ½çº¿çé«åº¦  å³è·åè¡¨å¤´+è¡¨åå®¹+è¡¨å°¾çé«åº¦  æ­¤è¡¨æ ¼ç»æåå«äºåé¡µ  å æ­¤è¦å»æåé¡µçé«åº¦\r\n        if (this.tablePager) {\r\n            this.dragLine.nativeElement.style.height = this.datatableContainer.offsetHeight -\r\n                this.tablePager.nativeElement.offsetHeight + 'px';\r\n        } else {\r\n            // const headerHeight = this.el.nativeElement.querySelector('.farris-table-header');\r\n            // const bodyHeight = this.el.nativeElement.querySelector('.ps-content');\r\n            this.dragLine.nativeElement.style.height = this.datatableContainer.offsetHeight + 'px';\r\n        }\r\n        // è®¾ç½®ææ½çº¿çé«åº¦ ææ½çº¿ç¸å¯¹äºè¡¨æ ¼relativeå®ä½æ¯absoluteï¼å æ­¤æ¯0\r\n        this.dragLine.nativeElement.style.top = 0 + 'px';\r\n        // é¼ æ ç§»å¨æ¶ï¼ææ½çº¿ç¸å¯¹äºè¡¨æ ¼çä½ç½®\r\n        this.dragLine.nativeElement.style.left = (e.pageX - containerLeft) + 'px';\r\n        // é¼ æ ç§»å¨  è®¾ç½®ææ½çº¿æ»æ¯å¯è§\r\n        this.dragLine.nativeElement.style.display = 'block';\r\n    }\r\n    // éæ°è®¡ç®è¡¨æ ¼å®½åº¦\r\n    /**\r\n     * é¼ æ æ¬èµ· éæ°è®¡ç®ååæ ¼å®½åº¦\r\n     * é¼ æ å¯¹è±¡\r\n     */\r\n    stopDrag(e, column) {\r\n        if (this.autoFitColumns) {\r\n            this.resizeColumn2(e, column);\r\n            if (this.ps) {\r\n                this.ps.update();\r\n            }\r\n            return;\r\n        }\r\n        this.resizeColumn(e, column);\r\n    }\r\n\r\n    resizeColumn(e, column) {\r\n        if (this.isCheckBox(column, 'dt-checkbox-cell')) {\r\n            this.dragLine.nativeElement.style.display = 'none';\r\n            return;\r\n        }\r\n        // åç§»é\r\n        const delta = e.pageX - this.dragLineX;\r\n        // ææ½ååå®½\r\n        const columnWidth = column.offsetWidth;\r\n        // ææ½ååå®½\r\n        let newColumnWidth = columnWidth + delta;\r\n        // æå°å®½åº¦\r\n        const minWidth = column.style.minWidth || 30;\r\n        // æ°å®½åº¦å¤§äºæç­äºæå°å®½åº¦æ¶\r\n        newColumnWidth = newColumnWidth > minWidth ? newColumnWidth : minWidth;\r\n        // éæ°è®¾ç½®å®½åº¦\r\n        let colIndex = -1;\r\n        const othersCol = [];\r\n        const cols = this.tableHeader.nativeElement.querySelectorAll('th');\r\n\r\n        // ç¶èç¹å®½åº¦\r\n        const parentWidth = column.parentElement.offsetWidth;\r\n        // å¤æ­æ¯ä¸æ¯æcheckbox\r\n        const firstElement = column.parentElement.firstElementChild;\r\n        const checkBoxWidth = this.isCheckBox(firstElement, 'dt-checkbox-cell') ? firstElement.offsetWidth : 0;\r\n        // å¶ä»åå®½åº¦\r\n        let othersWidth = parentWidth - columnWidth - checkBoxWidth;\r\n        let newOthersWidth = parentWidth - newColumnWidth - checkBoxWidth;\r\n        for (let i = 0; i < cols.length; i++) {\r\n            if (cols[i] === column) {\r\n                colIndex = i;\r\n            } else {\r\n                if (this.isCheckBox(cols[i], 'dt-checkbox-cell')) {\r\n                    continue;\r\n                }\r\n                const rate = cols[i].offsetWidth / othersWidth;\r\n                if (rate > 1) {\r\n                    // console.log(cols[i]);\r\n                }\r\n                let colWidth = newOthersWidth * rate;\r\n                if (newOthersWidth * rate > 15) {\r\n                    colWidth = newOthersWidth * rate;\r\n                } else {\r\n                    colWidth = 15;\r\n                    othersWidth = othersWidth - colWidth;\r\n                    newOthersWidth = newOthersWidth - colWidth;\r\n                    newColumnWidth = newColumnWidth - 15 + newOthersWidth * rate;\r\n                }\r\n                othersCol.push({ colIndex: i, colWidth });\r\n            }\r\n        }\r\n        this.resizeColGroup(this.dtHeader.el.nativeElement, colIndex, newColumnWidth, othersCol);\r\n        this.resizeColGroup(this.dtBody.el.nativeElement, colIndex, newColumnWidth, othersCol);\r\n        // è®¡ç®å®½åº¦å®æ¯  è®¾ç½®ææ½çº¿éè\r\n        this.dragLine.nativeElement.style.display = 'none';\r\n    }\r\n\r\n    resizeColumn2(e, column) {\r\n        if (this.isCheckBox(column, 'dt-checkbox-cell')) {\r\n            this.dragLine.nativeElement.style.display = 'none';\r\n            return;\r\n        }\r\n        // åç§»é\r\n        const delta = e.pageX - this.dragLineX;\r\n        // ææ½ååå®½\r\n        const columnWidth = column.offsetWidth;\r\n        // ææ½ååå®½\r\n        let newColumnWidth = columnWidth + delta;\r\n        // æå°å®½åº¦\r\n        const minWidth = column.style.minWidth || 30;\r\n        // æ°å®½åº¦å¤§äºæç­äºæå°å®½åº¦æ¶\r\n        newColumnWidth = newColumnWidth > minWidth ? newColumnWidth : minWidth;\r\n        // éæ°è®¾ç½®å®½åº¦\r\n        let colIndex = -1;\r\n        const othersCol = [];\r\n        const cols = this.tableHeader.nativeElement.querySelectorAll('th');\r\n\r\n        // ç¶èç¹å®½åº¦\r\n        const parentWidth = column.parentElement.offsetWidth;\r\n        // å¤æ­æ¯ä¸æ¯æcheckbox\r\n        const firstElement = column.parentElement.firstElementChild;\r\n        const checkBoxWidth = this.isCheckBox(firstElement, 'dt-checkbox-cell') ? firstElement.offsetWidth : 0;\r\n        // å¶ä»åå®½åº¦\r\n        let othersWidth = parentWidth - columnWidth - checkBoxWidth;\r\n        let newOthersWidth = parentWidth - newColumnWidth - checkBoxWidth;\r\n        for (let i = 0; i < cols.length; i++) {\r\n            if (cols[i] === column) {\r\n                colIndex = i;\r\n            } else {\r\n                if (this.isCheckBox(cols[i], 'dt-checkbox-cell')) {\r\n                    continue;\r\n                }\r\n                const rate = cols[i].offsetWidth / othersWidth;\r\n                if (rate > 1) {\r\n                    // console.log(cols[i]);\r\n                }\r\n                let colWidth = newOthersWidth * rate;\r\n                if (newOthersWidth * rate > 15) {\r\n                    colWidth = newOthersWidth * rate;\r\n                } else {\r\n                    colWidth = 15;\r\n                    othersWidth = othersWidth - colWidth;\r\n                    newOthersWidth = newOthersWidth - colWidth;\r\n                    newColumnWidth = newColumnWidth - 15 + newOthersWidth * rate;\r\n                }\r\n                othersCol.push({ colIndex: i, colWidth });\r\n            }\r\n        }\r\n        this.resizeColGroup(this.dtHeader.el.nativeElement, colIndex, newColumnWidth, []);\r\n        this.resizeColGroup(this.dtBody.el.nativeElement, colIndex, newColumnWidth, []);\r\n\r\n        const field = column.getAttribute('field');\r\n        if (field) {\r\n            const col = this.columns.find(n => n.field === field);\r\n            if (col) {\r\n                col.width = newColumnWidth;\r\n            }\r\n        }\r\n        // è®¡ç®å®½åº¦å®æ¯  è®¾ç½®ææ½çº¿éè\r\n        this.dragLine.nativeElement.style.display = 'none';\r\n    }\r\n\r\n    isCheckBox(elements, cName) {\r\n        return !!elements.className.match(new RegExp('(\\\\s|^)' + cName + '(\\\\s|$)'));\r\n    }\r\n\r\n    resizeColGroup(table, resizeColumnIndex, newColumnWidth, othersColumn) {\r\n        if (table) {\r\n            // æ­¤å¤è¦è§ä¸åçè¡¨æ ¼ç»ææ¥ç¡®å® æ¬ç»ä»¶ä¸­  headeråbodyç»æç¸å\r\n            const colGroup = table.childNodes[0].children[0].nodeName === 'COLGROUP' ?\r\n                table.childNodes[0].children[0] : null;\r\n            if (colGroup) {\r\n                const col = colGroup.children[resizeColumnIndex];\r\n                col.style.width = newColumnWidth + 'px';\r\n                for (let i = 0; i < othersColumn.length; i++) {\r\n                    const otherCol = colGroup.children[othersColumn[i].colIndex];\r\n                    if (otherCol && othersColumn[i].colWidth) {\r\n                        otherCol.style.width = othersColumn[i].colWidth + 'px';\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error('Scrollable tables require a colgroup to support resizable columns');\r\n            }\r\n        }\r\n    }\r\n    onScrollX(e: any) {\r\n        // æ¨ªåæ»å¨ éåºå®è¡¨å¤´æ»å¨\r\n        const x = e.srcElement.scrollLeft;\r\n        this.tableHeader.nativeElement.scrollTo(x, 0);\r\n    }\r\n    /**\r\n     * æ»å¨æ¡çºµåæ»å¨\r\n     */\r\n    onScrollY(e: any) {\r\n        if (!this.hasFixed) {\r\n            return;\r\n        }\r\n        const y = e.srcElement.scrollTop;\r\n        this.dtLeftFixed.nativeElement.style.top = -y + 'px';\r\n        this.dtRightFixed.nativeElement.style.top = -y + 'px';\r\n    }\r\n\r\n    onPageChange(page: { pageIndex: number, pageSize: number }) {\r\n        if (this.pageIndex !== page.pageIndex) {\r\n            this.pageIndex = page.pageIndex;\r\n            this.paginationOptions.currentPage = page.pageIndex;\r\n            this.pageChanged.emit({ pageInfo: page, search: this.searchData, sortName: this.sortName, sortOrder: this.sortOrder });\r\n        }\r\n    }\r\n\r\n    onPageSizeChange(pageSize: number) {\r\n        if (this.pageSize !== pageSize && this.total) {\r\n            this.paginationOptions.itemsPerPage = pageSize;\r\n            this.pageSize = pageSize;\r\n\r\n            const total = this.total;\r\n            let pageLength = Math.floor(total / pageSize);\r\n            if (total % pageSize > 0) {\r\n                pageLength += 1;\r\n            }\r\n\r\n            if (pageLength && this.pageIndex > pageLength) {\r\n                this.pageIndex = pageLength;\r\n                this.paginationOptions.currentPage = this.pageIndex;\r\n            }\r\n\r\n            this.pageSizeChanged.emit({\r\n                pageInfo: { pageIndex: this.pageIndex, pageSize },\r\n                search: this.searchData, sortName: this.sortName, sortOrder: this.sortOrder\r\n            });\r\n        }\r\n    }\r\n\r\n    onSearch($event) {\r\n        if ($event.originalEvent) {\r\n            $event.originalEvent.stopPropagation();\r\n        }\r\n        this.search.emit(this.searchData);\r\n    }\r\n\r\n    onCheckAll(state: boolean) {\r\n        this.dataService.selectedAll.next(state);\r\n        this.checkAll.emit(state);\r\n    }\r\n\r\n\r\n    onSelectedRow(e: any) {\r\n        this.selectedRow.emit({ data: e.rowData, index: e.rowIndex });\r\n        // å¼å®¹\r\n        this.selectRows.emit({ data: e.rowData, index: e.rowIndex });\r\n    }\r\n\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    resize(size: { width: number, height: number }) {\r\n        if (!size) {\r\n            return;\r\n        }\r\n        if (this.width !== size.width || this.height !== size.height) {\r\n            this.width = size.width;\r\n            this.height = size.height;\r\n        }\r\n        this.setBodyHeight();       \r\n    }\r\n\r\n    loadData(e: { pageSize: number, total: number, data: any, pageIndex: number }) {\r\n        this.data = e.data;\r\n        if (this.pagination) {\r\n            const { total = 0, pageSize = 20, pageIndex = 1 } = { ...e };\r\n            this.paginationOptions.totalItems = total;\r\n            this.paginationOptions.itemsPerPage = pageSize;\r\n            this.paginationOptions.currentPage = pageIndex;\r\n            this.paginationOptions.pageList = this.pageList;\r\n\r\n            this.paginationOptions = {...this.paginationOptions};\r\n            this.total = total;\r\n            this.pageSize = pageSize;\r\n            this.pageIndex = pageIndex;\r\n        }\r\n        this.cd.detectChanges();\r\n        // TFS 580296\r\n        setTimeout(() => {\r\n            this.ps && this.ps.update();\r\n        }, 10);\r\n        this.updateCheckboxState(this.data);\r\n    }\r\n\r\n    /*\r\n     */\r\n    onCellClick(e) {\r\n        this.cellClick.emit(e);\r\n    }\r\n\r\n    /* æ·»å è¡ */\r\n    addRows(dataItem) {\r\n        this.data = this.data.concat(dataItem);\r\n    }\r\n    /* å é¤è¡ */\r\n    removeRows() {\r\n        const SELECTIONS = this.selections;\r\n        if (this.singleSelect) {\r\n            for (let i = 0; i < this.data.length; i++) {\r\n                if (this.data[i] === SELECTIONS) {\r\n                    this.data.splice(i, 1);\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < SELECTIONS.length; i++) {\r\n                for (let j = 0; j < this.data.length; j++) {\r\n                    if (SELECTIONS[i][this.idField] === this.data[j][this.idField]) {\r\n                        this.data.splice(j, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkRow(rid: any, emit = false) {\r\n        let rowIndex = -1;\r\n        const rowData = this.data.find((n, i) => {\r\n            if (n[this.idField] == rid) {\r\n                rowIndex = i;\r\n                return true;\r\n            }\r\n        });\r\n\r\n\r\n        if (!rowData) {\r\n            return;\r\n        }\r\n\r\n        if (!this.selections) {\r\n            this.selections = { [rid]: rowData };\r\n        } else {\r\n            this.selections = {\r\n                [rid]: rowData, ...this.selections.reduce((r, n) => {\r\n                    r[n[this.idField]] = n;\r\n                    return r;\r\n                }, {})\r\n            };\r\n        }\r\n\r\n        this.dataService.selectedRow.next({\r\n            rowIndex,\r\n            rowData\r\n        });\r\n\r\n        if (emit) {\r\n            const p = { data: rowData, index: rowIndex };\r\n            this.selectedRow.emit(p);\r\n            // å¼å®¹\r\n            this.selectRows.emit(p);\r\n        }\r\n    }\r\n\r\n    unCheckRow(rid: any, emit = false) {\r\n        let rowIndex = -1;\r\n        const rowData = this.data.find((n, i) => {\r\n            if (n[this.idField] == rid) {\r\n                rowIndex = i;\r\n                return true;\r\n            }\r\n        });\r\n        if (this.selections) {\r\n            this.selections = this.selections.filter(n => n[this.idField] != rid).reduce((r, n) => {\r\n                r[n[this.idField]] = n;\r\n                return r;\r\n            }, {});\r\n            this.dataService.unSelectedRow.next({\r\n                rowIndex,\r\n                rowData\r\n            });\r\n            if (emit) {\r\n                this.unSelectRow.emit({ data: rowData, index: rowIndex });\r\n            }\r\n        }\r\n    }\r\n\r\n    unCheckRows(ids: any) {\r\n        if (this.selections) {\r\n            this.selections = this.selections.filter(n => !ids.includes(n[this.idField])).reduce((r, n) => {\r\n                r[n[this.idField]] = n;\r\n                return r;\r\n            }, {});\r\n\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    clearSelections() {\r\n        this.selections = [];\r\n    }\r\n\r\n    onKeydownEvent($event) {\r\n        if (!$event || !this.singleSelect || !this.data || !this.data.length) {\r\n            return;\r\n        }\r\n\r\n        if (!['ArrowDown', 'ArrowUp'].includes($event.code)) {\r\n            return;\r\n        }\r\n\r\n\r\n        let newIdx;\r\n        if ($event.code === 'ArrowDown') {\r\n            newIdx = this._currentRowIndex + 1;\r\n            if (newIdx >= this.data.length) {\r\n                newIdx = 0;\r\n            }\r\n        } else if ($event.code === 'ArrowUp') {\r\n            if (this._currentRowIndex !== -1) {\r\n                newIdx = this._currentRowIndex - 1;\r\n            }\r\n        }\r\n\r\n        if (newIdx >= 0) {\r\n            this.dtBody.selectedRow($event, newIdx, this.data[newIdx]);\r\n        }\r\n\r\n        setTimeout(() => {\r\n            // scroll intoView\r\n            const trDoms = this.dtBody.el.nativeElement.querySelectorAll('.ui-table-tbody tr');\r\n            if (trDoms && trDoms[this._currentRowIndex]) {\r\n                trDoms[this._currentRowIndex].scrollIntoView({ block: 'nearest' });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-04-08 16:51:39\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-09-23 16:51:21\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, EventEmitter, AfterViewInit, Output, ElementRef, Renderer2, ViewChild } from '@angular/core';\r\nimport { deepCopy, convertColumns } from '../datatable-column';\r\nimport { DataTableService } from '../datatable.service';\r\nimport { DataColumn } from '@farris/ui-common/column';\r\nimport { CommonUtils } from '@farris/ui-common';\r\nimport { DataTableComponent } from '../datatable.component';\r\nimport { DTCheckboxComponent } from '../datatable-checkbox.component';\r\n\r\n@Component({\r\n    selector: 'datatable-header',\r\n    template: `\r\n        <table class=\"table\" [class.table-sm]=\"size === 'small'\">\r\n            <colgroup>\r\n                <col class=\"dt-checkbox-cell\" *ngIf=\"!singleSelect\" />\r\n                <col *ngFor=\"let col of columns\" [style.width]=\"col.width + 'px'\" />\r\n            </colgroup>\r\n            <thead>\r\n                <tr>\r\n                    <th drag-column class=\"dt-checkbox-cell datatable-fixed-left\" *ngIf=\"!singleSelect\">\r\n                        <dt-checkbox #checkall *ngIf=\"data && data.length\" [checked]=\"isCheckAll\" (checkedChange)=\"onCheckedChange($event)\"></dt-checkbox>\r\n                    </th>\r\n                    <th drag-column *ngFor=\"let col of columns; let i = index\" #dragbar=\"resizeRef\"\r\n                        [class.resizable-column]=\"dt.resizableColumns && !dt.hasFixed\"\r\n                        [attr.field]=\"col.field\"\r\n                        [style.textAlign]=\"col.hAlign || 'left'\" [class.datatable-fixed-right]=\"col['fixed'] === 'right'\">\r\n                        <span [style.marginRight.px]=\"col.sortable ? 10: 0\">{{ col.title }}</span>\r\n                        <ng-container *ngIf=\"col.sortable\">\r\n                            <span *ngIf=\"col.order\" class=\"f-datatable-sort\"\r\n                                [ngClass]=\"{\r\n                                  'f-datatable-sort-asc':col.order === 'asc',\r\n                                  'f-datatable-sort-desc':col.order === 'desc'\r\n                                }\"\r\n                                (click)=\"onSortColumnClick($event, col)\">\r\n                            </span>\r\n                            <span *ngIf=\"!col.order\" class=\"f-datatable-sort\" (click)=\"onSortColumnClick($event, col)\"></span>\r\n                        </ng-container>\r\n                        <span class=\"column-resizer\" (mousedown)=\"dragbar.onMouseDown($event)\" *ngIf=\"dt.resizableColumns && !dt.hasFixed\"></span>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n        </table>\r\n    `,\r\n    styleUrls: ['./datatable-header.component.scss']\r\n})\r\nexport class DataTableHeaderComponent implements OnInit, AfterViewInit {\r\n    @Input() size: string;\r\n    @Input() hover: boolean;\r\n    @Input() columns: DataColumn[] = [];\r\n    @Input() singleSelect = true;\r\n    @Input() fixed: string;\r\n    // æ°æ®æåºä½¿ç¨\r\n    @Input() rows: any;\r\n\r\n    // æ¢å¤æºæ°æ®ä½¿ç¨\r\n    @Input() data: any;\r\n    @Input() rowClassName: (row: any, index: number) => string;\r\n    @Output() checkedAll = new EventEmitter();\r\n\r\n    @Output() rowsChange = new EventEmitter<any>();\r\n    @Output() loadData = new EventEmitter<{ pageSize: number; total: number; data: any; pageIndex: number }>();\r\n\r\n\r\n    @ViewChild('checkall') checkallEl: DTCheckboxComponent;\r\n\r\n    sortType = {};\r\n    filterFields = {};\r\n    clickedUp = false;\r\n    clickedDown = false;\r\n    copyColumns: any;\r\n    copyRows: any;\r\n    originRows: any;\r\n    isCheckAll = false;\r\n    allClass = ' ';\r\n    constructor(\r\n        public el: ElementRef,\r\n        private dataService: DataTableService,\r\n        private render: Renderer2,\r\n        public utils: CommonUtils,\r\n        public dt: DataTableComponent\r\n    ) {\r\n        this.allClass += this.el.nativeElement.classList.value;\r\n\r\n\r\n        this.dataService.updateCheckAllStatus.subscribe( (n: number) => {\r\n            if (n !== 2) {\r\n                this.isCheckAll = n ? true : false;\r\n                // this.checkallEl.elementRef.nativeElement.checked = this.isCheckAll;\r\n            } else {\r\n                this.isCheckAll = false;\r\n                // this.checkallEl.elementRef.nativeElement.checked = false;\r\n            }\r\n        });\r\n    }\r\n    width = '100%';\r\n    ngOnInit() {\r\n        if (this.fixed === 'left') {\r\n            this.columns = convertColumns(this.columns, 'left');\r\n        }\r\n        if (this.fixed === 'right') {\r\n            this.columns = convertColumns(this.columns, 'right');\r\n        }\r\n    }\r\n    ngAfterViewInit() {}\r\n\r\n    onCheckedChange($event) {\r\n        this.isCheckAll = $event.checked;\r\n        this.checkedAll.emit($event.checked);\r\n    }\r\n    createRowClassName(row, index) {\r\n        return this.rowClassName ? this.rowClassName(row, index) : '';\r\n    }\r\n\r\n    private compare(a, b) {\r\n        if (typeof a  === 'string') {\r\n            return a.localeCompare(b);\r\n        } else {\r\n            return a === b ? 0 : (a > b ? 1 : -1);\r\n        }\r\n    }\r\n    private _sort(r1, r2) {\r\n        let r = 0;\r\n        const sortFields = this.dt.sortName.split(',');\r\n        const orders = this.dt.sortOrder.split(',');\r\n\r\n        if (!this.dt.sortName) {\r\n            return r;\r\n        }\r\n\r\n        for (let i = 0; i < sortFields.length; i++) {\r\n            const sn = sortFields[i];\r\n            const so = orders[i];\r\n\r\n            const col = this.columns.find(c => c.field === sn);\r\n\r\n            const orderby = col['sorter'] || this.compare;\r\n            let v1 = this.utils.getValue(sn, r1);\r\n            if (v1 === null || v1 === undefined) {\r\n                v1 = '';\r\n            }\r\n            let v2 = this.utils.getValue(sn, r2);\r\n            if (v2 === null || v2 === undefined) {\r\n                v2 = '';\r\n            }\r\n            r = orderby(v1, v2);\r\n            if (r !== 0) {\r\n                return r * (so === 'asc' ? 1 : -1);\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n    private clientSort() {\r\n        const sortedData = this.data.sort(this._sort.bind(this));\r\n        this.loadData.emit(sortedData);\r\n    }\r\n\r\n    onSortColumnClick($event, col) {\r\n        if (!col.sortable) {\r\n            return;\r\n        }\r\n        const sortName = this.dt.sortName;\r\n        const sortOrder = this.dt.sortOrder;\r\n        let sortFields = [];\r\n        let sortOrders = [];\r\n        if (sortName) {\r\n            sortFields = sortName.split(',');\r\n            sortOrders = sortOrder.split(',');\r\n        }\r\n\r\n        const colOrder = col.order || 'asc';\r\n        let newOrder = colOrder;\r\n        const i = sortFields.findIndex(n => n === col.field);\r\n        if (i >= 0) {\r\n            const _order = sortOrders[i] === 'asc' ? 'desc' : 'asc';\r\n            newOrder = _order;\r\n            // if (this.dt.multiSort && newOrder === 'asc') {\r\n            if (newOrder === 'asc') {\r\n                newOrder = undefined;\r\n                sortFields.splice(i, 1);\r\n                sortOrders.splice(i, 1);\r\n                // if (sortFields.length === 0) {\r\n                //     sortFields.push(col.field);\r\n                //     sortOrders.push('asc');\r\n                //     newOrder = 'asc';\r\n                // }\r\n            } else {\r\n                sortOrders[i] = _order;\r\n            }\r\n        } else {\r\n            if (this.dt.multiSort) {\r\n                sortFields.push(col.field);\r\n                sortOrders.push(colOrder);\r\n            } else {\r\n                sortFields = [col.field];\r\n                sortOrders = [colOrder];\r\n            }\r\n        }\r\n\r\n        col.order = newOrder;\r\n\r\n        this.dt.sortName = sortFields.join(',');\r\n        this.dt.sortOrder = sortOrders.join(',');\r\n        // this.dfs.setSortInfo(this.dg.sortName, this.dg.sortOrder);\r\n\r\n        if (!this.dt.multiSort) {\r\n            const updateFieldOrder = (cols: DataColumn[]) => {\r\n                if (!cols || !cols.length) {\r\n                    return;\r\n                }\r\n                cols.forEach(c => {\r\n                    c.order = undefined;\r\n                    const k = sortFields.findIndex(f => f === c.field);\r\n                    if (k >= 0) {\r\n                        c.order = sortOrders[k];\r\n                    }\r\n                });\r\n            };\r\n\r\n            updateFieldOrder(this.columns);\r\n            // this.cdRef.detectChanges();\r\n        }\r\n\r\n        this.dt.beforeSortColumn(this.dt.sortName, this.dt.sortOrder).subscribe(() => {\r\n            if (this.dt.remoteSort) {\r\n                // this.reload();\r\n            } else {\r\n                this.clientSort();\r\n            }\r\n\r\n            this.dt.columnSorted.emit({ sortName: this.dt.sortName, sortOrder: this.dt.sortOrder });\r\n        });\r\n    }\r\n\r\n    deepCopyData() {\r\n        const copyColumns = deepCopy(this.columns);\r\n        const copyRows = deepCopy(this.rows);\r\n        copyColumns.forEach(element => {\r\n            element.sortType = 'normal';\r\n        });\r\n        return {\r\n            copyColumns,\r\n            copyRows\r\n        };\r\n    }\r\n    /* è¥å­å¨ç­éæ¡ä»¶ ä¿å­æé®å¯ç¹å»\r\n     */\r\n    hasChecked(col) {\r\n        if (this.filterFields.hasOwnProperty(col.field)) {\r\n            this.filterFields[col.field].some(ele => {\r\n                return ele.checked;\r\n            });\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import { LocaleService } from '@farris/ui-locale';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-14 13:53:03\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-01 15:02:29\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    Optional,\r\n    ElementRef,\r\n    Renderer2,\r\n    AfterViewInit,\r\n    EventEmitter,\r\n    Directive,\r\n    HostListener,\r\n    SkipSelf,\r\n    Injector,\r\n    OnChanges,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    NgZone\r\n} from '@angular/core';\r\nimport { convertColumns } from '../datatable-column';\r\nimport { DataTableService } from '../datatable.service';\r\nimport { DataTableComponent } from '../datatable.component';\r\nimport { ColumnFormatService, DataColumn } from '@farris/ui-common/column';\r\nimport { CommonUtils } from '@farris/ui-common';\r\n\r\n@Directive({\r\n    selector: '[dblclick]'\r\n})\r\nexport class DTDblClickRowDirective implements OnInit {\r\n    @Input('dblclick') row;\r\n    constructor(\r\n        public el: ElementRef,\r\n        @Optional() public dt: DataTableComponent\r\n    ) {}\r\n\r\n    ngOnInit() {}\r\n\r\n    @HostListener('dblclick', ['$event'])\r\n    ondblclick(event: Event) {\r\n        if (this.row) {\r\n            this.dt.rowDblClick.emit(this.row);\r\n        }\r\n\r\n        event.stopPropagation();\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'datatable-body',\r\n    template: `\r\n        <table\r\n            class=\"table\"\r\n            [class.table-sm]=\"size === 'small'\"\r\n            [class.table-hover]=\"dt.hover\"\r\n            [class.table-striped]=\"striped\"\r\n            [class.table-bordered]=\"bordered\"\r\n            [class.f-table-norecords]=\"!rows || !rows.length\"\r\n            style=\"border-collapse: separate;border-spacing: 0;\"\r\n        >\r\n            <colgroup>\r\n                <col class=\"dt-checkbox-cell\" *ngIf=\"!dt.singleSelect\" />\r\n                <col *ngFor=\"let col of columns\" [style.width]=\"col.width + 'px'\" />\r\n            </colgroup>\r\n\r\n            <tbody class=\"ui-table-tbody \" *ngIf=\"rows && rows.length\">\r\n                <tr\r\n                    *ngFor=\"let row of rows; trackBy: dt.trackByRows; let rowIndex = index\"\r\n                    [ngClass]=\"createRowClassName(row, rowIndex)\"\r\n                    (click)=\"selectedRow($event, rowIndex, row)\"\r\n                    [class.selected]=\"isSelected(row, tr)\" #tr\r\n                    [dblclick]=\"row\"\r\n                    [ngStyle]=\"renderRowStyle(row, rowIndex)\"\r\n                >\r\n                    <td class=\"dt-checkbox-cell datatable-fixed-left\" *ngIf=\"!dt.singleSelect\" \r\n                    [cell-styler]=\"{row: row, index: rowIndex}\">\r\n                        <dt-checkbox\r\n                            [checked]=\"isSelected(row, tr)\"\r\n                            (checkedChange)=\"onChecked($event, rowIndex, row)\"\r\n                        ></dt-checkbox>\r\n                    </td>\r\n                    <td\r\n                        [ngClass]=\"getTdClassName(row[col.field], col)\"\r\n                        *ngFor=\"let col of columns; let colIndex = index\"\r\n                        [style.textAlign]=\"col.align || 'left'\"\r\n                        \r\n                        (click)=\"onCellClick($event, col, row)\"\r\n                        [class.datatable-fixed-right]=\"col['fixed'] === 'right'\"\r\n                        [cell-styler]=\"{val:utils.getValue(col.field, row), row: row, index: rowIndex, col: col}\"\r\n                    >\r\n                        <ng-container *ngIf=\"!col.cellTempl; else cellTemp\">\r\n                            <span *ngIf=\"col.formatter\" [innerHTML]=\"formatData(col.field, row, col.formatter) | safe:'html'\" ></span>\r\n                            <!-- <span *ngIf=\"col.formatter\" [innerHTML]=\" col.field | getvalue: row | columnformatter: col : row | safe: 'html'\" ></span> -->\r\n                            <span *ngIf=\"!col.formatter\" [title]=\"utils.getValue(col.field, row)\"\r\n                             [textContent]=\"utils.getValue(col.field, row)\"></span>\r\n                        </ng-container>\r\n                        <ng-template\r\n                            #cellTemp\r\n                            [ngTemplateOutlet]=\"col.cellTempl\"\r\n                            [ngTemplateOutletContext]=\"{\r\n                                $implicit: row,\r\n                                rowIndex: rowIndex,\r\n                                value: row[col.field]\r\n                            }\"\r\n                        ></ng-template>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n\r\n            <tbody class=\"ui-table-tbody\" *ngIf=\"!rows || !rows.length\" #emptyTbody>\r\n                <tr class=\"f-table-norecords-row\">\r\n                    <td [attr.align]=\"'center'\"\r\n                        class=\"farris-treetable-emptydata\"\r\n                        [attr.colspan]=\"columns.length\"\r\n                    >\r\n                        <div\r\n                            class=\"f-table-norecords-content\"\r\n                            [innerHTML]=\"emptyMessage | safe: 'html'\"\r\n                        ></div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    `,\r\n    styles: [\r\n        `\r\n            .table td:focus-within {\r\n                box-shadow: inset 0 0 0 2px rgba(0, 0, 0, 0.13);\r\n            }\r\n            .table td div {\r\n                width: 100%;\r\n                height: 100%;\r\n            }\r\n            .table td input {\r\n                width: 100%;\r\n                height: 100%;\r\n                font-family: auto;\r\n                line-height: 1;\r\n                font-size: 13px;\r\n            }\r\n            .table td input:focus {\r\n                border: 0;\r\n            }\r\n            input[type='checkbox']:focus {\r\n                outline: none;\r\n            }\r\n\r\n            .f-table-norecords-row:hover {\r\n                background-color: transparent!important;\r\n                cursor: default!important;\r\n            }\r\n        `\r\n    ]\r\n})\r\nexport class DataTableBodyComponent implements OnInit, AfterViewInit, OnChanges {\r\n    @Input() size: string;\r\n    @Input() hover: boolean;\r\n    @Input() bordered: boolean;\r\n    @Input() striped: boolean;\r\n    @Input() columns: DataColumn[];\r\n    @Input() fixed: string;\r\n    @Input() rows: any[] = [];\r\n    @Input() rowClassName: (row: any, index: number) => string;\r\n    @Input() cellClassName: (value: any, col: any) => string;\r\n    @Output() rowDblClick = new EventEmitter();\r\n    @Output() selectRow: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() cellEdit: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() cellClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild('emptyTbody') emptyTbodyElRef: ElementRef;\r\n\r\n    lastRowIndex = 0;\r\n    lastColumnIndex = 0;\r\n    boxShadow: string;\r\n    _rows: any;\r\n    edit = {};\r\n    className = {};\r\n    isRowTempl = false;\r\n    selectedRowIndex = -1;\r\n    _selections = {};\r\n    emptyMessage = 'ææ æ°æ®';\r\n\r\n    // å·²éæ©çè¡ é»è®¤ä¸ºç©º\r\n    set selections(v) {\r\n        this._selections = v || {};\r\n        this.dt.updateCheckboxState(this.rows);\r\n    }\r\n    get selections(): any {\r\n        if (!this._selections) {\r\n            return;\r\n        }\r\n        const keys = Object.keys(this._selections);\r\n        if (keys.length) {\r\n            if (this.dt.singleSelect) {\r\n                return this._selections;\r\n            } else {\r\n                return keys.map(k => this._selections[k]);\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    private localeService: LocaleService;\r\n    private ngzone: NgZone;\r\n    constructor(\r\n        public el: ElementRef,\r\n        private dataService: DataTableService,\r\n        private render: Renderer2,\r\n        @Optional() public dt: DataTableComponent,\r\n        public colFormatSer: ColumnFormatService,\r\n        public utils: CommonUtils,\r\n        private injector: Injector\r\n    ) {\r\n        this.localeService = this.injector.get(LocaleService);\r\n        this.ngzone = this.injector.get(NgZone, null);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.dataService.selectedAll.subscribe(allChecked => {\r\n            const idfield = this.idField();\r\n            this.rows.forEach(row => {\r\n                if (allChecked) {\r\n                    this._selections[row[idfield]] = row;\r\n                } else {\r\n                    delete this._selections[row[idfield]];\r\n                }\r\n            });\r\n        });\r\n        if (this.rows) {\r\n            this.isRowTempl = this.rows.some(row => {\r\n                return row.hasOwnProperty('rowTempl');\r\n            });\r\n        }\r\n        if (this.fixed === 'left') {\r\n            this.columns = convertColumns(this.columns, 'left');\r\n        }\r\n        if (this.fixed === 'right') {\r\n            this.columns = convertColumns(this.columns, 'right');\r\n        }\r\n\r\n        this.emptyMessage = this.localeService.getValue('datagrid.emptyMessage');\r\n    }\r\n    ngAfterViewInit() {\r\n        this._rows = this.el.nativeElement.querySelectorAll('tr');\r\n        this.checkBodyHeightWhenEmptyData();\r\n    }\r\n\r\n    checkBodyHeightWhenEmptyData() {\r\n        if (this.emptyTbodyElRef && !(this.rows && this.rows.length)) {\r\n            if (this.emptyTbodyElRef.nativeElement.offsetHeight < 130) {\r\n                this.emptyTbodyElRef.nativeElement.style.height = this.dt.pagination ? '150px': '120px';\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.rows && !changes.rows.isFirstChange()) {\r\n            if (!this.dt.singleSelect) {\r\n                const _rows = changes.rows.currentValue || [];\r\n                const checkedRows = _rows.map(n => {\r\n                    return this.isSelected(n) ? n : 0;\r\n                }).filter(n => n);\r\n\r\n                if (!_rows.length) {\r\n                    this.dataService.updateCheckAllStatus.next(0);\r\n                    return;\r\n                }\r\n                const idfield = this.idField();\r\n                let checkTotal = 0;\r\n                _rows.forEach(element => {\r\n                    if (checkedRows.find(n => n[idfield] === element[idfield])) {\r\n                        checkTotal += 1;\r\n                    }\r\n                });\r\n\r\n\r\n                if (_rows.length  === checkTotal) {\r\n                    this.dataService.updateCheckAllStatus.next(1);\r\n                } else {\r\n                    if (checkedRows.length === 0) {\r\n                        this.dataService.updateCheckAllStatus.next(0);\r\n                    } else {\r\n                        this.dataService.updateCheckAllStatus.next(2);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * è·åå¯¹è±¡ä¸­æå®å­æ®µçå¼ã field: å¯ä»¥ä¸ºå¸¦æå±çº§ç»æçè·¯å¾ï¼å¦ï¼ user.firstName | name ç­\r\n     */\r\n    getValue(field: string, data: any) {\r\n        if (field.indexOf('.') === -1) {\r\n            return data[field];\r\n        } else {\r\n            return (\r\n                field.split('.').reduce((obj, key) => {\r\n                    return obj[key];\r\n                }, data) || ''\r\n            );\r\n        }\r\n    }\r\n    selectedRow(event: any, index: number, data: any) {\r\n        if (event) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n        let isSelected = false;\r\n        const idfield = this.idField();\r\n\r\n\r\n        if (this.dt.singleSelect) {\r\n            if (this.selectedRowIndex !== index || !this._selections || this._selections[idfield] !== data[idfield]) {\r\n                this.selectedRowIndex = index;\r\n                this._selections = data;\r\n                isSelected = true;\r\n                this.dataService.selectedRow.next({\r\n                    rowIndex: index,\r\n                    rowData: data\r\n                });\r\n            } else {\r\n                if (!this.dt.keepSelect) {\r\n                    this.selectedRowIndex = -1;\r\n                    this._selections = undefined;\r\n                    isSelected = false;\r\n\r\n\r\n                    this.dataService.unSelectedRow.next({\r\n                        rowIndex: index,\r\n                        rowData: data\r\n                    });\r\n                } else {\r\n                    isSelected = true;\r\n                }\r\n            }\r\n        } else {\r\n            if (this.isSelected(data)) {\r\n                delete this._selections[data[idfield]];\r\n\r\n                isSelected = false;\r\n                this.dataService.unSelectedRow.next({\r\n                    rowIndex: index,\r\n                    rowData: data\r\n                });\r\n            } else {\r\n                this._selections[data[this.idField()]] = data;\r\n                isSelected = true;\r\n                this.dataService.selectedRow.next({\r\n                    rowIndex: index,\r\n                    rowData: data\r\n                });\r\n            }\r\n        }\r\n\r\n        if (isSelected) {\r\n            this.dt.selectedRow.emit({ data, index });\r\n            // å¼å®¹\r\n            this.dt.selectRows.emit({ data, index });\r\n        } else {\r\n            this.dt.unSelectRow.emit({ data, index });\r\n        }\r\n    }\r\n\r\n    onChecked(event: any, index: number, data: any) {\r\n        const state = event.checked;\r\n        const idfield = this.dt.idField;\r\n        if (state) {\r\n            this._selections[data[idfield]] = data;\r\n            this.dataService.selectedRow.next({\r\n                rowIndex: index,\r\n                rowData: data\r\n            });\r\n            this.dt.selectedRow.emit({ data, index });\r\n            // å¼å®¹\r\n            this.dt.selectRows.emit({ data, index });\r\n        } else {\r\n            delete this._selections[data[idfield]];\r\n            this.dataService.unSelectedRow.next({\r\n                rowIndex: index,\r\n                rowData: data\r\n            });\r\n            this.dt.unSelectRow.emit({ data, index });\r\n        }\r\n        event.originalEvent.stopPropagation();\r\n    }\r\n\r\n    private idField() {\r\n        return this.dt.idField;\r\n    }\r\n\r\n    isSelected(row: any, tr?: any) {\r\n        const idfield = this.idField();\r\n        \r\n\r\n\r\n        if (this._selections) {\r\n            if (this.dt.singleSelect) {\r\n                return this._selections[idfield] === row[idfield];\r\n            } else {\r\n                return this._selections[row[idfield]] !== undefined;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    formatData(field: any, data: any, formatter: any) {\r\n        const value = this.utils.getValue(field, data, true);\r\n        return this.colFormatSer.format(value, data, formatter);\r\n    }\r\n    // æ·»å èªå®ä¹è®¾ç½®å ååæ ¼ç±»æ ·å¼\r\n    getTdClassName(value, col) {\r\n        const tempClassName = {};\r\n        // åç±»çæ ·å¼\r\n        if (\r\n            col.className &&\r\n            Object.prototype.toString.call(col.className) === '[object String]'\r\n        ) {\r\n            tempClassName[col.className] = true;\r\n        }\r\n        if (this.cellClassName && this.cellClassName(value, col)) {\r\n            tempClassName[this.cellClassName(value, col)] = true;\r\n        }\r\n        return tempClassName;\r\n    }\r\n    createRowClassName(row, index) {\r\n        return this.rowClassName ? this.rowClassName(row, index) : '';\r\n    }\r\n    onCellClick(event: Event, col: any, row: any) {\r\n        this.cellClick.emit({event, col, row});\r\n    }\r\n\r\n    renderRowStyle(row, index) {\r\n        if (this.dt.rowStyler) {\r\n            return this.dt.rowStyler({ data: row, index });\r\n        }\r\n        return '';\r\n    }\r\n\r\n    renderCellStyle(val, row, index, col) {\r\n        if (this.dt.cellStyler) {\r\n            return this.dt.cellStyler({ value: val, data: row, index, col, field: col.field });\r\n        }\r\n        return '';\r\n    }\r\n}\r\n","import { Component, Input, ContentChild, TemplateRef } from '@angular/core';\r\nimport { DataColumn } from '@farris/ui-common/column';\r\n@Component({\r\n    selector: 'datatable-footer',\r\n    template:\r\n        `\r\n    <div class=\"table\"\r\n    [class.table-hover]=\"hover\">\r\n        <ng-container *ngIf=\"!tableFooter\">\r\n                <table class=\"table table-hover\">\r\n                        <colgroup>\r\n                            <col class=\"dt-checkbox-cell\" />\r\n                            <col *ngFor=\"let col of columns\" [style.width]=\"col.width + 'px'\" />\r\n                        </colgroup>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"dt-checkbox-cell\">\r\n                                    \r\n                                </th>\r\n                                <th  *ngFor=\"let col of columns\" [attr.align]=\"col.align\" >{{ col.title }}</th>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n        </ng-container>\r\n</div>\r\n    `\r\n})\r\nexport class DatatableFooterComponent {\r\n    @Input() hover: boolean;\r\n    @Input() columns: DataColumn[];\r\n    // è¡¨æ ¼ footer å¯æ·»å æ¨¡æ¿\r\n    @Input()\r\n    @ContentChild(TemplateRef) tableFooter: TemplateRef<any>;\r\n    constructor() {\r\n    }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'dt-checkbox',\r\n    template: `\r\n        <div class=\"custom-control custom-checkbox  custom-control-inline dt-checkbox f-checkradio-single\">\r\n            <input type=\"checkbox\" class=\"custom-control-input\"  [checked]=\"checked\">\r\n            <label class=\"custom-control-label\" (click)=\"handleClick($event)\"></label>\r\n        </div>\r\n    `\r\n})\r\nexport class DTCheckboxComponent implements OnInit {\r\n    @Input() checked: boolean;\r\n    @Input() id: string;\r\n    @Input() disabled: boolean;\r\n\r\n    @Output() checkedChange = new EventEmitter();\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() { }\r\n\r\n    handleClick(event) {\r\n        if (!this.disabled) {\r\n            this.checkedChange.emit({originalEvent: event, checked: !this.checked});\r\n        }\r\n    }\r\n}\r\n","import { Directive, ElementRef, NgZone, Renderer2, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { DataTableComponent } from '../datatable.component';\r\n@Directive({\r\n    selector: '[drag-column]',\r\n    exportAs: 'resizeRef'\r\n})\r\nexport class DragColumnDirective implements AfterViewInit, OnDestroy {\r\n    resizer: HTMLSpanElement;\r\n\r\n    resizerMouseDownListener: any;\r\n\r\n    documentMouseMoveListener: any;\r\n\r\n    documentMouseUpListener: any;\r\n\r\n    constructor(public dt: DataTableComponent, public ngzone: NgZone,\r\n        public el: ElementRef, public render: Renderer2) {\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // if (this.isEnable()) {\r\n        //     this.ngzone.runOutsideAngular(() => {\r\n        //         // this.resizer = document.createElement('span');\r\n        //         // this.resizer.className = 'column-resizer';\r\n        //         // this.el.nativeElement.appendChild(this.resizer);\r\n        //         // this.render.addClass(this.el.nativeElement, 'resizable-column');\r\n        //         this.resizer = this.el.nativeElement.querySelector('span.column-resizer');\r\n        //         if (this.resizer) {\r\n        //             this.resizerMouseDownListener = this.onMouseDown.bind(this);\r\n        //             this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\r\n        //         }\r\n        //     });\r\n        // }\r\n    }\r\n\r\n    isEnable() {\r\n        return this.dt.resizableColumns && !this.dt.hasFixed;\r\n    }\r\n\r\n    bindDocumentEvents() {\r\n        this.ngzone.runOutsideAngular(() => {\r\n            this.documentMouseMoveListener = this.onMouseMove.bind(this);\r\n            document.addEventListener('mousemove', this.documentMouseMoveListener);\r\n\r\n            this.documentMouseUpListener = this.onMouseUp.bind(this);\r\n            document.addEventListener('mouseup', this.documentMouseUpListener);\r\n        });\r\n    }\r\n\r\n    unbindDocumentEvents() {\r\n        if (this.documentMouseMoveListener) {\r\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\r\n            this.documentMouseMoveListener = null;\r\n        }\r\n\r\n        if (this.documentMouseUpListener) {\r\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\r\n            this.documentMouseUpListener = null;\r\n        }\r\n    }\r\n\r\n    onMouseDown(event: Event) {\r\n        this.dt.beginDrag(event);\r\n        this.bindDocumentEvents();\r\n\r\n    }\r\n\r\n    onMouseMove(event: Event) {\r\n        this.dt.moveDrag(event);\r\n    }\r\n\r\n    onMouseUp(event: Event) {\r\n        this.dt.stopDrag(event, this.el.nativeElement);\r\n        this.unbindDocumentEvents();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // if (this.resizerMouseDownListener && this.resizer) {\r\n        //     this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\r\n        // }\r\n\r\n        this.unbindDocumentEvents();\r\n    }\r\n\r\n}\r\n","import { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\r\nimport { DataTableBodyComponent } from './datatable-body.component';\r\n\r\n@Directive({ selector: '[cell-styler]' })\r\nexport class CellStylerDirective implements OnInit {\r\n\r\n    @Input('cell-styler') options = null;\r\n\r\n    constructor(private dtb: DataTableBodyComponent, private elRef: ElementRef, private render: Renderer2) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.dtb && this.options) {\r\n            const {val, row, col, index} = this.options;\r\n            let _sty = null;\r\n            if (!col) {\r\n                _sty = this.dtb.renderRowStyle(row, index) || {};\r\n            } else {\r\n                let rowStyle = this.dtb.renderRowStyle(row, index) || {};\r\n                let cellStyle = this.dtb.renderCellStyle(val, row,index, col) || {};\r\n                _sty = cellStyle;\r\n                if (col.fixed === 'right') {\r\n                    const hasBackground = Object.keys(cellStyle).find(n => {\r\n                        return ['background', 'background-color', 'backgroundcolor'].indexOf(n.toLowerCase()) > -1;\r\n                    });\r\n                    if (hasBackground !== null) {\r\n                        _sty = Object.assign(cellStyle, rowStyle);\r\n                    }\r\n                } \r\n            }\r\n\r\n            if (_sty) {\r\n                Object.keys(_sty).forEach(n => {\r\n                    this.elRef.nativeElement.style.setProperty(n, _sty[n], 'important');\r\n                });\r\n            }\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { PaginationModule } from '@farris/ui-pagination';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\nimport { DataColumnModule } from '@farris/ui-common/column';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\n\r\nimport { DataTableComponent } from './datatable.component';\r\nimport { DataTableHeaderComponent } from './table/datatable-header.component';\r\nimport { ColumnDirective } from './datatable-column.component';\r\nimport { DataTableBodyComponent, DTDblClickRowDirective } from './table/datatable-body.component';\r\nimport { DTCheckboxComponent } from './datatable-checkbox.component';\r\nimport { DatatableFooterComponent } from './table/datatable-footer.component';\r\n\r\nimport { DragColumnDirective } from './utils/drag.directive';\r\nimport { CellStylerDirective } from './table/cell-style.directive';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        PerfectScrollbarModule,\r\n        PaginationModule,\r\n        FarrisCommonModule.forRoot(),\r\n        InputGroupModule,\r\n        DataColumnModule.forRoot(),\r\n        FarrisFormsModule\r\n    ],\r\n    exports: [\r\n        DataTableComponent, DataTableHeaderComponent,\r\n        ColumnDirective, DataTableBodyComponent,\r\n        FarrisCommonModule, DatatableFooterComponent,\r\n        DragColumnDirective\r\n    ],\r\n    declarations: [\r\n        DataTableComponent, DataTableHeaderComponent,\r\n        ColumnDirective, DragColumnDirective,\r\n        DataTableBodyComponent, DTCheckboxComponent,\r\n        DatatableFooterComponent, DTDblClickRowDirective,\r\n        CellStylerDirective\r\n    ],\r\n    providers: [\r\n\r\n    ],\r\n})\r\nexport class DataTableModule { }\r\n"]}