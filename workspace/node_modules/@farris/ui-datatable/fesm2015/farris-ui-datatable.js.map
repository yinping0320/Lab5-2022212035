{"version":3,"file":"farris-ui-datatable.js.map","sources":["ng://@farris/ui-datatable/lib/datatable-column.ts","ng://@farris/ui-datatable/lib/datatable.service.ts","ng://@farris/ui-datatable/lib/datatable-column.component.ts","ng://@farris/ui-datatable/lib/datatable.component.ts","ng://@farris/ui-datatable/lib/datatable-checkbox.component.ts","ng://@farris/ui-datatable/lib/table/datatable-header.component.ts","ng://@farris/ui-datatable/lib/table/datatable-body.component.ts","ng://@farris/ui-datatable/lib/table/datatable-footer.component.ts","ng://@farris/ui-datatable/lib/utils/drag.directive.ts","ng://@farris/ui-datatable/lib/table/cell-style.directive.ts","ng://@farris/ui-datatable/lib/datatable.module.ts"],"sourcesContent":["/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-04-08 16:51:39\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-17 13:44:33\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\n/**\r\n * è½¬æ¢åçé¡ºåº\r\n * @param columns-ææåæ°æ®\r\n * @param direction-left|right å·¦åºå®æèå³åºå®\r\n */\r\nexport const convertColumns = (columns, direction) => {\r\n    const tempFixedColumns = [];\r\n    const tempNotFixedColumns = [];\r\n    columns.forEach(ele => {\r\n        if (ele.fixed && (ele.fixed === direction || ele.fixed.type === direction)) {\r\n            tempFixedColumns.push(ele);\r\n        } else {\r\n            tempNotFixedColumns.push(ele);\r\n        }\r\n    });\r\n    return tempFixedColumns.concat(tempNotFixedColumns);\r\n};\r\n/**\r\n *  å¯¹è±¡æèæ°ç»æ·±æ·è´\r\n * @param data æºæ°æ®\r\n */\r\nexport const deepCopy = (data) => {\r\n    return cloneDeep(data);\r\n};\r\nexport const toUpper = (source: string) => {\r\n    const jsonObj = JSON.parse(source.replace(/\\\\/g, ''));\r\n    return deepCopy(jsonObj);\r\n};\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport interface SelectRowArgs {\r\n    rowIndex: number;\r\n    rowData: any;\r\n}\r\n\r\n@Injectable()\r\nexport class DataTableService {\r\n\r\n    loadSuccess = new Subject();\r\n\r\n    /**\r\n     * éä¸­è¡äºä»¶\r\n     */\r\n    selectedRow = new Subject<SelectRowArgs>();\r\n\r\n    unSelectedRow = new Subject<SelectRowArgs>();\r\n\r\n    selectedAll = new Subject();\r\n\r\n    dblClickRow = new Subject();\r\n\r\n    updateCheckAllStatus = new Subject();\r\n\r\n    constructor() { }\r\n}\r\n","import { Directive, OnInit, Input, ContentChild, TemplateRef, ElementRef, HostBinding } from '@angular/core';\r\n@Directive({\r\n    selector: 'data-column'\r\n})\r\nexport class ColumnDirective implements OnInit {\r\n\r\n    @Input() edit: string;\r\n    @Input() title: string;\r\n    @Input() field: string;\r\n    @Input() width: number;\r\n    @Input() align: 'left' | 'center' | 'right' = 'left';\r\n    @Input() fixed?: any;\r\n    @Input() className?: string;\r\n    @Input() media?: object;\r\n    @Input() sortable?: boolean;\r\n    @Input() multipleFilter?: boolean = true;\r\n    @Input() filter?: any;\r\n    @HostBinding('class.fixed') fixedClass = this.fixed === 'left';\r\n\r\n    constructor(private el: ElementRef) {\r\n\r\n    }\r\n\r\n    ngOnInit() { }\r\n}\r\n","import { InputGroupComponent } from '@farris/ui-input-group';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-07-10 11:44:49\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-05 11:44:18\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nimport {\r\n    Component, OnInit, ViewChild, ElementRef, OnChanges, Input, SimpleChanges, ContentChild, TemplateRef,\r\n    QueryList, AfterContentInit, AfterViewInit, ContentChildren, Output, EventEmitter, ViewEncapsulation, OnDestroy, Inject, NgZone\r\n} from '@angular/core';\r\n\r\nimport { Subscription, Observable, of, fromEvent } from 'rxjs';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\nimport { PerfectScrollbarComponent } from '@farris/ui-perfect-scrollbar';\r\nimport { PaginationInstance, PaginationControlsComponent } from '@farris/ui-pagination';\r\nimport { IdService } from '@farris/ui-common';\r\nimport { DataColumn } from '@farris/ui-common/column';\r\n\r\nimport { deepCopy } from './datatable-column';\r\nimport { ColumnDirective } from './datatable-column.component';\r\nimport { DataTableService } from './datatable.service';\r\nimport { DataTableHeaderComponent } from './table/datatable-header.component';\r\nimport { delay } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'farrisui-datatable,farris-datatable',\r\n    templateUrl: './datatable.component.html',\r\n    styleUrls: ['./datatable.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [\r\n        DataTableService\r\n    ]\r\n})\r\nexport class DataTableComponent implements OnInit, OnChanges, OnDestroy, AfterContentInit, AfterViewInit {\r\n    searchButtonText = '<i class=\"f-icon f-icon-search\"></i>';\r\n    @Input() keydownEnterEdit = false;\r\n    @Input() id: string;\r\n    @Input() size: string;\r\n    @Input() allColumnsTitle = 'ææå';\r\n    // table å°ºå¯¸\r\n    @Input() width;\r\n    // ç»ä»¶çº§é«åº¦åæ¬è¿æ»¤æ¡é«åº¦\r\n    @Input() height;\r\n\r\n    /** æ¯å¦æ¯æä»»æå­æ®µæç´¢ */\r\n    @Input() searchAnyField = true;\r\n\r\n    tableHeight: number; // æ°æ®è¡¨é«åº¦\r\n    // æ¯å¦å¡«å\r\n    @Input() fill = false;\r\n    // é»è®¤åé¡µ\r\n    @Input() pagination = true;\r\n    @Input() pagerOnServer = true;\r\n    @Input() pageSize = 10;\r\n    @Input() pageIndex = 1;\r\n    @Input() showPageInfo = true;\r\n    @Input() showPageNumber = true;\r\n    @Input() showPageList = true;\r\n    @Input() pagerViewMode: 'simple'| 'default' = 'default';\r\n    /** åé¡µæ¡ä¸ºç®åæ¨¡å¼æ¶ï¼åé¡µæ¡å·¦ä¾§åºåæ¨¡æ¿ */\r\n    @Input() pagerExtendTemplate: TemplateRef<any>;\r\n    /** æ¾ç¤ºè¡¨å¤´ */\r\n    @Input() showHeader = true;\r\n\r\n    private _pageList = [10, 20, 30, 50, 100];\r\n\r\n    get pageList() {\r\n        return this._pageList;\r\n    }\r\n    @Input() set pageList(val) {\r\n        this._pageList = val;\r\n        if (this.pager) {\r\n            this.pager.setPageList(val);\r\n        }\r\n    }\r\n\r\n    @Input() total = 0;\r\n    // å æ°æ®\r\n    @Input() columns: DataColumn[];\r\n    @Input() searchFields: { label: string, value: string }[];\r\n    // å¯ç­é\r\n    @Input() showFilterBar = false;\r\n    /** å¯ç¨èææ¸²æ */\r\n    @Input() virtualized = false;\r\n\r\n    @Input() autoFitColumns = false;\r\n\r\n    // table  æ°æ®\r\n    _data = [];\r\n    @Input()\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    set data(data: Array<any>) {\r\n        this._data = data || [];\r\n    }\r\n    // æ·±æ·è´data æ°æ®\r\n    copyData: any;\r\n\r\n    @Input() remote = 'client';\r\n\r\n    /** å¯ç¨è¿ç«¯æåº */\r\n    @Input() remoteSort = true;\r\n    /** æåºå­æ®µ */\r\n    @Input() sortName: string;\r\n    /** æåºæ¹å¼ asc | desc */\r\n    @Input() sortOrder: string;\r\n    /** åè®¸å¤åæåº */\r\n    @Input() multiSort = false;\r\n    @Input() beforeSortColumn: (field: string, order: string) => Observable<boolean>;\r\n\r\n    // å¤é  åé\r\n    @Input() singleSelect = true;\r\n    @Input() idField = 'id';\r\n    // æ¾ç¤ºé¼ æ æ¬åé«äº®\r\n    @Input() hover = true;\r\n    // æé©¬çº¿\r\n    @Input() striped: boolean;\r\n    // è¾¹æ¡\r\n    @Input() bordered: boolean;\r\n    // æ¯ææ·»å è¡ ååæ ¼ ç±»æ ·å¼\r\n    @Input() rowClassName: (row: any, index: number) => string;\r\n    @Input() cellClassName: (value: any, col: any) => string;\r\n\r\n    @Input() rowStyler: (args: any) => any;\r\n    @Input() cellStyler: (val: any ) => any;\r\n\r\n    @Input()\r\n    set selections(v) {\r\n        this.dtBody.selections = v ? v : {};\r\n    }\r\n    get selections() {\r\n        return this.dtBody.selections;\r\n    }\r\n    // æ»å¨æ¡å¼ç¨\r\n    @ViewChild('scorllableBody') scorllableBody: ElementRef;\r\n    @ViewChild('tableHeader') tableHeader: ElementRef;\r\n    @ViewChild('tablePager') tablePager: ElementRef;\r\n    @ViewChild('dtHeader') dtHeader: DataTableHeaderComponent;\r\n    @ViewChild('dtBody') dtBody: any;\r\n    @ViewChild('dtLeftBody') dtLeftBody: any;\r\n    @ViewChild('dtRightBody') dtRightBody: any;\r\n    @ViewChild('dtLeftFixed') dtLeftFixed: ElementRef;\r\n    @ViewChild('dtRightFixed') dtRightFixed: ElementRef;\r\n    @ViewChild('pager') pager: PaginationControlsComponent;\r\n    @ViewChild('inputgroup') inputGroup: InputGroupComponent;\r\n\r\n    @ViewChild('pgScrollbar') pgScrollbar: ElementRef;\r\n\r\n    // åé¡µäºä»¶\r\n    @Output() pageChanged = new EventEmitter();\r\n    @Output() pageSizeChanged = new EventEmitter();\r\n    @Output() search = new EventEmitter<{ field: string, value: string }>();\r\n    @Output() columnSorted = new EventEmitter<any>();\r\n    @Output() rowDblClick = new EventEmitter<any>();\r\n    @Output() selectedRow = new EventEmitter<any>();\r\n    // å¼å®¹\r\n    @Output() selectRows = new EventEmitter<any>();\r\n    @Output() unSelectRow = new EventEmitter<any>();\r\n    @Output() cellClick = new EventEmitter<any>();\r\n    @Output() clearSearchValue = new EventEmitter();\r\n    @Output() checkAll = new EventEmitter<any>();\r\n    @Output() searchValueChange = new EventEmitter<any>();\r\n\r\n\r\n    @Output() sortChange = new EventEmitter();\r\n\r\n    @ContentChildren(ColumnDirective) columnsRef: QueryList<ColumnDirective>;\r\n    // è¡¨å°¾\r\n    @ContentChild('footer') footer: TemplateRef<any>;\r\n    // è¡¨æ ¼å¯ææ½å®½åº¦ç³»å\r\n    // ææ½çº¿\r\n    @ViewChild('dragLine') dragLine: ElementRef;\r\n    // æ¯å¦å¯ææ½  é»è®¤å¯ä»¥\r\n    @Input() resizableColumns = true;\r\n\r\n    /** éå¯¹åä¸æ¡è®°å½ï¼åéæ¶ï¼å¤æ¬¡åå»åä¸åæ¶éä¸­ã */\r\n    @Input() keepSelect = true;\r\n\r\n    // æ¯å¦æè¡æ¨¡æ¿\r\n    hasRowTepml = false;\r\n    // ç¨æ·è·åè¡¨å¤´+è¡¨æ ¼åå®¹çé«åº¦  å®½åº¦  ç­\r\n    datatableContainer: HTMLDivElement;\r\n    // ææ½çº¿åå§åä½ç½®\r\n    dragLineX: number;\r\n    // è®¾ç½®ææ½åæ­¢å¨\r\n    moveable = false;\r\n    //\r\n    currentColumn: any;\r\n    // è®¾ç½®å·¦åºå®å\r\n    hasFixed: boolean;\r\n    fixedLeftWidth: string;\r\n    // è®¾ç½®å³åºå®å\r\n    fixedRightWidth: string;\r\n    searchData = { field: '*', value: '' };\r\n    // äºä»¶è®¢éå­å¨  ä¾¿äºéæ¯\r\n    subscription: Subscription[] = [];\r\n    // åºå®åæ¶  åä¸è¡çtr hoveräºä»¶\r\n    headerTr: any;\r\n    leftFixedHeaderTr: any;\r\n    rightFixedHeaderTr: any;\r\n\r\n    // åæ°æ®\r\n    public filter = '';\r\n    public maxSize = 7;\r\n    public directionLinks = true;\r\n    public autoHide = false;\r\n    public responsive = true;\r\n    public paginationOptions: PaginationInstance = {\r\n        id: 'Farris-DataTable-Pagination',\r\n        itemsPerPage: this.pageSize,\r\n        currentPage: this.pageIndex,\r\n        pageList: this.pageList,\r\n        totalItems: this.total,\r\n        remote: this.pagerOnServer\r\n    };\r\n    public labels: any = {\r\n        previousLabel: ' ',\r\n        nextLabel: ' ',\r\n        screenReaderPaginationLabel: 'Pagination',\r\n        screenReaderPageLabel: 'page',\r\n        screenReaderCurrentLabel: `You're on page`\r\n    };\r\n\r\n    private _currentRowIndex = -1;\r\n    get currentRowIndex(): number {\r\n        return this._currentRowIndex;\r\n    }\r\n\r\n    private _currentRow = undefined;\r\n    get currentRow() {\r\n        return this._currentRow;\r\n    }\r\n\r\n    @ViewChild('perfectScrollbar') perfectScrollbar: PerfectScrollbarComponent;\r\n\r\n    private isCheckAll = () => {\r\n        if (!this.selections || !this.selections.length) {\r\n            return false;\r\n        }\r\n\r\n        if (!this.data || !this.data.length) {\r\n            return false;\r\n        }\r\n\r\n        let total = 0;\r\n        this.selections.forEach(n => {\r\n            if (this.data.find(d => d[this.idField] === n[this.idField])) {\r\n                total += 1;\r\n            }\r\n        });\r\n\r\n        return this.data.length === total;\r\n    }\r\n\r\n    scorllableBodyHeight: number;\r\n    mouseEnterOnPager = null;\r\n    mouseLeaveOnPager = null;\r\n    mouseWheelOnPager = null;\r\n\r\n    constructor(private dataService: DataTableService, private idService: IdService, private el: ElementRef,\r\n        public cd: ChangeDetectorRef, private ngZone: NgZone) {\r\n\r\n        this.dataService.selectedRow.subscribe((e: any) => {\r\n            if (this.singleSelect) {\r\n                this._currentRowIndex = e.rowIndex;\r\n                this._currentRow = e.rowData;\r\n            } else {\r\n                if (this.selections) {\r\n                    this.dtHeader.isCheckAll = this.isCheckAll();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.dataService.unSelectedRow.subscribe((e: any) => {\r\n            if (this.singleSelect) {\r\n                this._currentRow = undefined;\r\n                this._currentRowIndex = -1;\r\n            } else {\r\n                this.dtHeader.isCheckAll = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    private ps: PerfectScrollbar;\r\n    ngOnInit() {\r\n        setTimeout(() => {\r\n            this.setBodyHeight(true);\r\n            this.ps = this.perfectScrollbar.directiveRef.ps();\r\n        });\r\n\r\n        if (!this.id) {\r\n            this.id = `datatable_${this.idService.generate()}`;\r\n        }\r\n\r\n        this.paginationOptions.id = this.paginationOptions.id + this.id;\r\n        this.paginationOptions.remote = this.pagerOnServer;\r\n\r\n        this.copyData = deepCopy(this.data);\r\n\r\n        if (!this.beforeSortColumn) {\r\n            this.beforeSortColumn = () => of(true);\r\n        }\r\n    }\r\n\r\n    private setBodyHeight(refresh = true) {\r\n        let _tableheight = this.height;\r\n        if (this.showFilterBar) {\r\n            _tableheight = this.height - 46;\r\n        }\r\n        this.tableHeight = _tableheight;\r\n\r\n        let _scorllableBodyHeight = 0;\r\n        if (this.showHeader && this.tableHeader) {\r\n            // _scorllableBodyHeight = this.tableHeight - this.tableHeader.nativeElement.clientHeight;\r\n            _scorllableBodyHeight = this.tableHeight - this.tableHeader.nativeElement.querySelector('table').clientHeight;\r\n        }\r\n\r\n        if (this.pagination) {\r\n            _scorllableBodyHeight = _scorllableBodyHeight - 50;\r\n        }\r\n\r\n        this.scorllableBodyHeight = _scorllableBodyHeight;\r\n\r\n        if (refresh && this.cd && !this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    onClearSearchValue() {\r\n        this.searchData.value = '';\r\n        this.cd.detectChanges();\r\n        this.clearSearchValue.emit();\r\n    }\r\n\r\n    trackByRows = (index: number, row: any) => {\r\n        return row ? row[this.idField]: index;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.height && !changes.height.isFirstChange()) {\r\n            this.setBodyHeight();\r\n        }\r\n\r\n        if (changes.total && !changes.total.isFirstChange()) {\r\n            this.paginationOptions.totalItems = changes.total.currentValue;\r\n        }\r\n\r\n        if (changes.pageSize) {\r\n            this.paginationOptions.itemsPerPage = changes.pageSize.currentValue;\r\n        }\r\n\r\n        if (changes.pagerOnServer && !changes.pagerOnServer.isFirstChange()) {\r\n            this.paginationOptions.remote = changes.pagerOnServer.currentValue;\r\n        }\r\n        \r\n\r\n        if (changes.pageIndex && !changes.pageIndex.isFirstChange()) {\r\n            this.paginationOptions.currentPage = changes.pageIndex.currentValue;\r\n        }\r\n\r\n        if (changes.data && !changes.data.isFirstChange()) {\r\n\r\n            const rows = changes.data.currentValue;\r\n            this.updateCheckboxState(rows);\r\n            this.paginationOptions = { ...this.paginationOptions };\r\n            this.dataService.loadSuccess.next(changes.data.currentValue);\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        // æ¯æåç»ä»¶åå¥\r\n        if (!this.columns) {\r\n            if (this.columnsRef && this.columnsRef.length) {\r\n                this.columns = this.columnsRef.map(col => {\r\n                    return {\r\n                        width: col.width,\r\n                        title: col.title,\r\n                        field: col.field,\r\n                        align: col.align,\r\n                        fixed: col.fixed,\r\n                        className: col.className,\r\n                        multipleFilter: col.multipleFilter,\r\n                        filter: col.filter,\r\n                        media: col.media,\r\n                        sortable: col.sortable,\r\n                        edit: col.edit\r\n                    };\r\n                });\r\n            }\r\n        }\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            setTimeout(() => {\r\n                if (this.tablePager && this.pagerViewMode !== 'simple' ) {\r\n                    this.tablePager.nativeElement.addEventListener('mouseenter', this.mouseEnterOnPager = (e) => {\r\n                        let overflowX = 'auto';\r\n                        if (e.target.className.indexOf('pg-pagelist') > -1 || e.target.closest('.pg-pagelist')) {\r\n                            overflowX = \"unset\";\r\n                            this.pgScrollbar.nativeElement.scrollLeft = 0;\r\n                        } \r\n                        this.pgScrollbar.nativeElement.style.overflowX = overflowX;\r\n                    }, true);\r\n    \r\n                    this.tablePager.nativeElement.addEventListener('mouseleave', this.mouseLeaveOnPager =(e) => {\r\n                        this.pgScrollbar.nativeElement.style.overflowX = \"hidden\";\r\n                    });\r\n    \r\n                    this.tablePager.nativeElement.addEventListener('wheel', this.mouseWheelOnPager = (e) => {\r\n                        const box = this.tablePager.nativeElement;\r\n                        const sw = this.pgScrollbar.nativeElement.scrollWidth;\r\n                        const ow = box.offsetWidth;\r\n                \r\n                        if (sw > ow) {\r\n                            const right = sw - ow;\r\n                            const sl = Math.abs(this.pgScrollbar.nativeElement.scrollLeft);\r\n                            if (sl < right && e.deltaY > 0) {\r\n                                e.preventDefault();\r\n                                this.pgScrollbar.nativeElement.scrollLeft = sl + 50;\r\n                            }\r\n                \r\n                            if (sl > 0 && e.deltaY < 0) {\r\n                                e.preventDefault();\r\n                                this.pgScrollbar.nativeElement.scrollLeft = sl - 50;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        \r\n    }\r\n    ngOnDestroy() {\r\n        this.subscription.forEach(sub => {\r\n            sub.unsubscribe();\r\n        });\r\n        this.subscription = [];\r\n\r\n        this.pager = null;\r\n\r\n        if (this.tablePager && this.tablePager.nativeElement) {\r\n            this.tablePager.nativeElement.removeEventListener('mouseenter', this.mouseEnterOnPager, true);\r\n            this.tablePager.nativeElement.removeEventListener('mouseleave', this.mouseLeaveOnPager);\r\n            this.tablePager.nativeElement.removeEventListener('wheel', this.mouseWheelOnPager);\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        // è·åè¡¨æ ¼å®¹å¨  å³è¡¨æ ¼\r\n        this.datatableContainer = this.el.nativeElement.querySelector('.farris-datatable');\r\n        // this.headerTr = this.tableHeader.nativeElement.querySelectorAll('tr');\r\n\r\n        if (this.pagerViewMode == 'simple' && this.tablePager) {\r\n            this.tablePager.nativeElement.style.minHeight = '44px';\r\n            this.tablePager.nativeElement.style.height = '44px';\r\n        }\r\n    }\r\n\r\n    updateCheckboxState(rows: any[]) {\r\n\r\n        const updateCheckAllStatus = (f) => {\r\n            if (this.showHeader && this.dtHeader) {\r\n                this.dtHeader.isCheckAll = f;\r\n            }\r\n        };\r\n\r\n        if (rows && rows.length) {\r\n            if (this.selections) {\r\n                const keys = Object.keys(this.dtBody._selections);\r\n                if (keys.length) {\r\n                    let count = 0;\r\n                    const ids = rows.map((row: any) => {\r\n                        return row[this.idField].toString();\r\n                    });\r\n                    keys.forEach(id => {\r\n                        if (ids.indexOf(id) > -1) {\r\n                            count++;\r\n                        }\r\n                    });\r\n\r\n                    updateCheckAllStatus(ids.length === count);\r\n                } else {\r\n                    updateCheckAllStatus(false);\r\n                }\r\n            } else {\r\n                updateCheckAllStatus(false);\r\n            }\r\n        } else {\r\n            updateCheckAllStatus(false);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * è·åè¡¨æ ¼å®¹å¨çä½ç½®  è·ç¦»å·¦è¾¹è§å£åä¸è¾¹è§å£çè·ç¦»  å¦æé¡µé¢ææ»å¨æ¡  éè¦å ä¸æ»å¨æ¡æ»å¨çæ°å¼\r\n     */\r\n    getContainerOffset() {\r\n        const rect = this.datatableContainer.getBoundingClientRect();\r\n        return {\r\n            left: rect.left + document.body.scrollLeft,\r\n            top: rect.top + document.body.scrollTop,\r\n            right: rect.right,\r\n            bottom: rect.bottom,\r\n        };\r\n    }\r\n    /**\r\n     *  é¼ æ æä¸  å¼å§è®°å½ææ½çº¿çä½ç½®  ææ½çº¿å°è¾¾å½åé¼ æ ä½ç½®\r\n     * @param e é¼ æ å¯¹è±¡\r\n     */\r\n    beginDrag(e) {\r\n        this.dragLineX = e.pageX;\r\n        event.preventDefault();\r\n    }\r\n    /**\r\n     * é¼ æ ç§»å¨ ç§»å¨ææ½çº¿ä½ç½®åå¨\r\n     * @param e é¼ æ å¯¹è±¡\r\n     */\r\n    moveDrag(e) {\r\n        // è·åè¡¨æ ¼çå·¦è¾¹è·ç¦»\r\n        const containerLeft = this.getContainerOffset().left;\r\n        // è®¾ç½®ææ½çº¿çé«åº¦  å³è·åè¡¨å¤´+è¡¨åå®¹+è¡¨å°¾çé«åº¦  æ­¤è¡¨æ ¼ç»æåå«äºåé¡µ  å æ­¤è¦å»æåé¡µçé«åº¦\r\n        if (this.tablePager) {\r\n            this.dragLine.nativeElement.style.height = this.datatableContainer.offsetHeight -\r\n                this.tablePager.nativeElement.offsetHeight + 'px';\r\n        } else {\r\n            // const headerHeight = this.el.nativeElement.querySelector('.farris-table-header');\r\n            // const bodyHeight = this.el.nativeElement.querySelector('.ps-content');\r\n            this.dragLine.nativeElement.style.height = this.datatableContainer.offsetHeight + 'px';\r\n        }\r\n        // è®¾ç½®ææ½çº¿çé«åº¦ ææ½çº¿ç¸å¯¹äºè¡¨æ ¼relativeå®ä½æ¯absoluteï¼å æ­¤æ¯0\r\n        this.dragLine.nativeElement.style.top = 0 + 'px';\r\n        // é¼ æ ç§»å¨æ¶ï¼ææ½çº¿ç¸å¯¹äºè¡¨æ ¼çä½ç½®\r\n        this.dragLine.nativeElement.style.left = (e.pageX - containerLeft) + 'px';\r\n        // é¼ æ ç§»å¨  è®¾ç½®ææ½çº¿æ»æ¯å¯è§\r\n        this.dragLine.nativeElement.style.display = 'block';\r\n    }\r\n    // éæ°è®¡ç®è¡¨æ ¼å®½åº¦\r\n    /**\r\n     * é¼ æ æ¬èµ· éæ°è®¡ç®ååæ ¼å®½åº¦\r\n     * é¼ æ å¯¹è±¡\r\n     */\r\n    stopDrag(e, column) {\r\n        if (this.autoFitColumns) {\r\n            this.resizeColumn2(e, column);\r\n            if (this.ps) {\r\n                this.ps.update();\r\n            }\r\n            return;\r\n        }\r\n        this.resizeColumn(e, column);\r\n    }\r\n\r\n    resizeColumn(e, column) {\r\n        if (this.isCheckBox(column, 'dt-checkbox-cell')) {\r\n            this.dragLine.nativeElement.style.display = 'none';\r\n            return;\r\n        }\r\n        // åç§»é\r\n        const delta = e.pageX - this.dragLineX;\r\n        // ææ½ååå®½\r\n        const columnWidth = column.offsetWidth;\r\n        // ææ½ååå®½\r\n        let newColumnWidth = columnWidth + delta;\r\n        // æå°å®½åº¦\r\n        const minWidth = column.style.minWidth || 30;\r\n        // æ°å®½åº¦å¤§äºæç­äºæå°å®½åº¦æ¶\r\n        newColumnWidth = newColumnWidth > minWidth ? newColumnWidth : minWidth;\r\n        // éæ°è®¾ç½®å®½åº¦\r\n        let colIndex = -1;\r\n        const othersCol = [];\r\n        const cols = this.tableHeader.nativeElement.querySelectorAll('th');\r\n\r\n        // ç¶èç¹å®½åº¦\r\n        const parentWidth = column.parentElement.offsetWidth;\r\n        // å¤æ­æ¯ä¸æ¯æcheckbox\r\n        const firstElement = column.parentElement.firstElementChild;\r\n        const checkBoxWidth = this.isCheckBox(firstElement, 'dt-checkbox-cell') ? firstElement.offsetWidth : 0;\r\n        // å¶ä»åå®½åº¦\r\n        let othersWidth = parentWidth - columnWidth - checkBoxWidth;\r\n        let newOthersWidth = parentWidth - newColumnWidth - checkBoxWidth;\r\n        for (let i = 0; i < cols.length; i++) {\r\n            if (cols[i] === column) {\r\n                colIndex = i;\r\n            } else {\r\n                if (this.isCheckBox(cols[i], 'dt-checkbox-cell')) {\r\n                    continue;\r\n                }\r\n                const rate = cols[i].offsetWidth / othersWidth;\r\n                if (rate > 1) {\r\n                    // console.log(cols[i]);\r\n                }\r\n                let colWidth = newOthersWidth * rate;\r\n                if (newOthersWidth * rate > 15) {\r\n                    colWidth = newOthersWidth * rate;\r\n                } else {\r\n                    colWidth = 15;\r\n                    othersWidth = othersWidth - colWidth;\r\n                    newOthersWidth = newOthersWidth - colWidth;\r\n                    newColumnWidth = newColumnWidth - 15 + newOthersWidth * rate;\r\n                }\r\n                othersCol.push({ colIndex: i, colWidth });\r\n            }\r\n        }\r\n        this.resizeColGroup(this.dtHeader.el.nativeElement, colIndex, newColumnWidth, othersCol);\r\n        this.resizeColGroup(this.dtBody.el.nativeElement, colIndex, newColumnWidth, othersCol);\r\n        // è®¡ç®å®½åº¦å®æ¯  è®¾ç½®ææ½çº¿éè\r\n        this.dragLine.nativeElement.style.display = 'none';\r\n    }\r\n\r\n    resizeColumn2(e, column) {\r\n        if (this.isCheckBox(column, 'dt-checkbox-cell')) {\r\n            this.dragLine.nativeElement.style.display = 'none';\r\n            return;\r\n        }\r\n        // åç§»é\r\n        const delta = e.pageX - this.dragLineX;\r\n        // ææ½ååå®½\r\n        const columnWidth = column.offsetWidth;\r\n        // ææ½ååå®½\r\n        let newColumnWidth = columnWidth + delta;\r\n        // æå°å®½åº¦\r\n        const minWidth = column.style.minWidth || 30;\r\n        // æ°å®½åº¦å¤§äºæç­äºæå°å®½åº¦æ¶\r\n        newColumnWidth = newColumnWidth > minWidth ? newColumnWidth : minWidth;\r\n        // éæ°è®¾ç½®å®½åº¦\r\n        let colIndex = -1;\r\n        const othersCol = [];\r\n        const cols = this.tableHeader.nativeElement.querySelectorAll('th');\r\n\r\n        // ç¶èç¹å®½åº¦\r\n        const parentWidth = column.parentElement.offsetWidth;\r\n        // å¤æ­æ¯ä¸æ¯æcheckbox\r\n        const firstElement = column.parentElement.firstElementChild;\r\n        const checkBoxWidth = this.isCheckBox(firstElement, 'dt-checkbox-cell') ? firstElement.offsetWidth : 0;\r\n        // å¶ä»åå®½åº¦\r\n        let othersWidth = parentWidth - columnWidth - checkBoxWidth;\r\n        let newOthersWidth = parentWidth - newColumnWidth - checkBoxWidth;\r\n        for (let i = 0; i < cols.length; i++) {\r\n            if (cols[i] === column) {\r\n                colIndex = i;\r\n            } else {\r\n                if (this.isCheckBox(cols[i], 'dt-checkbox-cell')) {\r\n                    continue;\r\n                }\r\n                const rate = cols[i].offsetWidth / othersWidth;\r\n                if (rate > 1) {\r\n                    // console.log(cols[i]);\r\n                }\r\n                let colWidth = newOthersWidth * rate;\r\n                if (newOthersWidth * rate > 15) {\r\n                    colWidth = newOthersWidth * rate;\r\n                } else {\r\n                    colWidth = 15;\r\n                    othersWidth = othersWidth - colWidth;\r\n                    newOthersWidth = newOthersWidth - colWidth;\r\n                    newColumnWidth = newColumnWidth - 15 + newOthersWidth * rate;\r\n                }\r\n                othersCol.push({ colIndex: i, colWidth });\r\n            }\r\n        }\r\n        this.resizeColGroup(this.dtHeader.el.nativeElement, colIndex, newColumnWidth, []);\r\n        this.resizeColGroup(this.dtBody.el.nativeElement, colIndex, newColumnWidth, []);\r\n\r\n        const field = column.getAttribute('field');\r\n        if (field) {\r\n            const col = this.columns.find(n => n.field === field);\r\n            if (col) {\r\n                col.width = newColumnWidth;\r\n            }\r\n        }\r\n        // è®¡ç®å®½åº¦å®æ¯  è®¾ç½®ææ½çº¿éè\r\n        this.dragLine.nativeElement.style.display = 'none';\r\n    }\r\n\r\n    isCheckBox(elements, cName) {\r\n        return !!elements.className.match(new RegExp('(\\\\s|^)' + cName + '(\\\\s|$)'));\r\n    }\r\n\r\n    resizeColGroup(table, resizeColumnIndex, newColumnWidth, othersColumn) {\r\n        if (table) {\r\n            // æ­¤å¤è¦è§ä¸åçè¡¨æ ¼ç»ææ¥ç¡®å® æ¬ç»ä»¶ä¸­  headeråbodyç»æç¸å\r\n            const colGroup = table.childNodes[0].children[0].nodeName === 'COLGROUP' ?\r\n                table.childNodes[0].children[0] : null;\r\n            if (colGroup) {\r\n                const col = colGroup.children[resizeColumnIndex];\r\n                col.style.width = newColumnWidth + 'px';\r\n                for (let i = 0; i < othersColumn.length; i++) {\r\n                    const otherCol = colGroup.children[othersColumn[i].colIndex];\r\n                    if (otherCol && othersColumn[i].colWidth) {\r\n                        otherCol.style.width = othersColumn[i].colWidth + 'px';\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error('Scrollable tables require a colgroup to support resizable columns');\r\n            }\r\n        }\r\n    }\r\n    onScrollX(e: any) {\r\n        // æ¨ªåæ»å¨ éåºå®è¡¨å¤´æ»å¨\r\n        const x = e.srcElement.scrollLeft;\r\n        this.tableHeader.nativeElement.scrollTo(x, 0);\r\n    }\r\n    /**\r\n     * æ»å¨æ¡çºµåæ»å¨\r\n     */\r\n    onScrollY(e: any) {\r\n        if (!this.hasFixed) {\r\n            return;\r\n        }\r\n        const y = e.srcElement.scrollTop;\r\n        this.dtLeftFixed.nativeElement.style.top = -y + 'px';\r\n        this.dtRightFixed.nativeElement.style.top = -y + 'px';\r\n    }\r\n\r\n    onPageChange(page: { pageIndex: number, pageSize: number }) {\r\n        if (this.pageIndex !== page.pageIndex) {\r\n            this.pageIndex = page.pageIndex;\r\n            this.paginationOptions.currentPage = page.pageIndex;\r\n            this.pageChanged.emit({ pageInfo: page, search: this.searchData, sortName: this.sortName, sortOrder: this.sortOrder });\r\n        }\r\n    }\r\n\r\n    onPageSizeChange(pageSize: number) {\r\n        if (this.pageSize !== pageSize && this.total) {\r\n            this.paginationOptions.itemsPerPage = pageSize;\r\n            this.pageSize = pageSize;\r\n\r\n            const total = this.total;\r\n            let pageLength = Math.floor(total / pageSize);\r\n            if (total % pageSize > 0) {\r\n                pageLength += 1;\r\n            }\r\n\r\n            if (pageLength && this.pageIndex > pageLength) {\r\n                this.pageIndex = pageLength;\r\n                this.paginationOptions.currentPage = this.pageIndex;\r\n            }\r\n\r\n            this.pageSizeChanged.emit({\r\n                pageInfo: { pageIndex: this.pageIndex, pageSize },\r\n                search: this.searchData, sortName: this.sortName, sortOrder: this.sortOrder\r\n            });\r\n        }\r\n    }\r\n\r\n    onSearch($event) {\r\n        if ($event.originalEvent) {\r\n            $event.originalEvent.stopPropagation();\r\n        }\r\n        this.search.emit(this.searchData);\r\n    }\r\n\r\n    onCheckAll(state: boolean) {\r\n        this.dataService.selectedAll.next(state);\r\n        this.checkAll.emit(state);\r\n    }\r\n\r\n\r\n    onSelectedRow(e: any) {\r\n        this.selectedRow.emit({ data: e.rowData, index: e.rowIndex });\r\n        // å¼å®¹\r\n        this.selectRows.emit({ data: e.rowData, index: e.rowIndex });\r\n    }\r\n\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    resize(size: { width: number, height: number }) {\r\n        if (!size) {\r\n            return;\r\n        }\r\n        if (this.width !== size.width || this.height !== size.height) {\r\n            this.width = size.width;\r\n            this.height = size.height;\r\n        }\r\n        this.setBodyHeight();       \r\n    }\r\n\r\n    loadData(e: { pageSize: number, total: number, data: any, pageIndex: number }) {\r\n        this.data = e.data;\r\n        if (this.pagination) {\r\n            const { total = 0, pageSize = 20, pageIndex = 1 } = { ...e };\r\n            this.paginationOptions.totalItems = total;\r\n            this.paginationOptions.itemsPerPage = pageSize;\r\n            this.paginationOptions.currentPage = pageIndex;\r\n            this.paginationOptions.pageList = this.pageList;\r\n\r\n            this.paginationOptions = {...this.paginationOptions};\r\n            this.total = total;\r\n            this.pageSize = pageSize;\r\n            this.pageIndex = pageIndex;\r\n        }\r\n        this.cd.detectChanges();\r\n        // TFS 580296\r\n        setTimeout(() => {\r\n            this.ps && this.ps.update();\r\n        }, 10);\r\n        this.updateCheckboxState(this.data);\r\n    }\r\n\r\n    /*\r\n     */\r\n    onCellClick(e) {\r\n        this.cellClick.emit(e);\r\n    }\r\n\r\n    /* æ·»å è¡ */\r\n    addRows(dataItem) {\r\n        this.data = this.data.concat(dataItem);\r\n    }\r\n    /* å é¤è¡ */\r\n    removeRows() {\r\n        const SELECTIONS = this.selections;\r\n        if (this.singleSelect) {\r\n            for (let i = 0; i < this.data.length; i++) {\r\n                if (this.data[i] === SELECTIONS) {\r\n                    this.data.splice(i, 1);\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < SELECTIONS.length; i++) {\r\n                for (let j = 0; j < this.data.length; j++) {\r\n                    if (SELECTIONS[i][this.idField] === this.data[j][this.idField]) {\r\n                        this.data.splice(j, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkRow(rid: any, emit = false) {\r\n        let rowIndex = -1;\r\n        const rowData = this.data.find((n, i) => {\r\n            if (n[this.idField] == rid) {\r\n                rowIndex = i;\r\n                return true;\r\n            }\r\n        });\r\n\r\n\r\n        if (!rowData) {\r\n            return;\r\n        }\r\n\r\n        if (!this.selections) {\r\n            this.selections = { [rid]: rowData };\r\n        } else {\r\n            this.selections = {\r\n                [rid]: rowData, ...this.selections.reduce((r, n) => {\r\n                    r[n[this.idField]] = n;\r\n                    return r;\r\n                }, {})\r\n            };\r\n        }\r\n\r\n        this.dataService.selectedRow.next({\r\n            rowIndex,\r\n            rowData\r\n        });\r\n\r\n        if (emit) {\r\n            const p = { data: rowData, index: rowIndex };\r\n            this.selectedRow.emit(p);\r\n            // å¼å®¹\r\n            this.selectRows.emit(p);\r\n        }\r\n    }\r\n\r\n    unCheckRow(rid: any, emit = false) {\r\n        let rowIndex = -1;\r\n        const rowData = this.data.find((n, i) => {\r\n            if (n[this.idField] == rid) {\r\n                rowIndex = i;\r\n                return true;\r\n            }\r\n        });\r\n        if (this.selections) {\r\n            this.selections = this.selections.filter(n => n[this.idField] != rid).reduce((r, n) => {\r\n                r[n[this.idField]] = n;\r\n                return r;\r\n            }, {});\r\n            this.dataService.unSelectedRow.next({\r\n                rowIndex,\r\n                rowData\r\n            });\r\n            if (emit) {\r\n                this.unSelectRow.emit({ data: rowData, index: rowIndex });\r\n            }\r\n        }\r\n    }\r\n\r\n    unCheckRows(ids: any) {\r\n        if (this.selections) {\r\n            this.selections = this.selections.filter(n => !ids.includes(n[this.idField])).reduce((r, n) => {\r\n                r[n[this.idField]] = n;\r\n                return r;\r\n            }, {});\r\n\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    clearSelections() {\r\n        this.selections = [];\r\n    }\r\n\r\n    onKeydownEvent($event) {\r\n        if (!$event || !this.singleSelect || !this.data || !this.data.length) {\r\n            return;\r\n        }\r\n\r\n        if (!['ArrowDown', 'ArrowUp'].includes($event.code)) {\r\n            return;\r\n        }\r\n\r\n\r\n        let newIdx;\r\n        if ($event.code === 'ArrowDown') {\r\n            newIdx = this._currentRowIndex + 1;\r\n            if (newIdx >= this.data.length) {\r\n                newIdx = 0;\r\n            }\r\n        } else if ($event.code === 'ArrowUp') {\r\n            if (this._currentRowIndex !== -1) {\r\n                newIdx = this._currentRowIndex - 1;\r\n            }\r\n        }\r\n\r\n        if (newIdx >= 0) {\r\n            this.dtBody.selectedRow($event, newIdx, this.data[newIdx]);\r\n        }\r\n\r\n        setTimeout(() => {\r\n            // scroll intoView\r\n            const trDoms = this.dtBody.el.nativeElement.querySelectorAll('.ui-table-tbody tr');\r\n            if (trDoms && trDoms[this._currentRowIndex]) {\r\n                trDoms[this._currentRowIndex].scrollIntoView({ block: 'nearest' });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'dt-checkbox',\r\n    template: `\r\n        <div class=\"custom-control custom-checkbox  custom-control-inline dt-checkbox f-checkradio-single\">\r\n            <input type=\"checkbox\" class=\"custom-control-input\"  [checked]=\"checked\">\r\n            <label class=\"custom-control-label\" (click)=\"handleClick($event)\"></label>\r\n        </div>\r\n    `\r\n})\r\nexport class DTCheckboxComponent implements OnInit {\r\n    @Input() checked: boolean;\r\n    @Input() id: string;\r\n    @Input() disabled: boolean;\r\n\r\n    @Output() checkedChange = new EventEmitter();\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() { }\r\n\r\n    handleClick(event) {\r\n        if (!this.disabled) {\r\n            this.checkedChange.emit({originalEvent: event, checked: !this.checked});\r\n        }\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-04-08 16:51:39\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-09-23 16:51:21\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, EventEmitter, AfterViewInit, Output, ElementRef, Renderer2, ViewChild } from '@angular/core';\r\nimport { deepCopy, convertColumns } from '../datatable-column';\r\nimport { DataTableService } from '../datatable.service';\r\nimport { DataColumn } from '@farris/ui-common/column';\r\nimport { CommonUtils } from '@farris/ui-common';\r\nimport { DataTableComponent } from '../datatable.component';\r\nimport { DTCheckboxComponent } from '../datatable-checkbox.component';\r\n\r\n@Component({\r\n    selector: 'datatable-header',\r\n    template: `\r\n        <table class=\"table\" [class.table-sm]=\"size === 'small'\">\r\n            <colgroup>\r\n                <col class=\"dt-checkbox-cell\" *ngIf=\"!singleSelect\" />\r\n                <col *ngFor=\"let col of columns\" [style.width]=\"col.width + 'px'\" />\r\n            </colgroup>\r\n            <thead>\r\n                <tr>\r\n                    <th drag-column class=\"dt-checkbox-cell datatable-fixed-left\" *ngIf=\"!singleSelect\">\r\n                        <dt-checkbox #checkall *ngIf=\"data && data.length\" [checked]=\"isCheckAll\" (checkedChange)=\"onCheckedChange($event)\"></dt-checkbox>\r\n                    </th>\r\n                    <th drag-column *ngFor=\"let col of columns; let i = index\" #dragbar=\"resizeRef\"\r\n                        [class.resizable-column]=\"dt.resizableColumns && !dt.hasFixed\"\r\n                        [attr.field]=\"col.field\"\r\n                        [style.textAlign]=\"col.hAlign || 'left'\" [class.datatable-fixed-right]=\"col['fixed'] === 'right'\">\r\n                        <span [style.marginRight.px]=\"col.sortable ? 10: 0\">{{ col.title }}</span>\r\n                        <ng-container *ngIf=\"col.sortable\">\r\n                            <span *ngIf=\"col.order\" class=\"f-datatable-sort\"\r\n                                [ngClass]=\"{\r\n                                  'f-datatable-sort-asc':col.order === 'asc',\r\n                                  'f-datatable-sort-desc':col.order === 'desc'\r\n                                }\"\r\n                                (click)=\"onSortColumnClick($event, col)\">\r\n                            </span>\r\n                            <span *ngIf=\"!col.order\" class=\"f-datatable-sort\" (click)=\"onSortColumnClick($event, col)\"></span>\r\n                        </ng-container>\r\n                        <span class=\"column-resizer\" (mousedown)=\"dragbar.onMouseDown($event)\" *ngIf=\"dt.resizableColumns && !dt.hasFixed\"></span>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n        </table>\r\n    `,\r\n    styleUrls: ['./datatable-header.component.scss']\r\n})\r\nexport class DataTableHeaderComponent implements OnInit, AfterViewInit {\r\n    @Input() size: string;\r\n    @Input() hover: boolean;\r\n    @Input() columns: DataColumn[] = [];\r\n    @Input() singleSelect = true;\r\n    @Input() fixed: string;\r\n    // æ°æ®æåºä½¿ç¨\r\n    @Input() rows: any;\r\n\r\n    // æ¢å¤æºæ°æ®ä½¿ç¨\r\n    @Input() data: any;\r\n    @Input() rowClassName: (row: any, index: number) => string;\r\n    @Output() checkedAll = new EventEmitter();\r\n\r\n    @Output() rowsChange = new EventEmitter<any>();\r\n    @Output() loadData = new EventEmitter<{ pageSize: number; total: number; data: any; pageIndex: number }>();\r\n\r\n\r\n    @ViewChild('checkall') checkallEl: DTCheckboxComponent;\r\n\r\n    sortType = {};\r\n    filterFields = {};\r\n    clickedUp = false;\r\n    clickedDown = false;\r\n    copyColumns: any;\r\n    copyRows: any;\r\n    originRows: any;\r\n    isCheckAll = false;\r\n    allClass = ' ';\r\n    constructor(\r\n        public el: ElementRef,\r\n        private dataService: DataTableService,\r\n        private render: Renderer2,\r\n        public utils: CommonUtils,\r\n        public dt: DataTableComponent\r\n    ) {\r\n        this.allClass += this.el.nativeElement.classList.value;\r\n\r\n\r\n        this.dataService.updateCheckAllStatus.subscribe( (n: number) => {\r\n            if (n !== 2) {\r\n                this.isCheckAll = n ? true : false;\r\n                // this.checkallEl.elementRef.nativeElement.checked = this.isCheckAll;\r\n            } else {\r\n                this.isCheckAll = false;\r\n                // this.checkallEl.elementRef.nativeElement.checked = false;\r\n            }\r\n        });\r\n    }\r\n    width = '100%';\r\n    ngOnInit() {\r\n        if (this.fixed === 'left') {\r\n            this.columns = convertColumns(this.columns, 'left');\r\n        }\r\n        if (this.fixed === 'right') {\r\n            this.columns = convertColumns(this.columns, 'right');\r\n        }\r\n    }\r\n    ngAfterViewInit() {}\r\n\r\n    onCheckedChange($event) {\r\n        this.isCheckAll = $event.checked;\r\n        this.checkedAll.emit($event.checked);\r\n    }\r\n    createRowClassName(row, index) {\r\n        return this.rowClassName ? this.rowClassName(row, index) : '';\r\n    }\r\n\r\n    private compare(a, b) {\r\n        if (typeof a  === 'string') {\r\n            return a.localeCompare(b);\r\n        } else {\r\n            return a === b ? 0 : (a > b ? 1 : -1);\r\n        }\r\n    }\r\n    private _sort(r1, r2) {\r\n        let r = 0;\r\n        const sortFields = this.dt.sortName.split(',');\r\n        const orders = this.dt.sortOrder.split(',');\r\n\r\n        if (!this.dt.sortName) {\r\n            return r;\r\n        }\r\n\r\n        for (let i = 0; i < sortFields.length; i++) {\r\n            const sn = sortFields[i];\r\n            const so = orders[i];\r\n\r\n            const col = this.columns.find(c => c.field === sn);\r\n\r\n            const orderby = col['sorter'] || this.compare;\r\n            let v1 = this.utils.getValue(sn, r1);\r\n            if (v1 === null || v1 === undefined) {\r\n                v1 = '';\r\n            }\r\n            let v2 = this.utils.getValue(sn, r2);\r\n            if (v2 === null || v2 === undefined) {\r\n                v2 = '';\r\n            }\r\n            r = orderby(v1, v2);\r\n            if (r !== 0) {\r\n                return r * (so === 'asc' ? 1 : -1);\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n    private clientSort() {\r\n        const sortedData = this.data.sort(this._sort.bind(this));\r\n        this.loadData.emit(sortedData);\r\n    }\r\n\r\n    onSortColumnClick($event, col) {\r\n        if (!col.sortable) {\r\n            return;\r\n        }\r\n        const sortName = this.dt.sortName;\r\n        const sortOrder = this.dt.sortOrder;\r\n        let sortFields = [];\r\n        let sortOrders = [];\r\n        if (sortName) {\r\n            sortFields = sortName.split(',');\r\n            sortOrders = sortOrder.split(',');\r\n        }\r\n\r\n        const colOrder = col.order || 'asc';\r\n        let newOrder = colOrder;\r\n        const i = sortFields.findIndex(n => n === col.field);\r\n        if (i >= 0) {\r\n            const _order = sortOrders[i] === 'asc' ? 'desc' : 'asc';\r\n            newOrder = _order;\r\n            // if (this.dt.multiSort && newOrder === 'asc') {\r\n            if (newOrder === 'asc') {\r\n                newOrder = undefined;\r\n                sortFields.splice(i, 1);\r\n                sortOrders.splice(i, 1);\r\n                // if (sortFields.length === 0) {\r\n                //     sortFields.push(col.field);\r\n                //     sortOrders.push('asc');\r\n                //     newOrder = 'asc';\r\n                // }\r\n            } else {\r\n                sortOrders[i] = _order;\r\n            }\r\n        } else {\r\n            if (this.dt.multiSort) {\r\n                sortFields.push(col.field);\r\n                sortOrders.push(colOrder);\r\n            } else {\r\n                sortFields = [col.field];\r\n                sortOrders = [colOrder];\r\n            }\r\n        }\r\n\r\n        col.order = newOrder;\r\n\r\n        this.dt.sortName = sortFields.join(',');\r\n        this.dt.sortOrder = sortOrders.join(',');\r\n        // this.dfs.setSortInfo(this.dg.sortName, this.dg.sortOrder);\r\n\r\n        if (!this.dt.multiSort) {\r\n            const updateFieldOrder = (cols: DataColumn[]) => {\r\n                if (!cols || !cols.length) {\r\n                    return;\r\n                }\r\n                cols.forEach(c => {\r\n                    c.order = undefined;\r\n                    const k = sortFields.findIndex(f => f === c.field);\r\n                    if (k >= 0) {\r\n                        c.order = sortOrders[k];\r\n                    }\r\n                });\r\n            };\r\n\r\n            updateFieldOrder(this.columns);\r\n            // this.cdRef.detectChanges();\r\n        }\r\n\r\n        this.dt.beforeSortColumn(this.dt.sortName, this.dt.sortOrder).subscribe(() => {\r\n            if (this.dt.remoteSort) {\r\n                // this.reload();\r\n            } else {\r\n                this.clientSort();\r\n            }\r\n\r\n            this.dt.columnSorted.emit({ sortName: this.dt.sortName, sortOrder: this.dt.sortOrder });\r\n        });\r\n    }\r\n\r\n    deepCopyData() {\r\n        const copyColumns = deepCopy(this.columns);\r\n        const copyRows = deepCopy(this.rows);\r\n        copyColumns.forEach(element => {\r\n            element.sortType = 'normal';\r\n        });\r\n        return {\r\n            copyColumns,\r\n            copyRows\r\n        };\r\n    }\r\n    /* è¥å­å¨ç­éæ¡ä»¶ ä¿å­æé®å¯ç¹å»\r\n     */\r\n    hasChecked(col) {\r\n        if (this.filterFields.hasOwnProperty(col.field)) {\r\n            this.filterFields[col.field].some(ele => {\r\n                return ele.checked;\r\n            });\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import { LocaleService } from '@farris/ui-locale';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-14 13:53:03\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-01 15:02:29\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    Optional,\r\n    ElementRef,\r\n    Renderer2,\r\n    AfterViewInit,\r\n    EventEmitter,\r\n    Directive,\r\n    HostListener,\r\n    SkipSelf,\r\n    Injector,\r\n    OnChanges,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    NgZone\r\n} from '@angular/core';\r\nimport { convertColumns } from '../datatable-column';\r\nimport { DataTableService } from '../datatable.service';\r\nimport { DataTableComponent } from '../datatable.component';\r\nimport { ColumnFormatService, DataColumn } from '@farris/ui-common/column';\r\nimport { CommonUtils } from '@farris/ui-common';\r\n\r\n@Directive({\r\n    selector: '[dblclick]'\r\n})\r\nexport class DTDblClickRowDirective implements OnInit {\r\n    @Input('dblclick') row;\r\n    constructor(\r\n        public el: ElementRef,\r\n        @Optional() public dt: DataTableComponent\r\n    ) {}\r\n\r\n    ngOnInit() {}\r\n\r\n    @HostListener('dblclick', ['$event'])\r\n    ondblclick(event: Event) {\r\n        if (this.row) {\r\n            this.dt.rowDblClick.emit(this.row);\r\n        }\r\n\r\n        event.stopPropagation();\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'datatable-body',\r\n    template: `\r\n        <table\r\n            class=\"table\"\r\n            [class.table-sm]=\"size === 'small'\"\r\n            [class.table-hover]=\"dt.hover\"\r\n            [class.table-striped]=\"striped\"\r\n            [class.table-bordered]=\"bordered\"\r\n            [class.f-table-norecords]=\"!rows || !rows.length\"\r\n            style=\"border-collapse: separate;border-spacing: 0;\"\r\n        >\r\n            <colgroup>\r\n                <col class=\"dt-checkbox-cell\" *ngIf=\"!dt.singleSelect\" />\r\n                <col *ngFor=\"let col of columns\" [style.width]=\"col.width + 'px'\" />\r\n            </colgroup>\r\n\r\n            <tbody class=\"ui-table-tbody \" *ngIf=\"rows && rows.length\">\r\n                <tr\r\n                    *ngFor=\"let row of rows; trackBy: dt.trackByRows; let rowIndex = index\"\r\n                    [ngClass]=\"createRowClassName(row, rowIndex)\"\r\n                    (click)=\"selectedRow($event, rowIndex, row)\"\r\n                    [class.selected]=\"isSelected(row, tr)\" #tr\r\n                    [dblclick]=\"row\"\r\n                    [ngStyle]=\"renderRowStyle(row, rowIndex)\"\r\n                >\r\n                    <td class=\"dt-checkbox-cell datatable-fixed-left\" *ngIf=\"!dt.singleSelect\" \r\n                    [cell-styler]=\"{row: row, index: rowIndex}\">\r\n                        <dt-checkbox\r\n                            [checked]=\"isSelected(row, tr)\"\r\n                            (checkedChange)=\"onChecked($event, rowIndex, row)\"\r\n                        ></dt-checkbox>\r\n                    </td>\r\n                    <td\r\n                        [ngClass]=\"getTdClassName(row[col.field], col)\"\r\n                        *ngFor=\"let col of columns; let colIndex = index\"\r\n                        [style.textAlign]=\"col.align || 'left'\"\r\n                        \r\n                        (click)=\"onCellClick($event, col, row)\"\r\n                        [class.datatable-fixed-right]=\"col['fixed'] === 'right'\"\r\n                        [cell-styler]=\"{val:utils.getValue(col.field, row), row: row, index: rowIndex, col: col}\"\r\n                    >\r\n                        <ng-container *ngIf=\"!col.cellTempl; else cellTemp\">\r\n                            <span *ngIf=\"col.formatter\" [innerHTML]=\"formatData(col.field, row, col.formatter) | safe:'html'\" ></span>\r\n                            <!-- <span *ngIf=\"col.formatter\" [innerHTML]=\" col.field | getvalue: row | columnformatter: col : row | safe: 'html'\" ></span> -->\r\n                            <span *ngIf=\"!col.formatter\" [title]=\"utils.getValue(col.field, row)\"\r\n                             [textContent]=\"utils.getValue(col.field, row)\"></span>\r\n                        </ng-container>\r\n                        <ng-template\r\n                            #cellTemp\r\n                            [ngTemplateOutlet]=\"col.cellTempl\"\r\n                            [ngTemplateOutletContext]=\"{\r\n                                $implicit: row,\r\n                                rowIndex: rowIndex,\r\n                                value: row[col.field]\r\n                            }\"\r\n                        ></ng-template>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n\r\n            <tbody class=\"ui-table-tbody\" *ngIf=\"!rows || !rows.length\" #emptyTbody>\r\n                <tr class=\"f-table-norecords-row\">\r\n                    <td [attr.align]=\"'center'\"\r\n                        class=\"farris-treetable-emptydata\"\r\n                        [attr.colspan]=\"columns.length\"\r\n                    >\r\n                        <div\r\n                            class=\"f-table-norecords-content\"\r\n                            [innerHTML]=\"emptyMessage | safe: 'html'\"\r\n                        ></div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    `,\r\n    styles: [\r\n        `\r\n            .table td:focus-within {\r\n                box-shadow: inset 0 0 0 2px rgba(0, 0, 0, 0.13);\r\n            }\r\n            .table td div {\r\n                width: 100%;\r\n                height: 100%;\r\n            }\r\n            .table td input {\r\n                width: 100%;\r\n                height: 100%;\r\n                font-family: auto;\r\n                line-height: 1;\r\n                font-size: 13px;\r\n            }\r\n            .table td input:focus {\r\n                border: 0;\r\n            }\r\n            input[type='checkbox']:focus {\r\n                outline: none;\r\n            }\r\n\r\n            .f-table-norecords-row:hover {\r\n                background-color: transparent!important;\r\n                cursor: default!important;\r\n            }\r\n        `\r\n    ]\r\n})\r\nexport class DataTableBodyComponent implements OnInit, AfterViewInit, OnChanges {\r\n    @Input() size: string;\r\n    @Input() hover: boolean;\r\n    @Input() bordered: boolean;\r\n    @Input() striped: boolean;\r\n    @Input() columns: DataColumn[];\r\n    @Input() fixed: string;\r\n    @Input() rows: any[] = [];\r\n    @Input() rowClassName: (row: any, index: number) => string;\r\n    @Input() cellClassName: (value: any, col: any) => string;\r\n    @Output() rowDblClick = new EventEmitter();\r\n    @Output() selectRow: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() cellEdit: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() cellClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild('emptyTbody') emptyTbodyElRef: ElementRef;\r\n\r\n    lastRowIndex = 0;\r\n    lastColumnIndex = 0;\r\n    boxShadow: string;\r\n    _rows: any;\r\n    edit = {};\r\n    className = {};\r\n    isRowTempl = false;\r\n    selectedRowIndex = -1;\r\n    _selections = {};\r\n    emptyMessage = 'ææ æ°æ®';\r\n\r\n    // å·²éæ©çè¡ é»è®¤ä¸ºç©º\r\n    set selections(v) {\r\n        this._selections = v || {};\r\n        this.dt.updateCheckboxState(this.rows);\r\n    }\r\n    get selections(): any {\r\n        if (!this._selections) {\r\n            return;\r\n        }\r\n        const keys = Object.keys(this._selections);\r\n        if (keys.length) {\r\n            if (this.dt.singleSelect) {\r\n                return this._selections;\r\n            } else {\r\n                return keys.map(k => this._selections[k]);\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    private localeService: LocaleService;\r\n    private ngzone: NgZone;\r\n    constructor(\r\n        public el: ElementRef,\r\n        private dataService: DataTableService,\r\n        private render: Renderer2,\r\n        @Optional() public dt: DataTableComponent,\r\n        public colFormatSer: ColumnFormatService,\r\n        public utils: CommonUtils,\r\n        private injector: Injector\r\n    ) {\r\n        this.localeService = this.injector.get(LocaleService);\r\n        this.ngzone = this.injector.get(NgZone, null);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.dataService.selectedAll.subscribe(allChecked => {\r\n            const idfield = this.idField();\r\n            this.rows.forEach(row => {\r\n                if (allChecked) {\r\n                    this._selections[row[idfield]] = row;\r\n                } else {\r\n                    delete this._selections[row[idfield]];\r\n                }\r\n            });\r\n        });\r\n        if (this.rows) {\r\n            this.isRowTempl = this.rows.some(row => {\r\n                return row.hasOwnProperty('rowTempl');\r\n            });\r\n        }\r\n        if (this.fixed === 'left') {\r\n            this.columns = convertColumns(this.columns, 'left');\r\n        }\r\n        if (this.fixed === 'right') {\r\n            this.columns = convertColumns(this.columns, 'right');\r\n        }\r\n\r\n        this.emptyMessage = this.localeService.getValue('datagrid.emptyMessage');\r\n    }\r\n    ngAfterViewInit() {\r\n        this._rows = this.el.nativeElement.querySelectorAll('tr');\r\n        this.checkBodyHeightWhenEmptyData();\r\n    }\r\n\r\n    checkBodyHeightWhenEmptyData() {\r\n        if (this.emptyTbodyElRef && !(this.rows && this.rows.length)) {\r\n            if (this.emptyTbodyElRef.nativeElement.offsetHeight < 130) {\r\n                this.emptyTbodyElRef.nativeElement.style.height = this.dt.pagination ? '150px': '120px';\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.rows && !changes.rows.isFirstChange()) {\r\n            if (!this.dt.singleSelect) {\r\n                const _rows = changes.rows.currentValue || [];\r\n                const checkedRows = _rows.map(n => {\r\n                    return this.isSelected(n) ? n : 0;\r\n                }).filter(n => n);\r\n\r\n                if (!_rows.length) {\r\n                    this.dataService.updateCheckAllStatus.next(0);\r\n                    return;\r\n                }\r\n                const idfield = this.idField();\r\n                let checkTotal = 0;\r\n                _rows.forEach(element => {\r\n                    if (checkedRows.find(n => n[idfield] === element[idfield])) {\r\n                        checkTotal += 1;\r\n                    }\r\n                });\r\n\r\n\r\n                if (_rows.length  === checkTotal) {\r\n                    this.dataService.updateCheckAllStatus.next(1);\r\n                } else {\r\n                    if (checkedRows.length === 0) {\r\n                        this.dataService.updateCheckAllStatus.next(0);\r\n                    } else {\r\n                        this.dataService.updateCheckAllStatus.next(2);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * è·åå¯¹è±¡ä¸­æå®å­æ®µçå¼ã field: å¯ä»¥ä¸ºå¸¦æå±çº§ç»æçè·¯å¾ï¼å¦ï¼ user.firstName | name ç­\r\n     */\r\n    getValue(field: string, data: any) {\r\n        if (field.indexOf('.') === -1) {\r\n            return data[field];\r\n        } else {\r\n            return (\r\n                field.split('.').reduce((obj, key) => {\r\n                    return obj[key];\r\n                }, data) || ''\r\n            );\r\n        }\r\n    }\r\n    selectedRow(event: any, index: number, data: any) {\r\n        if (event) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n        let isSelected = false;\r\n        const idfield = this.idField();\r\n\r\n\r\n        if (this.dt.singleSelect) {\r\n            if (this.selectedRowIndex !== index || !this._selections || this._selections[idfield] !== data[idfield]) {\r\n                this.selectedRowIndex = index;\r\n                this._selections = data;\r\n                isSelected = true;\r\n                this.dataService.selectedRow.next({\r\n                    rowIndex: index,\r\n                    rowData: data\r\n                });\r\n            } else {\r\n                if (!this.dt.keepSelect) {\r\n                    this.selectedRowIndex = -1;\r\n                    this._selections = undefined;\r\n                    isSelected = false;\r\n\r\n\r\n                    this.dataService.unSelectedRow.next({\r\n                        rowIndex: index,\r\n                        rowData: data\r\n                    });\r\n                } else {\r\n                    isSelected = true;\r\n                }\r\n            }\r\n        } else {\r\n            if (this.isSelected(data)) {\r\n                delete this._selections[data[idfield]];\r\n\r\n                isSelected = false;\r\n                this.dataService.unSelectedRow.next({\r\n                    rowIndex: index,\r\n                    rowData: data\r\n                });\r\n            } else {\r\n                this._selections[data[this.idField()]] = data;\r\n                isSelected = true;\r\n                this.dataService.selectedRow.next({\r\n                    rowIndex: index,\r\n                    rowData: data\r\n                });\r\n            }\r\n        }\r\n\r\n        if (isSelected) {\r\n            this.dt.selectedRow.emit({ data, index });\r\n            // å¼å®¹\r\n            this.dt.selectRows.emit({ data, index });\r\n        } else {\r\n            this.dt.unSelectRow.emit({ data, index });\r\n        }\r\n    }\r\n\r\n    onChecked(event: any, index: number, data: any) {\r\n        const state = event.checked;\r\n        const idfield = this.dt.idField;\r\n        if (state) {\r\n            this._selections[data[idfield]] = data;\r\n            this.dataService.selectedRow.next({\r\n                rowIndex: index,\r\n                rowData: data\r\n            });\r\n            this.dt.selectedRow.emit({ data, index });\r\n            // å¼å®¹\r\n            this.dt.selectRows.emit({ data, index });\r\n        } else {\r\n            delete this._selections[data[idfield]];\r\n            this.dataService.unSelectedRow.next({\r\n                rowIndex: index,\r\n                rowData: data\r\n            });\r\n            this.dt.unSelectRow.emit({ data, index });\r\n        }\r\n        event.originalEvent.stopPropagation();\r\n    }\r\n\r\n    private idField() {\r\n        return this.dt.idField;\r\n    }\r\n\r\n    isSelected(row: any, tr?: any) {\r\n        const idfield = this.idField();\r\n        \r\n\r\n\r\n        if (this._selections) {\r\n            if (this.dt.singleSelect) {\r\n                return this._selections[idfield] === row[idfield];\r\n            } else {\r\n                return this._selections[row[idfield]] !== undefined;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    formatData(field: any, data: any, formatter: any) {\r\n        const value = this.utils.getValue(field, data, true);\r\n        return this.colFormatSer.format(value, data, formatter);\r\n    }\r\n    // æ·»å èªå®ä¹è®¾ç½®å ååæ ¼ç±»æ ·å¼\r\n    getTdClassName(value, col) {\r\n        const tempClassName = {};\r\n        // åç±»çæ ·å¼\r\n        if (\r\n            col.className &&\r\n            Object.prototype.toString.call(col.className) === '[object String]'\r\n        ) {\r\n            tempClassName[col.className] = true;\r\n        }\r\n        if (this.cellClassName && this.cellClassName(value, col)) {\r\n            tempClassName[this.cellClassName(value, col)] = true;\r\n        }\r\n        return tempClassName;\r\n    }\r\n    createRowClassName(row, index) {\r\n        return this.rowClassName ? this.rowClassName(row, index) : '';\r\n    }\r\n    onCellClick(event: Event, col: any, row: any) {\r\n        this.cellClick.emit({event, col, row});\r\n    }\r\n\r\n    renderRowStyle(row, index) {\r\n        if (this.dt.rowStyler) {\r\n            return this.dt.rowStyler({ data: row, index });\r\n        }\r\n        return '';\r\n    }\r\n\r\n    renderCellStyle(val, row, index, col) {\r\n        if (this.dt.cellStyler) {\r\n            return this.dt.cellStyler({ value: val, data: row, index, col, field: col.field });\r\n        }\r\n        return '';\r\n    }\r\n}\r\n","import { Component, Input, ContentChild, TemplateRef } from '@angular/core';\r\nimport { DataColumn } from '@farris/ui-common/column';\r\n@Component({\r\n    selector: 'datatable-footer',\r\n    template:\r\n        `\r\n    <div class=\"table\"\r\n    [class.table-hover]=\"hover\">\r\n        <ng-container *ngIf=\"!tableFooter\">\r\n                <table class=\"table table-hover\">\r\n                        <colgroup>\r\n                            <col class=\"dt-checkbox-cell\" />\r\n                            <col *ngFor=\"let col of columns\" [style.width]=\"col.width + 'px'\" />\r\n                        </colgroup>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"dt-checkbox-cell\">\r\n                                    \r\n                                </th>\r\n                                <th  *ngFor=\"let col of columns\" [attr.align]=\"col.align\" >{{ col.title }}</th>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n        </ng-container>\r\n</div>\r\n    `\r\n})\r\nexport class DatatableFooterComponent {\r\n    @Input() hover: boolean;\r\n    @Input() columns: DataColumn[];\r\n    // è¡¨æ ¼ footer å¯æ·»å æ¨¡æ¿\r\n    @Input()\r\n    @ContentChild(TemplateRef) tableFooter: TemplateRef<any>;\r\n    constructor() {\r\n    }\r\n}\r\n","import { Directive, ElementRef, NgZone, Renderer2, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { DataTableComponent } from '../datatable.component';\r\n@Directive({\r\n    selector: '[drag-column]',\r\n    exportAs: 'resizeRef'\r\n})\r\nexport class DragColumnDirective implements AfterViewInit, OnDestroy {\r\n    resizer: HTMLSpanElement;\r\n\r\n    resizerMouseDownListener: any;\r\n\r\n    documentMouseMoveListener: any;\r\n\r\n    documentMouseUpListener: any;\r\n\r\n    constructor(public dt: DataTableComponent, public ngzone: NgZone,\r\n        public el: ElementRef, public render: Renderer2) {\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // if (this.isEnable()) {\r\n        //     this.ngzone.runOutsideAngular(() => {\r\n        //         // this.resizer = document.createElement('span');\r\n        //         // this.resizer.className = 'column-resizer';\r\n        //         // this.el.nativeElement.appendChild(this.resizer);\r\n        //         // this.render.addClass(this.el.nativeElement, 'resizable-column');\r\n        //         this.resizer = this.el.nativeElement.querySelector('span.column-resizer');\r\n        //         if (this.resizer) {\r\n        //             this.resizerMouseDownListener = this.onMouseDown.bind(this);\r\n        //             this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\r\n        //         }\r\n        //     });\r\n        // }\r\n    }\r\n\r\n    isEnable() {\r\n        return this.dt.resizableColumns && !this.dt.hasFixed;\r\n    }\r\n\r\n    bindDocumentEvents() {\r\n        this.ngzone.runOutsideAngular(() => {\r\n            this.documentMouseMoveListener = this.onMouseMove.bind(this);\r\n            document.addEventListener('mousemove', this.documentMouseMoveListener);\r\n\r\n            this.documentMouseUpListener = this.onMouseUp.bind(this);\r\n            document.addEventListener('mouseup', this.documentMouseUpListener);\r\n        });\r\n    }\r\n\r\n    unbindDocumentEvents() {\r\n        if (this.documentMouseMoveListener) {\r\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\r\n            this.documentMouseMoveListener = null;\r\n        }\r\n\r\n        if (this.documentMouseUpListener) {\r\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\r\n            this.documentMouseUpListener = null;\r\n        }\r\n    }\r\n\r\n    onMouseDown(event: Event) {\r\n        this.dt.beginDrag(event);\r\n        this.bindDocumentEvents();\r\n\r\n    }\r\n\r\n    onMouseMove(event: Event) {\r\n        this.dt.moveDrag(event);\r\n    }\r\n\r\n    onMouseUp(event: Event) {\r\n        this.dt.stopDrag(event, this.el.nativeElement);\r\n        this.unbindDocumentEvents();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // if (this.resizerMouseDownListener && this.resizer) {\r\n        //     this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\r\n        // }\r\n\r\n        this.unbindDocumentEvents();\r\n    }\r\n\r\n}\r\n","import { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\r\nimport { DataTableBodyComponent } from './datatable-body.component';\r\n\r\n@Directive({ selector: '[cell-styler]' })\r\nexport class CellStylerDirective implements OnInit {\r\n\r\n    @Input('cell-styler') options = null;\r\n\r\n    constructor(private dtb: DataTableBodyComponent, private elRef: ElementRef, private render: Renderer2) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.dtb && this.options) {\r\n            const {val, row, col, index} = this.options;\r\n            let _sty = null;\r\n            if (!col) {\r\n                _sty = this.dtb.renderRowStyle(row, index) || {};\r\n            } else {\r\n                let rowStyle = this.dtb.renderRowStyle(row, index) || {};\r\n                let cellStyle = this.dtb.renderCellStyle(val, row,index, col) || {};\r\n                _sty = cellStyle;\r\n                if (col.fixed === 'right') {\r\n                    const hasBackground = Object.keys(cellStyle).find(n => {\r\n                        return ['background', 'background-color', 'backgroundcolor'].indexOf(n.toLowerCase()) > -1;\r\n                    });\r\n                    if (hasBackground !== null) {\r\n                        _sty = Object.assign(cellStyle, rowStyle);\r\n                    }\r\n                } \r\n            }\r\n\r\n            if (_sty) {\r\n                Object.keys(_sty).forEach(n => {\r\n                    this.elRef.nativeElement.style.setProperty(n, _sty[n], 'important');\r\n                });\r\n            }\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { PaginationModule } from '@farris/ui-pagination';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\nimport { DataColumnModule } from '@farris/ui-common/column';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\n\r\nimport { DataTableComponent } from './datatable.component';\r\nimport { DataTableHeaderComponent } from './table/datatable-header.component';\r\nimport { ColumnDirective } from './datatable-column.component';\r\nimport { DataTableBodyComponent, DTDblClickRowDirective } from './table/datatable-body.component';\r\nimport { DTCheckboxComponent } from './datatable-checkbox.component';\r\nimport { DatatableFooterComponent } from './table/datatable-footer.component';\r\n\r\nimport { DragColumnDirective } from './utils/drag.directive';\r\nimport { CellStylerDirective } from './table/cell-style.directive';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        PerfectScrollbarModule,\r\n        PaginationModule,\r\n        FarrisCommonModule.forRoot(),\r\n        InputGroupModule,\r\n        DataColumnModule.forRoot(),\r\n        FarrisFormsModule\r\n    ],\r\n    exports: [\r\n        DataTableComponent, DataTableHeaderComponent,\r\n        ColumnDirective, DataTableBodyComponent,\r\n        FarrisCommonModule, DatatableFooterComponent,\r\n        DragColumnDirective\r\n    ],\r\n    declarations: [\r\n        DataTableComponent, DataTableHeaderComponent,\r\n        ColumnDirective, DragColumnDirective,\r\n        DataTableBodyComponent, DTCheckboxComponent,\r\n        DatatableFooterComponent, DTDblClickRowDirective,\r\n        CellStylerDirective\r\n    ],\r\n    providers: [\r\n\r\n    ],\r\n})\r\nexport class DataTableModule { }\r\n"],"names":[],"mappings":"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"}
