/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
var DTCheckboxComponent = /** @class */ (function () {
    function DTCheckboxComponent() {
        this.checkedChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    DTCheckboxComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?} event
     * @return {?}
     */
    DTCheckboxComponent.prototype.handleClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (!this.disabled) {
            this.checkedChange.emit({ originalEvent: event, checked: !this.checked });
        }
    };
    DTCheckboxComponent.decorators = [
        { type: Component, args: [{
                    selector: 'dt-checkbox',
                    template: "\n        <div class=\"custom-control custom-checkbox  custom-control-inline dt-checkbox f-checkradio-single\">\n            <input type=\"checkbox\" class=\"custom-control-input\"  [checked]=\"checked\">\n            <label class=\"custom-control-label\" (click)=\"handleClick($event)\"></label>\n        </div>\n    "
                }] }
    ];
    /** @nocollapse */
    DTCheckboxComponent.ctorParameters = function () { return []; };
    DTCheckboxComponent.propDecorators = {
        checked: [{ type: Input }],
        id: [{ type: Input }],
        disabled: [{ type: Input }],
        checkedChange: [{ type: Output }]
    };
    return DTCheckboxComponent;
}());
export { DTCheckboxComponent };
if (false) {
    /** @type {?} */
    DTCheckboxComponent.prototype.checked;
    /** @type {?} */
    DTCheckboxComponent.prototype.id;
    /** @type {?} */
    DTCheckboxComponent.prototype.disabled;
    /** @type {?} */
    DTCheckboxComponent.prototype.checkedChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXRhYmxlLWNoZWNrYm94LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktZGF0YXRhYmxlLyIsInNvdXJjZXMiOlsibGliL2RhdGF0YWJsZS1jaGVja2JveC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFL0U7SUFnQkk7UUFGVSxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFFN0IsQ0FBQzs7OztJQUVqQixzQ0FBUTs7O0lBQVIsY0FBYSxDQUFDOzs7OztJQUVkLHlDQUFXOzs7O0lBQVgsVUFBWSxLQUFLO1FBQ2IsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDaEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsRUFBQyxhQUFhLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUMsQ0FBQyxDQUFDO1NBQzNFO0lBQ0wsQ0FBQzs7Z0JBeEJKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsYUFBYTtvQkFDdkIsUUFBUSxFQUFFLGdVQUtUO2lCQUNKOzs7OzswQkFFSSxLQUFLO3FCQUNMLEtBQUs7MkJBQ0wsS0FBSztnQ0FFTCxNQUFNOztJQVdYLDBCQUFDO0NBQUEsQUF6QkQsSUF5QkM7U0FoQlksbUJBQW1COzs7SUFDNUIsc0NBQTBCOztJQUMxQixpQ0FBb0I7O0lBQ3BCLHVDQUEyQjs7SUFFM0IsNENBQTZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2R0LWNoZWNrYm94JyxcclxuICAgIHRlbXBsYXRlOiBgXHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImN1c3RvbS1jb250cm9sIGN1c3RvbS1jaGVja2JveCAgY3VzdG9tLWNvbnRyb2wtaW5saW5lIGR0LWNoZWNrYm94IGYtY2hlY2tyYWRpby1zaW5nbGVcIj5cclxuICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wtaW5wdXRcIiAgW2NoZWNrZWRdPVwiY2hlY2tlZFwiPlxyXG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJjdXN0b20tY29udHJvbC1sYWJlbFwiIChjbGljayk9XCJoYW5kbGVDbGljaygkZXZlbnQpXCI+PC9sYWJlbD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIGBcclxufSlcclxuZXhwb3J0IGNsYXNzIERUQ2hlY2tib3hDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gICAgQElucHV0KCkgY2hlY2tlZDogYm9vbGVhbjtcclxuICAgIEBJbnB1dCgpIGlkOiBzdHJpbmc7XHJcbiAgICBASW5wdXQoKSBkaXNhYmxlZDogYm9vbGVhbjtcclxuXHJcbiAgICBAT3V0cHV0KCkgY2hlY2tlZENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICAgIG5nT25Jbml0KCkgeyB9XHJcblxyXG4gICAgaGFuZGxlQ2xpY2soZXZlbnQpIHtcclxuICAgICAgICBpZiAoIXRoaXMuZGlzYWJsZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5jaGVja2VkQ2hhbmdlLmVtaXQoe29yaWdpbmFsRXZlbnQ6IGV2ZW50LCBjaGVja2VkOiAhdGhpcy5jaGVja2VkfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==