/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ContentChild, TemplateRef } from '@angular/core';
export class DatatableFooterComponent {
    constructor() {
    }
}
DatatableFooterComponent.decorators = [
    { type: Component, args: [{
                selector: 'datatable-footer',
                template: `
    <div class="table"
    [class.table-hover]="hover">
        <ng-container *ngIf="!tableFooter">
                <table class="table table-hover">
                        <colgroup>
                            <col class="dt-checkbox-cell" />
                            <col *ngFor="let col of columns" [style.width]="col.width + 'px'" />
                        </colgroup>
                        <thead>
                            <tr>
                                <th class="dt-checkbox-cell">
                                    
                                </th>
                                <th  *ngFor="let col of columns" [attr.align]="col.align" >{{ col.title }}</th>
                            </tr>
                        </thead>
                    </table>
        </ng-container>
</div>
    `
            }] }
];
/** @nocollapse */
DatatableFooterComponent.ctorParameters = () => [];
DatatableFooterComponent.propDecorators = {
    hover: [{ type: Input }],
    columns: [{ type: Input }],
    tableFooter: [{ type: Input }, { type: ContentChild, args: [TemplateRef,] }]
};
if (false) {
    /** @type {?} */
    DatatableFooterComponent.prototype.hover;
    /** @type {?} */
    DatatableFooterComponent.prototype.columns;
    /** @type {?} */
    DatatableFooterComponent.prototype.tableFooter;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXRhYmxlLWZvb3Rlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWRhdGF0YWJsZS8iLCJzb3VyY2VzIjpbImxpYi90YWJsZS9kYXRhdGFibGUtZm9vdGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQTJCNUUsTUFBTSxPQUFPLHdCQUF3QjtJQU1qQztJQUNBLENBQUM7OztZQWhDSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLGtCQUFrQjtnQkFDNUIsUUFBUSxFQUNKOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQW9CSDthQUNKOzs7OztvQkFFSSxLQUFLO3NCQUNMLEtBQUs7MEJBRUwsS0FBSyxZQUNMLFlBQVksU0FBQyxXQUFXOzs7O0lBSnpCLHlDQUF3Qjs7SUFDeEIsMkNBQStCOztJQUUvQiwrQ0FDeUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBDb250ZW50Q2hpbGQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IERhdGFDb2x1bW4gfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbi9jb2x1bW4nO1xyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnZGF0YXRhYmxlLWZvb3RlcicsXHJcbiAgICB0ZW1wbGF0ZTpcclxuICAgICAgICBgXHJcbiAgICA8ZGl2IGNsYXNzPVwidGFibGVcIlxyXG4gICAgW2NsYXNzLnRhYmxlLWhvdmVyXT1cImhvdmVyXCI+XHJcbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIiF0YWJsZUZvb3RlclwiPlxyXG4gICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPVwidGFibGUgdGFibGUtaG92ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbGdyb3VwPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBjbGFzcz1cImR0LWNoZWNrYm94LWNlbGxcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCAqbmdGb3I9XCJsZXQgY29sIG9mIGNvbHVtbnNcIiBbc3R5bGUud2lkdGhdPVwiY29sLndpZHRoICsgJ3B4J1wiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvY29sZ3JvdXA+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aGVhZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9XCJkdC1jaGVja2JveC1jZWxsXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoICAqbmdGb3I9XCJsZXQgY29sIG9mIGNvbHVtbnNcIiBbYXR0ci5hbGlnbl09XCJjb2wuYWxpZ25cIiA+e3sgY29sLnRpdGxlIH19PC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPC90YWJsZT5cclxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cclxuPC9kaXY+XHJcbiAgICBgXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEYXRhdGFibGVGb290ZXJDb21wb25lbnQge1xyXG4gICAgQElucHV0KCkgaG92ZXI6IGJvb2xlYW47XHJcbiAgICBASW5wdXQoKSBjb2x1bW5zOiBEYXRhQ29sdW1uW107XHJcbiAgICAvLyDooajmoLwgZm9vdGVyIOWPr+a3u+WKoOaooeadv1xyXG4gICAgQElucHV0KClcclxuICAgIEBDb250ZW50Q2hpbGQoVGVtcGxhdGVSZWYpIHRhYmxlRm9vdGVyOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB9XHJcbn1cclxuIl19