/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';
import { NgbDropdownModule } from './dropdown/dropdown.module';
import { NgbTooltipModule } from './tooltip/tooltip.module';
import { LocaleModule } from '@farris/ui-locale';
import { FarrisTabsComponent } from './tabs/tabs.component';
import { TabConfig, TabService } from './tabs.config';
import { FarrisTabComponent } from './tab/tab.component';
import { TabTranscludeDirective } from './tab/tab.transclude.directive';
import { TabHeadDirective } from './tab/tab.headtemplate.directive';
import { TabHostDirective } from './tab/tabhost.directive';
import { FarrisTabsExtendDirective } from './tab/extend.directive';
var FarrisTabsModule = /** @class */ (function () {
    function FarrisTabsModule() {
    }
    /**
     * @param {?=} config
     * @return {?}
     */
    FarrisTabsModule.forRoot = /**
     * @param {?=} config
     * @return {?}
     */
    function (config) {
        return {
            ngModule: FarrisTabsModule,
            providers: [{ provide: TabConfig, useValue: config }]
        };
    };
    FarrisTabsModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        LocaleModule,
                        FormsModule,
                        NgbDropdownModule.forRoot(),
                        NgbTooltipModule.forRoot(),
                        FDropdownDirectiveTypeModule
                    ],
                    declarations: [FarrisTabsComponent, FarrisTabComponent,
                        TabTranscludeDirective, TabHeadDirective, FarrisTabsExtendDirective, TabHostDirective],
                    exports: [
                        FarrisTabsComponent,
                        FarrisTabComponent,
                        TabTranscludeDirective,
                        TabHeadDirective,
                        TabHostDirective,
                        FarrisTabsExtendDirective,
                        NgbDropdownModule,
                        NgbTooltipModule
                    ],
                    providers: [TabService]
                },] }
    ];
    return FarrisTabsModule;
}());
export { FarrisTabsModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLXRhYnMvIiwic291cmNlcyI6WyJsaWIvdGFicy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFDLDRCQUE0QixFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDakUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDNUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzVELE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzNELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRW5FO0lBQUE7SUE4QkEsQ0FBQzs7Ozs7SUFOVSx3QkFBTzs7OztJQUFkLFVBQWUsTUFBa0I7UUFDN0IsT0FBTztZQUNILFFBQVEsRUFBRSxnQkFBZ0I7WUFDMUIsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsQ0FBQztTQUN4RCxDQUFDO0lBQ04sQ0FBQzs7Z0JBN0JKLFFBQVEsU0FBQztvQkFDTixPQUFPLEVBQUU7d0JBQ0wsWUFBWTt3QkFDWixZQUFZO3dCQUNaLFdBQVc7d0JBQ1gsaUJBQWlCLENBQUMsT0FBTyxFQUFFO3dCQUMzQixnQkFBZ0IsQ0FBQyxPQUFPLEVBQUU7d0JBQzFCLDRCQUE0QjtxQkFDL0I7b0JBQ0QsWUFBWSxFQUFFLENBQUMsbUJBQW1CLEVBQUUsa0JBQWtCO3dCQUNsRCxzQkFBc0IsRUFBRSxnQkFBZ0IsRUFBRSx5QkFBeUIsRUFBRSxnQkFBZ0IsQ0FBQztvQkFDMUYsT0FBTyxFQUFFO3dCQUNMLG1CQUFtQjt3QkFDbkIsa0JBQWtCO3dCQUNsQixzQkFBc0I7d0JBQ3RCLGdCQUFnQjt3QkFDaEIsZ0JBQWdCO3dCQUNoQix5QkFBeUI7d0JBQ3pCLGlCQUFpQjt3QkFDakIsZ0JBQWdCO3FCQUNuQjtvQkFDRCxTQUFTLEVBQUUsQ0FBQyxVQUFVLENBQUM7aUJBQzFCOztJQVFELHVCQUFDO0NBQUEsQUE5QkQsSUE4QkM7U0FQWSxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHtGRHJvcGRvd25EaXJlY3RpdmVUeXBlTW9kdWxlfSBmcm9tICdAZmFycmlzL3VpLWRyb3Bkb3duJztcclxuaW1wb3J0IHsgTmdiRHJvcGRvd25Nb2R1bGUgfSBmcm9tICcuL2Ryb3Bkb3duL2Ryb3Bkb3duLm1vZHVsZSc7XHJcbmltcG9ydCB7IE5nYlRvb2x0aXBNb2R1bGUgfSBmcm9tICcuL3Rvb2x0aXAvdG9vbHRpcC5tb2R1bGUnO1xyXG5pbXBvcnQgeyBMb2NhbGVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWxvY2FsZSc7XHJcbmltcG9ydCB7IEZhcnJpc1RhYnNDb21wb25lbnQgfSBmcm9tICcuL3RhYnMvdGFicy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBUYWJDb25maWcsIFRhYlNlcnZpY2UgfSBmcm9tICcuL3RhYnMuY29uZmlnJztcclxuaW1wb3J0IHsgRmFycmlzVGFiQ29tcG9uZW50IH0gZnJvbSAnLi90YWIvdGFiLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFRhYlRyYW5zY2x1ZGVEaXJlY3RpdmUgfSBmcm9tICcuL3RhYi90YWIudHJhbnNjbHVkZS5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBUYWJIZWFkRGlyZWN0aXZlIH0gZnJvbSAnLi90YWIvdGFiLmhlYWR0ZW1wbGF0ZS5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBUYWJIb3N0RGlyZWN0aXZlIH0gZnJvbSAnLi90YWIvdGFiaG9zdC5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBGYXJyaXNUYWJzRXh0ZW5kRGlyZWN0aXZlIH0gZnJvbSAnLi90YWIvZXh0ZW5kLmRpcmVjdGl2ZSc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gICAgaW1wb3J0czogW1xyXG4gICAgICAgIENvbW1vbk1vZHVsZSxcclxuICAgICAgICBMb2NhbGVNb2R1bGUsXHJcbiAgICAgICAgRm9ybXNNb2R1bGUsXHJcbiAgICAgICAgTmdiRHJvcGRvd25Nb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIE5nYlRvb2x0aXBNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIEZEcm9wZG93bkRpcmVjdGl2ZVR5cGVNb2R1bGVcclxuICAgIF0sXHJcbiAgICBkZWNsYXJhdGlvbnM6IFtGYXJyaXNUYWJzQ29tcG9uZW50LCBGYXJyaXNUYWJDb21wb25lbnQsXHJcbiAgICAgICAgVGFiVHJhbnNjbHVkZURpcmVjdGl2ZSwgVGFiSGVhZERpcmVjdGl2ZSwgRmFycmlzVGFic0V4dGVuZERpcmVjdGl2ZSwgVGFiSG9zdERpcmVjdGl2ZV0sXHJcbiAgICBleHBvcnRzOiBbXHJcbiAgICAgICAgRmFycmlzVGFic0NvbXBvbmVudCxcclxuICAgICAgICBGYXJyaXNUYWJDb21wb25lbnQsXHJcbiAgICAgICAgVGFiVHJhbnNjbHVkZURpcmVjdGl2ZSxcclxuICAgICAgICBUYWJIZWFkRGlyZWN0aXZlLFxyXG4gICAgICAgIFRhYkhvc3REaXJlY3RpdmUsXHJcbiAgICAgICAgRmFycmlzVGFic0V4dGVuZERpcmVjdGl2ZSxcclxuICAgICAgICBOZ2JEcm9wZG93bk1vZHVsZSxcclxuICAgICAgICBOZ2JUb29sdGlwTW9kdWxlXHJcbiAgICBdLFxyXG4gICAgcHJvdmlkZXJzOiBbVGFiU2VydmljZV1cclxufSlcclxuZXhwb3J0IGNsYXNzIEZhcnJpc1RhYnNNb2R1bGUge1xyXG4gICAgc3RhdGljIGZvclJvb3QoY29uZmlnPzogVGFiQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmdNb2R1bGU6IEZhcnJpc1RhYnNNb2R1bGUsXHJcbiAgICAgICAgICAgIHByb3ZpZGVyczogW3sgcHJvdmlkZTogVGFiQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnIH1dXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG4iXX0=