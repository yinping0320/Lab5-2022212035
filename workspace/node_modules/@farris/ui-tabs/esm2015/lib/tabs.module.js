/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';
import { NgbDropdownModule } from './dropdown/dropdown.module';
import { NgbTooltipModule } from './tooltip/tooltip.module';
import { LocaleModule } from '@farris/ui-locale';
import { FarrisTabsComponent } from './tabs/tabs.component';
import { TabConfig, TabService } from './tabs.config';
import { FarrisTabComponent } from './tab/tab.component';
import { TabTranscludeDirective } from './tab/tab.transclude.directive';
import { TabHeadDirective } from './tab/tab.headtemplate.directive';
import { TabHostDirective } from './tab/tabhost.directive';
import { FarrisTabsExtendDirective } from './tab/extend.directive';
export class FarrisTabsModule {
    /**
     * @param {?=} config
     * @return {?}
     */
    static forRoot(config) {
        return {
            ngModule: FarrisTabsModule,
            providers: [{ provide: TabConfig, useValue: config }]
        };
    }
}
FarrisTabsModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    LocaleModule,
                    FormsModule,
                    NgbDropdownModule.forRoot(),
                    NgbTooltipModule.forRoot(),
                    FDropdownDirectiveTypeModule
                ],
                declarations: [FarrisTabsComponent, FarrisTabComponent,
                    TabTranscludeDirective, TabHeadDirective, FarrisTabsExtendDirective, TabHostDirective],
                exports: [
                    FarrisTabsComponent,
                    FarrisTabComponent,
                    TabTranscludeDirective,
                    TabHeadDirective,
                    TabHostDirective,
                    FarrisTabsExtendDirective,
                    NgbDropdownModule,
                    NgbTooltipModule
                ],
                providers: [TabService]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLXRhYnMvIiwic291cmNlcyI6WyJsaWIvdGFicy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFDLDRCQUE0QixFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDakUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDNUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzVELE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzNELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBeUJuRSxNQUFNLE9BQU8sZ0JBQWdCOzs7OztJQUN6QixNQUFNLENBQUMsT0FBTyxDQUFDLE1BQWtCO1FBQzdCLE9BQU87WUFDSCxRQUFRLEVBQUUsZ0JBQWdCO1lBQzFCLFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLENBQUM7U0FDeEQsQ0FBQztJQUNOLENBQUM7OztZQTdCSixRQUFRLFNBQUM7Z0JBQ04sT0FBTyxFQUFFO29CQUNMLFlBQVk7b0JBQ1osWUFBWTtvQkFDWixXQUFXO29CQUNYLGlCQUFpQixDQUFDLE9BQU8sRUFBRTtvQkFDM0IsZ0JBQWdCLENBQUMsT0FBTyxFQUFFO29CQUMxQiw0QkFBNEI7aUJBQy9CO2dCQUNELFlBQVksRUFBRSxDQUFDLG1CQUFtQixFQUFFLGtCQUFrQjtvQkFDbEQsc0JBQXNCLEVBQUUsZ0JBQWdCLEVBQUUseUJBQXlCLEVBQUUsZ0JBQWdCLENBQUM7Z0JBQzFGLE9BQU8sRUFBRTtvQkFDTCxtQkFBbUI7b0JBQ25CLGtCQUFrQjtvQkFDbEIsc0JBQXNCO29CQUN0QixnQkFBZ0I7b0JBQ2hCLGdCQUFnQjtvQkFDaEIseUJBQXlCO29CQUN6QixpQkFBaUI7b0JBQ2pCLGdCQUFnQjtpQkFDbkI7Z0JBQ0QsU0FBUyxFQUFFLENBQUMsVUFBVSxDQUFDO2FBQzFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7RkRyb3Bkb3duRGlyZWN0aXZlVHlwZU1vZHVsZX0gZnJvbSAnQGZhcnJpcy91aS1kcm9wZG93bic7XHJcbmltcG9ydCB7IE5nYkRyb3Bkb3duTW9kdWxlIH0gZnJvbSAnLi9kcm9wZG93bi9kcm9wZG93bi5tb2R1bGUnO1xyXG5pbXBvcnQgeyBOZ2JUb29sdGlwTW9kdWxlIH0gZnJvbSAnLi90b29sdGlwL3Rvb2x0aXAubW9kdWxlJztcclxuaW1wb3J0IHsgTG9jYWxlTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2NhbGUnO1xyXG5pbXBvcnQgeyBGYXJyaXNUYWJzQ29tcG9uZW50IH0gZnJvbSAnLi90YWJzL3RhYnMuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVGFiQ29uZmlnLCBUYWJTZXJ2aWNlIH0gZnJvbSAnLi90YWJzLmNvbmZpZyc7XHJcbmltcG9ydCB7IEZhcnJpc1RhYkNvbXBvbmVudCB9IGZyb20gJy4vdGFiL3RhYi5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBUYWJUcmFuc2NsdWRlRGlyZWN0aXZlIH0gZnJvbSAnLi90YWIvdGFiLnRyYW5zY2x1ZGUuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgVGFiSGVhZERpcmVjdGl2ZSB9IGZyb20gJy4vdGFiL3RhYi5oZWFkdGVtcGxhdGUuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgVGFiSG9zdERpcmVjdGl2ZSB9IGZyb20gJy4vdGFiL3RhYmhvc3QuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgRmFycmlzVGFic0V4dGVuZERpcmVjdGl2ZSB9IGZyb20gJy4vdGFiL2V4dGVuZC5kaXJlY3RpdmUnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICAgIGltcG9ydHM6IFtcclxuICAgICAgICBDb21tb25Nb2R1bGUsXHJcbiAgICAgICAgTG9jYWxlTW9kdWxlLFxyXG4gICAgICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgICAgIE5nYkRyb3Bkb3duTW9kdWxlLmZvclJvb3QoKSxcclxuICAgICAgICBOZ2JUb29sdGlwTW9kdWxlLmZvclJvb3QoKSxcclxuICAgICAgICBGRHJvcGRvd25EaXJlY3RpdmVUeXBlTW9kdWxlXHJcbiAgICBdLFxyXG4gICAgZGVjbGFyYXRpb25zOiBbRmFycmlzVGFic0NvbXBvbmVudCwgRmFycmlzVGFiQ29tcG9uZW50LFxyXG4gICAgICAgIFRhYlRyYW5zY2x1ZGVEaXJlY3RpdmUsIFRhYkhlYWREaXJlY3RpdmUsIEZhcnJpc1RhYnNFeHRlbmREaXJlY3RpdmUsIFRhYkhvc3REaXJlY3RpdmVdLFxyXG4gICAgZXhwb3J0czogW1xyXG4gICAgICAgIEZhcnJpc1RhYnNDb21wb25lbnQsXHJcbiAgICAgICAgRmFycmlzVGFiQ29tcG9uZW50LFxyXG4gICAgICAgIFRhYlRyYW5zY2x1ZGVEaXJlY3RpdmUsXHJcbiAgICAgICAgVGFiSGVhZERpcmVjdGl2ZSxcclxuICAgICAgICBUYWJIb3N0RGlyZWN0aXZlLFxyXG4gICAgICAgIEZhcnJpc1RhYnNFeHRlbmREaXJlY3RpdmUsXHJcbiAgICAgICAgTmdiRHJvcGRvd25Nb2R1bGUsXHJcbiAgICAgICAgTmdiVG9vbHRpcE1vZHVsZVxyXG4gICAgXSxcclxuICAgIHByb3ZpZGVyczogW1RhYlNlcnZpY2VdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGYXJyaXNUYWJzTW9kdWxlIHtcclxuICAgIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IFRhYkNvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG5nTW9kdWxlOiBGYXJyaXNUYWJzTW9kdWxlLFxyXG4gICAgICAgICAgICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFRhYkNvbmZpZywgdXNlVmFsdWU6IGNvbmZpZyB9XVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn1cclxuIl19