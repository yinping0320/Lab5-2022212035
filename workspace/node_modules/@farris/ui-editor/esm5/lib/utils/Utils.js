/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { validEvents } from '../Events';
/** @type {?} */
var bindHandlers = (/**
 * @param {?} ctx
 * @param {?} editor
 * @return {?}
 */
function (ctx, editor) {
    validEvents.forEach((/**
     * @param {?} eventName
     * @return {?}
     */
    function (eventName) {
        /** @type {?} */
        var eventEmitter = ctx[eventName];
        editor.on(eventName.substring(2), (/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return ctx.ngZone.run((/**
         * @return {?}
         */
        function () { return eventEmitter.emit({ event: event, editor: editor }); })); }));
    }));
});
var ɵ0 = bindHandlers;
/** @type {?} */
var unique = 0;
/** @type {?} */
var uuid = (/**
 * @param {?} prefix
 * @return {?}
 */
function (prefix) {
    /** @type {?} */
    var date = new Date();
    /** @type {?} */
    var time = date.getTime();
    /** @type {?} */
    var random = Math.floor(Math.random() * 1000000000);
    unique++;
    return prefix + '_' + random + unique + String(time);
});
var ɵ1 = uuid;
/** @type {?} */
var isTextarea = (/**
 * @param {?=} element
 * @return {?}
 */
function (element) {
    return typeof element !== 'undefined' && element.tagName.toLowerCase() === 'textarea';
});
var ɵ2 = isTextarea;
/** @type {?} */
var normalizePluginArray = (/**
 * @param {?=} plugins
 * @return {?}
 */
function (plugins) {
    if (typeof plugins === 'undefined' || plugins === '') {
        return [];
    }
    return Array.isArray(plugins) ? plugins : plugins.split(' ');
});
var ɵ3 = normalizePluginArray;
/** @type {?} */
var mergePlugins = (/**
 * @param {?} initPlugins
 * @param {?=} inputPlugins
 * @return {?}
 */
function (initPlugins, inputPlugins) {
    return normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));
});
var ɵ4 = mergePlugins;
// tslint:disable-next-line:no-empty
/** @type {?} */
var noop = (/**
 * @return {?}
 */
function () { });
var ɵ5 = noop;
/** @type {?} */
var isNullOrUndefined = (/**
 * @param {?} value
 * @return {?}
 */
function (value) { return value === null || value === undefined; });
var ɵ6 = isNullOrUndefined;
export { bindHandlers, uuid, isTextarea, normalizePluginArray, mergePlugins, noop, isNullOrUndefined };
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXRpbHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi91dGlscy9VdGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFdBQVcsQ0FBQzs7SUFFbEMsWUFBWTs7Ozs7QUFBRyxVQUFDLEdBQW9CLEVBQUUsTUFBVztJQUNyRCxXQUFXLENBQUMsT0FBTzs7OztJQUFDLFVBQUMsU0FBUzs7WUFDdEIsWUFBWSxHQUFzQixHQUFHLENBQUMsU0FBUyxDQUFDO1FBQ3RELE1BQU0sQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7Ozs7UUFBRSxVQUFDLEtBQVUsSUFBSyxPQUFBLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRzs7O1FBQUMsY0FBTSxPQUFBLFlBQVksQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLE9BQUEsRUFBRSxNQUFNLFFBQUEsRUFBRSxDQUFDLEVBQXBDLENBQW9DLEVBQUMsRUFBMUQsQ0FBMEQsRUFBQyxDQUFDO0lBQ2hILENBQUMsRUFBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFBOzs7SUFFRyxNQUFNLEdBQUcsQ0FBQzs7SUFFUixJQUFJOzs7O0FBQUcsVUFBQyxNQUFjOztRQUNwQixJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUU7O1FBQ2pCLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFOztRQUNyQixNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsVUFBVSxDQUFDO0lBRXJELE1BQU0sRUFBRSxDQUFDO0lBRVQsT0FBTyxNQUFNLEdBQUcsR0FBRyxHQUFHLE1BQU0sR0FBRyxNQUFNLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3ZELENBQUMsQ0FBQTs7O0lBRUssVUFBVTs7OztBQUFHLFVBQUMsT0FBaUI7SUFDbkMsT0FBTyxPQUFPLE9BQU8sS0FBSyxXQUFXLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsS0FBSyxVQUFVLENBQUM7QUFDeEYsQ0FBQyxDQUFBOzs7SUFFSyxvQkFBb0I7Ozs7QUFBRyxVQUFDLE9BQTJCO0lBQ3ZELElBQUksT0FBTyxPQUFPLEtBQUssV0FBVyxJQUFJLE9BQU8sS0FBSyxFQUFFLEVBQUU7UUFDcEQsT0FBTyxFQUFFLENBQUM7S0FDWDtJQUVELE9BQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQy9ELENBQUMsQ0FBQTs7O0lBRUssWUFBWTs7Ozs7QUFBRyxVQUFDLFdBQThCLEVBQUUsWUFBZ0M7SUFDcEYsT0FBQSxvQkFBb0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxNQUFNLENBQUMsb0JBQW9CLENBQUMsWUFBWSxDQUFDLENBQUM7QUFBNUUsQ0FBNEUsQ0FBQTs7OztJQUd4RSxJQUFJOzs7QUFBNkIsY0FBUSxDQUFDLENBQUE7OztJQUUxQyxpQkFBaUI7Ozs7QUFBRyxVQUFDLEtBQVUsSUFBZ0MsT0FBQSxLQUFLLEtBQUssSUFBSSxJQUFJLEtBQUssS0FBSyxTQUFTLEVBQXJDLENBQXFDLENBQUE7O0FBRTFHLE9BQU8sRUFDTCxZQUFZLEVBQ1osSUFBSSxFQUNKLFVBQVUsRUFDVixvQkFBb0IsRUFDcEIsWUFBWSxFQUNaLElBQUksRUFDSixpQkFBaUIsRUFDbEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBFZGl0b3JDb21wb25lbnQgfSBmcm9tICcuLi9lZGl0b3IuY29tcG9uZW50JztcclxuaW1wb3J0IHsgdmFsaWRFdmVudHMgfSBmcm9tICcuLi9FdmVudHMnO1xyXG5cclxuY29uc3QgYmluZEhhbmRsZXJzID0gKGN0eDogRWRpdG9yQ29tcG9uZW50LCBlZGl0b3I6IGFueSk6IHZvaWQgPT4ge1xyXG4gIHZhbGlkRXZlbnRzLmZvckVhY2goKGV2ZW50TmFtZSkgPT4ge1xyXG4gICAgY29uc3QgZXZlbnRFbWl0dGVyOiBFdmVudEVtaXR0ZXI8YW55PiA9IGN0eFtldmVudE5hbWVdO1xyXG4gICAgZWRpdG9yLm9uKGV2ZW50TmFtZS5zdWJzdHJpbmcoMiksIChldmVudDogYW55KSA9PiBjdHgubmdab25lLnJ1bigoKSA9PiBldmVudEVtaXR0ZXIuZW1pdCh7IGV2ZW50LCBlZGl0b3IgfSkpKTtcclxuICB9KTtcclxufTtcclxuXHJcbmxldCB1bmlxdWUgPSAwO1xyXG5cclxuY29uc3QgdXVpZCA9IChwcmVmaXg6IHN0cmluZyk6IHN0cmluZyA9PiB7XHJcbiAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKCk7XHJcbiAgY29uc3QgdGltZSA9IGRhdGUuZ2V0VGltZSgpO1xyXG4gIGNvbnN0IHJhbmRvbSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDAwMDAwMDApO1xyXG5cclxuICB1bmlxdWUrKztcclxuXHJcbiAgcmV0dXJuIHByZWZpeCArICdfJyArIHJhbmRvbSArIHVuaXF1ZSArIFN0cmluZyh0aW1lKTtcclxufTtcclxuXHJcbmNvbnN0IGlzVGV4dGFyZWEgPSAoZWxlbWVudD86IEVsZW1lbnQpOiBlbGVtZW50IGlzIEhUTUxUZXh0QXJlYUVsZW1lbnQgPT4ge1xyXG4gIHJldHVybiB0eXBlb2YgZWxlbWVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgZWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICd0ZXh0YXJlYSc7XHJcbn07XHJcblxyXG5jb25zdCBub3JtYWxpemVQbHVnaW5BcnJheSA9IChwbHVnaW5zPzogc3RyaW5nIHwgc3RyaW5nW10pOiBzdHJpbmdbXSA9PiB7XHJcbiAgaWYgKHR5cGVvZiBwbHVnaW5zID09PSAndW5kZWZpbmVkJyB8fCBwbHVnaW5zID09PSAnJykge1xyXG4gICAgcmV0dXJuIFtdO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkocGx1Z2lucykgPyBwbHVnaW5zIDogcGx1Z2lucy5zcGxpdCgnICcpO1xyXG59O1xyXG5cclxuY29uc3QgbWVyZ2VQbHVnaW5zID0gKGluaXRQbHVnaW5zOiBzdHJpbmcgfCBzdHJpbmdbXSwgaW5wdXRQbHVnaW5zPzogc3RyaW5nIHwgc3RyaW5nW10pID0+XHJcbiAgbm9ybWFsaXplUGx1Z2luQXJyYXkoaW5pdFBsdWdpbnMpLmNvbmNhdChub3JtYWxpemVQbHVnaW5BcnJheShpbnB1dFBsdWdpbnMpKTtcclxuXHJcbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1lbXB0eVxyXG5jb25zdCBub29wOiAoLi4uYXJnczogYW55W10pID0+IHZvaWQgPSAoKSA9PiB7IH07XHJcblxyXG5jb25zdCBpc051bGxPclVuZGVmaW5lZCA9ICh2YWx1ZTogYW55KTogdmFsdWUgaXMgbnVsbCB8IHVuZGVmaW5lZCA9PiB2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkO1xyXG5cclxuZXhwb3J0IHtcclxuICBiaW5kSGFuZGxlcnMsXHJcbiAgdXVpZCxcclxuICBpc1RleHRhcmVhLFxyXG4gIG5vcm1hbGl6ZVBsdWdpbkFycmF5LFxyXG4gIG1lcmdlUGx1Z2lucyxcclxuICBub29wLFxyXG4gIGlzTnVsbE9yVW5kZWZpbmVkXHJcbn07XHJcbiJdfQ==