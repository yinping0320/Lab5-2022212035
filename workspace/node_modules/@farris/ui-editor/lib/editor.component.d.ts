import { AfterViewInit, ElementRef, NgZone, OnDestroy, InjectionToken, Injector, OnInit, Renderer2 } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { Observable } from 'rxjs';
import { Events } from './Events';
import { EditorService } from './editor.service';
import { RichTextEditorToolbars } from '@farris/ui-common';
export declare const TINYMCE_SCRIPT_SRC: InjectionToken<string>;
export declare class EditorComponent extends Events implements OnInit, AfterViewInit, ControlValueAccessor, OnDestroy {
    private platformId;
    private injector;
    private tinymceScriptSrc?;
    rootClass: string;
    readonly disabledClass: boolean;
    readonly readonlyClass: boolean;
    disabled: any;
    customToolbar: boolean;
    /** 限制上传图片大小, 默认为 false不限制上传图片的大小 */
    limitImageSize: boolean;
    /** 允许上传图片最大字节数，单位 kb  */
    maxImgSize: number;
    readOnly: any;
    readonly editor: any;
    ngZone: NgZone;
    localeIds: {
        'en': string;
        'zh-CHS': string;
        'zh-CHT': string;
    };
    currentLocale: string;
    cloudChannel: string;
    apiKey: string;
    editorId: string;
    initialValue: string | undefined;
    outputFormat: 'html' | 'text' | undefined;
    inline: boolean | undefined;
    tagName: string | undefined;
    plugins: string | undefined;
    toolbar: RichTextEditorToolbars;
    modelEvents: string;
    height: number;
    /**
     * @Deprecated 请使用 maxHeight
     */
    autoresizeMaxHeight: number;
    /** 只读时的最大高度，默认为 800px */
    maxHeight: number;
    minHeight: number;
    autoHeight: boolean;
    showBorder: boolean;
    _fontFamilyList: Array<string>;
    fontFamilyList: any;
    _defaultFontFamily: string;
    defaultFontFamily: any;
    beforeUpload: (fileObj?: {}) => Observable<any>;
    private init;
    private _elementRef;
    private _element;
    private _disabled;
    private _readOnly;
    private _editor;
    private _divElement;
    private onTouchedCallback;
    private onChangeCallback;
    editorService: EditorService;
    _render: Renderer2;
    private router;
    private __WEBPAGEURL__;
    private editorBodyCls;
    private overLayService;
    private localeSer;
    private notifySer;
    private basePath;
    constructor(elementRef: ElementRef, ngZone: NgZone, platformId: Object, injector: Injector, tinymceScriptSrc?: string);
    ngOnInit(): void;
    private editorBlured;
    writeValue(value: string | null): void;
    registerOnChange(fn: (_: any) => void): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    createElement(): void;
    initialise(isfirstInit?: boolean): void;
    refresh(): void;
    setToolbar(toolbar: RichTextEditorToolbars): void;
    private setDivElement;
    private getScriptSrc;
    private initEditor;
    private replaceFontFamily;
    private getFontFamilyArray;
    private trim;
}
