/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter, Renderer2, ElementRef, ViewChild, ViewEncapsulation, HostListener } from '@angular/core';
import { QuerySolutionService } from '@farris/ui-filter-condition';
import { deepCopy } from './utils';
import { IdService } from '@farris/ui-common';
import { cloneDeep } from 'lodash-es';
// 用于显示点击 简单筛选 项的下拉面板
var FilterPanelComponent = /** @class */ (function () {
    function FilterPanelComponent(renderer, elementRef, filterConditionSer) {
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.filterConditionSer = filterConditionSer;
        this._hide = false;
        this.hidePanel = new EventEmitter();
        this.submit = new EventEmitter();
        this.filterSubmit = new EventEmitter();
        this.clearFilter = new EventEmitter();
        this.dataChange = new EventEmitter();
        this.canSubmit = false;
        this.fiexedLeft = true;
        // 全局标识，初始化标识元素没有发生mousemove
        this.hasMove = false;
        this._documentMouseUpEvent = null;
        this.currentItem = null;
        this.zIndex = 1060;
        this.isNil = (/**
         * @param {?} val
         * @return {?}
         */
        function (val) { return val === null || val === undefined || val === ''; });
        this.el = this.elementRef.nativeElement;
    }
    Object.defineProperty(FilterPanelComponent.prototype, "hide", {
        get: /**
         * @return {?}
         */
        function () {
            return this._hide;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._hide = val;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FilterPanelComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var self = this;
        this._documentMouseUpEvent = this.renderer.listen(this.filterPanel.nativeElement, 'mouseup', (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            event.stopPropagation();
            /** @type {?} */
            var tar = event.target;
            if (tar.closest('#mainContainerTabset')) {
                // self.hidePanel.emit(event);
                _this.panelFilterCancel(event);
                return;
            }
            if (_this.hasMove) {
                return;
            }
            if (!tar.closest('.f-filter-panel')
                && !tar.closest('.modal')
                && !tar.closest('.overlay-container') && !tar.closest('.overlay-pane')) {
                // self.hidePanel.emit(event);
                _this.panelFilterCancel(event);
            }
            _this.hasMove = false;
        }));
        if (this.option.item && (this.option.item.control.controltype == 'dropdown' || this.option.item.control.controltype == 'radio')) {
            this.canSubmit = true;
        }
        if (this.injector) {
            this.idService = this.injector.get(IdService);
        }
        this.currentItem = cloneDeep({ value: tslib_1.__assign({}, this.option.item.value), type: this.option.item.control.controltype, id: this.option.item.id });
    };
    /**
     * @return {?}
     */
    FilterPanelComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var _panel = this.el.querySelector('.f-filter-panel');
        if (_panel && this.option.target) {
            /** @type {?} */
            var h = _panel.offsetHeight;
            /** @type {?} */
            var rect = this.option.target.getBoundingClientRect();
            if (window['innerHeight'] - this.option.top < h) {
                if (rect.top > h) {
                    this.option.top = rect.top - h - 14;
                }
                else {
                    this.option.top = 32;
                }
                /** @type {?} */
                var arrow = this.el.querySelector('.f-filter-panel-arrow');
                if (arrow) {
                    arrow.style.display = 'none';
                }
            }
        }
        if (_panel && this.option.right) {
            if (this.option.left + _panel.offsetWidth > window['innerWidth']) {
                // 超出显示在做
                this.fiexedLeft = false;
                this.option.left = this.option.right - _panel.offsetWidth;
            }
            else {
                this.fiexedLeft = true;
            }
        }
    };
    /**
     * @return {?}
     */
    FilterPanelComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this._documentMouseUpEvent) {
            this._documentMouseUpEvent();
            this._documentMouseUpEvent = null;
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    FilterPanelComponent.prototype.onMouseDown = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.hasMove = false;
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    FilterPanelComponent.prototype.onMouseMove = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.hasMove = true;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FilterPanelComponent.prototype.onSearch = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.option.item.control.controltype == 'radio') {
            this.panelFilterSubmit();
        }
        else if (this.option.item.control.controltype == 'text' && event['type'] && event['type'] === 'enter') {
            this.panelFilterSubmit();
        }
        // this.filterItem = event;
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    FilterPanelComponent.prototype.panelFilterCancel = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        // $event._instanceId = this.id;
        this.hidePanel.emit($event);
    };
    /**
     * @param {?=} clear
     * @return {?}
     */
    FilterPanelComponent.prototype.panelFilterSubmit = /**
     * @param {?=} clear
     * @return {?}
     */
    function (clear) {
        if (clear === void 0) { clear = false; }
        if (!clear && !this.canSubmit) {
            return;
        }
        if (this.option.item.control.controltype === 'text') {
            /** @type {?} */
            var farrisSearchRecord = this.option.item.valueText;
            /** @type {?} */
            var farrisSearchRecordArray = [];
            /** @type {?} */
            var storagelabelCode = this.option.item.labelCode;
            /** @type {?} */
            var filterPanelArray = JSON.parse(localStorage.getItem(this.option.localStorageKey));
            if (Array.isArray(filterPanelArray)) {
                filterPanelArray = null;
            }
            if (!filterPanelArray || !filterPanelArray[storagelabelCode] || !filterPanelArray[storagelabelCode].length
                && farrisSearchRecord && farrisSearchRecord.length) {
                farrisSearchRecordArray.push(farrisSearchRecord);
            }
            else {
                farrisSearchRecordArray = filterPanelArray[storagelabelCode];
                /** @type {?} */
                var index = filterPanelArray[storagelabelCode].indexOf(farrisSearchRecord);
                if (index < 0 && farrisSearchRecord && farrisSearchRecord.length) {
                    farrisSearchRecordArray.unshift(farrisSearchRecord);
                }
                farrisSearchRecordArray = farrisSearchRecordArray.slice(0, 6);
            }
            if (filterPanelArray == null) {
                filterPanelArray = {};
            }
            filterPanelArray[storagelabelCode] = farrisSearchRecordArray;
            localStorage.setItem(this.option.localStorageKey, JSON.stringify(filterPanelArray));
        }
        /** @type {?} */
        var conditions = this.filterConditionSer.setFilterConditions(this.option.item);
        if (!clear) {
            this.filterSubmit.emit({
                item: this.option.item,
                filter: conditions
            });
        }
        this.submit.emit(this.option.item);
    };
    /**
     * @return {?}
     */
    FilterPanelComponent.prototype.panelFilterClear = /**
     * @return {?}
     */
    function () {
        this.panelFilterempty();
        this.panelFilterSubmit(true);
        this.clearFilter.emit(this.option.item);
    };
    /**
     * @return {?}
     */
    FilterPanelComponent.prototype.panelFilterempty = /**
     * @return {?}
     */
    function () {
        this.filterClearValue(this.option.item);
        this.option.item.valueText = '';
        this.option.item.filled = false;
        this.option.item = deepCopy(this.option.item);
        this.canSubmit = false;
    };
    /**
     * @param {?} item
     * @return {?}
     */
    FilterPanelComponent.prototype.filterClearValue = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        switch (item.control.controltype) {
            case 'text':
            case 'search':
            case 'singleDate':
            case 'year':
            case 'month':
            case 'dropdown':
            case 'singlenumber':
            case 'radio':
                item.value.value = null;
                break;
            case 'date':
            case 'datetime':
            case 'monthRange':
            case 'yearRange':
                item.value.startTime = null;
                item.value.endTime = null;
                break;
            case 'number':
                item.value.startValue = null;
                item.value.endValue = null;
                break;
            case 'help':
                item.value.value = [];
                item.value.valueField = null;
                item.value.textValue = null;
                break;
            case 'checkboxgroup':
            case 'bool-check':
                item.value.value = [];
                break;
            case 'input-group':
                item.value.value = [];
                item.value.textValue = null;
                item.value.textField = null;
                item.value.isInputText = null;
                break;
            case 'flexibleNumber':
            case 'flexibleDate':
                item.value.startValue = null;
                item.value.endValue = null;
                item.value.value = null;
                break;
            default:
                item.value.value = null;
                break;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FilterPanelComponent.prototype.onSubmitChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.canSubmit = event;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    FilterPanelComponent.prototype.buildSmartHelpKey = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (this.idService) {
            /** @type {?} */
            var prefix = '';
            if (location.hash) {
                /** @type {?} */
                var pathArr = location.hash.split('?');
                prefix = pathArr ? pathArr[0] : '';
            }
            else {
                /** @type {?} */
                var pathArr = location.pathname.split('/');
                prefix = pathArr ? pathArr[pathArr.length - 1] : '';
            }
            return this.idService.encrypt(prefix + '/list-filter/' + value);
        }
        else {
            return 'list-filter/' + value;
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    FilterPanelComponent.prototype.updateCurrentItem = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.currentItem = cloneDeep({ value: tslib_1.__assign({}, $event.value), type: $event.control.controltype, id: $event.id });
        this.dataChange.emit(this.currentItem);
    };
    /**
     * @return {?}
     */
    FilterPanelComponent.prototype.canClearSearch = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var item = this.currentItem;
        if (!item) {
            return true;
        }
        switch (item.type) {
            case 'text':
            case 'search':
            case 'singleDate':
            case 'year':
            case 'month':
            case 'dropdown':
            case 'singlenumber':
            case 'radio':
                return !this.isNil(item.value.value);
            case 'date':
            case 'datetime':
            case 'monthRange':
            case 'yearRange':
                return !this.isNil(item.value.startTime) || !this.isNil(item.value.endTime);
            case 'help':
            case 'checkboxgroup':
            case 'bool-check':
                return item.value.value && item.value.value.length;
            case 'input-group':
                return (item.value.value && item.value.value.length) || item.value.textValue;
            case 'number':
            case 'flexibleNumber':
            case 'flexibleDate':
                if (item.value.single) {
                    return !this.isNil(item.value.value);
                }
                return !this.isNil(item.value.startValue) || !this.isNil(item.value.endValue);
            default:
                return !this.isNil(item.value.value);
        }
    };
    FilterPanelComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-filter-panel',
                    template: "<div class=\"f-filter-panel-wrapper\" #filterPanel [ngClass]=\"{'d-none': hide}\" [style.zIndex]=\"zIndex\">\r\n    <div  [class]=\"'f-filter-panel f-filter-panel-'+(option.item && option.item.control.controltype)\"\r\n        [ngStyle]=\"{\r\n            'left': option.left > 0 ? option.left+'px' : '0px',\r\n            'top': option.top > 0 ? option.top+'px' : '0px',\r\n            'width': (option.width && option.width > 0) ? option.width+'px':'',\r\n            'height': (option.height && option.height > 0) ? option.height+'px':'',\r\n            'max-width': (option.maxWidth && option.maxWidth > 0) ? option.maxWidth+'px':'',\r\n            'max-height': (option.maxHeight && option.maxHeight > 0) ? option.maxHeight+'px':''\r\n        }\">\r\n        <div class=\"f-filter-panel-inner\" [ngClass]=\"{'f-filter-panel-inner-xs': option.item && option.item.control.controltype == 'radio','f-filter-panel-inner-auto': !option.item}\">\r\n            <div class=\"f-filter-panel-arrow\" [ngStyle]=\"{'left':fiexedLeft?'26px':'auto','right':fiexedLeft?'auto':'26px'}\"></div>\r\n            <div class=\"f-filter-panel-extend\" *ngIf=\"option.panelExtendTemplate\">\r\n                <ng-container [ngTemplateOutlet]=\"option.panelExtendTemplate\"></ng-container>\r\n            </div>\r\n            <div class=\"f-filter-panel-header\" *ngIf=\"option.showLable && option.item && option.item.control.controltype != 'radio'\">\r\n                <div class=\"panel-header-title\">\r\n                    {{ 'filterPanel.filter' | locale }}\r\n                </div>\r\n                <!-- <div class=\"panel-header-toolbar\"></div> -->\r\n            </div>\r\n            <div class=\"f-filter-panel-content\" *ngIf=\"option.item\">\r\n                <div class=\"f-filter-panel-form\">\r\n                    <ng-container [ngSwitch]=\"option.item.control.controltype\">\r\n                        <div class=\"filter-input-item filter-type-input position-relative\" *ngSwitchCase=\"'text'\">\r\n                            <panel-filter-input [item]=\"option.item\" [localStorageKey]=\"option.localStorageKey\"\r\n                                (searchHandle)=\"onSearch($event)\" (submitChange)=\"onSubmitChange($event)\" class=\"form-group farris-form-group\"></panel-filter-input>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-search\" *ngSwitchCase=\"'search'\">\r\n                            <panel-filter-search [item]=\"option.item\"\r\n                                (searchHandle)=\"onSearch($event)\" (submitChange)=\"onSubmitChange($event)\" class=\"form-group farris-form-group\"></panel-filter-search>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-date\" *ngSwitchCase=\"'singleDate'\">\r\n                            <panel-filter-date [item]=\"option.item\"\r\n                                (searchHandle)=\"onSearch($event)\" (submitChange)=\"onSubmitChange($event)\" class=\"form-group farris-form-group\"></panel-filter-date>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-date\" *ngSwitchCase=\"'year'\">\r\n                            <panel-filter-date [item]=\"option.item\"\r\n                                (searchHandle)=\"onSearch($event)\" class=\"form-group farris-form-group\" [showType]=\"'3'\" (submitChange)=\"onSubmitChange($event)\"></panel-filter-date>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-date\" *ngSwitchCase=\"'month'\">\r\n                            <panel-filter-date [item]=\"option.item\"\r\n                                (searchHandle)=\"onSearch($event)\" class=\"form-group farris-form-group\" [showType]=\"'2'\" (submitChange)=\"onSubmitChange($event)\"></panel-filter-date>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-date\" *ngSwitchCase=\"'date'\">\r\n                            <panel-filter-daterange [item]=\"option.item\"\r\n                                (searchHandle)=\"onSearch($event)\" class=\"form-group farris-form-group\" (submitChange)=\"onSubmitChange($event)\"></panel-filter-daterange>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-date\" *ngSwitchCase=\"'datetime'\">\r\n                            <panel-filter-daterange [item]=\"option.item\" [showTime]=\"true\"\r\n                                (searchHandle)=\"onSearch($event)\" class=\"form-group farris-form-group\" (submitChange)=\"onSubmitChange($event)\"></panel-filter-daterange>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-date\" *ngSwitchCase=\"'monthRange'\">\r\n                            <panel-filter-daterange [item]=\"option.item\"\r\n                                (searchHandle)=\"onSearch($event)\" class=\"form-group farris-form-group\" [showType]=\"'2'\" (submitChange)=\"onSubmitChange($event)\"></panel-filter-daterange>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-date\" *ngSwitchCase=\"'yearRange'\">\r\n                            <panel-filter-daterange [item]=\"option.item\"\r\n                                (searchHandle)=\"onSearch($event)\" class=\"form-group farris-form-group\" [showType]=\"'3'\" (submitChange)=\"onSubmitChange($event)\"></panel-filter-daterange>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-dropdown\" *ngSwitchCase=\"'dropdown'\">\r\n                            <panel-filter-dropdown [item]=\"option.item\"\r\n                                (searchHandle)=\"onSearch($event)\" class=\"form-group farris-form-group\"  (submitChange)=\"onSubmitChange($event)\"></panel-filter-dropdown>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-number\" *ngSwitchCase=\"'number'\">\r\n                            <panel-filter-number [item]=\"option.item\"\r\n                                (searchHandle)=\"onSearch($event)\" class=\"form-group farris-form-group\" (submitChange)=\"onSubmitChange($event)\"></panel-filter-number>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-single-number\" *ngSwitchCase=\"'singlenumber'\">\r\n                            <panel-filter-single-number [item]=\"option.item\"\r\n                                (searchHandle)=\"onSearch($event)\" class=\"form-group farris-form-group\" (submitChange)=\"onSubmitChange($event)\"></panel-filter-single-number>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-help\" *ngSwitchCase=\"'help'\">\r\n                            <panel-filter-help [item]=\"option.item\" [instanceId]=\"buildSmartHelpKey(option.item.fieldCode)\"\r\n                                (searchHandle)=\"onSearch($event)\" class=\"form-group farris-form-group\" (submitChange)=\"onSubmitChange($event)\"></panel-filter-help>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-checkboxgroup\" [class.checkboxgroup-has-search]=\"option.item.control.enableSearch\" *ngSwitchCase=\"'checkboxgroup'\">\r\n                            <panel-filter-checkbox [item]=\"option.item\"\r\n                                (searchHandle)=\"onSearch($event)\" class=\"form-group farris-form-group\"\r\n                                style=\"white-space: nowrap;\" (submitChange)=\"onSubmitChange($event)\"></panel-filter-checkbox>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-radio\" *ngSwitchCase=\"'radio'\">\r\n                            <panel-filter-radio [item]=\"option.item\"\r\n                                (searchHandle)=\"onSearch($event)\" class=\"form-group farris-form-group\"\r\n                                style=\"white-space: nowrap;\"></panel-filter-radio>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-radio\" *ngSwitchCase=\"'input-group'\">\r\n                            <panel-filter-inputgroup [item]=\"option.item\"\r\n                                (searchHandle)=\"onSearch($event)\" class=\"form-group farris-form-group\"\r\n                                style=\"white-space: nowrap;\"  (submitChange)=\"onSubmitChange($event)\"></panel-filter-inputgroup>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-flexiblenumber\" *ngSwitchCase=\"'flexibleNumber'\">\r\n                            <panel-filter-flexiblenumber [item]=\"option.item\" (itemChange)=\"updateCurrentItem($event)\"\r\n                                (searchHandle)=\"onSearch($event)\" class=\"form-group farris-form-group\"\r\n                                style=\"white-space: nowrap;\" (submitChange)=\"onSubmitChange($event)\"></panel-filter-flexiblenumber>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-flexibledate\" *ngSwitchCase=\"'flexibleDate'\">\r\n                            <panel-filter-flexibledate [item]=\"option.item\"  (itemChange)=\"updateCurrentItem($event)\"\r\n                                (searchHandle)=\"onSearch($event)\" class=\"form-group farris-form-group\"\r\n                                style=\"white-space: nowrap;\" (submitChange)=\"onSubmitChange($event)\"></panel-filter-flexibledate>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-boolcheck\" *ngSwitchCase=\"'bool-check'\">\r\n                            <panel-filter-checkbox [item]=\"option.item\" [boolcheck]=\"true\"\r\n                                (searchHandle)=\"onSearch($event)\" class=\"form-group farris-form-group\"\r\n                                style=\"white-space: nowrap;\" (submitChange)=\"onSubmitChange($event)\"></panel-filter-checkbox>\r\n                        </div>\r\n                        <div class=\"filter-input-item filter-type-default\" *ngSwitchDefault>\r\n                            <panel-filter-input [item]=\"option.item\" [localStorageKey]=\"option.localStorageKey\"\r\n                                (searchHandle)=\"onSearch($event)\" (submitChange)=\"onSubmitChange($event)\" class=\"form-group farris-form-group\"></panel-filter-input>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"f-filter-panel-footer\" *ngIf=\"option.item && option.item.control.controltype != 'radio'\">\r\n                <div class=\"filer-panel-clear\">\r\n                    <button class=\"btn btn-link\" (click)=\"panelFilterClear()\"  [disabled]=\"!canClearSearch()\">{{ 'filterPanel.reset' | locale }}</button>\r\n                    <!-- tfs 549371 2023-03-24 -->\r\n                    <!-- <button class=\"btn btn-link btn-empty\" (click)=\"panelFilterempty()\">{{ 'filterPanel.empty' | locale }}</button> -->\r\n                </div>\r\n                <div class=\"filter-panel-btns\">\r\n                    <button class=\"btn btn-secondary\" (click)=\"panelFilterCancel($event)\">{{ 'filterPanel.cancel' | locale }}</button>\r\n                    <button class=\"filter-panel-submit btn btn-primary\" (click)=\"panelFilterSubmit()\" [disabled]=\"!canSubmit\">{{ 'filterPanel.confirm' | locale }}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>",
                    encapsulation: ViewEncapsulation.None,
                    styles: [".filter-type-checkboxgroup.checkboxgroup-has-search{padding-top:0;position:relative;}"]
                }] }
    ];
    /** @nocollapse */
    FilterPanelComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: ElementRef },
        { type: QuerySolutionService }
    ]; };
    FilterPanelComponent.propDecorators = {
        option: [{ type: Input }],
        hide: [{ type: Input }],
        hidePanel: [{ type: Output }],
        submit: [{ type: Output }],
        filterSubmit: [{ type: Output }],
        clearFilter: [{ type: Output }],
        dataChange: [{ type: Output }],
        filterPanel: [{ type: ViewChild, args: ['filterPanel',] }],
        onMouseDown: [{ type: HostListener, args: ['mousedown', ['$event'],] }],
        onMouseMove: [{ type: HostListener, args: ['mousemove', ['$event'],] }]
    };
    return FilterPanelComponent;
}());
export { FilterPanelComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FilterPanelComponent.prototype.el;
    /** @type {?} */
    FilterPanelComponent.prototype.option;
    /** @type {?} */
    FilterPanelComponent.prototype._hide;
    /** @type {?} */
    FilterPanelComponent.prototype.hidePanel;
    /** @type {?} */
    FilterPanelComponent.prototype.submit;
    /** @type {?} */
    FilterPanelComponent.prototype.filterSubmit;
    /** @type {?} */
    FilterPanelComponent.prototype.clearFilter;
    /** @type {?} */
    FilterPanelComponent.prototype.dataChange;
    /** @type {?} */
    FilterPanelComponent.prototype.filterPanel;
    /** @type {?} */
    FilterPanelComponent.prototype.canSubmit;
    /** @type {?} */
    FilterPanelComponent.prototype.fiexedLeft;
    /**
     * @type {?}
     * @private
     */
    FilterPanelComponent.prototype.hasMove;
    /**
     * @type {?}
     * @private
     */
    FilterPanelComponent.prototype._documentMouseUpEvent;
    /** @type {?} */
    FilterPanelComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    FilterPanelComponent.prototype.idService;
    /**
     * @type {?}
     * @private
     */
    FilterPanelComponent.prototype.currentItem;
    /** @type {?} */
    FilterPanelComponent.prototype.zIndex;
    /**
     * @type {?}
     * @private
     */
    FilterPanelComponent.prototype.isNil;
    /**
     * @type {?}
     * @private
     */
    FilterPanelComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    FilterPanelComponent.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    FilterPanelComponent.prototype.filterConditionSer;
}
//# sourceMappingURL=data:application/json;base64,