/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
var FilterSafePipe = /** @class */ (function () {
    function FilterSafePipe(_sanitizer) {
        this._sanitizer = _sanitizer;
    }
    /**
     * @param {?} value
     * @param {?} type
     * @return {?}
     */
    FilterSafePipe.prototype.transform = /**
     * @param {?} value
     * @param {?} type
     * @return {?}
     */
    function (value, type) {
        switch (type) {
            // 这条语句就是我们今天主要用到的
            case 'html': return this._sanitizer.bypassSecurityTrustHtml(value);
            // 接下来的这些是DomSanitizer提供的其他一些安全的转换
            case 'style': return this._sanitizer.bypassSecurityTrustStyle(value);
            case 'script': return this._sanitizer.bypassSecurityTrustScript(value);
            case 'url': return this._sanitizer.bypassSecurityTrustUrl(value);
            case 'resourceUrl': return this._sanitizer.bypassSecurityTrustResourceUrl(value);
            default: throw new Error("Invalid safe type specified: " + type);
        }
    };
    FilterSafePipe.decorators = [
        { type: Pipe, args: [{
                    name: 'filterSafe',
                },] }
    ];
    /** @nocollapse */
    FilterSafePipe.ctorParameters = function () { return [
        { type: DomSanitizer }
    ]; };
    return FilterSafePipe;
}());
export { FilterSafePipe };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FilterSafePipe.prototype._sanitizer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FmZS5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1maWx0ZXItcGFuZWwvIiwic291cmNlcyI6WyJsaWIvc2FmZS5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEVBQUUsWUFBWSxFQUE2RCxNQUFNLDJCQUEyQixDQUFDO0FBRXBIO0lBTUMsd0JBQW9CLFVBQXdCO1FBQXhCLGVBQVUsR0FBVixVQUFVLENBQWM7SUFFN0MsQ0FBQzs7Ozs7O0lBQ08sa0NBQVM7Ozs7O0lBQWhCLFVBQWlCLEtBQVUsRUFBRSxJQUFZO1FBQ3ZDLFFBQVEsSUFBSSxFQUFFO1lBQ2Isa0JBQWtCO1lBQ2xCLEtBQUssTUFBTSxDQUFDLENBQUMsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLHVCQUF1QixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBRW5FLGtDQUFrQztZQUNsQyxLQUFLLE9BQU8sQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyx3QkFBd0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNyRSxLQUFLLFFBQVEsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyx5QkFBeUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN2RSxLQUFLLEtBQUssQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNqRSxLQUFLLGFBQWEsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyw4QkFBOEIsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNqRixPQUFPLENBQUMsQ0FBQyxNQUFNLElBQUksS0FBSyxDQUFDLGtDQUFnQyxJQUFNLENBQUMsQ0FBQztTQUNsRTtJQUNILENBQUM7O2dCQXJCQSxJQUFJLFNBQUM7b0JBQ0osSUFBSSxFQUFFLFlBQVk7aUJBQ25COzs7O2dCQUpRLFlBQVk7O0lBd0JyQixxQkFBQztDQUFBLEFBdEJELElBc0JDO1NBbEJZLGNBQWM7Ozs7OztJQUVkLG9DQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRG9tU2FuaXRpemVyLCBTYWZlSHRtbCwgU2FmZVN0eWxlLCBTYWZlU2NyaXB0LCBTYWZlUmVzb3VyY2VVcmwsIFNhZmVVcmwgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnZmlsdGVyU2FmZScsXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgRmlsdGVyU2FmZVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuXHJcbiBjb25zdHJ1Y3Rvcihwcml2YXRlIF9zYW5pdGl6ZXI6IERvbVNhbml0aXplcikge1xyXG5cclxufVxyXG4gcHVibGljIHRyYW5zZm9ybSh2YWx1ZTogYW55LCB0eXBlOiBzdHJpbmcpOiBTYWZlSHRtbCB8IFNhZmVTdHlsZSB8IFNhZmVTY3JpcHQgfCBTYWZlUmVzb3VyY2VVcmwgfCBTYWZlVXJsIHtcclxuICAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICAvLyDov5nmnaHor63lj6XlsLHmmK/miJHku6zku4rlpKnkuLvopoHnlKjliLDnmoRcclxuICAgIGNhc2UgJ2h0bWwnOiByZXR1cm4gdGhpcy5fc2FuaXRpemVyLmJ5cGFzc1NlY3VyaXR5VHJ1c3RIdG1sKHZhbHVlKTsgXHJcbiAgXHJcbiAgICAvLyDmjqXkuIvmnaXnmoTov5nkupvmmK9Eb21TYW5pdGl6ZXLmj5DkvpvnmoTlhbbku5bkuIDkupvlronlhajnmoTovazmjaJcclxuICAgIGNhc2UgJ3N0eWxlJzogcmV0dXJuIHRoaXMuX3Nhbml0aXplci5ieXBhc3NTZWN1cml0eVRydXN0U3R5bGUodmFsdWUpO1xyXG4gICAgY2FzZSAnc2NyaXB0JzogcmV0dXJuIHRoaXMuX3Nhbml0aXplci5ieXBhc3NTZWN1cml0eVRydXN0U2NyaXB0KHZhbHVlKTtcclxuICAgIGNhc2UgJ3VybCc6IHJldHVybiB0aGlzLl9zYW5pdGl6ZXIuYnlwYXNzU2VjdXJpdHlUcnVzdFVybCh2YWx1ZSk7XHJcbiAgICBjYXNlICdyZXNvdXJjZVVybCc6IHJldHVybiB0aGlzLl9zYW5pdGl6ZXIuYnlwYXNzU2VjdXJpdHlUcnVzdFJlc291cmNlVXJsKHZhbHVlKTtcclxuICAgIGRlZmF1bHQ6IHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBzYWZlIHR5cGUgc3BlY2lmaWVkOiAke3R5cGV9YCk7XHJcbiAgfVxyXG59XHJcbn0iXX0=