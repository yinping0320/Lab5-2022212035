/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output } from '@angular/core';
export class PanelDropDownComponent {
    constructor() {
        this.searchHandle = new EventEmitter();
        this.submitChange = new EventEmitter();
        this.dropDownListDataSource = new Array();
    }
    /**
     * @return {?}
     */
    get item() {
        return this._item;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    set item(data) {
        this._item = data;
        this.getDataSource();
        if (this._item.placeHolder) {
            this.placeholder = this._item.placeHolder;
        }
        if (!this._item.hasOwnProperty('value')) {
            this._item.value = { value: '' };
        }
        /** @type {?} */
        const initialValue = this._item.value;
        this.selectedItemId = initialValue.value ? initialValue.value : '';
        // console.log(this._item);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    getDataSource() {
        if (this._item && this._item.value
            && this._item.control) {
            /** @type {?} */
            let dropDownList = (this._item.control);
            if (dropDownList.valueType == '2') {
                this.dropDownListDataSource = Array();
                if (dropDownList.enumValues && dropDownList.enumValues.length > 0) {
                    dropDownList.enumValues.forEach((/**
                     * @param {?} element
                     * @return {?}
                     */
                    element => {
                        this.dropDownListDataSource.push(Object.assign({}, element));
                    }));
                }
            }
            else if (dropDownList.valueType == '0') {
                this.dropDownListDataSource = Array();
                if (dropDownList.enumValues && dropDownList.enumValues.length > 0) {
                    dropDownList.enumValues.forEach((/**
                     * @param {?} element
                     * @return {?}
                     */
                    element => {
                        this.dropDownListDataSource.push(Object.assign({}, element));
                    }));
                }
            }
            else if (dropDownList.valueType == '1') {
                this.dropDownListDataSource = Array();
                if (dropDownList.enumValues && dropDownList.enumValues.length > 0) {
                    dropDownList.enumValues.forEach((/**
                     * @param {?} element
                     * @return {?}
                     */
                    element => {
                        this.dropDownListDataSource.push(Object.assign({}, element));
                    }));
                }
            }
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onSearch(event) {
        //console.log(event);
        if (event) {
            (this._item.value).value = event.data.value;
        }
        else {
            (this._item.value).value = '';
        }
        this._item.valueText = this._item.value.value;
        this.searchHandle.emit();
        this.setSubmitChange();
    }
    /**
     * @private
     * @return {?}
     */
    setSubmitChange() {
        /** @type {?} */
        const val = this._item.value;
        if (val == null || val == undefined) {
            this.submitChange.emit(false);
            return;
        }
        if (Object.keys(val).length === 0 || Object.keys(val.value).length === 0) {
            this.submitChange.emit(false);
        }
        else {
            this.submitChange.emit(true);
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onClear(event) {
        this._item.value.value = '';
        this._item.valueText = '';
        this.searchHandle.emit();
        this.submitChange.emit(false);
    }
}
PanelDropDownComponent.decorators = [
    { type: Component, args: [{
                selector: 'panel-filter-dropdown',
                template: "<farris-combo-list\r\n    [idField]=\"'value'\"\r\n    [textField]=\"'name'\"\r\n    [data]=\"dropDownListDataSource\"\r\n    [(ngModel)]=\"selectedItemId\"\r\n    [editable]=\"false\"\r\n    (selectChange)=\"onSearch($event)\"\r\n    (clear)=\"onClear($event)\"\r\n    [placeholder]=\"placeholder\"\r\n></farris-combo-list>"
            }] }
];
/** @nocollapse */
PanelDropDownComponent.ctorParameters = () => [];
PanelDropDownComponent.propDecorators = {
    item: [{ type: Input }],
    searchHandle: [{ type: Output, args: ['searchHandle',] }],
    submitChange: [{ type: Output, args: ['submitChange',] }]
};
if (false) {
    /** @type {?} */
    PanelDropDownComponent.prototype._item;
    /** @type {?} */
    PanelDropDownComponent.prototype.searchHandle;
    /** @type {?} */
    PanelDropDownComponent.prototype.submitChange;
    /** @type {?} */
    PanelDropDownComponent.prototype.dropDownListDataSource;
    /** @type {?} */
    PanelDropDownComponent.prototype.selectedItemId;
    /** @type {?} */
    PanelDropDownComponent.prototype.placeholder;
}
//# sourceMappingURL=data:application/json;base64,