import { OnInit, EventEmitter, Renderer2, ElementRef, OnDestroy, AfterViewInit } from '@angular/core';
import { FilterPanelOption } from './filter-panel.interface';
import { QuerySolutionService } from '@farris/ui-filter-condition';
export declare class FilterPanelComponent implements OnInit, OnDestroy, AfterViewInit {
    private renderer;
    private elementRef;
    private filterConditionSer;
    private el;
    option: FilterPanelOption;
    _hide: boolean;
    hide: any;
    hidePanel: EventEmitter<{}>;
    submit: EventEmitter<{}>;
    filterSubmit: EventEmitter<{}>;
    clearFilter: EventEmitter<{}>;
    dataChange: EventEmitter<{}>;
    filterPanel: ElementRef;
    canSubmit: boolean;
    fiexedLeft: boolean;
    private hasMove;
    private _documentMouseUpEvent;
    injector: any;
    private idService;
    private currentItem;
    zIndex: number;
    constructor(renderer: Renderer2, elementRef: ElementRef, filterConditionSer: QuerySolutionService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    onMouseDown($event: any): void;
    onMouseMove($event: any): void;
    onSearch(event: any): void;
    panelFilterCancel($event: any): void;
    panelFilterSubmit(clear?: boolean): void;
    panelFilterClear(): void;
    panelFilterempty(): void;
    filterClearValue(item: any): void;
    onSubmitChange(event: any): void;
    buildSmartHelpKey(value: string): string;
    updateCurrentItem($event: any): void;
    private isNil;
    canClearSearch(): any;
}
