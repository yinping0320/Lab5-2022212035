/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, HostBinding } from "@angular/core";
import { FormGroup } from "@angular/forms";
export class SingleDateComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.control.control.format = this.control.control.format || 'yyyy-MM-dd';
        this.className = this.control.className ? this.control.className : 'col-12 col-md-6 col-xl-3 col-el-2';
    }
}
SingleDateComponent.decorators = [
    { type: Component, args: [{
                selector: "dynamic-single-date",
                template: `
    <div class="farris-group-wrap" [formGroup]="form">
      <div class="form-group farris-form-group">
        <label class="col-form-label">
          <span *ngIf="0" class="farris-label-info text-danger">*</span>
          <span class="farris-label-text">{{control.name}}</span>
        </label>
        <div class="farris-input-wrap">
          <farris-datepicker [returnFormat]="control.control.format" [formControlName]="control.labelCode" [readonly]="control.control.readonly"></farris-datepicker>
        </div>
      </div>
    </div>
  `
            }] }
];
/** @nocollapse */
SingleDateComponent.ctorParameters = () => [];
SingleDateComponent.propDecorators = {
    className: [{ type: HostBinding, args: ['class',] }],
    control: [{ type: Input }],
    form: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    SingleDateComponent.prototype.className;
    /** @type {?} */
    SingleDateComponent.prototype.control;
    /** @type {?} */
    SingleDateComponent.prototype.form;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLWRhdGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9keW5hbWljLWNvbnRyb2wtZ3JvdXAvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9kYXRlL3NpbmdsZS1kYXRlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQW1CM0MsTUFBTSxPQUFPLG1CQUFtQjtJQU05QixnQkFBZSxDQUFDOzs7O0lBQ2hCLFFBQVE7UUFDTixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxJQUFJLFlBQVksQ0FBQztRQUMxRSxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsbUNBQW1DLENBQUM7SUFDekcsQ0FBQzs7O1lBM0JGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixRQUFRLEVBQUU7Ozs7Ozs7Ozs7OztHQVlUO2FBRUY7Ozs7O3dCQUVFLFdBQVcsU0FBQyxPQUFPO3NCQUNuQixLQUFLO21CQUVMLEtBQUs7Ozs7SUFITix3Q0FBd0M7O0lBQ3hDLHNDQUM2Qjs7SUFDN0IsbUNBQ2dCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBIb3N0QmluZGluZyB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xyXG5pbXBvcnQgeyBJRHluYW1pY0Jhc2VDb250cm9sLCBJRHluYW1pY0RhdGVDb250cm9sIH0gZnJvbSBcIi4uLy4uL2ludGVyZmFjZXMvZHluYW1pYy1jb250cm9sLmludGVyZmFjZVwiO1xyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogXCJkeW5hbWljLXNpbmdsZS1kYXRlXCIsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxkaXYgY2xhc3M9XCJmYXJyaXMtZ3JvdXAtd3JhcFwiIFtmb3JtR3JvdXBdPVwiZm9ybVwiPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cCBmYXJyaXMtZm9ybS1ncm91cFwiPlxyXG4gICAgICAgIDxsYWJlbCBjbGFzcz1cImNvbC1mb3JtLWxhYmVsXCI+XHJcbiAgICAgICAgICA8c3BhbiAqbmdJZj1cIjBcIiBjbGFzcz1cImZhcnJpcy1sYWJlbC1pbmZvIHRleHQtZGFuZ2VyXCI+Kjwvc3Bhbj5cclxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZmFycmlzLWxhYmVsLXRleHRcIj57e2NvbnRyb2wubmFtZX19PC9zcGFuPlxyXG4gICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImZhcnJpcy1pbnB1dC13cmFwXCI+XHJcbiAgICAgICAgICA8ZmFycmlzLWRhdGVwaWNrZXIgW3JldHVybkZvcm1hdF09XCJjb250cm9sLmNvbnRyb2wuZm9ybWF0XCIgW2Zvcm1Db250cm9sTmFtZV09XCJjb250cm9sLmxhYmVsQ29kZVwiIFtyZWFkb25seV09XCJjb250cm9sLmNvbnRyb2wucmVhZG9ubHlcIj48L2ZhcnJpcy1kYXRlcGlja2VyPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gIGAsXHJcbiAgc3R5bGVzOiBbXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgU2luZ2xlRGF0ZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpIGNsYXNzTmFtZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgY29udHJvbDogSUR5bmFtaWNEYXRlQ29udHJvbDtcclxuICBASW5wdXQoKVxyXG4gIGZvcm06IEZvcm1Hcm91cDtcclxuICBjb25zdHJ1Y3RvcigpIHt9XHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmNvbnRyb2wuY29udHJvbC5mb3JtYXQgPSB0aGlzLmNvbnRyb2wuY29udHJvbC5mb3JtYXQgfHwgJ3l5eXktTU0tZGQnO1xyXG4gICAgdGhpcy5jbGFzc05hbWUgPSB0aGlzLmNvbnRyb2wuY2xhc3NOYW1lID8gdGhpcy5jb250cm9sLmNsYXNzTmFtZSA6ICdjb2wtMTIgY29sLW1kLTYgY29sLXhsLTMgY29sLWVsLTInO1xyXG4gIH1cclxufVxyXG4iXX0=