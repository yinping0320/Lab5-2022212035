/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, HostBinding } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { trim } from 'lodash-es';
import { CommonUtils } from '@farris/ui-common';
export class HelpComponent {
    /**
     * @param {?} utils
     */
    constructor(utils) {
        this.utils = utils;
        /**
         * @param helpData 选中的数据，如果是多选，是数组；如果是单选，是普通对象
         * @param mapFields
         * @param bindingData 帮助所在form的value对象
         */
        this.mapping = (/**
         * @param {?} helpData
         * @param {?} mapFields
         * @return {?}
         */
        (helpData, mapFields) => {
            console.log('helpData ', helpData);
            if (mapFields) {
                /** @type {?} */
                const helpFields = Object.keys(mapFields);
                helpFields.forEach((/**
                 * @param {?} f
                 * @return {?}
                 */
                (f) => {
                    /** @type {?} */
                    let val = '';
                    if (helpData) {
                        if (helpData instanceof Array) {
                            val = helpData.map((/**
                             * @param {?} h
                             * @return {?}
                             */
                            (h) => {
                                return this.utils.getValue(f, h);
                            })).join(',');
                        }
                        else {
                            val = this.utils.getValue(f, helpData);
                        }
                    }
                    mapFields[f].split(',').forEach((/**
                     * @param {?} ff
                     * @return {?}
                     */
                    (ff) => {
                        /** @type {?} */
                        const field = trim(ff);
                        // this.utils.setValue(bindingData, field, val);
                        this.form.controls[field].setValue(val);
                    }));
                }));
            }
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.options = this.control.control;
        this.className = this.control.className ? this.control.className : 'col-12 col-md-6 col-xl-3 col-el-2';
    }
}
HelpComponent.decorators = [
    { type: Component, args: [{
                selector: "dynamic-help",
                template: `
    <div class="farris-group-wrap" [formGroup]="form">
      <div class="form-group farris-form-group">
        <label class="col-form-label">
          <span *ngIf="0" class="farris-label-info text-danger">*</span>
          <span class="farris-label-text">{{control.name}}</span>
        </label>
        <div class="farris-input-wrap">
            <farris-lookup-grid
              [formControlName]="control.labelCode"
              [uri]="options.uri"
              [singleSelect]="options.singleSelect"
              [displayType]="options.displayType"
              [idField]="options.idField"
              [textField]="options.textField"
              [valueField]="options.valueField"
              [title]="options.dialogTitle"
              [mappingFn]="mapping"
              [mapFields]="options.mapFields"
              [readonly]="options.readonly"
          ></farris-lookup-grid>
        </div>
      </div>
    </div>
  `
            }] }
];
/** @nocollapse */
HelpComponent.ctorParameters = () => [
    { type: CommonUtils }
];
HelpComponent.propDecorators = {
    className: [{ type: HostBinding, args: ['class',] }],
    control: [{ type: Input }],
    form: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    HelpComponent.prototype.className;
    /** @type {?} */
    HelpComponent.prototype.control;
    /** @type {?} */
    HelpComponent.prototype.form;
    /** @type {?} */
    HelpComponent.prototype.options;
    /**
     * \@param helpData 选中的数据，如果是多选，是数组；如果是单选，是普通对象
     * \@param mapFields
     * \@param bindingData 帮助所在form的value对象
     * @type {?}
     */
    HelpComponent.prototype.mapping;
    /**
     * @type {?}
     * @private
     */
    HelpComponent.prototype.utils;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2R5bmFtaWMtY29udHJvbC1ncm91cC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2hlbHAvaGVscC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN0RSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUErQmhELE1BQU0sT0FBTyxhQUFhOzs7O0lBT3hCLFlBQW9CLEtBQWtCO1FBQWxCLFVBQUssR0FBTCxLQUFLLENBQWE7Ozs7OztRQVd0QyxZQUFPOzs7OztRQUFFLENBQUMsUUFBYSxFQUFFLFNBQWMsRUFBRSxFQUFFO1lBQ3pDLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBQ25DLElBQUksU0FBUyxFQUFFOztzQkFDUCxVQUFVLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7Z0JBQ3pDLFVBQVUsQ0FBQyxPQUFPOzs7O2dCQUFFLENBQUMsQ0FBTSxFQUFFLEVBQUU7O3dCQUN2QixHQUFHLEdBQUcsRUFBRTtvQkFDWixJQUFJLFFBQVEsRUFBRTt3QkFDVixJQUFJLFFBQVEsWUFBWSxLQUFLLEVBQUU7NEJBQzNCLEdBQUcsR0FBRyxRQUFRLENBQUMsR0FBRzs7Ozs0QkFBRSxDQUFDLENBQU0sRUFBRSxFQUFFO2dDQUMzQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQzs0QkFDckMsQ0FBQyxFQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO3lCQUNoQjs2QkFBTTs0QkFDSCxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDO3lCQUMxQztxQkFFSjtvQkFDRCxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU87Ozs7b0JBQUUsQ0FBQyxFQUFPLEVBQUUsRUFBRTs7OEJBQ25DLEtBQUssR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO3dCQUN0QixnREFBZ0Q7d0JBQ2hELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztvQkFDNUMsQ0FBQyxFQUFDLENBQUM7Z0JBQ1AsQ0FBQyxFQUFDLENBQUM7YUFDSjtRQUNILENBQUMsRUFBQTtJQWxDd0MsQ0FBQzs7OztJQUMxQyxRQUFRO1FBQ04sSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUNwQyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsbUNBQW1DLENBQUM7SUFDekcsQ0FBQzs7O1lBeENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsY0FBYztnQkFDeEIsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F3QlQ7YUFFRjs7OztZQTlCUSxXQUFXOzs7d0JBZ0NqQixXQUFXLFNBQUMsT0FBTztzQkFDbkIsS0FBSzttQkFFTCxLQUFLOzs7O0lBSE4sa0NBQXdDOztJQUN4QyxnQ0FDNkI7O0lBQzdCLDZCQUNnQjs7SUFDaEIsZ0NBQWE7Ozs7Ozs7SUFZYixnQ0F1QkM7Ozs7O0lBbENXLDhCQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgSG9zdEJpbmRpbmcgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcclxuaW1wb3J0IHsgdHJpbSB9IGZyb20gJ2xvZGFzaC1lcyc7XHJcbmltcG9ydCB7IENvbW1vblV0aWxzIH0gZnJvbSAnQGZhcnJpcy91aS1jb21tb24nO1xyXG5pbXBvcnQgeyBJRHluYW1pY0Jhc2VDb250cm9sLCBJRHlhbm1pY0hlbHBDb250cm9sIH0gZnJvbSBcIi4uLy4uL2ludGVyZmFjZXMvZHluYW1pYy1jb250cm9sLmludGVyZmFjZVwiO1xyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogXCJkeW5hbWljLWhlbHBcIixcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPGRpdiBjbGFzcz1cImZhcnJpcy1ncm91cC13cmFwXCIgW2Zvcm1Hcm91cF09XCJmb3JtXCI+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwIGZhcnJpcy1mb3JtLWdyb3VwXCI+XHJcbiAgICAgICAgPGxhYmVsIGNsYXNzPVwiY29sLWZvcm0tbGFiZWxcIj5cclxuICAgICAgICAgIDxzcGFuICpuZ0lmPVwiMFwiIGNsYXNzPVwiZmFycmlzLWxhYmVsLWluZm8gdGV4dC1kYW5nZXJcIj4qPC9zcGFuPlxyXG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJmYXJyaXMtbGFiZWwtdGV4dFwiPnt7Y29udHJvbC5uYW1lfX08L3NwYW4+XHJcbiAgICAgICAgPC9sYWJlbD5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmFycmlzLWlucHV0LXdyYXBcIj5cclxuICAgICAgICAgICAgPGZhcnJpcy1sb29rdXAtZ3JpZFxyXG4gICAgICAgICAgICAgIFtmb3JtQ29udHJvbE5hbWVdPVwiY29udHJvbC5sYWJlbENvZGVcIlxyXG4gICAgICAgICAgICAgIFt1cmldPVwib3B0aW9ucy51cmlcIlxyXG4gICAgICAgICAgICAgIFtzaW5nbGVTZWxlY3RdPVwib3B0aW9ucy5zaW5nbGVTZWxlY3RcIlxyXG4gICAgICAgICAgICAgIFtkaXNwbGF5VHlwZV09XCJvcHRpb25zLmRpc3BsYXlUeXBlXCJcclxuICAgICAgICAgICAgICBbaWRGaWVsZF09XCJvcHRpb25zLmlkRmllbGRcIlxyXG4gICAgICAgICAgICAgIFt0ZXh0RmllbGRdPVwib3B0aW9ucy50ZXh0RmllbGRcIlxyXG4gICAgICAgICAgICAgIFt2YWx1ZUZpZWxkXT1cIm9wdGlvbnMudmFsdWVGaWVsZFwiXHJcbiAgICAgICAgICAgICAgW3RpdGxlXT1cIm9wdGlvbnMuZGlhbG9nVGl0bGVcIlxyXG4gICAgICAgICAgICAgIFttYXBwaW5nRm5dPVwibWFwcGluZ1wiXHJcbiAgICAgICAgICAgICAgW21hcEZpZWxkc109XCJvcHRpb25zLm1hcEZpZWxkc1wiXHJcbiAgICAgICAgICAgICAgW3JlYWRvbmx5XT1cIm9wdGlvbnMucmVhZG9ubHlcIlxyXG4gICAgICAgICAgPjwvZmFycmlzLWxvb2t1cC1ncmlkPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gIGAsXHJcbiAgc3R5bGVzOiBbXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSGVscENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpIGNsYXNzTmFtZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgY29udHJvbDogSUR5YW5taWNIZWxwQ29udHJvbDtcclxuICBASW5wdXQoKVxyXG4gIGZvcm06IEZvcm1Hcm91cDtcclxuICBvcHRpb25zOiBhbnk7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSB1dGlsczogQ29tbW9uVXRpbHMpIHt9XHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmNvbnRyb2wuY29udHJvbDtcclxuICAgIHRoaXMuY2xhc3NOYW1lID0gdGhpcy5jb250cm9sLmNsYXNzTmFtZSA/IHRoaXMuY29udHJvbC5jbGFzc05hbWUgOiAnY29sLTEyIGNvbC1tZC02IGNvbC14bC0zIGNvbC1lbC0yJztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSBoZWxwRGF0YSDpgInkuK3nmoTmlbDmja7vvIzlpoLmnpzmmK/lpJrpgInvvIzmmK/mlbDnu4TvvJvlpoLmnpzmmK/ljZXpgInvvIzmmK/mma7pgJrlr7nosaFcclxuICAgKiBAcGFyYW0gbWFwRmllbGRzXHJcbiAgICogQHBhcmFtIGJpbmRpbmdEYXRhIOW4ruWKqeaJgOWcqGZvcm3nmoR2YWx1ZeWvueixoVxyXG4gICovXHJcbiAgbWFwcGluZyA9KGhlbHBEYXRhOiBhbnksIG1hcEZpZWxkczogYW55KSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZygnaGVscERhdGEgJywgaGVscERhdGEpO1xyXG4gICAgaWYgKG1hcEZpZWxkcykge1xyXG4gICAgICBjb25zdCBoZWxwRmllbGRzID0gT2JqZWN0LmtleXMobWFwRmllbGRzKTtcclxuICAgICAgaGVscEZpZWxkcy5mb3JFYWNoKCAoZjogYW55KSA9PiB7XHJcbiAgICAgICAgICBsZXQgdmFsID0gJyc7XHJcbiAgICAgICAgICBpZiAoaGVscERhdGEpIHtcclxuICAgICAgICAgICAgICBpZiAoaGVscERhdGEgaW5zdGFuY2VvZiBBcnJheSkge1xyXG4gICAgICAgICAgICAgICAgICB2YWwgPSBoZWxwRGF0YS5tYXAoIChoOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnV0aWxzLmdldFZhbHVlKGYsIGgpO1xyXG4gICAgICAgICAgICAgICAgICB9KS5qb2luKCcsJyk7XHJcbiAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgdmFsID0gdGhpcy51dGlscy5nZXRWYWx1ZShmLCBoZWxwRGF0YSk7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIH1cclxuICAgICAgICAgIG1hcEZpZWxkc1tmXS5zcGxpdCgnLCcpLmZvckVhY2goIChmZjogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgY29uc3QgZmllbGQgPSB0cmltKGZmKTtcclxuICAgICAgICAgICAgICAvLyB0aGlzLnV0aWxzLnNldFZhbHVlKGJpbmRpbmdEYXRhLCBmaWVsZCwgdmFsKTtcclxuICAgICAgICAgICAgICB0aGlzLmZvcm0uY29udHJvbHNbZmllbGRdLnNldFZhbHVlKHZhbCk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==