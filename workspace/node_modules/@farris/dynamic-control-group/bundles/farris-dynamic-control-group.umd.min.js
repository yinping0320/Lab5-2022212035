!function(o,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/common"),require("@farris/ui-datepicker"),require("@farris/ui-input-group"),require("@farris/ui-number-spinner"),require("@farris/ui-combo-list"),require("@farris/ui-lookup"),require("@farris/ui-field-group"),require("@angular/forms"),require("@angular/core"),require("lodash-es"),require("@farris/ui-common")):"function"==typeof define&&define.amd?define("@farris/dynamic-control-group",["exports","@angular/common","@farris/ui-datepicker","@farris/ui-input-group","@farris/ui-number-spinner","@farris/ui-combo-list","@farris/ui-lookup","@farris/ui-field-group","@angular/forms","@angular/core","lodash-es","@farris/ui-common"],n):n((o.farris=o.farris||{},o.farris["dynamic-control-group"]={}),o.ng.common,o.uiDatepicker,o.uiInputGroup,o.uiNumberSpinner,o.uiComboList,o.uiLookup,o.uiFieldGroup,o.ng.forms,o.ng.core,o.lodashEs,o.uiCommon)}(this,function(o,n,r,t,e,s,a,i,l,c,p,u){"use strict";var m={HELP:"help",TEXT:"text",DATE_RANGE:"date-range",SINGLE_DATE:"single-date",SINGLE_NUMBER:"single-number",NUMBER_RANGE:"number-range",BASE_DROPDOWN:"base-dropdown"},f=new c.InjectionToken("Dynamic control group HTTP service"),d=(g.prototype.getFormControlsByUri=function(o){return this.httpService.getData(o)},g.prototype.toFormValue=function(o,r){var t=Object.keys(r);return o.forEach(function(o){if(t.includes(o.labelCode)||Object.defineProperty(r,o.labelCode,{value:""}),o.control.controlType===m.HELP){var n=o;t.includes(n.control.hiddenInputName)||Object.defineProperty(r,n.control.hiddenInputName,{value:""})}}),r},g.decorators=[{type:c.Injectable}],g.ctorParameters=function(){return[{type:c.Injector}]},g);function g(o){this.injector=o,this.httpService=this.injector.get(f,null,c.InjectFlags.Optional)}var y=(h.prototype.ngOnChanges=function(o){this.className=this.initStyles(),this.isGrouped&&this.contents&&(this.controlEntries=Array.from(this.groupControls(this.contents).entries()))},h.prototype.ngOnInit=function(){var n=this;this.className=this.initStyles(),this.contents&&this.contents.length?this.initFormAndControlEntries():this.uri&&this.controlGroupService.getFormControlsByUri(this.uri).subscribe(function(o){n.contents=o,n.initFormAndControlEntries()})},h.prototype.initFormAndControlEntries=function(){this.isGrouped&&(this.controlEntries=Array.from(this.groupControls(this.contents).entries())),this.form.setValue(this.controlGroupService.toFormValue(this.contents,this.formData))},h.prototype.groupControls=function(o){var n=new Map;return o.forEach(function(o){n.has(o.groupName)?n.get(o.groupName).push(o):n.set(o.groupName,[o])}),n},h.prototype.initStyles=function(){var o;return o=this.isGrouped?"f-form-layout":"f-utils-flex-row-wrap",o=this.extraClassNames?o.concat(" "+this.extraClassNames):o,o=this.isEmbedded?o:o.concat(" farris-form"),o=this.isControlInline?o.concat(" farris-form-controls-inline"):o},h.prototype.ngAfterViewChecked=function(){},h.decorators=[{type:c.Component,args:[{selector:"farris-dynamic-control-group",template:'\n    <ng-container *ngIf="!isGrouped && form">\n        <ng-container *ngFor="let control of contents" dynamicFormControl [data]="control" [formGroup]="form"></ng-container>\n    </ng-container>\n\n    <ng-container *ngIf="isGrouped && form">\n        <ng-container *ngFor="let groupData of controlEntries">\n            <fieldset class="f-section-formgroup">\n                <legend class="f-section-formgroup-legend" farrisCollapse [title]="groupData[0]"></legend>\n                <div class="f-section-formgroup-inputs">\n                    <ng-container *ngFor="let entry of groupData[1]" dynamicFormControl [data]="entry" [formGroup]="form"></ng-container>\n                </div>\n            </fieldset>\n        </ng-container>\n    </ng-container>\n  ',providers:[d]}]}],h.ctorParameters=function(){return[{type:d},{type:c.ChangeDetectorRef}]},h.propDecorators={className:[{type:c.HostBinding,args:["class"]}],contents:[{type:c.Input}],form:[{type:c.Input}],extraClassNames:[{type:c.Input}],isControlInline:[{type:c.Input}],isEmbedded:[{type:c.Input}],formData:[{type:c.Input}],uri:[{type:c.Input}],isGrouped:[{type:c.Input}]},h);function h(o,n){this.controlGroupService=o,this.cdRef=n,this.form=null,this.isControlInline=!0,this.isEmbedded=!1}var v=(b.prototype.ngOnInit=function(){this.className=this.control.className?this.control.className:"col-12 col-md-6 col-xl-3 col-el-2"},b.decorators=[{type:c.Component,args:[{selector:"dynamic-input",template:'\n      <div class="farris-group-wrap" [formGroup]="form">\n        <div class="form-group farris-form-group">\n          <label class="col-form-label">\n            <span *ngIf="0" class="farris-label-info text-danger">*</span>\n            <span class="farris-label-text">{{control.name}}</span>\n          </label>\n          <div class="farris-input-wrap">\n            <input-group [formControlName]="control.labelCode" [readonly]="control.control.readonly"></input-group>\n          </div>\n        </div>\n      </div>\n  '}]}],b.ctorParameters=function(){return[]},b.propDecorators={className:[{type:c.HostBinding,args:["class"]}],control:[{type:c.Input}],form:[{type:c.Input}]},b);function b(){}var C=(N.prototype.ngOnInit=function(){this.control.control.format=this.control.control.format||"yyyy-MM-dd",this.className=this.control.className?this.control.className:"col-12 col-md-6 col-xl-3 col-el-2"},N.decorators=[{type:c.Component,args:[{selector:"dynamic-single-date",template:'\n    <div class="farris-group-wrap" [formGroup]="form">\n      <div class="form-group farris-form-group">\n        <label class="col-form-label">\n          <span *ngIf="0" class="farris-label-info text-danger">*</span>\n          <span class="farris-label-text">{{control.name}}</span>\n        </label>\n        <div class="farris-input-wrap">\n          <farris-datepicker [returnFormat]="control.control.format" [formControlName]="control.labelCode" [readonly]="control.control.readonly"></farris-datepicker>\n        </div>\n      </div>\n    </div>\n  '}]}],N.ctorParameters=function(){return[]},N.propDecorators={className:[{type:c.HostBinding,args:["class"]}],control:[{type:c.Input}],form:[{type:c.Input}]},N);function N(){}var I=(F.prototype.ngOnInit=function(){this.control.control.format=this.control.control.format||"yyyy-MM-dd",this.className=this.control.className?this.control.className:"col-12 col-md-6 col-xl-3 col-el-2"},F.decorators=[{type:c.Component,args:[{selector:"dynamic-date-range",template:'\n      <div class="farris-group-wrap" [formGroup]="form">\n        <div class="form-group farris-form-group">\n          <label class="col-form-label">\n            <span *ngIf="0" class="farris-label-info text-danger">*</span>\n            <span class="farris-label-text">{{control.name}}</span>\n          </label>\n          <div class="farris-input-wrap">\n            <farris-datepicker [dateRange]="true" [returnFormat]="control.control.format" [formControlName]="control.labelCode" [readonly]="control.control.readonly"></farris-datepicker>\n          </div>\n        </div>\n      </div>\n  '}]}],F.ctorParameters=function(){return[]},F.propDecorators={className:[{type:c.HostBinding,args:["class"]}],control:[{type:c.Input}],form:[{type:c.Input}]},F);function F(){}var x=(E.prototype.ngOnInit=function(){this.options=this.control.control,this.className=this.control.className?this.control.className:"col-12 col-md-6 col-xl-3 col-el-2"},E.decorators=[{type:c.Component,args:[{selector:"dynamic-single-number",template:'\n    <div class="farris-group-wrap" [formGroup]="form">\n      <div class="form-group farris-form-group">\n        <label class="col-form-label">\n          <span *ngIf="0" class="farris-label-info text-danger">*</span>\n          <span class="farris-label-text">{{control.name}}</span>\n        </label>\n        <div class="farris-input-wrap">\n            <farris-number-spinner \n                [formControlName]="control.labelCode"\n                [max]="options.max"\n                [min]="options.min"\n                [precision]="options.precision"\n                [readonly]="options.readonly"\n            >\n            </farris-number-spinner>\n        </div>\n      </div>\n    </div>\n  '}]}],E.ctorParameters=function(){return[]},E.propDecorators={className:[{type:c.HostBinding,args:["class"]}],control:[{type:c.Input}],form:[{type:c.Input}]},E);function E(){}var G=(D.prototype.ngOnInit=function(){this.options=this.control.control,this.className=this.control.className?this.control.className:"col-12 col-md-6 col-xl-3 col-el-2"},D.decorators=[{type:c.Component,args:[{selector:"dynamic-number-range",template:'\n    <div class="farris-group-wrap" [formGroup]="form">\n      <div class="form-group farris-form-group">\n        <label class="col-form-label">\n          <span *ngIf="0" class="farris-label-info text-danger">*</span>\n          <span class="farris-label-text">{{control.name}}</span>\n        </label>\n        <div class="farris-input-wrap">\n            <farris-number-range\n                [formControlName]="control.labelCode"\n                [max]="options.max"\n                [min]="options.min"\n                [precision]="options.precision"\n                [readonly]="options.readonly"\n            >\n            </farris-number-range>\n        </div>\n      </div>\n    </div>\n  '}]}],D.ctorParameters=function(){return[]},D.propDecorators={className:[{type:c.HostBinding,args:["class"]}],control:[{type:c.Input}],form:[{type:c.Input}]},D);function D(){}var w=(S.prototype.ngOnInit=function(){this.options=this.control.control,this.className=this.control.className?this.control.className:"col-12 col-md-6 col-xl-3 col-el-2"},S.decorators=[{type:c.Component,args:[{selector:"dynamic-base-dropdown",template:'\n    <div class="farris-group-wrap" [formGroup]="form">\n      <div class="form-group farris-form-group">\n        <label class="col-form-label">\n          <span *ngIf="0" class="farris-label-info text-danger">*</span>\n          <span class="farris-label-text">{{control.name}}</span>\n        </label>\n        <div class="farris-input-wrap">\n            <farris-combo-list *ngIf="options.items"\n                [readonly]="options.readonly"\n                [formControlName]="control.labelCode"\n                [idField]="options.idField"\n                [textField]="options.textField"\n                [multiSelect]="options.multiSelect"\n                [data]="options.items"\n            ></farris-combo-list>\n            <farris-combo-list *ngIf="options.uri"\n                [readonly]="options.readonly"\n                [formControlName]="control.labelCode"\n                [idField]="options.idField"\n                [textField]="options.textField"\n                [multiSelect]="options.multiSelect"\n                [uri]="options.uri"\n            ></farris-combo-list>\n        </div>\n      </div>\n    </div>\n  '}]}],S.ctorParameters=function(){return[]},S.propDecorators={className:[{type:c.HostBinding,args:["class"]}],control:[{type:c.Input}],form:[{type:c.Input}]},S);function S(){}var M=(O.prototype.ngOnInit=function(){this.options=this.control.control,this.className=this.control.className?this.control.className:"col-12 col-md-6 col-xl-3 col-el-2"},O.decorators=[{type:c.Component,args:[{selector:"dynamic-help",template:'\n    <div class="farris-group-wrap" [formGroup]="form">\n      <div class="form-group farris-form-group">\n        <label class="col-form-label">\n          <span *ngIf="0" class="farris-label-info text-danger">*</span>\n          <span class="farris-label-text">{{control.name}}</span>\n        </label>\n        <div class="farris-input-wrap">\n            <farris-lookup-grid\n              [formControlName]="control.labelCode"\n              [uri]="options.uri"\n              [singleSelect]="options.singleSelect"\n              [displayType]="options.displayType"\n              [idField]="options.idField"\n              [textField]="options.textField"\n              [valueField]="options.valueField"\n              [title]="options.dialogTitle"\n              [mappingFn]="mapping"\n              [mapFields]="options.mapFields"\n              [readonly]="options.readonly"\n          ></farris-lookup-grid>\n        </div>\n      </div>\n    </div>\n  '}]}],O.ctorParameters=function(){return[{type:u.CommonUtils}]},O.propDecorators={className:[{type:c.HostBinding,args:["class"]}],control:[{type:c.Input}],form:[{type:c.Input}]},O);function O(o){var e=this;this.utils=o,this.mapping=function(o,t){console.log("helpData ",o),t&&Object.keys(t).forEach(function(n){var r="";o&&(r=o instanceof Array?o.map(function(o){return e.utils.getValue(n,o)}).join(","):e.utils.getValue(n,o)),t[n].split(",").forEach(function(o){var n=p.trim(o);e.form.controls[n].setValue(r)})})}}var P=new Map;P.set(m.HELP,M),P.set(m.BASE_DROPDOWN,w),P.set(m.DATE_RANGE,I),P.set(m.NUMBER_RANGE,G),P.set(m.SINGLE_DATE,C),P.set(m.SINGLE_NUMBER,x),P.set(m.TEXT,v);var T=(R.prototype.ngOnInit=function(){this.formGroup=this.addToForm(this.data,this.formGroup);var o=this.resolver.resolveComponentFactory(P.get(this.data.control.controlType));this.componentRef=this.container.createComponent(o),this.componentRef.instance.form=this.formGroup,this.componentRef.instance.control=this.data},R.prototype.addToForm=function(o,n){if(n.addControl(o.labelCode,new l.FormControl(o.value)),o.control.controlType===m.HELP){var r=o;n.addControl(r.control.hiddenInputName,new l.FormControl(""))}return n},R.decorators=[{type:c.Directive,args:[{selector:"[dynamicFormControl]"}]}],R.ctorParameters=function(){return[{type:c.ComponentFactoryResolver},{type:c.ViewContainerRef},{type:c.Injector}]},R.propDecorators={data:[{type:c.Input}],formGroup:[{type:c.Input}]},R);function R(o,n,r){this.resolver=o,this.container=n,this.injector=r}var k=(A.decorators=[{type:c.NgModule,args:[{declarations:[T,y,v,I,C,G,x,w,M],imports:[n.CommonModule,l.ReactiveFormsModule,t.InputGroupModule,r.FarrisDatePickerModule,e.NumberSpinnerModule,s.ComboListModule,a.LookupModule,i.FieldGroupModule],exports:[T,y],entryComponents:[v,I,C,G,x,w,M]}]}],A);function A(){}o.DynamicControlGroupService=d,o.DynamicControlGroupComponent=y,o.DynamicControlGroupModule=k,o.DYNAMIC_CONTROL_TYPE=m,o.DynamiControlGroupHttpToken=f,o.ɵc=I,o.ɵd=C,o.ɵg=w,o.ɵh=M,o.ɵb=v,o.ɵe=G,o.ɵf=x,o.ɵa=T,Object.defineProperty(o,"__esModule",{value:!0})});
//# sourceMappingURL=farris-dynamic-control-group.umd.min.js.map