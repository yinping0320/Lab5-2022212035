/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, HostBinding } from "@angular/core";
import { FormGroup } from "@angular/forms";
var BaseDropdownComponent = /** @class */ (function () {
    function BaseDropdownComponent() {
    }
    /**
     * @return {?}
     */
    BaseDropdownComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.options = this.control.control;
        this.className = this.control.className ? this.control.className : 'col-12 col-md-6 col-xl-3 col-el-2';
    };
    BaseDropdownComponent.decorators = [
        { type: Component, args: [{
                    selector: "dynamic-base-dropdown",
                    template: "\n    <div class=\"farris-group-wrap\" [formGroup]=\"form\">\n      <div class=\"form-group farris-form-group\">\n        <label class=\"col-form-label\">\n          <span *ngIf=\"0\" class=\"farris-label-info text-danger\">*</span>\n          <span class=\"farris-label-text\">{{control.name}}</span>\n        </label>\n        <div class=\"farris-input-wrap\">\n            <farris-combo-list *ngIf=\"options.items\"\n                [readonly]=\"options.readonly\"\n                [formControlName]=\"control.labelCode\"\n                [idField]=\"options.idField\"\n                [textField]=\"options.textField\"\n                [multiSelect]=\"options.multiSelect\"\n                [data]=\"options.items\"\n            ></farris-combo-list>\n            <farris-combo-list *ngIf=\"options.uri\"\n                [readonly]=\"options.readonly\"\n                [formControlName]=\"control.labelCode\"\n                [idField]=\"options.idField\"\n                [textField]=\"options.textField\"\n                [multiSelect]=\"options.multiSelect\"\n                [uri]=\"options.uri\"\n            ></farris-combo-list>\n        </div>\n      </div>\n    </div>\n  "
                }] }
    ];
    /** @nocollapse */
    BaseDropdownComponent.ctorParameters = function () { return []; };
    BaseDropdownComponent.propDecorators = {
        className: [{ type: HostBinding, args: ['class',] }],
        control: [{ type: Input }],
        form: [{ type: Input }]
    };
    return BaseDropdownComponent;
}());
export { BaseDropdownComponent };
if (false) {
    /** @type {?} */
    BaseDropdownComponent.prototype.className;
    /** @type {?} */
    BaseDropdownComponent.prototype.control;
    /** @type {?} */
    BaseDropdownComponent.prototype.form;
    /** @type {?} */
    BaseDropdownComponent.prototype.options;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1kcm9wZG93bi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2R5bmFtaWMtY29udHJvbC1ncm91cC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2Ryb3Bkb3duL2Jhc2UtZHJvcGRvd24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdEUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTNDO0lBdUNFO0lBQWUsQ0FBQzs7OztJQUNoQix3Q0FBUTs7O0lBQVI7UUFDSSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxtQ0FBbUMsQ0FBQztJQUMzRyxDQUFDOztnQkEzQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLFFBQVEsRUFBRSxxcUNBMkJUO2lCQUVGOzs7Ozs0QkFFRSxXQUFXLFNBQUMsT0FBTzswQkFDbkIsS0FBSzt1QkFFTCxLQUFLOztJQVFSLDRCQUFDO0NBQUEsQUE1Q0QsSUE0Q0M7U0FaWSxxQkFBcUI7OztJQUNoQywwQ0FBd0M7O0lBQ3hDLHdDQUNpQzs7SUFDakMscUNBQ2dCOztJQUNoQix3Q0FBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgSG9zdEJpbmRpbmcgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcclxuaW1wb3J0IHsgSUR5bmFtaWNCYXNlQ29udHJvbCwgSUR5bmFtaWNEcm9wZG93bkNvbnRyb2wgfSBmcm9tIFwiLi4vLi4vaW50ZXJmYWNlcy9keW5hbWljLWNvbnRyb2wuaW50ZXJmYWNlXCI7XHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiBcImR5bmFtaWMtYmFzZS1kcm9wZG93blwiLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8ZGl2IGNsYXNzPVwiZmFycmlzLWdyb3VwLXdyYXBcIiBbZm9ybUdyb3VwXT1cImZvcm1cIj5cclxuICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgZmFycmlzLWZvcm0tZ3JvdXBcIj5cclxuICAgICAgICA8bGFiZWwgY2xhc3M9XCJjb2wtZm9ybS1sYWJlbFwiPlxyXG4gICAgICAgICAgPHNwYW4gKm5nSWY9XCIwXCIgY2xhc3M9XCJmYXJyaXMtbGFiZWwtaW5mbyB0ZXh0LWRhbmdlclwiPio8L3NwYW4+XHJcbiAgICAgICAgICA8c3BhbiBjbGFzcz1cImZhcnJpcy1sYWJlbC10ZXh0XCI+e3tjb250cm9sLm5hbWV9fTwvc3Bhbj5cclxuICAgICAgICA8L2xhYmVsPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJmYXJyaXMtaW5wdXQtd3JhcFwiPlxyXG4gICAgICAgICAgICA8ZmFycmlzLWNvbWJvLWxpc3QgKm5nSWY9XCJvcHRpb25zLml0ZW1zXCJcclxuICAgICAgICAgICAgICAgIFtyZWFkb25seV09XCJvcHRpb25zLnJlYWRvbmx5XCJcclxuICAgICAgICAgICAgICAgIFtmb3JtQ29udHJvbE5hbWVdPVwiY29udHJvbC5sYWJlbENvZGVcIlxyXG4gICAgICAgICAgICAgICAgW2lkRmllbGRdPVwib3B0aW9ucy5pZEZpZWxkXCJcclxuICAgICAgICAgICAgICAgIFt0ZXh0RmllbGRdPVwib3B0aW9ucy50ZXh0RmllbGRcIlxyXG4gICAgICAgICAgICAgICAgW211bHRpU2VsZWN0XT1cIm9wdGlvbnMubXVsdGlTZWxlY3RcIlxyXG4gICAgICAgICAgICAgICAgW2RhdGFdPVwib3B0aW9ucy5pdGVtc1wiXHJcbiAgICAgICAgICAgID48L2ZhcnJpcy1jb21iby1saXN0PlxyXG4gICAgICAgICAgICA8ZmFycmlzLWNvbWJvLWxpc3QgKm5nSWY9XCJvcHRpb25zLnVyaVwiXHJcbiAgICAgICAgICAgICAgICBbcmVhZG9ubHldPVwib3B0aW9ucy5yZWFkb25seVwiXHJcbiAgICAgICAgICAgICAgICBbZm9ybUNvbnRyb2xOYW1lXT1cImNvbnRyb2wubGFiZWxDb2RlXCJcclxuICAgICAgICAgICAgICAgIFtpZEZpZWxkXT1cIm9wdGlvbnMuaWRGaWVsZFwiXHJcbiAgICAgICAgICAgICAgICBbdGV4dEZpZWxkXT1cIm9wdGlvbnMudGV4dEZpZWxkXCJcclxuICAgICAgICAgICAgICAgIFttdWx0aVNlbGVjdF09XCJvcHRpb25zLm11bHRpU2VsZWN0XCJcclxuICAgICAgICAgICAgICAgIFt1cmldPVwib3B0aW9ucy51cmlcIlxyXG4gICAgICAgICAgICA+PC9mYXJyaXMtY29tYm8tbGlzdD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICBgLFxyXG4gIHN0eWxlczogW11cclxufSlcclxuZXhwb3J0IGNsYXNzIEJhc2VEcm9wZG93bkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpIGNsYXNzTmFtZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgY29udHJvbDogSUR5bmFtaWNEcm9wZG93bkNvbnRyb2w7XHJcbiAgQElucHV0KClcclxuICBmb3JtOiBGb3JtR3JvdXA7XHJcbiAgb3B0aW9uczogYW55O1xyXG4gIGNvbnN0cnVjdG9yKCkge31cclxuICBuZ09uSW5pdCgpIHtcclxuICAgICAgdGhpcy5vcHRpb25zID0gdGhpcy5jb250cm9sLmNvbnRyb2w7XHJcbiAgICAgIHRoaXMuY2xhc3NOYW1lID0gdGhpcy5jb250cm9sLmNsYXNzTmFtZSA/IHRoaXMuY29udHJvbC5jbGFzc05hbWUgOiAnY29sLTEyIGNvbC1tZC02IGNvbC14bC0zIGNvbC1lbC0yJztcclxuICB9XHJcbn1cclxuIl19