/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, HostBinding } from "@angular/core";
import { FormGroup } from "@angular/forms";
var SingleDateComponent = /** @class */ (function () {
    function SingleDateComponent() {
    }
    /**
     * @return {?}
     */
    SingleDateComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.control.control.format = this.control.control.format || 'yyyy-MM-dd';
        this.className = this.control.className ? this.control.className : 'col-12 col-md-6 col-xl-3 col-el-2';
    };
    SingleDateComponent.decorators = [
        { type: Component, args: [{
                    selector: "dynamic-single-date",
                    template: "\n    <div class=\"farris-group-wrap\" [formGroup]=\"form\">\n      <div class=\"form-group farris-form-group\">\n        <label class=\"col-form-label\">\n          <span *ngIf=\"0\" class=\"farris-label-info text-danger\">*</span>\n          <span class=\"farris-label-text\">{{control.name}}</span>\n        </label>\n        <div class=\"farris-input-wrap\">\n          <farris-datepicker [returnFormat]=\"control.control.format\" [formControlName]=\"control.labelCode\" [readonly]=\"control.control.readonly\"></farris-datepicker>\n        </div>\n      </div>\n    </div>\n  "
                }] }
    ];
    /** @nocollapse */
    SingleDateComponent.ctorParameters = function () { return []; };
    SingleDateComponent.propDecorators = {
        className: [{ type: HostBinding, args: ['class',] }],
        control: [{ type: Input }],
        form: [{ type: Input }]
    };
    return SingleDateComponent;
}());
export { SingleDateComponent };
if (false) {
    /** @type {?} */
    SingleDateComponent.prototype.className;
    /** @type {?} */
    SingleDateComponent.prototype.control;
    /** @type {?} */
    SingleDateComponent.prototype.form;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLWRhdGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9keW5hbWljLWNvbnRyb2wtZ3JvdXAvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9kYXRlL3NpbmdsZS1kYXRlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUUzQztJQXVCRTtJQUFlLENBQUM7Ozs7SUFDaEIsc0NBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sSUFBSSxZQUFZLENBQUM7UUFDMUUsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLG1DQUFtQyxDQUFDO0lBQ3pHLENBQUM7O2dCQTNCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsUUFBUSxFQUFFLHVrQkFZVDtpQkFFRjs7Ozs7NEJBRUUsV0FBVyxTQUFDLE9BQU87MEJBQ25CLEtBQUs7dUJBRUwsS0FBSzs7SUFPUiwwQkFBQztDQUFBLEFBNUJELElBNEJDO1NBWFksbUJBQW1COzs7SUFDOUIsd0NBQXdDOztJQUN4QyxzQ0FDNkI7O0lBQzdCLG1DQUNnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgSG9zdEJpbmRpbmcgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcclxuaW1wb3J0IHsgSUR5bmFtaWNCYXNlQ29udHJvbCwgSUR5bmFtaWNEYXRlQ29udHJvbCB9IGZyb20gXCIuLi8uLi9pbnRlcmZhY2VzL2R5bmFtaWMtY29udHJvbC5pbnRlcmZhY2VcIjtcclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6IFwiZHluYW1pYy1zaW5nbGUtZGF0ZVwiLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8ZGl2IGNsYXNzPVwiZmFycmlzLWdyb3VwLXdyYXBcIiBbZm9ybUdyb3VwXT1cImZvcm1cIj5cclxuICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgZmFycmlzLWZvcm0tZ3JvdXBcIj5cclxuICAgICAgICA8bGFiZWwgY2xhc3M9XCJjb2wtZm9ybS1sYWJlbFwiPlxyXG4gICAgICAgICAgPHNwYW4gKm5nSWY9XCIwXCIgY2xhc3M9XCJmYXJyaXMtbGFiZWwtaW5mbyB0ZXh0LWRhbmdlclwiPio8L3NwYW4+XHJcbiAgICAgICAgICA8c3BhbiBjbGFzcz1cImZhcnJpcy1sYWJlbC10ZXh0XCI+e3tjb250cm9sLm5hbWV9fTwvc3Bhbj5cclxuICAgICAgICA8L2xhYmVsPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJmYXJyaXMtaW5wdXQtd3JhcFwiPlxyXG4gICAgICAgICAgPGZhcnJpcy1kYXRlcGlja2VyIFtyZXR1cm5Gb3JtYXRdPVwiY29udHJvbC5jb250cm9sLmZvcm1hdFwiIFtmb3JtQ29udHJvbE5hbWVdPVwiY29udHJvbC5sYWJlbENvZGVcIiBbcmVhZG9ubHldPVwiY29udHJvbC5jb250cm9sLnJlYWRvbmx5XCI+PC9mYXJyaXMtZGF0ZXBpY2tlcj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICBgLFxyXG4gIHN0eWxlczogW11cclxufSlcclxuZXhwb3J0IGNsYXNzIFNpbmdsZURhdGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBIb3N0QmluZGluZygnY2xhc3MnKSBjbGFzc05hbWU6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIGNvbnRyb2w6IElEeW5hbWljRGF0ZUNvbnRyb2w7XHJcbiAgQElucHV0KClcclxuICBmb3JtOiBGb3JtR3JvdXA7XHJcbiAgY29uc3RydWN0b3IoKSB7fVxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5jb250cm9sLmNvbnRyb2wuZm9ybWF0ID0gdGhpcy5jb250cm9sLmNvbnRyb2wuZm9ybWF0IHx8ICd5eXl5LU1NLWRkJztcclxuICAgIHRoaXMuY2xhc3NOYW1lID0gdGhpcy5jb250cm9sLmNsYXNzTmFtZSA/IHRoaXMuY29udHJvbC5jbGFzc05hbWUgOiAnY29sLTEyIGNvbC1tZC02IGNvbC14bC0zIGNvbC1lbC0yJztcclxuICB9XHJcbn1cclxuIl19