/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChild, HostBinding, Input } from '@angular/core';
import { FooterHeaderDirective } from './directive/footer-header.directive';
import { FooterHeaderToolbarExtendDirective } from './directive/footer-header-toolbar-extend.directive';
import { FooterHeaderContentDirective } from './directive/footer-header-content.directive';
import { FooterHeaderToolbarDirective } from './directive/footer-header-toolbar.directive';
import { LocaleService } from '@farris/ui-locale';
var FooterComponent = /** @class */ (function () {
    function FooterComponent(localeService) {
        this.localeService = localeService;
        this.cls = true;
        this.textCollapse = this.localeService.getValue('footer.collapseText');
        this.textExpand = this.localeService.getValue('footer.expandText');
        // 显示头部区域
        this.showHeader = true;
        // 没有用模板单独定义class
        this.headerCls = "";
        // 单独定义主内容区的class
        this.contentCls = "";
        // 展开状态
        this.collapseStatus = true;
        // 是否启用展开收起
        this.enableAccordion = true;
    }
    Object.defineProperty(FooterComponent.prototype, "getCollapseCls", {
        // 展开
        get: 
        // 展开
        /**
         * @return {?}
         */
        function () {
            if (this.enableAccordion) {
                return this.collapseStatus;
            }
            else {
                return false;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FooterComponent.prototype, "enableAccordionCls", {
        // 启用展开收起
        get: 
        // 启用展开收起
        /**
         * @return {?}
         */
        function () {
            return this.enableAccordion;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FooterComponent.prototype, "collapseText", {
        get: /**
         * @return {?}
         */
        function () {
            return this.textCollapse;
        },
        // 收起文字
        set: 
        // 收起文字
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                this.textCollapse = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FooterComponent.prototype, "expandText", {
        get: /**
         * @return {?}
         */
        function () {
            return this.textExpand;
        },
        // 展开文字
        set: 
        // 展开文字
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                this.textExpand = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FooterComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    // 收起还是展开
    // 收起还是展开
    /**
     * @param {?} ev
     * @return {?}
     */
    FooterComponent.prototype.expadnOrCollapse = 
    // 收起还是展开
    /**
     * @param {?} ev
     * @return {?}
     */
    function (ev) {
        ev && ev.stopImmediatePropagation();
        this.collapseStatus = !this.collapseStatus;
    };
    FooterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-footer',
                    template: "\n   <footer class=\"f-cmp-footer-container\">\n      <ng-container *ngIf=\"showHeader&&headerDirective\">\n          <header class=\"f-cmp-footer-header\" [ngClass]=\"headerDirective.extendCls\">\n              <ng-template  [ngTemplateOutlet]=\"headerDirective.templateRef\"></ng-template> \n          </header>\n      </ng-container>\n      <ng-container *ngIf=\"showHeader&&!headerDirective\">\n        <header class=\"f-cmp-footer-header\" [ngClass]=\"headerCls\">\n          <div class=\"f-content\" *ngIf=\"headerContentDirective\" [ngClass]=\"headerContentDirective.extendCls\">\n            <ng-template [ngTemplateOutlet]=\"headerContentDirective.templateRef\"></ng-template> \n          </div>\n          <ng-container *ngIf=\"headerToolbarDirective\">\n              <div class=\"f-toolbar\" [ngClass]=\"headerToolbarDirective.extendCls\">\n                  <ng-template  [ngTemplateOutlet]=\"headerToolbarDirective.templateRef\"></ng-template> \n              </div>\n          </ng-container>\n          <div class=\"f-toolbar\" *ngIf=\"!headerToolbarDirective\">\n            <ng-template *ngIf=\"headerToolbarExtendDirective\" [ngTemplateOutlet]=\"headerToolbarExtendDirective.templateRef\"></ng-template> \n            <div class=\"toolbar--collapse\" *ngIf=\"enableAccordion\" (click)=\"expadnOrCollapse($event)\">\n                <span class=\"toobar--collapse-text\">\n                   <ng-container  *ngIf=\"collapseStatus\">{{textCollapse}}</ng-container>\n                   <ng-container  *ngIf=\"!collapseStatus\">{{textExpand}}</ng-container>\n                </span>              \n                <i class=\"f-icon toolbar--collapse-icon\"></i>\n            </div>\n          </div>\n        </header>\n      </ng-container> \n      <div class=\"f-cmp-footer-content\" [ngClass]=\"contentCls\">\n        <ng-content></ng-content>\n      </div>\n   </footer>\n  "
                }] }
    ];
    /** @nocollapse */
    FooterComponent.ctorParameters = function () { return [
        { type: LocaleService }
    ]; };
    FooterComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class.f-cmp-footer',] }],
        getCollapseCls: [{ type: HostBinding, args: ['class.f-state-collapse',] }],
        enableAccordionCls: [{ type: HostBinding, args: ['class.f-cmp-footer-accordion',] }],
        collapseText: [{ type: Input }],
        expandText: [{ type: Input }],
        showHeader: [{ type: Input }],
        headerCls: [{ type: Input }],
        contentCls: [{ type: Input }],
        collapseStatus: [{ type: Input }],
        enableAccordion: [{ type: Input }],
        headerDirective: [{ type: ContentChild, args: [FooterHeaderDirective,] }],
        headerContentDirective: [{ type: ContentChild, args: [FooterHeaderContentDirective,] }],
        headerToolbarExtendDirective: [{ type: ContentChild, args: [FooterHeaderToolbarExtendDirective,] }],
        headerToolbarDirective: [{ type: ContentChild, args: [FooterHeaderToolbarDirective,] }]
    };
    return FooterComponent;
}());
export { FooterComponent };
if (false) {
    /** @type {?} */
    FooterComponent.prototype.cls;
    /** @type {?} */
    FooterComponent.prototype.textCollapse;
    /** @type {?} */
    FooterComponent.prototype.textExpand;
    /** @type {?} */
    FooterComponent.prototype.showHeader;
    /** @type {?} */
    FooterComponent.prototype.headerCls;
    /** @type {?} */
    FooterComponent.prototype.contentCls;
    /** @type {?} */
    FooterComponent.prototype.collapseStatus;
    /** @type {?} */
    FooterComponent.prototype.enableAccordion;
    /** @type {?} */
    FooterComponent.prototype.headerDirective;
    /** @type {?} */
    FooterComponent.prototype.headerContentDirective;
    /** @type {?} */
    FooterComponent.prototype.headerToolbarExtendDirective;
    /** @type {?} */
    FooterComponent.prototype.headerToolbarDirective;
    /**
     * @type {?}
     * @private
     */
    FooterComponent.prototype.localeService;
}
//# sourceMappingURL=data:application/json;base64,