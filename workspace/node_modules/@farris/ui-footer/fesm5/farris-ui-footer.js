import { Injectable, Component, ContentChild, HostBinding, Input, NgModule, Directive, TemplateRef, defineInjectable } from '@angular/core';
import { CommonModule } from '@angular/common';
import { LocaleService, LocaleModule } from '@farris/ui-locale';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FooterService = /** @class */ (function () {
    function FooterService() {
    }
    FooterService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    FooterService.ctorParameters = function () { return []; };
    /** @nocollapse */ FooterService.ngInjectableDef = defineInjectable({ factory: function FooterService_Factory() { return new FooterService(); }, token: FooterService, providedIn: "root" });
    return FooterService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FooterHeaderDirective = /** @class */ (function () {
    function FooterHeaderDirective(templateRef) {
        this.templateRef = templateRef;
        // 扩展样式
        this.extendCls = "";
    }
    FooterHeaderDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[fFooterHeader]'
                },] }
    ];
    /** @nocollapse */
    FooterHeaderDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    FooterHeaderDirective.propDecorators = {
        extendCls: [{ type: Input }]
    };
    return FooterHeaderDirective;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FooterHeaderToolbarExtendDirective = /** @class */ (function () {
    function FooterHeaderToolbarExtendDirective(templateRef) {
        this.templateRef = templateRef;
    }
    FooterHeaderToolbarExtendDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[fFooterHeaderToolbarExtend]'
                },] }
    ];
    /** @nocollapse */
    FooterHeaderToolbarExtendDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    return FooterHeaderToolbarExtendDirective;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FooterHeaderContentDirective = /** @class */ (function () {
    function FooterHeaderContentDirective(templateRef) {
        this.templateRef = templateRef;
        // 扩展样式
        this.extendCls = "";
    }
    FooterHeaderContentDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[fFooterHeaderContent]'
                },] }
    ];
    /** @nocollapse */
    FooterHeaderContentDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    FooterHeaderContentDirective.propDecorators = {
        extendCls: [{ type: Input }]
    };
    return FooterHeaderContentDirective;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FooterHeaderToolbarDirective = /** @class */ (function () {
    function FooterHeaderToolbarDirective(templateRef) {
        this.templateRef = templateRef;
        // 扩展样式
        this.extendCls = "";
    }
    FooterHeaderToolbarDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[fFooterHeaderToolbar]'
                },] }
    ];
    /** @nocollapse */
    FooterHeaderToolbarDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    FooterHeaderToolbarDirective.propDecorators = {
        extendCls: [{ type: Input }]
    };
    return FooterHeaderToolbarDirective;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FooterComponent = /** @class */ (function () {
    function FooterComponent(localeService) {
        this.localeService = localeService;
        this.cls = true;
        this.textCollapse = this.localeService.getValue('footer.collapseText');
        this.textExpand = this.localeService.getValue('footer.expandText');
        // 显示头部区域
        this.showHeader = true;
        // 没有用模板单独定义class
        this.headerCls = "";
        // 单独定义主内容区的class
        this.contentCls = "";
        // 展开状态
        this.collapseStatus = true;
        // 是否启用展开收起
        this.enableAccordion = true;
    }
    Object.defineProperty(FooterComponent.prototype, "getCollapseCls", {
        // 展开
        get: 
        // 展开
        /**
         * @return {?}
         */
        function () {
            if (this.enableAccordion) {
                return this.collapseStatus;
            }
            else {
                return false;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FooterComponent.prototype, "enableAccordionCls", {
        // 启用展开收起
        get: 
        // 启用展开收起
        /**
         * @return {?}
         */
        function () {
            return this.enableAccordion;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FooterComponent.prototype, "collapseText", {
        get: /**
         * @return {?}
         */
        function () {
            return this.textCollapse;
        },
        // 收起文字
        set: 
        // 收起文字
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                this.textCollapse = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FooterComponent.prototype, "expandText", {
        get: /**
         * @return {?}
         */
        function () {
            return this.textExpand;
        },
        // 展开文字
        set: 
        // 展开文字
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                this.textExpand = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FooterComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    // 收起还是展开
    // 收起还是展开
    /**
     * @param {?} ev
     * @return {?}
     */
    FooterComponent.prototype.expadnOrCollapse = 
    // 收起还是展开
    /**
     * @param {?} ev
     * @return {?}
     */
    function (ev) {
        ev && ev.stopImmediatePropagation();
        this.collapseStatus = !this.collapseStatus;
    };
    FooterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-footer',
                    template: "\n   <footer class=\"f-cmp-footer-container\">\n      <ng-container *ngIf=\"showHeader&&headerDirective\">\n          <header class=\"f-cmp-footer-header\" [ngClass]=\"headerDirective.extendCls\">\n              <ng-template  [ngTemplateOutlet]=\"headerDirective.templateRef\"></ng-template> \n          </header>\n      </ng-container>\n      <ng-container *ngIf=\"showHeader&&!headerDirective\">\n        <header class=\"f-cmp-footer-header\" [ngClass]=\"headerCls\">\n          <div class=\"f-content\" *ngIf=\"headerContentDirective\" [ngClass]=\"headerContentDirective.extendCls\">\n            <ng-template [ngTemplateOutlet]=\"headerContentDirective.templateRef\"></ng-template> \n          </div>\n          <ng-container *ngIf=\"headerToolbarDirective\">\n              <div class=\"f-toolbar\" [ngClass]=\"headerToolbarDirective.extendCls\">\n                  <ng-template  [ngTemplateOutlet]=\"headerToolbarDirective.templateRef\"></ng-template> \n              </div>\n          </ng-container>\n          <div class=\"f-toolbar\" *ngIf=\"!headerToolbarDirective\">\n            <ng-template *ngIf=\"headerToolbarExtendDirective\" [ngTemplateOutlet]=\"headerToolbarExtendDirective.templateRef\"></ng-template> \n            <div class=\"toolbar--collapse\" *ngIf=\"enableAccordion\" (click)=\"expadnOrCollapse($event)\">\n                <span class=\"toobar--collapse-text\">\n                   <ng-container  *ngIf=\"collapseStatus\">{{textCollapse}}</ng-container>\n                   <ng-container  *ngIf=\"!collapseStatus\">{{textExpand}}</ng-container>\n                </span>              \n                <i class=\"f-icon toolbar--collapse-icon\"></i>\n            </div>\n          </div>\n        </header>\n      </ng-container> \n      <div class=\"f-cmp-footer-content\" [ngClass]=\"contentCls\">\n        <ng-content></ng-content>\n      </div>\n   </footer>\n  "
                }] }
    ];
    /** @nocollapse */
    FooterComponent.ctorParameters = function () { return [
        { type: LocaleService }
    ]; };
    FooterComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class.f-cmp-footer',] }],
        getCollapseCls: [{ type: HostBinding, args: ['class.f-state-collapse',] }],
        enableAccordionCls: [{ type: HostBinding, args: ['class.f-cmp-footer-accordion',] }],
        collapseText: [{ type: Input }],
        expandText: [{ type: Input }],
        showHeader: [{ type: Input }],
        headerCls: [{ type: Input }],
        contentCls: [{ type: Input }],
        collapseStatus: [{ type: Input }],
        enableAccordion: [{ type: Input }],
        headerDirective: [{ type: ContentChild, args: [FooterHeaderDirective,] }],
        headerContentDirective: [{ type: ContentChild, args: [FooterHeaderContentDirective,] }],
        headerToolbarExtendDirective: [{ type: ContentChild, args: [FooterHeaderToolbarExtendDirective,] }],
        headerToolbarDirective: [{ type: ContentChild, args: [FooterHeaderToolbarDirective,] }]
    };
    return FooterComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FarrisFooterModule = /** @class */ (function () {
    function FarrisFooterModule() {
    }
    FarrisFooterModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [FooterComponent, FooterHeaderDirective, FooterHeaderContentDirective, FooterHeaderToolbarDirective, FooterHeaderToolbarExtendDirective],
                    imports: [
                        CommonModule,
                        LocaleModule
                    ],
                    exports: [FooterComponent, FooterHeaderDirective, FooterHeaderContentDirective, FooterHeaderToolbarDirective, FooterHeaderToolbarExtendDirective]
                },] }
    ];
    return FarrisFooterModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { FooterService, FooterComponent, FarrisFooterModule, FooterHeaderDirective, FooterHeaderToolbarExtendDirective, FooterHeaderContentDirective, FooterHeaderToolbarDirective };

//# sourceMappingURL=farris-ui-footer.js.map