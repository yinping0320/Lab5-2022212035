(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@farris/ui-tooltip'), require('@farris/ui-locale')) :
    typeof define === 'function' && define.amd ? define('@farris/ui-rate', ['exports', '@angular/core', '@angular/common', '@farris/ui-tooltip', '@farris/ui-locale'], factory) :
    (factory((global.farris = global.farris || {}, global.farris['ui-rate'] = {}),global.ng.core,global.ng.common,global.uiTooltip,global.uiLocale));
}(this, (function (exports,core,common,uiTooltip,uiLocale) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var RateComponent = /** @class */ (function () {
        function RateComponent() {
            this.fsr = true;
            // 星星大小
            this.size = 'large';
            // 启用半颗星模式
            this.enableHalf = false;
            // 启用再次点击后清除
            this.enableClear = false;
            // 只读
            this.disabled = false;
            // 分制
            this.pointSystem = 5;
            // 图案样式
            this.iconClass = 'f-icon-star';
            // 禁用单个星星的文字提示
            this.toolTipDisabled = true;
            // 默认的满意度文案
            this.toolTipContents = ['很不满意', '不满意', '一般', '满意', '非常满意'];
            // 启用评分
            this.enableScore = true;
            // 启用满意度
            this.enableSatisfaction = false;
            this.valueChange = new core.EventEmitter();
            // 界面中亮色区域真实宽度
            this.realWidth = 0;
            // 虚拟分数
            this.score = 0;
            // 最终分数
            this.realScore = 0;
            // 比率
            this.rate = 1;
            // 配置
            this.config = [];
            // 星星之间的间距,设计稿是4
            this.distance = 4;
        }
        Object.defineProperty(RateComponent.prototype, "value", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.realScore = value;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        RateComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                /** @type {?} */
                var starId;
                switch (this.size) {
                    case 'small':
                        this.oneStarWidth = 14;
                        break;
                    case 'middle':
                        this.oneStarWidth = 16;
                        break;
                    case 'large':
                        this.oneStarWidth = 18;
                        break;
                }
                this.config = [
                    {
                        id: 1
                    },
                    {
                        id: 2
                    },
                    {
                        id: 3
                    },
                    {
                        id: 4
                    },
                    {
                        id: 5
                    }
                ];
                if (this.config.length) {
                    this.rate = this.pointSystem / this.config.length;
                }
                if (this.realScore) {
                    if (this.enableHalf) {
                        starId = Math.ceil(this.realScore / this.rate);
                    }
                    else {
                        starId = this.realScore;
                    }
                    this.realWidth = (this.oneStarWidth * this.realScore + Math.floor(this.realScore) * this.distance) / this.rate;
                    this.satisfaction = this.toolTipContents[starId - 1];
                }
            };
        /**
         * @param {?} event
         * @return {?}
         */
        RateComponent.prototype.onMouseOver = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (!this.isTargetElement(event.target)) {
                    return;
                }
                /** @type {?} */
                var id = parseInt(event.target.id);
                this.operateStar(event, id, false);
            };
        /**
         * @param {?} event
         * @return {?}
         */
        RateComponent.prototype.onMouseMove = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (!this.isTargetElement(event.target)) {
                    return;
                }
                /** @type {?} */
                var id = parseInt(event.target.id);
                this.operateStar(event, id, false);
            };
        /**
         * @param {?} event
         * @return {?}
         */
        RateComponent.prototype.onMouseOut = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (!this.isTargetElement(event.target)) {
                    return;
                }
                this.lightStarAreaWidth = 0;
                this.score = 0;
                this.satisfaction = null;
            };
        /**
         * @param {?} event
         * @return {?}
         */
        RateComponent.prototype.onClick = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (!this.isTargetElement(event.target)) {
                    return;
                }
                /** @type {?} */
                var id = parseInt(event.target.id);
                this.operateStar(event, id, true);
            };
        /**
         * 是否是目标元素
         * @param element
         */
        /**
         * 是否是目标元素
         * @private
         * @param {?} element
         * @return {?}
         */
        RateComponent.prototype.isTargetElement = /**
         * 是否是目标元素
         * @private
         * @param {?} element
         * @return {?}
         */
            function (element) {
                if (element.className.indexOf('f-icon') !== -1) {
                    return true;
                }
                else {
                    return false;
                }
            };
        /**
         *  再次点击取消选中
         */
        /**
         *  再次点击取消选中
         * @private
         * @return {?}
         */
        RateComponent.prototype.clear = /**
         *  再次点击取消选中
         * @private
         * @return {?}
         */
            function () {
                if (this.lightStarAreaWidth === this.realWidth && this.enableClear && this.realWidth !== 0) {
                    this.realWidth = 0;
                    this.realScore = 0;
                    this.realSatisfaction = null;
                    this.valueChange.emit(this.realScore);
                    return true;
                }
                return false;
            };
        /**
         *
         * @param event 事件
         * @param id 当前星星的id
         * @param token 是否点击事件触发
         */
        /**
         *
         * @private
         * @param {?} event 事件
         * @param {?} id 当前星星的id
         * @param {?} token 是否点击事件触发
         * @return {?}
         */
        RateComponent.prototype.operateStar = /**
         *
         * @private
         * @param {?} event 事件
         * @param {?} id 当前星星的id
         * @param {?} token 是否点击事件触发
         * @return {?}
         */
            function (event, id, token) {
                // 禁用
                if (this.disabled) {
                    return;
                }
                // 满意度文案
                if (this.enableSatisfaction) {
                    this.satisfaction = this.toolTipContents[id - 1];
                }
                // 如果滑动的距离小于一颗星星一半的距离（或者超过）
                if (event.offsetX < this.oneStarWidth / 2 && this.enableHalf === true) {
                    this.lightStarAreaWidth = (this.oneStarWidth * id) - this.oneStarWidth / 2 + this.distance * (id - 1);
                    this.score = (this.rate * id) - this.rate / 2;
                    if (token === true) {
                        if (this.clear()) {
                            return;
                        }
                        this.realScore = this.score;
                        this.valueChange.emit(this.realScore);
                        this.realWidth = this.lightStarAreaWidth;
                        this.realSatisfaction = this.satisfaction;
                    }
                }
                else {
                    this.lightStarAreaWidth = this.oneStarWidth * id + this.distance * (id - 1);
                    this.score = this.rate * id;
                    if (token === true) {
                        if (this.clear()) {
                            return;
                        }
                        this.realScore = this.score;
                        this.valueChange.emit(this.realScore);
                        this.realWidth = this.lightStarAreaWidth;
                        this.realSatisfaction = this.satisfaction;
                    }
                }
            };
        RateComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'farris-rate',
                        template: "<div class=\"star-light-area\" [ngStyle]=\"{'width': (lightStarAreaWidth ? lightStarAreaWidth : realWidth)+ 'px'}\">\r\n    <span class=\"{{'f-icon default-light-color ' + iconClass}}\" [id]=\"item.id\"\r\n        [ngStyle]=\"{'color': lightColor ? lightColor : null}\"\r\n        farrisTooltip [content]=\"toolTipContents[item.id - 1]\" [disable]=\"toolTipDisabled\"\r\n        [ngClass]=\"{'f-star-sm': size === 'small','f-star-md': size === 'middle','f-star-lg': size === 'large'}\"\r\n        *ngFor=\"let item of config\">\r\n    </span>\r\n</div>\r\n<div class=\"star-dark-area\"\r\n    [ngClass]=\"{'small': size === 'small', 'middle': size === 'middle','large': size === 'large'}\">\r\n    <span class=\"{{'f-icon default-dark-color ' + iconClass}}\" [id]=\"item.id\"\r\n        [ngStyle]=\"{'color': darkColor ? darkColor : null}\" \r\n        [ngClass]=\"{'f-star-sm': size === 'small', 'f-star-md': size === 'middle', 'f-star-lg': size === 'large'}\"\r\n        *ngFor=\"let item of config\">\r\n    </span>\r\n</div>\r\n<div class=\"f-utils-fill\"\r\n    [ngClass]=\"{'font-small': size === 'small', 'font-middle': size === 'middle','font-large': size === 'large'}\">\r\n    <span *ngIf=\"enableScore\">{{score ? score + '\u5206' : realScore + '\u5206'}}</span>\r\n    <span *ngIf=\"enableSatisfaction && (realSatisfaction || satisfaction)\">\uFF0C{{satisfaction ? satisfaction : realSatisfaction}}</span>\r\n</div>",
                        styles: [":host{display:-webkit-box;display:flex;position:relative}:host .default-light-color{color:#fbdb10}:host .default-dark-color{color:#e8e8e8}.star-dark-area span,.star-light-area span{box-sizing:content-box;padding-right:4px}:host .f-star-sm{font-size:14px}:host .f-star-md{font-size:16px}:host .f-star-lg{font-size:18px}:host .star-dark-area{overflow:hidden;display:-webkit-box;display:flex;flex-wrap:nowrap}:host .small{width:90px}:host .middle{width:100px}:host .large{width:110px}:host .f-utils-fill{padding-left:2px;font-size:14px}:host .font-small{line-height:14px}:host .font-middle{line-height:16px}:host .font-large{line-height:18px}:host .star-light-area{position:absolute;left:0;top:0;z-index:2;width:0%;overflow:hidden;display:-webkit-box;display:flex;flex-wrap:nowrap}:host .star-dark-area span,:host .star-light-area span{-webkit-box-flex:1;flex:1}"]
                    }] }
        ];
        /** @nocollapse */
        RateComponent.ctorParameters = function () { return []; };
        RateComponent.propDecorators = {
            fsr: [{ type: core.HostBinding, args: ['class.farris-star-rating',] }],
            value: [{ type: core.Input }],
            size: [{ type: core.Input }],
            enableHalf: [{ type: core.Input }],
            enableClear: [{ type: core.Input }],
            disabled: [{ type: core.Input }],
            pointSystem: [{ type: core.Input }],
            lightColor: [{ type: core.Input }],
            darkColor: [{ type: core.Input }],
            iconClass: [{ type: core.Input }],
            toolTipDisabled: [{ type: core.Input }],
            toolTipContents: [{ type: core.Input }],
            enableScore: [{ type: core.Input }],
            enableSatisfaction: [{ type: core.Input }],
            valueChange: [{ type: core.Output }],
            onMouseOver: [{ type: core.HostListener, args: ['mouseover', ['$event'],] }],
            onMouseMove: [{ type: core.HostListener, args: ['mousemove', ['$event'],] }],
            onMouseOut: [{ type: core.HostListener, args: ['mouseout', ['$event'],] }],
            onClick: [{ type: core.HostListener, args: ['click', ['$event'],] }]
        };
        return RateComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var RateModule = /** @class */ (function () {
        function RateModule() {
        }
        RateModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [RateComponent],
                        imports: [
                            common.CommonModule,
                            uiTooltip.FarrisTooltipModule,
                            uiLocale.LocaleModule
                        ],
                        exports: [RateComponent]
                    },] }
        ];
        return RateModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.RateComponent = RateComponent;
    exports.RateModule = RateModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=farris-ui-rate.umd.js.map