/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/view-image/f-file-view-image.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, Input, ViewChild, ElementRef } from '@angular/core';
export class FFileViewImageComponent {
    constructor() {
        this.maxHeight = 200;
        this.maxWidth = 300;
        this.cls = true;
        this.selfHeight = '50px';
    }
    /**
     * @param {?} fileContent
     * @return {?}
     */
    set file(fileContent) {
        this.tFile = fileContent;
        this.createImageByCanvas();
    }
    /**
     * @return {?}
     */
    get file() {
        return this.tFile;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @private
     * @param {?} originWidth
     * @param {?} originHeight
     * @return {?}
     */
    changeImageSize(originWidth, originHeight) {
        // 图片原始尺寸
        // 图片原始尺寸
        // 目标尺寸
        /** @type {?} */
        var targetWidth = originWidth;
        /** @type {?} */
        var targetHeight = originHeight;
        // 图片尺寸超过400x400的限制
        if (originWidth > this.maxWidth || originHeight > this.maxHeight) {
            if (originWidth / originHeight > this.maxWidth / this.maxHeight) {
                // 更宽，按照宽度限定尺寸
                targetWidth = this.maxWidth;
                targetHeight = Math.round(this.maxWidth * (originHeight / originWidth));
            }
            else {
                targetHeight = this.maxHeight;
                targetWidth = Math.round(this.maxHeight * (originWidth / originHeight));
            }
        }
        this.selfHeight = targetHeight + "px";
        return {
            width: targetWidth,
            height: targetHeight
        };
    }
    // 压缩图片需要的一些元素和对象
    /**
     * @private
     * @return {?}
     */
    createImageByCanvas() {
        /** @type {?} */
        let reader = new FileReader();
        /** @type {?} */
        let tImage = new Image();
        /** @type {?} */
        let canvas = this.canvas.nativeElement;
        /** @type {?} */
        let context = canvas.getContext('2d');
        // base64地址图片加载完毕后
        tImage.onload = (/**
         * @return {?}
         */
        () => {
            /** @type {?} */
            let imgSize = this.changeImageSize(tImage.width, tImage.height);
            // canvas对图片进行缩放
            canvas.width = imgSize.width;
            canvas.height = imgSize.height;
            // 清除画布
            context.clearRect(0, 0, this.maxWidth, this.maxHeight);
            // 图片压缩
            context.drawImage(tImage, 0, 0, imgSize.width, imgSize.height);
        });
        // 文件base64化，以便获知图片原始尺寸
        reader.onload = (/**
         * @param {?} ev
         * @return {?}
         */
        (ev) => {
            tImage.src = (/** @type {?} */ (reader.result));
        });
        reader.onerror = (/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
        });
        reader.readAsDataURL(this.file);
    }
}
FFileViewImageComponent.decorators = [
    { type: Component, args: [{
                selector: 'f-file-view-image',
                template: "<canvas #canvas class=\"ffileupload--canvas\"></canvas>\r\n",
                styles: [".ffileupload--canvas{margin:0 auto}"]
            }] }
];
/** @nocollapse */
FFileViewImageComponent.ctorParameters = () => [];
FFileViewImageComponent.propDecorators = {
    maxHeight: [{ type: Input }],
    maxWidth: [{ type: Input }],
    cls: [{ type: HostBinding, args: ['class.f-file-view-image',] }],
    selfHeight: [{ type: HostBinding, args: ['style.height',] }],
    canvas: [{ type: ViewChild, args: ['canvas',] }],
    file: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    FFileViewImageComponent.prototype.maxHeight;
    /** @type {?} */
    FFileViewImageComponent.prototype.maxWidth;
    /** @type {?} */
    FFileViewImageComponent.prototype.cls;
    /** @type {?} */
    FFileViewImageComponent.prototype.selfHeight;
    /** @type {?} */
    FFileViewImageComponent.prototype.canvas;
    /**
     * @type {?}
     * @private
     */
    FFileViewImageComponent.prototype.tFile;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZi1maWxlLXZpZXctaW1hZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9leHRlbmQtZmlsZS11cGxvYWQvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy92aWV3LWltYWdlL2YtZmlsZS12aWV3LWltYWdlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsV0FBVyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFRLE1BQU0sZUFBZSxDQUFDO0FBTW5HLE1BQU0sT0FBTyx1QkFBdUI7SUFnQmxDO1FBZlMsY0FBUyxHQUFHLEdBQUcsQ0FBQztRQUNoQixhQUFRLEdBQUcsR0FBRyxDQUFDO1FBQ2dCLFFBQUcsR0FBRyxJQUFJLENBQUM7UUFDdEIsZUFBVSxHQUFDLE1BQU0sQ0FBQztJQVkvQixDQUFDOzs7OztJQVRqQixJQUNJLElBQUksQ0FBQyxXQUFpQjtRQUN4QixJQUFJLENBQUMsS0FBSyxHQUFHLFdBQVcsQ0FBQztRQUN6QixJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztJQUM3QixDQUFDOzs7O0lBQ0QsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7Ozs7SUFJRCxRQUFRO0lBQ1IsQ0FBQzs7Ozs7OztJQUNPLGVBQWUsQ0FBQyxXQUFXLEVBQUMsWUFBWTtRQUU5QyxTQUFTOzs7O1lBR0wsV0FBVyxHQUFHLFdBQVc7O1lBQUUsWUFBWSxHQUFHLFlBQVk7UUFDMUQsbUJBQW1CO1FBQ25CLElBQUksV0FBVyxHQUFHLElBQUksQ0FBQyxRQUFRLElBQUksWUFBWSxHQUFHLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDaEUsSUFBSSxXQUFXLEdBQUcsWUFBWSxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsRUFBRTtnQkFDL0QsY0FBYztnQkFDZCxXQUFXLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztnQkFDNUIsWUFBWSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDO2FBQ3pFO2lCQUFNO2dCQUNMLFlBQVksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO2dCQUM5QixXQUFXLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsV0FBVyxHQUFHLFlBQVksQ0FBQyxDQUFDLENBQUM7YUFDekU7U0FDRjtRQUNELElBQUksQ0FBQyxVQUFVLEdBQUMsWUFBWSxHQUFDLElBQUksQ0FBQztRQUNsQyxPQUFPO1lBQ0wsS0FBSyxFQUFFLFdBQVc7WUFDbEIsTUFBTSxFQUFFLFlBQVk7U0FDckIsQ0FBQTtJQUNILENBQUM7Ozs7OztJQUdPLG1CQUFtQjs7WUFDckIsTUFBTSxHQUFHLElBQUksVUFBVSxFQUFFOztZQUN6QixNQUFNLEdBQUcsSUFBSSxLQUFLLEVBQUU7O1lBQ3BCLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWE7O1lBQ2xDLE9BQU8sR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQztRQUNyQyxrQkFBa0I7UUFDbEIsTUFBTSxDQUFDLE1BQU07OztRQUFHLEdBQUcsRUFBRTs7Z0JBQ2YsT0FBTyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBQyxNQUFNLENBQUMsTUFBTSxDQUFDO1lBQzlELGdCQUFnQjtZQUNoQixNQUFNLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUM7WUFDN0IsTUFBTSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDO1lBQy9CLE9BQU87WUFDUCxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUMsSUFBSSxDQUFDLFFBQVEsRUFBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDckQsT0FBTztZQUNQLE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsT0FBTyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDakUsQ0FBQyxDQUFBLENBQUM7UUFFRix1QkFBdUI7UUFDdkIsTUFBTSxDQUFDLE1BQU07Ozs7UUFBRSxDQUFDLEVBQUUsRUFBQyxFQUFFO1lBQ25CLE1BQU0sQ0FBQyxHQUFHLEdBQUcsbUJBQUEsTUFBTSxDQUFDLE1BQU0sRUFBVSxDQUFDO1FBQ3ZDLENBQUMsQ0FBQSxDQUFDO1FBQ0YsTUFBTSxDQUFDLE9BQU87Ozs7UUFBRyxVQUFVLENBQUM7UUFDNUIsQ0FBQyxDQUFBLENBQUE7UUFDRCxNQUFNLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7WUExRUYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxtQkFBbUI7Z0JBQzdCLHVFQUFpRDs7YUFFbEQ7Ozs7O3dCQUVFLEtBQUs7dUJBQ0wsS0FBSztrQkFDTCxXQUFXLFNBQUMseUJBQXlCO3lCQUNyQyxXQUFXLFNBQUMsY0FBYztxQkFDMUIsU0FBUyxTQUFDLFFBQVE7bUJBRWxCLEtBQUs7Ozs7SUFOTiw0Q0FBeUI7O0lBQ3pCLDJDQUF3Qjs7SUFDeEIsc0NBQW1EOztJQUNuRCw2Q0FBK0M7O0lBQy9DLHlDQUF3Qzs7Ozs7SUFDeEMsd0NBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIEhvc3RCaW5kaW5nLCBJbnB1dCwgVmlld0NoaWxkLCBFbGVtZW50UmVmLCBIb3N0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnZi1maWxlLXZpZXctaW1hZ2UnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9mLWZpbGUtdmlldy1pbWFnZS5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vZi1maWxlLXZpZXctaW1hZ2UuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGRmlsZVZpZXdJbWFnZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQElucHV0KCkgbWF4SGVpZ2h0ID0gMjAwO1xyXG4gIEBJbnB1dCgpIG1heFdpZHRoID0gMzAwO1xyXG4gIEBIb3N0QmluZGluZygnY2xhc3MuZi1maWxlLXZpZXctaW1hZ2UnKSBjbHMgPSB0cnVlO1xyXG4gIEBIb3N0QmluZGluZygnc3R5bGUuaGVpZ2h0Jykgc2VsZkhlaWdodD0nNTBweCc7XHJcbiAgQFZpZXdDaGlsZCgnY2FudmFzJykgY2FudmFzOiBFbGVtZW50UmVmO1xyXG4gIHByaXZhdGUgdEZpbGU6IEZpbGU7XHJcbiAgQElucHV0KClcclxuICBzZXQgZmlsZShmaWxlQ29udGVudDogRmlsZSkge1xyXG4gICAgdGhpcy50RmlsZSA9IGZpbGVDb250ZW50O1xyXG4gICAgdGhpcy5jcmVhdGVJbWFnZUJ5Q2FudmFzKCk7XHJcbiAgfVxyXG4gIGdldCBmaWxlKCk6IEZpbGUge1xyXG4gICAgcmV0dXJuIHRoaXMudEZpbGU7XHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcbiAgcHJpdmF0ZSBjaGFuZ2VJbWFnZVNpemUob3JpZ2luV2lkdGgsb3JpZ2luSGVpZ2h0KSB7XHJcblxyXG4gICAgLy8g5Zu+54mH5Y6f5aeL5bC65a+4XHJcblxyXG4gICAgLy8g55uu5qCH5bC65a+4XHJcbiAgICB2YXIgdGFyZ2V0V2lkdGggPSBvcmlnaW5XaWR0aCwgdGFyZ2V0SGVpZ2h0ID0gb3JpZ2luSGVpZ2h0O1xyXG4gICAgLy8g5Zu+54mH5bC65a+46LaF6L+HNDAweDQwMOeahOmZkOWItlxyXG4gICAgaWYgKG9yaWdpbldpZHRoID4gdGhpcy5tYXhXaWR0aCB8fCBvcmlnaW5IZWlnaHQgPiB0aGlzLm1heEhlaWdodCkge1xyXG4gICAgICBpZiAob3JpZ2luV2lkdGggLyBvcmlnaW5IZWlnaHQgPiB0aGlzLm1heFdpZHRoIC8gdGhpcy5tYXhIZWlnaHQpIHtcclxuICAgICAgICAvLyDmm7Tlrr3vvIzmjInnhaflrr3luqbpmZDlrprlsLrlr7hcclxuICAgICAgICB0YXJnZXRXaWR0aCA9IHRoaXMubWF4V2lkdGg7XHJcbiAgICAgICAgdGFyZ2V0SGVpZ2h0ID0gTWF0aC5yb3VuZCh0aGlzLm1heFdpZHRoICogKG9yaWdpbkhlaWdodCAvIG9yaWdpbldpZHRoKSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGFyZ2V0SGVpZ2h0ID0gdGhpcy5tYXhIZWlnaHQ7XHJcbiAgICAgICAgdGFyZ2V0V2lkdGggPSBNYXRoLnJvdW5kKHRoaXMubWF4SGVpZ2h0ICogKG9yaWdpbldpZHRoIC8gb3JpZ2luSGVpZ2h0KSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHRoaXMuc2VsZkhlaWdodD10YXJnZXRIZWlnaHQrXCJweFwiO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgd2lkdGg6IHRhcmdldFdpZHRoLFxyXG4gICAgICBoZWlnaHQ6IHRhcmdldEhlaWdodFxyXG4gICAgfVxyXG4gIH1cclxuICAvLyDljovnvKnlm77niYfpnIDopoHnmoTkuIDkupvlhYPntKDlkozlr7nosaFcclxuXHJcbiAgcHJpdmF0ZSBjcmVhdGVJbWFnZUJ5Q2FudmFzKCkge1xyXG4gICAgbGV0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XHJcbiAgICBsZXQgdEltYWdlID0gbmV3IEltYWdlKCk7XHJcbiAgICBsZXQgY2FudmFzID0gdGhpcy5jYW52YXMubmF0aXZlRWxlbWVudDtcclxuICAgIGxldCBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XHJcbiAgICAvLyBiYXNlNjTlnLDlnYDlm77niYfliqDovb3lrozmr5XlkI5cclxuICAgIHRJbWFnZS5vbmxvYWQgPSAoKSA9PiB7XHJcbiAgICAgIGxldCBpbWdTaXplID0gdGhpcy5jaGFuZ2VJbWFnZVNpemUodEltYWdlLndpZHRoLHRJbWFnZS5oZWlnaHQpO1xyXG4gICAgICAvLyBjYW52YXPlr7nlm77niYfov5vooYznvKnmlL5cclxuICAgICAgY2FudmFzLndpZHRoID0gaW1nU2l6ZS53aWR0aDtcclxuICAgICAgY2FudmFzLmhlaWdodCA9IGltZ1NpemUuaGVpZ2h0O1xyXG4gICAgICAvLyDmuIXpmaTnlLvluINcclxuICAgICAgY29udGV4dC5jbGVhclJlY3QoMCwgMCx0aGlzLm1heFdpZHRoLHRoaXMubWF4SGVpZ2h0KTtcclxuICAgICAgLy8g5Zu+54mH5Y6L57ypXHJcbiAgICAgIGNvbnRleHQuZHJhd0ltYWdlKHRJbWFnZSwgMCwgMCwgaW1nU2l6ZS53aWR0aCwgaW1nU2l6ZS5oZWlnaHQpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvLyDmlofku7ZiYXNlNjTljJbvvIzku6Xkvr/ojrfnn6Xlm77niYfljp/lp4vlsLrlr7hcclxuICAgIHJlYWRlci5vbmxvYWQgPShldik9PntcclxuICAgICAgdEltYWdlLnNyYyA9IHJlYWRlci5yZXN1bHQgYXMgc3RyaW5nO1xyXG4gICAgfTtcclxuICAgIHJlYWRlci5vbmVycm9yID0gZnVuY3Rpb24gKGUpIHtcclxuICAgIH1cclxuICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKHRoaXMuZmlsZSk7XHJcbiAgfVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG59XHJcbiJdfQ==