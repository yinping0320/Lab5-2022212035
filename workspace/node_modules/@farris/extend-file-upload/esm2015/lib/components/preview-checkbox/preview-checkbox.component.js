/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/preview-checkbox/preview-checkbox.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, HostBinding, } from "@angular/core";
export class PreviewCheckboxComponent {
    constructor() {
        this.cls1 = true;
        this.cls2 = true;
        this.cls3 = true;
        this.checked = false;
        this.disabled = false;
        this.showDragBar = false;
        this.checkedChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @param {?} event
     * @return {?}
     */
    clickHandler(event) {
        event.stopPropagation();
        if (!this.disabled) {
            this.checked = !this.checked;
            this.checkedChange.emit({ checked: this.checked, id: this.id });
        }
    }
}
PreviewCheckboxComponent.decorators = [
    { type: Component, args: [{
                selector: "f-file-preview-checkbox",
                template: "\r\n<span class=\"f-icon f-icon-drag-vertical upfile-drag-handle\" *ngIf=\"showDragBar\"></span>\r\n\r\n<div class=\"custom-control custom-checkbox f-checkradio-single  m-0\" >\r\n  <input class=\"custom-control-input\" type=\"checkbox\"  [checked]=\"checked\" />\r\n  <label class=\"custom-control-label\" (click)=\"clickHandler($event)\" (mousedown)=\"$event.stopPropagation()\"></label>\r\n</div>"
            }] }
];
/** @nocollapse */
PreviewCheckboxComponent.ctorParameters = () => [];
PreviewCheckboxComponent.propDecorators = {
    cls1: [{ type: HostBinding, args: ["class.align-middle",] }],
    cls2: [{ type: HostBinding, args: ["class.d-inline-flex",] }],
    cls3: [{ type: HostBinding, args: ["class.preview-checkbox",] }],
    checked: [{ type: Input }],
    id: [{ type: Input }],
    disabled: [{ type: Input }],
    showDragBar: [{ type: Input }],
    checkedChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    PreviewCheckboxComponent.prototype.cls1;
    /** @type {?} */
    PreviewCheckboxComponent.prototype.cls2;
    /** @type {?} */
    PreviewCheckboxComponent.prototype.cls3;
    /** @type {?} */
    PreviewCheckboxComponent.prototype.checked;
    /** @type {?} */
    PreviewCheckboxComponent.prototype.id;
    /** @type {?} */
    PreviewCheckboxComponent.prototype.disabled;
    /** @type {?} */
    PreviewCheckboxComponent.prototype.showDragBar;
    /** @type {?} */
    PreviewCheckboxComponent.prototype.checkedChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJldmlldy1jaGVja2JveC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2V4dGVuZC1maWxlLXVwbG9hZC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3ByZXZpZXctY2hlY2tib3gvcHJldmlldy1jaGVja2JveC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQ0gsU0FBUyxFQUVULEtBQUssRUFDTCxNQUFNLEVBQ04sWUFBWSxFQUNaLFdBQVcsR0FDZCxNQUFNLGVBQWUsQ0FBQztBQU92QixNQUFNLE9BQU8sd0JBQXdCO0lBYWpDO1FBWm1DLFNBQUksR0FBRyxJQUFJLENBQUM7UUFDWCxTQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ1QsU0FBSSxHQUFHLElBQUksQ0FBQztRQUUxQyxZQUFPLEdBQVksS0FBSyxDQUFDO1FBRXpCLGFBQVEsR0FBWSxLQUFLLENBQUM7UUFFMUIsZ0JBQVcsR0FBRyxLQUFLLENBQUM7UUFFbkIsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBRTdCLENBQUM7Ozs7SUFFakIsUUFBUSxLQUFLLENBQUM7Ozs7O0lBRWQsWUFBWSxDQUFDLEtBQUs7UUFDZCxLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDN0IsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7U0FDbkU7SUFDTCxDQUFDOzs7WUE1QkosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSx5QkFBeUI7Z0JBQ25DLDJaQUFnRDthQUVuRDs7Ozs7bUJBRUksV0FBVyxTQUFDLG9CQUFvQjttQkFDaEMsV0FBVyxTQUFDLHFCQUFxQjttQkFDakMsV0FBVyxTQUFDLHdCQUF3QjtzQkFFcEMsS0FBSztpQkFDTCxLQUFLO3VCQUNMLEtBQUs7MEJBRUwsS0FBSzs0QkFFTCxNQUFNOzs7O0lBVlAsd0NBQStDOztJQUMvQyx3Q0FBZ0Q7O0lBQ2hELHdDQUFtRDs7SUFFbkQsMkNBQWtDOztJQUNsQyxzQ0FBb0I7O0lBQ3BCLDRDQUFtQzs7SUFFbkMsK0NBQTZCOztJQUU3QixpREFBNkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gICAgQ29tcG9uZW50LFxyXG4gICAgT25Jbml0LFxyXG4gICAgSW5wdXQsXHJcbiAgICBPdXRwdXQsXHJcbiAgICBFdmVudEVtaXR0ZXIsXHJcbiAgICBIb3N0QmluZGluZyxcclxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogXCJmLWZpbGUtcHJldmlldy1jaGVja2JveFwiLFxyXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9wcmV2aWV3LWNoZWNrYm94LmNvbXBvbmVudC5odG1sXCIsXHJcbiAgICBzdHlsZVVybHM6IFtdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgUHJldmlld0NoZWNrYm94Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIEBIb3N0QmluZGluZyhcImNsYXNzLmFsaWduLW1pZGRsZVwiKSBjbHMxID0gdHJ1ZTtcclxuICAgIEBIb3N0QmluZGluZyhcImNsYXNzLmQtaW5saW5lLWZsZXhcIikgY2xzMiA9IHRydWU7XHJcbiAgICBASG9zdEJpbmRpbmcoXCJjbGFzcy5wcmV2aWV3LWNoZWNrYm94XCIpIGNsczMgPSB0cnVlO1xyXG5cclxuICAgIEBJbnB1dCgpIGNoZWNrZWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIEBJbnB1dCgpIGlkOiBzdHJpbmc7XHJcbiAgICBASW5wdXQoKSBkaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICAgIEBJbnB1dCgpIHNob3dEcmFnQmFyID0gZmFsc2U7XHJcblxyXG4gICAgQE91dHB1dCgpIGNoZWNrZWRDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgICBuZ09uSW5pdCgpIHsgfVxyXG5cclxuICAgIGNsaWNrSGFuZGxlcihldmVudCkge1xyXG4gICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgIGlmICghdGhpcy5kaXNhYmxlZCkge1xyXG4gICAgICAgICAgICB0aGlzLmNoZWNrZWQgPSAhdGhpcy5jaGVja2VkO1xyXG4gICAgICAgICAgICB0aGlzLmNoZWNrZWRDaGFuZ2UuZW1pdCh7IGNoZWNrZWQ6IHRoaXMuY2hlY2tlZCwgaWQ6IHRoaXMuaWQgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==