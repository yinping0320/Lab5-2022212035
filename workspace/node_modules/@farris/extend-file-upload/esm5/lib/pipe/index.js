/**
 * @fileoverview added by tsickle
 * Generated from: lib/pipe/index.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from "@angular/core";
import { Injector } from "@angular/core";
import { ColumnFormatService } from "@farris/ui-common/column";
import { FFileUtils } from "../utils/f-file.utils";
import { DateTimeHelperService } from "@farris/ui-common/date";
/**
 * 文件大小格式化
 */
var FFileSizePipe = /** @class */ (function () {
    function FFileSizePipe() {
    }
    /**
     * @param {?} value
     * @param {?=} args
     * @return {?}
     */
    FFileSizePipe.prototype.transform = /**
     * @param {?} value
     * @param {?=} args
     * @return {?}
     */
    function (value, args) {
        // 如果是字符串
        /** @type {?} */
        var tvalue = value;
        if (!value) {
            return "0 Byte";
        }
        if (typeof value == "string") {
            tvalue = parseInt(value);
        }
        return FFileUtils.humanizeBytes(tvalue);
    };
    FFileSizePipe.decorators = [
        { type: Pipe, args: [{
                    name: "fFileSize",
                },] }
    ];
    return FFileSizePipe;
}());
export { FFileSizePipe };
/**
 * 日期格式化
 */
var FFileDatePipe = /** @class */ (function () {
    function FFileDatePipe(dateSer) {
        this.dateSer = dateSer;
    }
    /**
     * @param {?} value
     * @param {?=} returnFormat
     * @return {?}
     */
    FFileDatePipe.prototype.transform = /**
     * @param {?} value
     * @param {?=} returnFormat
     * @return {?}
     */
    function (value, returnFormat) {
        if (returnFormat === void 0) { returnFormat = "yyyy-MM-dd"; }
        if (!value)
            return '';
        return this.dateSer.formatTo(value, returnFormat);
    };
    FFileDatePipe.decorators = [
        { type: Pipe, args: [{
                    name: "fFileDate",
                },] }
    ];
    /** @nocollapse */
    FFileDatePipe.ctorParameters = function () { return [
        { type: DateTimeHelperService }
    ]; };
    return FFileDatePipe;
}());
export { FFileDatePipe };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FFileDatePipe.prototype.dateSer;
}
/**
 * 格式化自定义数据
 */
var FormatCellDataPipe = /** @class */ (function () {
    function FormatCellDataPipe(cfs, injector) {
        this.cfs = cfs;
        this.injector = injector;
        // 先不处理多语言
        this.localeId = "ZH-CHS";
    }
    /**
     * 格式化数据
     * @param column:列信息
     * @param rowData:当前数据
     * @param settings:配置信息
     * @param state: 状态
     * @returns
     */
    /**
     * 格式化数据
     * @param {?} column
     * @param {?} rowData
     * @param {?} rowIndex
     * @param {?} settings
     * @param {?=} state
     * @return {?}
     */
    FormatCellDataPipe.prototype.transform = /**
     * 格式化数据
     * @param {?} column
     * @param {?} rowData
     * @param {?} rowIndex
     * @param {?} settings
     * @param {?=} state
     * @return {?}
     */
    function (column, rowData, rowIndex, settings, state) {
        if (state === void 0) { state = "preview"; }
        if (rowData && column && column.field) {
            // 值
            /** @type {?} */
            var value = this.getRealDataValue(rowData, column.field);
            /** @type {?} */
            var formatterFn = column.formatter;
            if (formatterFn) {
                if (formatterFn.type === "number") {
                    if (!formatterFn.options ||
                        !Object.keys(formatterFn.options).length) {
                        formatterFn.options = {
                            thousand: ",",
                            precision: 2,
                        };
                    }
                }
                // 不需要特殊处理
                // if (formatterFn.type === "datetime") {
                // }
            }
            //参数1： 值，参数2：行数据 参数3：格式化方法
            return this.cfs.format(value, rowData, formatterFn, { rowIndex: rowIndex, settings: settings });
        }
        return "";
    };
    /**
     * 获取真正的数据
     * @param rowData
     * @param field
     * @returns
     */
    /**
     * 获取真正的数据
     * @private
     * @param {?} rowData
     * @param {?} field
     * @return {?}
     */
    FormatCellDataPipe.prototype.getRealDataValue = /**
     * 获取真正的数据
     * @private
     * @param {?} rowData
     * @param {?} field
     * @return {?}
     */
    function (rowData, field) {
        if (!field || !rowData)
            return '';
        /** @type {?} */
        var fieldArray = field.split('.');
        if (fieldArray.length == 1) {
            return rowData[fieldArray[0]];
        }
        /** @type {?} */
        var curItemVal = rowData;
        for (var k = 0; k < fieldArray.length; k++) {
            curItemVal = curItemVal[fieldArray[k]];
            // 没有值或者没有此属性
            if (curItemVal == null || curItemVal == undefined) {
                break;
            }
        }
        if (k == fieldArray.length) {
            return curItemVal == null || curItemVal == undefined ? "" : curItemVal;
        }
        else {
            return '';
        }
    };
    FormatCellDataPipe.decorators = [
        { type: Pipe, args: [{ name: "formatCellData", pure: false },] }
    ];
    /** @nocollapse */
    FormatCellDataPipe.ctorParameters = function () { return [
        { type: ColumnFormatService },
        { type: Injector }
    ]; };
    return FormatCellDataPipe;
}());
export { FormatCellDataPipe };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FormatCellDataPipe.prototype.elRef;
    /**
     * @type {?}
     * @private
     */
    FormatCellDataPipe.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    FormatCellDataPipe.prototype.cfs;
    /**
     * @type {?}
     * @private
     */
    FormatCellDataPipe.prototype.injector;
}
/**
 * 附件可能之前生成的单据中并没有多语言服务
 * 调用附件的公共服务
 */
var UPLocalePipe = /** @class */ (function () {
    function UPLocalePipe() {
    }
    /**
     * @param {?} name
     * @param {...?} replaceVal
     * @return {?}
     */
    UPLocalePipe.prototype.transform = /**
     * @param {?} name
     * @param {...?} replaceVal
     * @return {?}
     */
    function (name) {
        var replaceVal = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            replaceVal[_i - 1] = arguments[_i];
        }
        return FFileUtils.getLocalStr(name, replaceVal);
    };
    UPLocalePipe.decorators = [
        { type: Pipe, args: [{ name: 'upLocale' },] }
    ];
    /** @nocollapse */
    UPLocalePipe.ctorParameters = function () { return []; };
    return UPLocalePipe;
}());
export { UPLocalePipe };
/**
 * 解决变量有个默认的文字，变量最终可能是默认值也可能不是
 */
var UPLocaleDefaultPipe = /** @class */ (function () {
    function UPLocaleDefaultPipe() {
    }
    /**
     * @param {?} realValue
     * @param {?} compareTxt
     * @param {?} localeName
     * @return {?}
     */
    UPLocaleDefaultPipe.prototype.transform = /**
     * @param {?} realValue
     * @param {?} compareTxt
     * @param {?} localeName
     * @return {?}
     */
    function (realValue, compareTxt, localeName) {
        if (realValue == compareTxt) {
            return FFileUtils.getLocalStr(localeName);
        }
        return realValue;
    };
    UPLocaleDefaultPipe.decorators = [
        { type: Pipe, args: [{ name: 'upLocaleDefault' },] }
    ];
    /** @nocollapse */
    UPLocaleDefaultPipe.ctorParameters = function () { return []; };
    return UPLocaleDefaultPipe;
}());
export { UPLocaleDefaultPipe };
//# sourceMappingURL=data:application/json;base64,