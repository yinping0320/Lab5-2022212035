/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/upload/f-file-upload.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, HostBinding, ViewChild, EventEmitter, Output, ContentChild, ElementRef, } from "@angular/core";
import { FFileSelectDirective, FFileDropDirective, FFileUploadDirective, } from "../../directive/index";
import { FFileUtils } from "../../utils/index";
import { FFileUploadAPIService, FFileUploaderService, } from "../../service/index";
import { NotifyService } from "@farris/ui-notify";
import { Observable, Subject } from "rxjs";
import { trigger, style, state, animate, transition } from "@angular/animations";
import { NgZone } from "@angular/core";
var FFileUploadComponent = /** @class */ (function () {
    function FFileUploadComponent(uploadAPISer, fileUploaderSer, notifyService, ngZone) {
        var _this = this;
        this.uploadAPISer = uploadAPISer;
        this.fileUploaderSer = fileUploaderSer;
        this.notifyService = notifyService;
        this.ngZone = ngZone;
        this.cls = true;
        // 启用图片预览
        this.enableImagePreview = true;
        // 启用立即上传
        this.uploadImmediately = false;
        // 上传完成后隐藏
        this.uploadedThenHide = true;
        // 禁用状态
        this.disabled = false;
        /**
         * 启用分块上传
         */
        this.enableSliceUpload = true;
        /**
         * 分块上传每片大小，单位：M, 默认 1M/块
         */
        this.chunkSize = 1;
        this.tVisible = true;
        // 需要重置,通过不断的赋值来改变
        this.needReset = new Subject();
        // 启用拖拽
        this.enableDrop = false;
        this.dropText = "可将文件拖拽此处";
        // 启用选择文件按钮
        this.enableSelect = true;
        this.selectText = "点击上传";
        // 启用多选
        this.multiple = true;
        // 已经上传文件
        this.uploadedCount = 0;
        // 宽度阈值，当宽度超过760时候，没有附件上传时，宽度是固定值，有附件上传时，有最大宽度值
        this.widthThreshold = 760;
        // 上传和删除对外抛出的事件
        this.fUploadDoneEvent = new EventEmitter();
        this.fUploadRemovedEvent = new EventEmitter();
        // 允许上传的文件类型
        this.allowedContentTypes = "*";
        // 默认不限制附件上传个数
        this.maxUploads = 0;
        // 单位KB，默认是12M
        this.maxFileSize = "12MB";
        this.selfUploadOpts = {};
        // 控制是否显示追加附件的面板
        this.showAppendPanel = false;
        // 显示loading
        this.showLoading = false;
        this.settings = {
            disabled: this.disabled,
            visible: this.visible,
        };
        this.files = [];
        this.uploadSelectInput = new EventEmitter();
        this.uploadDragInput = new EventEmitter();
        // 重置
        this.needReset.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            _this.reset();
        }));
        FFileUtils.getLocalState(this.notifyService.localeService);
    }
    Object.defineProperty(FFileUploadComponent.prototype, "visibleState", {
        // 不可见
        get: 
        // 不可见
        /**
         * @return {?}
         */
        function () {
            return !this.visible;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FFileUploadComponent.prototype, "selfDirectiveDefine", {
        // 自定义样式
        get: 
        // 自定义样式
        /**
         * @return {?}
         */
        function () {
            if (this.fFileUploadDir) {
                return true;
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FFileUploadComponent.prototype, "uploading", {
        get: /**
         * @return {?}
         */
        function () {
            return this.files.length > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FFileUploadComponent.prototype, "visible", {
        get: /**
         * @return {?}
         */
        function () {
            return this.tVisible;
        },
        // 是否可见
        set: 
        // 是否可见
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.tVisible = value;
            if (!value) {
                this.reset();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FFileUploadComponent.prototype, "options", {
        get: /**
         * @return {?}
         */
        function () {
            return this.selfUploadOpts;
        },
        // 上传配置项
        set: 
        // 上传配置项
        /**
         * @param {?} uploadOpts
         * @return {?}
         */
        function (uploadOpts) {
            if (uploadOpts) {
                if (uploadOpts.hasOwnProperty("allowedContentTypes")) {
                    this.allowedContentTypes = uploadOpts.allowedContentTypes.join(",");
                    this.allowedContentTypes =
                        this.allowedContentTypes == "" ? "*" : this.allowedContentTypes;
                }
                if (uploadOpts.hasOwnProperty("maxUploads")) {
                    this.maxUploads = uploadOpts.maxUploads;
                }
                if (uploadOpts.hasOwnProperty("maxFileSize")) {
                    this.maxFileSize = FFileUtils.humanizeBytes(1024 * 1024 * uploadOpts.maxFileSize);
                }
                this.selfUploadOpts = Object.assign(this.selfUploadOpts, uploadOpts);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FFileUploadComponent.prototype, "extendServerConfig", {
        /**
         * 每个组可以设置特殊服务参数，来覆盖默认的统一模块级配置
         */
        set: /**
         * 每个组可以设置特殊服务参数，来覆盖默认的统一模块级配置
         * @param {?} config
         * @return {?}
         */
        function (config) {
            if (config) {
                this.fileUploaderSer.setExtendServerConfig(config);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FFileUploadComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        // 模板的情况下只能是立即上传
        if (this.fFileUploadDir) {
            this.uploadImmediately = true;
        }
        this.computeWidthThreshold();
    };
    /**
     * 视图初始化后
     */
    /**
     * 视图初始化后
     * @return {?}
     */
    FFileUploadComponent.prototype.ngAfterViewInit = /**
     * 视图初始化后
     * @return {?}
     */
    function () { };
    /**
     * 触发绑定
     */
    /**
     * 触发绑定
     * @param {?} ev
     * @return {?}
     */
    FFileUploadComponent.prototype.triggerFileSelect = /**
     * 触发绑定
     * @param {?} ev
     * @return {?}
     */
    function (ev) {
        ev && ev.stopPropagation();
        // 禁用时
        if (this.disabled) {
            return false;
        }
        this.fileUpload.elementRef.nativeElement.click();
    };
    /**
     * 选择附件按钮，处理抛出事件
     * @param output
     */
    /**
     * 选择附件按钮，处理抛出事件
     * @param {?} output
     * @return {?}
     */
    FFileUploadComponent.prototype.selectUploadOutput = /**
     * 选择附件按钮，处理抛出事件
     * @param {?} output
     * @return {?}
     */
    function (output) {
        this.uploadOutputHandler(output);
    };
    /**
     * 拖拽区域处理抛出事件
     * @param output
     */
    /**
     * 拖拽区域处理抛出事件
     * @param {?} output
     * @return {?}
     */
    FFileUploadComponent.prototype.dropUploadOutput = /**
     * 拖拽区域处理抛出事件
     * @param {?} output
     * @return {?}
     */
    function (output) {
        if (this.enableSelect) {
            return;
        }
        // 暂不处理拖拽的事件
        if (output.type !== "dragOver" &&
            output.type !== "dragOut" &&
            output.type !== "drop") {
            this.uploadOutputHandler(output);
        }
    };
    /**
     * allAddedToQueue 选中文件追加到队列
     * @param output
     */
    /**
     * allAddedToQueue 选中文件追加到队列
     * @private
     * @param {?} output
     * @return {?}
     */
    FFileUploadComponent.prototype.uploadOutputHandler = /**
     * allAddedToQueue 选中文件追加到队列
     * @private
     * @param {?} output
     * @return {?}
     */
    function (output) {
        // 显示追加面板
        if (this.showAppendPanel) {
            this.showAppendPanel = false;
        }
        if (output.type === "addedToQueue" && typeof output.file !== "undefined") {
            this.files.push({ type: output.type, file: output.file });
            // 如果启用立即上传
            if (this.uploadImmediately) {
                this.showLoading = true;
                this.startUpload(output.file);
            }
        }
        else if (output.type === "start") {
            // 开始上传
            this.updateFilesState(output, "");
        }
        else if (output.type == "done") {
            // 上传完成
            this.updateFilesState(output, "done");
            this.fUploadDoneEvent.emit(FFileUtils.changeUploadFileToFileExtend(output.files));
            this.hideAfterLoaded(output);
            // 隐藏正在加载
            if (this.uploadImmediately &&
                this.showLoading &&
                this.allFileUploaded()) {
                this.showLoading = false;
            }
        }
        else if (output.type === "cancelled" ||
            output.type === "removed" ||
            output.type == "error") {
            // 删除或者移除文件
            this.files = this.files.filter((/**
             * @param {?} fileOutput
             * @return {?}
             */
            function (fileOutput) {
                return (output.files.findIndex((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return fileOutput.file.id == item.id; })) < 0);
            }));
            // 隐藏正在加载
            if (this.uploadImmediately &&
                this.showLoading &&
                this.allFileUploaded()) {
                this.showLoading = false;
            }
            this.showNotify(output);
        }
        else if (output.type === "rejected" &&
            typeof output.file !== "undefined") {
            // 上传被拒绝
            this.showNotify(output);
            // 隐藏正在加载
            if (this.uploadImmediately &&
                this.showLoading &&
                this.allFileUploaded()) {
                this.showLoading = false;
            }
        }
    };
    /**
     * @private
     * @param {?} output
     * @return {?}
     */
    FFileUploadComponent.prototype.showNotify = /**
     * @private
     * @param {?} output
     * @return {?}
     */
    function (output) {
        /** @type {?} */
        var notifyType = "warning";
        if (output.type == "cancelled" || output.type == "removed") {
            notifyType = "success";
        }
        /** @type {?} */
        var message = output.hasOwnProperty("message") ? output["message"] : "";
        this.notifyService[notifyType]((/** @type {?} */ ({
            msg: message,
            timeout: 3000,
        })));
    };
    // 判断是否所有文件都已上传
    // 判断是否所有文件都已上传
    /**
     * @private
     * @return {?}
     */
    FFileUploadComponent.prototype.allFileUploaded = 
    // 判断是否所有文件都已上传
    /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var findNotDoneIndex = this.files.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            /** @type {?} */
            var doneTypes = ["done", "cancelled", "removed"];
            /** @type {?} */
            var findTypeIndex = doneTypes.findIndex((/**
             * @param {?} type
             * @return {?}
             */
            function (type) {
                return type == item.type;
            }));
            return findTypeIndex == -1;
        }));
        return findNotDoneIndex == -1 ? true : false;
    };
    /**
     * 更新附件的状态
     * @param output
     * @param eventType
     */
    /**
     * 更新附件的状态
     * @private
     * @param {?} output
     * @param {?} eventType
     * @return {?}
     */
    FFileUploadComponent.prototype.updateFilesState = /**
     * 更新附件的状态
     * @private
     * @param {?} output
     * @param {?} eventType
     * @return {?}
     */
    function (output, eventType) {
        var _this = this;
        /** @type {?} */
        var startFiles = [];
        if (output.hasOwnProperty("files") && output.files.length > 0) {
            // 此处更新界面可能有性能问题
            startFiles = output.files;
        }
        else if (typeof output.file !== "undefined") {
            startFiles = [output.file];
        }
        eventType = eventType ? eventType : output.type;
        startFiles.map((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            /** @type {?} */
            var index = _this.files.findIndex((/**
             * @param {?} fileOutput
             * @return {?}
             */
            function (fileOutput) {
                return typeof item !== "undefined" && fileOutput.file.id === item.id;
            }));
            // 变更状态
            if (index > -1) {
                _this.files[index] = { type: eventType, file: item };
            }
        }));
    };
    /**单个文件上传 */
    /**
     * 单个文件上传
     * @param {?} file
     * @return {?}
     */
    FFileUploadComponent.prototype.startUpload = /**
     * 单个文件上传
     * @param {?} file
     * @return {?}
     */
    function (file) {
        /**
         * Todo:后续可以从上传区块上取内容进行扩展
         * @type {?}
         */
        var event = this.uploadAPISer.getAssignAPI("upload", {
            file: file,
            type: this.enableSliceUpload ? 'sliceUpload' : 'upload',
            data: this.extendDatas,
            chunkSize: this.chunkSize
        });
        this.inputUploadEventEmit(event);
    };
    /**
     * 上传所有
     */
    /**
     * 上传所有
     * @return {?}
     */
    FFileUploadComponent.prototype.startUploadAll = /**
     * 上传所有
     * @return {?}
     */
    function () {
        /**
         *  Todo：后续，如果每个数据不一样，此处的数据得重新归集
         * @type {?}
         */
        var event = this.uploadAPISer.getAssignAPI("uploadAll", {
            type: this.enableSliceUpload ? 'sliceUpload' : "uploadAll",
            files: [],
            data: this.extendDatas,
            chunkSize: this.chunkSize
        });
        this.inputUploadEventEmit(event);
    };
    /**
     * 已上传隐藏属性
     */
    /**
     * 已上传隐藏属性
     * @param {?} output
     * @return {?}
     */
    FFileUploadComponent.prototype.hideAfterLoaded = /**
     * 已上传隐藏属性
     * @param {?} output
     * @return {?}
     */
    function (output) {
        var _this = this;
        //上传完成后删除
        if (this.uploadedThenHide) {
            // this.ngZone.runOutsideAngular(() => {
            setTimeout((/**
             * @return {?}
             */
            function () {
                // 删除或者移除文件
                /** @type {?} */
                var ids = output.files.map((/**
                 * @param {?} fileItem
                 * @return {?}
                 */
                function (fileItem) { return fileItem.id; }));
                _this.files = _this.files.filter((/**
                 * @param {?} fileOutput
                 * @return {?}
                 */
                function (fileOutput) {
                    /** @type {?} */
                    var tIndex = ids.findIndex((/**
                     * @param {?} tId
                     * @return {?}
                     */
                    function (tId) { return tId == fileOutput.file.id; }));
                    return tIndex > -1 ? false : true;
                }));
                /** @type {?} */
                var event = _this.uploadAPISer.getAssignAPI("hide", {
                    type: "hide",
                    id: ids.join(","),
                });
                _this.inputUploadEventEmit(event);
            }), 1000);
            // });
        }
    };
    /**
     * 取消上传
     */
    /**
     * 取消上传
     * @param {?} id
     * @return {?}
     */
    FFileUploadComponent.prototype.cancelUpload = /**
     * 取消上传
     * @param {?} id
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var event = this.uploadAPISer.getAssignAPI("cancel", {
            id: id,
            type: "cancel",
        });
        this.inputUploadEventEmit(event);
    };
    /**
     * 删除已上传文件
     */
    /**
     * 删除已上传文件
     * @return {?}
     */
    FFileUploadComponent.prototype.removelAllUpload = /**
     * 删除已上传文件
     * @return {?}
     */
    function () {
        /** @type {?} */
        var event = this.uploadAPISer.getAssignAPI("removeAll", {
            type: "removeAll",
            files: [],
        });
        this.inputUploadEventEmit(event);
    };
    /**
     * 删除已上传文件
     */
    /**
     * 删除已上传文件
     * @param {?} id
     * @return {?}
     */
    FFileUploadComponent.prototype.removeFile = /**
     * 删除已上传文件
     * @param {?} id
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var event = this.uploadAPISer.getAssignAPI("remove", {
            id: id,
            type: "remove",
        });
        this.inputUploadEventEmit(event);
    };
    /** */
    /**
     *
     * @param bytes
     */
    /** */
    /**
     *
     * @param {?} bytes
     * @return {?}
     */
    FFileUploadComponent.prototype.formateBytes = /** */
    /**
     *
     * @param {?} bytes
     * @return {?}
     */
    function (bytes) {
        return FFileUtils.humanizeBytes(bytes);
    };
    /**
     * 判断是图片
     * @param type
     */
    /**
     * 判断是图片
     * @param {?} type
     * @return {?}
     */
    FFileUploadComponent.prototype.isImage = /**
     * 判断是图片
     * @param {?} type
     * @return {?}
     */
    function (type) {
        return type.indexOf("image") > -1;
    };
    // inProgress(progress) {
    //   console.log('进入inProgress');
    //   if (progress.data.percentage == 100) {
    //     return 'done'
    //   }
    //   if (progress.data.percentage == 0) {
    //     return 'uploadi';
    //   }
    //   return 'progress';
    // }
    /**
     * 是否判断有类型限制
     */
    // inProgress(progress) {
    //   console.log('进入inProgress');
    //   if (progress.data.percentage == 100) {
    //     return 'done'
    //   }
    //   if (progress.data.percentage == 0) {
    //     return 'uploadi';
    //   }
    //   return 'progress';
    // }
    /**
     * 是否判断有类型限制
     * @return {?}
     */
    FFileUploadComponent.prototype.judgeContentTypeLimit = 
    // inProgress(progress) {
    //   console.log('进入inProgress');
    //   if (progress.data.percentage == 100) {
    //     return 'done'
    //   }
    //   if (progress.data.percentage == 0) {
    //     return 'uploadi';
    //   }
    //   return 'progress';
    // }
    /**
     * 是否判断有类型限制
     * @return {?}
     */
    function () {
        /** @type {?} */
        var tTypes = this.allowedContentTypes.split(",");
        /** @type {?} */
        var hasAllIndex = tTypes.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            return item == "*";
        }));
        return hasAllIndex == -1;
    };
    /**
     * 判断是否有文件大小的限制
     */
    /**
     * 判断是否有文件大小的限制
     * @return {?}
     */
    FFileUploadComponent.prototype.judegeFileSizeLimit = /**
     * 判断是否有文件大小的限制
     * @return {?}
     */
    function () {
        return this.maxFileSize != "0 Byte";
    };
    /**
     * 追加
     */
    /**
     * 追加
     * @param {?} ev
     * @return {?}
     */
    FFileUploadComponent.prototype.appendNewFiles = /**
     * 追加
     * @param {?} ev
     * @return {?}
     */
    function (ev) {
        //启用拖拽
        if (this.enableDrop) {
            this.showAppendPanel = true;
        }
        else {
            ev && ev.stopPropagation();
            this.triggerFileSelect(ev);
        }
    };
    /**
     * 关闭追加面板
     */
    /**
     * 关闭追加面板
     * @return {?}
     */
    FFileUploadComponent.prototype.closeAppendPanel = /**
     * 关闭追加面板
     * @return {?}
     */
    function () {
        this.showAppendPanel = false;
    };
    /**
     * 统一触发 附件选择和拖拽附件的事件
     * @param ev
     */
    /**
     * 统一触发 附件选择和拖拽附件的事件
     * @private
     * @param {?} ev
     * @return {?}
     */
    FFileUploadComponent.prototype.inputUploadEventEmit = /**
     * 统一触发 附件选择和拖拽附件的事件
     * @private
     * @param {?} ev
     * @return {?}
     */
    function (ev) {
        // 如果文件上传启用
        if (this.enableSelect) {
            this.uploadSelectInput.emit(ev);
        }
        else {
            this.uploadDragInput.emit(ev);
        }
    };
    // 重置方法
    // 重置方法
    /**
     * @return {?}
     */
    FFileUploadComponent.prototype.reset = 
    // 重置方法
    /**
     * @return {?}
     */
    function () {
        this.files = [];
        // 如果文件上传启用
        if (this.enableSelect) {
            this.fileUpload && this.fileUpload.reset();
        }
        else {
            this.fileDropUpload && this.fileDropUpload.reset();
        }
        this.computeWidthThreshold();
    };
    /**
     * 计算阈值
     */
    /**
     * 计算阈值
     * @private
     * @return {?}
     */
    FFileUploadComponent.prototype.computeWidthThreshold = /**
     * 计算阈值
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        //
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var self = _this;
            setTimeout((/**
             * @return {?}
             */
            function () {
                /** @type {?} */
                var tNeedComputedCls = false;
                if (self.fFileUploadDir || !self.visible) {
                    tNeedComputedCls = false;
                }
                // 计算元素
                /** @type {?} */
                var assistEl = self.fFileUploadAssist
                    ? self.fFileUploadAssist.nativeElement
                    : null;
                if (assistEl) {
                    assistEl.parentElement.classList["add"]("ffileupload-default");
                }
                return;
                // // 超过阈值
                // if (assistEl && assistEl.getBoundingClientRect().width > self.widthThreshold) {
                //   tNeedComputedCls = true;
                // } else {
                //   tNeedComputedCls = false;
                // }
                // if (assistEl) {
                //   let actionFun = tNeedComputedCls ? 'add' : 'remove';
                //   assistEl.parentElement.classList[actionFun]('ffileupload-default');
                // }
            }), 0);
        }));
    };
    FFileUploadComponent.decorators = [
        { type: Component, args: [{
                    selector: "f-file-upload",
                    template: "<div class=\"ffileupload--assist\" #uploadAssist></div>\r\n<ng-container *ngIf=\"visible\">    \r\n    <ng-container *ngIf=\"enableSelect\">\r\n        <input type=\"file\" class=\"ffileupload--browser\" [disabled]=\"disabled\" FFileSelect [options]=\"options\"\r\n            (uploadOutput)=\"selectUploadOutput($event)\" [uploadInput]=\"uploadSelectInput\" [multiple]=\"multiple\"\r\n            [accept]=\"allowedContentTypes\"  [uploadedCount]=\"uploadedCount\">\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!fFileUploadDir\">\r\n        <ng-container *ngIf=\"enableDrop\">\r\n            <div class=\"ffileupload--drop-wrapper\"\r\n                [ngClass]=\"{'drop-wrapper--append':files.length>0,'drop-wrapper--append-show':showAppendPanel}\">\r\n                <div class=\"action-wrapper--is-upload drop-wrapper--header\" [ngClass]=\"showAppendPanel?'':'d-none'\">\r\n                    <div class=\"action-wrapper--header-left\">\r\n                        <button type=\"button\" class=\"btn btn-link mr-2\" (click)=\"closeAppendPanel()\">{{ 'upload.back' | upLocale }}</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"drop-wrapper--drop-area\" FFileDrop [options]=\"options\"\r\n                    (uploadOutput)=\"dropUploadOutput($event)\" [uploadInput]=\"uploadDragInput\" [disabled]=\"disabled\" [uploadedCount]=\"uploadedCount\">\r\n\r\n                    <button type=\"button\" class=\"btn-upload-icon\" [disabled]=\"disabled\" (click)=\"triggerFileSelect($event)\">\r\n                        <i class=\"f-icon f-icon-upload_big\"></i>\r\n                    </button>\r\n                    <div class=\"drop-wrapper--action\" *ngIf=\"!disabled\">\r\n                        <label class=\"drop-wrapper--action-label\">\r\n                            {{dropText | upLocaleDefault:'\u53EF\u5C06\u6587\u4EF6\u62D6\u62FD\u6B64\u5904':'upload.drop' }}\r\n                        </label> {{ 'upload.orText' | upLocale }} <button type=\"button\" class=\"drop-wrapper--action-select\" [disabled]=\"disabled\"\r\n                            (click)=\"triggerFileSelect($event)\">{{selectText|upLocaleDefault:'\u70B9\u51FB\u4E0A\u4F20':'upload.select'}}</button>\r\n                    </div>\r\n                    <ng-container *ngTemplateOutlet=\"beforeUploadSupportInfo\"></ng-container>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf=\"files.length>0\">\r\n                <ng-container *ngTemplateOutlet=\"afterSelectHeader\"></ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!enableDrop&&enableSelect\">\r\n            <div class=\"ffileupload--action-wrapper\" [ngClass]=\"{'select-wrapper--append':files.length>0}\">\r\n                <ng-container *ngIf=\"files.length==0;else afterSelectHeader\">\r\n                    <div class=\"action-wrapper--before-upload\">\r\n                        <button type=\"button\" class=\"btn-upload-icon\" [disabled]=\"disabled\"\r\n                            (click)=\"triggerFileSelect($event)\">\r\n                            <i class=\"f-icon f-icon-upload_big\"></i>\r\n                        </button>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n    <div *ngIf=\"fFileUploadDir&&fFileUploadDir.templateRef\" (click)=\"triggerFileSelect($event)\">\r\n        <ng-container [ngTemplateOutlet]=\"fFileUploadDir.templateRef\" [ngTemplateOutletContext]=\"{'disabled':disabled,'settings':settings,'uploadedCount':uploadedCount}\"></ng-container>\r\n    </div>\r\n    <!--\u5F53\u9009\u4E2D\u6587\u4EF6\u4E4B\u540E\u9690\u85CF-->\r\n    <ng-container *ngIf=\"!fFileUploadDir&&!enableDrop&&enableSelect&&files.length==0\">\r\n        <ng-container *ngTemplateOutlet=\"beforeUploadSupportInfo\"></ng-container>\r\n    </ng-container>\r\n    <!-- <div class=\"ffileupload--common-action\" *ngIf=\"files.length>0\">\r\n    <span class=\"common-action--info\">\u5171<span class=\"text-info mx-1\">{{files.length}}</span>\u4E2A\u6587\u4EF6</span>\r\n   <button type=\"button\" class=\"btn btn-link\" *ngIf=\"!uploadImmediately\">\u4E0A\u4F20\u6240\u6709</button>\r\n</div> -->\r\n    <ul class=\"ffileupload--list\" *ngIf=\"!uploadImmediately\">\r\n        <ng-container *ngFor=\"let fileItem of files\">\r\n            <!-- <ng-container *ngIf=\"!uploadImmediately||fileItem.type!='done'\"> -->\r\n            <li class=\"ffileupload--item\" [@hideUploaded]=\"uploadImmediately&&fileItem.type=='done'?'hide':''\">\r\n                <fieldset class=\"ffileupload--file-wrapper\">\r\n                    <legend>{{fileItem['file'].id}}</legend>\r\n                    <input type=\"hidden\" name=\"ffileupload\" [value]=\"fileItem['file'].nativeFile.name\" />\r\n                    <div class=\"ffileupload--file\"\r\n                        [ngClass]=\"isImage(fileItem['file'].type)?'ffileupload--file-imgpreview':'ffileupload--file-panel'\">\r\n                        <div class=\"ffileupload--action\">\r\n                            <div class=\"ffileupload--action-basic\">\r\n                                <div class=\"action-basic--info\">\r\n                                    <div class=\"action-basic--info-title\" [title]=\"fileItem['file'].nativeFile.name\">{{fileItem['file'].nativeFile.name}}</div>\r\n                                    <div class=\"action-basic--info-byte\">{{formateBytes(fileItem['file'].size)}}</div>\r\n                                </div>\r\n                                <ng-container [ngSwitch]=\"fileItem.type\">\r\n                                    <ng-container *ngSwitchCase=\"'done'\">\r\n                                        <div class=\"action-basic--state\">\r\n                                            <span>{{ 'upload.hasUploaded' | upLocale }}</span>\r\n                                        </div>\r\n                                        <div class=\"action-basic--action\">\r\n                                            <span class=\"action-basic--action-btn action-btn--done\" [title]=\"'upload.hasUploaded' | upLocale\"><i\r\n                                                    class=\"f-icon f-icon-checkmark\"></i></span>\r\n                                            <span class=\"action-basic--action-btn\" [title]=\"'upload.delText' | upLocale\"\r\n                                                (click)=\"removeFile(fileItem['file'].id)\"><i\r\n                                                    class=\"f-icon f-icon-enclosure_delete\"></i></span>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                    <ng-container *ngSwitchCase=\"'start'\">\r\n                                        <div class=\"action-basic--state\">\r\n                                            <span>{{ 'upload.uploading' | upLocale }}</span>\r\n                                        </div>\r\n                                        <div class=\"action-basic--action\">\r\n                                            <span class=\"action-basic--action-btn uploadpreview-btn--primary\"><i\r\n                                                    class=\"ffile-spin f-icon f-icon-refresh\"></i></span>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                    <ng-container *ngSwitchDefault>\r\n                                        <div class=\"action-basic--state\">\r\n                                            <span>{{ 'upload.waitUpload' | upLocale }}</span>\r\n                                        </div>\r\n                                        <div class=\"action-basic--action\">\r\n                                            <span class=\"action-basic--action-btn uploadpreview-btn--primary\" [title]=\"'upload.upload' | upLocale\"\r\n                                                (click)=\"startUpload(fileItem['file'])\"><i\r\n                                                    class=\"f-icon f-icon-enclosure_upload\"></i></span>\r\n                                            <span class=\"action-basic--action-btn\"  [title]=\"'upload.remove' | upLocale\"\r\n                                                (click)=\"cancelUpload(fileItem['file'].id)\"><i\r\n                                                    class=\"f-icon f-icon-enclosure_delete\"></i></span>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div>\r\n                        <ng-container *ngIf=\"enableImagePreview&&isImage(fileItem['file'].type)\">\r\n                            <f-file-view-image [file]=\"fileItem['file'].nativeFile\"></f-file-view-image>\r\n                        </ng-container>\r\n                    </div>\r\n                </fieldset>\r\n            </li>\r\n            <!-- </ng-container> -->\r\n        </ng-container>\r\n    </ul>\r\n    <div class=\"ffile-load-wrapper\" *ngIf=\"showLoading\">\r\n        <div class=\"loader\"></div>\r\n    </div>\r\n</ng-container>\r\n<ng-template #afterSelectHeader>\r\n    <div class=\"action-wrapper--is-upload\">\r\n        <div class=\"action-wrapper--header-title\"><span class=\"common-action--info\">{{ 'upload.waitUpload' | upLocale }}<span\r\n                    class=\"mx-1\">{{files.length}}</span>{{ 'upload.numFile' | upLocale }}</span></div>\r\n        <div class=\"action-wrapper--header-right\">\r\n            <button type=\"button\" class=\"btn btn-secondary btn-icontext\" (click)=\"appendNewFiles($event)\">\r\n                <span class=\"f-icon f-icon-add\"></span>{{ 'upload.upload' | upLocale }}\r\n            </button>\r\n        </div>\r\n        <div class=\"action-wrapper--header-left\">\r\n            <button type=\"button\" class=\"btn btn-primary  mr-2\" (click)=\"startUploadAll()\">{{ 'upload.mutilUpload' | upLocale }}</button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"removelAllUpload()\">{{ 'upload.cancelUpload' | upLocale }}</button>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-template #beforeUploadSupportInfo>\r\n    <div class=\"ffileupload--support-info\">\r\n        <ul class=\"support-info--wrapper\">\r\n            <li *ngIf=\"judgeContentTypeLimit()\">\r\n                <span>{{'uploadAndPreview.supportType' | upLocale }}\uFF1A</span>\r\n                <span class=\"support-info--item-detail\">{{allowedContentTypes}}</span>\r\n            </li>\r\n            <li *ngIf=\"judegeFileSizeLimit()\">\r\n                <span>{{'uploadAndPreview.maxSize' | upLocale }}\uFF1A</span>\r\n                <span class=\"support-info--item-detail\">{{maxFileSize}}</span>\r\n            </li>\r\n            <li *ngIf=\"maxUploads>0\">\r\n                <span>{{'uploadAndPreview.maxFileCount' | upLocale }}\uFF1A</span>\r\n                <span class=\"support-info--item-detail\">{{'uploadAndPreview.maxCountShow' | upLocale}}</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</ng-template>",
                    providers: [FFileUploaderService],
                    animations: [
                        trigger("hideUploaded", [
                            state("show", style({ opacity: 1, height: "*" })),
                            state("hide", style({ opacity: 0, height: 0 })),
                            // transition('* => void', [
                            //   style({ opacity: 1}),
                            //   animate(200, style({ opacity: 0}))
                            // ])
                            transition("* => hide", animate("0.5s")),
                        ]),
                    ],
                    styles: [":host{position:relative;display:block;padding:10px;background:#fafcfd;max-width:100%;max-height:100%;outline:0;border:1px dashed #d8dfed;border-radius:3px;font-size:13px;-webkit-transition:height .2s linear;transition:height .2s linear}:host.ffileupload-unvisible{display:none!important}:host.ffileupload-selfdefine{background:0 0;border:none;padding:0}.ffileupload--browser{position:absolute;margin:0;padding:0;left:1em;top:-9000px;width:calc(100% - 2em);opacity:0;font-size:0}:host.ffileupload-default{width:435px}:host.ffileupload-uploading{width:654px}.ffileupload--assist{width:100%;height:0;opacity:0}.drop-wrapper--drop-area{text-align:center;padding:10px 0 0}.drop-wrapper--action{padding:10px 16px 6px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;color:#6a6f79;-webkit-box-pack:center;justify-content:center}.drop-wrapper--drop-area .ffileupload--support-info{padding-top:0}.drop-wrapper--action-label{margin:0}.drop-wrapper--action-select{color:#1e5fb3;margin:0;padding:0 4px;box-shadow:none;outline:0;background:0 0;border:none}.ffileupload--action{cursor:pointer}.drop-wrapper--header{margin-bottom:.5rem!important}.drop-wrapper--append{position:absolute;top:0;left:0;right:0;z-index:100;height:0;background:rgba(250,250,250,.9);border-radius:1rem;overflow:hidden;-webkit-transition:height .2s linear;transition:height .2s linear}.drop-wrapper--append-show{padding:10px;height:210px}.action-wrapper--before-upload{padding:.5rem;text-align:center}.ffileupload--action-wrapper .btn-upload-icon,.ffileupload--drop-wrapper .btn-upload-icon{border:none;outline:0;box-shadow:none;color:#ccd5e1;background:0 0;margin:0 auto .5rem 0;cursor:pointer;padding:0}.ffileupload--action-wrapper .btn-upload-icon:disabled,.ffileupload--drop-wrapper .btn-upload-icon:disabled{cursor:default;opacity:.4}.ffileupload--action-wrapper .btn-upload-icon:hover,.ffileupload--drop-wrapper .btn-upload-icon:hover{color:#1e5fb3}.ffileupload--action-wrapper .btn-upload-icon:disabled:hover,.ffileupload--drop-wrapper .btn-upload-icon:disabled:hover{color:#ccd5e1}.btn-upload-icon .f-icon{font-size:36px;height:36px}.action-wrapper--is-upload{padding:4px 10px 16px;text-align:center;font-size:14px;margin:0 -10px;clear:both;overflow:hidden;position:relative}.action-wrapper--header-title{float:left}.action-wrapper--header-right{text-align:right;float:right;position:relative;z-index:100}.action-wrapper--header-left{float:left;position:relative;z-index:100}.ffileupload--item{margin:0 .625rem .625rem 0;list-style:none;width:100%;max-width:308px}.ffileupload--support-info{padding:0 .5rem .5rem;line-height:1.6;color:#b4bccc;text-align:center}.support-info--wrapper{padding:0;margin:0 auto}.support-info--wrapper li{padding:0;margin:0 4px 0 0;list-style:none;display:inline-block;word-break:break-all}.ffileupload--file-wrapper{border:none;margin:0;padding:0;min-width:0;height:100%;-webkit-transition:opacity .15s ease-out;transition:opacity .15s ease-out;position:relative}.ffileupload--file-wrapper>legend{position:absolute;overflow:hidden;height:1px;width:1px;padding:0;border:0;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);white-space:nowrap}.ffileupload--file{position:static;display:-webkit-box;display:flex;-webkit-box-align:start;align-items:flex-start;color:#2d2f33;border-radius:3px;overflow:hidden;background:#fff;border:1px solid #e5e8ed;box-shadow:0 2px 4px 0 rgba(220,227,237,.53);max-height:200px;height:100%;box-sizing:content-box}.f-file-view-image{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;height:100%;width:100%;pointer-events:none;will-change:transform,opacity;border-radius:1rem;min-height:6rem}.ffileupload--action-basic{display:-webkit-box;display:flex;padding:6px 10px;-webkit-box-align:center;align-items:center;min-height:66px}.ffileupload--list{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;flex-wrap:wrap;margin-right:-.625rem}.action-basic--info{-webkit-box-flex:1;flex:1 1 auto;white-space:nowrap;overflow:hidden}.action-basic--state{background:#e6f8f9;position:absolute;right:0;top:0;font-size:12px;color:#62c8ca;height:28px;min-width:56px;border-radius:0 0 0 50px/0 0 0 28px;text-align:right;line-height:24px;padding:0 6px 0 0}.action-basic--info-title{margin:0 0 4px;text-overflow:ellipsis;overflow:hidden}.action-basic--info-byte{color:rgba(45,47,51,.45)}.action-basic--action-btn{text-align:center;background:#c7d4ee;height:18px;width:18px;border-radius:9px;display:inline-block;line-height:18px;-webkit-transition:box-shadow .25s ease-in;transition:box-shadow .25s ease-in}.action-basic--action-btn:hover{box-shadow:0 0 0 .125em rgba(43,135,255,.2);background:#2b87ff}.action-btn--done{background:#51bd78!important;color:#fff}.action-basic--action-btn .f-icon{color:#fff;font-size:12px}.ffileupload--file-panel .ffileupload--action{width:100%}.action-basic--action{position:absolute;right:12px;bottom:14px}.action-basic--action-btn+.action-basic--action-btn{margin-left:12px}.ffileupload--common-action{border-top:1px solid #eaeaea;text-align:center;font-size:14px;margin:0 -10px;padding:4px}.common-action--info{margin:0 16px 0 0;display:inline-block}.common-action--info span{font-size:17px;font-weight:600}.ffileupload--file-imgpreview .ffileupload--action-basic{width:100%;height:100%;position:absolute;z-index:80;background:rgba(255,255,255,.8)}.ffile-spin{-webkit-animation:2s linear infinite fa-spin;animation:2s linear infinite ffile-spin}@-webkit-keyframes ffile-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes ffile-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}.ffile-load-wrapper{position:absolute;top:0;left:0;right:0;bottom:0;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;background:rgba(255,255,255,.4)}.ffile-load-wrapper .loader,.ffile-load-wrapper .loader:after,.ffile-load-wrapper .loader:before{background:#2a87ff;-webkit-animation:1s ease-in-out infinite ffile-load-spin;animation:1s ease-in-out infinite ffile-load-spin;width:2px;height:6px}.ffile-load-wrapper .loader{color:#2a87ff;text-indent:-200em;margin:0 auto;position:relative;font-size:12px;-webkit-transform:translateZ(0);transform:translateZ(0);-webkit-animation-delay:-.16s;animation-delay:-.16s}.ffile-load-wrapper .loader:after,.ffile-load-wrapper .loader:before{position:absolute;top:0;content:''}.ffile-load-wrapper .loader:before{left:-6px;-webkit-animation-delay:-.32s;animation-delay:-.32s}.ffile-load-wrapper .loader:after{left:6px}.ffileupload-default-size{width:432px}@-webkit-keyframes ffile-load-spin{0%,100%,80%{box-shadow:0 0;height:10px}40%{box-shadow:0 -6px;height:18px}}@keyframes ffile-load-spin{0%,100%,80%{box-shadow:0 0;height:10px}40%{box-shadow:0 -6px;height:18px}}"]
                }] }
    ];
    /** @nocollapse */
    FFileUploadComponent.ctorParameters = function () { return [
        { type: FFileUploadAPIService },
        { type: FFileUploaderService },
        { type: NotifyService },
        { type: NgZone }
    ]; };
    FFileUploadComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ["class.ffileupload",] }],
        visibleState: [{ type: HostBinding, args: ["class.ffileupload-unvisible",] }],
        selfDirectiveDefine: [{ type: HostBinding, args: ["class.ffileupload-selfdefine",] }],
        uploading: [{ type: HostBinding, args: ["class.ffileupload-uploading",] }],
        fFileUploadAssist: [{ type: ViewChild, args: ["uploadAssist",] }],
        fFileUploadDir: [{ type: ContentChild, args: [FFileUploadDirective,] }],
        fileUpload: [{ type: ViewChild, args: [FFileSelectDirective,] }],
        fileDropUpload: [{ type: ViewChild, args: [FFileDropDirective,] }],
        enableImagePreview: [{ type: Input }],
        uploadImmediately: [{ type: Input }],
        uploadedThenHide: [{ type: Input }],
        disabled: [{ type: Input }],
        enableSliceUpload: [{ type: Input }],
        chunkSize: [{ type: Input }],
        visible: [{ type: Input }],
        needReset: [{ type: Input }],
        enableDrop: [{ type: Input }],
        dropText: [{ type: Input }],
        enableSelect: [{ type: Input }],
        selectText: [{ type: Input }],
        multiple: [{ type: Input }],
        uploadedCount: [{ type: Input }],
        extendDatas: [{ type: Input }],
        widthThreshold: [{ type: Input }],
        fUploadDoneEvent: [{ type: Output }],
        fUploadRemovedEvent: [{ type: Output }],
        options: [{ type: Input }],
        extendServerConfig: [{ type: Input }]
    };
    return FFileUploadComponent;
}());
export { FFileUploadComponent };
if (false) {
    /** @type {?} */
    FFileUploadComponent.prototype.cls;
    /** @type {?} */
    FFileUploadComponent.prototype.fFileUploadAssist;
    /** @type {?} */
    FFileUploadComponent.prototype.fFileUploadDir;
    /** @type {?} */
    FFileUploadComponent.prototype.fileUpload;
    /** @type {?} */
    FFileUploadComponent.prototype.fileDropUpload;
    /** @type {?} */
    FFileUploadComponent.prototype.enableImagePreview;
    /** @type {?} */
    FFileUploadComponent.prototype.uploadImmediately;
    /** @type {?} */
    FFileUploadComponent.prototype.uploadedThenHide;
    /** @type {?} */
    FFileUploadComponent.prototype.disabled;
    /**
     * 启用分块上传
     * @type {?}
     */
    FFileUploadComponent.prototype.enableSliceUpload;
    /**
     * 分块上传每片大小，单位：M, 默认 1M/块
     * @type {?}
     */
    FFileUploadComponent.prototype.chunkSize;
    /**
     * @type {?}
     * @private
     */
    FFileUploadComponent.prototype.tVisible;
    /** @type {?} */
    FFileUploadComponent.prototype.needReset;
    /** @type {?} */
    FFileUploadComponent.prototype.enableDrop;
    /** @type {?} */
    FFileUploadComponent.prototype.dropText;
    /** @type {?} */
    FFileUploadComponent.prototype.enableSelect;
    /** @type {?} */
    FFileUploadComponent.prototype.selectText;
    /** @type {?} */
    FFileUploadComponent.prototype.multiple;
    /** @type {?} */
    FFileUploadComponent.prototype.uploadedCount;
    /** @type {?} */
    FFileUploadComponent.prototype.extendDatas;
    /** @type {?} */
    FFileUploadComponent.prototype.widthThreshold;
    /** @type {?} */
    FFileUploadComponent.prototype.fUploadDoneEvent;
    /** @type {?} */
    FFileUploadComponent.prototype.fUploadRemovedEvent;
    /** @type {?} */
    FFileUploadComponent.prototype.allowedContentTypes;
    /** @type {?} */
    FFileUploadComponent.prototype.maxUploads;
    /** @type {?} */
    FFileUploadComponent.prototype.maxFileSize;
    /**
     * @type {?}
     * @private
     */
    FFileUploadComponent.prototype.selfUploadOpts;
    /** @type {?} */
    FFileUploadComponent.prototype.files;
    /** @type {?} */
    FFileUploadComponent.prototype.uploadSelectInput;
    /** @type {?} */
    FFileUploadComponent.prototype.uploadDragInput;
    /** @type {?} */
    FFileUploadComponent.prototype.showAppendPanel;
    /** @type {?} */
    FFileUploadComponent.prototype.showLoading;
    /** @type {?} */
    FFileUploadComponent.prototype.settings;
    /** @type {?} */
    FFileUploadComponent.prototype.localInfo;
    /**
     * @type {?}
     * @private
     */
    FFileUploadComponent.prototype.uploadAPISer;
    /**
     * @type {?}
     * @private
     */
    FFileUploadComponent.prototype.fileUploaderSer;
    /**
     * @type {?}
     * @private
     */
    FFileUploadComponent.prototype.notifyService;
    /**
     * @type {?}
     * @private
     */
    FFileUploadComponent.prototype.ngZone;
}
//# sourceMappingURL=data:application/json;base64,