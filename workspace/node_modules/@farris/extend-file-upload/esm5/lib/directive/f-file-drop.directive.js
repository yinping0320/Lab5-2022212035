/**
 * @fileoverview added by tsickle
 * Generated from: lib/directive/f-file-drop.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, EventEmitter, Input, Output } from '@angular/core';
import { FFileUploaderService } from '../service/index';
var FFileDropDirective = /** @class */ (function () {
    function FFileDropDirective(elementRef, upload) {
        this.elementRef = elementRef;
        this.upload = upload;
        this.tDisabled = false;
        // eventListener
        this.dropListener = null;
        this.dragOverListener = null;
        this.dragLeaveListener = null;
        this.dragEnterListener = null;
        this.onDropEnter = (/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            e.stopPropagation();
            e.preventDefault();
        });
        this.uploadOutput = new EventEmitter();
    }
    Object.defineProperty(FFileDropDirective.prototype, "disabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this.tDisabled;
        },
        // 是否禁用
        set: 
        // 是否禁用
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this.tDisabled !== value) {
                this.tDisabled = value;
                if (value) {
                    this.unbindDragAndDropEvent();
                }
                else {
                    this.bindDragAndDropEvent();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FFileDropDirective.prototype, "options", {
        // 配置
        set: 
        // 配置
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.upload.setOptions(value);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FFileDropDirective.prototype, "uploadedCount", {
        // 已上传
        set: 
        // 已上传
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.upload.setOptions({ 'uploadedCount': value });
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FFileDropDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._sub = [];
        this.el = this.elementRef.nativeElement;
        this._sub.push(this.upload.serviceEvents.subscribe((/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            _this.uploadOutput.emit(event);
        })));
        if (this.uploadInput instanceof EventEmitter) {
            this._sub.push(this.upload.initInputEvents(this.uploadInput));
        }
        // 绑定事件
        if (!this.disabled) {
            this.bindDragAndDropEvent();
        }
    };
    /**
     * @return {?}
     */
    FFileDropDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.unbindDragAndDropEvent();
        this._sub.forEach((/**
         * @param {?} sub
         * @return {?}
         */
        function (sub) { return sub.unsubscribe(); }));
    };
    /**
     * @private
     * @return {?}
     */
    FFileDropDirective.prototype.bindDragAndDropEvent = /**
     * @private
     * @return {?}
     */
    function () {
        // this.ngzone.runOutsideAngular(() => {
        this.dropListener = this.onDrop.bind(this);
        this.el.addEventListener('drop', this.dropListener);
        this.dragOverListener = this.onDragOver.bind(this);
        this.el.addEventListener('dragover', this.dragOverListener);
        this.dragLeaveListener = this.onDragLeave.bind(this);
        this.el.addEventListener('dragleave', this.dragLeaveListener);
        this.dragEnterListener = this.onDropEnter.bind(this);
        this.el.addEventListener('dragenter', this.dragEnterListener);
        //  });
    };
    /**
     * @private
     * @return {?}
     */
    FFileDropDirective.prototype.unbindDragAndDropEvent = /**
     * @private
     * @return {?}
     */
    function () {
        this.dropListener && this.el.removeEventListener('drop', this.dropListener);
        this.dragOverListener && this.el.removeEventListener('dragover', this.dragOverListener);
        this.dragLeaveListener && this.el.removeEventListener('dragleave', this.dragLeaveListener);
        this.dragEnterListener && this.el.removeEventListener('dragenter', this.dragEnterListener);
    };
    // @HostListener('drop', ['$event'])
    // @HostListener('drop', ['$event'])
    /**
     * @param {?} e
     * @return {?}
     */
    FFileDropDirective.prototype.onDrop = 
    // @HostListener('drop', ['$event'])
    /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        e.stopPropagation();
        e.preventDefault();
        /** @type {?} */
        var event = { type: 'drop' };
        // console.log('dorp Events');
        this.uploadOutput.emit(event);
        this.upload.handleFiles(e.dataTransfer.files);
    };
    // @HostListener('dragover', ['$event'])
    // @HostListener('dragover', ['$event'])
    /**
     * @param {?} e
     * @return {?}
     */
    FFileDropDirective.prototype.onDragOver = 
    // @HostListener('dragover', ['$event'])
    /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        if (!e) {
            return;
        }
        e.stopPropagation();
        e.preventDefault();
        /** @type {?} */
        var event = { type: 'dragOver' };
        this.uploadOutput.emit(event);
    };
    // @HostListener('dragleave', ['$event'])
    // @HostListener('dragleave', ['$event'])
    /**
     * @param {?} e
     * @return {?}
     */
    FFileDropDirective.prototype.onDragLeave = 
    // @HostListener('dragleave', ['$event'])
    /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        if (!e) {
            return;
        }
        e.stopPropagation();
        e.preventDefault();
        /** @type {?} */
        var event = { type: 'dragOut' };
        this.uploadOutput.emit(event);
    };
    /**
     * 重置
     */
    /**
     * 重置
     * @return {?}
     */
    FFileDropDirective.prototype.reset = /**
     * 重置
     * @return {?}
     */
    function () {
        /*if (this.el) {
             this._sub.forEach(sub => sub.unsubscribe());
             this._sub = [];
             this.upload.reset();
         }*/
        this.upload.reset();
    };
    FFileDropDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[FFileDrop]'
                },] }
    ];
    /** @nocollapse */
    FFileDropDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: FFileUploaderService }
    ]; };
    FFileDropDirective.propDecorators = {
        disabled: [{ type: Input }],
        options: [{ type: Input }],
        uploadedCount: [{ type: Input }],
        uploadInput: [{ type: Input }],
        uploadOutput: [{ type: Output }]
    };
    return FFileDropDirective;
}());
export { FFileDropDirective };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FFileDropDirective.prototype.tDisabled;
    /** @type {?} */
    FFileDropDirective.prototype.uploadInput;
    /** @type {?} */
    FFileDropDirective.prototype.uploadOutput;
    /** @type {?} */
    FFileDropDirective.prototype.el;
    /** @type {?} */
    FFileDropDirective.prototype._sub;
    /** @type {?} */
    FFileDropDirective.prototype.dropListener;
    /** @type {?} */
    FFileDropDirective.prototype.dragOverListener;
    /** @type {?} */
    FFileDropDirective.prototype.dragLeaveListener;
    /** @type {?} */
    FFileDropDirective.prototype.dragEnterListener;
    /** @type {?} */
    FFileDropDirective.prototype.onDropEnter;
    /** @type {?} */
    FFileDropDirective.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    FFileDropDirective.prototype.upload;
    /* Skipping unhandled member: ;*/
    /* Skipping unhandled member: ;*/
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZi1maWxlLWRyb3AuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9leHRlbmQtZmlsZS11cGxvYWQvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlL2YtZmlsZS1kcm9wLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUV0RyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUd4RDtJQTZDSSw0QkFBbUIsVUFBc0IsRUFBVSxNQUE0QjtRQUE1RCxlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQVUsV0FBTSxHQUFOLE1BQU0sQ0FBc0I7UUF6Q3ZFLGNBQVMsR0FBRyxLQUFLLENBQUM7O1FBb0MxQixpQkFBWSxHQUFRLElBQUksQ0FBQztRQUN6QixxQkFBZ0IsR0FBUSxJQUFJLENBQUM7UUFDN0Isc0JBQWlCLEdBQVEsSUFBSSxDQUFDO1FBQzlCLHNCQUFpQixHQUFRLElBQUksQ0FBQztRQWdEOUIsZ0JBQVc7Ozs7UUFBRyxVQUFDLENBQVE7WUFDbkIsQ0FBQyxDQUFDLGVBQWUsRUFBRSxDQUFDO1lBQ3BCLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixDQUFDLEVBQUE7UUFoREcsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLFlBQVksRUFBZ0IsQ0FBQztJQUN6RCxDQUFDO0lBekNELHNCQUNJLHdDQUFROzs7O1FBVVo7WUFDSSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDMUIsQ0FBQztRQWRELE9BQU87Ozs7Ozs7UUFDUCxVQUNhLEtBQWM7WUFDdkIsSUFBSSxJQUFJLENBQUMsU0FBUyxLQUFLLEtBQUssRUFBRTtnQkFDMUIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7Z0JBQ3ZCLElBQUksS0FBSyxFQUFFO29CQUNQ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QUF5Qzs7Ozs7O0lBQ2xDLHdDQUFXOzs7Ozs7SUFBbEIsVUFBbUIsQ0FBUTtRQUN2QixJQUFJLENBQUMsQ0FBQyxFQUFFO1lBQ0osT0FBTztTQUNWO1FBQ0QsQ0FBQyxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3BCLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQzs7WUFDYixLQUFLLEdBQWlCLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtRQUMvQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBQ0Q7O09BRUc7Ozs7O0lBQ0gsa0NBQUs7Ozs7SUFBTDtRQUNHOzs7O1lBSUk7UUFDSCxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3hCLENBQUM7O2dCQTFJSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLGFBQWE7aUJBQzFCOzs7O2dCQVBtQixVQUFVO2dCQUVyQixvQkFBb0I7OzsyQkFTeEIsS0FBSzswQkFlTCxLQUFLO2dDQUtMLEtBQUs7OEJBS0wsS0FBSzsrQkFDTCxNQUFNOztJQTJHWCx5QkFBQztDQUFBLEFBM0lELElBMklDO1NBeElZLGtCQUFrQjs7Ozs7O0lBQzNCLHVDQUEwQjs7SUEyQjFCLHlDQUFnRDs7SUFDaEQsMENBQW1EOztJQUduRCxnQ0FBcUI7O0lBRXJCLGtDQUFxQjs7SUFHckIsMENBQXlCOztJQUN6Qiw4Q0FBNkI7O0lBQzdCLCtDQUE4Qjs7SUFDOUIsK0NBQThCOztJQWdEOUIseUNBR0M7O0lBakRXLHdDQUE2Qjs7Ozs7SUFBRSxvQ0FBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgT25Jbml0LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVXBsb2FkT3V0cHV0LCBVcGxvYWRJbnB1dCwgVXBsb2FkZXJPcHRpb25zIH0gZnJvbSAnLi4vbW9kZWwvaW5kZXgnO1xyXG5pbXBvcnQgeyBGRmlsZVVwbG9hZGVyU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2UvaW5kZXgnO1xyXG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gICAgc2VsZWN0b3I6ICdbRkZpbGVEcm9wXSdcclxufSlcclxuZXhwb3J0IGNsYXNzIEZGaWxlRHJvcERpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICAgIHByaXZhdGUgdERpc2FibGVkID0gZmFsc2U7XHJcbiAgICAvLyDmmK/lkKbnpoHnlKhcclxuICAgIEBJbnB1dCgpXHJcbiAgICBzZXQgZGlzYWJsZWQodmFsdWU6IGJvb2xlYW4pIHtcclxuICAgICAgICBpZiAodGhpcy50RGlzYWJsZWQgIT09IHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMudERpc2FibGVkID0gdmFsdWU7XHJcbiAgICAgICAgICAgIGlmICh2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy51bmJpbmREcmFnQW5kRHJvcEV2ZW50KCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJpbmREcmFnQW5kRHJvcEV2ZW50KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgZ2V0IGRpc2FibGVkKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnREaXNhYmxlZDtcclxuICAgIH1cclxuICAgIC8vIOmFjee9rlxyXG4gICAgQElucHV0KClcclxuICAgIHNldCBvcHRpb25zKHZhbHVlOiBVcGxvYWRlck9wdGlvbnMpIHtcclxuICAgICAgICB0aGlzLnVwbG9hZC5zZXRPcHRpb25zKHZhbHVlKTtcclxuICAgIH07XHJcbiAgICAvLyDlt7LkuIrkvKBcclxuICAgIEBJbnB1dCgpXHJcbiAgICBzZXQgdXBsb2FkZWRDb3VudCh2YWx1ZSl7XHJcbiAgICAgICAgdGhpcy51cGxvYWQuc2V0T3B0aW9ucyh7J3VwbG9hZGVkQ291bnQnOnZhbHVlfSk7XHJcbiAgICB9XHJcbiAgICAvLyDkvKDpgJJcclxuICAgIEBJbnB1dCgpIHVwbG9hZElucHV0OiBFdmVudEVtaXR0ZXI8VXBsb2FkSW5wdXQ+O1xyXG4gICAgQE91dHB1dCgpIHVwbG9hZE91dHB1dDogRXZlbnRFbWl0dGVyPFVwbG9hZE91dHB1dD47XHJcblxyXG4gICAgLy91cGxvYWQ6IEZGaWxlVXBsb2FkZXJTZXJ2aWNlO1xyXG4gICAgZWw6IEhUTUxJbnB1dEVsZW1lbnQ7XHJcblxyXG4gICAgX3N1YjogU3Vic2NyaXB0aW9uW107XHJcblxyXG4gICAgLy8gZXZlbnRMaXN0ZW5lclxyXG4gICAgZHJvcExpc3RlbmVyOiBhbnkgPSBudWxsO1xyXG4gICAgZHJhZ092ZXJMaXN0ZW5lcjogYW55ID0gbnVsbDtcclxuICAgIGRyYWdMZWF2ZUxpc3RlbmVyOiBhbnkgPSBudWxsO1xyXG4gICAgZHJhZ0VudGVyTGlzdGVuZXI6IGFueSA9IG51bGw7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHVibGljIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHByaXZhdGUgdXBsb2FkOiBGRmlsZVVwbG9hZGVyU2VydmljZSkge1xyXG4gICAgICAgIHRoaXMudXBsb2FkT3V0cHV0ID0gbmV3IEV2ZW50RW1pdHRlcjxVcGxvYWRPdXRwdXQ+KCk7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5fc3ViID0gW107XHJcbiAgICAgICAgdGhpcy5lbCA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xyXG5cclxuICAgICAgICB0aGlzLl9zdWIucHVzaChcclxuICAgICAgICAgICAgdGhpcy51cGxvYWQuc2VydmljZUV2ZW50cy5zdWJzY3JpYmUoKGV2ZW50OiBVcGxvYWRPdXRwdXQpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMudXBsb2FkT3V0cHV0LmVtaXQoZXZlbnQpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLnVwbG9hZElucHV0IGluc3RhbmNlb2YgRXZlbnRFbWl0dGVyKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1Yi5wdXNoKHRoaXMudXBsb2FkLmluaXRJbnB1dEV2ZW50cyh0aGlzLnVwbG9hZElucHV0KSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOe7keWumuS6i+S7tlxyXG4gICAgICAgIGlmICghdGhpcy5kaXNhYmxlZCkge1xyXG4gICAgICAgICAgICB0aGlzLmJpbmREcmFnQW5kRHJvcEV2ZW50KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG5nT25EZXN0cm95KCkge1xyXG4gICAgICAgIHRoaXMudW5iaW5kRHJhZ0FuZERyb3BFdmVudCgpO1xyXG4gICAgICAgIHRoaXMuX3N1Yi5mb3JFYWNoKHN1YiA9PiBzdWIudW5zdWJzY3JpYmUoKSk7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIGJpbmREcmFnQW5kRHJvcEV2ZW50KCkge1xyXG4gICAgICAgIC8vIHRoaXMubmd6b25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHtcclxuICAgICAgICB0aGlzLmRyb3BMaXN0ZW5lciA9IHRoaXMub25Ecm9wLmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKCdkcm9wJywgdGhpcy5kcm9wTGlzdGVuZXIpO1xyXG4gICAgICAgIHRoaXMuZHJhZ092ZXJMaXN0ZW5lciA9IHRoaXMub25EcmFnT3Zlci5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMuZWwuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ292ZXInLCB0aGlzLmRyYWdPdmVyTGlzdGVuZXIpO1xyXG4gICAgICAgIHRoaXMuZHJhZ0xlYXZlTGlzdGVuZXIgPSB0aGlzLm9uRHJhZ0xlYXZlLmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKCdkcmFnbGVhdmUnLCB0aGlzLmRyYWdMZWF2ZUxpc3RlbmVyKTtcclxuICAgICAgICB0aGlzLmRyYWdFbnRlckxpc3RlbmVyID0gdGhpcy5vbkRyb3BFbnRlci5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMuZWwuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ2VudGVyJywgdGhpcy5kcmFnRW50ZXJMaXN0ZW5lcik7XHJcbiAgICAgICAgLy8gIH0pO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSB1bmJpbmREcmFnQW5kRHJvcEV2ZW50KCkge1xyXG4gICAgICAgIHRoaXMuZHJvcExpc3RlbmVyICYmIHRoaXMuZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignZHJvcCcsIHRoaXMuZHJvcExpc3RlbmVyKTtcclxuICAgICAgICB0aGlzLmRyYWdPdmVyTGlzdGVuZXIgJiYgdGhpcy5lbC5yZW1vdmVFdmVudExpc3RlbmVyKCdkcmFnb3ZlcicsIHRoaXMuZHJhZ092ZXJMaXN0ZW5lcik7XHJcbiAgICAgICAgdGhpcy5kcmFnTGVhdmVMaXN0ZW5lciAmJiB0aGlzLmVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2RyYWdsZWF2ZScsIHRoaXMuZHJhZ0xlYXZlTGlzdGVuZXIpO1xyXG4gICAgICAgIHRoaXMuZHJhZ0VudGVyTGlzdGVuZXIgJiYgdGhpcy5lbC5yZW1vdmVFdmVudExpc3RlbmVyKCdkcmFnZW50ZXInLCB0aGlzLmRyYWdFbnRlckxpc3RlbmVyKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkRyb3BFbnRlciA9IChlOiBFdmVudCkgPT4ge1xyXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvLyBASG9zdExpc3RlbmVyKCdkcm9wJywgWyckZXZlbnQnXSlcclxuICAgIHB1YmxpYyBvbkRyb3AoZSkge1xyXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGNvbnN0IGV2ZW50OiBVcGxvYWRPdXRwdXQgPSB7IHR5cGU6ICdkcm9wJyB9O1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdkb3JwIEV2ZW50cycpO1xyXG4gICAgICAgIHRoaXMudXBsb2FkT3V0cHV0LmVtaXQoZXZlbnQpO1xyXG4gICAgICAgIHRoaXMudXBsb2FkLmhhbmRsZUZpbGVzKGUuZGF0YVRyYW5zZmVyLmZpbGVzKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBASG9zdExpc3RlbmVyKCdkcmFnb3ZlcicsIFsnJGV2ZW50J10pXHJcbiAgICBwdWJsaWMgb25EcmFnT3ZlcihlOiBFdmVudCkge1xyXG4gICAgICAgIGlmICghZSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGNvbnN0IGV2ZW50OiBVcGxvYWRPdXRwdXQgPSB7IHR5cGU6ICdkcmFnT3ZlcicgfTtcclxuICAgICAgICB0aGlzLnVwbG9hZE91dHB1dC5lbWl0KGV2ZW50KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBASG9zdExpc3RlbmVyKCdkcmFnbGVhdmUnLCBbJyRldmVudCddKVxyXG4gICAgcHVibGljIG9uRHJhZ0xlYXZlKGU6IEV2ZW50KSB7XHJcbiAgICAgICAgaWYgKCFlKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgY29uc3QgZXZlbnQ6IFVwbG9hZE91dHB1dCA9IHsgdHlwZTogJ2RyYWdPdXQnIH07XHJcbiAgICAgICAgdGhpcy51cGxvYWRPdXRwdXQuZW1pdChldmVudCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOmHjee9rlxyXG4gICAgICovXHJcbiAgICByZXNldCgpIHtcclxuICAgICAgIC8qaWYgKHRoaXMuZWwpIHtcclxuICAgICAgICAgICAgdGhpcy5fc3ViLmZvckVhY2goc3ViID0+IHN1Yi51bnN1YnNjcmliZSgpKTtcclxuICAgICAgICAgICAgdGhpcy5fc3ViID0gW107XHJcbiAgICAgICAgICAgIHRoaXMudXBsb2FkLnJlc2V0KCk7XHJcbiAgICAgICAgfSovXHJcbiAgICAgICAgdGhpcy51cGxvYWQucmVzZXQoKTtcclxuICAgIH1cclxufVxyXG4iXX0=