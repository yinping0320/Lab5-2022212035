!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("@farris/ui-progress",["exports","@angular/core","@angular/common"],t):t((e.farris=e.farris||{},e.farris["ui-progress"]={}),e.ng.core,e.ng.common)}(this,function(e,t,r){"use strict";var s=(n.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],n.ctorParameters=function(){return[]},n.ngInjectableDef=t.defineInjectable({factory:function(){return new n},token:n,providedIn:"root"}),n);function n(){}var p=function(n){var i=[];return Object.keys(n).forEach(function(e){var t=n[e],r=function s(e){return+e.replace("%","")}(e);isNaN(r)||i.push({key:r,value:t})}),i=i.sort(function(e,t){return e.key-t.key})},i=function(e){return p(e).map(function(e){return{offset:e.key+"%",color:e.value}})},o=function(e){var t=e.from,r=void 0===t?"#59a1ff":t,s=e.to,n=void 0===s?"#59a1ff":s,i=e.direction,o=void 0===i?"to right":i,a=function c(e,t){var r={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(r[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(s=Object.getOwnPropertySymbols(e);n<s.length;n++)t.indexOf(s[n])<0&&Object.prototype.propertyIsEnumerable.call(e,s[n])&&(r[s[n]]=e[s[n]])}return r}(e,["from","to","direction"]);return 0===Object.keys(a).length?"linear-gradient("+o+", "+r+", "+n+")":"linear-gradient("+o+", "+p(a).map(function(e){var t=e.key;return e.value+" "+t+"%"}).join(", ")+")"},a=function(e){return e+"%"},c=0,l=new Map([["normal","#388fff"],["exception","#f24645"],["success","#51bd78"]]),f=(Object.defineProperty(g.prototype,"percent",{get:function(){return this._percent},set:function(e){this._percent=e},enumerable:!0,configurable:!0}),Object.defineProperty(g.prototype,"progressStatus",{get:function(){return this.status||this.inferredStatus},enumerable:!0,configurable:!0}),Object.defineProperty(g.prototype,"progressFormatter",{get:function(){return this.format||a},enumerable:!0,configurable:!0}),Object.defineProperty(g.prototype,"strokeW",{get:function(){return this.strokeWidth||("line"===this.type&&"small"!==this.size?8:6)},enumerable:!0,configurable:!0}),Object.defineProperty(g.prototype,"isCircleStyle",{get:function(){return"circle"===this.type||"dashboard"===this.type},enumerable:!0,configurable:!0}),g.prototype.ngOnInit=function(){"circle"!==this.type&&"dashboard"!==this.type||(this.width=this.width||("small"!==this.size?80:50)),this.setStrokeColor(),this.getCirclePaths()},g.prototype.ngOnChanges=function(e){var t=e.gapPosition,r=e.strokeLinecap,s=e.strokeColor,n=e.gapDegree,i=e.type,o=e.status,a=e.percent,c=e.successPercent;o&&(this.cachedStatus=this.status||this.cachedStatus),(a||c)&&(100<=parseInt(this.percent.toString(),10)?(this.isNotNil(this.successPercent)&&100<=this.successPercent||this.successPercent===undefined)&&(this.inferredStatus="success"):this.inferredStatus=this.cachedStatus,this.status=this.inferredStatus),s&&this.setStrokeColor(),(t||r||n||i||a||s)&&this.getCirclePaths()},g.prototype.getCirclePaths=function(){var s=this;if(this.isCircleStyle){var n=this.isNotNil(this.successPercent)?[this.successPercent,this.percent]:[this.percent],e=50-this.strokeW/2,t=this.gapPosition||("circle"===this.type?"top":"bottom"),i=2*Math.PI*e,o=this.gapDegree||("circle"===this.type?0:75),r=0,a=-e,c=0,p=-2*e;switch(t){case"left":r=-e,c=2*e,p=a=0;break;case"right":c=-2*(r=e),p=a=0;break;case"bottom":p=2*(a=e)}this.pathString="M 50,50 m "+r+","+a+"\n       a "+e+","+e+" 0 1 1 "+c+","+-p+"\n       a "+e+","+e+" 0 1 1 "+-c+","+p,this.trailPathStyle={strokeDasharray:i-o+"px "+i+"px",strokeDashoffset:"-"+o/2+"px",transition:"stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s"},this.progressCirclePath=n.map(function(e,t){var r=2===n.length&&0===t;return{stroke:s.isGradient&&!r?"url(#gradient-"+s.gradientId+")":null,strokePathStyle:{stroke:s.isGradient?null:r?l.get("success"):s.strokeColor,transition:"stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s",strokeDasharray:(e||0)/100*(i-o)+"px "+i+"px",strokeDashoffset:"-"+o/2+"px"}}}).reverse()}},g.prototype.setStrokeColor=function(){var e=this.strokeColor,t=this.isGradient=!!e&&"string"!=typeof e;t&&!this.isCircleStyle?this.lineGradient=o(e):t&&this.isCircleStyle?this.circleGradient=i(this.strokeColor):(this.lineGradient=null,this.circleGradient=[])},g.prototype.isNotNil=function(e){return null!=e},g.decorators=[{type:t.Component,args:[{selector:"farris-progress",template:'<div\r\n[ngClass]="\'f-progress f-progress-status-\' + progressStatus"\r\n[class.f-progress-line]="type == \'line\'"\r\n[class.ant-progress-small]="size == \'small\'"\r\n[class.f-progress-show-info]="showInfo"\r\n[class.f-progress-circle]="isCircleStyle"\r\n>\r\n  <div *ngIf="type === \'line\'">\r\n      <div class="f-progress-outer">\r\n          <div class="f-progress-inner">\r\n              <div class = "f-progress-bg"\r\n              [style.width.%] = "percent"\r\n              [style.border-radius]="strokeLinecap === \'round\' ? \'100px\' : \'0\'"\r\n              [style.background]="!isGradient ? strokeColor : null"\r\n              [style.background-image]="isGradient ? lineGradient : null"\r\n              [style.height.px]="strokeW"\r\n              >\r\n              </div>\r\n              <div\r\n                *ngIf="successPercent || successPercent === 0"\r\n                class="f-progress-success-bg"\r\n                [style.width.%]="successPercent"\r\n                [style.border-radius]="strokeLinecap === \'round\' ? \'100px\' : \'0\'"\r\n                [style.height.px]="strokeW"\r\n              ></div>\r\n          </div>\r\n      </div>\r\n      <ng-template [ngTemplateOutlet]="progressInfoTemplate"></ng-template>\r\n  </div>\r\n  <div \r\n  class="f-progress-inner"\r\n  [style.width.px]="this.width"\r\n  [style.height.px]="this.width"\r\n  [style.fontSize.px]="this.width * 0.15 + 6"\r\n  [class.f-progress-circle-gradient]="isGradient"\r\n  *ngIf="isCircleStyle">\r\n      <svg class="f-progress-circle" viewBox="0 0 100 100">\r\n        <defs *ngIf="isGradient">\r\n          <linearGradient [id]="\'gradient-\' + gradientId" x1="100%" y1="0%" x2="0%" y2="0%">\r\n            <stop\r\n              *ngFor="let i of circleGradient"\r\n              [attr.offset]="i.offset"\r\n              [attr.stop-color]="i.color"\r\n            ></stop>\r\n          </linearGradient>\r\n        </defs>\r\n        <path\r\n          class="f-progress-circle-trail"\r\n          stroke="#efefef"\r\n          fill-opacity="0"\r\n          [attr.stroke-width]="strokeW"\r\n          [attr.d]="pathString"\r\n          [ngStyle]="trailPathStyle"\r\n        ></path>\r\n        <path\r\n          *ngFor="let p of progressCirclePath; trackBy: trackByFn"\r\n          class="f-progress-circle-path"\r\n          fill-opacity="0"\r\n          [attr.d]="pathString"\r\n          [attr.stroke-linecap]="strokeLinecap"\r\n          [attr.stroke]="p.stroke"\r\n          [attr.stroke-width]="percent ? strokeW : 0"\r\n          [ngStyle]="p.strokePathStyle"\r\n        ></path>\r\n      </svg>\r\n      <ng-template [ngTemplateOutlet]="progressInfoTemplate"></ng-template>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #progressInfoTemplate>\r\n  <span class="f-progress-text" *ngIf="showInfo">\r\n    <ng-container *ngIf="status === \'error\' || (status === \'success\' && !format); else formatTemplate">\r\n        <ng-container\r\n        *ngIf="!isCircleStyle"\r\n      >\r\n        <span [ngClass]="\'f-progress-text-icon f-icon f-icon-\'+ status"></span>\r\n      </ng-container>\r\n      <ng-container *ngIf="isCircleStyle">\r\n        <ng-container *ngIf="status === \'success\'">\r\n          <span class="f-progress-text-icon f-icon f-icon-checkmark"></span>\r\n        </ng-container>\r\n        <ng-container *ngIf="status === \'error\'">\r\n          <span class="f-progress-text-icon f-icon f-icon-x"></span>\r\n        </ng-container>\r\n      </ng-container>\r\n    </ng-container>\r\n    <ng-template #formatTemplate>\r\n      {{ progressFormatter(percent) }}\r\n    </ng-template>\r\n  </span>\r\n</ng-template>',styles:[".f-progress{display:inline-block;font-size:.875rem;color:rgba(0,0,0,.65)}.f-progress.f-progress-line{position:relative;width:100%}.f-progress.f-progress-line .f-progress-text .f-progress-text-icon{font-size:1.25rem}.f-progress .f-progress-outer{display:inline-block;width:100%}.f-progress .f-progress-inner{position:relative;display:inline-block;width:100%;overflow:hidden;vertical-align:middle;background-color:#efefef;border-radius:100px}.f-progress .f-progress-bg,.f-progress .f-progress-success-bg{position:relative;border-radius:100px;-webkit-transition:.4s cubic-bezier(.08,.82,.17,1);transition:.4s cubic-bezier(.08,.82,.17,1)}.f-progress .f-progress-success-bg{position:absolute;top:0;left:0}.f-progress .f-progress-text{display:inline-block;width:1.75rem;margin-left:.5rem;color:rgba(0,0,0,.65);font-size:1em;line-height:1;white-space:nowrap;text-align:left;vertical-align:middle;word-break:normal}.f-progress-status-active .f-progress-bg::before{position:absolute;top:0;right:0;bottom:0;left:0;background:#fff;border-radius:.625rem;opacity:0;-webkit-animation:2.4s ease-in-out infinite f-progress-active;animation:2.4s ease-in-out infinite f-progress-active;content:''}.f-progress-show-info .f-progress-outer{padding-right:48px;margin-right:-48px}.f-progress.f-progress-circle .f-progress-inner{position:relative;line-height:1;background-color:transparent}.f-progress.f-progress-circle .f-progress-text{position:absolute;top:50%;left:50%;width:100%;margin:0;padding:0;color:rgba(0,0,0,.65);line-height:1;white-space:normal;text-align:center;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.f-progress.f-progress-circle .f-progress-text .f-progress-text-icon{font-size:1.3em}@-webkit-keyframes f-progress-active{0%{width:0;opacity:.1}20%{width:0;opacity:.5}100%{width:100%;opacity:0}}@keyframes f-progress-active{0%{width:0;opacity:.1}20%{width:0;opacity:.5}100%{width:100%;opacity:0}}"]}]}],g.ctorParameters=function(){return[]},g.propDecorators={type:[{type:t.Input}],strokeWidth:[{type:t.Input}],size:[{type:t.Input}],showInfo:[{type:t.Input}],status:[{type:t.Input}],format:[{type:t.Input}],successPercent:[{type:t.Input}],strokeColor:[{type:t.Input}],width:[{type:t.Input}],gapPosition:[{type:t.Input}],gapDegree:[{type:t.Input}],strokeLinecap:[{type:t.Input}],percent:[{type:t.Input}]},g);function g(){this.type="line",this.size="default",this.showInfo=!0,this.gapPosition="top",this.strokeLinecap="round",this._percent=0,this.cachedStatus="normal",this.inferredStatus="normal",this.progressCirclePath=[],this.isGradient=!1,this.gradientId=c++,this.lineGradient=null,this.trackByFn=function(e){return""+e}}var u=(h.decorators=[{type:t.NgModule,args:[{declarations:[f],imports:[r.CommonModule],exports:[f]}]}],h);function h(){}e.ProgressService=s,e.ProgressComponent=f,e.ProgressModule=u,e.sortGradient=p,e.handleCircleGradient=i,e.handleLinearGradient=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=farris-ui-progress.umd.min.js.map