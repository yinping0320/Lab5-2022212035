/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CompareType } from '../enum/compare-type.enum';
import { ValueType } from '../enum/value-type.enum';
import { RelationType } from '../enum/relation-type.enum';
var DateRangeTimeHandler = /** @class */ (function () {
    function DateRangeTimeHandler() {
    }
    /**
     * @param {?} qc
     * @return {?}
     */
    DateRangeTimeHandler.prototype.convert = /**
     * @param {?} qc
     * @return {?}
     */
    function (qc) {
        /** @type {?} */
        var arr = [];
        /** @type {?} */
        var drv = (qc.value);
        if (Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime))
            return arr;
        drv.startTime && arr.push({
            'FilterField': qc.labelCode,
            'Compare': CompareType.GreaterThanOrEqual,
            //GreaterOrEqual
            'Value': drv.startTime,
            'Relation': RelationType.And,
            //and
            'Expresstype': ValueType.Value
        });
        drv.endTime && arr.push({
            'FilterField': qc.labelCode,
            'Compare': CompareType.LessThanOrEqual,
            //LessOrEqual
            'Value': drv.endTime,
            'Relation': RelationType.And,
            //and
            'Expresstype': ValueType.Value
        });
        return arr;
    };
    return DateRangeTimeHandler;
}());
export { DateRangeTimeHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXJhZ2V0aW1lLmhhbmRsZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWZpbHRlci1jb25kaXRpb24vIiwic291cmNlcyI6WyJsaWIvaGFuZGxlcnMvZGF0ZXJhZ2V0aW1lLmhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDcEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRTFEO0lBQUE7SUF1QkEsQ0FBQzs7Ozs7SUF0Qkcsc0NBQU87Ozs7SUFBUCxVQUFRLEVBQUU7O1lBQ0EsR0FBRyxHQUFHLEVBQUU7O1lBQ1IsR0FBRyxHQUFHLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQztRQUN0QixJQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUM7WUFDaEUsT0FBTyxHQUFHLENBQUM7UUFDZixHQUFHLENBQUMsU0FBUyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUM7WUFDdEIsYUFBYSxFQUFHLEVBQUUsQ0FBQyxTQUFTO1lBQzVCLFNBQVMsRUFBRyxXQUFXLENBQUMsa0JBQWtCOztZQUMxQyxPQUFPLEVBQUcsR0FBRyxDQUFDLFNBQVM7WUFDdkIsVUFBVSxFQUFHLFlBQVksQ0FBQyxHQUFHOztZQUM3QixhQUFhLEVBQUUsU0FBUyxDQUFDLEtBQUs7U0FDakMsQ0FBQyxDQUFDO1FBQ0gsR0FBRyxDQUFDLE9BQU8sSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDO1lBQ3BCLGFBQWEsRUFBRyxFQUFFLENBQUMsU0FBUztZQUM1QixTQUFTLEVBQUcsV0FBVyxDQUFDLGVBQWU7O1lBQ3ZDLE9BQU8sRUFBRyxHQUFHLENBQUMsT0FBTztZQUNyQixVQUFVLEVBQUcsWUFBWSxDQUFDLEdBQUc7O1lBQzdCLGFBQWEsRUFBRSxTQUFTLENBQUMsS0FBSztTQUNqQyxDQUFDLENBQUM7UUFFSCxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7SUFDTCwyQkFBQztBQUFELENBQUMsQUF2QkQsSUF1QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wYXJlVHlwZSB9IGZyb20gJy4uL2VudW0vY29tcGFyZS10eXBlLmVudW0nO1xyXG5pbXBvcnQgeyBWYWx1ZVR5cGUgfSBmcm9tICcuLi9lbnVtL3ZhbHVlLXR5cGUuZW51bSc7XHJcbmltcG9ydCB7IFJlbGF0aW9uVHlwZSB9IGZyb20gJy4uL2VudW0vcmVsYXRpb24tdHlwZS5lbnVtJztcclxuXHJcbmV4cG9ydCBjbGFzcyBEYXRlUmFuZ2VUaW1lSGFuZGxlcntcclxuICAgIGNvbnZlcnQocWMpIHtcclxuICAgICAgICBjb25zdCBhcnIgPSBbXTtcclxuICAgICAgICBjb25zdCBkcnYgPSAocWMudmFsdWUpO1xyXG4gICAgICAgIGlmKE9iamVjdC5rZXlzKGRydikubGVuZ3RoID09PSAwIHx8ICghZHJ2LnN0YXJ0VGltZSAmJiAhZHJ2LmVuZFRpbWUpKVxyXG4gICAgICAgICAgICByZXR1cm4gYXJyO1xyXG4gICAgICAgIGRydi5zdGFydFRpbWUgJiYgYXJyLnB1c2goe1xyXG4gICAgICAgICAgICAnRmlsdGVyRmllbGQnIDogcWMubGFiZWxDb2RlLFxyXG4gICAgICAgICAgICAnQ29tcGFyZScgOiBDb21wYXJlVHlwZS5HcmVhdGVyVGhhbk9yRXF1YWwsIC8vR3JlYXRlck9yRXF1YWxcclxuICAgICAgICAgICAgJ1ZhbHVlJyA6IGRydi5zdGFydFRpbWUsXHJcbiAgICAgICAgICAgICdSZWxhdGlvbicgOiBSZWxhdGlvblR5cGUuQW5kLCAvL2FuZFxyXG4gICAgICAgICAgICAnRXhwcmVzc3R5cGUnOiBWYWx1ZVR5cGUuVmFsdWVcclxuICAgICAgICB9KTtcclxuICAgICAgICBkcnYuZW5kVGltZSAmJiBhcnIucHVzaCh7XHJcbiAgICAgICAgICAgICdGaWx0ZXJGaWVsZCcgOiBxYy5sYWJlbENvZGUsXHJcbiAgICAgICAgICAgICdDb21wYXJlJyA6IENvbXBhcmVUeXBlLkxlc3NUaGFuT3JFcXVhbCwgLy9MZXNzT3JFcXVhbFxyXG4gICAgICAgICAgICAnVmFsdWUnIDogZHJ2LmVuZFRpbWUsXHJcbiAgICAgICAgICAgICdSZWxhdGlvbicgOiBSZWxhdGlvblR5cGUuQW5kLC8vYW5kXHJcbiAgICAgICAgICAgICdFeHByZXNzdHlwZSc6IFZhbHVlVHlwZS5WYWx1ZVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICByZXR1cm4gYXJyO1xyXG4gICAgfVxyXG59Il19