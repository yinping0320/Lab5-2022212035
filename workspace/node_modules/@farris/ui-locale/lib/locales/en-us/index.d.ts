export declare const EN_US: {
    locale: string;
    combo: {
        placeholder: string;
        emptyMsg: string;
    };
    combolist: {};
    datagrid: {
        lineNumberTitle: string;
        emptyMessage: string;
        pagination: {
            previousLabel: string;
            nextLabel: string;
            message: string;
            pagelist: {
                firstText: string;
                lastText: string;
            };
        };
        filter: {
            title: string;
            reset: string;
            clear: string;
            clearAll: string;
            setting: string;
            nofilter: string;
            checkAll: string;
            and: string;
            or: string;
            operators: {
                equal: string;
                notEqual: string;
                greater: string;
                greaterOrEqual: string;
                less: string;
                lessOrEqual: string;
                contains: string;
                notContains: string;
                like: string;
                notLike: string;
                in: string;
                notIn: string;
                empty: string;
                notEmpty: string;
                null: string;
                notNull: string;
            };
            more: string;
        };
        settings: {
            visible: string;
            sortting: string;
            title: string;
            canchoose: string;
            choosed: string;
            asc: string;
            desc: string;
            cancelSort: string;
            ok: string;
            cancel: string;
            reset: string;
            conciseMode: string;
            advancedMode: string;
            formatSetting: string;
            properties: string;
            groupping: string;
            allColumns: string;
            visibleColumns: string;
            hiddenColumns: string;
            searchPlaceholder: string;
            checkall: string;
            headeralign: string;
            dataalign: string;
            alignLeft: string;
            alignCenter: string;
            alignRight: string;
            summarytype: string;
            summarytext: string;
            summaryNone: string;
            summarySum: string;
            summaryMax: string;
            summaryMin: string;
            summarCount: string;
            summaryAverage: string;
            grouppingField: string;
            moreGrouppingFieldWarningMessage: string;
            grouppingSummary: string;
            addGrouppingFieldTip: string;
            removeGrouppingFieldTip: string;
            grouppingSummaryType: string;
            grouppingSummaryText: string;
            restoreDefaultSettingsText: string;
            simple: {
                title: string;
                tip: string;
                count: string;
            };
        };
        selectionData: {
            clearAll: string;
            tooltip: string;
            currentLenth: string;
        };
        groupRow: {
            tips: string;
            removeColumn: string;
            clearTip: string;
            clear: string;
        };
    };
    filterEditor: {
        cancelButton: string;
        okButton: string;
        addWhere: string;
        clear: string;
        moveTop: string;
        moveUp: string;
        moveDown: string;
        moveBottom: string;
        leftBrackets: string;
        field: string;
        operator: string;
        value: string;
        valueType: string;
        expressType: {
            value: string;
            express: string;
            frontExpress: string;
        };
        rightBrackets: string;
        relation: string;
        relationValue: {
            and: string;
            or: string;
        };
        designTab: string;
        jsonTab: string;
        sqlTab: string;
        title: string;
        message: string;
        validate: {
            bracket: string;
            relation: string;
            field: string;
        };
    };
    enumEditor: {
        cancelButton: string;
        okButton: string;
        addWhere: string;
        clear: string;
        moveTop: string;
        moveUp: string;
        moveDown: string;
        remove: string;
        moveBottom: string;
        title: string;
        message: string;
        value: string;
        name: string;
    };
    lookup: {
        placeholder: string;
        favorites: string;
        selected: string;
        okText: string;
        cancelText: string;
        allColumns: string;
        datalist: string;
        mustWriteSomething: string;
        mustChoosAdatarow: string;
        tipText: string;
        cascade: {
            enable: string;
            disable: string;
            up: string;
            down: string;
        };
        favoriteInfo: {
            addFav: string;
            cancelFav: string;
        };
        getAllChilds: string;
        contextMenu: {
            expandall: string;
            collapseall: string;
            expandByLayer: string;
            expand1: string;
            expand2: string;
            expand3: string;
            expand4: string;
            expand5: string;
            expand6: string;
            expand7: string;
            expand8: string;
            expand9: string;
        };
        quick: {
            notfind: string;
            more: string;
        };
        configError: string;
        selectedInfo: {
            total: string;
            clear: string;
            remove: string;
            confirm: string;
        };
        clearAllConditions: string;
        anyFields: string;
    };
    loading: {
        message: string;
    };
    modal: {};
    messager: {
        yes: string;
        no: string;
        ok: string;
        cancel: string;
        title: string;
        errorTitle: string;
        prompt: {
            fontSize: {
                name: string;
                small: string;
                middle: string;
                big: string;
                large: string;
                huge: string;
            };
        };
        exception: {
            expand: string;
            collapse: string;
            happend: string;
            detail: string;
            copy: string;
            copySuccess: string;
            copyFailed: string;
            roger: string;
        };
    };
    notify: {
        title: string;
    };
    dialog: {};
    datatable: {};
    colorPicker: {};
    numberSpinner: {
        placeholder: string;
        range: {
            begin: string;
            end: string;
        };
    };
    inputGroup: {};
    treetable: {
        emptyMessage: string;
        pagination: {
            previousLabel: string;
            nextLabel: string;
            message: string;
        };
    };
    multiSelect: {
        leftTitle: string;
        rightTitle: string;
        noDataMoveMessage: string;
        shiftRight: string;
        shiftLeft: string;
        allShiftRight: string;
        allShiftLeft: string;
        top: string;
        bottom: string;
        shiftUp: string;
        shiftDown: string;
        emptyData: string;
        filterPlaceholder: string;
    };
    sortEditor: {
        cancel: string;
        ok: string;
        add: string;
        clear: string;
        moveTop: string;
        moveUp: string;
        moveDown: string;
        moveBottom: string;
        field: string;
        order: string;
        asc: string;
        desc: string;
        title: string;
    };
    tabs: {
        more: string;
    };
    timePicker: {};
    wizard: {};
    tree: {};
    tooltip: {};
    listview: {
        emptyMessage: string;
        checkall: string;
    };
    text: {
        yes: string;
        no: string;
        zoom: string;
        comments: {
            title: string;
            manager: string;
            empty: string;
        };
    };
    switch: {};
    sidebar: {
        sidebar: string;
    };
    section: {
        expandLabel: string;
        collapseLabel: string;
    };
    pagination: {
        message: string;
        totalinfo: {
            firstText: string;
            lastText: string;
        };
        pagelist: {
            firstText: string;
            lastText: string;
        };
        previous: string;
        next: string;
        goto: {
            prefix: string;
            suffix: string;
        };
    };
    responseToolbar: {
        more: string;
    };
    queryCondition: {
        configDialog: {
            unSelectedOptions: string;
            selectedOptions: string;
            confirm: string;
            cancel: string;
            placeholder: string;
            moveUp: string;
            moveAllUp: string;
            moveDown: string;
            moveAllDown: string;
            moveRight: string;
            moveAllRight: string;
            moveLeft: string;
            moveAllLeft: string;
            pleaseSelect: string;
            noOptionMove: string;
            selectOptionUp: string;
            cannotMoveUp: string;
            selectOptionTop: string;
            optionIsTop: string;
            selectOptionDown: string;
            cannotMoveDown: string;
            selectOptionBottom: string;
            optionIsBottom: string;
        };
        container: {
            query: string;
            saveAs: string;
            save: string;
            config: string;
        };
    };
    querySolution: {
        saveAsDialog: {
            queryPlanName: string;
            setAsDefault: string;
            confirm: string;
            cancel: string;
            placeholder: string;
            pleaseInput: string;
            title: string;
            maxLength: string;
        };
        manageDialog: {
            name: string;
            property: string;
            default: string;
            operation: string;
            confirm: string;
            cancel: string;
            planNameDuplicated: string;
            system: string;
            personal: string;
        };
        container: {
            default: string;
            manage: string;
            arrowUp: string;
            arrowDown: string;
            saveAs: string;
            empty: string;
            save: string;
            pleaseInput: string;
            saveSuccess: string;
            saveFail: string;
            planManage: string;
            clear: string;
            require: string;
            defaultName: string;
            histroyName: string;
            sysPresetName: string;
        };
    };
    collapseDirective: {
        expand: string;
        fold: string;
    };
    avatar: {
        imgtitle: string;
        typeError: string;
        sizeError: string;
        uploadError: string;
        loadError: string;
    };
    listFilter: {
        filter: string;
        confirm: string;
        cancel: string;
        reset: string;
    };
    progressStep: {
        empty: string;
    };
    languageLabel: {
        en: string;
        "zh-cn": string;
        "zh-CHS": string;
        "zh-CHT": string;
        ok: string;
        cancel: string;
    };
    verifyDetail: {
        vertifyTypeAll: string;
        vertifyTypeError: string;
        vertifyTypeEmpty: string;
    };
    batchEditDialog: {
        title: string;
        appendText: string;
        appendTextTip: string;
        okText: string;
        cancelText: string;
        field: string;
        fieldValue: string;
        appendTips: string;
        selected: string;
        row: string;
        confirmTitle: string;
        neverShow: string;
        confirmText: string;
    };
    pageWalker: {
        next: string;
        prev: string;
        skip: string;
        startNow: string;
    };
    footer: {
        expandText: string;
        collapseText: string;
    };
    discussionGroup: {
        submit: string;
        cancel: string;
        colleague: string;
        all: string;
        related: string;
        confirm: string;
        reply: string;
        emptyMessage: string;
        placeholder: string;
        notEmpty: string;
        selectEmployee: string;
        next: string;
        emptySelected: string;
        emptyRight: string;
        allOrg: string;
        selected: string;
        section: string;
        people: string;
        viewMore: string;
        per: string;
        pcs: string;
        emptyList: string;
        advancedQuery: string;
    };
    tag: {
        addText: string;
        placeholder: string;
    };
    filterPanel: {
        filter: string;
        confirm: string;
        cancel: string;
        reset: string;
        advancedFilter: string;
        expand: string;
        fold: string;
        last1Month: string;
        last3Month: string;
        last6Month: string;
        pleaseInput: string;
        searchHistory: string;
        searchResult: string;
        intervalFilter: string;
        beginPlaceHolder: string;
        endPlaceHolder: string;
        dateBeginPlaceHolder: string;
        dateEndPlaceHolder: string;
        empty: string;
        clear: string;
        today: string;
        yesterday: string;
        checkall: string;
        searchPlaceHolder: string;
    };
    scrollspy: {
        guide: string;
    };
    lookupConfig: {
        placeholder: string;
        code: string;
        name: string;
        select: string;
        filter: string;
        helpidEmpty: string;
        selectTitle: string;
        lookupTitle: string;
        sure: string;
        cancel: string;
        successSave: string;
        helpIdError: string;
        fileNamePlaceholder: string;
        selectFileNameTitle: string;
        bindingPath: string;
        fieldError: string;
        textFieldLable: string;
        loadTypeTitle: string;
        loadTypeList: {
            all: string;
            layer: string;
            default: string;
        };
        powerTitle: string;
        powerObjLabel: string;
        powerFieldLabel: string;
        powerOperateLabel: string;
        linkfieldLabel: string;
        powerDataTitle: string;
        powerFieldTitle: string;
        powerOperateTitle: string;
        businessLable: string;
        powerLable: string;
        powerError: string;
        operateError: string;
        linkfieldError: string;
    };
};
