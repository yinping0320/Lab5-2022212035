/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonUtils } from '@farris/ui-common';
import { Injectable, LOCALE_ID, Inject, InjectionToken, Optional } from '@angular/core';
import { FARRIS_LOCALES } from './locales';
import * as i0 from "@angular/core";
import * as i1 from "@farris/ui-common";
/** @type {?} */
export var FARRIS_LOCAL_CUSTOM_DATA = new InjectionToken('自定义语言数据， 格式：{ "languageCode": { "name": { "key": "value" } } }');
var LocaleService = /** @class */ (function () {
    function LocaleService(localeId, utils, localeData) {
        this.localeId = localeId;
        this.utils = utils;
        this.localeData = localeData;
        if (!localeId) {
            localeId = 'zh-CHS';
        }
        // 合并语言资源
        this.setLocaleData(localeData);
    }
    /** 获取语言资源
     *  path : 资源路径，如:
     *  ```
     *  getResources('zh-CHS') // 返回所有中文语言资源
     *  getResources('zh-CHS.lookup') // 返回所有中文下帮助的资源
     *  ```
     */
    /**
     * 获取语言资源
     *  path : 资源路径，如:
     *  ```
     *  getResources('zh-CHS') // 返回所有中文语言资源
     *  getResources('zh-CHS.lookup') // 返回所有中文下帮助的资源
     *  ```
     * @param {?=} path
     * @return {?}
     */
    LocaleService.prototype.getResources = /**
     * 获取语言资源
     *  path : 资源路径，如:
     *  ```
     *  getResources('zh-CHS') // 返回所有中文语言资源
     *  getResources('zh-CHS.lookup') // 返回所有中文下帮助的资源
     *  ```
     * @param {?=} path
     * @return {?}
     */
    function (path) {
        if (path === void 0) { path = ''; }
        if (path) {
            return this.utils.getValue(path, FARRIS_LOCALES);
        }
        return FARRIS_LOCALES;
    };
    /**
     * @param {?} ctrlName
     * @return {?}
     */
    LocaleService.prototype.getComponentOptions = /**
     * @param {?} ctrlName
     * @return {?}
     */
    function (ctrlName) {
        return this.langData[ctrlName];
    };
    /**
     * @param {?} propertyName
     * @return {?}
     */
    LocaleService.prototype.getValue = /**
     * @param {?} propertyName
     * @return {?}
     */
    function (propertyName) {
        /** @type {?} */
        var val = this.utils.getValue(propertyName, this.langData);
        if (val) {
            return val;
        }
        else {
            // console.warn(`Can\'t find language Data for the ${propertyName}`);
            return '';
        }
    };
    /** 合并现有的多语资源 */
    /**
     * 合并现有的多语资源
     * @param {?=} localeData
     * @return {?}
     */
    LocaleService.prototype.setLocaleData = /**
     * 合并现有的多语资源
     * @param {?=} localeData
     * @return {?}
     */
    function (localeData) {
        var _this = this;
        if (localeData === void 0) { localeData = null; }
        if (localeData) {
            // 解析得到提供的语言编码
            /** @type {?} */
            var langCodes = Object.keys(localeData);
            langCodes.forEach((/**
             * @param {?} code
             * @return {?}
             */
            function (code) {
                /** @type {?} */
                var resName = Object.keys(localeData[code]);
                resName.forEach((/**
                 * @param {?} k
                 * @return {?}
                 */
                function (k) {
                    _this.appendLanguageResource(k, localeData[code][k], code);
                }));
            }));
        }
        this.langData = FARRIS_LOCALES[this.localeId];
        if (!this.langData) {
            this.langData = FARRIS_LOCALES['zh-CHS'];
        }
    };
    /**
     * @private
     * @param {?} key
     * @param {?} data
     * @param {?=} lang
     * @return {?}
     */
    LocaleService.prototype.appendLanguageResource = /**
     * @private
     * @param {?} key
     * @param {?} data
     * @param {?=} lang
     * @return {?}
     */
    function (key, data, lang) {
        if (lang === void 0) { lang = this.localeId; }
        if (!lang) {
            this.langData[key] = this.langData[key] || {};
            this.langData[key] = Object.assign(this.langData[key], data || {});
        }
        else {
            FARRIS_LOCALES[lang][key] = data || {};
        }
    };
    LocaleService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    LocaleService.ctorParameters = function () { return [
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
        { type: CommonUtils },
        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FARRIS_LOCAL_CUSTOM_DATA,] }] }
    ]; };
    /** @nocollapse */ LocaleService.ngInjectableDef = i0.defineInjectable({ factory: function LocaleService_Factory() { return new LocaleService(i0.inject(i0.LOCALE_ID), i0.inject(i1.CommonUtils), i0.inject(FARRIS_LOCAL_CUSTOM_DATA, 8)); }, token: LocaleService, providedIn: "root" });
    return LocaleService;
}());
export { LocaleService };
if (false) {
    /** @type {?} */
    LocaleService.prototype.langData;
    /** @type {?} */
    LocaleService.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    LocaleService.prototype.utils;
    /**
     * @type {?}
     * @private
     */
    LocaleService.prototype.localeData;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWxvY2FsZS8iLCJzb3VyY2VzIjpbImxpYi9sb2NhbGUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxjQUFjLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXhGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxXQUFXLENBQUM7Ozs7QUFFM0MsTUFBTSxLQUFPLHdCQUF3QixHQUFHLElBQUksY0FBYyxDQUFDLGdFQUFnRSxDQUFDO0FBQzVIO0lBT0ksdUJBQXNDLFFBQWdCLEVBQVUsS0FBa0IsRUFDaEIsVUFBZTtRQUQzQyxhQUFRLEdBQVIsUUFBUSxDQUFRO1FBQVUsVUFBSyxHQUFMLEtBQUssQ0FBYTtRQUNoQixlQUFVLEdBQVYsVUFBVSxDQUFLO1FBQzdFLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDWCxRQUFRLEdBQUcsUUFBUSxDQUFDO1NBQ3ZCO1FBRUQsU0FBUztRQUNULElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVEOzs7Ozs7T0FNRzs7Ozs7Ozs7Ozs7SUFDSCxvQ0FBWTs7Ozs7Ozs7OztJQUFaLFVBQWMsSUFBUztRQUFULHFCQUFBLEVBQUEsU0FBUztRQUNuQixJQUFJLElBQUksRUFBRTtZQUNOLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLGNBQWMsQ0FBQyxDQUFDO1NBQ3BEO1FBQ0QsT0FBTyxjQUFjLENBQUM7SUFDMUIsQ0FBQzs7Ozs7SUFFRCwyQ0FBbUI7Ozs7SUFBbkIsVUFBb0IsUUFBUTtRQUN4QixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbkMsQ0FBQzs7Ozs7SUFFRCxnQ0FBUTs7OztJQUFSLFVBQVMsWUFBb0I7O1lBQ25CLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUM1RCxJQUFJLEdBQUcsRUFBRTtZQUNMLE9BQU8sR0FBRyxDQUFDO1NBQ2Q7YUFBTTtZQUNILHFFQUFxRTtZQUNyRSxPQUFPLEVBQUUsQ0FBQztTQUNiO0lBQ0wsQ0FBQztJQUVELGdCQUFnQjs7Ozs7O0lBQ2hCLHFDQUFhOzs7OztJQUFiLFVBQWMsVUFBaUI7UUFBL0IsaUJBZ0JDO1FBaEJhLDJCQUFBLEVBQUEsaUJBQWlCO1FBQzNCLElBQUksVUFBVSxFQUFFOzs7Z0JBRU4sU0FBUyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO1lBQ3pDLFNBQVMsQ0FBQyxPQUFPOzs7O1lBQUMsVUFBQyxJQUFZOztvQkFDckIsT0FBTyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUM3QyxPQUFPLENBQUMsT0FBTzs7OztnQkFBQyxVQUFBLENBQUM7b0JBQ2IsS0FBSSxDQUFDLHNCQUFzQixDQUFDLENBQUMsRUFBRSxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0JBQzlELENBQUMsRUFBQyxDQUFDO1lBQ1AsQ0FBQyxFQUFDLENBQUM7U0FDTjtRQUVELElBQUksQ0FBQyxRQUFRLEdBQUcsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNoQixJQUFJLENBQUMsUUFBUSxHQUFHLGNBQWMsQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUM1QztJQUNMLENBQUM7Ozs7Ozs7O0lBRU8sOENBQXNCOzs7Ozs7O0lBQTlCLFVBQStCLEdBQVcsRUFBRSxJQUFTLEVBQUUsSUFBNEI7UUFBNUIscUJBQUEsRUFBQSxPQUFlLElBQUksQ0FBQyxRQUFRO1FBQy9FLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDUCxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDO1lBQzlDLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztTQUN0RTthQUFNO1lBQ0gsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7U0FDMUM7SUFDTCxDQUFDOztnQkF2RUosVUFBVSxTQUFDO29CQUNSLFVBQVUsRUFBRSxNQUFNO2lCQUNyQjs7Ozs2Q0FLZ0IsTUFBTSxTQUFDLFNBQVM7Z0JBYnhCLFdBQVc7Z0RBY0gsUUFBUSxZQUFJLE1BQU0sU0FBQyx3QkFBd0I7Ozt3QkFkNUQ7Q0E4RUMsQUF4RUQsSUF3RUM7U0FyRVksYUFBYTs7O0lBRXRCLGlDQUFjOztJQUVGLGlDQUEwQzs7Ozs7SUFBRSw4QkFBMEI7Ozs7O0lBQ3RFLG1DQUFxRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vblV0aWxzIH0gZnJvbSAnQGZhcnJpcy91aS1jb21tb24nO1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlLCBMT0NBTEVfSUQsIEluamVjdCwgSW5qZWN0aW9uVG9rZW4sIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgeyBGQVJSSVNfTE9DQUxFUyB9IGZyb20gJy4vbG9jYWxlcyc7XHJcblxyXG5leHBvcnQgY29uc3QgRkFSUklTX0xPQ0FMX0NVU1RPTV9EQVRBID0gbmV3IEluamVjdGlvblRva2VuKCfoh6rlrprkuYnor63oqIDmlbDmja7vvIwg5qC85byP77yaeyBcImxhbmd1YWdlQ29kZVwiOiB7IFwibmFtZVwiOiB7IFwia2V5XCI6IFwidmFsdWVcIiB9IH0gfScpO1xyXG5ASW5qZWN0YWJsZSh7XHJcbiAgICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIExvY2FsZVNlcnZpY2Uge1xyXG5cclxuICAgIGxhbmdEYXRhOiBhbnk7XHJcblxyXG4gICAgY29uc3RydWN0b3IoQEluamVjdChMT0NBTEVfSUQpIHB1YmxpYyBsb2NhbGVJZDogc3RyaW5nLCBwcml2YXRlIHV0aWxzOiBDb21tb25VdGlscyxcclxuICAgICAgICAgICAgICAgIEBPcHRpb25hbCgpIEBJbmplY3QoRkFSUklTX0xPQ0FMX0NVU1RPTV9EQVRBKSBwcml2YXRlIGxvY2FsZURhdGE6IGFueSkge1xyXG4gICAgICAgIGlmICghbG9jYWxlSWQpIHtcclxuICAgICAgICAgICAgbG9jYWxlSWQgPSAnemgtQ0hTJztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIOWQiOW5tuivreiogOi1hOa6kFxyXG4gICAgICAgIHRoaXMuc2V0TG9jYWxlRGF0YShsb2NhbGVEYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiog6I635Y+W6K+t6KiA6LWE5rqQXHJcbiAgICAgKiAgcGF0aCA6IOi1hOa6kOi3r+W+hO+8jOWmgjpcclxuICAgICAqICBgYGBcclxuICAgICAqICBnZXRSZXNvdXJjZXMoJ3poLUNIUycpIC8vIOi/lOWbnuaJgOacieS4reaWh+ivreiogOi1hOa6kFxyXG4gICAgICogIGdldFJlc291cmNlcygnemgtQ0hTLmxvb2t1cCcpIC8vIOi/lOWbnuaJgOacieS4reaWh+S4i+W4ruWKqeeahOi1hOa6kFxyXG4gICAgICogIGBgYFxyXG4gICAgICovXHJcbiAgICBnZXRSZXNvdXJjZXMoIHBhdGggPSAnJykge1xyXG4gICAgICAgIGlmIChwYXRoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnV0aWxzLmdldFZhbHVlKHBhdGgsIEZBUlJJU19MT0NBTEVTKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIEZBUlJJU19MT0NBTEVTO1xyXG4gICAgfVxyXG5cclxuICAgIGdldENvbXBvbmVudE9wdGlvbnMoY3RybE5hbWUpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5sYW5nRGF0YVtjdHJsTmFtZV07XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0VmFsdWUocHJvcGVydHlOYW1lOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCB2YWwgPSB0aGlzLnV0aWxzLmdldFZhbHVlKHByb3BlcnR5TmFtZSwgdGhpcy5sYW5nRGF0YSk7XHJcbiAgICAgICAgaWYgKHZhbCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdmFsO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUud2FybihgQ2FuXFwndCBmaW5kIGxhbmd1YWdlIERhdGEgZm9yIHRoZSAke3Byb3BlcnR5TmFtZX1gKTtcclxuICAgICAgICAgICAgcmV0dXJuICcnO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKiog5ZCI5bm2546w5pyJ55qE5aSa6K+t6LWE5rqQICovXHJcbiAgICBzZXRMb2NhbGVEYXRhKGxvY2FsZURhdGEgPSBudWxsKSB7XHJcbiAgICAgICAgaWYgKGxvY2FsZURhdGEpIHtcclxuICAgICAgICAgICAgLy8g6Kej5p6Q5b6X5Yiw5o+Q5L6b55qE6K+t6KiA57yW56CBXHJcbiAgICAgICAgICAgIGNvbnN0IGxhbmdDb2RlcyA9IE9iamVjdC5rZXlzKGxvY2FsZURhdGEpO1xyXG4gICAgICAgICAgICBsYW5nQ29kZXMuZm9yRWFjaCgoY29kZTogc3RyaW5nKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByZXNOYW1lID0gT2JqZWN0LmtleXMobG9jYWxlRGF0YVtjb2RlXSk7XHJcbiAgICAgICAgICAgICAgICByZXNOYW1lLmZvckVhY2goayA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hcHBlbmRMYW5ndWFnZVJlc291cmNlKGssIGxvY2FsZURhdGFbY29kZV1ba10sIGNvZGUpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5sYW5nRGF0YSA9IEZBUlJJU19MT0NBTEVTW3RoaXMubG9jYWxlSWRdO1xyXG4gICAgICAgIGlmICghdGhpcy5sYW5nRGF0YSkge1xyXG4gICAgICAgICAgICB0aGlzLmxhbmdEYXRhID0gRkFSUklTX0xPQ0FMRVNbJ3poLUNIUyddO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGFwcGVuZExhbmd1YWdlUmVzb3VyY2Uoa2V5OiBzdHJpbmcsIGRhdGE6IGFueSwgbGFuZzogc3RyaW5nID0gdGhpcy5sb2NhbGVJZCkge1xyXG4gICAgICAgIGlmICghbGFuZykge1xyXG4gICAgICAgICAgICB0aGlzLmxhbmdEYXRhW2tleV0gPSB0aGlzLmxhbmdEYXRhW2tleV0gfHwge307XHJcbiAgICAgICAgICAgIHRoaXMubGFuZ0RhdGFba2V5XSA9IE9iamVjdC5hc3NpZ24odGhpcy5sYW5nRGF0YVtrZXldLCBkYXRhIHx8IHt9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBGQVJSSVNfTE9DQUxFU1tsYW5nXVtrZXldID0gZGF0YSB8fCB7fTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19