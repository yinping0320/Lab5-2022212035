/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
export var DATAGRID_LOCALE = {
    lineNumberTitle: 'NO.',
    emptyMessage: 'Empty Data',
    pagination: {
        previousLabel: 'Prev Page',
        nextLabel: 'Next Page',
        message: 'Total <b>{1}</b> items ',
        pagelist: {
            firstText: 'Display',
            lastText: 'items'
        }
    },
    filter: {
        title: 'Conditions',
        reset: 'Reset',
        clear: 'Clear',
        clearAll: 'Clear all conditions',
        setting: 'Settings',
        nofilter: '[ Empty ]',
        checkAll: 'Check All',
        and: 'And',
        or: 'Or',
        operators: {
            equal: 'equal',
            notEqual: 'not equal',
            greater: 'greater than',
            greaterOrEqual: 'greater than or equal',
            less: 'less than',
            lessOrEqual: 'less than or equal',
            contains: 'contains',
            notContains: 'not contains',
            like: 'contains',
            notLike: 'not contains',
            in: 'in',
            notIn: 'not in',
            empty: 'empty',
            notEmpty: 'not empty',
            null: 'null',
            notNull: 'not null'
        },
        more: 'More'
    },
    settings: {
        visible: 'Visible',
        sortting: 'Sortting',
        title: 'Column Settings',
        canchoose: 'Can choose',
        choosed: 'Choosed',
        asc: 'ASC',
        desc: 'DESC',
        cancelSort: 'Cancel sortting',
        ok: 'OK',
        cancel: 'Cancel',
        reset: 'Reset',
        conciseMode: 'Concise',
        advancedMode: 'Advanced',
        formatSetting: 'Column format',
        properties: 'Column properties',
        groupping: 'Groupping',
        allColumns: 'All',
        visibleColumns: 'Visible',
        hiddenColumns: 'Hidden',
        searchPlaceholder: 'Please enter a column name',
        checkall: 'Show or hide all',
        headeralign: 'Header alignment',
        dataalign: 'Data alignment',
        alignLeft: 'Left',
        alignCenter: 'Center',
        alignRight: 'Right',
        summarytype: 'Summary type',
        summarytext: 'Summary text',
        summaryNone: 'None',
        summarySum: 'Sum',
        summaryMax: 'Max',
        summaryMin: 'Min',
        summarCount: 'Count',
        summaryAverage: 'Average',
        grouppingField: 'Groupping field',
        moreGrouppingFieldWarningMessage: 'Up to 3 fields are set for grouping',
        grouppingSummary: 'Group total',
        addGrouppingFieldTip: 'Add groupping field',
        removeGrouppingFieldTip: 'Remove groupping field',
        grouppingSummaryType: 'Group total type',
        grouppingSummaryText: 'Group total text',
        restoreDefaultSettingsText: 'Are you sure you want to restore the default settings',
        simple: {
            title: 'Show Columns',
            tip: 'The selected fields can be displayed in the list. Drag to adjust the display order in the list.',
            count: 'show <span class="visible-cols-count">{0}</span> columns'
        }
    },
    selectionData: {
        clearAll: 'Clear all',
        tooltip: 'Click here show list.',
        currentLenth: "<b>{0}</b> items selected. "
    },
    groupRow: {
        tips: 'Drag columns here to group data.',
        removeColumn: 'Remove the group column.',
        clearTip: 'Clear all grouped fields.',
        clear: 'Empty'
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWxvY2FsZS8iLCJzb3VyY2VzIjpbImxpYi9sb2NhbGVzL2VuLXVzL2RhdGFncmlkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTSxLQUFPLGVBQWUsR0FBRztJQUMzQixlQUFlLEVBQUUsS0FBSztJQUN0QixZQUFZLEVBQUUsWUFBWTtJQUMxQixVQUFVLEVBQUU7UUFDUixhQUFhLEVBQUUsV0FBVztRQUMxQixTQUFTLEVBQUUsV0FBVztRQUN0QixPQUFPLEVBQUUseUJBQXlCO1FBQ2xDLFFBQVEsRUFBRTtZQUNOLFNBQVMsRUFBRSxTQUFTO1lBQ3BCLFFBQVEsRUFBRSxPQUFPO1NBQ3BCO0tBQ0o7SUFDRCxNQUFNLEVBQUU7UUFDSixLQUFLLEVBQUUsWUFBWTtRQUNuQixLQUFLLEVBQUUsT0FBTztRQUNkLEtBQUssRUFBRSxPQUFPO1FBQ2QsUUFBUSxFQUFFLHNCQUFzQjtRQUNoQyxPQUFPLEVBQUUsVUFBVTtRQUNuQixRQUFRLEVBQUUsV0FBVztRQUNyQixRQUFRLEVBQUUsV0FBVztRQUNyQixHQUFHLEVBQUUsS0FBSztRQUNWLEVBQUUsRUFBRSxJQUFJO1FBQ1IsU0FBUyxFQUFFO1lBQ1AsS0FBSyxFQUFFLE9BQU87WUFDZCxRQUFRLEVBQUUsV0FBVztZQUNyQixPQUFPLEVBQUUsY0FBYztZQUN2QixjQUFjLEVBQUUsdUJBQXVCO1lBQ3ZDLElBQUksRUFBRSxXQUFXO1lBQ2pCLFdBQVcsRUFBRSxvQkFBb0I7WUFDakMsUUFBUSxFQUFFLFVBQVU7WUFDcEIsV0FBVyxFQUFFLGNBQWM7WUFDM0IsSUFBSSxFQUFFLFVBQVU7WUFDaEIsT0FBTyxFQUFFLGNBQWM7WUFDdkIsRUFBRSxFQUFFLElBQUk7WUFDUixLQUFLLEVBQUUsUUFBUTtZQUNmLEtBQUssRUFBRSxPQUFPO1lBQ2QsUUFBUSxFQUFFLFdBQVc7WUFDckIsSUFBSSxFQUFFLE1BQU07WUFDWixPQUFPLEVBQUUsVUFBVTtTQUN0QjtRQUNELElBQUksRUFBRSxNQUFNO0tBQ2Y7SUFDRCxRQUFRLEVBQUU7UUFDTixPQUFPLEVBQUUsU0FBUztRQUNsQixRQUFRLEVBQUUsVUFBVTtRQUNwQixLQUFLLEVBQUUsaUJBQWlCO1FBQ3hCLFNBQVMsRUFBRSxZQUFZO1FBQ3ZCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLEdBQUcsRUFBRSxLQUFLO1FBQ1YsSUFBSSxFQUFFLE1BQU07UUFDWixVQUFVLEVBQUUsaUJBQWlCO1FBQzdCLEVBQUUsRUFBRSxJQUFJO1FBQ1IsTUFBTSxFQUFFLFFBQVE7UUFDaEIsS0FBSyxFQUFFLE9BQU87UUFDZCxXQUFXLEVBQUUsU0FBUztRQUN0QixZQUFZLEVBQUUsVUFBVTtRQUN4QixhQUFhLEVBQUUsZUFBZTtRQUM5QixVQUFVLEVBQUUsbUJBQW1CO1FBQy9CLFNBQVMsRUFBRSxXQUFXO1FBQ3RCLFVBQVUsRUFBRSxLQUFLO1FBQ2pCLGNBQWMsRUFBRSxTQUFTO1FBQ3pCLGFBQWEsRUFBRSxRQUFRO1FBQ3ZCLGlCQUFpQixFQUFFLDRCQUE0QjtRQUMvQyxRQUFRLEVBQUUsa0JBQWtCO1FBQzVCLFdBQVcsRUFBRSxrQkFBa0I7UUFDL0IsU0FBUyxFQUFFLGdCQUFnQjtRQUMzQixTQUFTLEVBQUUsTUFBTTtRQUNqQixXQUFXLEVBQUUsUUFBUTtRQUNyQixVQUFVLEVBQUUsT0FBTztRQUNuQixXQUFXLEVBQUUsY0FBYztRQUMzQixXQUFXLEVBQUUsY0FBYztRQUMzQixXQUFXLEVBQUUsTUFBTTtRQUNuQixVQUFVLEVBQUUsS0FBSztRQUNqQixVQUFVLEVBQUUsS0FBSztRQUNqQixVQUFVLEVBQUUsS0FBSztRQUNqQixXQUFXLEVBQUUsT0FBTztRQUNwQixjQUFjLEVBQUUsU0FBUztRQUN6QixjQUFjLEVBQUUsaUJBQWlCO1FBQ2pDLGdDQUFnQyxFQUFFLHFDQUFxQztRQUN2RSxnQkFBZ0IsRUFBRSxhQUFhO1FBQy9CLG9CQUFvQixFQUFFLHFCQUFxQjtRQUMzQyx1QkFBdUIsRUFBRSx3QkFBd0I7UUFDakQsb0JBQW9CLEVBQUUsa0JBQWtCO1FBQ3hDLG9CQUFvQixFQUFFLGtCQUFrQjtRQUN4QywwQkFBMEIsRUFBRSx1REFBdUQ7UUFDbkYsTUFBTSxFQUFFO1lBQ0osS0FBSyxFQUFFLGNBQWM7WUFDckIsR0FBRyxFQUFFLGlHQUFpRztZQUN0RyxLQUFLLEVBQUUsMERBQTBEO1NBQ3BFO0tBQ0o7SUFDRCxhQUFhLEVBQUU7UUFDWCxRQUFRLEVBQUUsV0FBVztRQUNyQixPQUFPLEVBQUUsdUJBQXVCO1FBQ2hDLFlBQVksRUFBRSw2QkFBNkI7S0FDOUM7SUFDRCxRQUFRLEVBQUU7UUFDTixJQUFJLEVBQUUsa0NBQWtDO1FBQ3hDLFlBQVksRUFBRSwwQkFBMEI7UUFDeEMsUUFBUSxFQUFFLDJCQUEyQjtRQUNyQyxLQUFLLEVBQUUsT0FBTztLQUNqQjtDQUVKIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IERBVEFHUklEX0xPQ0FMRSA9IHtcclxuICAgIGxpbmVOdW1iZXJUaXRsZTogJ05PLicsXHJcbiAgICBlbXB0eU1lc3NhZ2U6ICdFbXB0eSBEYXRhJyxcclxuICAgIHBhZ2luYXRpb246IHtcclxuICAgICAgICBwcmV2aW91c0xhYmVsOiAnUHJldiBQYWdlJyxcclxuICAgICAgICBuZXh0TGFiZWw6ICdOZXh0IFBhZ2UnLFxyXG4gICAgICAgIG1lc3NhZ2U6ICdUb3RhbCA8Yj57MX08L2I+IGl0ZW1zICcsXHJcbiAgICAgICAgcGFnZWxpc3Q6IHtcclxuICAgICAgICAgICAgZmlyc3RUZXh0OiAnRGlzcGxheScsXHJcbiAgICAgICAgICAgIGxhc3RUZXh0OiAnaXRlbXMnXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGZpbHRlcjoge1xyXG4gICAgICAgIHRpdGxlOiAnQ29uZGl0aW9ucycsXHJcbiAgICAgICAgcmVzZXQ6ICdSZXNldCcsXHJcbiAgICAgICAgY2xlYXI6ICdDbGVhcicsXHJcbiAgICAgICAgY2xlYXJBbGw6ICdDbGVhciBhbGwgY29uZGl0aW9ucycsXHJcbiAgICAgICAgc2V0dGluZzogJ1NldHRpbmdzJyxcclxuICAgICAgICBub2ZpbHRlcjogJ1sgRW1wdHkgXScsXHJcbiAgICAgICAgY2hlY2tBbGw6ICdDaGVjayBBbGwnLFxyXG4gICAgICAgIGFuZDogJ0FuZCcsXHJcbiAgICAgICAgb3I6ICdPcicsXHJcbiAgICAgICAgb3BlcmF0b3JzOiB7XHJcbiAgICAgICAgICAgIGVxdWFsOiAnZXF1YWwnLFxyXG4gICAgICAgICAgICBub3RFcXVhbDogJ25vdCBlcXVhbCcsXHJcbiAgICAgICAgICAgIGdyZWF0ZXI6ICdncmVhdGVyIHRoYW4nLFxyXG4gICAgICAgICAgICBncmVhdGVyT3JFcXVhbDogJ2dyZWF0ZXIgdGhhbiBvciBlcXVhbCcsXHJcbiAgICAgICAgICAgIGxlc3M6ICdsZXNzIHRoYW4nLFxyXG4gICAgICAgICAgICBsZXNzT3JFcXVhbDogJ2xlc3MgdGhhbiBvciBlcXVhbCcsXHJcbiAgICAgICAgICAgIGNvbnRhaW5zOiAnY29udGFpbnMnLFxyXG4gICAgICAgICAgICBub3RDb250YWluczogJ25vdCBjb250YWlucycsXHJcbiAgICAgICAgICAgIGxpa2U6ICdjb250YWlucycsXHJcbiAgICAgICAgICAgIG5vdExpa2U6ICdub3QgY29udGFpbnMnLFxyXG4gICAgICAgICAgICBpbjogJ2luJyxcclxuICAgICAgICAgICAgbm90SW46ICdub3QgaW4nLFxyXG4gICAgICAgICAgICBlbXB0eTogJ2VtcHR5JyxcclxuICAgICAgICAgICAgbm90RW1wdHk6ICdub3QgZW1wdHknLFxyXG4gICAgICAgICAgICBudWxsOiAnbnVsbCcsXHJcbiAgICAgICAgICAgIG5vdE51bGw6ICdub3QgbnVsbCdcclxuICAgICAgICB9LFxyXG4gICAgICAgIG1vcmU6ICdNb3JlJ1xyXG4gICAgfSxcclxuICAgIHNldHRpbmdzOiB7XHJcbiAgICAgICAgdmlzaWJsZTogJ1Zpc2libGUnLFxyXG4gICAgICAgIHNvcnR0aW5nOiAnU29ydHRpbmcnLFxyXG4gICAgICAgIHRpdGxlOiAnQ29sdW1uIFNldHRpbmdzJyxcclxuICAgICAgICBjYW5jaG9vc2U6ICdDYW4gY2hvb3NlJyxcclxuICAgICAgICBjaG9vc2VkOiAnQ2hvb3NlZCcsXHJcbiAgICAgICAgYXNjOiAnQVNDJyxcclxuICAgICAgICBkZXNjOiAnREVTQycsXHJcbiAgICAgICAgY2FuY2VsU29ydDogJ0NhbmNlbCBzb3J0dGluZycsXHJcbiAgICAgICAgb2s6ICdPSycsXHJcbiAgICAgICAgY2FuY2VsOiAnQ2FuY2VsJyxcclxuICAgICAgICByZXNldDogJ1Jlc2V0JyxcclxuICAgICAgICBjb25jaXNlTW9kZTogJ0NvbmNpc2UnLFxyXG4gICAgICAgIGFkdmFuY2VkTW9kZTogJ0FkdmFuY2VkJyxcclxuICAgICAgICBmb3JtYXRTZXR0aW5nOiAnQ29sdW1uIGZvcm1hdCcsXHJcbiAgICAgICAgcHJvcGVydGllczogJ0NvbHVtbiBwcm9wZXJ0aWVzJyxcclxuICAgICAgICBncm91cHBpbmc6ICdHcm91cHBpbmcnLFxyXG4gICAgICAgIGFsbENvbHVtbnM6ICdBbGwnLFxyXG4gICAgICAgIHZpc2libGVDb2x1bW5zOiAnVmlzaWJsZScsXHJcbiAgICAgICAgaGlkZGVuQ29sdW1uczogJ0hpZGRlbicsXHJcbiAgICAgICAgc2VhcmNoUGxhY2Vob2xkZXI6ICdQbGVhc2UgZW50ZXIgYSBjb2x1bW4gbmFtZScsXHJcbiAgICAgICAgY2hlY2thbGw6ICdTaG93IG9yIGhpZGUgYWxsJyxcclxuICAgICAgICBoZWFkZXJhbGlnbjogJ0hlYWRlciBhbGlnbm1lbnQnLFxyXG4gICAgICAgIGRhdGFhbGlnbjogJ0RhdGEgYWxpZ25tZW50JyxcclxuICAgICAgICBhbGlnbkxlZnQ6ICdMZWZ0JyxcclxuICAgICAgICBhbGlnbkNlbnRlcjogJ0NlbnRlcicsXHJcbiAgICAgICAgYWxpZ25SaWdodDogJ1JpZ2h0JyxcclxuICAgICAgICBzdW1tYXJ5dHlwZTogJ1N1bW1hcnkgdHlwZScsXHJcbiAgICAgICAgc3VtbWFyeXRleHQ6ICdTdW1tYXJ5IHRleHQnLFxyXG4gICAgICAgIHN1bW1hcnlOb25lOiAnTm9uZScsXHJcbiAgICAgICAgc3VtbWFyeVN1bTogJ1N1bScsXHJcbiAgICAgICAgc3VtbWFyeU1heDogJ01heCcsXHJcbiAgICAgICAgc3VtbWFyeU1pbjogJ01pbicsXHJcbiAgICAgICAgc3VtbWFyQ291bnQ6ICdDb3VudCcsXHJcbiAgICAgICAgc3VtbWFyeUF2ZXJhZ2U6ICdBdmVyYWdlJyxcclxuICAgICAgICBncm91cHBpbmdGaWVsZDogJ0dyb3VwcGluZyBmaWVsZCcsXHJcbiAgICAgICAgbW9yZUdyb3VwcGluZ0ZpZWxkV2FybmluZ01lc3NhZ2U6ICdVcCB0byAzIGZpZWxkcyBhcmUgc2V0IGZvciBncm91cGluZycsXHJcbiAgICAgICAgZ3JvdXBwaW5nU3VtbWFyeTogJ0dyb3VwIHRvdGFsJyxcclxuICAgICAgICBhZGRHcm91cHBpbmdGaWVsZFRpcDogJ0FkZCBncm91cHBpbmcgZmllbGQnLFxyXG4gICAgICAgIHJlbW92ZUdyb3VwcGluZ0ZpZWxkVGlwOiAnUmVtb3ZlIGdyb3VwcGluZyBmaWVsZCcsXHJcbiAgICAgICAgZ3JvdXBwaW5nU3VtbWFyeVR5cGU6ICdHcm91cCB0b3RhbCB0eXBlJyxcclxuICAgICAgICBncm91cHBpbmdTdW1tYXJ5VGV4dDogJ0dyb3VwIHRvdGFsIHRleHQnLFxyXG4gICAgICAgIHJlc3RvcmVEZWZhdWx0U2V0dGluZ3NUZXh0OiAnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHJlc3RvcmUgdGhlIGRlZmF1bHQgc2V0dGluZ3MnLFxyXG4gICAgICAgIHNpbXBsZToge1xyXG4gICAgICAgICAgICB0aXRsZTogJ1Nob3cgQ29sdW1ucycsXHJcbiAgICAgICAgICAgIHRpcDogJ1RoZSBzZWxlY3RlZCBmaWVsZHMgY2FuIGJlIGRpc3BsYXllZCBpbiB0aGUgbGlzdC4gRHJhZyB0byBhZGp1c3QgdGhlIGRpc3BsYXkgb3JkZXIgaW4gdGhlIGxpc3QuJyxcclxuICAgICAgICAgICAgY291bnQ6ICdzaG93IDxzcGFuIGNsYXNzPVwidmlzaWJsZS1jb2xzLWNvdW50XCI+ezB9PC9zcGFuPiBjb2x1bW5zJ1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBzZWxlY3Rpb25EYXRhOiB7XHJcbiAgICAgICAgY2xlYXJBbGw6ICdDbGVhciBhbGwnLFxyXG4gICAgICAgIHRvb2x0aXA6ICdDbGljayBoZXJlIHNob3cgbGlzdC4nLFxyXG4gICAgICAgIGN1cnJlbnRMZW50aDogYDxiPnswfTwvYj4gaXRlbXMgc2VsZWN0ZWQuIGBcclxuICAgIH0sXHJcbiAgICBncm91cFJvdzoge1xyXG4gICAgICAgIHRpcHM6ICdEcmFnIGNvbHVtbnMgaGVyZSB0byBncm91cCBkYXRhLicsXHJcbiAgICAgICAgcmVtb3ZlQ29sdW1uOiAnUmVtb3ZlIHRoZSBncm91cCBjb2x1bW4uJyxcclxuICAgICAgICBjbGVhclRpcDogJ0NsZWFyIGFsbCBncm91cGVkIGZpZWxkcy4nLFxyXG4gICAgICAgIGNsZWFyOiAnRW1wdHknXHJcbiAgICB9XHJcblxyXG59O1xyXG4iXX0=