/**
 * @fileoverview added by tsickle
 * Generated from: lib/ffileupload-adapt-unifile.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FFileUploadModule } from '@farris/extend-file-upload';
import { UploadDialogMoudle } from '@gsp-svc/formdoc-upload';
import { FfileuploadAdaptUnifileService } from './ffileupload-adapt-unifile.service';
import { FfilepreviewAdaptUnifileService } from './ffilepreview-adapt-unifile.service';
import { FFilePreviewAdaptUnifileDirective } from './ffilepreview-adapt-unifile.directive';
import { FileListModule, FileViewerService } from '@gsp-svc/file-viewer';
import { FFileUploadAdaptUnifileConfigToken, FFileUploadAdaptUnifileConfigService } from './ffileupload-adapt-unifile.config';
import { FfilepreviewAdaptSeeimgComponent } from './ffilepreview-adapt-seeimg/ffilepreview-adapt-seeimg.component';
import { FFileAdaptDownloadFileDirective, FFileAdaptPreviewFileDirective } from './ffilepreview-adapt-unifile-simple.directive';
import { LocaleModule } from '@farris/ui-locale';
import { FarrisCommonModule } from '@farris/ui-common';
export class FfileuploadAdaptUnifileModule {
    /**
     * @param {?=} config
     * @return {?}
     */
    static forRoot(config) {
        return {
            ngModule: FfileuploadAdaptUnifileModule,
            providers: [
                { provide: FFileUploadAdaptUnifileConfigToken, useValue: config },
                FFileUploadAdaptUnifileConfigService,
                FfilepreviewAdaptUnifileService,
                FileViewerService
            ]
        };
    }
}
FfileuploadAdaptUnifileModule.decorators = [
    { type: NgModule, args: [{
                declarations: [FFilePreviewAdaptUnifileDirective, FfilepreviewAdaptSeeimgComponent, FFileAdaptDownloadFileDirective, FFileAdaptPreviewFileDirective],
                imports: [
                    CommonModule,
                    UploadDialogMoudle,
                    FileListModule,
                    FFileUploadModule.forRoot(null, FfileuploadAdaptUnifileService),
                    FarrisCommonModule,
                    LocaleModule.forRoot()
                ],
                exports: [
                    FFileUploadModule,
                    FFilePreviewAdaptUnifileDirective,
                    FfilepreviewAdaptSeeimgComponent,
                    FFileAdaptDownloadFileDirective,
                    FFileAdaptPreviewFileDirective
                ],
                providers: [
                    FFileUploadAdaptUnifileConfigService,
                    FfilepreviewAdaptUnifileService,
                    FileViewerService
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmZpbGV1cGxvYWQtYWRhcHQtdW5pZmlsZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2V4dGVuZC1maWxldXBsb2FkLWFkYXB0LXVuaWZpbGUvIiwic291cmNlcyI6WyJsaWIvZmZpbGV1cGxvYWQtYWRhcHQtdW5pZmlsZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDN0QsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDckYsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdkYsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDM0YsT0FBTyxFQUFFLGNBQWMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3pFLE9BQU8sRUFBaUMsa0NBQWtDLEVBQUUsb0NBQW9DLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUM3SixPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSxpRUFBaUUsQ0FBQztBQUNuSCxPQUFPLEVBQUUsK0JBQStCLEVBQUUsOEJBQThCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUNoSSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUF5QnZELE1BQU0sT0FBTyw2QkFBNkI7Ozs7O0lBRXhDLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBc0M7UUFDbkQsT0FBTztZQUNMLFFBQVEsRUFBRSw2QkFBNkI7WUFDdkMsU0FBUyxFQUFFO2dCQUNULEVBQUUsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUU7Z0JBQ2pFLG9DQUFvQztnQkFDcEMsK0JBQStCO2dCQUMvQixpQkFBaUI7YUFDbEI7U0FDRixDQUFDO0lBQ0osQ0FBQzs7O1lBbENGLFFBQVEsU0FBQztnQkFDUixZQUFZLEVBQUUsQ0FBQyxpQ0FBaUMsRUFBRSxnQ0FBZ0MsRUFBQywrQkFBK0IsRUFBQyw4QkFBOEIsQ0FBQztnQkFDbEosT0FBTyxFQUFFO29CQUNQLFlBQVk7b0JBQ1osa0JBQWtCO29CQUNsQixjQUFjO29CQUNkLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsOEJBQThCLENBQUM7b0JBQy9ELGtCQUFrQjtvQkFDbEIsWUFBWSxDQUFDLE9BQU8sRUFBRTtpQkFDdkI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLGlCQUFpQjtvQkFDakIsaUNBQWlDO29CQUNqQyxnQ0FBZ0M7b0JBQ2hDLCtCQUErQjtvQkFDL0IsOEJBQThCO2lCQUFDO2dCQUNqQyxTQUFTLEVBQUU7b0JBQ1Qsb0NBQW9DO29CQUNwQywrQkFBK0I7b0JBQy9CLGlCQUFpQjtpQkFDbEI7YUFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEZGaWxlVXBsb2FkTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy9leHRlbmQtZmlsZS11cGxvYWQnO1xyXG5pbXBvcnQgeyBVcGxvYWREaWFsb2dNb3VkbGUgfSBmcm9tICdAZ3NwLXN2Yy9mb3JtZG9jLXVwbG9hZCc7XHJcbmltcG9ydCB7IEZmaWxldXBsb2FkQWRhcHRVbmlmaWxlU2VydmljZSB9IGZyb20gJy4vZmZpbGV1cGxvYWQtYWRhcHQtdW5pZmlsZS5zZXJ2aWNlJztcclxuaW1wb3J0IHsgRmZpbGVwcmV2aWV3QWRhcHRVbmlmaWxlU2VydmljZSB9IGZyb20gJy4vZmZpbGVwcmV2aWV3LWFkYXB0LXVuaWZpbGUuc2VydmljZSc7XHJcbmltcG9ydCB7IEZGaWxlUHJldmlld0FkYXB0VW5pZmlsZURpcmVjdGl2ZSB9IGZyb20gJy4vZmZpbGVwcmV2aWV3LWFkYXB0LXVuaWZpbGUuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgRmlsZUxpc3RNb2R1bGUsIEZpbGVWaWV3ZXJTZXJ2aWNlIH0gZnJvbSAnQGdzcC1zdmMvZmlsZS12aWV3ZXInO1xyXG5pbXBvcnQgeyBGRmlsZVVwbG9hZEFkYXB0VW5pZmlsZUNvbmZpZywgRkZpbGVVcGxvYWRBZGFwdFVuaWZpbGVDb25maWdUb2tlbiwgRkZpbGVVcGxvYWRBZGFwdFVuaWZpbGVDb25maWdTZXJ2aWNlIH0gZnJvbSAnLi9mZmlsZXVwbG9hZC1hZGFwdC11bmlmaWxlLmNvbmZpZyc7XHJcbmltcG9ydCB7IEZmaWxlcHJldmlld0FkYXB0U2VlaW1nQ29tcG9uZW50IH0gZnJvbSAnLi9mZmlsZXByZXZpZXctYWRhcHQtc2VlaW1nL2ZmaWxlcHJldmlldy1hZGFwdC1zZWVpbWcuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRkZpbGVBZGFwdERvd25sb2FkRmlsZURpcmVjdGl2ZSwgRkZpbGVBZGFwdFByZXZpZXdGaWxlRGlyZWN0aXZlIH0gZnJvbSAnLi9mZmlsZXByZXZpZXctYWRhcHQtdW5pZmlsZS1zaW1wbGUuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgTG9jYWxlTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2NhbGUnO1xyXG5pbXBvcnQgeyBGYXJyaXNDb21tb25Nb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbic7XHJcblxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtGRmlsZVByZXZpZXdBZGFwdFVuaWZpbGVEaXJlY3RpdmUsIEZmaWxlcHJldmlld0FkYXB0U2VlaW1nQ29tcG9uZW50LEZGaWxlQWRhcHREb3dubG9hZEZpbGVEaXJlY3RpdmUsRkZpbGVBZGFwdFByZXZpZXdGaWxlRGlyZWN0aXZlXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBVcGxvYWREaWFsb2dNb3VkbGUsXHJcbiAgICBGaWxlTGlzdE1vZHVsZSxcclxuICAgIEZGaWxlVXBsb2FkTW9kdWxlLmZvclJvb3QobnVsbCwgRmZpbGV1cGxvYWRBZGFwdFVuaWZpbGVTZXJ2aWNlKSxcclxuICAgIEZhcnJpc0NvbW1vbk1vZHVsZSxcclxuICAgIExvY2FsZU1vZHVsZS5mb3JSb290KClcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIEZGaWxlVXBsb2FkTW9kdWxlLFxyXG4gICAgRkZpbGVQcmV2aWV3QWRhcHRVbmlmaWxlRGlyZWN0aXZlLCBcclxuICAgIEZmaWxlcHJldmlld0FkYXB0U2VlaW1nQ29tcG9uZW50LFxyXG4gICAgRkZpbGVBZGFwdERvd25sb2FkRmlsZURpcmVjdGl2ZSxcclxuICAgIEZGaWxlQWRhcHRQcmV2aWV3RmlsZURpcmVjdGl2ZV0sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICBGRmlsZVVwbG9hZEFkYXB0VW5pZmlsZUNvbmZpZ1NlcnZpY2UsXHJcbiAgICBGZmlsZXByZXZpZXdBZGFwdFVuaWZpbGVTZXJ2aWNlLFxyXG4gICAgRmlsZVZpZXdlclNlcnZpY2VcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGZmlsZXVwbG9hZEFkYXB0VW5pZmlsZU1vZHVsZSB7XHJcblxyXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZGaWxlVXBsb2FkQWRhcHRVbmlmaWxlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuZ01vZHVsZTogRmZpbGV1cGxvYWRBZGFwdFVuaWZpbGVNb2R1bGUsXHJcbiAgICAgIHByb3ZpZGVyczogW1xyXG4gICAgICAgIHsgcHJvdmlkZTogRkZpbGVVcGxvYWRBZGFwdFVuaWZpbGVDb25maWdUb2tlbiwgdXNlVmFsdWU6IGNvbmZpZyB9LFxyXG4gICAgICAgIEZGaWxlVXBsb2FkQWRhcHRVbmlmaWxlQ29uZmlnU2VydmljZSxcclxuICAgICAgICBGZmlsZXByZXZpZXdBZGFwdFVuaWZpbGVTZXJ2aWNlLFxyXG4gICAgICAgIEZpbGVWaWV3ZXJTZXJ2aWNlXHJcbiAgICAgIF1cclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==