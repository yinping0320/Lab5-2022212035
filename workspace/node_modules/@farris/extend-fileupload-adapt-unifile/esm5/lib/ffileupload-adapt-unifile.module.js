/**
 * @fileoverview added by tsickle
 * Generated from: lib/ffileupload-adapt-unifile.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FFileUploadModule } from '@farris/extend-file-upload';
import { UploadDialogMoudle } from '@gsp-svc/formdoc-upload';
import { FfileuploadAdaptUnifileService } from './ffileupload-adapt-unifile.service';
import { FfilepreviewAdaptUnifileService } from './ffilepreview-adapt-unifile.service';
import { FFilePreviewAdaptUnifileDirective } from './ffilepreview-adapt-unifile.directive';
import { FileListModule, FileViewerService } from '@gsp-svc/file-viewer';
import { FFileUploadAdaptUnifileConfigToken, FFileUploadAdaptUnifileConfigService } from './ffileupload-adapt-unifile.config';
import { FfilepreviewAdaptSeeimgComponent } from './ffilepreview-adapt-seeimg/ffilepreview-adapt-seeimg.component';
import { FFileAdaptDownloadFileDirective, FFileAdaptPreviewFileDirective } from './ffilepreview-adapt-unifile-simple.directive';
import { LocaleModule } from '@farris/ui-locale';
import { FarrisCommonModule } from '@farris/ui-common';
var FfileuploadAdaptUnifileModule = /** @class */ (function () {
    function FfileuploadAdaptUnifileModule() {
    }
    /**
     * @param {?=} config
     * @return {?}
     */
    FfileuploadAdaptUnifileModule.forRoot = /**
     * @param {?=} config
     * @return {?}
     */
    function (config) {
        return {
            ngModule: FfileuploadAdaptUnifileModule,
            providers: [
                { provide: FFileUploadAdaptUnifileConfigToken, useValue: config },
                FFileUploadAdaptUnifileConfigService,
                FfilepreviewAdaptUnifileService,
                FileViewerService
            ]
        };
    };
    FfileuploadAdaptUnifileModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [FFilePreviewAdaptUnifileDirective, FfilepreviewAdaptSeeimgComponent, FFileAdaptDownloadFileDirective, FFileAdaptPreviewFileDirective],
                    imports: [
                        CommonModule,
                        UploadDialogMoudle,
                        FileListModule,
                        FFileUploadModule.forRoot(null, FfileuploadAdaptUnifileService),
                        FarrisCommonModule,
                        LocaleModule.forRoot()
                    ],
                    exports: [
                        FFileUploadModule,
                        FFilePreviewAdaptUnifileDirective,
                        FfilepreviewAdaptSeeimgComponent,
                        FFileAdaptDownloadFileDirective,
                        FFileAdaptPreviewFileDirective
                    ],
                    providers: [
                        FFileUploadAdaptUnifileConfigService,
                        FfilepreviewAdaptUnifileService,
                        FileViewerService
                    ]
                },] }
    ];
    return FfileuploadAdaptUnifileModule;
}());
export { FfileuploadAdaptUnifileModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmZpbGV1cGxvYWQtYWRhcHQtdW5pZmlsZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2V4dGVuZC1maWxldXBsb2FkLWFkYXB0LXVuaWZpbGUvIiwic291cmNlcyI6WyJsaWIvZmZpbGV1cGxvYWQtYWRhcHQtdW5pZmlsZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDN0QsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDckYsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdkYsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDM0YsT0FBTyxFQUFFLGNBQWMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3pFLE9BQU8sRUFBaUMsa0NBQWtDLEVBQUUsb0NBQW9DLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUM3SixPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSxpRUFBaUUsQ0FBQztBQUNuSCxPQUFPLEVBQUUsK0JBQStCLEVBQUUsOEJBQThCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUNoSSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFHdkQ7SUFBQTtJQW1DQSxDQUFDOzs7OztJQVhRLHFDQUFPOzs7O0lBQWQsVUFBZSxNQUFzQztRQUNuRCxPQUFPO1lBQ0wsUUFBUSxFQUFFLDZCQUE2QjtZQUN2QyxTQUFTLEVBQUU7Z0JBQ1QsRUFBRSxPQUFPLEVBQUUsa0NBQWtDLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRTtnQkFDakUsb0NBQW9DO2dCQUNwQywrQkFBK0I7Z0JBQy9CLGlCQUFpQjthQUNsQjtTQUNGLENBQUM7SUFDSixDQUFDOztnQkFsQ0YsUUFBUSxTQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLGlDQUFpQyxFQUFFLGdDQUFnQyxFQUFDLCtCQUErQixFQUFDLDhCQUE4QixDQUFDO29CQUNsSixPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixrQkFBa0I7d0JBQ2xCLGNBQWM7d0JBQ2QsaUJBQWlCLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSw4QkFBOEIsQ0FBQzt3QkFDL0Qsa0JBQWtCO3dCQUNsQixZQUFZLENBQUMsT0FBTyxFQUFFO3FCQUN2QjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsaUJBQWlCO3dCQUNqQixpQ0FBaUM7d0JBQ2pDLGdDQUFnQzt3QkFDaEMsK0JBQStCO3dCQUMvQiw4QkFBOEI7cUJBQUM7b0JBQ2pDLFNBQVMsRUFBRTt3QkFDVCxvQ0FBb0M7d0JBQ3BDLCtCQUErQjt3QkFDL0IsaUJBQWlCO3FCQUNsQjtpQkFDRjs7SUFjRCxvQ0FBQztDQUFBLEFBbkNELElBbUNDO1NBYlksNkJBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRkZpbGVVcGxvYWRNb2R1bGUgfSBmcm9tICdAZmFycmlzL2V4dGVuZC1maWxlLXVwbG9hZCc7XHJcbmltcG9ydCB7IFVwbG9hZERpYWxvZ01vdWRsZSB9IGZyb20gJ0Bnc3Atc3ZjL2Zvcm1kb2MtdXBsb2FkJztcclxuaW1wb3J0IHsgRmZpbGV1cGxvYWRBZGFwdFVuaWZpbGVTZXJ2aWNlIH0gZnJvbSAnLi9mZmlsZXVwbG9hZC1hZGFwdC11bmlmaWxlLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBGZmlsZXByZXZpZXdBZGFwdFVuaWZpbGVTZXJ2aWNlIH0gZnJvbSAnLi9mZmlsZXByZXZpZXctYWRhcHQtdW5pZmlsZS5zZXJ2aWNlJztcclxuaW1wb3J0IHsgRkZpbGVQcmV2aWV3QWRhcHRVbmlmaWxlRGlyZWN0aXZlIH0gZnJvbSAnLi9mZmlsZXByZXZpZXctYWRhcHQtdW5pZmlsZS5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBGaWxlTGlzdE1vZHVsZSwgRmlsZVZpZXdlclNlcnZpY2UgfSBmcm9tICdAZ3NwLXN2Yy9maWxlLXZpZXdlcic7XHJcbmltcG9ydCB7IEZGaWxlVXBsb2FkQWRhcHRVbmlmaWxlQ29uZmlnLCBGRmlsZVVwbG9hZEFkYXB0VW5pZmlsZUNvbmZpZ1Rva2VuLCBGRmlsZVVwbG9hZEFkYXB0VW5pZmlsZUNvbmZpZ1NlcnZpY2UgfSBmcm9tICcuL2ZmaWxldXBsb2FkLWFkYXB0LXVuaWZpbGUuY29uZmlnJztcclxuaW1wb3J0IHsgRmZpbGVwcmV2aWV3QWRhcHRTZWVpbWdDb21wb25lbnQgfSBmcm9tICcuL2ZmaWxlcHJldmlldy1hZGFwdC1zZWVpbWcvZmZpbGVwcmV2aWV3LWFkYXB0LXNlZWltZy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBGRmlsZUFkYXB0RG93bmxvYWRGaWxlRGlyZWN0aXZlLCBGRmlsZUFkYXB0UHJldmlld0ZpbGVEaXJlY3RpdmUgfSBmcm9tICcuL2ZmaWxlcHJldmlldy1hZGFwdC11bmlmaWxlLXNpbXBsZS5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBMb2NhbGVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWxvY2FsZSc7XHJcbmltcG9ydCB7IEZhcnJpc0NvbW1vbk1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tbW9uJztcclxuXHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW0ZGaWxlUHJldmlld0FkYXB0VW5pZmlsZURpcmVjdGl2ZSwgRmZpbGVwcmV2aWV3QWRhcHRTZWVpbWdDb21wb25lbnQsRkZpbGVBZGFwdERvd25sb2FkRmlsZURpcmVjdGl2ZSxGRmlsZUFkYXB0UHJldmlld0ZpbGVEaXJlY3RpdmVdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIFVwbG9hZERpYWxvZ01vdWRsZSxcclxuICAgIEZpbGVMaXN0TW9kdWxlLFxyXG4gICAgRkZpbGVVcGxvYWRNb2R1bGUuZm9yUm9vdChudWxsLCBGZmlsZXVwbG9hZEFkYXB0VW5pZmlsZVNlcnZpY2UpLFxyXG4gICAgRmFycmlzQ29tbW9uTW9kdWxlLFxyXG4gICAgTG9jYWxlTW9kdWxlLmZvclJvb3QoKVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgRkZpbGVVcGxvYWRNb2R1bGUsXHJcbiAgICBGRmlsZVByZXZpZXdBZGFwdFVuaWZpbGVEaXJlY3RpdmUsIFxyXG4gICAgRmZpbGVwcmV2aWV3QWRhcHRTZWVpbWdDb21wb25lbnQsXHJcbiAgICBGRmlsZUFkYXB0RG93bmxvYWRGaWxlRGlyZWN0aXZlLFxyXG4gICAgRkZpbGVBZGFwdFByZXZpZXdGaWxlRGlyZWN0aXZlXSxcclxuICBwcm92aWRlcnM6IFtcclxuICAgIEZGaWxlVXBsb2FkQWRhcHRVbmlmaWxlQ29uZmlnU2VydmljZSxcclxuICAgIEZmaWxlcHJldmlld0FkYXB0VW5pZmlsZVNlcnZpY2UsXHJcbiAgICBGaWxlVmlld2VyU2VydmljZVxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEZmaWxldXBsb2FkQWRhcHRVbmlmaWxlTW9kdWxlIHtcclxuXHJcbiAgc3RhdGljIGZvclJvb3QoY29uZmlnPzogRkZpbGVVcGxvYWRBZGFwdFVuaWZpbGVDb25maWcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5nTW9kdWxlOiBGZmlsZXVwbG9hZEFkYXB0VW5pZmlsZU1vZHVsZSxcclxuICAgICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgeyBwcm92aWRlOiBGRmlsZVVwbG9hZEFkYXB0VW5pZmlsZUNvbmZpZ1Rva2VuLCB1c2VWYWx1ZTogY29uZmlnIH0sXHJcbiAgICAgICAgRkZpbGVVcGxvYWRBZGFwdFVuaWZpbGVDb25maWdTZXJ2aWNlLFxyXG4gICAgICAgIEZmaWxlcHJldmlld0FkYXB0VW5pZmlsZVNlcnZpY2UsXHJcbiAgICAgICAgRmlsZVZpZXdlclNlcnZpY2VcclxuICAgICAgXVxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19