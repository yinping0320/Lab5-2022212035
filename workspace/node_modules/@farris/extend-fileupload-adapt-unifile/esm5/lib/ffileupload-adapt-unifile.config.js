/**
 * @fileoverview added by tsickle
 * Generated from: lib/ffileupload-adapt-unifile.config.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Optional, InjectionToken, Inject, } from '@angular/core';
import { FARRIS_UPLOADSERVICE_LOCALEDATA } from './locale';
import * as i0 from "@angular/core";
/**
 * @record
 */
export function FFileUploadAdaptUnifileConfig() { }
if (false) {
    /** @type {?|undefined} */
    FFileUploadAdaptUnifileConfig.prototype.rootId;
    /** @type {?|undefined} */
    FFileUploadAdaptUnifileConfig.prototype.formId;
    /** @type {?|undefined} */
    FFileUploadAdaptUnifileConfig.prototype.mode;
    /** @type {?|undefined} */
    FFileUploadAdaptUnifileConfig.prototype.options;
}
/** @type {?} */
export var FFileUploadAdaptUnifileConfigToken = new InjectionToken('MFFileUploadAdaptUnifileConfig');
var FFileUploadAdaptUnifileConfigService = /** @class */ (function () {
    function FFileUploadAdaptUnifileConfigService(exConfig) {
        this.config = (/** @type {?} */ ({
            rootId: '',
            formId: '',
            mode: 0
        }));
        this.basePerfixStr = '';
        if (exConfig) {
            Object.assign(this.config, exConfig);
        }
    }
    /**
     * 获取config属性的值
     */
    /**
     * 获取config属性的值
     * @return {?}
     */
    FFileUploadAdaptUnifileConfigService.prototype.getConfig = /**
     * 获取config属性的值
     * @return {?}
     */
    function () {
        return this.config;
    };
    /**
     * 设置config的属性值
     * @param key
     * @param value
     */
    /**
     * 设置config的属性值
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    FFileUploadAdaptUnifileConfigService.prototype.setConfig = /**
     * 设置config的属性值
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    function (key, value) {
        this.config[key] = value;
    };
    /**
     * 设置基础路径
     * @param value
     */
    /**
     * 设置基础路径
     * @param {?} value
     * @return {?}
     */
    FFileUploadAdaptUnifileConfigService.prototype.setBasePath = /**
     * 设置基础路径
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.basePerfixStr = value;
    };
    /**
     * 获取基础路径
     * @returns
     */
    /**
     * 获取基础路径
     * @return {?}
     */
    FFileUploadAdaptUnifileConfigService.prototype.getBasePath = /**
     * 获取基础路径
     * @return {?}
     */
    function () {
        return this.basePerfixStr;
    };
    /**
     * @param {?} localSer
     * @return {?}
     */
    FFileUploadAdaptUnifileConfigService.prototype.setLocalState = /**
     * @param {?} localSer
     * @return {?}
     */
    function (localSer) {
        if (this.localSerStorage) {
            return true;
        }
        if (localSer && !this.localSerStorage) {
            localSer.setLocaleData(FARRIS_UPLOADSERVICE_LOCALEDATA);
            this.localSerStorage = localSer;
            return true;
        }
        return false;
    };
    /**
     * 获取多语言数据
     * 某些组件没有重新生成，要支持多语言
     * @param key
     */
    /**
     * 获取多语言数据
     * 某些组件没有重新生成，要支持多语言
     * @param {?} lanKey
     * @return {?}
     */
    FFileUploadAdaptUnifileConfigService.prototype.getLocalStr = /**
     * 获取多语言数据
     * 某些组件没有重新生成，要支持多语言
     * @param {?} lanKey
     * @return {?}
     */
    function (lanKey) {
        /** @type {?} */
        var result = "";
        /** @type {?} */
        var defaultLocalId = 'en';
        if (this.localSerStorage) {
            result = this.localSerStorage.getValue(lanKey);
        }
        else {
            defaultLocalId = localStorage.getItem('languageCode') || 'zh-CHS';
        }
        if (!result) {
            result = lanKey.split('.').reduce((/**
             * @param {?} obj
             * @param {?} key
             * @return {?}
             */
            function (obj, key) {
                if (obj) {
                    return obj[key];
                }
                else {
                    return null;
                }
            }), FARRIS_UPLOADSERVICE_LOCALEDATA[defaultLocalId]);
        }
        return result;
    };
    FFileUploadAdaptUnifileConfigService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    FFileUploadAdaptUnifileConfigService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FFileUploadAdaptUnifileConfigToken,] }] }
    ]; };
    /** @nocollapse */ FFileUploadAdaptUnifileConfigService.ngInjectableDef = i0.defineInjectable({ factory: function FFileUploadAdaptUnifileConfigService_Factory() { return new FFileUploadAdaptUnifileConfigService(i0.inject(FFileUploadAdaptUnifileConfigToken, 8)); }, token: FFileUploadAdaptUnifileConfigService, providedIn: "root" });
    return FFileUploadAdaptUnifileConfigService;
}());
export { FFileUploadAdaptUnifileConfigService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FFileUploadAdaptUnifileConfigService.prototype.config;
    /**
     * @type {?}
     * @private
     */
    FFileUploadAdaptUnifileConfigService.prototype.basePerfixStr;
    /**
     * @type {?}
     * @private
     */
    FFileUploadAdaptUnifileConfigService.prototype.localSerStorage;
}
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmZpbGV1cGxvYWQtYWRhcHQtdW5pZmlsZS5jb25maWcuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2V4dGVuZC1maWxldXBsb2FkLWFkYXB0LXVuaWZpbGUvIiwic291cmNlcyI6WyJsaWIvZmZpbGV1cGxvYWQtYWRhcHQtdW5pZmlsZS5jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxjQUFjLEVBQUUsTUFBTSxHQUFHLE1BQU0sZUFBZSxDQUFDO0FBRTlFLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLFVBQVUsQ0FBQzs7Ozs7QUFDM0QsbURBS0M7OztJQUpHLCtDQUFnQjs7SUFDaEIsK0NBQWdCOztJQUNoQiw2Q0FBYzs7SUFDZCxnREFBYTs7O0FBRWpCLE1BQU0sS0FBTyxrQ0FBa0MsR0FBRyxJQUFJLGNBQWMsQ0FBZ0MsZ0NBQWdDLENBQUM7QUFDckk7SUFXSSw4Q0FBb0UsUUFBdUM7UUFQbkcsV0FBTSxHQUFHLG1CQUFBO1lBQ2IsTUFBTSxFQUFFLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBRTtZQUNWLElBQUksRUFBRSxDQUFDO1NBQ1YsRUFBaUMsQ0FBQztRQUMzQixrQkFBYSxHQUFDLEVBQUUsQ0FBQztRQUdyQixJQUFJLFFBQVEsRUFBRTtZQUNWLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztTQUN4QztJQUNMLENBQUM7SUFDRDs7T0FFRzs7Ozs7SUFDSCx3REFBUzs7OztJQUFUO1FBQ0ksT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFDRDs7OztPQUlHOzs7Ozs7O0lBQ0gsd0RBQVM7Ozs7OztJQUFULFVBQVUsR0FBRyxFQUFFLEtBQUs7UUFDaEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDN0IsQ0FBQztJQUNEOzs7T0FHRzs7Ozs7O0lBQ0gsMERBQVc7Ozs7O0lBQVgsVUFBWSxLQUFZO1FBQ3BCLElBQUksQ0FBQyxhQUFhLEdBQUMsS0FBSyxDQUFDO0lBQzdCLENBQUM7SUFDRDs7O09BR0c7Ozs7O0lBQ0gsMERBQVc7Ozs7SUFBWDtRQUNJLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM5QixDQUFDOzs7OztJQUNELDREQUFhOzs7O0lBQWIsVUFBYyxRQUFzQjtRQUNoQyxJQUFHLElBQUksQ0FBQyxlQUFlLEVBQUM7WUFDcEIsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUNELElBQUcsUUFBUSxJQUFFLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBQztZQUMzQixRQUFRLENBQUMsYUFBYSxDQUFDLCtCQUErQixDQUFDLENBQUM7WUFDeEQsSUFBSSxDQUFDLGVBQWUsR0FBQyxRQUFRLENBQUM7WUFDOUIsT0FBTyxJQUFJLENBQUM7U0FDbkI7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBQ0Q7Ozs7T0FJRzs7Ozs7OztJQUNILDBEQUFXOzs7Ozs7SUFBWCxVQUFZLE1BQWE7O1lBQ2pCLE1BQU0sR0FBQyxFQUFFOztZQUNULGNBQWMsR0FBQyxJQUFJO1FBQ3ZCLElBQUcsSUFBSSxDQUFDLGVBQWUsRUFBQztZQUNwQixNQUFNLEdBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDaEQ7YUFBSTtZQUNELGNBQWMsR0FBRSxZQUFZLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxJQUFFLFFBQVEsQ0FBQztTQUNsRTtRQUNELElBQUcsQ0FBQyxNQUFNLEVBQUM7WUFDUCxNQUFNLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNOzs7OztZQUFDLFVBQUMsR0FBRyxFQUFFLEdBQUc7Z0JBQ3ZDLElBQUksR0FBRyxFQUFFO29CQUNMLE9BQU8sR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2lCQUNuQjtxQkFBTTtvQkFDSCxPQUFPLElBQUksQ0FBQztpQkFDZjtZQUNMLENBQUMsR0FBRSwrQkFBK0IsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO1NBQ3ZEO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQzs7Z0JBOUVKLFVBQVUsU0FBQztvQkFDUixVQUFVLEVBQUUsTUFBTTtpQkFDckI7Ozs7Z0RBU2dCLFFBQVEsWUFBSSxNQUFNLFNBQUMsa0NBQWtDOzs7K0NBckJ0RTtDQXlGQyxBQS9FRCxJQStFQztTQTVFWSxvQ0FBb0M7Ozs7OztJQUM3QyxzREFJbUM7Ozs7O0lBQ25DLDZEQUF5Qjs7Ozs7SUFDekIsK0RBQXNDOztBQXFFekMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIE9wdGlvbmFsLCBJbmplY3Rpb25Ub2tlbiwgSW5qZWN0LCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBMb2NhbGVTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2NhbGUnO1xyXG5pbXBvcnQgeyBGQVJSSVNfVVBMT0FEU0VSVklDRV9MT0NBTEVEQVRBIH0gZnJvbSAnLi9sb2NhbGUnO1xyXG5leHBvcnQgaW50ZXJmYWNlIEZGaWxlVXBsb2FkQWRhcHRVbmlmaWxlQ29uZmlnIHtcclxuICAgIHJvb3RJZD86IHN0cmluZztcclxuICAgIGZvcm1JZD86IHN0cmluZztcclxuICAgIG1vZGU/OiBudW1iZXI7Ly8wIOS7o+ihqOato+W8j++8jDHku6PooajkuLTml7ZcclxuICAgIG9wdGlvbnM/OmFueTtcclxufVxyXG5leHBvcnQgY29uc3QgRkZpbGVVcGxvYWRBZGFwdFVuaWZpbGVDb25maWdUb2tlbiA9IG5ldyBJbmplY3Rpb25Ub2tlbjxGRmlsZVVwbG9hZEFkYXB0VW5pZmlsZUNvbmZpZz4oJ01GRmlsZVVwbG9hZEFkYXB0VW5pZmlsZUNvbmZpZycpO1xyXG5ASW5qZWN0YWJsZSh7XHJcbiAgICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIEZGaWxlVXBsb2FkQWRhcHRVbmlmaWxlQ29uZmlnU2VydmljZSB7XHJcbiAgICBwcml2YXRlIGNvbmZpZyA9IHtcclxuICAgICAgICByb290SWQ6ICcnLFxyXG4gICAgICAgIGZvcm1JZDogJycsXHJcbiAgICAgICAgbW9kZTogMFxyXG4gICAgfSBhcyBGRmlsZVVwbG9hZEFkYXB0VW5pZmlsZUNvbmZpZztcclxuICAgIHByaXZhdGUgYmFzZVBlcmZpeFN0cj0nJzsgICAgXHJcbiAgICBwcml2YXRlIGxvY2FsU2VyU3RvcmFnZTpMb2NhbGVTZXJ2aWNlO1xyXG4gICAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQEluamVjdChGRmlsZVVwbG9hZEFkYXB0VW5pZmlsZUNvbmZpZ1Rva2VuKSBleENvbmZpZzogRkZpbGVVcGxvYWRBZGFwdFVuaWZpbGVDb25maWcpIHtcclxuICAgICAgICBpZiAoZXhDb25maWcpIHtcclxuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLmNvbmZpZywgZXhDb25maWcpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog6I635Y+WY29uZmln5bGe5oCn55qE5YC8XHJcbiAgICAgKi9cclxuICAgIGdldENvbmZpZygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5jb25maWc7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOiuvue9rmNvbmZpZ+eahOWxnuaAp+WAvFxyXG4gICAgICogQHBhcmFtIGtleSBcclxuICAgICAqIEBwYXJhbSB2YWx1ZSBcclxuICAgICAqL1xyXG4gICAgc2V0Q29uZmlnKGtleSwgdmFsdWUpIHtcclxuICAgICAgICB0aGlzLmNvbmZpZ1trZXldID0gdmFsdWU7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOiuvue9ruWfuuehgOi3r+W+hFxyXG4gICAgICogQHBhcmFtIHZhbHVlIFxyXG4gICAgICovXHJcbiAgICBzZXRCYXNlUGF0aCh2YWx1ZTpzdHJpbmcpe1xyXG4gICAgICAgIHRoaXMuYmFzZVBlcmZpeFN0cj12YWx1ZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog6I635Y+W5Z+656GA6Lev5b6EXHJcbiAgICAgKiBAcmV0dXJucyBcclxuICAgICAqL1xyXG4gICAgZ2V0QmFzZVBhdGgoKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5iYXNlUGVyZml4U3RyO1xyXG4gICAgfVxyXG4gICAgc2V0TG9jYWxTdGF0ZShsb2NhbFNlcjpMb2NhbGVTZXJ2aWNlKXtcclxuICAgICAgICBpZih0aGlzLmxvY2FsU2VyU3RvcmFnZSl7XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihsb2NhbFNlciYmIXRoaXMubG9jYWxTZXJTdG9yYWdlKXtcclxuICAgICAgICAgICAgICAgIGxvY2FsU2VyLnNldExvY2FsZURhdGEoRkFSUklTX1VQTE9BRFNFUlZJQ0VfTE9DQUxFREFUQSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvY2FsU2VyU3RvcmFnZT1sb2NhbFNlcjtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOiOt+WPluWkmuivreiogOaVsOaNrlxyXG4gICAgICog5p+Q5Lqb57uE5Lu25rKh5pyJ6YeN5paw55Sf5oiQ77yM6KaB5pSv5oyB5aSa6K+t6KiAXHJcbiAgICAgKiBAcGFyYW0ga2V5IFxyXG4gICAgICovXHJcbiAgICBnZXRMb2NhbFN0cihsYW5LZXk6c3RyaW5nKXtcclxuICAgICAgICBsZXQgcmVzdWx0PVwiXCI7XHJcbiAgICAgICAgbGV0IGRlZmF1bHRMb2NhbElkPSdlbic7XHJcbiAgICAgICAgaWYodGhpcy5sb2NhbFNlclN0b3JhZ2Upe1xyXG4gICAgICAgICAgICByZXN1bHQ9dGhpcy5sb2NhbFNlclN0b3JhZ2UuZ2V0VmFsdWUobGFuS2V5KTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgZGVmYXVsdExvY2FsSWQ9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdsYW5ndWFnZUNvZGUnKXx8J3poLUNIUyc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKCFyZXN1bHQpe1xyXG4gICAgICAgICAgICByZXN1bHQgPSBsYW5LZXkuc3BsaXQoJy4nKS5yZWR1Y2UoKG9iaiwga2V5KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAob2JqKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9ialtrZXldO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSwgRkFSUklTX1VQTE9BRFNFUlZJQ0VfTE9DQUxFREFUQVtkZWZhdWx0TG9jYWxJZF0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG59OyJdfQ==