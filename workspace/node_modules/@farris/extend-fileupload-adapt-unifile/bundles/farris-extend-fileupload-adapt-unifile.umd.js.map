{"version":3,"file":"farris-extend-fileupload-adapt-unifile.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@farris/extend-fileupload-adapt-unifile/lib/locale.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffileupload-adapt-unifile.config.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffilepreview-adapt-unifile.service.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffilepreview-adapt-unifile-simple.directive.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffilepreview-adapt-seeimg/ffilepreview-adapt-seeimg.component.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffileupload-adapt-unifile.service.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffilepreview-adapt-unifile.directive.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffileupload-adapt-unifile.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export const FARRIS_UPLOADSERVICE_LOCALEDATA = {\r\n    'en': {\r\n        'uploadAdapt':{\r\n            'needFile':'Please set the attachment to be downloaded',\r\n            'recompile':'Due to security issues, the attachment download provides a security verification mechanism, and the attachment download function needs to be recompiled',\r\n            'uploadError':'Upload failed'\r\n        },\r\n        'previewAdapt':{\r\n            'notSupport':'This file does not support preview'\r\n        }\r\n    },\r\n    'zh-CHS': {\r\n        'uploadAdapt':{\r\n            'needFile':'请设置要下载的附件',\r\n            'recompile':'因为安全问题，附件下载提供安全校验机制，附件下载功能需要重新编译',\r\n            'uploadError':'上传失败'\r\n        },\r\n        'previewAdapt':{\r\n            'notSupport':'此文件不支持预览'\r\n        }\r\n    },\r\n    'zh-CHT': {\r\n        'uploadAdapt':{\r\n            'needFile':'請設定要下載的附件',\r\n            'recompile':'因為安全問題，附件下載提供安全校驗機制，附件下載功能需要重新編譯',            \r\n            'uploadError':'上傳失敗'\r\n        },\r\n        'previewAdapt':{\r\n            'notSupport':'此檔案不支持預覽'\r\n        }\r\n    }\r\n};","import { Injectable, Optional, InjectionToken, Inject, } from '@angular/core';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { FARRIS_UPLOADSERVICE_LOCALEDATA } from './locale';\r\nexport interface FFileUploadAdaptUnifileConfig {\r\n    rootId?: string;\r\n    formId?: string;\r\n    mode?: number;//0 代表正式，1代表临时\r\n    options?:any;\r\n}\r\nexport const FFileUploadAdaptUnifileConfigToken = new InjectionToken<FFileUploadAdaptUnifileConfig>('MFFileUploadAdaptUnifileConfig');\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FFileUploadAdaptUnifileConfigService {\r\n    private config = {\r\n        rootId: '',\r\n        formId: '',\r\n        mode: 0\r\n    } as FFileUploadAdaptUnifileConfig;\r\n    private basePerfixStr='';    \r\n    private localSerStorage:LocaleService;\r\n    constructor(@Optional() @Inject(FFileUploadAdaptUnifileConfigToken) exConfig: FFileUploadAdaptUnifileConfig) {\r\n        if (exConfig) {\r\n            Object.assign(this.config, exConfig);\r\n        }\r\n    }\r\n    /**\r\n     * 获取config属性的值\r\n     */\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n    /**\r\n     * 设置config的属性值\r\n     * @param key \r\n     * @param value \r\n     */\r\n    setConfig(key, value) {\r\n        this.config[key] = value;\r\n    }\r\n    /**\r\n     * 设置基础路径\r\n     * @param value \r\n     */\r\n    setBasePath(value:string){\r\n        this.basePerfixStr=value;\r\n    }\r\n    /**\r\n     * 获取基础路径\r\n     * @returns \r\n     */\r\n    getBasePath(){\r\n        return this.basePerfixStr;\r\n    }\r\n    setLocalState(localSer:LocaleService){\r\n        if(this.localSerStorage){\r\n            return true;\r\n        }\r\n        if(localSer&&!this.localSerStorage){\r\n                localSer.setLocaleData(FARRIS_UPLOADSERVICE_LOCALEDATA);\r\n                this.localSerStorage=localSer;\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 获取多语言数据\r\n     * 某些组件没有重新生成，要支持多语言\r\n     * @param key \r\n     */\r\n    getLocalStr(lanKey:string){\r\n        let result=\"\";\r\n        let defaultLocalId='en';\r\n        if(this.localSerStorage){\r\n            result=this.localSerStorage.getValue(lanKey);\r\n        }else{\r\n            defaultLocalId= localStorage.getItem('languageCode')||'zh-CHS';\r\n        }\r\n        if(!result){\r\n            result = lanKey.split('.').reduce((obj, key) => {\r\n                if (obj) {\r\n                    return obj[key];\r\n                } else {\r\n                    return null;\r\n                }\r\n            }, FARRIS_UPLOADSERVICE_LOCALEDATA[defaultLocalId]);\r\n        }\r\n        return result;\r\n    }\r\n};","import { Injectable, Injector, Optional } from '@angular/core';\r\nimport { FUploadFileExtend } from '@farris/extend-file-upload';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { FileViewerService } from '@gsp-svc/file-viewer';\r\nimport { DownloadService } from '@gsp-svc/formdoc-upload';\r\nimport { FFileUploadAdaptUnifileConfigService, FFileUploadAdaptUnifileConfig } from './ffileupload-adapt-unifile.config';\r\nimport { WEBAPI_PREFIX_TOKEN } from '@farris/ui-common';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FfilepreviewAdaptUnifileService {\r\n    extendData;// 暂时用于简单合并\r\n    private previewExtendServerConfig: FFileUploadAdaptUnifileConfig = null;\r\n    notifySer: NotifyService = null;\r\n    private perfixStr='';\r\n    constructor(private fileviewSer: FileViewerService, private configSer: FFileUploadAdaptUnifileConfigService, @Optional() private downloadSer: DownloadService,@Optional() private inject:Injector) {\r\n        this.extendData = this.configSer.getConfig();\r\n        this.notifySer = this.fileviewSer['injector'].get(NotifyService, null);\r\n        if(this.notifySer){\r\n            this.configSer.setLocalState(this.notifySer.localeService);\r\n        }\r\n        // 此处inject的时机和upload服务里的一样，此处不用再判断多语言\r\n        if( this.inject){\r\n            if(WEBAPI_PREFIX_TOKEN){\r\n                this.perfixStr = this.inject.get(WEBAPI_PREFIX_TOKEN, '');\r\n                this.configSer.setBasePath(this.perfixStr);\r\n            }\r\n         }\r\n    }\r\n    /**\r\n     * 返回最终属性值\r\n     * @param key \r\n     * @param configValue \r\n     * @param extendValue \r\n     */\r\n    private getFinallyConfig(key, extendValue) {\r\n        if (extendValue && extendValue.hasOwnProperty(key)) {\r\n            return extendValue[key];\r\n        }\r\n        // 避免下载等其他指令再传入扩展配置\r\n        if (this.previewExtendServerConfig && this.previewExtendServerConfig.hasOwnProperty(key)) {\r\n            return this.previewExtendServerConfig[key];\r\n        }\r\n        // 来自module中forRoot的配置\r\n        if (this.extendData.hasOwnProperty(key)) {\r\n            return this.extendData[key];\r\n        }\r\n           return null;\r\n        \r\n    }\r\n    /**\r\n     * 预览单个文件\r\n     * @param info \r\n     */\r\n    previewFile(info: FUploadFileExtend, extendService: FFileUploadAdaptUnifileConfig) {\r\n        return this.previewFileList([info], extendService);\r\n    }\r\n    /**\r\n     * 预览整个列表\r\n     * @param infos \r\n     */\r\n    previewFileList(infos: FUploadFileExtend[], extendService: FFileUploadAdaptUnifileConfig) {\r\n        //metadataIdList: string[]\r\n        let rootId = this.getFinallyConfig('rootId', extendService);\r\n        let metadataIdList = [];\r\n        infos.forEach(item => {\r\n            metadataIdList.push(item.extend['metadataId']);\r\n        });\r\n        let options = this.getFinallyConfig('options', extendService);\r\n        if(options){\r\n            return this.fileviewSer.viewerFileList(metadataIdList, rootId, options);\r\n        }else{\r\n            return this.fileviewSer.viewerFileList(metadataIdList, rootId);\r\n        }\r\n    }\r\n    /**\r\n     * 下载附件\r\n     * @param info \r\n     */\r\n    downloadFile(info: FUploadFileExtend, extendService: FFileUploadAdaptUnifileConfig) {\r\n        if (!info.id) {\r\n            let failMsg=this.getLocalStr('uploadAdapt.needFile');\r\n            if(this.notifySer){\r\n                this.notifySer.warning(failMsg);\r\n                return;\r\n            }else{\r\n                throw new Error(failMsg);\r\n            }            \r\n        }\r\n        window.open(this.getImgSrc(info, extendService));\r\n    }\r\n    /**\r\n   * 下载附件\r\n   * @param info \r\n   */\r\n    multiDownloadFiles(infos: FUploadFileExtend[], extendService: FFileUploadAdaptUnifileConfig) {\r\n        //metadataIdList: string[]\r\n        if (infos.length == 1) {\r\n            this.downloadFile(infos[0], extendService);\r\n        } else {\r\n            let rootId = this.getFinallyConfig('rootId', extendService);\r\n            let metadataIdList = [];\r\n            infos.forEach(item => {\r\n                metadataIdList.push(item.extend['metadataId']);\r\n            });\r\n            let url = this.downloadSer.getMultipleDownloadUrl(JSON.stringify(metadataIdList), rootId);\r\n            window.open(url);\r\n        }\r\n    }\r\n    multiDownloadFilesWidthName(infos: FUploadFileExtend[], name = \"\", extendService: FFileUploadAdaptUnifileConfig) {\r\n        //metadataIdList: string[]\r\n        if (infos.length == 1) {\r\n            this.downloadFile(infos[0], extendService);\r\n        } else {\r\n            let rootId = this.getFinallyConfig('rootId', extendService);\r\n            let metadataIdList = [];\r\n            infos.forEach(item => {\r\n                metadataIdList.push(item.extend['metadataId']);\r\n            });\r\n            let url = this.downloadSer.getMultipleDownloadUrlWithName(JSON.stringify(metadataIdList), rootId, name);\r\n            window.open(url);\r\n        }\r\n    }\r\n    /**\r\n     * 获取下载链接\r\n    */\r\n    getImgSrc(info: FUploadFileExtend, extendService: FFileUploadAdaptUnifileConfig) {\r\n        if (!info.id) {            \r\n            let failMsg=this.getLocalStr('uploadAdapt.needFile');\r\n            if(this.notifySer){\r\n                this.notifySer.warning(failMsg);\r\n                return;\r\n            }else{\r\n                throw new Error(failMsg);\r\n            }   \r\n        }\r\n        let url = '';\r\n        let attachId = info.extend['metadataId'];\r\n        let rootId = this.getFinallyConfig('rootId', extendService);\r\n        // 文档服务服务单元名进行规范性调整，由document修改为dfs\r\n        if (this.downloadSer) {\r\n            if (rootId) {\r\n                url = this.downloadSer.getDownloadUrl(attachId, rootId);\r\n            }\r\n        } else if (rootId) {\r\n            console.warn(this.getLocalStr('uploadAdapt.recompile'));\r\n            url = `${this.perfixStr}/api/runtime/dfs/v1.0/formdoc/filecontent?metadataid=${attachId}&rootid=${rootId}`;\r\n        }\r\n        return url;\r\n    }\r\n    /**\r\n     * 根据预览指令的扩展配置获取\r\n     * @param value \r\n     */\r\n    setPreviwExtendServerConfig(value) {\r\n        this.previewExtendServerConfig = value;\r\n    }\r\n    getPreviewExtendServerConfig() {\r\n        return this.previewExtendServerConfig;\r\n    }\r\n    getLocalStr(lanKey:string){\r\n        return this.configSer.getLocalStr(lanKey);\r\n    }\r\n}","import { Directive, HostListener, Input } from '@angular/core';\r\nimport { FfilepreviewAdaptUnifileService } from './ffilepreview-adapt-unifile.service';\r\n\r\n@Directive({\r\n    selector: '[fFileAdaptPreviewFile]'\r\n})\r\nexport class FFileAdaptPreviewFileDirective {\r\n    // 附件信息\r\n    @Input('fFileAdaptPreviewFile') fileInfo;\r\n    /**\r\n     * 捕获预览事件\r\n     * @param fileInfo \r\n     */\r\n    @HostListener('click', ['$event'])\r\n    filePreviewEventHandler() {\r\n        if (!this.fileInfo || this.viewDisabled) {\r\n            return;\r\n        }\r\n        this.previewSer.previewFile(this.fileInfo, this.extendServerConfig);\r\n    }\r\n    // 是否禁用预览\r\n    @Input() viewDisabled = false;\r\n    // 处理扩展的服务器端配置\r\n    @Input() extendServerConfig = null;\r\n    constructor(private previewSer: FfilepreviewAdaptUnifileService) {\r\n\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[fFileAdaptDownloadFile]'\r\n})\r\nexport class FFileAdaptDownloadFileDirective {\r\n    //  附件信息\r\n    @Input('fFileAdaptDownloadFile') fileInfo;\r\n    /**\r\n     * 捕获预览事件\r\n     * @param fileInfo \r\n     */\r\n    @HostListener('click', ['$event'])\r\n    filePreviewEventHandler() {\r\n        if (!this.fileInfo || this.downloadDisabled) {\r\n            return;\r\n        }\r\n        if (this.enableMulti && this.fileInfo instanceof Array) {\r\n            this.previewSer.multiDownloadFilesWidthName(this.fileInfo,this.zipName,this.extendServerConfig);\r\n        } else {\r\n            this.previewSer.downloadFile(this.fileInfo, this.extendServerConfig);\r\n        }\r\n    }\r\n    //重命名\r\n    @Input() zipName='';\r\n    // 是否禁用下载\r\n    @Input() downloadDisabled = false;\r\n    // 处理扩展的服务器端配置\r\n    @Input() extendServerConfig = null;\r\n    // 是否启用批量下载\r\n    @Input() enableMulti = false;\r\n    constructor(private previewSer: FfilepreviewAdaptUnifileService) {\r\n\r\n    }\r\n}\r\n\r\n","import { Component, OnInit, ElementRef, Input, HostBinding } from '@angular/core';\r\nimport { FUploadFileExtend } from '@farris/extend-file-upload';\r\nimport { FfilepreviewAdaptUnifileService } from './../ffilepreview-adapt-unifile.service';\r\n\r\n@Component({\r\n  selector: 'ffilepreview-adapt-seeimg',\r\n  templateUrl: './ffilepreview-adapt-seeimg.component.html',\r\n  styleUrls: ['./ffilepreview-adapt-seeimg.component.css']\r\n})\r\nexport class FfilepreviewAdaptSeeimgComponent implements OnInit {\r\n  @HostBinding('class.ffilepreview-adapt-seeimg') cls = true;\r\n  // 是否启用图片的缩略图，默认为false；如果启用，图片类型会出现缩略图；不启用，根据类型显示图标\r\n  @Input() enableThumbnail = false;\r\n  // 图标的样式前缀\r\n  @Input() clsPrefix = 'ffilepreview--filetype';\r\n  // 显示缩略图中时，定义哪些后缀属于图片;\r\n  @Input() supportImgSuffix = 'jpeg,jpg,gif,png,bmp';\r\n  // 附件信息\r\n  @Input() fileInfo: FUploadFileExtend;\r\n  @Input() iconWidth=38;\r\n  // 缩略图的最大宽度\r\n  @Input() maxThumbnailWidth = '100%';\r\n  // 缩略图的最小宽度\r\n  @Input() maxThumbnailHeight = '100%';\r\n  // 处理扩展的服务器端配置，这样可以支持每个指令预览不同的目录，比如{'rootId':'default-root','formId':'formId'}\r\n  @Input() extendServerConfig =null;\r\n  constructor(private adpSer: FfilepreviewAdaptUnifileService, private elementRef: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  /**\r\n   * 获取图片的链接\r\n   */\r\n  imgSrc() {\r\n    return this.adpSer.getImgSrc(this.fileInfo, this.extendServerConfig);\r\n  }\r\n  /**\r\n   * 判断是否是图片\r\n   */\r\n  isImage() {\r\n    // 没有数据\r\n    if (!this.fileInfo) {\r\n      return false;\r\n    }\r\n    // 没有名称\r\n    let fileName = this.fileInfo.name;\r\n    if (!fileName) {\r\n      return false;\r\n    }\r\n    let lastDotIndex = fileName.lastIndexOf(\".\");\r\n    let fileSuffix = '';\r\n    if (lastDotIndex > -1) {\r\n      fileSuffix = fileName.substring(lastDotIndex + 1).toLocaleLowerCase();\r\n    }\r\n    if (!fileSuffix) {\r\n      return false;\r\n    }\r\n    let tImgSuffixArray = this.supportImgSuffix.split(',');\r\n    let tIndex = tImgSuffixArray.findIndex(item => {\r\n      return item == fileSuffix;\r\n    });\r\n    if (tIndex > -1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  /**\r\n   * 获取文件类型样式\r\n   */\r\n  getFileTypeClassName() {\r\n\r\n    let clsName = this.clsPrefix;\r\n    // 如果名称为空\r\n    if (!this.fileInfo || !this.fileInfo['name']) {\r\n      return clsName + '-any';\r\n    }\r\n    let fileName = this.fileInfo['name'];\r\n    let lastDotIndex = fileName.lastIndexOf(\".\");\r\n    let fileSuffix = '';\r\n    if (lastDotIndex > -1) {\r\n      fileSuffix = fileName.substring(lastDotIndex + 1).toLocaleLowerCase();\r\n    }\r\n    switch (fileSuffix) {\r\n      case 'pdf':\r\n        clsName += '-pdf';\r\n        break;\r\n      case 'jpeg':\r\n      case 'jpg':\r\n      case 'gif':\r\n      case 'png':\r\n      case 'bmp':\r\n        clsName += '-img';\r\n        break;\r\n      case 'ppt':\r\n        clsName += '-ppt';\r\n        break;\r\n      case 'doc':\r\n      case 'docx':\r\n        clsName += '-doc';\r\n        break;\r\n      case 'xls':\r\n      case 'xlsx':\r\n        clsName += '-xls';\r\n        break;\r\n      case 'txt':\r\n        clsName += '-txt';\r\n        break;\r\n      case 'zip':\r\n        clsName += '-zip';\r\n        break;\r\n      default:\r\n        clsName += '-any';\r\n    }\r\n    return clsName;\r\n  }\r\n}\r\n","import { Injectable,Injector, Optional } from \"@angular/core\";\r\nimport {\r\n    UploadServerService,\r\n    UploadFile,\r\n    UploadInput,\r\n    UploadStatus,\r\n} from \"@farris/extend-file-upload\";\r\nimport { Observable, forkJoin, of, EMPTY, concat, Subject } from \"rxjs\";\r\nimport {\r\n    UploadService,\r\n    GspFormUploadListEntity,\r\n    GspFormRemoveListEntity,\r\n    GspFormDocInfo,\r\n    GspFormUploadEntity,\r\n    FileInfo,\r\n    OperatingModes,\r\n    GspDocMetaProperty,\r\n} from \"@gsp-svc/formdoc-upload\";\r\nimport {\r\n    FFileUploadAdaptUnifileConfigService,\r\n    FFileUploadAdaptUnifileConfig,\r\n} from \"./ffileupload-adapt-unifile.config\";\r\nimport {\r\n    catchError,\r\n    delay,\r\n    expand,\r\n    last,\r\n    map,\r\n    switchMap,\r\n    tap,\r\n} from \"rxjs/operators\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { LocaleService } from \"@farris/ui-locale\";\r\n\r\n\r\nexport interface UploadServerConfig {\r\n    sameNameAllowed: boolean;\r\n    maxFileSize: number;\r\n    allowedMultiUpload: boolean;\r\n    uploadedFileInfoList?: any;\r\n    oldUploadedFileList?: any;\r\n}\r\n\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class FfileuploadAdaptUnifileService extends UploadServerService {\r\n    extendData; // 暂时用于简单合并\r\n    bufferSize = 1024 * 1024;\r\n    private static previous = 0;\r\n    private uploadedChunk = {};\r\n    private fileTotalChunk = {};\r\n    private formId: string;\r\n    private rootId: string;\r\n    private serverConfig : UploadServerConfig = null;\r\n\r\n    constructor(\r\n        private uploadSer: UploadService,\r\n        private configSer: FFileUploadAdaptUnifileConfigService,\r\n        @Optional() private inject:Injector\r\n    ) {\r\n        super();        \r\n        this.extendData = this.configSer.getConfig();\r\n        // 开始创建多语言服务\r\n        let hasLocalSer=this.configSer.setLocalState(null);\r\n        if( this.inject && !hasLocalSer){\r\n            // 如果存在inject，再次创建，inject是在某个版不能之后才出现的\r\n            this.configSer.setLocalState(this.inject.get(LocaleService,null));\r\n         }\r\n    }\r\n    /**\r\n     * 因为被附件组件作为依赖类，导致此处获取不到最新的基路径值\r\n     * @returns \r\n     */\r\n    private getPrefixStr(){\r\n        return this.configSer.getBasePath();\r\n    }\r\n    private uuid() {\r\n        let S4 = function () {\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        };\r\n        let nGuid = S4() + S4()+ '-' + S4()+ '-' + S4()+ '-' + S4()+ '-' + S4() + S4() + S4();\r\n        return nGuid;\r\n    }\r\n    /**\r\n     * 删除文件\r\n     * @param file\r\n     * @param event\r\n     */\r\n    remove(\r\n        files: UploadFile[],\r\n        event: UploadInput,\r\n        extendService: FFileUploadAdaptUnifileConfig\r\n    ): Observable<any> {\r\n        return this.innerRemoveList(files, event, extendService);\r\n    }\r\n\r\n    private innerRemoveList(\r\n        files: UploadFile[],\r\n        event: UploadInput,\r\n        extendService = null\r\n    ): Observable<any> {\r\n        return new Observable((observer) => {\r\n            let removeFileInfo = new GspFormRemoveListEntity();\r\n            let metadataIdList = [];\r\n            files.forEach((fileItem) => {\r\n                if (fileItem[\"response\"]) {\r\n                    metadataIdList.push(fileItem[\"response\"][\"metadataId\"]);\r\n                }\r\n            });\r\n\r\n            removeFileInfo.mode = this.getFinallyConfig(\"mode\", extendService);\r\n            let rootId = this.getFinallyConfig(\"rootId\", extendService);\r\n            removeFileInfo.metadataIdList = [].concat(metadataIdList);\r\n\r\n            this.uploadSer.removeList(metadataIdList, rootId).subscribe(\r\n                (result) => {\r\n                    // 没有需要整合的服务器端返回数据\r\n                    observer.next({ type: \"removed\", files: files });\r\n                },\r\n                (error) => {\r\n                    observer.error(error);\r\n                    observer.complete();\r\n                },\r\n                () => {\r\n                    observer.complete();\r\n                }\r\n            );\r\n        });\r\n    }\r\n    /**\r\n     * 上传文件\r\n     * @param file\r\n     * @param event\r\n     */\r\n    upload(\r\n        files: UploadFile[],\r\n        event: UploadInput,\r\n        extendService: FFileUploadAdaptUnifileConfig\r\n    ): Observable<any> {\r\n        this.formId = this.getFinallyConfig(\"formId\", extendService);\r\n        this.rootId = this.getFinallyConfig(\"rootId\", extendService);\r\n        if (event.type == \"sliceUpload\") {\r\n\r\n            const up$ = () => {\r\n                if (this.serverConfig && this.serverConfig.allowedMultiUpload) {\r\n                    if (!this.serverConfig.sameNameAllowed) {\r\n                        return this.uploadSer.getUploadedFileInfoList(this.formId, this.rootId).pipe(\r\n                            switchMap((res: any) => {\r\n                                if (res != null && res.error == null) {\r\n                                    this.serverConfig.uploadedFileInfoList = res;\r\n                                    this.serverConfig.oldUploadedFileList = JSON.parse(JSON.stringify(res));\r\n\r\n                                    return this.uploadBigFile2(files, event, extendService);            \r\n                                }\r\n                                return of(res);\r\n                            })\r\n                        );\r\n                    } else {\r\n                        return this.uploadBigFile2(files, event, extendService);\r\n                    }\r\n                } else {\r\n                    return this.uploadBigFile(files, event, extendService);\r\n                }\r\n            }\r\n\r\n\r\n            if (!this.serverConfig) {\r\n                return this.getServerConfig(this.rootId).pipe(\r\n                    switchMap((res: any) => {\r\n                        if (res != null && res.error == null) {\r\n                            this.serverConfig = {\r\n                                sameNameAllowed: res.sameNameAllowed,\r\n                                allowedMultiUpload: res.allowedMultiUpload,\r\n                                maxFileSize: parseInt(\r\n                                    JSON.parse(res.validateConfiguration).maxFileSize\r\n                                )\r\n                            }\r\n                        }\r\n                        return up$();\r\n                    })\r\n                );\r\n            }\r\n            return up$();\r\n        }\r\n        return this.innerUploadList(files, event, extendService);\r\n    }\r\n    /**\r\n     * 内部上传方式\r\n     * @param files\r\n     * @param event\r\n     * @param extendService\r\n     */\r\n    private innerUploadList(\r\n        files: UploadFile[],\r\n        event: UploadInput,\r\n        extendService: FFileUploadAdaptUnifileConfig\r\n    ): Observable<any> {\r\n        return new Observable((observer) => {\r\n            let uploadInfo = new GspFormUploadListEntity();\r\n            uploadInfo.formId = this.getFinallyConfig(\"formId\", extendService);\r\n            uploadInfo.mode = this.getFinallyConfig(\"mode\", extendService);\r\n\r\n            let rootId = this.getFinallyConfig(\"rootId\", extendService);\r\n            uploadInfo.docInfoList = [];\r\n            let readerObserable: Observable<any>[] = [];\r\n            files.forEach((fileItem: UploadFile) => {\r\n                let sub = new Observable((obser) => {\r\n                    let reader = new FileReader();\r\n                    // 暂不处理异常\r\n                    reader.readAsBinaryString(fileItem.nativeFile);\r\n                    reader.onload = (e) => {\r\n                        let info = { fileName: \"\", fileContent: \"\" } as any;\r\n                        info[\"fileName\"] = fileItem.name;\r\n                        info[\"fileContent\"] = btoa(reader.result.toString());\r\n                        // 如果data里有数据，并且属性是配置的扩展属性\r\n                        if (\r\n                            event.hasOwnProperty(\"data\") &&\r\n                            event[\"data\"] &&\r\n                            event[\"data\"].hasOwnProperty(\"extProperty\")\r\n                        ) {\r\n                            //\r\n                            info[\"extProperty\"] = event[\"data\"][\"extProperty\"];\r\n                        }\r\n                        uploadInfo.docInfoList.push(info);\r\n                        obser.next();\r\n                        obser.complete();\r\n                    };\r\n                });\r\n                readerObserable.push(sub);\r\n            });\r\n\r\n            forkJoin(readerObserable).subscribe((datas) => {\r\n                //     metadataId: string;\r\n                //  fileName: string;\r\n                this.uploadSer.uploadList(uploadInfo, rootId).subscribe(\r\n                    (result) => {\r\n                        if (result.error) {\r\n                            // 此接口一旦出现问题，所有附件都上传不通过\r\n                            observer.error(this.errorInfoFormat(result.error, files));\r\n                            observer.complete();\r\n                            return;\r\n                        }\r\n                        // 合并返回结果到此处\r\n                        result.forEach((item) => {\r\n                            var findIndex = this.findFileIndexByFileName(\r\n                                files,\r\n                                item.fileName\r\n                            );\r\n                            if (findIndex > -1) {\r\n                                files[findIndex][\"response\"] = item;\r\n                                files[findIndex][\"progress\"][\"status\"] = UploadStatus.Done;\r\n                            }\r\n                        });\r\n\r\n                        observer.next({ type: \"done\", files: files });\r\n                    },\r\n                    (error) => {\r\n                        observer.error(this.errorInfoFormat(error, files));\r\n                        observer.complete();\r\n                    },\r\n                    () => {\r\n                        observer.complete();\r\n                    }\r\n                );\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * 分片加载\r\n     * @param file\r\n     * @param event\r\n     * @param extendService\r\n     */\r\n    multipartUpload(\r\n        file: UploadFile,\r\n        event: UploadInput,\r\n        extendService: FFileUploadAdaptUnifileConfig\r\n    ): Observable<any> {\r\n        return new Observable((observer) => {\r\n            // let fileInfo: FileInfo;\r\n            let uuid = this.uuid();\r\n            // let uuid = UUID.UUID();\r\n            //reader.readAsBinaryString(selectedFile);\r\n            //reader.onload = (e) => {\r\n            let fileName = file.name;\r\n            // fileInfo = {\r\n            //   id: uuid,\r\n            //   name: fileName,\r\n            //   type: file.type,\r\n            //   source: \"\",\r\n            //   size: this.formatFileSize(file.size),\r\n            //   fileSize: file.size,\r\n            //   picListDisplayName: this.getMultipartDisplayName(fileName),\r\n            //   queueListDisplayName: fileName,\r\n            //   //content: reader.result.toString(),\r\n            //   hasUploaded: false,\r\n            //   mouseOn: false,\r\n            //   selectd: false,\r\n            //   isUploading: true,\r\n            //   uploadResult: false,\r\n            //   uploadProcess: 0,\r\n            //   errorMessage: \"\",\r\n            //   extensionDropListId: 0,\r\n            //   extensionName: \"\"\r\n            // }\r\n\r\n            let chunkTotal: number = Math.ceil(file.size / this.bufferSize);\r\n            // 标记当前附件总的分片数\r\n            this.fileTotalChunk[uuid] = chunkTotal;\r\n            let chunkIndex: number = 0;\r\n            // 标记当前附件成功的分片数\r\n            this.uploadedChunk[uuid] = 0;\r\n            while (chunkIndex < chunkTotal) {\r\n                let uploadInfo = new GspFormUploadEntity();\r\n                uploadInfo.mode = OperatingModes.Temp;\r\n                uploadInfo.formId = this.getFinallyConfig(\"formId\", extendService);\r\n                uploadInfo.rootId = this.getFinallyConfig(\"rootId\", extendService);\r\n\r\n                let docInfo: GspFormDocInfo = new GspFormDocInfo();\r\n                docInfo.fileName = fileName;\r\n                docInfo.metadataId = uuid;\r\n                docInfo.total = chunkTotal;\r\n                // 如果data里有数据，并且属性是配置的扩展属性\r\n                if (\r\n                    event.hasOwnProperty(\"data\") &&\r\n                    event[\"data\"] &&\r\n                    event[\"data\"].hasOwnProperty(\"extProperty\")\r\n                ) {\r\n                    docInfo[\"extProperty\"] = event[\"data\"][\r\n                        \"extProperty\"\r\n                    ] as GspDocMetaProperty;\r\n                }\r\n                // 下一个文件大小\r\n                let nextSize = Math.min((chunkIndex + 1) * this.bufferSize, file.size);\r\n                // File类型\r\n                let fileData = file[\"nativeFile\"].slice(\r\n                    chunkIndex * this.bufferSize,\r\n                    nextSize\r\n                );\r\n                // 读取文件\r\n                let reader = new FileReader();\r\n                reader.readAsBinaryString(fileData);\r\n                let innerIndex = chunkIndex;\r\n                reader.onload = () => {\r\n                    // 附件上传\r\n                    docInfo.fileContent = btoa(reader.result.toString());\r\n                    docInfo.index = innerIndex;\r\n\r\n                    uploadInfo.docInfo = docInfo;\r\n                    let info = uploadInfo;\r\n\r\n                    this.uploadSer.uploadFile(info).subscribe(\r\n                        (result) => {\r\n                            if (result && result.error) {\r\n                                // 分片上传有返回结果就是报错了\r\n                                observer.error(this.errorInfoFormat(result.error, [file]));\r\n                                observer.complete();\r\n                                return;\r\n                            } else {\r\n                                this.uploadedChunk[uuid]++;\r\n                                if (\r\n                                    this.uploadedChunk[docInfo.metadataId] ==\r\n                                    this.fileTotalChunk[docInfo.metadataId]\r\n                                ) {\r\n                                    // 判断是所有分片都上传完成\r\n                                    file.progress = {\r\n                                        status: UploadStatus.Done,\r\n                                        data: {\r\n                                            percentage: 100,\r\n                                        },\r\n                                    };\r\n                                    file.response = docInfo;\r\n                                    delete this.uploadedChunk[uuid];\r\n                                    delete this.fileTotalChunk[uuid];\r\n                                    observer.next({ type: \"done\", files: [file] });\r\n                                    observer.complete();\r\n                                } else {\r\n                                    // 分片上传正常\r\n                                    const percentage = Number.parseInt(\r\n                                        (\r\n                                            (this.uploadedChunk[uuid] / this.fileTotalChunk[uuid]) *\r\n                                            100\r\n                                        ).toFixed(0)\r\n                                    );\r\n                                    // 判断未上传完成\r\n                                    file.progress = {\r\n                                        status: UploadStatus.Uploading,\r\n                                        data: {\r\n                                            percentage: percentage,\r\n                                        },\r\n                                    };\r\n                                    observer.next({ type: \"uploading\", files: [file] });\r\n                                }\r\n                            }\r\n                        },\r\n                        (error) => {\r\n                            delete this.uploadedChunk[uuid];\r\n                            delete this.fileTotalChunk[uuid];\r\n                            observer.error(this.errorInfoFormat(error, [file]));\r\n                            observer.complete();\r\n                        }\r\n                    );\r\n                };\r\n                chunkIndex = chunkIndex + 1;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 获取分片的附件大小\r\n     * @param size\r\n     */\r\n    private formatFileSize(size: number) {\r\n        if (size < 102400) return (size / 1024).toFixed(1) + \"K\";\r\n        else if (size < 1024 * 1024) return (size / 1024).toFixed(0) + \"K\";\r\n        else if (size < 100 * 1024 * 1024)\r\n            return (size / 1024 / 1024).toFixed(1) + \"M\";\r\n        else if (size < 1024 * 1024 * 1024)\r\n            return (size / 1024 / 1024).toFixed(0) + \"M\";\r\n        else return (size / 1024 / 1024 / 1024).toFixed(1) + \"G\";\r\n    }\r\n    /**\r\n     * 获取分片的 附件名称\r\n     * @param fileName\r\n     */\r\n    private getMultipartDisplayName(fileName: string) {\r\n        if (fileName.length <= 10) return fileName;\r\n        else {\r\n            let headContent = fileName.substring(0, 2);\r\n            let tailContent = fileName.substring(fileName.lastIndexOf(\".\") - 2);\r\n            return headContent + \"…\" + tailContent;\r\n        }\r\n    }\r\n    private errorInfoFormat(error, files) {\r\n        //\r\n        let errorFiles = files.map((item) => {\r\n            return { id: item.id, name: item.name };\r\n        });\r\n        let errorMsg=this.configSer.getLocalStr('uploadAdapt.uploadError');\r\n        if (error) {\r\n            return Object.assign(\r\n                error,\r\n                { files: errorFiles },\r\n                {\r\n                    message: error[\"Message\"] || error[\"extensionMessage\"] || errorMsg,\r\n                    type: \"error\",\r\n                }\r\n            );\r\n        } else {\r\n            return Object.assign(\r\n                { files: errorFiles },\r\n                { message: errorMsg, type: \"error\" }\r\n            );\r\n        }\r\n    }\r\n    /**\r\n     * 返回最终属性值\r\n     * @param key\r\n     * @param configValue\r\n     * @param extendValue\r\n     */\r\n    private getFinallyConfig(key, extendValue) {\r\n        if (extendValue && extendValue.hasOwnProperty(key)) {\r\n            return extendValue[key];\r\n        }\r\n        return this.extendData[key];\r\n    }\r\n\r\n    private findFileIndexByFileName(files: UploadFile[], fileName) {\r\n        // 按照肯定能找到文件来处理\r\n        let findIndex = files.findIndex((file) => file.name == fileName);\r\n        return findIndex;\r\n    }\r\n\r\n    //#region 大文件分片上传\r\n\r\n    uploadBigFile(\r\n        files: UploadFile[],\r\n        event: UploadInput,\r\n        extendService: FFileUploadAdaptUnifileConfig\r\n    ) {\r\n        const uploadChunks$ = new Subject();\r\n\r\n        const _files = files.map((n) => {\r\n            const chunks = this._getBigFileChunks(n, event, extendService);\r\n            return { ...n, ...chunks };\r\n        });\r\n\r\n        const uploadchunks$: Observable<any>[] = _files.map((f) =>\r\n            this.uploadChunks(f, uploadChunks$)\r\n        );\r\n        concat(...uploadchunks$).subscribe(\r\n            (f: any) => {\r\n                f.progress = {\r\n                    status: UploadStatus.Done,\r\n                    data: {\r\n                        percentage: 100,\r\n                    },\r\n                };\r\n                f.response = JSON.parse(f.chunks[0].get(\"docInfo\"));\r\n                uploadChunks$.next({ type: \"done\", files: [f] });\r\n            },\r\n            (error) => {\r\n                uploadChunks$.error(this.errorInfoFormat(error, files));\r\n                uploadChunks$.complete();\r\n            },\r\n            () => {\r\n                uploadChunks$.complete();\r\n            }\r\n        );\r\n\r\n        return uploadChunks$.asObservable();\r\n    }\r\n\r\n    private uploadFileChunk(file: any) {\r\n        const url = `${this.getPrefixStr()}/api/runtime/dfs/v1.0/formdoc/slice`;\r\n\r\n        return this.uploadSer[\"http\"][\"http\"]\r\n            .post(url, file.chunks[file.total])\r\n            .pipe(\r\n                switchMap(() => {\r\n                    return of(file);\r\n                }),\r\n                catchError((error: HttpErrorResponse) => {\r\n                    return of(error);\r\n                })\r\n            );\r\n    }\r\n\r\n    private uploadChunks(file, upChunk$: Subject<any>) {\r\n        const doChunksRemain = (i) => i > -1;\r\n        const completeUpload = (f) => of(f);\r\n        const uploadChunk = (f) => {\r\n            return this.uploadFileChunk(f).pipe(\r\n                delay(100),\r\n                map((f: any) => {\r\n                    // 块数为0 时，即为此文件的所有块均上传成功\r\n                    f.progress = {\r\n                        status: UploadStatus.Uploading,\r\n                        data: {\r\n                            percentage: ((f.total / f.chunks.length) * 100).toFixed(0),\r\n                        },\r\n                    };\r\n                    upChunk$.next({ type: \"uploading\", files: [f] });\r\n\r\n                    return f;\r\n                })\r\n            );\r\n        };\r\n        const createMultipartUpload = (f) => of(f);\r\n\r\n        return createMultipartUpload(file).pipe(\r\n            // tap((f) => console.log(\"upload file\", f.name)),\r\n            expand((f) => {\r\n                if (doChunksRemain(--file.total)) {\r\n                    return uploadChunk(file);\r\n                }\r\n                return EMPTY;\r\n            }),\r\n            // tap((f: any) => {\r\n            //     console.log(`file: ${f.name} - remaining chunks: ${f.total}`);\r\n            // }),\r\n            last(),\r\n            switchMap((res: any) => {\r\n                return completeUpload(file);\r\n            })\r\n        );\r\n    }\r\n\r\n    private _getBigFileChunks(\r\n        file: UploadFile,\r\n        event: UploadInput,\r\n        extendService: FFileUploadAdaptUnifileConfig\r\n    ) {\r\n        let uuid = this.uuid();\r\n\r\n        const formId = this.getFinallyConfig(\"formId\", extendService);\r\n        const rootId = this.getFinallyConfig(\"rootId\", extendService);\r\n        let realChunkSize=(event.chunkSize || 1)*this.bufferSize;\r\n        let chunkTotal: number = Math.ceil(file.size / realChunkSize);\r\n        let chunkIndex: number = 0;\r\n        const fileChunks = { chunks: [], total: chunkTotal };\r\n\r\n        while (chunkIndex < chunkTotal) {\r\n            let uploadInfo = new GspFormUploadEntity();\r\n            uploadInfo.mode = OperatingModes.Temp;\r\n            uploadInfo.formId = formId;\r\n            uploadInfo.rootId = rootId;\r\n\r\n            let docInfo: GspFormDocInfo = new GspFormDocInfo();\r\n\r\n            docInfo.fileName = file.name;\r\n            docInfo.metadataId = uuid;\r\n            docInfo.total = chunkTotal;\r\n\r\n            let nextSize = Math.min((chunkIndex + 1) * realChunkSize, file.size);\r\n            // File类型\r\n            let fileData = file[\"nativeFile\"].slice(\r\n                chunkIndex * realChunkSize,\r\n                nextSize\r\n            );\r\n\r\n            docInfo.size = file.size;\r\n            docInfo.index = chunkIndex;\r\n            docInfo.fileContent = \"\";\r\n\r\n            // 如果data里有数据，并且属性是配置的扩展属性\r\n            if (\r\n                event.hasOwnProperty(\"data\") &&\r\n                event[\"data\"] &&\r\n                event[\"data\"].hasOwnProperty(\"extProperty\")\r\n            ) {\r\n                docInfo[\"extProperty\"] = event[\"data\"][\r\n                    \"extProperty\"\r\n                ] as GspDocMetaProperty;\r\n            }\r\n\r\n            uploadInfo.docInfo = docInfo;\r\n\r\n            //封装请求formdata\r\n            let formData = new FormData();\r\n            formData.append(\"uploadInfo\", JSON.stringify(uploadInfo));\r\n            formData.append(\"docInfo\", JSON.stringify(docInfo));\r\n            formData.append(\"file\", fileData);\r\n\r\n            fileChunks.chunks.push(formData);\r\n            chunkIndex = chunkIndex + 1;\r\n        }\r\n\r\n        return fileChunks;\r\n    }\r\n    /**\r\n     * 获取跟目录的配置\r\n     * @param rootId \r\n     * @returns \r\n     */\r\n    private getServerConfig(rootId: string) {\r\n        return this.uploadSer.getUploadInfo(rootId);\r\n    }\r\n\r\n    //#endregion\r\n\r\n\r\n\r\n\r\n    //#region 读取相关配置分片上传至云服务器\r\n\r\n    private unorderedUploadBigFile(file: any, uploadChunks$) {\r\n\r\n        if ( !file.partList) {\r\n            file.partList = [];\r\n        }\r\n\r\n        this.initMultiUpload(file).subscribe((r: any) => {\r\n\r\n            if (r && r.error) {\r\n                uploadChunks$.error(this.errorInfoFormat(r.error, [file]));\r\n                uploadChunks$.complete();\r\n                return;\r\n            }\r\n\r\n            file.chunks.forEach(n => {\r\n                this.multiUpload(n, r).subscribe((res: any) => {\r\n\r\n                    if (res && res.error) {\r\n                        uploadChunks$.error(this.errorInfoFormat(res.error, [file]));\r\n                        uploadChunks$.complete();\r\n                        return;\r\n                    }\r\n\r\n\r\n                    file.progress = {\r\n                        status: UploadStatus.Uploading,\r\n                        data:  {\r\n                            percentage: (res.index / file.chunks.length * 100).toFixed(0)\r\n                        }\r\n                    };\r\n                    uploadChunks$.next({ type: 'uploading', files: [file] });\r\n                    if (res && res.result) {\r\n                        file.partList.push(res.result);\r\n                    }\r\n                    if (file.partList.length === file.chunks.length) {\r\n                        let completeMultiUploadRequest: any = {};\r\n                        completeMultiUploadRequest.metadataId = file.metadataId;\r\n                        completeMultiUploadRequest.partList = file.partList;\r\n                        completeMultiUploadRequest.rootId = this.rootId;\r\n                        completeMultiUploadRequest.uploadId = file.uploadId;\r\n                        completeMultiUploadRequest.size = file.size;\r\n                        \r\n                        this.completeMultiUpload(completeMultiUploadRequest).subscribe( (cmur: any) => {\r\n\r\n                            if (cmur && cmur.status != 200) {\r\n                                uploadChunks$.error(this.errorInfoFormat(cmur.error, [file]));\r\n                                uploadChunks$.complete();\r\n                                return;\r\n                            }\r\n\r\n                            file.progress = {\r\n                                status: UploadStatus.Done,\r\n                                data:  {\r\n                                    percentage: 100\r\n                                }\r\n                            };\r\n            \r\n                            file.response = JSON.parse(file.chunks[0].get(\"docInfo\"));\r\n                            uploadChunks$.next({type: 'done', files:[file]});\r\n                        },\r\n                        error => {\r\n                            uploadChunks$.error(this.errorInfoFormat(error, [file]));\r\n                            uploadChunks$.complete();\r\n                        })\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    uploadBigFile2(files: UploadFile[], event: UploadInput, extendService: FFileUploadAdaptUnifileConfig) {\r\n\r\n        const uploadChunks$ = new Subject();\r\n\r\n        const formId = this.getFinallyConfig('formId', extendService);\r\n        const rootId = this.getFinallyConfig('rootId', extendService);\r\n\r\n        const _files = files.map(n => {\r\n            const chunks = this._getBigFileChunks2(n, event, extendService);\r\n            return { ...n, ...chunks, formId, rootId};\r\n        });\r\n\r\n        // 无序上传\r\n        _files.forEach(n => {\r\n            this.unorderedUploadBigFile(n, uploadChunks$);\r\n        });\r\n        \r\n\r\n        // 有序上传\r\n        // const uploadchunks$: Observable<any>[] =  _files.map((f) => this.uploadChunks2(f, uploadChunks$));\r\n        // concat(...uploadchunks$).pipe(\r\n        //     switchMap((f: any) => {\r\n        //         let completeMultiUploadRequest: any = {};\r\n        //         completeMultiUploadRequest.metadataId = f.metadataId;\r\n        //         completeMultiUploadRequest.partList = f.partList;\r\n        //         completeMultiUploadRequest.rootId = this.rootId;\r\n        //         completeMultiUploadRequest.uploadId = f.uploadId;\r\n        //         completeMultiUploadRequest.size = f.size;\r\n\r\n        //         return this.completeMultiUpload(completeMultiUploadRequest).pipe(\r\n        //             map(() => f)\r\n        //         );\r\n        //     })\r\n        // ).subscribe(\r\n        //     (f: any) => {\r\n        //         f.progress = {\r\n        //             status: UploadStatus.Done,\r\n        //             data:  {\r\n        //                 percentage: 100\r\n        //             }\r\n        //         };\r\n\r\n        //         f.response = JSON.parse(f.chunks[0].get(\"docInfo\"));\r\n        //         uploadChunks$.next({type: 'done', files:[f]});\r\n        //     },\r\n        //     error => {\r\n        //         uploadChunks$.error(this.errorInfoFormat(error, files));\r\n        //         uploadChunks$.complete();\r\n        //     },\r\n        //     () => {\r\n        //         uploadChunks$.complete();\r\n        //         // console.log(\"all files uploaded\")\r\n        //     }\r\n        // );\r\n\r\n        return uploadChunks$.asObservable();\r\n    }\r\n\r\n\r\n    private initMultiUpload(file: any) {\r\n        let initRequest: any = {};\r\n        initRequest.path = file.formId;\r\n        initRequest.metadataId = this.uuid();\r\n        initRequest.rootId = file.rootId;\r\n        initRequest.size = file.size;\r\n        initRequest.fileName = file.name;\r\n\r\n        let url = `${this.getPrefixStr()}/api/runtime/dfs/v1.0/formdoc/multi/init`;\r\n        \r\n        return this.uploadSer['http']['http'].post(url, initRequest).pipe(\r\n            tap((res: any) => {\r\n                file.metadataId = initRequest.metadataId;\r\n                file.uploadId = res.uploadId;\r\n            }),\r\n            catchError((error: HttpErrorResponse) => {\r\n                return of(error);\r\n            }),\r\n            map( (res: any) => {\r\n                res.metadataId = initRequest.metadataId;\r\n                return res;\r\n            })\r\n        );\r\n\r\n    }\r\n\r\n    private completeMultiUpload(request: any): Observable<any> {\r\n\r\n        let url = `${this.getPrefixStr()}/api/runtime/dfs/v1.0/formdoc/multi/complete`;\r\n    \r\n        return this.uploadSer['http']['http'].post(url, request).pipe(\r\n            tap((res) => {}),\r\n            catchError((error: HttpErrorResponse) => {\r\n                return of(error);\r\n            })\r\n        );\r\n    }\r\n\r\n    private multiUpload(formdata: FormData, r: any): Observable<any> {\r\n        let url =`${this.getPrefixStr()}/api/runtime/dfs/v1.0/formdoc/multi/upload`;\r\n        const mr = JSON.parse(formdata.get('multiRequest') as any);\r\n        mr.uploadId = r.uploadId;\r\n        mr.metadataId = r.metadataId;\r\n        formdata.set('multiRequest', JSON.stringify(mr));\r\n\r\n        const di = JSON.parse(formdata.get('docInfo') as any);\r\n        di.metadataId = r.metadataId;\r\n        formdata.set('docInfo', JSON.stringify(di));\r\n\r\n        return  this.uploadSer['http']['http'].post(url, formdata).pipe(\r\n            tap(res => { }),\r\n            catchError((error: HttpErrorResponse) => {\r\n                return of(error);\r\n            })\r\n        );\r\n    }\r\n\r\n    private uploadChunks2(file, upChunk$: Subject<any>) {\r\n\r\n        const total = file.total;\r\n\r\n        let t = -1;\r\n\r\n\r\n        const doChunksRemain = (i) => i < total;\r\n        const completeUpload = (f) => of(f);\r\n        const uploadChunk = (f, uploadId: any) => {\r\n            return this.multiUpload(f, uploadId).pipe(\r\n                delay(100),\r\n                map((res: any) => {\r\n                    // 块数为0 时，即为此文件的所有块均上传成功\r\n                    file.progress = {\r\n                        status: UploadStatus.Uploading,\r\n                        data:  {\r\n                            percentage: (res.index / file.chunks.length * 100).toFixed(0)\r\n                        }\r\n                    };\r\n                    upChunk$.next({ type: 'uploading', files: [file] });\r\n                    if (res && res.result) {\r\n                        if ( !file.partList) {\r\n                            file.partList = [];\r\n                        }\r\n                        file.partList.push(res.result);\r\n                    }\r\n                    return file;\r\n                })\r\n            )\r\n        };\r\n        const createMultipartUpload = (f) => {\r\n            return this.initMultiUpload(f);\r\n            // return of(f)\r\n        };\r\n\r\n\r\n        return createMultipartUpload(file).pipe(\r\n            // tap((f) => console.log(\"upload file\", f.name)),\r\n            expand((r: any) => {\r\n                if (doChunksRemain(++t)) {\r\n                    return uploadChunk(file.chunks[t], r);\r\n                }\r\n                return EMPTY;\r\n            }),\r\n            // tap((f: any) => {\r\n            //     console.log(`file: ${f.name} - remaining chunks: ${f.total}`);\r\n            // }),\r\n            last(),\r\n            switchMap((res: any) => {\r\n                return completeUpload(file);\r\n\r\n            })\r\n        );\r\n    }\r\n\r\n    private _getBigFileChunks2(file: UploadFile, event: UploadInput, extendService: FFileUploadAdaptUnifileConfig) {\r\n        let uuid = this.uuid();\r\n        \r\n        const _bifferSize = Math.max(event.chunkSize,5)*this.bufferSize;\r\n\r\n        let chunkTotal: number = Math.ceil(file.size / _bifferSize);\r\n        let chunkIndex: number = 0;\r\n        const fileChunks = {chunks: [], total: chunkTotal};\r\n\r\n        const rootId = this.getFinallyConfig('rootId', extendService);\r\n\r\n\r\n        while (chunkIndex < chunkTotal) {\r\n\r\n            let nextSize = Math.min((chunkIndex + 1) * _bifferSize, file.size);\r\n            // File类型\r\n            let fileData = file['nativeFile'].slice(chunkIndex * _bifferSize, nextSize);\r\n\r\n            let multiRequest: any = {};\r\n            multiRequest.metadataId = uuid;\r\n            multiRequest.rootId = rootId;\r\n            // multiRequest.uploadId = uploadId;\r\n            multiRequest.index = chunkIndex;\r\n            multiRequest.total = chunkTotal;\r\n            multiRequest.size = fileData.size;\r\n      \r\n            //封装请求formdata\r\n            let formData = new FormData();\r\n            formData.append('multiRequest', JSON.stringify(multiRequest));\r\n            formData.append('file', fileData);\r\n\r\n\r\n            let docInfo: GspFormDocInfo = new GspFormDocInfo();\r\n\r\n            docInfo.fileName = file.name;\r\n            docInfo.metadataId = uuid;\r\n            docInfo.total = chunkTotal;\r\n            docInfo.size = file.size;\r\n            docInfo.index = chunkIndex;\r\n            docInfo.fileContent = \"\";\r\n\r\n            formData.append(\"docInfo\", JSON.stringify(docInfo));\r\n\r\n            // 如果data里有数据，并且属性是配置的扩展属性\r\n            if (\r\n                event.hasOwnProperty(\"data\") &&\r\n                event[\"data\"] &&\r\n                event[\"data\"].hasOwnProperty(\"extProperty\")\r\n            ) {\r\n                docInfo[\"extProperty\"] = event[\"data\"][\r\n                    \"extProperty\"\r\n                ] as GspDocMetaProperty;\r\n            }\r\n\r\n\r\n\r\n            fileChunks.chunks.push(formData);\r\n            chunkIndex = chunkIndex + 1;\r\n        }\r\n\r\n        return fileChunks;\r\n    \r\n    }\r\n\r\n\r\n\r\n    //#endregion\r\n\r\n}\r\n","import { Directive, HostListener, Input, Optional } from '@angular/core';\r\nimport { FfilepreviewAdaptUnifileService } from './ffilepreview-adapt-unifile.service';\r\n\r\n@Directive({\r\n    selector: '[fFilePreviewAdaptUnifile]',\r\n    providers:[FfilepreviewAdaptUnifileService]\r\n})\r\nexport class FFilePreviewAdaptUnifileDirective {\r\n    /**\r\n     * 捕获预览事件\r\n     * @param fileInfo \r\n     */\r\n    @HostListener('filePreviewEvent', ['$event'])\r\n    filePreviewEventHandler(fileInfo) {\r\n        // 可以通过属性 extendServerConfig设置，也可以通过一体化组件的Input属性配置\r\n        const previewOpts = Object.assign(this.extendServerConfig || {});\r\n        previewOpts.options = Object.assign(previewOpts.options || {}, {showDownload: !!fileInfo.showDownload},{showComments:!!fileInfo.showComments},{modeless:!!fileInfo.modeless});\r\n        \r\n        if (previewOpts.options.showHeader === undefined) {\r\n            previewOpts.options.showHeader = true;\r\n        }\r\n\r\n        if (previewOpts.options.showFileList === undefined) {\r\n            previewOpts.options.showFileList = true;\r\n        }\r\n        if (previewOpts.options.showComments === undefined) {\r\n            previewOpts.options.showComments = false;\r\n        }\r\n        if (previewOpts.options.modeless === undefined) {\r\n            previewOpts.options.modeless = false;\r\n        }\r\n        // 支持修订模式\r\n\r\n        // 文件扩展名\r\n        const extendName = fileInfo.name.substr(fileInfo.name.lastIndexOf('.') + 1).toLowerCase();\r\n        const enablePreviews = [ 'doc','docx','xls','xlsx','ppt','pptx','jpg','jpeg','png', 'gif', 'bmp', 'pdf', 'txt', 'wps', 'wpt', 'et','dps'];\r\n\r\n        if (enablePreviews.includes(extendName)) {\r\n            this.previewSer.previewFile(fileInfo, previewOpts);\r\n        } else {\r\n            const msg = this.previewSer.getLocalStr(\"previewAdapt.notSupport\");\r\n            if (this.previewSer.notifySer) {\r\n                this.previewSer.notifySer.warning(msg);\r\n            } else {\r\n                alert(msg);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 捕获下载事件\r\n     * @param fileInfo \r\n     */\r\n    @HostListener('fileDownloadEvent', ['$event'])\r\n    fileDownloadEventHandler(downloadEv) {\r\n        // 如果是批量下载, downloadEv={fileInfos:[],name:}\r\n        if (downloadEv&&downloadEv['fileInfos'].length > 0) {\r\n            if (downloadEv['fileInfos'].length > 1) {\r\n                this.previewSer.multiDownloadFilesWidthName(downloadEv['fileInfos'],downloadEv['name'], this.extendServerConfig);\r\n            }else{\r\n                this.previewSer.downloadFile(downloadEv['fileInfos'][0], this.extendServerConfig);\r\n            }\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * 处理扩展的服务器端配置\r\n     */\r\n    private _extendServeConfig=null;\r\n    @Input() \r\n    set extendServerConfig(value){\r\n        this._extendServeConfig=value;\r\n        this.previewSer.setPreviwExtendServerConfig(value);\r\n    } \r\n    get extendServerConfig(){\r\n        return this._extendServeConfig;\r\n    }\r\n    constructor(private previewSer: FfilepreviewAdaptUnifileService ) {\r\n        \r\n    }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FFileUploadModule } from '@farris/extend-file-upload';\r\nimport { UploadDialogMoudle } from '@gsp-svc/formdoc-upload';\r\nimport { FfileuploadAdaptUnifileService } from './ffileupload-adapt-unifile.service';\r\nimport { FfilepreviewAdaptUnifileService } from './ffilepreview-adapt-unifile.service';\r\nimport { FFilePreviewAdaptUnifileDirective } from './ffilepreview-adapt-unifile.directive';\r\nimport { FileListModule, FileViewerService } from '@gsp-svc/file-viewer';\r\nimport { FFileUploadAdaptUnifileConfig, FFileUploadAdaptUnifileConfigToken, FFileUploadAdaptUnifileConfigService } from './ffileupload-adapt-unifile.config';\r\nimport { FfilepreviewAdaptSeeimgComponent } from './ffilepreview-adapt-seeimg/ffilepreview-adapt-seeimg.component';\r\nimport { FFileAdaptDownloadFileDirective, FFileAdaptPreviewFileDirective } from './ffilepreview-adapt-unifile-simple.directive';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\n\r\n\r\n@NgModule({\r\n  declarations: [FFilePreviewAdaptUnifileDirective, FfilepreviewAdaptSeeimgComponent,FFileAdaptDownloadFileDirective,FFileAdaptPreviewFileDirective],\r\n  imports: [\r\n    CommonModule,\r\n    UploadDialogMoudle,\r\n    FileListModule,\r\n    FFileUploadModule.forRoot(null, FfileuploadAdaptUnifileService),\r\n    FarrisCommonModule,\r\n    LocaleModule.forRoot()\r\n  ],\r\n  exports: [\r\n    FFileUploadModule,\r\n    FFilePreviewAdaptUnifileDirective, \r\n    FfilepreviewAdaptSeeimgComponent,\r\n    FFileAdaptDownloadFileDirective,\r\n    FFileAdaptPreviewFileDirective],\r\n  providers: [\r\n    FFileUploadAdaptUnifileConfigService,\r\n    FfilepreviewAdaptUnifileService,\r\n    FileViewerService\r\n  ]\r\n})\r\nexport class FfileuploadAdaptUnifileModule {\r\n\r\n  static forRoot(config?: FFileUploadAdaptUnifileConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: FfileuploadAdaptUnifileModule,\r\n      providers: [\r\n        { provide: FFileUploadAdaptUnifileConfigToken, useValue: config },\r\n        FFileUploadAdaptUnifileConfigService,\r\n        FfilepreviewAdaptUnifileService,\r\n        FileViewerService\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":["InjectionToken","Injectable","Optional","Inject","NotifyService","WEBAPI_PREFIX_TOKEN","FileViewerService","DownloadService","Injector","Directive","Input","HostListener","Component","ElementRef","HostBinding","tslib_1.__extends","LocaleService","Observable","GspFormRemoveListEntity","switchMap","of","GspFormUploadListEntity","forkJoin","UploadStatus","GspFormUploadEntity","OperatingModes","GspFormDocInfo","Subject","concat","catchError","delay","map","expand","EMPTY","last","tap","UploadService","UploadServerService","NgModule","CommonModule","UploadDialogMoudle","FileListModule","FFileUploadModule","FarrisCommonModule","LocaleModule"],"mappings":"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"}