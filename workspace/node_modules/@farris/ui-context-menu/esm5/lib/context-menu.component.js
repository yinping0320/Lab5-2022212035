/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { FarrisContextMenuService } from './context-menu.service';
import { Component, Injector, Input, NgZone, Renderer2, ViewEncapsulation, ElementRef, ViewChild, ChangeDetectorRef, Optional, QueryList, ViewChildren } from '@angular/core';
var FarrisContextMenuComponent = /** @class */ (function () {
    function FarrisContextMenuComponent(injector, ngzone, render, ctxMenuSer, elRef, cd) {
        this.injector = injector;
        this.ngzone = ngzone;
        this.render = render;
        this.ctxMenuSer = ctxMenuSer;
        this.elRef = elRef;
        this.cd = cd;
    }
    /**
     * @return {?}
     */
    FarrisContextMenuComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    FarrisContextMenuComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
    };
    /**
     * @param {?} $event
     * @param {?} item
     * @return {?}
     */
    FarrisContextMenuComponent.prototype.onMenuItemClick = /**
     * @param {?} $event
     * @param {?} item
     * @return {?}
     */
    function ($event, item) {
        $event.stopPropagation();
        if (item.disable) {
            return;
        }
        if (item.children && item.children.length) {
            return;
        }
        this.ctxMenuSer.hide();
        if (item.handle) {
            item.handle(tslib_1.__assign({}, (this.context || {}), { instance: this, menu: item }));
        }
    };
    /**
     * @param {?} $event
     * @param {?} item
     * @return {?}
     */
    FarrisContextMenuComponent.prototype.onMouseEnter = /**
     * @param {?} $event
     * @param {?} item
     * @return {?}
     */
    function ($event, item) {
        if (item.children && item.children.length) {
            /** @type {?} */
            var childCtxMenu = this.subMenus.find((/**
             * @param {?} m
             * @return {?}
             */
            function (m) { return m.elRef.nativeElement.id === item.id + '_submenu'; }));
            if (childCtxMenu) {
                // childCtxMenu.context = this.context;
                childCtxMenu.parent = this;
                /** @type {?} */
                var childMenuPanel = childCtxMenu.menuPanel.nativeElement;
                /** @type {?} */
                var panel = this.menuPanel.nativeElement;
                /** @type {?} */
                var childContainerWidth = window.innerWidth - panel.offsetLeft - panel.offsetWidth;
                if (childMenuPanel.offsetWidth > childContainerWidth) {
                    /** @type {?} */
                    var l = -panel.offsetWidth;
                    childMenuPanel.style.left = l + 'px';
                }
                /** @type {?} */
                var childContainerHeight = window.innerHeight - childMenuPanel.getBoundingClientRect().top;
                if (childContainerHeight < childMenuPanel.offsetHeight) {
                    /** @type {?} */
                    var t = window.innerHeight - panel.offsetTop - childMenuPanel.offsetHeight - 10;
                    childMenuPanel.style.top = t + 'px';
                }
            }
        }
    };
    FarrisContextMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-menus',
                    template: "\r\n<div class=\"f-context-menu-panel\" tabindex=\"0\" [style.left.px]=\"left\" [style.top.px]=\"top\" #menuPanel style=\"pointer-events: auto\">\r\n\r\n    <ul class=\"menu-list\">\r\n        <li class=\"menu-item d-flex\" *ngFor=\"let item of menuItems; index as i;last as islast;first as isfirst\" (click)=\"onMenuItemClick($event, item)\" \r\n        [class.menu-sep]=\"item === '-'\" (mouseenter)=\"onMouseEnter($event, item)\"\r\n        [class.disabled]=\"item.disable\" #menuitemli>\r\n            <ng-container *ngIf=\"item !== '-' \">\r\n                <div class=\"menu-item-icon\">\r\n                    <span class=\"f-icon {{ item.icon }}\" *ngIf=\"item.icon\"></span>\r\n                </div>\r\n                <div class=\"menu-item-text f-utils-fill d-flex\">\r\n                    <span style=\"display: block\" class=\"f-utils-fill\">{{ item.title }}</span>\r\n                    <span class=\"arrow-right\" *ngIf=\"item.children && item.children.length\">\r\n                        <span class=\"f-icon f-icon-arrow-e\"></span>\r\n                    </span>\r\n                </div>\r\n                <farris-menus #childMenu [context]=\"context\" [attr.id]=\"item.id+ '_submenu'\" *ngIf=\"item.children && item.children.length\" [menuItems]=\"item.children\"\r\n                    [top]=\"menuitemli.offsetTop - 3\" [left]=\"menuPanel.offsetWidth - 5\"\r\n                ></farris-menus>\r\n            </ng-container>\r\n        </li>\r\n    </ul>\r\n\r\n</div>\r\n",
                    encapsulation: ViewEncapsulation.None,
                    exportAs: 'contextMenuRef',
                    styles: ["\n    .f-context-menu-overlay {\n        position: fixed;\n        z-index: 9999;\n        top: 0;\n        left: 0;\n        height: 100%;\n        width: 100%;\n    }\n    .f-context-menu-panel {\n        position: absolute;\n        top: 200px;\n        left: 300px;\n        background: #fff;\n        border: 1px solid #c6c6c6;\n        border-radius: 5px;\n        box-shadow: 3px 3px 5px #b8b4b4;\n        padding: 3px 0px;\n        min-width: 180px;\n        max-width: 290px;\n    }\n\n    .f-context-menu-panel .menu-list {\n        list-style: none;\n    }\n\n    .f-context-menu-panel .menu-item {\n        height: 28px;\n        line-height: 28px;\n        cursor: pointer;\n    }\n\n    .f-context-menu-panel .menu-item.disabled {\n        opacity: 0.4;\n        cursor: default;\n    }\n\n    .f-context-menu-panel .menu-item.menu-sep{\n        height: 6px;\n        border-top: 1px solid #ccc;\n        border-bottom: 1px solid #fff;\n        margin-top: 5px;\n    }\n\n    .f-context-menu-panel .menu-item.active,\n    .f-context-menu-panel .menu-item:hover:not(.menu-sep) {\n        background: #e4e7ef;\n    }\n    .f-context-menu-panel .menu-item .f-context-menu-panel  {\n        display: none;\n    }\n\n    .f-context-menu-panel .menu-item:hover  .f-context-menu-panel {\n        display: block;\n    }\n\n    .f-context-menu-panel .menu-item-icon {\n        width: 40px;\n        text-align: center;\n        font-size: 18px;\n    }\n\n    .f-context-target-focus {\n        position: relative;\n        top: 100px;\n        left: 0;\n        border: 1px dashed;\n        height: 29px;\n        display: none;\n        background: #a1c8fb;\n        opacity: 0.2;\n    }\n\n    .f-context-menu-panel .menu-item-text .arrow-right {\n        width: 32px; height: 100%;display:block; text-align: center;\n    }\n        "]
                }] }
    ];
    /** @nocollapse */
    FarrisContextMenuComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: NgZone },
        { type: Renderer2 },
        { type: FarrisContextMenuService, decorators: [{ type: Optional }] },
        { type: ElementRef },
        { type: ChangeDetectorRef }
    ]; };
    FarrisContextMenuComponent.propDecorators = {
        menuItems: [{ type: Input }],
        left: [{ type: Input }],
        top: [{ type: Input }],
        context: [{ type: Input }],
        menuPanel: [{ type: ViewChild, args: ['menuPanel',] }],
        subMenus: [{ type: ViewChildren, args: [FarrisContextMenuComponent,] }]
    };
    return FarrisContextMenuComponent;
}());
export { FarrisContextMenuComponent };
if (false) {
    /** @type {?} */
    FarrisContextMenuComponent.prototype.menuItems;
    /** @type {?} */
    FarrisContextMenuComponent.prototype.left;
    /** @type {?} */
    FarrisContextMenuComponent.prototype.top;
    /** @type {?} */
    FarrisContextMenuComponent.prototype.context;
    /** @type {?} */
    FarrisContextMenuComponent.prototype.menuPanel;
    /** @type {?} */
    FarrisContextMenuComponent.prototype.subMenus;
    /** @type {?} */
    FarrisContextMenuComponent.prototype.parent;
    /** @type {?} */
    FarrisContextMenuComponent.prototype.id;
    /**
     * @type {?}
     * @private
     */
    FarrisContextMenuComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    FarrisContextMenuComponent.prototype.ngzone;
    /**
     * @type {?}
     * @private
     */
    FarrisContextMenuComponent.prototype.render;
    /**
     * @type {?}
     * @private
     */
    FarrisContextMenuComponent.prototype.ctxMenuSer;
    /**
     * @type {?}
     * @private
     */
    FarrisContextMenuComponent.prototype.elRef;
    /** @type {?} */
    FarrisContextMenuComponent.prototype.cd;
}
//# sourceMappingURL=data:application/json;base64,