import { CommonModule } from '@angular/common';
import { ViewChangeModule } from '@farris/ui-view-change';
import { FResponseToolbarModule } from '@farris/ui-response-toolbar';
import { __spread } from 'tslib';
import { Subject } from 'rxjs';
import { Directive, TemplateRef, Input, Component, ContentChild, HostBinding, Output, EventEmitter, Pipe, SecurityContext, NgModule } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';

/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/page-header-content.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FEPageHeaderContentDirective = /** @class */ (function () {
    function FEPageHeaderContentDirective(templateRef) {
        this.templateRef = templateRef;
    }
    FEPageHeaderContentDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[fePageHeaderContent]'
                },] }
    ];
    /** @nocollapse */
    FEPageHeaderContentDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    FEPageHeaderContentDirective.propDecorators = {
        cls: [{ type: Input }]
    };
    return FEPageHeaderContentDirective;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/page-header-down.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FEPageHeaderDownDirective = /** @class */ (function () {
    function FEPageHeaderDownDirective(templateRef) {
        this.templateRef = templateRef;
    }
    FEPageHeaderDownDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[fePageHeaderDown]'
                },] }
    ];
    /** @nocollapse */
    FEPageHeaderDownDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    FEPageHeaderDownDirective.propDecorators = {
        cls: [{ type: Input }]
    };
    return FEPageHeaderDownDirective;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/page-header-title.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FEPageHeaderTitleDirective = /** @class */ (function () {
    function FEPageHeaderTitleDirective(templateRef) {
        this.templateRef = templateRef;
    }
    FEPageHeaderTitleDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[fePageHeaderTitle]'
                },] }
    ];
    /** @nocollapse */
    FEPageHeaderTitleDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    FEPageHeaderTitleDirective.propDecorators = {
        cls: [{ type: Input }]
    };
    return FEPageHeaderTitleDirective;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/modal-footer-up.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FEModalFooterUpDirective = /** @class */ (function () {
    function FEModalFooterUpDirective(templateRef) {
        this.templateRef = templateRef;
    }
    FEModalFooterUpDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[feModalFooterUp]'
                },] }
    ];
    /** @nocollapse */
    FEModalFooterUpDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    FEModalFooterUpDirective.propDecorators = {
        cls: [{ type: Input }]
    };
    return FEModalFooterUpDirective;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/modal-footer-left.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FEModalFooterLeftDirective = /** @class */ (function () {
    function FEModalFooterLeftDirective(templateRef) {
        this.templateRef = templateRef;
    }
    FEModalFooterLeftDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[feModalFooterLeft]'
                },] }
    ];
    /** @nocollapse */
    FEModalFooterLeftDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    FEModalFooterLeftDirective.propDecorators = {
        cls: [{ type: Input }]
    };
    return FEModalFooterLeftDirective;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/modal-footer-right.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FEModalFooterRightDirective = /** @class */ (function () {
    function FEModalFooterRightDirective(templateRef) {
        this.templateRef = templateRef;
    }
    FEModalFooterRightDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[feModalFooterRight]'
                },] }
    ];
    /** @nocollapse */
    FEModalFooterRightDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    FEModalFooterRightDirective.propDecorators = {
        cls: [{ type: Input }]
    };
    return FEModalFooterRightDirective;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/index.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: lib/models/modal-footer.model.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var FEModalFooterDefault = {
    extend: '',
    // 扩展区域内容-位置上
    extendLeft: '',
    // 扩展区域内容-位置左
    extendRight: '',
    //扩展区域内容-位置右
    toolbarCls: 'col-7',
    //工具栏样式
    toolbarDatas: [],
    //工具栏数据
    toolbarBtnSize: "lg",
    //工具栏按钮尺寸
    toolbarPopDirection: "" //工具栏按钮弹出方向
};

/**
 * @fileoverview added by tsickle
 * Generated from: lib/models/utils.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @param {?} allDatas
 * @param {?} config
 * @param {?} toolbarKey
 * @param {?} showType
 * @return {?}
 */
function formToolbarData(allDatas, config, toolbarKey, showType) {
    if (allDatas.length == 0) {
        // 工具数据
        return [];
    }
    else {
        // 获取可见数据
        if (!config.hasOwnProperty(showType)) {
            return [];
        }
        /** @type {?} */
        var showTypeToolbarDatas = config[showType][toolbarKey];
        if (!showTypeToolbarDatas || showTypeToolbarDatas.length == 0) {
            return [];
        }
        else {
            /** @type {?} */
            var findDatas_1 = [];
            // 查找数据
            showTypeToolbarDatas.map((/**
             * @param {?} itemId
             * @return {?}
             */
            function (itemId) {
                /** @type {?} */
                var btnInfo = allDatas.find((/**
                 * @param {?} btnItem
                 * @return {?}
                 */
                function (btnItem) { return btnItem['id'] == itemId; }));
                if (btnInfo) {
                    findDatas_1.push(btnInfo);
                }
            }));
            return findDatas_1;
        }
    }
}
/** @type {?} */
var FExtendUtils = { formToolbarData: formToolbarData };

/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/modal-footer/modal-footer.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FEModalFooterComponent = /** @class */ (function () {
    function FEModalFooterComponent() {
        // 设置默认样式
        this.cls = true;
        this.realToolbarDatas = [];
        this._settings = Object.assign({}, FEModalFooterDefault);
        // 展示类型 modal 窗口，sidebar，空是 普通,
        this.showType = "modal";
        this.toolbarClickEvent = new EventEmitter();
        this.btnDisable = new Subject();
        this.btnVisible = new Subject();
    }
    Object.defineProperty(FEModalFooterComponent.prototype, "options", {
        get: /**
         * @return {?}
         */
        function () {
            return this._settings;
        },
        set: /**
         * @param {?} settings
         * @return {?}
         */
        function (settings) {
            if (settings) {
                this._settings = Object.assign({}, FEModalFooterDefault, settings);
                this.realToolbarDatas = this._settings['toolbarDatas'];
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FEModalFooterComponent.prototype, "toolbarBtnDisable", {
        // 按钮的禁用状态
        set: 
        // 按钮的禁用状态
        /**
         * @param {?} values
         * @return {?}
         */
        function (values) {
            this.btnDisable = values;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FEModalFooterComponent.prototype, "toolbarBtnVisible", {
        // 按钮的查看状态
        set: 
        // 按钮的查看状态
        /**
         * @param {?} values
         * @return {?}
         */
        function (values) {
            this.btnVisible = values;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FEModalFooterComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    // 变化
    // 变化
    /**
     * @param {?} changes
     * @return {?}
     */
    FEModalFooterComponent.prototype.ngOnChanges = 
    // 变化
    /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.hasOwnProperty('toolbarAllDatas') || changes.hasOwnProperty('toolbarConfig') || changes.hasOwnProperty('showType')) {
            if (this.toolbarKey && this.toolbarConfig && this.toolbarAllDatas) {
                this.realToolbarDatas = __spread(FExtendUtils.formToolbarData(this.toolbarAllDatas, this.toolbarConfig, this.toolbarKey, this.showType));
            }
        }
    };
    // 抛出事件
    // 抛出事件
    /**
     * @param {?} ev
     * @return {?}
     */
    FEModalFooterComponent.prototype.responseToolbarClickHandler = 
    // 抛出事件
    /**
     * @param {?} ev
     * @return {?}
     */
    function (ev) {
        this.toolbarClickEvent.emit(ev);
    };
    // 显示内容
    // 显示内容
    /**
     * @return {?}
     */
    FEModalFooterComponent.prototype.isFooterShow = 
    // 显示内容
    /**
     * @return {?}
     */
    function () {
        if (this.mfExtendDirective || this.mfLeftDirective || this.options['extendLeft'] || this.realToolbarDatas.length > 0 || this.mfRightDirective || this.options['extendRight']) {
            return true;
        }
        return false;
    };
    FEModalFooterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fe-modal-footer',
                    template: "\n   <div class=\"fe-modal-footer-wrapper\" [ngClass]=\"'showtype-'+showType\" *ngIf=\"isFooterShow()\">\n    <ng-container *ngIf=\"mfExtendDirective&&mfExtendDirective.templateRef\">\n      <div class=\"f-top\"  [ngClass]=\"mfExtendDirective.cls\">\n        <ng-template [ngTemplateOutlet]=\"mfExtendDirective.templateRef\"></ng-template>\n      </div>\n    </ng-container>\n    <div class=\"fe-modal-footer-base no-gutters\">\n      <ng-container *ngIf=\"mfLeftDirective&&mfLeftDirective.templateRef\">\n          <div class=\"f-left\"  [ngClass]=\"mfLeftDirective.cls\">\n            <ng-template [ngTemplateOutlet]=\"mfLeftDirective.templateRef\"></ng-template>\n          </div>\n      </ng-container> \n      <div class=\"f-left\" *ngIf=\"!mfLeftDirective&&options['extendLeft']\"  [innerHTML]=\"options['extendLeft']|feSafeHtml\">\n      </div>\n      <ng-container *ngIf=\"realToolbarDatas.length>0\">\n          <f-response-toolbar class=\"f-toolbar ml-auto\" [ngClass]=\"options['toolbarCls']\" [datas]=\"realToolbarDatas\"\n              [btnState]=\"btnDisable\" [btnVisible]=\"btnVisible\" [buttonSize]=\"options['toolbarBtnSize']\"\n              (rtClickEvent)=\"responseToolbarClickHandler($event)\" [popDirection]=\"options['toolbarPopDirection']\">\n          </f-response-toolbar>\n      </ng-container>\n      <ng-container *ngIf=\"mfRightDirective&&mfRightDirective.templateRef\">\n          <div class=\"f-right\"  [ngClass]=\"mfRightDirective.cls\">\n            <ng-template [ngTemplateOutlet]=\"mfRightDirective.templateRef\"></ng-template>\n          </div>\n      </ng-container> \n      <div class=\"f-right\" *ngIf=\"!mfRightDirective&&options['extendRight']\"  [innerHTML]=\"options['extendRight']|feSafeHtml\">\n      </div>\n    </div>   \n   </div>\n  ",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    FEModalFooterComponent.ctorParameters = function () { return []; };
    FEModalFooterComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class.fe-cmp-modal-footer',] }],
        options: [{ type: Input }],
        toolbarAllDatas: [{ type: Input }],
        toolbarConfig: [{ type: Input }],
        toolbarKey: [{ type: Input }],
        showType: [{ type: Input }],
        mfExtendDirective: [{ type: ContentChild, args: [FEModalFooterUpDirective,] }],
        mfLeftDirective: [{ type: ContentChild, args: [FEModalFooterLeftDirective,] }],
        mfRightDirective: [{ type: ContentChild, args: [FEModalFooterRightDirective,] }],
        toolbarClickEvent: [{ type: Output }],
        toolbarBtnDisable: [{ type: Input }],
        toolbarBtnVisible: [{ type: Input }]
    };
    return FEModalFooterComponent;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/models/page-header.model.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var FEPageHeaderDefault = {
    mainTitle: '',
    // 主标题
    subTitle: '',
    // 副标题
    status: '',
    // 状态
    content: '',
    // 中间区域
    extend: '',
    // 扩展区域内容
    showIcon: true,
    //是否显示图标
    iconName: 'f-icon-page-title-record',
    //图标的名称
    iconCls: 'f-text-orna-bill',
    //图标的样式比如颜色、背景
    pgShow: false,
    //是否显示分页
    pgPreDisabled: true,
    //向前翻页是否禁用
    pgNextDisabled: false,
    //向后翻页是否禁用
    toolbarCls: 'col-6',
    //工具栏样式
    toolbarDatas: [],
    //工具栏数据
    toolbarBtnSize: "",
    //工具栏按钮尺寸
    toolbarPopDirection: "",
    //工具栏按钮弹出方向
    showViewChange: false,
    //是否显示视图方案
    viewDatas: [],
    //视图切换数据
    viewType: 'tile',
    // 视图切换类型
    viewDefaultType: '',
    // 默认视图状态
    viewGroupId: 'default',
    //视图切换groupId
    toolbarAllDatas: [],
    // 所有按钮相关数据
    toolbarConfig: null,
    //工具栏配置
    toolbarKey: "" //工具栏获取数据的依据
};

/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/page-header/page-header.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FEPageHeaderComponent = /** @class */ (function () {
    function FEPageHeaderComponent() {
        this._settings = Object.assign({}, FEPageHeaderDefault);
        this.realToolbarDatas = [];
        // 展示类型
        this.showType = "modal";
        this.btnDisable = new Subject();
        this.btnVisible = new Subject();
        // 事件
        this.pgPreClickEvent = new EventEmitter();
        this.pgNextClickEvent = new EventEmitter();
        this.toolbarClickEvent = new EventEmitter();
        this.viewChangeEvent = new EventEmitter();
    }
    Object.defineProperty(FEPageHeaderComponent.prototype, "options", {
        get: /**
         * @return {?}
         */
        function () {
            return this._settings;
        },
        set: /**
         * @param {?} settings
         * @return {?}
         */
        function (settings) {
            if (settings) {
                this._settings = Object.assign({}, FEPageHeaderDefault, settings);
                this.realToolbarDatas = this._settings['toolbarDatas'];
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FEPageHeaderComponent.prototype, "toolbarBtnDisable", {
        // 按钮的禁用状态
        set: 
        // 按钮的禁用状态
        /**
         * @param {?} values
         * @return {?}
         */
        function (values) {
            this.btnDisable = values;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FEPageHeaderComponent.prototype, "toolbarBtnVisible", {
        // 按钮的查看状态
        set: 
        // 按钮的查看状态
        /**
         * @param {?} values
         * @return {?}
         */
        function (values) {
            this.btnVisible = values;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FEPageHeaderComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    // 变化
    // 变化
    /**
     * @param {?} changes
     * @return {?}
     */
    FEPageHeaderComponent.prototype.ngOnChanges = 
    // 变化
    /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.hasOwnProperty('toolbarAllDatas') || changes.hasOwnProperty('toolbarConfig') || changes.hasOwnProperty('showType')) {
            if (this.toolbarKey && this.toolbarConfig && this.toolbarAllDatas) {
                this.realToolbarDatas = __spread(FExtendUtils.formToolbarData(this.toolbarAllDatas, this.toolbarConfig, this.toolbarKey, this.showType));
            }
        }
    };
    // 向上翻页
    // 向上翻页
    /**
     * @param {?} ev
     * @return {?}
     */
    FEPageHeaderComponent.prototype.pgPreClickHandler = 
    // 向上翻页
    /**
     * @param {?} ev
     * @return {?}
     */
    function (ev) {
        if (!this.options['pgPreDisabled']) {
            this.pgPreClickEvent.emit(ev);
        }
    };
    // 向下翻页
    // 向下翻页
    /**
     * @param {?} ev
     * @return {?}
     */
    FEPageHeaderComponent.prototype.pgNextClickHandler = 
    // 向下翻页
    /**
     * @param {?} ev
     * @return {?}
     */
    function (ev) {
        if (!this.options['pgNextDisabled']) {
            this.pgNextClickEvent.emit(ev);
        }
    };
    // 抛出事件
    // 抛出事件
    /**
     * @param {?} ev
     * @return {?}
     */
    FEPageHeaderComponent.prototype.responseToolbarClickHandler = 
    // 抛出事件
    /**
     * @param {?} ev
     * @return {?}
     */
    function (ev) {
        this.toolbarClickEvent.emit(ev);
    };
    // View改变
    // View改变
    /**
     * @param {?} ev
     * @return {?}
     */
    FEPageHeaderComponent.prototype.toolTypeChangeHandler = 
    // View改变
    /**
     * @param {?} ev
     * @return {?}
     */
    function (ev) {
        this.viewChangeEvent.emit(ev);
    };
    FEPageHeaderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fe-page-header',
                    template: "\n  <div class=\"f-page-header\"  [ngClass]=\"'showtype-'+showType\">\n  <nav class=\"f-page-header-base\">\n      <ng-container *ngIf=\"hTitleDirective &&hTitleDirective.templateRef\">\n          <div class=\"f-title\" [ngClass]=\"hTitleDirective.cls\">\n              <ng-template [ngTemplateOutlet]=\"hTitleDirective.templateRef\"></ng-template>\n          </div>\n      </ng-container>\n      <div class=\"f-title\" *ngIf=\"!hTitleDirective\">\n          <span *ngIf=\"options['showIcon']\" class=\"f-title-icon\" [ngClass]=\"options['iconCls']\">\n              <i class=\"f-icon\" [ngClass]=\"options['iconName']\"></i>\n          </span>\n          <h4 class=\"f-title-text\" [innerHTML]=\"options['mainTitle']|feSafeHtml\"></h4>\n          <h5 *ngIf=\"options['subTitle']\" class=\"f-title-subtitle\" [innerHTML]=\"options['subTitle']|feSafeHtml\"></h5>\n          <div *ngIf=\"options['status']\" class=\"f-title-status\" [innerHTML]=\"options['status']|feSafeHtml\">\n          </div>\n          <div class=\"f-title-pagination\" *ngIf=\"options['pgShow']\">\n              <span class=\"f-icon f-icon-arrow-w\" [ngClass]=\"{'f-state-disabled':options['pgPreDisabled']}\"\n                  (click)=\"pgPreClickHandler($event)\"></span>\n              <span class=\"f-icon f-icon-arrow-e\" [ngClass]=\"{'f-state-disabled':options['pgNextDisabled']}\"\n                  (click)=\"pgNextClickHandler($event)\"></span>\n          </div>\n      </div>\n      <ng-container *ngIf=\"hContentDirective &&hContentDirective.templateRef\">\n          <div class=\"f-content\" [ngClass]=\"hContentDirective.cls\">\n              <ng-template [ngTemplateOutlet]=\"hContentDirective.templateRef\"></ng-template>\n          </div>\n      </ng-container>\n      <ng-container *ngIf=\"options['content']&&!hContentDirective\" >\n          <div class=\"f-content\"  [innerHTML]=\"options['content']|feSafeHtml\"></div>\n      </ng-container>\n      <ng-container *ngIf=\"realToolbarDatas.length>0\">\n          <f-response-toolbar class=\"f-toolbar ml-auto\" [ngClass]=\"options['toolbarCls']\" [datas]=\"realToolbarDatas\"\n          [btnState]=\"btnDisable\" [btnVisible]=\"btnVisible\"  [buttonSize]=\"options['toolbarBtnSize']=='default'?'':options['toolbarBtnSize']\" [popDirection]=\"options['toolbarPopDirection']=='default'?'':options['toolbarPopDirection']\"\n              (rtClickEvent)=\"responseToolbarClickHandler($event)\">\n          </f-response-toolbar>\n      </ng-container>\n      <ng-container *ngIf=\"options['showViewChange']&&options['viewDatas'].length\">\n          <farris-view-change [toolbarData]=\"options['viewDatas']\" class=\"f-btn-ml\" [viewType]=\"options['viewType']\"\n              [defaultType]=\"options['viewDefaultType']\" [viewGroupId]=\"options['viewGroupId']\"\n              (toolTypeChange)=\"toolTypeChangeHandler($event)\"></farris-view-change>\n      </ng-container>\n  </nav>\n  <ng-container *ngIf=\"hExtendDirective &&  hExtendDirective.templateRef\">\n      <div class=\"f-content\" [ngClass]=\"hExtendDirective.cls\">\n          <ng-template [ngTemplateOutlet]=\"hExtendDirective.templateRef\"></ng-template>\n      </div>\n  </ng-container>\n  <div class=\"f-page-header-extend\" *ngIf=\"options['extend']&&!hExtendDirective\"  [innerHTML]=\"options['extend']|feSafeHtml\">\n  </div>\n</div>\n  "
                }] }
    ];
    /** @nocollapse */
    FEPageHeaderComponent.ctorParameters = function () { return []; };
    FEPageHeaderComponent.propDecorators = {
        options: [{ type: Input }],
        toolbarAllDatas: [{ type: Input }],
        toolbarConfig: [{ type: Input }],
        toolbarKey: [{ type: Input }],
        showType: [{ type: Input }],
        hContentDirective: [{ type: ContentChild, args: [FEPageHeaderContentDirective,] }],
        hExtendDirective: [{ type: ContentChild, args: [FEPageHeaderDownDirective,] }],
        hTitleDirective: [{ type: ContentChild, args: [FEPageHeaderTitleDirective,] }],
        toolbarBtnDisable: [{ type: Input }],
        toolbarBtnVisible: [{ type: Input }],
        pgPreClickEvent: [{ type: Output }],
        pgNextClickEvent: [{ type: Output }],
        toolbarClickEvent: [{ type: Output }],
        viewChangeEvent: [{ type: Output }]
    };
    return FEPageHeaderComponent;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/index.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: lib/pipes/page-safe-html.pipe.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// https://angular.io/guide/security
var FESafeHtmlPipe = /** @class */ (function () {
    function FESafeHtmlPipe(_sanitizer) {
        this._sanitizer = _sanitizer;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    FESafeHtmlPipe.prototype.transform = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return this._sanitizer.sanitize(SecurityContext.HTML, this._sanitizer.bypassSecurityTrustHtml(value));
    };
    FESafeHtmlPipe.decorators = [
        { type: Pipe, args: [{ name: 'feSafeHtml' },] }
    ];
    /** @nocollapse */
    FESafeHtmlPipe.ctorParameters = function () { return [
        { type: DomSanitizer }
    ]; };
    return FESafeHtmlPipe;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/extend-header-footer.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FEHeaderFooterModule = /** @class */ (function () {
    function FEHeaderFooterModule() {
    }
    FEHeaderFooterModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [FEModalFooterComponent, FEPageHeaderComponent, FESafeHtmlPipe, FEModalFooterUpDirective, FEModalFooterLeftDirective, FEModalFooterRightDirective, FEPageHeaderTitleDirective, FEPageHeaderContentDirective, FEPageHeaderDownDirective],
                    imports: [
                        CommonModule,
                        FResponseToolbarModule,
                        ViewChangeModule
                    ],
                    exports: [FEModalFooterComponent, FEPageHeaderComponent, FEModalFooterUpDirective, FEModalFooterLeftDirective, FEModalFooterRightDirective, FEPageHeaderTitleDirective, FEPageHeaderContentDirective, FEPageHeaderDownDirective]
                },] }
    ];
    return FEHeaderFooterModule;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: farris-extend-header-footer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { FEPageHeaderContentDirective, FEPageHeaderDownDirective, FEPageHeaderTitleDirective, FEModalFooterUpDirective, FEModalFooterLeftDirective, FEModalFooterRightDirective, FEHeaderFooterModule, FESafeHtmlPipe, FEModalFooterComponent, FEPageHeaderComponent };

//# sourceMappingURL=farris-extend-header-footer.js.map