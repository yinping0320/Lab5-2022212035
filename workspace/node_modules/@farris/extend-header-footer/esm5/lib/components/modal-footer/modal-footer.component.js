/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/modal-footer/modal-footer.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, ContentChild, HostBinding, Output, EventEmitter } from '@angular/core';
import { Observable, Subject } from 'rxjs';
import { FEModalFooterDefault } from '../../models/modal-footer.model';
import { FEModalFooterUpDirective, FEModalFooterLeftDirective, FEModalFooterRightDirective } from '../../directives/index';
import { FExtendUtils } from '../../models/utils';
var FEModalFooterComponent = /** @class */ (function () {
    function FEModalFooterComponent() {
        // 设置默认样式
        this.cls = true;
        this.realToolbarDatas = [];
        this._settings = Object.assign({}, FEModalFooterDefault);
        // 展示类型 modal 窗口，sidebar，空是 普通,
        this.showType = "modal";
        this.toolbarClickEvent = new EventEmitter();
        this.btnDisable = new Subject();
        this.btnVisible = new Subject();
    }
    Object.defineProperty(FEModalFooterComponent.prototype, "options", {
        get: /**
         * @return {?}
         */
        function () {
            return this._settings;
        },
        set: /**
         * @param {?} settings
         * @return {?}
         */
        function (settings) {
            if (settings) {
                this._settings = Object.assign({}, FEModalFooterDefault, settings);
                this.realToolbarDatas = this._settings['toolbarDatas'];
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FEModalFooterComponent.prototype, "toolbarBtnDisable", {
        // 按钮的禁用状态
        set: 
        // 按钮的禁用状态
        /**
         * @param {?} values
         * @return {?}
         */
        function (values) {
            this.btnDisable = values;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FEModalFooterComponent.prototype, "toolbarBtnVisible", {
        // 按钮的查看状态
        set: 
        // 按钮的查看状态
        /**
         * @param {?} values
         * @return {?}
         */
        function (values) {
            this.btnVisible = values;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FEModalFooterComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    // 变化
    // 变化
    /**
     * @param {?} changes
     * @return {?}
     */
    FEModalFooterComponent.prototype.ngOnChanges = 
    // 变化
    /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.hasOwnProperty('toolbarAllDatas') || changes.hasOwnProperty('toolbarConfig') || changes.hasOwnProperty('showType')) {
            if (this.toolbarKey && this.toolbarConfig && this.toolbarAllDatas) {
                this.realToolbarDatas = tslib_1.__spread(FExtendUtils.formToolbarData(this.toolbarAllDatas, this.toolbarConfig, this.toolbarKey, this.showType));
            }
        }
    };
    // 抛出事件
    // 抛出事件
    /**
     * @param {?} ev
     * @return {?}
     */
    FEModalFooterComponent.prototype.responseToolbarClickHandler = 
    // 抛出事件
    /**
     * @param {?} ev
     * @return {?}
     */
    function (ev) {
        this.toolbarClickEvent.emit(ev);
    };
    // 显示内容
    // 显示内容
    /**
     * @return {?}
     */
    FEModalFooterComponent.prototype.isFooterShow = 
    // 显示内容
    /**
     * @return {?}
     */
    function () {
        if (this.mfExtendDirective || this.mfLeftDirective || this.options['extendLeft'] || this.realToolbarDatas.length > 0 || this.mfRightDirective || this.options['extendRight']) {
            return true;
        }
        return false;
    };
    FEModalFooterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fe-modal-footer',
                    template: "\n   <div class=\"fe-modal-footer-wrapper\" [ngClass]=\"'showtype-'+showType\" *ngIf=\"isFooterShow()\">\n    <ng-container *ngIf=\"mfExtendDirective&&mfExtendDirective.templateRef\">\n      <div class=\"f-top\"  [ngClass]=\"mfExtendDirective.cls\">\n        <ng-template [ngTemplateOutlet]=\"mfExtendDirective.templateRef\"></ng-template>\n      </div>\n    </ng-container>\n    <div class=\"fe-modal-footer-base no-gutters\">\n      <ng-container *ngIf=\"mfLeftDirective&&mfLeftDirective.templateRef\">\n          <div class=\"f-left\"  [ngClass]=\"mfLeftDirective.cls\">\n            <ng-template [ngTemplateOutlet]=\"mfLeftDirective.templateRef\"></ng-template>\n          </div>\n      </ng-container> \n      <div class=\"f-left\" *ngIf=\"!mfLeftDirective&&options['extendLeft']\"  [innerHTML]=\"options['extendLeft']|feSafeHtml\">\n      </div>\n      <ng-container *ngIf=\"realToolbarDatas.length>0\">\n          <f-response-toolbar class=\"f-toolbar ml-auto\" [ngClass]=\"options['toolbarCls']\" [datas]=\"realToolbarDatas\"\n              [btnState]=\"btnDisable\" [btnVisible]=\"btnVisible\" [buttonSize]=\"options['toolbarBtnSize']\"\n              (rtClickEvent)=\"responseToolbarClickHandler($event)\" [popDirection]=\"options['toolbarPopDirection']\">\n          </f-response-toolbar>\n      </ng-container>\n      <ng-container *ngIf=\"mfRightDirective&&mfRightDirective.templateRef\">\n          <div class=\"f-right\"  [ngClass]=\"mfRightDirective.cls\">\n            <ng-template [ngTemplateOutlet]=\"mfRightDirective.templateRef\"></ng-template>\n          </div>\n      </ng-container> \n      <div class=\"f-right\" *ngIf=\"!mfRightDirective&&options['extendRight']\"  [innerHTML]=\"options['extendRight']|feSafeHtml\">\n      </div>\n    </div>   \n   </div>\n  ",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    FEModalFooterComponent.ctorParameters = function () { return []; };
    FEModalFooterComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class.fe-cmp-modal-footer',] }],
        options: [{ type: Input }],
        toolbarAllDatas: [{ type: Input }],
        toolbarConfig: [{ type: Input }],
        toolbarKey: [{ type: Input }],
        showType: [{ type: Input }],
        mfExtendDirective: [{ type: ContentChild, args: [FEModalFooterUpDirective,] }],
        mfLeftDirective: [{ type: ContentChild, args: [FEModalFooterLeftDirective,] }],
        mfRightDirective: [{ type: ContentChild, args: [FEModalFooterRightDirective,] }],
        toolbarClickEvent: [{ type: Output }],
        toolbarBtnDisable: [{ type: Input }],
        toolbarBtnVisible: [{ type: Input }]
    };
    return FEModalFooterComponent;
}());
export { FEModalFooterComponent };
if (false) {
    /** @type {?} */
    FEModalFooterComponent.prototype.cls;
    /** @type {?} */
    FEModalFooterComponent.prototype.realToolbarDatas;
    /**
     * @type {?}
     * @private
     */
    FEModalFooterComponent.prototype._settings;
    /** @type {?} */
    FEModalFooterComponent.prototype.toolbarAllDatas;
    /** @type {?} */
    FEModalFooterComponent.prototype.toolbarConfig;
    /** @type {?} */
    FEModalFooterComponent.prototype.toolbarKey;
    /** @type {?} */
    FEModalFooterComponent.prototype.showType;
    /** @type {?} */
    FEModalFooterComponent.prototype.mfExtendDirective;
    /** @type {?} */
    FEModalFooterComponent.prototype.mfLeftDirective;
    /** @type {?} */
    FEModalFooterComponent.prototype.mfRightDirective;
    /** @type {?} */
    FEModalFooterComponent.prototype.toolbarClickEvent;
    /** @type {?} */
    FEModalFooterComponent.prototype.btnDisable;
    /** @type {?} */
    FEModalFooterComponent.prototype.btnVisible;
}
//# sourceMappingURL=data:application/json;base64,