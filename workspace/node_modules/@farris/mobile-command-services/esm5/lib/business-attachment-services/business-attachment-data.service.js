/**
 * @fileoverview added by tsickle
 * Generated from: lib/business-attachment-services/business-attachment-data.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { of } from 'rxjs';
import { map } from 'rxjs/operators';
import { HttpMethods, BindingPathConverter, HttpUtil } from '@farris/mobile-devkit';
import { BefDataPathUtil } from '@farris/mobile-bef';
import { AttachmentUtil } from './business-attachment.util';
/**
 * 附件数据服务
 */
var /**
 * 附件数据服务
 */
BusinessAttachmentDataService = /** @class */ (function () {
    /**
     * 构造函数
     */
    function BusinessAttachmentDataService(viewModelContext) {
        this.viewModelContext = viewModelContext;
    }
    Object.defineProperty(BusinessAttachmentDataService.prototype, "befReposi", {
        /**
         * 实体仓库
         */
        get: /**
         * 实体仓库
         * @return {?}
         */
        function () {
            return (/** @type {?} */ (this.viewModelContext.repository));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BusinessAttachmentDataService.prototype, "bindingData", {
        /**
         * 绑定数据
         */
        get: /**
         * 绑定数据
         * @private
         * @return {?}
         */
        function () {
            return this.viewModelContext.bindingData;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    BusinessAttachmentDataService.prototype.getAllBeSessions = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var beSessionsJson = window.sessionStorage.getItem("BE_SESSION_ID");
        if (!beSessionsJson) {
            return {};
        }
        /** @type {?} */
        var frmSessionId = this.getUserSessionId();
        /** @type {?} */
        var beSessions = JSON.parse(beSessionsJson);
        /** @type {?} */
        var beSessionKey = frmSessionId + "_/api/gsp/common/v1.0/testForm_mfrm";
        return beSessions[beSessionKey];
    };
    /**
     * 获取用户SessionId
     */
    /**
     * 获取用户SessionId
     * @return {?}
     */
    BusinessAttachmentDataService.prototype.getUserSessionId = /**
     * 获取用户SessionId
     * @return {?}
     */
    function () {
        /** @type {?} */
        var userSessionId = window.localStorage.getItem("sessionId");
        return userSessionId;
    };
    /**
     * 扩展BeSessionId相关头信息
     */
    /**
     * 扩展BeSessionId相关头信息
     * @param {?} headers
     * @return {?}
     */
    BusinessAttachmentDataService.prototype.handleRequestHeaders = /**
     * 扩展BeSessionId相关头信息
     * @param {?} headers
     * @return {?}
     */
    function (headers) {
        /** @type {?} */
        var frmSessionId = this.getUserSessionId();
        /** @type {?} */
        var beSessionId = this.getAllBeSessions();
        if (frmSessionId) {
            headers = HttpUtil.appendHeader(headers, "X-CAF-Runtime-CommonVariable", frmSessionId);
        }
        if (beSessionId) {
            headers = HttpUtil.appendHeader(headers, "X-CAF-Runtime-Context", beSessionId);
            headers = HttpUtil.appendHeader(headers, "SessionId", beSessionId);
        }
        headers = HttpUtil.appendHeader(headers, 'Content-Type', 'application/json');
        return headers;
    };
    /**
     * @param {?} url
     * @return {?}
     */
    BusinessAttachmentDataService.prototype.extendQueryData = /**
     * @param {?} url
     * @return {?}
     */
    function (url) {
        /** @type {?} */
        var entityFilter = {
            FilterConditions: [],
            SortConditions: [],
            IsUsePagination: false,
            Pagination: {
                PageIndex: 1,
                PageSize: 5,
                PageCount: 0,
                TotalCount: 0
            }
        };
        /** @type {?} */
        var entityFilterString = JSON.stringify(entityFilter);
        /** @type {?} */
        var params = {
            entityFilter: entityFilterString
        };
        // const url = `/api/gsp/common/v1.0/attachmentform_mfrm/extension/query`;
        // 拓展header
        // const headers = this.handleRequestHeaders({});
        // 拓展body
        /** @type {?} */
        var requestConfig = { params: params };
        return this.befReposi.apiProxy.request(HttpMethods.PUT, url, requestConfig);
    };
    /**
     * 更新附件信息
     */
    /**
     * 更新附件信息
     * @param {?} attachmentInfoFieldPath
     * @param {?} attachmentInfo
     * @return {?}
     */
    BusinessAttachmentDataService.prototype.updateRow = /**
     * 更新附件信息
     * @param {?} attachmentInfoFieldPath
     * @param {?} attachmentInfo
     * @return {?}
     */
    function (attachmentInfoFieldPath, attachmentInfo) {
        /** @type {?} */
        var apiProxy = this.befReposi.apiProxy;
        /** @type {?} */
        var updateUrl = apiProxy.baseUrl + "/service/updateattachment";
        /** @type {?} */
        var serverAttachInfo = this.createUpdateAttachInfo(attachmentInfoFieldPath, attachmentInfo);
        /** @type {?} */
        var body = {
            updateAttachInfo: serverAttachInfo
        };
        /** @type {?} */
        var requestConfig = {
            body: body
        };
        return apiProxy.request(HttpMethods.PUT, updateUrl, requestConfig);
    };
    /**
     * 批量创建附件行数据
     */
    /**
     * 批量创建附件行数据
     * @param {?} updateUrl
     * @param {?} attachmentInfoFieldPath
     * @param {?} attachmentInfos
     * @return {?}
     */
    BusinessAttachmentDataService.prototype.updateRows = /**
     * 批量创建附件行数据
     * @param {?} updateUrl
     * @param {?} attachmentInfoFieldPath
     * @param {?} attachmentInfos
     * @return {?}
     */
    function (updateUrl, attachmentInfoFieldPath, attachmentInfos) {
        /** @type {?} */
        var apiProxy = this.befReposi.apiProxy;
        // const updateUrl = `${apiProxy.baseUrl}/service/batchuploadattachment`;
        /** @type {?} */
        var serverAttachInfo = this.createBatchCreateAttachInfo(attachmentInfoFieldPath, attachmentInfos);
        /** @type {?} */
        var isRootEntity = serverAttachInfo.NodeCodes.length === 0;
        /** @type {?} */
        var body = {
            batchUploadInfo: serverAttachInfo
        };
        /** @type {?} */
        var requestConfig = {
            body: body
        };
        return apiProxy.request(HttpMethods.PUT, updateUrl, requestConfig, true);
    };
    /**
     * 创建服务器端需要的更新信息
     */
    /**
     * 创建服务器端需要的更新信息
     * @private
     * @param {?} attachmentInfoFieldPath
     * @param {?} attachmentInfo
     * @return {?}
     */
    BusinessAttachmentDataService.prototype.createUpdateAttachInfo = /**
     * 创建服务器端需要的更新信息
     * @private
     * @param {?} attachmentInfoFieldPath
     * @param {?} attachmentInfo
     * @return {?}
     */
    function (attachmentInfoFieldPath, attachmentInfo) {
        /** @type {?} */
        var attachmentId = attachmentInfo.attachmentId;
        /** @type {?} */
        var parentBindingPathArray = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);
        parentBindingPathArray.pop();
        /** @type {?} */
        var nodeCodes = BefDataPathUtil.convertToObjectCodes(parentBindingPathArray, this.bindingData);
        /** @type {?} */
        var hiretryIds = BefDataPathUtil.convertToDataIdsForUpdate(parentBindingPathArray, this.bindingData);
        /** @type {?} */
        var serverAttachInfo = {
            NodeCodes: nodeCodes,
            HiretryIds: hiretryIds,
            AttachmentIds: [attachmentId],
            AttachmentId: attachmentId
        };
        return serverAttachInfo;
    };
    /**
     * 创建服务器端需要的批量新增附件信息
     */
    /**
     * 创建服务器端需要的批量新增附件信息
     * @private
     * @param {?} attachmentInfoFieldPath
     * @param {?} attachmentInfo
     * @return {?}
     */
    BusinessAttachmentDataService.prototype.createBatchCreateAttachInfo = /**
     * 创建服务器端需要的批量新增附件信息
     * @private
     * @param {?} attachmentInfoFieldPath
     * @param {?} attachmentInfo
     * @return {?}
     */
    function (attachmentInfoFieldPath, attachmentInfo) {
        /** @type {?} */
        var attachmentIds = AttachmentUtil.peekAttachmentIds(attachmentInfo);
        /** @type {?} */
        var parentBindingPathArray = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);
        parentBindingPathArray.pop();
        /** @type {?} */
        var nodeCodes = BefDataPathUtil.convertToObjectCodes(parentBindingPathArray, this.bindingData);
        /** @type {?} */
        var hiretryIds = BefDataPathUtil.convertToDataIdsForAdd(parentBindingPathArray, this.bindingData);
        /** @type {?} */
        var serverAttachInfo = {
            NodeCodes: nodeCodes,
            HiretryIds: hiretryIds,
            AttachmentIds: attachmentIds,
            AttachmentId: null
        };
        return serverAttachInfo;
    };
    /**
     * 同步服务器端最新信息到客户端
     * @todo:
     * 1、主对象批量新增时不支持
     */
    /**
     * 同步服务器端最新信息到客户端
     * \@todo:
     * 1、主对象批量新增时不支持
     * @return {?}
     */
    BusinessAttachmentDataService.prototype.syncAttachmentInfosToClient = /**
     * 同步服务器端最新信息到客户端
     * \@todo:
     * 1、主对象批量新增时不支持
     * @return {?}
     */
    function () {
        /** @type {?} */
        var rootDataId = this.bindingData.list.currentId;
        return this.befReposi.updateEntityById(rootDataId);
    };
    /**
     * 追击主表数据到客户端
     */
    /**
     * 追击主表数据到客户端
     * @param {?} listData
     * @param {?} isRootEntity
     * @return {?}
     */
    BusinessAttachmentDataService.prototype.appendAttachmentInfosToClient = /**
     * 追击主表数据到客户端
     * @param {?} listData
     * @param {?} isRootEntity
     * @return {?}
     */
    function (listData, isRootEntity) {
        if (isRootEntity === true) {
            /** @type {?} */
            var entities = this.befReposi.buildEntities(listData);
            this.befReposi.entityCollection.addEntities(entities);
            return of(listData);
        }
        else {
            return this.syncAttachmentInfosToClient().pipe(map((/**
             * @return {?}
             */
            function () {
                return listData;
            })));
        }
    };
    return BusinessAttachmentDataService;
}());
if (false) {
    /**
     * ViewModel上下文
     * @type {?}
     */
    BusinessAttachmentDataService.prototype.viewModelContext;
}
export { BusinessAttachmentDataService };
//# sourceMappingURL=data:application/json;base64,