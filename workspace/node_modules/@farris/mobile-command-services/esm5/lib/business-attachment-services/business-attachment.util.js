/**
 * @fileoverview added by tsickle
 * Generated from: lib/business-attachment-services/business-attachment.util.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetailType } from '@farris/mobile-bef';
/**
 * 附件信息处理工具类
 */
var /**
 * 附件信息处理工具类
 */
AttachmentUtil = /** @class */ (function () {
    function AttachmentUtil() {
    }
    /**
     * 转换为附件信息数组
     */
    /**
     * 转换为附件信息数组
     * @param {?} fileInfos
     * @return {?}
     */
    AttachmentUtil.convertToAttachmentInfos = /**
     * 转换为附件信息数组
     * @param {?} fileInfos
     * @return {?}
     */
    function (fileInfos) {
        var _this = this;
        if (!fileInfos) {
            return [];
        }
        /** @type {?} */
        var attachmentInfos = fileInfos.map((/**
         * @param {?} fileInfo
         * @return {?}
         */
        function (fileInfo) {
            return _this.convertToAttachmentInfo(fileInfo);
        }));
        return attachmentInfos;
    };
    /**
     * 转换为附件信息
     */
    /**
     * 转换为附件信息
     * @param {?} fileInfo
     * @return {?}
     */
    AttachmentUtil.convertToAttachmentInfo = /**
     * 转换为附件信息
     * @param {?} fileInfo
     * @return {?}
     */
    function (fileInfo) {
        /** @type {?} */
        var attachmentInfo = {
            attachmentId: fileInfo.metadataId,
            fileName: fileInfo.fileName
        };
        return attachmentInfo;
    };
    /**
     * 获取附件列表中的第一个附件
     */
    /**
     * 获取附件列表中的第一个附件
     * @param {?} attachmentInfos
     * @return {?}
     */
    AttachmentUtil.getFirstAttachmentInfo = /**
     * 获取附件列表中的第一个附件
     * @param {?} attachmentInfos
     * @return {?}
     */
    function (attachmentInfos) {
        if (!attachmentInfos || attachmentInfos.length === 0) {
            return;
        }
        /** @type {?} */
        var firstBusinessAttachmentInfo = attachmentInfos[0];
        return firstBusinessAttachmentInfo;
    };
    /**
     * 提取附件id数组
     */
    /**
     * 提取附件id数组
     * @param {?} attachmentInfos
     * @return {?}
     */
    AttachmentUtil.peekAttachmentIds = /**
     * 提取附件id数组
     * @param {?} attachmentInfos
     * @return {?}
     */
    function (attachmentInfos) {
        if (!attachmentInfos) {
            attachmentInfos = [];
        }
        /** @type {?} */
        var attachmentIds = attachmentInfos.map((/**
         * @param {?} attachmentInfo
         * @return {?}
         */
        function (attachmentInfo) {
            return attachmentInfo.attachmentId;
        }));
        return attachmentIds;
    };
    /**
     * 批量获取变更
     */
    /**
     * 批量获取变更
     * @param {?} oldListData
     * @param {?} newListData
     * @return {?}
     */
    AttachmentUtil.getChangeDetails = /**
     * 批量获取变更
     * @param {?} oldListData
     * @param {?} newListData
     * @return {?}
     */
    function (oldListData, newListData) {
        var _this = this;
        /** @type {?} */
        var changeDetails = [];
        newListData.forEach((/**
         * @param {?} newData
         * @return {?}
         */
        function (newData) {
            /** @type {?} */
            var oldData = oldListData.find((/**
             * @param {?} oldData
             * @return {?}
             */
            function (oldData) {
                return oldData['id'] === newData['id'];
            }));
            if (!oldData) {
                oldData = {};
            }
            /** @type {?} */
            var changeDetail = _this.getChangeDetail(oldData, newData);
            if (changeDetail) {
                changeDetails.push(changeDetail);
            }
        }));
        return changeDetails;
    };
    /**
     * 获取变更集
     */
    /**
     * 获取变更集
     * @param {?} oldData
     * @param {?} newData
     * @return {?}
     */
    AttachmentUtil.getChangeDetail = /**
     * 获取变更集
     * @param {?} oldData
     * @param {?} newData
     * @return {?}
     */
    function (oldData, newData) {
        /** @type {?} */
        var changeDetail = {
            ChangeType: ChangeDetailType.Modify,
            ChangeInfo: {
                DataId: newData['id']
            }
        };
        /** @type {?} */
        var isChanged = false;
        Object.keys(newData).forEach((/**
         * @param {?} propName
         * @return {?}
         */
        function (propName) {
            // 移除不必要的属性的比较
            if (propName === 'id' || propName === 'nodeCode' || propName === 'childs') {
                return;
            }
            /** @type {?} */
            var oldValue = oldData[propName];
            /** @type {?} */
            var newValue = newData[propName];
            if (oldValue === undefined && typeof newValue === 'object') {
                return;
            }
            if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {
                changeDetail.ChangeInfo[propName] = newValue;
                isChanged = true;
            }
        }));
        return isChanged ? changeDetail : null;
    };
    return AttachmentUtil;
}());
export { AttachmentUtil };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVzaW5lc3MtYXR0YWNobWVudC51dGlsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9tb2JpbGUtY29tbWFuZC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbImxpYi9idXNpbmVzcy1hdHRhY2htZW50LXNlcnZpY2VzL2J1c2luZXNzLWF0dGFjaG1lbnQudXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBZ0IsZ0JBQWdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7OztBQU9wRTs7OztJQUFBO0lBOEdBLENBQUM7SUE1R0M7O09BRUc7Ozs7OztJQUNXLHVDQUF3Qjs7Ozs7SUFBdEMsVUFBdUMsU0FBbUM7UUFBMUUsaUJBUUM7UUFQQyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2QsT0FBTyxFQUFFLENBQUM7U0FDWDs7WUFDSyxlQUFlLEdBQTZCLFNBQVMsQ0FBQyxHQUFHOzs7O1FBQUMsVUFBQyxRQUFnQztZQUMvRixPQUFPLEtBQUksQ0FBQyx1QkFBdUIsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNoRCxDQUFDLEVBQUM7UUFDRixPQUFPLGVBQWUsQ0FBQztJQUN6QixDQUFDO0lBRUQ7O09BRUc7Ozs7OztJQUNXLHNDQUF1Qjs7Ozs7SUFBckMsVUFBc0MsUUFBZ0M7O1lBQzlELGNBQWMsR0FBMkI7WUFDN0MsWUFBWSxFQUFFLFFBQVEsQ0FBQyxVQUFVO1lBQ2pDLFFBQVEsRUFBRSxRQUFRLENBQUMsUUFBUTtTQUM1QjtRQUNELE9BQU8sY0FBYyxDQUFDO0lBQ3hCLENBQUM7SUFFRDs7T0FFRzs7Ozs7O0lBQ1cscUNBQXNCOzs7OztJQUFwQyxVQUFxQyxlQUF5QztRQUM1RSxJQUFJLENBQUMsZUFBZSxJQUFJLGVBQWUsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ3BELE9BQU87U0FDUjs7WUFDSywyQkFBMkIsR0FBRyxlQUFlLENBQUMsQ0FBQyxDQUFDO1FBQ3RELE9BQU8sMkJBQTJCLENBQUM7SUFDckMsQ0FBQztJQUVEOztPQUVHOzs7Ozs7SUFDVyxnQ0FBaUI7Ozs7O0lBQS9CLFVBQWdDLGVBQXlDO1FBQ3ZFLElBQUksQ0FBQyxlQUFlLEVBQUU7WUFDcEIsZUFBZSxHQUFHLEVBQUUsQ0FBQztTQUN0Qjs7WUFDSyxhQUFhLEdBQUcsZUFBZSxDQUFDLEdBQUc7Ozs7UUFBQyxVQUFDLGNBQXNDO1lBQy9FLE9BQU8sY0FBYyxDQUFDLFlBQVksQ0FBQztRQUNyQyxDQUFDLEVBQUM7UUFFRixPQUFPLGFBQWEsQ0FBQztJQUN2QixDQUFDO0lBRUQ7O09BRUc7Ozs7Ozs7SUFDVywrQkFBZ0I7Ozs7OztJQUE5QixVQUErQixXQUFXLEVBQUUsV0FBVztRQUF2RCxpQkFrQkM7O1lBakJPLGFBQWEsR0FBRyxFQUFFO1FBQ3hCLFdBQVcsQ0FBQyxPQUFPOzs7O1FBQUMsVUFBQyxPQUFZOztnQkFDM0IsT0FBTyxHQUFHLFdBQVcsQ0FBQyxJQUFJOzs7O1lBQUMsVUFBQyxPQUFZO2dCQUMxQyxPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDekMsQ0FBQyxFQUFDO1lBRUYsSUFBSSxDQUFDLE9BQU8sRUFBRTtnQkFDWixPQUFPLEdBQUcsRUFBRSxDQUFDO2FBQ2Q7O2dCQUVLLFlBQVksR0FBRyxLQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUM7WUFDM0QsSUFBSSxZQUFZLEVBQUU7Z0JBQ2hCLGFBQWEsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7YUFDbEM7UUFDSCxDQUFDLEVBQUMsQ0FBQztRQUVILE9BQU8sYUFBYSxDQUFDO0lBQ3ZCLENBQUM7SUFFRDs7T0FFRzs7Ozs7OztJQUNXLDhCQUFlOzs7Ozs7SUFBN0IsVUFBOEIsT0FBTyxFQUFFLE9BQU87O1lBQ3RDLFlBQVksR0FBaUI7WUFDakMsVUFBVSxFQUFFLGdCQUFnQixDQUFDLE1BQU07WUFDbkMsVUFBVSxFQUFFO2dCQUNWLE1BQU0sRUFBRSxPQUFPLENBQUMsSUFBSSxDQUFDO2FBQ3RCO1NBQ0Y7O1lBQ0csU0FBUyxHQUFHLEtBQUs7UUFFckIsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPOzs7O1FBQUMsVUFBQyxRQUFRO1lBRXBDLGNBQWM7WUFDZCxJQUFJLFFBQVEsS0FBSyxJQUFJLElBQUksUUFBUSxLQUFLLFVBQVUsSUFBSSxRQUFRLEtBQUssUUFBUSxFQUFFO2dCQUN6RSxPQUFPO2FBQ1I7O2dCQUVLLFFBQVEsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDOztnQkFDNUIsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7WUFFbEMsSUFBSSxRQUFRLEtBQUssU0FBUyxJQUFJLE9BQU8sUUFBUSxLQUFLLFFBQVEsRUFBRTtnQkFDMUQsT0FBTzthQUNSO1lBRUQsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxLQUFLLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLEVBQUU7Z0JBQ3pELFlBQVksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLEdBQUcsUUFBUSxDQUFDO2dCQUM3QyxTQUFTLEdBQUcsSUFBSSxDQUFDO2FBQ2xCO1FBQ0gsQ0FBQyxFQUFDLENBQUM7UUFFSCxPQUFPLFNBQVMsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFFekMsQ0FBQztJQUVILHFCQUFDO0FBQUQsQ0FBQyxBQTlHRCxJQThHQztBQUVELE9BQU8sRUFBRSxjQUFjLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGFpbCwgQ2hhbmdlRGV0YWlsVHlwZSB9IGZyb20gJ0BmYXJyaXMvbW9iaWxlLWJlZic7XHJcbmltcG9ydCB7IEJ1c2luZXNzVXBsb2FkRmlsZUluZm8sIEJ1c2luZXNzQXR0YWNobWVudEluZm8gfSBmcm9tICcuL3R5cGVzJztcclxuXHJcblxyXG4vKipcclxuICog6ZmE5Lu25L+h5oGv5aSE55CG5bel5YW357G7XHJcbiAqL1xyXG5jbGFzcyBBdHRhY2htZW50VXRpbCB7XHJcblxyXG4gIC8qKlxyXG4gICAqIOi9rOaNouS4uumZhOS7tuS/oeaBr+aVsOe7hFxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgY29udmVydFRvQXR0YWNobWVudEluZm9zKGZpbGVJbmZvczogQnVzaW5lc3NVcGxvYWRGaWxlSW5mb1tdKTogQnVzaW5lc3NBdHRhY2htZW50SW5mb1tdIHtcclxuICAgIGlmICghZmlsZUluZm9zKSB7XHJcbiAgICAgIHJldHVybiBbXTtcclxuICAgIH1cclxuICAgIGNvbnN0IGF0dGFjaG1lbnRJbmZvczogQnVzaW5lc3NBdHRhY2htZW50SW5mb1tdID0gZmlsZUluZm9zLm1hcCgoZmlsZUluZm86IEJ1c2luZXNzVXBsb2FkRmlsZUluZm8pID0+IHtcclxuICAgICAgcmV0dXJuIHRoaXMuY29udmVydFRvQXR0YWNobWVudEluZm8oZmlsZUluZm8pO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gYXR0YWNobWVudEluZm9zO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6L2s5o2i5Li66ZmE5Lu25L+h5oGvXHJcbiAgICovXHJcbiAgcHVibGljIHN0YXRpYyBjb252ZXJ0VG9BdHRhY2htZW50SW5mbyhmaWxlSW5mbzogQnVzaW5lc3NVcGxvYWRGaWxlSW5mbyk6IEJ1c2luZXNzQXR0YWNobWVudEluZm8ge1xyXG4gICAgY29uc3QgYXR0YWNobWVudEluZm86IEJ1c2luZXNzQXR0YWNobWVudEluZm8gPSB7XHJcbiAgICAgIGF0dGFjaG1lbnRJZDogZmlsZUluZm8ubWV0YWRhdGFJZCxcclxuICAgICAgZmlsZU5hbWU6IGZpbGVJbmZvLmZpbGVOYW1lXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIGF0dGFjaG1lbnRJbmZvO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W6ZmE5Lu25YiX6KGo5Lit55qE56ys5LiA5Liq6ZmE5Lu2XHJcbiAgICovXHJcbiAgcHVibGljIHN0YXRpYyBnZXRGaXJzdEF0dGFjaG1lbnRJbmZvKGF0dGFjaG1lbnRJbmZvczogQnVzaW5lc3NBdHRhY2htZW50SW5mb1tdKSB7XHJcbiAgICBpZiAoIWF0dGFjaG1lbnRJbmZvcyB8fCBhdHRhY2htZW50SW5mb3MubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGNvbnN0IGZpcnN0QnVzaW5lc3NBdHRhY2htZW50SW5mbyA9IGF0dGFjaG1lbnRJbmZvc1swXTtcclxuICAgIHJldHVybiBmaXJzdEJ1c2luZXNzQXR0YWNobWVudEluZm87XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmj5Dlj5bpmYTku7ZpZOaVsOe7hFxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgcGVla0F0dGFjaG1lbnRJZHMoYXR0YWNobWVudEluZm9zOiBCdXNpbmVzc0F0dGFjaG1lbnRJbmZvW10pIHtcclxuICAgIGlmICghYXR0YWNobWVudEluZm9zKSB7XHJcbiAgICAgIGF0dGFjaG1lbnRJbmZvcyA9IFtdO1xyXG4gICAgfVxyXG4gICAgY29uc3QgYXR0YWNobWVudElkcyA9IGF0dGFjaG1lbnRJbmZvcy5tYXAoKGF0dGFjaG1lbnRJbmZvOiBCdXNpbmVzc0F0dGFjaG1lbnRJbmZvKSA9PiB7XHJcbiAgICAgIHJldHVybiBhdHRhY2htZW50SW5mby5hdHRhY2htZW50SWQ7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gYXR0YWNobWVudElkcztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOaJuemHj+iOt+WPluWPmOabtFxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgZ2V0Q2hhbmdlRGV0YWlscyhvbGRMaXN0RGF0YSwgbmV3TGlzdERhdGEpOiBDaGFuZ2VEZXRhaWxbXSB7XHJcbiAgICBjb25zdCBjaGFuZ2VEZXRhaWxzID0gW107XHJcbiAgICBuZXdMaXN0RGF0YS5mb3JFYWNoKChuZXdEYXRhOiBhbnkpID0+IHtcclxuICAgICAgbGV0IG9sZERhdGEgPSBvbGRMaXN0RGF0YS5maW5kKChvbGREYXRhOiBhbnkpID0+IHtcclxuICAgICAgICByZXR1cm4gb2xkRGF0YVsnaWQnXSA9PT0gbmV3RGF0YVsnaWQnXTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBpZiAoIW9sZERhdGEpIHtcclxuICAgICAgICBvbGREYXRhID0ge307XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbnN0IGNoYW5nZURldGFpbCA9IHRoaXMuZ2V0Q2hhbmdlRGV0YWlsKG9sZERhdGEsIG5ld0RhdGEpO1xyXG4gICAgICBpZiAoY2hhbmdlRGV0YWlsKSB7XHJcbiAgICAgICAgY2hhbmdlRGV0YWlscy5wdXNoKGNoYW5nZURldGFpbCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiBjaGFuZ2VEZXRhaWxzO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5Y+Y5pu06ZuGXHJcbiAgICovXHJcbiAgcHVibGljIHN0YXRpYyBnZXRDaGFuZ2VEZXRhaWwob2xkRGF0YSwgbmV3RGF0YSk6IENoYW5nZURldGFpbCB7XHJcbiAgICBjb25zdCBjaGFuZ2VEZXRhaWw6IENoYW5nZURldGFpbCA9IHtcclxuICAgICAgQ2hhbmdlVHlwZTogQ2hhbmdlRGV0YWlsVHlwZS5Nb2RpZnksXHJcbiAgICAgIENoYW5nZUluZm86IHtcclxuICAgICAgICBEYXRhSWQ6IG5ld0RhdGFbJ2lkJ11cclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIGxldCBpc0NoYW5nZWQgPSBmYWxzZTtcclxuXHJcbiAgICBPYmplY3Qua2V5cyhuZXdEYXRhKS5mb3JFYWNoKChwcm9wTmFtZSkgPT4ge1xyXG5cclxuICAgICAgLy8g56e76Zmk5LiN5b+F6KaB55qE5bGe5oCn55qE5q+U6L6DXHJcbiAgICAgIGlmIChwcm9wTmFtZSA9PT0gJ2lkJyB8fCBwcm9wTmFtZSA9PT0gJ25vZGVDb2RlJyB8fCBwcm9wTmFtZSA9PT0gJ2NoaWxkcycpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIGNvbnN0IG9sZFZhbHVlID0gb2xkRGF0YVtwcm9wTmFtZV07XHJcbiAgICAgIGNvbnN0IG5ld1ZhbHVlID0gbmV3RGF0YVtwcm9wTmFtZV07XHJcblxyXG4gICAgICBpZiAob2xkVmFsdWUgPT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgbmV3VmFsdWUgPT09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoSlNPTi5zdHJpbmdpZnkob2xkVmFsdWUpICE9PSBKU09OLnN0cmluZ2lmeShuZXdWYWx1ZSkpIHtcclxuICAgICAgICBjaGFuZ2VEZXRhaWwuQ2hhbmdlSW5mb1twcm9wTmFtZV0gPSBuZXdWYWx1ZTtcclxuICAgICAgICBpc0NoYW5nZWQgPSB0cnVlO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gaXNDaGFuZ2VkID8gY2hhbmdlRGV0YWlsIDogbnVsbDtcclxuXHJcbiAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IHsgQXR0YWNobWVudFV0aWwgfTtcclxuIl19