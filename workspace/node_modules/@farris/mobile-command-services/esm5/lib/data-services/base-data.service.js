/**
 * @fileoverview added by tsickle
 * Generated from: lib/data-services/base-data.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EntityService } from '../entity-services/index';
import { LoadingService, ToastService, NotifyService, DialogService } from '../ui-services/index';
import { ExceptionService } from '../exception-services/index';
/**
 * 数据服务基类
 */
var /**
 * 数据服务基类
 */
BaseDataService = /** @class */ (function () {
    function BaseDataService(viewModelContext) {
        this.viewModelContext = viewModelContext;
        this.init();
    }
    /**
     * @private
     * @return {?}
     */
    BaseDataService.prototype.init = /**
     * @private
     * @return {?}
     */
    function () {
        this.initServices();
    };
    /**
     * @private
     * @return {?}
     */
    BaseDataService.prototype.initServices = /**
     * @private
     * @return {?}
     */
    function () {
        this.loadingService = this.getService(LoadingService);
        this.toastService = this.getService(ToastService);
        this.notifyService = this.getService(NotifyService);
        this.dialogService = this.getService(DialogService);
        this.exceptionService = this.getService(ExceptionService);
        this.entityService = this.getService(EntityService);
        this.befRepository = (/** @type {?} */ (this.viewModelContext.repository));
    };
    /**
     * 获取服务实例
     */
    /**
     * 获取服务实例
     * @template T
     * @param {?} token
     * @return {?}
     */
    BaseDataService.prototype.getService = /**
     * 获取服务实例
     * @template T
     * @param {?} token
     * @return {?}
     */
    function (token) {
        /** @type {?} */
        var injector = this.viewModelContext.injector;
        return injector.get(token);
    };
    return BaseDataService;
}());
if (false) {
    /**
     * @type {?}
     * @protected
     */
    BaseDataService.prototype.loadingService;
    /**
     * @type {?}
     * @protected
     */
    BaseDataService.prototype.toastService;
    /**
     * @type {?}
     * @protected
     */
    BaseDataService.prototype.notifyService;
    /**
     * @type {?}
     * @protected
     */
    BaseDataService.prototype.dialogService;
    /**
     * @type {?}
     * @protected
     */
    BaseDataService.prototype.exceptionService;
    /**
     * @type {?}
     * @protected
     */
    BaseDataService.prototype.befRepository;
    /**
     * @type {?}
     * @protected
     */
    BaseDataService.prototype.entityService;
    /**
     * @type {?}
     * @protected
     */
    BaseDataService.prototype.viewModelContext;
}
export { BaseDataService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1kYXRhLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL21vYmlsZS1jb21tYW5kLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsibGliL2RhdGEtc2VydmljZXMvYmFzZS1kYXRhLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDekQsT0FBTyxFQUFFLGNBQWMsRUFBRSxZQUFZLEVBQUUsYUFBYSxFQUFFLGFBQWEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2xHLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDOzs7O0FBTS9EOzs7O0lBZ0JFLHlCQUFzQixnQkFBa0M7UUFBbEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUN0RCxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDZCxDQUFDOzs7OztJQUVPLDhCQUFJOzs7O0lBQVo7UUFDRSxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDdEIsQ0FBQzs7Ozs7SUFFTyxzQ0FBWTs7OztJQUFwQjtRQUNFLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBaUIsY0FBYyxDQUFDLENBQUM7UUFDdEUsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFlLFlBQVksQ0FBQyxDQUFDO1FBQ2hFLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBZ0IsYUFBYSxDQUFDLENBQUM7UUFDbkUsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFnQixhQUFhLENBQUMsQ0FBQztRQUNuRSxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBbUIsZ0JBQWdCLENBQUMsQ0FBQztRQUM1RSxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQWdCLGFBQWEsQ0FBQyxDQUFDO1FBQ25FLElBQUksQ0FBQyxhQUFhLEdBQUcsbUJBQUEsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsRUFBeUIsQ0FBQztJQUNqRixDQUFDO0lBRUQ7O09BRUc7Ozs7Ozs7SUFDSCxvQ0FBVTs7Ozs7O0lBQVYsVUFBYyxLQUFVOztZQUNoQixRQUFRLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVE7UUFDL0MsT0FBTyxRQUFRLENBQUMsR0FBRyxDQUFJLEtBQUssQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFSCxzQkFBQztBQUFELENBQUMsQUExQ0QsSUEwQ0M7Ozs7OztJQXhDQyx5Q0FBeUM7Ozs7O0lBRXpDLHVDQUFxQzs7Ozs7SUFFckMsd0NBQXVDOzs7OztJQUV2Qyx3Q0FBdUM7Ozs7O0lBRXZDLDJDQUE2Qzs7Ozs7SUFFN0Msd0NBQStDOzs7OztJQUUvQyx3Q0FBdUM7Ozs7O0lBRTNCLDJDQUE0Qzs7QUE0QjFELE9BQU8sRUFBRSxlQUFlLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVudGl0eSwgVmlld01vZGVsQ29udGV4dCB9IGZyb20gJ0BmYXJyaXMvbW9iaWxlLWRldmtpdCc7XHJcbmltcG9ydCB7IEJlZlJlcG9zaXRvcnkgfSBmcm9tICdAZmFycmlzL21vYmlsZS1iZWYnO1xyXG5pbXBvcnQgeyBFbnRpdHlTZXJ2aWNlIH0gZnJvbSAnLi4vZW50aXR5LXNlcnZpY2VzL2luZGV4JztcclxuaW1wb3J0IHsgTG9hZGluZ1NlcnZpY2UsIFRvYXN0U2VydmljZSwgTm90aWZ5U2VydmljZSwgRGlhbG9nU2VydmljZSB9IGZyb20gJy4uL3VpLXNlcnZpY2VzL2luZGV4JztcclxuaW1wb3J0IHsgRXhjZXB0aW9uU2VydmljZSB9IGZyb20gJy4uL2V4Y2VwdGlvbi1zZXJ2aWNlcy9pbmRleCc7XHJcbmltcG9ydCB7IENvbW1hbmRTZXJ2aWNlIH0gZnJvbSAnLi4vY29tbWFuZC5zZXJ2aWNlJztcclxuXHJcbi8qKlxyXG4gKiDmlbDmja7mnI3liqHln7rnsbtcclxuICovXHJcbmNsYXNzIEJhc2VEYXRhU2VydmljZSB7XHJcblxyXG4gIHByb3RlY3RlZCBsb2FkaW5nU2VydmljZTogTG9hZGluZ1NlcnZpY2U7XHJcblxyXG4gIHByb3RlY3RlZCB0b2FzdFNlcnZpY2U6IFRvYXN0U2VydmljZTtcclxuXHJcbiAgcHJvdGVjdGVkIG5vdGlmeVNlcnZpY2U6IE5vdGlmeVNlcnZpY2U7XHJcblxyXG4gIHByb3RlY3RlZCBkaWFsb2dTZXJ2aWNlOiBEaWFsb2dTZXJ2aWNlO1xyXG5cclxuICBwcm90ZWN0ZWQgZXhjZXB0aW9uU2VydmljZTogRXhjZXB0aW9uU2VydmljZTtcclxuXHJcbiAgcHJvdGVjdGVkIGJlZlJlcG9zaXRvcnk6IEJlZlJlcG9zaXRvcnk8RW50aXR5PjtcclxuXHJcbiAgcHJvdGVjdGVkIGVudGl0eVNlcnZpY2U6IEVudGl0eVNlcnZpY2U7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCB2aWV3TW9kZWxDb250ZXh0OiBWaWV3TW9kZWxDb250ZXh0KSB7XHJcbiAgICB0aGlzLmluaXQoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgaW5pdCgpIHtcclxuICAgIHRoaXMuaW5pdFNlcnZpY2VzKCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGluaXRTZXJ2aWNlcygpIHtcclxuICAgIHRoaXMubG9hZGluZ1NlcnZpY2UgPSB0aGlzLmdldFNlcnZpY2U8TG9hZGluZ1NlcnZpY2U+KExvYWRpbmdTZXJ2aWNlKTtcclxuICAgIHRoaXMudG9hc3RTZXJ2aWNlID0gdGhpcy5nZXRTZXJ2aWNlPFRvYXN0U2VydmljZT4oVG9hc3RTZXJ2aWNlKTtcclxuICAgIHRoaXMubm90aWZ5U2VydmljZSA9IHRoaXMuZ2V0U2VydmljZTxOb3RpZnlTZXJ2aWNlPihOb3RpZnlTZXJ2aWNlKTtcclxuICAgIHRoaXMuZGlhbG9nU2VydmljZSA9IHRoaXMuZ2V0U2VydmljZTxEaWFsb2dTZXJ2aWNlPihEaWFsb2dTZXJ2aWNlKTtcclxuICAgIHRoaXMuZXhjZXB0aW9uU2VydmljZSA9IHRoaXMuZ2V0U2VydmljZTxFeGNlcHRpb25TZXJ2aWNlPihFeGNlcHRpb25TZXJ2aWNlKTtcclxuICAgIHRoaXMuZW50aXR5U2VydmljZSA9IHRoaXMuZ2V0U2VydmljZTxFbnRpdHlTZXJ2aWNlPihFbnRpdHlTZXJ2aWNlKTtcclxuICAgIHRoaXMuYmVmUmVwb3NpdG9yeSA9IHRoaXMudmlld01vZGVsQ29udGV4dC5yZXBvc2l0b3J5IGFzIEJlZlJlcG9zaXRvcnk8RW50aXR5PjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluacjeWKoeWunuS+i1xyXG4gICAqL1xyXG4gIGdldFNlcnZpY2U8VD4odG9rZW46IGFueSk6IFQge1xyXG4gICAgY29uc3QgaW5qZWN0b3IgPSB0aGlzLnZpZXdNb2RlbENvbnRleHQuaW5qZWN0b3I7XHJcbiAgICByZXR1cm4gaW5qZWN0b3IuZ2V0PFQ+KHRva2VuKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgeyBCYXNlRGF0YVNlcnZpY2UgfTtcclxuIl19