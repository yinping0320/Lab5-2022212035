/**
 * @fileoverview added by tsickle
 * Generated from: lib/history-back.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { JsBridgeService } from './js-bridge-service/index';
/**
 * 帮助映射服务
 */
export class HistoryBackService {
    constructor() {
    }
    /**
     * @return {?}
     */
    init() {
        window['MOBILE_ORIGIN_BACK_ARRAY'] = window['MOBILE_ORIGIN_BACK_ARRAY'] || [];
        window['MOBILE_ORIGIN_BACK'] = {
            /**
             * @param {?} fn
             * @return {?}
             */
            pushOriginGoback(fn) {
                window['MOBILE_ORIGIN_BACK_ARRAY'].push(fn);
            },
            /**
             * @return {?}
             */
            popOriginGoback() {
                window['MOBILE_ORIGIN_BACK_ARRAY'].pop();
            },
            /**
             * @return {?}
             */
            reflushOriginGoback() {
                window['MOBILE_ORIGIN_BACK_ARRAY'] = [];
            }
        };
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    pushOriginGoback(fn) {
        window['MOBILE_ORIGIN_BACK_ARRAY'].push(fn);
    }
    /**
     * @return {?}
     */
    popOriginGoback() {
        window['MOBILE_ORIGIN_BACK_ARRAY'].pop();
    }
    /**
     * @return {?}
     */
    reflushOriginGoback() {
        window['MOBILE_ORIGIN_BACK_ARRAY'] = [];
    }
    /**
     * @return {?}
     */
    proxyBack() {
        if (!(navigator.userAgent.toLowerCase().search('emmcloud') !== -1)) {
            return;
        }
        if (window.top.location.pathname.indexOf('mobiletaskcenter') > -1) {
            setTimeout((/**
             * @return {?}
             */
            () => {
                window.top['detailBackBtnClickHandler'] = (/**
                 * @param {?} back
                 * @return {?}
                 */
                (back) => {
                    /** @type {?} */
                    const gobackFn = window['MOBILE_ORIGIN_BACK_ARRAY'].pop();
                    if (gobackFn) {
                        gobackFn();
                        return false;
                    }
                    else {
                        /** @type {?} */
                        const key = location.pathname + location.hash.slice(0, location.hash.indexOf('?'));
                        /** @type {?} */
                        let need_go_back = sessionStorage.getItem(key);
                        if (!need_go_back) {
                            return true;
                        }
                        history.back();
                        return false;
                    }
                });
            }), 0);
        }
        else {
            /** @type {?} */
            const _close = (/**
             * @return {?}
             */
            () => {
                /** @type {?} */
                const gobackFn = window['MOBILE_ORIGIN_BACK_ARRAY'].pop();
                if (gobackFn) {
                    gobackFn();
                }
                else {
                    history.back();
                }
            });
            /** @type {?} */
            const jsBridgeService = new JsBridgeService();
            jsBridgeService.setOriginGoback(_close);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlzdG9yeS1iYWNrLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL21vYmlsZS1jb21tYW5kLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsibGliL2hpc3RvcnktYmFjay5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDJCQUEyQixDQUFDOzs7O0FBSzVELE1BQU0sT0FBTyxrQkFBa0I7SUFFN0I7SUFDQSxDQUFDOzs7O0lBRUQsSUFBSTtRQUNGLE1BQU0sQ0FBQywwQkFBMEIsQ0FBQyxHQUFHLE1BQU0sQ0FBQywwQkFBMEIsQ0FBQyxJQUFJLEVBQUUsQ0FBQTtRQUM3RSxNQUFNLENBQUMsb0JBQW9CLENBQUMsR0FBRzs7Ozs7WUFDN0IsZ0JBQWdCLENBQUMsRUFBRTtnQkFDakIsTUFBTSxDQUFDLDBCQUEwQixDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQzlDLENBQUM7Ozs7WUFDRCxlQUFlO2dCQUNiLE1BQU0sQ0FBQywwQkFBMEIsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQzNDLENBQUM7Ozs7WUFDRCxtQkFBbUI7Z0JBQ2pCLE1BQU0sQ0FBQywwQkFBMEIsQ0FBQyxHQUFHLEVBQUUsQ0FBQTtZQUN6QyxDQUFDO1NBQ0YsQ0FBQTtJQUNILENBQUM7Ozs7O0lBRUQsZ0JBQWdCLENBQUMsRUFBRTtRQUNqQixNQUFNLENBQUMsMEJBQTBCLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7OztJQUVELGVBQWU7UUFDYixNQUFNLENBQUMsMEJBQTBCLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUMzQyxDQUFDOzs7O0lBRUQsbUJBQW1CO1FBQ2pCLE1BQU0sQ0FBQywwQkFBMEIsQ0FBQyxHQUFHLEVBQUUsQ0FBQTtJQUN6QyxDQUFDOzs7O0lBRUQsU0FBUztRQUNQLElBQUksQ0FBQyxDQUFFLFNBQVMsQ0FBQyxTQUFTLENBQUMsV0FBVyxFQUFFLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUM7WUFDbEUsT0FBUTtTQUNUO1FBQ0QsSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUU7WUFDakUsVUFBVTs7O1lBQUMsR0FBRSxFQUFFO2dCQUNiLE1BQU0sQ0FBQyxHQUFHLENBQUMsMkJBQTJCLENBQUM7Ozs7Z0JBQUcsQ0FBQyxJQUFJLEVBQUUsRUFBRTs7MEJBQzNDLFFBQVEsR0FBRyxNQUFNLENBQUMsMEJBQTBCLENBQUMsQ0FBQyxHQUFHLEVBQUU7b0JBQ3pELElBQUksUUFBUSxFQUFFO3dCQUNaLFFBQVEsRUFBRSxDQUFDO3dCQUNYLE9BQU8sS0FBSyxDQUFDO3FCQUNkO3lCQUFNOzs4QkFDQyxHQUFHLEdBQUcsUUFBUSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7OzRCQUM5RSxZQUFZLEdBQUcsY0FBYyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUM7d0JBQzlDLElBQUksQ0FBQyxZQUFZLEVBQUU7NEJBQ2pCLE9BQU8sSUFBSSxDQUFDO3lCQUNiO3dCQUNELE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQTt3QkFDZCxPQUFPLEtBQUssQ0FBQztxQkFDZDtnQkFDSCxDQUFDLENBQUEsQ0FBQTtZQUNILENBQUMsR0FBRSxDQUFDLENBQUMsQ0FBQTtTQUVOO2FBQU07O2tCQUNDLE1BQU07OztZQUFHLEdBQUcsRUFBRTs7c0JBQ1osUUFBUSxHQUFHLE1BQU0sQ0FBQywwQkFBMEIsQ0FBQyxDQUFDLEdBQUcsRUFBRTtnQkFDekQsSUFBSSxRQUFRLEVBQUU7b0JBQ1osUUFBUSxFQUFFLENBQUE7aUJBQ1g7cUJBQU07b0JBQ0wsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFBO2lCQUNmO1lBQ0gsQ0FBQyxDQUFBOztrQkFDSyxlQUFlLEdBQUcsSUFBSSxlQUFlLEVBQUU7WUFDN0MsZUFBZSxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQTtTQUN4QztJQUNILENBQUM7Q0FJRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEpzQnJpZGdlU2VydmljZSB9IGZyb20gJy4vanMtYnJpZGdlLXNlcnZpY2UvaW5kZXgnO1xyXG5cclxuLyoqXHJcbiAqIOW4ruWKqeaYoOWwhOacjeWKoVxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIEhpc3RvcnlCYWNrU2VydmljZSB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gIH1cclxuXHJcbiAgaW5pdCgpIHtcclxuICAgIHdpbmRvd1snTU9CSUxFX09SSUdJTl9CQUNLX0FSUkFZJ10gPSB3aW5kb3dbJ01PQklMRV9PUklHSU5fQkFDS19BUlJBWSddIHx8IFtdXHJcbiAgICB3aW5kb3dbJ01PQklMRV9PUklHSU5fQkFDSyddID0ge1xyXG4gICAgICBwdXNoT3JpZ2luR29iYWNrKGZuKSB7XHJcbiAgICAgICAgd2luZG93WydNT0JJTEVfT1JJR0lOX0JBQ0tfQVJSQVknXS5wdXNoKGZuKTtcclxuICAgICAgfSxcclxuICAgICAgcG9wT3JpZ2luR29iYWNrKCkge1xyXG4gICAgICAgIHdpbmRvd1snTU9CSUxFX09SSUdJTl9CQUNLX0FSUkFZJ10ucG9wKCk7XHJcbiAgICAgIH0sXHJcbiAgICAgIHJlZmx1c2hPcmlnaW5Hb2JhY2soKSB7XHJcbiAgICAgICAgd2luZG93WydNT0JJTEVfT1JJR0lOX0JBQ0tfQVJSQVknXSA9IFtdXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1c2hPcmlnaW5Hb2JhY2soZm4pIHtcclxuICAgIHdpbmRvd1snTU9CSUxFX09SSUdJTl9CQUNLX0FSUkFZJ10ucHVzaChmbik7XHJcbiAgfVxyXG5cclxuICBwb3BPcmlnaW5Hb2JhY2soKSB7XHJcbiAgICB3aW5kb3dbJ01PQklMRV9PUklHSU5fQkFDS19BUlJBWSddLnBvcCgpO1xyXG4gIH1cclxuXHJcbiAgcmVmbHVzaE9yaWdpbkdvYmFjaygpIHtcclxuICAgIHdpbmRvd1snTU9CSUxFX09SSUdJTl9CQUNLX0FSUkFZJ10gPSBbXVxyXG4gIH1cclxuXHJcbiAgcHJveHlCYWNrKCkge1xyXG4gICAgaWYgKCEoIG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5zZWFyY2goJ2VtbWNsb3VkJykgIT09IC0xKSl7XHJcbiAgICAgIHJldHVybiA7XHJcbiAgICB9XHJcbiAgICBpZiAod2luZG93LnRvcC5sb2NhdGlvbi5wYXRobmFtZS5pbmRleE9mKCdtb2JpbGV0YXNrY2VudGVyJykgPiAtMSkge1xyXG4gICAgICBzZXRUaW1lb3V0KCgpPT4ge1xyXG4gICAgICAgIHdpbmRvdy50b3BbJ2RldGFpbEJhY2tCdG5DbGlja0hhbmRsZXInXSA9IChiYWNrKSA9PiB7XHJcbiAgICAgICAgICBjb25zdCBnb2JhY2tGbiA9IHdpbmRvd1snTU9CSUxFX09SSUdJTl9CQUNLX0FSUkFZJ10ucG9wKClcclxuICAgICAgICAgIGlmIChnb2JhY2tGbikge1xyXG4gICAgICAgICAgICBnb2JhY2tGbigpO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zdCBrZXkgPSBsb2NhdGlvbi5wYXRobmFtZSArIGxvY2F0aW9uLmhhc2guc2xpY2UoMCwgbG9jYXRpb24uaGFzaC5pbmRleE9mKCc/JykpO1xyXG4gICAgICAgICAgICBsZXQgbmVlZF9nb19iYWNrID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xyXG4gICAgICAgICAgICBpZiAoIW5lZWRfZ29fYmFjaykge1xyXG4gICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGhpc3RvcnkuYmFjaygpXHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH0sIDApXHJcblxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc3QgX2Nsb3NlID0gKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGdvYmFja0ZuID0gd2luZG93WydNT0JJTEVfT1JJR0lOX0JBQ0tfQVJSQVknXS5wb3AoKVxyXG4gICAgICAgIGlmIChnb2JhY2tGbikge1xyXG4gICAgICAgICAgZ29iYWNrRm4oKVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBoaXN0b3J5LmJhY2soKVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBjb25zdCBqc0JyaWRnZVNlcnZpY2UgPSBuZXcgSnNCcmlkZ2VTZXJ2aWNlKCk7XHJcbiAgICAgIGpzQnJpZGdlU2VydmljZS5zZXRPcmlnaW5Hb2JhY2soX2Nsb3NlKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG5cclxufSJdfQ==