/**
 * @fileoverview added by tsickle
 * Generated from: lib/data-services/base-data.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EntityService } from '../entity-services/index';
import { LoadingService, ToastService, NotifyService, DialogService } from '../ui-services/index';
import { ExceptionService } from '../exception-services/index';
/**
 * 数据服务基类
 */
class BaseDataService {
    /**
     * @param {?} viewModelContext
     */
    constructor(viewModelContext) {
        this.viewModelContext = viewModelContext;
        this.init();
    }
    /**
     * @private
     * @return {?}
     */
    init() {
        this.initServices();
    }
    /**
     * @private
     * @return {?}
     */
    initServices() {
        this.loadingService = this.getService(LoadingService);
        this.toastService = this.getService(ToastService);
        this.notifyService = this.getService(NotifyService);
        this.dialogService = this.getService(DialogService);
        this.exceptionService = this.getService(ExceptionService);
        this.entityService = this.getService(EntityService);
        this.befRepository = (/** @type {?} */ (this.viewModelContext.repository));
    }
    /**
     * 获取服务实例
     * @template T
     * @param {?} token
     * @return {?}
     */
    getService(token) {
        /** @type {?} */
        const injector = this.viewModelContext.injector;
        return injector.get(token);
    }
}
if (false) {
    /**
     * @type {?}
     * @protected
     */
    BaseDataService.prototype.loadingService;
    /**
     * @type {?}
     * @protected
     */
    BaseDataService.prototype.toastService;
    /**
     * @type {?}
     * @protected
     */
    BaseDataService.prototype.notifyService;
    /**
     * @type {?}
     * @protected
     */
    BaseDataService.prototype.dialogService;
    /**
     * @type {?}
     * @protected
     */
    BaseDataService.prototype.exceptionService;
    /**
     * @type {?}
     * @protected
     */
    BaseDataService.prototype.befRepository;
    /**
     * @type {?}
     * @protected
     */
    BaseDataService.prototype.entityService;
    /**
     * @type {?}
     * @protected
     */
    BaseDataService.prototype.viewModelContext;
}
export { BaseDataService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1kYXRhLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL21vYmlsZS1jb21tYW5kLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsibGliL2RhdGEtc2VydmljZXMvYmFzZS1kYXRhLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDekQsT0FBTyxFQUFFLGNBQWMsRUFBRSxZQUFZLEVBQUUsYUFBYSxFQUFFLGFBQWEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2xHLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDOzs7O0FBTS9ELE1BQU0sZUFBZTs7OztJQWdCbkIsWUFBc0IsZ0JBQWtDO1FBQWxDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDdEQsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2QsQ0FBQzs7Ozs7SUFFTyxJQUFJO1FBQ1YsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3RCLENBQUM7Ozs7O0lBRU8sWUFBWTtRQUNsQixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQWlCLGNBQWMsQ0FBQyxDQUFDO1FBQ3RFLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBZSxZQUFZLENBQUMsQ0FBQztRQUNoRSxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQWdCLGFBQWEsQ0FBQyxDQUFDO1FBQ25FLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBZ0IsYUFBYSxDQUFDLENBQUM7UUFDbkUsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxVQUFVLENBQW1CLGdCQUFnQixDQUFDLENBQUM7UUFDNUUsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFnQixhQUFhLENBQUMsQ0FBQztRQUNuRSxJQUFJLENBQUMsYUFBYSxHQUFHLG1CQUFBLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLEVBQXlCLENBQUM7SUFDakYsQ0FBQzs7Ozs7OztJQUtELFVBQVUsQ0FBSSxLQUFVOztjQUNoQixRQUFRLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVE7UUFDL0MsT0FBTyxRQUFRLENBQUMsR0FBRyxDQUFJLEtBQUssQ0FBQyxDQUFDO0lBQ2hDLENBQUM7Q0FFRjs7Ozs7O0lBeENDLHlDQUF5Qzs7Ozs7SUFFekMsdUNBQXFDOzs7OztJQUVyQyx3Q0FBdUM7Ozs7O0lBRXZDLHdDQUF1Qzs7Ozs7SUFFdkMsMkNBQTZDOzs7OztJQUU3Qyx3Q0FBK0M7Ozs7O0lBRS9DLHdDQUF1Qzs7Ozs7SUFFM0IsMkNBQTRDOztBQTRCMUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW50aXR5LCBWaWV3TW9kZWxDb250ZXh0IH0gZnJvbSAnQGZhcnJpcy9tb2JpbGUtZGV2a2l0JztcclxuaW1wb3J0IHsgQmVmUmVwb3NpdG9yeSB9IGZyb20gJ0BmYXJyaXMvbW9iaWxlLWJlZic7XHJcbmltcG9ydCB7IEVudGl0eVNlcnZpY2UgfSBmcm9tICcuLi9lbnRpdHktc2VydmljZXMvaW5kZXgnO1xyXG5pbXBvcnQgeyBMb2FkaW5nU2VydmljZSwgVG9hc3RTZXJ2aWNlLCBOb3RpZnlTZXJ2aWNlLCBEaWFsb2dTZXJ2aWNlIH0gZnJvbSAnLi4vdWktc2VydmljZXMvaW5kZXgnO1xyXG5pbXBvcnQgeyBFeGNlcHRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vZXhjZXB0aW9uLXNlcnZpY2VzL2luZGV4JztcclxuaW1wb3J0IHsgQ29tbWFuZFNlcnZpY2UgfSBmcm9tICcuLi9jb21tYW5kLnNlcnZpY2UnO1xyXG5cclxuLyoqXHJcbiAqIOaVsOaNruacjeWKoeWfuuexu1xyXG4gKi9cclxuY2xhc3MgQmFzZURhdGFTZXJ2aWNlIHtcclxuXHJcbiAgcHJvdGVjdGVkIGxvYWRpbmdTZXJ2aWNlOiBMb2FkaW5nU2VydmljZTtcclxuXHJcbiAgcHJvdGVjdGVkIHRvYXN0U2VydmljZTogVG9hc3RTZXJ2aWNlO1xyXG5cclxuICBwcm90ZWN0ZWQgbm90aWZ5U2VydmljZTogTm90aWZ5U2VydmljZTtcclxuXHJcbiAgcHJvdGVjdGVkIGRpYWxvZ1NlcnZpY2U6IERpYWxvZ1NlcnZpY2U7XHJcblxyXG4gIHByb3RlY3RlZCBleGNlcHRpb25TZXJ2aWNlOiBFeGNlcHRpb25TZXJ2aWNlO1xyXG5cclxuICBwcm90ZWN0ZWQgYmVmUmVwb3NpdG9yeTogQmVmUmVwb3NpdG9yeTxFbnRpdHk+O1xyXG5cclxuICBwcm90ZWN0ZWQgZW50aXR5U2VydmljZTogRW50aXR5U2VydmljZTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIHZpZXdNb2RlbENvbnRleHQ6IFZpZXdNb2RlbENvbnRleHQpIHtcclxuICAgIHRoaXMuaW5pdCgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBpbml0KCkge1xyXG4gICAgdGhpcy5pbml0U2VydmljZXMoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgaW5pdFNlcnZpY2VzKCkge1xyXG4gICAgdGhpcy5sb2FkaW5nU2VydmljZSA9IHRoaXMuZ2V0U2VydmljZTxMb2FkaW5nU2VydmljZT4oTG9hZGluZ1NlcnZpY2UpO1xyXG4gICAgdGhpcy50b2FzdFNlcnZpY2UgPSB0aGlzLmdldFNlcnZpY2U8VG9hc3RTZXJ2aWNlPihUb2FzdFNlcnZpY2UpO1xyXG4gICAgdGhpcy5ub3RpZnlTZXJ2aWNlID0gdGhpcy5nZXRTZXJ2aWNlPE5vdGlmeVNlcnZpY2U+KE5vdGlmeVNlcnZpY2UpO1xyXG4gICAgdGhpcy5kaWFsb2dTZXJ2aWNlID0gdGhpcy5nZXRTZXJ2aWNlPERpYWxvZ1NlcnZpY2U+KERpYWxvZ1NlcnZpY2UpO1xyXG4gICAgdGhpcy5leGNlcHRpb25TZXJ2aWNlID0gdGhpcy5nZXRTZXJ2aWNlPEV4Y2VwdGlvblNlcnZpY2U+KEV4Y2VwdGlvblNlcnZpY2UpO1xyXG4gICAgdGhpcy5lbnRpdHlTZXJ2aWNlID0gdGhpcy5nZXRTZXJ2aWNlPEVudGl0eVNlcnZpY2U+KEVudGl0eVNlcnZpY2UpO1xyXG4gICAgdGhpcy5iZWZSZXBvc2l0b3J5ID0gdGhpcy52aWV3TW9kZWxDb250ZXh0LnJlcG9zaXRvcnkgYXMgQmVmUmVwb3NpdG9yeTxFbnRpdHk+O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5pyN5Yqh5a6e5L6LXHJcbiAgICovXHJcbiAgZ2V0U2VydmljZTxUPih0b2tlbjogYW55KTogVCB7XHJcbiAgICBjb25zdCBpbmplY3RvciA9IHRoaXMudmlld01vZGVsQ29udGV4dC5pbmplY3RvcjtcclxuICAgIHJldHVybiBpbmplY3Rvci5nZXQ8VD4odG9rZW4pO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCB7IEJhc2VEYXRhU2VydmljZSB9O1xyXG4iXX0=