/**
 * @fileoverview added by tsickle
 * Generated from: lib/map-services/map.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export class MapService {
    constructor() {
    }
    /**
     * @param {?} options
     * @return {?}
     */
    getStaticMap(options) {
        if (!options) {
            return;
        }
        // location是必填的
        if (!options.location) {
            return;
        }
        if (!options.key) {
            // 默认key
            options.key = 'e01c849062d312e0cbeb2beb1f28ef71';
        }
        if (!options.zoom) {
            options.zoom = 10;
        }
        if (!options.size) {
            options.size = {
                width: 400,
                height: 400
            };
        }
        /** @type {?} */
        const markers = options.markers;
        /** @type {?} */
        let markersStr = '';
        if (markers && markers.length) {
            // 地图标记
            markersStr = markers.reduce((/**
             * @param {?} total
             * @param {?} next
             * @param {?} index
             * @return {?}
             */
            (total, next, index) => {
                total += (next.longtitude + ',' + next.latitude + ';');
                return total;
            }), '');
            if (!options.markerSize) {
                options.markerSize = 'mid';
            }
            if (!options.markerColor) {
                /* 默认红色 */
                options.markerColor = '';
            }
            if (markersStr) {
                markersStr = `&markers=${options.markerSize},${options.markerColor},A:${markersStr.substring(0, markersStr.length - 1)}`;
            }
        }
        /** @type {?} */
        let longitude = options.location.longtitude;
        /** @type {?} */
        let latitude = options.location.latitude;
        // 处理location的小数点后几位  最长保留6位
        /** @type {?} */
        const longitudeStr = longitude.toString();
        /** @type {?} */
        const latitudeStr = latitude.toString();
        if (longitudeStr.substring(longitudeStr.indexOf('.') + 1).length > 6) {
            longitude = longitude.toFixed(6);
        }
        if (latitudeStr.substring(latitudeStr.indexOf('.') + 1).length > 6) {
            latitude = latitude.toFixed(6);
        }
        return 'https://restapi.amap.com/v3/staticmap' +
            '?location=' + longitude + ',' + latitude +
            '&zoom=' + options.zoom +
            '&size=' + options.size.width + '*' + options.size.height +
            markersStr +
            '&key=' + options.key;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL21vYmlsZS1jb21tYW5kLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsibGliL21hcC1zZXJ2aWNlcy9tYXAuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBLE1BQU0sT0FBTyxVQUFVO0lBQ25CO0lBRUEsQ0FBQzs7Ozs7SUFDRCxZQUFZLENBQUMsT0FBa0I7UUFDM0IsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNWLE9BQU87U0FDVjtRQUNELGVBQWU7UUFDZixJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRTtZQUNuQixPQUFPO1NBQ1Y7UUFDRCxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRTtZQUNkLFFBQVE7WUFDUixPQUFPLENBQUMsR0FBRyxHQUFHLGtDQUFrQyxDQUFDO1NBQ3BEO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUU7WUFDZixPQUFPLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztTQUNyQjtRQUNELElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFO1lBQ2YsT0FBTyxDQUFDLElBQUksR0FBRztnQkFDWCxLQUFLLEVBQUUsR0FBRztnQkFDVixNQUFNLEVBQUUsR0FBRzthQUNkLENBQUM7U0FDTDs7Y0FDSyxPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU87O1lBQzNCLFVBQVUsR0FBRyxFQUFFO1FBQ25CLElBQUksT0FBTyxJQUFJLE9BQU8sQ0FBQyxNQUFNLEVBQUU7WUFDM0IsT0FBTztZQUNQLFVBQVUsR0FBRyxPQUFPLENBQUMsTUFBTTs7Ozs7O1lBQUMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFO2dCQUMvQyxLQUFLLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxDQUFDO2dCQUN2RCxPQUFPLEtBQUssQ0FBQztZQUNqQixDQUFDLEdBQUUsRUFBRSxDQUFDLENBQUM7WUFDUCxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRTtnQkFDckIsT0FBTyxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7YUFDOUI7WUFDRCxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRTtnQkFDdEIsVUFBVTtnQkFDVixPQUFPLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQzthQUM1QjtZQUNELElBQUksVUFBVSxFQUFFO2dCQUNaLFVBQVUsR0FBRyxZQUFZLE9BQU8sQ0FBQyxVQUFVLElBQUksT0FBTyxDQUFDLFdBQVcsTUFBTSxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUM7YUFDNUg7U0FDSjs7WUFDRyxTQUFTLEdBQW9CLE9BQU8sQ0FBQyxRQUFRLENBQUMsVUFBVTs7WUFDeEQsUUFBUSxHQUFvQixPQUFPLENBQUMsUUFBUSxDQUFDLFFBQVE7OztjQUVuRCxZQUFZLEdBQUcsU0FBUyxDQUFDLFFBQVEsRUFBRTs7Y0FDbkMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxRQUFRLEVBQUU7UUFDdkMsSUFBSSxZQUFZLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNsRSxTQUFTLEdBQUcsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNwQztRQUNELElBQUksV0FBVyxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDaEUsUUFBUSxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDbEM7UUFDRCxPQUFPLHVDQUF1QztZQUMxQyxZQUFZLEdBQUcsU0FBUyxHQUFHLEdBQUcsR0FBRyxRQUFRO1lBQ3pDLFFBQVEsR0FBRyxPQUFPLENBQUMsSUFBSTtZQUN2QixRQUFRLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTTtZQUN6RCxVQUFVO1lBQ1YsT0FBTyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUM7SUFDOUIsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RhdGljTWFwIH0gZnJvbSBcIi4vc3RhdGljLW1hcFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIE1hcFNlcnZpY2Uge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgfVxyXG4gICAgZ2V0U3RhdGljTWFwKG9wdGlvbnM6IFN0YXRpY01hcCkge1xyXG4gICAgICAgIGlmICghb3B0aW9ucykge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGxvY2F0aW9u5piv5b+F5aGr55qEXHJcbiAgICAgICAgaWYgKCFvcHRpb25zLmxvY2F0aW9uKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCFvcHRpb25zLmtleSkge1xyXG4gICAgICAgICAgICAvLyDpu5jorqRrZXlcclxuICAgICAgICAgICAgb3B0aW9ucy5rZXkgPSAnZTAxYzg0OTA2MmQzMTJlMGNiZWIyYmViMWYyOGVmNzEnO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIW9wdGlvbnMuem9vbSkge1xyXG4gICAgICAgICAgICBvcHRpb25zLnpvb20gPSAxMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCFvcHRpb25zLnNpemUpIHtcclxuICAgICAgICAgICAgb3B0aW9ucy5zaXplID0ge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDQwMCxcclxuICAgICAgICAgICAgICAgIGhlaWdodDogNDAwXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IG1hcmtlcnMgPSBvcHRpb25zLm1hcmtlcnM7XHJcbiAgICAgICAgbGV0IG1hcmtlcnNTdHIgPSAnJztcclxuICAgICAgICBpZiAobWFya2VycyAmJiBtYXJrZXJzLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAvLyDlnLDlm77moIforrBcclxuICAgICAgICAgICAgbWFya2Vyc1N0ciA9IG1hcmtlcnMucmVkdWNlKCh0b3RhbCwgbmV4dCwgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRvdGFsICs9IChuZXh0Lmxvbmd0aXR1ZGUgKyAnLCcgKyBuZXh0LmxhdGl0dWRlICsgJzsnKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0b3RhbDtcclxuICAgICAgICAgICAgfSwgJycpO1xyXG4gICAgICAgICAgICBpZiAoIW9wdGlvbnMubWFya2VyU2l6ZSkge1xyXG4gICAgICAgICAgICAgICAgb3B0aW9ucy5tYXJrZXJTaXplID0gJ21pZCc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCFvcHRpb25zLm1hcmtlckNvbG9yKSB7XHJcbiAgICAgICAgICAgICAgICAvKiDpu5jorqTnuqLoibIgKi9cclxuICAgICAgICAgICAgICAgIG9wdGlvbnMubWFya2VyQ29sb3IgPSAnJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAobWFya2Vyc1N0cikge1xyXG4gICAgICAgICAgICAgICAgbWFya2Vyc1N0ciA9IGAmbWFya2Vycz0ke29wdGlvbnMubWFya2VyU2l6ZX0sJHtvcHRpb25zLm1hcmtlckNvbG9yfSxBOiR7bWFya2Vyc1N0ci5zdWJzdHJpbmcoMCwgbWFya2Vyc1N0ci5sZW5ndGggLSAxKX1gO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBsb25naXR1ZGU6IHN0cmluZyB8IG51bWJlciA9IG9wdGlvbnMubG9jYXRpb24ubG9uZ3RpdHVkZTtcclxuICAgICAgICBsZXQgbGF0aXR1ZGU6IHN0cmluZyB8IG51bWJlciA9IG9wdGlvbnMubG9jYXRpb24ubGF0aXR1ZGU7XHJcbiAgICAgICAgLy8g5aSE55CGbG9jYXRpb27nmoTlsI/mlbDngrnlkI7lh6DkvY0gIOacgOmVv+S/neeVmTbkvY1cclxuICAgICAgICBjb25zdCBsb25naXR1ZGVTdHIgPSBsb25naXR1ZGUudG9TdHJpbmcoKTtcclxuICAgICAgICBjb25zdCBsYXRpdHVkZVN0ciA9IGxhdGl0dWRlLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgaWYgKGxvbmdpdHVkZVN0ci5zdWJzdHJpbmcobG9uZ2l0dWRlU3RyLmluZGV4T2YoJy4nKSArIDEpLmxlbmd0aCA+IDYpIHtcclxuICAgICAgICAgICAgbG9uZ2l0dWRlID0gbG9uZ2l0dWRlLnRvRml4ZWQoNik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChsYXRpdHVkZVN0ci5zdWJzdHJpbmcobGF0aXR1ZGVTdHIuaW5kZXhPZignLicpICsgMSkubGVuZ3RoID4gNikge1xyXG4gICAgICAgICAgICBsYXRpdHVkZSA9IGxhdGl0dWRlLnRvRml4ZWQoNik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiAnaHR0cHM6Ly9yZXN0YXBpLmFtYXAuY29tL3YzL3N0YXRpY21hcCcgK1xyXG4gICAgICAgICAgICAnP2xvY2F0aW9uPScgKyBsb25naXR1ZGUgKyAnLCcgKyBsYXRpdHVkZSArXHJcbiAgICAgICAgICAgICcmem9vbT0nICsgb3B0aW9ucy56b29tICtcclxuICAgICAgICAgICAgJyZzaXplPScgKyBvcHRpb25zLnNpemUud2lkdGggKyAnKicgKyBvcHRpb25zLnNpemUuaGVpZ2h0ICtcclxuICAgICAgICAgICAgbWFya2Vyc1N0ciArXHJcbiAgICAgICAgICAgICcma2V5PScgKyBvcHRpb25zLmtleTtcclxuICAgIH1cclxufVxyXG4iXX0=