/**
 * @fileoverview added by tsickle
 * Generated from: lib/js-bridge-service/js-bridge-stratege.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { JsBridgeStrategyFactory } from './js-bridge-strategy-factory';
import { Subject } from 'rxjs';
class JsBridgeService {
    constructor() {
        this.jsBridgeStrategyFactory = new JsBridgeStrategyFactory();
        this.init();
    }
    /**
     * @return {?}
     */
    getSysInfo() {
        return this.getJsBridgeService(this.strategy.getSysInfo);
    }
    /**
     * @private
     * @return {?}
     */
    init() {
        this.strategy = this.jsBridgeStrategyFactory.create();
        window['JsBridgeService'] = this;
    }
    /**
     * @param {?} options
     * @return {?}
     */
    takePhoto(options) {
        return this.getJsBridgeService(this.strategy.takePhoto, options);
    }
    /**
     * @return {?}
     */
    scanQRCode() {
        return this.getJsBridgeService(this.strategy.scanQRCode);
    }
    /**
     * @return {?}
     */
    getLocation() {
        return this.getJsBridgeService(this.strategy.getLocation);
    }
    /**
     * @param {?} number
     * @param {?} content
     * @return {?}
     */
    sendSMS(number, content) {
        return this.getJsBridgeService(this.strategy.sendSMS, number, content);
    }
    /**
     * @param {?} number
     * @param {?} content
     * @return {?}
     */
    openSendSMS(number, content) {
        return this.getJsBridgeService(this.strategy.openSendSMS, number, content);
    }
    /**
     * @param {?} number
     * @return {?}
     */
    tel(number) {
        return this.getJsBridgeService(this.strategy.tel, number);
    }
    /**
     * @param {?} options
     * @return {?}
     */
    selectPictureFromAlbum(options) {
        return this.getJsBridgeService(this.strategy.selectPictureFromAlbum, options);
    }
    /**
     * @param {?} options
     * @return {?}
     */
    takeVideo(options) {
        return this.getJsBridgeService(this.strategy.takeVideo, options);
    }
    /**
     * @return {?}
     */
    closeWindow() {
        return this.getJsBridgeService(this.strategy.closeWindow);
    }
    /**
     * @param {?} title
     * @return {?}
     */
    setTitles(title) {
        return this.getJsBridgeService(this.strategy.setTitles, title);
    }
    /**
     * @param {?=} options
     * @return {?}
     */
    selectFile(options) {
        return this.getJsBridgeService(this.strategy.selectFile, options);
    }
    /**
     * @param {?} options
     * @return {?}
     */
    downloadFile(options) {
        return this.getJsBridgeService(this.strategy.downloadFile, options);
    }
    /**
     * @param {?=} fn
     * @return {?}
     */
    setOriginGoback(fn) {
        return this.getJsBridgeService(this.strategy.setOriginGoback, fn);
    }
    /**
     * @param {?=} fn
     * @return {?}
     */
    pushOriginGoback(fn) {
        return this.getJsBridgeService(this.strategy.pushOriginGoback, fn);
    }
    /**
     * @param {?=} fn
     * @return {?}
     */
    popOriginGoback(fn) {
        return this.getJsBridgeService(this.strategy.popOriginGoback, fn);
    }
    /**
     * @param {?=} fn
     * @return {?}
     */
    playShortVideo(fn) {
        return this.getJsBridgeService(this.strategy.playShortVideo, fn);
    }
    /**
     * @private
     * @param {?} method
     * @param {...?} values
     * @return {?}
     */
    getJsBridgeService(method, ...values) {
        /** @type {?} */
        const subject = new Subject();
        // 已经存在方法实例即结束返回
        if (window.top['FARRIS_JSBridge'] === '已加载') {
            return method(...values);
        }
        // 判断是否为云上协同环境
        if (window.top['FARRIS_JSBridge'] === '云上协同') {
            if (window.top['iCityBridge']) {
                return method(...values);
            }
            else {
                /** @type {?} */
                var ccwork = window.top.document.createElement("script");
                ccwork.src = 'https://ccwork.oss.cn-north-3.inspurcloudoss.com/h5/ccworkJsbridge.js';
                ccwork.onload = (/**
                 * @return {?}
                 */
                function () {
                    window.top['iCityBridge'].init((/**
                     * @return {?}
                     */
                    () => {
                        method(...values).subscribe((/**
                         * @param {?} e
                         * @return {?}
                         */
                        (e) => { subject.next(e); }));
                    }));
                });
                window.top.document.head.appendChild(ccwork);
            }
        }
        // 当前没有针对云+的判断，前置环境不满足即默认云+环境
        if (window.top['FARRIS_JSBridge'] === '云加') {
            System
                .import('/platform/common/web/imp.js')
                .then((/**
             * @param {?} e
             * @return {?}
             */
            (e) => {
                window.top['FARRIS_JSBridge'] = '已加载';
                method(...values).subscribe((/**
                 * @param {?} e
                 * @return {?}
                 */
                (e) => { subject.next(e); }));
            }));
        }
        return subject;
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    JsBridgeService.prototype.strategy;
    /**
     * @type {?}
     * @private
     */
    JsBridgeService.prototype.jsBridgeStrategyFactory;
}
export { JsBridgeService };
//# sourceMappingURL=data:application/json;base64,