/**
 * @fileoverview added by tsickle
 * Generated from: lib/discussion-group-service/discussion-group.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EMPTY } from 'rxjs';
import { tap } from 'rxjs/operators';
export class DiscussionGroupService {
    /**
     * @param {?} httpSvc
     * @param {?} viewModelContext
     * @param {?} loadingService
     */
    constructor(httpSvc, viewModelContext, loadingService) {
        this.httpSvc = httpSvc;
        this.viewModelContext = viewModelContext;
        this.loadingService = loadingService;
    }
    /**
     * @private
     * @return {?}
     */
    get params() {
        return this['context'] && this['context']['eventParams'] || {};
    }
    /**
     *
     * @param {?=} id 表单id
     * @param {?=} summary 消息描述
     * @param {?=} configId 消息配置id
     * @param {?=} text 评论内容
     * @param {?=} visibility 是否所有人可见(移动暂未支持)
     * @param {?=} parentId 是否是回复信息
     * @return {?}
     */
    addComment(id, summary, configId, text, visibility, parentId) {
        id = id || this.viewModelContext && this.viewModelContext.bindingData.list.currentId || null;
        if (!id) {
            return EMPTY;
        }
        /** @type {?} */
        const url = '/api/runtime/comment/v1.0/bill-comment/comment';
        /** @type {?} */
        const body = this.buildAddCommentParam(id, text, parentId, summary, visibility, configId);
        this.loadingService.show();
        return this.httpSvc.post(url, body, {}).pipe(tap((/**
         * @return {?}
         */
        () => {
            this.loadingService.hide();
        })));
    }
    /**
     * @private
     * @param {?} id
     * @param {?} text
     * @param {?} parentId
     * @param {?} summary
     * @param {?} visibility
     * @param {?} configId
     * @return {?}
     */
    buildAddCommentParam(id, text, parentId, summary, visibility, configId) {
        if (typeof text === 'undefined') {
            text = this.params.text;
        }
        if (typeof parentId === 'undefined') {
            parentId = this.params.replyUser && this.params.replyUser.id;
        }
        if (typeof visibility === 'undefined') {
            visibility = this.params.visibility || 'ALL';
        }
        return {
            'bill': {
                'billId': id,
                'configId': configId,
                'summary': summary
            },
            'comment': {
                'billId': id,
                'configId': configId,
                'parentId': parentId || null,
                'text': text,
                'visibility': visibility
            }
        };
    }
    /**
     *
     * @param {?} id 表单id
     * @param {?} configId 消息配置id
     * @param {?=} pageIndex
     * @param {?=} pageSize
     * @return {?}
     */
    queryComments(id, configId, pageIndex, pageSize) {
        id = id || this.viewModelContext && this.viewModelContext.bindingData.list.currentId || null;
        if (!id) {
            return EMPTY;
        }
        /** @type {?} */
        const url = this.buildQueryCommentsUrl(id, pageIndex, pageSize, configId);
        this.loadingService.show();
        return this.httpSvc.get(url, {}).pipe(tap((/**
         * @param {?} e
         * @return {?}
         */
        (e) => {
            this.loadingService.hide();
            this.viewModelContext.uiState.setPropertyValue('discussionListData', e);
        })));
    }
    /**
     * @private
     * @param {?} id
     * @param {?} pageIndex
     * @param {?} pageSize
     * @param {?} configId
     * @return {?}
     */
    buildQueryCommentsUrl(id, pageIndex, pageSize, configId) {
        if (typeof pageIndex === 'undefined' || pageIndex === null) {
            pageIndex = this.params.pageIndex || 0;
        }
        if (typeof pageSize === 'undefined' || pageSize === null) {
            pageSize = this.params.pageSize || 999;
        }
        return `/api/runtime/comment/v1.0/bill-comment/comment/byBill?configId=${configId}&billId=${id}&pageSize=${pageSize}&pageIndex=${pageIndex}`;
    }
    /**
     * 回复赋值
     * @return {?}
     */
    setReplyUser() {
        this.viewModelContext.uiState.setPropertyValue('replyUser', this.params);
    }
    /**
     * @param {?=} pageIndex
     * @param {?=} pageSize
     * @return {?}
     */
    queryFrequentAtUsers(pageIndex, pageSize) {
        /** @type {?} */
        const params = [];
        params.push(`pageSize=${pageSize || 20}`);
        params.push(`pageIndex=${pageIndex || 0}`);
        /** @type {?} */
        const url = `/api/runtime/comment/v1.0/bill-comment/frequentAtUsers?${params.join('&')}`;
        this.loadingService.show();
        return this.httpSvc.get(url, {}).pipe(tap((/**
         * @param {?} e
         * @return {?}
         */
        (e) => {
            this.loadingService.hide();
            /** @type {?} */
            const personnelsData = {
                pageInfo: {
                    pageSize: e.pageSize,
                    pageIndex: e.pageIndex
                },
                total: e.totalCount,
                items: e.users
            };
            this.viewModelContext.uiState.setPropertyValue('personnelsData', personnelsData);
        })));
    }
    /**
     * @param {?=} user
     * @param {?=} pageIndex
     * @param {?=} pageSize
     * @return {?}
     */
    queryAtUsers(user, pageIndex, pageSize) {
        /** @type {?} */
        const params = [];
        if (user) {
            params.push(`param=${user}`);
        }
        params.push(`pageSize=${pageSize || 100}`);
        params.push(`pageIndex=${pageIndex || 0}`);
        /** @type {?} */
        const url = `/api/runtime/comment/v1.0/bill-comment/atUser?${params.join('&')}`;
        this.loadingService.show();
        return this.httpSvc.get(url, {}).pipe(tap((/**
         * @param {?} e
         * @return {?}
         */
        (e) => {
            this.loadingService.hide();
            /** @type {?} */
            const personnelsData = {
                pageInfo: {
                    pageSize: e.pageSize,
                    pageIndex: e.pageIndex
                },
                total: e.totalCount,
                items: e.users
            };
            this.viewModelContext.uiState.setPropertyValue('personnelsData', personnelsData);
        })));
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    DiscussionGroupService.prototype.httpSvc;
    /**
     * @type {?}
     * @private
     */
    DiscussionGroupService.prototype.viewModelContext;
    /**
     * @type {?}
     * @private
     */
    DiscussionGroupService.prototype.loadingService;
}
//# sourceMappingURL=data:application/json;base64,