/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity-services/entity-traversing.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BindingList } from '@farris/mobile-devkit';
/**
 * 实体遍历服务
 */
class EntityTraversingService {
    /**
     * @param {?} viewModelContext
     */
    constructor(viewModelContext) {
        this.viewModelContext = viewModelContext;
    }
    /**
     * @private
     * @return {?}
     */
    get bindingData() {
        return this.viewModelContext.bindingData;
    }
    /**
     * 获取值
     * @param {?} path
     * @return {?}
     */
    getPropValue(path) {
        return this.bindingData.getValue(path);
    }
    /**
     * 获取实体数据
     * @param {?} path
     * @return {?}
     */
    getEntityData(path) {
        /** @type {?} */
        let bindingObj;
        /** @type {?} */
        const bindingListOrObject = this.bindingData.getValue(path);
        if (bindingListOrObject instanceof BindingList === true) {
            bindingObj = bindingListOrObject.currentItem;
        }
        else {
            bindingObj = bindingListOrObject;
        }
        return bindingObj.toJSON();
    }
    /**
     * 获取实体列表数据
     * @param {?} path
     * @return {?}
     */
    getEntityListData(path) {
        /** @type {?} */
        const bindingList = (/** @type {?} */ (this.bindingData.getValue(path)));
        return bindingList.toJSON();
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    EntityTraversingService.prototype.viewModelContext;
}
export { EntityTraversingService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50aXR5LXRyYXZlcnNpbmcuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvbW9iaWxlLWNvbW1hbmQtc2VydmljZXMvIiwic291cmNlcyI6WyJsaWIvZW50aXR5LXNlcnZpY2VzL2VudGl0eS10cmF2ZXJzaW5nLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQWlDLFdBQVcsRUFBaUIsTUFBTSx1QkFBdUIsQ0FBQzs7OztBQUtsRyxNQUFNLHVCQUF1Qjs7OztJQU0zQixZQUFvQixnQkFBa0M7UUFBbEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtJQUN0RCxDQUFDOzs7OztJQUxELElBQVksV0FBVztRQUNyQixPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUM7SUFDM0MsQ0FBQzs7Ozs7O0lBUU0sWUFBWSxDQUFDLElBQWM7UUFDaEMsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6QyxDQUFDOzs7Ozs7SUFLTSxhQUFhLENBQUMsSUFBYzs7WUFDN0IsVUFBeUI7O2NBQ3ZCLG1CQUFtQixHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQztRQUMzRCxJQUFJLG1CQUFtQixZQUFZLFdBQVcsS0FBSyxJQUFJLEVBQUU7WUFDdkQsVUFBVSxHQUFHLG1CQUFtQixDQUFDLFdBQVcsQ0FBQztTQUM5QzthQUFNO1lBQ0wsVUFBVSxHQUFHLG1CQUFtQixDQUFDO1NBQ2xDO1FBQ0QsT0FBTyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDN0IsQ0FBQzs7Ozs7O0lBS00saUJBQWlCLENBQUMsSUFBYzs7Y0FDL0IsV0FBVyxHQUFHLG1CQUFBLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFlO1FBQ2xFLE9BQU8sV0FBVyxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQzlCLENBQUM7Q0FFRjs7Ozs7O0lBaENhLG1EQUEwQzs7QUFrQ3hELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmlld01vZGVsQ29udGV4dCwgQmluZGluZ0RhdGEsIEJpbmRpbmdMaXN0LCBCaW5kaW5nT2JqZWN0IH0gZnJvbSAnQGZhcnJpcy9tb2JpbGUtZGV2a2l0JztcclxuXHJcbi8qKlxyXG4gKiDlrp7kvZPpgY3ljobmnI3liqFcclxuICovXHJcbmNsYXNzIEVudGl0eVRyYXZlcnNpbmdTZXJ2aWNlIHtcclxuXHJcbiAgcHJpdmF0ZSBnZXQgYmluZGluZ0RhdGEoKTogQmluZGluZ0RhdGEge1xyXG4gICAgcmV0dXJuIHRoaXMudmlld01vZGVsQ29udGV4dC5iaW5kaW5nRGF0YTtcclxuICB9XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgdmlld01vZGVsQ29udGV4dDogVmlld01vZGVsQ29udGV4dCkge1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5YC8XHJcbiAgICovXHJcbiAgcHVibGljIGdldFByb3BWYWx1ZShwYXRoOiBzdHJpbmdbXSk6IGFueSB7XHJcbiAgICByZXR1cm4gdGhpcy5iaW5kaW5nRGF0YS5nZXRWYWx1ZShwYXRoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluWunuS9k+aVsOaNrlxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXRFbnRpdHlEYXRhKHBhdGg6IHN0cmluZ1tdKTogYW55IHtcclxuICAgIGxldCBiaW5kaW5nT2JqOiBCaW5kaW5nT2JqZWN0O1xyXG4gICAgY29uc3QgYmluZGluZ0xpc3RPck9iamVjdCA9IHRoaXMuYmluZGluZ0RhdGEuZ2V0VmFsdWUocGF0aCk7XHJcbiAgICBpZiAoYmluZGluZ0xpc3RPck9iamVjdCBpbnN0YW5jZW9mIEJpbmRpbmdMaXN0ID09PSB0cnVlKSB7XHJcbiAgICAgIGJpbmRpbmdPYmogPSBiaW5kaW5nTGlzdE9yT2JqZWN0LmN1cnJlbnRJdGVtO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYmluZGluZ09iaiA9IGJpbmRpbmdMaXN0T3JPYmplY3Q7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gYmluZGluZ09iai50b0pTT04oKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluWunuS9k+WIl+ihqOaVsOaNrlxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXRFbnRpdHlMaXN0RGF0YShwYXRoOiBzdHJpbmdbXSk6IGFueVtdIHtcclxuICAgIGNvbnN0IGJpbmRpbmdMaXN0ID0gdGhpcy5iaW5kaW5nRGF0YS5nZXRWYWx1ZShwYXRoKSBhcyBCaW5kaW5nTGlzdDtcclxuICAgIHJldHVybiBiaW5kaW5nTGlzdC50b0pTT04oKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgeyBFbnRpdHlUcmF2ZXJzaW5nU2VydmljZSB9O1xyXG4iXX0=