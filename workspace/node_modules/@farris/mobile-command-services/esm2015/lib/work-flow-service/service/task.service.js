/**
 * @fileoverview added by tsickle
 * Generated from: lib/work-flow-service/service/task.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export class TaskService {
    /**
     * @param {?} httpSvc
     */
    constructor(httpSvc) {
        this.httpSvc = httpSvc;
    }
    /**
     * @param {?} error
     * @param {?=} actionCode
     * @return {?}
     */
    error(error, actionCode) {
        if (error && error.error && error.error.Message) {
            /** @type {?} */
            var message = error.error.Message;
            if (actionCode) {
                message = actionCode + "操作失败:" + message;
            }
            return message;
        }
    }
    /**
     * 启动流程预解析
     * @param {?} payload API所需的上下文参数
     * @return {?}
     */
    startProcessSimulate(payload) {
        /** @type {?} */
        const url = `/api/runtime/wf/v1.0/processInstances/startProcess-simulation`;
        return this.httpSvc.post(url, payload, {});
    }
    /**
     * 启动流程接口
     * @param {?} payload API所需的上下文参数
     * @return {?}
     */
    startProcess(payload) {
        /** @type {?} */
        const url = `/api/runtime/wf/v1.0/processInstances/startProcess`;
        return this.httpSvc.post(url, payload, {});
    }
    /**
     * 取消提交
     * @param {?} param 参数
     * @return {?}
     */
    cancelSubmit(param) {
        /** @type {?} */
        const url = `/api/runtime/wf/v1.0/processInstances/cancelSubmit`;
        return this.httpSvc.post(url, param, {});
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    TaskService.prototype.httpSvc;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFzay5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9tb2JpbGUtY29tbWFuZC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbImxpYi93b3JrLWZsb3ctc2VydmljZS9zZXJ2aWNlL3Rhc2suc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQU1BLE1BQU0sT0FBTyxXQUFXOzs7O0lBRXBCLFlBQ1ksT0FBbUI7UUFBbkIsWUFBTyxHQUFQLE9BQU8sQ0FBWTtJQUMzQixDQUFDOzs7Ozs7SUFFTCxLQUFLLENBQUMsS0FBVSxFQUFFLFVBQW1CO1FBQ2pDLElBQUksS0FBSyxJQUFJLEtBQUssQ0FBQyxLQUFLLElBQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUU7O2dCQUN6QyxPQUFPLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPO1lBQ2pDLElBQUksVUFBVSxFQUFFO2dCQUNaLE9BQU8sR0FBRyxVQUFVLEdBQUcsT0FBTyxHQUFHLE9BQU8sQ0FBQzthQUM1QztZQUNELE9BQU8sT0FBTyxDQUFDO1NBQ2xCO0lBQ0wsQ0FBQzs7Ozs7O0lBTUQsb0JBQW9CLENBQUMsT0FBWTs7Y0FDdkIsR0FBRyxHQUFHLCtEQUErRDtRQUMzRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQzs7Ozs7O0lBTUQsWUFBWSxDQUFDLE9BQVk7O2NBQ2YsR0FBRyxHQUFHLG9EQUFvRDtRQUNoRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQzs7Ozs7O0lBTUQsWUFBWSxDQUFDLEtBQTBCOztjQUM3QixHQUFHLEdBQUcsb0RBQW9EO1FBQ2hFLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztJQUM3QyxDQUFDO0NBRUo7Ozs7OztJQXhDTyw4QkFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICdAZmFycmlzL21vYmlsZS1kZXZraXQnO1xyXG5pbXBvcnQgeyBDYW5jZWxTdWJtaXRQYXlsb2FkIH0gZnJvbSAnLi4vZW50aXR5L3N0YXJ0LXByb2Nlc3MtcGF5bG9hZCc7XHJcblxyXG5cclxuXHJcbmV4cG9ydCBjbGFzcyBUYXNrU2VydmljZSB7XHJcblxyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHJpdmF0ZSBodHRwU3ZjOiBIdHRwQ2xpZW50LFxyXG4gICAgKSB7IH1cclxuXHJcbiAgICBlcnJvcihlcnJvcjogYW55LCBhY3Rpb25Db2RlPzogc3RyaW5nKSB7XHJcbiAgICAgICAgaWYgKGVycm9yICYmIGVycm9yLmVycm9yICYmIGVycm9yLmVycm9yLk1lc3NhZ2UpIHtcclxuICAgICAgICAgICAgdmFyIG1lc3NhZ2UgPSBlcnJvci5lcnJvci5NZXNzYWdlO1xyXG4gICAgICAgICAgICBpZiAoYWN0aW9uQ29kZSkge1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZSA9IGFjdGlvbkNvZGUgKyBcIuaTjeS9nOWksei0pTpcIiArIG1lc3NhZ2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIG1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5ZCv5Yqo5rWB56iL6aKE6Kej5p6QXHJcbiAgICAgKiBAcGFyYW0gcGF5bG9hZCBBUEnmiYDpnIDnmoTkuIrkuIvmloflj4LmlbBcclxuICAgICAqL1xyXG4gICAgc3RhcnRQcm9jZXNzU2ltdWxhdGUocGF5bG9hZDogYW55KTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgICAgICBjb25zdCB1cmwgPSBgL2FwaS9ydW50aW1lL3dmL3YxLjAvcHJvY2Vzc0luc3RhbmNlcy9zdGFydFByb2Nlc3Mtc2ltdWxhdGlvbmA7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cFN2Yy5wb3N0KHVybCwgcGF5bG9hZCwge30pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5ZCv5Yqo5rWB56iL5o6l5Y+jXHJcbiAgICAgKiBAcGFyYW0gcGF5bG9hZCBBUEnmiYDpnIDnmoTkuIrkuIvmloflj4LmlbBcclxuICAgICAqL1xyXG4gICAgc3RhcnRQcm9jZXNzKHBheWxvYWQ6IGFueSk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICAgICAgY29uc3QgdXJsID0gYC9hcGkvcnVudGltZS93Zi92MS4wL3Byb2Nlc3NJbnN0YW5jZXMvc3RhcnRQcm9jZXNzYDtcclxuICAgICAgICByZXR1cm4gdGhpcy5odHRwU3ZjLnBvc3QodXJsLCBwYXlsb2FkLCB7fSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlj5bmtojmj5DkuqRcclxuICAgICAqIEBwYXJhbSBwYXJhbSDlj4LmlbBcclxuICAgICAqL1xyXG4gICAgY2FuY2VsU3VibWl0KHBhcmFtOiBDYW5jZWxTdWJtaXRQYXlsb2FkKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgICAgICBjb25zdCB1cmwgPSBgL2FwaS9ydW50aW1lL3dmL3YxLjAvcHJvY2Vzc0luc3RhbmNlcy9jYW5jZWxTdWJtaXRgO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmh0dHBTdmMucG9zdCh1cmwsIHBhcmFtLCB7fSk7XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==