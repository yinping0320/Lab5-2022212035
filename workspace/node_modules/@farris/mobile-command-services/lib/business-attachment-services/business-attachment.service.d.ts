import { Observable } from 'rxjs';
import { ViewModelContext } from '@farris/mobile-devkit';
import { BusinessAttachmentDataService } from './business-attachment-data.service';
import { EntityService } from '../entity-services/index';
import { RemoveDataService } from '../data-services/remove-data.service';
/**
 * 附件服务
 */
declare class BusinessAttachmentService {
    /**
     * 默认根目录
     */
    private defaultRootDirId;
    /**
     * 默认子目录
     */
    private readonly defaultParentDirName;
    /**
     * 视图模型
     */
    private viewModelContext;
    /**
     * 附件数据服务
     */
    private attachDataService;
    /**
     * 实体服务
     */
    private entityService;
    /**
     * 实体服务
     */
    private removeDataService;
    /**
     * 构造函数
     */
    constructor(viewModelContext: ViewModelContext, entityService: EntityService, removeDataService: RemoveDataService, attachDataService: BusinessAttachmentDataService);
    /**
     * 获取列表数据
     */
    loadAttachmentRows(url: string, filters: any[], sorts: any[]): Observable<any>;
    private waitForBeSession;
    /**
     * 同步变更
     */
    syncAttachmentRowChanges(url: string): Observable<any>;
    /**
     * 上传单个文件
     * @param attachmentIdPath 附件内码字段的路径，形如/attachInfo/attachmentId；
     * @param attachmentNamePath 附件名称字段的路径
     */
    uploadAndUpdateRow(attachmentInfoFieldPath: string, rootDirId?: string, parentDirName?: string): Observable<any>;
    /**
     * 上传多个文件
     */
    uploadAndBatchAddRows(url: string, attachmentInfoFieldPath: string): Observable<any>;
    /**
     * 批量删除附件所在的行
     */
    removeAttachmentRows(url: string, attachmentInfoFieldPath: string): Observable<any>;
    /**
     * 从上下文中中获取控件传递的附件信息
     */
    private getUploadFileInfosFromContext;
    /**
     * 获取要删除的附件对应的数据id数组
     */
    getDataIdsToRemove(context: any, attachmentInfoFieldPath: string): string[];
    /**
     * 从命令上下文中获取要删除附件ids
     */
    getAttachmentIdsToRemoveFromContext(): any;
    /**
     * 根据路径获取附件字段值数组
     * @param fieldPath 字段路径
     */
    private convertAttachmentIdToDataId;
    /**
     * 获取带附件的BindingList的Path
     */
    private getBindingListPathWithAttachments;
    /**
     * 获取附件组件上下文
     */
    private getAttachContext;
}
export { BusinessAttachmentService };
