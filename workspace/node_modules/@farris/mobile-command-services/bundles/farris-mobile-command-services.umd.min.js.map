{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@farris/mobile-command-services/lib/base.service.ts","ng://@farris/mobile-command-services/lib/ui-services/loading.service.ts","ng://@farris/mobile-command-services/lib/ui-services/toast.service.ts","ng://@farris/mobile-command-services/lib/ui-services/notify.service.ts","ng://@farris/mobile-command-services/lib/ui-services/dialog.service.ts","ng://@farris/mobile-command-services/lib/ui-services/attachment-preview.service.ts","ng://@farris/mobile-command-services/lib/entity-services/entity-traversing.service.ts","ng://@farris/mobile-command-services/lib/entity-services/entity-manipulation.service.ts","ng://@farris/mobile-command-services/lib/entity-services/entity-aggregation.service.ts","ng://@farris/mobile-command-services/lib/entity-services/entity-list.service.ts","ng://@farris/mobile-command-services/lib/entity-services/entity.service.ts","ng://@farris/mobile-command-services/lib/exception-services/http.ts","ng://@farris/mobile-command-services/lib/exception-services/exception.servcie.ts","ng://@farris/mobile-command-services/lib/data-services/base-data.service.ts","ng://@farris/mobile-command-services/lib/data-services/data-util.ts","ng://@farris/mobile-command-services/lib/data-services/load-data.service.ts","ng://@farris/mobile-command-services/lib/data-services/create-data.service.ts","ng://@farris/mobile-command-services/lib/data-services/edit-data.service.ts","ng://@farris/mobile-command-services/lib/data-services/update-data.service.ts","ng://@farris/mobile-command-services/lib/data-services/remove-data.service.ts","ng://@farris/mobile-command-services/lib/data-services/save-data.service.ts","ng://@farris/mobile-command-services/lib/data-services/cancel-data.service.ts","ng://@farris/mobile-command-services/lib/data-services/be-action.service.ts","ng://@farris/mobile-command-services/lib/data-services/approve.service.ts","ng://@farris/mobile-command-services/lib/data-services/check-data.service.ts","ng://@farris/mobile-command-services/lib/router.servcie.ts","ng://@farris/mobile-command-services/lib/validator-services/validator.service.ts","ng://@farris/mobile-command-services/lib/js-bridge-service/ccwork-service.ts","ng://@farris/mobile-command-services/lib/js-bridge-service/cloud-plus-service.ts","ng://@farris/mobile-command-services/lib/js-bridge-service/js-bridge-strategy-factory.ts","ng://@farris/mobile-command-services/lib/js-bridge-service/js-bridge-stratege.ts","ng://@farris/mobile-command-services/lib/history-back.service.ts","ng://@farris/mobile-command-services/lib/command.service.ts","ng://@farris/mobile-command-services/lib/state-machine.service.ts","ng://@farris/mobile-command-services/lib/ui-state.service.ts","ng://@farris/mobile-command-services/lib/vo-variable.service.ts","ng://@farris/mobile-command-services/lib/attachment-services/attachment.util.ts","ng://@farris/mobile-command-services/lib/attachment-services/attachment-data.service.ts","ng://@farris/mobile-command-services/lib/attachment-services/attachment.service.ts","ng://@farris/mobile-command-services/lib/ccwork-service/ccwork.service.ts","ng://@farris/mobile-command-services/lib/map-services/map.service.ts","ng://@farris/mobile-command-services/lib/business-attachment-services/business-attachment.util.ts","ng://@farris/mobile-command-services/lib/business-attachment-services/business-attachment-data.service.ts","ng://@farris/mobile-command-services/lib/business-attachment-services/business-attachment.service.ts","ng://@farris/mobile-command-services/lib/discussion-group-service/discussion-group.service.ts","ng://@farris/mobile-command-services/lib/work-flow-service/service/task.service.ts","ng://@farris/mobile-command-services/lib/work-flow-service/entity/start-process-payload.ts","ng://@farris/mobile-command-services/lib/work-flow-service/submit/process-selector-vue/process-selector.service.ts","ng://@farris/mobile-command-services/lib/work-flow-service/wf-task-handler.service.ts","ng://@farris/mobile-command-services/lib/providers.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","BaseService","viewModelContext","getService","token","injector","get","LoadingService","registerService","show","message","options","Loading","hide","services","window","ToastService","info","Toast","success","warning","NotifyService","Notify","duration","DialogService","alert","promise$","Promise","resolve","reject","Dialog","title","cancelText","confirmText","onConfirm","onCancel","from","confirm","confirmResult$","confirmPromise","prompt","vm","$data","promptText","onShow","console","log","AttachmentPreviewService","AttachmentPreview","EntityTraversingService","defineProperty","bindingData","getPropValue","path","getValue","getEntityData","bindingListOrObject","BindingList","currentItem","toJSON","getEntityListData","EntityManipulationService","setPropValue","setValue","EntityAggregationService","traversingService","count","splitedPath","splitPath","listPath","sum","_this","reduce","accTotal","entityData","propValue","parseFloat","propPath","isNaN","avg","total","max","accMax","min","accMin","currentData","forEach","pathItem","currentNode","propPathItem","pop","unshift","EntityService","manipulationService","aggregationService","HttpStatusType","Info","Success","Redirect","ClientError","ServerError","HttpUtil","getHttpStatusType","httpResponseSatus","statusType","ExceptionService","notifyService","jsBridgeService","exception","indexOf","setTimeout","closeWindow","response","httpErrorHandler","httpError","status","httpErrorInClient","httpErrorInServer","Error","data","JSON","parse","Level","undefined","getNotifyServiceMethodName","Message","url","config","exceptionLevel","BaseDataService","init","initServices","loadingService","toastService","dialogService","exceptionService","entityService","befRepository","DataUtil","convertBindingPathToEntityPath","bindingPath","list","currentId","subPaths","split","index","subPath","subData","clearFromValidateType","contextsChild","appContext","viewModelContextManager","getContexts","filter","item","parent","id","form","resetFieldsValidate","stringTransformArray","parame","parameIsThreeBoss","LoadDataService","_super","tslib_1.__extends","loadForList","filters","sorts","size","_a","repository","paginationInfo","pageSize","pageIndex","entityCollection","clear","getEntities","pipe","tap","pageCount","totalCount","eventBus","triggerEvent","type","loadForCard","getEntityById","loadDataForChildCard","childID","childEntityData","uiState","setPropertyValue","CreateDataService","createEntity","createByPath","entityPath","appendEntityByPath","child","EditDataService","edit","editEntityById","UpdateDataService","update","updateEntityById","RemoveDataService","removeById","switchMap","val","EMPTY","eventParams","swipecellClose","cancelChanges","removeEntityAndSaveById","removeByIds","ids","selectedItems","map","selectedItem","removeEntitiesByIds","removeByPathAndId","removeByPathAndIdChanges","removeEntityByPath","removeByPathAndIds","removeByBusinessIds","requestConfig","params","join","body","dataChange","variableChange","apiProxy","request","HttpMethods","PUT","removeByBusinessPathAndId","ClearStatusAfterchildCardSave","of","SaveDataService","save","saveEntities","saveByPath","currentRootId","CancelDataService","cancel","cancelEntityChanges","BeActionService","invokeAction","actionUrl","httpMethod","httpHeaders","innerInvokeAction","method","headers","fullActionUrl","baseUrl","ApproveService","wfTaskHandlerService","submitApproveWithBizDefKeyUseControl","bizBillID","bizDefKey","variables","payload","dataId","startsWith","endsWith","startProcess","cancelSubmit","procInstId","submitWithBizDefKey","cancelSubmitWithDataId","batchSubmitWithBizDefKey","dataIds","batchCancelSubmitWithDataId","childSubmit","parentDataId","childDataId","childCancelSubmit","childBatchSubmit","childDataIds","childBatchCancelSubmit","CheckDataService","checkChangesBeforeLeave","BefRepositoryUtil","isExistUnsaveData","ifLeave","associatedUrlMap","urls","keys","POST","checkChangesBeforeLeaveChild","childId","childPath","currentChild","childPath_1","checkForVariationBetweenTheTwo","newData","oldData","childKeys","isChanged","toString","stringify","checkChangesBeforeLeaveAddOrEditChild","load","RouterService","router","navigate","queryParams","backParams","backPath","ParamsFromStringToObject","pathIndex","sessionStorageSaveHistory","urlPath","splicePath","location","href","reflushOriginGoback","query","removeParams","end","search","slice","getsessionStorageSaveHistoryKey","history","base","key","historyObject","routerWay","sessionStorage","setItem","currentPath","currentRoute","navigateForRtc","metadataId","rtcOptions","withDims","dim1","dim2","correctRtcOptions","correctedRtcOptions","getExtendPath","extendedPath","subscribe","isRootMetadata","HttpClient","post","result","arrPath","append","toLowerCase","element","navigateReplace","replace","goBack","need_go_back","getItem","top","pathname","mappingToUIState","routerState","ValidatorServices","validateFields","viewModelId","getContextById","handleValidateFields","validateFieldsResults","getRootContextAndPosterityById","context","zip","findIndex","getFieldError","name","fields","CCworkService","callback","takePhoto","quality","subject","Subject","ccworkGetPicsFromCameraAndAlbum","scanQRCode","ccworkScanCode","getSysInfo","getLocation","ccworkGetLocation","selectFile","sendSMS","number","content","numbers","ccworkSendSms","openSendSMS","tel","msg","ringUp","selectPictureFromAlbum","maxNum","mType","ccworkGetPicsFromAlbum","takeVideo","ccworkTakeShortVideo","time","closeWebView","setTitles","setTitle","downloadFile","setOriginGoback","fn","ccworkInterceptOriginGoback","pushOriginGoback","gobackFn","back","popOriginGoback","playShortVideo","opt","ccworkPlayShortVideo","CloudPlusService","encodingType","targetWidth","targetHeight","iCamera","open","iBarCode","scan","iGps","getInfo","latitude","longitude","addr","city","country","district","province","street","streetNum","lat","lng","iDevice","sysInfo","iSms","send","iTel","dial","defaults","num","destinationType","select","originalData","selectFileFromMobile","maximum","fileType","getBase64","iFile","paths_1","count_1","dataItem","bs64","base64","errorMsg","option","iVideo","record","iWindow","close","document","download","isAGreaterThanB","parameA","parameB","parseInt","setFunction","onBackKeyDown2","currentVersion","minVersion","onTitleBackKeyDown2","cancelBackKeyDown","cancelTitleBackKeyDown","newVersion","appVersion","OriginGoback","JsBridgeStrategyFactory","navigator","userAgent","JsBridgeService","jsBridgeStrategyFactory","getJsBridgeService","strategy","values","_i","ccwork","createElement","src","onload","head","appendChild","System","import","then","HistoryBackService","proxyBack","hash","CommandService","execute","commandName","toLocaleLowerCase","viewModel","StateMachineService","executeAction","action","stateMachine","VoVariableService","variableManager","AttachmentUtil","convertToAttachmentInfos","fileInfos","fileInfo","convertToAttachmentInfo","attachmentId","fileName","getFirstAttachmentInfo","attachmentInfos","peekAttachmentIds","attachmentInfo","AttachmentDataService","updateRow","attachmentInfoFieldPath","updateUrl","updateAttachInfo","createUpdateAttachInfo","syncAttachmentInfosToClient","updateRows","serverAttachInfo","createBatchCreateAttachInfo","isRootEntity","NodeCodes","batchUploadInfo","appendAttachmentInfosToClient","parentBindingPathArray","BindingPathConverter","toBindingPathArray","BefDataPathUtil","convertToObjectCodes","HiretryIds","convertToDataIdsForUpdate","AttachmentIds","AttachmentId","attachmentIds","convertToDataIdsForAdd","rootDataId","listData","entities","buildEntities","addEntities","dataChangeHistory","addChange","changeType","DataChangeType","Add","AttachmentService","removeDataService","attachDataService","defaultRootDirId","uploadAndUpdateRow","rootDirId","parentDirName","rootId","formId","defaultParentDirName","getUploadFileInfosFromContext","firstAttachmentInfo","uploadAndBatchAddRows","removeAttachmentRows","getDataIdsToRemove","removeObservables_1","bindingListPath_1","getBindingListPathWithAttachments","removeObservable","forkJoin","uploadFileInfos","attachIds","getAttachmentIdsToRemoveFromContext","attachId","convertAttachmentIdToDataId","fileId","attachInfoBindingPath","attachFieldName","attachListBindingPath","find","CcWorkService","closeCcWorkWebView","hideCcWorkNaviBar","hideTitleBar","callBack","scanCode","paramsObj","callPhone","phoneNumber","ccworkCallPhone","getPicsFromCameraAndAlbum","MapService","getStaticMap","zoom","width","height","markers","markersStr","longtitude","markerSize","markerColor","substring","longitudeStr","latitudeStr","toFixed","getChangeDetails","oldListData","newListData","changeDetails","changeDetail","getChangeDetail","ChangeType","ChangeDetailType","Modify","ChangeInfo","DataId","propName","oldValue","newValue","BusinessAttachmentDataService","getAllBeSessions","beSessionsJson","frmSessionId","getUserSessionId","localStorage","handleRequestHeaders","beSessionId","appendHeader","extendQueryData","entityFilter","FilterConditions","SortConditions","IsUsePagination","Pagination","PageIndex","PageSize","PageCount","TotalCount","befReposi","BusinessAttachmentService","loadAttachmentRows","attachContext","getAttachContext","sessionService","entityFilterString","setAssociatedUrl","waitForBeSession","extendRequestHeaders","httpClient","attachListData","returnValue","setData","updateData","getBeSessionExisted","beSessionExisted","take","syncAttachmentRowChanges","getData","commandContext","uploadUrl","appendData","fPath","removeUrl","removeDataById","Delete","DiscussionGroupService","httpSvc","addComment","summary","configId","text","visibility","parentId","buildAddCommentParam","replyUser","bill","billId","comment","queryComments","buildQueryCommentsUrl","setReplyUser","queryFrequentAtUsers","personnelsData","pageInfo","items","users","queryAtUsers","user","TaskService","actionCode","startProcessSimulate","param","FlowNodeInfo","CancelSubmitPayload","ProcessSelectorService","taskService","processPlaceholder","assignInfos","selectedValues","StartProcessPayload","processReadOnly","nodeReadOnly","setParam","processDefinitionId","processDefinitionKey","dataModelId","startUserId","nextFlowNodes","destProcesses","procDefs","process","procDefId","procDefName","selectedProcessId","SubmitApprove","processData","processOc","selectProcessChange","bind","processReadFlag","processHolder","nextNodeReadFlag","submit","setNextNode","clearHelp","clearNode","getsimulationPathsIndexData","destNodes","selectNodeChange","clearAssignInfos","selectedNodeId","nextNode","simulationPaths","nodeInfoList","every","node","resolved","setAssignInfo","payload_1","nodeId","nextFlowNode","activityDefinitionId","activityDefinitionName","defaultIndex","a","default","nodePlaceholder","nextNodeOc","nextNodeData","nextNodeHolder","selectedAssignees","assigneeReadFlag","assignee_1","assigneeHolder","anonymous","anonymousText","label","assignee","assigneeInfo","assigneeUsers","assignees","activityName","dependency","assigneeOc","clearProcess","nodes","getSubject","asObservable","WfTaskHandlerService","processSelectorService","re","startProcessPayload","cancelSubmitPayload","startPayload","successNum","failedNum","simulate","showBatchSubmitInfo","COMMAND_SERVICES_APP_PROVIDERS","provide","useClass","deps","BE_ERROR_HANDLER__TOKEN","COMMAND_SERVICES_VIEWMODEL_PROVIDERS","ViewModelContext","UIStateService","EntityListService"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ViewModelContext } from '@farris/mobile-devkit';\r\n\r\n/**\r\n * 数据服务基类\r\n */\r\nclass BaseService {\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(protected viewModelContext: ViewModelContext) {\r\n  }\r\n\r\n  /**\r\n   * 获取服务实例\r\n   */\r\n  getService<T>(token: any): T {\r\n    const injector = this.viewModelContext.injector;\r\n    return injector.get<T>(token);\r\n  }\r\n\r\n}\r\n\r\nexport { BaseService };\r\n","import { Loading } from '@farris/mobile-ui';\r\n\r\nexport class LoadingService {\r\n\r\n    constructor() {\r\n        this.registerService();\r\n    }\r\n\r\n    /**\r\n     * 显示Loading\r\n     */\r\n    show(message?: string, options?: any): void {\r\n        (Loading as any).show(message, options);\r\n    }\r\n\r\n    /**\r\n     * 隐藏Loading\r\n     */\r\n    hide(): void {\r\n        (Loading as any).hide();\r\n    }\r\n    \r\n    /**\r\n     * 注册所有的LoadingService实例\r\n     */\r\n    private registerService() {\r\n        const services: any[] = window['DEVKIT_LOADING_SERVICE'] || [];\r\n        services.push(this);\r\n        window['DEVKIT_LOADING_SERVICE'] = services;\r\n    }\r\n\r\n\r\n}\r\n","import { Toast } from '@farris/mobile-ui';\r\n\r\n/**\r\n * 轻提示服务\r\n */\r\nclass ToastService {\r\n  /**\r\n   * 消息提示\r\n   */\r\n  info(message: string, options?: any): void {\r\n    (Toast as any).info(message, options);\r\n  }\r\n\r\n  /**\r\n   * 成功提示\r\n   */\r\n  success(message: string, options?: any): void {\r\n    (Toast as any).success(message, options);\r\n  }\r\n\r\n  /**\r\n   * 警告提示\r\n   */\r\n  warning(message: string, options?: any): void {\r\n    (Toast as any).warning(message, options);\r\n  }\r\n\r\n  /**\r\n   * 失败提示\r\n   */\r\n  error(message: string, options?: any): void {\r\n    (Toast as any).error(message, options);\r\n  }\r\n  /**\r\n   * 自定义提示\r\n   */\r\n  show(options?: any) {\r\n    (Toast as any)(options);\r\n  }\r\n}\r\nexport { ToastService };\r\n","import { Notify } from '@farris/mobile-ui';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\n\r\n/**\r\n * 消息提示服务\r\n * @summary\r\n * 页面边缘滑出，自动消失，语气略强于Toast\r\n */\r\nexport class NotifyService {\r\n\r\n    /**\r\n     * 消息提示\r\n     */\r\n    info(message: string, options?: any): void {\r\n        (Notify as any).info(message, { duration : 1500, ...options });\r\n    }\r\n\r\n    /**\r\n     * 成功提示\r\n     */\r\n    success(message: string, options?: any): void {\r\n      (Notify as any).success(message, { duration : 1000, ...options });\r\n    }\r\n\r\n    /**\r\n     * 警告提示\r\n     */\r\n    warning(message: string, options?: any): void {\r\n      (Notify as any).warning(message, { duration : 1500, ...options });\r\n    }\r\n\r\n    /**\r\n     * 失败提示\r\n     */\r\n    error(message: string, options?: any): void {\r\n      (Notify as any).error(message, { duration : 1500, ...options });\r\n    }\r\n\r\n    /**\r\n     * 自定义提醒\r\n     */\r\n    show(options: any) {\r\n      (Notify as any).show(options);\r\n    }\r\n}\r\n","import { Observable, from, EMPTY } from 'rxjs';\r\nimport { Dialog } from '@farris/mobile-ui';\r\n\r\nclass DialogService {\r\n\r\n  /**\r\n   * 提示对话框\r\n   * @summary\r\n   * type=info|success|warning|error\r\n   */\r\n  alert(message: string, options?: any): Observable<boolean> {\r\n    const promise$: Promise<boolean> = new Promise((resolve, reject) => {\r\n      Dialog.alert({\r\n        title: '提醒',\r\n        message: message,\r\n        cancelText: '取消',\r\n        confirmText: '确定',\r\n        onConfirm: () => { resolve(true) },\r\n        onCancel: () => { resolve(false) },\r\n        ...options\r\n      });\r\n    });\r\n    return from(promise$);\r\n  }\r\n\r\n  /**\r\n   * 确认框对话框\r\n   */\r\n  confirm(message: string): Observable<boolean> {\r\n    const confirmResult$: Promise<boolean> = this.confirmPromise(message);\r\n    return from(confirmResult$);\r\n  }\r\n\r\n  /**\r\n   * 自定义弹窗\r\n   */\r\n  show(options: any): void {\r\n    this.confirmPromise(options);\r\n  }\r\n\r\n  /**\r\n   * 输入对话框\r\n   * @param title 标题\r\n   * @param options 配置信息\r\n   */\r\n  prompt(title: string, options?: any): Observable<string> {\r\n    const promise$: Promise<string> = new Promise((resolve, reject) => {\r\n      const vm = Dialog.prompt({\r\n        title: title,\r\n        confirmText: '确定',\r\n        onConfirm: () => {\r\n          resolve(vm.$data.promptText);\r\n        },\r\n        onCancel: () => { resolve('取消'); },\r\n        onShow: () => {\r\n          console.log('显示弹窗');\r\n        },\r\n        ...options\r\n      });\r\n    });\r\n    return from(promise$);\r\n  }\r\n\r\n  /**\r\n   * 使用Promise实例包装回调方法，以同步回调方法执行后结果\r\n   */\r\n  private confirmPromise(message?: string): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      Dialog.confirm({\r\n        message: message,\r\n        onConfirm: () => { resolve(true); },\r\n        onCancel: () => { resolve(false); },\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\nexport { DialogService };\r\n","import { AttachmentPreview } from '@farris/mobile-business-ui';\r\nclass AttachmentPreviewService {\r\n    /**\r\n     * 自定义弹窗\r\n     */\r\n    show(options: IPreview): void {\r\n        AttachmentPreview.show(options);\r\n    }\r\n}\r\n\r\ninterface IPreview {\r\n    title: string;\r\n    attachmentId?: string;\r\n    rootId?: string;\r\n    path?: string;\r\n}\r\n\r\nexport { AttachmentPreviewService };\r\n","import { ViewModelContext, BindingData, BindingList, BindingObject } from '@farris/mobile-devkit';\r\n\r\n/**\r\n * 实体遍历服务\r\n */\r\nclass EntityTraversingService {\r\n\r\n  private get bindingData(): BindingData {\r\n    return this.viewModelContext.bindingData;\r\n  }\r\n\r\n  constructor(private viewModelContext: ViewModelContext) {\r\n  }\r\n\r\n  /**\r\n   * 获取值\r\n   */\r\n  public getPropValue(path: string[]): any {\r\n    return this.bindingData.getValue(path);\r\n  }\r\n\r\n  /**\r\n   * 获取实体数据\r\n   */\r\n  public getEntityData(path: string[]): any {\r\n    let bindingObj: BindingObject;\r\n    const bindingListOrObject = this.bindingData.getValue(path);\r\n    if (bindingListOrObject instanceof BindingList === true) {\r\n      bindingObj = bindingListOrObject.currentItem;\r\n    } else {\r\n      bindingObj = bindingListOrObject;\r\n    }\r\n    return bindingObj.toJSON();\r\n  }\r\n\r\n  /**\r\n   * 获取实体列表数据\r\n   */\r\n  public getEntityListData(path: string[]): any[] {\r\n    const bindingList = this.bindingData.getValue(path) as BindingList;\r\n    return bindingList.toJSON();\r\n  }\r\n\r\n}\r\n\r\nexport { EntityTraversingService };\r\n","import { ViewModelContext, BindingData } from '@farris/mobile-devkit';\r\n\r\nclass EntityManipulationService {\r\n\r\n  private get bindingData(): BindingData {\r\n    return this.viewModelContext.bindingData;\r\n  }\r\n\r\n  constructor(private viewModelContext: ViewModelContext) {\r\n  }\r\n\r\n  /**\r\n   * 设置path对应的字段值\r\n   */\r\n  public setPropValue(path: string[], value: any): any {\r\n\r\n    // 实体层还没有封装，临时用BindingData相关方法代替\r\n    this.bindingData.setValue(path, value, true, true);\r\n  }\r\n\r\n}\r\n\r\nexport { EntityManipulationService };\r\n","import { ViewModelContext, BindingData, BindingList } from '@farris/mobile-devkit';\r\nimport { EntityTraversingService } from './entity-traversing.service';\r\n\r\ninterface SplitedPath {\r\n  listPath: string[];\r\n  propPath: string[];\r\n}\r\n\r\n/**\r\n * 实体聚合服务\r\n */\r\nclass EntityAggregationService {\r\n\r\n  private get bindingData(): BindingData {\r\n    return this.viewModelContext.bindingData;\r\n  }\r\n\r\n  private traversingService: EntityTraversingService;\r\n\r\n  constructor(private viewModelContext: ViewModelContext) {\r\n    this.traversingService   = this.viewModelContext.injector.get<EntityTraversingService>(EntityTraversingService);\r\n  }\r\n\r\n  /**\r\n   * 获取path对应列表记录的条数\r\n   */\r\n  public count(path: string[]): number {\r\n    const splitedPath = this.splitPath(path);\r\n    const entityListData = this.traversingService.getEntityListData(splitedPath.listPath);\r\n    return entityListData.length;\r\n  }\r\n\r\n  /**\r\n   * 获取path对应字段的和\r\n   */\r\n  public sum(path: string[]) {\r\n    const splitedPath = this.splitPath(path);\r\n    const entityListData = this.traversingService.getEntityListData(splitedPath.listPath);\r\n\r\n    const total = entityListData.reduce((accTotal: number, entityData: any) => {\r\n      let propValue = parseFloat(this.getPropValue(entityData, splitedPath.propPath));\r\n      propValue = isNaN(propValue) ? 0 : propValue;\r\n      accTotal += propValue;\r\n      return accTotal;\r\n    }, 0);\r\n    return total;\r\n  }\r\n\r\n  /**\r\n   * 获取path对应字段的平均值\r\n   */\r\n  public avg(path: string[]) {\r\n    const count = this.count(path);\r\n    const total = this.sum(path);\r\n    return count !== 0 ? total / count : 0;\r\n  }\r\n\r\n  /**\r\n   * 获取path对应字段的最大值\r\n   */\r\n  public max(path: string[]): number {\r\n    const splitedPath = this.splitPath(path);\r\n    const entityListData = this.traversingService.getEntityListData(splitedPath.listPath);\r\n\r\n    const max =  entityListData.reduce((accMax: number, entityData: any) => {\r\n      const propValue = parseFloat(this.getPropValue(entityData, splitedPath.propPath));\r\n      if (isNaN(propValue) === false && ( !accMax || propValue > accMax)) {\r\n        accMax = propValue;\r\n      }\r\n      return accMax;\r\n    }, null);\r\n    return max ? max : 0;\r\n  }\r\n\r\n  /**\r\n   * 获取path对应字段的最小值\r\n   */\r\n  public min(path: string[]): number {\r\n    const splitedPath = this.splitPath(path);\r\n    const entityListData = this.traversingService.getEntityListData(splitedPath.listPath);\r\n\r\n    const min = entityListData.reduce((accMin: number, entityData: any) => {\r\n      const propValue = parseFloat(this.getPropValue(entityData, splitedPath.propPath));\r\n      if (isNaN(propValue) === false && ( !accMin || propValue < accMin)) {\r\n        accMin = propValue;\r\n      }\r\n      return accMin;\r\n    }, null);\r\n    return min ? min : 0;\r\n  }\r\n\r\n  /**\r\n   * 获取属性值\r\n   */\r\n  private getPropValue(entityData: any, path: string[]) {\r\n    let currentData = entityData;\r\n    path.forEach((pathItem: string) => {\r\n\r\n      // 提前退出的都重置为null，主要针对关联对象未赋值场景\r\n      if (!currentData) {\r\n        currentData = null;\r\n        return;\r\n      }\r\n      currentData = currentData[pathItem];\r\n    });\r\n\r\n    return currentData;\r\n  }\r\n\r\n  /**\r\n   * 分隔路径，分隔符列表路径和属性路径\r\n   * @return 形如 {parentListPath: [], propertyPath: []}\r\n   */\r\n  private splitPath(path: string[]): SplitedPath {\r\n    const listPath = path.concat([]);\r\n    const propPath = [];\r\n    let currentNode = this.bindingData.getValue(listPath);\r\n    while (currentNode instanceof BindingList !== true) {\r\n      const propPathItem = listPath.pop();\r\n      if (!propPathItem) {\r\n        return;\r\n      }\r\n      propPath.unshift(propPathItem);\r\n      currentNode = this.bindingData.getValue(listPath);\r\n    }\r\n\r\n    return {\r\n      listPath: listPath,\r\n      propPath: propPath\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport { EntityAggregationService };\r\n","import { ViewModelContext } from '@farris/mobile-devkit';\r\n\r\n/**\r\n * EntityList服务\r\n * @scope FrameComponent\r\n */\r\nclass EntityListService {\r\n\r\n  constructor(private viewModelContext: ViewModelContext) {}\r\n\r\n}\r\n\r\nexport { EntityListService };\r\n","import { ViewModelContext } from '@farris/mobile-devkit';\r\nimport { EntityTraversingService } from './entity-traversing.service';\r\nimport { EntityManipulationService } from './entity-manipulation.service';\r\nimport { EntityAggregationService} from './entity-aggregation.service';\r\n\r\n/**\r\n * 实体服务\r\n * @scope FrameComponent\r\n */\r\nclass EntityService {\r\n\r\n  private traversingService: EntityTraversingService;\r\n\r\n  private manipulationService: EntityManipulationService;\r\n\r\n  private aggregationService: EntityAggregationService;\r\n\r\n  private viewModelContext: ViewModelContext;\r\n\r\n  constructor(viewModelContext: ViewModelContext) {\r\n    this.viewModelContext    = viewModelContext;\r\n    this.traversingService   = new EntityTraversingService(viewModelContext);\r\n    this.manipulationService = new EntityManipulationService(viewModelContext);\r\n    this.aggregationService  = new EntityAggregationService(viewModelContext);\r\n  }\r\n\r\n  /**\r\n   * 获取path对应的属性值\r\n   */\r\n  public getPropValue(path: string[]): any {\r\n    return this.traversingService.getPropValue(path);\r\n  }\r\n\r\n  /**\r\n   * 设置path对应的属性值\r\n   */\r\n  public setPropValue(path: string[], value: any): void {\r\n    return this.manipulationService.setPropValue(path, value);\r\n  }\r\n\r\n  /**\r\n   * 设置path对应的Entity数据\r\n   */\r\n  public getEntityData(path: string[]): any {\r\n    return this.traversingService.getEntityData(path);\r\n  }\r\n\r\n  /**\r\n   * 设置path对应的EntityList数据\r\n   */\r\n  public getEntityListData(path: string[]): any {\r\n    return this.traversingService.getEntityListData(path);\r\n  }\r\n\r\n  /**\r\n   * 获取path对应EntityList记录数\r\n   */\r\n  public count(path: string[]): number {\r\n    return this.aggregationService.count(path);\r\n  }\r\n\r\n  /**\r\n   * 获取path对应属性的合计值\r\n   */\r\n  public sum(path: string[]): number {\r\n    return this.aggregationService.sum(path);\r\n  }\r\n\r\n  /**\r\n   * 获取path对应属性的平均值\r\n   */\r\n  public avg(path: string[]): number {\r\n    return this.aggregationService.avg(path);\r\n  }\r\n\r\n  /**\r\n   * 获取path对应属性的最大值\r\n   */\r\n  public max(path: string[]): number {\r\n    return this.aggregationService.max(path);\r\n  }\r\n\r\n  /**\r\n   * 获取path对应属性的最小值\r\n   */\r\n  public min(path: string[]): number {\r\n    return this.aggregationService.min(path);\r\n  }\r\n}\r\n\r\nexport { EntityService };\r\n","// https://github.com/typeslick/status-code-enum\r\nenum HttpStatusType {\r\n    Info = 1,\r\n    Success,\r\n    Redirect,\r\n    ClientError,\r\n    ServerError\r\n}\r\n\r\n/**\r\n * http通用类\r\n */\r\nclass HttpUtil {\r\n\r\n    /**\r\n     * 基于http状态码返回状态类型\r\n     * @param httpResponseSatus http请求返回状态码\r\n     * @returns null | HttpStatusType\r\n     */\r\n    public static getHttpStatusType(httpResponseSatus: number): any {\r\n        if (!httpResponseSatus) {\r\n            return null;\r\n        }\r\n        \r\n        let statusType = null; // 默认值为空\r\n        \r\n        if (httpResponseSatus < 100 || httpResponseSatus > 600) {\r\n            statusType = null; // 不合理状态码\r\n        } else if (httpResponseSatus >= 100 && httpResponseSatus < 200) {\r\n            statusType = HttpStatusType.Info;\r\n        } else if (httpResponseSatus >= 200 && httpResponseSatus < 300) {\r\n            statusType = HttpStatusType.Success;\r\n        } else if (httpResponseSatus >= 300 && httpResponseSatus < 400) {\r\n            statusType = HttpStatusType.Redirect;\r\n        } else if (httpResponseSatus >= 400 && httpResponseSatus < 500) {\r\n            statusType = HttpStatusType.ClientError;\r\n        } else if (httpResponseSatus >= 500 && httpResponseSatus < 600) {\r\n            statusType = HttpStatusType.ServerError;\r\n        }\r\n\r\n        return statusType;\r\n    }\r\n}\r\n\r\nexport { HttpUtil, HttpStatusType };","import { IErrorServe } from '@farris/mobile-bef';\r\nimport { NotifyService } from '../ui-services';\r\nimport { HttpUtil, HttpStatusType } from './http';\r\nimport { ExceptionLevel } from './types';\r\nimport { JsBridgeService } from '../js-bridge-service/index';\r\n/**\r\n * 实体操作服务\r\n */\r\nclass ExceptionService implements IErrorServe {\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(private notifyService: NotifyService, private jsBridgeService: JsBridgeService) {\r\n  }\r\n\r\n  /**\r\n   * 显示异常信息\r\n   */\r\n  show(error) {\r\n    this.exception(error);\r\n  }\r\n\r\n  /**\r\n * 异常处理路由方法\r\n */\r\n  private exception(error: any) {\r\n    // 针对session失效做特殊处理\r\n    if (error.message && error.message.indexOf('401') !== -1) {\r\n      this.notifyService.error('登录信息已失效请重新打开');\r\n      setTimeout(() => { this.jsBridgeService.closeWindow() }, 2000)\r\n      return;\r\n    }\r\n    if (error && error.response) {\r\n      this.httpErrorHandler(error.response);\r\n    }\r\n  }\r\n\r\n  /**\r\n * http请求异常处理器\r\n */\r\n  private httpErrorHandler(httpError): void {\r\n    if (!httpError) {\r\n      return;\r\n    }\r\n\r\n    const statusType = HttpUtil.getHttpStatusType(httpError.status);\r\n\r\n    switch (statusType) {\r\n      case HttpStatusType.ClientError:\r\n        this.httpErrorInClient(httpError);\r\n        break;\r\n      case HttpStatusType.ServerError:\r\n        this.httpErrorInServer(httpError);\r\n        break;\r\n      default:\r\n        throw new Error('Get invalid status code when using httpErrorHandler method.');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n * 服务器端异常提示弹框\r\n */\r\n  private httpErrorInServer(httpError): void {\r\n    let error = httpError.data;\r\n    if (typeof (error) === 'string') {\r\n      try {\r\n        error = JSON.parse(error);\r\n      } catch (e) { }\r\n    }\r\n    if (!error || error.Level == null || error.Level == undefined) { // 未封装error或未设置异常等级\r\n      this.notifyService.error(httpError.message);\r\n      return;\r\n    }\r\n\r\n    const getNotifyServiceMethodName: String = this.getNotifyServiceMethodName(error.Level);\r\n\r\n    this.notifyService[`${getNotifyServiceMethodName}`](error.Message);\r\n  }\r\n\r\n  /**\r\n   * 客户端异常提示弹框\r\n   */\r\n  private httpErrorInClient(httpError): void {\r\n    if (!httpError) {\r\n      return;\r\n    }\r\n    const url = httpError.config && httpError.config.url && httpError.config.url;\r\n    const status = httpError.status && httpError.status;\r\n    this.notifyService.error(`${url} ${status}`);\r\n  }\r\n\r\n\r\n  /**\r\n * 获取异常处理策略\r\n * @param exceptionLevel 异常等级\r\n */\r\n  public getNotifyServiceMethodName(exceptionLevel): String {\r\n    let exception;\r\n    switch (exceptionLevel) {\r\n      case ExceptionLevel.Info:\r\n        exception = 'info';\r\n        break;\r\n      case ExceptionLevel.Warning:\r\n        exception = 'warning';\r\n        break;\r\n      case ExceptionLevel.Error:\r\n        exception = 'error';\r\n        break;\r\n      case ExceptionLevel.Fatal:\r\n        exception = 'fatal';\r\n        break;\r\n      default:\r\n        // 默认异常等级是错误\r\n        exception = 'error';\r\n        break;\r\n    }\r\n\r\n    return exception;\r\n  }\r\n}\r\n\r\nexport { ExceptionService };\r\n","import { Entity, ViewModelContext } from '@farris/mobile-devkit';\r\nimport { BefRepository } from '@farris/mobile-bef';\r\nimport { EntityService } from '../entity-services/index';\r\nimport { LoadingService, ToastService, NotifyService, DialogService } from '../ui-services/index';\r\nimport { ExceptionService } from '../exception-services/index';\r\nimport { CommandService } from '../command.service';\r\n\r\n/**\r\n * 数据服务基类\r\n */\r\nclass BaseDataService {\r\n\r\n  protected loadingService: LoadingService;\r\n\r\n  protected toastService: ToastService;\r\n\r\n  protected notifyService: NotifyService;\r\n\r\n  protected dialogService: DialogService;\r\n\r\n  protected exceptionService: ExceptionService;\r\n\r\n  protected befRepository: BefRepository<Entity>;\r\n\r\n  protected entityService: EntityService;\r\n\r\n  constructor(protected viewModelContext: ViewModelContext) {\r\n    this.init();\r\n  }\r\n\r\n  private init() {\r\n    this.initServices();\r\n  }\r\n\r\n  private initServices() {\r\n    this.loadingService = this.getService<LoadingService>(LoadingService);\r\n    this.toastService = this.getService<ToastService>(ToastService);\r\n    this.notifyService = this.getService<NotifyService>(NotifyService);\r\n    this.dialogService = this.getService<DialogService>(DialogService);\r\n    this.exceptionService = this.getService<ExceptionService>(ExceptionService);\r\n    this.entityService = this.getService<EntityService>(EntityService);\r\n    this.befRepository = this.viewModelContext.repository as BefRepository<Entity>;\r\n  }\r\n\r\n  /**\r\n   * 获取服务实例\r\n   */\r\n  getService<T>(token: any): T {\r\n    const injector = this.viewModelContext.injector;\r\n    return injector.get<T>(token);\r\n  }\r\n\r\n}\r\n\r\nexport { BaseDataService };\r\n","import { ViewModelContext } from '@farris/mobile-devkit';\r\n\r\n/**\r\n * 数据工具类\r\n * @summary\r\n * 数据相关的工具方法临时放在这里\r\n */\r\nclass DataUtil {\r\n\r\n  /**\r\n   * 将BindingPath转换为EntityPath\r\n   */\r\n  public static convertBindingPathToEntityPath(bindingPath: string, viewModelContext: ViewModelContext): string {\r\n    const rid = viewModelContext.bindingData.list.currentId; // root表数据id\r\n    let path = '/' + rid;\r\n\r\n    const subPaths = bindingPath.split('/');\r\n    if (subPaths.length > 0) {\r\n      for (let index = 1; index < subPaths.length - 1; index++) {\r\n        const subPath = subPaths[index];\r\n        const subData = viewModelContext.bindingData[subPath];\r\n        if (!subData || !subData.currentId) {\r\n          throw Error(`获取子表完整路径出错，找不到${subData}对应的子表，或对应子表没有当前行。`);\r\n        }\r\n        path += `/${subPath}/${subData.currentId}`;\r\n      }\r\n    }\r\n    path += '/' + subPaths[subPaths.length - 1];\r\n\r\n    return path;\r\n  }\r\n\r\n  public static clearFromValidateType(viewModelContext: ViewModelContext): void {\r\n    const contexts = viewModelContext.appContext.viewModelContextManager.getContexts();\r\n    const contextsChild = contexts.filter(item => { return (item.parent && viewModelContext.id === item.parent.id) })\r\n    if (contextsChild.length >= 1) {\r\n      contextsChild.forEach(item => {\r\n        item.form.resetFieldsValidate()\r\n      })\r\n    }\r\n  }\r\n\r\n  public static stringTransformArray(parame): any[] {\r\n    if (this.parameIsThreeBoss(parame)) {\r\n      return []\r\n    } else {\r\n      return JSON.parse(parame);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检测参数是否属于三大幻神 ''  undefined  null\r\n   */\r\n  public static parameIsThreeBoss(parame) {\r\n    if (parame === '' || parame === undefined || parame === null) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n}\r\n\r\nexport { DataUtil };\r\n\r\n","import { Observable, of, EMPTY } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { Entity, ViewModelContext } from '@farris/mobile-devkit';\r\nimport { BefRepository } from '@farris/mobile-bef';\r\nimport { BaseDataService } from './base-data.service';\r\nimport { DataUtil } from './data-util';\r\n\r\nexport class LoadDataService extends BaseDataService {\r\n\r\n  constructor(viewModelContext: ViewModelContext) {\r\n    super(viewModelContext);\r\n  }\r\n\r\n  /**\r\n   * 加载列表数据\r\n   */\r\n  public loadForList(filters: any[], sorts: any[], size?: number, index?: number): Observable<Entity[]> {\r\n    if (typeof filters === 'string') {\r\n      filters = DataUtil.stringTransformArray(filters);\r\n    }\r\n    if (typeof sorts === 'string') {\r\n      sorts = DataUtil.stringTransformArray(sorts);\r\n    }\r\n    let { pageSize, pageIndex } = this.viewModelContext.repository.paginationInfo || { pageSize: null, pageIndex: null };\r\n    this.loadingService.show();\r\n\r\n    if (!size && !pageSize) {\r\n      pageSize = 20;\r\n    } else if (size) {\r\n      pageSize = size;\r\n    }\r\n\r\n    if (!index && !pageIndex) {\r\n      pageIndex = 1;\r\n    } else if (index) {\r\n      pageIndex = index;\r\n    }\r\n\r\n    if (pageIndex === 1) {\r\n      this.befRepository.entityCollection.clear();\r\n    }\r\n\r\n    const query$ = this.befRepository.getEntities(filters, sorts, pageSize, pageIndex);\r\n    return query$.pipe(\r\n      tap(\r\n        () => {\r\n          let { pageIndex, pageCount, totalCount } = this.viewModelContext.repository.paginationInfo;\r\n          if (pageIndex === pageCount || totalCount === 0) {\r\n            this.viewModelContext.appContext.eventBus.triggerEvent({ type: 'listviewFinished' })\r\n          } else {\r\n            this.viewModelContext.appContext.eventBus.triggerEvent({ type: 'listviewUnFinished' })\r\n          }\r\n          this.viewModelContext.appContext.eventBus.triggerEvent({ type: 'loadDataFinished' })\r\n          this.loadingService.hide();\r\n        },\r\n        (exception: any) => {\r\n          this.loadingService.hide();\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 加载卡片数据\r\n   */\r\n  public loadForCard(id: string): Observable<Entity> {\r\n    DataUtil.clearFromValidateType(this.viewModelContext);\r\n    this.loadingService.show();\r\n    const get$ = this.befRepository.getEntityById(id);\r\n    return get$.pipe(\r\n      tap(\r\n        () => {\r\n          this.loadingService.hide();\r\n        },\r\n        (exception: any) => {\r\n          this.loadingService.hide();\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n * 加载进入子表后，未作任何操作之前的数据\r\n * @param path 子表路径\r\n */\r\n  public loadDataForChildCard(path: string) {\r\n    const childID = this.viewModelContext.bindingData[path]['id'];\r\n    const id = this.viewModelContext.bindingData[path]['parentID'];\r\n    const entity = this.viewModelContext.repository.entityCollection.getEntityById(id)\r\n    const childEntityAll = entity[path];\r\n    const childEntityData = childEntityAll.get(childID).data;\r\n    this.viewModelContext.uiState.setPropertyValue('$childEntity', { ...childEntityData });\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Entity, ViewModelContext } from '@farris/mobile-devkit';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\nimport { DataUtil } from './data-util';\r\n\r\n/**\r\n * 新增数据服务类\r\n */\r\nexport class CreateDataService extends BaseDataService {\r\n\r\n  constructor(viewModelContext: ViewModelContext) {\r\n    super(viewModelContext);\r\n  }\r\n\r\n  /**\r\n   * 新增数据\r\n   */\r\n  public create(): Observable<Entity> {\r\n    this.befRepository.entityCollection.clear();\r\n    DataUtil.clearFromValidateType(this.viewModelContext);\r\n    this.loadingService.show();\r\n    const create$ = this.befRepository.createEntity();\r\n    return create$.pipe(\r\n      tap(\r\n        () => {\r\n          this.loadingService.hide();\r\n        },\r\n        (exception: any) => {\r\n          this.loadingService.hide();\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 新增后代节点\r\n   */\r\n  public createByPath(path: string): Observable<Entity> {\r\n    this.loadingService.show();\r\n    // 当前为新增\r\n    const entityPath = DataUtil.convertBindingPathToEntityPath(path, this.viewModelContext);\r\n    const append$ = this.befRepository.appendEntityByPath(entityPath);\r\n    const result$ = append$.pipe(\r\n      tap(\r\n        (e) => {\r\n          this.viewModelContext.uiState.setPropertyValue('$isAdd', { status: true, id: e['id'], path, child: { ...e.data } });\r\n          this.loadingService.hide();\r\n        },\r\n        (exception: any) => {\r\n          this.loadingService.hide();\r\n        }\r\n      )\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Entity, ViewModelContext } from '@farris/mobile-devkit';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class EditDataService extends BaseDataService {\r\n\r\n  constructor(viewModelContext: ViewModelContext) {\r\n    super(viewModelContext);\r\n  }\r\n\r\n  /**\r\n   * 编辑数据\r\n   */\r\n  public edit(id: string): Observable<Entity> {\r\n    this.loadingService.show();\r\n    const edit$ = this.befRepository.editEntityById(id);\r\n    return edit$.pipe(\r\n      tap(\r\n        () => {\r\n          this.loadingService.hide();\r\n        },\r\n        (exception: any) => {\r\n          this.loadingService.hide();\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n}\r\n","import { Observable, of, EMPTY } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { Entity, ViewModelContext } from '@farris/mobile-devkit';\r\nimport { BefRepository } from '@farris/mobile-bef';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n/**\r\n * 数据更新服务\r\n */\r\nexport class UpdateDataService extends BaseDataService {\r\n\r\n  constructor(viewModelContext: ViewModelContext) {\r\n    super(viewModelContext);\r\n  }\r\n\r\n  /**\r\n   * 编辑数据\r\n   */\r\n  public update(id): Observable<Entity> {\r\n    this.loadingService.show();\r\n    const update$ = this.befRepository.updateEntityById(id);\r\n    const result$ =  update$.pipe(\r\n      tap(\r\n        () => {\r\n          this.loadingService.hide();\r\n        },\r\n        (exception: any) => {\r\n          this.loadingService.hide();\r\n          // this.exceptionService.show('更新失败', exception);\r\n        }\r\n      )\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n}\r\n","import { Observable, of, EMPTY } from 'rxjs';\r\nimport { tap, switchMap } from 'rxjs/operators';\r\nimport { Entity, HttpMethods, HttpRequestConfig, ViewModelContext } from '@farris/mobile-devkit';\r\n\r\nimport { DataUtil } from './data-util';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n\r\n/**\r\n * 删除数据服务类\r\n */\r\nexport class RemoveDataService extends BaseDataService {\r\n\r\n  constructor(viewModelContext: ViewModelContext) {\r\n    super(viewModelContext);\r\n  }\r\n\r\n\r\n  /**\r\n   * 删除数据\r\n   */\r\n  public removeById(id: string): Observable<any> {\r\n\r\n    const result$ = this.dialogService.confirm('是否删除').pipe(\r\n      switchMap(val => {\r\n        if (val === false) {\r\n          return EMPTY;\r\n        }\r\n        if (this['context'] && this['context'].eventParams && this['context'].eventParams.swipecellClose) {\r\n          this['context'].eventParams.swipecellClose();\r\n        }\r\n        return this.cancelChanges(id);\r\n      }\r\n      ))\r\n    return result$\r\n  }\r\n\r\n  /**\r\n   * 确认删除\r\n   * @param id \r\n   */\r\n\r\n  private cancelChanges(id: string): Observable<any> {\r\n    this.loadingService.show();\r\n    const remove$ = this.befRepository.removeEntityAndSaveById(id);\r\n    return remove$.pipe(\r\n      tap(\r\n        () => {\r\n          this.notifyService.success('删除成功');\r\n          this.loadingService.hide();\r\n        },\r\n        () => {\r\n          this.loadingService.hide();\r\n          this.notifyService.error('删除失败');\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * 批量删除数据\r\n   */\r\n  public removeByIds(ids: string[]): Observable<boolean> {\r\n    // 由于ListView尚未和UIState集成，无法直接获取ids，临时从事件参数中获取\r\n    if (!ids) {\r\n      const selectedItems = this['context'].eventParams;\r\n      ids = selectedItems.map((selectedItem) => {\r\n        return selectedItem.id;\r\n      });\r\n    }\r\n\r\n    const multiRemove$ = this.dialogService.confirm('是否删除').pipe(\r\n      switchMap(val => {\r\n        if (val === false) {\r\n          return EMPTY;\r\n        }\r\n        this.loadingService.show();\r\n        return this.befRepository.removeEntitiesByIds(ids);\r\n      }));\r\n    return multiRemove$.pipe(\r\n      tap(\r\n        () => {\r\n          this.loadingService.hide();\r\n          this.notifyService.success('删除成功');\r\n        },\r\n        (exception: any) => {\r\n          this.loadingService.hide();\r\n\r\n          // this.exceptionService.show('删除失败', exception);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 删除后代节点数据\r\n   */\r\n  public removeByPathAndId(path: string, id: string): Observable<boolean> {\r\n    const result$ = this.dialogService.confirm('是否删除').pipe(\r\n      switchMap(val => {\r\n        if (val === false) {\r\n          return EMPTY;\r\n        }\r\n        if (this['context'] && this['context'].eventParams && this['context'].eventParams.swipecellClose) {\r\n          this['context'].eventParams.swipecellClose();\r\n        }\r\n        return this.removeByPathAndIdChanges(path, id);\r\n      }\r\n      ));\r\n    return result$;\r\n  }\r\n\r\n\r\n  public removeByPathAndIdChanges(path: string, id: string): Observable<boolean> {\r\n    this.loadingService.show();\r\n    const entityPath = DataUtil.convertBindingPathToEntityPath(path, this.viewModelContext);\r\n    const remove$ = this.befRepository.removeEntityByPath(entityPath, id);\r\n    return remove$.pipe(\r\n      tap(\r\n        () => {\r\n          this.loadingService.hide();\r\n          this.notifyService.success('删除成功');\r\n        },\r\n        (error: any) => {\r\n          this.loadingService.hide();\r\n          console.error(error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 批量删除后代节点数据\r\n   */\r\n  public removeByPathAndIds(path: string, ids: string[]): Observable<boolean> {\r\n    throw new Error('Not Implemented');\r\n  }\r\n\r\n  /**\r\n   * 业务附件批量删除数据\r\n   */\r\n  public removeByBusinessIds(url: string, ids: string[]): Observable<boolean> {\r\n    // 由于ListView尚未和UIState集成，无法直接获取ids，临时从事件参数中获取\r\n    if (!ids) {\r\n      const selectedItems = this['context'].eventParams;\r\n      ids = selectedItems.map((selectedItem) => {\r\n        return selectedItem.id;\r\n      });\r\n    }\r\n    const params = {\r\n      ids: ids.join(',')\r\n    };\r\n    const requestConfig: HttpRequestConfig = {\r\n      params: params,\r\n      body: {\r\n        dataChange: [],\r\n        variableChange: null\r\n      }\r\n    };\r\n    return this.befRepository.apiProxy.request(HttpMethods.PUT, url, requestConfig, true);\r\n    // this.loadingService.show();\r\n    // const multiRemove$ = this.dialogService.confirm('是否删除').pipe(\r\n    //   switchMap(val => {\r\n    //     if (val === false) {\r\n    //       return EMPTY;\r\n    //     }\r\n    //   }));\r\n    // return multiRemove$.pipe(\r\n    //   tap(\r\n    //     () => {\r\n    //       this.loadingService.hide();\r\n    //     },\r\n    //     (exception: any) => {\r\n    //       this.loadingService.hide();\r\n    //     }\r\n    //   )\r\n    // );\r\n  }\r\n\r\n\r\n  /**\r\n   * 业务附件删除后代节点数据\r\n   */\r\n  public removeByBusinessPathAndId(url: string, path: string, id: string): Observable<boolean> {\r\n    const result$ = this.dialogService.confirm('是否删除').pipe(\r\n      switchMap(val => {\r\n        if (val === false) {\r\n          return EMPTY;\r\n        }\r\n        return this.befRepository.apiProxy.request(HttpMethods.PUT, url);\r\n      }\r\n      ));\r\n    return result$;\r\n  }\r\n\r\n\r\n  /**\r\n   * 子表清除编辑与新增标记\r\n   * @returns \r\n   */\r\n  public ClearStatusAfterchildCardSave(): Observable<any> {\r\n    this.viewModelContext.uiState.setPropertyValue('$isAdd', null);\r\n    this.viewModelContext.uiState.setPropertyValue('$childEntity', null);\r\n    return of(true)\r\n  }\r\n\r\n}\r\n","import { Observable, of, EMPTY } from 'rxjs';\r\nimport { switchMap, map, tap } from 'rxjs/operators';\r\nimport { Entity, ViewModelContext } from '@farris/mobile-devkit';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class SaveDataService extends BaseDataService {\r\n\r\n  constructor(viewModelContext: ViewModelContext) {\r\n    super(viewModelContext);\r\n  }\r\n\r\n  /**\r\n   * 保存数据\r\n   */\r\n  public save(): Observable<boolean> {\r\n    this.loadingService.show();\r\n    const save$ = this.befRepository.saveEntities();\r\n    return save$.pipe(\r\n      tap(\r\n        () => {\r\n          this.loadingService.hide();\r\n          this.notifyService.success('保存成功');\r\n        },\r\n        (exception: any) => {\r\n          this.loadingService.hide();\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 子表保存\r\n   */\r\n  public saveByPath(): Observable<boolean> {\r\n    this.loadingService.show();\r\n    const currentRootId = this.viewModelContext.bindingData.list.currentId;\r\n    const update$ = this.befRepository.updateEntityById(currentRootId);\r\n    const result$ = update$.pipe(\r\n      map(() => {\r\n        return true;\r\n      }),\r\n      tap(\r\n        () => {\r\n          this.viewModelContext.uiState.setPropertyValue('$isAdd', null);\r\n          this.viewModelContext.uiState.setPropertyValue('$childEntity', null);\r\n          this.loadingService.hide();\r\n          this.notifyService.success('保存成功');\r\n        },\r\n        (exception: any) => {\r\n          this.loadingService.hide();\r\n        }\r\n      )\r\n    );\r\n    return result$;\r\n  }\r\n}\r\n","import { Observable, of, EMPTY } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { Entity, ViewModelContext } from '@farris/mobile-devkit';\r\nimport { BefRepository } from '@farris/mobile-bef';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class CancelDataService extends BaseDataService {\r\n\r\n  constructor(viewModelContext: ViewModelContext) {\r\n    super(viewModelContext);\r\n  }\r\n\r\n  /**\r\n   * 新增数据\r\n   */\r\n  public cancel(): Observable<boolean> {\r\n    this.loadingService.show();\r\n    const cancel$ = this.befRepository.cancelEntityChanges();\r\n    return cancel$.pipe(\r\n      tap(\r\n        () => {\r\n          this.loadingService.hide();\r\n        },\r\n        (exception: any) => {\r\n          this.loadingService.hide();\r\n          // this.exceptionService.show('取消失败', exception);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ViewModelContext, HttpMethod, HttpHeaders, HttpParams, HttpRequestConfig } from '@farris/mobile-devkit';\r\nimport { ResponseInfo } from '@farris/mobile-bef';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n\r\n/**\r\n * BE动作调用服务\r\n */\r\nclass BeActionService extends BaseDataService {\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(protected viewModelContext: ViewModelContext) {\r\n    super(viewModelContext);\r\n  }\r\n\r\n  /**\r\n   * 执行自定义动作\r\n   */\r\n  public invokeAction(\r\n    actionUrl: string, httpMethod: HttpMethod, httpHeaders?: HttpHeaders, params?: HttpParams, body?: any\r\n  ): Observable<ResponseInfo> {\r\n    return this.innerInvokeAction(actionUrl, httpMethod, httpHeaders, params, body);\r\n  }\r\n\r\n  /**\r\n   * 调用自定义动作\r\n   */\r\n  private innerInvokeAction(\r\n    actionUrl: string, method: HttpMethod, headers?: HttpHeaders, params?: HttpParams, body?: any\r\n  ): Observable<any>  {\r\n    const apiProxy = this.befRepository.apiProxy;\r\n    const baseUrl = apiProxy.baseUrl;\r\n\r\n    // 构造url\r\n    const fullActionUrl = `${baseUrl}/service/${actionUrl}`;\r\n    const requestConfig: HttpRequestConfig = {\r\n    };\r\n\r\n    // headers构造\r\n    if (headers ) {\r\n      requestConfig.headers = headers;\r\n    }\r\n\r\n    // 查询参数\r\n    if (params) {\r\n      requestConfig.params = params;\r\n    }\r\n\r\n    // body构造\r\n    if (body) {\r\n      requestConfig.body = body;\r\n    }\r\n\r\n    this.loadingService.show();\r\n    const result$ = apiProxy.request(method, fullActionUrl, requestConfig);\r\n    return result$.pipe(\r\n      tap(\r\n        () => {\r\n          this.loadingService.hide();\r\n        },\r\n        (error: any) => {\r\n          this.loadingService.hide();\r\n          console.log(error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport { BeActionService };\r\n\r\n\r\n","import { Observable, of, EMPTY } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { ViewModelContext } from '@farris/mobile-devkit';\r\nimport { LoadingService, NotifyService } from '../ui-services/index';\r\nimport { WfTaskHandlerService } from '../work-flow-service/wf-task-handler.service'\r\nclass ApproveService {\r\n\r\n    private wfTaskHandlerService: WfTaskHandlerService;\r\n\r\n    private notifyService: NotifyService;\r\n\r\n    constructor(wfTaskHandlerService: WfTaskHandlerService, protected viewModelContext: ViewModelContext) {\r\n        this.wfTaskHandlerService = wfTaskHandlerService;\r\n        this.notifyService = this.getService<NotifyService>(NotifyService);\r\n    }\r\n\r\n    /**\r\n     * 获取服务实例\r\n     */\r\n    getService<T>(token: any): T {\r\n        const injector = this.viewModelContext.injector;\r\n        return injector.get<T>(token);\r\n    }\r\n\r\n    /**\r\n     * 提交审批(带入口单据使用wf控件)\r\n     * @param bizBillID 业务单据Id\r\n     * @param bizDefKey 入口单据Id\r\n     * @param options 上下文参数\r\n     * @param variables 可选参数\r\n     */\r\n    public submitApproveWithBizDefKeyUseControl(bizBillID: string, bizDefKey: string, options: any = {}, variables?: any) {\r\n        if (!bizBillID) {\r\n            this.notifyService.error('业务单据Id不能为空');\r\n            return EMPTY;\r\n        }\r\n        if (!bizDefKey) {\r\n            this.notifyService.error('入口单据Id不能为空');\r\n            return EMPTY;\r\n        }\r\n        if (!options || typeof options !== 'object') {\r\n            options = {};\r\n        }\r\n        const payload: any = {\r\n            dataId: bizBillID,\r\n            bizDefKey,\r\n            ...options\r\n        };\r\n        // 处理variables参数\r\n        if (variables) {\r\n            if (variables.startsWith('{') && variables.endsWith('}')) {\r\n                try {\r\n                    variables = JSON.parse(variables);\r\n                } catch {\r\n                    console.log('variables parse failed!');\r\n                    variables = {};\r\n                }\r\n            }\r\n            payload.variables = variables;\r\n        }\r\n        return this.wfTaskHandlerService && this.wfTaskHandlerService.startProcess(payload);\r\n    }\r\n\r\n    /**\r\n     * 取消审批(支持主表、子表)\r\n     * 迁移web端（已废弃）请调用新的取消提交方法\r\n     * @param procInstId 流程实例Id\r\n     */\r\n    public cancelSubmit(procInstId: string): Observable<any> {\r\n        if (!procInstId) {\r\n            this.notifyService.error('流程实例Id不能为空');\r\n            return EMPTY;\r\n        }\r\n        return this.wfTaskHandlerService && this.wfTaskHandlerService.cancelSubmit({ dataId: null, bizDefKey: null, procInstId });\r\n    }\r\n\r\n    /**\r\n     * 提交审批\r\n     * @param dataId 表单id\r\n     * @param bizDefKey 入口单据id\r\n     */\r\n    public submitWithBizDefKey(dataId: string, bizDefKey: string): Observable<any> {\r\n        return this.wfTaskHandlerService && this.wfTaskHandlerService.submitWithBizDefKey(dataId, bizDefKey);\r\n    }\r\n\r\n    /**\r\n     * 取消提交审批\r\n     * @param dataId 表单id\r\n     * @param bizDefKey 入口单据id\r\n     */\r\n    public cancelSubmitWithDataId(dataId: string, bizDefKey: string): Observable<any> {\r\n        return this.wfTaskHandlerService && this.wfTaskHandlerService.cancelSubmitWithDataId(dataId, bizDefKey);\r\n    }\r\n\r\n    /**\r\n     * 批量提交审批\r\n     * @param dataIds 表单ID集合\r\n     * @param bizDefKey 入口单据id\r\n     */\r\n    public batchSubmitWithBizDefKey(dataIds: string[], bizDefKey: string): Observable<any> {\r\n        return this.wfTaskHandlerService && this.wfTaskHandlerService.batchSubmitWithBizDefKey(dataIds, bizDefKey);\r\n    }\r\n\r\n    /**\r\n     * 批量取消提交审批\r\n     * @param dataIds 表单ID集合\r\n     * @param bizDefKey 入口单据id\r\n     */\r\n    batchCancelSubmitWithDataId(dataIds: string[], bizDefKey: string): Observable<any> {\r\n        return this.wfTaskHandlerService && this.wfTaskHandlerService.batchCancelSubmitWithDataId(dataIds, bizDefKey);\r\n    }\r\n\r\n    /**\r\n    * 子表提交审批\r\n    * @param parentDataId 主表id\r\n    * @param childDataId 子表id\r\n    * @param bizDefKey 入口单据id\r\n    */\r\n    childSubmit(parentDataId: string, childDataId: string, bizDefKey: string): Observable<any> {\r\n        return this.wfTaskHandlerService && this.wfTaskHandlerService.childSubmit(parentDataId, childDataId, bizDefKey);\r\n    }\r\n\r\n    /**\r\n     * 子表取消提交审批\r\n     * @param parentDataId 主表id\r\n     * @param childDataId 子表id\r\n     * @param bizDefKey 入口单据id\r\n     */\r\n    childCancelSubmit(parentDataId: string, childDataId: string, bizDefKey: string): Observable<any> {\r\n        return this.wfTaskHandlerService && this.wfTaskHandlerService.childCancelSubmit(parentDataId, childDataId, bizDefKey);\r\n    }\r\n\r\n    /**\r\n     * 子表批量提交审批\r\n     * @param parentDataId 主表id\r\n     * @param childDataIds 子表id集合\r\n     * @param bizDefKey 入口单据id\r\n     */\r\n    childBatchSubmit(parentDataId: string, childDataIds: string[], bizDefKey: string): Observable<any> {\r\n        return this.wfTaskHandlerService && this.wfTaskHandlerService.childBatchSubmit(parentDataId, childDataIds, bizDefKey);\r\n    }\r\n\r\n    /**\r\n     * 子表批量取消提交审批\r\n     * @param parentDataId 主表id\r\n     * @param childDataIds 子表id集合\r\n     * @param bizDefKey 入口单据id\r\n     */\r\n    childBatchCancelSubmit(parentDataId: string, childDataIds: string[], bizDefKey: string): Observable<any> {\r\n        return this.wfTaskHandlerService && this.wfTaskHandlerService.childBatchCancelSubmit(parentDataId, childDataIds, bizDefKey);\r\n    }\r\n\r\n}\r\n\r\nexport { ApproveService }","import { of, EMPTY } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { BaseDataService } from './base-data.service';\r\nimport { DataUtil } from './data-util';\r\nimport { BefRepositoryUtil } from '@farris/mobile-bef'\r\nimport { HttpMethods, ViewModelContext } from '@farris/mobile-devkit';\r\n\r\n\r\n/**\r\n * 数据检查服务\r\n */\r\nclass CheckDataService extends BaseDataService {\r\n\r\n  constructor(viewModelContext: ViewModelContext) {\r\n    super(viewModelContext)\r\n  }\r\n\r\n  /**\r\n   * 离开页面前检查数据变更\r\n   */\r\n  public checkChangesBeforeLeave() {\r\n\r\n    //const isEntitiesChanged = this.befRepository.entityManager.checkAllEntityChanges();\r\n\r\n    // 实体数据没有变化，继续执行\r\n    if (!BefRepositoryUtil.isExistUnsaveData(this.befRepository)) {\r\n      return of(true);\r\n    }\r\n\r\n    return this.dialogService.confirm('存在未保存的变更，确认离开当前页面？').pipe(\r\n      switchMap((ifLeave: any) => {\r\n        if (ifLeave === false) {\r\n          return EMPTY;\r\n        } else {\r\n          this.loadingService.show();\r\n          const cancel$ = this.befRepository.cancelEntityChanges();\r\n          return cancel$.pipe(\r\n            switchMap(() => {\r\n              if (this.befRepository.apiProxy.associatedUrlMap.size >= 1) {\r\n                const urls = [...this.befRepository.apiProxy.associatedUrlMap.keys()];\r\n                return this.befRepository.apiProxy.request(HttpMethods.POST, `${urls[0]}/service/cancel`)\r\n              } else {\r\n                return of(true)\r\n              }\r\n            }),\r\n            tap(() => {\r\n              this.loadingService.hide();\r\n            })\r\n          );\r\n        }\r\n      }\r\n      ));\r\n  }\r\n\r\n  /**\r\n   * 子表离开页面前检查数据变更\r\n   */\r\n  public checkChangesBeforeLeaveChild() {\r\n    // 新增状态\r\n    if (this.viewModelContext.uiState['$isAdd'] && this.viewModelContext.uiState['$isAdd'].status === true) {\r\n      // 继续判断\r\n      const childId = this.viewModelContext.uiState['$isAdd'].id;\r\n      const childPath = this.viewModelContext.uiState['$isAdd'].path;\r\n      const child = this.viewModelContext.uiState['$isAdd'].child;\r\n      const subPaths = childPath.split('/');\r\n      let currentChild;\r\n      if (subPaths[0] && subPaths.length === 1) {\r\n        currentChild = this.viewModelContext.bindingData[subPaths[0]]\r\n      }\r\n      if (!subPaths[0] && subPaths.length === 2) {\r\n        currentChild = this.viewModelContext.bindingData[subPaths[1]]\r\n      }\r\n      if (subPaths.length > 2) {\r\n        // 暂不处理从从表\r\n        let childPath = ''\r\n        if (subPaths[0]) {\r\n          childPath = subPaths[0];\r\n        }\r\n        for (let index = 1; index < subPaths.length; index++) {\r\n          childPath = childPath + subPaths[index]\r\n        }\r\n        currentChild = this.viewModelContext.bindingData[childPath]\r\n      }\r\n      const isChanged = this.checkForVariationBetweenTheTwo(currentChild, child);\r\n      if (isChanged) {\r\n        return of(true)\r\n      }\r\n      const entityPath = DataUtil.convertBindingPathToEntityPath(childPath, this.viewModelContext);\r\n      return this.befRepository.removeEntityByPath(entityPath, childId);\r\n    }\r\n    return of(true)\r\n  }\r\n\r\n  private checkForVariationBetweenTheTwo(newData, oldData) {\r\n    const childKeys = Object.keys(oldData);\r\n    let isChanged = false;\r\n    for (let i = 0; i < childKeys.length; i++) {\r\n      if (Object.prototype.toString.call(oldData[childKeys[i]]) === '[object Object]' || Object.prototype.toString.call(oldData[childKeys[i]]) === '[object Array]') {\r\n        if (JSON.stringify(oldData[childKeys[i]]) !== JSON.stringify(newData[childKeys[i]])) {\r\n          return isChanged = true\r\n        }\r\n      } else {\r\n        if (oldData[childKeys[i]] !== newData[childKeys[i]]) {\r\n          return isChanged = true\r\n        }\r\n      }\r\n    }\r\n    return isChanged;\r\n  }\r\n\r\n  /**\r\n   * 进入子表编辑或者新增点击返回都会复原进入子表前的数据\r\n   * @param path 子表路径\r\n   */\r\n  public checkChangesBeforeLeaveAddOrEditChild(path: string) {\r\n    // 新增状态\r\n    if (this.viewModelContext.uiState['$isAdd'] && this.viewModelContext.uiState['$isAdd'].status === true) {\r\n      // 新增直接干掉\r\n      const childId = this.viewModelContext.uiState['$isAdd'].id;\r\n      const childPath = this.viewModelContext.uiState['$isAdd'].path;\r\n      const entityPath = DataUtil.convertBindingPathToEntityPath(childPath, this.viewModelContext);\r\n      return this.befRepository.removeEntityByPath(entityPath, childId).pipe(\r\n        tap(() => {\r\n          this.viewModelContext.uiState.setPropertyValue('$isAdd', null);\r\n        }));\r\n    } else {\r\n      // 编辑还原\r\n      const childID = this.viewModelContext.bindingData[path]['id'];\r\n      const id = this.viewModelContext.bindingData[path]['parentID'];\r\n      const childEntityData = this.viewModelContext.uiState['$childEntity'];\r\n      if (!childEntityData) {\r\n        return of(true)\r\n      }\r\n      this.viewModelContext.repository.entityCollection.getEntityById(id)[path].get(childID).load(childEntityData);\r\n      return of(true)\r\n    }\r\n  }\r\n}\r\n\r\nexport { CheckDataService };\r\n","// import { Router } from 'vue-router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, map } from 'rxjs/operators';\r\nimport { ViewModelContext, HttpClient } from '@farris/mobile-devkit';\r\nimport { RtcOptions, BeforeNavigateReponseBody, BeforeNavigateRequestBody } from './types/index';\r\nimport { JsBridgeService } from './js-bridge-service/index';\r\n\r\n\r\n\r\n\r\n/**\r\n * 路由服务\r\n */\r\nclass RouterService {\r\n\r\n  /**\r\n   * ViewModel上下文\r\n   */\r\n  private viewModelContext: ViewModelContext;\r\n\r\n  /**\r\n   * VueRouter实例\r\n   */\r\n  private router: any;\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(viewModelContext: ViewModelContext, router: any, private jsBridgeService: JsBridgeService) {\r\n    this.viewModelContext = viewModelContext;\r\n    this.router = router;\r\n  }\r\n\r\n  /**\r\n   * 路由跳转\r\n   * @param path   路由路径\r\n   * @param params 路由参数\r\n   */\r\n  navigate(path: string, queryParams: any = {}, backParams: any = {}, backPath?: string) {\r\n    if (!path) return\r\n\r\n    queryParams = this.ParamsFromStringToObject(queryParams);\r\n    backParams = this.ParamsFromStringToObject(backParams);\r\n\r\n    const pathIndex = this.sessionStorageSaveHistory(path, backPath, backParams)\r\n\r\n    // 跨工程跳转\r\n    if (path && pathIndex >= 0) {\r\n      let urlPath = this.splicePath(path, queryParams);\r\n      window.location.href = urlPath;\r\n      return false;\r\n    }\r\n\r\n    window['MOBILE_ORIGIN_BACK'] && window['MOBILE_ORIGIN_BACK'].reflushOriginGoback();\r\n\r\n    this.router.push({\r\n      path: path,\r\n      query: queryParams\r\n    });\r\n  }\r\n\r\n  private removeParams(pathIndex, path) {\r\n    let end = path.search('\\\\?');\r\n    if (end = -1) {\r\n      end = path.length;\r\n    }\r\n    return path.slice(pathIndex, end);\r\n  }\r\n\r\n  private getsessionStorageSaveHistoryKey(path) {\r\n    const pathIndex = path.search('/apps');\r\n    // 跨页面跳转离开\r\n    if (path && pathIndex >= 0) {\r\n      return this.removeParams(pathIndex, path);\r\n    }\r\n    return this.router.options.history.base + path;\r\n  }\r\n\r\n  private sessionStorageSaveHistory(path, backPath, backParams) {\r\n    const pathIndex = path.search('/apps');\r\n\r\n    const key = this.getsessionStorageSaveHistoryKey(path);\r\n    let historyObject = {}\r\n    //判断是否制定了目标页面得返回地址\r\n    if (backPath) {\r\n      const backPathIndex = path.search('/apps');\r\n      //指定返回路由为跨工程跳转\r\n      if (backPathIndex >= 0) {\r\n        historyObject = {\r\n          routerWay: 'href',\r\n          path: backPath,\r\n          query: backParams\r\n        }\r\n      } else {\r\n        historyObject = {\r\n          routerWay: 'Router',\r\n          path: backPath,\r\n          query: backParams\r\n        }\r\n      }\r\n      sessionStorage.setItem(key, JSON.stringify(historyObject))\r\n      return pathIndex;\r\n    } else {\r\n      let currentPath = this.router.currentRoute.value.path;\r\n      // 跨页面跳转离开\r\n      if (path && pathIndex >= 0) {\r\n        //拼接当前路由\r\n        currentPath =  this.router.options.history.base + this.router.options.history.location;\r\n        //记录当前路由\r\n        historyObject = {\r\n          routerWay: 'href',\r\n          path: currentPath,\r\n          query: backParams\r\n        }\r\n      } else {\r\n        // 路由方式跳转记录\r\n        historyObject = {\r\n          routerWay: 'Router',\r\n          path: currentPath,\r\n          query: backParams\r\n        }\r\n      }\r\n      sessionStorage.setItem(key, JSON.stringify(historyObject))\r\n      return pathIndex;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 带维度的路由跳转\r\n   */\r\n  navigateForRtc(path: string, queryParams: any = {}, backParams: any = {}, backPath?: string) {\r\n\r\n    if (!queryParams || !queryParams.metadataId) {\r\n      this.navigate(path, queryParams, backParams, backPath);\r\n    }\r\n\r\n    const rtcOptions: RtcOptions = {\r\n      metadataId: queryParams.metadataId,\r\n      withDims: false,\r\n      dim1: queryParams.dim1,\r\n      dim2: queryParams.dim2\r\n    };\r\n    delete queryParams['metadataId'];\r\n    delete queryParams['dim1'];\r\n    delete queryParams['dim2'];\r\n\r\n    const correctRtcOptions$ = this.correctRtcOptions(rtcOptions);\r\n    const extendedPath$ = correctRtcOptions$.pipe(\r\n      map((correctedRtcOptions: RtcOptions) => {\r\n        return this.getExtendPath(path, correctedRtcOptions);\r\n      })\r\n    );\r\n\r\n    const result$ = extendedPath$.pipe(\r\n      tap((extendedPath: string) => {\r\n        this.navigate(extendedPath, queryParams, backParams);\r\n      })\r\n    );\r\n\r\n    result$.subscribe();\r\n  }\r\n\r\n  /**\r\n   * 纠正维度信息\r\n   * @summary\r\n   * 1、非运行时定制表单，widthDims=false, 维度为空；\r\n   * 2、运行时定制表单：维度值不存在时，则纠正为public；\r\n   */\r\n  private correctRtcOptions(rtcOptions: RtcOptions): Observable<RtcOptions> {\r\n    const dim1 = rtcOptions.dim1 || 'public';\r\n    const dim2 = rtcOptions.dim2 || 'public';\r\n    const metadataId = rtcOptions.metadataId;\r\n    const httpClient = this.viewModelContext.injector.get<HttpClient>(HttpClient);\r\n\r\n    const url = '/api/runtime/bcc/v1.0/template/beforeNavigate';\r\n    const body: BeforeNavigateRequestBody = {\r\n        isRootMetadata: true,\r\n        metadataId: metadataId,\r\n        dim1: dim1,\r\n        dim2: dim2,\r\n    };\r\n    const beforeNavigate$ = httpClient.post(url, body, null).pipe(\r\n      map((result: BeforeNavigateReponseBody) => {\r\n        const correctedRtcOptions: RtcOptions = {\r\n          metadataId: result.metadataId,\r\n          withDims: result.withDims === 1 ? true : false,\r\n          dim1: result.dim1,\r\n          dim2: result.dim2\r\n        };\r\n\r\n        return correctedRtcOptions;\r\n      })\r\n    );\r\n    return beforeNavigate$;\r\n  }\r\n\r\n  /**\r\n   * 获取运行时定制表单地址\r\n   */\r\n  private getExtendPath(path: string, rtcOptions: RtcOptions): string {\r\n\r\n    if (rtcOptions.withDims === false) {\r\n      return path;\r\n    }\r\n\r\n    const arrPath = path.split('index.html');\r\n    const append = `${rtcOptions.dim1}/${rtcOptions.dim2}/index.html`.toLowerCase();\r\n    const extendPath = arrPath.join(append);\r\n    return extendPath;\r\n  }\r\n\r\n  /**\r\n   * 拼接url路径\r\n   * @param path 路径\r\n   * @param params 参数\r\n   * @returns \r\n   */\r\n  private splicePath(path: string, params: any) {\r\n    let urlPath = path\r\n    const end = urlPath.search('\\\\?');\r\n    if (end > -1) {\r\n      urlPath = urlPath.slice(0, end)\r\n    }\r\n    const keys = Object.keys(params);\r\n    if (keys.length > 0) {\r\n      urlPath = urlPath + '?';\r\n      keys.forEach(element => {\r\n        urlPath = urlPath + element + '=' + params[`${element}`] + '&'\r\n      });\r\n      urlPath = urlPath.slice(0, urlPath.length - 1)\r\n    }\r\n    return urlPath;\r\n  }\r\n\r\n  private ParamsFromStringToObject(params: any): object {\r\n\r\n    if (Object.prototype.toString.call(params) === '[object Object]') {\r\n      return params;\r\n    }\r\n\r\n    try {\r\n      params = JSON.parse(params);\r\n    } catch (error) {\r\n      if (!params) {\r\n        params = {}\r\n      } else {\r\n        params = {}\r\n        console.error('路由传参params不是JSON串格式')\r\n      }\r\n    }\r\n\r\n    if (Object.prototype.toString.call(params) !== '[object Object]') {\r\n      return {};\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  /**\r\n * 路由跳转\r\n * @param path   路由路径\r\n * @param params 路由参数\r\n */\r\n  navigateReplace(path: string, queryParams: any = {}) {\r\n    if (typeof queryParams === 'string') {\r\n      queryParams = JSON.parse(queryParams);\r\n    }\r\n    this.router.replace({\r\n      path: path,\r\n      query: queryParams\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 后退\r\n   */\r\n  goBack(params) {\r\n    params = this.ParamsFromStringToObject(params);\r\n    const currentPath = this.router.options.history.base + this.router.currentRoute.value.path;\r\n    let need_go_back = sessionStorage.getItem(currentPath);\r\n    if (!need_go_back) {\r\n      if (window.top.location.pathname.indexOf('mobiletaskcenter') > -1) {\r\n        return;\r\n      }\r\n      this.jsBridgeService.closeWindow()\r\n      return\r\n    }\r\n    const keys = Object.keys(params);\r\n\r\n    need_go_back = JSON.parse(need_go_back);\r\n    if (need_go_back && need_go_back['routerWay'] === 'Router') {\r\n      let query = need_go_back['query'];\r\n      if (keys.length > 0) {\r\n        query = { ...query, ...params }\r\n      }\r\n      this.router.push({\r\n        query,\r\n        path: need_go_back['path'],\r\n      });\r\n    }\r\n    if (need_go_back && need_go_back['routerWay'] === 'href') {\r\n      let query = need_go_back['query'];\r\n      if (keys.length > 0) {\r\n        query = { ...query, ...params }\r\n      }\r\n      let path = need_go_back['path'];\r\n\r\n      path = this.splicePath(path, query);\r\n\r\n      window.location.href = path;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 映射路由状态\r\n   */\r\n  mappingToUIState() {\r\n    const routerState = {\r\n      params: this.router.currentRoute['value'].params,\r\n      queryParams: this.router.currentRoute['value'].query\r\n    };\r\n    this.viewModelContext.uiState['routerState'] = routerState;\r\n  }\r\n}\r\n\r\n/**\r\n * Token\r\n * @todo：临时方案，直接注入VueRouter实例。\r\n */\r\nconst ROUTER_INSTANCE_TOKEN = '@farris/mobile-command-services/ROUTER_INSTANCE_TOKEN';\r\n\r\nexport { RouterService, ROUTER_INSTANCE_TOKEN };\r\n","import { ViewModelContext } from '@farris/mobile-devkit';\r\nimport { EMPTY, Observable, of, zip } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n/**\r\n * 数据服务基类\r\n */\r\nclass ValidatorServices {\r\n\r\n    constructor(private viewModelContext: ViewModelContext) { }\r\n\r\n    /**\r\n     * 获取某个视图模型上得所有验证结果\r\n     * @param viewModelId 视图模型id\r\n     */\r\n    validateFields(viewModelId?: string) {\r\n        if (viewModelId) {\r\n            return this.viewModelContext.appContext.viewModelContextManager.getContextById(viewModelId).form.validateFields();\r\n        } else {\r\n            return this.viewModelContext.form.validateFields();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 处理某个视图模型上得所有验证结果\r\n     * @param viewModelId 视图模型id\r\n     */\r\n    handleValidateFields(viewModelId?: string): Observable<any> {\r\n        let validateFieldsResults = [];\r\n        if (viewModelId) {\r\n            validateFieldsResults = this.viewModelContext.appContext.viewModelContextManager.getContextById(viewModelId).form.validateFields();\r\n        } else {\r\n            this.viewModelContext.appContext.viewModelContextManager.getRootContextAndPosterityById(this.viewModelContext.id).forEach((context: ViewModelContext) => {\r\n                validateFieldsResults = validateFieldsResults.concat(context.form.validateFields())\r\n            });\r\n        }\r\n        if(validateFieldsResults.length === 0){\r\n            return of(true);\r\n        }\r\n        return zip(...validateFieldsResults).pipe(\r\n            switchMap((value)=>{\r\n                const index = value.findIndex(item=>item['passing'] === false)\r\n                if(index > -1){\r\n                    return EMPTY\r\n                }else{\r\n                    return of(true);\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 获取某个字段的验证结果\r\n     * @param name 字段名称\r\n     * @param viewModelId 视图模型id\r\n     */\r\n    getFieldError(name: string, viewModelId?: string) {\r\n        if (viewModelId) {\r\n            return this.viewModelContext.appContext.viewModelContextManager.getContextById(viewModelId).form.getFieldError(name);\r\n        } else {\r\n            return this.viewModelContext.form.getFieldError(name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重置一组校验状态 不传参数清除所有\r\n     * @param fields name的数组\r\n     * @param viewModelId 视图模型id\r\n     */\r\n    resetFieldsValidate(fields?: string[], viewModelId?: string) {\r\n        if (fields && typeof fields === 'string') {\r\n            fields = JSON.parse(fields);\r\n        }\r\n        if (viewModelId) {\r\n            return this.viewModelContext.appContext.viewModelContextManager.getContextById(viewModelId).form.resetFieldsValidate(fields);\r\n        } else {\r\n            this.viewModelContext.appContext.viewModelContextManager.getRootContextAndPosterityById(this.viewModelContext.id).forEach((context: ViewModelContext) => {\r\n                context.form.resetFieldsValidate(fields);\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport { ValidatorServices };\r\n","import { Observable, Subject } from 'rxjs';\r\nimport { IJsBridgeStrategy, PhotoOptions, PictureOptions, VidepOptions, LocationInfo } from './decorators';\r\n\r\nclass CCworkService implements IJsBridgeStrategy {\r\n\r\n    init(callback) {\r\n        window.top['iCityBridge'].init(callback)\r\n    }\r\n\r\n    /**\r\n     * {\r\n     * quality:图片质量，可选值high、mid、low, high为1920*1080；mid为720*540；low: 480*360，默认为mid\r\n     * mode:唤起模式，可选值both（仅支持iOS）、camera、album, 默认为camera;\r\n     * mark文字水印，字数最大值50\r\n     * }\r\n     * @param options Object\r\n     *\r\n     */\r\n    takePhoto(options: PhotoOptions = { quality: 'mid' }): Observable<[]> {\r\n        // callback return object {errormessage:\"\"，result:\"base64格式\"}\r\n        const subject = new Subject<any>();\r\n\r\n        const callback = (data) => {\r\n            if (data) {\r\n                subject.next(data['result']);\r\n            }\r\n        }\r\n\r\n        window.top['iCityBridge'].ccworkGetPicsFromCameraAndAlbum(\r\n            { ...options },\r\n            callback\r\n        );\r\n        return subject;\r\n    }\r\n\r\n    /**\r\n     * path 如果不为空则从指定图片文件识别二维码,空就吊起相机\r\n     * filters 条码类型过滤列表，如QR、EAN13、EAN8\r\n     * \r\n     * @param options Object\r\n     * \r\n     */\r\n    scanQRCode(): Observable<string> {\r\n        const subject = new Subject<any>();\r\n\r\n        const callback = (data) => {\r\n            if (data) {\r\n                subject.next(data['result']);\r\n            }\r\n        }\r\n\r\n        window.top['iCityBridge'].ccworkScanCode({}, callback);\r\n        return subject;\r\n    }\r\n\r\n    getSysInfo() {\r\n\r\n    }\r\n\r\n    getLocation(): Observable<LocationInfo> {\r\n        /**\r\n         *  回调函数\r\n         *  输出结构 object\r\n         *  errormessage:\"\"\r\n         *  result:Object {\r\n         *  addr:'山东省济南市历下区经十路靠近浪潮'\r\n         *  city:\"济南\"\r\n         *  country:\"中国\"\r\n         *  course:-1\r\n         *  district:\"历下区\"\r\n         *  lat:36.66254123263889\r\n         *  lng:117.12974745008681\r\n         *  province:\"山东省\"\r\n         *  street:\"经十路\"\r\n         *  streetNum:\"1单元\"\r\n         * }\r\n         *  status:true\r\n         */\r\n        const subject = new Subject<any>();\r\n\r\n        const callback = (data) => {\r\n            if (data) {\r\n                subject.next(data['result']);\r\n            }\r\n        }\r\n\r\n        window.top['iCityBridge'].ccworkGetLocation(\r\n            callback\r\n        );\r\n        return subject;\r\n    }\r\n\r\n    // TODO:云上协同选择文件\r\n    selectFile(): Observable<[]> {\r\n        const subject = new Subject<any>();\r\n        subject.next([]);\r\n        return subject;\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param number string\r\n     * @param content string\r\n     */\r\n    sendSMS(number: string, content: string): void {\r\n        const options = {\r\n            numbers: [number],\r\n            content\r\n        }\r\n        window.top['iCityBridge'].ccworkSendSms(options)\r\n    }\r\n\r\n    openSendSMS(number: string, content: string): void {\r\n        window.top['iCityBridge'].sendSMS({ tel: number, msg: content })\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param number string\r\n     */\r\n    tel(number: string): void {\r\n        window.top['iCityBridge'].ringUp(number)\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param options \r\n     */\r\n    selectPictureFromAlbum(options: PictureOptions = { maxNum: 9, mType: 0 }): Observable<[]> {\r\n        /**\r\n         * params object \r\n         *  { maxNum : number 9 最大可选数 默认9\r\n         *    mType: number 0 \t选择模式，可选值0/1, 0:图片，1：视频;\r\n         * }\r\n         */\r\n        const subject = new Subject<any>();\r\n\r\n        const callback = (data) => {\r\n            if (data) {\r\n                subject.next(data['result']);\r\n            }\r\n        }\r\n\r\n        window.top['iCityBridge'].ccworkGetPicsFromAlbum(\r\n            options,\r\n            callback\r\n        );\r\n        return subject;\r\n        /**\r\n         *  object\r\n         *  errormessage:\"\"\r\n         *  result:Array [\r\n         * base64\r\n         * ]\r\n         *  status:true\r\n         */\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param options  \r\n     */\r\n    takeVideo(options: VidepOptions): Observable<string> {\r\n        /**\r\n         * params object \r\n         *  { \r\n         *  time : number 短视频时间（秒） 最大60s\r\n         *  quality: number 0 \t视频质量 取值范围0~1\r\n         *  id :string \t视频id（视频名字）\r\n         * }\r\n         */\r\n        const subject = new Subject<any>();\r\n\r\n        const callback = (data) => {\r\n            if (data) {\r\n                subject.next(data['result']);\r\n            }\r\n        }\r\n\r\n        window.top['iCityBridge'].ccworkTakeShortVideo(\r\n            {\r\n                time: 15,\r\n                ...options\r\n            }\r\n            ,\r\n            callback\r\n        );\r\n        return subject;\r\n        /**\r\n         *  object\r\n         *  errormessage:\"\"\r\n         *  result:Object {\r\n         *  value:'path'\r\n         * }\r\n         *  status:true\r\n         */\r\n    }\r\n\r\n    closeWindow(): void {\r\n        window.top['iCityBridge'].closeWebView()\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param title string\r\n     */\r\n    setTitles(title: string): void {\r\n        window.top['iCityBridge'].setTitle(title)\r\n    }\r\n\r\n    downloadFile(options) {\r\n        alert('暂不支持附件下载');\r\n    }\r\n\r\n    setOriginGoback(fn?) {\r\n        window.top['iCityBridge'].ccworkInterceptOriginGoback(!!fn, fn, () => { })\r\n    }\r\n\r\n    pushOriginGoback(fn?: any) {\r\n        window['OriginGoback'] = window['OriginGoback'] || [];\r\n        const OriginGoback = () => {\r\n            const gobackFn = window['OriginGoback'].pop()\r\n            if (gobackFn) {\r\n                gobackFn()\r\n            }\r\n            else {\r\n                window.top['iCityBridge'].ccworkInterceptOriginGoback(false, () => { }, () => { })\r\n                history.back();\r\n            }\r\n        }\r\n        if (fn) {\r\n            window['OriginGoback'].push(fn)\r\n            window.top['iCityBridge'].ccworkInterceptOriginGoback(true, OriginGoback, () => { })\r\n        }\r\n    }\r\n    popOriginGoback(fn?: any) {\r\n        window['OriginGoback'].pop()\r\n    }\r\n\r\n    playShortVideo(opt: any) {\r\n        window.top['iCityBridge'].ccworkPlayShortVideo(opt);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport { CCworkService }","import { switchMap } from 'rxjs/operators';\r\nimport { forkJoin, Observable, Subject } from 'rxjs';\r\nimport { IJsBridgeStrategy, PhotoOptions, PictureOptions, VidepOptions, LocationInfo } from './decorators';\r\n\r\nclass CloudPlusService implements IJsBridgeStrategy {\r\n    playShortVideo(options?: any) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n\r\n    // 目前拍完返回报错\r\n    takePhoto(options: PhotoOptions = {\r\n        quality: 75,\r\n        encodingType: 0,\r\n        targetWidth: 600,\r\n        targetHeight: 600\r\n    }): Observable<[]> {\r\n        const subject = new Subject<any>();\r\n        const callback = (data) => {\r\n            if (data && data['originalData']) {\r\n                subject.next(data['originalData']);\r\n            }\r\n        }\r\n        const errorCallback = (data) => {\r\n            if (data) {\r\n                console.log('takePhoto', data);\r\n                subject.next([]);\r\n                return;\r\n            }\r\n        }\r\n\r\n        window['imp'].iCamera.open(\r\n            options,\r\n            callback,\r\n            errorCallback,\r\n        );\r\n        return subject;\r\n    }\r\n\r\n    scanQRCode(): Observable<string> {\r\n        const subject = new Subject<any>();\r\n\r\n        const callback = (data) => {\r\n            if (data) {\r\n                console.log('二维码回调')\r\n\r\n                subject.next(data);\r\n            }\r\n        }\r\n        console.log('调用二维码')\r\n\r\n        window['imp'].iBarCode.scan(\r\n            callback\r\n        );\r\n        return subject;\r\n    }\r\n\r\n    getLocation(): Observable<LocationInfo> {\r\n        const subject = new Subject<any>();\r\n\r\n        const callback = (data) => {\r\n            if (data) {\r\n                const {\r\n                    latitude,\r\n                    longitude,\r\n                    addr,\r\n                    city,\r\n                    country,\r\n                    district,\r\n                    province,\r\n                    street,\r\n                    streetNum\r\n                } = data\r\n                subject.next({\r\n                    addr,\r\n                    city,\r\n                    country,\r\n                    district,\r\n                    province,\r\n                    street,\r\n                    streetNum,\r\n                    lat: latitude,\r\n                    lng: longitude,\r\n                });\r\n            }\r\n        }\r\n        window['imp'].iGps.getInfo(\r\n            callback\r\n        );\r\n        return subject;\r\n        // iphone 打印输出信息\r\n        /**\r\n         * {latitude:\"36.662413\",longitude:\"117.129769\"}\r\n         */\r\n        // 安卓\r\n        /**\r\n         *  回调函数\r\n         *  输出结构 object\r\n         *  errormessage:\"\"\r\n         *  result:Object {\r\n         *  addr:'山东省济南市历下区经十路靠近浪潮'\r\n         *  city:\"济南\"\r\n         *  country:\"中国\"\r\n         *  course:-1\r\n         *  district:\"历下区\"\r\n         *  lat:36.66254123263889\r\n         *  lng:117.12974745008681\r\n         *  province:\"山东省\"\r\n         *  street:\"经十路\"\r\n         *  streetNum:\"1单元\"\r\n         * }\r\n         *  status:true\r\n         */\r\n    }\r\n\r\n    getSysInfo() {\r\n        const subject = new Subject<any>();\r\n\r\n        const callback = (data) => {\r\n            if (data) {\r\n                subject.next(data);\r\n            }\r\n        }\r\n        window['imp'].iDevice.sysInfo(callback);\r\n        return subject;\r\n    }\r\n\r\n    sendSMS(number: string, content: string): void {\r\n        window['imp'].iSms.send(number, content)\r\n    }\r\n\r\n    openSendSMS(number: string, content: string): void {\r\n        window['imp'].iSms.open(number, content)\r\n    }\r\n\r\n    tel(number: string): void {\r\n        window['imp'].iTel.dial(number)\r\n    }\r\n\r\n    selectPictureFromAlbum(options: PictureOptions = { maxNum: 9, mType: 0 }): Observable<[]> {\r\n        const defaults = {\r\n            num: 9,\r\n            quality: 75,\r\n            destinationType: 0,\r\n            encodingType: 1,\r\n            targetWidth: 600,\r\n            targetHeight: 600\r\n        };\r\n        defaults.num = options.maxNum;\r\n        const subject = new Subject<any>();\r\n\r\n        const callback = (data) => {\r\n            if (data) {\r\n                subject.next(data.map(item => {\r\n                    return item.originalData\r\n                }));\r\n            }\r\n        }\r\n\r\n        const errorCallback = (data) => {\r\n            if (data) {\r\n                console.log('selectPictureFromAlbum', data);\r\n                subject.next([]);\r\n            }\r\n        }\r\n\r\n        window['imp'].iCamera.select(\r\n            { ...defaults, ...options },\r\n            callback,\r\n            errorCallback,\r\n        );\r\n        return subject;\r\n    }\r\n\r\n    private selectFileFromMobile(options: any = { maximum: 6, fileType: '.jpg|.png' }) {\r\n\r\n    }\r\n\r\n    private getBase64(path: string) {\r\n        const subject = new Subject<any>();\r\n\r\n        const callback = (data) => {\r\n            if (data) {\r\n                subject.next(data);\r\n            }\r\n        };\r\n\r\n        const errorCallback = (data) => {\r\n            if (data) {\r\n                console.log('getBase64', data);\r\n                subject.next([]);\r\n            }\r\n        };\r\n\r\n        window['imp'].iFile.getBase64(\r\n            path,\r\n            callback,\r\n            errorCallback,\r\n        );\r\n        return subject;\r\n    }\r\n\r\n    selectFile(options: any = { maximum: 6 }) {\r\n        const subject = new Subject<any>();\r\n        const callback = (data) => {\r\n            if (data && data.length > 0) {\r\n                const paths = [];\r\n                let count = 0;\r\n                data.forEach(dataItem => {\r\n                    window['imp'].iFile.getBase64(\r\n                        dataItem.path,\r\n                        function (bs64) {\r\n                            paths.push({\r\n                                name: data[count].name,\r\n                                size: data[count].size,\r\n                                base64: bs64\r\n                            });\r\n                            count++;\r\n                            if (data.length === paths.length) {\r\n                                // 防止触发多次next  一次性把所有数据抛出去\r\n                                subject.next(paths);\r\n                            }\r\n                        },\r\n                        function (errorMsg) {\r\n                            if (errorMsg) {\r\n                                console.log('getBase64', errorMsg);\r\n                                subject.next([]);\r\n                            }\r\n                        }\r\n                    );\r\n                });\r\n            }\r\n        };\r\n\r\n        const errorCallback = (data) => {\r\n            if (data) {\r\n                console.log('selectFile', data);\r\n                subject.next([]);\r\n            }\r\n        };\r\n        window['imp'].iFile.select(\r\n            { ...options },\r\n            callback,\r\n            errorCallback,\r\n        );\r\n        return subject;\r\n    }\r\n\r\n    takeVideo(options: VidepOptions): Observable<string> {\r\n        let option = { id: options.id }\r\n        if (options.quality) {\r\n            if (options.quality <= 0.5) {\r\n                option['fps'] = 30;\r\n            } else if (options.quality <= 1) {\r\n                option['fps'] = 60;\r\n            }\r\n        } else {\r\n            option['fps'] = 30;\r\n        }\r\n        const subject = new Subject<any>();\r\n\r\n        const callback = (data) => {\r\n            if (data) {\r\n                subject.next(data);\r\n            }\r\n        }\r\n\r\n        const errorCallback = (data) => {\r\n            if (data) {\r\n                console.log('takeVideo', data);\r\n                subject.next([]);\r\n            }\r\n        }\r\n        window['imp'].iVideo.record(\r\n            option,\r\n            callback,\r\n            errorCallback,\r\n        );\r\n        return subject;\r\n    }\r\n\r\n    closeWindow(): void {\r\n        window['imp'].iWindow.close();\r\n    }\r\n\r\n    setTitles(title: string): void {\r\n        document.title = title;\r\n    }\r\n\r\n    downloadFile(options) {\r\n        const subject = new Subject<any>();\r\n        const callback = (data) => {\r\n            if (data.status !== 1) {\r\n                console.log(data);\r\n            }\r\n            subject.next(true);\r\n        }\r\n        window['imp'].iFile.download(options, callback);\r\n        return subject;\r\n    }\r\n\r\n\r\n\r\n    setOriginGoback(fn?: any) {\r\n        const isAGreaterThanB = (parameA: string[], parameB: string[]) => {\r\n            const length = parameA.length > parameB.length ? parameB.length : parameA.length;\r\n            for (let i = 0; i < length; i++) {\r\n                if (parseInt(parameB[i]) > parseInt(parameA[i])) {\r\n                    return false\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        const setFunction = () => {\r\n            if (fn) {\r\n                window['imp'].iWindow.onBackKeyDown2(fn);\r\n                isAGreaterThanB(currentVersion.split('.'), minVersion.split('.')) && window['imp'].iWindow.onTitleBackKeyDown2(fn);\r\n            } else {\r\n                window['imp'].iWindow.cancelBackKeyDown();\r\n                isAGreaterThanB(currentVersion.split('.'), minVersion.split('.')) && window['imp'].iWindow.cancelTitleBackKeyDown();\r\n            }\r\n        }\r\n        let minVersion = '4.8.21';\r\n        let currentVersion = window['CURRENT_VERSION'];\r\n        if(currentVersion){\r\n            setFunction();\r\n        }else{\r\n            window['imp'].iDevice.sysInfo((info) => {\r\n                const newVersion = info.appVersion.split('-');\r\n                window['CURRENT_VERSION'] = newVersion[0];\r\n                currentVersion = window['CURRENT_VERSION'];\r\n                setFunction();\r\n            })\r\n        }\r\n    }\r\n\r\n    pushOriginGoback(fn?: any) {\r\n        window['OriginGoback'] = window['OriginGoback'] || [];\r\n        const OriginGoback = () => {\r\n            const gobackFn = window['OriginGoback'].pop()\r\n            if (gobackFn) {\r\n                gobackFn()\r\n            }\r\n            else {\r\n                window['imp'].iWindow.cancelBackKeyDown();\r\n                window['imp'].iWindow.cancelTitleBackKeyDown();\r\n                history.back();\r\n            }\r\n        }\r\n        if (fn) {\r\n            window['OriginGoback'].push(fn)\r\n            window['imp'].iWindow.onBackKeyDown2(OriginGoback);\r\n            window['imp'].iWindow.onTitleBackKeyDown2(OriginGoback);\r\n        }\r\n    }\r\n\r\n    popOriginGoback() {\r\n        window['OriginGoback'].pop()\r\n    }\r\n}\r\n\r\nexport { CloudPlusService }","import { IJsBridgeStrategy } from './decorators';\r\nimport { CCworkService } from './ccwork-service';\r\nimport { CloudPlusService } from './cloud-plus-service';\r\nclass JsBridgeStrategyFactory {\r\n\r\n    create(): IJsBridgeStrategy {\r\n        if (navigator.userAgent.toLowerCase().search('ccwork') !== -1) {\r\n            window.top['FARRIS_JSBridge'] = '云上协同'\r\n            return new CCworkService()\r\n        } else if( navigator.userAgent.toLowerCase().search('emmcloud') !== -1) {\r\n            window.top['FARRIS_JSBridge'] = '云加'\r\n            return new CloudPlusService()\r\n        } else {\r\n            window.top['FARRIS_JSBridge'] = '浏览器'\r\n            return new CloudPlusService()\r\n        }\r\n    }\r\n}\r\n\r\nexport { JsBridgeStrategyFactory }","import { JsBridgeStrategyFactory } from './js-bridge-strategy-factory'\r\nimport { IJsBridgeStrategy, PictureOptions, PhotoOptions, VidepOptions } from './decorators';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\ndeclare const System: any;\r\n\r\nclass JsBridgeService implements IJsBridgeStrategy {\r\n\r\n    constructor() {\r\n        this.jsBridgeStrategyFactory = new JsBridgeStrategyFactory();\r\n        this.init();\r\n    }\r\n\r\n    getSysInfo() {\r\n        return this.getJsBridgeService(this.strategy.getSysInfo);\r\n    }\r\n\r\n\r\n    private strategy: IJsBridgeStrategy;\r\n\r\n    private jsBridgeStrategyFactory: JsBridgeStrategyFactory;\r\n\r\n    private init() {\r\n        this.strategy = this.jsBridgeStrategyFactory.create();\r\n        window['JsBridgeService'] = this\r\n    }\r\n\r\n    takePhoto(options: PhotoOptions): Observable<[]> {\r\n        return this.getJsBridgeService(this.strategy.takePhoto, options);\r\n    }\r\n    scanQRCode(): Observable<string> {\r\n        return this.getJsBridgeService(this.strategy.scanQRCode);\r\n    }\r\n    getLocation(): Observable<any> {\r\n        return this.getJsBridgeService(this.strategy.getLocation);\r\n    }\r\n    sendSMS(number: string, content: string): void {\r\n        return this.getJsBridgeService(this.strategy.sendSMS, number, content);\r\n    }\r\n    openSendSMS(number: string, content: string): void {\r\n        return this.getJsBridgeService(this.strategy.openSendSMS, number, content);\r\n    }\r\n    tel(number: string): void {\r\n        return this.getJsBridgeService(this.strategy.tel, number);\r\n    }\r\n    selectPictureFromAlbum(options: PictureOptions): Observable<[]> {\r\n        return this.getJsBridgeService(this.strategy.selectPictureFromAlbum, options);\r\n    }\r\n    takeVideo(options: VidepOptions): Observable<string> {\r\n        return this.getJsBridgeService(this.strategy.takeVideo, options);\r\n    }\r\n    closeWindow(): void {\r\n        return this.getJsBridgeService(this.strategy.closeWindow);\r\n    }\r\n    setTitles(title: string): void {\r\n        return this.getJsBridgeService(this.strategy.setTitles, title);\r\n    }\r\n\r\n    selectFile(options?: any): any {\r\n        return this.getJsBridgeService(this.strategy.selectFile, options);\r\n    }\r\n\r\n    downloadFile(options: any) {\r\n        return this.getJsBridgeService(this.strategy.downloadFile, options);\r\n    }\r\n\r\n    setOriginGoback(fn?: any) {\r\n        return this.getJsBridgeService(this.strategy.setOriginGoback, fn);\r\n    }\r\n\r\n    pushOriginGoback(fn?: any) {\r\n        return this.getJsBridgeService(this.strategy.pushOriginGoback, fn);\r\n    }\r\n    popOriginGoback(fn?: any) {\r\n        return this.getJsBridgeService(this.strategy.popOriginGoback, fn);\r\n    }\r\n    playShortVideo(fn?: any) {\r\n        return this.getJsBridgeService(this.strategy.playShortVideo, fn);\r\n    }\r\n\r\n\r\n    private getJsBridgeService(method, ...values) {\r\n        const subject = new Subject<any>();\r\n\r\n        // 已经存在方法实例即结束返回\r\n        if (window.top['FARRIS_JSBridge'] === '已加载') {\r\n            return method(...values)\r\n        }\r\n\r\n        // 判断是否为云上协同环境\r\n        if (window.top['FARRIS_JSBridge'] === '云上协同') {\r\n            if (window.top['iCityBridge']) {\r\n                return method(...values)\r\n            } else {\r\n                var ccwork = window.top.document.createElement(\"script\")\r\n                ccwork.src = 'https://ccwork.oss.cn-north-3.inspurcloudoss.com/h5/ccworkJsbridge.js'\r\n                ccwork.onload = function () {\r\n                    window.top['iCityBridge'].init(() => {\r\n                        method(...values).subscribe(\r\n                            (e) => { subject.next(e) }\r\n                        )\r\n                    })\r\n                };\r\n                window.top.document.head.appendChild(ccwork);\r\n            }\r\n        }\r\n\r\n        // 当前没有针对云+的判断，前置环境不满足即默认云+环境\r\n        if (window.top['FARRIS_JSBridge'] === '云加') {\r\n            System\r\n                .import('/platform/common/web/imp.js')\r\n                .then(\r\n                    (e) => {\r\n                        window.top['FARRIS_JSBridge'] = '已加载';\r\n                        method(...values).subscribe(\r\n                            (e) => { subject.next(e) }\r\n                        )\r\n                    }\r\n                )\r\n        }\r\n        return subject;\r\n    }\r\n\r\n}\r\n\r\nexport { JsBridgeService }","import { JsBridgeService } from './js-bridge-service/index';\r\n\r\n/**\r\n * 帮助映射服务\r\n */\r\nexport class HistoryBackService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  init() {\r\n    window['MOBILE_ORIGIN_BACK_ARRAY'] = window['MOBILE_ORIGIN_BACK_ARRAY'] || []\r\n    window['MOBILE_ORIGIN_BACK'] = {\r\n      pushOriginGoback(fn) {\r\n        window['MOBILE_ORIGIN_BACK_ARRAY'].push(fn);\r\n      },\r\n      popOriginGoback() {\r\n        window['MOBILE_ORIGIN_BACK_ARRAY'].pop();\r\n      },\r\n      reflushOriginGoback() {\r\n        window['MOBILE_ORIGIN_BACK_ARRAY'] = []\r\n      }\r\n    }\r\n  }\r\n\r\n  pushOriginGoback(fn) {\r\n    window['MOBILE_ORIGIN_BACK_ARRAY'].push(fn);\r\n  }\r\n\r\n  popOriginGoback() {\r\n    window['MOBILE_ORIGIN_BACK_ARRAY'].pop();\r\n  }\r\n\r\n  reflushOriginGoback() {\r\n    window['MOBILE_ORIGIN_BACK_ARRAY'] = []\r\n  }\r\n\r\n  proxyBack() {\r\n    if (!( navigator.userAgent.toLowerCase().search('emmcloud') !== -1)){\r\n      return ;\r\n    }\r\n    if (window.top.location.pathname.indexOf('mobiletaskcenter') > -1) {\r\n      setTimeout(()=> {\r\n        window.top['detailBackBtnClickHandler'] = (back) => {\r\n          const gobackFn = window['MOBILE_ORIGIN_BACK_ARRAY'].pop()\r\n          if (gobackFn) {\r\n            gobackFn();\r\n            return false;\r\n          } else {\r\n            const key = location.pathname + location.hash.slice(0, location.hash.indexOf('?'));\r\n            let need_go_back = sessionStorage.getItem(key);\r\n            if (!need_go_back) {\r\n              return true;\r\n            }\r\n            history.back()\r\n            return false;\r\n          }\r\n        }\r\n      }, 0)\r\n\r\n    } else {\r\n      const _close = () => {\r\n        const gobackFn = window['MOBILE_ORIGIN_BACK_ARRAY'].pop()\r\n        if (gobackFn) {\r\n          gobackFn()\r\n        } else {\r\n          history.back()\r\n        }\r\n      }\r\n      const jsBridgeService = new JsBridgeService();\r\n      jsBridgeService.setOriginGoback(_close)\r\n    }\r\n  }\r\n\r\n\r\n\r\n}","import { Observable, EMPTY } from 'rxjs';\r\nimport { ViewModelContext } from '@farris/mobile-devkit';\r\n\r\nconst NOOP = 'noop';\r\n\r\n/**\r\n * 命令服务\r\n */\r\nclass CommandService {\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(private viewModelContext: ViewModelContext) {}\r\n\r\n  /**\r\n   * 执行命令\r\n   * @param commandName 命令名称\r\n   * @param viewModelId 视图模型id\r\n   */\r\n  public execute(commandName: string, viewModelId?: string): Observable<any> {\r\n    if (!commandName || commandName === '' || commandName === 'undefined') {\r\n      return EMPTY;\r\n    }\r\n\r\n    // 空操作\r\n    if (commandName.toLocaleLowerCase() === NOOP) {\r\n      return EMPTY;\r\n    }\r\n\r\n    let viewModel = this.viewModelContext.viewModel;\r\n    if (viewModelId) {\r\n      const appContext = this.viewModelContext.appContext;\r\n      const targetViewModelContext = appContext.viewModelContextManager.getContextById(viewModelId);\r\n      viewModel = targetViewModelContext.viewModel;\r\n    }\r\n    return viewModel[commandName]();\r\n  }\r\n\r\n}\r\n\r\nexport { CommandService };\r\n","import { ViewModelContext, StateMachine } from '@farris/mobile-devkit';\r\nimport {  EMPTY } from 'rxjs';\r\n/**\r\n * 状态机服务\r\n */\r\nclass StateMachineService {\r\n\r\n    constructor(private viewModelContext: ViewModelContext) {\r\n    }\r\n\r\n    /**\r\n     * 执行状态迁移动作\r\n     */\r\n    executeAction(action: string) {\r\n      if (!action) {\r\n        return EMPTY;\r\n      }\r\n\r\n      if (typeof this.viewModelContext.stateMachine[action] !== 'function') {\r\n        return EMPTY;\r\n      }\r\n      \r\n      this.viewModelContext.stateMachine[action]();\r\n    }\r\n}\r\n\r\nexport { StateMachineService };\r\n","/**\r\n * UI状态机服务\r\n */\r\nclass UIStateService {\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor() {\r\n  }\r\n\r\n}\r\n\r\nexport { UIStateService };\r\n","import { ViewModelContext, Entity } from '@farris/mobile-devkit';\r\nimport { BefRepository } from '@farris/mobile-bef';\r\n\r\n/**\r\n * VO变量访问服务\r\n */\r\nclass VoVariableService {\r\n\r\n  /**\r\n   * 视图对象上下文\r\n   */\r\n  private viewModelContext: ViewModelContext;\r\n\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(viewModelContext: ViewModelContext) {\r\n    this.viewModelContext = viewModelContext;\r\n  }\r\n\r\n  /**\r\n   * 设置变量值\r\n   */\r\n  public setValue(name: string, value: any): void {\r\n    const befRepository = this.viewModelContext.repository as BefRepository<Entity>;\r\n    befRepository.variableManager.setValue(name, value);\r\n  }\r\n\r\n  /**\r\n   * 获取变量值\r\n   */\r\n  public getValue(name: string): void {\r\n    const befRepository = this.viewModelContext.repository as BefRepository<Entity>;\r\n    befRepository.variableManager.getValue(name);\r\n  }\r\n\r\n}\r\n\r\nexport { VoVariableService };\r\n","import { UploadFileInfo, AttachmentInfo } from './types';\r\n\r\n/**\r\n * 附件信息处理工具类\r\n */\r\nclass AttachmentUtil {\r\n\r\n  /**\r\n   * 转换为附件信息数组\r\n   */\r\n  public static convertToAttachmentInfos(fileInfos: UploadFileInfo[]): AttachmentInfo[] {\r\n    if (!fileInfos) {\r\n      return [];\r\n    }\r\n    const attachmentInfos: AttachmentInfo[] = fileInfos.map((fileInfo: UploadFileInfo) => {\r\n      return this.convertToAttachmentInfo(fileInfo);\r\n    });\r\n    return attachmentInfos;\r\n  }\r\n\r\n  /**\r\n   * 转换为附件信息\r\n   */\r\n  public static convertToAttachmentInfo(fileInfo: UploadFileInfo): AttachmentInfo {\r\n    const attachmentInfo: AttachmentInfo = {\r\n      attachmentId: fileInfo.metadataId,\r\n      fileName: fileInfo.fileName\r\n    };\r\n    return attachmentInfo;\r\n  }\r\n\r\n  /**\r\n   * 获取附件列表中的第一个附件\r\n   */\r\n  public static getFirstAttachmentInfo(attachmentInfos: AttachmentInfo[]) {\r\n    if (!attachmentInfos || attachmentInfos.length === 0) {\r\n      return;\r\n    }\r\n    const firstAttachmentInfo = attachmentInfos[0];\r\n    return firstAttachmentInfo;\r\n  }\r\n\r\n  /**\r\n   * 提取附件id数组\r\n   */\r\n  public static peekAttachmentIds(attachmentInfos: AttachmentInfo[]) {\r\n    if (!attachmentInfos) {\r\n      attachmentInfos = [];\r\n    }\r\n    const attachmentIds = attachmentInfos.map((attachmentInfo: AttachmentInfo) => {\r\n      return attachmentInfo.attachmentId;\r\n    });\r\n\r\n    return attachmentIds;\r\n  }\r\n\r\n}\r\n\r\nexport { AttachmentUtil };\r\n","import { Observable, of } from 'rxjs';\r\nimport { tap, switchMap, map } from 'rxjs/operators';\r\nimport { HttpRequestConfig, HttpMethods, Entity, ViewModelContext, BindingData, BindingPathConverter, DataChangeType } from '@farris/mobile-devkit';\r\nimport { BefRepository, BefDataPathUtil } from '@farris/mobile-bef';\r\nimport { AttachmentInfo, ServerAttachmentInfo } from './types';\r\nimport { AttachmentUtil } from './attachment.util';\r\n\r\n/**\r\n * 附件数据服务\r\n */\r\nclass AttachmentDataService {\r\n\r\n  /**\r\n   * ViewModel上下文\r\n   */\r\n  private viewModelContext: ViewModelContext\r\n\r\n  /**\r\n   * 实体仓库\r\n   */\r\n  private get befRepository(): BefRepository<Entity> {\r\n    return this.viewModelContext.repository as BefRepository<Entity>;\r\n  }\r\n\r\n  /**\r\n   * 绑定数据\r\n   */\r\n  private get bindingData(): BindingData {\r\n    return this.viewModelContext.bindingData;\r\n  }\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(viewModelContext: ViewModelContext) {\r\n    this.viewModelContext = viewModelContext;\r\n  }\r\n\r\n  /**\r\n   * 更新附件信息\r\n   */\r\n  public updateRow(attachmentInfoFieldPath: string, attachmentInfo: AttachmentInfo): Observable<any> {\r\n    const apiProxy = this.befRepository.apiProxy;\r\n    const updateUrl = `${apiProxy.baseUrl}/service/updateattachment`;\r\n    const serverAttachInfo = this.createUpdateAttachInfo(attachmentInfoFieldPath, attachmentInfo);\r\n    const body = {\r\n      updateAttachInfo: serverAttachInfo\r\n    };\r\n    const requestConfig: HttpRequestConfig = {\r\n      body: body\r\n    };\r\n\r\n    console.log('loading show ...');\r\n    return apiProxy.request(HttpMethods.PUT, updateUrl, requestConfig).pipe(\r\n      switchMap((result: any) => {\r\n        return this.syncAttachmentInfosToClient();\r\n      }),\r\n      tap(() => {\r\n        console.log('loading hide ...');\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 批量创建附件行数据\r\n   */\r\n  public updateRows(attachmentInfoFieldPath: string, attachmentInfos: AttachmentInfo[]): Observable<any> {\r\n    const apiProxy = this.befRepository.apiProxy;\r\n    const updateUrl = `${apiProxy.baseUrl}/service/batchuploadattachment`;\r\n    const serverAttachInfo = this.createBatchCreateAttachInfo(attachmentInfoFieldPath, attachmentInfos);\r\n    const isRootEntity = serverAttachInfo.NodeCodes.length === 0;\r\n\r\n    const body = {\r\n      batchUploadInfo: serverAttachInfo\r\n    };\r\n    const requestConfig: HttpRequestConfig = {\r\n      body: body\r\n    };\r\n\r\n    console.log('loading show ...');\r\n    return apiProxy.request(HttpMethods.PUT, updateUrl, requestConfig).pipe(\r\n      switchMap((result: any) => {\r\n        return this.appendAttachmentInfosToClient(result, isRootEntity);\r\n      }),\r\n      tap(() => {\r\n        console.log('hide loading ...');\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 创建服务器端需要的更新信息\r\n   */\r\n  private createUpdateAttachInfo(attachmentInfoFieldPath: string, attachmentInfo: AttachmentInfo): ServerAttachmentInfo {\r\n\r\n    const attachmentId = attachmentInfo.attachmentId;\r\n    const parentBindingPathArray = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);\r\n    parentBindingPathArray.pop();\r\n    const nodeCodes = BefDataPathUtil.convertToObjectCodes(parentBindingPathArray, this.bindingData);\r\n    const hiretryIds = BefDataPathUtil.convertToDataIdsForUpdate(parentBindingPathArray, this.bindingData);\r\n\r\n    const serverAttachInfo: ServerAttachmentInfo = {\r\n      NodeCodes: nodeCodes,\r\n      HiretryIds: hiretryIds,\r\n      AttachmentIds: [attachmentId],\r\n      AttachmentId: attachmentId\r\n    };\r\n\r\n    return serverAttachInfo;\r\n  }\r\n\r\n  /**\r\n   * 创建服务器端需要的批量新增附件信息\r\n   */\r\n  private createBatchCreateAttachInfo(attachmentInfoFieldPath: string, attachmentInfo: AttachmentInfo[]): ServerAttachmentInfo {\r\n    const attachmentIds = AttachmentUtil.peekAttachmentIds(attachmentInfo);\r\n\r\n    const parentBindingPathArray = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);\r\n    parentBindingPathArray.pop();\r\n    const nodeCodes = BefDataPathUtil.convertToObjectCodes(parentBindingPathArray, this.bindingData);\r\n    const hiretryIds = BefDataPathUtil.convertToDataIdsForAdd(parentBindingPathArray, this.bindingData);\r\n\r\n    const serverAttachInfo = {\r\n      NodeCodes: nodeCodes,\r\n      HiretryIds: hiretryIds,\r\n      AttachmentIds: attachmentIds,\r\n      AttachmentId: null\r\n    };\r\n\r\n    return serverAttachInfo;\r\n  }\r\n\r\n  /**\r\n   * 同步服务器端最新信息到客户端\r\n   * @todo:\r\n   * 1、主对象批量新增时不支持\r\n   */\r\n  public syncAttachmentInfosToClient() {\r\n    const rootDataId = this.bindingData.list.currentId;\r\n    return this.befRepository.updateEntityById(rootDataId);\r\n  }\r\n\r\n  /**\r\n   * 追击主表数据到客户端\r\n   */\r\n  public appendAttachmentInfosToClient(listData: any[], isRootEntity: boolean): Observable<any[]> {\r\n    if (isRootEntity === true) {\r\n      const entities = this.befRepository.buildEntities(listData);\r\n      this.befRepository.entityCollection.addEntities(entities);\r\n      return of(listData);\r\n    } else {\r\n      return this.syncAttachmentInfosToClient().pipe(\r\n        map(() => {\r\n          this.befRepository.dataChangeHistory.addChange({ dataId: listData[0].id, changeType: DataChangeType.Add });\r\n          return listData;\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { AttachmentDataService };\r\n","import { Observable, EMPTY, forkJoin } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { ViewModelContext, CommandContext, BindingPathConverter } from '@farris/mobile-devkit';\r\nimport { UploadFileInfo } from './types';\r\nimport { AttachmentUtil } from './attachment.util';\r\nimport { AttachmentDataService } from './attachment-data.service';\r\nimport { EntityService } from '../entity-services/index';\r\nimport { RemoveDataService } from '../data-services/remove-data.service';\r\n\r\n\r\n/**\r\n * 附件服务\r\n */\r\nclass AttachmentService {\r\n\r\n  /**\r\n   * 默认根目录\r\n   */\r\n  private defaultRootDirId = 'default-root';\r\n\r\n  /**\r\n   * 默认子目录\r\n   */\r\n  private get defaultParentDirName(): string {\r\n    return this.viewModelContext.bindingData.list.currentId;\r\n  }\r\n\r\n  /**\r\n   * 视图模型\r\n   */\r\n  private viewModelContext: ViewModelContext;\r\n\r\n  /**\r\n   * 附件数据服务\r\n   */\r\n  private attachDataService: AttachmentDataService;\r\n\r\n  /**\r\n   * 实体服务\r\n   */\r\n  private entityService: EntityService;\r\n\r\n  /**\r\n   * 实体服务\r\n   */\r\n  private removeDataService: RemoveDataService;\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(\r\n    viewModelContext: ViewModelContext, entityService: EntityService,\r\n    removeDataService: RemoveDataService, attachDataService: AttachmentDataService\r\n  ) {\r\n\r\n    this.viewModelContext = viewModelContext;\r\n    this.attachDataService = attachDataService;\r\n    this.entityService = entityService;\r\n    this.removeDataService = removeDataService;\r\n  }\r\n\r\n  /**\r\n   * 上传单个文件\r\n   * @param attachmentIdPath 附件内码字段的路径，形如/attachInfo/attachmentId；\r\n   * @param attachmentNamePath 附件名称字段的路径\r\n   */\r\n  public uploadAndUpdateRow(attachmentInfoFieldPath: string, rootDirId?: string, parentDirName?: string): Observable<any> {\r\n    const rootId = rootDirId ? rootDirId : this.defaultRootDirId;\r\n    const formId = parentDirName ? parentDirName : this.defaultParentDirName;\r\n    if (!rootId || !formId) {\r\n      throw new Error('rootDirId和parentDirName不能为空，请填写');\r\n    }\r\n\r\n    const fileInfos = this.getUploadFileInfosFromContext();\r\n    const attachmentInfos = AttachmentUtil.convertToAttachmentInfos(fileInfos);\r\n    if (!attachmentInfos || attachmentInfos.length === 0) {\r\n      alert('请先上传附件');\r\n      return EMPTY;\r\n    }\r\n\r\n    // 更新服务器端\r\n    console.log('show loading ...');\r\n    const firstAttachmentInfo = AttachmentUtil.getFirstAttachmentInfo(attachmentInfos);\r\n    const result$ = this.attachDataService.updateRow(attachmentInfoFieldPath, firstAttachmentInfo).pipe(\r\n      tap(() => {\r\n        console.log('hide loading ...');\r\n      })\r\n    );\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * 上传多个文件\r\n   */\r\n  public uploadAndBatchAddRows(attachmentInfoFieldPath: string, rootDirId?: string, parentDirName?: string): Observable<any> {\r\n    const rootId = rootDirId ? rootDirId : this.defaultRootDirId;\r\n    const formId = parentDirName ? parentDirName : this.defaultParentDirName;\r\n    if (!rootId || !formId) {\r\n      throw new Error('rootDirId和parentDirName不能为空，请填写');\r\n    }\r\n\r\n    const fileInfos = this.getUploadFileInfosFromContext();\r\n    const attachmentInfos = AttachmentUtil.convertToAttachmentInfos(fileInfos);\r\n    if (!attachmentInfos || attachmentInfos.length === 0) {\r\n      alert('请先上传附件');\r\n      return EMPTY;\r\n    }\r\n\r\n    // 更新服务器端\r\n    console.log('show loading ...');\r\n    const result$ = this.attachDataService.updateRows(attachmentInfoFieldPath, attachmentInfos).pipe(\r\n      tap(() => {\r\n        console.log('hide loading ...');\r\n      })\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * 批量删除附件所在的行\r\n   */\r\n  public removeAttachmentRows(attachmentInfoFieldPath: string): Observable<any> {\r\n    if (!attachmentInfoFieldPath) {\r\n      return EMPTY;\r\n    }\r\n    const dataIds = this.getDataIdsToRemove(attachmentInfoFieldPath);\r\n    //如果是主表\r\n    if (attachmentInfoFieldPath.split('/').length <= 2) {\r\n      return this.removeDataService.removeByIds(dataIds);\r\n    }\r\n    // 如果是子表\r\n    else {\r\n      const removeObservables: Observable<any>[] = [];\r\n      if (dataIds.length === 0) {\r\n        alert('请选择要删除的文件');\r\n      }\r\n      const bindingListPath = this.getBindingListPathWithAttachments(attachmentInfoFieldPath);\r\n      dataIds.forEach((dataId: string) => {\r\n        const removeObservable = this.removeDataService.removeByPathAndId(bindingListPath, dataId);\r\n        removeObservables.push(removeObservable);\r\n      });\r\n      return forkJoin(removeObservables);\r\n    }\r\n  }\r\n\r\n  // #region 工具方法\r\n  /**\r\n   * 从上下文中中获取控件传递的附件信息\r\n   */\r\n  private getUploadFileInfosFromContext(): UploadFileInfo[] {\r\n    const commandContext = this['context'] as CommandContext;\r\n    const uploadFileInfos = commandContext.eventParams as UploadFileInfo[];\r\n    if (!uploadFileInfos) {\r\n      return [];\r\n    }\r\n    return uploadFileInfos;\r\n  }\r\n\r\n  /**\r\n   * 获取要删除的附件对应的数据id数组\r\n   */\r\n  public getDataIdsToRemove(attachmentInfoFieldPath: string) {\r\n    const attachIds = this.getAttachmentIdsToRemoveFromContext();\r\n    const dataIds: string[] = [];\r\n    attachIds.forEach((attachId: string) => {\r\n\r\n      // 上传删除和预览删除传递过来的fileId的key可能不一致，要做兼容\r\n      const dataId = this.convertAttachmentIdToDataId(attachId, attachmentInfoFieldPath);\r\n      dataIds.push(dataId);\r\n    });\r\n    return dataIds;\r\n  }\r\n\r\n  /**\r\n   * 从命令上下文中获取要删除附件ids\r\n   */\r\n  public getAttachmentIdsToRemoveFromContext() {\r\n    const commandContext = this['context'] as CommandContext;\r\n    return commandContext.eventParams as string[];\r\n  }\r\n\r\n  /**\r\n   * 根据路径获取附件字段值数组\r\n   * @param fieldPath 字段路径\r\n   */\r\n  private convertAttachmentIdToDataId(fileId: string, attachmentInfoFieldPath: string): string {\r\n\r\n    // 解析路径\r\n    const attachInfoBindingPath = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);\r\n    const attachFieldName = attachInfoBindingPath.pop();\r\n    const attachListBindingPath = attachInfoBindingPath;\r\n\r\n    // 获取附件id数组\r\n    const entityListData = this.entityService.getEntityListData(attachListBindingPath);\r\n    const targetEntityData = entityListData.find((entityData: any) => {\r\n      if (entityData[attachFieldName]) {\r\n        const attachmentId = entityData[attachFieldName]['attachmentId'];\r\n        if (attachmentId === fileId) {\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n\r\n    return targetEntityData.id;\r\n  }\r\n\r\n  /**\r\n   * 获取带附件的BindingList的Path\r\n   */\r\n  private getBindingListPathWithAttachments(attachmentInfoFieldPath: string) {\r\n    const attachInfoBindingPath = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);\r\n    attachInfoBindingPath.pop();\r\n    const bindingListPath = attachInfoBindingPath;\r\n    return '/' + bindingListPath.join('/');\r\n  }\r\n\r\n  // #endregion\r\n\r\n}\r\n\r\nexport { AttachmentService };\r\n","import { ViewModelContext } from '@farris/mobile-devkit';\r\nimport { Subject } from 'rxjs';\r\nexport class CcWorkService {\r\n    // public location$ = new Subject();\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 云上协同关闭页面\r\n     */\r\n    closeCcWorkWebView() {\r\n        window['iCityBridge'].closeWebView();\r\n    }\r\n\r\n    /**\r\n     * 云上协同隐藏标题栏\r\n     */\r\n    hideCcWorkNaviBar() {\r\n        window['iCityBridge'].hideTitleBar();\r\n    }\r\n\r\n    /**\r\n     *  云上协同更改标题栏\r\n     */\r\n    setTitle(title: string) {\r\n        window['iCityBridge'].setTitle(title);\r\n    }\r\n\r\n    /**\r\n     * 获取当前位置\r\n     * @param callBack(data) 回调函数 \r\n     */\r\n    getLocation(callBack) {\r\n        if (window['iCityBridge']) {\r\n            window['iCityBridge'].ccworkGetLocation(callBack);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取二维码\r\n     * @param callBack(data) 回调函数 \r\n     * @param params 配置项 \r\n     */\r\n    scanCode(callBack, params = {}) {\r\n        if (window['iCityBridge']) {\r\n            const paramsObj = {\r\n                filters: [\r\n                    'QR', 'EAN13', 'EAN8'\r\n                ],\r\n                path: '',\r\n                ...params\r\n            };\r\n            window['iCityBridge'].ccworkScanCode(paramsObj, callBack);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 云上协同调用拨号\r\n     * @param phoneNumber 手机号\r\n     * @param callBack(data) 回调函数 \r\n     */\r\n    callPhone(phoneNumber: string, callback) {\r\n        if (window['iCityBridge']) {\r\n            const params = {\r\n                number: phoneNumber\r\n            };\r\n            window['iCityBridge'].ccworkCallPhone(params, callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从相机和相册中获取照片\r\n     * @param params \r\n     * @param callback \r\n     */\r\n    getPicsFromCameraAndAlbum(params, callback) {\r\n        if (window['iCityBridge']) {\r\n            window['iCityBridge'].ccworkGetPicsFromCameraAndAlbum(params, callback);\r\n        }\r\n    }\r\n\r\n}\r\n","import { StaticMap } from \"./static-map\";\r\n\r\nexport class MapService {\r\n    constructor() {\r\n\r\n    }\r\n    getStaticMap(options: StaticMap) {\r\n        if (!options) {\r\n            return;\r\n        }\r\n        // location是必填的\r\n        if (!options.location) {\r\n            return;\r\n        }\r\n        if (!options.key) {\r\n            // 默认key\r\n            options.key = 'e01c849062d312e0cbeb2beb1f28ef71';\r\n        }\r\n        if (!options.zoom) {\r\n            options.zoom = 10;\r\n        }\r\n        if (!options.size) {\r\n            options.size = {\r\n                width: 400,\r\n                height: 400\r\n            };\r\n        }\r\n        const markers = options.markers;\r\n        let markersStr = '';\r\n        if (markers && markers.length) {\r\n            // 地图标记\r\n            markersStr = markers.reduce((total, next, index) => {\r\n                total += (next.longtitude + ',' + next.latitude + ';');\r\n                return total;\r\n            }, '');\r\n            if (!options.markerSize) {\r\n                options.markerSize = 'mid';\r\n            }\r\n            if (!options.markerColor) {\r\n                /* 默认红色 */\r\n                options.markerColor = '';\r\n            }\r\n            if (markersStr) {\r\n                markersStr = `&markers=${options.markerSize},${options.markerColor},A:${markersStr.substring(0, markersStr.length - 1)}`;\r\n            }\r\n        }\r\n        let longitude: string | number = options.location.longtitude;\r\n        let latitude: string | number = options.location.latitude;\r\n        // 处理location的小数点后几位  最长保留6位\r\n        const longitudeStr = longitude.toString();\r\n        const latitudeStr = latitude.toString();\r\n        if (longitudeStr.substring(longitudeStr.indexOf('.') + 1).length > 6) {\r\n            longitude = longitude.toFixed(6);\r\n        }\r\n        if (latitudeStr.substring(latitudeStr.indexOf('.') + 1).length > 6) {\r\n            latitude = latitude.toFixed(6);\r\n        }\r\n        return 'https://restapi.amap.com/v3/staticmap' +\r\n            '?location=' + longitude + ',' + latitude +\r\n            '&zoom=' + options.zoom +\r\n            '&size=' + options.size.width + '*' + options.size.height +\r\n            markersStr +\r\n            '&key=' + options.key;\r\n    }\r\n}\r\n","import { ChangeDetail, ChangeDetailType } from '@farris/mobile-bef';\r\nimport { BusinessUploadFileInfo, BusinessAttachmentInfo } from './types';\r\n\r\n\r\n/**\r\n * 附件信息处理工具类\r\n */\r\nclass AttachmentUtil {\r\n\r\n  /**\r\n   * 转换为附件信息数组\r\n   */\r\n  public static convertToAttachmentInfos(fileInfos: BusinessUploadFileInfo[]): BusinessAttachmentInfo[] {\r\n    if (!fileInfos) {\r\n      return [];\r\n    }\r\n    const attachmentInfos: BusinessAttachmentInfo[] = fileInfos.map((fileInfo: BusinessUploadFileInfo) => {\r\n      return this.convertToAttachmentInfo(fileInfo);\r\n    });\r\n    return attachmentInfos;\r\n  }\r\n\r\n  /**\r\n   * 转换为附件信息\r\n   */\r\n  public static convertToAttachmentInfo(fileInfo: BusinessUploadFileInfo): BusinessAttachmentInfo {\r\n    const attachmentInfo: BusinessAttachmentInfo = {\r\n      attachmentId: fileInfo.metadataId,\r\n      fileName: fileInfo.fileName\r\n    };\r\n    return attachmentInfo;\r\n  }\r\n\r\n  /**\r\n   * 获取附件列表中的第一个附件\r\n   */\r\n  public static getFirstAttachmentInfo(attachmentInfos: BusinessAttachmentInfo[]) {\r\n    if (!attachmentInfos || attachmentInfos.length === 0) {\r\n      return;\r\n    }\r\n    const firstBusinessAttachmentInfo = attachmentInfos[0];\r\n    return firstBusinessAttachmentInfo;\r\n  }\r\n\r\n  /**\r\n   * 提取附件id数组\r\n   */\r\n  public static peekAttachmentIds(attachmentInfos: BusinessAttachmentInfo[]) {\r\n    if (!attachmentInfos) {\r\n      attachmentInfos = [];\r\n    }\r\n    const attachmentIds = attachmentInfos.map((attachmentInfo: BusinessAttachmentInfo) => {\r\n      return attachmentInfo.attachmentId;\r\n    });\r\n\r\n    return attachmentIds;\r\n  }\r\n\r\n  /**\r\n   * 批量获取变更\r\n   */\r\n  public static getChangeDetails(oldListData, newListData): ChangeDetail[] {\r\n    const changeDetails = [];\r\n    newListData.forEach((newData: any) => {\r\n      let oldData = oldListData.find((oldData: any) => {\r\n        return oldData['id'] === newData['id'];\r\n      });\r\n\r\n      if (!oldData) {\r\n        oldData = {};\r\n      }\r\n\r\n      const changeDetail = this.getChangeDetail(oldData, newData);\r\n      if (changeDetail) {\r\n        changeDetails.push(changeDetail);\r\n      }\r\n    });\r\n\r\n    return changeDetails;\r\n  }\r\n\r\n  /**\r\n   * 获取变更集\r\n   */\r\n  public static getChangeDetail(oldData, newData): ChangeDetail {\r\n    const changeDetail: ChangeDetail = {\r\n      ChangeType: ChangeDetailType.Modify,\r\n      ChangeInfo: {\r\n        DataId: newData['id']\r\n      }\r\n    };\r\n    let isChanged = false;\r\n\r\n    Object.keys(newData).forEach((propName) => {\r\n\r\n      // 移除不必要的属性的比较\r\n      if (propName === 'id' || propName === 'nodeCode' || propName === 'childs') {\r\n        return;\r\n      }\r\n      \r\n      const oldValue = oldData[propName];\r\n      const newValue = newData[propName];\r\n\r\n      if (oldValue === undefined && typeof newValue === 'object') {\r\n        return;\r\n      }\r\n\r\n      if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\r\n        changeDetail.ChangeInfo[propName] = newValue;\r\n        isChanged = true;\r\n      }\r\n    });\r\n\r\n    return isChanged ? changeDetail : null;\r\n\r\n  }\r\n\r\n}\r\n\r\nexport { AttachmentUtil };\r\n","import { Observable, of, EMPTY } from 'rxjs';\r\nimport { tap, switchMap, map } from 'rxjs/operators';\r\nimport { HttpRequestConfig, HttpMethods, Entity, ViewModelContext, BindingData, BindingPathConverter, HttpUtil } from '@farris/mobile-devkit';\r\nimport { BefRepository, BefDataPathUtil } from '@farris/mobile-bef';\r\nimport { BusinessAttachmentInfo, BusinessServerAttachmentInfo } from './types';\r\nimport { AttachmentUtil } from './business-attachment.util';\r\nimport { BaseDataService } from '../data-services';\r\n\r\n/**\r\n * 附件数据服务\r\n */\r\nclass BusinessAttachmentDataService {\r\n\r\n  /**\r\n   * ViewModel上下文\r\n   */\r\n  public viewModelContext: ViewModelContext;\r\n\r\n  /**\r\n   * 实体仓库\r\n   */\r\n  public get befReposi(): BefRepository<Entity> {\r\n    return this.viewModelContext.repository as BefRepository<Entity>;\r\n  }\r\n\r\n  /**\r\n   * 绑定数据\r\n   */\r\n  private get bindingData(): BindingData {\r\n    return this.viewModelContext.bindingData;\r\n  }\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(viewModelContext: ViewModelContext) {\r\n    this.viewModelContext = viewModelContext;\r\n  }\r\n\r\n  getAllBeSessions() {\r\n    const beSessionsJson = window.sessionStorage.getItem(\"BE_SESSION_ID\");\r\n    if (!beSessionsJson) {\r\n      return {};\r\n    }\r\n    const frmSessionId = this.getUserSessionId();\r\n    const beSessions = JSON.parse(beSessionsJson);\r\n    const beSessionKey = `${frmSessionId}_/api/gsp/common/v1.0/testForm_mfrm`;\r\n    return beSessions[beSessionKey];\r\n  }\r\n  /**\r\n   * 获取用户SessionId\r\n   */\r\n  getUserSessionId() {\r\n    const userSessionId = window.localStorage.getItem(\"sessionId\");\r\n    return userSessionId;\r\n  }\r\n\r\n  /**\r\n   * 扩展BeSessionId相关头信息\r\n   */\r\n  handleRequestHeaders(headers) {\r\n    const frmSessionId = this.getUserSessionId();\r\n    const beSessionId = this.getAllBeSessions();\r\n    if (frmSessionId) {\r\n      headers = HttpUtil.appendHeader(\r\n        headers,\r\n        \"X-CAF-Runtime-CommonVariable\",\r\n        frmSessionId\r\n      );\r\n    }\r\n    if (beSessionId) {\r\n      headers = HttpUtil.appendHeader(\r\n        headers,\r\n        \"X-CAF-Runtime-Context\",\r\n        beSessionId\r\n      );\r\n      headers = HttpUtil.appendHeader(headers, \"SessionId\", beSessionId);\r\n    }\r\n    headers = HttpUtil.appendHeader(headers, 'Content-Type', 'application/json');\r\n    return headers;\r\n  }\r\n  public extendQueryData(url: string): Observable<any> {\r\n    const entityFilter = {\r\n      FilterConditions: [],\r\n      SortConditions: [],\r\n      IsUsePagination: false,\r\n      Pagination: {\r\n        PageIndex: 1,\r\n        PageSize: 5,\r\n        PageCount: 0,\r\n        TotalCount: 0\r\n      }\r\n    };\r\n    const entityFilterString = JSON.stringify(entityFilter);\r\n    const params = {\r\n      entityFilter: entityFilterString\r\n    };\r\n    // const url = `/api/gsp/common/v1.0/attachmentform_mfrm/extension/query`;\r\n    // 拓展header\r\n    // const headers = this.handleRequestHeaders({});\r\n    // 拓展body\r\n    const requestConfig = { params };\r\n    return this.befReposi.apiProxy.request(HttpMethods.PUT, url, requestConfig);\r\n  }\r\n\r\n  /**\r\n   * 更新附件信息\r\n   */\r\n  public updateRow(attachmentInfoFieldPath: string, attachmentInfo: BusinessAttachmentInfo): Observable<any> {\r\n    const apiProxy = this.befReposi.apiProxy;\r\n    const updateUrl = `${apiProxy.baseUrl}/service/updateattachment`;\r\n    const serverAttachInfo = this.createUpdateAttachInfo(attachmentInfoFieldPath, attachmentInfo);\r\n    const body = {\r\n      updateAttachInfo: serverAttachInfo\r\n    };\r\n    const requestConfig: HttpRequestConfig = {\r\n      body: body\r\n    };\r\n    return apiProxy.request(HttpMethods.PUT, updateUrl, requestConfig);\r\n  }\r\n\r\n  /**\r\n   * 批量创建附件行数据\r\n   */\r\n  public updateRows(updateUrl: string, attachmentInfoFieldPath: string, attachmentInfos: BusinessAttachmentInfo[]): Observable<any> {\r\n    const apiProxy = this.befReposi.apiProxy;\r\n    // const updateUrl = `${apiProxy.baseUrl}/service/batchuploadattachment`;\r\n    const serverAttachInfo = this.createBatchCreateAttachInfo(attachmentInfoFieldPath, attachmentInfos);\r\n    const isRootEntity = serverAttachInfo.NodeCodes.length === 0;\r\n\r\n    const body = {\r\n      batchUploadInfo: serverAttachInfo\r\n    };\r\n    const requestConfig: HttpRequestConfig = {\r\n      body: body\r\n    };\r\n\r\n    return apiProxy.request(HttpMethods.PUT, updateUrl, requestConfig, true);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n   * 创建服务器端需要的更新信息\r\n   */\r\n  private createUpdateAttachInfo(attachmentInfoFieldPath: string, attachmentInfo: BusinessAttachmentInfo): BusinessServerAttachmentInfo {\r\n\r\n    const attachmentId = attachmentInfo.attachmentId;\r\n    const parentBindingPathArray = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);\r\n    parentBindingPathArray.pop();\r\n    const nodeCodes = BefDataPathUtil.convertToObjectCodes(parentBindingPathArray, this.bindingData);\r\n    const hiretryIds = BefDataPathUtil.convertToDataIdsForUpdate(parentBindingPathArray, this.bindingData);\r\n\r\n    const serverAttachInfo: BusinessServerAttachmentInfo = {\r\n      NodeCodes: nodeCodes,\r\n      HiretryIds: hiretryIds,\r\n      AttachmentIds: [attachmentId],\r\n      AttachmentId: attachmentId\r\n    };\r\n\r\n    return serverAttachInfo;\r\n  }\r\n\r\n  /**\r\n   * 创建服务器端需要的批量新增附件信息\r\n   */\r\n  private createBatchCreateAttachInfo(attachmentInfoFieldPath: string, attachmentInfo: BusinessAttachmentInfo[]):\r\n    BusinessServerAttachmentInfo {\r\n    const attachmentIds = AttachmentUtil.peekAttachmentIds(attachmentInfo);\r\n\r\n    const parentBindingPathArray = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);\r\n    parentBindingPathArray.pop();\r\n    const nodeCodes = BefDataPathUtil.convertToObjectCodes(parentBindingPathArray, this.bindingData);\r\n    const hiretryIds = BefDataPathUtil.convertToDataIdsForAdd(parentBindingPathArray, this.bindingData);\r\n\r\n    const serverAttachInfo = {\r\n      NodeCodes: nodeCodes,\r\n      HiretryIds: hiretryIds,\r\n      AttachmentIds: attachmentIds,\r\n      AttachmentId: null\r\n    };\r\n\r\n    return serverAttachInfo;\r\n  }\r\n\r\n  /**\r\n   * 同步服务器端最新信息到客户端\r\n   * @todo:\r\n   * 1、主对象批量新增时不支持\r\n   */\r\n  public syncAttachmentInfosToClient() {\r\n    const rootDataId = this.bindingData.list.currentId;\r\n    return this.befReposi.updateEntityById(rootDataId);\r\n  }\r\n\r\n  /**\r\n   * 追击主表数据到客户端\r\n   */\r\n  public appendAttachmentInfosToClient(listData: any[], isRootEntity: boolean): Observable<any[]> {\r\n    if (isRootEntity === true) {\r\n      const entities = this.befReposi.buildEntities(listData);\r\n      this.befReposi.entityCollection.addEntities(entities);\r\n      return of(listData);\r\n    } else {\r\n      return this.syncAttachmentInfosToClient().pipe(\r\n        map(() => {\r\n          return listData;\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { BusinessAttachmentDataService };\r\n","import { Observable, EMPTY, forkJoin, of } from 'rxjs';\r\nimport { tap, switchMap, map, filter, take } from 'rxjs/operators';\r\n// import { cloneDeep } from 'lodash-es';\r\nimport {\r\n  ViewModelContext, CommandContext, BindingPathConverter,\r\n  HttpRequestConfig, HttpParams, HttpHeaders, HttpMethods,\r\n  DataChangeType\r\n} from '@farris/mobile-devkit';\r\nimport { BefRepository, RequestInfo } from '@farris/mobile-bef';\r\nimport { BusinessUploadFileInfo } from './types';\r\nimport { AttachmentUtil } from './business-attachment.util';\r\nimport { BusinessAttachmentDataService } from './business-attachment-data.service';\r\nimport { EntityService } from '../entity-services/index';\r\nimport { RemoveDataService } from '../data-services/remove-data.service';\r\n\r\n\r\n/**\r\n * 附件服务\r\n */\r\nclass BusinessAttachmentService {\r\n\r\n  /**\r\n   * 默认根目录\r\n   */\r\n  private defaultRootDirId = 'default-root';\r\n\r\n  /**\r\n   * 默认子目录\r\n   */\r\n  private get defaultParentDirName(): string {\r\n    return this.viewModelContext.bindingData.list.currentId;\r\n  }\r\n\r\n  /**\r\n   * 视图模型\r\n   */\r\n  private viewModelContext: ViewModelContext;\r\n\r\n  /**\r\n   * 附件数据服务\r\n   */\r\n  private attachDataService: BusinessAttachmentDataService;\r\n\r\n  /**\r\n   * 实体服务\r\n   */\r\n  private entityService: EntityService;\r\n\r\n  /**\r\n   * 实体服务\r\n   */\r\n  private removeDataService: RemoveDataService;\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(\r\n    viewModelContext: ViewModelContext, entityService: EntityService,\r\n    removeDataService: RemoveDataService, attachDataService: BusinessAttachmentDataService,\r\n  ) {\r\n\r\n    this.viewModelContext = viewModelContext;\r\n    this.attachDataService = attachDataService;\r\n    this.entityService = entityService;\r\n    this.removeDataService = removeDataService;\r\n  }\r\n\r\n\r\n  /**\r\n   * 获取列表数据\r\n   */\r\n  public loadAttachmentRows(url: string, filters: any[], sorts: any[]): Observable<any> {\r\n\r\n    const attachContext = this.getAttachContext();\r\n    const befRepository = (this.viewModelContext.repository as BefRepository<any>);\r\n    const sessionService = befRepository.sessionService;\r\n    const apiProxy = befRepository.apiProxy;\r\n\r\n    // 组织params\r\n    const params: HttpParams = {};\r\n    if (typeof filters === 'string') {\r\n      filters = JSON.parse(filters);\r\n    }\r\n    if (typeof sorts === 'string') {\r\n      sorts = JSON.parse(sorts);\r\n    }\r\n\r\n    const entityFilter = {\r\n      FilterConditions: filters || null,\r\n      SortConditions: sorts || null,\r\n      IsUsePagination: false,\r\n      Pagination: {\r\n        PageIndex: 1,\r\n        PageSize: 0,\r\n        PageCount: 0,\r\n        TotalCount: 0\r\n      }\r\n    };\r\n    const entityFilterString = JSON.stringify(entityFilter);\r\n    params.entityFilter = entityFilterString;\r\n\r\n    // 组织body\r\n    const body = {\r\n      dataChange: [],\r\n      variableChange: null\r\n    }\r\n\r\n    // 赋值be的url\r\n    befRepository.apiProxy.setAssociatedUrl(url);\r\n    return this.waitForBeSession().pipe(switchMap(() => {\r\n      url = `${url}/extension/query`;\r\n      const requestConfig: HttpRequestConfig = {\r\n        headers: sessionService.extendRequestHeaders({}),\r\n        params: params,\r\n        body\r\n      };\r\n\r\n      const query$ = apiProxy.httpClient.request(HttpMethods.PUT, url, requestConfig).pipe(\r\n        map((result) => {\r\n          const attachListData = result.returnValue.result;\r\n          // 赋值当前所有数据\r\n          attachContext.setData(JSON.parse(JSON.stringify(attachListData)));\r\n          // 赋值缓存起来\r\n          attachContext.updateData(JSON.parse(JSON.stringify(attachListData)));\r\n          return attachListData;\r\n        })\r\n      );\r\n\r\n      return query$;\r\n    }));\r\n  }\r\n\r\n  private waitForBeSession(): Observable<boolean> {\r\n    const befRepository = this.viewModelContext.repository as BefRepository<any>;\r\n    const sessionService = befRepository.sessionService;\r\n    return sessionService.getBeSessionExisted().pipe(\r\n      filter((beSessionExisted: boolean) => {\r\n        return beSessionExisted === true;\r\n      }),\r\n      take(1)\r\n    );\r\n  }\r\n  /**\r\n   * 同步变更\r\n   */\r\n  public syncAttachmentRowChanges(url: string): Observable<any> {\r\n    const attachContext = this.getAttachContext() || {};\r\n\r\n    const changeDetails = AttachmentUtil.getChangeDetails(attachContext.oldListData, attachContext.listData);\r\n    if (!changeDetails || changeDetails.length === 0) {\r\n      return of(false);\r\n    }\r\n    const changedRowId = changeDetails[0].ChangeInfo.DataId;\r\n    const requestInfo: RequestInfo = {\r\n      dataChange: changeDetails,\r\n      variableChange: null\r\n    }\r\n    const requestConfig: HttpRequestConfig = {\r\n      body: requestInfo\r\n    };\r\n\r\n    const apiProxy = (this.viewModelContext.repository as BefRepository<any>).apiProxy;\r\n    url = `${url}/extension/retrieve/${changedRowId}`;\r\n    return apiProxy.request(HttpMethods.PUT, url, requestConfig, true).pipe(\r\n      map((e) => {\r\n        const context = attachContext.context;\r\n        const data = context.getData();\r\n        // goBack之后  更新缓存后的值\r\n        context.updateData(JSON.parse(JSON.stringify(data)));\r\n        return e;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * 上传单个文件\r\n   * @param attachmentIdPath 附件内码字段的路径，形如/attachInfo/attachmentId；\r\n   * @param attachmentNamePath 附件名称字段的路径\r\n   */\r\n  public uploadAndUpdateRow(attachmentInfoFieldPath: string, rootDirId?: string, parentDirName?: string): Observable<any> {\r\n    const rootId = rootDirId ? rootDirId : this.defaultRootDirId;\r\n    const formId = parentDirName ? parentDirName : this.defaultParentDirName;\r\n    if (!rootId || !formId) {\r\n      throw new Error('rootDirId和parentDirName不能为空，请填写');\r\n    }\r\n\r\n    const fileInfos = this.getUploadFileInfosFromContext();\r\n    const attachmentInfos = AttachmentUtil.convertToAttachmentInfos(fileInfos);\r\n    if (!attachmentInfos || attachmentInfos.length === 0) {\r\n      alert('请先上传附件');\r\n      return EMPTY;\r\n    }\r\n\r\n    // 更新服务器端\r\n    console.log('show loading ...');\r\n    const firstAttachmentInfo = AttachmentUtil.getFirstAttachmentInfo(attachmentInfos);\r\n    const result$ = this.attachDataService.updateRow(attachmentInfoFieldPath, firstAttachmentInfo).pipe(\r\n      tap(() => {\r\n        console.log('hide loading ...');\r\n      })\r\n    );\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * 上传多个文件\r\n   */\r\n  public uploadAndBatchAddRows(url: string, attachmentInfoFieldPath: string): Observable<any> {\r\n    const commandContext = this['context'] as CommandContext;\r\n    // 附件相关信息\r\n    const rootDirId = commandContext.eventParams.rootId;\r\n    const parentDirName = commandContext.eventParams.parentDirName;\r\n    const rootId = rootDirId ? rootDirId : this.defaultRootDirId;\r\n    const formId = parentDirName ? parentDirName : this.defaultParentDirName;\r\n    if (!rootId || !formId) {\r\n      throw new Error('rootDirId和parentDirName不能为空，请填写');\r\n    }\r\n    const context = commandContext.eventParams.context;\r\n    const fileInfos = this.getUploadFileInfosFromContext();\r\n    const attachmentInfos = AttachmentUtil.convertToAttachmentInfos(fileInfos);\r\n    if (!attachmentInfos || attachmentInfos.length === 0) {\r\n      alert('请先上传附件');\r\n      return EMPTY;\r\n    }\r\n    // 更新服务器端\r\n    const uploadUrl = `${url}/service/batchuploadattachment`;\r\n    return this.attachDataService.updateRows(uploadUrl, attachmentInfoFieldPath, attachmentInfos).pipe(\r\n      map(e => {\r\n        // 追加数据\r\n        context.appendData(e);\r\n        const dataIds = this.getDataIdsToRemove(context, attachmentInfoFieldPath);\r\n\r\n        dataIds.forEach(dataId => {\r\n          // 添加标记\r\n          this.viewModelContext.repository.dataChangeHistory.addChange({ fPath: '', dataId: dataId, changeType: DataChangeType.Add });\r\n        });\r\n        return e;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 批量删除附件所在的行\r\n   */\r\n  public removeAttachmentRows(url: string, attachmentInfoFieldPath: string): Observable<any> {\r\n    const context = this['context'].eventParams.context;\r\n    if (!attachmentInfoFieldPath) {\r\n      return EMPTY;\r\n    }\r\n    const dataIds = this.getDataIdsToRemove(context, attachmentInfoFieldPath);\r\n    // 如果是主表\r\n    if (attachmentInfoFieldPath.split('/').length <= 2) {\r\n      const removeUrl = `${url}/extension/batchdelete`;\r\n      return this.removeDataService.removeByBusinessIds(removeUrl, dataIds).pipe(\r\n        map((e) => {\r\n          dataIds.forEach(dataId => {\r\n            context.removeDataById(dataId);\r\n            // 添加标记\r\n            this.viewModelContext.repository.dataChangeHistory.addChange({ fPath: '', dataId: dataId, changeType: DataChangeType.Delete });\r\n          });\r\n        })\r\n      );\r\n    } else {\r\n      // 如果是子表\r\n      const removeObservables: Observable<any>[] = [];\r\n      if (dataIds.length === 0) {\r\n        alert('请选择要删除的文件');\r\n      }\r\n      const bindingListPath = this.getBindingListPathWithAttachments(attachmentInfoFieldPath);\r\n      dataIds.forEach((dataId: string) => {\r\n        const removeObservable = this.removeDataService.removeByBusinessPathAndId(url, bindingListPath, dataId);\r\n        removeObservables.push(removeObservable);\r\n      });\r\n      return forkJoin(removeObservables).pipe(\r\n        map((e) => {\r\n          console.log(e);\r\n          return e;\r\n        }));\r\n    }\r\n  }\r\n\r\n  // #region 工具方法\r\n  /**\r\n   * 从上下文中中获取控件传递的附件信息\r\n   */\r\n  private getUploadFileInfosFromContext(): BusinessUploadFileInfo[] {\r\n    const commandContext = this['context'] as CommandContext;\r\n    const uploadFileInfos = commandContext.eventParams.data as BusinessUploadFileInfo[];\r\n    if (!uploadFileInfos) {\r\n      return [];\r\n    }\r\n    return uploadFileInfos;\r\n  }\r\n\r\n  /**\r\n   * 获取要删除的附件对应的数据id数组\r\n   */\r\n  public getDataIdsToRemove(context: any, attachmentInfoFieldPath: string) {\r\n    const attachIds = this.getAttachmentIdsToRemoveFromContext();\r\n    const dataIds: string[] = [];\r\n    attachIds.forEach((attachId: string) => {\r\n\r\n      // 上传删除和预览删除传递过来的fileId的key可能不一致，要做兼容\r\n      const dataId = this.convertAttachmentIdToDataId(context, attachId, attachmentInfoFieldPath);\r\n      dataIds.push(dataId);\r\n    });\r\n    return dataIds;\r\n  }\r\n\r\n  /**\r\n   * 从命令上下文中获取要删除附件ids\r\n   */\r\n  public getAttachmentIdsToRemoveFromContext() {\r\n    const commandContext = this['context'] as CommandContext;\r\n    return commandContext.eventParams.data.map(dataItem => {\r\n      return Object.prototype.toString.call(dataItem) === '[object Object]' ? dataItem.metadataId : dataItem;\r\n    });\r\n    // return commandContext.eventParams.data as string[];\r\n  }\r\n\r\n  /**\r\n   * 根据路径获取附件字段值数组\r\n   * @param fieldPath 字段路径\r\n   */\r\n  private convertAttachmentIdToDataId(context: any, fileId: string, attachmentInfoFieldPath: string): string {\r\n\r\n    // 解析路径\r\n    const attachInfoBindingPath = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);\r\n    const attachFieldName = attachInfoBindingPath.pop();\r\n    const attachListBindingPath = attachInfoBindingPath;\r\n\r\n    // 获取附件id数组\r\n    // const entityListData = this.entityService.getEntityListData(attachListBindingPath);\r\n    const entityListData = context.data;\r\n    const targetEntityData = entityListData.find((entityData: any) => {\r\n      if (entityData[attachFieldName]) {\r\n        const attachmentId = entityData[attachFieldName]['attachmentId'];\r\n        if (attachmentId === fileId) {\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n\r\n    return targetEntityData.id;\r\n  }\r\n\r\n  /**\r\n   * 获取带附件的BindingList的Path\r\n   */\r\n  private getBindingListPathWithAttachments(attachmentInfoFieldPath: string) {\r\n    const attachInfoBindingPath = BindingPathConverter.toBindingPathArray(attachmentInfoFieldPath);\r\n    attachInfoBindingPath.pop();\r\n    const bindingListPath = attachInfoBindingPath;\r\n    return '/' + bindingListPath.join('/');\r\n  }\r\n\r\n  /**\r\n   * 获取附件组件上下文\r\n   */\r\n  private getAttachContext(): any {\r\n    const commandContext = this['context'] as CommandContext;\r\n    const attachContext = commandContext && commandContext.eventParams ? commandContext.eventParams : {};\r\n    return attachContext;\r\n  }\r\n\r\n  // #endregion\r\n\r\n}\r\n\r\nexport { BusinessAttachmentService };\r\n","import { Observable, of, EMPTY } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { HttpClient, ViewModelContext } from '@farris/mobile-devkit';\r\nimport { LoadingService } from '../ui-services/index';\r\n\r\n\r\nexport class DiscussionGroupService {\r\n    constructor(\r\n        private httpSvc: HttpClient,\r\n        private viewModelContext: ViewModelContext,\r\n        private loadingService: LoadingService,\r\n    ) {\r\n    }\r\n\r\n    private get params() {\r\n        return this['context'] && this['context']['eventParams'] || {};\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param id 表单id\r\n     * @param summary 消息描述\r\n     * @param configId 消息配置id\r\n     * @param text 评论内容\r\n     * @param visibility 是否所有人可见(移动暂未支持)\r\n     * @param parentId 是否是回复信息\r\n     * @returns \r\n     */\r\n    public addComment(id?: string, summary?: string, configId?: string, text?: string, visibility?: string, parentId?: string): Observable<any> {\r\n        id = id || this.viewModelContext && this.viewModelContext.bindingData.list.currentId || null;\r\n        if (!id) {\r\n            return EMPTY;\r\n        }\r\n\r\n        const url = '/api/runtime/comment/v1.0/bill-comment/comment';\r\n        const body = this.buildAddCommentParam(id, text, parentId, summary, visibility, configId);\r\n        this.loadingService.show()\r\n        return this.httpSvc.post(url, body, {}).pipe(\r\n            tap(() => {\r\n                this.loadingService.hide()\r\n            })\r\n        )\r\n    }\r\n\r\n    private buildAddCommentParam(id: string, text: string, parentId: string, summary: string, visibility: string, configId: string) {\r\n        if (typeof text === 'undefined') {\r\n            text = this.params.text;\r\n        }\r\n        if (typeof parentId === 'undefined') {\r\n            parentId = this.params.replyUser && this.params.replyUser.id;\r\n        }\r\n        if (typeof visibility === 'undefined') {\r\n            visibility = this.params.visibility || 'ALL';\r\n        }\r\n        return {\r\n            'bill': {\r\n                'billId': id,\r\n                'configId': configId,\r\n                'summary': summary\r\n            },\r\n            'comment': {\r\n                'billId': id,\r\n                'configId': configId,\r\n                'parentId': parentId || null,\r\n                'text': text,\r\n                'visibility': visibility\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param id 表单id\r\n     * @param configId 消息配置id\r\n     * @param pageIndex \r\n     * @param pageSize \r\n     * @returns \r\n     */\r\n    public queryComments(id: string, configId: string, pageIndex?: number | null, pageSize?: number | null): Observable<any> {\r\n        id = id || this.viewModelContext && this.viewModelContext.bindingData.list.currentId || null;\r\n        if (!id) {\r\n            return EMPTY;\r\n        }\r\n\r\n        const url = this.buildQueryCommentsUrl(id, pageIndex, pageSize, configId);\r\n        this.loadingService.show()\r\n        return this.httpSvc.get(url, {}).pipe(\r\n            tap((e) => {\r\n                this.loadingService.hide()\r\n                this.viewModelContext.uiState.setPropertyValue('discussionListData', e);\r\n            })\r\n        )\r\n    }\r\n\r\n    private buildQueryCommentsUrl(id: string, pageIndex: number | null, pageSize: number | null, configId: string) {\r\n        if (typeof pageIndex === 'undefined' || pageIndex === null) {\r\n            pageIndex = this.params.pageIndex || 0;\r\n        }\r\n        if (typeof pageSize === 'undefined' || pageSize === null) {\r\n            pageSize = this.params.pageSize || 999;\r\n        }\r\n        return `/api/runtime/comment/v1.0/bill-comment/comment/byBill?configId=${configId}&billId=${id}&pageSize=${pageSize}&pageIndex=${pageIndex}`;\r\n    }\r\n\r\n\r\n    /**\r\n     * 回复赋值\r\n     */\r\n    public setReplyUser() {\r\n        this.viewModelContext.uiState.setPropertyValue('replyUser', this.params);\r\n    }\r\n\r\n    public queryFrequentAtUsers(pageIndex?: number | null, pageSize?: number | null) {\r\n        const params: string[] = [];\r\n        params.push(`pageSize=${pageSize || 20}`);\r\n        params.push(`pageIndex=${pageIndex || 0}`);\r\n        const url = `/api/runtime/comment/v1.0/bill-comment/frequentAtUsers?${params.join('&')}`;\r\n        this.loadingService.show()\r\n        return this.httpSvc.get(url, {}).pipe(\r\n            tap((e) => {\r\n                this.loadingService.hide()\r\n                const personnelsData = {\r\n                    pageInfo: {\r\n                        pageSize: e.pageSize,\r\n                        pageIndex: e.pageIndex\r\n                    },\r\n                    total: e.totalCount,\r\n                    items: e.users\r\n                }\r\n                this.viewModelContext.uiState.setPropertyValue('personnelsData', personnelsData);\r\n            })\r\n        )\r\n    }\r\n\r\n    public queryAtUsers(user?: string, pageIndex?: number | null, pageSize?: number | null) {\r\n        const params: string[] = [];\r\n        if (user) {\r\n            params.push(`param=${user}`);\r\n        }\r\n        params.push(`pageSize=${pageSize || 100}`);\r\n        params.push(`pageIndex=${pageIndex || 0}`);\r\n        const url = `/api/runtime/comment/v1.0/bill-comment/atUser?${params.join('&')}`;\r\n        this.loadingService.show()\r\n        return this.httpSvc.get(url, {}).pipe(\r\n            tap((e) => {\r\n                this.loadingService.hide()\r\n                const personnelsData = {\r\n                    pageInfo: {\r\n                        pageSize: e.pageSize,\r\n                        pageIndex: e.pageIndex\r\n                    },\r\n                    total: e.totalCount,\r\n                    items: e.users\r\n                }\r\n                this.viewModelContext.uiState.setPropertyValue('personnelsData', personnelsData);\r\n            })\r\n        )\r\n    }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { HttpClient } from '@farris/mobile-devkit';\r\nimport { CancelSubmitPayload } from '../entity/start-process-payload';\r\n\r\n\r\n\r\nexport class TaskService {\r\n\r\n    constructor(\r\n        private httpSvc: HttpClient,\r\n    ) { }\r\n\r\n    error(error: any, actionCode?: string) {\r\n        if (error && error.error && error.error.Message) {\r\n            var message = error.error.Message;\r\n            if (actionCode) {\r\n                message = actionCode + \"操作失败:\" + message;\r\n            }\r\n            return message;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 启动流程预解析\r\n     * @param payload API所需的上下文参数\r\n     */\r\n    startProcessSimulate(payload: any): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/processInstances/startProcess-simulation`;\r\n        return this.httpSvc.post(url, payload, {});\r\n    }\r\n\r\n    /**\r\n     * 启动流程接口\r\n     * @param payload API所需的上下文参数\r\n     */\r\n    startProcess(payload: any): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/processInstances/startProcess`;\r\n        return this.httpSvc.post(url, payload, {});\r\n    }\r\n\r\n    /**\r\n     * 取消提交\r\n     * @param param 参数\r\n     */\r\n    cancelSubmit(param: CancelSubmitPayload): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/processInstances/cancelSubmit`;\r\n        return this.httpSvc.post(url, param, {});\r\n    }\r\n\r\n}\r\n","import { AssigneeInfo } from './complete-response';\r\nimport { User } from './user';\r\n\r\n/**\r\n * 提交审批上下文参数\r\n */\r\nexport class StartProcessPayload {\r\n\r\n    /**\r\n     * 随机生成的ID 无意义\r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * 流程定义ID\r\n     */\r\n    processDefinitionId: string;\r\n\r\n    /**\r\n     * 流程定义Key\r\n     */\r\n    processDefinitionKey: string;\r\n\r\n    /**\r\n     * 入口单据ID\r\n     */\r\n    bizDefKey: string;\r\n\r\n    /**\r\n     * 数据模型ID（BE上的节点ID）\r\n     */\r\n    dataModelId: string;\r\n\r\n    /**\r\n     * 单据内码\r\n     */\r\n    dataId: string;\r\n\r\n    /**\r\n     * 流程实例名称，可空\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * 流程发起人\r\n     */\r\n    startUserId: string;\r\n\r\n    /**\r\n     * 下一环节\r\n     */\r\n    nextFlowNodes: FlowNodeInfo[];\r\n\r\n    /**\r\n     * 参数\r\n     */\r\n    variables: any;\r\n\r\n}\r\n\r\nexport class FlowNodeInfo {\r\n\r\n    activityDefinitionId: string;\r\n\r\n    activityDefinitionName: string;\r\n\r\n    dependency: string;//前置依赖，执行提交时传给后端\r\n\r\n    selectedAssignees: User[];\r\n\r\n    assigneeInfo: AssigneeInfo;\r\n\r\n    resolved: boolean;//参与者是否解析\r\n\r\n    anonymous: boolean;\r\n\r\n    anonymousText: string;\r\n\r\n}\r\n\r\nexport class Assignee {\r\n\r\n    id: string;\r\n\r\n    name: string;\r\n    \r\n}\r\n\r\nexport class CancelSubmitPayload {\r\n\r\n    procInstId: string;//可以单独根据流程实例ID取消\r\n\r\n    dataId: string;//也可以根据dataId+bizDefKey取消\r\n\r\n    bizDefKey: string;\r\n    \r\n}","\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { StartProcessPayload, FlowNodeInfo } from '../../entity/start-process-payload';\r\nimport { SimulateResponse, SimulationPath } from '../../entity/simulate-response';\r\n\r\nimport { TaskService } from '../../service/task.service';\r\nimport { SubmitApprove } from '@farris/mobile-business-ui';\r\n\r\n\r\nexport class ProcessSelectorService {\r\n\r\n  constructor(\r\n    private taskService: TaskService\r\n  ) { }\r\n\r\n  destProcesses: { id: string, name: string }[];//候选流程\r\n  destNodes: { id: string, name: string }[];//候选下一环节\r\n\r\n  processPlaceholder: string = '选择流程';//选择流程placeholder\r\n  nodePlaceholder: string;//选择下一环节placeholder\r\n  response: SimulateResponse;//保存模拟流程后返回的内容，选择节点时使用\r\n\r\n  assignInfos = [];\r\n\r\n  selectedProcessId: string;//选择的流程定义ID\r\n  selectedNodeId: string; //选择的下一环节ID，后续环节id的拼接\r\n\r\n  selectedValues = ['clear'];\r\n\r\n  payload = new StartProcessPayload;//保存表单上传来的payload\r\n  subject = new Subject();\r\n  processReadOnly: boolean = false;//选择流程框是否只读\r\n  nodeReadOnly: boolean = true;//选择节点下拉框是否只读\r\n\r\n  vm: any;//弹框实例\r\n\r\n  setParam(param: StartProcessPayload) {\r\n    this.payload.id = param.id;\r\n    this.payload.processDefinitionId = param.processDefinitionId;\r\n    this.payload.processDefinitionKey = param.processDefinitionKey;\r\n    this.payload.bizDefKey = param.bizDefKey;\r\n    this.payload.dataModelId = param.dataModelId;\r\n    this.payload.dataId = param.dataId;\r\n    this.payload.name = param.name;\r\n    this.payload.startUserId = param.startUserId;\r\n    this.payload.nextFlowNodes = [];\r\n    this.startProcessSimulate(this.payload);\r\n  }\r\n\r\n  startProcessSimulate(payload: StartProcessPayload) {\r\n    this.taskService.startProcessSimulate(payload).subscribe((response: SimulateResponse) => {\r\n      this.destProcesses = response.procDefs.map(process => ({ id: process.procDefId, name: process.procDefName }));\r\n      if (this.destProcesses.length === 1) {\r\n        this.processReadOnly = true;\r\n        this.selectedProcessId = response.procDefs[0].procDefId;\r\n        this.vm = (SubmitApprove as any).confirm(\r\n          {\r\n            process: this.selectedProcessId,\r\n            processData: this.destProcesses,\r\n            processOc: this.selectProcessChange.bind(this),\r\n            processReadFlag: this.processReadOnly,\r\n            processHolder: this.processPlaceholder,\r\n            nextNodeReadFlag: this.nodeReadOnly,\r\n            submit: this.submit.bind(this),\r\n            cancel: this.back.bind(this)\r\n          }\r\n        )\r\n        this.response = response;\r\n        this.setNextNode(response);\r\n      } else {\r\n        this.vm = (SubmitApprove as any).confirm(\r\n          {\r\n            processData: this.destProcesses,\r\n            processOc: this.selectProcessChange.bind(this),\r\n            processReadFlag: this.processReadOnly,\r\n            processHolder: this.processPlaceholder,\r\n            nextNodeReadFlag: this.nodeReadOnly,\r\n            submit: this.submit.bind(this),\r\n            cancel: this.back.bind(this)\r\n          }\r\n        )\r\n      }\r\n    }, error => {\r\n      this.subject.next({ type: 'error', message: error && error.response && error.response.data && error.response.data.Message || '提交失败' });\r\n    })\r\n  }\r\n\r\n  /**\r\n * 选择某个流程后\r\n * @param data\r\n */\r\n  selectProcessChange(data: any) {\r\n    this.clearHelp();\r\n    this.clearNode();\r\n    this.selectedProcessId = data;\r\n\r\n    var payload = new StartProcessPayload();\r\n    payload.processDefinitionId = this.selectedProcessId;\r\n    payload.dataId = this.payload.dataId;\r\n\r\n    // const load = this.loadingService.show();\r\n    this.taskService.startProcessSimulate(payload).subscribe((response: SimulateResponse) => {\r\n      // load.close();\r\n      this.response = response;\r\n      this.setNextNode(response);\r\n    }, error => {\r\n      //load.close();\r\n      this.subject.next({ type: 'error', message: error && error.response && error.response.data && error.response.data.Message || '该流程存在问题' });\r\n    })\r\n  }\r\n\r\n\r\n  getsimulationPathsIndexData(data) {\r\n    return this.destNodes.findIndex(item => item.id === data)\r\n  }\r\n\r\n  /**\r\n * 选择节点后事件\r\n */\r\n  selectNodeChange(data: any) {\r\n    this.clearHelp();\r\n    this.clearAssignInfos();\r\n    this.selectedNodeId = data;\r\n    this.vm.open({\r\n      nextNode: this.selectedNodeId,\r\n    })\r\n    //const nodeNames = data.data.name.split('，');\r\n    const index = this.getsimulationPathsIndexData(data);\r\n    if (this.response.simulationPaths[index].nodeInfoList.every(node => node.resolved === true)) {//已预解析参与者\r\n      this.setAssignInfo(this.response.simulationPaths[index]);\r\n    } else {//未预解析参与者\r\n      let payload = new StartProcessPayload();\r\n      payload.processDefinitionId = this.selectedProcessId;\r\n      payload.dataId = this.payload.dataId;\r\n      payload.nextFlowNodes = [];\r\n\r\n      this.selectedNodeId.split('，').forEach((nodeId, index) => {\r\n        let nextFlowNode = new FlowNodeInfo();\r\n        nextFlowNode.activityDefinitionId = nodeId;\r\n        //nextFlowNode.activityDefinitionName = nodeNames[index];\r\n        payload.nextFlowNodes.push(nextFlowNode);\r\n      });\r\n\r\n      //const load = this.loadingService.show();\r\n      this.taskService.startProcessSimulate(payload).subscribe((response: SimulateResponse) => {\r\n        //load.close();\r\n        this.setAssignInfo(response.simulationPaths[0]);//选择的下一环节应该在同一条路径上，故取simulationPaths[0]\r\n      }, error => {\r\n        //load.close();\r\n        this.subject.next({ type: 'error', message: error && error.response && error.response.data && error.response.data.Message || '该节点存在问题' });\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n * 设置下一环节\r\n */\r\n  private setNextNode(response: SimulateResponse) {\r\n    this.destNodes = response.simulationPaths && response.simulationPaths.map(path => ({\r\n      id: path.nodeInfoList.map(node => node.activityDefinitionId).join('，'),\r\n      name: path.nodeInfoList.map(node => node.activityDefinitionName).join('，')\r\n    }));\r\n    //处理默认分支，无默认分支返回-1\r\n    const defaultIndex = response.simulationPaths.findIndex(a => a.default);\r\n    if (defaultIndex > -1) {\r\n      this.destNodes.length === 1 ? (this.nodeReadOnly = true) : (this.nodeReadOnly = false);\r\n      this.selectedNodeId = this.destNodes[defaultIndex].id;\r\n      this.setAssignInfo(response.simulationPaths[defaultIndex]);\r\n    } else {\r\n      this.selectedNodeId = '';\r\n      this.nodeReadOnly = false;\r\n      this.nodePlaceholder = '请选择';\r\n    }\r\n    this.vm.open({\r\n      nextNodeOc: this.selectNodeChange.bind(this),\r\n      nextNode: this.selectedNodeId,\r\n      nextNodeData: this.destNodes,\r\n      nextNodeReadFlag: this.nodeReadOnly,\r\n      nextNodeHolder: this.nodePlaceholder\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 设置当前指派信息帮助参数\r\n   */\r\n  private setAssignInfo(simulationPaths: SimulationPath) {\r\n    this.assignInfos = [];\r\n    this.selectedNodeId.split('，').forEach(nodeId => {\r\n      const node = simulationPaths.nodeInfoList.find(node => node.activityDefinitionId === nodeId);\r\n      if (node) {\r\n        const selectedAssignees = node.selectedAssignees;\r\n        let assigneeReadFlag = false;\r\n        let assignee = '';\r\n        let assigneeHolder = '请选择人员';\r\n        if (selectedAssignees && selectedAssignees.length >= 1) {\r\n          assigneeReadFlag = true;\r\n          assigneeHolder = \"\";\r\n          selectedAssignees.forEach(user => {\r\n            assignee = assignee + user.name + ', ';\r\n          })\r\n          assignee = assignee.slice(0, assignee.length - 2)\r\n        }\r\n        if (node.anonymous) {\r\n          assignee = node.anonymousText === '' ? '' : node.anonymousText && node.anonymousText\r\n        }\r\n        this.assignInfos.push({\r\n          label: `${this.selectedNodeId && this.selectedNodeId.split('，').length > 1 ? node.activityDefinitionName : ''}办理人员`,\r\n          selectedAssignees,\r\n          assigneeReadFlag,\r\n          assignee,\r\n          assigneeHolder,\r\n          assigneeInfo: { ...node.assigneeInfo, assigneeUsers: { items: (node.assigneeInfo && node.assigneeInfo.assigneeUsers) || [] } },\r\n          assignees: node.selectedAssignees.map(user => { return { id: user.id, name: user.name } }),\r\n          activityName: node.activityDefinitionName,\r\n          dependency: node.dependency,\r\n          anonymous: node.anonymous,\r\n          anonymousText: node.anonymousText\r\n        })\r\n      } else {\r\n        this.assignInfos.push({\r\n          selectedAssignees: [],\r\n          assigneeInfo: null,\r\n          assignees: [],\r\n          activityName: '',\r\n          dependency: '',\r\n          anonymous: node.anonymous,\r\n          anonymousText: node.anonymousText\r\n        })\r\n      }\r\n    })\r\n    this.vm.open({\r\n      assigneeOc: this.assigneeOc.bind(this),\r\n      assignInfos: this.assignInfos\r\n    })\r\n  }\r\n\r\n  // 办理人员选择事件\r\n  assigneeOc(data: any, index: number) {\r\n    this.assignInfos[index].assignees = data.items;\r\n    this.selectedValues[index] = data.value;\r\n    this.vm.open({\r\n      selectedValues: this.selectedValues\r\n    })\r\n  }\r\n\r\n  clearHelp() {\r\n    this.vm.open({\r\n      selectedValues: ['clear']\r\n    })\r\n  }\r\n\r\n  // 清空节点\r\n  clearNode() {\r\n    this.selectedNodeId = '',\r\n      this.destNodes = [],\r\n      this.nodeReadOnly = true,\r\n      this.nodePlaceholder = '',\r\n      this.assignInfos = [];\r\n    this.vm.open({\r\n      nextNode: this.selectedNodeId,\r\n      nextNodeData: this.destNodes,\r\n      nextNodeReadFlag: this.nodeReadOnly,\r\n      nodePlaceholder: this.nodePlaceholder,\r\n      assignInfos: this.assignInfos\r\n    })\r\n  }\r\n\r\n  // 清空办理人员\r\n  clearAssignInfos() {\r\n    this.assignInfos = [];\r\n    this.vm.open({\r\n      assignInfos: this.assignInfos\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 取消页面弹框\r\n   */\r\n  back() {\r\n    this.clearProcess();\r\n    this.subject.next({ type: 'success', message: '' });\r\n  }\r\n\r\n  submit() {\r\n    if (!this.selectedProcessId) {\r\n      this.subject.next({ type: 'error', message: '请选流程' });\r\n      return;\r\n    }\r\n    if (!this.selectedNodeId) {\r\n      this.subject.next({ type: 'error', message: '请选节点' });\r\n      return;\r\n    }\r\n    if (this.assignInfos.filter(info => ((info.assigneeInfo && info.assigneeInfo.assigneeUsers.items.length) || info.selectedAssignees.length) && !info.assignees.length).length) {\r\n      this.subject.next({ type: 'error', message: '请选办理人员' });\r\n      return;\r\n    }\r\n    const nodes: string[] = this.selectedNodeId.split('，');\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      let nextFlowNode: FlowNodeInfo = {\r\n        activityDefinitionId: nodes[i],\r\n        activityDefinitionName: this.assignInfos[i].activityName,\r\n        dependency: this.assignInfos[i].dependency,\r\n        selectedAssignees: this.assignInfos[i].assigneeInfo ? this.assignInfos[i].assignees : [],\r\n        assigneeInfo: null,\r\n        resolved: false,\r\n        anonymous: false,\r\n        anonymousText: ''\r\n      }\r\n      this.payload.nextFlowNodes.push(nextFlowNode);\r\n    }\r\n    this.payload.processDefinitionId = this.selectedProcessId;\r\n    this.taskService.startProcess(this.payload).subscribe(() => {\r\n      this.clearProcess();\r\n      this.subject.next({ type: 'success', message: '提交成功' });\r\n    }, (error) => {\r\n      this.subject.next({ type: 'error', message: error && error.response && error.response.data && error.response.data.Message || '提交失败' });\r\n    })\r\n  }\r\n\r\n  getSubject() {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  clearProcess() {\r\n    this.vm.close();\r\n    this.vm = null;\r\n    this.selectedProcessId = ''\r\n    this.selectedNodeId = ''\r\n    this.processReadOnly = false;\r\n    this.nodeReadOnly= true;\r\n  }\r\n}\r\n","import { Observable, Subject, of } from 'rxjs';\r\nimport { TaskService } from './service/task.service';\r\nimport { StartProcessPayload, CancelSubmitPayload } from './entity/start-process-payload';\r\nimport { ProcessSelectorService } from './submit/process-selector-vue/process-selector.service'\r\n\r\nimport { LoadingService, NotifyService } from '../ui-services/index';\r\ninterface Response { type: string, message: string };\r\n\r\nexport class WfTaskHandlerService {\r\n\r\n  subject = new Subject<any>();\r\n\r\n  constructor(\r\n    private processSelectorService: ProcessSelectorService,\r\n    private taskService: TaskService,\r\n    private loadingService: LoadingService,\r\n    private notifyService: NotifyService\r\n  ) { }\r\n\r\n  /**\r\n   * 提交审批\r\n   * @param payload 上下文参数\r\n   */\r\n  startProcess(payload: StartProcessPayload): Observable<any> {\r\n    const subject = new Subject();\r\n    this.processSelectorService.setParam(payload);\r\n    this.processSelectorService.getSubject().subscribe(\r\n      (response: Response) => {\r\n        if (response.type === 'success') {\r\n          if (response.message) {\r\n            this.notifyService.success(response.message);\r\n            subject.next(true)\r\n          }\r\n        } else if (response.type === 'error') {\r\n          subject.next(false)\r\n          this.notifyService.error(response.message);\r\n        }\r\n      },\r\n      () => {\r\n        this.loadingService.hide();\r\n      })\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 取消提交\r\n   * @payload payload 参数\r\n   */\r\n  cancelSubmit(payload: CancelSubmitPayload): Observable<any> {\r\n    const subject = new Subject();\r\n    this.loadingService.show();\r\n    this.taskService.cancelSubmit(payload).subscribe(re => {\r\n      subject.next(true);\r\n      this.loadingService.hide();\r\n      this.notifyService.success('取消提交成功');\r\n    }, error => {\r\n      subject.next(false);\r\n      this.loadingService.hide();\r\n      this.notifyService.error(error && error.response && error.response.data && error.response.data.Message || '取消提交失败');\r\n    })\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n * 提交审批\r\n * @param dataId 表单id\r\n * @param bizDefKey 入口单据id\r\n */\r\n  submitWithBizDefKey(dataId: string, bizDefKey: string): Observable<any> {\r\n    if (!dataId) {\r\n      this.notifyService.error('表单id不能为空');\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.notifyService.error('入口单据Id不能为空');\r\n      return;\r\n    }\r\n    var startProcessPayload = new StartProcessPayload();\r\n    startProcessPayload.dataId = dataId;\r\n    startProcessPayload.bizDefKey = bizDefKey;\r\n    return this.startProcess(startProcessPayload);\r\n  }\r\n\r\n  /**\r\n   * 取消提交审批\r\n   * @param dataId 表单id\r\n   * @param bizDefKey 入口单据id\r\n   */\r\n  cancelSubmitWithDataId(dataId: string, bizDefKey: string): Observable<any> {\r\n    if (!dataId) {\r\n      this.notifyService.error('表单id不能为空');\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.notifyService.error('入口单据Id不能为空');\r\n      return;\r\n    }\r\n    var cancelSubmitPayload = new CancelSubmitPayload();\r\n    cancelSubmitPayload.dataId = dataId;\r\n    cancelSubmitPayload.bizDefKey = bizDefKey;\r\n    return this.cancelSubmit(cancelSubmitPayload);\r\n  }\r\n\r\n  /**\r\n   * 批量提交审批\r\n   * @param dataIds 表单ID集合\r\n   * @param bizDefKey 入口单据id\r\n   */\r\n  batchSubmitWithBizDefKey(dataIds: string[], bizDefKey: string): Observable<any> {\r\n    if (!dataIds) {\r\n      this.notifyService.error('dataId不能为空');\r\n      return;\r\n    }\r\n    if (!dataIds.length) {\r\n      this.notifyService.error('请选择数据');\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.notifyService.error('入口单据ID不能为空');\r\n      return;\r\n    }\r\n    if (dataIds.length === 1) {\r\n      var startPayload = new StartProcessPayload()\r\n      startPayload.bizDefKey = bizDefKey;\r\n      startPayload.dataId = dataIds[0];\r\n      return this.startProcess(startPayload);\r\n    }\r\n\r\n    var successNum: number = 0;\r\n    var failedNum: number = 0;\r\n    const subject = new Subject();\r\n    this.loadingService.show();\r\n    for (var i = 0; i < dataIds.length; i++) {\r\n      var startPayload = new StartProcessPayload()\r\n      startPayload.bizDefKey = bizDefKey;\r\n      startPayload.dataId = dataIds[i];\r\n      startPayload.variables = { simulate: false };\r\n      this.taskService.startProcess(startPayload).subscribe((response: any) => {\r\n        if (response.procDefs.length > 1 || response.nextFlowNodes.length > 1) { //存在多个流程，单独提交//多个节点，单独提交\r\n          failedNum++;\r\n        } else {\r\n          successNum++;\r\n        }\r\n        if (successNum + failedNum === dataIds.length) {\r\n          this.loadingService.hide();\r\n          subject.next(true);//全部执行完再返回\r\n          this.showBatchSubmitInfo(\"submit\", successNum, failedNum);\r\n        }\r\n      }, () => {\r\n        failedNum++;\r\n        if (successNum + failedNum === dataIds.length) {\r\n          this.loadingService.hide();\r\n          subject.next(false);//全部执行完再返回\r\n          this.showBatchSubmitInfo(\"submit\", successNum, failedNum);\r\n        }\r\n      })\r\n    }\r\n    return subject.asObservable();\r\n  }\r\n\r\n\r\n  /**\r\n   * 批量取消提交审批\r\n   * @param dataIds 表单ID集合\r\n   * @param bizDefKey 入口单据id\r\n   */\r\n  batchCancelSubmitWithDataId(dataIds: string[], bizDefKey: string): Observable<any> {\r\n    if (!dataIds) {\r\n      this.notifyService.error('dataId不能为空');\r\n      return;\r\n    }\r\n    if (!dataIds.length) {\r\n      this.notifyService.error('请选择数据');\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.notifyService.error('入口单据ID不能为空');\r\n      return;\r\n    }\r\n    const subject = new Subject();\r\n    var successNum: number = 0;\r\n    var failedNum: number = 0;\r\n    this.loadingService.show();\r\n\r\n    for (var i = 0; i < dataIds.length; i++) {\r\n      var cancelSubmitPayload = new CancelSubmitPayload();\r\n      cancelSubmitPayload.dataId = dataIds[i];\r\n      cancelSubmitPayload.bizDefKey = bizDefKey;\r\n      this.taskService.cancelSubmit(cancelSubmitPayload).subscribe(re => {\r\n        successNum++;\r\n        if (successNum + failedNum === dataIds.length) {\r\n          this.loadingService.hide();\r\n          subject.next(true);\r\n          this.showBatchSubmitInfo(\"cancel\", successNum, failedNum);\r\n        }\r\n      }, () => {\r\n        failedNum++;\r\n        if (successNum + failedNum === dataIds.length) {\r\n          this.loadingService.hide();\r\n          subject.next(false);\r\n          this.showBatchSubmitInfo(\"cancel\", successNum, failedNum);\r\n        }\r\n      })\r\n    }\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n * 子表提交审批\r\n * @param parentDataId 主表id\r\n * @param childDataId 子表id\r\n * @param bizDefKey 入口单据id\r\n */\r\n  childSubmit(parentDataId: string, childDataId: string, bizDefKey: string): Observable<any> {\r\n    if (!parentDataId || !childDataId) {\r\n      this.notifyService.error('dataId不能为空');\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.notifyService.error('入口单据ID不能为空');\r\n      return;\r\n    }\r\n    var startProcessPayload = new StartProcessPayload();\r\n    startProcessPayload.dataId = `${parentDataId},${childDataId}`;\r\n    startProcessPayload.bizDefKey = bizDefKey;\r\n    return this.startProcess(startProcessPayload);\r\n  }\r\n\r\n  /**\r\n * 子表取消提交审批\r\n * @param parentDataId 主表id\r\n * @param childDataId 子表id\r\n * @param bizDefKey 入口单据id\r\n */\r\n  childCancelSubmit(parentDataId: string, childDataId: string, bizDefKey: string): Observable<any> {\r\n    if (!parentDataId || !childDataId) {\r\n      this.notifyService.error('dataId不能为空');\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.notifyService.error('入口单据ID不能为空');\r\n      return;\r\n    }\r\n    var cancelSubmitPayload = new CancelSubmitPayload();\r\n    cancelSubmitPayload.dataId = `${parentDataId},${childDataId}`;\r\n    cancelSubmitPayload.bizDefKey = bizDefKey;\r\n    return this.cancelSubmit(cancelSubmitPayload);\r\n  }\r\n\r\n  /**\r\n * 子表批量提交审批\r\n * @param parentDataId 主表id\r\n * @param childDataIds 子表id集合\r\n * @param bizDefKey 入口单据id\r\n */\r\n  childBatchSubmit(parentDataId: string, childDataIds: string[], bizDefKey: string): Observable<any> {\r\n    if (!parentDataId || !childDataIds) {\r\n      this.notifyService.error('dataId不能为空');\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.notifyService.error('入口单据ID不能为空');\r\n      return;\r\n    }\r\n    const dataIds = childDataIds.map(childDataId => `${parentDataId},${childDataId}`);\r\n    return this.batchSubmitWithBizDefKey(dataIds, bizDefKey);\r\n  }\r\n\r\n  /**\r\n * 子表批量取消提交审批\r\n * @param parentDataId 主表id\r\n * @param childDataIds 子表id集合\r\n * @param bizDefKey 入口单据id\r\n */\r\n  childBatchCancelSubmit(parentDataId: string, childDataIds: string[], bizDefKey: string): Observable<any> {\r\n    if (!parentDataId || !childDataIds) {\r\n      this.notifyService.error('dataId不能为空');\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.notifyService.error('入口单据ID不能为空');\r\n      return;\r\n    }\r\n    const dataIds = childDataIds.map(childDataId => `${parentDataId},${childDataId}`);\r\n    return this.batchCancelSubmitWithDataId(dataIds, bizDefKey);\r\n  }\r\n\r\n  /**\r\n * 批量提交、取消提交提示信息\r\n */\r\n  private showBatchSubmitInfo(actionCode: string, successNum: number, failedNum: number) {\r\n    if (successNum && !failedNum) {//批量全部成功\r\n      actionCode === \"submit\" && this.notifyService.success('提交审批成功！');\r\n      actionCode === \"cancel\" && this.notifyService.success('取消提交成功！');\r\n    }\r\n    if (successNum && failedNum) {//批量有成功有失败\r\n      this.notifyService.warning(`操作成功${successNum}条，失败${failedNum}条!`);\r\n    }\r\n    if (!successNum && failedNum) {//批量全部失败\r\n      actionCode === \"submit\" && this.notifyService.error('提交审批失败！');\r\n      actionCode === \"cancel\" && this.notifyService.error('取消提交失败！');\r\n    }\r\n  }\r\n\r\n}\r\n","\r\nimport { ViewModelContext, HttpClient } from '@farris/mobile-devkit';\r\nimport { BE_ERROR_HANDLER__TOKEN } from '@farris/mobile-bef';\r\nimport { LoadingService, ToastService, NotifyService, DialogService,AttachmentPreviewService } from './ui-services/index';\r\nimport { ExceptionService } from './exception-services/index';\r\nimport { RouterService, ROUTER_INSTANCE_TOKEN } from './router.servcie';\r\n\r\nimport { CommandService } from './command.service';\r\nimport { StateMachineService } from './state-machine.service';\r\nimport { UIStateService } from './ui-state.service';\r\nimport { VoVariableService } from './vo-variable.service';\r\nimport { MapService } from './map-services/map.service';\r\n\r\nimport {\r\n  EntityTraversingService, EntityManipulationService, EntityAggregationService,\r\n  EntityService, EntityListService\r\n} from './entity-services/index';\r\n\r\nimport {\r\n  LoadDataService, CreateDataService, EditDataService, UpdateDataService, CheckDataService,\r\n  RemoveDataService, SaveDataService, CancelDataService, BeActionService, ApproveService\r\n} from './data-services/index';\r\n\r\nimport { AttachmentDataService, AttachmentService } from './attachment-services/index';\r\nimport { BusinessAttachmentDataService, BusinessAttachmentService } from './business-attachment-services/index';\r\n\r\nimport { TaskService } from './work-flow-service/service/task.service';\r\nimport { ProcessSelectorService } from './work-flow-service/submit/process-selector-vue/process-selector.service'\r\nimport { WfTaskHandlerService } from './work-flow-service/wf-task-handler.service'\r\nimport { CcWorkService } from './ccwork-service/ccwork.service';\r\n\r\nimport { ValidatorServices } from './validator-services';\r\nimport { JsBridgeService } from './js-bridge-service/index';\r\nimport { DiscussionGroupService } from './discussion-group-service/index';\r\n\r\n/**\r\n * 应用级Providers\r\n */\r\nconst COMMAND_SERVICES_APP_PROVIDERS = [\r\n  { provide: LoadingService, useClass: LoadingService, deps: [] },\r\n  { provide: ToastService, useClass: ToastService, deps: [] },\r\n  { provide: NotifyService, useClass: NotifyService, deps: [] },\r\n  { provide: DialogService, useClass: DialogService, deps: [] },\r\n  \r\n  { provide: ExceptionService, useClass: ExceptionService, deps: [] },\r\n  { provide: JsBridgeService, useClass: JsBridgeService, deps: [] },\r\n  { provide: BE_ERROR_HANDLER__TOKEN, useClass: ExceptionService, deps: [NotifyService, JsBridgeService] },\r\n];\r\n\r\n/**\r\n * 视图模型级Providers\r\n */\r\nconst COMMAND_SERVICES_VIEWMODEL_PROVIDERS = [\r\n  { provide: RouterService, useClass: RouterService, deps: [ViewModelContext, ROUTER_INSTANCE_TOKEN,JsBridgeService] },\r\n  { provide: CommandService, useClass: CommandService, deps: [ViewModelContext] },\r\n  { provide: EntityService, useClass: EntityService, deps: [ViewModelContext] },\r\n  { provide: StateMachineService, useClass: StateMachineService, deps: [ViewModelContext] },\r\n  { provide: UIStateService, useClass: UIStateService, deps: [ViewModelContext] },\r\n  { provide: VoVariableService, useClass: VoVariableService, deps: [ViewModelContext] },\r\n\r\n  { provide: EntityTraversingService, useClass: EntityTraversingService, deps: [ViewModelContext] },\r\n  { provide: EntityManipulationService, useClass: EntityManipulationService, deps: [ViewModelContext] },\r\n  { provide: EntityAggregationService, useClass: EntityAggregationService, deps: [ViewModelContext] },\r\n  { provide: EntityService, useClass: EntityService, deps: [ViewModelContext] },\r\n  { provide: EntityListService, useClass: EntityListService, deps: [ViewModelContext] },\r\n\r\n  { provide: LoadDataService, useClass: LoadDataService, deps: [ViewModelContext] },\r\n  { provide: CreateDataService, useClass: CreateDataService, deps: [ViewModelContext] },\r\n  { provide: EditDataService, useClass: EditDataService, deps: [ViewModelContext] },\r\n  { provide: UpdateDataService, useClass: UpdateDataService, deps: [ViewModelContext] },\r\n  { provide: RemoveDataService, useClass: RemoveDataService, deps: [ViewModelContext] },\r\n  { provide: SaveDataService, useClass: SaveDataService, deps: [ViewModelContext] },\r\n  { provide: CancelDataService, useClass: CancelDataService, deps: [ViewModelContext] },\r\n  { provide: BeActionService, useClass: BeActionService, deps: [ViewModelContext] },\r\n  { provide: CheckDataService, useClass: CheckDataService, deps: [ViewModelContext] },\r\n\r\n  { provide: ValidatorServices, useClass: ValidatorServices, deps: [ViewModelContext] },\r\n\r\n  { provide: TaskService, useClass: TaskService, deps: [HttpClient] },\r\n  { provide: ProcessSelectorService, useClass: ProcessSelectorService, deps: [TaskService] },\r\n  {\r\n    provide: WfTaskHandlerService, useClass: WfTaskHandlerService,\r\n    deps: [ProcessSelectorService, TaskService, LoadingService, NotifyService]\r\n  },\r\n  { provide: ApproveService, useClass: ApproveService, deps: [WfTaskHandlerService, ViewModelContext] },\r\n  { provide: AttachmentDataService, useClass: AttachmentDataService, deps: [ViewModelContext] },\r\n  { provide: BusinessAttachmentDataService, useClass: BusinessAttachmentDataService, deps: [ViewModelContext] },\r\n  {\r\n    provide: AttachmentService, useClass: AttachmentService,\r\n    deps: [ViewModelContext, EntityService, RemoveDataService, AttachmentDataService]\r\n  },\r\n  {\r\n    provide: BusinessAttachmentService, useClass: BusinessAttachmentService,\r\n    deps: [ViewModelContext, EntityService, RemoveDataService, BusinessAttachmentDataService]\r\n  },\r\n  { provide: CcWorkService, useClass: CcWorkService, deps: [ViewModelContext] },\r\n  { provide: MapService, useClass: MapService, deps: [ViewModelContext] },\r\n  { provide: AttachmentPreviewService, useClass: AttachmentPreviewService, deps: [ViewModelContext] },\r\n  { provide: DiscussionGroupService, useClass: DiscussionGroupService, deps: [HttpClient,ViewModelContext,LoadingService] }\r\n\r\n];\r\n\r\nexport { COMMAND_SERVICES_APP_PROVIDERS, COMMAND_SERVICES_VIEWMODEL_PROVIDERS };\r\n"]}