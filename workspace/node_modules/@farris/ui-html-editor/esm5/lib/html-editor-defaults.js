/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
export var defaultModules = {
    toolbar: [
        // ['bold', 'italic', 'underline', 'strike'], // toggled buttons
        ['bold', 'italic', 'code-block', { header: 1 }, { header: 2 }, { list: 'ordered' }, { list: 'bullet' }, 'image']
        // ['blockquote', 'code-block'],
        // [{ header: 1 }, { header: 2 }], // custom button values
        // [{ list: 'ordered' }, { list: 'bullet' }],
        // [{ script: 'sub' }, { script: 'super' }], // superscript/subscript
        // [{ indent: '-1' }, { indent: '+1' }], // outdent/indent
        // [{ direction: 'rtl' }], // text direction
        // [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown
        // [{ header: [1, 2, 3, 4, 5, 6, false] }],
        // [{ color: [] }, { background: [] }], // dropdown with defaults from theme
        // [
        //     {
        //         font: [
        //             'Microsoft-YaHei',
        //             'SimSun',
        //             'SimHei',
        //             'KaiTi',
        //             'FangSong',
        //             'Arial',
        //             'Times',
        //             'sans-serif'
        //         ]
        //     }
        // ],
        // [{ align: [] }],
        // ['clean'], // remove formatting button
        // ['link', 'image', 'video'] // link and image, video,
    ],
    imageDrop: true,
    imageResize: true,
    tooltip: true
};
/** @type {?} */
export var toolbarOptions = {
    fontBar: [
        {
            font: ['Microsoft-YaHei', 'SimSun', 'SimHei', 'KaiTi', 'FangSong', 'Arial', 'sans-serif']
        }
    ],
    headerBar: [{ header: [1, 2, 3, 4, 5, 6, false] }],
    sizeBar: [{ size: ['small', false, 'large', 'huge'] }],
    fontStyleBar: ['bold', 'italic', 'underline', 'strike', 'link'],
    indentBar: [{ indent: '-1' }, { indent: '+1' }],
    listBar: [{ list: 'ordered' }, { list: 'bullet' }],
    BlockBar: ['code-block', 'blockquote'],
    superAndSubscriptBar: [{ script: 'sub' }, { script: 'super' }],
    colorBar: [{ color: [] }, { background: [] }],
    mediaBar: ['image', 'video'],
    alignBar: [{ align: [] }],
    imageBar: ['image'],
    videoBar: ['video'],
    cleanBar: ['clean']
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHRtbC1lZGl0b3ItZGVmYXVsdHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWh0bWwtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL2h0bWwtZWRpdG9yLWRlZmF1bHRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBR0EsTUFBTSxLQUFPLGNBQWMsR0FBRztJQUMxQixPQUFPLEVBQUU7UUFDTCxnRUFBZ0U7UUFDaEUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsRUFBRSxPQUFPLENBQUM7UUFDaEgsZ0NBQWdDO1FBRWhDLDBEQUEwRDtRQUMxRCw2Q0FBNkM7UUFDN0MscUVBQXFFO1FBQ3JFLDBEQUEwRDtRQUMxRCw0Q0FBNEM7UUFFNUMsb0VBQW9FO1FBQ3BFLDJDQUEyQztRQUUzQyw0RUFBNEU7UUFDNUUsSUFBSTtRQUNKLFFBQVE7UUFDUixrQkFBa0I7UUFDbEIsaUNBQWlDO1FBQ2pDLHdCQUF3QjtRQUN4Qix3QkFBd0I7UUFDeEIsdUJBQXVCO1FBQ3ZCLDBCQUEwQjtRQUMxQix1QkFBdUI7UUFDdkIsdUJBQXVCO1FBQ3ZCLDJCQUEyQjtRQUMzQixZQUFZO1FBQ1osUUFBUTtRQUNSLEtBQUs7UUFDTCxtQkFBbUI7UUFFbkIseUNBQXlDO1FBRXpDLHVEQUF1RDtLQUMxRDtJQUNELFNBQVMsRUFBRSxJQUFJO0lBQ2YsV0FBVyxFQUFFLElBQUk7SUFDakIsT0FBTyxFQUFFLElBQUk7Q0FDaEI7O0FBQ0QsTUFBTSxLQUFPLGNBQWMsR0FBRztJQUMxQixPQUFPLEVBQUU7UUFDTDtZQUNJLElBQUksRUFBRSxDQUFDLGlCQUFpQixFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsWUFBWSxDQUFDO1NBQzVGO0tBQ0o7SUFDRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxFQUFFLENBQUM7SUFDbEQsT0FBTyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxNQUFNLENBQUMsRUFBRSxDQUFDO0lBQ3RELFlBQVksRUFBRSxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUM7SUFDL0QsU0FBUyxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDL0MsT0FBTyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLENBQUM7SUFDbEQsUUFBUSxFQUFFLENBQUMsWUFBWSxFQUFFLFlBQVksQ0FBQztJQUN0QyxvQkFBb0IsRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxDQUFDO0lBQzlELFFBQVEsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQzdDLFFBQVEsRUFBRSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUM7SUFDNUIsUUFBUSxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUM7SUFDekIsUUFBUSxFQUFFLENBQUMsT0FBTyxDQUFDO0lBQ25CLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQztJQUNuQixRQUFRLEVBQUUsQ0FBQyxPQUFPLENBQUM7Q0FDdEIiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcblxyXG5leHBvcnQgY29uc3QgZGVmYXVsdE1vZHVsZXMgPSB7XHJcbiAgICB0b29sYmFyOiBbXHJcbiAgICAgICAgLy8gWydib2xkJywgJ2l0YWxpYycsICd1bmRlcmxpbmUnLCAnc3RyaWtlJ10sIC8vIHRvZ2dsZWQgYnV0dG9uc1xyXG4gICAgICAgIFsnYm9sZCcsICdpdGFsaWMnLCAnY29kZS1ibG9jaycsIHsgaGVhZGVyOiAxIH0sIHsgaGVhZGVyOiAyIH0sIHsgbGlzdDogJ29yZGVyZWQnIH0sIHsgbGlzdDogJ2J1bGxldCcgfSwgJ2ltYWdlJ11cclxuICAgICAgICAvLyBbJ2Jsb2NrcXVvdGUnLCAnY29kZS1ibG9jayddLFxyXG5cclxuICAgICAgICAvLyBbeyBoZWFkZXI6IDEgfSwgeyBoZWFkZXI6IDIgfV0sIC8vIGN1c3RvbSBidXR0b24gdmFsdWVzXHJcbiAgICAgICAgLy8gW3sgbGlzdDogJ29yZGVyZWQnIH0sIHsgbGlzdDogJ2J1bGxldCcgfV0sXHJcbiAgICAgICAgLy8gW3sgc2NyaXB0OiAnc3ViJyB9LCB7IHNjcmlwdDogJ3N1cGVyJyB9XSwgLy8gc3VwZXJzY3JpcHQvc3Vic2NyaXB0XHJcbiAgICAgICAgLy8gW3sgaW5kZW50OiAnLTEnIH0sIHsgaW5kZW50OiAnKzEnIH1dLCAvLyBvdXRkZW50L2luZGVudFxyXG4gICAgICAgIC8vIFt7IGRpcmVjdGlvbjogJ3J0bCcgfV0sIC8vIHRleHQgZGlyZWN0aW9uXHJcblxyXG4gICAgICAgIC8vIFt7IHNpemU6IFsnc21hbGwnLCBmYWxzZSwgJ2xhcmdlJywgJ2h1Z2UnXSB9XSwgLy8gY3VzdG9tIGRyb3Bkb3duXHJcbiAgICAgICAgLy8gW3sgaGVhZGVyOiBbMSwgMiwgMywgNCwgNSwgNiwgZmFsc2VdIH1dLFxyXG5cclxuICAgICAgICAvLyBbeyBjb2xvcjogW10gfSwgeyBiYWNrZ3JvdW5kOiBbXSB9XSwgLy8gZHJvcGRvd24gd2l0aCBkZWZhdWx0cyBmcm9tIHRoZW1lXHJcbiAgICAgICAgLy8gW1xyXG4gICAgICAgIC8vICAgICB7XHJcbiAgICAgICAgLy8gICAgICAgICBmb250OiBbXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgJ01pY3Jvc29mdC1ZYUhlaScsXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgJ1NpbVN1bicsXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgJ1NpbUhlaScsXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgJ0thaVRpJyxcclxuICAgICAgICAvLyAgICAgICAgICAgICAnRmFuZ1NvbmcnLFxyXG4gICAgICAgIC8vICAgICAgICAgICAgICdBcmlhbCcsXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgJ1RpbWVzJyxcclxuICAgICAgICAvLyAgICAgICAgICAgICAnc2Fucy1zZXJpZidcclxuICAgICAgICAvLyAgICAgICAgIF1cclxuICAgICAgICAvLyAgICAgfVxyXG4gICAgICAgIC8vIF0sXHJcbiAgICAgICAgLy8gW3sgYWxpZ246IFtdIH1dLFxyXG5cclxuICAgICAgICAvLyBbJ2NsZWFuJ10sIC8vIHJlbW92ZSBmb3JtYXR0aW5nIGJ1dHRvblxyXG5cclxuICAgICAgICAvLyBbJ2xpbmsnLCAnaW1hZ2UnLCAndmlkZW8nXSAvLyBsaW5rIGFuZCBpbWFnZSwgdmlkZW8sXHJcbiAgICBdLFxyXG4gICAgaW1hZ2VEcm9wOiB0cnVlLFxyXG4gICAgaW1hZ2VSZXNpemU6IHRydWUsXHJcbiAgICB0b29sdGlwOiB0cnVlXHJcbn07XHJcbmV4cG9ydCBjb25zdCB0b29sYmFyT3B0aW9ucyA9IHtcclxuICAgIGZvbnRCYXI6IFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGZvbnQ6IFsnTWljcm9zb2Z0LVlhSGVpJywgJ1NpbVN1bicsICdTaW1IZWknLCAnS2FpVGknLCAnRmFuZ1NvbmcnLCAnQXJpYWwnLCAnc2Fucy1zZXJpZiddXHJcbiAgICAgICAgfVxyXG4gICAgXSxcclxuICAgIGhlYWRlckJhcjogW3sgaGVhZGVyOiBbMSwgMiwgMywgNCwgNSwgNiwgZmFsc2VdIH1dLFxyXG4gICAgc2l6ZUJhcjogW3sgc2l6ZTogWydzbWFsbCcsIGZhbHNlLCAnbGFyZ2UnLCAnaHVnZSddIH1dLFxyXG4gICAgZm9udFN0eWxlQmFyOiBbJ2JvbGQnLCAnaXRhbGljJywgJ3VuZGVybGluZScsICdzdHJpa2UnLCAnbGluayddLFxyXG4gICAgaW5kZW50QmFyOiBbeyBpbmRlbnQ6ICctMScgfSwgeyBpbmRlbnQ6ICcrMScgfV0sXHJcbiAgICBsaXN0QmFyOiBbeyBsaXN0OiAnb3JkZXJlZCcgfSwgeyBsaXN0OiAnYnVsbGV0JyB9XSxcclxuICAgIEJsb2NrQmFyOiBbJ2NvZGUtYmxvY2snLCAnYmxvY2txdW90ZSddLFxyXG4gICAgc3VwZXJBbmRTdWJzY3JpcHRCYXI6IFt7IHNjcmlwdDogJ3N1YicgfSwgeyBzY3JpcHQ6ICdzdXBlcicgfV0sXHJcbiAgICBjb2xvckJhcjogW3sgY29sb3I6IFtdIH0sIHsgYmFja2dyb3VuZDogW10gfV0sXHJcbiAgICBtZWRpYUJhcjogWydpbWFnZScsICd2aWRlbyddLFxyXG4gICAgYWxpZ25CYXI6IFt7IGFsaWduOiBbXSB9XSxcclxuICAgIGltYWdlQmFyOiBbJ2ltYWdlJ10sXHJcbiAgICB2aWRlb0JhcjogWyd2aWRlbyddLFxyXG4gICAgY2xlYW5CYXI6IFsnY2xlYW4nXVxyXG59O1xyXG4iXX0=