{"version":3,"sources":["ng://@farris/ui-tag/lib/tag.service.ts","ng://@farris/ui-tag/lib/tag.component.ts","ng://@farris/ui-tag/lib/tag.module.ts"],"names":["TagService","Injectable","args","providedIn","FarrisTagComponent","el","this","type","close","EventEmitter","exist","selectValue","Object","defineProperty","prototype","nySize","size","tagClass","nyActive","active","ngOnInit","getValue","disabled","emit","value","hasParent","nativeElement","parentElement","classList","contains","closeHandler","e","preventDefault","Component","selector","template","ElementRef","Input","Output","HostBinding","FarrisTagModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"4VAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCAAC,EAAA,WA6EE,SAAAA,EAAoBC,GAAAC,KAAAD,GAAAA,EAzCpBC,KAAAC,KAAO,YAoBPD,KAAAE,MAAQ,IAAIC,EAAAA,aAMZH,KAAAI,OAAQ,EAaRJ,KAAAK,YAAc,IAAIF,EAAAA,aA6BpB,OArFEG,OAAAC,eACIT,EAAAU,UAAA,OAAI,KADR,WAEE,MAAoB,UAAhBR,KAAKS,OACA,KACkB,UAAhBT,KAAKS,OACP,KAEA,UAIX,SAASC,GACPV,KAAKS,OAASC,mCA4BiBZ,EAAAU,UAAAG,SAAjC,WACE,OAAO,GAITL,OAAAC,eAAIT,EAAAU,UAAA,SAAM,KAAV,WACE,OAAOR,KAAKY,cAGd,SAAWC,GACTb,KAAKY,SAAWC,mCAUlBf,EAAAU,UAAAM,SAAA,aAIAhB,EAAAU,UAAAO,SAAA,WACMf,KAAKgB,WAGThB,KAAKY,UAAYZ,KAAKY,SACtBZ,KAAKK,YAAYY,KAAK,CACpBC,MAAOlB,KAAKkB,MACZL,OAAQb,KAAKa,WAIjBf,EAAAU,UAAAW,UAAA,WACE,OAAOnB,KAAKD,GAAGqB,cAAcC,cAAcC,UAAUC,SAAS,eAGhEzB,EAAAU,UAAAgB,aAAA,SAAaC,GACXA,EAAEC,iBACF1B,KAAKI,OAAQ,EACbJ,KAAKE,MAAMe,KAAKjB,KAAKkB,4BApGxBS,EAAAA,UAAS/B,KAAA,CAAC,CACTgC,SAAU,aACVC,SAAU,0iBAH6CC,EAAAA,4CAmBtDC,EAAAA,oBAgBAA,EAAAA,oBAIAA,EAAAA,qBAIAA,EAAAA,wBAIAA,EAAAA,wBAIAA,EAAAA,qBAIAC,EAAAA,yBAIAC,EAAAA,YAAWrC,KAAA,CAAC,yCAeZoC,EAAAA,UA8BHlC,EAxGA,GCAAoC,EAAA,WAGA,SAAAA,KAO+B,2BAP9BC,EAAAA,SAAQvC,KAAA,CAAC,CACRwC,aAAc,CAACtC,GACfuC,QAAS,CACPC,EAAAA,cAEFC,QAAS,CAACzC,OAEmBoC,EAV/B","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef, Optional, HostBinding } from '@angular/core';\n@Component({\n  selector: 'farris-tag',\n  template: `\n    <span [class]=\"'btn btn-'+ type +' btn-'+ size\"\n    [class.active]=\"active\"\n    [class.disabled]=\"disabled\"\n    [class.farris-tag-disabled]=\"disabled\"\n    (click)=\"getValue()\" *ngIf=\"exist\">\n      <ng-content></ng-content>\n      &nbsp;\n      <i class=\"k-icon k-i-close\" *ngIf=\"closable\" (click)=\"closeHandler($event)\"></i>\n    </span>\n  `,\n  styleUrls: ['./tag.component.scss']\n})\nexport class FarrisTagComponent implements OnInit {\n\n  /* æ ç­¾å¤§å° */\n  @Input()\n  get size() {\n    if (this.nySize === 'small') {\n      return 'sm';\n    } else if (this.nySize === 'large') {\n      return 'lg'\n    } else {\n      return 'md'\n    }\n  }\n\n  set size(size: string) {\n    this.nySize = size;\n  }\n\n  /* ç±»åæ ·å¼ */\n  @Input()\n  type = 'secondary';\n\n  /* tagææ¬ */\n  @Input()\n  text: any;\n\n  /* tagæ è¯ */\n  @Input()\n  value: any;\n\n  /* ç¦ç¨ */\n  @Input()\n  disabled: boolean;\n\n  /* æ¯å¦å¯å³é­ */\n  @Input()\n  closable: boolean;\n\n  /* close emitäºä»¶ */\n  @Output()\n  close = new EventEmitter<any>();\n\n\n  @HostBinding('class.farris-tag') tagClass() {\n    return true;\n  }\n  exist = true;\n  /* tag æ¯å¦éä¸­ */\n  get active() {\n    return this.nyActive;\n  };\n\n  set active(active: boolean) {\n    this.nyActive = active;\n  }\n  nyActive: boolean;\n  nySize: string;\n  /* tagå¹¿æ­äºä»¶ */\n  @Output()\n  selectValue = new EventEmitter<any>();\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit() {\n\n  }\n\n  getValue() {\n    if (this.disabled) {\n      return;\n    }\n    this.nyActive = !this.nyActive;\n    this.selectValue.emit({\n      value: this.value,\n      active: this.active\n    });\n  }\n\n  hasParent() {\n    return this.el.nativeElement.parentElement.classList.contains('farris-tag');\n  }\n\n  closeHandler(e: any) {\n    e.preventDefault();\n    this.exist = false;\n    this.close.emit(this.value);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FarrisTagComponent } from './tag.component';\n@NgModule({\n  declarations: [FarrisTagComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [FarrisTagComponent]\n})\nexport class FarrisTagModule { }\n"]}