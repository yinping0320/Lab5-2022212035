(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@farris/ui-tag', ['exports', '@angular/core', '@angular/common'], factory) :
    (factory((global.farris = global.farris || {}, global.farris['ui-tag'] = {}),global.ng.core,global.ng.common));
}(this, (function (exports,i0,common) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var TagService = /** @class */ (function () {
        function TagService() {
        }
        TagService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        TagService.ctorParameters = function () { return []; };
        /** @nocollapse */ TagService.ngInjectableDef = i0.defineInjectable({ factory: function TagService_Factory() { return new TagService(); }, token: TagService, providedIn: "root" });
        return TagService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FarrisTagComponent = /** @class */ (function () {
        function FarrisTagComponent(el) {
            this.el = el;
            /* 类型样式 */
            this.type = 'secondary';
            /* close emit事件 */
            this.close = new i0.EventEmitter();
            this.exist = true;
            /* tag广播事件 */
            this.selectValue = new i0.EventEmitter();
        }
        Object.defineProperty(FarrisTagComponent.prototype, "size", {
            /* 标签大小 */
            get: /* 标签大小 */ 
            /**
             * @return {?}
             */
            function () {
                if (this.nySize === 'small') {
                    return 'sm';
                }
                else if (this.nySize === 'large') {
                    return 'lg';
                }
                else {
                    return 'md';
                }
            },
            set: /**
             * @param {?} size
             * @return {?}
             */ function (size) {
                this.nySize = size;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FarrisTagComponent.prototype.tagClass = /**
         * @return {?}
         */
            function () {
                return true;
            };
        Object.defineProperty(FarrisTagComponent.prototype, "active", {
            /* tag 是否选中 */
            get: /* tag 是否选中 */ 
            /**
             * @return {?}
             */
            function () {
                return this.nyActive;
            },
            set: /**
             * @param {?} active
             * @return {?}
             */ function (active) {
                this.nyActive = active;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FarrisTagComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
            };
        /**
         * @return {?}
         */
        FarrisTagComponent.prototype.getValue = /**
         * @return {?}
         */
            function () {
                if (this.disabled) {
                    return;
                }
                this.nyActive = !this.nyActive;
                this.selectValue.emit({
                    value: this.value,
                    active: this.active
                });
            };
        /**
         * @return {?}
         */
        FarrisTagComponent.prototype.hasParent = /**
         * @return {?}
         */
            function () {
                return this.el.nativeElement.parentElement.classList.contains('farris-tag');
            };
        /**
         * @param {?} e
         * @return {?}
         */
        FarrisTagComponent.prototype.closeHandler = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                e.preventDefault();
                this.exist = false;
                this.close.emit(this.value);
            };
        FarrisTagComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'farris-tag',
                        template: "\n    <span [class]=\"'btn btn-'+ type +' btn-'+ size\"\n    [class.active]=\"active\"\n    [class.disabled]=\"disabled\"\n    [class.farris-tag-disabled]=\"disabled\"\n    (click)=\"getValue()\" *ngIf=\"exist\">\n      <ng-content></ng-content>\n      &nbsp;\n      <i class=\"k-icon k-i-close\" *ngIf=\"closable\" (click)=\"closeHandler($event)\"></i>\n    </span>\n  ",
                        styles: [".k-icon.k-i-close{font-size:12px}.k-icon.k-i-close:hover{cursor:pointer}:host .btn{margin-left:5px}:host .farris-tag-disabled{cursor:text}"]
                    }] }
        ];
        /** @nocollapse */
        FarrisTagComponent.ctorParameters = function () {
            return [
                { type: i0.ElementRef }
            ];
        };
        FarrisTagComponent.propDecorators = {
            size: [{ type: i0.Input }],
            type: [{ type: i0.Input }],
            text: [{ type: i0.Input }],
            value: [{ type: i0.Input }],
            disabled: [{ type: i0.Input }],
            closable: [{ type: i0.Input }],
            close: [{ type: i0.Output }],
            tagClass: [{ type: i0.HostBinding, args: ['class.farris-tag',] }],
            selectValue: [{ type: i0.Output }]
        };
        return FarrisTagComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FarrisTagModule = /** @class */ (function () {
        function FarrisTagModule() {
        }
        FarrisTagModule.decorators = [
            { type: i0.NgModule, args: [{
                        declarations: [FarrisTagComponent],
                        imports: [
                            common.CommonModule
                        ],
                        exports: [FarrisTagComponent]
                    },] }
        ];
        return FarrisTagModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.TagService = TagService;
    exports.FarrisTagComponent = FarrisTagComponent;
    exports.FarrisTagModule = FarrisTagModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=farris-ui-tag.umd.js.map