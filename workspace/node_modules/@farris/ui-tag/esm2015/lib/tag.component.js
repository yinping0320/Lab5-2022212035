/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ElementRef, HostBinding } from '@angular/core';
export class FarrisTagComponent {
    /**
     * @param {?} el
     */
    constructor(el) {
        this.el = el;
        /* 类型样式 */
        this.type = 'secondary';
        /* close emit事件 */
        this.close = new EventEmitter();
        this.exist = true;
        /* tag广播事件 */
        this.selectValue = new EventEmitter();
    }
    /* 标签大小 */
    /**
     * @return {?}
     */
    get size() {
        if (this.nySize === 'small') {
            return 'sm';
        }
        else if (this.nySize === 'large') {
            return 'lg';
        }
        else {
            return 'md';
        }
    }
    /**
     * @param {?} size
     * @return {?}
     */
    set size(size) {
        this.nySize = size;
    }
    /**
     * @return {?}
     */
    tagClass() {
        return true;
    }
    /* tag 是否选中 */
    /**
     * @return {?}
     */
    get active() {
        return this.nyActive;
    }
    ;
    /**
     * @param {?} active
     * @return {?}
     */
    set active(active) {
        this.nyActive = active;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    getValue() {
        if (this.disabled) {
            return;
        }
        this.nyActive = !this.nyActive;
        this.selectValue.emit({
            value: this.value,
            active: this.active
        });
    }
    /**
     * @return {?}
     */
    hasParent() {
        return this.el.nativeElement.parentElement.classList.contains('farris-tag');
    }
    /**
     * @param {?} e
     * @return {?}
     */
    closeHandler(e) {
        e.preventDefault();
        this.exist = false;
        this.close.emit(this.value);
    }
}
FarrisTagComponent.decorators = [
    { type: Component, args: [{
                selector: 'farris-tag',
                template: `
    <span [class]="'btn btn-'+ type +' btn-'+ size"
    [class.active]="active"
    [class.disabled]="disabled"
    [class.farris-tag-disabled]="disabled"
    (click)="getValue()" *ngIf="exist">
      <ng-content></ng-content>
      &nbsp;
      <i class="k-icon k-i-close" *ngIf="closable" (click)="closeHandler($event)"></i>
    </span>
  `,
                styles: [".k-icon.k-i-close{font-size:12px}.k-icon.k-i-close:hover{cursor:pointer}:host .btn{margin-left:5px}:host .farris-tag-disabled{cursor:text}"]
            }] }
];
/** @nocollapse */
FarrisTagComponent.ctorParameters = () => [
    { type: ElementRef }
];
FarrisTagComponent.propDecorators = {
    size: [{ type: Input }],
    type: [{ type: Input }],
    text: [{ type: Input }],
    value: [{ type: Input }],
    disabled: [{ type: Input }],
    closable: [{ type: Input }],
    close: [{ type: Output }],
    tagClass: [{ type: HostBinding, args: ['class.farris-tag',] }],
    selectValue: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    FarrisTagComponent.prototype.type;
    /** @type {?} */
    FarrisTagComponent.prototype.text;
    /** @type {?} */
    FarrisTagComponent.prototype.value;
    /** @type {?} */
    FarrisTagComponent.prototype.disabled;
    /** @type {?} */
    FarrisTagComponent.prototype.closable;
    /** @type {?} */
    FarrisTagComponent.prototype.close;
    /** @type {?} */
    FarrisTagComponent.prototype.exist;
    /** @type {?} */
    FarrisTagComponent.prototype.nyActive;
    /** @type {?} */
    FarrisTagComponent.prototype.nySize;
    /** @type {?} */
    FarrisTagComponent.prototype.selectValue;
    /**
     * @type {?}
     * @private
     */
    FarrisTagComponent.prototype.el;
    /* Skipping unhandled member: ;*/
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktdGFnLyIsInNvdXJjZXMiOlsibGliL3RhZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFZLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQWdCbEgsTUFBTSxPQUFPLGtCQUFrQjs7OztJQTZEN0IsWUFBb0IsRUFBYztRQUFkLE9BQUUsR0FBRixFQUFFLENBQVk7O1FBekNsQyxTQUFJLEdBQUcsV0FBVyxDQUFDOztRQW9CbkIsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFNaEMsVUFBSyxHQUFHLElBQUksQ0FBQzs7UUFhYixnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFFQSxDQUFDOzs7OztJQTFEdkMsSUFDSSxJQUFJO1FBQ04sSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLE9BQU8sRUFBRTtZQUMzQixPQUFPLElBQUksQ0FBQztTQUNiO2FBQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLE9BQU8sRUFBRTtZQUNsQyxPQUFPLElBQUksQ0FBQTtTQUNaO2FBQU07WUFDTCxPQUFPLElBQUksQ0FBQTtTQUNaO0lBQ0gsQ0FBQzs7Ozs7SUFFRCxJQUFJLElBQUksQ0FBQyxJQUFZO1FBQ25CLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO0lBQ3JCLENBQUM7Ozs7SUEyQmdDLFFBQVE7UUFDdkMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDOzs7OztJQUdELElBQUksTUFBTTtRQUNSLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBQUEsQ0FBQzs7Ozs7SUFFRixJQUFJLE1BQU0sQ0FBQyxNQUFlO1FBQ3hCLElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDO0lBQ3pCLENBQUM7Ozs7SUFTRCxRQUFRO0lBRVIsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDL0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUM7WUFDcEIsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO1lBQ2pCLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTTtTQUNwQixDQUFDLENBQUM7SUFDTCxDQUFDOzs7O0lBRUQsU0FBUztRQUNQLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDOUUsQ0FBQzs7Ozs7SUFFRCxZQUFZLENBQUMsQ0FBTTtRQUNqQixDQUFDLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDbkIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzlCLENBQUM7OztZQXJHRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLFlBQVk7Z0JBQ3RCLFFBQVEsRUFBRTs7Ozs7Ozs7OztHQVVUOzthQUVGOzs7O1lBZndELFVBQVU7OzttQkFtQmhFLEtBQUs7bUJBZ0JMLEtBQUs7bUJBSUwsS0FBSztvQkFJTCxLQUFLO3VCQUlMLEtBQUs7dUJBSUwsS0FBSztvQkFJTCxNQUFNO3VCQUlOLFdBQVcsU0FBQyxrQkFBa0I7MEJBZTlCLE1BQU07Ozs7SUF2Q1Asa0NBQ21COztJQUduQixrQ0FDVTs7SUFHVixtQ0FDVzs7SUFHWCxzQ0FDa0I7O0lBR2xCLHNDQUNrQjs7SUFHbEIsbUNBQ2dDOztJQU1oQyxtQ0FBYTs7SUFTYixzQ0FBa0I7O0lBQ2xCLG9DQUFlOztJQUVmLHlDQUNzQzs7Ozs7SUFFMUIsZ0NBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgRWxlbWVudFJlZiwgT3B0aW9uYWwsIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmYXJyaXMtdGFnJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8c3BhbiBbY2xhc3NdPVwiJ2J0biBidG4tJysgdHlwZSArJyBidG4tJysgc2l6ZVwiXG4gICAgW2NsYXNzLmFjdGl2ZV09XCJhY3RpdmVcIlxuICAgIFtjbGFzcy5kaXNhYmxlZF09XCJkaXNhYmxlZFwiXG4gICAgW2NsYXNzLmZhcnJpcy10YWctZGlzYWJsZWRdPVwiZGlzYWJsZWRcIlxuICAgIChjbGljayk9XCJnZXRWYWx1ZSgpXCIgKm5nSWY9XCJleGlzdFwiPlxuICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgICAgJm5ic3A7XG4gICAgICA8aSBjbGFzcz1cImstaWNvbiBrLWktY2xvc2VcIiAqbmdJZj1cImNsb3NhYmxlXCIgKGNsaWNrKT1cImNsb3NlSGFuZGxlcigkZXZlbnQpXCI+PC9pPlxuICAgIDwvc3Bhbj5cbiAgYCxcbiAgc3R5bGVVcmxzOiBbJy4vdGFnLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgRmFycmlzVGFnQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAvKiDmoIfnrb7lpKflsI8gKi9cbiAgQElucHV0KClcbiAgZ2V0IHNpemUoKSB7XG4gICAgaWYgKHRoaXMubnlTaXplID09PSAnc21hbGwnKSB7XG4gICAgICByZXR1cm4gJ3NtJztcbiAgICB9IGVsc2UgaWYgKHRoaXMubnlTaXplID09PSAnbGFyZ2UnKSB7XG4gICAgICByZXR1cm4gJ2xnJ1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gJ21kJ1xuICAgIH1cbiAgfVxuXG4gIHNldCBzaXplKHNpemU6IHN0cmluZykge1xuICAgIHRoaXMubnlTaXplID0gc2l6ZTtcbiAgfVxuXG4gIC8qIOexu+Wei+agt+W8jyAqL1xuICBASW5wdXQoKVxuICB0eXBlID0gJ3NlY29uZGFyeSc7XG5cbiAgLyogdGFn5paH5pysICovXG4gIEBJbnB1dCgpXG4gIHRleHQ6IGFueTtcblxuICAvKiB0YWfmoIfor4YgKi9cbiAgQElucHV0KClcbiAgdmFsdWU6IGFueTtcblxuICAvKiDnpoHnlKggKi9cbiAgQElucHV0KClcbiAgZGlzYWJsZWQ6IGJvb2xlYW47XG5cbiAgLyog5piv5ZCm5Y+v5YWz6ZetICovXG4gIEBJbnB1dCgpXG4gIGNsb3NhYmxlOiBib29sZWFuO1xuXG4gIC8qIGNsb3NlIGVtaXTkuovku7YgKi9cbiAgQE91dHB1dCgpXG4gIGNsb3NlID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmZhcnJpcy10YWcnKSB0YWdDbGFzcygpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBleGlzdCA9IHRydWU7XG4gIC8qIHRhZyDmmK/lkKbpgInkuK0gKi9cbiAgZ2V0IGFjdGl2ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5ueUFjdGl2ZTtcbiAgfTtcblxuICBzZXQgYWN0aXZlKGFjdGl2ZTogYm9vbGVhbikge1xuICAgIHRoaXMubnlBY3RpdmUgPSBhY3RpdmU7XG4gIH1cbiAgbnlBY3RpdmU6IGJvb2xlYW47XG4gIG55U2l6ZTogc3RyaW5nO1xuICAvKiB0YWflub/mkq3kuovku7YgKi9cbiAgQE91dHB1dCgpXG4gIHNlbGVjdFZhbHVlID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbDogRWxlbWVudFJlZikgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG5cbiAgfVxuXG4gIGdldFZhbHVlKCkge1xuICAgIGlmICh0aGlzLmRpc2FibGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMubnlBY3RpdmUgPSAhdGhpcy5ueUFjdGl2ZTtcbiAgICB0aGlzLnNlbGVjdFZhbHVlLmVtaXQoe1xuICAgICAgdmFsdWU6IHRoaXMudmFsdWUsXG4gICAgICBhY3RpdmU6IHRoaXMuYWN0aXZlXG4gICAgfSk7XG4gIH1cblxuICBoYXNQYXJlbnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWwubmF0aXZlRWxlbWVudC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnZmFycmlzLXRhZycpO1xuICB9XG5cbiAgY2xvc2VIYW5kbGVyKGU6IGFueSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLmV4aXN0ID0gZmFsc2U7XG4gICAgdGhpcy5jbG9zZS5lbWl0KHRoaXMudmFsdWUpO1xuICB9XG5cbn1cbiJdfQ==