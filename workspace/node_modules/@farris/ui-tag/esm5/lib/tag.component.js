/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ElementRef, HostBinding } from '@angular/core';
var FarrisTagComponent = /** @class */ (function () {
    function FarrisTagComponent(el) {
        this.el = el;
        /* 类型样式 */
        this.type = 'secondary';
        /* close emit事件 */
        this.close = new EventEmitter();
        this.exist = true;
        /* tag广播事件 */
        this.selectValue = new EventEmitter();
    }
    Object.defineProperty(FarrisTagComponent.prototype, "size", {
        /* 标签大小 */
        get: /* 标签大小 */
        /**
         * @return {?}
         */
        function () {
            if (this.nySize === 'small') {
                return 'sm';
            }
            else if (this.nySize === 'large') {
                return 'lg';
            }
            else {
                return 'md';
            }
        },
        set: /**
         * @param {?} size
         * @return {?}
         */
        function (size) {
            this.nySize = size;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FarrisTagComponent.prototype.tagClass = /**
     * @return {?}
     */
    function () {
        return true;
    };
    Object.defineProperty(FarrisTagComponent.prototype, "active", {
        /* tag 是否选中 */
        get: /* tag 是否选中 */
        /**
         * @return {?}
         */
        function () {
            return this.nyActive;
        },
        set: /**
         * @param {?} active
         * @return {?}
         */
        function (active) {
            this.nyActive = active;
        },
        enumerable: true,
        configurable: true
    });
    ;
    /**
     * @return {?}
     */
    FarrisTagComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    FarrisTagComponent.prototype.getValue = /**
     * @return {?}
     */
    function () {
        if (this.disabled) {
            return;
        }
        this.nyActive = !this.nyActive;
        this.selectValue.emit({
            value: this.value,
            active: this.active
        });
    };
    /**
     * @return {?}
     */
    FarrisTagComponent.prototype.hasParent = /**
     * @return {?}
     */
    function () {
        return this.el.nativeElement.parentElement.classList.contains('farris-tag');
    };
    /**
     * @param {?} e
     * @return {?}
     */
    FarrisTagComponent.prototype.closeHandler = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        e.preventDefault();
        this.exist = false;
        this.close.emit(this.value);
    };
    FarrisTagComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-tag',
                    template: "\n    <span [class]=\"'btn btn-'+ type +' btn-'+ size\"\n    [class.active]=\"active\"\n    [class.disabled]=\"disabled\"\n    [class.farris-tag-disabled]=\"disabled\"\n    (click)=\"getValue()\" *ngIf=\"exist\">\n      <ng-content></ng-content>\n      &nbsp;\n      <i class=\"k-icon k-i-close\" *ngIf=\"closable\" (click)=\"closeHandler($event)\"></i>\n    </span>\n  ",
                    styles: [".k-icon.k-i-close{font-size:12px}.k-icon.k-i-close:hover{cursor:pointer}:host .btn{margin-left:5px}:host .farris-tag-disabled{cursor:text}"]
                }] }
    ];
    /** @nocollapse */
    FarrisTagComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    FarrisTagComponent.propDecorators = {
        size: [{ type: Input }],
        type: [{ type: Input }],
        text: [{ type: Input }],
        value: [{ type: Input }],
        disabled: [{ type: Input }],
        closable: [{ type: Input }],
        close: [{ type: Output }],
        tagClass: [{ type: HostBinding, args: ['class.farris-tag',] }],
        selectValue: [{ type: Output }]
    };
    return FarrisTagComponent;
}());
export { FarrisTagComponent };
if (false) {
    /** @type {?} */
    FarrisTagComponent.prototype.type;
    /** @type {?} */
    FarrisTagComponent.prototype.text;
    /** @type {?} */
    FarrisTagComponent.prototype.value;
    /** @type {?} */
    FarrisTagComponent.prototype.disabled;
    /** @type {?} */
    FarrisTagComponent.prototype.closable;
    /** @type {?} */
    FarrisTagComponent.prototype.close;
    /** @type {?} */
    FarrisTagComponent.prototype.exist;
    /** @type {?} */
    FarrisTagComponent.prototype.nyActive;
    /** @type {?} */
    FarrisTagComponent.prototype.nySize;
    /** @type {?} */
    FarrisTagComponent.prototype.selectValue;
    /**
     * @type {?}
     * @private
     */
    FarrisTagComponent.prototype.el;
    /* Skipping unhandled member: ;*/
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktdGFnLyIsInNvdXJjZXMiOlsibGliL3RhZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFZLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsSDtJQTRFRSw0QkFBb0IsRUFBYztRQUFkLE9BQUUsR0FBRixFQUFFLENBQVk7O1FBekNsQyxTQUFJLEdBQUcsV0FBVyxDQUFDOztRQW9CbkIsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFNaEMsVUFBSyxHQUFHLElBQUksQ0FBQzs7UUFhYixnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFFQSxDQUFDO0lBMUR2QyxzQkFDSSxvQ0FBSTtRQUZSLFVBQVU7Ozs7O1FBQ1Y7WUFFRSxJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssT0FBTyxFQUFFO2dCQUMzQixPQUFPLElBQUksQ0FBQzthQUNiO2lCQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxPQUFPLEVBQUU7Z0JBQ2xDLE9BQU8sSUFBSSxDQUFBO2FBQ1o7aUJBQU07Z0JBQ0wsT0FBTyxJQUFJLENBQUE7YUFDWjtRQUNILENBQUM7Ozs7O1FBRUQsVUFBUyxJQUFZO1lBQ25CLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ3JCLENBQUM7OztPQUpBOzs7O0lBK0JnQyxxQ0FBUTs7O0lBQXpDO1FBQ0UsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBR0Qsc0JBQUksc0NBQU07UUFEVixjQUFjOzs7OztRQUNkO1lBQ0UsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3ZCLENBQUM7Ozs7O1FBRUQsVUFBVyxNQUFlO1lBQ3hCLElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDO1FBQ3pCLENBQUM7OztPQUpBO0lBQUEsQ0FBQzs7OztJQWFGLHFDQUFROzs7SUFBUjtJQUVBLENBQUM7Ozs7SUFFRCxxQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDL0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUM7WUFDcEIsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO1lBQ2pCLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTTtTQUNwQixDQUFDLENBQUM7SUFDTCxDQUFDOzs7O0lBRUQsc0NBQVM7OztJQUFUO1FBQ0UsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUM5RSxDQUFDOzs7OztJQUVELHlDQUFZOzs7O0lBQVosVUFBYSxDQUFNO1FBQ2pCLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUNuQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDOUIsQ0FBQzs7Z0JBckdGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsWUFBWTtvQkFDdEIsUUFBUSxFQUFFLG9YQVVUOztpQkFFRjs7OztnQkFmd0QsVUFBVTs7O3VCQW1CaEUsS0FBSzt1QkFnQkwsS0FBSzt1QkFJTCxLQUFLO3dCQUlMLEtBQUs7MkJBSUwsS0FBSzsyQkFJTCxLQUFLO3dCQUlMLE1BQU07MkJBSU4sV0FBVyxTQUFDLGtCQUFrQjs4QkFlOUIsTUFBTTs7SUE4QlQseUJBQUM7Q0FBQSxBQXZHRCxJQXVHQztTQXhGWSxrQkFBa0I7OztJQW1CN0Isa0NBQ21COztJQUduQixrQ0FDVTs7SUFHVixtQ0FDVzs7SUFHWCxzQ0FDa0I7O0lBR2xCLHNDQUNrQjs7SUFHbEIsbUNBQ2dDOztJQU1oQyxtQ0FBYTs7SUFTYixzQ0FBa0I7O0lBQ2xCLG9DQUFlOztJQUVmLHlDQUNzQzs7Ozs7SUFFMUIsZ0NBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgRWxlbWVudFJlZiwgT3B0aW9uYWwsIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmYXJyaXMtdGFnJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8c3BhbiBbY2xhc3NdPVwiJ2J0biBidG4tJysgdHlwZSArJyBidG4tJysgc2l6ZVwiXG4gICAgW2NsYXNzLmFjdGl2ZV09XCJhY3RpdmVcIlxuICAgIFtjbGFzcy5kaXNhYmxlZF09XCJkaXNhYmxlZFwiXG4gICAgW2NsYXNzLmZhcnJpcy10YWctZGlzYWJsZWRdPVwiZGlzYWJsZWRcIlxuICAgIChjbGljayk9XCJnZXRWYWx1ZSgpXCIgKm5nSWY9XCJleGlzdFwiPlxuICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgICAgJm5ic3A7XG4gICAgICA8aSBjbGFzcz1cImstaWNvbiBrLWktY2xvc2VcIiAqbmdJZj1cImNsb3NhYmxlXCIgKGNsaWNrKT1cImNsb3NlSGFuZGxlcigkZXZlbnQpXCI+PC9pPlxuICAgIDwvc3Bhbj5cbiAgYCxcbiAgc3R5bGVVcmxzOiBbJy4vdGFnLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgRmFycmlzVGFnQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAvKiDmoIfnrb7lpKflsI8gKi9cbiAgQElucHV0KClcbiAgZ2V0IHNpemUoKSB7XG4gICAgaWYgKHRoaXMubnlTaXplID09PSAnc21hbGwnKSB7XG4gICAgICByZXR1cm4gJ3NtJztcbiAgICB9IGVsc2UgaWYgKHRoaXMubnlTaXplID09PSAnbGFyZ2UnKSB7XG4gICAgICByZXR1cm4gJ2xnJ1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gJ21kJ1xuICAgIH1cbiAgfVxuXG4gIHNldCBzaXplKHNpemU6IHN0cmluZykge1xuICAgIHRoaXMubnlTaXplID0gc2l6ZTtcbiAgfVxuXG4gIC8qIOexu+Wei+agt+W8jyAqL1xuICBASW5wdXQoKVxuICB0eXBlID0gJ3NlY29uZGFyeSc7XG5cbiAgLyogdGFn5paH5pysICovXG4gIEBJbnB1dCgpXG4gIHRleHQ6IGFueTtcblxuICAvKiB0YWfmoIfor4YgKi9cbiAgQElucHV0KClcbiAgdmFsdWU6IGFueTtcblxuICAvKiDnpoHnlKggKi9cbiAgQElucHV0KClcbiAgZGlzYWJsZWQ6IGJvb2xlYW47XG5cbiAgLyog5piv5ZCm5Y+v5YWz6ZetICovXG4gIEBJbnB1dCgpXG4gIGNsb3NhYmxlOiBib29sZWFuO1xuXG4gIC8qIGNsb3NlIGVtaXTkuovku7YgKi9cbiAgQE91dHB1dCgpXG4gIGNsb3NlID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmZhcnJpcy10YWcnKSB0YWdDbGFzcygpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBleGlzdCA9IHRydWU7XG4gIC8qIHRhZyDmmK/lkKbpgInkuK0gKi9cbiAgZ2V0IGFjdGl2ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5ueUFjdGl2ZTtcbiAgfTtcblxuICBzZXQgYWN0aXZlKGFjdGl2ZTogYm9vbGVhbikge1xuICAgIHRoaXMubnlBY3RpdmUgPSBhY3RpdmU7XG4gIH1cbiAgbnlBY3RpdmU6IGJvb2xlYW47XG4gIG55U2l6ZTogc3RyaW5nO1xuICAvKiB0YWflub/mkq3kuovku7YgKi9cbiAgQE91dHB1dCgpXG4gIHNlbGVjdFZhbHVlID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbDogRWxlbWVudFJlZikgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG5cbiAgfVxuXG4gIGdldFZhbHVlKCkge1xuICAgIGlmICh0aGlzLmRpc2FibGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMubnlBY3RpdmUgPSAhdGhpcy5ueUFjdGl2ZTtcbiAgICB0aGlzLnNlbGVjdFZhbHVlLmVtaXQoe1xuICAgICAgdmFsdWU6IHRoaXMudmFsdWUsXG4gICAgICBhY3RpdmU6IHRoaXMuYWN0aXZlXG4gICAgfSk7XG4gIH1cblxuICBoYXNQYXJlbnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWwubmF0aXZlRWxlbWVudC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnZmFycmlzLXRhZycpO1xuICB9XG5cbiAgY2xvc2VIYW5kbGVyKGU6IGFueSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLmV4aXN0ID0gZmFsc2U7XG4gICAgdGhpcy5jbG9zZS5lbWl0KHRoaXMudmFsdWUpO1xuICB9XG5cbn1cbiJdfQ==