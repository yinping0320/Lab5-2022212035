{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@farris/component-querycondition/lib/service/communicationservice.ts","ng://@farris/component-querycondition/lib/service/convertorservice.ts","ng://@farris/component-querycondition/lib/entity/controltype.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/enumtype.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/integerenumvalue.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/stringenumvalue.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/boolenumvalue.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/ienumvalue.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/dropdownlistcontrol.ts","ng://@farris/component-querycondition/lib/entity/controltype/text/textcontrol.ts","ng://@farris/component-querycondition/lib/entity/controltype/daterange/date-range.control.ts","ng://@farris/component-querycondition/lib/entity/controltype/date/single-date-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/smarthelp/smarthelpcontrol.ts","ng://@farris/component-querycondition/lib/entity/controltype/numberrange/numberrangecontrol.ts","ng://@farris/component-querycondition/lib/entity/controltype/number/single-number-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/year/year-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/checkbox/checkbox-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/daterange/datertime-range-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/month/month-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/monthrange/month-range-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/date/single-date-time-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/combolookup/combolookup-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/radio/radio-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/input-group/inputgroupcontrol.ts","ng://@farris/component-querycondition/lib/entity/controltype/icontrol.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/textvalue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/numberrangevaue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/daterangevalue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/smarthelpvalue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/single-date-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/single-number-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/single-year-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/checkbox-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/dropdownlistvalue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/single-month-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/month-range-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/single-date-time-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/combolookup-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/radio-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/inputgroupvalue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/ivalue.ts","ng://@farris/component-querycondition/lib/entity/querycondition.ts","ng://@farris/component-querycondition/lib/entity/valuetype.ts","ng://@farris/component-querycondition/lib/service/solution.service.ts","ng://@farris/component-querycondition/lib/querycondition.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/numberrangecomponent/numberrange.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/input/input.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/inputgroup/inputgroup.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/smarthelp/smarthelp.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/dropdown/dropdownlist.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/numbercomponent/single-number.component.ts","ng://@farris/component-querycondition/lib/fieldconfigdialog/configdialog.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/checkbox/checkbox.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/radio/radio.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/datepicker/datepicker.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/combolookup/combolookup.component.ts","ng://@farris/component-querycondition/lib/directives/clear-fields.directive.ts","ng://@farris/component-querycondition/lib/directives/label-text-multi.directive.ts","ng://@farris/component-querycondition/lib/querycondition-advanced/service/state.service.ts","ng://@farris/component-querycondition/lib/querycondition-advanced/querycondition-advanced.component.ts","ng://@farris/component-querycondition/lib/querycondition-advanced/config/compare-type.config.ts","ng://@farris/component-querycondition/lib/querycondition-advanced/querycondition-group/querycondition-group.component.ts","ng://@farris/component-querycondition/lib/querycondition-advanced/querycondition-item/querycondition-item.component.ts","ng://@farris/component-querycondition/lib/querycondition.module.ts","ng://@farris/component-querycondition/lib/entity/querysolutionvo.ts","ng://@farris/component-querycondition/lib/entity/querysolutionextendvo.ts","ng://@farris/component-querycondition/lib/entity/comparetype.ts","ng://@farris/component-querycondition/lib/entity/fieldconfig/fieldconfig.ts"],"names":["__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","CommunicationService","Injectable","this","eventbus","EventEmitter","ConvertorService","ControlType","Text","SingleDate","SmartHelp","DropDownList","DateRange","NumberRange","SingleNumber","SingleYear","BoolCheck","DateTimeRange","SingleMonth","MonthRange","SingleDateTime","ComboLookUp","Radio","InputGroup","EnumType","IntType","StringType","BoolType","EnumIntegerValue","prototype","getEnumType","getEnumValueName","name","getEnumValue","EnumStringValue","EnumBoolValue","EnumValueConvert","convertJObject","obj","enumValue","enumType","jobj","Object","initFromJobject","content","assign","DropDownListControl","getControlType","isRequired","require","DropDownListControlConvert","convertToObject","dropDownListControl","valueType","enumValues","jarray_1","convertor_1","forEach","element","uri","beforeShow","beforeHide","idField","textField","multiSelect","panelHeight","placeholder","className","initFromObject","control","Array","convertor","TextControl","DateRangeControl","SingleDateControl","SmartHelpContol","QuickSelectOption","NumberRangeControl","SingleNumberControl","SingleYearControl","CheckBoxControl","data","separator","isStringValue","DateTimeRangeControl","SingleMonthControl","MonthRangeControl","SingleDateTimeControl","ComboLookUpControl","RadioControl","RadioControlConvert","radioControl","horizontal","showLabel","disabled","InputGroupControl","DialogConfig","ControlConvert","controlType","TextValue","clearValue","undefined","setOriginalValue","getOriginalValue","isEmpty","NumberRangeValue","startValue","endValue","Error","begin","end","parseFloat","NumberRangeValueConvertor","numberRangeValue","DateRangeValue","formatted","startTime","split","delimiter","endTime","SmartHelpValue","_this","args","valueField","valueArr","map","helpItem","getPropValue","cloneDeep","join","textValue","isInputText","getTextValue","textArr","arg","shift","SingleDateValue","dateValue","date","SingleNumberValue","numValue","SingleYearValue","yearValue","year","CheckBoxValue","v","DropDownListValue","key","hasOwnProperty","SingleMonthValue","monthValue","month","MonthRangeValue","SingleDateTimeValue","datetimeValue","datetime","ComboLookUpValue","RadioValue","InputGroupValue","item","targetField","ConditionValueConvert","conditionValue","QueryCondition","visible","QueryConditionConvert","queryCondition","id","fieldCode","fieldName","placeHolder","valueConvert","controlConvertor","beginPlaceHolder","endPlaceHolder","conditionid","compareType","relation","Rbracket","Lbracket","conditonValue","conditionControl","ValueType","Value","Enum","Express","SolutionService","getControlConfigState","controlConfigState","updateControlConfigState","simpleCondition","convertToSimpleQueryConditions","fields","field","simpleQueryCondition","labelCode","getSimpleControl","controlData","simpleControl","controlTypeMap","get","controltype","updateSimpleControl","resultObj","sourceProps","source","distProps","k","convertToQueryConditions","_a","getControlAndValue","valueData","editable","groupText","usageMode","dialogOptions","setInputGroupDialog","click","format","returnFormat","dateChangedCmd","valueChangedCmd","weekSelect","showWeekNumbers","startFieldCode","endFieldCode","enableSplit","enableCustomFormat","emptyString","precision","textAlign","bigNumber","isBigNumber","min","minValue","max","maxValue","displayType","mapFields","preEventCmd","postEventCmd","context","enableFullTree","loadTreeDataType","singleSelect","expandLevel","enableCascade","cascadeStatus","nosearch","displayFields","displayTextSeparator","clearFields","clear","dialogTitle","panelWidth","enableMultiFieldSearch","pageSize","pageList","quickSelectControl","enable","quickSelect","showItemsCount","formatter","showMore","displayTypeTransform","isDynamicDate","maxDate","minDate","disable","getGuid","s4","Math","random","toString","substring","showInfo","message","infoType","title","timeout","notify","config","position","success","msg","info","warning","getConditionItemTitle","setValues","solution","fieldConfigs","readonly","qc","conditions","queryConditions","find","c","isNumCheck","updateControl","prop","isValid","type","filter","condition","inputGroupControlData","modalConfigData","modalConfig","dialogConfig","modalId","JSON","parse","replace","showHeader","showCloseButton","showMaxButton","width","height","NotifyService","BehaviorSubject","Map","defineProperty","QueryConditionComponent","_selectSolution","_resetFieldConfigs","solutionService","_selectedFieldConditions","ngOnDestroy","destroy$","complete","ngOnInit","currentLocale","localeIds","isControlInline","selectedFieldConditions","ngAfterViewInit","ngAfterViewChecked","hasSetMultiClass","currentItem","indexOf","getStyle","configDialogConfirm","event","configData","reConfigConditions","target","this_1","configData_1","tslib_1.__values","configData_1_1","_c","_d","fieldConditionsChange","emit","openFieldConfigDialog","configDialog","inputSelectedFileds","dialog","show","resetSelectedConditionValues","exceptRequired","fieldCondition","conditionChange","selectSolution","mode","conditionChangeAdvanced","clearFieldsChange","canClearRelatedFields","confirmLabelFormat","hasCustom_1","labelFormat","noCheckBoxConditions_1","maxLength_1","showCompleteLabel","buildSmartHelpKey","pathArr","prefix","location","hash","pathname","idService","encrypt","Component","selector","template","encapsulation","ViewEncapsulation","None","providers","ComponentFactoryResolver","Injector","BsModalService","LocaleService","Input","Output","ViewChild","communicationService","convertorService","resolver","injector","modalService","localeService","openAdvanced","en","zh-CHS","showButton","fieldCodeOfClearFields","Subject","ngZone","LOCALE_ID","IdService","NgZone","NumberRangeComponent","ngOnChanges","changes","currentValue","firstChange","some","constructMultiFieldNumberRange","testId","canNull","valueChange","dataArray","start","isNaN","beginValue","beginValueChange","$event","endValueChange","changeFields","InputComponent","constructTextItem","_inputItem","textItem","textValueObj","onBlur","hasError","hasErrorInfo","textControl","invalid","dirty","touched","errors","maxlength","hideLabel","maxLength","InputGroupComponent","constructInputGroupItem","inputGroupItem","inputGroupValueObj","getInputGroupBindingInfo","inputGroupControl","stringify","onClick","options","handle","selectedItem","isTextFromDialog","textFormDialog","clearData","SolutionSmartHelpComponent","getSmartHelpBindingInfo","instanceId","lookup","textChanged","subscribe","textChangedHandler","smartHelpControl","dialogWidth","dialogHeight","smartHelpValue","parseInt","helpValue","selectedDataHandler","mappingEmitter","onBeforeOpen","t","ids","displayValue","of","DropDownListComponent","getDataSource","initialValue","selectedItemId","dropDownListDataSource","selectChange","selected","selectedValue","selection","onClear","SingleNumberComponent","number","numberValue","ConfigDialogComponent","filedsDataSource","visibleFields","visibleSelectedFields","selectedIds","getValue","multiSelectCmp","enableMoveMore","cancel","moveAllToLeft","cancelEmitter","searchValue","close","confirm","requiredAndUncheck","val","includes","_fieldData","selectedFields","index","findIndex","confirmEmitter","reset","CheckBoxComponent","_item","nr","checkValue","valueChanged","RadioComponent","radioValue","HostBinding","cls","DatePickerComponent","dateRange","trim","bindValue","dateFormat","enableDynamic","showType","ShowType","noDateAndMonth","showTime","noDate","updateParamsByCondition","selectWeek","closeDateSelect","pipe","takeUntil","simpleConditions","findSimpleCondition","dateChangedCmdSubscription","unsubscribe","onDateChange","returnFormatted","dateRangeDatesDelimiter","runDateChangedEvent","onSpiltDateChange","originValue","_start","_end","_formatted","_value","onDynamicValueChange","onDynamicViewChanged","showDynamicView","dynamicValue","singleValue","messageService","all","MessagerService","queryconditionComponent","ComboLookUpComponent","getComboLookUpBindingInfo","autoWidth","valueChangeHandler","selections","comboLookUpControl","comboLookUpValue","selectedValues","ClearFieldsDirective","qcc","ngCtrl","valueChanges","conditionItem","Directive","NgControl","decorators","Optional","Self","inject","LabelTextMultiDirective","_enableMulti","judgeMulti","runOutsideAngular","setTimeout","textEl","el","nativeElement","querySelector","clientWidth","scrollWidth","multiCls","ElementRef","StateService","queryconditionData","items","children","path","groupid","queryconditionData$","updateQueryConditionListData","changeQueryconditionData","isEmit","addPositionItem","deleteItems","pathVal","targetVal","getMaxConditionid","splice","clearCheckedList","deleteIndex","itemsVal","treeshake","modifyIndex","changeGroupData","addGroup","groups","keys","checkedList","targetPath","Number","target_1","modifyItems","getFlatConditions","notifySer","generateGroup","involvedGroupid_1","involvedPath_1","_groups","val2","minLength","sort","a","b","nowGroupid","flatGroupList_1","getFlatChildren","involvedGroup","reduce","validFlag","involvedChildrenGroupids_1","involveChildrenConditionLen_1","group","targetFlatConditionsLen","involvedCheckedConditionLen_1","modifyItemids_1","involvedChildrenGroup_1","deleteGroup","changeRootCompareType","target_2","targetParent_1","apply","_b","pathItem","parentTarget","getMaxGroupid","allGroups","parentPosition","child","newGroup","setQueryconditionData","getQueryconditionData","changeFieldConfig","fieldConfig","fieldConfig$","getFieldConfig","changeCheckedList","_path","checkedList$","maxid","conditionList","objToArrayData","parentRelation","result","queryconditionListData","queryconditionListData$","parentData","QueryconditionAdvancedComponent","queryConditionsAdvanced","stateSer","_fieldConfig","modifyFieldConfig","rangeToSimpleControlType","handleResizeChange","dataSubscribe","dataListSubscribe","addItem","advancedContent","scrollTo","top","scrollHeight","msgSer","isConfirm","event_1","document","createEvent","initEvent","ctrlKey","metaKey","altKey","which","keyCode","code","_self","dispatchEvent","configs","unformatConfigs","rangeToSimpleTypeModify","ResizeObserver","entries","entry","style","isLimitHeight","observe","advancedElement","CompareTypeName","CompareTypeInControl","QueryconditionGroupComponent","fieldConfigSubscribe","checkedListSubscribe","dpStateHandler","dropdownMenu","activeConditionType","forceState","overLayService","registerMouseEvent","tar","from","classList","destory","changeConditionType","fieldItem","changeCompareType","compareTypeIndex","deleteItem","changeRelation","handleCheckItem","ChangeDetectorRef","cd","COMPARE_TYPE_NAME","COMPARE_TYPE_NAME_MULTI","COMPARE_TYPE_IN_CONTROL","checklist","deleteGroupText","OverLayHiddenService","QueryconditionItemComponent","QueryConditionModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","FarrisDialogModule","LayoutModule","LookupModule","MultiSelectModule","FieldGroupModule","InputGroupModule","FDropdownDirectiveTypeModule","LoadingModule","forRoot","NotifyModule","FarrisDatePickerModule","LocaleModule","ComboListModule","NumberSpinnerModule","FarrisFormsModule","ComboLookupModule","FarrisTooltipModule","declarations","entryComponents","bootstrap","exports","QuerySolutionVo","isDefault","isChanged","extendId","QuerySolutionVoConvertor","querySolutionVo","belongId","isSystem","extendInfo","code_chs","code_en","code_cht","_queryConditionsAdvanced","simplifyTreeData","jArray_1","queryConditionString","conditionJarry","convertor_2","formatFromJobject","formatConvertJObject","_items","complicateTreeData","originData","handleFunc","treeData","QuerySolutionExtendVo","CompareType","Equal","GreaterThan","GreaterThanOrEqual","LessThan","LessThanOrEqual","Like","FieldConfig"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n/**\r\n * ä¸ºäºå¼å®¹æ§ä»£ç ï¼\r\n * ä¿çä¸ä¸ªç©ºçservice\r\n*/\r\n@Injectable()\r\nexport class CommunicationService {\r\n    \r\n    public eventbus: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n}","import { Injectable } from '@angular/core';\r\n/**\r\n * ä¸ºäºå¼å®¹æ§ä»£ç ï¼\r\n * ä¿çä¸ä¸ªç©ºçservice\r\n*/\r\n@Injectable()\r\nexport class ConvertorService {\r\n    constructor(){}\r\n}","export enum ControlType{\r\n    Text = 0,\r\n    SingleDate = 1,\r\n    SmartHelp = 2,\r\n    DropDownList = 3,\r\n    DateRange = 4,\r\n    NumberRange = 5,\r\n    SingleNumber = 6,\r\n    SingleYear = 7,\r\n    BoolCheck = 8,\r\n    DateTimeRange = 9,\r\n    SingleMonth = 10,\r\n    MonthRange = 11,\r\n    SingleDateTime = 12,\r\n    ComboLookUp = 13,\r\n    Radio = 14,\r\n    InputGroup = 15\r\n}","export enum EnumType{\r\n    IntType=0,\r\n    StringType=1,\r\n    BoolType=2\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Integerç±»å\r\n */\r\nexport class EnumIntegerValue implements IEnumValue{\r\n    getEnumType(): EnumType {\r\n        return EnumType.IntType;\r\n    }\r\n    \r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:number;\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Stringç±»å\r\n */\r\nexport class EnumStringValue implements IEnumValue{\r\n    getEnumType(): EnumType {\r\n        return  EnumType.StringType;\r\n    }\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Boolç±»å\r\n */\r\nexport class EnumBoolValue implements IEnumValue{\r\n    \r\n    getEnumType(): EnumType {\r\n        return  EnumType.BoolType;\r\n    }\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:boolean;\r\n}","import { EnumType } from \"./enumtype\";\r\nimport { EnumIntegerValue } from \"./integerenumvalue\";\r\nimport { EnumStringValue } from \"./stringenumvalue\";\r\nimport { EnumBoolValue } from \"./boolenumvalue\";\r\n\r\nexport interface IEnumValue{\r\n    getEnumType():EnumType;\r\n    getEnumValueName():string;\r\n    getEnumValue():any;\r\n}\r\n\r\nexport class EnumValueConvert{\r\n\r\n    convertJObject(obj:IEnumValue):Object{\r\n        let enumValue=obj as IEnumValue;\r\n        let enumType=enumValue.getEnumType();\r\n        let jobj=new Object();\r\n        jobj[\"Type\"]=enumType;\r\n        jobj[\"Content\"]=enumValue;\r\n        return jobj;\r\n    }\r\n\r\n    initFromJobject(jobj:Object):IEnumValue{\r\n        let enumType=jobj[\"Type\"] as EnumType;\r\n        let content=jobj[\"Content\"] as IEnumValue;\r\n        if(enumType==EnumType.IntType){\r\n            return Object.assign(new EnumIntegerValue(),content) ;\r\n        }\r\n        else if(enumType==EnumType.BoolType){\r\n            return Object.assign(new EnumBoolValue(),content) ;\r\n        }\r\n        else{\r\n            return Object.assign(new EnumStringValue(),content) ;\r\n        }\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { EnumType } from \"./enumtype\";\r\nimport { IEnumValue, EnumValueConvert } from \"./ienumvalue\";\r\nimport { EnumStringValue } from \"./stringenumvalue\";\r\nimport { EnumBoolValue } from \"./boolenumvalue\";\r\nimport { EnumIntegerValue } from \"./integerenumvalue\";\r\n\r\n/**\r\n * ä¸æåè¡¨æ§ä»¶\r\n */\r\nexport class DropDownListControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DropDownList;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * ä¸æå¼ç±»å\r\n     */\r\n    valueType: EnumType;\r\n\r\n    /**\r\n     * ä¸ææ°æ®æºåè¡¨\r\n     * è¯¥å±æ§ä¸ºIEnumValueæ¥å£ç±»åï¼å·ä½å®ç°ç±»å¦ä¸ï¼\r\n     * 1.å¸å°ç±»åï¼EnumBoolValue,å¸å°ç±»åçæ§ä»¶ä¼è½¬æä¸æåè¡¨ï¼å®ç°ç±»ä½¿ç¨EnumBoolValue\r\n     * 2.å­ç¬¦ä¸²ç±»åï¼EnumStringValue\r\n     * 3.æ´åç±»åï¼EnumIntegerValue ä¾å¦Radio Buttonç±»åéè¦ä½¿ç¨EnumIntegerValueå®ç°ç±»\r\n     */\r\n    enumValues: Array<IEnumValue>;\r\n\r\n    /**\r\n     * æå¡å¨ç«¯API\r\n     */\r\n    uri: string;\r\n\r\n    /**\r\n     * é¢æ¿æ¾ç¤ºåäºä»¶\r\n     */\r\n    beforeShow: any;\r\n\r\n    /**\r\n     * é¢æ¿éèåäºä»¶\r\n     */\r\n    beforeHide: any;\r\n\r\n    idField: string;\r\n\r\n    textField: string;\r\n\r\n    /**\r\n     * æ¯å¦å¤é\r\n    */\r\n    multiSelect: boolean;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    placeholder: string;\r\n\r\n    panelHeight: number | string;\r\n\r\n    require: boolean;\r\n}\r\n\r\n/**\r\n * ä¸æåè¡¨æ§ä»¶åºååä¸ååºååå¨\r\n */\r\nexport class DropDownListControlConvert{\r\n\r\n    /**\r\n     * åºåå\r\n     * @param obj ä¸æåè¡¨æ§ä»¶å®ä½\r\n     */\r\n    convertToObject(obj: DropDownListControl){\r\n        let dropDownListControl = obj as DropDownListControl;\r\n        let jobj = new Object();\r\n        jobj[\"valueType\"] = dropDownListControl.valueType;\r\n        if(dropDownListControl.enumValues != null){\r\n            let jarray = jobj[\"enumValues\"] = [];\r\n            let convertor = new EnumValueConvert();\r\n            dropDownListControl.enumValues.forEach(element => {\r\n                if(dropDownListControl.valueType == EnumType.BoolType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumBoolValue(),element)));\r\n                }\r\n                else if(dropDownListControl.valueType == EnumType.IntType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumIntegerValue(),element)));\r\n                }\r\n                else{\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumStringValue(),element)));\r\n                }\r\n            });\r\n        }\r\n        jobj[\"uri\"] = dropDownListControl.uri;\r\n        jobj[\"beforeShow\"] = dropDownListControl.beforeShow;\r\n        jobj[\"beforeHide\"] = dropDownListControl.beforeHide;\r\n        jobj[\"idField\"] = dropDownListControl.idField;\r\n        jobj[\"textField\"] = dropDownListControl.textField;\r\n        jobj[\"multiSelect\"] = dropDownListControl.multiSelect;\r\n        jobj[\"panelHeight\"] = dropDownListControl.panelHeight;\r\n        jobj[\"placeholder\"] = dropDownListControl.placeholder;\r\n        jobj[\"className\"] = dropDownListControl.className;\r\n        jobj[\"require\"] = dropDownListControl.require;\r\n        return jobj;\r\n    }\r\n\r\n    /**\r\n     * ååºåå\r\n     * @param jobj ä¸æåè¡¨æ§ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n     */\r\n    initFromObject(jobj: Object): DropDownListControl{\r\n        let control = new DropDownListControl();\r\n        if(jobj[\"valueType\"] != null){\r\n            control.valueType = jobj[\"valueType\"] as number;\r\n        }\r\n        if(jobj[\"enumValues\"] != null){\r\n            control.enumValues = new Array<IEnumValue>();\r\n            jobj[\"enumValues\"].forEach(element => {\r\n                let convertor = new EnumValueConvert();\r\n                control.enumValues.push(convertor.initFromJobject(element));\r\n            });\r\n        }\r\n        if(jobj[\"uri\"] != null){\r\n            control.uri = jobj[\"uri\"];\r\n        }\r\n        if(jobj[\"beforeShow\"] != null){\r\n            control.beforeShow = jobj[\"beforeShow\"];\r\n        }\r\n        if(jobj[\"beforeHide\"] != null){\r\n            control.beforeHide = jobj[\"beforeHide\"];\r\n        }\r\n        if(jobj[\"idField\"] != null){\r\n            control.idField = jobj[\"idField\"];\r\n        }\r\n        if(jobj[\"textField\"] != null){\r\n            control.textField = jobj[\"textField\"];\r\n        }\r\n        if(jobj[\"multiSelect\"] != null){\r\n            control.multiSelect = jobj[\"multiSelect\"];\r\n        }\r\n        if(jobj[\"panelHeight\"] != null){\r\n            control.panelHeight = jobj[\"panelHeight\"];\r\n        }\r\n        if(jobj[\"placeholder\"] != null){\r\n            control.placeholder = jobj[\"placeholder\"];\r\n        }\r\n        if(jobj[\"className\"] != null){\r\n            control.className = jobj[\"className\"];\r\n        }\r\n        if(jobj[\"require\"] != null){\r\n            control.require = jobj[\"require\"];\r\n        }\r\n        return control;\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * ææ¬æ§ä»¶\r\n */\r\nexport class TextControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼ææ¬æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Text;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * å­ç¬¦ä¸²é¿åº¦\r\n     */\r\n    length: number;\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    placeholder: string;\r\n\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´æ§ä»¶\r\n */\r\nexport class DateRangeControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    \r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n    \r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat: string;\r\n\r\n    /**\r\n     * æ¥æåæ´åäºä»¶\r\n     */\r\n    dateChangedCmd: any;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n    \r\n    /**\r\n     * ç»ææç¤º\r\n     */\r\n    // beginPlaceHolder: string;\r\n\r\n    /**\r\n     * èµ·å§æç¤º\r\n     */\r\n    // endPlaceHolder: string;\r\n    \r\n    placeholder: string;\r\n    require: boolean;\r\n    weekSelect: boolean;\r\n    /**\r\n     * åºé´èµ·å§å±æ§å¼\r\n     */\r\n    startFieldCode: string;\r\n    /**\r\n   * åºé´ç»æå±æ§å¼\r\n   */\r\n    endFieldCode: string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class SingleDateControl implements IControl {\r\n\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleDate;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n\r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat: string;\r\n\r\n    /**\r\n     * æ¥æåæ´åäºä»¶\r\n     */\r\n    dateChangedCmd: any;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n    isDynamicDate: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * å¸®å©æ§ä»¶\r\n */\r\nexport class SmartHelpContol implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SmartHelp;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n\r\n    /**\r\n     * å¸®å©æ°æ®æº\r\n     */\r\n    uri: string;\r\n\r\n    /**\r\n     * å¸®å©çææ¬æ¾ç¤ºå­æ®µ\r\n     */\r\n    textField: string;\r\n\r\n    /**\r\n     * å¸®å©å¼å­æ®µ\r\n     */\r\n    valueField: string;\r\n\r\n    /**\r\n     * å­æ®µæ å°ä¿¡æ¯\r\n     */\r\n    mapFields: any;\r\n\r\n    /**\r\n     * ä¸»é®\r\n    */\r\n    idField: any;\r\n\r\n    /**\r\n     * å¸®å©å±ç¤ºå½¢å¼ï¼æ®éåè¡¨ï¼æ ç»æ\r\n    */\r\n    displayType: any;\r\n\r\n    /**\r\n     * è¿è¡æ¶åæ°éç½®ä¼ é\r\n    */\r\n    context: any;\r\n\r\n    /**\r\n     * å¸®å©åäºä»¶\r\n    */\r\n    preEventCmd: any;\r\n\r\n    /**\r\n    * å¸®å©åäºä»¶\r\n    */\r\n    postEventCmd: any;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    /**\r\n     * æé å®æ´æ \r\n     */\r\n    enableFullTree: boolean;\r\n\r\n    /**\r\n     * æ°æ®å è½½æ¹å¼\r\n     */\r\n    loadTreeDataType: string;\r\n\r\n    /**\r\n     * æ¯å¦å¤é\r\n     */\r\n    singleSelect: boolean;\r\n\r\n    /**å±å¼å°æå®çº§æ° */\r\n    expandLevel: number;\r\n\r\n    /**\r\n     * å¯ç¨çº§èéæ©\r\n     */\r\n    enableCascade: boolean;\r\n\r\n    /**\r\n     * çº§èæ§å¶é»è®¤å¼ï¼ enable: åæ­¥éæ©, upï¼åå«ä¸çº§, downï¼åå«ä¸çº§, disableï¼ä»éæ©èªèº«\r\n     */\r\n    cascadeStatus: \"enable\" | \"up\" | \"down\" | \"disable\";\r\n\r\n    /**\r\n     * æ§ä»¶ä¸ºç©ºæ¶æç¤ºä¿¡æ¯ï¼å¼å®¹æ§è¡¨å\r\n     */\r\n    placeholder: string;\r\n\r\n    /**\r\n     * æ§ä»¶æ¯å¦å¿å¡«\r\n     */\r\n    require: boolean;\r\n\r\n    //æææå·¥è¾å¥ãéæ©ä¸¤ç¨æ¶ï¼nosearchè®¾ä¸ºtrue\r\n    nosearch: boolean;\r\n\r\n    /**\r\n     * éæ©æ°æ®åèªå®ä¹æ¾ç¤ºçå­æ®µï¼é»è®¤ä¸ºç©ºï¼ä¸ºç©ºæ¶æ¾ç¤ºå¸®å©è®¾ç½®çææ¬å­æ®µ\r\n     */\r\n    displayFields: string;\r\n\r\n    /**\r\n     * èªå®ä¹æ¾ç¤ºå­æ®µæ¶ï¼ä¸åå­æ®µé´çåéç¬¦\r\n     */\r\n    displayTextSeparator: string;\r\n\r\n    /**\r\n     * æ¯å¦åè®¸ç¼è¾\r\n     */\r\n    editable: boolean;\r\n\r\n    /**\r\n     * å¼ååæ¶ï¼éè¦æ¸ç©ºåªäºå­æ®µ\r\n     */\r\n    clearFields: string;\r\n\r\n    /**\r\n     * å¸®å©æ¸ç©ºäºä»¶\r\n     */\r\n    clear: any;\r\n    /**\r\n     * é»è®¤åé¡µ\r\n     */\r\n    pageSize: number;\r\n    /**\r\n     * åé¡µ\r\n     */\r\n    pageList: string;\r\n   // æ é¢\r\n   dialogTitle: string;\r\n   // å®½åº¦\r\n   panelWidth: number;\r\n   // é«åº¦\r\n   panelHeight: number;\r\n   // å¿«æ·éæ©\r\n   quickSelect: QuickSelectOption;\r\n   // å¯ç¨å¤å­æ®µæ¥è¯¢\r\n   enableMultiFieldSearch: boolean;\r\n}\r\n\r\nexport class QuickSelectOption {\r\n    enable: boolean;\r\n    showItemsCount?: number;\r\n    formatter?: (data: any) => string;\r\n    showMore?: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class NumberRangeControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.NumberRange;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length: number;\r\n\r\n    /**\r\n     * ç²¾åº¦\r\n     */\r\n    precision: number;\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n    /*\r\n    *ç»ææç¤º\r\n    */\r\n   //beginPlaceHolder: string;\r\n   /**\r\n   * èµ·å§æç¤º\r\n   */\r\n  // endPlaceHolder: string;\r\n\r\n    placeholder: string;\r\n\r\n    require: boolean;\r\n\r\n    textAlign: string;\r\n\r\n    bigNumber: boolean;\r\n\r\n    min: number;\r\n    max: number;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class SingleNumberControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleNumber;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length: number;\r\n\r\n    /**\r\n     * ç²¾åº¦\r\n     */\r\n    precision: number;\r\n    /**\r\n    * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    placeholder: string;\r\n\r\n    require: boolean;\r\n\r\n    textAlign: string;\r\n\r\n    bigNumber: boolean;\r\n\r\n    min: number;\r\n    max: number;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class SingleYearControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleYear;\r\n    }\r\n    \r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n    \r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat:string;\r\n\r\n    /**\r\n     * æ¥æåæ´åäºä»¶\r\n     */\r\n    dateChangedCmd: any;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n    \r\n    // æå¤§å¼\r\n    maxDate:string|Date|null;\r\n    // æå°å¼\r\n    minDate:string|Date|null;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\ninterface Checkbox {\r\n    value: any;\r\n    name: any;\r\n}\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class CheckBoxControl implements IControl {\r\n    \r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.BoolCheck;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n    * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n    /* radio æ°ç» */\r\n    data: Checkbox[] = [];\r\n    /* å¤éæ¡name */\r\n    name: string;\r\n    /* æ¯å¦æ°´å¹³åå¸ */\r\n    horizontal: boolean;\r\n    /* ç¦ç¨ */\r\n    disable: boolean;\r\n    /* å¤éæ¡ç»çå¼ */\r\n    value: any;\r\n    /* åéç¬¦ é»è®¤éå·*/\r\n    separator = ',';\r\n    /* å¼ç±»åæ¯å¦æ¯string */\r\n    isStringValue = true;\r\n\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´æ§ä»¶\r\n */\r\nexport class DateTimeRangeControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DateTimeRange;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    \r\n    /**\r\n     * å¼ºå¶ä½¿ç¨èªå®ä¹æ ¼å¼\r\n     */\r\n    enableCustomFormat:boolean;\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n    \r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat:string;\r\n\r\n    /**\r\n     * æ¥æåæ´åäºä»¶\r\n     */\r\n    dateChangedCmd: any;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n    \r\n    // èµ·å§æç¤º\r\n    // beginPlaceHolder:string;\r\n    \r\n    // ç»ææç¤º\r\n    //  endPlaceHolder:string;\r\n    \r\n    //weekSelect: boolean;\r\n    //showWeekNumbers: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class SingleMonthControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleMonth;\r\n    }\r\n\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n    \r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat:string;\r\n    \r\n    /**\r\n     * æ¥æåæ´åäºä»¶\r\n     */\r\n    dateChangedCmd: any;\r\n    \r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´æ§ä»¶\r\n */\r\nexport class MonthRangeControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.MonthRange;\r\n    }\r\n\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n    \r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat: string;\r\n\r\n    /**\r\n     * æ¥æåæ´åäºä»¶\r\n     */\r\n    dateChangedCmd: any;\r\n    \r\n    /*\r\n     *èµ·å§æç¤º\r\n     */\r\n    //beginPlaceHolder: string;\r\n \r\n    /**\r\n     * ç»ææç¤º\r\n     */\r\n    // endPlaceHolder: string;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class SingleDateTimeControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleDateTime;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    \r\n    /**\r\n     * å¼ºå¶ä½¿ç¨èªå®ä¹æ ¼å¼\r\n     */\r\n    enableCustomFormat:boolean;\r\n    \r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n    \r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat: string;\r\n\r\n    /**\r\n     * æ¥æåæ´åäºä»¶\r\n     */\r\n    dateChangedCmd: any;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * å¸®å©æ§ä»¶\r\n */\r\nexport class ComboLookUpControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.ComboLookUp;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * ä¸æå¸®å©æ°æ®æº\r\n     */\r\n    uri: string;\r\n\r\n    /**\r\n     * ä¸»é®\r\n     */\r\n    idField: any;\r\n\r\n    /**\r\n     * ä¸æå¸®å©å¼å­æ®µ\r\n     */\r\n    valueField: string;\r\n\r\n    /**\r\n     * ä¸æå¸®å©ææ¬æ¾ç¤ºå­æ®µ\r\n     */\r\n    textField: string;\r\n\r\n    /**\r\n     * å­æ®µæ å°ä¿¡æ¯\r\n     */\r\n    mapFields: any;\r\n\r\n    /**\r\n     * ä¸æå¸®å©å±ç¤ºå½¢å¼ï¼ä¸æåè¡¨å¸®å©ï¼ä¸ææ åè¡¨å¸®å©\r\n     */\r\n    displayType: any;\r\n\r\n    /**\r\n     * å¸®å©åäºä»¶\r\n     */\r\n    preEventCmd: any;\r\n\r\n    /**\r\n     * å¸®å©åäºä»¶\r\n     */\r\n    postEventCmd: any;\r\n\r\n    /**\r\n     * æ¯å¦å¤é\r\n     */\r\n    singleSelect: boolean;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n\r\n    placeholder: string;\r\n\r\n    panelWidth: number;\r\n\r\n    panelHeight: number;\r\n\r\n    require: boolean;\r\n       /**\r\n     * æé å®æ´æ \r\n     */\r\n    enableFullTree: boolean;\r\n    /**\r\n     * æ°æ®å è½½æ¹å¼\r\n     */\r\n     loadTreeDataType: string;\r\n     /**\r\n     * è¿è¡æ¶åæ°éç½®ä¼ é\r\n    */\r\n    context: any;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { EnumType } from \"../dropdownlist/enumtype\";\r\nimport { IEnumValue, EnumValueConvert } from \"../dropdownlist/ienumvalue\";\r\nimport { EnumStringValue } from \"../dropdownlist/stringenumvalue\";\r\nimport { EnumBoolValue } from \"../dropdownlist/boolenumvalue\";\r\nimport { EnumIntegerValue } from \"../dropdownlist/integerenumvalue\";\r\n\r\n/**\r\n * åéç»æ§ä»¶\r\n */\r\nexport class RadioControl implements IControl {\r\n    \r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Radio;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * åéæ¡å¼ç±»å\r\n     */\r\n    valueType: EnumType;\r\n\r\n    /**\r\n     * åéæ¡æ°æ®æºåè¡¨\r\n     * è¯¥å±æ§ä¸ºIEnumValueæ¥å£ç±»åï¼å·ä½å®ç°ç±»å¦ä¸ï¼\r\n     * 1.å¸å°ç±»åï¼EnumBoolValue\r\n     * 2.å­ç¬¦ä¸²ç±»åï¼EnumStringValue\r\n     * 3.æ´åç±»åï¼EnumIntegerValue ä¾å¦Radio Buttonç±»åéè¦ä½¿ç¨EnumIntegerValueå®ç°ç±»\r\n     */\r\n    enumValues: Array<IEnumValue>;\r\n\r\n    /**\r\n    * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    /**\r\n     * æ¯å¦æ¾ç¤ºlabel\r\n     */\r\n    showLabel: boolean;\r\n    \r\n    /* æ¯å¦æ°´å¹³åå¸ */\r\n    horizontal: boolean;\r\n    \r\n    /* æ¯å¦ç¦ç¨ */\r\n    disabled: boolean;\r\n    \r\n    require: boolean;\r\n}\r\n\r\n/**\r\n* åéç»æ§ä»¶åºååä¸ååºååå¨\r\n*/\r\nexport class RadioControlConvert{\r\n    /**\r\n     * åºåå\r\n     * @param obj åéç»æ§ä»¶å®ä½\r\n     */\r\n    convertToObject(obj: RadioControl){\r\n        let radioControl = obj as RadioControl;\r\n        let jobj = new Object();\r\n        jobj[\"valueType\"] = radioControl.valueType;\r\n        if(radioControl.enumValues != null){\r\n            let jarray = jobj[\"enumValues\"] = [];\r\n            let convertor = new EnumValueConvert();\r\n            radioControl.enumValues.forEach(element => {\r\n                if(radioControl.valueType == EnumType.BoolType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumBoolValue(),element)));\r\n                }\r\n                else if(radioControl.valueType == EnumType.IntType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumIntegerValue(),element)));\r\n                }\r\n                else{\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumStringValue(),element)));\r\n                }\r\n            });\r\n        }\r\n        jobj[\"horizontal\"] = radioControl.horizontal;\r\n        jobj[\"showLabel\"] = radioControl.showLabel;\r\n        jobj[\"disabled\"] = radioControl.disabled;\r\n        jobj[\"className\"] = radioControl.className;\r\n        jobj[\"require\"] = radioControl.require;\r\n        return jobj;\r\n    }\r\n\r\n    /**\r\n     * ååºåå\r\n     * @param jobj åéç»æ§ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n     */\r\n    initFromObject(jobj: Object): RadioControl{\r\n        let control = new RadioControl();\r\n        if(jobj[\"valueType\"] != null){\r\n            control.valueType = jobj[\"valueType\"] as number;\r\n        }\r\n        if(jobj[\"enumValues\"] != null){\r\n            control.enumValues = new Array<IEnumValue>();\r\n            jobj[\"enumValues\"].forEach(element => {\r\n                let convertor = new EnumValueConvert();\r\n                control.enumValues.push(convertor.initFromJobject(element));\r\n            });\r\n        }\r\n        if(jobj[\"horizontal\"] != null){\r\n            control.horizontal = jobj[\"horizontal\"];\r\n        }\r\n        if(jobj[\"showLabel\"] != null){\r\n            control.showLabel = jobj[\"showLabel\"];\r\n        }\r\n        if(jobj[\"disabled\"] != null){\r\n            control.disabled = jobj[\"disabled\"];\r\n        }\r\n        if(jobj[\"className\"] != null){\r\n            control.className = jobj[\"className\"];\r\n        }\r\n        if(jobj[\"require\"] != null){\r\n            control.require = jobj[\"require\"];\r\n        }\r\n        return control;\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æºè½è¾å¥æ¡æ§ä»¶\r\n */\r\nexport class InputGroupControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼æºè½è¾å¥æ¡æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.InputGroup;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    \r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    /**\r\n     * æ¯å¦å¿å¡«\r\n     */\r\n    require: boolean;\r\n\r\n    /**\r\n     * æ¯å¦åè®¸è¾å¥\r\n     */\r\n    editable: boolean;\r\n\r\n    /**\r\n     * æé®æ¾ç¤ºææ¬\r\n     */\r\n    groupText: string;\r\n\r\n    /**\r\n     * ä½¿ç¨æ¨¡å¼ï¼ææ¬ãå¼¹åºè¡¨åï¼\r\n     */\r\n    usageMode: string;\r\n\r\n    /**\r\n     * å¼¹åºè¡¨åç¸å³éç½®\r\n     */\r\n    dialogOptions: DialogConfig;\r\n\r\n    /**\r\n     * æé®ç¹å»äºä»¶\r\n     */\r\n    click: any;\r\n}\r\n\r\nexport class DialogConfig {\r\n    modalId: string;\r\n    mapFields: any;\r\n    title: string;\r\n    width: number;\r\n    height: number;\r\n    showCloseButton:boolean;\r\n    showMaxButton:boolean;\r\n    showHeader:boolean;\r\n}","import { ControlType } from \"../controltype\";\r\nimport { DropDownListControl, DropDownListControlConvert } from \"./dropdownlist/dropdownlistcontrol\";\r\nimport { TextControl } from \"./text/textcontrol\";\r\nimport { DateRangeControl } from \"./daterange/date-range.control\";\r\nimport { SingleDateControl } from \"./date/single-date-control\";\r\nimport { SmartHelpContol } from \"./smarthelp/smarthelpcontrol\";\r\nimport { NumberRangeControl } from \"./numberrange/numberrangecontrol\";\r\nimport { SingleNumberControl } from './number/single-number-control';\r\nimport { SingleYearControl } from './year/year-control';\r\nimport { CheckBoxControl } from './checkbox/checkbox-control';\r\nimport { DateTimeRangeControl } from './daterange/datertime-range-control';\r\nimport { SingleMonthControl } from './month/month-control';\r\nimport { MonthRangeControl } from './monthrange/month-range-control';\r\nimport { SingleDateTimeControl } from './date/single-date-time-control';\r\nimport { ComboLookUpControl } from './combolookup/combolookup-control';\r\nimport { RadioControl, RadioControlConvert } from './radio/radio-control';\r\nimport { InputGroupControl } from './input-group/inputgroupcontrol';\r\n\r\n/**\r\n * æ§ä»¶æ¥å£\r\n */\r\nexport interface IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType;\r\n\r\n    /**\r\n     * æ§ä»¶æ¯å¦å¿å¡«\r\n     */\r\n    isRequired(): boolean;\r\n}\r\n\r\nexport class ControlConvert {\r\n    convertJObject(obj: IControl): Object {\r\n        let control = obj as IControl;\r\n        let controlType = control.getControlType();\r\n        let jobj = new Object();\r\n        jobj[\"Type\"] = controlType;\r\n\r\n        if(controlType == ControlType.DropDownList) { \r\n            let convertor = new DropDownListControlConvert();\r\n            jobj[\"Content\"] = convertor.convertToObject(control as DropDownListControl);\r\n        }\r\n        else if(controlType == ControlType.Radio) {\r\n            let convertor = new RadioControlConvert();\r\n            jobj[\"Content\"] = convertor.convertToObject(control as RadioControl);\r\n        }\r\n        else {\r\n            jobj[\"Content\"] = control;\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    initFromJobject(jobj: Object): IControl {\r\n        let controlType = jobj[\"Type\"] as ControlType;\r\n        let content: IControl = jobj[\"Content\"];\r\n\r\n        if(controlType==ControlType.Text)\r\n            return Object.assign(new TextControl(), content as TextControl);\r\n        \r\n        if(controlType == ControlType.InputGroup)\r\n            return Object.assign(new InputGroupControl(), content as InputGroupControl);\r\n        \r\n        if(controlType == ControlType.DateRange)\r\n            return Object.assign(new DateRangeControl(), content as DateRangeControl);\r\n\r\n        if(controlType == ControlType.NumberRange)\r\n            return Object.assign(new NumberRangeControl(), content as NumberRangeControl);\r\n\r\n        if(controlType == ControlType.SingleDate)\r\n            return Object.assign(new SingleDateControl(), content as SingleDateControl);\r\n\r\n        if(controlType == ControlType.SingleNumber)\r\n            return Object.assign(new SingleNumberControl(), content as SingleNumberControl);\r\n\r\n        if(controlType == ControlType.DropDownList)\r\n            return new DropDownListControlConvert().initFromObject(content);\r\n\r\n        if(controlType == ControlType.SmartHelp)\r\n            return Object.assign(new SmartHelpContol(), content as SmartHelpContol);\r\n\r\n        if(controlType == ControlType.ComboLookUp)\r\n            return Object.assign(new ComboLookUpControl(), content as ComboLookUpControl);\r\n\r\n        if(controlType == ControlType.SingleYear)\r\n            return Object.assign(new SingleYearControl(), content as SingleYearControl);\r\n\r\n        if(controlType == ControlType.SingleMonth)\r\n            return Object.assign(new SingleMonthControl(), content as SingleMonthControl);\r\n\r\n        if(controlType == ControlType.BoolCheck)\r\n            return Object.assign(new CheckBoxControl(), content as CheckBoxControl);\r\n\r\n        if(controlType == ControlType.Radio)\r\n            return new RadioControlConvert().initFromObject(content);\r\n\r\n        if(controlType == ControlType.DateTimeRange)\r\n            return Object.assign(new DateTimeRangeControl(), content as DateTimeRangeControl);\r\n\r\n        if(controlType == ControlType.MonthRange)\r\n            return Object.assign(new MonthRangeControl(), content as MonthRangeControl);\r\n\r\n        if(controlType == ControlType.SingleDateTime)\r\n            return Object.assign(new SingleDateTimeControl(), content as SingleDateTimeControl);\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class TextValue implements IValue{\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Text;\r\n    }\r\n    value:string;\r\n    constructor(data: {value: string} = {value : ''}){\r\n        // this.value = data.value ? data.value.trim() : '';\r\n        this.value = data.value ? data.value : '';\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class NumberRangeValue implements IValue {\r\n    isEmpty(): boolean {\r\n        return (this.startValue == null && this.endValue == null);\r\n    }\r\n    clearValue(): void {\r\n        this.startValue = undefined;\r\n        this.endValue = undefined;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return {\r\n            begin: this.startValue,\r\n            end: this.endValue\r\n        };\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.NumberRange;\r\n    }\r\n    startValue: number;\r\n    endValue: number;\r\n    constructor(data: {startValue: string, endValue: string} = {startValue: null, endValue: null}){\r\n        this.startValue = data.startValue == null ? null : parseFloat(data.startValue);\r\n        this.endValue = data.endValue == null ? null : parseFloat(data.endValue);\r\n    }\r\n}\r\n\r\nexport class NumberRangeValueConvertor {\r\n    convertToObject(obj: IValue): Object {\r\n        let numberRangeValue = obj as NumberRangeValue;\r\n        let jobj = new Object();\r\n        jobj[\"startValue\"] = numberRangeValue.startValue;\r\n        jobj[\"endValue\"] = numberRangeValue.endValue;\r\n        return jobj;\r\n    }\r\n\r\n    initFromObject(jobj: Object): NumberRangeValue {\r\n        let numberRangeValue = new NumberRangeValue();\r\n        if (jobj[\"startValue\"]) {\r\n            //key pointï¼as Numberå¹¶ä¸ä¼è½¬åæ ¼å¼\r\n            numberRangeValue.startValue = parseFloat(jobj[\"startValue\"]);\r\n        }\r\n        if (jobj[\"endValue\"]) {\r\n            numberRangeValue.endValue = parseFloat(jobj[\"endValue\"]);\r\n        }\r\n        return numberRangeValue;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class DateRangeValue implements IValue {\r\n  setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n    if (value.formatted) {\r\n      this.startTime = value.formatted.split(value.delimiter)[0];\r\n      this.endTime = value.formatted.split(value.delimiter)[1];\r\n    } else {\r\n      this.clearValue();\r\n    }\r\n  }\r\n  getOriginalValue() {\r\n     if(!this.startTime && !this.endTime){\r\n      return '';\r\n     }\r\n    return `${this.startTime}~${this.endTime}`;\r\n  }\r\n  getControlType(): ControlType {\r\n    return ControlType.DateRange;\r\n  }\r\n  clearValue(): void {\r\n    this.startTime = undefined;\r\n    this.endTime = undefined;\r\n  }\r\n  startTime: string;\r\n  endTime: string;\r\n\r\n  constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n    this.startTime = value.startTime;\r\n    this.endTime = value.endTime;\r\n  }\r\n  isEmpty(): boolean {\r\n    return !this.startTime && !this.endTime;\r\n  }\r\n}\r\n","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\nexport class SmartHelpValue implements IValue{\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.SmartHelp;\r\n    }\r\n\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    getOriginalValue(): string {\r\n        const args = this.valueField.split('.');\r\n        const valueArr = this.value.map(helpItem => this.getPropValue(helpItem, cloneDeep(args)));\r\n        return valueArr && valueArr.length ? valueArr.join(',') : '';\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.valueField = undefined;\r\n        this.textValue = undefined;\r\n        this.isInputText = undefined;\r\n    }\r\n    \r\n    isEmpty(): boolean {\r\n        return !this.value.length;\r\n    }\r\n\r\n    value: any[];\r\n    valueField: string;\r\n    textValue: string;\r\n    //å¸®å©çå¼æ¯å¦ä¸ºæå¨è¾å¥çä»»æå¼ï¼å¯¹åºå¸®å©çä»»æè¾å¥å±æ§nosearch\r\n    isInputText: boolean; \r\n\r\n    constructor(data: {\r\n        value: any, \r\n        valueField: string,\r\n        textValue: string,\r\n        isInputText: boolean\r\n    } = {value: [], valueField: undefined, textValue: undefined, isInputText: undefined}){\r\n        if(data.textValue){\r\n            this.value = data.value;\r\n            this.valueField = data.valueField;\r\n            this.textValue = data.textValue;\r\n            this.isInputText = data.isInputText;\r\n        }else{\r\n            //å¸®å©æªæ¯æå¤éæ¶ï¼æ²¡ætextValueå±æ§ï¼ææå¼é½æ¯éè¿éæ©äº§çç\r\n            this.value = data.value;\r\n            this.valueField = data.valueField ? data.valueField : '';\r\n            this.textValue = 'help-text-value-null'; \r\n            this.isInputText = false;\r\n        }\r\n    }\r\n\r\n    getTextValue(textField: string): string {\r\n        const args = textField.split('.');\r\n        const textArr = this.value.map(helpItem => this.getPropValue(helpItem, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(',') : '';\r\n    }\r\n\r\n    getPropValue(helpItem: any, args: Array<string>): any{\r\n        if(args.length > 1){\r\n            const arg = args.shift();\r\n            return helpItem[arg] ? this.getPropValue(helpItem[arg], args) : null;\r\n        }\r\n        return helpItem[args[0]];\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\ntype propsDateValue = {\r\n    count: null | number,\r\n    dateType: string,\r\n    isFirstDay: boolean,\r\n    isLastDay: boolean,\r\n    name: string,\r\n    period: string,\r\n    text: string\r\n}\r\nexport class SingleDateValue implements IValue{\r\n    setOriginalValue(value: any): void {\r\n        this.dateValue = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.dateValue;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleDate;\r\n    }\r\n    dateValue: string | propsDateValue;\r\n    \r\n    constructor(date: string | propsDateValue = ''){\r\n        this.dateValue = date;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.dateValue;\r\n    }\r\n    clearValue(): void {\r\n        this.dateValue = undefined;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class SingleNumberValue implements IValue{\r\n    isEmpty(): boolean {\r\n        return this.numValue == null;\r\n    }\r\n    clearValue(): void {\r\n        this.numValue = undefined;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.numValue;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleNumber;\r\n    }\r\n    numValue: number;\r\n\r\n    constructor(data: string = null){\r\n        this.numValue = data == null ? null : parseFloat(data);\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class SingleYearValue implements IValue{\r\n    setOriginalValue(value: any): void {\r\n        this.yearValue = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.yearValue;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleYear;\r\n    }\r\n    clearValue(): void {\r\n        this.yearValue = undefined;\r\n    }\r\n    yearValue: string;\r\n    constructor(year: string = ''){\r\n        this.yearValue = year;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.yearValue;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n// CheckBoxValueåå§åï¼ä¸'app-solution-checkbox'ç»ä»¶åå§åæ¯åç¦»ç\r\n// CheckBoxValue è¦æ±valueæ¯å¸å°ç±»åï¼ç»ä»¶è¦æ±valueæ¯trueæ¶ï¼å¼åºä¸ºtrueå­ç¬¦ä¸²\r\nexport class CheckBoxValue implements IValue{\r\n    clearValue(): void {\r\n        this.value = [];\r\n    }\r\n    // å¦æç»ä»¶çè¿åå¼æ¯å­ç¬¦ä¸²ï¼è½¬åä¸ºå¸å°å¼\r\n    setOriginalValue(value: any[]): void {\r\n        if(value.length){\r\n            this.value = value.map(v => {\r\n               if(typeof v == 'string'){\r\n                 return true;\r\n               }else {\r\n                 return v;\r\n               }\r\n            });\r\n         }else{\r\n            this.value = value;\r\n         }\r\n    }\r\n    // æCheckBoxValueçtrueå¸å°å¼ï¼è½¬åä¸ºç»ä»¶å¯è¯å«çå­ç¬¦ä¸²\r\n    getOriginalValue() {\r\n        if(this.value.length){\r\n          return this.value.map(v => {\r\n            if(v === true){\r\n              return \"true\";\r\n            }else{\r\n              return v;\r\n            }\r\n          });\r\n        }\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.BoolCheck;\r\n    }\r\n    value: any[];\r\n    // CheckBoxValue åå§åï¼ä¼ å¥çå¼æªåä»»ä½ä¿®æ¹\r\n    constructor(value: any[] = []){\r\n        this.value = value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return this.value.length == 0;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { IEnumValue, EnumValueConvert } from \"../controltype/dropdownlist/ienumvalue\";\r\n\r\nexport class DropDownListValue implements IValue{\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.key = undefined;\r\n    }\r\n    setOriginalValue(data): void {}\r\n    getOriginalValue() {\r\n        return this.key;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DropDownList;\r\n    }\r\n    value: any = [];//æ§ç»æ{Type: '', Content: {value: string, name: string}} æ°ç»æArray[{value: string, name: string}]\r\n    key: string;//æ§ç»ææ ï¼æ°ç»æä¸ºéä¸­çvalueå¼ï¼å¤éæ¯ä»¥,åå²çå­ç¬¦ä¸²\r\n    constructor(data: {value: any, key: string} = {value: [], key: undefined}){\r\n        if(data.value && data.value.length > 0){//å·²æåå§å¼[]\r\n            if(data.hasOwnProperty('key')){//æ°ç»æ\r\n                this.value = data.value;\r\n                this.key = data.key;\r\n            }else{//æ§ç»æ\r\n                this.value = data.value['Content'] && data.value['Content'].value ? [data.value['Content']] : [];\r\n                this.key = data.value['Content'] && data.value['Content'].value ? data.value['Content'].value: undefined;\r\n            }\r\n        }else{\r\n            this.clearValue();\r\n        }\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.key;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class SingleMonthValue implements IValue{\r\n    setOriginalValue(value: any): void {\r\n        this.monthValue = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.monthValue;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleMonth;\r\n    }\r\n    clearValue(): void {\r\n        this.monthValue = undefined;\r\n    }\r\n    monthValue: string;\r\n    constructor(month: string = ''){\r\n        this.monthValue = month;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.monthValue;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class MonthRangeValue implements IValue {\r\n  setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n    if (value.formatted) {\r\n      this.startTime = value.formatted.split(value.delimiter)[0];\r\n      this.endTime = value.formatted.split(value.delimiter)[1];\r\n    } else {\r\n      this.clearValue();\r\n    }\r\n  }\r\n  getOriginalValue() {\r\n    if(!this.startTime && !this.endTime){\r\n      return '';\r\n     }\r\n    return `${this.startTime}~${this.endTime}`;\r\n  }\r\n  getControlType(): ControlType {\r\n    return ControlType.MonthRange;\r\n  }\r\n  clearValue(): void {\r\n    this.startTime = undefined;\r\n    this.endTime = undefined;\r\n  }\r\n  startTime: string;\r\n  endTime: string;\r\n\r\n  constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n    this.startTime = value.startTime;\r\n    this.endTime = value.endTime;\r\n  }\r\n  isEmpty(): boolean {\r\n    return !this.startTime && !this.endTime;\r\n  }\r\n}\r\n","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class SingleDateTimeValue implements IValue{\r\n    setOriginalValue(value: any): void {\r\n        this.datetimeValue = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.datetimeValue;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleDateTime;\r\n    }\r\n    datetimeValue: string;\r\n    \r\n    constructor(datetime: string = ''){\r\n        this.datetimeValue = datetime;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.datetimeValue;\r\n    }\r\n    clearValue(): void {\r\n        this.datetimeValue = undefined;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\nexport class ComboLookUpValue implements IValue{\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.valueField = undefined;\r\n        this.textValue = undefined;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue(): string {\r\n        const args = this.valueField.split('.');\r\n        const valueArr = this.value.map(helpItem => this.getPropValue(helpItem, cloneDeep(args)));\r\n        return valueArr && valueArr.length ? valueArr.join(',') : '';\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.ComboLookUp;\r\n    }\r\n\r\n    valueField:string;\r\n    value:any[];\r\n    textValue: string;\r\n\r\n    constructor(data: {\r\n        value: any, \r\n        valueField: string,\r\n        textValue: string;\r\n    } = {value: [], valueField: undefined, textValue: undefined}){\r\n        if(data.textValue){//æ°ç»æï¼valueæ¯æ°ç»\r\n            this.valueField = data.valueField;\r\n            this.value = data.value;\r\n            this.textValue = data.textValue;\r\n        }else{//æ§ç»æï¼valueæ¯å¯¹è±¡\r\n            this.valueField = data.valueField ? data.valueField : '';\r\n            this.value = (data.value && data.value.data) ? [data.value.data] : [];\r\n            this.textValue = 'help-text-value-null'; //æ§ç»ææ textValueå±æ§\r\n        }\r\n\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.valueField;\r\n    }\r\n\r\n    getPropValue(helpItem: any, args: Array<string>): any{\r\n        if(args.length > 1){\r\n            const arg = args.shift();\r\n            return helpItem[arg] ? this.getPropValue(helpItem[arg], args) : null;\r\n        }\r\n        return helpItem[args[0]];\r\n    }\r\n\r\n    getTextValue(textField: string): string {\r\n        const args = textField.split('.');\r\n        const textArr = this.value.map(helpItem => this.getPropValue(helpItem, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(',') : '';\r\n    }\r\n\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class RadioValue implements IValue {\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n    getOriginalValue(): any {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Radio;\r\n    }\r\n    value: any;\r\n    constructor(value: any = undefined) {\r\n        this.value = value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\nexport class InputGroupValue implements IValue {\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.InputGroup;\r\n    }\r\n\r\n    setOriginalValue(value: any) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    getOriginalValue(): string {\r\n        const args = this.textField ? this.textField.split('.') : [];\r\n        const textArr = this.value.map(item => this.getPropValue(item, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(','): '';\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.textValue = undefined;\r\n        this.textField = undefined;\r\n        this.isInputText = undefined;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.textValue;\r\n    }\r\n\r\n    //éè¿å¼¹çªè¿åçè¥å¹²ä¸ªå¼å¯¹è±¡ææçæ°ç»\r\n    value: any[];\r\n    //æ§ä»¶åæ¾ç¤ºçå¼\r\n    textValue: string;\r\n    //å¼¹çªæ¨¡å¼ä¸ï¼ååè¡¨ä¸­åªä¸ªå­æ®µçå¼æ å°å°å½åå­æ®µ\r\n    textField: string;\r\n    //æ¯å¦æ¯æå¨è¾å¥çå¼\r\n    isInputText: boolean;\r\n\r\n    constructor(data: {\r\n        value: any,\r\n        textValue: string,\r\n        textField: string,\r\n        isInputText: boolean\r\n    } = {value: [], textValue: undefined, textField: undefined, isInputText: undefined}){\r\n        this.value = data.value;\r\n        // this.textValue = data.textValue ? data.textValue.trim() : '';\r\n        this.textValue = data.textValue ? data.textValue : '';\r\n        this.textField = data.textField;\r\n        this.isInputText = data.isInputText;\r\n    }\r\n\r\n    getTextValue(targetField: string): string {\r\n        const args = targetField.split('.');\r\n        const textArr = this.value.map(item => this.getPropValue(item, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(','): '';\r\n    }\r\n\r\n    getPropValue(item: any, args: Array<string>): any{\r\n        if(args.length > 1){\r\n            const arg = args.shift();\r\n            return item[arg] ? this.getPropValue(item[arg], args) : '';\r\n        }\r\n        return item[args[0]];\r\n    }\r\n}","import { ControlType } from \"../controltype\";\r\nimport { TextValue } from \"./textvalue\";\r\nimport { NumberRangeValueConvertor, NumberRangeValue } from \"./numberrangevaue\";\r\nimport { DateRangeValue } from \"./daterangevalue\";\r\nimport { SmartHelpValue } from \"./smarthelpvalue\";\r\nimport { SingleDateValue } from './single-date-value';\r\nimport { SingleNumberValue } from './single-number-value';\r\nimport { SingleYearValue } from './single-year-value';\r\nimport { CheckBoxValue } from './checkbox-value';\r\nimport { DropDownListValue } from './dropdownlistvalue';\r\nimport { SingleMonthValue } from './single-month-value';\r\nimport { MonthRangeValue } from './month-range-value';\r\nimport { SingleDateTimeValue } from './single-date-time-value';\r\nimport { ComboLookUpValue} from './combolookup-value';\r\nimport { RadioValue } from './radio-value';\r\nimport { InputGroupValue } from './inputgroupvalue';\r\n\r\nexport interface IValue {\r\n    getControlType(): ControlType;\r\n    getOriginalValue(): any;\r\n    setOriginalValue(value: any): void;\r\n    clearValue(): void;\r\n    isEmpty(): boolean;\r\n}\r\n\r\nexport class ConditionValueConvert {\r\n    /**\r\n     * åºåå\r\n     * ä¸ºäºå¼å®¹C#äº§ççæ§æ°æ®ï¼åserverä¼ éçJSON objectå±æ§åå¨æ¹ä¸ºé¦å­æ¯å¤§å\r\n     */\r\n    convertToObject(obj: IValue): Object {\r\n        let conditionValue = obj as IValue;\r\n        let controlType = conditionValue.getControlType();\r\n        let jobj = new Object();\r\n        jobj[\"Type\"] = controlType;\r\n        if (controlType == ControlType.NumberRange) {\r\n            let convertor = new NumberRangeValueConvertor();\r\n            jobj[\"Content\"] = convertor.convertToObject(conditionValue);\r\n        }\r\n        else {\r\n            jobj[\"Content\"] = conditionValue;\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n\r\n    initFromObject(jobj: Object): IValue {\r\n        let content: IValue = jobj[\"Content\"];\r\n        \r\n        switch(jobj[\"Type\"]){\r\n            case ControlType.Text:\r\n                return new TextValue(jobj[\"Content\"]);\r\n            case ControlType.NumberRange:\r\n                return new NumberRangeValue(jobj[\"Content\"]);\r\n            case ControlType.DateRange:\r\n            case ControlType.DateTimeRange:\r\n                return new DateRangeValue(jobj[\"Content\"]);\r\n            case ControlType.DropDownList:\r\n                return new DropDownListValue(jobj[\"Content\"]);\r\n            case ControlType.SmartHelp:\r\n                return new SmartHelpValue(jobj[\"Content\"]);\r\n            case ControlType.ComboLookUp:\r\n                return new ComboLookUpValue(jobj[\"Content\"]);\r\n            case ControlType.SingleDate:\r\n                return Object.assign(new SingleDateValue(), content as SingleDateValue);\r\n            case ControlType.SingleNumber:\r\n                return Object.assign(new SingleNumberValue(), content as SingleNumberValue);\r\n            case ControlType.SingleYear:\r\n                return Object.assign(new SingleYearValue(), content as SingleYearValue);\r\n            case ControlType.BoolCheck:\r\n                return Object.assign(new CheckBoxValue(), content as CheckBoxValue);\r\n            case ControlType.Radio:\r\n                return Object.assign(new RadioValue(), content as RadioValue);\r\n            case ControlType.SingleMonth:\r\n                return Object.assign(new SingleMonthValue(), content as SingleMonthValue);\r\n            case ControlType.MonthRange:\r\n                return Object.assign(new MonthRangeValue(), content as MonthRangeValue);\r\n            case ControlType.SingleDateTime:\r\n                return Object.assign(new SingleDateTimeValue(), content as SingleDateTimeValue);\r\n            case ControlType.InputGroup:\r\n                return Object.assign(new InputGroupValue(), content as InputGroupValue);\r\n        }\r\n    }\r\n}","import { CompareType } from \"./comparetype\";\r\nimport { ValueType } from \"./valuetype\";\r\nimport { IControl, ControlConvert } from \"./controltype/icontrol\";\r\nimport { IValue, ConditionValueConvert } from \"./conditionvalue/ivalue\";\r\n\r\n/**\r\n * æ¥è¯¢æ¡ä»¶å®ä½ç±»\r\n */\r\nexport class QueryCondition {\r\n\r\n  /**\r\n   * å¯ä¸æ§æ è¯\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * å­æ®µç¼å·\r\n   */\r\n  fieldCode: string;\r\n\r\n  /**\r\n   * å­æ®µåç§°\r\n   */\r\n  fieldName: string;\r\n\r\n  /**\r\n   * æ¯è¾ç¬¦\r\n   */\r\n  // compareType:CompareType;\r\n\r\n  /**\r\n   * å¼ç±»å\r\n   */\r\n  valueType: ValueType;\r\n\r\n  /**\r\n   * ä¸ºç©ºæ¶æç¤ºä¿¡æ¯\r\n   */\r\n  placeHolder: string;\r\n  /**\r\n   * å¼å§\r\n   */\r\n  beginPlaceHolder: string;\r\n  /**\r\n   * ç»æ\r\n   */\r\n  endPlaceHolder: string;\r\n  /**\r\n   * å¼\r\n   * è¯¥å±æ§ä¸ºIValueæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åæä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n   * 1. ææ¬ç±»åï¼TextValue\r\n   * 2. ä¸æåè¡¨ï¼DropDownListValue\r\n   * 3. æ¥æåºé´ï¼DateRangeValue\r\n   * 4. æ°å­åºé´ï¼NumberRangeValue\r\n   * 5. å¸®å©ç±»åï¼SmartHelpValue\r\n   * 6. å¤éæ¡: CheckBoxValue\r\n   * 7. åæ°å¼: SingleNumberValue\r\n   * 8. åå¹´åº¦: SingleYearValue\r\n   * 9. åæåº¦: SingleMonthValue\r\n   * 10. æåº¦åºé´: MonthRangeValue\r\n   * 11. åæ¥æ: SingleDateValue\r\n   * 12. åæ¥ææ¶é´: SingleDateTimeValue\r\n   * 13. ä¸æå¸®å©ï¼ ComboLookUpValue\r\n   * 14. åéæ¡ï¼ RadioValue\r\n   * 15. æºè½è¾å¥æ¡ï¼ InputGroupValue\r\n   */\r\n  value: IValue;\r\n\r\n  /**\r\n   * æ§ä»¶ç±»åï¼ç®ååæ¬ææ¬ç±»åï¼ä¸æåè¡¨ï¼æ¥æåºé´ï¼æ°å­åºé´ï¼å¸®å©ç±»å\r\n   * æ§ä»¶ç±»åä¸ºIControlæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åå¯¹åºä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n   * 1. ææ¬ç±»åï¼TextControl\r\n   * 2. ä¸æåè¡¨ï¼DropDownListControl\r\n   * 3. æ¥æåºé´ï¼DateRangeControl\r\n   * 4. æ°å­åºé´ï¼NumberRangeControl\r\n   * 5. å¸®å©ç±»åï¼SmartHelpControl\r\n   * 6. åæ¥æï¼ SingleDateControl\r\n   * 7. åæ°å¼ï¼SingleNumberControl\r\n   * 8. åå¹´åº¦ï¼SingleYearControl\r\n   * 9. åæåº¦ï¼SingleMonthControl\r\n   * 10. æåº¦åºé´ï¼MonthRangeControl\r\n   * 11. åæ¥ææ¶é´ï¼SingleDateTimeControl\r\n   * 12. æ¥ææ¶é´åºé´ï¼DateTimeRangeControl\r\n   * 13. å¤éæ¡ï¼CheckBoxControl\r\n   * 14. ä¸æå¸®å©ï¼ComboLookUpControl\r\n   * 15. åéæ¡ï¼ RadioControl\r\n   * 16. æºè½è¾å¥æ¡ï¼ InputGroupControl\r\n   */\r\n  control: IControl;\r\n  readonly: boolean;\r\n  visible?: boolean = true;\r\n  /**\r\n   * é«çº§æ¨¡å¼ä¸çæ¡ä»¶id\r\n   */\r\n  conditionid?: number;\r\n  /**\r\n   * é«çº§æ¨¡å¼ä¸çå¼å³ç³»\r\n   */\r\n  compareType?: number;\r\n  /**\r\n   * é«çº§æ¨¡å¼ä¸çä¸ä¸ä¸ªæ¡ä»¶çå³ç³»\r\n   */\r\n  relation?: number;\r\n  /**\r\n   * é«çº§æ¨¡å¼ä¸çå¼å³æ¬å·\r\n   */\r\n  Rbracket?: string;\r\n  /**\r\n   * é«çº§æ¨¡å¼ä¸çå¼å·¦æ¬å·\r\n   */\r\n  Lbracket?: string;\r\n\r\n}\r\n\r\n/**\r\n * æ¥è¯¢æ¡ä»¶åºååä¸ååºååå¨\r\n */\r\nexport class QueryConditionConvert {\r\n\r\n  /**\r\n   * åºåå\r\n   * @param obj æ¥è¯¢æ¡ä»¶å®ä½\r\n   * ä¸ºäºå¼å®¹C#äº§ççæ§æ°æ®ï¼åserverä¼ éçJSON objectå±æ§åå¨æ¹ä¸ºé¦å­æ¯å¤§å\r\n   */\r\n  convertJObject(obj: QueryCondition): Object {\r\n    let queryCondition = obj as QueryCondition;\r\n    let jobj = new Object();\r\n    jobj[\"ID\"] = queryCondition.id;\r\n    jobj[\"FieldCode\"] = queryCondition.fieldCode;\r\n    jobj[\"FieldName\"] = queryCondition.fieldName;\r\n    // jobj[\"compareType\"]=queryCondition.compareType;\r\n    jobj[\"ValueType\"] = queryCondition.valueType;\r\n    jobj[\"placeHolder\"] = queryCondition.placeHolder;\r\n    // æ è®ºæ¯å¦åºé´é½è¿½å \r\n    jobj[\"beginPlaceHolder\"] = queryCondition.hasOwnProperty('beginPlaceHolder') ? queryCondition['beginPlaceHolder'] : '';\r\n    jobj[\"endPlaceHolder\"] = queryCondition.hasOwnProperty('endPlaceHolder') ? queryCondition['endPlaceHolder'] : '';\r\n    jobj[\"visible\"] = queryCondition.hasOwnProperty('visible') ? queryCondition['visible'] : true;\r\n    jobj[\"conditionid\"] = queryCondition.hasOwnProperty('conditionid') ? queryCondition['conditionid'] : undefined;\r\n    jobj[\"compareType\"] = queryCondition.hasOwnProperty('compareType') ? queryCondition['compareType'] : undefined;\r\n    jobj[\"relation\"] = queryCondition.hasOwnProperty('relation') ? queryCondition['relation'] : undefined;\r\n    jobj[\"Lbracket\"] = queryCondition.hasOwnProperty('Lbracket') ? queryCondition['Lbracket'] : undefined;\r\n    jobj[\"Rbracket\"] = queryCondition.hasOwnProperty('Rbracket') ? queryCondition['Rbracket'] : undefined;\r\n    let valueConvert = new ConditionValueConvert();\r\n    if (queryCondition.value) {\r\n      jobj[\"Value\"] = valueConvert.convertToObject(queryCondition.value);\r\n    }\r\n    let controlConvertor = new ControlConvert();\r\n    if (queryCondition.control) {\r\n      jobj[\"Control\"] = controlConvertor.convertJObject(queryCondition.control);\r\n    }\r\n    return jobj;\r\n  }\r\n\r\n  /**\r\n   * ååºåå\r\n   * @param jobj æ¥è¯¢æ¡ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n   * serverç«¯å­å¨çæ¯åç«¯å®ä¹å¥½æ ¼å¼çå­ç¬¦ä¸²ï¼æä»¥clientæ¥æ¶æ¶ä»¥çº¦å®å¥½çæ ¼å¼ååºåå\r\n   */\r\n  initFromJobject(jobj: Object): QueryCondition {\r\n    let queryCondition = new QueryCondition();\r\n    queryCondition.id = jobj[\"ID\"];\r\n    queryCondition.fieldCode = jobj[\"FieldCode\"];\r\n    queryCondition.fieldName = jobj[\"FieldName\"];\r\n    // queryCondition.compareType=jobj[\"compareType\"] as CompareType;\r\n    queryCondition.valueType = (jobj[\"ValueType\"]) as ValueType;\r\n    queryCondition.placeHolder = jobj[\"placeHolder\"];\r\n    queryCondition.beginPlaceHolder = jobj.hasOwnProperty('beginPlaceHolder') ? jobj['beginPlaceHolder'] : '';\r\n    queryCondition.endPlaceHolder = jobj.hasOwnProperty('endPlaceHolder') ? jobj['endPlaceHolder'] : '';\r\n    queryCondition.visible = jobj.hasOwnProperty('visible') ? jobj['visible'] : true;\r\n    queryCondition.conditionid = jobj.hasOwnProperty('conditionid') ? jobj['conditionid'] : undefined;\r\n    queryCondition.compareType = jobj.hasOwnProperty('compareType') ? jobj['compareType'] : undefined;\r\n    queryCondition.relation = jobj.hasOwnProperty('relation') ? jobj['relation'] : undefined;\r\n    queryCondition.Rbracket = jobj.hasOwnProperty('Rbracket') ? jobj['Rbracket'] : undefined;\r\n    queryCondition.Lbracket = jobj.hasOwnProperty('Lbracket') ? jobj['Lbracket'] : undefined;\r\n    const conditonValue = jobj[\"Value\"];\r\n    if (conditonValue) {\r\n      let valueConvert = new ConditionValueConvert();\r\n      queryCondition.value = valueConvert.initFromObject(conditonValue);\r\n    }\r\n    const conditionControl = jobj[\"Control\"];\r\n    if (conditionControl) {\r\n      let controlConvertor = new ControlConvert();\r\n      queryCondition.control = controlConvertor.initFromJobject(conditionControl);\r\n    }\r\n    return queryCondition;\r\n  }\r\n}\r\n","export enum ValueType{\r\n\r\n    /**\r\n     *å¼ç±»å\r\n     */\r\n    Value = 0,\r\n\r\n    /**\r\n     * å¸®å©ç±»å\r\n     */\r\n    SmartHelp=1,\r\n\r\n    /**\r\n     * æä¸¾ç±»å\r\n     */\r\n    Enum=2,\r\n\r\n    /**\r\n     * è¡¨è¾¾å¼\r\n     */\r\n    Express=3\r\n}","import { Injectable } from '@angular/core';\r\nimport { NotifyService, NotifyOptions } from '@farris/ui-notify';\r\nimport { QueryCondition } from '../entity/querycondition';\r\nimport { ValueType } from '../entity/valuetype';\r\nimport { TextControl } from '../entity/controltype/text/textcontrol';\r\nimport { InputGroupControl, DialogConfig } from '../entity/controltype/input-group/inputgroupcontrol';\r\nimport { TextValue } from '../entity/conditionvalue/textvalue';\r\nimport { DateRangeControl } from '../entity/controltype/daterange/date-range.control';\r\nimport { DateRangeValue } from '../entity/conditionvalue/daterangevalue';\r\nimport { NumberRangeControl } from '../entity/controltype/numberrange/numberrangecontrol';\r\nimport { NumberRangeValue } from '../entity/conditionvalue/numberrangevaue';\r\nimport { DropDownListControl } from '../entity/controltype/dropdownlist/dropdownlistcontrol';\r\nimport { DropDownListValue } from '../entity/conditionvalue/dropdownlistvalue';\r\nimport { SmartHelpContol, QuickSelectOption } from '../entity/controltype/smarthelp/smarthelpcontrol';\r\nimport { SmartHelpValue } from '../entity/conditionvalue/smarthelpvalue';\r\nimport { SingleDateControl } from '../entity/controltype/date/single-date-control';\r\nimport { SingleDateValue } from '../entity/conditionvalue/single-date-value';\r\nimport { SingleNumberControl } from '../entity/controltype/number/single-number-control';\r\nimport { SingleNumberValue } from '../entity/conditionvalue/single-number-value';\r\nimport { SingleYearControl } from '../entity/controltype/year/year-control';\r\nimport { SingleYearValue } from '../entity/conditionvalue/single-year-value';\r\nimport { SingleMonthControl } from '../entity/controltype/month/month-control';\r\nimport { SingleMonthValue } from '../entity/conditionvalue/single-month-value';\r\nimport { CheckBoxControl } from '../entity/controltype/checkbox/checkbox-control';\r\nimport { CheckBoxValue } from '../entity/conditionvalue/checkbox-value';\r\nimport { DateTimeRangeControl } from '../entity/controltype/daterange/datertime-range-control';\r\nimport { MonthRangeControl } from '../entity/controltype/monthrange/month-range-control';\r\nimport { MonthRangeValue } from '../entity/conditionvalue/month-range-value';\r\nimport { SingleDateTimeControl } from '../entity/controltype/date/single-date-time-control';\r\nimport { SingleDateTimeValue } from '../entity/conditionvalue/single-date-time-value';\r\nimport { ComboLookUpControl } from '../entity/controltype/combolookup/combolookup-control';\r\nimport { ComboLookUpValue } from '../entity/conditionvalue/combolookup-value';\r\nimport { RadioControl } from '../entity/controltype/radio/radio-control';\r\nimport { RadioValue } from '../entity/conditionvalue/radio-value';\r\nimport { InputGroupValue } from '../entity/conditionvalue/inputgroupvalue';\r\nimport { QuerySolutionVo } from '../entity/querysolutionvo';\r\nimport { FieldConfig } from '../entity/fieldconfig/fieldconfig';\r\nimport { ControlType } from '../entity/controltype';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class SolutionService {\r\n  // æ è®°åæ´\r\n  private controlConfigState: BehaviorSubject<any> = new BehaviorSubject([]);\r\n\r\n  constructor(private notify: NotifyService) { }\r\n  controlTypeMap: Map<number, string> = new Map([\r\n    [ControlType.Text, 'text'], [ControlType.BoolCheck, 'bool-check'], [ControlType.DateRange, 'date'],\r\n    [ControlType.DateTimeRange, 'date-time'], [ControlType.NumberRange, 'number'], [ControlType.DropDownList, 'dropdown'],\r\n    [ControlType.SmartHelp, 'help'], [ControlType.SingleDate, 'single-date'], [ControlType.SingleNumber, 'single-number'],\r\n    [ControlType.SingleYear, 'single-year'], [ControlType.SingleMonth, 'single-month'], [ControlType.MonthRange, 'month'],\r\n    [ControlType.SingleDateTime, 'single-date-time'], [ControlType.ComboLookUp, 'combolist-help'], [ControlType.Radio, 'radio'],\r\n    [ControlType.InputGroup, 'input-group']\r\n  ]);\r\n  getControlConfigState() {\r\n    return this.controlConfigState;\r\n  }\r\n  /**\r\n   * ä¼ éè¿æ¥çæ¯å·²ç»å¤çè¿çæ¡ä»¶\r\n   * @param simpleCondition \r\n   */\r\n  updateControlConfigState(simpleCondition: Array<any>) {\r\n    this.controlConfigState.next(simpleCondition);\r\n  }\r\n\r\n  /**\r\n   * åªè¿åå­å¨çå±æ§\r\n   */\r\n  convertToSimpleQueryConditions(fields: Array<FieldConfig>): Array<any> {\r\n    if(fields && fields.length == 0) {\r\n      return [];\r\n    }\r\n    return fields.map(field => {\r\n      let simpleQueryCondition = {};\r\n      simpleQueryCondition['fieldCode'] = field.labelCode;\r\n      if(field.hasOwnProperty('visible')) {\r\n        simpleQueryCondition['visible'] = field.visible;\r\n      }\r\n      simpleQueryCondition['control'] = this.getSimpleControl(field);\r\n      return simpleQueryCondition;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * åªå¤çè®¾ç½®çå±æ§\r\n   * @param field \r\n   */\r\n  private getSimpleControl(field: FieldConfig) {\r\n    const controlData = field.control;\r\n    let simpleControl = {};\r\n    let tControlType = this.controlTypeMap.get(controlData.controltype);\r\n    switch (tControlType) {\r\n      case 'single-year':\r\n        this.updateSimpleControl(simpleControl, ['maxDate', 'minDate'], controlData);\r\n        break;\r\n      default:\r\n        simpleControl = {};\r\n    }\r\n    return simpleControl;\r\n  }\r\n\r\n  /**\r\n   * åªå¤çæå®å±æ§\r\n   * @param resultObj ä¿®æ¹çå¯¹è±¡  {test01:'',test01:''}\r\n   * @param sourceProps å¾è·åçå±æ§åè¡¨ ['prop01','prop02']\r\n   * @param source åå¼æ¥æº{prop01:'',prop02:''}\r\n   * @param distProps ç®æ å±æ§ï¼å¯¹åºçè¿åå±æ§æç§è®¾ç½®['dist01','']\r\n   * @return \r\n   */\r\n  private updateSimpleControl(resultObj: any, sourceProps: any, source: any, distProps = []) {\r\n    if (distProps.length == 0) {\r\n      distProps = sourceProps;\r\n    }\r\n    for (let m = 0; m < sourceProps.length; m++) {\r\n      if (!distProps[m]) {\r\n        distProps[m] = sourceProps[m];\r\n      }\r\n    }\r\n    for (let k = 0; k < sourceProps.length; k++) {\r\n      if (source && source.hasOwnProperty(sourceProps[k])) {\r\n        resultObj[distProps[k]] = source[sourceProps[k]];\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * å°å­æ®µéç½®JSONæè¿°ä¿¡æ¯è½¬æ¢ä¸ºç­éæ¡ä»¶\r\n   * @param fields å­æ®µéç½®ä¿¡æ¯\r\n   * @returns ç­éæ¡ä»¶æ°ç»\r\n   */\r\n  public convertToQueryConditions(fields: Array<FieldConfig>): Array<QueryCondition> {\r\n    let queryCondition: QueryCondition;\r\n    return fields.map(field => {\r\n      queryCondition = new QueryCondition();\r\n      queryCondition.id = field.id;\r\n      queryCondition.fieldCode = field.labelCode;\r\n      // queryCondition.code = field.code; æ ç¨å±æ§\r\n      queryCondition.fieldName = field.name;\r\n      queryCondition.valueType = ValueType.Value;\r\n      queryCondition.placeHolder = field.placeHolder;\r\n      queryCondition.beginPlaceHolder=field.hasOwnProperty('beginPlaceHolder')?field.beginPlaceHolder:'';\r\n      queryCondition.endPlaceHolder=field.hasOwnProperty('endPlaceHolder')?field.endPlaceHolder:'';      \r\n      let { control, value } = this.getControlAndValue(field);\r\n      queryCondition.control = control;\r\n      queryCondition.value = value;\r\n      return queryCondition;\r\n    });\r\n  }\r\n  /**\r\n   * æ ¹æ®æ§ä»¶ç±»ååå«åå»ºç­éæ¡ä»¶çcontrolå¯¹è±¡åvalueå¯¹è±¡\r\n   * @param field å­æ®µéç½®ä¿¡æ¯\r\n   * @returns ç­éæ¡ä»¶çcontrolå¯¹è±¡åvalueå¯¹è±¡\r\n   */\r\n  getControlAndValue(field: FieldConfig) {\r\n    const controlData = field.control;\r\n    const valueData = field.value;\r\n    let control, value: any;\r\n    switch (controlData.controltype) {\r\n      case 'text':\r\n        control = new TextControl();\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        //plain string\r\n        value = new TextValue({ value: valueData });\r\n        break;\r\n      case 'input-group':\r\n        control = new InputGroupControl();\r\n        control.className = controlData.className;\r\n        control.require = controlData.require;\r\n        control.editable = controlData.editable;\r\n        control.groupText = controlData.groupText;\r\n        control.usageMode = controlData.usageMode;\r\n        control.dialogOptions = this.setInputGroupDialog(field);\r\n        control.click = controlData.click;\r\n        value = new InputGroupValue(valueData);\r\n        break;\r\n      case 'date':\r\n        control = new DateRangeControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat = controlData.returnFormat;\r\n        control.dateChangedCmd = controlData.valueChangedCmd ? controlData.valueChangedCmd : controlData.dateChangedCmd;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.weekSelect = controlData.weekSelect;\r\n        control.showWeekNumbers = controlData.showWeekNumbers;\r\n        control.startFieldCode = controlData.startFieldCode || field.labelCode;\r\n        control.endFieldCode = controlData.endFieldCode || field.labelCode;\r\n        control.enableSplit = controlData.enableSplit || false;\r\n        //control.beginPlaceHolder=controlData.beginPlaceHolder;\r\n        //control.endPlaceHolder=controlData.endPlaceHolder;\r\n        //{startTime: valueData.startTime, endTime: valueData.endTime}\r\n        value = new DateRangeValue(valueData);\r\n        break;\r\n      case 'date-time':\r\n        control = new DateTimeRangeControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat = controlData.returnFormat;\r\n        control.dateChangedCmd = controlData.valueChangedCmd ? controlData.valueChangedCmd : controlData.dateChangedCmd;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.enableCustomFormat = controlData.enableCustomFormat;      \r\n        control.enableSplit = controlData.enableSplit || false;  \r\n       // control.beginPlaceHolder=controlData.beginPlaceHolder;\r\n        //control.endPlaceHolder=controlData.endPlaceHolder;\r\n        //control.weekSelect = controlData.weekSelect;\r\n        //control.showWeekNumbers = controlData.showWeekNumbers;\r\n        //{startTime: valueData.startTime, endTime: valueData.endTime}\r\n        value = new DateRangeValue(valueData);\r\n        break;\r\n      case 'month':\r\n        control = new MonthRangeControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat = controlData.returnFormat;\r\n        control.dateChangedCmd = controlData.valueChangedCmd ? controlData.valueChangedCmd : controlData.dateChangedCmd;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;      \r\n        control.enableSplit = controlData.enableSplit || false;\r\n        //control.beginPlaceHolder=controlData.beginPlaceHolder;\r\n        //control.endPlaceHolder=controlData.endPlaceHolder;\r\n        value = new MonthRangeValue(valueData);\r\n        break;\r\n      case 'number':\r\n        control = new NumberRangeControl();\r\n        control.className = controlData.className;\r\n        control.placeholder = this.emptyString(controlData.placeholder);\r\n        control.require = controlData.require;\r\n        control.precision = controlData.precision;\r\n        control.textAlign = controlData.textAlign;\r\n        control.bigNumber = controlData.isBigNumber;\r\n        control.min = controlData.minValue;\r\n        control.max = controlData.maxValue;        \r\n        //control.beginPlaceHolder=controlData.beginPlaceHolder;\r\n        //control.endPlaceHolder=controlData.endPlaceHolder;\r\n        //{startValue: valueData.startValue, endValue: valueData.endValue}\r\n        value = new NumberRangeValue(valueData);\r\n        break;\r\n      case 'dropdown':\r\n        control = new DropDownListControl();\r\n        control.valueType = controlData.valueType;\r\n        control.enumValues = controlData.enumValues;\r\n        control.uri = controlData.uri;\r\n        control.beforeShow = controlData.beforeShow;\r\n        control.beforeHide = controlData.beforeHide;\r\n        control.idField = controlData.idField;\r\n        control.textField = controlData.textField;\r\n        control.multiSelect = controlData.multiSelect;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.panelHeight = controlData.panelHeight;\r\n        control.require = controlData.require;\r\n        //{value: [enumValues], key: ä»¥ï¼å·åå²çå­ç¬¦ä¸²})\r\n        value = new DropDownListValue(valueData);\r\n        break;\r\n      case 'help':\r\n        control = new SmartHelpContol();\r\n        control.uri = controlData.uri;\r\n        control.textField = controlData.textField;\r\n        control.valueField = controlData.valueField;\r\n        control.displayType = controlData.displayType;\r\n        control.idField = controlData.idField;\r\n        control.mapFields = controlData.mapFields;\r\n        control.preEventCmd = controlData.preEventCmd;\r\n        control.postEventCmd = controlData.postEventCmd;\r\n        control.context = controlData.context;\r\n        control.className = controlData.className;\r\n        control.enableFullTree = controlData.enableFullTree;\r\n        control.loadTreeDataType = controlData.loadTreeDataType;\r\n        control.singleSelect = controlData.singleSelect;\r\n        control.expandLevel = controlData.expandLevel;\r\n        control.enableCascade = controlData.enableCascade;\r\n        control.cascadeStatus = controlData.cascadeStatus;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.nosearch = controlData.nosearch;\r\n        control.displayFields = controlData.displayFields;\r\n        control.displayTextSeparator = controlData.displayTextSeparator;\r\n        control.editable = controlData.editable;\r\n        control.clearFields = controlData.clearFields;\r\n        control.clear = controlData.clear;\r\n        control.dialogTitle = controlData.dialogTitle;\r\n        control.panelHeight = controlData.panelHeight;\r\n        control.panelWidth = controlData.panelWidth;\r\n        control.enableMultiFieldSearch = controlData.enableMultiFieldSearch;\r\n        if (controlData.hasOwnProperty('pageSize')) {\r\n          control.pageSize = controlData.pageSize;\r\n        }\r\n        if (controlData.hasOwnProperty('pageList')) {\r\n          control.pageList = controlData.pageList;\r\n        }\r\n        if (controlData.hasOwnProperty('quickSelect')) {\r\n          let quickSelectControl = new QuickSelectOption();\r\n          quickSelectControl.enable = controlData.quickSelect['enable'];\r\n          quickSelectControl.showItemsCount = controlData.quickSelect['showItemsCount'];\r\n          quickSelectControl.formatter = controlData.quickSelect['formatter'];\r\n          quickSelectControl.showMore = controlData.quickSelect['showMore'];\r\n          control.quickSelect = quickSelectControl;\r\n        }\r\n        //{value: [{}], valueField: string, textValue: string}\r\n        value = new SmartHelpValue(valueData);\r\n        break;\r\n      case 'combolist-help':\r\n        control = new ComboLookUpControl();\r\n        control.uri = controlData.uri;\r\n        control.idField = controlData.idField;\r\n        control.valueField = controlData.valueField;\r\n        control.textField = controlData.textField;\r\n        control.mapFields = controlData.mapFields;\r\n        control.displayType = this.displayTypeTransform(controlData.displayType);\r\n        control.singleSelect = controlData.singleSelect;\r\n        control.preEventCmd = controlData.preEventCmd;\r\n        control.postEventCmd = controlData.postEventCmd;\r\n        control.enableFullTree = controlData.enableFullTree;\r\n        control.loadTreeDataType = controlData.loadTreeDataType;\r\n        control.expandLevel = controlData.expandLevel;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.panelWidth = controlData.panelWidth;\r\n        control.panelHeight = controlData.panelHeight;\r\n        control.require = controlData.require;\r\n        control.context = controlData.context;\r\n        //{value: [{}], valueField: string, textValue: string}\r\n        value = new ComboLookUpValue(valueData);\r\n        break;\r\n      case 'single-date':\r\n        control = new SingleDateControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat = controlData.returnFormat;\r\n        control.dateChangedCmd = controlData.valueChangedCmd ? controlData.valueChangedCmd : controlData.dateChangedCmd;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.isDynamicDate = controlData.isDynamicDate ? controlData.isDynamicDate : false;\r\n        //plain string\r\n        value = new SingleDateValue(valueData);\r\n        break;\r\n      case 'single-date-time':\r\n        control = new SingleDateTimeControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat=controlData.returnFormat;\r\n        control.dateChangedCmd = controlData.valueChangedCmd ? controlData.valueChangedCmd : controlData.dateChangedCmd;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.enableCustomFormat = controlData.enableCustomFormat;    \r\n        value = new SingleDateTimeValue(valueData);\r\n        break;\r\n      case 'single-number':\r\n        control = new SingleNumberControl();\r\n        control.className = controlData.className;\r\n        control.placeholder = this.emptyString(controlData.placeholder);\r\n        control.precision = controlData.precision;\r\n        control.require = controlData.require;\r\n        control.textAlign = controlData.textAlign;\r\n        control.bigNumber = controlData.isBigNumber;\r\n        control.min = controlData.minValue;\r\n        control.max = controlData.maxValue;\r\n        //{numValue: xxxx}\r\n        value = new SingleNumberValue(valueData);\r\n        break;\r\n      case 'single-year':\r\n        control = new SingleYearControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat = controlData.returnFormat;\r\n        control.dateChangedCmd = controlData.valueChangedCmd ? controlData.valueChangedCmd : controlData.dateChangedCmd;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.maxDate = controlData.maxDate;\r\n        control.minDate = controlData.minDate;\r\n        //yearValue : plain string\r\n        value = new SingleYearValue(valueData);\r\n        break;\r\n      case 'single-month':\r\n        control = new SingleMonthControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat = controlData.returnFormat;\r\n        control.dateChangedCmd = controlData.valueChangedCmd ? controlData.valueChangedCmd : controlData.dateChangedCmd;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        value = new SingleMonthValue(valueData);\r\n        break;\r\n      case 'bool-check':\r\n        control = new CheckBoxControl();\r\n        control.className = controlData.className;\r\n        control.data = [{ value: \"true\", name: field.name }];\r\n        control.horizontal = controlData.horizontal;\r\n        control.disable = controlData.disable;\r\n        control.isStringValue = false;\r\n        control.require = controlData.require;\r\n        //[true] or [false]\r\n        value = new CheckBoxValue(valueData);\r\n        break;\r\n      case 'radio':\r\n        control = new RadioControl();\r\n        control.valueType = controlData.valueType;\r\n        control.enumValues = controlData.enumValues;\r\n        control.className = controlData.className;\r\n        control.showLabel = controlData.showLabel;\r\n        control.horizontal = controlData.horizontal;\r\n        control.disabled = controlData.disabled;\r\n        control.require = controlData.require;\r\n        value = new RadioValue(valueData);\r\n        break;\r\n    }\r\n    return { control, value };\r\n  }\r\n\r\n  getGuid() {\r\n    return (this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + this.s4() + this.s4());\r\n  }\r\n\r\n  private s4() {\r\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n  }\r\n\r\n  showInfo(message: string, infoType: string, title: string, timeout: number) {\r\n    this.notify.config.position = 'top-center';\r\n    if (infoType == 'success') {\r\n      this.notify.success(<NotifyOptions>{ title: title, msg: message, timeout: timeout });\r\n    }\r\n    else if (infoType == 'info') {\r\n      this.notify.info(<NotifyOptions>{ title: title, msg: message, timeout: timeout });\r\n    }\r\n    else if (infoType == 'warning') {\r\n      this.notify.warning(<NotifyOptions>{ title: title, msg: message, timeout: timeout });\r\n    }\r\n    else if (infoType == 'error') {\r\n      this.notify.error(<NotifyOptions>{ title: title, msg: message, timeout: timeout });\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n  * æ ¹æ®å­æ®µè·åLableæ§ä»¶çTitle\r\n  * @param field\r\n  */\r\n  getConditionItemTitle(field: QueryCondition) {\r\n    if (field.id && field.id !== '') {\r\n      return field.fieldName;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * å è½½ç­éæ¹æ¡æ¶èµé»è®¤å¼\r\n   * @param solution éè¦èµé»è®¤å¼çç­éæ¹æ¡\r\n   * @param fieldConfigs é»è®¤å¼è®¾ç½®\r\n   * @param readonly æ¯å¦åªè¯»\r\n   * @returns å·²èµé»è®¤å¼çç­éæ¹æ¡\r\n   */\r\n  setValues(solution: QuerySolutionVo, fieldConfigs: FieldConfig[], readonly: boolean): QuerySolutionVo {\r\n    let qc: QueryCondition;\r\n    const conditions = solution.queryConditions ? solution.queryConditions : [];\r\n    let controlType: string;\r\n    fieldConfigs.forEach(field => {\r\n      qc = conditions.find(c => c.fieldCode == field.labelCode);\r\n      //qc.controlå¹¶ä¸æ¯controlData\r\n      if (qc && qc.control && qc.value) {\r\n        controlType = this.controlTypeMap.get(qc.control.getControlType());\r\n        field.control = { controltype: controlType };\r\n        const { control, value } = this.getControlAndValue(field);\r\n        qc.value = this.isNumCheck(qc, value, field);\r\n        qc.readonly = readonly;\r\n      }\r\n    });\r\n    return solution;\r\n  }\r\n  /**\r\n   * \r\n   * @param solution éè¦æ´æ°éç½®çç­éæ¹æ¡\r\n   * @param fieldConfigs æ´æ°éç½®\r\n   * @returns å·²æ´æ°éç½®çç­éæ¹æ¡\r\n   */\r\n  updateControl(conditions: Array<QueryCondition>, fieldConfigs: Array<any>) {\r\n    let qc: QueryCondition;\r\n    conditions = conditions ? conditions : [];\r\n    if (conditions.length > 0) {\r\n      fieldConfigs.forEach(field => {\r\n        qc = conditions.find(c => c.fieldCode == field['fieldCode']);\r\n        if(qc && qc.hasOwnProperty('visible') && field.hasOwnProperty('visible') && field['visible'] !== qc.visible ) {\r\n          qc.visible = field['visible'];\r\n        }\r\n        if (qc && qc.control) {\r\n          for (var prop in field.control) {\r\n            qc.control[prop] = field.control[prop]\r\n          }\r\n        }\r\n      });\r\n    }\r\n    // let qc: QueryCondition;\r\n    // const conditions = solution.queryConditions ? solution.queryConditions : [];\r\n    // if (conditions.length > 0) {\r\n    //   fieldConfigs.forEach(field => {\r\n    //     qc = conditions.find(c => c.fieldCode == field.labelCode);\r\n    //     if (qc && qc.control) {\r\n    //       for (var prop in field.control) {\r\n    //         qc.control[prop] = field.control[prop]\r\n    //       }\r\n    //     }\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  /**\r\n   * å¿å¡«æ§ä»¶éç©ºå¤æ­\r\n   * @param conditions è¿è¡ç­éæä½æ¶å½åææçç­éæ¡ä»¶\r\n   */\r\n  isValid(conditions: Array<QueryCondition>): any[] {\r\n    let qc: QueryCondition;\r\n    const errorArr = conditions.map(qc => {\r\n      if (qc.control.isRequired() && qc.value.isEmpty() && qc.visible) {\r\n        return {\r\n          type: 'require',\r\n          field: qc.fieldName\r\n        };\r\n      }\r\n    });\r\n    return errorArr.filter(error => error != null);\r\n  }\r\n\r\n  /**\r\n   * è§£å³æ°å¼æ§ä»¶placeholderæ¾ç¤ºä¸ºundefinedçé®é¢\r\n   * @param s æ°å¼æ§ä»¶JSONæè¿°ä¸­çplaceholderéç½®ä¿¡æ¯\r\n   */\r\n  private emptyString(data: any) {\r\n    if (data === null || data === undefined) {\r\n      return '';\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * è§£å³jitçæä»£ç åä¸æå¸®å©æ§ä»¶çdisplayTypeå±æ§ä¸ç»ä»¶apiä¸ä¸è´çé®é¢\r\n   * @param data ä¸æå¸®å©æ§ä»¶JSONæè¿°ä¸­çdisplayTypeéç½®ä¿¡æ¯\r\n   */\r\n  private displayTypeTransform(data: any) {\r\n    if (data === 'List') {\r\n      return 'LOOKUPLIST';\r\n    }\r\n    return 'LOOKUPTREELIST';\r\n  }\r\n\r\n  /**\r\n   * è§£å³æ°å¼æ§ä»¶èµé»è®¤å¼åè½ä¸æå¤§æå°å¼éå¶åè½çå²çªé®é¢\r\n   * @param condition å½åæ­£å¨èµé»è®¤å¼çç­éæ¡ä»¶ï¼è¥æ¯æ°å¼ç±»åï¼éè¦æåå¶controlå¯¹è±¡çmaxå±æ§åminå±æ§çå¼\r\n   * @param value é»è®¤å¼éç½®valueå¯¹è±¡\r\n   * @param field é»è®¤å¼éç½®\r\n   * @returns æ ¡éªæå¤§å¼åæå°å¼ä¹åçé»è®¤å¼éç½®valueå¯¹è±¡\r\n   */\r\n  private isNumCheck(condition: any, value: any, field: any) {\r\n    let minValue: any;\r\n    let maxValue: any;\r\n    if (field.control.controltype == 'single-number') {\r\n      minValue = (condition.control.min == null || condition.control.min == undefined) ? -2147483648 : condition.control.min;\r\n      maxValue = (condition.control.max == null || condition.control.max == undefined) ? 2147483647 : condition.control.max;\r\n      value.numValue = ((value.numValue - minValue) > 0) ? value.numValue : minValue;\r\n      value.numValue = ((value.numValue - maxValue) < 0) ? value.numValue : maxValue;\r\n    }\r\n    if (field.control.controltype == 'number') {\r\n      minValue = (condition.control.min == null || condition.control.min == undefined) ? -2147483648 : condition.control.min;\r\n      maxValue = (condition.control.max == null || condition.control.max == undefined) ? 2147483647 : condition.control.max;\r\n      value.startValue = ((value.startValue - minValue) > 0) ? value.startValue : minValue;\r\n      value.startValue = ((value.startValue - maxValue) < 0) ? value.startValue : maxValue;\r\n      value.endValue = ((value.endValue - minValue) > 0) ? value.endValue : minValue;\r\n      value.endValue = ((value.endValue - maxValue) < 0) ? value.endValue : maxValue;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * æºè½è¾å¥æ¡æ§ä»¶éè¦å¼¹åºè¡¨åæ¶ï¼å°è¡¨åéç½®JSONæè¿°è½¬æ¢ä¸ºå¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªåæ°\r\n   * @param field éç½®ä¸ºæºè½è¾å¥æ¡æ§ä»¶çå­æ®µçJSONæè¿°\r\n   * @returns å¼¹çªåæ°\r\n   */\r\n  private setInputGroupDialog(field: any): DialogConfig {\r\n    let inputGroupControlData = field.control;\r\n    let modalConfigData = inputGroupControlData.modalConfig;\r\n    if (!field.id || inputGroupControlData.usageMode == 'text') {\r\n      return undefined;\r\n    }\r\n\r\n    let dialogConfig = new DialogConfig();\r\n    dialogConfig.modalId = field.id;\r\n    if (modalConfigData.mapFields) {\r\n      dialogConfig.mapFields = JSON.parse(modalConfigData.mapFields.replace(/'/g, '\"'));\r\n    }\r\n    dialogConfig.showHeader = modalConfigData.hasOwnProperty('showHeader') ? modalConfigData.showHeader : true;\r\n    dialogConfig.showCloseButton = modalConfigData.hasOwnProperty('showCloseButton') ? modalConfigData.showCloseButton : true;\r\n    dialogConfig.showMaxButton = modalConfigData.hasOwnProperty('showMaxButton') ? modalConfigData.showMaxButton : true;\r\n    dialogConfig.title = modalConfigData.hasOwnProperty('title') ? modalConfigData.title : '';\r\n    dialogConfig.width = modalConfigData.width;\r\n    dialogConfig.height = modalConfigData.height;\r\n    return dialogConfig;\r\n  }\r\n}\r\n\r\n","import { Component, ViewEncapsulation, Input, ComponentFactoryResolver, Injector, ComponentFactory,\r\n    Output, EventEmitter, LOCALE_ID, ViewChild, OnInit, OnDestroy, AfterViewChecked, NgZone, AfterViewInit } from '@angular/core';\r\nimport { QueryCondition } from './entity/querycondition';\r\nimport { CommunicationService } from './service/communicationservice';\r\nimport { ConvertorService } from './service/convertorservice';\r\nimport { ControlType } from './entity/controltype';\r\nimport { ConfigDialogComponent } from './fieldconfigdialog/configdialog.component';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { SolutionService } from './service/solution.service';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { Subject } from 'rxjs';\r\nimport { IdService } from '@farris/ui-common';\r\nimport {QuerySolutionVo} from './entity/querysolutionvo'\r\n\r\n@Component({\r\n    selector: 'farris-querycondition',\r\n    templateUrl: './querycondition.component.html',\r\n    styleUrls: ['./querycondition.component.css'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [CommunicationService]\r\n})\r\nexport class QueryConditionComponent implements OnInit, OnDestroy, AfterViewChecked, AfterViewInit {\r\n\r\n    _selectSolution: QuerySolutionVo\r\n    @Input() get selectSolution() {\r\n        return this._selectSolution\r\n    }\r\n    set selectSolution(value) {\r\n        this._selectSolution = value\r\n    }\r\n    @Input() fieldConfigs: Array<QueryCondition>;\r\n    @Input() unformatFieldConfigs: Array<any>;\r\n    private _resetFieldConfigs = [];\r\n    @Input() \r\n    set resetFieldConfigs(value: Array<any>) {\r\n        if(value && value.length > 0) {\r\n            this.solutionService.updateControlConfigState(value);\r\n        }\r\n        this._resetFieldConfigs = value;\r\n    }\r\n    get resetFieldConfigs(){\r\n        return this._resetFieldConfigs;\r\n    }\r\n    @Input() isControlInline: boolean = true;\r\n    private _selectedFieldConditions:Array<QueryCondition>;\r\n    @Input() \r\n    set selectedFieldConditions(value: Array<QueryCondition>) {\r\n        this._selectedFieldConditions = value;\r\n    }\r\n    get selectedFieldConditions(): Array<QueryCondition> {\r\n        return this._selectedFieldConditions;\r\n    };\r\n\r\n    @Input() showCompleteLabel: boolean = false;\r\n\r\n    @Input() isDisabled: boolean;\r\n\r\n    @Output() fieldConditionsChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild('configDialog') configDialog: ConfigDialogComponent;\r\n\r\n    //æ¯å¦å¯ç¨é«çº§æ¨¡å¼ï¼é»è®¤ä¸ºfalse\r\n    @Input() openAdvanced: boolean = true;\r\n\r\n    localeIds = {\r\n        'en': 'en',\r\n        'zh-CHS': 'zh-CHS'\r\n    }\r\n    currentLocale: string;\r\n    \r\n    solutionService: SolutionService;\r\n    \r\n    controlType = ControlType;\r\n    \r\n    labelFormat: string;\r\n\r\n    showButton: boolean = false;\r\n\r\n    fieldCodeOfClearFields: Array<string> = [];\r\n\r\n    canClearRelatedFields: boolean = false;\r\n\r\n    destroy$: Subject<any> = new Subject<any>();\r\n\r\n    private idService: IdService;\r\n    \r\n    @ViewChild(\"queryConditionWrap\") queryConditionWrapEl;\r\n    // è·ångZone\r\n    private ngZone = null;\r\n    constructor(\r\n        private communicationService: CommunicationService,\r\n        private convertorService: ConvertorService,\r\n        private resolver: ComponentFactoryResolver,\r\n        private injector: Injector,\r\n        private modalService: BsModalService,\r\n        private localeService: LocaleService\r\n    ) {\r\n        this.currentLocale = this.injector.get(LOCALE_ID);\r\n        this.solutionService = this.injector.get(SolutionService);\r\n        this.idService = this.injector.get(IdService);\r\n        if (!this.ngZone) {          \r\n            this.ngZone = this.injector.get<NgZone>(NgZone, null);\r\n        }\r\n    }\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.currentLocale === this.localeIds['en']) {\r\n            this.isControlInline = false;\r\n        }\r\n        this.selectedFieldConditions = this.selectedFieldConditions || new Array<QueryCondition>();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n    ngAfterViewChecked(): void {\r\n        \r\n    }\r\n\r\n    hasSetMultiClass(currentItem: any):boolean{\r\n        if(currentItem.control.className&&currentItem.control.className.indexOf('farris-group-multi-label')>-1){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /* */\r\n    getStyle(currentItem: any): string {\r\n        const defaultCondtionStyle = 'col-12 col-md-6 col-xl-3 col-el-2';\r\n        // è®¾ç½®æ¾ç¤ºæ ç­¾å¨å¹¶ä¸æ¾ç¤ºäºæè¡\r\n        // if(this.showCompleteLabel && currentItem.control.className == 'farris-group-multi-label'){\r\n        //     return defaultCondtionStyle.concat(\" farris-group-multi-label\");\r\n        // }\r\n        let className = currentItem.control.className;\r\n        className = className ? className.replace('farris-group-multi-label','') : '';        \r\n        return className ? className : defaultCondtionStyle;\r\n    }\r\n\r\n    configDialogConfirm(event: Event) {\r\n        const configData = event as unknown as Array<string>;\r\n        const reConfigConditions = new Array<QueryCondition>();\r\n        for(const data of configData) {\r\n            const target = this.selectedFieldConditions.find(condition => condition.fieldCode == data);\r\n            if(target) {\r\n                reConfigConditions.push(target);\r\n            } else {\r\n                reConfigConditions.push(this.fieldConfigs.find(condition => condition.fieldCode == data));\r\n            }\r\n        }\r\n        for(const condition of this.selectedFieldConditions) {\r\n            if(!condition.visible) {\r\n                reConfigConditions.push(condition);\r\n            }\r\n        }\r\n        this.selectedFieldConditions = reConfigConditions;\r\n        this.fieldConditionsChange.emit(this.selectedFieldConditions);\r\n    }\r\n\r\n    openFieldConfigDialog() {\r\n        this.configDialog.inputSelectedFileds = this.selectedFieldConditions ? this.selectedFieldConditions : [];\r\n        this.configDialog.dialog.show();\r\n    }\r\n\r\n    resetSelectedConditionValues(exceptRequired = false): Array<QueryCondition> {\r\n        return this.selectedFieldConditions.map(fieldCondition => {\r\n            if(exceptRequired){\r\n                if(!fieldCondition.control.isRequired()){\r\n                    fieldCondition.value.clearValue();\r\n                }\r\n            }else{\r\n                fieldCondition.value.clearValue();\r\n            }\r\n            \r\n            return fieldCondition;\r\n        });\r\n    }\r\n\r\n    conditionChange() {\r\n        this.fieldConditionsChange.emit(this.selectedFieldConditions);\r\n        if(this.selectSolution && this.selectSolution.mode === '2') {\r\n            this.selectSolution.queryConditions = this.selectedFieldConditions\r\n        }\r\n    }\r\n\r\n    conditionChangeAdvanced(data) {\r\n        this.selectedFieldConditions = data\r\n        this.fieldConditionsChange.emit(this.selectedFieldConditions);\r\n        if(this.selectSolution && this.selectSolution.mode === '2') {\r\n            this.selectSolution.queryConditions = this.selectedFieldConditions\r\n        }\r\n    }\r\n    // å¼¹åºå¸®å©æ§ä»¶é¢æ¿åï¼æ´æ¹canClearRelatedFieldsï¼é¿åèµé»è®¤å¼åå¸®å©å¼ååæ¸ç©ºä¸¤ä¸ªç¹æ§çå²çª\r\n    clearFieldsChange(e: any) {\r\n        if(e && e['controlType'] == ControlType.SmartHelp && e['canClearRelatedFields']) {\r\n            this.canClearRelatedFields = true;\r\n        }\r\n    }\r\n\r\n    confirmLabelFormat(conditions: Array<QueryCondition>) {\r\n        if(this.isControlInline) {\r\n            this.labelFormat = 'farris-form-controls-inline';\r\n            let hasCustom = false;\r\n            if(conditions.length) {\r\n                // å¤éæ¡labelæ ç­¾ç®åå¨æ¡çå³ä¾§ï¼è¶åºå®½åº¦åä¸æ¹åºç°æ»å¨æ¡ï¼è®¡ç®æ ç­¾æå¤§é¿åº¦æ¶éå°å¶æé¤\r\n                let noCheckBoxConditions: Array<QueryCondition> = [];\r\n                conditions.forEach(condition => {\r\n                    if(condition.control.getControlType() != ControlType.BoolCheck) {\r\n                        noCheckBoxConditions.push(condition);\r\n                    }\r\n                    if(condition.control['className']&& condition.control['className']!= 'farris-group-multi-label') {\r\n                        hasCustom = true;\r\n                    }\r\n                });\r\n               \r\n                this.labelFormat += hasCustom ? ' condition-is-custom' : ' condition-with-fixed';              \r\n\r\n                let maxLength = 0;\r\n                if(noCheckBoxConditions.length) {\r\n                    noCheckBoxConditions.forEach(item => {\r\n                        maxLength = (item.fieldName.length > maxLength) ? (item.fieldName.length) : maxLength;\r\n                    });\r\n                }\r\n                //éè¦å®æ´æ¾ç¤ºæ§ä»¶æ ç­¾æ¶ï¼æ ¹æ®æ ç­¾æå¤§é¿åº¦ç¡®å®æ ç­¾æ æ¯è¡å¯æ¾ç¤ºçå­ç¬¦æ°\r\n                if(this.showCompleteLabel) {\r\n                    if(maxLength > 8) {\r\n                        //æ ç­¾è¶åº8ä¸ªå­ç¬¦åï¼è®¾ç½®æ¯è¡æå¤å¯æ¾ç¤º10ä¸ªå­ç¬¦\r\n                        this.labelFormat = this.labelFormat.concat(\" f-form-label-xl\");\r\n                    }\r\n                    else if((maxLength < 9) && (maxLength > 6)) {\r\n                        //æ ç­¾è¶åº6ä¸ªå­ç¬¦ãä¸è¶è¿8ä¸ªå­ç¬¦æ¶ï¼è®¾ç½®æ¯è¡æå¤å¯æ¾ç¤º8ä¸ªå­ç¬¦\r\n                        this.labelFormat = this.labelFormat.concat(\" f-form-label-lg\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(this.labelFormat){\r\n            return this.labelFormat + (this.isControlInline&&this.showCompleteLabel?' condition-with-complete':'');\r\n        }\r\n    }\r\n\r\n    buildSmartHelpKey(value: string) {\r\n        let prefix = '';\r\n        if (location.hash) {\r\n            const pathArr = location.hash.split('?');\r\n            prefix = pathArr ? pathArr[0] : '';\r\n        } else {\r\n            const pathArr  = location.pathname.split('/');\r\n            prefix = pathArr ? pathArr[pathArr.length - 1] : '';\r\n        }\r\n        return this.idService.encrypt(prefix + '/querysolution/' + value);\r\n    }\r\n}\r\n","import { Component, Input, OnInit, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { NumberRangeValue, NumberRangeValueConvertor } from '../../entity/conditionvalue/numberrangevaue';\r\n\r\n\r\n@Component({\r\n  selector: 'app-solution-numberrange',\r\n  templateUrl: './numberrange.component.html',\r\n})\r\n\r\nexport class NumberRangeComponent implements OnInit, OnChanges {\r\n  // numberRange: string;\r\n  beginValue: any;\r\n  endValue: any;\r\n  testId: string;\r\n  precision: number;\r\n  textAlign: string;\r\n  placeholder: string;\r\n  @Input() item: any;\r\n  canNull: boolean;\r\n  bigNumber: boolean;\r\n  min: number;\r\n  max: number;\r\n  beginPlaceHolder:string;\r\n  endPlaceHolder:string;\r\n\r\n  /**\r\n   * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n   */\r\n  @Input() changeFields: Array<string> = [];\r\n\r\n  @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n  constructor(private solutionService: SolutionService) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n      const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n      if(isChange){\r\n        this.constructMultiFieldNumberRange(this.item.value as NumberRangeValue);\r\n      }\r\n  }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.testId = this.solutionService.getGuid();\r\n    this.canNull = true;\r\n    this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n    this.beginPlaceHolder=this.item.beginPlaceHolder?this.item.beginPlaceHolder:this.placeholder;\r\n    this.endPlaceHolder=this.item.endPlaceHolder?this.item.endPlaceHolder:this.placeholder;\r\n    this.precision = this.item.control.precision;\r\n    this.textAlign = this.item.control.textAlign;\r\n    this.bigNumber = this.item.control.bigNumber ? this.item.control.bigNumber : false;\r\n    if(!this.bigNumber){\r\n      this.min = (this.item.control.min === undefined || this.item.control.min === null) ? -2147483648 : (this.item.control.min);\r\n      this.max = (this.item.control.max === undefined || this.item.control.max === null) ? 2147483647 : (this.item.control.max);\r\n    }\r\n    this.constructMultiFieldNumberRange(this.item.value as NumberRangeValue);\r\n  }\r\n\r\n  valueChange(data: any) {\r\n    if(typeof data !== 'string') {\r\n      return;\r\n    }\r\n    const dataArray = data.split(\"~\");\r\n    const start = dataArray[0] && dataArray[0].length > 0 ? dataArray[0] : null;\r\n    const end = dataArray[1] && dataArray[1].length > 0 ? dataArray[1] : null;\r\n    if(!this.bigNumber) {\r\n      this.item.value = new NumberRangeValue({startValue: start, endValue: end});\r\n    } else {\r\n      const numberRangeValue = new NumberRangeValue();\r\n      isNaN(parseFloat(start)) ? numberRangeValue.startValue = null : numberRangeValue.startValue = parseFloat(start);\r\n      isNaN(parseFloat(end)) ? numberRangeValue.endValue = null : numberRangeValue.endValue = parseFloat(end);\r\n      this.item.value = numberRangeValue;\r\n    }\r\n    this.conditionChange.emit();\r\n  }\r\n\r\n  // constructNumberRange(value: NumberRangeValue): string {\r\n  //   return \"a~b\".replace(/a/, value.startValue ? value.startValue.toString().trim() : \"\").replace(/b/, value.endValue ? value.endValue.toString().trim() : \"\");\r\n  // }\r\n\r\n  constructMultiFieldNumberRange(value: NumberRangeValue) {\r\n    // this.beginValue = value && value.startValue ? value.startValue.toString().trim() : '';\r\n    // this.endValue = value && value.endValue ? value.endValue.toString().trim() : '';\r\n    this.beginValue = value.startValue == null ? null : value.startValue;\r\n    this.endValue = value.endValue == null ? null : value.endValue;\r\n  }\r\n\r\n  // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n  //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n  // }\r\n\r\n  getConditionItemTitle(field: QueryCondition) {\r\n    return this.solutionService.getConditionItemTitle(field);\r\n  }\r\n\r\n  beginValueChange($event) {\r\n    this.beginValue = $event;\r\n  }\r\n\r\n  endValueChange($event) {\r\n    this.endValue = $event;\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, EventEmitter, Output } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { TextValue } from '../../entity/conditionvalue/textvalue';\r\nimport { NgModel } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-solution-input',\r\n    templateUrl: './input.component.html',\r\n})\r\n\r\nexport class InputComponent implements OnInit {\r\n\r\n    _hideLabel\r\n    @Input() hideLabel:boolean = false\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    _inputItem: QueryCondition;\r\n\r\n    placeholder: string;\r\n\r\n    maxLength = undefined;\r\n\r\n    @Input()\r\n    set item(textItem: any) {\r\n        this._inputItem = textItem;\r\n    }\r\n    get item(): any {\r\n        return this.constructTextItem(this._inputItem);\r\n    }\r\n    testId: string;\r\n    hasError = false;\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    constructTextItem(textItem: QueryCondition): QueryCondition {\r\n        const textValueObj = textItem.value as TextValue;\r\n        // textValueObj.value = textValueObj.value && textValueObj.value.trim();\r\n        textValueObj.value = textValueObj.value && textValueObj.value;\r\n        textItem.value = textValueObj;\r\n        return textItem;\r\n    }\r\n\r\n    constructor(private solutionService: SolutionService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.testId = this.solutionService.getGuid();\r\n        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n    }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onBlur() {\r\n        if(this.hasError){\r\n            return;\r\n        }\r\n        this.conditionChange.emit();\r\n    }\r\n    /**\r\n     * æ¯å¦æéè¯¯ä¿¡æ¯\r\n     */\r\n    hasErrorInfo(textControl: NgModel) {\r\n        if (textControl.invalid && (textControl.dirty || textControl.touched) && textControl.errors.maxlength) {\r\n            this.hasError=true;\r\n            return true;\r\n        }\r\n        this.hasError=false;\r\n        return false;\r\n    }\r\n}","import { Component, Input, OnInit, EventEmitter, Output, OnDestroy } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { InputGroupControl } from '../../entity/controltype/input-group/inputgroupcontrol';\r\nimport { InputGroupValue } from '../../entity/conditionvalue/inputgroupvalue';\r\n\r\n\r\n@Component({\r\n    selector: 'app-solution-inputgroup',\r\n    templateUrl: './inputgroup.component.html',\r\n})\r\n\r\nexport class InputGroupComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() hideLabel:boolean = false\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    _inputItem: QueryCondition;\r\n\r\n    @Input()\r\n    set item(inputGroupItem: any) {\r\n        this._inputItem = inputGroupItem;\r\n    }\r\n    get item(): any{\r\n        return this.constructInputGroupItem(this._inputItem);\r\n    }\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n    //ç»ä»¶id\r\n    testId: string;\r\n    //ä½¿ç¨æ¨¡å¼ï¼ææ¬textæèå¼¹çªopen-modal\r\n    usageMode: string;\r\n    //å¼¹çªå½ä»¤éè¦æ¥æ¶çåæ°\r\n    dialogOptions: any;\r\n    //å¼¹çªæ¨¡å¼ä¸ï¼ååè¡¨ä¸­åªä¸ªå­æ®µçå¼æ å°å°å½åå­æ®µ\r\n    textField: string;\r\n    //æ§ä»¶åæ¾ç¤ºææ¬æ¯å¦ä¸ºå¼¹çªè¿åçææ¬ï¼æå¨è¾å¥æèæå¨ååºä¿®æ¹æ¶ä¸ºfalse\r\n    isTextFromDialog: boolean = false;\r\n    //å¼¹çªè¿åçææ¬\r\n    textFormDialog: string;\r\n\r\n    constructInputGroupItem(inputGroupItem: QueryCondition): QueryCondition {\r\n        const inputGroupValueObj = inputGroupItem.value as InputGroupValue;\r\n        // inputGroupValueObj.textValue = inputGroupValueObj.textValue && inputGroupValueObj.textValue.trim();\r\n        inputGroupValueObj.textValue = inputGroupValueObj.textValue && inputGroupValueObj.textValue;\r\n        inputGroupItem.value = inputGroupValueObj;\r\n        return inputGroupItem;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        this.testId = this.solutionService.getGuid();\r\n        this.getInputGroupBindingInfo();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.item = null;\r\n    }\r\n\r\n    getInputGroupBindingInfo() {\r\n        const inputGroupControl = (this.item.control as InputGroupControl);\r\n        this.usageMode = inputGroupControl.usageMode;\r\n        if(this.usageMode == 'open-modal'||this.usageMode == 'open-remote-modal') {\r\n            this.dialogOptions = inputGroupControl.dialogOptions;\r\n            /*\r\n                example of dialogOptions = {\r\n                   modalId: \"1e011720-eb0f-4c9c-82b6-6844c89b2303\"\r\n                   mapFields: {hDepartment: \"Name\"}\r\n                   title: \"æµè¯æ é¢æ \"\r\n                   width: 800\r\n                   height: 600\r\n                }\r\n             */\r\n            if(this.dialogOptions.mapFields){\r\n                this.textField = JSON.stringify(this.dialogOptions.mapFields).split('\"')[1];\r\n            }\r\n        }\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n    \r\n    onClick(event: any){\r\n        if(this.usageMode == 'text'){\r\n            this.item.control.click();\r\n        }\r\n        else{\r\n            const options = this.dialogOptions;\r\n            options.handle = (selectedItem) => {\r\n                if(selectedItem && this.textField){\r\n                    this.item.value.value = selectedItem;\r\n                    this.item.value.textValue = this.item.value.getTextValue(this.textField);\r\n                    this.item.value.textField = this.textField;\r\n                    this.item.value.isInputText = false;\r\n\r\n                    this.isTextFromDialog = true;\r\n                    this.textFormDialog = this.item.value.textValue;\r\n                    this.onBlur();\r\n                }\r\n            }\r\n            this.item.control.click({event, options});\r\n        }\r\n    }\r\n\r\n    onBlur(){\r\n        if(this.usageMode == 'text') {\r\n            this.item.value.isInputText = true;\r\n        }\r\n        if(this.usageMode == 'open-modal'||this.usageMode == 'open-remote-modal') {\r\n            if(!this.isTextFromDialog) {\r\n                //console.log('å¼¹çªæ¨¡å¼ä¸æ§ä»¶åææ¬æ¯æå¨è¾å¥ç');\r\n                this.item.value.isInputText = true;\r\n            }\r\n            if(this.item.value.textValue != this.textFormDialog){\r\n                //console.log('éè¿å¼¹çªéæ©çå¼å·²è¢«æå¨ä¿®æ¹');\r\n                this.isTextFromDialog = false;\r\n                this.item.value.value = [];\r\n                this.item.value.textField = undefined;\r\n                this.item.value.isInputText = true;\r\n            }\r\n        }\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    clearData() {\r\n        (this.item.value as InputGroupValue).clearValue();\r\n        this.conditionChange.emit();\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, Output, EventEmitter, Injector, ViewChild, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { QuickSelectOption, SmartHelpContol } from '../../entity/controltype/smarthelp/smarthelpcontrol';\r\nimport { IControl } from '../../entity/controltype/icontrol';\r\nimport { SmartHelpValue } from '../../entity/conditionvalue/smarthelpvalue';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { LookupGridComponent } from '@farris/ui-lookup';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-solution-smarthelp',\r\n    templateUrl: './smarthelp.component.html',\r\n})\r\n\r\nexport class SolutionSmartHelpComponent implements OnInit, OnChanges {\r\n\r\n    @Input() hideLabel:boolean = false\r\n\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item: any;\r\n\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Input() instanceId: string;\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    @Output('helpMapping') mappingEmitter = new EventEmitter();\r\n\r\n    @Output('clearFieldsChange') clearFieldsChange = new EventEmitter();\r\n\r\n    @ViewChild('lookup') lookup: LookupGridComponent;\r\n\r\n    uri: string;\r\n    textField: string;\r\n    mapFields: any;\r\n    idField: any;\r\n    valueField: any;\r\n    textValue: any;\r\n    displayType: any;\r\n    context: any;\r\n    preEventCmd: any;\r\n    postEventCmd: any;\r\n    loadTreeDataType: string;\r\n    enableFullTree: boolean;\r\n    singleSelect: boolean;\r\n    expandLevel: number;\r\n    enableCascade: boolean;\r\n    cascadeStatus: \"enable\" | \"up\" | \"down\" | \"disable\";\r\n    testId: string;\r\n    placeholder: string;\r\n    nosearch: boolean;\r\n    displayFields: string;\r\n    displayTextSeparator: string;\r\n    editable: boolean;\r\n    clearFields: string;\r\n    // æ é¢\r\n    dialogTitle: string;\r\n    // å®½åº¦\r\n    dialogWidth: number;\r\n    // é«åº¦\r\n    dialogHeight: number;\r\n    /** æ¯é¡µè®°å½æ° */\r\n    pageSize: number = 20;\r\n    /** å¯ç¨åé¡µè®°å½æ°åè¡¨ */\r\n    pageList: Array<number> = [10, 20, 30, 50, 100];\r\n    // å¿«æ·éæ©éç½®\r\n    quickSelect: QuickSelectOption;\r\n    // å¯ç¨å¤å­æ®µæ¥è¯¢\r\n    enableMultiFieldSearch: boolean = false;\r\n\r\n    constructor(private solutionService: SolutionService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.getSmartHelpBindingInfo();\r\n        //this.testId = this.solutionService.getGuid();\r\n        this.testId = this.instanceId;\r\n        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n\r\n        this.lookup.textChanged.subscribe((v) => {\r\n            this.textChangedHandler(v);\r\n        })\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.getSmartHelpBindingInfo();\r\n        if (changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if (isChange) {\r\n                this.textValue = (this.item.value as SmartHelpValue).textValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    //ITEMï¼\r\n    //control: SmartHelpContol {uri: \"WuLiao.wOrgId\", textField: \"name\", valueField: \"code\", mapFields: {}, idField: \"id\"}\r\n    // fieldCode: \"wOrgId\"\r\n    // fieldName: \"æå±æºæ\"\r\n    // id: \"WuLiao.wOrgId\"\r\n    // value: SmartHelpValue {valueField: null, value: null}\r\n    // valueType: 0\r\n    getSmartHelpBindingInfo() {\r\n        const smartHelpControl = (this.item.control as SmartHelpContol);\r\n        this.uri = smartHelpControl.uri;\r\n        this.textField = smartHelpControl.textField;\r\n        this.idField = smartHelpControl.idField;\r\n        this.valueField = smartHelpControl.valueField;\r\n        this.displayType = smartHelpControl.displayType;\r\n        this.mapFields = smartHelpControl.mapFields;\r\n        this.context = smartHelpControl.context;\r\n        this.preEventCmd = smartHelpControl.preEventCmd;\r\n        this.postEventCmd = smartHelpControl.postEventCmd;\r\n        this.enableFullTree = smartHelpControl.enableFullTree;\r\n        this.loadTreeDataType = smartHelpControl.loadTreeDataType;\r\n        this.singleSelect = smartHelpControl.singleSelect === false ? false : true;\r\n        this.expandLevel = smartHelpControl.expandLevel;\r\n        this.enableCascade = smartHelpControl.enableCascade;\r\n        this.cascadeStatus = smartHelpControl.cascadeStatus ? smartHelpControl.cascadeStatus : 'enable';\r\n        // æ é¢\r\n        this.dialogTitle = smartHelpControl.dialogTitle?smartHelpControl.dialogTitle:'';\r\n        // å®½åº¦\r\n        this.dialogWidth = smartHelpControl.panelWidth;\r\n        // é«åº¦\r\n        this.dialogHeight = smartHelpControl.panelHeight;\r\n        const smartHelpValue = (this.item.value as SmartHelpValue);\r\n        if (smartHelpValue.textValue == 'help-text-value-null') {//æ§æ°æ®å¼å®¹\r\n            this.textValue = smartHelpValue.getTextValue(this.textField);\r\n        } else {\r\n            this.textValue = smartHelpValue.textValue;\r\n        }\r\n        this.nosearch = smartHelpControl.nosearch;//é»è®¤false\r\n        this.displayFields = smartHelpControl.displayFields ? smartHelpControl.displayFields : '';\r\n        this.displayTextSeparator = smartHelpControl.displayTextSeparator ? smartHelpControl.displayTextSeparator : '_';\r\n        this.editable = smartHelpControl.editable;\r\n        this.clearFields = smartHelpControl.clearFields;\r\n        if (smartHelpControl.hasOwnProperty('pageSize') && smartHelpControl.pageSize) {\r\n            this.pageSize = smartHelpControl.pageSize\r\n        }\r\n        if (smartHelpControl.hasOwnProperty('pageList') && smartHelpControl.pageList) {\r\n            this.pageList = smartHelpControl.pageList.split(\",\").map(item => { return parseInt(item); })\r\n        }\r\n        if (smartHelpControl.hasOwnProperty('quickSelect') && smartHelpControl.quickSelect) {\r\n            this.quickSelect = smartHelpControl.quickSelect;\r\n        }\r\n        if (smartHelpControl.hasOwnProperty('enableMultiFieldSearch') && smartHelpControl.enableMultiFieldSearch) {\r\n            this.enableMultiFieldSearch = smartHelpControl.enableMultiFieldSearch;\r\n        }\r\n    }\r\n\r\n    onBeforeOpen = () => {\r\n        const t = this.item.value as SmartHelpValue;\r\n        if (t && t.value) {\r\n            const ids = t.value.map(n => n[this.idField || 'id']).join(',');\r\n            this.lookup.displayValue = ids;\r\n        }\r\n        this.clearFieldsChange.emit({\r\n            controlType: (this.item.control as SmartHelpContol).getControlType(),\r\n            canClearRelatedFields: true\r\n        });\r\n        return of(true);\r\n    }\r\n\r\n    clearData(data: any) {\r\n        (this.item.value as SmartHelpValue).clearValue();\r\n        if (this.item.control.clear) {\r\n            this.item.control.clear();\r\n        }\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    /**\r\n     * selectedItem\r\n     * code: \"code02\"\r\n        id: \"id02\"\r\n        name: \"æºæ02\"\r\n        version: \"2019-10-21T00:00:00\"\r\n    */\r\n    textChangedHandler(data: string) {//æå·¥è¾å¥æ¶è§¦å\r\n        if (this.item && this.item.value) {\r\n            const helpValue = (this.item.value as SmartHelpValue);\r\n            helpValue.value = [data];\r\n            helpValue.textValue = data;\r\n            helpValue.isInputText = true;\r\n            // this.textValue = helpValue.textValue;\r\n            this.conditionChange.emit();\r\n        }\r\n    }\r\n\r\n    selectedDataHandler(selectedItem: any) {//éæ©æ¶è§¦å\r\n        const helpValue = (this.item.value as SmartHelpValue);\r\n        helpValue.value = this.singleSelect ? [selectedItem] : selectedItem;//åéè¿åå¯¹è±¡ï¼å¤éè¿åæ°ç»\r\n        helpValue.valueField = this.valueField;\r\n        helpValue.textValue = this.textValue;\r\n        helpValue.isInputText = false;\r\n        this.conditionChange.emit();\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, EventEmitter, Output, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { DropDownListControl } from '../../entity/controltype/dropdownlist/dropdownlistcontrol';\r\nimport { EnumType } from '../../entity/controltype/dropdownlist/enumtype';\r\nimport { EnumIntegerValue } from '../../entity/controltype/dropdownlist/integerenumvalue';\r\nimport { EnumStringValue } from '../../entity/controltype/dropdownlist/stringenumvalue';\r\nimport { EnumBoolValue } from '../../entity/controltype/dropdownlist/boolenumvalue';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { IValue } from '../../entity/conditionvalue/ivalue';\r\nimport { DropDownListValue } from '../../entity/conditionvalue/dropdownlistvalue';\r\n\r\n@Component({\r\n    selector: 'app-solution-dropdownlist',\r\n    templateUrl: './dropdownlist.component.html',\r\n})\r\n\r\nexport class DropDownListComponent implements OnInit, OnChanges {\r\n\r\n    @Input() hideLabel:boolean = false\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item: any;\r\n\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    //ä¸æåè¡¨æ°æ®æº\r\n    dropDownListDataSource: Array<any> = new Array<any>();\r\n    //æå¡å¨ç«¯APIå°å\r\n    uri: string;\r\n    //é¢æ¿æ¾ç¤ºåäºä»¶\r\n    beforeShow: any;\r\n    //é¢æ¿éèåäºä»¶\r\n    beforeHide: any;\r\n    //æä¸¾å¼å­æ®µ\r\n    idField: string;\r\n    //æä¸¾åç§°å­æ®µ\r\n    textField: string;\r\n    //ä¸æåè¡¨æ§ä»¶åæ¾ç¤ºææ¬\r\n    selectedItemId: any = '';\r\n    //ç»ä»¶id\r\n    testId: string;\r\n    //æ§ç»æä¸­placeholderå±æ§å¨item.controlå\r\n    placeholder: string;\r\n    //æ¯å¦åè®¸ç¼è¾ï¼å½éè¿æå¡å¨ç«¯apiåæ°æ¶ä¸ºtrue\r\n    editable: boolean = false;\r\n\r\n    constructor(private solutionService: SolutionService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.getDataSource();\r\n        const initialValue = this.item.value as DropDownListValue;\r\n        initialValue.key && (this.selectedItemId = initialValue.key);\r\n        this.testId = this.solutionService.getGuid();\r\n        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n        this.beforeShow = (this.item.control as DropDownListControl).beforeShow;\r\n        this.beforeHide = (this.item.control as DropDownListControl).beforeHide;\r\n        this.idField = (this.item.control as DropDownListControl).idField ? (this.item.control as DropDownListControl).idField : 'value';\r\n        this.textField = (this.item.control as DropDownListControl).textField ? (this.item.control as DropDownListControl).textField : 'name';\r\n        if(this.uri) {\r\n            this.selectedItemId = (initialValue.value || []).map(n => n[this.textField]).join(',');\r\n            this.editable = true;\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.getDataSource();\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.selectedItemId = (this.item.value as DropDownListValue).key;\r\n            }\r\n        }\r\n    }\r\n\r\n    getDataSource() {\r\n        this.dropDownListDataSource = (this.item.control as DropDownListControl).enumValues;\r\n        this.uri = (this.item.control as DropDownListControl).uri;\r\n    }\r\n\r\n    selectChange(selected: any) {\r\n        const selectedValue = selected['selections'].map((selection: any) => {\r\n            return {\r\n                value: this.uri ? selection[this.textField] : selection[this.idField],\r\n                name: selection[this.textField]\r\n            }\r\n        });\r\n        this.item.value = new DropDownListValue({\r\n            value : selectedValue,\r\n            key :  selected['value']\r\n        });\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    onClear(event: any) {\r\n        this.item.value = new DropDownListValue();\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Component, Input, OnInit, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { SingleNumberValue } from '../../entity/conditionvalue/single-number-value';\r\n\r\n@Component({\r\n    selector: 'app-solution-single-number',\r\n    templateUrl: './single-number.component.html',\r\n})\r\n\r\nexport class SingleNumberComponent implements OnInit, OnChanges {\r\n\r\n    @Input() hideLabel:boolean = false\r\n\r\n\r\n    number: number;\r\n    placeholder: string;\r\n    precision: number;\r\n    textAlign: string;\r\n    @Input() item: any;\r\n    testId: string;\r\n    canNull: boolean;\r\n    bigNumber: boolean;\r\n    min: number;\r\n    max: number;\r\n\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.number = this.item.value.getOriginalValue();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.number = this.item.value.getOriginalValue();\r\n        this.testId = this.solutionService.getGuid();\r\n        this.canNull = true;\r\n        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n        this.precision = this.item.control.precision;\r\n        this.textAlign = this.item.control.textAlign;\r\n        this.bigNumber = this.item.control.bigNumber ? this.item.control.bigNumber : false;\r\n        if(!this.bigNumber){\r\n            this.min = (this.item.control.min === undefined || this.item.control.min === null) ? -2147483648 : (this.item.control.min);\r\n            this.max = (this.item.control.max === undefined || this.item.control.max === null) ? 2147483647 : (this.item.control.max);\r\n        }\r\n    }\r\n\r\n    valueChange(data: any){\r\n        const numberValue = new SingleNumberValue();\r\n        isNaN(parseFloat(data)) ? numberValue.numValue = null : numberValue.numValue = data;\r\n        this.item.value = numberValue;\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Component, OnInit, Output, EventEmitter, ViewChild, TemplateRef, HostBinding, ViewEncapsulation, ElementRef, Input, SkipSelf, OnChanges, SimpleChanges, ContentChild, AfterContentInit, AfterViewInit } from '@angular/core';\r\nimport { SolutionService } from '../service/solution.service';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { QueryCondition } from '../entity/querycondition';\r\nimport { MultiSelectComponent } from '@farris/ui-multi-select';\r\nimport { NotifyService } from '@farris/ui-notify';\r\n@Component({\r\n    selector: 'app-queryconfigdialog',\r\n    templateUrl: './configdialog.component.html',\r\n    styleUrls: ['./configdialog.component.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ConfigDialogComponent implements OnInit, OnChanges, AfterViewInit {\r\n    @Input() inputSelectedFileds: Array<QueryCondition> = [];\r\n    @Input() filedsDataSource: Array<QueryCondition>;\r\n    @Output() cancelEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() confirmEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n    @ViewChild('dialog') dialog: DialogComponent;\r\n    @ViewChild('searchMulti') multiSelectCmp: MultiSelectComponent;\r\n\r\n    selectedIds: Array<string> = [];\r\n    title: string;\r\n    visibleFields: Array<QueryCondition>;\r\n    visibleSelectedFields: Array<QueryCondition>;\r\n    constructor(private solutionService: SolutionService, private localeService: LocaleService, private notify: NotifyService) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if(changes.filedsDataSource && changes.filedsDataSource.currentValue) {\r\n            this.visibleFields = this.filedsDataSource.filter(item => {return !!item.visible});\r\n        }\r\n\r\n        if (changes.inputSelectedFileds && changes.inputSelectedFileds.currentValue) {\r\n            this.visibleSelectedFields = this.inputSelectedFileds.filter(item => {return !!item.visible});\r\n            if(this.visibleSelectedFields.length) {\r\n                this.selectedIds = this.visibleSelectedFields.map(qc => qc.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.title = this.localeService.getValue('queryCondition.container.config');\r\n        if(this.filedsDataSource) {\r\n            this.visibleFields = this.filedsDataSource.filter(item => {return !!item.visible});\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        if(this.multiSelectCmp.enableMoveMore !== undefined) {\r\n            this.multiSelectCmp.enableMoveMore = true\r\n        }\r\n    }\r\n    /**\r\n     * åæ¶\r\n     */\r\n    cancel() {\r\n        this.selectedIds = this.visibleSelectedFields.map(qc => qc.id);\r\n        //undo: ç©¿æ¢­æ¡ç»ä»¶çselectedIdå¼ä¸ºç©ºæ°ç»æ¶å­å¨é®é¢ï¼éè¿ç»å»ºçmoveAllToLeftä¿è¯è¯¥åè½\r\n        if(!this.selectedIds.length) {\r\n            this.multiSelectCmp.moveAllToLeft()\r\n        }\r\n        this.cancelEmitter.emit(true);        \r\n        this.multiSelectCmp.searchValue = '';\r\n        this.dialog.close();\r\n    }\r\n\r\n    /**\r\n     * ç¡®è®¤\r\n     */\r\n    confirm() {\r\n\r\n        //å¿å¡«å­æ®µå¿ééæ©ï¼å¦åç»ä¸æç¤º\r\n        let requiredAndUncheck  = this.visibleFields.filter(val => val.control && val.control.isRequired()).filter(item => !this.selectedIds.includes(item.id))\r\n        if(requiredAndUncheck && requiredAndUncheck.length) {\r\n            let msg = requiredAndUncheck.map(val => val.fieldName).join('ã') + 'ä¸ºå¿éå­æ®µï¼è¯·å¾éååè¿è¡ä¿å­æä½ã'\r\n            this.notify.error(msg)\r\n            return \r\n        }\r\n        \r\n        const selectedFields = [];\r\n        let _fieldData: QueryCondition;\r\n        this.selectedIds.forEach(id => {\r\n            const index = this.visibleSelectedFields.findIndex(field => field.id == id);\r\n            if (index > -1) {\r\n                selectedFields.push(this.visibleSelectedFields[index].fieldCode);\r\n            } else {\r\n                _fieldData = this.visibleFields.find(field => field.id == id);\r\n                _fieldData.value.clearValue();\r\n                selectedFields.push(_fieldData.fieldCode);\r\n            }\r\n        });\r\n        this.confirmEmitter.emit(selectedFields);\r\n        this.multiSelectCmp.searchValue = '';\r\n        this.dialog.close();\r\n    }\r\n\r\n    /**\r\n     * éç½®\r\n     */\r\n    reset() {\r\n\r\n    }\r\n}\r\n","import { Component, Input, OnInit, Injector, OnChanges, SimpleChanges, EventEmitter, Output} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { CheckBoxValue } from '../../entity/conditionvalue/checkbox-value';\r\nimport { CheckBoxControl } from '../../entity/controltype/checkbox/checkbox-control';\r\n\r\n\r\n@Component({\r\n    selector: 'app-solution-checkbox',\r\n    templateUrl: './checkbox.component.html',\r\n})\r\n\r\nexport class CheckBoxComponent implements OnInit, OnChanges {\r\n   \r\n\r\n    @Input() hideLabel:boolean = false\r\n    _item: QueryCondition;\r\n    checkValue: any[];\r\n    controlData: CheckBoxControl;\r\n    @Input() \r\n    set item(nr: QueryCondition){\r\n        this._item = nr;\r\n    }\r\n\r\n    get item(){\r\n        return this._item;\r\n    }\r\n    testId:string;\r\n\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    solutionService: SolutionService;\r\n\r\n    constructor(private injector: Injector){\r\n        this.solutionService = this.injector.get(SolutionService);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.checkValue = (this.item.value as CheckBoxValue).getOriginalValue();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.checkValue = this.item.value.getOriginalValue();\r\n        this.controlData = this.item.control as CheckBoxControl;\r\n        this.testId = this.solutionService.getGuid();\r\n    }\r\n\r\n    valueChanged(event: any[]){\r\n        //éä¸­æ¶è¿å[true], ä»éä¸­åä¸ºæªéä¸­æ¶è¿å[]\r\n        if(event.length){\r\n            this._item.value.setOriginalValue(event);\r\n        }else{\r\n            this._item.value.setOriginalValue([false]);\r\n        }\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, Injector, EventEmitter, Output, HostBinding, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { RadioControl } from '../../entity/controltype/radio/radio-control';\r\nimport { RadioValue } from '../../entity/conditionvalue/radio-value';\r\n\r\n@Component({\r\n    selector: 'app-solution-radio',\r\n    templateUrl: './radio.component.html',\r\n})\r\n\r\nexport class RadioComponent implements OnInit, OnChanges {\r\n\r\n    @Input() hideLabel:boolean = false\r\n\r\n\r\n    _item: QueryCondition;\r\n    solutionService: SolutionService;\r\n    radioControl: RadioControl;\r\n    radioValue: any;\r\n    testId: string;\r\n    showLabel: boolean;\r\n\r\n    @Input()\r\n    set item(nr: QueryCondition){\r\n        this._item = nr;\r\n    }\r\n    get item(){\r\n        return this._item;\r\n    }\r\n    \r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    @HostBinding('class.f-solution-radio-group-wrapper') cls = true;\r\n\r\n    constructor(private injector: Injector) {\r\n       this.solutionService = this.injector.get(SolutionService);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.radioValue = (this.item.value as RadioValue).getOriginalValue();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n       this.radioControl = this.item.control as RadioControl;\r\n       this.radioValue = (this.item.value as RadioValue).getOriginalValue();\r\n       this.testId = this.solutionService.getGuid();\r\n       this.showLabel = this.radioControl.showLabel;\r\n    }\r\n\r\n    valueChanged(event: any){\r\n        this._item.value.setOriginalValue(event);\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, Injector, EventEmitter, Output, SimpleChanges, OnDestroy } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { ShowType } from '@farris/ui-datepicker';\r\nimport { Observable, of, Subject, Subscription } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { QueryConditionComponent } from '../../querycondition.component';\r\nimport { DateChangedResult } from './datepicker-options';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n@Component({\r\n  selector: 'app-solution-datepicker',\r\n  templateUrl: './datepicker.component.html',\r\n})\r\nexport class DatePickerComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  @Input() hideLabel:boolean = false\r\n  // è¿æ»¤æ¡ä»¶\r\n  @Input() item: any;\r\n  // \r\n  @Input() controlType: number;\r\n\r\n  /**\r\n   * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n   */\r\n  @Input() changeFields: Array<string> = [];\r\n\r\n  @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n  solutionService: SolutionService;\r\n  messageService: MessagerService;\r\n  dateRange: boolean; // trueåºé´ falseå\r\n  showTime: boolean; // trueæ¾ç¤ºæ¶é´ falseä¸æ¾ç¤º\r\n  showType: number = ShowType.all; // æ¾ç¤ºç±»åï¼é»è®¤æ¾ç¤ºå¨é¨1ï¼ä¸æ¾ç¤ºæ¥æï¼ç¨äºéæ©å¹´ææ¨¡å¼2ï¼ä¸æ¾ç¤ºæ¥æåæä»½ï¼ç¨äºéæ©å¹´æ¨¡å¼3ï¼ç¨äºå¨éæ©4ã\r\n  maxDate: string | Date | null = '';\r\n  minDate: string | Date | null = '';\r\n  disableDates: { year: number, month: number, day: number }[];\r\n  placeholder: string;\r\n  dateFormat: string; // æ¾ç¤ºå¼æ¥ææ ¼å¼å\r\n  returnFormat: string; // è¿åå¼æ¥ææ ¼å¼å\r\n  returnType: string; // è¿åå¼ç±»åï¼è¿åå¼ç±»åé»è®¤æåµä¸æ¯åè¾å¥å¼ç±»åç¸åï¼ä½æ¯å¦æè¾å¥å¼ä¸ºnullç­éæ³å¼ï¼é»è®¤ä¸ºStringï¼å¦ææ³æ¹ä¸ºDateï¼å®ä¹è¯¥å­æ®µã\r\n  disabled: boolean;\r\n  readonly: boolean;\r\n  editable: boolean = false;\r\n  dateRangeDatesDelimiter: string = '~';\r\n  bindValue: string;\r\n  beginValue: any;\r\n  endValue: any;\r\n  testId: string;\r\n  beginPlaceHolder:string;\r\n  endPlaceHolder:string;\r\n  destroy$: Subject<any>;\r\n  dateChangedCmd: (date: any) => Observable<DateChangedResult>;\r\n  dateChangedCmdSubscription: Subscription;\r\n  enableDynamic: boolean = false; //æ¯å¦æ¯æå¨ææ¥æï¼ä»ésingleDateæåµ\r\n  //åºé´ç±»åæ¶æ¯å¦æ¯æéæ©åä¸åºé´\r\n  enableSplit: boolean = false;\r\n  constructor(private injector: Injector) {\r\n    this.solutionService = this.injector.get(SolutionService);\r\n    this.messageService = this.injector.get(MessagerService);\r\n    const queryconditionComponent = this.injector.get(QueryConditionComponent, null);\r\n    if(queryconditionComponent) {\r\n      this.destroy$ = queryconditionComponent.destroy$;\r\n    } else {\r\n      this.destroy$ = new Subject<any>();\r\n    }\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n      const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n      if (isChange) {\r\n        if (this.dateRange) {\r\n          this.beginValue = this.item.value && this.item.value.startTime ? this.item.value.startTime.toString().trim() : '';\r\n          this.endValue = this.item.value && this.item.value.endTime ? this.item.value.endTime.toString().trim() : '';\r\n          this.bindValue = this.item.value.getOriginalValue();\r\n        } else {\r\n          this.bindValue = this.item.value.getOriginalValue();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.testId = this.solutionService.getGuid();\r\n    // const controlType = this.item.control.getControlType();\r\n    switch (this.controlType) {\r\n      case ControlType.DateRange:\r\n        this.returnFormat = this.item.control.returnFormat ? this.item.control.returnFormat : 'yyyy-MM-dd';\r\n        this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd';\r\n        this.dateRange = true;\r\n        break;\r\n      case ControlType.SingleDate:\r\n        this.returnFormat = this.item.control.returnFormat ? this.item.control.returnFormat : 'yyyy-MM-dd';\r\n        this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd';\r\n        this.dateRange = false;\r\n        this.enableDynamic = this.item.control.isDynamicDate ? this.item.control.isDynamicDate : false;\r\n        break;\r\n      case ControlType.SingleYear:\r\n        this.returnFormat = this.item.control.returnFormat ? this.item.control.returnFormat : 'yyyy';\r\n        this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy';\r\n        this.showType = ShowType.noDateAndMonth;\r\n        this.dateRange = false;\r\n        break;\r\n      case ControlType.DateTimeRange:\r\n        this.returnFormat = this.item.control.returnFormat ? this.item.control.returnFormat : 'yyyy-MM-dd HH:mm:ss';\r\n        if(this.item.control.enableCustomFormat){\r\n          // ä½¿ç¨èªå®ä¹æ ¼å¼\r\n          this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd HH:mm:ss';\r\n        }else{\r\n           // æªå¯ç¨èªå®ä¹æ ¼å¼\r\n           this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd';\r\n           this.dateFormat = this.dateFormat + ' HH:mm:ss';\r\n        }\r\n        this.showTime = true;\r\n        this.dateRange = true;\r\n        break;\r\n      case ControlType.SingleMonth:\r\n        this.returnFormat = this.item.control.returnFormat ? this.item.control.returnFormat : 'yyyy-MM';\r\n        this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM';\r\n        this.showType = ShowType.noDate;\r\n        this.dateRange = false;\r\n        break;\r\n      case ControlType.MonthRange:\r\n        this.returnFormat = this.item.control.returnFormat ? this.item.control.returnFormat : 'yyyy-MM';\r\n        this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM';\r\n        this.showType = ShowType.noDate;\r\n        this.dateRange = true;\r\n        break;\r\n      case ControlType.SingleDateTime:\r\n        this.returnFormat = this.item.control.returnFormat ? this.item.control.returnFormat : 'yyyy-MM-dd HH:mm:ss';\r\n        if(this.item.control.enableCustomFormat){\r\n          // ä½¿ç¨èªå®ä¹æ ¼å¼\r\n          this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd HH:mm:ss';\r\n        }else{\r\n           // æªå¯ç¨èªå®ä¹æ ¼å¼\r\n           this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd';\r\n           this.dateFormat = this.dateFormat + ' HH:mm:ss';\r\n        }\r\n        this.showTime = true;\r\n        this.dateRange = false;\r\n        break;\r\n    }\r\n    this.enableSplit = this.item.control.enableSplit || false\r\n    // æ´æ°æ¡ä»¶\r\n    this.updateParamsByCondition();\r\n    this.placeholder = this.item.placeHolder ? this.item.placeHolder : this.item.control.placeholder;\r\n    if (this.dateRange) {\r\n      this.beginValue = this.item.value && this.item.value.startTime ? this.item.value.startTime.toString().trim() : '';\r\n      this.endValue = this.item.value && this.item.value.endTime ? this.item.value.endTime.toString().trim() : '';\r\n      this.beginPlaceHolder = this.item.beginPlaceHolder ? this.item.beginPlaceHolder : this.placeholder;\r\n      this.endPlaceHolder = this.item.endPlaceHolder ? this.item.endPlaceHolder : this.placeholder;\r\n      this.bindValue = this.item.value.getOriginalValue();\r\n    } else {\r\n      this.bindValue = this.item.value.getOriginalValue();\r\n    }\r\n    \r\n    if (this.item.control.weekSelect && this.controlType == ControlType.DateRange) {\r\n      this.showType = ShowType.selectWeek;\r\n    }\r\n\r\n    this.dateChangedCmd = this.item.control.dateChangedCmd;\r\n    if(!this.dateChangedCmd) {\r\n      this.dateChangedCmd = () => of({ closeDateSelect: true });\r\n    }\r\n\r\n    // \r\n    this.solutionService.getControlConfigState().pipe(takeUntil(this.destroy$)).subscribe((simpleConditions) => {\r\n      //ç®åæ¡ä»¶\r\n      let findSimpleCondition = simpleConditions.find(item => item['fieldCode'] == this.item['fieldCode']);\r\n      if (findSimpleCondition) {\r\n        this.updateParamsByCondition(findSimpleCondition);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if(this.dateChangedCmdSubscription) {\r\n      this.dateChangedCmdSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private updateParamsByCondition(condition = null) {\r\n    let conditionControl = null;\r\n    conditionControl = condition ? condition.control : this.item.control;\r\n    switch (this.controlType) {\r\n      case ControlType.SingleYear:\r\n        this.maxDate = conditionControl.hasOwnProperty('maxDate') ? conditionControl['maxDate'] : this.maxDate;\r\n        this.minDate = conditionControl.hasOwnProperty('minDate') ? conditionControl['minDate'] : this.minDate;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  onDateChange(event: any) {\r\n    if(event.returnFormatted === this.item.value.getOriginalValue()) {\r\n      return\r\n    }\r\n    this.item.value.setOriginalValue({\r\n      formatted: event.returnFormatted,\r\n      delimiter: this.dateRangeDatesDelimiter\r\n    });\r\n    //this.conditionChange.emit();\r\n    this.runDateChangedEvent(this.item.value.getOriginalValue());\r\n  }\r\n\r\n  onSpiltDateChange(event: any, type:'start'|'end') {\r\n    let originValue = this.item.value.getOriginalValue()\r\n    let _start = '', _end = '', _formatted = ''\r\n    if(originValue) {\r\n      let _value = originValue.split(this.dateRangeDatesDelimiter)\r\n      _value[0] && (_start = _value[0])\r\n      _value[1] && (_end = _value[1])\r\n    }\r\n    if(type === 'start') {\r\n\r\n      _formatted =  event.returnFormatted + this.dateRangeDatesDelimiter + _end\r\n    } else {\r\n      _formatted = _start + this.dateRangeDatesDelimiter + event.returnFormatted\r\n    }\r\n    if(event.returnFormatted === this.item.value.getOriginalValue()) {\r\n      return\r\n    }\r\n    this.item.value.setOriginalValue({\r\n      formatted: _formatted,\r\n      delimiter: this.dateRangeDatesDelimiter,\r\n    });\r\n    //this.conditionChange.emit();\r\n    this.runDateChangedEvent(this.item.value.getOriginalValue());\r\n  }\r\n  onDynamicValueChange(event: any) {\r\n    this.item.value.setOriginalValue({\r\n      formatted: event\r\n    });\r\n    this.runDateChangedEvent(this.item.value.getOriginalValue());\r\n  }\r\n\r\n  onDynamicViewChanged(event) {\r\n\r\n    this.item.value.setOriginalValue(event.showDynamicView ? {\r\n      formatted: event.dynamicValue\r\n    } : {\r\n      formatted: event.singleValue,\r\n      delimiter: this.dateRangeDatesDelimiter\r\n    });\r\n    this.runDateChangedEvent(this.item.value.getOriginalValue());\r\n   \r\n  }\r\n\r\n  getConditionItemTitle(field: QueryCondition) {\r\n    return this.solutionService.getConditionItemTitle(field);\r\n  }\r\n\r\n  beginValueChange($event) {\r\n   // this.beginValue = $event;\r\n  }\r\n\r\n  endValueChange($event) {\r\n   // this.endValue = $event;\r\n  }\r\n\r\n  runDateChangedEvent(date: any) {\r\n    if(this.dateChangedCmd) {\r\n      this.dateChangedCmdSubscription = this.dateChangedCmd(date).subscribe((v: any) => {\r\n        if(typeof v === \"boolean\") {\r\n          if(v) {\r\n            this.conditionChange.emit();\r\n          }\r\n        } else if(typeof v === \"object\" && v.closeDateSelect !== undefined && !v.closeDateSelect) {\r\n          if(v.message) {\r\n            this.messageService.warning(v.message);\r\n          } else {\r\n            this.conditionChange.emit();\r\n          }\r\n        } else {\r\n          this.conditionChange.emit();\r\n        }\r\n      });\r\n    } else {\r\n      this.conditionChange.emit();\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, Output, EventEmitter, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ComboLookUpControl } from '../../entity/controltype/combolookup/combolookup-control';\r\nimport { ComboLookUpValue } from '../../entity/conditionvalue/combolookup-value';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-solution-combolookup',\r\n    templateUrl: './combolookup.component.html',\r\n})\r\n\r\nexport class ComboLookUpComponent implements OnInit,OnChanges{\r\n   \r\n\r\n    @Input() hideLabel:boolean = false\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    uri: string;\r\n    idField: any;\r\n    valueField: any;\r\n    textField: string;\r\n    textValue: any;\r\n    mapFields: any;\r\n    displayType: any;\r\n    multiSelect: boolean;\r\n    preEventCmd: any;\r\n    postEventCmd: any;\r\n    enableFullTree: boolean;\r\n    testId: string;\r\n    placeholder: string;\r\n    autoWidth: boolean;\r\n    panelWidth: number;\r\n    panelHeight: number;\r\n    selectedValues = \"\";\r\n    loadTreeDataType: string;\r\n    context: any;\r\n\r\n    constructor(private solutionService: SolutionService){ }\r\n\r\n    ngOnInit(): void {\r\n        this.getComboLookUpBindingInfo();\r\n        this.testId = this.solutionService.getGuid();\r\n        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n        this.autoWidth = false;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.getComboLookUpBindingInfo();\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.textValue = (this.item.value as ComboLookUpValue).textValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    valueChangeHandler(data: any){\r\n        const helpValue = (this.item.value as ComboLookUpValue);\r\n        helpValue.value = data.selections;\r\n        helpValue.valueField = this.valueField;\r\n        helpValue.textValue = helpValue.getTextValue(this.textField);\r\n        this.textValue = helpValue.textValue;\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    getComboLookUpBindingInfo(){\r\n        const comboLookUpControl = (this.item.control as ComboLookUpControl);\r\n        this.uri = comboLookUpControl.uri;\r\n        this.idField = comboLookUpControl.idField;\r\n        this.valueField = comboLookUpControl.valueField;\r\n        this.textField = comboLookUpControl.textField;\r\n        this.mapFields = comboLookUpControl.mapFields;\r\n        this.displayType = comboLookUpControl.displayType;\r\n        this.preEventCmd = comboLookUpControl.preEventCmd;\r\n        this.postEventCmd = comboLookUpControl.postEventCmd;\r\n        this.enableFullTree = comboLookUpControl.enableFullTree;\r\n        this.multiSelect = comboLookUpControl.singleSelect === true ? false : true;\r\n        this.panelWidth = comboLookUpControl.panelWidth ? comboLookUpControl.panelWidth : 300;\r\n        this.panelHeight = comboLookUpControl.panelHeight ? comboLookUpControl.panelHeight : 300;\r\n        this.loadTreeDataType = comboLookUpControl.loadTreeDataType;\r\n        this.context = comboLookUpControl.context;\r\n        const comboLookUpValue = (this.item.value as ComboLookUpValue);\r\n        if(comboLookUpValue.textValue == 'help-text-value-null'){//æ§æ°æ®å¼å®¹\r\n            this.textValue = comboLookUpValue.getTextValue(this.textField);\r\n        }else{\r\n            this.textValue = comboLookUpValue.textValue;\r\n        }\r\n\r\n        if (comboLookUpValue && comboLookUpValue.value) {\r\n            this.selectedValues = (comboLookUpValue.value || []).map(n => n[this.idField]).join(',');\r\n        }\r\n    }\r\n\r\n    clearData(data: any){\r\n        (this.item.value as ComboLookUpValue).clearValue();\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Directive, Input, OnInit, Optional, Self, Injector } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { QueryConditionComponent } from '../querycondition.component';\r\n\r\n@Directive({\r\n    selector: '[clear-fields]'\r\n})\r\nexport class ClearFieldsDirective implements OnInit { \r\n    @Input('clear-fields') clearFields = '';\r\n   \r\n    constructor(@Optional() @Self() private ngCtrl: NgControl, @Optional() private qcc: QueryConditionComponent, private inject: Injector) {} \r\n\r\n    ngOnInit() {\r\n        //å¼¹åºå¸®å©ç»ä»¶æå®è°ç¨äºç¶éä»¶QueryConditionComponentï¼åç¬ä½¿ç¨æ¶æ ç¶ç»ä»¶\r\n        if(!this.qcc) return\r\n        if(this.clearFields && this.ngCtrl) {\r\n            this.ngCtrl.valueChanges.subscribe( (v) => {\r\n                if(this.qcc.canClearRelatedFields) {\r\n                    this.qcc.fieldCodeOfClearFields = [];\r\n                    this.clearFields.split(',').forEach(n => {\r\n                        const visibleConditions = this.qcc.selectedFieldConditions.filter(condition => {return !!condition.visible});  \r\n                        const conditionItem = visibleConditions.find(c => c.fieldCode === n);\r\n                        if (conditionItem) {\r\n                            this.qcc.fieldCodeOfClearFields.push(n);\r\n                            conditionItem.value.clearValue();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","import { Directive, Input, OnInit, Injector, ElementRef, NgZone } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[label-text-multi]'\r\n})\r\nexport class LabelTextMultiDirective implements OnInit {\r\n    private multiCls = 'farris-group-multi-label';\r\n    private _enableMulti = false;\r\n    @Input('label-text-multi')\r\n    set enableMulti(value: boolean) {\r\n        this._enableMulti = value;\r\n        this.judgeMulti();\r\n    }\r\n    get enableMulti() {\r\n        return this._enableMulti\r\n    }\r\n    // è·ångZone\r\n    private ngZone = null;\r\n    constructor(private el: ElementRef, private injector: Injector) {\r\n        if (!this.ngZone) {\r\n            this.ngZone = this.injector.get<NgZone>(NgZone, null);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n    judgeMulti() {\r\n        if (this._enableMulti) {\r\n            this.ngZone.runOutsideAngular(() => {\r\n\r\n                setTimeout(() => {\r\n                    let textEl = this.el.nativeElement.querySelector('.farris-label-text');\r\n                    if (!textEl) {\r\n                        return;\r\n                    }\r\n                    // è¶åº\r\n                    if (textEl.clientWidth < textEl.scrollWidth) {\r\n                        this.el.nativeElement.className = this.el.nativeElement.className + ' ' + this.multiCls;\r\n                    } else {\r\n                        this.el.nativeElement.className = this.el.nativeElement.className.replace(this.multiCls, '');\r\n                    }\r\n                }, 20);\r\n            });\r\n\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/QueryCondition'\r\nimport { Subject } from 'rxjs';\r\nimport { QueryconditionAdvancedData } from '../type/type'\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n@Injectable()\r\nexport class StateService {\r\n\r\n  fieldConfig: Array<QueryCondition> = []\r\n  fieldConfig$ = new Subject()\r\n\r\n  queryconditionData: QueryconditionAdvancedData\r\n  queryconditionData$ = new Subject()\r\n\r\n  //ç¶ç»ä»¶çselectedFieldConditionsï¼ä¾æ¥è¯¢ä½¿ç¨\r\n  queryconditionListData: Array<QueryCondition>\r\n  queryconditionListData$ = new Subject()\r\n\r\n\r\n  checkedList = {}\r\n  checkedList$ = new Subject()\r\n  constructor(private notifySer: NotifyService, private localeService: LocaleService) {\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * éç½®ç­éæ¡ä»¶\r\n   */\r\n  reset() {\r\n    this.queryconditionData = { relation: 1, items: [], children: [], path: [1], groupid: 1 }\r\n    this.queryconditionData$.next(this.queryconditionData)\r\n    this.updateQueryConditionListData()\r\n\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param data \r\n   * @param type \r\n   * @param isEmit é»è®¤è¦åéemitï¼çæåç»è§¦åæ¶ä¸éè¦emitï¼å ä¸ºçæåç»æ¹æ³æ¬èº«ä¼è§¦å\r\n   */\r\n  changeQueryconditionData(data, type, isEmit = true) {\r\n    const { item, path, addPositionItem, deleteItems } = data\r\n    let target = this.queryconditionData\r\n    path.forEach(pathVal => {\r\n      //groupid = 1çæ¶åæªæå¤å±\r\n      if (pathVal !== 1) {\r\n        target = target.children.find(targetVal => targetVal.groupid === pathVal)\r\n      }\r\n\r\n    })\r\n    switch (type) {\r\n      case 'add':\r\n        item.conditionid = this.getMaxConditionid() + 1\r\n        item.compareType = 0\r\n\r\n        if (addPositionItem) {\r\n          let position = target.items.findIndex(val => val.conditionid === addPositionItem.conditionid)\r\n          position > -1 ? target.items.splice(position, 0, item) : target.items.push(item)\r\n        } else {\r\n          target.items.push(item)\r\n        }\r\n        this.clearCheckedList()\r\n\r\n        break;\r\n      case 'delete-item':\r\n        //å é¤åä¸ªæ¡ä»¶ï¼æ­£å¸¸å é¤æ¶ä½¿ç¨\r\n        if (deleteItems) {\r\n          deleteItems.forEach(val => {\r\n            let deleteIndex = target.items.findIndex(itemsVal => itemsVal.conditionid === val.conditionid)\r\n            target.items.splice(deleteIndex, 1)\r\n          })\r\n        }\r\n        this.clearCheckedList()\r\n        //å é¤æ¶ä¼åä¸ç»æ\r\n        this.treeshake(this.queryconditionData)\r\n\r\n        break;\r\n      case 'delete-items':\r\n        //å é¤å¤ä¸ªæ¡ä»¶ï¼çäº§åç»æ¶ä½¿ç¨\r\n        if (deleteItems) {\r\n          deleteItems.forEach(val => {\r\n            let deleteIndex = target.items.findIndex(itemsVal => itemsVal.conditionid === val.conditionid)\r\n            target.items.splice(deleteIndex, 1)\r\n          })\r\n        }\r\n        this.clearCheckedList()\r\n\r\n        break;\r\n      case 'modify':\r\n\r\n        let modifyIndex = target.items.findIndex(itemsVal => itemsVal.conditionid === item.conditionid)\r\n        target.items[modifyIndex] = item\r\n        break;\r\n\r\n    }\r\n\r\n    if (isEmit) {\r\n      this.queryconditionData$.next(this.queryconditionData)\r\n      this.updateQueryConditionListData()\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * ä¿®æ¹åç»æ°æ®\r\n   * @param data groupæ°æ®\r\n   * @param type ä¿®æ¹ç±»å\r\n   */\r\n  changeGroupData(data, type) {\r\n    const { item, path, relation } = data\r\n    let target = this.queryconditionData\r\n    path.forEach(pathVal => {\r\n      //groupid = 1çæ¶åæªæå¤å±\r\n      if (pathVal !== 1) {\r\n        target = target.children.find(targetVal => targetVal.groupid === pathVal)\r\n      }\r\n\r\n\r\n    })\r\n    switch (type) {\r\n      case 'modify-relation':\r\n        target.relation = relation;\r\n        break;\r\n    }\r\n    this.queryconditionData$.next(this.queryconditionData)\r\n    this.updateQueryConditionListData()\r\n\r\n  }\r\n\r\n  /**\r\n   * çææ°çåç»\r\n   * @desc \r\n   *\r\n   */\r\n  addGroup() {\r\n    let groups = Object.keys(this.checkedList).filter(val => this.checkedList[val].length)\r\n    // æªéæ©ç­éæ¡ä»¶æ¶åçç¹å»æç¤º\r\n    if (!groups.length) {\r\n      //éè¦å¾é\r\n      this.notifySer.warning(this.localeService.getValue('advancedMode.info.noConditionInfo'))\r\n\r\n    } else if (groups.length === 1) {\r\n      //ææéæ©é¡¹å½å±äºåä¸ä¸ªgroupçitemsæ¶\r\n      let targetPath: Array<number> = groups[0].split('-').map(val => Number(val))\r\n      let target = this.queryconditionData\r\n      targetPath.forEach(pathVal => {\r\n        //groupid = 1çæ¶åæªæå¤å±\r\n        if (pathVal !== 1) {\r\n          target = target.children.find(targetVal => targetVal.groupid === pathVal)\r\n        }\r\n\r\n      })\r\n      let flatItems = this.getFlatConditions(target)\r\n      let modifyItems = flatItems.filter(val => this.checkedList[groups[0]].includes(val.conditionid))\r\n      //ç¹å«çï¼å¦æå°groupä¸çchildren.lengthä¸º0ï¼å¹¶ä¸modifyItemsçèå´ä¸ºå¨é¨çitemsï¼åæç¤º\r\n      if (!target.children.length && modifyItems.length === target.items.length) {\r\n        //å·²ç»å­å¨è¯¥åç»äº\r\n        this.notifySer.warning(this.localeService.getValue('advancedMode.info.existGroupInfo'))\r\n        return\r\n      }\r\n      this.generateGroup(target, modifyItems, [])\r\n\r\n    } else {\r\n      //å¦ægroupå­å¨å¤ä¸ªç»ï¼é¦åæ¾å°æ¶åæ°æ®çæå¤å±ç»ï¼é»è®¤æ¯groupä¸º1çç»ï¼å³æå¤§ç»\r\n      let involvedGroupid = 1\r\n      let involvedPath = [1]\r\n      //è·åæéæ©æ°æ®çgroupï¼å¹¶å°è·¯å¾è½¬åä¸ºArray<number>\r\n      let _groups = groups.map(val => val.split('-').map(val2 => Number(val2)))\r\n      //è·åå¶ä¸­çæç­è·¯å¾\r\n      let minLength = _groups.map(val => val.length).sort((a, b) => a - b)[0]\r\n      //å¾ªç¯æ¾å°å¶ä¸­çæ¶åæå°ç æå¤§å¬å±group\r\n      for (let i = 1; i < minLength; i++) {\r\n        let nowGroupid = _groups[0][i]\r\n        if (nowGroupid) {\r\n          //æ¯ä¸ªç»çç¬¬ié¡¹é½ä¸è´flagä¸ºtrue\r\n          let flag = _groups.filter(val => val[i] === nowGroupid).length === _groups.length\r\n          if (flag) {\r\n            involvedGroupid = nowGroupid\r\n            involvedPath.push(nowGroupid)\r\n          } else {\r\n            break\r\n          }\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n\r\n      //æ ¡éªè·¨ç»ï¼involvedGroupidä¸çitemsï¼å¯ä»¥ä¸å¨é,ä¸åæ ¡éª\r\n      //å¶ä»æåµéè¦æ£æ¥checklistå¯¹åºæ°æ®æ¯å¦å·²ç»ä¸ºå¯¹åºgroupçå¨é¨æ°æ®\r\n      let flatGroupList = this.getFlatChildren(this.queryconditionData)\r\n      //æ£æµinvolvedGroupidç³»çgroupçconditionçå¨é¨æ°éæ¯ä¸æ¯ç­äºå·²éæ©çæ°éï¼å¦ææ¯çè¯ï¼æéç¨æ·ï¼æéæ¡ä»¶å·²å­å¨åç»\r\n      let involvedGroup = flatGroupList.find(val => val.groupid === involvedGroupid)\r\n      let involvedConditionsAll = this.getFlatConditions(involvedGroup).length\r\n      let checkedAll = groups.map(val => this.checkedList[val].length).reduce((a, b) => a + b)\r\n\r\n      if (involvedConditionsAll === checkedAll) {\r\n        //å·²ç»å­å¨è¯¥åç»äº\r\n        this.notifySer.warning(this.localeService.getValue('advancedMode.info.existGroupInfo'))\r\n        return\r\n      }\r\n      let validFlag = true\r\n      // è·åææåºäºç¸å³involvedGroupidä¸checklistçchildren\r\n      //æ¹æ³ï¼å¯»æ¾æå°å±ç»å¨groupæ°ç»çä½ç½®ï¼å¦åç¬¬ä¸ä½ ï¼åææåå«ç¬¬äºä½çchildrené½åºè¯¥è¢«å¾é\r\n      let involvedChildrenGroupids = []\r\n      _groups.forEach(val => {\r\n        let groupid = val[involvedPath.length]\r\n        if (groupid && !involvedChildrenGroupids.includes(groupid)) {\r\n          involvedChildrenGroupids.push(groupid)\r\n        }\r\n      })\r\n      //è·åä¸è¿°æ­¥éª¤ä¸­æægroupçconditionæ°éï¼å«å­çº§ï¼\r\n      let involveChildrenConditionLen = 0\r\n      involvedChildrenGroupids.forEach(val => {\r\n        let target = flatGroupList.find(group => group.groupid === val)\r\n        if (target) {\r\n          let targetFlatConditionsLen = this.getFlatConditions(target).length\r\n          involveChildrenConditionLen += targetFlatConditionsLen\r\n        }\r\n      })\r\n      let involvedCheckedConditionLen = 0\r\n      groups.filter(val => val !== involvedPath.join('-')).forEach(val => involvedCheckedConditionLen += this.checkedList[val].length)\r\n\r\n      if (involveChildrenConditionLen !== involvedCheckedConditionLen) {\r\n        //è·¨ç»æä½éè¦å¾éç»åæææ°æ®\r\n        this.notifySer.error(this.localeService.getValue('advancedMode.info.checkedGroupInfo'))\r\n        validFlag = false\r\n      }\r\n      // groups.forEach(group => {\r\n      //   if (!validFlag) {\r\n      //     return\r\n      //   }\r\n      //   if (group !== involvedPath.join('-')) {\r\n\r\n      //     let target = flatGroupList.find(val => val.path.join('-') === group)\r\n      //     let targetFlatConditions = this.getFlatConditions(target)\r\n      //     //å½åèç¹ä¸çææitemsï¼ä¸ä¸è¯¥èç¹æå³çææitems\r\n      //     let checkedListBaseTarget = _groups.filter(val => val.includes(target.groupid)).map(val => val.join('-'))\r\n      //     let checkedListBaseTargetLength = 0\r\n      //     checkedListBaseTarget.forEach(val => checkedListBaseTargetLength = checkedListBaseTargetLength + this.checkedList[val].length)\r\n      //     if (targetFlatConditions.length !== checkedListBaseTargetLength) {\r\n      //       this.notifySer.error('è·¨ç»æä½æ¶ï¼åºå¾éè¯¥ç»ä¸å¨é¨æ°æ®')\r\n      //       validFlag = false\r\n      //     }\r\n      //   }\r\n      // })\r\n      if (validFlag) {\r\n        let modifyItemids = this.checkedList[involvedPath.join('-')] || []\r\n        let target = flatGroupList.find(val => val.path.join('-') === involvedPath.join('-'))\r\n\r\n        let modifyItems = target.items.filter(val => modifyItemids.includes(val.conditionid))\r\n        //ç±äºåé¢å·²ç»æ£æµäºåå«äºæchildçå¨é¨conditionï¼æä»¥æ­¤å¤è¿æ»¤åºè¯¥åå«å­é¡¹ã\r\n        //æ¹æ³ï¼å¯»æ¾æå°å±ç»å¨groupæ°ç»çä½ç½®ï¼å¦åç¬¬ä¸ä½ ï¼åææåå«ç¬¬äºä½çchildrené½åºè¯¥è¢«å¾é\r\n        let involvedChildrenGroup = _groups.map(val => val[involvedPath.length]).filter(val => val)\r\n        let children = target.children.filter(val => involvedChildrenGroup.includes(val.groupid))\r\n        // let children = target.children.filter(val => groups.includes(val.path.join('-')))\r\n        this.generateGroup(target, modifyItems, children)\r\n\r\n      }\r\n\r\n\r\n    }\r\n    this.queryconditionData$.next(this.queryconditionData)\r\n    this.updateQueryConditionListData()\r\n    this.clearCheckedList()\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param groupid \r\n   * @param path \r\n   * @param isEmit æ¯å¦éè¦è§¦åemitæä½ï¼å¯¹äºtreeshakeæ¹æ³ï¼æ éè§¦åï¼é»è®¤ä¸ºtrue\r\n   * @param changeRootCompareType å±äºtreeshakeè¿ç¨ä¸­çåæ¶åç»ï¼æ¶åå°æ ¹èç¹ä¸æ ¹èç¹åªæè¯¥childrençæ¶åï¼éè¦ä¿®æ¹æ ¹èç¹æ¯è¾ç¬¦ï¼ä¸ºtrueæ¶ä¿®æ¹\r\n   */\r\n  deleteGroup(groupid, path, isEmit = true, changeRootCompareType = false) {\r\n\r\n    if (groupid === 1) {\r\n      //å·²ç»æ¯æå¤å±åç»äº\r\n      this.notifySer.info(this.localeService.getValue('advancedMode.info.deleteGroupInfo'))\r\n    } else {\r\n      let target = this.queryconditionData\r\n      let targetParent = null\r\n      path.forEach(pathVal => {\r\n        //groupid = 1çæ¶åæªæå¤å±\r\n        if (pathVal !== 1) {\r\n          targetParent = target\r\n          target = target.children.find(targetVal => targetVal.groupid === pathVal)\r\n        }\r\n      })\r\n      targetParent.children = targetParent.children.filter(val => val.groupid !== groupid)\r\n      let isChangeCompareType = (targetParent.groupid === 1) && changeRootCompareType && !targetParent.items.length && !targetParent.children.length\r\n      if(isChangeCompareType) {\r\n        targetParent.relation = target.relation\r\n      }\r\n      targetParent.children.push(...target.children)\r\n      targetParent.items.push(...target.items)\r\n      let childrens = this.getFlatChildren(targetParent)\r\n      childrens.forEach(val => val.path = val.path.filter(pathItem => pathItem !== groupid))\r\n      if (isEmit) {\r\n        this.queryconditionData$.next(this.queryconditionData)\r\n        this.updateQueryConditionListData()\r\n        this.clearCheckedList()\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  generateGroup(parentTarget, items, children) {\r\n    let groupid = this.getMaxGroupid() + 1\r\n\r\n    //å é¤æå°èå´çæå¤§ç» ä¸­ç§»é¤æçæ°æ®\r\n    this.changeQueryconditionData({ deleteItems: items, path: parentTarget.path }, 'delete-items', false)\r\n    //å é¤æå°èå´çæå¤§ç» ä¸­ç§»é¤æçchildrenï¼æ³¨æï¼ç±äºå·²ç»åè¿æ ¡éªï¼childrenä¸­çéå½ç±»åå·²ç»å¨é¨éæ©ï¼åªéå°targetä¸­æ¶åçchildrenç§»å°newgroupï¼å¹¶å°å¶åé¨çè·¯ç±ä¿®æ¹\r\n    let allGroups = this.getFlatChildren(parentTarget)\r\n\r\n\r\n    let parentPosition = parentTarget.path.findIndex(pathVal => pathVal === parentTarget.groupid)\r\n    children.forEach(val => {\r\n\r\n      // this.deleteGroup(val.groupid, val.path)\r\n      parentTarget.children = parentTarget.children.filter(child => child.groupid !== val.groupid)\r\n      allGroups.forEach(group => {\r\n        if (group.path.includes(val.groupid)) {\r\n          group.path.splice(parentPosition + 1, 0, groupid)\r\n\r\n        }\r\n      })\r\n    })\r\n\r\n    let newGroup: QueryconditionAdvancedData = {\r\n      groupid,\r\n      relation: 1,\r\n      items: items,\r\n      children: children,\r\n      path: parentTarget.path.concat(groupid)\r\n    }\r\n    parentTarget.children.push(newGroup)\r\n\r\n  }\r\n\r\n\r\n\r\n  setQueryconditionData(data) {\r\n    this.queryconditionData = data\r\n    this.queryconditionData$.next(data)\r\n    // åå§åå¯ä»¥ä¸ç¨æ´æ°QueryConditionListDataï¼ç¶ç»ä»¶å·²ç»ä¼ å¥\r\n    // this.updateQueryConditionListData()\r\n  }\r\n\r\n  getQueryconditionData() {\r\n    return this.queryconditionData\r\n  }\r\n\r\n  changeFieldConfig(config) {\r\n    this.fieldConfig = config\r\n    this.fieldConfig$.next(config)\r\n  }\r\n  getFieldConfig() {\r\n    return this.fieldConfig\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * ä¿®æ¹å·²éæ©çç­éæ¡ä»¶\r\n   * @param path number[] èç¹ä½ç½®\r\n   * @param item ç­éæ¡ä»¶\r\n   */\r\n  changeCheckedList(path, item) {\r\n\r\n    let _path = path.join('-')\r\n    if (!this.checkedList[_path]) {\r\n      this.checkedList[_path] = [item]\r\n    } else {\r\n      let index = this.checkedList[_path].indexOf(item)\r\n      if (index < 0) {\r\n        this.checkedList[_path].push(item)\r\n      } else {\r\n        this.checkedList[_path].splice(index, 1)\r\n        if (!this.checkedList[_path].length) {\r\n          delete this.checkedList[_path]\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n    this.checkedList$.next(this.checkedList)\r\n  }\r\n\r\n  /**\r\n   * æ¸é¤å·²éæ©çç­éæ¡ä»¶\r\n   */\r\n  clearCheckedList() {\r\n    this.checkedList = {}\r\n    this.checkedList$.next(this.checkedList)\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * \r\n   * @param data éè¦æ¥è¯¢çèç¹ä½ç½®\r\n   * @returns è¯¥èç¹ä¸ææçç­éæ¡ä»¶ä¿¡æ¯\r\n   */\r\n  getFlatConditions(data) {\r\n    if (data.children) {\r\n      return [].concat(data.items, ...data.children.map(val => this.getFlatConditions(val)))\r\n\r\n    }\r\n    return [].concat(data.items)\r\n\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param data éè¦æ¥è¯¢çèç¹\r\n   * @returns è¯¥èç¹ä¸ææçç»ç»ä¿¡æ¯\r\n   */\r\n  getFlatChildren(data) {\r\n    if (data.children) {\r\n      return [].concat(data, ...data.children.map(val => this.getFlatChildren(val)))\r\n    }\r\n    return [].concat(data)\r\n  }\r\n\r\n  /**\r\n   * @desc è·åæ°æ®ä¸­å·²æçæå¤§ç­éæ¡ä»¶ç¼å·\r\n   * @returns å½åæ°æ®ä¸­å·²æçæå¤§ç­éæ¡ä»¶ç¼å· \r\n   */\r\n  getMaxConditionid() {\r\n\r\n    let maxid = 0\r\n    let items = this.getFlatConditions(this.queryconditionData)\r\n    let conditionList = items.sort((a, b) => b.conditionid - a.conditionid)\r\n    if (conditionList.length) {\r\n      maxid = conditionList[0].conditionid\r\n    }\r\n\r\n    return maxid\r\n  }\r\n\r\n  /**\r\n   * @desc è·åæ°æ®ä¸­å·²æçæå¤§ç»ç»ç¼å·\r\n   * @returns å½åæ°æ®ä¸­å·²æçæå¤§ç»ç»ç¼å· \r\n   */\r\n  getMaxGroupid() {\r\n\r\n    let maxid = 0\r\n    let childrens = this.getFlatChildren(this.queryconditionData)\r\n    let conditionList = childrens.sort((a, b) => b.groupid - a.groupid)\r\n    if (conditionList.length) {\r\n      maxid = conditionList[0].groupid\r\n    }\r\n\r\n    return maxid\r\n  }\r\n\r\n\r\n  /**\r\n   * å°queryconditionè½¬åä¸ºArrayçæ ¼å¼å¹¶äº¤ä»åç«¯è§£æ\r\n   * @param data  è§£æçæ°æ®\r\n   * @param parentRelation ç¶èç¹çå³èå³ç³»\r\n   * @returns \r\n   */\r\n  objToArrayData(data, parentRelation?) {\r\n\r\n    let items = data.items\r\n    let children = data.children\r\n    items.forEach(val => val.relation = data.relation)\r\n\r\n    if (children.length) {\r\n      items = [].concat(...items, ...children.map(val => this.objToArrayData(val, data.relation)))\r\n    }\r\n\r\n    if (items.length && parentRelation) {\r\n\r\n      items[items.length - 1].relation = parentRelation\r\n      items[0].Lbracket ? items[0].Lbracket += '(' : items[0].Lbracket = '('\r\n      items[items.length - 1].Rbracket ? items[items.length - 1].Rbracket += ')' : items[items.length - 1].Rbracket = ')'\r\n    }\r\n\r\n    return [...items]\r\n\r\n  }\r\n  updateQueryConditionListData() {\r\n    let result = this.objToArrayData(cloneDeep(this.queryconditionData))\r\n    this.queryconditionListData = result\r\n    this.queryconditionListData$.next(this.queryconditionListData)\r\n  }\r\n\r\n  /**\r\n   * æ§è¡å®å¢å æä½åï¼å­å¨é¨ågroupä¸­æ æ°æ®çæåµï¼éè¦å é¤æè¯¥é¨åæ ç¨æ°æ®\r\n   * @param data \r\n   */\r\n  treeshake(data, parentData?) {\r\n    if (data.children.length) {\r\n      data.children.forEach(group => this.treeshake(group, data))\r\n    }\r\n    //itemså­å¨æèchildrençæ°éå¤§äºç­äº2ä¸ºæ­£å¸¸æ°æ®ï¼æ éå¤çï¼returnä»æ¯è¿åç»æå¤å±æ°æ®\r\n    if (data.items.length || data.children.length > 1) {\r\n\r\n    } else if (data.groupid === 1) {\r\n      //groupid === 1 ç¹æ®å¤çï¼itemsåchildrenå¯ä»¥ä¸º0ï¼ä½æ¯childrené¿åº¦ä¸º1ä¸itemsæ æ°æ®æ¶è¦å°childrenå¤ç\r\n      if (!data.items.length && data.children.length === 1) {\r\n        this.deleteGroup(data.children[0].groupid, data.children[0].path, false, true)\r\n      }\r\n\r\n    } else if (!data.children.length) {\r\n      //childrenæ°éä¸º0 itemsæ°éä¹ä¸º0ï¼ è¯¥èç¹æ å­å¨å¿è¦ï¼ç´æ¥å é¤\r\n      parentData.children = parentData.children.filter(val => val.groupid !== data.groupid)\r\n    } else if (data.children.length === 1) {\r\n      //itemsä¸å­å¨ï¼åªæä¸ä¸ªchildren,ç¸å½äºå é¤è¯¥å±åç»ï¼å°å­childrenåçº§\r\n      this.deleteGroup(data.groupid, data.path, false, true)\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, Input, OnInit, Optional, Output, EventEmitter, OnDestroy, ElementRef, Injector, ViewChild, AfterViewInit } from '@angular/core';\r\n\r\nimport { QueryconditionAdvancedData } from './type/type'\r\nimport { StateService } from './service/state.service';\r\nimport { QueryCondition } from '../entity/queryCondition'\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { SolutionService } from '../service/solution.service';\r\nimport { ControlType } from '../entity/controltype';\r\nimport { QuerySolutionVo } from '../entity/querysolutionvo'\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\n@Component({\r\n  selector: 'querycondition-advanced',\r\n  templateUrl: './querycondition-advanced.component.html',\r\n  styleUrls: ['./querycondition-advanced.component.css'],\r\n  providers: [SolutionService]\r\n})\r\n\r\nexport class QueryconditionAdvancedComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n  queryconditionData: QueryconditionAdvancedData\r\n  _selectSolution: QuerySolutionVo\r\n  @Input() get selectSolution() {\r\n    return this._selectSolution\r\n  }\r\n  set selectSolution(value: QuerySolutionVo) {\r\n    if (value && this._selectSolution && value.id === this._selectSolution.id) {\r\n      return\r\n    }\r\n    this._selectSolution = value\r\n    this.queryconditionData = value.queryConditionsAdvanced\r\n    this.stateSer.setQueryconditionData(value.queryConditionsAdvanced)\r\n  }\r\n  @Input() get fieldConfig() {\r\n    return this._fieldConfig\r\n  }\r\n  set fieldConfig(value) {\r\n    //undo èå´åçç»ä»¶æä¸æ¯æ \r\n    //doing å°èå´åç»ä»¶éç½®ä¸ºåå¼ç±»åï¼æ¹æ³ï¼ååæ ¼å¼åï¼æ¿å°åºç¡å¼ï¼éårangeListï¼å°ç¸å³æ§ä»¶ç±»åæ¿æ¢ååè¿è¡æ ¼å¼å\r\n\r\n    let _value = cloneDeep(value)\r\n    _value.forEach(val => {\r\n      if (val.control.controltype === 'single-date') {\r\n        val.control.isDynamicDate = false\r\n      } else if(val.control.controltype === 'radio') {\r\n        val.control.horizontal = true\r\n      }\r\n      \r\n    })\r\n    //å°åæ¥æéé¢çæ¯æå¨ææ¥æå±æ§ç¾¤ä¸æ¹ä¸ºfalse\r\n    let modifyFieldConfig = this.rangeToSimpleControlType(_value)\r\n    this._fieldConfig = this.solutionService.convertToQueryConditions(modifyFieldConfig);\r\n    //æ³¢å°éæ©æ§ä»¶å¦ææ²¡æé»è®¤å¼ï¼èµå¼ä½falseï¼ä¸ºä»ä¹ä¸æ¾å¨ä¸é¢ãå ä¸ºä¸æ¢å¨ä¹åçæé å½æ°\r\n    this._fieldConfig.forEach(val => {\r\n      if (val.control.getControlType() === 8 && !val.value.getOriginalValue().length) {\r\n        val.value.setOriginalValue([false])\r\n      }\r\n    })\r\n    this.stateSer.changeFieldConfig(this._fieldConfig)\r\n\r\n  }\r\n  _fieldConfig: Array<QueryCondition>\r\n  dataSubscribe: Subscription = null\r\n  dataListSubscribe: Subscription = null\r\n  _self = null\r\n  //å­ç»ä»¶åå¦éè¦éå®æå¤§é«åº¦ï¼é»è®¤trueæå¨é«åº¦åfalse\r\n\r\n  isLimitHeight = true\r\n  @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n  @ViewChild('advancedContent') advancedContent: ElementRef;\r\n  @ViewChild('advancedElement') advancedElement: ElementRef;\r\n  constructor(private notifySer: NotifyService, private msgSer: MessagerService, private localeService: LocaleService, private solutionService: SolutionService, private stateSer: StateService, private injector: Injector) {\r\n\r\n    // this.fieldConfig = this.stateSer.getFieldConfig()\r\n    this.dataSubscribe = this.stateSer.queryconditionData$.subscribe((data: QueryconditionAdvancedData) => {\r\n      this.queryconditionData = data\r\n      this.selectSolution.queryConditionsAdvanced = data\r\n    })\r\n    this.dataListSubscribe = this.stateSer.queryconditionListData$.subscribe((queryconditionListData: Array<QueryCondition>) => {\r\n      this.conditionChange.emit(queryconditionListData);\r\n\r\n    })\r\n    this._self = this.injector.get(ElementRef);\r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    //çå¬resizeäºä»¶åå\r\n    setTimeout(()=>{this.handleResizeChange()},1000)\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.dataSubscribe.unsubscribe()\r\n    this.dataListSubscribe.unsubscribe()\r\n  }\r\n\r\n  //æå¤å±å¢å ç­éæ¡ä»¶\r\n  addItem() {\r\n    if (!this.fieldConfig.length) {\r\n      this.notifySer.error('æªæ£æµå°å­å¨ç­éæ¡ä»¶ã')\r\n    } else {\r\n\r\n      let item = cloneDeep(this.fieldConfig[0])\r\n      this.stateSer.changeQueryconditionData({ item, path: [1] }, 'add', true)\r\n      this.advancedContent.nativeElement.scrollTo({ top: this.advancedContent.nativeElement.scrollHeight })\r\n    }\r\n  }\r\n\r\n  //å¢å åç»\r\n  addGroup() {\r\n    this.stateSer.addGroup()\r\n  }\r\n\r\n  //éç½®\r\n  reset() {\r\n    this.msgSer.confirm(this.localeService.getValue('advancedMode.info.resetInfo')).subscribe((isConfirm) => {\r\n      if (isConfirm) {\r\n        this.stateSer.reset()\r\n        //è§¦ååè½¦ï¼è¿è¡æ¥è¯¢æä½\r\n        let event = document.createEvent('Event')\r\n        event.initEvent('keydown', true, false)\r\n\r\n        event = Object.assign(event, {\r\n          ctrlKey: false,\r\n          metaKey: false,\r\n          altKey: false,\r\n          which: 13,\r\n          keyCode: 13,\r\n          key: 'Enter',\r\n          code: 'Enter'\r\n        })\r\n        this._self.nativeElement.dispatchEvent(event)\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  rangeToSimpleControlType(configs) {\r\n    let unformatConfigs = cloneDeep(configs)\r\n    unformatConfigs.forEach(val => {\r\n      if (val.control && val.control.controltype) {\r\n\r\n        val.control.controltype = this.rangeToSimpleTypeModify(val.control.controltype)\r\n      }\r\n\r\n    })\r\n    return unformatConfigs\r\n\r\n  }\r\n\r\n  //è½¬åé¨åæ§ä»¶ç±»å\r\n  rangeToSimpleTypeModify(controlType) {\r\n\r\n    let result = ''\r\n    switch (controlType) {\r\n\r\n      case 'date':\r\n        result = 'single-date'\r\n        break\r\n      case 'date-time':\r\n        result = 'single-date-time'\r\n        break\r\n      case 'month':\r\n        result = 'single-month'\r\n        break\r\n      case 'number':\r\n        result = 'single-number'\r\n        break\r\n      default:\r\n        result = controlType\r\n    }\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * çå¬ç­éæ¡ä»¶ç»ä»¶å¤§å°ååçæ¹æ³ï¼é«åº¦è¶è¿æå®å¼æ¶åæ¶åé¨ç»ä»¶æå¤§é«åº¦å¼éå¶\r\n   */\r\n  handleResizeChange() {\r\n    //@ts-ignore\r\n    const myObserver = new ResizeObserver(entries => {\r\n      entries.forEach(entry => {\r\n        if(entry.target.style.height < 431 ) {\r\n          this.isLimitHeight = true\r\n        } else {\r\n          this.isLimitHeight = false\r\n        }\r\n      })\r\n    })\r\n    myObserver.observe(this.advancedElement.nativeElement)\r\n  }\r\n\r\n}\r\n","enum CompareType {\r\n    Equal = 0,\r\n    NotEqual = 1,\r\n    Greater = 2,\r\n    GreaterOrEqual = 3,\r\n    Less = 4,\r\n    LessOrEqual = 5,\r\n    Like = 6,\r\n    LikeStartWith = 7,\r\n    LikeEndWith = 8,\r\n    // NotLike = 9,\r\n    // NotLikeStartWith = 10,\r\n    // NotLikeEndWith = 11,\r\n    // Is = 12,\r\n    // IsNot = 13,\r\n    // In = 14,\r\n    // NotIn = 15\r\n}\r\n\r\nconst CompareTypeName = [\r\n    'ç­äº',\r\n    'ä¸ç­äº',\r\n    'å¤§äº',\r\n    'å¤§äºç­äº',\r\n    'å°äº',\r\n    'å°äºç­äº',\r\n    'åå«',\r\n    'å¼å§æ¯',\r\n    'ç»ææ¯',\r\n    // 'NotLike',\r\n    // 'NotLikeStartWith',\r\n    // 'NotLikeEndWith',\r\n    // 'Is',\r\n    // 'IsNot',\r\n    // 'In',\r\n    // 'NotIn'\r\n]\r\n\r\nconst CompareTypeInControl = [\r\n    // Text = 0,\r\n    [0, 6, 7, 8],\r\n    // SingleDate = 1,\r\n    [0, 2, 3, 4, 5],\r\n    // SmartHelp = 2,\r\n    [0, 1],\r\n    // DropDownList = 3,\r\n    [0, 1],\r\n    // DateRange = 4,\r\n    [],\r\n    // NumberRange = 5,\r\n    [],\r\n    // SingleNumber = 6,\r\n    [0, 1, 2, 3, 4, 5],\r\n    // SingleYear = 7,\r\n    [0, 2, 3, 4, 5],\r\n    // BoolCheck = 8,\r\n    [0],\r\n    // DateTimeRange = 9,\r\n    [],\r\n    // SingleMonth = 10,\r\n    [0, 2, 3, 4, 5],\r\n    // MonthRange = 11,\r\n    [],\r\n    // SingleDateTime = 12,\r\n    [0, 2, 3, 4, 5],\r\n    // ComboLookUp = 13,\r\n    [0, 1],\r\n    // Radio = 14,\r\n    [0],\r\n    // InputGroup = 15\r\n    [0, 6, 7, 8],\r\n]\r\n\r\nexport {\r\n    CompareType,\r\n    CompareTypeName,\r\n    CompareTypeInControl\r\n}","import { Component, Input, OnInit, ChangeDetectorRef, OnDestroy, ViewChild, ElementRef, Injector } from '@angular/core';\r\nimport { CompareType, CompareTypeName, CompareTypeInControl } from '../config/compare-type.config';\r\nimport { QueryconditionAdvancedData } from '../type/type'\r\nimport { StateService } from '../service/state.service'\r\nimport { QueryCondition } from '../../entity/QueryCondition'\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\nimport { OverLayHiddenService } from \"@farris/ui-common\";\r\n@Component({\r\n  selector: 'querycondition-group',\r\n  templateUrl: './querycondition-group.component.html',\r\n  styleUrls: ['./querycondition-group.component.css']\r\n})\r\nexport class QueryconditionGroupComponent implements OnInit, OnDestroy {\r\n\r\n  COMPARE_TYPE_NAME = CompareTypeName\r\n  COMPARE_TYPE_NAME_MULTI = CompareTypeName //æ²¡åæ³ï¼è¦æ±ç±»ä¼¼äºå¸®å©ï¼ä¸æéæ©ï¼ä¸ä¸ªå«ç­äºï¼ä¸¤ä¸ªå«åå«ï¼ä½æ¯é»è¾è¿è¦ä¸æ ·\r\n  COMPARE_TYPE_IN_CONTROL = CompareTypeInControl\r\n  @Input() data: QueryconditionAdvancedData\r\n\r\n  fieldConfig: Array<QueryCondition> = []\r\n  checklist: Array<string> = []\r\n\r\n  deleteGroupText = this.localeService.getValue('advancedMode.info.deleteGroupTooltip')\r\n  fieldConfigSubscribe: Subscription = null\r\n  checkedListSubscribe: Subscription = null\r\n  forceState = []\r\n  _self = null\r\n  activeConditionType = null \r\n  private overLayService: OverLayHiddenService = null;\r\n  constructor(private stateSer: StateService, private cd: ChangeDetectorRef, private msgSer: MessagerService, private localeService: LocaleService, private injector: Injector) {\r\n    this.fieldConfig = this.stateSer.getFieldConfig()\r\n    this.fieldConfigSubscribe = this.stateSer.fieldConfig$.subscribe((config: any) => {\r\n      this.fieldConfig = config\r\n    })\r\n    this.checkedListSubscribe = this.stateSer.checkedList$.subscribe((checklist: Array<string>) => {\r\n\r\n      let _path = this.data.path.join('-')\r\n      if (checklist[_path]) {\r\n        this.checklist = checklist[_path]\r\n      } else {\r\n        this.checklist = []\r\n      }\r\n    })\r\n    this.COMPARE_TYPE_NAME = [\r\n      this.localeService.getValue('advancedMode.compareType.Equal'),\r\n      this.localeService.getValue('advancedMode.compareType.NotEqual'),\r\n      this.localeService.getValue('advancedMode.compareType.Greater'),\r\n      this.localeService.getValue('advancedMode.compareType.GreaterOrEqual'),\r\n      this.localeService.getValue('advancedMode.compareType.Less'),\r\n      this.localeService.getValue('advancedMode.compareType.LessOrEqual'),\r\n      this.localeService.getValue('advancedMode.compareType.Like'),\r\n      this.localeService.getValue('advancedMode.compareType.LikeStartWith'),\r\n      this.localeService.getValue('advancedMode.compareType.LikeEndWith')\r\n    ]\r\n    this.COMPARE_TYPE_NAME_MULTI = [\r\n      this.localeService.getValue('advancedMode.compareType.Like'),\r\n      this.localeService.getValue('advancedMode.compareType.NotLike'),\r\n      this.localeService.getValue('advancedMode.compareType.Greater'),\r\n      this.localeService.getValue('advancedMode.compareType.GreaterOrEqual'),\r\n      this.localeService.getValue('advancedMode.compareType.Less'),\r\n      this.localeService.getValue('advancedMode.compareType.LessOrEqual'),\r\n      this.localeService.getValue('advancedMode.compareType.Like'),\r\n      this.localeService.getValue('advancedMode.compareType.LikeStartWith'),\r\n      this.localeService.getValue('advancedMode.compareType.LikeEndWith')\r\n    ]\r\n    this.overLayService = new OverLayHiddenService();\r\n    this._self = this.injector.get(ElementRef);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.fieldConfigSubscribe.unsubscribe()\r\n    this.checkedListSubscribe.unsubscribe()\r\n  }\r\n\r\n\r\n  /**\r\n   * ä¸æé¢æ¿å±å¼å³é­äºä»¶\r\n   * @param event ä¸æå±å¼tueï¼ å³é­false\r\n   * @param dropdownMenu ç¹å»çdropdownåºå·\r\n   */\r\n  dpStateHandler(event, dropdownMenu?) {\r\n    //è§£å³é¼ æ å¨dropdownä¸æ»å¨è¡¥å³é­dropdownçé®é¢\r\n    if (event && typeof (dropdownMenu) === 'number') {\r\n      this.activeConditionType = dropdownMenu.toString()\r\n      this.forceState = []\r\n      this.overLayService.registerMouseEvent(this._self.nativeElement, (e: MouseEvent) => {\r\n        if (!this.activeConditionType || !(e.type === 'wheel' || e.type === 'mousewheel')) return\r\n        let tar = e.target as any\r\n        let classList = Array.from(tar.classList || [])\r\n        if (!classList.includes('dropdown-item-noopen') && this.activeConditionType) {\r\n          this.activeConditionType = null\r\n          this.forceState = [false]\r\n          this.overLayService.destory(this._self.nativeElement)\r\n        }\r\n      });\r\n    } else {\r\n      this.overLayService.destory(this._self.nativeElement)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ä¿®æ¹ç­éæ¡ä»¶æ§ä»¶ç±»å\r\n   * @param item ç­éæ¡ä»¶å¯¹è±¡\r\n   * @param fieldItem éä¸­çæ§ä»¶ç±»å\r\n   */\r\n  changeConditionType(item, fieldItem) {\r\n    let conditionid = item.conditionid\r\n    let _fieldItem = cloneDeep(fieldItem)\r\n\r\n    item = _fieldItem\r\n    item.conditionid = conditionid\r\n    item.compareType = 0\r\n    this.stateSer.changeQueryconditionData({ item, path: this.data.path }, 'modify')\r\n\r\n  }\r\n  \r\n  /**\r\n   * ä¿®æ¹ç­éæ¡ä»¶æ¯è¾ç¬¦\r\n   * @param item ç­éæ¡ä»¶å¯¹è±¡\r\n   * @param compareTypeIndex ç­éæ¡ä»¶æ¯è¾ç¬¦\r\n   */\r\n  changeCompareType(item, compareTypeIndex) {\r\n    item.compareType = compareTypeIndex\r\n    this.stateSer.changeQueryconditionData({ item, path: this.data.path }, 'modify')\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * æ·»å ç­éæ¡ä»¶\r\n   * @param addPositionItem æ·»å çä½ç½® \r\n   */\r\n  addItem(addPositionItem) {\r\n    let item = cloneDeep(this.fieldConfig[0])\r\n    this.stateSer.changeQueryconditionData({ item, path: this.data.path, addPositionItem: addPositionItem }, 'add')\r\n  }\r\n\r\n  /**\r\n   * å é¤ç­éæ¡ä»¶ \r\n   * @param item å é¤é¡¹\r\n   */\r\n  deleteItem(item) {\r\n    this.stateSer.changeQueryconditionData({ deleteItems: [item], path: this.data.path }, 'delete-item')\r\n  }\r\n\r\n  /**\r\n   * ä¿®æ¹ç­éæ¡ä»¶ç»å³èå³ç³»\r\n   */\r\n  changeRelation() {\r\n    let relation = this.data.relation === 1 ? 2 : 1\r\n    this.stateSer.changeGroupData({ relation, path: this.data.path }, 'modify-relation')\r\n\r\n  }\r\n\r\n  /**\r\n   * éä¸­ç­éæ¡ä»¶\r\n   * @param item éä¸­é¡¹\r\n   */\r\n  handleCheckItem(item) {\r\n    this.stateSer.changeCheckedList(this.data.path, item.conditionid)\r\n\r\n  }\r\n\r\n  /**\r\n   * åæ¶ç­éç»\r\n   */\r\n  deleteGroup() {\r\n    this.msgSer.confirm(this.localeService.getValue('advancedMode.info.deleteGroup')).subscribe((isConfirm) => {\r\n      if (isConfirm) {\r\n        this.stateSer.deleteGroup(this.data.groupid, this.data.path)\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","import { Component, Input, OnInit, Injector, Output } from '@angular/core';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { IdService } from '@farris/ui-common';\r\nimport { StateService } from '../service/state.service'\r\n@Component({\r\n  selector: 'querycondition-item',\r\n  templateUrl: './querycondition-item.component.html',\r\n  styleUrls: ['./querycondition-item.component.css']\r\n})\r\nexport class QueryconditionItemComponent implements OnInit {\r\n\r\n\r\n  controlType = ControlType;\r\n  @Input() item\r\n  fieldCodeOfClearFields: Array<string> = [];\r\n  private idService: IdService;\r\n  private stateSer: StateService;\r\n  constructor(private injector: Injector) {\r\n    this.idService = this.injector.get(IdService);\r\n    this.stateSer = this.injector.get(StateService);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  conditionChange() {\r\n    this.stateSer.updateQueryConditionListData()\r\n  }\r\n\r\n  getStyle(a) {\r\n    return ''\r\n  }\r\n  buildSmartHelpKey(value: string) {\r\n    let prefix = '';\r\n    if (location.hash) {\r\n      const pathArr = location.hash.split('?');\r\n      prefix = pathArr ? pathArr[0] : '';\r\n    } else {\r\n      const pathArr = location.pathname.split('/');\r\n      prefix = pathArr ? pathArr[pathArr.length - 1] : '';\r\n    }\r\n    return this.idService.encrypt(prefix + '/querysolution/' + value);\r\n  }\r\n  clearFieldsChange(event) {\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { QueryConditionComponent } from './querycondition.component';\r\nimport { NumberRangeComponent } from './controlcomponent/numberrangecomponent/numberrange.component';\r\nimport { InputComponent } from './controlcomponent/input/input.component';\r\nimport { InputGroupComponent } from './controlcomponent/inputgroup/inputgroup.component';\r\nimport { SolutionSmartHelpComponent } from './controlcomponent/smarthelp/smarthelp.component';\r\nimport { DropDownListComponent } from './controlcomponent/dropdown/dropdownlist.component';\r\nimport { SingleNumberComponent } from './controlcomponent/numbercomponent/single-number.component';\r\nimport { SolutionService } from './service/solution.service';\r\nimport { ConvertorService } from './service/convertorservice';\r\nimport { ConfigDialogComponent } from './fieldconfigdialog/configdialog.component';\r\nimport { NotifyModule, NotifyService } from '@farris/ui-notify';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { LayoutModule } from '@farris/ui-layout';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { MultiSelectModule } from '@farris/ui-multi-select';\r\nimport { FieldGroupModule } from '@farris/ui-field-group';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown'\r\nimport { LoadingModule } from '@farris/ui-loading';\r\n// import { InputModeModule } from '@farris/ui-input-group'\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { CheckBoxComponent } from './controlcomponent/checkbox/checkbox.component';\r\nimport { RadioComponent } from './controlcomponent/radio/radio.component';\r\nimport { DatePickerComponent } from './controlcomponent/datepicker/datepicker.component';\r\nimport { ComboLookUpComponent } from './controlcomponent/combolookup/combolookup.component';\r\nimport { ComboLookupModule } from '@farris/ui-combo-lookup';\r\nimport { ClearFieldsDirective } from './directives/clear-fields.directive';\r\nimport { LabelTextMultiDirective } from './directives/label-text-multi.directive';\r\nimport { FarrisTooltipModule } from '@farris/ui-tooltip';\r\n//é«çº§æ¨¡å¼ç»ä»¶åæå¡\r\nimport { StateService } from './querycondition-advanced/service/state.service'\r\nimport { QueryconditionAdvancedComponent } from './querycondition-advanced/querycondition-advanced.component';\r\nimport { QueryconditionGroupComponent } from './querycondition-advanced/querycondition-group/querycondition-group.component'\r\nimport { QueryconditionItemComponent } from './querycondition-advanced/querycondition-item/querycondition-item.component'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule, ReactiveFormsModule,\r\n    FarrisDialogModule,\r\n    LayoutModule,\r\n    LookupModule,\r\n    // FarrisInputModule,\r\n    MultiSelectModule,\r\n    FieldGroupModule,\r\n    InputGroupModule,\r\n    FDropdownDirectiveTypeModule,\r\n    LoadingModule.forRoot(),\r\n    NotifyModule.forRoot(),\r\n    FarrisDatePickerModule,\r\n    LocaleModule.forRoot(),\r\n    ComboListModule,\r\n    NumberSpinnerModule,\r\n    FarrisFormsModule,\r\n    ComboLookupModule,\r\n    FarrisTooltipModule\r\n  ],\r\n  declarations: [\r\n    QueryConditionComponent,\r\n    ConfigDialogComponent,\r\n    DatePickerComponent,\r\n    NumberRangeComponent,\r\n    SolutionSmartHelpComponent,\r\n    InputComponent,\r\n    DropDownListComponent,\r\n    SingleNumberComponent,\r\n    CheckBoxComponent,\r\n    ComboLookUpComponent,\r\n    RadioComponent,\r\n    InputGroupComponent,\r\n    ClearFieldsDirective,\r\n    LabelTextMultiDirective,\r\n    //é«çº§æ¨¡å¼ç»ä»¶\r\n    QueryconditionAdvancedComponent,\r\n    QueryconditionGroupComponent,\r\n    QueryconditionItemComponent\r\n  ],\r\n  entryComponents: [\r\n    ConfigDialogComponent,\r\n  ],\r\n  providers: [\r\n    SolutionService,\r\n    NotifyService,\r\n    ConvertorService,\r\n    //é«çº§æ¨¡å¼æå¡\r\n    StateService\r\n  ],\r\n  bootstrap: [QueryConditionComponent],\r\n  exports: [\r\n    QueryConditionComponent,\r\n    ConfigDialogComponent,\r\n    DatePickerComponent,\r\n    NumberRangeComponent,\r\n    SolutionSmartHelpComponent,\r\n    InputComponent,\r\n    DropDownListComponent,\r\n    SingleNumberComponent,\r\n    CheckBoxComponent,\r\n    ComboLookUpComponent,\r\n    RadioComponent,\r\n    InputGroupComponent\r\n  ]\r\n})\r\nexport class QueryConditionModule { }\r\n","import { QueryCondition, QueryConditionConvert } from \"./querycondition\";\r\nimport { QuerySolutionExtendVo } from './querysolutionextendvo';\r\nimport {QueryconditionAdvancedData} from '../querycondition-advanced/type/type'\r\nimport { cloneDeep } from 'lodash-es';\r\n/**\r\n * æ¥è¯¢æ¹æ¡å®ä½ç±» \r\n */\r\nexport class QuerySolutionVo {\r\n    /**\r\n     * å¯ä¸æ§æ è¯\r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * æå±IDï¼ä¾å¦æå±è¡¨åID\r\n     */\r\n    belongId: string;\r\n\r\n    /**\r\n     * æ¥è¯¢æ¹æ¡ç¼å·\r\n     */\r\n    code: string;\r\n\r\n    /**\r\n     * æ¥è¯¢æ¹æ¡åç§°\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * æ¥è¯¢æ¡ä»¶\r\n     */\r\n    queryConditions: Array<QueryCondition>;\r\n\r\n    /**\r\n     * æ¯å¦ç³»ç»é¢ç½®æ¥è¯¢æ¹æ¡\r\n     */\r\n    isSystem: boolean;\r\n\r\n    /**\r\n     * æ¯å¦é»è®¤æ¥è¯¢æ¹æ¡\r\n     * åå§æ¶ï¼ä¸ºfalse\r\n     */\r\n    isDefault: boolean = false;\r\n\r\n    isChanged: boolean = false;\r\n    /**\r\n     * ç±»åï¼ preæ¯ä¸æ¬¡æ¥è¯¢\r\n     */\r\n    type: string;\r\n\r\n    extendId: string = 'query-scheme-1';\r\n\r\n    extendInfo: Array<QuerySolutionExtendVo>;\r\n\r\n    code_chs: string;\r\n\r\n    code_en: string;\r\n\r\n    code_cht: string;\r\n    /**\r\n     * é«çº§æ¨¡å¼æ°å¢å­æ®µï¼1ä¸ºæ åæ¨¡å¼ï¼2ä¸ºé«çº§æ¨¡å¼\r\n     */\r\n    mode: string;\r\n    /**\r\n     * é«çº§æ¨¡å¼æ°å¢è¾å©å­æ®µï¼ç¨æ¥å±ç¤ºconditionçæ ç»æ\r\n     */\r\n    queryConditionsAdvanced: QueryconditionAdvancedData;\r\n}\r\n\r\n/**\r\n * æ¥è¯¢æ¹æ¡å®ä½ç±»åºååä¸ååºååå¨\r\n */\r\nexport class QuerySolutionVoConvertor {\r\n\r\n    /**\r\n     * åºåå\r\n     * @param obj æ¥è¯¢æ¹æ¡å®ä½\r\n     */\r\n    convertJObject(obj: QuerySolutionVo): Object {\r\n        let querySolutionVo = obj as QuerySolutionVo;\r\n        let jobj = new Object();\r\n        jobj[\"id\"] = querySolutionVo.id;\r\n        jobj[\"belongId\"] = querySolutionVo.belongId;\r\n        jobj[\"code\"] = querySolutionVo.code;\r\n        jobj[\"name\"] = querySolutionVo.name;\r\n        jobj[\"isSystem\"] = querySolutionVo.isSystem;\r\n        jobj[\"isDefault\"] = querySolutionVo.isDefault;\r\n        jobj[\"type\"] = querySolutionVo.type;\r\n        jobj[\"extendId\"] = querySolutionVo.extendId;\r\n        jobj[\"extendInfo\"] = querySolutionVo.extendInfo;\r\n        jobj[\"code_chs\"] = querySolutionVo.code_chs;\r\n        jobj[\"code_en\"] = querySolutionVo.code_en;\r\n        jobj[\"code_cht\"] = querySolutionVo.code_cht;\r\n        jobj[\"mode\"] = querySolutionVo.mode || '1';\r\n        //éå¯¹æ æ°æ®ä¸­åç®åå¤çï¼ä»ä¿çå¯¹åºæ¡ä»¶çconditionid\r\n\r\n        if(querySolutionVo.mode === '2') {\r\n            // let _queryConditionsAdvanced = querySolutionVo.queryConditionsAdvanced\r\n            // let _advancedFlatConditions = this.getFlatConditions(_queryConditionsAdvanced)\r\n            // _advancedFlatConditions.forEach(val => val.conditionid = val.conditionid *2)\r\n            let _queryConditionsAdvanced = this.simplifyTreeData(cloneDeep(querySolutionVo.queryConditionsAdvanced))\r\n            jobj[\"advancedQueryConditionsString\"] = JSON.stringify(_queryConditionsAdvanced)\r\n        }\r\n        \r\n        if (querySolutionVo.queryConditions && querySolutionVo.queryConditions.length > 0) {\r\n            let jArray = [];\r\n            let convertor = new QueryConditionConvert();\r\n            querySolutionVo.queryConditions.forEach(element => {\r\n                jArray.push(convertor.convertJObject(element));\r\n            });\r\n            //åæå¡ç«¯åéæ°æ®æ¶ï¼åéquery condition listçjson string\r\n            jobj[\"queryConditionString\"] = JSON.stringify(jArray);\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    /**\r\n     * ååºåå(åå§å)\r\n     * @param jobj æ¥è¯¢æ¹æ¡åºåååçObject\r\n     */\r\n    initFromJobject(jobj: Object): QuerySolutionVo {\r\n        let querySolutionVo = new QuerySolutionVo();\r\n        querySolutionVo.id = jobj[\"id\"];\r\n        querySolutionVo.code = jobj[\"code\"];\r\n        querySolutionVo.name = jobj[\"name\"];\r\n        querySolutionVo.belongId = jobj[\"belongId\"];\r\n        querySolutionVo.isSystem = jobj[\"isSystem\"];\r\n        querySolutionVo.isDefault = jobj[\"isDefault\"];\r\n        querySolutionVo.type = jobj.hasOwnProperty('type') ? jobj[\"type\"] : '';\r\n        querySolutionVo.extendId = jobj.hasOwnProperty('extendId') ? jobj[\"extendId\"] : \"\";\r\n        querySolutionVo.queryConditions = new Array<QueryCondition>();\r\n        //é«çº§æ¨¡å¼æ°å¢mode,1ä¸ºä¼ ç»æ¨¡å¼ï¼2ä¸ºé«çº§æ¨¡å¼\r\n        querySolutionVo.mode = jobj[\"mode\"] || 1;\r\n        \r\n        //æå¡å¨ç«¯è¿åçquery condition listå®éæ¯ json string\r\n        const queryConditionString = jobj[\"queryConditionString\"];\r\n        if (queryConditionString) {\r\n            const conditionJarry = JSON.parse(queryConditionString);\r\n            let convertor = new QueryConditionConvert();\r\n            conditionJarry.forEach(element => {\r\n                querySolutionVo.queryConditions.push(convertor.initFromJobject(element));\r\n            });\r\n        }\r\n        querySolutionVo.queryConditionsAdvanced = jobj[\"advancedQueryConditionsString\"] ? JSON.parse(jobj[\"advancedQueryConditionsString\"]) : null;\r\n\r\n        return querySolutionVo;\r\n    }\r\n    /**\r\n     * ä»ç¼å­ä¸­ååçJSONæ°æ®éè¦è½¬å\r\n     * ä»å¤§åè½¬æ¢å°å°åæ¡ä»¶\r\n     */\r\n    formatFromJobject(jobj: Array<any> | string): Array<QueryCondition> {\r\n        let queryConditions = new Array<QueryCondition>();\r\n        let conditionJarry;\r\n        if (typeof jobj == 'string') {\r\n            conditionJarry = JSON.parse(jobj);\r\n        } else {\r\n            conditionJarry = jobj;\r\n        }\r\n        let convertor = new QueryConditionConvert();\r\n        conditionJarry.forEach(element => {\r\n            queryConditions.push(convertor.initFromJobject(element));\r\n        });\r\n        return queryConditions;\r\n    }\r\n    /**\r\n     * å­å¥ç¼å­ä¸­\r\n     * ä»å¤§åè½¬æ¢å°å°åæ¡ä»¶\r\n     */\r\n    formatConvertJObject(jobj: Array<QueryCondition>):Array<any>{\r\n        let queryConditions =[];\r\n        let convertor = new QueryConditionConvert();\r\n        jobj.forEach(element => {\r\n            queryConditions.push(convertor.convertJObject(element));\r\n        });\r\n        return queryConditions;\r\n    }\r\n\r\n    /**\r\n     * å°é«çº§æ¨¡å¼ä¸æ ç»æconditionæå¹³å\r\n     * @param data \r\n     * @returns \r\n     */\r\n    getFlatConditions(data) {\r\n        if (data.children) {\r\n          return [].concat(data.items, ...data.children.map(val => this.getFlatConditions(val)))\r\n    \r\n        }\r\n        return [].concat(data.items)\r\n    \r\n      }\r\n      simplifyTreeData(data) {\r\n        if(data.items && data.items.length) {\r\n            let _items = data.items.map(val =>  {return {conditionid: val.conditionid}})\r\n            data.items = _items\r\n        }\r\n        if(data.children) {\r\n            data.children.forEach(val => this.simplifyTreeData(val))\r\n        }\r\n        return data\r\n    }\r\n    complicateTreeData(originData, conditionList) {\r\n        \r\n        let handleFunc = (treeData) => {\r\n\r\n            if (treeData.items && treeData.items.length) {\r\n                treeData.items = treeData.items.map(val => {\r\n                    let target = conditionList.find(item => item.conditionid === val.conditionid)\r\n                    if (target) {\r\n                        let result = cloneDeep(target)\r\n                        result.groupid = undefined\r\n                        result.Lbracket = undefined\r\n                        result.Rbracket = undefined\r\n                        return result\r\n                    }\r\n                    return null\r\n                })\r\n            }\r\n            if(treeData.children && treeData.children.length) {\r\n                treeData.children.forEach(val => {\r\n                    handleFunc(val)\r\n                })\r\n            }\r\n            //ä»ä¾è¿åé¡¶å±æ°æ®ï¼éåè¿ç¨ä½¿ç¨ä¸å°\r\n            return treeData\r\n        }\r\n        return handleFunc(originData)\r\n\r\n    }\r\n}","\r\nexport class QuerySolutionExtendVo {\r\n    \r\n    id: string;\r\n\r\n    relatedId: string;\r\n\r\n    orgId: string;\r\n}","/**\r\n * æ­¤ç±»æ²¡æè¢«ä½¿ç¨\r\n * æ¯è¾ç¬¦ \r\n */\r\nexport enum CompareType{\r\n\r\n    /**\r\n     * ç­äº\r\n     */\r\n    // Equal=1,\r\n    Equal = 0,\r\n\r\n    /**\r\n     * å¤§äº\r\n     */\r\n    GreaterThan = 2,\r\n\r\n    /**\r\n     * å¤§äºæç­äº\r\n     */\r\n    GreaterThanOrEqual = 3,\r\n\r\n    /**\r\n     * å°äº\r\n     */\r\n    LessThan = 4,\r\n\r\n    /**\r\n     * å°äºæç­äº\r\n     */\r\n    LessThanOrEqual = 5, \r\n\r\n    /**\r\n     * ä¹é´\r\n     */\r\n    // BetWeen=6\r\n    Like = 6\r\n}","import { QueryCondition } from '../querycondition';\r\n\r\n/**\r\n * å­æ®µéç½®\r\n */\r\nexport class FieldConfig {\r\n\r\n  /**\r\n   * å­æ®µID\r\n   */\r\n  id?: string;\r\n\r\n  /**\r\n   * å­æ®µæ ç­¾ï¼å­æ®µç¼å·çå¯ä¸æ è¯\r\n   */\r\n  labelCode: string;\r\n\r\n  /**\r\n   * å­æ®µåç§°\r\n   */\r\n  name?: string;\r\n\r\n  /**\r\n   * æ¯å¦è¢«éä¸­\r\n   */\r\n  isChecked?: boolean;\r\n\r\n  /**\r\n   * æ¯å¦è¢«ç¦ç¨\r\n   */\r\n  isDisabled?: boolean;\r\n\r\n  /**\r\n   * å­æ®µä¸ºç©ºæ¶æç¤ºä¿¡æ¯\r\n   */\r\n  placeHolder?: string;\r\n  beginPlaceHolder?:string;\r\n  endPlaceHolder?:string;\r\n\r\n  control?: any;\r\n\r\n  value?: any;\r\n\r\n  visible?: boolean = true;\r\n\r\n  constructor(qc: QueryCondition) {\r\n    this.id = qc.id;\r\n    this.labelCode = qc.fieldCode;\r\n    this.name = qc.fieldName;\r\n  }\r\n\r\n\r\n}\r\n"]}