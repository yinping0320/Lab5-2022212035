/**
 * @fileoverview added by tsickle
 * Generated from: lib/controlcomponent/combolookup/combolookup.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { SolutionService } from '../../service/solution.service';
export class ComboLookUpComponent {
    /**
     * @param {?} solutionService
     */
    constructor(solutionService) {
        this.solutionService = solutionService;
        this.hideLabel = false;
        /**
         * 某个字段发生值变化事件时，需要同步清空的字段，可能不是当前字段
         */
        this.changeFields = [];
        this.conditionChange = new EventEmitter();
        this.selectedValues = "";
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.getComboLookUpBindingInfo();
        this.testId = this.solutionService.getGuid();
        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);
        this.autoWidth = false;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        this.getComboLookUpBindingInfo();
        if (changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {
            /** @type {?} */
            const isChange = changes['changeFields'].currentValue.some((/**
             * @param {?} field
             * @return {?}
             */
            field => field == this.item.fieldCode));
            if (isChange) {
                this.textValue = ((/** @type {?} */ (this.item.value))).textValue;
            }
        }
    }
    /**
     * @param {?} data
     * @return {?}
     */
    valueChangeHandler(data) {
        /** @type {?} */
        const helpValue = ((/** @type {?} */ (this.item.value)));
        helpValue.value = data.selections;
        helpValue.valueField = this.valueField;
        helpValue.textValue = helpValue.getTextValue(this.textField);
        this.textValue = helpValue.textValue;
        this.conditionChange.emit();
    }
    /**
     * @return {?}
     */
    getComboLookUpBindingInfo() {
        /** @type {?} */
        const comboLookUpControl = ((/** @type {?} */ (this.item.control)));
        this.uri = comboLookUpControl.uri;
        this.idField = comboLookUpControl.idField;
        this.valueField = comboLookUpControl.valueField;
        this.textField = comboLookUpControl.textField;
        this.mapFields = comboLookUpControl.mapFields;
        this.displayType = comboLookUpControl.displayType;
        this.preEventCmd = comboLookUpControl.preEventCmd;
        this.postEventCmd = comboLookUpControl.postEventCmd;
        this.enableFullTree = comboLookUpControl.enableFullTree;
        this.multiSelect = comboLookUpControl.singleSelect === true ? false : true;
        this.panelWidth = comboLookUpControl.panelWidth ? comboLookUpControl.panelWidth : 300;
        this.panelHeight = comboLookUpControl.panelHeight ? comboLookUpControl.panelHeight : 300;
        this.loadTreeDataType = comboLookUpControl.loadTreeDataType;
        this.context = comboLookUpControl.context;
        /** @type {?} */
        const comboLookUpValue = ((/** @type {?} */ (this.item.value)));
        if (comboLookUpValue.textValue == 'help-text-value-null') { //旧数据兼容
            this.textValue = comboLookUpValue.getTextValue(this.textField);
        }
        else {
            this.textValue = comboLookUpValue.textValue;
        }
        if (comboLookUpValue && comboLookUpValue.value) {
            this.selectedValues = (comboLookUpValue.value || []).map((/**
             * @param {?} n
             * @return {?}
             */
            n => n[this.idField])).join(',');
        }
    }
    /**
     * @param {?} data
     * @return {?}
     */
    clearData(data) {
        ((/** @type {?} */ (this.item.value))).clearValue();
        this.conditionChange.emit();
    }
    /**
     * @param {?} field
     * @return {?}
     */
    getConditionItemTitle(field) {
        return this.solutionService.getConditionItemTitle(field);
    }
}
ComboLookUpComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-solution-combolookup',
                template: "<div class=\"farris-group-wrap\" id=\"{{item.id}}\">\r\n    <div class=\"form-group farris-form-group common-group \"  [ngClass]=\"{'q-state-readonly':item.readonly}\">\r\n        <label class=\"col-form-label\" *ngIf=\"item && !hideLabel\" title=\"{{getConditionItemTitle(item)}}\">\r\n            <span class=\"farris-label-info text-danger\" *ngIf=\"item.control.isRequired()\">*</span>\r\n            <span class=\"farris-label-text\">{{item.fieldName}}</span>\r\n        </label>\r\n        <div class=\"farris-input-wrap\">\r\n            <farris-combo-lookup *ngIf=\"item\"\r\n                [uri]=\"uri\"\r\n                [placeholder]=\"placeholder\"\r\n                [(ngModel)]=\"textValue\"\r\n                [idField]=\"idField\"\r\n                [valueField]=\"valueField\"\r\n                [textField]=\"textField\"\r\n                [mapFields]=\"mapFields\"\r\n                [displayType]=\"displayType\"\r\n                [multiSelect]=\"multiSelect\"\r\n                [enableFullTree]=\"enableFullTree\"\r\n                [selectedValues]=\"selectedValues\"\r\n                [beforeShow]=\"preEventCmd\"\r\n                [beforeHide]=\"postEventCmd\"\r\n                (valueChange)=\"valueChangeHandler($event)\"\r\n                (clear)=\"clearData($event)\"\r\n                [autoWidth]=\"autoWidth\"\r\n                [panelWidth]=\"panelWidth\"\r\n                [panelHeight]=\"panelHeight\"\r\n                [readonly]=\"item.readonly\"\r\n                [loadTreeDataType]=\"loadTreeDataType\"\r\n                [context]=\"context\"\r\n                id=\"{{testId}}\"\r\n            >\r\n        </farris-combo-lookup>\r\n        </div>\r\n    </div>\r\n</div>"
            }] }
];
/** @nocollapse */
ComboLookUpComponent.ctorParameters = () => [
    { type: SolutionService }
];
ComboLookUpComponent.propDecorators = {
    hideLabel: [{ type: Input }],
    item: [{ type: Input }],
    changeFields: [{ type: Input }],
    conditionChange: [{ type: Output, args: ['conditionChange',] }]
};
if (false) {
    /** @type {?} */
    ComboLookUpComponent.prototype.hideLabel;
    /**
     * QueryCondition类型
     * @type {?}
     */
    ComboLookUpComponent.prototype.item;
    /**
     * 某个字段发生值变化事件时，需要同步清空的字段，可能不是当前字段
     * @type {?}
     */
    ComboLookUpComponent.prototype.changeFields;
    /** @type {?} */
    ComboLookUpComponent.prototype.conditionChange;
    /** @type {?} */
    ComboLookUpComponent.prototype.uri;
    /** @type {?} */
    ComboLookUpComponent.prototype.idField;
    /** @type {?} */
    ComboLookUpComponent.prototype.valueField;
    /** @type {?} */
    ComboLookUpComponent.prototype.textField;
    /** @type {?} */
    ComboLookUpComponent.prototype.textValue;
    /** @type {?} */
    ComboLookUpComponent.prototype.mapFields;
    /** @type {?} */
    ComboLookUpComponent.prototype.displayType;
    /** @type {?} */
    ComboLookUpComponent.prototype.multiSelect;
    /** @type {?} */
    ComboLookUpComponent.prototype.preEventCmd;
    /** @type {?} */
    ComboLookUpComponent.prototype.postEventCmd;
    /** @type {?} */
    ComboLookUpComponent.prototype.enableFullTree;
    /** @type {?} */
    ComboLookUpComponent.prototype.testId;
    /** @type {?} */
    ComboLookUpComponent.prototype.placeholder;
    /** @type {?} */
    ComboLookUpComponent.prototype.autoWidth;
    /** @type {?} */
    ComboLookUpComponent.prototype.panelWidth;
    /** @type {?} */
    ComboLookUpComponent.prototype.panelHeight;
    /** @type {?} */
    ComboLookUpComponent.prototype.selectedValues;
    /** @type {?} */
    ComboLookUpComponent.prototype.loadTreeDataType;
    /** @type {?} */
    ComboLookUpComponent.prototype.context;
    /**
     * @type {?}
     * @private
     */
    ComboLookUpComponent.prototype.solutionService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYm9sb29rdXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9jb21wb25lbnQtcXVlcnljb25kaXRpb24vIiwic291cmNlcyI6WyJsaWIvY29udHJvbGNvbXBvbmVudC9jb21ib2xvb2t1cC9jb21ib2xvb2t1cC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFFLFlBQVksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFJekcsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBT2pFLE1BQU0sT0FBTyxvQkFBb0I7Ozs7SUFvQzdCLFlBQW9CLGVBQWdDO1FBQWhDLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtRQWpDM0MsY0FBUyxHQUFXLEtBQUssQ0FBQTs7OztRQVN6QixpQkFBWSxHQUFrQixFQUFFLENBQUM7UUFFZixvQkFBZSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFrQmhFLG1CQUFjLEdBQUcsRUFBRSxDQUFDO0lBSW1DLENBQUM7Ozs7SUFFeEQsUUFBUTtRQUNKLElBQUksQ0FBQyx5QkFBeUIsRUFBRSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUM3QyxJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3ZHLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO0lBQzNCLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQzlCLElBQUksQ0FBQyx5QkFBeUIs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bEIsOENBQXdCOztJQUN4QixzQ0FBZTs7SUFDZiwyQ0FBb0I7O0lBQ3BCLHlDQUFtQjs7SUFDbkIsMENBQW1COztJQUNuQiwyQ0FBb0I7O0lBQ3BCLDhDQUFvQjs7SUFDcEIsZ0RBQXlCOztJQUN6Qix1Q0FBYTs7Ozs7SUFFRCwrQ0FBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQsIE9uQ2hhbmdlcywgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUXVlcnlDb25kaXRpb24gfSBmcm9tICcuLi8uLi9lbnRpdHkvcXVlcnljb25kaXRpb24nO1xyXG5pbXBvcnQgeyBDb21ib0xvb2tVcENvbnRyb2wgfSBmcm9tICcuLi8uLi9lbnRpdHkvY29udHJvbHR5cGUvY29tYm9sb29rdXAvY29tYm9sb29rdXAtY29udHJvbCc7XHJcbmltcG9ydCB7IENvbWJvTG9va1VwVmFsdWUgfSBmcm9tICcuLi8uLi9lbnRpdHkvY29uZGl0aW9udmFsdWUvY29tYm9sb29rdXAtdmFsdWUnO1xyXG5pbXBvcnQgeyBTb2x1dGlvblNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlL3NvbHV0aW9uLnNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2FwcC1zb2x1dGlvbi1jb21ib2xvb2t1cCcsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vY29tYm9sb29rdXAuY29tcG9uZW50Lmh0bWwnLFxyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIENvbWJvTG9va1VwQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LE9uQ2hhbmdlc3tcclxuICAgXHJcblxyXG4gICAgQElucHV0KCkgaGlkZUxhYmVsOmJvb2xlYW4gPSBmYWxzZVxyXG4gICAgLyoqXHJcbiAgICAgKiBRdWVyeUNvbmRpdGlvbuexu+Wei1xyXG4gICAgICovXHJcbiAgICBASW5wdXQoKSBpdGVtOmFueTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOafkOS4quWtl+auteWPkeeUn+WAvOWPmOWMluS6i+S7tuaXtu+8jOmcgOimgeWQjOatpea4heepuueahOWtl+aute+8jOWPr+iDveS4jeaYr+W9k+WJjeWtl+autVxyXG4gICAgICovXHJcbiAgICBASW5wdXQoKSBjaGFuZ2VGaWVsZHM6IEFycmF5PHN0cmluZz4gPSBbXTtcclxuXHJcbiAgICBAT3V0cHV0KCdjb25kaXRpb25DaGFuZ2UnKSBjb25kaXRpb25DaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gICAgdXJpOiBzdHJpbmc7XHJcbiAgICBpZEZpZWxkOiBhbnk7XHJcbiAgICB2YWx1ZUZpZWxkOiBhbnk7XHJcbiAgICB0ZXh0RmllbGQ6IHN0cmluZztcclxuICAgIHRleHRWYWx1ZTogYW55O1xyXG4gICAgbWFwRmllbGRzOiBhbnk7XHJcbiAgICBkaXNwbGF5VHlwZTogYW55O1xyXG4gICAgbXVsdGlTZWxlY3Q6IGJvb2xlYW47XHJcbiAgICBwcmVFdmVudENtZDogYW55O1xyXG4gICAgcG9zdEV2ZW50Q21kOiBhbnk7XHJcbiAgICBlbmFibGVGdWxsVHJlZTogYm9vbGVhbjtcclxuICAgIHRlc3RJZDogc3RyaW5nO1xyXG4gICAgcGxhY2Vob2xkZXI6IHN0cmluZztcclxuICAgIGF1dG9XaWR0aDogYm9vbGVhbjtcclxuICAgIHBhbmVsV2lkdGg6IG51bWJlcjtcclxuICAgIHBhbmVsSGVpZ2h0OiBudW1iZXI7XHJcbiAgICBzZWxlY3RlZFZhbHVlcyA9IFwiXCI7XHJcbiAgICBsb2FkVHJlZURhdGFUeXBlOiBzdHJpbmc7XHJcbiAgICBjb250ZXh0OiBhbnk7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBzb2x1dGlvblNlcnZpY2U6IFNvbHV0aW9uU2VydmljZSl7IH1cclxuXHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmdldENvbWJvTG9va1VwQmluZGluZ0luZm8oKTtcclxuICAgICAgICB0aGlzLnRlc3RJZCA9IHRoaXMuc29sdXRpb25TZXJ2aWNlLmdldEd1aWQoKTtcclxuICAgICAgICB0aGlzLnBsYWNlaG9sZGVyID0gKHRoaXMuaXRlbS5wbGFjZUhvbGRlcikgPyAodGhpcy5pdGVtLnBsYWNlSG9sZGVyKSA6ICh0aGlzLml0ZW0uY29udHJvbC5wbGFjZWhvbGRlcik7XHJcbiAgICAgICAgdGhpcy5hdXRvV2lkdGggPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5nZXRDb21ib0xvb2tVcEJpbmRpbmdJbmZvKCk7XHJcbiAgICAgICAgaWYoY2hhbmdlc1snY2hhbmdlRmllbGRzJ10gJiYgY2hhbmdlc1snY2hhbmdlRmllbGRzJ10uY3VycmVudFZhbHVlICYmICFjaGFuZ2VzWydjaGFuZ2VGaWVsZHMnXS5maXJzdENoYW5nZSkge1xyXG4gICAgICAgICAgICBjb25zdCBpc0NoYW5nZSA9IGNoYW5nZXNbJ2NoYW5nZUZpZWxkcyddLmN1cnJlbnRWYWx1ZS5zb21lKGZpZWxkID0+IGZpZWxkID09IHRoaXMuaXRlbS5maWVsZENvZGUpO1xyXG4gICAgICAgICAgICBpZihpc0NoYW5nZSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRleHRWYWx1ZSA9ICh0aGlzLml0ZW0udmFsdWUgYXMgQ29tYm9Mb29rVXBWYWx1ZSkudGV4dFZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHZhbHVlQ2hhbmdlSGFuZGxlcihkYXRhOiBhbnkpe1xyXG4gICAgICAgIGNvbnN0IGhlbHBWYWx1ZSA9ICh0aGlzLml0ZW0udmFsdWUgYXMgQ29tYm9Mb29rVXBWYWx1ZSk7XHJcbiAgICAgICAgaGVscFZhbHVlLnZhbHVlID0gZGF0YS5zZWxlY3Rpb25zO1xyXG4gICAgICAgIGhlbHBWYWx1ZS52YWx1ZUZpZWxkID0gdGhpcy52YWx1ZUZpZWxkO1xyXG4gICAgICAgIGhlbHBWYWx1ZS50ZXh0VmFsdWUgPSBoZWxwVmFsdWUuZ2V0VGV4dFZhbHVlKHRoaXMudGV4dEZpZWxkKTtcclxuICAgICAgICB0aGlzLnRleHRWYWx1ZSA9IGhlbHBWYWx1ZS50ZXh0VmFsdWU7XHJcbiAgICAgICAgdGhpcy5jb25kaXRpb25DaGFuZ2UuZW1pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldENvbWJvTG9va1VwQmluZGluZ0luZm8oKXtcclxuICAgICAgICBjb25zdCBjb21ib0xvb2tVcENvbnRyb2wgPSAodGhpcy5pdGVtLmNvbnRyb2wgYXMgQ29tYm9Mb29rVXBDb250cm9sKTtcclxuICAgICAgICB0aGlzLnVyaSA9IGNvbWJvTG9va1VwQ29udHJvbC51cmk7XHJcbiAgICAgICAgdGhpcy5pZEZpZWxkID0gY29tYm9Mb29rVXBDb250cm9sLmlkRmllbGQ7XHJcbiAgICAgICAgdGhpcy52YWx1ZUZpZWxkID0gY29tYm9Mb29rVXBDb250cm9sLnZhbHVlRmllbGQ7XHJcbiAgICAgICAgdGhpcy50ZXh0RmllbGQgPSBjb21ib0xvb2tVcENvbnRyb2wudGV4dEZpZWxkO1xyXG4gICAgICAgIHRoaXMubWFwRmllbGRzID0gY29tYm9Mb29rVXBDb250cm9sLm1hcEZpZWxkcztcclxuICAgICAgICB0aGlzLmRpc3BsYXlUeXBlID0gY29tYm9Mb29rVXBDb250cm9sLmRpc3BsYXlUeXBlO1xyXG4gICAgICAgIHRoaXMucHJlRXZlbnRDbWQgPSBjb21ib0xvb2tVcENvbnRyb2wucHJlRXZlbnRDbWQ7XHJcbiAgICAgICAgdGhpcy5wb3N0RXZlbnRDbWQgPSBjb21ib0xvb2tVcENvbnRyb2wucG9zdEV2ZW50Q21kO1xyXG4gICAgICAgIHRoaXMuZW5hYmxlRnVsbFRyZWUgPSBjb21ib0xvb2tVcENvbnRyb2wuZW5hYmxlRnVsbFRyZWU7XHJcbiAgICAgICAgdGhpcy5tdWx0aVNlbGVjdCA9IGNvbWJvTG9va1VwQ29udHJvbC5zaW5nbGVTZWxlY3QgPT09IHRydWUgPyBmYWxzZSA6IHRydWU7XHJcbiAgICAgICAgdGhpcy5wYW5lbFdpZHRoID0gY29tYm9Mb29rVXBDb250cm9sLnBhbmVsV2lkdGggPyBjb21ib0xvb2tVcENvbnRyb2wucGFuZWxXaWR0aCA6IDMwMDtcclxuICAgICAgICB0aGlzLnBhbmVsSGVpZ2h0ID0gY29tYm9Mb29rVXBDb250cm9sLnBhbmVsSGVpZ2h0ID8gY29tYm9Mb29rVXBDb250cm9sLnBhbmVsSGVpZ2h0IDogMzAwO1xyXG4gICAgICAgIHRoaXMubG9hZFRyZWVEYXRhVHlwZSA9IGNvbWJvTG9va1VwQ29udHJvbC5sb2FkVHJlZURhdGFUeXBlO1xyXG4gICAgICAgIHRoaXMuY29udGV4dCA9IGNvbWJvTG9va1VwQ29udHJvbC5jb250ZXh0O1xyXG4gICAgICAgIGNvbnN0IGNvbWJvTG9va1VwVmFsdWUgPSAodGhpcy5pdGVtLnZhbHVlIGFzIENvbWJvTG9va1VwVmFsdWUpO1xyXG4gICAgICAgIGlmKGNvbWJvTG9va1VwVmFsdWUudGV4dFZhbHVlID09ICdoZWxwLXRleHQtdmFsdWUtbnVsbCcpey8v5pen5pWw5o2u5YW85a65XHJcbiAgICAgICAgICAgIHRoaXMudGV4dFZhbHVlID0gY29tYm9Mb29rVXBWYWx1ZS5nZXRUZXh0VmFsdWUodGhpcy50ZXh0RmllbGQpO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB0aGlzLnRleHRWYWx1ZSA9IGNvbWJvTG9va1VwVmFsdWUudGV4dFZhbHVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGNvbWJvTG9va1VwVmFsdWUgJiYgY29tYm9Mb29rVXBWYWx1ZS52YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkVmFsdWVzID0gKGNvbWJvTG9va1VwVmFsdWUudmFsdWUgfHwgW10pLm1hcChuID0+IG5bdGhpcy5pZEZpZWxkXSkuam9pbignLCcpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjbGVhckRhdGEoZGF0YTogYW55KXtcclxuICAgICAgICAodGhpcy5pdGVtLnZhbHVlIGFzIENvbWJvTG9va1VwVmFsdWUpLmNsZWFyVmFsdWUoKTtcclxuICAgICAgICB0aGlzLmNvbmRpdGlvbkNoYW5nZS5lbWl0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q29uZGl0aW9uSXRlbVRpdGxlKGZpZWxkOlF1ZXJ5Q29uZGl0aW9uKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5zb2x1dGlvblNlcnZpY2UuZ2V0Q29uZGl0aW9uSXRlbVRpdGxlKGZpZWxkKTtcclxuICAgIH1cclxufSJdfQ==