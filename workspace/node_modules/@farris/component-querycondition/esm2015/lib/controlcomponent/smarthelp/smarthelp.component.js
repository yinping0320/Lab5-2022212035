/**
 * @fileoverview added by tsickle
 * Generated from: lib/controlcomponent/smarthelp/smarthelp.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';
import { SolutionService } from '../../service/solution.service';
import { LookupGridComponent } from '@farris/ui-lookup';
import { of } from 'rxjs';
export class SolutionSmartHelpComponent {
    /**
     * @param {?} solutionService
     */
    constructor(solutionService) {
        this.solutionService = solutionService;
        this.hideLabel = false;
        /**
         * 某个字段发生值变化事件时，需要同步清空的字段，可能不是当前字段
         */
        this.changeFields = [];
        this.conditionChange = new EventEmitter();
        this.mappingEmitter = new EventEmitter();
        this.clearFieldsChange = new EventEmitter();
        /**
         * 每页记录数
         */
        this.pageSize = 20;
        /**
         * 可用分页记录数列表
         */
        this.pageList = [10, 20, 30, 50, 100];
        // 启用多字段查询
        this.enableMultiFieldSearch = false;
        this.onBeforeOpen = (/**
         * @return {?}
         */
        () => {
            /** @type {?} */
            const t = (/** @type {?} */ (this.item.value));
            if (t && t.value) {
                /** @type {?} */
                const ids = t.value.map((/**
                 * @param {?} n
                 * @return {?}
                 */
                n => n[this.idField || 'id'])).join(',');
                this.lookup.displayValue = ids;
            }
            this.clearFieldsChange.emit({
                controlType: ((/** @type {?} */ (this.item.control))).getControlType(),
                canClearRelatedFields: true
            });
            return of(true);
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.getSmartHelpBindingInfo();
        //this.testId = this.solutionService.getGuid();
        this.testId = this.instanceId;
        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);
        this.lookup.textChanged.subscribe((/**
         * @param {?} v
         * @return {?}
         */
        (v) => {
            this.textChangedHandler(v);
        }));
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        this.getSmartHelpBindingInfo();
        if (changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {
            /** @type {?} */
            const isChange = changes['changeFields'].currentValue.some((/**
             * @param {?} field
             * @return {?}
             */
            field => field == this.item.fieldCode));
            if (isChange) {
                this.textValue = ((/** @type {?} */ (this.item.value))).textValue;
            }
        }
    }
    //ITEM：
    //control: SmartHelpContol {uri: "WuLiao.wOrgId", textField: "name", valueField: "code", mapFields: {}, idField: "id"}
    // fieldCode: "wOrgId"
    // fieldName: "所属机构"
    // id: "WuLiao.wOrgId"
    // value: SmartHelpValue {valueField: null, value: null}
    // valueType: 0
    /**
     * @return {?}
     */
    getSmartHelpBindingInfo() {
        /** @type {?} */
        const smartHelpControl = ((/** @type {?} */ (this.item.control)));
        this.uri = smartHelpControl.uri;
        this.textField = smartHelpControl.textField;
        this.idField = smartHelpControl.idField;
        this.valueField = smartHelpControl.valueField;
        this.displayType = smartHelpControl.displayType;
        this.mapFields = smartHelpControl.mapFields;
        this.context = smartHelpControl.context;
        this.preEventCmd = smartHelpControl.preEventCmd;
        this.postEventCmd = smartHelpControl.postEventCmd;
        this.enableFullTree = smartHelpControl.enableFullTree;
        this.loadTreeDataType = smartHelpControl.loadTreeDataType;
        this.singleSelect = smartHelpControl.singleSelect === false ? false : true;
        this.expandLevel = smartHelpControl.expandLevel;
        this.enableCascade = smartHelpControl.enableCascade;
        this.cascadeStatus = smartHelpControl.cascadeStatus ? smartHelpControl.cascadeStatus : 'enable';
        // 标题
        this.dialogTitle = smartHelpControl.dialogTitle ? smartHelpControl.dialogTitle : '';
        // 宽度
        this.dialogWidth = smartHelpControl.panelWidth;
        // 高度
        this.dialogHeight = smartHelpControl.panelHeight;
        /** @type {?} */
        const smartHelpValue = ((/** @type {?} */ (this.item.value)));
        if (smartHelpValue.textValue == 'help-text-value-null') { //旧数据兼容
            this.textValue = smartHelpValue.getTextValue(this.textField);
        }
        else {
            this.textValue = smartHelpValue.textValue;
        }
        this.nosearch = smartHelpControl.nosearch; //默认false
        this.displayFields = smartHelpControl.displayFields ? smartHelpControl.displayFields : '';
        this.displayTextSeparator = smartHelpControl.displayTextSeparator ? smartHelpControl.displayTextSeparator : '_';
        this.editable = smartHelpControl.editable;
        this.clearFields = smartHelpControl.clearFields;
        if (smartHelpControl.hasOwnProperty('pageSize') && smartHelpControl.pageSize) {
            this.pageSize = smartHelpControl.pageSize;
        }
        if (smartHelpControl.hasOwnProperty('pageList') && smartHelpControl.pageList) {
            this.pageList = smartHelpControl.pageList.split(",").map((/**
             * @param {?} item
             * @return {?}
             */
            item => { return parseInt(item); }));
        }
        if (smartHelpControl.hasOwnProperty('quickSelect') && smartHelpControl.quickSelect) {
            this.quickSelect = smartHelpControl.quickSelect;
        }
        if (smartHelpControl.hasOwnProperty('enableMultiFieldSearch') && smartHelpControl.enableMultiFieldSearch) {
            this.enableMultiFieldSearch = smartHelpControl.enableMultiFieldSearch;
        }
    }
    /**
     * @param {?} data
     * @return {?}
     */
    clearData(data) {
        ((/** @type {?} */ (this.item.value))).clearValue();
        if (this.item.control.clear) {
            this.item.control.clear();
        }
        this.conditionChange.emit();
    }
    /**
     * @param {?} field
     * @return {?}
     */
    getConditionItemTitle(field) {
        return this.solutionService.getConditionItemTitle(field);
    }
    /**
     * selectedItem
     * code: "code02"
     * id: "id02"
     * name: "机构02"
     * version: "2019-10-21T00:00:00"
     * @param {?} data
     * @return {?}
     */
    textChangedHandler(data) {
        if (this.item && this.item.value) {
            /** @type {?} */
            const helpValue = ((/** @type {?} */ (this.item.value)));
            helpValue.value = [data];
            helpValue.textValue = data;
            helpValue.isInputText = true;
            // this.textValue = helpValue.textValue;
            this.conditionChange.emit();
        }
    }
    /**
     * @param {?} selectedItem
     * @return {?}
     */
    selectedDataHandler(selectedItem) {
        //选择时触发
        /** @type {?} */
        const helpValue = ((/** @type {?} */ (this.item.value)));
        helpValue.value = this.singleSelect ? [selectedItem] : selectedItem; //单选返回对象，多选返回数组
        helpValue.valueField = this.valueField;
        helpValue.textValue = this.textValue;
        helpValue.isInputText = false;
        this.conditionChange.emit();
    }
}
SolutionSmartHelpComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-solution-smarthelp',
                template: "<div class=\"farris-group-wrap\" id=\"{{item.id}}\" >\r\n    <div class=\"form-group farris-form-group common-group\" [ngClass]=\"{'q-state-readonly':item.readonly}\">\r\n        <label class=\"col-form-label\" title=\"{{getConditionItemTitle(item)}}\" *ngIf=\"item && !hideLabel\">\r\n            <span class=\"farris-label-info text-danger\" *ngIf=\"item.control.isRequired()\">*</span>\r\n            <span class=\"farris-label-text\">{{item.fieldName}}</span>\r\n        </label>\r\n        <div class=\"farris-input-wrap\">\r\n            <farris-lookup-grid #lookup\r\n                id=\"{{testId}}\"                \r\n                [clear-fields]=\"clearFields\"\r\n                [uri]=\"uri\"\r\n                [placeholder]=\"placeholder\"\r\n                [(ngModel)]=\"textValue\"\r\n                [textField]=\"textField\"\r\n                [valueField]=\"valueField\"\r\n                [idField]=\"idField\"\r\n                [mapFields]=\"mapFields\"\r\n                [displayType]=\"displayType\"\r\n                [title]=\"dialogTitle\"\r\n                [dialogWidth]=\"dialogWidth\"\r\n                [dialogHeight]=\"dialogHeight\"\r\n                [context]=\"context\"\r\n                [dictPicking]=\"preEventCmd\"\r\n                [dictPicked]=\"postEventCmd\"\r\n                [enableFullTree]=\"enableFullTree\"\r\n                [loadTreeDataType]=\"loadTreeDataType\"\r\n                [singleSelect]=\"singleSelect\"\r\n                [expandLevel]=\"expandLevel\"\r\n                [enableCascade]=\"enableCascade\"\r\n                [cascadeStatus]=\"cascadeStatus\"\r\n                [readonly]=\"item.readonly\"\r\n                [nosearch]=\"nosearch\"\r\n                [beforeOpen]=\"onBeforeOpen\"\r\n                [displayFields]=\"displayFields\"\r\n                [displayTextSeparator]=\"displayTextSeparator\"\r\n                [editable]=\"editable\"\r\n                [pageSize]=\"pageSize\"\r\n                [pageList]=\"pageList\"\r\n                [useFavorite]=\"true\"\r\n                [quickSelect]=\"quickSelect\"\r\n                [enableMultiFieldSearch]=\"enableMultiFieldSearch\"\r\n                (selectedData)=\"selectedDataHandler($event)\"\r\n                (clear)=\"clearData($event)\"\r\n            >\r\n        </farris-lookup-grid>\r\n        <!-- [singleSelect]=\"true\" -->\r\n        </div>\r\n\r\n    </div>\r\n</div>"
            }] }
];
/** @nocollapse */
SolutionSmartHelpComponent.ctorParameters = () => [
    { type: SolutionService }
];
SolutionSmartHelpComponent.propDecorators = {
    hideLabel: [{ type: Input }],
    item: [{ type: Input }],
    changeFields: [{ type: Input }],
    instanceId: [{ type: Input }],
    conditionChange: [{ type: Output, args: ['conditionChange',] }],
    mappingEmitter: [{ type: Output, args: ['helpMapping',] }],
    clearFieldsChange: [{ type: Output, args: ['clearFieldsChange',] }],
    lookup: [{ type: ViewChild, args: ['lookup',] }]
};
if (false) {
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.hideLabel;
    /**
     * QueryCondition类型
     * @type {?}
     */
    SolutionSmartHelpComponent.prototype.item;
    /**
     * 某个字段发生值变化事件时，需要同步清空的字段，可能不是当前字段
     * @type {?}
     */
    SolutionSmartHelpComponent.prototype.changeFields;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.instanceId;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.conditionChange;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.mappingEmitter;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.clearFieldsChange;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.lookup;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.uri;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.textField;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.mapFields;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.idField;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.valueField;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.textValue;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.displayType;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.context;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.preEventCmd;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.postEventCmd;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.loadTreeDataType;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.enableFullTree;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.singleSelect;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.expandLevel;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.enableCascade;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.cascadeStatus;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.testId;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.placeholder;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.nosearch;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.displayFields;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.displayTextSeparator;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.editable;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.clearFields;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.dialogTitle;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.dialogWidth;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.dialogHeight;
    /**
     * 每页记录数
     * @type {?}
     */
    SolutionSmartHelpComponent.prototype.pageSize;
    /**
     * 可用分页记录数列表
     * @type {?}
     */
    SolutionSmartHelpComponent.prototype.pageList;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.quickSelect;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.enableMultiFieldSearch;
    /** @type {?} */
    SolutionSmartHelpComponent.prototype.onBeforeOpen;
    /**
     * @type {?}
     * @private
     */
    SolutionSmartHelpComponent.prototype.solutionService;
}
//# sourceMappingURL=data:application/json;base64,