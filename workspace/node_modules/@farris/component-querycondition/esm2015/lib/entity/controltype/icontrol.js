/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/controltype/icontrol.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ControlType } from "../controltype";
import { DropDownListControlConvert } from "./dropdownlist/dropdownlistcontrol";
import { TextControl } from "./text/textcontrol";
import { DateRangeControl } from "./daterange/date-range.control";
import { SingleDateControl } from "./date/single-date-control";
import { SmartHelpContol } from "./smarthelp/smarthelpcontrol";
import { NumberRangeControl } from "./numberrange/numberrangecontrol";
import { SingleNumberControl } from './number/single-number-control';
import { SingleYearControl } from './year/year-control';
import { CheckBoxControl } from './checkbox/checkbox-control';
import { DateTimeRangeControl } from './daterange/datertime-range-control';
import { SingleMonthControl } from './month/month-control';
import { MonthRangeControl } from './monthrange/month-range-control';
import { SingleDateTimeControl } from './date/single-date-time-control';
import { ComboLookUpControl } from './combolookup/combolookup-control';
import { RadioControlConvert } from './radio/radio-control';
import { InputGroupControl } from './input-group/inputgroupcontrol';
/**
 * 控件接口
 * @record
 */
export function IControl() { }
if (false) {
    /**
     * 获取控件类型
     * @return {?}
     */
    IControl.prototype.getControlType = function () { };
    /**
     * 控件是否必填
     * @return {?}
     */
    IControl.prototype.isRequired = function () { };
}
export class ControlConvert {
    /**
     * @param {?} obj
     * @return {?}
     */
    convertJObject(obj) {
        /** @type {?} */
        let control = (/** @type {?} */ (obj));
        /** @type {?} */
        let controlType = control.getControlType();
        /** @type {?} */
        let jobj = new Object();
        jobj["Type"] = controlType;
        if (controlType == ControlType.DropDownList) {
            /** @type {?} */
            let convertor = new DropDownListControlConvert();
            jobj["Content"] = convertor.convertToObject((/** @type {?} */ (control)));
        }
        else if (controlType == ControlType.Radio) {
            /** @type {?} */
            let convertor = new RadioControlConvert();
            jobj["Content"] = convertor.convertToObject((/** @type {?} */ (control)));
        }
        else {
            jobj["Content"] = control;
        }
        return jobj;
    }
    /**
     * @param {?} jobj
     * @return {?}
     */
    initFromJobject(jobj) {
        /** @type {?} */
        let controlType = (/** @type {?} */ (jobj["Type"]));
        /** @type {?} */
        let content = jobj["Content"];
        if (controlType == ControlType.Text)
            return Object.assign(new TextControl(), (/** @type {?} */ (content)));
        if (controlType == ControlType.InputGroup)
            return Object.assign(new InputGroupControl(), (/** @type {?} */ (content)));
        if (controlType == ControlType.DateRange)
            return Object.assign(new DateRangeControl(), (/** @type {?} */ (content)));
        if (controlType == ControlType.NumberRange)
            return Object.assign(new NumberRangeControl(), (/** @type {?} */ (content)));
        if (controlType == ControlType.SingleDate)
            return Object.assign(new SingleDateControl(), (/** @type {?} */ (content)));
        if (controlType == ControlType.SingleNumber)
            return Object.assign(new SingleNumberControl(), (/** @type {?} */ (content)));
        if (controlType == ControlType.DropDownList)
            return new DropDownListControlConvert().initFromObject(content);
        if (controlType == ControlType.SmartHelp)
            return Object.assign(new SmartHelpContol(), (/** @type {?} */ (content)));
        if (controlType == ControlType.ComboLookUp)
            return Object.assign(new ComboLookUpControl(), (/** @type {?} */ (content)));
        if (controlType == ControlType.SingleYear)
            return Object.assign(new SingleYearControl(), (/** @type {?} */ (content)));
        if (controlType == ControlType.SingleMonth)
            return Object.assign(new SingleMonthControl(), (/** @type {?} */ (content)));
        if (controlType == ControlType.BoolCheck)
            return Object.assign(new CheckBoxControl(), (/** @type {?} */ (content)));
        if (controlType == ControlType.Radio)
            return new RadioControlConvert().initFromObject(content);
        if (controlType == ControlType.DateTimeRange)
            return Object.assign(new DateTimeRangeControl(), (/** @type {?} */ (content)));
        if (controlType == ControlType.MonthRange)
            return Object.assign(new MonthRangeControl(), (/** @type {?} */ (content)));
        if (controlType == ControlType.SingleDateTime)
            return Object.assign(new SingleDateTimeControl(), (/** @type {?} */ (content)));
    }
}
//# sourceMappingURL=data:application/json;base64,