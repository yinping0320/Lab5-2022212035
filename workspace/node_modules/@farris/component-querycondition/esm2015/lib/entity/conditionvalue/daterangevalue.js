/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/conditionvalue/daterangevalue.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ControlType } from "../controltype";
export class DateRangeValue {
    /**
     * @param {?} value
     * @return {?}
     */
    setOriginalValue(value) {
        if (value.formatted) {
            this.startTime = value.formatted.split(value.delimiter)[0];
            this.endTime = value.formatted.split(value.delimiter)[1];
        }
        else {
            this.clearValue();
        }
    }
    /**
     * @return {?}
     */
    getOriginalValue() {
        if (!this.startTime && !this.endTime) {
            return '';
        }
        return `${this.startTime}~${this.endTime}`;
    }
    /**
     * @return {?}
     */
    getControlType() {
        return ControlType.DateRange;
    }
    /**
     * @return {?}
     */
    clearValue() {
        this.startTime = undefined;
        this.endTime = undefined;
    }
    /**
     * @param {?=} value
     */
    constructor(value = { startTime: '', endTime: '' }) {
        this.startTime = value.startTime;
        this.endTime = value.endTime;
    }
    /**
     * @return {?}
     */
    isEmpty() {
        return !this.startTime && !this.endTime;
    }
}
if (false) {
    /** @type {?} */
    DateRangeValue.prototype.startTime;
    /** @type {?} */
    DateRangeValue.prototype.endTime;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXJhbmdldmFsdWUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbXBvbmVudC1xdWVyeWNvbmRpdGlvbi8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvY29uZGl0aW9udmFsdWUvZGF0ZXJhbmdldmFsdWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0MsTUFBTSxPQUFPLGNBQWM7Ozs7O0lBQ3pCLGdCQUFnQixDQUFDLEtBQStDO1FBQzlELElBQUksS0FBSyxDQUFDLFNBQVMsRUFBRTtZQUNuQixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMzRCxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUMxRDthQUFNO1lBQ0wsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1NBQ25CO0lBQ0gsQ0FBQzs7OztJQUNELGdCQUFnQjtRQUNiLElBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBQztZQUNuQyxPQUFPLEVBQUUsQ0FBQztTQUNWO1FBQ0YsT0FBTyxHQUFHLElBQUksQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzdDLENBQUM7Ozs7SUFDRCxjQUFjO1FBQ1osT0FBTyxXQUFXLENBQUMsU0FBUyxDQUFDO0lBQy9CLENBQUM7Ozs7SUFDRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxTQUFTLENBQUM7SUFDM0IsQ0FBQzs7OztJQUlELFlBQVksUUFBZ0QsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7UUFDeEYsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQztJQUMvQixDQUFDOzs7O0lBQ0QsT0FBTztRQUNMLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUMxQyxDQUFDO0NBQ0Y7OztJQVZDLG1DQUFrQjs7SUFDbEIsaUNBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSVZhbHVlIH0gZnJvbSBcIi4vaXZhbHVlXCI7XHJcbmltcG9ydCB7IENvbnRyb2xUeXBlIH0gZnJvbSBcIi4uL2NvbnRyb2x0eXBlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgRGF0ZVJhbmdlVmFsdWUgaW1wbGVtZW50cyBJVmFsdWUge1xyXG4gIHNldE9yaWdpbmFsVmFsdWUodmFsdWU6IHsgZm9ybWF0dGVkOiBzdHJpbmcsIGRlbGltaXRlcjogc3RyaW5nIH0pOiB2b2lkIHtcclxuICAgIGlmICh2YWx1ZS5mb3JtYXR0ZWQpIHtcclxuICAgICAgdGhpcy5zdGFydFRpbWUgPSB2YWx1ZS5mb3JtYXR0ZWQuc3BsaXQodmFsdWUuZGVsaW1pdGVyKVswXTtcclxuICAgICAgdGhpcy5lbmRUaW1lID0gdmFsdWUuZm9ybWF0dGVkLnNwbGl0KHZhbHVlLmRlbGltaXRlcilbMV07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmNsZWFyVmFsdWUoKTtcclxuICAgIH1cclxuICB9XHJcbiAgZ2V0T3JpZ2luYWxWYWx1ZSgpIHtcclxuICAgICBpZighdGhpcy5zdGFydFRpbWUgJiYgIXRoaXMuZW5kVGltZSl7XHJcbiAgICAgIHJldHVybiAnJztcclxuICAgICB9XHJcbiAgICByZXR1cm4gYCR7dGhpcy5zdGFydFRpbWV9fiR7dGhpcy5lbmRUaW1lfWA7XHJcbiAgfVxyXG4gIGdldENvbnRyb2xUeXBlKCk6IENvbnRyb2xUeXBlIHtcclxuICAgIHJldHVybiBDb250cm9sVHlwZS5EYXRlUmFuZ2U7XHJcbiAgfVxyXG4gIGNsZWFyVmFsdWUoKTogdm9pZCB7XHJcbiAgICB0aGlzLnN0YXJ0VGltZSA9IHVuZGVmaW5lZDtcclxuICAgIHRoaXMuZW5kVGltZSA9IHVuZGVmaW5lZDtcclxuICB9XHJcbiAgc3RhcnRUaW1lOiBzdHJpbmc7XHJcbiAgZW5kVGltZTogc3RyaW5nO1xyXG5cclxuICBjb25zdHJ1Y3Rvcih2YWx1ZTogeyBzdGFydFRpbWU6IHN0cmluZywgZW5kVGltZTogc3RyaW5nIH0gPSB7IHN0YXJ0VGltZTogJycsIGVuZFRpbWU6ICcnIH0pIHtcclxuICAgIHRoaXMuc3RhcnRUaW1lID0gdmFsdWUuc3RhcnRUaW1lO1xyXG4gICAgdGhpcy5lbmRUaW1lID0gdmFsdWUuZW5kVGltZTtcclxuICB9XHJcbiAgaXNFbXB0eSgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiAhdGhpcy5zdGFydFRpbWUgJiYgIXRoaXMuZW5kVGltZTtcclxuICB9XHJcbn1cclxuIl19