/**
 * @fileoverview added by tsickle
 * Generated from: lib/querycondition-advanced/querycondition-item/querycondition-item.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Injector } from '@angular/core';
import { ControlType } from '../../entity/controltype';
import { IdService } from '@farris/ui-common';
import { StateService } from '../service/state.service';
export class QueryconditionItemComponent {
    /**
     * @param {?} injector
     */
    constructor(injector) {
        this.injector = injector;
        this.controlType = ControlType;
        this.fieldCodeOfClearFields = [];
        this.idService = this.injector.get(IdService);
        this.stateSer = this.injector.get(StateService);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    conditionChange() {
        this.stateSer.updateQueryConditionListData();
    }
    /**
     * @param {?} a
     * @return {?}
     */
    getStyle(a) {
        return '';
    }
    /**
     * @param {?} value
     * @return {?}
     */
    buildSmartHelpKey(value) {
        /** @type {?} */
        let prefix = '';
        if (location.hash) {
            /** @type {?} */
            const pathArr = location.hash.split('?');
            prefix = pathArr ? pathArr[0] : '';
        }
        else {
            /** @type {?} */
            const pathArr = location.pathname.split('/');
            prefix = pathArr ? pathArr[pathArr.length - 1] : '';
        }
        return this.idService.encrypt(prefix + '/querysolution/' + value);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    clearFieldsChange(event) {
    }
}
QueryconditionItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'querycondition-item',
                template: "<app-solution-input  \r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.Text && item.visible\"\r\n    [(item)]=\"item\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-input>\r\n\r\n<app-solution-inputgroup\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.InputGroup && item.visible\"\r\n    [(item)]=\"item\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-inputgroup>\r\n\r\n<app-solution-dropdownlist\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.DropDownList && item.visible\"\r\n    [(item)]=\"item\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-dropdownlist>\r\n\r\n<app-solution-smarthelp\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    (clearFieldsChange)=\"clearFieldsChange($event)\"\r\n    *ngIf=\"item.control.getControlType() == controlType.SmartHelp && item.visible\"\r\n    [(item)]=\"item\"\r\n    [instanceId]=\"buildSmartHelpKey(item.fieldCode)\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-smarthelp>\r\n\r\n<app-solution-single-number\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.SingleNumber && item.visible\"\r\n    [(item)]=\"item\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-single-number>\r\n\r\n\r\n\r\n<app-solution-datepicker\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.SingleDate && item.visible\"\r\n    [(item)]=\"item\"\r\n    [controlType]=\"item.control.getControlType()\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-datepicker>\r\n\r\n<app-solution-datepicker\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.DateRange && item.visible\"\r\n    [(item)]=\"item\"\r\n    [controlType]=\"item.control.getControlType()\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-datepicker>\r\n\r\n<app-solution-datepicker\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.SingleYear && item.visible\"\r\n    [(item)]=\"item\"\r\n    [controlType]=\"item.control.getControlType()\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-datepicker>\r\n\r\n<app-solution-datepicker\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.SingleMonth && item.visible\"\r\n    [(item)]=\"item\"\r\n    [controlType]=\"item.control.getControlType()\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-datepicker>\r\n\r\n<app-solution-datepicker\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.MonthRange && item.visible\"\r\n    [(item)]=\"item\"\r\n    [controlType]=\"item.control.getControlType()\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-datepicker>\r\n\r\n<app-solution-datepicker\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.SingleDateTime && item.visible\"\r\n    [(item)]=\"item\"\r\n    [controlType]=\"item.control.getControlType()\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-datepicker>\r\n\r\n<app-solution-datepicker\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.DateTimeRange && item.visible\"\r\n    [(item)]=\"item\"\r\n    [controlType]=\"item.control.getControlType()\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-datepicker>\r\n\r\n<app-solution-combolookup\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.ComboLookUp && item.visible\"\r\n    [(item)]=\"item\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-combolookup>\r\n\r\n<app-solution-checkbox\r\n    [ngClass]=\"getStyle(item)\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.BoolCheck && item.visible\"\r\n    [(item)]=\"item\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-checkbox>\r\n\r\n<app-solution-radio\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.Radio && item.visible\"\r\n    [(item)]=\"item\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-radio>",
                styles: [""]
            }] }
];
/** @nocollapse */
QueryconditionItemComponent.ctorParameters = () => [
    { type: Injector }
];
QueryconditionItemComponent.propDecorators = {
    item: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    QueryconditionItemComponent.prototype.controlType;
    /** @type {?} */
    QueryconditionItemComponent.prototype.item;
    /** @type {?} */
    QueryconditionItemComponent.prototype.fieldCodeOfClearFields;
    /**
     * @type {?}
     * @private
     */
    QueryconditionItemComponent.prototype.idService;
    /**
     * @type {?}
     * @private
     */
    QueryconditionItemComponent.prototype.stateSer;
    /**
     * @type {?}
     * @private
     */
    QueryconditionItemComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnljb25kaXRpb24taXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbXBvbmVudC1xdWVyeWNvbmRpdGlvbi8iLCJzb3VyY2VzIjpbImxpYi9xdWVyeWNvbmRpdGlvbi1hZHZhbmNlZC9xdWVyeWNvbmRpdGlvbi1pdGVtL3F1ZXJ5Y29uZGl0aW9uLWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsUUFBUSxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDOUMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDBCQUEwQixDQUFBO0FBTXZELE1BQU0sT0FBTywyQkFBMkI7Ozs7SUFRdEMsWUFBb0IsUUFBa0I7UUFBbEIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUx0QyxnQkFBVyxHQUFHLFdBQVcsQ0FBQztRQUUxQiwyQkFBc0IsR0FBa0IsRUFBRSxDQUFDO1FBSXpDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDOUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsUUFBUTtJQUNSLENBQUM7Ozs7SUFFRCxlQUFlO1FBQ2IsSUFBSSxDQUFDLFFBQVEsQ0FBQyw0QkFBNEIsRUFBRSxDQUFBO0lBQzlDLENBQUM7Ozs7O0lBRUQsUUFBUSxDQUFDLENBQUM7UUFDUixPQUFPLEVBQUUsQ0FBQTtJQUNYLENBQUM7Ozs7O0lBQ0QsaUJBQWlCLENBQUMsS0FBYTs7WUFDekIsTUFBTSxHQUFHLEVBQUU7UUFDZixJQUFJLFFBQVEsQ0FBQyxJQUFJLEVBQUU7O2tCQUNYLE9BQU8sR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7WUFDeEMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7U0FDcEM7YUFBTTs7a0JBQ0MsT0FBTyxHQUFHLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztZQUM1QyxNQUFNLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1NBQ3JEO1FBQ0QsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsaUJBQWlCLEdBQUcsS0FBSyxDQUFDLENBQUM7SUFDcEUsQ0FBQzs7Ozs7SUFDRCxpQkFBaUIsQ0FBQyxLQUFLO0lBQ3ZCLENBQUM7OztZQXhDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtnQkFDL0IsNGtMQUFtRDs7YUFFcEQ7Ozs7WUFSa0MsUUFBUTs7O21CQWF4QyxLQUFLOzs7O0lBRE4sa0RBQTBCOztJQUMxQiwyQ0FBYTs7SUFDYiw2REFBMkM7Ozs7O0lBQzNDLGdEQUE2Qjs7Ozs7SUFDN0IsK0NBQStCOzs7OztJQUNuQiwrQ0FBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQsIEluamVjdG9yLCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29udHJvbFR5cGUgfSBmcm9tICcuLi8uLi9lbnRpdHkvY29udHJvbHR5cGUnO1xyXG5pbXBvcnQgeyBJZFNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbic7XHJcbmltcG9ydCB7IFN0YXRlU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2Uvc3RhdGUuc2VydmljZSdcclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdxdWVyeWNvbmRpdGlvbi1pdGVtJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vcXVlcnljb25kaXRpb24taXRlbS5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vcXVlcnljb25kaXRpb24taXRlbS5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFF1ZXJ5Y29uZGl0aW9uSXRlbUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG5cclxuICBjb250cm9sVHlwZSA9IENvbnRyb2xUeXBlO1xyXG4gIEBJbnB1dCgpIGl0ZW1cclxuICBmaWVsZENvZGVPZkNsZWFyRmllbGRzOiBBcnJheTxzdHJpbmc+ID0gW107XHJcbiAgcHJpdmF0ZSBpZFNlcnZpY2U6IElkU2VydmljZTtcclxuICBwcml2YXRlIHN0YXRlU2VyOiBTdGF0ZVNlcnZpY2U7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IpIHtcclxuICAgIHRoaXMuaWRTZXJ2aWNlID0gdGhpcy5pbmplY3Rvci5nZXQoSWRTZXJ2aWNlKTtcclxuICAgIHRoaXMuc3RhdGVTZXIgPSB0aGlzLmluamVjdG9yLmdldChTdGF0ZVNlcnZpY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgfVxyXG5cclxuICBjb25kaXRpb25DaGFuZ2UoKSB7XHJcbiAgICB0aGlzLnN0YXRlU2VyLnVwZGF0ZVF1ZXJ5Q29uZGl0aW9uTGlzdERhdGEoKVxyXG4gIH1cclxuXHJcbiAgZ2V0U3R5bGUoYSkge1xyXG4gICAgcmV0dXJuICcnXHJcbiAgfVxyXG4gIGJ1aWxkU21hcnRIZWxwS2V5KHZhbHVlOiBzdHJpbmcpIHtcclxuICAgIGxldCBwcmVmaXggPSAnJztcclxuICAgIGlmIChsb2NhdGlvbi5oYXNoKSB7XHJcbiAgICAgIGNvbnN0IHBhdGhBcnIgPSBsb2NhdGlvbi5oYXNoLnNwbGl0KCc/Jyk7XHJcbiAgICAgIHByZWZpeCA9IHBhdGhBcnIgPyBwYXRoQXJyWzBdIDogJyc7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjb25zdCBwYXRoQXJyID0gbG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoJy8nKTtcclxuICAgICAgcHJlZml4ID0gcGF0aEFyciA/IHBhdGhBcnJbcGF0aEFyci5sZW5ndGggLSAxXSA6ICcnO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXMuaWRTZXJ2aWNlLmVuY3J5cHQocHJlZml4ICsgJy9xdWVyeXNvbHV0aW9uLycgKyB2YWx1ZSk7XHJcbiAgfVxyXG4gIGNsZWFyRmllbGRzQ2hhbmdlKGV2ZW50KSB7XHJcbiAgfVxyXG59XHJcbiJdfQ==