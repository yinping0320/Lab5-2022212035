/**
 * @fileoverview added by tsickle
 * Generated from: lib/controlcomponent/input/input.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output } from '@angular/core';
import { SolutionService } from '../../service/solution.service';
var InputComponent = /** @class */ (function () {
    function InputComponent(solutionService) {
        this.solutionService = solutionService;
        this.hideLabel = false;
        this.maxLength = undefined;
        this.hasError = false;
        this.conditionChange = new EventEmitter();
    }
    Object.defineProperty(InputComponent.prototype, "item", {
        get: /**
         * @return {?}
         */
        function () {
            return this.constructTextItem(this._inputItem);
        },
        set: /**
         * @param {?} textItem
         * @return {?}
         */
        function (textItem) {
            this._inputItem = textItem;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} textItem
     * @return {?}
     */
    InputComponent.prototype.constructTextItem = /**
     * @param {?} textItem
     * @return {?}
     */
    function (textItem) {
        /** @type {?} */
        var textValueObj = (/** @type {?} */ (textItem.value));
        // textValueObj.value = textValueObj.value && textValueObj.value.trim();
        textValueObj.value = textValueObj.value && textValueObj.value;
        textItem.value = textValueObj;
        return textItem;
    };
    /**
     * @return {?}
     */
    InputComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.testId = this.solutionService.getGuid();
        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);
    };
    /**
     * @param {?} field
     * @return {?}
     */
    InputComponent.prototype.getConditionItemTitle = /**
     * @param {?} field
     * @return {?}
     */
    function (field) {
        return this.solutionService.getConditionItemTitle(field);
    };
    /**
     * @return {?}
     */
    InputComponent.prototype.onBlur = /**
     * @return {?}
     */
    function () {
        if (this.hasError) {
            return;
        }
        this.conditionChange.emit();
    };
    /**
     * 是否有错误信息
     */
    /**
     * 是否有错误信息
     * @param {?} textControl
     * @return {?}
     */
    InputComponent.prototype.hasErrorInfo = /**
     * 是否有错误信息
     * @param {?} textControl
     * @return {?}
     */
    function (textControl) {
        if (textControl.invalid && (textControl.dirty || textControl.touched) && textControl.errors.maxlength) {
            this.hasError = true;
            return true;
        }
        this.hasError = false;
        return false;
    };
    InputComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-solution-input',
                    template: "<div class=\"farris-group-wrap\" id=\"{{item.id}}\">\r\n    <div class=\"form-group farris-form-group  common-group\" [ngClass]=\"{'q-state-readonly':item.readonly}\">\r\n        <label class=\"col-form-label\" *ngIf=\"item && !hideLabel\" title=\"{{getConditionItemTitle(item)}}\">\r\n            <span class=\"farris-label-info text-danger\" *ngIf=\"item.control.isRequired()\">*</span>\r\n            <span class=\"farris-label-text\">{{item.fieldName}}</span>\r\n        </label>\r\n        <div class=\"farris-input-wrap\">\r\n            <input-group [(ngModel)]=\"item.value.value\" name=\"{{item.fieldName}}\" id=\"{{testId}}\"\r\n                (blurHandle)=\"onBlur()\" [placeholder]=\"placeholder\" [readonly]=\"item.readonly\" maxlength=\"maxLength\"\r\n                #textControl=\"ngModel\" (clear)=\"onBlur()\">\r\n            </input-group>\r\n            <ng-container *ngIf=\"maxLength\">\r\n                <div class=\"farris-feedback\" [class.f-state-invalid]=\"hasErrorInfo(textControl)\">\r\n                    <span class=\"f-feedback-message\">\u8BF7\u8F93\u5165\u6709\u6548\u683C\u5F0F</span>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>"
                }] }
    ];
    /** @nocollapse */
    InputComponent.ctorParameters = function () { return [
        { type: SolutionService }
    ]; };
    InputComponent.propDecorators = {
        hideLabel: [{ type: Input }],
        item: [{ type: Input }],
        conditionChange: [{ type: Output, args: ['conditionChange',] }]
    };
    return InputComponent;
}());
export { InputComponent };
if (false) {
    /** @type {?} */
    InputComponent.prototype._hideLabel;
    /** @type {?} */
    InputComponent.prototype.hideLabel;
    /**
     * QueryCondition类型
     * @type {?}
     */
    InputComponent.prototype._inputItem;
    /** @type {?} */
    InputComponent.prototype.placeholder;
    /** @type {?} */
    InputComponent.prototype.maxLength;
    /** @type {?} */
    InputComponent.prototype.testId;
    /** @type {?} */
    InputComponent.prototype.hasError;
    /** @type {?} */
    InputComponent.prototype.conditionChange;
    /**
     * @type {?}
     * @private
     */
    InputComponent.prototype.solutionService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9jb21wb25lbnQtcXVlcnljb25kaXRpb24vIiwic291cmNlcyI6WyJsaWIvY29udHJvbGNvbXBvbmVudC9pbnB1dC9pbnB1dC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsWUFBWSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFJakU7SUF1Q0ksd0JBQW9CLGVBQWdDO1FBQWhDLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtRQS9CM0MsY0FBUyxHQUFXLEtBQUssQ0FBQTtRQVNsQyxjQUFTLEdBQUcsU0FBUyxDQUFDO1FBVXRCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFFVSxvQkFBZSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFVUixDQUFDO0lBcEJ6RCxzQkFDSSxnQ0FBSTs7OztRQUdSO1lBQ0ksT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ25ELENBQUM7Ozs7O1FBTkQsVUFDUyxRQUFhO1lBQ2xCLElBQUksQ0FBQyxVQUFVLEdBQUcsUUFBUSxDQUFDO1FBQy9CLENBQUM7OztPQUFBOzs7OztJQVNELDBDQUFpQjs7OztJQUFqQixVQUFrQixRQUF3Qjs7WUFDaEMsWUFBWSxHQUFHLG1CQUFBLFFBQVEsQ0FBQyxLQUFLLEVBQWE7UUFDaEQsd0VBQXdFO1FBQ3hFLFlBQVksQ0FBQyxLQUFLLEdBQUcsWUFBWSxDQUFDLEtBQUssSUFBSSxZQUFZLENBQUMsS0FBSyxDQUFDO1FBQzlELFFBQVEsQ0FBQyxLQUFLLEdBQUcsWUFBWSxDQUFDO1FBQzlCLE9BQU8sUUFBUSxDQUFDO0lBQ3BCLENBQUM7Ozs7SUFJRCxpQ0FBUTs7O0lBQVI7UUFDSSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDN0MsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUMzRyxDQUFDOzs7OztJQUVELDhDQUFxQjs7OztJQUFyQixVQUFzQixLQUFxQjtRQUN2QyxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDN0QsQ0FBQzs7OztJQUVELCtCQUFNOzs7SUFBTjtRQUNJLElBQUcsSUFBSSxDQUFDLFFBQVEsRUFBQztZQUNiLE9BQU87U0FDVjtRQUNELElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUNEOztPQUVHOzs7Ozs7SUFDSCxxQ0FBWTs7Ozs7SUFBWixVQUFhLFdBQW9CO1FBQzdCLElBQUksV0FBVyxDQUFDLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLElBQUksV0FBVyxDQUFDLE9BQU8sQ0FBQyxJQUFJLFdBQVcsQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFO1lBQ25HLElBQUksQ0FBQyxRQUFRLEdBQUMsSUFBSSxDQUFDO1lBQ25CLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7UUFDRCxJQUFJLENBQUMsUUFBUSxHQUFDLEtBQUssQ0FBQztRQUNwQixPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDOztnQkFsRUosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLGl0Q0FBcUM7aUJBQ3hDOzs7O2dCQVBRLGVBQWU7Ozs0QkFZbkIsS0FBSzt1QkFXTCxLQUFLO2tDQVVMLE1BQU0sU0FBQyxpQkFBaUI7O0lBc0M3QixxQkFBQztDQUFBLEFBbkVELElBbUVDO1NBOURZLGNBQWM7OztJQUV2QixvQ0FBVTs7SUFDVixtQ0FBa0M7Ozs7O0lBS2xDLG9DQUEyQjs7SUFFM0IscUNBQW9COztJQUVwQixtQ0FBc0I7O0lBU3RCLGdDQUFlOztJQUNmLGtDQUFpQjs7SUFFakIseUNBQWdFOzs7OztJQVVwRCx5Q0FBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQsIE9uQ2hhbmdlcywgRXZlbnRFbWl0dGVyLCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUXVlcnlDb25kaXRpb24gfSBmcm9tICcuLi8uLi9lbnRpdHkvcXVlcnljb25kaXRpb24nO1xyXG5pbXBvcnQgeyBTb2x1dGlvblNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlL3NvbHV0aW9uLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBUZXh0VmFsdWUgfSBmcm9tICcuLi8uLi9lbnRpdHkvY29uZGl0aW9udmFsdWUvdGV4dHZhbHVlJztcclxuaW1wb3J0IHsgTmdNb2RlbCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdhcHAtc29sdXRpb24taW5wdXQnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL2lucHV0LmNvbXBvbmVudC5odG1sJyxcclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBJbnB1dENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gICAgX2hpZGVMYWJlbFxyXG4gICAgQElucHV0KCkgaGlkZUxhYmVsOmJvb2xlYW4gPSBmYWxzZVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUXVlcnlDb25kaXRpb27nsbvlnotcclxuICAgICAqL1xyXG4gICAgX2lucHV0SXRlbTogUXVlcnlDb25kaXRpb247XHJcblxyXG4gICAgcGxhY2Vob2xkZXI6IHN0cmluZztcclxuXHJcbiAgICBtYXhMZW5ndGggPSB1bmRlZmluZWQ7XHJcblxyXG4gICAgQElucHV0KClcclxuICAgIHNldCBpdGVtKHRleHRJdGVtOiBhbnkpIHtcclxuICAgICAgICB0aGlzLl9pbnB1dEl0ZW0gPSB0ZXh0SXRlbTtcclxuICAgIH1cclxuICAgIGdldCBpdGVtKCk6IGFueSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29uc3RydWN0VGV4dEl0ZW0odGhpcy5faW5wdXRJdGVtKTtcclxuICAgIH1cclxuICAgIHRlc3RJZDogc3RyaW5nO1xyXG4gICAgaGFzRXJyb3IgPSBmYWxzZTtcclxuXHJcbiAgICBAT3V0cHV0KCdjb25kaXRpb25DaGFuZ2UnKSBjb25kaXRpb25DaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gICAgY29uc3RydWN0VGV4dEl0ZW0odGV4dEl0ZW06IFF1ZXJ5Q29uZGl0aW9uKTogUXVlcnlDb25kaXRpb24ge1xyXG4gICAgICAgIGNvbnN0IHRleHRWYWx1ZU9iaiA9IHRleHRJdGVtLnZhbHVlIGFzIFRleHRWYWx1ZTtcclxuICAgICAgICAvLyB0ZXh0VmFsdWVPYmoudmFsdWUgPSB0ZXh0VmFsdWVPYmoudmFsdWUgJiYgdGV4dFZhbHVlT2JqLnZhbHVlLnRyaW0oKTtcclxuICAgICAgICB0ZXh0VmFsdWVPYmoudmFsdWUgPSB0ZXh0VmFsdWVPYmoudmFsdWUgJiYgdGV4dFZhbHVlT2JqLnZhbHVlO1xyXG4gICAgICAgIHRleHRJdGVtLnZhbHVlID0gdGV4dFZhbHVlT2JqO1xyXG4gICAgICAgIHJldHVybiB0ZXh0SXRlbTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNvbHV0aW9uU2VydmljZTogU29sdXRpb25TZXJ2aWNlKSB7IH1cclxuXHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnRlc3RJZCA9IHRoaXMuc29sdXRpb25TZXJ2aWNlLmdldEd1aWQoKTtcclxuICAgICAgICB0aGlzLnBsYWNlaG9sZGVyID0gKHRoaXMuaXRlbS5wbGFjZUhvbGRlcikgPyAodGhpcy5pdGVtLnBsYWNlSG9sZGVyKSA6ICh0aGlzLml0ZW0uY29udHJvbC5wbGFjZWhvbGRlcik7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q29uZGl0aW9uSXRlbVRpdGxlKGZpZWxkOiBRdWVyeUNvbmRpdGlvbikge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnNvbHV0aW9uU2VydmljZS5nZXRDb25kaXRpb25JdGVtVGl0bGUoZmllbGQpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uQmx1cigpIHtcclxuICAgICAgICBpZih0aGlzLmhhc0Vycm9yKXtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNvbmRpdGlvbkNoYW5nZS5lbWl0KCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOaYr+WQpuaciemUmeivr+S/oeaBr1xyXG4gICAgICovXHJcbiAgICBoYXNFcnJvckluZm8odGV4dENvbnRyb2w6IE5nTW9kZWwpIHtcclxuICAgICAgICBpZiAodGV4dENvbnRyb2wuaW52YWxpZCAmJiAodGV4dENvbnRyb2wuZGlydHkgfHwgdGV4dENvbnRyb2wudG91Y2hlZCkgJiYgdGV4dENvbnRyb2wuZXJyb3JzLm1heGxlbmd0aCkge1xyXG4gICAgICAgICAgICB0aGlzLmhhc0Vycm9yPXRydWU7XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmhhc0Vycm9yPWZhbHNlO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxufSJdfQ==