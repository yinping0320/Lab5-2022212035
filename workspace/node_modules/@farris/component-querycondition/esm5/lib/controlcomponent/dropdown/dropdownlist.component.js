/**
 * @fileoverview added by tsickle
 * Generated from: lib/controlcomponent/dropdown/dropdownlist.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output } from '@angular/core';
import { SolutionService } from '../../service/solution.service';
import { DropDownListValue } from '../../entity/conditionvalue/dropdownlistvalue';
var DropDownListComponent = /** @class */ (function () {
    function DropDownListComponent(solutionService) {
        this.solutionService = solutionService;
        this.hideLabel = false;
        /**
         * 某个字段发生值变化事件时，需要同步清空的字段，可能不是当前字段
         */
        this.changeFields = [];
        this.conditionChange = new EventEmitter();
        //下拉列表数据源
        this.dropDownListDataSource = new Array();
        //下拉列表控件内显示文本
        this.selectedItemId = '';
        //是否允许编辑，当通过服务器端api取数时为true
        this.editable = false;
    }
    /**
     * @return {?}
     */
    DropDownListComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.getDataSource();
        /** @type {?} */
        var initialValue = (/** @type {?} */ (this.item.value));
        initialValue.key && (this.selectedItemId = initialValue.key);
        this.testId = this.solutionService.getGuid();
        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);
        this.beforeShow = ((/** @type {?} */ (this.item.control))).beforeShow;
        this.beforeHide = ((/** @type {?} */ (this.item.control))).beforeHide;
        this.idField = ((/** @type {?} */ (this.item.control))).idField ? ((/** @type {?} */ (this.item.control))).idField : 'value';
        this.textField = ((/** @type {?} */ (this.item.control))).textField ? ((/** @type {?} */ (this.item.control))).textField : 'name';
        if (this.uri) {
            this.selectedItemId = (initialValue.value || []).map((/**
             * @param {?} n
             * @return {?}
             */
            function (n) { return n[_this.textField]; })).join(',');
            this.editable = true;
        }
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    DropDownListComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        var _this = this;
        this.getDataSource();
        if (changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {
            /** @type {?} */
            var isChange = changes['changeFields'].currentValue.some((/**
             * @param {?} field
             * @return {?}
             */
            function (field) { return field == _this.item.fieldCode; }));
            if (isChange) {
                this.selectedItemId = ((/** @type {?} */ (this.item.value))).key;
            }
        }
    };
    /**
     * @return {?}
     */
    DropDownListComponent.prototype.getDataSource = /**
     * @return {?}
     */
    function () {
        this.dropDownListDataSource = ((/** @type {?} */ (this.item.control))).enumValues;
        this.uri = ((/** @type {?} */ (this.item.control))).uri;
    };
    /**
     * @param {?} selected
     * @return {?}
     */
    DropDownListComponent.prototype.selectChange = /**
     * @param {?} selected
     * @return {?}
     */
    function (selected) {
        var _this = this;
        /** @type {?} */
        var selectedValue = selected['selections'].map((/**
         * @param {?} selection
         * @return {?}
         */
        function (selection) {
            return {
                value: _this.uri ? selection[_this.textField] : selection[_this.idField],
                name: selection[_this.textField]
            };
        }));
        this.item.value = new DropDownListValue({
            value: selectedValue,
            key: selected['value']
        });
        this.conditionChange.emit();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    DropDownListComponent.prototype.onClear = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.item.value = new DropDownListValue();
    };
    /**
     * @param {?} field
     * @return {?}
     */
    DropDownListComponent.prototype.getConditionItemTitle = /**
     * @param {?} field
     * @return {?}
     */
    function (field) {
        return this.solutionService.getConditionItemTitle(field);
    };
    DropDownListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-solution-dropdownlist',
                    template: "<div class=\"farris-group-wrap\" id=\"{{item.id}}\">\r\n    <div class=\"form-group farris-form-group  common-group\"  [ngClass]=\"{'q-state-readonly':item.readonly}\">\r\n    <label class=\"col-form-label\" *ngIf=\"item && !hideLabel\" title=\"{{getConditionItemTitle(item)}}\">\r\n      <span class=\"farris-label-info text-danger\" *ngIf=\"item.control.isRequired()\">*</span>\r\n      <span class=\"farris-label-text\">{{item.fieldName}}</span>\r\n    </label>\r\n    <div class=\"farris-input-wrap\">\r\n    <farris-combo-list \r\n        [(ngModel)]=\"selectedItemId\"\r\n        [idField]=\"idField\"\r\n        [valueField]=\"idField\"\r\n        [textField]=\"textField\"\r\n        [editable]=\"editable\"\r\n        [data]=\"dropDownListDataSource\"\r\n        [uri]=\"uri\"\r\n        [beforeShow]=\"beforeShow\"\r\n        [beforeHide]=\"beforeHide\"\r\n        [multiSelect]=\"item.control.multiSelect\"\r\n        [placeholder]=\"placeholder\"\r\n        [panelHeight]=\"item.control.panelHeight ? item.control.panelHeight : 'auto'\"\r\n        (valueChange)=\"selectChange($event)\"\r\n        (clear)=\"onClear($event)\" \r\n        id=\"{{testId}}\"\r\n        [readonly]=\"item.readonly\">\r\n      </farris-combo-list>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
                }] }
    ];
    /** @nocollapse */
    DropDownListComponent.ctorParameters = function () { return [
        { type: SolutionService }
    ]; };
    DropDownListComponent.propDecorators = {
        hideLabel: [{ type: Input }],
        item: [{ type: Input }],
        changeFields: [{ type: Input }],
        conditionChange: [{ type: Output, args: ['conditionChange',] }]
    };
    return DropDownListComponent;
}());
export { DropDownListComponent };
if (false) {
    /** @type {?} */
    DropDownListComponent.prototype.hideLabel;
    /**
     * QueryCondition类型
     * @type {?}
     */
    DropDownListComponent.prototype.item;
    /**
     * 某个字段发生值变化事件时，需要同步清空的字段，可能不是当前字段
     * @type {?}
     */
    DropDownListComponent.prototype.changeFields;
    /** @type {?} */
    DropDownListComponent.prototype.conditionChange;
    /** @type {?} */
    DropDownListComponent.prototype.dropDownListDataSource;
    /** @type {?} */
    DropDownListComponent.prototype.uri;
    /** @type {?} */
    DropDownListComponent.prototype.beforeShow;
    /** @type {?} */
    DropDownListComponent.prototype.beforeHide;
    /** @type {?} */
    DropDownListComponent.prototype.idField;
    /** @type {?} */
    DropDownListComponent.prototype.textField;
    /** @type {?} */
    DropDownListComponent.prototype.selectedItemId;
    /** @type {?} */
    DropDownListComponent.prototype.testId;
    /** @type {?} */
    DropDownListComponent.prototype.placeholder;
    /** @type {?} */
    DropDownListComponent.prototype.editable;
    /**
     * @type {?}
     * @private
     */
    DropDownListComponent.prototype.solutionService;
}
//# sourceMappingURL=data:application/json;base64,