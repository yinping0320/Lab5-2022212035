/**
 * @fileoverview added by tsickle
 * Generated from: lib/controlcomponent/combolookup/combolookup.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { SolutionService } from '../../service/solution.service';
var ComboLookUpComponent = /** @class */ (function () {
    function ComboLookUpComponent(solutionService) {
        this.solutionService = solutionService;
        this.hideLabel = false;
        /**
         * 某个字段发生值变化事件时，需要同步清空的字段，可能不是当前字段
         */
        this.changeFields = [];
        this.conditionChange = new EventEmitter();
        this.selectedValues = "";
    }
    /**
     * @return {?}
     */
    ComboLookUpComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.getComboLookUpBindingInfo();
        this.testId = this.solutionService.getGuid();
        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);
        this.autoWidth = false;
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    ComboLookUpComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        var _this = this;
        this.getComboLookUpBindingInfo();
        if (changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {
            /** @type {?} */
            var isChange = changes['changeFields'].currentValue.some((/**
             * @param {?} field
             * @return {?}
             */
            function (field) { return field == _this.item.fieldCode; }));
            if (isChange) {
                this.textValue = ((/** @type {?} */ (this.item.value))).textValue;
            }
        }
    };
    /**
     * @param {?} data
     * @return {?}
     */
    ComboLookUpComponent.prototype.valueChangeHandler = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        /** @type {?} */
        var helpValue = ((/** @type {?} */ (this.item.value)));
        helpValue.value = data.selections;
        helpValue.valueField = this.valueField;
        helpValue.textValue = helpValue.getTextValue(this.textField);
        this.textValue = helpValue.textValue;
        this.conditionChange.emit();
    };
    /**
     * @return {?}
     */
    ComboLookUpComponent.prototype.getComboLookUpBindingInfo = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var comboLookUpControl = ((/** @type {?} */ (this.item.control)));
        this.uri = comboLookUpControl.uri;
        this.idField = comboLookUpControl.idField;
        this.valueField = comboLookUpControl.valueField;
        this.textField = comboLookUpControl.textField;
        this.mapFields = comboLookUpControl.mapFields;
        this.displayType = comboLookUpControl.displayType;
        this.preEventCmd = comboLookUpControl.preEventCmd;
        this.postEventCmd = comboLookUpControl.postEventCmd;
        this.enableFullTree = comboLookUpControl.enableFullTree;
        this.multiSelect = comboLookUpControl.singleSelect === true ? false : true;
        this.panelWidth = comboLookUpControl.panelWidth ? comboLookUpControl.panelWidth : 300;
        this.panelHeight = comboLookUpControl.panelHeight ? comboLookUpControl.panelHeight : 300;
        this.loadTreeDataType = comboLookUpControl.loadTreeDataType;
        this.context = comboLookUpControl.context;
        /** @type {?} */
        var comboLookUpValue = ((/** @type {?} */ (this.item.value)));
        if (comboLookUpValue.textValue == 'help-text-value-null') { //旧数据兼容
            this.textValue = comboLookUpValue.getTextValue(this.textField);
        }
        else {
            this.textValue = comboLookUpValue.textValue;
        }
        if (comboLookUpValue && comboLookUpValue.value) {
            this.selectedValues = (comboLookUpValue.value || []).map((/**
             * @param {?} n
             * @return {?}
             */
            function (n) { return n[_this.idField]; })).join(',');
        }
    };
    /**
     * @param {?} data
     * @return {?}
     */
    ComboLookUpComponent.prototype.clearData = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        ((/** @type {?} */ (this.item.value))).clearValue();
        this.conditionChange.emit();
    };
    /**
     * @param {?} field
     * @return {?}
     */
    ComboLookUpComponent.prototype.getConditionItemTitle = /**
     * @param {?} field
     * @return {?}
     */
    function (field) {
        return this.solutionService.getConditionItemTitle(field);
    };
    ComboLookUpComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-solution-combolookup',
                    template: "<div class=\"farris-group-wrap\" id=\"{{item.id}}\">\r\n    <div class=\"form-group farris-form-group common-group \"  [ngClass]=\"{'q-state-readonly':item.readonly}\">\r\n        <label class=\"col-form-label\" *ngIf=\"item && !hideLabel\" title=\"{{getConditionItemTitle(item)}}\">\r\n            <span class=\"farris-label-info text-danger\" *ngIf=\"item.control.isRequired()\">*</span>\r\n            <span class=\"farris-label-text\">{{item.fieldName}}</span>\r\n        </label>\r\n        <div class=\"farris-input-wrap\">\r\n            <farris-combo-lookup *ngIf=\"item\"\r\n                [uri]=\"uri\"\r\n                [placeholder]=\"placeholder\"\r\n                [(ngModel)]=\"textValue\"\r\n                [idField]=\"idField\"\r\n                [valueField]=\"valueField\"\r\n                [textField]=\"textField\"\r\n                [mapFields]=\"mapFields\"\r\n                [displayType]=\"displayType\"\r\n                [multiSelect]=\"multiSelect\"\r\n                [enableFullTree]=\"enableFullTree\"\r\n                [selectedValues]=\"selectedValues\"\r\n                [beforeShow]=\"preEventCmd\"\r\n                [beforeHide]=\"postEventCmd\"\r\n                (valueChange)=\"valueChangeHandler($event)\"\r\n                (clear)=\"clearData($event)\"\r\n                [autoWidth]=\"autoWidth\"\r\n                [panelWidth]=\"panelWidth\"\r\n                [panelHeight]=\"panelHeight\"\r\n                [readonly]=\"item.readonly\"\r\n                [loadTreeDataType]=\"loadTreeDataType\"\r\n                [context]=\"context\"\r\n                id=\"{{testId}}\"\r\n            >\r\n        </farris-combo-lookup>\r\n        </div>\r\n    </div>\r\n</div>"
                }] }
    ];
    /** @nocollapse */
    ComboLookUpComponent.ctorParameters = function () { return [
        { type: SolutionService }
    ]; };
    ComboLookUpComponent.propDecorators = {
        hideLabel: [{ type: Input }],
        item: [{ type: Input }],
        changeFields: [{ type: Input }],
        conditionChange: [{ type: Output, args: ['conditionChange',] }]
    };
    return ComboLookUpComponent;
}());
export { ComboLookUpComponent };
if (false) {
    /** @type {?} */
    ComboLookUpComponent.prototype.hideLabel;
    /**
     * QueryCondition类型
     * @type {?}
     */
    ComboLookUpComponent.prototype.item;
    /**
     * 某个字段发生值变化事件时，需要同步清空的字段，可能不是当前字段
     * @type {?}
     */
    ComboLookUpComponent.prototype.changeFields;
    /** @type {?} */
    ComboLookUpComponent.prototype.conditionChange;
    /** @type {?} */
    ComboLookUpComponent.prototype.uri;
    /** @type {?} */
    ComboLookUpComponent.prototype.idField;
    /** @type {?} */
    ComboLookUpComponent.prototype.valueField;
    /** @type {?} */
    ComboLookUpComponent.prototype.textField;
    /** @type {?} */
    ComboLookUpComponent.prototype.textValue;
    /** @type {?} */
    ComboLookUpComponent.prototype.mapFields;
    /** @type {?} */
    ComboLookUpComponent.prototype.displayType;
    /** @type {?} */
    ComboLookUpComponent.prototype.multiSelect;
    /** @type {?} */
    ComboLookUpComponent.prototype.preEventCmd;
    /** @type {?} */
    ComboLookUpComponent.prototype.postEventCmd;
    /** @type {?} */
    ComboLookUpComponent.prototype.enableFullTree;
    /** @type {?} */
    ComboLookUpComponent.prototype.testId;
    /** @type {?} */
    ComboLookUpComponent.prototype.placeholder;
    /** @type {?} */
    ComboLookUpComponent.prototype.autoWidth;
    /** @type {?} */
    ComboLookUpComponent.prototype.panelWidth;
    /** @type {?} */
    ComboLookUpComponent.prototype.panelHeight;
    /** @type {?} */
    ComboLookUpComponent.prototype.selectedValues;
    /** @type {?} */
    ComboLookUpComponent.prototype.loadTreeDataType;
    /** @type {?} */
    ComboLookUpComponent.prototype.context;
    /**
     * @type {?}
     * @private
     */
    ComboLookUpComponent.prototype.solutionService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYm9sb29rdXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9jb21wb25lbnQtcXVlcnljb25kaXRpb24vIiwic291cmNlcyI6WyJsaWIvY29udHJvbGNvbXBvbmVudC9jb21ib2xvb2t1cC9jb21ib2xvb2t1cC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFFLFlBQVksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFJekcsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBRWpFO0lBeUNJLDhCQUFvQixlQUFnQztRQUFoQyxvQkFBZSxHQUFmLGVBQWUsQ0FBaUI7UUFqQzNDLGNBQVMsR0FBVyxLQUFLLENBQUE7Ozs7UUFTekIsaUJBQVksR0FBa0IsRUFBRSxDQUFDO1FBRWYsb0JBQWUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBa0JoRSxtQkFBYyxHQUFHLEVBQUUsQ0FBQztJQUltQyxDQUFDOzs7O0lBRXhELHVDQUFROzs7SUFBUjtRQUNJLElBQUksQ0FBQyx5QkFBeUIsRUFBRSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUM3QyxJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3ZHLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO0lBQzNCLENBQUM7Ozs7O0lBRUQsMENBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCO1FBQWxDLGlCQVFDO1FBUEcsSUFBSSxDQUFD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WTs7SUFDWix1Q0FBYTs7SUFDYiwwQ0FBZ0I7O0lBQ2hCLHlDQUFrQjs7SUFDbEIseUNBQWU7O0lBQ2YseUNBQWU7O0lBQ2YsMkNBQWlCOztJQUNqQiwyQ0FBcUI7O0lBQ3JCLDJDQUFpQjs7SUFDakIsNENBQWtCOztJQUNsQiw4Q0FBd0I7O0lBQ3hCLHNDQUFlOztJQUNmLDJDQUFvQjs7SUFDcEIseUNBQW1COztJQUNuQiwwQ0FBbUI7O0lBQ25CLDJDQUFvQjs7SUFDcEIsOENBQW9COztJQUNwQixnREFBeUI7O0lBQ3pCLHVDQUFhOzs7OztJQUVELCtDQUF3QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgT25DaGFuZ2VzLCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBRdWVyeUNvbmRpdGlvbiB9IGZyb20gJy4uLy4uL2VudGl0eS9xdWVyeWNvbmRpdGlvbic7XHJcbmltcG9ydCB7IENvbWJvTG9va1VwQ29udHJvbCB9IGZyb20gJy4uLy4uL2VudGl0eS9jb250cm9sdHlwZS9jb21ib2xvb2t1cC9jb21ib2xvb2t1cC1jb250cm9sJztcclxuaW1wb3J0IHsgQ29tYm9Mb29rVXBWYWx1ZSB9IGZyb20gJy4uLy4uL2VudGl0eS9jb25kaXRpb252YWx1ZS9jb21ib2xvb2t1cC12YWx1ZSc7XHJcbmltcG9ydCB7IFNvbHV0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2Uvc29sdXRpb24uc2VydmljZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnYXBwLXNvbHV0aW9uLWNvbWJvbG9va3VwJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9jb21ib2xvb2t1cC5jb21wb25lbnQuaHRtbCcsXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgQ29tYm9Mb29rVXBDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsT25DaGFuZ2Vze1xyXG4gICBcclxuXHJcbiAgICBASW5wdXQoKSBoaWRlTGFiZWw6Ym9vbGVhbiA9IGZhbHNlXHJcbiAgICAvKipcclxuICAgICAqIFF1ZXJ5Q29uZGl0aW9u57G75Z6LXHJcbiAgICAgKi9cclxuICAgIEBJbnB1dCgpIGl0ZW06YW55O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5p+Q5Liq5a2X5q615Y+R55Sf5YC85Y+Y5YyW5LqL5Lu25pe277yM6ZyA6KaB5ZCM5q2l5riF56m655qE5a2X5q6177yM5Y+v6IO95LiN5piv5b2T5YmN5a2X5q61XHJcbiAgICAgKi9cclxuICAgIEBJbnB1dCgpIGNoYW5nZUZpZWxkczogQXJyYXk8c3RyaW5nPiA9IFtdO1xyXG5cclxuICAgIEBPdXRwdXQoJ2NvbmRpdGlvbkNoYW5nZScpIGNvbmRpdGlvbkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgICB1cmk6IHN0cmluZztcclxuICAgIGlkRmllbGQ6IGFueTtcclxuICAgIHZhbHVlRmllbGQ6IGFueTtcclxuICAgIHRleHRGaWVsZDogc3RyaW5nO1xyXG4gICAgdGV4dFZhbHVlOiBhbnk7XHJcbiAgICBtYXBGaWVsZHM6IGFueTtcclxuICAgIGRpc3BsYXlUeXBlOiBhbnk7XHJcbiAgICBtdWx0aVNlbGVjdDogYm9vbGVhbjtcclxuICAgIHByZUV2ZW50Q21kOiBhbnk7XHJcbiAgICBwb3N0RXZlbnRDbWQ6IGFueTtcclxuICAgIGVuYWJsZUZ1bGxUcmVlOiBib29sZWFuO1xyXG4gICAgdGVzdElkOiBzdHJpbmc7XHJcbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nO1xyXG4gICAgYXV0b1dpZHRoOiBib29sZWFuO1xyXG4gICAgcGFuZWxXaWR0aDogbnVtYmVyO1xyXG4gICAgcGFuZWxIZWlnaHQ6IG51bWJlcjtcclxuICAgIHNlbGVjdGVkVmFsdWVzID0gXCJcIjtcclxuICAgIGxvYWRUcmVlRGF0YVR5cGU6IHN0cmluZztcclxuICAgIGNvbnRleHQ6IGFueTtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNvbHV0aW9uU2VydmljZTogU29sdXRpb25TZXJ2aWNlKXsgfVxyXG5cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuZ2V0Q29tYm9Mb29rVXBCaW5kaW5nSW5mbygpO1xyXG4gICAgICAgIHRoaXMudGVzdElkID0gdGhpcy5zb2x1dGlvblNlcnZpY2UuZ2V0R3VpZCgpO1xyXG4gICAgICAgIHRoaXMucGxhY2Vob2xkZXIgPSAodGhpcy5pdGVtLnBsYWNlSG9sZGVyKSA/ICh0aGlzLml0ZW0ucGxhY2VIb2xkZXIpIDogKHRoaXMuaXRlbS5jb250cm9sLnBsYWNlaG9sZGVyKTtcclxuICAgICAgICB0aGlzLmF1dG9XaWR0aCA9IGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmdldENvbWJvTG9va1VwQmluZGluZ0luZm8oKTtcclxuICAgICAgICBpZihjaGFuZ2VzWydjaGFuZ2VGaWVsZHMnXSAmJiBjaGFuZ2VzWydjaGFuZ2VGaWVsZHMnXS5jdXJyZW50VmFsdWUgJiYgIWNoYW5nZXNbJ2NoYW5nZUZpZWxkcyddLmZpcnN0Q2hhbmdlKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGlzQ2hhbmdlID0gY2hhbmdlc1snY2hhbmdlRmllbGRzJ10uY3VycmVudFZhbHVlLnNvbWUoZmllbGQgPT4gZmllbGQgPT0gdGhpcy5pdGVtLmZpZWxkQ29kZSk7XHJcbiAgICAgICAgICAgIGlmKGlzQ2hhbmdlKXtcclxuICAgICAgICAgICAgICAgIHRoaXMudGV4dFZhbHVlID0gKHRoaXMuaXRlbS52YWx1ZSBhcyBDb21ib0xvb2tVcFZhbHVlKS50ZXh0VmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdmFsdWVDaGFuZ2VIYW5kbGVyKGRhdGE6IGFueSl7XHJcbiAgICAgICAgY29uc3QgaGVscFZhbHVlID0gKHRoaXMuaXRlbS52YWx1ZSBhcyBDb21ib0xvb2tVcFZhbHVlKTtcclxuICAgICAgICBoZWxwVmFsdWUudmFsdWUgPSBkYXRhLnNlbGVjdGlvbnM7XHJcbiAgICAgICAgaGVscFZhbHVlLnZhbHVlRmllbGQgPSB0aGlzLnZhbHVlRmllbGQ7XHJcbiAgICAgICAgaGVscFZhbHVlLnRleHRWYWx1ZSA9IGhlbHBWYWx1ZS5nZXRUZXh0VmFsdWUodGhpcy50ZXh0RmllbGQpO1xyXG4gICAgICAgIHRoaXMudGV4dFZhbHVlID0gaGVscFZhbHVlLnRleHRWYWx1ZTtcclxuICAgICAgICB0aGlzLmNvbmRpdGlvbkNoYW5nZS5lbWl0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q29tYm9Mb29rVXBCaW5kaW5nSW5mbygpe1xyXG4gICAgICAgIGNvbnN0IGNvbWJvTG9va1VwQ29udHJvbCA9ICh0aGlzLml0ZW0uY29udHJvbCBhcyBDb21ib0xvb2tVcENvbnRyb2wpO1xyXG4gICAgICAgIHRoaXMudXJpID0gY29tYm9Mb29rVXBDb250cm9sLnVyaTtcclxuICAgICAgICB0aGlzLmlkRmllbGQgPSBjb21ib0xvb2tVcENvbnRyb2wuaWRGaWVsZDtcclxuICAgICAgICB0aGlzLnZhbHVlRmllbGQgPSBjb21ib0xvb2tVcENvbnRyb2wudmFsdWVGaWVsZDtcclxuICAgICAgICB0aGlzLnRleHRGaWVsZCA9IGNvbWJvTG9va1VwQ29udHJvbC50ZXh0RmllbGQ7XHJcbiAgICAgICAgdGhpcy5tYXBGaWVsZHMgPSBjb21ib0xvb2tVcENvbnRyb2wubWFwRmllbGRzO1xyXG4gICAgICAgIHRoaXMuZGlzcGxheVR5cGUgPSBjb21ib0xvb2tVcENvbnRyb2wuZGlzcGxheVR5cGU7XHJcbiAgICAgICAgdGhpcy5wcmVFdmVudENtZCA9IGNvbWJvTG9va1VwQ29udHJvbC5wcmVFdmVudENtZDtcclxuICAgICAgICB0aGlzLnBvc3RFdmVudENtZCA9IGNvbWJvTG9va1VwQ29udHJvbC5wb3N0RXZlbnRDbWQ7XHJcbiAgICAgICAgdGhpcy5lbmFibGVGdWxsVHJlZSA9IGNvbWJvTG9va1VwQ29udHJvbC5lbmFibGVGdWxsVHJlZTtcclxuICAgICAgICB0aGlzLm11bHRpU2VsZWN0ID0gY29tYm9Mb29rVXBDb250cm9sLnNpbmdsZVNlbGVjdCA9PT0gdHJ1ZSA/IGZhbHNlIDogdHJ1ZTtcclxuICAgICAgICB0aGlzLnBhbmVsV2lkdGggPSBjb21ib0xvb2tVcENvbnRyb2wucGFuZWxXaWR0aCA/IGNvbWJvTG9va1VwQ29udHJvbC5wYW5lbFdpZHRoIDogMzAwO1xyXG4gICAgICAgIHRoaXMucGFuZWxIZWlnaHQgPSBjb21ib0xvb2tVcENvbnRyb2wucGFuZWxIZWlnaHQgPyBjb21ib0xvb2tVcENvbnRyb2wucGFuZWxIZWlnaHQgOiAzMDA7XHJcbiAgICAgICAgdGhpcy5sb2FkVHJlZURhdGFUeXBlID0gY29tYm9Mb29rVXBDb250cm9sLmxvYWRUcmVlRGF0YVR5cGU7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gY29tYm9Mb29rVXBDb250cm9sLmNvbnRleHQ7XHJcbiAgICAgICAgY29uc3QgY29tYm9Mb29rVXBWYWx1ZSA9ICh0aGlzLml0ZW0udmFsdWUgYXMgQ29tYm9Mb29rVXBWYWx1ZSk7XHJcbiAgICAgICAgaWYoY29tYm9Mb29rVXBWYWx1ZS50ZXh0VmFsdWUgPT0gJ2hlbHAtdGV4dC12YWx1ZS1udWxsJyl7Ly/ml6fmlbDmja7lhbzlrrlcclxuICAgICAgICAgICAgdGhpcy50ZXh0VmFsdWUgPSBjb21ib0xvb2tVcFZhbHVlLmdldFRleHRWYWx1ZSh0aGlzLnRleHRGaWVsZCk7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIHRoaXMudGV4dFZhbHVlID0gY29tYm9Mb29rVXBWYWx1ZS50ZXh0VmFsdWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoY29tYm9Mb29rVXBWYWx1ZSAmJiBjb21ib0xvb2tVcFZhbHVlLnZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRWYWx1ZXMgPSAoY29tYm9Mb29rVXBWYWx1ZS52YWx1ZSB8fCBbXSkubWFwKG4gPT4gblt0aGlzLmlkRmllbGRdKS5qb2luKCcsJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNsZWFyRGF0YShkYXRhOiBhbnkpe1xyXG4gICAgICAgICh0aGlzLml0ZW0udmFsdWUgYXMgQ29tYm9Mb29rVXBWYWx1ZSkuY2xlYXJWYWx1ZSgpO1xyXG4gICAgICAgIHRoaXMuY29uZGl0aW9uQ2hhbmdlLmVtaXQoKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRDb25kaXRpb25JdGVtVGl0bGUoZmllbGQ6UXVlcnlDb25kaXRpb24pe1xyXG4gICAgICAgIHJldHVybiB0aGlzLnNvbHV0aW9uU2VydmljZS5nZXRDb25kaXRpb25JdGVtVGl0bGUoZmllbGQpO1xyXG4gICAgfVxyXG59Il19