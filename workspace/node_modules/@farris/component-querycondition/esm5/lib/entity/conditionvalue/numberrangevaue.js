/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/conditionvalue/numberrangevaue.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ControlType } from "../controltype";
var NumberRangeValue = /** @class */ (function () {
    function NumberRangeValue(data) {
        if (data === void 0) { data = { startValue: null, endValue: null }; }
        this.startValue = data.startValue == null ? null : parseFloat(data.startValue);
        this.endValue = data.endValue == null ? null : parseFloat(data.endValue);
    }
    /**
     * @return {?}
     */
    NumberRangeValue.prototype.isEmpty = /**
     * @return {?}
     */
    function () {
        return (this.startValue == null && this.endValue == null);
    };
    /**
     * @return {?}
     */
    NumberRangeValue.prototype.clearValue = /**
     * @return {?}
     */
    function () {
        this.startValue = undefined;
        this.endValue = undefined;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    NumberRangeValue.prototype.setOriginalValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        throw new Error("Method not implemented.");
    };
    /**
     * @return {?}
     */
    NumberRangeValue.prototype.getOriginalValue = /**
     * @return {?}
     */
    function () {
        return {
            begin: this.startValue,
            end: this.endValue
        };
    };
    /**
     * @return {?}
     */
    NumberRangeValue.prototype.getControlType = /**
     * @return {?}
     */
    function () {
        return ControlType.NumberRange;
    };
    return NumberRangeValue;
}());
export { NumberRangeValue };
if (false) {
    /** @type {?} */
    NumberRangeValue.prototype.startValue;
    /** @type {?} */
    NumberRangeValue.prototype.endValue;
}
var NumberRangeValueConvertor = /** @class */ (function () {
    function NumberRangeValueConvertor() {
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    NumberRangeValueConvertor.prototype.convertToObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        /** @type {?} */
        var numberRangeValue = (/** @type {?} */ (obj));
        /** @type {?} */
        var jobj = new Object();
        jobj["startValue"] = numberRangeValue.startValue;
        jobj["endValue"] = numberRangeValue.endValue;
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    NumberRangeValueConvertor.prototype.initFromObject = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        /** @type {?} */
        var numberRangeValue = new NumberRangeValue();
        if (jobj["startValue"]) {
            //key point！as Number并不会转化格式
            numberRangeValue.startValue = parseFloat(jobj["startValue"]);
        }
        if (jobj["endValue"]) {
            numberRangeValue.endValue = parseFloat(jobj["endValue"]);
        }
        return numberRangeValue;
    };
    return NumberRangeValueConvertor;
}());
export { NumberRangeValueConvertor };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVycmFuZ2V2YXVlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9jb21wb25lbnQtcXVlcnljb25kaXRpb24vIiwic291cmNlcyI6WyJsaWIvZW50aXR5L2NvbmRpdGlvbnZhbHVlL251bWJlcnJhbmdldmF1ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QztJQXNCSSwwQkFBWSxJQUFpRjtRQUFqRixxQkFBQSxFQUFBLFNBQWdELFVBQVUsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUN6RixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDL0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzdFLENBQUM7Ozs7SUF4QkQsa0NBQU87OztJQUFQO1FBQ0ksT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLENBQUM7SUFDOUQsQ0FBQzs7OztJQUNELHFDQUFVOzs7SUFBVjtRQUNJLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO1FBQzVCLElBQUksQ0FBQyxRQUFRLEdBQUcsU0FBUyxDQUFDO0lBQzlCLENBQUM7Ozs7O0lBQ0QsMkNBQWdCOzs7O0lBQWhCLFVBQWlCLEtBQVU7UUFDdkIsTUFBTSxJQUFJLEtBQUssQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0lBQy9DLENBQUM7Ozs7SUFDRCwyQ0FBZ0I7OztJQUFoQjtRQUNJLE9BQU87WUFDSCxLQUFLLEVBQUUsSUFBSSxDQUFDLFVBQVU7WUFDdEIsR0FBRyxFQUFFLElBQUksQ0FBQyxRQUFRO1NBQ3JCLENBQUM7SUFDTixDQUFDOzs7O0lBQ0QseUNBQWM7OztJQUFkO1FBQ0ksT0FBTyxXQUFXLENBQUMsV0FBVyxDQUFDO0lBQ25DLENBQUM7SUFPTCx1QkFBQztBQUFELENBQUMsQUExQkQsSUEwQkM7Ozs7SUFORyxzQ0FBbUI7O0lBQ25CLG9DQUFpQjs7QUFPckI7SUFBQTtJQW9CQSxDQUFDOzs7OztJQW5CRyxtREFBZTs7OztJQUFmLFVBQWdCLEdBQVc7O1lBQ25CLGdCQUFnQixHQUFHLG1CQUFBLEdBQUcsRUFBb0I7O1lBQzFDLElBQUksR0FBRyxJQUFJLE1BQU0sRUFBRTtRQUN2QixJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsZ0JBQWdCLENBQUMsVUFBVSxDQUFDO1FBQ2pELElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUM7UUFDN0MsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQzs7Ozs7SUFFRCxrREFBYzs7OztJQUFkLFVBQWUsSUFBWTs7WUFDbkIsZ0JBQWdCLEdBQUcsSUFBSSxnQkFBZ0IsRUFBRTtRQUM3QyxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRTtZQUNwQiw0QkFBNEI7WUFDNUIsZ0JBQWdCLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztTQUNoRTtRQUNELElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQ2xCLGdCQUFnQixDQUFDLFFBQVEsR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7U0FDNUQ7UUFDRCxPQUFPLGdCQUFnQixDQUFDO0lBQzVCLENBQUM7SUFDTCxnQ0FBQztBQUFELENBQUMsQUFwQkQsSUFvQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJVmFsdWUgfSBmcm9tIFwiLi9pdmFsdWVcIjtcclxuaW1wb3J0IHsgQ29udHJvbFR5cGUgfSBmcm9tIFwiLi4vY29udHJvbHR5cGVcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBOdW1iZXJSYW5nZVZhbHVlIGltcGxlbWVudHMgSVZhbHVlIHtcclxuICAgIGlzRW1wdHkoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuICh0aGlzLnN0YXJ0VmFsdWUgPT0gbnVsbCAmJiB0aGlzLmVuZFZhbHVlID09IG51bGwpO1xyXG4gICAgfVxyXG4gICAgY2xlYXJWYWx1ZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnN0YXJ0VmFsdWUgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgdGhpcy5lbmRWYWx1ZSA9IHVuZGVmaW5lZDtcclxuICAgIH1cclxuICAgIHNldE9yaWdpbmFsVmFsdWUodmFsdWU6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1ldGhvZCBub3QgaW1wbGVtZW50ZWQuXCIpO1xyXG4gICAgfVxyXG4gICAgZ2V0T3JpZ2luYWxWYWx1ZSgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBiZWdpbjogdGhpcy5zdGFydFZhbHVlLFxyXG4gICAgICAgICAgICBlbmQ6IHRoaXMuZW5kVmFsdWVcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgZ2V0Q29udHJvbFR5cGUoKTogQ29udHJvbFR5cGUge1xyXG4gICAgICAgIHJldHVybiBDb250cm9sVHlwZS5OdW1iZXJSYW5nZTtcclxuICAgIH1cclxuICAgIHN0YXJ0VmFsdWU6IG51bWJlcjtcclxuICAgIGVuZFZhbHVlOiBudW1iZXI7XHJcbiAgICBjb25zdHJ1Y3RvcihkYXRhOiB7c3RhcnRWYWx1ZTogc3RyaW5nLCBlbmRWYWx1ZTogc3RyaW5nfSA9IHtzdGFydFZhbHVlOiBudWxsLCBlbmRWYWx1ZTogbnVsbH0pe1xyXG4gICAgICAgIHRoaXMuc3RhcnRWYWx1ZSA9IGRhdGEuc3RhcnRWYWx1ZSA9PSBudWxsID8gbnVsbCA6IHBhcnNlRmxvYXQoZGF0YS5zdGFydFZhbHVlKTtcclxuICAgICAgICB0aGlzLmVuZFZhbHVlID0gZGF0YS5lbmRWYWx1ZSA9PSBudWxsID8gbnVsbCA6IHBhcnNlRmxvYXQoZGF0YS5lbmRWYWx1ZSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBOdW1iZXJSYW5nZVZhbHVlQ29udmVydG9yIHtcclxuICAgIGNvbnZlcnRUb09iamVjdChvYmo6IElWYWx1ZSk6IE9iamVjdCB7XHJcbiAgICAgICAgbGV0IG51bWJlclJhbmdlVmFsdWUgPSBvYmogYXMgTnVtYmVyUmFuZ2VWYWx1ZTtcclxuICAgICAgICBsZXQgam9iaiA9IG5ldyBPYmplY3QoKTtcclxuICAgICAgICBqb2JqW1wic3RhcnRWYWx1ZVwiXSA9IG51bWJlclJhbmdlVmFsdWUuc3RhcnRWYWx1ZTtcclxuICAgICAgICBqb2JqW1wiZW5kVmFsdWVcIl0gPSBudW1iZXJSYW5nZVZhbHVlLmVuZFZhbHVlO1xyXG4gICAgICAgIHJldHVybiBqb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXRGcm9tT2JqZWN0KGpvYmo6IE9iamVjdCk6IE51bWJlclJhbmdlVmFsdWUge1xyXG4gICAgICAgIGxldCBudW1iZXJSYW5nZVZhbHVlID0gbmV3IE51bWJlclJhbmdlVmFsdWUoKTtcclxuICAgICAgICBpZiAoam9ialtcInN0YXJ0VmFsdWVcIl0pIHtcclxuICAgICAgICAgICAgLy9rZXkgcG9pbnTvvIFhcyBOdW1iZXLlubbkuI3kvJrovazljJbmoLzlvI9cclxuICAgICAgICAgICAgbnVtYmVyUmFuZ2VWYWx1ZS5zdGFydFZhbHVlID0gcGFyc2VGbG9hdChqb2JqW1wic3RhcnRWYWx1ZVwiXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChqb2JqW1wiZW5kVmFsdWVcIl0pIHtcclxuICAgICAgICAgICAgbnVtYmVyUmFuZ2VWYWx1ZS5lbmRWYWx1ZSA9IHBhcnNlRmxvYXQoam9ialtcImVuZFZhbHVlXCJdKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bWJlclJhbmdlVmFsdWU7XHJcbiAgICB9XHJcbn0iXX0=