/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/conditionvalue/single-year-value.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ControlType } from "../controltype";
var SingleYearValue = /** @class */ (function () {
    function SingleYearValue(year) {
        if (year === void 0) { year = ''; }
        this.yearValue = year;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    SingleYearValue.prototype.setOriginalValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.yearValue = value.formatted;
    };
    /**
     * @return {?}
     */
    SingleYearValue.prototype.getOriginalValue = /**
     * @return {?}
     */
    function () {
        return this.yearValue;
    };
    /**
     * @return {?}
     */
    SingleYearValue.prototype.getControlType = /**
     * @return {?}
     */
    function () {
        return ControlType.SingleYear;
    };
    /**
     * @return {?}
     */
    SingleYearValue.prototype.clearValue = /**
     * @return {?}
     */
    function () {
        this.yearValue = undefined;
    };
    /**
     * @return {?}
     */
    SingleYearValue.prototype.isEmpty = /**
     * @return {?}
     */
    function () {
        return !this.yearValue;
    };
    return SingleYearValue;
}());
export { SingleYearValue };
if (false) {
    /** @type {?} */
    SingleYearValue.prototype.yearValue;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLXllYXItdmFsdWUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbXBvbmVudC1xdWVyeWNvbmRpdGlvbi8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvY29uZGl0aW9udmFsdWUvc2luZ2xlLXllYXItdmFsdWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0M7SUFjSSx5QkFBWSxJQUFpQjtRQUFqQixxQkFBQSxFQUFBLFNBQWlCO1FBQ3pCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO0lBQzFCLENBQUM7Ozs7O0lBZkQsMENBQWdCOzs7O0lBQWhCLFVBQWlCLEtBQVU7UUFDdkIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDO0lBQ3JDLENBQUM7Ozs7SUFDRCwwQ0FBZ0I7OztJQUFoQjtRQUNJLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUMxQixDQUFDOzs7O0lBQ0Qsd0NBQWM7OztJQUFkO1FBQ0ksT0FBTyxXQUFXLENBQUMsVUFBVSxDQUFDO0lBQ2xDLENBQUM7Ozs7SUFDRCxvQ0FBVTs7O0lBQVY7UUFDSSxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztJQUMvQixDQUFDOzs7O0lBS0QsaUNBQU87OztJQUFQO1FBQ0ksT0FBTyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDM0IsQ0FBQztJQUNMLHNCQUFDO0FBQUQsQ0FBQyxBQXBCRCxJQW9CQzs7OztJQVBHLG9DQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElWYWx1ZSB9IGZyb20gXCIuL2l2YWx1ZVwiO1xyXG5pbXBvcnQgeyBDb250cm9sVHlwZSB9IGZyb20gXCIuLi9jb250cm9sdHlwZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNpbmdsZVllYXJWYWx1ZSBpbXBsZW1lbnRzIElWYWx1ZXtcclxuICAgIHNldE9yaWdpbmFsVmFsdWUodmFsdWU6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMueWVhclZhbHVlID0gdmFsdWUuZm9ybWF0dGVkO1xyXG4gICAgfVxyXG4gICAgZ2V0T3JpZ2luYWxWYWx1ZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy55ZWFyVmFsdWU7XHJcbiAgICB9XHJcbiAgICBnZXRDb250cm9sVHlwZSgpOiBDb250cm9sVHlwZSB7XHJcbiAgICAgICAgcmV0dXJuIENvbnRyb2xUeXBlLlNpbmdsZVllYXI7XHJcbiAgICB9XHJcbiAgICBjbGVhclZhbHVlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMueWVhclZhbHVlID0gdW5kZWZpbmVkO1xyXG4gICAgfVxyXG4gICAgeWVhclZhbHVlOiBzdHJpbmc7XHJcbiAgICBjb25zdHJ1Y3Rvcih5ZWFyOiBzdHJpbmcgPSAnJyl7XHJcbiAgICAgICAgdGhpcy55ZWFyVmFsdWUgPSB5ZWFyO1xyXG4gICAgfVxyXG4gICAgaXNFbXB0eSgpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gIXRoaXMueWVhclZhbHVlO1xyXG4gICAgfVxyXG59Il19