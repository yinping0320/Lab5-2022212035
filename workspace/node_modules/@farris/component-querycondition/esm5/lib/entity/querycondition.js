/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/querycondition.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ControlConvert } from "./controltype/icontrol";
import { ConditionValueConvert } from "./conditionvalue/ivalue";
/**
 * 查询条件实体类
 */
var /**
 * 查询条件实体类
 */
QueryCondition = /** @class */ (function () {
    function QueryCondition() {
        this.visible = true;
    }
    return QueryCondition;
}());
/**
 * 查询条件实体类
 */
export { QueryCondition };
if (false) {
    /**
     * 唯一性标识
     * @type {?}
     */
    QueryCondition.prototype.id;
    /**
     * 字段编号
     * @type {?}
     */
    QueryCondition.prototype.fieldCode;
    /**
     * 字段名称
     * @type {?}
     */
    QueryCondition.prototype.fieldName;
    /**
     * 值类型
     * @type {?}
     */
    QueryCondition.prototype.valueType;
    /**
     * 为空时提示信息
     * @type {?}
     */
    QueryCondition.prototype.placeHolder;
    /**
     * 开始
     * @type {?}
     */
    QueryCondition.prototype.beginPlaceHolder;
    /**
     * 结束
     * @type {?}
     */
    QueryCondition.prototype.endPlaceHolder;
    /**
     * 值
     * 该属性为IValue接口，根据不同的控件类型有不同的实现类：具体如下：
     * 1. 文本类型：TextValue
     * 2. 下拉列表：DropDownListValue
     * 3. 日期区间：DateRangeValue
     * 4. 数字区间：NumberRangeValue
     * 5. 帮助类型：SmartHelpValue
     * 6. 复选框: CheckBoxValue
     * 7. 单数值: SingleNumberValue
     * 8. 单年度: SingleYearValue
     * 9. 单月度: SingleMonthValue
     * 10. 月度区间: MonthRangeValue
     * 11. 单日期: SingleDateValue
     * 12. 单日期时间: SingleDateTimeValue
     * 13. 下拉帮助： ComboLookUpValue
     * 14. 单选框： RadioValue
     * 15. 智能输入框： InputGroupValue
     * @type {?}
     */
    QueryCondition.prototype.value;
    /**
     * 控件类型，目前包括文本类型，下拉列表，日期区间，数字区间，帮助类型
     * 控件类型为IControl接口，根据不同的控件类型对应不同的实现类，具体如下：
     * 1. 文本类型：TextControl
     * 2. 下拉列表：DropDownListControl
     * 3. 日期区间：DateRangeControl
     * 4. 数字区间：NumberRangeControl
     * 5. 帮助类型：SmartHelpControl
     * 6. 单日期： SingleDateControl
     * 7. 单数值：SingleNumberControl
     * 8. 单年度：SingleYearControl
     * 9. 单月度：SingleMonthControl
     * 10. 月度区间：MonthRangeControl
     * 11. 单日期时间：SingleDateTimeControl
     * 12. 日期时间区间：DateTimeRangeControl
     * 13. 复选框：CheckBoxControl
     * 14. 下拉帮助：ComboLookUpControl
     * 15. 单选框： RadioControl
     * 16. 智能输入框： InputGroupControl
     * @type {?}
     */
    QueryCondition.prototype.control;
    /** @type {?} */
    QueryCondition.prototype.readonly;
    /** @type {?} */
    QueryCondition.prototype.visible;
    /**
     * 高级模式下的条件id
     * @type {?}
     */
    QueryCondition.prototype.conditionid;
    /**
     * 高级模式下的值关系
     * @type {?}
     */
    QueryCondition.prototype.compareType;
    /**
     * 高级模式下的与下个条件的关系
     * @type {?}
     */
    QueryCondition.prototype.relation;
    /**
     * 高级模式下的值右括号
     * @type {?}
     */
    QueryCondition.prototype.Rbracket;
    /**
     * 高级模式下的值左括号
     * @type {?}
     */
    QueryCondition.prototype.Lbracket;
}
/**
 * 查询条件序列化与反序列化器
 */
var /**
 * 查询条件序列化与反序列化器
 */
QueryConditionConvert = /** @class */ (function () {
    function QueryConditionConvert() {
    }
    /**
     * 序列化
     * @param obj 查询条件实体
     * 为了兼容C#产生的旧数据，向server传递的JSON object属性名全改为首字母大写
     */
    /**
     * 序列化
     * @param {?} obj 查询条件实体
     * 为了兼容C#产生的旧数据，向server传递的JSON object属性名全改为首字母大写
     * @return {?}
     */
    QueryConditionConvert.prototype.convertJObject = /**
     * 序列化
     * @param {?} obj 查询条件实体
     * 为了兼容C#产生的旧数据，向server传递的JSON object属性名全改为首字母大写
     * @return {?}
     */
    function (obj) {
        /** @type {?} */
        var queryCondition = (/** @type {?} */ (obj));
        /** @type {?} */
        var jobj = new Object();
        jobj["ID"] = queryCondition.id;
        jobj["FieldCode"] = queryCondition.fieldCode;
        jobj["FieldName"] = queryCondition.fieldName;
        // jobj["compareType"]=queryCondition.compareType;
        jobj["ValueType"] = queryCondition.valueType;
        jobj["placeHolder"] = queryCondition.placeHolder;
        // 无论是否区间都追加
        jobj["beginPlaceHolder"] = queryCondition.hasOwnProperty('beginPlaceHolder') ? queryCondition['beginPlaceHolder'] : '';
        jobj["endPlaceHolder"] = queryCondition.hasOwnProperty('endPlaceHolder') ? queryCondition['endPlaceHolder'] : '';
        jobj["visible"] = queryCondition.hasOwnProperty('visible') ? queryCondition['visible'] : true;
        jobj["conditionid"] = queryCondition.hasOwnProperty('conditionid') ? queryCondition['conditionid'] : undefined;
        jobj["compareType"] = queryCondition.hasOwnProperty('compareType') ? queryCondition['compareType'] : undefined;
        jobj["relation"] = queryCondition.hasOwnProperty('relation') ? queryCondition['relation'] : undefined;
        jobj["Lbracket"] = queryCondition.hasOwnProperty('Lbracket') ? queryCondition['Lbracket'] : undefined;
        jobj["Rbracket"] = queryCondition.hasOwnProperty('Rbracket') ? queryCondition['Rbracket'] : undefined;
        /** @type {?} */
        var valueConvert = new ConditionValueConvert();
        if (queryCondition.value) {
            jobj["Value"] = valueConvert.convertToObject(queryCondition.value);
        }
        /** @type {?} */
        var controlConvertor = new ControlConvert();
        if (queryCondition.control) {
            jobj["Control"] = controlConvertor.convertJObject(queryCondition.control);
        }
        return jobj;
    };
    /**
     * 反序列化
     * @param jobj 查询条件实体序列化后的JSON对象
     * server端存储的是前端定义好格式的字符串，所以client接收时以约定好的格式反序列化
     */
    /**
     * 反序列化
     * @param {?} jobj 查询条件实体序列化后的JSON对象
     * server端存储的是前端定义好格式的字符串，所以client接收时以约定好的格式反序列化
     * @return {?}
     */
    QueryConditionConvert.prototype.initFromJobject = /**
     * 反序列化
     * @param {?} jobj 查询条件实体序列化后的JSON对象
     * server端存储的是前端定义好格式的字符串，所以client接收时以约定好的格式反序列化
     * @return {?}
     */
    function (jobj) {
        /** @type {?} */
        var queryCondition = new QueryCondition();
        queryCondition.id = jobj["ID"];
        queryCondition.fieldCode = jobj["FieldCode"];
        queryCondition.fieldName = jobj["FieldName"];
        // queryCondition.compareType=jobj["compareType"] as CompareType;
        queryCondition.valueType = (/** @type {?} */ ((jobj["ValueType"])));
        queryCondition.placeHolder = jobj["placeHolder"];
        queryCondition.beginPlaceHolder = jobj.hasOwnProperty('beginPlaceHolder') ? jobj['beginPlaceHolder'] : '';
        queryCondition.endPlaceHolder = jobj.hasOwnProperty('endPlaceHolder') ? jobj['endPlaceHolder'] : '';
        queryCondition.visible = jobj.hasOwnProperty('visible') ? jobj['visible'] : true;
        queryCondition.conditionid = jobj.hasOwnProperty('conditionid') ? jobj['conditionid'] : undefined;
        queryCondition.compareType = jobj.hasOwnProperty('compareType') ? jobj['compareType'] : undefined;
        queryCondition.relation = jobj.hasOwnProperty('relation') ? jobj['relation'] : undefined;
        queryCondition.Rbracket = jobj.hasOwnProperty('Rbracket') ? jobj['Rbracket'] : undefined;
        queryCondition.Lbracket = jobj.hasOwnProperty('Lbracket') ? jobj['Lbracket'] : undefined;
        /** @type {?} */
        var conditonValue = jobj["Value"];
        if (conditonValue) {
            /** @type {?} */
            var valueConvert = new ConditionValueConvert();
            queryCondition.value = valueConvert.initFromObject(conditonValue);
        }
        /** @type {?} */
        var conditionControl = jobj["Control"];
        if (conditionControl) {
            /** @type {?} */
            var controlConvertor = new ControlConvert();
            queryCondition.control = controlConvertor.initFromJobject(conditionControl);
        }
        return queryCondition;
    };
    return QueryConditionConvert;
}());
/**
 * 查询条件序列化与反序列化器
 */
export { QueryConditionConvert };
//# sourceMappingURL=data:application/json;base64,