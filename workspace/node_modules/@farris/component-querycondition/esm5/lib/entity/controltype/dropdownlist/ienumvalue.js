/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/controltype/dropdownlist/ienumvalue.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EnumType } from "./enumtype";
import { EnumIntegerValue } from "./integerenumvalue";
import { EnumStringValue } from "./stringenumvalue";
import { EnumBoolValue } from "./boolenumvalue";
/**
 * @record
 */
export function IEnumValue() { }
if (false) {
    /**
     * @return {?}
     */
    IEnumValue.prototype.getEnumType = function () { };
    /**
     * @return {?}
     */
    IEnumValue.prototype.getEnumValueName = function () { };
    /**
     * @return {?}
     */
    IEnumValue.prototype.getEnumValue = function () { };
}
var EnumValueConvert = /** @class */ (function () {
    function EnumValueConvert() {
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    EnumValueConvert.prototype.convertJObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        /** @type {?} */
        var enumValue = (/** @type {?} */ (obj));
        /** @type {?} */
        var enumType = enumValue.getEnumType();
        /** @type {?} */
        var jobj = new Object();
        jobj["Type"] = enumType;
        jobj["Content"] = enumValue;
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    EnumValueConvert.prototype.initFromJobject = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        /** @type {?} */
        var enumType = (/** @type {?} */ (jobj["Type"]));
        /** @type {?} */
        var content = (/** @type {?} */ (jobj["Content"]));
        if (enumType == EnumType.IntType) {
            return Object.assign(new EnumIntegerValue(), content);
        }
        else if (enumType == EnumType.BoolType) {
            return Object.assign(new EnumBoolValue(), content);
        }
        else {
            return Object.assign(new EnumStringValue(), content);
        }
    };
    return EnumValueConvert;
}());
export { EnumValueConvert };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWVudW12YWx1ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvY29tcG9uZW50LXF1ZXJ5Y29uZGl0aW9uLyIsInNvdXJjZXMiOlsibGliL2VudGl0eS9jb250cm9sdHlwZS9kcm9wZG93bmxpc3QvaWVudW12YWx1ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdEMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDdEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7OztBQUVoRCxnQ0FJQzs7Ozs7SUFIRyxtREFBdUI7Ozs7SUFDdkIsd0RBQTBCOzs7O0lBQzFCLG9EQUFtQjs7QUFHdkI7SUFBQTtJQXdCQSxDQUFDOzs7OztJQXRCRyx5Q0FBYzs7OztJQUFkLFVBQWUsR0FBYzs7WUFDckIsU0FBUyxHQUFDLG1CQUFBLEdBQUcsRUFBYzs7WUFDM0IsUUFBUSxHQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUU7O1lBQ2hDLElBQUksR0FBQyxJQUFJLE1BQU0sRUFBRTtRQUNyQixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUMsUUFBUSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBQyxTQUFTLENBQUM7UUFDMUIsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQzs7Ozs7SUFFRCwwQ0FBZTs7OztJQUFmLFVBQWdCLElBQVc7O1lBQ25CLFFBQVEsR0FBQyxtQkFBQSxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQVk7O1lBQ2pDLE9BQU8sR0FBQyxtQkFBQSxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQWM7UUFDekMsSUFBRyxRQUFRLElBQUUsUUFBUSxDQUFDLE9BQU8sRUFBQztZQUMxQixPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxnQkFBZ0IsRUFBRSxFQUFDLE9BQU8sQ0FBQyxDQUFFO1NBQ3pEO2FBQ0ksSUFBRyxRQUFRLElBQUUsUUFBUSxDQUFDLFFBQVEsRUFBQztZQUNoQyxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxhQUFhLEVBQUUsRUFBQyxPQUFPLENBQUMsQ0FBRTtTQUN0RDthQUNHO1lBQ0EsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksZUFBZSxFQUFFLEVBQUMsT0FBTyxDQUFDLENBQUU7U0FDeEQ7SUFDTCxDQUFDO0lBQ0wsdUJBQUM7QUFBRCxDQUFDLEFBeEJELElBd0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW51bVR5cGUgfSBmcm9tIFwiLi9lbnVtdHlwZVwiO1xyXG5pbXBvcnQgeyBFbnVtSW50ZWdlclZhbHVlIH0gZnJvbSBcIi4vaW50ZWdlcmVudW12YWx1ZVwiO1xyXG5pbXBvcnQgeyBFbnVtU3RyaW5nVmFsdWUgfSBmcm9tIFwiLi9zdHJpbmdlbnVtdmFsdWVcIjtcclxuaW1wb3J0IHsgRW51bUJvb2xWYWx1ZSB9IGZyb20gXCIuL2Jvb2xlbnVtdmFsdWVcIjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUVudW1WYWx1ZXtcclxuICAgIGdldEVudW1UeXBlKCk6RW51bVR5cGU7XHJcbiAgICBnZXRFbnVtVmFsdWVOYW1lKCk6c3RyaW5nO1xyXG4gICAgZ2V0RW51bVZhbHVlKCk6YW55O1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRW51bVZhbHVlQ29udmVydHtcclxuXHJcbiAgICBjb252ZXJ0Sk9iamVjdChvYmo6SUVudW1WYWx1ZSk6T2JqZWN0e1xyXG4gICAgICAgIGxldCBlbnVtVmFsdWU9b2JqIGFzIElFbnVtVmFsdWU7XHJcbiAgICAgICAgbGV0IGVudW1UeXBlPWVudW1WYWx1ZS5nZXRFbnVtVHlwZSgpO1xyXG4gICAgICAgIGxldCBqb2JqPW5ldyBPYmplY3QoKTtcclxuICAgICAgICBqb2JqW1wiVHlwZVwiXT1lbnVtVHlwZTtcclxuICAgICAgICBqb2JqW1wiQ29udGVudFwiXT1lbnVtVmFsdWU7XHJcbiAgICAgICAgcmV0dXJuIGpvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdEZyb21Kb2JqZWN0KGpvYmo6T2JqZWN0KTpJRW51bVZhbHVle1xyXG4gICAgICAgIGxldCBlbnVtVHlwZT1qb2JqW1wiVHlwZVwiXSBhcyBFbnVtVHlwZTtcclxuICAgICAgICBsZXQgY29udGVudD1qb2JqW1wiQ29udGVudFwiXSBhcyBJRW51bVZhbHVlO1xyXG4gICAgICAgIGlmKGVudW1UeXBlPT1FbnVtVHlwZS5JbnRUeXBlKXtcclxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24obmV3IEVudW1JbnRlZ2VyVmFsdWUoKSxjb250ZW50KSA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYoZW51bVR5cGU9PUVudW1UeXBlLkJvb2xUeXBlKXtcclxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24obmV3IEVudW1Cb29sVmFsdWUoKSxjb250ZW50KSA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKG5ldyBFbnVtU3RyaW5nVmFsdWUoKSxjb250ZW50KSA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il19