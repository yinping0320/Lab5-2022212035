/**
 * @fileoverview added by tsickle
 * Generated from: lib/querycondition-advanced/querycondition-item/querycondition-item.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Injector } from '@angular/core';
import { ControlType } from '../../entity/controltype';
import { IdService } from '@farris/ui-common';
import { StateService } from '../service/state.service';
var QueryconditionItemComponent = /** @class */ (function () {
    function QueryconditionItemComponent(injector) {
        this.injector = injector;
        this.controlType = ControlType;
        this.fieldCodeOfClearFields = [];
        this.idService = this.injector.get(IdService);
        this.stateSer = this.injector.get(StateService);
    }
    /**
     * @return {?}
     */
    QueryconditionItemComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    QueryconditionItemComponent.prototype.conditionChange = /**
     * @return {?}
     */
    function () {
        this.stateSer.updateQueryConditionListData();
    };
    /**
     * @param {?} a
     * @return {?}
     */
    QueryconditionItemComponent.prototype.getStyle = /**
     * @param {?} a
     * @return {?}
     */
    function (a) {
        return '';
    };
    /**
     * @param {?} value
     * @return {?}
     */
    QueryconditionItemComponent.prototype.buildSmartHelpKey = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        /** @type {?} */
        var prefix = '';
        if (location.hash) {
            /** @type {?} */
            var pathArr = location.hash.split('?');
            prefix = pathArr ? pathArr[0] : '';
        }
        else {
            /** @type {?} */
            var pathArr = location.pathname.split('/');
            prefix = pathArr ? pathArr[pathArr.length - 1] : '';
        }
        return this.idService.encrypt(prefix + '/querysolution/' + value);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    QueryconditionItemComponent.prototype.clearFieldsChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
    };
    QueryconditionItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'querycondition-item',
                    template: "<app-solution-input  \r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.Text && item.visible\"\r\n    [(item)]=\"item\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-input>\r\n\r\n<app-solution-inputgroup\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.InputGroup && item.visible\"\r\n    [(item)]=\"item\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-inputgroup>\r\n\r\n<app-solution-dropdownlist\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.DropDownList && item.visible\"\r\n    [(item)]=\"item\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-dropdownlist>\r\n\r\n<app-solution-smarthelp\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    (clearFieldsChange)=\"clearFieldsChange($event)\"\r\n    *ngIf=\"item.control.getControlType() == controlType.SmartHelp && item.visible\"\r\n    [(item)]=\"item\"\r\n    [instanceId]=\"buildSmartHelpKey(item.fieldCode)\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-smarthelp>\r\n\r\n<app-solution-single-number\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.SingleNumber && item.visible\"\r\n    [(item)]=\"item\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-single-number>\r\n\r\n\r\n\r\n<app-solution-datepicker\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.SingleDate && item.visible\"\r\n    [(item)]=\"item\"\r\n    [controlType]=\"item.control.getControlType()\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-datepicker>\r\n\r\n<app-solution-datepicker\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.DateRange && item.visible\"\r\n    [(item)]=\"item\"\r\n    [controlType]=\"item.control.getControlType()\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-datepicker>\r\n\r\n<app-solution-datepicker\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.SingleYear && item.visible\"\r\n    [(item)]=\"item\"\r\n    [controlType]=\"item.control.getControlType()\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-datepicker>\r\n\r\n<app-solution-datepicker\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.SingleMonth && item.visible\"\r\n    [(item)]=\"item\"\r\n    [controlType]=\"item.control.getControlType()\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-datepicker>\r\n\r\n<app-solution-datepicker\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.MonthRange && item.visible\"\r\n    [(item)]=\"item\"\r\n    [controlType]=\"item.control.getControlType()\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-datepicker>\r\n\r\n<app-solution-datepicker\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.SingleDateTime && item.visible\"\r\n    [(item)]=\"item\"\r\n    [controlType]=\"item.control.getControlType()\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-datepicker>\r\n\r\n<app-solution-datepicker\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.DateTimeRange && item.visible\"\r\n    [(item)]=\"item\"\r\n    [controlType]=\"item.control.getControlType()\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-datepicker>\r\n\r\n<app-solution-combolookup\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.ComboLookUp && item.visible\"\r\n    [(item)]=\"item\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-combolookup>\r\n\r\n<app-solution-checkbox\r\n    [ngClass]=\"getStyle(item)\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.BoolCheck && item.visible\"\r\n    [(item)]=\"item\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-checkbox>\r\n\r\n<app-solution-radio\r\n    [ngClass]=\"getStyle(item)\"\r\n    class=\"\"\r\n    [changeFields]=\"fieldCodeOfClearFields\"\r\n    (conditionChange)=\"conditionChange()\"\r\n    *ngIf=\"item.control.getControlType() == controlType.Radio && item.visible\"\r\n    [(item)]=\"item\"\r\n    [hideLabel]=\"true\">\r\n</app-solution-radio>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    QueryconditionItemComponent.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    QueryconditionItemComponent.propDecorators = {
        item: [{ type: Input }]
    };
    return QueryconditionItemComponent;
}());
export { QueryconditionItemComponent };
if (false) {
    /** @type {?} */
    QueryconditionItemComponent.prototype.controlType;
    /** @type {?} */
    QueryconditionItemComponent.prototype.item;
    /** @type {?} */
    QueryconditionItemComponent.prototype.fieldCodeOfClearFields;
    /**
     * @type {?}
     * @private
     */
    QueryconditionItemComponent.prototype.idService;
    /**
     * @type {?}
     * @private
     */
    QueryconditionItemComponent.prototype.stateSer;
    /**
     * @type {?}
     * @private
     */
    QueryconditionItemComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnljb25kaXRpb24taXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbXBvbmVudC1xdWVyeWNvbmRpdGlvbi8iLCJzb3VyY2VzIjpbImxpYi9xdWVyeWNvbmRpdGlvbi1hZHZhbmNlZC9xdWVyeWNvbmRpdGlvbi1pdGVtL3F1ZXJ5Y29uZGl0aW9uLWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsUUFBUSxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDOUMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDBCQUEwQixDQUFBO0FBQ3ZEO0lBYUUscUNBQW9CLFFBQWtCO1FBQWxCLGFBQVEsR0FBUixRQUFRLENBQVU7UUFMdEMsZ0JBQVcsR0FBRyxXQUFXLENBQUM7UUFFMUIsMkJBQXNCLEdBQWtCLEVBQUUsQ0FBQztRQUl6QyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzlDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELDhDQUFROzs7SUFBUjtJQUNBLENBQUM7Ozs7SUFFRCxxREFBZTs7O0lBQWY7UUFDRSxJQUFJLENBQUMsUUFBUSxDQUFDLDRCQUE0QixFQUFFLENBQUE7SUFDOUMsQ0FBQzs7Ozs7SUFFRCw4Q0FBUTs7OztJQUFSLFVBQVMsQ0FBQztRQUNSLE9BQU8sRUFBRSxDQUFBO0lBQ1gsQ0FBQzs7Ozs7SUFDRCx1REFBaUI7Ozs7SUFBakIsVUFBa0IsS0FBYTs7WUFDekIsTUFBTSxHQUFHLEVBQUU7UUFDZixJQUFJLFFBQVEsQ0FBQyxJQUFJLEVBQUU7O2dCQUNYLE9BQU8sR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7WUFDeEMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7U0FDcEM7YUFBTTs7Z0JBQ0MsT0FBTyxHQUFHLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztZQUM1QyxNQUFNLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1NBQ3JEO1FBQ0QsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsaUJBQWlCLEdBQUcsS0FBSyxDQUFDLENBQUM7SUFDcEUsQ0FBQzs7Ozs7SUFDRCx1REFBaUI7Ozs7SUFBakIsVUFBa0IsS0FBSztJQUN2QixDQUFDOztnQkF4Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxxQkFBcUI7b0JBQy9CLDRrTEFBbUQ7O2lCQUVwRDs7OztnQkFSa0MsUUFBUTs7O3VCQWF4QyxLQUFLOztJQWdDUixrQ0FBQztDQUFBLEFBekNELElBeUNDO1NBcENZLDJCQUEyQjs7O0lBR3RDLGtEQUEwQjs7SUFDMUIsMkNBQWE7O0lBQ2IsNkRBQTJDOzs7OztJQUMzQyxnREFBNkI7Ozs7O0lBQzdCLCtDQUErQjs7Ozs7SUFDbkIsK0NBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0LCBJbmplY3RvciwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbnRyb2xUeXBlIH0gZnJvbSAnLi4vLi4vZW50aXR5L2NvbnRyb2x0eXBlJztcclxuaW1wb3J0IHsgSWRTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21tb24nO1xyXG5pbXBvcnQgeyBTdGF0ZVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlL3N0YXRlLnNlcnZpY2UnXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAncXVlcnljb25kaXRpb24taXRlbScsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3F1ZXJ5Y29uZGl0aW9uLWl0ZW0uY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3F1ZXJ5Y29uZGl0aW9uLWl0ZW0uY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBRdWVyeWNvbmRpdGlvbkl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuXHJcbiAgY29udHJvbFR5cGUgPSBDb250cm9sVHlwZTtcclxuICBASW5wdXQoKSBpdGVtXHJcbiAgZmllbGRDb2RlT2ZDbGVhckZpZWxkczogQXJyYXk8c3RyaW5nPiA9IFtdO1xyXG4gIHByaXZhdGUgaWRTZXJ2aWNlOiBJZFNlcnZpY2U7XHJcbiAgcHJpdmF0ZSBzdGF0ZVNlcjogU3RhdGVTZXJ2aWNlO1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yKSB7XHJcbiAgICB0aGlzLmlkU2VydmljZSA9IHRoaXMuaW5qZWN0b3IuZ2V0KElkU2VydmljZSk7XHJcbiAgICB0aGlzLnN0YXRlU2VyID0gdGhpcy5pbmplY3Rvci5nZXQoU3RhdGVTZXJ2aWNlKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbiAgY29uZGl0aW9uQ2hhbmdlKCkge1xyXG4gICAgdGhpcy5zdGF0ZVNlci51cGRhdGVRdWVyeUNvbmRpdGlvbkxpc3REYXRhKClcclxuICB9XHJcblxyXG4gIGdldFN0eWxlKGEpIHtcclxuICAgIHJldHVybiAnJ1xyXG4gIH1cclxuICBidWlsZFNtYXJ0SGVscEtleSh2YWx1ZTogc3RyaW5nKSB7XHJcbiAgICBsZXQgcHJlZml4ID0gJyc7XHJcbiAgICBpZiAobG9jYXRpb24uaGFzaCkge1xyXG4gICAgICBjb25zdCBwYXRoQXJyID0gbG9jYXRpb24uaGFzaC5zcGxpdCgnPycpO1xyXG4gICAgICBwcmVmaXggPSBwYXRoQXJyID8gcGF0aEFyclswXSA6ICcnO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc3QgcGF0aEFyciA9IGxvY2F0aW9uLnBhdGhuYW1lLnNwbGl0KCcvJyk7XHJcbiAgICAgIHByZWZpeCA9IHBhdGhBcnIgPyBwYXRoQXJyW3BhdGhBcnIubGVuZ3RoIC0gMV0gOiAnJztcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLmlkU2VydmljZS5lbmNyeXB0KHByZWZpeCArICcvcXVlcnlzb2x1dGlvbi8nICsgdmFsdWUpO1xyXG4gIH1cclxuICBjbGVhckZpZWxkc0NoYW5nZShldmVudCkge1xyXG4gIH1cclxufVxyXG4iXX0=