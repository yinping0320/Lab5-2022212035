import { OnInit, OnChanges, EventEmitter, SimpleChanges } from '@angular/core';
import { QueryCondition } from '../../entity/querycondition';
import { QuickSelectOption } from '../../entity/controltype/smarthelp/smarthelpcontrol';
import { SolutionService } from '../../service/solution.service';
import { LookupGridComponent } from '@farris/ui-lookup';
export declare class SolutionSmartHelpComponent implements OnInit, OnChanges {
    private solutionService;
    hideLabel: boolean;
    /**
     * QueryCondition类型
     */
    item: any;
    /**
     * 某个字段发生值变化事件时，需要同步清空的字段，可能不是当前字段
     */
    changeFields: Array<string>;
    instanceId: string;
    conditionChange: EventEmitter<{}>;
    mappingEmitter: EventEmitter<{}>;
    clearFieldsChange: EventEmitter<{}>;
    lookup: LookupGridComponent;
    uri: string;
    textField: string;
    mapFields: any;
    idField: any;
    valueField: any;
    textValue: any;
    displayType: any;
    context: any;
    preEventCmd: any;
    postEventCmd: any;
    loadTreeDataType: string;
    enableFullTree: boolean;
    singleSelect: boolean;
    expandLevel: number;
    enableCascade: boolean;
    cascadeStatus: "enable" | "up" | "down" | "disable";
    testId: string;
    placeholder: string;
    nosearch: boolean;
    displayFields: string;
    displayTextSeparator: string;
    editable: boolean;
    clearFields: string;
    dialogTitle: string;
    dialogWidth: number;
    dialogHeight: number;
    /** 每页记录数 */
    pageSize: number;
    /** 可用分页记录数列表 */
    pageList: Array<number>;
    quickSelect: QuickSelectOption;
    enableMultiFieldSearch: boolean;
    constructor(solutionService: SolutionService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    getSmartHelpBindingInfo(): void;
    onBeforeOpen: () => import("rxjs").Observable<boolean>;
    clearData(data: any): void;
    getConditionItemTitle(field: QueryCondition): string;
    /**
     * selectedItem
     * code: "code02"
        id: "id02"
        name: "机构02"
        version: "2019-10-21T00:00:00"
    */
    textChangedHandler(data: string): void;
    selectedDataHandler(selectedItem: any): void;
}
