import { OnInit, OnChanges, Injector, EventEmitter, SimpleChanges, OnDestroy } from '@angular/core';
import { QueryCondition } from '../../entity/querycondition';
import { SolutionService } from '../../service/solution.service';
import { Observable, Subject, Subscription } from 'rxjs';
import { DateChangedResult } from './datepicker-options';
import { MessagerService } from '@farris/ui-messager';
export declare class DatePickerComponent implements OnInit, OnChanges, OnDestroy {
    private injector;
    hideLabel: boolean;
    item: any;
    controlType: number;
    /**
     * 某个字段发生值变化事件时，需要同步清空的字段，可能不是当前字段
     */
    changeFields: Array<string>;
    conditionChange: EventEmitter<{}>;
    solutionService: SolutionService;
    messageService: MessagerService;
    dateRange: boolean;
    showTime: boolean;
    showType: number;
    maxDate: string | Date | null;
    minDate: string | Date | null;
    disableDates: {
        year: number;
        month: number;
        day: number;
    }[];
    placeholder: string;
    dateFormat: string;
    returnFormat: string;
    returnType: string;
    disabled: boolean;
    readonly: boolean;
    editable: boolean;
    dateRangeDatesDelimiter: string;
    bindValue: string;
    beginValue: any;
    endValue: any;
    testId: string;
    beginPlaceHolder: string;
    endPlaceHolder: string;
    destroy$: Subject<any>;
    dateChangedCmd: (date: any) => Observable<DateChangedResult>;
    dateChangedCmdSubscription: Subscription;
    enableDynamic: boolean;
    enableSplit: boolean;
    constructor(injector: Injector);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    private updateParamsByCondition;
    onDateChange(event: any): void;
    onSpiltDateChange(event: any, type: 'start' | 'end'): void;
    onDynamicValueChange(event: any): void;
    onDynamicViewChanged(event: any): void;
    getConditionItemTitle(field: QueryCondition): string;
    beginValueChange($event: any): void;
    endValueChange($event: any): void;
    runDateChangedEvent(date: any): void;
}
