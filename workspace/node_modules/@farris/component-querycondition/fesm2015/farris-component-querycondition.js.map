{"version":3,"file":"farris-component-querycondition.js.map","sources":["ng://@farris/component-querycondition/lib/service/communicationservice.ts","ng://@farris/component-querycondition/lib/service/convertorservice.ts","ng://@farris/component-querycondition/lib/entity/controltype.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/enumtype.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/integerenumvalue.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/stringenumvalue.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/boolenumvalue.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/ienumvalue.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/dropdownlistcontrol.ts","ng://@farris/component-querycondition/lib/entity/controltype/text/textcontrol.ts","ng://@farris/component-querycondition/lib/entity/controltype/daterange/date-range.control.ts","ng://@farris/component-querycondition/lib/entity/controltype/date/single-date-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/smarthelp/smarthelpcontrol.ts","ng://@farris/component-querycondition/lib/entity/controltype/numberrange/numberrangecontrol.ts","ng://@farris/component-querycondition/lib/entity/controltype/number/single-number-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/year/year-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/checkbox/checkbox-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/daterange/datertime-range-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/month/month-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/monthrange/month-range-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/date/single-date-time-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/combolookup/combolookup-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/radio/radio-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/input-group/inputgroupcontrol.ts","ng://@farris/component-querycondition/lib/entity/controltype/icontrol.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/textvalue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/numberrangevaue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/daterangevalue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/smarthelpvalue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/single-date-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/single-number-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/single-year-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/checkbox-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/dropdownlistvalue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/single-month-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/month-range-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/single-date-time-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/combolookup-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/radio-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/inputgroupvalue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/ivalue.ts","ng://@farris/component-querycondition/lib/entity/querycondition.ts","ng://@farris/component-querycondition/lib/entity/valuetype.ts","ng://@farris/component-querycondition/lib/service/solution.service.ts","ng://@farris/component-querycondition/lib/fieldconfigdialog/configdialog.component.ts","ng://@farris/component-querycondition/lib/querycondition.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/numberrangecomponent/numberrange.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/input/input.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/inputgroup/inputgroup.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/smarthelp/smarthelp.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/dropdown/dropdownlist.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/numbercomponent/single-number.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/checkbox/checkbox.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/radio/radio.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/datepicker/datepicker.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/combolookup/combolookup.component.ts","ng://@farris/component-querycondition/lib/directives/clear-fields.directive.ts","ng://@farris/component-querycondition/lib/directives/label-text-multi.directive.ts","ng://@farris/component-querycondition/lib/querycondition-advanced/service/state.service.ts","ng://@farris/component-querycondition/lib/entity/querysolutionvo.ts","ng://@farris/component-querycondition/lib/querycondition-advanced/querycondition-advanced.component.ts","ng://@farris/component-querycondition/lib/querycondition-advanced/config/compare-type.config.ts","ng://@farris/component-querycondition/lib/querycondition-advanced/querycondition-group/querycondition-group.component.ts","ng://@farris/component-querycondition/lib/querycondition-advanced/querycondition-item/querycondition-item.component.ts","ng://@farris/component-querycondition/lib/querycondition.module.ts","ng://@farris/component-querycondition/lib/entity/querysolutionextendvo.ts","ng://@farris/component-querycondition/lib/entity/comparetype.ts","ng://@farris/component-querycondition/lib/entity/fieldconfig/fieldconfig.ts"],"sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\r\n/**\r\n * ä¸ºäºå¼å®¹æ§ä»£ç ï¼\r\n * ä¿çä¸ä¸ªç©ºçservice\r\n*/\r\n@Injectable()\r\nexport class CommunicationService {\r\n    \r\n    public eventbus: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n}","import { Injectable } from '@angular/core';\r\n/**\r\n * ä¸ºäºå¼å®¹æ§ä»£ç ï¼\r\n * ä¿çä¸ä¸ªç©ºçservice\r\n*/\r\n@Injectable()\r\nexport class ConvertorService {\r\n    constructor(){}\r\n}","export enum ControlType{\r\n    Text = 0,\r\n    SingleDate = 1,\r\n    SmartHelp = 2,\r\n    DropDownList = 3,\r\n    DateRange = 4,\r\n    NumberRange = 5,\r\n    SingleNumber = 6,\r\n    SingleYear = 7,\r\n    BoolCheck = 8,\r\n    DateTimeRange = 9,\r\n    SingleMonth = 10,\r\n    MonthRange = 11,\r\n    SingleDateTime = 12,\r\n    ComboLookUp = 13,\r\n    Radio = 14,\r\n    InputGroup = 15\r\n}","export enum EnumType{\r\n    IntType=0,\r\n    StringType=1,\r\n    BoolType=2\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Integerç±»å\r\n */\r\nexport class EnumIntegerValue implements IEnumValue{\r\n    getEnumType(): EnumType {\r\n        return EnumType.IntType;\r\n    }\r\n    \r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:number;\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Stringç±»å\r\n */\r\nexport class EnumStringValue implements IEnumValue{\r\n    getEnumType(): EnumType {\r\n        return  EnumType.StringType;\r\n    }\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Boolç±»å\r\n */\r\nexport class EnumBoolValue implements IEnumValue{\r\n    \r\n    getEnumType(): EnumType {\r\n        return  EnumType.BoolType;\r\n    }\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:boolean;\r\n}","import { EnumType } from \"./enumtype\";\r\nimport { EnumIntegerValue } from \"./integerenumvalue\";\r\nimport { EnumStringValue } from \"./stringenumvalue\";\r\nimport { EnumBoolValue } from \"./boolenumvalue\";\r\n\r\nexport interface IEnumValue{\r\n    getEnumType():EnumType;\r\n    getEnumValueName():string;\r\n    getEnumValue():any;\r\n}\r\n\r\nexport class EnumValueConvert{\r\n\r\n    convertJObject(obj:IEnumValue):Object{\r\n        let enumValue=obj as IEnumValue;\r\n        let enumType=enumValue.getEnumType();\r\n        let jobj=new Object();\r\n        jobj[\"Type\"]=enumType;\r\n        jobj[\"Content\"]=enumValue;\r\n        return jobj;\r\n    }\r\n\r\n    initFromJobject(jobj:Object):IEnumValue{\r\n        let enumType=jobj[\"Type\"] as EnumType;\r\n        let content=jobj[\"Content\"] as IEnumValue;\r\n        if(enumType==EnumType.IntType){\r\n            return Object.assign(new EnumIntegerValue(),content) ;\r\n        }\r\n        else if(enumType==EnumType.BoolType){\r\n            return Object.assign(new EnumBoolValue(),content) ;\r\n        }\r\n        else{\r\n            return Object.assign(new EnumStringValue(),content) ;\r\n        }\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { EnumType } from \"./enumtype\";\r\nimport { IEnumValue, EnumValueConvert } from \"./ienumvalue\";\r\nimport { EnumStringValue } from \"./stringenumvalue\";\r\nimport { EnumBoolValue } from \"./boolenumvalue\";\r\nimport { EnumIntegerValue } from \"./integerenumvalue\";\r\n\r\n/**\r\n * ä¸æåè¡¨æ§ä»¶\r\n */\r\nexport class DropDownListControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DropDownList;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * ä¸æå¼ç±»å\r\n     */\r\n    valueType: EnumType;\r\n\r\n    /**\r\n     * ä¸ææ°æ®æºåè¡¨\r\n     * è¯¥å±æ§ä¸ºIEnumValueæ¥å£ç±»åï¼å·ä½å®ç°ç±»å¦ä¸ï¼\r\n     * 1.å¸å°ç±»åï¼EnumBoolValue,å¸å°ç±»åçæ§ä»¶ä¼è½¬æä¸æåè¡¨ï¼å®ç°ç±»ä½¿ç¨EnumBoolValue\r\n     * 2.å­ç¬¦ä¸²ç±»åï¼EnumStringValue\r\n     * 3.æ´åç±»åï¼EnumIntegerValue ä¾å¦Radio Buttonç±»åéè¦ä½¿ç¨EnumIntegerValueå®ç°ç±»\r\n     */\r\n    enumValues: Array<IEnumValue>;\r\n\r\n    /**\r\n     * æå¡å¨ç«¯API\r\n     */\r\n    uri: string;\r\n\r\n    /**\r\n     * é¢æ¿æ¾ç¤ºåäºä»¶\r\n     */\r\n    beforeShow: any;\r\n\r\n    /**\r\n     * é¢æ¿éèåäºä»¶\r\n     */\r\n    beforeHide: any;\r\n\r\n    idField: string;\r\n\r\n    textField: string;\r\n\r\n    /**\r\n     * æ¯å¦å¤é\r\n    */\r\n    multiSelect: boolean;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    placeholder: string;\r\n\r\n    panelHeight: number | string;\r\n\r\n    require: boolean;\r\n}\r\n\r\n/**\r\n * ä¸æåè¡¨æ§ä»¶åºååä¸ååºååå¨\r\n */\r\nexport class DropDownListControlConvert{\r\n\r\n    /**\r\n     * åºåå\r\n     * @param obj ä¸æåè¡¨æ§ä»¶å®ä½\r\n     */\r\n    convertToObject(obj: DropDownListControl){\r\n        let dropDownListControl = obj as DropDownListControl;\r\n        let jobj = new Object();\r\n        jobj[\"valueType\"] = dropDownListControl.valueType;\r\n        if(dropDownListControl.enumValues != null){\r\n            let jarray = jobj[\"enumValues\"] = [];\r\n            let convertor = new EnumValueConvert();\r\n            dropDownListControl.enumValues.forEach(element => {\r\n                if(dropDownListControl.valueType == EnumType.BoolType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumBoolValue(),element)));\r\n                }\r\n                else if(dropDownListControl.valueType == EnumType.IntType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumIntegerValue(),element)));\r\n                }\r\n                else{\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumStringValue(),element)));\r\n                }\r\n            });\r\n        }\r\n        jobj[\"uri\"] = dropDownListControl.uri;\r\n        jobj[\"beforeShow\"] = dropDownListControl.beforeShow;\r\n        jobj[\"beforeHide\"] = dropDownListControl.beforeHide;\r\n        jobj[\"idField\"] = dropDownListControl.idField;\r\n        jobj[\"textField\"] = dropDownListControl.textField;\r\n        jobj[\"multiSelect\"] = dropDownListControl.multiSelect;\r\n        jobj[\"panelHeight\"] = dropDownListControl.panelHeight;\r\n        jobj[\"placeholder\"] = dropDownListControl.placeholder;\r\n        jobj[\"className\"] = dropDownListControl.className;\r\n        jobj[\"require\"] = dropDownListControl.require;\r\n        return jobj;\r\n    }\r\n\r\n    /**\r\n     * ååºåå\r\n     * @param jobj ä¸æåè¡¨æ§ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n     */\r\n    initFromObject(jobj: Object): DropDownListControl{\r\n        let control = new DropDownListControl();\r\n        if(jobj[\"valueType\"] != null){\r\n            control.valueType = jobj[\"valueType\"] as number;\r\n        }\r\n        if(jobj[\"enumValues\"] != null){\r\n            control.enumValues = new Array<IEnumValue>();\r\n            jobj[\"enumValues\"].forEach(element => {\r\n                let convertor = new EnumValueConvert();\r\n                control.enumValues.push(convertor.initFromJobject(element));\r\n            });\r\n        }\r\n        if(jobj[\"uri\"] != null){\r\n            control.uri = jobj[\"uri\"];\r\n        }\r\n        if(jobj[\"beforeShow\"] != null){\r\n            control.beforeShow = jobj[\"beforeShow\"];\r\n        }\r\n        if(jobj[\"beforeHide\"] != null){\r\n            control.beforeHide = jobj[\"beforeHide\"];\r\n        }\r\n        if(jobj[\"idField\"] != null){\r\n            control.idField = jobj[\"idField\"];\r\n        }\r\n        if(jobj[\"textField\"] != null){\r\n            control.textField = jobj[\"textField\"];\r\n        }\r\n        if(jobj[\"multiSelect\"] != null){\r\n            control.multiSelect = jobj[\"multiSelect\"];\r\n        }\r\n        if(jobj[\"panelHeight\"] != null){\r\n            control.panelHeight = jobj[\"panelHeight\"];\r\n        }\r\n        if(jobj[\"placeholder\"] != null){\r\n            control.placeholder = jobj[\"placeholder\"];\r\n        }\r\n        if(jobj[\"className\"] != null){\r\n            control.className = jobj[\"className\"];\r\n        }\r\n        if(jobj[\"require\"] != null){\r\n            control.require = jobj[\"require\"];\r\n        }\r\n        return control;\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * ææ¬æ§ä»¶\r\n */\r\nexport class TextControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼ææ¬æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Text;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * å­ç¬¦ä¸²é¿åº¦\r\n     */\r\n    length: number;\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    placeholder: string;\r\n\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´æ§ä»¶\r\n */\r\nexport class DateRangeControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    \r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n    \r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat: string;\r\n\r\n    /**\r\n     * æ¥æåæ´åäºä»¶\r\n     */\r\n    dateChangedCmd: any;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n    \r\n    /**\r\n     * ç»ææç¤º\r\n     */\r\n    // beginPlaceHolder: string;\r\n\r\n    /**\r\n     * èµ·å§æç¤º\r\n     */\r\n    // endPlaceHolder: string;\r\n    \r\n    placeholder: string;\r\n    require: boolean;\r\n    weekSelect: boolean;\r\n    /**\r\n     * åºé´èµ·å§å±æ§å¼\r\n     */\r\n    startFieldCode: string;\r\n    /**\r\n   * åºé´ç»æå±æ§å¼\r\n   */\r\n    endFieldCode: string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class SingleDateControl implements IControl {\r\n\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleDate;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n\r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat: string;\r\n\r\n    /**\r\n     * æ¥æåæ´åäºä»¶\r\n     */\r\n    dateChangedCmd: any;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n    isDynamicDate: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * å¸®å©æ§ä»¶\r\n */\r\nexport class SmartHelpContol implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SmartHelp;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n\r\n    /**\r\n     * å¸®å©æ°æ®æº\r\n     */\r\n    uri: string;\r\n\r\n    /**\r\n     * å¸®å©çææ¬æ¾ç¤ºå­æ®µ\r\n     */\r\n    textField: string;\r\n\r\n    /**\r\n     * å¸®å©å¼å­æ®µ\r\n     */\r\n    valueField: string;\r\n\r\n    /**\r\n     * å­æ®µæ å°ä¿¡æ¯\r\n     */\r\n    mapFields: any;\r\n\r\n    /**\r\n     * ä¸»é®\r\n    */\r\n    idField: any;\r\n\r\n    /**\r\n     * å¸®å©å±ç¤ºå½¢å¼ï¼æ®éåè¡¨ï¼æ ç»æ\r\n    */\r\n    displayType: any;\r\n\r\n    /**\r\n     * è¿è¡æ¶åæ°éç½®ä¼ é\r\n    */\r\n    context: any;\r\n\r\n    /**\r\n     * å¸®å©åäºä»¶\r\n    */\r\n    preEventCmd: any;\r\n\r\n    /**\r\n    * å¸®å©åäºä»¶\r\n    */\r\n    postEventCmd: any;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    /**\r\n     * æé å®æ´æ \r\n     */\r\n    enableFullTree: boolean;\r\n\r\n    /**\r\n     * æ°æ®å è½½æ¹å¼\r\n     */\r\n    loadTreeDataType: string;\r\n\r\n    /**\r\n     * æ¯å¦å¤é\r\n     */\r\n    singleSelect: boolean;\r\n\r\n    /**å±å¼å°æå®çº§æ° */\r\n    expandLevel: number;\r\n\r\n    /**\r\n     * å¯ç¨çº§èéæ©\r\n     */\r\n    enableCascade: boolean;\r\n\r\n    /**\r\n     * çº§èæ§å¶é»è®¤å¼ï¼ enable: åæ­¥éæ©, upï¼åå«ä¸çº§, downï¼åå«ä¸çº§, disableï¼ä»éæ©èªèº«\r\n     */\r\n    cascadeStatus: \"enable\" | \"up\" | \"down\" | \"disable\";\r\n\r\n    /**\r\n     * æ§ä»¶ä¸ºç©ºæ¶æç¤ºä¿¡æ¯ï¼å¼å®¹æ§è¡¨å\r\n     */\r\n    placeholder: string;\r\n\r\n    /**\r\n     * æ§ä»¶æ¯å¦å¿å¡«\r\n     */\r\n    require: boolean;\r\n\r\n    //æææå·¥è¾å¥ãéæ©ä¸¤ç¨æ¶ï¼nosearchè®¾ä¸ºtrue\r\n    nosearch: boolean;\r\n\r\n    /**\r\n     * éæ©æ°æ®åèªå®ä¹æ¾ç¤ºçå­æ®µï¼é»è®¤ä¸ºç©ºï¼ä¸ºç©ºæ¶æ¾ç¤ºå¸®å©è®¾ç½®çææ¬å­æ®µ\r\n     */\r\n    displayFields: string;\r\n\r\n    /**\r\n     * èªå®ä¹æ¾ç¤ºå­æ®µæ¶ï¼ä¸åå­æ®µé´çåéç¬¦\r\n     */\r\n    displayTextSeparator: string;\r\n\r\n    /**\r\n     * æ¯å¦åè®¸ç¼è¾\r\n     */\r\n    editable: boolean;\r\n\r\n    /**\r\n     * å¼ååæ¶ï¼éè¦æ¸ç©ºåªäºå­æ®µ\r\n     */\r\n    clearFields: string;\r\n\r\n    /**\r\n     * å¸®å©æ¸ç©ºäºä»¶\r\n     */\r\n    clear: any;\r\n    /**\r\n     * é»è®¤åé¡µ\r\n     */\r\n    pageSize: number;\r\n    /**\r\n     * åé¡µ\r\n     */\r\n    pageList: string;\r\n   // æ é¢\r\n   dialogTitle: string;\r\n   // å®½åº¦\r\n   panelWidth: number;\r\n   // é«åº¦\r\n   panelHeight: number;\r\n   // å¿«æ·éæ©\r\n   quickSelect: QuickSelectOption;\r\n   // å¯ç¨å¤å­æ®µæ¥è¯¢\r\n   enableMultiFieldSearch: boolean;\r\n}\r\n\r\nexport class QuickSelectOption {\r\n    enable: boolean;\r\n    showItemsCount?: number;\r\n    formatter?: (data: any) => string;\r\n    showMore?: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class NumberRangeControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.NumberRange;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length: number;\r\n\r\n    /**\r\n     * ç²¾åº¦\r\n     */\r\n    precision: number;\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n    /*\r\n    *ç»ææç¤º\r\n    */\r\n   //beginPlaceHolder: string;\r\n   /**\r\n   * èµ·å§æç¤º\r\n   */\r\n  // endPlaceHolder: string;\r\n\r\n    placeholder: string;\r\n\r\n    require: boolean;\r\n\r\n    textAlign: string;\r\n\r\n    bigNumber: boolean;\r\n\r\n    min: number;\r\n    max: number;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class SingleNumberControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleNumber;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length: number;\r\n\r\n    /**\r\n     * ç²¾åº¦\r\n     */\r\n    precision: number;\r\n    /**\r\n    * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    placeholder: string;\r\n\r\n    require: boolean;\r\n\r\n    textAlign: string;\r\n\r\n    bigNumber: boolean;\r\n\r\n    min: number;\r\n    max: number;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class SingleYearControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleYear;\r\n    }\r\n    \r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n    \r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat:string;\r\n\r\n    /**\r\n     * æ¥æåæ´åäºä»¶\r\n     */\r\n    dateChangedCmd: any;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n    \r\n    // æå¤§å¼\r\n    maxDate:string|Date|null;\r\n    // æå°å¼\r\n    minDate:string|Date|null;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\ninterface Checkbox {\r\n    value: any;\r\n    name: any;\r\n}\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class CheckBoxControl implements IControl {\r\n    \r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.BoolCheck;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n    * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n    /* radio æ°ç» */\r\n    data: Checkbox[] = [];\r\n    /* å¤éæ¡name */\r\n    name: string;\r\n    /* æ¯å¦æ°´å¹³åå¸ */\r\n    horizontal: boolean;\r\n    /* ç¦ç¨ */\r\n    disable: boolean;\r\n    /* å¤éæ¡ç»çå¼ */\r\n    value: any;\r\n    /* åéç¬¦ é»è®¤éå·*/\r\n    separator = ',';\r\n    /* å¼ç±»åæ¯å¦æ¯string */\r\n    isStringValue = true;\r\n\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´æ§ä»¶\r\n */\r\nexport class DateTimeRangeControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DateTimeRange;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    \r\n    /**\r\n     * å¼ºå¶ä½¿ç¨èªå®ä¹æ ¼å¼\r\n     */\r\n    enableCustomFormat:boolean;\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n    \r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat:string;\r\n\r\n    /**\r\n     * æ¥æåæ´åäºä»¶\r\n     */\r\n    dateChangedCmd: any;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n    \r\n    // èµ·å§æç¤º\r\n    // beginPlaceHolder:string;\r\n    \r\n    // ç»ææç¤º\r\n    //  endPlaceHolder:string;\r\n    \r\n    //weekSelect: boolean;\r\n    //showWeekNumbers: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class SingleMonthControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleMonth;\r\n    }\r\n\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n    \r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat:string;\r\n    \r\n    /**\r\n     * æ¥æåæ´åäºä»¶\r\n     */\r\n    dateChangedCmd: any;\r\n    \r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´æ§ä»¶\r\n */\r\nexport class MonthRangeControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.MonthRange;\r\n    }\r\n\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n    \r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat: string;\r\n\r\n    /**\r\n     * æ¥æåæ´åäºä»¶\r\n     */\r\n    dateChangedCmd: any;\r\n    \r\n    /*\r\n     *èµ·å§æç¤º\r\n     */\r\n    //beginPlaceHolder: string;\r\n \r\n    /**\r\n     * ç»ææç¤º\r\n     */\r\n    // endPlaceHolder: string;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class SingleDateTimeControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleDateTime;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    \r\n    /**\r\n     * å¼ºå¶ä½¿ç¨èªå®ä¹æ ¼å¼\r\n     */\r\n    enableCustomFormat:boolean;\r\n    \r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n    \r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat: string;\r\n\r\n    /**\r\n     * æ¥æåæ´åäºä»¶\r\n     */\r\n    dateChangedCmd: any;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * å¸®å©æ§ä»¶\r\n */\r\nexport class ComboLookUpControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.ComboLookUp;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * ä¸æå¸®å©æ°æ®æº\r\n     */\r\n    uri: string;\r\n\r\n    /**\r\n     * ä¸»é®\r\n     */\r\n    idField: any;\r\n\r\n    /**\r\n     * ä¸æå¸®å©å¼å­æ®µ\r\n     */\r\n    valueField: string;\r\n\r\n    /**\r\n     * ä¸æå¸®å©ææ¬æ¾ç¤ºå­æ®µ\r\n     */\r\n    textField: string;\r\n\r\n    /**\r\n     * å­æ®µæ å°ä¿¡æ¯\r\n     */\r\n    mapFields: any;\r\n\r\n    /**\r\n     * ä¸æå¸®å©å±ç¤ºå½¢å¼ï¼ä¸æåè¡¨å¸®å©ï¼ä¸ææ åè¡¨å¸®å©\r\n     */\r\n    displayType: any;\r\n\r\n    /**\r\n     * å¸®å©åäºä»¶\r\n     */\r\n    preEventCmd: any;\r\n\r\n    /**\r\n     * å¸®å©åäºä»¶\r\n     */\r\n    postEventCmd: any;\r\n\r\n    /**\r\n     * æ¯å¦å¤é\r\n     */\r\n    singleSelect: boolean;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n\r\n    placeholder: string;\r\n\r\n    panelWidth: number;\r\n\r\n    panelHeight: number;\r\n\r\n    require: boolean;\r\n       /**\r\n     * æé å®æ´æ \r\n     */\r\n    enableFullTree: boolean;\r\n    /**\r\n     * æ°æ®å è½½æ¹å¼\r\n     */\r\n     loadTreeDataType: string;\r\n     /**\r\n     * è¿è¡æ¶åæ°éç½®ä¼ é\r\n    */\r\n    context: any;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { EnumType } from \"../dropdownlist/enumtype\";\r\nimport { IEnumValue, EnumValueConvert } from \"../dropdownlist/ienumvalue\";\r\nimport { EnumStringValue } from \"../dropdownlist/stringenumvalue\";\r\nimport { EnumBoolValue } from \"../dropdownlist/boolenumvalue\";\r\nimport { EnumIntegerValue } from \"../dropdownlist/integerenumvalue\";\r\n\r\n/**\r\n * åéç»æ§ä»¶\r\n */\r\nexport class RadioControl implements IControl {\r\n    \r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Radio;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * åéæ¡å¼ç±»å\r\n     */\r\n    valueType: EnumType;\r\n\r\n    /**\r\n     * åéæ¡æ°æ®æºåè¡¨\r\n     * è¯¥å±æ§ä¸ºIEnumValueæ¥å£ç±»åï¼å·ä½å®ç°ç±»å¦ä¸ï¼\r\n     * 1.å¸å°ç±»åï¼EnumBoolValue\r\n     * 2.å­ç¬¦ä¸²ç±»åï¼EnumStringValue\r\n     * 3.æ´åç±»åï¼EnumIntegerValue ä¾å¦Radio Buttonç±»åéè¦ä½¿ç¨EnumIntegerValueå®ç°ç±»\r\n     */\r\n    enumValues: Array<IEnumValue>;\r\n\r\n    /**\r\n    * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    /**\r\n     * æ¯å¦æ¾ç¤ºlabel\r\n     */\r\n    showLabel: boolean;\r\n    \r\n    /* æ¯å¦æ°´å¹³åå¸ */\r\n    horizontal: boolean;\r\n    \r\n    /* æ¯å¦ç¦ç¨ */\r\n    disabled: boolean;\r\n    \r\n    require: boolean;\r\n}\r\n\r\n/**\r\n* åéç»æ§ä»¶åºååä¸ååºååå¨\r\n*/\r\nexport class RadioControlConvert{\r\n    /**\r\n     * åºåå\r\n     * @param obj åéç»æ§ä»¶å®ä½\r\n     */\r\n    convertToObject(obj: RadioControl){\r\n        let radioControl = obj as RadioControl;\r\n        let jobj = new Object();\r\n        jobj[\"valueType\"] = radioControl.valueType;\r\n        if(radioControl.enumValues != null){\r\n            let jarray = jobj[\"enumValues\"] = [];\r\n            let convertor = new EnumValueConvert();\r\n            radioControl.enumValues.forEach(element => {\r\n                if(radioControl.valueType == EnumType.BoolType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumBoolValue(),element)));\r\n                }\r\n                else if(radioControl.valueType == EnumType.IntType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumIntegerValue(),element)));\r\n                }\r\n                else{\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumStringValue(),element)));\r\n                }\r\n            });\r\n        }\r\n        jobj[\"horizontal\"] = radioControl.horizontal;\r\n        jobj[\"showLabel\"] = radioControl.showLabel;\r\n        jobj[\"disabled\"] = radioControl.disabled;\r\n        jobj[\"className\"] = radioControl.className;\r\n        jobj[\"require\"] = radioControl.require;\r\n        return jobj;\r\n    }\r\n\r\n    /**\r\n     * ååºåå\r\n     * @param jobj åéç»æ§ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n     */\r\n    initFromObject(jobj: Object): RadioControl{\r\n        let control = new RadioControl();\r\n        if(jobj[\"valueType\"] != null){\r\n            control.valueType = jobj[\"valueType\"] as number;\r\n        }\r\n        if(jobj[\"enumValues\"] != null){\r\n            control.enumValues = new Array<IEnumValue>();\r\n            jobj[\"enumValues\"].forEach(element => {\r\n                let convertor = new EnumValueConvert();\r\n                control.enumValues.push(convertor.initFromJobject(element));\r\n            });\r\n        }\r\n        if(jobj[\"horizontal\"] != null){\r\n            control.horizontal = jobj[\"horizontal\"];\r\n        }\r\n        if(jobj[\"showLabel\"] != null){\r\n            control.showLabel = jobj[\"showLabel\"];\r\n        }\r\n        if(jobj[\"disabled\"] != null){\r\n            control.disabled = jobj[\"disabled\"];\r\n        }\r\n        if(jobj[\"className\"] != null){\r\n            control.className = jobj[\"className\"];\r\n        }\r\n        if(jobj[\"require\"] != null){\r\n            control.require = jobj[\"require\"];\r\n        }\r\n        return control;\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æºè½è¾å¥æ¡æ§ä»¶\r\n */\r\nexport class InputGroupControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼æºè½è¾å¥æ¡æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.InputGroup;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    \r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    /**\r\n     * æ¯å¦å¿å¡«\r\n     */\r\n    require: boolean;\r\n\r\n    /**\r\n     * æ¯å¦åè®¸è¾å¥\r\n     */\r\n    editable: boolean;\r\n\r\n    /**\r\n     * æé®æ¾ç¤ºææ¬\r\n     */\r\n    groupText: string;\r\n\r\n    /**\r\n     * ä½¿ç¨æ¨¡å¼ï¼ææ¬ãå¼¹åºè¡¨åï¼\r\n     */\r\n    usageMode: string;\r\n\r\n    /**\r\n     * å¼¹åºè¡¨åç¸å³éç½®\r\n     */\r\n    dialogOptions: DialogConfig;\r\n\r\n    /**\r\n     * æé®ç¹å»äºä»¶\r\n     */\r\n    click: any;\r\n}\r\n\r\nexport class DialogConfig {\r\n    modalId: string;\r\n    mapFields: any;\r\n    title: string;\r\n    width: number;\r\n    height: number;\r\n    showCloseButton:boolean;\r\n    showMaxButton:boolean;\r\n    showHeader:boolean;\r\n}","import { ControlType } from \"../controltype\";\r\nimport { DropDownListControl, DropDownListControlConvert } from \"./dropdownlist/dropdownlistcontrol\";\r\nimport { TextControl } from \"./text/textcontrol\";\r\nimport { DateRangeControl } from \"./daterange/date-range.control\";\r\nimport { SingleDateControl } from \"./date/single-date-control\";\r\nimport { SmartHelpContol } from \"./smarthelp/smarthelpcontrol\";\r\nimport { NumberRangeControl } from \"./numberrange/numberrangecontrol\";\r\nimport { SingleNumberControl } from './number/single-number-control';\r\nimport { SingleYearControl } from './year/year-control';\r\nimport { CheckBoxControl } from './checkbox/checkbox-control';\r\nimport { DateTimeRangeControl } from './daterange/datertime-range-control';\r\nimport { SingleMonthControl } from './month/month-control';\r\nimport { MonthRangeControl } from './monthrange/month-range-control';\r\nimport { SingleDateTimeControl } from './date/single-date-time-control';\r\nimport { ComboLookUpControl } from './combolookup/combolookup-control';\r\nimport { RadioControl, RadioControlConvert } from './radio/radio-control';\r\nimport { InputGroupControl } from './input-group/inputgroupcontrol';\r\n\r\n/**\r\n * æ§ä»¶æ¥å£\r\n */\r\nexport interface IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType;\r\n\r\n    /**\r\n     * æ§ä»¶æ¯å¦å¿å¡«\r\n     */\r\n    isRequired(): boolean;\r\n}\r\n\r\nexport class ControlConvert {\r\n    convertJObject(obj: IControl): Object {\r\n        let control = obj as IControl;\r\n        let controlType = control.getControlType();\r\n        let jobj = new Object();\r\n        jobj[\"Type\"] = controlType;\r\n\r\n        if(controlType == ControlType.DropDownList) { \r\n            let convertor = new DropDownListControlConvert();\r\n            jobj[\"Content\"] = convertor.convertToObject(control as DropDownListControl);\r\n        }\r\n        else if(controlType == ControlType.Radio) {\r\n            let convertor = new RadioControlConvert();\r\n            jobj[\"Content\"] = convertor.convertToObject(control as RadioControl);\r\n        }\r\n        else {\r\n            jobj[\"Content\"] = control;\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    initFromJobject(jobj: Object): IControl {\r\n        let controlType = jobj[\"Type\"] as ControlType;\r\n        let content: IControl = jobj[\"Content\"];\r\n\r\n        if(controlType==ControlType.Text)\r\n            return Object.assign(new TextControl(), content as TextControl);\r\n        \r\n        if(controlType == ControlType.InputGroup)\r\n            return Object.assign(new InputGroupControl(), content as InputGroupControl);\r\n        \r\n        if(controlType == ControlType.DateRange)\r\n            return Object.assign(new DateRangeControl(), content as DateRangeControl);\r\n\r\n        if(controlType == ControlType.NumberRange)\r\n            return Object.assign(new NumberRangeControl(), content as NumberRangeControl);\r\n\r\n        if(controlType == ControlType.SingleDate)\r\n            return Object.assign(new SingleDateControl(), content as SingleDateControl);\r\n\r\n        if(controlType == ControlType.SingleNumber)\r\n            return Object.assign(new SingleNumberControl(), content as SingleNumberControl);\r\n\r\n        if(controlType == ControlType.DropDownList)\r\n            return new DropDownListControlConvert().initFromObject(content);\r\n\r\n        if(controlType == ControlType.SmartHelp)\r\n            return Object.assign(new SmartHelpContol(), content as SmartHelpContol);\r\n\r\n        if(controlType == ControlType.ComboLookUp)\r\n            return Object.assign(new ComboLookUpControl(), content as ComboLookUpControl);\r\n\r\n        if(controlType == ControlType.SingleYear)\r\n            return Object.assign(new SingleYearControl(), content as SingleYearControl);\r\n\r\n        if(controlType == ControlType.SingleMonth)\r\n            return Object.assign(new SingleMonthControl(), content as SingleMonthControl);\r\n\r\n        if(controlType == ControlType.BoolCheck)\r\n            return Object.assign(new CheckBoxControl(), content as CheckBoxControl);\r\n\r\n        if(controlType == ControlType.Radio)\r\n            return new RadioControlConvert().initFromObject(content);\r\n\r\n        if(controlType == ControlType.DateTimeRange)\r\n            return Object.assign(new DateTimeRangeControl(), content as DateTimeRangeControl);\r\n\r\n        if(controlType == ControlType.MonthRange)\r\n            return Object.assign(new MonthRangeControl(), content as MonthRangeControl);\r\n\r\n        if(controlType == ControlType.SingleDateTime)\r\n            return Object.assign(new SingleDateTimeControl(), content as SingleDateTimeControl);\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class TextValue implements IValue{\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Text;\r\n    }\r\n    value:string;\r\n    constructor(data: {value: string} = {value : ''}){\r\n        // this.value = data.value ? data.value.trim() : '';\r\n        this.value = data.value ? data.value : '';\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class NumberRangeValue implements IValue {\r\n    isEmpty(): boolean {\r\n        return (this.startValue == null && this.endValue == null);\r\n    }\r\n    clearValue(): void {\r\n        this.startValue = undefined;\r\n        this.endValue = undefined;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return {\r\n            begin: this.startValue,\r\n            end: this.endValue\r\n        };\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.NumberRange;\r\n    }\r\n    startValue: number;\r\n    endValue: number;\r\n    constructor(data: {startValue: string, endValue: string} = {startValue: null, endValue: null}){\r\n        this.startValue = data.startValue == null ? null : parseFloat(data.startValue);\r\n        this.endValue = data.endValue == null ? null : parseFloat(data.endValue);\r\n    }\r\n}\r\n\r\nexport class NumberRangeValueConvertor {\r\n    convertToObject(obj: IValue): Object {\r\n        let numberRangeValue = obj as NumberRangeValue;\r\n        let jobj = new Object();\r\n        jobj[\"startValue\"] = numberRangeValue.startValue;\r\n        jobj[\"endValue\"] = numberRangeValue.endValue;\r\n        return jobj;\r\n    }\r\n\r\n    initFromObject(jobj: Object): NumberRangeValue {\r\n        let numberRangeValue = new NumberRangeValue();\r\n        if (jobj[\"startValue\"]) {\r\n            //key pointï¼as Numberå¹¶ä¸ä¼è½¬åæ ¼å¼\r\n            numberRangeValue.startValue = parseFloat(jobj[\"startValue\"]);\r\n        }\r\n        if (jobj[\"endValue\"]) {\r\n            numberRangeValue.endValue = parseFloat(jobj[\"endValue\"]);\r\n        }\r\n        return numberRangeValue;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class DateRangeValue implements IValue {\r\n  setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n    if (value.formatted) {\r\n      this.startTime = value.formatted.split(value.delimiter)[0];\r\n      this.endTime = value.formatted.split(value.delimiter)[1];\r\n    } else {\r\n      this.clearValue();\r\n    }\r\n  }\r\n  getOriginalValue() {\r\n     if(!this.startTime && !this.endTime){\r\n      return '';\r\n     }\r\n    return `${this.startTime}~${this.endTime}`;\r\n  }\r\n  getControlType(): ControlType {\r\n    return ControlType.DateRange;\r\n  }\r\n  clearValue(): void {\r\n    this.startTime = undefined;\r\n    this.endTime = undefined;\r\n  }\r\n  startTime: string;\r\n  endTime: string;\r\n\r\n  constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n    this.startTime = value.startTime;\r\n    this.endTime = value.endTime;\r\n  }\r\n  isEmpty(): boolean {\r\n    return !this.startTime && !this.endTime;\r\n  }\r\n}\r\n","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\nexport class SmartHelpValue implements IValue{\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.SmartHelp;\r\n    }\r\n\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    getOriginalValue(): string {\r\n        const args = this.valueField.split('.');\r\n        const valueArr = this.value.map(helpItem => this.getPropValue(helpItem, cloneDeep(args)));\r\n        return valueArr && valueArr.length ? valueArr.join(',') : '';\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.valueField = undefined;\r\n        this.textValue = undefined;\r\n        this.isInputText = undefined;\r\n    }\r\n    \r\n    isEmpty(): boolean {\r\n        return !this.value.length;\r\n    }\r\n\r\n    value: any[];\r\n    valueField: string;\r\n    textValue: string;\r\n    //å¸®å©çå¼æ¯å¦ä¸ºæå¨è¾å¥çä»»æå¼ï¼å¯¹åºå¸®å©çä»»æè¾å¥å±æ§nosearch\r\n    isInputText: boolean; \r\n\r\n    constructor(data: {\r\n        value: any, \r\n        valueField: string,\r\n        textValue: string,\r\n        isInputText: boolean\r\n    } = {value: [], valueField: undefined, textValue: undefined, isInputText: undefined}){\r\n        if(data.textValue){\r\n            this.value = data.value;\r\n            this.valueField = data.valueField;\r\n            this.textValue = data.textValue;\r\n            this.isInputText = data.isInputText;\r\n        }else{\r\n            //å¸®å©æªæ¯æå¤éæ¶ï¼æ²¡ætextValueå±æ§ï¼ææå¼é½æ¯éè¿éæ©äº§çç\r\n            this.value = data.value;\r\n            this.valueField = data.valueField ? data.valueField : '';\r\n            this.textValue = 'help-text-value-null'; \r\n            this.isInputText = false;\r\n        }\r\n    }\r\n\r\n    getTextValue(textField: string): string {\r\n        const args = textField.split('.');\r\n        const textArr = this.value.map(helpItem => this.getPropValue(helpItem, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(',') : '';\r\n    }\r\n\r\n    getPropValue(helpItem: any, args: Array<string>): any{\r\n        if(args.length > 1){\r\n            const arg = args.shift();\r\n            return helpItem[arg] ? this.getPropValue(helpItem[arg], args) : null;\r\n        }\r\n        return helpItem[args[0]];\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\ntype propsDateValue = {\r\n    count: null | number,\r\n    dateType: string,\r\n    isFirstDay: boolean,\r\n    isLastDay: boolean,\r\n    name: string,\r\n    period: string,\r\n    text: string\r\n}\r\nexport class SingleDateValue implements IValue{\r\n    setOriginalValue(value: any): void {\r\n        this.dateValue = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.dateValue;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleDate;\r\n    }\r\n    dateValue: string | propsDateValue;\r\n    \r\n    constructor(date: string | propsDateValue = ''){\r\n        this.dateValue = date;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.dateValue;\r\n    }\r\n    clearValue(): void {\r\n        this.dateValue = undefined;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class SingleNumberValue implements IValue{\r\n    isEmpty(): boolean {\r\n        return this.numValue == null;\r\n    }\r\n    clearValue(): void {\r\n        this.numValue = undefined;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.numValue;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleNumber;\r\n    }\r\n    numValue: number;\r\n\r\n    constructor(data: string = null){\r\n        this.numValue = data == null ? null : parseFloat(data);\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class SingleYearValue implements IValue{\r\n    setOriginalValue(value: any): void {\r\n        this.yearValue = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.yearValue;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleYear;\r\n    }\r\n    clearValue(): void {\r\n        this.yearValue = undefined;\r\n    }\r\n    yearValue: string;\r\n    constructor(year: string = ''){\r\n        this.yearValue = year;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.yearValue;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n// CheckBoxValueåå§åï¼ä¸'app-solution-checkbox'ç»ä»¶åå§åæ¯åç¦»ç\r\n// CheckBoxValue è¦æ±valueæ¯å¸å°ç±»åï¼ç»ä»¶è¦æ±valueæ¯trueæ¶ï¼å¼åºä¸ºtrueå­ç¬¦ä¸²\r\nexport class CheckBoxValue implements IValue{\r\n    clearValue(): void {\r\n        this.value = [];\r\n    }\r\n    // å¦æç»ä»¶çè¿åå¼æ¯å­ç¬¦ä¸²ï¼è½¬åä¸ºå¸å°å¼\r\n    setOriginalValue(value: any[]): void {\r\n        if(value.length){\r\n            this.value = value.map(v => {\r\n               if(typeof v == 'string'){\r\n                 return true;\r\n               }else {\r\n                 return v;\r\n               }\r\n            });\r\n         }else{\r\n            this.value = value;\r\n         }\r\n    }\r\n    // æCheckBoxValueçtrueå¸å°å¼ï¼è½¬åä¸ºç»ä»¶å¯è¯å«çå­ç¬¦ä¸²\r\n    getOriginalValue() {\r\n        if(this.value.length){\r\n          return this.value.map(v => {\r\n            if(v === true){\r\n              return \"true\";\r\n            }else{\r\n              return v;\r\n            }\r\n          });\r\n        }\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.BoolCheck;\r\n    }\r\n    value: any[];\r\n    // CheckBoxValue åå§åï¼ä¼ å¥çå¼æªåä»»ä½ä¿®æ¹\r\n    constructor(value: any[] = []){\r\n        this.value = value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return this.value.length == 0;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { IEnumValue, EnumValueConvert } from \"../controltype/dropdownlist/ienumvalue\";\r\n\r\nexport class DropDownListValue implements IValue{\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.key = undefined;\r\n    }\r\n    setOriginalValue(data): void {}\r\n    getOriginalValue() {\r\n        return this.key;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DropDownList;\r\n    }\r\n    value: any = [];//æ§ç»æ{Type: '', Content: {value: string, name: string}} æ°ç»æArray[{value: string, name: string}]\r\n    key: string;//æ§ç»ææ ï¼æ°ç»æä¸ºéä¸­çvalueå¼ï¼å¤éæ¯ä»¥,åå²çå­ç¬¦ä¸²\r\n    constructor(data: {value: any, key: string} = {value: [], key: undefined}){\r\n        if(data.value && data.value.length > 0){//å·²æåå§å¼[]\r\n            if(data.hasOwnProperty('key')){//æ°ç»æ\r\n                this.value = data.value;\r\n                this.key = data.key;\r\n            }else{//æ§ç»æ\r\n                this.value = data.value['Content'] && data.value['Content'].value ? [data.value['Content']] : [];\r\n                this.key = data.value['Content'] && data.value['Content'].value ? data.value['Content'].value: undefined;\r\n            }\r\n        }else{\r\n            this.clearValue();\r\n        }\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.key;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class SingleMonthValue implements IValue{\r\n    setOriginalValue(value: any): void {\r\n        this.monthValue = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.monthValue;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleMonth;\r\n    }\r\n    clearValue(): void {\r\n        this.monthValue = undefined;\r\n    }\r\n    monthValue: string;\r\n    constructor(month: string = ''){\r\n        this.monthValue = month;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.monthValue;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class MonthRangeValue implements IValue {\r\n  setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n    if (value.formatted) {\r\n      this.startTime = value.formatted.split(value.delimiter)[0];\r\n      this.endTime = value.formatted.split(value.delimiter)[1];\r\n    } else {\r\n      this.clearValue();\r\n    }\r\n  }\r\n  getOriginalValue() {\r\n    if(!this.startTime && !this.endTime){\r\n      return '';\r\n     }\r\n    return `${this.startTime}~${this.endTime}`;\r\n  }\r\n  getControlType(): ControlType {\r\n    return ControlType.MonthRange;\r\n  }\r\n  clearValue(): void {\r\n    this.startTime = undefined;\r\n    this.endTime = undefined;\r\n  }\r\n  startTime: string;\r\n  endTime: string;\r\n\r\n  constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n    this.startTime = value.startTime;\r\n    this.endTime = value.endTime;\r\n  }\r\n  isEmpty(): boolean {\r\n    return !this.startTime && !this.endTime;\r\n  }\r\n}\r\n","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class SingleDateTimeValue implements IValue{\r\n    setOriginalValue(value: any): void {\r\n        this.datetimeValue = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.datetimeValue;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleDateTime;\r\n    }\r\n    datetimeValue: string;\r\n    \r\n    constructor(datetime: string = ''){\r\n        this.datetimeValue = datetime;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.datetimeValue;\r\n    }\r\n    clearValue(): void {\r\n        this.datetimeValue = undefined;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\nexport class ComboLookUpValue implements IValue{\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.valueField = undefined;\r\n        this.textValue = undefined;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue(): string {\r\n        const args = this.valueField.split('.');\r\n        const valueArr = this.value.map(helpItem => this.getPropValue(helpItem, cloneDeep(args)));\r\n        return valueArr && valueArr.length ? valueArr.join(',') : '';\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.ComboLookUp;\r\n    }\r\n\r\n    valueField:string;\r\n    value:any[];\r\n    textValue: string;\r\n\r\n    constructor(data: {\r\n        value: any, \r\n        valueField: string,\r\n        textValue: string;\r\n    } = {value: [], valueField: undefined, textValue: undefined}){\r\n        if(data.textValue){//æ°ç»æï¼valueæ¯æ°ç»\r\n            this.valueField = data.valueField;\r\n            this.value = data.value;\r\n            this.textValue = data.textValue;\r\n        }else{//æ§ç»æï¼valueæ¯å¯¹è±¡\r\n            this.valueField = data.valueField ? data.valueField : '';\r\n            this.value = (data.value && data.value.data) ? [data.value.data] : [];\r\n            this.textValue = 'help-text-value-null'; //æ§ç»ææ textValueå±æ§\r\n        }\r\n\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.valueField;\r\n    }\r\n\r\n    getPropValue(helpItem: any, args: Array<string>): any{\r\n        if(args.length > 1){\r\n            const arg = args.shift();\r\n            return helpItem[arg] ? this.getPropValue(helpItem[arg], args) : null;\r\n        }\r\n        return helpItem[args[0]];\r\n    }\r\n\r\n    getTextValue(textField: string): string {\r\n        const args = textField.split('.');\r\n        const textArr = this.value.map(helpItem => this.getPropValue(helpItem, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(',') : '';\r\n    }\r\n\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class RadioValue implements IValue {\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n    getOriginalValue(): any {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Radio;\r\n    }\r\n    value: any;\r\n    constructor(value: any = undefined) {\r\n        this.value = value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\nexport class InputGroupValue implements IValue {\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.InputGroup;\r\n    }\r\n\r\n    setOriginalValue(value: any) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    getOriginalValue(): string {\r\n        const args = this.textField ? this.textField.split('.') : [];\r\n        const textArr = this.value.map(item => this.getPropValue(item, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(','): '';\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.textValue = undefined;\r\n        this.textField = undefined;\r\n        this.isInputText = undefined;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.textValue;\r\n    }\r\n\r\n    //éè¿å¼¹çªè¿åçè¥å¹²ä¸ªå¼å¯¹è±¡ææçæ°ç»\r\n    value: any[];\r\n    //æ§ä»¶åæ¾ç¤ºçå¼\r\n    textValue: string;\r\n    //å¼¹çªæ¨¡å¼ä¸ï¼ååè¡¨ä¸­åªä¸ªå­æ®µçå¼æ å°å°å½åå­æ®µ\r\n    textField: string;\r\n    //æ¯å¦æ¯æå¨è¾å¥çå¼\r\n    isInputText: boolean;\r\n\r\n    constructor(data: {\r\n        value: any,\r\n        textValue: string,\r\n        textField: string,\r\n        isInputText: boolean\r\n    } = {value: [], textValue: undefined, textField: undefined, isInputText: undefined}){\r\n        this.value = data.value;\r\n        // this.textValue = data.textValue ? data.textValue.trim() : '';\r\n        this.textValue = data.textValue ? data.textValue : '';\r\n        this.textField = data.textField;\r\n        this.isInputText = data.isInputText;\r\n    }\r\n\r\n    getTextValue(targetField: string): string {\r\n        const args = targetField.split('.');\r\n        const textArr = this.value.map(item => this.getPropValue(item, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(','): '';\r\n    }\r\n\r\n    getPropValue(item: any, args: Array<string>): any{\r\n        if(args.length > 1){\r\n            const arg = args.shift();\r\n            return item[arg] ? this.getPropValue(item[arg], args) : '';\r\n        }\r\n        return item[args[0]];\r\n    }\r\n}","import { ControlType } from \"../controltype\";\r\nimport { TextValue } from \"./textvalue\";\r\nimport { NumberRangeValueConvertor, NumberRangeValue } from \"./numberrangevaue\";\r\nimport { DateRangeValue } from \"./daterangevalue\";\r\nimport { SmartHelpValue } from \"./smarthelpvalue\";\r\nimport { SingleDateValue } from './single-date-value';\r\nimport { SingleNumberValue } from './single-number-value';\r\nimport { SingleYearValue } from './single-year-value';\r\nimport { CheckBoxValue } from './checkbox-value';\r\nimport { DropDownListValue } from './dropdownlistvalue';\r\nimport { SingleMonthValue } from './single-month-value';\r\nimport { MonthRangeValue } from './month-range-value';\r\nimport { SingleDateTimeValue } from './single-date-time-value';\r\nimport { ComboLookUpValue} from './combolookup-value';\r\nimport { RadioValue } from './radio-value';\r\nimport { InputGroupValue } from './inputgroupvalue';\r\n\r\nexport interface IValue {\r\n    getControlType(): ControlType;\r\n    getOriginalValue(): any;\r\n    setOriginalValue(value: any): void;\r\n    clearValue(): void;\r\n    isEmpty(): boolean;\r\n}\r\n\r\nexport class ConditionValueConvert {\r\n    /**\r\n     * åºåå\r\n     * ä¸ºäºå¼å®¹C#äº§ççæ§æ°æ®ï¼åserverä¼ éçJSON objectå±æ§åå¨æ¹ä¸ºé¦å­æ¯å¤§å\r\n     */\r\n    convertToObject(obj: IValue): Object {\r\n        let conditionValue = obj as IValue;\r\n        let controlType = conditionValue.getControlType();\r\n        let jobj = new Object();\r\n        jobj[\"Type\"] = controlType;\r\n        if (controlType == ControlType.NumberRange) {\r\n            let convertor = new NumberRangeValueConvertor();\r\n            jobj[\"Content\"] = convertor.convertToObject(conditionValue);\r\n        }\r\n        else {\r\n            jobj[\"Content\"] = conditionValue;\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n\r\n    initFromObject(jobj: Object): IValue {\r\n        let content: IValue = jobj[\"Content\"];\r\n        \r\n        switch(jobj[\"Type\"]){\r\n            case ControlType.Text:\r\n                return new TextValue(jobj[\"Content\"]);\r\n            case ControlType.NumberRange:\r\n                return new NumberRangeValue(jobj[\"Content\"]);\r\n            case ControlType.DateRange:\r\n            case ControlType.DateTimeRange:\r\n                return new DateRangeValue(jobj[\"Content\"]);\r\n            case ControlType.DropDownList:\r\n                return new DropDownListValue(jobj[\"Content\"]);\r\n            case ControlType.SmartHelp:\r\n                return new SmartHelpValue(jobj[\"Content\"]);\r\n            case ControlType.ComboLookUp:\r\n                return new ComboLookUpValue(jobj[\"Content\"]);\r\n            case ControlType.SingleDate:\r\n                return Object.assign(new SingleDateValue(), content as SingleDateValue);\r\n            case ControlType.SingleNumber:\r\n                return Object.assign(new SingleNumberValue(), content as SingleNumberValue);\r\n            case ControlType.SingleYear:\r\n                return Object.assign(new SingleYearValue(), content as SingleYearValue);\r\n            case ControlType.BoolCheck:\r\n                return Object.assign(new CheckBoxValue(), content as CheckBoxValue);\r\n            case ControlType.Radio:\r\n                return Object.assign(new RadioValue(), content as RadioValue);\r\n            case ControlType.SingleMonth:\r\n                return Object.assign(new SingleMonthValue(), content as SingleMonthValue);\r\n            case ControlType.MonthRange:\r\n                return Object.assign(new MonthRangeValue(), content as MonthRangeValue);\r\n            case ControlType.SingleDateTime:\r\n                return Object.assign(new SingleDateTimeValue(), content as SingleDateTimeValue);\r\n            case ControlType.InputGroup:\r\n                return Object.assign(new InputGroupValue(), content as InputGroupValue);\r\n        }\r\n    }\r\n}","import { CompareType } from \"./comparetype\";\r\nimport { ValueType } from \"./valuetype\";\r\nimport { IControl, ControlConvert } from \"./controltype/icontrol\";\r\nimport { IValue, ConditionValueConvert } from \"./conditionvalue/ivalue\";\r\n\r\n/**\r\n * æ¥è¯¢æ¡ä»¶å®ä½ç±»\r\n */\r\nexport class QueryCondition {\r\n\r\n  /**\r\n   * å¯ä¸æ§æ è¯\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * å­æ®µç¼å·\r\n   */\r\n  fieldCode: string;\r\n\r\n  /**\r\n   * å­æ®µåç§°\r\n   */\r\n  fieldName: string;\r\n\r\n  /**\r\n   * æ¯è¾ç¬¦\r\n   */\r\n  // compareType:CompareType;\r\n\r\n  /**\r\n   * å¼ç±»å\r\n   */\r\n  valueType: ValueType;\r\n\r\n  /**\r\n   * ä¸ºç©ºæ¶æç¤ºä¿¡æ¯\r\n   */\r\n  placeHolder: string;\r\n  /**\r\n   * å¼å§\r\n   */\r\n  beginPlaceHolder: string;\r\n  /**\r\n   * ç»æ\r\n   */\r\n  endPlaceHolder: string;\r\n  /**\r\n   * å¼\r\n   * è¯¥å±æ§ä¸ºIValueæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åæä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n   * 1. ææ¬ç±»åï¼TextValue\r\n   * 2. ä¸æåè¡¨ï¼DropDownListValue\r\n   * 3. æ¥æåºé´ï¼DateRangeValue\r\n   * 4. æ°å­åºé´ï¼NumberRangeValue\r\n   * 5. å¸®å©ç±»åï¼SmartHelpValue\r\n   * 6. å¤éæ¡: CheckBoxValue\r\n   * 7. åæ°å¼: SingleNumberValue\r\n   * 8. åå¹´åº¦: SingleYearValue\r\n   * 9. åæåº¦: SingleMonthValue\r\n   * 10. æåº¦åºé´: MonthRangeValue\r\n   * 11. åæ¥æ: SingleDateValue\r\n   * 12. åæ¥ææ¶é´: SingleDateTimeValue\r\n   * 13. ä¸æå¸®å©ï¼ ComboLookUpValue\r\n   * 14. åéæ¡ï¼ RadioValue\r\n   * 15. æºè½è¾å¥æ¡ï¼ InputGroupValue\r\n   */\r\n  value: IValue;\r\n\r\n  /**\r\n   * æ§ä»¶ç±»åï¼ç®ååæ¬ææ¬ç±»åï¼ä¸æåè¡¨ï¼æ¥æåºé´ï¼æ°å­åºé´ï¼å¸®å©ç±»å\r\n   * æ§ä»¶ç±»åä¸ºIControlæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åå¯¹åºä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n   * 1. ææ¬ç±»åï¼TextControl\r\n   * 2. ä¸æåè¡¨ï¼DropDownListControl\r\n   * 3. æ¥æåºé´ï¼DateRangeControl\r\n   * 4. æ°å­åºé´ï¼NumberRangeControl\r\n   * 5. å¸®å©ç±»åï¼SmartHelpControl\r\n   * 6. åæ¥æï¼ SingleDateControl\r\n   * 7. åæ°å¼ï¼SingleNumberControl\r\n   * 8. åå¹´åº¦ï¼SingleYearControl\r\n   * 9. åæåº¦ï¼SingleMonthControl\r\n   * 10. æåº¦åºé´ï¼MonthRangeControl\r\n   * 11. åæ¥ææ¶é´ï¼SingleDateTimeControl\r\n   * 12. æ¥ææ¶é´åºé´ï¼DateTimeRangeControl\r\n   * 13. å¤éæ¡ï¼CheckBoxControl\r\n   * 14. ä¸æå¸®å©ï¼ComboLookUpControl\r\n   * 15. åéæ¡ï¼ RadioControl\r\n   * 16. æºè½è¾å¥æ¡ï¼ InputGroupControl\r\n   */\r\n  control: IControl;\r\n  readonly: boolean;\r\n  visible?: boolean = true;\r\n  /**\r\n   * é«çº§æ¨¡å¼ä¸çæ¡ä»¶id\r\n   */\r\n  conditionid?: number;\r\n  /**\r\n   * é«çº§æ¨¡å¼ä¸çå¼å³ç³»\r\n   */\r\n  compareType?: number;\r\n  /**\r\n   * é«çº§æ¨¡å¼ä¸çä¸ä¸ä¸ªæ¡ä»¶çå³ç³»\r\n   */\r\n  relation?: number;\r\n  /**\r\n   * é«çº§æ¨¡å¼ä¸çå¼å³æ¬å·\r\n   */\r\n  Rbracket?: string;\r\n  /**\r\n   * é«çº§æ¨¡å¼ä¸çå¼å·¦æ¬å·\r\n   */\r\n  Lbracket?: string;\r\n\r\n}\r\n\r\n/**\r\n * æ¥è¯¢æ¡ä»¶åºååä¸ååºååå¨\r\n */\r\nexport class QueryConditionConvert {\r\n\r\n  /**\r\n   * åºåå\r\n   * @param obj æ¥è¯¢æ¡ä»¶å®ä½\r\n   * ä¸ºäºå¼å®¹C#äº§ççæ§æ°æ®ï¼åserverä¼ éçJSON objectå±æ§åå¨æ¹ä¸ºé¦å­æ¯å¤§å\r\n   */\r\n  convertJObject(obj: QueryCondition): Object {\r\n    let queryCondition = obj as QueryCondition;\r\n    let jobj = new Object();\r\n    jobj[\"ID\"] = queryCondition.id;\r\n    jobj[\"FieldCode\"] = queryCondition.fieldCode;\r\n    jobj[\"FieldName\"] = queryCondition.fieldName;\r\n    // jobj[\"compareType\"]=queryCondition.compareType;\r\n    jobj[\"ValueType\"] = queryCondition.valueType;\r\n    jobj[\"placeHolder\"] = queryCondition.placeHolder;\r\n    // æ è®ºæ¯å¦åºé´é½è¿½å \r\n    jobj[\"beginPlaceHolder\"] = queryCondition.hasOwnProperty('beginPlaceHolder') ? queryCondition['beginPlaceHolder'] : '';\r\n    jobj[\"endPlaceHolder\"] = queryCondition.hasOwnProperty('endPlaceHolder') ? queryCondition['endPlaceHolder'] : '';\r\n    jobj[\"visible\"] = queryCondition.hasOwnProperty('visible') ? queryCondition['visible'] : true;\r\n    jobj[\"conditionid\"] = queryCondition.hasOwnProperty('conditionid') ? queryCondition['conditionid'] : undefined;\r\n    jobj[\"compareType\"] = queryCondition.hasOwnProperty('compareType') ? queryCondition['compareType'] : undefined;\r\n    jobj[\"relation\"] = queryCondition.hasOwnProperty('relation') ? queryCondition['relation'] : undefined;\r\n    jobj[\"Lbracket\"] = queryCondition.hasOwnProperty('Lbracket') ? queryCondition['Lbracket'] : undefined;\r\n    jobj[\"Rbracket\"] = queryCondition.hasOwnProperty('Rbracket') ? queryCondition['Rbracket'] : undefined;\r\n    let valueConvert = new ConditionValueConvert();\r\n    if (queryCondition.value) {\r\n      jobj[\"Value\"] = valueConvert.convertToObject(queryCondition.value);\r\n    }\r\n    let controlConvertor = new ControlConvert();\r\n    if (queryCondition.control) {\r\n      jobj[\"Control\"] = controlConvertor.convertJObject(queryCondition.control);\r\n    }\r\n    return jobj;\r\n  }\r\n\r\n  /**\r\n   * ååºåå\r\n   * @param jobj æ¥è¯¢æ¡ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n   * serverç«¯å­å¨çæ¯åç«¯å®ä¹å¥½æ ¼å¼çå­ç¬¦ä¸²ï¼æä»¥clientæ¥æ¶æ¶ä»¥çº¦å®å¥½çæ ¼å¼ååºåå\r\n   */\r\n  initFromJobject(jobj: Object): QueryCondition {\r\n    let queryCondition = new QueryCondition();\r\n    queryCondition.id = jobj[\"ID\"];\r\n    queryCondition.fieldCode = jobj[\"FieldCode\"];\r\n    queryCondition.fieldName = jobj[\"FieldName\"];\r\n    // queryCondition.compareType=jobj[\"compareType\"] as CompareType;\r\n    queryCondition.valueType = (jobj[\"ValueType\"]) as ValueType;\r\n    queryCondition.placeHolder = jobj[\"placeHolder\"];\r\n    queryCondition.beginPlaceHolder = jobj.hasOwnProperty('beginPlaceHolder') ? jobj['beginPlaceHolder'] : '';\r\n    queryCondition.endPlaceHolder = jobj.hasOwnProperty('endPlaceHolder') ? jobj['endPlaceHolder'] : '';\r\n    queryCondition.visible = jobj.hasOwnProperty('visible') ? jobj['visible'] : true;\r\n    queryCondition.conditionid = jobj.hasOwnProperty('conditionid') ? jobj['conditionid'] : undefined;\r\n    queryCondition.compareType = jobj.hasOwnProperty('compareType') ? jobj['compareType'] : undefined;\r\n    queryCondition.relation = jobj.hasOwnProperty('relation') ? jobj['relation'] : undefined;\r\n    queryCondition.Rbracket = jobj.hasOwnProperty('Rbracket') ? jobj['Rbracket'] : undefined;\r\n    queryCondition.Lbracket = jobj.hasOwnProperty('Lbracket') ? jobj['Lbracket'] : undefined;\r\n    const conditonValue = jobj[\"Value\"];\r\n    if (conditonValue) {\r\n      let valueConvert = new ConditionValueConvert();\r\n      queryCondition.value = valueConvert.initFromObject(conditonValue);\r\n    }\r\n    const conditionControl = jobj[\"Control\"];\r\n    if (conditionControl) {\r\n      let controlConvertor = new ControlConvert();\r\n      queryCondition.control = controlConvertor.initFromJobject(conditionControl);\r\n    }\r\n    return queryCondition;\r\n  }\r\n}\r\n","export enum ValueType{\r\n\r\n    /**\r\n     *å¼ç±»å\r\n     */\r\n    Value = 0,\r\n\r\n    /**\r\n     * å¸®å©ç±»å\r\n     */\r\n    SmartHelp=1,\r\n\r\n    /**\r\n     * æä¸¾ç±»å\r\n     */\r\n    Enum=2,\r\n\r\n    /**\r\n     * è¡¨è¾¾å¼\r\n     */\r\n    Express=3\r\n}","import { Injectable } from '@angular/core';\r\nimport { NotifyService, NotifyOptions } from '@farris/ui-notify';\r\nimport { QueryCondition } from '../entity/querycondition';\r\nimport { ValueType } from '../entity/valuetype';\r\nimport { TextControl } from '../entity/controltype/text/textcontrol';\r\nimport { InputGroupControl, DialogConfig } from '../entity/controltype/input-group/inputgroupcontrol';\r\nimport { TextValue } from '../entity/conditionvalue/textvalue';\r\nimport { DateRangeControl } from '../entity/controltype/daterange/date-range.control';\r\nimport { DateRangeValue } from '../entity/conditionvalue/daterangevalue';\r\nimport { NumberRangeControl } from '../entity/controltype/numberrange/numberrangecontrol';\r\nimport { NumberRangeValue } from '../entity/conditionvalue/numberrangevaue';\r\nimport { DropDownListControl } from '../entity/controltype/dropdownlist/dropdownlistcontrol';\r\nimport { DropDownListValue } from '../entity/conditionvalue/dropdownlistvalue';\r\nimport { SmartHelpContol, QuickSelectOption } from '../entity/controltype/smarthelp/smarthelpcontrol';\r\nimport { SmartHelpValue } from '../entity/conditionvalue/smarthelpvalue';\r\nimport { SingleDateControl } from '../entity/controltype/date/single-date-control';\r\nimport { SingleDateValue } from '../entity/conditionvalue/single-date-value';\r\nimport { SingleNumberControl } from '../entity/controltype/number/single-number-control';\r\nimport { SingleNumberValue } from '../entity/conditionvalue/single-number-value';\r\nimport { SingleYearControl } from '../entity/controltype/year/year-control';\r\nimport { SingleYearValue } from '../entity/conditionvalue/single-year-value';\r\nimport { SingleMonthControl } from '../entity/controltype/month/month-control';\r\nimport { SingleMonthValue } from '../entity/conditionvalue/single-month-value';\r\nimport { CheckBoxControl } from '../entity/controltype/checkbox/checkbox-control';\r\nimport { CheckBoxValue } from '../entity/conditionvalue/checkbox-value';\r\nimport { DateTimeRangeControl } from '../entity/controltype/daterange/datertime-range-control';\r\nimport { MonthRangeControl } from '../entity/controltype/monthrange/month-range-control';\r\nimport { MonthRangeValue } from '../entity/conditionvalue/month-range-value';\r\nimport { SingleDateTimeControl } from '../entity/controltype/date/single-date-time-control';\r\nimport { SingleDateTimeValue } from '../entity/conditionvalue/single-date-time-value';\r\nimport { ComboLookUpControl } from '../entity/controltype/combolookup/combolookup-control';\r\nimport { ComboLookUpValue } from '../entity/conditionvalue/combolookup-value';\r\nimport { RadioControl } from '../entity/controltype/radio/radio-control';\r\nimport { RadioValue } from '../entity/conditionvalue/radio-value';\r\nimport { InputGroupValue } from '../entity/conditionvalue/inputgroupvalue';\r\nimport { QuerySolutionVo } from '../entity/querysolutionvo';\r\nimport { FieldConfig } from '../entity/fieldconfig/fieldconfig';\r\nimport { ControlType } from '../entity/controltype';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class SolutionService {\r\n  // æ è®°åæ´\r\n  private controlConfigState: BehaviorSubject<any> = new BehaviorSubject([]);\r\n\r\n  constructor(private notify: NotifyService) { }\r\n  controlTypeMap: Map<number, string> = new Map([\r\n    [ControlType.Text, 'text'], [ControlType.BoolCheck, 'bool-check'], [ControlType.DateRange, 'date'],\r\n    [ControlType.DateTimeRange, 'date-time'], [ControlType.NumberRange, 'number'], [ControlType.DropDownList, 'dropdown'],\r\n    [ControlType.SmartHelp, 'help'], [ControlType.SingleDate, 'single-date'], [ControlType.SingleNumber, 'single-number'],\r\n    [ControlType.SingleYear, 'single-year'], [ControlType.SingleMonth, 'single-month'], [ControlType.MonthRange, 'month'],\r\n    [ControlType.SingleDateTime, 'single-date-time'], [ControlType.ComboLookUp, 'combolist-help'], [ControlType.Radio, 'radio'],\r\n    [ControlType.InputGroup, 'input-group']\r\n  ]);\r\n  getControlConfigState() {\r\n    return this.controlConfigState;\r\n  }\r\n  /**\r\n   * ä¼ éè¿æ¥çæ¯å·²ç»å¤çè¿çæ¡ä»¶\r\n   * @param simpleCondition \r\n   */\r\n  updateControlConfigState(simpleCondition: Array<any>) {\r\n    this.controlConfigState.next(simpleCondition);\r\n  }\r\n\r\n  /**\r\n   * åªè¿åå­å¨çå±æ§\r\n   */\r\n  convertToSimpleQueryConditions(fields: Array<FieldConfig>): Array<any> {\r\n    if(fields && fields.length == 0) {\r\n      return [];\r\n    }\r\n    return fields.map(field => {\r\n      let simpleQueryCondition = {};\r\n      simpleQueryCondition['fieldCode'] = field.labelCode;\r\n      if(field.hasOwnProperty('visible')) {\r\n        simpleQueryCondition['visible'] = field.visible;\r\n      }\r\n      simpleQueryCondition['control'] = this.getSimpleControl(field);\r\n      return simpleQueryCondition;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * åªå¤çè®¾ç½®çå±æ§\r\n   * @param field \r\n   */\r\n  private getSimpleControl(field: FieldConfig) {\r\n    const controlData = field.control;\r\n    let simpleControl = {};\r\n    let tControlType = this.controlTypeMap.get(controlData.controltype);\r\n    switch (tControlType) {\r\n      case 'single-year':\r\n        this.updateSimpleControl(simpleControl, ['maxDate', 'minDate'], controlData);\r\n        break;\r\n      default:\r\n        simpleControl = {};\r\n    }\r\n    return simpleControl;\r\n  }\r\n\r\n  /**\r\n   * åªå¤çæå®å±æ§\r\n   * @param resultObj ä¿®æ¹çå¯¹è±¡  {test01:'',test01:''}\r\n   * @param sourceProps å¾è·åçå±æ§åè¡¨ ['prop01','prop02']\r\n   * @param source åå¼æ¥æº{prop01:'',prop02:''}\r\n   * @param distProps ç®æ å±æ§ï¼å¯¹åºçè¿åå±æ§æç§è®¾ç½®['dist01','']\r\n   * @return \r\n   */\r\n  private updateSimpleControl(resultObj: any, sourceProps: any, source: any, distProps = []) {\r\n    if (distProps.length == 0) {\r\n      distProps = sourceProps;\r\n    }\r\n    for (let m = 0; m < sourceProps.length; m++) {\r\n      if (!distProps[m]) {\r\n        distProps[m] = sourceProps[m];\r\n      }\r\n    }\r\n    for (let k = 0; k < sourceProps.length; k++) {\r\n      if (source && source.hasOwnProperty(sourceProps[k])) {\r\n        resultObj[distProps[k]] = source[sourceProps[k]];\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * å°å­æ®µéç½®JSONæè¿°ä¿¡æ¯è½¬æ¢ä¸ºç­éæ¡ä»¶\r\n   * @param fields å­æ®µéç½®ä¿¡æ¯\r\n   * @returns ç­éæ¡ä»¶æ°ç»\r\n   */\r\n  public convertToQueryConditions(fields: Array<FieldConfig>): Array<QueryCondition> {\r\n    let queryCondition: QueryCondition;\r\n    return fields.map(field => {\r\n      queryCondition = new QueryCondition();\r\n      queryCondition.id = field.id;\r\n      queryCondition.fieldCode = field.labelCode;\r\n      // queryCondition.code = field.code; æ ç¨å±æ§\r\n      queryCondition.fieldName = field.name;\r\n      queryCondition.valueType = ValueType.Value;\r\n      queryCondition.placeHolder = field.placeHolder;\r\n      queryCondition.beginPlaceHolder=field.hasOwnProperty('beginPlaceHolder')?field.beginPlaceHolder:'';\r\n      queryCondition.endPlaceHolder=field.hasOwnProperty('endPlaceHolder')?field.endPlaceHolder:'';      \r\n      let { control, value } = this.getControlAndValue(field);\r\n      queryCondition.control = control;\r\n      queryCondition.value = value;\r\n      return queryCondition;\r\n    });\r\n  }\r\n  /**\r\n   * æ ¹æ®æ§ä»¶ç±»ååå«åå»ºç­éæ¡ä»¶çcontrolå¯¹è±¡åvalueå¯¹è±¡\r\n   * @param field å­æ®µéç½®ä¿¡æ¯\r\n   * @returns ç­éæ¡ä»¶çcontrolå¯¹è±¡åvalueå¯¹è±¡\r\n   */\r\n  getControlAndValue(field: FieldConfig) {\r\n    const controlData = field.control;\r\n    const valueData = field.value;\r\n    let control, value: any;\r\n    switch (controlData.controltype) {\r\n      case 'text':\r\n        control = new TextControl();\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        //plain string\r\n        value = new TextValue({ value: valueData });\r\n        break;\r\n      case 'input-group':\r\n        control = new InputGroupControl();\r\n        control.className = controlData.className;\r\n        control.require = controlData.require;\r\n        control.editable = controlData.editable;\r\n        control.groupText = controlData.groupText;\r\n        control.usageMode = controlData.usageMode;\r\n        control.dialogOptions = this.setInputGroupDialog(field);\r\n        control.click = controlData.click;\r\n        value = new InputGroupValue(valueData);\r\n        break;\r\n      case 'date':\r\n        control = new DateRangeControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat = controlData.returnFormat;\r\n        control.dateChangedCmd = controlData.valueChangedCmd ? controlData.valueChangedCmd : controlData.dateChangedCmd;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.weekSelect = controlData.weekSelect;\r\n        control.showWeekNumbers = controlData.showWeekNumbers;\r\n        control.startFieldCode = controlData.startFieldCode || field.labelCode;\r\n        control.endFieldCode = controlData.endFieldCode || field.labelCode;\r\n        control.enableSplit = controlData.enableSplit || false;\r\n        //control.beginPlaceHolder=controlData.beginPlaceHolder;\r\n        //control.endPlaceHolder=controlData.endPlaceHolder;\r\n        //{startTime: valueData.startTime, endTime: valueData.endTime}\r\n        value = new DateRangeValue(valueData);\r\n        break;\r\n      case 'date-time':\r\n        control = new DateTimeRangeControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat = controlData.returnFormat;\r\n        control.dateChangedCmd = controlData.valueChangedCmd ? controlData.valueChangedCmd : controlData.dateChangedCmd;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.enableCustomFormat = controlData.enableCustomFormat;      \r\n        control.enableSplit = controlData.enableSplit || false;  \r\n       // control.beginPlaceHolder=controlData.beginPlaceHolder;\r\n        //control.endPlaceHolder=controlData.endPlaceHolder;\r\n        //control.weekSelect = controlData.weekSelect;\r\n        //control.showWeekNumbers = controlData.showWeekNumbers;\r\n        //{startTime: valueData.startTime, endTime: valueData.endTime}\r\n        value = new DateRangeValue(valueData);\r\n        break;\r\n      case 'month':\r\n        control = new MonthRangeControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat = controlData.returnFormat;\r\n        control.dateChangedCmd = controlData.valueChangedCmd ? controlData.valueChangedCmd : controlData.dateChangedCmd;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;      \r\n        control.enableSplit = controlData.enableSplit || false;\r\n        //control.beginPlaceHolder=controlData.beginPlaceHolder;\r\n        //control.endPlaceHolder=controlData.endPlaceHolder;\r\n        value = new MonthRangeValue(valueData);\r\n        break;\r\n      case 'number':\r\n        control = new NumberRangeControl();\r\n        control.className = controlData.className;\r\n        control.placeholder = this.emptyString(controlData.placeholder);\r\n        control.require = controlData.require;\r\n        control.precision = controlData.precision;\r\n        control.textAlign = controlData.textAlign;\r\n        control.bigNumber = controlData.isBigNumber;\r\n        control.min = controlData.minValue;\r\n        control.max = controlData.maxValue;        \r\n        //control.beginPlaceHolder=controlData.beginPlaceHolder;\r\n        //control.endPlaceHolder=controlData.endPlaceHolder;\r\n        //{startValue: valueData.startValue, endValue: valueData.endValue}\r\n        value = new NumberRangeValue(valueData);\r\n        break;\r\n      case 'dropdown':\r\n        control = new DropDownListControl();\r\n        control.valueType = controlData.valueType;\r\n        control.enumValues = controlData.enumValues;\r\n        control.uri = controlData.uri;\r\n        control.beforeShow = controlData.beforeShow;\r\n        control.beforeHide = controlData.beforeHide;\r\n        control.idField = controlData.idField;\r\n        control.textField = controlData.textField;\r\n        control.multiSelect = controlData.multiSelect;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.panelHeight = controlData.panelHeight;\r\n        control.require = controlData.require;\r\n        //{value: [enumValues], key: ä»¥ï¼å·åå²çå­ç¬¦ä¸²})\r\n        value = new DropDownListValue(valueData);\r\n        break;\r\n      case 'help':\r\n        control = new SmartHelpContol();\r\n        control.uri = controlData.uri;\r\n        control.textField = controlData.textField;\r\n        control.valueField = controlData.valueField;\r\n        control.displayType = controlData.displayType;\r\n        control.idField = controlData.idField;\r\n        control.mapFields = controlData.mapFields;\r\n        control.preEventCmd = controlData.preEventCmd;\r\n        control.postEventCmd = controlData.postEventCmd;\r\n        control.context = controlData.context;\r\n        control.className = controlData.className;\r\n        control.enableFullTree = controlData.enableFullTree;\r\n        control.loadTreeDataType = controlData.loadTreeDataType;\r\n        control.singleSelect = controlData.singleSelect;\r\n        control.expandLevel = controlData.expandLevel;\r\n        control.enableCascade = controlData.enableCascade;\r\n        control.cascadeStatus = controlData.cascadeStatus;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.nosearch = controlData.nosearch;\r\n        control.displayFields = controlData.displayFields;\r\n        control.displayTextSeparator = controlData.displayTextSeparator;\r\n        control.editable = controlData.editable;\r\n        control.clearFields = controlData.clearFields;\r\n        control.clear = controlData.clear;\r\n        control.dialogTitle = controlData.dialogTitle;\r\n        control.panelHeight = controlData.panelHeight;\r\n        control.panelWidth = controlData.panelWidth;\r\n        control.enableMultiFieldSearch = controlData.enableMultiFieldSearch;\r\n        if (controlData.hasOwnProperty('pageSize')) {\r\n          control.pageSize = controlData.pageSize;\r\n        }\r\n        if (controlData.hasOwnProperty('pageList')) {\r\n          control.pageList = controlData.pageList;\r\n        }\r\n        if (controlData.hasOwnProperty('quickSelect')) {\r\n          let quickSelectControl = new QuickSelectOption();\r\n          quickSelectControl.enable = controlData.quickSelect['enable'];\r\n          quickSelectControl.showItemsCount = controlData.quickSelect['showItemsCount'];\r\n          quickSelectControl.formatter = controlData.quickSelect['formatter'];\r\n          quickSelectControl.showMore = controlData.quickSelect['showMore'];\r\n          control.quickSelect = quickSelectControl;\r\n        }\r\n        //{value: [{}], valueField: string, textValue: string}\r\n        value = new SmartHelpValue(valueData);\r\n        break;\r\n      case 'combolist-help':\r\n        control = new ComboLookUpControl();\r\n        control.uri = controlData.uri;\r\n        control.idField = controlData.idField;\r\n        control.valueField = controlData.valueField;\r\n        control.textField = controlData.textField;\r\n        control.mapFields = controlData.mapFields;\r\n        control.displayType = this.displayTypeTransform(controlData.displayType);\r\n        control.singleSelect = controlData.singleSelect;\r\n        control.preEventCmd = controlData.preEventCmd;\r\n        control.postEventCmd = controlData.postEventCmd;\r\n        control.enableFullTree = controlData.enableFullTree;\r\n        control.loadTreeDataType = controlData.loadTreeDataType;\r\n        control.expandLevel = controlData.expandLevel;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.panelWidth = controlData.panelWidth;\r\n        control.panelHeight = controlData.panelHeight;\r\n        control.require = controlData.require;\r\n        control.context = controlData.context;\r\n        //{value: [{}], valueField: string, textValue: string}\r\n        value = new ComboLookUpValue(valueData);\r\n        break;\r\n      case 'single-date':\r\n        control = new SingleDateControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat = controlData.returnFormat;\r\n        control.dateChangedCmd = controlData.valueChangedCmd ? controlData.valueChangedCmd : controlData.dateChangedCmd;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.isDynamicDate = controlData.isDynamicDate ? controlData.isDynamicDate : false;\r\n        //plain string\r\n        value = new SingleDateValue(valueData);\r\n        break;\r\n      case 'single-date-time':\r\n        control = new SingleDateTimeControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat=controlData.returnFormat;\r\n        control.dateChangedCmd = controlData.valueChangedCmd ? controlData.valueChangedCmd : controlData.dateChangedCmd;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.enableCustomFormat = controlData.enableCustomFormat;    \r\n        value = new SingleDateTimeValue(valueData);\r\n        break;\r\n      case 'single-number':\r\n        control = new SingleNumberControl();\r\n        control.className = controlData.className;\r\n        control.placeholder = this.emptyString(controlData.placeholder);\r\n        control.precision = controlData.precision;\r\n        control.require = controlData.require;\r\n        control.textAlign = controlData.textAlign;\r\n        control.bigNumber = controlData.isBigNumber;\r\n        control.min = controlData.minValue;\r\n        control.max = controlData.maxValue;\r\n        //{numValue: xxxx}\r\n        value = new SingleNumberValue(valueData);\r\n        break;\r\n      case 'single-year':\r\n        control = new SingleYearControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat = controlData.returnFormat;\r\n        control.dateChangedCmd = controlData.valueChangedCmd ? controlData.valueChangedCmd : controlData.dateChangedCmd;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.maxDate = controlData.maxDate;\r\n        control.minDate = controlData.minDate;\r\n        //yearValue : plain string\r\n        value = new SingleYearValue(valueData);\r\n        break;\r\n      case 'single-month':\r\n        control = new SingleMonthControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat = controlData.returnFormat;\r\n        control.dateChangedCmd = controlData.valueChangedCmd ? controlData.valueChangedCmd : controlData.dateChangedCmd;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        value = new SingleMonthValue(valueData);\r\n        break;\r\n      case 'bool-check':\r\n        control = new CheckBoxControl();\r\n        control.className = controlData.className;\r\n        control.data = [{ value: \"true\", name: field.name }];\r\n        control.horizontal = controlData.horizontal;\r\n        control.disable = controlData.disable;\r\n        control.isStringValue = false;\r\n        control.require = controlData.require;\r\n        //[true] or [false]\r\n        value = new CheckBoxValue(valueData);\r\n        break;\r\n      case 'radio':\r\n        control = new RadioControl();\r\n        control.valueType = controlData.valueType;\r\n        control.enumValues = controlData.enumValues;\r\n        control.className = controlData.className;\r\n        control.showLabel = controlData.showLabel;\r\n        control.horizontal = controlData.horizontal;\r\n        control.disabled = controlData.disabled;\r\n        control.require = controlData.require;\r\n        value = new RadioValue(valueData);\r\n        break;\r\n    }\r\n    return { control, value };\r\n  }\r\n\r\n  getGuid() {\r\n    return (this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + this.s4() + this.s4());\r\n  }\r\n\r\n  private s4() {\r\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n  }\r\n\r\n  showInfo(message: string, infoType: string, title: string, timeout: number) {\r\n    this.notify.config.position = 'top-center';\r\n    if (infoType == 'success') {\r\n      this.notify.success(<NotifyOptions>{ title: title, msg: message, timeout: timeout });\r\n    }\r\n    else if (infoType == 'info') {\r\n      this.notify.info(<NotifyOptions>{ title: title, msg: message, timeout: timeout });\r\n    }\r\n    else if (infoType == 'warning') {\r\n      this.notify.warning(<NotifyOptions>{ title: title, msg: message, timeout: timeout });\r\n    }\r\n    else if (infoType == 'error') {\r\n      this.notify.error(<NotifyOptions>{ title: title, msg: message, timeout: timeout });\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n  * æ ¹æ®å­æ®µè·åLableæ§ä»¶çTitle\r\n  * @param field\r\n  */\r\n  getConditionItemTitle(field: QueryCondition) {\r\n    if (field.id && field.id !== '') {\r\n      return field.fieldName;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * å è½½ç­éæ¹æ¡æ¶èµé»è®¤å¼\r\n   * @param solution éè¦èµé»è®¤å¼çç­éæ¹æ¡\r\n   * @param fieldConfigs é»è®¤å¼è®¾ç½®\r\n   * @param readonly æ¯å¦åªè¯»\r\n   * @returns å·²èµé»è®¤å¼çç­éæ¹æ¡\r\n   */\r\n  setValues(solution: QuerySolutionVo, fieldConfigs: FieldConfig[], readonly: boolean): QuerySolutionVo {\r\n    let qc: QueryCondition;\r\n    const conditions = solution.queryConditions ? solution.queryConditions : [];\r\n    let controlType: string;\r\n    fieldConfigs.forEach(field => {\r\n      qc = conditions.find(c => c.fieldCode == field.labelCode);\r\n      //qc.controlå¹¶ä¸æ¯controlData\r\n      if (qc && qc.control && qc.value) {\r\n        controlType = this.controlTypeMap.get(qc.control.getControlType());\r\n        field.control = { controltype: controlType };\r\n        const { control, value } = this.getControlAndValue(field);\r\n        qc.value = this.isNumCheck(qc, value, field);\r\n        qc.readonly = readonly;\r\n      }\r\n    });\r\n    return solution;\r\n  }\r\n  /**\r\n   * \r\n   * @param solution éè¦æ´æ°éç½®çç­éæ¹æ¡\r\n   * @param fieldConfigs æ´æ°éç½®\r\n   * @returns å·²æ´æ°éç½®çç­éæ¹æ¡\r\n   */\r\n  updateControl(conditions: Array<QueryCondition>, fieldConfigs: Array<any>) {\r\n    let qc: QueryCondition;\r\n    conditions = conditions ? conditions : [];\r\n    if (conditions.length > 0) {\r\n      fieldConfigs.forEach(field => {\r\n        qc = conditions.find(c => c.fieldCode == field['fieldCode']);\r\n        if(qc && qc.hasOwnProperty('visible') && field.hasOwnProperty('visible') && field['visible'] !== qc.visible ) {\r\n          qc.visible = field['visible'];\r\n        }\r\n        if (qc && qc.control) {\r\n          for (var prop in field.control) {\r\n            qc.control[prop] = field.control[prop]\r\n          }\r\n        }\r\n      });\r\n    }\r\n    // let qc: QueryCondition;\r\n    // const conditions = solution.queryConditions ? solution.queryConditions : [];\r\n    // if (conditions.length > 0) {\r\n    //   fieldConfigs.forEach(field => {\r\n    //     qc = conditions.find(c => c.fieldCode == field.labelCode);\r\n    //     if (qc && qc.control) {\r\n    //       for (var prop in field.control) {\r\n    //         qc.control[prop] = field.control[prop]\r\n    //       }\r\n    //     }\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  /**\r\n   * å¿å¡«æ§ä»¶éç©ºå¤æ­\r\n   * @param conditions è¿è¡ç­éæä½æ¶å½åææçç­éæ¡ä»¶\r\n   */\r\n  isValid(conditions: Array<QueryCondition>): any[] {\r\n    let qc: QueryCondition;\r\n    const errorArr = conditions.map(qc => {\r\n      if (qc.control.isRequired() && qc.value.isEmpty() && qc.visible) {\r\n        return {\r\n          type: 'require',\r\n          field: qc.fieldName\r\n        };\r\n      }\r\n    });\r\n    return errorArr.filter(error => error != null);\r\n  }\r\n\r\n  /**\r\n   * è§£å³æ°å¼æ§ä»¶placeholderæ¾ç¤ºä¸ºundefinedçé®é¢\r\n   * @param s æ°å¼æ§ä»¶JSONæè¿°ä¸­çplaceholderéç½®ä¿¡æ¯\r\n   */\r\n  private emptyString(data: any) {\r\n    if (data === null || data === undefined) {\r\n      return '';\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * è§£å³jitçæä»£ç åä¸æå¸®å©æ§ä»¶çdisplayTypeå±æ§ä¸ç»ä»¶apiä¸ä¸è´çé®é¢\r\n   * @param data ä¸æå¸®å©æ§ä»¶JSONæè¿°ä¸­çdisplayTypeéç½®ä¿¡æ¯\r\n   */\r\n  private displayTypeTransform(data: any) {\r\n    if (data === 'List') {\r\n      return 'LOOKUPLIST';\r\n    }\r\n    return 'LOOKUPTREELIST';\r\n  }\r\n\r\n  /**\r\n   * è§£å³æ°å¼æ§ä»¶èµé»è®¤å¼åè½ä¸æå¤§æå°å¼éå¶åè½çå²çªé®é¢\r\n   * @param condition å½åæ­£å¨èµé»è®¤å¼çç­éæ¡ä»¶ï¼è¥æ¯æ°å¼ç±»åï¼éè¦æåå¶controlå¯¹è±¡çmaxå±æ§åminå±æ§çå¼\r\n   * @param value é»è®¤å¼éç½®valueå¯¹è±¡\r\n   * @param field é»è®¤å¼éç½®\r\n   * @returns æ ¡éªæå¤§å¼åæå°å¼ä¹åçé»è®¤å¼éç½®valueå¯¹è±¡\r\n   */\r\n  private isNumCheck(condition: any, value: any, field: any) {\r\n    let minValue: any;\r\n    let maxValue: any;\r\n    if (field.control.controltype == 'single-number') {\r\n      minValue = (condition.control.min == null || condition.control.min == undefined) ? -2147483648 : condition.control.min;\r\n      maxValue = (condition.control.max == null || condition.control.max == undefined) ? 2147483647 : condition.control.max;\r\n      value.numValue = ((value.numValue - minValue) > 0) ? value.numValue : minValue;\r\n      value.numValue = ((value.numValue - maxValue) < 0) ? value.numValue : maxValue;\r\n    }\r\n    if (field.control.controltype == 'number') {\r\n      minValue = (condition.control.min == null || condition.control.min == undefined) ? -2147483648 : condition.control.min;\r\n      maxValue = (condition.control.max == null || condition.control.max == undefined) ? 2147483647 : condition.control.max;\r\n      value.startValue = ((value.startValue - minValue) > 0) ? value.startValue : minValue;\r\n      value.startValue = ((value.startValue - maxValue) < 0) ? value.startValue : maxValue;\r\n      value.endValue = ((value.endValue - minValue) > 0) ? value.endValue : minValue;\r\n      value.endValue = ((value.endValue - maxValue) < 0) ? value.endValue : maxValue;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * æºè½è¾å¥æ¡æ§ä»¶éè¦å¼¹åºè¡¨åæ¶ï¼å°è¡¨åéç½®JSONæè¿°è½¬æ¢ä¸ºå¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªåæ°\r\n   * @param field éç½®ä¸ºæºè½è¾å¥æ¡æ§ä»¶çå­æ®µçJSONæè¿°\r\n   * @returns å¼¹çªåæ°\r\n   */\r\n  private setInputGroupDialog(field: any): DialogConfig {\r\n    let inputGroupControlData = field.control;\r\n    let modalConfigData = inputGroupControlData.modalConfig;\r\n    if (!field.id || inputGroupControlData.usageMode == 'text') {\r\n      return undefined;\r\n    }\r\n\r\n    let dialogConfig = new DialogConfig();\r\n    dialogConfig.modalId = field.id;\r\n    if (modalConfigData.mapFields) {\r\n      dialogConfig.mapFields = JSON.parse(modalConfigData.mapFields.replace(/'/g, '\"'));\r\n    }\r\n    dialogConfig.showHeader = modalConfigData.hasOwnProperty('showHeader') ? modalConfigData.showHeader : true;\r\n    dialogConfig.showCloseButton = modalConfigData.hasOwnProperty('showCloseButton') ? modalConfigData.showCloseButton : true;\r\n    dialogConfig.showMaxButton = modalConfigData.hasOwnProperty('showMaxButton') ? modalConfigData.showMaxButton : true;\r\n    dialogConfig.title = modalConfigData.hasOwnProperty('title') ? modalConfigData.title : '';\r\n    dialogConfig.width = modalConfigData.width;\r\n    dialogConfig.height = modalConfigData.height;\r\n    return dialogConfig;\r\n  }\r\n}\r\n\r\n","import { Component, OnInit, Output, EventEmitter, ViewChild, TemplateRef, HostBinding, ViewEncapsulation, ElementRef, Input, SkipSelf, OnChanges, SimpleChanges, ContentChild, AfterContentInit, AfterViewInit } from '@angular/core';\r\nimport { SolutionService } from '../service/solution.service';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { QueryCondition } from '../entity/querycondition';\r\nimport { MultiSelectComponent } from '@farris/ui-multi-select';\r\nimport { NotifyService } from '@farris/ui-notify';\r\n@Component({\r\n    selector: 'app-queryconfigdialog',\r\n    templateUrl: './configdialog.component.html',\r\n    styleUrls: ['./configdialog.component.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ConfigDialogComponent implements OnInit, OnChanges, AfterViewInit {\r\n    @Input() inputSelectedFileds: Array<QueryCondition> = [];\r\n    @Input() filedsDataSource: Array<QueryCondition>;\r\n    @Output() cancelEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() confirmEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n    @ViewChild('dialog') dialog: DialogComponent;\r\n    @ViewChild('searchMulti') multiSelectCmp: MultiSelectComponent;\r\n\r\n    selectedIds: Array<string> = [];\r\n    title: string;\r\n    visibleFields: Array<QueryCondition>;\r\n    visibleSelectedFields: Array<QueryCondition>;\r\n    constructor(private solutionService: SolutionService, private localeService: LocaleService, private notify: NotifyService) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if(changes.filedsDataSource && changes.filedsDataSource.currentValue) {\r\n            this.visibleFields = this.filedsDataSource.filter(item => {return !!item.visible});\r\n        }\r\n\r\n        if (changes.inputSelectedFileds && changes.inputSelectedFileds.currentValue) {\r\n            this.visibleSelectedFields = this.inputSelectedFileds.filter(item => {return !!item.visible});\r\n            if(this.visibleSelectedFields.length) {\r\n                this.selectedIds = this.visibleSelectedFields.map(qc => qc.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.title = this.localeService.getValue('queryCondition.container.config');\r\n        if(this.filedsDataSource) {\r\n            this.visibleFields = this.filedsDataSource.filter(item => {return !!item.visible});\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        if(this.multiSelectCmp.enableMoveMore !== undefined) {\r\n            this.multiSelectCmp.enableMoveMore = true\r\n        }\r\n    }\r\n    /**\r\n     * åæ¶\r\n     */\r\n    cancel() {\r\n        this.selectedIds = this.visibleSelectedFields.map(qc => qc.id);\r\n        //undo: ç©¿æ¢­æ¡ç»ä»¶çselectedIdå¼ä¸ºç©ºæ°ç»æ¶å­å¨é®é¢ï¼éè¿ç»å»ºçmoveAllToLeftä¿è¯è¯¥åè½\r\n        if(!this.selectedIds.length) {\r\n            this.multiSelectCmp.moveAllToLeft()\r\n        }\r\n        this.cancelEmitter.emit(true);        \r\n        this.multiSelectCmp.searchValue = '';\r\n        this.dialog.close();\r\n    }\r\n\r\n    /**\r\n     * ç¡®è®¤\r\n     */\r\n    confirm() {\r\n\r\n        //å¿å¡«å­æ®µå¿ééæ©ï¼å¦åç»ä¸æç¤º\r\n        let requiredAndUncheck  = this.visibleFields.filter(val => val.control && val.control.isRequired()).filter(item => !this.selectedIds.includes(item.id))\r\n        if(requiredAndUncheck && requiredAndUncheck.length) {\r\n            let msg = requiredAndUncheck.map(val => val.fieldName).join('ã') + 'ä¸ºå¿éå­æ®µï¼è¯·å¾éååè¿è¡ä¿å­æä½ã'\r\n            this.notify.error(msg)\r\n            return \r\n        }\r\n        \r\n        const selectedFields = [];\r\n        let _fieldData: QueryCondition;\r\n        this.selectedIds.forEach(id => {\r\n            const index = this.visibleSelectedFields.findIndex(field => field.id == id);\r\n            if (index > -1) {\r\n                selectedFields.push(this.visibleSelectedFields[index].fieldCode);\r\n            } else {\r\n                _fieldData = this.visibleFields.find(field => field.id == id);\r\n                _fieldData.value.clearValue();\r\n                selectedFields.push(_fieldData.fieldCode);\r\n            }\r\n        });\r\n        this.confirmEmitter.emit(selectedFields);\r\n        this.multiSelectCmp.searchValue = '';\r\n        this.dialog.close();\r\n    }\r\n\r\n    /**\r\n     * éç½®\r\n     */\r\n    reset() {\r\n\r\n    }\r\n}\r\n","import { Component, ViewEncapsulation, Input, ComponentFactoryResolver, Injector, ComponentFactory,\r\n    Output, EventEmitter, LOCALE_ID, ViewChild, OnInit, OnDestroy, AfterViewChecked, NgZone, AfterViewInit } from '@angular/core';\r\nimport { QueryCondition } from './entity/querycondition';\r\nimport { CommunicationService } from './service/communicationservice';\r\nimport { ConvertorService } from './service/convertorservice';\r\nimport { ControlType } from './entity/controltype';\r\nimport { ConfigDialogComponent } from './fieldconfigdialog/configdialog.component';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { SolutionService } from './service/solution.service';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { Subject } from 'rxjs';\r\nimport { IdService } from '@farris/ui-common';\r\nimport {QuerySolutionVo} from './entity/querysolutionvo'\r\n\r\n@Component({\r\n    selector: 'farris-querycondition',\r\n    templateUrl: './querycondition.component.html',\r\n    styleUrls: ['./querycondition.component.css'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [CommunicationService]\r\n})\r\nexport class QueryConditionComponent implements OnInit, OnDestroy, AfterViewChecked, AfterViewInit {\r\n\r\n    _selectSolution: QuerySolutionVo\r\n    @Input() get selectSolution() {\r\n        return this._selectSolution\r\n    }\r\n    set selectSolution(value) {\r\n        this._selectSolution = value\r\n    }\r\n    @Input() fieldConfigs: Array<QueryCondition>;\r\n    @Input() unformatFieldConfigs: Array<any>;\r\n    private _resetFieldConfigs = [];\r\n    @Input() \r\n    set resetFieldConfigs(value: Array<any>) {\r\n        if(value && value.length > 0) {\r\n            this.solutionService.updateControlConfigState(value);\r\n        }\r\n        this._resetFieldConfigs = value;\r\n    }\r\n    get resetFieldConfigs(){\r\n        return this._resetFieldConfigs;\r\n    }\r\n    @Input() isControlInline: boolean = true;\r\n    private _selectedFieldConditions:Array<QueryCondition>;\r\n    @Input() \r\n    set selectedFieldConditions(value: Array<QueryCondition>) {\r\n        this._selectedFieldConditions = value;\r\n    }\r\n    get selectedFieldConditions(): Array<QueryCondition> {\r\n        return this._selectedFieldConditions;\r\n    };\r\n\r\n    @Input() showCompleteLabel: boolean = false;\r\n\r\n    @Input() isDisabled: boolean;\r\n\r\n    @Output() fieldConditionsChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild('configDialog') configDialog: ConfigDialogComponent;\r\n\r\n    //æ¯å¦å¯ç¨é«çº§æ¨¡å¼ï¼é»è®¤ä¸ºfalse\r\n    @Input() openAdvanced: boolean = true;\r\n\r\n    localeIds = {\r\n        'en': 'en',\r\n        'zh-CHS': 'zh-CHS'\r\n    }\r\n    currentLocale: string;\r\n    \r\n    solutionService: SolutionService;\r\n    \r\n    controlType = ControlType;\r\n    \r\n    labelFormat: string;\r\n\r\n    showButton: boolean = false;\r\n\r\n    fieldCodeOfClearFields: Array<string> = [];\r\n\r\n    canClearRelatedFields: boolean = false;\r\n\r\n    destroy$: Subject<any> = new Subject<any>();\r\n\r\n    private idService: IdService;\r\n    \r\n    @ViewChild(\"queryConditionWrap\") queryConditionWrapEl;\r\n    // è·ångZone\r\n    private ngZone = null;\r\n    constructor(\r\n        private communicationService: CommunicationService,\r\n        private convertorService: ConvertorService,\r\n        private resolver: ComponentFactoryResolver,\r\n        private injector: Injector,\r\n        private modalService: BsModalService,\r\n        private localeService: LocaleService\r\n    ) {\r\n        this.currentLocale = this.injector.get(LOCALE_ID);\r\n        this.solutionService = this.injector.get(SolutionService);\r\n        this.idService = this.injector.get(IdService);\r\n        if (!this.ngZone) {          \r\n            this.ngZone = this.injector.get<NgZone>(NgZone, null);\r\n        }\r\n    }\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.currentLocale === this.localeIds['en']) {\r\n            this.isControlInline = false;\r\n        }\r\n        this.selectedFieldConditions = this.selectedFieldConditions || new Array<QueryCondition>();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n    ngAfterViewChecked(): void {\r\n        \r\n    }\r\n\r\n    hasSetMultiClass(currentItem: any):boolean{\r\n        if(currentItem.control.className&&currentItem.control.className.indexOf('farris-group-multi-label')>-1){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /* */\r\n    getStyle(currentItem: any): string {\r\n        const defaultCondtionStyle = 'col-12 col-md-6 col-xl-3 col-el-2';\r\n        // è®¾ç½®æ¾ç¤ºæ ç­¾å¨å¹¶ä¸æ¾ç¤ºäºæè¡\r\n        // if(this.showCompleteLabel && currentItem.control.className == 'farris-group-multi-label'){\r\n        //     return defaultCondtionStyle.concat(\" farris-group-multi-label\");\r\n        // }\r\n        let className = currentItem.control.className;\r\n        className = className ? className.replace('farris-group-multi-label','') : '';        \r\n        return className ? className : defaultCondtionStyle;\r\n    }\r\n\r\n    configDialogConfirm(event: Event) {\r\n        const configData = event as unknown as Array<string>;\r\n        const reConfigConditions = new Array<QueryCondition>();\r\n        for(const data of configData) {\r\n            const target = this.selectedFieldConditions.find(condition => condition.fieldCode == data);\r\n            if(target) {\r\n                reConfigConditions.push(target);\r\n            } else {\r\n                reConfigConditions.push(this.fieldConfigs.find(condition => condition.fieldCode == data));\r\n            }\r\n        }\r\n        for(const condition of this.selectedFieldConditions) {\r\n            if(!condition.visible) {\r\n                reConfigConditions.push(condition);\r\n            }\r\n        }\r\n        this.selectedFieldConditions = reConfigConditions;\r\n        this.fieldConditionsChange.emit(this.selectedFieldConditions);\r\n    }\r\n\r\n    openFieldConfigDialog() {\r\n        this.configDialog.inputSelectedFileds = this.selectedFieldConditions ? this.selectedFieldConditions : [];\r\n        this.configDialog.dialog.show();\r\n    }\r\n\r\n    resetSelectedConditionValues(exceptRequired = false): Array<QueryCondition> {\r\n        return this.selectedFieldConditions.map(fieldCondition => {\r\n            if(exceptRequired){\r\n                if(!fieldCondition.control.isRequired()){\r\n                    fieldCondition.value.clearValue();\r\n                }\r\n            }else{\r\n                fieldCondition.value.clearValue();\r\n            }\r\n            \r\n            return fieldCondition;\r\n        });\r\n    }\r\n\r\n    conditionChange() {\r\n        this.fieldConditionsChange.emit(this.selectedFieldConditions);\r\n        if(this.selectSolution && this.selectSolution.mode === '2') {\r\n            this.selectSolution.queryConditions = this.selectedFieldConditions\r\n        }\r\n    }\r\n\r\n    conditionChangeAdvanced(data) {\r\n        this.selectedFieldConditions = data\r\n        this.fieldConditionsChange.emit(this.selectedFieldConditions);\r\n        if(this.selectSolution && this.selectSolution.mode === '2') {\r\n            this.selectSolution.queryConditions = this.selectedFieldConditions\r\n        }\r\n    }\r\n    // å¼¹åºå¸®å©æ§ä»¶é¢æ¿åï¼æ´æ¹canClearRelatedFieldsï¼é¿åèµé»è®¤å¼åå¸®å©å¼ååæ¸ç©ºä¸¤ä¸ªç¹æ§çå²çª\r\n    clearFieldsChange(e: any) {\r\n        if(e && e['controlType'] == ControlType.SmartHelp && e['canClearRelatedFields']) {\r\n            this.canClearRelatedFields = true;\r\n        }\r\n    }\r\n\r\n    confirmLabelFormat(conditions: Array<QueryCondition>) {\r\n        if(this.isControlInline) {\r\n            this.labelFormat = 'farris-form-controls-inline';\r\n            let hasCustom = false;\r\n            if(conditions.length) {\r\n                // å¤éæ¡labelæ ç­¾ç®åå¨æ¡çå³ä¾§ï¼è¶åºå®½åº¦åä¸æ¹åºç°æ»å¨æ¡ï¼è®¡ç®æ ç­¾æå¤§é¿åº¦æ¶éå°å¶æé¤\r\n                let noCheckBoxConditions: Array<QueryCondition> = [];\r\n                conditions.forEach(condition => {\r\n                    if(condition.control.getControlType() != ControlType.BoolCheck) {\r\n                        noCheckBoxConditions.push(condition);\r\n                    }\r\n                    if(condition.control['className']&& condition.control['className']!= 'farris-group-multi-label') {\r\n                        hasCustom = true;\r\n                    }\r\n                });\r\n               \r\n                this.labelFormat += hasCustom ? ' condition-is-custom' : ' condition-with-fixed';              \r\n\r\n                let maxLength = 0;\r\n                if(noCheckBoxConditions.length) {\r\n                    noCheckBoxConditions.forEach(item => {\r\n                        maxLength = (item.fieldName.length > maxLength) ? (item.fieldName.length) : maxLength;\r\n                    });\r\n                }\r\n                //éè¦å®æ´æ¾ç¤ºæ§ä»¶æ ç­¾æ¶ï¼æ ¹æ®æ ç­¾æå¤§é¿åº¦ç¡®å®æ ç­¾æ æ¯è¡å¯æ¾ç¤ºçå­ç¬¦æ°\r\n                if(this.showCompleteLabel) {\r\n                    if(maxLength > 8) {\r\n                        //æ ç­¾è¶åº8ä¸ªå­ç¬¦åï¼è®¾ç½®æ¯è¡æå¤å¯æ¾ç¤º10ä¸ªå­ç¬¦\r\n                        this.labelFormat = this.labelFormat.concat(\" f-form-label-xl\");\r\n                    }\r\n                    else if((maxLength < 9) && (maxLength > 6)) {\r\n                        //æ ç­¾è¶åº6ä¸ªå­ç¬¦ãä¸è¶è¿8ä¸ªå­ç¬¦æ¶ï¼è®¾ç½®æ¯è¡æå¤å¯æ¾ç¤º8ä¸ªå­ç¬¦\r\n                        this.labelFormat = this.labelFormat.concat(\" f-form-label-lg\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(this.labelFormat){\r\n            return this.labelFormat + (this.isControlInline&&this.showCompleteLabel?' condition-with-complete':'');\r\n        }\r\n    }\r\n\r\n    buildSmartHelpKey(value: string) {\r\n        let prefix = '';\r\n        if (location.hash) {\r\n            const pathArr = location.hash.split('?');\r\n            prefix = pathArr ? pathArr[0] : '';\r\n        } else {\r\n            const pathArr  = location.pathname.split('/');\r\n            prefix = pathArr ? pathArr[pathArr.length - 1] : '';\r\n        }\r\n        return this.idService.encrypt(prefix + '/querysolution/' + value);\r\n    }\r\n}\r\n","import { Component, Input, OnInit, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { NumberRangeValue, NumberRangeValueConvertor } from '../../entity/conditionvalue/numberrangevaue';\r\n\r\n\r\n@Component({\r\n  selector: 'app-solution-numberrange',\r\n  templateUrl: './numberrange.component.html',\r\n})\r\n\r\nexport class NumberRangeComponent implements OnInit, OnChanges {\r\n  // numberRange: string;\r\n  beginValue: any;\r\n  endValue: any;\r\n  testId: string;\r\n  precision: number;\r\n  textAlign: string;\r\n  placeholder: string;\r\n  @Input() item: any;\r\n  canNull: boolean;\r\n  bigNumber: boolean;\r\n  min: number;\r\n  max: number;\r\n  beginPlaceHolder:string;\r\n  endPlaceHolder:string;\r\n\r\n  /**\r\n   * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n   */\r\n  @Input() changeFields: Array<string> = [];\r\n\r\n  @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n  constructor(private solutionService: SolutionService) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n      const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n      if(isChange){\r\n        this.constructMultiFieldNumberRange(this.item.value as NumberRangeValue);\r\n      }\r\n  }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.testId = this.solutionService.getGuid();\r\n    this.canNull = true;\r\n    this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n    this.beginPlaceHolder=this.item.beginPlaceHolder?this.item.beginPlaceHolder:this.placeholder;\r\n    this.endPlaceHolder=this.item.endPlaceHolder?this.item.endPlaceHolder:this.placeholder;\r\n    this.precision = this.item.control.precision;\r\n    this.textAlign = this.item.control.textAlign;\r\n    this.bigNumber = this.item.control.bigNumber ? this.item.control.bigNumber : false;\r\n    if(!this.bigNumber){\r\n      this.min = (this.item.control.min === undefined || this.item.control.min === null) ? -2147483648 : (this.item.control.min);\r\n      this.max = (this.item.control.max === undefined || this.item.control.max === null) ? 2147483647 : (this.item.control.max);\r\n    }\r\n    this.constructMultiFieldNumberRange(this.item.value as NumberRangeValue);\r\n  }\r\n\r\n  valueChange(data: any) {\r\n    if(typeof data !== 'string') {\r\n      return;\r\n    }\r\n    const dataArray = data.split(\"~\");\r\n    const start = dataArray[0] && dataArray[0].length > 0 ? dataArray[0] : null;\r\n    const end = dataArray[1] && dataArray[1].length > 0 ? dataArray[1] : null;\r\n    if(!this.bigNumber) {\r\n      this.item.value = new NumberRangeValue({startValue: start, endValue: end});\r\n    } else {\r\n      const numberRangeValue = new NumberRangeValue();\r\n      isNaN(parseFloat(start)) ? numberRangeValue.startValue = null : numberRangeValue.startValue = parseFloat(start);\r\n      isNaN(parseFloat(end)) ? numberRangeValue.endValue = null : numberRangeValue.endValue = parseFloat(end);\r\n      this.item.value = numberRangeValue;\r\n    }\r\n    this.conditionChange.emit();\r\n  }\r\n\r\n  // constructNumberRange(value: NumberRangeValue): string {\r\n  //   return \"a~b\".replace(/a/, value.startValue ? value.startValue.toString().trim() : \"\").replace(/b/, value.endValue ? value.endValue.toString().trim() : \"\");\r\n  // }\r\n\r\n  constructMultiFieldNumberRange(value: NumberRangeValue) {\r\n    // this.beginValue = value && value.startValue ? value.startValue.toString().trim() : '';\r\n    // this.endValue = value && value.endValue ? value.endValue.toString().trim() : '';\r\n    this.beginValue = value.startValue == null ? null : value.startValue;\r\n    this.endValue = value.endValue == null ? null : value.endValue;\r\n  }\r\n\r\n  // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n  //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n  // }\r\n\r\n  getConditionItemTitle(field: QueryCondition) {\r\n    return this.solutionService.getConditionItemTitle(field);\r\n  }\r\n\r\n  beginValueChange($event) {\r\n    this.beginValue = $event;\r\n  }\r\n\r\n  endValueChange($event) {\r\n    this.endValue = $event;\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, EventEmitter, Output } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { TextValue } from '../../entity/conditionvalue/textvalue';\r\nimport { NgModel } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-solution-input',\r\n    templateUrl: './input.component.html',\r\n})\r\n\r\nexport class InputComponent implements OnInit {\r\n\r\n    _hideLabel\r\n    @Input() hideLabel:boolean = false\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    _inputItem: QueryCondition;\r\n\r\n    placeholder: string;\r\n\r\n    maxLength = undefined;\r\n\r\n    @Input()\r\n    set item(textItem: any) {\r\n        this._inputItem = textItem;\r\n    }\r\n    get item(): any {\r\n        return this.constructTextItem(this._inputItem);\r\n    }\r\n    testId: string;\r\n    hasError = false;\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    constructTextItem(textItem: QueryCondition): QueryCondition {\r\n        const textValueObj = textItem.value as TextValue;\r\n        // textValueObj.value = textValueObj.value && textValueObj.value.trim();\r\n        textValueObj.value = textValueObj.value && textValueObj.value;\r\n        textItem.value = textValueObj;\r\n        return textItem;\r\n    }\r\n\r\n    constructor(private solutionService: SolutionService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.testId = this.solutionService.getGuid();\r\n        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n    }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onBlur() {\r\n        if(this.hasError){\r\n            return;\r\n        }\r\n        this.conditionChange.emit();\r\n    }\r\n    /**\r\n     * æ¯å¦æéè¯¯ä¿¡æ¯\r\n     */\r\n    hasErrorInfo(textControl: NgModel) {\r\n        if (textControl.invalid && (textControl.dirty || textControl.touched) && textControl.errors.maxlength) {\r\n            this.hasError=true;\r\n            return true;\r\n        }\r\n        this.hasError=false;\r\n        return false;\r\n    }\r\n}","import { Component, Input, OnInit, EventEmitter, Output, OnDestroy } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { InputGroupControl } from '../../entity/controltype/input-group/inputgroupcontrol';\r\nimport { InputGroupValue } from '../../entity/conditionvalue/inputgroupvalue';\r\n\r\n\r\n@Component({\r\n    selector: 'app-solution-inputgroup',\r\n    templateUrl: './inputgroup.component.html',\r\n})\r\n\r\nexport class InputGroupComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() hideLabel:boolean = false\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    _inputItem: QueryCondition;\r\n\r\n    @Input()\r\n    set item(inputGroupItem: any) {\r\n        this._inputItem = inputGroupItem;\r\n    }\r\n    get item(): any{\r\n        return this.constructInputGroupItem(this._inputItem);\r\n    }\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n    //ç»ä»¶id\r\n    testId: string;\r\n    //ä½¿ç¨æ¨¡å¼ï¼ææ¬textæèå¼¹çªopen-modal\r\n    usageMode: string;\r\n    //å¼¹çªå½ä»¤éè¦æ¥æ¶çåæ°\r\n    dialogOptions: any;\r\n    //å¼¹çªæ¨¡å¼ä¸ï¼ååè¡¨ä¸­åªä¸ªå­æ®µçå¼æ å°å°å½åå­æ®µ\r\n    textField: string;\r\n    //æ§ä»¶åæ¾ç¤ºææ¬æ¯å¦ä¸ºå¼¹çªè¿åçææ¬ï¼æå¨è¾å¥æèæå¨ååºä¿®æ¹æ¶ä¸ºfalse\r\n    isTextFromDialog: boolean = false;\r\n    //å¼¹çªè¿åçææ¬\r\n    textFormDialog: string;\r\n\r\n    constructInputGroupItem(inputGroupItem: QueryCondition): QueryCondition {\r\n        const inputGroupValueObj = inputGroupItem.value as InputGroupValue;\r\n        // inputGroupValueObj.textValue = inputGroupValueObj.textValue && inputGroupValueObj.textValue.trim();\r\n        inputGroupValueObj.textValue = inputGroupValueObj.textValue && inputGroupValueObj.textValue;\r\n        inputGroupItem.value = inputGroupValueObj;\r\n        return inputGroupItem;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        this.testId = this.solutionService.getGuid();\r\n        this.getInputGroupBindingInfo();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.item = null;\r\n    }\r\n\r\n    getInputGroupBindingInfo() {\r\n        const inputGroupControl = (this.item.control as InputGroupControl);\r\n        this.usageMode = inputGroupControl.usageMode;\r\n        if(this.usageMode == 'open-modal'||this.usageMode == 'open-remote-modal') {\r\n            this.dialogOptions = inputGroupControl.dialogOptions;\r\n            /*\r\n                example of dialogOptions = {\r\n                   modalId: \"1e011720-eb0f-4c9c-82b6-6844c89b2303\"\r\n                   mapFields: {hDepartment: \"Name\"}\r\n                   title: \"æµè¯æ é¢æ \"\r\n                   width: 800\r\n                   height: 600\r\n                }\r\n             */\r\n            if(this.dialogOptions.mapFields){\r\n                this.textField = JSON.stringify(this.dialogOptions.mapFields).split('\"')[1];\r\n            }\r\n        }\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n    \r\n    onClick(event: any){\r\n        if(this.usageMode == 'text'){\r\n            this.item.control.click();\r\n        }\r\n        else{\r\n            const options = this.dialogOptions;\r\n            options.handle = (selectedItem) => {\r\n                if(selectedItem && this.textField){\r\n                    this.item.value.value = selectedItem;\r\n                    this.item.value.textValue = this.item.value.getTextValue(this.textField);\r\n                    this.item.value.textField = this.textField;\r\n                    this.item.value.isInputText = false;\r\n\r\n                    this.isTextFromDialog = true;\r\n                    this.textFormDialog = this.item.value.textValue;\r\n                    this.onBlur();\r\n                }\r\n            }\r\n            this.item.control.click({event, options});\r\n        }\r\n    }\r\n\r\n    onBlur(){\r\n        if(this.usageMode == 'text') {\r\n            this.item.value.isInputText = true;\r\n        }\r\n        if(this.usageMode == 'open-modal'||this.usageMode == 'open-remote-modal') {\r\n            if(!this.isTextFromDialog) {\r\n                //console.log('å¼¹çªæ¨¡å¼ä¸æ§ä»¶åææ¬æ¯æå¨è¾å¥ç');\r\n                this.item.value.isInputText = true;\r\n            }\r\n            if(this.item.value.textValue != this.textFormDialog){\r\n                //console.log('éè¿å¼¹çªéæ©çå¼å·²è¢«æå¨ä¿®æ¹');\r\n                this.isTextFromDialog = false;\r\n                this.item.value.value = [];\r\n                this.item.value.textField = undefined;\r\n                this.item.value.isInputText = true;\r\n            }\r\n        }\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    clearData() {\r\n        (this.item.value as InputGroupValue).clearValue();\r\n        this.conditionChange.emit();\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, Output, EventEmitter, Injector, ViewChild, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { QuickSelectOption, SmartHelpContol } from '../../entity/controltype/smarthelp/smarthelpcontrol';\r\nimport { IControl } from '../../entity/controltype/icontrol';\r\nimport { SmartHelpValue } from '../../entity/conditionvalue/smarthelpvalue';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { LookupGridComponent } from '@farris/ui-lookup';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-solution-smarthelp',\r\n    templateUrl: './smarthelp.component.html',\r\n})\r\n\r\nexport class SolutionSmartHelpComponent implements OnInit, OnChanges {\r\n\r\n    @Input() hideLabel:boolean = false\r\n\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item: any;\r\n\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Input() instanceId: string;\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    @Output('helpMapping') mappingEmitter = new EventEmitter();\r\n\r\n    @Output('clearFieldsChange') clearFieldsChange = new EventEmitter();\r\n\r\n    @ViewChild('lookup') lookup: LookupGridComponent;\r\n\r\n    uri: string;\r\n    textField: string;\r\n    mapFields: any;\r\n    idField: any;\r\n    valueField: any;\r\n    textValue: any;\r\n    displayType: any;\r\n    context: any;\r\n    preEventCmd: any;\r\n    postEventCmd: any;\r\n    loadTreeDataType: string;\r\n    enableFullTree: boolean;\r\n    singleSelect: boolean;\r\n    expandLevel: number;\r\n    enableCascade: boolean;\r\n    cascadeStatus: \"enable\" | \"up\" | \"down\" | \"disable\";\r\n    testId: string;\r\n    placeholder: string;\r\n    nosearch: boolean;\r\n    displayFields: string;\r\n    displayTextSeparator: string;\r\n    editable: boolean;\r\n    clearFields: string;\r\n    // æ é¢\r\n    dialogTitle: string;\r\n    // å®½åº¦\r\n    dialogWidth: number;\r\n    // é«åº¦\r\n    dialogHeight: number;\r\n    /** æ¯é¡µè®°å½æ° */\r\n    pageSize: number = 20;\r\n    /** å¯ç¨åé¡µè®°å½æ°åè¡¨ */\r\n    pageList: Array<number> = [10, 20, 30, 50, 100];\r\n    // å¿«æ·éæ©éç½®\r\n    quickSelect: QuickSelectOption;\r\n    // å¯ç¨å¤å­æ®µæ¥è¯¢\r\n    enableMultiFieldSearch: boolean = false;\r\n\r\n    constructor(private solutionService: SolutionService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.getSmartHelpBindingInfo();\r\n        //this.testId = this.solutionService.getGuid();\r\n        this.testId = this.instanceId;\r\n        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n\r\n        this.lookup.textChanged.subscribe((v) => {\r\n            this.textChangedHandler(v);\r\n        })\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.getSmartHelpBindingInfo();\r\n        if (changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if (isChange) {\r\n                this.textValue = (this.item.value as SmartHelpValue).textValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    //ITEMï¼\r\n    //control: SmartHelpContol {uri: \"WuLiao.wOrgId\", textField: \"name\", valueField: \"code\", mapFields: {}, idField: \"id\"}\r\n    // fieldCode: \"wOrgId\"\r\n    // fieldName: \"æå±æºæ\"\r\n    // id: \"WuLiao.wOrgId\"\r\n    // value: SmartHelpValue {valueField: null, value: null}\r\n    // valueType: 0\r\n    getSmartHelpBindingInfo() {\r\n        const smartHelpControl = (this.item.control as SmartHelpContol);\r\n        this.uri = smartHelpControl.uri;\r\n        this.textField = smartHelpControl.textField;\r\n        this.idField = smartHelpControl.idField;\r\n        this.valueField = smartHelpControl.valueField;\r\n        this.displayType = smartHelpControl.displayType;\r\n        this.mapFields = smartHelpControl.mapFields;\r\n        this.context = smartHelpControl.context;\r\n        this.preEventCmd = smartHelpControl.preEventCmd;\r\n        this.postEventCmd = smartHelpControl.postEventCmd;\r\n        this.enableFullTree = smartHelpControl.enableFullTree;\r\n        this.loadTreeDataType = smartHelpControl.loadTreeDataType;\r\n        this.singleSelect = smartHelpControl.singleSelect === false ? false : true;\r\n        this.expandLevel = smartHelpControl.expandLevel;\r\n        this.enableCascade = smartHelpControl.enableCascade;\r\n        this.cascadeStatus = smartHelpControl.cascadeStatus ? smartHelpControl.cascadeStatus : 'enable';\r\n        // æ é¢\r\n        this.dialogTitle = smartHelpControl.dialogTitle?smartHelpControl.dialogTitle:'';\r\n        // å®½åº¦\r\n        this.dialogWidth = smartHelpControl.panelWidth;\r\n        // é«åº¦\r\n        this.dialogHeight = smartHelpControl.panelHeight;\r\n        const smartHelpValue = (this.item.value as SmartHelpValue);\r\n        if (smartHelpValue.textValue == 'help-text-value-null') {//æ§æ°æ®å¼å®¹\r\n            this.textValue = smartHelpValue.getTextValue(this.textField);\r\n        } else {\r\n            this.textValue = smartHelpValue.textValue;\r\n        }\r\n        this.nosearch = smartHelpControl.nosearch;//é»è®¤false\r\n        this.displayFields = smartHelpControl.displayFields ? smartHelpControl.displayFields : '';\r\n        this.displayTextSeparator = smartHelpControl.displayTextSeparator ? smartHelpControl.displayTextSeparator : '_';\r\n        this.editable = smartHelpControl.editable;\r\n        this.clearFields = smartHelpControl.clearFields;\r\n        if (smartHelpControl.hasOwnProperty('pageSize') && smartHelpControl.pageSize) {\r\n            this.pageSize = smartHelpControl.pageSize\r\n        }\r\n        if (smartHelpControl.hasOwnProperty('pageList') && smartHelpControl.pageList) {\r\n            this.pageList = smartHelpControl.pageList.split(\",\").map(item => { return parseInt(item); })\r\n        }\r\n        if (smartHelpControl.hasOwnProperty('quickSelect') && smartHelpControl.quickSelect) {\r\n            this.quickSelect = smartHelpControl.quickSelect;\r\n        }\r\n        if (smartHelpControl.hasOwnProperty('enableMultiFieldSearch') && smartHelpControl.enableMultiFieldSearch) {\r\n            this.enableMultiFieldSearch = smartHelpControl.enableMultiFieldSearch;\r\n        }\r\n    }\r\n\r\n    onBeforeOpen = () => {\r\n        const t = this.item.value as SmartHelpValue;\r\n        if (t && t.value) {\r\n            const ids = t.value.map(n => n[this.idField || 'id']).join(',');\r\n            this.lookup.displayValue = ids;\r\n        }\r\n        this.clearFieldsChange.emit({\r\n            controlType: (this.item.control as SmartHelpContol).getControlType(),\r\n            canClearRelatedFields: true\r\n        });\r\n        return of(true);\r\n    }\r\n\r\n    clearData(data: any) {\r\n        (this.item.value as SmartHelpValue).clearValue();\r\n        if (this.item.control.clear) {\r\n            this.item.control.clear();\r\n        }\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    /**\r\n     * selectedItem\r\n     * code: \"code02\"\r\n        id: \"id02\"\r\n        name: \"æºæ02\"\r\n        version: \"2019-10-21T00:00:00\"\r\n    */\r\n    textChangedHandler(data: string) {//æå·¥è¾å¥æ¶è§¦å\r\n        if (this.item && this.item.value) {\r\n            const helpValue = (this.item.value as SmartHelpValue);\r\n            helpValue.value = [data];\r\n            helpValue.textValue = data;\r\n            helpValue.isInputText = true;\r\n            // this.textValue = helpValue.textValue;\r\n            this.conditionChange.emit();\r\n        }\r\n    }\r\n\r\n    selectedDataHandler(selectedItem: any) {//éæ©æ¶è§¦å\r\n        const helpValue = (this.item.value as SmartHelpValue);\r\n        helpValue.value = this.singleSelect ? [selectedItem] : selectedItem;//åéè¿åå¯¹è±¡ï¼å¤éè¿åæ°ç»\r\n        helpValue.valueField = this.valueField;\r\n        helpValue.textValue = this.textValue;\r\n        helpValue.isInputText = false;\r\n        this.conditionChange.emit();\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, EventEmitter, Output, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { DropDownListControl } from '../../entity/controltype/dropdownlist/dropdownlistcontrol';\r\nimport { EnumType } from '../../entity/controltype/dropdownlist/enumtype';\r\nimport { EnumIntegerValue } from '../../entity/controltype/dropdownlist/integerenumvalue';\r\nimport { EnumStringValue } from '../../entity/controltype/dropdownlist/stringenumvalue';\r\nimport { EnumBoolValue } from '../../entity/controltype/dropdownlist/boolenumvalue';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { IValue } from '../../entity/conditionvalue/ivalue';\r\nimport { DropDownListValue } from '../../entity/conditionvalue/dropdownlistvalue';\r\n\r\n@Component({\r\n    selector: 'app-solution-dropdownlist',\r\n    templateUrl: './dropdownlist.component.html',\r\n})\r\n\r\nexport class DropDownListComponent implements OnInit, OnChanges {\r\n\r\n    @Input() hideLabel:boolean = false\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item: any;\r\n\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    //ä¸æåè¡¨æ°æ®æº\r\n    dropDownListDataSource: Array<any> = new Array<any>();\r\n    //æå¡å¨ç«¯APIå°å\r\n    uri: string;\r\n    //é¢æ¿æ¾ç¤ºåäºä»¶\r\n    beforeShow: any;\r\n    //é¢æ¿éèåäºä»¶\r\n    beforeHide: any;\r\n    //æä¸¾å¼å­æ®µ\r\n    idField: string;\r\n    //æä¸¾åç§°å­æ®µ\r\n    textField: string;\r\n    //ä¸æåè¡¨æ§ä»¶åæ¾ç¤ºææ¬\r\n    selectedItemId: any = '';\r\n    //ç»ä»¶id\r\n    testId: string;\r\n    //æ§ç»æä¸­placeholderå±æ§å¨item.controlå\r\n    placeholder: string;\r\n    //æ¯å¦åè®¸ç¼è¾ï¼å½éè¿æå¡å¨ç«¯apiåæ°æ¶ä¸ºtrue\r\n    editable: boolean = false;\r\n\r\n    constructor(private solutionService: SolutionService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.getDataSource();\r\n        const initialValue = this.item.value as DropDownListValue;\r\n        initialValue.key && (this.selectedItemId = initialValue.key);\r\n        this.testId = this.solutionService.getGuid();\r\n        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n        this.beforeShow = (this.item.control as DropDownListControl).beforeShow;\r\n        this.beforeHide = (this.item.control as DropDownListControl).beforeHide;\r\n        this.idField = (this.item.control as DropDownListControl).idField ? (this.item.control as DropDownListControl).idField : 'value';\r\n        this.textField = (this.item.control as DropDownListControl).textField ? (this.item.control as DropDownListControl).textField : 'name';\r\n        if(this.uri) {\r\n            this.selectedItemId = (initialValue.value || []).map(n => n[this.textField]).join(',');\r\n            this.editable = true;\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.getDataSource();\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.selectedItemId = (this.item.value as DropDownListValue).key;\r\n            }\r\n        }\r\n    }\r\n\r\n    getDataSource() {\r\n        this.dropDownListDataSource = (this.item.control as DropDownListControl).enumValues;\r\n        this.uri = (this.item.control as DropDownListControl).uri;\r\n    }\r\n\r\n    selectChange(selected: any) {\r\n        const selectedValue = selected['selections'].map((selection: any) => {\r\n            return {\r\n                value: this.uri ? selection[this.textField] : selection[this.idField],\r\n                name: selection[this.textField]\r\n            }\r\n        });\r\n        this.item.value = new DropDownListValue({\r\n            value : selectedValue,\r\n            key :  selected['value']\r\n        });\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    onClear(event: any) {\r\n        this.item.value = new DropDownListValue();\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Component, Input, OnInit, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { SingleNumberValue } from '../../entity/conditionvalue/single-number-value';\r\n\r\n@Component({\r\n    selector: 'app-solution-single-number',\r\n    templateUrl: './single-number.component.html',\r\n})\r\n\r\nexport class SingleNumberComponent implements OnInit, OnChanges {\r\n\r\n    @Input() hideLabel:boolean = false\r\n\r\n\r\n    number: number;\r\n    placeholder: string;\r\n    precision: number;\r\n    textAlign: string;\r\n    @Input() item: any;\r\n    testId: string;\r\n    canNull: boolean;\r\n    bigNumber: boolean;\r\n    min: number;\r\n    max: number;\r\n\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.number = this.item.value.getOriginalValue();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.number = this.item.value.getOriginalValue();\r\n        this.testId = this.solutionService.getGuid();\r\n        this.canNull = true;\r\n        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n        this.precision = this.item.control.precision;\r\n        this.textAlign = this.item.control.textAlign;\r\n        this.bigNumber = this.item.control.bigNumber ? this.item.control.bigNumber : false;\r\n        if(!this.bigNumber){\r\n            this.min = (this.item.control.min === undefined || this.item.control.min === null) ? -2147483648 : (this.item.control.min);\r\n            this.max = (this.item.control.max === undefined || this.item.control.max === null) ? 2147483647 : (this.item.control.max);\r\n        }\r\n    }\r\n\r\n    valueChange(data: any){\r\n        const numberValue = new SingleNumberValue();\r\n        isNaN(parseFloat(data)) ? numberValue.numValue = null : numberValue.numValue = data;\r\n        this.item.value = numberValue;\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Component, Input, OnInit, Injector, OnChanges, SimpleChanges, EventEmitter, Output} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { CheckBoxValue } from '../../entity/conditionvalue/checkbox-value';\r\nimport { CheckBoxControl } from '../../entity/controltype/checkbox/checkbox-control';\r\n\r\n\r\n@Component({\r\n    selector: 'app-solution-checkbox',\r\n    templateUrl: './checkbox.component.html',\r\n})\r\n\r\nexport class CheckBoxComponent implements OnInit, OnChanges {\r\n   \r\n\r\n    @Input() hideLabel:boolean = false\r\n    _item: QueryCondition;\r\n    checkValue: any[];\r\n    controlData: CheckBoxControl;\r\n    @Input() \r\n    set item(nr: QueryCondition){\r\n        this._item = nr;\r\n    }\r\n\r\n    get item(){\r\n        return this._item;\r\n    }\r\n    testId:string;\r\n\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    solutionService: SolutionService;\r\n\r\n    constructor(private injector: Injector){\r\n        this.solutionService = this.injector.get(SolutionService);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.checkValue = (this.item.value as CheckBoxValue).getOriginalValue();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.checkValue = this.item.value.getOriginalValue();\r\n        this.controlData = this.item.control as CheckBoxControl;\r\n        this.testId = this.solutionService.getGuid();\r\n    }\r\n\r\n    valueChanged(event: any[]){\r\n        //éä¸­æ¶è¿å[true], ä»éä¸­åä¸ºæªéä¸­æ¶è¿å[]\r\n        if(event.length){\r\n            this._item.value.setOriginalValue(event);\r\n        }else{\r\n            this._item.value.setOriginalValue([false]);\r\n        }\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, Injector, EventEmitter, Output, HostBinding, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { RadioControl } from '../../entity/controltype/radio/radio-control';\r\nimport { RadioValue } from '../../entity/conditionvalue/radio-value';\r\n\r\n@Component({\r\n    selector: 'app-solution-radio',\r\n    templateUrl: './radio.component.html',\r\n})\r\n\r\nexport class RadioComponent implements OnInit, OnChanges {\r\n\r\n    @Input() hideLabel:boolean = false\r\n\r\n\r\n    _item: QueryCondition;\r\n    solutionService: SolutionService;\r\n    radioControl: RadioControl;\r\n    radioValue: any;\r\n    testId: string;\r\n    showLabel: boolean;\r\n\r\n    @Input()\r\n    set item(nr: QueryCondition){\r\n        this._item = nr;\r\n    }\r\n    get item(){\r\n        return this._item;\r\n    }\r\n    \r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    @HostBinding('class.f-solution-radio-group-wrapper') cls = true;\r\n\r\n    constructor(private injector: Injector) {\r\n       this.solutionService = this.injector.get(SolutionService);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.radioValue = (this.item.value as RadioValue).getOriginalValue();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n       this.radioControl = this.item.control as RadioControl;\r\n       this.radioValue = (this.item.value as RadioValue).getOriginalValue();\r\n       this.testId = this.solutionService.getGuid();\r\n       this.showLabel = this.radioControl.showLabel;\r\n    }\r\n\r\n    valueChanged(event: any){\r\n        this._item.value.setOriginalValue(event);\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, Injector, EventEmitter, Output, SimpleChanges, OnDestroy } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { ShowType } from '@farris/ui-datepicker';\r\nimport { Observable, of, Subject, Subscription } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { QueryConditionComponent } from '../../querycondition.component';\r\nimport { DateChangedResult } from './datepicker-options';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n@Component({\r\n  selector: 'app-solution-datepicker',\r\n  templateUrl: './datepicker.component.html',\r\n})\r\nexport class DatePickerComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  @Input() hideLabel:boolean = false\r\n  // è¿æ»¤æ¡ä»¶\r\n  @Input() item: any;\r\n  // \r\n  @Input() controlType: number;\r\n\r\n  /**\r\n   * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n   */\r\n  @Input() changeFields: Array<string> = [];\r\n\r\n  @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n  solutionService: SolutionService;\r\n  messageService: MessagerService;\r\n  dateRange: boolean; // trueåºé´ falseå\r\n  showTime: boolean; // trueæ¾ç¤ºæ¶é´ falseä¸æ¾ç¤º\r\n  showType: number = ShowType.all; // æ¾ç¤ºç±»åï¼é»è®¤æ¾ç¤ºå¨é¨1ï¼ä¸æ¾ç¤ºæ¥æï¼ç¨äºéæ©å¹´ææ¨¡å¼2ï¼ä¸æ¾ç¤ºæ¥æåæä»½ï¼ç¨äºéæ©å¹´æ¨¡å¼3ï¼ç¨äºå¨éæ©4ã\r\n  maxDate: string | Date | null = '';\r\n  minDate: string | Date | null = '';\r\n  disableDates: { year: number, month: number, day: number }[];\r\n  placeholder: string;\r\n  dateFormat: string; // æ¾ç¤ºå¼æ¥ææ ¼å¼å\r\n  returnFormat: string; // è¿åå¼æ¥ææ ¼å¼å\r\n  returnType: string; // è¿åå¼ç±»åï¼è¿åå¼ç±»åé»è®¤æåµä¸æ¯åè¾å¥å¼ç±»åç¸åï¼ä½æ¯å¦æè¾å¥å¼ä¸ºnullç­éæ³å¼ï¼é»è®¤ä¸ºStringï¼å¦ææ³æ¹ä¸ºDateï¼å®ä¹è¯¥å­æ®µã\r\n  disabled: boolean;\r\n  readonly: boolean;\r\n  editable: boolean = false;\r\n  dateRangeDatesDelimiter: string = '~';\r\n  bindValue: string;\r\n  beginValue: any;\r\n  endValue: any;\r\n  testId: string;\r\n  beginPlaceHolder:string;\r\n  endPlaceHolder:string;\r\n  destroy$: Subject<any>;\r\n  dateChangedCmd: (date: any) => Observable<DateChangedResult>;\r\n  dateChangedCmdSubscription: Subscription;\r\n  enableDynamic: boolean = false; //æ¯å¦æ¯æå¨ææ¥æï¼ä»ésingleDateæåµ\r\n  //åºé´ç±»åæ¶æ¯å¦æ¯æéæ©åä¸åºé´\r\n  enableSplit: boolean = false;\r\n  constructor(private injector: Injector) {\r\n    this.solutionService = this.injector.get(SolutionService);\r\n    this.messageService = this.injector.get(MessagerService);\r\n    const queryconditionComponent = this.injector.get(QueryConditionComponent, null);\r\n    if(queryconditionComponent) {\r\n      this.destroy$ = queryconditionComponent.destroy$;\r\n    } else {\r\n      this.destroy$ = new Subject<any>();\r\n    }\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n      const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n      if (isChange) {\r\n        if (this.dateRange) {\r\n          this.beginValue = this.item.value && this.item.value.startTime ? this.item.value.startTime.toString().trim() : '';\r\n          this.endValue = this.item.value && this.item.value.endTime ? this.item.value.endTime.toString().trim() : '';\r\n          this.bindValue = this.item.value.getOriginalValue();\r\n        } else {\r\n          this.bindValue = this.item.value.getOriginalValue();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.testId = this.solutionService.getGuid();\r\n    // const controlType = this.item.control.getControlType();\r\n    switch (this.controlType) {\r\n      case ControlType.DateRange:\r\n        this.returnFormat = this.item.control.returnFormat ? this.item.control.returnFormat : 'yyyy-MM-dd';\r\n        this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd';\r\n        this.dateRange = true;\r\n        break;\r\n      case ControlType.SingleDate:\r\n        this.returnFormat = this.item.control.returnFormat ? this.item.control.returnFormat : 'yyyy-MM-dd';\r\n        this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd';\r\n        this.dateRange = false;\r\n        this.enableDynamic = this.item.control.isDynamicDate ? this.item.control.isDynamicDate : false;\r\n        break;\r\n      case ControlType.SingleYear:\r\n        this.returnFormat = this.item.control.returnFormat ? this.item.control.returnFormat : 'yyyy';\r\n        this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy';\r\n        this.showType = ShowType.noDateAndMonth;\r\n        this.dateRange = false;\r\n        break;\r\n      case ControlType.DateTimeRange:\r\n        this.returnFormat = this.item.control.returnFormat ? this.item.control.returnFormat : 'yyyy-MM-dd HH:mm:ss';\r\n        if(this.item.control.enableCustomFormat){\r\n          // ä½¿ç¨èªå®ä¹æ ¼å¼\r\n          this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd HH:mm:ss';\r\n        }else{\r\n           // æªå¯ç¨èªå®ä¹æ ¼å¼\r\n           this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd';\r\n           this.dateFormat = this.dateFormat + ' HH:mm:ss';\r\n        }\r\n        this.showTime = true;\r\n        this.dateRange = true;\r\n        break;\r\n      case ControlType.SingleMonth:\r\n        this.returnFormat = this.item.control.returnFormat ? this.item.control.returnFormat : 'yyyy-MM';\r\n        this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM';\r\n        this.showType = ShowType.noDate;\r\n        this.dateRange = false;\r\n        break;\r\n      case ControlType.MonthRange:\r\n        this.returnFormat = this.item.control.returnFormat ? this.item.control.returnFormat : 'yyyy-MM';\r\n        this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM';\r\n        this.showType = ShowType.noDate;\r\n        this.dateRange = true;\r\n        break;\r\n      case ControlType.SingleDateTime:\r\n        this.returnFormat = this.item.control.returnFormat ? this.item.control.returnFormat : 'yyyy-MM-dd HH:mm:ss';\r\n        if(this.item.control.enableCustomFormat){\r\n          // ä½¿ç¨èªå®ä¹æ ¼å¼\r\n          this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd HH:mm:ss';\r\n        }else{\r\n           // æªå¯ç¨èªå®ä¹æ ¼å¼\r\n           this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd';\r\n           this.dateFormat = this.dateFormat + ' HH:mm:ss';\r\n        }\r\n        this.showTime = true;\r\n        this.dateRange = false;\r\n        break;\r\n    }\r\n    this.enableSplit = this.item.control.enableSplit || false\r\n    // æ´æ°æ¡ä»¶\r\n    this.updateParamsByCondition();\r\n    this.placeholder = this.item.placeHolder ? this.item.placeHolder : this.item.control.placeholder;\r\n    if (this.dateRange) {\r\n      this.beginValue = this.item.value && this.item.value.startTime ? this.item.value.startTime.toString().trim() : '';\r\n      this.endValue = this.item.value && this.item.value.endTime ? this.item.value.endTime.toString().trim() : '';\r\n      this.beginPlaceHolder = this.item.beginPlaceHolder ? this.item.beginPlaceHolder : this.placeholder;\r\n      this.endPlaceHolder = this.item.endPlaceHolder ? this.item.endPlaceHolder : this.placeholder;\r\n      this.bindValue = this.item.value.getOriginalValue();\r\n    } else {\r\n      this.bindValue = this.item.value.getOriginalValue();\r\n    }\r\n    \r\n    if (this.item.control.weekSelect && this.controlType == ControlType.DateRange) {\r\n      this.showType = ShowType.selectWeek;\r\n    }\r\n\r\n    this.dateChangedCmd = this.item.control.dateChangedCmd;\r\n    if(!this.dateChangedCmd) {\r\n      this.dateChangedCmd = () => of({ closeDateSelect: true });\r\n    }\r\n\r\n    // \r\n    this.solutionService.getControlConfigState().pipe(takeUntil(this.destroy$)).subscribe((simpleConditions) => {\r\n      //ç®åæ¡ä»¶\r\n      let findSimpleCondition = simpleConditions.find(item => item['fieldCode'] == this.item['fieldCode']);\r\n      if (findSimpleCondition) {\r\n        this.updateParamsByCondition(findSimpleCondition);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if(this.dateChangedCmdSubscription) {\r\n      this.dateChangedCmdSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private updateParamsByCondition(condition = null) {\r\n    let conditionControl = null;\r\n    conditionControl = condition ? condition.control : this.item.control;\r\n    switch (this.controlType) {\r\n      case ControlType.SingleYear:\r\n        this.maxDate = conditionControl.hasOwnProperty('maxDate') ? conditionControl['maxDate'] : this.maxDate;\r\n        this.minDate = conditionControl.hasOwnProperty('minDate') ? conditionControl['minDate'] : this.minDate;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  onDateChange(event: any) {\r\n    if(event.returnFormatted === this.item.value.getOriginalValue()) {\r\n      return\r\n    }\r\n    this.item.value.setOriginalValue({\r\n      formatted: event.returnFormatted,\r\n      delimiter: this.dateRangeDatesDelimiter\r\n    });\r\n    //this.conditionChange.emit();\r\n    this.runDateChangedEvent(this.item.value.getOriginalValue());\r\n  }\r\n\r\n  onSpiltDateChange(event: any, type:'start'|'end') {\r\n    let originValue = this.item.value.getOriginalValue()\r\n    let _start = '', _end = '', _formatted = ''\r\n    if(originValue) {\r\n      let _value = originValue.split(this.dateRangeDatesDelimiter)\r\n      _value[0] && (_start = _value[0])\r\n      _value[1] && (_end = _value[1])\r\n    }\r\n    if(type === 'start') {\r\n\r\n      _formatted =  event.returnFormatted + this.dateRangeDatesDelimiter + _end\r\n    } else {\r\n      _formatted = _start + this.dateRangeDatesDelimiter + event.returnFormatted\r\n    }\r\n    if(event.returnFormatted === this.item.value.getOriginalValue()) {\r\n      return\r\n    }\r\n    this.item.value.setOriginalValue({\r\n      formatted: _formatted,\r\n      delimiter: this.dateRangeDatesDelimiter,\r\n    });\r\n    //this.conditionChange.emit();\r\n    this.runDateChangedEvent(this.item.value.getOriginalValue());\r\n  }\r\n  onDynamicValueChange(event: any) {\r\n    this.item.value.setOriginalValue({\r\n      formatted: event\r\n    });\r\n    this.runDateChangedEvent(this.item.value.getOriginalValue());\r\n  }\r\n\r\n  onDynamicViewChanged(event) {\r\n\r\n    this.item.value.setOriginalValue(event.showDynamicView ? {\r\n      formatted: event.dynamicValue\r\n    } : {\r\n      formatted: event.singleValue,\r\n      delimiter: this.dateRangeDatesDelimiter\r\n    });\r\n    this.runDateChangedEvent(this.item.value.getOriginalValue());\r\n   \r\n  }\r\n\r\n  getConditionItemTitle(field: QueryCondition) {\r\n    return this.solutionService.getConditionItemTitle(field);\r\n  }\r\n\r\n  beginValueChange($event) {\r\n   // this.beginValue = $event;\r\n  }\r\n\r\n  endValueChange($event) {\r\n   // this.endValue = $event;\r\n  }\r\n\r\n  runDateChangedEvent(date: any) {\r\n    if(this.dateChangedCmd) {\r\n      this.dateChangedCmdSubscription = this.dateChangedCmd(date).subscribe((v: any) => {\r\n        if(typeof v === \"boolean\") {\r\n          if(v) {\r\n            this.conditionChange.emit();\r\n          }\r\n        } else if(typeof v === \"object\" && v.closeDateSelect !== undefined && !v.closeDateSelect) {\r\n          if(v.message) {\r\n            this.messageService.warning(v.message);\r\n          } else {\r\n            this.conditionChange.emit();\r\n          }\r\n        } else {\r\n          this.conditionChange.emit();\r\n        }\r\n      });\r\n    } else {\r\n      this.conditionChange.emit();\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, Output, EventEmitter, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ComboLookUpControl } from '../../entity/controltype/combolookup/combolookup-control';\r\nimport { ComboLookUpValue } from '../../entity/conditionvalue/combolookup-value';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-solution-combolookup',\r\n    templateUrl: './combolookup.component.html',\r\n})\r\n\r\nexport class ComboLookUpComponent implements OnInit,OnChanges{\r\n   \r\n\r\n    @Input() hideLabel:boolean = false\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    uri: string;\r\n    idField: any;\r\n    valueField: any;\r\n    textField: string;\r\n    textValue: any;\r\n    mapFields: any;\r\n    displayType: any;\r\n    multiSelect: boolean;\r\n    preEventCmd: any;\r\n    postEventCmd: any;\r\n    enableFullTree: boolean;\r\n    testId: string;\r\n    placeholder: string;\r\n    autoWidth: boolean;\r\n    panelWidth: number;\r\n    panelHeight: number;\r\n    selectedValues = \"\";\r\n    loadTreeDataType: string;\r\n    context: any;\r\n\r\n    constructor(private solutionService: SolutionService){ }\r\n\r\n    ngOnInit(): void {\r\n        this.getComboLookUpBindingInfo();\r\n        this.testId = this.solutionService.getGuid();\r\n        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n        this.autoWidth = false;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.getComboLookUpBindingInfo();\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.textValue = (this.item.value as ComboLookUpValue).textValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    valueChangeHandler(data: any){\r\n        const helpValue = (this.item.value as ComboLookUpValue);\r\n        helpValue.value = data.selections;\r\n        helpValue.valueField = this.valueField;\r\n        helpValue.textValue = helpValue.getTextValue(this.textField);\r\n        this.textValue = helpValue.textValue;\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    getComboLookUpBindingInfo(){\r\n        const comboLookUpControl = (this.item.control as ComboLookUpControl);\r\n        this.uri = comboLookUpControl.uri;\r\n        this.idField = comboLookUpControl.idField;\r\n        this.valueField = comboLookUpControl.valueField;\r\n        this.textField = comboLookUpControl.textField;\r\n        this.mapFields = comboLookUpControl.mapFields;\r\n        this.displayType = comboLookUpControl.displayType;\r\n        this.preEventCmd = comboLookUpControl.preEventCmd;\r\n        this.postEventCmd = comboLookUpControl.postEventCmd;\r\n        this.enableFullTree = comboLookUpControl.enableFullTree;\r\n        this.multiSelect = comboLookUpControl.singleSelect === true ? false : true;\r\n        this.panelWidth = comboLookUpControl.panelWidth ? comboLookUpControl.panelWidth : 300;\r\n        this.panelHeight = comboLookUpControl.panelHeight ? comboLookUpControl.panelHeight : 300;\r\n        this.loadTreeDataType = comboLookUpControl.loadTreeDataType;\r\n        this.context = comboLookUpControl.context;\r\n        const comboLookUpValue = (this.item.value as ComboLookUpValue);\r\n        if(comboLookUpValue.textValue == 'help-text-value-null'){//æ§æ°æ®å¼å®¹\r\n            this.textValue = comboLookUpValue.getTextValue(this.textField);\r\n        }else{\r\n            this.textValue = comboLookUpValue.textValue;\r\n        }\r\n\r\n        if (comboLookUpValue && comboLookUpValue.value) {\r\n            this.selectedValues = (comboLookUpValue.value || []).map(n => n[this.idField]).join(',');\r\n        }\r\n    }\r\n\r\n    clearData(data: any){\r\n        (this.item.value as ComboLookUpValue).clearValue();\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Directive, Input, OnInit, Optional, Self, Injector } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { QueryConditionComponent } from '../querycondition.component';\r\n\r\n@Directive({\r\n    selector: '[clear-fields]'\r\n})\r\nexport class ClearFieldsDirective implements OnInit { \r\n    @Input('clear-fields') clearFields = '';\r\n   \r\n    constructor(@Optional() @Self() private ngCtrl: NgControl, @Optional() private qcc: QueryConditionComponent, private inject: Injector) {} \r\n\r\n    ngOnInit() {\r\n        //å¼¹åºå¸®å©ç»ä»¶æå®è°ç¨äºç¶éä»¶QueryConditionComponentï¼åç¬ä½¿ç¨æ¶æ ç¶ç»ä»¶\r\n        if(!this.qcc) return\r\n        if(this.clearFields && this.ngCtrl) {\r\n            this.ngCtrl.valueChanges.subscribe( (v) => {\r\n                if(this.qcc.canClearRelatedFields) {\r\n                    this.qcc.fieldCodeOfClearFields = [];\r\n                    this.clearFields.split(',').forEach(n => {\r\n                        const visibleConditions = this.qcc.selectedFieldConditions.filter(condition => {return !!condition.visible});  \r\n                        const conditionItem = visibleConditions.find(c => c.fieldCode === n);\r\n                        if (conditionItem) {\r\n                            this.qcc.fieldCodeOfClearFields.push(n);\r\n                            conditionItem.value.clearValue();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","import { Directive, Input, OnInit, Injector, ElementRef, NgZone } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[label-text-multi]'\r\n})\r\nexport class LabelTextMultiDirective implements OnInit {\r\n    private multiCls = 'farris-group-multi-label';\r\n    private _enableMulti = false;\r\n    @Input('label-text-multi')\r\n    set enableMulti(value: boolean) {\r\n        this._enableMulti = value;\r\n        this.judgeMulti();\r\n    }\r\n    get enableMulti() {\r\n        return this._enableMulti\r\n    }\r\n    // è·ångZone\r\n    private ngZone = null;\r\n    constructor(private el: ElementRef, private injector: Injector) {\r\n        if (!this.ngZone) {\r\n            this.ngZone = this.injector.get<NgZone>(NgZone, null);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n    judgeMulti() {\r\n        if (this._enableMulti) {\r\n            this.ngZone.runOutsideAngular(() => {\r\n\r\n                setTimeout(() => {\r\n                    let textEl = this.el.nativeElement.querySelector('.farris-label-text');\r\n                    if (!textEl) {\r\n                        return;\r\n                    }\r\n                    // è¶åº\r\n                    if (textEl.clientWidth < textEl.scrollWidth) {\r\n                        this.el.nativeElement.className = this.el.nativeElement.className + ' ' + this.multiCls;\r\n                    } else {\r\n                        this.el.nativeElement.className = this.el.nativeElement.className.replace(this.multiCls, '');\r\n                    }\r\n                }, 20);\r\n            });\r\n\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/QueryCondition'\r\nimport { Subject } from 'rxjs';\r\nimport { QueryconditionAdvancedData } from '../type/type'\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n@Injectable()\r\nexport class StateService {\r\n\r\n  fieldConfig: Array<QueryCondition> = []\r\n  fieldConfig$ = new Subject()\r\n\r\n  queryconditionData: QueryconditionAdvancedData\r\n  queryconditionData$ = new Subject()\r\n\r\n  //ç¶ç»ä»¶çselectedFieldConditionsï¼ä¾æ¥è¯¢ä½¿ç¨\r\n  queryconditionListData: Array<QueryCondition>\r\n  queryconditionListData$ = new Subject()\r\n\r\n\r\n  checkedList = {}\r\n  checkedList$ = new Subject()\r\n  constructor(private notifySer: NotifyService, private localeService: LocaleService) {\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * éç½®ç­éæ¡ä»¶\r\n   */\r\n  reset() {\r\n    this.queryconditionData = { relation: 1, items: [], children: [], path: [1], groupid: 1 }\r\n    this.queryconditionData$.next(this.queryconditionData)\r\n    this.updateQueryConditionListData()\r\n\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param data \r\n   * @param type \r\n   * @param isEmit é»è®¤è¦åéemitï¼çæåç»è§¦åæ¶ä¸éè¦emitï¼å ä¸ºçæåç»æ¹æ³æ¬èº«ä¼è§¦å\r\n   */\r\n  changeQueryconditionData(data, type, isEmit = true) {\r\n    const { item, path, addPositionItem, deleteItems } = data\r\n    let target = this.queryconditionData\r\n    path.forEach(pathVal => {\r\n      //groupid = 1çæ¶åæªæå¤å±\r\n      if (pathVal !== 1) {\r\n        target = target.children.find(targetVal => targetVal.groupid === pathVal)\r\n      }\r\n\r\n    })\r\n    switch (type) {\r\n      case 'add':\r\n        item.conditionid = this.getMaxConditionid() + 1\r\n        item.compareType = 0\r\n\r\n        if (addPositionItem) {\r\n          let position = target.items.findIndex(val => val.conditionid === addPositionItem.conditionid)\r\n          position > -1 ? target.items.splice(position, 0, item) : target.items.push(item)\r\n        } else {\r\n          target.items.push(item)\r\n        }\r\n        this.clearCheckedList()\r\n\r\n        break;\r\n      case 'delete-item':\r\n        //å é¤åä¸ªæ¡ä»¶ï¼æ­£å¸¸å é¤æ¶ä½¿ç¨\r\n        if (deleteItems) {\r\n          deleteItems.forEach(val => {\r\n            let deleteIndex = target.items.findIndex(itemsVal => itemsVal.conditionid === val.conditionid)\r\n            target.items.splice(deleteIndex, 1)\r\n          })\r\n        }\r\n        this.clearCheckedList()\r\n        //å é¤æ¶ä¼åä¸ç»æ\r\n        this.treeshake(this.queryconditionData)\r\n\r\n        break;\r\n      case 'delete-items':\r\n        //å é¤å¤ä¸ªæ¡ä»¶ï¼çäº§åç»æ¶ä½¿ç¨\r\n        if (deleteItems) {\r\n          deleteItems.forEach(val => {\r\n            let deleteIndex = target.items.findIndex(itemsVal => itemsVal.conditionid === val.conditionid)\r\n            target.items.splice(deleteIndex, 1)\r\n          })\r\n        }\r\n        this.clearCheckedList()\r\n\r\n        break;\r\n      case 'modify':\r\n\r\n        let modifyIndex = target.items.findIndex(itemsVal => itemsVal.conditionid === item.conditionid)\r\n        target.items[modifyIndex] = item\r\n        break;\r\n\r\n    }\r\n\r\n    if (isEmit) {\r\n      this.queryconditionData$.next(this.queryconditionData)\r\n      this.updateQueryConditionListData()\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * ä¿®æ¹åç»æ°æ®\r\n   * @param data groupæ°æ®\r\n   * @param type ä¿®æ¹ç±»å\r\n   */\r\n  changeGroupData(data, type) {\r\n    const { item, path, relation } = data\r\n    let target = this.queryconditionData\r\n    path.forEach(pathVal => {\r\n      //groupid = 1çæ¶åæªæå¤å±\r\n      if (pathVal !== 1) {\r\n        target = target.children.find(targetVal => targetVal.groupid === pathVal)\r\n      }\r\n\r\n\r\n    })\r\n    switch (type) {\r\n      case 'modify-relation':\r\n        target.relation = relation;\r\n        break;\r\n    }\r\n    this.queryconditionData$.next(this.queryconditionData)\r\n    this.updateQueryConditionListData()\r\n\r\n  }\r\n\r\n  /**\r\n   * çææ°çåç»\r\n   * @desc \r\n   *\r\n   */\r\n  addGroup() {\r\n    let groups = Object.keys(this.checkedList).filter(val => this.checkedList[val].length)\r\n    // æªéæ©ç­éæ¡ä»¶æ¶åçç¹å»æç¤º\r\n    if (!groups.length) {\r\n      //éè¦å¾é\r\n      this.notifySer.warning(this.localeService.getValue('advancedMode.info.noConditionInfo'))\r\n\r\n    } else if (groups.length === 1) {\r\n      //ææéæ©é¡¹å½å±äºåä¸ä¸ªgroupçitemsæ¶\r\n      let targetPath: Array<number> = groups[0].split('-').map(val => Number(val))\r\n      let target = this.queryconditionData\r\n      targetPath.forEach(pathVal => {\r\n        //groupid = 1çæ¶åæªæå¤å±\r\n        if (pathVal !== 1) {\r\n          target = target.children.find(targetVal => targetVal.groupid === pathVal)\r\n        }\r\n\r\n      })\r\n      let flatItems = this.getFlatConditions(target)\r\n      let modifyItems = flatItems.filter(val => this.checkedList[groups[0]].includes(val.conditionid))\r\n      //ç¹å«çï¼å¦æå°groupä¸çchildren.lengthä¸º0ï¼å¹¶ä¸modifyItemsçèå´ä¸ºå¨é¨çitemsï¼åæç¤º\r\n      if (!target.children.length && modifyItems.length === target.items.length) {\r\n        //å·²ç»å­å¨è¯¥åç»äº\r\n        this.notifySer.warning(this.localeService.getValue('advancedMode.info.existGroupInfo'))\r\n        return\r\n      }\r\n      this.generateGroup(target, modifyItems, [])\r\n\r\n    } else {\r\n      //å¦ægroupå­å¨å¤ä¸ªç»ï¼é¦åæ¾å°æ¶åæ°æ®çæå¤å±ç»ï¼é»è®¤æ¯groupä¸º1çç»ï¼å³æå¤§ç»\r\n      let involvedGroupid = 1\r\n      let involvedPath = [1]\r\n      //è·åæéæ©æ°æ®çgroupï¼å¹¶å°è·¯å¾è½¬åä¸ºArray<number>\r\n      let _groups = groups.map(val => val.split('-').map(val2 => Number(val2)))\r\n      //è·åå¶ä¸­çæç­è·¯å¾\r\n      let minLength = _groups.map(val => val.length).sort((a, b) => a - b)[0]\r\n      //å¾ªç¯æ¾å°å¶ä¸­çæ¶åæå°ç æå¤§å¬å±group\r\n      for (let i = 1; i < minLength; i++) {\r\n        let nowGroupid = _groups[0][i]\r\n        if (nowGroupid) {\r\n          //æ¯ä¸ªç»çç¬¬ié¡¹é½ä¸è´flagä¸ºtrue\r\n          let flag = _groups.filter(val => val[i] === nowGroupid).length === _groups.length\r\n          if (flag) {\r\n            involvedGroupid = nowGroupid\r\n            involvedPath.push(nowGroupid)\r\n          } else {\r\n            break\r\n          }\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n\r\n      //æ ¡éªè·¨ç»ï¼involvedGroupidä¸çitemsï¼å¯ä»¥ä¸å¨é,ä¸åæ ¡éª\r\n      //å¶ä»æåµéè¦æ£æ¥checklistå¯¹åºæ°æ®æ¯å¦å·²ç»ä¸ºå¯¹åºgroupçå¨é¨æ°æ®\r\n      let flatGroupList = this.getFlatChildren(this.queryconditionData)\r\n      //æ£æµinvolvedGroupidç³»çgroupçconditionçå¨é¨æ°éæ¯ä¸æ¯ç­äºå·²éæ©çæ°éï¼å¦ææ¯çè¯ï¼æéç¨æ·ï¼æéæ¡ä»¶å·²å­å¨åç»\r\n      let involvedGroup = flatGroupList.find(val => val.groupid === involvedGroupid)\r\n      let involvedConditionsAll = this.getFlatConditions(involvedGroup).length\r\n      let checkedAll = groups.map(val => this.checkedList[val].length).reduce((a, b) => a + b)\r\n\r\n      if (involvedConditionsAll === checkedAll) {\r\n        //å·²ç»å­å¨è¯¥åç»äº\r\n        this.notifySer.warning(this.localeService.getValue('advancedMode.info.existGroupInfo'))\r\n        return\r\n      }\r\n      let validFlag = true\r\n      // è·åææåºäºç¸å³involvedGroupidä¸checklistçchildren\r\n      //æ¹æ³ï¼å¯»æ¾æå°å±ç»å¨groupæ°ç»çä½ç½®ï¼å¦åç¬¬ä¸ä½ ï¼åææåå«ç¬¬äºä½çchildrené½åºè¯¥è¢«å¾é\r\n      let involvedChildrenGroupids = []\r\n      _groups.forEach(val => {\r\n        let groupid = val[involvedPath.length]\r\n        if (groupid && !involvedChildrenGroupids.includes(groupid)) {\r\n          involvedChildrenGroupids.push(groupid)\r\n        }\r\n      })\r\n      //è·åä¸è¿°æ­¥éª¤ä¸­æægroupçconditionæ°éï¼å«å­çº§ï¼\r\n      let involveChildrenConditionLen = 0\r\n      involvedChildrenGroupids.forEach(val => {\r\n        let target = flatGroupList.find(group => group.groupid === val)\r\n        if (target) {\r\n          let targetFlatConditionsLen = this.getFlatConditions(target).length\r\n          involveChildrenConditionLen += targetFlatConditionsLen\r\n        }\r\n      })\r\n      let involvedCheckedConditionLen = 0\r\n      groups.filter(val => val !== involvedPath.join('-')).forEach(val => involvedCheckedConditionLen += this.checkedList[val].length)\r\n\r\n      if (involveChildrenConditionLen !== involvedCheckedConditionLen) {\r\n        //è·¨ç»æä½éè¦å¾éç»åæææ°æ®\r\n        this.notifySer.error(this.localeService.getValue('advancedMode.info.checkedGroupInfo'))\r\n        validFlag = false\r\n      }\r\n      // groups.forEach(group => {\r\n      //   if (!validFlag) {\r\n      //     return\r\n      //   }\r\n      //   if (group !== involvedPath.join('-')) {\r\n\r\n      //     let target = flatGroupList.find(val => val.path.join('-') === group)\r\n      //     let targetFlatConditions = this.getFlatConditions(target)\r\n      //     //å½åèç¹ä¸çææitemsï¼ä¸ä¸è¯¥èç¹æå³çææitems\r\n      //     let checkedListBaseTarget = _groups.filter(val => val.includes(target.groupid)).map(val => val.join('-'))\r\n      //     let checkedListBaseTargetLength = 0\r\n      //     checkedListBaseTarget.forEach(val => checkedListBaseTargetLength = checkedListBaseTargetLength + this.checkedList[val].length)\r\n      //     if (targetFlatConditions.length !== checkedListBaseTargetLength) {\r\n      //       this.notifySer.error('è·¨ç»æä½æ¶ï¼åºå¾éè¯¥ç»ä¸å¨é¨æ°æ®')\r\n      //       validFlag = false\r\n      //     }\r\n      //   }\r\n      // })\r\n      if (validFlag) {\r\n        let modifyItemids = this.checkedList[involvedPath.join('-')] || []\r\n        let target = flatGroupList.find(val => val.path.join('-') === involvedPath.join('-'))\r\n\r\n        let modifyItems = target.items.filter(val => modifyItemids.includes(val.conditionid))\r\n        //ç±äºåé¢å·²ç»æ£æµäºåå«äºæchildçå¨é¨conditionï¼æä»¥æ­¤å¤è¿æ»¤åºè¯¥åå«å­é¡¹ã\r\n        //æ¹æ³ï¼å¯»æ¾æå°å±ç»å¨groupæ°ç»çä½ç½®ï¼å¦åç¬¬ä¸ä½ ï¼åææåå«ç¬¬äºä½çchildrené½åºè¯¥è¢«å¾é\r\n        let involvedChildrenGroup = _groups.map(val => val[involvedPath.length]).filter(val => val)\r\n        let children = target.children.filter(val => involvedChildrenGroup.includes(val.groupid))\r\n        // let children = target.children.filter(val => groups.includes(val.path.join('-')))\r\n        this.generateGroup(target, modifyItems, children)\r\n\r\n      }\r\n\r\n\r\n    }\r\n    this.queryconditionData$.next(this.queryconditionData)\r\n    this.updateQueryConditionListData()\r\n    this.clearCheckedList()\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param groupid \r\n   * @param path \r\n   * @param isEmit æ¯å¦éè¦è§¦åemitæä½ï¼å¯¹äºtreeshakeæ¹æ³ï¼æ éè§¦åï¼é»è®¤ä¸ºtrue\r\n   * @param changeRootCompareType å±äºtreeshakeè¿ç¨ä¸­çåæ¶åç»ï¼æ¶åå°æ ¹èç¹ä¸æ ¹èç¹åªæè¯¥childrençæ¶åï¼éè¦ä¿®æ¹æ ¹èç¹æ¯è¾ç¬¦ï¼ä¸ºtrueæ¶ä¿®æ¹\r\n   */\r\n  deleteGroup(groupid, path, isEmit = true, changeRootCompareType = false) {\r\n\r\n    if (groupid === 1) {\r\n      //å·²ç»æ¯æå¤å±åç»äº\r\n      this.notifySer.info(this.localeService.getValue('advancedMode.info.deleteGroupInfo'))\r\n    } else {\r\n      let target = this.queryconditionData\r\n      let targetParent = null\r\n      path.forEach(pathVal => {\r\n        //groupid = 1çæ¶åæªæå¤å±\r\n        if (pathVal !== 1) {\r\n          targetParent = target\r\n          target = target.children.find(targetVal => targetVal.groupid === pathVal)\r\n        }\r\n      })\r\n      targetParent.children = targetParent.children.filter(val => val.groupid !== groupid)\r\n      let isChangeCompareType = (targetParent.groupid === 1) && changeRootCompareType && !targetParent.items.length && !targetParent.children.length\r\n      if(isChangeCompareType) {\r\n        targetParent.relation = target.relation\r\n      }\r\n      targetParent.children.push(...target.children)\r\n      targetParent.items.push(...target.items)\r\n      let childrens = this.getFlatChildren(targetParent)\r\n      childrens.forEach(val => val.path = val.path.filter(pathItem => pathItem !== groupid))\r\n      if (isEmit) {\r\n        this.queryconditionData$.next(this.queryconditionData)\r\n        this.updateQueryConditionListData()\r\n        this.clearCheckedList()\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  generateGroup(parentTarget, items, children) {\r\n    let groupid = this.getMaxGroupid() + 1\r\n\r\n    //å é¤æå°èå´çæå¤§ç» ä¸­ç§»é¤æçæ°æ®\r\n    this.changeQueryconditionData({ deleteItems: items, path: parentTarget.path }, 'delete-items', false)\r\n    //å é¤æå°èå´çæå¤§ç» ä¸­ç§»é¤æçchildrenï¼æ³¨æï¼ç±äºå·²ç»åè¿æ ¡éªï¼childrenä¸­çéå½ç±»åå·²ç»å¨é¨éæ©ï¼åªéå°targetä¸­æ¶åçchildrenç§»å°newgroupï¼å¹¶å°å¶åé¨çè·¯ç±ä¿®æ¹\r\n    let allGroups = this.getFlatChildren(parentTarget)\r\n\r\n\r\n    let parentPosition = parentTarget.path.findIndex(pathVal => pathVal === parentTarget.groupid)\r\n    children.forEach(val => {\r\n\r\n      // this.deleteGroup(val.groupid, val.path)\r\n      parentTarget.children = parentTarget.children.filter(child => child.groupid !== val.groupid)\r\n      allGroups.forEach(group => {\r\n        if (group.path.includes(val.groupid)) {\r\n          group.path.splice(parentPosition + 1, 0, groupid)\r\n\r\n        }\r\n      })\r\n    })\r\n\r\n    let newGroup: QueryconditionAdvancedData = {\r\n      groupid,\r\n      relation: 1,\r\n      items: items,\r\n      children: children,\r\n      path: parentTarget.path.concat(groupid)\r\n    }\r\n    parentTarget.children.push(newGroup)\r\n\r\n  }\r\n\r\n\r\n\r\n  setQueryconditionData(data) {\r\n    this.queryconditionData = data\r\n    this.queryconditionData$.next(data)\r\n    // åå§åå¯ä»¥ä¸ç¨æ´æ°QueryConditionListDataï¼ç¶ç»ä»¶å·²ç»ä¼ å¥\r\n    // this.updateQueryConditionListData()\r\n  }\r\n\r\n  getQueryconditionData() {\r\n    return this.queryconditionData\r\n  }\r\n\r\n  changeFieldConfig(config) {\r\n    this.fieldConfig = config\r\n    this.fieldConfig$.next(config)\r\n  }\r\n  getFieldConfig() {\r\n    return this.fieldConfig\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * ä¿®æ¹å·²éæ©çç­éæ¡ä»¶\r\n   * @param path number[] èç¹ä½ç½®\r\n   * @param item ç­éæ¡ä»¶\r\n   */\r\n  changeCheckedList(path, item) {\r\n\r\n    let _path = path.join('-')\r\n    if (!this.checkedList[_path]) {\r\n      this.checkedList[_path] = [item]\r\n    } else {\r\n      let index = this.checkedList[_path].indexOf(item)\r\n      if (index < 0) {\r\n        this.checkedList[_path].push(item)\r\n      } else {\r\n        this.checkedList[_path].splice(index, 1)\r\n        if (!this.checkedList[_path].length) {\r\n          delete this.checkedList[_path]\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n    this.checkedList$.next(this.checkedList)\r\n  }\r\n\r\n  /**\r\n   * æ¸é¤å·²éæ©çç­éæ¡ä»¶\r\n   */\r\n  clearCheckedList() {\r\n    this.checkedList = {}\r\n    this.checkedList$.next(this.checkedList)\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * \r\n   * @param data éè¦æ¥è¯¢çèç¹ä½ç½®\r\n   * @returns è¯¥èç¹ä¸ææçç­éæ¡ä»¶ä¿¡æ¯\r\n   */\r\n  getFlatConditions(data) {\r\n    if (data.children) {\r\n      return [].concat(data.items, ...data.children.map(val => this.getFlatConditions(val)))\r\n\r\n    }\r\n    return [].concat(data.items)\r\n\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param data éè¦æ¥è¯¢çèç¹\r\n   * @returns è¯¥èç¹ä¸ææçç»ç»ä¿¡æ¯\r\n   */\r\n  getFlatChildren(data) {\r\n    if (data.children) {\r\n      return [].concat(data, ...data.children.map(val => this.getFlatChildren(val)))\r\n    }\r\n    return [].concat(data)\r\n  }\r\n\r\n  /**\r\n   * @desc è·åæ°æ®ä¸­å·²æçæå¤§ç­éæ¡ä»¶ç¼å·\r\n   * @returns å½åæ°æ®ä¸­å·²æçæå¤§ç­éæ¡ä»¶ç¼å· \r\n   */\r\n  getMaxConditionid() {\r\n\r\n    let maxid = 0\r\n    let items = this.getFlatConditions(this.queryconditionData)\r\n    let conditionList = items.sort((a, b) => b.conditionid - a.conditionid)\r\n    if (conditionList.length) {\r\n      maxid = conditionList[0].conditionid\r\n    }\r\n\r\n    return maxid\r\n  }\r\n\r\n  /**\r\n   * @desc è·åæ°æ®ä¸­å·²æçæå¤§ç»ç»ç¼å·\r\n   * @returns å½åæ°æ®ä¸­å·²æçæå¤§ç»ç»ç¼å· \r\n   */\r\n  getMaxGroupid() {\r\n\r\n    let maxid = 0\r\n    let childrens = this.getFlatChildren(this.queryconditionData)\r\n    let conditionList = childrens.sort((a, b) => b.groupid - a.groupid)\r\n    if (conditionList.length) {\r\n      maxid = conditionList[0].groupid\r\n    }\r\n\r\n    return maxid\r\n  }\r\n\r\n\r\n  /**\r\n   * å°queryconditionè½¬åä¸ºArrayçæ ¼å¼å¹¶äº¤ä»åç«¯è§£æ\r\n   * @param data  è§£æçæ°æ®\r\n   * @param parentRelation ç¶èç¹çå³èå³ç³»\r\n   * @returns \r\n   */\r\n  objToArrayData(data, parentRelation?) {\r\n\r\n    let items = data.items\r\n    let children = data.children\r\n    items.forEach(val => val.relation = data.relation)\r\n\r\n    if (children.length) {\r\n      items = [].concat(...items, ...children.map(val => this.objToArrayData(val, data.relation)))\r\n    }\r\n\r\n    if (items.length && parentRelation) {\r\n\r\n      items[items.length - 1].relation = parentRelation\r\n      items[0].Lbracket ? items[0].Lbracket += '(' : items[0].Lbracket = '('\r\n      items[items.length - 1].Rbracket ? items[items.length - 1].Rbracket += ')' : items[items.length - 1].Rbracket = ')'\r\n    }\r\n\r\n    return [...items]\r\n\r\n  }\r\n  updateQueryConditionListData() {\r\n    let result = this.objToArrayData(cloneDeep(this.queryconditionData))\r\n    this.queryconditionListData = result\r\n    this.queryconditionListData$.next(this.queryconditionListData)\r\n  }\r\n\r\n  /**\r\n   * æ§è¡å®å¢å æä½åï¼å­å¨é¨ågroupä¸­æ æ°æ®çæåµï¼éè¦å é¤æè¯¥é¨åæ ç¨æ°æ®\r\n   * @param data \r\n   */\r\n  treeshake(data, parentData?) {\r\n    if (data.children.length) {\r\n      data.children.forEach(group => this.treeshake(group, data))\r\n    }\r\n    //itemså­å¨æèchildrençæ°éå¤§äºç­äº2ä¸ºæ­£å¸¸æ°æ®ï¼æ éå¤çï¼returnä»æ¯è¿åç»æå¤å±æ°æ®\r\n    if (data.items.length || data.children.length > 1) {\r\n\r\n    } else if (data.groupid === 1) {\r\n      //groupid === 1 ç¹æ®å¤çï¼itemsåchildrenå¯ä»¥ä¸º0ï¼ä½æ¯childrené¿åº¦ä¸º1ä¸itemsæ æ°æ®æ¶è¦å°childrenå¤ç\r\n      if (!data.items.length && data.children.length === 1) {\r\n        this.deleteGroup(data.children[0].groupid, data.children[0].path, false, true)\r\n      }\r\n\r\n    } else if (!data.children.length) {\r\n      //childrenæ°éä¸º0 itemsæ°éä¹ä¸º0ï¼ è¯¥èç¹æ å­å¨å¿è¦ï¼ç´æ¥å é¤\r\n      parentData.children = parentData.children.filter(val => val.groupid !== data.groupid)\r\n    } else if (data.children.length === 1) {\r\n      //itemsä¸å­å¨ï¼åªæä¸ä¸ªchildren,ç¸å½äºå é¤è¯¥å±åç»ï¼å°å­childrenåçº§\r\n      this.deleteGroup(data.groupid, data.path, false, true)\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { QueryCondition, QueryConditionConvert } from \"./querycondition\";\r\nimport { QuerySolutionExtendVo } from './querysolutionextendvo';\r\nimport {QueryconditionAdvancedData} from '../querycondition-advanced/type/type'\r\nimport { cloneDeep } from 'lodash-es';\r\n/**\r\n * æ¥è¯¢æ¹æ¡å®ä½ç±» \r\n */\r\nexport class QuerySolutionVo {\r\n    /**\r\n     * å¯ä¸æ§æ è¯\r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * æå±IDï¼ä¾å¦æå±è¡¨åID\r\n     */\r\n    belongId: string;\r\n\r\n    /**\r\n     * æ¥è¯¢æ¹æ¡ç¼å·\r\n     */\r\n    code: string;\r\n\r\n    /**\r\n     * æ¥è¯¢æ¹æ¡åç§°\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * æ¥è¯¢æ¡ä»¶\r\n     */\r\n    queryConditions: Array<QueryCondition>;\r\n\r\n    /**\r\n     * æ¯å¦ç³»ç»é¢ç½®æ¥è¯¢æ¹æ¡\r\n     */\r\n    isSystem: boolean;\r\n\r\n    /**\r\n     * æ¯å¦é»è®¤æ¥è¯¢æ¹æ¡\r\n     * åå§æ¶ï¼ä¸ºfalse\r\n     */\r\n    isDefault: boolean = false;\r\n\r\n    isChanged: boolean = false;\r\n    /**\r\n     * ç±»åï¼ preæ¯ä¸æ¬¡æ¥è¯¢\r\n     */\r\n    type: string;\r\n\r\n    extendId: string = 'query-scheme-1';\r\n\r\n    extendInfo: Array<QuerySolutionExtendVo>;\r\n\r\n    code_chs: string;\r\n\r\n    code_en: string;\r\n\r\n    code_cht: string;\r\n    /**\r\n     * é«çº§æ¨¡å¼æ°å¢å­æ®µï¼1ä¸ºæ åæ¨¡å¼ï¼2ä¸ºé«çº§æ¨¡å¼\r\n     */\r\n    mode: string;\r\n    /**\r\n     * é«çº§æ¨¡å¼æ°å¢è¾å©å­æ®µï¼ç¨æ¥å±ç¤ºconditionçæ ç»æ\r\n     */\r\n    queryConditionsAdvanced: QueryconditionAdvancedData;\r\n}\r\n\r\n/**\r\n * æ¥è¯¢æ¹æ¡å®ä½ç±»åºååä¸ååºååå¨\r\n */\r\nexport class QuerySolutionVoConvertor {\r\n\r\n    /**\r\n     * åºåå\r\n     * @param obj æ¥è¯¢æ¹æ¡å®ä½\r\n     */\r\n    convertJObject(obj: QuerySolutionVo): Object {\r\n        let querySolutionVo = obj as QuerySolutionVo;\r\n        let jobj = new Object();\r\n        jobj[\"id\"] = querySolutionVo.id;\r\n        jobj[\"belongId\"] = querySolutionVo.belongId;\r\n        jobj[\"code\"] = querySolutionVo.code;\r\n        jobj[\"name\"] = querySolutionVo.name;\r\n        jobj[\"isSystem\"] = querySolutionVo.isSystem;\r\n        jobj[\"isDefault\"] = querySolutionVo.isDefault;\r\n        jobj[\"type\"] = querySolutionVo.type;\r\n        jobj[\"extendId\"] = querySolutionVo.extendId;\r\n        jobj[\"extendInfo\"] = querySolutionVo.extendInfo;\r\n        jobj[\"code_chs\"] = querySolutionVo.code_chs;\r\n        jobj[\"code_en\"] = querySolutionVo.code_en;\r\n        jobj[\"code_cht\"] = querySolutionVo.code_cht;\r\n        jobj[\"mode\"] = querySolutionVo.mode || '1';\r\n        //éå¯¹æ æ°æ®ä¸­åç®åå¤çï¼ä»ä¿çå¯¹åºæ¡ä»¶çconditionid\r\n\r\n        if(querySolutionVo.mode === '2') {\r\n            // let _queryConditionsAdvanced = querySolutionVo.queryConditionsAdvanced\r\n            // let _advancedFlatConditions = this.getFlatConditions(_queryConditionsAdvanced)\r\n            // _advancedFlatConditions.forEach(val => val.conditionid = val.conditionid *2)\r\n            let _queryConditionsAdvanced = this.simplifyTreeData(cloneDeep(querySolutionVo.queryConditionsAdvanced))\r\n            jobj[\"advancedQueryConditionsString\"] = JSON.stringify(_queryConditionsAdvanced)\r\n        }\r\n        \r\n        if (querySolutionVo.queryConditions && querySolutionVo.queryConditions.length > 0) {\r\n            let jArray = [];\r\n            let convertor = new QueryConditionConvert();\r\n            querySolutionVo.queryConditions.forEach(element => {\r\n                jArray.push(convertor.convertJObject(element));\r\n            });\r\n            //åæå¡ç«¯åéæ°æ®æ¶ï¼åéquery condition listçjson string\r\n            jobj[\"queryConditionString\"] = JSON.stringify(jArray);\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    /**\r\n     * ååºåå(åå§å)\r\n     * @param jobj æ¥è¯¢æ¹æ¡åºåååçObject\r\n     */\r\n    initFromJobject(jobj: Object): QuerySolutionVo {\r\n        let querySolutionVo = new QuerySolutionVo();\r\n        querySolutionVo.id = jobj[\"id\"];\r\n        querySolutionVo.code = jobj[\"code\"];\r\n        querySolutionVo.name = jobj[\"name\"];\r\n        querySolutionVo.belongId = jobj[\"belongId\"];\r\n        querySolutionVo.isSystem = jobj[\"isSystem\"];\r\n        querySolutionVo.isDefault = jobj[\"isDefault\"];\r\n        querySolutionVo.type = jobj.hasOwnProperty('type') ? jobj[\"type\"] : '';\r\n        querySolutionVo.extendId = jobj.hasOwnProperty('extendId') ? jobj[\"extendId\"] : \"\";\r\n        querySolutionVo.queryConditions = new Array<QueryCondition>();\r\n        //é«çº§æ¨¡å¼æ°å¢mode,1ä¸ºä¼ ç»æ¨¡å¼ï¼2ä¸ºé«çº§æ¨¡å¼\r\n        querySolutionVo.mode = jobj[\"mode\"] || 1;\r\n        \r\n        //æå¡å¨ç«¯è¿åçquery condition listå®éæ¯ json string\r\n        const queryConditionString = jobj[\"queryConditionString\"];\r\n        if (queryConditionString) {\r\n            const conditionJarry = JSON.parse(queryConditionString);\r\n            let convertor = new QueryConditionConvert();\r\n            conditionJarry.forEach(element => {\r\n                querySolutionVo.queryConditions.push(convertor.initFromJobject(element));\r\n            });\r\n        }\r\n        querySolutionVo.queryConditionsAdvanced = jobj[\"advancedQueryConditionsString\"] ? JSON.parse(jobj[\"advancedQueryConditionsString\"]) : null;\r\n\r\n        return querySolutionVo;\r\n    }\r\n    /**\r\n     * ä»ç¼å­ä¸­ååçJSONæ°æ®éè¦è½¬å\r\n     * ä»å¤§åè½¬æ¢å°å°åæ¡ä»¶\r\n     */\r\n    formatFromJobject(jobj: Array<any> | string): Array<QueryCondition> {\r\n        let queryConditions = new Array<QueryCondition>();\r\n        let conditionJarry;\r\n        if (typeof jobj == 'string') {\r\n            conditionJarry = JSON.parse(jobj);\r\n        } else {\r\n            conditionJarry = jobj;\r\n        }\r\n        let convertor = new QueryConditionConvert();\r\n        conditionJarry.forEach(element => {\r\n            queryConditions.push(convertor.initFromJobject(element));\r\n        });\r\n        return queryConditions;\r\n    }\r\n    /**\r\n     * å­å¥ç¼å­ä¸­\r\n     * ä»å¤§åè½¬æ¢å°å°åæ¡ä»¶\r\n     */\r\n    formatConvertJObject(jobj: Array<QueryCondition>):Array<any>{\r\n        let queryConditions =[];\r\n        let convertor = new QueryConditionConvert();\r\n        jobj.forEach(element => {\r\n            queryConditions.push(convertor.convertJObject(element));\r\n        });\r\n        return queryConditions;\r\n    }\r\n\r\n    /**\r\n     * å°é«çº§æ¨¡å¼ä¸æ ç»æconditionæå¹³å\r\n     * @param data \r\n     * @returns \r\n     */\r\n    getFlatConditions(data) {\r\n        if (data.children) {\r\n          return [].concat(data.items, ...data.children.map(val => this.getFlatConditions(val)))\r\n    \r\n        }\r\n        return [].concat(data.items)\r\n    \r\n      }\r\n      simplifyTreeData(data) {\r\n        if(data.items && data.items.length) {\r\n            let _items = data.items.map(val =>  {return {conditionid: val.conditionid}})\r\n            data.items = _items\r\n        }\r\n        if(data.children) {\r\n            data.children.forEach(val => this.simplifyTreeData(val))\r\n        }\r\n        return data\r\n    }\r\n    complicateTreeData(originData, conditionList) {\r\n        \r\n        let handleFunc = (treeData) => {\r\n\r\n            if (treeData.items && treeData.items.length) {\r\n                treeData.items = treeData.items.map(val => {\r\n                    let target = conditionList.find(item => item.conditionid === val.conditionid)\r\n                    if (target) {\r\n                        let result = cloneDeep(target)\r\n                        result.groupid = undefined\r\n                        result.Lbracket = undefined\r\n                        result.Rbracket = undefined\r\n                        return result\r\n                    }\r\n                    return null\r\n                })\r\n            }\r\n            if(treeData.children && treeData.children.length) {\r\n                treeData.children.forEach(val => {\r\n                    handleFunc(val)\r\n                })\r\n            }\r\n            //ä»ä¾è¿åé¡¶å±æ°æ®ï¼éåè¿ç¨ä½¿ç¨ä¸å°\r\n            return treeData\r\n        }\r\n        return handleFunc(originData)\r\n\r\n    }\r\n}","import { Component, Input, OnInit, Optional, Output, EventEmitter, OnDestroy, ElementRef, Injector, ViewChild, AfterViewInit } from '@angular/core';\r\n\r\nimport { QueryconditionAdvancedData } from './type/type'\r\nimport { StateService } from './service/state.service';\r\nimport { QueryCondition } from '../entity/queryCondition'\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { SolutionService } from '../service/solution.service';\r\nimport { ControlType } from '../entity/controltype';\r\nimport { QuerySolutionVo } from '../entity/querysolutionvo'\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\n@Component({\r\n  selector: 'querycondition-advanced',\r\n  templateUrl: './querycondition-advanced.component.html',\r\n  styleUrls: ['./querycondition-advanced.component.css'],\r\n  providers: [SolutionService]\r\n})\r\n\r\nexport class QueryconditionAdvancedComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n  queryconditionData: QueryconditionAdvancedData\r\n  _selectSolution: QuerySolutionVo\r\n  @Input() get selectSolution() {\r\n    return this._selectSolution\r\n  }\r\n  set selectSolution(value: QuerySolutionVo) {\r\n    if (value && this._selectSolution && value.id === this._selectSolution.id) {\r\n      return\r\n    }\r\n    this._selectSolution = value\r\n    this.queryconditionData = value.queryConditionsAdvanced\r\n    this.stateSer.setQueryconditionData(value.queryConditionsAdvanced)\r\n  }\r\n  @Input() get fieldConfig() {\r\n    return this._fieldConfig\r\n  }\r\n  set fieldConfig(value) {\r\n    //undo èå´åçç»ä»¶æä¸æ¯æ \r\n    //doing å°èå´åç»ä»¶éç½®ä¸ºåå¼ç±»åï¼æ¹æ³ï¼ååæ ¼å¼åï¼æ¿å°åºç¡å¼ï¼éårangeListï¼å°ç¸å³æ§ä»¶ç±»åæ¿æ¢ååè¿è¡æ ¼å¼å\r\n\r\n    let _value = cloneDeep(value)\r\n    _value.forEach(val => {\r\n      if (val.control.controltype === 'single-date') {\r\n        val.control.isDynamicDate = false\r\n      } else if(val.control.controltype === 'radio') {\r\n        val.control.horizontal = true\r\n      }\r\n      \r\n    })\r\n    //å°åæ¥æéé¢çæ¯æå¨ææ¥æå±æ§ç¾¤ä¸æ¹ä¸ºfalse\r\n    let modifyFieldConfig = this.rangeToSimpleControlType(_value)\r\n    this._fieldConfig = this.solutionService.convertToQueryConditions(modifyFieldConfig);\r\n    //æ³¢å°éæ©æ§ä»¶å¦ææ²¡æé»è®¤å¼ï¼èµå¼ä½falseï¼ä¸ºä»ä¹ä¸æ¾å¨ä¸é¢ãå ä¸ºä¸æ¢å¨ä¹åçæé å½æ°\r\n    this._fieldConfig.forEach(val => {\r\n      if (val.control.getControlType() === 8 && !val.value.getOriginalValue().length) {\r\n        val.value.setOriginalValue([false])\r\n      }\r\n    })\r\n    this.stateSer.changeFieldConfig(this._fieldConfig)\r\n\r\n  }\r\n  _fieldConfig: Array<QueryCondition>\r\n  dataSubscribe: Subscription = null\r\n  dataListSubscribe: Subscription = null\r\n  _self = null\r\n  //å­ç»ä»¶åå¦éè¦éå®æå¤§é«åº¦ï¼é»è®¤trueæå¨é«åº¦åfalse\r\n\r\n  isLimitHeight = true\r\n  @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n  @ViewChild('advancedContent') advancedContent: ElementRef;\r\n  @ViewChild('advancedElement') advancedElement: ElementRef;\r\n  constructor(private notifySer: NotifyService, private msgSer: MessagerService, private localeService: LocaleService, private solutionService: SolutionService, private stateSer: StateService, private injector: Injector) {\r\n\r\n    // this.fieldConfig = this.stateSer.getFieldConfig()\r\n    this.dataSubscribe = this.stateSer.queryconditionData$.subscribe((data: QueryconditionAdvancedData) => {\r\n      this.queryconditionData = data\r\n      this.selectSolution.queryConditionsAdvanced = data\r\n    })\r\n    this.dataListSubscribe = this.stateSer.queryconditionListData$.subscribe((queryconditionListData: Array<QueryCondition>) => {\r\n      this.conditionChange.emit(queryconditionListData);\r\n\r\n    })\r\n    this._self = this.injector.get(ElementRef);\r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    //çå¬resizeäºä»¶åå\r\n    setTimeout(()=>{this.handleResizeChange()},1000)\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.dataSubscribe.unsubscribe()\r\n    this.dataListSubscribe.unsubscribe()\r\n  }\r\n\r\n  //æå¤å±å¢å ç­éæ¡ä»¶\r\n  addItem() {\r\n    if (!this.fieldConfig.length) {\r\n      this.notifySer.error('æªæ£æµå°å­å¨ç­éæ¡ä»¶ã')\r\n    } else {\r\n\r\n      let item = cloneDeep(this.fieldConfig[0])\r\n      this.stateSer.changeQueryconditionData({ item, path: [1] }, 'add', true)\r\n      this.advancedContent.nativeElement.scrollTo({ top: this.advancedContent.nativeElement.scrollHeight })\r\n    }\r\n  }\r\n\r\n  //å¢å åç»\r\n  addGroup() {\r\n    this.stateSer.addGroup()\r\n  }\r\n\r\n  //éç½®\r\n  reset() {\r\n    this.msgSer.confirm(this.localeService.getValue('advancedMode.info.resetInfo')).subscribe((isConfirm) => {\r\n      if (isConfirm) {\r\n        this.stateSer.reset()\r\n        //è§¦ååè½¦ï¼è¿è¡æ¥è¯¢æä½\r\n        let event = document.createEvent('Event')\r\n        event.initEvent('keydown', true, false)\r\n\r\n        event = Object.assign(event, {\r\n          ctrlKey: false,\r\n          metaKey: false,\r\n          altKey: false,\r\n          which: 13,\r\n          keyCode: 13,\r\n          key: 'Enter',\r\n          code: 'Enter'\r\n        })\r\n        this._self.nativeElement.dispatchEvent(event)\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  rangeToSimpleControlType(configs) {\r\n    let unformatConfigs = cloneDeep(configs)\r\n    unformatConfigs.forEach(val => {\r\n      if (val.control && val.control.controltype) {\r\n\r\n        val.control.controltype = this.rangeToSimpleTypeModify(val.control.controltype)\r\n      }\r\n\r\n    })\r\n    return unformatConfigs\r\n\r\n  }\r\n\r\n  //è½¬åé¨åæ§ä»¶ç±»å\r\n  rangeToSimpleTypeModify(controlType) {\r\n\r\n    let result = ''\r\n    switch (controlType) {\r\n\r\n      case 'date':\r\n        result = 'single-date'\r\n        break\r\n      case 'date-time':\r\n        result = 'single-date-time'\r\n        break\r\n      case 'month':\r\n        result = 'single-month'\r\n        break\r\n      case 'number':\r\n        result = 'single-number'\r\n        break\r\n      default:\r\n        result = controlType\r\n    }\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * çå¬ç­éæ¡ä»¶ç»ä»¶å¤§å°ååçæ¹æ³ï¼é«åº¦è¶è¿æå®å¼æ¶åæ¶åé¨ç»ä»¶æå¤§é«åº¦å¼éå¶\r\n   */\r\n  handleResizeChange() {\r\n    //@ts-ignore\r\n    const myObserver = new ResizeObserver(entries => {\r\n      entries.forEach(entry => {\r\n        if(entry.target.style.height < 431 ) {\r\n          this.isLimitHeight = true\r\n        } else {\r\n          this.isLimitHeight = false\r\n        }\r\n      })\r\n    })\r\n    myObserver.observe(this.advancedElement.nativeElement)\r\n  }\r\n\r\n}\r\n","enum CompareType {\r\n    Equal = 0,\r\n    NotEqual = 1,\r\n    Greater = 2,\r\n    GreaterOrEqual = 3,\r\n    Less = 4,\r\n    LessOrEqual = 5,\r\n    Like = 6,\r\n    LikeStartWith = 7,\r\n    LikeEndWith = 8,\r\n    // NotLike = 9,\r\n    // NotLikeStartWith = 10,\r\n    // NotLikeEndWith = 11,\r\n    // Is = 12,\r\n    // IsNot = 13,\r\n    // In = 14,\r\n    // NotIn = 15\r\n}\r\n\r\nconst CompareTypeName = [\r\n    'ç­äº',\r\n    'ä¸ç­äº',\r\n    'å¤§äº',\r\n    'å¤§äºç­äº',\r\n    'å°äº',\r\n    'å°äºç­äº',\r\n    'åå«',\r\n    'å¼å§æ¯',\r\n    'ç»ææ¯',\r\n    // 'NotLike',\r\n    // 'NotLikeStartWith',\r\n    // 'NotLikeEndWith',\r\n    // 'Is',\r\n    // 'IsNot',\r\n    // 'In',\r\n    // 'NotIn'\r\n]\r\n\r\nconst CompareTypeInControl = [\r\n    // Text = 0,\r\n    [0, 6, 7, 8],\r\n    // SingleDate = 1,\r\n    [0, 2, 3, 4, 5],\r\n    // SmartHelp = 2,\r\n    [0, 1],\r\n    // DropDownList = 3,\r\n    [0, 1],\r\n    // DateRange = 4,\r\n    [],\r\n    // NumberRange = 5,\r\n    [],\r\n    // SingleNumber = 6,\r\n    [0, 1, 2, 3, 4, 5],\r\n    // SingleYear = 7,\r\n    [0, 2, 3, 4, 5],\r\n    // BoolCheck = 8,\r\n    [0],\r\n    // DateTimeRange = 9,\r\n    [],\r\n    // SingleMonth = 10,\r\n    [0, 2, 3, 4, 5],\r\n    // MonthRange = 11,\r\n    [],\r\n    // SingleDateTime = 12,\r\n    [0, 2, 3, 4, 5],\r\n    // ComboLookUp = 13,\r\n    [0, 1],\r\n    // Radio = 14,\r\n    [0],\r\n    // InputGroup = 15\r\n    [0, 6, 7, 8],\r\n]\r\n\r\nexport {\r\n    CompareType,\r\n    CompareTypeName,\r\n    CompareTypeInControl\r\n}","import { Component, Input, OnInit, ChangeDetectorRef, OnDestroy, ViewChild, ElementRef, Injector } from '@angular/core';\r\nimport { CompareType, CompareTypeName, CompareTypeInControl } from '../config/compare-type.config';\r\nimport { QueryconditionAdvancedData } from '../type/type'\r\nimport { StateService } from '../service/state.service'\r\nimport { QueryCondition } from '../../entity/QueryCondition'\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\nimport { OverLayHiddenService } from \"@farris/ui-common\";\r\n@Component({\r\n  selector: 'querycondition-group',\r\n  templateUrl: './querycondition-group.component.html',\r\n  styleUrls: ['./querycondition-group.component.css']\r\n})\r\nexport class QueryconditionGroupComponent implements OnInit, OnDestroy {\r\n\r\n  COMPARE_TYPE_NAME = CompareTypeName\r\n  COMPARE_TYPE_NAME_MULTI = CompareTypeName //æ²¡åæ³ï¼è¦æ±ç±»ä¼¼äºå¸®å©ï¼ä¸æéæ©ï¼ä¸ä¸ªå«ç­äºï¼ä¸¤ä¸ªå«åå«ï¼ä½æ¯é»è¾è¿è¦ä¸æ ·\r\n  COMPARE_TYPE_IN_CONTROL = CompareTypeInControl\r\n  @Input() data: QueryconditionAdvancedData\r\n\r\n  fieldConfig: Array<QueryCondition> = []\r\n  checklist: Array<string> = []\r\n\r\n  deleteGroupText = this.localeService.getValue('advancedMode.info.deleteGroupTooltip')\r\n  fieldConfigSubscribe: Subscription = null\r\n  checkedListSubscribe: Subscription = null\r\n  forceState = []\r\n  _self = null\r\n  activeConditionType = null \r\n  private overLayService: OverLayHiddenService = null;\r\n  constructor(private stateSer: StateService, private cd: ChangeDetectorRef, private msgSer: MessagerService, private localeService: LocaleService, private injector: Injector) {\r\n    this.fieldConfig = this.stateSer.getFieldConfig()\r\n    this.fieldConfigSubscribe = this.stateSer.fieldConfig$.subscribe((config: any) => {\r\n      this.fieldConfig = config\r\n    })\r\n    this.checkedListSubscribe = this.stateSer.checkedList$.subscribe((checklist: Array<string>) => {\r\n\r\n      let _path = this.data.path.join('-')\r\n      if (checklist[_path]) {\r\n        this.checklist = checklist[_path]\r\n      } else {\r\n        this.checklist = []\r\n      }\r\n    })\r\n    this.COMPARE_TYPE_NAME = [\r\n      this.localeService.getValue('advancedMode.compareType.Equal'),\r\n      this.localeService.getValue('advancedMode.compareType.NotEqual'),\r\n      this.localeService.getValue('advancedMode.compareType.Greater'),\r\n      this.localeService.getValue('advancedMode.compareType.GreaterOrEqual'),\r\n      this.localeService.getValue('advancedMode.compareType.Less'),\r\n      this.localeService.getValue('advancedMode.compareType.LessOrEqual'),\r\n      this.localeService.getValue('advancedMode.compareType.Like'),\r\n      this.localeService.getValue('advancedMode.compareType.LikeStartWith'),\r\n      this.localeService.getValue('advancedMode.compareType.LikeEndWith')\r\n    ]\r\n    this.COMPARE_TYPE_NAME_MULTI = [\r\n      this.localeService.getValue('advancedMode.compareType.Like'),\r\n      this.localeService.getValue('advancedMode.compareType.NotLike'),\r\n      this.localeService.getValue('advancedMode.compareType.Greater'),\r\n      this.localeService.getValue('advancedMode.compareType.GreaterOrEqual'),\r\n      this.localeService.getValue('advancedMode.compareType.Less'),\r\n      this.localeService.getValue('advancedMode.compareType.LessOrEqual'),\r\n      this.localeService.getValue('advancedMode.compareType.Like'),\r\n      this.localeService.getValue('advancedMode.compareType.LikeStartWith'),\r\n      this.localeService.getValue('advancedMode.compareType.LikeEndWith')\r\n    ]\r\n    this.overLayService = new OverLayHiddenService();\r\n    this._self = this.injector.get(ElementRef);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.fieldConfigSubscribe.unsubscribe()\r\n    this.checkedListSubscribe.unsubscribe()\r\n  }\r\n\r\n\r\n  /**\r\n   * ä¸æé¢æ¿å±å¼å³é­äºä»¶\r\n   * @param event ä¸æå±å¼tueï¼ å³é­false\r\n   * @param dropdownMenu ç¹å»çdropdownåºå·\r\n   */\r\n  dpStateHandler(event, dropdownMenu?) {\r\n    //è§£å³é¼ æ å¨dropdownä¸æ»å¨è¡¥å³é­dropdownçé®é¢\r\n    if (event && typeof (dropdownMenu) === 'number') {\r\n      this.activeConditionType = dropdownMenu.toString()\r\n      this.forceState = []\r\n      this.overLayService.registerMouseEvent(this._self.nativeElement, (e: MouseEvent) => {\r\n        if (!this.activeConditionType || !(e.type === 'wheel' || e.type === 'mousewheel')) return\r\n        let tar = e.target as any\r\n        let classList = Array.from(tar.classList || [])\r\n        if (!classList.includes('dropdown-item-noopen') && this.activeConditionType) {\r\n          this.activeConditionType = null\r\n          this.forceState = [false]\r\n          this.overLayService.destory(this._self.nativeElement)\r\n        }\r\n      });\r\n    } else {\r\n      this.overLayService.destory(this._self.nativeElement)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ä¿®æ¹ç­éæ¡ä»¶æ§ä»¶ç±»å\r\n   * @param item ç­éæ¡ä»¶å¯¹è±¡\r\n   * @param fieldItem éä¸­çæ§ä»¶ç±»å\r\n   */\r\n  changeConditionType(item, fieldItem) {\r\n    let conditionid = item.conditionid\r\n    let _fieldItem = cloneDeep(fieldItem)\r\n\r\n    item = _fieldItem\r\n    item.conditionid = conditionid\r\n    item.compareType = 0\r\n    this.stateSer.changeQueryconditionData({ item, path: this.data.path }, 'modify')\r\n\r\n  }\r\n  \r\n  /**\r\n   * ä¿®æ¹ç­éæ¡ä»¶æ¯è¾ç¬¦\r\n   * @param item ç­éæ¡ä»¶å¯¹è±¡\r\n   * @param compareTypeIndex ç­éæ¡ä»¶æ¯è¾ç¬¦\r\n   */\r\n  changeCompareType(item, compareTypeIndex) {\r\n    item.compareType = compareTypeIndex\r\n    this.stateSer.changeQueryconditionData({ item, path: this.data.path }, 'modify')\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * æ·»å ç­éæ¡ä»¶\r\n   * @param addPositionItem æ·»å çä½ç½® \r\n   */\r\n  addItem(addPositionItem) {\r\n    let item = cloneDeep(this.fieldConfig[0])\r\n    this.stateSer.changeQueryconditionData({ item, path: this.data.path, addPositionItem: addPositionItem }, 'add')\r\n  }\r\n\r\n  /**\r\n   * å é¤ç­éæ¡ä»¶ \r\n   * @param item å é¤é¡¹\r\n   */\r\n  deleteItem(item) {\r\n    this.stateSer.changeQueryconditionData({ deleteItems: [item], path: this.data.path }, 'delete-item')\r\n  }\r\n\r\n  /**\r\n   * ä¿®æ¹ç­éæ¡ä»¶ç»å³èå³ç³»\r\n   */\r\n  changeRelation() {\r\n    let relation = this.data.relation === 1 ? 2 : 1\r\n    this.stateSer.changeGroupData({ relation, path: this.data.path }, 'modify-relation')\r\n\r\n  }\r\n\r\n  /**\r\n   * éä¸­ç­éæ¡ä»¶\r\n   * @param item éä¸­é¡¹\r\n   */\r\n  handleCheckItem(item) {\r\n    this.stateSer.changeCheckedList(this.data.path, item.conditionid)\r\n\r\n  }\r\n\r\n  /**\r\n   * åæ¶ç­éç»\r\n   */\r\n  deleteGroup() {\r\n    this.msgSer.confirm(this.localeService.getValue('advancedMode.info.deleteGroup')).subscribe((isConfirm) => {\r\n      if (isConfirm) {\r\n        this.stateSer.deleteGroup(this.data.groupid, this.data.path)\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","import { Component, Input, OnInit, Injector, Output } from '@angular/core';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { IdService } from '@farris/ui-common';\r\nimport { StateService } from '../service/state.service'\r\n@Component({\r\n  selector: 'querycondition-item',\r\n  templateUrl: './querycondition-item.component.html',\r\n  styleUrls: ['./querycondition-item.component.css']\r\n})\r\nexport class QueryconditionItemComponent implements OnInit {\r\n\r\n\r\n  controlType = ControlType;\r\n  @Input() item\r\n  fieldCodeOfClearFields: Array<string> = [];\r\n  private idService: IdService;\r\n  private stateSer: StateService;\r\n  constructor(private injector: Injector) {\r\n    this.idService = this.injector.get(IdService);\r\n    this.stateSer = this.injector.get(StateService);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  conditionChange() {\r\n    this.stateSer.updateQueryConditionListData()\r\n  }\r\n\r\n  getStyle(a) {\r\n    return ''\r\n  }\r\n  buildSmartHelpKey(value: string) {\r\n    let prefix = '';\r\n    if (location.hash) {\r\n      const pathArr = location.hash.split('?');\r\n      prefix = pathArr ? pathArr[0] : '';\r\n    } else {\r\n      const pathArr = location.pathname.split('/');\r\n      prefix = pathArr ? pathArr[pathArr.length - 1] : '';\r\n    }\r\n    return this.idService.encrypt(prefix + '/querysolution/' + value);\r\n  }\r\n  clearFieldsChange(event) {\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { QueryConditionComponent } from './querycondition.component';\r\nimport { NumberRangeComponent } from './controlcomponent/numberrangecomponent/numberrange.component';\r\nimport { InputComponent } from './controlcomponent/input/input.component';\r\nimport { InputGroupComponent } from './controlcomponent/inputgroup/inputgroup.component';\r\nimport { SolutionSmartHelpComponent } from './controlcomponent/smarthelp/smarthelp.component';\r\nimport { DropDownListComponent } from './controlcomponent/dropdown/dropdownlist.component';\r\nimport { SingleNumberComponent } from './controlcomponent/numbercomponent/single-number.component';\r\nimport { SolutionService } from './service/solution.service';\r\nimport { ConvertorService } from './service/convertorservice';\r\nimport { ConfigDialogComponent } from './fieldconfigdialog/configdialog.component';\r\nimport { NotifyModule, NotifyService } from '@farris/ui-notify';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { LayoutModule } from '@farris/ui-layout';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { MultiSelectModule } from '@farris/ui-multi-select';\r\nimport { FieldGroupModule } from '@farris/ui-field-group';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown'\r\nimport { LoadingModule } from '@farris/ui-loading';\r\n// import { InputModeModule } from '@farris/ui-input-group'\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { CheckBoxComponent } from './controlcomponent/checkbox/checkbox.component';\r\nimport { RadioComponent } from './controlcomponent/radio/radio.component';\r\nimport { DatePickerComponent } from './controlcomponent/datepicker/datepicker.component';\r\nimport { ComboLookUpComponent } from './controlcomponent/combolookup/combolookup.component';\r\nimport { ComboLookupModule } from '@farris/ui-combo-lookup';\r\nimport { ClearFieldsDirective } from './directives/clear-fields.directive';\r\nimport { LabelTextMultiDirective } from './directives/label-text-multi.directive';\r\nimport { FarrisTooltipModule } from '@farris/ui-tooltip';\r\n//é«çº§æ¨¡å¼ç»ä»¶åæå¡\r\nimport { StateService } from './querycondition-advanced/service/state.service'\r\nimport { QueryconditionAdvancedComponent } from './querycondition-advanced/querycondition-advanced.component';\r\nimport { QueryconditionGroupComponent } from './querycondition-advanced/querycondition-group/querycondition-group.component'\r\nimport { QueryconditionItemComponent } from './querycondition-advanced/querycondition-item/querycondition-item.component'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule, ReactiveFormsModule,\r\n    FarrisDialogModule,\r\n    LayoutModule,\r\n    LookupModule,\r\n    // FarrisInputModule,\r\n    MultiSelectModule,\r\n    FieldGroupModule,\r\n    InputGroupModule,\r\n    FDropdownDirectiveTypeModule,\r\n    LoadingModule.forRoot(),\r\n    NotifyModule.forRoot(),\r\n    FarrisDatePickerModule,\r\n    LocaleModule.forRoot(),\r\n    ComboListModule,\r\n    NumberSpinnerModule,\r\n    FarrisFormsModule,\r\n    ComboLookupModule,\r\n    FarrisTooltipModule\r\n  ],\r\n  declarations: [\r\n    QueryConditionComponent,\r\n    ConfigDialogComponent,\r\n    DatePickerComponent,\r\n    NumberRangeComponent,\r\n    SolutionSmartHelpComponent,\r\n    InputComponent,\r\n    DropDownListComponent,\r\n    SingleNumberComponent,\r\n    CheckBoxComponent,\r\n    ComboLookUpComponent,\r\n    RadioComponent,\r\n    InputGroupComponent,\r\n    ClearFieldsDirective,\r\n    LabelTextMultiDirective,\r\n    //é«çº§æ¨¡å¼ç»ä»¶\r\n    QueryconditionAdvancedComponent,\r\n    QueryconditionGroupComponent,\r\n    QueryconditionItemComponent\r\n  ],\r\n  entryComponents: [\r\n    ConfigDialogComponent,\r\n  ],\r\n  providers: [\r\n    SolutionService,\r\n    NotifyService,\r\n    ConvertorService,\r\n    //é«çº§æ¨¡å¼æå¡\r\n    StateService\r\n  ],\r\n  bootstrap: [QueryConditionComponent],\r\n  exports: [\r\n    QueryConditionComponent,\r\n    ConfigDialogComponent,\r\n    DatePickerComponent,\r\n    NumberRangeComponent,\r\n    SolutionSmartHelpComponent,\r\n    InputComponent,\r\n    DropDownListComponent,\r\n    SingleNumberComponent,\r\n    CheckBoxComponent,\r\n    ComboLookUpComponent,\r\n    RadioComponent,\r\n    InputGroupComponent\r\n  ]\r\n})\r\nexport class QueryConditionModule { }\r\n","\r\nexport class QuerySolutionExtendVo {\r\n    \r\n    id: string;\r\n\r\n    relatedId: string;\r\n\r\n    orgId: string;\r\n}","/**\r\n * æ­¤ç±»æ²¡æè¢«ä½¿ç¨\r\n * æ¯è¾ç¬¦ \r\n */\r\nexport enum CompareType{\r\n\r\n    /**\r\n     * ç­äº\r\n     */\r\n    // Equal=1,\r\n    Equal = 0,\r\n\r\n    /**\r\n     * å¤§äº\r\n     */\r\n    GreaterThan = 2,\r\n\r\n    /**\r\n     * å¤§äºæç­äº\r\n     */\r\n    GreaterThanOrEqual = 3,\r\n\r\n    /**\r\n     * å°äº\r\n     */\r\n    LessThan = 4,\r\n\r\n    /**\r\n     * å°äºæç­äº\r\n     */\r\n    LessThanOrEqual = 5, \r\n\r\n    /**\r\n     * ä¹é´\r\n     */\r\n    // BetWeen=6\r\n    Like = 6\r\n}","import { QueryCondition } from '../querycondition';\r\n\r\n/**\r\n * å­æ®µéç½®\r\n */\r\nexport class FieldConfig {\r\n\r\n  /**\r\n   * å­æ®µID\r\n   */\r\n  id?: string;\r\n\r\n  /**\r\n   * å­æ®µæ ç­¾ï¼å­æ®µç¼å·çå¯ä¸æ è¯\r\n   */\r\n  labelCode: string;\r\n\r\n  /**\r\n   * å­æ®µåç§°\r\n   */\r\n  name?: string;\r\n\r\n  /**\r\n   * æ¯å¦è¢«éä¸­\r\n   */\r\n  isChecked?: boolean;\r\n\r\n  /**\r\n   * æ¯å¦è¢«ç¦ç¨\r\n   */\r\n  isDisabled?: boolean;\r\n\r\n  /**\r\n   * å­æ®µä¸ºç©ºæ¶æç¤ºä¿¡æ¯\r\n   */\r\n  placeHolder?: string;\r\n  beginPlaceHolder?:string;\r\n  endPlaceHolder?:string;\r\n\r\n  control?: any;\r\n\r\n  value?: any;\r\n\r\n  visible?: boolean = true;\r\n\r\n  constructor(qc: QueryCondition) {\r\n    this.id = qc.id;\r\n    this.labelCode = qc.fieldCode;\r\n    this.name = qc.fieldName;\r\n  }\r\n\r\n\r\n}\r\n"],"names":["CompareType"],"mappings":"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"}
