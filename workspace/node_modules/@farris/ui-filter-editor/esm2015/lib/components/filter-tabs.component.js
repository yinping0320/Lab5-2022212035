/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-07-10 11:44:49
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-11-30 10:18:04
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
import { Component, EventEmitter, Output, Input } from '@angular/core';
export class FilterTabsComponent {
    constructor() {
        this.columns = [];
        this.conditions = [];
        this.showCode = false;
        this.showSql = false;
        this.fieldEditor = { type: 'select' };
        this.selectTabChange = new EventEmitter();
        this.enableExpress = false;
        this.enableFrontExpress = false;
        this.showExpress = new EventEmitter();
        this.insertType = 'below';
        /**
         * 当值类型为 value 时是否显示按钮，默认不显示
         */
        this.useCustomValue = false;
        this.currentTabIndex = 0;
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @param {?} index
     * @return {?}
     */
    showTab(index) {
        this.currentTabIndex = index;
        this.selectTabChange.emit(index);
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    showExpressDialog($event) {
        this.showExpress.emit($event);
    }
}
FilterTabsComponent.decorators = [
    { type: Component, args: [{
                selector: 'filter-tabs',
                template: `
    <ul class="nav nav-tabs" style="min-height: 38px" *ngIf="showCode || showSql">
        <li class="nav-item" style="    margin-left: 14px;">
            <a class="nav-link" [class.active]="currentTabIndex === 0"  (click)="showTab(0)">{{ 'filterEditor.designTab' | locale }}</a>
        </li>
        <li class="nav-item" *ngIf="showCode">
            <a class="nav-link" [class.active]="currentTabIndex === 1" (click)="showTab(1)">{{ 'filterEditor.jsonTab' | locale }}</a>
        </li>
        <li class="nav-item" *ngIf="showSql">
            <a class="nav-link" [class.active]="currentTabIndex === 2" (click)="showTab(2)">{{ 'filterEditor.sqlTab' | locale }}</a>
        </li>
    </ul>

    <ng-container *ngIf="currentTabIndex === 0">
        <filter-grid style="overflow: hidden;" [useCustomValue]="useCustomValue"
          [enableExpress]="enableExpress" [enableFrontExpress]="enableFrontExpress"
          class="d-flex flex-column flex-fill"  [fieldEditor]="fieldEditor" [insertType]="insertType"
          [conditions]="conditions" [columns]="columns" (showExpress)="showExpressDialog($event)"></filter-grid>
    </ng-container>
    <ng-container *ngIf="currentTabIndex === 1 && showCode">
        <filter-code [height]="height" [conditions]="conditions"></filter-code>
    </ng-container>
    <ng-container *ngIf="currentTabIndex === 2 && showSql">
        <filter-sql [height]="height" [conditions]="conditions"></filter-sql>
    </ng-container>

    `,
                styles: [`.nav-item { cursor: default;}
        .nav-item a.active {font-weight: bold;}
        `]
            }] }
];
/** @nocollapse */
FilterTabsComponent.ctorParameters = () => [];
FilterTabsComponent.propDecorators = {
    columns: [{ type: Input }],
    conditions: [{ type: Input }],
    height: [{ type: Input }],
    showCode: [{ type: Input }],
    showSql: [{ type: Input }],
    fieldEditor: [{ type: Input }],
    selectTabChange: [{ type: Output }],
    enableExpress: [{ type: Input }],
    enableFrontExpress: [{ type: Input }],
    showExpress: [{ type: Output }],
    insertType: [{ type: Input }],
    useCustomValue: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    FilterTabsComponent.prototype.columns;
    /** @type {?} */
    FilterTabsComponent.prototype.conditions;
    /** @type {?} */
    FilterTabsComponent.prototype.height;
    /** @type {?} */
    FilterTabsComponent.prototype.showCode;
    /** @type {?} */
    FilterTabsComponent.prototype.showSql;
    /** @type {?} */
    FilterTabsComponent.prototype.fieldEditor;
    /** @type {?} */
    FilterTabsComponent.prototype.selectTabChange;
    /** @type {?} */
    FilterTabsComponent.prototype.enableExpress;
    /** @type {?} */
    FilterTabsComponent.prototype.enableFrontExpress;
    /** @type {?} */
    FilterTabsComponent.prototype.showExpress;
    /** @type {?} */
    FilterTabsComponent.prototype.insertType;
    /**
     * 当值类型为 value 时是否显示按钮，默认不显示
     * @type {?}
     */
    FilterTabsComponent.prototype.useCustomValue;
    /** @type {?} */
    FilterTabsComponent.prototype.currentTabIndex;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLXRhYnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1maWx0ZXItZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvZmlsdGVyLXRhYnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQVFBLE9BQU8sRUFBRSxTQUFTLEVBQXVCLFlBQVksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBdUM1RixNQUFNLE9BQU8sbUJBQW1CO0lBa0I1QjtRQWhCUyxZQUFPLEdBQUcsRUFBRSxDQUFDO1FBQ2IsZUFBVSxHQUFzQixFQUFFLENBQUM7UUFFbkMsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixZQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ2hCLGdCQUFXLEdBQUcsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFDLENBQUM7UUFDL0Isb0JBQWUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ3RDLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLHVCQUFrQixHQUFHLEtBQUssQ0FBQztRQUMxQixnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDbEMsZUFBVSxHQUFvQixPQUFPLENBQUM7Ozs7UUFFdEMsbUJBQWMsR0FBRyxLQUFLLENBQUM7UUFFaEMsb0JBQWUsR0FBRyxDQUFDLENBQUM7SUFFSixDQUFDOzs7O0lBRWpCLFFBQVEsS0FBSyxDQUFDOzs7OztJQUVkLE9BQU8sQ0FBQyxLQUFhO1FBQ2pCLElBQUksQ0FBQyxlQUFlLEdBQUcsS0FBSyxDQUFDO1FBQzdCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Ozs7O0lBRUQsaUJBQWlCLENBQUMsTUFBTTtRQUNwQixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7WUFqRUosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxhQUFhO2dCQUN2QixRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBMEJUO3lCQUVHOztTQUVDO2FBRVI7Ozs7O3NCQUlJLEtBQUs7eUJBQ0wsS0FBSztxQkFDTCxLQUFLO3VCQUNMLEtBQUs7c0JBQ0wsS0FBSzswQkFDTCxLQUFLOzhCQUNMLE1BQU07NEJBQ04sS0FBSztpQ0FDTCxLQUFLOzBCQUNMLE1BQU07eUJBQ04sS0FBSzs2QkFFTCxLQUFLOzs7O0lBWk4sc0NBQXNCOztJQUN0Qix5Q0FBNEM7O0lBQzVDLHFDQUF3Qjs7SUFDeEIsdUNBQTBCOztJQUMxQixzQ0FBeUI7O0lBQ3pCLDBDQUF5Qzs7SUFDekMsOENBQStDOztJQUMvQyw0Q0FBK0I7O0lBQy9CLGlEQUFvQzs7SUFDcEMsMENBQTJDOztJQUMzQyx5Q0FBK0M7Ozs7O0lBRS9DLDZDQUFnQzs7SUFFaEMsOENBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogQEF1dGhvcjog55av54uC56eA5omNKEx1Y2FzIEh1YW5nKVxyXG4gKiBARGF0ZTogMjAxOS0wNy0xMCAxMTo0NDo0OVxyXG4gKiBATGFzdEVkaXRvcnM6IOeWr+eLguengOaJjShMdWNhcyBIdWFuZylcclxuICogQExhc3RFZGl0VGltZTogMjAxOS0xMS0zMCAxMDoxODowNFxyXG4gKiBAUVE6IDEwNTU4MTgyMzlcclxuICogQFZlcnNpb246IHYwLjAuMVxyXG4gKi9cclxuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIEhvc3RCaW5kaW5nLCBFdmVudEVtaXR0ZXIsIE91dHB1dCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRmlsdGVyQ29uZGl0aW9uIH0gZnJvbSAnQGZhcnJpcy91aS1jb21tb24vdHlwZXMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2ZpbHRlci10YWJzJyxcclxuICAgIHRlbXBsYXRlOiBgXHJcbiAgICA8dWwgY2xhc3M9XCJuYXYgbmF2LXRhYnNcIiBzdHlsZT1cIm1pbi1oZWlnaHQ6IDM4cHhcIiAqbmdJZj1cInNob3dDb2RlIHx8IHNob3dTcWxcIj5cclxuICAgICAgICA8bGkgY2xhc3M9XCJuYXYtaXRlbVwiIHN0eWxlPVwiICAgIG1hcmdpbi1sZWZ0OiAxNHB4O1wiPlxyXG4gICAgICAgICAgICA8YSBjbGFzcz1cIm5hdi1saW5rXCIgW2NsYXNzLmFjdGl2ZV09XCJjdXJyZW50VGFiSW5kZXggPT09IDBcIiAgKGNsaWNrKT1cInNob3dUYWIoMClcIj57eyAnZmlsdGVyRWRpdG9yLmRlc2lnblRhYicgfCBsb2NhbGUgfX08L2E+XHJcbiAgICAgICAgPC9saT5cclxuICAgICAgICA8bGkgY2xhc3M9XCJuYXYtaXRlbVwiICpuZ0lmPVwic2hvd0NvZGVcIj5cclxuICAgICAgICAgICAgPGEgY2xhc3M9XCJuYXYtbGlua1wiIFtjbGFzcy5hY3RpdmVdPVwiY3VycmVudFRhYkluZGV4ID09PSAxXCIgKGNsaWNrKT1cInNob3dUYWIoMSlcIj57eyAnZmlsdGVyRWRpdG9yLmpzb25UYWInIHwgbG9jYWxlIH19PC9hPlxyXG4gICAgICAgIDwvbGk+XHJcbiAgICAgICAgPGxpIGNsYXNzPVwibmF2LWl0ZW1cIiAqbmdJZj1cInNob3dTcWxcIj5cclxuICAgICAgICAgICAgPGEgY2xhc3M9XCJuYXYtbGlua1wiIFtjbGFzcy5hY3RpdmVdPVwiY3VycmVudFRhYkluZGV4ID09PSAyXCIgKGNsaWNrKT1cInNob3dUYWIoMilcIj57eyAnZmlsdGVyRWRpdG9yLnNxbFRhYicgfCBsb2NhbGUgfX08L2E+XHJcbiAgICAgICAgPC9saT5cclxuICAgIDwvdWw+XHJcblxyXG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImN1cnJlbnRUYWJJbmRleCA9PT0gMFwiPlxyXG4gICAgICAgIDxmaWx0ZXItZ3JpZCBzdHlsZT1cIm92ZXJmbG93OiBoaWRkZW47XCIgW3VzZUN1c3RvbVZhbHVlXT1cInVzZUN1c3RvbVZhbHVlXCJcclxuICAgICAgICAgIFtlbmFibGVFeHByZXNzXT1cImVuYWJsZUV4cHJlc3NcIiBbZW5hYmxlRnJvbnRFeHByZXNzXT1cImVuYWJsZUZyb250RXhwcmVzc1wiXHJcbiAgICAgICAgICBjbGFzcz1cImQtZmxleCBmbGV4LWNvbHVtbiBmbGV4LWZpbGxcIiAgW2ZpZWxkRWRpdG9yXT1cImZpZWxkRWRpdG9yXCIgW2luc2VydFR5cGVdPVwiaW5zZXJ0VHlwZVwiXHJcbiAgICAgICAgICBbY29uZGl0aW9uc109XCJjb25kaXRpb25zXCIgW2NvbHVtbnNdPVwiY29sdW1uc1wiIChzaG93RXhwcmVzcyk9XCJzaG93RXhwcmVzc0RpYWxvZygkZXZlbnQpXCI+PC9maWx0ZXItZ3JpZD5cclxuICAgIDwvbmctY29udGFpbmVyPlxyXG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImN1cnJlbnRUYWJJbmRleCA9PT0gMSAmJiBzaG93Q29kZVwiPlxyXG4gICAgICAgIDxmaWx0ZXItY29kZSBbaGVpZ2h0XT1cImhlaWdodFwiIFtjb25kaXRpb25zXT1cImNvbmRpdGlvbnNcIj48L2ZpbHRlci1jb2RlPlxyXG4gICAgPC9uZy1jb250YWluZXI+XHJcbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiY3VycmVudFRhYkluZGV4ID09PSAyICYmIHNob3dTcWxcIj5cclxuICAgICAgICA8ZmlsdGVyLXNxbCBbaGVpZ2h0XT1cImhlaWdodFwiIFtjb25kaXRpb25zXT1cImNvbmRpdGlvbnNcIj48L2ZpbHRlci1zcWw+XHJcbiAgICA8L25nLWNvbnRhaW5lcj5cclxuXHJcbiAgICBgLFxyXG4gICAgc3R5bGVzOiBbXHJcbiAgICAgICAgYC5uYXYtaXRlbSB7IGN1cnNvcjogZGVmYXVsdDt9XHJcbiAgICAgICAgLm5hdi1pdGVtIGEuYWN0aXZlIHtmb250LXdlaWdodDogYm9sZDt9XHJcbiAgICAgICAgYFxyXG4gICAgXVxyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIEZpbHRlclRhYnNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICAgIEBJbnB1dCgpIGNvbHVtbnMgPSBbXTtcclxuICAgIEBJbnB1dCgpIGNvbmRpdGlvbnM6IEZpbHRlckNvbmRpdGlvbltdID0gW107XHJcbiAgICBASW5wdXQoKSBoZWlnaHQ6IG51bWJlcjtcclxuICAgIEBJbnB1dCgpIHNob3dDb2RlID0gZmFsc2U7XHJcbiAgICBASW5wdXQoKSBzaG93U3FsID0gZmFsc2U7XHJcbiAgICBASW5wdXQoKSBmaWVsZEVkaXRvciA9IHsgdHlwZTogJ3NlbGVjdCd9O1xyXG4gICAgQE91dHB1dCgpIHNlbGVjdFRhYkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBJbnB1dCgpIGVuYWJsZUV4cHJlc3MgPSBmYWxzZTtcclxuICAgIEBJbnB1dCgpIGVuYWJsZUZyb250RXhwcmVzcyA9IGZhbHNlO1xyXG4gICAgQE91dHB1dCgpIHNob3dFeHByZXNzID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQElucHV0KCkgaW5zZXJ0VHlwZTogJ2Fib3ZlJ3wnYmVsb3cnID0gJ2JlbG93JztcclxuICAgIC8qKiDlvZPlgLznsbvlnovkuLogdmFsdWUg5pe25piv5ZCm5pi+56S65oyJ6ZKu77yM6buY6K6k5LiN5pi+56S6ICovXHJcbiAgICBASW5wdXQoKSB1c2VDdXN0b21WYWx1ZSA9IGZhbHNlO1xyXG5cclxuICAgIGN1cnJlbnRUYWJJbmRleCA9IDA7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgICBuZ09uSW5pdCgpIHsgfVxyXG5cclxuICAgIHNob3dUYWIoaW5kZXg6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMuY3VycmVudFRhYkluZGV4ID0gaW5kZXg7XHJcbiAgICAgICAgdGhpcy5zZWxlY3RUYWJDaGFuZ2UuZW1pdChpbmRleCk7XHJcbiAgICB9XHJcblxyXG4gICAgc2hvd0V4cHJlc3NEaWFsb2coJGV2ZW50KSB7XHJcbiAgICAgICAgdGhpcy5zaG93RXhwcmVzcy5lbWl0KCRldmVudCk7XHJcbiAgICB9XHJcbn1cclxuIl19