/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @Company: Inspur
 * @Version: v0.0.1
 * @Date: 2019-04-09 11:03:49
 * @LastEditTime: 2019-11-30 10:15:14
 */
import { Component, HostBinding, Input, Output, EventEmitter, Injector, Optional, ChangeDetectorRef } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { FilterService } from './../services/filter.service';
import { Compare } from '@farris/ui-common/types';
import { LocaleService } from '@farris/ui-locale';
var FilterEditorComponent = /** @class */ (function () {
    function FilterEditorComponent(sanitizer, filterService, injector) {
        var _this = this;
        this.sanitizer = sanitizer;
        this.filterService = filterService;
        this.injector = injector;
        this.tabIndex = 0;
        this.columns = [];
        this.conditions = [];
        this.showCode = false;
        this.showSql = false;
        this.enableExpress = false;
        this.enableFrontExpress = false;
        this.fieldEditor = { type: 'select', options: {} };
        this.insertType = 'below';
        /**
         * 当值类型为 value 时是否显示按钮，默认不显示
         */
        this.useCustomValue = false;
        this.showExpress = new EventEmitter();
        this.cls = 'f-utils-flex-column f-utils-absolute-all';
        this.localeService = null;
        this.filterService.conditionsChanged.subscribe((/**
         * @param {?} conditionList
         * @return {?}
         */
        function (conditionList) {
            _this.conditions = conditionList;
        }));
        if (this.injector) {
            this.localeService = this.injector.get(LocaleService, null);
            this.cd = this.injector.get(ChangeDetectorRef);
        }
    }
    /**
     * @return {?}
     */
    FilterEditorComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.conditions && this.conditions.length) {
            this.conditions = this.conditions.map((/**
             * @param {?} con
             * @return {?}
             */
            function (con) {
                /** @type {?} */
                var cp = parseInt('' + con.compare, 10);
                if (cp === Compare.In || cp === Compare.NotIn) {
                    con.value = con.value.replace(/\r\n/g, ',');
                }
                return con;
            }));
        }
    };
    /**
     * @param {?} index
     * @return {?}
     */
    FilterEditorComponent.prototype.onTabChange = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        this.tabIndex = index;
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    FilterEditorComponent.prototype.onShowExpress = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        $event.instance = this;
        this.showExpress.emit($event);
    };
    /**
     * @return {?}
     */
    FilterEditorComponent.prototype.validation = /**
     * @return {?}
     */
    function () {
        return this.filterService.isValid(this.conditions, this.localeService);
    };
    FilterEditorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'filter-editor',
                    template: "\n        <filter-tabs\n            class=\"f-utils-fill-flex-column\"\n            [showCode]=\"showCode\"\n            [showSql]=\"showSql\"\n            [columns]=\"columns\"\n            [height]=\"height\"\n            [enableExpress]=\"enableExpress\"\n            [enableFrontExpress]=\"enableFrontExpress\"\n            [conditions]=\"conditions\"\n            [fieldEditor]=\"fieldEditor\"\n            (showExpress)=\"onShowExpress($event)\"\n            (selectTabChange)=\"onTabChange($event)\"\n            [insertType]=\"insertType\"\n            [useCustomValue]=\"useCustomValue\">\n        </filter-tabs>\n    "
                }] }
    ];
    /** @nocollapse */
    FilterEditorComponent.ctorParameters = function () { return [
        { type: DomSanitizer },
        { type: FilterService },
        { type: Injector, decorators: [{ type: Optional }] }
    ]; };
    FilterEditorComponent.propDecorators = {
        columns: [{ type: Input }],
        conditions: [{ type: Input }],
        height: [{ type: Input }],
        showCode: [{ type: Input }],
        showSql: [{ type: Input }],
        enableExpress: [{ type: Input }],
        enableFrontExpress: [{ type: Input }],
        fieldEditor: [{ type: Input }],
        insertType: [{ type: Input }],
        useCustomValue: [{ type: Input }],
        showExpress: [{ type: Output }],
        cls: [{ type: HostBinding, args: ['class',] }]
    };
    return FilterEditorComponent;
}());
export { FilterEditorComponent };
if (false) {
    /** @type {?} */
    FilterEditorComponent.prototype.tabIndex;
    /** @type {?} */
    FilterEditorComponent.prototype.columns;
    /** @type {?} */
    FilterEditorComponent.prototype.conditions;
    /** @type {?} */
    FilterEditorComponent.prototype.height;
    /** @type {?} */
    FilterEditorComponent.prototype.showCode;
    /** @type {?} */
    FilterEditorComponent.prototype.showSql;
    /** @type {?} */
    FilterEditorComponent.prototype.enableExpress;
    /** @type {?} */
    FilterEditorComponent.prototype.enableFrontExpress;
    /** @type {?} */
    FilterEditorComponent.prototype.fieldEditor;
    /** @type {?} */
    FilterEditorComponent.prototype.insertType;
    /**
     * 当值类型为 value 时是否显示按钮，默认不显示
     * @type {?}
     */
    FilterEditorComponent.prototype.useCustomValue;
    /** @type {?} */
    FilterEditorComponent.prototype.showExpress;
    /** @type {?} */
    FilterEditorComponent.prototype.cls;
    /** @type {?} */
    FilterEditorComponent.prototype.localeService;
    /** @type {?} */
    FilterEditorComponent.prototype.cd;
    /**
     * @type {?}
     * @private
     */
    FilterEditorComponent.prototype.sanitizer;
    /**
     * @type {?}
     * @private
     */
    FilterEditorComponent.prototype.filterService;
    /**
     * @type {?}
     * @private
     */
    FilterEditorComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,