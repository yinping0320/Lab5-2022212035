/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @Company: Inspur
 * @Version: v0.0.1
 * @Date: 2019-04-09 11:03:50
 * @LastEditTime: 2020-12-24 15:11:51
 */
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { LookupModule } from '@farris/ui-lookup';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { MessagerModule } from '@farris/ui-messager';
import { FarrisCommonModule } from '@farris/ui-common';
import { InputGroupModule } from '@farris/ui-input-group';
import { FilterComponent } from './filter.component';
import { FilterSqlCodeComponent } from './components/filter-sql.component';
import { FilterCodeComponent } from './components/filter-code.component';
import { FilterFooterComponent } from './components/filter-footer.component';
import { FilterTabsComponent } from './components/filter-tabs.component';
import { FilterEditorComponent } from './components/filter-editor.component';
import { FilterGridComponent } from './components/filter-grid.component';
import { LocaleModule } from '@farris/ui-locale';
import { ComboLookupModule } from '@farris/ui-combo-lookup';
import { FarrisFormsModule } from '@farris/ui-forms';
var FilterModule = /** @class */ (function () {
    function FilterModule() {
    }
    FilterModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        FarrisCommonModule,
                        MessagerModule.forRoot(),
                        PerfectScrollbarModule,
                        FarrisDialogModule,
                        LookupModule,
                        InputGroupModule,
                        LocaleModule.forRoot(),
                        ComboLookupModule,
                        FarrisFormsModule
                    ],
                    exports: [
                        FilterComponent,
                        FilterEditorComponent,
                        FilterGridComponent,
                        FilterFooterComponent
                    ],
                    declarations: [
                        FilterTabsComponent,
                        FilterGridComponent,
                        FilterFooterComponent,
                        FilterEditorComponent,
                        FilterCodeComponent,
                        FilterSqlCodeComponent,
                        FilterComponent
                    ],
                    providers: [],
                    entryComponents: [
                        FilterEditorComponent
                    ]
                },] }
    ];
    return FilterModule;
}());
export { FilterModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktZmlsdGVyLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi9maWx0ZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQVVBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDdEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRTFELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUM3RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUM3RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUV6RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFckQ7SUFBQTtJQWtDNEIsQ0FBQzs7Z0JBbEM1QixRQUFRLFNBQUM7b0JBQ04sT0FBTyxFQUFFO3dCQUNMLFlBQVk7d0JBQ1osV0FBVzt3QkFDWCxrQkFBa0I7d0JBQ2xCLGNBQWMsQ0FBQyxPQUFPLEVBQUU7d0JBQ3hCLHNCQUFzQjt3QkFDdEIsa0JBQWtCO3dCQUNsQixZQUFZO3dCQUNaLGdCQUFnQjt3QkFDaEIsWUFBWSxDQUFDLE9BQU8sRUFBRTt3QkFDdEIsaUJBQWlCO3dCQUNqQixpQkFBaUI7cUJBQ3BCO29CQUNELE9BQU8sRUFBRTt3QkFDTCxlQUFlO3dCQUNmLHFCQUFxQjt3QkFDckIsbUJBQW1CO3dCQUNuQixxQkFBcUI7cUJBQ3hCO29CQUNELFlBQVksRUFBRTt3QkFDVixtQkFBbUI7d0JBQ25CLG1CQUFtQjt3QkFDbkIscUJBQXFCO3dCQUNyQixxQkFBcUI7d0JBQ3JCLG1CQUFtQjt3QkFDbkIsc0JBQXNCO3dCQUN0QixlQUFlO3FCQUNsQjtvQkFDRCxTQUFTLEVBQUUsRUFBRTtvQkFDYixlQUFlLEVBQUU7d0JBQ2IscUJBQXFCO3FCQUN4QjtpQkFDSjs7SUFDMkIsbUJBQUM7Q0FBQSxBQWxDN0IsSUFrQzZCO1NBQWhCLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLypcclxuICogQEF1dGhvcjog55av54uC56eA5omNKEx1Y2FzIEh1YW5nKVxyXG4gKiBATGFzdEVkaXRvcnM6IOeWr+eLguengOaJjShMdWNhcyBIdWFuZylcclxuICogQENvbXBhbnk6IEluc3B1clxyXG4gKiBAVmVyc2lvbjogdjAuMC4xXHJcbiAqIEBEYXRlOiAyMDE5LTA0LTA5IDExOjAzOjUwXHJcbiAqIEBMYXN0RWRpdFRpbWU6IDIwMjAtMTItMjQgMTU6MTE6NTFcclxuICovXHJcblxyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuXHJcbmltcG9ydCB7IExvb2t1cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9va3VwJztcclxuaW1wb3J0IHsgRmFycmlzRGlhbG9nTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kaWFsb2cnO1xyXG5pbXBvcnQgeyBQZXJmZWN0U2Nyb2xsYmFyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1wZXJmZWN0LXNjcm9sbGJhcic7XHJcbmltcG9ydCB7IE1lc3NhZ2VyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1tZXNzYWdlcic7XHJcbmltcG9ydCB7IEZhcnJpc0NvbW1vbk1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tbW9uJztcclxuaW1wb3J0IHsgSW5wdXRHcm91cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktaW5wdXQtZ3JvdXAnO1xyXG5cclxuaW1wb3J0IHsgRmlsdGVyQ29tcG9uZW50IH0gZnJvbSAnLi9maWx0ZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRmlsdGVyU3FsQ29kZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9maWx0ZXItc3FsLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEZpbHRlckNvZGVDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZmlsdGVyLWNvZGUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRmlsdGVyRm9vdGVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2ZpbHRlci1mb290ZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRmlsdGVyVGFic0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9maWx0ZXItdGFicy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBGaWx0ZXJFZGl0b3JDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZmlsdGVyLWVkaXRvci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBGaWx0ZXJHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2ZpbHRlci1ncmlkLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEZpbHRlclNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2ZpbHRlci5zZXJ2aWNlJztcclxuaW1wb3J0IHsgTG9jYWxlTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2NhbGUnO1xyXG5pbXBvcnQgeyBDb21ib0xvb2t1cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tYm8tbG9va3VwJztcclxuaW1wb3J0IHsgRmFycmlzRm9ybXNNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWZvcm1zJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgICAgIEZhcnJpc0NvbW1vbk1vZHVsZSxcclxuICAgICAgICBNZXNzYWdlck1vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgUGVyZmVjdFNjcm9sbGJhck1vZHVsZSxcclxuICAgICAgICBGYXJyaXNEaWFsb2dNb2R1bGUsXHJcbiAgICAgICAgTG9va3VwTW9kdWxlLFxyXG4gICAgICAgIElucHV0R3JvdXBNb2R1bGUsXHJcbiAgICAgICAgTG9jYWxlTW9kdWxlLmZvclJvb3QoKSxcclxuICAgICAgICBDb21ib0xvb2t1cE1vZHVsZSxcclxuICAgICAgICBGYXJyaXNGb3Jtc01vZHVsZVxyXG4gICAgXSxcclxuICAgIGV4cG9ydHM6IFtcclxuICAgICAgICBGaWx0ZXJDb21wb25lbnQsXHJcbiAgICAgICAgRmlsdGVyRWRpdG9yQ29tcG9uZW50LFxyXG4gICAgICAgIEZpbHRlckdyaWRDb21wb25lbnQsXHJcbiAgICAgICAgRmlsdGVyRm9vdGVyQ29tcG9uZW50XHJcbiAgICBdLFxyXG4gICAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICAgICAgRmlsdGVyVGFic0NvbXBvbmVudCxcclxuICAgICAgICBGaWx0ZXJHcmlkQ29tcG9uZW50LFxyXG4gICAgICAgIEZpbHRlckZvb3RlckNvbXBvbmVudCxcclxuICAgICAgICBGaWx0ZXJFZGl0b3JDb21wb25lbnQsXHJcbiAgICAgICAgRmlsdGVyQ29kZUNvbXBvbmVudCxcclxuICAgICAgICBGaWx0ZXJTcWxDb2RlQ29tcG9uZW50LFxyXG4gICAgICAgIEZpbHRlckNvbXBvbmVudFxyXG4gICAgXSxcclxuICAgIHByb3ZpZGVyczogW10sXHJcbiAgICBlbnRyeUNvbXBvbmVudHM6IFtcclxuICAgICAgICBGaWx0ZXJFZGl0b3JDb21wb25lbnRcclxuICAgIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEZpbHRlck1vZHVsZSB7IH1cclxuIl19