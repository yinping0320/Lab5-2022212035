import '../utils';
import { openBlock, createBlock, Fragment, createCommentVNode, withDirectives, createVNode, renderSlot, vShow } from 'vue';

var script = {
  name: 'fm-tab',
  inject: {
    rootTabs: {
      from: 'rootTabs',
      "default": function _default() {
        /* istanbul ignore next */
        return this.$parent;
      }
    }
  },
  props: {
    title: {
      type: String
    },
    name: {
      type: [Number, String]
    },
    disabled: {
      type: Boolean
    },
    icon: {
      type: String
    },
    iconColor: {
      type: String
    },
    dot: {
      type: Boolean,
      "default": false
    },
    badge: {
      type: [String, Number]
    },
    activeIcon: {
      type: String
    },
    activeIconColor: {
      type: String
    },
    iconPrefix: {
      type: String
    }
  },
  data: function data() {
    return {
      inited: false
    };
  },
  computed: {
    active: function active() {
      var active = this.rootTabs.currentName === this.name;

      if (active) {
        this.inited = true;
      }

      return active;
    },
    transitionName: function transitionName() {
      if (this.rootTabs.animated) {
        return this.rootTabs.prevIndex > this.rootTabs.currentIndex ? 'fm-tab-slide-right' : 'fm-tab-slide-left';
      } else {
        return '';
      }
    }
  },
  watch: {
    title: function title() {
      this.rootTabs.$forceUpdate();
    },
    disabled: function disabled() {
      this.rootTabs.$forceUpdate();
    },
    icon: function icon() {
      this.rootTabs.$forceUpdate();
    },
    iconColor: function iconColor() {
      this.rootTabs.$forceUpdate();
    }
  },
  created: function created() {
    if (!this.rootTabs.lazyRender) {
      this.inited = true;
    }

    this.rootTabs.$_addPane(this);
  },
  unmounted: function unmounted() {
    this.rootTabs.$_removePane(this);
  }
};

function render(_ctx, _cache, $props, $setup, $data, $options) {
  return (openBlock(), createBlock(Fragment, null, [
    createCommentVNode(" <transition :name=\"transitionName\">\r\n</transition> "),
    withDirectives(createVNode("div", {
      class: "fm-tab-pane",
      role: "tabpanel",
      tab: $props.name
    }, [
      ($data.inited)
        ? renderSlot(_ctx.$slots, "default", { key: 0 })
        : createCommentVNode("v-if", true)
    ], 8 /* PROPS */, ["tab"]), [
      [vShow, $options.active]
    ])
  ], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))
}

script.render = render;
script.__file = "packages/tabs/src/tab/index.vue";

script.install = function (app) {
  app.component(script.name, script);
};

export default script;
export { script as Tab };
