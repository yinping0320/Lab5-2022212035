import { computed, resolveComponent, openBlock, createBlock, withModifiers, renderSlot, createVNode, createCommentVNode, toDisplayString } from 'vue';
import { isDef } from '../utils';
import Icon from '../icon';

var _components;
var script = {
  name: 'fm-cell',
  components: (_components = {}, _components[Icon.name] = Icon, _components),
  props: {
    title: {
      type: [String, Number]
    },
    value: {
      type: [String, Number]
    },
    label: {
      type: [String, Number]
    },
    valueClass: {
      type: String
    },
    titleClass: {
      type: String
    },
    border: {
      type: Boolean,
      "default": true
    },
    required: {
      type: Boolean,
      "default": false
    },
    center: {
      type: Boolean,
      "default": false
    },
    isLink: {
      type: Boolean,
      "default": false
    },
    clickable: {
      type: Boolean,
      "default": false
    },
    leftIcon: [String, Boolean],
    rightIcon: [String, Boolean],
    extra: [String, Boolean]
  },
  setup: function setup(props, _ref) {
    var slots = _ref.slots;
    var showTitle = computed(function () {
      return props.title || slots.title;
    });
    var showValue = computed(function () {
      return props.value || isDef(props.value) || slots["default"];
    });
    var showLabel = computed(function () {
      return props.label || slots.label;
    });
    return {
      showTitle: showTitle,
      showLabel: showLabel,
      showValue: showValue
    };
  }
};

var _hoisted_1 = {
  "class": "fm-cell-title-text"
};
var _hoisted_2 = {
  key: 0,
  "class": "fm-cell-label"
};
var _hoisted_3 = {
  key: 0,
  style: {
    "padding-left": "4px"
  }
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_fm_icon = resolveComponent("fm-icon");

  return openBlock(), createBlock("div", {
    "class": ["fm-cell", {
      'fm-cell-noborder': !$props.border,
      'fm-cell-required': $props.required,
      'fm-cell-center': $props.center,
      'fm-cell-clickable': $props.clickable
    }]
  }, [$props.leftIcon || _ctx.$slots['left-icon'] ? (openBlock(), createBlock("div", {
    key: 0,
    "class": "fm-cell-left-icon",
    onClick: _cache[1] || (_cache[1] = withModifiers(function ($event) {
      return _ctx.$emit('leftIconClick');
    }, ["stop"]))
  }, [renderSlot(_ctx.$slots, "left-icon", {}, function () {
    return [createVNode(_component_fm_icon, {
      name: $props.leftIcon
    }, null, 8
    /* PROPS */
    , ["name"])];
  })])) : createCommentVNode("v-if", true), $setup.showTitle ? (openBlock(), createBlock("div", {
    key: 1,
    "class": ["fm-cell-title", [$props.titleClass]]
  }, [renderSlot(_ctx.$slots, "title", {}, function () {
    return [createVNode("span", _hoisted_1, toDisplayString($props.title), 1
    /* TEXT */
    )];
  }), $setup.showLabel ? (openBlock(), createBlock("div", _hoisted_2, [renderSlot(_ctx.$slots, "label", {}, function () {
    return [createVNode("span", null, toDisplayString($props.label), 1
    /* TEXT */
    )];
  })])) : createCommentVNode("v-if", true)], 2
  /* CLASS */
  )) : createCommentVNode("v-if", true), $setup.showValue ? (openBlock(), createBlock("div", {
    key: 2,
    "class": ["fm-cell-value", [$props.valueClass, !$setup.showTitle ? 'fm-cell-value-alone' : '']]
  }, [renderSlot(_ctx.$slots, "default", {}, function () {
    return [createVNode("span", null, toDisplayString($props.value), 1
    /* TEXT */
    )];
  })], 2
  /* CLASS */
  )) : createCommentVNode("v-if", true), $props.rightIcon || _ctx.$slots['right-icon'] || $props.isLink ? (openBlock(), createBlock("div", {
    key: 3,
    "class": "fm-cell-right-icon",
    onClick: _cache[2] || (_cache[2] = function ($event) {
      return _ctx.$emit('rightIconClick');
    })
  }, [renderSlot(_ctx.$slots, "right-icon", {}, function () {
    return [createCommentVNode(" <span class=\"fm-icon fm-icon-s-arrow\"></span> "), createVNode(_component_fm_icon, {
      name: $props.rightIcon ? $props.rightIcon : 's-arrow'
    }, null, 8
    /* PROPS */
    , ["name"])];
  })])) : createCommentVNode("v-if", true), $props.extra || _ctx.$slots.extra ? (openBlock(), createBlock("div", {
    key: 4,
    "class": "fm-cell-extra",
    onClick: _cache[3] || (_cache[3] = function ($event) {
      return _ctx.$emit('extraClick');
    })
  }, [renderSlot(_ctx.$slots, "extra", {}, function () {
    return [$props.extra ? (openBlock(), createBlock("span", _hoisted_3, toDisplayString($props.extra), 1
    /* TEXT */
    )) : createCommentVNode("v-if", true)];
  })])) : createCommentVNode("v-if", true)], 2
  /* CLASS */
  );
}

script.render = render;
script.__file = "packages/cell/src/index.vue";

script.install = function (app) {
  app.component(script.name, script);
};

export default script;
export { script as Cell };
