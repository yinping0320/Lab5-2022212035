import { openBlock, createBlock, renderSlot, createCommentVNode, toDisplayString, createVNode, createTextVNode } from 'vue';

var script = {
  name: 'fm-navbar',
  props: {
    title: {
      type: String
    },
    fixed: {
      type: Boolean,
      "default": false
    },
    leftText: {
      type: String
    },
    rightText: {
      type: String
    },
    leftArrow: {
      type: Boolean,
      "default": true
    },
    border: {
      type: Boolean,
      "default": false
    },
    className: {
      type: String
    }
  },
  data: function data() {
    return {};
  },
  methods: {
    onClickLeft: function onClickLeft(event) {
      this.$emit('click-left', event);
    },
    onClickRight: function onClickRight(event) {
      this.$emit('click-right', event);
    }
  }
};

const _hoisted_1 = {
  key: 0,
  class: "fm-navbar-left-arrow fm-icon fm-icon-s-arrow-left"
};
const _hoisted_2 = {
  key: 1,
  class: "fm-navbar-text"
};
const _hoisted_3 = { class: "fm-navbar-title" };
const _hoisted_4 = { class: "fm-navbar-text" };

function render(_ctx, _cache, $props, $setup, $data, $options) {
  return (openBlock(), createBlock("div", {
    class: ["fm-navbar", [
    $props.fixed? 'fm-navbar-fixed':'',
    $props.border? 'fm-navbar-border-bottom':'',
    $props.className
  ]]
  }, [
    ($props.leftArrow || $props.leftText)
      ? (openBlock(), createBlock("div", {
          key: 0,
          class: ["fm-navbar-left", {'fm-navbar-left-padding':$props.leftArrow}],
          onClick: _cache[1] || (_cache[1] = $event => ($options.onClickLeft($event)))
        }, [
          renderSlot(_ctx.$slots, "left", {}, () => [
            ($props.leftArrow)
              ? (openBlock(), createBlock("span", _hoisted_1))
              : createCommentVNode("v-if", true),
            ($props.leftText)
              ? (openBlock(), createBlock("span", _hoisted_2, toDisplayString($props.leftText), 1 /* TEXT */))
              : createCommentVNode("v-if", true)
          ])
        ], 2 /* CLASS */))
      : createCommentVNode("v-if", true),
    createVNode("div", _hoisted_3, [
      renderSlot(_ctx.$slots, "title", {}, () => [
        createTextVNode(toDisplayString($props.title), 1 /* TEXT */)
      ])
    ]),
    createVNode("div", {
      class: "fm-navbar-right",
      onClick: _cache[2] || (_cache[2] = $event => ($options.onClickRight($event)))
    }, [
      renderSlot(_ctx.$slots, "right", {}, () => [
        createVNode("span", _hoisted_4, toDisplayString($props.rightText), 1 /* TEXT */)
      ])
    ])
  ], 2 /* CLASS */))
}

script.render = render;
script.__file = "packages/navbar/src/navbar.vue";

script.install = function (app) {
  app.component(script.name, script);
};

export default script;
export { script as Navbar };
