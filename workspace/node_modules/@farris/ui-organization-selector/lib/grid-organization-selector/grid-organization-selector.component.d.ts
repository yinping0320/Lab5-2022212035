import { OnInit, AfterViewInit, ElementRef, EventEmitter, Injector, Renderer2 } from '@angular/core';
import { CommonUtils, RuntimeStateService } from '@farris/ui-common';
import { DatagridBaseEditorDirective } from '@farris/ui-datagrid-editors';
import { OrganizationSelectorComponent } from '../organization-selector.component';
export declare class GridOrganizationSelectorComponent extends DatagridBaseEditorDirective implements OnInit, AfterViewInit {
    private rts;
    utils: CommonUtils;
    instance: OrganizationSelectorComponent & {
        clear: EventEmitter<any>;
        selectedData: EventEmitter<any>;
    };
    bindingData: any;
    constructor(render: Renderer2, el: ElementRef, rts: RuntimeStateService, utils: CommonUtils, injector: Injector);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    lookupFieldMap: (helpData: any, mapFields: any, dataObj: any) => void;
    updateControlValue(selectedRow: any): void;
    inputClear(): void;
    tagRemoved(removedItem: {
        deleteItem: any;
        deleteIndex: number;
        selections: Array<any>;
    }): void;
    selectionsChange(changeData: {
        info: string;
        data: Array<any>;
    }): void;
    formSelectedRowData(): any[];
    private eventPrams;
}
export declare const OrganizationSelectorDataGridEditorProvider: {
    provide: import("@angular/core").InjectionToken<{}>;
    useValue: {
        name: string;
        value: typeof GridOrganizationSelectorComponent;
    };
    multi: boolean;
};
