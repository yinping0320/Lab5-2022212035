import { OnInit, AfterViewInit, ChangeDetectorRef, OnDestroy, Injector } from '@angular/core';
import { ApiService } from '../../utils/api.service';
import { FavoritesTool } from '../../utils/favorites.tool';
import { StateMgrTool } from '../../utils/state.mgr.tool';
export declare class FavoritesComponent implements OnInit, AfterViewInit, OnDestroy {
    private apiService;
    private favoritesTool;
    private stateMgr;
    private cdr;
    private injector;
    primaryField: string;
    multiSelect: boolean;
    filterType: string;
    disableOrgList: string[];
    allChecked: boolean;
    selections: any[];
    allIndexId: string;
    noDataImg: string;
    items: any[];
    favoritesList: any[];
    private loadingService;
    private selectionsSub;
    private favoritesSub;
    constructor(apiService: ApiService, favoritesTool: FavoritesTool, stateMgr: StateMgrTool, cdr: ChangeDetectorRef, injector: Injector);
    ngOnDestroy(): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    assembleData(): void;
    deleteFromFavorites(e: any, item: any): void;
    toggleAll(e: any): void;
    toggleOne(data: any, e: any): void;
    /**
     * 用于数据展示
     */
    loadFavoritesList(): void;
    /**
     * 全选后处理
     * @param dataArr 全选的值
     */
    checkAll(): void;
    /**
     * 全部取消
     * @param dataArr 取消的数据
     * @returns void
     */
    unCheckAll(): void;
    /**
     * 当前行选中
     * @param data 当前行的数据（）
     */
    private selectLine;
    /**
     * 单选取消选中
     * @param data 取消选中行
     */
    private unSelectLine;
    private setChecked;
    private emitSelections;
    toggleFavorites(e: any, item: any): void;
    /**
     * 全部取消勾选
     */
    clearCheckeds(): void;
    /**
     * 选中并插入当前行数据到右侧
     * @param data 当前行的数据
     * @param collection 暂存当前数据的集合
     */
    _insertOneIntoSelections(data: any): void;
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     */
    toggleChecked(): void;
    private isAllChecked;
    trackByFn(index: any, item: any): any;
}
