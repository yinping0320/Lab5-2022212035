/**
 * @fileoverview added by tsickle
 * Generated from: lib/selections/sl.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, ChangeDetectorRef, Injector, NgZone } from '@angular/core';
import { ApiService } from '../../utils/api.service';
import * as _ from 'lodash-es';
import { FavoritesTool } from '../../utils/favorites.tool';
import { ChangeType } from '../../utils/index.type';
import { CommonUtil } from '../../utils/common.tool';
import { StateMgrTool } from '../../utils/state.mgr.tool';
import { LocaleService } from '@farris/ui-locale';
import { ORGANIZATION_SELECTOR_LOCALE } from '../../utils/locale';
export class SelectionComponent {
    /**
     * @param {?} apiService
     * @param {?} cdr
     * @param {?} favoritesTool
     * @param {?} injector
     * @param {?} ngZone
     * @param {?} stateMgr
     */
    constructor(apiService, cdr, favoritesTool, injector, ngZone, stateMgr) {
        this.apiService = apiService;
        this.cdr = cdr;
        this.favoritesTool = favoritesTool;
        this.injector = injector;
        this.ngZone = ngZone;
        this.stateMgr = stateMgr;
        this.openedChange = new EventEmitter();
        this.datas = [];
        this.items = [];
        this.pageIndex = 0;
        this.pageSize = 5;
        this.moreText = '';
        this.localeService = null;
        this.moreDataText = '';
        this.noneDataText = '';
        this.cdr = this.injector.get(ChangeDetectorRef);
        this.localeService = this.injector.get(LocaleService);
        if (!this.localeService.langData['organizationSelector']) {
            this.localeService.setLocaleData(ORGANIZATION_SELECTOR_LOCALE);
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.selectionsSub.unsubscribe();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.selectionsSub = this.stateMgr.selectionsSubject.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        data => {
            this.pageIndex = 0;
            if (data.changeType === ChangeType.ValueChanged) {
                this.datas = _.cloneDeep(data.value);
            }
            else if (data.changeType === ChangeType.Remove) {
                this.datas = this.datas.filter((/**
                 * @param {?} item
                 * @return {?}
                 */
                item => item[this.primaryField] !== data.value[this.primaryField]));
            }
            else if (data.changeType === ChangeType.Append) {
                if (CommonUtil.findIndex(data.value[this.primaryField], this.primaryField, this.datas) === -1) {
                    this.datas.push(data.value);
                }
            }
            this.items = this.datas.slice(this.pageIndex, this.pageSize);
            if (this.datas.length < 1) {
                this.moreText = this.noneDataText;
            }
            else {
                if (this.items.length < this.datas.length) {
                    this.moreText = this.moreDataText;
                }
                else {
                    this.moreText = null;
                }
            }
            this.cdr.detectChanges();
        }));
        this.moreDataText = this.localeService.getValue("organizationSelector.tabCommon.more");
        this.noneDataText = this.localeService.getValue("organizationSelector.tabCommon.noMore");
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
    }
    /**
     * @return {?}
     */
    openGroupDialog() {
        this.openedChange.emit(true);
    }
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    trackByFn(index, item) {
        return index;
    }
    /**
     * @return {?}
     */
    loadMore() {
        if (this.pageIndex < this.datas.length) {
            this.pageIndex += 1;
            /** @type {?} */
            const currentPageIndex = this.pageIndex * this.pageSize;
            /** @type {?} */
            const currentItems = this.datas.slice(currentPageIndex, currentPageIndex + this.pageSize);
            this.items = this.items.concat(currentItems);
            if (this.items.length && this.items.length === this.datas.length) {
                this.moreText = null;
            }
            this.cdr.detectChanges;
        }
    }
    /**
     * @param {?} e
     * @param {?} data
     * @param {?} i
     * @return {?}
     */
    removeItem(e, data, i) {
        this.stateMgr.emitSelections(data, ChangeType.Remove, 'selection');
        if (i !== 0) {
            e.stopPropagation();
            e.cancelBubble = true;
        }
    }
}
SelectionComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-selection',
                template: "<div class=\"selections-content\">\r\n    <perfect-scrollbar style=\"max-height: 340px;min-height: 40px;\">\r\n        <ng-container *ngFor=\"let item of items; let i = index;trackBy: trackByFn\">\r\n            <div class=\"selections-blank-4\"></div>\r\n            <div class=\"selections-item\">\r\n                <span class=\"si-icon-circle\">{{ i + 1 }}</span>\r\n                <dl>\r\n                    <dt>{{ item.name }}</dt>\r\n                    <dd title=\"{{item.orgAllPath}}\">{{ item.orgAllPath }}</dd>\r\n                </dl>\r\n                <span class=\"f-icon f-icon-minus-circle deleteBtn\" (click)=\"removeItem($event, item, i)\"></span>\r\n            </div>\r\n        </ng-container>\r\n        <div class=\"selections-more\">\r\n            <span (click)=\"loadMore()\"\r\n                [ngStyle]=\"{'color': moreText === moreDataText ? '#2A87FF' : '#ded5d5', 'cursor': moreText === moreDataText ? 'pointer' : 'default'}\">{{\r\n                moreText }}</span>\r\n            <div class=\"saved-group\" (click)=\"openGroupDialog()\" *ngIf=\"enableGroup\">\r\n                <span class=\"f-icon f-icon-team\"></span>{{'organizationSelector.group.saveGroup' | locale}}\r\n            </div>\r\n        </div>\r\n        <div class=\"selections-blank-34\"></div>\r\n    </perfect-scrollbar>\r\n</div>\r\n<div class=\"selections-triangle-down\"></div>",
                styles: [".selections-content{box-shadow:0 1px 12px 0 rgba(73,84,102,.15);border-radius:7px;width:340px;height:auto;overflow:hidden}.selections-item{width:332px;border-radius:6px;margin:0 4px;display:-webkit-box;display:flex}.selections-blank-4{width:100%;height:4px}.selections-blank-34{width:100%;height:34px}.selections-item:hover{background:#ebf4ff}.selections-item .si-icon-circle{border-radius:50%;font-size:12px;width:14px;height:14px;background:#62c8ca;text-align:center;display:block;color:#fff;margin:7px 8px 0 11px;line-height:14px}.selections-item dl{-webkit-box-flex:1;flex:1;margin-top:3px;font-size:13px;overflow:hidden}.selections-item dl dt{font-weight:400;line-height:18px;color:#53565d}.selections-item dl dd{line-height:18px;color:#a8adb8;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.selections-item .deleteBtn{font-size:14px;margin:15px 15px 0;color:#f46160;cursor:pointer}.selections-triangle-down{width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent;border-top:8px solid #fff;margin-left:40px}.selections-more{text-align:center;padding:4px 20px;height:34px;line-height:26px;font-size:13px;color:#2a87ff;display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;position:absolute;bottom:0;left:0;right:0;background:#fff}.selections-more .saved-group{width:95px;height:26px;line-height:26px;background:#eaedf2;border-radius:5px;text-align:center;font-size:13px;color:#909ba2;cursor:pointer}.selections-more .saved-group:hover{color:#2a87ff;background:#eaf4ff}.selections-more .saved-group:hover .f-icon{color:#2a87ff}.selections-more .saved-group .f-icon{color:#909ba2;margin-right:5px;cursor:pointer;font-size:14px}"]
            }] }
];
/** @nocollapse */
SelectionComponent.ctorParameters = () => [
    { type: ApiService },
    { type: ChangeDetectorRef },
    { type: FavoritesTool },
    { type: Injector },
    { type: NgZone },
    { type: StateMgrTool }
];
SelectionComponent.propDecorators = {
    primaryField: [{ type: Input }],
    enableGroup: [{ type: Input }],
    openedChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    SelectionComponent.prototype.primaryField;
    /** @type {?} */
    SelectionComponent.prototype.enableGroup;
    /** @type {?} */
    SelectionComponent.prototype.openedChange;
    /** @type {?} */
    SelectionComponent.prototype.datas;
    /** @type {?} */
    SelectionComponent.prototype.items;
    /** @type {?} */
    SelectionComponent.prototype.pageIndex;
    /** @type {?} */
    SelectionComponent.prototype.pageSize;
    /** @type {?} */
    SelectionComponent.prototype.moreText;
    /** @type {?} */
    SelectionComponent.prototype.selectionsSub;
    /** @type {?} */
    SelectionComponent.prototype.localeService;
    /** @type {?} */
    SelectionComponent.prototype.moreDataText;
    /** @type {?} */
    SelectionComponent.prototype.noneDataText;
    /**
     * @type {?}
     * @private
     */
    SelectionComponent.prototype.apiService;
    /**
     * @type {?}
     * @private
     */
    SelectionComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    SelectionComponent.prototype.favoritesTool;
    /**
     * @type {?}
     * @private
     */
    SelectionComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    SelectionComponent.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    SelectionComponent.prototype.stateMgr;
}
//# sourceMappingURL=data:application/json;base64,