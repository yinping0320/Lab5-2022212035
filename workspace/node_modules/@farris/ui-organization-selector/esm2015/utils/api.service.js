/**
 * @fileoverview added by tsickle
 * Generated from: utils/api.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { of } from 'rxjs';
export class ApiService {
    /**
     * @param {?} http
     */
    constructor(http) {
        this.http = http;
    }
    /**
     * 获取行政组织或系统用户
     * @param {?} param
     * @return {?} observable
     */
    getOrganization(param) {
        /** @type {?} */
        const options = {
            headers: new HttpHeaders({
                'Content-Type': 'application/json',
            }),
        };
        return this.http.post(this.absUrl + '/org', param, options);
    }
    /**
     * @param {?} absOrgType
     * @return {?}
     */
    getOrgGroups(absOrgType) {
        /** @type {?} */
        const options = {
            headers: new HttpHeaders({
                'Content-Type': 'application/json',
            }),
        };
        return this.http.get(this.groupApiUrl + '/' + absOrgType, options);
    }
    /**
     * @param {?} groupId
     * @param {?} absOrgType
     * @return {?}
     */
    getGroupMembers(groupId, absOrgType) {
        /** @type {?} */
        const options = {
            headers: new HttpHeaders({
                'Content-Type': 'application/json',
            }),
        };
        if (!groupId) {
            return of(null);
        }
        /** @type {?} */
        const url = this.groupApiUrl + '/' + groupId + '/absOrgType/' + absOrgType;
        return this.http.get(url, options);
    }
    /**
     * @param {?} groupInfo
     * @return {?}
     */
    saveGroup(groupInfo) {
        /** @type {?} */
        const options = {
            headers: new HttpHeaders({
                'Content-Type': 'application/json',
            }),
        };
        return this.http.post(this.groupApiUrl, groupInfo, options);
    }
}
ApiService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
ApiService.ctorParameters = () => [
    { type: HttpClient }
];
if (false) {
    /** @type {?} */
    ApiService.prototype.absUrl;
    /** @type {?} */
    ApiService.prototype.groupApiUrl;
    /**
     * @type {?}
     * @private
     */
    ApiService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLW9yZ2FuaXphdGlvbi1zZWxlY3Rvci8iLCJzb3VyY2VzIjpbInV0aWxzL2FwaS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRS9ELE9BQU8sRUFBRSxFQUFFLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFHMUIsTUFBTSxPQUFPLFVBQVU7Ozs7SUFJckIsWUFDVSxJQUFnQjtRQUFoQixTQUFJLEdBQUosSUFBSSxDQUFZO0lBQ3RCLENBQUM7Ozs7OztJQU1MLGVBQWUsQ0FBQyxLQUFzQjs7Y0FDOUIsT0FBTyxHQUFHO1lBQ2QsT0FBTyxFQUFFLElBQUksV0FBVyxDQUFDO2dCQUN2QixjQUFjLEVBQUUsa0JBQWtCO2FBQ25DLENBQUM7U0FDSDtRQUNELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLEVBQUUsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzlELENBQUM7Ozs7O0lBRUQsWUFBWSxDQUFDLFVBQWtCOztjQUN2QixPQUFPLEdBQUc7WUFDZCxPQUFPLEVBQUUsSUFBSSxXQUFXLENBQUM7Z0JBQ3ZCLGNBQWMsRUFBRSxrQkFBa0I7YUFDbkMsQ0FBQztTQUNIO1FBQ0QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsR0FBRyxVQUFVLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDckUsQ0FBQzs7Ozs7O0lBRUQsZUFBZSxDQUFDLE9BQWUsRUFBRSxVQUFrQjs7Y0FDM0MsT0FBTyxHQUFHO1lBQ2QsT0FBTyxFQUFFLElBQUksV0FBVyxDQUFDO2dCQUN2QixjQUFjLEVBQUUsa0JBQWtCO2FBQ25DLENBQUM7U0FDSDtRQUNELElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDWixPQUFPLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNqQjs7Y0FDSyxHQUFHLEdBQUcsSUFBSSxDQUFDLFdBQVcsR0FBRyxHQUFHLEdBQUcsT0FBTyxHQUFHLGNBQWMsR0FBRyxVQUFVO1FBQzFFLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Ozs7O0lBRUQsU0FBUyxDQUFDLFNBQWdDOztjQUNsQyxPQUFPLEdBQUc7WUFDZCxPQUFPLEVBQUUsSUFBSSxXQUFXLENBQUM7Z0JBQ3ZCLGNBQWMsRUFBRSxrQkFBa0I7YUFDbkMsQ0FBQztTQUNIO1FBQ0QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUM5RCxDQUFDOzs7WUFuREYsVUFBVTs7OztZQUpGLFVBQVU7Ozs7SUFPakIsNEJBQWU7O0lBQ2YsaUNBQW9COzs7OztJQUVsQiwwQkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBIZWFkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQgeyBPcmdSZXF1ZXN0UGFyYW0sIFNhdmVHcm91cFJlcWV1c3RQYXJhbSB9IGZyb20gJy4vaW5kZXgudHlwZSc7XHJcbmltcG9ydCB7IG9mIH0gZnJvbSAncnhqcyc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBBcGlTZXJ2aWNlIHtcclxuXHJcbiAgYWJzVXJsOiBzdHJpbmc7XHJcbiAgZ3JvdXBBcGlVcmw6IHN0cmluZztcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgaHR0cDogSHR0cENsaWVudFxyXG4gICkgeyB9XHJcblxyXG4gIC8qKlxyXG4gICAgKiDojrflj5booYzmlL/nu4Tnu4fmiJbns7vnu5/nlKjmiLdcclxuICAgICogQHJldHVybnMgb2JzZXJ2YWJsZVxyXG4gICAgKi9cclxuICBnZXRPcmdhbml6YXRpb24ocGFyYW06IE9yZ1JlcXVlc3RQYXJhbSkge1xyXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgaGVhZGVyczogbmV3IEh0dHBIZWFkZXJzKHtcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICB9KSxcclxuICAgIH07XHJcbiAgICByZXR1cm4gdGhpcy5odHRwLnBvc3QodGhpcy5hYnNVcmwgKyAnL29yZycsIHBhcmFtLCBvcHRpb25zKTtcclxuICB9XHJcblxyXG4gIGdldE9yZ0dyb3VwcyhhYnNPcmdUeXBlOiBzdHJpbmcpIHtcclxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XHJcbiAgICAgIGhlYWRlcnM6IG5ldyBIdHRwSGVhZGVycyh7XHJcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgfSksXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodGhpcy5ncm91cEFwaVVybCArICcvJyArIGFic09yZ1R5cGUsIG9wdGlvbnMpO1xyXG4gIH1cclxuXHJcbiAgZ2V0R3JvdXBNZW1iZXJzKGdyb3VwSWQ6IHN0cmluZywgYWJzT3JnVHlwZTogc3RyaW5nKSB7XHJcbiAgICBjb25zdCBvcHRpb25zID0ge1xyXG4gICAgICBoZWFkZXJzOiBuZXcgSHR0cEhlYWRlcnMoe1xyXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgIH0pLFxyXG4gICAgfTtcclxuICAgIGlmICghZ3JvdXBJZCkge1xyXG4gICAgICByZXR1cm4gb2YobnVsbCk7XHJcbiAgICB9XHJcbiAgICBjb25zdCB1cmwgPSB0aGlzLmdyb3VwQXBpVXJsICsgJy8nICsgZ3JvdXBJZCArICcvYWJzT3JnVHlwZS8nICsgYWJzT3JnVHlwZTtcclxuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KHVybCwgb3B0aW9ucyk7XHJcbiAgfVxyXG5cclxuICBzYXZlR3JvdXAoZ3JvdXBJbmZvOiBTYXZlR3JvdXBSZXFldXN0UGFyYW0pIHtcclxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XHJcbiAgICAgIGhlYWRlcnM6IG5ldyBIdHRwSGVhZGVycyh7XHJcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgfSksXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0KHRoaXMuZ3JvdXBBcGlVcmwsIGdyb3VwSW5mbywgb3B0aW9ucyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==