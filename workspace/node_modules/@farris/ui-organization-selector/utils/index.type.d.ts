export interface OrgRequestParam {
    absOrgType: string;
    layer?: number;
    codeOrName?: string;
    name?: string;
    parentID?: string;
    isSearchTree?: boolean;
    getCurUser?: boolean;
    notGetStopOrg?: boolean;
    id?: string;
    idList?: string[];
    getAllParentOrg?: boolean;
    getOrgAllPath?: boolean;
    getOrgAllPathInfo?: boolean;
    withAllSub?: boolean;
    layerList?: number[];
}
export declare enum ChangeType {
    Append = "Append",
    Remove = "Remove",
    ValueChanged = "ValueChanged"
}
export interface Param {
    value: any;
    changeType: ChangeType;
    from: string;
}
export interface Organization {
    orgId: string;
    code: string;
    name: string;
    orgAllPath: string;
    path: string;
    layer: number;
    checked?: boolean;
    indexId?: string;
    enable?: boolean;
}
export interface Group {
    public: Array<GroupItem>;
    personal: Array<GroupItem>;
}
export interface GroupItem {
    id: string;
    title: string;
    index?: string;
    description?: string;
    total: number;
    avatar?: string;
    checked?: boolean;
}
export interface SaveGroupReqeustParam {
    groupId?: string;
    groupCode?: string;
    title?: string;
    description?: string;
    absOrgType?: string;
    addIds?: Array<string>;
    deleteIds?: Array<string>;
    changeType: Number;
}
