/**
 * @fileoverview added by tsickle
 * Generated from: lib/component-extenders/checkbox-extender.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 列表组件扩展
 */
class CheckboxExtender {
    /**
     * @param {?} checkboxInstance
     * @param {?} viewModelContext
     */
    constructor(checkboxInstance, viewModelContext) {
        this.checkboxInstance = checkboxInstance;
        this.viewModelContext = viewModelContext;
    }
    /**
     * 扩展组件
     * @return {?}
     */
    extend() {
        /** @type {?} */
        const self = this;
        // 当按钮被加载调用父组件让其出现多选框
        this.checkboxInstance.$parent.listCheckStart();
        this.checkboxInstance.$on('click', (/**
         * @return {?}
         */
        () => {
            console.log("click");
            // 监听全选
            if (self.checkboxInstance.$parent.checkboxFlag) {
                self.checkboxInstance.$parent.listCheckAllCancel();
            }
            else {
                self.checkboxInstance.$parent.listCheckAll();
            }
            self.checkboxInstance.$parent.checkboxFlag = !self.checkboxInstance.$parent.checkboxFlag;
            /** @type {?} */
            const selectedItems = self.checkboxInstance.$parent.getSelectDataList();
            /** @type {?} */
            let selectedIds = [];
            if (selectedItems && selectedItems.length > 0) {
                selectedIds = selectedItems.map((/**
                 * @param {?} selectedItem
                 * @return {?}
                 */
                (selectedItem) => {
                    return selectedItem.id;
                }));
            }
            self.viewModelContext.uiState.setPropertyValue('selectedIds', selectedIds);
        }));
    }
    /**
     * 清理状态
     * @return {?}
     */
    dispose() {
        this.checkboxInstance.$off('click');
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    CheckboxExtender.prototype.checkboxInstance;
    /**
     * @type {?}
     * @private
     */
    CheckboxExtender.prototype.viewModelContext;
}
export { CheckboxExtender };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gtZXh0ZW5kZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL21vYmlsZS12dWUtYWRhcHRlci8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnQtZXh0ZW5kZXJzL2NoZWNrYm94LWV4dGVuZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBTUEsTUFBTSxnQkFBZ0I7Ozs7O0lBTXBCLFlBQVksZ0JBQXFCLEVBQUUsZ0JBQXFCO1FBQ3RELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxnQkFBZ0IsQ0FBQztRQUN6QyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsZ0JBQWdCLENBQUM7SUFDM0MsQ0FBQzs7Ozs7SUFLRCxNQUFNOztjQUNFLElBQUksR0FBRyxJQUFJO1FBQ2pCLHFCQUFxQjtRQUNyQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQy9DLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsT0FBTzs7O1FBQUUsR0FBRyxFQUFFO1lBQ3RDLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDckIsT0FBTztZQUNQLElBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUU7Z0JBQzlDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsa0JBQWtCLEVBQUUsQ0FBQzthQUNwRDtpQkFBTTtnQkFDTCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRSxDQUFDO2FBQzlDO1lBQ0QsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxZQUFZLEdBQUcsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQzs7a0JBQ25GLGFBQWEsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLGlCQUFpQixFQUFFOztnQkFDbkUsV0FBVyxHQUFHLEVBQUU7WUFDcEIsSUFBSSxhQUFhLElBQUksYUFBYSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7Z0JBQzdDLFdBQVcsR0FBRyxhQUFhLENBQUMsR0FBRzs7OztnQkFBQyxDQUFDLFlBQVksRUFBRSxFQUFFO29CQUMvQyxPQUFPLFlBQVksQ0FBQyxFQUFFLENBQUM7Z0JBQ3pCLENBQUMsRUFBQyxDQUFDO2FBQ0o7WUFDRCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLGFBQWEsRUFBRSxXQUFXLENBQUMsQ0FBQztRQUM3RSxDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7Ozs7O0lBS0QsT0FBTztRQUNMLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdEMsQ0FBQztDQUVGOzs7Ozs7SUEzQ0MsNENBQThCOzs7OztJQUU5Qiw0Q0FBMkM7O0FBMkM3QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZpZXdNb2RlbENvbnRleHQgfSBmcm9tICdAZmFycmlzL21vYmlsZS1kZXZraXQnO1xyXG5pbXBvcnQgeyBDb21wb25lbnRFeHRlbmRlciB9IGZyb20gJy4vY29tcG9uZW50LWV4dGVuZGVyJztcclxuXHJcbi8qKlxyXG4gKiDliJfooajnu4Tku7bmianlsZVcclxuICovXHJcbmNsYXNzIENoZWNrYm94RXh0ZW5kZXIgaW1wbGVtZW50cyBDb21wb25lbnRFeHRlbmRlciB7XHJcblxyXG4gIHByaXZhdGUgY2hlY2tib3hJbnN0YW5jZTogYW55O1xyXG5cclxuICBwcml2YXRlIHZpZXdNb2RlbENvbnRleHQ6IFZpZXdNb2RlbENvbnRleHQ7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGNoZWNrYm94SW5zdGFuY2U6IGFueSwgdmlld01vZGVsQ29udGV4dDogYW55KSB7XHJcbiAgICB0aGlzLmNoZWNrYm94SW5zdGFuY2UgPSBjaGVja2JveEluc3RhbmNlO1xyXG4gICAgdGhpcy52aWV3TW9kZWxDb250ZXh0ID0gdmlld01vZGVsQ29udGV4dDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOaJqeWxlee7hOS7tlxyXG4gICAqL1xyXG4gIGV4dGVuZCgpIHtcclxuICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xyXG4gICAgLy8g5b2T5oyJ6ZKu6KKr5Yqg6L296LCD55So54i257uE5Lu26K6p5YW25Ye6546w5aSa6YCJ5qGGXHJcbiAgICB0aGlzLmNoZWNrYm94SW5zdGFuY2UuJHBhcmVudC5saXN0Q2hlY2tTdGFydCgpO1xyXG4gICAgdGhpcy5jaGVja2JveEluc3RhbmNlLiRvbignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiY2xpY2tcIik7XHJcbiAgICAgIC8vIOebkeWQrOWFqOmAiVxyXG4gICAgICBpZiAoc2VsZi5jaGVja2JveEluc3RhbmNlLiRwYXJlbnQuY2hlY2tib3hGbGFnKSB7XHJcbiAgICAgICAgc2VsZi5jaGVja2JveEluc3RhbmNlLiRwYXJlbnQubGlzdENoZWNrQWxsQ2FuY2VsKCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgc2VsZi5jaGVja2JveEluc3RhbmNlLiRwYXJlbnQubGlzdENoZWNrQWxsKCk7XHJcbiAgICAgIH1cclxuICAgICAgc2VsZi5jaGVja2JveEluc3RhbmNlLiRwYXJlbnQuY2hlY2tib3hGbGFnID0gIXNlbGYuY2hlY2tib3hJbnN0YW5jZS4kcGFyZW50LmNoZWNrYm94RmxhZztcclxuICAgICAgY29uc3Qgc2VsZWN0ZWRJdGVtcyA9IHNlbGYuY2hlY2tib3hJbnN0YW5jZS4kcGFyZW50LmdldFNlbGVjdERhdGFMaXN0KCk7XHJcbiAgICAgIGxldCBzZWxlY3RlZElkcyA9IFtdO1xyXG4gICAgICBpZiAoc2VsZWN0ZWRJdGVtcyAmJiBzZWxlY3RlZEl0ZW1zLmxlbmd0aCA+IDApIHtcclxuICAgICAgICBzZWxlY3RlZElkcyA9IHNlbGVjdGVkSXRlbXMubWFwKChzZWxlY3RlZEl0ZW0pID0+IHtcclxuICAgICAgICAgIHJldHVybiBzZWxlY3RlZEl0ZW0uaWQ7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgICAgc2VsZi52aWV3TW9kZWxDb250ZXh0LnVpU3RhdGUuc2V0UHJvcGVydHlWYWx1ZSgnc2VsZWN0ZWRJZHMnLCBzZWxlY3RlZElkcyk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOa4heeQhueKtuaAgVxyXG4gICAqL1xyXG4gIGRpc3Bvc2UoKSB7XHJcbiAgICB0aGlzLmNoZWNrYm94SW5zdGFuY2UuJG9mZignY2xpY2snKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgeyBDaGVja2JveEV4dGVuZGVyIH0iXX0=