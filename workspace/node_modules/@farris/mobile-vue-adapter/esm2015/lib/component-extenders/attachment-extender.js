/**
 * @fileoverview added by tsickle
 * Generated from: lib/component-extenders/attachment-extender.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 列表组件扩展
 */
class AttachmentExtender {
    /**
     * @param {?} attachmentInstance
     * @param {?} viewModelContext
     */
    constructor(attachmentInstance, viewModelContext) {
        this.attachmentInstance = attachmentInstance;
        this.viewModelContext = viewModelContext;
    }
    /**
     * 扩展组件
     * @return {?}
     */
    extend() {
        /** @type {?} */
        const self = this;
        // 当前行
        this.attachmentInstance.$on('beforeSelect', (/**
         * @param {?} selectedData
         * @return {?}
         */
        (selectedData) => {
            /** @type {?} */
            const selectedId = selectedData.id;
            self.viewModelContext.bindingData.getList().setCurrentId(selectedId, true, false);
        }));
    }
    /**
     * 清理状态
     * @return {?}
     */
    dispose() {
        this.attachmentInstance.$off('beforeSelect');
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    AttachmentExtender.prototype.attachmentInstance;
    /**
     * @type {?}
     * @private
     */
    AttachmentExtender.prototype.viewModelContext;
}
export { AttachmentExtender };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0YWNobWVudC1leHRlbmRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvbW9iaWxlLXZ1ZS1hZGFwdGVyLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudC1leHRlbmRlcnMvYXR0YWNobWVudC1leHRlbmRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQU1BLE1BQU0sa0JBQWtCOzs7OztJQU1wQixZQUFZLGtCQUF1QixFQUFFLGdCQUFxQjtRQUN0RCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsa0JBQWtCLENBQUM7UUFDN0MsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDO0lBQzdDLENBQUM7Ozs7O0lBS0QsTUFBTTs7Y0FDSSxJQUFJLEdBQUcsSUFBSTtRQUNqQixNQUFNO1FBQ04sSUFBSSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxjQUFjOzs7O1FBQUUsQ0FBQyxZQUFZLEVBQUUsRUFBRTs7a0JBQ25ELFVBQVUsR0FBRyxZQUFZLENBQUMsRUFBRTtZQUNsQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQyxVQUFVLEVBQUUsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3RGLENBQUMsRUFBQyxDQUFDO0lBQ1AsQ0FBQzs7Ozs7SUFLRCxPQUFPO1FBQ0gsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUNqRCxDQUFDO0NBRUo7Ozs7OztJQTVCRyxnREFBZ0M7Ozs7O0lBRWhDLDhDQUEyQzs7QUE0Qi9DLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmlld01vZGVsQ29udGV4dCB9IGZyb20gJ0BmYXJyaXMvbW9iaWxlLWRldmtpdCc7XHJcbmltcG9ydCB7IENvbXBvbmVudEV4dGVuZGVyIH0gZnJvbSAnLi9jb21wb25lbnQtZXh0ZW5kZXInO1xyXG5cclxuLyoqXHJcbiAqIOWIl+ihqOe7hOS7tuaJqeWxlVxyXG4gKi9cclxuY2xhc3MgQXR0YWNobWVudEV4dGVuZGVyIGltcGxlbWVudHMgQ29tcG9uZW50RXh0ZW5kZXIge1xyXG5cclxuICAgIHByaXZhdGUgYXR0YWNobWVudEluc3RhbmNlOiBhbnk7XHJcblxyXG4gICAgcHJpdmF0ZSB2aWV3TW9kZWxDb250ZXh0OiBWaWV3TW9kZWxDb250ZXh0O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGF0dGFjaG1lbnRJbnN0YW5jZTogYW55LCB2aWV3TW9kZWxDb250ZXh0OiBhbnkpIHtcclxuICAgICAgICB0aGlzLmF0dGFjaG1lbnRJbnN0YW5jZSA9IGF0dGFjaG1lbnRJbnN0YW5jZTtcclxuICAgICAgICB0aGlzLnZpZXdNb2RlbENvbnRleHQgPSB2aWV3TW9kZWxDb250ZXh0O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5omp5bGV57uE5Lu2XHJcbiAgICAgKi9cclxuICAgIGV4dGVuZCgpIHtcclxuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcclxuICAgICAgICAvLyDlvZPliY3ooYxcclxuICAgICAgICB0aGlzLmF0dGFjaG1lbnRJbnN0YW5jZS4kb24oJ2JlZm9yZVNlbGVjdCcsIChzZWxlY3RlZERhdGEpID0+IHtcclxuICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWRJZCA9IHNlbGVjdGVkRGF0YS5pZDtcclxuICAgICAgICAgICAgc2VsZi52aWV3TW9kZWxDb250ZXh0LmJpbmRpbmdEYXRhLmdldExpc3QoKS5zZXRDdXJyZW50SWQoc2VsZWN0ZWRJZCwgdHJ1ZSwgZmFsc2UpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5riF55CG54q25oCBXHJcbiAgICAgKi9cclxuICAgIGRpc3Bvc2UoKSB7XHJcbiAgICAgICAgdGhpcy5hdHRhY2htZW50SW5zdGFuY2UuJG9mZignYmVmb3JlU2VsZWN0Jyk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgeyBBdHRhY2htZW50RXh0ZW5kZXIgfTtcclxuIl19