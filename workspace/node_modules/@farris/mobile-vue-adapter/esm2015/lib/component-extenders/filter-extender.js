/**
 * @fileoverview added by tsickle
 * Generated from: lib/component-extenders/filter-extender.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 列表组件扩展
 */
class FilterExtender {
    /**
     * @param {?} filterInstance
     * @param {?} viewModelContext
     */
    constructor(filterInstance, viewModelContext) {
        this.filterInstance = filterInstance;
        this.viewModelContext = viewModelContext;
    }
    /**
     * 扩展组件
     * @return {?}
     */
    extend() {
        /** @type {?} */
        const self = this;
        // 清空uistate的筛选条件
        this.filterInstance.$on('clear', (/**
         * @return {?}
         */
        () => {
            self.viewModelContext.uiState.setPropertyValue('filterState', { filters: null });
        }));
        // 给uistate的赋值筛选条件
        // this.filterInstance.$on('change', (data) => {
        //   //self.viewModelContext.uiState.setPropertyValue('filterState', { filters: data.FilterConditions });
        // });
        // 给uistate的赋值筛选条件
        this.filterInstance.$on('search', (/**
         * @param {?} data
         * @return {?}
         */
        (data) => {
            self.viewModelContext.repository.setPaginationInfo({
                pageIndex: 1
            });
            self.viewModelContext.uiState.setPropertyValue('filterState', { filters: data.FilterConditions });
            self.viewModelContext.appContext.eventBus.triggerEvent({ type: 'LoadData' });
        }));
        // 监听确定时间出发查询
        this.filterInstance.$on('confirm', (/**
         * @param {?} data
         * @return {?}
         */
        (data) => {
            self.viewModelContext.repository.setPaginationInfo({
                pageIndex: 1
            });
            self.viewModelContext.uiState.setPropertyValue('filterState', { filters: data.FilterConditions });
            self.viewModelContext.appContext.eventBus.triggerEvent({ type: 'LoadData' });
        }));
    }
    /**
     * 清理状态
     * @return {?}
     */
    dispose() {
        this.filterInstance.$off('clear');
        this.filterInstance.$off('change');
        this.filterInstance.$off('confirm');
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    FilterExtender.prototype.filterInstance;
    /**
     * @type {?}
     * @private
     */
    FilterExtender.prototype.viewModelContext;
}
export { FilterExtender };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLWV4dGVuZGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9tb2JpbGUtdnVlLWFkYXB0ZXIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50LWV4dGVuZGVycy9maWx0ZXItZXh0ZW5kZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFNQSxNQUFNLGNBQWM7Ozs7O0lBTWxCLFlBQVksY0FBbUIsRUFBRSxnQkFBcUI7UUFDcEQsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDO0lBQzNDLENBQUM7Ozs7O0lBS0QsTUFBTTs7Y0FDRSxJQUFJLEdBQUcsSUFBSTtRQUNqQixpQkFBaUI7UUFDakIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsT0FBTzs7O1FBQUUsR0FBRyxFQUFFO1lBQ3BDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFDbkYsQ0FBQyxFQUFDLENBQUM7UUFFSCxrQkFBa0I7UUFDbEIsZ0RBQWdEO1FBQ2hELHlHQUF5RztRQUN6RyxNQUFNO1FBR04sa0JBQWtCO1FBQ2xCLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLFFBQVE7Ozs7UUFBRSxDQUFDLElBQUksRUFBRSxFQUFFO1lBQ3pDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLENBQUMsaUJBQWlCLENBQUM7Z0JBQ2pELFNBQVMsRUFBRSxDQUFDO2FBQ2IsQ0FBQyxDQUFBO1lBQ0YsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUMsQ0FBQztZQUNsRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLENBQUMsQ0FBQTtRQUM5RSxDQUFDLEVBQUMsQ0FBQztRQUVILGFBQWE7UUFDYixJQUFJLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxTQUFTOzs7O1FBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUMxQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLGlCQUFpQixDQUFDO2dCQUNqRCxTQUFTLEVBQUUsQ0FBQzthQUNiLENBQUMsQ0FBQTtZQUNGLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLENBQUM7WUFDbEcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxDQUFDLENBQUE7UUFDOUUsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDOzs7OztJQUtELE9BQU87UUFDTCxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN0QyxDQUFDO0NBRUY7Ozs7OztJQXJEQyx3Q0FBNEI7Ozs7O0lBRTVCLDBDQUEyQzs7QUFxRDdDLE9BQU8sRUFBRSxjQUFjLEVBQUUsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZpZXdNb2RlbENvbnRleHQgfSBmcm9tICdAZmFycmlzL21vYmlsZS1kZXZraXQnO1xyXG5pbXBvcnQgeyBDb21wb25lbnRFeHRlbmRlciB9IGZyb20gJy4vY29tcG9uZW50LWV4dGVuZGVyJztcclxuXHJcbi8qKlxyXG4gKiDliJfooajnu4Tku7bmianlsZVcclxuICovXHJcbmNsYXNzIEZpbHRlckV4dGVuZGVyIGltcGxlbWVudHMgQ29tcG9uZW50RXh0ZW5kZXIge1xyXG5cclxuICBwcml2YXRlIGZpbHRlckluc3RhbmNlOiBhbnk7XHJcblxyXG4gIHByaXZhdGUgdmlld01vZGVsQ29udGV4dDogVmlld01vZGVsQ29udGV4dDtcclxuXHJcbiAgY29uc3RydWN0b3IoZmlsdGVySW5zdGFuY2U6IGFueSwgdmlld01vZGVsQ29udGV4dDogYW55KSB7XHJcbiAgICB0aGlzLmZpbHRlckluc3RhbmNlID0gZmlsdGVySW5zdGFuY2U7XHJcbiAgICB0aGlzLnZpZXdNb2RlbENvbnRleHQgPSB2aWV3TW9kZWxDb250ZXh0O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5omp5bGV57uE5Lu2XHJcbiAgICovXHJcbiAgZXh0ZW5kKCkge1xyXG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XHJcbiAgICAvLyDmuIXnqbp1aXN0YXRl55qE562b6YCJ5p2h5Lu2XHJcbiAgICB0aGlzLmZpbHRlckluc3RhbmNlLiRvbignY2xlYXInLCAoKSA9PiB7XHJcbiAgICAgIHNlbGYudmlld01vZGVsQ29udGV4dC51aVN0YXRlLnNldFByb3BlcnR5VmFsdWUoJ2ZpbHRlclN0YXRlJywgeyBmaWx0ZXJzOiBudWxsIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8g57uZdWlzdGF0ZeeahOi1i+WAvOetm+mAieadoeS7tlxyXG4gICAgLy8gdGhpcy5maWx0ZXJJbnN0YW5jZS4kb24oJ2NoYW5nZScsIChkYXRhKSA9PiB7XHJcbiAgICAvLyAgIC8vc2VsZi52aWV3TW9kZWxDb250ZXh0LnVpU3RhdGUuc2V0UHJvcGVydHlWYWx1ZSgnZmlsdGVyU3RhdGUnLCB7IGZpbHRlcnM6IGRhdGEuRmlsdGVyQ29uZGl0aW9ucyB9KTtcclxuICAgIC8vIH0pO1xyXG5cclxuXHJcbiAgICAvLyDnu5l1aXN0YXRl55qE6LWL5YC8562b6YCJ5p2h5Lu2XHJcbiAgICB0aGlzLmZpbHRlckluc3RhbmNlLiRvbignc2VhcmNoJywgKGRhdGEpID0+IHtcclxuICAgICAgc2VsZi52aWV3TW9kZWxDb250ZXh0LnJlcG9zaXRvcnkuc2V0UGFnaW5hdGlvbkluZm8oe1xyXG4gICAgICAgIHBhZ2VJbmRleDogMVxyXG4gICAgICB9KVxyXG4gICAgICBzZWxmLnZpZXdNb2RlbENvbnRleHQudWlTdGF0ZS5zZXRQcm9wZXJ0eVZhbHVlKCdmaWx0ZXJTdGF0ZScsIHsgZmlsdGVyczogZGF0YS5GaWx0ZXJDb25kaXRpb25zIH0pO1xyXG4gICAgICBzZWxmLnZpZXdNb2RlbENvbnRleHQuYXBwQ29udGV4dC5ldmVudEJ1cy50cmlnZ2VyRXZlbnQoeyB0eXBlOiAnTG9hZERhdGEnIH0pXHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyDnm5HlkKznoa7lrprml7bpl7Tlh7rlj5Hmn6Xor6JcclxuICAgIHRoaXMuZmlsdGVySW5zdGFuY2UuJG9uKCdjb25maXJtJywgKGRhdGEpID0+IHtcclxuICAgICAgc2VsZi52aWV3TW9kZWxDb250ZXh0LnJlcG9zaXRvcnkuc2V0UGFnaW5hdGlvbkluZm8oe1xyXG4gICAgICAgIHBhZ2VJbmRleDogMVxyXG4gICAgICB9KVxyXG4gICAgICBzZWxmLnZpZXdNb2RlbENvbnRleHQudWlTdGF0ZS5zZXRQcm9wZXJ0eVZhbHVlKCdmaWx0ZXJTdGF0ZScsIHsgZmlsdGVyczogZGF0YS5GaWx0ZXJDb25kaXRpb25zIH0pO1xyXG4gICAgICBzZWxmLnZpZXdNb2RlbENvbnRleHQuYXBwQ29udGV4dC5ldmVudEJ1cy50cmlnZ2VyRXZlbnQoeyB0eXBlOiAnTG9hZERhdGEnIH0pXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOa4heeQhueKtuaAgVxyXG4gICAqL1xyXG4gIGRpc3Bvc2UoKSB7XHJcbiAgICB0aGlzLmZpbHRlckluc3RhbmNlLiRvZmYoJ2NsZWFyJyk7XHJcbiAgICB0aGlzLmZpbHRlckluc3RhbmNlLiRvZmYoJ2NoYW5nZScpO1xyXG4gICAgdGhpcy5maWx0ZXJJbnN0YW5jZS4kb2ZmKCdjb25maXJtJyk7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IHsgRmlsdGVyRXh0ZW5kZXIgfSJdfQ==