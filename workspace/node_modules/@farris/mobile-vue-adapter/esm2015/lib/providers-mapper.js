/**
 * @fileoverview added by tsickle
 * Generated from: lib/providers-mapper.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BefLookupDataService } from '@farris/mobile-bef';
import { CloudPlusAttachment } from './attachment/attachment-children.service';
import { UploadAttachmentService } from './attachment/upload-attachment.service';
import { LookupMappingService } from './lookup-mapping.service';
import { CloudPlusMapService } from './map/cloud-plus-map.service';
/**
 * 映射Providers
 * @return {?}
 */
function mapProviders() {
    return (/**
     * @return {?}
     */
    function provide() {
        /** @type {?} */
        const viewModel = this.$getViewModel();
        /** @type {?} */
        const lookupDataService = new BefLookupDataService(viewModel.context);
        /** @type {?} */
        const lookupMappingService = new LookupMappingService(viewModel.context);
        // 云上协同附件服务
        /** @type {?} */
        const attachmentService = new CloudPlusAttachment();
        // caf提供附件上传和预览接口调用
        /** @type {?} */
        const uploadAttachmentService = new UploadAttachmentService((/** @type {?} */ (viewModel.context.repository)));
        // 云上协同地图服务
        /** @type {?} */
        const mapService = new CloudPlusMapService();
        /** @type {?} */
        const providers = {
            LookupHttpService: lookupDataService,
            LookupMappingFn: lookupMappingService,
            uploadAttachmentService,
            attachmentService,
            mapService
        };
        return providers;
    });
}
export { mapProviders };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXJzLW1hcHBlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvbW9iaWxlLXZ1ZS1hZGFwdGVyLyIsInNvdXJjZXMiOlsibGliL3Byb3ZpZGVycy1tYXBwZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsb0JBQW9CLEVBQWlCLE1BQU0sb0JBQW9CLENBQUM7QUFDekUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFFL0UsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDakYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDaEUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sOEJBQThCLENBQUM7Ozs7O0FBTW5FLFNBQVMsWUFBWTtJQUNuQjs7O0lBQU8sU0FBUyxPQUFPOztjQUNmLFNBQVMsR0FBRyxJQUFJLENBQUMsYUFBYSxFQUFFOztjQUNoQyxpQkFBaUIsR0FBRyxJQUFJLG9CQUFvQixDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUM7O2NBQy9ELG9CQUFvQixHQUFHLElBQUksb0JBQW9CLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQzs7O2NBRWxFLGlCQUFpQixHQUFzQixJQUFJLG1CQUFtQixFQUFFOzs7Y0FFaEUsdUJBQXVCLEdBQzNCLElBQUksdUJBQXVCLENBQUMsbUJBQUEsU0FBUyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQXNCLENBQUM7OztjQUUzRSxVQUFVLEdBQWUsSUFBSSxtQkFBbUIsRUFBRTs7Y0FDbEQsU0FBUyxHQUFHO1lBQ2hCLGlCQUFpQixFQUFFLGlCQUFpQjtZQUNwQyxlQUFlLEVBQUUsb0JBQW9CO1lBQ3JDLHVCQUF1QjtZQUN2QixpQkFBaUI7WUFDakIsVUFBVTtTQUNYO1FBQ0QsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQyxFQUFDO0FBQ0osQ0FBQztBQUVELE9BQU8sRUFBRSxZQUFZLEVBQUUsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJlZkxvb2t1cERhdGFTZXJ2aWNlLCBCZWZSZXBvc2l0b3J5IH0gZnJvbSAnQGZhcnJpcy9tb2JpbGUtYmVmJztcclxuaW1wb3J0IHsgQ2xvdWRQbHVzQXR0YWNobWVudCB9IGZyb20gJy4vYXR0YWNobWVudC9hdHRhY2htZW50LWNoaWxkcmVuLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBBdHRhY2htZW50U2VydmljZSB9IGZyb20gJy4vYXR0YWNobWVudC9hdHRhY2htZW50LnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBVcGxvYWRBdHRhY2htZW50U2VydmljZSB9IGZyb20gJy4vYXR0YWNobWVudC91cGxvYWQtYXR0YWNobWVudC5zZXJ2aWNlJztcclxuaW1wb3J0IHsgTG9va3VwTWFwcGluZ1NlcnZpY2UgfSBmcm9tICcuL2xvb2t1cC1tYXBwaW5nLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBDbG91ZFBsdXNNYXBTZXJ2aWNlIH0gZnJvbSAnLi9tYXAvY2xvdWQtcGx1cy1tYXAuc2VydmljZSc7XHJcbmltcG9ydCB7IE1hcFNlcnZpY2UgfSBmcm9tICcuL21hcC9tYXAuc2VydmljZSc7XHJcblxyXG4vKipcclxuICog5pig5bCEUHJvdmlkZXJzXHJcbiAqL1xyXG5mdW5jdGlvbiBtYXBQcm92aWRlcnMoKSB7XHJcbiAgcmV0dXJuIGZ1bmN0aW9uIHByb3ZpZGUoKSB7XHJcbiAgICBjb25zdCB2aWV3TW9kZWwgPSB0aGlzLiRnZXRWaWV3TW9kZWwoKTtcclxuICAgIGNvbnN0IGxvb2t1cERhdGFTZXJ2aWNlID0gbmV3IEJlZkxvb2t1cERhdGFTZXJ2aWNlKHZpZXdNb2RlbC5jb250ZXh0KTtcclxuICAgIGNvbnN0IGxvb2t1cE1hcHBpbmdTZXJ2aWNlID0gbmV3IExvb2t1cE1hcHBpbmdTZXJ2aWNlKHZpZXdNb2RlbC5jb250ZXh0KTtcclxuICAgIC8vIOS6keS4iuWNj+WQjOmZhOS7tuacjeWKoVxyXG4gICAgY29uc3QgYXR0YWNobWVudFNlcnZpY2U6IEF0dGFjaG1lbnRTZXJ2aWNlID0gbmV3IENsb3VkUGx1c0F0dGFjaG1lbnQoKTtcclxuICAgIC8vIGNhZuaPkOS+m+mZhOS7tuS4iuS8oOWSjOmihOiniOaOpeWPo+iwg+eUqFxyXG4gICAgY29uc3QgdXBsb2FkQXR0YWNobWVudFNlcnZpY2U6IFVwbG9hZEF0dGFjaG1lbnRTZXJ2aWNlID1cclxuICAgICAgbmV3IFVwbG9hZEF0dGFjaG1lbnRTZXJ2aWNlKHZpZXdNb2RlbC5jb250ZXh0LnJlcG9zaXRvcnkgYXMgQmVmUmVwb3NpdG9yeTxhbnk+KTtcclxuICAgIC8vIOS6keS4iuWNj+WQjOWcsOWbvuacjeWKoVxyXG4gICAgY29uc3QgbWFwU2VydmljZTogTWFwU2VydmljZSA9IG5ldyBDbG91ZFBsdXNNYXBTZXJ2aWNlKCk7XHJcbiAgICBjb25zdCBwcm92aWRlcnMgPSB7XHJcbiAgICAgIExvb2t1cEh0dHBTZXJ2aWNlOiBsb29rdXBEYXRhU2VydmljZSxcclxuICAgICAgTG9va3VwTWFwcGluZ0ZuOiBsb29rdXBNYXBwaW5nU2VydmljZSxcclxuICAgICAgdXBsb2FkQXR0YWNobWVudFNlcnZpY2UsXHJcbiAgICAgIGF0dGFjaG1lbnRTZXJ2aWNlLFxyXG4gICAgICBtYXBTZXJ2aWNlXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHByb3ZpZGVycztcclxuICB9O1xyXG59XHJcblxyXG5leHBvcnQgeyBtYXBQcm92aWRlcnMgfSJdfQ==