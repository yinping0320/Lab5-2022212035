/**
 * @fileoverview added by tsickle
 * Generated from: lib/map/cloud-plus-map-operation.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CloudPlusMapOperation = /** @class */ (function () {
    function CloudPlusMapOperation(location$) {
        this.location$ = location$;
    }
    /**
     * 云上协同  调用获取当前位置接口
     */
    /**
     * 云上协同  调用获取当前位置接口
     * @return {?}
     */
    CloudPlusMapOperation.prototype.getCurrentLoc = /**
     * 云上协同  调用获取当前位置接口
     * @return {?}
     */
    function () {
        var _this = this;
        // 具体实现
        if (window['iCityBridge']) {
            /** @type {?} */
            var iCityBridge = window['iCityBridge'];
            iCityBridge.ccworkGetLocation((/**
             * @param {?} result
             * @return {?}
             */
            function (result) {
                alert(JSON.stringify(result));
                // 结果预处理
                // 发布位置结果
                _this.location$.next(_this.assembleMarkers(result));
            }));
        }
    };
    // 获取定位回调
    // 获取定位回调
    /**
     * @private
     * @param {?=} result
     * @return {?}
     */
    CloudPlusMapOperation.prototype.locationCallback = 
    // 获取定位回调
    /**
     * @private
     * @param {?=} result
     * @return {?}
     */
    function (result) {
        alert(JSON.stringify(result));
        // 结果预处理
        // 发布位置结果
        this.location$.next(this.assembleMarkers(result));
    };
    /**
     * 组装坐标结果
     * @param res 结果
     */
    /**
     * 组装坐标结果
     * @private
     * @param {?} res 结果
     * @return {?}
     */
    CloudPlusMapOperation.prototype.assembleMarkers = /**
     * 组装坐标结果
     * @private
     * @param {?} res 结果
     * @return {?}
     */
    function (res) {
        /** @type {?} */
        var loc = res.result;
        return [{ position: [Number(loc.lng), Number(loc.lat)], visible: true, draggable: true }];
    };
    return CloudPlusMapOperation;
}());
export { CloudPlusMapOperation };
if (false) {
    /**
     * @type {?}
     * @private
     */
    CloudPlusMapOperation.prototype.location$;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xvdWQtcGx1cy1tYXAtb3BlcmF0aW9uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9tb2JpbGUtdnVlLWFkYXB0ZXIvIiwic291cmNlcyI6WyJsaWIvbWFwL2Nsb3VkLXBsdXMtbWFwLW9wZXJhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUdBO0lBRUksK0JBQW9CLFNBQXVCO1FBQXZCLGNBQVMsR0FBVCxTQUFTLENBQWM7SUFDM0MsQ0FBQztJQUNEOztPQUVHOzs7OztJQUNILDZDQUFhOzs7O0lBQWI7UUFBQSxpQkFZQztRQVhHLE9BQU87UUFDUCxJQUFJLE1BQU0sQ0FBQyxhQUFhLENBQUMsRUFBRTs7Z0JBQ2pCLFdBQVcsR0FBRyxNQUFNLENBQUMsYUFBYSxDQUFDO1lBQ3pDLFdBQVcsQ0FBQyxpQkFBaUI7Ozs7WUFBQyxVQUFDLE1BQVc7Z0JBQ3RDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7Z0JBQzlCLFFBQVE7Z0JBRVIsU0FBUztnQkFDVCxLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDdEQsQ0FBQyxFQUFDLENBQUM7U0FDTjtJQUNMLENBQUM7SUFFRCxTQUFTOzs7Ozs7O0lBQ0QsZ0RBQWdCOzs7Ozs7O0lBQXhCLFVBQXlCLE1BQVk7UUFDakMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUM5QixRQUFRO1FBRVIsU0FBUztRQUNULElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBR0Q7OztPQUdHOzs7Ozs7O0lBQ0ssK0NBQWU7Ozs7OztJQUF2QixVQUF3QixHQUFHOztZQUNqQixHQUFHLEdBQW1CLEdBQUcsQ0FBQyxNQUFNO1FBQ3RDLE9BQU8sQ0FBQyxFQUFFLFFBQVEsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7SUFDOUYsQ0FBQztJQUNMLDRCQUFDO0FBQUQsQ0FBQyxBQXZDRCxJQXVDQzs7Ozs7OztJQXJDZSwwQ0FBK0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IE1hcmtlckxvY2F0aW9uIH0gZnJvbSAnLi9sb2NhdGlvbi5pbnRlcmZhY2UnO1xyXG5pbXBvcnQgeyBNYXBPcGVyYXRpb24gfSBmcm9tICcuL21hcC1vcGVyYXRpb24uaW50ZXJmYWNlJztcclxuZXhwb3J0IGNsYXNzIENsb3VkUGx1c01hcE9wZXJhdGlvbiBpbXBsZW1lbnRzIE1hcE9wZXJhdGlvbiB7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBsb2NhdGlvbiQ6IFN1YmplY3Q8YW55Pikge1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDkupHkuIrljY/lkIwgIOiwg+eUqOiOt+WPluW9k+WJjeS9jee9ruaOpeWPo1xyXG4gICAgICovXHJcbiAgICBnZXRDdXJyZW50TG9jKCkge1xyXG4gICAgICAgIC8vIOWFt+S9k+WunueOsFxyXG4gICAgICAgIGlmICh3aW5kb3dbJ2lDaXR5QnJpZGdlJ10pIHtcclxuICAgICAgICAgICAgY29uc3QgaUNpdHlCcmlkZ2UgPSB3aW5kb3dbJ2lDaXR5QnJpZGdlJ107XHJcbiAgICAgICAgICAgIGlDaXR5QnJpZGdlLmNjd29ya0dldExvY2F0aW9uKChyZXN1bHQ6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgYWxlcnQoSlNPTi5zdHJpbmdpZnkocmVzdWx0KSk7XHJcbiAgICAgICAgICAgICAgICAvLyDnu5PmnpzpooTlpITnkIZcclxuXHJcbiAgICAgICAgICAgICAgICAvLyDlj5HluIPkvY3nva7nu5PmnpxcclxuICAgICAgICAgICAgICAgIHRoaXMubG9jYXRpb24kLm5leHQodGhpcy5hc3NlbWJsZU1hcmtlcnMocmVzdWx0KSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyDojrflj5blrprkvY3lm57osINcclxuICAgIHByaXZhdGUgbG9jYXRpb25DYWxsYmFjayhyZXN1bHQ/OiBhbnkpIHtcclxuICAgICAgICBhbGVydChKU09OLnN0cmluZ2lmeShyZXN1bHQpKTtcclxuICAgICAgICAvLyDnu5PmnpzpooTlpITnkIZcclxuXHJcbiAgICAgICAgLy8g5Y+R5biD5L2N572u57uT5p6cXHJcbiAgICAgICAgdGhpcy5sb2NhdGlvbiQubmV4dCh0aGlzLmFzc2VtYmxlTWFya2VycyhyZXN1bHQpKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnu4Too4XlnZDmoIfnu5PmnpxcclxuICAgICAqIEBwYXJhbSByZXMg57uT5p6cXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgYXNzZW1ibGVNYXJrZXJzKHJlcykge1xyXG4gICAgICAgIGNvbnN0IGxvYzogTWFya2VyTG9jYXRpb24gPSByZXMucmVzdWx0O1xyXG4gICAgICAgIHJldHVybiBbeyBwb3NpdGlvbjogW051bWJlcihsb2MubG5nKSwgTnVtYmVyKGxvYy5sYXQpXSwgdmlzaWJsZTogdHJ1ZSwgZHJhZ2dhYmxlOiB0cnVlIH1dO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==