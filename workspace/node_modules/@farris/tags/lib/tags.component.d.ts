import { OnInit, EventEmitter, ElementRef, ChangeDetectorRef } from '@angular/core';
import { LocaleService } from '@farris/ui-locale';
interface Tag {
    value?: string;
    name: string;
    tagType?: string;
    color?: string;
    closable?: boolean;
    checked?: boolean;
    size?: string;
    checkable?: boolean;
}
export declare class TagsComponent implements OnInit {
    localeService: LocaleService;
    private cd;
    _data: string;
    data: any;
    value: string;
    _checkable: boolean;
    checkable: any;
    _addable: boolean;
    addable: any;
    _tagType: string;
    tagType: any;
    _color: string;
    color: any;
    _closable: boolean;
    closable: any;
    _readonly: boolean;
    readonly: any;
    className: string;
    checkChanged: EventEmitter<any>;
    tagClick: EventEmitter<any>;
    dataChanged: EventEmitter<any>;
    closed: EventEmitter<any>;
    addInputText: ElementRef;
    addInput: boolean;
    addTagValue: string;
    placeholder: string;
    checkedTags: Array<any>;
    innerTags: Tag[];
    tagStyle: any;
    activeTag: string;
    addTagAble: boolean;
    private onChangeCallback;
    private onTouchedCallback;
    constructor(localeService: LocaleService, cd: ChangeDetectorRef);
    ngOnInit(): void;
    tagInit(data: any): void;
    /**
     * 点击关闭
     * @param e event
     * @param tag tag
     * @param index tag索引
     */
    closeHandler(e: any, tag: any, index: number): void;
    /**
     * 点击tag
     * @param e event
     * @param tag
     */
    clickHandler(e: any, tag: any): void;
    /**
     * 点击添加tag按钮
     */
    addHander(): void;
    /**
     * 添加tag失去焦点
     */
    addInputBlur(event: any): void;
    writeValue(val: string): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    tagProcess(data: any): string;
    hexToRgba(hex: any, opacity?: number): any;
    styleInit(): void;
}
export {};
