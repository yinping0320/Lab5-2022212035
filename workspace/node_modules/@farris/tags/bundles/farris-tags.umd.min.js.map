{"version":3,"sources":["ng://@farris/tags/lib/tags.service.ts","ng://@farris/tags/lib/tags.component.ts","ng://@farris/tags/lib/tags.module.ts"],"names":["TagsService","Injectable","args","providedIn","TagsComponent","Object","defineProperty","prototype","this","_data","val","_this","setTimeout","tagInit","_checkable","cd","detectChanges","_addable","addTagAble","_tagType","_color","styleInit","_closable","_readonly","activeTag","ngOnInit","placeholder","localeService","getValue","data","innerTags","tagsData","split","filter","item","length","i","tagdata","name","push","closeHandler","e","tag","index","preventDefault","splice","tagProcess","onChangeCallback","onTouchedCallback","closed","emit","dataChanged","clickHandler","tagClick","hasOwnProperty","checked","checkedTags","CheckChangedData","checkChanged","addHander","addInput","addTagValue","addInputText","nativeElement","focus","addInputBlur","event","find","writeValue","registerOnChange","fn","registerOnTouched","tagProcessData_1","forEach","join","hexToRgba","hex","opacity","sColor","toLowerCase","test","sColorNew","slice","concat","sColorChange","parseInt","color","tagStyle","background","borderColor","Component","selector","template","encapsulation","ViewEncapsulation","None","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","LocaleService","ChangeDetectorRef","Input","Output","ViewChild","EventEmitter","TagsModule","NgModule","declarations","imports","CommonModule","FormsModule","LocaleModule","forRoot","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TagsService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, forwardRef, Input, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n\r\ninterface Tag {\r\n  value?:string;\r\n  name:string;\r\n  tagType?:string;\r\n  color?:string;\r\n  closable?:boolean;\r\n  checked?:boolean;\r\n  size?:string;\r\n  checkable?:boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'farris-tags',\r\n  templateUrl: './tags.component.html',\r\n  // styleUrls: ['./tags.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => TagsComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class TagsComponent implements OnInit {\r\n\r\n  _data:string;\r\n  @Input()\r\n  set data(val) {\r\n    this._data = val;\r\n    setTimeout(() => {\r\n      this.tagInit(this._data);\r\n    });\r\n  }\r\n  get data() {\r\n    return this._data;\r\n  }\r\n  @Input() value:string;\r\n  //æ¯å¦æ¯æ\r\n  _checkable:boolean;\r\n  @Input()\r\n  set checkable(val) {\r\n    this._checkable = val;\r\n    this.cd.detectChanges();\r\n  }\r\n  get checkable() {\r\n    return this._checkable;\r\n  }\r\n  //æ¯å¦æ¯ææ·»å \r\n  _addable:boolean = true;\r\n  @Input()\r\n  set addable(val) {\r\n    this._addable = val;\r\n    this.addTagAble = val;\r\n  }\r\n  get addable() {\r\n    return this._addable;\r\n  }\r\n  //ç±»å\r\n  _tagType:string;\r\n  @Input()\r\n  set tagType(val) {\r\n    this._tagType = val;\r\n    this.cd.detectChanges();\r\n  }\r\n  get tagType() {\r\n    return this._tagType;\r\n  }\r\n//èªå®ä¹é¢è²\r\n  _color:string;\r\n  @Input()\r\n  set color(val) {\r\n    this._color = val;\r\n    this.styleInit();\r\n  }\r\n  get color() {\r\n    return this._color;\r\n  }\r\n\r\n  //æ¯å¦æ¯æå³é­\r\n  _closable:boolean = true;\r\n  @Input()\r\n  set closable(val) {\r\n    this._closable = val;\r\n  }\r\n  get closable() {\r\n    return this._closable;\r\n  }\r\n\r\n  _readonly:boolean = false;\r\n  @Input()\r\n  set readonly(val) {\r\n    this._readonly = val;\r\n    if(!this._readonly){\r\n      this._closable = true;\r\n      // this._addable = true;\r\n      this.addTagAble = true;\r\n    }\r\n    else{\r\n      this.activeTag = '';\r\n      this._closable = false;\r\n      // this._addable = false;\r\n      this.addTagAble = false;\r\n    }\r\n    this.cd.detectChanges();\r\n  }\r\n  get readonly() {\r\n    return this._readonly;\r\n  }\r\n\r\n  @Input()\r\n  className:string;\r\n  @Output()\r\n  checkChanged = new EventEmitter<any>();\r\n  @Output()\r\n  tagClick = new EventEmitter<any>();\r\n  @Output()\r\n  dataChanged = new EventEmitter<any>();\r\n  @Output()\r\n  closed = new EventEmitter<any>();\r\n\r\n  @ViewChild('addInputText') addInputText: ElementRef;\r\n\r\n  addInput:boolean = false;\r\n  addTagValue:string = '';\r\n  placeholder:string;\r\n  checkedTags:Array<any> = [];\r\n  innerTags: Tag[] = [];\r\n  tagStyle;\r\n  activeTag:string;\r\n  //æ·»å æé®æ¯å¦ç¦ç¨\r\n  addTagAble:boolean = true;\r\n  private onChangeCallback: Function = () => { };\r\n  private onTouchedCallback: Function = () => { };\r\n\r\n  constructor(public localeService: LocaleService,private cd: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    if(this._checkable){\r\n      this._closable = false;\r\n    }\r\n    this.placeholder = this.localeService.getValue('tag.placeholder');\r\n  }\r\n  tagInit(data){\r\n    this.innerTags = [];\r\n    if(!data) return;\r\n    let tagsArray = data.split(',');\r\n    const tagsData = tagsArray.filter(item=>{\r\n      if(item !== ''){\r\n        return item;\r\n      }\r\n    })\r\n    if(tagsData && tagsData.length){\r\n      for(let i = 0; i< tagsData.length; i++){\r\n        let tagdata = {\r\n          name:''\r\n        };\r\n        tagdata.name = tagsData[i];\r\n        this.innerTags.push(tagdata);\r\n      }\r\n    }\r\n    else{\r\n      this.innerTags = [];\r\n    }\r\n  }\r\n  /**\r\n   * ç¹å»å³é­\r\n   * @param e event\r\n   * @param tag tag\r\n   * @param index tagç´¢å¼\r\n   */\r\n  closeHandler(e: any, tag, index:number) {\r\n    e.preventDefault();\r\n    this.innerTags.splice(index,1);\r\n    const tagdata = this.tagProcess(this.innerTags);\r\n    this.onChangeCallback(tagdata);\r\n    this.onTouchedCallback();\r\n    this.closed.emit(tag.name);\r\n    this.dataChanged.emit(tagdata);\r\n  }\r\n  /**\r\n   * ç¹å»tag\r\n   * @param e event\r\n   * @param tag\r\n   */\r\n  clickHandler(e, tag){\r\n    e.preventDefault();\r\n    if(this._readonly) return;\r\n    if(this.activeTag != tag['name']){\r\n      this.activeTag = tag.name;\r\n    }\r\n    this.tagClick.emit(tag.name);\r\n    if(!this._checkable) return;\r\n    if(tag.hasOwnProperty('checked')){\r\n      tag.checked = !tag.checked;\r\n    }\r\n    else{\r\n      tag.checked = true;\r\n    }\r\n    this.checkedTags = this.innerTags.filter((data)=>{\r\n      return data.checked;\r\n    });\r\n    const tagdata = this.tagProcess(this.innerTags);\r\n    this.onChangeCallback(tagdata);\r\n    this.onTouchedCallback();\r\n\r\n    const CheckChangedData = {\r\n      data: tagdata,\r\n      tag: tag.name,\r\n      checked: this.tagProcess(this.checkedTags)\r\n    };\r\n    this.checkChanged.emit(CheckChangedData);\r\n  }\r\n  /**\r\n   * ç¹å»æ·»å tagæé®\r\n   */\r\n  addHander(){\r\n    if(!this._addable || !this.addTagAble) return;\r\n    this.addInput = true;\r\n    this.addTagValue = '';\r\n    setTimeout(() => {\r\n      this.addInputText.nativeElement.focus();\r\n    });\r\n  }\r\n  /**\r\n   * æ·»å tagå¤±å»ç¦ç¹\r\n   */\r\n  addInputBlur(event){\r\n    if(!this._addable || !this.addInput) return;\r\n    if(this.addTagValue){\r\n      const hastag = this.innerTags.find(tag => {\r\n        return tag.name == this.addTagValue;\r\n      });\r\n      if(hastag){\r\n        this.addInput = false;\r\n        return;\r\n      }\r\n      else{\r\n        const tag = {name: this.addTagValue};\r\n        this.innerTags.push(tag);\r\n        const tagdata = this.tagProcess(this.innerTags);\r\n        this.dataChanged.emit(this.tagProcess(this.innerTags));\r\n        this.onChangeCallback(tagdata);\r\n        this.onTouchedCallback();\r\n      }\r\n    }\r\n    this.addInput = false;\r\n  }\r\n\r\n  writeValue(val:string): void {\r\n    this._data = val;\r\n    this.tagInit(this._data);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChangeCallback = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouchedCallback = fn;\r\n  }\r\n\r\n  tagProcess(data) {\r\n    if(data && data.length){\r\n      let tagProcessData = [];\r\n      data.forEach(tag => {\r\n        tagProcessData.push(tag.name);\r\n      });\r\n      return tagProcessData.join(',');\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n //æ¹åéæåº¦\r\n  hexToRgba(hex, opacity = 1) {\r\n    const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\r\n    var sColor = hex.toLowerCase();\r\n    if(sColor && reg.test(sColor)){\r\n        if(sColor.length === 4){\r\n            var sColorNew = \"#\";\r\n                for(var i=1; i<4; i+=1){\r\n                    sColorNew += sColor.slice(i,i+1).concat(sColor.slice(i,i+1));       \r\n                }\r\n                sColor = sColorNew;\r\n        }\r\n        //å¤çå­ä½çé¢è²å¼\r\n        var sColorChange = [];\r\n        for(var i=1; i<7; i+=2){\r\n            sColorChange.push(parseInt(\"0x\"+sColor.slice(i,i+2)));       \r\n        }\r\n        return \"RGB(\" + sColorChange.join(\",\") + ',' + opacity + \")\";\r\n    }else{\r\n        return sColor;       \r\n    }}\r\n  styleInit() {\r\n    if(this.color){\r\n      this.tagStyle = {\r\n        color: this._color,\r\n        background: this._color? this.hexToRgba(this._color,0.1):'',\r\n        borderColor: this._color\r\n      };\r\n    }\r\n    else{\r\n      this.tagStyle = '';\r\n    }\r\n    this.cd.detectChanges();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TagsComponent } from './tags.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\n\r\n@NgModule({\r\n  declarations: [TagsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    LocaleModule.forRoot()\r\n  ],\r\n  exports: [TagsComponent]\r\n})\r\nexport class TagsModule { }\r\n"]}