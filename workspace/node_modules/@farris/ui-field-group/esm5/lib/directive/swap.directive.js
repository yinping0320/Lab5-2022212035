/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, ElementRef } from '@angular/core';
import { DragDirective } from './drag.directive';
var SwapDirective = /** @class */ (function (_super) {
    tslib_1.__extends(SwapDirective, _super);
    function SwapDirective(el) {
        var _this = _super.call(this, el) || this;
        _this.el = el;
        return _this;
    }
    /*获取元素绝对位置的纵坐标*/
    /*获取元素绝对位置的纵坐标*/
    /**
     * @param {?} e
     * @return {?}
     */
    SwapDirective.prototype.getTop = /*获取元素绝对位置的纵坐标*/
    /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        /** @type {?} */
        var offset = e.offsetTop;
        if (e.offsetParent) {
            offset += this.getTop(e.offsetParent);
        }
        return offset;
    };
    /*获取元素绝对位置的横坐标*/
    /*获取元素绝对位置的横坐标*/
    /**
     * @param {?} e
     * @return {?}
     */
    SwapDirective.prototype.getLeft = /*获取元素绝对位置的横坐标*/
    /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        /** @type {?} */
        var offset = e.offsetLeft;
        // console.log(offset);
        if (e.offsetParent) {
            offset += this.getLeft(e.offsetParent);
        }
        return offset;
    };
    // tslint:disable-next-line:use-life-cycle-interface
    // tslint:disable-next-line:use-life-cycle-interface
    /**
     * @return {?}
     */
    SwapDirective.prototype.ngOnInit = 
    // tslint:disable-next-line:use-life-cycle-interface
    /**
     * @return {?}
     */
    function () {
        _super.prototype.ngOnInit.call(this);
    };
    // tslint:disable-next-line:member-ordering
    /**
     * 存放所有指令位置
     */
    SwapDirective.elList = new Array(Map);
    SwapDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[appSwap]'
                },] }
    ];
    /** @nocollapse */
    SwapDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return SwapDirective;
}(DragDirective));
export { SwapDirective };
if (false) {
    /**
     * 存放所有指令位置
     * @type {?}
     */
    SwapDirective.elList;
    /** @type {?} */
    SwapDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dhcC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWZpZWxkLWdyb3VwLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZS9zd2FwLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVqRDtJQU9tQyx5Q0FBYTtJQVE5Qyx1QkFBbUIsRUFBYztRQUFqQyxZQUNFLGtCQUFNLEVBQUUsQ0FBQyxTQUNWO1FBRmtCLFFBQUUsR0FBRixFQUFFLENBQVk7O0lBRWpDLENBQUM7SUFFRCxnQkFBZ0I7Ozs7OztJQUNoQiw4QkFBTTs7Ozs7SUFBTixVQUFPLENBQUM7O1lBQ0YsTUFBTSxHQUFHLENBQUMsQ0FBQyxTQUFTO1FBQ3hCLElBQUksQ0FBQyxDQUFDLFlBQVksRUFBRTtZQUNsQixNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDdkM7UUFDRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBRUQsZ0JBQWdCOzs7Ozs7SUFDaEIsK0JBQU87Ozs7O0lBQVAsVUFBUSxDQUFDOztZQUNILE1BQU0sR0FBRyxDQUFDLENBQUMsVUFBVTtRQUN6Qix1QkFBdUI7UUFDdkIsSUFBSSxDQUFDLENBQUMsWUFBWSxFQUFFO1lBQ2xCLE1BQU0sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUN4QztRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7SUFFRCxvREFBb0Q7Ozs7O0lBQ3BELGdDQUFROzs7OztJQUFSO1FBQ0UsaUJBQU0sUUFBUSxXQUFFLENBQUM7SUFDbkIsQ0FBQzs7Ozs7SUE1Qk0sb0JBQU0sR0FBRyxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQzs7Z0JBYmhDLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsV0FBVztpQkFDdEI7Ozs7Z0JBTG1CLFVBQVU7O0lBNkM5QixvQkFBQztDQUFBLEFBMUNELENBT21DLGFBQWEsR0FtQy9DO1NBbkNZLGFBQWE7Ozs7OztJQU14QixxQkFBK0I7O0lBRW5CLDJCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEcmFnRGlyZWN0aXZlIH0gZnJvbSAnLi9kcmFnLmRpcmVjdGl2ZSc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1thcHBTd2FwXSdcclxufSlcclxuXHJcbi8qKlxyXG4gKiDkuqTmjaLkvY3nva7mjIfku6RcclxuICovXHJcbmV4cG9ydCBjbGFzcyBTd2FwRGlyZWN0aXZlIGV4dGVuZHMgRHJhZ0RpcmVjdGl2ZSB7XHJcblxyXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTptZW1iZXItb3JkZXJpbmdcclxuICAvKipcclxuICAgKiDlrZjmlL7miYDmnInmjIfku6TkvY3nva5cclxuICAgKi9cclxuICBzdGF0aWMgZWxMaXN0ID0gbmV3IEFycmF5KE1hcCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBlbDogRWxlbWVudFJlZikge1xyXG4gICAgc3VwZXIoZWwpO1xyXG4gIH1cclxuXHJcbiAgLyrojrflj5blhYPntKDnu53lr7nkvY3nva7nmoTnurXlnZDmoIcqL1xyXG4gIGdldFRvcChlKSB7XHJcbiAgICBsZXQgb2Zmc2V0ID0gZS5vZmZzZXRUb3A7XHJcbiAgICBpZiAoZS5vZmZzZXRQYXJlbnQpIHtcclxuICAgICAgb2Zmc2V0ICs9IHRoaXMuZ2V0VG9wKGUub2Zmc2V0UGFyZW50KTtcclxuICAgIH1cclxuICAgIHJldHVybiBvZmZzZXQ7XHJcbiAgfVxyXG5cclxuICAvKuiOt+WPluWFg+e0oOe7neWvueS9jee9rueahOaoquWdkOaghyovXHJcbiAgZ2V0TGVmdChlKSB7XHJcbiAgICBsZXQgb2Zmc2V0ID0gZS5vZmZzZXRMZWZ0O1xyXG4gICAgLy8gY29uc29sZS5sb2cob2Zmc2V0KTtcclxuICAgIGlmIChlLm9mZnNldFBhcmVudCkge1xyXG4gICAgICBvZmZzZXQgKz0gdGhpcy5nZXRMZWZ0KGUub2Zmc2V0UGFyZW50KTtcclxuICAgIH1cclxuICAgIHJldHVybiBvZmZzZXQ7XHJcbiAgfVxyXG5cclxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6dXNlLWxpZmUtY3ljbGUtaW50ZXJmYWNlXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICBzdXBlci5uZ09uSW5pdCgpO1xyXG4gIH1cclxufVxyXG4iXX0=