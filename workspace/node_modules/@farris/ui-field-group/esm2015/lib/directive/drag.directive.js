/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, HostListener } from '@angular/core';
export class DragDirective {
    /**
     * @param {?} el
     */
    constructor(el) {
        this.el = el;
        this.isDown = false;
        // 记录鼠标点击事件的位置 Y
        this.totalOffsetX = 0; // 记录总偏移量 X轴
        // 记录总偏移量 X轴
        this.totalOffsetY = 0; // 记录总偏移量 Y轴
    }
    // 记录总偏移量 Y轴
    // 点击事件
    /**
     * @param {?} event
     * @return {?}
     */
    onMousedown(event) {
        this.isDown = true;
        this.disX = event.clientX;
        this.disY = event.clientY;
    }
    // 监听document移动事件事件
    /**
     * @param {?} event
     * @return {?}
     */
    onMousemove(event) {
        // 判断该元素是否被点击了。
        if (this.isDown) {
            this.el.nativeElement.style.left = this.totalOffsetX + event.clientX - this.disX + 'px';
            this.el.nativeElement.style.top = this.totalOffsetY + event.clientY - this.disY + 'px';
        }
    }
    // 监听document离开事件
    /**
     * @param {?} event
     * @return {?}
     */
    onMouseup(event) {
        // 只用当元素移动过了，离开函数体才会触发。
        if (this.isDown) {
            this.totalOffsetX += event.clientX - this.disX;
            this.totalOffsetY += event.clientY - this.disY;
            this.isDown = false;
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.el.nativeElement.style.position = 'relative';
    }
}
DragDirective.decorators = [
    { type: Directive, args: [{
                selector: '[appDrag]'
            },] }
];
/** @nocollapse */
DragDirective.ctorParameters = () => [
    { type: ElementRef }
];
DragDirective.propDecorators = {
    onMousedown: [{ type: HostListener, args: ['mousedown', ['$event'],] }],
    onMousemove: [{ type: HostListener, args: ['document:mousemove', ['$event'],] }],
    onMouseup: [{ type: HostListener, args: ['document:mouseup', ['$event'],] }]
};
if (false) {
    /** @type {?} */
    DragDirective.prototype.isDown;
    /** @type {?} */
    DragDirective.prototype.disX;
    /** @type {?} */
    DragDirective.prototype.disY;
    /**
     * @type {?}
     * @private
     */
    DragDirective.prototype.totalOffsetX;
    /**
     * @type {?}
     * @private
     */
    DragDirective.prototype.totalOffsetY;
    /** @type {?} */
    DragDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWZpZWxkLWdyb3VwLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZS9kcmFnLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQVUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBSzVFLE1BQU0sT0FBTyxhQUFhOzs7O0lBQ3hCLFlBQW1CLEVBQWM7UUFBZCxPQUFFLEdBQUYsRUFBRSxDQUFZO1FBRTFCLFdBQU0sR0FBRyxLQUFLLENBQUM7O1FBT2QsaUJBQVksR0FBRyxDQUFDLENBQUMsQ0FBQyxZQUFZOztRQUM5QixpQkFBWSxHQUFHLENBQUMsQ0FBQyxDQUFDLFlBQVk7SUFUdEMsQ0FBQzs7Ozs7OztJQVlzQyxXQUFXLENBQUMsS0FBSztRQUN0RCxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUNuQixJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUM7UUFDMUIsSUFBSSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDO0lBQzVCLENBQUM7Ozs7OztJQUcrQyxXQUFXLENBQUMsS0FBSztRQUMvRCxlQUFlO1FBQ2YsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2YsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7WUFDeEYsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7U0FDeEY7SUFDSCxDQUFDOzs7Ozs7SUFHNkMsU0FBUyxDQUFDLEtBQUs7UUFDM0QsdUJBQXVCO1FBQ3ZCLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNmLElBQUksQ0FBQyxZQUFZLElBQUksS0FBSyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1lBQy9DLElBQUksQ0FBQyxZQUFZLElBQUksS0FBSyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1lBQy9DLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1NBQ3JCO0lBQ0gsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLFVBQVUsQ0FBQztJQUNwRCxDQUFDOzs7WUE1Q0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxXQUFXO2FBQ3RCOzs7O1lBSm1CLFVBQVU7OzswQkFtQjNCLFlBQVksU0FBQyxXQUFXLEVBQUUsQ0FBQyxRQUFRLENBQUM7MEJBT3BDLFlBQVksU0FBQyxvQkFBb0IsRUFBRSxDQUFDLFFBQVEsQ0FBQzt3QkFTN0MsWUFBWSxTQUFDLGtCQUFrQixFQUFFLENBQUMsUUFBUSxDQUFDOzs7O0lBM0I1QywrQkFBc0I7O0lBRXRCLDZCQUFZOztJQUVaLDZCQUFZOzs7OztJQUdaLHFDQUF5Qjs7Ozs7SUFDekIscUNBQXlCOztJQVZiLDJCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgT25Jbml0LCBIb3N0TGlzdGVuZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW2FwcERyYWddJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgRHJhZ0RpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgY29uc3RydWN0b3IocHVibGljIGVsOiBFbGVtZW50UmVmKSB7XHJcbiAgfVxyXG4gIHB1YmxpYyBpc0Rvd24gPSBmYWxzZTtcclxuXHJcbiAgcHVibGljIGRpc1g7IC8vIOiusOW9lem8oOagh+eCueWHu+S6i+S7tueahOS9jee9riBYXHJcblxyXG4gIHB1YmxpYyBkaXNZOyAvLyDorrDlvZXpvKDmoIfngrnlh7vkuovku7bnmoTkvY3nva4gWVxyXG5cclxuXHJcbiAgcHJpdmF0ZSB0b3RhbE9mZnNldFggPSAwOyAvLyDorrDlvZXmgLvlgY/np7vph48gWOi9tFxyXG4gIHByaXZhdGUgdG90YWxPZmZzZXRZID0gMDsgLy8g6K6w5b2V5oC75YGP56e76YePIFnovbRcclxuXHJcbiAgLy8g54K55Ye75LqL5Lu2XHJcbiAgQEhvc3RMaXN0ZW5lcignbW91c2Vkb3duJywgWyckZXZlbnQnXSkgb25Nb3VzZWRvd24oZXZlbnQpIHtcclxuICAgIHRoaXMuaXNEb3duID0gdHJ1ZTtcclxuICAgIHRoaXMuZGlzWCA9IGV2ZW50LmNsaWVudFg7XHJcbiAgICB0aGlzLmRpc1kgPSBldmVudC5jbGllbnRZO1xyXG4gIH1cclxuXHJcbiAgLy8g55uR5ZCsZG9jdW1lbnTnp7vliqjkuovku7bkuovku7ZcclxuICBASG9zdExpc3RlbmVyKCdkb2N1bWVudDptb3VzZW1vdmUnLCBbJyRldmVudCddKSBvbk1vdXNlbW92ZShldmVudCkge1xyXG4gICAgLy8g5Yik5pat6K+l5YWD57Sg5piv5ZCm6KKr54K55Ye75LqG44CCXHJcbiAgICBpZiAodGhpcy5pc0Rvd24pIHtcclxuICAgICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LnN0eWxlLmxlZnQgPSB0aGlzLnRvdGFsT2Zmc2V0WCArIGV2ZW50LmNsaWVudFggLSB0aGlzLmRpc1ggKyAncHgnO1xyXG4gICAgICB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuc3R5bGUudG9wID0gdGhpcy50b3RhbE9mZnNldFkgKyBldmVudC5jbGllbnRZIC0gdGhpcy5kaXNZICsgJ3B4JztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIOebkeWQrGRvY3VtZW5056a75byA5LqL5Lu2XHJcbiAgQEhvc3RMaXN0ZW5lcignZG9jdW1lbnQ6bW91c2V1cCcsIFsnJGV2ZW50J10pIG9uTW91c2V1cChldmVudCkge1xyXG4gICAgLy8g5Y+q55So5b2T5YWD57Sg56e75Yqo6L+H5LqG77yM56a75byA5Ye95pWw5L2T5omN5Lya6Kem5Y+R44CCXHJcbiAgICBpZiAodGhpcy5pc0Rvd24pIHtcclxuICAgICAgdGhpcy50b3RhbE9mZnNldFggKz0gZXZlbnQuY2xpZW50WCAtIHRoaXMuZGlzWDtcclxuICAgICAgdGhpcy50b3RhbE9mZnNldFkgKz0gZXZlbnQuY2xpZW50WSAtIHRoaXMuZGlzWTtcclxuICAgICAgdGhpcy5pc0Rvd24gPSBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LnN0eWxlLnBvc2l0aW9uID0gJ3JlbGF0aXZlJztcclxuICB9XHJcbn1cclxuIl19