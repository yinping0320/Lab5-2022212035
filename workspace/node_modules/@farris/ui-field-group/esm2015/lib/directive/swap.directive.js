/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef } from '@angular/core';
import { DragDirective } from './drag.directive';
/**
 * 交换位置指令
 */
export class SwapDirective extends DragDirective {
    /**
     * @param {?} el
     */
    constructor(el) {
        super(el);
        this.el = el;
    }
    /*获取元素绝对位置的纵坐标*/
    /**
     * @param {?} e
     * @return {?}
     */
    getTop(e) {
        /** @type {?} */
        let offset = e.offsetTop;
        if (e.offsetParent) {
            offset += this.getTop(e.offsetParent);
        }
        return offset;
    }
    /*获取元素绝对位置的横坐标*/
    /**
     * @param {?} e
     * @return {?}
     */
    getLeft(e) {
        /** @type {?} */
        let offset = e.offsetLeft;
        // console.log(offset);
        if (e.offsetParent) {
            offset += this.getLeft(e.offsetParent);
        }
        return offset;
    }
    // tslint:disable-next-line:use-life-cycle-interface
    /**
     * @return {?}
     */
    ngOnInit() {
        super.ngOnInit();
    }
}
// tslint:disable-next-line:member-ordering
/**
 * 存放所有指令位置
 */
SwapDirective.elList = new Array(Map);
SwapDirective.decorators = [
    { type: Directive, args: [{
                selector: '[appSwap]'
            },] }
];
/** @nocollapse */
SwapDirective.ctorParameters = () => [
    { type: ElementRef }
];
if (false) {
    /**
     * 存放所有指令位置
     * @type {?}
     */
    SwapDirective.elList;
    /** @type {?} */
    SwapDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dhcC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWZpZWxkLWdyb3VwLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZS9zd2FwLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTWpEOztHQUVHO0FBQ0gsTUFBTSxPQUFPLGFBQWMsU0FBUSxhQUFhOzs7O0lBUTlDLFlBQW1CLEVBQWM7UUFDL0IsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRE8sT0FBRSxHQUFGLEVBQUUsQ0FBWTtJQUVqQyxDQUFDOzs7Ozs7SUFHRCxNQUFNLENBQUMsQ0FBQzs7WUFDRixNQUFNLEdBQUcsQ0FBQyxDQUFDLFNBQVM7UUFDeEIsSUFBSSxDQUFDLENBQUMsWUFBWSxFQUFFO1lBQ2xCLE1BQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUN2QztRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Ozs7OztJQUdELE9BQU8sQ0FBQyxDQUFDOztZQUNILE1BQU0sR0FBRyxDQUFDLENBQUMsVUFBVTtRQUN6Qix1QkFBdUI7UUFDdkIsSUFBSSxDQUFDLENBQUMsWUFBWSxFQUFFO1lBQ2xCLE1BQU0sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUN4QztRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Ozs7O0lBR0QsUUFBUTtRQUNOLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNuQixDQUFDOzs7Ozs7QUE1Qk0sb0JBQU0sR0FBRyxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQzs7WUFiaEMsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxXQUFXO2FBQ3RCOzs7O1lBTG1CLFVBQVU7Ozs7Ozs7SUFnQjVCLHFCQUErQjs7SUFFbkIsMkJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IERyYWdEaXJlY3RpdmUgfSBmcm9tICcuL2RyYWcuZGlyZWN0aXZlJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW2FwcFN3YXBdJ1xyXG59KVxyXG5cclxuLyoqXHJcbiAqIOS6pOaNouS9jee9ruaMh+S7pFxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIFN3YXBEaXJlY3RpdmUgZXh0ZW5kcyBEcmFnRGlyZWN0aXZlIHtcclxuXHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm1lbWJlci1vcmRlcmluZ1xyXG4gIC8qKlxyXG4gICAqIOWtmOaUvuaJgOacieaMh+S7pOS9jee9rlxyXG4gICAqL1xyXG4gIHN0YXRpYyBlbExpc3QgPSBuZXcgQXJyYXkoTWFwKTtcclxuXHJcbiAgY29uc3RydWN0b3IocHVibGljIGVsOiBFbGVtZW50UmVmKSB7XHJcbiAgICBzdXBlcihlbCk7XHJcbiAgfVxyXG5cclxuICAvKuiOt+WPluWFg+e0oOe7neWvueS9jee9rueahOe6teWdkOaghyovXHJcbiAgZ2V0VG9wKGUpIHtcclxuICAgIGxldCBvZmZzZXQgPSBlLm9mZnNldFRvcDtcclxuICAgIGlmIChlLm9mZnNldFBhcmVudCkge1xyXG4gICAgICBvZmZzZXQgKz0gdGhpcy5nZXRUb3AoZS5vZmZzZXRQYXJlbnQpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG9mZnNldDtcclxuICB9XHJcblxyXG4gIC8q6I635Y+W5YWD57Sg57ud5a+55L2N572u55qE5qiq5Z2Q5qCHKi9cclxuICBnZXRMZWZ0KGUpIHtcclxuICAgIGxldCBvZmZzZXQgPSBlLm9mZnNldExlZnQ7XHJcbiAgICAvLyBjb25zb2xlLmxvZyhvZmZzZXQpO1xyXG4gICAgaWYgKGUub2Zmc2V0UGFyZW50KSB7XHJcbiAgICAgIG9mZnNldCArPSB0aGlzLmdldExlZnQoZS5vZmZzZXRQYXJlbnQpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG9mZnNldDtcclxuICB9XHJcblxyXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTp1c2UtbGlmZS1jeWNsZS1pbnRlcmZhY2VcclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHN1cGVyLm5nT25Jbml0KCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==