/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { ComboLookupComponent } from './combo-lookup.component';
import { DataTableModule } from '@farris/ui-datatable';
import { TreeTableModule } from '@farris/ui-treetable';
import { InputGroupModule } from '@farris/ui-input-group';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { LoadingModule } from '@farris/ui-loading';
import { ComboLocaleService } from '@farris/ui-combo-list';
export class ComboLookupModule {
}
ComboLookupModule.decorators = [
    { type: NgModule, args: [{
                declarations: [ComboLookupComponent],
                imports: [
                    CommonModule, FormsModule, DataTableModule,
                    TreeTableModule, InputGroupModule,
                    LoadingModule.forRoot()
                ],
                exports: [ComboLookupComponent],
                providers: [ComboLocaleService]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYm8tbG9va3VwLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktY29tYm8tbG9va3VwLyIsInNvdXJjZXMiOlsibGliL2NvbWJvLWxvb2t1cC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUMxRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQVczRCxNQUFNLE9BQU8saUJBQWlCOzs7WUFWN0IsUUFBUSxTQUFDO2dCQUNSLFlBQVksRUFBRSxDQUFDLG9CQUFvQixDQUFDO2dCQUNwQyxPQUFPLEVBQUU7b0JBQ1AsWUFBWSxFQUFFLFdBQVcsRUFBRSxlQUFlO29CQUMxQyxlQUFlLEVBQUUsZ0JBQWdCO29CQUNqQyxhQUFhLENBQUMsT0FBTyxFQUFFO2lCQUN4QjtnQkFDRCxPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztnQkFDL0IsU0FBUyxFQUFFLENBQUMsa0JBQWtCLENBQUM7YUFDaEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21ib0xvb2t1cENvbXBvbmVudCB9IGZyb20gJy4vY29tYm8tbG9va3VwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IERhdGFUYWJsZU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZGF0YXRhYmxlJztcclxuaW1wb3J0IHsgVHJlZVRhYmxlTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS10cmVldGFibGUnO1xyXG5pbXBvcnQgeyBJbnB1dEdyb3VwTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1pbnB1dC1ncm91cCc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBMb2FkaW5nTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2FkaW5nJztcclxuaW1wb3J0IHsgQ29tYm9Mb2NhbGVTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21iby1saXN0JztcclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtDb21ib0xvb2t1cENvbXBvbmVudF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLCBGb3Jtc01vZHVsZSwgRGF0YVRhYmxlTW9kdWxlLFxyXG4gICAgVHJlZVRhYmxlTW9kdWxlLCBJbnB1dEdyb3VwTW9kdWxlLFxyXG4gICAgTG9hZGluZ01vZHVsZS5mb3JSb290KClcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtDb21ib0xvb2t1cENvbXBvbmVudF0sXHJcbiAgcHJvdmlkZXJzOiBbQ29tYm9Mb2NhbGVTZXJ2aWNlXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ29tYm9Mb29rdXBNb2R1bGUgeyB9XHJcbiJdfQ==