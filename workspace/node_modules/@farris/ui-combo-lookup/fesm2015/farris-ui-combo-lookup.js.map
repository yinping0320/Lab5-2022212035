{"version":3,"file":"farris-ui-combo-lookup.js.map","sources":["ng://@farris/ui-combo-lookup/lib/combo-lookup.service.ts","ng://@farris/ui-combo-lookup/lib/combo-lookup.component.ts","ng://@farris/ui-combo-lookup/lib/combo-lookup.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ComboService } from '@farris/ui-combo-list';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LoadingService } from '@farris/ui-loading';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComboLookupService {\r\n\r\n  constructor() {}\r\n}\r\n","import { EventEmitter } from '@angular/core';\r\nimport {\r\n    Component, OnInit, ElementRef, ChangeDetectorRef, Inject, Renderer2,\r\n    Injector, Input, ViewChild, forwardRef, ViewEncapsulation, AfterViewChecked, Output\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { skip, take, filter, takeUntil, map, debounceTime, delay } from 'rxjs/operators';\r\nimport { BaseComboComponent, ComboService } from '@farris/ui-combo-list';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { LookupUtils, TreeInfo } from '@farris/ui-lookup';\r\nimport { TreeNode, TreeTableComponent } from '@farris/ui-treetable';\r\nimport { DataTableComponent } from '@farris/ui-datatable';\r\nimport { Subject, forkJoin, interval, zip } from 'rxjs';\r\nimport { IdService } from '@farris/ui-common';\r\n\r\nconst INPUT_COMBO_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    // tslint:disable-next-line: no-use-before-declare\r\n    useExisting: forwardRef(() => ComboLookupComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    // tslint:disable-next-line: component-selector\r\n    selector: 'farris-combo-lookup',\r\n    templateUrl: './combo-lookup.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    // styleUrls: ['./combo-lookup.component.scss'],\r\n    providers: [INPUT_COMBO_VALUE_ACCESSOR, ComboService, LookupUtils]\r\n})\r\nexport class ComboLookupComponent extends BaseComboComponent implements OnInit {\r\n    panelHeight = 300;\r\n\r\n    comPosition = {\r\n        'height.px': this.panelHeight\r\n    };\r\n\r\n    @Input() showHeader = true;\r\n\r\n    @Input() useTreeView = false;\r\n    // æ åè¡¨é»è®¤å±å¼å±çº§ã -1ï¼ ä¸å±å¼ï¼ 0ï¼ å¨é¨å±å¼ï¼ >0:  å±å¼å°æå®çº§æ°ï¼\r\n    @Input()\r\n    set columns(value: any[]) {\r\n        this._columns = value;\r\n    }\r\n    get columns(): any[] {\r\n        let cols = this._columns !== undefined && this._columns.length > 0 ? this._columns : this.comboService.columns;\r\n        if (this.useTreeView && cols.length > 1) {\r\n            cols = cols.filter(n => n.field === this.textField);\r\n        }\r\n        return cols;\r\n    }\r\n    @Input()\r\n    set pagination(value: boolean) {\r\n        this._pagination = value;\r\n    }\r\n    get pagination() {\r\n        if (this._pagination !== undefined) {\r\n            return this._pagination;\r\n        } else {\r\n            return this.comboService.pageInfo && this.pageInfo.enablePager ? this.pageInfo.enablePager : false;\r\n        }\r\n    }\r\n    @Input()\r\n    set displayType(val: string) {\r\n        this.comboService.displayType = val + '';\r\n    }\r\n    get displayType() {\r\n        return this.comboService.displayType;\r\n    }\r\n\r\n    /** -1: ä¸å±å¼ï¼ 0: å¨é¨å±å¼ï¼>0: å±å¼å°æå®çº§æ° */\r\n    @Input() expandLevel = -1;\r\n\r\n    /** æ è¡¨å¯ç¨è¿æ»¤è¡ */\r\n    @Input() enableFilterRow = false;\r\n\r\n    @ViewChild('tt')\r\n    set treeCmpRef(cmf: TreeTableComponent) {\r\n        if (cmf) {\r\n            cmf.cascadeCheck = this.cascade.enable;\r\n            cmf.cascadeDown = this.cascade.down;\r\n            cmf.cascadeUp = this.cascade.up;\r\n\r\n            this.tt$.next(cmf);\r\n        }\r\n        this._treeCmpRef = cmf;\r\n    }\r\n    get treeCmpRef(): TreeTableComponent {\r\n        return this._treeCmpRef;\r\n    }\r\n    @ViewChild('dt')\r\n    set tableCmpRef(cmf: DataTableComponent) {\r\n        if (cmf && this.pagination) {\r\n            this.loaded$.pipe(take(1)).subscribe(e => {\r\n                // console.log(this._tableCmpRef, cmf);\r\n                cmf.loadData({\r\n                    pageSize: this.pageInfo.pageSize,\r\n                    total: this.pageInfo.total,\r\n                    data: this.data,\r\n                    pageIndex: this.pageInfo.pageIndex\r\n                });\r\n            });\r\n        }\r\n        if (!this._tableCmpRef && this.loadFinish && cmf) {\r\n            cmf.loadData({\r\n                pageSize: this.pageInfo.pageSize,\r\n                total: this.pageInfo.total,\r\n                data: this.data,\r\n                pageIndex: this.pageInfo.pageIndex\r\n            });\r\n        }\r\n        this._tableCmpRef = cmf;\r\n    }\r\n\r\n    @Input() cascade = {\r\n        enable: false,\r\n        up: false,\r\n        down: false\r\n    };\r\n\r\n    @Input() treeInfo: TreeInfo;\r\n\r\n    /** æ å½¢å¸®å©æ°æ®å è½½æ¹å¼ï¼ default: åç½®åæ°ï¼ loadall: å è½½ææ layerloadï¼åå±å è½½ */\r\n    @Input() loadTreeDataType: 'default' | 'loadall' | 'layerload' = 'default';\r\n    /** å¯ç¨æé å®æ´æ è¿æ»¤ */\r\n    @Input() enableFullTree = true;\r\n\r\n    @Output() pageChanged = new EventEmitter();\r\n    @Output() pageSizeChanged = new EventEmitter();\r\n    /** ä½¿ç¨è¡¨åæ å°ï¼é»è®¤ false */\r\n    @Input() useFormDataMapping = false;\r\n\r\n    ownSelections: any;\r\n    loadFinish = false;\r\n    pageInfo: any = { pageSize: 20, pageIndex: 1, total: 0 };\r\n    private tt$ = new Subject();\r\n    private loaded$ = new Subject();\r\n    private _columns: any[];\r\n    private _pagination: boolean;\r\n    private _tableCmpRef: any;\r\n    private _treeCmpRef: any;\r\n    private _searchKeyWords = '';\r\n\r\n    loadDataType = 'all';\r\n\r\n    private idSer: IdService;\r\n\r\n    constructor(\r\n        public el: ElementRef,\r\n        public cdr: ChangeDetectorRef,\r\n        @Inject(DOCUMENT) public document: any,\r\n        public render: Renderer2,\r\n        public comboService: ComboService,\r\n        public injector: Injector\r\n    ) {\r\n        super(el, cdr, document, render, comboService, injector);\r\n        this.idSer = this.injector.get(IdService, null);\r\n        if (!this.idSer) {\r\n            this.idSer = new IdService();\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n\r\n        this.treeClientSearch.pipe(debounceTime(300)).subscribe((value: string) => {\r\n            if (!this.remoteSearch && this.treeCmpRef) {\r\n                this.treeCmpRef.searchHandle.search(this.textField, value);\r\n            }\r\n        });\r\n\r\n        this.comboService.treeInfo$.subscribe( (t: any) => {\r\n            if (t) {\r\n                if (this.loadTreeDataType === 'default') {\r\n                    this.loadDataType = t.loadDataType;\r\n                }\r\n\r\n                this.treeInfo = Object.assign(this.treeInfo|| {}, t);\r\n            }\r\n        });\r\n    }\r\n\r\n    protected onSelectionsChange(selections: any[]) {\r\n        if (this.displayType === 'LOOKUPLIST') {\r\n            if (!this.multiSelect) {\r\n                this.ownSelections = selections[0] ?  selections[0] : {};\r\n            } else {\r\n                this.ownSelections = {};\r\n                this.comboService.selections.forEach(item => {\r\n                    this.ownSelections[item[this.idField]] = item;\r\n                });\r\n            }\r\n            this.pageInfo = { ...this.pageInfo, ...this.comboService.pageInfo };\r\n            this.loadFinish = true;\r\n            this.cdr.detectChanges();\r\n            this.loaded$.next(this.pageInfo);\r\n        } else {\r\n            if (this.treeCmpRef) {\r\n                this.initTreeData();\r\n            } else {\r\n                this.tt$.pipe(take(1)).subscribe((cmf: TreeTableComponent) => {\r\n                    this.treeCmpRef = cmf;\r\n                    this.initTreeData();\r\n                    // cmf.checkedNodes(ids, true, false);\r\n                    // cmf.updateSerializedValue();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    private setTreeNodeExpandBy(nodes: TreeNode[], expandLayer) {\r\n        if (!nodes || !nodes.length) {\r\n            return;\r\n        }\r\n        nodes.forEach((n: TreeNode) => {\r\n            const layer = n.data[this.treeInfo.dataField].layer;\r\n            n.expanded = layer <= expandLayer ? true : n.expanded;\r\n            if (n.children && n.children.length && layer + 1 <= expandLayer) {\r\n                this.setTreeNodeExpandBy(n.children, expandLayer);\r\n            }\r\n        });\r\n    }\r\n\r\n    private initTreeData() {\r\n        const __selections = this.comboService.selections.filter(n => n !== null && n !== undefined);\r\n        const ids = [];\r\n        this.ownSelections = __selections.map(item => {\r\n            ids.push(item[this.idField]);\r\n            return { data: item, id: item[this.idField] };\r\n        });\r\n        this.treeCmpRef.selections = this.ownSelections;\r\n        this.treeCmpRef.checkeds = this.ownSelections;\r\n\r\n        if (this.expandLevel != -1 && this.loadDataType == 'all' ) {\r\n            if (this.expandLevel > 0) {\r\n                this.setTreeNodeExpandBy(this.treeCmpRef.data, this.expandLevel);\r\n                this.treeCmpRef.updateSerializedValue();\r\n            } else {\r\n                this.treeCmpRef.expandAll();\r\n            }\r\n        }\r\n\r\n        if (this.comboService.data && this.comboService.data.length) {\r\n            if (this.treeCmpRef.checkValues && this.treeCmpRef.checkValues.length) {\r\n                if (this.multiSelect) {\r\n                    this.treeCmpRef.checkedNodes(this.treeCmpRef.checkValues);\r\n                    this.treeCmpRef.selectNodes(this.treeCmpRef.checkValues);\r\n                } else {\r\n                    this.treeCmpRef.selectNodes(this.treeCmpRef.checkValues);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private isTree() {\r\n        return this.displayType === 'LOOKUPTREELIST';\r\n    }\r\n\r\n\r\n    updateMappingFieldValue(clearMapFields = false) {\r\n        if ( this.ngControl && this.ngControl.formDirective &&\r\n            this.ngControl.formDirective.form && this.ngControl.formDirective.form.bindingData\r\n        ) {\r\n            const bindingData = this.ngControl.formDirective.form.bindingData;\r\n            const bindingPath = this.ngControl.formDirective.form.bindingPath;\r\n            let pathArr = [];\r\n            if (bindingPath) {\r\n                pathArr = bindingPath.split('/').filter(n => n !== '');\r\n            }\r\n            this.mappingField = this.mappingField ? this.mappingField : {};\r\n            if (this.mapFields) {\r\n                const helpFields = Object.keys(this.mapFields);\r\n                helpFields.forEach((f: any) => {\r\n                    const fieldNames = this.mapFields[f] ? this.mapFields[f] : '';\r\n                    let value = '';\r\n                    if (!clearMapFields) {\r\n                        const text = this.comboService.selections && this.comboService.selections.map(item => {\r\n                            return this.comboService.getValueByObj(f, item);\r\n                        }).filter(n => n !== null).join(this.separator);\r\n                        // value = text ? text : this.displayText ? this.displayText : '';\r\n                        value = text || '';\r\n                    }\r\n\r\n                    if (fieldNames) {\r\n                        fieldNames.split(',').forEach((fieldName: any) => {\r\n                            let _val = value;\r\n                            if (this.nosearch && fieldName === this.ngControl.name) {\r\n                                _val = this.displayText;\r\n                            }\r\n                            if (bindingData.setValue) {\r\n                                if ( !this.useFormDataMapping) {\r\n                                    bindingData.setValue( pathArr.concat(fieldName.split('.')), _val, true, true);\r\n                                }\r\n                            } else {\r\n                                this.commonUtils.setValue(bindingData, fieldName, value);\r\n                            }\r\n                           \r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    updateSelectedValues() {\r\n        if (\r\n            this.ngControl &&\r\n            this.ngControl.formDirective &&\r\n            this.ngControl.formDirective.form &&\r\n            this.ngControl.formDirective.form.bindingData\r\n        ) {\r\n            const bindingData = this.ngControl.formDirective.form.bindingData;\r\n            const bindingPath = this.ngControl.formDirective.form.bindingPath;\r\n            let pathArr = [];\r\n            if (bindingPath) {\r\n                pathArr = bindingPath.split('/').filter(n => n !== '');\r\n            }\r\n            let targetField = this.mappingField ? this.mapFields[this.idField] : '';\r\n\r\n            if (targetField && targetField.indexOf(',') > -1) {\r\n                targetField = targetField.split(',')[0];\r\n            }\r\n\r\n            // this.mappingField = this.mappingField ? this.mappingField : '';\r\n            if (targetField && bindingData.getValue) {\r\n                this.selectedValues = bindingData.getValue(pathArr.concat(targetField.split('.'))) || '';\r\n            } else if (targetField) {\r\n                this.selectedValues = this.commonUtils.getValue(targetField, bindingData) || '';\r\n            } \r\n            else {\r\n                // å¼å®¹ä¸ºè®¾ç½®idField å­æ®µæ å°çæåµï¼æ­¤æåµä½¿ç¨ valueField\r\n                targetField = this.mappingField ? this.mapFields[this.textField] : '';\r\n                if (targetField && bindingData.getValue) {\r\n                    this.comboService['__SELECTEDIDS__'] = this.comboService.getValue(this.idField);\r\n                    this.selectedValues =  bindingData.getValue(pathArr.concat(targetField.split('.'))) || '';\r\n                }\r\n            } \r\n        } else {\r\n            // UI state binding\r\n            if (this.el.nativeElement['__zone_symbol__UIStateBindingChangefalse']) {\r\n                // this.selectedValues = this.comboService.getValue(this.textField);\r\n                this.selectedValues = this.displayText;\r\n            }\r\n        }\r\n    }\r\n\r\n    onSelectRows(row) {\r\n        if (this.displayType === 'LOOKUPLIST') {\r\n            const { data, index } = row;\r\n            this.comboService.selectItem(data, index);\r\n            this.selectChange.emit({ data, index, instance: this }); // UI-STATE-BINDING ä¸­ä½¿ç¨\r\n        } else if (this.displayType === 'LOOKUPTREELIST') {\r\n            const { node } = row;\r\n            if (row.nodes) {\r\n                this.comboService.selectItem(row.nodes.map(n => n.data));\r\n            } else {\r\n                this.comboService.selectItem(node.data);\r\n            }\r\n            this.selectChange.emit(node);\r\n        }\r\n\r\n        this.updateTextAndValues();\r\n        if (!this.multiSelect) {\r\n            this.comboService.isOpen$.next(false);\r\n        }\r\n    }\r\n\r\n    onUnSelectRows(row) {\r\n        if (this.displayType === 'LOOKUPLIST') {\r\n            const { data } = row;\r\n            this.comboService.unSelectItem(data);\r\n        } else if (this.displayType === 'LOOKUPTREELIST') {\r\n            const { node } = row;\r\n            this.comboService.unSelectItem(node.data);\r\n            this.selectChange.emit(node);\r\n        }\r\n\r\n        this.updateTextAndValues();\r\n    }\r\n\r\n    onCheckAll(ev) {\r\n        let state;\r\n        let selections = [];\r\n        if (this.displayType === 'LOOKUPTREELIST') {\r\n            state = ev.checked;\r\n            selections = this.treeCmpRef.state.rowNodes\r\n                            .filter(n => n.node.selectable === undefined || n.node.selectable )\r\n                            .map(r => r.node.data);\r\n        } else {\r\n            state = ev;\r\n            selections = this.data;\r\n        }\r\n\r\n        if (state) {\r\n            this.comboService.selectAll(selections);\r\n        } else {\r\n            this.comboService.unSelectAll(selections);\r\n        }\r\n\r\n        this.updateTextAndValues();\r\n    }\r\n\r\n    private updateTextAndValues() {\r\n        this.comboService['__SELECTEDIDS__'] = this.comboService.getValue(this.idField);\r\n        this.selectedValues = this.comboService['__SELECTEDIDS__'];\r\n        if (!this.multiSelect) {\r\n            this.updateSelectedValues();\r\n        }\r\n        const _displayText = this.comboService.getValue(this.textField);\r\n        this.onValueChange({ text: _displayText, value: this.comboService['__SELECTEDIDS__'], selections: this.selections });\r\n    }\r\n\r\n    onKeyup($event) {\r\n        // console.log('key up', $event);\r\n\r\n    }\r\n\r\n    onKeydown($event: KeyboardEvent) {\r\n        // console.log('key down', $event);\r\n        if ($event.key === 'Tab') {\r\n            this.hide(false);\r\n        }\r\n\r\n        if ($event.key === 'Enter') {\r\n            $event.stopPropagation();\r\n            if (this._searchKeyWords && !this.multiSelect) {\r\n                if (this.displayType === 'LOOKUPLIST') {\r\n                    this.onSelectRows({data: this._tableCmpRef.selections});\r\n                } else if (this.displayType === 'LOOKUPTREELIST') {\r\n                    // this.treeCmpRef.selectNode()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onPageChanged(event) {\r\n        if (this.uri) {\r\n            this.getData(event).subscribe(data => this.comboService.loadLookUpDataTable(data, !!event.sortName));\r\n        } else {\r\n            this.pageChanged.emit(event);\r\n        }\r\n    }\r\n\r\n    onPageSizeChanged(event) {\r\n        if (this.uri) {\r\n            this.getData(event).subscribe(data => this.comboService.loadLookUpDataTable(data, !!event.sortName));\r\n        } else {\r\n            this.pageSizeChanged.emit(event);\r\n        }\r\n    }\r\n\r\n    onColumnSorted(event: { sortName: string; sortOrder: any }) {\r\n        const { sortName, sortOrder } = { ...event };\r\n        this.getData({ sortName, sortOrder }, 'search').subscribe(data => {\r\n            this.comboService.loadLookUpDataTable(data, true);\r\n        });\r\n    }\r\n\r\n    onClear() {\r\n        this.ownSelections = [];\r\n        if (this.isTree() && this.treeCmpRef) {\r\n            this.treeCmpRef.clearAll();\r\n        }\r\n        super.onClear();\r\n    }\r\n\r\n    private getChildren( parentPath,parentLayer,searchData: { searchField: string; searchValue: string }) {\r\n        const search = { parentLayer, category: 'children', ...searchData };\r\n        if (this.treeInfo.layerType === 'parentId') {\r\n            search['parentId'] = parentPath;\r\n        } else {\r\n            search['parentPath'] = parentPath;\r\n        }\r\n\r\n        const param = {\r\n            searchValue: JSON.stringify(search),\r\n            customData: this.customData,\r\n            enableFullTree: this.enableFullTree,\r\n            loadTreeDataType: this.loadTreeDataType\r\n        };\r\n\r\n        if (this._searchKeyWords) {\r\n            param.enableFullTree = false;\r\n            param.loadTreeDataType = 'layerload';\r\n\r\n            if (this.treeInfo.layerType === 'parentId') {\r\n                // æ å½¢å¸®å©æ¥è¯¢åï¼å±å¼èç¹æ¶å°ç¸å³æ¥è¯¢åæ°ä¼ éå°åç«¯ 2022-09-13\r\n                search.searchValue = '';\r\n                search.searchField = '*';\r\n            }\r\n            param.searchValue = JSON.stringify(search);\r\n        }\r\n\r\n        const tt = this.treeCmpRef as TreeTableComponent;\r\n        if (tt && tt.sortName) {\r\n            Object.assign(param, {\r\n                sortName: tt.sortName,\r\n                sortOrder: tt.sortOrder\r\n            });\r\n        }\r\n        return this.comboService.getData(param, 'get', true);\r\n    }\r\n\r\n\r\n    getData(event?: any, type = 'all') {\r\n        event = event || {};\r\n        if (this._searchKeyWords) {\r\n            event.search = {\r\n                field: '*',\r\n                value: this._searchKeyWords\r\n            };\r\n        }\r\n\r\n        const params = this.buildQueryParams(event, type);\r\n        return this.comboService.getData(params);\r\n    }\r\n\r\n    /** æéæ¥è¯¢åæ° */\r\n    private buildQueryParams(event?: any, type = 'all') {\r\n        const params: any = {};\r\n\r\n        const searchParam = { category: type };\r\n        if (event) {\r\n            if (event.pageInfo) {\r\n                params['pageIndex'] = event.pageInfo.pageIndex;\r\n                params['pageSize'] = event.pageInfo.pageSize;\r\n            }\r\n\r\n            if (event.search) {\r\n                searchParam['searchField'] = event.search.field;\r\n                searchParam['searchValue'] = event.search.value;\r\n            }\r\n\r\n            if (event.sortName) {\r\n                searchParam['sortName'] = event.sortName;\r\n            }\r\n            if (event.sortOrder) {\r\n                searchParam['sortOrder'] = event.sortOrder;\r\n            }\r\n        }\r\n\r\n        params['searchValue'] = JSON.stringify(searchParam);\r\n        if (this.customData) {\r\n            params['customData'] = this.customData;\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    filterDataOnServer(value, field) {\r\n        let search = { search: { field, value }};\r\n        if (value) {\r\n            this._searchKeyWords = value;\r\n\r\n        } else {\r\n            this._searchKeyWords = '';\r\n            search = null;\r\n        }\r\n\r\n        const params = this.buildQueryParams(search, 'search' );\r\n        if (!this.isOpen) {\r\n            if (this.nosearch) {\r\n                return;\r\n            }\r\n            this.isOpen = true;\r\n            this.comboService.isOpen$.next({ isOpen: this.isOpen, search: params});\r\n            return;\r\n        }\r\n        \r\n        this.comboService.serachValue$.next(params);\r\n    }\r\n\r\n    onExpandNode(tn: TreeNode) {\r\n        if (tn.leaf ||  tn['showLoading']) {\r\n            return;\r\n        }\r\n\r\n        if (!tn.children || !tn.children.length) {\r\n            let parentPath = '';\r\n            let parentLayer = -1;\r\n            const { field = '*', value = '' } = {\r\n                value: this._searchKeyWords\r\n            };\r\n            const treeInfoField = this.treeInfo.dataField;\r\n            if (this.treeInfo.layerType === 'parentId') {\r\n                // ç¶IDå è½½æ¹å¼\r\n                parentPath = tn['id'];\r\n                parentLayer = tn.data[treeInfoField][this.treeInfo.layerField];\r\n            } else {\r\n                if (treeInfoField) {\r\n                    parentPath = tn.data[treeInfoField][this.treeInfo.pathField];\r\n                    parentLayer = tn.data[treeInfoField][this.treeInfo.layerField];\r\n                } else {\r\n                    this.treeCmpRef.writeConsole('æªæ¾å°åçº§ä¿¡æ¯ã');\r\n                }\r\n            }\r\n\r\n            this.getChildren(parentPath, parentLayer, {\r\n                searchField: field === '*' ? '*' : field,\r\n                searchValue: value\r\n            }).subscribe(data => {\r\n                if (tn && data.items && data.items.length) {\r\n                    const nodes = this.comboService.checkNodeCanBeSelect(data.items, false);\r\n                    this.treeCmpRef.appendChildren(nodes, tn);\r\n                }\r\n                this.treeCmpRef.detectChanges();\r\n\r\n                // if (this.selectedValues && this.selectedValues.length) {\r\n                //     this.treeCmpRef.checkedNodes(this.selectedValues.split(','));\r\n                // }\r\n                const ids = this.comboService['__SELECTEDIDS__'];\r\n                if (ids && ids.length) {\r\n                    const idArr = ids.split(this.separator);\r\n                    if (this.multiSelect) {\r\n                        this.treeCmpRef.checkedNodes(idArr);\r\n                    }\r\n                    this.treeCmpRef.selectNodes(idArr);\r\n                }\r\n\r\n                this.treeCmpRef.psRef.directiveRef.update();\r\n            });\r\n        }\r\n    }\r\n\r\n    protected initDatasChangeAction() {\r\n        this.comboService.data$.pipe(\r\n            delay(120)\r\n        ).subscribe(data => {\r\n\r\n            // å¸®å©æ°æ®å¼æ­¥èªå®ä¹åæ°ï¼\r\n            // å¸®å©éç½®çé¢\r\n            if (!this.uri && data && data.length) {\r\n                this.updateSelections(this.selectedValues, data);\r\n                // TFS 574365\r\n                let txt = this.comboService.getValue(this.textField);\r\n                txt = txt ? txt : this.nosearch ? this.displayText: '';\r\n                \r\n                this.displayText = txt;\r\n                this['originalText'] = this.displayText;\r\n            }\r\n\r\n            if (this._searchKeyWords && data && data.length && !this.multiSelect) {\r\n                if (this.displayType === 'LOOKUPLIST') {\r\n                    this._tableCmpRef.selections = data[0];\r\n                    this._tableCmpRef.cd.detectChanges();\r\n                } else if (this.displayType === 'LOOKUPTREELIST') {\r\n                    // this.treeCmpRef.selectNode()\r\n                    const nodes = this.comboService.checkNodeCanBeSelect(data.items, false);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ComboLookupComponent } from './combo-lookup.component';\r\nimport { DataTableModule } from '@farris/ui-datatable';\r\nimport { TreeTableModule } from '@farris/ui-treetable';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LoadingModule } from '@farris/ui-loading';\r\nimport { ComboLocaleService } from '@farris/ui-combo-list';\r\n@NgModule({\r\n  declarations: [ComboLookupComponent],\r\n  imports: [\r\n    CommonModule, FormsModule, DataTableModule,\r\n    TreeTableModule, InputGroupModule,\r\n    LoadingModule.forRoot()\r\n  ],\r\n  exports: [ComboLookupComponent],\r\n  providers: [ComboLocaleService]\r\n})\r\nexport class ComboLookupModule { }\r\n"],"names":[],"mappings":"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"}
