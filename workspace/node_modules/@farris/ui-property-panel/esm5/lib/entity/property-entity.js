/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
var PropertyType = {
    string: 'string',
    boolean: 'boolean',
    number: 'number',
    select: 'select',
    boolOrExp: 'boolOrExp',
    multiSelect: 'multiSelect',
    date: 'date',
    datetime: 'datetime',
    modal: 'modal',
    cascade: 'cascade',
};
export { PropertyType };
var ElementPropertyConfig = /** @class */ (function () {
    function ElementPropertyConfig() {
        this.hide = false;
        this.hideTitle = false;
        // 是否启用级联特性
        this.enableCascade = false;
    }
    return ElementPropertyConfig;
}());
export { ElementPropertyConfig };
if (false) {
    /** @type {?} */
    ElementPropertyConfig.prototype.categoryId;
    /** @type {?} */
    ElementPropertyConfig.prototype.categoryName;
    /** @type {?} */
    ElementPropertyConfig.prototype.hide;
    /** @type {?} */
    ElementPropertyConfig.prototype.hideTitle;
    /** @type {?} */
    ElementPropertyConfig.prototype.properties;
    /** @type {?} */
    ElementPropertyConfig.prototype.enableCascade;
    /** @type {?} */
    ElementPropertyConfig.prototype.propertyData;
    /** @type {?} */
    ElementPropertyConfig.prototype.parentPropertyID;
    /** @type {?} */
    ElementPropertyConfig.prototype.setPropertyRelates;
}
// 属性实体
var 
// 属性实体
PropertyEntity = /** @class */ (function () {
    function PropertyEntity() {
        // 属性的默认值
        this.readonly = false; // 是否只读
        // 是否只读
        this.visible = true; // 是否可见
        // 数字类型属性的小数位数
        // 属性改变后刷新整个面板：用于更改其他分类下的属性
        this.refreshPanelAfterChanged = false;
        // 下拉多选类型：属性值的类型：string(多值以逗号分隔)/array(多值组装成数组)
        this.multiSelectDataType = 'string';
        // 级联属性配置
        this.isExpand = false; // 级联属性是否默认收起
        // 级联属性是否默认收起
        this.hideCascadeTitle = false; // 是否隐藏级联属性的头部
        // 属性值转换器,
        this.showClearButton = false; // 是否展示清除图标
    }
    // 打开模态框前的方法，一般用于校验逻辑，返回值中result=true，则进一步打开模态框，result=false则提示message内容，并不再打开模态框。
    // 是否展示清除图标
    // 打开模态框前的方法，一般用于校验逻辑，返回值中result=true，则进一步打开模态框，result=false则提示message内容，并不再打开模态框。
    /**
     * @return {?}
     */
    PropertyEntity.prototype.beforeOpenModal = 
    // 是否展示清除图标
    // 打开模态框前的方法，一般用于校验逻辑，返回值中result=true，则进一步打开模态框，result=false则提示message内容，并不再打开模态框。
    /**
     * @return {?}
     */
    function () {
        return new BeforeOpenModalResult();
    };
    return PropertyEntity;
}());
// 属性实体
export { PropertyEntity };
if (false) {
    /** @type {?} */
    PropertyEntity.prototype.propertyID;
    /** @type {?} */
    PropertyEntity.prototype.propertyName;
    /** @type {?} */
    PropertyEntity.prototype.propertyType;
    /** @type {?} */
    PropertyEntity.prototype.description;
    /** @type {?} */
    PropertyEntity.prototype.defaultValue;
    /** @type {?} */
    PropertyEntity.prototype.readonly;
    /** @type {?} */
    PropertyEntity.prototype.visible;
    /** @type {?} */
    PropertyEntity.prototype.iterator;
    /** @type {?} */
    PropertyEntity.prototype.min;
    /** @type {?} */
    PropertyEntity.prototype.max;
    /** @type {?} */
    PropertyEntity.prototype.numberFormat;
    /** @type {?} */
    PropertyEntity.prototype.decimals;
    /** @type {?} */
    PropertyEntity.prototype.refreshPanelAfterChanged;
    /** @type {?} */
    PropertyEntity.prototype.multiSelectDataType;
    /**
     * 级联属性
     * @type {?}
     */
    PropertyEntity.prototype.cascadeConfig;
    /** @type {?} */
    PropertyEntity.prototype.isExpand;
    /** @type {?} */
    PropertyEntity.prototype.hideCascadeTitle;
    /** @type {?} */
    PropertyEntity.prototype.cascadeConverter;
    /**
     * 模态框属性配置
     * @type {?}
     */
    PropertyEntity.prototype.editor;
    /** @type {?} */
    PropertyEntity.prototype.editorParams;
    /** @type {?} */
    PropertyEntity.prototype.converter;
    /** @type {?} */
    PropertyEntity.prototype.showClearButton;
    /* Skipping unhandled member: [propName: string]: any;*/
}
/**
 * @record
 */
export function TypeConverter() { }
if (false) {
    /**
     * @param {?} data
     * @param {?=} params
     * @return {?}
     */
    TypeConverter.prototype.convertTo = function (data, params) { };
}
/**
 * @record
 */
export function KeyMap() { }
if (false) {
    /** @type {?} */
    KeyMap.prototype.key;
    /** @type {?} */
    KeyMap.prototype.value;
}
var BeforeOpenModalResult = /** @class */ (function () {
    function BeforeOpenModalResult() {
    }
    return BeforeOpenModalResult;
}());
export { BeforeOpenModalResult };
if (false) {
    /** @type {?} */
    BeforeOpenModalResult.prototype.result;
    /** @type {?} */
    BeforeOpenModalResult.prototype.message;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcGVydHktZW50aXR5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1wcm9wZXJ0eS1wYW5lbC8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvcHJvcGVydHktZW50aXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztJQVFJLFFBQVMsUUFBUTtJQUNqQixTQUFVLFNBQVM7SUFDbkIsUUFBUyxRQUFRO0lBQ2pCLFFBQVMsUUFBUTtJQUNqQixXQUFZLFdBQVc7SUFDdkIsYUFBYyxhQUFhO0lBQzNCLE1BQU8sTUFBTTtJQUNiLFVBQVcsVUFBVTtJQUNyQixPQUFRLE9BQU87SUFDZixTQUFVLFNBQVM7OztBQUd2QjtJQUFBO1FBR0ksU0FBSSxHQUFHLEtBQUssQ0FBQztRQUNiLGNBQVMsR0FBRyxLQUFLLENBQUM7O1FBSWxCLGtCQUFhLEdBQUcsS0FBSyxDQUFDO0lBTzFCLENBQUM7SUFBRCw0QkFBQztBQUFELENBQUMsQUFmRCxJQWVDOzs7O0lBZEcsMkNBQW1COztJQUNuQiw2Q0FBcUI7O0lBQ3JCLHFDQUFhOztJQUNiLDBDQUFrQjs7SUFDbEIsMkNBQTZCOztJQUc3Qiw4Q0FBc0I7O0lBRXRCLDZDQUFtQjs7SUFFbkIsaURBQTBCOztJQUUxQixtREFBdUU7OztBQU0zRTs7O0lBQUE7O1FBTUksYUFBUSxHQUFHLEtBQUssQ0FBQyxDQUFDLE9BQU87O1FBQ3pCLFlBQU8sR0FBRyxJQUFJLENBQUMsQ0FBQyxPQUFPOzs7UUFXdkIsNkJBQXdCLEdBQUcsS0FBSyxDQUFDOztRQUdqQyx3QkFBbUIsR0FBRyxRQUFRLENBQUM7O1FBTS9CLGFBQVEsR0FBRyxLQUFLLENBQUMsQ0FBQyxhQUFhOztRQUMvQixxQkFBZ0IsR0FBRyxLQUFLLENBQUMsQ0FBQyxjQUFjOztRQVd4QyxvQkFBZSxHQUFHLEtBQUssQ0FBQyxDQUFDLFdBQVc7SUFVeEMsQ0FBQztJQVJHLGtGQUFrRjs7Ozs7O0lBQ2xGLHdDQUFlOzs7Ozs7SUFBZjtRQUNJLE9BQU8sSUFBSSxxQkFBcUIsRUFBRSxDQUFDO0lBQ3ZDLENBQUM7SUFLTCxxQkFBQztBQUFELENBQUMsQUFqREQsSUFpREM7Ozs7O0lBaERHLG9DQUFtQjs7SUFDbkIsc0NBQXFCOztJQUNyQixzQ0FBcUI7O0lBQ3JCLHFDQUFxQjs7SUFDckIsc0NBQW1COztJQUNuQixrQ0FBaUI7O0lBQ2pCLGlDQUFlOztJQUNmLGtDQUFvQjs7SUFDcEIsNkJBQVU7O0lBQ1YsNkJBQVU7O0lBRVYsc0NBQXNCOztJQUN0QixrQ0FBa0I7O0lBS2xCLGtEQUFpQzs7SUFHakMsNkNBQStCOzs7OztJQUsvQix1Q0FBaUM7O0lBQ2pDLGtDQUFpQjs7SUFDakIsMENBQXlCOztJQUN6QiwwQ0FBaUM7Ozs7O0lBT2pDLGdDQUFtQjs7SUFDbkIsc0NBQW1COztJQUNuQixtQ0FBMEI7O0lBQzFCLHlDQUF3Qjs7Ozs7O0FBYTVCLG1DQUVDOzs7Ozs7O0lBREcsZ0VBQTJDOzs7OztBQUcvQyw0QkFHQzs7O0lBRkcscUJBQVM7O0lBQ1QsdUJBQVc7O0FBR2Y7SUFBQTtJQUdBLENBQUM7SUFBRCw0QkFBQztBQUFELENBQUMsQUFIRCxJQUdDOzs7O0lBRkcsdUNBQWdCOztJQUNoQix3Q0FBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUeXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG4vLyDmjqfku7blhajpg6jphY3nva5cclxuXHJcbi8qKlxyXG4gKiDlsZ7mgKfnsbvlnotcclxuICovXHJcbmV4cG9ydCBlbnVtIFByb3BlcnR5VHlwZSB7XHJcbiAgICBzdHJpbmcgPSAnc3RyaW5nJyxcclxuICAgIGJvb2xlYW4gPSAnYm9vbGVhbicsXHJcbiAgICBudW1iZXIgPSAnbnVtYmVyJyxcclxuICAgIHNlbGVjdCA9ICdzZWxlY3QnLFxyXG4gICAgYm9vbE9yRXhwID0gJ2Jvb2xPckV4cCcsXHJcbiAgICBtdWx0aVNlbGVjdCA9ICdtdWx0aVNlbGVjdCcsXHJcbiAgICBkYXRlID0gJ2RhdGUnLFxyXG4gICAgZGF0ZXRpbWUgPSAnZGF0ZXRpbWUnLFxyXG4gICAgbW9kYWwgPSAnbW9kYWwnLFxyXG4gICAgY2FzY2FkZSA9ICdjYXNjYWRlJ1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRWxlbWVudFByb3BlcnR5Q29uZmlnIHtcclxuICAgIGNhdGVnb3J5SWQ6IHN0cmluZztcclxuICAgIGNhdGVnb3J5TmFtZTogc3RyaW5nO1xyXG4gICAgaGlkZT89IGZhbHNlO1xyXG4gICAgaGlkZVRpdGxlPz0gZmFsc2U7XHJcbiAgICBwcm9wZXJ0aWVzOiBQcm9wZXJ0eUVudGl0eVtdO1xyXG5cclxuICAgIC8vIOaYr+WQpuWQr+eUqOe6p+iBlOeJueaAp1xyXG4gICAgZW5hYmxlQ2FzY2FkZT89IGZhbHNlO1xyXG4gICAgLy8g5bGe5oCn5YC877ya5YiG57G75ZCv55So57qn6IGU54m55oCn5pe25b+F5aGrXHJcbiAgICBwcm9wZXJ0eURhdGE/OiBhbnk7XHJcbiAgICAvLyDniLbnuqflsZ7mgKdJRO+8muWIhuexu+WQr+eUqOe6p+iBlOeJueaAp+aXtuW/heWhq1xyXG4gICAgcGFyZW50UHJvcGVydHlJRD86IHN0cmluZztcclxuXHJcbiAgICBzZXRQcm9wZXJ0eVJlbGF0ZXM/OiAoY2hhbmdlT2JqZWN0LCBwcm9wZXJ0eURhdGEsIHBhcmFtZXRlcnM/KSA9PiB2b2lkO1xyXG59XHJcblxyXG5cclxuXHJcbi8vIOWxnuaAp+WunuS9k1xyXG5leHBvcnQgY2xhc3MgUHJvcGVydHlFbnRpdHkge1xyXG4gICAgcHJvcGVydHlJRDogc3RyaW5nOyAvLyDlsZ7mgKdJRFxyXG4gICAgcHJvcGVydHlOYW1lOiBzdHJpbmc7IC8vIOWxnuaAp+aYvuekuueahOWQjeensFxyXG4gICAgcHJvcGVydHlUeXBlOiBzdHJpbmc7IC8vIOWxnuaAp+eahOexu+Wei1xyXG4gICAgZGVzY3JpcHRpb24/OiBzdHJpbmc7IC8vIOWxnuaAp+aPj+i/sFxyXG4gICAgZGVmYXVsdFZhbHVlPzogYW55OyAvLyDlsZ7mgKfnmoTpu5jorqTlgLxcclxuICAgIHJlYWRvbmx5Pz0gZmFsc2U7IC8vIOaYr+WQpuWPquivu1xyXG4gICAgdmlzaWJsZT89IHRydWU7IC8vIOaYr+WQpuWPr+ingVxyXG4gICAgaXRlcmF0b3I/OiBLZXlNYXBbXTsgLy8g5LiL5ouJ5qGG55qE5p6a5Li+5YC8XHJcbiAgICBtaW4/OiBhbnk7IC8vIOacgOWwj+WAvFxyXG4gICAgbWF4PzogYW55OyAvLyDmnIDlpKflgLxcclxuXHJcbiAgICBudW1iZXJGb3JtYXQ/OiBzdHJpbmc7IC8vIOaVsOWtl+exu+Wei+WxnuaAp+eahOagvOW8j++8jOWPguiAg2tlbmRvIG51bWVyaWMgZm9ybWF0XHJcbiAgICBkZWNpbWFscz86IG51bWJlcjsgIC8vIOaVsOWtl+exu+Wei+WxnuaAp+eahOWwj+aVsOS9jeaVsFxyXG5cclxuXHJcblxyXG4gICAgLy8g5bGe5oCn5pS55Y+Y5ZCO5Yi35paw5pW05Liq6Z2i5p2/77ya55So5LqO5pu05pS55YW25LuW5YiG57G75LiL55qE5bGe5oCnXHJcbiAgICByZWZyZXNoUGFuZWxBZnRlckNoYW5nZWQ/PSBmYWxzZTtcclxuXHJcbiAgICAvLyDkuIvmi4nlpJrpgInnsbvlnovvvJrlsZ7mgKflgLznmoTnsbvlnovvvJpzdHJpbmco5aSa5YC85Lul6YCX5Y+35YiG6ZqUKS9hcnJheSjlpJrlgLznu4Too4XmiJDmlbDnu4QpXHJcbiAgICBtdWx0aVNlbGVjdERhdGFUeXBlPz0gJ3N0cmluZyc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnuqfogZTlsZ7mgKdcclxuICAgICAqL1xyXG4gICAgY2FzY2FkZUNvbmZpZz86IFByb3BlcnR5RW50aXR5W107IC8vIOe6p+iBlOWxnuaAp+mFjee9rlxyXG4gICAgaXNFeHBhbmQ/PSBmYWxzZTsgLy8g57qn6IGU5bGe5oCn5piv5ZCm6buY6K6k5pS26LW3XHJcbiAgICBoaWRlQ2FzY2FkZVRpdGxlPz0gZmFsc2U7IC8vIOaYr+WQpumakOiXj+e6p+iBlOWxnuaAp+eahOWktOmDqFxyXG4gICAgY2FzY2FkZUNvbnZlcnRlcj86IFR5cGVDb252ZXJ0ZXI7IC8vIOe6p+iBlOWxnuaAp+eahOaxh+aAu+S/oeaBr1xyXG5cclxuICAgIFtwcm9wTmFtZTogc3RyaW5nXTogYW55O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5qih5oCB5qGG5bGe5oCn6YWN572uXHJcbiAgICAgKi9cclxuICAgIGVkaXRvcj86IFR5cGU8YW55PjsgLy8g5bGe5oCn6Ieq5a6a5LmJ57yW6L6R5Zmo77yI5Lul5qih5oCB5qGG55qE5b2i5byP5bGV56S677yJXHJcbiAgICBlZGl0b3JQYXJhbXM/OiBhbnk7IC8vIOiHquWumuS5iee8lui+keWZqOWPguaVsFxyXG4gICAgY29udmVydGVyPzogVHlwZUNvbnZlcnRlcjsgLy8g5bGe5oCn5YC86L2s5o2i5ZmoLFxyXG4gICAgc2hvd0NsZWFyQnV0dG9uPz0gZmFsc2U7IC8vIOaYr+WQpuWxleekuua4hemZpOWbvuagh1xyXG5cclxuICAgIC8vIOaJk+W8gOaooeaAgeahhuWJjeeahOaWueazle+8jOS4gOiIrOeUqOS6juagoemqjOmAu+i+ke+8jOi/lOWbnuWAvOS4rXJlc3VsdD10cnVl77yM5YiZ6L+b5LiA5q2l5omT5byA5qih5oCB5qGG77yMcmVzdWx0PWZhbHNl5YiZ5o+Q56S6bWVzc2FnZeWGheWuue+8jOW5tuS4jeWGjeaJk+W8gOaooeaAgeahhuOAglxyXG4gICAgYmVmb3JlT3Blbk1vZGFsPygpOiBCZWZvcmVPcGVuTW9kYWxSZXN1bHQge1xyXG4gICAgICAgIHJldHVybiBuZXcgQmVmb3JlT3Blbk1vZGFsUmVzdWx0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8g54K55Ye75riF6Zmk5oyJ6ZKu5ZCO55qE5pa55rOV77yM5Y+C5pWw5Li65riF6Zmk5YmN55qE5bGe5oCn5YC8XHJcbiAgICBhZnRlckNsaWNrQ2xlYXJCdXR0b24/KHZhbHVlOiBhbnkpOiB2b2lkO1xyXG5cclxufVxyXG5cclxuLy8g6L2s5o2i5ZmoXHJcbmV4cG9ydCBpbnRlcmZhY2UgVHlwZUNvbnZlcnRlciB7XHJcbiAgICBjb252ZXJ0VG8oZGF0YTogYW55LCBwYXJhbXM/OiBhbnkpOiBzdHJpbmc7IC8vIOeUseaooeaAgeahhui9rOS4uuWxnuaAp+ahhuS4reWxleekuueahOWAvFxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEtleU1hcCB7XHJcbiAgICBrZXk6IGFueTtcclxuICAgIHZhbHVlOiBhbnk7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBCZWZvcmVPcGVuTW9kYWxSZXN1bHQge1xyXG4gICAgcmVzdWx0OiBib29sZWFuO1xyXG4gICAgbWVzc2FnZT86IHN0cmluZztcclxufVxyXG4iXX0=