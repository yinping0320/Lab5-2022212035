/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChildren, ViewEncapsulation } from '@angular/core';
import { ElementPropertyConfig } from '../../entity/property-entity';
import { PropertyItemComponent } from '../property-item/property-item.component';
var PropertyItemListComponent = /** @class */ (function () {
    function PropertyItemListComponent() {
        // 属性值
        this.valueChanged = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.triggerRefreshPanel = new EventEmitter();
    }
    /**
     * @param {?} simpleChanges
     * @return {?}
     */
    PropertyItemListComponent.prototype.ngOnChanges = /**
     * @param {?} simpleChanges
     * @return {?}
     */
    function (simpleChanges) {
        // 若分类下有propertyData，则取分类下的propertyData；否则取整体的propertyData
        if (this.category.propertyData && this.category.enableCascade) {
            this.data = this.category.propertyData;
        }
        else {
            this.data = this.propertyData;
        }
    };
    /**
     * @return {?}
     */
    PropertyItemListComponent.prototype.refresh = /**
     * @return {?}
     */
    function () {
        // 若分类下有propertyData，则取分类下的propertyData；否则取整体的propertyData
        if (this.category.propertyData && this.category.enableCascade) {
            this.data = this.category.propertyData;
        }
        else {
            this.data = this.propertyData;
        }
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item.refresh(); }));
    };
    /**
     * 一般属性变更
     * @param $event
     */
    /**
     * 一般属性变更
     * @param {?} $event
     * @return {?}
     */
    PropertyItemListComponent.prototype._itemChanged = /**
     * 一般属性变更
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        var changeObject = $event.changeObject;
        this.data[changeObject.propertyID] = changeObject.propertyValue;
        if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {
            this.category.setPropertyRelates(changeObject, this.data);
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.refresh(); }));
        }
        changeObject.categoryId = this.category.categoryId;
        if (this.category.enableCascade) {
            changeObject.parentPropertyID = this.category.parentPropertyID;
        }
        this.valueChanged.emit(changeObject);
    };
    /**
     * 模态框数据变更（TODO:待优化，合并valueChange事件）
     * @param $event
     */
    /**
     * 模态框数据变更（TODO:待优化，合并valueChange事件）
     * @param {?} $event
     * @return {?}
     */
    PropertyItemListComponent.prototype._submitModal = /**
     * 模态框数据变更（TODO:待优化，合并valueChange事件）
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        var changeObject = $event.changeObject, parameters = $event.parameters;
        this.data[changeObject.propertyID] = changeObject.propertyValue;
        if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {
            this.category.setPropertyRelates(changeObject, this.data, parameters);
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.refresh(); }));
        }
        changeObject.categoryId = this.category.categoryId;
        if (this.category.enableCascade) {
            changeObject.parentPropertyID = this.category.parentPropertyID;
        }
        this.submitModal.emit($event);
    };
    /**
     * 级联属性变更
     * @param $event
     * @param parentPropertyID
     */
    /**
     * 级联属性变更
     * @param {?} $event
     * @param {?} parentPropertyID
     * @return {?}
     */
    PropertyItemListComponent.prototype._cascadeitemChanged = /**
     * 级联属性变更
     * @param {?} $event
     * @param {?} parentPropertyID
     * @return {?}
     */
    function ($event, parentPropertyID) {
        if (!parentPropertyID) {
            return;
        }
        var changeObject = $event.changeObject;
        if (!this.data[parentPropertyID]) {
            this.data[parentPropertyID] = {};
        }
        this.data[parentPropertyID][changeObject.propertyID] = changeObject.propertyValue;
        changeObject.categoryId = this.category.categoryId;
        changeObject.parentPropertyID = parentPropertyID;
        if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {
            this.category.setPropertyRelates(changeObject, this.data);
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.refresh(); }));
        }
        this.valueChanged.emit(changeObject);
    };
    /**
     * 级联模态框属性变更
     * @param $event
     * @param parentPropertyID
     */
    /**
     * 级联模态框属性变更
     * @param {?} $event
     * @param {?} parentPropertyID
     * @return {?}
     */
    PropertyItemListComponent.prototype.__cascadeitemSubmitModal = /**
     * 级联模态框属性变更
     * @param {?} $event
     * @param {?} parentPropertyID
     * @return {?}
     */
    function ($event, parentPropertyID) {
        if (!parentPropertyID) {
            return;
        }
        var changeObject = $event.changeObject, parameters = $event.parameters;
        if (!this.data[parentPropertyID]) {
            this.data[parentPropertyID] = {};
        }
        this.data[parentPropertyID][changeObject.propertyID] = changeObject.propertyValue;
        changeObject.categoryId = this.category.categoryId;
        changeObject.parentPropertyID = parentPropertyID;
        if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {
            this.category.setPropertyRelates(changeObject, this.data, parameters);
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.refresh(); }));
        }
        this.submitModal.emit($event);
    };
    /**
     * 级联属性的汇总信息
     * @param propItem
     * @param valueObject
     */
    /**
     * 级联属性的汇总信息
     * @param {?} propItem
     * @param {?} valueObject
     * @return {?}
     */
    PropertyItemListComponent.prototype._valueStringify = /**
     * 级联属性的汇总信息
     * @param {?} propItem
     * @param {?} valueObject
     * @return {?}
     */
    function (propItem, valueObject) {
        if (!propItem || !propItem.cascadeConfig || !valueObject) {
            return '';
        }
        if (!propItem.cascadeConverter || !propItem.cascadeConverter.convertTo) {
            return JSON.stringify(valueObject);
        }
        return propItem.cascadeConverter.convertTo(valueObject, propItem.cascadeConfig);
    };
    /**
     * @param {?} propItem
     * @return {?}
     */
    PropertyItemListComponent.prototype._checkCascadeVisible = /**
     * @param {?} propItem
     * @return {?}
     */
    function (propItem) {
        if (Object.keys(propItem).indexOf('visible') < 0) {
            return true;
        }
        else {
            return propItem.visible;
        }
    };
    /**
     * @return {?}
     */
    PropertyItemListComponent.prototype.refreshPanel = /**
     * @return {?}
     */
    function () {
        this.triggerRefreshPanel.emit();
    };
    PropertyItemListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'webide-property-item-list',
                    template: "<div *ngFor=\"let propItem of category.properties\">\r\n    <div *ngIf=\"propItem.propertyType != 'cascade'\" class=\"px-2\">\r\n        <webide-property-item (valueChanged)=\"_itemChanged($event)\" (submitModal)=\"_submitModal($event)\"\r\n            [elementValue]=\"data[propItem.propertyID]\" [elementConfig]=\"propItem\"></webide-property-item>\r\n    </div>\r\n\r\n    <farris-panel *ngIf=\"propItem.propertyType == 'cascade' && _checkCascadeVisible(propItem)\"\r\n        [defaultExpand]=\"propItem.isExpand\">\r\n        <farris-panel-item class=\"propertyCascadeItem\" [value]=\"propItem.propertyID\">\r\n            <ng-template #headTempl>\r\n                <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label pl-2\">\r\n                        <span class=\"farris-label-text\">{{propItem.propertyName}}</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\" *ngIf=\"!propItem.hideCascadeTitle\">\r\n                        <input type=\"input\" class=\"form-control form-control-sm\" readonly\r\n                            [value]=\"_valueStringify(propItem,data[propItem.propertyID])\">\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #contentTempl>\r\n                <div *ngFor=\"let cascadeItem of propItem.cascadeConfig\" class=\"px-2\">\r\n                    <webide-property-item (valueChanged)=\"_cascadeitemChanged($event,propItem.propertyID)\"\r\n                        (submitModal)=\"__cascadeitemSubmitModal($event, propItem.propertyID)\"\r\n                        [elementValue]=\"data[propItem.propertyID]?data[propItem.propertyID][cascadeItem.propertyID]:''\"\r\n                        [elementConfig]=\"cascadeItem\" (triggerRefreshPanel)=\"refreshPanel()\"></webide-property-item>\r\n                </div>\r\n\r\n            </ng-template>\r\n        </farris-panel-item>\r\n    </farris-panel>\r\n\r\n\r\n</div>",
                    encapsulation: ViewEncapsulation.None,
                    styles: [".propertyCascadeItem{background-color:transparent!important;border:none!important}.propertyCascadeItem .card-header{background-color:transparent!important;padding:4px 12px!important;color:inherit!important}.propertyCascadeItem .card-header .panel-item-title{width:100%;position:relative;font-size:inherit!important}.propertyCascadeItem .card-header .panel-item-title .farris-input-wrap{margin-left:-5px;margin-right:-5px}.propertyCascadeItem .f-accordion-collapse,.propertyCascadeItem .f-accordion-expand{right:0;left:auto!important;top:6px;color:#6b94ec!important;position:absolute}.propertyCascadeItem .card-body{padding:3px 12px!important;background:rgba(255,255,255,.8);border-radius:8px;margin:4px 8px}"]
                }] }
    ];
    /** @nocollapse */
    PropertyItemListComponent.ctorParameters = function () { return []; };
    PropertyItemListComponent.propDecorators = {
        category: [{ type: Input }],
        propertyData: [{ type: Input }],
        valueChanged: [{ type: Output }],
        submitModal: [{ type: Output }],
        triggerRefreshPanel: [{ type: Output }],
        items: [{ type: ViewChildren, args: [PropertyItemComponent,] }]
    };
    return PropertyItemListComponent;
}());
export { PropertyItemListComponent };
if (false) {
    /** @type {?} */
    PropertyItemListComponent.prototype.category;
    /** @type {?} */
    PropertyItemListComponent.prototype.propertyData;
    /** @type {?} */
    PropertyItemListComponent.prototype.valueChanged;
    /** @type {?} */
    PropertyItemListComponent.prototype.submitModal;
    /** @type {?} */
    PropertyItemListComponent.prototype.triggerRefreshPanel;
    /** @type {?} */
    PropertyItemListComponent.prototype.items;
    /** @type {?} */
    PropertyItemListComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,