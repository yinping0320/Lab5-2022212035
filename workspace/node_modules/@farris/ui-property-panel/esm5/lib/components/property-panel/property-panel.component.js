/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewChild, ElementRef, Output, EventEmitter, ViewChildren } from '@angular/core';
import { PropertyItemListComponent } from '../property-item-list/property-item-list.component';
var PropertyPanelComponent = /** @class */ (function () {
    function PropertyPanelComponent() {
        this.isPersitOpenState = false; // 是否持有面板的隐藏显示状态
        // 是否持有面板的隐藏显示状态
        this.isShowPanel = false; // isPersitOpenState=true时，控制面板是否隐藏显示
        // isPersitOpenState=true时，控制面板是否隐藏显示
        this.closePropertyPanel = new EventEmitter(); // isPersitOpenState=true时，抛出面板的关闭事件
        // 属性类型
        this.propertyData = {}; // 属性值
        // 属性值
        this.propertyChanged = new EventEmitter(); // 属性变更事件
        // 属性变更事件
        this.submitModal = new EventEmitter(); // 模态框属性变更事件
        // 模态框属性变更事件
        this.showCloseBtn = true;
        // 面板标题，为适配国际化
        this.panelTitle = '属性面板';
        this.isOpen = true;
    }
    /**
     * @return {?}
     */
    PropertyPanelComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.width) {
            this.eastDiv.nativeElement.style.width = this.width + 'px';
        }
        else {
            this.eastDiv.nativeElement.style.width = 'inherit';
        }
        if (this.height) {
            this.eastDiv.nativeElement.style.height = this.height + 'px';
        }
        else {
            this.eastDiv.nativeElement.style.height = '100%';
        }
        if (this.isPersitOpenState) {
            this.isOpen = this.isShowPanel;
        }
    };
    /**
     *  更改面板的隐藏显示状态，只有在isPersitOpenState=true时生效
     * @param simpleChanges
     */
    /**
     *  更改面板的隐藏显示状态，只有在isPersitOpenState=true时生效
     * @param {?} simpleChanges
     * @return {?}
     */
    PropertyPanelComponent.prototype.ngOnChanges = /**
     *  更改面板的隐藏显示状态，只有在isPersitOpenState=true时生效
     * @param {?} simpleChanges
     * @return {?}
     */
    function (simpleChanges) {
        if (simpleChanges.isShowPanel && this.isPersitOpenState) {
            this.isOpen = this.isShowPanel;
        }
    };
    /**
     * @return {?}
     */
    PropertyPanelComponent.prototype.refreshPanel = /**
     * @return {?}
     */
    function () {
        this.itemLists.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item.refresh(); }));
    };
    /**
     * @param {?} item
     * @return {?}
     */
    PropertyPanelComponent.prototype.changeStatus = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        if (this.propertyConfig.length < 2) {
            return;
        }
        if (!item.status || item.status === 'open') {
            item.status = 'closed';
        }
        else {
            item.status = 'open';
        }
    };
    // 隐藏面板
    // 隐藏面板
    /**
     * @return {?}
     */
    PropertyPanelComponent.prototype.collapse = 
    // 隐藏面板
    /**
     * @return {?}
     */
    function () {
        // isPersitOpenState=true时,由外部确定状态
        if (!this.isPersitOpenState) {
            this.isOpen = false;
        }
        this.closePropertyPanel.emit();
    };
    /**
     * 抛出属性变更事件
     * @param changeObject
     */
    /**
     * 抛出属性变更事件
     * @param {?} changeObject
     * @return {?}
     */
    PropertyPanelComponent.prototype._valueChanged = /**
     * 抛出属性变更事件
     * @param {?} changeObject
     * @return {?}
     */
    function (changeObject) {
        this.propertyChanged.emit(changeObject);
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    PropertyPanelComponent.prototype._submitModal = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.submitModal.emit($event);
    };
    PropertyPanelComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-property-panel',
                    template: "<div #east [style.display]=\"isOpen?'block':'none'\">\r\n    <div class=\"propertyPanel panel d-flex flex-column\">\r\n\r\n        <div class=\"title d-block\">\r\n            <div class=\"title-label\">\r\n                <span>{{panelTitle|| '\u5C5E\u6027\u9762\u677F'}}</span>\r\n            </div>\r\n            <div class=\"title-actions\">\r\n                <div class=\"monaco-toolbar\">\r\n                    <div class=\"monaco-action-bar animated\">\r\n                        <ul class=\"actions-container\" role=\"toolbar\">\r\n                            <li class=\"action-item\" (click)=\"collapse()\" *ngIf=\"showCloseBtn\">\r\n                                <a class=\"hide-panel\"></a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div #propertyPanel class=\"panel-body\" [style.height]=\"(height - 35) + 'px'\">\r\n            <perfect-scrollbar [config]=\"{suppressScrollX: true}\">\r\n                <ul class=\"property-grid\">\r\n                    <li *ngFor=\"let category of propertyConfig\">\r\n                        <ng-container *ngIf=\"!category.hide\">\r\n                            <span *ngIf=\"!category.hideTitle\"\r\n                                [class]=\"category.status === 'closed' ? 'group-label collapse': 'group-label expand' \"\r\n                                (click)=\"changeStatus(category)\">{{ category.categoryName }}</span>\r\n                            <div [style.display]=\"!category.status || category.status === 'open'?'block':'none'\"\r\n                                class=\"py-1 \">\r\n                                <webide-property-item-list [category]=\"category\" [propertyData]=\"propertyData\"\r\n                                    (valueChanged)=\"_valueChanged($event)\" (submitModal)=\"_submitModal($event)\"\r\n                                    (triggerRefreshPanel)=\"refreshPanel()\"></webide-property-item-list>\r\n                            </div>\r\n                        </ng-container>\r\n                    </li>\r\n                </ul>\r\n            </perfect-scrollbar>\r\n\r\n        </div>\r\n    </div>\r\n</div>",
                    styles: [":host{width:inherit;height:inherit}.propertyPanel{width:100%;height:100%;color:rgba(0,0,0,.75);background:#f3f8ff!important;border-color:#d8dbe2!important}.propertyPanel .title{position:relative;background:#d0d8e9!important}.propertyPanel .title>.title-label{line-height:35px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;padding-left:12px;color:#333}.propertyPanel .title .title-actions{position:absolute;right:10px;top:0;padding-left:35px;height:35px;flex:1;box-sizing:border-box}.propertyPanel .property-grid .group-label{line-height:30px;display:block;padding-left:12px;cursor:pointer;background:#e2e9f6!important;color:#34495e!important}.propertyPanel .panel-body{overflow:auto;height:100%}.propertyPanel .property-grid{list-style:none;margin:0;padding:0}.propertyPanel .action-item{cursor:pointer;display:inline-block;transition:transform 50ms;transition:transform 50ms,-webkit-transform 50ms;position:relative;padding:0}.propertyPanel .action-item .hide-panel{height:35px;display:block;line-height:35px;min-width:28px;color:rgba(66,66,66,.75);background-color:transparent!important;outline:0!important;background:url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M9.784 8L13 11.217 11.215 13 8.001 9.786 4.785 13 3 11.216l3.214-3.215L3 4.785 4.784 3 8 6.216 11.216 3 13 4.785 9.784 8.001z' fill='%23424242'/%3E%3C/svg%3E\") 50% 50% no-repeat}"]
                }] }
    ];
    /** @nocollapse */
    PropertyPanelComponent.ctorParameters = function () { return []; };
    PropertyPanelComponent.propDecorators = {
        width: [{ type: Input }],
        height: [{ type: Input }],
        isPersitOpenState: [{ type: Input }],
        isShowPanel: [{ type: Input }],
        closePropertyPanel: [{ type: Output }],
        propertyConfig: [{ type: Input }],
        propertyData: [{ type: Input }],
        propertyChanged: [{ type: Output }],
        submitModal: [{ type: Output }],
        showCloseBtn: [{ type: Input }],
        panelTitle: [{ type: Input }],
        eastDiv: [{ type: ViewChild, args: ['east',] }],
        itemLists: [{ type: ViewChildren, args: [PropertyItemListComponent,] }]
    };
    return PropertyPanelComponent;
}());
export { PropertyPanelComponent };
if (false) {
    /** @type {?} */
    PropertyPanelComponent.prototype.width;
    /** @type {?} */
    PropertyPanelComponent.prototype.height;
    /** @type {?} */
    PropertyPanelComponent.prototype.isPersitOpenState;
    /** @type {?} */
    PropertyPanelComponent.prototype.isShowPanel;
    /** @type {?} */
    PropertyPanelComponent.prototype.closePropertyPanel;
    /** @type {?} */
    PropertyPanelComponent.prototype.propertyConfig;
    /** @type {?} */
    PropertyPanelComponent.prototype.propertyData;
    /** @type {?} */
    PropertyPanelComponent.prototype.propertyChanged;
    /** @type {?} */
    PropertyPanelComponent.prototype.submitModal;
    /** @type {?} */
    PropertyPanelComponent.prototype.showCloseBtn;
    /** @type {?} */
    PropertyPanelComponent.prototype.panelTitle;
    /**
     * @type {?}
     * @private
     */
    PropertyPanelComponent.prototype.eastDiv;
    /** @type {?} */
    PropertyPanelComponent.prototype.itemLists;
    /** @type {?} */
    PropertyPanelComponent.prototype.isOpen;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcGVydHktcGFuZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1wcm9wZXJ0eS1wYW5lbC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3Byb3BlcnR5LXBhbmVsL3Byb3BlcnR5LXBhbmVsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFBVSxLQUFLLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQ3ZELFlBQVksRUFBNEIsWUFBWSxFQUNyRCxNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUUvRjtJQTJCRTtRQWxCUyxzQkFBaUIsR0FBRyxLQUFLLENBQUMsQ0FBQyxnQkFBZ0I7O1FBQzNDLGdCQUFXLEdBQUcsS0FBSyxDQUFDLENBQUMscUNBQXFDOztRQUN6RCx1QkFBa0IsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDLENBQUMsb0NBQW9DOztRQUduRixpQkFBWSxHQUFHLEVBQUUsQ0FBQyxDQUFDLE1BQU07O1FBRXhCLG9CQUFlLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQyxDQUFDLFNBQVM7O1FBQ3BELGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQyxDQUFDLFlBQVk7O1FBQ3BELGlCQUFZLEdBQUcsSUFBSSxDQUFDOztRQUdwQixlQUFVLEdBQUcsTUFBTSxDQUFDO1FBSzdCLFdBQU0sR0FBRyxJQUFJLENBQUM7SUFDRSxDQUFDOzs7O0lBRWpCLHlDQUFROzs7SUFBUjtRQUVFLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7U0FDNUQ7YUFBTTtZQUNMLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLEtBQUss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ZXdDaGlsZCwgRWxlbWVudFJlZiwgT3V0cHV0LFxyXG4gIEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzLCBWaWV3Q2hpbGRyZW5cclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRWxlbWVudFByb3BlcnR5Q29uZmlnIH0gZnJvbSAnLi4vLi4vZW50aXR5L3Byb3BlcnR5LWVudGl0eSc7XHJcbmltcG9ydCB7IFByb3BlcnR5SXRlbUxpc3RDb21wb25lbnQgfSBmcm9tICcuLi9wcm9wZXJ0eS1pdGVtLWxpc3QvcHJvcGVydHktaXRlbS1saXN0LmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FwcC1wcm9wZXJ0eS1wYW5lbCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3Byb3BlcnR5LXBhbmVsLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9wcm9wZXJ0eS1wYW5lbC5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFByb3BlcnR5UGFuZWxDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XHJcbiAgQElucHV0KCkgd2lkdGg6IG51bWJlcjtcclxuICBASW5wdXQoKSBoZWlnaHQ6IG51bWJlcjtcclxuXHJcbiAgQElucHV0KCkgaXNQZXJzaXRPcGVuU3RhdGUgPSBmYWxzZTsgLy8g5piv5ZCm5oyB5pyJ6Z2i5p2/55qE6ZqQ6JeP5pi+56S654q25oCBXHJcbiAgQElucHV0KCkgaXNTaG93UGFuZWwgPSBmYWxzZTsgLy8gaXNQZXJzaXRPcGVuU3RhdGU9dHJ1ZeaXtu+8jOaOp+WItumdouadv+aYr+WQpumakOiXj+aYvuekulxyXG4gIEBPdXRwdXQoKSBjbG9zZVByb3BlcnR5UGFuZWwgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTsgLy8gaXNQZXJzaXRPcGVuU3RhdGU9dHJ1ZeaXtu+8jOaKm+WHuumdouadv+eahOWFs+mXreS6i+S7tlxyXG5cclxuICBASW5wdXQoKSBwcm9wZXJ0eUNvbmZpZzogRWxlbWVudFByb3BlcnR5Q29uZmlnW107IC8vIOWxnuaAp+exu+Wei1xyXG4gIEBJbnB1dCgpIHByb3BlcnR5RGF0YSA9IHt9OyAvLyDlsZ7mgKflgLxcclxuXHJcbiAgQE91dHB1dCgpIHByb3BlcnR5Q2hhbmdlZCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpOyAvLyDlsZ7mgKflj5jmm7Tkuovku7ZcclxuICBAT3V0cHV0KCkgc3VibWl0TW9kYWwgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTsgLy8g5qih5oCB5qGG5bGe5oCn5Y+Y5pu05LqL5Lu2XHJcbiAgQElucHV0KCkgc2hvd0Nsb3NlQnRuID0gdHJ1ZTtcclxuXHJcbiAgLy8g6Z2i5p2/5qCH6aKY77yM5Li66YCC6YWN5Zu96ZmF5YyWXHJcbiAgQElucHV0KCkgcGFuZWxUaXRsZSA9ICflsZ7mgKfpnaLmnb8nO1xyXG5cclxuXHJcbiAgQFZpZXdDaGlsZCgnZWFzdCcpIHByaXZhdGUgZWFzdERpdjogRWxlbWVudFJlZjtcclxuICBAVmlld0NoaWxkcmVuKFByb3BlcnR5SXRlbUxpc3RDb21wb25lbnQpIGl0ZW1MaXN0czogQXJyYXk8UHJvcGVydHlJdGVtTGlzdENvbXBvbmVudD47XHJcbiAgaXNPcGVuID0gdHJ1ZTtcclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuXHJcbiAgICBpZiAodGhpcy53aWR0aCkge1xyXG4gICAgICB0aGlzLmVhc3REaXYubmF0aXZlRWxlbWVudC5zdHlsZS53aWR0aCA9IHRoaXMud2lkdGggKyAncHgnO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5lYXN0RGl2Lm5hdGl2ZUVsZW1lbnQuc3R5bGUud2lkdGggPSAnaW5oZXJpdCc7XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5oZWlnaHQpIHtcclxuICAgICAgdGhpcy5lYXN0RGl2Lm5hdGl2ZUVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gdGhpcy5oZWlnaHQgKyAncHgnO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5lYXN0RGl2Lm5hdGl2ZUVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gJzEwMCUnO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBpZiAodGhpcy5pc1BlcnNpdE9wZW5TdGF0ZSkge1xyXG4gICAgICB0aGlzLmlzT3BlbiA9IHRoaXMuaXNTaG93UGFuZWw7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiAg5pu05pS56Z2i5p2/55qE6ZqQ6JeP5pi+56S654q25oCB77yM5Y+q5pyJ5ZyoaXNQZXJzaXRPcGVuU3RhdGU9dHJ1ZeaXtueUn+aViFxyXG4gICAqIEBwYXJhbSBzaW1wbGVDaGFuZ2VzXHJcbiAgICovXHJcbiAgbmdPbkNoYW5nZXMoc2ltcGxlQ2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgaWYgKHNpbXBsZUNoYW5nZXMuaXNTaG93UGFuZWwgJiYgdGhpcy5pc1BlcnNpdE9wZW5TdGF0ZSkge1xyXG4gICAgICB0aGlzLmlzT3BlbiA9IHRoaXMuaXNTaG93UGFuZWw7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJlZnJlc2hQYW5lbCgpIHtcclxuICAgIHRoaXMuaXRlbUxpc3RzLmZvckVhY2goaXRlbSA9PiBpdGVtLnJlZnJlc2goKSk7XHJcbiAgfVxyXG4gIGNoYW5nZVN0YXR1cyhpdGVtOiBhbnkpIHtcclxuICAgIGlmICh0aGlzLnByb3BlcnR5Q29uZmlnLmxlbmd0aCA8IDIpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKCFpdGVtLnN0YXR1cyB8fCBpdGVtLnN0YXR1cyA9PT0gJ29wZW4nKSB7XHJcbiAgICAgIGl0ZW0uc3RhdHVzID0gJ2Nsb3NlZCc7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpdGVtLnN0YXR1cyA9ICdvcGVuJztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIOmakOiXj+mdouadv1xyXG4gIGNvbGxhcHNlKCkge1xyXG4gICAgLy8gaXNQZXJzaXRPcGVuU3RhdGU9dHJ1ZeaXtiznlLHlpJbpg6jnoa7lrprnirbmgIFcclxuICAgIGlmICghdGhpcy5pc1BlcnNpdE9wZW5TdGF0ZSkge1xyXG4gICAgICB0aGlzLmlzT3BlbiA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgdGhpcy5jbG9zZVByb3BlcnR5UGFuZWwuZW1pdCgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5oqb5Ye65bGe5oCn5Y+Y5pu05LqL5Lu2XHJcbiAgICogQHBhcmFtIGNoYW5nZU9iamVjdFxyXG4gICAqL1xyXG4gIF92YWx1ZUNoYW5nZWQoY2hhbmdlT2JqZWN0KSB7XHJcbiAgICB0aGlzLnByb3BlcnR5Q2hhbmdlZC5lbWl0KGNoYW5nZU9iamVjdCk7XHJcbiAgfVxyXG4gIF9zdWJtaXRNb2RhbCgkZXZlbnQpIHtcclxuICAgIHRoaXMuc3VibWl0TW9kYWwuZW1pdCgkZXZlbnQpO1xyXG4gIH1cclxufVxyXG4iXX0=