!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@angular/forms"),require("@farris/ui-modal"),require("@farris/ui-popover"),require("@farris/ui-dialog"),require("@farris/ui-panel"),require("@farris/ui-perfect-scrollbar"),require("@farris/ui-notify"),require("@progress/kendo-angular-inputs"),require("@progress/kendo-angular-dropdowns"),require("@progress/kendo-angular-dateinputs")):"function"==typeof define&&define.amd?define("@farris/ui-property-panel",["exports","@angular/core","@angular/common","@angular/forms","@farris/ui-modal","@farris/ui-popover","@farris/ui-dialog","@farris/ui-panel","@farris/ui-perfect-scrollbar","@farris/ui-notify","@progress/kendo-angular-inputs","@progress/kendo-angular-dropdowns","@progress/kendo-angular-dateinputs"],t):t((e.farris=e.farris||{},e.farris["ui-property-panel"]={}),e.ng.core,e.ng.common,e.ng.forms,e.uiModal,e.uiPopover,e.uiDialog,e.uiPanel,e.uiPerfectScrollbar,e.uiNotify,e.kendoAngularInputs,e.kendoAngularDropdowns,e.kendoAngularDateinputs)}(this,function(e,i,t,r,n,o,a,s,l,p,c,d,u){"use strict";var m=function C(){this.hide=!1,this.hideTitle=!1,this.enableCascade=!1},h=function(){function e(){this.readonly=!1,this.visible=!0,this.refreshPanelAfterChanged=!1,this.multiSelectDataType="string",this.isExpand=!1,this.hideCascadeTitle=!1,this.showClearButton=!1}return e.prototype.beforeOpenModal=function(){return new f},e}(),f=function I(){},y=function(){function e(e,t,r,n,o){this.resolver=e,this.modalService=t,this.injector=r,this.notifyServ=n,this.el=o,this.valueChanged=new i.EventEmitter,this.submitModal=new i.EventEmitter,this.triggerRefreshPanel=new i.EventEmitter,this.selectOptions=[],this.itemType="string",this.show=!0,this.numberRestriction={format:"n2",min:"",max:""},this.showClearButton=!1,this.showDefaultValue=!1}return e.prototype.ngOnChanges=function(e){this.refresh()},e.prototype.ngOnInit=function(){this.refresh()},e.prototype.refresh=function(){switch(Object.keys(this.elementConfig).indexOf("visible")<0?this.show=!0:this.show=this.elementConfig.visible,this.itemType=this.elementConfig.propertyType){case"boolean":this.itemType="select",this.selectOptions=[{key:!0,value:!0},{key:!1,value:!1}];break;case"select":this.selectOptions=this.elementConfig.iterator;break;case"modal":this._convertModalShowValue(this.elementValue);break;case"number":var e=this.elementConfig.precision;e!==undefined&&-1<e&&(this.numberRestriction.format="n"+e),this.elementConfig.numberFormat&&(this.numberRestriction.format=this.elementConfig.numberFormat),this.numberRestriction.min=this.elementConfig.min,this.numberRestriction.max=this.elementConfig.max;break;case"string":this.elementConfig.readonly&&this._convertModalShowValue(this.elementValue);break;case"boolOrExp":this.selectOptions=[{key:!0,value:"true"},{key:!1,value:"false"}]}-1<Object.keys(this.elementConfig).indexOf("defaultValue")&&(this.elementValue!==undefined&&null!==this.elementValue||(this.elementValue=this.elementConfig.defaultValue),this.showDefaultValue=!0)},e.prototype.onmouseover=function(){this.elementConfig.showClearButton&&(this.showClearButton||(this.showClearButton=!0))},e.prototype.onmouseleave=function(){this.elementConfig.showClearButton&&(this.showClearButton=!1)},e.prototype.modalClear=function(){this._convertModalShowValue(null),-1<Object.keys(this.elementConfig).indexOf("afterClickClearButton")&&"function"==typeof this.elementConfig.afterClickClearButton&&this.elementConfig.afterClickClearButton(this.elementValue);var e={propertyID:this.elementConfig.propertyID,propertyValue:null};this.submitModal.emit({changeObject:e,parameters:null})},e.prototype.changeValue=function(){var e=this.elementValue;"multiSelect"===this.itemType&&"array"===this.elementConfig.multiSelectDataType&&(e=this.elementValue?this.elementValue.split(","):"");var t={propertyID:this.elementConfig.propertyID,propertyValue:e};this.valueChanged.emit({changeObject:t}),this.elementConfig.refreshPanelAfterChanged&&this.triggerRefreshPanel.emit()},e.prototype.openModal=function(){if(!this.elementConfig.readonly){if(-1<Object.keys(this.elementConfig).indexOf("beforeOpenModal")&&"function"==typeof this.elementConfig.beforeOpenModal){var e=this.elementConfig.beforeOpenModal();if(e&&!e.result)return void this.notifyServ.warning({title:"系统提示",msg:e.message,timeout:3e3})}this.createEditorComponent()}},e.prototype.createEditorComponent=function(){var o=this,e=this.elementConfig.editor;if(e){var t=this.resolver.resolveComponentFactory(e).create(this.injector);t.instance.value=this.elementValue,this.elementConfig.editorParams&&t.instance.editorParams&&(t.instance.editorParams=this.elementConfig.editorParams);var r=t.instance.modalConfig;r?r.showButtons&&(r.buttons=t.instance.modalFooter):r={title:"属性配置",width:800,height:400,showButtons:!1};var a=this.modalService.show(t,r);t.instance.closeModal&&t.instance.closeModal instanceof i.EventEmitter&&t.instance.closeModal.subscribe(function(e){if(e){o._convertModalShowValue(e);var t={propertyID:o.elementConfig.propertyID,propertyValue:e};o.valueChanged.emit({changeObject:t})}a.close()}),t.instance.submitModal&&t.instance.submitModal instanceof i.EventEmitter&&t.instance.submitModal.subscribe(function(e){if(e){var t=e.value,r=e.parameters;o._convertModalShowValue(t);var n={propertyID:o.elementConfig.propertyID,propertyValue:t};o.submitModal.emit({changeObject:n,parameters:r}),a.close()}else a.close()})}},e.prototype._convertModalShowValue=function(e){this.elementConfig.converter?this.elementShowValue=this.elementConfig.converter.convertTo(e):e&&e instanceof Object?this.elementShowValue=JSON.stringify(e):this.elementShowValue=e},e.decorators=[{type:i.Component,args:[{selector:"webide-property-item",template:'<div class="farris-group-wrap property-item" [style.display]="show?\'block\':\'none\'">\r\n  <div class="form-group farris-form-group">\r\n    <label class="col-form-label" farrisPopover [popover]="popTemplate" [popoverTitle]="elementConfig.propertyName"\r\n      container="body" [triggers]="\'hover\'">\r\n      <span class="farris-label-text">{{elementConfig.propertyName}}</span>\r\n    </label>\r\n    \x3c!-- <label class="col-form-label"> \r\n    <span class="farris-label-text">{{elementConfig.propertyName}}</span>\r\n    </label>--\x3e\r\n    <div class="farris-input-wrap" *ngIf="itemType==\'string\'">\r\n      <input type="input" class="form-control form-control-sm" [(ngModel)]="elementValue" (blur)="changeValue()"\r\n        [readonly]="elementConfig.readonly?\'readonly\':\'\'">\r\n    </div>\r\n    <div class="farris-input-wrap" *ngIf="itemType==\'number\'">\r\n      <kendo-numerictextbox class="form-control form-control-sm" [(ngModel)]="elementValue"\r\n        [format]="numberRestriction.format" [min]="numberRestriction.min" [max]="numberRestriction.max"\r\n        [readonly]="elementConfig.readonly?true:false" [autoCorrect]="true" [decimals]="elementConfig.decimals"\r\n        (blur)="changeValue()">\r\n      </kendo-numerictextbox>\r\n    </div>\r\n    <div class="farris-input-wrap" *ngIf="itemType==\'select\'">\r\n      <kendo-dropdownlist class="form-control form-control-sm" [data]="selectOptions" textField="value" valueField="key"\r\n        [valuePrimitive]="true" [(ngModel)]="elementValue" (valueChange)="changeValue()"\r\n        [readonly]="elementConfig.readonly?true:false">\r\n      </kendo-dropdownlist>\r\n    </div>\r\n    <div class="farris-input-wrap" *ngIf="itemType==\'date\'">\r\n      <kendo-datepicker class="form-control form-control-sm" [(ngModel)]="elementValue"\r\n        [readonly]="elementConfig.readonly?true:false" [format]="\'yyyy-MM-dd\'" (valueChange)="changeValue()">\r\n      </kendo-datepicker>\r\n    </div>\r\n    <div class="farris-input-wrap" *ngIf="itemType==\'datetime\'">\r\n      <kendo-dateinput class="form-control form-control-sm" [(ngModel)]="elementValue"\r\n        [readonly]="elementConfig.readonly?true:false" [format]="elementConfig.format||\'yyyy-MM-dd HH:mm:ss\'"\r\n        (valueChange)="changeValue()"></kendo-dateinput>\r\n    </div>\r\n    <div class="farris-input-wrap modalIcon" *ngIf="itemType==\'modal\'" (mouseover)="onmouseover()"\r\n      (mouseleave)="onmouseleave()">\r\n      <input type="input" class="form-control form-control-sm" [(ngModel)]="elementShowValue" readonly>\r\n      <span *ngIf="showClearButton && !elementConfig.readonly" class=" " (click)="modalClear()">\r\n        \x3c!-- <i class="f-icon modal_close"></i> --\x3e\r\n        <i class="material-icons clearIcon">close</i>\r\n      </span>\r\n      \x3c!-- <i class="fa fa-clone" (click)="openModal()"></i> --\x3e\r\n      <i class="material-icons moreIcon" (click)="openModal()">filter_none</i>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #popTemplate>\r\n  <div *ngIf="elementConfig.propertyID">\r\n    <span>属性编号： </span> {{elementConfig.propertyID}}</div>\r\n  <div *ngIf="elementConfig.propertyName">\r\n    <span>属性名称： </span> {{elementConfig.propertyName}}</div>\r\n  <div *ngIf="elementConfig.description">\r\n    <span>描述： </span> {{elementConfig.description}}</div>\r\n  <div *ngIf="showDefaultValue">\r\n    <span>默认值： </span> {{elementConfig.defaultValue}}</div>\r\n</ng-template>',styles:[".property-item .form-group{margin-bottom:2px}.property-item .modalIcon input{padding-right:30px}.property-item .modalIcon .moreIcon{position:absolute;top:6px;right:6px;cursor:pointer;font-size:16px;color:#758a96}.property-item .modalIcon .clearIcon{position:absolute;top:5px;right:30px;cursor:pointer;font-size:19px;color:#758a96}.property-item .form-control[readonly]{background-color:#fff}.property-item .form-control:disabled,.property-item .form-control[readonly]{color:#4b4c4c}"]}]}],e.ctorParameters=function(){return[{type:i.ComponentFactoryResolver},{type:n.BsModalService},{type:i.Injector},{type:p.NotifyService},{type:i.ElementRef}]},e.propDecorators={elementConfig:[{type:i.Input}],elementValue:[{type:i.Input}],valueChanged:[{type:i.Output}],submitModal:[{type:i.Output}],triggerRefreshPanel:[{type:i.Output}]},e}(),g=function(){function e(){this.valueChanged=new i.EventEmitter,this.submitModal=new i.EventEmitter,this.triggerRefreshPanel=new i.EventEmitter}return e.prototype.ngOnChanges=function(e){this.category.propertyData&&this.category.enableCascade?this.data=this.category.propertyData:this.data=this.propertyData},e.prototype.refresh=function(){this.category.propertyData&&this.category.enableCascade?this.data=this.category.propertyData:this.data=this.propertyData,this.items.forEach(function(e){return e.refresh()})},e.prototype._itemChanged=function(e){var t=e.changeObject;this.data[t.propertyID]=t.propertyValue,this.category.setPropertyRelates&&"function"==typeof this.category.setPropertyRelates&&(this.category.setPropertyRelates(t,this.data),this.items.forEach(function(e){return e.refresh()})),t.categoryId=this.category.categoryId,this.category.enableCascade&&(t.parentPropertyID=this.category.parentPropertyID),this.valueChanged.emit(t)},e.prototype._submitModal=function(e){var t=e.changeObject,r=e.parameters;this.data[t.propertyID]=t.propertyValue,this.category.setPropertyRelates&&"function"==typeof this.category.setPropertyRelates&&(this.category.setPropertyRelates(t,this.data,r),this.items.forEach(function(e){return e.refresh()})),t.categoryId=this.category.categoryId,this.category.enableCascade&&(t.parentPropertyID=this.category.parentPropertyID),this.submitModal.emit(e)},e.prototype._cascadeitemChanged=function(e,t){if(t){var r=e.changeObject;this.data[t]||(this.data[t]={}),this.data[t][r.propertyID]=r.propertyValue,r.categoryId=this.category.categoryId,r.parentPropertyID=t,this.category.setPropertyRelates&&"function"==typeof this.category.setPropertyRelates&&(this.category.setPropertyRelates(r,this.data),this.items.forEach(function(e){return e.refresh()})),this.valueChanged.emit(r)}},e.prototype.__cascadeitemSubmitModal=function(e,t){if(t){var r=e.changeObject,n=e.parameters;this.data[t]||(this.data[t]={}),this.data[t][r.propertyID]=r.propertyValue,r.categoryId=this.category.categoryId,r.parentPropertyID=t,this.category.setPropertyRelates&&"function"==typeof this.category.setPropertyRelates&&(this.category.setPropertyRelates(r,this.data,n),this.items.forEach(function(e){return e.refresh()})),this.submitModal.emit(e)}},e.prototype._valueStringify=function(e,t){return e&&e.cascadeConfig&&t?e.cascadeConverter&&e.cascadeConverter.convertTo?e.cascadeConverter.convertTo(t,e.cascadeConfig):JSON.stringify(t):""},e.prototype._checkCascadeVisible=function(e){return Object.keys(e).indexOf("visible")<0||e.visible},e.prototype.refreshPanel=function(){this.triggerRefreshPanel.emit()},e.decorators=[{type:i.Component,args:[{selector:"webide-property-item-list",template:'<div *ngFor="let propItem of category.properties">\r\n    <div *ngIf="propItem.propertyType != \'cascade\'" class="px-2">\r\n        <webide-property-item (valueChanged)="_itemChanged($event)" (submitModal)="_submitModal($event)"\r\n            [elementValue]="data[propItem.propertyID]" [elementConfig]="propItem"></webide-property-item>\r\n    </div>\r\n\r\n    <farris-panel *ngIf="propItem.propertyType == \'cascade\' && _checkCascadeVisible(propItem)"\r\n        [defaultExpand]="propItem.isExpand">\r\n        <farris-panel-item class="propertyCascadeItem" [value]="propItem.propertyID">\r\n            <ng-template #headTempl>\r\n                <div class="form-group farris-form-group">\r\n                    <label class="col-form-label pl-2">\r\n                        <span class="farris-label-text">{{propItem.propertyName}}</span>\r\n                    </label>\r\n                    <div class="farris-input-wrap" *ngIf="!propItem.hideCascadeTitle">\r\n                        <input type="input" class="form-control form-control-sm" readonly\r\n                            [value]="_valueStringify(propItem,data[propItem.propertyID])">\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #contentTempl>\r\n                <div *ngFor="let cascadeItem of propItem.cascadeConfig" class="px-2">\r\n                    <webide-property-item (valueChanged)="_cascadeitemChanged($event,propItem.propertyID)"\r\n                        (submitModal)="__cascadeitemSubmitModal($event, propItem.propertyID)"\r\n                        [elementValue]="data[propItem.propertyID]?data[propItem.propertyID][cascadeItem.propertyID]:\'\'"\r\n                        [elementConfig]="cascadeItem" (triggerRefreshPanel)="refreshPanel()"></webide-property-item>\r\n                </div>\r\n\r\n            </ng-template>\r\n        </farris-panel-item>\r\n    </farris-panel>\r\n\r\n\r\n</div>',encapsulation:i.ViewEncapsulation.None,styles:[".propertyCascadeItem{background-color:transparent!important;border:none!important}.propertyCascadeItem .card-header{background-color:transparent!important;padding:4px 12px!important;color:inherit!important}.propertyCascadeItem .card-header .panel-item-title{width:100%;position:relative;font-size:inherit!important}.propertyCascadeItem .card-header .panel-item-title .farris-input-wrap{margin-left:-5px;margin-right:-5px}.propertyCascadeItem .f-accordion-collapse,.propertyCascadeItem .f-accordion-expand{right:0;left:auto!important;top:6px;color:#6b94ec!important;position:absolute}.propertyCascadeItem .card-body{padding:3px 12px!important;background:rgba(255,255,255,.8);border-radius:8px;margin:4px 8px}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={category:[{type:i.Input}],propertyData:[{type:i.Input}],valueChanged:[{type:i.Output}],submitModal:[{type:i.Output}],triggerRefreshPanel:[{type:i.Output}],items:[{type:i.ViewChildren,args:[y]}]},e}(),v=function(){function e(){this.isPersitOpenState=!1,this.isShowPanel=!1,this.closePropertyPanel=new i.EventEmitter,this.propertyData={},this.propertyChanged=new i.EventEmitter,this.submitModal=new i.EventEmitter,this.showCloseBtn=!0,this.panelTitle="属性面板",this.isOpen=!0}return e.prototype.ngOnInit=function(){this.width?this.eastDiv.nativeElement.style.width=this.width+"px":this.eastDiv.nativeElement.style.width="inherit",this.height?this.eastDiv.nativeElement.style.height=this.height+"px":this.eastDiv.nativeElement.style.height="100%",this.isPersitOpenState&&(this.isOpen=this.isShowPanel)},e.prototype.ngOnChanges=function(e){e.isShowPanel&&this.isPersitOpenState&&(this.isOpen=this.isShowPanel)},e.prototype.refreshPanel=function(){this.itemLists.forEach(function(e){return e.refresh()})},e.prototype.changeStatus=function(e){this.propertyConfig.length<2||(e.status&&"open"!==e.status?e.status="open":e.status="closed")},e.prototype.collapse=function(){this.isPersitOpenState||(this.isOpen=!1),this.closePropertyPanel.emit()},e.prototype._valueChanged=function(e){this.propertyChanged.emit(e)},e.prototype._submitModal=function(e){this.submitModal.emit(e)},e.decorators=[{type:i.Component,args:[{selector:"app-property-panel",template:'<div #east [style.display]="isOpen?\'block\':\'none\'">\r\n    <div class="propertyPanel panel d-flex flex-column">\r\n\r\n        <div class="title d-block">\r\n            <div class="title-label">\r\n                <span>{{panelTitle|| \'属性面板\'}}</span>\r\n            </div>\r\n            <div class="title-actions">\r\n                <div class="monaco-toolbar">\r\n                    <div class="monaco-action-bar animated">\r\n                        <ul class="actions-container" role="toolbar">\r\n                            <li class="action-item" (click)="collapse()" *ngIf="showCloseBtn">\r\n                                <a class="hide-panel"></a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div #propertyPanel class="panel-body" [style.height]="(height - 35) + \'px\'">\r\n            <perfect-scrollbar [config]="{suppressScrollX: true}">\r\n                <ul class="property-grid">\r\n                    <li *ngFor="let category of propertyConfig">\r\n                        <ng-container *ngIf="!category.hide">\r\n                            <span *ngIf="!category.hideTitle"\r\n                                [class]="category.status === \'closed\' ? \'group-label collapse\': \'group-label expand\' "\r\n                                (click)="changeStatus(category)">{{ category.categoryName }}</span>\r\n                            <div [style.display]="!category.status || category.status === \'open\'?\'block\':\'none\'"\r\n                                class="py-1 ">\r\n                                <webide-property-item-list [category]="category" [propertyData]="propertyData"\r\n                                    (valueChanged)="_valueChanged($event)" (submitModal)="_submitModal($event)"\r\n                                    (triggerRefreshPanel)="refreshPanel()"></webide-property-item-list>\r\n                            </div>\r\n                        </ng-container>\r\n                    </li>\r\n                </ul>\r\n            </perfect-scrollbar>\r\n\r\n        </div>\r\n    </div>\r\n</div>',styles:[":host{width:inherit;height:inherit}.propertyPanel{width:100%;height:100%;color:rgba(0,0,0,.75);background:#f3f8ff!important;border-color:#d8dbe2!important}.propertyPanel .title{position:relative;background:#d0d8e9!important}.propertyPanel .title>.title-label{line-height:35px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;padding-left:12px;color:#333}.propertyPanel .title .title-actions{position:absolute;right:10px;top:0;padding-left:35px;height:35px;flex:1;box-sizing:border-box}.propertyPanel .property-grid .group-label{line-height:30px;display:block;padding-left:12px;cursor:pointer;background:#e2e9f6!important;color:#34495e!important}.propertyPanel .panel-body{overflow:auto;height:100%}.propertyPanel .property-grid{list-style:none;margin:0;padding:0}.propertyPanel .action-item{cursor:pointer;display:inline-block;transition:transform 50ms;transition:transform 50ms,-webkit-transform 50ms;position:relative;padding:0}.propertyPanel .action-item .hide-panel{height:35px;display:block;line-height:35px;min-width:28px;color:rgba(66,66,66,.75);background-color:transparent!important;outline:0!important;background:url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M9.784 8L13 11.217 11.215 13 8.001 9.786 4.785 13 3 11.216l3.214-3.215L3 4.785 4.784 3 8 6.216 11.216 3 13 4.785 9.784 8.001z' fill='%23424242'/%3E%3C/svg%3E\") 50% 50% no-repeat}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={width:[{type:i.Input}],height:[{type:i.Input}],isPersitOpenState:[{type:i.Input}],isShowPanel:[{type:i.Input}],closePropertyPanel:[{type:i.Output}],propertyConfig:[{type:i.Input}],propertyData:[{type:i.Input}],propertyChanged:[{type:i.Output}],submitModal:[{type:i.Output}],showCloseBtn:[{type:i.Input}],panelTitle:[{type:i.Input}],eastDiv:[{type:i.ViewChild,args:["east"]}],itemLists:[{type:i.ViewChildren,args:[g]}]},e}(),b=function(){function e(){}return e.decorators=[{type:i.NgModule,args:[{declarations:[y,g,v],imports:[t.CommonModule,r.FormsModule,n.ModalModule.forRoot(),o.PopoverModule.forRoot(),l.PerfectScrollbarModule,a.FarrisDialogModule,d.DropDownsModule,c.InputsModule,u.DateInputsModule,s.FarrisPanelModule,p.NotifyModule.forRoot()],exports:[v],entryComponents:[v,y]}]}],e.ctorParameters=function(){return[]},e}();e.PropertyType={string:"string","boolean":"boolean",number:"number",select:"select",boolOrExp:"boolOrExp",multiSelect:"multiSelect",date:"date",datetime:"datetime",modal:"modal",cascade:"cascade"},e.ElementPropertyConfig=m,e.PropertyEntity=h,e.BeforeOpenModalResult=f,e.PropertyPanelComponent=v,e.PropertyPanelModule=b,e.ɵa=g,e.ɵb=y,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=farris-ui-property-panel.umd.min.js.map