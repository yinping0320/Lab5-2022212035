{"version":3,"sources":["ng://@farris/ui-property-panel/lib/entity/property-entity.ts","ng://@farris/ui-property-panel/lib/components/property-item/property-item.component.ts","ng://@farris/ui-property-panel/lib/components/property-item-list/property-item-list.component.ts","ng://@farris/ui-property-panel/lib/components/property-panel/property-panel.component.ts","ng://@farris/ui-property-panel/lib/property-panel.module.ts"],"names":["ElementPropertyConfig","this","hide","hideTitle","enableCascade","PropertyEntity","readonly","visible","refreshPanelAfterChanged","multiSelectDataType","isExpand","hideCascadeTitle","showClearButton","prototype","beforeOpenModal","BeforeOpenModalResult","PropertyItemComponent","resolver","modalService","injector","notifyServ","el","valueChanged","EventEmitter","submitModal","triggerRefreshPanel","selectOptions","itemType","show","numberRestriction","format","min","max","showDefaultValue","ngOnChanges","changes","refresh","ngOnInit","Object","keys","elementConfig","indexOf","propertyType","key","value","iterator","_convertModalShowValue","elementValue","precision","undefined","numberFormat","defaultValue","onmouseover","onmouseleave","modalClear","afterClickClearButton","changeObject","propertyID","propertyValue","emit","parameters","changeValue","split","openModal","result","warning","title","msg","message","timeout","createEditorComponent","_this","editor","compRef","resolveComponentFactory","create","instance","editorParams","modalConfig","showButtons","buttons","modalFooter","width","height","dialog","closeModal","subscribe","data","close","converter","elementShowValue","convertTo","JSON","stringify","Component","args","selector","template","ComponentFactoryResolver","BsModalService","Injector","NotifyService","ElementRef","Input","Output","PropertyItemListComponent","simpleChanges","category","propertyData","items","forEach","item","_itemChanged","$event","setPropertyRelates","categoryId","parentPropertyID","_submitModal","_cascadeitemChanged","__cascadeitemSubmitModal","_valueStringify","propItem","valueObject","cascadeConfig","cascadeConverter","_checkCascadeVisible","refreshPanel","encapsulation","ViewEncapsulation","None","ViewChildren","PropertyPanelComponent","isPersitOpenState","isShowPanel","closePropertyPanel","propertyChanged","showCloseBtn","panelTitle","isOpen","eastDiv","nativeElement","style","itemLists","changeStatus","propertyConfig","length","status","collapse","_valueChanged","ViewChild","PropertyPanelModule","NgModule","declarations","imports","CommonModule","FormsModule","ModalModule","forRoot","PopoverModule","PerfectScrollbarModule","FarrisDialogModule","DropDownsModule","InputsModule","DateInputsModule","FarrisPanelModule","NotifyModule","exports","entryComponents","string","boolean","number","select","boolOrExp","multiSelect","date","datetime","modal","cascade"],"mappings":"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","sourcesContent":["import { Type } from '@angular/core';\r\n\r\n// æ§ä»¶å¨é¨éç½®\r\n\r\n/**\r\n * å±æ§ç±»å\r\n */\r\nexport enum PropertyType {\r\n    string = 'string',\r\n    boolean = 'boolean',\r\n    number = 'number',\r\n    select = 'select',\r\n    boolOrExp = 'boolOrExp',\r\n    multiSelect = 'multiSelect',\r\n    date = 'date',\r\n    datetime = 'datetime',\r\n    modal = 'modal',\r\n    cascade = 'cascade'\r\n}\r\n\r\nexport class ElementPropertyConfig {\r\n    categoryId: string;\r\n    categoryName: string;\r\n    hide?= false;\r\n    hideTitle?= false;\r\n    properties: PropertyEntity[];\r\n\r\n    // æ¯å¦å¯ç¨çº§èç¹æ§\r\n    enableCascade?= false;\r\n    // å±æ§å¼ï¼åç±»å¯ç¨çº§èç¹æ§æ¶å¿å¡«\r\n    propertyData?: any;\r\n    // ç¶çº§å±æ§IDï¼åç±»å¯ç¨çº§èç¹æ§æ¶å¿å¡«\r\n    parentPropertyID?: string;\r\n\r\n    setPropertyRelates?: (changeObject, propertyData, parameters?) => void;\r\n}\r\n\r\n\r\n\r\n// å±æ§å®ä½\r\nexport class PropertyEntity {\r\n    propertyID: string; // å±æ§ID\r\n    propertyName: string; // å±æ§æ¾ç¤ºçåç§°\r\n    propertyType: string; // å±æ§çç±»å\r\n    description?: string; // å±æ§æè¿°\r\n    defaultValue?: any; // å±æ§çé»è®¤å¼\r\n    readonly?= false; // æ¯å¦åªè¯»\r\n    visible?= true; // æ¯å¦å¯è§\r\n    iterator?: KeyMap[]; // ä¸ææ¡çæä¸¾å¼\r\n    min?: any; // æå°å¼\r\n    max?: any; // æå¤§å¼\r\n\r\n    numberFormat?: string; // æ°å­ç±»åå±æ§çæ ¼å¼ï¼åèkendo numeric format\r\n    decimals?: number;  // æ°å­ç±»åå±æ§çå°æ°ä½æ°\r\n\r\n\r\n\r\n    // å±æ§æ¹ååå·æ°æ´ä¸ªé¢æ¿ï¼ç¨äºæ´æ¹å¶ä»åç±»ä¸çå±æ§\r\n    refreshPanelAfterChanged?= false;\r\n\r\n    // ä¸æå¤éç±»åï¼å±æ§å¼çç±»åï¼string(å¤å¼ä»¥éå·åé)/array(å¤å¼ç»è£ææ°ç»)\r\n    multiSelectDataType?= 'string';\r\n\r\n    /**\r\n     * çº§èå±æ§\r\n     */\r\n    cascadeConfig?: PropertyEntity[]; // çº§èå±æ§éç½®\r\n    isExpand?= false; // çº§èå±æ§æ¯å¦é»è®¤æ¶èµ·\r\n    hideCascadeTitle?= false; // æ¯å¦éèçº§èå±æ§çå¤´é¨\r\n    cascadeConverter?: TypeConverter; // çº§èå±æ§çæ±æ»ä¿¡æ¯\r\n\r\n    [propName: string]: any;\r\n\r\n    /**\r\n     * æ¨¡ææ¡å±æ§éç½®\r\n     */\r\n    editor?: Type<any>; // å±æ§èªå®ä¹ç¼è¾å¨ï¼ä»¥æ¨¡ææ¡çå½¢å¼å±ç¤ºï¼\r\n    editorParams?: any; // èªå®ä¹ç¼è¾å¨åæ°\r\n    converter?: TypeConverter; // å±æ§å¼è½¬æ¢å¨,\r\n    showClearButton?= false; // æ¯å¦å±ç¤ºæ¸é¤å¾æ \r\n\r\n    // æå¼æ¨¡ææ¡åçæ¹æ³ï¼ä¸è¬ç¨äºæ ¡éªé»è¾ï¼è¿åå¼ä¸­result=trueï¼åè¿ä¸æ­¥æå¼æ¨¡ææ¡ï¼result=falseåæç¤ºmessageåå®¹ï¼å¹¶ä¸åæå¼æ¨¡ææ¡ã\r\n    beforeOpenModal?(): BeforeOpenModalResult {\r\n        return new BeforeOpenModalResult();\r\n    }\r\n\r\n    // ç¹å»æ¸é¤æé®åçæ¹æ³ï¼åæ°ä¸ºæ¸é¤åçå±æ§å¼\r\n    afterClickClearButton?(value: any): void;\r\n\r\n}\r\n\r\n// è½¬æ¢å¨\r\nexport interface TypeConverter {\r\n    convertTo(data: any, params?: any): string; // ç±æ¨¡ææ¡è½¬ä¸ºå±æ§æ¡ä¸­å±ç¤ºçå¼\r\n}\r\n\r\nexport interface KeyMap {\r\n    key: any;\r\n    value: any;\r\n}\r\n\r\nexport class BeforeOpenModalResult {\r\n    result: boolean;\r\n    message?: string;\r\n}\r\n","import {\r\n  Component, OnInit, Input, Output, OnChanges, SimpleChanges,\r\n  EventEmitter, ComponentFactoryResolver, Injector, ElementRef\r\n} from '@angular/core';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { NotifyService, NotifyOptions } from '@farris/ui-notify';\r\n\r\nimport { PropertyEntity } from '../../entity/property-entity';\r\n\r\n@Component({\r\n  selector: 'webide-property-item',\r\n  templateUrl: './property-item.component.html',\r\n  styleUrls: ['./property-item.component.css']\r\n})\r\nexport class PropertyItemComponent implements OnInit, OnChanges {\r\n  @Input() elementConfig: PropertyEntity;\r\n  @Input() elementValue: any;\r\n  @Output() valueChanged = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n  @Output() triggerRefreshPanel = new EventEmitter<any>(); // åä¸è§¦åæ´ä½é¢æ¿å·æ°\r\n\r\n  elementShowValue: any; // æ¨¡ææ¡ç±»åçå±æ§:å±æ§æ¡çå±ç¤ºå¼\r\n  selectOptions = [];\r\n  itemType = 'string';\r\n  show = true;\r\n\r\n  numberRestriction = {\r\n    format: 'n2',\r\n    min: '',\r\n    max: ''\r\n  };\r\n  showClearButton = false;\r\n  showDefaultValue = false;\r\n\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private modalService: BsModalService,\r\n    private injector: Injector, private notifyServ: NotifyService, public el: ElementRef) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.refresh();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.refresh();\r\n  }\r\n\r\n  refresh() {\r\n    // æ¯å¦æ¾ç¤ºï¼visibleé»è®¤true\r\n    if (Object.keys(this.elementConfig).indexOf('visible') < 0) {\r\n      this.show = true;\r\n    } else {\r\n      this.show = this.elementConfig.visible;\r\n    }\r\n\r\n\r\n    // æ¾ç¤ºæ ¼å¼\r\n    const propertyType = this.itemType = this.elementConfig.propertyType;\r\n    switch (propertyType) {\r\n      case 'boolean': {\r\n        this.itemType = 'select';\r\n        this.selectOptions = [{ key: true, value: true }, { key: false, value: false }];\r\n        break;\r\n      }\r\n      case 'select': {\r\n        this.selectOptions = this.elementConfig.iterator;\r\n        break;\r\n      }\r\n      case 'modal': {\r\n        this._convertModalShowValue(this.elementValue);\r\n        break;\r\n      }\r\n      case 'number': {\r\n        // precisionå¾ä¼åä¸º'n2'çæ ¼å¼ï¼ä¸kendoä¿æä¸è´\r\n        const precision = this.elementConfig.precision;\r\n        if (precision !== undefined && precision > -1) {\r\n          this.numberRestriction.format = 'n' + precision;\r\n        }\r\n\r\n        // æ¯æä¼ å¥kendo Numeric formatæ ¼å¼ ï¼'n3' / 'p'\r\n        if (this.elementConfig.numberFormat) {\r\n          this.numberRestriction.format = this.elementConfig.numberFormat;\r\n        }\r\n\r\n        // è®¾ç½®æå¤§ãæå°å¼\r\n        this.numberRestriction.min = this.elementConfig.min;\r\n        this.numberRestriction.max = this.elementConfig.max;\r\n        break;\r\n      }\r\n      case 'string': {\r\n        if (this.elementConfig.readonly) {\r\n          this._convertModalShowValue(this.elementValue);\r\n        }\r\n        break;\r\n      }\r\n      case 'boolOrExp': {\r\n        this.selectOptions = [{ key: true, value: 'true' }, { key: false, value: 'false' }];\r\n        break;\r\n      }\r\n    }\r\n\r\n    // é»è®¤å¼\r\n    if (Object.keys(this.elementConfig).indexOf('defaultValue') > -1) {\r\n      if (this.elementValue === undefined || this.elementValue === null) {\r\n        this.elementValue = this.elementConfig.defaultValue;\r\n      }\r\n      this.showDefaultValue = true;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * é¼ æ ç§»å¥\r\n   */\r\n  onmouseover() {\r\n    if (!this.elementConfig.showClearButton) {\r\n      return;\r\n    }\r\n    if (!this.showClearButton) {\r\n      this.showClearButton = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * é¼ æ ç¦»å¼\r\n   */\r\n  onmouseleave() {\r\n    if (!this.elementConfig.showClearButton) {\r\n      return;\r\n    }\r\n    this.showClearButton = false;\r\n  }\r\n\r\n\r\n  /**\r\n   * æ¸é¤æ¨¡ææ¡åå®¹\r\n   */\r\n  modalClear() {\r\n    // æ°æ®è½¬æ¢\r\n    this._convertModalShowValue(null);\r\n\r\n    // è¥ææ¸é¤åäºä»¶ï¼åæ§è¡æ¹æ³\r\n    if (Object.keys(this.elementConfig).indexOf('afterClickClearButton') > -1 &&\r\n      typeof (this.elementConfig.afterClickClearButton) === 'function') {\r\n      this.elementConfig.afterClickClearButton(this.elementValue);\r\n    }\r\n\r\n    const changeObject = {\r\n      propertyID: this.elementConfig.propertyID,\r\n      propertyValue: null\r\n    };\r\n    this.submitModal.emit({ changeObject, parameters: null });\r\n  }\r\n\r\n  /**\r\n   * åæ´å±æ§å¼\r\n   */\r\n  changeValue() {\r\n    let value = this.elementValue;\r\n    if (this.itemType === 'multiSelect' && this.elementConfig.multiSelectDataType === 'array') {\r\n      value = this.elementValue ? this.elementValue.split(',') : '';\r\n    }\r\n    const changeObject = {\r\n      propertyID: this.elementConfig.propertyID,\r\n      propertyValue: value\r\n    };\r\n    this.valueChanged.emit({ changeObject });\r\n    if (this.elementConfig.refreshPanelAfterChanged) {\r\n      this.triggerRefreshPanel.emit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * èªå®ä¹ç¼è¾å¨ä½¿ç¨æ¨¡ææ¡æå¼\r\n   */\r\n  openModal() {\r\n    if (this.elementConfig.readonly) {\r\n      return;\r\n    }\r\n    if (Object.keys(this.elementConfig).indexOf('beforeOpenModal') > -1 && typeof (this.elementConfig.beforeOpenModal) === 'function') {\r\n      const result = this.elementConfig.beforeOpenModal();\r\n      if (result && !result.result) {\r\n        this.notifyServ.warning(<NotifyOptions>{\r\n          title: 'ç³»ç»æç¤º', msg: result.message, timeout: 3000\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    this.createEditorComponent();\r\n  }\r\n\r\n  /**\r\n   * åå»ºèªå®ä¹ç¼è¾å¨\r\n   */\r\n  private createEditorComponent() {\r\n    const editor = this.elementConfig.editor;\r\n    if (!editor) {\r\n      return;\r\n    }\r\n    // åå»ºæ¨¡ææ¡ç»ä»¶\r\n    const compFactory = this.resolver.resolveComponentFactory(editor);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.value = this.elementValue;\r\n    if (this.elementConfig.editorParams && compRef.instance.editorParams) {  // ç¼è¾å¨éè¦çé¢å¤åæ°\r\n      compRef.instance.editorParams = this.elementConfig.editorParams;\r\n    }\r\n    let modalConfig = compRef.instance.modalConfig;\r\n    if (!modalConfig) {\r\n      modalConfig = {\r\n        title: 'å±æ§éç½®',\r\n        width: 800,\r\n        height: 400,\r\n        showButtons: false\r\n      };\r\n    } else if (modalConfig.showButtons) {\r\n      modalConfig.buttons = compRef.instance.modalFooter;\r\n    }\r\n\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n\r\n    // çå¬å³é­æ¨¡ææ¡\r\n    if (compRef.instance.closeModal && compRef.instance.closeModal instanceof EventEmitter) {\r\n      compRef.instance.closeModal.subscribe((data) => {\r\n        // æ°æ®è½¬æ¢\r\n        if (data) {\r\n          this._convertModalShowValue(data);\r\n\r\n          const changeObject = {\r\n            propertyID: this.elementConfig.propertyID,\r\n            propertyValue: data\r\n          };\r\n          this.valueChanged.emit({ changeObject });\r\n\r\n        }\r\n\r\n        dialog.close();\r\n      });\r\n    }\r\n\r\n\r\n\r\n    // å¼¹åºæ¡å³é­äºä»¶ï¼å¸¦åæ°ï¼æ ¼å¼ä¸º{ value, parameters }\r\n    if (compRef.instance.submitModal && compRef.instance.submitModal instanceof EventEmitter) {\r\n      compRef.instance.submitModal.subscribe(data => {\r\n        if (!data) {\r\n          dialog.close();\r\n          return;\r\n        }\r\n        const { value, parameters } = data;\r\n        // æ°æ®è½¬æ¢\r\n        this._convertModalShowValue(value);\r\n\r\n        const changeObject = {\r\n          propertyID: this.elementConfig.propertyID,\r\n          propertyValue: value\r\n        };\r\n        this.submitModal.emit({ changeObject, parameters });\r\n\r\n        dialog.close();\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * æ¨¡ææ¡åºæ¯ä¸å°å±æ§å¼è½¬æ¢ä¸ºè¾å¥æ¡ä¸­æ¾ç¤ºçå¼\r\n   * @param value\r\n   */\r\n  private _convertModalShowValue(value) {\r\n    if (this.elementConfig.converter) {\r\n      this.elementShowValue = this.elementConfig.converter.convertTo(value);\r\n      return;\r\n    }\r\n    if (value && value instanceof Object) {\r\n      this.elementShowValue = JSON.stringify(value);\r\n      return;\r\n    }\r\n    this.elementShowValue = value;\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChildren, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { ElementPropertyConfig } from '../../entity/property-entity';\r\nimport { PropertyItemComponent } from '../property-item/property-item.component';\r\n\r\n@Component({\r\n  selector: 'webide-property-item-list',\r\n  templateUrl: './property-item-list.component.html',\r\n  styleUrls: ['./property-item-list.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n\r\n})\r\nexport class PropertyItemListComponent implements OnChanges {\r\n  @Input() category: ElementPropertyConfig; // æä¸åç±»ä¸çå±æ§éç½®\r\n  @Input() propertyData; // å±æ§å¼\r\n  @Output() valueChanged = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n  @Output() triggerRefreshPanel = new EventEmitter<any>();\r\n\r\n  @ViewChildren(PropertyItemComponent) items: Array<PropertyItemComponent>;\r\n\r\n  data; // å®éå±æ§å¼\r\n  constructor() { }\r\n\r\n  ngOnChanges(simpleChanges: SimpleChanges) {\r\n    // è¥åç±»ä¸æpropertyDataï¼åååç±»ä¸çpropertyDataï¼å¦ååæ´ä½çpropertyData\r\n    if (this.category.propertyData && this.category.enableCascade) {\r\n      this.data = this.category.propertyData;\r\n    } else {\r\n      this.data = this.propertyData;\r\n    }\r\n  }\r\n  refresh() {\r\n    // è¥åç±»ä¸æpropertyDataï¼åååç±»ä¸çpropertyDataï¼å¦ååæ´ä½çpropertyData\r\n    if (this.category.propertyData && this.category.enableCascade) {\r\n      this.data = this.category.propertyData;\r\n    } else {\r\n      this.data = this.propertyData;\r\n    }\r\n    this.items.forEach(item => item.refresh());\r\n  }\r\n\r\n  /**\r\n   * ä¸è¬å±æ§åæ´\r\n   * @param $event\r\n   */\r\n  _itemChanged($event) {\r\n    const { changeObject } = $event;\r\n    this.data[changeObject.propertyID] = changeObject.propertyValue;\r\n\r\n    if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {\r\n      this.category.setPropertyRelates(changeObject, this.data);\r\n      this.items.forEach(item => item.refresh());\r\n    }\r\n    changeObject.categoryId = this.category.categoryId;\r\n\r\n    if (this.category.enableCascade) {\r\n      changeObject.parentPropertyID = this.category.parentPropertyID;\r\n    }\r\n    this.valueChanged.emit(changeObject);\r\n  }\r\n\r\n  /**\r\n   * æ¨¡ææ¡æ°æ®åæ´ï¼TODO:å¾ä¼åï¼åå¹¶valueChangeäºä»¶ï¼\r\n   * @param $event\r\n   */\r\n  _submitModal($event) {\r\n    const { changeObject, parameters } = $event;\r\n    this.data[changeObject.propertyID] = changeObject.propertyValue;\r\n\r\n    if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {\r\n      this.category.setPropertyRelates(changeObject, this.data, parameters);\r\n      this.items.forEach(item => item.refresh());\r\n    }\r\n\r\n    changeObject.categoryId = this.category.categoryId;\r\n    if (this.category.enableCascade) {\r\n      changeObject.parentPropertyID = this.category.parentPropertyID;\r\n    }\r\n    this.submitModal.emit($event);\r\n  }\r\n\r\n  /**\r\n   * çº§èå±æ§åæ´\r\n   * @param $event\r\n   * @param parentPropertyID\r\n   */\r\n  _cascadeitemChanged($event, parentPropertyID) {\r\n    if (!parentPropertyID) {\r\n      return;\r\n    }\r\n    const { changeObject } = $event;\r\n    if (!this.data[parentPropertyID]) {\r\n      this.data[parentPropertyID] = {};\r\n    }\r\n\r\n    this.data[parentPropertyID][changeObject.propertyID] = changeObject.propertyValue;\r\n\r\n    changeObject.categoryId = this.category.categoryId;\r\n    changeObject.parentPropertyID = parentPropertyID;\r\n\r\n    if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {\r\n      this.category.setPropertyRelates(changeObject, this.data);\r\n      this.items.forEach(item => item.refresh());\r\n    }\r\n    this.valueChanged.emit(changeObject);\r\n  }\r\n\r\n  /**\r\n   * çº§èæ¨¡ææ¡å±æ§åæ´\r\n   * @param $event\r\n   * @param parentPropertyID\r\n   */\r\n  __cascadeitemSubmitModal($event, parentPropertyID) {\r\n    if (!parentPropertyID) {\r\n      return;\r\n    }\r\n    const { changeObject, parameters } = $event;\r\n    if (!this.data[parentPropertyID]) {\r\n      this.data[parentPropertyID] = {};\r\n    }\r\n\r\n    this.data[parentPropertyID][changeObject.propertyID] = changeObject.propertyValue;\r\n\r\n    changeObject.categoryId = this.category.categoryId;\r\n    changeObject.parentPropertyID = parentPropertyID;\r\n\r\n    if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {\r\n      this.category.setPropertyRelates(changeObject, this.data, parameters);\r\n      this.items.forEach(item => item.refresh());\r\n    }\r\n    this.submitModal.emit($event);\r\n  }\r\n  /**\r\n   * çº§èå±æ§çæ±æ»ä¿¡æ¯\r\n   * @param propItem\r\n   * @param valueObject\r\n   */\r\n  _valueStringify(propItem, valueObject) {\r\n    if (!propItem || !propItem.cascadeConfig || !valueObject) {\r\n      return '';\r\n    }\r\n    if (!propItem.cascadeConverter || !propItem.cascadeConverter.convertTo) {\r\n      return JSON.stringify(valueObject);\r\n    }\r\n\r\n    return propItem.cascadeConverter.convertTo(valueObject, propItem.cascadeConfig);\r\n\r\n\r\n  }\r\n\r\n  _checkCascadeVisible(propItem) {\r\n    if (Object.keys(propItem).indexOf('visible') < 0) {\r\n      return true;\r\n    } else {\r\n      return propItem.visible;\r\n    }\r\n  }\r\n\r\n\r\n  refreshPanel() {\r\n    this.triggerRefreshPanel.emit();\r\n  }\r\n}\r\n","import {\r\n  Component, OnInit, Input, ViewChild, ElementRef, Output,\r\n  EventEmitter, OnChanges, SimpleChanges, ViewChildren\r\n} from '@angular/core';\r\nimport { ElementPropertyConfig } from '../../entity/property-entity';\r\nimport { PropertyItemListComponent } from '../property-item-list/property-item-list.component';\r\n\r\n@Component({\r\n  selector: 'app-property-panel',\r\n  templateUrl: './property-panel.component.html',\r\n  styleUrls: ['./property-panel.component.css']\r\n})\r\nexport class PropertyPanelComponent implements OnInit, OnChanges {\r\n  @Input() width: number;\r\n  @Input() height: number;\r\n\r\n  @Input() isPersitOpenState = false; // æ¯å¦ææé¢æ¿çéèæ¾ç¤ºç¶æ\r\n  @Input() isShowPanel = false; // isPersitOpenState=trueæ¶ï¼æ§å¶é¢æ¿æ¯å¦éèæ¾ç¤º\r\n  @Output() closePropertyPanel = new EventEmitter<any>(); // isPersitOpenState=trueæ¶ï¼æåºé¢æ¿çå³é­äºä»¶\r\n\r\n  @Input() propertyConfig: ElementPropertyConfig[]; // å±æ§ç±»å\r\n  @Input() propertyData = {}; // å±æ§å¼\r\n\r\n  @Output() propertyChanged = new EventEmitter<any>(); // å±æ§åæ´äºä»¶\r\n  @Output() submitModal = new EventEmitter<any>(); // æ¨¡ææ¡å±æ§åæ´äºä»¶\r\n  @Input() showCloseBtn = true;\r\n\r\n  // é¢æ¿æ é¢ï¼ä¸ºééå½éå\r\n  @Input() panelTitle = 'å±æ§é¢æ¿';\r\n\r\n\r\n  @ViewChild('east') private eastDiv: ElementRef;\r\n  @ViewChildren(PropertyItemListComponent) itemLists: Array<PropertyItemListComponent>;\r\n  isOpen = true;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.width) {\r\n      this.eastDiv.nativeElement.style.width = this.width + 'px';\r\n    } else {\r\n      this.eastDiv.nativeElement.style.width = 'inherit';\r\n    }\r\n    if (this.height) {\r\n      this.eastDiv.nativeElement.style.height = this.height + 'px';\r\n    } else {\r\n      this.eastDiv.nativeElement.style.height = '100%';\r\n    }\r\n\r\n\r\n    if (this.isPersitOpenState) {\r\n      this.isOpen = this.isShowPanel;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  æ´æ¹é¢æ¿çéèæ¾ç¤ºç¶æï¼åªæå¨isPersitOpenState=trueæ¶çæ\r\n   * @param simpleChanges\r\n   */\r\n  ngOnChanges(simpleChanges: SimpleChanges) {\r\n    if (simpleChanges.isShowPanel && this.isPersitOpenState) {\r\n      this.isOpen = this.isShowPanel;\r\n    }\r\n  }\r\n  refreshPanel() {\r\n    this.itemLists.forEach(item => item.refresh());\r\n  }\r\n  changeStatus(item: any) {\r\n    if (this.propertyConfig.length < 2) {\r\n      return;\r\n    }\r\n    if (!item.status || item.status === 'open') {\r\n      item.status = 'closed';\r\n    } else {\r\n      item.status = 'open';\r\n    }\r\n  }\r\n\r\n  // éèé¢æ¿\r\n  collapse() {\r\n    // isPersitOpenState=trueæ¶,ç±å¤é¨ç¡®å®ç¶æ\r\n    if (!this.isPersitOpenState) {\r\n      this.isOpen = false;\r\n    }\r\n    this.closePropertyPanel.emit();\r\n  }\r\n\r\n  /**\r\n   * æåºå±æ§åæ´äºä»¶\r\n   * @param changeObject\r\n   */\r\n  _valueChanged(changeObject) {\r\n    this.propertyChanged.emit(changeObject);\r\n  }\r\n  _submitModal($event) {\r\n    this.submitModal.emit($event);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { PopoverModule } from '@farris/ui-popover';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { FarrisPanelModule } from '@farris/ui-panel';\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\n\r\nimport { InputsModule } from '@progress/kendo-angular-inputs';\r\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\r\nimport { DateInputsModule } from '@progress/kendo-angular-dateinputs';\r\n\r\n\r\nimport { PropertyPanelComponent } from './components/property-panel/property-panel.component';\r\nimport { PropertyItemListComponent } from './components/property-item-list/property-item-list.component';\r\nimport { PropertyItemComponent } from './components/property-item/property-item.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        PropertyItemComponent,\r\n        PropertyItemListComponent,\r\n        PropertyPanelComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ModalModule.forRoot(),\r\n        PopoverModule.forRoot(),\r\n        PerfectScrollbarModule,\r\n        FarrisDialogModule,\r\n        DropDownsModule,\r\n        InputsModule,\r\n        DateInputsModule,\r\n        FarrisPanelModule,\r\n        NotifyModule.forRoot(),\r\n    ],\r\n    exports: [PropertyPanelComponent],\r\n    entryComponents: [PropertyPanelComponent, PropertyItemComponent]\r\n})\r\nexport class PropertyPanelModule {\r\n    constructor() { }\r\n}\r\n"]}