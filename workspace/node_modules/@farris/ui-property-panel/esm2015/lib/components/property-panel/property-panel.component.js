/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewChild, ElementRef, Output, EventEmitter, ViewChildren } from '@angular/core';
import { PropertyItemListComponent } from '../property-item-list/property-item-list.component';
export class PropertyPanelComponent {
    constructor() {
        this.isPersitOpenState = false; // 是否持有面板的隐藏显示状态
        // 是否持有面板的隐藏显示状态
        this.isShowPanel = false; // isPersitOpenState=true时，控制面板是否隐藏显示
        // isPersitOpenState=true时，控制面板是否隐藏显示
        this.closePropertyPanel = new EventEmitter(); // isPersitOpenState=true时，抛出面板的关闭事件
        // 属性类型
        this.propertyData = {}; // 属性值
        // 属性值
        this.propertyChanged = new EventEmitter(); // 属性变更事件
        // 属性变更事件
        this.submitModal = new EventEmitter(); // 模态框属性变更事件
        // 模态框属性变更事件
        this.showCloseBtn = true;
        // 面板标题，为适配国际化
        this.panelTitle = '属性面板';
        this.isOpen = true;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.width) {
            this.eastDiv.nativeElement.style.width = this.width + 'px';
        }
        else {
            this.eastDiv.nativeElement.style.width = 'inherit';
        }
        if (this.height) {
            this.eastDiv.nativeElement.style.height = this.height + 'px';
        }
        else {
            this.eastDiv.nativeElement.style.height = '100%';
        }
        if (this.isPersitOpenState) {
            this.isOpen = this.isShowPanel;
        }
    }
    /**
     *  更改面板的隐藏显示状态，只有在isPersitOpenState=true时生效
     * @param {?} simpleChanges
     * @return {?}
     */
    ngOnChanges(simpleChanges) {
        if (simpleChanges.isShowPanel && this.isPersitOpenState) {
            this.isOpen = this.isShowPanel;
        }
    }
    /**
     * @return {?}
     */
    refreshPanel() {
        this.itemLists.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => item.refresh()));
    }
    /**
     * @param {?} item
     * @return {?}
     */
    changeStatus(item) {
        if (this.propertyConfig.length < 2) {
            return;
        }
        if (!item.status || item.status === 'open') {
            item.status = 'closed';
        }
        else {
            item.status = 'open';
        }
    }
    // 隐藏面板
    /**
     * @return {?}
     */
    collapse() {
        // isPersitOpenState=true时,由外部确定状态
        if (!this.isPersitOpenState) {
            this.isOpen = false;
        }
        this.closePropertyPanel.emit();
    }
    /**
     * 抛出属性变更事件
     * @param {?} changeObject
     * @return {?}
     */
    _valueChanged(changeObject) {
        this.propertyChanged.emit(changeObject);
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    _submitModal($event) {
        this.submitModal.emit($event);
    }
}
PropertyPanelComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-property-panel',
                template: "<div #east [style.display]=\"isOpen?'block':'none'\">\r\n    <div class=\"propertyPanel panel d-flex flex-column\">\r\n\r\n        <div class=\"title d-block\">\r\n            <div class=\"title-label\">\r\n                <span>{{panelTitle|| '\u5C5E\u6027\u9762\u677F'}}</span>\r\n            </div>\r\n            <div class=\"title-actions\">\r\n                <div class=\"monaco-toolbar\">\r\n                    <div class=\"monaco-action-bar animated\">\r\n                        <ul class=\"actions-container\" role=\"toolbar\">\r\n                            <li class=\"action-item\" (click)=\"collapse()\" *ngIf=\"showCloseBtn\">\r\n                                <a class=\"hide-panel\"></a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div #propertyPanel class=\"panel-body\" [style.height]=\"(height - 35) + 'px'\">\r\n            <perfect-scrollbar [config]=\"{suppressScrollX: true}\">\r\n                <ul class=\"property-grid\">\r\n                    <li *ngFor=\"let category of propertyConfig\">\r\n                        <ng-container *ngIf=\"!category.hide\">\r\n                            <span *ngIf=\"!category.hideTitle\"\r\n                                [class]=\"category.status === 'closed' ? 'group-label collapse': 'group-label expand' \"\r\n                                (click)=\"changeStatus(category)\">{{ category.categoryName }}</span>\r\n                            <div [style.display]=\"!category.status || category.status === 'open'?'block':'none'\"\r\n                                class=\"py-1 \">\r\n                                <webide-property-item-list [category]=\"category\" [propertyData]=\"propertyData\"\r\n                                    (valueChanged)=\"_valueChanged($event)\" (submitModal)=\"_submitModal($event)\"\r\n                                    (triggerRefreshPanel)=\"refreshPanel()\"></webide-property-item-list>\r\n                            </div>\r\n                        </ng-container>\r\n                    </li>\r\n                </ul>\r\n            </perfect-scrollbar>\r\n\r\n        </div>\r\n    </div>\r\n</div>",
                styles: [":host{width:inherit;height:inherit}.propertyPanel{width:100%;height:100%;color:rgba(0,0,0,.75);background:#f3f8ff!important;border-color:#d8dbe2!important}.propertyPanel .title{position:relative;background:#d0d8e9!important}.propertyPanel .title>.title-label{line-height:35px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;padding-left:12px;color:#333}.propertyPanel .title .title-actions{position:absolute;right:10px;top:0;padding-left:35px;height:35px;flex:1;box-sizing:border-box}.propertyPanel .property-grid .group-label{line-height:30px;display:block;padding-left:12px;cursor:pointer;background:#e2e9f6!important;color:#34495e!important}.propertyPanel .panel-body{overflow:auto;height:100%}.propertyPanel .property-grid{list-style:none;margin:0;padding:0}.propertyPanel .action-item{cursor:pointer;display:inline-block;transition:transform 50ms;transition:transform 50ms,-webkit-transform 50ms;position:relative;padding:0}.propertyPanel .action-item .hide-panel{height:35px;display:block;line-height:35px;min-width:28px;color:rgba(66,66,66,.75);background-color:transparent!important;outline:0!important;background:url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M9.784 8L13 11.217 11.215 13 8.001 9.786 4.785 13 3 11.216l3.214-3.215L3 4.785 4.784 3 8 6.216 11.216 3 13 4.785 9.784 8.001z' fill='%23424242'/%3E%3C/svg%3E\") 50% 50% no-repeat}"]
            }] }
];
/** @nocollapse */
PropertyPanelComponent.ctorParameters = () => [];
PropertyPanelComponent.propDecorators = {
    width: [{ type: Input }],
    height: [{ type: Input }],
    isPersitOpenState: [{ type: Input }],
    isShowPanel: [{ type: Input }],
    closePropertyPanel: [{ type: Output }],
    propertyConfig: [{ type: Input }],
    propertyData: [{ type: Input }],
    propertyChanged: [{ type: Output }],
    submitModal: [{ type: Output }],
    showCloseBtn: [{ type: Input }],
    panelTitle: [{ type: Input }],
    eastDiv: [{ type: ViewChild, args: ['east',] }],
    itemLists: [{ type: ViewChildren, args: [PropertyItemListComponent,] }]
};
if (false) {
    /** @type {?} */
    PropertyPanelComponent.prototype.width;
    /** @type {?} */
    PropertyPanelComponent.prototype.height;
    /** @type {?} */
    PropertyPanelComponent.prototype.isPersitOpenState;
    /** @type {?} */
    PropertyPanelComponent.prototype.isShowPanel;
    /** @type {?} */
    PropertyPanelComponent.prototype.closePropertyPanel;
    /** @type {?} */
    PropertyPanelComponent.prototype.propertyConfig;
    /** @type {?} */
    PropertyPanelComponent.prototype.propertyData;
    /** @type {?} */
    PropertyPanelComponent.prototype.propertyChanged;
    /** @type {?} */
    PropertyPanelComponent.prototype.submitModal;
    /** @type {?} */
    PropertyPanelComponent.prototype.showCloseBtn;
    /** @type {?} */
    PropertyPanelComponent.prototype.panelTitle;
    /**
     * @type {?}
     * @private
     */
    PropertyPanelComponent.prototype.eastDiv;
    /** @type {?} */
    PropertyPanelComponent.prototype.itemLists;
    /** @type {?} */
    PropertyPanelComponent.prototype.isOpen;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcGVydHktcGFuZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1wcm9wZXJ0eS1wYW5lbC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3Byb3BlcnR5LXBhbmVsL3Byb3BlcnR5LXBhbmVsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFBVSxLQUFLLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQ3ZELFlBQVksRUFBNEIsWUFBWSxFQUNyRCxNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQU8vRixNQUFNLE9BQU8sc0JBQXNCO0lBc0JqQztRQWxCUyxzQkFBaUIsR0FBRyxLQUFLLENBQUMsQ0FBQyxnQkFBZ0I7O1FBQzNDLGdCQUFXLEdBQUcsS0FBSyxDQUFDLENBQUMscUNBQXFDOztRQUN6RCx1QkFBa0IsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDLENBQUMsb0NBQW9DOztRQUduRixpQkFBWSxHQUFHLEVBQUUsQ0FBQyxDQUFDLE1BQU07O1FBRXhCLG9CQUFlLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQyxDQUFDLFNBQVM7O1FBQ3BELGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQyxDQUFDLFlBQVk7O1FBQ3BELGlCQUFZLEdBQUcsSUFBSSxDQUFDOztRQUdwQixlQUFVLEdBQUcsTUFBTSxDQUFDO1FBSzdCLFdBQU0sR0FBRyxJQUFJLENBQUM7SUFDRSxDQUFDOzs7O0lBRWpCLFFBQVE7UUFFTixJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDZCxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1NBQzVEO2FBQU07WUFDTCxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQztTQUNwRDtRQUNELElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNmLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7U0FDOUQ7YUFBTTtZQUNMLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1NBQ2xEO1FBR0QsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDMUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1NBQ2hDO0lBQ0gsQ0FBQzs7Ozs7O0lBTUQsV0FBVyxDQUFDLGFBQTRCO1FBQ3RDLElBQUksYUFBYSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDdkQsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1NBQ2hDO0lBQ0gsQ0FBQzs7OztJQUNELFlBQVk7UUFDVixJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU87Ozs7UUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsRUFBQyxDQUFDO0lBQ2pELENBQUM7Ozs7O0lBQ0QsWUFBWSxDQUFDLElBQVM7UUFDcEIsSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDbEMsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxNQUFNLEVBQUU7WUFDMUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUM7U0FDeEI7YUFBTTtZQUNMLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1NBQ3RCO0lBQ0gsQ0FBQzs7Ozs7SUFHRCxRQUFRO1FBQ04sa0NBQWtDO1FBQ2xDLElBQUksQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDM0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7U0FDckI7UUFDRCxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDakMsQ0FBQzs7Ozs7O0lBTUQsYUFBYSxDQUFDLFlBQVk7UUFDeEIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDMUMsQ0FBQzs7Ozs7SUFDRCxZQUFZLENBQUMsTUFBTTtRQUNqQixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNoQyxDQUFDOzs7WUF6RkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLDR0RUFBOEM7O2FBRS9DOzs7OztvQkFFRSxLQUFLO3FCQUNMLEtBQUs7Z0NBRUwsS0FBSzswQkFDTCxLQUFLO2lDQUNMLE1BQU07NkJBRU4sS0FBSzsyQkFDTCxLQUFLOzhCQUVMLE1BQU07MEJBQ04sTUFBTTsyQkFDTixLQUFLO3lCQUdMLEtBQUs7c0JBR0wsU0FBUyxTQUFDLE1BQU07d0JBQ2hCLFlBQVksU0FBQyx5QkFBeUI7Ozs7SUFuQnZDLHVDQUF1Qjs7SUFDdkIsd0NBQXdCOztJQUV4QixtREFBbUM7O0lBQ25DLDZDQUE2Qjs7SUFDN0Isb0RBQXVEOztJQUV2RCxnREFBaUQ7O0lBQ2pELDhDQUEyQjs7SUFFM0IsaURBQW9EOztJQUNwRCw2Q0FBZ0Q7O0lBQ2hELDhDQUE2Qjs7SUFHN0IsNENBQTZCOzs7OztJQUc3Qix5Q0FBK0M7O0lBQy9DLDJDQUFxRjs7SUFDckYsd0NBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgVmlld0NoaWxkLCBFbGVtZW50UmVmLCBPdXRwdXQsXHJcbiAgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMsIFZpZXdDaGlsZHJlblxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBFbGVtZW50UHJvcGVydHlDb25maWcgfSBmcm9tICcuLi8uLi9lbnRpdHkvcHJvcGVydHktZW50aXR5JztcclxuaW1wb3J0IHsgUHJvcGVydHlJdGVtTGlzdENvbXBvbmVudCB9IGZyb20gJy4uL3Byb3BlcnR5LWl0ZW0tbGlzdC9wcm9wZXJ0eS1pdGVtLWxpc3QuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXBwLXByb3BlcnR5LXBhbmVsJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vcHJvcGVydHktcGFuZWwuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3Byb3BlcnR5LXBhbmVsLmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgUHJvcGVydHlQYW5lbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcclxuICBASW5wdXQoKSB3aWR0aDogbnVtYmVyO1xyXG4gIEBJbnB1dCgpIGhlaWdodDogbnVtYmVyO1xyXG5cclxuICBASW5wdXQoKSBpc1BlcnNpdE9wZW5TdGF0ZSA9IGZhbHNlOyAvLyDmmK/lkKbmjIHmnInpnaLmnb/nmoTpmpDol4/mmL7npLrnirbmgIFcclxuICBASW5wdXQoKSBpc1Nob3dQYW5lbCA9IGZhbHNlOyAvLyBpc1BlcnNpdE9wZW5TdGF0ZT10cnVl5pe277yM5o6n5Yi26Z2i5p2/5piv5ZCm6ZqQ6JeP5pi+56S6XHJcbiAgQE91dHB1dCgpIGNsb3NlUHJvcGVydHlQYW5lbCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpOyAvLyBpc1BlcnNpdE9wZW5TdGF0ZT10cnVl5pe277yM5oqb5Ye66Z2i5p2/55qE5YWz6Zet5LqL5Lu2XHJcblxyXG4gIEBJbnB1dCgpIHByb3BlcnR5Q29uZmlnOiBFbGVtZW50UHJvcGVydHlDb25maWdbXTsgLy8g5bGe5oCn57G75Z6LXHJcbiAgQElucHV0KCkgcHJvcGVydHlEYXRhID0ge307IC8vIOWxnuaAp+WAvFxyXG5cclxuICBAT3V0cHV0KCkgcHJvcGVydHlDaGFuZ2VkID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7IC8vIOWxnuaAp+WPmOabtOS6i+S7tlxyXG4gIEBPdXRwdXQoKSBzdWJtaXRNb2RhbCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpOyAvLyDmqKHmgIHmoYblsZ7mgKflj5jmm7Tkuovku7ZcclxuICBASW5wdXQoKSBzaG93Q2xvc2VCdG4gPSB0cnVlO1xyXG5cclxuICAvLyDpnaLmnb/moIfpopjvvIzkuLrpgILphY3lm73pmYXljJZcclxuICBASW5wdXQoKSBwYW5lbFRpdGxlID0gJ+WxnuaAp+mdouadvyc7XHJcblxyXG5cclxuICBAVmlld0NoaWxkKCdlYXN0JykgcHJpdmF0ZSBlYXN0RGl2OiBFbGVtZW50UmVmO1xyXG4gIEBWaWV3Q2hpbGRyZW4oUHJvcGVydHlJdGVtTGlzdENvbXBvbmVudCkgaXRlbUxpc3RzOiBBcnJheTxQcm9wZXJ0eUl0ZW1MaXN0Q29tcG9uZW50PjtcclxuICBpc09wZW4gPSB0cnVlO1xyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG5cclxuICAgIGlmICh0aGlzLndpZHRoKSB7XHJcbiAgICAgIHRoaXMuZWFzdERpdi5uYXRpdmVFbGVtZW50LnN0eWxlLndpZHRoID0gdGhpcy53aWR0aCArICdweCc7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmVhc3REaXYubmF0aXZlRWxlbWVudC5zdHlsZS53aWR0aCA9ICdpbmhlcml0JztcclxuICAgIH1cclxuICAgIGlmICh0aGlzLmhlaWdodCkge1xyXG4gICAgICB0aGlzLmVhc3REaXYubmF0aXZlRWxlbWVudC5zdHlsZS5oZWlnaHQgPSB0aGlzLmhlaWdodCArICdweCc7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmVhc3REaXYubmF0aXZlRWxlbWVudC5zdHlsZS5oZWlnaHQgPSAnMTAwJSc7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGlmICh0aGlzLmlzUGVyc2l0T3BlblN0YXRlKSB7XHJcbiAgICAgIHRoaXMuaXNPcGVuID0gdGhpcy5pc1Nob3dQYW5lbDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqICDmm7TmlLnpnaLmnb/nmoTpmpDol4/mmL7npLrnirbmgIHvvIzlj6rmnInlnKhpc1BlcnNpdE9wZW5TdGF0ZT10cnVl5pe255Sf5pWIXHJcbiAgICogQHBhcmFtIHNpbXBsZUNoYW5nZXNcclxuICAgKi9cclxuICBuZ09uQ2hhbmdlcyhzaW1wbGVDaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XHJcbiAgICBpZiAoc2ltcGxlQ2hhbmdlcy5pc1Nob3dQYW5lbCAmJiB0aGlzLmlzUGVyc2l0T3BlblN0YXRlKSB7XHJcbiAgICAgIHRoaXMuaXNPcGVuID0gdGhpcy5pc1Nob3dQYW5lbDtcclxuICAgIH1cclxuICB9XHJcbiAgcmVmcmVzaFBhbmVsKCkge1xyXG4gICAgdGhpcy5pdGVtTGlzdHMuZm9yRWFjaChpdGVtID0+IGl0ZW0ucmVmcmVzaCgpKTtcclxuICB9XHJcbiAgY2hhbmdlU3RhdHVzKGl0ZW06IGFueSkge1xyXG4gICAgaWYgKHRoaXMucHJvcGVydHlDb25maWcubGVuZ3RoIDwgMikge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAoIWl0ZW0uc3RhdHVzIHx8IGl0ZW0uc3RhdHVzID09PSAnb3BlbicpIHtcclxuICAgICAgaXRlbS5zdGF0dXMgPSAnY2xvc2VkJztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGl0ZW0uc3RhdHVzID0gJ29wZW4nO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8g6ZqQ6JeP6Z2i5p2/XHJcbiAgY29sbGFwc2UoKSB7XHJcbiAgICAvLyBpc1BlcnNpdE9wZW5TdGF0ZT10cnVl5pe2LOeUseWklumDqOehruWumueKtuaAgVxyXG4gICAgaWYgKCF0aGlzLmlzUGVyc2l0T3BlblN0YXRlKSB7XHJcbiAgICAgIHRoaXMuaXNPcGVuID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgICB0aGlzLmNsb3NlUHJvcGVydHlQYW5lbC5lbWl0KCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmipvlh7rlsZ7mgKflj5jmm7Tkuovku7ZcclxuICAgKiBAcGFyYW0gY2hhbmdlT2JqZWN0XHJcbiAgICovXHJcbiAgX3ZhbHVlQ2hhbmdlZChjaGFuZ2VPYmplY3QpIHtcclxuICAgIHRoaXMucHJvcGVydHlDaGFuZ2VkLmVtaXQoY2hhbmdlT2JqZWN0KTtcclxuICB9XHJcbiAgX3N1Ym1pdE1vZGFsKCRldmVudCkge1xyXG4gICAgdGhpcy5zdWJtaXRNb2RhbC5lbWl0KCRldmVudCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==