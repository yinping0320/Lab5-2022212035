/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ComponentFactoryResolver, Injector, ElementRef } from '@angular/core';
import { BsModalService } from '@farris/ui-modal';
import { NotifyService } from '@farris/ui-notify';
import { PropertyEntity } from '../../entity/property-entity';
export class PropertyItemComponent {
    /**
     * @param {?} resolver
     * @param {?} modalService
     * @param {?} injector
     * @param {?} notifyServ
     * @param {?} el
     */
    constructor(resolver, modalService, injector, notifyServ, el) {
        this.resolver = resolver;
        this.modalService = modalService;
        this.injector = injector;
        this.notifyServ = notifyServ;
        this.el = el;
        this.valueChanged = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.triggerRefreshPanel = new EventEmitter(); // 向上触发整体面板刷新
        // 模态框类型的属性:属性框的展示值
        this.selectOptions = [];
        this.itemType = 'string';
        this.show = true;
        this.numberRestriction = {
            format: 'n2',
            min: '',
            max: ''
        };
        this.showClearButton = false;
        this.showDefaultValue = false;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        this.refresh();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.refresh();
    }
    /**
     * @return {?}
     */
    refresh() {
        // 是否显示，visible默认true
        if (Object.keys(this.elementConfig).indexOf('visible') < 0) {
            this.show = true;
        }
        else {
            this.show = this.elementConfig.visible;
        }
        // 显示格式
        /** @type {?} */
        const propertyType = this.itemType = this.elementConfig.propertyType;
        switch (propertyType) {
            case 'boolean': {
                this.itemType = 'select';
                this.selectOptions = [{ key: true, value: true }, { key: false, value: false }];
                break;
            }
            case 'select': {
                this.selectOptions = this.elementConfig.iterator;
                break;
            }
            case 'modal': {
                this._convertModalShowValue(this.elementValue);
                break;
            }
            case 'number': {
                // precision待优化为'n2'的格式，与kendo保持一致
                /** @type {?} */
                const precision = this.elementConfig.precision;
                if (precision !== undefined && precision > -1) {
                    this.numberRestriction.format = 'n' + precision;
                }
                // 支持传入kendo Numeric format格式 ：'n3' / 'p'
                if (this.elementConfig.numberFormat) {
                    this.numberRestriction.format = this.elementConfig.numberFormat;
                }
                // 设置最大、最小值
                this.numberRestriction.min = this.elementConfig.min;
                this.numberRestriction.max = this.elementConfig.max;
                break;
            }
            case 'string': {
                if (this.elementConfig.readonly) {
                    this._convertModalShowValue(this.elementValue);
                }
                break;
            }
            case 'boolOrExp': {
                this.selectOptions = [{ key: true, value: 'true' }, { key: false, value: 'false' }];
                break;
            }
        }
        // 默认值
        if (Object.keys(this.elementConfig).indexOf('defaultValue') > -1) {
            if (this.elementValue === undefined || this.elementValue === null) {
                this.elementValue = this.elementConfig.defaultValue;
            }
            this.showDefaultValue = true;
        }
    }
    /**
     * 鼠标移入
     * @return {?}
     */
    onmouseover() {
        if (!this.elementConfig.showClearButton) {
            return;
        }
        if (!this.showClearButton) {
            this.showClearButton = true;
        }
    }
    /**
     * 鼠标离开
     * @return {?}
     */
    onmouseleave() {
        if (!this.elementConfig.showClearButton) {
            return;
        }
        this.showClearButton = false;
    }
    /**
     * 清除模态框内容
     * @return {?}
     */
    modalClear() {
        // 数据转换
        this._convertModalShowValue(null);
        // 若有清除后事件，先执行方法
        if (Object.keys(this.elementConfig).indexOf('afterClickClearButton') > -1 &&
            typeof (this.elementConfig.afterClickClearButton) === 'function') {
            this.elementConfig.afterClickClearButton(this.elementValue);
        }
        /** @type {?} */
        const changeObject = {
            propertyID: this.elementConfig.propertyID,
            propertyValue: null
        };
        this.submitModal.emit({ changeObject, parameters: null });
    }
    /**
     * 变更属性值
     * @return {?}
     */
    changeValue() {
        /** @type {?} */
        let value = this.elementValue;
        if (this.itemType === 'multiSelect' && this.elementConfig.multiSelectDataType === 'array') {
            value = this.elementValue ? this.elementValue.split(',') : '';
        }
        /** @type {?} */
        const changeObject = {
            propertyID: this.elementConfig.propertyID,
            propertyValue: value
        };
        this.valueChanged.emit({ changeObject });
        if (this.elementConfig.refreshPanelAfterChanged) {
            this.triggerRefreshPanel.emit();
        }
    }
    /**
     * 自定义编辑器使用模态框打开
     * @return {?}
     */
    openModal() {
        if (this.elementConfig.readonly) {
            return;
        }
        if (Object.keys(this.elementConfig).indexOf('beforeOpenModal') > -1 && typeof (this.elementConfig.beforeOpenModal) === 'function') {
            /** @type {?} */
            const result = this.elementConfig.beforeOpenModal();
            if (result && !result.result) {
                this.notifyServ.warning((/** @type {?} */ ({
                    title: '系统提示', msg: result.message, timeout: 3000
                })));
                return;
            }
        }
        this.createEditorComponent();
    }
    /**
     * 创建自定义编辑器
     * @private
     * @return {?}
     */
    createEditorComponent() {
        /** @type {?} */
        const editor = this.elementConfig.editor;
        if (!editor) {
            return;
        }
        // 创建模态框组件
        /** @type {?} */
        const compFactory = this.resolver.resolveComponentFactory(editor);
        /** @type {?} */
        const compRef = compFactory.create(this.injector);
        compRef.instance.value = this.elementValue;
        if (this.elementConfig.editorParams && compRef.instance.editorParams) { // 编辑器需要的额外参数
            compRef.instance.editorParams = this.elementConfig.editorParams;
        }
        /** @type {?} */
        let modalConfig = compRef.instance.modalConfig;
        if (!modalConfig) {
            modalConfig = {
                title: '属性配置',
                width: 800,
                height: 400,
                showButtons: false
            };
        }
        else if (modalConfig.showButtons) {
            modalConfig.buttons = compRef.instance.modalFooter;
        }
        /** @type {?} */
        const dialog = this.modalService.show(compRef, modalConfig);
        // 监听关闭模态框
        if (compRef.instance.closeModal && compRef.instance.closeModal instanceof EventEmitter) {
            compRef.instance.closeModal.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            (data) => {
                // 数据转换
                if (data) {
                    this._convertModalShowValue(data);
                    /** @type {?} */
                    const changeObject = {
                        propertyID: this.elementConfig.propertyID,
                        propertyValue: data
                    };
                    this.valueChanged.emit({ changeObject });
                }
                dialog.close();
            }));
        }
        // 弹出框关闭事件，带参数，格式为{ value, parameters }
        if (compRef.instance.submitModal && compRef.instance.submitModal instanceof EventEmitter) {
            compRef.instance.submitModal.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            data => {
                if (!data) {
                    dialog.close();
                    return;
                }
                const { value, parameters } = data;
                // 数据转换
                this._convertModalShowValue(value);
                /** @type {?} */
                const changeObject = {
                    propertyID: this.elementConfig.propertyID,
                    propertyValue: value
                };
                this.submitModal.emit({ changeObject, parameters });
                dialog.close();
            }));
        }
    }
    /**
     * 模态框场景下将属性值转换为输入框中显示的值
     * @private
     * @param {?} value
     * @return {?}
     */
    _convertModalShowValue(value) {
        if (this.elementConfig.converter) {
            this.elementShowValue = this.elementConfig.converter.convertTo(value);
            return;
        }
        if (value && value instanceof Object) {
            this.elementShowValue = JSON.stringify(value);
            return;
        }
        this.elementShowValue = value;
    }
}
PropertyItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'webide-property-item',
                template: "<div class=\"farris-group-wrap property-item\" [style.display]=\"show?'block':'none'\">\r\n  <div class=\"form-group farris-form-group\">\r\n    <label class=\"col-form-label\" farrisPopover [popover]=\"popTemplate\" [popoverTitle]=\"elementConfig.propertyName\"\r\n      container=\"body\" [triggers]=\"'hover'\">\r\n      <span class=\"farris-label-text\">{{elementConfig.propertyName}}</span>\r\n    </label>\r\n    <!-- <label class=\"col-form-label\"> \r\n    <span class=\"farris-label-text\">{{elementConfig.propertyName}}</span>\r\n    </label>-->\r\n    <div class=\"farris-input-wrap\" *ngIf=\"itemType=='string'\">\r\n      <input type=\"input\" class=\"form-control form-control-sm\" [(ngModel)]=\"elementValue\" (blur)=\"changeValue()\"\r\n        [readonly]=\"elementConfig.readonly?'readonly':''\">\r\n    </div>\r\n    <div class=\"farris-input-wrap\" *ngIf=\"itemType=='number'\">\r\n      <kendo-numerictextbox class=\"form-control form-control-sm\" [(ngModel)]=\"elementValue\"\r\n        [format]=\"numberRestriction.format\" [min]=\"numberRestriction.min\" [max]=\"numberRestriction.max\"\r\n        [readonly]=\"elementConfig.readonly?true:false\" [autoCorrect]=\"true\" [decimals]=\"elementConfig.decimals\"\r\n        (blur)=\"changeValue()\">\r\n      </kendo-numerictextbox>\r\n    </div>\r\n    <div class=\"farris-input-wrap\" *ngIf=\"itemType=='select'\">\r\n      <kendo-dropdownlist class=\"form-control form-control-sm\" [data]=\"selectOptions\" textField=\"value\" valueField=\"key\"\r\n        [valuePrimitive]=\"true\" [(ngModel)]=\"elementValue\" (valueChange)=\"changeValue()\"\r\n        [readonly]=\"elementConfig.readonly?true:false\">\r\n      </kendo-dropdownlist>\r\n    </div>\r\n    <div class=\"farris-input-wrap\" *ngIf=\"itemType=='date'\">\r\n      <kendo-datepicker class=\"form-control form-control-sm\" [(ngModel)]=\"elementValue\"\r\n        [readonly]=\"elementConfig.readonly?true:false\" [format]=\"'yyyy-MM-dd'\" (valueChange)=\"changeValue()\">\r\n      </kendo-datepicker>\r\n    </div>\r\n    <div class=\"farris-input-wrap\" *ngIf=\"itemType=='datetime'\">\r\n      <kendo-dateinput class=\"form-control form-control-sm\" [(ngModel)]=\"elementValue\"\r\n        [readonly]=\"elementConfig.readonly?true:false\" [format]=\"elementConfig.format||'yyyy-MM-dd HH:mm:ss'\"\r\n        (valueChange)=\"changeValue()\"></kendo-dateinput>\r\n    </div>\r\n    <div class=\"farris-input-wrap modalIcon\" *ngIf=\"itemType=='modal'\" (mouseover)=\"onmouseover()\"\r\n      (mouseleave)=\"onmouseleave()\">\r\n      <input type=\"input\" class=\"form-control form-control-sm\" [(ngModel)]=\"elementShowValue\" readonly>\r\n      <span *ngIf=\"showClearButton && !elementConfig.readonly\" class=\" \" (click)=\"modalClear()\">\r\n        <!-- <i class=\"f-icon modal_close\"></i> -->\r\n        <i class=\"material-icons clearIcon\">close</i>\r\n      </span>\r\n      <!-- <i class=\"fa fa-clone\" (click)=\"openModal()\"></i> -->\r\n      <i class=\"material-icons moreIcon\" (click)=\"openModal()\">filter_none</i>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #popTemplate>\r\n  <div *ngIf=\"elementConfig.propertyID\">\r\n    <span>\u5C5E\u6027\u7F16\u53F7\uFF1A </span> {{elementConfig.propertyID}}</div>\r\n  <div *ngIf=\"elementConfig.propertyName\">\r\n    <span>\u5C5E\u6027\u540D\u79F0\uFF1A </span> {{elementConfig.propertyName}}</div>\r\n  <div *ngIf=\"elementConfig.description\">\r\n    <span>\u63CF\u8FF0\uFF1A </span> {{elementConfig.description}}</div>\r\n  <div *ngIf=\"showDefaultValue\">\r\n    <span>\u9ED8\u8BA4\u503C\uFF1A </span> {{elementConfig.defaultValue}}</div>\r\n</ng-template>",
                styles: [".property-item .form-group{margin-bottom:2px}.property-item .modalIcon input{padding-right:30px}.property-item .modalIcon .moreIcon{position:absolute;top:6px;right:6px;cursor:pointer;font-size:16px;color:#758a96}.property-item .modalIcon .clearIcon{position:absolute;top:5px;right:30px;cursor:pointer;font-size:19px;color:#758a96}.property-item .form-control[readonly]{background-color:#fff}.property-item .form-control:disabled,.property-item .form-control[readonly]{color:#4b4c4c}"]
            }] }
];
/** @nocollapse */
PropertyItemComponent.ctorParameters = () => [
    { type: ComponentFactoryResolver },
    { type: BsModalService },
    { type: Injector },
    { type: NotifyService },
    { type: ElementRef }
];
PropertyItemComponent.propDecorators = {
    elementConfig: [{ type: Input }],
    elementValue: [{ type: Input }],
    valueChanged: [{ type: Output }],
    submitModal: [{ type: Output }],
    triggerRefreshPanel: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    PropertyItemComponent.prototype.elementConfig;
    /** @type {?} */
    PropertyItemComponent.prototype.elementValue;
    /** @type {?} */
    PropertyItemComponent.prototype.valueChanged;
    /** @type {?} */
    PropertyItemComponent.prototype.submitModal;
    /** @type {?} */
    PropertyItemComponent.prototype.triggerRefreshPanel;
    /** @type {?} */
    PropertyItemComponent.prototype.elementShowValue;
    /** @type {?} */
    PropertyItemComponent.prototype.selectOptions;
    /** @type {?} */
    PropertyItemComponent.prototype.itemType;
    /** @type {?} */
    PropertyItemComponent.prototype.show;
    /** @type {?} */
    PropertyItemComponent.prototype.numberRestriction;
    /** @type {?} */
    PropertyItemComponent.prototype.showClearButton;
    /** @type {?} */
    PropertyItemComponent.prototype.showDefaultValue;
    /**
     * @type {?}
     * @private
     */
    PropertyItemComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    PropertyItemComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    PropertyItemComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    PropertyItemComponent.prototype.notifyServ;
    /** @type {?} */
    PropertyItemComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,