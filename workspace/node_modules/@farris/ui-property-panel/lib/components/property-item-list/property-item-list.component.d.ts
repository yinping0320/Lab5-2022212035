import { EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { ElementPropertyConfig } from '../../entity/property-entity';
import { PropertyItemComponent } from '../property-item/property-item.component';
export declare class PropertyItemListComponent implements OnChanges {
    category: ElementPropertyConfig;
    propertyData: any;
    valueChanged: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    triggerRefreshPanel: EventEmitter<any>;
    items: Array<PropertyItemComponent>;
    data: any;
    constructor();
    ngOnChanges(simpleChanges: SimpleChanges): void;
    refresh(): void;
    /**
     * 一般属性变更
     * @param $event
     */
    _itemChanged($event: any): void;
    /**
     * 模态框数据变更（TODO:待优化，合并valueChange事件）
     * @param $event
     */
    _submitModal($event: any): void;
    /**
     * 级联属性变更
     * @param $event
     * @param parentPropertyID
     */
    _cascadeitemChanged($event: any, parentPropertyID: any): void;
    /**
     * 级联模态框属性变更
     * @param $event
     * @param parentPropertyID
     */
    __cascadeitemSubmitModal($event: any, parentPropertyID: any): void;
    /**
     * 级联属性的汇总信息
     * @param propItem
     * @param valueObject
     */
    _valueStringify(propItem: any, valueObject: any): any;
    _checkCascadeVisible(propItem: any): any;
    refreshPanel(): void;
}
