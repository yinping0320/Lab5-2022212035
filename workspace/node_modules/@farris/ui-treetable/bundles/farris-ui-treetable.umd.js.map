{"version":3,"file":"farris-ui-treetable.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@farris/ui-treetable/lib/high-light.pipe.ts","ng://@farris/ui-treetable/lib/hotkeys.ts","ng://@farris/ui-treetable/lib/virtualized-loader.service.ts","ng://@farris/ui-treetable/lib/treetable.service.ts","ng://@farris/ui-treetable/lib/search.handle.ts","ng://@farris/ui-treetable/lib/treetable.component.ts","ng://@farris/ui-treetable/lib/find-input.component.ts","ng://@farris/ui-treetable/lib/nodes_pager/nodes-pager.component.ts","ng://@farris/ui-treetable/lib/nodes_pager/childs-loading.component.ts","ng://@farris/ui-treetable/lib/cell-tips.pipe.ts","ng://@farris/ui-treetable/lib/disable-node.pipe.ts","ng://@farris/ui-treetable/lib/treetable.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { PipeTransform, Pipe, ElementRef } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'highlight' })\r\nexport class HighlightPipe implements PipeTransform {\r\n    constructor(public sanitizer: DomSanitizer, private el: ElementRef) {\r\n    }\r\n    transform(text: string, keyword, field = '', findField = ''): SafeHtml {\r\n        let needSearch = true;\r\n        if (field && findField) {\r\n            if (findField.indexOf(',') === -1) {\r\n                needSearch = field === findField;\r\n            } else {\r\n                needSearch = findField.split(',').some(n => n === field);\r\n            }\r\n        }\r\n\r\n        if (!needSearch) {\r\n            return text;\r\n        }\r\n\r\n        if (keyword && text) {\r\n            let pattern = keyword.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\r\n            pattern = pattern.split(' ').filter((t) => {\r\n                return t.length > 0;\r\n            }).join('|');\r\n            const regex = new RegExp(pattern, 'gi');\r\n            return this.sanitizer.bypassSecurityTrustHtml(\r\n                // text.replace(regex, (match) => `<span class=\"search-highlight\">${match}</span>`)\r\n                this.replaceContent(text, regex, (match) => `<span class=\"search-highlight\">${match}</span>`)\r\n            );\r\n\r\n        } else {\r\n            return text;\r\n        }\r\n    }\r\n\r\n    parseHTML(html, context) {\r\n        const t = (context || document).createElement('template');\r\n        t.innerHTML = html;\r\n        return t.content.cloneNode(true);\r\n    }\r\n\r\n    private replaceContent(strMatch1, regex, match) {\r\n        const matchReg1 = />.*?\\</gi; // åæ¥åº><ä¹é´çåå®¹\r\n        const strs = strMatch1.match(matchReg1); // æ¿å°ææç¬¦åçé®å¼\r\n        if (strs && strs.length) {\r\n            for (const aa of strs) {\r\n                const rep_old = strs[aa]; // æ¿å°åå§ç¬¦åå­ç¬¦ä¸²\r\n                const rep_new = strs[aa].replace(regex, match); // æ¿æ¢æç®çå­ç¬¦ä¸²\r\n                const re2 = new RegExp(rep_old, 'g'); // å©ç¨åå§å­ç¬¦ä¸²çææ­£å\r\n                strMatch1 = strMatch1.replace(re2, rep_new); // å°ç¬¦åçåå§å­ç¬¦ä¸²æ¿æ¢ææ°å­ç¬¦ä¸²\r\n            }\r\n            return strMatch1;\r\n        } else {\r\n            return strMatch1.replace(regex, match);\r\n        }\r\n    }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport { Observable } from 'rxjs';\r\n\r\ninterface HotkeyOptions {\r\n    element: any;\r\n    description: string | undefined;\r\n    keys: string;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TTHotkeys {\r\n    hotkeys = new Map();\r\n    defaults: Partial<HotkeyOptions> = {\r\n        element: document\r\n    };\r\n\r\n    constructor(private eventManager: EventManager) {\r\n    }\r\n\r\n    addShortcut(options: Partial<HotkeyOptions>) {\r\n        const merged = { ...this.defaults, ...options };\r\n        if (merged.keys.indexOf('ctrl') > -1) {\r\n            merged.keys = merged.keys.replace('ctrl', 'control');\r\n        }\r\n        const event = `keydown.${merged.keys}`;\r\n\r\n        if (merged.description) {\r\n            this.hotkeys.set(merged.keys, merged.description);\r\n        }\r\n\r\n        return new Observable(observer => {\r\n            const handler = (e) => {\r\n                e.preventDefault();\r\n                observer.next(e);\r\n            };\r\n\r\n            const dispose = this.eventManager.addEventListener(merged.element, event, handler);\r\n\r\n            return () => {\r\n                dispose();\r\n                this.hotkeys.delete(merged.keys);\r\n            };\r\n        });\r\n    }\r\n\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-05-23 10:27:09\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-09-02 09:08:25\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { TreeTableComponent } from './treetable.component';\r\nimport { RowNode } from './types/treenode';\r\n\r\nexport class VirtualizedLoaderService {\r\n    constructor(private tt: TreeTableComponent) {}\r\n\r\n    getTableHeight() {\r\n        return this.tt.height;\r\n    }\r\n    getTableHeaderHeight() {\r\n        return this.tt.headerBox.nativeElement.getBoundingClientRect().height;\r\n    }\r\n    getTableBodyHeight() {\r\n        return this.tt.height - this.getTableHeaderHeight();\r\n    }\r\n    getTableWidth() {\r\n        return this.tt.width;\r\n    }\r\n\r\n    getRowHeight() {\r\n        return this.tt.rowHeight;\r\n    }\r\n\r\n\r\n    getRowNodes(scrollTop: number) {\r\n        let top = 0;\r\n        const rows = [];\r\n        let topHideHeight = 0;\r\n        let bottomHideHeight = 0;\r\n        \r\n\r\n        const rowNodes = this.tt.getCurrentAllRowNodes();\r\n\r\n        // const {rowNodes } = this.tt.state;\r\n        const rowHeight = this.getRowHeight();\r\n        const minTop = scrollTop;\r\n        const maxTop = minTop + this.getTableHeight() + rowHeight;\r\n        for (let i = 0; i < rowNodes.length; i++) {\r\n            const n: RowNode = rowNodes[i];\r\n            if ( !n.visible) {\r\n                continue;\r\n            }\r\n            top += rowHeight;\r\n            if (top + rowHeight < minTop) {\r\n                topHideHeight += rowHeight;\r\n                continue;\r\n            } else {\r\n                if (top > maxTop) {\r\n                    bottomHideHeight += rowHeight;\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            rows.push(n);\r\n        }\r\n\r\n        return {\r\n            data: rows,\r\n            topHideHeight,\r\n            bottomHideHeight\r\n        };\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { flatten } from 'lodash-es';\r\nimport { RowNode, TreeNode } from './types/treenode';\r\nimport { TreeTableColumn } from './types/treetable-column';\r\n\r\n@Injectable()\r\nexport class TreetableService {\r\n\r\n    private selectionSource = new Subject();\r\n    private dblClickSource = new Subject();\r\n    private changeCheckboxStatus = new Subject<RowNode>();\r\n    private removeNode = new Subject<RowNode>();\r\n    private insertNode = new Subject<TreeNode>();\r\n    private updateNode = new Subject<RowNode>();\r\n\r\n\r\n    selectionSource$: Observable<any> = this.selectionSource.asObservable();\r\n    dblClickSource$: Observable<any> = this.dblClickSource.asObservable();\r\n    changeCheckboxStatus$: Observable<RowNode> = this.changeCheckboxStatus.asObservable();\r\n    insertNode$: Observable<TreeNode> = this.insertNode.asObservable();\r\n    removeNode$: Observable<RowNode> = this.removeNode.asObservable();\r\n    updateNode$: Observable<RowNode> = this.updateNode.asObservable();\r\n\r\n    onSelectionChange(selected?: TreeNode[]) {\r\n        this.selectionSource.next(selected);\r\n    }\r\n\r\n    onDblClick(rowNode: RowNode) {\r\n        this.dblClickSource.next(rowNode);\r\n    }\r\n\r\n    onChangeCheckboxStatus(rowNode: RowNode) {\r\n        this.changeCheckboxStatus.next(rowNode);\r\n    }\r\n\r\n    onInsert(treeNode: TreeNode, parent?: TreeNode) {\r\n        this.insertNode.next(treeNode);\r\n    }\r\n\r\n    onRemove(rowNode: RowNode) {\r\n        this.removeNode.next(rowNode);\r\n    }\r\n\r\n    onUpdate(rowNode: RowNode) {\r\n        this.updateNode.next(rowNode);\r\n    }\r\n\r\n    columnIsVisible(col, tt) {\r\n        if (col.visible === undefined) {\r\n            return true;\r\n        }\r\n        if (typeof col.visible === 'function') {\r\n            return col.visible(tt);\r\n        }\r\n\r\n        return col.visible;\r\n    }\r\n\r\n    checkColumnsForGroupHeader(columns: any, tt: any) {\r\n        let _columns = [];\r\n        if (columns && columns.length) {\r\n            _columns = this.getDataColumns(columns);\r\n        }\r\n        return {\r\n            columns: _columns\r\n        };\r\n    }\r\n\r\n\r\n    private getDataFields(cols, length) {\r\n        let i = 0;\r\n        let j = 0;\r\n        cols.forEach(n => {\r\n            const colspan = n.colspan || 1;\r\n            if (i + colspan <= length) {\r\n                i += colspan;\r\n                j++;\r\n            }\r\n        });\r\n        return cols.splice(0, j);\r\n    }\r\n\r\n\r\n    private getDataColumns(cols) {\r\n        if (!cols || !cols.length) {\r\n            return [];\r\n        }\r\n\r\n        let fields = [];\r\n        for (let i = 0; i < cols.length; i++) {\r\n            let _cols = cols[i];\r\n            if (cols[i] && !cols[i].length) {\r\n                _cols = [...fields];\r\n                fields = [];\r\n            }\r\n            _cols.forEach(n => {\r\n                if (!n.field && n.colspan && n.colspan > 1) {\r\n\r\n                    if (n['halign']) {\r\n                        n.hAlign = n['halign'];\r\n                    }\r\n\r\n                    this.getDataFields(cols[i + 1], n.colspan).forEach(d => {\r\n                        if (!fields.includes(f => f.field === d.field)) {\r\n                            fields.push(d);\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (!fields.includes(f => f.field === n.field)) {\r\n                        fields.push(n);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return fields.filter(n => !n.colspan || n.colspan === 1);\r\n    }\r\n}\r\n","import { extend } from 'lodash-es';\r\n/*\r\n * @Author: ç¯çç§æ(lucas huang)\r\n * @Date: 2018-12-18 13:38:51\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-15 15:13:56\r\n * @Company: Inspur\r\n * @Version: v0.0.1\r\n */\r\nimport { TreeTableComponent } from './treetable.component';\r\nimport { RowNode, TreeNode } from './types/treenode';\r\nimport { cloneDeep } from 'lodash-es';\r\nexport class SearchHandle {\r\n    allNodes = [];\r\n    constructor(private ttInstance: TreeTableComponent) {\r\n    }\r\n\r\n    // å·æ°æ¥è¯¢ç»æ\r\n    research(from: 'client'|'server' = 'client' ) {\r\n        const { field, value } = this.ttInstance.searchData;\r\n        this.allNodes = [];\r\n        this.search(field, value, from);\r\n    }\r\n\r\n\r\n\r\n    search(field: string, value: string, from: 'client'|'server' = 'client'): any {\r\n        if (!this.allNodes.length) {\r\n            this.allNodes = cloneDeep(this.ttInstance.state.rowNodes);\r\n        }\r\n        switch (from) {\r\n            case 'server':\r\n                this.searchOnServer(field, value);\r\n                break;\r\n            default:\r\n                if (value !== '' && value !== undefined && value !== null) {\r\n                    const values = this.searchOnClient(field, value, this.allNodes);\r\n                    this.ttInstance.state.searchRowNodes = null;\r\n                    this._updateSerializedValues(values);\r\n                } else {\r\n                    this.ttInstance.state.searched = false;\r\n                    this.ttInstance.updateSerializedValue();\r\n                }\r\n\r\n                this._refreshTree();\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _refreshTree() {\r\n        if (this.ttInstance.checkeds && this.ttInstance.checkeds.length) {\r\n            this.ttInstance.checkedNodes(this.ttInstance.checkeds.map(n => n.data[this.ttInstance.idField]));\r\n            this.ttInstance['updateNodeStatus']();\r\n            this.ttInstance.detectChanges();\r\n        } else {\r\n            if (this.ttInstance.serializedValue && this.ttInstance.serializedValue.length) {\r\n                this.ttInstance.resize();\r\n            }\r\n            this.ttInstance.detectChanges();\r\n            if (this.ttInstance.psRef) {\r\n                this.ttInstance.psRef.directiveRef.update();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _updateSerializedValues(visibleItems: RowNode[]) {\r\n        const pids = (visibleItems.map(n => [...n.parents, n.id]) as any).flat();\r\n        const pidArr = Array.from(new Set(pids));\r\n\r\n        const rowNodes =  this.allNodes.filter(n => pidArr.some(item=>item==n.id)).map(r => {\r\n            r.expanded = true;\r\n            this.ttInstance.updateNodeProperty(r.id, {expanded: true });\r\n            return r;\r\n        });\r\n\r\n        this.ttInstance.state.searched = true;\r\n        this.ttInstance.serializedValue = this.resetTreeData(null, rowNodes);\r\n        this.ttInstance.state.searchRowNodes = this.ttInstance.serializedValue;\r\n    }\r\n\r\n    findParent(item: TreeNode, allNodes: any[]) {\r\n        let res = [];\r\n        if (item && allNodes && allNodes.length) {\r\n            const p = allNodes.find(t1 => t1.id === item.data[this.ttInstance.idField]);\r\n            res.push(p);\r\n            if (p.parent) {\r\n                res = res.concat(this.findParent(p.parent, allNodes));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    private searchExpression(item: RowNode, value: string, fields: string[] = []) {\r\n        const _fields = fields.length ? fields : this.ttInstance.columns.map(c => c.field);\r\n        const results = _fields.map(f => {\r\n            const targetValue = this.getValue(f, item.node.data);\r\n            if (targetValue !== null && targetValue !== undefined) {\r\n                if (typeof targetValue === 'number') {\r\n                    return targetValue === parseFloat(value);\r\n                } else {\r\n                    return targetValue.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n                }\r\n            } else {\r\n                this.ttInstance.writeConsole(`ä¸å­å¨å ${f}`);\r\n            }\r\n        });\r\n\r\n        return results.reduce((flag, curr) => {\r\n            return flag || curr;\r\n        }, false);\r\n    }\r\n\r\n    private getValue(field, data) {\r\n        if (field) {\r\n            if (field.indexOf('.') > -1) {\r\n                try {\r\n                return field.split('.').reduce( (r, f) => {\r\n                    if (r) {\r\n                        return r[f];\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                }, data );\r\n            } catch {\r\n                this.ttInstance.writeConsole(`å­æ®µ ${field} ä¸å­å¨ã`)\r\n            }\r\n            } else {\r\n                return data[field];\r\n            }\r\n        }\r\n    }\r\n\r\n    getFindTextTotal(field: string, value: string, nodes: RowNode[]) {\r\n        let t = 0;\r\n        const getCount = (fields): any => {\r\n            let c = 0;\r\n            nodes.forEach(n => {\r\n                fields.forEach(f => {\r\n                    const targetValue = '' +   this.getValue(f, n.node.data);\r\n                    if (targetValue !== undefined) {\r\n                        if (targetValue.indexOf(value) > -1) {\r\n                            c++;\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            return c;\r\n        };\r\n        let _fields = [field];\r\n        if (field === '*') {\r\n            _fields = this.ttInstance.columns.map(c => c.field);\r\n\r\n        } else if (field.indexOf(',') > -1) {\r\n            _fields = field.split(',').map(f => f.trim());\r\n        }\r\n\r\n        t = getCount(_fields);\r\n        return t;\r\n    }\r\n\r\n    searchOnClient(field: string, value: string, nodes: RowNode[]) {\r\n        let resultNodes: RowNode[] = [];\r\n        if (value === undefined || value === null) {\r\n            return [];\r\n        }\r\n        if (field === '*') {\r\n            resultNodes = nodes.filter(n => this.searchExpression(n, value));\r\n        } else if (field.indexOf(',') > -1) {\r\n            resultNodes = nodes.filter(n => this.searchExpression(n, value, field.split(',').map(f => f.trim())));\r\n        } else {\r\n            value = value.toLowerCase();\r\n            if (field.indexOf('.') === -1) {\r\n                resultNodes = nodes.filter(n => ('' + n.node.data[field]).toLowerCase().indexOf(value) > -1);\r\n            } else {\r\n                resultNodes = nodes.filter(n => ('' + this.getValue(field, n.node.data)).toLowerCase().indexOf(value) > -1);\r\n            }\r\n        }\r\n\r\n        return resultNodes;\r\n    }\r\n\r\n    searchWithConditions(conditons: {[key: string]: any}) {\r\n        if (!this.allNodes.length) {\r\n            this.allNodes = cloneDeep(this.ttInstance.state.rowNodes);\r\n        }\r\n        const fields = Object.keys(conditons);\r\n        if (!fields.length) {\r\n            this.ttInstance.state.searched = false;\r\n            this.ttInstance.updateSerializedValue();\r\n        } else {\r\n            const nodes = this.allNodes.filter(n => {\r\n                const results = fields.map(field => {\r\n                    const value = conditons[field];\r\n                    return this.searchExpression(n, value, [field])\r\n                });\r\n\r\n                // return results.reduce((flag, curr) => {\r\n                //     return flag && curr;\r\n                // }, false);\r\n                return results.every(n => n);\r\n            });\r\n            this.ttInstance.state.searchRowNodes = null;\r\n            this._updateSerializedValues(nodes);\r\n        }\r\n        this._refreshTree();\r\n    }\r\n\r\n    findParents(rowNodes, allNodes) {\r\n        let res = [];\r\n        rowNodes.forEach(item => {\r\n            res = res.concat(this.findParent(item.node, allNodes));\r\n        });\r\n\r\n        return Array.from(new Set(res));\r\n    }\r\n\r\n    private resetTreeData(parentNode: RowNode, visibleItems: RowNode[]) {\r\n        let res = [];\r\n        let arr = [];\r\n        if (parentNode === null) {\r\n            arr = visibleItems.filter(t2 => t2.parent === parentNode);\r\n        } else {\r\n            parentNode.node.expanded = true;\r\n            arr = visibleItems.filter(t2 => t2.parent && t2.parent.data[this.ttInstance.idField] === parentNode.id);\r\n            if (!arr.length) {\r\n                parentNode.node.children = [];\r\n            } else {\r\n                parentNode.node.children = arr.map( tn => tn.node );\r\n            }\r\n        }\r\n        arr.forEach( a => {\r\n            a.visible = true;\r\n            res.push(a);\r\n            res = res.concat(this.resetTreeData(a, visibleItems));\r\n        });\r\n        return cloneDeep(res);\r\n    }\r\n\r\n    private searchOnServer(field: string, value: string) {\r\n\r\n    }\r\n\r\n}\r\n","import { switchMap, takeUntil } from 'rxjs/operators';\r\n/*\r\n* @Author: ç¯çç§æ(lucas huang)\r\n * @Date: 2018-12-18 18:44:13\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-29 08:41:39\r\n * @Company: Inspur\r\n * @Version: v0.0.1\r\n */\r\n\r\nimport {\r\n    Component, OnInit, Input, TemplateRef, Directive,\r\n    ContentChildren, QueryList, AfterContentInit, OnDestroy,\r\n    HostListener, Output, EventEmitter, ElementRef, Injector,\r\n    ViewChild, Optional, Self, AfterViewInit, NgZone, Renderer2, ViewEncapsulation,\r\n    OnChanges, SimpleChanges, AfterViewChecked, ChangeDetectionStrategy, ChangeDetectorRef, DoCheck, HostBinding\r\n} from '@angular/core';\r\n\r\nimport { FarrisTemplateDirective, CommonUtils, IdService, FarrisComponentInstanceService, DebugService } from '@farris/ui-common';\r\nimport { ResizeService } from '@farris/ui-common/events';\r\nimport { ColumnFormatService, ColumnFormatter } from '@farris/ui-common/column';\r\nimport { InputGroupComponent } from '@farris/ui-input-group';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { PerfectScrollbarComponent } from '@farris/ui-perfect-scrollbar';\r\n\r\nimport { Subscription, Observable, of, BehaviorSubject, Subject, timer } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { cloneDeep, extend, remove } from 'lodash-es';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\nimport { TreeTableColumn } from './types/treetable-column';\r\nimport { VirtualizedLoaderService } from './virtualized-loader.service';\r\nimport { TreeNode, RowNode, SelectEventArgs } from './types/treenode';\r\nimport { TreetableService } from './treetable.service';\r\nimport { SearchHandle } from './search.handle';\r\nimport { TTHotkeys } from './hotkeys';\r\nimport { PaginationInstance } from '@farris/ui-pagination';\r\nimport { FarrisContextMenuDirective } from '@farris/ui-context-menu';\r\n\r\n\r\n/** ååæ ¼ç¹äºä»¶åæ° */\r\nexport interface CellClickParam {\r\n    event: Event;\r\n    col: TreeTableColumn;\r\n    node: TreeNode;\r\n}\r\n/** èç¹é©éäºä»¶ */\r\nexport interface NodeCheckedParam {\r\n    originalEvent?: any;\r\n    node: TreeNode | TreeNode[];\r\n    nodes?: any[];\r\n    instance: TreeTableComponent;\r\n}\r\n\r\nexport interface NodeSelectedParam {\r\n    originalEvent?: Event;\r\n    node: TreeNode | TreeNode[];\r\n    type?: 'row' | 'checkbox';\r\n    index?: number;\r\n    parents?: any[];\r\n    instance: TreeTableComponent;\r\n}\r\n\r\nexport type IconFieldType = {\r\n    leaf?: string,\r\n    expand?: string,\r\n    collapse?: string\r\n} | string;\r\n\r\n\r\nconst NODES_PAGER_COLUMN_FIELD = '__nodespagerbar__';\r\n\r\n\r\n@Directive({\r\n    selector: 'tt-column, [tt-column]'\r\n})\r\nexport class TreeTableColumnDirective {\r\n    @Input() field: string;\r\n    @Input() title: string;\r\n    @Input() width?: number;\r\n    @Input() hAlign?: string;\r\n    @Input() align?: string;\r\n    @Input() formatter?: () => any | ColumnFormatter;\r\n}\r\n\r\n@Component({\r\n    selector: 'farris-treetable',\r\n    templateUrl: 'treetable.component.html',\r\n    styles: [`\r\n        .farris-treetable {\r\n            position: relative;\r\n        }\r\n        .resizable-column {\r\n            background-clip: padding-box;\r\n            position: relative;\r\n        }\r\n        .column-resizer {\r\n            display: block;\r\n            position: absolute!important;\r\n            top: 0;\r\n            right: 0;\r\n            margin: 0;\r\n            width: .5em;\r\n            height: 100%;\r\n            padding: 0;\r\n            cursor: col-resize;\r\n            border: 1px solid transparent;\r\n        }\r\n        .column-resizer-helper {\r\n            width: 1px;\r\n            position: absolute;\r\n            z-index: 10;\r\n            display: none;\r\n            border-right: 1px dashed #1890ff;\r\n        }\r\n\r\n        .farris-treetable-disabled .farris-treetable-body .table tr{\r\n            opacity: 0.4;\r\n            cursor: not-allowed;\r\n        }\r\n        .farris-treetable-disabled .table tr.farris-table-selectedrow{\r\n            opacity: 1;\r\n            cursor: default;\r\n        }\r\n\r\n        .custom-checkbox .custom-control-input:indeterminate~.custom-control-label::after {\r\n            background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3e%3cpath stroke='%23fff' d='M0 2h4'/%3e%3c/svg%3e\");\r\n            background-color: #1890ff;\r\n        }\r\n        .unselectable-text {\r\n            -webkit-user-select: none;\r\n            -moz-user-select: none;\r\n            -o-user-select: none;\r\n            -ms-user-select: none;\r\n            user-select: none\r\n        }\r\n        .search-highlight {\r\n            background-color: #FFFF1F;\r\n        }\r\n        .search-highlight.active{\r\n            background-color: #FF901C;\r\n        }\r\n\r\n        .f-treetable--fixed-columns .ps__rail-x, .f-treetable--fixed-columns .ps__rail-y {\r\n            z-index: 18;\r\n        }\r\n    `],\r\n    exportAs: 'treeTable',\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TreeTableComponent implements OnInit, AfterContentInit, AfterViewInit, OnChanges, AfterViewChecked, OnDestroy {\r\n    id = '';\r\n    /** å®½åº¦ */\r\n    @Input() width = 500;\r\n    /** é«åº¦ */\r\n    @Input() height = 400;\r\n\r\n    @Input() showFilterBar = false;\r\n    /** æ¾ç¤ºè¿æ»¤è¡ */\r\n    @Input() enableFilterRow = false;\r\n    /** æ¾ç¤ºæ¥è¯¢å­æ®µ */\r\n    @Input() showSearchField = true;\r\n\r\n    @Input() headerHeight = 35;\r\n    /** è¡¨å¤´æè¡ */\r\n    @Input() headerWrap = false;\r\n    /** è¡é« */\r\n    @Input() rowHeight = 29;\r\n    /**\r\n     * åä¿¡æ¯\r\n     */\r\n    @Input() columns = [];\r\n    private _groupColumns = [];\r\n    @Input() set groupColumns(cols) {\r\n        this._groupColumns = cols || [];\r\n        const _columns = this.ttService.checkColumnsForGroupHeader(cols.map(cs => [...cs]), this).columns;\r\n        this.columns = _columns.filter(n => n.field);\r\n    }\r\n    get groupColumns() {\r\n        return this._groupColumns;\r\n    }\r\n    /** å¯ç¨å¤è¡¨å¤´ */\r\n    @Input() useGroupHeader = false;\r\n\r\n    @Input() fitColumns = true;\r\n    @Input() autoFitColumns = false;\r\n\r\n    @Input() searchFields: { label: string, value: string }[];\r\n\r\n    @Input() allColumnsTitle = 'ææå';\r\n    @Input() searchAnyField = true;\r\n\r\n    /** æ¾ç¤ºè¿æ¥çº¿ï¼é»è®¤ä¸º false */\r\n    @Input() showLines = false;\r\n    @Input() showLinesOnHover = false;\r\n    /**\r\n     * æ¯å¦å¯ç¨å¤éã é»è®¤ä¸ºåé\r\n     */\r\n    @Input() multiSelect = false;\r\n    @Input() singleSelect = true;\r\n    /** å¯ç¨å¤éåï¼æ¯å¦æ¾ç¤ºcheckbox */\r\n    @Input() showCheckbox = false;\r\n    /**\r\n     * ä¸»é®å­æ®µ\r\n     */\r\n    @Input() idField: string;\r\n\r\n    /** æ¾ç¤ºè¾¹æ¡çº¿ */\r\n    @Input() showBorder = true;\r\n\r\n    @Input() showCheckAll = true;\r\n\r\n    @Input() showHeader = true;\r\n    /** å¯ç¨æé©¬çº¿ */\r\n    @Input() striped = false;\r\n    /** å¯ç¨é¼ æ åè¿ææ */\r\n    @Input() hovered = true;\r\n    /** ç¦ç¨ã ç¦ç¨æ¶ä¸åè®¸éä¸­è¡ */\r\n    @Input() disabled = false;\r\n    /** ç¦å¡èç¹éä¸­ */\r\n    @Input() disabledRow: (param: { node: TreeNode, instance?: TreeTableComponent }) => boolean;\r\n\r\n    /** æ°æ®å è½½æ¹å¼; é»è®¤å¼ ä¸º all\r\n     * - all: å¨é¨å è½½\r\n     * - async: åå±å è½½\r\n     */\r\n    @Input() loadDataType: 'all' | 'async' = 'all';\r\n    /** åºå®è¡¨å¤´ */\r\n    @Input() fixedHeader = false;\r\n\r\n    /** å½å¤éæ¶ï¼éä¸­å½åè¡å¹¶é©é */\r\n    @Input() checkOnSelect = false;\r\n    /** å½å¤éæ¶ï¼é©éå¹¶éä¸­å½åè¡ */\r\n    @Input() selectOnCheck = false;\r\n    /**\r\n     * å¯ç¨å¤éæ¶ï¼æ­¤å±æ§ä¸ºtrue æ¶ï¼ä»å½åè¡éä¸­\r\n     */\r\n    @Input() onlySelectSelf = false;\r\n\r\n    /** å¯ç¨åå®½è°æ´ */\r\n    @Input() resizableColumns = true;\r\n    /** è®¾ç½®ä¸ºtrueæ¶èªéåºç¶å®¹çå°ºå¯¸ */\r\n    @Input() fit = false;\r\n\r\n    /** å¯ç¨çº§èéä¸­åè½ */\r\n    @Input() cascadeCheck = true;\r\n    /** åä¸çº§èéä¸­ */\r\n    @Input() cascadeDown = true;\r\n    /** åä¸çº§èéä¸­ */\r\n    @Input() cascadeUp = true;\r\n    /** ç©ºæ°æ®æ¶ï¼æ¾ç¤ºçæç¤ºææ¬ */\r\n    @Input() emptyMessage = 'ææ æ°æ®';\r\n    /** ç¼©è¿é´è·ï¼é»è®¤ä¸º 16px */\r\n    @Input() indentSpacing = 16;\r\n\r\n    /**\r\n     * åå»è¡éä¸­åï¼å¨æ¬¡ç¹å»ä¸ä¼è¢«åæ¶éä¸­ç¶æ;\r\n     */\r\n    @Input() keepSelect = true;\r\n    /** èæå è½½ */\r\n    @Input() virtualized = false;\r\n    /**\r\n     * ä»åè®¸éæ©å¶å­èç¹\r\n     * - default: åºç¨æå¡å¨ç«¯ä¼ åçè®¾ç½®ï¼å¦ææå¡å¨ç«¯æ²¡æè®¾ç½®ï¼åä¸ no ä¿æä¸è³ï¼\r\n     * - yes: å¦æå®¢æ·ç«¯è®¾ç½®ä¸º `yes`, æå¡å¨ç«¯çè®¾ç½®å¤±æï¼\r\n     * - no: åè®¸éæ©ææèç¹ï¼æå¡å¨ç«¯è®¾ç½®å¤±æ\r\n     */\r\n    @Input() onlySelectLeaf: boolean | 'default' | 'yes' | 'no' = 'default';\r\n\r\n    /** æ¾ç¤ºå¾æ  */\r\n    @Input() showIcon = false;\r\n    /** å¶å­èç¹å¾æ  */\r\n    @Input() leafIcon = 'file';\r\n    /** èç¹å±å¼å¾æ  */\r\n    @Input() expandIcon = 'folder-open';\r\n    /** èç¹æå å¾æ  */\r\n    @Input() collapseIcon = 'folder';\r\n\r\n    @Input() foldIcon = 'treetable-toggler';\r\n    @Input() unfoldIcon = 'extanded treetable-toggler';\r\n\r\n    /** å¯ç¨èç¹å¾æ ä»æ°æ®ä¸­è·åã é»è®¤ä¸º false */\r\n    @Input() useIconFromData = false;\r\n    /** å½æ°æ®æºä¸­iconæªè®¾ç½®æ¶ä½¿ç¨åç½®ICON. é»è®¤ä¸º true */\r\n    @Input() whenDataIconEmptyUseDefault = true;\r\n    /** ä»æ°æ®æºå­æ®µä¸­è·åå¾æ  */\r\n    @Input() iconField: IconFieldType = '';\r\n    /** å¾æ èªå®ä¹æ ·å¼ */\r\n    @Input() iconCls: string;\r\n\r\n    /** å¯ç¨è¿ç«¯æåº */\r\n    @Input() remoteSort = true;\r\n    /** æåºå­æ®µ */\r\n    @Input() sortName: string;\r\n    /** æåºæ¹å¼ asc | desc */\r\n    @Input() sortOrder: string;\r\n    /** åè®¸å¤åæåº */\r\n    @Input() multiSort: boolean;\r\n\r\n    @Input() beforeSortColumn: (field: string, order: string) => Observable<boolean>;\r\n\r\n    @Input() rowStyler: (treeNode: TreeNode, field?: string) => any;\r\n    @Input() cellStyler: (treeNode: TreeNode, field: string) => any;\r\n\r\n    /** å¯ç¨åç«¯ææ¬æ¥æ¾ */\r\n    @Input() enableFindText = false;\r\n    /** ææ¬æ¥è¯¢å­æ®µ, å¼ç¨ */\r\n    @Input() findField: string;\r\n    // æ åè¡¨é»è®¤å±å¼å±çº§ã -1ï¼ ä¸å±å¼ï¼ 0ï¼ å¨é¨å±å¼ï¼ >0:  å±å¼å°æå®çº§æ°ï¼\r\n    @Input() expandLevel = -1;\r\n\r\n    @Input() selectValue = '';\r\n    @Output() selectValueChange = new EventEmitter();\r\n    /** å¯ç¨åå»å±å¼èç¹ */\r\n    @Input() dblClickExpand = true;\r\n    @Input() useDblClick = true;\r\n\r\n    /** éä¸­èç¹IDæ°ç» */\r\n    @Input() selectValues = [];\r\n    @Output() selectValuesChange = new EventEmitter();\r\n    /** æ¯å¦ç¦æ­¢æè¡ï¼é»è®¤ä¸æè¡ */\r\n    @Input() nowrap = true;\r\n\r\n    @Input() checkValues = [];\r\n    @Output() checkValuesChange = new EventEmitter();\r\n\r\n\r\n    @Input() beforeNodeSelected: (e: any) => Observable<boolean>;\r\n    @Input() beforeNodeUnSelected: () => Observable<boolean>;\r\n\r\n    @Input() beforeNodeChecked: () => Observable<boolean>;\r\n    @Input() beforeNodeUnChecked: () => Observable<boolean>;\r\n\r\n    @Input() beforeCheckAll: (e?: any) => Observable<boolean>;\r\n    @Input() beforeUnCheckAll: (e?: any) => Observable<boolean>;\r\n\r\n    @Input() beforeClickNode: (e?: any) => Observable<boolean>;\r\n\r\n    /** åé¡µä¿¡æ¯ */\r\n    @Input() pagination = false;\r\n    /** åé¡µå è½½å­èç¹æ°æ® */\r\n    @Input() paginationForChildren = false;\r\n    /** åé¡µæ¡æ¾ç¤ºæ¨¡å¼ï¼ default, simple */\r\n    @Input() pagerViewMode = 'default';\r\n    /** å¯ç¨æå¡å¨ç«¯åé¡µ */\r\n    @Input() pagerOnServer = true;\r\n    /** æ¯é¡µè®°å½æ° */\r\n    @Input() pageList = [10, 20, 30, 50, 100];\r\n    /** å½åé¡µç  */\r\n    @Input() pageIndex = 1;\r\n    /** æ¯é¡µè®°å½æ° */\r\n    @Input() pageSize = 20;\r\n    /** åé¡µåºé«åº¦ */\r\n    @Input() pagerHeight = 56;\r\n    /** æ¾ç¤ºæ¯é¡µè®°å½æ° */\r\n    @Input() showPageList = false;\r\n    /** æ¾ç¤ºåé¡µä¿¡æ¯ */\r\n    @Input() showPageInfo = true;\r\n    /** æ¾ç¤ºé¡µç  */\r\n    @Input() showPageNumber = true;\r\n    /** æ¾ç¤ºé¡µç æå¤§æ°é */\r\n    @Input() pagerLabelSize = 7;\r\n    /** æ¾ç¤ºé¡µç è¾å¥æ¡ */\r\n    @Input() showGotoInput = false;\r\n    /** å­èç¹åé¡µæ¯å¦æ¾ç¤ºæ»è®°å½æ°ï¼é»è®¤ false */\r\n    @Input() showTotalForChildren = false;\r\n    /** æ»è®°å½æ° */\r\n    @Input() total = 0;\r\n\r\n\r\n    @Input() enableContextMenu = false;\r\n    @Input() contextMenuItems = [];\r\n    @Input() beforeShowContextMenu: (e: { [key: string]: any }) => Observable<{ show: boolean, menus: Array<any>}>;\r\n\r\n    @Output() pageSizeChanged = new EventEmitter();\r\n    @Output() pageChanged = new EventEmitter();\r\n\r\n    /** æåºå */\r\n    @Output() columnSorted = new EventEmitter();\r\n    /** éä¸­äºä»¶ */\r\n    @Output() nodeSelected: EventEmitter<NodeSelectedParam> = new EventEmitter();\r\n    /** åæ¶éä¸­äºä»¶ */\r\n    @Output() nodeUnSelect: EventEmitter<NodeSelectedParam> = new EventEmitter();\r\n\r\n    /** é©é */\r\n    @Output() nodeChecked: EventEmitter<NodeCheckedParam> = new EventEmitter();\r\n    /** åæ¶é©é */\r\n    @Output() nodeUnChecked: EventEmitter<NodeCheckedParam> = new EventEmitter();\r\n\r\n    /** å¨éäºä»¶ */\r\n    @Output() checkAll: EventEmitter<any> = new EventEmitter();\r\n    /** åæ¶å¨é */\r\n    @Output() unCheckAll: EventEmitter<any> = new EventEmitter();\r\n    /** æ¥è¯¢ */\r\n    @Output() search: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() dblClick: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() loadedData: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() expand: EventEmitter<TreeNode> = new EventEmitter();\r\n    @Output() collapse: EventEmitter<TreeNode> = new EventEmitter();\r\n\r\n    @Output() expandAllNodes: EventEmitter<any> = new EventEmitter();\r\n    @Output() collapseAllNodes: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() appendNew: EventEmitter<any> = new EventEmitter();\r\n    @Output() removed: EventEmitter<any> = new EventEmitter();\r\n    @Output() updated: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() clearSearchValue = new EventEmitter();\r\n    @Output() cellClick = new EventEmitter<CellClickParam>();\r\n    @Output() childsPageChanged = new EventEmitter();\r\n\r\n    @Output() searchValueChange = new EventEmitter<any>();\r\n\r\n    @Input() loadedTimer = 100;\r\n\r\n    serializedValue: RowNode[];\r\n\r\n    _data: TreeNode[] = [];\r\n    // loaddata æ¶ åè®¾ç½®ä¸ºç©ºæ°ç»ï¼\r\n    isLoadNewDataSetEmpty = false;\r\n    get data(): any[] {\r\n        return this._data;\r\n    }\r\n    @Input() set data(val: any[]) {\r\n        this._data = val;\r\n        this.updateSerializedValue();\r\n        if (!this.isLoadNewDataSetEmpty) {\r\n            this.initNodeStatus();\r\n        }\r\n        // autowidth æ¶ï¼è¡¨å¤´å®½åº¦ä¾æ®åå®¹å®½åº¦ä½åæ­¥å¤ç\r\n        this.setNewColumnsWidth();\r\n\r\n        this.loadDataSuccess();\r\n    }\r\n    /** æ ¹æ®åå®¹èªå¨å®½åº¦ï¼é»è®¤ false;\r\n     * æ­¤å±æ§å¼å¯åï¼èªå¨åå®½å¤±æ\r\n     */\r\n    @Input() autoWidth = false;\r\n\r\n    @ContentChildren(FarrisTemplateDirective) templates: QueryList<FarrisTemplateDirective>;\r\n    @ContentChildren(TreeTableColumnDirective) columnsRef: QueryList<TreeTableColumnDirective>;\r\n\r\n    @ViewChild('headerBox') headerBox: ElementRef;\r\n    @ViewChild('resizerHelper') resizerHelperVC: ElementRef;\r\n    @ViewChild('headerTable') headerTable: ElementRef;\r\n    @ViewChild('bodyTable') bodyTable: ElementRef;\r\n\r\n    @ViewChild('inputGroup') inputGroup: InputGroupComponent;\r\n    @ViewChild(PerfectScrollbarComponent) psRef?: PerfectScrollbarComponent;\r\n\r\n    private headerCheckboxCmp: TreeTableHeaderCheckboxComponent;\r\n    @ViewChild('allCheckbox') set allCheckbox(content: TreeTableHeaderCheckboxComponent) {\r\n        this.headerCheckboxCmp = content;\r\n    }\r\n\r\n    @ViewChild('nodespagerbar') nodesPagerBar: TemplateRef<any>;\r\n    @ViewChild(FarrisContextMenuDirective) ctxMenu: FarrisContextMenuDirective;\r\n    /**\r\n     * è¡¨å¤´æ¨¡æ¿\r\n     */\r\n    headerTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * è¡¨ä½æ¨¡æ¿\r\n     */\r\n    bodyTemplate: TemplateRef<any>;\r\n\r\n    /** éä¸­é¡¹éå */\r\n    private _selections = [];\r\n    get selections(): TreeNode[] {\r\n        return this._selections;\r\n    }\r\n    set selections(vals: TreeNode[]) {\r\n        if (vals && vals.length) {\r\n            // è¿æ»¤ææ°æ®æºä¸­ä¸å­å¨èç¹\r\n            this._selections = vals.filter(tn => tn && this.findRowNode(tn.id));\r\n            const ids = this._selections.map(tn => tn.id);\r\n\r\n            if (ids.length !== this.selectValues.length ||\r\n                (ids.length === this.selectValues.length && this.difference(ids, this.selectValues).length)) {\r\n                this.selectValues = ids;\r\n                setTimeout(() => {\r\n                    this.selectValuesChange.emit(ids);\r\n                });\r\n            }\r\n        } else {\r\n            this._selections = [];\r\n            this.selectValues = [];\r\n            this.selectValuesChange.emit([]);\r\n\r\n        }\r\n    }\r\n    /**\r\n     * éä¸­é¡¹ç´¢å¼\r\n     */\r\n    selectRowIndex = -1;\r\n\r\n    /** éä¸­å½åè¡ */\r\n    private _selectedRow = null;\r\n    get selectedRow(): TreeNode {\r\n        return this._selectedRow;\r\n    }\r\n\r\n    set selectedRow(treeNode: TreeNode) {\r\n        this._selectedRow = treeNode;\r\n        if (treeNode) {\r\n            if (this.selectValue !== treeNode.id) {\r\n                this.selectValue = treeNode.id;\r\n                this.selectValueChange.emit(treeNode.id);\r\n            }\r\n        } else {\r\n            this.selectValue = null;\r\n            this.selectValueChange.emit(null);\r\n        }\r\n    }\r\n\r\n\r\n    /** é©éçè®°å½éå */\r\n    private _checkeds = [];\r\n    get checkeds(): TreeNode[] {\r\n        return this._checkeds;\r\n    }\r\n    set checkeds(treeNodes: TreeNode[]) {\r\n        if (treeNodes && treeNodes.length) {\r\n            this._checkeds = treeNodes.filter(tn => this.findRowNode(tn.id));\r\n            const ids = this._checkeds.map(tn => tn.id);\r\n            this.checkValues = this.checkValues || [];\r\n            if (ids.length !== this.checkValues.length ||  (ids.length === this.checkValues.length && this.difference(ids, this.checkValues).length)) {\r\n                this.checkValues = ids;\r\n                setTimeout(() => {\r\n                    this.checkValuesChange.emit(ids);\r\n                });\r\n            }\r\n        } else {\r\n            this._checkeds = [];\r\n            this.checkValues = [];\r\n            this.checkValuesChange.emit([]);\r\n        }\r\n    }\r\n\r\n    // æå¤å±DIV\r\n    containerElement: HTMLDivElement;\r\n\r\n    // è®°å½åæå¨åçä½ç½®\r\n    lastResizerHelperX: number;\r\n\r\n    searchData = { field: '*', value: '' };\r\n\r\n    scorllBodyHeight: number;\r\n\r\n    searchHandle: SearchHandle;\r\n    searchButtonText = '<i class=\"f-icon f-icon-search\"></i>';\r\n    /** æ¾ç¤ºæ¥è¯¢å·¥å·æ¡ */\r\n    showFindInput = false;\r\n\r\n    private isDataChanged = false;\r\n\r\n    scrollLoader: VirtualizedLoaderService;\r\n    topHideHeight = 0;\r\n    bottomHideHeight = 0;\r\n    state = {\r\n        searchRowNodes: null,\r\n        searched: false,\r\n        rowNodes: [],\r\n        scrollY: 0,\r\n        scrollX: 0\r\n    };\r\n\r\n    /** å¾æ¥è¯¢çææ¬ */\r\n    findValue = '';\r\n    /** ç»ææ»æ° */\r\n    findCount = 0;\r\n    /** å½åç´¢å¼ */\r\n    findCurrent = 0;\r\n    /** å­å¨ææ¬æ¥è¯¢ç»æ */\r\n    findResult = [];\r\n    private ro: ResizeObserver | null = null;\r\n    private findKeysHandler = null;\r\n    private _hotKeys: TTHotkeys = null;\r\n    localeService: LocaleService;\r\n    private idService: IdService;\r\n    private styleSheetId = 'treetable-style-';\r\n    private styleElement;\r\n\r\n    // è°æ´æ¨¡æ¿ï¼æ­¤å±æ§ä»ä¸ºå¸®å©ä¸­çæ ç»ä»¶\r\n    fast = false;\r\n\r\n    paginationOptions: PaginationInstance = {\r\n        id: 'Farris-TreeTable-Pagination_',\r\n        itemsPerPage: this.pageSize,\r\n        currentPage: this.pageIndex,\r\n        pageList: this.pageList,\r\n        totalItems: this.total,\r\n        remote: this.pagerOnServer\r\n    };\r\n\r\n    selectNodeChangedSubject = new BehaviorSubject(null);\r\n    private _UUID = '';\r\n    // æ¯å¦æåºå®å\r\n    fixedColumns = false;\r\n    private destroy$ = new Subject();\r\n    private farrisInstances: FarrisComponentInstanceService = null;\r\n    difference = (first: any[], second: any[]) => first.filter(item => !second.some(secondItem => secondItem == item));\r\n    private debugSer: DebugService = null;\r\n\r\n    private filterRowConditions = null;\r\n    constructor(\r\n        public ttService: TreetableService, public el: ElementRef,\r\n        public resizeSer: ResizeService, private renderer: Renderer2,\r\n        public utils: CommonUtils, public colFormatSer: ColumnFormatService,\r\n        private shortcuts: TTHotkeys, private cdRef: ChangeDetectorRef,\r\n        private ngZone: NgZone, private injector: Injector) {\r\n        this.searchHandle = new SearchHandle(this);\r\n        this.scrollLoader = new VirtualizedLoaderService(this);\r\n        if (this.injector) {\r\n            this._hotKeys = this.injector.get(TTHotkeys, null);\r\n            this.localeService = this.injector.get(LocaleService, null);\r\n            this.idService = this.injector.get(IdService, null);\r\n            this.farrisInstances = this.injector.get(FarrisComponentInstanceService, null);\r\n        }\r\n        if (this.idService) {\r\n            this._UUID = this.idService.uuid();\r\n            this.styleSheetId += this.idService.uuid();\r\n        } else {\r\n            this._UUID = ('' + Math.random()).slice(2);\r\n            this.styleSheetId += ('' + Math.random()).slice(2);\r\n        }\r\n\r\n        this.ttService = new TreetableService();\r\n\r\n        this.debugSer = this.injector.get(DebugService, null);\r\n\r\n        if (this.debugSer) {\r\n            this.debugSer.useDebugMode();\r\n        }\r\n    }\r\n\r\n    writeConsole(msg, type: 'info'|'log'|'warn'|'error' = 'warn') {\r\n        if (this.debugSer) {\r\n            this.debugSer[type](msg);\r\n        }\r\n    }\r\n\r\n    private checkOptons() {\r\n        // å¯ç¨æ°æ®æè¡åï¼èææ¸²æåè½å¤±æ\r\n        if (!this.nowrap) {\r\n            this.virtualized = false;\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.reSetSize();\r\n            this.setScorllBodyHeight();\r\n        });\r\n\r\n        if (this.multiSelect) {\r\n            this.singleSelect = false;\r\n        }\r\n\r\n        if (this.singleSelect && this.showCheckbox) {\r\n            this.checkOnSelect = true;\r\n            this.selectOnCheck = true;\r\n        }\r\n\r\n        if (!this.beforeSortColumn) {\r\n            this.beforeSortColumn = () => of(true);\r\n        }\r\n\r\n        if (this.fit) {\r\n            this.renderer.addClass(this.el.nativeElement, 'f-utils-fill-flex-column');\r\n            const parentEl = this.el.nativeElement.parentElement || this.el.nativeElement.parentNode;\r\n            if (parentEl) {\r\n                // this.renderer.addClass(parentEl, 'f-utils-fill');\r\n                this.renderer.setStyle(parentEl, 'overflow', 'hidden');\r\n            }\r\n        }\r\n\r\n        if (!this.beforeClickNode) {\r\n            this.beforeClickNode = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeCheckAll) {\r\n            this.beforeCheckAll = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeUnCheckAll) {\r\n            this.beforeUnCheckAll = () => of(true);\r\n        }\r\n\r\n        if (this.autoWidth) {\r\n            this.fitColumns = false;\r\n            this.resizableColumns = false;\r\n        }\r\n\r\n        if (!this.disabledRow) {\r\n            this.disabledRow = () => false;\r\n        }\r\n\r\n        if (!this.searchAnyField && this.searchFields && this.searchFields.length) {\r\n            this.searchData.field = this.searchFields[0].label;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.id = 'Treetable-' + this._UUID;\r\n        // åå»º stylesheet\r\n        this.styleElement = this.utils.createStyleSheet(this.styleSheetId);\r\n        this.checkColumnOption();\r\n\r\n        this.checkOptons();\r\n\r\n        if (this.ngZone) {\r\n            this.ngZone.runOutsideAngular(() => {\r\n                if (this.el.nativeElement.parentElement) {\r\n                    this.ro = new ResizeObserver((entries, observer) => {\r\n                        if (entries && entries[0]) {\r\n                            const { width, height } = entries[0].contentRect;\r\n                            const target =  entries[0].target;\r\n\r\n                            if (this.fit && target['offsetParent']) {\r\n                                this.resize({ width, height: this.showBorder? height - 2 : height });\r\n                            }\r\n                        }\r\n                        // è¡¨ååæ¢åï¼å¦ææéä¸­è¡ï¼åæ´æ°æ»å¨æ¡ä½ç½®\r\n                        this.scrollToCurrentNode();\r\n                    });\r\n                    this.ro.observe(this.el.nativeElement.parentElement);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.paginationOptions = this.initPaginationOptions();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.ro) {\r\n            if (this.el.nativeElement.parentElement) {\r\n                this.ro.unobserve(this.el.nativeElement.parentElement);\r\n            }\r\n            this.ro.disconnect();\r\n            this.ro = null;\r\n        }\r\n\r\n        if (this.findKeysHandler) {\r\n            this.findKeysHandler.unsubscribe();\r\n        }\r\n\r\n        this.utils.removeStyleSheet(this.styleSheetId);\r\n        this.styleElement = null;\r\n\r\n        if (this.farrisInstances) {\r\n            this.farrisInstances.destroy(this.el.nativeElement);\r\n        }\r\n\r\n        this.ttService = null;\r\n\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.data && !changes.data.isFirstChange()) {\r\n            this.isDataChanged = changes.data.currentValue !== changes.data.previousValue;\r\n        }\r\n\r\n        if (changes.multiSelect && !changes.multiSelect.isFirstChange()) {\r\n            this.singleSelect = !changes.multiSelect.currentValue;\r\n            if (this.singleSelect && this.showCheckbox) {\r\n                this.selectOnCheck = true;\r\n                this.checkOnSelect = true;\r\n            }\r\n        }\r\n\r\n        if (changes.disabled && !changes.disabled.isFirstChange()) {\r\n            this.hovered = !changes.disabled.currentValue;\r\n        }\r\n\r\n        if (changes.enableFindText && !changes.enableFindText.isFirstChange()) {\r\n            this.setFindText(changes.enableFindText.currentValue);\r\n        }\r\n\r\n        if (changes.selectValue && !changes.selectValue.isFirstChange()) {\r\n            this.selectNode(changes.selectValue.currentValue);\r\n        }\r\n        if (changes.selectValues && !changes.selectValues.isFirstChange()) {\r\n            this.selectNodes(changes.selectValues.currentValue);\r\n        }\r\n        if (changes.checkValues && !changes.checkValues.isFirstChange()) {\r\n            this.checkedNodes(changes.checkValues.currentValue);\r\n        }\r\n\r\n        if (changes.pageIndex !== undefined && !changes.pageIndex.isFirstChange()) {\r\n            this.paginationOptions = Object.assign(this.paginationOptions, {\r\n                currentPage: this.pageIndex\r\n            });\r\n        }\r\n\r\n        if (changes.pageSize !== undefined && !changes.pageSize.isFirstChange()) {\r\n            this.paginationOptions = Object.assign(this.paginationOptions, {\r\n                itemsPerPage: this.pageSize\r\n            });\r\n        }\r\n\r\n        if (changes.pageList !== undefined && !changes.pageList.isFirstChange()) {\r\n            this.paginationOptions = Object.assign(this.paginationOptions, {\r\n                pageList: this.pageList\r\n            });\r\n        }\r\n\r\n        if (changes.total !== undefined && !changes.total.isFirstChange()) {\r\n            this.paginationOptions = Object.assign(this.paginationOptions, {\r\n                totalItems: this.total\r\n            });\r\n        }\r\n\r\n        if (changes.fitColumns && !changes.fitColumns.isFirstChange()) {\r\n            this.setTableWidth(this.allColumnsWidth());\r\n        }\r\n\r\n        if (changes.columns && !changes.columns.isFirstChange()) {\r\n            this.checkColumnOption();\r\n        }\r\n\r\n        if (changes.showBorder && !changes.showBorder.isFirstChange()) {\r\n            // this.reSetSize();\r\n        }\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        // if (this.isDataChanged) {\r\n        //     this.loadedData.emit();\r\n        //     this.isDataChanged = false;\r\n        // } else {\r\n        //     this.ngZone.runOutsideAngular(() => {\r\n        //         if (this.psRef) {\r\n        //             this.psRef.directiveRef.update();\r\n        //         }\r\n        //     });\r\n        // }\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch (item.getType()) {\r\n                case 'header':\r\n                    this.headerTemplate = item.template;\r\n                    break;\r\n                case 'body':\r\n                    this.bodyTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n\r\n        if (this.columnsRef.length) {\r\n            this.columns = this.ttc2columns(this.columnsRef);\r\n\r\n            this.columnsRef.changes.subscribe((d: any) => {\r\n                this.columns = this.ttc2columns(d);\r\n            });\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.containerElement = this.el.nativeElement.querySelector('.farris-treetable');\r\n     \r\n        this.registerShortcuts();\r\n\r\n        // autowidth æ¶ï¼è¡¨å¤´å®½åº¦ä¾æ®åå®¹å®½åº¦ä½åæ­¥å¤ç\r\n        this.setNewColumnsWidth();\r\n        this.setRightFixedColumnShadow();\r\n\r\n        if (this.el && this.farrisInstances) {\r\n            this.farrisInstances.add(this.el.nativeElement, this);\r\n        }\r\n\r\n        if (this.bodyTemplate) {\r\n            this.utils.appendCssRules([`#${this.id} .farris-treetable .farris-treetable-tbody td {padding: .25rem 0.75rem;}`], this.styleElement.sheet);\r\n        }\r\n\r\n        // å¼å®¹æ§çè®¾è®¡å¨        \r\n        if (this.fit && this.el.nativeElement.parentElement.nodeName !== 'DIV') {\r\n            if (this.el.nativeElement.parentElement.nodeName === 'APP-DG-TREE-GRID') {\r\n                const div = this.el.nativeElement.parentElement.closest('div');\r\n                if (div) {\r\n                    div.style.overflow = 'hidden';\r\n                }\r\n            }\r\n        }\r\n\r\n        this.loadDataSuccess();\r\n    }\r\n\r\n    private loadDataSuccess() {\r\n        timer(this.loadedTimer).pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            if (this.psRef && this.psRef.directiveRef) {\r\n                this.psRef.directiveRef.update();\r\n            }\r\n            this.loadedData.emit();\r\n        })\r\n    }\r\n\r\n\r\n    private setNewColumnsWidth() {\r\n        if (!this.autoWidth) {\r\n            return;\r\n        }\r\n        const newColWidth: any = {};\r\n        let headerCells = [];\r\n        let firstRowCells = [];\r\n        // let colgroups = [];\r\n        if (this.showHeader && this.headerTable) {\r\n            headerCells = Array.from<HTMLElement>(this.headerTable.nativeElement.querySelectorAll('th'));\r\n        }\r\n        if (this.serializedValue && this.serializedValue.length && this.bodyTable) {\r\n            firstRowCells = Array.from<HTMLElement>(this.bodyTable.nativeElement.querySelector('tr').querySelectorAll('td'));\r\n            // colgroups = this.bodyTable.nativeElement.querySelector('colgroup').querySelectorAll('col');\r\n        }\r\n\r\n        firstRowCells.forEach((td: any, index) => {\r\n            const fieldName = td.getAttribute('field');\r\n            let colWidth = td.getBoundingClientRect().width.toFixed(2);\r\n            newColWidth[fieldName] = colWidth;\r\n\r\n            const col = this.columns.find(c => c.field === fieldName);\r\n            if (col && col.width !== undefined) {\r\n                colWidth = colWidth > col.width ? colWidth : col.width;\r\n            }\r\n\r\n            td.style.minWidth = colWidth + 'px';\r\n            headerCells[index].style.width = colWidth + 'px';\r\n        });\r\n        const colWidthTotal = this.allColumnsWidth();\r\n        this.setTableWidth(colWidthTotal);\r\n    }\r\n\r\n    columnIsVisible(col) {\r\n        return this.ttService.columnIsVisible(col, this);\r\n    }\r\n\r\n\r\n    private columnCssName(n: any) {\r\n        return `#${this.id} .treetable-cell[field=\"${n.field}\"], #${this.id} .treetable-header-cell[field=\"${n.field}\"]:not(.group-header-cell)`;\r\n    }\r\n\r\n\r\n    private checkGroupColumns() {\r\n        var i = this.groupColumns.length - 1;\r\n        while(i >= 0) {\r\n            var ids = this.groupColumns[i].map(n => n.parentId);\r\n            ids = Array.from(new Set(ids));\r\n            ids.map(id => {\r\n                const childCols = this.groupColumns[i].filter(n => n.parentId == id).map(n => {\r\n                    const dataField = this.columns.find(c => c.id === n.id);\r\n                    return dataField || n;\r\n                });\r\n                return { \r\n                    id,\r\n                    width: childCols.reduce((r,c) => { return r+=c.width }, 0),\r\n                    left: childCols[0].left,\r\n                    right: childCols[childCols.length - 1].right || 0\r\n                };\r\n            }).forEach(p => {\r\n                if (i - 1 >= 0) {\r\n                    let pCol = this.groupColumns[i-1].find(pc => pc.id == p.id);\r\n                    const dataField = this.columns.find(c => c.id === p.id);\r\n                    pCol = dataField || pCol;\r\n\r\n                    pCol.width = p.width;\r\n                    if (pCol.fixed === 'left') {\r\n                        pCol.left = p.left;\r\n                    }\r\n                    if (pCol.fixed === 'right') {\r\n                        pCol.right = p.right;\r\n                    }\r\n                }\r\n            });\r\n            i--;\r\n        }\r\n    }\r\n\r\n    // æåºå®åçé¡ºåºæåº\r\n    private sortColumnsByFixed(updateColumns = true) {\r\n        const fixedLeft = this.columns.filter(n => n.fixed === 'left');\r\n        const fixedCenter = this.columns.filter(n => !n.fixed || n.fixed === 'center');\r\n        const fixedRight = this.columns.filter(n => n.fixed === 'right');\r\n\r\n        if (fixedLeft && fixedLeft.length) {\r\n            fixedLeft.forEach((n, index) => {\r\n                if (index) {\r\n                    n.left = fixedLeft.reduce((r, c, i)=> {\r\n                        if (i < index) {\r\n                            return r += c.width;\r\n                        } \r\n                        return r;\r\n                    }, 0)\r\n                } else {\r\n                    n.left = 0;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (fixedRight && fixedRight.length) {\r\n\r\n            let rightWidthTotal = fixedRight.reduce((r, c) => {\r\n                return r + c.width;\r\n            }, 0);\r\n\r\n            fixedRight.forEach((n, index) => {\r\n                rightWidthTotal -= n.width;\r\n                n.right = rightWidthTotal;\r\n            });\r\n        }\r\n\r\n\r\n\r\n        if (updateColumns) {\r\n            this.columns = fixedLeft.concat(fixedCenter).concat(fixedRight);\r\n        }\r\n    }\r\n\r\n    private checkColumnOption() {\r\n        const cssRules = [];\r\n\r\n        \r\n        // å¯ç¨åé¡µå è½½å­èç¹\r\n        if (this.paginationForChildren) {\r\n            const pagerBarCol: any = {\r\n                field: NODES_PAGER_COLUMN_FIELD,\r\n                width: 160,\r\n                title: '',\r\n                align: 'center',\r\n                template: this.nodesPagerBar,\r\n                rowspan: 1,\r\n            }\r\n\r\n            if (this.useGroupHeader) {\r\n                if (this.groupColumns[0][this.groupColumns[0].length - 1].fixed === 'right') {\r\n                    pagerBarCol.fixed = 'right';\r\n                }\r\n                pagerBarCol.rowspan = this.groupColumns.length;\r\n                this.groupColumns[0].push(pagerBarCol)\r\n            }\r\n\r\n            this.columns.push(pagerBarCol);\r\n        }\r\n\r\n\r\n        if (!this.fitColumns) {\r\n            this.sortColumnsByFixed();\r\n        }\r\n\r\n        this.columns.forEach((n, i) => {\r\n            if (n.visible === undefined) {\r\n                n.visible = true;\r\n            }\r\n\r\n            if (n['halign']) {\r\n                n.hAlign = n['halign'];\r\n            }\r\n\r\n            if (n.width === undefined) {\r\n                n.width = 100;\r\n            }\r\n\r\n            if (!n.id) {\r\n                n.id = 'treetable-header-' + (n.field || i);\r\n            }\r\n        });\r\n\r\n        const colWidthTotal = this.allColumnsWidth();\r\n        let fixedCols = 0;\r\n\r\n        const fixedRightColumns = this.columns.filter(n => n.fixed === 'right');\r\n        if (fixedRightColumns && fixedRightColumns.length) {\r\n            fixedRightColumns[0]['rightShadowCol'] = true;\r\n            fixedRightColumns[fixedRightColumns.length - 1]['lastColumn'] = true;\r\n        } else {\r\n            if (this.columns && this.columns.length) {\r\n                this.columns[this.columns.length - 1]['lastColumn'] = true;\r\n            }\r\n        }\r\n\r\n        const fixedLeftColumns = this.columns.filter(n => n.fixed === 'left');\r\n        if (fixedLeftColumns && fixedLeftColumns.length) {\r\n            fixedLeftColumns[fixedLeftColumns.length - 1]['leftShadowCol'] = true;\r\n        }\r\n\r\n        fixedCols = this.setCellWidthCss(colWidthTotal, fixedCols, cssRules);\r\n        this.setTableWidth(colWidthTotal);\r\n\r\n        this.fixedColumns = !!fixedCols;\r\n    }\r\n\r\n    private setCellWidthCss(colWidthTotal: any, fixedCols: number, cssRules: any[]) {\r\n\r\n\r\n        this.columns.forEach((n, index) => {\r\n            const isVisible = this.columnIsVisible(n);\r\n            const ruleName = this.columnCssName(n);\r\n\r\n            const cssRule = this.utils.getCssRule(ruleName, this.styleElement.sheet);\r\n            if (!cssRule) {\r\n                let stylecss = ruleName + ' { ';\r\n                stylecss += isVisible ? '' : 'display: none;';\r\n\r\n                if (this.fitColumns) {\r\n                    stylecss += `width: ${(n.width / colWidthTotal * 100).toFixed(2)}%;`;\r\n                } else {\r\n                    stylecss += `width: ${n.width}px;`;\r\n\r\n                    if (n.fixed) {\r\n                        if (n.fixed === 'left') {\r\n                            stylecss += `left: ${n.left}px`;\r\n                            fixedCols++;\r\n                        }\r\n\r\n                        if (n.fixed === 'right') {\r\n                            stylecss += `right: ${n.right}px`;\r\n                            fixedCols++;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                stylecss += '}';\r\n                cssRules.push(stylecss);\r\n            } else {\r\n                cssRule.style.display = isVisible ? '' : 'none';\r\n                if (this.fitColumns) {\r\n                    cssRule.style.width = `${(n.width / colWidthTotal * 100).toFixed(2)}%`;\r\n                } else {\r\n                    cssRule.style.width = `${n.width}px`;\r\n                    if (n.fixed) {\r\n                        if (n.fixed === 'left') {\r\n                            cssRule.style.left = `${n.left}px`;\r\n                        }\r\n\r\n                        if (n.fixed === 'right') {\r\n                            cssRule.style.right = `${n.right}px`;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        if (this.useGroupHeader) {\r\n            this.autoWidth = false;  // å¤è¡¨å¤´å¯ç¨åï¼èªå¨åå®½å¤±æ TFS 496088\r\n            this.checkGroupColumns();\r\n            var i = this.groupColumns.length - 2;\r\n            while (i >= 0) {\r\n                const groupHeaderColCsses = this.groupColumns[i].filter(col => !col.field).map(col => {\r\n                    let groupColCssName = `#${col.id}{ width: ${col.width}px`;\r\n\r\n                    if (col.fixed) {\r\n                        if (col.fixed === 'left') {\r\n                            groupColCssName += ';left:' + col.left + 'px';\r\n                        }\r\n\r\n                        if (col.fixed === 'right') {\r\n                            groupColCssName += ';right:' + col.right + 'px';\r\n                        }\r\n                    }\r\n\r\n                    return groupColCssName += '}';\r\n                });\r\n               \r\n                this.utils.appendCssRules2(groupHeaderColCsses, this.styleElement.sheet);\r\n                i--;\r\n            }\r\n        }\r\n\r\n\r\n        if (cssRules.length) {\r\n            this.utils.appendCssRules(cssRules, this.styleElement.sheet);\r\n        }\r\n        return fixedCols;\r\n    }\r\n\r\n    private setTableWidth(colWidthTotal: number) {\r\n        if (this.headerTable && this.bodyTable) {\r\n            if (!this.fitColumns && !this.autoFitColumns) {\r\n                this.headerTable.nativeElement.style.width = `${colWidthTotal}px`;\r\n                this.bodyTable.nativeElement.style.width = `${colWidthTotal}px`;\r\n            } else {\r\n                this.headerTable.nativeElement.style.width = '100%';\r\n                this.bodyTable.nativeElement.style.width = '100%';\r\n            }\r\n        }\r\n    }\r\n\r\n    private allColumnsWidth() {\r\n        return this.columns.reduce((r, c) => {\r\n            if (this.columnIsVisible(c)) {\r\n                return r + c.width;\r\n            } else {\r\n                return r;\r\n            }\r\n\r\n        }, 0);\r\n    }\r\n\r\n    onPageChange($event) {\r\n        this.pageChanged.emit($event);\r\n    }\r\n\r\n    onPageSizeChange($event) {\r\n        this.pageSizeChanged.emit($event);\r\n    }\r\n\r\n    updatePageInfo(pageInfo: { pageIndex?: number, pageSize?: number, total?: number, pageList?: number[] }) {\r\n        if (pageInfo && Object.keys(pageInfo).length) {\r\n\r\n            const obj: any = {};\r\n            if (pageInfo.total !== undefined) {\r\n                obj.totalItems = pageInfo.total;\r\n            }\r\n\r\n            if (pageInfo.pageIndex !== undefined) {\r\n                obj.currentPage = pageInfo.pageIndex;\r\n            }\r\n\r\n            if (pageInfo.pageSize !== undefined) {\r\n                obj.itemsPerPage = pageInfo.pageSize;\r\n            }\r\n\r\n            if (pageInfo.pageList !== undefined) {\r\n                obj.pageList = pageInfo.pageList;\r\n            }\r\n\r\n            this.paginationOptions = Object.assign(this.paginationOptions, obj);\r\n        }\r\n    }\r\n\r\n\r\n    private initPaginationOptions() {\r\n        return {\r\n            id: 'Farris-TreeTable-Pagination_' + this._UUID,\r\n            itemsPerPage: this.pageSize,\r\n            currentPage: this.pageIndex,\r\n            pageList: this.pageList,\r\n            totalItems: this.total,\r\n            remote: this.pagerOnServer\r\n        };\r\n    }\r\n\r\n    getNodeText(col: TreeTableColumn, rowdata, fast = false) {\r\n        if (col.isMultilingualField) {\r\n            const val = this.utils.getValue(col.field, rowdata);\r\n            if (this.localeService) {\r\n                const localeId = this.localeService.localeId || 'zh-CHS';\r\n                if (val && typeof val === 'object' && Object.keys(val).length > 0) {\r\n                    return val[localeId];\r\n                } else {\r\n                    return val;\r\n                }\r\n            }\r\n        } else {\r\n            return this.utils.getValue(col.field, rowdata, !fast);\r\n        }\r\n    }\r\n\r\n    private initNodeStatus() {\r\n        if (!this.singleSelect) {\r\n            if (this.checkValues && this.checkValues.length) {\r\n                this.checkedNodes(this.checkValues, false, false);\r\n            }\r\n            if (this.selectValues && this.selectValues.length && !this.onlySelectSelf) {\r\n                this.selectNodes(this.selectValues, false, false);\r\n            }\r\n        } else {\r\n            if (this.selectValue) {\r\n                this.selectNode(this.selectValue, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** æ³¨åå¿«æ·é® */\r\n    private registerShortcuts() {\r\n        if (this.showFilterBar && this._hotKeys) {\r\n            this._hotKeys.addShortcut({ keys: 'enter', element: this.inputGroup.textbox.nativeElement }).subscribe(() => {\r\n                this.onSearch();\r\n            });\r\n        }\r\n\r\n        this.setFindText(this.enableFindText);\r\n    }\r\n\r\n    private setFindText(enable = true) {\r\n        this.enableFindText = enable;\r\n        if (this.enableFindText && this._hotKeys) {\r\n            // æ¥è¯¢å·¥å·æ¡\r\n            this.findKeysHandler = this._hotKeys.addShortcut({ keys: 'control.shift.f' }).subscribe((e) => {\r\n                if (this.enableFindText) {\r\n                    this.showFindInput = true;\r\n                    this.detectChanges();\r\n                }\r\n            });\r\n        } else {\r\n            if (this.showFindInput) {\r\n                this.showFindInput = false;\r\n                this.cdRef.detectChanges();\r\n            }\r\n            if (this.findKeysHandler) {\r\n                this.findKeysHandler.unsubscribe();\r\n                this.findKeysHandler = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    private getCustomCls(rowNode: RowNode, field: string = '', clsType: 'row' | 'cell' = 'row') {\r\n        const cls = {};\r\n        let fn = this.rowStyler;\r\n        if (clsType === 'cell') {\r\n            fn = this.cellStyler;\r\n        }\r\n\r\n        if (fn) {\r\n            const rowCls = fn(rowNode.node, field);\r\n            if (rowCls) {\r\n                let arrcls = [];\r\n                if (typeof rowCls === 'string') {\r\n                    arrcls = [rowCls];\r\n                } else {\r\n                    if (Array.isArray(rowCls)) {\r\n                        arrcls = rowCls;\r\n                    }\r\n                }\r\n\r\n                if (arrcls.length) {\r\n                    const rowClsObj = {};\r\n                    arrcls.forEach(c => {\r\n                        rowClsObj['' + c] = true;\r\n                    });\r\n                    const _cls = { ...rowClsObj, ...cls };\r\n                    return _cls;\r\n                } else {\r\n                    return rowCls;\r\n                }\r\n            } else {\r\n                return cls;\r\n            }\r\n        } else {\r\n            return cls;\r\n        }\r\n    }\r\n\r\n    getRowCls(rowNode: RowNode, field?: string) {\r\n        return this.getCustomCls(rowNode, 'row');\r\n    }\r\n\r\n    getCellCls(rowNode: RowNode, field: string) {\r\n        return this.getCustomCls(rowNode, field, 'cell');\r\n    }\r\n\r\n    getRealColWidth(currentCol: TreeTableColumn) {\r\n        if (this.columns && this.columns.length && this.fitColumns) {\r\n            const colWidthTotal = this.columns.reduce((r, c) => {\r\n                return r + (this.columnIsVisible(c) && (r.field !== NODES_PAGER_COLUMN_FIELD  || r.fixedWidth)? c.width : 0);\r\n            }, 0);\r\n\r\n            if (this.columnIsVisible(currentCol)) {\r\n                if ( currentCol.field !== NODES_PAGER_COLUMN_FIELD &&  !currentCol.fixedWidth) {\r\n                    return (currentCol.width / colWidthTotal * 100).toFixed(2) + '%';\r\n                } else {\r\n                    return (currentCol.width || 120) + 'px';\r\n                }\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n        return currentCol.width + 'px';\r\n    }\r\n\r\n    @HostListener('window:resize')\r\n    onResized() {\r\n        this.resizeSer.windowResized();\r\n    }\r\n\r\n    private setRightFixedColumnShadow() {\r\n        if (this.psRef && this.psRef.directiveRef) {\r\n            const ps = (this.psRef.directiveRef as any).instance;\r\n            if (!ps) {\r\n                return;\r\n            }\r\n            const { containerWidth, scrollbarXLeft, contentWidth } = ps;\r\n            if (containerWidth + scrollbarXLeft < contentWidth) {\r\n\r\n                const fixedRightColumns = this.columns.filter(n => n.fixed === 'right');\r\n                const ruleName = `#${this.id}.f-treetable--fixed-columns`;\r\n                if (fixedRightColumns && fixedRightColumns.length) {\r\n                    const fixedRightCssRuleKey = `${ruleName} [r-tt-shadow-col]::before`;\r\n                    const rightCSSRule = `${fixedRightCssRuleKey}{\r\n                        box-shadow:#d9d9d9 -12px 0px 8px -12px inset;\r\n                    }`;\r\n\r\n                    this.utils.appendCssRules([rightCSSRule], this.styleElement.sheet);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private setFixedColumnShadow(x, e) {\r\n        const fixedLeftColumns = this.columns.filter(n => n.fixed === 'left');\r\n        const fixedRightColumns = this.columns.filter(n => n.fixed === 'right');\r\n        const ruleName = `#${this.id}.f-treetable--fixed-columns`;\r\n        let fixedLeftCssRuleKey = '';\r\n        let fixedRightCssRuleKey = '';\r\n        let leftCSSRule = '';\r\n        let rightCSSRule = '';\r\n        if (fixedLeftColumns && fixedLeftColumns.length) {\r\n            const lastFixedLeftColumn = fixedLeftColumns[fixedLeftColumns.length - 1];\r\n            fixedLeftCssRuleKey = `${ruleName} [field=\"${lastFixedLeftColumn.field}\"]::after`;\r\n            leftCSSRule = `${fixedLeftCssRuleKey}{\r\n                box-shadow:#d9d9d9 12px 0px 8px -12px inset;\r\n            }`;\r\n        }\r\n\r\n        if (fixedRightColumns && fixedRightColumns.length) {\r\n            fixedRightCssRuleKey = `${ruleName} [r-tt-shadow-col]::before`;\r\n            rightCSSRule = `${fixedRightCssRuleKey}{\r\n                box-shadow:#d9d9d9 -12px 0px 8px -12px inset;\r\n            }`;\r\n        }\r\n\r\n\r\n        if (x === 0) {\r\n            // ç§»é¤å·¦ä¾§åºå®åé´å½±æ ·å¼\r\n            if (fixedLeftCssRuleKey) {\r\n                this.utils.removeCssRule(fixedLeftCssRuleKey, this.styleElement.sheet);\r\n            }\r\n        } else if ((x + e.srcElement.offsetWidth).toFixed() == e.srcElement.scrollWidth) {\r\n            // ç§»é¤å³ååºå®åé´å½±æ ·å¼\r\n            if (fixedRightCssRuleKey) {\r\n                this.utils.removeCssRule(fixedRightCssRuleKey, this.styleElement.sheet);\r\n            }\r\n        } else {\r\n            // æ·»å å·¦å³åºå®åæ ·å¼\r\n            const arr = [];\r\n            if (leftCSSRule) {\r\n                arr.push(leftCSSRule);\r\n            }\r\n\r\n            if (rightCSSRule) {\r\n                arr.push(rightCSSRule);\r\n            }\r\n\r\n            this.utils.appendCssRules(arr, this.styleElement.sheet);\r\n        }\r\n    }\r\n\r\n    onScrollX(e: any) {\r\n        if (this.showHeader && this.headerBox) {\r\n            const x = e.srcElement.scrollLeft;\r\n            this.state.scrollX = x;\r\n            // this.renderer.setStyle(this.headerBox.nativeElement.querySelector('table'), 'transform', `translate3d(-${x}px, 0px, 0px)`);\r\n            this.headerBox.nativeElement.scrollLeft = x;\r\n\r\n            this.setFixedColumnShadow(x, e);\r\n        }\r\n    }\r\n\r\n    onScrollY(e: any) {\r\n        if (this.virtualized) {\r\n            const scrollTop = e.target.scrollTop;\r\n            this.renderData(scrollTop);\r\n        }\r\n    }\r\n\r\n    private renderData(scrolltop: number) {\r\n        const { data, topHideHeight, bottomHideHeight } = this.scrollLoader.getRowNodes(scrolltop);\r\n        this.state.scrollY = scrolltop;\r\n        this.serializedValue = data;\r\n        this.topHideHeight = topHideHeight;\r\n        this.bottomHideHeight = bottomHideHeight;\r\n\r\n        this.detectChanges();\r\n        this.setNewColumnsWidth();\r\n    }\r\n\r\n    onSearchValueChange($event) {\r\n        if (!$event) {\r\n            this.onClearSearchValue();\r\n        }\r\n\r\n        this.searchValueChange.emit(this.searchData);\r\n    }\r\n\r\n    onClearSearchValue() {\r\n        this.searchData.value = '';\r\n        this.state.searched = false;\r\n        this.clearSearchValue.emit();\r\n    }\r\n\r\n    onCellClick(event: Event, col: any, node: any) {\r\n        this.cellClick.emit({ event, col, node });\r\n    }\r\n\r\n    trackByFn(index, rowNode) {\r\n        return rowNode.id;\r\n    }\r\n    /**\r\n     * æ ¼å¼åæ°æ®\r\n     */\r\n    formatData(col: any, data: any, formatter: any) {\r\n        // const val = this.utils.getValue(field, data, true );\r\n        const val = this.getNodeText(col, data);\r\n        if (formatter && formatter.type === 'timeago') {\r\n            if (!formatter.options) {\r\n                formatter.options = { locale: this.localeService.localeId}\r\n            } else {\r\n                if (!formatter.options.locale) {\r\n                    formatter.options.locale = this.localeService.localeId;\r\n                }\r\n            }\r\n        }\r\n        return this.colFormatSer.format(val, data, formatter, {locale: this.localeService.localeId });\r\n    }\r\n\r\n    columnsChanged() {\r\n        this.checkColumnOption();\r\n        this.detectChanges();\r\n    }\r\n\r\n    private ttc2columns(list: QueryList<TreeTableColumnDirective>) {\r\n        return list.map((n: TreeTableColumnDirective) => {\r\n            return {\r\n                field: n.field,\r\n                title: n.title,\r\n                align: n.align,\r\n                hAlign: n.hAlign,\r\n                width: n.width,\r\n                formatter: n.formatter\r\n            };\r\n        });\r\n    }\r\n\r\n    private reSetSize() {\r\n        if (this.fit) {\r\n            const parentEl = this.el.nativeElement.parentNode;\r\n            this.setWidth(parentEl.offsetWidth)\r\n            this.height = parentEl.offsetHeight;\r\n\r\n            // å¦æå¨ä½¿ç¨æ¶ï¼ä¸ºç»ä»¶è®¾ç½®çé«åº¦ï¼åä»¥æ­¤å¼ä¸ºåï¼ä»æ¯æ åºå®å¼ ï¼ä¸æ¯æ ç¾åæ¯\r\n            if (this.el.nativeElement.style.height) {\r\n                let h = this.el.nativeElement.style.height;\r\n                if (h.indexOf('px') > -1) {\r\n                    h = parseInt(h.replace('px', ''), 10);\r\n                    if (h > 0) {\r\n                        this.height = h;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderVirtualRowNodes(nodePosY = null) {\r\n        if (this.virtualized) {\r\n            const scrollY = nodePosY !== null && nodePosY !== undefined ? nodePosY: this.state.scrollY;\r\n            const _rownodes = this.scrollLoader.getRowNodes(scrollY);\r\n            this.serializedValue = _rownodes.data;\r\n            this.topHideHeight = _rownodes.topHideHeight;\r\n            this.bottomHideHeight = _rownodes.bottomHideHeight;\r\n            this.detectChanges();\r\n\r\n            if (nodePosY !== null && nodePosY !== undefined) {\r\n                this.ngZone.runOutsideAngular(() => {\r\n                    setTimeout(() => {\r\n                        this.psRef.directiveRef.elementRef.nativeElement.scrollTop = nodePosY;\r\n                    }, 20);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    updateSerializedValue(nodePosY: any = null) {\r\n        this.serializedValue = [];\r\n        this.searchHandle.allNodes = [];\r\n        this.state.rowNodes = [];\r\n\r\n        this.serializeNodes(null, this.data, 0, true);\r\n        if (this.virtualized && this.fixedHeader) {\r\n            this.renderVirtualRowNodes(nodePosY);\r\n        } else {\r\n            this.serializedValue = this.state.rowNodes;\r\n            this.detectChanges();\r\n            // if (emitChanges) {\r\n            // }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * å°æ èç¹æ°æ®åºååä¸ºRowNode\r\n     * @param parent ç¶çº§èç¹\r\n     * @param nodes æ èç¹éå\r\n     * @param level çº§å«\r\n     * @param visible æ¯å¦å¯è§\r\n     */\r\n    serializeNodes(parent: TreeNode, nodes: TreeNode[], level: number, visible: boolean, parentIds?: any[]) {\r\n        if (nodes && nodes.length) {\r\n\r\n            if (!nodes[0].data) {\r\n                return;\r\n            }\r\n\r\n            nodes.forEach((node, index) => {\r\n                node.parent = parent;\r\n\r\n                if (!node.hasOwnProperty('selectable')) {\r\n                    node.selectable = true;\r\n                }\r\n\r\n                if (!node.hasOwnProperty('showIcon')) {\r\n                    node.showIcon = true;\r\n                }\r\n\r\n                if (this.onlySelectLeaf === 'yes' && node.selectable) {\r\n                    node.selectable = !!node.leaf;\r\n                }\r\n                const keyid = node.data[this.idField];\r\n                node.id = keyid;\r\n                const isSelected = this.findIndexInSelection(node) > -1;\r\n\r\n                const isChecked = this.findIndexInCheckeds(node) > -1;\r\n                const isLast = index === nodes.length - 1;\r\n                const isFirst = index === 0;\r\n                let parents = [];\r\n                let parentRn = null;\r\n                if (parent) {\r\n                    const parentID = parent.data[this.idField];\r\n                    const _parents = parentIds || [];\r\n                    parents = parents.concat(_parents.map(n => n));\r\n                    parents.push(parentID);\r\n                    parentRn = this.state.rowNodes.find(n => n.id === parent.id);\r\n                }\r\n\r\n                const rowNode: RowNode = {\r\n                    id: keyid,\r\n                    node,\r\n                    parent,\r\n                    level,\r\n                    visible: visible && (parent ? parent.expanded : true),\r\n                    isSelected,\r\n                    isChecked,\r\n                    parents,\r\n                    parentRowNode: parentRn,\r\n                    index: this.state.rowNodes.length,\r\n                    last: isLast,\r\n                    first: isFirst\r\n                };\r\n                // this.serializedValue.push(rowNode);\r\n                this.state.rowNodes.push(rowNode);\r\n                this.serializeNodes(node, node.children, level + 1, rowNode.visible, parents);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * å¤æ­æå®çèç¹æ¯å¦è¢«éä¸­\r\n     * @param node æ èç¹\r\n     */\r\n    isSelected(node: TreeNode): boolean {\r\n        if (this.singleSelect) {\r\n            if (node && this.selectedRow) {\r\n                return node.data[this.idField] === this.selectedRow.data[this.idField];\r\n            }\r\n            return false;\r\n        } else {\r\n            if (this.selections && this.selections.length) {\r\n                return this.selections.findIndex(n => n.data[this.idField] === node.data[this.idField]) > -1;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    /** å¤æ­å½åèç¹çé©éç¶æ */\r\n    isChecked(node: TreeNode): boolean {\r\n        if (node && this.checkeds) {\r\n            if (this.checkeds instanceof Array) {\r\n                return this.checkeds.findIndex((v) => {\r\n                    return v.data[this.idField] === node.data[this.idField];\r\n                }) > -1;\r\n            }\r\n\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    private unSelectedCurrentRowEmit() {\r\n        const currSelected = this.selectedRow;\r\n        if (currSelected) {\r\n            this.nodeUnSelect.emit({ node: currSelected, type: 'row', instance: this });\r\n        }\r\n    }\r\n\r\n    private _singleSelectNode(e: SelectEventArgs) {\r\n\r\n        this.clearSelections();\r\n        this.selectedRow = e.rowNode.node;\r\n        this.selectRowIndex = e.rowIndex;\r\n        this.selections = [e.rowNode.node];\r\n        e.rowNode.isSelected = true;\r\n\r\n        if (this.showCheckbox) {\r\n            e.rowNode.isChecked = true;\r\n            this.clearCheckeds();\r\n            this.setCheckeds(e.rowNode);\r\n        }\r\n\r\n        const sp: NodeSelectedParam = {\r\n            originalEvent: e.originalEvent,\r\n            node: e.rowNode.node, type: 'row',\r\n            index: e.rowIndex,\r\n            parents: e.rowNode.parents,\r\n            instance: this\r\n        };\r\n        this.nodeSelected.emit(sp);\r\n    }\r\n\r\n    private _singleUnSelectNode(e: SelectEventArgs) {\r\n        this.selectedRow = null;\r\n        this.selectRowIndex = -1;\r\n        e.rowNode.isSelected = false;\r\n        e.rowNode.isChecked = false;\r\n        this.selections = [];\r\n\r\n        this.nodeUnSelect.emit({\r\n            originalEvent: e.originalEvent,\r\n            node: e.rowNode.node, type: 'row', parents: e.rowNode.parents,\r\n            instance: this\r\n        });\r\n    }\r\n\r\n    private __singleSelectNode(event: SelectEventArgs, selected = false) {\r\n        if (!selected) {\r\n            this.unSelectedCurrentRowEmit();\r\n            this._singleSelectNode(event);\r\n        } else {\r\n            if (!this.keepSelect) {\r\n                this._singleUnSelectNode(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    private __multiSelectNode(event: SelectEventArgs, selected) {\r\n        const rowNode = event.rowNode;\r\n        if (selected) {\r\n            this.unSelectedCurrentRowEmit();\r\n            this.singleSelectWhenMultiSelect(rowNode, true);\r\n            this.nodeSelected.emit({\r\n                originalEvent: event.originalEvent, node: rowNode.node,\r\n                type: 'row', index: event.rowIndex, parents: rowNode.parents,\r\n                instance: this\r\n            });\r\n        } else {\r\n            if (!this.keepSelect) {\r\n                this.singleSelectWhenMultiSelect(rowNode, false);\r\n                this.nodeUnSelect.emit({\r\n                    originalEvent: event.originalEvent, node: rowNode.node,\r\n                    type: 'row', index: event.rowIndex, parents: rowNode.parents,\r\n                    instance: this\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * è¡åå»äºä»¶\r\n     */\r\n    handleRowClick(event: SelectEventArgs) {\r\n        const rowNode = event.rowNode;\r\n        rowNode.node['elementRef'] = event.originalEvent.target;\r\n        const selected = this.isSelected(rowNode.node);\r\n\r\n        if (this.singleSelect) {\r\n            this.__singleSelectNode(event, selected);\r\n        } else {\r\n            rowNode.indeterminate = false;\r\n            if (this.onlySelectSelf) {\r\n                this.__multiSelectNode(event, !selected);\r\n            } else {\r\n                rowNode.isSelected = !selected;\r\n                this.state.rowNodes.find(n => n.id === rowNode.id).isSelected = !selected;\r\n                this.setSelections(rowNode);\r\n\r\n                const rowSelectChangeParams: NodeSelectedParam = {\r\n                    originalEvent: event.originalEvent, node: rowNode.node,\r\n                    type: 'row', index: event.rowIndex, parents: rowNode.parents,\r\n                    instance: this\r\n                };\r\n\r\n                if (rowNode.isSelected) {\r\n                    this.nodeSelected.emit(rowSelectChangeParams);\r\n                } else {\r\n                    this.nodeUnSelect.emit(rowSelectChangeParams);\r\n                }\r\n\r\n\r\n                if (this.checkOnSelect) {\r\n                    rowNode.isChecked = !selected;\r\n                    this.state.rowNodes.find(n => n.id === rowNode.id).isChecked = !selected;\r\n                    this.setCheckeds(rowNode);\r\n                    const nodes = this.cascadeNodes(rowNode, rowNode.isChecked);\r\n                    this.ttService.onChangeCheckboxStatus(rowNode);\r\n\r\n                    if (rowNode.isChecked) {\r\n                        this.nodeChecked.emit({ originalEvent: event, node: rowNode.node, nodes, instance: this });\r\n                    } else {\r\n                        this.nodeUnChecked.emit({ originalEvent: event, node: rowNode.node, nodes, instance: this });\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (this.checkOnSelect) {\r\n                const ids = this.checkeds.map(tn => tn.id);\r\n                this.checkValues = ids;\r\n                this.checkValuesChange.emit(ids);\r\n            }\r\n        }\r\n\r\n        this.detectChanges();\r\n    }\r\n\r\n    /**\r\n     * å¸¦æcheckbox çåé\r\n     * @param rowNode å½åèç¹\r\n     */\r\n    private singleSelectWhenMultiSelect(rowNode: RowNode, flag: boolean) {\r\n        if (this.checkOnSelect) {\r\n            rowNode.isChecked = flag;\r\n            this.cascadeNodes(rowNode, rowNode.isChecked);\r\n            this.setCheckeds(rowNode);\r\n\r\n            this.ttService.onChangeCheckboxStatus(rowNode);\r\n\r\n            if (rowNode.isChecked) {\r\n                this.nodeChecked.emit({ originalEvent: event, node: rowNode.node, instance: this });\r\n            } else {\r\n                this.nodeUnChecked.emit({ originalEvent: event, node: rowNode.node, instance: this });\r\n            }\r\n        }\r\n\r\n        this.clearSelections();\r\n\r\n        if (this.onlySelectSelf) {\r\n            this.selectedRow = rowNode.node;\r\n        }\r\n        rowNode.isSelected = flag;\r\n        this.setSelections(rowNode);\r\n    }\r\n\r\n    private selectWhenChecked(rowNode: RowNode, flag: boolean, event: any) {\r\n        if (rowNode.node.selectable) {\r\n            rowNode.isChecked = flag;\r\n        }\r\n        this.setCheckeds(rowNode, false);\r\n        if (this.selectOnCheck) {\r\n            if (this.onlySelectSelf) {\r\n                if (flag || (this.selectedRow && this.selectedRow.id === rowNode.id)) {\r\n                    this.clearSelections();\r\n                }\r\n            }\r\n\r\n            if (this.singleSelect && this.showCheckbox) {\r\n                this.clearCheckeds();\r\n            }\r\n            if (rowNode.node.selectable) {\r\n                rowNode.isSelected = flag;\r\n            }\r\n            this.setSelections(rowNode);\r\n\r\n            this.state.rowNodes.find(n => n.id === rowNode.id).isSelected = flag;\r\n\r\n            if (rowNode.isSelected) {\r\n                this.nodeSelected.emit({ originalEvent: event, node: rowNode.node, instance: this, type: 'checkbox' });\r\n            } else {\r\n                this.nodeUnSelect.emit({ originalEvent: event, node: rowNode.node, instance: this, type: 'checkbox' });\r\n            }\r\n        }\r\n    }\r\n\r\n    private isInArray(rowNode: RowNode, items: TreeNode[]) {\r\n        if (items && items.length === 0) {\r\n            return false;\r\n        }\r\n        return items.findIndex(i => i.data[this.idField] === rowNode.id) > -1;\r\n    }\r\n\r\n    private setSelections(rowNode: RowNode) {\r\n        if (rowNode.isSelected) {\r\n            if (!this.selections) {\r\n                this.selections = [];\r\n            }\r\n            if (!this.isInArray(rowNode, this.selections)) {\r\n                // this.selections = [...this.selections, rowNode.node];\r\n                this.selections.push(rowNode.node);\r\n            }\r\n        } else {\r\n            if (this.selections) {\r\n                const i = this.selections.findIndex((tn: TreeNode) => tn.data[this.idField] === rowNode.node.data[this.idField]);\r\n                if (i !== -1) {\r\n                    this.selections.splice(i, 1);\r\n                }\r\n                // this.selections = this.selections.filter((tn: TreeNode) => tn.data[this.idField] !== rowNode.node.data[this.idField]);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setCheckeds(rowNode: RowNode, updated = true) {\r\n        if (rowNode.isChecked) {\r\n            if (!this.checkeds) {\r\n                this.checkeds = [];\r\n            }\r\n            if (!this.isInArray(rowNode, this.checkeds)) {\r\n                this.checkeds.push(rowNode.node);\r\n            }\r\n        } else {\r\n            if (this.checkeds) {\r\n                const i = this.checkeds.findIndex((tn: TreeNode) => tn.data[this.idField] === rowNode.node.data[this.idField]);\r\n                if (i !== -1) {\r\n                    this.checkeds.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (updated) {\r\n            this.checkeds = [ ...this.checkeds];\r\n        }\r\n    }\r\n\r\n    private getDiffrentData(data: TreeNode[]) {\r\n        if (data.length) {\r\n            const _nodes = [];\r\n            data.forEach(n => {\r\n                if (_nodes.findIndex(t => t.data[this.idField] === n.data[this.idField]) === -1) {\r\n                    _nodes.push(n);\r\n                }\r\n            });\r\n            return _nodes;\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    private cascadeCheckedNode(rowNode: RowNode, checked: boolean, sync = false): TreeNode[] {\r\n        const nodes: TreeNode[] = [];\r\n        if (rowNode.node.selectable) {\r\n            rowNode.isChecked = checked;\r\n        }\r\n        this.setCheckeds(rowNode, false);\r\n        if (this.selectOnCheck) {\r\n            if (sync) {\r\n                const status = this.isIndeterminate(rowNode) !== 2;\r\n                checked = status ? checked: false;\r\n            }\r\n\r\n            if (rowNode.node.selectable) {\r\n                rowNode.isSelected = checked;\r\n                this.setSelections(rowNode);\r\n            }\r\n        }\r\n        if (!this.isInArray(rowNode, nodes)) {\r\n            nodes.push(rowNode.node);\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    /**\r\n     * åä¸çº§èéä¸­\r\n     * @param node å½åèç¹\r\n     * @param checked éä¸­ç¶æ\r\n     * è¿ååå½±åçè¡\r\n     */\r\n    propagateSelectionDown(rowNode: RowNode, checked: boolean) {\r\n        let nodes = this.cascadeCheckedNode(rowNode, checked);\r\n        if (this.cascadeCheck && this.cascadeDown && rowNode.node.children && rowNode.node.children.length) {\r\n            rowNode.node.children.forEach((v, i) => {\r\n                const rn = this.state.rowNodes.find((row: RowNode) => row.id === v.data[this.idField]);\r\n                if (rn) {\r\n                    rn.indeterminate = false;\r\n                    if (rn.node.selectable) {\r\n                        rn.isChecked = checked;\r\n                    }\r\n                    nodes = nodes.concat(this.propagateSelectionDown(rn, checked));\r\n                    this.ttService.onChangeCheckboxStatus(rn);\r\n                }\r\n            });\r\n        }\r\n\r\n        return nodes;\r\n    }\r\n\r\n    /**\r\n     * åä¸çº§èéä¸­\r\n     */\r\n    propagateSelectionUp(rowNode: RowNode, checked: boolean) {\r\n        const nodes = this.cascadeCheckedNode(rowNode, checked);\r\n        if (this.cascadeCheck && this.cascadeUp && rowNode.node.parent) {\r\n            if (rowNode.parents && rowNode.parents.length) {\r\n                const rns: RowNode[] = [];\r\n                rowNode.parents.forEach((n, i) => {\r\n                    const rn = this.findRowNode(n);\r\n                    if (rn && rn.node.selectable) {\r\n                        // rn.isChecked = checked;\r\n                        const checkedNodes = this.cascadeCheckedNode(rn, checked, true);\r\n                        if (checkedNodes.length) {\r\n                            nodes.push(checkedNodes[0]);\r\n                        }\r\n                        rns.push(rn);\r\n                    }\r\n                });\r\n\r\n                rns.reverse().forEach(rn => {\r\n                    this.updateCheckboxStatus(rn);\r\n                });\r\n            }\r\n        }\r\n\r\n        return nodes;\r\n    }\r\n\r\n    // èç¹ç¶æï¼éä¸­ï¼å¾éï¼åæ­¥æ´æ°\r\n    private updateNodeStatus() {\r\n        if (this.state.searched) {\r\n            const rowNodes = this.state.searchRowNodes;\r\n            if (!rowNodes) {\r\n                return;\r\n            }\r\n            rowNodes.forEach(rn => {\r\n                const checkedItem: RowNode = this.state.rowNodes.find(n => n.id === rn.id);\r\n\r\n                const chked = checkedItem ? checkedItem.isChecked : false;\r\n                rn.indeterminate = false;\r\n                rn.isChecked = chked;\r\n\r\n                if (this.selectOnCheck) {\r\n                    if (checkedItem.isSelected != rn.isChecked) {\r\n                        checkedItem.isSelected = checkedItem.isChecked;\r\n                    }\r\n                    rn.isSelected = checkedItem.isSelected;\r\n                }\r\n            });\r\n        } else {\r\n            if (this.selectOnCheck) {\r\n                this.state.rowNodes.forEach(rn => {\r\n                    if (this.onlySelectSelf) {\r\n                        if (!this.selections || !this.selections.length ) {\r\n                            rn.isSelected = false;\r\n                        } else {\r\n                            if (this.selections[0].id === rn.id) {\r\n                                rn.isSelected = true;\r\n                            } else {\r\n                                rn.isSelected = false;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (rn.isSelected != rn.isChecked) {\r\n                            rn.isSelected = rn.isChecked;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * çº§èéæ©èç¹\r\n     * @param rowNode å½åèç¹\r\n     * @param checked æ¯å¦é©é\r\n     */\r\n    private cascadeNodes(rowNode: RowNode, checked: boolean) {\r\n        let checkedNodes = this.propagateSelectionDown(rowNode, checked);\r\n        checkedNodes = checkedNodes.concat(this.propagateSelectionUp(rowNode, checked));\r\n        checkedNodes = this.getDiffrentData(checkedNodes);\r\n\r\n        this.updateNodeStatus();\r\n\r\n        this.updateAllCheckboxStatus();\r\n\r\n        return checkedNodes.filter(n => {\r\n            return n.selectable;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * è¡Checkbox éä¸­ååäºä»¶\r\n     * @param event é¼ æ ç¹å»äºä»¶å¯¹è±¡\r\n     * @param rowNode å½åæ èç¹\r\n     */\r\n    toggleNodeWithCheckbox(event: Event, rowNode: RowNode, checked: boolean): any {\r\n        this.state.rowNodes.find(n => n.id === rowNode.id).isChecked = checked;\r\n        rowNode.indeterminate = false;\r\n\r\n        const data = this.cascadeNodes(rowNode, checked);\r\n\r\n        this.ttService.onChangeCheckboxStatus(rowNode);\r\n        if (checked) {\r\n            this.nodeChecked.emit({ originalEvent: event, node: rowNode.node, nodes: data, instance: this });\r\n        } else {\r\n            this.nodeUnChecked.emit({ originalEvent: event, node: rowNode.node, nodes: data, instance: this });\r\n        }\r\n\r\n        this.selectWhenChecked(rowNode, checked, event);\r\n\r\n        if (this.onlySelectSelf && checked) {\r\n            this.selectedRow = rowNode.node;\r\n        }\r\n\r\n        this.checkeds = [...this.checkeds];\r\n        this.detectChanges();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * å¨é\r\n     * @param event é¼ æ äºä»¶å¯¹è±¡\r\n     * @param checked æ¯å¦éä¸­\r\n     */\r\n    toggleNodesWithCheckbox(event: Event, checked: boolean) {\r\n        if (checked) {\r\n            if (this.data && this.data.length) {\r\n                this.checkAllNodes({ originalEvent: event, checked, instance: this });\r\n            }\r\n        } else {\r\n            this.selections = null;\r\n            this.unCheckAllNodes({ originalEvent: event, checked, instance: this});\r\n        }\r\n\r\n        this.detectChanges();\r\n    }\r\n\r\n    /** æ´æ°å¨écheckbox çç¶æ */\r\n    private updateAllCheckboxStatus() {\r\n        if (this['checkall_CLICKED']) {\r\n            return;\r\n        }\r\n\r\n        const status = this.isIndeterminate();\r\n        if (this.showCheckAll && !this.singleSelect && this.showCheckbox) {\r\n            if (status !== undefined) {\r\n                if (this.headerCheckboxCmp) {\r\n                    this.headerCheckboxCmp.chkAll.nativeElement.indeterminate = status === 2;\r\n                    this.headerCheckboxCmp.checked = status === 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /** æ´æ°ç¶èç¹checkbox éä¸­ç¶æ */\r\n    private updateParentCheckboxStatus(rowNode: RowNode) {\r\n        const pNodes = [];\r\n        rowNode.parents.forEach(rnid => {\r\n            const rn = this.findRowNode(rnid);\r\n            if (rn) {\r\n                pNodes.push(rn);\r\n            }\r\n        });\r\n\r\n        pNodes.reverse().forEach(rn => {\r\n            this.updateCheckboxStatus(rn);\r\n        });\r\n    }\r\n    /** æ´æ°Nä¸ªç¶èç¹å¤éæ¡ä¸­çéä¸­ç¶æ */\r\n    private updateParentsCheckStatus(parentIds: any) {\r\n        let pids = [];\r\n        parentIds.forEach((ids: any) => {\r\n            pids = [...pids, ...ids];\r\n        });\r\n\r\n        pids = Array.from(new Set(pids));\r\n\r\n        const pRowNodes = this.findRowNodes(pids);\r\n\r\n        pRowNodes.sort((r, n) => {\r\n            return n.level - r.level;\r\n        }).forEach(rn => {\r\n            this.updateCheckboxStatus(rn);\r\n        });\r\n\r\n    }\r\n\r\n    /** æ´æ°èç¹ä¸­checkboxçç¶æ */\r\n    private updateCheckboxStatus(rowNode: RowNode) {\r\n        const status = this.isIndeterminate(rowNode);\r\n        if (status !== undefined && rowNode.node.selectable) {\r\n            rowNode.indeterminate = status === 2;\r\n            this.ttService.onChangeCheckboxStatus(rowNode);\r\n        }\r\n    }\r\n\r\n    /** å¤æ­æå®èç¹checkbox çç¶æ\r\n     * 0ï¼å¨ä¸éï¼ 1ï¼ å¨é¨éä¸­ï¼ 2ï¼æéä¸­çä¹ææ²¡éä¸­ç\r\n     */\r\n    private isIndeterminate(rowNode?: RowNode): any {\r\n        const status = this.getCheckboxStatus(rowNode);\r\n        if (status !== undefined) {\r\n            let checked = false;\r\n            if (status === 2) {\r\n                checked = false;\r\n            } else {\r\n                checked = !!status;\r\n            }\r\n            if (rowNode && rowNode.node.selectable) {\r\n                rowNode.isChecked = checked;\r\n                this.setCheckeds(rowNode, false);\r\n            }\r\n        }\r\n        return status;\r\n    }\r\n\r\n    /**\r\n     * è¿åç¶çº§èç¹checkbox çç¶æã0ï¼ä¸éä¸­ï¼ 1ï¼ éä¸­ï¼ 2ï¼ä¸ç¡®å®\r\n     * @param rowNode ç¶çº§èç¹ï¼ä¸ºç©ºæ¶è¿åå¨écheckbox çç¶æ\r\n     */\r\n    private getCheckboxStatus(rowNode?: RowNode) {\r\n        let uncheckedLength = 0;\r\n        let checkedLength = 0;\r\n        let len = 0;\r\n        let childNodes = [];\r\n        if (rowNode) {\r\n            childNodes = rowNode.node.children|| [];\r\n\r\n            if (!childNodes.filter(n => n.selectable).length) {\r\n                return rowNode.isChecked;\r\n            }\r\n\r\n        } else {\r\n            childNodes = this.state.rowNodes;\r\n        }\r\n        len = childNodes.length;\r\n\r\n        childNodes.forEach(n => {\r\n            let rn = n;\r\n            if (rowNode) {\r\n                rn = this.findRowNode(n.data[this.idField]);\r\n            }\r\n            if (rn && !rn.indeterminate) {\r\n                if (rn.isChecked) {\r\n                    checkedLength++;\r\n                } else {\r\n                    uncheckedLength++;\r\n                }\r\n            }\r\n        });\r\n\r\n        if (len === 0) {\r\n            return undefined;\r\n        }\r\n        let flag = 0;\r\n        if (uncheckedLength === len) {\r\n            flag = 0;\r\n        } else {\r\n            if (checkedLength === len) {\r\n                flag = 1;\r\n            } else {\r\n                flag = 2;\r\n            }\r\n        }\r\n\r\n        return flag;\r\n    }\r\n\r\n    private findIndexIn(node: TreeNode, treeNodes: TreeNode[]) {\r\n        let index = -1;\r\n        if (treeNodes && treeNodes.length) {\r\n            index = treeNodes.findIndex((v, i) => {\r\n                return this.equals(v, node);\r\n            });\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    /**\r\n     * å¨éä¸­çéåä¸­æ¥æ¾æå®èç¹çç´¢å¼\r\n     * @param node æ èç¹\r\n     */\r\n    findIndexInCheckeds(node: TreeNode): number {\r\n        return this.findIndexIn(node, this.checkeds);\r\n    }\r\n\r\n    /**\r\n     * å¨éä¸­çéåä¸­æ¥æ¾æå®èç¹çç´¢å¼\r\n     * @param node æ èç¹\r\n     */\r\n    findIndexInSelection(node: TreeNode): number {\r\n        return this.findIndexIn(node, this.selections);\r\n    }\r\n\r\n    /** å¯¹æ¯ä¸¤ä¸ªèç¹æ¯å¦åä¸ä¸ªèç¹ */\r\n    equals(target: TreeNode, source: TreeNode): boolean {\r\n        return target.data[this.idField] === source.data[this.idField];\r\n    }\r\n\r\n    /**\r\n     * å±å¼ææèç¹\r\n     * @param rowNode å±å¼æ­¤èç¹ä¸çææèç¹ï¼å¦æä¸ºç©ºï¼åå±å¼ææèç¹\r\n     * @param deep è®¾ç½®ä¸ºtrue æ¶ï¼å½åèç¹ä¸çææå­èç¹å¨é¨å±å¼, é»è®¤ false\r\n     * @param childrenEmptyEmitExpand  å½æ²¡æå­èç¹æ¯å¦è§¦åå±å¼äºä»¶ï¼é»è®¤ä¸º true\r\n     */\r\n    toggleExpand(treeNode?: TreeNode, deep = false, childrenEmptyEmitExpand = true) {\r\n        if (treeNode) {\r\n            treeNode.expanded = !treeNode.expanded;\r\n            this.updateNodeProperty(treeNode.id, {expanded: treeNode.expanded});\r\n            this.toggleVisible(treeNode);\r\n\r\n            if (this.virtualized) {\r\n                if (treeNode.children && treeNode.children.length) {\r\n                    this.renderVirtualRowNodes();\r\n                }\r\n            }\r\n\r\n            if (treeNode.expanded) {\r\n                if (childrenEmptyEmitExpand || (treeNode.children && treeNode.children.length)) {\r\n                    this.expand.emit(treeNode);\r\n                } else {\r\n                    treeNode.expanded = !treeNode.expanded;\r\n                    return;\r\n                }\r\n            } else {\r\n                this.collapse.emit(treeNode);\r\n            }\r\n\r\n            if (deep) {\r\n                if (treeNode.children && treeNode.children.length) {\r\n                    treeNode.children.forEach((row, i) => {\r\n                        this.toggleExpand(row, deep, childrenEmptyEmitExpand);\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n\r\n            if (this.data && this.data.length) {\r\n                this.data.forEach((row: any) => {\r\n                    this.toggleExpand(row);\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        this.setNewColumnsWidth();\r\n\r\n    }\r\n\r\n    private toggleVisible(treeNode: TreeNode) {\r\n        const rowNode = this.findRowNode(treeNode.id);\r\n        if (rowNode) {\r\n            const rid = rowNode.id;\r\n            const setRowVisible = (rn, visible) => {\r\n                const pid = rn.parent.data[this.idField];\r\n                const rnParent = this.findRowNode(pid);\r\n                if (rnParent) {\r\n                    rn.visible = rnParent.visible && rnParent.node.expanded;\r\n                } else {\r\n                    rn.visible = visible;\r\n                }\r\n\r\n                const _r = this.serializedValue.find(n => n.id === rn.id);\r\n                if (_r) {\r\n                    _r.visible = rn.visible;\r\n                }\r\n            };\r\n\r\n            this.state.rowNodes.filter(rn => rn.parents.indexOf(rid) > -1).forEach(rn => {\r\n                setRowVisible(rn, treeNode.expanded);\r\n            });\r\n\r\n            \r\n            // #392512 \r\n            const rowNodes = this.getCurrentAllRowNodes();\r\n            if (rowNodes) {\r\n                rowNodes.filter(rn => rn.parents.indexOf(rid) > -1).forEach(rn => {\r\n                    setRowVisible(rn, treeNode.expanded);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /** å±å¼æå®èç¹\r\n     * emit: è§¦åå±å¼äºä»¶\r\n     * render: æ°æ®éæ°å è½½\r\n     */\r\n    expandNode(id: string, emit = true, render = true) {\r\n        if (id) {\r\n            const rowNode = this.findRowNode(id);\r\n            if (rowNode) {\r\n                rowNode.node.expanded = true;\r\n                this.toggleVisible(rowNode.node);\r\n\r\n                if (render) {\r\n                    if (this.virtualized) {\r\n                        if (rowNode.node.children && rowNode.node.children.length) {\r\n                            this.renderVirtualRowNodes();\r\n                        }\r\n                    } else {\r\n                        this.detectChanges();\r\n                    }\r\n                }\r\n\r\n                if (emit) {\r\n                    this.expand.emit(rowNode.node);\r\n                }\r\n\r\n                this.setNewColumnsWidth();\r\n\r\n            } else {\r\n                this.writeConsole('Con\\'t find tree node widh id:' + id, 'error');\r\n            }\r\n        }\r\n    }\r\n\r\n    /** å±å¼ææèç¹ */\r\n    expandAll() {\r\n        this.state.rowNodes = this.state.rowNodes.map((row: RowNode) => {\r\n            row.node.expanded = true;\r\n            row.visible = true;\r\n            return row;\r\n        });\r\n\r\n        if (this.virtualized) {\r\n            this.renderVirtualRowNodes();\r\n        } else {\r\n            this.serializedValue = this.state.rowNodes;\r\n        }\r\n        this.setNewColumnsWidth();\r\n        this.expandAllNodes.emit();\r\n        this.detectChanges();\r\n    }\r\n\r\n    expandNodes(id: string) {\r\n        // const rowNode = this.findRowNode(id);\r\n        // const rootNode = this.getRoot(id);\r\n        // if (rowNode) {\r\n        //     const treeNode = rowNode.node;\r\n        //     treeNode.expanded = true;\r\n        //     rowNode.visible = true;\r\n        //     const parents = rowNode.parents;\r\n\r\n        //     this.state.rowNodes.filter(n => n.parents.indexOf(rootNode.id) > -1).forEach(r => {\r\n        //         if (parents.indexOf(r.id) > -1) {\r\n        //             r.visible = true;\r\n        //             r.node.expanded = true;\r\n        //         }\r\n        //     });\r\n\r\n\r\n        //     this.detectChanges();\r\n        // }\r\n    }\r\n\r\n    /** å±å¼æå®èç¹ä¸çææèç¹ */\r\n    expandAllNodesBy(rowNode: any) {\r\n        if (rowNode) {\r\n            const treeNode = rowNode.node;\r\n            treeNode.expanded = true;\r\n            rowNode.visible = true;\r\n\r\n            this.state.rowNodes.filter(n => n.parents.indexOf(rowNode.id) > -1).forEach(r => {\r\n                r.visible = true;\r\n                r.node.expanded = true;\r\n            });\r\n\r\n            this.detectChanges();\r\n            this.setNewColumnsWidth();\r\n        }\r\n    }\r\n\r\n    /** æå æå®èç¹ */\r\n    collapseNode(id: string) {\r\n        if (id) {\r\n            const rowNode = this.findRowNode(id);\r\n            if (rowNode) {\r\n                rowNode.node.expanded = false;\r\n                this.toggleVisible(rowNode.node);\r\n                this.detectChanges();\r\n                this.setNewColumnsWidth();\r\n                this.collapse.emit(rowNode.node);\r\n            } else {\r\n                this.writeConsole('Con\\'t find tree node widh id:' + id, 'error');\r\n            }\r\n        }\r\n    }\r\n    /** æå ææèç¹ */\r\n    collapseAll() {\r\n        this.state.rowNodes = this.state.rowNodes.map((row: RowNode) => {\r\n            row.node.expanded = false;\r\n            row.visible = !row.parent;\r\n            return row;\r\n        });\r\n\r\n        if (this.virtualized) {\r\n            this.renderVirtualRowNodes(0);\r\n        } else {\r\n            this.serializedValue = this.state.rowNodes;\r\n        }\r\n\r\n\r\n        this.collapseAllNodes.emit();\r\n        this.detectChanges();\r\n        this.setNewColumnsWidth();\r\n    }\r\n\r\n    getContainerOffset() {\r\n        const rect = this.containerElement.getBoundingClientRect();\r\n        return {\r\n            left: rect.left + document.body.scrollLeft,\r\n            top: rect.top + document.body.scrollTop\r\n        };\r\n    }\r\n\r\n    onColumnResizeBegin(event) {\r\n        const containerLeft = Math.round(this.getContainerOffset().left);\r\n        this.lastResizerHelperX = (event.pageX - containerLeft + this.containerElement.scrollLeft);\r\n        event.preventDefault();\r\n    }\r\n\r\n    onColumnResize(event) {\r\n        if (this.resizableColumns) {\r\n            const containerLeft = this.getContainerOffset().left;\r\n            this.renderer.addClass(this.containerElement, 'ui-unselectable-text');\r\n            this.resizerHelperVC.nativeElement.style.height = this.containerElement.offsetHeight + 'px';\r\n            this.resizerHelperVC.nativeElement.style.top = 0 + 'px';\r\n            this.resizerHelperVC.nativeElement.style.left = (event.pageX - containerLeft) + 'px';\r\n\r\n            this.resizerHelperVC.nativeElement.style.display = 'block';\r\n        }\r\n    }\r\n\r\n    onColumnResizeEnd(event: any, column: any) {\r\n        if (!this.resizerHelperVC.nativeElement.offsetLeft) {\r\n            return;\r\n        }\r\n\r\n        // åç§»é\r\n        const delta = this.resizerHelperVC.nativeElement.offsetLeft - this.lastResizerHelperX;\r\n        // åå®½\r\n        const columnWidth = column.offsetWidth;\r\n        // æ°å®½åº¦\r\n        const newColumnWidth = columnWidth + delta;\r\n        // æå°å®½åº¦\r\n        const minWidth = column.style.minWidth || 15;\r\n\r\n        let resizeColumnIndex = -1;\r\n        if (column.id) {\r\n            resizeColumnIndex = this.columns.findIndex(n => n.id === column.id);\r\n        } else {\r\n            const colField = column.getAttribute('field');\r\n            if (colField) {\r\n                resizeColumnIndex = this.columns.findIndex(n => n.field === colField);\r\n            }\r\n        }\r\n\r\n\r\n        if (!this.fitColumns) {\r\n            this.resizeColGroup(this.headerTable.nativeElement, resizeColumnIndex, newColumnWidth, 0);\r\n            this.resizeColGroup(this.bodyTable.nativeElement, resizeColumnIndex, newColumnWidth, 0);\r\n\r\n            if (this.columns[resizeColumnIndex]) {\r\n                this.columns[resizeColumnIndex].width = newColumnWidth;\r\n            }\r\n\r\n            this.sortColumnsByFixed(false);\r\n\r\n            this.setCellWidthCss(this.allColumnsWidth(), 0, []);\r\n\r\n            // this.setTableWidth(this.allColumnsWidth());\r\n\r\n            // // update css.\r\n            // const _colInfo = this.columns[resizeColumnIndex];\r\n            // if (_colInfo) {\r\n            //     const ruleName = this.columnCssName(_colInfo);\r\n            //     const stylecss = ruleName + '{width:' + newColumnWidth + 'px}';\r\n            //     this.utils.appendCssRules([stylecss], this.styleElement.sheet);\r\n            // }\r\n\r\n            // const nextColumn = this.columns[resizeColumnIndex + 1];\r\n            // if (nextColumn && nextColumn.fixed) {\r\n            //     const ruleName = this.columnCssName(nextColumn);\r\n            //     const stylecss = ruleName + '{' + nextColumn.fixed + ':' + nextColumn[nextColumn.fixed] + 'px}';\r\n            //     this.utils.appendCssRules([stylecss], this.styleElement.sheet);\r\n            // }\r\n\r\n        } else {\r\n            if (newColumnWidth > minWidth) {\r\n                let nextColumn = column.nextElementSibling;\r\n                while (!nextColumn.offsetParent) {\r\n                    nextColumn = nextColumn.nextElementSibling;\r\n                }\r\n\r\n                if (nextColumn) {\r\n                    const nextColumnWidth = nextColumn.offsetWidth - delta;\r\n                    const nextColumnMinWidth = nextColumn.style.minWidth || 15;\r\n\r\n                    if (newColumnWidth > 15 && nextColumnWidth > nextColumnMinWidth) {\r\n                        this.resizeColGroup(this.headerTable.nativeElement, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                        this.resizeColGroup(this.bodyTable.nativeElement, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.resizerHelperVC.nativeElement.style.display = 'none';\r\n        this.renderer.removeClass(this.containerElement, 'ui-unselectable-text');\r\n        this.psRef.directiveRef.update();\r\n    }\r\n\r\n    resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth?: number) {\r\n        if (table) {\r\n            const colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\r\n\r\n            if (colGroup) {\r\n                const col = colGroup.children[resizeColumnIndex];\r\n                const nextCol = col.nextElementSibling;\r\n                col.style.width = newColumnWidth + 'px';\r\n\r\n\r\n                if (nextCol) {\r\n                    if (nextColumnWidth && this.fitColumns) {\r\n                        nextCol.style.width = nextColumnWidth + 'px';\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error('Scrollable tables require a colgroup to support resizable columns');\r\n            }\r\n        }\r\n    }\r\n\r\n    onSearch() {\r\n        this.state.searchRowNodes = null;\r\n        this.state.searched = !!this.searchData.value;\r\n        if (this.searchData.value) {\r\n            this.searchData.value = this.searchData.value.trim();\r\n        }\r\n        this.search.emit(this.searchData);\r\n    }\r\n\r\n    insert(node: TreeNode, parent?: TreeNode) {\r\n        if (parent) {\r\n            if (!parent.children) {\r\n                parent.children = [];\r\n            }\r\n            parent.children.push(node);\r\n\r\n            this.expandNode(parent.data[this.idField]);\r\n            this.appendNew.emit({ parent });\r\n        } else {\r\n            this.data.push(node);\r\n        }\r\n\r\n        this.updateSerializedValue();\r\n    }\r\n\r\n    append(data: { [key: string]: any }, parent?: TreeNode) {\r\n        if (data && data[this.idField]) {\r\n            this.insert({ data, id: data[this.idField] }, parent);\r\n        } else {\r\n            this.writeConsole('Please set id value.', 'warn');\r\n        }\r\n    }\r\n\r\n    private emitAppendNew(parent: TreeNode) {\r\n        if (this.virtualized) {\r\n            const nodePosY = this.psRef.directiveRef.elementRef.nativeElement.scrollTop;\r\n            this.updateSerializedValue(nodePosY);\r\n        } else {\r\n            this.updateSerializedValue();\r\n        }\r\n\r\n    }\r\n\r\n    appendChildren(nodes: TreeNode[], parent: TreeNode, emit = true) {\r\n        if (nodes && nodes.length) {\r\n            if (parent) {\r\n                parent.children.push(...nodes);\r\n                this.emitAppendNew(parent);\r\n                if (emit) {\r\n                    this.appendNew.emit({ parent });\r\n                }\r\n            } else {\r\n                throw new Error('æªæ¾å°ç¶çº§èç¹');\r\n            }\r\n        } else {\r\n            this.updateSerializedValue();\r\n            this.writeConsole('æ·»å å­èç¹çæ°æ®ä¸ºç©º', 'warn');\r\n        }\r\n    }\r\n\r\n    loadChildren(nodes: TreeNode[], parent: TreeNode, emit = true) {\r\n        if (parent) {\r\n            parent.children = nodes || [];\r\n            this.emitAppendNew(parent);\r\n            if (emit) {\r\n                this.appendNew.emit({ parent });\r\n            }\r\n        }\r\n    }\r\n\r\n    remove(nodeId: string) {\r\n        if (nodeId) {\r\n            const rowNode = this.findRowNode(nodeId);\r\n            if (rowNode) {\r\n                // remove(this.state.rowNodes, (n) => {\r\n                //     return n.id === nodeId;\r\n                // });\r\n                if (this.selectValue === nodeId) {\r\n                    this.selectedRow = null;\r\n                    this.selectValue = null;\r\n                }\r\n\r\n                if (rowNode.parent) {\r\n                    remove(rowNode.parent.children, (n) => {\r\n                        return n.data[this.idField] === nodeId;\r\n                    });\r\n                } else {\r\n                    remove(this.state.rowNodes, (n) => {\r\n                        return n.id === nodeId;\r\n                    });\r\n\r\n                    this.data = this.data.filter(n => n.data[this.idField] !== nodeId);\r\n                }\r\n                this.updateSerializedValue();\r\n                this.detectChanges();\r\n                this.ttService.onRemove(rowNode);\r\n                this.removed.emit(rowNode);\r\n            }\r\n        }\r\n    }\r\n\r\n    update(nodeId: string, data: { [key: string]: string }) {\r\n        if (nodeId && data) {\r\n            const rowNode = this.findRowNode(nodeId);\r\n            if (rowNode) {\r\n                rowNode.node.data = extend(rowNode.node.data, data);\r\n                this.detectChanges();\r\n                this.ttService.onUpdate(rowNode);\r\n                this.updated.emit(rowNode);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateNodeProperty(nodeid: string, property: { [key: string]: any } ) {\r\n        const rowNode = this.findRowNode(nodeid);\r\n        if (rowNode && property) {\r\n            Object.keys(property).forEach(k => {\r\n                rowNode.node[k] = property[k];\r\n            });\r\n        }\r\n    }\r\n\r\n    private setScorllBodyHeight() {\r\n        this.scorllBodyHeight = this.height;\r\n\r\n        if (this.showFilterBar) {\r\n            this.scorllBodyHeight = this.scorllBodyHeight - 46;\r\n        }\r\n\r\n        if(this.enableFilterRow) {\r\n            this.scorllBodyHeight = this.scorllBodyHeight - 36;\r\n        }\r\n\r\n        if (this.fixedHeader && this.showHeader) {\r\n            if (this.headerBox && (this.headerWrap || this.useGroupHeader)) {\r\n                const hh = this.headerBox.nativeElement.clientHeight;\r\n                this.scorllBodyHeight = this.scorllBodyHeight - hh;\r\n            } else {\r\n                // å®½æ¾çæ¶ï¼è¡¨å¤´é«åº¦å¢é«ï¼éè¦æå®éåå¾è¡¨å¤´é«åº¦\r\n                let _headerHeight = this.headerHeight;\r\n                const themesKey = localStorage.getItem('gsp_rtf_themSKey');\r\n                if (themesKey === 'loose' && this.headerBox) {\r\n                    _headerHeight = this.headerBox.nativeElement.getBoundingClientRect().height;\r\n                }\r\n                this.scorllBodyHeight = this.scorllBodyHeight - _headerHeight;\r\n            }\r\n        }\r\n\r\n        if (this.pagination) {\r\n            this.scorllBodyHeight = this.scorllBodyHeight - this.pagerHeight;\r\n        }\r\n\r\n\r\n\r\n        this.detectChanges();\r\n    }\r\n\r\n    private setWidth(w) {\r\n        this.width = w;\r\n    }\r\n\r\n    resize(size?: { width: number, height: number }) {\r\n        if (size) {\r\n            const w = parseInt('' + size.width, 10);\r\n            const h = parseInt('' + size.height, 10);\r\n\r\n            if (this.width === w && this.height === h) {\r\n                if (this.state.scrollY) {\r\n                    this.psRef.directiveRef.scrollToY(this.state.scrollY);\r\n                }\r\n\r\n                if (this.state.scrollX) {\r\n                    this.psRef.directiveRef.scrollToX(this.state.scrollX)\r\n                }\r\n\r\n                return;\r\n            }\r\n            this.setWidth(w);\r\n            this.height = h;\r\n        }\r\n        this.setScorllBodyHeight();\r\n        if (this.data && this.data.length) {\r\n            this.renderVirtualRowNodes();\r\n        }\r\n\r\n        // setTimeout(() => {\r\n        //     if (this.psRef) {\r\n        //         this.psRef.directiveRef.update();\r\n        //     }\r\n        // }, 100);\r\n    }\r\n\r\n    loadData(data: TreeNode[]) {\r\n        if (this.showLines) {\r\n            this.isLoadNewDataSetEmpty = true;\r\n            this.data = [];\r\n            this.isLoadNewDataSetEmpty = false;\r\n        }\r\n        this.data = data;\r\n    }\r\n\r\n    empty() {\r\n        this.data = [];\r\n    }\r\n\r\n    getCurrentAllRowNodes() {\r\n        if (this.state.searched && this.state.searchRowNodes && this.state.searchRowNodes.length) {\r\n            return this.state.searchRowNodes || this.state.rowNodes;\r\n        } else {\r\n            return this.state.rowNodes;\r\n        }\r\n    }\r\n\r\n    clearAll(detectChanges = true): TreeTableComponent {\r\n        this.state.rowNodes.filter(rn => rn.indeterminate).forEach(rn => {\r\n            rn.indeterminate = false;\r\n            this.ttService.onChangeCheckboxStatus(rn);\r\n        });\r\n\r\n        this.state.rowNodes = this.state.rowNodes.map((row: RowNode) => {\r\n            row.isChecked = false;\r\n            row.isSelected = false;\r\n            row.indeterminate = false;\r\n            return row;\r\n        });\r\n\r\n\r\n        // if (this.searchData && this.searchData.value) {\r\n        if (this.state.searched && this.state.searchRowNodes && this.state.searchRowNodes.length) {\r\n            this.serializedValue = this.state.searchRowNodes.map((row: RowNode) => {\r\n                row.isChecked = false;\r\n                row.isSelected = false;\r\n                row.indeterminate = false;\r\n                return row;\r\n            });\r\n        }\r\n\r\n        this.checkeds = [];\r\n        this.selections = [];\r\n        this.selectedRow = undefined;\r\n\r\n        if (this.showCheckAll && this.headerCheckboxCmp) {\r\n            this.headerCheckboxCmp.chkAll.nativeElement.indeterminate = false;\r\n            this.headerCheckboxCmp.checked = false;\r\n        }\r\n\r\n        if (detectChanges) {\r\n            this.detectChanges();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    detectChanges(): TreeTableComponent {\r\n        this.cdRef.markForCheck();\r\n        // tslint:disable-next-line:no-string-literal\r\n        if (!this.cdRef['destroyed']) {\r\n            this.cdRef.detectChanges();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    clearCheckeds(): TreeTableComponent {\r\n        if (this.checkeds && this.checkeds.length) {\r\n            this.findRowNodes(this.checkeds.map(tn => tn.data[this.idField])).forEach(rn => {\r\n                rn.isChecked = false;\r\n            });\r\n        }\r\n\r\n        this.checkeds = [];\r\n\r\n        if (this.showCheckAll && this.headerCheckboxCmp) {\r\n            this.headerCheckboxCmp.chkAll.nativeElement.indeterminate = false;\r\n            this.headerCheckboxCmp.checked = false;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    clearSelections(): TreeTableComponent {\r\n\r\n        if (this.serializedValue && this.serializedValue.length) {\r\n            this.serializedValue.forEach(n => {\r\n                n.isSelected = false;\r\n            });\r\n        }\r\n\r\n        this.state.rowNodes.forEach(n => {\r\n            n.isSelected = false;\r\n        });\r\n\r\n        if (this.selections && this.selections.length) {\r\n            const nodeIds = this.selections.map(tn => tn.data[this.idField]);\r\n            this.findRowNodes(nodeIds).forEach(rn => {\r\n                rn.isSelected = false;\r\n                if (this.singleSelect) {\r\n                    rn.isChecked = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        this.selections = undefined;\r\n        this.selectedRow = undefined;\r\n        return this;\r\n    }\r\n    /** éä¸­ç¬¬1ä¸ªå¯ä»¥éä¸­çèç¹ */\r\n    selectFirstNode() {\r\n        if (this.state.rowNodes && this.state.rowNodes.length) {\r\n            const firstCanSelectNode = this.state.rowNodes.find(n => n.node.selectable);\r\n            if (firstCanSelectNode) {\r\n                this.selectNode(firstCanSelectNode.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    private scrollToCurrentRow(id: string) {\r\n        const trId = 'rownode-' + id;\r\n        // const trEle =    document.getElementById(trId);\r\n        const trEle = this.el.nativeElement.querySelector('#' + trId) || document.getElementById(trId);\r\n        if (trEle && trEle.closest('.farris-treetable') && trEle.closest('.farris-treetable').id === this.id) {\r\n            if (!this.isElementInViewport(trEle)) {\r\n                if (trEle.scrollIntoViewIfNeeded) {\r\n                    trEle.scrollIntoViewIfNeeded();\r\n                    return true;\r\n                }\r\n                const browserInfo = this.utils.getBrowserType();\r\n                if (browserInfo.ff && this.utils.getFFVer() < 58) {\r\n                    trEle.scrollIntoView();\r\n                } else {\r\n                    trEle.scrollIntoView({ block: 'nearest', inline: 'nearest' });\r\n                }\r\n            } else {\r\n                trEle.scrollIntoView({ block: 'nearest'});\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private isElementInViewport(el) {\r\n        const containerEl = this.el.nativeElement.querySelector('.farris-treetable-body');\r\n        if (!containerEl) {\r\n            return false;\r\n        }\r\n        const container = containerEl.getBoundingClientRect();\r\n        const viewPortHeight = container.height;\r\n        const offsetTop = el.offsetTop + this.topHideHeight;\r\n        const scrollTop = this.psRef.directiveRef.elementRef.nativeElement.scrollTop;\r\n        const top = offsetTop - scrollTop;\r\n        return  top >= 0 && top <= viewPortHeight;\r\n    }\r\n\r\n    private _scrollToNode(nodeId: string) {\r\n        this.scrollToCurrentNode(nodeId);\r\n    }\r\n\r\n    scrollToCurrentNode(nodeid = '') {\r\n        let id = nodeid;\r\n        if (!nodeid && this.selectedRow) {\r\n            id = this.selectedRow.id;\r\n        }\r\n\r\n        if (id == null || id == undefined || id == '') {\r\n            return;\r\n        }\r\n\r\n        const result = this.scrollToCurrentRow(id);\r\n        if (!result) {\r\n            const rowNode = this.findRowNode(id);\r\n            const showRowsOnePager = Math.ceil(this.scorllBodyHeight / this.rowHeight ) + 1;\r\n            if (rowNode.parents && rowNode.parents.length) {\r\n                rowNode.parents.forEach(pid => {\r\n                    this.expandNode(pid, false, false);\r\n                });\r\n            } \r\n            const rowIndex = this.state.rowNodes.filter(n => n.visible).findIndex(n => n.id === id);\r\n            if (rowIndex < showRowsOnePager) {\r\n                if (this.virtualized) {\r\n                    this.renderData(0);\r\n                }\r\n                setTimeout(() => {\r\n                    this.scrollToCurrentRow(id);\r\n                });\r\n                return;\r\n            }\r\n            const top = rowIndex * this.rowHeight;\r\n\r\n            if (this.virtualized) {\r\n                this.renderData(top - this.rowHeight);\r\n\r\n                setTimeout(() => {\r\n                    this.scrollToCurrentRow(id);\r\n                    if (this.psRef && this.psRef.directiveRef) {\r\n                        this.psRef.directiveRef.elementRef.nativeElement.scrollTop += 1;\r\n                    }\r\n                }, 50);\r\n            } else {\r\n                this.scrollToY(top - this.rowHeight);\r\n                this.scrollToCurrentRow(id);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** éä¸­æå®ID çèç¹,\r\n     * detectChanges: è§¦åèå¼æ£æ¥ï¼é»è®¤ä¸º true\r\n     * gotocurrent: ä½¿ç¨éä¸­èç¹å¯è§ï¼é»è®¤ä¸º true\r\n     */\r\n    selectNode(id: string, detectChanges = true, gotocurrent = true): TreeTableComponent {\r\n        if (!id) {\r\n            return this;\r\n        }\r\n        let node = this.findRowNode(id);\r\n        const canSelect = node && node.node && node.node.selectable;\r\n        const emit = canSelect && (!this.selectedRow || (this.selectedRow && id !== this.selectedRow.id));\r\n\r\n        if (node && emit) {\r\n            node.isSelected = true;\r\n            if (this.singleSelect || this.onlySelectSelf) {\r\n                this.clearSelections();\r\n                node.isSelected = true;\r\n                this.selections = [node.node];\r\n                if (this.checkOnSelect && this.showCheckbox) {\r\n                    node.isChecked = true;\r\n                    if (this.multiSelect) {\r\n                        this.setCheckeds(node);\r\n                    } else {\r\n                        this.clearCheckeds();\r\n                        this.checkeds = [node.node];\r\n                    }\r\n\r\n                    if (this.cascadeCheck && this.cascadeUp) {\r\n                        this.updateParentCheckboxStatus(node);\r\n                    }\r\n                }\r\n            } else {\r\n                this.setSelections(node);\r\n            }\r\n\r\n            this.selectedRow = node.node;\r\n            this.selectNodeChangedSubject.next(id);\r\n            this.nodeSelected.emit({ node: node.node, instance: this });\r\n\r\n            if (this.serializedValue.find(n=>n.id == this.selectedRow.id)) {\r\n                this.serializedValue.find(n=>n.id == this.selectedRow.id).isSelected = true;\r\n            }\r\n\r\n            if (gotocurrent && this.fixedHeader) {\r\n                this.scrollToCurrentNode();\r\n            }\r\n            \r\n            if (detectChanges) {\r\n                this.detectChanges();\r\n            }\r\n        } else {\r\n            if (!node) {\r\n                this.selectedRow = null;\r\n                this.writeConsole(`æªæ¾å°IDä¸º ${id} çæ°æ®ï¼ï¼`)\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /** åæ¶éä¸­ */\r\n    unSelectNode(id: string, detectChanges = true) {\r\n        const rowNode = this.findRowNode(id);\r\n        if (rowNode) {\r\n            rowNode.isSelected = false;\r\n            if (this.singleSelect) {\r\n                this.clearSelections();\r\n                this.selectedRow = null;\r\n                rowNode.isChecked = false;\r\n                this.selections = [];\r\n            } else {\r\n                if (this.onlySelectSelf) {\r\n                    this.selections = [];\r\n                } else {\r\n                    this.setSelections(rowNode);\r\n                }\r\n            }\r\n\r\n            if (detectChanges) {\r\n                this.detectChanges();\r\n            }\r\n            this.nodeUnSelect.emit({ node: rowNode.node, instance: this });\r\n        } else {\r\n            this.writeConsole(`æªæ¾å°IDä¸º${id}çæ°æ®ï¼ï¼`);\r\n        }\r\n    }\r\n\r\n    /** éä¸­å¤è¡æ°æ® */\r\n    selectNodes(ids: string[], detectChanges = true, emitNodeSelected = false): TreeTableComponent {\r\n        if (ids && ids.length) {\r\n            const nodes = this.findRowNodes(ids).map(rn => {\r\n                rn.isSelected = true;\r\n                this.setSelections(rn);\r\n                return rn.node;\r\n            });\r\n\r\n            this.selections = [...this.selections];\r\n\r\n            if (detectChanges) {\r\n                this.detectChanges();\r\n            }\r\n\r\n            this.selectNodeChangedSubject.next(ids.join(','));\r\n            if (emitNodeSelected) {\r\n                this.nodeSelected.emit({ node: nodes, instance: this });\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /** åæ¶éä¸­ */\r\n    unSelectNodes(ids?: string[], emit = true) {\r\n        if (ids && ids.length) {\r\n            const rownodes = this.findRowNodes(ids);\r\n            if (rownodes && rownodes.length) {\r\n                rownodes.forEach(rn => {\r\n                    rn.isSelected = false;\r\n                    this.setSelections(rn);\r\n                });\r\n                this.selections = [...this.selections];\r\n                this.detectChanges();\r\n                if (emit) {\r\n                    this.nodeUnSelect.emit({ node: rownodes.map(r => r.node), instance: this });\r\n                }\r\n            }\r\n        } else {\r\n            this.clearSelections();\r\n            this.detectChanges();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * é©éæå®çèç¹\r\n     * @param updateParentCheckboxStatus: æ¯å¦æ´æ°ç¶çº§èç¹checkbox ç¶æ, é»è®¤ä¸º true\r\n     * @param detectChanges è§¦ååæ´æ£æµãé»è®¤ä¸º true\r\n     */\r\n    checkedNode(id: string, updateParentCheckboxStatus = true, detectChanges = true) {\r\n        if (this.isEnableMultiSelect()) {\r\n            const node = this.findRowNode(id);\r\n            if (node) {\r\n                node.isChecked = true;\r\n                if (!this.isChecked(node.node)) {\r\n                    this.setCheckeds(node, false);\r\n                    if (updateParentCheckboxStatus && this.cascadeCheck && this.cascadeUp) {\r\n                        this.updateParentCheckboxStatus(node);\r\n                    }\r\n                }\r\n                if (detectChanges) {\r\n                    this.detectChanges();\r\n                }\r\n                this.nodeChecked.emit({ originalEvent: null, node: node.node, instance: this });\r\n            } else {\r\n                this.writeConsole(`æªæ¾å°IDä¸º${id}çæ°æ®ï¼ï¼`);\r\n            }\r\n        }\r\n    }\r\n\r\n    unCheckedNode(id: string, updateParentCheckboxStatus = true, ) {\r\n        if (this.isEnableMultiSelect()) {\r\n            const rownode = this.findRowNode(id);\r\n\r\n            if (rownode) {\r\n                rownode.isChecked = false;\r\n                this.setCheckeds(rownode);\r\n                if (this.selectOnCheck) {\r\n                    rownode.isSelected = false;\r\n                    this.setSelections(rownode);\r\n                }\r\n                \r\n                if (this.selectedRow && this.selectedRow.id === id) {\r\n                    this.selectedRow = null;\r\n                }\r\n\r\n                if (this.singleSelect || !this.cascadeCheck) {\r\n                    this.updateNodeStatus();\r\n\r\n                    if (updateParentCheckboxStatus && this.cascadeCheck && this.cascadeUp) {\r\n                        this.updateParentCheckboxStatus(rownode);\r\n                    }\r\n\r\n                    if (this.checkValues) {\r\n                        this.checkValues = this.checkValues.filter(n => n !== id);\r\n                        this.checkValuesChange.emit(this.checkValues);\r\n                    }\r\n\r\n                    this.detectChanges();\r\n                    this.nodeUnChecked.emit({ node: rownode, instance: this });\r\n                } else {\r\n                    const unNodes = this.cascadeNodes(rownode, false);\r\n                    this.checkeds = [...this.checkeds];\r\n                    this.checkValuesChange.emit(this.checkValues);\r\n\r\n                    this.detectChanges();\r\n                    this.nodeUnChecked.emit({ node: rownode, nodes: unNodes, instance: this });\r\n                }\r\n\r\n\r\n            } else {\r\n                this.writeConsole(`æªæ¾å°IDä¸º${id}çæ°æ®ï¼ï¼`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _checkedNodes(ids: string[], checked: boolean) {\r\n        const parentIDS = [];\r\n        const nodes = this.findRowNodes(ids).map(rn => {\r\n            parentIDS.push(rn.parents);\r\n            if (rn.node.selectable) {\r\n                rn.isChecked = checked;\r\n                this.setCheckeds(rn, false);\r\n            }\r\n            return rn.node;\r\n        });\r\n        this.checkeds = [...this.checkeds];\r\n        if (this.cascadeCheck && this.cascadeUp) {\r\n            // æ´æ°ç¶èç¹å¤æ¡çéä¸­ç¶æ\r\n            this.updateParentsCheckStatus(parentIDS);\r\n        }\r\n\r\n        return nodes;\r\n    }\r\n\r\n    /** æ¹ééä¸­èç¹\r\n     * @param ids: id éå\r\n     * @param detectChanges: boolean  é»è®¤ä¸º true ,æ¯å¦è§¦ååæ´æ£æµ\r\n     * closeCascade:  æ§è¡åæ¶é©éæ¶æ¯å¦å³é­çº§èåè½ãé»è®¤ä¸º false\r\n     *      è®¾ä¸ºtrueæ¶ï¼é©éå°ç¦ç¨çº§èçåè½ï¼ä»å¤çå½åèç¹çéä¸­ç¶æãæ§è¡å®æ¯åï¼æ¢å¤ååççº§èéé¡¹ã\r\n     */\r\n    checkedNodes(ids: any[], detectChanges = true, emit = true, closeCascade?: boolean) {\r\n        if (this.isEnableMultiSelect()) {\r\n            if (ids && ids.length) {\r\n\r\n                const _cascade = this.cascadeCheck;\r\n                if (closeCascade && _cascade) {\r\n                    this.cascadeCheck = false;\r\n                }\r\n\r\n                const nodes = this._checkedNodes(ids, true);\r\n\r\n                if (closeCascade && _cascade) {\r\n                    // æ¢å¤çº§è\r\n                    this.cascadeCheck = true;\r\n                }\r\n\r\n                this.updateAllCheckboxStatus();\r\n\r\n                if (detectChanges) {\r\n                    this.detectChanges();\r\n                }\r\n\r\n                if (emit) {\r\n                    this.nodeChecked.emit({ originalEvent: null, node: nodes, nodes, instance: this });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * åæ¶éä¸­çèç¹.\r\n     * ids: æ è¯Id æ°ç»\r\n     * closeCascade: æ§è¡åæ¶é©éæ¶æ¯å¦å³é­çº§èåè½ãé»è®¤ä¸º false\r\n     *     è®¾ä¸ºtrueæ¶ï¼é©éå°ç¦ç¨çº§èçåè½ï¼ä»å¤çå½åèç¹çéä¸­ç¶æãæ§è¡å®æ¯åï¼æ¢å¤ååççº§èéé¡¹ã\r\n     * emit: æ¯å¦è§¦ååæ¶å¾éäºä»¶ãé»è®¤ä¸º true\r\n     */\r\n    unCheckedNodes(ids: string[], closeCascade?: boolean, emit = true) {\r\n        if (ids && ids.length) {\r\n            const _cascade = this.cascadeCheck;\r\n            if (closeCascade && _cascade) {\r\n                this.cascadeCheck = false;\r\n            }\r\n\r\n            const nodes = this._checkedNodes(ids, false);\r\n\r\n            if (closeCascade && _cascade) {\r\n                this.cascadeCheck = true;\r\n            }\r\n            this.detectChanges();\r\n            if (emit) {\r\n                this.nodeUnChecked.emit({ originalEvent: null, node: nodes, nodes, instance: this });\r\n            }\r\n        } else {\r\n            this.clearCheckeds();\r\n            this.detectChanges();\r\n        }\r\n    }\r\n\r\n    unCheckedAndSelected(ids: string[]) {\r\n        this.unCheckedNodes(ids, true, false);\r\n        this.unSelectNodes(ids, false);\r\n    }\r\n\r\n    findRowNode(id: string): RowNode {\r\n        if (id) {\r\n            if (this.state.rowNodes) {\r\n                return this.state.rowNodes.find(n => n.id === id);\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    /** å°å¨ v0.2.x åºå¼ï¼è¯·ä½¿ç¨ findRowNode æ¹æ³ */\r\n    findNode(id: string): RowNode {\r\n        return this.findRowNode(id);\r\n    }\r\n\r\n    /**\r\n     * æ ¹æ®å½åèç¹IDï¼è·åé¡¶çº§ç¶èç¹\r\n     * @param id å½åèç¹ID\r\n     * @returns è¿åé¡¶çº§èç¹\r\n     */\r\n    getRoot(id: string) {\r\n        const rowNode = this.findRowNode(id);\r\n        if (rowNode) {\r\n            if (rowNode.parents && rowNode.parents.length) {\r\n                return this.findRowNode(rowNode.parents[0]);\r\n            }\r\n            return rowNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    findRowNodes(ids: string[]): RowNode[] {\r\n        return this.state.rowNodes.filter(rn => ids.indexOf(rn.id) > -1);\r\n    }\r\n\r\n    checkAllNodes(args?: any) {\r\n        let rowNodes = this.getCurrentAllRowNodes();\r\n        rowNodes = rowNodes.filter(n => (n.node.selectable || n.node.selectable === undefined));\r\n\r\n        this.checkeds = rowNodes.map(n => {\r\n            n.indeterminate = false;\r\n            this.ttService.onChangeCheckboxStatus(n);\r\n            if (n.node.selectable || n.node.selectable === undefined) {\r\n                n.isChecked = true;\r\n            }\r\n            return n.node;\r\n        });\r\n\r\n        if (this.selectOnCheck && !this.onlySelectSelf) {\r\n            this.selections = rowNodes.map(n => {\r\n                if (n.node.selectable || n.node.selectable === undefined) {\r\n                    n.isSelected = true;\r\n                }\r\n                return n.node;\r\n            });\r\n        }\r\n\r\n        if (this.state.searched) {\r\n            rowNodes.forEach(rn => {\r\n                const row = this.state.rowNodes.find(n => n.id === rn.id);\r\n                if (row) {\r\n                    row.isSelected = rn.isSelected;\r\n                    row.isChecked = rn.isChecked;\r\n                }\r\n            });\r\n        }\r\n\r\n        this.checkAll.emit(args);\r\n        this.updateAllCheckboxStatus();\r\n        this.detectChanges();\r\n    }\r\n\r\n    unCheckAllNodes(args?: any) {\r\n        this.clearAll();\r\n        this.unCheckAll.emit(args);\r\n        this.detectChanges();\r\n    }\r\n\r\n    private isEnableMultiSelect() {\r\n        if (this.singleSelect) {\r\n            if (!this.showCheckbox) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // ä»æ°æ®ä¸­è·åèç¹å¾æ \r\n    // iconField ä¸º object\r\n    //      å¦æ å±å¼å¾æ ä¸ºç©ºï¼æå å¾æ ä¸ä¸ºç©ºï¼æåä¹ï¼åå±å¼ä¸æå å¾æ ä¿æä¸è³ï¼\r\n    //      å¦æ å¶å­å¾æ ä¸ºç©ºï¼åä½¿ç¨ç»ä»¶é»è®¤çå¾æ \r\n    // iconField ä¸º å­ç¬¦ä¸²ï¼ åå¶å­ å±å¼ æå  å¾æ ä½¿ç¨åä¸ä¸ªã å¦æä¸ºç©ºï¼ åä½¿ç¨ç»ä»¶é»è®¤å¾æ \r\n    private getNodeIconFromData(tn: TreeNode) {\r\n        let leaf = null;\r\n        let expand = null;\r\n        let collapse = null;\r\n        if (this.useIconFromData) {\r\n            if (this.iconField) {\r\n                let _iconField = '';\r\n                if (typeof this.iconField === 'string') {\r\n                    _iconField = this.iconField;\r\n                    if (tn[_iconField]) {\r\n                        leaf = tn[_iconField];\r\n                    } else {\r\n                        leaf = this.utils.getValue(_iconField, tn.data);\r\n                    }\r\n\r\n                    expand = collapse = leaf;\r\n                } else {\r\n                    if (this.iconField.leaf) {\r\n                        leaf = this.utils.getValue(this.iconField.leaf, tn.data);\r\n                    }\r\n                    if (this.iconField.expand) {\r\n                        expand = this.utils.getValue(this.iconField.expand, tn.data);\r\n                    }\r\n                    if (this.iconField.collapse) {\r\n                        collapse = this.utils.getValue(this.iconField.collapse, tn.data);\r\n                    }\r\n\r\n                    if (expand && !collapse) {\r\n                        collapse = expand;\r\n                    }\r\n\r\n                    if (!expand && collapse) {\r\n                        expand = collapse;\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            leaf, expand, collapse\r\n        };\r\n    }\r\n\r\n    getTreeIcon(treeNode: TreeNode) {\r\n        const tn = treeNode;\r\n        let leafIcon = this.leafIcon || 'file';\r\n        let expandIcon = this.expandIcon || 'folder-open';\r\n        let collapseIcon = this.collapseIcon || 'folder';\r\n        const loading = 'f-loading-round';\r\n\r\n        if (tn['showLoading']) {\r\n            return { [loading]: true };\r\n        }\r\n\r\n        if (tn.icon) {\r\n            leafIcon = tn.icon;\r\n        }\r\n\r\n        if (tn.expandedIcon) {\r\n            expandIcon = tn.expandedIcon;\r\n        }\r\n\r\n        if (tn.collapsedIcon) {\r\n            collapseIcon = tn.collapsedIcon;\r\n        }\r\n\r\n        if (this.useIconFromData) {\r\n            const { leaf, expand, collapse } = this.getNodeIconFromData(treeNode);\r\n            if (this.whenDataIconEmptyUseDefault) {\r\n                if (leaf) {\r\n                    leafIcon = leaf;\r\n                }\r\n                if (expand) {\r\n                    expandIcon = expand;\r\n                }\r\n                if (collapse) {\r\n                    collapseIcon = collapse;\r\n                }\r\n            } else {\r\n                leafIcon = leaf || '';\r\n                expandIcon = expand || '';\r\n                collapseIcon = collapse || '';\r\n            }\r\n        }\r\n\r\n\r\n        const collapsedExpression = (!tn.leaf || !!(tn.children && tn.children.length)) && !tn.expanded;\r\n        const expandedExpression = !!tn.expanded;\r\n        const leafExpression = tn.leaf === undefined ? (!tn.children || !tn.children.length) : tn.leaf;\r\n\r\n        const icons = {};\r\n\r\n        if (leafExpression && leafIcon) {\r\n            icons[leafIcon] = leafExpression;\r\n        } else {\r\n            if (tn.expanded && expandIcon) {\r\n                icons[expandIcon] = expandedExpression;\r\n            } else {\r\n                if (collapseIcon) {\r\n                    icons[collapseIcon] = collapsedExpression;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.iconCls) {\r\n            icons[this.iconCls] = true;\r\n        }\r\n\r\n        return icons;\r\n    }\r\n\r\n    private compare(a, b) {\r\n        if (typeof a === 'string') {\r\n            return a.localeCompare(b);\r\n        } else {\r\n            return a === b ? 0 : (a > b ? 1 : -1);\r\n        }\r\n    }\r\n    private _sort(r1, r2) {\r\n        let r = 0;\r\n        const sortFields = this.sortName.split(',');\r\n        const orders = this.sortOrder.split(',');\r\n\r\n        if (!this.sortName) {\r\n            return r;\r\n        }\r\n\r\n        for (let i = 0; i < sortFields.length; i++) {\r\n            const sn = sortFields[i];\r\n            const so = orders[i];\r\n\r\n            const col = this.columns.find(c => c.field === sn);\r\n\r\n            const orderby = col.sorter || this.compare;\r\n            let v1 = this.utils.getValue(sn, r1.data);\r\n            if (v1 === null || v1 === undefined) {\r\n                v1 = '';\r\n            }\r\n            let v2 = this.utils.getValue(sn, r2.data);\r\n            if (v2 === null || v2 === undefined) {\r\n                v2 = '';\r\n            }\r\n            r = orderby(v1, v2);\r\n            if (r !== 0) {\r\n                return r * (so === 'asc' ? 1 : -1);\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n\r\n    clientSort() {\r\n\r\n        if (!this.data || !this.data.length) {\r\n            return;\r\n        }\r\n\r\n        const sortedData = this.data.sort(this._sort.bind(this));\r\n\r\n        const sortChildNodes = (childNodes) => {\r\n            childNodes = childNodes.sort(this._sort.bind(this));\r\n            childNodes.forEach(n => {\r\n                if (n.children && n.children.length) {\r\n                    n.children = n.children.sort(this._sort.bind(this));\r\n                    sortChildNodes(n.children);\r\n                }\r\n            });\r\n            return childNodes;\r\n        };\r\n\r\n        sortedData.forEach(c => {\r\n            c.children = sortChildNodes(c.children);\r\n        });\r\n\r\n        this.loadData(sortedData);\r\n    }\r\n\r\n    onSortColumnClick($event, col) {\r\n        if (!col.sortable) {\r\n            return;\r\n        }\r\n        const sortName = this.sortName;\r\n        const sortOrder = this.sortOrder;\r\n        let sortFields = [];\r\n        let sortOrders = [];\r\n        if (sortName) {\r\n            sortFields = sortName.split(',');\r\n            sortOrders = sortOrder.split(',');\r\n        }\r\n\r\n        const colOrder = col.order || 'asc';\r\n        let newOrder = colOrder;\r\n        const i = sortFields.findIndex(n => n === col.field);\r\n        if (i >= 0) {\r\n            const _order = sortOrders[i] === 'asc' ? 'desc' : 'asc';\r\n            newOrder = _order;\r\n            // if (this.multiSort && newOrder === 'asc') {\r\n            if (newOrder === 'asc') {\r\n                newOrder = undefined;\r\n                sortFields.splice(i, 1);\r\n                sortOrders.splice(i, 1);\r\n            } else {\r\n                sortOrders[i] = _order;\r\n            }\r\n\r\n        } else {\r\n            if (this.multiSort) {\r\n                sortFields.push(col.field);\r\n                sortOrders.push(colOrder);\r\n            } else {\r\n                sortFields = [col.field];\r\n                sortOrders = [colOrder];\r\n            }\r\n        }\r\n\r\n        col.order = newOrder;\r\n\r\n        this.sortName = sortFields.join(',');\r\n        this.sortOrder = sortOrders.join(',');\r\n\r\n        if (!this.multiSort) {\r\n\r\n            const updateFieldOrder = (cols: TreeTableColumn[]) => {\r\n                if (!cols || !cols.length) {\r\n                    return;\r\n                }\r\n                cols.forEach(c => {\r\n                    c.order = undefined;\r\n                    const k = sortFields.findIndex(f => f === c.field);\r\n                    if (k >= 0) {\r\n                        c.order = sortOrders[k];\r\n                    }\r\n                });\r\n            };\r\n\r\n            updateFieldOrder(this.columns);\r\n            this.cdRef.detectChanges();\r\n        }\r\n\r\n        this.beforeSortColumn(this.sortName, this.sortOrder).subscribe(() => {\r\n            if (this.remoteSort) {\r\n                // this.reload();\r\n            } else {\r\n                this.clientSort();\r\n            }\r\n\r\n            this.columnSorted.emit({ sortName: this.sortName, sortOrder: this.sortOrder });\r\n        });\r\n    }\r\n\r\n    /** æ¥è¯¢å·¥å·æ¡åç«¯å­ç¬¦æ¥è¯¢ */\r\n    findKeyWords($event) {\r\n        const searchValue = $event.value;\r\n        const field = $event.field;\r\n        this.findField = field;\r\n        if (searchValue && searchValue.length >= 2) {\r\n            this.findValue = searchValue;\r\n\r\n            if (!field) {\r\n                this.writeConsole('Please set a field for the FindField property.', 'warn');\r\n                return;\r\n            }\r\n\r\n            const result = this.searchHandle.searchOnClient(field, searchValue, this.state.rowNodes);\r\n\r\n            if (result && result.length) {\r\n                this.findResult = result.sort((a, b) => a.index === b.index ? 0 : (a.index > b.index ? 1 : -1));\r\n                this.findCount = result.length;\r\n                this.findCurrent = 1;\r\n    \r\n                this._scrollToNode(result[0].id);\r\n\r\n                this.highLightKeywords();\r\n            } else {\r\n                this.findResult = [];\r\n                this.findCurrent = 0;\r\n                this.findCount = 0;\r\n            }\r\n        } else {\r\n            this.resetFindText();\r\n            this.cdRef.detectChanges();\r\n        }\r\n    }\r\n\r\n\r\n    nextFindValue(step) {\r\n        if (!this.findResult || !this.findResult.length) {\r\n            return;\r\n        }\r\n        const allHighLights = Array.from(this.el.nativeElement.querySelectorAll('.search-highlight'));\r\n\r\n        if (this.findCurrent === this.findResult.length) {\r\n            this.findCurrent = 1;\r\n        } else {\r\n            if (step) {\r\n                this.findCurrent = this.findCurrent + step;\r\n                if (step === -1) {\r\n                    if (this.findCurrent <= 0) {\r\n                        this.findCurrent = 1;\r\n                    }\r\n                }\r\n            } else {\r\n                this.findCurrent++;\r\n            }\r\n        }\r\n\r\n        const active = this.el.nativeElement.querySelector('.search-highlight.active');\r\n\r\n        if (active) {\r\n            this.renderer.removeClass(active, 'active');\r\n        }\r\n\r\n        const _index = this.findCurrent - 1;\r\n        const nextRow = this.findResult[_index];\r\n        if (nextRow) {\r\n            this._scrollToNode(nextRow.id);\r\n\r\n            if (this.virtualized) {\r\n                this.ngZone.runOutsideAngular(() => {\r\n                    if (this['HIGH_LIGHT_TIMER']) {\r\n                        clearTimeout(this['HIGH_LIGHT_TIMER']);\r\n                    }\r\n                    this['HIGH_LIGHT_TIMER'] = setTimeout(() => {\r\n                        const trId = 'rownode-' + nextRow.id;\r\n                        const tr = this.el.nativeElement.querySelector('#' + trId);\r\n                        if (tr) {\r\n                            const highLightDom = tr.querySelector('.search-highlight');\r\n                            if (highLightDom) {\r\n                                this.renderer.addClass(highLightDom, 'active');\r\n                            }\r\n                        }\r\n                    }, 100);\r\n                });\r\n            } else {\r\n                if (allHighLights[_index]) {\r\n                    this.renderer.addClass(allHighLights[_index], 'active');\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    /** æ¥è¯¢å·¥å·æ¡åç«¯å­ç¬¦æ¥è¯¢ */\r\n    /*\r\n    findKeyWords($event) {\r\n        const searchValue = $event.value;\r\n        const field = $event.field;\r\n        this.findField = field;\r\n        if (searchValue && searchValue.length >= 2) {\r\n            this.findValue = searchValue;\r\n\r\n            if (!field) {\r\n                this.writeConsole('Please set a field for the FindField property.', 'warn');\r\n                return;\r\n            }\r\n\r\n            const result = this.searchHandle.searchOnClient(field, searchValue, this.state.rowNodes);\r\n\r\n            if (result && result.length) {\r\n                this.findResult = result.sort((a, b) => a.index === b.index ? 0 : (a.index > b.index ? 1 : -1));\r\n                const firstRowIndex = result[0].index;\r\n\r\n                this.findCount = result.length;\r\n\r\n                const parents = this.searchHandle.findParents(result, this.state.rowNodes);\r\n\r\n                this.findCurrent = 1;\r\n                [...parents, ...result].forEach((r: RowNode) => {\r\n                    this.expandNode(r.id);\r\n                });\r\n\r\n                let y = 0;\r\n                this.state.rowNodes.forEach((row: RowNode, index: number) => {\r\n                    if (row.visible && firstRowIndex > index) {\r\n                        y += this.rowHeight;\r\n                    }\r\n                });\r\n                if (this.psRef && this.psRef.directiveRef) {\r\n                    this.psRef.directiveRef.scrollToY(y - 30);\r\n                }\r\n\r\n                this.highLightKeywords();\r\n            } else {\r\n                this.findResult = [];\r\n                this.findCurrent = 0;\r\n                this.findCount = 0;\r\n            }\r\n        } else {\r\n            this.resetFindText();\r\n            this.cdRef.detectChanges();\r\n        }\r\n    }\r\n\r\n    nextFindValue(step) {\r\n        if (!this.findResult || !this.findResult.length) {\r\n            return;\r\n        }\r\n        const allHighLights = Array.from(this.el.nativeElement.querySelectorAll('.search-highlight'));\r\n\r\n        if (this.findCurrent === this.findResult.length) {\r\n            this.findCurrent = 1;\r\n        } else {\r\n            if (step) {\r\n                this.findCurrent = this.findCurrent + step;\r\n                if (step === -1) {\r\n                    if (this.findCurrent <= 0) {\r\n                        this.findCurrent = 1;\r\n                    }\r\n                }\r\n            } else {\r\n                this.findCurrent++;\r\n            }\r\n        }\r\n\r\n        const active = this.el.nativeElement.querySelector('.search-highlight.active');\r\n\r\n        let _index = allHighLights.indexOf(active);\r\n\r\n        if (active) {\r\n            this.renderer.removeClass(active, 'active');\r\n        }\r\n\r\n        if (this.virtualized) {\r\n\r\n            _index += !step ? 1 : step;\r\n\r\n            if (allHighLights[_index]) {\r\n                this.renderer.addClass(allHighLights[_index], 'active');\r\n\r\n            } else {\r\n                // åæ»å¨æå®ä½ç½®\r\n                const nextRow = this.findResult[this.findCurrent - 1];\r\n                let y = 0;\r\n                this.state.rowNodes.forEach((row: RowNode, index: number) => {\r\n                    if (row.visible && nextRow.index > index) {\r\n                        y += this.rowHeight;\r\n                    }\r\n                });\r\n\r\n                if (this.psRef && this.psRef.directiveRef) {\r\n                    this.psRef.directiveRef.scrollToY(y - 30, 200);\r\n                }\r\n                this.ngZone.runOutsideAngular(() => {\r\n                    setTimeout(() => {\r\n                        const keyWords = this.el.nativeElement.querySelectorAll('.search-highlight');\r\n                        this.renderer.addClass(keyWords[0], 'active');\r\n                    }, 100);\r\n                });\r\n            }\r\n        } else {\r\n            const currentEl: any = allHighLights[this.findCurrent - 1];\r\n            if (currentEl) {\r\n                this.renderer.addClass(currentEl, 'active');\r\n                if (this.psRef && this.psRef.directiveRef) {\r\n                    const sTop = currentEl.closest('td').offsetTop - 30;\r\n                    this.psRef.directiveRef.scrollToY(sTop, 200);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        this.cdRef.detectChanges();\r\n    }\r\n*/\r\n    closeFindPanel() {\r\n        this.showFindInput = false;\r\n        this.resetFindText();\r\n        this.cdRef.detectChanges();\r\n    }\r\n\r\n    private highLightKeywords() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            setTimeout(() => {\r\n                this.cdRef.detectChanges();\r\n                const allHighLights = this.el.nativeElement.querySelectorAll('.search-highlight');\r\n                if (!allHighLights.length) {\r\n                    return;\r\n                }\r\n                this.renderer.addClass(allHighLights[0], 'active');\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    private resetFindText() {\r\n        this.findValue = '';\r\n        this.findCurrent = 0;\r\n        this.findCount = 0;\r\n        this.findResult = [];\r\n    }\r\n\r\n  \r\n\r\n    scrollToY(y: number, animations = 200) {\r\n        this.state.scrollY = y || 0;\r\n        this.psRef.directiveRef.scrollToY(y, animations);\r\n    }\r\n\r\n    private showOrHideColumn(field: string | string[], isHide: boolean) {\r\n        if (Array.isArray(field)) {\r\n            this.columns.forEach(n => {\r\n                if (field.indexOf(n.field) > -1) {\r\n                    n.visible = !isHide;\r\n                }\r\n            });\r\n        } else {\r\n            this.columns.forEach(n => {\r\n                if (field === n.field) {\r\n                    n.visible = !isHide;\r\n                }\r\n            });\r\n        }\r\n\r\n        this.columnsChanged();\r\n    }\r\n\r\n    showColumn(field: string | string[]) {\r\n        this.showOrHideColumn(field, false);\r\n    }\r\n\r\n    hideColumn(field: string | string[]) {\r\n        this.showOrHideColumn(field, true);\r\n    }\r\n\r\n    showChildsLoading(parentNode: TreeNode) {\r\n        const colspan = this.columns.filter(n => n.visible !== false).length;\r\n        const data = { [this.idField]: 'æ­£å¨å è½½ä¸­....', __colspan__: colspan };\r\n        this.loadChildren([{ data, __childs_loading__: true }], parentNode, false);\r\n    }\r\n\r\n    onChildsPageChanged($event) {\r\n        this.childsPageChanged.emit($event);\r\n    }\r\n\r\n    private trId2DataId(tr) {\r\n        return tr.id.replace('rownode-', '');\r\n    }\r\n\r\n\r\n    // å¿«æ·é®\r\n    onKeydownEvent($event) {\r\n        if (!$event || !this.singleSelect || !this.data || !this.data.length) {\r\n            return;\r\n        }\r\n\r\n        const keys = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\r\n\r\n        if (!keys.includes($event.key) || $event.target.nodeName === 'INPUT') {\r\n            return;\r\n        }\r\n\r\n        $event.stopPropagation();\r\n        $event.preventDefault();\r\n        this.inputGroup.textbox.nativeElement.blur();\r\n        let newIdx;\r\n        const trs = Array.from(this.bodyTable.nativeElement.querySelectorAll('tr'));\r\n        const trCount = trs.length;\r\n        let selectedTrIndex = -1;\r\n\r\n        if (this.selectedRow) {\r\n            selectedTrIndex = trs.findIndex((n: any) => this.trId2DataId(n) === this.selectedRow.id);\r\n        }\r\n\r\n        if ($event.code === 'ArrowDown') {\r\n            newIdx = selectedTrIndex + 1;\r\n        } else if ($event.code === 'ArrowUp') {\r\n            if (selectedTrIndex !== -1) {\r\n                newIdx = selectedTrIndex - 1;\r\n            }\r\n        } else {\r\n            if (this.selectedRow && ($event.code === 'ArrowRight' || $event.code === 'ArrowLeft')) {\r\n                this.toggleExpand(this.selectedRow);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (newIdx >= 0 && newIdx < trCount) {\r\n            const _tr = trs[newIdx] as any;\r\n            if (_tr) {\r\n                const id = this.trId2DataId(_tr);\r\n                this.selectNode(id);\r\n                _tr.scrollIntoView({ block: 'nearest' });\r\n            }\r\n        }\r\n    }\r\n\r\n    onBeforeShowContextMenu = (e: any) => {\r\n        // row_1_fixedleft  row_1  row_1_fixedright\r\n        const { contextMenuDom, event } = e;\r\n\r\n        let rowID = event.target.id;\r\n\r\n        if (contextMenuDom) {\r\n            rowID = this.trId2DataId(contextMenuDom);\r\n            const rowNode = this.findRowNode(rowID);\r\n\r\n            let go$ = of({show: true});\r\n            if (this.beforeShowContextMenu) {\r\n                go$ = this.beforeShowContextMenu({ data: rowNode, tree: this });\r\n            }\r\n\r\n            return go$.pipe(\r\n                switchMap((r: any) => {\r\n                    if (r.show) {\r\n\r\n                        if (r.menus) {\r\n                            this.contextMenuItems = r.menus;\r\n                            this.detectChanges();\r\n                        }\r\n\r\n                        const viewportW = contextMenuDom.closest('.farris-treetable').offsetWidth;\r\n                        const targetW = contextMenuDom.offsetWidth;\r\n\r\n                        const focusTargetWidth = viewportW > targetW ? targetW : viewportW;\r\n                        return of({ show: true, data: { data: rowNode, tree: this }, focusTargetWidth });\r\n                    } else {\r\n                        return of({ show: false });\r\n                    }\r\n                })\r\n            );\r\n        }\r\n        return of({ show: false });\r\n    }\r\n\r\n    /** æ ¹æ®ä¼ å¥çç¶çº§IDï¼è·åææå­çº§èç¹ */\r\n    getChildNodes(parentId: string): TreeNode[] {\r\n        let nodes = [];\r\n        if (parentId) {\r\n            const rowNode = this.findRowNode(parentId);\r\n            if (rowNode && rowNode.node.children && rowNode.node.children.length) {\r\n                rowNode.node.children.forEach((tn: TreeNode) => {\r\n                    if (tn.selectable) {\r\n                        nodes.push(tn);\r\n                    }\r\n                    nodes = nodes.concat(this.getChildNodes(tn.id));\r\n                });\r\n            }\r\n\r\n            return nodes;\r\n        }\r\n        return []\r\n    }\r\n\r\n    /** æ ¹æ®ä¼ å¥çèç¹IDï¼ è·åææç¶çº§èç¹ */\r\n    getParentNodes(id: string): RowNode[] {\r\n        let nodes = [];\r\n        if (id) {\r\n            const rowNode = this.findRowNode(id);\r\n            if (rowNode && rowNode.parents && rowNode.parents.length) {\r\n                rowNode.parents.forEach((n) => {\r\n                    const rn = this.findRowNode(n);\r\n                    if (rn && rn.node.selectable) {\r\n                        nodes.push(rn);\r\n                    }\r\n                })\r\n            }\r\n\r\n            return nodes;\r\n        }\r\n        return []\r\n    }\r\n\r\n    onFilterRowInput($event, col) {\r\n        this.filterRowConditions = this.filterRowConditions || {};\r\n        this.filterRowConditions[col.field] = $event.target.value;\r\n\r\n        Object.keys(this.filterRowConditions).forEach(n => {\r\n            if (this.filterRowConditions[n] === '' || this.filterRowConditions[n] == null) {\r\n                delete this.filterRowConditions[n];\r\n            }\r\n        });\r\n\r\n        if (this['FILTERCONDITIONS_CHANGED_TIMER']) {\r\n            clearTimeout(this['FILTERCONDITIONS_CHANGED_TIMER']);\r\n        }\r\n\r\n        this['FILTERCONDITIONS_CHANGED_TIMER'] = setTimeout(() => {\r\n            this.searchHandle.searchWithConditions(this.filterRowConditions);\r\n            this.setNewColumnsWidth();\r\n        }, 200);\r\n    }\r\n}\r\n\r\n\r\n@Component({\r\n    selector: '[treeTableBody]',\r\n    template: `\r\n        <ng-template ngFor let-serializedNode let-rowIndex=\"index\" [ngForOf]=\"tt.serializedValue\">\r\n            <ng-container *ngIf=\"serializedNode.visible\">\r\n                <ng-container\r\n                    *ngTemplateOutlet=\"template;\r\n                        context: {$implicit: serializedNode, node: serializedNode.node,\r\n                        rowData: serializedNode.node.data, rowIndex: rowIndex, columns: columns}\">\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-template>\r\n    `\r\n})\r\nexport class TTBodyComponent {\r\n    /**\r\n     * åéå\r\n     */\r\n    @Input() columns: any[];\r\n\r\n    /** è¡¨ä½æ¨¡æ¿ */\r\n    @Input() template: TemplateRef<any>;\r\n\r\n\r\n    constructor(public tt: TreeTableComponent) { }\r\n}\r\n\r\n// [style.marginLeft]=\"rowNode.level * 16 + 'px'\"\r\n\r\n/**\r\n * æ èç¹å±å¼æå \r\n */\r\n@Component({\r\n    selector: 'farris-treeTableToggler',\r\n    template: `\r\n    <a #toggler style=\"cursor: pointer\"\r\n            class=\"treenode-fold\" *ngIf=\"showLines\"\r\n            [ngClass]=\"rowNode.node.expanded ? tt.unfoldIcon : tt.foldIcon\"\r\n            [style.display]=\"isShowTriangle ? '' : 'none'\"\r\n            (click)=\"onClick($event)\"></a>\r\n\r\n    <a #toggler style=\"cursor: pointer\"\r\n            class=\"treenode-fold\"  *ngIf=\"!showLines\"\r\n            [ngClass]=\"rowNode.node.expanded ? tt.unfoldIcon : tt.foldIcon\"\r\n            [style.marginLeft.px]=\"rowNode.level * indentSpacing\"\r\n            [style.visibility]=\"isShowTriangle ? 'visible' : 'hidden'\"\r\n            (click)=\"onClick($event)\"></a>\r\n    <span class=\"tree-icon-line\" [style.display]=\"isShowTriangle && showLines? '' : 'none'\"></span>\r\n    <span [style.display]=\"(tt.showIcon && rowNode.node.showIcon) ? 'inline-block': 'none'\" class=\"treenode-icon\" [ngClass]=\"treeNodeIcon\"></span>\r\n\r\n    <tt-checkbox  [rowNode]=\"rowNode\" *ngIf=\"tt.showCheckbox\" [disabled]=\"disabled\" [checked]=\"rowNode.isChecked\" ></tt-checkbox>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None,\r\n    exportAs: 'ttToggler'\r\n})\r\nexport class TreeTableTogglerComponent implements OnInit, AfterViewInit, OnDestroy, DoCheck, OnChanges, AfterViewChecked {\r\n    @HostBinding('class.f-cmp-treetable-toggler') cls = true;\r\n    /**\r\n     * æ èç¹\r\n     */\r\n    @Input() rowNode: RowNode;\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() showLines = false;\r\n\r\n    @Input() indentSpacing = 16;\r\n\r\n    treeNodeIcon = {};\r\n    isShowTriangle = false;\r\n    noChilds = false;\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    get offsetWidth() {\r\n        return this.togglerEl.nativeElement.parentElement.offsetWidth;\r\n    }\r\n\r\n    @ViewChild('toggler') togglerEl: ElementRef;\r\n    constructor(public tt: TreeTableComponent, private ngzone: NgZone, private render: Renderer2) {\r\n    }\r\n    ngOnInit() {\r\n        this.treeNodeIcon = this.tt.getTreeIcon(this.rowNode.node);\r\n\r\n        this.isShowTriangle = this.showTriangle();\r\n        this.noChilds = this.hasChildren();\r\n        const expandSub = this.tt.expand.subscribe((node: TreeNode) => {\r\n            if (this.rowNode.id === node.data[this.tt.idField]) {\r\n                this.updateIcon(this.rowNode.node);\r\n                if (this.tt.psRef) {\r\n                    this.tt.psRef.directiveRef.update();\r\n                }\r\n                this.tt.detectChanges();\r\n            }\r\n        });\r\n\r\n        const collapseSub = this.tt.collapse.subscribe((node: TreeNode) => {\r\n            if (this.rowNode.id === node.data[this.tt.idField]) {\r\n                this.updateIcon(this.rowNode.node);\r\n                if (this.tt.psRef) {\r\n                    this.tt.psRef.directiveRef.update();\r\n                }\r\n                this.tt.detectChanges();\r\n            }\r\n        });\r\n\r\n        const addNewSub = this.tt.appendNew.subscribe((e: any) => {\r\n            if (e.parent) {\r\n                if (this.rowNode.id === e.parent.data[this.tt.idField]) {\r\n                    if (this.rowNode.node.leaf || this.rowNode.node.leaf === undefined) {\r\n                        this.rowNode.node.leaf = false;\r\n                    }\r\n                }\r\n\r\n                this.updateIcon(this.rowNode.node);\r\n            }\r\n        });\r\n\r\n        this.subscriptions = [expandSub, collapseSub, addNewSub];\r\n\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.showLines && !changes.showLines.isFirstChange()) {\r\n            if (this.showLines) {\r\n                this.render.setStyle(this.togglerEl.nativeElement, 'display', this.isShowTriangle ? '' : 'none');\r\n            } else {\r\n                this.render.removeStyle(this.togglerEl.nativeElement, 'display');\r\n            }\r\n            this.reSetLines();\r\n        }\r\n\r\n        if (changes.rowNode && !changes.rowNode.isFirstChange()) {\r\n            this.updateIcon(this.rowNode.node);\r\n\r\n            // if (changes.rowNode.currentValue.node.children) {\r\n            //     if (!!changes.rowNode.currentValue.node.children.length !== !!changes.rowNode.previousValue.node.children.length) {\r\n            //         this.reSetLines();\r\n            //     }\r\n            // }\r\n            if (this.tt.showLines) {\r\n                let currenChildrenLength = 0;\r\n                let previousChildrenLength = 0;\r\n                if (changes.rowNode.currentValue && changes.rowNode.currentValue.node.children ) {\r\n                    currenChildrenLength = changes.rowNode.currentValue.node.children.length;\r\n                }\r\n\r\n                if (changes.rowNode.previousValue && changes.rowNode.previousValue.node.children) {\r\n                    previousChildrenLength = changes.rowNode.previousValue.node.children.length;\r\n                }\r\n\r\n                if (currenChildrenLength != previousChildrenLength || (!currenChildrenLength && !previousChildrenLength)) {\r\n                    this.reSetLines();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (!this.tt.bodyTemplate && this.showLines) {\r\n            setTimeout(() => {\r\n                this.reSetLines();\r\n            });\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        // this.isShowTriangle = this.showTriangle();\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        // if (this.tt && this.tt.data) {\r\n        //     this.reSetLines();\r\n        // }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unAllSubscriptions();\r\n    }\r\n\r\n\r\n    private unAllSubscriptions() {\r\n        this.subscriptions.forEach(s => {\r\n            s.unsubscribe();\r\n        });\r\n        this.subscriptions = [];\r\n    }\r\n\r\n    hasChildren() {\r\n        const tn = this.rowNode.node;\r\n        return tn.leaf === false || this.rowNode.level !== 0 || (tn.children && tn.children.length > 0);\r\n    }\r\n\r\n    showTriangle(): boolean {\r\n        const tn = this.rowNode.node;\r\n\r\n        if (this.tt.loadDataType === 'all') {\r\n            return tn.leaf === false || (tn.children && tn.children.length > 0);\r\n        } else {\r\n            return tn.leaf === false;\r\n        }\r\n    }\r\n\r\n    reSetLines() {\r\n        if (this.togglerEl) {\r\n            const parentEl = this.togglerEl.nativeElement.closest('.treetable-cell-content');\r\n            if (parentEl) {\r\n                const lineEls = parentEl.querySelectorAll('.treetable-lines');\r\n                for (let k = 0; k < lineEls.length; k++) {\r\n                    lineEls[k].remove();\r\n                }\r\n            }\r\n        }\r\n\r\n        this._renderLines();\r\n    }\r\n\r\n    private _renderLines() {\r\n        if (!this.tt.bodyTemplate) {\r\n            if (this.showLines) {\r\n                this.renderLines();\r\n            } else {\r\n                // this.noLineStyle();\r\n            }\r\n        } else {\r\n            /*\r\n            if (this.togglerEl) {\r\n                if (this.togglerEl.nativeElement.closest('tr')) {\r\n                    const tds = this.togglerEl.nativeElement.closest('tr').querySelectorAll('td');\r\n                    Array.from(tds).forEach(n => {\r\n                        this.render.setStyle(n, 'padding', '0.25rem 0.75rem');\r\n                    });\r\n                }\r\n            } */\r\n        }\r\n    }\r\n\r\n\r\n    private noLineStyle() {\r\n        // this.cls = false;\r\n        if (this.togglerEl) {\r\n            // this.render.setStyle(this.togglerEl.nativeElement, 'margin-left', `${this.rowNode.level * this.indentSpacing}px`);\r\n            this.render.setStyle(this.togglerEl.nativeElement, 'visibility', this.isShowTriangle ? 'visible' : 'hidden');\r\n            this.render.removeStyle(this.togglerEl.nativeElement, 'display');\r\n        }\r\n    }\r\n\r\n    private renderLines() {\r\n        const len = this.rowNode.level;\r\n        if ( !this.togglerEl) {\r\n            return;\r\n        }\r\n        const parentEl = this.togglerEl.nativeElement.closest('.treetable-cell-content');\r\n\r\n        if (!parentEl) {\r\n            return;\r\n        }\r\n\r\n        const referEl = this.togglerEl.nativeElement.parentElement;\r\n\r\n        if (len === 0 && !this.showTriangle()) {\r\n            this.createLeafNodeLines(referEl, parentEl, true);\r\n        }\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            parentEl.insertBefore(this.newLineElement(), referEl);\r\n\r\n            const nearLine = this.newLineElement(false);\r\n            parentEl.insertBefore(nearLine, referEl);\r\n\r\n            const isLeaf = !this.showTriangle();\r\n            if (isLeaf && i === len - 1) {\r\n                this.createLeafNodeLines(referEl, parentEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    private newLineElement(border = true) {\r\n        const newLineEl = this.render.createElement('div');\r\n        this.render.addClass(newLineEl, 'treetable-lines');\r\n\r\n        if (this.showLines) {\r\n            if (border) {\r\n                this.render.addClass(newLineEl, 'treetable-lines-border-color');\r\n            }\r\n        }\r\n        return newLineEl;\r\n    }\r\n\r\n    /**\r\n     * æé  â or â\r\n     */\r\n    private createLeafNodeLines(containerEl: HTMLElement, parentEl: Element, isTopNode = false) {\r\n        // â\r\n        // <div class=\"treetable-lines\" style=\"border-color: rgb(204, 204, 204);\"></div>\r\n        // <div class=\"treetable-lines treetable-lines-leaf\" style=\"border-color: transparent;\">\r\n        //     <div class=\"normal\"></div>\r\n        // </div>\r\n\r\n        // â\r\n        // <div class=\"treetable-lines\" style=\"border-color: transparent\"></div>\r\n        // <div class=\"treetable-lines treetable-lines-leaf\" style=\"border-color: transparent;\">\r\n        //     <div style=\"corner\"></div>\r\n        // </div>\r\n\r\n        const l1 = this.newLineElement();\r\n        const l2 = this.newLineElement(false);\r\n\r\n        this.render.addClass(l2, 'treetable-lines-leaf');\r\n        const dessert = this.render.createElement('div');\r\n\r\n        if (this.showLines) {\r\n            let cls = 'normal';\r\n            if (this.rowNode.last) {\r\n                cls = 'corner';\r\n                this.render.removeClass(l1, 'treetable-lines-border-color');\r\n            }\r\n            l2.appendChild(dessert);\r\n            this.render.addClass(dessert, cls);\r\n            this.render.addClass(dessert, 'treetable-lines-border-color');\r\n        }\r\n\r\n        parentEl.insertBefore(l1, containerEl);\r\n        parentEl.insertBefore(l2, containerEl);\r\n\r\n        if (isTopNode) {\r\n            this.render.setStyle(l2, 'marginRight', '3px');\r\n        }\r\n    }\r\n\r\n    private registerClickEvent() {\r\n        if (this.togglerEl) {\r\n            this.render.listen(this.togglerEl.nativeElement, 'click', this.onClick.bind(this));\r\n        }\r\n    }\r\n\r\n    onClick(event: Event) {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        if (this.rowNode.node['showLoading']) {\r\n            return false;\r\n        }\r\n\r\n        if (!this.tt.disabled) {\r\n            this.tt.toggleExpand(this.rowNode.node);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private updateIcon(treeNode: TreeNode) {\r\n        this.isShowTriangle = this.showTriangle();\r\n        this.noChilds = this.hasChildren();\r\n        this.treeNodeIcon = this.tt.getTreeIcon(treeNode);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * éä¸­è¡ç»ä»¶\r\n */\r\n@Directive({\r\n    selector: '[selectRow]',\r\n    exportAs: 'row'\r\n})\r\nexport class TreeTableSelectRowDirective implements DoCheck, OnDestroy, OnInit, OnChanges {\r\n\r\n    @Input('selectRow') rowNode: RowNode;\r\n    @Input() rowIndex: number;\r\n\r\n    @Input() selectRowDisabled: boolean;\r\n\r\n    subscription: Subscription;\r\n\r\n    public prevent = false;\r\n    public timer: any;\r\n    @Input() delay = 0;\r\n\r\n    constructor(public tt: TreeTableComponent, private el: ElementRef, private render: Renderer2, private ngZone: NgZone) {\r\n        this.subscription = this.tt.selectNodeChangedSubject.subscribe((ids: string) => {\r\n            if (ids && this.rowNode) {\r\n                const idArr = ids.split(',');\r\n                if (idArr.indexOf(this.rowNode.id) > -1) {\r\n                    this.toggleClass();\r\n                    this.rowNode.node['elementRef'] = this.el;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        // this.rowNode.node.selectable = !this.selectRowDisabled;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        // if (changes.selectRowDisabled && !changes.selectRowDisabled.isFirstChange()) {\r\n        //     this.rowNode.node.selectable = !changes.selectRowDisabled.currentValue;\r\n        // }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n            this.subscription = null;\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        if (this.tt.bodyTemplate) {\r\n            if (!this.tt.isSelected(this.rowNode.node)) {\r\n                this.render.removeClass(this.el.nativeElement, 'farris-table-selectedrow');\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onclick(event: MouseEvent) {\r\n        if (this.isEnabled()) {\r\n            // this.rowClick(event);\r\n            if (this.delay !== 0) {\r\n                if (!this.prevent) {\r\n                    this.prevent = true;\r\n                    this.timer = setTimeout(() => {\r\n                        this.rowClick(event);\r\n                        this.prevent = false;\r\n                    }, this.delay);\r\n                }\r\n            } else {\r\n                this.rowClick(event);\r\n            }\r\n        }\r\n\r\n        // event.stopPropagation();\r\n    }\r\n\r\n    isEnabled() {\r\n        return !this.tt.disabled && this.selectRowDisabled !== true;\r\n    }\r\n\r\n    private rowClick(event: Event) {\r\n        event.stopPropagation();\r\n\r\n        this.tt.beforeClickNode({ instance: this.tt, rowNode: this.rowNode, event, type: 'row' }).subscribe((e: boolean) => {\r\n            if (!e) { return; }\r\n            this.tt.handleRowClick({\r\n                originalEvent: event,\r\n                rowNode: this.rowNode,\r\n                rowIndex: this.rowIndex\r\n            });\r\n\r\n            this.ngZone.runOutsideAngular(() => {\r\n                this.toggleClass();\r\n            });\r\n        });\r\n    }\r\n\r\n    toggleClass() {\r\n        if (!this.tt.bodyTemplate) {\r\n            if (this.tt.isSelected(this.rowNode.node)) {\r\n                if (this.tt.singleSelect) {\r\n                    this.tt.el.nativeElement.querySelectorAll('.farris-treetable-tbody>tr.farris-table-selectedrow').forEach(n => {\r\n                        this.render.removeClass(n, 'farris-table-selectedrow');\r\n                    });\r\n                }\r\n                this.render.addClass(this.el.nativeElement, 'farris-table-selectedrow');\r\n            } else {\r\n                if (!this.tt.keepSelect) {\r\n                    this.render.removeClass(this.el.nativeElement, 'farris-table-selectedrow');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * è¡¨å¤´å¨éç»ä»¶\r\n */\r\n@Component({\r\n    selector: 'tt-header-checkbox',\r\n    template: `\r\n    <div class=\"custom-control custom-checkbox  custom-control-inline tt-checkbox\" style=\"top: -2px;\">\r\n        <input type=\"checkbox\" #chkAll class=\"custom-control-input\"  [checked]=\"checked\">\r\n        <label class=\"custom-control-label\" (click)=\"handleClick($event)\"></label>\r\n    </div>\r\n    `,\r\n    styles: [\r\n        `\r\n        :host {\r\n            vertical-align: middle;\r\n        }\r\n        `\r\n    ]\r\n})\r\nexport class TreeTableHeaderCheckboxComponent implements OnInit {\r\n    @Input() checked: boolean;\r\n    @Input() disabled: boolean;\r\n\r\n    @Output() checkedChange = new EventEmitter();\r\n\r\n    @ViewChild('chkAll') chkAll: ElementRef;\r\n\r\n    constructor(public tt: TreeTableComponent, public ttService: TreetableService) {\r\n    }\r\n\r\n    ngOnInit() { }\r\n\r\n    handleClick(event) {\r\n        if (!this.disabled && !this.tt.disabled) {\r\n            const beforeEvent = !this.checked ? this.tt.beforeCheckAll : this.tt.beforeUnCheckAll;\r\n            this.tt['checkall_CLICKED'] = true;\r\n            beforeEvent({ instance: this.tt, checked: !this.checked }).subscribe(e => {\r\n                // å¨éåè½\r\n                this.chkAll.nativeElement.indeterminate = false;\r\n                this.checked = !this.checked;\r\n                this.tt.toggleNodesWithCheckbox(event, this.checked);\r\n                setTimeout(() => {\r\n                    this.tt['checkall_CLICKED'] = false;\r\n                }, 50);\r\n            });\r\n        }\r\n        event.stopPropagation();\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * è¡¨ä½checkbox ç»ä»¶\r\n */\r\n@Component({\r\n    selector: 'tt-checkbox',\r\n    template: `\r\n    <div class=\"custom-control custom-checkbox  custom-control-inline tt-checkbox\">\r\n        <input type=\"checkbox\" #chk class=\"custom-control-input\" [disabled]=\"disabled\" [checked]=\"checked\">\r\n        <label class=\"custom-control-label\" (click)=\"handleClick($event)\"></label>\r\n    </div>\r\n    `,\r\n    styles: [\r\n        `\r\n        :host {\r\n            vertical-align: middle;\r\n        }\r\n        :host .custom-checkbox {\r\n            opacity: 1;\r\n            float: none;\r\n        }\r\n        `\r\n    ]\r\n})\r\nexport class TreeTableCheckboxComponent implements OnInit, OnDestroy {\r\n    @HostBinding('class.tree-toggler-checkbox') cls1 = true;\r\n    @Input() checked: boolean;\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() rowNode: RowNode;\r\n\r\n    @Output() checkedChange = new EventEmitter();\r\n\r\n    @ViewChild('chk') chk: ElementRef;\r\n    destroy$ = new Subject();\r\n    constructor(public tt: TreeTableComponent, public ttService: TreetableService) {\r\n        this.ttService = this.tt.ttService;\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n    ngOnInit() {\r\n        this.chk.nativeElement.indeterminate = this.rowNode.indeterminate || false;\r\n\r\n        this.ttService.changeCheckboxStatus$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).pipe(\r\n            map(n => {\r\n                if (n.id === this.rowNode.id) {\r\n                    return n;\r\n                }\r\n                return null;\r\n            })\r\n        ).subscribe(n => {\r\n            if (n) {\r\n                this.chk.nativeElement.indeterminate = n.indeterminate;\r\n                this.checked = n.isChecked;\r\n                this.chk.nativeElement.checked = this.checked;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    handleClick(event) {\r\n        event.stopPropagation();\r\n        if (!this.disabled) {\r\n            this.tt.beforeClickNode({ instance: this.tt, rowNode: this.rowNode, event, type: 'checkbox' }).subscribe((e: boolean) => {\r\n                if (!e) { return; }\r\n                this.checked = !this.checked;\r\n                if (this.tt.singleSelect) {\r\n                    this.tt.clearAll();\r\n                    if (this.checked) {\r\n                        this.tt.selectNode(this.rowNode.id, true);\r\n                    } else {\r\n                        this.tt.unSelectNode(this.rowNode.id, true);\r\n                    }\r\n                } else {\r\n                    this.tt.toggleNodeWithCheckbox(event, this.rowNode, this.checked);\r\n                }\r\n            });\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[dblclick]'\r\n})\r\nexport class DblClickRowDirective implements OnInit {\r\n    @Input('dblclick') enableDblClick = false;\r\n    @Input() dblclickNode: RowNode;\r\n\r\n    constructor(\r\n        public tt: TreeTableComponent, public el: ElementRef, public ttService: TreetableService,\r\n        @Optional() @Self() public selectRowDir: TreeTableSelectRowDirective) {\r\n            this.ttService = this.tt.ttService;\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.enableDblClick) {\r\n            this.selectRowDir.delay = 0;\r\n        } else {\r\n            this.selectRowDir.delay = 200;   \r\n        }\r\n    }\r\n\r\n\r\n    @HostListener('dblclick', ['$event'])\r\n    ondblclick(event: Event) {\r\n        const prevEl = ( event.target as any).previousSibling;\r\n        if (prevEl && prevEl.type === 'checkbox') {\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.tt.disabled) {\r\n            return false;\r\n        }\r\n\r\n        if (this.tt.multiSelect && this.dblclickNode) {\r\n            if (this.dblclickNode.node.leaf) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        const clsName = event.target['className'];\r\n\r\n        let togglerTag = null;\r\n        if (clsName.indexOf('f-cmp-treetable-toggler') > -1) {\r\n            togglerTag = event.target['querySelector']('.treenode-fold');\r\n        } else {\r\n            if (event.target['className'].indexOf('treenode-fold') > -1) {\r\n                togglerTag = event.target as any;\r\n            }\r\n        }\r\n\r\n        if (togglerTag && togglerTag.style.visibility === 'visible') {\r\n            return false;\r\n        }\r\n\r\n        if (this.selectRowDir) {\r\n            this.selectRowDir.prevent = false;\r\n            clearTimeout(this.selectRowDir.timer);\r\n            if (this.selectRowDir.rowNode && this.enableDblClick) {\r\n                const rn = this.selectRowDir.rowNode;\r\n                if (rn.node.children && rn.node.children.length && !rn.node.leaf && this.tt.dblClickExpand) {\r\n                    this.tt.toggleExpand(rn.node);\r\n                }\r\n                this.tt.dblClick.emit(rn.node);\r\n            }\r\n        }\r\n\r\n        // event.stopPropagation();\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[customRowStyle]'\r\n})\r\nexport class CustomRowStyleDirective implements OnInit, OnChanges {\r\n    @Input('customRowStyle') rowNode: RowNode;\r\n    @Input('field') col: TreeTableColumn;\r\n\r\n    constructor(private injector: Injector, private ngZone: NgZone,\r\n        private el: ElementRef, private tt: TreeTableComponent,\r\n        public utils: CommonUtils, private render: Renderer2) {\r\n    }\r\n    ngOnInit() {\r\n        if (this.col && this.tt.fixedColumns && this.tt.fixedHeader && this.col.fixed) {\r\n            if (this.col.fixed === 'left' || this.col.fixed === 'right') {\r\n                this.setRowStyle();\r\n            }\r\n            return;\r\n        } else {\r\n            this.setRowStyle();\r\n        }\r\n    }\r\n\r\n    private setRowStyle() {\r\n        const fn = this.tt.rowStyler;\r\n        if (fn) {\r\n            const sty = fn(this.rowNode.node);\r\n            if (sty) {\r\n                if (typeof sty === 'object' && (sty.style || sty.cls)) {\r\n                    if (sty.style) {\r\n                        Object.keys(sty.style).forEach(s => {\r\n                            this.render.setStyle(this.el.nativeElement, s, sty.style[s]);\r\n                        });\r\n                    }\r\n\r\n                    if (sty.cls) {\r\n                        sty.cls.split(',').forEach(c => {\r\n                            this.render.addClass(this.el.nativeElement, c);\r\n                        });\r\n                    }\r\n\r\n                } else {\r\n                    if (Array.isArray(sty) || typeof sty === 'string') {\r\n                        const cls = this.tt.getRowCls(this.rowNode);\r\n                        if (cls && Object.keys(cls).length) {\r\n                            Object.keys(cls).forEach(c => {\r\n                                if (cls[c]) {\r\n                                    this.render.addClass(this.el.nativeElement, c);\r\n                                }\r\n                            });\r\n                        }\r\n                    } else {\r\n                        Object.keys(sty).forEach(s => {\r\n                            this.render.setStyle(this.el.nativeElement, s, sty[s]);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.rowNode && !changes.rowNode.isFirstChange()) {\r\n            this.setRowStyle();\r\n        }\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[customCellStyle]'\r\n})\r\nexport class TTCustomCellStyleDirective implements OnInit, OnChanges {\r\n    @Input('customCellStyle') column: TreeTableColumn;\r\n    @Input() rowNode: RowNode;\r\n    @Input() rowIndex: any;\r\n\r\n    constructor(private injector: Injector, private ngZone: NgZone,\r\n        private el: ElementRef, private tt: TreeTableComponent,\r\n        public utils: CommonUtils, private render: Renderer2) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.tt && this.tt.getCellCls) {\r\n            this.setCellStyle();\r\n        }\r\n\r\n        if (!this.tt.showBorder && this.tt.columns.length === 1) {\r\n            this.render.setStyle(this.el.nativeElement, 'border-width', '0px');\r\n        }\r\n    }\r\n\r\n    private setCellStyle() {\r\n        const cellCls = this.tt.getCellCls(this.rowNode, this.column.field);\r\n        if (this.column && this.column.styler) {\r\n            if (cellCls && Object.keys(cellCls).length) {\r\n                Object.keys(cellCls).forEach(c => {\r\n                    if (cellCls[c]) {\r\n                        this.render.addClass(this.el.nativeElement, c);\r\n                    }\r\n                });\r\n            }\r\n\r\n            const rowData = this.rowNode.node.data;\r\n            const ccs = this.column.styler(this.utils.getValue(this.column.field, rowData), rowData, this.rowIndex, this.rowNode);\r\n            if (ccs) {\r\n                if (ccs.style || ccs.cls) {\r\n                    if (ccs.style) {\r\n                        Object.keys(ccs.style).forEach(s => {\r\n                            this.render.setStyle(this.el.nativeElement, s, ccs.style[s]);\r\n                        });\r\n                    }\r\n\r\n                    if (ccs.cls) {\r\n                        ccs.cls.split(',').forEach(c => {\r\n                            if (c[0] === '!') {\r\n                                this.render.removeClass(this.el.nativeElement, c.substring(1));\r\n                            } else {\r\n                                this.render.addClass(this.el.nativeElement, c);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            \r\n            let _sty = cellCls || {};\r\n            const rowStyle = this.tt.getRowCls(this.rowNode) || {};\r\n\r\n            const hasBackground = Object.keys(cellCls).find(n => {\r\n                return ['background', 'background-color', 'backgroundcolor'].indexOf(n.toLowerCase()) > -1;\r\n            });\r\n\r\n            let _rowStyles = rowStyle;\r\n            if (rowStyle.style) {\r\n                _rowStyles = rowStyle.style;\r\n            }\r\n\r\n            let _cellStyles = _sty;\r\n            if (_sty.style) {\r\n                _cellStyles = _sty.style;\r\n            }\r\n\r\n\r\n            if (hasBackground) {\r\n                _sty = Object.assign(_rowStyles, _cellStyles);\r\n            } else {\r\n                _sty = Object.assign(_cellStyles, _rowStyles);\r\n            }\r\n            \r\n            Object.keys(_sty).forEach(s => {\r\n                this.render.setStyle(this.el.nativeElement, s, _sty[s]);\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.rowNode && !changes.rowNode.isFirstChange()) {\r\n            this.setCellStyle();\r\n        }\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[resizable-column]'\r\n})\r\nexport class TTResizableColumnDirective implements AfterViewInit, OnDestroy, OnChanges {\r\n    @Input('resizable-column') enableResize = true;\r\n    resizer: HTMLSpanElement;\r\n    resizerMouseDownListener: any;\r\n    documentMouseMoveListener: any;\r\n    documentMouseUpListener: any;\r\n\r\n    constructor(\r\n        public tt: TreeTableComponent, public ngzone: NgZone,\r\n        public el: ElementRef, public render: Renderer2) {\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.isEnable()) {\r\n            this.render.addClass(this.el.nativeElement, 'resizable-column');\r\n\r\n            this.resizer = document.createElement('span');\r\n            this.resizer.className = 'column-resizer';\r\n            this.el.nativeElement.appendChild(this.resizer);\r\n\r\n            this.ngzone.runOutsideAngular(() => {\r\n                this.resizerMouseDownListener = this.onMouseDown.bind(this);\r\n                this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\r\n\r\n                this.el.nativeElement.addEventListener('mouseenter', this.onMouseEnter.bind(this));\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.enableResize && !changes.enableResize.isFirstChange()) {\r\n            if (!this.isEnable() && this.resizer) {\r\n                this.resizer.remove();\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnable() {\r\n        return this.tt.resizableColumns && !this.tt.autoWidth && this.enableResize;\r\n    }\r\n\r\n    bindDocumentEvents() {\r\n        this.ngzone.runOutsideAngular(() => {\r\n            this.documentMouseMoveListener = this.onMouseMove.bind(this);\r\n            document.addEventListener('mousemove', this.documentMouseMoveListener);\r\n\r\n            this.documentMouseUpListener = this.onMouseUp.bind(this);\r\n            document.addEventListener('mouseup', this.documentMouseUpListener);\r\n        });\r\n    }\r\n\r\n    unbindDocumentEvents() {\r\n        if (this.documentMouseMoveListener) {\r\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\r\n            this.documentMouseMoveListener = null;\r\n        }\r\n\r\n        if (this.documentMouseUpListener) {\r\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\r\n            this.documentMouseUpListener = null;\r\n        }\r\n    }\r\n\r\n    onMouseDown(event: Event) {\r\n        if (this.isEnable()) {\r\n            this.tt.onColumnResizeBegin(event);\r\n            this.bindDocumentEvents();\r\n        }\r\n    }\r\n\r\n    onMouseEnter() {\r\n    }\r\n\r\n    onMouseMove(event: Event) {\r\n        this.tt.onColumnResize(event);\r\n    }\r\n\r\n    onMouseUp(event: Event) {\r\n        this.tt.onColumnResizeEnd(event, this.el.nativeElement);\r\n        this.unbindDocumentEvents();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.resizerMouseDownListener) {\r\n            this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\r\n        }\r\n\r\n        this.unbindDocumentEvents();\r\n    }\r\n\r\n}\r\n","import { debounceTime, map, auditTime, filter } from 'rxjs/operators';\r\nimport { Component, OnInit, EventEmitter, Output, ElementRef,\r\n    ViewChild, OnDestroy, NgZone, Injector, AfterViewInit, Input } from '@angular/core';\r\nimport { Subscription, fromEvent } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'find-input',\r\n    template: `\r\n        <div class=\"f-find-input\" style=\"\">\r\n            <div class=\"input-group\">\r\n                <div class=\"input-group-prepend\">\r\n                    <select class=\"form-control\" [(ngModel)]=\"findField\">\r\n                        <option *ngFor=\"let col of columns\" value=\"{{col.field}}\">{{ col.title }}</option>\r\n                    </select>\r\n                </div>\r\n                <input #input type=\"text\" placeholder=\"è³å°2ä¸ªå­ç¬¦\" class=\"form-control\"\r\n                    (keydown.esc)=\"onClose($event)\" (keydown.enter)=\"onEnter($event, 0)\">\r\n                <div class=\"input-group-append\">\r\n                    <span class=\"input-group-text\">{{current}}/{{count}}</span>\r\n                    <button class=\"btn btn-outline-secondary\" type=\"button\" title=\"ä¸ä¸ä¸ª\"\r\n                        [disabled]=\"current === 0\" (click)=\"onEnter($event, -1)\">\r\n                        <span class=\"f-icon f-icon-arrow-chevron-up\"></span>\r\n                    </button>\r\n                    <button class=\"btn btn-outline-secondary\" type=\"button\" title=\"ä¸ä¸ä¸ª\"\r\n                    [disabled]=\"current === count\" (click)=\"onEnter($event, 1)\">\r\n                        <span class=\"f-icon f-icon-arrow-chevron-down\"></span>\r\n                    </button>\r\n                    <button class=\"btn btn-outline-secondary\" type=\"button\" title=\"å³é­\" (click)=\"onClose($event)\">\r\n                        <span class=\"f-icon f-icon-close\"></span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n        .f-find-input {\r\n            width: 300px; height: 40px; background: #fefefe; position: absolute; right: 0; z-index: 10; padding: 5px;\r\n            box-shadow: 0px 1px 7px 0px #bdbdbd;\r\n            border-radius: 6px;\r\n        }\r\n        .f-find-input .input-group-text { border-right: 1px solid #ccc; font-size: 10px }\r\n        .f-find-input .input-group-append { background: #fff; }\r\n        .f-find-input .input-group-append button { padding:1px 6px;}\r\n        .f-find-input .input-group-append button span{position: relative; top: 2px;}\r\n        `\r\n    ]\r\n})\r\nexport class FindInputComponent implements OnInit, OnDestroy, AfterViewInit {\r\n    @Input() current = 0;\r\n    @Input() count = 0;\r\n    @Input() columns = [];\r\n\r\n    @Output() close = new EventEmitter();\r\n    @Output() valueChanged = new EventEmitter();\r\n    @Output() enterHandler = new EventEmitter();\r\n\r\n    @ViewChild('input') input: ElementRef;\r\n    findField = '';\r\n    private keyupEventSub: Subscription = null;\r\n\r\n    constructor(private el: ElementRef, private ngZone: NgZone, private injector: Injector) { }\r\n\r\n    ngOnInit() {\r\n        if (this.columns.length) {\r\n            this.columns = this.columns.filter(c => !c.formatter && c.field);\r\n            this.findField = this.columns[0].field;\r\n        }\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.keyupEventSub = fromEvent(this.input.nativeElement, 'keyup').pipe(\r\n                filter((e: any) => (e.switch || e.keyCode) !== 13),\r\n                debounceTime(200),\r\n                map((e: any) => e.target.value)\r\n            ).subscribe((v) => {\r\n                this.valueChanged.emit({value: v, field: this.findField});\r\n            });\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.input.nativeElement.focus();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.keyupEventSub) {\r\n            this.keyupEventSub.unsubscribe();\r\n        }\r\n        this.keyupEventSub = null;\r\n    }\r\n\r\n    onClose(event) {\r\n        this.close.emit();\r\n        return false;\r\n    }\r\n\r\n    onEnter($event, step) {\r\n        this.enterHandler.emit(step);\r\n        return false;\r\n    }\r\n\r\n}\r\n","import { TreeTableComponent } from './../treetable.component';\r\nimport { Component, Input, OnInit, Injector, ChangeDetectorRef, EventEmitter, Output, OnChanges, SimpleChanges, DoCheck, ViewChild, ElementRef } from '@angular/core';\r\nimport { TreeNode } from '../types/treenode';\r\nimport { filter } from 'rxjs/operators';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'nodes-pager',\r\n    templateUrl: './nodes-pager.component.html',\r\n    styles: [\r\n        `\r\n        .treetable-nodes-pagerbar { height: 22px; line-height: 22px; list-style: none}\r\n        .treetable-nodes-pagerbar li { float: left; box-sizing: border-box; }\r\n        .treetable-nodes-pagerbar .pager-btn {\r\n            width: 22px;\r\n            height: 22px;\r\n            text-align: center;\r\n            border: 1px solid #ccc;\r\n            background: rgb(248 249 250);\r\n            cursor: pointer;\r\n        }\r\n        .treetable-nodes-pagerbar .pager-btn:hover {\r\n            background: white;\r\n        }\r\n        .treetable-nodes-pagerbar .prev {}\r\n        .treetable-nodes-pagerbar .next {\r\n            border-left: 0;\r\n        }\r\n\r\n        .pager-btn.disabled{\r\n            color: rgb(204 204 204);\r\n            pointer-events: none;\r\n        }\r\n        .treetable-nodes-pagerbar .pageinfo {\r\n            margin-right: 5px;\r\n            padding-left: 0;\r\n            font-weight: 400;\r\n            padding-right: 5px;\r\n        }\r\n\r\n        .treetable-nodes-pagerbar .page-index {\r\n            border: 0;\r\n            background: transparent;\r\n            outline: none;\r\n            appearance: none;\r\n            padding-left: 5px;\r\n            min-width: 50px;\r\n            position: absolute;\r\n            height: 20px;\r\n            text-align: left;\r\n            opacity: 0;\r\n            left: 0;\r\n        }\r\n\r\n        .treetable-nodes-pagerbar .page-number-list {\r\n            height: 20px;\r\n            min-width: 30px;\r\n            max-width: 50px;\r\n            overflow: hidden;\r\n            text-align: center;\r\n            position: relative;\r\n            border-bottom: 1px solid #ced4da;\r\n        }\r\n        `\r\n    ]\r\n})\r\nexport class TreetableNodesPagerComponent implements OnInit, OnChanges {\r\n    @Input() disabled = false;\r\n    @Input() context: any;\r\n    @ViewChild('pagerList') pagerListEl: ElementRef<any>;\r\n    @Output() pageChange = new EventEmitter();\r\n    @Input() showTotal = false;\r\n\r\n    showPager = new BehaviorSubject(false);\r\n    pagerInfo = null;\r\n\r\n    get pagers() {\r\n        const c = this.getPagerCount();\r\n        if (c) {\r\n            return new Array(c);\r\n        }\r\n        return [];\r\n    }\r\n\r\n    constructor(private tt: TreeTableComponent,  private cd: ChangeDetectorRef, private injector: Injector) {\r\n        if (this.tt) {\r\n            this.tt.expand.pipe(\r\n                filter((node: any) => {\r\n                    return node.id === this.context.node.id && node.pagination && node.children.filter(n => !n.__childs_loading__).length;\r\n                })\r\n            ).subscribe(\r\n                (node: TreeNode) => {\r\n                    this.pagerInfo = {...node.pagination};\r\n                    this.showPager.next(true);\r\n                }\r\n            );\r\n\r\n            this.tt.appendNew.subscribe(\r\n                (e: any) => {\r\n                    const node = e.parent;\r\n                    if (node.id === this.context.node.id && node.pagination) {\r\n                        this.pagerInfo = {...node.pagination};\r\n                        this.showPager.next(true);\r\n                    }\r\n                }\r\n            );\r\n\r\n            this.tt.collapse.subscribe(\r\n                (node: TreeNode) => {\r\n                    if (node.id === this.context.node.id) {\r\n                        this.showPager.next(false);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.setPagerInfo();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.context && !changes.context.isFirstChange()) {\r\n            this.setPagerInfo();\r\n        }\r\n    }\r\n\r\n    private setPagerInfo() {\r\n        if (this.context) {\r\n            const { node } = this.context;\r\n            if (node && node.pagination) {\r\n                this.pagerInfo = { ...node.pagination };\r\n                this.showPager.next(\r\n                    node.expanded && node.pagination\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    getPagerCount() {\r\n        const { pageSize, total } = this.pagerInfo;\r\n        if (!total) {\r\n            return 0;\r\n        } else {\r\n            return Math.ceil(total / pageSize);\r\n        }\r\n    }\r\n\r\n    isFirstPager() {\r\n        return this.pagerInfo.pageIndex === 1;\r\n    }\r\n\r\n    isLastPager() {\r\n        return this.pagerInfo.pageIndex === this.getPagerCount();\r\n    }\r\n\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    previous($event: any) {\r\n        $event.stopPropagation();\r\n        this.setCurrent(this.pagerInfo.pageIndex - 1, this.pagerInfo.pageSize);\r\n    }\r\n\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    next($event: any) {\r\n        $event.stopPropagation();\r\n        this.setCurrent(this.pagerInfo.pageIndex + 1, this.pagerInfo.pageSize);\r\n    }\r\n\r\n    setCurrent(page: number, pageSize?: number, $event?: any) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.pageChange.emit({ pageIndex: page, pageSize, node: this.context.node, context: this.context });\r\n    }\r\n\r\n    pagerChanged(newPageIndex: number) {\r\n        this.setCurrent(newPageIndex, this.pagerInfo.pageSize);\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'childs-loading',\r\n    template: `\r\n    <div class=\"loading\">\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n    </div>\r\n    `,\r\n    styles: [\r\n        `\r\n        .loading{\r\n            width: 150px;\r\n            height: 10px;\r\n            margin: 0 auto;\r\n            margin-top:10px;\r\n            margin-bottom: 20px;\r\n        }\r\n        .loading span{\r\n            display: inline-block;\r\n            width: 10px;\r\n            height: 100%;\r\n            margin-right: 5px;\r\n            border-radius: 50%;\r\n            background: #59a1ff;\r\n            -webkit-animation: load 1.04s ease infinite;\r\n        }\r\n        .loading span:last-child{\r\n            margin-right: 0px;\r\n        }\r\n        @-webkit-keyframes load{\r\n            0%{\r\n                opacity: 1;\r\n                -webkit-transform: scale(1.3);\r\n            }\r\n            100%{\r\n                opacity: 0.2;\r\n                -webkit-transform: scale(.3);\r\n            }\r\n        }\r\n        .loading span:nth-child(1){\r\n            -webkit-animation-delay:0.13s;\r\n        }\r\n        .loading span:nth-child(2){\r\n            -webkit-animation-delay:0.26s;\r\n        }\r\n        .loading span:nth-child(3){\r\n            -webkit-animation-delay:0.39s;\r\n        }\r\n        .loading span:nth-child(4){\r\n            -webkit-animation-delay:0.52s;\r\n        }\r\n        .loading span:nth-child(5){\r\n            -webkit-animation-delay:0.65s;\r\n        }\r\n        `\r\n    ]\r\n})\r\nexport class ChildsLoadingComponent implements OnInit {\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n}\r\n","import { CommonUtils } from '@farris/ui-common';\r\nimport { TreeNode } from './types/treenode';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { TreeTableColumn } from './types/treetable-column';\r\n\r\n@Pipe({name: 'tipmsg'})\r\nexport class CellTipsPipe implements PipeTransform {\r\n    constructor(private commonUtils: CommonUtils) {}\r\n    transform(col: any, ...args: any[]): any {\r\n        if (col.showTips) {\r\n            return this.getCellTooltipContent(col, args[0]);\r\n        }\r\n        return  '';\r\n    }\r\n\r\n    private getCellTooltipContent(col: TreeTableColumn, tn: TreeNode) {\r\n        let txt = this.commonUtils.getValue(col.field, tn.data);\r\n\r\n        if (col.tipContent) {\r\n            if ( typeof col.tipContent === 'string') {\r\n                txt = col.tipContent;\r\n            } else if (typeof col.tipContent === 'function') {\r\n                txt = col.tipContent(txt, tn.data, col);\r\n            }\r\n        } else {\r\n            if (col.formatter) {\r\n                if (typeof col.formatter === 'object') {\r\n                    if (col.formatter.type === 'enum') {\r\n                        txt = this.commonUtils.getEnumTitleFromColumnOptions(txt, col.formatter.options);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return txt;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TreeNode } from './types/treenode';\r\n\r\n@Pipe({name: 'disablenode'})\r\nexport class DisableNodePipe implements PipeTransform {\r\n    transform(node: TreeNode, ...args: any[]): any {\r\n        const selectable = !node.selectable;\r\n        let selectable2 = false;\r\n        if (args && args.length) {\r\n            if (args[0]) {\r\n                selectable2 = args[0]({node});\r\n            }\r\n\r\n            if (args[1]) {  // æ è¡¨ç¦ç¨\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return selectable || selectable2;\r\n    }\r\n}","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\nimport { DataColumnModule } from '@farris/ui-common/column';\r\nimport { ResizeService } from '@farris/ui-common/events';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { PaginationModule } from '@farris/ui-pagination';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { FarrisContextMenuModule } from '@farris/ui-context-menu';\r\n\r\nimport { HighlightPipe } from './high-light.pipe';\r\nimport { TTHotkeys } from './hotkeys';\r\nimport { TreeTableComponent, TTBodyComponent,\r\n    TreeTableTogglerComponent,\r\n    TreeTableSelectRowDirective,\r\n    TreeTableCheckboxComponent,\r\n    TreeTableHeaderCheckboxComponent,\r\n    DblClickRowDirective,\r\n    TTResizableColumnDirective,\r\n    TreeTableColumnDirective,\r\n    TTCustomCellStyleDirective,\r\n    CustomRowStyleDirective} from './treetable.component';\r\nimport { TreetableService } from './treetable.service';\r\nimport { FindInputComponent } from './find-input.component';\r\nimport { TreetableNodesPagerComponent } from './nodes_pager/nodes-pager.component';\r\nimport { ChildsLoadingComponent } from './nodes_pager/childs-loading.component';\r\nimport { CellTipsPipe } from './cell-tips.pipe';\r\nimport { DisableNodePipe } from './disable-node.pipe';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        FarrisCommonModule.forRoot(),\r\n        PerfectScrollbarModule,\r\n        InputGroupModule,\r\n        LocaleModule.forRoot(),\r\n        DataColumnModule.forRoot(),\r\n        PaginationModule,\r\n        FarrisContextMenuModule,\r\n        FarrisFormsModule\r\n    ],\r\n    declarations: [\r\n        TreeTableComponent,\r\n        TTBodyComponent,\r\n        TreeTableTogglerComponent,\r\n        TreeTableSelectRowDirective,\r\n        TreeTableCheckboxComponent,\r\n        TreeTableHeaderCheckboxComponent,\r\n        DblClickRowDirective,\r\n        TTResizableColumnDirective,\r\n        TreeTableColumnDirective,\r\n        TTCustomCellStyleDirective,\r\n        FindInputComponent,\r\n        HighlightPipe,\r\n        CustomRowStyleDirective,\r\n        TreetableNodesPagerComponent,\r\n        ChildsLoadingComponent,\r\n        CellTipsPipe,\r\n        DisableNodePipe\r\n    ],\r\n    exports: [\r\n        TreeTableComponent,\r\n        TTBodyComponent,\r\n        TreeTableTogglerComponent,\r\n        TreeTableSelectRowDirective,\r\n        TreeTableCheckboxComponent,\r\n        TreeTableHeaderCheckboxComponent,\r\n        DblClickRowDirective,\r\n        TTResizableColumnDirective,\r\n        FarrisCommonModule,\r\n        TTCustomCellStyleDirective,\r\n        TreeTableColumnDirective,\r\n        HighlightPipe,\r\n        CustomRowStyleDirective,\r\n        TreetableNodesPagerComponent,\r\n        ChildsLoadingComponent,\r\n        CellTipsPipe,\r\n        DisableNodePipe,\r\n        FarrisContextMenuModule\r\n    ],\r\n    providers: [\r\n        TreetableService,\r\n        ResizeService,\r\n        TTHotkeys\r\n    ]\r\n})\r\nexport class TreeTableModule {\r\n\r\n}\r\n"],"names":["tslib_1.__values","Pipe","DomSanitizer","ElementRef","Observable","Injectable","EventManager","Subject","cloneDeep","Directive","Input","EventEmitter","BehaviorSubject","of","switchMap","LocaleService","IdService","FarrisComponentInstanceService","DebugService","timer","takeUntil","column","remove","extend","Component","ViewEncapsulation","ChangeDetectionStrategy","ResizeService","Renderer2","CommonUtils","ColumnFormatService","ChangeDetectorRef","NgZone","Injector","Output","ContentChildren","FarrisTemplateDirective","ViewChild","PerfectScrollbarComponent","FarrisContextMenuDirective","HostListener","HostBinding","map","Optional","Self","fromEvent","filter","debounceTime","NgModule","CommonModule","FormsModule","FarrisCommonModule","PerfectScrollbarModule","InputGroupModule","LocaleModule","DataColumnModule","PaginationModule","FarrisContextMenuModule","FarrisFormsModule"],"mappings":"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"}
