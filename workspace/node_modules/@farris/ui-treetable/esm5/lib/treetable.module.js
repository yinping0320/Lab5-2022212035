/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { InputGroupModule } from '@farris/ui-input-group';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { FarrisCommonModule } from '@farris/ui-common';
import { DataColumnModule } from '@farris/ui-common/column';
import { ResizeService } from '@farris/ui-common/events';
import { LocaleModule } from '@farris/ui-locale';
import { PaginationModule } from '@farris/ui-pagination';
import { FarrisFormsModule } from '@farris/ui-forms';
import { FarrisContextMenuModule } from '@farris/ui-context-menu';
import { HighlightPipe } from './high-light.pipe';
import { TTHotkeys } from './hotkeys';
import { TreeTableComponent, TTBodyComponent, TreeTableTogglerComponent, TreeTableSelectRowDirective, TreeTableCheckboxComponent, TreeTableHeaderCheckboxComponent, DblClickRowDirective, TTResizableColumnDirective, TreeTableColumnDirective, TTCustomCellStyleDirective, CustomRowStyleDirective } from './treetable.component';
import { TreetableService } from './treetable.service';
import { FindInputComponent } from './find-input.component';
import { TreetableNodesPagerComponent } from './nodes_pager/nodes-pager.component';
import { ChildsLoadingComponent } from './nodes_pager/childs-loading.component';
import { CellTipsPipe } from './cell-tips.pipe';
import { DisableNodePipe } from './disable-node.pipe';
var TreeTableModule = /** @class */ (function () {
    function TreeTableModule() {
    }
    TreeTableModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        FarrisCommonModule.forRoot(),
                        PerfectScrollbarModule,
                        InputGroupModule,
                        LocaleModule.forRoot(),
                        DataColumnModule.forRoot(),
                        PaginationModule,
                        FarrisContextMenuModule,
                        FarrisFormsModule
                    ],
                    declarations: [
                        TreeTableComponent,
                        TTBodyComponent,
                        TreeTableTogglerComponent,
                        TreeTableSelectRowDirective,
                        TreeTableCheckboxComponent,
                        TreeTableHeaderCheckboxComponent,
                        DblClickRowDirective,
                        TTResizableColumnDirective,
                        TreeTableColumnDirective,
                        TTCustomCellStyleDirective,
                        FindInputComponent,
                        HighlightPipe,
                        CustomRowStyleDirective,
                        TreetableNodesPagerComponent,
                        ChildsLoadingComponent,
                        CellTipsPipe,
                        DisableNodePipe
                    ],
                    exports: [
                        TreeTableComponent,
                        TTBodyComponent,
                        TreeTableTogglerComponent,
                        TreeTableSelectRowDirective,
                        TreeTableCheckboxComponent,
                        TreeTableHeaderCheckboxComponent,
                        DblClickRowDirective,
                        TTResizableColumnDirective,
                        FarrisCommonModule,
                        TTCustomCellStyleDirective,
                        TreeTableColumnDirective,
                        HighlightPipe,
                        CustomRowStyleDirective,
                        TreetableNodesPagerComponent,
                        ChildsLoadingComponent,
                        CellTipsPipe,
                        DisableNodePipe,
                        FarrisContextMenuModule
                    ],
                    providers: [
                        TreetableService,
                        ResizeService,
                        TTHotkeys
                    ]
                },] }
    ];
    return TreeTableModule;
}());
export { TreeTableModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZXRhYmxlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktdHJlZXRhYmxlLyIsInNvdXJjZXMiOlsibGliL3RyZWV0YWJsZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUMxRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDekQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3JELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRWxFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxlQUFlLEVBQ3hDLHlCQUF5QixFQUN6QiwyQkFBMkIsRUFDM0IsMEJBQTBCLEVBQzFCLGdDQUFnQyxFQUNoQyxvQkFBb0IsRUFDcEIsMEJBQTBCLEVBQzFCLHdCQUF3QixFQUN4QiwwQkFBMEIsRUFDMUIsdUJBQXVCLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUNuRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNoRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXREO0lBQUE7SUE0REEsQ0FBQzs7Z0JBNURBLFFBQVEsU0FBQztvQkFDTixPQUFPLEVBQUU7d0JBQ0wsWUFBWTt3QkFDWixXQUFXO3dCQUNYLGtCQUFrQixDQUFDLE9BQU8sRUFBRTt3QkFDNUIsc0JBQXNCO3dCQUN0QixnQkFBZ0I7d0JBQ2hCLFlBQVksQ0FBQyxPQUFPLEVBQUU7d0JBQ3RCLGdCQUFnQixDQUFDLE9BQU8sRUFBRTt3QkFDMUIsZ0JBQWdCO3dCQUNoQix1QkFBdUI7d0JBQ3ZCLGlCQUFpQjtxQkFDcEI7b0JBQ0QsWUFBWSxFQUFFO3dCQUNWLGtCQUFrQjt3QkFDbEIsZUFBZTt3QkFDZix5QkFBeUI7d0JBQ3pCLDJCQUEyQjt3QkFDM0IsMEJBQTBCO3dCQUMxQixnQ0FBZ0M7d0JBQ2hDLG9CQUFvQjt3QkFDcEIsMEJBQTBCO3dCQUMxQix3QkFBd0I7d0JBQ3hCLDBCQUEwQjt3QkFDMUIsa0JBQWtCO3dCQUNsQixhQUFhO3dCQUNiLHVCQUF1Qjt3QkFDdkIsNEJBQTRCO3dCQUM1QixzQkFBc0I7d0JBQ3RCLFlBQVk7d0JBQ1osZUFBZTtxQkFDbEI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNMLGtCQUFrQjt3QkFDbEIsZUFBZTt3QkFDZix5QkFBeUI7d0JBQ3pCLDJCQUEyQjt3QkFDM0IsMEJBQTBCO3dCQUMxQixnQ0FBZ0M7d0JBQ2hDLG9CQUFvQjt3QkFDcEIsMEJBQTBCO3dCQUMxQixrQkFBa0I7d0JBQ2xCLDBCQUEwQjt3QkFDMUIsd0JBQXdCO3dCQUN4QixhQUFhO3dCQUNiLHVCQUF1Qjt3QkFDdkIsNEJBQTRCO3dCQUM1QixzQkFBc0I7d0JBQ3RCLFlBQVk7d0JBQ1osZUFBZTt3QkFDZix1QkFBdUI7cUJBQzFCO29CQUNELFNBQVMsRUFBRTt3QkFDUCxnQkFBZ0I7d0JBQ2hCLGFBQWE7d0JBQ2IsU0FBUztxQkFDWjtpQkFDSjs7SUFHRCxzQkFBQztDQUFBLEFBNURELElBNERDO1NBRlksZUFBZSIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuXHJcbmltcG9ydCB7IElucHV0R3JvdXBNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWlucHV0LWdyb3VwJztcclxuaW1wb3J0IHsgUGVyZmVjdFNjcm9sbGJhck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktcGVyZmVjdC1zY3JvbGxiYXInO1xyXG5pbXBvcnQgeyBGYXJyaXNDb21tb25Nb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbic7XHJcbmltcG9ydCB7IERhdGFDb2x1bW5Nb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbi9jb2x1bW4nO1xyXG5pbXBvcnQgeyBSZXNpemVTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21tb24vZXZlbnRzJztcclxuaW1wb3J0IHsgTG9jYWxlTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2NhbGUnO1xyXG5pbXBvcnQgeyBQYWdpbmF0aW9uTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1wYWdpbmF0aW9uJztcclxuaW1wb3J0IHsgRmFycmlzRm9ybXNNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWZvcm1zJztcclxuaW1wb3J0IHsgRmFycmlzQ29udGV4dE1lbnVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWNvbnRleHQtbWVudSc7XHJcblxyXG5pbXBvcnQgeyBIaWdobGlnaHRQaXBlIH0gZnJvbSAnLi9oaWdoLWxpZ2h0LnBpcGUnO1xyXG5pbXBvcnQgeyBUVEhvdGtleXMgfSBmcm9tICcuL2hvdGtleXMnO1xyXG5pbXBvcnQgeyBUcmVlVGFibGVDb21wb25lbnQsIFRUQm9keUNvbXBvbmVudCxcclxuICAgIFRyZWVUYWJsZVRvZ2dsZXJDb21wb25lbnQsXHJcbiAgICBUcmVlVGFibGVTZWxlY3RSb3dEaXJlY3RpdmUsXHJcbiAgICBUcmVlVGFibGVDaGVja2JveENvbXBvbmVudCxcclxuICAgIFRyZWVUYWJsZUhlYWRlckNoZWNrYm94Q29tcG9uZW50LFxyXG4gICAgRGJsQ2xpY2tSb3dEaXJlY3RpdmUsXHJcbiAgICBUVFJlc2l6YWJsZUNvbHVtbkRpcmVjdGl2ZSxcclxuICAgIFRyZWVUYWJsZUNvbHVtbkRpcmVjdGl2ZSxcclxuICAgIFRUQ3VzdG9tQ2VsbFN0eWxlRGlyZWN0aXZlLFxyXG4gICAgQ3VzdG9tUm93U3R5bGVEaXJlY3RpdmV9IGZyb20gJy4vdHJlZXRhYmxlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFRyZWV0YWJsZVNlcnZpY2UgfSBmcm9tICcuL3RyZWV0YWJsZS5zZXJ2aWNlJztcclxuaW1wb3J0IHsgRmluZElucHV0Q29tcG9uZW50IH0gZnJvbSAnLi9maW5kLWlucHV0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFRyZWV0YWJsZU5vZGVzUGFnZXJDb21wb25lbnQgfSBmcm9tICcuL25vZGVzX3BhZ2VyL25vZGVzLXBhZ2VyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IENoaWxkc0xvYWRpbmdDb21wb25lbnQgfSBmcm9tICcuL25vZGVzX3BhZ2VyL2NoaWxkcy1sb2FkaW5nLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IENlbGxUaXBzUGlwZSB9IGZyb20gJy4vY2VsbC10aXBzLnBpcGUnO1xyXG5pbXBvcnQgeyBEaXNhYmxlTm9kZVBpcGUgfSBmcm9tICcuL2Rpc2FibGUtbm9kZS5waXBlJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgICAgIEZhcnJpc0NvbW1vbk1vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgUGVyZmVjdFNjcm9sbGJhck1vZHVsZSxcclxuICAgICAgICBJbnB1dEdyb3VwTW9kdWxlLFxyXG4gICAgICAgIExvY2FsZU1vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgRGF0YUNvbHVtbk1vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgUGFnaW5hdGlvbk1vZHVsZSxcclxuICAgICAgICBGYXJyaXNDb250ZXh0TWVudU1vZHVsZSxcclxuICAgICAgICBGYXJyaXNGb3Jtc01vZHVsZVxyXG4gICAgXSxcclxuICAgIGRlY2xhcmF0aW9uczogW1xyXG4gICAgICAgIFRyZWVUYWJsZUNvbXBvbmVudCxcclxuICAgICAgICBUVEJvZHlDb21wb25lbnQsXHJcbiAgICAgICAgVHJlZVRhYmxlVG9nZ2xlckNvbXBvbmVudCxcclxuICAgICAgICBUcmVlVGFibGVTZWxlY3RSb3dEaXJlY3RpdmUsXHJcbiAgICAgICAgVHJlZVRhYmxlQ2hlY2tib3hDb21wb25lbnQsXHJcbiAgICAgICAgVHJlZVRhYmxlSGVhZGVyQ2hlY2tib3hDb21wb25lbnQsXHJcbiAgICAgICAgRGJsQ2xpY2tSb3dEaXJlY3RpdmUsXHJcbiAgICAgICAgVFRSZXNpemFibGVDb2x1bW5EaXJlY3RpdmUsXHJcbiAgICAgICAgVHJlZVRhYmxlQ29sdW1uRGlyZWN0aXZlLFxyXG4gICAgICAgIFRUQ3VzdG9tQ2VsbFN0eWxlRGlyZWN0aXZlLFxyXG4gICAgICAgIEZpbmRJbnB1dENvbXBvbmVudCxcclxuICAgICAgICBIaWdobGlnaHRQaXBlLFxyXG4gICAgICAgIEN1c3RvbVJvd1N0eWxlRGlyZWN0aXZlLFxyXG4gICAgICAgIFRyZWV0YWJsZU5vZGVzUGFnZXJDb21wb25lbnQsXHJcbiAgICAgICAgQ2hpbGRzTG9hZGluZ0NvbXBvbmVudCxcclxuICAgICAgICBDZWxsVGlwc1BpcGUsXHJcbiAgICAgICAgRGlzYWJsZU5vZGVQaXBlXHJcbiAgICBdLFxyXG4gICAgZXhwb3J0czogW1xyXG4gICAgICAgIFRyZWVUYWJsZUNvbXBvbmVudCxcclxuICAgICAgICBUVEJvZHlDb21wb25lbnQsXHJcbiAgICAgICAgVHJlZVRhYmxlVG9nZ2xlckNvbXBvbmVudCxcclxuICAgICAgICBUcmVlVGFibGVTZWxlY3RSb3dEaXJlY3RpdmUsXHJcbiAgICAgICAgVHJlZVRhYmxlQ2hlY2tib3hDb21wb25lbnQsXHJcbiAgICAgICAgVHJlZVRhYmxlSGVhZGVyQ2hlY2tib3hDb21wb25lbnQsXHJcbiAgICAgICAgRGJsQ2xpY2tSb3dEaXJlY3RpdmUsXHJcbiAgICAgICAgVFRSZXNpemFibGVDb2x1bW5EaXJlY3RpdmUsXHJcbiAgICAgICAgRmFycmlzQ29tbW9uTW9kdWxlLFxyXG4gICAgICAgIFRUQ3VzdG9tQ2VsbFN0eWxlRGlyZWN0aXZlLFxyXG4gICAgICAgIFRyZWVUYWJsZUNvbHVtbkRpcmVjdGl2ZSxcclxuICAgICAgICBIaWdobGlnaHRQaXBlLFxyXG4gICAgICAgIEN1c3RvbVJvd1N0eWxlRGlyZWN0aXZlLFxyXG4gICAgICAgIFRyZWV0YWJsZU5vZGVzUGFnZXJDb21wb25lbnQsXHJcbiAgICAgICAgQ2hpbGRzTG9hZGluZ0NvbXBvbmVudCxcclxuICAgICAgICBDZWxsVGlwc1BpcGUsXHJcbiAgICAgICAgRGlzYWJsZU5vZGVQaXBlLFxyXG4gICAgICAgIEZhcnJpc0NvbnRleHRNZW51TW9kdWxlXHJcbiAgICBdLFxyXG4gICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgVHJlZXRhYmxlU2VydmljZSxcclxuICAgICAgICBSZXNpemVTZXJ2aWNlLFxyXG4gICAgICAgIFRUSG90a2V5c1xyXG4gICAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVHJlZVRhYmxlTW9kdWxlIHtcclxuXHJcbn1cclxuIl19