import { OnInit, Renderer2, AfterViewInit, ElementRef, EventEmitter, OnDestroy } from "@angular/core";
export declare class SplitterPaneComponent implements OnInit, AfterViewInit, OnDestroy {
    private elementRef;
    private renderer;
    klass: boolean;
    /**
     * 2022年6月8日 ximena
     * size、max、min、collapsible、sizeChange、order、orderState这些属性没有被实际使用
     * 该组件常用的属性来自于 ngResizable 拖拽组件
     */
    size: any;
    max: string;
    min: string;
    collapsible: boolean;
    sizeChange: EventEmitter<any>;
    _size: string;
    el: HTMLElement;
    order: number;
    _order: number;
    private _beforeCollapseDistance;
    private _enableCollapse;
    enableCollapse: any;
    private _relatedIframeParent;
    private _relatedContainer;
    private _relatedContainerPosition;
    private _relatedIframeOverlay;
    private _iframeOverlayShownFlag;
    relatedIframeParent: string | ElementRef | any;
    resizeCollapseThreshold: number;
    private pos;
    collapsePosition: string;
    private defaultExpandDistance;
    private realExpandDisatance;
    private _expandDistance;
    expandDistance: string | number;
    private initCollapse;
    collapsed: any;
    /**收起折叠状态变化 */
    collapseStateChange: EventEmitter<{}>;
    private animateCls;
    private updateParamsFlag;
    private resizeDistance;
    /**
     *  拖拽的变化中事件
     *  如果超过阈值，不处理
     *  暂未处理拖拽最大、最小值的问题
     */
    onRZResizing(pos: any): void;
    onRZStart(pos: any): void;
    onRZStop(pos: any): void;
    constructor(elementRef: ElementRef, renderer: Renderer2);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    /**
     * 兼容旧表单写法
     */
    private compatibleEl;
    ngOnDestroy(): void;
    resolveSize(size: any): string;
    /**
     * 规范获取iframe所在的父容器
     */
    private getRelatedIframeParent;
    /**
     * 点击収折
     */
    toggleCollapseState(ev: MouseEvent): void;
    /**
     * 切换初始收起状态
     */
    toggleInitCollapseState(): void;
    /**
     * expand 为展开，collapse 为收起
     * @param collapseOrExpand
     */
    private changeCollapse;
    /**
     * 布局排列不一样，影响到是设置宽度还是高度
     */
    private getStyleProp;
}
