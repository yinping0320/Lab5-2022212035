{"version":3,"sources":["ng://@farris/ui-splitter/lib/splitter.service.ts","ng://@farris/ui-splitter/lib/splitter-pane.component.ts","ng://@farris/ui-splitter/lib/helper/position.ts","ng://@farris/ui-splitter/lib/helper/helper-block.ts","ng://@farris/ui-splitter/lib/splitter-bar.component.ts","ng://@farris/ui-splitter/lib/splitter.component.ts","ng://@farris/ui-splitter/lib/splitter.module.ts"],"names":["SplitterService","Injectable","args","providedIn","SplitterPaneComponent","Object","defineProperty","prototype","value","this","_size","sizeChange","emit","_order","_enableCollapse","undefined","initCollapse","toggleInitCollapseState","_relatedContainer","_relatedIframeParent","getRelatedIframeParent","pos","enableCollapse","findIndex","item","el","renderer","removeClass","addClass","_expandDistance","resolveSize","onRZResizing","changeProp","getStyleProp","resizeDirection","resizeDistance","resizeCollapseThreshold","hasOwnProperty","toggleCollapseState","onRZStart","className","indexOf","animateCls","_relatedIframeOverlay","_iframeOverlayShownFlag","_relatedContainerPosition","setStyle","updateParamsFlag","fixedEdge","onRZStop","ngOnInit","elementRef","compatibleEl","ngAfterViewInit","nativeElement","collapsePosition","ngOnDestroy","size","regex","test","parseInt","match","content","ElementRef","parentElement","querySelector","createElement","appendChild","ev","stopPropagation","changeCollapse","collapseStateChange","collapseOrExpand","realExpandDisatance","_beforeCollapseDistance","defaultExpandDistance","offsetHeight","offsetWidth","_this","Component","selector","template","Renderer2","HostBinding","Input","Output","HostListener","klass","collapsible","EventEmitter","Position","fromEvent","e","isMouseEvent","clientX","clientY","changedTouches","length","i","target","toString","apply","isIPosition","obj","getCurrent","window","computed","getComputedStyle","x","getPropertyValue","y","isNaN","copy","p","set","add","subtract","multiply","n","divide","reset","HelperBlock","parent","_added","_helper","remove","removeChild","dispose","helper","SplitterBarComponent","orderState","next","subscribe","data","orignal","oldTrans","tempTrans","currTrans","movedTrans","_helperBlock","draggingSub","unsubscribe","moveTo","scale","transform","movingOffset","translateX","translateY","lockAxis","rightMovedMax","Math","abs","leftMovedMax","gridSize","round","putBack","_zIndex","zIndexMoving","oldZIndex","style","removeProperty","moving","stopped","needTransform","position","endOffset","removeStyle","trackPosition","element","unsubscribeEvents","pickUp","zIndex","started","subscribeEvents","document","passive","event","onMouseMove","navigator","userAgent","onMouseDown","MouseEvent","button","srcElement","allowDrag","preventDefaultEvent","preventDefault","host","ngDraggable","type","edge","BehaviorSubject","SplitterComponent","ngAfterContentInit","hostEl","initPane","pane","hostWidth_1","length_1","restPane","filter","restLength_1","forEach","index","order","getElementSize","createBar","listenPaneSizeChange","hostWidth","nextIndex","diff","nextPaneMin","min","barComponentRefArray","instance","targetSize","len","factory","this_1","componentFactoryResolver","resolveComponentFactory","componentRef","container","createComponent","prevPane","prevPaneOriginWidth","nextPane","nextPaneOriginWidth","prePaneMax","max","prePaneMin","orientation","push","changeDetectorRef","detectChanges","ComponentFactoryResolver","Injector","ViewChild","read","ViewContainerRef","ContentChildren","injector","splitterCls","SplitterModule","NgModule","declarations","imports","CommonModule","AngularDraggableModule","PerfectScrollbarModule","exports","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SplitterService {\r\n\r\n  constructor() { }\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    HostBinding,\r\n    Renderer2,\r\n    AfterViewInit,\r\n    ElementRef,\r\n    Output,\r\n    EventEmitter,\r\n    HostListener,\r\n    OnDestroy\r\n} from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"farris-splitter-pane\",\r\n    template: `\r\n        <ng-content></ng-content>\r\n        <div\r\n            class=\"f-list-nav-toggle-sidebar\"\r\n            *ngIf=\"enableCollapse\"\r\n            [ngClass]=\"{ active: collapsed }\"\r\n            (click)=\"toggleCollapseState($event)\"\r\n        >\r\n            <span class=\"triangle\"></span>\r\n        </div>\r\n    `,\r\n    styles: []\r\n})\r\nexport class SplitterPaneComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    @HostBinding(\"class.f-component-splitter-pane\") klass = true;\r\n    /**\r\n     * 2022å¹´6æ8æ¥ ximena\r\n     * sizeãmaxãminãcollapsibleãsizeChangeãorderãorderStateè¿äºå±æ§æ²¡æè¢«å®éä½¿ç¨\r\n     * è¯¥ç»ä»¶å¸¸ç¨çå±æ§æ¥èªäº ngResizable ææ½ç»ä»¶\r\n     */\r\n    @Input() set size(value: any) {\r\n        this._size = value;\r\n        this.sizeChange.emit(value);\r\n        // this._sizeState.next(value);\r\n    }\r\n    @Input() max: string;\r\n    @Input() min: string;\r\n    @Input() collapsible: boolean = false;\r\n    @Output() sizeChange = new EventEmitter<any>();\r\n    _size: string;\r\n    //_sizeState = new BehaviorSubject<any>({});\r\n    el: HTMLElement;\r\n    set order(value: number) {\r\n        this._order = value;\r\n        //this.orderState.next(value);\r\n    }\r\n    _order: number;\r\n    //orderState = new BehaviorSubject<any>({});\r\n    // è®°å½åæåå®½åº¦ï¼æ¹ä¾¿åç»­æ¢å¤\r\n    private _beforeCollapseDistance = -1;\r\n    private _enableCollapse = false;\r\n    // å¯ç¨åæ\r\n    @Input()\r\n    set enableCollapse(value) {\r\n        if (value !== undefined && value !== null) {\r\n            this._enableCollapse = value;\r\n            // ååå±æ§æ¶\r\n            if (this._enableCollapse && this.initCollapse) {\r\n                this.toggleInitCollapseState();\r\n            }\r\n        }\r\n    }\r\n    get enableCollapse() {\r\n        return this._enableCollapse;\r\n    }\r\n    // å¤çå³èåå¨ä¸­ï¼å¦å¤ä¸å¤æiframeï¼iframeå½±åææ½çæ§è½\r\n    private _relatedIframeParent: string | ElementRef | any;\r\n    // è®°å½çå®çiframeç¶å®¹å¨\r\n    private _relatedContainer = null;\r\n    // æ è®°iframeç¶å®¹å¨çæ ·å¼å±æ§positionçå¼\r\n    private _relatedContainerPosition = \"\";\r\n    // è®°å½iframeå¨ææ½æ¶çé®ç½©å±\r\n    private _relatedIframeOverlay = null;\r\n    // æ è®°iframeé®ç½©å±æ¯å¦å·²æ¾ç¤º\r\n    private _iframeOverlayShownFlag = false;\r\n    @Input()\r\n    set relatedIframeParent(value: string | ElementRef | any) {\r\n        this._relatedIframeParent=value;\r\n        this.getRelatedIframeParent(value);\r\n    }\r\n    get relatedIframeParent() {\r\n        return this._relatedContainer;\r\n    }\r\n\r\n    // ææ½å°æä¸ªå¼æ¶ï¼èªå¨æ¶èµ·çéå¼ãå¦æéå¼è®¾ç½®å°äº0ï¼åä¸å¤çèªå¨æ¶èµ·\r\n    @Input() resizeCollapseThreshold = 20;\r\n    // paneå¨splitterçä½ç½®ï¼left å·¦ä¾§ right å³ä¾§ top é¡¶é¨ bottom åºé¨\r\n    private pos = \"right\";\r\n    @Input()\r\n    set collapsePosition(value: string) {\r\n        if (this.enableCollapse && value) {\r\n            // è§èposition\r\n            let positionCorrect = [\"left\", \"right\", \"top\", \"bottom\"].findIndex(\r\n                item => item == value\r\n            );\r\n            if (positionCorrect < -1) {\r\n                value = \"right\";\r\n            }\r\n            if (this.pos != value) {\r\n                this.el &&\r\n                    this.renderer.removeClass(\r\n                        this.el,\r\n                        \"splitter-pane-collapse-on-\" + this.pos\r\n                    );\r\n                this.pos = value;\r\n                this.el &&\r\n                    this.renderer.addClass(\r\n                        this.el,\r\n                        \"splitter-pane-collapse-on-\" + value\r\n                    );\r\n            }\r\n        }\r\n    }\r\n    get collapsePosition(): string {\r\n        return this.pos;\r\n    }\r\n    // çå®çå±å¼æ¶çè·ç¦»ï¼\r\n    private defaultExpandDistance = \"20%\";\r\n    private realExpandDisatance = \"\";\r\n    // å±å¼æ¶çè·ç¦»ï¼ä¸è®¾ç½®æ¶ä¸ºç©ºï¼è®¾ç½®äºæç§è®¾ç½®çå¼æ¥\r\n    private _expandDistance = \"\";\r\n    @Input()\r\n    set expandDistance(value: string | number) {\r\n        if (value) {\r\n            this._expandDistance = this.resolveSize(value + \"\");\r\n        } else {\r\n            this._expandDistance = \"\";\r\n        }\r\n    }\r\n    get expandDistance() {\r\n        return this._expandDistance;\r\n    }\r\n\r\n    // åå§æ¶èµ·ç¶æ\r\n    private initCollapse = false;\r\n    @Input()\r\n    set collapsed(value) {\r\n        if (this.enableCollapse && value !== undefined && value !== null) {\r\n            if (this.initCollapse !== value) {\r\n                this.initCollapse = value;\r\n                this.toggleInitCollapseState();\r\n            }\r\n        }\r\n    }\r\n    get collapsed() {\r\n        return this.initCollapse;\r\n    }\r\n\r\n    /**æ¶èµ·æå ç¶æåå */\r\n    @Output(\"collapseStateChange\") collapseStateChange = new EventEmitter();\r\n    // collapseçå¨ç»æ ·å¼å\r\n    private animateCls = \"splitter-pane-collapse-animate\";\r\n\r\n    // æ è®°æ¯å¦éè¦æ´æ°åé\r\n    private updateParamsFlag = false;\r\n    // æ è®°ææ½æ¶ä¸æ¬¡çå¤§å°\r\n    private resizeDistance = -1;\r\n    /**\r\n     *  ææ½çååä¸­äºä»¶\r\n     *  å¦æè¶è¿éå¼ï¼ä¸å¤ç\r\n     *  ææªå¤çææ½æå¤§ãæå°å¼çé®é¢\r\n     */\r\n    @HostListener(\"rzResizing\", [\"$event\"])\r\n    onRZResizing(pos) {\r\n        if (this.enableCollapse && pos && pos[\"size\"]) {\r\n            let changeProp = this.getStyleProp();\r\n            let resizeDirection = \"\";\r\n            if (this.resizeDistance >= 0) {\r\n                // å¼å§è®°å½å\r\n                // æ­¤æ¬¡å¼æ¯ä¸æ¬¡è®°å½å¤§ï¼è¯´æå¨expand\r\n                resizeDirection =\r\n                    pos[\"size\"][changeProp] > this.resizeDistance\r\n                        ? \"expand\"\r\n                        : \"collapse\";\r\n            }\r\n            this.resizeDistance = pos[\"size\"][changeProp];\r\n            if (resizeDirection == \"expand\" && this.initCollapse) {\r\n                this.initCollapse = false;\r\n            }\r\n            if (\r\n                pos[\"size\"][changeProp] > this.resizeCollapseThreshold ||\r\n                !resizeDirection\r\n            ) {\r\n                // ææ½éåº¦å¿«çæ¶åï¼ä¼æ¼æè®¡ç®çæ¶æº\r\n                return;\r\n            }\r\n\r\n            if (this.resizeCollapseThreshold > 0) {\r\n                // è®¾ç½®äºèªå¨åæéå¼\r\n                if (!this.initCollapse && resizeDirection == \"collapse\") {\r\n                    // å¤çææ½åæè¿ç¨ä¸­ï¼èªå¨æ¶èµ·ï¼ä¸å¤çå±å¼è¿ç¨ä¸­çï¼èªå¨å±å¼\r\n                    if (\r\n                        pos[\"actions\"] &&\r\n                        pos[\"actions\"].hasOwnProperty(\"stopResize\")\r\n                    ) {\r\n                        pos[\"actions\"][\"stopResize\"]();\r\n                    }\r\n                    this.toggleCollapseState(null);\r\n                }\r\n            } else {\r\n                // æªè®¾ç½®èªå¨åæéå¼ï¼éè¦åç¬å¤ç å³å°æ¶èµ·æ¶ç¶æãå³å°å±å¼æ¶ç¶æ\r\n                if (resizeDirection == \"collapse\") {\r\n                    if (pos[\"size\"][changeProp] < 3 && !this.initCollapse) {\r\n                        this.initCollapse = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // ææ½çå¼å§çäºä»¶\r\n    @HostListener(\"rzStart\", [\"$event\"])\r\n    onRZStart(pos) {\r\n        if (this.enableCollapse) {\r\n            if (this.el.className.indexOf(this.animateCls) >-1) {\r\n                this.renderer.removeClass(this.el, this.animateCls);\r\n            }\r\n        }\r\n        // å¦ææiframeé®ç½©å¹¶ä¸æ²¡ææ¾ç¤º\r\n        if (this._relatedIframeOverlay && !this._iframeOverlayShownFlag) {\r\n            if (\r\n                [\"relative\", \"absolute\"].indexOf(\r\n                    this._relatedContainerPosition\r\n                ) < 0\r\n            ) {\r\n                this.renderer.setStyle(\r\n                    this._relatedContainer,\r\n                    \"position\",\r\n                    \"relative\"\r\n                );\r\n            }\r\n            this.renderer.setStyle(\r\n                this._relatedIframeOverlay,\r\n                \"display\",\r\n                \"block\"\r\n            );\r\n            this._iframeOverlayShownFlag = true;\r\n        }\r\n        if (\r\n            !this.updateParamsFlag &&\r\n            pos[\"actions\"] &&\r\n            pos[\"actions\"].hasOwnProperty(\"updateParams\")\r\n        ) {\r\n            pos[\"actions\"][\"updateParams\"]({ fixedEdge: true });\r\n            this.updateParamsFlag = true;\r\n        }\r\n    }\r\n    // ææ½çåæ­¢äºä»¶\r\n    @HostListener(\"rzStop\", [\"$event\"])\r\n    onRZStop(pos) {\r\n        this.resizeDistance = -1;\r\n        // å¦ææiframeé®ç½©å¹¶ä¸æ¾ç¤ºäº\r\n        if (this._relatedIframeOverlay && this._iframeOverlayShownFlag) {\r\n            if (\r\n                [\"relative\", \"absolute\"].indexOf(\r\n                    this._relatedContainerPosition\r\n                ) < 0\r\n            ) {\r\n                this.renderer.setStyle(\r\n                    this._relatedContainer,\r\n                    \"position\",\r\n                    this._relatedContainerPosition\r\n                );\r\n            }\r\n            this.renderer.setStyle(\r\n                this._relatedIframeOverlay,\r\n                \"display\",\r\n                \"none\"\r\n            );\r\n            this._iframeOverlayShownFlag = false;\r\n        }\r\n    }\r\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) {\r\n        // å¼å®¹æ§è¡¨ååæ³\r\n        if(this.elementRef){\r\n            this.el = this.elementRef.nativeElement; \r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n      if(this.elementRef){\r\n        this.compatibleEl();\r\n      }\r\n    }\r\n    ngAfterViewInit() {\r\n        if(!this.el){\r\n            this.compatibleEl();\r\n        }     \r\n    }\r\n    /**\r\n     * å¼å®¹æ§è¡¨ååæ³\r\n     */\r\n    private compatibleEl(){\r\n        this.el = this.elementRef.nativeElement;\r\n        // è®¾ç½®äºiframeå®¹å¨ï¼ä½æ¯æ²¡æåå»ºé®ç½©\r\n        if (this._relatedIframeParent && !this._relatedIframeOverlay) {\r\n            this.getRelatedIframeParent(this._relatedIframeParent);\r\n        }\r\n        this.enableCollapse &&\r\n            this.renderer.addClass(\r\n                this.el,\r\n                \"splitter-pane-collapse-on-\" + this.collapsePosition\r\n            );\r\n    }\r\n\r\n    ngOnDestroy() {}\r\n\r\n    /*å®½é«ç±»åæ¯ stringæènumber è§£æå®½é«  å°ºå¯¸ */\r\n    resolveSize(size) {\r\n        const regex = /px|%|rem|em/;\r\n        // è¯´ææ¯å­ç¬¦ä¸²\r\n        return regex.test(size)\r\n            ? `${parseInt(size, 10)}${size.match(regex)[0]}`\r\n            : `${size}px`;\r\n    }\r\n    /**\r\n     * è§èè·åiframeæå¨çç¶å®¹å¨\r\n     */\r\n    private getRelatedIframeParent(content) {\r\n        if (!content||!this.el) {\r\n            this._relatedContainer = null;\r\n        }\r\n        if (content instanceof ElementRef) {\r\n            this._relatedContainer = content.nativeElement;\r\n        } else if (typeof content == \"string\") {\r\n            this._relatedContainer = this.el.parentElement.querySelector(\r\n                content\r\n            );\r\n        } else {\r\n            this._relatedContainer = content;\r\n        }\r\n        if (this._relatedContainer) {\r\n            this._relatedContainerPosition = this._relatedContainer[\"style\"][\r\n                \"position\"\r\n            ];\r\n            // æé é®ç½©å±\r\n            this._relatedIframeOverlay = this.renderer.createElement(\"div\");\r\n            this._relatedIframeOverlay.className = \"f-utils-absolute-all\";\r\n            this.renderer.setStyle(\r\n                this._relatedIframeOverlay,\r\n                \"display\",\r\n                \"none\"\r\n            );\r\n            this.renderer.appendChild(\r\n                this._relatedContainer,\r\n                this._relatedIframeOverlay\r\n            );\r\n        }\r\n    }\r\n    /**\r\n     * ç¹å»åæ\r\n     */\r\n    toggleCollapseState(ev: MouseEvent) {\r\n        //ç¦æ­¢åæ³¡\r\n        ev && ev.stopPropagation();\r\n        if (!this.el) return;\r\n        if (this.initCollapse) {\r\n            // å¾å±å¼\r\n            this.renderer.addClass(this.el, this.animateCls);\r\n            this.changeCollapse(\"expand\");\r\n        } else {\r\n            // å¾æ¶èµ·\r\n            this.renderer.addClass(this.el, this.animateCls);\r\n            this.changeCollapse(\"collapse\");\r\n        }\r\n        this.initCollapse = !this.initCollapse;\r\n        this.collapseStateChange.emit(this.initCollapse);\r\n    }\r\n    /**\r\n     * åæ¢åå§æ¶èµ·ç¶æ\r\n     */\r\n    toggleInitCollapseState() {\r\n        if (!this.el) return;\r\n        if (this.initCollapse) {\r\n            // æ¶èµ·\r\n            this.changeCollapse(\"collapse\");\r\n        } else {\r\n            // å±å¼\r\n            this.changeCollapse(\"expand\");\r\n        }\r\n        this.collapseStateChange.emit(this.initCollapse);\r\n    }\r\n    /**\r\n     * expand ä¸ºå±å¼ï¼collapse ä¸ºæ¶èµ·\r\n     * @param collapseOrExpand\r\n     */\r\n    private changeCollapse(collapseOrExpand: string) {\r\n        let changeProp = this.getStyleProp();\r\n        switch (collapseOrExpand) {\r\n            case \"expand\":\r\n                // å±å¼\r\n                // å¦æå­å¨æåwidthèµå¼ç»paneä¼æé®é¢\r\n                if (this._expandDistance) {\r\n                    //è®¾ç½®äºå±å¼è·ç¦»\r\n                    this.realExpandDisatance = this._expandDistance;\r\n                } else {\r\n                    //æ²¡æè®¾ç½®ï¼æç§ä¹åçè®°å½ï¼å¦æå­å¨å°±æç§è®°å½çå¼ï¼å¦ææ²¡æå°±æç§é»è®¤çå¼\r\n                    this.realExpandDisatance = this._beforeCollapseDistance\r\n                        ? this._beforeCollapseDistance + \"px\"\r\n                        : this.defaultExpandDistance;\r\n                }\r\n                this.renderer.setStyle(\r\n                    this.el,\r\n                    changeProp,\r\n                    this.realExpandDisatance\r\n                );\r\n                break;\r\n            default:\r\n                // æ¶èµ·\r\n                this._beforeCollapseDistance =\r\n                    changeProp == \"height\"\r\n                        ? this.el.offsetHeight\r\n                        : this.el.offsetWidth;\r\n                this.renderer.setStyle(this.el, changeProp, \"0px\");\r\n        }\r\n    }\r\n    /**\r\n     * å¸å±æåä¸ä¸æ ·ï¼å½±åå°æ¯è®¾ç½®å®½åº¦è¿æ¯é«åº¦\r\n     */\r\n    private getStyleProp() {\r\n        let hori = [\"left\", \"right\"].findIndex(\r\n            item => item == this.collapsePosition\r\n        );\r\n        return hori > -1 ? \"width\" : \"height\";\r\n    }\r\n}\r\n","export interface IPosition {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport class Position implements IPosition {\r\n    constructor(public x: number, public y: number) { }\r\n\r\n    static fromEvent(e: MouseEvent | TouchEvent, el: any = null) {\r\n        /**\r\n         * Fix issue: Resize doesn't work on Windows10 IE11 (and on some windows 7 IE11)\r\n         * https://github.com/xieziyu/angular2-draggable/issues/164\r\n         * e instanceof MouseEvent check returns false on IE11\r\n         */\r\n        if (this.isMouseEvent(e)) {\r\n            return new Position(e.clientX, e.clientY);\r\n        } else {\r\n            if (el === null || e.changedTouches.length === 1) {\r\n                return new Position(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\r\n            }\r\n\r\n            /**\r\n             * Fix issue: Multiple phone draggables at the same time\r\n             * https://github.com/xieziyu/angular2-draggable/issues/128\r\n             */\r\n            for (let i = 0; i < e.changedTouches.length; i++) {\r\n                if (e.changedTouches[i].target === el) {\r\n                    return new Position(e.changedTouches[i].clientX, e.changedTouches[i].clientY);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static isMouseEvent(e: MouseEvent | TouchEvent): e is MouseEvent {\r\n        return Object.prototype.toString.apply(e).indexOf('MouseEvent') === 8;\r\n    }\r\n\r\n    static isIPosition(obj): obj is IPosition {\r\n        return !!obj && ('x' in obj) && ('y' in obj);\r\n    }\r\n\r\n    static getCurrent(el: Element) {\r\n        let pos = new Position(0, 0);\r\n\r\n        if (window) {\r\n            const computed = window.getComputedStyle(el);\r\n            if (computed) {\r\n                let x = parseInt(computed.getPropertyValue('left'), 10);\r\n                let y = parseInt(computed.getPropertyValue('top'), 10);\r\n                pos.x = isNaN(x) ? 0 : x;\r\n                pos.y = isNaN(y) ? 0 : y;\r\n            }\r\n            return pos;\r\n        } else {\r\n            // console.error('Not Supported!');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static copy(p: IPosition) {\r\n        return new Position(0, 0).set(p);\r\n    }\r\n\r\n    get value(): IPosition {\r\n        return { x: this.x, y: this.y };\r\n    }\r\n\r\n    add(p: IPosition) {\r\n        this.x += p.x;\r\n        this.y += p.y;\r\n        return this;\r\n    }\r\n\r\n    subtract(p: IPosition) {\r\n        this.x -= p.x;\r\n        this.y -= p.y;\r\n        return this;\r\n    }\r\n\r\n    multiply(n: number) {\r\n        this.x *= n;\r\n        this.y *= n;\r\n    }\r\n\r\n    divide(n: number) {\r\n        this.x /= n;\r\n        this.y /= n;\r\n    }\r\n\r\n    reset() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        return this;\r\n    }\r\n\r\n    set(p: IPosition) {\r\n        this.x = p.x;\r\n        this.y = p.y;\r\n        return this;\r\n    }\r\n}\r\n","import { Renderer2 } from '@angular/core';\r\n\r\nexport class HelperBlock {\r\n    protected _helper: Element;\r\n    private _added = false;\r\n\r\n    constructor(\r\n        protected parent: Element,\r\n        protected renderer: Renderer2\r\n    ) {\r\n        // generate helper div\r\n        let helper = renderer.createElement('div');\r\n        renderer.setStyle(helper, 'position', 'absolute');\r\n        renderer.setStyle(helper, 'width', '100%');\r\n        renderer.setStyle(helper, 'height', '100%');\r\n        renderer.setStyle(helper, 'background-color', 'transparent');\r\n        renderer.setStyle(helper, 'top', '0');\r\n        renderer.setStyle(helper, 'left', '0');\r\n\r\n        // done\r\n        this._helper = helper;\r\n    }\r\n\r\n    add() {\r\n        // append div to parent\r\n        if (this.parent && !this._added) {\r\n            this.parent.appendChild(this._helper);\r\n            this._added = true;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        if (this.parent && this._added) {\r\n            this.parent.removeChild(this._helper);\r\n            this._added = false;\r\n        }\r\n    }\r\n\r\n    dispose() {\r\n        this._helper = null;\r\n        this._added = false;\r\n    }\r\n\r\n    get el() {\r\n        return this._helper;\r\n    }\r\n}\r\n","import { Component, OnInit, Input, HostBinding, Renderer2, AfterViewInit, ElementRef, HostListener, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { fromEvent, Subscription, BehaviorSubject } from 'rxjs';\r\nimport { IPosition, Position } from './helper/position';\r\nimport { HelperBlock } from './helper/helper-block';\r\n\r\n@Component({\r\n    selector: 'farris-splitter-bar',\r\n    template: `\r\n    ss\r\n  `,\r\n    host: {\r\n        'ngDraggable': 'true'\r\n    },\r\n    styles: [`\r\n        :host{\r\n            width: 8px;\r\n            background: #ebebeb;\r\n            cursor: move;\r\n        }\r\n    `\r\n    ]\r\n})\r\nexport class SplitterBarComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    // è¿ä¸ªç»ä»¶æ²¡æè¢«ä½¿ç¨è¿ï¼ç®åå®ç°ææ½é½æ¯ç¨ngResizable\r\n    @HostBinding('class.f-component-splitter-bar') klass = true;\r\n    // @HostBinding('attr.ngDraggable') draggable = true;\r\n    @Input() zIndexMoving: any;\r\n    @Input() position: IPosition = { x: 0, y: 0 };\r\n    @Input() trackPosition = true;\r\n    @Input() gridSize = 1;\r\n    @Input() lockAxis: string = null;\r\n    @Input() scale = 1;\r\n    @Output() started = new EventEmitter<any>();\r\n    @Output() stopped = new EventEmitter<any>();\r\n    @Output() edge = new EventEmitter<any>();\r\n    @Output() endOffset = new EventEmitter<IPosition>();\r\n    @Output() movingOffset = new EventEmitter<IPosition>();\r\n    set order(value: number) {\r\n        this._order = value;\r\n        this.orderState.next(value);\r\n    }\r\n    _order: number;\r\n    orderState = new BehaviorSubject<any>({});\r\n    el: HTMLElement\r\n    allowDrag: boolean = true;\r\n    preventDefaultEvent: boolean = true;\r\n    oldZIndex: any;\r\n    rightMovedMax: any;\r\n    leftMovedMax: any;\r\n    // é¼ æ åå§ä½ç½®\r\n    private orignal: Position = null;\r\n    private draggingSub: Subscription = null;\r\n    private moving = false;\r\n    private _zIndex: any;\r\n    private _helperBlock: HelperBlock = null;\r\n    private needTransform = false;\r\n    private oldTrans = new Position(0, 0);\r\n    private tempTrans = new Position(0, 0);\r\n    private currTrans = new Position(0, 0);\r\n    private movedTrans: Position = new Position(0, 0);\r\n\r\n    constructor(\r\n        private elementRef: ElementRef,\r\n        private renderer: Renderer2\r\n    ) {\r\n        this._helperBlock = new HelperBlock(elementRef.nativeElement, renderer);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.el = this.elementRef.nativeElement;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.orderState.subscribe(data => {\r\n            if (data !== undefined && this.renderer) {\r\n                this.renderer.setStyle(this.el, 'order', data);\r\n            }\r\n        })\r\n        // console.log(\"bar\" + this.el.getBoundingClientRect().left, this.el.getBoundingClientRect().top)\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.orignal = null;\r\n        this.oldTrans = null;\r\n        this.tempTrans = null;\r\n        this.currTrans = null;\r\n        this.movedTrans = null;\r\n        this._helperBlock.dispose();\r\n        this._helperBlock = null;\r\n\r\n        if (this.draggingSub) {\r\n            this.draggingSub.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private moveTo(p: Position) {\r\n        if (this.orignal) {\r\n            p.subtract(this.orignal);\r\n            this.tempTrans.set(p);\r\n            this.tempTrans.divide(this.scale);\r\n            this.transform();\r\n            this.movingOffset.emit(this.currTrans.value);\r\n        }\r\n    }\r\n\r\n    private transform() {\r\n        let translateX = this.tempTrans.x + this.oldTrans.x;\r\n        let translateY = this.tempTrans.y + this.oldTrans.y;\r\n\r\n        if (this.lockAxis === 'x') {\r\n            translateX = this.oldTrans.x;\r\n            this.tempTrans.x = 0;\r\n        } else if (this.lockAxis === 'y') {\r\n            translateY = this.oldTrans.y;\r\n            this.tempTrans.y = 0;\r\n            // console.log(this.movedTrans.x + this.tempTrans.x, this.movedTrans.x, this.tempTrans.x, this.rightMovedMax, this.leftMovedMax);\r\n            if (this.movedTrans.x + this.tempTrans.x > this.rightMovedMax && this.movedTrans.x + this.tempTrans.x > 0) {\r\n                return;\r\n            }\r\n            if (this.movedTrans.x + this.tempTrans.x <= 0 && Math.abs(this.movedTrans.x + this.tempTrans.x) > this.leftMovedMax) {\r\n                return;\r\n            }\r\n        }\r\n        \r\n        // Snap to grid: by grid size\r\n        if (this.gridSize > 1) {\r\n            translateX = Math.round(translateX / this.gridSize) * this.gridSize;\r\n            translateY = Math.round(translateY / this.gridSize) * this.gridSize;\r\n        }\r\n\r\n        let value = `translate(${Math.round(translateX)}px, ${Math.round(translateY)}px)`;\r\n\r\n        this.renderer.setStyle(this.el, 'transform', value);\r\n        this.renderer.setStyle(this.el, '-webkit-transform', value);\r\n        this.renderer.setStyle(this.el, '-ms-transform', value);\r\n        this.renderer.setStyle(this.el, '-moz-transform', value);\r\n        this.renderer.setStyle(this.el, '-o-transform', value);\r\n\r\n        // save current position\r\n        this.currTrans.x = translateX;\r\n        this.currTrans.y = translateY;\r\n    }\r\n\r\n    private putBack() {\r\n        if (this._zIndex) {\r\n            this.renderer.setStyle(this.el, 'z-index', this._zIndex);\r\n        } else if (this.zIndexMoving) {\r\n            if (this.oldZIndex) {\r\n                this.renderer.setStyle(this.el, 'z-index', this.oldZIndex);\r\n            } else {\r\n                this.el.style.removeProperty('z-index');\r\n            }\r\n        }\r\n\r\n        if (this.moving) {\r\n            this.stopped.emit(this.el);\r\n\r\n            // Remove the helper div:\r\n            this._helperBlock.remove();\r\n\r\n            if (this.needTransform) {\r\n                if (Position.isIPosition(this.position)) {\r\n                    this.oldTrans.set(this.position);\r\n                } else {\r\n                    this.oldTrans.reset();\r\n                }\r\n\r\n                this.transform();\r\n                this.needTransform = false;\r\n            }\r\n\r\n\r\n            this.moving = false;\r\n            this.endOffset.emit(this.currTrans.value);\r\n            this.renderer.removeStyle(this.el, 'transform');\r\n            if (this.trackPosition) {\r\n                this.oldTrans.add(this.tempTrans);\r\n                this.movedTrans.add(this.tempTrans);\r\n            }\r\n\r\n            this.tempTrans.reset();\r\n\r\n            if (!this.trackPosition) {\r\n                this.transform();\r\n            }\r\n\r\n            if (this.movedTrans.x + this.tempTrans.x >= this.rightMovedMax && this.movedTrans.x + this.tempTrans.x >= 0) {\r\n                this.movedTrans.x = this.rightMovedMax;\r\n            }\r\n\r\n            if (this.movedTrans.x + this.tempTrans.x <= 0 && Math.abs(this.movedTrans.x + this.tempTrans.x) >= this.leftMovedMax) {\r\n                this.movedTrans.x = -this.leftMovedMax;\r\n            }\r\n\r\n            const element = this.el;\r\n            this.renderer.removeClass(element, 'ng-dragging');\r\n            /**\r\n             * Fix performance issue:\r\n             * https://github.com/xieziyu/angular2-draggable/issues/112\r\n             */\r\n            this.unsubscribeEvents();\r\n        }\r\n    }\r\n\r\n    private pickUp() {\r\n        // get old z-index:\r\n        this.oldZIndex = this.el.style.zIndex ? this.el.style.zIndex : '';\r\n\r\n        if (window) {\r\n            this.oldZIndex = window.getComputedStyle(this.el, null).getPropertyValue('z-index');\r\n        }\r\n\r\n        if (this.zIndexMoving) {\r\n            this.renderer.setStyle(this.el, 'z-index', this.zIndexMoving);\r\n        }\r\n\r\n        if (!this.moving) {\r\n            this.started.emit(this.el);\r\n            this.moving = true;\r\n\r\n            const element = this.el;\r\n            this.renderer.addClass(element, 'ng-dragging');\r\n\r\n            /**\r\n             * Fix performance issue:\r\n             * https://github.com/xieziyu/angular2-draggable/issues/112\r\n             */\r\n            this.subscribeEvents();\r\n        }\r\n    }\r\n\r\n    private subscribeEvents() {\r\n        this.draggingSub = fromEvent(document, 'mousemove', { passive: false }).subscribe(event => this.onMouseMove(event as MouseEvent));\r\n        this.draggingSub.add(fromEvent(document, 'touchmove', { passive: false }).subscribe(event => this.onMouseMove(event as TouchEvent)));\r\n        this.draggingSub.add(fromEvent(document, 'mouseup', { passive: false }).subscribe(() => this.putBack()));\r\n        // checking if browser is IE or Edge - https://github.com/xieziyu/angular2-draggable/issues/153\r\n        let isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\r\n        if (!isIEOrEdge) {\r\n            this.draggingSub.add(fromEvent(document, 'mouseleave', { passive: false }).subscribe(() => this.putBack()));\r\n        }\r\n        this.draggingSub.add(fromEvent(document, 'touchend', { passive: false }).subscribe(() => this.putBack()));\r\n        this.draggingSub.add(fromEvent(document, 'touchcancel', { passive: false }).subscribe(() => this.putBack()));\r\n    }\r\n\r\n    private unsubscribeEvents() {\r\n        this.draggingSub.unsubscribe();\r\n        this.draggingSub = null;\r\n    }\r\n\r\n    @HostListener('mousedown', ['$event'])\r\n    @HostListener('touchstart', ['$event'])\r\n    onMouseDown(event: MouseEvent | TouchEvent) {\r\n        // 1. skip right click;\r\n        if (event instanceof MouseEvent && event.button === 2) {\r\n            return;\r\n        }\r\n        // 2. if handle is set, the element can only be moved by handle\r\n        let target = event.target || event.srcElement;\r\n\r\n        // 3. if allow drag is set to false, ignore the mousedown\r\n        if (this.allowDrag === false) {\r\n            return;\r\n        }\r\n\r\n        if (this.preventDefaultEvent) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n\r\n        this.orignal = Position.fromEvent(event, this.el);\r\n        this.currTrans.reset();\r\n        this.oldTrans.reset();\r\n        this.pickUp();\r\n    }\r\n\r\n    onMouseMove(event: MouseEvent | TouchEvent) {\r\n        if (this.moving && this.allowDrag) {\r\n            if (this.preventDefaultEvent) {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n            }\r\n\r\n            // Add a transparent helper div:\r\n            this._helperBlock.add();\r\n            this.moveTo(Position.fromEvent(event, this.el));\r\n        }\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, HostBinding, Input, ContentChildren, AfterContentInit, QueryList, ComponentFactoryResolver, ViewContainerRef, Injector, ApplicationRef, Renderer2, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { SplitterPaneComponent } from './splitter-pane.component';\r\nimport { SplitterBarComponent } from './splitter-bar.component';\r\n\r\n@Component({\r\n    selector: 'farris-splitter',\r\n    template: `\r\n    <ng-content></ng-content>\r\n    <ng-container #container></ng-container>\r\n  `,\r\n    styles: []\r\n})\r\nexport class SplitterComponent implements OnInit, AfterContentInit, AfterViewInit {\r\n\r\n    @HostBinding('class.f-component-splitter') splitterCls = true;\r\n    // @HostBinding('class.d-flex') flexCls = true;\r\n    @Input() orientation = \"horizontal\";\r\n    hostEl: HTMLElement;\r\n    @ViewChild('container', { read: ViewContainerRef }) container: ViewContainerRef;\r\n\r\n    @ContentChildren(SplitterPaneComponent) pane: QueryList<SplitterPaneComponent>;\r\n    barComponentRefArray: any[] = [];\r\n    constructor(\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n        private injector: Injector,\r\n        private renderer: Renderer2,\r\n        private elementRef: ElementRef\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        //ä½¿ç¨çæ¯ngResizableï¼æ²¡æä½¿ç¨Barï¼æ­¤å¤æ¹æ³å¯ä¸æ§è¡\r\n            this.hostEl = this.elementRef.nativeElement; \r\n      //  this.initPane();\r\n    }\r\n\r\n    initPane() {\r\n        if (this.pane && this.pane['_results'] && this.pane['_results'].length) {\r\n            let hostWidth = this.hostEl.offsetWidth;\r\n            const length = this.pane['_results'].length;\r\n            const restPane = this.pane['_results'].filter(item => {\r\n                return !item._size;\r\n            });\r\n            const restLength = restPane.length;\r\n            this.pane['_results'].forEach((item, index) => {\r\n                item.order = index * 2;\r\n                if (!!item._size) {\r\n                    hostWidth = hostWidth - this.getElementSize(hostWidth, item._size);\r\n                }\r\n            })\r\n            restPane.forEach(item => {\r\n                item.size = hostWidth / restLength;\r\n            })\r\n            if (length > 1) {\r\n                this.createBar(length - 1);\r\n            }\r\n            this.listenPaneSizeChange();\r\n        }\r\n    }\r\n\r\n    listenPaneSizeChange() {\r\n        const hostWidth = this.hostEl.offsetWidth;\r\n        this.pane['_results'].forEach((item, index) => {\r\n            item.sizeChange.subscribe(size => {\r\n                const nextIndex = index + 1;\r\n                const diff = item.el.offsetWidth - size;\r\n                if (this.pane['_results'][nextIndex]) {\r\n                    const nextPaneMin = this.getElementSize(hostWidth, this.pane['_results'][nextIndex].min);\r\n                    if (this.barComponentRefArray[nextIndex]) {\r\n                        // ææ½åå·¦çæå¤§å®½åº¦\r\n                        if (nextPaneMin >= item.el.offsetWidth || nextPaneMin <= 0) {\r\n                            this.barComponentRefArray[nextIndex].instance.leftMovedMax = this.pane['_results'][nextIndex].el.offsetWidth + diff;\r\n                        } else {\r\n                            this.barComponentRefArray[nextIndex].instance.leftMovedMax = this.pane['_results'][nextIndex].el.offsetWidth + diff - nextPaneMin;\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    // è·åç®æ åç´ çsize\r\n    getElementSize(hostWidth: number, size: any): number {\r\n        let targetSize: number;\r\n        if (!size) {\r\n            targetSize = 0;\r\n            return targetSize;\r\n        }\r\n        if (size.indexOf('px') !== -1 || typeof size === 'number') {\r\n            targetSize = parseInt(size);\r\n        } else if (size.indexOf('%') !== -1) {\r\n            targetSize = hostWidth * parseInt(size) / 100;\r\n        }\r\n        return targetSize;\r\n    }\r\n\r\n    createBar(len: number) {\r\n        let size: any;\r\n        const hostWidth = this.hostEl.offsetWidth;\r\n        for (let i = 0; i < len; i++) {\r\n            const factory = this.componentFactoryResolver.resolveComponentFactory(SplitterBarComponent);\r\n            const componentRef = this.container.createComponent(factory);\r\n            const prevPane = this.pane['_results'][i];\r\n            const prevPaneOriginWidth = prevPane.el.offsetWidth;\r\n            const nextPane = this.pane['_results'][i + 1];\r\n            const nextPaneOriginWidth = nextPane.el.offsetWidth;\r\n            const prePaneMax = this.getElementSize(hostWidth, this.pane['_results'][i].max);\r\n            const prePaneMin = this.getElementSize(hostWidth, this.pane['_results'][i].min);\r\n\r\n            // ææ½åå³çæå¤§å®½åº¦\r\n            if (prePaneMax <= prevPaneOriginWidth && prePaneMax > 0) {\r\n                componentRef.instance.rightMovedMax = 0;\r\n            } else if (prePaneMax >= prevPaneOriginWidth + nextPaneOriginWidth || prePaneMax === 0) {\r\n                componentRef.instance.rightMovedMax = nextPaneOriginWidth;\r\n            } else {\r\n                componentRef.instance.rightMovedMax = prePaneMax - prevPaneOriginWidth;\r\n            }\r\n\r\n            // ææ½åå·¦çæå¤§å®½åº¦\r\n            if (prePaneMin >= prevPaneOriginWidth || prePaneMin <= 0) {\r\n                componentRef.instance.leftMovedMax = prevPaneOriginWidth;\r\n            } else {\r\n                componentRef.instance.leftMovedMax = prevPaneOriginWidth - prePaneMin;\r\n            }\r\n\r\n            // æ¨ªåææ½è¿æ¯çºµåææ½\r\n            if (this.orientation === 'horizontal') {\r\n                componentRef.instance.lockAxis = 'y';\r\n            } else if (this.orientation === 'vertical') {\r\n                componentRef.instance.lockAxis = 'x';\r\n            }\r\n            componentRef.instance.order = 2 * i + 1;\r\n\r\n            // ææ½åå\r\n            componentRef.instance.endOffset.subscribe(data => {\r\n                prevPane.size = prevPane.el.offsetWidth + data.x;\r\n                nextPane.size = nextPane.el.offsetWidth - data.x;\r\n                // console.log(prevPanelOriginWidth + data.x, nextPanelOriginWidth - data.x)\r\n            })\r\n            this.barComponentRefArray.push(componentRef);\r\n            componentRef.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SplitterComponent } from './splitter.component';\r\nimport { SplitterPaneComponent } from './splitter-pane.component';\r\nimport { SplitterBarComponent } from './splitter-bar.component';\r\nimport { AngularDraggableModule } from '@farris/ui-draggable';\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SplitterComponent,\r\n        SplitterPaneComponent,\r\n        SplitterBarComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AngularDraggableModule,\r\n        PerfectScrollbarModule\r\n    ],\r\n    exports: [\r\n        SplitterComponent,\r\n        SplitterPaneComponent,\r\n        SplitterBarComponent\r\n    ],\r\n    entryComponents: [\r\n        SplitterBarComponent\r\n    ]\r\n})\r\nexport class SplitterModule { }\r\n"]}