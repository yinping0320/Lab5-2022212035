/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Directive, TemplateRef, ContentChild, Input, ViewChild, HostBinding, Output, EventEmitter } from '@angular/core';
import { WizardService } from '../service/wizard.service';
// import { PagesetConfig } from './pageset.config';
import { WizardEventType } from '../model/wizard.model';
export class WizardHeaderTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
WizardHeaderTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: '[wizardHeader]'
            },] }
];
/** @nocollapse */
WizardHeaderTemplateDirective.ctorParameters = () => [
    { type: TemplateRef }
];
if (false) {
    /** @type {?} */
    WizardHeaderTemplateDirective.prototype.template;
}
export class WizardStepTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
WizardStepTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: '[wizardStep]'
            },] }
];
/** @nocollapse */
WizardStepTemplateDirective.ctorParameters = () => [
    { type: TemplateRef }
];
if (false) {
    /** @type {?} */
    WizardStepTemplateDirective.prototype.template;
}
export class WizardComponent {
    /**
     * @param {?} wizardSer
     */
    constructor(wizardSer) {
        this.wizardSer = wizardSer;
        /**
         * 步骤条是否可以点击
         */
        this.stepClickable = false;
        // 向导容器自定义样式
        this.stepCls = '';
        /**
         * 步骤条排列方向
         */
        this.direction = 'vertical';
        /**
         * 步骤条摆放位置
         * Top 最顶部
         * HeaderRight 标题右侧
         * PageLeft 页面左侧
         *
         */
        this.stepPosition = 'None';
        this.basicClass = true;
        // @ViewChild('wizardContent') wizardContent: ElementRef;
        // @ViewChild('wizardHeader') wizardHeader: ElementRef;
        //@ViewChild('wizardStep') wizardStep:ElementRef;
        /**
         * 是否撑开
         */
        this.fill = true;
        this.storedIndex = false;
        this.storedIndexState = false;
        this._currentPageId = '';
        // 页面存储列表
        this.pages = [];
        //当前步骤条active状态的索引
        this.currentProgressIndex = 0;
        //默认步骤条
        this.defaultProgressData = {
            activeIndex: 0,
            stepMessages: []
        };
        // 结束向导；传递pageid
        this.stateChange = new EventEmitter();
        //------------------------------------------------问题：未有引用；不能这样写
        // Object.assign(this, { type: 'pages' });
        this.wizardState = this.wizardSer.getWizardState();
    }
    // /**步骤条宽度 */
    // @Input('step-width') stepWidth:number;
    /**
     * @return {?}
     */
    get wizardFill() {
        return this.fill;
    }
    /**
     * 当前展示page的pageid名
     *  ---------------------------------问题： 可能出现问题currentProgressIndex与currentPageId不是一个
     *
     * @return {?}
     */
    get currentPageId() {
        return this._currentPageId;
    }
    /**
     * @param {?} pageid
     * @return {?}
     */
    set currentPageId(pageid) {
        //console.log('当前页面ActiveID' + pageid);
        // 如果当前页与设置页是同一个页一样
        if (pageid && this._currentPageId == pageid) {
            return;
        }
        this.setActivePage(pageid);
    }
    /**
     * @param {?} progressData
     * @return {?}
     */
    set progressData(progressData) {
        setTimeout((/**
         * @return {?}
         */
        () => {
            if (!progressData) {
                return;
            }
            if (progressData && progressData.stepMessages && progressData.stepMessages.length) {
                if (progressData.activeIndex && progressData.activeIndex >= 0) {
                    if (progressData.activeIndex > progressData.stepMessages.length) {
                        progressData.activeIndex = 0;
                    }
                    /** @type {?} */
                    const cachedStep = progressData.stepMessages[progressData.activeIndex];
                    if (cachedStep) {
                        this.cachedPageId = cachedStep['id'];
                    }
                }
                else {
                    this.cachedPageId = progressData.stepMessages[0]['id'];
                }
            }
            // console.log(this.cachedPageId);
            this.tProgressData = progressData;
            this.doAfterProgressData();
        }));
    }
    /**
     * @return {?}
     */
    get progressData() {
        return this.tProgressData;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set subStepData(value) {
        this._subStepData = value;
    }
    /**
     * @return {?}
     */
    get subStepData() {
        return this._subStepData;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.wizardState.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        (data) => {
            this.changeWizardState(data);
        }));
        this.wizardSer.updatePageFill(this.fill);
        //改变向导显示步骤
        this.wizardSer.changeActiveIndex.subscribe((/**
         * @param {?} num
         * @return {?}
         */
        (num) => {
            /** @type {?} */
            let activeNum = (num >= 0 && num < this.progressData.stepMessages.length) ? num : 0;
            this.progressData = Object.assign({}, this.progressData, {
                activeIndex: activeNum
            });
        }));
    }
    /**
     * 子元素已经被加载
     * @return {?}
     */
    ngAfterContentInit() {
        setTimeout((/**
         * @return {?}
         */
        () => {
            if (this.stepPosition === 'None') {
                if (this.pages.length) {
                    this.pages.forEach((/**
                     * @param {?} page
                     * @return {?}
                     */
                    page => {
                        if (this.defaultProgressData.stepMessages.find((/**
                         * @param {?} item
                         * @return {?}
                         */
                        (item) => {
                            return item.id === page.pageId;
                        }))) {
                            return false;
                        }
                        /** @type {?} */
                        const step = {
                            id: page.pageId
                        };
                        this.defaultProgressData.stepMessages.push(step);
                    }));
                    if (this.currentPageId) {
                        /** @type {?} */
                        let stepIndex = this.defaultProgressData.stepMessages.findIndex((/**
                         * @param {?} item
                         * @return {?}
                         */
                        (item) => {
                            return item.id === this.currentPageId;
                        }));
                        if (stepIndex >= 0) {
                            this.defaultProgressData.activeIndex = stepIndex;
                        }
                    }
                }
                this.tProgressData = this.defaultProgressData;
                this.doAfterProgressData();
            }
            else {
                // 执行初始化
                this.setActivePage(this.currentPageId);
                this.setProgressDataDisable(this.currentProgressIndex);
            }
        }));
    }
    /**
     *
     * @param {?} data
     * @return {?}
     */
    changeWizardState(data) {
        switch (data.state) {
            case WizardEventType.Prev:
                // 向导向前
                this.progressStep.prevStep();
                this.currentPageId = data.toPageId;
                break;
            case WizardEventType.Next:
                // 向导向后
                this.progressStep.nextStep();
                this.currentPageId = data.toPageId;
                this.cachedPageId = data.toPageId;
                break;
            case WizardEventType.StepChange:
                this.progressStep.goStep(this.wizardSer.getIndexByPageId(data.toPageId));
                this.currentPageId = data.toPageId;
                break;
            //default:
            //this.wizardStateChange.emit(data);
        }
        this.currentProgressIndex = this.progressStep.getCurrentStepIndex();
        this.setProgressDataDisable(this.currentProgressIndex);
        this.stateChange.emit(data);
    }
    /**
     * 添加Page组件
     * @param {?} page
     * @return {?}
     */
    addPage(page) {
        this.pages.push(page);
        //----------------------------------------问题：此时pageid还没有值，设置当前active，统一在ngAfterViewInit
        // if (this.currentPageId) {
        //     page.active = this.currentPageId === page.pageid;
        // } else {
        //     page.active = this.pages.length === 1;
        // }
    }
    /**
     * 点击step步骤条事件
     * @param {?} event
     * @return {?}
     */
    stepClick(event) {
        if (event.step.clickDisable || this._currentPageId == event.step['id']) {
            return;
        }
        this.wizardSer.updateWizardState(WizardEventType.StepChange, this._currentPageId, event.step['id']);
        //this.currentProgressIndex = event.index;
        //this.progressStep.goStep(event.index);
    }
    /**
     * 设置步骤条不可点击状态
     * @param {?} currentPageIndex
     * @return {?}
     */
    setProgressDataDisable(currentPageIndex) {
        if (this.tProgressData && this.tProgressData.stepMessages && this.tProgressData.stepMessages.length) {
            if (this.cachedPageId) {
                this.cachedCurrentPageIndex = this.tProgressData.stepMessages.findIndex((/**
                 * @param {?} step
                 * @return {?}
                 */
                (step) => {
                    return step.id === this.cachedPageId;
                }));
            }
            if (this.storedIndex && this.cachedCurrentPageIndex >= 0) {
                this.tProgressData.stepMessages.forEach((/**
                 * @param {?} step
                 * @param {?} i
                 * @return {?}
                 */
                (step, i) => {
                    if (i <= this.cachedCurrentPageIndex) {
                        step.clickDisable = false;
                    }
                    else {
                        step.clickDisable = true;
                    }
                }));
            }
            else {
                this.tProgressData.stepMessages.forEach((/**
                 * @param {?} step
                 * @param {?} i
                 * @return {?}
                 */
                (step, i) => {
                    if (i <= currentPageIndex) {
                        step.clickDisable = false;
                    }
                    else {
                        step.clickDisable = true;
                    }
                }));
            }
            this.wizardSer.updateProgressData(this.tProgressData);
        }
    }
    /**
     * 设置当前显示page
     * @private
     * @param {?=} pageid
     * @return {?}
     */
    setActivePage(pageid) {
        if (this.pages[0] && !this.pages[0].getPageId()) {
            this._currentPageId = pageid;
            // if(!this.cachedPageId){
            //     this.cachedPageId = this.pages[0].getPageId();
            // }
            return;
        }
        if (this.pages && this.pages.length) {
            if (!pageid) {
                this.pages.forEach((/**
                 * @param {?} page
                 * @return {?}
                 */
                (page) => {
                    page.setPageActive(false);
                }));
                this.pages[0].setPageActive(true);
                this._currentPageId = this.pages[0].getPageId();
            }
            else {
                this.pages.forEach((/**
                 * @param {?} page
                 * @return {?}
                 */
                (page) => {
                    if (page.getPageId() === pageid) {
                        page.setPageActive(true);
                    }
                    else {
                        page.setPageActive(false);
                    }
                }));
                this._currentPageId = pageid;
            }
        }
        this.wizardSer.updateCurrentPageId(this._currentPageId);
    }
    /**
     * 返回class
     * @return {?}
     */
    getWizardPositionClass() {
        /** @type {?} */
        let className = '';
        switch (this.stepPosition) {
            case 'Top':
                className = 'f-component-wizard-step-top';
                break;
            case 'HeaderRight':
                className = 'f-component-wizard-step-headerright';
                break;
            case 'PageLeft':
                className = 'f-component-wizard-step-pageleft';
                break;
            case "None":
                className = 'f-component-wizard-step-none';
                break;
            default:
                className = '';
        }
        return className;
    }
    /**
     * 判断位置
     * @param {?} value
     * @return {?}
     */
    isWizardPosition(value) {
        return this.stepPosition == value;
    }
    /**
     * 步骤条信息修改后，调整页面显示信息
     * @return {?}
     */
    doAfterProgressData() {
        this.wizardSer.updateProgressData(this.tProgressData);
        if (this.tProgressData) {
            /** @type {?} */
            const activeIndex = this.tProgressData.activeIndex ? this.tProgressData.activeIndex : 0;
            this.currentProgressIndex = (activeIndex >= 0 && activeIndex < this.tProgressData.stepMessages.length) ? activeIndex : 0;
            if (this.tProgressData.stepMessages && this.tProgressData.stepMessages.length) {
                this.setActivePage(this.tProgressData.stepMessages[this.currentProgressIndex].id);
            }
            this.setProgressDataDisable(this.currentProgressIndex);
        }
    }
    /**
     * @param {?} data
     * @return {?}
     */
    setWizardData(data) {
        this.wizardSer.setWizardData(data);
    }
}
WizardComponent.decorators = [
    { type: Component, args: [{
                selector: 'farris-wizard',
                template: "<div class=\"f-wizard\" [ngClass]=\"getWizardPositionClass()\">\r\n    <ng-container *ngIf=\"isWizardPosition('Top')\">\r\n        <ng-container [ngTemplateOutlet]=\"wizardStepTemplate\"></ng-container>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"isWizardPosition('None')\">\r\n        <div class=\"d-none\">\r\n            <ng-container [ngTemplateOutlet]=\"wizardStepTemplate\"></ng-container>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <div class=\"f-wizard-header\" #wizardHeader *ngIf=\"HeaderTemplate || isWizardPosition('HeaderRight')\">\r\n        <ng-container [ngTemplateOutlet]=\"HeaderTemplate\"></ng-container>\r\n        <ng-container *ngIf=\"isWizardPosition('HeaderRight')\">\r\n            <ng-container\r\n                [ngTemplateOutlet]=\"wizardStepTemplate\"\r\n            ></ng-container>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <div class=\"f-wizard-content\" #wizardContent>\r\n        <ng-container *ngIf=\"isWizardPosition('PageLeft')\">\r\n            <ng-container\r\n                [ngTemplateOutlet]=\"wizardStepTemplate\"\r\n            ></ng-container>\r\n        </ng-container>\r\n        <div class=\"f-wizard-pages\">\r\n            <ng-content select=\"wizard-page\"></ng-content>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #wizardStepTemplate>\r\n    <div class=\"f-wizard-step\" [ngClass]=\"stepCls\">\r\n        <farris-progress-step\r\n            #progressStep\r\n            [stepData]=\"tProgressData\"\r\n            [direction]=\"direction\"\r\n            [subStepData]=\"subStepData\"\r\n            [storedIndexState]=\"storedIndexState\"\r\n            (stepClick)=\"stepClick($event)\"\r\n            [clickable]=\"stepClickable\"\r\n        >\r\n            <ng-container *ngIf=\"StepTemplate\">\r\n                <ng-template\r\n                    progressStepItem\r\n                    let-step=\"step\"\r\n                    let-i=\"index\"\r\n                    let-length=\"length\"\r\n                    let-activeIndex=\"activeIndex\"\r\n                    let-direction=\"direction\"\r\n                >\r\n                    <ng-container\r\n                        [ngTemplateOutlet]=\"StepTemplate\"\r\n                        [ngTemplateOutletContext]=\"{\r\n                            step: step,\r\n                            index: i,\r\n                            length: length,\r\n                            activeIndex: activeIndex,\r\n                            direction: direction\r\n                        }\"\r\n                    ></ng-container>\r\n                </ng-template>\r\n            </ng-container>\r\n        </farris-progress-step>\r\n    </div>\r\n</ng-template>\r\n",
                styles: [":host.f-component-wizard{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;min-height:100px}:host.f-component-wizard.f-component-wizard-fill{-webkit-box-flex:1;flex-grow:1;flex-shrink:1;flex-basis:0;height:100%}:host.f-component-wizard.f-component-wizard-fill .f-wizard{-webkit-box-flex:1;flex-grow:1;flex-shrink:1;flex-basis:0;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;overflow-y:hidden}:host.f-component-wizard.f-component-wizard-fill .f-wizard .f-wizard-header{flex-shrink:0}:host.f-component-wizard.f-component-wizard-fill .f-wizard .f-wizard-content{-webkit-box-flex:1;flex-grow:1;flex-shrink:1;flex-basis:0;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;overflow:hidden}:host.f-component-wizard.f-component-wizard-fill .f-wizard .f-wizard-content .f-wizard-pages{-webkit-box-flex:1;flex-grow:1;flex-shrink:1;flex-basis:0;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;overflow:hidden}:host.f-component-wizard .f-wizard{position:relative}:host.f-component-wizard .f-wizard.f-component-wizard-step-pageleft .f-wizard-content{-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row}:host.f-component-wizard .f-wizard.f-component-wizard-step-pageleft .f-wizard-step{min-width:165px;padding:18px 24px;box-shadow:0 2px 4px 0 rgba(0,0,0,.1);overflow:auto}:host.f-component-wizard .f-wizard.f-component-wizard-step-headerright .f-wizard-header{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-align:center;align-items:center}:host.f-component-wizard .f-wizard.f-component-wizard-step-headerright .f-wizard-header .f-wizard-step{-webkit-box-flex:1;flex:1 1 auto;text-align:right}"]
            }] }
];
/** @nocollapse */
WizardComponent.ctorParameters = () => [
    { type: WizardService }
];
WizardComponent.propDecorators = {
    stepClickable: [{ type: Input }],
    stepCls: [{ type: Input }],
    direction: [{ type: Input, args: ['stepDirection',] }],
    stepPosition: [{ type: Input, args: ['stepPosition',] }],
    wizardFill: [{ type: HostBinding, args: ['class.f-component-wizard-fill',] }],
    basicClass: [{ type: HostBinding, args: ['class.f-component-wizard',] }],
    HeaderTemplate: [{ type: ContentChild, args: [WizardHeaderTemplateDirective, { read: TemplateRef },] }],
    StepTemplate: [{ type: ContentChild, args: [WizardStepTemplateDirective, { read: TemplateRef },] }],
    progressStep: [{ type: ViewChild, args: ['progressStep',] }],
    fill: [{ type: Input }],
    storedIndex: [{ type: Input }],
    storedIndexState: [{ type: Input }],
    currentPageId: [{ type: Input }],
    progressData: [{ type: Input }],
    subStepData: [{ type: Input }],
    stateChange: [{ type: Output }]
};
if (false) {
    /**
     * 步骤条是否可以点击
     * @type {?}
     */
    WizardComponent.prototype.stepClickable;
    /** @type {?} */
    WizardComponent.prototype.stepCls;
    /**
     * 步骤条排列方向
     * @type {?}
     */
    WizardComponent.prototype.direction;
    /**
     * 步骤条摆放位置
     * Top 最顶部
     * HeaderRight 标题右侧
     * PageLeft 页面左侧
     *
     * @type {?}
     */
    WizardComponent.prototype.stepPosition;
    /** @type {?} */
    WizardComponent.prototype.basicClass;
    /** @type {?} */
    WizardComponent.prototype.HeaderTemplate;
    /** @type {?} */
    WizardComponent.prototype.StepTemplate;
    /** @type {?} */
    WizardComponent.prototype.progressStep;
    /**
     * 是否撑开
     * @type {?}
     */
    WizardComponent.prototype.fill;
    /** @type {?} */
    WizardComponent.prototype.storedIndex;
    /** @type {?} */
    WizardComponent.prototype.storedIndexState;
    /**
     * @type {?}
     * @private
     */
    WizardComponent.prototype._currentPageId;
    /**
     * @type {?}
     * @private
     */
    WizardComponent.prototype.cachedPageId;
    /**
     * @type {?}
     * @private
     */
    WizardComponent.prototype.cachedCurrentPageIndex;
    /**
     * 步骤条信息数据
     *
     *
     * @type {?}
     */
    WizardComponent.prototype.tProgressData;
    /** @type {?} */
    WizardComponent.prototype._subStepData;
    /** @type {?} */
    WizardComponent.prototype.pages;
    /** @type {?} */
    WizardComponent.prototype.currentProgressIndex;
    /** @type {?} */
    WizardComponent.prototype.defaultProgressData;
    /** @type {?} */
    WizardComponent.prototype.stateChange;
    /**
     * @type {?}
     * @private
     */
    WizardComponent.prototype.wizardState;
    /**
     * @type {?}
     * @private
     */
    WizardComponent.prototype.wizardSer;
}
//# sourceMappingURL=data:application/json;base64,