/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Directive, TemplateRef, ContentChild, HostBinding, Output, EventEmitter, Optional } from '@angular/core';
import { PageService } from '../service/page.service';
import { WizardService } from '../service/wizard.service';
import { WizardEventType } from '../model/wizard.model';
export class wizardPageHeaderTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
wizardPageHeaderTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: '[wizardPageHeader]'
            },] }
];
/** @nocollapse */
wizardPageHeaderTemplateDirective.ctorParameters = () => [
    { type: TemplateRef }
];
if (false) {
    /** @type {?} */
    wizardPageHeaderTemplateDirective.prototype.template;
}
export class wizardPageContentTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
wizardPageContentTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: '[wizardPageContent]'
            },] }
];
/** @nocollapse */
wizardPageContentTemplateDirective.ctorParameters = () => [
    { type: TemplateRef }
];
if (false) {
    /** @type {?} */
    wizardPageContentTemplateDirective.prototype.template;
}
export class wizardPageFooterTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
wizardPageFooterTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: '[wizardPageFooter]'
            },] }
];
/** @nocollapse */
wizardPageFooterTemplateDirective.ctorParameters = () => [
    { type: TemplateRef }
];
if (false) {
    /** @type {?} */
    wizardPageFooterTemplateDirective.prototype.template;
}
export class FarrisPageDetailComponent {
    /**
     * @param {?} wizardSer
     * @param {?} pageSer
     */
    constructor(wizardSer, pageSer) {
        this.wizardSer = wizardSer;
        this.pageSer = pageSer;
        this.cls = true;
        this.pageId = '';
        this.pagedetailSelected = new EventEmitter();
        if (!this.pageSer) {
            this.pageSer = new PageService();
        }
        this.pageSer.activeState.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        data => {
            //console.log('FarrisPageDetailComponent——' + this.pageId+'——'+data);
            if (data.state) {
                this.pagedetailSelected.emit(data);
            }
        }));
    }
    /**
     * @return {?}
     */
    get fill() { return this.wizardSer.getPageFill(); }
    ;
    /**
     * @return {?}
     */
    ngOnInit() {
        this.pageId = this.pageSer.getPageId();
    }
    /**
     * @return {?}
     */
    getPageId() {
        return this.pageId;
    }
    /**
     * @return {?}
     */
    getPrevPageId() {
        return this.wizardSer.getPrePageId(this.pageId);
    }
    /**
     * @return {?}
     */
    getWizardData() {
        return this.wizardSer.getWizardData();
    }
    /**
     * 获取某页数据
     * @param {?=} pageid
     * @return {?}
     */
    getPageData(pageid = this.pageId) {
        return this.wizardSer.getPageData(pageid);
    }
    /**
     * 更新某页数据
     * @param {?} data
     * @param {?=} pageid
     * @return {?}
     */
    setPageData(data, pageid = this.pageId) {
        this.wizardSer.setPageData(data, pageid);
    }
    /**
     * 下一步
     * @return {?}
     */
    nextStep() {
        this.wizardSer.updateWizardState(WizardEventType.Next, this.pageId);
    }
    /**
     * 上一步
     * @return {?}
     */
    prevStep() {
        this.wizardSer.updateWizardState(WizardEventType.Prev, this.pageId);
    }
    /**
     * 结束向导
     * @return {?}
     */
    finishWizard() {
        this.wizardSer.updateWizardState(WizardEventType.Finish, this.pageId);
    }
    /**
     * 取消向导
     * @return {?}
     */
    cancelWizard() {
        this.wizardSer.updateWizardState(WizardEventType.Cancel, this.pageId);
    }
}
FarrisPageDetailComponent.decorators = [
    { type: Component, args: [{
                selector: 'wizard-page-detail',
                template: "<div class=\"f-component-wizard-page-detail-header\" *ngIf=\"pageHeaderTemplate\">\r\n    <ng-container [ngTemplateOutlet]=\"pageHeaderTemplate\"></ng-container>\r\n</div>\r\n<!-- <div class=\"page-message\">\r\n                <ng-container [ngTemplateOutlet]=\"pageMessageTemplate\"></ng-container>\r\n        </div> -->\r\n<div class=\"f-component-wizard-page-detail-content\" *ngIf=\"pageContentTemplate\">\r\n    <ng-container [ngTemplateOutlet]=\"pageContentTemplate\"></ng-container>\r\n</div>\r\n<div class=\"f-component-wizard-page-detail-content\" *ngIf=\"!pageContentTemplate\">\r\n    <ng-content></ng-content>\r\n</div>\r\n<div class=\"f-component-wizard-page-detail-footer\" *ngIf=\"pageFooterTemplate\">\r\n    <ng-container [ngTemplateOutlet]=\"pageFooterTemplate\"></ng-container>\r\n</div>\r\n",
                styles: [":host.f-component-wizard-page-detail-fill{-webkit-box-flex:1;flex-grow:1;flex-shrink:1;flex-basis:0;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}:host.f-component-wizard-page-detail-fill .f-component-wizard-page-detail-footer,:host.f-component-wizard-page-detail-fill .f-component-wizard-page-detail-headeer{flex-shrink:0}:host.f-component-wizard-page-detail-fill .f-component-wizard-page-detail-content{-webkit-box-flex:1;flex-grow:1;flex-shrink:1;flex-basis:0;overflow:auto}:host.f-component-wizard-page-detail-fill .f-component-wizard-page-detail-footer{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-align:center;align-items:center;-webkit-box-pack:end;justify-content:flex-end}"]
            }] }
];
/** @nocollapse */
FarrisPageDetailComponent.ctorParameters = () => [
    { type: WizardService },
    { type: PageService, decorators: [{ type: Optional }] }
];
FarrisPageDetailComponent.propDecorators = {
    cls: [{ type: HostBinding, args: ['class.f-component-wizard-page-detail',] }],
    fill: [{ type: HostBinding, args: ['class.f-component-wizard-page-detail-fill',] }],
    pageHeaderTemplate: [{ type: ContentChild, args: [wizardPageHeaderTemplateDirective, { read: TemplateRef },] }],
    pageContentTemplate: [{ type: ContentChild, args: [wizardPageContentTemplateDirective, { read: TemplateRef },] }],
    pageFooterTemplate: [{ type: ContentChild, args: [wizardPageFooterTemplateDirective, { read: TemplateRef },] }],
    pagedetailSelected: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    FarrisPageDetailComponent.prototype.cls;
    /**
     * @type {?}
     * @private
     */
    FarrisPageDetailComponent.prototype.pageId;
    /** @type {?} */
    FarrisPageDetailComponent.prototype.pageHeaderTemplate;
    /** @type {?} */
    FarrisPageDetailComponent.prototype.pageContentTemplate;
    /** @type {?} */
    FarrisPageDetailComponent.prototype.pageFooterTemplate;
    /** @type {?} */
    FarrisPageDetailComponent.prototype.pagedetailSelected;
    /**
     * @type {?}
     * @private
     */
    FarrisPageDetailComponent.prototype.wizardSer;
    /**
     * @type {?}
     * @private
     */
    FarrisPageDetailComponent.prototype.pageSer;
    /* Skipping unhandled member: ;*/
}
//# sourceMappingURL=data:application/json;base64,