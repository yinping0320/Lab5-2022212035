/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Injector, NgZone, ViewChild } from '@angular/core';
import { HttpService } from '@farris/ide-devkit';
import { TreeTableComponent } from '@farris/ui-treetable';
import { DatagridComponent } from '@farris/ui-datagrid';
import { cloneDeep } from 'lodash-es';
import { LocaleService } from '@farris/ui-locale';
var BizobjectOperatorsComponent = /** @class */ (function () {
    function BizobjectOperatorsComponent(http, injector, ngZone) {
        this.http = http;
        this.injector = injector;
        this.ngZone = ngZone;
        this.serverIp = '';
        this.treeData = [];
        this.columns = [];
        this.items = [];
        this.allOperators = [];
        this.funcModel = {};
        this.selectBizObjectId = '';
        this.selectBizOpId = '';
        this.localeSer = this.injector.get(LocaleService, null);
    }
    Object.defineProperty(BizobjectOperatorsComponent.prototype, "BIZ_OBJECT_URI", {
        get: /**
         * @return {?}
         */
        function () {
            return this.serverIp + '/api/dev/main/v1.0/business-objects';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BizobjectOperatorsComponent.prototype, "FUNCTION_OPERATORS_URI", {
        get: /**
         * @return {?}
         */
        function () {
            return this.serverIp + '/api/runtime/sys/v1.0/funcOperations/all';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BizobjectOperatorsComponent.prototype, "bizObjectId", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.tt.selectedRow) {
                return this.tt.selectedRow;
            }
            return '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BizobjectOperatorsComponent.prototype, "bizOpId", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.grid.selectedRow) {
                return this.grid.selectedRow;
            }
            return '';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    BizobjectOperatorsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.initTreeData();
        this.columns = [
            { title: this.localeSer.getValue('publishmenu.app.column.code'), field: 'code', width: 200 },
            { title: this.localeSer.getValue('publishmenu.app.column.name'), field: 'name', width: 150 }
        ];
    };
    /**
     * @param {?} e
     * @return {?}
     */
    BizobjectOperatorsComponent.prototype.treeNodeClicked = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.grid.clearAll();
        this.items = this.allOperators.filter((/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return n.businessId === e.node.data.id; }));
        if (this.funcModel && Object.keys(this.funcModel).length) {
            /** @type {?} */
            var bizOpId = this.funcModel.bizOpId;
            if (!bizOpId) {
                return;
            }
            this.grid.selectRow(bizOpId, false);
        }
    };
    /**
     * @return {?}
     */
    BizobjectOperatorsComponent.prototype.treeNodeUnSelect = /**
     * @return {?}
     */
    function () {
        this.items = this.allOperators;
    };
    /**
     * @private
     * @return {?}
     */
    BizobjectOperatorsComponent.prototype.initTreeData = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.http.get(this.BIZ_OBJECT_URI).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            if (data) {
                _this.treeData = _this.convert2TreeNodes(data);
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    if (_this.funcModel && Object.keys(_this.funcModel).length) {
                        /** @type {?} */
                        var bizObjectId = _this.funcModel.bizObjectId;
                        if (!bizObjectId) {
                            return;
                        }
                        /** @type {?} */
                        var treeNode = _this.tt.findRowNode(bizObjectId);
                        if (treeNode) {
                            treeNode.parents.forEach((/**
                             * @param {?} id
                             * @return {?}
                             */
                            function (id) {
                                _this.tt.expandNode(id);
                            }));
                            // this.tt.selectNode(bizObjectId);
                        }
                        _this.selectBizObjectId = bizObjectId;
                    }
                }), 200);
            }
        }));
        this.http.get(this.FUNCTION_OPERATORS_URI).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            if (data) {
                _this.items = data.filter((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item.type === 0; }));
                _this.allOperators = cloneDeep(_this.items);
            }
        }));
    };
    /**
     * @private
     * @param {?} data
     * @param {?=} parentId
     * @return {?}
     */
    BizobjectOperatorsComponent.prototype.convert2TreeNodes = /**
     * @private
     * @param {?} data
     * @param {?=} parentId
     * @return {?}
     */
    function (data, parentId) {
        var _this = this;
        if (parentId === void 0) { parentId = null; }
        if (data.length) {
            /** @type {?} */
            var nodes = data.filter((/**
             * @param {?} v
             * @return {?}
             */
            function (v) { return v.parentID === parentId; }));
            return nodes.map((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                /** @type {?} */
                var node = {
                    data: item,
                    children: [],
                    expanded: parentId === null,
                    selectable: Number(item.isDetail) === 1
                };
                node.children = _this.convert2TreeNodes(data, item.id);
                return node;
            }));
        }
        return [];
    };
    BizobjectOperatorsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'bizobj-operators',
                    template: "<div class=\"d-flex flex-row\" style=\"width: 760px; height: 400px;border:0px solid #ae00e6\">\r\n        <!-- Left -->\r\n        <div region=\"west\" class=\"west\" style=\"width: 280px;min-width:280px; height: 100%; background-color: #fff;border-right: 1px solid #e2e8f0;\">\r\n            <!-- \u83DC\u5355\u6811 -->\r\n            <perfect-scrollbar style=\"position: relative; width: 280px; height: 100%;\">\r\n                <farris-treetable #tt [data]=\"treeData\" [idField]=\"'id'\" [striped]=\"false\" [findField]=\"'name'\"\r\n                    [singleSelect]=\"true\" [showIcon]=\"true\" [showFilterBar]=\"false\" [selectOnCheck]=\"true\"\r\n                    (nodeSelected)=\"treeNodeClicked($event)\" [keepSelect]=\"true\"\r\n                    (nodeUnSelect)=\"treeNodeUnSelect()\"\r\n                    [selectValue]=\"selectBizObjectId\"\r\n                    [checkOnSelect]=\"true\" [sortName]=\"'name'\" [sortOrder]=\"'asc'\" [remoteSort]=\"false\">\r\n                    <ng-template farrisTemplate=\"body\" let-rowNode let-treeNode=\"node\" let-rowData=\"rowData\">\r\n                        <tr #row=\"row\" [selectRow]=\"rowNode\" [selectRowDisabled]=\"!rowNode.node.selectable\" [dblclick]=\"true\">\r\n                            <td style=\"border: 0; cursor: pointer;\" [style.color]=\"row.selectRowDisabled? '#595959': '#000000'\">\r\n                                <farris-treeTableToggler [rowNode]=\"rowNode\"></farris-treeTableToggler>\r\n                                <span [innerHTML]=\"rowData['name'] | highlight: tt.findValue: 'name' : 'name'\"></span>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </farris-treetable>\r\n            </perfect-scrollbar>\r\n        </div>\r\n    \r\n        <!-- main -->\r\n        <div region=\"center\" class=\"center f-utils-fill \">\r\n    \r\n            <farris-datagrid [sizeType]=\"'md'\" [fitColumns]=\"true\"\r\n                [columns]=\"columns\" [fit]=\"true\" \r\n                [showCheckbox]=\"true\"\r\n                [selectOnCheck]=\"true\" [checkOnSelect]=\"true\"\r\n                [pagination]=\"false\" #grid\r\n                [data]=\"items\">\r\n            </farris-datagrid>\r\n    \r\n        </div>\r\n    </div>"
                }] }
    ];
    /** @nocollapse */
    BizobjectOperatorsComponent.ctorParameters = function () { return [
        { type: HttpService },
        { type: Injector },
        { type: NgZone }
    ]; };
    BizobjectOperatorsComponent.propDecorators = {
        serverIp: [{ type: Input }],
        grid: [{ type: ViewChild, args: ['grid',] }],
        tt: [{ type: ViewChild, args: ['tt',] }]
    };
    return BizobjectOperatorsComponent;
}());
export { BizobjectOperatorsComponent };
if (false) {
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.serverIp;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.treeData;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.columns;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.items;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.allOperators;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.funcModel;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.selectBizObjectId;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.selectBizOpId;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.grid;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.tt;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.localeSer;
    /**
     * @type {?}
     * @private
     */
    BizobjectOperatorsComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    BizobjectOperatorsComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    BizobjectOperatorsComponent.prototype.ngZone;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYml6b2JqZWN0LW9wZXJhdG9ycy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2lkZS1wdWJsaXNoLW1lbnUvIiwic291cmNlcyI6WyJsaWIvYml6LW9iamVjdC1vcGVyYXRvcnMvYml6b2JqZWN0LW9wZXJhdG9ycy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RGLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNqRCxPQUFPLEVBQVksa0JBQWtCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNwRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRDtJQThDSSxxQ0FDWSxJQUFpQixFQUNqQixRQUFrQixFQUNsQixNQUFjO1FBRmQsU0FBSSxHQUFKLElBQUksQ0FBYTtRQUNqQixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQ2xCLFdBQU0sR0FBTixNQUFNLENBQVE7UUE1Q2pCLGFBQVEsR0FBRyxFQUFFLENBQUM7UUFDdkIsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQUdkLFlBQU8sR0FBRyxFQUFFLENBQUM7UUFDYixVQUFLLEdBQUcsRUFBRSxDQUFDO1FBQ1gsaUJBQVksR0FBRyxFQUFFLENBQUM7UUFFbEIsY0FBUyxHQUFRLEVBQUUsQ0FBQztRQUVwQixzQkFBaUIsR0FBRyxFQUFFLENBQUM7UUFDdkIsa0JBQWEsR0FBRyxFQUFFLENBQUM7UUFtQ2YsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsSUFB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RSxJQUFJO29CQUNWLFFBQVEsRUFBRSxFQUFFO29CQUNaLFFBQVEsRUFBRSxRQUFRLEtBQUssSUFBSTtvQkFDM0IsVUFBVSxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQztpQkFDMUM7Z0JBRUQsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztnQkFDdEQsT0FBTyxJQUFJLENBQUM7WUFDaEIsQ0FBQyxFQUFDLENBQUM7U0FDTjtRQUNELE9BQU8sRUFBRSxDQUFDO0lBQ2QsQ0FBQzs7Z0JBbklKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixzeEVBQW1EO2lCQUN0RDs7OztnQkFSUSxXQUFXO2dCQURlLFFBQVE7Z0JBQUUsTUFBTTs7OzJCQVc5QyxLQUFLO3VCQXNCTCxTQUFTLFNBQUMsTUFBTTtxQkFDaEIsU0FBUyxTQUFDLElBQUk7O0lBd0duQixrQ0FBQztDQUFBLEFBcElELElBb0lDO1NBaElZLDJCQUEyQjs7O0lBQ3BDLCtDQUF1Qjs7SUFDdkIsK0NBQWM7O0lBR2QsOENBQWE7O0lBQ2IsNENBQVc7O0lBQ1gsbURBQWtCOztJQUVsQixnREFBb0I7O0lBRXBCLHdEQUF1Qjs7SUFDdkIsb0RBQW1COztJQVduQiwyQ0FBMkM7O0lBQzNDLHlDQUF3Qzs7SUFpQnhDLGdEQUF5Qjs7Ozs7SUFFckIsMkNBQXlCOzs7OztJQUN6QiwrQ0FBMEI7Ozs7O0lBQzFCLDZDQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgSW5qZWN0b3IsIE5nWm9uZSwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEh0dHBTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy9pZGUtZGV2a2l0JztcclxuaW1wb3J0IHsgVHJlZU5vZGUsIFRyZWVUYWJsZUNvbXBvbmVudCB9IGZyb20gJ0BmYXJyaXMvdWktdHJlZXRhYmxlJztcclxuaW1wb3J0IHsgRGF0YWdyaWRDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLWRhdGFncmlkJztcclxuaW1wb3J0IHsgY2xvbmVEZWVwIH0gZnJvbSAnbG9kYXNoLWVzJztcclxuaW1wb3J0IHsgTG9jYWxlU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9jYWxlJztcclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2Jpem9iai1vcGVyYXRvcnMnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL2Jpem9iamVjdC1vcGVyYXRvcnMuY29tcG9uZW50Lmh0bWwnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBCaXpvYmplY3RPcGVyYXRvcnNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gICAgQElucHV0KCkgc2VydmVySXAgPSAnJztcclxuICAgIHRyZWVEYXRhID0gW107XHJcblxyXG5cclxuICAgIGNvbHVtbnMgPSBbXTtcclxuICAgIGl0ZW1zID0gW107XHJcbiAgICBhbGxPcGVyYXRvcnMgPSBbXTtcclxuXHJcbiAgICBmdW5jTW9kZWw6IGFueSA9IHt9O1xyXG5cclxuICAgIHNlbGVjdEJpek9iamVjdElkID0gJyc7XHJcbiAgICBzZWxlY3RCaXpPcElkID0gJyc7XHJcblxyXG5cclxuICAgIGdldCBCSVpfT0JKRUNUX1VSSSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5zZXJ2ZXJJcCArICcvYXBpL2Rldi9tYWluL3YxLjAvYnVzaW5lc3Mtb2JqZWN0cyc7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IEZVTkNUSU9OX09QRVJBVE9SU19VUkkoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc2VydmVySXAgKyAnL2FwaS9ydW50aW1lL3N5cy92MS4wL2Z1bmNPcGVyYXRpb25zL2FsbCc7XHJcbiAgICB9XHJcblxyXG4gICAgQFZpZXdDaGlsZCgnZ3JpZCcpIGdyaWQ6IERhdGFncmlkQ29tcG9uZW50O1xyXG4gICAgQFZpZXdDaGlsZCgndHQnKSB0dDogVHJlZVRhYmxlQ29tcG9uZW50O1xyXG5cclxuXHJcbiAgICBnZXQgYml6T2JqZWN0SWQoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMudHQuc2VsZWN0ZWRSb3cpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMudHQuc2VsZWN0ZWRSb3c7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiAnJztcclxuICAgIH1cclxuXHJcbiAgICBnZXQgYml6T3BJZCgpIHtcclxuICAgICAgICBpZiAodGhpcy5ncmlkLnNlbGVjdGVkUm93KSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdyaWQuc2VsZWN0ZWRSb3c7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gJyc7XHJcbiAgICB9XHJcbiAgICBsb2NhbGVTZXI6IExvY2FsZVNlcnZpY2U7XHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBwcml2YXRlIGh0dHA6IEh0dHBTZXJ2aWNlLFxyXG4gICAgICAgIHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yLFxyXG4gICAgICAgIHByaXZhdGUgbmdab25lOiBOZ1pvbmUpIHtcclxuXHJcbiAgICAgICAgdGhpcy5sb2NhbGVTZXIgPSB0aGlzLmluamVjdG9yLmdldChMb2NhbGVTZXJ2aWNlLCBudWxsKTtcclxuICAgIH1cclxuXHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmluaXRUcmVlRGF0YSgpO1xyXG5cclxuICAgICAgICB0aGlzLmNvbHVtbnMgPSBbXHJcbiAgICAgICAgICAgIHsgdGl0bGU6IHRoaXMubG9jYWxlU2VyLmdldFZhbHVlKCdwdWJsaXNobWVudS5hcHAuY29sdW1uLmNvZGUnKSwgZmllbGQ6ICdjb2RlJywgd2lkdGg6IDIwMCB9LFxyXG4gICAgICAgICAgICB7IHRpdGxlOiB0aGlzLmxvY2FsZVNlci5nZXRWYWx1ZSgncHVibGlzaG1lbnUuYXBwLmNvbHVtbi5uYW1lJyksIGZpZWxkOiAnbmFtZScsIHdpZHRoOiAxNTAgfVxyXG4gICAgICAgIF07XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHRyZWVOb2RlQ2xpY2tlZChlKSB7XHJcbiAgICAgICAgdGhpcy5ncmlkLmNsZWFyQWxsKCk7XHJcbiAgICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuYWxsT3BlcmF0b3JzLmZpbHRlcihuID0+IG4uYnVzaW5lc3NJZCA9PT0gZS5ub2RlLmRhdGEuaWQpO1xyXG4gICAgICAgIGlmICh0aGlzLmZ1bmNNb2RlbCAmJiBPYmplY3Qua2V5cyh0aGlzLmZ1bmNNb2RlbCkubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGJpek9wSWQgPSB0aGlzLmZ1bmNNb2RlbC5iaXpPcElkO1xyXG4gICAgICAgICAgICBpZiAoIWJpek9wSWQpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmdyaWQuc2VsZWN0Um93KGJpek9wSWQsIGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdHJlZU5vZGVVblNlbGVjdCgpIHtcclxuICAgICAgICB0aGlzLml0ZW1zID0gdGhpcy5hbGxPcGVyYXRvcnM7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHByaXZhdGUgaW5pdFRyZWVEYXRhKCkge1xyXG4gICAgICAgIHRoaXMuaHR0cC5nZXQodGhpcy5CSVpfT0JKRUNUX1VSSSkuc3Vic2NyaWJlKGRhdGEgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy50cmVlRGF0YSA9IHRoaXMuY29udmVydDJUcmVlTm9kZXMoZGF0YSk7XHJcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5mdW5jTW9kZWwgJiYgT2JqZWN0LmtleXModGhpcy5mdW5jTW9kZWwpLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBiaXpPYmplY3RJZCA9IHRoaXMuZnVuY01vZGVsLmJpek9iamVjdElkO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWJpek9iamVjdElkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRyZWVOb2RlID0gdGhpcy50dC5maW5kUm93Tm9kZShiaXpPYmplY3RJZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0cmVlTm9kZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJlZU5vZGUucGFyZW50cy5mb3JFYWNoKChpZCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudHQuZXhwYW5kTm9kZShpZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoaXMudHQuc2VsZWN0Tm9kZShiaXpPYmplY3RJZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0Qml6T2JqZWN0SWQgPSBiaXpPYmplY3RJZDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LCAyMDApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuaHR0cC5nZXQodGhpcy5GVU5DVElPTl9PUEVSQVRPUlNfVVJJKS5zdWJzY3JpYmUoIGRhdGEgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pdGVtcyA9IGRhdGEuZmlsdGVyKGl0ZW0gPT4gaXRlbS50eXBlID09PSAwKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuYWxsT3BlcmF0b3JzID0gY2xvbmVEZWVwKHRoaXMuaXRlbXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHByaXZhdGUgY29udmVydDJUcmVlTm9kZXMoZGF0YTogYW55W10sIHBhcmVudElkID0gbnVsbCk6IFRyZWVOb2RlW10ge1xyXG4gICAgICAgIGlmIChkYXRhLmxlbmd0aCkge1xyXG4gICAgICAgICAgICBjb25zdCBub2RlcyA9IGRhdGEuZmlsdGVyKCh2KSA9PiB2LnBhcmVudElEID09PSBwYXJlbnRJZCk7XHJcbiAgICAgICAgICAgIHJldHVybiBub2Rlcy5tYXAoaXRlbSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBub2RlID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGl0ZW0sXHJcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtdLFxyXG4gICAgICAgICAgICAgICAgICAgIGV4cGFuZGVkOiBwYXJlbnRJZCA9PT0gbnVsbCxcclxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RhYmxlOiBOdW1iZXIoaXRlbS5pc0RldGFpbCkgPT09IDFcclxuICAgICAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAgICAgbm9kZS5jaGlsZHJlbiA9IHRoaXMuY29udmVydDJUcmVlTm9kZXMoZGF0YSwgaXRlbS5pZCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbm9kZTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBbXTtcclxuICAgIH1cclxufVxyXG4iXX0=