/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Injector, NgZone, ViewChild } from '@angular/core';
import { HttpService } from '@farris/ide-devkit';
import { TreeTableComponent } from '@farris/ui-treetable';
import { DatagridComponent } from '@farris/ui-datagrid';
import { cloneDeep } from 'lodash-es';
import { LocaleService } from '@farris/ui-locale';
export class BizobjectOperatorsComponent {
    /**
     * @param {?} http
     * @param {?} injector
     * @param {?} ngZone
     */
    constructor(http, injector, ngZone) {
        this.http = http;
        this.injector = injector;
        this.ngZone = ngZone;
        this.serverIp = '';
        this.treeData = [];
        this.columns = [];
        this.items = [];
        this.allOperators = [];
        this.funcModel = {};
        this.selectBizObjectId = '';
        this.selectBizOpId = '';
        this.localeSer = this.injector.get(LocaleService, null);
    }
    /**
     * @return {?}
     */
    get BIZ_OBJECT_URI() {
        return this.serverIp + '/api/dev/main/v1.0/business-objects';
    }
    /**
     * @return {?}
     */
    get FUNCTION_OPERATORS_URI() {
        return this.serverIp + '/api/runtime/sys/v1.0/funcOperations/all';
    }
    /**
     * @return {?}
     */
    get bizObjectId() {
        if (this.tt.selectedRow) {
            return this.tt.selectedRow;
        }
        return '';
    }
    /**
     * @return {?}
     */
    get bizOpId() {
        if (this.grid.selectedRow) {
            return this.grid.selectedRow;
        }
        return '';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.initTreeData();
        this.columns = [
            { title: this.localeSer.getValue('publishmenu.app.column.code'), field: 'code', width: 200 },
            { title: this.localeSer.getValue('publishmenu.app.column.name'), field: 'name', width: 150 }
        ];
    }
    /**
     * @param {?} e
     * @return {?}
     */
    treeNodeClicked(e) {
        this.grid.clearAll();
        this.items = this.allOperators.filter((/**
         * @param {?} n
         * @return {?}
         */
        n => n.businessId === e.node.data.id));
        if (this.funcModel && Object.keys(this.funcModel).length) {
            /** @type {?} */
            const bizOpId = this.funcModel.bizOpId;
            if (!bizOpId) {
                return;
            }
            this.grid.selectRow(bizOpId, false);
        }
    }
    /**
     * @return {?}
     */
    treeNodeUnSelect() {
        this.items = this.allOperators;
    }
    /**
     * @private
     * @return {?}
     */
    initTreeData() {
        this.http.get(this.BIZ_OBJECT_URI).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        data => {
            if (data) {
                this.treeData = this.convert2TreeNodes(data);
                setTimeout((/**
                 * @return {?}
                 */
                () => {
                    if (this.funcModel && Object.keys(this.funcModel).length) {
                        /** @type {?} */
                        const bizObjectId = this.funcModel.bizObjectId;
                        if (!bizObjectId) {
                            return;
                        }
                        /** @type {?} */
                        const treeNode = this.tt.findRowNode(bizObjectId);
                        if (treeNode) {
                            treeNode.parents.forEach((/**
                             * @param {?} id
                             * @return {?}
                             */
                            (id) => {
                                this.tt.expandNode(id);
                            }));
                            // this.tt.selectNode(bizObjectId);
                        }
                        this.selectBizObjectId = bizObjectId;
                    }
                }), 200);
            }
        }));
        this.http.get(this.FUNCTION_OPERATORS_URI).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        data => {
            if (data) {
                this.items = data.filter((/**
                 * @param {?} item
                 * @return {?}
                 */
                item => item.type === 0));
                this.allOperators = cloneDeep(this.items);
            }
        }));
    }
    /**
     * @private
     * @param {?} data
     * @param {?=} parentId
     * @return {?}
     */
    convert2TreeNodes(data, parentId = null) {
        if (data.length) {
            /** @type {?} */
            const nodes = data.filter((/**
             * @param {?} v
             * @return {?}
             */
            (v) => v.parentID === parentId));
            return nodes.map((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                /** @type {?} */
                const node = {
                    data: item,
                    children: [],
                    expanded: parentId === null,
                    selectable: Number(item.isDetail) === 1
                };
                node.children = this.convert2TreeNodes(data, item.id);
                return node;
            }));
        }
        return [];
    }
}
BizobjectOperatorsComponent.decorators = [
    { type: Component, args: [{
                selector: 'bizobj-operators',
                template: "<div class=\"d-flex flex-row\" style=\"width: 760px; height: 400px;border:0px solid #ae00e6\">\r\n        <!-- Left -->\r\n        <div region=\"west\" class=\"west\" style=\"width: 280px;min-width:280px; height: 100%; background-color: #fff;border-right: 1px solid #e2e8f0;\">\r\n            <!-- \u83DC\u5355\u6811 -->\r\n            <perfect-scrollbar style=\"position: relative; width: 280px; height: 100%;\">\r\n                <farris-treetable #tt [data]=\"treeData\" [idField]=\"'id'\" [striped]=\"false\" [findField]=\"'name'\"\r\n                    [singleSelect]=\"true\" [showIcon]=\"true\" [showFilterBar]=\"false\" [selectOnCheck]=\"true\"\r\n                    (nodeSelected)=\"treeNodeClicked($event)\" [keepSelect]=\"true\"\r\n                    (nodeUnSelect)=\"treeNodeUnSelect()\"\r\n                    [selectValue]=\"selectBizObjectId\"\r\n                    [checkOnSelect]=\"true\" [sortName]=\"'name'\" [sortOrder]=\"'asc'\" [remoteSort]=\"false\">\r\n                    <ng-template farrisTemplate=\"body\" let-rowNode let-treeNode=\"node\" let-rowData=\"rowData\">\r\n                        <tr #row=\"row\" [selectRow]=\"rowNode\" [selectRowDisabled]=\"!rowNode.node.selectable\" [dblclick]=\"true\">\r\n                            <td style=\"border: 0; cursor: pointer;\" [style.color]=\"row.selectRowDisabled? '#595959': '#000000'\">\r\n                                <farris-treeTableToggler [rowNode]=\"rowNode\"></farris-treeTableToggler>\r\n                                <span [innerHTML]=\"rowData['name'] | highlight: tt.findValue: 'name' : 'name'\"></span>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </farris-treetable>\r\n            </perfect-scrollbar>\r\n        </div>\r\n    \r\n        <!-- main -->\r\n        <div region=\"center\" class=\"center f-utils-fill \">\r\n    \r\n            <farris-datagrid [sizeType]=\"'md'\" [fitColumns]=\"true\"\r\n                [columns]=\"columns\" [fit]=\"true\" \r\n                [showCheckbox]=\"true\"\r\n                [selectOnCheck]=\"true\" [checkOnSelect]=\"true\"\r\n                [pagination]=\"false\" #grid\r\n                [data]=\"items\">\r\n            </farris-datagrid>\r\n    \r\n        </div>\r\n    </div>"
            }] }
];
/** @nocollapse */
BizobjectOperatorsComponent.ctorParameters = () => [
    { type: HttpService },
    { type: Injector },
    { type: NgZone }
];
BizobjectOperatorsComponent.propDecorators = {
    serverIp: [{ type: Input }],
    grid: [{ type: ViewChild, args: ['grid',] }],
    tt: [{ type: ViewChild, args: ['tt',] }]
};
if (false) {
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.serverIp;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.treeData;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.columns;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.items;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.allOperators;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.funcModel;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.selectBizObjectId;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.selectBizOpId;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.grid;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.tt;
    /** @type {?} */
    BizobjectOperatorsComponent.prototype.localeSer;
    /**
     * @type {?}
     * @private
     */
    BizobjectOperatorsComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    BizobjectOperatorsComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    BizobjectOperatorsComponent.prototype.ngZone;
}
//# sourceMappingURL=data:application/json;base64,