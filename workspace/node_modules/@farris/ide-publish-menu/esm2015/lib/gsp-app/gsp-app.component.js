/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Injector, Input, NgZone } from '@angular/core';
import { HttpService } from '@farris/ide-devkit';
import { MessagerService } from '@farris/ui-messager';
import { LocaleService } from '@farris/ui-locale';
export class GspAppManagerComponent {
    /**
     * @param {?} http
     * @param {?} injector
     * @param {?} ngZone
     * @param {?} messagerSer
     */
    constructor(http, injector, ngZone, messagerSer) {
        this.http = http;
        this.injector = injector;
        this.ngZone = ngZone;
        this.messagerSer = messagerSer;
        this.serverIp = '';
        this.path = '';
        /**
         * 所有app数据
         */
        this.allAppTreeData = [];
        this.appIdField = 'id';
        this.showMask = true;
        this.appModel = {
            appInvoks: [],
            code: '',
            creator: '',
            description: '',
            id: this.uuid(),
            layer: '4',
            name: '',
            parentId: '',
            url: ''
        };
        this.localeSer = this.injector.get(LocaleService, null);
    }
    /**
     * @private
     * @return {?}
     */
    get APP_URI() {
        return this.serverIp + '/api/runtime/sys/v1.0/gspapp/all';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.initAllAppTree();
        this.appModel.url = this.path;
        this.addInvoke();
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
    }
    /**
     * @return {?}
     */
    validate() {
        /** @type {?} */
        let msg = '';
        if (!this.appModel.code) {
            msg += this.localeSer.getValue('publishmenu.app.message.appcode'); // '<br> 应用编号不能为空。';
        }
        if (!this.appModel.name) {
            msg += this.localeSer.getValue('publishmenu.app.message.appname'); // '<br> 应用名称不能为空。';
        }
        if (!this.appModel.url) {
            msg += this.localeSer.getValue('publishmenu.app.message.url'); // '<br> 部署路径不能为空。';
        }
        if (!this.appModel.appInvoks || !this.appModel.appInvoks.length) {
            msg += this.localeSer.getValue('publishmenu.app.message.appInvoks'); // '请设置应用入口点';
        }
        else {
            // const inValidInvoks = this.appModel.appInvoks.filter(n => {
            //     return !n.code || !n.name || !n.appEntrance;
            // });
            /** @type {?} */
            const _invoksMsg = this.appModel.appInvoks.map((/**
             * @param {?} n
             * @param {?} idx
             * @return {?}
             */
            (n, idx) => {
                /** @type {?} */
                const m = { idx, msg: '' };
                if (!n.name) {
                    m.msg += this.localeSer.getValue('publishmenu.app.message.invoksCode'); // "<br>入口名称不能为空。";
                }
                if (!n.code) {
                    m.msg += this.localeSer.getValue('publishmenu.app.message.invoksName'); // "<br>入口编号不能为空。";
                }
                if (!n.appEntrance) {
                    m.msg += this.localeSer.getValue('publishmenu.app.message.invoksAppEntrance'); // "<br>路由标识不能为空。";
                }
                return m;
            }));
            if (_invoksMsg.length > 0) {
                /** @type {?} */
                const appMain = this.localeSer.getValue('publishmenu.app.entry');
                /** @type {?} */
                const line = this.localeSer.getValue('publishmenu.line');
                _invoksMsg.forEach((/**
                 * @param {?} m
                 * @return {?}
                 */
                m => {
                    msg += `<b>${appMain}:</b> <br> ${line.replace('{line}', m.idx + 1)} , ${m.msg} <br>`;
                }));
                // msg += this.localeSer.getValue('publishmenu.app.message.inValidInvoks'); // '应用入口点信息不完整，请检查。';
            }
        }
        if (msg) {
            this.messagerSer.show('warning', msg, { safeHtml: false });
            return false;
        }
        else {
            return true;
        }
    }
    /**
     * @param {?} e
     * @return {?}
     */
    treeNodeClicked(e) {
        this.appModel.parentId = e.node.data.id;
        this.showMask = false;
    }
    /**
     * @return {?}
     */
    uuid() {
        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (/**
         * @param {?} c
         * @return {?}
         */
        (c) => {
            /** @type {?} */
            const r = Math.random() * 16 | 0;
            /** @type {?} */
            const v = c === 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        }));
    }
    /**
     * @return {?}
     */
    addInvoke() {
        this.appModel.appInvoks.push(this.createNewAppInvok());
    }
    /**
     * @param {?} id
     * @return {?}
     */
    removeInvoke(id) {
        this.appModel.appInvoks = this.appModel.appInvoks.filter((/**
         * @param {?} n
         * @return {?}
         */
        n => n.id !== id));
    }
    /**
     * @private
     * @return {?}
     */
    initAllAppTree() {
        this.http.get(this.APP_URI).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        data => {
            if (data) {
                this.allAppTreeData = this.convert2TreeNodes(data);
                // console.log(this.allAppTreeData);
            }
        }));
    }
    /**
     * @private
     * @param {?} data
     * @param {?=} parentId
     * @return {?}
     */
    convert2TreeNodes(data, parentId = '') {
        if (data.length) {
            /** @type {?} */
            const nodes = data.filter((/**
             * @param {?} v
             * @return {?}
             */
            (v) => {
                /** @type {?} */
                let pid = v.parentId;
                if (pid === undefined || pid === null) {
                    pid = '';
                }
                return pid === parentId;
            }));
            return nodes.map((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                /** @type {?} */
                const node = {
                    data: item,
                    children: [],
                    selectable: item.layer === '3'
                };
                node.children = this.convert2TreeNodes(data, item.id);
                return node;
            }));
        }
        return [];
    }
    /**
     * @private
     * @return {?}
     */
    createNewAppInvok() {
        return {
            id: this.uuid(),
            appId: this.appModel.id,
            code: '',
            appEntrance: '',
            // 路由标识
            name: ''
        };
    }
}
GspAppManagerComponent.decorators = [
    { type: Component, args: [{
                selector: 'gsp-app-mangaer',
                template: "<div class=\"d-flex flex-row\" style=\"width: 760px; height: 400px;border:0px solid #ae00e6\">\r\n    <!-- Left -->\r\n    <div region=\"west\" class=\"west\" style=\"width: 280px;min-width:280px; height: 100%; background-color: #fff;border-right: 1px solid #e2e8f0;\">\r\n        <!-- \u83DC\u5355\u6811 -->\r\n        <perfect-scrollbar style=\"position: relative; width: 280px; height: 100%;\">\r\n            <farris-treetable #tt [data]=\"allAppTreeData\" [idField]=\"appIdField\" [striped]=\"false\" [findField]=\"'name'\"\r\n                [singleSelect]=\"true\" [showIcon]=\"true\" [showFilterBar]=\"false\" [selectOnCheck]=\"true\"\r\n                (nodeSelected)=\"treeNodeClicked($event)\"\r\n                [checkOnSelect]=\"true\" [sortName]=\"'name'\" [sortOrder]=\"'asc'\" [remoteSort]=\"false\">\r\n                <ng-template farrisTemplate=\"body\" let-rowNode let-treeNode=\"node\" let-rowData=\"rowData\">\r\n                    <tr #row=\"row\" [selectRow]=\"rowNode\" [selectRowDisabled]=\"!rowNode.node.selectable\" [dblclick]=\"true\">\r\n                        <td style=\"border: 0; cursor: pointer;\" [style.color]=\"row.selectRowDisabled? '#595959': '#000000'\">\r\n                            <farris-treeTableToggler [rowNode]=\"rowNode\"></farris-treeTableToggler>\r\n                            <span [innerHTML]=\"rowData['name'] | highlight: tt.findValue: 'name' : 'name'\"></span>\r\n                        </td>\r\n                    </tr>\r\n                </ng-template>\r\n            </farris-treetable>\r\n        </perfect-scrollbar>\r\n    </div>\r\n\r\n    <!-- main -->\r\n    <div region=\"center\" class=\"center flex-fill public-menu-main\" style=\"color: #000000; overflow: auto;\">\r\n\r\n        <div class=\"mengbanban\" *ngIf=\"showMask\" style=\"\r\n            position: absolute;\r\n            z-index: 10;\r\n            top: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            opacity: 0.5;\r\n            background: #fff;\r\n            display: block;\r\n            font-size: 40px;\r\n        \"><h1 style=\"\r\n            margin-top: 145px;\r\n            color: #000;\r\n            margin-left: 20px;\r\n        \">\u2190 {{ 'publishmenu.app.message.info' | locale }}</h1></div>\r\n\r\n        <div class=\"row\" style=\"margin: 10px 15px;\">\r\n            <div class=\"col-12\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtAppCode\">{{ 'publishmenu.app.id' | locale }}</label>\r\n                    <input type=\"text\" disabled [ngModel]=\"appModel.id\" class=\"form-control\" id=\"txtappid\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtAppCode\"><span class=\"farris-label-info text-danger\">*</span>{{ 'publishmenu.app.code' | locale }}</label>\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"appModel.code\" id=\"txtAppCode\" >\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtAppName\"><span class=\"farris-label-info text-danger\">*</span>{{ 'publishmenu.app.name' | locale }}</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"txtAppName\"  [(ngModel)]=\"appModel.name\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtAppAction\"><span class=\"farris-label-info text-danger\">*</span>{{ 'publishmenu.app.path' | locale }}</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"txtAppAction\" [(ngModel)]=\"appModel.url\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtAppRemark\">{{ 'publishmenu.app.remark' | locale }}</label>\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"appModel.description\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtAppRemark\"><span class=\"farris-label-info text-danger\">*</span>{{ 'publishmenu.app.entry' | locale }}</label>\r\n                    <table class=\"table table-bordered\">\r\n                        <colgroup>\r\n                            <col width=\"50\">\r\n                            <col width=\"50\">\r\n                            <col width=\"50\">\r\n                            <col width=\"30\">\r\n                        </colgroup>\r\n                        <thead>\r\n                            <tr>\r\n                                <td>\r\n                                    {{ 'publishmenu.app.entryname' | locale }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ 'publishmenu.app.entrycode' | locale }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ 'publishmenu.app.routeid' | locale }}\r\n                                </td>\r\n                                <td align=\"center\">\r\n                                    {{ 'publishmenu.app.action' | locale }}\r\n                                </td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let n of appModel.appInvoks\">\r\n                                <td>\r\n                                    <input type=\"text\" [(ngModel)]=\"n.name\" class=\"form-control\">\r\n                                </td>\r\n                                <td>\r\n                                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"n.code\" >\r\n                                </td>\r\n                                <td>\r\n                                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"n.appEntrance\" >\r\n                                </td>\r\n                                <td style=\"padding-left: 0; padding-right: 0; text-align: center\">\r\n                                    <button type=\"button\" (click)=\"removeInvoke(n.id)\" class=\"btn\">\r\n                                        <span class=\"k-icon k-i-minus\"></span></button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <tfoot>\r\n                            <tr>\r\n                                <td colspan=\"4\">\r\n                                    <button type=\"button\" (click)=\"addInvoke()\" class=\"btn btn-primary\">\r\n                                        <span class=\"k-icon k-i-plus\"></span> {{ 'publishmenu.app.addentry' | locale }}</button>\r\n                                </td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>"
            }] }
];
/** @nocollapse */
GspAppManagerComponent.ctorParameters = () => [
    { type: HttpService },
    { type: Injector },
    { type: NgZone },
    { type: MessagerService }
];
GspAppManagerComponent.propDecorators = {
    serverIp: [{ type: Input }],
    path: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    GspAppManagerComponent.prototype.serverIp;
    /** @type {?} */
    GspAppManagerComponent.prototype.path;
    /**
     * 所有app数据
     * @type {?}
     */
    GspAppManagerComponent.prototype.allAppTreeData;
    /** @type {?} */
    GspAppManagerComponent.prototype.appIdField;
    /** @type {?} */
    GspAppManagerComponent.prototype.showMask;
    /** @type {?} */
    GspAppManagerComponent.prototype.appModel;
    /** @type {?} */
    GspAppManagerComponent.prototype.localeSer;
    /**
     * @type {?}
     * @private
     */
    GspAppManagerComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    GspAppManagerComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    GspAppManagerComponent.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    GspAppManagerComponent.prototype.messagerSer;
}
//# sourceMappingURL=data:application/json;base64,