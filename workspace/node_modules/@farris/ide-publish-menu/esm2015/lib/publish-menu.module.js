/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { LoadingModule } from '@farris/ui-loading';
import { MessagerModule } from '@farris/ui-messager';
import { FarrisCommonModule } from '@farris/ui-common';
import { ModalModule } from '@farris/ui-modal';
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { TreeTableModule } from '@farris/ui-treetable';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { GSPHttpModule, CacheModule } from '@farris/ide-devkit';
import { DatagridModule } from '@farris/ui-datagrid';
import { PublishMenuComponent } from './publish-menu.component';
import { GspAppManagerComponent } from './gsp-app/gsp-app.component';
import { BizobjectOperatorsComponent } from './biz-object-operators/bizobject-operators.component';
import { SelectAppComponent } from './select-app/select-app.component';
import { LocaleModule } from '@farris/ui-locale';
import { LanguageTextboxModule } from '@farris/ui-language-textbox';
import { PUBLISH_MENU_LOCALE } from './locale';
export class PublishMenuModule {
}
PublishMenuModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    PublishMenuComponent,
                    GspAppManagerComponent,
                    BizobjectOperatorsComponent,
                    SelectAppComponent
                ],
                imports: [
                    CommonModule,
                    FormsModule,
                    LocaleModule.forRoot(PUBLISH_MENU_LOCALE),
                    LanguageTextboxModule,
                    FarrisCommonModule.forRoot(),
                    PerfectScrollbarModule,
                    ModalModule.forRoot(),
                    MessagerModule.forRoot(),
                    CacheModule.forRoot(),
                    LoadingModule.forRoot(),
                    GSPHttpModule,
                    DatagridModule,
                    TreeTableModule
                ],
                entryComponents: [
                    GspAppManagerComponent,
                    BizobjectOperatorsComponent,
                    SelectAppComponent
                ],
                exports: [PublishMenuComponent, GspAppManagerComponent, BizobjectOperatorsComponent,
                    SelectAppComponent]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGlzaC1tZW51Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvaWRlLXB1Ymxpc2gtbWVudS8iLCJzb3VyY2VzIjpbImxpYi9wdWJsaXNoLW1lbnUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbkQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxhQUFhLEVBQUUsV0FBVyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDaEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3JFLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHNEQUFzRCxDQUFDO0FBQ25HLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxVQUFVLENBQUM7QUErQi9DLE1BQU0sT0FBTyxpQkFBaUI7OztZQTlCN0IsUUFBUSxTQUFDO2dCQUNOLFlBQVksRUFBRTtvQkFDVixvQkFBb0I7b0JBQ3BCLHNCQUFzQjtvQkFDdEIsMkJBQTJCO29CQUMzQixrQkFBa0I7aUJBQ3JCO2dCQUNELE9BQU8sRUFBRTtvQkFDTCxZQUFZO29CQUNaLFdBQVc7b0JBQ1gsWUFBWSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztvQkFDekMscUJBQXFCO29CQUNyQixrQkFBa0IsQ0FBQyxPQUFPLEVBQUU7b0JBQzVCLHNCQUFzQjtvQkFDdEIsV0FBVyxDQUFDLE9BQU8sRUFBRTtvQkFDckIsY0FBYyxDQUFDLE9BQU8sRUFBRTtvQkFDeEIsV0FBVyxDQUFDLE9BQU8sRUFBRTtvQkFDckIsYUFBYSxDQUFDLE9BQU8sRUFBRTtvQkFDdkIsYUFBYTtvQkFDYixjQUFjO29CQUNkLGVBQWU7aUJBQ2xCO2dCQUNELGVBQWUsRUFBRTtvQkFDYixzQkFBc0I7b0JBQ3RCLDJCQUEyQjtvQkFDM0Isa0JBQWtCO2lCQUNyQjtnQkFDRCxPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRSxzQkFBc0IsRUFBRSwyQkFBMkI7b0JBQy9FLGtCQUFrQixDQUFDO2FBQzFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9hZGluZ01vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9hZGluZyc7XHJcbmltcG9ydCB7IE1lc3NhZ2VyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1tZXNzYWdlcic7XHJcbmltcG9ydCB7IEZhcnJpc0NvbW1vbk1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tbW9uJztcclxuaW1wb3J0IHsgTW9kYWxNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW1vZGFsJztcclxuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IFRyZWVUYWJsZU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktdHJlZXRhYmxlJztcclxuaW1wb3J0IHsgUGVyZmVjdFNjcm9sbGJhck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktcGVyZmVjdC1zY3JvbGxiYXInO1xyXG5pbXBvcnQgeyBHU1BIdHRwTW9kdWxlLCBDYWNoZU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvaWRlLWRldmtpdCc7XHJcbmltcG9ydCB7IERhdGFncmlkTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kYXRhZ3JpZCc7XHJcbmltcG9ydCB7IFB1Ymxpc2hNZW51Q29tcG9uZW50IH0gZnJvbSAnLi9wdWJsaXNoLW1lbnUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgR3NwQXBwTWFuYWdlckNvbXBvbmVudCB9IGZyb20gJy4vZ3NwLWFwcC9nc3AtYXBwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEJpem9iamVjdE9wZXJhdG9yc0NvbXBvbmVudCB9IGZyb20gJy4vYml6LW9iamVjdC1vcGVyYXRvcnMvYml6b2JqZWN0LW9wZXJhdG9ycy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTZWxlY3RBcHBDb21wb25lbnQgfSBmcm9tICcuL3NlbGVjdC1hcHAvc2VsZWN0LWFwcC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMb2NhbGVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWxvY2FsZSc7XHJcbmltcG9ydCB7IExhbmd1YWdlVGV4dGJveE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbGFuZ3VhZ2UtdGV4dGJveCc7XHJcbmltcG9ydCB7IFBVQkxJU0hfTUVOVV9MT0NBTEUgfSBmcm9tICcuL2xvY2FsZSc7XHJcbkBOZ01vZHVsZSh7XHJcbiAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICBQdWJsaXNoTWVudUNvbXBvbmVudCxcclxuICAgICAgICBHc3BBcHBNYW5hZ2VyQ29tcG9uZW50LFxyXG4gICAgICAgIEJpem9iamVjdE9wZXJhdG9yc0NvbXBvbmVudCxcclxuICAgICAgICBTZWxlY3RBcHBDb21wb25lbnRcclxuICAgIF0sXHJcbiAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgICAgIExvY2FsZU1vZHVsZS5mb3JSb290KFBVQkxJU0hfTUVOVV9MT0NBTEUpLFxyXG4gICAgICAgIExhbmd1YWdlVGV4dGJveE1vZHVsZSxcclxuICAgICAgICBGYXJyaXNDb21tb25Nb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIFBlcmZlY3RTY3JvbGxiYXJNb2R1bGUsXHJcbiAgICAgICAgTW9kYWxNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIE1lc3NhZ2VyTW9kdWxlLmZvclJvb3QoKSxcclxuICAgICAgICBDYWNoZU1vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgTG9hZGluZ01vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgR1NQSHR0cE1vZHVsZSxcclxuICAgICAgICBEYXRhZ3JpZE1vZHVsZSxcclxuICAgICAgICBUcmVlVGFibGVNb2R1bGVcclxuICAgIF0sXHJcbiAgICBlbnRyeUNvbXBvbmVudHM6IFtcclxuICAgICAgICBHc3BBcHBNYW5hZ2VyQ29tcG9uZW50LFxyXG4gICAgICAgIEJpem9iamVjdE9wZXJhdG9yc0NvbXBvbmVudCxcclxuICAgICAgICBTZWxlY3RBcHBDb21wb25lbnRcclxuICAgIF0sXHJcbiAgICBleHBvcnRzOiBbUHVibGlzaE1lbnVDb21wb25lbnQsIEdzcEFwcE1hbmFnZXJDb21wb25lbnQsIEJpem9iamVjdE9wZXJhdG9yc0NvbXBvbmVudCxcclxuICAgICAgICBTZWxlY3RBcHBDb21wb25lbnRdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQdWJsaXNoTWVudU1vZHVsZSB7IH1cclxuIl19