/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, ViewChild, ElementRef, Optional, Injector } from '@angular/core';
var FarrisButtonComponent = /** @class */ (function () {
    function FarrisButtonComponent(injector, _elRef) {
        var _this = this;
        this.injector = injector;
        this._elRef = _elRef;
        this.size = 'small';
        this.type = 'primary';
        this.click = new EventEmitter();
        this.__zone_click = null;
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.el = _elRef ? _elRef.nativeElement : _this.btnEl ? _this.btnEl.nativeElement.parentElement : null;
            _this.initButtonEvent();
        }));
    }
    /**
     * @private
     * @return {?}
     */
    FarrisButtonComponent.prototype.initButtonEvent = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.el && this.el.closest('grid-body-cell')) {
            this.el.addEventListener('mousedown', this.onBtnMouseDown.bind(this), true);
        }
    };
    /**
     * @private
     * @param {?} e
     * @return {?}
     */
    FarrisButtonComponent.prototype.onBtnMouseDown = /**
     * @private
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.__zone_click = this.el['__zone_symbol__clickfalse'];
        if (this.__zone_click && this.__zone_click.length) {
            e.currentTarget.style.pointerEvents = 'none';
            this.el['__zone_symbol__clickfalse'] = null;
        }
    };
    /**
     * @param {?} e
     * @return {?}
     */
    FarrisButtonComponent.prototype.clickEvent = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        e.stopPropagation();
        if (this.disabled) {
            return;
        }
        this.click.emit(e);
    };
    FarrisButtonComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-button',
                    template: "\n    <button [class]=\"(size === 'large'?'btn-lg ':'btn-sm ')+\n    'btn '+ (type?'btn-'+type+' ':'')\"  #btn \n    [class.disabled]=\"disabled\" (click)=\"clickEvent($event)\">\n      <ng-content></ng-content>\n    </button>\n  "
                }] }
    ];
    /** @nocollapse */
    FarrisButtonComponent.ctorParameters = function () { return [
        { type: Injector, decorators: [{ type: Optional }] },
        { type: ElementRef, decorators: [{ type: Optional }] }
    ]; };
    FarrisButtonComponent.propDecorators = {
        text: [{ type: Input }],
        size: [{ type: Input }],
        type: [{ type: Input }],
        disabled: [{ type: Input }],
        click: [{ type: Output }],
        btnEl: [{ type: ViewChild, args: ['btn',] }]
    };
    return FarrisButtonComponent;
}());
export { FarrisButtonComponent };
if (false) {
    /** @type {?} */
    FarrisButtonComponent.prototype.text;
    /** @type {?} */
    FarrisButtonComponent.prototype.size;
    /** @type {?} */
    FarrisButtonComponent.prototype.type;
    /** @type {?} */
    FarrisButtonComponent.prototype.disabled;
    /** @type {?} */
    FarrisButtonComponent.prototype.click;
    /** @type {?} */
    FarrisButtonComponent.prototype.btnEl;
    /** @type {?} */
    FarrisButtonComponent.prototype.el;
    /**
     * @type {?}
     * @private
     */
    FarrisButtonComponent.prototype.__zone_click;
    /**
     * @type {?}
     * @private
     */
    FarrisButtonComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    FarrisButtonComponent.prototype._elRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktYnV0dG9uLyIsInNvdXJjZXMiOlsibGliL2J1dHRvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFRLE1BQU0sZUFBZSxDQUFDO0FBRXhIO0lBdUJJLCtCQUFnQyxRQUFrQixFQUFzQixNQUFrQjtRQUExRixpQkFLQztRQUwrQixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQXNCLFdBQU0sR0FBTixNQUFNLENBQVk7UUFWakYsU0FBSSxHQUFHLE9BQU8sQ0FBQztRQUNmLFNBQUksR0FBRyxTQUFTLENBQUM7UUFHaEIsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFLbEMsaUJBQVksR0FBRyxJQUFJLENBQUM7UUFFeEIsVUFBVTs7O1FBQUM7WUFDUCxLQUFJLENBQUMsRUFBRSxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQSxDQUFDLENBQUMsS0FBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7WUFDcEcsS0FBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQzNCLENBQUMsRUFBQyxDQUFBO0lBQ04sQ0FBQzs7Ozs7SUFFTywrQ0FBZTs7OztJQUF2QjtRQUNJLElBQUksSUFBSSxDQUFDLEVBQUUsSUFBSSxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFO1lBQzlDLElBQUksQ0FBQyxFQUFFLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQy9FO0lBQ0wsQ0FBQzs7Ozs7O0lBRU8sOENBQWM7Ozs7O0lBQXRCLFVBQXVCLENBQUM7UUFDcEIsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLDJCQUEyQixDQUFDLENBQUM7UUFDekQsSUFBSSxJQUFJLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFO1lBQy9DLENBQUMsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLGFBQWEsR0FBRyxNQUFNLENBQUM7WUFDN0MsSUFBSSxDQUFDLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQyxHQUFHLElBQUksQ0FBQztTQUMvQztJQUNMLENBQUM7Ozs7O0lBRUQsMENBQVU7Ozs7SUFBVixVQUFXLENBQU07UUFDYixDQUFDLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDcEIsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2YsT0FBTztTQUNWO1FBQ0QsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkIsQ0FBQzs7Z0JBbERKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsZUFBZTtvQkFDekIsUUFBUSxFQUFFLHdPQU1YO2lCQUVGOzs7O2dCQVppRixRQUFRLHVCQXlCekUsUUFBUTtnQkF6Qm1DLFVBQVUsdUJBeUJiLFFBQVE7Ozt1QkFYNUQsS0FBSzt1QkFDTCxLQUFLO3VCQUNMLEtBQUs7MkJBQ0wsS0FBSzt3QkFFTCxNQUFNO3dCQUVOLFNBQVMsU0FBQyxLQUFLOztJQWdDcEIsNEJBQUM7Q0FBQSxBQW5ERCxJQW1EQztTQXhDWSxxQkFBcUI7OztJQUM5QixxQ0FBc0I7O0lBQ3RCLHFDQUF3Qjs7SUFDeEIscUNBQTBCOztJQUMxQix5Q0FBMkI7O0lBRTNCLHNDQUEwQzs7SUFFMUMsc0NBQXlDOztJQUN6QyxtQ0FBUTs7Ozs7SUFFUiw2Q0FBNEI7Ozs7O0lBQ2hCLHlDQUFzQzs7Ozs7SUFBRSx1Q0FBc0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBFdmVudEVtaXR0ZXIsIE91dHB1dCwgVmlld0NoaWxkLCBFbGVtZW50UmVmLCBPcHRpb25hbCwgSW5qZWN0b3IsIEhvc3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdmYXJyaXMtYnV0dG9uJyxcclxuICAgIHRlbXBsYXRlOiBgXHJcbiAgICA8YnV0dG9uIFtjbGFzc109XCIoc2l6ZSA9PT0gJ2xhcmdlJz8nYnRuLWxnICc6J2J0bi1zbSAnKStcclxuICAgICdidG4gJysgKHR5cGU/J2J0bi0nK3R5cGUrJyAnOicnKVwiICAjYnRuIFxyXG4gICAgW2NsYXNzLmRpc2FibGVkXT1cImRpc2FibGVkXCIgKGNsaWNrKT1cImNsaWNrRXZlbnQoJGV2ZW50KVwiPlxyXG4gICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgICA8L2J1dHRvbj5cclxuICBgLFxyXG4gICAgc3R5bGVzOiBbXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRmFycmlzQnV0dG9uQ29tcG9uZW50IHtcclxuICAgIEBJbnB1dCgpIHRleHQ6IHN0cmluZztcclxuICAgIEBJbnB1dCgpIHNpemUgPSAnc21hbGwnO1xyXG4gICAgQElucHV0KCkgdHlwZSA9ICdwcmltYXJ5JztcclxuICAgIEBJbnB1dCgpIGRpc2FibGVkOiBib29sZWFuO1xyXG5cclxuICAgIEBPdXRwdXQoKSBjbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG5cclxuICAgIEBWaWV3Q2hpbGQoJ2J0bicpIGJ0bkVsOiBFbGVtZW50UmVmPGFueT47XHJcbiAgICBlbDogYW55O1xyXG5cclxuICAgIHByaXZhdGUgX196b25lX2NsaWNrID0gbnVsbDtcclxuICAgIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yLCBAT3B0aW9uYWwoKSBwcml2YXRlIF9lbFJlZjogRWxlbWVudFJlZikge1xyXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmVsID0gX2VsUmVmID8gX2VsUmVmLm5hdGl2ZUVsZW1lbnQ6IHRoaXMuYnRuRWwgPyB0aGlzLmJ0bkVsLm5hdGl2ZUVsZW1lbnQucGFyZW50RWxlbWVudCA6IG51bGw7XHJcbiAgICAgICAgICAgIHRoaXMuaW5pdEJ1dHRvbkV2ZW50KCk7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGluaXRCdXR0b25FdmVudCgpIHtcclxuICAgICAgICBpZiAodGhpcy5lbCAmJiB0aGlzLmVsLmNsb3Nlc3QoJ2dyaWQtYm9keS1jZWxsJykpIHtcclxuICAgICAgICAgICAgdGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCB0aGlzLm9uQnRuTW91c2VEb3duLmJpbmQodGhpcyksIHRydWUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG9uQnRuTW91c2VEb3duKGUpIHtcclxuICAgICAgICB0aGlzLl9fem9uZV9jbGljayA9IHRoaXMuZWxbJ19fem9uZV9zeW1ib2xfX2NsaWNrZmFsc2UnXTtcclxuICAgICAgICBpZiAodGhpcy5fX3pvbmVfY2xpY2sgJiYgdGhpcy5fX3pvbmVfY2xpY2subGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIGUuY3VycmVudFRhcmdldC5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ25vbmUnO1xyXG4gICAgICAgICAgICB0aGlzLmVsWydfX3pvbmVfc3ltYm9sX19jbGlja2ZhbHNlJ10gPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjbGlja0V2ZW50KGU6IGFueSkge1xyXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgaWYgKHRoaXMuZGlzYWJsZWQpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNsaWNrLmVtaXQoZSk7XHJcbiAgICB9XHJcbn1cclxuIl19