import { OnDestroy, NgZone, OnChanges, SimpleChanges } from "@angular/core";
import { AfterViewInit, AfterViewChecked, ChangeDetectorRef } from "@angular/core";
import { OnInit, EventEmitter, ElementRef } from "@angular/core";
import { Button } from "./button";
import { Subject } from "rxjs";
import { CommonUtils, OverLayHiddenService } from "@farris/ui-common";
export declare class FarrisButtonGroupComponent implements OnInit, OnChanges, AfterViewInit, AfterViewChecked, OnDestroy {
    private changeRef;
    private ngZone;
    dpBtn: ElementRef;
    dpMenu: ElementRef;
    rectifyReferenceH: HTMLElement;
    rectifyReferenceV: HTMLElement;
    autoRectify: boolean;
    adaptToOuterWidth: boolean;
    private realPlacement;
    rectifyPlacement: string;
    data: Button[];
    count: number;
    size: string;
    type: string;
    private _placement;
    placement: any;
    /**
     *2021.06.12 废弃，因为使用者不知道在中英文情况下，下拉面板的宽度和高度
     */
    width: number;
    height: number;
    private _menuWidth;
    private _menuHeight;
    changeState: EventEmitter<any>;
    change: EventEmitter<any>;
    click: EventEmitter<any>;
    clickMenuOut: EventEmitter<any>;
    /**
     * 2021.06.12 废弃，因为当autoSize为true的时候，按钮显示不出来。
     */
    autoSize: boolean;
    show: boolean;
    readonly flatButtons: Button[];
    readonly dpButtons: Button[];
    setPosition$: Subject<{}>;
    event: any;
    dpFlag: boolean;
    mouseenterEvent: any;
    mouseleaveEvent: any;
    documentClickEvent: any;
    btnSize: any;
    setTimeObj: any;
    btnmenuid: string;
    private previous;
    overLayService: OverLayHiddenService;
    commonUtils: CommonUtils;
    constructor(changeRef: ChangeDetectorRef, ngZone: NgZone);
    private btnmenuId;
    ngOnInit(): void;
    ngOnChanges(simpleChanges: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    clickEvent(e: any): void;
    toggle(e: any, btn: any): void;
    appendBody(): void;
    removeMenuPanel(): void;
    /**
     * 当下拉超出边界时  转换方向,
     * 并未处理，边界不够下拉展示的情况
     * @param btnSize
     */
    changePlacement(btnSize: any): void;
    /**
     * 确认参照的边界
     */
    private getReferencePosition;
    /**
     * 变化对应的class
     * @param position
     */
    _getClsName(position: any): string;
    private getRealPlacement;
    private changePosition;
    bindMenuMouseenter(): void;
    bindiMenuMouseleave(): void;
    unbindMenuMouseenter(): void;
    unbindiMenuMouseleave(): void;
    changeFlagToTrue(): void;
    changeFlagToFalse(): void;
    mouseLeave(): void;
    mouseNotEnterLeave(): void;
    close(): void;
    private setPosition;
    ngOnDestroy(): void;
}
