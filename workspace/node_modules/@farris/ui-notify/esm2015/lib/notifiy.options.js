/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
export class NotifyOptions {
}
NotifyOptions.decorators = [
    { type: Injectable }
];
if (false) {
    /** @type {?} */
    NotifyOptions.prototype.type;
    /** @type {?} */
    NotifyOptions.prototype.title;
    /** @type {?} */
    NotifyOptions.prototype.msg;
    /** @type {?} */
    NotifyOptions.prototype.showClose;
    /** @type {?} */
    NotifyOptions.prototype.theme;
    /** @type {?} */
    NotifyOptions.prototype.timeout;
    /** @type {?} */
    NotifyOptions.prototype.onAdd;
    /** @type {?} */
    NotifyOptions.prototype.onRemove;
}
export class NotifyData extends NotifyOptions {
}
if (false) {
    /** @type {?} */
    NotifyData.prototype.id;
}
export class NotifyConfig {
    constructor() {
        // Maximum number of toasties to show at once
        this.limit = 5;
        // Whether to show the 'X' icon to close the toast
        this.showClose = true;
        // The window position where the toast pops up
        this.position = 'top-center';
        // How long (in miliseconds) the toasty shows before it's removed. Set to null/0 to turn off.
        this.timeout = 3000;
        // What theme to use
        this.theme = 'bootstrap';
    }
}
NotifyConfig.decorators = [
    { type: Injectable }
];
if (false) {
    /** @type {?} */
    NotifyConfig.prototype.limit;
    /** @type {?} */
    NotifyConfig.prototype.showClose;
    /** @type {?} */
    NotifyConfig.prototype.position;
    /** @type {?} */
    NotifyConfig.prototype.timeout;
    /** @type {?} */
    NotifyConfig.prototype.theme;
    /** @type {?} */
    NotifyConfig.prototype.left;
    /** @type {?} */
    NotifyConfig.prototype.right;
    /** @type {?} */
    NotifyConfig.prototype.top;
    /** @type {?} */
    NotifyConfig.prototype.bottom;
}
/** @enum {number} */
const NotifyEventType = {
    ADD: 0,
    CLEAR: 1,
    CLEAR_ALL: 2,
};
export { NotifyEventType };
NotifyEventType[NotifyEventType.ADD] = 'ADD';
NotifyEventType[NotifyEventType.CLEAR] = 'CLEAR';
NotifyEventType[NotifyEventType.CLEAR_ALL] = 'CLEAR_ALL';
export class NotifyEvent {
    /**
     * @param {?} type
     * @param {?=} value
     */
    constructor(type, value) {
        this.type = type;
        this.value = value;
    }
}
if (false) {
    /** @type {?} */
    NotifyEvent.prototype.type;
    /** @type {?} */
    NotifyEvent.prototype.value;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpeS5vcHRpb25zLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1ub3RpZnkvIiwic291cmNlcyI6WyJsaWIvbm90aWZpeS5vcHRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzNDLE1BQU0sT0FBTyxhQUFhOzs7WUFEekIsVUFBVTs7OztJQUVULDZCQUFhOztJQUNiLDhCQUFlOztJQUNmLDRCQUFhOztJQUNiLGtDQUFvQjs7SUFDcEIsOEJBQWU7O0lBQ2YsZ0NBQWlCOztJQUNqQiw4QkFBaUI7O0lBQ2pCLGlDQUFvQjs7QUFHdEIsTUFBTSxPQUFPLFVBQVcsU0FBUSxhQUFhO0NBRTVDOzs7SUFEQyx3QkFBVzs7QUFJYixNQUFNLE9BQU8sWUFBWTtJQUR6Qjs7UUFHRSxVQUFLLEdBQUcsQ0FBQyxDQUFDOztRQUdWLGNBQVMsR0FBRyxJQUFJLENBQUM7O1FBR2pCLGFBQVEsR0FPYyxZQUFZLENBQUM7O1FBR25DLFlBQU8sR0FBRyxJQUFJLENBQUM7O1FBR2YsVUFBSyxHQUF5QyxXQUFXLENBQUM7SUFLNUQsQ0FBQzs7O1lBM0JBLFVBQVU7Ozs7SUFHVCw2QkFBVTs7SUFHVixpQ0FBaUI7O0lBR2pCLGdDQU9tQzs7SUFHbkMsK0JBQWU7O0lBR2YsNkJBQTBEOztJQUMxRCw0QkFBYTs7SUFDYiw2QkFBYzs7SUFDZCwyQkFBWTs7SUFDWiw4QkFBZTs7OztJQUlmLE1BQUc7SUFDSCxRQUFLO0lBQ0wsWUFBUzs7Ozs7O0FBR1gsTUFBTSxPQUFPLFdBQVc7Ozs7O0lBQ3RCLFlBQW1CLElBQXFCLEVBQVMsS0FBVztRQUF6QyxTQUFJLEdBQUosSUFBSSxDQUFpQjtRQUFTLFVBQUssR0FBTCxLQUFLLENBQU07SUFBRyxDQUFDO0NBQ2pFOzs7SUFEYSwyQkFBNEI7O0lBQUUsNEJBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgTm90aWZ5T3B0aW9ucyB7XHJcbiAgdHlwZTogc3RyaW5nO1xyXG4gIHRpdGxlPzogc3RyaW5nO1xyXG4gIG1zZz86IHN0cmluZztcclxuICBzaG93Q2xvc2U/OiBib29sZWFuO1xyXG4gIHRoZW1lPzogc3RyaW5nO1xyXG4gIHRpbWVvdXQ/OiBudW1iZXI7XHJcbiAgb25BZGQ/OiBGdW5jdGlvbjtcclxuICBvblJlbW92ZT86IEZ1bmN0aW9uO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgTm90aWZ5RGF0YSBleHRlbmRzIE5vdGlmeU9wdGlvbnMge1xyXG4gIGlkOiBudW1iZXI7XHJcbn1cclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIE5vdGlmeUNvbmZpZyB7XHJcbiAgLy8gTWF4aW11bSBudW1iZXIgb2YgdG9hc3RpZXMgdG8gc2hvdyBhdCBvbmNlXHJcbiAgbGltaXQgPSA1O1xyXG5cclxuICAvLyBXaGV0aGVyIHRvIHNob3cgdGhlICdYJyBpY29uIHRvIGNsb3NlIHRoZSB0b2FzdFxyXG4gIHNob3dDbG9zZSA9IHRydWU7XHJcblxyXG4gIC8vIFRoZSB3aW5kb3cgcG9zaXRpb24gd2hlcmUgdGhlIHRvYXN0IHBvcHMgdXBcclxuICBwb3NpdGlvbjpcclxuICAgIHwgJ2JvdHRvbS1yaWdodCdcclxuICAgIHwgJ2JvdHRvbS1sZWZ0J1xyXG4gICAgfCAndG9wLXJpZ2h0J1xyXG4gICAgfCAndG9wLWxlZnQnXHJcbiAgICB8ICd0b3AtY2VudGVyJ1xyXG4gICAgfCAnYm90dG9tLWNlbnRlcidcclxuICAgIHwgJ2NlbnRlci1jZW50ZXInID0gJ3RvcC1jZW50ZXInO1xyXG5cclxuICAvLyBIb3cgbG9uZyAoaW4gbWlsaXNlY29uZHMpIHRoZSB0b2FzdHkgc2hvd3MgYmVmb3JlIGl0J3MgcmVtb3ZlZC4gU2V0IHRvIG51bGwvMCB0byB0dXJuIG9mZi5cclxuICB0aW1lb3V0ID0gMzAwMDtcclxuXHJcbiAgLy8gV2hhdCB0aGVtZSB0byB1c2VcclxuICB0aGVtZTogJ2RlZmF1bHQnIHwgJ21hdGVyaWFsJyB8ICdib290c3RyYXAnID0gJ2Jvb3RzdHJhcCc7XHJcbiAgbGVmdDogbnVtYmVyO1xyXG4gIHJpZ2h0OiBudW1iZXI7XHJcbiAgdG9wOiBudW1iZXI7XHJcbiAgYm90dG9tOiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBlbnVtIE5vdGlmeUV2ZW50VHlwZSB7XHJcbiAgQURELFxyXG4gIENMRUFSLFxyXG4gIENMRUFSX0FMTFxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgTm90aWZ5RXZlbnQge1xyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB0eXBlOiBOb3RpZnlFdmVudFR5cGUsIHB1YmxpYyB2YWx1ZT86IGFueSkge31cclxufVxyXG4iXX0=