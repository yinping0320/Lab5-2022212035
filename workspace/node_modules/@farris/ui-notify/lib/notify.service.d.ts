import { ComponentRef, ComponentFactoryResolver, Injector, ApplicationRef } from '@angular/core';
import { Observable } from 'rxjs';
import { NotifyEvent, NotifyOptions, NotifyConfig } from './notifiy.options';
import { LocaleService } from '@farris/ui-locale';
/**
 * Check and return true if an object is type of string
 * @param obj Analyse has to object the string type
 * @return result of analysis
 */
export declare function isString(obj: any): boolean;
/**
 * Check and return true if an object is type of number
 * @param obj Analyse has to object the boolean type
 * @return result of analysis
 */
export declare function isNumber(obj: any): boolean;
/**
 * Check and return true if an object is type of Function
 * @param obj Analyse has to object the function type
 * @return result of analysis
 */
export declare function isFunction(obj: any): boolean;
export declare class NotifyService {
    private cfr;
    private injector;
    private appRef;
    static THEMES: Array<string>;
    uniqueCounter: number;
    private eventSource;
    events: Observable<NotifyEvent>;
    notifyContainer: ComponentRef<any>;
    config: NotifyConfig;
    localeService: LocaleService;
    constructor(cfr: ComponentFactoryResolver, injector: Injector, appRef: ApplicationRef);
    default(options: NotifyOptions | string | number): void;
    info(options: NotifyOptions | string | number): void;
    success(options: NotifyOptions | string | number): void;
    warning(options: NotifyOptions | string | number): void;
    error(options: NotifyOptions | string | number): void;
    clearAll(): void;
    clear(id: number): void;
    private createContainer;
    private show;
    private _checkConfigItem;
    private clearDom;
}
