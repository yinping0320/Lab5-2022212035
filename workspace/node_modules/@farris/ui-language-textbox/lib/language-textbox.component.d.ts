import { LanguageTextboxService } from './language-textbox.service';
import { OnChanges, SimpleChanges } from '@angular/core';
import { OnInit, ComponentRef, ElementRef, ComponentFactoryResolver, Injector, ApplicationRef, NgZone, Renderer2 } from '@angular/core';
import { ControlValueAccessor, RequiredValidator } from '@angular/forms';
import { InputGroupComponent } from '@farris/ui-input-group';
import { LanguageTextPanelComponent } from './language-textbox-panel.component';
import { LanguageItem } from './types';
import { LocaleService } from '@farris/ui-locale';
import { ChangeDetectorRef, OnDestroy } from '@angular/core';
export declare const LANGUAGE_TEXTBOX_VALUE_ACCESSOR: any;
export interface LanguageTextMaxLength {
    [langCode: string]: number;
}
export declare class LanguageTextboxComponent implements OnInit, OnDestroy, ControlValueAccessor, OnChanges {
    private el;
    private cfr;
    private injector;
    private ngZone;
    private applicationRef;
    private renderer;
    private requiredValidator;
    private cd;
    disabled: boolean;
    readonly: boolean;
    editable: boolean;
    enableClear: boolean;
    languages: LanguageItem[];
    currentLanguage: string;
    panelHeight: number;
    panelWidth: number;
    maxWords: LanguageTextMaxLength;
    /**
     * 面板输入框根据LOCALE_ID 自动获得焦点
     * 设为 false 时，仅第1个获得焦点
     */
    autoFocus: boolean;
    input: InputGroupComponent;
    openOnFocus: boolean;
    groupIcon: string;
    comboPanelRef: ComponentRef<LanguageTextPanelComponent>;
    currentLanguageItem: LanguageItem;
    private data;
    private ngCtrl;
    value: string;
    onKeyDownHandler: any;
    localeService: LocaleService;
    onTextBoxclickHandler: any;
    lts: LanguageTextboxService;
    private overLayService;
    onModelChange: (obj?: any) => void;
    onModelTouched: (obj?: any) => void;
    private debugSer;
    constructor(el: ElementRef, cfr: ComponentFactoryResolver, injector: Injector, ngZone: NgZone, applicationRef: ApplicationRef, renderer: Renderer2, requiredValidator: RequiredValidator, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private bindLanguageInfo;
    ngOnDestroy(): void;
    private registerKeyDown;
    private onKeyDown;
    onFocus($event: any): void;
    onBlur($event: any): void;
    onIconClick($event: any): boolean;
    private getCliecntRect;
    private updateLangOrder;
    showDropDownPanel(): void;
    private getLanguageItem;
    onClear(): void;
    onChanges(val?: any): void;
    setValue(): void;
    hideDropDownPanel(): void;
    writeValue(obj: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState?(isDisabled: boolean): void;
}
