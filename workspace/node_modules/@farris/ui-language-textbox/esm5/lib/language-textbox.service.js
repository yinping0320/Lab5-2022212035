/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Subject } from 'rxjs';
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var LanguageTextboxService = /** @class */ (function () {
    function LanguageTextboxService() {
        this.activePane = null;
        this.hide$ = new Subject();
    }
    /**
     * @param {?} p
     * @return {?}
     */
    LanguageTextboxService.prototype.setActivePane = /**
     * @param {?} p
     * @return {?}
     */
    function (p) {
        if (this.activePane && this.activePane != p) {
            this.activePane.hideDropDownPanel();
            this.activePane = null;
        }
        this.activePane = p;
    };
    /**
     * @return {?}
     */
    LanguageTextboxService.prototype.hide = /**
     * @return {?}
     */
    function () {
        this.hide$.next();
    };
    LanguageTextboxService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    LanguageTextboxService.ctorParameters = function () { return []; };
    /** @nocollapse */ LanguageTextboxService.ngInjectableDef = i0.defineInjectable({ factory: function LanguageTextboxService_Factory() { return new LanguageTextboxService(); }, token: LanguageTextboxService, providedIn: "root" });
    return LanguageTextboxService;
}());
export { LanguageTextboxService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    LanguageTextboxService.prototype.activePane;
    /** @type {?} */
    LanguageTextboxService.prototype.hide$;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2UtdGV4dGJveC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1sYW5ndWFnZS10ZXh0Ym94LyIsInNvdXJjZXMiOlsibGliL2xhbmd1YWdlLXRleHRib3guc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMvQixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUUzQztJQVNJO1FBSlEsZUFBVSxHQUFHLElBQUksQ0FBQztRQUUxQixVQUFLLEdBQUcsSUFBSSxPQUFPLEVBQUUsQ0FBQztJQUVQLENBQUM7Ozs7O0lBRWhCLDhDQUFhOzs7O0lBQWIsVUFBZSxDQUFNO1FBQ2pCLElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLENBQUMsRUFBRTtZQUN6QyxJQUFJLENBQUMsVUFBVSxDQUFDLGlCQUFpQixFQUFFLENBQUM7WUFDcEMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7U0FDMUI7UUFDRCxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQztJQUN4QixDQUFDOzs7O0lBRUQscUNBQUk7OztJQUFKO1FBQ0ksSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN0QixDQUFDOztnQkFyQkosVUFBVSxTQUFDO29CQUNSLFVBQVUsRUFBRSxNQUFNO2lCQUNyQjs7Ozs7aUNBTEQ7Q0EwQkMsQUF2QkQsSUF1QkM7U0FwQlksc0JBQXNCOzs7Ozs7SUFFL0IsNENBQTBCOztJQUUxQix1Q0FBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICAgIHByb3ZpZGVkSW46ICdyb290J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgTGFuZ3VhZ2VUZXh0Ym94U2VydmljZSB7XHJcblxyXG4gICAgcHJpdmF0ZSBhY3RpdmVQYW5lID0gbnVsbDtcclxuXHJcbiAgICBoaWRlJCA9IG5ldyBTdWJqZWN0KCk7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7fVxyXG5cclxuICAgIHNldEFjdGl2ZVBhbmUoIHA6IGFueSApIHtcclxuICAgICAgICBpZiAodGhpcy5hY3RpdmVQYW5lICYmIHRoaXMuYWN0aXZlUGFuZSAhPSBwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYWN0aXZlUGFuZS5oaWRlRHJvcERvd25QYW5lbCgpO1xyXG4gICAgICAgICAgICB0aGlzLmFjdGl2ZVBhbmUgPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmFjdGl2ZVBhbmUgPSBwO1xyXG4gICAgfVxyXG5cclxuICAgIGhpZGUoKSB7XHJcbiAgICAgICAgdGhpcy5oaWRlJC5uZXh0KCk7XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==