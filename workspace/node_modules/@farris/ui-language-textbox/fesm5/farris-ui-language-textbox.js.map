{"version":3,"file":"farris-ui-language-textbox.js.map","sources":["ng://@farris/ui-language-textbox/lib/language-textbox.service.ts","ng://@farris/ui-language-textbox/lib/language-textbox-panel.component.ts","ng://@farris/ui-language-textbox/lib/language-textbox.component.ts","ng://@farris/ui-language-textbox/lib/language-textbox.module.ts"],"sourcesContent":["import { Subject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LanguageTextboxService {\r\n\r\n    private activePane = null;\r\n\r\n    hide$ = new Subject();\r\n\r\n    constructor() {}\r\n\r\n    setActivePane( p: any ) {\r\n        if (this.activePane && this.activePane != p) {\r\n            this.activePane.hideDropDownPanel();\r\n            this.activePane = null;\r\n        }\r\n        this.activePane = p;\r\n    }\r\n\r\n    hide() {\r\n        this.hide$.next();\r\n    }\r\n\r\n}\r\n","import { element } from 'protractor';\r\nimport { InputGroupComponent } from '@farris/ui-input-group';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { ElementRef, NgZone, Injector, Renderer2, OnDestroy, ViewEncapsulation, ChangeDetectorRef, LOCALE_ID, HostListener } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @Company: Inspur\r\n * @Version: v0.0.1\r\n * @Date: 2019-03-12 18:21:51\r\n * @LastEditTime: 2019-03-13 13:36:58\r\n */\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { LanguageItem, LanguageData } from './types';\r\nimport { of } from 'rxjs';\r\nimport { LanguageTextboxComponent } from './language-textbox.component';\r\n\r\n@Component({\r\n    selector: 'language-textbox-panel',\r\n    template: `\r\n        <div *ngIf=\"opened\" class=\"language-textbox-panel f-area-hide\" [ngStyle]=\"getPositionStyles()\" (click)=\"inputClick($event)\">\r\n            <ul class=\"list-group\">\r\n                <li class=\"list-group-item border-0 p-2 px-2\"  *ngFor=\"let item of items\">\r\n                    <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                        <div class=\"form-group farris-form-group\">\r\n                            <label for=\"hpinput01\" class=\"col-form-label\">\r\n                                <span class=\"farris-label-text\" [attr.title]=\"'languageLabel.'+item.code | locale: item.name\">\r\n                                    {{ 'languageLabel.'+item.code | locale: item.name }}</span>\r\n                            </label>\r\n                            <div class=\"farris-input-wrap\">\r\n                                <input type=\"input\" (click)=\"inputClick($event)\" maxlength=\"{{maxWords? maxWords[item.code] : ''}}\" [(ngModel)]=\"data[item.code]\" class=\"form-control\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n                <li class=\"list-group-item border-0 p-2 px-3 text-right\">\r\n                    <button class=\"btn btn-secondary mr-2\" (click)=\"hide($event)\">{{ 'languageLabel.cancel'| locale: 'åæ¶' }}</button>\r\n                    <button class=\"btn btn-primary\" (click)=\"onItemClick($event)\">{{ 'languageLabel.ok'| locale: 'ç¡®å®' }}</button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `.language-textbox-panel {\r\n            overflow: hidden;\r\n            overflow-y: auto;\r\n            padding: 5px;\r\n            position: absolute;\r\n            z-index: 99999;\r\n            background: white;\r\n            box-shadow: 2px 2px 5px #c6c6c6;\r\n        }\r\n\r\n        .language-textbox-panel .dropdown-menu {\r\n            left: -5px;\r\n            box-shadow: 0px 3px 6px 0px rgba(0, 0, 0, 0.37);\r\n            position: relative;\r\n        }\r\n\r\n        .language-selected {\r\n            background-color: #1890ff!important;\r\n            color: #fff;\r\n        }\r\n        `\r\n    ],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LanguageTextPanelComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() opened = false;\r\n    @Input() left: number;\r\n    @Input() top: number;\r\n    @Input() width = 365;\r\n    @Input() height = 200;\r\n    @Input() items: LanguageItem[] = [];\r\n    @Input() data: LanguageData = {};\r\n    @Input() maxWords: { [lang: string]: number } = null;\r\n\r\n    @Output() itemClick = new EventEmitter<any>();\r\n    @Output() hidePanel = new EventEmitter<any>();\r\n    @Output() showPanel = new EventEmitter<any>();\r\n\r\n    currentItem: LanguageItem = undefined;\r\n\r\n    languageInputRef = null;\r\n\r\n    panelClickHandler = undefined;\r\n    cd: ChangeDetectorRef;\r\n    private inputRef: LanguageTextboxComponent;\r\n    constructor(private el: ElementRef, private ngzone: NgZone, private injector: Injector, public render: Renderer2) {\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n    }\r\n\r\n    @HostListener('document:keydown.enter', ['$event'])\r\n    onEnterHandler(event: KeyboardEvent) {\r\n        this.onItemClick(event);\r\n    }\r\n\r\n    @HostListener('document:keydown.esc', ['$event'])\r\n    onEscHandler(event: KeyboardEvent) {\r\n        this.hide(event);\r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.ngzone.runOutsideAngular(() => {\r\n            this.panelClickHandler = this.render.listen(this.el.nativeElement, 'click', (e) => {\r\n                if (e) {\r\n                    e.stopPropagation();\r\n                }\r\n\r\n                // let name = e.target.nodeName || e.target.tagName;\r\n                // if (!name) {\r\n                //     name = e.target.path[0].localeName;\r\n                // }\r\n\r\n                // name = name.toLowerCase();\r\n                if (this.inputRef) {\r\n                    this.inputRef.lts.hide();\r\n                }\r\n\r\n                return false;\r\n            });\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.opened = false;\r\n        if (this.panelClickHandler) {\r\n            this.panelClickHandler();\r\n        }\r\n    }\r\n\r\n    getPositionStyles() {\r\n        return {\r\n            left: this.left + 'px',\r\n            top: this.top + 'px',\r\n            width: this.width + 'px',\r\n            // height: this.height + 'px'\r\n        };\r\n    }\r\n\r\n    private getPanelDivElement() {\r\n        return this.el.nativeElement.querySelector('.language-textbox-panel');\r\n    }\r\n\r\n    private resetPanelPosition() {\r\n        const panelEle = this.getPanelDivElement();\r\n        if (panelEle) {\r\n            const panelHeight =  panelEle.offsetHeight;\r\n\r\n            const rect = this.inputRef.input.el.nativeElement.getBoundingClientRect();\r\n            const winHeight = window.innerHeight;\r\n            let postop = rect.top;\r\n            if (winHeight - postop - rect.height < panelHeight) {\r\n                postop = postop - panelHeight;\r\n            } else {\r\n                postop = postop + rect.height;\r\n            }\r\n\r\n            const scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\r\n            postop += scrollTop;\r\n\r\n            panelEle.style.top = `${postop}px`;\r\n        }\r\n\r\n        return panelEle;\r\n    }\r\n\r\n\r\n    setInputFocus() {\r\n        // ç¬¬1ä¸ªinput è·å¾ç¦ç¹\r\n        // è·åå½åè¯­è¨çç´¢å¼ï¼æ ¹æ®ç´¢å¼å¼å®ä½ input\r\n        const el = this.getPanelDivElement();\r\n        if (!el) {\r\n            return;\r\n        }\r\n        let focusInput =  el.querySelector('input');\r\n        if (this.currentItem && (!this.languageInputRef || this.languageInputRef['autoFocus'])) {\r\n            const idx = this.items.findIndex(n => n.code === this.currentItem.code);\r\n            if (idx > -1) {\r\n                focusInput = el.querySelectorAll('input')[idx];\r\n            }\r\n        }\r\n        if (focusInput) {\r\n            focusInput.focus();\r\n        }\r\n    }\r\n\r\n    show(input: any) {\r\n        this.inputRef = input;\r\n        this.render.setStyle(document.body, 'overflow', 'hidden');\r\n        this.opened = true;\r\n        if (this.cd) {\r\n            this.cd.detectChanges();\r\n        }\r\n        setTimeout(() => {\r\n            const el = this.resetPanelPosition();\r\n            if (!el) {\r\n                return;\r\n            }\r\n            let  transitionFlag = true;\r\n            el.addEventListener('transitionend', (e: any) => {\r\n                if (e.target === e.currentTarget && transitionFlag ) {\r\n                    transitionFlag = false;\r\n                    this.showPanel.emit(this);\r\n                }\r\n            }, false);\r\n\r\n            // this.render.removeClass(el, 'hide');\r\n            this.render.addClass(el, 'f-area-show');\r\n        });\r\n        return of({ element: this.el });\r\n    }\r\n\r\n    hide($event?: any) {\r\n        this.opened = false;\r\n        const el = this.getPanelDivElement();\r\n        // this.render.addClass(el, 'f-area-hide');\r\n        this.render.removeStyle(document.body, 'overflow');\r\n        this.hidePanel.emit();\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onItemClick($event: any) {\r\n        // this.currentItem = item;\r\n        this.itemClick.emit(this.data);\r\n        $event.stopPropagation();\r\n        return false;\r\n    }\r\n\r\n    inputClick($event) {\r\n        $event.stopPropagation();\r\n        return false;\r\n    }\r\n}\r\n","import { LanguageTextboxService } from './language-textbox.service';\r\nimport { HostListener, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n/*\r\n* @Author: ç¯çç§æ(Lucas Huang)\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @Company: Inspur\r\n * @Version: v0.0.1\r\n * @Date: 2019-03-12 15:46:47\r\n * @LastEditTime: 2019-04-08 18:46:53\r\n */\r\nimport {\r\n    Component, OnInit, Input, ViewChild, ComponentRef, ElementRef,\r\n    ComponentFactoryResolver, Injector, ApplicationRef,\r\n    NgZone, Renderer2, ViewEncapsulation, forwardRef, Optional, Self\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, NgControl, RequiredValidator } from '@angular/forms';\r\nimport { InputGroupComponent } from '@farris/ui-input-group';\r\nimport { LanguageTextPanelComponent } from './language-textbox-panel.component';\r\nimport { LanguageItem, LanguageData } from './types';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { ChangeDetectorRef, OnDestroy } from '@angular/core';\r\nimport { DebugService, OverLayHiddenService } from '@farris/ui-common';\r\n\r\nexport const LANGUAGE_TEXTBOX_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => LanguageTextboxComponent),\r\n    multi: true\r\n};\r\n\r\n\r\nexport interface LanguageTextMaxLength {\r\n    [langCode: string]: number;\r\n}\r\n\r\n\r\n@Component({\r\n    selector: 'language-textbox',\r\n    template: `\r\n        <input-group #input\r\n            [customCls] = \"'farris-language-textbox'\"\r\n            [groupText]=\"groupIcon\"\r\n            [disabled]=\"disabled\"\r\n            [readonly]=\"readonly\"\r\n            [editable]=\"editable\"\r\n            [(ngModel)]=\"value\"\r\n            [enableClear]=\"false\"\r\n            [value]=\"value\"\r\n            (valueChange)=\"onChanges($event)\"\r\n            (clear)=\"onClear()\"\r\n            (clickHandle)=\"onIconClick($event)\"\r\n            (focusHandle)=\"onFocus($event)\"\r\n        >\r\n        </input-group>\r\n    `,\r\n    styles: [\r\n        `\r\n        .farris-language-textbox .input-group-text {\r\n            padding-right: 3px;\r\n        }\r\n        .farris-language-textbox .input-group-text .language-text {\r\n            padding-right: 3px;\r\n        }\r\n        `\r\n    ],\r\n    providers: [LANGUAGE_TEXTBOX_VALUE_ACCESSOR],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LanguageTextboxComponent implements OnInit, OnDestroy, ControlValueAccessor, OnChanges {\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() editable = false;\r\n    @Input() enableClear = false;\r\n    @Input() languages: LanguageItem[] = [];\r\n    @Input() currentLanguage: string;\r\n    @Input() panelHeight = 260;\r\n    @Input() panelWidth = 365;\r\n\r\n    @Input() maxWords: LanguageTextMaxLength = null;\r\n\r\n    /**\r\n     * é¢æ¿è¾å¥æ¡æ ¹æ®LOCALE_ID èªå¨è·å¾ç¦ç¹\r\n     * è®¾ä¸º false æ¶ï¼ä»ç¬¬1ä¸ªè·å¾ç¦ç¹\r\n     */\r\n    @Input() autoFocus = true;\r\n\r\n    @ViewChild('input') input: InputGroupComponent;\r\n\r\n    @Input() openOnFocus = true;\r\n\r\n    groupIcon = '<span class=\"f-icon f-icon-yxs_earth\"></span>';\r\n\r\n    comboPanelRef: ComponentRef<LanguageTextPanelComponent>;\r\n    currentLanguageItem: LanguageItem = undefined;\r\n    private data: LanguageData = {};\r\n    private ngCtrl: NgControl;\r\n    value = '';\r\n\r\n    onKeyDownHandler: any;\r\n    localeService: LocaleService;\r\n\r\n    onTextBoxclickHandler = null;\r\n    lts: LanguageTextboxService = null;\r\n    private overLayService: OverLayHiddenService = null;\r\n    onModelChange = (obj?: any) => { };\r\n    onModelTouched = (obj?: any) => { };\r\n\r\n    private debugSer: DebugService = null;\r\n\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        private cfr: ComponentFactoryResolver,\r\n        private injector: Injector,\r\n        private ngZone: NgZone,\r\n        private applicationRef: ApplicationRef,\r\n        private renderer: Renderer2,\r\n        @Optional() @Self() private requiredValidator: RequiredValidator,\r\n        private cd: ChangeDetectorRef) {\r\n            this.localeService = this.injector.get(LocaleService);\r\n            this.lts = this.injector.get(LanguageTextboxService, null);\r\n            this.debugSer = this.injector.get(DebugService, null);\r\n\r\n            if (!this.lts) {\r\n                this.lts = new LanguageTextboxService();\r\n            }\r\n\r\n            this.lts.hide$.subscribe( e => {\r\n                this.hideDropDownPanel();\r\n            });\r\n\r\n            this.overLayService = this.injector.get(OverLayHiddenService, null);\r\n            if (!this.overLayService) {\r\n                this.overLayService = new OverLayHiddenService();\r\n            }\r\n        }\r\n\r\n    ngOnInit(): void {\r\n        if (!this.editable) {\r\n            this.editable = this.languages && this.languages.length && this.languages.length === 1;\r\n        }\r\n\r\n        this.bindLanguageInfo(this.languages);\r\n\r\n        this.onTextBoxclickHandler = this.renderer.listen(this.input.textbox.nativeElement, 'click', (e) => {\r\n            e.stopPropagation();\r\n\r\n            if (this.editable) {\r\n                this.hideDropDownPanel();\r\n                return;\r\n            }\r\n\r\n            if (!this.comboPanelRef) {\r\n                this.showDropDownPanel();\r\n            }\r\n        });\r\n\r\n        this.ngCtrl = this.injector.get(NgControl, null);\r\n\r\n        this.registerKeyDown();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.languages && !changes.languages.isFirstChange()) {\r\n            this.bindLanguageInfo(changes.languages.currentValue);\r\n            this.setValue();\r\n        }\r\n    }\r\n\r\n    private bindLanguageInfo(languages: LanguageItem[]) {\r\n        if (languages && languages.length) {\r\n            if (!this.currentLanguage) {\r\n                const runtimeLanguageCode = this.localeService.localeId;\r\n                if (runtimeLanguageCode) {\r\n                    const defaultLang = languages.find(l => l.code === runtimeLanguageCode);\r\n                    if (defaultLang) {\r\n                        this.currentLanguage = defaultLang.code;\r\n                        this.currentLanguageItem = defaultLang;\r\n                    } else {\r\n                        if (languages.length) {\r\n                            this.currentLanguage = languages[0].code;\r\n                            this.currentLanguageItem = languages[0];\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (this.debugSer) {\r\n                        this.debugSer.warn('å½åä¸ä¸æç¯å¢æªåå°è¯­è¨ä»£ç ã');\r\n                    }\r\n                }\r\n            } else {\r\n                this.currentLanguageItem = this.getLanguageItem(this.currentLanguage);\r\n            }\r\n        } else {\r\n            if (this.debugSer) {\r\n                this.debugSer.warn(`Please set  the '[languages]' data.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.onKeyDownHandler) {\r\n            this.onKeyDownHandler();\r\n        }\r\n\r\n        this.hideDropDownPanel();\r\n        if (this.onTextBoxclickHandler) {\r\n            this.onTextBoxclickHandler();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    private registerKeyDown() {\r\n        const textEl = this.input.textbox.nativeElement;\r\n        this.onKeyDownHandler = this.renderer.listen(textEl, 'keydown', this.onKeyDown.bind(this));\r\n        // this.ngZone.runOutsideAngular(() => {\r\n        // });\r\n    }\r\n\r\n    private onKeyDown($event: KeyboardEvent) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n\r\n            const keyCode = $event.keyCode;\r\n            // F2\r\n            if (keyCode === 113) {\r\n                this.showDropDownPanel();\r\n            }\r\n\r\n\r\n            if (keyCode !== 38 && keyCode !== 40) {\r\n                return;\r\n            }\r\n\r\n            const languageItemIndex = this.languages.findIndex(l => l.code === this.currentLanguageItem.code);\r\n            switch (keyCode) {\r\n                case 38:\r\n                    if (languageItemIndex === 0) {\r\n                        this.currentLanguageItem = this.languages[this.languages.length - 1];\r\n                    } else {\r\n                        this.currentLanguageItem = this.languages[languageItemIndex - 1];\r\n                    }\r\n                    this.currentLanguage = this.currentLanguageItem.code;\r\n                    break;\r\n                case 40:\r\n                    if (languageItemIndex === this.languages.length - 1) {\r\n                        this.currentLanguageItem = this.languages[0];\r\n                    } else {\r\n                        this.currentLanguageItem = this.languages[languageItemIndex + 1];\r\n                    }\r\n                    this.currentLanguage = this.currentLanguageItem.code;\r\n                    break;\r\n            }\r\n            this.setValue();\r\n            this.cd.markForCheck();\r\n            this.cd.detectChanges();\r\n            // this.input.cd.detectChanges();\r\n            setTimeout( () => {\r\n                this.input.setFocusToEnd();\r\n            });\r\n        }\r\n    }\r\n\r\n    onFocus($event) {\r\n        $event.stopPropagation();\r\n        if (this.openOnFocus) {\r\n            this.showDropDownPanel();\r\n        }\r\n    }\r\n\r\n    onBlur($event) {\r\n        $event.stopPropagation();\r\n        // this.hideDropDownPanel();\r\n    }\r\n\r\n    onIconClick($event) {\r\n        if ($event.originalEvent) {\r\n            $event.originalEvent.stopPropagation();\r\n            $event.originalEvent.preventDefault();\r\n        }\r\n        if (!this.comboPanelRef) {\r\n            this.showDropDownPanel();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private getCliecntRect() {\r\n        const rect = this.input.el.nativeElement.getBoundingClientRect();\r\n\r\n        const winWidth = window.innerWidth;\r\n        const winHeight = window.innerHeight;\r\n\r\n        let posleft = rect.left;\r\n        if (winWidth - posleft < this.panelWidth) {\r\n            posleft = posleft + rect.width - this.panelWidth;\r\n        }\r\n\r\n        let postop = rect.top;\r\n        if (winHeight - postop < this.panelHeight) {\r\n            postop = postop - rect.height;\r\n        } else {\r\n            postop = postop + rect.height;\r\n        }\r\n\r\n        return {\r\n            left: posleft, // + rect.width - this.panelWidth\r\n            top: postop,\r\n            height: this.panelHeight,\r\n            width: this.panelWidth\r\n        };\r\n    }\r\n\r\n    private updateLangOrder() {\r\n        let idx = -1;\r\n        const curritem = this.languages.find((n, i) => {\r\n            const f = n.code === this.localeService.localeId;\r\n            if (f) {\r\n                idx = i;\r\n            }\r\n            return f;\r\n        });\r\n\r\n        if (curritem) {\r\n            const _item = Object.assign({}, curritem);\r\n\r\n            this.languages.splice(idx, 1);\r\n            this.languages.unshift(_item);\r\n        }\r\n    }\r\n\r\n    showDropDownPanel() {\r\n\r\n        if (!this.languages || this.languages.length === 1) {\r\n            return;\r\n        }\r\n\r\n        if (this.readonly || this.disabled) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (!this.comboPanelRef) {\r\n            const compFac = this.cfr.resolveComponentFactory(LanguageTextPanelComponent);\r\n            this.comboPanelRef = compFac.create(this.injector);\r\n            this.applicationRef.attachView(this.comboPanelRef.hostView);\r\n\r\n            Object.assign(this.comboPanelRef.instance, this.getCliecntRect());\r\n\r\n            const panelRefEl = this.comboPanelRef.location.nativeElement;\r\n            document.body.appendChild(panelRefEl);\r\n            this.renderer.addClass(panelRefEl, 'overlay-pane');\r\n            // this.renderer.setStyle(panelRefEl, 'width', '100vw');\r\n            // this.renderer.setStyle(panelRefEl, 'height', '100vh');\r\n            this.renderer.setStyle(panelRefEl, 'z-index', '99999999');\r\n            this.renderer.setStyle(panelRefEl, 'left', '0');\r\n            this.renderer.setStyle(panelRefEl, 'top', '0');\r\n\r\n            // æ ¹æ®ä¸ä¸æè¯­è¨ï¼èªå¨è°æ´è¯­è¨åè¡¨çé¡ºåºï¼å°å½åè¯­è¨è®¾ä¸ºç¬¬1ä¸ª\r\n            this.updateLangOrder();\r\n\r\n            this.comboPanelRef.instance.items = this.languages;\r\n            this.comboPanelRef.instance.languageInputRef = this;\r\n            this.comboPanelRef.instance.data = {...this.data};\r\n            this.comboPanelRef.instance.currentItem = this.currentLanguageItem;\r\n\r\n            this.comboPanelRef.instance.maxWords = this.maxWords;\r\n\r\n            this.comboPanelRef.instance.itemClick.subscribe((data: LanguageData) => {\r\n                // this.currentLanguageItem = item;\r\n                // this.currentLanguage = item.code;\r\n                this.data = {...data};\r\n                this.hideDropDownPanel();\r\n                this.setValue();\r\n            });\r\n            this.comboPanelRef.instance.hidePanel.subscribe( () => {\r\n                this.hideDropDownPanel();\r\n            });\r\n\r\n            this.comboPanelRef.instance.showPanel.subscribe( (panelIns: LanguageTextPanelComponent) => {\r\n                panelIns.setInputFocus();\r\n            });\r\n\r\n            this.comboPanelRef.instance.show(this);\r\n\r\n            this.lts.setActivePane(this);\r\n\r\n\r\n            // æ³¨åé¼ æ æ»è½®ï¼ç¹å»äºä»¶ï¼ç¨äºéèPanel\r\n            this.overLayService.registerMouseEvent(panelRefEl, (e: MouseEvent) => {\r\n                if(panelRefEl.contains(e.target)) {\r\n                    return;\r\n                }\r\n\r\n                this.hideDropDownPanel();\r\n            });\r\n        } else {\r\n            this.hideDropDownPanel();\r\n        }\r\n    }\r\n\r\n    private getLanguageItem(code: string) {\r\n        return this.languages.find(l => l.code === code);\r\n    }\r\n\r\n    onClear() { }\r\n\r\n    onChanges(val?: any) {\r\n        this.data[this.currentLanguage] = this.value;\r\n        this.onModelChange({...this.data});\r\n        this.onModelTouched({...this.data});\r\n    }\r\n\r\n    setValue() {\r\n        if (this.data) {\r\n            this.value = this.data[this.currentLanguage] || '';\r\n        } else {\r\n            this.value = '';\r\n        }\r\n\r\n        this.onChanges();\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n\r\n    hideDropDownPanel() {\r\n        this.renderer.removeStyle(document.body, 'overflow');\r\n        if (this.comboPanelRef && this.comboPanelRef.instance) {\r\n            // if (this.comboPanelRef.instance.opened) {\r\n            //     this.comboPanelRef.instance.hide();\r\n            // }\r\n            this.comboPanelRef.instance.opened = false;\r\n            const componentEl = this.comboPanelRef.location.nativeElement;\r\n            if (componentEl.parentNode) {\r\n\r\n                if (this.overLayService) {\r\n                    this.overLayService.destory(componentEl)\r\n                }\r\n\r\n                componentEl.parentNode.removeChild(componentEl);\r\n            }\r\n\r\n            this.ngZone.runOutsideAngular(() => {\r\n                this.input.focus();\r\n                setTimeout(() => {\r\n                    if (this.comboPanelRef) {\r\n                        this.comboPanelRef.destroy();\r\n                        this.comboPanelRef = null;\r\n                    }\r\n\r\n                    \r\n                }, 100);\r\n            });\r\n        }\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        if (obj && Object.keys(obj).length) {\r\n            this.data = obj;\r\n            this.value = obj[this.currentLanguage];\r\n        } else {\r\n            this.data = {};\r\n            this.value = '';\r\n        }\r\n        this.cd.detectChanges();\r\n    }\r\n    registerOnChange(fn: any): void {\r\n        this.onModelChange = fn;\r\n    }\r\n    registerOnTouched(fn: any): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n}\r\n","import { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { LanguageTextboxComponent } from './language-textbox.component';\r\nimport { LanguageTextPanelComponent } from './language-textbox-panel.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LanguageTextboxComponent,\r\n        LanguageTextPanelComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        InputGroupModule,\r\n        LocaleModule.forRoot()\r\n    ],\r\n    exports: [LanguageTextboxComponent],\r\n    providers: [],\r\n    entryComponents: [LanguageTextPanelComponent]\r\n})\r\nexport class LanguageTextboxModule {}\r\n"],"names":[],"mappings":"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"}
