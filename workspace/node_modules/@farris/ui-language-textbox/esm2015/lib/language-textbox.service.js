/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Subject } from 'rxjs';
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class LanguageTextboxService {
    constructor() {
        this.activePane = null;
        this.hide$ = new Subject();
    }
    /**
     * @param {?} p
     * @return {?}
     */
    setActivePane(p) {
        if (this.activePane && this.activePane != p) {
            this.activePane.hideDropDownPanel();
            this.activePane = null;
        }
        this.activePane = p;
    }
    /**
     * @return {?}
     */
    hide() {
        this.hide$.next();
    }
}
LanguageTextboxService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
LanguageTextboxService.ctorParameters = () => [];
/** @nocollapse */ LanguageTextboxService.ngInjectableDef = i0.defineInjectable({ factory: function LanguageTextboxService_Factory() { return new LanguageTextboxService(); }, token: LanguageTextboxService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    LanguageTextboxService.prototype.activePane;
    /** @type {?} */
    LanguageTextboxService.prototype.hide$;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2UtdGV4dGJveC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1sYW5ndWFnZS10ZXh0Ym94LyIsInNvdXJjZXMiOlsibGliL2xhbmd1YWdlLXRleHRib3guc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMvQixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUszQyxNQUFNLE9BQU8sc0JBQXNCO0lBTS9CO1FBSlEsZUFBVSxHQUFHLElBQUksQ0FBQztRQUUxQixVQUFLLEdBQUcsSUFBSSxPQUFPLEVBQUUsQ0FBQztJQUVQLENBQUM7Ozs7O0lBRWhCLGFBQWEsQ0FBRSxDQUFNO1FBQ2pCLElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLENBQUMsRUFBRTtZQUN6QyxJQUFJLENBQUMsVUFBVSxDQUFDLGlCQUFpQixFQUFFLENBQUM7WUFDcEMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7U0FDMUI7UUFDRCxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQztJQUN4QixDQUFDOzs7O0lBRUQsSUFBSTtRQUNBLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDdEIsQ0FBQzs7O1lBckJKLFVBQVUsU0FBQztnQkFDUixVQUFVLEVBQUUsTUFBTTthQUNyQjs7Ozs7Ozs7OztJQUdHLDRDQUEwQjs7SUFFMUIsdUNBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIExhbmd1YWdlVGV4dGJveFNlcnZpY2Uge1xyXG5cclxuICAgIHByaXZhdGUgYWN0aXZlUGFuZSA9IG51bGw7XHJcblxyXG4gICAgaGlkZSQgPSBuZXcgU3ViamVjdCgpO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge31cclxuXHJcbiAgICBzZXRBY3RpdmVQYW5lKCBwOiBhbnkgKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuYWN0aXZlUGFuZSAmJiB0aGlzLmFjdGl2ZVBhbmUgIT0gcCkge1xyXG4gICAgICAgICAgICB0aGlzLmFjdGl2ZVBhbmUuaGlkZURyb3BEb3duUGFuZWwoKTtcclxuICAgICAgICAgICAgdGhpcy5hY3RpdmVQYW5lID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5hY3RpdmVQYW5lID0gcDtcclxuICAgIH1cclxuXHJcbiAgICBoaWRlKCkge1xyXG4gICAgICAgIHRoaXMuaGlkZSQubmV4dCgpO1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=