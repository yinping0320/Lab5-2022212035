/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from "@angular/core";
import { GSPFrameworkService } from "../core/gsp-framework.service";
var GSPFrameworkCommonService = /** @class */ (function () {
    function GSPFrameworkCommonService() {
        this.service = null;
        /** @type {?} */
        var gspFrameworkService = GSPFrameworkService.getGSPFrameworkService();
        this.service = gspFrameworkService && gspFrameworkService.common;
    }
    Object.defineProperty(GSPFrameworkCommonService.prototype, "basePath", {
        /**
         * 从框架获取基路径
         * @description 从框架获取失败时返回空字符
         */
        get: /**
         * 从框架获取基路径
         * \@description 从框架获取失败时返回空字符
         * @return {?}
         */
        function () {
            return this.service && this.service.getBasePath && this.service.getBasePath.get() || '';
        },
        enumerable: true,
        configurable: true
    });
    GSPFrameworkCommonService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    GSPFrameworkCommonService.ctorParameters = function () { return []; };
    return GSPFrameworkCommonService;
}());
export { GSPFrameworkCommonService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    GSPFrameworkCommonService.prototype.service;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3NwLWZyYW1ld29yay1jb21tb24uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvcnRmLyIsInNvdXJjZXMiOlsibGliL2NvbW1vbi9nc3AtZnJhbWV3b3JrLWNvbW1vbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBRXBFO0lBR0U7UUFEUSxZQUFPLEdBQUcsSUFBSSxDQUFDOztZQUVmLG1CQUFtQixHQUFHLG1CQUFtQixDQUFDLHNCQUFzQixFQUFFO1FBQ3hFLElBQUksQ0FBQyxPQUFPLEdBQUcsbUJBQW1CLElBQUksbUJBQW1CLENBQUMsTUFBTSxDQUFDO0lBQ25FLENBQUM7SUFLRCxzQkFBVywrQ0FBUTtRQUpuQjs7O1dBR0c7Ozs7OztRQUNIO1lBQ0UsT0FBTyxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQztRQUMxRixDQUFDOzs7T0FBQTs7Z0JBYkYsVUFBVTs7OztJQWNYLGdDQUFDO0NBQUEsQUFkRCxJQWNDO1NBYlkseUJBQXlCOzs7Ozs7SUFDcEMsNENBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IEdTUEZyYW1ld29ya1NlcnZpY2UgfSBmcm9tIFwiLi4vY29yZS9nc3AtZnJhbWV3b3JrLnNlcnZpY2VcIjtcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIEdTUEZyYW1ld29ya0NvbW1vblNlcnZpY2Uge1xyXG4gIHByaXZhdGUgc2VydmljZSA9IG51bGw7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBjb25zdCBnc3BGcmFtZXdvcmtTZXJ2aWNlID0gR1NQRnJhbWV3b3JrU2VydmljZS5nZXRHU1BGcmFtZXdvcmtTZXJ2aWNlKCk7XHJcbiAgICB0aGlzLnNlcnZpY2UgPSBnc3BGcmFtZXdvcmtTZXJ2aWNlICYmIGdzcEZyYW1ld29ya1NlcnZpY2UuY29tbW9uO1xyXG4gIH1cclxuICAvKipcclxuICAgKiDku47moYbmnrbojrflj5bln7rot6/lvoRcclxuICAgKiBAZGVzY3JpcHRpb24g5LuO5qGG5p626I635Y+W5aSx6LSl5pe26L+U5Zue56m65a2X56ymXHJcbiAgICovXHJcbiAgcHVibGljIGdldCBiYXNlUGF0aCgpIHtcclxuICAgIHJldHVybiB0aGlzLnNlcnZpY2UgJiYgdGhpcy5zZXJ2aWNlLmdldEJhc2VQYXRoICYmIHRoaXMuc2VydmljZS5nZXRCYXNlUGF0aC5nZXQoKSB8fCAnJztcclxuICB9XHJcbn1cclxuIl19