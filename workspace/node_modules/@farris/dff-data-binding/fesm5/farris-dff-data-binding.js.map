{"version":3,"file":"farris-dff-data-binding.js.map","sources":["ng://@farris/dff-data-binding/lib/dff-data-binding.service.ts","ng://@farris/dff-data-binding/lib/dff-data-binding.component.ts","ng://@farris/dff-data-binding/lib/directives/employee-selector-data-mapping.directive.ts","ng://@farris/dff-data-binding/lib/directives/adminorganization-selector-data-mapping.directive.ts","ng://@farris/dff-data-binding/lib/dff-data-binding.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DffDataBindingService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'farris-dff-data-binding',\r\n  template: `\r\n    <p>\r\n      dff-data-binding works!\r\n    </p>\r\n  `,\r\n  styles: []\r\n})\r\nexport class DffDataBindingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Directive, OnInit, Optional, Self, Input, OnDestroy, AfterViewInit, Injector } from '@angular/core';\r\nimport { ViewModel } from '@farris/devkit';\r\nimport { EmployeeSelectorComponent } from '@farris/ui-employee-selector';\r\n\r\n@Directive({\r\n  selector: '[employee-selector-data-mapping]'\r\n})\r\nexport class EmployeeSelectorDataMappingDirective implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n    @Input() mapFields: any;\r\n\r\n    constructor(\r\n        @Optional() private vm: ViewModel,\r\n        @Optional() @Self() private targetComponent: EmployeeSelectorComponent,\r\n        private injector: Injector\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.targetComponent.selectionsChange.subscribe((data: any) => {\r\n            const mapfields = this.mapFields;\r\n            if (data.data && data.data.length) {\r\n                this.mappingData(data.data, mapfields);\r\n            } else {\r\n                this.mappingData(null, mapfields);\r\n            }\r\n        });\r\n\r\n        this.targetComponent.inputClear.subscribe(() => {\r\n            const mapfields = this.mapFields;\r\n            this.mappingData(null, mapfields);\r\n        });\r\n\r\n        this.targetComponent.tagRemoved.subscribe((data) => {\r\n            const mapfields = this.mapFields;\r\n            this.tagRemovedMappingData(data.deleteIndex, mapfields);\r\n            // if (this.targetComponent.selections && this.targetComponent.selections.length) {\r\n            //     this.mappingData(this.targetComponent.selections, mapfields);\r\n            // } else {\r\n            //     this.mappingData(null, mapfields);\r\n            // }\r\n        });\r\n        if (!this.targetComponent.mapFields) {\r\n            this.targetComponent.mapFields = this.mapFields;\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n\r\n    }\r\n\r\n    private getFieldBinding() {\r\n        const ngControl = this.targetComponent && this.targetComponent.ngControl && this.targetComponent.ngControl;\r\n        const ngFormControls = ngControl && ngControl.formDirective && ngControl.formDirective.form\r\n            && ngControl.formDirective.form && ngControl.formDirective.form.ngFormControls;\r\n        const name = ngControl && ngControl.name;\r\n        return ngFormControls && ngFormControls[name] && ngFormControls[name].binding;\r\n    }\r\n\r\n    tagRemovedMappingData(index, mapFields) {\r\n        if (!mapFields) {\r\n            return;\r\n        }\r\n        if (\r\n            this.targetComponent.ngControl &&\r\n            this.targetComponent.ngControl.formDirective &&\r\n            this.targetComponent.ngControl.formDirective.form &&\r\n            this.targetComponent.ngControl.formDirective.form.bindingData\r\n        ) {\r\n            const bindingData = this.targetComponent.ngControl.formDirective.form.bindingData;\r\n            if (bindingData.setValue) {\r\n                // 关闭变更检测\r\n                const appContext = this.vm.frameContext.appContext;\r\n                appContext.changeDetectionController.detach();\r\n\r\n                let helpFields = Object.keys(mapFields);\r\n                const idIndex = helpFields.findIndex(item => item === 'id');\r\n                if (helpFields.includes('id') && idIndex !== 0) {\r\n                    helpFields.splice(idIndex, 1);\r\n                    helpFields = ['id', ...helpFields];\r\n                }\r\n                const pathArr = this.getBindingPathArray();\r\n                const anyFieldArr = this.mapFields[helpFields[0]].split(',');\r\n                const formAnyData = bindingData.getValue(pathArr.concat(anyFieldArr[0]));\r\n\r\n                if (!formAnyData || formAnyData.split(',').length < 2) {\r\n                    helpFields.reverse();\r\n                }\r\n\r\n                helpFields.forEach((helpField: any) => {\r\n                    this.mapFields[helpField].split(',').forEach(fieldPath => {\r\n                        const path = pathArr.concat(fieldPath.split('.'));\r\n                        // todo udt关联问题\r\n                        if (this.getFieldBinding() === fieldPath) {\r\n                            return;\r\n                        }\r\n                        const resStr = bindingData.getValue(path);\r\n                        if (!resStr) {\r\n                            bindingData.clearValue(path, true, true);\r\n                        } else {\r\n                            const resArr = resStr.split(',');\r\n                            resArr.splice(index, 1);\r\n                            const result = resArr.join();\r\n                            if (!result) {\r\n                                bindingData.clearValue(path, true, true);\r\n                            } else {\r\n                                bindingData.setValue(path, result, true, true);\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n                // 重新打开变更检测\r\n                appContext.changeDetectionController.reattach();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * @param helpData 清空时，值为null\r\n     * @param mapFields 格式形如：{id: \"assoField.assoField\", code: \"assoField.assoField_Code\", name: \"assoField.assoField_Name\"}\r\n     */\r\n    mappingData(helpData: any, mapFields: any) {\r\n        if (!mapFields) {\r\n            return;\r\n        }\r\n\r\n        // 关闭变更检测\r\n        const appContext = this.vm.frameContext.appContext;\r\n        appContext.changeDetectionController.detach();\r\n\r\n        let helpFields = Object.keys(mapFields);\r\n        const idIndex = helpFields.findIndex(item => item === 'id');\r\n        if (helpFields.includes('id') && idIndex !== 0) {\r\n            helpFields.splice(idIndex, 1);\r\n            helpFields = ['id', ...helpFields];\r\n        }\r\n        if (!helpData) {\r\n            helpFields.reverse();\r\n        }\r\n        helpFields.forEach((f: any) => {\r\n            // 1、获取字段值\r\n            // 如果helpData有选中值，则获取帮助数据源里对应你字段的值；\r\n            // 如果helpData没有值（清空场景），则返回一个空字符串\r\n            let val: any = '';\r\n            if (helpData) {\r\n                if (helpData instanceof Array) {\r\n                    val = helpData.map((h: any) => {\r\n                        return this.getValue(f, h);\r\n                    }).join(',');\r\n                } else {\r\n                    val = this.getValue(f, helpData);\r\n                }\r\n            }\r\n\r\n            // 2、设置字段值\r\n            // 如果helpData不存在（清空场景），获取BindingData里对应字段的值，如果是数值，则设置0，其他设置上一步中的空字符串；\r\n            // 如果helpData存在：直接设置上一步中获取的值。\r\n            const pathArr = this.getBindingPathArray();\r\n            mapFields[f].split(',').forEach((ff: any) => {\r\n                if (this.getFieldBinding() === ff) {\r\n                    return;\r\n                }\r\n                if (!helpData) {\r\n                    this.vm.bindingData.clearValue(pathArr.concat(ff.split('.')), true, true);\r\n                } else {\r\n                    this.vm.bindingData.setValue(pathArr.concat(ff.split('.')), val, true, true);\r\n                }\r\n            });\r\n        });\r\n\r\n        // 重新打开变更检测\r\n        appContext.changeDetectionController.reattach();\r\n    }\r\n\r\n    private getValue(f: string, data: any) {\r\n        let val = '';\r\n        if (f.indexOf('.') === -1) {\r\n            val = data[f];\r\n        } else {\r\n            val = f.split('.').reduce((a, b) => {\r\n                return a[b];\r\n            }, data);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    private getBindingPathArray(): any[] {\r\n        const path = this.vm.bindingPath;\r\n        if (path) {\r\n            return path.split('/').filter(n => n !== '');\r\n        }\r\n        return [];\r\n    }\r\n\r\n}\r\n","import { Directive, OnInit, Optional, Self, Input, OnDestroy, AfterViewInit, Injector } from '@angular/core';\r\nimport { ViewModel } from '@farris/devkit';\r\nimport { AdminOrganizationSelectorComponent }  from '@farris/ui-adminorganization-selector';\r\n\r\n@Directive({\r\n  selector: '[adminorganization-selector-data-mapping]'\r\n})\r\n\r\nexport class AdminOrganizationSelectorDataMappingDirective implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  @Input() mapFields: any;\r\n\r\n  constructor(\r\n      @Optional() private vm: ViewModel,\r\n      @Optional() @Self() private targetComponent: AdminOrganizationSelectorComponent,\r\n      private injector: Injector\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n      this.targetComponent.selectionsChange.subscribe((data: any) => {\r\n          const mapfields = this.mapFields;\r\n          if (data.selections && data.selections.length) {\r\n              this.mappingData(data.selections, mapfields);\r\n          } else {\r\n              this.mappingData(null, mapfields);\r\n          }\r\n      });\r\n\r\n      this.targetComponent.inputClear.subscribe(() => {\r\n          const mapfields = this.mapFields;\r\n          this.mappingData(null, mapfields);\r\n      });\r\n\r\n      this.targetComponent.tagRemoved.subscribe((data) => {\r\n          const mapfields = this.mapFields;\r\n          this.tagRemovedMappingData(data.deleteIndex, mapfields);\r\n          // if (this.targetComponent.selections && this.targetComponent.selections.length) {\r\n          //     this.mappingData(this.targetComponent.selections, mapfields);\r\n          // } else {\r\n          //     this.mappingData(null, mapfields);\r\n          // }\r\n      });\r\n      if (!this.targetComponent.mapFields) {\r\n          this.targetComponent.mapFields = this.mapFields;\r\n      }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n  private getFieldBinding() {\r\n      const ngControl = this.targetComponent && this.targetComponent.ngControl && this.targetComponent.ngControl;\r\n      const ngFormControls = ngControl && ngControl.formDirective && ngControl.formDirective.form\r\n          && ngControl.formDirective.form && ngControl.formDirective.form.ngFormControls;\r\n      const name = ngControl && ngControl.name;\r\n      return ngFormControls && ngFormControls[name] && ngFormControls[name].binding;\r\n  }\r\n\r\n  tagRemovedMappingData(index, mapFields) {\r\n      if (!mapFields) {\r\n          return;\r\n      }\r\n      if (\r\n          this.targetComponent.ngControl &&\r\n          this.targetComponent.ngControl.formDirective &&\r\n          this.targetComponent.ngControl.formDirective.form &&\r\n          this.targetComponent.ngControl.formDirective.form.bindingData\r\n      ) {\r\n          const bindingData = this.targetComponent.ngControl.formDirective.form.bindingData;\r\n          if (bindingData.setValue) {\r\n              // 关闭变更检测\r\n              const appContext = this.vm.frameContext.appContext;\r\n              appContext.changeDetectionController.detach();\r\n\r\n              let helpFields = Object.keys(mapFields);\r\n              const idIndex = helpFields.findIndex(item => item === 'id');\r\n              if (helpFields.includes('id') && idIndex !== 0) {\r\n                  helpFields.splice(idIndex, 1);\r\n                  helpFields = ['id', ...helpFields];\r\n              }\r\n              const pathArr = this.getBindingPathArray();\r\n              const anyFieldArr = this.mapFields[helpFields[0]].split(',');\r\n              const formAnyData = bindingData.getValue(pathArr.concat(anyFieldArr[0]));\r\n\r\n              if (!formAnyData || formAnyData.split(',').length < 2) {\r\n                  helpFields.reverse();\r\n              }\r\n\r\n              helpFields.forEach((helpField: any) => {\r\n                  this.mapFields[helpField].split(',').forEach(fieldPath => {\r\n                      const path = pathArr.concat(fieldPath.split('.'));\r\n                      // todo udt关联问题\r\n                      if (this.getFieldBinding() === fieldPath) {\r\n                          return;\r\n                      }\r\n                      const resStr = bindingData.getValue(path);\r\n                      if (!resStr) {\r\n                          bindingData.clearValue(path, true, true);\r\n                      } else {\r\n                          const resArr = resStr.split(',');\r\n                          resArr.splice(index, 1);\r\n                          const result = resArr.join();\r\n                          if (!result) {\r\n                              bindingData.clearValue(path, true, true);\r\n                          } else {\r\n                              bindingData.setValue(path, result, true, true);\r\n                          }\r\n                      }\r\n                  });\r\n              });\r\n              // 重新打开变更检测\r\n              appContext.changeDetectionController.reattach();\r\n          }\r\n      }\r\n  }\r\n  /**\r\n   *\r\n   * @param helpData 清空时，值为null\r\n   * @param mapFields 格式形如：{id: \"assoField.assoField\", code: \"assoField.assoField_Code\", name: \"assoField.assoField_Name\"}\r\n   */\r\n  mappingData(helpData: any, mapFields: any) {\r\n      if (!mapFields) {\r\n          return;\r\n      }\r\n\r\n      // 关闭变更检测\r\n      const appContext = this.vm.frameContext.appContext;\r\n      appContext.changeDetectionController.detach();\r\n\r\n      let helpFields = Object.keys(mapFields);\r\n      const idIndex = helpFields.findIndex(item => item === 'id');\r\n      if (helpFields.includes('id') && idIndex !== 0) {\r\n          helpFields.splice(idIndex, 1);\r\n          helpFields = ['id', ...helpFields];\r\n      }\r\n      if (!helpData) {\r\n          helpFields.reverse();\r\n      }\r\n      helpFields.forEach((f: any) => {\r\n          // 1、获取字段值\r\n          // 如果helpData有选中值，则获取帮助数据源里对应你字段的值；\r\n          // 如果helpData没有值（清空场景），则返回一个空字符串\r\n          let val: any = '';\r\n          if (helpData) {\r\n              if (helpData instanceof Array) {\r\n                  val = helpData.map((h: any) => {\r\n                      return this.getValue(f, h);\r\n                  }).join(',');\r\n              } else {\r\n                  val = this.getValue(f, helpData);\r\n              }\r\n          }\r\n\r\n          // 2、设置字段值\r\n          // 如果helpData不存在（清空场景），获取BindingData里对应字段的值，如果是数值，则设置0，其他设置上一步中的空字符串；\r\n          // 如果helpData存在：直接设置上一步中获取的值。\r\n          const pathArr = this.getBindingPathArray();\r\n          mapFields[f].split(',').forEach((ff: any) => {\r\n              if (this.getFieldBinding() === ff) {\r\n                  return;\r\n              }\r\n              if (!helpData) {\r\n                  this.vm.bindingData.clearValue(pathArr.concat(ff.split('.')), true, true);\r\n              } else {\r\n                  this.vm.bindingData.setValue(pathArr.concat(ff.split('.')), val, true, true);\r\n              }\r\n          });\r\n      });\r\n\r\n      // 重新打开变更检测\r\n      appContext.changeDetectionController.reattach();\r\n  }\r\n\r\n  private getValue(f: string, data: any) {\r\n      let val = '';\r\n      if (f.indexOf('.') === -1) {\r\n          val = data[f];\r\n      } else {\r\n          val = f.split('.').reduce((a, b) => {\r\n              return a[b];\r\n          }, data);\r\n      }\r\n\r\n      return val;\r\n  }\r\n\r\n  private getBindingPathArray(): any[] {\r\n      const path = this.vm.bindingPath;\r\n      if (path) {\r\n          return path.split('/').filter(n => n !== '');\r\n      }\r\n      return [];\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { EmployeeSelectorModule } from '@farris/ui-employee-selector';\r\nimport { AdminOrganizationSelectorModule } from '@farris/ui-adminorganization-selector';\r\nimport { DffDataBindingComponent } from './dff-data-binding.component';\r\nimport { EmployeeSelectorDataMappingDirective } from './directives/employee-selector-data-mapping.directive';\r\nimport { AdminOrganizationSelectorDataMappingDirective } from './directives/adminorganization-selector-data-mapping.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DffDataBindingComponent,\r\n    EmployeeSelectorDataMappingDirective,\r\n    AdminOrganizationSelectorDataMappingDirective\r\n  ],\r\n  imports: [\r\n    EmployeeSelectorModule,\r\n    AdminOrganizationSelectorModule\r\n  ],\r\n  providers: [ \r\n  ],\r\n  exports: [\r\n    DffDataBindingComponent,\r\n    EmployeeSelectorDataMappingDirective,\r\n    AdminOrganizationSelectorDataMappingDirective\r\n  ]\r\n})\r\nexport class DffDataBindingModule { }\r\n"],"names":[],"mappings":"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"}
