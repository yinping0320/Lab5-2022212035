import { OnInit, EventEmitter, TemplateRef, SimpleChanges, OnChanges, Injector, Renderer2, ElementRef, ChangeDetectorRef } from '@angular/core';
import { DatagridComponent } from '@farris/ui-datagrid';
import { NotifyService } from '@farris/ui-notify';
export interface EnumData {
    id: any;
    value: string;
    name: string;
}
export declare class IdeEnumEditorComponent implements OnInit, OnChanges {
    private notifyService;
    private injector;
    private render;
    private el;
    private cd;
    closeModal: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    value: EnumData[];
    editorParams: any;
    modalFooter: TemplateRef<any>;
    dg: DatagridComponent;
    nameTemp: TemplateRef<any>;
    valueTemp: TemplateRef<any>;
    activeTemp: TemplateRef<any>;
    valueChange: EventEmitter<{}>;
    modalConfig: {
        title: string;
        width: number;
        height: number;
        showButtons: boolean;
    };
    columns: any[];
    constructor(notifyService: NotifyService, injector: Injector, render: Renderer2, el: ElementRef, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private map2EnumData;
    private changeEmit;
    clickCancel(): void;
    clickConfirm(): void;
    /**
     * 保存前检查
     */
    checkBeforeSave(): boolean;
    add(): void;
    remove(): void;
    deleteItem(id: any): void;
    moveTop($event: MouseEvent, id: any, index: any): boolean;
    moveBottom($event: any, id: any, index: any): boolean;
    moveUp($event: any, id: any, index: any): boolean;
    moveDown($event: any, id: any, index: any): boolean;
}
