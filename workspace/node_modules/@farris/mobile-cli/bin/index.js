#!/usr/bin/env node
const chalk = require('chalk')
const pkg = require('../package.json')
const { bootstrap } = require('../lib')


function run(argv) {
  let option = {}
  if (argv.includes('-v') || argv.includes('--version')) {
    option = {
      command: ['version'],
      value: pkg.version
    }
  } else if (argv.includes('-h') || argv.includes('--help')) {
    option = {
      command: ['help']
    }
  } else if (argv.includes('-b') || argv.includes('--build')) {
    // if(!argv[1] || !checkLib(argv[1])) {
    //   spinner.fail(chalk.red(`配置文件中不存在${argv[1]}`))
    //   return 
    // }
    const command  = ['build']
    if(argv.includes('-a') || argv.includes('--all')) {
      command.push('all')
    } else if (argv.includes('-c') || argv.includes('--config')) {
      // option = {
      //   command: ['config'],
      //   value: argv.pop()
      // }
      command.push('config')
    }
    option = {
      command: command,
      value: argv.pop()
    }
  } else {
    console.log(chalk.red('Command Error'))
    return
  }
  bootstrap(option)
}

run(process.argv.slice(2))
