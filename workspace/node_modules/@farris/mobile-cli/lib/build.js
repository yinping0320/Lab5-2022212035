"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildAllLib = exports.build = void 0;
const rollup_1 = require("rollup");
const config_1 = require("./config");
const utils_1 = require("./utils");
exports.build = (config) => __awaiter(void 0, void 0, void 0, function* () {
    const _config = utils_1.parseOption(config);
    const { input, output } = config_1.getOption(_config);
    try {
        const bundle = yield rollup_1.rollup(input);
        yield bundle.write(output);
        return Promise.resolve();
    }
    catch (error) {
        return Promise.reject(error);
    }
});
exports.buildAllLib = (configs) => __awaiter(void 0, void 0, void 0, function* () {
    let index = 0;
    yield each();
    function each() {
        return __awaiter(this, void 0, void 0, function* () {
            yield exports.build(configs[index]);
            index++;
            if (index < configs.length) {
                each();
            }
            return Promise.resolve();
        });
    }
    return Promise.resolve();
});
//# sourceMappingURL=build.js.map