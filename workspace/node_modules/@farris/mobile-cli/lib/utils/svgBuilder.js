"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.svgBuilder = void 0;
const fs_1 = require("fs");
const svgo_1 = require("svgo");
const base_1 = require("./base");
const path_1 = require("path");
const fs_2 = require("fs");
const svgTitle = /<svg([^>+].*?)>/;
const customPlugin = {
    name: 'removeXMLNS',
    type: 'perItem',
    fn(item) {
        if (item.type === 'element' && item.name === 'svg') {
            delete item.attributes.xmlns;
            delete item.attributes['xmlns:xlink'];
            delete item.attributes.width;
            delete item.attributes.height;
        }
    },
};
exports.svgBuilder = (path) => {
    const AbsolutePath = path_1.join(base_1.CWD, path);
    const svgs = fs_2.existsSync(AbsolutePath) ? findSvgFile(AbsolutePath) : [];
    const svgSprite = (svgs === null || svgs === void 0 ? void 0 : svgs.length) > 0
        ? `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="display:none;">${svgs.join('')}</svg>`
        : '';
    return svgSprite;
};
function findSvgFile(dir, idPerfix = 'fm-icon') {
    const svgRes = [];
    const dirents = fs_1.readdirSync(dir, {
        withFileTypes: true,
    });
    for (const dirent of dirents) {
        if (dirent.isDirectory()) {
            svgRes.push(...findSvgFile(path_1.join(dir, dirent.name)));
        }
        else {
            const fileType = dirent.name.split('.').pop();
            if (fileType !== 'svg') {
                break;
            }
            const svg = fs_1.readFileSync(path_1.join(dir, dirent.name)).toString();
            const { data } = svgo_1.optimize(svg, { plugins: [customPlugin] });
            const optimizeSvg = data
                .replace(svgTitle, ($1, $2) => {
                return `<symbol id="${idPerfix}-${dirent.name.replace('.svg', '')}" ${$2}>`;
            })
                .replace('</svg>', '</symbol>');
            svgRes.push(optimizeSvg);
        }
    }
    return svgRes;
}
//# sourceMappingURL=svgBuilder.js.map