/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { MessagerService } from '@farris/ui-messager';
import { SyncTaskSchdule } from '../utils/sync-task-shchdule';
import { WFActionType } from './entity';
import * as i0 from "@angular/core";
import * as i1 from "@farris/ui-messager";
export class TaskCenterBridgeService {
    /**
     * @param {?} msgService
     */
    constructor(msgService) {
        this.msgService = msgService;
        this.taskSchdule = new SyncTaskSchdule();
    }
    /**
     * @param {?} customerCmds
     * @return {?}
     */
    initTaskCenterBridge(customerCmds) {
        /** @type {?} */
        const bridgeWin = window.parent;
        /** @type {?} */
        let frameContext;
        try {
            frameContext = this['context'].frameContext;
        }
        catch (error) {
            throw new Error('can not find frameContex');
        }
        /** @type {?} */
        let slienceSaveTask;
        try {
            slienceSaveTask = this['context'].frameContext.viewModel.slienceSave1;
        }
        catch (error) {
            // 不存在静音保存命令
        }
        if (bridgeWin) {
            bridgeWin['taskCenterBeforeLoad'] = (actionObj) => {
                return new Promise((resolve, reject) => {
                    const { action } = actionObj;
                    if (frameContext.uiState['UIStateInProcess'] == 'Approving' && frameContext.uiState['formConfigId']) {
                        slienceSaveTask.call(this).subscribe(() => {
                            resolve({
                                result: true
                            });
                        }, () => {
                            window.document.body.click();
                            if (action.code === WFActionType.Pass) { // 除了审评通过外，其它的不需要保存 
                                resolve({
                                    result: false
                                });
                            }
                            else if (action.code === WFActionType.Comment) {
                                resolve({
                                    result: true
                                });
                            }
                            else {
                                this.msgService.confirm('检测到单据保存失败，是否继续？').subscribe((confirm) => {
                                    resolve({
                                        result: confirm
                                    });
                                });
                            }
                        });
                    }
                    else if (action.code == WFActionType.Resubmit && slienceSaveTask) {
                        slienceSaveTask.call(this).subscribe(() => {
                            resolve({
                                result: true
                            });
                        });
                    }
                    else {
                        resolve({
                            result: true
                        });
                    }
                });
            };
        }
    }
    /**
     * @param {?} taskArray
     * @return {?}
     */
    executeSchedules(taskArray) {
        // 这里根据 任务名称，从 viewmodel中找到，然后依次执行
        taskArray = taskArray.split(',');
        // 这里需要验证拿到 commandService 
        /** @type {?} */
        let frameContext;
        try {
            frameContext = this['context'].frameContext;
        }
        catch (error) {
            throw new Error('can not find frameContex');
        }
        taskArray.forEach((item) => {
            /** @type {?} */
            let targetTask;
            try {
                targetTask = frameContext.viewModel[item];
                this.taskSchdule.propTask(targetTask, [], this, item).subscribe((res) => {
                    console.log(res);
                });
            }
            catch (error) {
                // 未找到应该在children中继续查找 未找到
                console.log(error);
            }
        });
    }
}
TaskCenterBridgeService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
TaskCenterBridgeService.ctorParameters = () => [
    { type: MessagerService }
];
/** @nocollapse */ TaskCenterBridgeService.ngInjectableDef = i0.defineInjectable({ factory: function TaskCenterBridgeService_Factory() { return new TaskCenterBridgeService(i0.inject(i1.MessagerService)); }, token: TaskCenterBridgeService, providedIn: "root" });
if (false) {
    /** @type {?} */
    TaskCenterBridgeService.prototype.taskSchdule;
    /** @type {?} */
    TaskCenterBridgeService.prototype.msgService;
}
//# sourceMappingURL=data:application/json;base64,