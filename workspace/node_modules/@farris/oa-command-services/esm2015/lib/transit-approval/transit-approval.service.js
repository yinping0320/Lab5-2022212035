/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Injectable, Injector } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
export class TransitApprovalStatus {
    /**
     * @param {?} injetor
     */
    constructor(injetor) {
        this.injetor = injetor;
        // 因为注位置的问题，这样子拿不到
        // this.stateMachineSer = this.injetor.get(StateMachineService);
    }
    /**
     * @return {?}
     */
    switchStatus() {
        /** @type {?} */
        const result = new BehaviorSubject('Cancel');
        //  判断流程传参  formConfigId
        /** @type {?} */
        let frameContext;
        try {
            frameContext = this['context'].frameContext;
        }
        catch (error) {
            throw new Error('can not find frameContex');
        }
        if (frameContext.uiState['UIStateInProcess'] == 'Approving' && frameContext.uiState['formConfigId']) {
            result.next('Edit');
        }
        return result;
    }
}
TransitApprovalStatus.decorators = [
    { type: Injectable }
];
/** @nocollapse */
TransitApprovalStatus.ctorParameters = () => [
    { type: Injector }
];
if (false) {
    /** @type {?} */
    TransitApprovalStatus.prototype.injetor;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNpdC1hcHByb3ZhbC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9vYS1jb21tYW5kLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsibGliL3RyYW5zaXQtYXBwcm92YWwvdHJhbnNpdC1hcHByb3ZhbC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUdyRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBR3ZDLE1BQU0sT0FBTyxxQkFBcUI7Ozs7SUFDOUIsWUFDWSxPQUFpQjtRQUFqQixZQUFPLEdBQVAsT0FBTyxDQUFVO1FBRXpCLGtCQUFrQjtRQUNsQixnRUFBZ0U7SUFDcEUsQ0FBQzs7OztJQUNNLFlBQVk7O2NBQ1QsTUFBTSxHQUE0QixJQUFJLGVBQWUsQ0FBQyxRQUFRLENBQUM7OztZQUVqRSxZQUEwQjtRQUM5QixJQUFJO1lBQ0EsWUFBWSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxZQUFZLENBQUE7U0FDOUM7UUFBQyxPQUFPLEtBQUssRUFBRTtZQUNaLE1BQU0sSUFBSSxLQUFLLENBQUMsMEJBQTBCLENBQUMsQ0FBQztTQUMvQztRQUNELElBQUksWUFBWSxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLFdBQVcsSUFBSSxZQUFZLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxFQUFFO1lBQ2pHLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdkI7UUFDRCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDOzs7WUFyQkosVUFBVTs7OztZQUxVLFFBQVE7Ozs7SUFRckIsd0NBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHsgU3RhdGVNYWNoaW5lU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvY29tbWFuZC1zZXJ2aWNlcyc7XHJcbmltcG9ydCB7IEZyYW1lQ29udGV4dCB9IGZyb20gJ0BmYXJyaXMvZGV2a2l0JztcclxuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBUcmFuc2l0QXBwcm92YWxTdGF0dXMge1xyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHJpdmF0ZSBpbmpldG9yOiBJbmplY3RvclxyXG4gICAgKSB7XHJcbiAgICAgICAgLy8g5Zug5Li65rOo5L2N572u55qE6Zeu6aKY77yM6L+Z5qC35a2Q5ou/5LiN5YiwXHJcbiAgICAgICAgLy8gdGhpcy5zdGF0ZU1hY2hpbmVTZXIgPSB0aGlzLmluamV0b3IuZ2V0KFN0YXRlTWFjaGluZVNlcnZpY2UpO1xyXG4gICAgfVxyXG4gICAgcHVibGljIHN3aXRjaFN0YXR1cygpIHtcclxuICAgICAgICBjb25zdCByZXN1bHQ6IEJlaGF2aW9yU3ViamVjdDxzdHJpbmc+ID0gbmV3IEJlaGF2aW9yU3ViamVjdCgnQ2FuY2VsJyk7XHJcbiAgICAgICAgLy8gIOWIpOaWrea1geeoi+S8oOWPgiAgZm9ybUNvbmZpZ0lkXHJcbiAgICAgICAgbGV0IGZyYW1lQ29udGV4dDogRnJhbWVDb250ZXh0O1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGZyYW1lQ29udGV4dCA9IHRoaXNbJ2NvbnRleHQnXS5mcmFtZUNvbnRleHRcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NhbiBub3QgZmluZCBmcmFtZUNvbnRleCcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoZnJhbWVDb250ZXh0LnVpU3RhdGVbJ1VJU3RhdGVJblByb2Nlc3MnXSA9PSAnQXBwcm92aW5nJyAmJiBmcmFtZUNvbnRleHQudWlTdGF0ZVsnZm9ybUNvbmZpZ0lkJ10pIHtcclxuICAgICAgICAgICAgcmVzdWx0Lm5leHQoJ0VkaXQnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxufSJdfQ==