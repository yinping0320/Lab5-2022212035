{"version":3,"sources":["ng://@farris/oa-command-services/lib/data-services/list-data.service.ts","ng://@farris/oa-command-services/lib/print-web-page/entity.ts","ng://@farris/oa-command-services/lib/print-web-page/print-web-page.service.ts","ng://@farris/oa-command-services/lib/utils/sync-task-shchdule.ts","ng://@farris/oa-command-services/lib/task-center-bridge/entity.ts","ng://@farris/oa-command-services/lib/task-center-bridge/task-center-bridge.service.ts","ng://@farris/oa-command-services/lib/transit-approval/transit-approval.service.ts","ng://@farris/oa-command-services/lib/oa-command-services-module.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { BindingData, Repository } from '@farris/devkit';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { empty, Observable, of } from \"rxjs\";\r\nimport { concatMap, switchMap, tap } from 'rxjs/operators';\r\n\r\nimport { FrameContext } from '@farris/devkit';\r\n@Injectable()\r\nexport class OAListDataService {\r\n\r\n  constructor(\r\n    private msgService: MessagerService,\r\n    private notifySer: NotifyService,\r\n  ) { }\r\n\r\n\r\n  public filterAndRemoveRows(ids: string[], ifSave?: boolean | string): Observable<any> {\r\n    if (!ids || ids.length === 0) {\r\n      this.notifySer.error('请选择要删除的数据！');\r\n      return empty();\r\n    }\r\n\r\n    let frameContext: FrameContext;\r\n    try {\r\n      frameContext = this['context'].frameContext\r\n    } catch (error) {\r\n      throw new Error('can not find frameContex');\r\n    }\r\n    const bindingData: BindingData = frameContext['bindingData'];\r\n    const removableIds = [];\r\n\r\n    ids.forEach((id) => {\r\n      const rowData = bindingData.list.findById(id);\r\n      if (rowData && rowData['billState'] && rowData['billState']['billState'] === 'Billing') {\r\n        removableIds.push(id);\r\n      }\r\n    })\r\n\r\n    if (!removableIds.length) {\r\n      this.notifySer.error('没有可删除的数据！');\r\n      return empty();\r\n    }\r\n\r\n    const action$ = this.msgService.confirm('确认删除？');\r\n    return action$.pipe(\r\n      concatMap(result => {\r\n        if (!result) {\r\n          return empty();\r\n        }\r\n        if (typeof ifSave === 'undefined') {\r\n          ifSave = true;\r\n        }\r\n        if (typeof ifSave === 'string') {\r\n          ifSave = ifSave.toLowerCase() === 'false' ? false : true;\r\n        }\r\n        ifSave = (ifSave === false) ? false : true;\r\n\r\n        let repository: Repository<any>;\r\n        try {\r\n          repository = frameContext['repository']\r\n        } catch (error) {\r\n          return empty();\r\n        }\r\n\r\n        const remove$ = repository.removeByIds(removableIds, ifSave);\r\n\r\n        if (!remove$) {\r\n          return empty();\r\n        }\r\n\r\n        return remove$.pipe(\r\n          tap(\r\n            () => {\r\n              this.notifySer.success('删除成功！');\r\n            },\r\n            error => {\r\n              this.msgService.error(error);\r\n            }\r\n          ),\r\n          switchMap(() => {\r\n            return of([]);\r\n          })\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n}","\r\nexport enum templateType {\r\n  card = \"card\"\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { templateType } from \"./entity\";\r\n@Injectable()\r\nexport class PrintWebPageService {\r\n\r\n  private currentTemplate: templateType;\r\n\r\n  constructor(\r\n\r\n    private msgSer: MessagerService\r\n  ) {\r\n    window.onbeforeprint = () => {\r\n      if (this.currentTemplate == templateType.card) {\r\n        const rootLayout = document.getElementById('root-layout');\r\n        const mainContainer = document.getElementById('main-container');\r\n        if (rootLayout && mainContainer) {\r\n          rootLayout.style.display = 'block';\r\n          rootLayout.style.position = 'relative';\r\n          mainContainer.style.display = 'block';\r\n          rootLayout.parentElement.style.position = 'relative';\r\n          document.title = '';\r\n        } else {\r\n          this.msgSer.error('未找到模板中关键节点，请检查命令传参中模板类型是否正确。');\r\n        }\r\n      }\r\n    }\r\n    window.onafterprint = () => {\r\n      if (this.currentTemplate == templateType.card) {\r\n        const rootLayout = document.getElementById('root-layout');\r\n        const mainContainer = document.getElementById('main-container');\r\n        if (rootLayout && mainContainer) {\r\n          mainContainer.setAttribute('style', '');\r\n          rootLayout.setAttribute('style', '');\r\n          rootLayout.parentElement.setAttribute('style', '');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public printWebPage(tempType: templateType = templateType.card) {\r\n    this.currentTemplate = tempType;\r\n    if (!window.navigator.userAgent.includes('AppleWebKit/')) {\r\n      this.msgSer.prompt('提示', '为保证打印效果，推荐使用谷歌浏览器进行打印。是否继续打印？').subscribe((confirmed) => {\r\n        if (confirmed) {\r\n          window.print()\r\n        }\r\n      });\r\n    } else {\r\n      window.print()\r\n    }\r\n  }\r\n\r\n}","import { Subject } from \"rxjs\";\r\n\r\n\r\nexport enum ScheduleResultType {\r\n  Finally = \"finally\",\r\n  Progress = \"progress\",\r\n  Error = \"error\",\r\n}\r\n\r\nexport interface ScheduleResult {\r\n  type: ScheduleResultType,\r\n  recentResult: any,\r\n  progressIndex: Number,\r\n  resultStack: Array<any>\r\n}\r\n\r\n\r\nexport class SyncTaskSchdule {\r\n\r\n  constructor() { }\r\n\r\n  private actIndex = 0;\r\n\r\n  private resultStack = [];\r\n\r\n  private status = 0;// 0 停止中 1 运行中\r\n\r\n  private taskResult: Subject<ScheduleResult> = new Subject();\r\n\r\n  private taskStack: Array<{\r\n    funName: string,\r\n    fun: Function,\r\n    params?: Array<any>,\r\n    context?: any\r\n  }> = [];\r\n\r\n  public propTask(fun: Function, params = [], context, key: string) {\r\n    this.taskStack.push({\r\n      funName: key,\r\n      fun: fun,\r\n      params: params,\r\n      context: context\r\n    });\r\n    // 未开始执行 需要手动吊起一次\r\n    if (!this.status) {\r\n      this.actTask().subscribe((res: ScheduleResult) => {\r\n        this.taskResult.next(res);\r\n      });\r\n    }\r\n    return this.taskResult;\r\n  }\r\n\r\n  private actTask() {\r\n    this.status = 1;\r\n    const result: Subject<ScheduleResult> = new Subject()\r\n    const actOne = this.taskStack[this.actIndex];\r\n    try {\r\n      actOne.fun.apply(actOne.context || window, actOne.params || []).subscribe((res) => {\r\n        this.resultStack.push(res);\r\n        result.next({\r\n          type: this.actIndex == this.taskStack.length - 1 ? ScheduleResultType.Finally : ScheduleResultType.Progress,\r\n          recentResult: res,\r\n          progressIndex: this.actIndex,\r\n          resultStack: this.resultStack\r\n        })\r\n        if (this.actIndex < this.taskStack.length - 1) {\r\n          this.actIndex++;\r\n          this.actTask();\r\n        } else {\r\n          this.status = 0;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      this.resultStack.push(error);\r\n      result.next({\r\n        type: ScheduleResultType.Error,\r\n        recentResult: error,\r\n        progressIndex: this.actIndex,\r\n        resultStack: this.resultStack\r\n      })\r\n      if (this.actIndex < this.taskStack.length - 1) {\r\n        this.actIndex++;\r\n        this.actTask();\r\n      } else {\r\n        this.status = 0;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n}\r\n","\r\nexport enum WFActionType {\r\n  /** \r\n   * 审批通过\r\n  */\r\n  Pass = 'Pass',\r\n  /** \r\n   * \r\n  */\r\n  Resubmit = 'Resubmit',\r\n  /** \r\n   * 驳回\r\n  */\r\n  Back = 'Back',\r\n  /** \r\n   * 移交\r\n  */\r\n  Transfer = 'Transfer',\r\n  /** \r\n   * 评论\r\n  */\r\n  Comment = 'Comment'\r\n}\r\n\r\n\r\nexport interface Parameter {\r\n  code: string;\r\n  value: string;\r\n}\r\n\r\nexport interface Action {\r\n  code: string;\r\n  parameters: Parameter[];\r\n}\r\n\r\nexport interface WFTask {\r\n  id: string;\r\n  sourceId: string;\r\n  name: string;\r\n  state: string;\r\n  owner: string;\r\n  priority: number;\r\n  categoryId: string;\r\n  submitter: string;\r\n  startTime: string;\r\n  endTime: string;\r\n  processInstanceId: string;\r\n  refBizId: string;\r\n  submitterName: string;\r\n  bizCategory: string;\r\n  activityType: string;\r\n  activityDefinitionId: string;\r\n  activityInstanceId: string;\r\n  fromType: number;\r\n  tenantId: number;\r\n  readTime: string;\r\n  createdTime: string;\r\n  creator: string;\r\n  lastModifiedTime: string;\r\n  lastModifier: string;\r\n  actions: Action[];\r\n}\r\n\r\n\r\n\r\nexport type WFAction = {\r\n  \"code\": WFActionType,\r\n  \"parameters\": [],\r\n  \"id\": \"\",\r\n  \"name\": \"\",\r\n  \"sortOrder\": 13,\r\n  \"typeId\": \"wf\",\r\n  \"isBatchAction\": false,\r\n  \"isPrimaryAction\": false,\r\n  \"isHyperlinkAction\": false,\r\n  \"isCustomizeAction\": false,\r\n  \"terminal\": \"web,app\",\r\n  \"scope\": \"running\",\r\n  \"groupId\": \"complete\",\r\n  \"nameLanguage\": null,\r\n  \"preEvents\": [],\r\n  \"postEvents\": []\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FrameContext } from '@farris/devkit';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { SyncTaskSchdule } from '../utils/sync-task-shchdule';\r\nimport { WFAction, WFActionType, WFTask } from './entity';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskCenterBridgeService {\r\n\r\n\r\n  taskSchdule: SyncTaskSchdule\r\n\r\n  constructor(\r\n    private msgService: MessagerService,\r\n  ) {\r\n    this.taskSchdule = new SyncTaskSchdule();\r\n  }\r\n\r\n  public initTaskCenterBridge(customerCmds: {}) {\r\n    const bridgeWin = window.parent;\r\n    let frameContext: FrameContext;\r\n    try {\r\n      frameContext = this['context'].frameContext\r\n    } catch (error) {\r\n      throw new Error('can not find frameContex');\r\n    }\r\n\r\n    let slienceSaveTask;\r\n\r\n    try {\r\n      slienceSaveTask = this['context'].frameContext.viewModel.slienceSave1;\r\n    } catch (error) {\r\n      // 不存在静音保存命令\r\n    }\r\n    if (bridgeWin) {\r\n      bridgeWin['taskCenterBeforeLoad'] = (\r\n        actionObj: {\r\n          \"task\": WFTask,\r\n          \"action\": WFAction\r\n        }\r\n      ) => {\r\n        return new Promise((resolve, reject) => {\r\n          const { action } = actionObj;\r\n          if (frameContext.uiState['UIStateInProcess'] == 'Approving' && frameContext.uiState['formConfigId']) {\r\n            slienceSaveTask.call(this).subscribe(() => {\r\n              resolve({\r\n                result: true\r\n              });\r\n            }, () => {\r\n              window.document.body.click()\r\n              if (action.code === WFActionType.Pass) { // 除了审评通过外，其它的不需要保存 \r\n                resolve({\r\n                  result: false\r\n                });\r\n              } else if (action.code === WFActionType.Comment) {\r\n                resolve({\r\n                  result: true\r\n                });\r\n              } else {\r\n                this.msgService.confirm('检测到单据保存失败，是否继续？').subscribe((confirm) => {\r\n                  resolve({\r\n                    result: confirm\r\n                  });\r\n                });\r\n              }\r\n            })\r\n          } else if (action.code == WFActionType.Resubmit && slienceSaveTask) {\r\n            slienceSaveTask.call(this).subscribe(() => {\r\n              resolve({\r\n                result: true\r\n              });\r\n            })\r\n          } else {\r\n            resolve({\r\n              result: true\r\n            });\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  public executeSchedules(taskArray) {\r\n    // 这里根据 任务名称，从 viewmodel中找到，然后依次执行\r\n    taskArray = taskArray.split(',');\r\n    // 这里需要验证拿到 commandService \r\n    let frameContext: FrameContext;\r\n    try {\r\n      frameContext = this['context'].frameContext\r\n    } catch (error) {\r\n      throw new Error('can not find frameContex');\r\n    }\r\n    taskArray.forEach((item) => {\r\n      let targetTask;\r\n      try {\r\n        targetTask = frameContext.viewModel[item];\r\n        this.taskSchdule.propTask(targetTask, [], this, item).subscribe((res) => {\r\n          console.log(res);\r\n        });\r\n      } catch (error) {\r\n        // 未找到应该在children中继续查找 未找到\r\n        console.log(error);\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\n// import { StateMachineService } from '@farris/command-services';\r\nimport { FrameContext } from '@farris/devkit';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TransitApprovalStatus {\r\n    constructor(\r\n        private injetor: Injector\r\n    ) {\r\n        // 因为注位置的问题，这样子拿不到\r\n        // this.stateMachineSer = this.injetor.get(StateMachineService);\r\n    }\r\n    public switchStatus() {\r\n        const result: BehaviorSubject<string> = new BehaviorSubject('Cancel');\r\n        //  判断流程传参  formConfigId\r\n        let frameContext: FrameContext;\r\n        try {\r\n            frameContext = this['context'].frameContext\r\n        } catch (error) {\r\n            throw new Error('can not find frameContex');\r\n        }\r\n        if (frameContext.uiState['UIStateInProcess'] == 'Approving' && frameContext.uiState['formConfigId']) {\r\n            result.next('Edit');\r\n        }\r\n        return result;\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { OAListDataService } from './data-services/list-data.service';\r\nimport { PrintWebPageService } from './print-web-page/print-web-page.service';\r\nimport { TaskCenterBridgeService } from './task-center-bridge/task-center-bridge.service';\r\nimport { TransitApprovalStatus } from './transit-approval/transit-approval.service';\r\n\r\n\r\n\r\n@NgModule({\r\n    providers: [\r\n        TaskCenterBridgeService,\r\n        PrintWebPageService,\r\n        TransitApprovalStatus,\r\n        OAListDataService\r\n    ],\r\n    imports: [\r\n\r\n    ],\r\n    exports: [\r\n\r\n    ],\r\n    entryComponents: [\r\n    ]\r\n})\r\nclass OACommandServicesModule {\r\n    constructor() { }\r\n}\r\n\r\nexport { OACommandServicesModule };\r\n\r\n"],"names":["OAListDataService","prototype","filterAndRemoveRows","ids","ifSave","frameContext","_this","this","length","notifySer","error","empty","Error","bindingData","removableIds","forEach","id","rowData","list","findById","push","msgService","confirm","pipe","concatMap","result","repository","toLowerCase","remove$","removeByIds","tap","success","switchMap","of","Injectable","MessagerService","NotifyService","PrintWebPageService","printWebPage","tempType","templateType","currentTemplate","window","navigator","userAgent","includes","print","msgSer","prompt","subscribe","confirmed","onbeforeprint","rootLayout","mainContainer","document","getElementById","style","display","position","parentElement","title","onafterprint","setAttribute","SyncTaskSchdule","propTask","fun","params","context","key","taskStack","funName","status","actTask","res","taskResult","next","Subject","actOne","actIndex","apply","resultStack","type","ScheduleResultType","recentResult","progressIndex","TaskCenterBridgeService","initTaskCenterBridge","customerCmds","slienceSaveTask","bridgeWin","parent","viewModel","slienceSave1","actionObj","Promise","resolve","reject","action","uiState","call","body","click","code","WFActionType","executeSchedules","taskArray","split","item","targetTask","taskSchdule","console","log","args","providedIn","TransitApprovalStatus","switchStatus","BehaviorSubject","Injector","injetor","NgModule","providers","imports","exports","entryComponents","OACommandServicesModule"],"mappings":"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"}