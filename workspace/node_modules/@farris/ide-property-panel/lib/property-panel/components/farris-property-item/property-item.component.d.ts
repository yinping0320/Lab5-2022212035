import { OnInit, OnChanges, SimpleChanges, EventEmitter, ComponentFactoryResolver, ViewContainerRef, ComponentRef } from '@angular/core';
import { PropertyEntity } from '../../entity/property-entity';
export declare class FPropertyItemComponent implements OnInit, OnChanges {
    private resolver;
    elementConfig: PropertyEntity;
    elementValue: any;
    valueChanged: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    triggerRefreshPanel: EventEmitter<any>;
    propItem: ViewContainerRef;
    propertyOldType: string;
    itemType: string;
    controlComponentRef: ComponentRef<any>;
    constructor(resolver: ComponentFactoryResolver);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    refresh(): void;
    /**
     * 动态创建控件
     * @param controlComponent  组件类型
     */
    createDynamicControl(controlComponent: any): void;
    /**
     * 变更属性值
     */
    changeValue(parameters: any): void;
    /**
     * 变更弹窗类属性值
     * @param parameters 参数值
     */
    private changeModalValue;
}
