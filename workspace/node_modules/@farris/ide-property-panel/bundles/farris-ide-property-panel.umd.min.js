!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@farris/ui-popover"),require("@farris/ui-notify"),require("@angular/forms"),require("@angular/common"),require("rxjs/operators"),require("@angular/core"),require("rxjs"),require("@farris/ui-input-group"),require("@farris/ui-datalist"),require("@farris/ui-combo-list"),require("@farris/ui-modal"),require("@farris/ui-datepicker"),require("@farris/ui-number-spinner"),require("@farris/property-editor")):"function"==typeof define&&define.amd?define("@farris/ide-property-panel",["exports","@farris/ui-popover","@farris/ui-notify","@angular/forms","@angular/common","rxjs/operators","@angular/core","rxjs","@farris/ui-input-group","@farris/ui-datalist","@farris/ui-combo-list","@farris/ui-modal","@farris/ui-datepicker","@farris/ui-number-spinner","@farris/property-editor"],t):t((e.farris=e.farris||{},e.farris["ide-property-panel"]={}),e["@farris/ui-popover"],e["@farris/ui-notify"],e.ng.forms,e.ng.common,e.rxjs.operators,e.ng.core,e.rxjs,e["@farris/ui-input-group"],e["@farris/ui-datalist"],e["@farris/ui-combo-list"],e["@farris/ui-modal"],e["@farris/ui-datepicker"],e["@farris/ui-number-spinner"],e["@farris/property-editor"])}(this,function(e,t,n,r,i,p,c,d,o,a,l,s,m,u,h){"use strict";var f=(Object.defineProperty(g.prototype,"elementConfig",{get:function(){return this._elementConfig},set:function(e){this._elementConfig=e,this.elementConfig.readonly&&this.convertModalShowValue(this._elementValue)},enumerable:!0,configurable:!0}),Object.defineProperty(g.prototype,"elementValue",{get:function(){return this._elementValue},set:function(e){this._elementValue=e,this.elementConfig.readonly&&this.convertModalShowValue(this._elementValue)},enumerable:!0,configurable:!0}),g.prototype.ngOnInit=function(){},g.prototype.changeValue=function(e){var t=this;this.elementValue&&!this.elementConfig.readonly&&this.elementConfig.notAllowedChars&&this.elementConfig.notAllowedChars.length&&this.elementConfig.notAllowedChars.forEach(function(e){"object"==typeof e?t.elementValue=t.elementValue.replace(e,""):"string"==typeof e&&(t.elementValue=t.elementValue.replace(new RegExp(e,"g"),""))}),this.valueChanged.next({$event:e,elementValue:this.elementValue})},g.prototype.restValueAfterValidRestrict=function(e){this.elementValue=e||""},g.prototype.convertModalShowValue=function(e){this.elementConfig.converter?this.elementShowValue=this.elementConfig.converter.convertTo(e):e&&e instanceof Object?this.elementShowValue=JSON.stringify(e):this.elementShowValue=e},g.decorators=[{type:c.Component,args:[{selector:"app-textbox-prop",template:'\n    <div class="farris-input-wrap">\n        <input type="input" class="form-control form-control-sm" [(ngModel)]="elementValue" (blur)="changeValue($event)"\n            *ngIf="!elementConfig.readonly">\n        <input type="input" class="form-control form-control-sm" [(ngModel)]="elementShowValue" [readonly]="\'readonly\'"\n            *ngIf="elementConfig.readonly">\n    </div>\n    '}]}],g.propDecorators={valueChanged:[{type:c.Output}]},g);function g(){this.valueChanged=new c.EventEmitter}var y=(Object.defineProperty(b.prototype,"elementConfig",{get:function(){return this._elementConfig},set:function(e){this._elementConfig=e,this.precision=this._elementConfig.decimals===undefined?2:this._elementConfig.decimals},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"elementValue",{get:function(){return this._elementValue},set:function(e){this._elementValue=e},enumerable:!0,configurable:!0}),b.prototype.ngOnInit=function(){},b.prototype.changeValue=function(e){this.valueChanged.next({$event:e,elementValue:this.elementValue})},b.decorators=[{type:c.Component,args:[{selector:"app-number-prop",template:'\n    <div class="farris-input-wrap">\n        <farris-number-spinner [(ngModel)]="elementValue" [readonly]="elementConfig.readonly" [precision]="precision"\n            [autoDecimal]="true" [min]="elementConfig.min" [max]="elementConfig.max" [canNull]="true"\n            [bigNumber]="elementConfig.isBigNumber" (ngModelChange)="changeValue($event)">\n        </farris-number-spinner>\n    </div>\n    '}]}],b.propDecorators={valueChanged:[{type:c.Output}]},b);function b(){this.valueChanged=new c.EventEmitter,this.precision=2}var v=(Object.defineProperty(C.prototype,"elementValue",{get:function(){return this._elementValue},set:function(e){this._elementValue=e,"array"===this.elementConfig.multiSelectDataType&&(this._elementValue=this._elementValue?this._elementValue.toString():"")},enumerable:!0,configurable:!0}),Object.defineProperty(C.prototype,"elementConfig",{get:function(){return this._elementConfig},set:function(e){if(this._elementConfig=e,this.elementConfig)switch(this.editType=this.elementConfig.propertyType,"boolean"===this.editType?(this.selectOptions=[{key:!0,value:"true"},{key:!1,value:"false"}],this.editType="select"):this.selectOptions=this.elementConfig.iterator||[],this.editType){case"select":this.editable=!1;break;case"editableSelect":this.editable=!0,this.nosearch=!0;break;case"multiSelect":this.editable=!1,this.multiSelect=!0,"array"===this.elementConfig.multiSelectDataType&&(this._elementValue=this._elementValue?this._elementValue.toString():"")}},enumerable:!0,configurable:!0}),C.prototype.ngOnInit=function(){},C.prototype.changeValue=function(e){var t=this._elementValue;"multiSelect"===this.editType&&"array"===this.elementConfig.multiSelectDataType&&(t=this._elementValue?this._elementValue.split(","):""),this.valueChanged.next({elementValue:t})},C.decorators=[{type:c.Component,args:[{selector:"app-combolist-prop",template:'\n      \x3c!--下拉列表--\x3e\n      <div class="farris-input-wrap">\n        <farris-combo-list\n          [(ngModel)]="elementValue"\n          [idField]="\'key\'"\n          [textField]="\'value\'"\n          [data]="selectOptions"\n          [readonly]="elementConfig.readonly"\n          [editable]="editable"\n          [multiSelect]="multiSelect"\n          [enableClear]="false"\n          [enableCancelSelected]="false"\n          [nosearch]="nosearch"\n          (ngModelChange)="changeValue($event)">\n        </farris-combo-list>\n      </div>\n    '}]}],C.propDecorators={valueChanged:[{type:c.Output}]},C);function C(){this.valueChanged=new c.EventEmitter,this.selectOptions=[],this.nosearch=!1,this.multiSelect=!1}var I=(Object.defineProperty(w.prototype,"elementConfig",{get:function(){return this._elementConfig},set:function(e){this._elementConfig=e,this.elementConfig&&(this.maxDate=e.max,this.minDate=e.min,this.showTime="datetime"===this.elementConfig.propertyType,this.dateFormat="datetime"===this.elementConfig.propertyType?"yyyy-MM-dd HH:mm:ss":"yyyy-MM-dd")},enumerable:!0,configurable:!0}),Object.defineProperty(w.prototype,"elementValue",{get:function(){return this._elementValue},set:function(e){this._elementValue=e},enumerable:!0,configurable:!0}),w.prototype.ngOnInit=function(){},w.prototype.ngOnChanges=function(e){},w.prototype.changeValue=function(e){var t=e.formatted;this.valueChanged.next({$event:e,elementValue:t})},w.decorators=[{type:c.Component,args:[{selector:"app-date-prop",template:'\n        <farris-datepicker [(ngModel)]="elementValue" [editable]="false" [showTime]="showTime"\n          [dateFormat]="dateFormat" [readonly]="elementConfig.readonly"\n          (valueChange)="changeValue($event)" [returnType]="\'string\'" [maxDate]="maxDate"\n          [minDate]="minDate">\n        </farris-datepicker>\n\n    '}]}],w.ctorParameters=function(){return[{type:c.ChangeDetectorRef}]},w.propDecorators={valueChanged:[{type:c.Output}]},w);function w(e){this.cd=e,this.showTime=!1,this.dateFormat="yyyy-MM-dd",this.valueChanged=new c.EventEmitter}var V=(Object.defineProperty(x.prototype,"elementConfig",{get:function(){return this._elementConfig},set:function(e){this._elementConfig=e,this.convertModalShowValue(this._elementValue),this.showClearButton=this.elementConfig.showClearButton&&!this.elementConfig.readonly},enumerable:!0,configurable:!0}),Object.defineProperty(x.prototype,"elementValue",{get:function(){return this._elementValue},set:function(e){this._elementValue=e,this.convertModalShowValue(this._elementValue)},enumerable:!0,configurable:!0}),x.prototype.ngOnInit=function(){},x.prototype.changeValue=function(e){this.valueChanged.next({$event:e,elementValue:this.elementValue})},x.prototype.modalClear=function(){this.convertModalShowValue(null),-1<Object.keys(this.elementConfig).indexOf("afterClickClearButton")&&"function"==typeof this.elementConfig.afterClickClearButton&&this.elementConfig.afterClickClearButton(this.elementValue),this.valueChanged.next({elementValue:null})},x.prototype.convertModalShowValue=function(e){this.elementConfig.converter?this.elementShowValue=this.elementConfig.converter.convertTo(e):e&&e instanceof Object?this.elementShowValue=JSON.stringify(e):this.elementShowValue=e},x.prototype.openModal=function(){if(!this.elementConfig.readonly){if(-1<Object.keys(this.elementConfig).indexOf("beforeOpenModal")&&"function"==typeof this.elementConfig.beforeOpenModal){var e=this.elementConfig.beforeOpenModal();if(e&&!e.result)return void this.notifyServ.warning(e.message)}this.createEditorComponent()}},x.prototype.createEditorComponent=function(){var e,n,r=this,t=this.elementConfig.editor;t&&((e=this.resolver.resolveComponentFactory(t).create(this.injector)).instance.value=this.elementValue,e.instance.editorParams=this.elementConfig.editorParams,(t=e.instance.modalConfig)?t.showButtons&&(t.buttons=e.instance.modalFooter):t={title:"属性配置",width:800,height:400,showButtons:!1},n=this.modalService.show(e,t),e.instance.closeModal&&e.instance.closeModal instanceof c.EventEmitter&&e.instance.closeModal.subscribe(function(e){e&&(r.convertModalShowValue(e),r.valueChanged.next({elementValue:e})),n.close()}),e.instance.submitModal&&e.instance.submitModal instanceof c.EventEmitter&&e.instance.submitModal.subscribe(function(e){var t;e&&(t=e.value,e=e.parameters,r.convertModalShowValue(t),r.submitModal.next({elementValue:t,parameters:e})),n.close()}))},x.decorators=[{type:c.Component,args:[{selector:"app-modal-prop",template:'\n    <div class="farris-input-wrap modalIcon">\n        <input type="input" class="form-control form-control-sm" [(ngModel)]="elementShowValue" readonly>\n        <span [class.allowClear]="showClearButton" class="showClearButton" (click)="modalClear()">\n            <i class="material-icons clearIcon">close</i>\n        </span>\n        <i class="material-icons moreIcon" (click)="openModal()">filter_none</i>\n    </div>\n    ',styles:["\n        .modalIcon .showClearButton {\n            display: none;\n        }\n        .modalIcon:hover .allowClear.showClearButton {\n            display: block;\n        }\n        .modalIcon input {\n            padding-right: 30px;\n        }\n        .modalIcon .moreIcon {\n            position: absolute;\n            top: 6px;\n            right: 6px;\n            cursor: pointer;\n            font-size: 16px;\n            color: #758a96;\n        }\n        .modalIcon .clearIcon {\n            position: absolute;\n            top: 5px;\n            right: 30px;\n            cursor: pointer;\n            font-size: 19px;\n            color: #758a96;\n        }\n        "]}]}],x.ctorParameters=function(){return[{type:n.NotifyService},{type:c.ComponentFactoryResolver},{type:s.BsModalService},{type:c.Injector}]},x.propDecorators={valueChanged:[{type:c.Output}],submitModal:[{type:c.Output}]},x);function x(e,t,n,r){this.notifyServ=e,this.resolver=t,this.modalService=n,this.injector=r,this.valueChanged=new c.EventEmitter,this.submitModal=new c.EventEmitter,this.showClearButton=!1}var O=(P.prototype.initImportedOriginalData=function(){var e=this.elementConfig.editorParams,t=e.constType,n=this.getValueType();this.importedOriginalData={controlName:e.controlName,propertyName:this.elementConfig.propertyID,propertyType:t,propertyValue:{type:n,value:this.elementValue},editorOptions:e.editorOptions}},P.prototype.getValueType=function(){var e=this.elementValue,t=this.elementConfig.editorParams,n=t.constType,t=t.editorOptions.types;if(e&&"object"==typeof e&&e.hasOwnProperty("type")&&"string"==typeof e.type&&"variable"===e.type.toLowerCase()&&t.includes("variable"))return"variable";if("string"==typeof e){if(t.includes("custom")&&(e.includes("viewModel")||!t.includes("const")||"string"!==n))return"custom";if(t.includes("const")&&"string"===n)return"const"}return"number"==typeof e&&t.includes("const")&&"number"===n||t.includes("const")?"const":t[0]},P.prototype.handleValueChanged=function(e){var t=e.propertyValue.value;"variable"===e.propertyValue.type&&"object"==typeof t&&(t.type="Variable",t.name&&delete t.name,e.isNewVariable&&(t.isNewVariable=!0)),this.valueChanged.next({$event:e,elementValue:t})},P.prototype.ngOnInit=function(){this.initImportedOriginalData()},P.decorators=[{type:c.Component,args:[{selector:"app-unity-prop",template:'\n      <div class="farris-input-wrap">\n        <farris-propertyEditor\n          [importedOriginalData]="importedOriginalData"\n          (propertyEditorValueChanged)="handleValueChanged($event)">\n        </farris-propertyEditor>\n      </div>\n    '}]}],P.propDecorators={elementConfig:[{type:c.Input}],elementValue:[{type:c.Input}],valueChanged:[{type:c.Output}]},P);function P(){this.valueChanged=new c.EventEmitter}var T=(S.prototype.ngOnChanges=function(e){this.refresh()},S.prototype.ngOnInit=function(){},S.prototype.refresh=function(){var e;switch(this.itemType=this.elementConfig.propertyType){case"boolean":this.itemType="select",e=v;break;case"select":case"multiSelect":e=v;break;case"modal":e=V;break;case"number":e=y;break;case"string":e=f;break;case"date":case"datetime":e=I;break;case"editableSelect":e=v;break;case"unity":e=O;break;case"custom":e=this.elementConfig.editor}-1<Object.keys(this.elementConfig).indexOf("defaultValue")&&(this.elementValue!==undefined&&null!==this.elementValue||(this.elementValue=this.elementConfig.defaultValue)),Object.keys(this.elementConfig).indexOf("visible")<0&&(this.elementConfig.visible=!0),this.createDynamicControl(e)},S.prototype.createDynamicControl=function(e){var n=this;e?0===this.propItem.length||this.propertyOldType!==this.itemType?(this.propItem.clear(),e=this.resolver.resolveComponentFactory(e),this.controlComponentRef=this.propItem.createComponent(e),this.controlComponentRef.instance.elementConfig=this.elementConfig,this.controlComponentRef.instance.elementValue=this.elementValue,this.controlComponentRef.instance.valueChanged&&this.controlComponentRef.instance.valueChanged.subscribe(function(e){e=e.elementValue;n.elementValue=e,n.changeValue(null)}),this.controlComponentRef.instance.submitModal&&this.controlComponentRef.instance.submitModal.subscribe(function(e){var t=e.elementValue,e=e.parameters;n.elementValue=t,n.changeModalValue(e)}),this.propertyOldType=this.itemType):this.controlComponentRef&&(this.controlComponentRef.instance.elementConfig=this.elementConfig,this.controlComponentRef.instance.elementValue=this.elementValue):console.log("动态创建组件为空！")},S.prototype.changeValue=function(e){var t={propertyID:this.elementConfig.propertyID,propertyValue:this.elementValue};this.valueChanged.emit({changeObject:t,parameters:e}),this.elementConfig.refreshPanelAfterChanged&&this.triggerRefreshPanel.emit()},S.prototype.changeModalValue=function(e){var t={propertyID:this.elementConfig.propertyID,propertyValue:this.elementValue};this.submitModal.emit({changeObject:t,parameters:e}),this.elementConfig.refreshPanelAfterChanged&&this.triggerRefreshPanel.emit()},S.decorators=[{type:c.Component,args:[{selector:"dynamic-property-item",template:'<div class="farris-group-wrap property-item" [hidden]="!elementConfig.visible">\r\n  <div class="form-group farris-form-group">\r\n    <label class="col-form-label mb-0">\r\n\r\n      \x3c!-- <span class="farris-label-text" [popover]="popTemplate" [popoverTitle]="elementConfig.propertyName"\r\n        container="body" placement="left" triggers="hover">{{elementConfig.propertyName}}</span> --\x3e\r\n         <ng-template #popTemplate>\r\n           <div>\r\n            <div *ngIf="elementConfig.propertyName" style="color: black;  float:left; margin-bottom:6px ">{{elementConfig.propertyName}}&nbsp;</div>\r\n            <div *ngIf="elementConfig.propertyID" style="color: black;  float:left; margin-bottom:6px">—&nbsp;{{elementConfig.propertyID}}</div>\r\n            <br/>\r\n            <div *ngIf="elementConfig.description" style="color: gray; float:left; margin-bottom:8px; "> &nbsp;&nbsp;{{elementConfig.description}}</div>\r\n            <div *ngIf="elementConfig.detail" style="float:left ">\r\n              <a href="{{elementConfig.detail}}" target="_blank">{{"&nbsp;&nbsp;更多"}}</a></div> \r\n            </div>                \r\n        </ng-template>\r\n\r\n        <div>\r\n          <span class="farris-label-text" farrisPopover [container]="\'body\'" \r\n          [placement]="\'left\'" [triggers]="\'hover\'" [popover]="popTemplate" [isFixed]="true">{{elementConfig.propertyName}}</span>\r\n        </div>  \r\n\r\n    </label>\r\n\r\n    <ng-container #propItem> </ng-container>\r\n\r\n  </div>\r\n</div>\r\n',styles:[".property-item .form-group{margin-bottom:2px}.property-item .col-form-label{line-height:26px}"]}]}],S.ctorParameters=function(){return[{type:c.ComponentFactoryResolver}]},S.propDecorators={elementConfig:[{type:c.Input}],elementValue:[{type:c.Input}],valueChanged:[{type:c.Output}],submitModal:[{type:c.Output}],triggerRefreshPanel:[{type:c.Output}],propItem:[{type:c.ViewChild,args:["propItem",{read:c.ViewContainerRef}]}]},S);function S(e){this.resolver=e,this.valueChanged=new c.EventEmitter,this.submitModal=new c.EventEmitter,this.triggerRefreshPanel=new c.EventEmitter,this.itemType="string"}var D=(E.prototype.ngOnChanges=function(e){this.refresh()},E.prototype.ngOnInit=function(){},E.prototype.refresh=function(){var e;switch(this.showClearButton=this.elementConfig.showClearButton&&!this.elementConfig.readonly,this.itemType=this.elementConfig.propertyType){case"boolean":this.itemType="select",this.selectOptions=[{key:!0,value:"true"},{key:!1,value:"false"}],e=this.selectTmpl;break;case"select":this.selectOptions=this.elementConfig.iterator||[],e=this.selectTmpl;break;case"multiSelect":this.selectOptions=this.elementConfig.iterator||[],"array"===this.elementConfig.multiSelectDataType&&(this.elementValue=this.elementValue?this.elementValue.toString():""),e=this.multiSelectTmpl;break;case"modal":this._convertModalShowValue(this.elementValue),e=this.modalTmpl;break;case"number":this.precision=this.elementConfig.decimals===undefined?2:this.elementConfig.decimals,e=this.numberTmpl;break;case"string":this.elementConfig.readonly&&this._convertModalShowValue(this.elementValue),e=this.stringTmpl;break;case"boolOrExp":this.selectOptions=[{key:!0,value:"true"},{key:!1,value:"false"}],e=this.boolOrExpTmpl;break;case"date":e=this.dateTmpl;break;case"datetime":e=this.datetimeTmpl;break;case"editableSelect":this.selectOptions=this.elementConfig.iterator||[],e=this.editableSelectTmpl}-1<Object.keys(this.elementConfig).indexOf("defaultValue")&&(this.elementValue!==undefined&&null!==this.elementValue||(this.elementValue=this.elementConfig.defaultValue),this.showDefaultValue=!0),Object.keys(this.elementConfig).indexOf("visible")<0&&(this.elementConfig.visible=!0),!e||0!==this.propItem.length&&this.propertyOldType===this.itemType||(this.propItem.clear(),this.propItem.createEmbeddedView(e),this.propertyOldType=this.itemType)},E.prototype.onmouseover=function(){this.elementConfig.showClearButton&&(this.showClearButton||(this.showClearButton=!0))},E.prototype.onmouseleave=function(){this.elementConfig.showClearButton&&(this.showClearButton=!1)},E.prototype.modalClear=function(){this._convertModalShowValue(null),-1<Object.keys(this.elementConfig).indexOf("afterClickClearButton")&&"function"==typeof this.elementConfig.afterClickClearButton&&this.elementConfig.afterClickClearButton(this.elementValue);var e={propertyID:this.elementConfig.propertyID,propertyValue:null};this.submitModal.emit({changeObject:e,parameters:null})},E.prototype.changeValue=function(e){var t=this.elementValue;t&&"string"===this.elementConfig.propertyType&&!this.elementConfig.readonly&&this.elementConfig.notAllowedChars&&this.elementConfig.notAllowedChars.length&&(this.elementConfig.notAllowedChars.forEach(function(e){"object"==typeof e?t=t.replace(e,""):"string"==typeof e&&(t=t.replace(new RegExp(e,"g"),""))}),this.elementValue=t),"multiSelect"===this.itemType&&"array"===this.elementConfig.multiSelectDataType&&(t=this.elementValue?this.elementValue.split(","):"");var n={propertyID:this.elementConfig.propertyID,propertyValue:t};this.valueChanged.emit({changeObject:n}),this.elementConfig.refreshPanelAfterChanged&&this.triggerRefreshPanel.emit()},E.prototype.changeDateValue=function(e){e=e.formatted,e={propertyID:this.elementConfig.propertyID,propertyValue:e};this.valueChanged.emit({changeObject:e}),this.elementConfig.refreshPanelAfterChanged&&this.triggerRefreshPanel.emit()},E.prototype.openModal=function(){if(!this.elementConfig.readonly){if(-1<Object.keys(this.elementConfig).indexOf("beforeOpenModal")&&"function"==typeof this.elementConfig.beforeOpenModal){var e=this.elementConfig.beforeOpenModal();if(e&&!e.result)return void this.notifyServ.warning({title:"系统提示",msg:e.message,timeout:3e3})}this.createEditorComponent()}},E.prototype.createEditorComponent=function(){var e,n,r=this,t=this.elementConfig.editor;t&&((e=this.resolver.resolveComponentFactory(t).create(this.injector)).instance.value=this.elementValue,this.elementConfig.editorParams&&(e.instance.editorParams=this.elementConfig.editorParams),(t=e.instance.modalConfig)?t.showButtons&&(t.buttons=e.instance.modalFooter):t={title:"属性配置",width:800,height:400,showButtons:!1},n=this.modalService.show(e,t),e.instance.closeModal&&e.instance.closeModal instanceof c.EventEmitter&&e.instance.closeModal.subscribe(function(e){e&&(r._convertModalShowValue(e),e={propertyID:r.elementConfig.propertyID,propertyValue:e},r.valueChanged.emit({changeObject:e})),n.close()}),e.instance.submitModal&&e.instance.submitModal instanceof c.EventEmitter&&e.instance.submitModal.subscribe(function(e){var t;e&&(t=e.value,e=e.parameters,r._convertModalShowValue(t),t={propertyID:r.elementConfig.propertyID,propertyValue:t},r.submitModal.emit({changeObject:t,parameters:e})),n.close()}))},E.prototype._convertModalShowValue=function(e){this.elementConfig.converter?this.elementShowValue=this.elementConfig.converter.convertTo(e):e&&e instanceof Object?this.elementShowValue=JSON.stringify(e):this.elementShowValue=e},E.decorators=[{type:c.Component,args:[{selector:"webide-property-item",template:'<div class="farris-group-wrap property-item" [hidden]="!elementConfig.visible">\r\n  <div class="form-group farris-form-group">\r\n   <label class="col-form-label">\r\n      <span class="farris-label-text" farrisPopover [popover]="popTemplate" [popoverTitle]="elementConfig.propertyName"\r\n        container="body" placement="left" triggers="hover">{{elementConfig.propertyName}}</span>\r\n    </label> \r\n    \x3c!-- <label class="col-form-label">\r\n      <span class="farris-label-text" farrisPopover [popover]="popTemplate" container="body"\r\n        triggers="hover">{{elementConfig.propertyName}}</span>\r\n    </label> --\x3e\r\n    \x3c!-- <label class="col-form-label">\r\n      <span class="farris-label-text">{{elementConfig.propertyName}}</span>\r\n    </label> --\x3e\r\n\r\n    <ng-container #propItem> </ng-container>\r\n\r\n    \x3c!--文本--\x3e\r\n    <ng-template #stringTmpl>\r\n      <div class="farris-input-wrap">\r\n        <input type="input" class="form-control form-control-sm" [(ngModel)]="elementValue" (blur)="changeValue($event)"\r\n          *ngIf="!elementConfig.readonly">\r\n        <input type="input" class="form-control form-control-sm" [(ngModel)]="elementShowValue" [readonly]="\'readonly\'"\r\n          *ngIf="elementConfig.readonly">\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template #numberTmpl>\r\n      \x3c!-- 数字--\x3e\r\n      <div class="farris-input-wrap">\r\n        <farris-number-spinner [(ngModel)]="elementValue" [readonly]="elementConfig.readonly" [precision]="precision"\r\n          [autoDecimal]="true" [min]="elementConfig.min" [max]="elementConfig.max" [canNull]="true"\r\n          [bigNumber]="elementConfig.isBigNumber" (ngModelChange)="changeValue($event)">\r\n        </farris-number-spinner>\r\n      </div>\r\n    </ng-template>\r\n\r\n    \x3c!--下拉列表--\x3e\r\n    <ng-template #selectTmpl>\r\n      <div class="farris-input-wrap">\r\n        <farris-combo-list [(ngModel)]="elementValue" [idField]="\'key\'" [textField]="\'value\'" [data]="selectOptions"\r\n          [readonly]="elementConfig.readonly" [editable]="false" [enableClear]="false" [enableCancelSelected]="false"\r\n          (valueChange)="changeValue($event)">\r\n        </farris-combo-list>\r\n      </div>\r\n    </ng-template>\r\n\r\n    \x3c!--可编辑的下拉列表（此处是改动后的farris combolist，farris combolist）--\x3e\r\n    <ng-template #boolOrExpTmpl>\r\n      <div class="farris-input-wrap">\r\n        <farris-editable-combo-list [data]="selectOptions" textField="value" idField="key" [(ngModel)]="elementValue"\r\n          (valueChange)="changeValue($event)" [editable]="true" [readonly]="elementConfig.readonly?true:false">\r\n        </farris-editable-combo-list>\r\n      </div>\r\n    </ng-template>\r\n\r\n    \x3c!-- 可编辑的下拉框--\x3e\r\n    <ng-template #editableSelectTmpl>\r\n      <div class="farris-input-wrap">\r\n        <farris-combo-list [(ngModel)]="elementValue" [idField]="\'key\'" [textField]="\'value\'" [data]="selectOptions"\r\n          [readonly]="elementConfig.readonly" [enableClear]="false" [enableCancelSelected]="false" [nosearch]="true"\r\n          (ngModelChange)="changeValue($event)">\r\n        </farris-combo-list>\r\n      </div>\r\n    </ng-template>\r\n\r\n    \x3c!--下拉多选--\x3e\r\n    <ng-template #multiSelectTmpl>\r\n      <div class="farris-input-wrap">\r\n        <farris-combo-list [(ngModel)]="elementValue" [idField]="\'key\'" [textField]="\'value\'" [data]="selectOptions"\r\n          [readonly]="elementConfig.readonly" [editable]="false" [multiSelect]="true" [enableClear]="false"\r\n          (ngModelChange)="changeValue($event)">\r\n        </farris-combo-list>\r\n      </div>\r\n    </ng-template>\r\n\r\n    \x3c!--日期--\x3e\r\n    <ng-template #dateTmpl>\r\n      <div class="farris-input-wrap">\r\n        <farris-datepicker [(ngModel)]="elementValue" [editable]="false" [showTime]="false" [dateFormat]="\'yyyy-MM-dd\'"\r\n          [readonly]="elementConfig.readonly" (valueChange)="changeDateValue($event)" [returnType]="\'string\'"\r\n          [maxDate]="elementConfig.max" [minDate]="elementConfig.min">\r\n        </farris-datepicker>\r\n      </div>\r\n    </ng-template>\r\n\r\n\r\n    \x3c!-- 日期时间 --\x3e\r\n    <ng-template #datetimeTmpl>\r\n      <div class="farris-input-wrap">\r\n        <farris-datepicker [(ngModel)]="elementValue" [editable]="false" [showTime]="true"\r\n          [dateFormat]="\'yyyy-MM-dd HH:mm:ss\'" [readonly]="elementConfig.readonly"\r\n          (valueChange)="changeDateValue($event)" [returnType]="\'string\'" [maxDate]="elementConfig.max"\r\n          [minDate]="elementConfig.min">\r\n        </farris-datepicker>\r\n      </div>\r\n    </ng-template>\r\n\r\n\r\n    \x3c!-- 模态框 --\x3e\r\n    <ng-template #modalTmpl>\r\n      <div class="farris-input-wrap modalIcon">\r\n        <input type="input" class="form-control form-control-sm" [(ngModel)]="elementShowValue" readonly>\r\n        <span *ngIf="showClearButton" class="showClearButton" (click)="modalClear()">\r\n          <i class="material-icons clearIcon">close</i>\r\n        </span>\r\n        <i class="material-icons moreIcon" (click)="openModal()">filter_none</i>\r\n      </div>\r\n    </ng-template>\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #popTemplate>\r\n  <div *ngIf="elementConfig.propertyID">\r\n    <span>编号： </span> {{elementConfig.propertyID}}</div>\r\n  <div *ngIf="elementConfig.description">\r\n    <span>描述： </span> {{elementConfig.description}}</div>\r\n</ng-template>',styles:[".property-item .form-group{margin-bottom:2px}.property-item .modalIcon .showClearButton{display:none}.property-item .modalIcon:hover .showClearButton{display:block}.property-item .modalIcon input{padding-right:30px}.property-item .modalIcon .moreIcon{position:absolute;top:6px;right:6px;cursor:pointer;font-size:16px;color:#758a96}.property-item .modalIcon .clearIcon{position:absolute;top:5px;right:30px;cursor:pointer;font-size:19px;color:#758a96}.property-item .form-control[readonly]{background-color:#fff}.property-item .form-control:disabled,.property-item .form-control[readonly]{color:#4b4c4c}"]}]}],E.ctorParameters=function(){return[{type:c.ComponentFactoryResolver},{type:s.BsModalService},{type:c.Injector},{type:n.NotifyService},{type:c.ElementRef}]},E.propDecorators={elementConfig:[{type:c.Input}],elementValue:[{type:c.Input}],valueChanged:[{type:c.Output}],submitModal:[{type:c.Output}],triggerRefreshPanel:[{type:c.Output}],propItem:[{type:c.ViewChild,args:["propItem",{read:c.ViewContainerRef}]}],stringTmpl:[{type:c.ViewChild,args:["stringTmpl"]}],numberTmpl:[{type:c.ViewChild,args:["numberTmpl"]}],selectTmpl:[{type:c.ViewChild,args:["selectTmpl"]}],boolOrExpTmpl:[{type:c.ViewChild,args:["boolOrExpTmpl"]}],multiSelectTmpl:[{type:c.ViewChild,args:["multiSelectTmpl"]}],dateTmpl:[{type:c.ViewChild,args:["dateTmpl"]}],datetimeTmpl:[{type:c.ViewChild,args:["datetimeTmpl"]}],modalTmpl:[{type:c.ViewChild,args:["modalTmpl"]}],editableSelectTmpl:[{type:c.ViewChild,args:["editableSelectTmpl"]}]},E);function E(e,t,n,r,i){this.resolver=e,this.modalService=t,this.injector=n,this.notifyServ=r,this.el=i,this.valueChanged=new c.EventEmitter,this.submitModal=new c.EventEmitter,this.triggerRefreshPanel=new c.EventEmitter,this.selectOptions=[],this.itemType="string",this.precision=2,this.showClearButton=!1,this.showDefaultValue=!1}var M=(k.prototype.ngOnChanges=function(e){this.category.propertyData&&this.category.enableCascade?this.data=this.category.propertyData:this.data=this.propertyData,this.adaptProperties()},k.prototype.adaptProperties=function(){var t=this;this.category.properties.forEach(function(e){"cascade"===e.propertyType&&(t.cascadeValueStringify(e,t.data[e.propertyID]),Object.keys(e).indexOf("visible")<0&&(e.visible=!0))})},k.prototype.refresh=function(){this.category.propertyData&&this.category.enableCascade?this.data=this.category.propertyData:this.data=this.propertyData,this.items.forEach(function(e){return e.refresh()}),this.fitems.forEach(function(e){return e.refresh()})},k.prototype._itemChanged=function(e){e=e.changeObject;this.data[e.propertyID]=e.propertyValue,this.category.setPropertyRelates&&"function"==typeof this.category.setPropertyRelates&&(this.category.setPropertyRelates(e,this.data),this.items.forEach(function(e){return e.refresh()}),this.fitems.forEach(function(e){return e.refresh()})),e.categoryId=this.category.categoryId,this.category.enableCascade&&(e.propertyPath=this.category.parentPropertyID),this.valueChanged.emit(e)},k.prototype._submitModal=function(e){var t=e.changeObject,n=e.parameters;this.data[t.propertyID]=t.propertyValue,this.category.setPropertyRelates&&"function"==typeof this.category.setPropertyRelates&&(this.category.setPropertyRelates(t,this.data,n),this.items.forEach(function(e){return e.refresh()}),this.fitems.forEach(function(e){return e.refresh()})),t.categoryId=this.category.categoryId,this.category.enableCascade&&(t.propertyPath=this.category.parentPropertyID),this.submitModal.emit(e)},k.prototype._cascadeitemChanged=function(e,t){var n=t.propertyID;n&&(e=e.changeObject,this.data[n]||(this.data[n]={}),this.data[n][e.propertyID]=e.propertyValue,e.categoryId=this.category.categoryId,e.parentPropertyID=e.propertyPath=n,this.category.enableCascade&&(e.propertyPath=this.category.parentPropertyID+"."+e.parentPropertyID),this.category.setPropertyRelates&&"function"==typeof this.category.setPropertyRelates&&(this.category.setPropertyRelates(e,this.data),this.items.forEach(function(e){return e.refresh()}),this.fitems.forEach(function(e){return e.refresh()})),this.cascadeValueStringify(t,this.data[n]),this.valueChanged.emit(e))},k.prototype.__cascadeitemSubmitModal=function(e,t){var n,r,i=t.propertyID;i&&(n=e.changeObject,r=e.parameters,this.data[i]||(this.data[i]={}),this.data[i][n.propertyID]=n.propertyValue,n.categoryId=this.category.categoryId,n.parentPropertyID=n.propertyPath=i,this.category.enableCascade&&(n.propertyPath=this.category.parentPropertyID+"."+n.parentPropertyID),this.category.setPropertyRelates&&"function"==typeof this.category.setPropertyRelates&&(this.category.setPropertyRelates(n,this.data,r),this.items.forEach(function(e){return e.refresh()}),this.fitems.forEach(function(e){return e.refresh()})),this.cascadeValueStringify(t,this.data[i]),this.submitModal.emit(e))},k.prototype.cascadeValueStringify=function(e,t){e&&e.cascadeConfig&&(t?e.cascadeConverter&&e.cascadeConverter.convertTo?e.cascadeSummary=e.cascadeConverter.convertTo(t,e.cascadeConfig):e.cascadeSummary=JSON.stringify(t):e.cascadeSummary="")},k.prototype._checkCascadeVisible=function(e){return Object.keys(e).indexOf("visible")<0||e.visible},k.prototype.refreshPanel=function(){this.triggerRefreshPanel.emit()},k.prototype.trackByPropId=function(e,t){return t.propertyID},k.decorators=[{type:c.Component,args:[{selector:"webide-property-item-list",template:'<div *ngFor="let propItem of category.properties; trackBy:trackByPropId">\r\n    \x3c!-- 非动态创建--\x3e\r\n    <ng-container *ngIf="!dynamicControl">\r\n        <div *ngIf="propItem.propertyType != \'cascade\'" class="px-2">\r\n            <webide-property-item (valueChanged)="_itemChanged($event)" (submitModal)="_submitModal($event)"\r\n                [elementValue]="data[propItem.propertyID]" [elementConfig]="propItem"\r\n                (triggerRefreshPanel)="refreshPanel()"></webide-property-item>\r\n        </div>\r\n\r\n        <div class="farris-panel" *ngIf="propItem.propertyType == \'cascade\' && propItem.visible">\r\n            <div class="propertyCascadeItem farris-panel-item card">\r\n                <div class="card-header" (click)="propItem.isExpand=!propItem.isExpand">\r\n                    <div class="panel-item-title">\r\n                        <div class="form-group farris-form-group">\r\n                            <div class="f-section-formgroup-legend">\r\n                                <div class="f-header px-0  col-form-label" style="font-size: inherit;">\r\n                                    <div class="f-title f-utils-fill">{{propItem.propertyName}}</div>\r\n                                    <div class="f-toolbar">\r\n                                        <button class="btn f-btn-collapse-expand f-btn-mx"\r\n                                            [class.f-state-expand]="propItem.isExpand"><span></span></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="farris-input-wrap" *ngIf="!propItem.hideCascadeTitle">\r\n                                <input type="input" class="form-control form-control-sm" readonly\r\n                                    [value]="propItem.cascadeSummary">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="card-body" [style.display]="propItem.isExpand?\'block\':\'none\'">\r\n                    <div *ngFor="let cascadeItem of propItem.cascadeConfig" class="px-2">\r\n                        <webide-property-item (valueChanged)="_cascadeitemChanged($event,propItem)"\r\n                            (submitModal)="__cascadeitemSubmitModal($event, propItem)"\r\n                            [elementValue]="data[propItem.propertyID]?data[propItem.propertyID][cascadeItem.propertyID]:\'\'"\r\n                            [elementConfig]="cascadeItem" (triggerRefreshPanel)="refreshPanel()">\r\n                        </webide-property-item>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </ng-container>\r\n\r\n\r\n    \x3c!-- 动态创建--\x3e\r\n    <ng-container *ngIf="dynamicControl">\r\n        <div *ngIf="propItem.propertyType !== \'cascade\'" class="px-2">\r\n            <dynamic-property-item *ngIf="dynamicControl" (valueChanged)="_itemChanged($event)"\r\n                (submitModal)="_submitModal($event)" [elementValue]="data[propItem.propertyID]"\r\n                [elementConfig]="propItem" (triggerRefreshPanel)="refreshPanel()"></dynamic-property-item>\r\n        </div>\r\n\r\n        <div class="farris-panel" *ngIf="propItem.propertyType === \'cascade\'">\r\n            <div class="propertyCascadeItem farris-panel-item card" [hidden]="!propItem.visible">\r\n                <div class="card-header" (click)="propItem.isExpand=!propItem.isExpand">\r\n                    <div class="panel-item-title">\r\n                        <div class="form-group farris-form-group">\r\n                            <div class="f-section-formgroup-legend">\r\n                                <div class="f-header px-0  col-form-label" style="font-size: inherit;">\r\n                                    <div class="f-title f-utils-fill">{{propItem.propertyName}}</div>\r\n                                    <div class="f-toolbar">\r\n                                        <button class="btn f-btn-collapse-expand f-btn-mx"\r\n                                            [class.f-state-expand]="propItem.isExpand"><span></span></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="farris-input-wrap" *ngIf="!propItem.hideCascadeTitle">\r\n                                <input type="input" class="form-control form-control-sm" readonly\r\n                                    [value]="propItem.cascadeSummary">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="card-body" [hidden]="!propItem.isExpand">\r\n                    <div *ngFor="let cascadeItem of propItem.cascadeConfig" class="px-2">\r\n\r\n                        <dynamic-property-item *ngIf="dynamicControl"\r\n                            (valueChanged)="_cascadeitemChanged($event,propItem)"\r\n                            (submitModal)="__cascadeitemSubmitModal($event, propItem)"\r\n                            [elementValue]="data[propItem.propertyID]?data[propItem.propertyID][cascadeItem.propertyID]:\'\'"\r\n                            [elementConfig]="cascadeItem" (triggerRefreshPanel)="refreshPanel()">\r\n                        </dynamic-property-item>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n</div>\r\n',encapsulation:c.ViewEncapsulation.None,styles:[".propertyCascadeItem{background-color:transparent!important;border:none!important}.propertyCascadeItem .card-header{background-color:transparent!important;padding:4px 12px!important;color:inherit!important}.propertyCascadeItem .card-header .panel-item-title{width:100%;position:relative;font-size:inherit!important}.propertyCascadeItem .card-header .panel-item-title .farris-input-wrap{margin-left:-5px;margin-right:-5px}.propertyCascadeItem .f-accordion-collapse,.propertyCascadeItem .f-accordion-expand{right:0;left:auto!important;top:6px;color:#6b94ec!important;position:absolute}.propertyCascadeItem .card-body{padding:3px 12px!important;background:rgba(255,255,255,.8);border-radius:8px;margin:4px 8px}"]}]}],k.ctorParameters=function(){return[]},k.propDecorators={category:[{type:c.Input}],propertyData:[{type:c.Input}],dynamicControl:[{type:c.Input}],valueChanged:[{type:c.Output}],submitModal:[{type:c.Output}],triggerRefreshPanel:[{type:c.Output}],items:[{type:c.ViewChildren,args:[D]}],fitems:[{type:c.ViewChildren,args:[T]}]},k);function k(){this.dynamicControl=!1,this.valueChanged=new c.EventEmitter,this.submitModal=new c.EventEmitter,this.triggerRefreshPanel=new c.EventEmitter}var j=(_.prototype.ngOnInit=function(){this.width?this.eastDiv.nativeElement.style.width=this.width+"px":this.eastDiv.nativeElement.style.width="inherit",this.height?this.eastDiv.nativeElement.style.height=this.height+"px":this.eastDiv.nativeElement.style.height="100%",this.isPersitOpenState&&(this.isOpen=this.isShowPanel),this.checkShowTabCategory()},_.prototype.ngOnChanges=function(e){e.isShowPanel&&this.isPersitOpenState&&(this.isOpen=this.isShowPanel),this.checkShowTabCategory()},_.prototype.refreshPanel=function(){this.checkShowTabCategory(),this.itemLists.forEach(function(e){return e.refresh()})},_.prototype.changeStatus=function(e){this.propertyConfig.length<2||(e.status&&"open"!==e.status?e.status="open":e.status="closed")},_.prototype.collapse=function(){this.isPersitOpenState||(this.isOpen=!1),this.closePropertyPanel.emit()},_.prototype._valueChanged=function(e){this.propertyChanged.emit(e)},_.prototype._submitModal=function(e){this.submitModal.emit(e)},_.prototype.checkShowTabCategory=function(){var e,n=this;if(this.categoryTabs=[],!this.propertyConfig||0===this.propertyConfig.length)return this.categoryTabs=[{tabId:"default",tabName:"属性",categoryList:[]}],void(this.selectedTab=null);this.propertyConfig.forEach(function(t){var e;t.tabId?(e=n.categoryTabs.find(function(e){return e.tabId===t.tabId}))?(e.categoryList.push(t),e.hide&&(e.hide=t.hide||0===t.properties.length)):n.categoryTabs.push({tabId:t.tabId,tabName:t.tabName,categoryList:[t],hide:t.hide||0===t.properties.length}):(e=n.categoryTabs.find(function(e){return"default"===e.tabId}))?e.categoryList.push(t):n.categoryTabs.push({tabId:"default",tabName:"属性",categoryList:[t]})}),this.selectedTab?(e=this.categoryTabs.find(function(e){return e.tabId===n.selectedTab.tabId}))&&(this.selectedTab=e):this.selectedTab=this.categoryTabs[0]},_.decorators=[{type:c.Component,args:[{selector:"app-property-panel",template:'<div #east [style.display]="isOpen?\'block\':\'none\'" [class.white-theme]="isWhiteTheme">\r\n    <div class="propertyPanel panel d-flex flex-column">\r\n\r\n\r\n        <div class="title d-flex">\r\n            <div class="title-label" *ngFor="let tab of categoryTabs" (click)="selectedTab=tab" [hidden]="tab.hide"\r\n                [class.active]="selectedTab && selectedTab.tabId===tab.tabId && categoryTabs.length>1">\r\n                <span>{{tab.tabName}}</span>\r\n            </div>\r\n            <div class="title-actions">\r\n                <div class="monaco-toolbar">\r\n                    <div class="monaco-action-bar animated">\r\n                        <ul class="actions-container" role="toolbar">\r\n                            <li class="action-item" (click)="collapse()" *ngIf="showCloseBtn">\r\n                                <a class="hide-panel" title="关闭"></a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div #propertyPanel class="panel-body" [style.height]="(height - 35) + \'px\'" *ngIf="selectedTab">\r\n            <ul class="property-grid">\r\n                <li *ngFor="let category of selectedTab.categoryList">\r\n                    <ng-container *ngIf="!category.hide">\r\n                        <span *ngIf="!category.hideTitle" class="group-label" (click)="changeStatus(category)">\r\n                            <span *ngIf="isWhiteTheme"\r\n                                class="f-icon f-icon-yxs_level mr-2"></span>{{ category.categoryName }}</span>\r\n                        <div [hidden]="category.status === \'closed\'">\r\n                            <webide-property-item-list [category]="category" [propertyData]="propertyData"\r\n                                (valueChanged)="_valueChanged($event)" (submitModal)="_submitModal($event)"\r\n                                (triggerRefreshPanel)="refreshPanel()" [dynamicControl]="dynamicControl">\r\n                            </webide-property-item-list>\r\n                        </div>\r\n                    </ng-container>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n</div>',styles:[":host{width:inherit;height:inherit}.propertyPanel{width:100%;height:100%;color:rgba(0,0,0,.75);background:#f3f8ff!important;border-color:#d8dbe2!important}.propertyPanel .title{position:relative;background:#d0d8e9!important;padding-right:40px;flex-wrap:wrap;border:0}.propertyPanel .title>.title-label{line-height:34px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;padding-left:12px;padding-right:12px;color:#333;font-size:14px;font-weight:600;cursor:pointer}.propertyPanel .title>.title-label.active{background:#8fb1df!important}.propertyPanel .title .title-actions{padding-left:35px;height:35px;flex:1;box-sizing:border-box;position:absolute;right:10px;top:0}.propertyPanel .property-grid .group-label{line-height:30px;display:block;padding-left:12px;cursor:pointer;background:#e2e9f6!important;color:#34495e!important;font-weight:600!important}.propertyPanel .panel-body{overflow:auto;height:100%}.propertyPanel .property-grid{list-style:none;margin:0;padding:0}.propertyPanel .panel-body .property-grid .group-label+div{padding-bottom:14px!important;padding-top:.25rem!important}.propertyPanel .action-item{cursor:pointer;display:inline-block;transition:transform 50ms;position:relative;padding:0}.propertyPanel .action-item .hide-panel{height:35px;display:block;line-height:35px;min-width:28px;color:rgba(66,66,66,.75);background-color:transparent!important;outline:0!important;background:url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M9.784 8L13 11.217 11.215 13 8.001 9.786 4.785 13 3 11.216l3.214-3.215L3 4.785 4.784 3 8 6.216 11.216 3 13 4.785 9.784 8.001z' fill='%23424242'/%3E%3C/svg%3E\") 50% 50% no-repeat}.white-theme .propertyPanel{border:1px solid #d8dce6!important;background:#fff!important}.white-theme .propertyPanel .title{justify-content:space-around;overflow:visible;background:#fff!important;flex-wrap:wrap;text-align:center}.white-theme .propertyPanel .title>.title-label{border-bottom:0;font-weight:400!important;background:#fff!important;flex:1}.white-theme .propertyPanel .title>.title-label.active{border-bottom:3px solid #705dcc}.white-theme .propertyPanel .property-grid .group-label{background:#fff!important;line-height:32px;font-weight:400!important;border-top:1px solid #d8dce6!important}"]}]}],_.ctorParameters=function(){return[]},_.propDecorators={width:[{type:c.Input}],height:[{type:c.Input}],isWhiteTheme:[{type:c.Input}],isPersitOpenState:[{type:c.Input}],isShowPanel:[{type:c.Input}],closePropertyPanel:[{type:c.Output}],propertyConfig:[{type:c.Input}],propertyData:[{type:c.Input}],dynamicControl:[{type:c.Input}],propertyChanged:[{type:c.Output}],submitModal:[{type:c.Output}],showCloseBtn:[{type:c.Input}],eastDiv:[{type:c.ViewChild,args:["east"]}],itemLists:[{type:c.ViewChildren,args:[M]}]},_);function _(){this.isWhiteTheme=!1,this.isPersitOpenState=!1,this.isShowPanel=!1,this.closePropertyPanel=new c.EventEmitter,this.propertyData={},this.dynamicControl=!1,this.propertyChanged=new c.EventEmitter,this.submitModal=new c.EventEmitter,this.showCloseBtn=!0,this.isOpen=!0,this.categoryTabs=[]}var F=function(){return(F=Object.assign||function F(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)},R=(Object.defineProperty($.prototype,"data",{get:function(){return this.innerData},set:function(e){this.innerData=e,this.data$.next(e)},enumerable:!0,configurable:!0}),$.prototype.toBoolean=function(e){return null!=e&&""+e!="false"},$.prototype.selectItem=function(e,t){this.isOpen$.next(!1),this.selectedValue=e,this.selected$.next(this.selectedValue)},$.prototype.unSelectItem=function(e){this.selectedValue=null,this.selected$.next(null)},$.prototype.isSelect=function(e){return!1},$.prototype.getSelected=function(){return this.selectedValue},$.prototype.getValue=function(e,t){return this.selectedValue?this.getValueByObj(e,this.selectedValue):""},$.prototype.getValueByObj=function(e,t){if(!t)return"";return-1===e.indexOf(".")?t[e]:e.split(".").reduce(function(e,t){return e?e[t]:null},t)},$.decorators=[{type:c.Injectable}],$);function $(){this.innerData=[],this.selected$=new d.Subject,this.isOpen$=new d.BehaviorSubject(!1),this.data$=new d.BehaviorSubject("")}var B=0,N=(Object.defineProperty(L.prototype,"idField",{get:function(){return this.comboService.idField},set:function(e){this.comboService.idField=e},enumerable:!0,configurable:!0}),Object.defineProperty(L.prototype,"valueField",{get:function(){return this.comboService.valueField},set:function(e){this.comboService.valueField=e},enumerable:!0,configurable:!0}),Object.defineProperty(L.prototype,"textField",{get:function(){return this.comboService.textField},set:function(e){this.comboService.textField=e},enumerable:!0,configurable:!0}),Object.defineProperty(L.prototype,"cmbPanel",{set:function(e){this._cmbPanel=e,this.comboPanelCreated$.next(e)},enumerable:!0,configurable:!0}),L.prototype.onClick=function(){this.comboService.isOpen$.next(!this.isOpen)},L.prototype.removeDocumentListener=function(){this.documentClickEvent&&(this.documentClickEvent(),this.documentClickEvent=null)},L.prototype.onBlur=function(e){this.onTouched()},L.prototype.blur=function(){this.input.textbox.nativeElement.blur()},L.prototype.focus=function(){this.input.textbox.nativeElement.focus()},L.prototype.onClear=function(){this.value="",this.comboService.selectedValue=null,this.comboService.isOpen$.next(!1),this.comboService.selected$.next([]),this.clear.emit()},L.prototype.updateMappingFieldValue=function(){var e,t,n;this.ngControl&&this.ngControl.formDirective&&this.ngControl.formDirective.form&&this.ngControl.formDirective.form.bindingData&&(e=this.ngControl.formDirective.form.bindingData,n=[],(t=this.ngControl.formDirective.form.bindingPath)&&(n=t.split("/").filter(function(e){return""!==e})),this.mappingField=this.mappingField||"",e.setValue(n.concat(this.mappingField.split(".")),this.value,!0,!0))},L.prototype.updateSelectedValues=function(){var e,t,n;this.ngControl&&this.ngControl.formDirective&&this.ngControl.formDirective.form&&this.ngControl.formDirective.form.bindingData&&(e=this.ngControl.formDirective.form.bindingData,n=[],(t=this.ngControl.formDirective.form.bindingPath)&&(n=t.split("/").filter(function(e){return""!==e})),this.mappingField=this.mappingField||"",this.value=e.getValue(n.concat(this.mappingField.split("."))))},L.prototype.onValueChange=function(e){this.value=e,this.onChange(e),this.valueChange.emit(e)},L.prototype.updatePosition=function(){this.autoWidth&&(t=this.input.el.nativeElement.getBoundingClientRect().width,this.panelWidth=t||this.panelWidth);var e=this.el.nativeElement.getBoundingClientRect(),t=e.left,e=e.top;return{left:t+"px",top:(e=e+this.panelHeight>window.innerHeight&&0<e-this.panelHeight?e-this.panelHeight-27:e)+27+"px",width:this.panelWidth+"px",height:this.panelHeight+"px"}},L.prototype.contains=function(e,t){return e.nativeElement.contains(t.target)},L.prototype.creatContainer=function(){var e=this.document.querySelector(".overlay-container");return e||(e=this.document.createElement("div")).classList.add("overlay-container"),this.document.body.appendChild(e),e},L.prototype.creatPanel=function(e){var t=this.document.createElement("div");return t.id="overlay-"+B++,t.classList.add("overlay-pane"),e.appendChild(t),t},L.prototype.writeValue=function(e){this.displayText=e,this.cdr.markForCheck()},L.prototype.registerOnChange=function(e){this.onChange=e},L.prototype.registerOnTouched=function(e){this.onTouched=e},L.prototype.setDisabledState=function(e){this.disabled=e,this.cdr.markForCheck()},L.prototype.ngOnInit=function(){},L.prototype.ngAfterViewInit=function(){var t=this;this.ngControl=this.injector.get(r.NgControl,null),!this.valueField&&this.idField&&(this.valueField=this.idField),d.fromEvent(window,"resize").pipe(p.debounceTime(100),p.throttle(function(e){return d.interval(100)}),p.takeUntil(this.destroy$)).subscribe(function(){var e=t.input.el.nativeElement.getBoundingClientRect().width;t.panelWidth=e,t.comboService.isOpen$.next(!1)})},L.prototype.ngOnDestroy=function(){this.destroy$.next(),this.destroy$.complete()},L.prototype.onSelect=function(e){var t=F({},e),e=t.data,t=t.index;this.comboService.selectItem(e,t),this.selectChange.emit({data:e,index:t}),this.focus()},L.prototype.onUnSelected=function(e){e=F({},e).data;this.comboService.unSelectItem(e),this.focus()},L.decorators=[{type:c.Component,args:[{selector:"farris-editable-combo-list",template:'<input-group\r\n    #input\r\n    [class.actived]="isOpen"\r\n    [(value)]="displayText"\r\n    [disabled]="disabled"\r\n    [readonly]="readonly"\r\n    [editable]="editable"\r\n    [groupText]="groupIcon"\r\n    [placeholder]="placeholder"\r\n    [enableClear] = "false"\r\n    (clickHandle)="onClick()"\r\n    (blurHandle)="onBlur($event)"\r\n    (valueChange)="onValueChange($event)"\r\n    (clear)="onClear()"\r\n    style="display: block;"\r\n>\r\n</input-group>\r\n<div class="comboPanel" *ngIf="isOpen" [ngStyle]="updatePosition()" #comboPanel>\r\n    <farris-datalist\r\n        #dl\r\n        [data]="data"\r\n        [idField]="idField"\r\n        [valueField]="valueField"\r\n        [textField]="textField"\r\n        (selected)="onSelect($event)"\r\n        (unSelected)="onUnSelected($event)"\r\n    >\r\n\x3c!--        <ng-template list-item-tmp let-item="data.data" let-idx="index" *ngIf="itemTemplate">--\x3e\r\n\x3c!--            <ng-container *ngTemplateOutlet="itemTemplate; context: { $implicit: item, index: idx }"> </ng-container>--\x3e\r\n\x3c!--        </ng-template>--\x3e\r\n    </farris-datalist>\r\n</div>\r\n',changeDetection:c.ChangeDetectionStrategy.OnPush,encapsulation:c.ViewEncapsulation.None,providers:[{provide:r.NG_VALUE_ACCESSOR,useExisting:c.forwardRef(function(){return L}),multi:!0},R],styles:[".overlay-container{position:fixed;z-index:9999;pointer-events:none;top:0;left:0;height:100%;width:100%}.overlay-pane{position:absolute;pointer-events:auto}.overlay-pane .comboPanel{position:absolute;overflow:auto;background:#fff;z-index:9;margin-top:-1px;box-shadow:0 2px 8px 0 rgba(0,0,0,.15);border-radius:2px}.overlay-pane .comboPanel combo2-list{position:absolute;width:100%;height:100%}"]}]}],L.ctorParameters=function(){return[{type:c.ElementRef},{type:c.ChangeDetectorRef},{type:undefined,decorators:[{type:c.Inject,args:[i.DOCUMENT]}]},{type:c.Renderer2},{type:R},{type:c.Injector}]},L.propDecorators={disabled:[{type:c.Input}],readonly:[{type:c.Input}],editable:[{type:c.Input}],placeholder:[{type:c.Input}],panelWidth:[{type:c.Input}],panelHeight:[{type:c.Input}],autoWidth:[{type:c.Input}],enableClear:[{type:c.Input}],mappingField:[{type:c.Input}],data:[{type:c.Input}],idField:[{type:c.Input}],valueField:[{type:c.Input}],textField:[{type:c.Input}],showPanel:[{type:c.Output}],hidePanel:[{type:c.Output}],clear:[{type:c.Output}],valueChange:[{type:c.Output}],selectChange:[{type:c.Output}],cmbPanel:[{type:c.ViewChild,args:["comboPanel"]}],input:[{type:c.ViewChild,args:["input"]}]},L);function L(e,t,n,r,i,o){var a=this;this.el=e,this.cdr=t,this.document=n,this.render=r,this.comboService=i,this.injector=o,this.disabled=!1,this.readonly=!1,this.editable=!0,this.placeholder="请选择",this.panelWidth=300,this.panelHeight=300,this.autoWidth=!0,this.enableClear=!0,this.showPanel=new c.EventEmitter,this.hidePanel=new c.EventEmitter,this.clear=new c.EventEmitter,this.valueChange=new c.EventEmitter,this.selectChange=new c.EventEmitter,this._cmbPanel=null,this.isOpen=!1,this.groupIcon='<span class="f-icon f-icon-arrow-60-down"></span>',this.comboPanelCreated$=new d.Subject,this.destroy$=new d.Subject,this.ngControl=null,this.displayText="",this.onChange=function(){return null},this.onTouched=function(){return null};var l=this.creatContainer(),s=this.creatPanel(l);this.comboPanelCreated$.pipe(p.takeUntil(this.destroy$),p.filter(function(e){return!!e})).subscribe(function(e){s.appendChild(e.nativeElement),a.updatePosition()}),this.destroy$.subscribe(function(){n.body.contains(l)&&l.contains(s)&&l.removeChild(s),B=0}),this.comboService.isOpen$.pipe(p.takeUntil(this.destroy$),p.skip(1)).subscribe(function(e){e?a.documentClickEvent=a.render.listen("document","click",function(e){a.el.nativeElement.contains(e.target)||!a._cmbPanel||a.contains(a._cmbPanel,e)||(a.isOpen=!1,a.removeDocumentListener(),a.cdr.markForCheck())}):a.removeDocumentListener(),a.isOpen=!!e,a.cdr.markForCheck()}),this.comboService.selected$.pipe(p.takeUntil(this.destroy$)).subscribe(function(){a.displayText=a.comboService.getValue(a.textField),a.value=a.comboService.getValue(a.idField),a.data&&0<a.data.length?(a.onChange(a.value),a.valueChange.emit(a.value)):(a.updateMappingFieldValue(),a.onChange(a.displayText),a.valueChange.emit(a.displayText)),a.cdr.detectChanges()})}q.decorators=[{type:c.NgModule,args:[{declarations:[N],imports:[i.CommonModule,r.FormsModule,o.InputGroupModule,a.DatalistModule],exports:[N]}]}],a=q;function q(){}A.decorators=[{type:c.NgModule,args:[{declarations:[j,M,D,f,y,v,I,V,O,T],imports:[i.CommonModule,r.FormsModule,t.PopoverModule,a,n.NotifyModule.forRoot(),s.ModalModule.forRoot(),m.FarrisDatePickerModule,l.ComboListModule,u.NumberSpinnerModule,h.PropertyEditorModule],exports:[j],entryComponents:[j,D,f,y,v,I,V,O]}]}],A.ctorParameters=function(){return[]},m=A;function A(){}l=function(){this.hide=!1,this.hideTitle=!1,this.enableCascade=!1},z.prototype.beforeOpenModal=function(){return new H},u=z;function z(){this.readonly=!1,this.visible=!0,this.isBigNumber=!1,this.refreshPanelAfterChanged=!1,this.multiSelectDataType="string",this.isExpand=!1,this.hideCascadeTitle=!1,this.showClearButton=!1}var H=function(){},h=function(){};e.PropertyPanelModule=m,e.PropertyType={string:"string","boolean":"boolean",number:"number",select:"select",boolOrExp:"boolOrExp",editableSelect:"editableSelect",multiSelect:"multiSelect",date:"date",datetime:"datetime",modal:"modal",cascade:"cascade",custom:"custom"},e.ElementPropertyConfig=l,e.PropertyEntity=u,e.BeforeOpenModalResult=H,e.PropertyChangeObject=h,e.TextboxPropertyComponent=f,e.NumberPropertyComponent=y,e.ModalPropertyComponent=V,e.DatePropertyComponent=I,e.CombolistPropertyComponent=v,e.UniformPropertyComponent=O,e.PropertyPanelComponent=j,e.ɵe=N,e.ɵd=a,e.ɵf=R,e.ɵc=T,e.ɵa=M,e.ɵb=D,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=farris-ide-property-panel.umd.min.js.map