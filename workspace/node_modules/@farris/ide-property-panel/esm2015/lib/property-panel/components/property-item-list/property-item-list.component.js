/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChildren, ViewEncapsulation } from '@angular/core';
import { ElementPropertyConfig } from '../../entity/property-entity';
import { FPropertyItemComponent } from '../farris-property-item/property-item.component';
import { PropertyItemComponent } from '../property-item/property-item.component';
export class PropertyItemListComponent {
    constructor() {
        // 属性值
        this.dynamicControl = false;
        this.valueChanged = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.triggerRefreshPanel = new EventEmitter();
    }
    /**
     * @param {?} simpleChanges
     * @return {?}
     */
    ngOnChanges(simpleChanges) {
        // 若分类下有propertyData，则取分类下的propertyData；否则取整体的propertyData
        if (this.category.propertyData && this.category.enableCascade) {
            this.data = this.category.propertyData;
        }
        else {
            this.data = this.propertyData;
        }
        this.adaptProperties();
    }
    /**
     * 适配属性
     * @private
     * @return {?}
     */
    adaptProperties() {
        this.category.properties.forEach((/**
         * @param {?} propItem
         * @return {?}
         */
        propItem => {
            if (propItem.propertyType === 'cascade') {
                this.cascadeValueStringify(propItem, this.data[propItem.propertyID]);
                if (Object.keys(propItem).indexOf('visible') < 0) {
                    propItem.visible = true;
                }
            }
        }));
    }
    /**
     * @return {?}
     */
    refresh() {
        // 若分类下有propertyData，则取分类下的propertyData；否则取整体的propertyData
        if (this.category.propertyData && this.category.enableCascade) {
            this.data = this.category.propertyData;
        }
        else {
            this.data = this.propertyData;
        }
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => item.refresh()));
        this.fitems.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => item.refresh()));
    }
    /**
     * 一般属性变更
     * @param {?} $event
     * @return {?}
     */
    _itemChanged($event) {
        const { changeObject } = $event;
        this.data[changeObject.propertyID] = changeObject.propertyValue;
        if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {
            this.category.setPropertyRelates(changeObject, this.data);
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => item.refresh()));
            this.fitems.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => item.refresh()));
        }
        changeObject.categoryId = this.category.categoryId;
        if (this.category.enableCascade) {
            changeObject.propertyPath = this.category.parentPropertyID;
        }
        this.valueChanged.emit(changeObject);
    }
    /**
     * 模态框数据变更（TODO:待优化，合并valueChange事件）
     * @param {?} $event
     * @return {?}
     */
    _submitModal($event) {
        const { changeObject, parameters } = $event;
        this.data[changeObject.propertyID] = changeObject.propertyValue;
        if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {
            this.category.setPropertyRelates(changeObject, this.data, parameters);
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => item.refresh()));
            this.fitems.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => item.refresh()));
        }
        changeObject.categoryId = this.category.categoryId;
        if (this.category.enableCascade) {
            changeObject.propertyPath = this.category.parentPropertyID;
        }
        this.submitModal.emit($event);
    }
    /**
     * 级联属性变更
     * @param {?} $event
     * @param {?} propItem
     * @return {?}
     */
    _cascadeitemChanged($event, propItem) {
        /** @type {?} */
        const parentPropertyID = propItem.propertyID;
        if (!parentPropertyID) {
            return;
        }
        const { changeObject } = $event;
        if (!this.data[parentPropertyID]) {
            this.data[parentPropertyID] = {};
        }
        this.data[parentPropertyID][changeObject.propertyID] = changeObject.propertyValue;
        changeObject.categoryId = this.category.categoryId;
        changeObject.parentPropertyID = changeObject.propertyPath = parentPropertyID;
        // 分类启用了级联，并且分类下有级联属性
        if (this.category.enableCascade) {
            changeObject.propertyPath = this.category.parentPropertyID + '.' + changeObject.parentPropertyID;
        }
        if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {
            this.category.setPropertyRelates(changeObject, this.data);
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => item.refresh()));
            this.fitems.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => item.refresh()));
        }
        this.cascadeValueStringify(propItem, this.data[parentPropertyID]);
        this.valueChanged.emit(changeObject);
    }
    /**
     * 级联模态框属性变更
     * @param {?} $event
     * @param {?} propItem
     * @return {?}
     */
    __cascadeitemSubmitModal($event, propItem) {
        /** @type {?} */
        const parentPropertyID = propItem.propertyID;
        if (!parentPropertyID) {
            return;
        }
        const { changeObject, parameters } = $event;
        if (!this.data[parentPropertyID]) {
            this.data[parentPropertyID] = {};
        }
        this.data[parentPropertyID][changeObject.propertyID] = changeObject.propertyValue;
        changeObject.categoryId = this.category.categoryId;
        changeObject.parentPropertyID = changeObject.propertyPath = parentPropertyID;
        // 分类启用了级联，并且分类下有级联属性
        if (this.category.enableCascade) {
            changeObject.propertyPath = this.category.parentPropertyID + '.' + changeObject.parentPropertyID;
        }
        if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {
            this.category.setPropertyRelates(changeObject, this.data, parameters);
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => item.refresh()));
            this.fitems.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => item.refresh()));
        }
        this.cascadeValueStringify(propItem, this.data[parentPropertyID]);
        this.submitModal.emit($event);
    }
    /**
     * 级联属性的汇总信息
     * @param {?} propItem
     * @param {?} valueObject
     * @return {?}
     */
    cascadeValueStringify(propItem, valueObject) {
        if (!propItem || !propItem.cascadeConfig) {
            return;
        }
        if (!valueObject) {
            propItem.cascadeSummary = '';
            return;
        }
        if (!propItem.cascadeConverter || !propItem.cascadeConverter.convertTo) {
            propItem.cascadeSummary = JSON.stringify(valueObject);
        }
        else {
            propItem.cascadeSummary = propItem.cascadeConverter.convertTo(valueObject, propItem.cascadeConfig);
        }
    }
    /**
     *  已废弃
     * @param {?} propItem
     * @return {?}
     */
    _checkCascadeVisible(propItem) {
        if (Object.keys(propItem).indexOf('visible') < 0) {
            return true;
        }
        else {
            return propItem.visible;
        }
    }
    /**
     * @return {?}
     */
    refreshPanel() {
        this.triggerRefreshPanel.emit();
    }
    /**
     * @param {?} index
     * @param {?} PropItem
     * @return {?}
     */
    trackByPropId(index, PropItem) {
        return PropItem.propertyID;
    }
}
PropertyItemListComponent.decorators = [
    { type: Component, args: [{
                selector: 'webide-property-item-list',
                template: "<div *ngFor=\"let propItem of category.properties; trackBy:trackByPropId\">\r\n    <!-- \u975E\u52A8\u6001\u521B\u5EFA-->\r\n    <ng-container *ngIf=\"!dynamicControl\">\r\n        <div *ngIf=\"propItem.propertyType != 'cascade'\" class=\"px-2\">\r\n            <webide-property-item (valueChanged)=\"_itemChanged($event)\" (submitModal)=\"_submitModal($event)\"\r\n                [elementValue]=\"data[propItem.propertyID]\" [elementConfig]=\"propItem\"\r\n                (triggerRefreshPanel)=\"refreshPanel()\"></webide-property-item>\r\n        </div>\r\n\r\n        <div class=\"farris-panel\" *ngIf=\"propItem.propertyType == 'cascade' && propItem.visible\">\r\n            <div class=\"propertyCascadeItem farris-panel-item card\">\r\n                <div class=\"card-header\" (click)=\"propItem.isExpand=!propItem.isExpand\">\r\n                    <div class=\"panel-item-title\">\r\n                        <div class=\"form-group farris-form-group\">\r\n                            <div class=\"f-section-formgroup-legend\">\r\n                                <div class=\"f-header px-0  col-form-label\" style=\"font-size: inherit;\">\r\n                                    <div class=\"f-title f-utils-fill\">{{propItem.propertyName}}</div>\r\n                                    <div class=\"f-toolbar\">\r\n                                        <button class=\"btn f-btn-collapse-expand f-btn-mx\"\r\n                                            [class.f-state-expand]=\"propItem.isExpand\"><span></span></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"farris-input-wrap\" *ngIf=\"!propItem.hideCascadeTitle\">\r\n                                <input type=\"input\" class=\"form-control form-control-sm\" readonly\r\n                                    [value]=\"propItem.cascadeSummary\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card-body\" [style.display]=\"propItem.isExpand?'block':'none'\">\r\n                    <div *ngFor=\"let cascadeItem of propItem.cascadeConfig\" class=\"px-2\">\r\n                        <webide-property-item (valueChanged)=\"_cascadeitemChanged($event,propItem)\"\r\n                            (submitModal)=\"__cascadeitemSubmitModal($event, propItem)\"\r\n                            [elementValue]=\"data[propItem.propertyID]?data[propItem.propertyID][cascadeItem.propertyID]:''\"\r\n                            [elementConfig]=\"cascadeItem\" (triggerRefreshPanel)=\"refreshPanel()\">\r\n                        </webide-property-item>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </ng-container>\r\n\r\n\r\n    <!-- \u52A8\u6001\u521B\u5EFA-->\r\n    <ng-container *ngIf=\"dynamicControl\">\r\n        <div *ngIf=\"propItem.propertyType !== 'cascade'\" class=\"px-2\">\r\n            <dynamic-property-item *ngIf=\"dynamicControl\" (valueChanged)=\"_itemChanged($event)\"\r\n                (submitModal)=\"_submitModal($event)\" [elementValue]=\"data[propItem.propertyID]\"\r\n                [elementConfig]=\"propItem\" (triggerRefreshPanel)=\"refreshPanel()\"></dynamic-property-item>\r\n        </div>\r\n\r\n        <div class=\"farris-panel\" *ngIf=\"propItem.propertyType === 'cascade'\">\r\n            <div class=\"propertyCascadeItem farris-panel-item card\" [hidden]=\"!propItem.visible\">\r\n                <div class=\"card-header\" (click)=\"propItem.isExpand=!propItem.isExpand\">\r\n                    <div class=\"panel-item-title\">\r\n                        <div class=\"form-group farris-form-group\">\r\n                            <div class=\"f-section-formgroup-legend\">\r\n                                <div class=\"f-header px-0  col-form-label\" style=\"font-size: inherit;\">\r\n                                    <div class=\"f-title f-utils-fill\">{{propItem.propertyName}}</div>\r\n                                    <div class=\"f-toolbar\">\r\n                                        <button class=\"btn f-btn-collapse-expand f-btn-mx\"\r\n                                            [class.f-state-expand]=\"propItem.isExpand\"><span></span></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"farris-input-wrap\" *ngIf=\"!propItem.hideCascadeTitle\">\r\n                                <input type=\"input\" class=\"form-control form-control-sm\" readonly\r\n                                    [value]=\"propItem.cascadeSummary\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card-body\" [hidden]=\"!propItem.isExpand\">\r\n                    <div *ngFor=\"let cascadeItem of propItem.cascadeConfig\" class=\"px-2\">\r\n\r\n                        <dynamic-property-item *ngIf=\"dynamicControl\"\r\n                            (valueChanged)=\"_cascadeitemChanged($event,propItem)\"\r\n                            (submitModal)=\"__cascadeitemSubmitModal($event, propItem)\"\r\n                            [elementValue]=\"data[propItem.propertyID]?data[propItem.propertyID][cascadeItem.propertyID]:''\"\r\n                            [elementConfig]=\"cascadeItem\" (triggerRefreshPanel)=\"refreshPanel()\">\r\n                        </dynamic-property-item>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n</div>\r\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".propertyCascadeItem{background-color:transparent!important;border:none!important}.propertyCascadeItem .card-header{background-color:transparent!important;padding:4px 12px!important;color:inherit!important}.propertyCascadeItem .card-header .panel-item-title{width:100%;position:relative;font-size:inherit!important}.propertyCascadeItem .card-header .panel-item-title .farris-input-wrap{margin-left:-5px;margin-right:-5px}.propertyCascadeItem .f-accordion-collapse,.propertyCascadeItem .f-accordion-expand{right:0;left:auto!important;top:6px;color:#6b94ec!important;position:absolute}.propertyCascadeItem .card-body{padding:3px 12px!important;background:rgba(255,255,255,.8);border-radius:8px;margin:4px 8px}"]
            }] }
];
/** @nocollapse */
PropertyItemListComponent.ctorParameters = () => [];
PropertyItemListComponent.propDecorators = {
    category: [{ type: Input }],
    propertyData: [{ type: Input }],
    dynamicControl: [{ type: Input }],
    valueChanged: [{ type: Output }],
    submitModal: [{ type: Output }],
    triggerRefreshPanel: [{ type: Output }],
    items: [{ type: ViewChildren, args: [PropertyItemComponent,] }],
    fitems: [{ type: ViewChildren, args: [FPropertyItemComponent,] }]
};
if (false) {
    /**
     * 某一分类下的属性配置
     * @type {?}
     */
    PropertyItemListComponent.prototype.category;
    /** @type {?} */
    PropertyItemListComponent.prototype.propertyData;
    /** @type {?} */
    PropertyItemListComponent.prototype.dynamicControl;
    /** @type {?} */
    PropertyItemListComponent.prototype.valueChanged;
    /** @type {?} */
    PropertyItemListComponent.prototype.submitModal;
    /** @type {?} */
    PropertyItemListComponent.prototype.triggerRefreshPanel;
    /** @type {?} */
    PropertyItemListComponent.prototype.items;
    /** @type {?} */
    PropertyItemListComponent.prototype.fitems;
    /** @type {?} */
    PropertyItemListComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,