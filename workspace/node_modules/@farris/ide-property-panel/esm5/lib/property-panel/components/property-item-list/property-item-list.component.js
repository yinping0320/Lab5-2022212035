/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChildren, ViewEncapsulation } from '@angular/core';
import { ElementPropertyConfig } from '../../entity/property-entity';
import { FPropertyItemComponent } from '../farris-property-item/property-item.component';
import { PropertyItemComponent } from '../property-item/property-item.component';
var PropertyItemListComponent = /** @class */ (function () {
    function PropertyItemListComponent() {
        // 属性值
        this.dynamicControl = false;
        this.valueChanged = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.triggerRefreshPanel = new EventEmitter();
    }
    /**
     * @param {?} simpleChanges
     * @return {?}
     */
    PropertyItemListComponent.prototype.ngOnChanges = /**
     * @param {?} simpleChanges
     * @return {?}
     */
    function (simpleChanges) {
        // 若分类下有propertyData，则取分类下的propertyData；否则取整体的propertyData
        if (this.category.propertyData && this.category.enableCascade) {
            this.data = this.category.propertyData;
        }
        else {
            this.data = this.propertyData;
        }
        this.adaptProperties();
    };
    /**
     * 适配属性
     */
    /**
     * 适配属性
     * @private
     * @return {?}
     */
    PropertyItemListComponent.prototype.adaptProperties = /**
     * 适配属性
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.category.properties.forEach((/**
         * @param {?} propItem
         * @return {?}
         */
        function (propItem) {
            if (propItem.propertyType === 'cascade') {
                _this.cascadeValueStringify(propItem, _this.data[propItem.propertyID]);
                if (Object.keys(propItem).indexOf('visible') < 0) {
                    propItem.visible = true;
                }
            }
        }));
    };
    /**
     * @return {?}
     */
    PropertyItemListComponent.prototype.refresh = /**
     * @return {?}
     */
    function () {
        // 若分类下有propertyData，则取分类下的propertyData；否则取整体的propertyData
        if (this.category.propertyData && this.category.enableCascade) {
            this.data = this.category.propertyData;
        }
        else {
            this.data = this.propertyData;
        }
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item.refresh(); }));
        this.fitems.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item.refresh(); }));
    };
    /**
     * 一般属性变更
     */
    /**
     * 一般属性变更
     * @param {?} $event
     * @return {?}
     */
    PropertyItemListComponent.prototype._itemChanged = /**
     * 一般属性变更
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        var changeObject = $event.changeObject;
        this.data[changeObject.propertyID] = changeObject.propertyValue;
        if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {
            this.category.setPropertyRelates(changeObject, this.data);
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.refresh(); }));
            this.fitems.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.refresh(); }));
        }
        changeObject.categoryId = this.category.categoryId;
        if (this.category.enableCascade) {
            changeObject.propertyPath = this.category.parentPropertyID;
        }
        this.valueChanged.emit(changeObject);
    };
    /**
     * 模态框数据变更（TODO:待优化，合并valueChange事件）
     */
    /**
     * 模态框数据变更（TODO:待优化，合并valueChange事件）
     * @param {?} $event
     * @return {?}
     */
    PropertyItemListComponent.prototype._submitModal = /**
     * 模态框数据变更（TODO:待优化，合并valueChange事件）
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        var changeObject = $event.changeObject, parameters = $event.parameters;
        this.data[changeObject.propertyID] = changeObject.propertyValue;
        if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {
            this.category.setPropertyRelates(changeObject, this.data, parameters);
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.refresh(); }));
            this.fitems.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.refresh(); }));
        }
        changeObject.categoryId = this.category.categoryId;
        if (this.category.enableCascade) {
            changeObject.propertyPath = this.category.parentPropertyID;
        }
        this.submitModal.emit($event);
    };
    /**
     * 级联属性变更
     */
    /**
     * 级联属性变更
     * @param {?} $event
     * @param {?} propItem
     * @return {?}
     */
    PropertyItemListComponent.prototype._cascadeitemChanged = /**
     * 级联属性变更
     * @param {?} $event
     * @param {?} propItem
     * @return {?}
     */
    function ($event, propItem) {
        /** @type {?} */
        var parentPropertyID = propItem.propertyID;
        if (!parentPropertyID) {
            return;
        }
        var changeObject = $event.changeObject;
        if (!this.data[parentPropertyID]) {
            this.data[parentPropertyID] = {};
        }
        this.data[parentPropertyID][changeObject.propertyID] = changeObject.propertyValue;
        changeObject.categoryId = this.category.categoryId;
        changeObject.parentPropertyID = changeObject.propertyPath = parentPropertyID;
        // 分类启用了级联，并且分类下有级联属性
        if (this.category.enableCascade) {
            changeObject.propertyPath = this.category.parentPropertyID + '.' + changeObject.parentPropertyID;
        }
        if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {
            this.category.setPropertyRelates(changeObject, this.data);
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.refresh(); }));
            this.fitems.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.refresh(); }));
        }
        this.cascadeValueStringify(propItem, this.data[parentPropertyID]);
        this.valueChanged.emit(changeObject);
    };
    /**
     * 级联模态框属性变更
     */
    /**
     * 级联模态框属性变更
     * @param {?} $event
     * @param {?} propItem
     * @return {?}
     */
    PropertyItemListComponent.prototype.__cascadeitemSubmitModal = /**
     * 级联模态框属性变更
     * @param {?} $event
     * @param {?} propItem
     * @return {?}
     */
    function ($event, propItem) {
        /** @type {?} */
        var parentPropertyID = propItem.propertyID;
        if (!parentPropertyID) {
            return;
        }
        var changeObject = $event.changeObject, parameters = $event.parameters;
        if (!this.data[parentPropertyID]) {
            this.data[parentPropertyID] = {};
        }
        this.data[parentPropertyID][changeObject.propertyID] = changeObject.propertyValue;
        changeObject.categoryId = this.category.categoryId;
        changeObject.parentPropertyID = changeObject.propertyPath = parentPropertyID;
        // 分类启用了级联，并且分类下有级联属性
        if (this.category.enableCascade) {
            changeObject.propertyPath = this.category.parentPropertyID + '.' + changeObject.parentPropertyID;
        }
        if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {
            this.category.setPropertyRelates(changeObject, this.data, parameters);
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.refresh(); }));
            this.fitems.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.refresh(); }));
        }
        this.cascadeValueStringify(propItem, this.data[parentPropertyID]);
        this.submitModal.emit($event);
    };
    /**
     * 级联属性的汇总信息
     * @param propItem
     * @param valueObject
     */
    /**
     * 级联属性的汇总信息
     * @param {?} propItem
     * @param {?} valueObject
     * @return {?}
     */
    PropertyItemListComponent.prototype.cascadeValueStringify = /**
     * 级联属性的汇总信息
     * @param {?} propItem
     * @param {?} valueObject
     * @return {?}
     */
    function (propItem, valueObject) {
        if (!propItem || !propItem.cascadeConfig) {
            return;
        }
        if (!valueObject) {
            propItem.cascadeSummary = '';
            return;
        }
        if (!propItem.cascadeConverter || !propItem.cascadeConverter.convertTo) {
            propItem.cascadeSummary = JSON.stringify(valueObject);
        }
        else {
            propItem.cascadeSummary = propItem.cascadeConverter.convertTo(valueObject, propItem.cascadeConfig);
        }
    };
    /**
     *  已废弃
     */
    /**
     *  已废弃
     * @param {?} propItem
     * @return {?}
     */
    PropertyItemListComponent.prototype._checkCascadeVisible = /**
     *  已废弃
     * @param {?} propItem
     * @return {?}
     */
    function (propItem) {
        if (Object.keys(propItem).indexOf('visible') < 0) {
            return true;
        }
        else {
            return propItem.visible;
        }
    };
    /**
     * @return {?}
     */
    PropertyItemListComponent.prototype.refreshPanel = /**
     * @return {?}
     */
    function () {
        this.triggerRefreshPanel.emit();
    };
    /**
     * @param {?} index
     * @param {?} PropItem
     * @return {?}
     */
    PropertyItemListComponent.prototype.trackByPropId = /**
     * @param {?} index
     * @param {?} PropItem
     * @return {?}
     */
    function (index, PropItem) {
        return PropItem.propertyID;
    };
    PropertyItemListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'webide-property-item-list',
                    template: "<div *ngFor=\"let propItem of category.properties; trackBy:trackByPropId\">\r\n    <!-- \u975E\u52A8\u6001\u521B\u5EFA-->\r\n    <ng-container *ngIf=\"!dynamicControl\">\r\n        <div *ngIf=\"propItem.propertyType != 'cascade'\" class=\"px-2\">\r\n            <webide-property-item (valueChanged)=\"_itemChanged($event)\" (submitModal)=\"_submitModal($event)\"\r\n                [elementValue]=\"data[propItem.propertyID]\" [elementConfig]=\"propItem\"\r\n                (triggerRefreshPanel)=\"refreshPanel()\"></webide-property-item>\r\n        </div>\r\n\r\n        <div class=\"farris-panel\" *ngIf=\"propItem.propertyType == 'cascade' && propItem.visible\">\r\n            <div class=\"propertyCascadeItem farris-panel-item card\">\r\n                <div class=\"card-header\" (click)=\"propItem.isExpand=!propItem.isExpand\">\r\n                    <div class=\"panel-item-title\">\r\n                        <div class=\"form-group farris-form-group\">\r\n                            <div class=\"f-section-formgroup-legend\">\r\n                                <div class=\"f-header px-0  col-form-label\" style=\"font-size: inherit;\">\r\n                                    <div class=\"f-title f-utils-fill\">{{propItem.propertyName}}</div>\r\n                                    <div class=\"f-toolbar\">\r\n                                        <button class=\"btn f-btn-collapse-expand f-btn-mx\"\r\n                                            [class.f-state-expand]=\"propItem.isExpand\"><span></span></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"farris-input-wrap\" *ngIf=\"!propItem.hideCascadeTitle\">\r\n                                <input type=\"input\" class=\"form-control form-control-sm\" readonly\r\n                                    [value]=\"propItem.cascadeSummary\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card-body\" [style.display]=\"propItem.isExpand?'block':'none'\">\r\n                    <div *ngFor=\"let cascadeItem of propItem.cascadeConfig\" class=\"px-2\">\r\n                        <webide-property-item (valueChanged)=\"_cascadeitemChanged($event,propItem)\"\r\n                            (submitModal)=\"__cascadeitemSubmitModal($event, propItem)\"\r\n                            [elementValue]=\"data[propItem.propertyID]?data[propItem.propertyID][cascadeItem.propertyID]:''\"\r\n                            [elementConfig]=\"cascadeItem\" (triggerRefreshPanel)=\"refreshPanel()\">\r\n                        </webide-property-item>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </ng-container>\r\n\r\n\r\n    <!-- \u52A8\u6001\u521B\u5EFA-->\r\n    <ng-container *ngIf=\"dynamicControl\">\r\n        <div *ngIf=\"propItem.propertyType !== 'cascade'\" class=\"px-2\">\r\n            <dynamic-property-item *ngIf=\"dynamicControl\" (valueChanged)=\"_itemChanged($event)\"\r\n                (submitModal)=\"_submitModal($event)\" [elementValue]=\"data[propItem.propertyID]\"\r\n                [elementConfig]=\"propItem\" (triggerRefreshPanel)=\"refreshPanel()\"></dynamic-property-item>\r\n        </div>\r\n\r\n        <div class=\"farris-panel\" *ngIf=\"propItem.propertyType === 'cascade'\">\r\n            <div class=\"propertyCascadeItem farris-panel-item card\" [hidden]=\"!propItem.visible\">\r\n                <div class=\"card-header\" (click)=\"propItem.isExpand=!propItem.isExpand\">\r\n                    <div class=\"panel-item-title\">\r\n                        <div class=\"form-group farris-form-group\">\r\n                            <div class=\"f-section-formgroup-legend\">\r\n                                <div class=\"f-header px-0  col-form-label\" style=\"font-size: inherit;\">\r\n                                    <div class=\"f-title f-utils-fill\">{{propItem.propertyName}}</div>\r\n                                    <div class=\"f-toolbar\">\r\n                                        <button class=\"btn f-btn-collapse-expand f-btn-mx\"\r\n                                            [class.f-state-expand]=\"propItem.isExpand\"><span></span></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"farris-input-wrap\" *ngIf=\"!propItem.hideCascadeTitle\">\r\n                                <input type=\"input\" class=\"form-control form-control-sm\" readonly\r\n                                    [value]=\"propItem.cascadeSummary\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card-body\" [hidden]=\"!propItem.isExpand\">\r\n                    <div *ngFor=\"let cascadeItem of propItem.cascadeConfig\" class=\"px-2\">\r\n\r\n                        <dynamic-property-item *ngIf=\"dynamicControl\"\r\n                            (valueChanged)=\"_cascadeitemChanged($event,propItem)\"\r\n                            (submitModal)=\"__cascadeitemSubmitModal($event, propItem)\"\r\n                            [elementValue]=\"data[propItem.propertyID]?data[propItem.propertyID][cascadeItem.propertyID]:''\"\r\n                            [elementConfig]=\"cascadeItem\" (triggerRefreshPanel)=\"refreshPanel()\">\r\n                        </dynamic-property-item>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n</div>\r\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: [".propertyCascadeItem{background-color:transparent!important;border:none!important}.propertyCascadeItem .card-header{background-color:transparent!important;padding:4px 12px!important;color:inherit!important}.propertyCascadeItem .card-header .panel-item-title{width:100%;position:relative;font-size:inherit!important}.propertyCascadeItem .card-header .panel-item-title .farris-input-wrap{margin-left:-5px;margin-right:-5px}.propertyCascadeItem .f-accordion-collapse,.propertyCascadeItem .f-accordion-expand{right:0;left:auto!important;top:6px;color:#6b94ec!important;position:absolute}.propertyCascadeItem .card-body{padding:3px 12px!important;background:rgba(255,255,255,.8);border-radius:8px;margin:4px 8px}"]
                }] }
    ];
    /** @nocollapse */
    PropertyItemListComponent.ctorParameters = function () { return []; };
    PropertyItemListComponent.propDecorators = {
        category: [{ type: Input }],
        propertyData: [{ type: Input }],
        dynamicControl: [{ type: Input }],
        valueChanged: [{ type: Output }],
        submitModal: [{ type: Output }],
        triggerRefreshPanel: [{ type: Output }],
        items: [{ type: ViewChildren, args: [PropertyItemComponent,] }],
        fitems: [{ type: ViewChildren, args: [FPropertyItemComponent,] }]
    };
    return PropertyItemListComponent;
}());
export { PropertyItemListComponent };
if (false) {
    /**
     * 某一分类下的属性配置
     * @type {?}
     */
    PropertyItemListComponent.prototype.category;
    /** @type {?} */
    PropertyItemListComponent.prototype.propertyData;
    /** @type {?} */
    PropertyItemListComponent.prototype.dynamicControl;
    /** @type {?} */
    PropertyItemListComponent.prototype.valueChanged;
    /** @type {?} */
    PropertyItemListComponent.prototype.submitModal;
    /** @type {?} */
    PropertyItemListComponent.prototype.triggerRefreshPanel;
    /** @type {?} */
    PropertyItemListComponent.prototype.items;
    /** @type {?} */
    PropertyItemListComponent.prototype.fitems;
    /** @type {?} */
    PropertyItemListComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcGVydHktaXRlbS1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvaWRlLXByb3BlcnR5LXBhbmVsLyIsInNvdXJjZXMiOlsibGliL3Byb3BlcnR5LXBhbmVsL2NvbXBvbmVudHMvcHJvcGVydHktaXRlbS1saXN0L3Byb3BlcnR5LWl0ZW0tbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUE0QixpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsSSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUN6RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUVqRjtJQXVCRTs7UUFaUyxtQkFBYyxHQUFHLEtBQUssQ0FBQztRQUV0QixpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDdkMsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ3RDLHdCQUFtQixHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFReEMsQ0FBQzs7Ozs7SUFFakIsK0NBQVc7Ozs7SUFBWCxVQUFZLGFBQTRCO1FBQ3RDLDBEQUEwRDtRQUMxRCxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxFQUFFO1lBQzdELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUM7U0FDeEM7YUFBTTtZQUNMLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztTQUMvQjtRQUVELElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUV6QixDQUFDO0lBQ0Q7O09B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Q0FBQyxVQUFVLENBQUM7SUFDN0IsQ0FBQzs7Z0JBaE5GLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsMkJBQTJCO29CQUNyQywrb0xBQWtEO29CQUVsRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7aUJBRXRDOzs7OzsyQkFHRSxLQUFLOytCQUNMLEtBQUs7aUNBQ0wsS0FBSzsrQkFFTCxNQUFNOzhCQUNOLE1BQU07c0NBQ04sTUFBTTt3QkFFTixZQUFZLFNBQUMscUJBQXFCO3lCQUNsQyxZQUFZLFNBQUMsc0JBQXNCOztJQWdNdEMsZ0NBQUM7Q0FBQSxBQWxORCxJQWtOQztTQTNNWSx5QkFBeUI7Ozs7OztJQUVwQyw2Q0FBeUM7O0lBQ3pDLGlEQUFzQjs7SUFDdEIsbURBQWdDOztJQUVoQyxpREFBaUQ7O0lBQ2pELGdEQUFnRDs7SUFDaEQsd0RBQXdEOztJQUV4RCwwQ0FBeUU7O0lBQ3pFLDJDQUE0RTs7SUFHNUUseUNBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgVmlld0NoaWxkcmVuLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEVsZW1lbnRQcm9wZXJ0eUNvbmZpZyB9IGZyb20gJy4uLy4uL2VudGl0eS9wcm9wZXJ0eS1lbnRpdHknO1xyXG5pbXBvcnQgeyBGUHJvcGVydHlJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi4vZmFycmlzLXByb3BlcnR5LWl0ZW0vcHJvcGVydHktaXRlbS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQcm9wZXJ0eUl0ZW1Db21wb25lbnQgfSBmcm9tICcuLi9wcm9wZXJ0eS1pdGVtL3Byb3BlcnR5LWl0ZW0uY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnd2ViaWRlLXByb3BlcnR5LWl0ZW0tbGlzdCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3Byb3BlcnR5LWl0ZW0tbGlzdC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vcHJvcGVydHktaXRlbS1saXN0LmNvbXBvbmVudC5jc3MnXSxcclxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXHJcblxyXG59KVxyXG5leHBvcnQgY2xhc3MgUHJvcGVydHlJdGVtTGlzdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XHJcbiAgLyoqIOafkOS4gOWIhuexu+S4i+eahOWxnuaAp+mFjee9riAqL1xyXG4gIEBJbnB1dCgpIGNhdGVnb3J5OiBFbGVtZW50UHJvcGVydHlDb25maWc7XHJcbiAgQElucHV0KCkgcHJvcGVydHlEYXRhOyAvLyDlsZ7mgKflgLxcclxuICBASW5wdXQoKSBkeW5hbWljQ29udHJvbCA9IGZhbHNlO1xyXG5cclxuICBAT3V0cHV0KCkgdmFsdWVDaGFuZ2VkID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcbiAgQE91dHB1dCgpIHN1Ym1pdE1vZGFsID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcbiAgQE91dHB1dCgpIHRyaWdnZXJSZWZyZXNoUGFuZWwgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuXHJcbiAgQFZpZXdDaGlsZHJlbihQcm9wZXJ0eUl0ZW1Db21wb25lbnQpIGl0ZW1zOiBBcnJheTxQcm9wZXJ0eUl0ZW1Db21wb25lbnQ+O1xyXG4gIEBWaWV3Q2hpbGRyZW4oRlByb3BlcnR5SXRlbUNvbXBvbmVudCkgZml0ZW1zOiBBcnJheTxGUHJvcGVydHlJdGVtQ29tcG9uZW50PjtcclxuXHJcbiAgLy8g5a6e6ZmF5bGe5oCn5YC8XHJcbiAgZGF0YTtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoc2ltcGxlQ2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgLy8g6Iul5YiG57G75LiL5pyJcHJvcGVydHlEYXRh77yM5YiZ5Y+W5YiG57G75LiL55qEcHJvcGVydHlEYXRh77yb5ZCm5YiZ5Y+W5pW05L2T55qEcHJvcGVydHlEYXRhXHJcbiAgICBpZiAodGhpcy5jYXRlZ29yeS5wcm9wZXJ0eURhdGEgJiYgdGhpcy5jYXRlZ29yeS5lbmFibGVDYXNjYWRlKSB7XHJcbiAgICAgIHRoaXMuZGF0YSA9IHRoaXMuY2F0ZWdvcnkucHJvcGVydHlEYXRhO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5kYXRhID0gdGhpcy5wcm9wZXJ0eURhdGE7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5hZGFwdFByb3BlcnRpZXMoKTtcclxuXHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOmAgumFjeWxnuaAp1xyXG4gICAqL1xyXG4gIHByaXZhdGUgYWRhcHRQcm9wZXJ0aWVzKCkge1xyXG4gICAgdGhpcy5jYXRlZ29yeS5wcm9wZXJ0aWVzLmZvckVhY2gocHJvcEl0ZW0gPT4ge1xyXG4gICAgICBpZiAocHJvcEl0ZW0ucHJvcGVydHlUeXBlID09PSAnY2FzY2FkZScpIHtcclxuICAgICAgICB0aGlzLmNhc2NhZGVWYWx1ZVN0cmluZ2lmeShwcm9wSXRlbSwgdGhpcy5kYXRhW3Byb3BJdGVtLnByb3BlcnR5SURdKTtcclxuICAgICAgICBpZiAoT2JqZWN0LmtleXMocHJvcEl0ZW0pLmluZGV4T2YoJ3Zpc2libGUnKSA8IDApIHtcclxuICAgICAgICAgIHByb3BJdGVtLnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgIH0pO1xyXG4gIH1cclxuICByZWZyZXNoKCkge1xyXG4gICAgLy8g6Iul5YiG57G75LiL5pyJcHJvcGVydHlEYXRh77yM5YiZ5Y+W5YiG57G75LiL55qEcHJvcGVydHlEYXRh77yb5ZCm5YiZ5Y+W5pW05L2T55qEcHJvcGVydHlEYXRhXHJcbiAgICBpZiAodGhpcy5jYXRlZ29yeS5wcm9wZXJ0eURhdGEgJiYgdGhpcy5jYXRlZ29yeS5lbmFibGVDYXNjYWRlKSB7XHJcbiAgICAgIHRoaXMuZGF0YSA9IHRoaXMuY2F0ZWdvcnkucHJvcGVydHlEYXRhO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5kYXRhID0gdGhpcy5wcm9wZXJ0eURhdGE7XHJcbiAgICB9XHJcbiAgICB0aGlzLml0ZW1zLmZvckVhY2goaXRlbSA9PiBpdGVtLnJlZnJlc2goKSk7XHJcbiAgICB0aGlzLmZpdGVtcy5mb3JFYWNoKGl0ZW0gPT4gaXRlbS5yZWZyZXNoKCkpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5LiA6Iis5bGe5oCn5Y+Y5pu0XHJcbiAgICovXHJcbiAgX2l0ZW1DaGFuZ2VkKCRldmVudCkge1xyXG4gICAgY29uc3QgeyBjaGFuZ2VPYmplY3QgfSA9ICRldmVudDtcclxuICAgIHRoaXMuZGF0YVtjaGFuZ2VPYmplY3QucHJvcGVydHlJRF0gPSBjaGFuZ2VPYmplY3QucHJvcGVydHlWYWx1ZTtcclxuXHJcbiAgICBpZiAodGhpcy5jYXRlZ29yeS5zZXRQcm9wZXJ0eVJlbGF0ZXMgJiYgdHlwZW9mICh0aGlzLmNhdGVnb3J5LnNldFByb3BlcnR5UmVsYXRlcykgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgdGhpcy5jYXRlZ29yeS5zZXRQcm9wZXJ0eVJlbGF0ZXMoY2hhbmdlT2JqZWN0LCB0aGlzLmRhdGEpO1xyXG4gICAgICB0aGlzLml0ZW1zLmZvckVhY2goaXRlbSA9PiBpdGVtLnJlZnJlc2goKSk7XHJcbiAgICAgIHRoaXMuZml0ZW1zLmZvckVhY2goaXRlbSA9PiBpdGVtLnJlZnJlc2goKSk7XHJcbiAgICB9XHJcbiAgICBjaGFuZ2VPYmplY3QuY2F0ZWdvcnlJZCA9IHRoaXMuY2F0ZWdvcnkuY2F0ZWdvcnlJZDtcclxuXHJcbiAgICBpZiAodGhpcy5jYXRlZ29yeS5lbmFibGVDYXNjYWRlKSB7XHJcbiAgICAgIGNoYW5nZU9iamVjdC5wcm9wZXJ0eVBhdGggPSB0aGlzLmNhdGVnb3J5LnBhcmVudFByb3BlcnR5SUQ7XHJcbiAgICB9XHJcbiAgICB0aGlzLnZhbHVlQ2hhbmdlZC5lbWl0KGNoYW5nZU9iamVjdCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmqKHmgIHmoYbmlbDmja7lj5jmm7TvvIhUT0RPOuW+heS8mOWMlu+8jOWQiOW5tnZhbHVlQ2hhbmdl5LqL5Lu277yJXHJcbiAgICovXHJcbiAgX3N1Ym1pdE1vZGFsKCRldmVudCkge1xyXG4gICAgY29uc3QgeyBjaGFuZ2VPYmplY3QsIHBhcmFtZXRlcnMgfSA9ICRldmVudDtcclxuICAgIHRoaXMuZGF0YVtjaGFuZ2VPYmplY3QucHJvcGVydHlJRF0gPSBjaGFuZ2VPYmplY3QucHJvcGVydHlWYWx1ZTtcclxuXHJcbiAgICBpZiAodGhpcy5jYXRlZ29yeS5zZXRQcm9wZXJ0eVJlbGF0ZXMgJiYgdHlwZW9mICh0aGlzLmNhdGVnb3J5LnNldFByb3BlcnR5UmVsYXRlcykgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgdGhpcy5jYXRlZ29yeS5zZXRQcm9wZXJ0eVJlbGF0ZXMoY2hhbmdlT2JqZWN0LCB0aGlzLmRhdGEsIHBhcmFtZXRlcnMpO1xyXG4gICAgICB0aGlzLml0ZW1zLmZvckVhY2goaXRlbSA9PiBpdGVtLnJlZnJlc2goKSk7XHJcbiAgICAgIHRoaXMuZml0ZW1zLmZvckVhY2goaXRlbSA9PiBpdGVtLnJlZnJlc2goKSk7XHJcbiAgICB9XHJcblxyXG4gICAgY2hhbmdlT2JqZWN0LmNhdGVnb3J5SWQgPSB0aGlzLmNhdGVnb3J5LmNhdGVnb3J5SWQ7XHJcbiAgICBpZiAodGhpcy5jYXRlZ29yeS5lbmFibGVDYXNjYWRlKSB7XHJcbiAgICAgIGNoYW5nZU9iamVjdC5wcm9wZXJ0eVBhdGggPSB0aGlzLmNhdGVnb3J5LnBhcmVudFByb3BlcnR5SUQ7XHJcbiAgICB9XHJcbiAgICB0aGlzLnN1Ym1pdE1vZGFsLmVtaXQoJGV2ZW50KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOe6p+iBlOWxnuaAp+WPmOabtFxyXG4gICAqL1xyXG4gIF9jYXNjYWRlaXRlbUNoYW5nZWQoJGV2ZW50LCBwcm9wSXRlbSkge1xyXG4gICAgY29uc3QgcGFyZW50UHJvcGVydHlJRCA9IHByb3BJdGVtLnByb3BlcnR5SUQ7XHJcbiAgICBpZiAoIXBhcmVudFByb3BlcnR5SUQpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgY29uc3QgeyBjaGFuZ2VPYmplY3QgfSA9ICRldmVudDtcclxuICAgIGlmICghdGhpcy5kYXRhW3BhcmVudFByb3BlcnR5SURdKSB7XHJcbiAgICAgIHRoaXMuZGF0YVtwYXJlbnRQcm9wZXJ0eUlEXSA9IHt9O1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZGF0YVtwYXJlbnRQcm9wZXJ0eUlEXVtjaGFuZ2VPYmplY3QucHJvcGVydHlJRF0gPSBjaGFuZ2VPYmplY3QucHJvcGVydHlWYWx1ZTtcclxuXHJcbiAgICBjaGFuZ2VPYmplY3QuY2F0ZWdvcnlJZCA9IHRoaXMuY2F0ZWdvcnkuY2F0ZWdvcnlJZDtcclxuXHJcbiAgICBjaGFuZ2VPYmplY3QucGFyZW50UHJvcGVydHlJRCA9IGNoYW5nZU9iamVjdC5wcm9wZXJ0eVBhdGggPSBwYXJlbnRQcm9wZXJ0eUlEO1xyXG4gICAgLy8g5YiG57G75ZCv55So5LqG57qn6IGU77yM5bm25LiU5YiG57G75LiL5pyJ57qn6IGU5bGe5oCnXHJcbiAgICBpZiAodGhpcy5jYXRlZ29yeS5lbmFibGVDYXNjYWRlKSB7XHJcbiAgICAgIGNoYW5nZU9iamVjdC5wcm9wZXJ0eVBhdGggPSB0aGlzLmNhdGVnb3J5LnBhcmVudFByb3BlcnR5SUQgKyAnLicgKyBjaGFuZ2VPYmplY3QucGFyZW50UHJvcGVydHlJRDtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodGhpcy5jYXRlZ29yeS5zZXRQcm9wZXJ0eVJlbGF0ZXMgJiYgdHlwZW9mICh0aGlzLmNhdGVnb3J5LnNldFByb3BlcnR5UmVsYXRlcykgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgdGhpcy5jYXRlZ29yeS5zZXRQcm9wZXJ0eVJlbGF0ZXMoY2hhbmdlT2JqZWN0LCB0aGlzLmRhdGEpO1xyXG4gICAgICB0aGlzLml0ZW1zLmZvckVhY2goaXRlbSA9PiBpdGVtLnJlZnJlc2goKSk7XHJcbiAgICAgIHRoaXMuZml0ZW1zLmZvckVhY2goaXRlbSA9PiBpdGVtLnJlZnJlc2goKSk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5jYXNjYWRlVmFsdWVTdHJpbmdpZnkocHJvcEl0ZW0sIHRoaXMuZGF0YVtwYXJlbnRQcm9wZXJ0eUlEXSk7XHJcbiAgICB0aGlzLnZhbHVlQ2hhbmdlZC5lbWl0KGNoYW5nZU9iamVjdCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDnuqfogZTmqKHmgIHmoYblsZ7mgKflj5jmm7RcclxuICAgKi9cclxuICBfX2Nhc2NhZGVpdGVtU3VibWl0TW9kYWwoJGV2ZW50LCBwcm9wSXRlbSkge1xyXG4gICAgY29uc3QgcGFyZW50UHJvcGVydHlJRCA9IHByb3BJdGVtLnByb3BlcnR5SUQ7XHJcbiAgICBpZiAoIXBhcmVudFByb3BlcnR5SUQpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgY29uc3QgeyBjaGFuZ2VPYmplY3QsIHBhcmFtZXRlcnMgfSA9ICRldmVudDtcclxuICAgIGlmICghdGhpcy5kYXRhW3BhcmVudFByb3BlcnR5SURdKSB7XHJcbiAgICAgIHRoaXMuZGF0YVtwYXJlbnRQcm9wZXJ0eUlEXSA9IHt9O1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZGF0YVtwYXJlbnRQcm9wZXJ0eUlEXVtjaGFuZ2VPYmplY3QucHJvcGVydHlJRF0gPSBjaGFuZ2VPYmplY3QucHJvcGVydHlWYWx1ZTtcclxuXHJcbiAgICBjaGFuZ2VPYmplY3QuY2F0ZWdvcnlJZCA9IHRoaXMuY2F0ZWdvcnkuY2F0ZWdvcnlJZDtcclxuXHJcbiAgICBjaGFuZ2VPYmplY3QucGFyZW50UHJvcGVydHlJRCA9IGNoYW5nZU9iamVjdC5wcm9wZXJ0eVBhdGggPSBwYXJlbnRQcm9wZXJ0eUlEO1xyXG4gICAgLy8g5YiG57G75ZCv55So5LqG57qn6IGU77yM5bm25LiU5YiG57G75LiL5pyJ57qn6IGU5bGe5oCnXHJcbiAgICBpZiAodGhpcy5jYXRlZ29yeS5lbmFibGVDYXNjYWRlKSB7XHJcbiAgICAgIGNoYW5nZU9iamVjdC5wcm9wZXJ0eVBhdGggPSB0aGlzLmNhdGVnb3J5LnBhcmVudFByb3BlcnR5SUQgKyAnLicgKyBjaGFuZ2VPYmplY3QucGFyZW50UHJvcGVydHlJRDtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodGhpcy5jYXRlZ29yeS5zZXRQcm9wZXJ0eVJlbGF0ZXMgJiYgdHlwZW9mICh0aGlzLmNhdGVnb3J5LnNldFByb3BlcnR5UmVsYXRlcykgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgdGhpcy5jYXRlZ29yeS5zZXRQcm9wZXJ0eVJlbGF0ZXMoY2hhbmdlT2JqZWN0LCB0aGlzLmRhdGEsIHBhcmFtZXRlcnMpO1xyXG4gICAgICB0aGlzLml0ZW1zLmZvckVhY2goaXRlbSA9PiBpdGVtLnJlZnJlc2goKSk7XHJcbiAgICAgIHRoaXMuZml0ZW1zLmZvckVhY2goaXRlbSA9PiBpdGVtLnJlZnJlc2goKSk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5jYXNjYWRlVmFsdWVTdHJpbmdpZnkocHJvcEl0ZW0sIHRoaXMuZGF0YVtwYXJlbnRQcm9wZXJ0eUlEXSk7XHJcblxyXG4gICAgdGhpcy5zdWJtaXRNb2RhbC5lbWl0KCRldmVudCk7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOe6p+iBlOWxnuaAp+eahOaxh+aAu+S/oeaBr1xyXG4gICAqIEBwYXJhbSBwcm9wSXRlbVxyXG4gICAqIEBwYXJhbSB2YWx1ZU9iamVjdFxyXG4gICAqL1xyXG4gIGNhc2NhZGVWYWx1ZVN0cmluZ2lmeShwcm9wSXRlbSwgdmFsdWVPYmplY3QpIHtcclxuICAgIGlmICghcHJvcEl0ZW0gfHwgIXByb3BJdGVtLmNhc2NhZGVDb25maWcpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKCF2YWx1ZU9iamVjdCkge1xyXG4gICAgICBwcm9wSXRlbS5jYXNjYWRlU3VtbWFyeSA9ICcnO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAoIXByb3BJdGVtLmNhc2NhZGVDb252ZXJ0ZXIgfHwgIXByb3BJdGVtLmNhc2NhZGVDb252ZXJ0ZXIuY29udmVydFRvKSB7XHJcbiAgICAgIHByb3BJdGVtLmNhc2NhZGVTdW1tYXJ5ID0gSlNPTi5zdHJpbmdpZnkodmFsdWVPYmplY3QpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcHJvcEl0ZW0uY2FzY2FkZVN1bW1hcnkgPSBwcm9wSXRlbS5jYXNjYWRlQ29udmVydGVyLmNvbnZlcnRUbyh2YWx1ZU9iamVjdCwgcHJvcEl0ZW0uY2FzY2FkZUNvbmZpZyk7XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiAg5bey5bqf5byDXHJcbiAgICovXHJcbiAgX2NoZWNrQ2FzY2FkZVZpc2libGUocHJvcEl0ZW0pIHtcclxuICAgIGlmIChPYmplY3Qua2V5cyhwcm9wSXRlbSkuaW5kZXhPZigndmlzaWJsZScpIDwgMCkge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBwcm9wSXRlbS52aXNpYmxlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG4gIHJlZnJlc2hQYW5lbCgpIHtcclxuICAgIHRoaXMudHJpZ2dlclJlZnJlc2hQYW5lbC5lbWl0KCk7XHJcbiAgfVxyXG5cclxuICB0cmFja0J5UHJvcElkKGluZGV4OiBudW1iZXIsIFByb3BJdGVtOiBhbnkpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIFByb3BJdGVtLnByb3BlcnR5SUQ7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=