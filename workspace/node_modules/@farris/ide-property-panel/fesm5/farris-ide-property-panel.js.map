{"version":3,"file":"farris-ide-property-panel.js.map","sources":["ng://@farris/ide-property-panel/lib/property-panel/entity/property-entity.ts","ng://@farris/ide-property-panel/lib/property-panel/controls/textbox.component.ts","ng://@farris/ide-property-panel/lib/property-panel/controls/number.component.ts","ng://@farris/ide-property-panel/lib/property-panel/controls/combolist.component.ts","ng://@farris/ide-property-panel/lib/property-panel/controls/date.component.ts","ng://@farris/ide-property-panel/lib/property-panel/controls/modal.component.ts","ng://@farris/ide-property-panel/lib/property-panel/controls/unity.component.ts","ng://@farris/ide-property-panel/lib/property-panel/components/farris-property-item/property-item.component.ts","ng://@farris/ide-property-panel/lib/property-panel/components/property-item/property-item.component.ts","ng://@farris/ide-property-panel/lib/property-panel/components/property-item-list/property-item-list.component.ts","ng://@farris/ide-property-panel/lib/property-panel/components/property-panel/property-panel.component.ts","ng://@farris/ide-property-panel/lib/combo-list/combo.service.ts","ng://@farris/ide-property-panel/lib/combo-list/combo-list.component.ts","ng://@farris/ide-property-panel/lib/combo-list/combo-list.module.ts","ng://@farris/ide-property-panel/lib/property-panel/property-panel.module.ts"],"sourcesContent":["import { Type } from '@angular/core';\r\n\r\n/**\r\n * å±æ§ç±»å\r\n */\r\nexport enum PropertyType {\r\n    /** å­ç¬¦ä¸² */\r\n    string = 'string',\r\n\r\n    /** å¸å°ï¼ä¸æéæ© */\r\n    boolean = 'boolean',\r\n\r\n    /** æ°å­ */\r\n    number = 'number',\r\n\r\n    /** ä¸æéæ©ï¼åé */\r\n    select = 'select',\r\n\r\n    /** å·²åºå¼ï¼è¯·ä½¿ç¨editableSelect */\r\n    boolOrExp = 'boolOrExp',\r\n\r\n    /** å¯ç¼è¾çä¸æéæ©ï¼åéï¼å¹¶ä¸å¯ç¼è¾ */\r\n    editableSelect = 'editableSelect',\r\n\r\n    /** ä¸æå¤é */\r\n    multiSelect = 'multiSelect',\r\n\r\n    /** æ¥æ */\r\n    date = 'date',\r\n\r\n    /** æ¥ææ¶é´ */\r\n    datetime = 'datetime',\r\n\r\n    /** æ¨¡æçªï¼èªå®ä¹ç»ä»¶ */\r\n    modal = 'modal',\r\n\r\n    /** çº§è */\r\n    cascade = 'cascade',\r\n\r\n    /** èªå®ä¹ç»ä»¶ */\r\n    custom = 'custom'\r\n}\r\n\r\n\r\n/**\r\n * å±æ§åç±»å®ä½\r\n */\r\nexport class ElementPropertyConfig {\r\n    /**\r\n     * åç±»ID\r\n     */\r\n    categoryId: string;\r\n\r\n    /**\r\n     * åç±»æ¾ç¤ºçåç§°\r\n     */\r\n    categoryName: string;\r\n\r\n    /**\r\n     * åç±»æ¯å¦éèï¼é»è®¤false\r\n     */\r\n    hide?= false;\r\n\r\n    /**\r\n     * æ¯å¦éèåç±»æ é¢\r\n     */\r\n    hideTitle?= false;\r\n\r\n    /**\r\n     * åç±»ä¸çå±æ§éç½®\r\n     */\r\n    properties: PropertyEntity[];\r\n\r\n    /**\r\n     * æ¯å¦å¯ç¨çº§èç¹æ§ï¼é»è®¤false\r\n     */\r\n    enableCascade?= false;\r\n\r\n    /**\r\n     * å±æ§å¼ï¼åç±»å¯ç¨çº§èç¹æ§æ¶å¿å¡«\r\n     */\r\n    propertyData?: any;\r\n\r\n    /**\r\n     * ç¶çº§å±æ§IDï¼åç±»å¯ç¨çº§èç¹æ§æ¶å¿å¡«\r\n     */\r\n    parentPropertyID?: string;\r\n\r\n    /**\r\n     * å±æ§å³èå³ç³»ï¼ç¨äºå±æ§åæ´åä¿®æ¹å¶ä»å±æ§éç½®æå±æ§å¼\r\n     */\r\n    setPropertyRelates?: (changeObject, propertyData, parameters?) => void;\r\n\r\n    /**\r\n     * åç±»ä»¥æ ç­¾é¡µå±ç¤ºæ¶ï¼æ ç­¾é¡µçIDãè¥åªéå¹³éºå±ç¤ºï¼åä¸éè¦ä¼ å¥ã\r\n     */\r\n    tabId?: string;\r\n\r\n    /**\r\n     * åç±»ä»¥æ ç­¾é¡µå±ç¤ºæ¶ï¼æ ç­¾é¡µçåç§°ãè¥åªéå¹³éºå±ç¤ºï¼åä¸éè¦ä¼ å¥ã\r\n     */\r\n    tabName?: string;\r\n}\r\n\r\n\r\n\r\n/**\r\n * å±æ§å®ä½\r\n */\r\nexport class PropertyEntity {\r\n    /**\r\n     * å±æ§ID\r\n     */\r\n    propertyID: string;\r\n\r\n    /**\r\n     * å±æ§æ¾ç¤ºçåç§°\r\n     */\r\n    propertyName: string;\r\n\r\n    /**\r\n     * å±æ§çç±»å\r\n     */\r\n    propertyType: PropertyType | any;\r\n\r\n    /**\r\n     * å±æ§æè¿°\r\n     */\r\n    description?: string;\r\n\r\n    /**\r\n     * å±æ§çé»è®¤å¼\r\n     */\r\n    defaultValue?: any;\r\n\r\n    /**\r\n     * æ¯å¦åªè¯»ï¼é»è®¤false\r\n     */\r\n    readonly?= false;\r\n\r\n    /**\r\n     * æ¯å¦å¯è§ï¼é»è®¤true\r\n     */\r\n    visible?= true;\r\n\r\n    /**\r\n     * æå°å¼\r\n     */\r\n    min?: any;\r\n\r\n    /**\r\n     * æå¤§å¼\r\n     */\r\n    max?: any;\r\n\r\n    /**\r\n     * æ°å­ç±»åå±æ§çå°æ°ä½æ°\r\n     */\r\n    decimals?: number;\r\n\r\n    /**\r\n     * æ¯å¦å¤§æ°å­\r\n     */\r\n    isBigNumber?= false;\r\n\r\n    /**\r\n     * å±æ§æ¹ååæ¯å¦éè¦å·æ°æ´ä¸ªé¢æ¿ï¼ç¨äºæ´æ¹å¶ä»åç±»ä¸çå±æ§\r\n     */\r\n    refreshPanelAfterChanged?= false;\r\n\r\n    /**\r\n     * ä¸ææ¡çæä¸¾å¼\r\n     */\r\n    iterator?: KeyMap[];\r\n\r\n    /**\r\n     * ä¸æå¤éç±»åï¼å±æ§å¼çç±»åï¼string(å¤å¼ä»¥éå·åé)/array(å¤å¼ç»è£ææ°ç»)\r\n     */\r\n    multiSelectDataType?= 'string';\r\n\r\n    /**\r\n     * ææ¬æ§ä»¶éå¶è¾å¥çå­ç¬¦ï¼æ¯æå­ç¬¦åæ­£åè¡¨è¾¾å¼\r\n     */\r\n    notAllowedChars?: any[];\r\n\r\n    /**\r\n     * çº§èå±æ§éç½®\r\n     */\r\n    cascadeConfig?: PropertyEntity[];\r\n\r\n    /**\r\n     * çº§èå±æ§æ¯å¦é»è®¤æ¶èµ·\r\n     */\r\n    isExpand?= false;\r\n\r\n    /**\r\n     * æ¯å¦éèçº§èå±æ§çå¤´é¨\r\n     */\r\n    hideCascadeTitle?= false;\r\n\r\n    /**\r\n     * çº§èå±æ§çæ±æ»ä¿¡æ¯\r\n     */\r\n    cascadeConverter?: TypeConverter;\r\n\r\n    /**\r\n     * æ¨¡ææ¡å±æ§èªå®ä¹ç¼è¾å¨\r\n     */\r\n    editor?: Type<any>;\r\n\r\n    /**\r\n     * æ¨¡ææ¡å±æ§èªå®ä¹ç¼è¾å¨åæ°\r\n     */\r\n    editorParams?: any;\r\n\r\n    /**\r\n     *  æ¨¡ææ¡å±æ§å¼è½¬æ¢å¨\r\n     */\r\n    converter?: TypeConverter;\r\n\r\n    /**\r\n     * æ¨¡ææ¡å±æ§æ¯å¦å±ç¤ºæ¸é¤å¾æ \r\n     */\r\n    showClearButton?= false;\r\n\r\n    /**\r\n     * ç¹å»æ¸é¤æé®åçæ¹æ³ï¼åæ°ä¸ºæ¸é¤åçå±æ§å¼\r\n     */\r\n    afterClickClearButton?(value: any): void;\r\n\r\n    /**\r\n     * æå¼æ¨¡ææ¡åçæ¹æ³ï¼ä¸è¬ç¨äºæ ¡éªé»è¾ï¼è¿åå¼ä¸­result=trueï¼åè¿ä¸æ­¥æå¼æ¨¡ææ¡ï¼result=falseåæç¤ºmessageåå®¹ï¼å¹¶ä¸åæå¼æ¨¡ææ¡ã\r\n     */\r\n    beforeOpenModal?(): BeforeOpenModalResult {\r\n        return new BeforeOpenModalResult();\r\n    }\r\n\r\n    [propName: string]: any;\r\n}\r\n\r\n/**\r\n * å±æ§å¼è½¬æ¢å¨ï¼è¿åæ¨¡ææ¡ç±»å±æ§ææ¬æ¡åçæ¾ç¤ºåå®¹\r\n */\r\nexport interface TypeConverter {\r\n    convertTo(data: any, params?: any): string; // ç±æ¨¡ææ¡è½¬ä¸ºå±æ§æ¡ä¸­å±ç¤ºçå¼\r\n}\r\n\r\nexport interface KeyMap {\r\n    key: any;\r\n    value: any;\r\n}\r\n\r\n/**\r\n * æå¼æ¨¡ææ¡åçæ¹æ³è¿åå¼ï¼result=trueï¼åè¿ä¸æ­¥æå¼æ¨¡ææ¡ï¼result=falseåæç¤ºmessageåå®¹ï¼å¹¶ä¸åæå¼æ¨¡ææ¡ã\r\n */\r\nexport class BeforeOpenModalResult {\r\n    result: boolean;\r\n    message?: string;\r\n    parameters?: any;\r\n}\r\n\r\n/**\r\n * å±æ§åæ´é\r\n */\r\nexport class PropertyChangeObject {\r\n    /**\r\n     * å±æ§ID\r\n     */\r\n    propertyID: string;\r\n\r\n    /**\r\n     * åæ´åçå±æ§å¼\r\n     */\r\n    propertyValue: any;\r\n\r\n    /**\r\n     *  å±æ§æå¨åç±»ID\r\n     */\r\n    categoryId: string;\r\n\r\n    /**\r\n     * çº§èå±æ§çç¶è·¯å¾ï¼ä»¥.åé\r\n     */\r\n    propertyPath: string;\r\n\r\n    /**\r\n     * çº§èå±æ§çç¶å±æ§ID\r\n     */\r\n    parentPropertyID: string;\r\n\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { PropertyEntity } from '../entity/property-entity';\r\n\r\n@Component({\r\n    selector: 'app-textbox-prop',\r\n    template: `\r\n    <div class=\"farris-input-wrap\">\r\n        <input type=\"input\" class=\"form-control form-control-sm\" [(ngModel)]=\"elementValue\" (blur)=\"changeValue($event)\"\r\n            *ngIf=\"!elementConfig.readonly\">\r\n        <input type=\"input\" class=\"form-control form-control-sm\" [(ngModel)]=\"elementShowValue\" [readonly]=\"'readonly'\"\r\n            *ngIf=\"elementConfig.readonly\">\r\n    </div>\r\n    `\r\n})\r\nexport class TextboxPropertyComponent implements OnInit {\r\n\r\n    @Output() valueChanged = new EventEmitter<any>();\r\n\r\n    private _elementConfig: PropertyEntity;\r\n    private _elementValue: any;\r\n    get elementConfig() {\r\n        return this._elementConfig;\r\n    }\r\n\r\n    set elementConfig(value) {\r\n        this._elementConfig = value;\r\n        if (this.elementConfig.readonly) {\r\n            this.convertModalShowValue(this._elementValue);\r\n        }\r\n    }\r\n    get elementValue() {\r\n        return this._elementValue;\r\n    }\r\n\r\n    set elementValue(value) {\r\n        this._elementValue = value;\r\n        if (this.elementConfig.readonly) {\r\n            this.convertModalShowValue(this._elementValue);\r\n        }\r\n    }\r\n    /** è¾å¥æ¡ä¸­æ¾ç¤ºçå¼ */\r\n    elementShowValue: string;\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    changeValue($event) {\r\n\r\n        // ææ¬æ§ä»¶éå¶è¾å¥å­ç¬¦\r\n        if (this.elementValue && !this.elementConfig.readonly &&\r\n            this.elementConfig.notAllowedChars && this.elementConfig.notAllowedChars.length) {\r\n            this.elementConfig.notAllowedChars.forEach((c: any) => {\r\n                if (typeof (c) === 'object') {\r\n                    this.elementValue = this.elementValue.replace(c, '');\r\n                } else if (typeof (c) === 'string') {\r\n                    this.elementValue = this.elementValue.replace(new RegExp(c, 'g'), '');\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        this.valueChanged.next({ $event, elementValue: this.elementValue });\r\n    }\r\n\r\n    restValueAfterValidRestrict(value) {\r\n        this.elementValue = value || '';\r\n    }\r\n\r\n\r\n    private convertModalShowValue(value) {\r\n        if (this.elementConfig.converter) {\r\n            this.elementShowValue = this.elementConfig.converter.convertTo(value);\r\n            return;\r\n        }\r\n        if (value && value instanceof Object) {\r\n            this.elementShowValue = JSON.stringify(value);\r\n            return;\r\n        }\r\n        this.elementShowValue = value;\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { PropertyEntity } from '../entity/property-entity';\r\n\r\n@Component({\r\n    selector: 'app-number-prop',\r\n    template: `\r\n    <div class=\"farris-input-wrap\">\r\n        <farris-number-spinner [(ngModel)]=\"elementValue\" [readonly]=\"elementConfig.readonly\" [precision]=\"precision\"\r\n            [autoDecimal]=\"true\" [min]=\"elementConfig.min\" [max]=\"elementConfig.max\" [canNull]=\"true\"\r\n            [bigNumber]=\"elementConfig.isBigNumber\" (ngModelChange)=\"changeValue($event)\">\r\n        </farris-number-spinner>\r\n    </div>\r\n    `\r\n})\r\nexport class NumberPropertyComponent implements OnInit {\r\n\r\n    @Output() valueChanged = new EventEmitter<any>();\r\n\r\n    /** æ°å­æ§ä»¶ç²¾åº¦ */\r\n    precision = 2;\r\n\r\n    private _elementConfig: PropertyEntity;\r\n    private _elementValue: any;\r\n\r\n\r\n    get elementConfig() {\r\n        return this._elementConfig;\r\n    }\r\n\r\n    set elementConfig(value) {\r\n        this._elementConfig = value;\r\n        this.precision = this._elementConfig.decimals === undefined ? 2 : this._elementConfig.decimals;\r\n\r\n    }\r\n\r\n    get elementValue() {\r\n        return this._elementValue;\r\n    }\r\n\r\n    set elementValue(value) {\r\n        this._elementValue = value;\r\n    }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    changeValue($event) {\r\n        this.valueChanged.next({ $event, elementValue: this.elementValue });\r\n    }\r\n\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { PropertyEntity } from '../entity/property-entity';\r\n\r\n@Component({\r\n  selector: 'app-combolist-prop',\r\n  template: `\r\n      <!--ä¸æåè¡¨-->\r\n      <div class=\"farris-input-wrap\">\r\n        <farris-combo-list\r\n          [(ngModel)]=\"elementValue\"\r\n          [idField]=\"'key'\"\r\n          [textField]=\"'value'\"\r\n          [data]=\"selectOptions\"\r\n          [readonly]=\"elementConfig.readonly\"\r\n          [editable]=\"editable\"\r\n          [multiSelect]=\"multiSelect\"\r\n          [enableClear]=\"false\"\r\n          [enableCancelSelected]=\"false\"\r\n          [nosearch]=\"nosearch\"\r\n          (ngModelChange)=\"changeValue($event)\">\r\n        </farris-combo-list>\r\n      </div>\r\n    `\r\n})\r\nexport class CombolistPropertyComponent implements OnInit {\r\n  @Output() valueChanged = new EventEmitter<any>();\r\n\r\n  private _elementConfig: PropertyEntity;\r\n  private _elementValue: any;\r\n\r\n  /** ç¼è¾ç±»å */\r\n  editType: string;\r\n\r\n  /** ä¸ææ¡çæä¸¾é¡¹ */\r\n  selectOptions = [];\r\n  /** æ¯å¦å¯ç¼è¾ */\r\n  editable: boolean;\r\n  /** æ¯å¦å¯ä»»æè¾å¥ */\r\n  nosearch = false;\r\n  /** æ¯å¦å¤é */\r\n  multiSelect = false;\r\n  get elementValue() {\r\n    return this._elementValue;\r\n  }\r\n\r\n  set elementValue(value) {\r\n    this._elementValue = value;\r\n\r\n    // å¤éæ§ä»¶ä½¿ç¨æ°ç»æ ¼å¼çæ°æ®\r\n    if (this.elementConfig.multiSelectDataType === 'array') {\r\n      this._elementValue = this._elementValue ? this._elementValue.toString() : '';\r\n    }\r\n  }\r\n\r\n  get elementConfig() {\r\n    return this._elementConfig;\r\n  }\r\n\r\n  set elementConfig(value) {\r\n\r\n    this._elementConfig = value;\r\n    if (!this.elementConfig) {\r\n      return;\r\n    }\r\n    this.editType = this.elementConfig.propertyType;\r\n    if (this.editType === 'boolean') {\r\n      this.selectOptions = [{ key: true, value: 'true' }, { key: false, value: 'false' }];\r\n      this.editType = 'select';\r\n    } else {\r\n      this.selectOptions = this.elementConfig.iterator || [];\r\n    }\r\n\r\n\r\n    switch (this.editType) {\r\n      case 'select': {\r\n        // ä¸å¯ç¼è¾ä¸ææ¡\r\n        this.editable = false;\r\n\r\n        break;\r\n      }\r\n      case 'editableSelect': {\r\n        // å¯ç¼è¾ä¸ææ¡\r\n        this.editable = true;\r\n        this.nosearch = true;\r\n        break;\r\n      }\r\n      case 'multiSelect': {\r\n        // ä¸å¯ç¼è¾çä¸æå¤éæ¡\r\n        this.editable = false;\r\n        this.multiSelect = true;\r\n\r\n        // å¤éæ§ä»¶ä½¿ç¨æ°ç»æ ¼å¼çæ°æ®\r\n        if (this.elementConfig.multiSelectDataType === 'array') {\r\n          this._elementValue = this._elementValue ? this._elementValue.toString() : '';\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void { }\r\n\r\n  changeValue($event) {\r\n    let value = this._elementValue;\r\n\r\n    // å¤éæ§ä»¶è¿åæ°ç»æ ¼å¼çæ°æ®\r\n    if (this.editType === 'multiSelect' && this.elementConfig.multiSelectDataType === 'array') {\r\n      value = this._elementValue ? this._elementValue.split(',') : '';\r\n    }\r\n\r\n\r\n    this.valueChanged.next({ elementValue: value });\r\n  }\r\n\r\n}\r\n","import { ChangeDetectorRef, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { PropertyEntity } from '../entity/property-entity';\r\n\r\n@Component({\r\n  selector: 'app-date-prop',\r\n  template: `\r\n        <farris-datepicker [(ngModel)]=\"elementValue\" [editable]=\"false\" [showTime]=\"showTime\"\r\n          [dateFormat]=\"dateFormat\" [readonly]=\"elementConfig.readonly\"\r\n          (valueChange)=\"changeValue($event)\" [returnType]=\"'string'\" [maxDate]=\"maxDate\"\r\n          [minDate]=\"minDate\">\r\n        </farris-datepicker>\r\n\r\n    `\r\n})\r\nexport class DatePropertyComponent implements OnInit, OnChanges {\r\n  private _elementConfig: PropertyEntity;\r\n  private _elementValue: any;\r\n\r\n  maxDate;\r\n  minDate;\r\n\r\n  showTime = false;\r\n  dateFormat = 'yyyy-MM-dd';\r\n\r\n  get elementConfig() {\r\n    return this._elementConfig;\r\n  }\r\n\r\n  set elementConfig(value) {\r\n\r\n    this._elementConfig = value;\r\n    if (!this.elementConfig) {\r\n      return;\r\n    }\r\n    this.maxDate = value.max;\r\n    this.minDate = value.min;\r\n    this.showTime = this.elementConfig.propertyType === 'datetime';\r\n    this.dateFormat = this.elementConfig.propertyType === 'datetime' ? 'yyyy-MM-dd HH:mm:ss' : 'yyyy-MM-dd';\r\n\r\n\r\n\r\n  }\r\n  get elementValue() {\r\n    return this._elementValue;\r\n  }\r\n\r\n  set elementValue(value) {\r\n    this._elementValue = value;\r\n  }\r\n\r\n\r\n  @Output() valueChanged = new EventEmitter<any>();\r\n\r\n  constructor(private cd: ChangeDetectorRef) {\r\n\r\n  }\r\n\r\n  // editType: string;\r\n\r\n\r\n  ngOnInit(): void {\r\n    // this.editType = this.elementConfig && this.elementConfig.propertyType;\r\n  }\r\n  ngOnChanges(changes: SimpleChanges) {\r\n\r\n  }\r\n  changeValue($event) {\r\n    const value = $event.formatted;\r\n\r\n    this.valueChanged.next({ $event, elementValue: value });\r\n  }\r\n\r\n}\r\n","import { Component, ComponentFactoryResolver, EventEmitter, Injector, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { PropertyEntity } from '../entity/property-entity';\r\n\r\n@Component({\r\n    selector: 'app-modal-prop',\r\n    template: `\r\n    <div class=\"farris-input-wrap modalIcon\">\r\n        <input type=\"input\" class=\"form-control form-control-sm\" [(ngModel)]=\"elementShowValue\" readonly>\r\n        <span [class.allowClear]=\"showClearButton\" class=\"showClearButton\" (click)=\"modalClear()\">\r\n            <i class=\"material-icons clearIcon\">close</i>\r\n        </span>\r\n        <i class=\"material-icons moreIcon\" (click)=\"openModal()\">filter_none</i>\r\n    </div>\r\n    `,\r\n    styles: [\r\n        `\r\n        .modalIcon .showClearButton {\r\n            display: none;\r\n        }\r\n        .modalIcon:hover .allowClear.showClearButton {\r\n            display: block;\r\n        }\r\n        .modalIcon input {\r\n            padding-right: 30px;\r\n        }\r\n        .modalIcon .moreIcon {\r\n            position: absolute;\r\n            top: 6px;\r\n            right: 6px;\r\n            cursor: pointer;\r\n            font-size: 16px;\r\n            color: #758a96;\r\n        }\r\n        .modalIcon .clearIcon {\r\n            position: absolute;\r\n            top: 5px;\r\n            right: 30px;\r\n            cursor: pointer;\r\n            font-size: 19px;\r\n            color: #758a96;\r\n        }\r\n        `\r\n    ]\r\n})\r\nexport class ModalPropertyComponent implements OnInit {\r\n\r\n\r\n    @Output() valueChanged = new EventEmitter<any>();\r\n    @Output() submitModal = new EventEmitter<any>();\r\n\r\n    private _elementConfig: PropertyEntity;\r\n    private _elementValue: any;\r\n\r\n\r\n    /** è¾å¥æ¡ä¸­æ¾ç¤ºçå¼ */\r\n    elementShowValue: string;\r\n\r\n    showClearButton = false;\r\n    get elementConfig() {\r\n        return this._elementConfig;\r\n    }\r\n\r\n    set elementConfig(value) {\r\n        this._elementConfig = value;\r\n\r\n        this.convertModalShowValue(this._elementValue);\r\n\r\n        this.showClearButton = this.elementConfig.showClearButton && !this.elementConfig.readonly;\r\n    }\r\n    get elementValue() {\r\n        return this._elementValue;\r\n    }\r\n\r\n    set elementValue(value) {\r\n        this._elementValue = value;\r\n\r\n        this.convertModalShowValue(this._elementValue);\r\n    }\r\n\r\n    constructor(\r\n        private notifyServ: NotifyService,\r\n        private resolver: ComponentFactoryResolver,\r\n        private modalService: BsModalService,\r\n        private injector: Injector) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    changeValue($event) {\r\n        this.valueChanged.next({ $event, elementValue: this.elementValue });\r\n    }\r\n    /**\r\n     * æ¸é¤æ¨¡ææ¡åå®¹\r\n     */\r\n    modalClear() {\r\n        // æ°æ®è½¬æ¢\r\n        this.convertModalShowValue(null);\r\n\r\n        // è¥ææ¸é¤åäºä»¶ï¼åæ§è¡æ¹æ³\r\n        if (Object.keys(this.elementConfig).indexOf('afterClickClearButton') > -1 &&\r\n            typeof (this.elementConfig.afterClickClearButton) === 'function') {\r\n            this.elementConfig.afterClickClearButton(this.elementValue);\r\n        }\r\n\r\n        this.valueChanged.next({ elementValue: null });\r\n    }\r\n\r\n    /**\r\n     * æ¨¡ææ¡åºæ¯ä¸å°å±æ§å¼è½¬æ¢ä¸ºè¾å¥æ¡ä¸­æ¾ç¤ºçå¼\r\n     * @param value å±æ§å¼\r\n     */\r\n    private convertModalShowValue(value) {\r\n        if (this.elementConfig.converter) {\r\n            this.elementShowValue = this.elementConfig.converter.convertTo(value);\r\n            return;\r\n        }\r\n        if (value && value instanceof Object) {\r\n            this.elementShowValue = JSON.stringify(value);\r\n            return;\r\n        }\r\n        this.elementShowValue = value;\r\n    }\r\n\r\n    /**\r\n     * èªå®ä¹ç¼è¾å¨ä½¿ç¨æ¨¡ææ¡æå¼\r\n     */\r\n    openModal() {\r\n        if (this.elementConfig.readonly) {\r\n            return;\r\n        }\r\n        if (Object.keys(this.elementConfig).indexOf('beforeOpenModal') > -1 && typeof (this.elementConfig.beforeOpenModal) === 'function') {\r\n            const result = this.elementConfig.beforeOpenModal();\r\n            if (result && !result.result) {\r\n                this.notifyServ.warning(result.message);\r\n                return;\r\n            }\r\n        }\r\n        this.createEditorComponent();\r\n    }\r\n\r\n    /**\r\n     * åå»ºèªå®ä¹ç¼è¾å¨\r\n     */\r\n    private createEditorComponent() {\r\n        const editor = this.elementConfig.editor;\r\n        if (!editor) {\r\n            return;\r\n        }\r\n        // åå»ºæ¨¡ææ¡ç»ä»¶\r\n        const compFactory = this.resolver.resolveComponentFactory(editor);\r\n        const compRef = compFactory.create(this.injector);\r\n        compRef.instance.value = this.elementValue;\r\n        // ç¼è¾å¨éè¦çé¢å¤åæ°\r\n        compRef.instance.editorParams = this.elementConfig.editorParams;\r\n\r\n        let modalConfig = compRef.instance.modalConfig;\r\n        if (!modalConfig) {\r\n            modalConfig = {\r\n                title: 'å±æ§éç½®',\r\n                width: 800,\r\n                height: 400,\r\n                showButtons: false\r\n            };\r\n        } else if (modalConfig.showButtons) {\r\n            modalConfig.buttons = compRef.instance.modalFooter;\r\n        }\r\n\r\n        const dialog = this.modalService.show(compRef, modalConfig);\r\n\r\n        // çå¬å³é­æ¨¡ææ¡\r\n        if (compRef.instance.closeModal && compRef.instance.closeModal instanceof EventEmitter) {\r\n            compRef.instance.closeModal.subscribe((data) => {\r\n                // æ°æ®è½¬æ¢\r\n                if (data) {\r\n                    this.convertModalShowValue(data);\r\n\r\n                    this.valueChanged.next({ elementValue: data });\r\n                }\r\n\r\n                dialog.close();\r\n            });\r\n        }\r\n\r\n\r\n\r\n        // å¼¹åºæ¡å³é­äºä»¶ï¼å¸¦åæ°ï¼æ ¼å¼ä¸º{ value, parameters }\r\n        if (compRef.instance.submitModal && compRef.instance.submitModal instanceof EventEmitter) {\r\n            compRef.instance.submitModal.subscribe(data => {\r\n                if (!data) {\r\n                    dialog.close();\r\n                    return;\r\n                }\r\n                const { value, parameters } = data;\r\n                // æ°æ®è½¬æ¢\r\n                this.convertModalShowValue(value);\r\n\r\n                this.submitModal.next({ elementValue: value, parameters });\r\n\r\n                dialog.close();\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { PropertyEntity } from '../entity/property-entity';\r\n\r\n@Component({\r\n  selector: 'app-unity-prop',\r\n  template: `\r\n      <div class=\"farris-input-wrap\">\r\n        <farris-propertyEditor\r\n          [importedOriginalData]=\"importedOriginalData\"\r\n          (propertyEditorValueChanged)=\"handleValueChanged($event)\">\r\n        </farris-propertyEditor>\r\n      </div>\r\n    `\r\n})\r\nexport class UniformPropertyComponent implements OnInit {\r\n\r\n  @Input() elementConfig: PropertyEntity;\r\n  @Input() elementValue: any;\r\n  @Output() valueChanged = new EventEmitter<any>();\r\n\r\n  importedOriginalData: any;\r\n\r\n  initImportedOriginalData(): void {\r\n    const editorParams = this.elementConfig.editorParams;\r\n    const constType = editorParams.constType;\r\n    const valueType = this.getValueType();\r\n    this.importedOriginalData = {\r\n      controlName: editorParams.controlName,\r\n      propertyName: this.elementConfig.propertyID,\r\n      propertyType: constType,\r\n      propertyValue: {\r\n        type: valueType,\r\n        value: this.elementValue\r\n      },\r\n      editorOptions: editorParams.editorOptions\r\n    };\r\n  }\r\n\r\n  /**\r\n   * éè¿å½åéç½®ä¿¡æ¯åå¼ä¿¡æ¯æ¨æ­å½åå¼çç±»å\r\n   * @returns å¼ç±»å\r\n   */\r\n  getValueType(): string {\r\n    const propertyValue = this.elementValue;\r\n    const editorParams = this.elementConfig.editorParams;\r\n    const constType = editorParams.constType;\r\n    const types: string[] = editorParams.editorOptions.types;\r\n\r\n    // å½åå¼ä¸ºå¯¹è±¡æ¶\r\n    if (propertyValue && typeof propertyValue === \"object\") {\r\n      // å¤æ­æ¯å¦ä¸ºåéç±»å\r\n      if (propertyValue.hasOwnProperty(\"type\") && (typeof propertyValue.type === \"string\" && propertyValue.type.toLowerCase() === \"variable\")) {\r\n        if (types.includes(\"variable\"))\r\n          return \"variable\";\r\n      }\r\n    }\r\n    // å½åå¼ä¸ºå­ç¬¦ä¸²æ¶\r\n    if (typeof propertyValue === \"string\") {\r\n      // å¤æ­æ¯å¦ä¸ºèªå®ä¹ç±»åï¼éè¿æ¯å¦å«æâviewModelâå­ä¸²ç¡¬æ¨æ­ï¼\r\n      if (types.includes(\"custom\") && ( propertyValue.includes(\"viewModel\") || !types.includes(\"const\") || constType !== \"string\" )) {\r\n        return \"custom\";\r\n      }\r\n      // å¤æ­æ¯å¦ä¸ºå­ç¬¦ä¸²å¸¸é\r\n      if (types.includes(\"const\") && constType === \"string\") {\r\n        return \"const\";\r\n      }\r\n    }\r\n    // å½åå¼ä¸ºæ°å­æ¶\r\n    if (typeof propertyValue === \"number\") {\r\n      if (types.includes(\"const\") && constType === \"number\") {\r\n        return \"const\";\r\n      }\r\n    }\r\n    // é»è®¤ä¸ºconstç±»åï¼ä¸ºæä¸¾ç±»åååºï¼\r\n    if (types.includes(\"const\")) {\r\n      return \"const\";\r\n    }\r\n    // å¦æé½æ¾ä¸å°åä»»æè¿åä¸ä¸ªå¼\r\n    return types[0];\r\n  }\r\n\r\n  handleValueChanged($event: any): void {\r\n    let newValue = $event.propertyValue.value;\r\n    if ($event.propertyValue.type === \"variable\" && typeof newValue === \"object\") {\r\n      newValue.type = \"Variable\";\r\n      if (newValue.name) {\r\n        delete newValue.name;\r\n      }\r\n      if ($event[\"isNewVariable\"]) {\r\n        newValue[\"isNewVariable\"] = true;\r\n      }\r\n    }\r\n    this.valueChanged.next({ $event, elementValue: newValue });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initImportedOriginalData();\r\n  }\r\n\r\n}\r\n","import {\r\n  Component, OnInit, Input, Output, OnChanges, SimpleChanges,\r\n  EventEmitter, ComponentFactoryResolver, ViewChild, ViewContainerRef, ComponentRef\r\n} from '@angular/core';\r\nimport { PropertyEntity } from '../../entity/property-entity';\r\nimport { TextboxPropertyComponent } from '../../controls/textbox.component';\r\nimport { NumberPropertyComponent } from '../../controls/number.component';\r\nimport { CombolistPropertyComponent } from '../../controls/combolist.component';\r\nimport { DatePropertyComponent } from '../../controls/date.component';\r\nimport { ModalPropertyComponent } from '../../controls/modal.component';\r\nimport { UniformPropertyComponent } from '../../controls/unity.component';\r\n\r\n@Component({\r\n  selector: 'dynamic-property-item',\r\n  templateUrl: './property-item.component.html',\r\n  styleUrls: ['./property-item.component.css']\r\n})\r\nexport class FPropertyItemComponent implements OnInit, OnChanges {\r\n  @Input() elementConfig: PropertyEntity;\r\n  @Input() elementValue: any;\r\n  @Output() valueChanged = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  // åä¸è§¦åæ´ä½é¢æ¿å·æ°\r\n  @Output() triggerRefreshPanel = new EventEmitter<any>();\r\n\r\n  // æ§ä»¶å®¹å¨\r\n  @ViewChild('propItem', { read: ViewContainerRef }) propItem: ViewContainerRef;\r\n\r\n  // æ§ä»¶ç±»å--ç¨äºåºåå¨æåæ´æ§ä»¶ç±»åçåºæ¯ï¼éè¦éæ°æ¸²ææ¨¡æ¿\r\n  propertyOldType: string;\r\n\r\n  // æ§ä»¶ç±»å\r\n  itemType = 'string';\r\n\r\n  controlComponentRef: ComponentRef<any>;\r\n\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.refresh();\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  refresh() {\r\n    let controlComponent;\r\n    // æ¾ç¤ºæ ¼å¼\r\n    const propertyType = this.itemType = this.elementConfig.propertyType;\r\n    switch (propertyType) {\r\n      case 'boolean': {\r\n        this.itemType = 'select';\r\n        controlComponent = CombolistPropertyComponent;\r\n        break;\r\n      }\r\n      case 'select': {\r\n        controlComponent = CombolistPropertyComponent;\r\n        break;\r\n      }\r\n      case 'multiSelect': {\r\n        controlComponent = CombolistPropertyComponent;\r\n        break;\r\n      }\r\n      case 'modal': {\r\n        controlComponent = ModalPropertyComponent;\r\n        break;\r\n      }\r\n      case 'number': {\r\n        controlComponent = NumberPropertyComponent;\r\n        break;\r\n      }\r\n      case 'string': {\r\n        controlComponent = TextboxPropertyComponent;\r\n        break;\r\n      }\r\n      case 'date': case 'datetime': {\r\n        controlComponent = DatePropertyComponent;\r\n        break;\r\n      }\r\n      case 'editableSelect': {\r\n        controlComponent = CombolistPropertyComponent;\r\n        break;\r\n      }\r\n      case 'unity': {\r\n        controlComponent = UniformPropertyComponent;\r\n        break;\r\n      }\r\n      case 'custom': {\r\n        controlComponent = this.elementConfig.editor;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // é»è®¤å¼\r\n    if (Object.keys(this.elementConfig).indexOf('defaultValue') > -1) {\r\n      if (this.elementValue === undefined || this.elementValue === null) {\r\n        this.elementValue = this.elementConfig.defaultValue;\r\n      }\r\n      // this.showDefaultValue = true;\r\n    }\r\n\r\n    // æ¯å¦æ¾ç¤º\r\n    if (Object.keys(this.elementConfig).indexOf('visible') < 0) {\r\n      this.elementConfig.visible = true;\r\n    }\r\n\r\n    this.createDynamicControl(controlComponent);\r\n\r\n  }\r\n  /**\r\n   * å¨æåå»ºæ§ä»¶\r\n   * @param controlComponent  ç»ä»¶ç±»å\r\n   */\r\n  createDynamicControl(controlComponent: any) {\r\n    if (!controlComponent) {\r\n      console.log('å¨æåå»ºç»ä»¶ä¸ºç©ºï¼');\r\n      return;\r\n    }\r\n    if (this.propItem.length === 0 || this.propertyOldType !== this.itemType) {\r\n      this.propItem.clear();\r\n      const componentFactory = this.resolver.resolveComponentFactory(controlComponent);\r\n      this.controlComponentRef = this.propItem.createComponent(componentFactory);\r\n\r\n      this.controlComponentRef.instance.elementConfig = this.elementConfig;\r\n      this.controlComponentRef.instance.elementValue = this.elementValue;\r\n\r\n      if (this.controlComponentRef.instance.valueChanged) {\r\n        this.controlComponentRef.instance.valueChanged.subscribe(data => {\r\n          const { elementValue } = data;\r\n          this.elementValue = elementValue;\r\n          this.changeValue(null);\r\n        });\r\n      }\r\n\r\n      if (this.controlComponentRef.instance.submitModal) {\r\n        this.controlComponentRef.instance.submitModal.subscribe(data => {\r\n          const { elementValue, parameters } = data;\r\n          this.elementValue = elementValue;\r\n\r\n          this.changeModalValue(parameters);\r\n        });\r\n      }\r\n\r\n      this.propertyOldType = this.itemType;\r\n    } else if (this.controlComponentRef) {\r\n\r\n      this.controlComponentRef.instance.elementConfig = this.elementConfig;\r\n      this.controlComponentRef.instance.elementValue = this.elementValue;\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * åæ´å±æ§å¼\r\n   */\r\n  changeValue(parameters: any) {\r\n\r\n    const changeObject = {\r\n      propertyID: this.elementConfig.propertyID,\r\n      propertyValue: this.elementValue\r\n    };\r\n    this.valueChanged.emit({ changeObject, parameters });\r\n\r\n    if (this.elementConfig.refreshPanelAfterChanged) {\r\n      this.triggerRefreshPanel.emit();\r\n    }\r\n  }\r\n  /**\r\n   * åæ´å¼¹çªç±»å±æ§å¼\r\n   * @param parameters åæ°å¼\r\n   */\r\n  private changeModalValue(parameters: any) {\r\n    const changeObject = {\r\n      propertyID: this.elementConfig.propertyID,\r\n      propertyValue: this.elementValue\r\n    };\r\n    this.submitModal.emit({ changeObject, parameters });\r\n\r\n    if (this.elementConfig.refreshPanelAfterChanged) {\r\n      this.triggerRefreshPanel.emit();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component, OnInit, Input, Output, OnChanges, SimpleChanges,\r\n  EventEmitter, ComponentFactoryResolver, Injector, ElementRef, ApplicationRef, TemplateRef, ViewChild, ViewContainerRef\r\n} from '@angular/core';\r\nimport { PropertyEntity } from '../../entity/property-entity';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { NotifyService, NotifyOptions } from '@farris/ui-notify';\r\n\r\n@Component({\r\n  selector: 'webide-property-item',\r\n  templateUrl: './property-item.component.html',\r\n  styleUrls: ['./property-item.component.css']\r\n})\r\nexport class PropertyItemComponent implements OnInit, OnChanges {\r\n  @Input() elementConfig: PropertyEntity;\r\n  @Input() elementValue: any;\r\n  @Output() valueChanged = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  // åä¸è§¦åæ´ä½é¢æ¿å·æ°\r\n  @Output() triggerRefreshPanel = new EventEmitter<any>();\r\n\r\n  // æ§ä»¶å®¹å¨\r\n  @ViewChild('propItem', { read: ViewContainerRef }) propItem: ViewContainerRef;\r\n\r\n  // æ§ä»¶æ¨¡æ¿\r\n  @ViewChild('stringTmpl') stringTmpl: TemplateRef<any>;\r\n  @ViewChild('numberTmpl') numberTmpl: TemplateRef<any>;\r\n  @ViewChild('selectTmpl') selectTmpl: TemplateRef<any>;\r\n  @ViewChild('boolOrExpTmpl') boolOrExpTmpl: TemplateRef<any>;\r\n  @ViewChild('multiSelectTmpl') multiSelectTmpl: TemplateRef<any>;\r\n  @ViewChild('dateTmpl') dateTmpl: TemplateRef<any>;\r\n  @ViewChild('datetimeTmpl') datetimeTmpl: TemplateRef<any>;\r\n  @ViewChild('modalTmpl') modalTmpl: TemplateRef<any>;\r\n  @ViewChild('editableSelectTmpl') editableSelectTmpl: TemplateRef<any>;\r\n\r\n\r\n\r\n  // æ§ä»¶ç±»å--ç¨äºåºåå¨æåæ´æ§ä»¶ç±»åçåºæ¯ï¼éè¦éæ°æ¸²ææ¨¡æ¿\r\n  propertyOldType: string;\r\n\r\n  // æ¨¡ææ¡ç±»åçå±æ§:å±æ§æ¡çå±ç¤ºå¼\r\n  elementShowValue: any;\r\n\r\n  // ä¸ææ¡çæä¸¾é¡¹\r\n  selectOptions = [];\r\n\r\n  // æ§ä»¶ç±»å\r\n  itemType = 'string';\r\n\r\n  // æ°å­æ§ä»¶ç²¾åº¦\r\n  precision = 2;\r\n\r\n  // å·²åºå¼\r\n  showClearButton = false;\r\n\r\n  // é»è®¤å¼\r\n  showDefaultValue = false;\r\n\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver, private modalService: BsModalService,\r\n    private injector: Injector, private notifyServ: NotifyService, public el: ElementRef) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.refresh();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.refresh();\r\n  }\r\n\r\n  refresh() {\r\n    this.showClearButton = this.elementConfig.showClearButton && !this.elementConfig.readonly;\r\n\r\n    let tmpl: TemplateRef<any>;\r\n    // æ¾ç¤ºæ ¼å¼\r\n    const propertyType = this.itemType = this.elementConfig.propertyType;\r\n    switch (propertyType) {\r\n      case 'boolean': {\r\n        this.itemType = 'select';\r\n        this.selectOptions = [{ key: true, value: 'true' }, { key: false, value: 'false' }];\r\n\r\n        tmpl = this.selectTmpl;\r\n        break;\r\n      }\r\n      case 'select': {\r\n        this.selectOptions = this.elementConfig.iterator || [];\r\n\r\n        tmpl = this.selectTmpl;\r\n        break;\r\n      }\r\n      case 'multiSelect': {\r\n        this.selectOptions = this.elementConfig.iterator || [];\r\n        if (this.elementConfig.multiSelectDataType === 'array') {\r\n          this.elementValue = this.elementValue ? this.elementValue.toString() : '';\r\n        }\r\n\r\n        tmpl = this.multiSelectTmpl;\r\n        break;\r\n      }\r\n      case 'modal': {\r\n        this._convertModalShowValue(this.elementValue);\r\n\r\n        tmpl = this.modalTmpl;\r\n        break;\r\n      }\r\n      case 'number': {\r\n        this.precision = this.elementConfig.decimals === undefined ? 2 : this.elementConfig.decimals;\r\n\r\n        tmpl = this.numberTmpl;\r\n        break;\r\n      }\r\n      case 'string': {\r\n        if (this.elementConfig.readonly) {\r\n          this._convertModalShowValue(this.elementValue);\r\n        }\r\n        tmpl = this.stringTmpl;\r\n        break;\r\n      }\r\n      /** å·²åºå¼ï¼è¯·ä½¿ç¨editableSelect */\r\n      case 'boolOrExp': {\r\n        this.selectOptions = [{ key: true, value: 'true' }, { key: false, value: 'false' }];\r\n\r\n        tmpl = this.boolOrExpTmpl;\r\n        break;\r\n      }\r\n      case 'date': {\r\n        tmpl = this.dateTmpl;\r\n        break;\r\n      }\r\n      case 'datetime': {\r\n        tmpl = this.datetimeTmpl;\r\n        break;\r\n      }\r\n      case 'editableSelect': {\r\n        this.selectOptions = this.elementConfig.iterator || [];\r\n\r\n        tmpl = this.editableSelectTmpl;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // é»è®¤å¼\r\n    if (Object.keys(this.elementConfig).indexOf('defaultValue') > -1) {\r\n      if (this.elementValue === undefined || this.elementValue === null) {\r\n        this.elementValue = this.elementConfig.defaultValue;\r\n      }\r\n      this.showDefaultValue = true;\r\n    }\r\n\r\n    // æ¯å¦æ¾ç¤º\r\n    if (Object.keys(this.elementConfig).indexOf('visible') < 0) {\r\n      this.elementConfig.visible = true;\r\n    }\r\n\r\n    // åå»ºæ¨¡æ¿\r\n    if (tmpl && (this.propItem.length === 0 || this.propertyOldType !== this.itemType)) {\r\n      this.propItem.clear();\r\n      this.propItem.createEmbeddedView(tmpl);\r\n      this.propertyOldType = this.itemType;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * é¼ æ ç§»å¥ --å·²åºå¼\r\n   */\r\n  onmouseover() {\r\n    if (!this.elementConfig.showClearButton) {\r\n      return;\r\n    }\r\n    if (!this.showClearButton) {\r\n      this.showClearButton = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * é¼ æ ç¦»å¼ --å·²åºå¼\r\n   */\r\n  onmouseleave() {\r\n    if (!this.elementConfig.showClearButton) {\r\n      return;\r\n    }\r\n    this.showClearButton = false;\r\n  }\r\n\r\n\r\n  /**\r\n   * æ¸é¤æ¨¡ææ¡åå®¹\r\n   */\r\n  modalClear() {\r\n    // æ°æ®è½¬æ¢\r\n    this._convertModalShowValue(null);\r\n\r\n    // è¥ææ¸é¤åäºä»¶ï¼åæ§è¡æ¹æ³\r\n    if (Object.keys(this.elementConfig).indexOf('afterClickClearButton') > -1 &&\r\n      typeof (this.elementConfig.afterClickClearButton) === 'function') {\r\n      this.elementConfig.afterClickClearButton(this.elementValue);\r\n    }\r\n\r\n    const changeObject = {\r\n      propertyID: this.elementConfig.propertyID,\r\n      propertyValue: null\r\n    };\r\n    this.submitModal.emit({ changeObject, parameters: null });\r\n  }\r\n\r\n  /**\r\n   * åæ´å±æ§å¼\r\n   */\r\n  changeValue(e) {\r\n    let value = this.elementValue;\r\n\r\n    // ææ¬æ§ä»¶éå¶è¾å¥å­ç¬¦\r\n    if (value && this.elementConfig.propertyType === 'string' && !this.elementConfig.readonly &&\r\n      this.elementConfig.notAllowedChars && this.elementConfig.notAllowedChars.length) {\r\n      this.elementConfig.notAllowedChars.forEach((c: any) => {\r\n        if (typeof (c) === 'object') {\r\n          value = value.replace(c, '');\r\n        } else if (typeof (c) === 'string') {\r\n          value = value.replace(new RegExp(c, 'g'), '');\r\n        }\r\n\r\n      });\r\n      this.elementValue = value;\r\n    }\r\n\r\n    // å¤éæ§ä»¶è¿åæ°ç»æ ¼å¼çæ°æ®\r\n    if (this.itemType === 'multiSelect' && this.elementConfig.multiSelectDataType === 'array') {\r\n      value = this.elementValue ? this.elementValue.split(',') : '';\r\n    }\r\n\r\n    const changeObject = {\r\n      propertyID: this.elementConfig.propertyID,\r\n      propertyValue: value\r\n    };\r\n    this.valueChanged.emit({ changeObject });\r\n    if (this.elementConfig.refreshPanelAfterChanged) {\r\n      this.triggerRefreshPanel.emit();\r\n    }\r\n  }\r\n  /**\r\n   * farris æ¥ææ§ä»¶çåæ´äºä»¶\r\n   * @param e e\r\n   */\r\n  changeDateValue(e) {\r\n    const value = e.formatted;\r\n\r\n    const changeObject = {\r\n      propertyID: this.elementConfig.propertyID,\r\n      propertyValue: value\r\n    };\r\n    this.valueChanged.emit({ changeObject });\r\n    if (this.elementConfig.refreshPanelAfterChanged) {\r\n      this.triggerRefreshPanel.emit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * èªå®ä¹ç¼è¾å¨ä½¿ç¨æ¨¡ææ¡æå¼\r\n   */\r\n  openModal() {\r\n    if (this.elementConfig.readonly) {\r\n      return;\r\n    }\r\n    if (Object.keys(this.elementConfig).indexOf('beforeOpenModal') > -1 && typeof (this.elementConfig.beforeOpenModal) === 'function') {\r\n      const result = this.elementConfig.beforeOpenModal();\r\n      if (result && !result.result) {\r\n        this.notifyServ.warning({\r\n          title: 'ç³»ç»æç¤º', msg: result.message, timeout: 3000\r\n        } as NotifyOptions);\r\n        return;\r\n      }\r\n    }\r\n    this.createEditorComponent();\r\n  }\r\n\r\n  /**\r\n   * åå»ºèªå®ä¹ç¼è¾å¨\r\n   */\r\n  private createEditorComponent() {\r\n    const editor = this.elementConfig.editor;\r\n    if (!editor) {\r\n      return;\r\n    }\r\n    // åå»ºæ¨¡ææ¡ç»ä»¶\r\n    const compFactory = this.resolver.resolveComponentFactory(editor);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.value = this.elementValue;\r\n    if (this.elementConfig.editorParams) {  // ç¼è¾å¨éè¦çé¢å¤åæ°\r\n      compRef.instance.editorParams = this.elementConfig.editorParams;\r\n    }\r\n    let modalConfig = compRef.instance.modalConfig;\r\n    if (!modalConfig) {\r\n      modalConfig = {\r\n        title: 'å±æ§éç½®',\r\n        width: 800,\r\n        height: 400,\r\n        showButtons: false\r\n      };\r\n    } else if (modalConfig.showButtons) {\r\n      modalConfig.buttons = compRef.instance.modalFooter;\r\n    }\r\n\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n\r\n    // çå¬å³é­æ¨¡ææ¡\r\n    if (compRef.instance.closeModal && compRef.instance.closeModal instanceof EventEmitter) {\r\n      compRef.instance.closeModal.subscribe((data) => {\r\n        // æ°æ®è½¬æ¢\r\n        if (data) {\r\n          this._convertModalShowValue(data);\r\n\r\n          const changeObject = {\r\n            propertyID: this.elementConfig.propertyID,\r\n            propertyValue: data\r\n          };\r\n          this.valueChanged.emit({ changeObject });\r\n\r\n        }\r\n\r\n        dialog.close();\r\n      });\r\n    }\r\n\r\n\r\n\r\n    // å¼¹åºæ¡å³é­äºä»¶ï¼å¸¦åæ°ï¼æ ¼å¼ä¸º{ value, parameters }\r\n    if (compRef.instance.submitModal && compRef.instance.submitModal instanceof EventEmitter) {\r\n      compRef.instance.submitModal.subscribe(data => {\r\n        if (!data) {\r\n          dialog.close();\r\n          return;\r\n        }\r\n        const { value, parameters } = data;\r\n        // æ°æ®è½¬æ¢\r\n        this._convertModalShowValue(value);\r\n\r\n        const changeObject = {\r\n          propertyID: this.elementConfig.propertyID,\r\n          propertyValue: value\r\n        };\r\n        this.submitModal.emit({ changeObject, parameters });\r\n\r\n        dialog.close();\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * æ¨¡ææ¡åºæ¯ä¸å°å±æ§å¼è½¬æ¢ä¸ºè¾å¥æ¡ä¸­æ¾ç¤ºçå¼\r\n   * @param value\r\n   */\r\n  private _convertModalShowValue(value) {\r\n    if (this.elementConfig.converter) {\r\n      this.elementShowValue = this.elementConfig.converter.convertTo(value);\r\n      return;\r\n    }\r\n    if (value && value instanceof Object) {\r\n      this.elementShowValue = JSON.stringify(value);\r\n      return;\r\n    }\r\n    this.elementShowValue = value;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, ViewChildren, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { ElementPropertyConfig } from '../../entity/property-entity';\r\nimport { FPropertyItemComponent } from '../farris-property-item/property-item.component';\r\nimport { PropertyItemComponent } from '../property-item/property-item.component';\r\n\r\n@Component({\r\n  selector: 'webide-property-item-list',\r\n  templateUrl: './property-item-list.component.html',\r\n  styleUrls: ['./property-item-list.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n\r\n})\r\nexport class PropertyItemListComponent implements OnChanges {\r\n  /** æä¸åç±»ä¸çå±æ§éç½® */\r\n  @Input() category: ElementPropertyConfig;\r\n  @Input() propertyData; // å±æ§å¼\r\n  @Input() dynamicControl = false;\r\n\r\n  @Output() valueChanged = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n  @Output() triggerRefreshPanel = new EventEmitter<any>();\r\n\r\n  @ViewChildren(PropertyItemComponent) items: Array<PropertyItemComponent>;\r\n  @ViewChildren(FPropertyItemComponent) fitems: Array<FPropertyItemComponent>;\r\n\r\n  // å®éå±æ§å¼\r\n  data;\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(simpleChanges: SimpleChanges) {\r\n    // è¥åç±»ä¸æpropertyDataï¼åååç±»ä¸çpropertyDataï¼å¦ååæ´ä½çpropertyData\r\n    if (this.category.propertyData && this.category.enableCascade) {\r\n      this.data = this.category.propertyData;\r\n    } else {\r\n      this.data = this.propertyData;\r\n    }\r\n\r\n    this.adaptProperties();\r\n\r\n  }\r\n  /**\r\n   * ééå±æ§\r\n   */\r\n  private adaptProperties() {\r\n    this.category.properties.forEach(propItem => {\r\n      if (propItem.propertyType === 'cascade') {\r\n        this.cascadeValueStringify(propItem, this.data[propItem.propertyID]);\r\n        if (Object.keys(propItem).indexOf('visible') < 0) {\r\n          propItem.visible = true;\r\n        }\r\n      }\r\n\r\n    });\r\n  }\r\n  refresh() {\r\n    // è¥åç±»ä¸æpropertyDataï¼åååç±»ä¸çpropertyDataï¼å¦ååæ´ä½çpropertyData\r\n    if (this.category.propertyData && this.category.enableCascade) {\r\n      this.data = this.category.propertyData;\r\n    } else {\r\n      this.data = this.propertyData;\r\n    }\r\n    this.items.forEach(item => item.refresh());\r\n    this.fitems.forEach(item => item.refresh());\r\n  }\r\n\r\n  /**\r\n   * ä¸è¬å±æ§åæ´\r\n   */\r\n  _itemChanged($event) {\r\n    const { changeObject } = $event;\r\n    this.data[changeObject.propertyID] = changeObject.propertyValue;\r\n\r\n    if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {\r\n      this.category.setPropertyRelates(changeObject, this.data);\r\n      this.items.forEach(item => item.refresh());\r\n      this.fitems.forEach(item => item.refresh());\r\n    }\r\n    changeObject.categoryId = this.category.categoryId;\r\n\r\n    if (this.category.enableCascade) {\r\n      changeObject.propertyPath = this.category.parentPropertyID;\r\n    }\r\n    this.valueChanged.emit(changeObject);\r\n  }\r\n\r\n  /**\r\n   * æ¨¡ææ¡æ°æ®åæ´ï¼TODO:å¾ä¼åï¼åå¹¶valueChangeäºä»¶ï¼\r\n   */\r\n  _submitModal($event) {\r\n    const { changeObject, parameters } = $event;\r\n    this.data[changeObject.propertyID] = changeObject.propertyValue;\r\n\r\n    if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {\r\n      this.category.setPropertyRelates(changeObject, this.data, parameters);\r\n      this.items.forEach(item => item.refresh());\r\n      this.fitems.forEach(item => item.refresh());\r\n    }\r\n\r\n    changeObject.categoryId = this.category.categoryId;\r\n    if (this.category.enableCascade) {\r\n      changeObject.propertyPath = this.category.parentPropertyID;\r\n    }\r\n    this.submitModal.emit($event);\r\n  }\r\n\r\n  /**\r\n   * çº§èå±æ§åæ´\r\n   */\r\n  _cascadeitemChanged($event, propItem) {\r\n    const parentPropertyID = propItem.propertyID;\r\n    if (!parentPropertyID) {\r\n      return;\r\n    }\r\n    const { changeObject } = $event;\r\n    if (!this.data[parentPropertyID]) {\r\n      this.data[parentPropertyID] = {};\r\n    }\r\n\r\n    this.data[parentPropertyID][changeObject.propertyID] = changeObject.propertyValue;\r\n\r\n    changeObject.categoryId = this.category.categoryId;\r\n\r\n    changeObject.parentPropertyID = changeObject.propertyPath = parentPropertyID;\r\n    // åç±»å¯ç¨äºçº§èï¼å¹¶ä¸åç±»ä¸æçº§èå±æ§\r\n    if (this.category.enableCascade) {\r\n      changeObject.propertyPath = this.category.parentPropertyID + '.' + changeObject.parentPropertyID;\r\n    }\r\n\r\n    if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {\r\n      this.category.setPropertyRelates(changeObject, this.data);\r\n      this.items.forEach(item => item.refresh());\r\n      this.fitems.forEach(item => item.refresh());\r\n    }\r\n\r\n    this.cascadeValueStringify(propItem, this.data[parentPropertyID]);\r\n    this.valueChanged.emit(changeObject);\r\n  }\r\n\r\n  /**\r\n   * çº§èæ¨¡ææ¡å±æ§åæ´\r\n   */\r\n  __cascadeitemSubmitModal($event, propItem) {\r\n    const parentPropertyID = propItem.propertyID;\r\n    if (!parentPropertyID) {\r\n      return;\r\n    }\r\n    const { changeObject, parameters } = $event;\r\n    if (!this.data[parentPropertyID]) {\r\n      this.data[parentPropertyID] = {};\r\n    }\r\n\r\n    this.data[parentPropertyID][changeObject.propertyID] = changeObject.propertyValue;\r\n\r\n    changeObject.categoryId = this.category.categoryId;\r\n\r\n    changeObject.parentPropertyID = changeObject.propertyPath = parentPropertyID;\r\n    // åç±»å¯ç¨äºçº§èï¼å¹¶ä¸åç±»ä¸æçº§èå±æ§\r\n    if (this.category.enableCascade) {\r\n      changeObject.propertyPath = this.category.parentPropertyID + '.' + changeObject.parentPropertyID;\r\n    }\r\n\r\n    if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {\r\n      this.category.setPropertyRelates(changeObject, this.data, parameters);\r\n      this.items.forEach(item => item.refresh());\r\n      this.fitems.forEach(item => item.refresh());\r\n    }\r\n\r\n    this.cascadeValueStringify(propItem, this.data[parentPropertyID]);\r\n\r\n    this.submitModal.emit($event);\r\n  }\r\n  /**\r\n   * çº§èå±æ§çæ±æ»ä¿¡æ¯\r\n   * @param propItem\r\n   * @param valueObject\r\n   */\r\n  cascadeValueStringify(propItem, valueObject) {\r\n    if (!propItem || !propItem.cascadeConfig) {\r\n      return;\r\n    }\r\n    if (!valueObject) {\r\n      propItem.cascadeSummary = '';\r\n      return;\r\n    }\r\n    if (!propItem.cascadeConverter || !propItem.cascadeConverter.convertTo) {\r\n      propItem.cascadeSummary = JSON.stringify(valueObject);\r\n    } else {\r\n      propItem.cascadeSummary = propItem.cascadeConverter.convertTo(valueObject, propItem.cascadeConfig);\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   *  å·²åºå¼\r\n   */\r\n  _checkCascadeVisible(propItem) {\r\n    if (Object.keys(propItem).indexOf('visible') < 0) {\r\n      return true;\r\n    } else {\r\n      return propItem.visible;\r\n    }\r\n  }\r\n\r\n\r\n  refreshPanel() {\r\n    this.triggerRefreshPanel.emit();\r\n  }\r\n\r\n  trackByPropId(index: number, PropItem: any): string {\r\n    return PropItem.propertyID;\r\n  }\r\n\r\n}\r\n","import {\r\n  Component, OnInit, Input, ViewChild, ElementRef, Output,\r\n  EventEmitter, OnChanges, SimpleChanges, ViewChildren, HostBinding\r\n} from '@angular/core';\r\nimport { ElementPropertyConfig, PropertyChangeObject } from '../../entity/property-entity';\r\nimport { PropertyItemListComponent } from '../property-item-list/property-item-list.component';\r\n\r\n@Component({\r\n  selector: 'app-property-panel',\r\n  templateUrl: './property-panel.component.html',\r\n  styleUrls: ['./property-panel.component.css']\r\n})\r\nexport class PropertyPanelComponent implements OnInit, OnChanges {\r\n  @Input() width: number;\r\n  @Input() height: number;\r\n\r\n  /** æ¯å¦ç½è²ä¸»é¢ */\r\n  @Input() isWhiteTheme = false;\r\n\r\n  /** æ¯å¦ææé¢æ¿çéèæ¾ç¤ºç¶æ */\r\n  @Input() isPersitOpenState = false;\r\n\r\n  /** isPersitOpenState=trueæ¶ï¼æ§å¶é¢æ¿æ¯å¦éèæ¾ç¤º */\r\n  @Input() isShowPanel = false;\r\n\r\n  /** isPersitOpenState=trueæ¶ï¼æåºé¢æ¿çå³é­äºä»¶ */\r\n  @Output() closePropertyPanel = new EventEmitter<any>();\r\n\r\n  /** å±æ§ç±»å */\r\n  @Input() propertyConfig: ElementPropertyConfig[];\r\n\r\n  /**  å±æ§å¼ */\r\n  @Input() propertyData = {};\r\n\r\n\r\n  @Input() dynamicControl = false;\r\n\r\n\r\n  /** å±æ§åæ´äºä»¶ */\r\n  @Output() propertyChanged = new EventEmitter<any>();\r\n\r\n  /** æ¨¡ææ¡å±æ§åæ´äºä»¶   */\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  /** æ¯å¦å±ç¤ºå³é­æé® */\r\n  @Input() showCloseBtn = true;\r\n\r\n\r\n  @ViewChild('east') private eastDiv: ElementRef;\r\n  @ViewChildren(PropertyItemListComponent) itemLists: Array<PropertyItemListComponent>;\r\n\r\n  /** å½åå±ç¤ºç¶æ */\r\n  isOpen = true;\r\n\r\n  /** å¤å±åç±»ï¼ä»¥æ ç­¾é¡µå½¢å¼å±ç¤º */\r\n  categoryTabs = [];\r\n\r\n  /** å½åéä¸­çæ ç­¾é¡µ */\r\n  selectedTab: any;\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.width) {\r\n      this.eastDiv.nativeElement.style.width = this.width + 'px';\r\n    } else {\r\n      this.eastDiv.nativeElement.style.width = 'inherit';\r\n    }\r\n    if (this.height) {\r\n      this.eastDiv.nativeElement.style.height = this.height + 'px';\r\n    } else {\r\n      this.eastDiv.nativeElement.style.height = '100%';\r\n    }\r\n\r\n\r\n    if (this.isPersitOpenState) {\r\n      this.isOpen = this.isShowPanel;\r\n    }\r\n\r\n    this.checkShowTabCategory();\r\n  }\r\n\r\n  /**\r\n   *  æ´æ¹é¢æ¿çéèæ¾ç¤ºç¶æï¼åªæå¨isPersitOpenState=trueæ¶çæ\r\n   */\r\n  ngOnChanges(simpleChanges: SimpleChanges) {\r\n    if (simpleChanges.isShowPanel && this.isPersitOpenState) {\r\n      this.isOpen = this.isShowPanel;\r\n    }\r\n    this.checkShowTabCategory();\r\n  }\r\n  refreshPanel() {\r\n    this.checkShowTabCategory();\r\n    this.itemLists.forEach(item => item.refresh());\r\n  }\r\n  changeStatus(item: any) {\r\n    if (this.propertyConfig.length < 2) {\r\n      return;\r\n    }\r\n    if (!item.status || item.status === 'open') {\r\n      item.status = 'closed';\r\n    } else {\r\n      item.status = 'open';\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  éèé¢æ¿\r\n   */\r\n  collapse() {\r\n    // isPersitOpenState=trueæ¶,ç±å¤é¨ç¡®å®ç¶æ\r\n    if (!this.isPersitOpenState) {\r\n      this.isOpen = false;\r\n    }\r\n    this.closePropertyPanel.emit();\r\n  }\r\n\r\n  /**\r\n   * æåºå±æ§åæ´äºä»¶\r\n   */\r\n  _valueChanged(changeObject: PropertyChangeObject) {\r\n    this.propertyChanged.emit(changeObject);\r\n  }\r\n  _submitModal($event: PropertyChangeObject) {\r\n    this.submitModal.emit($event);\r\n  }\r\n\r\n  /**\r\n   * å°å±æ§åç±»æç§æ ç­¾é¡µè¿è¡å½ç±»\r\n   */\r\n  private checkShowTabCategory() {\r\n    this.categoryTabs = [];\r\n    if (!this.propertyConfig || this.propertyConfig.length === 0) {\r\n      this.categoryTabs = [{\r\n        tabId: 'default',\r\n        tabName: 'å±æ§',\r\n        categoryList: []\r\n      }];\r\n      this.selectedTab = null;\r\n      return;\r\n    }\r\n    this.propertyConfig.forEach(config => {\r\n      if (config.tabId) {\r\n        const propTab = this.categoryTabs.find(t => t.tabId === config.tabId);\r\n        if (!propTab) {\r\n          this.categoryTabs.push({\r\n            tabId: config.tabId,\r\n            tabName: config.tabName,\r\n            categoryList: [config],\r\n            hide: config.hide || config.properties.length === 0\r\n          });\r\n        } else {\r\n\r\n          propTab.categoryList.push(config);\r\n          if (propTab.hide) {\r\n            propTab.hide = config.hide || config.properties.length === 0;\r\n          }\r\n        }\r\n      } else {\r\n        const defaultTab = this.categoryTabs.find(t => t.tabId === 'default');\r\n        if (!defaultTab) {\r\n          this.categoryTabs.push({\r\n            tabId: 'default',\r\n            tabName: 'å±æ§',\r\n            categoryList: [config]\r\n          });\r\n        } else {\r\n          defaultTab.categoryList.push(config);\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    // è®°å½å·²éçé¡µç­¾\r\n    if (this.selectedTab) {\r\n      const selectedTab = this.categoryTabs.find(tab => tab.tabId === this.selectedTab.tabId);\r\n      if (selectedTab) {\r\n        this.selectedTab = selectedTab;\r\n      }\r\n    } else {\r\n      this.selectedTab = this.categoryTabs[0];\r\n    }\r\n\r\n\r\n\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { BehaviorSubject, Subject, Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ComboService {\r\n    idField: string;\r\n    valueField: string;\r\n    textField: string;\r\n    mapFields: { [sourceField: string]: string };\r\n    private innerData: any = [];\r\n    get data() {\r\n        return this.innerData;\r\n    }\r\n    set data(val) {\r\n        this.innerData = val;\r\n        this.data$.next(val);\r\n    }\r\n    selectedValue: any;\r\n    selected$ = new Subject<any>();\r\n    isOpen$ = new BehaviorSubject<boolean>(false);\r\n    data$ = new BehaviorSubject<any>('');\r\n    // columns: any;\r\n\r\n    // injectService() {\r\n    //     if (this.injector && !this.comboHttp) {\r\n    //         this.lookupUtils = this.injector.get(LookupUtils, null);\r\n    //         if (this.displayType.indexOf('LOOKUP') > -1) {\r\n    //             this.comboHttp = this.injector.get(ServerSideToken, null);\r\n    //         } else {\r\n    //             this.comboHttp = this.injector.get(ComboServerSideToken, null);\r\n    //         }\r\n    //     }\r\n    // }\r\n    toBoolean(value: any): boolean {\r\n        return value != null && `${value}` !== 'false';\r\n    }\r\n    selectItem(data: any, index?: number) {\r\n        this.isOpen$.next(false);\r\n        this.selectedValue = data;\r\n        this.selected$.next(this.selectedValue);\r\n    }\r\n    unSelectItem(data: any) {\r\n        this.selectedValue = null;\r\n        this.selected$.next(null);\r\n    }\r\n    isSelect(id: any) {\r\n\r\n        return false;\r\n    }\r\n\r\n    // loadData(data: any, selectValues: string = '', callback) {\r\n    //     if (data) {\r\n    //         if (selectValues) {\r\n    //             if (selectValues.split) {\r\n    //                 // key æ¯å­ç¬¦ä¸²ï¼å¯è½æ¯æ¼èµ·æ¥ç\r\n    //                 const selectedItems = selectValues.split(',').map(val => {\r\n    //                     return callback(data, val);\r\n    //                 });\r\n    //\r\n    //                 this.selections = selectedItems;\r\n    //             } else {\r\n    //                 // keyä¸å¯split\r\n    //                 this.selections = [selectValues];\r\n    //             }\r\n    //         } else {\r\n    //             this.selections = [];\r\n    //         }\r\n    //         // this.selections$.next(this.selections);\r\n    //         // const _data = this.initData(data);\r\n    //         // this.updateState({...this._state, data: _data});\r\n    //     } else {\r\n    //         // this.updateState({ data: [], selections: [] });\r\n    //     }\r\n    // }\r\n    // filterData(val: string, filed: any = 'text') {\r\n    //     if (val) {\r\n    //         const data = this.data\r\n    //             ? this.data.filter(item => {\r\n    //                 if (item[filed]) {\r\n    //                     return String(item[filed]).indexOf(val) > -1;\r\n    //                 } else if (item.data && item.data[filed]) {\r\n    //                     return String(item.data[filed]).indexOf(val) > -1;\r\n    //                 }\r\n    //               })\r\n    //             : [];\r\n    //         this.data$.next(data);\r\n    //     }\r\n    // }\r\n    getSelected() {\r\n        return this.selectedValue;\r\n    }\r\n\r\n    // filterSelections(displayText: string) {\r\n    //     if (displayText && this.selections) {\r\n    //         const selections = displayText\r\n    //             .split(',')\r\n    //             .map(val => {\r\n    //                 return this.selections.find(d => d[this.textField] === val);\r\n    //             })\r\n    //             .filter(val => !!val);\r\n    //         this.selectedValues = this.getValue(this.valueField, selections);\r\n    //         this.selections = selections;\r\n    //     }\r\n    // }\r\n\r\n    // clearSelections() {\r\n    //     this.selections = [];\r\n    // }\r\n\r\n    getValue(prop: string, selections?: any): any {\r\n        // selections = selections ? selections : this.selections;\r\n        // if (selections && selections.length) {\r\n        //     // if (this.mapFields) {\r\n        //     //     const helpFields = Object.keys(this.mapFields);\r\n        //     //     helpFields.forEach( (f: any) => {\r\n        //     //         if (this.mapFields[f] === prop) {\r\n        //     //             prop = f;\r\n        //     //             return;\r\n        //     //         }\r\n        //     //     });\r\n        //     // }\r\n        //\r\n        //     // if (selections.length === 1) {\r\n        //     //     return this.getValueByObj(prop, selections[0]);\r\n        //     // }\r\n        //\r\n        //     const tmp = selections\r\n        //         .map(item => {\r\n        //             return this.getValueByObj(prop, item);\r\n        //         })\r\n        //         .join(',');\r\n        //     return tmp;\r\n        // }\r\n        if (this.selectedValue) {\r\n            return this.getValueByObj(prop, this.selectedValue);\r\n        }\r\n        return '';\r\n    }\r\n    getValueByObj(field: string, data: any) {\r\n        if (!data) {\r\n            return '';\r\n        }\r\n        let resultVal = '';\r\n        if (field.indexOf('.') === -1) {\r\n            resultVal = data[field];\r\n        } else {\r\n            resultVal = field.split('.').reduce((obj, key) => {\r\n                if (obj) {\r\n                    return obj[key];\r\n                } else {\r\n                    return null;\r\n                }\r\n            }, data);\r\n        }\r\n        return resultVal;\r\n    }\r\n\r\n    // initData() {\r\n    //     // this.loadDataTable(this.data || []);\r\n    //     // switch (this.displayType) {\r\n    //     //     case 'TreeList': {\r\n    //     //         this.getData().subscribe(data => this.loadDataTree(data));\r\n    //     //         break;\r\n    //     //     }\r\n    //     //     case 'LIST': {\r\n    //     //         // List\r\n    //     //         this.getData().subscribe(data => this.loadDataTable(data));\r\n    //     //         break;\r\n    //     //     }\r\n    //     //     // case 'LOOKUPLIST': {\r\n    //     //     //     // List\r\n    //     //     //     this.getData().subscribe(data =>\r\n    //     //     //         this.loadLookUpDataTable(data)\r\n    //     //     //     );\r\n    //     //     //     break;\r\n    //     //     // }\r\n    //     //     // case 'LOOKUPTREELIST': {\r\n    //     //     //     // List\r\n    //     //     //     this.getData().subscribe(data => this.loadLookUpDataTree(data));\r\n    //     //     //     break;\r\n    //     //     // }\r\n    //     // }\r\n    // }\r\n\r\n    // getData(): Observable<any> {\r\n    //     // if (this.uri) {\r\n    //     //     const params = {};\r\n    //     //     this.showLoading();\r\n    //     //     if (this.comboHttp) {\r\n    //     //         return this.comboHttp.getData(this.uri);\r\n    //     //     } else {\r\n    //     //         return this.http.get(this.uri);\r\n    //     //     }\r\n    //     // } else {\r\n    //         if (this.data) {\r\n    //             return of(this.data);\r\n    //         } else {\r\n    //             return of([]);\r\n    //         }\r\n    //     // }\r\n    // }\r\n    // loadDataTable(data: any) {\r\n    //     if (data instanceof Array) {\r\n    //         this.data = data;\r\n    //     } else {\r\n    //         this.data = data.returnValue;\r\n    //     }\r\n    //     this.loadData(this.data, this.selectedValues, (dataArr, val) => {\r\n    //         // tslint:disable-next-line:triple-equals\r\n    //         return dataArr.find(d => d[this.idField] + '' == val);\r\n    //     });\r\n    //     // this.closeLoading();\r\n    // }\r\n    // loadDataTree(data: any) {\r\n    //     if (data instanceof Array) {\r\n    //         this.data = data;\r\n    //     } else {\r\n    //         this.data = data.returnValue;\r\n    //     }\r\n    //     this.loadData(this.data, this.selectedValues, (dataArr, val) => {\r\n    //         return eachData(dataArr, val, this.idField);\r\n    //         function eachData(paramData, paramVal, idField) {\r\n    //             let rtnData: any = '';\r\n    //             paramData.find(d => {\r\n    //                 // tslint:disable-next-line:triple-equals\r\n    //                 if (d.data[idField] == paramVal) {\r\n    //                     rtnData = d.data;\r\n    //                     return true;\r\n    //                 } else if (d.children && d.children.length) {\r\n    //                     rtnData = eachData(d.children, paramVal, idField);\r\n    //                 } else {\r\n    //                     return false;\r\n    //                 }\r\n    //             });\r\n    //             return rtnData;\r\n    //         }\r\n    //     });\r\n    //     // this.closeLoading();\r\n    // }\r\n    // loadLookUpDataTable(resData: any) {\r\n    //     if (resData.returnValue) {\r\n    //         resData = resData.returnValue;\r\n    //     }\r\n    //     this.columns = resData.columns;\r\n    //     this.pageInfo = resData.pageInfo;\r\n    //     this.data = resData.items;\r\n    //     this.loadData(this.data, this.selectedValues, (dataArr, val) => {\r\n    //         // tslint:disable-next-line: triple-equals\r\n    //         return dataArr.find(d => d[this.idField] + '' == val);\r\n    //     });\r\n    //     this.closeLoading();\r\n    // }\r\n    // loadLookUpDataTree(resData: any) {\r\n    //     if (resData.returnValue) {\r\n    //         resData = resData.returnValue;\r\n    //     }\r\n    //     this.columns = resData.columns;\r\n    //     const treeInfo = resData.treeInfo;\r\n    //     // tslint:disable-next-line: no-string-literal\r\n    //     if (!treeInfo['treeDataIsInit']) {\r\n    //         if (treeInfo.layerType.toLowerCase() === 'pathcode') {\r\n    //             this.data = this.lookupUtils.makeTree(resData.items, treeInfo);\r\n    //         } else {\r\n    //             this.data = this.lookupUtils.makeTreeWithParentID(\r\n    //                 resData.items,\r\n    //                 '',\r\n    //                 `${treeInfo.dataField}.${treeInfo.parentField}`,\r\n    //                 this.idField\r\n    //             );\r\n    //         }\r\n    //     }\r\n    //     this.loadData(this.data, this.selectedValues, (dataArr, val) => {\r\n    //         return eachData(dataArr, val, this.idField);\r\n    //         function eachData(paramData, paramVal, idField) {\r\n    //             let rtnData: any = '';\r\n    //             paramData.find(d => {\r\n    //                 // tslint:disable-next-line:triple-equals\r\n    //                 if (d.data[idField] == paramVal) {\r\n    //                     rtnData = d.data;\r\n    //                     return true;\r\n    //                 } else if (d.children && d.children.length) {\r\n    //                     rtnData = eachData(d.children, paramVal, idField);\r\n    //                 } else {\r\n    //                     return false;\r\n    //                 }\r\n    //             });\r\n    //             return rtnData;\r\n    //         }\r\n    //     });\r\n    //     this.closeLoading();\r\n    // }\r\n    // private showLoading() {\r\n    //     this.loading = this.loadingService.show();\r\n    // }\r\n    // closeLoading() {\r\n    //     if (this.loading) {\r\n    //         this.loading.close();\r\n    //         this.loading = null;\r\n    //     }\r\n    // }\r\n}\r\n","import {\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ElementRef,\r\n    ChangeDetectorRef,\r\n    Renderer2,\r\n    ViewChild,\r\n    AfterViewInit,\r\n    OnDestroy,\r\n    Inject,\r\n    Injector, Component, ChangeDetectionStrategy, ViewEncapsulation, forwardRef\r\n} from '@angular/core';\r\nimport { Subject, fromEvent, interval } from 'rxjs';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { takeUntil, filter, skip, debounceTime, throttle } from 'rxjs/operators';\r\nimport { ComboService } from './combo.service';\r\nimport { InputGroupComponent } from '@farris/ui-input-group';\r\nimport { SelectItem } from './combo.interface';\r\n\r\nlet nextUniqueId = 0;\r\n/**\r\n * å·²åºå¼ï¼ç»ä¸ä½¿ç¨@farris/ui-combo-list\r\n */\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'farris-editable-combo-list',\r\n    templateUrl: './combo-list.component.html',\r\n    styleUrls: ['./combo-list.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => ComboListComponent),\r\n            multi: true\r\n        },\r\n        ComboService\r\n    ]\r\n})\r\nexport class ComboListComponent implements OnInit, AfterViewInit, OnDestroy, ControlValueAccessor {\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() editable = true;\r\n    @Input() placeholder = 'è¯·éæ©';\r\n    @Input() panelWidth = 300;\r\n    @Input() panelHeight = 300;\r\n    @Input() autoWidth = true;\r\n    @Input() enableClear = true;\r\n    @Input() mappingField: string;\r\n    @Input()\r\n    // set data(val: any) {\r\n    //     this.comboService.data = val;\r\n    // }\r\n    // get data() {\r\n    //     return this.comboService.data;\r\n    // }\r\n    data: any;\r\n    @Input()\r\n    set idField(val: string) {\r\n        this.comboService.idField = val;\r\n    }\r\n    get idField() {\r\n        return this.comboService.idField;\r\n    }\r\n    @Input()\r\n    set valueField(val: string) {\r\n        this.comboService.valueField = val;\r\n    }\r\n    get valueField() {\r\n        return this.comboService.valueField;\r\n    }\r\n    @Input()\r\n    set textField(val: string) {\r\n        this.comboService.textField = val;\r\n    }\r\n    get textField() {\r\n        return this.comboService.textField;\r\n    }\r\n\r\n    @Output() showPanel = new EventEmitter();\r\n    @Output() hidePanel = new EventEmitter();\r\n    @Output() clear = new EventEmitter();\r\n    @Output() valueChange = new EventEmitter<string>();\r\n    @Output() selectChange = new EventEmitter<any>();\r\n\r\n    // tslint:disable-next-line:variable-name\r\n    _cmbPanel: ElementRef = null;\r\n    @ViewChild('comboPanel') set cmbPanel(cmp: ElementRef) {\r\n        this._cmbPanel = cmp;\r\n        this.comboPanelCreated$.next(cmp);\r\n    }\r\n    @ViewChild('input') input: InputGroupComponent;\r\n    isOpen = false;\r\n    groupIcon = '<span class=\"f-icon f-icon-arrow-60-down\"></span>';\r\n    private comboPanelCreated$ = new Subject();\r\n    private destroy$ = new Subject();\r\n    private documentClickEvent: () => void;\r\n    ngControl: any = null;\r\n    displayText = '';\r\n    private value: any;\r\n\r\n    onChange: (value: string | string[]) => void = () => null;\r\n    onTouched: () => void = () => null;\r\n\r\n    constructor(\r\n        protected el: ElementRef,\r\n        protected cdr: ChangeDetectorRef,\r\n        @Inject(DOCUMENT) protected document: any,\r\n        protected render: Renderer2,\r\n        protected comboService: ComboService,\r\n        protected injector: Injector\r\n    ) {\r\n        const container = this.creatContainer();\r\n        const panel = this.creatPanel(container);\r\n        this.comboPanelCreated$\r\n            .pipe(\r\n                takeUntil(this.destroy$),\r\n                filter(v => !!v)\r\n            )\r\n            .subscribe((cmp: ElementRef) => {\r\n                panel.appendChild(cmp.nativeElement);\r\n                this.updatePosition();\r\n            });\r\n        this.destroy$.subscribe(() => {\r\n            // this.render.removeChild('body', container);\r\n            if (document.body.contains(container) && container.contains(panel)) {\r\n                container.removeChild(panel);\r\n            }\r\n            nextUniqueId = 0;\r\n        });\r\n        this.comboService.isOpen$\r\n            .pipe(\r\n                takeUntil(this.destroy$),\r\n                skip(1)\r\n            )\r\n            .subscribe(val => {\r\n                if (val) {\r\n                    this.documentClickEvent = this.render.listen('document', 'click', (event: any) => {\r\n                        if (\r\n                            !this.el.nativeElement.contains(event.target) &&\r\n                            (this._cmbPanel && !this.contains(this._cmbPanel, event))\r\n                        ) {\r\n                            this.isOpen = false;\r\n                            this.removeDocumentListener();\r\n                            this.cdr.markForCheck();\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.removeDocumentListener();\r\n                }\r\n                this.isOpen = !!val;\r\n                this.cdr.markForCheck();\r\n            });\r\n        this.comboService.selected$.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n            this.displayText = this.comboService.getValue(this.textField);\r\n            this.value = this.comboService.getValue(this.idField);\r\n            if (this.data && this.data.length > 0) {\r\n                this.onChange(this.value);\r\n                this.valueChange.emit(this.value);\r\n            } else {\r\n                this.updateMappingFieldValue();\r\n                this.onChange(this.displayText);\r\n                this.valueChange.emit(this.displayText);\r\n            }\r\n            this.cdr.detectChanges();\r\n            // this.focus();\r\n            // this.blur();\r\n        });\r\n    }\r\n    onClick() {\r\n        this.comboService.isOpen$.next(!this.isOpen);\r\n    }\r\n    private removeDocumentListener() {\r\n        if (this.documentClickEvent) {\r\n            this.documentClickEvent();\r\n            this.documentClickEvent = null;\r\n        }\r\n    }\r\n    onBlur(e) {\r\n        this.onTouched();\r\n    }\r\n    blur() {\r\n        this.input.textbox.nativeElement.blur();\r\n    }\r\n    focus() {\r\n        this.input.textbox.nativeElement.focus();\r\n    }\r\n    onClear() {\r\n        this.value = '';\r\n        this.comboService.selectedValue = null;\r\n        this.comboService.isOpen$.next(false);\r\n        this.comboService.selected$.next([]);\r\n        // this.updateMappingFieldValue();\r\n        // this.onChange('');\r\n        // this.onTouched();\r\n        this.clear.emit();\r\n    }\r\n    updateMappingFieldValue() {\r\n        if (\r\n            this.ngControl &&\r\n            this.ngControl.formDirective &&\r\n            this.ngControl.formDirective.form &&\r\n            this.ngControl.formDirective.form.bindingData\r\n        ) {\r\n            const bindingData = this.ngControl.formDirective.form.bindingData;\r\n            const bindingPath = this.ngControl.formDirective.form.bindingPath;\r\n            let pathArr = [];\r\n            if (bindingPath) {\r\n                pathArr = bindingPath.split('/').filter(n => n !== '');\r\n            }\r\n            this.mappingField = this.mappingField ? this.mappingField : '';\r\n            bindingData.setValue(pathArr.concat(this.mappingField.split('.')), this.value, true, true);\r\n        }\r\n    }\r\n    updateSelectedValues() {\r\n        if (\r\n            this.ngControl &&\r\n            this.ngControl.formDirective &&\r\n            this.ngControl.formDirective.form &&\r\n            this.ngControl.formDirective.form.bindingData\r\n        ) {\r\n            const bindingData = this.ngControl.formDirective.form.bindingData;\r\n            const bindingPath = this.ngControl.formDirective.form.bindingPath;\r\n            let pathArr = [];\r\n            if (bindingPath) {\r\n                pathArr = bindingPath.split('/').filter(n => n !== '');\r\n            }\r\n            this.mappingField = this.mappingField ? this.mappingField : '';\r\n            this.value = bindingData.getValue(pathArr.concat(this.mappingField.split('.')));\r\n        }\r\n    }\r\n    onValueChange(val) {\r\n        this.value = val;\r\n        this.onChange(val);\r\n        this.valueChange.emit(val);\r\n        // if (!this.multiSelect) {\r\n        //     this.comboService.serachValue$.next(val);\r\n        // }\r\n        // this.comboService.filterSelections(val);\r\n        // this.valueChange.emit(val);\r\n        // if (!this.uri && this.data && this.data.length > 0) {\r\n        //     this.onChange(this.selectedValues);\r\n        // } else {\r\n        //     this.onChange(this.displayText);\r\n        // }\r\n        // this.updateMappingFieldValue();\r\n    }\r\n    updatePosition() {\r\n        if (this.autoWidth) {\r\n            const { width } = this.input.el.nativeElement.getBoundingClientRect();\r\n            this.panelWidth = width ? width : this.panelWidth;\r\n        }\r\n        let { left, top } = this.el.nativeElement.getBoundingClientRect();\r\n        if (top + this.panelHeight > window.innerHeight && top - this.panelHeight > 0) {\r\n            top = top - this.panelHeight - 27;\r\n        }\r\n        return {\r\n            left: left + 'px',\r\n            top: top + 27 + 'px',\r\n            width: this.panelWidth + 'px',\r\n            height: this.panelHeight + 'px'\r\n        };\r\n    }\r\n    contains(el: ElementRef, event: any) {\r\n        return el.nativeElement.contains(event.target);\r\n    }\r\n    creatContainer() {\r\n        let container = this.document.querySelector('.overlay-container');\r\n        if (!container) {\r\n            container = this.document.createElement('div');\r\n            container.classList.add('overlay-container');\r\n        }\r\n        this.document.body.appendChild(container);\r\n\r\n        return container;\r\n    }\r\n    creatPanel(host: HTMLElement) {\r\n        const pane = this.document.createElement('div');\r\n\r\n        pane.id = `overlay-${nextUniqueId++}`;\r\n        pane.classList.add('overlay-pane');\r\n        host.appendChild(pane);\r\n\r\n        return pane;\r\n    }\r\n    writeValue(value: any): void {\r\n        this.displayText = value;\r\n        this.cdr.markForCheck();\r\n    }\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n        this.cdr.markForCheck();\r\n    }\r\n    ngOnInit() {}\r\n    ngAfterViewInit() {\r\n        // tslint:disable-next-line: deprecation\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n        if (!this.valueField && this.idField) {\r\n            this.valueField = this.idField;\r\n        }\r\n        fromEvent(window, 'resize')\r\n            .pipe(\r\n                debounceTime(100),\r\n                throttle(ev => interval(100)),\r\n                takeUntil(this.destroy$)\r\n            )\r\n            .subscribe(() => {\r\n                const { width } = this.input.el.nativeElement.getBoundingClientRect();\r\n                this.panelWidth = width;\r\n                this.comboService.isOpen$.next(false);\r\n            });\r\n        // this.comboService.injectService();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    onSelect(value: SelectItem) {\r\n        const {data, index} = {...value};\r\n        this.comboService.selectItem(data, index);\r\n        this.selectChange.emit({data, index});\r\n        this.focus();\r\n    }\r\n\r\n    onUnSelected(value: SelectItem) {\r\n        const {data} = {...value};\r\n        this.comboService.unSelectItem(data);\r\n        // console.log(data);\r\n        this.focus();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ComboListComponent } from './combo-list.component';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { DatalistModule } from '@farris/ui-datalist';\r\n\r\n@NgModule({\r\n    declarations: [ ComboListComponent ],\r\n    imports: [ CommonModule, FormsModule, InputGroupModule, DatalistModule ],\r\n    exports: [ ComboListComponent ]\r\n})\r\nexport class ComboListModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PopoverModule } from '@farris/ui-popover';\r\n//  import { PopoverModule } from '../popover/popover.module';\r\nimport { PropertyPanelComponent } from './components/property-panel/property-panel.component';\r\nimport { PropertyItemListComponent } from './components/property-item-list/property-item-list.component';\r\nimport { PropertyItemComponent } from './components/property-item/property-item.component';\r\nimport { FPropertyItemComponent } from './components/farris-property-item/property-item.component';\r\n\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { ComboListModule } from '../combo-list/combo-list.module';\r\nimport { ComboListModule as FarrisComboListModule } from '@farris/ui-combo-list';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { PropertyEditorModule } from '@farris/property-editor';\r\n\r\nimport { TextboxPropertyComponent } from './controls/textbox.component';\r\nimport { NumberPropertyComponent } from './controls/number.component';\r\nimport { CombolistPropertyComponent } from './controls/combolist.component';\r\nimport { DatePropertyComponent } from './controls/date.component';\r\nimport { ModalPropertyComponent } from './controls/modal.component';\r\nimport { UniformPropertyComponent } from './controls/unity.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        PropertyPanelComponent,\r\n        PropertyItemListComponent,\r\n        PropertyItemComponent,\r\n        TextboxPropertyComponent,\r\n        NumberPropertyComponent,\r\n        CombolistPropertyComponent,\r\n        DatePropertyComponent,\r\n        ModalPropertyComponent,\r\n        UniformPropertyComponent,\r\n        FPropertyItemComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        PopoverModule,\r\n        ComboListModule,\r\n        NotifyModule.forRoot(),\r\n        ModalModule.forRoot(),\r\n        FarrisDatePickerModule,\r\n        FarrisComboListModule,\r\n        NumberSpinnerModule,\r\n        PropertyEditorModule\r\n    ],\r\n    exports: [\r\n        PropertyPanelComponent,\r\n    ],\r\n    entryComponents: [\r\n        PropertyPanelComponent,\r\n        PropertyItemComponent,\r\n        TextboxPropertyComponent,\r\n        NumberPropertyComponent,\r\n        CombolistPropertyComponent,\r\n        DatePropertyComponent,\r\n        ModalPropertyComponent,\r\n        UniformPropertyComponent\r\n    ]\r\n})\r\nexport class PropertyPanelModule {\r\n    constructor() { }\r\n}\r\n"],"names":["ComboListModule","FarrisComboListModule"],"mappings":"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"}
