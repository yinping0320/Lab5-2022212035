/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-08-14 15:22:21
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-08-15 16:44:15
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
import { Component, Input, ContentChild, HostBinding, ViewChild, Optional, NgZone, Injector, ElementRef, Renderer2, ChangeDetectorRef, } from "@angular/core";
import { FarrisSectionTitleDirective } from "./directive/section-title.directive";
import { FarrisSectionHeaderDirective } from "./directive/section-header.directive";
import { FarrisSectionHcontentDirective } from "./directive/section-hcontent.directive";
import { FarrisSectionToolbarDirective, FarrisSectionViewChangeDirective, } from "./directive/section-toolbar.directive";
import { FarrisSectionExtendDirective } from "./directive/section-extend.directive";
import { FarrisSectionContentDirective } from "./directive/section-content.directive";
import { Observable, Subject, of } from "rxjs";
import ResizeObserver from "resize-observer-polyfill";
import { map, debounceTime } from "rxjs/operators";
import { CommonUtils } from "@farris/ui-common";
var FarrisSectionComponent = /** @class */ (function () {
    function FarrisSectionComponent(inject) {
        this.inject = inject;
        this.contentCls = "";
        this.maxStatus = false;
        this.baseCls = true;
        this.maxStatusCls = false;
        // 是否显示header
        this.showHeader = true;
        // 是否支持最大化
        this.enableMaximize = false;
        // 最大化时，内容是否填充——一般表格填充、表单填写区域是滚动
        this.maxContentFill = true;
        /**
         * 是否启用収折功能
         * 默认不启用収折,值为''
         * 启用默认収折,值为'default'
         * 启用自定义収折,值为 'custom'
         *
         */
        this.enableAccordion = "";
        // section是否铺满
        this.fill = false;
        // 默认是是否展开
        this.expandStatus = true;
        // 就来按钮位置
        this.toolbarPosition = "";
        //
        this.toolbarBtns = [];
        // 工具栏按钮
        this._toolbar = null;
        //标记按钮工具栏是否隐藏[更多]按钮
        this.toolbarDpHidden = true;
        // 参照Tab中这样的处理方式有问题----延后修改
        // 是否被禁用的状态
        // 按照之前的逻辑，如果没有找到key，就说明被禁用
        this._disableDatas = new Subject();
        // 按照之前的逻辑，如果没有找到key，就说明可见
        this._visibleDatas = new Subject();
        this.clickThrottleTime = 350;
        this.clickItems = new Subject();
        // 用于计算响应时
        this.ro = null;
        this.resizeEl = null;
        // 当宽度改变时，强制收起下拉菜单 
        this.dpState = [false];
        // 下拉菜单的参照元素
        this.referEl = null;
        // 初始的父元素
        this.initParent = null;
        this.initSibling = null;
        this.inMoreButtonContents = [];
        if (this.inject) {
            this.ngZone = this.inject.get(NgZone, null);
            this.renderer = this.inject.get(Renderer2, null);
            this.elSelf = this.inject.get(ElementRef, null);
            this.cdRef = this.inject.get(ChangeDetectorRef, null);
            this.commonUtils = this.inject.get(CommonUtils, new CommonUtils());
            this.nativeEl = this.inject.get(ElementRef, null);
            this.referEl = this.nativeEl.nativeElement;
        }
    }
    Object.defineProperty(FarrisSectionComponent.prototype, "fillCls", {
        // @HostBinding("class.f-section-maximize-scroll-content") maxScroll:boolean = false;
        get: 
        // @HostBinding("class.f-section-maximize-scroll-content") maxScroll:boolean = false;
        /**
         * @return {?}
         */
        function () {
            return this.fill;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisSectionComponent.prototype, "enableAccordionCls", {
        get: /**
         * @return {?}
         */
        function () {
            return this.enableAccordion == "default";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisSectionComponent.prototype, "enableCollapseCls", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.enableAccordion === "default" ||
                this.enableAccordion === "custom") {
                return !this.expandStatus;
            }
            else {
                return false;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisSectionComponent.prototype, "enableCustomAccordionCls", {
        get: /**
         * @return {?}
         */
        function () {
            return this.enableAccordion == "custom";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisSectionComponent.prototype, "toolbar", {
        get: /**
         * @return {?}
         */
        function () {
            return this._toolbar;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                this._toolbar = value;
                // 计算位置
                this.toolbarPosition = this.getToolbarPosition();
                //
                this.toolbarBtns = tslib_1.__spread(this.toolbar.contents);
                this.inMoreButtonContents = [];
                // 绑定事件
                this.bindResizeEvent();
                // 调整界面
                this.afterBindToolbarData();
            }
            else {
                this._toolbar = null;
                // 有位置
                this.toolbarPosition = "";
                this.toolbarBtns = [];
                this.inMoreButtonContents = [];
                // 移除绑定事件
                this.unBindResizeEvent();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisSectionComponent.prototype, "btnStates", {
        set: /**
         * @param {?} values
         * @return {?}
         */
        function (values) {
            if (values) {
                if (this._disableDatas &&
                    this._disableDatas.hasOwnProperty("unsubscribe")) {
                    this._disableDatas["unsubscribe"]();
                }
                this._disableDatas = values;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisSectionComponent.prototype, "btnVisible", {
        // 是否可见的状态
        set: 
        // 是否可见的状态
        /**
         * @param {?} values
         * @return {?}
         */
        function (values) {
            if (values) {
                if (this._visibleDatas &&
                    this._visibleDatas.hasOwnProperty("unsubscribe")) {
                    this._visibleDatas["unsubscribe"]();
                }
                this._visibleDatas = values;
            }
        },
        enumerable: true,
        configurable: true
    });
    // 用于提供循环效率
    // 用于提供循环效率
    /**
     * @param {?} index
     * @param {?} btn
     * @return {?}
     */
    FarrisSectionComponent.prototype.trackByButton = 
    // 用于提供循环效率
    /**
     * @param {?} index
     * @param {?} btn
     * @return {?}
     */
    function (index, btn) {
        return btn.id;
    };
    /**
     * @return {?}
     */
    FarrisSectionComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // 标记点击事件
        this.clickSubscription = this.clickItems
            .pipe(debounceTime(this.clickThrottleTime))
            .subscribe((/**
         * @param {?} btnInfo
         * @return {?}
         */
        function (btnInfo) {
            if (btnInfo.click && typeof btnInfo.click == "function") {
                btnInfo.click({ context: _this.context });
            }
        }));
        // 绑定状态
        this._disableDatas.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            // 调整按钮可用状态
            _this.changeState(data, "disable");
        }));
        this._visibleDatas.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            // 调整按钮可见状态
            _this.changeState(data, "visible");
            // 重新判断是否需要显示下拉            
            _this._calculateToolbarDropdownIsShow();
            _this._calculateButtonsShow();
        }));
        // 如果有inject，取到元素本身
        if (this.elSelf) {
            this.initParent = this.elSelf.nativeElement.parentElement;
        }
    };
    /**
    * Ximena 23.08.30 判断是否可见,独立出来
    * Todo:
    * 1、现在btnVisible每次的变更都是全量，是否需要记录每次变更，然后合并计算？
    * 2、现在判断是否可见的方法，是直接更新界面的，每个按钮上都绑定了这个方法，会有性能问题。应该改成处理在绑定的所有数据，然后更新界面。
    * 3、是否可见和禁用有同样的问题
    * @param id
    * @returns
    */
    /**
     * 获取按钮配置中，禁用、可见的属性
     * @param id
     * @param stateProp
     */
    /**
         * Ximena 23.08.30 判断是否可见,独立出来
         * Todo:
         * 1、现在btnVisible每次的变更都是全量，是否需要记录每次变更，然后合并计算？
         * 2、现在判断是否可见的方法，是直接更新界面的，每个按钮上都绑定了这个方法，会有性能问题。应该改成处理在绑定的所有数据，然后更新界面。
         * 3、是否可见和禁用有同样的问题
         * @param id
         * @returns
         */
    /**
     * 获取按钮配置中，禁用、可见的属性
     * @param {?} btnItem
     * @param {?} stateProp
     * @return {?}
     */
    FarrisSectionComponent.prototype.getState = /**
         * Ximena 23.08.30 判断是否可见,独立出来
         * Todo:
         * 1、现在btnVisible每次的变更都是全量，是否需要记录每次变更，然后合并计算？
         * 2、现在判断是否可见的方法，是直接更新界面的，每个按钮上都绑定了这个方法，会有性能问题。应该改成处理在绑定的所有数据，然后更新界面。
         * 3、是否可见和禁用有同样的问题
         * @param id
         * @returns
         */
    /**
     * 获取按钮配置中，禁用、可见的属性
     * @param {?} btnItem
     * @param {?} stateProp
     * @return {?}
     */
    function (btnItem, stateProp) {
        if (btnItem.hasOwnProperty(stateProp)) {
            return btnItem[stateProp];
        }
        // 不存在属性
        if (stateProp == "visible") {
            return true;
        }
        return false;
    };
    /**
     * 改变可用状态
     * @param values
     */
    /**
     * 改变可用状态
     * @private
     * @param {?} values
     * @param {?} stateProp
     * @return {?}
     */
    FarrisSectionComponent.prototype.changeState = /**
     * 改变可用状态
     * @private
     * @param {?} values
     * @param {?} stateProp
     * @return {?}
     */
    function (values, stateProp) {
        var _this = this;
        /** @type {?} */
        var idArray = Object.keys(values);
        idArray.forEach((/**
         * @param {?} id
         * @return {?}
         */
        function (id) {
            /** @type {?} */
            var state = values[id];
            /** @type {?} */
            var item = _this._findItemByID(id, _this.toolbarBtns);
            if (item) {
                item[stateProp] = state;
            }
        }));
        this.toolbar.contents.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            /** @type {?} */
            var findId = idArray.find((/**
             * @param {?} id
             * @return {?}
             */
            function (id) { return id == item.id; }));
            if (findId) {
                item[stateProp] = values[findId];
            }
            if (item['children'] && item['children'].length > 0) {
                // 数据源只有一级的下拉
                /** @type {?} */
                var dpChildren = item.children;
                dpChildren.forEach((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) {
                    /** @type {?} */
                    var findId = idArray.find((/**
                     * @param {?} id
                     * @return {?}
                     */
                    function (id) { return id == item.id; }));
                    if (findId) {
                        item[stateProp] = values[findId];
                    }
                }));
            }
        }));
        this.inMoreButtonContents.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            /** @type {?} */
            var findId = idArray.find((/**
             * @param {?} id
             * @return {?}
             */
            function (id) { return id == item.id; }));
            if (findId) {
                item[stateProp] = values[findId];
            }
            if (item['children'] && item['children'].length > 0) {
                // 数据源只有一级的下拉
                /** @type {?} */
                var dpChildren = item.children;
                dpChildren.forEach((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) {
                    /** @type {?} */
                    var findId = idArray.find((/**
                     * @param {?} id
                     * @return {?}
                     */
                    function (id) { return id == item.id; }));
                    if (findId) {
                        item[stateProp] = values[findId];
                    }
                }));
            }
        }));
        this.dpState = [false];
        this.cdRef && !this.cdRef['destroyed'] && this.cdRef.detectChanges();
    };
    /**
     * 查找-支持一级下拉
     * @param id
     * @param datas
     */
    /**
     * 查找-支持一级下拉
     * @private
     * @param {?} id
     * @param {?} datas
     * @return {?}
     */
    FarrisSectionComponent.prototype._findItemByID = /**
     * 查找-支持一级下拉
     * @private
     * @param {?} id
     * @param {?} datas
     * @return {?}
     */
    function (id, datas) {
        /** @type {?} */
        var result;
        /** @type {?} */
        var flag = false;
        /** @type {?} */
        var len = datas.length;
        for (var k = 0; k++; k < len) {
            if (datas[k].id == id) {
                flag = true;
                result = datas[k];
            }
            else if (datas[k]["children"] && datas[k]["children"].length > 0) {
                /** @type {?} */
                var tIndex = datas[k]["children"].findIndex((/**
                 * @param {?} btnItem
                 * @return {?}
                 */
                function (btnItem) { return btnItem.id == id; }));
                if (tIndex > -1) {
                    flag = true;
                    result = datas[k]["children"][tIndex];
                }
            }
            if (flag)
                break;
        }
        return result;
    };
    /**
     * @return {?}
     */
    FarrisSectionComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.clickSubscription) {
            this.clickSubscription.unsubscribe();
            this.clickSubscription = null;
        }
        if (this._visibleDatas &&
            this._visibleDatas.hasOwnProperty("unsubscribe")) {
            this._visibleDatas["unsubscribe"]();
            this._visibleDatas = null;
        }
        if (this._disableDatas &&
            this._disableDatas.hasOwnProperty("unsubscribe")) {
            this._disableDatas["unsubscribe"]();
            this._disableDatas = null;
        }
        this.unBindResizeEvent();
    };
    /**
     * 绑定限制
     */
    /**
     * 绑定限制
     * @private
     * @return {?}
     */
    FarrisSectionComponent.prototype.bindResizeEvent = /**
     * 绑定限制
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        // 标记响应时
        if (this.ngZone && this.toolbar && this.toolbar.contents.length > 0) {
            this.ngZone.runOutsideAngular((/**
             * @return {?}
             */
            function () {
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    if (!_this.toolbarContainer) {
                        return;
                    }
                    if (_this.ro) {
                        if (_this.toolbarContainer.nativeElement.parentElement ==
                            _this.resizeEl) {
                            // 已绑定过
                            return;
                        }
                        else {
                            _this.unBindResizeEvent();
                        }
                    }
                    if (_this.ro === null) {
                        _this.ro = new ResizeObserver((/**
                         * @param {?} el
                         * @return {?}
                         */
                        function (el) {
                            _this._calculateToolbarDropdownIsShow();
                            _this._calculateButtonsShow();
                        }));
                        _this.resizeEl =
                            _this.toolbarContainer.nativeElement.parentElement;
                        _this.ro.observe(_this.resizeEl);
                    }
                }), 0);
            }));
        }
        else {
            this.unBindResizeEvent();
        }
    };
    /**
     * 按钮数据变更后触发检查
     */
    /**
     * 按钮数据变更后触发检查
     * @private
     * @return {?}
     */
    FarrisSectionComponent.prototype.afterBindToolbarData = /**
     * 按钮数据变更后触发检查
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.ngZone && this.toolbar && this.toolbar.contents.length > 0) {
            this.ngZone.runOutsideAngular((/**
             * @return {?}
             */
            function () {
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    _this._calculateToolbarDropdownIsShow();
                    _this._calculateButtonsShow();
                }), 0);
            }));
        }
    };
    /**
     * 判断下拉按钮是否显示
     */
    /**
     * 判断下拉按钮是否显示
     * @private
     * @return {?}
     */
    FarrisSectionComponent.prototype._calculateToolbarDropdownIsShow = /**
     * 判断下拉按钮是否显示
     * @private
     * @return {?}
     */
    function () {
        if (!this.toolbarContainer || !this.toolbar || !this.toolbarPosition) {
            // 容器未显示，没有数据，没有按钮位置
            this.toolbarDpHidden = true;
            return;
        }
        /** @type {?} */
        var btnParentsContainer = this.toolbarContainer.nativeElement.parentElement;
        if (this.btnPlaceHolder.nativeElement.scrollWidth >
            btnParentsContainer.offsetWidth) {
            this.toolbarDpHidden = false;
        }
        else {
            this.toolbarDpHidden = true;
        }
    };
    /**
     * 计算显示的按钮个数及更多中显示的按钮个数
     */
    /**
     * 计算显示的按钮个数及更多中显示的按钮个数
     * @private
     * @return {?}
     */
    FarrisSectionComponent.prototype._calculateButtonsShow = /**
     * 计算显示的按钮个数及更多中显示的按钮个数
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this.toolbarContainer || !this.toolbar || !this.toolbarPosition) {
            // 容器未显示，没有数据，没有按钮位置
            return;
        }
        if (this.toolbarDpHidden) {
            this.toolbarBtns = tslib_1.__spread(this.toolbar.contents);
            this.inMoreButtonContents = [];
            return;
        }
        /** @type {?} */
        var toolbarParentContainerEl = this.toolbarContainer.nativeElement.parentElement;
        // let divEl = this.toolbarContainer.nativeElement;
        /** @type {?} */
        var btnPlaceHolderEl = this.btnPlaceHolder.nativeElement;
        /** @type {?} */
        var btnPlaceHolderBtns = btnPlaceHolderEl.querySelectorAll(".btn--cal");
        // 更多按钮
        /** @type {?} */
        var moreButton = btnPlaceHolderEl.parentElement.querySelector(".morebtn");
        // 计算按钮的宽度
        /** @type {?} */
        var basicStart = parseInt(btnPlaceHolderEl.getBoundingClientRect().left);
        /** @type {?} */
        var basicWidth = toolbarParentContainerEl.offsetWidth - moreButton.offsetWidth - 12;
        /** @type {?} */
        var toolbarDropdownHidden = true;
        /** @type {?} */
        var k = 0;
        // 只有一个按钮
        if (btnPlaceHolderBtns.length == 1) {
            if (btnPlaceHolderEl.offsetWidth > basicWidth) {
                toolbarDropdownHidden = false;
            }
            else {
                k = 1;
            }
        }
        else {
            for (k = 1; k <= btnPlaceHolderBtns.length - 1; k++) {
                // 如果内容超出,考虑到按钮之间的间距
                if (k == btnPlaceHolderBtns.length - 1) {
                    if (btnPlaceHolderEl.offsetWidth > basicWidth) {
                        toolbarDropdownHidden = false;
                        k = k - 1;
                        break;
                    }
                }
                else if (parseInt(btnPlaceHolderBtns[k].getBoundingClientRect().left) -
                    basicStart >
                    basicWidth) {
                    toolbarDropdownHidden = false;
                    k = k - 1;
                    break;
                }
            }
        }
        this.toolbarDpHidden = toolbarDropdownHidden;
        // let showBtns = divEl.querySelectorAll("button");
        // 只判断第一层，不判断下拉项
        /** @type {?} */
        var showBtns = this.toolbar.contents.filter((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return _this.getState(item, "visible"); }));
        /** @type {?} */
        var resultBtns = showBtns.filter((/**
         * @param {?} item
         * @param {?} index
         * @return {?}
         */
        function (item, index) {
            return index < k;
        }));
        this.toolbarBtns = resultBtns ? tslib_1.__spread(resultBtns) : [];
        // for (let m = k; m < showBtns.length; m++) {
        //     this.renderer.setStyle(showBtns[m], 'display', 'none');
        // }
        this.inMoreButtonContents = showBtns.filter((/**
         * @param {?} item
         * @param {?} index
         * @return {?}
         */
        function (item, index) {
            return index >= k;
        }));
        this.dpState = [false];
    };
    /**
     * 在按钮状态变化时解除限制
     */
    /**
     * 在按钮状态变化时解除限制
     * @private
     * @return {?}
     */
    FarrisSectionComponent.prototype.unBindResizeEvent = /**
     * 在按钮状态变化时解除限制
     * @private
     * @return {?}
     */
    function () {
        if (this.ro) {
            if (this.resizeEl) {
                this.ro.unobserve(this.resizeEl);
            }
            this.ro = null;
        }
    };
    /**
     * @return string
     * '' 不存在按钮，无所谓位置
     * 'inHead' 按钮在头部
     * 'inContent' 按钮在内容位置
     */
    /**
     * @private
     * @return {?} string
     * '' 不存在按钮，无所谓位置
     * 'inHead' 按钮在头部
     * 'inContent' 按钮在内容位置
     */
    FarrisSectionComponent.prototype.getToolbarPosition = /**
     * @private
     * @return {?} string
     * '' 不存在按钮，无所谓位置
     * 'inHead' 按钮在头部
     * 'inContent' 按钮在内容位置
     */
    function () {
        if (this.toolbar &&
            this.toolbar.hasOwnProperty("position") &&
            this.toolbar.hasOwnProperty("contents") &&
            this.toolbar.contents.length > 0) {
            // 如果有属性，且按钮有值
            if (this.toolbar.position === "inHead") {
                return "inHead";
            }
            else {
                return "inContent";
            }
        }
        return "";
    };
    /**
     * 判断是否显示、隐藏
     * @param id
     * @param state
     */
    /**
     * 判断是否显示、隐藏
     * @param {?} id
     * @param {?=} state
     * @param {?=} defaultValue
     * @return {?}
     */
    FarrisSectionComponent.prototype.getToolbarState = /**
     * 判断是否显示、隐藏
     * @param {?} id
     * @param {?=} state
     * @param {?=} defaultValue
     * @return {?}
     */
    function (id, state, defaultValue) {
        if (state === void 0) { state = this.btnStates; }
        if (defaultValue === void 0) { defaultValue = false; }
        if (state) {
            return state.pipe(map((/**
             * @param {?} n
             * @return {?}
             */
            function (n) {
                if (n[id] === undefined) {
                    // console.warn(`未找ID为：${id} 相关状态设置！`);
                    return defaultValue;
                }
                return n[id];
            })));
        }
        else {
            return of(defaultValue);
        }
    };
    /**
     * @param {?} btnInfo
     * @return {?}
     */
    FarrisSectionComponent.prototype.clickHandler = /**
     * @param {?} btnInfo
     * @return {?}
     */
    function (btnInfo) {
        if (!btnInfo) {
            return;
        }
        if (btnInfo.hasOwnProperty('disable') && btnInfo['disable']) {
            return;
        }
        this.clickItems.next(btnInfo);
    };
    /**
     * 最大最小化事件处理
     */
    /**
     * 最大最小化事件处理
     * @return {?}
     */
    FarrisSectionComponent.prototype.maxminHandler = /**
     * 最大最小化事件处理
     * @return {?}
     */
    function () {
        this.maxStatus = !this.maxStatus;
        this.maxStatusCls = this.maxStatus;
        //this.maxStatusCls=this.maxStatus&&this.maxContentFill;
        // this.maxScroll=this.maxStatus&&!this.maxContentFill;
        // 最大化
        if (!this.initParent) {
            return;
        }
        if (this.maxStatus) {
            this.initSibling = this.elSelf.nativeElement.nextElementSibling;
            document
                .querySelector("body")
                .appendChild(this.elSelf.nativeElement);
            if (this.commonUtils) {
                /** @type {?} */
                var zindex = this.commonUtils.getFloatingLayerIndex();
                this.renderer.setStyle(this.elSelf.nativeElement, "zIndex", zindex);
            }
        }
        else {
            // 最小化
            if (this.initSibling) {
                this.initParent.insertBefore(this.elSelf.nativeElement, this.initSibling);
            }
            else {
                this.initParent.appendChild(this.elSelf.nativeElement);
            }
            this.renderer.removeStyle(this.elSelf.nativeElement, "zIndex");
        }
    };
    FarrisSectionComponent.decorators = [
        { type: Component, args: [{
                    selector: "farris-section",
                    template: "<div class=\"f-section-header\" [ngClass]=\"headerDirective && headerDirective.headerCls\" *ngIf=\"showHeader\">\r\n    \r\n    <div *ngIf=\"headerComponentType\" component-template [cmpRef]=\"headerComponentType\" [ctx]=\"ctx\"></div>\r\n\r\n    <ng-template [ngTemplateOutlet]=\"headerDirective.templateRef\"\r\n        *ngIf=\"!headerComponentType&&headerDirective && headerDirective.templateRef\"></ng-template>\r\n    <ng-template [ngIf]=\"!headerDirective\">\r\n        <div component-template *ngIf=\"titleComponentType\" [cmpRef]=\"titleComponentType\" [ctx]=\"ctx\"></div>\r\n        <ng-template [ngTemplateOutlet]=\"headerTitleDirective.templateRef\"\r\n            *ngIf=\"!titleComponentType&&headerTitleDirective && headerTitleDirective.templateRef\" [ngTemplateOutletContext]=\"{context:this.context,index:this.index }\"></ng-template>\r\n        <div *ngIf=\"!headerComponentType&&!titleComponentType&&(!headerTitleDirective||!headerTitleDirective.templateRef)\" class=\"f-title\"\r\n            (click)=\"this.expandStatus = !this.expandStatus\">\r\n            <h4 class=\"f-title-text\">{{ mainTitle }}</h4>\r\n            <span *ngIf=\"subTitle && subTitle.length\">{{\r\n            subTitle\r\n        }}</span>\r\n        </div>\r\n        <div class=\"f-content\"  *ngIf=\"contentComponentType\" component-template [cmpRef]=\"contentComponentType\" [ctx]=\"ctx\"></div>\r\n        <div class=\"f-content\" [ngClass]=\"\r\n            headerContentDirective &&\r\n            headerContentDirective.hcontentCls\r\n        \" *ngIf=\"\r\n            !contentComponentType&&headerContentDirective &&\r\n            headerContentDirective.templateRef\r\n        \">\r\n            <ng-template [ngTemplateOutlet]=\"headerContentDirective.templateRef\"></ng-template>\r\n        </div>\r\n        <div class=\"f-toolbar\"  *ngIf=\"toolbarComponentType\" component-template [cmpRef]=\"toolbarComponentType\" [ctx]=\"ctx\"></div>\r\n        <div class=\"f-toolbar\" [ngClass]=\"\r\n            headerToolbarDirective &&\r\n            headerToolbarDirective.toolbarCls\" *ngIf=\" !toolbarComponentType&&headerToolbarDirective &&headerToolbarDirective.templateRef \">\r\n            <ng-template [ngTemplateOutlet]=\"headerToolbarDirective.templateRef\" *ngIf=\"\r\n                headerToolbarDirective &&\r\n                headerToolbarDirective.templateRef\r\n            \"></ng-template>\r\n        </div>\r\n        <div #toolbarHeaderContainer class=\"f-section-toolbar f-section-header--toolbar\"\r\n            *ngIf=\"!toolbarComponentType&&!headerToolbarDirective&&toolbarPosition=='inHead'\">\r\n            <ng-container [ngTemplateOutlet]=\"toolbarBtnTmpl\"\r\n                [ngTemplateOutletContext]=\"{ datas: toolbarBtns, dpHidden:toolbarDpHidden,dpDatas:inMoreButtonContents}\">\r\n            </ng-container>\r\n        </div>\r\n        <div class=\"f-viewchange\" *ngIf=\"viewchagneComponentType\" component-template [cmpRef]=\"viewchagneComponentType\" [ctx]=\"ctx\"></div>\r\n        <div class=\"f-viewchange\" [ngClass]=\"viewChangeDirective && viewChangeDirective.viewChangeCls\"\r\n            *ngIf=\"!viewchagneComponentType&&viewChangeDirective &&viewChangeDirective.templateRef \">\r\n            <ng-template [ngTemplateOutlet]=\"viewChangeDirective.templateRef\"></ng-template>\r\n        </div>\r\n        <div class=\"f-max-accordion\" *ngIf=\"enableMaximize||enableAccordion!=''\">\r\n            <span class=\"f-icon\" *ngIf=\"enableMaximize\" [class.f-icon-maximize]=\"!maxStatus\"\r\n                [class.f-icon-minimize]=\"maxStatus\" (click)=\"maxminHandler()\"> </span>\r\n            <button class=\"btn f-btn-collapse-expand f-btn-mx\" *ngIf=\"enableAccordion\"\r\n                [ngClass]=\"{ 'f-state-expand': expandStatus }\" (click)=\"this.expandStatus = !this.expandStatus\">\r\n                <span *ngIf=\"!expandStatus\">{{'section.expandLabel'|locale}}</span>\r\n                <span *ngIf=\"expandStatus\">{{'section.collapseLabel'|locale}}</span>\r\n            </button>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <div class=\"f-section-header--btn-placeholder\" *ngIf=\"!headerToolbarDirective&&toolbarPosition\">\r\n        <div class=\"btn-group f-btn-ml\"><button class=\"btn btn-secondary morebtn dropdown-toggle\">{{'tabs.more' | locale}}</button></div>    \r\n        <div class=\"btn-placeholder--content\"  #btnPlaceholder>\r\n            <ng-container *ngTemplateOutlet=\"btnPlaceHolderTmpl; context: { $implicit: toolbar.contents }\"></ng-container>\r\n        </div>       \r\n    </div>\r\n</div>\r\n<div class=\"f-section-header--btn-placeholder\" *ngIf=\"!showHeader&&toolbarPosition=='inContent'\">\r\n    <div class=\"btn-group  f-btn-ml\"><button class=\"btn btn-secondary morebtn dropdown-toggle\">{{'tabs.more' | locale}}</button></div>    \r\n    <div class=\"btn-placeholder--content\"  #btnPlaceholder>   \r\n            <ng-container *ngTemplateOutlet=\"btnPlaceHolderTmpl; context: { $implicit: toolbar.contents }\"></ng-container>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"f-section-extend\" *ngIf=\"extendComponentType\" component-template [cmpRef]=\"extendComponentType\" [ctx]=\"ctx\">\r\n</div>\r\n\r\n<div class=\"f-section-extend\" [ngClass]=\"extendDirective && extendDirective.extendCls\" \r\n    *ngIf=\"!extendComponentType&&extendDirective && extendDirective.templateRef\">\r\n    <ng-template  [ngTemplateOutlet]=\"extendDirective.templateRef\"></ng-template>\r\n</div>\r\n\r\n<div class=\"f-section-content\" [ngClass]=\"contentCls\">\r\n    <div class=\"f-section-toolbar f-section-content--toolbar\"\r\n        *ngIf=\"!toolbarComponentType&&!headerToolbarDirective&&toolbarPosition=='inContent'\">\r\n        <ng-container [ngTemplateOutlet]=\"toolbarBtnTmpl\"\r\n            [ngTemplateOutletContext]=\"{ datas: toolbarBtns, dpHidden:toolbarDpHidden,dpDatas:inMoreButtonContents}\">\r\n        </ng-container>\r\n    </div>\r\n    <ng-content></ng-content>\r\n</div>\r\n<ng-template #toolbarBtnTmpl let-datas=\"datas\" let-dpHidden=\"dpHidden\" let-dpDatas=\"dpDatas\">\r\n    <div class=\"toolbar-btn-inline-flex\" #toolbarContainer>\r\n        <ng-container *ngFor=\"let btn of datas;trackBy:trackByButton\">\r\n            <ng-container *ngIf=\"getState(btn,'visible')\">\r\n                <ng-container *ngIf=\"!btn.children||btn.children.length==0\">\r\n                    <button [attr.id]=\"btn.id\" [ngClass]=\"btn.appearance?.class\"  [disabled]=\"getState(btn,'disable')\"\r\n                    (click)=\"clickHandler(btn)\"  [class.btn-icontext]=\"btn.icon&&btn.icon.trim()\">\r\n                    <i class=\"f-icon\" [ngClass]=\"btn.icon&&btn.icon.trim()\" *ngIf=\"btn.icon&&btn.icon.trim()\"></i>{{btn.title}}\r\n                </button>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"btn.children&&btn.children.length>0\">\r\n                    <ng-container *ngTemplateOutlet=\"dropdownTmpl; context: { $implicit: btn }\"></ng-container>\r\n                </ng-container> \r\n            </ng-container>\r\n        </ng-container>\r\n    </div>        \r\n    <ng-container *ngIf=\"!dpHidden&&dpDatas.length>0\">\r\n        <div class=\"btn-group f-btn-ml\" fDropdown  [forceState]=\"dpState\" [rectifyReference]=\"referEl\" [autoRectify]=\"true\">\r\n            <button class=\"btn btn-secondary dropdown-toggle\" fDropdownToggle>{{'tabs.more' | locale}}</button>\r\n            <ul class=\"dropdown-menu\" fDropdownMenu *ngIf=\"dpDatas.length>0\">\r\n                <ng-container *ngFor=\"let dpBtn of dpDatas;trackBy:trackByButton\">                                   \r\n                    <ng-container  *ngIf=\"getState(dpBtn,'visible')\">\r\n                        <ng-container *ngIf=\"dpBtn.children&&dpBtn.children.length>0\">\r\n                            <ng-container *ngTemplateOutlet=\"dropdownSubTmpl;context: { $implicit: dpBtn}\"></ng-container>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"!dpBtn.children||dpBtn.children.length==0\">\r\n                            <li class=\"dropdown-item  text-truncate \" id=\"{{ dpBtn.id }}\" [class.disabled]=\"getState(dpBtn,'disable')\"  (click)=\"clickHandler(dpBtn)\">\r\n                                {{ dpBtn.title }}\r\n                            </li>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ul>\r\n        </div>\r\n    </ng-container>   \r\n</ng-template>\r\n<!--\u7B2C\u4E00\u5C42\u4E0B\u62C9-->\r\n<ng-template #dropdownTmpl let-data>\r\n    <div class=\"btn-group\" id=\"{{ data.id }}\" [ngClass]=\"data.appearance?.dropdownCls\" fDropdown [forceState]=\"dpState\"  [rectifyReference]=\"referEl\"  [autoRectify]=\"true\">\r\n        <ng-container *ngIf=\"data.split\">\r\n            <button type=\"button\" class=\"btn\" [ngClass]=\"data.appearance?.class\" [class.disabled]=\"getState(data,'disable')\" [class.btn-icontext]=\"data.icon&&data.icon.trim()\" (click)=\"clickHandler(data)\">\r\n                <i class=\"f-icon\" [ngClass]=\"data.icon&&data.icon.trim()\" *ngIf=\"data.icon&&data.icon.trim()\"></i>{{ data.title }}\r\n            </button>\r\n        <button class=\"btn dropdown-toggle dropdown-toggle-split\" [ngClass]=\"data.appearance?.class\" fDropdownToggle></button>\r\n        </ng-container>\r\n        <!--\u4E0D\u542F\u7528\u4E0B\u62C9\u5206\u5F00\u6309\u94AE-->\r\n        <ng-container *ngIf=\"!data.split\">\r\n            <button type=\"button\" fDropdownToggle class=\"btn\" [ngClass]=\"data.appearance?.class + ' dropdown-toggle'\"\r\n                [dpDisabled]=\"getState(data,'disable')\"  [class.btn-icontext]=\"data.icon&&data.icon.trim()\" (click)=\"clickHandler(data)\">\r\n                <i class=\"f-icon\" [ngClass]=\"data.icon&&data.icon.trim()\" *ngIf=\"data.icon&&data.icon.trim()\"></i>{{ data.title }}\r\n            </button>\r\n            <i></i>\r\n        </ng-container>\r\n        <ul class=\"dropdown-menu\" fDropdownMenu id=\"{{ data.id }}_menu\">\r\n            <ng-container *ngTemplateOutlet=\"dropMenuItem; context: { $implicit: data.children }\"></ng-container>\r\n        </ul>\r\n    </div>\r\n</ng-template>\r\n\r\n<!--\u4E0B\u62C9\u5B50\u9879-->\r\n<ng-template #dropMenuItem let-data>\r\n    <ng-container *ngFor=\"let item of data\">\r\n        <ng-container *ngIf=\"getState(item,'visible')\">\r\n            <li class=\"dropdown-item\" id=\"{{ item.id }}\" [class.disabled]=\"getState(item,'disable')\"  (click)=\"clickHandler(item)\">\r\n                {{ item.title }}\r\n            </li>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-template>\r\n\r\n<!--\u7B2C\u4E8C\u5C42\u4E0B\u62C9-->\r\n<ng-template #dropdownSubTmpl let-subData>\r\n    <li class=\"dropdown-submenu\" fDropdown [isSubDP]=\"true\" [placement]=\"'left-bottom'\"  [autoRectify]=\"true\" [rectifyReference]=\"referEl\" id=\"{{ subData.id }}\">\r\n        <ng-container *ngIf=\"subData.split\">\r\n            <span class=\"dropdown-item\" [class.disabled]=\"getState(subData,'disable')\" (click)=\"clickHandler(subData)\">{{ subData.title }}</span>\r\n            <span class=\"dropdown-toggle dropdown-toggle-split\" fDropdownToggle></span>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!subData.split\">\r\n            <span class=\"dropdown-item  dropdown-toggle\" [dpDisabled]=\"getState(subData,'disable')\" (click)=\"clickHandler(subData)\" fDropdownToggle>{{ subData.title }}</span>\r\n        </ng-container>\r\n        <ul class=\"dropdown-menu\" fDropdownMenu id=\"{{ subData.id }}_submenu\">\r\n            <ng-container *ngTemplateOutlet=\"dropMenuItem; context: { $implicit: subData.children }\"></ng-container>\r\n        </ul>\r\n    </li>\r\n</ng-template>\r\n<!--PlaceHolder\u5B58\u653E\u6309\u94AE\u6A21\u7248-->\r\n<ng-template #btnPlaceHolderTmpl let-data>\r\n    <ng-container *ngFor=\"let btn of data\">\r\n        <ng-container  *ngIf=\"getState(btn,'visible')\">\r\n            <ng-container *ngIf=\"!btn.children||btn.children.length==0\">\r\n                <button class=\"btn--cal\" [ngClass]=\"btn.appearance?.class\"  [class.btn-icontext]=\"btn.icon&&btn.icon.trim()\">\r\n                <i class=\"f-icon\" [ngClass]=\"btn.icon&&btn.icon.trim()\" *ngIf=\"btn.icon&&btn.icon.trim()\"></i>{{btn.title}}\r\n            </button>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"btn.children&&btn.children.length>0\">\r\n                <div class=\"btn-group btn--cal\" [ngClass]=\"btn.appearance?.dropdownCls\" >\r\n                    <ng-container *ngIf=\"btn.split\">\r\n                        <button type=\"button\" class=\"btn\" [ngClass]=\"btn.appearance?.class\" [class.btn-icontext]=\"btn.icon&&btn.icon.trim()\">\r\n                            <i class=\"f-icon\" [ngClass]=\"btn.icon&&btn.icon.trim()\" *ngIf=\"btn.icon&&btn.icon.trim()\"></i>{{ btn.title }}\r\n                        </button>\r\n                    <button class=\"btn dropdown-toggle dropdown-toggle-split\" [ngClass]=\"btn.appearance?.class\"></button>\r\n                    </ng-container>\r\n                    <!--\u4E0D\u542F\u7528\u4E0B\u62C9\u5206\u5F00\u6309\u94AE-->\r\n                    <ng-container *ngIf=\"!btn.split\">\r\n                        <button type=\"button\"  class=\"btn\" [ngClass]=\"btn.appearance?.class + ' dropdown-toggle'\"  [class.btn-icontext]=\"btn.icon&&btn.icon.trim()\">\r\n                            <i class=\"f-icon\" [ngClass]=\"btn.icon&&btn.icon.trim()\" *ngIf=\"btn.icon&&btn.icon.trim()\"></i>{{ btn.title }}\r\n                        </button>\r\n                        <i></i>\r\n                    </ng-container>\r\n                </div>\r\n            </ng-container>  \r\n        </ng-container> \r\n    </ng-container>\r\n</ng-template>",
                    styles: [".f-section-header--btn-placeholder{position:absolute;top:-30px;right:0;overflow:hidden;left:0;opacity:0;z-index:-90}.f-section-header--btn-placeholder .btn-placeholder--content{display:-webkit-inline-box;display:inline-flex;left:0;position:absolute}.f-section-content .toolbar-btn-inline-flex,.f-section-header .toolbar-btn-inline-flex{display:-webkit-inline-box;display:inline-flex;overflow:hidden}.f-section-header--toolbar{-webkit-box-flex:1;flex:1;-webkit-box-align:center;align-items:center;width:30%;display:-webkit-box;display:flex;-webkit-box-pack:end;justify-content:flex-end;margin-left:.875rem}.f-section-content--toolbar{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center}"]
                }] }
    ];
    /** @nocollapse */
    FarrisSectionComponent.ctorParameters = function () { return [
        { type: Injector, decorators: [{ type: Optional }] }
    ]; };
    FarrisSectionComponent.propDecorators = {
        contentCls: [{ type: Input }],
        baseCls: [{ type: HostBinding, args: ["class.f-section",] }],
        maxStatusCls: [{ type: HostBinding, args: ["class.f-section-maximize",] }],
        fillCls: [{ type: HostBinding, args: ["class.f-section-fill",] }],
        enableAccordionCls: [{ type: HostBinding, args: ["class.f-section-accordion",] }],
        enableCollapseCls: [{ type: HostBinding, args: ["class.f-state-collapse",] }],
        enableCustomAccordionCls: [{ type: HostBinding, args: ["class.f-section-custom-accordion",] }],
        mainTitle: [{ type: Input }],
        subTitle: [{ type: Input }],
        showHeader: [{ type: Input }],
        enableMaximize: [{ type: Input }],
        maxContentFill: [{ type: Input }],
        enableAccordion: [{ type: Input }],
        fill: [{ type: Input }],
        expandStatus: [{ type: Input }],
        context: [{ type: Input }],
        index: [{ type: Input }],
        toolbar: [{ type: Input }],
        ctx: [{ type: Input }],
        headerComponentType: [{ type: Input }],
        titleComponentType: [{ type: Input }],
        contentComponentType: [{ type: Input }],
        toolbarComponentType: [{ type: Input }],
        extendComponentType: [{ type: Input }],
        viewchagneComponentType: [{ type: Input }],
        headerDirective: [{ type: ContentChild, args: [FarrisSectionHeaderDirective,] }],
        headerTitleDirective: [{ type: ContentChild, args: [FarrisSectionTitleDirective,] }],
        headerContentDirective: [{ type: ContentChild, args: [FarrisSectionHcontentDirective,] }],
        headerToolbarDirective: [{ type: ContentChild, args: [FarrisSectionToolbarDirective,] }],
        extendDirective: [{ type: ContentChild, args: [FarrisSectionExtendDirective,] }],
        contentDirective: [{ type: ContentChild, args: [FarrisSectionContentDirective,] }],
        viewChangeDirective: [{ type: ContentChild, args: [FarrisSectionViewChangeDirective,] }],
        btnStates: [{ type: Input }],
        btnVisible: [{ type: Input }],
        clickThrottleTime: [{ type: Input }],
        toolbarContainer: [{ type: ViewChild, args: ["toolbarContainer",] }],
        btnPlaceHolder: [{ type: ViewChild, args: ["btnPlaceholder",] }]
    };
    return FarrisSectionComponent;
}());
export { FarrisSectionComponent };
if (false) {
    /** @type {?} */
    FarrisSectionComponent.prototype.contentCls;
    /** @type {?} */
    FarrisSectionComponent.prototype.maxStatus;
    /** @type {?} */
    FarrisSectionComponent.prototype.baseCls;
    /** @type {?} */
    FarrisSectionComponent.prototype.maxStatusCls;
    /** @type {?} */
    FarrisSectionComponent.prototype.mainTitle;
    /** @type {?} */
    FarrisSectionComponent.prototype.subTitle;
    /** @type {?} */
    FarrisSectionComponent.prototype.showHeader;
    /** @type {?} */
    FarrisSectionComponent.prototype.enableMaximize;
    /** @type {?} */
    FarrisSectionComponent.prototype.maxContentFill;
    /**
     * 是否启用収折功能
     * 默认不启用収折,值为''
     * 启用默认収折,值为'default'
     * 启用自定义収折,值为 'custom'
     *
     * @type {?}
     */
    FarrisSectionComponent.prototype.enableAccordion;
    /** @type {?} */
    FarrisSectionComponent.prototype.fill;
    /** @type {?} */
    FarrisSectionComponent.prototype.expandStatus;
    /**
     * 事件上下文，解决按钮点击时没有上下文的问题
     * @type {?}
     */
    FarrisSectionComponent.prototype.context;
    /** @type {?} */
    FarrisSectionComponent.prototype.index;
    /** @type {?} */
    FarrisSectionComponent.prototype.toolbarPosition;
    /** @type {?} */
    FarrisSectionComponent.prototype.toolbarBtns;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype._toolbar;
    /** @type {?} */
    FarrisSectionComponent.prototype.toolbarDpHidden;
    /** @type {?} */
    FarrisSectionComponent.prototype.ctx;
    /** @type {?} */
    FarrisSectionComponent.prototype.headerComponentType;
    /** @type {?} */
    FarrisSectionComponent.prototype.titleComponentType;
    /** @type {?} */
    FarrisSectionComponent.prototype.contentComponentType;
    /** @type {?} */
    FarrisSectionComponent.prototype.toolbarComponentType;
    /** @type {?} */
    FarrisSectionComponent.prototype.extendComponentType;
    /** @type {?} */
    FarrisSectionComponent.prototype.viewchagneComponentType;
    /** @type {?} */
    FarrisSectionComponent.prototype.headerDirective;
    /** @type {?} */
    FarrisSectionComponent.prototype.headerTitleDirective;
    /** @type {?} */
    FarrisSectionComponent.prototype.headerContentDirective;
    /** @type {?} */
    FarrisSectionComponent.prototype.headerToolbarDirective;
    /** @type {?} */
    FarrisSectionComponent.prototype.extendDirective;
    /** @type {?} */
    FarrisSectionComponent.prototype.contentDirective;
    /** @type {?} */
    FarrisSectionComponent.prototype.viewChangeDirective;
    /** @type {?} */
    FarrisSectionComponent.prototype._disableDatas;
    /** @type {?} */
    FarrisSectionComponent.prototype._visibleDatas;
    /** @type {?} */
    FarrisSectionComponent.prototype.clickThrottleTime;
    /** @type {?} */
    FarrisSectionComponent.prototype.toolbarContainer;
    /** @type {?} */
    FarrisSectionComponent.prototype.btnPlaceHolder;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.clickItems;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.clickSubscription;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.ro;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.resizeEl;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.ngZone;
    /** @type {?} */
    FarrisSectionComponent.prototype.dpState;
    /** @type {?} */
    FarrisSectionComponent.prototype.referEl;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.initParent;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.initSibling;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.elSelf;
    /** @type {?} */
    FarrisSectionComponent.prototype.inMoreButtonContents;
    /** @type {?} */
    FarrisSectionComponent.prototype.commonUtils;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.cdRef;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.nativeEl;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.inject;
}
//# sourceMappingURL=data:application/json;base64,