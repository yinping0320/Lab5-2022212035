/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-08-14 15:22:21
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-08-15 16:44:15
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
import { Component, Input, ContentChild, HostBinding, ViewChild, Optional, NgZone, Injector, ElementRef, Renderer2, ChangeDetectorRef, } from "@angular/core";
import { FarrisSectionTitleDirective } from "./directive/section-title.directive";
import { FarrisSectionHeaderDirective } from "./directive/section-header.directive";
import { FarrisSectionHcontentDirective } from "./directive/section-hcontent.directive";
import { FarrisSectionToolbarDirective, FarrisSectionViewChangeDirective, } from "./directive/section-toolbar.directive";
import { FarrisSectionExtendDirective } from "./directive/section-extend.directive";
import { FarrisSectionContentDirective } from "./directive/section-content.directive";
import { Observable, Subject, of } from "rxjs";
import ResizeObserver from "resize-observer-polyfill";
import { map, debounceTime } from "rxjs/operators";
import { CommonUtils } from "@farris/ui-common";
export class FarrisSectionComponent {
    /**
     * @param {?} inject
     */
    constructor(inject) {
        this.inject = inject;
        this.contentCls = "";
        this.maxStatus = false;
        this.baseCls = true;
        this.maxStatusCls = false;
        // 是否显示header
        this.showHeader = true;
        // 是否支持最大化
        this.enableMaximize = false;
        // 最大化时，内容是否填充——一般表格填充、表单填写区域是滚动
        this.maxContentFill = true;
        /**
         * 是否启用収折功能
         * 默认不启用収折,值为''
         * 启用默认収折,值为'default'
         * 启用自定义収折,值为 'custom'
         *
         */
        this.enableAccordion = "";
        // section是否铺满
        this.fill = false;
        // 默认是是否展开
        this.expandStatus = true;
        // 就来按钮位置
        this.toolbarPosition = "";
        //
        this.toolbarBtns = [];
        // 工具栏按钮
        this._toolbar = null;
        //标记按钮工具栏是否隐藏[更多]按钮
        this.toolbarDpHidden = true;
        // 参照Tab中这样的处理方式有问题----延后修改
        // 是否被禁用的状态
        // 按照之前的逻辑，如果没有找到key，就说明被禁用
        this._disableDatas = new Subject();
        // 按照之前的逻辑，如果没有找到key，就说明可见
        this._visibleDatas = new Subject();
        this.clickThrottleTime = 350;
        this.clickItems = new Subject();
        // 用于计算响应时
        this.ro = null;
        this.resizeEl = null;
        // 当宽度改变时，强制收起下拉菜单 
        this.dpState = [false];
        // 下拉菜单的参照元素
        this.referEl = null;
        // 初始的父元素
        this.initParent = null;
        this.initSibling = null;
        this.inMoreButtonContents = [];
        if (this.inject) {
            this.ngZone = this.inject.get(NgZone, null);
            this.renderer = this.inject.get(Renderer2, null);
            this.elSelf = this.inject.get(ElementRef, null);
            this.cdRef = this.inject.get(ChangeDetectorRef, null);
            this.commonUtils = this.inject.get(CommonUtils, new CommonUtils());
            this.nativeEl = this.inject.get(ElementRef, null);
            this.referEl = this.nativeEl.nativeElement;
        }
    }
    // @HostBinding("class.f-section-maximize-scroll-content") maxScroll:boolean = false;
    /**
     * @return {?}
     */
    get fillCls() {
        return this.fill;
    }
    /**
     * @return {?}
     */
    get enableAccordionCls() {
        return this.enableAccordion == "default";
    }
    /**
     * @return {?}
     */
    get enableCollapseCls() {
        if (this.enableAccordion === "default" ||
            this.enableAccordion === "custom") {
            return !this.expandStatus;
        }
        else {
            return false;
        }
    }
    /**
     * @return {?}
     */
    get enableCustomAccordionCls() {
        return this.enableAccordion == "custom";
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set toolbar(value) {
        if (value) {
            this._toolbar = value;
            // 计算位置
            this.toolbarPosition = this.getToolbarPosition();
            //
            this.toolbarBtns = [...this.toolbar.contents];
            this.inMoreButtonContents = [];
            // 绑定事件
            this.bindResizeEvent();
            // 调整界面
            this.afterBindToolbarData();
        }
        else {
            this._toolbar = null;
            // 有位置
            this.toolbarPosition = "";
            this.toolbarBtns = [];
            this.inMoreButtonContents = [];
            // 移除绑定事件
            this.unBindResizeEvent();
        }
    }
    /**
     * @return {?}
     */
    get toolbar() {
        return this._toolbar;
    }
    /**
     * @param {?} values
     * @return {?}
     */
    set btnStates(values) {
        if (values) {
            if (this._disableDatas &&
                this._disableDatas.hasOwnProperty("unsubscribe")) {
                this._disableDatas["unsubscribe"]();
            }
            this._disableDatas = values;
        }
    }
    // 是否可见的状态
    /**
     * @param {?} values
     * @return {?}
     */
    set btnVisible(values) {
        if (values) {
            if (this._visibleDatas &&
                this._visibleDatas.hasOwnProperty("unsubscribe")) {
                this._visibleDatas["unsubscribe"]();
            }
            this._visibleDatas = values;
        }
    }
    // 用于提供循环效率
    /**
     * @param {?} index
     * @param {?} btn
     * @return {?}
     */
    trackByButton(index, btn) {
        return btn.id;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        // 标记点击事件
        this.clickSubscription = this.clickItems
            .pipe(debounceTime(this.clickThrottleTime))
            .subscribe((/**
         * @param {?} btnInfo
         * @return {?}
         */
        (btnInfo) => {
            if (btnInfo.click && typeof btnInfo.click == "function") {
                btnInfo.click({ context: this.context });
            }
        }));
        // 绑定状态
        this._disableDatas.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        (data) => {
            // 调整按钮可用状态
            this.changeState(data, "disable");
        }));
        this._visibleDatas.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        (data) => {
            // 调整按钮可见状态
            this.changeState(data, "visible");
            // 重新判断是否需要显示下拉            
            this._calculateToolbarDropdownIsShow();
            this._calculateButtonsShow();
        }));
        // 如果有inject，取到元素本身
        if (this.elSelf) {
            this.initParent = this.elSelf.nativeElement.parentElement;
        }
    }
    /**
         * Ximena 23.08.30 判断是否可见,独立出来
         * Todo:
         * 1、现在btnVisible每次的变更都是全量，是否需要记录每次变更，然后合并计算？
         * 2、现在判断是否可见的方法，是直接更新界面的，每个按钮上都绑定了这个方法，会有性能问题。应该改成处理在绑定的所有数据，然后更新界面。
         * 3、是否可见和禁用有同样的问题
         * @param id
         * @returns
         */
    /**
     * 获取按钮配置中，禁用、可见的属性
     * @param {?} btnItem
     * @param {?} stateProp
     * @return {?}
     */
    getState(btnItem, stateProp) {
        if (btnItem.hasOwnProperty(stateProp)) {
            return btnItem[stateProp];
        }
        // 不存在属性
        if (stateProp == "visible") {
            return true;
        }
        return false;
    }
    /**
     * 改变可用状态
     * @private
     * @param {?} values
     * @param {?} stateProp
     * @return {?}
     */
    changeState(values, stateProp) {
        /** @type {?} */
        const idArray = Object.keys(values);
        idArray.forEach((/**
         * @param {?} id
         * @return {?}
         */
        (id) => {
            /** @type {?} */
            const state = values[id];
            /** @type {?} */
            const item = this._findItemByID(id, this.toolbarBtns);
            if (item) {
                item[stateProp] = state;
            }
        }));
        this.toolbar.contents.forEach((/**
         * @param {?} item
         * @return {?}
         */
        (item) => {
            /** @type {?} */
            const findId = idArray.find((/**
             * @param {?} id
             * @return {?}
             */
            (id) => id == item.id));
            if (findId) {
                item[stateProp] = values[findId];
            }
            if (item['children'] && item['children'].length > 0) {
                // 数据源只有一级的下拉
                /** @type {?} */
                let dpChildren = item.children;
                dpChildren.forEach((/**
                 * @param {?} item
                 * @return {?}
                 */
                (item) => {
                    /** @type {?} */
                    const findId = idArray.find((/**
                     * @param {?} id
                     * @return {?}
                     */
                    (id) => id == item.id));
                    if (findId) {
                        item[stateProp] = values[findId];
                    }
                }));
            }
        }));
        this.inMoreButtonContents.forEach((/**
         * @param {?} item
         * @return {?}
         */
        (item) => {
            /** @type {?} */
            const findId = idArray.find((/**
             * @param {?} id
             * @return {?}
             */
            (id) => id == item.id));
            if (findId) {
                item[stateProp] = values[findId];
            }
            if (item['children'] && item['children'].length > 0) {
                // 数据源只有一级的下拉
                /** @type {?} */
                let dpChildren = item.children;
                dpChildren.forEach((/**
                 * @param {?} item
                 * @return {?}
                 */
                (item) => {
                    /** @type {?} */
                    const findId = idArray.find((/**
                     * @param {?} id
                     * @return {?}
                     */
                    (id) => id == item.id));
                    if (findId) {
                        item[stateProp] = values[findId];
                    }
                }));
            }
        }));
        this.dpState = [false];
        this.cdRef && !this.cdRef['destroyed'] && this.cdRef.detectChanges();
    }
    /**
     * 查找-支持一级下拉
     * @private
     * @param {?} id
     * @param {?} datas
     * @return {?}
     */
    _findItemByID(id, datas) {
        /** @type {?} */
        let result;
        /** @type {?} */
        let flag = false;
        /** @type {?} */
        let len = datas.length;
        for (var k = 0; k++; k < len) {
            if (datas[k].id == id) {
                flag = true;
                result = datas[k];
            }
            else if (datas[k]["children"] && datas[k]["children"].length > 0) {
                /** @type {?} */
                let tIndex = datas[k]["children"].findIndex((/**
                 * @param {?} btnItem
                 * @return {?}
                 */
                (btnItem) => btnItem.id == id));
                if (tIndex > -1) {
                    flag = true;
                    result = datas[k]["children"][tIndex];
                }
            }
            if (flag)
                break;
        }
        return result;
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        if (this.clickSubscription) {
            this.clickSubscription.unsubscribe();
            this.clickSubscription = null;
        }
        if (this._visibleDatas &&
            this._visibleDatas.hasOwnProperty("unsubscribe")) {
            this._visibleDatas["unsubscribe"]();
            this._visibleDatas = null;
        }
        if (this._disableDatas &&
            this._disableDatas.hasOwnProperty("unsubscribe")) {
            this._disableDatas["unsubscribe"]();
            this._disableDatas = null;
        }
        this.unBindResizeEvent();
    }
    /**
     * 绑定限制
     * @private
     * @return {?}
     */
    bindResizeEvent() {
        // 标记响应时
        if (this.ngZone && this.toolbar && this.toolbar.contents.length > 0) {
            this.ngZone.runOutsideAngular((/**
             * @return {?}
             */
            () => {
                setTimeout((/**
                 * @return {?}
                 */
                () => {
                    if (!this.toolbarContainer) {
                        return;
                    }
                    if (this.ro) {
                        if (this.toolbarContainer.nativeElement.parentElement ==
                            this.resizeEl) {
                            // 已绑定过
                            return;
                        }
                        else {
                            this.unBindResizeEvent();
                        }
                    }
                    if (this.ro === null) {
                        this.ro = new ResizeObserver((/**
                         * @param {?} el
                         * @return {?}
                         */
                        (el) => {
                            this._calculateToolbarDropdownIsShow();
                            this._calculateButtonsShow();
                        }));
                        this.resizeEl =
                            this.toolbarContainer.nativeElement.parentElement;
                        this.ro.observe(this.resizeEl);
                    }
                }), 0);
            }));
        }
        else {
            this.unBindResizeEvent();
        }
    }
    /**
     * 按钮数据变更后触发检查
     * @private
     * @return {?}
     */
    afterBindToolbarData() {
        if (this.ngZone && this.toolbar && this.toolbar.contents.length > 0) {
            this.ngZone.runOutsideAngular((/**
             * @return {?}
             */
            () => {
                setTimeout((/**
                 * @return {?}
                 */
                () => {
                    this._calculateToolbarDropdownIsShow();
                    this._calculateButtonsShow();
                }), 0);
            }));
        }
    }
    /**
     * 判断下拉按钮是否显示
     * @private
     * @return {?}
     */
    _calculateToolbarDropdownIsShow() {
        if (!this.toolbarContainer || !this.toolbar || !this.toolbarPosition) {
            // 容器未显示，没有数据，没有按钮位置
            this.toolbarDpHidden = true;
            return;
        }
        /** @type {?} */
        const btnParentsContainer = this.toolbarContainer.nativeElement.parentElement;
        if (this.btnPlaceHolder.nativeElement.scrollWidth >
            btnParentsContainer.offsetWidth) {
            this.toolbarDpHidden = false;
        }
        else {
            this.toolbarDpHidden = true;
        }
    }
    /**
     * 计算显示的按钮个数及更多中显示的按钮个数
     * @private
     * @return {?}
     */
    _calculateButtonsShow() {
        if (!this.toolbarContainer || !this.toolbar || !this.toolbarPosition) {
            // 容器未显示，没有数据，没有按钮位置
            return;
        }
        if (this.toolbarDpHidden) {
            this.toolbarBtns = [...this.toolbar.contents];
            this.inMoreButtonContents = [];
            return;
        }
        /** @type {?} */
        let toolbarParentContainerEl = this.toolbarContainer.nativeElement.parentElement;
        // let divEl = this.toolbarContainer.nativeElement;
        /** @type {?} */
        let btnPlaceHolderEl = this.btnPlaceHolder.nativeElement;
        /** @type {?} */
        let btnPlaceHolderBtns = btnPlaceHolderEl.querySelectorAll(".btn--cal");
        // 更多按钮
        /** @type {?} */
        const moreButton = btnPlaceHolderEl.parentElement.querySelector(".morebtn");
        // 计算按钮的宽度
        /** @type {?} */
        let basicStart = parseInt(btnPlaceHolderEl.getBoundingClientRect().left);
        /** @type {?} */
        let basicWidth = toolbarParentContainerEl.offsetWidth - moreButton.offsetWidth - 12;
        /** @type {?} */
        let toolbarDropdownHidden = true;
        /** @type {?} */
        let k = 0;
        // 只有一个按钮
        if (btnPlaceHolderBtns.length == 1) {
            if (btnPlaceHolderEl.offsetWidth > basicWidth) {
                toolbarDropdownHidden = false;
            }
            else {
                k = 1;
            }
        }
        else {
            for (k = 1; k <= btnPlaceHolderBtns.length - 1; k++) {
                // 如果内容超出,考虑到按钮之间的间距
                if (k == btnPlaceHolderBtns.length - 1) {
                    if (btnPlaceHolderEl.offsetWidth > basicWidth) {
                        toolbarDropdownHidden = false;
                        k = k - 1;
                        break;
                    }
                }
                else if (parseInt(btnPlaceHolderBtns[k].getBoundingClientRect().left) -
                    basicStart >
                    basicWidth) {
                    toolbarDropdownHidden = false;
                    k = k - 1;
                    break;
                }
            }
        }
        this.toolbarDpHidden = toolbarDropdownHidden;
        // let showBtns = divEl.querySelectorAll("button");
        // 只判断第一层，不判断下拉项
        /** @type {?} */
        let showBtns = this.toolbar.contents.filter((/**
         * @param {?} item
         * @return {?}
         */
        (item) => this.getState(item, "visible")));
        /** @type {?} */
        let resultBtns = showBtns.filter((/**
         * @param {?} item
         * @param {?} index
         * @return {?}
         */
        (item, index) => {
            return index < k;
        }));
        this.toolbarBtns = resultBtns ? [...resultBtns] : [];
        // for (let m = k; m < showBtns.length; m++) {
        //     this.renderer.setStyle(showBtns[m], 'display', 'none');
        // }
        this.inMoreButtonContents = showBtns.filter((/**
         * @param {?} item
         * @param {?} index
         * @return {?}
         */
        (item, index) => {
            return index >= k;
        }));
        this.dpState = [false];
    }
    /**
     * 在按钮状态变化时解除限制
     * @private
     * @return {?}
     */
    unBindResizeEvent() {
        if (this.ro) {
            if (this.resizeEl) {
                this.ro.unobserve(this.resizeEl);
            }
            this.ro = null;
        }
    }
    /**
     * @private
     * @return {?} string
     * '' 不存在按钮，无所谓位置
     * 'inHead' 按钮在头部
     * 'inContent' 按钮在内容位置
     */
    getToolbarPosition() {
        if (this.toolbar &&
            this.toolbar.hasOwnProperty("position") &&
            this.toolbar.hasOwnProperty("contents") &&
            this.toolbar.contents.length > 0) {
            // 如果有属性，且按钮有值
            if (this.toolbar.position === "inHead") {
                return "inHead";
            }
            else {
                return "inContent";
            }
        }
        return "";
    }
    /**
     * 判断是否显示、隐藏
     * @param {?} id
     * @param {?=} state
     * @param {?=} defaultValue
     * @return {?}
     */
    getToolbarState(id, state = this.btnStates, defaultValue = false) {
        if (state) {
            return state.pipe(map((/**
             * @param {?} n
             * @return {?}
             */
            (n) => {
                if (n[id] === undefined) {
                    // console.warn(`未找ID为：${id} 相关状态设置！`);
                    return defaultValue;
                }
                return n[id];
            })));
        }
        else {
            return of(defaultValue);
        }
    }
    /**
     * @param {?} btnInfo
     * @return {?}
     */
    clickHandler(btnInfo) {
        if (!btnInfo) {
            return;
        }
        if (btnInfo.hasOwnProperty('disable') && btnInfo['disable']) {
            return;
        }
        this.clickItems.next(btnInfo);
    }
    /**
     * 最大最小化事件处理
     * @return {?}
     */
    maxminHandler() {
        this.maxStatus = !this.maxStatus;
        this.maxStatusCls = this.maxStatus;
        //this.maxStatusCls=this.maxStatus&&this.maxContentFill;
        // this.maxScroll=this.maxStatus&&!this.maxContentFill;
        // 最大化
        if (!this.initParent) {
            return;
        }
        if (this.maxStatus) {
            this.initSibling = this.elSelf.nativeElement.nextElementSibling;
            document
                .querySelector("body")
                .appendChild(this.elSelf.nativeElement);
            if (this.commonUtils) {
                /** @type {?} */
                const zindex = this.commonUtils.getFloatingLayerIndex();
                this.renderer.setStyle(this.elSelf.nativeElement, "zIndex", zindex);
            }
        }
        else {
            // 最小化
            if (this.initSibling) {
                this.initParent.insertBefore(this.elSelf.nativeElement, this.initSibling);
            }
            else {
                this.initParent.appendChild(this.elSelf.nativeElement);
            }
            this.renderer.removeStyle(this.elSelf.nativeElement, "zIndex");
        }
    }
}
FarrisSectionComponent.decorators = [
    { type: Component, args: [{
                selector: "farris-section",
                template: "<div class=\"f-section-header\" [ngClass]=\"headerDirective && headerDirective.headerCls\" *ngIf=\"showHeader\">\r\n    \r\n    <div *ngIf=\"headerComponentType\" component-template [cmpRef]=\"headerComponentType\" [ctx]=\"ctx\"></div>\r\n\r\n    <ng-template [ngTemplateOutlet]=\"headerDirective.templateRef\"\r\n        *ngIf=\"!headerComponentType&&headerDirective && headerDirective.templateRef\"></ng-template>\r\n    <ng-template [ngIf]=\"!headerDirective\">\r\n        <div component-template *ngIf=\"titleComponentType\" [cmpRef]=\"titleComponentType\" [ctx]=\"ctx\"></div>\r\n        <ng-template [ngTemplateOutlet]=\"headerTitleDirective.templateRef\"\r\n            *ngIf=\"!titleComponentType&&headerTitleDirective && headerTitleDirective.templateRef\" [ngTemplateOutletContext]=\"{context:this.context,index:this.index }\"></ng-template>\r\n        <div *ngIf=\"!headerComponentType&&!titleComponentType&&(!headerTitleDirective||!headerTitleDirective.templateRef)\" class=\"f-title\"\r\n            (click)=\"this.expandStatus = !this.expandStatus\">\r\n            <h4 class=\"f-title-text\">{{ mainTitle }}</h4>\r\n            <span *ngIf=\"subTitle && subTitle.length\">{{\r\n            subTitle\r\n        }}</span>\r\n        </div>\r\n        <div class=\"f-content\"  *ngIf=\"contentComponentType\" component-template [cmpRef]=\"contentComponentType\" [ctx]=\"ctx\"></div>\r\n        <div class=\"f-content\" [ngClass]=\"\r\n            headerContentDirective &&\r\n            headerContentDirective.hcontentCls\r\n        \" *ngIf=\"\r\n            !contentComponentType&&headerContentDirective &&\r\n            headerContentDirective.templateRef\r\n        \">\r\n            <ng-template [ngTemplateOutlet]=\"headerContentDirective.templateRef\"></ng-template>\r\n        </div>\r\n        <div class=\"f-toolbar\"  *ngIf=\"toolbarComponentType\" component-template [cmpRef]=\"toolbarComponentType\" [ctx]=\"ctx\"></div>\r\n        <div class=\"f-toolbar\" [ngClass]=\"\r\n            headerToolbarDirective &&\r\n            headerToolbarDirective.toolbarCls\" *ngIf=\" !toolbarComponentType&&headerToolbarDirective &&headerToolbarDirective.templateRef \">\r\n            <ng-template [ngTemplateOutlet]=\"headerToolbarDirective.templateRef\" *ngIf=\"\r\n                headerToolbarDirective &&\r\n                headerToolbarDirective.templateRef\r\n            \"></ng-template>\r\n        </div>\r\n        <div #toolbarHeaderContainer class=\"f-section-toolbar f-section-header--toolbar\"\r\n            *ngIf=\"!toolbarComponentType&&!headerToolbarDirective&&toolbarPosition=='inHead'\">\r\n            <ng-container [ngTemplateOutlet]=\"toolbarBtnTmpl\"\r\n                [ngTemplateOutletContext]=\"{ datas: toolbarBtns, dpHidden:toolbarDpHidden,dpDatas:inMoreButtonContents}\">\r\n            </ng-container>\r\n        </div>\r\n        <div class=\"f-viewchange\" *ngIf=\"viewchagneComponentType\" component-template [cmpRef]=\"viewchagneComponentType\" [ctx]=\"ctx\"></div>\r\n        <div class=\"f-viewchange\" [ngClass]=\"viewChangeDirective && viewChangeDirective.viewChangeCls\"\r\n            *ngIf=\"!viewchagneComponentType&&viewChangeDirective &&viewChangeDirective.templateRef \">\r\n            <ng-template [ngTemplateOutlet]=\"viewChangeDirective.templateRef\"></ng-template>\r\n        </div>\r\n        <div class=\"f-max-accordion\" *ngIf=\"enableMaximize||enableAccordion!=''\">\r\n            <span class=\"f-icon\" *ngIf=\"enableMaximize\" [class.f-icon-maximize]=\"!maxStatus\"\r\n                [class.f-icon-minimize]=\"maxStatus\" (click)=\"maxminHandler()\"> </span>\r\n            <button class=\"btn f-btn-collapse-expand f-btn-mx\" *ngIf=\"enableAccordion\"\r\n                [ngClass]=\"{ 'f-state-expand': expandStatus }\" (click)=\"this.expandStatus = !this.expandStatus\">\r\n                <span *ngIf=\"!expandStatus\">{{'section.expandLabel'|locale}}</span>\r\n                <span *ngIf=\"expandStatus\">{{'section.collapseLabel'|locale}}</span>\r\n            </button>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <div class=\"f-section-header--btn-placeholder\" *ngIf=\"!headerToolbarDirective&&toolbarPosition\">\r\n        <div class=\"btn-group f-btn-ml\"><button class=\"btn btn-secondary morebtn dropdown-toggle\">{{'tabs.more' | locale}}</button></div>    \r\n        <div class=\"btn-placeholder--content\"  #btnPlaceholder>\r\n            <ng-container *ngTemplateOutlet=\"btnPlaceHolderTmpl; context: { $implicit: toolbar.contents }\"></ng-container>\r\n        </div>       \r\n    </div>\r\n</div>\r\n<div class=\"f-section-header--btn-placeholder\" *ngIf=\"!showHeader&&toolbarPosition=='inContent'\">\r\n    <div class=\"btn-group  f-btn-ml\"><button class=\"btn btn-secondary morebtn dropdown-toggle\">{{'tabs.more' | locale}}</button></div>    \r\n    <div class=\"btn-placeholder--content\"  #btnPlaceholder>   \r\n            <ng-container *ngTemplateOutlet=\"btnPlaceHolderTmpl; context: { $implicit: toolbar.contents }\"></ng-container>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"f-section-extend\" *ngIf=\"extendComponentType\" component-template [cmpRef]=\"extendComponentType\" [ctx]=\"ctx\">\r\n</div>\r\n\r\n<div class=\"f-section-extend\" [ngClass]=\"extendDirective && extendDirective.extendCls\" \r\n    *ngIf=\"!extendComponentType&&extendDirective && extendDirective.templateRef\">\r\n    <ng-template  [ngTemplateOutlet]=\"extendDirective.templateRef\"></ng-template>\r\n</div>\r\n\r\n<div class=\"f-section-content\" [ngClass]=\"contentCls\">\r\n    <div class=\"f-section-toolbar f-section-content--toolbar\"\r\n        *ngIf=\"!toolbarComponentType&&!headerToolbarDirective&&toolbarPosition=='inContent'\">\r\n        <ng-container [ngTemplateOutlet]=\"toolbarBtnTmpl\"\r\n            [ngTemplateOutletContext]=\"{ datas: toolbarBtns, dpHidden:toolbarDpHidden,dpDatas:inMoreButtonContents}\">\r\n        </ng-container>\r\n    </div>\r\n    <ng-content></ng-content>\r\n</div>\r\n<ng-template #toolbarBtnTmpl let-datas=\"datas\" let-dpHidden=\"dpHidden\" let-dpDatas=\"dpDatas\">\r\n    <div class=\"toolbar-btn-inline-flex\" #toolbarContainer>\r\n        <ng-container *ngFor=\"let btn of datas;trackBy:trackByButton\">\r\n            <ng-container *ngIf=\"getState(btn,'visible')\">\r\n                <ng-container *ngIf=\"!btn.children||btn.children.length==0\">\r\n                    <button [attr.id]=\"btn.id\" [ngClass]=\"btn.appearance?.class\"  [disabled]=\"getState(btn,'disable')\"\r\n                    (click)=\"clickHandler(btn)\"  [class.btn-icontext]=\"btn.icon&&btn.icon.trim()\">\r\n                    <i class=\"f-icon\" [ngClass]=\"btn.icon&&btn.icon.trim()\" *ngIf=\"btn.icon&&btn.icon.trim()\"></i>{{btn.title}}\r\n                </button>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"btn.children&&btn.children.length>0\">\r\n                    <ng-container *ngTemplateOutlet=\"dropdownTmpl; context: { $implicit: btn }\"></ng-container>\r\n                </ng-container> \r\n            </ng-container>\r\n        </ng-container>\r\n    </div>        \r\n    <ng-container *ngIf=\"!dpHidden&&dpDatas.length>0\">\r\n        <div class=\"btn-group f-btn-ml\" fDropdown  [forceState]=\"dpState\" [rectifyReference]=\"referEl\" [autoRectify]=\"true\">\r\n            <button class=\"btn btn-secondary dropdown-toggle\" fDropdownToggle>{{'tabs.more' | locale}}</button>\r\n            <ul class=\"dropdown-menu\" fDropdownMenu *ngIf=\"dpDatas.length>0\">\r\n                <ng-container *ngFor=\"let dpBtn of dpDatas;trackBy:trackByButton\">                                   \r\n                    <ng-container  *ngIf=\"getState(dpBtn,'visible')\">\r\n                        <ng-container *ngIf=\"dpBtn.children&&dpBtn.children.length>0\">\r\n                            <ng-container *ngTemplateOutlet=\"dropdownSubTmpl;context: { $implicit: dpBtn}\"></ng-container>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"!dpBtn.children||dpBtn.children.length==0\">\r\n                            <li class=\"dropdown-item  text-truncate \" id=\"{{ dpBtn.id }}\" [class.disabled]=\"getState(dpBtn,'disable')\"  (click)=\"clickHandler(dpBtn)\">\r\n                                {{ dpBtn.title }}\r\n                            </li>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ul>\r\n        </div>\r\n    </ng-container>   \r\n</ng-template>\r\n<!--\u7B2C\u4E00\u5C42\u4E0B\u62C9-->\r\n<ng-template #dropdownTmpl let-data>\r\n    <div class=\"btn-group\" id=\"{{ data.id }}\" [ngClass]=\"data.appearance?.dropdownCls\" fDropdown [forceState]=\"dpState\"  [rectifyReference]=\"referEl\"  [autoRectify]=\"true\">\r\n        <ng-container *ngIf=\"data.split\">\r\n            <button type=\"button\" class=\"btn\" [ngClass]=\"data.appearance?.class\" [class.disabled]=\"getState(data,'disable')\" [class.btn-icontext]=\"data.icon&&data.icon.trim()\" (click)=\"clickHandler(data)\">\r\n                <i class=\"f-icon\" [ngClass]=\"data.icon&&data.icon.trim()\" *ngIf=\"data.icon&&data.icon.trim()\"></i>{{ data.title }}\r\n            </button>\r\n        <button class=\"btn dropdown-toggle dropdown-toggle-split\" [ngClass]=\"data.appearance?.class\" fDropdownToggle></button>\r\n        </ng-container>\r\n        <!--\u4E0D\u542F\u7528\u4E0B\u62C9\u5206\u5F00\u6309\u94AE-->\r\n        <ng-container *ngIf=\"!data.split\">\r\n            <button type=\"button\" fDropdownToggle class=\"btn\" [ngClass]=\"data.appearance?.class + ' dropdown-toggle'\"\r\n                [dpDisabled]=\"getState(data,'disable')\"  [class.btn-icontext]=\"data.icon&&data.icon.trim()\" (click)=\"clickHandler(data)\">\r\n                <i class=\"f-icon\" [ngClass]=\"data.icon&&data.icon.trim()\" *ngIf=\"data.icon&&data.icon.trim()\"></i>{{ data.title }}\r\n            </button>\r\n            <i></i>\r\n        </ng-container>\r\n        <ul class=\"dropdown-menu\" fDropdownMenu id=\"{{ data.id }}_menu\">\r\n            <ng-container *ngTemplateOutlet=\"dropMenuItem; context: { $implicit: data.children }\"></ng-container>\r\n        </ul>\r\n    </div>\r\n</ng-template>\r\n\r\n<!--\u4E0B\u62C9\u5B50\u9879-->\r\n<ng-template #dropMenuItem let-data>\r\n    <ng-container *ngFor=\"let item of data\">\r\n        <ng-container *ngIf=\"getState(item,'visible')\">\r\n            <li class=\"dropdown-item\" id=\"{{ item.id }}\" [class.disabled]=\"getState(item,'disable')\"  (click)=\"clickHandler(item)\">\r\n                {{ item.title }}\r\n            </li>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-template>\r\n\r\n<!--\u7B2C\u4E8C\u5C42\u4E0B\u62C9-->\r\n<ng-template #dropdownSubTmpl let-subData>\r\n    <li class=\"dropdown-submenu\" fDropdown [isSubDP]=\"true\" [placement]=\"'left-bottom'\"  [autoRectify]=\"true\" [rectifyReference]=\"referEl\" id=\"{{ subData.id }}\">\r\n        <ng-container *ngIf=\"subData.split\">\r\n            <span class=\"dropdown-item\" [class.disabled]=\"getState(subData,'disable')\" (click)=\"clickHandler(subData)\">{{ subData.title }}</span>\r\n            <span class=\"dropdown-toggle dropdown-toggle-split\" fDropdownToggle></span>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!subData.split\">\r\n            <span class=\"dropdown-item  dropdown-toggle\" [dpDisabled]=\"getState(subData,'disable')\" (click)=\"clickHandler(subData)\" fDropdownToggle>{{ subData.title }}</span>\r\n        </ng-container>\r\n        <ul class=\"dropdown-menu\" fDropdownMenu id=\"{{ subData.id }}_submenu\">\r\n            <ng-container *ngTemplateOutlet=\"dropMenuItem; context: { $implicit: subData.children }\"></ng-container>\r\n        </ul>\r\n    </li>\r\n</ng-template>\r\n<!--PlaceHolder\u5B58\u653E\u6309\u94AE\u6A21\u7248-->\r\n<ng-template #btnPlaceHolderTmpl let-data>\r\n    <ng-container *ngFor=\"let btn of data\">\r\n        <ng-container  *ngIf=\"getState(btn,'visible')\">\r\n            <ng-container *ngIf=\"!btn.children||btn.children.length==0\">\r\n                <button class=\"btn--cal\" [ngClass]=\"btn.appearance?.class\"  [class.btn-icontext]=\"btn.icon&&btn.icon.trim()\">\r\n                <i class=\"f-icon\" [ngClass]=\"btn.icon&&btn.icon.trim()\" *ngIf=\"btn.icon&&btn.icon.trim()\"></i>{{btn.title}}\r\n            </button>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"btn.children&&btn.children.length>0\">\r\n                <div class=\"btn-group btn--cal\" [ngClass]=\"btn.appearance?.dropdownCls\" >\r\n                    <ng-container *ngIf=\"btn.split\">\r\n                        <button type=\"button\" class=\"btn\" [ngClass]=\"btn.appearance?.class\" [class.btn-icontext]=\"btn.icon&&btn.icon.trim()\">\r\n                            <i class=\"f-icon\" [ngClass]=\"btn.icon&&btn.icon.trim()\" *ngIf=\"btn.icon&&btn.icon.trim()\"></i>{{ btn.title }}\r\n                        </button>\r\n                    <button class=\"btn dropdown-toggle dropdown-toggle-split\" [ngClass]=\"btn.appearance?.class\"></button>\r\n                    </ng-container>\r\n                    <!--\u4E0D\u542F\u7528\u4E0B\u62C9\u5206\u5F00\u6309\u94AE-->\r\n                    <ng-container *ngIf=\"!btn.split\">\r\n                        <button type=\"button\"  class=\"btn\" [ngClass]=\"btn.appearance?.class + ' dropdown-toggle'\"  [class.btn-icontext]=\"btn.icon&&btn.icon.trim()\">\r\n                            <i class=\"f-icon\" [ngClass]=\"btn.icon&&btn.icon.trim()\" *ngIf=\"btn.icon&&btn.icon.trim()\"></i>{{ btn.title }}\r\n                        </button>\r\n                        <i></i>\r\n                    </ng-container>\r\n                </div>\r\n            </ng-container>  \r\n        </ng-container> \r\n    </ng-container>\r\n</ng-template>",
                styles: [".f-section-header--btn-placeholder{position:absolute;top:-30px;right:0;overflow:hidden;left:0;opacity:0;z-index:-90}.f-section-header--btn-placeholder .btn-placeholder--content{display:-webkit-inline-box;display:inline-flex;left:0;position:absolute}.f-section-content .toolbar-btn-inline-flex,.f-section-header .toolbar-btn-inline-flex{display:-webkit-inline-box;display:inline-flex;overflow:hidden}.f-section-header--toolbar{-webkit-box-flex:1;flex:1;-webkit-box-align:center;align-items:center;width:30%;display:-webkit-box;display:flex;-webkit-box-pack:end;justify-content:flex-end;margin-left:.875rem}.f-section-content--toolbar{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center}"]
            }] }
];
/** @nocollapse */
FarrisSectionComponent.ctorParameters = () => [
    { type: Injector, decorators: [{ type: Optional }] }
];
FarrisSectionComponent.propDecorators = {
    contentCls: [{ type: Input }],
    baseCls: [{ type: HostBinding, args: ["class.f-section",] }],
    maxStatusCls: [{ type: HostBinding, args: ["class.f-section-maximize",] }],
    fillCls: [{ type: HostBinding, args: ["class.f-section-fill",] }],
    enableAccordionCls: [{ type: HostBinding, args: ["class.f-section-accordion",] }],
    enableCollapseCls: [{ type: HostBinding, args: ["class.f-state-collapse",] }],
    enableCustomAccordionCls: [{ type: HostBinding, args: ["class.f-section-custom-accordion",] }],
    mainTitle: [{ type: Input }],
    subTitle: [{ type: Input }],
    showHeader: [{ type: Input }],
    enableMaximize: [{ type: Input }],
    maxContentFill: [{ type: Input }],
    enableAccordion: [{ type: Input }],
    fill: [{ type: Input }],
    expandStatus: [{ type: Input }],
    context: [{ type: Input }],
    index: [{ type: Input }],
    toolbar: [{ type: Input }],
    ctx: [{ type: Input }],
    headerComponentType: [{ type: Input }],
    titleComponentType: [{ type: Input }],
    contentComponentType: [{ type: Input }],
    toolbarComponentType: [{ type: Input }],
    extendComponentType: [{ type: Input }],
    viewchagneComponentType: [{ type: Input }],
    headerDirective: [{ type: ContentChild, args: [FarrisSectionHeaderDirective,] }],
    headerTitleDirective: [{ type: ContentChild, args: [FarrisSectionTitleDirective,] }],
    headerContentDirective: [{ type: ContentChild, args: [FarrisSectionHcontentDirective,] }],
    headerToolbarDirective: [{ type: ContentChild, args: [FarrisSectionToolbarDirective,] }],
    extendDirective: [{ type: ContentChild, args: [FarrisSectionExtendDirective,] }],
    contentDirective: [{ type: ContentChild, args: [FarrisSectionContentDirective,] }],
    viewChangeDirective: [{ type: ContentChild, args: [FarrisSectionViewChangeDirective,] }],
    btnStates: [{ type: Input }],
    btnVisible: [{ type: Input }],
    clickThrottleTime: [{ type: Input }],
    toolbarContainer: [{ type: ViewChild, args: ["toolbarContainer",] }],
    btnPlaceHolder: [{ type: ViewChild, args: ["btnPlaceholder",] }]
};
if (false) {
    /** @type {?} */
    FarrisSectionComponent.prototype.contentCls;
    /** @type {?} */
    FarrisSectionComponent.prototype.maxStatus;
    /** @type {?} */
    FarrisSectionComponent.prototype.baseCls;
    /** @type {?} */
    FarrisSectionComponent.prototype.maxStatusCls;
    /** @type {?} */
    FarrisSectionComponent.prototype.mainTitle;
    /** @type {?} */
    FarrisSectionComponent.prototype.subTitle;
    /** @type {?} */
    FarrisSectionComponent.prototype.showHeader;
    /** @type {?} */
    FarrisSectionComponent.prototype.enableMaximize;
    /** @type {?} */
    FarrisSectionComponent.prototype.maxContentFill;
    /**
     * 是否启用収折功能
     * 默认不启用収折,值为''
     * 启用默认収折,值为'default'
     * 启用自定义収折,值为 'custom'
     *
     * @type {?}
     */
    FarrisSectionComponent.prototype.enableAccordion;
    /** @type {?} */
    FarrisSectionComponent.prototype.fill;
    /** @type {?} */
    FarrisSectionComponent.prototype.expandStatus;
    /**
     * 事件上下文，解决按钮点击时没有上下文的问题
     * @type {?}
     */
    FarrisSectionComponent.prototype.context;
    /** @type {?} */
    FarrisSectionComponent.prototype.index;
    /** @type {?} */
    FarrisSectionComponent.prototype.toolbarPosition;
    /** @type {?} */
    FarrisSectionComponent.prototype.toolbarBtns;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype._toolbar;
    /** @type {?} */
    FarrisSectionComponent.prototype.toolbarDpHidden;
    /** @type {?} */
    FarrisSectionComponent.prototype.ctx;
    /** @type {?} */
    FarrisSectionComponent.prototype.headerComponentType;
    /** @type {?} */
    FarrisSectionComponent.prototype.titleComponentType;
    /** @type {?} */
    FarrisSectionComponent.prototype.contentComponentType;
    /** @type {?} */
    FarrisSectionComponent.prototype.toolbarComponentType;
    /** @type {?} */
    FarrisSectionComponent.prototype.extendComponentType;
    /** @type {?} */
    FarrisSectionComponent.prototype.viewchagneComponentType;
    /** @type {?} */
    FarrisSectionComponent.prototype.headerDirective;
    /** @type {?} */
    FarrisSectionComponent.prototype.headerTitleDirective;
    /** @type {?} */
    FarrisSectionComponent.prototype.headerContentDirective;
    /** @type {?} */
    FarrisSectionComponent.prototype.headerToolbarDirective;
    /** @type {?} */
    FarrisSectionComponent.prototype.extendDirective;
    /** @type {?} */
    FarrisSectionComponent.prototype.contentDirective;
    /** @type {?} */
    FarrisSectionComponent.prototype.viewChangeDirective;
    /** @type {?} */
    FarrisSectionComponent.prototype._disableDatas;
    /** @type {?} */
    FarrisSectionComponent.prototype._visibleDatas;
    /** @type {?} */
    FarrisSectionComponent.prototype.clickThrottleTime;
    /** @type {?} */
    FarrisSectionComponent.prototype.toolbarContainer;
    /** @type {?} */
    FarrisSectionComponent.prototype.btnPlaceHolder;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.clickItems;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.clickSubscription;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.ro;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.resizeEl;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.ngZone;
    /** @type {?} */
    FarrisSectionComponent.prototype.dpState;
    /** @type {?} */
    FarrisSectionComponent.prototype.referEl;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.initParent;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.initSibling;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.elSelf;
    /** @type {?} */
    FarrisSectionComponent.prototype.inMoreButtonContents;
    /** @type {?} */
    FarrisSectionComponent.prototype.commonUtils;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.cdRef;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.nativeEl;
    /**
     * @type {?}
     * @private
     */
    FarrisSectionComponent.prototype.inject;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VjdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLXNlY3Rpb24vIiwic291cmNlcyI6WyJsaWIvc2VjdGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBUUEsT0FBTyxFQUNILFNBQVMsRUFFVCxLQUFLLEVBQ0wsWUFBWSxFQUNaLFdBQVcsRUFFWCxTQUFTLEVBQ1QsUUFBUSxFQUNSLE1BQU0sRUFDTixRQUFRLEVBQ1IsVUFBVSxFQUNWLFNBQVMsRUFDVCxpQkFBaUIsR0FDcEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDbEYsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDcEYsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDeEYsT0FBTyxFQUNILDZCQUE2QixFQUM3QixnQ0FBZ0MsR0FDbkMsTUFBTSx1Q0FBdUMsQ0FBQztBQUMvQyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUNwRixPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUN0RixPQUFPLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBZ0IsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRTdELE9BQU8sY0FBYyxNQUFNLDBCQUEwQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxHQUFHLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDbkQsT0FBTyxFQUF3QixXQUFXLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQU10RSxNQUFNLE9BQU8sc0JBQXNCOzs7O0lBcUwvQixZQUFnQyxNQUFnQjtRQUFoQixXQUFNLEdBQU4sTUFBTSxDQUFVO1FBcEx2QyxlQUFVLEdBQUcsRUFBRSxDQUFDO1FBQ3pCLGNBQVMsR0FBRyxLQUFLLENBQUM7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SUFFcEQsc0RBQW9EOztJQUVwRCxxREFBbUQ7O0lBRW5ELHlEQUF1RDs7SUFHdkQsaURBQWlFOztJQUVqRSxzREFBcUU7O0lBRXJFLHdEQUEwRTs7SUFFMUUsd0RBQXlFOztJQUV6RSxpREFBaUU7O0lBRWpFLGtEQUFtRTs7SUFFbkUscURBQXlFOztJQUt6RSwrQ0FDa0I7O0lBY2xCLCtDQUNrQjs7SUFjbEIsbURBQWlDOztJQUdqQyxrREFBZ0Q7O0lBRWhELGdEQUE0Qzs7Ozs7SUFFNUMsNENBQXdDOzs7OztJQUN4QyxtREFBd0M7Ozs7O0lBTXhDLG9DQUFrQzs7Ozs7SUFDbEMsMENBQXdCOzs7OztJQUV4Qix3Q0FBZTs7SUFFZix5Q0FBa0I7O0lBRWxCLHlDQUFlOzs7OztJQUNmLDBDQUE0Qjs7Ozs7SUFFNUIsNENBQTBCOzs7OztJQUMxQiw2Q0FBMkI7Ozs7O0lBQzNCLHdDQUFnQzs7SUFDaEMsc0RBQTBDOztJQUMxQyw2Q0FBeUI7Ozs7O0lBQ3pCLHVDQUFpQzs7Ozs7SUFDakMsMENBQWlCOzs7OztJQUNMLHdDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIEBBdXRob3I6IOeWr+eLguengOaJjShMdWNhcyBIdWFuZylcclxuICogQERhdGU6IDIwMTktMDgtMTQgMTU6MjI6MjFcclxuICogQExhc3RFZGl0b3JzOiDnlq/ni4Lnp4DmiY0oTHVjYXMgSHVhbmcpXHJcbiAqIEBMYXN0RWRpdFRpbWU6IDIwMTktMDgtMTUgMTY6NDQ6MTVcclxuICogQFFROiAxMDU1ODE4MjM5XHJcbiAqIEBWZXJzaW9uOiB2MC4wLjFcclxuICovXHJcbmltcG9ydCB7XHJcbiAgICBDb21wb25lbnQsXHJcbiAgICBPbkluaXQsXHJcbiAgICBJbnB1dCxcclxuICAgIENvbnRlbnRDaGlsZCxcclxuICAgIEhvc3RCaW5kaW5nLFxyXG4gICAgT25EZXN0cm95LFxyXG4gICAgVmlld0NoaWxkLFxyXG4gICAgT3B0aW9uYWwsXHJcbiAgICBOZ1pvbmUsXHJcbiAgICBJbmplY3RvcixcclxuICAgIEVsZW1lbnRSZWYsXHJcbiAgICBSZW5kZXJlcjIsXHJcbiAgICBDaGFuZ2VEZXRlY3RvclJlZixcclxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBGYXJyaXNTZWN0aW9uVGl0bGVEaXJlY3RpdmUgfSBmcm9tIFwiLi9kaXJlY3RpdmUvc2VjdGlvbi10aXRsZS5kaXJlY3RpdmVcIjtcclxuaW1wb3J0IHsgRmFycmlzU2VjdGlvbkhlYWRlckRpcmVjdGl2ZSB9IGZyb20gXCIuL2RpcmVjdGl2ZS9zZWN0aW9uLWhlYWRlci5kaXJlY3RpdmVcIjtcclxuaW1wb3J0IHsgRmFycmlzU2VjdGlvbkhjb250ZW50RGlyZWN0aXZlIH0gZnJvbSBcIi4vZGlyZWN0aXZlL3NlY3Rpb24taGNvbnRlbnQuZGlyZWN0aXZlXCI7XHJcbmltcG9ydCB7XHJcbiAgICBGYXJyaXNTZWN0aW9uVG9vbGJhckRpcmVjdGl2ZSxcclxuICAgIEZhcnJpc1NlY3Rpb25WaWV3Q2hhbmdlRGlyZWN0aXZlLFxyXG59IGZyb20gXCIuL2RpcmVjdGl2ZS9zZWN0aW9uLXRvb2xiYXIuZGlyZWN0aXZlXCI7XHJcbmltcG9ydCB7IEZhcnJpc1NlY3Rpb25FeHRlbmREaXJlY3RpdmUgfSBmcm9tIFwiLi9kaXJlY3RpdmUvc2VjdGlvbi1leHRlbmQuZGlyZWN0aXZlXCI7XHJcbmltcG9ydCB7IEZhcnJpc1NlY3Rpb25Db250ZW50RGlyZWN0aXZlIH0gZnJvbSBcIi4vZGlyZWN0aXZlL3NlY3Rpb24tY29udGVudC5kaXJlY3RpdmVcIjtcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCwgU3Vic2NyaXB0aW9uLCBvZiB9IGZyb20gXCJyeGpzXCI7XHJcbmltcG9ydCB7IFRvb2xiYXJDb25maWcsIEJ1dHRvbkNvbmZpZyB9IGZyb20gXCIuL3Rvb2xiYXIuY29uZmlnXCI7XHJcbmltcG9ydCBSZXNpemVPYnNlcnZlciBmcm9tIFwicmVzaXplLW9ic2VydmVyLXBvbHlmaWxsXCI7XHJcbmltcG9ydCB7IG1hcCwgZGVib3VuY2VUaW1lIH0gZnJvbSBcInJ4anMvb3BlcmF0b3JzXCI7XHJcbmltcG9ydCB7IENvbXBvbmVudFRlbXBsYXRlUmVmLCBDb21tb25VdGlscyB9IGZyb20gXCJAZmFycmlzL3VpLWNvbW1vblwiO1xyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiBcImZhcnJpcy1zZWN0aW9uXCIsXHJcbiAgICB0ZW1wbGF0ZVVybDogXCIuL3NlY3Rpb24uY29tcG9uZW50Lmh0bWxcIixcclxuICAgIHN0eWxlVXJsczogW1wiLi9zZWN0aW9uLmNvbXBvbmVudC5jc3NcIl0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGYXJyaXNTZWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gICAgQElucHV0KCkgY29udGVudENscyA9IFwiXCI7XHJcbiAgICBtYXhTdGF0dXMgPSBmYWxzZTtcclxuICAgIEBIb3N0QmluZGluZyhcImNsYXNzLmYtc2VjdGlvblwiKSBiYXNlQ2xzID0gdHJ1ZTtcclxuICAgIEBIb3N0QmluZGluZyhcImNsYXNzLmYtc2VjdGlvbi1tYXhpbWl6ZVwiKSBtYXhTdGF0dXNDbHM6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIC8vIEBIb3N0QmluZGluZyhcImNsYXNzLmYtc2VjdGlvbi1tYXhpbWl6ZS1zY3JvbGwtY29udGVudFwiKSBtYXhTY3JvbGw6Ym9vbGVhbiA9IGZhbHNlO1xyXG4gICAgQEhvc3RCaW5kaW5nKFwiY2xhc3MuZi1zZWN0aW9uLWZpbGxcIikgZ2V0IGZpbGxDbHMoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsbDtcclxuICAgIH1cclxuICAgIEBIb3N0QmluZGluZyhcImNsYXNzLmYtc2VjdGlvbi1hY2NvcmRpb25cIilcclxuICAgIGdldCBlbmFibGVBY2NvcmRpb25DbHMoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZW5hYmxlQWNjb3JkaW9uID09IFwiZGVmYXVsdFwiO1xyXG4gICAgfVxyXG4gICAgQEhvc3RCaW5kaW5nKFwiY2xhc3MuZi1zdGF0ZS1jb2xsYXBzZVwiKSBnZXQgZW5hYmxlQ29sbGFwc2VDbHMoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICB0aGlzLmVuYWJsZUFjY29yZGlvbiA9PT0gXCJkZWZhdWx0XCIgfHxcclxuICAgICAgICAgICAgdGhpcy5lbmFibGVBY2NvcmRpb24gPT09IFwiY3VzdG9tXCJcclxuICAgICAgICApIHtcclxuICAgICAgICAgICAgcmV0dXJuICF0aGlzLmV4cGFuZFN0YXR1cztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEBIb3N0QmluZGluZyhcImNsYXNzLmYtc2VjdGlvbi1jdXN0b20tYWNjb3JkaW9uXCIpXHJcbiAgICBnZXQgZW5hYmxlQ3VzdG9tQWNjb3JkaW9uQ2xzKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmVuYWJsZUFjY29yZGlvbiA9PSBcImN1c3RvbVwiO1xyXG4gICAgfVxyXG4gICAgLy8g5Li75qCH6aKYXHJcbiAgICBASW5wdXQoKSBtYWluVGl0bGU6IHN0cmluZztcclxuICAgIC8vIOWJr+agh+mimFxyXG4gICAgQElucHV0KCkgc3ViVGl0bGU6IHN0cmluZztcclxuICAgIC8vIOaYr+WQpuaYvuekumhlYWRlclxyXG4gICAgQElucHV0KCkgc2hvd0hlYWRlciA9IHRydWU7XHJcbiAgICAvLyDmmK/lkKbmlK/mjIHmnIDlpKfljJZcclxuICAgIEBJbnB1dCgpIGVuYWJsZU1heGltaXplID0gZmFsc2U7XHJcbiAgICAvLyDmnIDlpKfljJbml7bvvIzlhoXlrrnmmK/lkKbloavlhYXigJTigJTkuIDoiKzooajmoLzloavlhYXjgIHooajljZXloavlhpnljLrln5/mmK/mu5rliqhcclxuICAgIEBJbnB1dCgpIG1heENvbnRlbnRGaWxsID0gdHJ1ZTtcclxuICAgIC8qKlxyXG4gICAgICog5piv5ZCm5ZCv55So5Y+O5oqY5Yqf6IO9XHJcbiAgICAgKiDpu5jorqTkuI3lkK/nlKjlj47mipgs5YC85Li6JydcclxuICAgICAqIOWQr+eUqOm7mOiupOWPjuaKmCzlgLzkuLonZGVmYXVsdCdcclxuICAgICAqIOWQr+eUqOiHquWumuS5ieWPjuaKmCzlgLzkuLogJ2N1c3RvbSdcclxuICAgICAqKi9cclxuICAgIEBJbnB1dCgpIGVuYWJsZUFjY29yZGlvbiA9IFwiXCI7XHJcbiAgICAvLyBzZWN0aW9u5piv5ZCm6ZO65ruhXHJcbiAgICBASW5wdXQoKSBmaWxsID0gZmFsc2U7XHJcbiAgICAvLyDpu5jorqTmmK/mmK/lkKblsZXlvIBcclxuICAgIEBJbnB1dCgpIGV4cGFuZFN0YXR1cyA9IHRydWU7XHJcbiAgICAvKipcclxuICAgICAqIOS6i+S7tuS4iuS4i+aWh++8jOino+WGs+aMiemSrueCueWHu+aXtuayoeacieS4iuS4i+aWh+eahOmXrumimFxyXG4gICAgICovXHJcbiAgICBASW5wdXQoKSBjb250ZXh0OiBhbnk7XHJcbiAgICBASW5wdXQoKSBpbmRleDogYW55O1xyXG4gICAgLy8g5bCx5p2l5oyJ6ZKu5L2N572uXHJcbiAgICB0b29sYmFyUG9zaXRpb24gPSBcIlwiO1xyXG4gICAgLy9cclxuICAgIHRvb2xiYXJCdG5zID0gW107XHJcbiAgICAvLyDlt6XlhbfmoI/mjInpkq5cclxuICAgIHByaXZhdGUgX3Rvb2xiYXI6IFRvb2xiYXJDb25maWcgfCBudWxsID0gbnVsbDtcclxuICAgIEBJbnB1dCgpXHJcbiAgICBzZXQgdG9vbGJhcih2YWx1ZTogVG9vbGJhckNvbmZpZyB8IG51bGwpIHtcclxuICAgICAgICBpZiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5fdG9vbGJhciA9IHZhbHVlO1xyXG4gICAgICAgICAgICAvLyDorqHnrpfkvY3nva5cclxuICAgICAgICAgICAgdGhpcy50b29sYmFyUG9zaXRpb24gPSB0aGlzLmdldFRvb2xiYXJQb3NpdGlvbigpO1xyXG4gICAgICAgICAgICAvL1xyXG4gICAgICAgICAgICB0aGlzLnRvb2xiYXJCdG5zID0gWy4uLnRoaXMudG9vbGJhci5jb250ZW50c107XHJcbiAgICAgICAgICAgIHRoaXMuaW5Nb3JlQnV0dG9uQ29udGVudHMgPSBbXTtcclxuICAgICAgICAgICAgLy8g57uR5a6a5LqL5Lu2XHJcbiAgICAgICAgICAgIHRoaXMuYmluZFJlc2l6ZUV2ZW50KCk7XHJcbiAgICAgICAgICAgIC8vIOiwg+aVtOeVjOmdolxyXG4gICAgICAgICAgICB0aGlzLmFmdGVyQmluZFRvb2xiYXJEYXRhKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fdG9vbGJhciA9IG51bGw7XHJcbiAgICAgICAgICAgIC8vIOacieS9jee9rlxyXG4gICAgICAgICAgICB0aGlzLnRvb2xiYXJQb3NpdGlvbiA9IFwiXCI7XHJcbiAgICAgICAgICAgIHRoaXMudG9vbGJhckJ0bnMgPSBbXTtcclxuICAgICAgICAgICAgdGhpcy5pbk1vcmVCdXR0b25Db250ZW50cyA9IFtdO1xyXG4gICAgICAgICAgICAvLyDnp7vpmaTnu5Hlrprkuovku7ZcclxuICAgICAgICAgICAgdGhpcy51bkJpbmRSZXNpemVFdmVudCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGdldCB0b29sYmFyKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl90b29sYmFyO1xyXG4gICAgfVxyXG4gICAgLy/moIforrDmjInpkq7lt6XlhbfmoI/mmK/lkKbpmpDol49b5pu05aSaXeaMiemSrlxyXG4gICAgdG9vbGJhckRwSGlkZGVuID0gdHJ1ZTtcclxuICAgIEBJbnB1dCgpIGN0eDtcclxuICAgIC8vIHNlY3Rpb27lpLTpg6hcclxuICAgIEBJbnB1dCgpIGhlYWRlckNvbXBvbmVudFR5cGU6IENvbXBvbmVudFRlbXBsYXRlUmVmO1xyXG4gICAgLy8gc2VjdGlvbuWktOmDqOagh+mimOWMuuaooeadv1xyXG4gICAgQElucHV0KCkgdGl0bGVDb21wb25lbnRUeXBlOiBDb21wb25lbnRUZW1wbGF0ZVJlZjtcclxuICAgIC8vc2VjdGlvbuWktOmDqOWPr+aJqeWxleWMuuWfn+aooeadv1xyXG4gICAgQElucHV0KCkgY29udGVudENvbXBvbmVudFR5cGU6IENvbXBvbmVudFRlbXBsYXRlUmVmO1xyXG4gICAgLy9zZWN0aW9u5aS06YOo5bel5YW35qCP5Yy65Z+f5qih5p2/XHJcbiAgICBASW5wdXQoKSB0b29sYmFyQ29tcG9uZW50VHlwZTogQ29tcG9uZW50VGVtcGxhdGVSZWY7XHJcbiAgICAvL3NlY3Rpb27lj6/mianlsZXljLrln5/mqKHmnb/igJTigJTlhoXlrrnljLrkuIrpnaLnmoTmianlsZXvvIzmoIfpopjkuIvpnaJcclxuICAgIEBJbnB1dCgpIGV4dGVuZENvbXBvbmVudFR5cGU6IENvbXBvbmVudFRlbXBsYXRlUmVmO1xyXG4gICAgLy9zZWN0aW9u5aS06YOoVmlld0NoYW5nZeWMuuWfn+aooeadv1xyXG4gICAgQElucHV0KCkgdmlld2NoYWduZUNvbXBvbmVudFR5cGU6IENvbXBvbmVudFRlbXBsYXRlUmVmO1xyXG5cclxuICAgIC8vIHNlY3Rpb27lpLTpg6jmqKHmnb9cclxuICAgIEBDb250ZW50Q2hpbGQoRmFycmlzU2VjdGlvbkhlYWRlckRpcmVjdGl2ZSkgaGVhZGVyRGlyZWN0aXZlOiBhbnk7XHJcbiAgICAvLyBzZWN0aW9u5aS06YOo5qCH6aKY5Yy65qih5p2/XHJcbiAgICBAQ29udGVudENoaWxkKEZhcnJpc1NlY3Rpb25UaXRsZURpcmVjdGl2ZSkgaGVhZGVyVGl0bGVEaXJlY3RpdmU6IGFueTtcclxuICAgIC8vc2VjdGlvbuWktOmDqOWPr+aJqeWxleWMuuWfn+aooeadv1xyXG4gICAgQENvbnRlbnRDaGlsZChGYXJyaXNTZWN0aW9uSGNvbnRlbnREaXJlY3RpdmUpIGhlYWRlckNvbnRlbnREaXJlY3RpdmU6IGFueTtcclxuICAgIC8vc2VjdGlvbuWktOmDqOW3peWFt+agj+WMuuWfn+aooeadv1xyXG4gICAgQENvbnRlbnRDaGlsZChGYXJyaXNTZWN0aW9uVG9vbGJhckRpcmVjdGl2ZSkgaGVhZGVyVG9vbGJhckRpcmVjdGl2ZTogYW55O1xyXG4gICAgLy9zZWN0aW9u5Y+v5omp5bGV5Yy65Z+f5qih5p2/4oCU4oCU5YaF5a655Yy65LiK6Z2i55qE5omp5bGV77yM5qCH6aKY5LiL6Z2iXHJcbiAgICBAQ29udGVudENoaWxkKEZhcnJpc1NlY3Rpb25FeHRlbmREaXJlY3RpdmUpIGV4dGVuZERpcmVjdGl2ZTogYW55O1xyXG4gICAgLy9zZWN0aW9u5YaF5a655Yy65Z+f5qih5p2/XHJcbiAgICBAQ29udGVudENoaWxkKEZhcnJpc1NlY3Rpb25Db250ZW50RGlyZWN0aXZlKSBjb250ZW50RGlyZWN0aXZlOiBhbnk7XHJcbiAgICAvL3NlY3Rpb27lpLTpg6hWaWV3Q2hhbmdl5Yy65Z+f5qih5p2/XHJcbiAgICBAQ29udGVudENoaWxkKEZhcnJpc1NlY3Rpb25WaWV3Q2hhbmdlRGlyZWN0aXZlKSB2aWV3Q2hhbmdlRGlyZWN0aXZlOiBhbnk7XHJcblxyXG4gICAgLy8g5Y+C54WnVGFi5Lit6L+Z5qC355qE5aSE55CG5pa55byP5pyJ6Zeu6aKYLS0tLeW7tuWQjuS/ruaUuVxyXG4gICAgLy8g5piv5ZCm6KKr56aB55So55qE54q25oCBXHJcbiAgICAvLyDmjInnhafkuYvliY3nmoTpgLvovpHvvIzlpoLmnpzmsqHmnInmib7liLBrZXnvvIzlsLHor7TmmI7ooqvnpoHnlKhcclxuICAgIF9kaXNhYmxlRGF0YXM6IE9ic2VydmFibGU8QXJyYXk8eyBba2V5OiBzdHJpbmddOiBib29sZWFuIH0+PiA9XHJcbiAgICAgICAgbmV3IFN1YmplY3QoKTtcclxuICAgIEBJbnB1dCgpXHJcbiAgICBzZXQgYnRuU3RhdGVzKHZhbHVlczogT2JzZXJ2YWJsZTxBcnJheTx7IFtrZXk6IHN0cmluZ106IGJvb2xlYW4gfT4+KSB7XHJcbiAgICAgICAgaWYgKHZhbHVlcykge1xyXG4gICAgICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9kaXNhYmxlRGF0YXMgJiZcclxuICAgICAgICAgICAgICAgIHRoaXMuX2Rpc2FibGVEYXRhcy5oYXNPd25Qcm9wZXJ0eShcInVuc3Vic2NyaWJlXCIpXHJcbiAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZGlzYWJsZURhdGFzW1widW5zdWJzY3JpYmVcIl0oKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLl9kaXNhYmxlRGF0YXMgPSB2YWx1ZXM7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8g5oyJ54Wn5LmL5YmN55qE6YC76L6R77yM5aaC5p6c5rKh5pyJ5om+5Yiwa2V577yM5bCx6K+05piO5Y+v6KeBXHJcbiAgICBfdmlzaWJsZURhdGFzOiBPYnNlcnZhYmxlPEFycmF5PHsgW2tleTogc3RyaW5nXTogYm9vbGVhbiB9Pj4gPVxyXG4gICAgICAgIG5ldyBTdWJqZWN0KCk7XHJcbiAgICAvLyDmmK/lkKblj6/op4HnmoTnirbmgIFcclxuICAgIEBJbnB1dCgpXHJcbiAgICBzZXQgYnRuVmlzaWJsZSh2YWx1ZXM6IE9ic2VydmFibGU8QXJyYXk8eyBba2V5OiBzdHJpbmddOiBib29sZWFuIH0+Pikge1xyXG4gICAgICAgIGlmICh2YWx1ZXMpIHtcclxuICAgICAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICAgICAgdGhpcy5fdmlzaWJsZURhdGFzICYmXHJcbiAgICAgICAgICAgICAgICB0aGlzLl92aXNpYmxlRGF0YXMuaGFzT3duUHJvcGVydHkoXCJ1bnN1YnNjcmliZVwiKVxyXG4gICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3Zpc2libGVEYXRhc1tcInVuc3Vic2NyaWJlXCJdKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5fdmlzaWJsZURhdGFzID0gdmFsdWVzO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIEBJbnB1dCgpIGNsaWNrVGhyb3R0bGVUaW1lID0gMzUwO1xyXG5cclxuICAgIC8vIOmAmui/h+aMiemSruaVsOe7hOaYvuekuuW3peWFt+agj1xyXG4gICAgQFZpZXdDaGlsZChcInRvb2xiYXJDb250YWluZXJcIikgdG9vbGJhckNvbnRhaW5lcjtcclxuICAgIC8vIOiuoeeul+W3peWFt+agj+aMiemSruWuveW6pueahOi+heWKqeWMuuWfn1xyXG4gICAgQFZpZXdDaGlsZChcImJ0blBsYWNlaG9sZGVyXCIpIGJ0blBsYWNlSG9sZGVyO1xyXG5cclxuICAgIHByaXZhdGUgY2xpY2tJdGVtcyA9IG5ldyBTdWJqZWN0PGFueT4oKTtcclxuICAgIHByaXZhdGUgY2xpY2tTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcclxuICAgIC8vIOeUqOS6juaPkOS+m+W+queOr+aViOeOh1xyXG4gICAgdHJhY2tCeUJ1dHRvbihpbmRleDogbnVtYmVyLCBidG46IGFueSk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIGJ0bi5pZDtcclxuICAgIH1cclxuICAgIC8vIOeUqOS6juiuoeeul+WTjeW6lOaXtlxyXG4gICAgcHJpdmF0ZSBybzogUmVzaXplT2JzZXJ2ZXIgPSBudWxsO1xyXG4gICAgcHJpdmF0ZSByZXNpemVFbCA9IG51bGw7XHJcbiAgICAvLyDlpITnkIblj5jljJZcclxuICAgIHByaXZhdGUgbmdab25lO1xyXG4gICAgLy8g5b2T5a695bqm5pS55Y+Y5pe277yM5by65Yi25pS26LW35LiL5ouJ6I+c5Y2VIFxyXG4gICAgZHBTdGF0ZSA9IFtmYWxzZV07XHJcbiAgICAvLyDkuIvmi4noj5zljZXnmoTlj4LnhaflhYPntKBcclxuICAgIHJlZmVyRWwgPSBudWxsO1xyXG4gICAgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyO1xyXG4gICAgLy8g5Yid5aeL55qE54i25YWD57SgXHJcbiAgICBwcml2YXRlIGluaXRQYXJlbnQgPSBudWxsO1xyXG4gICAgcHJpdmF0ZSBpbml0U2libGluZyA9IG51bGw7XHJcbiAgICBwcml2YXRlIGVsU2VsZjogRWxlbWVudFJlZjxhbnk+O1xyXG4gICAgaW5Nb3JlQnV0dG9uQ29udGVudHM6IEJ1dHRvbkNvbmZpZ1tdID0gW107XHJcbiAgICBjb21tb25VdGlsczogQ29tbW9uVXRpbHM7XHJcbiAgICBwcml2YXRlIGNkUmVmOiBDaGFuZ2VEZXRlY3RvclJlZjtcclxuICAgIHByaXZhdGUgbmF0aXZlRWw7XHJcbiAgICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBwcml2YXRlIGluamVjdDogSW5qZWN0b3IpIHtcclxuICAgICAgICBpZiAodGhpcy5pbmplY3QpIHtcclxuICAgICAgICAgICAgdGhpcy5uZ1pvbmUgPSB0aGlzLmluamVjdC5nZXQoTmdab25lLCBudWxsKTtcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJlciA9IHRoaXMuaW5qZWN0LmdldChSZW5kZXJlcjIsIG51bGwpO1xyXG4gICAgICAgICAgICB0aGlzLmVsU2VsZiA9IHRoaXMuaW5qZWN0LmdldChFbGVtZW50UmVmLCBudWxsKTtcclxuICAgICAgICAgICAgdGhpcy5jZFJlZj0gdGhpcy5pbmplY3QuZ2V0KENoYW5nZURldGVjdG9yUmVmLCBudWxsKTtcclxuICAgICAgICAgICAgdGhpcy5jb21tb25VdGlscyA9IHRoaXMuaW5qZWN0LmdldChDb21tb25VdGlscywgbmV3IENvbW1vblV0aWxzKCkpO1xyXG4gICAgICAgICAgICB0aGlzLm5hdGl2ZUVsPXRoaXMuaW5qZWN0LmdldChFbGVtZW50UmVmLCBudWxsKTtcclxuICAgICAgICAgICAgdGhpcy5yZWZlckVsPXRoaXMubmF0aXZlRWwubmF0aXZlRWxlbWVudDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICAgICAgLy8g5qCH6K6w54K55Ye75LqL5Lu2XHJcbiAgICAgICAgdGhpcy5jbGlja1N1YnNjcmlwdGlvbiA9IHRoaXMuY2xpY2tJdGVtc1xyXG4gICAgICAgICAgICAucGlwZShkZWJvdW5jZVRpbWUodGhpcy5jbGlja1Rocm90dGxlVGltZSkpXHJcbiAgICAgICAgICAgIC5zdWJzY3JpYmUoKGJ0bkluZm86IEJ1dHRvbkNvbmZpZykgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGJ0bkluZm8uY2xpY2sgJiYgdHlwZW9mIGJ0bkluZm8uY2xpY2sgPT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYnRuSW5mby5jbGljayh7IGNvbnRleHQ6IHRoaXMuY29udGV4dCB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgLy8g57uR5a6a54q25oCBXHJcbiAgICAgICAgdGhpcy5fZGlzYWJsZURhdGFzLnN1YnNjcmliZSgoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgICAvLyDosIPmlbTmjInpkq7lj6/nlKjnirbmgIFcclxuICAgICAgICAgICAgdGhpcy5jaGFuZ2VTdGF0ZShkYXRhLCBcImRpc2FibGVcIik7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5fdmlzaWJsZURhdGFzLnN1YnNjcmliZSgoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgICAvLyDosIPmlbTmjInpkq7lj6/op4HnirbmgIFcclxuICAgICAgICAgICAgdGhpcy5jaGFuZ2VTdGF0ZShkYXRhLCBcInZpc2libGVcIik7XHJcbiAgICAgICAgICAgIC8vIOmHjeaWsOWIpOaWreaYr+WQpumcgOimgeaYvuekuuS4i+aLiSAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB0aGlzLl9jYWxjdWxhdGVUb29sYmFyRHJvcGRvd25Jc1Nob3coKTtcclxuICAgICAgICAgICAgdGhpcy5fY2FsY3VsYXRlQnV0dG9uc1Nob3coKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyDlpoLmnpzmnIlpbmplY3TvvIzlj5bliLDlhYPntKDmnKzouqtcclxuICAgICAgICBpZiAodGhpcy5lbFNlbGYpIHtcclxuICAgICAgICAgICAgdGhpcy5pbml0UGFyZW50ID0gdGhpcy5lbFNlbGYubmF0aXZlRWxlbWVudC5wYXJlbnRFbGVtZW50O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICAvKipcclxuICAgICAqIFhpbWVuYSAyMy4wOC4zMCDliKTmlq3mmK/lkKblj6/op4Es54us56uL5Ye65p2lXHJcbiAgICAgKiBUb2RvOlxyXG4gICAgICogMeOAgeeOsOWcqGJ0blZpc2libGXmr4/mrKHnmoTlj5jmm7Tpg73mmK/lhajph4/vvIzmmK/lkKbpnIDopoHorrDlvZXmr4/mrKHlj5jmm7TvvIznhLblkI7lkIjlubborqHnrpfvvJ9cclxuICAgICAqIDLjgIHnjrDlnKjliKTmlq3mmK/lkKblj6/op4HnmoTmlrnms5XvvIzmmK/nm7TmjqXmm7TmlrDnlYzpnaLnmoTvvIzmr4/kuKrmjInpkq7kuIrpg73nu5Hlrprkuobov5nkuKrmlrnms5XvvIzkvJrmnInmgKfog73pl67popjjgILlupTor6XmlLnmiJDlpITnkIblnKjnu5HlrprnmoTmiYDmnInmlbDmja7vvIznhLblkI7mm7TmlrDnlYzpnaLjgIJcclxuICAgICAqIDPjgIHmmK/lkKblj6/op4HlkoznpoHnlKjmnInlkIzmoLfnmoTpl67pophcclxuICAgICAqIEBwYXJhbSBpZCBcclxuICAgICAqIEByZXR1cm5zIFxyXG4gICAgICovXHJcbiAgICAvKipcclxuICAgICAqIOiOt+WPluaMiemSrumFjee9ruS4re+8jOemgeeUqOOAgeWPr+ingeeahOWxnuaAp1xyXG4gICAgICogQHBhcmFtIGlkXHJcbiAgICAgKiBAcGFyYW0gc3RhdGVQcm9wXHJcbiAgICAgKi9cclxuICAgIGdldFN0YXRlKGJ0bkl0ZW0sIHN0YXRlUHJvcCkge1xyXG4gICAgICAgIGlmIChidG5JdGVtLmhhc093blByb3BlcnR5KHN0YXRlUHJvcCkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGJ0bkl0ZW1bc3RhdGVQcm9wXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g5LiN5a2Y5Zyo5bGe5oCnXHJcbiAgICAgICAgaWYgKHN0YXRlUHJvcCA9PSBcInZpc2libGVcIikge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDmlLnlj5jlj6/nlKjnirbmgIFcclxuICAgICAqIEBwYXJhbSB2YWx1ZXNcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBjaGFuZ2VTdGF0ZSh2YWx1ZXMsIHN0YXRlUHJvcCkge1xyXG4gICAgICAgIGNvbnN0IGlkQXJyYXkgPSBPYmplY3Qua2V5cyh2YWx1ZXMpO1xyXG4gICAgICAgIGlkQXJyYXkuZm9yRWFjaCgoaWQpID0+IHtcclxuICAgICAgICAgICAgY29uc3Qgc3RhdGUgPSB2YWx1ZXNbaWRdO1xyXG4gICAgICAgICAgICBjb25zdCBpdGVtID0gdGhpcy5fZmluZEl0ZW1CeUlEKGlkLCB0aGlzLnRvb2xiYXJCdG5zKTtcclxuICAgICAgICAgICAgaWYgKGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgIGl0ZW1bc3RhdGVQcm9wXSA9IHN0YXRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy50b29sYmFyLmNvbnRlbnRzLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgY29uc3QgZmluZElkID0gaWRBcnJheS5maW5kKChpZCkgPT4gaWQgPT0gaXRlbS5pZCk7XHJcbiAgICAgICAgICAgIGlmIChmaW5kSWQpIHtcclxuICAgICAgICAgICAgICAgIGl0ZW1bc3RhdGVQcm9wXSA9IHZhbHVlc1tmaW5kSWRdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGl0ZW1bJ2NoaWxkcmVuJ10mJml0ZW1bJ2NoaWxkcmVuJ10ubGVuZ3RoPjApe1xyXG4gICAgICAgICAgICAgICAgLy8g5pWw5o2u5rqQ5Y+q5pyJ5LiA57qn55qE5LiL5ouJXHJcbiAgICAgICAgICAgICAgICBsZXQgZHBDaGlsZHJlbj1pdGVtLmNoaWxkcmVuO1xyXG4gICAgICAgICAgICAgICAgZHBDaGlsZHJlbi5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZmluZElkID0gaWRBcnJheS5maW5kKChpZCkgPT4gaWQgPT0gaXRlbS5pZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpbmRJZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtW3N0YXRlUHJvcF0gPSB2YWx1ZXNbZmluZElkXTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuaW5Nb3JlQnV0dG9uQ29udGVudHMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBmaW5kSWQgPSBpZEFycmF5LmZpbmQoKGlkKSA9PiBpZCA9PSBpdGVtLmlkKTtcclxuICAgICAgICAgICAgaWYgKGZpbmRJZCkge1xyXG4gICAgICAgICAgICAgICAgaXRlbVtzdGF0ZVByb3BdID0gdmFsdWVzW2ZpbmRJZF07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoaXRlbVsnY2hpbGRyZW4nXSYmaXRlbVsnY2hpbGRyZW4nXS5sZW5ndGg+MCl7XHJcbiAgICAgICAgICAgICAgICAvLyDmlbDmja7mupDlj6rmnInkuIDnuqfnmoTkuIvmi4lcclxuICAgICAgICAgICAgICAgIGxldCBkcENoaWxkcmVuPWl0ZW0uY2hpbGRyZW47XHJcbiAgICAgICAgICAgICAgICBkcENoaWxkcmVuLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaW5kSWQgPSBpZEFycmF5LmZpbmQoKGlkKSA9PiBpZCA9PSBpdGVtLmlkKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZmluZElkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1bc3RhdGVQcm9wXSA9IHZhbHVlc1tmaW5kSWRdO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5kcFN0YXRlID0gW2ZhbHNlXTtcclxuICAgICAgICB0aGlzLmNkUmVmJiYhdGhpcy5jZFJlZlsnZGVzdHJveWVkJ10mJnRoaXMuY2RSZWYuZGV0ZWN0Q2hhbmdlcygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5p+l5om+LeaUr+aMgeS4gOe6p+S4i+aLiVxyXG4gICAgICogQHBhcmFtIGlkXHJcbiAgICAgKiBAcGFyYW0gZGF0YXNcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBfZmluZEl0ZW1CeUlEKGlkOiBzdHJpbmcsIGRhdGFzOiBCdXR0b25Db25maWdbXSkge1xyXG4gICAgICAgIGxldCByZXN1bHQ7XHJcbiAgICAgICAgbGV0IGZsYWcgPSBmYWxzZTtcclxuICAgICAgICBsZXQgbGVuID0gZGF0YXMubGVuZ3RoO1xyXG4gICAgICAgIGZvciAodmFyIGsgPSAwOyBrKys7IGsgPCBsZW4pIHtcclxuICAgICAgICAgICAgaWYgKGRhdGFzW2tdLmlkID09IGlkKSB7XHJcbiAgICAgICAgICAgICAgICBmbGFnID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHJlc3VsdCA9IGRhdGFzW2tdO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRhdGFzW2tdW1wiY2hpbGRyZW5cIl0gJiYgZGF0YXNba11bXCJjaGlsZHJlblwiXS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgdEluZGV4ID0gZGF0YXNba11bXCJjaGlsZHJlblwiXS5maW5kSW5kZXgoXHJcbiAgICAgICAgICAgICAgICAgICAgKGJ0bkl0ZW0pID0+IGJ0bkl0ZW0uaWQgPT0gaWRcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICBpZiAodEluZGV4ID4gLTEpIHtcclxuICAgICAgICAgICAgICAgICAgICBmbGFnID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBkYXRhc1trXVtcImNoaWxkcmVuXCJdW3RJbmRleF07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGZsYWcpIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG4gICAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuY2xpY2tTdWJzY3JpcHRpb24pIHtcclxuICAgICAgICAgICAgdGhpcy5jbGlja1N1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xyXG4gICAgICAgICAgICB0aGlzLmNsaWNrU3Vic2NyaXB0aW9uID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICB0aGlzLl92aXNpYmxlRGF0YXMgJiZcclxuICAgICAgICAgICAgdGhpcy5fdmlzaWJsZURhdGFzLmhhc093blByb3BlcnR5KFwidW5zdWJzY3JpYmVcIilcclxuICAgICAgICApIHtcclxuICAgICAgICAgICAgdGhpcy5fdmlzaWJsZURhdGFzW1widW5zdWJzY3JpYmVcIl0oKTtcclxuICAgICAgICAgICAgdGhpcy5fdmlzaWJsZURhdGFzID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICB0aGlzLl9kaXNhYmxlRGF0YXMgJiZcclxuICAgICAgICAgICAgdGhpcy5fZGlzYWJsZURhdGFzLmhhc093blByb3BlcnR5KFwidW5zdWJzY3JpYmVcIilcclxuICAgICAgICApIHtcclxuICAgICAgICAgICAgdGhpcy5fZGlzYWJsZURhdGFzW1widW5zdWJzY3JpYmVcIl0oKTtcclxuICAgICAgICAgICAgdGhpcy5fZGlzYWJsZURhdGFzID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy51bkJpbmRSZXNpemVFdmVudCgpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDnu5HlrprpmZDliLZcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBiaW5kUmVzaXplRXZlbnQoKSB7XHJcbiAgICAgICAgLy8g5qCH6K6w5ZON5bqU5pe2XHJcbiAgICAgICAgaWYgKHRoaXMubmdab25lICYmIHRoaXMudG9vbGJhciAmJiB0aGlzLnRvb2xiYXIuY29udGVudHMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMudG9vbGJhckNvbnRhaW5lcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnJvKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudG9vbGJhckNvbnRhaW5lci5uYXRpdmVFbGVtZW50LnBhcmVudEVsZW1lbnQgPT1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVzaXplRWxcclxuICAgICAgICAgICAgICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDlt7Lnu5Hlrprov4dcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudW5CaW5kUmVzaXplRXZlbnQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5ybyA9PT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJvID0gbmV3IFJlc2l6ZU9ic2VydmVyKChlbCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2FsY3VsYXRlVG9vbGJhckRyb3Bkb3duSXNTaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9jYWxjdWxhdGVCdXR0b25zU2hvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXNpemVFbCA9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRvb2xiYXJDb250YWluZXIubmF0aXZlRWxlbWVudC5wYXJlbnRFbGVtZW50O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJvLm9ic2VydmUodGhpcy5yZXNpemVFbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSwgMCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMudW5CaW5kUmVzaXplRXZlbnQoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOaMiemSruaVsOaNruWPmOabtOWQjuinpuWPkeajgOafpVxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGFmdGVyQmluZFRvb2xiYXJEYXRhKCkge1xyXG4gICAgICAgIGlmICh0aGlzLm5nWm9uZSAmJiB0aGlzLnRvb2xiYXIgJiYgdGhpcy50b29sYmFyLmNvbnRlbnRzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2FsY3VsYXRlVG9vbGJhckRyb3Bkb3duSXNTaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2FsY3VsYXRlQnV0dG9uc1Nob3coKTtcclxuICAgICAgICAgICAgICAgIH0sIDApO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOWIpOaWreS4i+aLieaMiemSruaYr+WQpuaYvuekulxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIF9jYWxjdWxhdGVUb29sYmFyRHJvcGRvd25Jc1Nob3coKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLnRvb2xiYXJDb250YWluZXIgfHwgIXRoaXMudG9vbGJhciB8fCAhdGhpcy50b29sYmFyUG9zaXRpb24pIHtcclxuICAgICAgICAgICAgLy8g5a655Zmo5pyq5pi+56S677yM5rKh5pyJ5pWw5o2u77yM5rKh5pyJ5oyJ6ZKu5L2N572uXHJcbiAgICAgICAgICAgIHRoaXMudG9vbGJhckRwSGlkZGVuID0gdHJ1ZTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBidG5QYXJlbnRzQ29udGFpbmVyID1cclxuICAgICAgICAgICAgdGhpcy50b29sYmFyQ29udGFpbmVyLm5hdGl2ZUVsZW1lbnQucGFyZW50RWxlbWVudDtcclxuICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgIHRoaXMuYnRuUGxhY2VIb2xkZXIubmF0aXZlRWxlbWVudC5zY3JvbGxXaWR0aCA+XHJcbiAgICAgICAgICAgIGJ0blBhcmVudHNDb250YWluZXIub2Zmc2V0V2lkdGhcclxuICAgICAgICApIHtcclxuICAgICAgICAgICAgdGhpcy50b29sYmFyRHBIaWRkZW4gPSBmYWxzZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnRvb2xiYXJEcEhpZGRlbiA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDorqHnrpfmmL7npLrnmoTmjInpkq7kuKrmlbDlj4rmm7TlpJrkuK3mmL7npLrnmoTmjInpkq7kuKrmlbBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBfY2FsY3VsYXRlQnV0dG9uc1Nob3coKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLnRvb2xiYXJDb250YWluZXIgfHwgIXRoaXMudG9vbGJhciB8fCAhdGhpcy50b29sYmFyUG9zaXRpb24pIHtcclxuICAgICAgICAgICAgLy8g5a655Zmo5pyq5pi+56S677yM5rKh5pyJ5pWw5o2u77yM5rKh5pyJ5oyJ6ZKu5L2N572uXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMudG9vbGJhckRwSGlkZGVuKSB7XHJcbiAgICAgICAgICAgIHRoaXMudG9vbGJhckJ0bnMgPSBbLi4udGhpcy50b29sYmFyLmNvbnRlbnRzXTtcclxuICAgICAgICAgICAgdGhpcy5pbk1vcmVCdXR0b25Db250ZW50cyA9IFtdO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCB0b29sYmFyUGFyZW50Q29udGFpbmVyRWwgPVxyXG4gICAgICAgICAgICB0aGlzLnRvb2xiYXJDb250YWluZXIubmF0aXZlRWxlbWVudC5wYXJlbnRFbGVtZW50O1xyXG4gICAgICAgIC8vIGxldCBkaXZFbCA9IHRoaXMudG9vbGJhckNvbnRhaW5lci5uYXRpdmVFbGVtZW50O1xyXG4gICAgICAgIGxldCBidG5QbGFjZUhvbGRlckVsID0gdGhpcy5idG5QbGFjZUhvbGRlci5uYXRpdmVFbGVtZW50O1xyXG4gICAgICAgIGxldCBidG5QbGFjZUhvbGRlckJ0bnMgPSBidG5QbGFjZUhvbGRlckVsLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuYnRuLS1jYWxcIik7XHJcblxyXG4gICAgICAgIC8vIOabtOWkmuaMiemSrlxyXG4gICAgICAgIGNvbnN0IG1vcmVCdXR0b24gPVxyXG4gICAgICAgICAgICBidG5QbGFjZUhvbGRlckVsLnBhcmVudEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb3JlYnRuXCIpO1xyXG4gICAgICAgIC8vIOiuoeeul+aMiemSrueahOWuveW6plxyXG4gICAgICAgIGxldCBiYXNpY1N0YXJ0ID0gcGFyc2VJbnQoXHJcbiAgICAgICAgICAgIGJ0blBsYWNlSG9sZGVyRWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdFxyXG4gICAgICAgICk7XHJcbiAgICAgICAgbGV0IGJhc2ljV2lkdGggPVxyXG4gICAgICAgICAgICB0b29sYmFyUGFyZW50Q29udGFpbmVyRWwub2Zmc2V0V2lkdGggLSBtb3JlQnV0dG9uLm9mZnNldFdpZHRoIC0gMTI7XHJcbiAgICAgICAgbGV0IHRvb2xiYXJEcm9wZG93bkhpZGRlbiA9IHRydWU7XHJcbiAgICAgICAgbGV0IGsgPSAwO1xyXG4gICAgICAgIC8vIOWPquacieS4gOS4quaMiemSrlxyXG4gICAgICAgIGlmIChidG5QbGFjZUhvbGRlckJ0bnMubGVuZ3RoID09IDEpIHtcclxuICAgICAgICAgICAgaWYgKGJ0blBsYWNlSG9sZGVyRWwub2Zmc2V0V2lkdGggPiBiYXNpY1dpZHRoKSB7XHJcbiAgICAgICAgICAgICAgICB0b29sYmFyRHJvcGRvd25IaWRkZW4gPSBmYWxzZTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGsgPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZm9yIChrID0gMTsgayA8PSBidG5QbGFjZUhvbGRlckJ0bnMubGVuZ3RoIC0gMTsgaysrKSB7XHJcbiAgICAgICAgICAgICAgICAvLyDlpoLmnpzlhoXlrrnotoXlh7os6ICD6JmR5Yiw5oyJ6ZKu5LmL6Ze055qE6Ze06LedXHJcbiAgICAgICAgICAgICAgICBpZiAoayA9PSBidG5QbGFjZUhvbGRlckJ0bnMubGVuZ3RoIC0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChidG5QbGFjZUhvbGRlckVsLm9mZnNldFdpZHRoID4gYmFzaWNXaWR0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0b29sYmFyRHJvcGRvd25IaWRkZW4gPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgayA9IGsgLSAxO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKFxyXG4gICAgICAgICAgICAgICAgICAgIHBhcnNlSW50KFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBidG5QbGFjZUhvbGRlckJ0bnNba10uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdFxyXG4gICAgICAgICAgICAgICAgICAgICkgLVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYXNpY1N0YXJ0ID5cclxuICAgICAgICAgICAgICAgICAgICBiYXNpY1dpZHRoXHJcbiAgICAgICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgICAgICB0b29sYmFyRHJvcGRvd25IaWRkZW4gPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICBrID0gayAtIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMudG9vbGJhckRwSGlkZGVuID0gdG9vbGJhckRyb3Bkb3duSGlkZGVuO1xyXG4gICAgICAgIC8vIGxldCBzaG93QnRucyA9IGRpdkVsLnF1ZXJ5U2VsZWN0b3JBbGwoXCJidXR0b25cIik7XHJcbiAgICAgICAgLy8g5Y+q5Yik5pat56ys5LiA5bGC77yM5LiN5Yik5pat5LiL5ouJ6aG5XHJcbiAgICAgICAgbGV0IHNob3dCdG5zID0gdGhpcy50b29sYmFyLmNvbnRlbnRzLmZpbHRlcigoaXRlbSkgPT4gdGhpcy5nZXRTdGF0ZShpdGVtLCBcInZpc2libGVcIikpO1xyXG4gICAgICAgIGxldCByZXN1bHRCdG5zID0gc2hvd0J0bnMuZmlsdGVyKChpdGVtLCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gaW5kZXggPCBrO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMudG9vbGJhckJ0bnMgPSByZXN1bHRCdG5zID8gWy4uLnJlc3VsdEJ0bnNdIDogW107XHJcbiAgICAgICAgLy8gZm9yIChsZXQgbSA9IGs7IG0gPCBzaG93QnRucy5sZW5ndGg7IG0rKykge1xyXG4gICAgICAgIC8vICAgICB0aGlzLnJlbmRlcmVyLnNldFN0eWxlKHNob3dCdG5zW21dLCAnZGlzcGxheScsICdub25lJyk7XHJcbiAgICAgICAgLy8gfVxyXG5cclxuICAgICAgICB0aGlzLmluTW9yZUJ1dHRvbkNvbnRlbnRzID0gc2hvd0J0bnMuZmlsdGVyKFxyXG4gICAgICAgICAgICAoaXRlbSwgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBpbmRleCA+PSBrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgKTtcclxuICAgICAgICB0aGlzLmRwU3RhdGUgPSBbZmFsc2VdO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDlnKjmjInpkq7nirbmgIHlj5jljJbml7bop6PpmaTpmZDliLZcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSB1bkJpbmRSZXNpemVFdmVudCgpIHtcclxuICAgICAgICBpZiAodGhpcy5ybykge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5yZXNpemVFbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yby51bm9ic2VydmUodGhpcy5yZXNpemVFbCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5ybyA9IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAcmV0dXJuIHN0cmluZ1xyXG4gICAgICogJycg5LiN5a2Y5Zyo5oyJ6ZKu77yM5peg5omA6LCT5L2N572uXHJcbiAgICAgKiAnaW5IZWFkJyDmjInpkq7lnKjlpLTpg6hcclxuICAgICAqICdpbkNvbnRlbnQnIOaMiemSruWcqOWGheWuueS9jee9rlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGdldFRvb2xiYXJQb3NpdGlvbigpIHtcclxuICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgIHRoaXMudG9vbGJhciAmJlxyXG4gICAgICAgICAgICB0aGlzLnRvb2xiYXIuaGFzT3duUHJvcGVydHkoXCJwb3NpdGlvblwiKSAmJlxyXG4gICAgICAgICAgICB0aGlzLnRvb2xiYXIuaGFzT3duUHJvcGVydHkoXCJjb250ZW50c1wiKSAmJlxyXG4gICAgICAgICAgICB0aGlzLnRvb2xiYXIuY29udGVudHMubGVuZ3RoID4gMFxyXG4gICAgICAgICkge1xyXG4gICAgICAgICAgICAvLyDlpoLmnpzmnInlsZ7mgKfvvIzkuJTmjInpkq7mnInlgLxcclxuICAgICAgICAgICAgaWYgKHRoaXMudG9vbGJhci5wb3NpdGlvbiA9PT0gXCJpbkhlYWRcIikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiaW5IZWFkXCI7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJpbkNvbnRlbnRcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gXCJcIjtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5Yik5pat5piv5ZCm5pi+56S644CB6ZqQ6JePXHJcbiAgICAgKiBAcGFyYW0gaWRcclxuICAgICAqIEBwYXJhbSBzdGF0ZVxyXG4gICAgICovXHJcbiAgICBnZXRUb29sYmFyU3RhdGUoXHJcbiAgICAgICAgaWQ6IHN0cmluZyxcclxuICAgICAgICBzdGF0ZTogT2JzZXJ2YWJsZTxhbnk+ID0gdGhpcy5idG5TdGF0ZXMsXHJcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBib29sZWFuID0gZmFsc2VcclxuICAgICkge1xyXG4gICAgICAgIGlmIChzdGF0ZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gc3RhdGUucGlwZShcclxuICAgICAgICAgICAgICAgIG1hcCgobjogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5baWRdID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS53YXJuKGDmnKrmib5JROS4uu+8miR7aWR9IOebuOWFs+eKtuaAgeiuvue9ru+8gWApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbltpZF07XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBvZihkZWZhdWx0VmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGNsaWNrSGFuZGxlcihidG5JbmZvKSB7XHJcbiAgICAgICAgaWYgKCFidG5JbmZvKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGJ0bkluZm8uaGFzT3duUHJvcGVydHkoJ2Rpc2FibGUnKSYmYnRuSW5mb1snZGlzYWJsZSddKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5jbGlja0l0ZW1zLm5leHQoYnRuSW5mbyk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOacgOWkp+acgOWwj+WMluS6i+S7tuWkhOeQhlxyXG4gICAgICovXHJcbiAgICBtYXhtaW5IYW5kbGVyKCkge1xyXG4gICAgICAgIHRoaXMubWF4U3RhdHVzID0gIXRoaXMubWF4U3RhdHVzO1xyXG4gICAgICAgIHRoaXMubWF4U3RhdHVzQ2xzID0gdGhpcy5tYXhTdGF0dXM7XHJcbiAgICAgICAgLy90aGlzLm1heFN0YXR1c0Nscz10aGlzLm1heFN0YXR1cyYmdGhpcy5tYXhDb250ZW50RmlsbDtcclxuICAgICAgICAvLyB0aGlzLm1heFNjcm9sbD10aGlzLm1heFN0YXR1cyYmIXRoaXMubWF4Q29udGVudEZpbGw7XHJcbiAgICAgICAgLy8g5pyA5aSn5YyWXHJcbiAgICAgICAgaWYgKCF0aGlzLmluaXRQYXJlbnQpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5tYXhTdGF0dXMpIHtcclxuICAgICAgICAgICAgdGhpcy5pbml0U2libGluZyA9IHRoaXMuZWxTZWxmLm5hdGl2ZUVsZW1lbnQubmV4dEVsZW1lbnRTaWJsaW5nO1xyXG4gICAgICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCJib2R5XCIpXHJcbiAgICAgICAgICAgICAgICAuYXBwZW5kQ2hpbGQodGhpcy5lbFNlbGYubmF0aXZlRWxlbWVudCk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbW1vblV0aWxzKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB6aW5kZXggPSB0aGlzLmNvbW1vblV0aWxzLmdldEZsb2F0aW5nTGF5ZXJJbmRleCgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZShcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmVsU2VsZi5uYXRpdmVFbGVtZW50LFxyXG4gICAgICAgICAgICAgICAgICAgIFwiekluZGV4XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgemluZGV4XHJcbiAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgLy8g5pyA5bCP5YyWXHJcbiAgICAgICAgICAgIGlmICh0aGlzLmluaXRTaWJsaW5nKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRQYXJlbnQuaW5zZXJ0QmVmb3JlKFxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZWxTZWxmLm5hdGl2ZUVsZW1lbnQsXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbml0U2libGluZ1xyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW5pdFBhcmVudC5hcHBlbmRDaGlsZCh0aGlzLmVsU2VsZi5uYXRpdmVFbGVtZW50KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5yZW1vdmVTdHlsZSh0aGlzLmVsU2VsZi5uYXRpdmVFbGVtZW50LCBcInpJbmRleFwiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19