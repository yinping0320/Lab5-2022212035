{"version":3,"sources":["ng://@farris/ui-forms/validation-message/validate-msg.component.ts","ng://@farris/ui-forms/validation-message/form-message.module.ts"],"names":["ValidationMessageComponent","prototype","ngOnChanges","changes","this","errorMessage","getErrorMessage","errors","ele","nativeElement","style","display","errorMessage_1","Object","keys","forEach","key","name","Component","args","selector","template","ElementRef","Input","showErrorMessage","FormMessageModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"ubAeA,IAAAA,GAsBEA,EAAAC,UAAAC,YAAA,SAAYC,GACVC,KAAKC,aAAeD,KAAKE,gBAAgBF,KAAKG,QAC9CH,KAAKI,IAAIC,cAAcC,MAAMC,QAAWP,KAAKC,aAAwB,QAAT,QAEtDL,EAAAC,UAAAK,gBAAR,SAAwBC,GACtB,GAAKA,EAEE,KACDK,EAAe,GAMnB,OALAC,OAAOC,KAAKP,GAAQQ,QAAO,SAACC,GACtBT,EAAOS,GAAKC,OACdL,EAAeA,EAAe,IAAML,EAAOS,GAAKC,QAG7CL,EARP,OAAO,0BA5BZM,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,oBACVC,SAAU,qYAjBQC,EAAAA,8CA0BjBC,EAAAA,oBACAA,EAAAA,SA2BHvB,GAvBE,SAAAA,EACUQ,GAAAJ,KAAAI,IAAAA,EAFHJ,KAAAoB,kBAAmB,EC9B5B,IAAAC,uBAICC,EAAAA,SAAQP,KAAA,CAAC,CACNQ,QAAS,CACLC,EAAAA,cAEJC,aAAc,CACV7B,GAEJ8B,QAAS,CACL9B,OAIRyB,GAZA,SAAAA","sourcesContent":["import { Component, ElementRef, Input, SimpleChanges, OnChanges } from '@angular/core';\r\n\r\n/**\r\n * å¨è¡¨ådomä¸­å±ç¤ºéè¯¯ä¿¡æ¯\r\n * éè¦å°formControlä¸­çerrorså¯¹è±¡ä¼ å¥\r\n *\r\n * eg: å¨å§åè¾å¥æ¡ä¸æ¹å±ç¤ºéªè¯ä¿¡æ¯\r\n *  å°viewModel.form.name.errorså¯¹è±¡ä¼ å¥\r\n *  <label class=\"k-form-field\">\r\n        <span>å§å</span>\r\n        <input class=\"k-textbox\" formControlName=\"name\" />\r\n        <validationMessage [errors]=\"viewModel.form.name.errors\"></validationMessage>\r\n    </label>\r\n */\r\n\r\n@Component({\r\n  selector: 'validationMessage',\r\n  template: `\r\n      <div class=\"farris-feedback f-state-invalid\">\r\n          <span class=\"f-icon f-icon-message_warning f-feedback-icon\" (click)=\"showErrorMessage=true\" *ngIf=\"!showErrorMessage\"></span>\r\n          <span class=\"f-feedback-message\" *ngIf=\"showErrorMessage\" (click)=\"showErrorMessage=false\">{{this.errorMessage}}</span>\r\n      </div>\r\n    `,\r\n  styles: []\r\n})\r\nclass ValidationMessageComponent implements OnChanges {\r\n  @Input() errors;\r\n  @Input() type: string;\r\n  errorMessage: string;\r\n  // é»è®¤æ¾ç¤ºéè¯¯æ¶æ¯\r\n  public showErrorMessage = true;\r\n  constructor(\r\n    private ele: ElementRef,\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.errorMessage = this.getErrorMessage(this.errors);\r\n    this.ele.nativeElement.style.display = !this.errorMessage ? 'none' : 'block';\r\n  }\r\n  private getErrorMessage(errors) {\r\n    if (!errors) {\r\n      return null;\r\n    } else {\r\n      let errorMessage = '';\r\n      Object.keys(errors).forEach(key => {\r\n        if (errors[key].name) {\r\n          errorMessage = errorMessage + ' ' + errors[key].name;\r\n        }\r\n      });\r\n      return errorMessage;\r\n    }\r\n  }\r\n}\r\nexport { ValidationMessageComponent };\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ValidationMessageComponent } from './validate-msg.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        ValidationMessageComponent\r\n    ],\r\n    exports: [\r\n        ValidationMessageComponent\r\n    ]\r\n})\r\nexport class FormMessageModule {\r\n}\r\n"]}