{"version":3,"sources":["ng://@farris/ui-forms/lib/radio/radio-group.component.ts","ng://@farris/ui-forms/lib/radio/radio.component.ts","ng://@farris/ui-forms/lib/radio/radio-button.component.ts","ng://@farris/ui-forms/lib/radio/radiogroup.component.ts","ng://@farris/ui-forms/lib/checkbox/checkbox-group.component.ts","ng://@farris/ui-forms/lib/checkbox/checkbox.component.ts","ng://@farris/ui-forms/lib/checkbox/checkboxgroup.component.ts","ng://@farris/ui-forms/lib/textarea-autosize.directive.ts","ng://@farris/ui-forms/lib/textarea-wordcount.directive.ts","ng://@farris/ui-forms/lib/textarea-zoom.directive.ts","ng://@farris/ui-forms/lib/input-append.directive.ts","ng://@farris/ui-forms/lib/shortcut-tab.directive.ts","ng://@farris/ui-forms/lib/comments/get-data.interface.ts","ng://@farris/ui-forms/lib/comments/single-list.component.ts","ng://@farris/ui-forms/lib/textarea-comments.directive.ts","node_modules/tslib/tslib.es6.js","ng://@farris/ui-forms/lib/single-select.directive.ts","ng://@farris/ui-forms/lib/forms.module.ts"],"names":["RadioGroupComponent","prototype","ngOnInit","this","name","idSer","generate","replace","changeModel","value","model","modelChange","emit","controlChange","writeValue","registerOnChange","fn","registerOnTouched","controlTouch","Component","args","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","IdService","Input","Output","EventEmitter","subscriber","RadioComponent","Object","defineProperty","hasParent","el","nativeElement","radioGroup","nyModel","changeModelHandler","label","element","parentElement","classList","contains","decorators","type","Optional","ElementRef","HostBinding","blockClass","RadioButtonComponent","isGroupModel","encapsulation","ViewEncapsulation","None","FarrisRadioGroupComponent","clickHandler","item","val","_getValue","changeValue","_getText","commonUtils","getValue","textField","valueField","exportAs","Injector","inject","data","disabledField","showDisabledItem","get","CommonUtils","CheckboxGroupComponent","index","findIndex","ele","splice","push","join","CheckboxComponent","checkbox","_this","find","FarrisCheckboxGroupComponent","setCheckboxData","loadData","loadDataSubscription","subscribe","res","ngOnChanges","changes","ngOnDestroy","unsubscribe","arrValue","transformToArr","String","length","some","filter","n","transformToStr","checked","isStringValue","split","separator","allVals","map","r","forEach","tabIndex","TextareaAutoSizeDirective","init","enable","isFirstChange","sizeToFit","ngAfterViewInit","maxHeight","textarea","style","minHeight","getBoundingClientRect","height","document","ownerDocument","documentElement","ngControl","valueChanges","v","previousValue","onInput","onValueChange","overflowOffset","offsetTop","body","offsetParent","top","defaultView","pageYOffset","bottom","clientHeight","offsetHeight","isUserResized","offsetWidth","textareaStyle","getComputedStyle","topBorderWidth","Number","borderTopWidth","bottomBorderWidth","borderBottomWidth","borderAddOn","boxSizing","container","HTMLElement","containerHeight","h","scrollHeight","Directive","NgControl","HostListener","injector","TextareaWordcountDirective","initWordCount","useWordCount","control","e","updateWordsCount","destroy","ro","disconnect","unobserve","wordCountElement","remove","onlyShowInDialog","createWordCountElement","createWordCountID","tagName","id","max","maxLength","wordCountSPAN","render","createElement","className","setStyle","_a","width","parentWidth","right","ResizeObserver","entries","observer","_pw","contentRect","observe","after","currentLengthSPAN","appendChild","currentLengthElement","listen","countType","tip","innerText","title","localeSer","Renderer2","eventManager","EventManager","LocaleService","TextareaZoomDirective","useZoom","createZoomButton","onMouseEnter","onMouseLeave","onClick","altEnterHandler","zoomButtonElement","bindEventHandler","addEventListener","event","target","preventDefault","stopPropagation","createZoombarID","zoomSPAN","zoomTextarea","opts","dialogWidth","dialogHeight","showFontSize","inputType","saveSize","window","localStorage","key","messagerService","getKeyString","getItem","lastSetting","JSON","parse","fontSize","showText","readOnly","disabled","readonly","showOkButton","prompt2","enableWordCount","wordCountRef","setValue","fullscreen","MessagerService","InputAppendDirective","_enableAppend","appendWrapElement","createStruct","resetStruct","_appendScene","inputAppendControlType","removeClass","toLowerCase","addClass","elWrapElement","modifyPaddingRight","_appendType","ev","inputAppendClickEvent","_inputAppendText","removeChild","appendTextElement","innerHTML","_disabled","disabledCls","_appendCls","inputAppendScene","wrapParent","parentNode","inputAppendText","enableAppend","buttonWrap","inputAppendType","buttonTextWrap","inputAppendCls","tclsName","textParent","inputWrap","outerHTML","indexOf","inputGroupEl","querySelector","ngZone","runOutsideAngular","setTimeout","inputGroupEl2","inputAppendDisabled","findType","typeItem","changeEl","tRectObj","removeStyle","ViewContainerRef","viewRef","NgZone","ShortCutTabKeyDirective","onTabKeydownHandler","currentTarget","allInputs","querySelectorAll","nextInputIndex","Array","from","nextInputTarget","focus","CommentsHttpToken","InjectionToken","SingleListComponent","$event","items","cdr","detectChanges","formatData","rowObj","formatter","onItemClick","itemClick","evnet","setActiveItem","activeIndex","ChangeDetectorRef","ViewChild","showButtons","buttons","maxItems","emptyDataMsg","TextareaCommentsDirective","listenAttributesChanged","useComments","createCommentsButton","hideListPanel","targetNode","MutationObserver","mutationsList","mutationsList_1","__values","o","m","Symbol","iterator","i","call","next","done","tslib_1.__values","mutationsList_1_1","mutation","attributeName","attributes","commentsBtnElement","createID","commentsBtn","icon","listPanelElRef","showListPanel","listPanelEl","zindex","commonUtil","getFloatingLayerIndex","left","append","singListCmf","cfr","resolveComponentFactory","singListRef","create","instance","text","mgrText","iconCls","handler","commentSer","showCommentManageDialog","console","log","_text","patchValue","location","changeDetectorRef","overlaySer","registerMouseEvent","destory","getCommonComments","resetPosition","panelHeight","innerHeight","ComponentFactoryResolver","OverLayHiddenService","SingleSelectDirective","overlayHandler","elRef","panelRef","selectEl","ngCtrl","updateDisplayText","createMySelect","display","selectContainerEl","userSelect","overflow","selectTextEl","alignItems","whiteSpace","displayTextEl","selectArrowEl","beforeShow","of","updatePosition","pipe","debounceTime","add","nodeName","getAttribute","cssText","li","ul","position","top_1","transformOrigin","scrollTop","FarrisFormsModule","NgModule","declarations","imports","CommonModule","FormsModule","MessagerModule","forRoot","FarrisCommonModule","LocaleModule","exports","entryComponents"],"mappings":"g5BAAA,IAAAA,GAwCIA,EAAAC,UAAAC,SAAA,WACIC,KAAKC,KAAOD,KAAKE,MAAMC,WAAWC,QAAQ,KAAM,MAGpDP,EAAAC,UAAAO,YAAA,SAAYC,GACRN,KAAKO,MAAQD,EACbN,KAAKQ,YAAYC,KAAKT,KAAKO,OAC3BP,KAAKU,cAAcJ,IAGvBT,EAAAC,UAAAa,WAAA,SAAWL,GACPN,KAAKO,MAAQD,EACbN,KAAKK,YAAYL,KAAKO,QAG1BV,EAAAC,UAAAc,iBAAA,SAAiBC,GACbb,KAAKU,cAAgBG,GAGzBhB,EAAAC,UAAAgB,kBAAA,SAAkBD,GACdb,KAAKe,aAAeF,uBAzD3BG,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,qBACVC,SAAU,yPAQVC,UAAW,CAAC,CACRC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAU,WAAO,OAAA3B,IAC9B4B,OAAO,YAEF,uDAhBJC,EAAAA,2CAqBJC,EAAAA,qBAGAA,EAAAA,oBAEAA,EAAAA,0BAEAA,EAAAA,2BAEAC,EAAAA,UAkCL/B,GA7BI,SAAAA,EAAoBK,GAAAF,KAAAE,MAAAA,EALVF,KAAAQ,YAAc,IAAIqB,EAAAA,aAG5B7B,KAAA8B,WAAyB,GA4BjB9B,KAAAU,cAAa,aACbV,KAAAe,aAAY,aChExB,IAAAgB,GAyBEC,OAAAC,eACIF,EAAAjC,UAAA,QAAK,KADT,WAEE,OAAIE,KAAKkC,UAAUlC,KAAKmC,GAAGC,eAClBpC,KAAKqC,WAAW9B,MAElBP,KAAKsC,aAGd,SAAU/B,GACRP,KAAKsC,QAAU/B,mCA0BjBwB,EAAAjC,UAAAC,SAAA,WACEC,KAAKC,KAAOD,KAAKqC,WAAWpC,MAG9B8B,EAAAjC,UAAAyC,mBAAA,WAEE,GAAIvC,KAAKkC,UAAUlC,KAAKmC,GAAGC,eACzB,OAAOpC,KAAKqC,WAAWhC,YAAYL,KAAKwC,OAE1CxC,KAAKO,MAAQP,KAAKwC,MAClBxC,KAAKQ,YAAYC,KAAKT,KAAKO,OAC3BP,KAAKU,cAAcV,KAAKwC,QAI1BT,EAAAjC,UAAAoC,UAAA,SAAUO,GACR,OAAOA,EAAQC,cAAcC,UAAUC,SAAS,uBAGlDb,EAAAjC,UAAAa,WAAA,SAAWL,GACTN,KAAKO,MAAQD,GAGfyB,EAAAjC,UAAAc,iBAAA,SAAiBC,GACfb,KAAKU,cAAgBG,GAGvBkB,EAAAjC,UAAAgB,kBAAA,SAAkBD,GAChBb,KAAKe,aAAeF,uBApFvBG,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,eACVC,SAAA,+UAEAC,UAAW,CAAC,CACVC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAU,WAAO,OAAAO,IAC9BN,OAAO,8FATF5B,EAAmBgD,WAAA,CAAA,CAAAC,KAqDvBC,EAAAA,kBAvDkEC,EAAAA,6CAyBpErB,EAAAA,kBAaAA,EAAAA,qBAGAA,EAAAA,wBAGAA,EAAAA,2BAMAC,EAAAA,2BAEAqB,EAAAA,YAAWhC,KAAA,CAAC,oBA0Cfc,GAxCE,SAAAA,EACsBM,EACZF,GADYnC,KAAAqC,WAAAA,EACZrC,KAAAmC,GAAAA,EAfDnC,KAAAwC,MAAa,GAOtBxC,KAAAC,KAAO,GAEGD,KAAAQ,YAAc,IAAIqB,EAAAA,aAEE7B,KAAAkD,YAAa,EAuCnClD,KAAAU,cAAa,aACbV,KAAAe,aAAY,aC5FtB,IAAAoC,GA6CInB,OAAAC,eACIkB,EAAArD,UAAA,QAAK,KADT,WAEI,OAAIE,KAAKkC,UAAUlC,KAAKmC,GAAGC,eAChBpC,KAAKqC,WAAW9B,MAEpBP,KAAKsC,aAGhB,SAAU/B,GACNP,KAAKsC,QAAU/B,mCAqBnByB,OAAAC,eACIkB,EAAArD,UAAA,yBAAsB,KAD1B,WAC+B,OAAO,mCAQtCqD,EAAArD,UAAAC,SAAA,WACIC,KAAKC,KAAOD,KAAKkC,UAAUlC,KAAKmC,GAAGC,eAAiBpC,KAAKqC,WAAWpC,KAAO,IAG/EkD,EAAArD,UAAAsD,aAAA,WACI,OAAOpD,KAAKwC,QAAUxC,KAAKqC,WAAW9B,OAG1C4C,EAAArD,UAAAyC,mBAAA,WAEI,GAAIvC,KAAKkC,UAAUlC,KAAKmC,GAAGC,eACvB,OAAOpC,KAAKqC,WAAWhC,YAAYL,KAAKwC,OAE5CxC,KAAKO,MAAQP,KAAKwC,MAClBxC,KAAKQ,YAAYC,KAAKT,KAAKO,OAC3BP,KAAKU,cAAcV,KAAKwC,QAI5BW,EAAArD,UAAAoC,UAAA,SAAUO,GACN,OAAOA,EAAQC,cAAcC,UAAUC,SAAS,sBAAwBH,EAAQC,cAAcC,UAAUC,SAAS,cAGrHO,EAAArD,UAAAa,WAAA,SAAWL,GACPN,KAAKO,MAAQD,GAGjB6C,EAAArD,UAAAc,iBAAA,SAAiBC,GACbb,KAAKU,cAAgBG,GAGzBsC,EAAArD,UAAAgB,kBAAA,SAAkBD,GACdb,KAAKe,aAAeF,uBA/G3BG,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,sBACVC,SAAU,4VAkBVC,UAAW,CAAC,CACRC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAU,WAAO,OAAA2B,IAC9B1B,OAAO,IAEX4B,cAAeC,EAAAA,kBAAkBC,aAd7B,oQAdC1D,EAAmBgD,WAAA,CAAA,CAAAC,KA6EnBC,EAAAA,kBA/E8DC,EAAAA,4CAyClErB,EAAAA,qBAIAA,EAAAA,kBAaAA,EAAAA,qBAIAA,EAAAA,wBAIAA,EAAAA,2BAKAC,EAAAA,uCAIAqB,EAAAA,YAAWhC,KAAA,CAAC,gCA+CjBkC,GA5CI,SAAAA,EACuBd,EACXF,GADWnC,KAAAqC,WAAAA,EACXrC,KAAAmC,GAAAA,EA1CZnC,KAAAC,KAAO,GAIPD,KAAA8C,KAAO,YAqBP9C,KAAAwC,MAAa,GASbxC,KAAAQ,YAAc,IAAIqB,EAAAA,aA+CV7B,KAAAU,cAAa,aACbV,KAAAe,aAAY,aCxHxB,IAAAyC,GAoDIA,EAAA1D,UAAAC,SAAA,WACIC,KAAKC,KAAOD,KAAKE,MAAMC,WAAWC,QAAQ,KAAM,MAGpDoD,EAAA1D,UAAA2D,aAAA,SAAaC,OACLC,EAAM3D,KAAK4D,UAAUF,GACtB1D,KAAKM,OAASqD,IAEjB3D,KAAKM,MAAQqD,EACb3D,KAAKU,cAAcV,KAAKM,OACxBN,KAAKe,aAAaf,KAAKM,OACvBN,KAAK6D,YAAYpD,KAAKT,KAAKM,SAG/BkD,EAAA1D,UAAAgE,SAAA,SAASJ,GACL,OAAIA,EACI1D,KAAK+D,aAAe/D,KAAK+D,YAAYC,SAC9BhE,KAAK+D,YAAYC,SAAShE,KAAKiE,UAAWP,GAE1CA,EAAK1D,KAAKiE,WAGd,IAIfT,EAAA1D,UAAA8D,UAAA,SAAUF,GACN,OAAIA,EACI1D,KAAK+D,aAAe/D,KAAK+D,YAAYC,SAC9BhE,KAAK+D,YAAYC,SAAShE,KAAKkE,WAAYR,GAE3CA,EAAK1D,KAAKkE,YAGd,IAKfV,EAAA1D,UAAAa,WAAA,SAAWL,GACPN,KAAKM,MAAQA,GAGjBkD,EAAA1D,UAAAc,iBAAA,SAAiBC,GACbb,KAAKU,cAAgBG,GAGzB2C,EAAA1D,UAAAgB,kBAAA,SAAkBD,GACdb,KAAKe,aAAeF,uBA/F3BG,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,oBACVC,SAAA,iqBACAC,UAAW,CAAC,CACRC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAU,WAAO,OAAAgC,IAC9B/B,OAAO,IAEX0C,SAAU,yEAXLzC,EAAAA,iBAF8D0C,EAAAA,SAAQvB,WAAA,CAAA,CAAAC,KA6CpCC,EAAAA,gDA7BtCpB,EAAAA,MAAKV,KAAA,CAAC,2BAENU,EAAAA,oBAGAA,EAAAA,oBAGAA,EAAAA,0BAGAA,EAAAA,wBAGAA,EAAAA,qBAGAA,EAAAA,yBACAA,EAAAA,0BACAA,EAAAA,6BAGAA,EAAAA,gCAEAA,EAAAA,2BAGAC,EAAAA,UA+DL4B,GA7DI,SAAAA,EAAoBtD,EAAsCmE,GAAtCrE,KAAAE,MAAAA,EAAsCF,KAAAqE,OAAAA,EA3BjDrE,KAAAsE,KAAgB,GAgBhBtE,KAAAiE,UAAY,OACZjE,KAAAkE,WAAa,QAGblE,KAAAuE,cAAgB,WAEhBvE,KAAAwE,kBAAmB,EAGlBxE,KAAA6D,YAAc,IAAIhC,EAAAA,aA4DpB7B,KAAAU,cAAa,aACbV,KAAAe,aAAY,aA1DZf,KAAKqE,SACLrE,KAAK+D,YAAc/D,KAAKqE,OAAOI,IAAIC,EAAAA,cC/C/C,IAAAC,GAsCIA,EAAA7E,UAAAC,SAAA,WACIC,KAAKC,KAAOD,KAAKE,MAAMC,YAG3BwE,EAAA7E,UAAAO,YAAA,SAAYC,OACFsE,EAAQ5E,KAAKO,MAAMsE,UAAS,SAACC,GAC/B,OAAOA,IAAQxE,IAGnB,IAAa,EAATsE,EAEA,OADA5E,KAAKO,MAAMwE,OAAOH,EAAO,GAClB5E,KAAKQ,YAAYC,KAAKT,KAAKO,OAGtCP,KAAKO,MAAMyE,KAAK1E,GAEhBN,KAAKU,cAAcV,KAAKO,MAAM0E,QAC9BjF,KAAKQ,YAAYC,KAAKT,KAAKO,QAE/BoE,EAAA7E,UAAAa,WAAA,SAAWL,GACPN,KAAKO,MAAQD,EACbN,KAAKK,YAAYL,KAAKO,QAG1BoE,EAAA7E,UAAAc,iBAAA,SAAiBC,GACbb,KAAKU,cAAgBG,GAGzB8D,EAAA7E,UAAAgB,kBAAA,SAAkBD,GACdb,KAAKe,aAAeF,uBAhE3BG,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,wBACVC,SAAU,oIAKVC,UAAW,CAAC,CACRC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAU,WAAO,OAAAmD,IAC9BlD,OAAO,iDAXNC,EAAAA,4CAkBJC,EAAAA,oBAIAA,EAAAA,0BAIAA,EAAAA,2BAIAC,EAAAA,UAyCL+C,GAtCI,SAAAA,EAAoBzE,GAAAF,KAAAE,MAAAA,EAdpBF,KAAAO,MAAQ,GAYRP,KAAAQ,YAAc,IAAIqB,EAAAA,aAqCV7B,KAAAU,cAAa,aACbV,KAAAe,aAAY,aCvExB,IAAAmE,GAgBGlD,OAAAC,eAAIiD,EAAApF,UAAA,OAAI,KAAR,WACC,OAAIE,KAAKkC,UAAUlC,KAAKmC,GAAGC,eAClBpC,KAAKmF,SAASlF,KAEhB,oCAIT+B,OAAAC,eACIiD,EAAApF,UAAA,QAAK,KADT,WAAA,IAAAsF,EAAApF,KAEE,OAAIA,KAAKkC,UAAUlC,KAAKmC,GAAGC,eAClBpC,KAAKmF,SAAS5E,MAAM8E,KAAI,SAACP,GAC9B,OAAOA,IAAQM,EAAK5C,QAGjBxC,KAAKsC,aAGd,SAAU/B,GACRP,KAAKsC,QAAU/B,mCAkBjB2E,EAAApF,UAAAC,SAAA,aAIAmF,EAAApF,UAAAyC,mBAAA,WAEE,GAAIvC,KAAKkC,UAAUlC,KAAKmC,GAAGC,eACzB,OAAOpC,KAAKmF,SAAS9E,YAAYL,KAAKwC,OAExCxC,KAAKO,MAAQP,KAAKwC,MAClBxC,KAAKQ,YAAYC,KAAKT,KAAKO,OAC3BP,KAAKU,cAAcV,KAAKwC,QAK1B0C,EAAApF,UAAAoC,UAAA,SAAUO,GACR,OAAOA,EAAQC,cAAcC,UAAUC,SAAS,sBAGlDsC,EAAApF,UAAAa,WAAA,SAAWL,GACTN,KAAKO,MAAQD,GAGf4E,EAAApF,UAAAc,iBAAA,SAAiBC,GACfb,KAAKU,cAAgBG,GAGvBqE,EAAApF,UAAAgB,kBAAA,SAAkBD,GAChBb,KAAKe,aAAeF,uBA/EvBG,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,kBACVC,SAAA,0UACAC,UAAW,CAAC,CACVC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAU,WAAO,OAAA0D,IAC9BzD,OAAO,YAEA,yEAVFkD,SAD0B3B,EAAAA,6CAwBhCrB,EAAAA,qBAeAA,EAAAA,wBAIAA,EAAAA,2BAGAC,EAAAA,UAyCHsD,GAtCE,SAAAA,EACUC,EACAhD,GADAnC,KAAAmF,SAAAA,EACAnF,KAAAmC,GAAAA,EAJVnC,KAAAQ,YAAc,IAAIqB,EAAAA,aAqCV7B,KAAAU,cAAa,aACbV,KAAAe,aAAY,aCrFtB,IAAAuE,GAyEIA,EAAAxF,UAAAC,SAAA,WAAA,IAAAqF,EAAApF,KAEIA,KAAKC,KAAOD,KAAKE,MAAMC,WAAWC,QAAQ,KAAM,KAEhDJ,KAAKuF,gBAAgB9E,KAAKT,MAEtBA,KAAKwF,WACLxF,KAAKyF,qBAAuBzF,KAAKwF,WAAWE,UAAS,SAACC,GAAO,OAAAP,EAAKd,KAAOqB,EAAIrB,SAIrFgB,EAAAxF,UAAA8F,YAAA,SAAYC,KAGZP,EAAAxF,UAAAgG,YAAA,WACQ9F,KAAKyF,sBACLzF,KAAKyF,qBAAqBM,eAIlCT,EAAAxF,UAAAgE,SAAA,SAASJ,GACL,OAAIA,EACI1D,KAAK+D,aAAe/D,KAAK+D,YAAYC,SAC9BhE,KAAK+D,YAAYC,SAAShE,KAAKiE,UAAWP,GAE1CA,EAAK1D,KAAKiE,WAGd,IAIfqB,EAAAxF,UAAA8D,UAAA,SAAUF,GACN,OAAIA,EACI1D,KAAK+D,aAAe/D,KAAK+D,YAAYC,SAC9BhE,KAAK+D,YAAYC,SAAShE,KAAKkE,WAAYR,GAE3CA,EAAK1D,KAAKkE,YAGd,IAKfoB,EAAAxF,UAAA2D,aAAA,SAAaC,EAAWkB,OAChBoB,EAAWhG,KAAKiG,eAAejG,KAAKM,QAAU,GAE5CqD,EAAMuC,OAAOlG,KAAK4D,UAAUF,IAC7BsC,GAAaA,EAASG,QAGnBH,EAASI,KAAI,SAAC1C,GAAQ,OAAAA,GAAQC,IAC9BqC,EAAWA,EAASK,OAAM,SAACC,GAAK,OAAAA,IAAM3C,IAH1CqC,EAAShB,KAAKrB,GAUlB3D,KAAKM,MAAQN,KAAKuG,eAAeP,GAGjChG,KAAKU,cAAcV,KAAKM,OACxBN,KAAKe,aAAaf,KAAKM,OACvBN,KAAK6D,YAAYpD,KAAKT,KAAKM,QAI/BgF,EAAAxF,UAAA0G,QAAA,SAAQ9C,OACEC,EAAMuC,OAAOlG,KAAK4D,UAAUF,IAGlC,OAFqB1D,KAAKiG,eAAejG,KAAKM,OAE1B8F,KAAI,SAAC1C,GAAQ,OAAAA,GAAQC,KAI7C2B,EAAAxF,UAAAmG,eAAA,SAAe3F,GACX,OAAKA,EAGAN,KAAKyG,cAIHnG,EAAMoG,MAAM1G,KAAK2G,WAHbrG,EAHA,IAUfgF,EAAAxF,UAAAyG,eAAA,SAAejG,GAAf,IAAA8E,EAAApF,KAEU4G,EAAU5G,KAAKsE,KAAKuC,IAAG,SAACP,GAAK,OAAAlB,EAAKxB,UAAU0C,KAC5CQ,EAAI,GAOV,OANAF,EAAQG,QAAO,SAACT,GACRhG,EAAM8F,KAAI,SAAC1C,GAAQ,OAAAA,GAAQ4C,KAC3BQ,EAAE9B,KAAKsB,KAIVtG,KAAKyG,cAGHK,EAAE7B,KAAKjF,KAAK2G,WAFRG,GAMfxB,EAAAxF,UAAAa,WAAA,SAAWL,GACPN,KAAKM,MAAQA,GAIjBgF,EAAAxF,UAAAc,iBAAA,SAAiBC,GACbb,KAAKU,cAAgBG,GAIzByE,EAAAxF,UAAAgB,kBAAA,SAAkBD,GACdb,KAAKe,aAAeF,uBA/K3BG,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,uBACVC,SAAA,mnBACAC,UAAW,CAAC,CACRC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAU,WAAO,OAAA8D,IAC9B7D,OAAO,IAEX0C,SAAU,4EAZLzC,EAAAA,iBAX+C0C,EAAAA,SAAQvB,WAAA,CAAA,CAAAC,KAmErBC,EAAAA,gDAxCtCpB,EAAAA,MAAKV,KAAA,CAAC,2BAGNU,EAAAA,oBAGAA,EAAAA,oBAGAA,EAAAA,0BAGAA,EAAAA,yBAGAA,EAAAA,uBAGAA,EAAAA,qBAGAA,EAAAA,6BAGAA,EAAAA,yBAEAA,EAAAA,0BACAA,EAAAA,wBAGAA,EAAAA,2BAGAC,EAAAA,gCAGAA,EAAAA,UAqIL0D,GAjII,SAAAA,EAAoBpF,EAAsCmE,GAAtCrE,KAAAE,MAAAA,EAAsCF,KAAAqE,OAAAA,EAxCtCrE,KAAAgH,SAAW,EAGtBhH,KAAAsE,KAAc,GAYdtE,KAAA2G,UAAY,IASZ3G,KAAAyG,eAAgB,EAEhBzG,KAAAiE,UAAY,OACZjE,KAAAkE,WAAa,QAMZlE,KAAA6D,YAAc,IAAIhC,EAAAA,aAGlB7B,KAAAuF,gBAAkB,IAAI1D,EAAAA,aAkIxB7B,KAAAU,cAAa,aACbV,KAAAe,aAAY,aA9HZf,KAAKqE,SACLrE,KAAK+D,YAAc/D,KAAKqE,OAAOI,IAAIC,EAAAA,cCrE/C,IAAAuC,GAsBIA,EAAAnH,UAAAC,SAAA,WACIC,KAAKkH,QAGTD,EAAAnH,UAAA8F,YAAA,SAAYC,GACJA,EAAQsB,SAAWtB,EAAQsB,OAAOC,iBAClCpH,KAAKqH,aAIbJ,EAAAnH,UAAAwH,gBAAA,WACStH,KAAKmH,SAINnH,KAAKuH,YACLvH,KAAKwH,SAASC,MAAMF,UAAevH,KAAKuH,UAAS,MAGrDvH,KAAK0H,UAAY1H,KAAKwH,SAASG,wBAAwBC,OACnD5H,KAAK0H,YACL1H,KAAKwH,SAASC,MAAMC,UAAe1H,KAAK0H,UAAS,QAIjDT,EAAAnH,UAAAoH,KAAR,WAAA,IAAA9B,EAAApF,KACQA,KAAKmH,SACLnH,KAAK6H,SAAW7H,KAAKwH,SAASM,cAC9B9H,KAAK+H,gBAAkB/H,KAAK6H,SAASE,gBACjC/H,KAAKwH,UACDxH,KAAKwH,SAASlH,OACdN,KAAKqH,YAITrH,KAAKgI,WACLhI,KAAKgI,UAAUC,aAAavC,UAAS,SAACwC,GAC9BA,IAAM9C,EAAK+C,eACX/C,EAAKiC,gBAQzBJ,EAAAnH,UAAAsI,QADA,WAEIpI,KAAKqH,aAITJ,EAAAnH,UAAAuI,cADA,WAEIrI,KAAKqH,aAIDJ,EAAAnH,UAAAwI,eAAR,WAII,QAHIC,EAAY,EACZpG,EAAKnC,KAAKwH,SAEPrF,IAAO0F,SAASW,MAAe,OAAPrG,GAC3BoG,GAAapG,EAAGoG,WAAa,EAC7BpG,EAAKA,EAAGsG,iBAGNC,EAAMH,EAAYV,SAASc,YAAYC,YAE7C,MAAO,CAAEF,IAAGA,EAAEG,OADC7I,KAAK+H,gBAAgBe,cAAgBJ,EAAM1I,KAAKwH,SAASuB,gBAIpE9B,EAAAnH,UAAAuH,UAAR,WACI,GAAKrH,KAAKmH,OAAV,KAIMK,EAAWxH,KAAKwH,SAEtB,KAAIxH,KAAKgJ,eACLhJ,KAAKwH,SAASlH,QAAUN,KAAKmI,eAC7BnI,KAAKwH,SAASyB,aAAe,GAAKjJ,KAAKwH,SAASuB,cAAgB,GAApE,KAOMG,EAAgBC,iBAAiB3B,GAEjC4B,EAAiBC,OAAOH,EAAcI,eAAelJ,QAAQ,KAAM,KACnEmJ,EAAoBF,OAAOH,EAAcM,kBAAkBpJ,QAAQ,KAAM,KAGzEqJ,EAD0C,eAA5BP,EAAcQ,UACAN,EAAiBG,EAAoB,EAOjEI,EAAYnC,EAAS9E,cAC3B,GAAIiH,aAAqBC,YAAa,KAC5BC,EAAkBF,EAAUlC,MAAMG,OACxC+B,EAAUlC,MAAMG,OAASuB,iBAAiBQ,GAAW/B,OACrDJ,EAASC,MAAMG,OAAS,WAEpBkC,EAAItC,EAASuC,aAAeN,EAC5BzJ,KAAK0H,UAAYoC,IACjBA,EAAI9J,KAAK0H,WAEbF,EAASC,MAAMG,OAAYkC,EAAC,KAC5BH,EAAUlC,MAAMG,OAASiC,EAG7B7J,KAAKmI,cAAgBX,EAASlH,6BApIrC0J,EAAAA,UAAS/I,KAAA,CAAC,CACPC,SAAU,2DAJ+B8B,EAAAA,kBACpCiH,EAAAA,iBADkB7F,EAAAA,4CAOtBzC,EAAAA,MAAKV,KAAA,CAAC,gCACNU,EAAAA,uBA2DAuI,EAAAA,aAAYjJ,KAAA,CAAC,gCAKbiJ,EAAAA,aAAYjJ,KAAA,CAAC,aAiElBgG,GAvHI,SAAAA,EAAoB9E,EAAwB6F,EAA8BmC,GAAtDnK,KAAAmC,GAAAA,EAAwBnC,KAAAgI,UAAAA,EAA8BhI,KAAAmK,SAAAA,EAXtDnK,KAAAmH,QAAS,EAGrBnH,KAAAmI,cAAgB,KAChBnI,KAAAgJ,eAAgB,EAQpBhJ,KAAKwH,SAAWxH,KAAKmC,GAAGC,cCnBhC,IAAAgI,GAkCIA,EAAAtK,UAAAC,SAAA,WACIC,KAAKgI,UAAYhI,KAAKmK,SAAS1F,IAAIwF,EAAAA,UAAW,OAGlDG,EAAAtK,UAAAwH,gBAAA,WAAA,IAAAlC,EAAApF,KACIA,KAAKqK,gBACDrK,KAAKgI,WAAahI,KAAKsK,cACvBtK,KAAKgI,UAAUuC,QAAQtC,aAAavC,UAAS,SAAE8E,GAC3CpF,EAAKqF,sBAKjBL,EAAAtK,UAAA8F,YAAA,SAAYC,GAEJA,EAAQyE,eAAiBzE,EAAQyE,aAAalD,kBAC1CpH,KAAKsK,aACLtK,KAAKqK,gBAELrK,KAAK0K,YAKjBN,EAAAtK,UAAAgG,YAAA,WACI9F,KAAK0K,UAEF1K,KAAK2K,KACJ3K,KAAK2K,GAAGC,aACR5K,KAAK2K,GAAGE,UAAU7K,KAAKmC,GAAGC,cAAcM,iBAKxC0H,EAAAtK,UAAA4K,QAAR,WACQ1K,KAAKoI,SACLpI,KAAKoI,UAGLpI,KAAK8K,kBACL9K,KAAK8K,iBAAiBC,UAI9BX,EAAAtK,UAAAuK,cAAA,WACQrK,KAAKsK,eAAiBtK,KAAKgL,kBAC3BhL,KAAKiL,0BAILb,EAAAtK,UAAAoL,kBAAR,eACUC,EAAUnL,KAAKmC,GAAGC,cAAc+I,QACtC,OAAInL,KAAKgI,UAEKmD,EAAO,cADAnL,KAAKgI,UAAU/H,KAG5BD,KAAKmC,GAAGC,cAAcgJ,GACZD,EAAO,cAAcnL,KAAKmC,GAAGC,cAAcgJ,GAGtD,IAGHhB,EAAAtK,UAAAmL,uBAAR,WAAA,IAAA7F,EAAApF,KACUqL,EAAMrL,KAAKmC,GAAGC,cAAckJ,UAClC,GAAKD,KAAOA,EAAM,GAAlB,KAKME,EAAgBvL,KAAKwL,OAAOC,cAAc,QAChDF,EAAcG,UAAY,yBAEpBN,EAAKpL,KAAKkL,oBACZE,IACAG,EAAcH,GAAKA,GAGvBpL,KAAKwL,OAAOG,SAASJ,EAAe,WAAY,YAChDvL,KAAKwL,OAAOG,SAASJ,EAAe,SAAU,OAExC,IAAAK,EAAA5L,KAAAmC,GAAAC,cAAAuF,wBAAEkE,EAAAD,EAAAC,MACAC,GADOF,EAAAG,MACP/L,KAAAmC,GAAAC,cAAAM,cAAAiF,wBAAAkE,OACJC,IAAgBD,GAChB7L,KAAKwL,OAAOG,SAASJ,EAAe,QAAYO,EAAcD,EAAQ,GAAE,MAExE7L,KAAK2K,GAAK,IAAIqB,EAAc,SAAEC,EAASC,GACnC,GAAID,GAAWA,EAAQ,GAAI,KACjBE,EAAMF,EAAQ,GAAGG,YAAYP,MAEnCzG,EAAKoG,OAAOG,SAASJ,EAAe,QAAYY,EAAMN,EAAQ,GAAE,SAGxE7L,KAAK2K,GAAG0B,QAAQrM,KAAKmC,GAAGC,cAAcM,gBAGtC1C,KAAKwL,OAAOG,SAASJ,EAAe,QAAS,QAEjDvL,KAAKwL,OAAOG,SAASJ,EAAe,SAAU,WAE9CvL,KAAKmC,GAAGC,cAAckK,MAAMf,GAC5BvL,KAAK8K,iBAAmBS,MAElBgB,EAAoBvM,KAAKwL,OAAOC,cAAc,QACpDF,EAAciB,YAAYD,IAC1BvM,KAAKyM,qBAAuBF,GACVD,MAAO,MAAMjB,GAE/BrL,KAAKyK,mBACLzK,KAAKoI,QAAUpI,KAAKwL,OAAOkB,OAAO1M,KAAKmC,GAAGC,cAAe,QAAO,WAE5DgD,EAAKqF,uBAIbL,EAAAtK,UAAA2K,iBAAA,WACI,GAAKzK,KAAKsK,cAAiBtK,KAAKyM,qBAAhC,KAGMpB,EAAMrL,KAAKmC,GAAGC,cAAckJ,UAC5B3H,EAAyB,YAAnB3D,KAAK2M,UAA0BtB,EAAMrL,KAAKmC,GAAGC,cAAc9B,MAAM6F,OAASnG,KAAKmC,GAAGC,cAAc9B,MAAM6F,OAC5GyG,EAAM,wBAA0B5M,KAAK2M,UAE3C3M,KAAKyM,qBAAqBI,UAAYlJ,EACtC3D,KAAK8K,iBAAiBgC,MAAQ9M,KAAK+M,UAAU/I,SAAS4I,GAAKxM,QAAQ,MAAOuD,yBAxJjFqG,EAAAA,UAAS/I,KAAA,CAAC,CACPC,SAAU,eACViD,SAAU,4DARMnB,EAAAA,kBAA6BgK,EAAAA,iBAAjB5I,EAAAA,kDAW3BzC,EAAAA,MAAKV,KAAA,CAAC,iCAMNU,EAAAA,gCAEAA,EAAAA,SA6ILyI,GAnII,SAAAA,EAAoBjI,EAAwBqJ,EAA2BrB,GAAnDnK,KAAAmC,GAAAA,EAAwBnC,KAAAwL,OAAAA,EAA2BxL,KAAAmK,SAAAA,EAlBlDnK,KAAAsK,cAAe,EAM3BtK,KAAA2M,UAAkC,UAElC3M,KAAAgL,kBAAmB,EAE5BhL,KAAA8K,iBAAmB,KAEX9K,KAAAyM,qBAAuB,KAGvBzM,KAAAoI,QAAU,KAEVpI,KAAA2K,GAAqB,KAEzB3K,KAAKiN,aAAejN,KAAKmK,SAAS1F,IAAIyI,EAAAA,cACtClN,KAAK+M,UAAY/M,KAAKmK,SAAS1F,IAAI0I,EAAAA,eC/B3C,IAAAC,GAmCIA,EAAAtN,UAAAC,SAAA,WACIC,KAAKgI,UAAYhI,KAAKmK,SAAS1F,IAAIwF,EAAAA,UAAW,OAGlDmD,EAAAtN,UAAA8F,YAAA,SAAYC,GACJA,EAAQwH,UAAYxH,EAAQwH,QAAQjG,kBAChCpH,KAAKqN,QACLrN,KAAKsN,mBAELtN,KAAK0K,YAKjB0C,EAAAtN,UAAAwH,gBAAA,WACQtH,KAAKqN,SACLrN,KAAKsN,oBAIbF,EAAAtN,UAAAgG,YAAA,WACI9F,KAAK0K,WAGD0C,EAAAtN,UAAA4K,QAAR,WACQ1K,KAAKuN,cACLvN,KAAKuN,eAELvN,KAAKwN,cACLxN,KAAKwN,eAGLxN,KAAKyN,SACLzN,KAAKyN,UAELzN,KAAK0N,iBACL1N,KAAK0N,kBAGL1N,KAAK2N,mBACL3N,KAAK2N,kBAAkB5C,UAIvBqC,EAAAtN,UAAA8N,iBAAR,WACI5N,KAAK0N,gBAAkB1N,KAAKiN,aAAaY,iBAAiB7N,KAAKmC,GAAGC,cAAe,oBAAmB,SACnG0L,OACSC,EAAUD,EAAY,OACtBnK,EAAMoK,EAAOzN,MAAQ,KAI3B,OAHAyN,EAAOzN,MAAQqD,EACfmK,EAAME,iBACNF,EAAMG,mBACC,KAIPb,EAAAtN,UAAAoO,gBAAR,eACU/C,EAAUnL,KAAKmC,GAAGC,cAAc+I,QACtC,OAAInL,KAAKgI,UAEKmD,EAAO,YADAnL,KAAKgI,UAAU/H,KAG5BD,KAAKmC,GAAGC,cAAcgJ,GACZD,EAAO,YAAYnL,KAAKmC,GAAGC,cAAcgJ,GAGpD,IAGHgC,EAAAtN,UAAAwN,iBAAR,WAAA,IAAAlI,EAAApF,KACUmO,EAAWnO,KAAKwL,OAAOC,cAAc,QAC3C0C,EAASzC,UAAY,sCACrByC,EAASrB,MAAS9M,KAAK+M,UAAU/I,SAAS,cAAgB,gBAIpDoH,EAAKpL,KAAKkO,kBACZ9C,IACA+C,EAAS/C,GAAKA,GAGlBpL,KAAKwL,OAAOG,SAASwC,EAAU,WAAY,YAC3CnO,KAAKwL,OAAOG,SAASwC,EAAU,MAAO,OAE9B,IAAAtC,EAAA7L,KAAAmC,GAAAC,cAAAuF,wBAAAkE,MACA7L,KAAAmC,GAAAC,cAAAM,cAAAiF,wBAAAkE,QACYA,EAChB7L,KAAKwL,OAAOG,SAASwC,EAAU,OAAWtC,EAAQ,GAAE,MAEpD7L,KAAKwL,OAAOG,SAASwC,EAAU,QAAS,OAE5CnO,KAAKwL,OAAOG,SAASwC,EAAU,SAAU,WAEzCnO,KAAKmC,GAAGC,cAAckK,MAAM6B,GAE5BnO,KAAK2N,kBAAoBQ,EAEzBnO,KAAKuN,aAAevN,KAAKwL,OAAOkB,OAAOyB,EAAU,aAAY,WACzD/I,EAAKoG,OAAOG,SAASwC,EAAU,WAAY,UAE/CnO,KAAKwN,aAAexN,KAAKwL,OAAOkB,OAAOyB,EAAU,aAAY,WACzD/I,EAAKoG,OAAOG,SAASwC,EAAU,WAAY,UAG/CnO,KAAKyN,QAAUzN,KAAKwL,OAAOkB,OAAOyB,EAAU,QAAO,WAC/C/I,EAAKgJ,kBAILhB,EAAAtN,UAAAsO,aAAR,WAAA,IAAAhJ,EAAApF,KACUqO,EAAY,CACdxC,MAAO7L,KAAKsO,aAAe,IAC3B1G,OAAQ5H,KAAKuO,cAAgB,IAC7BC,cAAc,EACdC,UAAW,WACXC,UAAU,GAGd,GAAIC,OAAOC,aAAc,KACfC,EAAM7O,KAAK8O,gBAAgBC,eAC3BpL,EAAMiL,aAAaI,QAAQH,GACjC,GAAIlL,EAAK,KACCsL,EAAcC,KAAKC,MAAMxL,GAC/B0K,EAAKe,SAAWH,EAAYG,UAAY,GACxCf,EAAKxC,MAAQoD,EAAYpD,OAASwC,EAAKxC,MACvCwC,EAAKzG,OAASqH,EAAYrH,QAAUyG,EAAKzG,YAI3CuD,EAAUnL,KAAKmC,GAAGC,cAAc+I,QAClCkE,EAAWrP,KAAKmC,GAAGC,cAAc9B,MAEjC+O,EADArP,KAAKgI,UACMhI,KAAKgI,UAAU1H,MAEfN,KAAKmC,GAAGC,cAAc9B,MAGrC+O,EAAWrP,KAAKM,OAAS+O,EAGT,gBAAZlE,GAA6BnL,KAAKmC,GAAGC,cAAckN,UAAYtP,KAAKmC,GAAGC,cAAcmN,UACrFlB,EAAKmB,UAAW,EAChBnB,EAAKoB,cAAe,EACpBzP,KAAK8O,gBAAgBY,QAAQ1P,KAAK8M,MAAOuC,EAAUhB,GAAM3I,cAEzD2I,EAAK/C,UAAYtL,KAAKmC,GAAGC,cAAckJ,UACvC+C,EAAKsB,kBAAkB3P,KAAK4P,cAAe5P,KAAK4P,aAAatF,aAC7D+D,EAAK1B,UAAY3M,KAAK4P,aAAe5P,KAAK4P,aAAajD,UAAY,SACnE3M,KAAK8O,gBAAgBY,QAAQ1P,KAAK8M,MAAOuC,EAAUhB,GAAM3I,UAAS,SAACwC,GAC9C,kBAANA,IAAoBA,IAG3B9C,EAAK4C,UAAUuC,QAAQsF,SAAS3H,GAC5B9C,EAAKwK,cACLxK,EAAKwK,aAAanF,4CAtLzCT,EAAAA,UAAS/I,KAAA,CAAC,CACPC,SAAU,+DANM8B,EAAAA,kBAAYgK,EAAAA,iBAAW5I,EAAAA,gBAFlCgG,EAA0BvH,WAAA,CAAA,CAAAC,KA6BlBC,EAAAA,+CAlBZpB,EAAAA,MAAKV,KAAA,CAAC,sCACNU,EAAAA,4BACAA,EAAAA,0BACAA,EAAAA,qBACAA,EAAAA,qBACAA,EAAAA,SAoLLyL,GAxKI,SAAAA,EAAoBjL,EAAwBqJ,EAA2BrB,EACvCyF,GADZ5P,KAAAmC,GAAAA,EAAwBnC,KAAAwL,OAAAA,EAA2BxL,KAAAmK,SAAAA,EACvCnK,KAAA4P,aAAAA,EAlBR5P,KAAAqN,SAAU,EACzBrN,KAAAsO,YAAc,IACdtO,KAAAuO,aAAe,IACfvO,KAAA8P,YAAa,EACb9P,KAAA8M,MAAQ,GACR9M,KAAAM,MAAQ,GAEjBN,KAAAuN,aAAe,KACfvN,KAAAwN,aAAe,KACfxN,KAAAyN,QAAU,KACVzN,KAAA0N,gBAAkB,KAElB1N,KAAA2N,kBAAoB,KAOhB3N,KAAK8O,gBAAkB9O,KAAKmK,SAAS1F,IAAIsL,EAAAA,iBACzC/P,KAAKiN,aAAejN,KAAKmK,SAAS1F,IAAIyI,EAAAA,cACtClN,KAAK+M,UAAY/M,KAAKmK,SAAS1F,IAAI0I,EAAAA,cAAe,MChC1D,IAAA6C,GAaIhO,OAAAC,eACI+N,EAAAlQ,UAAA,eAAY,KAchB,WACI,OAAOE,KAAKiQ,mBAhBhB,SACiB3P,GACC,KAAVA,GAAgBA,GAChBN,KAAKiQ,eAAgB,EAEhBjQ,KAAKkQ,mBACNlQ,KAAKmQ,iBAGTnQ,KAAKiQ,eAAgB,EACjBjQ,KAAKkQ,mBACLlQ,KAAKoQ,gDAUjBpO,OAAAC,eACI+N,EAAAlQ,UAAA,mBAAgB,KAoBpB,WACI,OAAOE,KAAKqQ,kBAtBhB,SACqB1M,GAGjB,IADAA,EAAS,QAALA,EAAY,OAAO,UACf3D,KAAKqQ,aAAa,CACtB,OAAQrQ,KAAKsQ,wBACT,IAAK,aACDtQ,KAAKwL,OAAO+E,YAAYvQ,KAAKmC,GAAGC,cAAe,sBAAsBpC,KAAKqQ,aAAaG,eACvFxQ,KAAKwL,OAAOiF,SAASzQ,KAAKmC,GAAGC,cAAe,sBAAsBuB,EAAI6M,eACtE,MACJ,IAAK,UACL,IAAK,eACGxQ,KAAK0Q,gBACL1Q,KAAK0Q,cAAchF,UAAW1L,KAAK0Q,cAAchF,UAAUtL,QAAQ,sBAAsBJ,KAAKqQ,aAAaG,cAAc,sBAAsB7M,EAAI6M,gBAI/JxQ,KAAKqQ,aAAa1M,EAClB3D,KAAK2Q,uDAWb3O,OAAAC,eACI+N,EAAAlQ,UAAA,kBAAe,KA6BnB,WACI,OAAOE,KAAK4Q,iBA/BhB,SACoBtQ,GADpB,IAAA8E,EAAApF,KAEQM,IACI,CAAC,SAAU,QAAQuE,UAAS,SAACnB,GAAQ,OAAAA,GAAQpD,IAAS,IAEtDA,EAAQ,UAERA,GAASN,KAAK4Q,cACV5Q,KAAKkQ,oBAELlQ,KAAKwL,OAAO+E,YAAYvQ,KAAKkQ,kBAAmB,gBAAkBlQ,KAAK4Q,aACvE5Q,KAAKwL,OAAOiF,SAASzQ,KAAKkQ,kBAAmB,gBAAkB5P,GACvC,UAApBN,KAAK4Q,YAED5Q,KAAKyD,eACLzD,KAAKyD,eACLzD,KAAKyD,aAAe,MAGxBzD,KAAKyD,aAAezD,KAAKwL,OAAOkB,OAAO1M,KAAKkQ,kBAAmB,QAAO,SAAGW,GACrEzL,EAAK0L,sBAAsBrQ,KAAKoQ,MAI5C7Q,KAAK4Q,YAActQ,EACnBN,KAAK2Q,wDAUjB3O,OAAAC,eACI+N,EAAAlQ,UAAA,kBAAe,KAanB,WACI,OAAOE,KAAK+Q,sBAfhB,SACoBzQ,GACZA,GAASN,KAAK+Q,mBACd/Q,KAAK+Q,iBAAmBzQ,EACpBN,KAAKkQ,mBAAqBlQ,KAAKiQ,eAC/BjQ,KAAKwL,OAAOwF,YAAYhR,KAAKkQ,kBAAmBlQ,KAAKiR,mBACrDjR,KAAKiR,kBAAkBC,UAAY5Q,EACnCN,KAAKwL,OAAOgB,YAAYxM,KAAKkQ,kBAAmBlQ,KAAKiR,mBACrDjR,KAAK2Q,sBAEL3Q,KAAKmQ,iDAUjBnO,OAAAC,eACI+N,EAAAlQ,UAAA,sBAAmB,KAUvB,WACI,OAAOE,KAAKmR,eAZhB,SACwB7Q,GAChBA,GAASN,KAAKmR,YACdnR,KAAKmR,UAAY7Q,EACbN,KAAKkQ,oBACL5P,GAASN,KAAKwL,OAAOiF,SAASzQ,KAAKkQ,kBAAmBlQ,KAAKoR,aAC1D9Q,GAASN,KAAKwL,OAAO+E,YAAYvQ,KAAKkQ,kBAAmBlQ,KAAKoR,cAEnEpR,KAAK2Q,uDAQb3O,OAAAC,eACI+N,EAAAlQ,UAAA,iBAAc,KASlB,WACI,OAAOE,KAAKqR,gBAXhB,SACmB1N,GACZA,GAAK3D,KAAKqR,aACT1N,EAAIA,GAAQ,mBACT3D,KAAKiR,oBACJjR,KAAKiR,kBAAkBvF,UAAU/H,GAErC3D,KAAKqR,WAAW1N,oCAwBxBqM,EAAAlQ,UAAAC,SAAA,aAKAiQ,EAAAlQ,UAAAwH,gBAAA,WACItH,KAAKmQ,gBAGTH,EAAAlQ,UAAAgG,YAAA,WAEQ9F,KAAKyD,eACLzD,KAAKyD,eACLzD,KAAKyD,aAAe,MAEpBzD,KAAKkQ,oBACLlQ,KAAKkQ,kBAAkBnF,SACvB/K,KAAKkQ,kBAAoB,MAEzBlQ,KAAK0Q,gBACL1Q,KAAK0Q,cAAc3F,SACnB/K,KAAK0Q,cAAgB,OAMrBV,EAAAlQ,UAAAsQ,YAAR,WAMI,OALIpQ,KAAKyD,eACLzD,KAAKyD,eACLzD,KAAKyD,aAAe,MAGhBzD,KAAKsQ,wBACT,IAAK,aACDtQ,KAAKwL,OAAO+E,YAAYvQ,KAAKmC,GAAGC,cAAe,kCAC/CpC,KAAKwL,OAAO+E,YAAYvQ,KAAKmC,GAAGC,cAAe,sBAAsBpC,KAAKsR,iBAAiBd,eAC3F,MACJ,IAAK,UACL,IAAK,eACD,GAAIxQ,KAAK0Q,cAAe,KAChBa,EAAavR,KAAKwL,OAAOgG,WAAWxR,KAAK0Q,eAC7C1Q,KAAKwL,OAAOgB,YAAY+E,EAAYvR,KAAKmC,GAAGC,eAC5CpC,KAAK0Q,cAAc3F,SACnB/K,KAAK0Q,cAAgB,MAI7B1Q,KAAKkQ,oBACLlQ,KAAKkQ,kBAAkBnF,SACvB/K,KAAKkQ,kBAAoB,MAE7BlQ,KAAK2Q,sBAKDX,EAAAlQ,UAAAqQ,aAAR,WAAA,IAAA/K,EAAApF,KACI,GAAKA,KAAKyR,iBAAoBzR,KAAK0R,eAAgB1R,KAAKkQ,kBAAxD,KAGMyB,EAAa3R,KAAKwL,OAAOC,cAAc,OAC7CkG,EAAWjG,UAAY,0CACvBiG,EAAWjG,WAAa,iBAAmB1L,KAAK4R,gBAC5C5R,KAAKmR,YACLQ,EAAWjG,WAAa,IAAM1L,KAAKoR,iBAEjCS,EAAiB7R,KAAKwL,OAAOC,cAAc,OAMjD,OALAoG,EAAenG,UAAY1L,KAAK8R,eAChCD,EAAeX,UAAYlR,KAAKyR,gBAChCzR,KAAKiR,kBAAoBY,EACzB7R,KAAKkQ,kBAAoByB,EACzB3R,KAAKwL,OAAOgB,YAAYmF,EAAYE,GAC5B7R,KAAKsQ,wBACT,IAAK,cAGY,qDAAyDtQ,KAAKsR,iBAAiBd,eAAkBxQ,KAAKmR,UAAY,IAAMnR,KAAKoR,YAAc,KAC/I1K,MAAM,KAAKG,IAAG,SAAEkL,GACrB3M,EAAKoG,OAAOiF,SAASrL,EAAKjD,GAAGC,cAAc2P,KAE/C/R,KAAKwL,OAAOgB,YAAYxM,KAAKmC,GAAGC,cAAeuP,GAC/C,MACJ,IAAK,UACL,IAAK,mBACGK,EAAahS,KAAKwL,OAAOgG,WAAWxR,KAAKmC,GAAGC,eAC1C6P,EAAYjS,KAAKwL,OAAOC,cAAc,OAC5CwG,EAAUvG,UAAY,8CAA8C1L,KAAKsR,iBAAiBd,eAAiBxQ,KAAKmR,UAAY,IAAMnR,KAAKoR,YAAc,KAC1F,EAAvDpR,KAAKmC,GAAGC,cAAc8P,UAAUC,QAAQ,cACxCF,EAAUvG,UAAY,kDAAkD1L,KAAKsR,iBAAiBd,eAAiBxQ,KAAKmR,UAAY,IAAMnR,KAAKoR,YAAc,KAE7JpR,KAAK0Q,cAAgBuB,EACrBjS,KAAKwL,OAAOgB,YAAYyF,EAAWjS,KAAKmC,GAAGC,eAC3CpC,KAAKwL,OAAOgB,YAAYyF,EAAWN,GACnC3R,KAAKwL,OAAOgB,YAAYwF,EAAYC,GACpC,MACJ,YAEQG,EAAepS,KAAKmC,GAAGC,cAAciQ,cAAc,gBACnDD,EACApS,KAAKwL,OAAOgB,YAAY4F,EAAcT,GAElC3R,KAAKsS,QACLtS,KAAKsS,OAAOC,kBAAiB,WACzBC,WAAU,eACFC,EAAgBrN,EAAKjD,GAAGC,cAAciQ,cAAc,gBACxDjN,EAAKoG,OAAOgB,YAAYiG,EAAed,OAQnC,UAAxB3R,KAAK4R,kBACL5R,KAAKyD,aAAezD,KAAKwL,OAAOkB,OAAO1M,KAAKkQ,kBAAmB,QAAO,SAAGW,GACjEzL,EAAKsN,qBACLtN,EAAK0L,sBAAsBrQ,KAAKoQ,MAI5C7Q,KAAK2Q,uBAMDX,EAAAlQ,UAAA6Q,mBAAR,WAAA,IAAAvL,EAAApF,KACQ2S,EAAS,CAAC,aAAa,UAAU,gBAAgBtN,KAAI,SAACuN,GAAU,OAAAA,GAAUxN,EAAKkL,yBACnF,GAA0B,QAAvBtQ,KAAKsR,kBAA0BqB,EAAS,KACnCE,EAAmB,cAAVF,EAAuB3S,KAAKmC,GAAGC,cAAciQ,cAAc,QAAQrS,KAAKmC,GAAGC,cACxF,GAAGpC,KAAK0R,eAAe1R,KAAKmR,WAAWnR,KAAKkQ,kBAAkB,KAEpD4C,EAAS9S,KAAKkQ,kBAAkBvI,wBACtC3H,KAAKwL,OAAOG,SAASkH,EAAU,eAAeC,EAASjH,MAAM,WAE7D7L,KAAKwL,OAAOuH,YAAYF,EAAU,sCAtSjD7I,EAAAA,UAAS/I,KAAA,CAAC,CACPC,SAAU,8DANkD8R,EAAAA,wBADjDhQ,EAAAA,kBAAYgK,EAAAA,iBAAW5I,EAAAA,kDAYjCzC,EAAAA,MAAKV,KAAA,CAAC,0CAqBNU,EAAAA,sCAyBAA,EAAAA,+BAIAA,EAAAA,+BAmCAA,EAAAA,mCAoBAA,EAAAA,8BAgBAA,EAAAA,qCAgBAC,EAAAA,UA4JLoO,GAjJI,SAAAA,EAAoBiD,EAAmC9Q,EAAwBqJ,EAA2BrB,GAAtFnK,KAAAiT,QAAAA,EAAmCjT,KAAAmC,GAAAA,EAAwBnC,KAAAwL,OAAAA,EAA2BxL,KAAAmK,SAAAA,EAtJlGnK,KAAAiQ,eAAgB,EAsBhBjQ,KAAAqQ,aAAa,QA0BZrQ,KAAAsQ,uBAAyB,aAG1BtQ,KAAA4Q,YAAc,SAmCd5Q,KAAA+Q,iBAAmB,GAoBnB/Q,KAAAmR,WAAY,EAgBZnR,KAAAqR,WAAW,mBAiBTrR,KAAA8Q,sBAAwB,IAAIjP,EAAAA,aAE9B7B,KAAA0Q,cAAgB,KAEhB1Q,KAAAkQ,kBAAoB,KAEpBlQ,KAAAiR,kBAAoB,KACpBjR,KAAAyD,aAAe,KACfzD,KAAAoR,YAAc,mBACdpR,KAAAsS,OAAiB,KAGrBtS,KAAKsS,OAAStS,KAAKmK,SAAS1F,IAAIyO,EAAAA,QClKxC,IAAAC,GAUIA,EAAArT,UAAAC,SAAA,aAGAoT,EAAArT,UAAAwH,gBAAA,WAAA,IAAAlC,EAAApF,KACIA,KAAKiN,aAAaY,iBAAiB7N,KAAKmC,GAAGC,cAAe,UAAS,SAAIoI,GACnEA,EAAEyD,kBACY,QAAVzD,EAAEqE,KACFzJ,EAAKgO,oBAAoB5I,EAAEuD,WAK/BoF,EAAArT,UAAAsT,oBAAR,SAA4BC,OACpBC,EAAYtT,KAAKmC,GAAGC,cAAcmR,iBAAiB,kBAGnDC,GAFJF,EAAYG,MAAMC,KAAKJ,IACazO,UAAS,SAACyB,GAAK,OAAAA,IAAM+M,IAChB,EACrCG,GAAkBF,EAAUnN,SAC5BqN,EAAiB,OAEfG,EAAkBL,EAAUE,GAC9BG,GACAnB,WAAU,WACNmB,EAAgBC,+BA9B/B5J,EAAAA,UAAS/I,KAAA,CAAC,CACPC,SAAU,4DAHM8B,EAAAA,kBAAYoB,EAAAA,gBADvB8I,EAAAA,gBAqCTiG,GA7BI,SAAAA,EAAmBhR,EAAuBgI,EAA4B8C,GAAnDjN,KAAAmC,GAAAA,EAAuBnC,KAAAmK,SAAAA,EAA4BnK,KAAAiN,aAAAA,ECD1E,IAAa4G,EAAoB,IAAIC,EAAAA,eAAqC,gCCP1EC,GA0BIA,EAAAjU,UAAA2N,QADA,SACQuG,GACJA,EAAO/F,mBAGX8F,EAAAjU,UAAAC,SAAA,aAEAgU,EAAAjU,UAAA0F,SAAA,SAASyO,GACLjU,KAAKsE,KAAO2P,EAEPjU,KAAKkU,IAAe,WACrBlU,KAAKkU,IAAIC,iBAIjBJ,EAAAjU,UAAAsU,WAAA,SAAWC,GACP,OAAOrU,KAAKsU,UAAUD,IAG1BN,EAAAjU,UAAAyU,YAAA,SAAYP,EAAQtQ,GAChB1D,KAAKwU,UAAU/T,KAAK,CAAC6D,KAAMZ,EAAM+Q,MAAOT,KAG5CD,EAAAjU,UAAA4U,cAAA,SAAc9P,GACV5E,KAAK2U,YAAc/P,EACd5E,KAAKkU,IAAe,WACrBlU,KAAKkU,IAAIC,qCAjDpBnT,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,cACVC,SAAA,wiDAJwFiD,EAAAA,gBAAnFwQ,EAAAA,0DASJjT,EAAAA,uBACAA,EAAAA,oBACAA,EAAAA,yBACAA,EAAAA,yBACAA,EAAAA,wBACAA,EAAAA,4BACAA,EAAAA,yBAEAC,EAAAA,+BAEAiT,EAAAA,UAAS5T,KAAA,CAAC,mCAMViJ,EAAAA,aAAYjJ,KAAA,CAAC,YAAa,CAAC,cA6BhC8S,GA/BI,SAAAA,EAAoB5J,EAA4B+J,GAA5BlU,KAAAmK,SAAAA,EAA4BnK,KAAAkU,IAAAA,EAdvClU,KAAA8U,aAAc,EACd9U,KAAA+U,QAAU,GACV/U,KAAAsE,KAAmB,GACnBtE,KAAAiE,UAAoB,GAEpBjE,KAAAgV,SAAW,GACXhV,KAAAiV,aAAe,OAEdjV,KAAAwU,UAAY,IAAI3S,EAAAA,aAI1B7B,KAAA2U,aAAe,SCkBfO,EAAApV,UAAAC,SAAA,WACIC,KAAKgI,UAAYhI,KAAKmK,SAAS1F,IAAIwF,EAAAA,UAAW,OAGlDiL,EAAApV,UAAAwH,gBAAA,WACItH,KAAKkH,OACLlH,KAAKmV,2BAGTD,EAAApV,UAAA8F,YAAA,SAAYC,GACJA,EAAQuP,cAAgBvP,EAAQuP,YAAYhO,iBAC5CpH,KAAKkH,QAILgO,EAAApV,UAAAoH,KAAR,eACUsI,EAAWxP,KAAKmC,GAAGC,cAAckN,SACjCC,EAAWvP,KAAKmC,GAAGC,cAAcmN,UACnCvP,KAAKoV,aAAiB5F,GAAaD,EAGnCvP,KAAK0K,UAFL1K,KAAKqV,wBAMbH,EAAApV,UAAAgG,YAAA,WACI9F,KAAK0K,UACL1K,KAAKsV,gBAELtV,KAAKkM,SAAStB,aACd5K,KAAKkM,SAAW,MAGpBgJ,EAAApV,UAAAqV,wBAAA,WAAA,IAAA/P,EAAApF,KAEUuV,EAAavV,KAAKmC,GAAGC,cAgB3BpC,KAAKkM,SAAW,IAAIsJ,iBAVN,SAAIC,EAAevJ,eAE7B,IAAoB,IAAAwJ,ECpEhC,SA8FgBC,EAASC,GACrB,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWC,EAAI,EAChE,OAAIH,EAAUA,EAAEI,KAAKL,GACd,CACHM,KAAM,WAEF,OADIN,GAAKI,GAAKJ,EAAEzP,SAAQyP,OAAI,GACrB,CAAEtV,MAAOsV,GAAKA,EAAEI,KAAMG,MAAOP,KDhChBQ,CAAAX,GAAaY,EAAAX,EAAAQ,QAAAG,EAAAF,KAAAE,EAAAX,EAAAQ,OAAE,CAA/B,IAAII,EAAQD,EAAA/V,MACU,eAAlBgW,EAASxT,MAAqD,aAA3BwT,EAASC,eAA2D,aAA3BD,EAASC,eACrFnR,EAAK8B,+GASjBlH,KAAKkM,SAASG,QAAQkJ,EAhBP,CAAEiB,YAAY,KAoBjCtB,EAAApV,UAAA4K,QAAA,WACQ1K,KAAKyW,oBACLzW,KAAKyW,mBAAmB1L,UAIxBmK,EAAApV,UAAA4W,SAAR,eACUvL,EAAUnL,KAAKmC,GAAGC,cAAc+I,QACtC,OAAInL,KAAKgI,UAEKmD,EAAO,aADAnL,KAAKgI,UAAU/H,KAG5BD,KAAKmC,GAAGC,cAAcgJ,GACZD,EAAO,aAAanL,KAAKmC,GAAGC,cAAcgJ,GAGrD,IAGH8J,EAAApV,UAAAuV,qBAAR,WAAA,IAAAjQ,EAAApF,KACU2W,EAAc3W,KAAKwL,OAAOC,cAAc,QAC9CkL,EAAYjL,UAAY,kBACxBiL,EAAY7J,MAAQ9M,KAAK8M,MAAQ9M,KAAK8M,MAAS9M,KAAK+M,UAAU/I,SAAS,wBAA0B,WAC3FoH,EAAKpL,KAAK0W,WACZtL,IACAuL,EAAYvL,GAAKA,GAGrBpL,KAAKwL,OAAOG,SAASgL,EAAa,WAAY,YAC9C3W,KAAKwL,OAAOG,SAASgL,EAAa,OAAQ,OAC1C3W,KAAKwL,OAAOG,SAASgL,EAAa,SAAU,OAC5C3W,KAAKwL,OAAOG,SAASgL,EAAa,SAAU,eAEtCC,EAAO5W,KAAKwL,OAAOC,cAAc,QACvCzL,KAAKwL,OAAOgB,YAAYmK,EAAaC,GAErCA,EAAKlL,UAAY,wBACjB1L,KAAKwL,OAAOG,SAASiL,EAAM,WAAY,YAEvC5W,KAAKwL,OAAOG,SAASiL,EAAM,MAAO,OAClC5W,KAAKwL,OAAOG,SAASiL,EAAM,YAAa,QAExC5W,KAAKmC,GAAGC,cAAckK,MAAMqK,GAC5B3W,KAAKyW,mBAAqBE,EAE1B3W,KAAKwL,OAAOkB,OAAOiK,EAAa,QAAO,SAAGnM,GACtCA,EAAEyD,kBACG7I,EAAKyR,eAGNzR,EAAKkQ,gBAFLlQ,EAAK0R,mBAOT5B,EAAApV,UAAAgX,cAAR,WAAA,IAAA1R,EAAApF,KACU+W,EAAc/W,KAAKwL,OAAOC,cAAc,OAGxCuL,EAAShX,KAAKiX,WAAWC,wBAEzBtL,EAAA5L,KAAAyW,mBAAA9O,wBAAEwP,EAAAvL,EAAAuL,KAAMvL,EAAA/C,OACd7I,KAAKwL,OAAOG,SAASoL,EAAa,QAAS,SAC3C/W,KAAKwL,OAAOG,SAASoL,EAAa,aAAiB/W,KAAKuH,UAAS,MACjEvH,KAAKwL,OAAOG,SAASoL,EAAa,WAAY,YAC9C/W,KAAKwL,OAAOG,SAASoL,EAAa,OAAWI,EAAI,MACjDnX,KAAKwL,OAAOG,SAASoL,EAAa,MAAO,OACzC/W,KAAKwL,OAAOG,SAASoL,EAAa,UAAWC,GAC7ChX,KAAKwL,OAAOG,SAASoL,EAAa,aAAc,uBAChD/W,KAAKwL,OAAOG,SAASoL,EAAa,gBAAiB,OACnD/W,KAAKwL,OAAOG,SAASoL,EAAa,aAAc,SAChD/W,KAAKwL,OAAOG,SAASoL,EAAa,aAAc,UAChDlP,SAASW,KAAK4O,OAAOL,GAErB/W,KAAK6W,eAAiBE,MAEhBM,EAAcrX,KAAKsX,IAAIC,wBAAwBxD,GACrD/T,KAAKwX,YAAcH,EAAYI,OAAOzX,KAAKmK,UAE3CnK,KAAKwX,YAAYE,SAAS5C,aAAc,EACxC9U,KAAKwX,YAAYE,SAASzC,aAAejV,KAAK+M,UAAU/I,SAAS,uBACjEhE,KAAKwX,YAAYE,SAAS3C,QAAU,CAChC,CACI4C,KAAM3X,KAAK4X,QAAU5X,KAAK4X,QAAU5X,KAAK+M,UAAU/I,SAAS,yBAC5D6T,QAAS,2BAA4BC,QAAO,WACpC1S,EAAK2S,aACL3S,EAAKkQ,gBACLlQ,EAAK2S,WAAWC,wBAAwB,CAAClV,KAAM,UAAU4C,UAAS,SAAE8E,GAChEyN,QAAQC,IAAI1N,SAMhCxK,KAAKwX,YAAYE,SAASzT,UAAY,UACtCjE,KAAKwX,YAAYE,SAAS1C,SAAW,OAErChV,KAAKwX,YAAYE,SAASlD,UAAU9O,UAAS,SAAE8E,OACrC7G,EAAM6G,EAAElG,KAAc,QACxB6T,EAAQ/S,EAAKjD,GAAGC,cAAc9B,OAAS,GAC3C6X,GAASxU,EACLyB,EAAK4C,UACL5C,EAAK4C,UAAUuC,QAAQ6N,WAAWD,GAElC/S,EAAKjD,GAAGC,cAAc9B,MAAQ6X,EAGlC/S,EAAKkQ,kBAGTyB,EAAYvK,YAAYxM,KAAKwX,YAAYa,SAASjW,eAClDpC,KAAKwX,YAAYc,kBAAkBnE,gBAEnCnU,KAAKwF,SAASxF,KAAKwX,aAGnBxX,KAAKuY,WAAWC,mBAAmBzB,EAAW,SAAGvM,GACzCpF,EAAKyR,eAAejU,SAAS4H,EAAEuD,SAAW3I,EAAKqR,qBAAuBjM,EAAEuD,QAAU3I,EAAKqR,mBAAmB7T,SAAS4H,EAAEuD,SAGzH3I,EAAKkQ,mBAIbJ,EAAApV,UAAAwV,cAAA,WACQtV,KAAKwX,cACLxX,KAAKwX,YAAY9M,UACjB1K,KAAKwX,YAAc,MAGnBxX,KAAK6W,iBACL7W,KAAK6W,eAAe9L,SACpB/K,KAAKuY,WAAWE,QAAQzY,KAAK6W,gBAC7B7W,KAAK6W,eAAiB,OAItB3B,EAAApV,UAAA0F,SAAR,SAAiBgS,GAAjB,IAAApS,EAAApF,KACQA,KAAK+X,YACL/X,KAAK+X,WAAWW,kBAAkB,CAAC5V,KAAM,UAAU4C,UAAS,SAAEpB,GAC1DkT,EAAYE,SAASlS,SAASlB,GAC9BkO,WAAU,WACNpN,EAAKuT,qBAMbzD,EAAApV,UAAA6Y,cAAR,WACU,IAAA/M,EAAA5L,KAAAyW,mBAAA9O,wBAAEe,EAAAkD,EAAAlD,IAAKG,EAAA+C,EAAA/C,OAAQsO,EAAAvL,EAAAuL,KACfyB,EAAc5Y,KAAK6W,eAAe9N,aACxC,GAAI4F,OAAOkK,YAAchQ,EAAU7I,KAAKuH,WAAaoH,OAAOkK,YAAchQ,EAAS+P,EAG/E,OAFA5Y,KAAKwL,OAAOG,SAAS3L,KAAK6W,eAAgB,MAAUhO,EAAM,WAC1D7I,KAAKwL,OAAOuH,YAAY/S,KAAK6W,eAAgB,cAGzCnO,EAAM1I,KAAKuH,WAAmBqR,EAANlQ,EACxB1I,KAAKwL,OAAOG,SAAS3L,KAAK6W,eAAgB,MAAUnO,EAAMkQ,EAAW,OAErE5Y,KAAKwL,OAAOG,SAAS3L,KAAK6W,eAAgB,MAAO,OACtC,IAAPM,GACAnX,KAAKwL,OAAOG,SAAS3L,KAAK6W,eAAgB,OAAYM,EAAO,IAAG,OAGxEnX,KAAKwL,OAAOuH,YAAY/S,KAAK6W,eAAgB,mCA5PxD7M,EAAAA,UAAS/I,KAAA,CAAC,CACPC,SAAU,iEAVyEkD,EAAAA,gBAAZpB,EAAAA,kBAA2DgK,EAAAA,iBAI7HG,EAAAA,qBAJe2L,EAAAA,iEAcnBnX,EAAAA,MAAKV,KAAA,CAAC,sCACNU,EAAAA,qBACAA,EAAAA,uBACAA,EAAAA,SAuPLuT,GA3OI,SAAAA,EAAoB/K,EAA4BhI,EAAwBqJ,EAC5DuB,EAAkCuK,GAD1BtX,KAAAmK,SAAAA,EAA4BnK,KAAAmC,GAAAA,EAAwBnC,KAAAwL,OAAAA,EAC5DxL,KAAA+M,UAAAA,EAAkC/M,KAAAsX,IAAAA,EAhBpBtX,KAAAoV,aAAc,EAC/BpV,KAAAuH,UAAY,IACZvH,KAAA8M,MAAQ,GACR9M,KAAA4X,QAAU,GAKnB5X,KAAAyW,mBAAqB,KACrBzW,KAAAwX,YAAiD,KACjDxX,KAAA6W,eAAiB,KAOb7W,KAAK+X,WAAa/X,KAAKmK,SAAS1F,IAAIoP,EAAmB,MACvD7T,KAAKuY,WAAavY,KAAKmK,SAAS1F,IAAIsU,EAAAA,qBAAsB,MAC1D/Y,KAAKiX,WAAajX,KAAKmK,SAAS1F,IAAIC,EAAAA,YAAa,MAC5C1E,KAAKuY,aACNvY,KAAKuY,WAAa,IAAIQ,EAAAA,sBEnClC,IAAAC,GAwCYA,EAAAlZ,UAAA0Y,mBAAR,WAAA,IAAApT,EAAApF,KACIA,KAAKiZ,eAAiBjZ,KAAKuY,WAAWC,mBAAmBxY,KAAKkZ,MAAM9W,cAAa,SAAGoI,GAC3EpF,EAAK+T,SAASxW,UAAUC,SAAS,iBAIlCwC,EAAK+T,SAASvW,SAAS4H,EAAEuD,SAIzB3I,EAAKgU,SAASxW,SAAS4H,EAAEuD,SAI7B3I,EAAK+T,SAASxW,UAAUoI,OAAO,mBAIvCiO,EAAAlZ,UAAAC,SAAA,WAAA,IAAAqF,EAAApF,KACIA,KAAKqZ,OAASrZ,KAAKmK,SAAS1F,IAAIwF,EAAAA,WAE5BjK,KAAKqZ,QACLrZ,KAAKqZ,OAAOpR,aAAavC,UAAS,SAAEwC,GAChC9C,EAAKkU,uBAMjBN,EAAAlZ,UAAAwH,gBAAA,WACY,IAAAqC,EAAA3J,KAAAuZ,iBAAA5P,UACR3J,KAAKoZ,SAAWzP,EAChB3J,KAAKkZ,MAAM9W,cAAcqF,MAAM+R,QAAU,QAG7CR,EAAAlZ,UAAAgG,YAAA,WACQ9F,KAAKiZ,gBACLjZ,KAAKiZ,kBAILD,EAAAlZ,UAAAyZ,eAAR,WAAA,IAAAnU,EAAApF,KACUyZ,EAAoB5R,SAAS4D,cAAc,OACjDgO,EAAkB/N,UAAY,+BAC1B1L,KAAK6L,QACL4N,EAAkBhS,MAAMoE,MAAW7L,KAAK6L,MAAK,MAGjD4N,EAAkBhS,MAAMiS,WAAa,OACrCD,EAAkBhS,MAAMkS,SAAW,aAE7BC,EAAe/R,SAAS4D,cAAc,OAC5CmO,EAAalO,UAAY,kDACzBkO,EAAanS,MAAMoS,WAAa,SAChCD,EAAanS,MAAMqS,WAAa,SAChC9Z,KAAK+Z,cAAgBH,MAEfI,EAAgBnS,SAAS4D,cAAc,OAqD7C,OApDAuO,EAActO,UAAY,qBAC1BsO,EAAc9I,UAAY,8EAE1BuI,EAAkBjN,YAAYoN,GAC9BH,EAAkBjN,YAAYwN,GAG9Bha,KAAKkZ,MAAM9W,cAAckK,MAAMmN,GAI/BzZ,KAAKwL,OAAOkB,OAAO+M,EAAmB,QAAO,SAAGjP,GACxCpF,EAAK+T,SAASxW,UAAUC,SAAS,eACjCwC,EAAK+T,SAASxW,UAAUoI,OAAO,gBAI9B3F,EAAK6U,aACN7U,EAAK6U,WAAU,WACX,OAAOC,EAAAA,IAAG,KAIlB9U,EAAK+U,iBACL/U,EAAK6U,WAAW,CAACvC,SAAUtS,IAAOgV,KAC9BC,EAAAA,aAAa,KACf3U,UAAS,SAACoB,GACJA,GACA1B,EAAK+T,SAASxW,UAAU2X,IAAI,oBAKxCta,KAAKwL,OAAOkB,OAAO1M,KAAKmZ,SAAU,QAAO,SAAG3O,GACxC,GAA0B,OAAtBA,EAAEuD,OAAOwM,SAAmB,KACtB5W,EAAM6G,EAAEuD,OAAOyM,aAAa,SAClCpV,EAAKiU,OAAO9O,QAAQsF,SAASlM,GAC7ByB,EAAK+T,SAASxW,UAAUoI,OAAO,eAC/B6O,EAAa1I,UAAY1G,EAAEuD,OAAOmD,aAI1ClR,KAAKmZ,SAAS1R,MAAMgT,QAAU,8LAM9Bza,KAAKmZ,SAAS9G,cAAc,MAAM5K,MAAMgT,QAAU,mEAElDza,KAAKsZ,oBAEE,CAAE3P,UAAW8P,IAGhBT,EAAAlZ,UAAAwZ,kBAAR,WAAA,IAAAlU,EAAApF,KACIwS,WAAU,eAEAkI,EAAKtV,EAAK+T,SAAS9G,cAAc,WAAWjN,EAAKiU,OAAO/Y,MAAK,MAGnE,GAFA8E,EAAK2U,cAAc7I,UAAYwJ,EAAKA,EAAGxJ,UAAY,GAE/C9L,EAAK6O,QAAU7O,EAAK6O,MAAM9N,OAAQ,KAC5BzC,EAAO0B,EAAK6O,MAAM5O,KAAI,SAACiB,GAAK,OAAAA,EAAEhG,OAAS8E,EAAKiU,OAAO/Y,QACrDoD,IACA0B,EAAK2U,cAAc7I,UAAYxN,EAAKlB,OAI5C4C,EAAK2U,cAAcjN,MAAQ1H,EAAK2U,cAAclN,aAI9CmM,EAAAlZ,UAAAqa,eAAR,eACUQ,EAAU3a,KAAKmZ,SAAS9G,cAAc,MAC5C,GAAsB,UAAlBrS,KAAK4a,SAAsB,CAC3BD,EAAGlT,MAAMmT,SAAW,eAEdC,EADI7a,KAAKoZ,SAAS7Q,UAAYoS,EAAG5R,aAAe,EACtC,KAChB/I,KAAKmZ,SAAS1R,MAAMiB,IAAMmS,EAC1B7a,KAAKmZ,SAAS1R,MAAMqT,gBAAkB,cAEtC9a,KAAKmZ,SAAS1R,MAAMiB,IAAM,OACtB1I,KAAK2J,YACL3J,KAAKmZ,SAAS1R,MAAMiB,IAAO1I,KAAKmZ,SAAS5Q,UAAYvI,KAAK2J,UAAUoR,UAAa,MAQpF/a,KAAK6L,MAIN7L,KAAKmZ,SAAS1R,MAAMoE,MAAQ7L,KAAK6L,MAAQ,MAHzC7L,KAAKmZ,SAAS1R,MAAMoE,MAAQ7L,KAAKoZ,SAASnQ,YAAc,KACxD0R,EAAGlT,MAAMoE,MAAQ,6BAzL5B7B,EAAAA,UAAS/I,KAAA,CAAC,CACPC,SAAU,kBACViD,SAAU,4DARiCC,EAAAA,gBAAZpB,EAAAA,kBAAwDgK,EAAAA,4CAWtFrL,EAAAA,wBACAA,EAAAA,qBACAA,EAAAA,wBACAA,EAAAA,yBACAA,EAAAA,SAuLLqX,GA7KI,SAAAA,EAAoB7O,EAA4B+O,EAA2B1N,GAA3E,IAAApG,EAAApF,KAAoBA,KAAAmK,SAAAA,EAA4BnK,KAAAkZ,MAAAA,EAA2BlZ,KAAAwL,OAAAA,EAdlExL,KAAAiU,MAAiD,GAGjDjU,KAAA4a,SAA4B,QAC5B5a,KAAA2J,UAAY,KAGrB3J,KAAAoZ,SAAW,KACHpZ,KAAAiZ,eAAiB,KACjBjZ,KAAA+Z,cAAgB,KAChB/Z,KAAAsS,OAAiB,KAEzBtS,KAAAia,WAA+C,KAG3Cja,KAAKuY,WAAavY,KAAKmK,SAAS1F,IAAIsU,EAAAA,qBAAsB,IAAIA,EAAAA,sBAC9D/Y,KAAKsS,OAAStS,KAAKmK,SAAS1F,IAAIyO,EAAAA,OAAQ,MACpClT,KAAKuY,aAEDvY,KAAKsS,OACLtS,KAAKsS,OAAOC,kBAAiB,WACzBnN,EAAKoT,uBAGTxY,KAAKwY,sBClCrB,IAAAwC,uBAuBCC,EAAAA,SAAQha,KAAA,CAAC,CACNia,aAAc,CACVnZ,EACAlC,EACAqF,EACAP,EACAxB,EACAK,EACA8B,EACA2B,EACAmG,EACA+F,EACA/I,EACA4F,EACAkF,EACAnB,EACAiF,GAEJmC,QAAS,CACLC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,eAAeC,UACfC,EAAAA,mBAAmBD,UACnBE,EAAAA,cAEJC,QAAS,CACL3Z,EACAlC,EACAqF,EACAP,EACAxB,EACAK,EACA8B,EACA2B,EACAmG,EACA+F,EACA/I,EACA4F,EACAkF,EACA8D,GAEJ2C,gBAAiB,CACb5H,GAEJ3S,UAAW,CAACM,EAAAA,eAEiBsZ,GA9CjC,SAAAA","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, forwardRef, HostBinding } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { IdService } from '@farris/ui-common';\r\n@Component({\r\n    selector: 'farris-radio-group',\r\n    template: `\r\n    <div class=\"farris-radio-group btn-group\"\r\n    [class.farris-input-wrap]=\"type!=='button'\"\r\n    [class.btn-group-toggle]=\"type==='button'\"\r\n    [class.farris-checkradio-hor]=\"horizontal\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => RadioGroupComponent),\r\n        multi: true,\r\n    }],\r\n    styles: [`\r\n    `],\r\n})\r\nexport class RadioGroupComponent implements OnInit, ControlValueAccessor {\r\n    /* radio ç±»å */\r\n    @Input() type: string;\r\n\r\n    /* åå§å radio çå¼ */\r\n    @Input() model: any;\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() horizontal: boolean;\r\n\r\n    @Output() modelChange = new EventEmitter<any>();\r\n\r\n    // tslint:disable-next-line:ban-types\r\n    subscriber: Function[] = [];\r\n\r\n    constructor(private idSer: IdService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.name = this.idSer.generate().replace(/-/g, '_');\r\n    }\r\n\r\n    changeModel(value: any) {\r\n        this.model = value;\r\n        this.modelChange.emit(this.model);\r\n        this.controlChange(value);\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        this.model = value;\r\n        this.changeModel(this.model);\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.controlChange = fn\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.controlTouch = fn\r\n    }\r\n\r\n    private controlChange: Function = () => { }\r\n    private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, forwardRef, Optional, ElementRef, HostBinding, ChangeDetectorRef, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { RadioGroupComponent } from './radio-group.component';\r\n\r\n@Component({\r\n  selector: 'farris-radio',\r\n  templateUrl: './radio.component.html',\r\n  styleUrls: ['./radio.component.css'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => RadioComponent),\r\n    multi: true,\r\n  }]\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RadioComponent implements ControlValueAccessor, OnInit {\r\n\r\n  /* radio åçname ç¨äºå¤ä¸ªradioåéä½¿ç¨ */\r\n  // get name() {\r\n  //   if (this.hasParent(this.el.nativeElement)) {\r\n  //     return this.radioGroup.name;\r\n  //   }\r\n  // }\r\n \r\n  /* radio å¼ */\r\n  @Input()\r\n  get model(): any {\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.radioGroup.model;\r\n    }\r\n    return this.nyModel;\r\n  }\r\n\r\n  set model(model: any) {\r\n    this.nyModel = model;\r\n  }\r\n\r\n\r\n  @Input() id: string;\r\n\r\n  /* radio å¼ */\r\n  @Input() label: any = '';\r\n\r\n  /* ç¦ç¨ */\r\n  @Input() disabled: boolean;\r\n\r\n  nyModel: any;\r\n\r\n  name = '';\r\n\r\n  @Output() modelChange = new EventEmitter<any>();\r\n\r\n  @HostBinding('class.d-block') blockClass = true;\r\n\r\n  constructor(\r\n    @Optional() private radioGroup: RadioGroupComponent,\r\n    private el: ElementRef\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.name = this.radioGroup.name;\r\n  }\r\n\r\n  changeModelHandler() {\r\n    // ç¶åç´ è·ålabel  å­åç´ åä»ç¶åç´ è·åmodel\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.radioGroup.changeModel(this.label);\r\n    }\r\n    this.model = this.label;\r\n    this.modelChange.emit(this.model);\r\n    this.controlChange(this.label);\r\n  }\r\n\r\n  /* æ¯å¦å­å¨ç¶åç´   å­å¨å³åéç»*/\r\n  hasParent(element: any) {\r\n    return element.parentElement.classList.contains('farris-radio-group');\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.model = value;\r\n  }\r\n\r\n  registerOnChange(fn: Function): void {\r\n    this.controlChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: Function): void {\r\n    this.controlTouch = fn;\r\n  }\r\n\r\n  private controlChange: Function = () => { };\r\n  private controlTouch: Function = () => { };\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, forwardRef, Optional, ElementRef, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { RadioGroupComponent } from './radio-group.component';\r\nimport { HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'farris-radio-button',\r\n    template: `\r\n    <label [class]=\"'btn btn-'+type\" [class.active]=\"isGroupModel()\" [class.disabled]=\"disabled\">\r\n        <input class=\"custom-control-input\" [name]=\"name\" [value]=\"label\"\r\n        [ngModel]=\"model\" (ngModelChange)=\"changeModelHandler()\" type=\"radio\" [disabled]=\"disabled\">\r\n          <ng-content>\r\n          </ng-content>\r\n    </label>\r\n  `,\r\n    styles: [\r\n        `\r\n        .farris-radio-button>.btn{\r\n            margin-left:-1px\r\n          }\r\n          .farris-radio-button>.btn.active, .farris-radio-button>.btn:hover{\r\n            position: relative;\r\n          }\r\n      `\r\n    ],\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => RadioButtonComponent),\r\n        multi: true,\r\n    }],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class RadioButtonComponent implements ControlValueAccessor, OnInit {\r\n\r\n    /* radio åçname ç¨äºå¤ä¸ªradioåéä½¿ç¨ */\r\n    // get name() {\r\n\r\n    // }\r\n    name = '';\r\n\r\n    /* æé®ç±»å */\r\n    @Input()\r\n    type = 'secondary';\r\n\r\n    /* radio å¼ */\r\n    @Input()\r\n    get model(): any {\r\n        if (this.hasParent(this.el.nativeElement)) {\r\n            return this.radioGroup.model;\r\n        }\r\n        return this.nyModel;\r\n    }\r\n\r\n    set model(model: any) {\r\n        this.nyModel = model;\r\n    }\r\n\r\n\r\n    @Input()\r\n    id: string;\r\n\r\n    /* radio å¼ */\r\n    @Input()\r\n    label: any = '';\r\n\r\n    /* ç¦ç¨ */\r\n    @Input()\r\n    disabled: boolean;\r\n\r\n    nyModel: any;\r\n\r\n    @Output()\r\n    modelChange = new EventEmitter<any>();\r\n\r\n\r\n    @HostBinding('class.farris-radio-button')\r\n    get farrisRadioButtonClass() { return true; }\r\n\r\n    constructor(\r\n        @Optional() public radioGroup: RadioGroupComponent,\r\n        private el: ElementRef\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.name = this.hasParent(this.el.nativeElement) ? this.radioGroup.name : '';\r\n    }\r\n\r\n    isGroupModel() {\r\n        return this.label === this.radioGroup.model;\r\n    }\r\n\r\n    changeModelHandler() {\r\n        // ç¶åç´ è·ålabel  å­åç´ åä»ç¶åç´ è·åmodel\r\n        if (this.hasParent(this.el.nativeElement)) {\r\n            return this.radioGroup.changeModel(this.label);\r\n        }\r\n        this.model = this.label;\r\n        this.modelChange.emit(this.model);\r\n        this.controlChange(this.label);\r\n    }\r\n\r\n    /* æ¯å¦å­å¨ç¶åç´   å­å¨å³åéç»*/\r\n    hasParent(element: any) {\r\n        return element.parentElement.classList.contains('farris-input-wrap') || element.parentElement.classList.contains('btn-group');\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        this.model = value;\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.controlChange = fn\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.controlTouch = fn\r\n    }\r\n\r\n    private controlChange: Function = () => { }\r\n    private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { Component, Input, forwardRef, OnInit, EventEmitter, Optional, Injector } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, RadioControlValueAccessor } from '@angular/forms';\r\nimport { IdService, CommonUtils } from '@farris/ui-common';\r\nimport { Radio } from './radio';\r\nimport { Output } from '@angular/core';\r\n@Component({\r\n    selector: 'farris-radiogroup',\r\n    templateUrl: './radiogroup.component.html',\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => FarrisRadioGroupComponent),\r\n        multi: true,\r\n    }],\r\n    exportAs: 'FarrisRadioGroupComponent'\r\n})\r\nexport class FarrisRadioGroupComponent implements ControlValueAccessor, OnInit {\r\n    @Input('tab-index') tabIndex: number;\r\n    /* radio æ°ç» */\r\n    @Input() data: Radio[] = [];\r\n\r\n    /* radio ç±»å   åçæèæé®ç±»å*/\r\n    @Input() type: string;\r\n\r\n    /* nameæ è¯ */\r\n    @Input() name: string;\r\n\r\n    /* æ°´å¹³æå */\r\n    @Input() horizontal: boolean;\r\n\r\n    /* ç¦ç¨ */\r\n    @Input() disabled: boolean;\r\n\r\n    /* radio å¼ */\r\n    @Input() value: any;\r\n    @Input() textField = 'name';\r\n    @Input() valueField = 'value';\r\n\r\n    /** æ°æ®ä¸­æ è¯ç¦ç¨çå­æ®µåç§°ï¼é»è®¤ä¸º disabled */\r\n    @Input() disabledField = 'disabled';\r\n    /** åè¡¨ä¸­æ¯å¦æ¾ç¤ºå·²ç¦ç¨çé¡¹ï¼é»è®¤ true */\r\n    @Input() showDisabledItem = true;\r\n\r\n    /* ç¹å»äºä»¶ */\r\n    @Output() changeValue = new EventEmitter<any>();\r\n    private commonUtils: CommonUtils;\r\n    constructor(private idSer: IdService, @Optional() private inject: Injector) {\r\n        if (this.inject) {\r\n            this.commonUtils = this.inject.get(CommonUtils);\r\n        }\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.name = this.idSer.generate().replace(/-/g, '_');\r\n    }\r\n\r\n    clickHandler(item: any) {\r\n        let val = this._getValue(item);\r\n        if(this.value == val) return;\r\n        // æ´æ¹controlçå¼\r\n        this.value = val;\r\n        this.controlChange(this.value);\r\n        this.controlTouch(this.value);\r\n        this.changeValue.emit(this.value);\r\n    }\r\n\r\n    _getText(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.textField, item);\r\n            } else {\r\n                return item[this.textField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    _getValue(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.valueField, item);\r\n            } else {\r\n                return item[this.valueField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n\r\n    writeValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: () => void): void {\r\n        this.controlChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.controlTouch = fn;\r\n    }\r\n\r\n    private controlChange: (value: any) => void = () => { };\r\n    private controlTouch: (value: any) => void = () => { };\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { IdService } from '@farris/ui-common';\r\n@Component({\r\n    selector: 'farris-checkbox-group',\r\n    template: `\r\n    <div class=\"farris-input-wrap\" [class.farris-checkradio-hor]=\"horizontal\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => CheckboxGroupComponent),\r\n        multi: true,\r\n    }],\r\n    styles: [],\r\n})\r\nexport class CheckboxGroupComponent implements OnInit, ControlValueAccessor {\r\n\r\n    /* åå§å checkbox çå¼ */\r\n    @Input()\r\n    model = [];\r\n\r\n    /* è®¾ç½®é»è®¤nameå¼ */\r\n    @Input()\r\n    name: string;\r\n\r\n    /* æ§ä»¶æ°´å¹³æå */\r\n    @Input()\r\n    horizontal: boolean;\r\n\r\n    /*  */\r\n    @Output()\r\n    modelChange = new EventEmitter<any>();\r\n\r\n    constructor(private idSer: IdService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.name = this.idSer.generate();\r\n    }\r\n\r\n    changeModel(value: any) {\r\n        const index = this.model.findIndex(ele => {\r\n            return ele === value;\r\n        });\r\n        // å¦æå·²ç»éä¸­  åè®¾ç½®ä¸ºä¸éä¸­\r\n        if (index > -1) {\r\n            this.model.splice(index, 1);\r\n            return this.modelChange.emit(this.model);\r\n        }\r\n        // å¦ææ²¡æéä¸­  è®¾ç½®ä¸ºéä¸­\r\n        this.model.push(value);\r\n        // controlçå¼è®¾ç½®ä¸ºéå·åéçå­ç¬¦ä¸²  ä¾¿äºå­å¨åä¼ é\r\n        this.controlChange(this.model.join());\r\n        this.modelChange.emit(this.model);\r\n    }\r\n    writeValue(value: any): void {\r\n        this.model = value\r\n        this.changeModel(this.model)\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.controlChange = fn\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.controlTouch = fn\r\n    }\r\n\r\n    private controlChange: Function = () => { }\r\n    private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { Component, OnInit, Input, ElementRef, forwardRef, Output, EventEmitter } from '@angular/core';\r\nimport { CheckboxGroupComponent } from './checkbox-group.component';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n@Component({\r\n  selector: 'farris-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => CheckboxComponent),\r\n    multi: true,\r\n  }],\r\n  styles: ['./checkbox.component.css']\r\n})\r\nexport class CheckboxComponent implements OnInit, ControlValueAccessor {\r\n\r\n   /* radio åçname ç¨äºå¤ä¸ªradioåéä½¿ç¨ */\r\n   get name() {\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.checkbox.name;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  /* model */\r\n  @Input()\r\n  get model() {\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.checkbox.model.find(ele => {\r\n        return ele === this.label;\r\n      });\r\n    }\r\n    return this.nyModel;\r\n  }\r\n\r\n  set model(model: any) {\r\n    this.nyModel = model;\r\n  }\r\n\r\n  /* checkboxå¼ */\r\n  @Input()\r\n  label: any;\r\n\r\n  /* ç¦ç¨ */\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  @Output()\r\n  modelChange = new EventEmitter<any>();\r\n  nyModel: any;\r\n  constructor(\r\n    private checkbox: CheckboxGroupComponent,\r\n    private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /* å¼ä¼ é */\r\n  changeModelHandler() {\r\n    // ç¶åç´ è·ålabel  å­åç´ åä»ç¶åç´ è·åmodel\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.checkbox.changeModel(this.label);\r\n    }\r\n    this.model = this.label;\r\n    this.modelChange.emit(this.model);\r\n    this.controlChange(this.label);\r\n  }\r\n\r\n\r\n  /* æ¯å¦å­å¨ç¶åç´   å­å¨å³åéç»*/\r\n  hasParent(element: any) {\r\n    return element.parentElement.classList.contains('farris-input-wrap');\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.model = value;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.controlChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.controlTouch = fn;\r\n  }\r\n  private controlChange: Function = () => { }\r\n  private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { OnDestroy, SimpleChanges, OnChanges, Optional, Injector } from '@angular/core';\r\n/*\r\n * @Author: è¡çæ´(Yuyang)\r\n * @Date: 2019-08-29\r\n * @LastEditors:  è¡çæ´(Yuyang)\r\n * @LastEditTime: 2019-08-29\r\n * @QQ: 664927877\r\n * @Version: v0.0.8\r\n */\r\nimport { Component, Input, forwardRef, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { IdService, CommonUtils } from '@farris/ui-common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'farris-checkboxgroup',\r\n    templateUrl: './checkboxgroup.component.html',\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => FarrisCheckboxGroupComponent),\r\n        multi: true,\r\n    }],\r\n    exportAs: 'FarrisCheckboxGroupComponent'\r\n})\r\nexport class FarrisCheckboxGroupComponent implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\r\n\r\n    @Input('tab-index') tabIndex = 0;\r\n\r\n    /* radio æ°ç» */\r\n    @Input() data: any[] = [];\r\n\r\n    /* checkbox ç±»å   åçæèæé®ç±»å*/\r\n    @Input() type: string;\r\n\r\n    /* å¤éæ¡name */\r\n    @Input() name: string;\r\n\r\n    /* æ¯å¦æ°´å¹³åå¸ */\r\n    @Input() horizontal: boolean;\r\n\r\n    /* åéç¬¦ é»è®¤éå·*/\r\n    @Input() separator = ',';\r\n\r\n    /* ç¦ç¨ */\r\n    @Input() disable: boolean;\r\n\r\n    /* å¤éæ¡ç»çå¼ */\r\n    @Input() value: any;\r\n\r\n    /* å¼ç±»åæ¯å¦æ¯string */\r\n    @Input() isStringValue = true;\r\n\r\n    @Input() textField = 'name';\r\n    @Input() valueField = 'value';\r\n\r\n    /** å è½½æ°æ®äºä»¶ */\r\n    @Input() loadData: (emptyData?: any[]) => Observable<any>;\r\n    loadDataSubscription: Subscription;\r\n\r\n    @Output() changeValue = new EventEmitter<any>();\r\n\r\n    /* checkboxèµå¼äºä»¶ */\r\n    @Output() setCheckboxData = new EventEmitter<any>();\r\n\r\n    private commonUtils: CommonUtils;\r\n\r\n    constructor(private idSer: IdService, @Optional() private inject: Injector) {\r\n        if (this.inject) {\r\n            this.commonUtils = this.inject.get(CommonUtils);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        // åå§åname\r\n        this.name = this.idSer.generate().replace(/-/g, '_');\r\n\r\n        this.setCheckboxData.emit(this);\r\n        // todo åå¼å¯ä»¥å®ç°promise\r\n        if (this.loadData) {\r\n            this.loadDataSubscription = this.loadData().subscribe(res => this.data = res.data);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.loadDataSubscription) {\r\n            this.loadDataSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    _getText(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.textField, item);\r\n            } else {\r\n                return item[this.textField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    _getValue(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.valueField, item);\r\n            } else {\r\n                return item[this.valueField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /* éä¸­inputå¼ */\r\n    clickHandler(item: any, index: number) {\r\n        let arrValue = this.transformToArr(this.value) || [];\r\n\r\n        const val = String(this._getValue(item));\r\n        if (!arrValue || !arrValue.length) {\r\n            arrValue.push(val);\r\n        } else {\r\n            if (arrValue.some(item => item == val)) {\r\n                arrValue = arrValue.filter(n => n !== val);\r\n            } else {\r\n                arrValue.push(val);\r\n            }\r\n        }\r\n\r\n        // æ´æ°valueå¼\r\n        this.value = this.transformToStr(arrValue);\r\n\r\n        // ä¼ å¼formcontrol\r\n        this.controlChange(this.value);\r\n        this.controlTouch(this.value);\r\n        this.changeValue.emit(this.value);\r\n    }\r\n\r\n    /* è¢«éä¸­ */\r\n    checked(item: any) {\r\n        const val = String(this._getValue(item));\r\n        const checkedValue = this.transformToArr(this.value);\r\n        // å¤å¼\r\n        return checkedValue.some(item => item == val);\r\n    }\r\n\r\n    /* å¼å°æ°ç»å¼çè½¬æ¢ */\r\n    transformToArr(value: any): string[] {\r\n        if (!value) {\r\n            return [];\r\n        }\r\n        if (!this.isStringValue) {\r\n            return value;\r\n        }\r\n\r\n        return value.split(this.separator);\r\n    }\r\n\r\n    /* å¼å°å­ç¬¦ä¸²å¼çè½¬æ¢ */\r\n    transformToStr(value: Array<string>) {\r\n\r\n        const allVals = this.data.map(n => this._getValue(n));\r\n        const r = [];\r\n        allVals.forEach(n => {\r\n            if (value.some(item => item == n)) {\r\n                r.push(n);\r\n            }\r\n        });\r\n\r\n        if (!this.isStringValue) {\r\n            return r;\r\n        }\r\n        return r.join(this.separator);\r\n    }\r\n\r\n\r\n    writeValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n\r\n    /* changeæä½å¼åå  æ¹æ³éå*/\r\n    registerOnChange(fn: () => void): void {\r\n        this.controlChange = fn;\r\n    }\r\n\r\n    /* blurå¼åå  æ¹æ³éå*/\r\n    registerOnTouched(fn: () => void): void {\r\n        this.controlTouch = fn;\r\n    }\r\n\r\n    private controlChange: (value: any) => void = () => { };\r\n    private controlTouch: (value: any) => void = () => { };\r\n\r\n}\r\n","import { Directive, Input, Injector, OnInit, ElementRef, HostListener, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[auto-size]',\r\n})\r\nexport class TextareaAutoSizeDirective implements OnInit, AfterViewInit, OnChanges{\r\n    @Input('auto-size') enable = true;\r\n    @Input() maxHeight: number;\r\n\r\n    private previousValue = null;\r\n    private isUserResized = false;\r\n\r\n    private textarea;\r\n    private document;\r\n    private documentElement;\r\n    private minHeight;\r\n\r\n    constructor(private el: ElementRef, private ngControl: NgControl, private injector: Injector) {\r\n        this.textarea = this.el.nativeElement;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.enable && !changes.enable.isFirstChange()) {\r\n            this.sizeToFit();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (!this.enable) {\r\n            return;\r\n        }\r\n        \r\n        if (this.maxHeight) {\r\n            this.textarea.style.maxHeight = `${this.maxHeight}px`;\r\n        }\r\n        \r\n        this.minHeight = this.textarea.getBoundingClientRect().height;\r\n        if (this.minHeight) {\r\n            this.textarea.style.minHeight = `${this.minHeight}px`;\r\n        }\r\n    }\r\n\r\n    private init() {\r\n        if (this.enable) {\r\n            this.document = this.textarea.ownerDocument;\r\n            this.documentElement = this.document.documentElement;\r\n            if (this.textarea) {\r\n                if (this.textarea.value) {\r\n                    this.sizeToFit();\r\n                }\r\n            }\r\n\r\n            if (this.ngControl) {\r\n                this.ngControl.valueChanges.subscribe(v => {\r\n                    if (v !== this.previousValue) {\r\n                        this.sizeToFit();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener('input')\r\n    onInput() {\r\n        this.sizeToFit();\r\n    }\r\n\r\n    @HostListener('change')\r\n    onValueChange() {\r\n        this.sizeToFit();\r\n    }\r\n\r\n\r\n    private overflowOffset() {\r\n        let offsetTop = 0;\r\n        let el = this.textarea;\r\n\r\n        while (el !== document.body && el !== null) {\r\n            offsetTop += el.offsetTop || 0;\r\n            el = el.offsetParent;\r\n        }\r\n\r\n        const top = offsetTop - document.defaultView.pageYOffset;\r\n        const bottom = this.documentElement.clientHeight - (top + this.textarea.offsetHeight);\r\n        return { top, bottom };\r\n    }\r\n\r\n    private sizeToFit() {\r\n        if (!this.enable) {\r\n            return;\r\n        }\r\n\r\n        const textarea = this.textarea;\r\n        const viewportMarginBottom = 100;\r\n        if (this.isUserResized) { return; }\r\n        if (this.textarea.value === this.previousValue) { return; }\r\n        if (this.textarea.offsetWidth <= 0 && this.textarea.offsetHeight <= 0) { return; }\r\n\r\n        // const { top, bottom } = this.overflowOffset();\r\n        // if (top < 0 || bottom < 0) {\r\n        //     return;\r\n        // }\r\n\r\n        const textareaStyle = getComputedStyle(textarea);\r\n\r\n        const topBorderWidth = Number(textareaStyle.borderTopWidth.replace(/px/, ''));\r\n        const bottomBorderWidth = Number(textareaStyle.borderBottomWidth.replace(/px/, ''));\r\n\r\n        const isBorderBox = textareaStyle.boxSizing === 'border-box';\r\n        const borderAddOn = isBorderBox ? topBorderWidth + bottomBorderWidth : 0;\r\n\r\n        // const maxHeight = Number(textareaStyle.height.replace(/px/, '')) + bottom;\r\n        // const adjustedViewportMarginBottom = bottom < viewportMarginBottom ? bottom : viewportMarginBottom;\r\n        // textarea.style.maxHeight = `${maxHeight - adjustedViewportMarginBottom}px`;\r\n\r\n\r\n        const container = textarea.parentElement;\r\n        if (container instanceof HTMLElement) {\r\n            const containerHeight = container.style.height;\r\n            container.style.height = getComputedStyle(container).height;\r\n            textarea.style.height = 'auto';\r\n\r\n            let h = textarea.scrollHeight + borderAddOn;\r\n            if (this.minHeight > h) {\r\n                h = this.minHeight;\r\n            }\r\n            textarea.style.height = `${h}px`;\r\n            container.style.height = containerHeight;\r\n        }\r\n\r\n        this.previousValue = textarea.value;\r\n    }\r\n}\r\n","import { Directive, ElementRef, Injector, Input, Renderer2,\r\n    OnInit, AfterViewInit, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n@Directive({\r\n    selector: '[word-count]',\r\n    exportAs: 'WordCountRef'\r\n})\r\nexport class TextareaWordcountDirective implements OnInit, AfterViewInit, OnDestroy, OnChanges {\r\n    @Input('word-count') useWordCount = true;\r\n    /**\r\n     * ç»è®¡å­æ°çæ¹å¼ï¼ surplus å©ä½å¯è¾å¥å­æ°; length: å½åå·²è¾å¥å­æ°ï¼\r\n     *\r\n     * é»è®¤ä¸º surplus\r\n     */\r\n    @Input() countType: 'surplus' | 'length' = 'surplus';\r\n\r\n    @Input() onlyShowInDialog = false;\r\n\r\n    wordCountElement = null;\r\n    // å½åå­æ°\r\n    private currentLengthElement = null;\r\n    private eventManager: EventManager;\r\n    private ngControl: NgControl;\r\n    private onInput = null;\r\n    private localeSer: LocaleService;\r\n    private ro: ResizeObserver = null;\r\n    constructor(private el: ElementRef, private render: Renderer2, private injector: Injector) {\r\n        this.eventManager = this.injector.get(EventManager);\r\n        this.localeSer = this.injector.get(LocaleService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initWordCount();\r\n        if (this.ngControl && this.useWordCount) {\r\n            this.ngControl.control.valueChanges.subscribe((e) => {\r\n                this.updateWordsCount();\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n\r\n        if (changes.useWordCount && !changes.useWordCount.isFirstChange()) {\r\n            if (this.useWordCount) {\r\n                this.initWordCount();\r\n            } else {\r\n                this.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n\r\n        if(this.ro) {\r\n            this.ro.disconnect();\r\n            this.ro.unobserve(this.el.nativeElement.parentElement);\r\n        }\r\n    }\r\n\r\n\r\n    private destroy() {\r\n        if (this.onInput) {\r\n            this.onInput();\r\n        }\r\n\r\n        if (this.wordCountElement) {\r\n            this.wordCountElement.remove();\r\n        }\r\n    }\r\n\r\n    initWordCount() {\r\n        if (this.useWordCount && !this.onlyShowInDialog) {\r\n            this.createWordCountElement();\r\n        }\r\n    }\r\n\r\n    private createWordCountID() {\r\n        const tagName = this.el.nativeElement.tagName;\r\n        if (this.ngControl) {\r\n            const ctrlName = this.ngControl.name;\r\n            return `${tagName}_WORDCOUNT_${ctrlName}`;\r\n        } else {\r\n            if (this.el.nativeElement.id) {\r\n                return `${tagName}_WORDCOUNT_${this.el.nativeElement.id}`;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private createWordCountElement() {\r\n        const max = this.el.nativeElement.maxLength;\r\n        if (!max || max < 0) {\r\n            // console.info('æªè®¾ç½®æå¤§å­ç¬¦æ°ï¼è®¡æ°åè½å¤±æã');\r\n            return;\r\n        }\r\n\r\n        const wordCountSPAN = this.render.createElement('span');\r\n        wordCountSPAN.className = 'textarea-wordcount';\r\n\r\n        const id = this.createWordCountID();\r\n        if (id) {\r\n            wordCountSPAN.id = id;\r\n        }\r\n\r\n        this.render.setStyle(wordCountSPAN, 'position', 'absolute');\r\n        this.render.setStyle(wordCountSPAN, 'bottom', '0px');\r\n\r\n        const { width, right } = this.el.nativeElement.getBoundingClientRect();\r\n        const { width: parentWidth } = this.el.nativeElement.parentElement.getBoundingClientRect();\r\n        if (parentWidth !== width) {\r\n            this.render.setStyle(wordCountSPAN, 'right', `${parentWidth - width + 10}px`);\r\n\r\n            this.ro = new ResizeObserver((entries, observer) => {\r\n                if (entries && entries[0]) {\r\n                    const _pw = entries[0].contentRect.width;\r\n\r\n                    this.render.setStyle(wordCountSPAN, 'right', `${_pw - width + 10}px`);\r\n                }\r\n            });\r\n            this.ro.observe(this.el.nativeElement.parentElement);\r\n\r\n        } else {\r\n            this.render.setStyle(wordCountSPAN, 'right', '10px');\r\n        }\r\n        this.render.setStyle(wordCountSPAN, 'cursor', 'pointer');\r\n\r\n        this.el.nativeElement.after(wordCountSPAN);\r\n        this.wordCountElement = wordCountSPAN;\r\n\r\n        const currentLengthSPAN = this.render.createElement('span');\r\n        wordCountSPAN.appendChild(currentLengthSPAN);\r\n        this.currentLengthElement = currentLengthSPAN;\r\n        currentLengthSPAN.after( ` / ${max}` );\r\n\r\n        this.updateWordsCount();\r\n        this.onInput = this.render.listen(this.el.nativeElement, 'input', () => {\r\n            // value.replace(/\\n|\\r/gi, '') // ç§»é¤æ¢è¡ç¬¦\r\n            this.updateWordsCount();\r\n        });\r\n    }\r\n\r\n    updateWordsCount() {\r\n        if (!this.useWordCount || !this.currentLengthElement) {\r\n            return;\r\n        }\r\n        const max = this.el.nativeElement.maxLength;\r\n        const val = this.countType === 'surplus' ? max - this.el.nativeElement.value.length : this.el.nativeElement.value.length;\r\n        const tip = 'messager.prompt.tips.' + this.countType;\r\n\r\n        this.currentLengthElement.innerText = val;\r\n        this.wordCountElement.title = this.localeSer.getValue(tip).replace('{0}', val);\r\n    }\r\n}\r\n","import { TextareaWordcountDirective } from './textarea-wordcount.directive';\r\nimport { NgControl } from '@angular/forms';\r\nimport { Directive, ElementRef, Renderer2, Injector, OnInit, Input,\r\n            AfterViewInit, OnDestroy, OnChanges, SimpleChanges, Optional } from '@angular/core';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n@Directive({\r\n    selector: '[textarea-zoom]',\r\n})\r\nexport class TextareaZoomDirective implements OnInit, AfterViewInit, OnDestroy, OnChanges {\r\n    @Input('textarea-zoom') useZoom = true;\r\n    @Input() dialogWidth = 500;\r\n    @Input() dialogHeight = 400;\r\n    @Input() fullscreen = false;\r\n    @Input() title = '';\r\n    @Input() value = '';\r\n\r\n    onMouseEnter = null;\r\n    onMouseLeave = null;\r\n    onClick = null;\r\n    altEnterHandler = null;\r\n\r\n    zoomButtonElement = null;\r\n    private messagerService: MessagerService;\r\n    private eventManager: EventManager;\r\n    private ngControl: NgControl;\r\n    private localeSer: LocaleService\r\n    constructor(private el: ElementRef, private render: Renderer2, private injector: Injector,\r\n                @Optional() private wordCountRef: TextareaWordcountDirective ) {\r\n        this.messagerService = this.injector.get(MessagerService);\r\n        this.eventManager = this.injector.get(EventManager);\r\n        this.localeSer = this.injector.get(LocaleService, null);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.useZoom && !changes.useZoom.isFirstChange()) {\r\n            if (this.useZoom) {\r\n                this.createZoomButton();\r\n            } else {\r\n                this.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.useZoom) {\r\n            this.createZoomButton();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    private destroy() {\r\n        if (this.onMouseEnter) {\r\n            this.onMouseEnter();\r\n        }\r\n        if (this.onMouseLeave) {\r\n            this.onMouseLeave();\r\n        }\r\n\r\n        if (this.onClick) {\r\n            this.onClick();\r\n        }\r\n        if (this.altEnterHandler) {\r\n            this.altEnterHandler();\r\n        }\r\n\r\n        if (this.zoomButtonElement) {\r\n            this.zoomButtonElement.remove();\r\n        }\r\n    }\r\n\r\n    private bindEventHandler() {\r\n        this.altEnterHandler = this.eventManager.addEventListener(this.el.nativeElement, 'keydown.alt.enter',\r\n        (event: KeyboardEvent) => {\r\n            const target = (event.target as any);\r\n            const val = target.value + '\\n';\r\n            target.value = val;\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            return false;\r\n        });\r\n    }\r\n\r\n    private createZoombarID() {\r\n        const tagName = this.el.nativeElement.tagName;\r\n        if (this.ngControl) {\r\n            const ctrlName = this.ngControl.name;\r\n            return `${tagName}_ZOOMBAR_${ctrlName}`;\r\n        } else {\r\n            if (this.el.nativeElement.id) {\r\n                return `${tagName}_ZOOMBAR_${this.el.nativeElement.id}`;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private createZoomButton() {\r\n        const zoomSPAN = this.render.createElement('span');\r\n        zoomSPAN.className = 'f-icon modal_maximize textarea-zoom';\r\n        zoomSPAN.title =  this.localeSer.getValue('text.zoom') || 'ç¹å»åå¼¹åºè¿è¡ç¼è¾';\r\n\r\n        \r\n\r\n        const id = this.createZoombarID();\r\n        if (id) {\r\n            zoomSPAN.id = id;\r\n        }\r\n\r\n        this.render.setStyle(zoomSPAN, 'position', 'absolute');\r\n        this.render.setStyle(zoomSPAN, 'top', '2px');\r\n\r\n        const { width } = this.el.nativeElement.getBoundingClientRect();\r\n        const { width: parentWidth } = this.el.nativeElement.parentElement.getBoundingClientRect();\r\n        if (parentWidth !== width) {\r\n            this.render.setStyle(zoomSPAN, 'left', `${width - 18}px`);\r\n        } else {\r\n            this.render.setStyle(zoomSPAN, 'right', '2px');\r\n        }\r\n        this.render.setStyle(zoomSPAN, 'cursor', 'pointer');\r\n\r\n        this.el.nativeElement.after(zoomSPAN);\r\n\r\n        this.zoomButtonElement = zoomSPAN;\r\n\r\n        this.onMouseEnter = this.render.listen(zoomSPAN, 'mouseenter', () => {\r\n            this.render.setStyle(zoomSPAN, 'fontSize', '22px');\r\n        });\r\n        this.onMouseLeave = this.render.listen(zoomSPAN, 'mouseleave', () => {\r\n            this.render.setStyle(zoomSPAN, 'fontSize', '1rem');\r\n        });\r\n\r\n        this.onClick = this.render.listen(zoomSPAN, 'click', () => {\r\n            this.zoomTextarea();\r\n        });\r\n    }\r\n\r\n    private zoomTextarea() {\r\n        const opts: any = {\r\n            width: this.dialogWidth || 500,\r\n            height: this.dialogHeight || 400,\r\n            showFontSize: true,\r\n            inputType: 'textarea',\r\n            saveSize: true    // å¯ç¨ä¸ªæ§åå­å¨ï¼localStorage\r\n        };\r\n\r\n        if (window.localStorage) {\r\n            const key = this.messagerService.getKeyString();\r\n            const val = localStorage.getItem(key);\r\n            if (val) {\r\n                const lastSetting = JSON.parse(val);\r\n                opts.fontSize = lastSetting.fontSize || 18;\r\n                opts.width = lastSetting.width || opts.width;\r\n                opts.height = lastSetting.height || opts.height;\r\n            }\r\n        }\r\n\r\n        const tagName = this.el.nativeElement.tagName;\r\n        let showText = this.el.nativeElement.value;\r\n        if (this.ngControl) {\r\n            showText = this.ngControl.value;\r\n        } else {\r\n            showText = this.el.nativeElement.value;\r\n        }\r\n\r\n        showText = this.value || showText;\r\n\r\n\r\n        if (tagName === 'FARRIS-TEXT' || this.el.nativeElement.readOnly || this.el.nativeElement.disabled) {\r\n            opts.readonly = true;\r\n            opts.showOkButton = false;\r\n            this.messagerService.prompt2(this.title, showText, opts).subscribe();\r\n        } else {\r\n            opts.maxLength = this.el.nativeElement.maxLength;\r\n            opts.enableWordCount = this.wordCountRef ? this.wordCountRef.useWordCount : false;\r\n            opts.countType = this.wordCountRef ? this.wordCountRef.countType : 'length';\r\n            this.messagerService.prompt2(this.title, showText, opts).subscribe(v => {\r\n                if (typeof v === 'boolean' && !v) {\r\n                    return;\r\n                } else {\r\n                    this.ngControl.control.setValue(v);\r\n                    if (this.wordCountRef) {\r\n                        this.wordCountRef.updateWordsCount();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n","import {\r\n    Directive, ElementRef, Renderer2, Injector, OnInit, Input,\r\n    AfterViewInit, OnDestroy, OnChanges, SimpleChanges, Output, ViewContainerRef, TemplateRef, NgZone\r\n} from '@angular/core';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n    selector: '[input-append]',\r\n})\r\nexport class InputAppendDirective implements OnInit, AfterViewInit, OnDestroy {\r\n    private _enableAppend = true;\r\n    // ç¸å½äºå¯ç¨ç¦ç¨æ­¤åè½\r\n    @Input('input-append')\r\n    set enableAppend(value: string | boolean) {\r\n        if (value === '' || value) {\r\n            this._enableAppend = true;\r\n            // éè¦\r\n            if (!this.appendWrapElement) {\r\n                this.createStruct();\r\n            }\r\n        } else {\r\n            this._enableAppend = false;\r\n            if (this.appendWrapElement) {\r\n                this.resetStruct();\r\n            }\r\n        }\r\n    }\r\n    get enableAppend() {\r\n        return this._enableAppend;\r\n    }\r\n    // åºç¨åºæ¯ï¼é»è®¤è¿ä¸ªåè½æ¯å¨ç®åè¡¨æ ¼ Table\r\n    // è¿½å ä¸ä¸ªåºæ¯å¨æ®éè¡¨åä¸ Form\r\n    private _appendScene='Table';\r\n    @Input() \r\n    set inputAppendScene(val:string){\r\n        // æ¯æè¿ä¸¤ä¸ªåºæ¯\r\n        val=val=='Form'?'Form':'Table';\r\n        if(val!=this._appendScene){\r\n            switch (this.inputAppendControlType) {\r\n                case 'StaticText':\r\n                    this.render.removeClass(this.el.nativeElement, 'f-cmp-input-append-'+this._appendScene.toLowerCase());\r\n                    this.render.addClass(this.el.nativeElement, 'f-cmp-input-append-'+val.toLowerCase());\r\n                    break;\r\n                case 'TextBox':\r\n                case 'MultiTextBox':\r\n                    if (this.elWrapElement) {\r\n                        this.elWrapElement.className= this.elWrapElement.className.replace('f-cmp-input-append-'+this._appendScene.toLowerCase(),'f-cmp-input-append-'+val.toLowerCase());\r\n                    }\r\n                    break;\r\n            }\r\n            this._appendScene=val;\r\n            this.modifyPaddingRight();\r\n        }\r\n    }\r\n    get inputAppendScene(){\r\n        return this._appendScene;\r\n    }\r\n    // è¿½å å°åªä¸ªç±»åä¸ TextBoxãMultiTextBoxã StaticText\r\n    @Input() inputAppendControlType = 'InputGroup';\r\n    // æ ¹æ®ç±»åä¸ä¸æ ·ï¼å¨æ§ä»¶å¤äºç¦ç¨ãåªè¯»æ¶ï¼å³å®é¢è²æ¯å¦å¯ç¨\r\n    // æä¸¤ç§ï¼æé® button ææ¬ text\r\n    private _appendType = 'button';\r\n    @Input()\r\n    set inputAppendType(value: string) {\r\n        if (value) {\r\n            if (['button', 'text'].findIndex(item => item == value) < 0) {\r\n                // ç±»åå¨æ¯æèå´å\r\n                value = 'button';\r\n            }\r\n            if (value != this._appendType) {\r\n                if (this.appendWrapElement) {\r\n                    // ç§»é¤åæ¥ï¼è¿½å æ°ç\r\n                    this.render.removeClass(this.appendWrapElement, 'input-append-' + this._appendType);\r\n                    this.render.addClass(this.appendWrapElement, 'input-append-' + value);\r\n                    if (this._appendType == 'button') {\r\n                        // åæ¥æ¯æé®\r\n                        if (this.clickHandler) {\r\n                            this.clickHandler();\r\n                            this.clickHandler = null;\r\n                        }\r\n                    } else {\r\n                        this.clickHandler = this.render.listen(this.appendWrapElement, 'click', (ev) => {\r\n                            this.inputAppendClickEvent.emit(ev);\r\n                        });\r\n                    }\r\n                }\r\n                this._appendType = value;\r\n                this.modifyPaddingRight();\r\n            }\r\n        }\r\n\r\n    }\r\n    get inputAppendType() {\r\n        return this._appendType;\r\n    }\r\n    // è¿½å çææ¬\r\n    private _inputAppendText = '';\r\n    @Input()\r\n    set inputAppendText(value: string) {\r\n        if (value != this._inputAppendText) {\r\n            this._inputAppendText = value;\r\n            if (this.appendWrapElement && this._enableAppend) {\r\n                this.render.removeChild(this.appendWrapElement, this.appendTextElement);\r\n                this.appendTextElement.innerHTML = value;\r\n                this.render.appendChild(this.appendWrapElement, this.appendTextElement);\r\n                this.modifyPaddingRight();\r\n            } else {\r\n                this.createStruct();\r\n            }\r\n        }\r\n    }\r\n    get inputAppendText() {\r\n        return this._inputAppendText;\r\n    }\r\n    // æ¨¡æ¿\r\n    // @Input() inputAppendTmpl: TemplateRef<any>;\r\n    private _disabled = false;\r\n    @Input()\r\n    set inputAppendDisabled(value) {\r\n        if (value != this._disabled) {\r\n            this._disabled = value;\r\n            if (this.appendWrapElement) {\r\n                value && this.render.addClass(this.appendWrapElement, this.disabledCls);\r\n                !value && this.render.removeClass(this.appendWrapElement, this.disabledCls);\r\n            }\r\n            this.modifyPaddingRight();\r\n        }\r\n    }\r\n    get inputAppendDisabled() {\r\n        return this._disabled;\r\n    }\r\n    // å½_appendClsä¸ºç©ºæ¶ï¼\r\n    private _appendCls='input-group-text';\r\n    @Input() \r\n    set inputAppendCls(val:string){\r\n        if(val!=this._appendCls){ \r\n            val=val?val:'input-group-text';\r\n            if(this.appendTextElement){\r\n                this.appendTextElement.className=val;  \r\n            }      \r\n            this._appendCls=val;\r\n        }\r\n    }\r\n    get inputAppendCls(){\r\n        return this._appendCls\r\n    }\r\n    /*\r\n    * ææ¬ç¹å»äºä»¶\r\n    */\r\n    @Output() inputAppendClickEvent = new EventEmitter();\r\n    // æ è®°nativeçå¤å±\r\n    private elWrapElement = null;\r\n    // æ è®°åç´ \r\n    private appendWrapElement = null;\r\n    // ææ¶ä¸ç¨\r\n    private appendTextElement = null;\r\n    private clickHandler = null;\r\n    private disabledCls = 'f-state-disabled';\r\n    private ngZone: NgZone = null;\r\n    // private ngControl: NgControl;\r\n    constructor(private viewRef: ViewContainerRef, private el: ElementRef, private render: Renderer2, private injector: Injector) {\r\n        this.ngZone = this.injector.get(NgZone);\r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n\r\n    ngAfterViewInit() {\r\n        this.createStruct();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        //this.resetStruct();\r\n        if (this.clickHandler) {\r\n            this.clickHandler();\r\n            this.clickHandler = null;\r\n        }\r\n        if (this.appendWrapElement) {\r\n            this.appendWrapElement.remove();\r\n            this.appendWrapElement = null;\r\n        }\r\n        if (this.elWrapElement) {\r\n            this.elWrapElement.remove();\r\n            this.elWrapElement = null;\r\n        }\r\n    }\r\n    /**\r\n     * éç½®\r\n     */\r\n    private resetStruct() {\r\n        if (this.clickHandler) {\r\n            this.clickHandler();\r\n            this.clickHandler = null;\r\n        }\r\n        // åç±»åç§»é¤ä¸åæ°å¢å çç»æææ ·å¼\r\n        switch (this.inputAppendControlType) {\r\n            case 'StaticText':\r\n                this.render.removeClass(this.el.nativeElement, 'f-cmp-static-text-input-append');\r\n                this.render.removeClass(this.el.nativeElement, 'f-cmp-input-append-'+this.inputAppendScene.toLowerCase());\r\n                break;\r\n            case 'TextBox':\r\n            case 'MultiTextBox':\r\n                if (this.elWrapElement) {\r\n                    let wrapParent = this.render.parentNode(this.elWrapElement);\r\n                    this.render.appendChild(wrapParent, this.el.nativeElement);\r\n                    this.elWrapElement.remove();\r\n                    this.elWrapElement = null;\r\n                }\r\n                break;\r\n        }\r\n        if (this.appendWrapElement) {\r\n            this.appendWrapElement.remove();\r\n            this.appendWrapElement = null;\r\n        }\r\n        this.modifyPaddingRight();\r\n    }\r\n    /**\r\n     * åå»ºæå¥ç»æ\r\n     */\r\n    private createStruct() {\r\n        if (!this.inputAppendText || !this.enableAppend || this.appendWrapElement) {\r\n            return;\r\n        }\r\n        const buttonWrap = this.render.createElement('div');\r\n        buttonWrap.className = 'input-group-append input-append-wrapper';\r\n        buttonWrap.className += ' input-append-' + this.inputAppendType;\r\n        if (this._disabled) {\r\n            buttonWrap.className += ' ' + this.disabledCls;\r\n        }\r\n        const buttonTextWrap = this.render.createElement('div');\r\n        buttonTextWrap.className = this.inputAppendCls;\r\n        buttonTextWrap.innerHTML = this.inputAppendText;\r\n        this.appendTextElement = buttonTextWrap;\r\n        this.appendWrapElement = buttonWrap;\r\n        this.render.appendChild(buttonWrap, buttonTextWrap);\r\n        switch (this.inputAppendControlType) {\r\n            case 'StaticText':\r\n                // æ­¤æ¶è¿æ²¡æçæåé¨çæ ·å¼\r\n                // let textareaEl = this.el.nativeElement.querySelector('.f-form-control-textarea');\r\n                let clsNames='f-cmp-static-text-input-append'+(' f-cmp-input-append-'+this.inputAppendScene.toLowerCase()) + (this._disabled ? ' ' + this.disabledCls : '');\r\n                clsNames.split(' ').map((tclsName)=>{\r\n                    this.render.addClass(this.el.nativeElement,tclsName);\r\n                });               \r\n                this.render.appendChild(this.el.nativeElement, buttonWrap);\r\n                break;\r\n            case 'TextBox':\r\n            case 'MultiTextBox':\r\n                let textParent = this.render.parentNode(this.el.nativeElement);\r\n                const inputWrap = this.render.createElement('div');\r\n                inputWrap.className = 'f-cmp-text-input-append f-cmp-input-append-'+this.inputAppendScene.toLowerCase() + (this._disabled ? ' ' + this.disabledCls : '');\r\n                if (this.el.nativeElement.outerHTML.indexOf('textarea') > -1) {\r\n                    inputWrap.className = 'f-cmp-textarea-input-append f-cmp-input-append-'+this.inputAppendScene.toLowerCase() + (this._disabled ? ' ' + this.disabledCls : '');\r\n                }\r\n                this.elWrapElement = inputWrap;\r\n                this.render.appendChild(inputWrap, this.el.nativeElement);\r\n                this.render.appendChild(inputWrap, buttonWrap);\r\n                this.render.appendChild(textParent, inputWrap);\r\n                break;\r\n            default:\r\n                // å­å¨ç±»ä¼¼ä¸æè¿æ ·çæ§ä»¶ï¼åé¨è°ç¨input-groupç»æè¿æ²¡æåå§å\r\n                let inputGroupEl = this.el.nativeElement.querySelector('.input-group');\r\n                if (inputGroupEl) {\r\n                    this.render.appendChild(inputGroupEl, buttonWrap);\r\n                } else {\r\n                    if (this.ngZone) {\r\n                        this.ngZone.runOutsideAngular(() => {\r\n                            setTimeout(() => {\r\n                                let inputGroupEl2 = this.el.nativeElement.querySelector('.input-group');\r\n                                this.render.appendChild(inputGroupEl2, buttonWrap);\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n        if (this.inputAppendType == 'button') {\r\n            this.clickHandler = this.render.listen(this.appendWrapElement, 'click', (ev) => {\r\n                if(!this.inputAppendDisabled){\r\n                    this.inputAppendClickEvent.emit(ev);\r\n                }\r\n            });\r\n        }\r\n        this.modifyPaddingRight();\r\n    }\r\n    /**\r\n     * å ä¸ºå¨æ®éè¾å¥æ¡ãéæææ¬ãå¤è¡ææ¬æ¡å±ç¤ºæ¶ï¼çé¢æ ·å¼é®é¢ã\r\n     * æä»¥éè¦åç¬å¤çï¼éè¿absoluteå®ä½ï¼è®¾ç½®é´è·ï¼ä¿æçé¢ä¸è´\r\n     */\r\n    private modifyPaddingRight(){\r\n        let findType=['StaticText','TextBox','MultiTextBox'].find(typeItem=>typeItem==this.inputAppendControlType);\r\n        if(this.inputAppendScene=='Form'&&findType){\r\n            let changeEl=findType=='StaticText'?this.el.nativeElement.querySelector('span'):this.el.nativeElement;\r\n            if(this.enableAppend&&!this._disabled&&this.appendWrapElement){\r\n                //window.getComputhis.appendWrapElement\r\n                const tRectObj=this.appendWrapElement.getBoundingClientRect();\r\n                this.render.setStyle(changeEl, 'paddingRight',tRectObj.width+'px');                \r\n            }else{\r\n                this.render.removeStyle(changeEl, 'paddingRight');    \r\n            }\r\n        }\r\n        \r\n    }\r\n}\r\n","import { EventManager } from '@angular/platform-browser';\r\nimport { Directive, ElementRef, Injector, OnInit, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: 'shortcut-tab',\r\n})\r\nexport class ShortCutTabKeyDirective implements OnInit, AfterViewInit {\r\n\r\n    constructor(public el: ElementRef, public injector: Injector, private eventManager: EventManager) {}\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.eventManager.addEventListener(this.el.nativeElement, 'keydown',  (e: KeyboardEvent) => {\r\n            e.stopPropagation();\r\n            if (e.key === 'Tab') {\r\n                this.onTabKeydownHandler(e.target);\r\n            }\r\n        });\r\n    }\r\n\r\n    private onTabKeydownHandler(currentTarget) {\r\n        let allInputs = this.el.nativeElement.querySelectorAll('input,textarea');\r\n        allInputs = Array.from(allInputs);\r\n        const currentInputIndex = allInputs.findIndex(n => n === currentTarget);\r\n        let nextInputIndex = currentInputIndex + 1;\r\n        if (nextInputIndex >= allInputs.length) {\r\n            nextInputIndex = 0;\r\n        }\r\n        const nextInputTarget = allInputs[nextInputIndex];\r\n        if (nextInputTarget) {\r\n            setTimeout(() => {\r\n                nextInputTarget.focus();\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport interface ICommentsHttpService {\r\n    getCommonComments(filter: any): Observable<any>;\r\n    showCommentManageDialog(filter: any): Observable<any>;\r\n}\r\nexport const CommentsHttpToken = new InjectionToken<ICommentsHttpService>('Common comments HTTP service');","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener, Injector, Input, OnInit, Output, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'single-list',\r\n    templateUrl: './single-list.component.html'\r\n})\r\n\r\nexport class SingleListComponent implements OnInit {\r\n\r\n    @Input() showButtons = true;\r\n    @Input() buttons = [];\r\n    @Input() data: Array<any> = [];\r\n    @Input() textField: string = '';\r\n    @Input() formatter: (rowObj: any) => string;\r\n    @Input() maxItems = 10;\r\n    @Input() emptyDataMsg = 'ææ æ°æ®';\r\n\r\n    @Output() itemClick = new EventEmitter();\r\n\r\n    @ViewChild('itemsContainer') itemsContainer: ElementRef<any>;\r\n\r\n    activeIndex = -1;\r\n\r\n    constructor(private injector: Injector, private cdr: ChangeDetectorRef) { }\r\n\r\n    @HostListener('mousedown', ['$event'])\r\n    onClick($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n    }\r\n\r\n    ngOnInit() { }\r\n\r\n    loadData(items: any) {\r\n        this.data = items;\r\n\r\n        if (!this.cdr['destroyed']) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n\r\n    formatData(rowObj: any) {\r\n        return this.formatter(rowObj);\r\n    }\r\n\r\n    onItemClick($event, item) {\r\n        this.itemClick.emit({data: item, evnet: $event});\r\n    }\r\n\r\n    setActiveItem(index: number) {\r\n        this.activeIndex = index;\r\n        if (!this.cdr['destroyed']) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n}","import { AfterViewInit, ComponentFactoryResolver, ComponentRef, Directive, ElementRef, Injector, Input, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from \"@angular/core\";\r\nimport { NgControl } from \"@angular/forms\";\r\nimport { EventManager } from \"@angular/platform-browser\";\r\nimport { CommonUtils, OverLayHiddenService } from \"@farris/ui-common\";\r\nimport { LocaleService } from \"@farris/ui-locale\";\r\nimport { CommentsHttpToken, ICommentsHttpService } from \"./comments/get-data.interface\";\r\nimport { SingleListComponent } from \"./comments/single-list.component\";\r\n\r\n\r\n@Directive({\r\n    selector: '[common-comments]',\r\n})\r\nexport class TextareaCommentsDirective implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n\r\n    @Input('common-comments') useComments = true;\r\n    @Input() maxHeight = 300;\r\n    @Input() title = '';\r\n    @Input() mgrText = '';\r\n\r\n    private commentSer: ICommentsHttpService;\r\n    private eventManager: EventManager;\r\n    private ngControl: NgControl;\r\n    commentsBtnElement = null;\r\n    singListRef: ComponentRef<SingleListComponent> = null;\r\n    listPanelElRef = null;\r\n    private overlaySer: OverLayHiddenService;\r\n\r\n    private observer: MutationObserver;\r\n    private commonUtil: CommonUtils;\r\n    constructor(private injector: Injector, private el: ElementRef, private render: Renderer2, \r\n        private localeSer: LocaleService, private cfr: ComponentFactoryResolver) {\r\n        this.commentSer = this.injector.get(CommentsHttpToken, null);\r\n        this.overlaySer = this.injector.get(OverLayHiddenService, null);\r\n        this.commonUtil = this.injector.get(CommonUtils, null);\r\n        if (!this.overlaySer) {\r\n            this.overlaySer = new OverLayHiddenService();\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.init();\r\n        this.listenAttributesChanged();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.useComments && !changes.useComments.isFirstChange()) {\r\n            this.init();\r\n        }\r\n    }\r\n\r\n    private init() {\r\n        const readonly = this.el.nativeElement.readOnly;\r\n        const disabled = this.el.nativeElement.disabled;\r\n        if (this.useComments && (!readonly && !disabled)) {\r\n            this.createCommentsButton();\r\n        } else {\r\n            this.destroy();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n        this.hideListPanel();\r\n        // åæ­¢è§å¯å±æ§åå\r\n        this.observer.disconnect();\r\n        this.observer = null;\r\n    }\r\n\r\n    listenAttributesChanged() {\r\n        // éæ©éè¦è§å¯åå¨çèç¹\r\n        const targetNode = this.el.nativeElement;\r\n\r\n        // è§å¯å¨çéç½®ï¼éè¦è§å¯ä»ä¹åå¨ï¼\r\n        const config = { attributes: true };\r\n\r\n        // å½è§å¯å°åå¨æ¶æ§è¡çåè°å½æ°\r\n        const callback = (mutationsList, observer) => {\r\n            // Use traditional 'for loops' for IE 11\r\n            for(let mutation of mutationsList) {\r\n                if (mutation.type === 'attributes' && (mutation.attributeName === 'readonly' || mutation.attributeName === 'disabled')) {\r\n                    this.init();\r\n                }\r\n            }\r\n        };\r\n\r\n        // åå»ºä¸ä¸ªè§å¯å¨å®ä¾å¹¶ä¼ å¥åè°å½æ°\r\n        this.observer = new MutationObserver(callback);\r\n\r\n        // ä»¥ä¸è¿°éç½®å¼å§è§å¯ç®æ èç¹\r\n        this.observer.observe(targetNode, config);\r\n    }\r\n\r\n\r\n    destroy() {\r\n        if (this.commentsBtnElement) {\r\n            this.commentsBtnElement.remove();\r\n        }\r\n    }\r\n\r\n    private createID() {\r\n        const tagName = this.el.nativeElement.tagName;\r\n        if (this.ngControl) {\r\n            const ctrlName = this.ngControl.name;\r\n            return `${tagName}_COMMENTS_${ctrlName}`;\r\n        } else {\r\n            if (this.el.nativeElement.id) {\r\n                return `${tagName}_COMMENTS_${this.el.nativeElement.id}`;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private createCommentsButton() {\r\n        const commentsBtn = this.render.createElement('span');\r\n        commentsBtn.className = 'dropdown-toggle';\r\n        commentsBtn.title = this.title ? this.title : (this.localeSer.getValue('text.comments.title') || 'å¸¸ç¨æè§');\r\n        const id = this.createID();\r\n        if (id) {\r\n            commentsBtn.id = id;\r\n        }\r\n\r\n        this.render.setStyle(commentsBtn, 'position', 'absolute');\r\n        this.render.setStyle(commentsBtn, 'left', '3px');\r\n        this.render.setStyle(commentsBtn, 'bottom', '0px');\r\n        this.render.setStyle(commentsBtn, 'cursor', 'pointer');\r\n\r\n        const icon = this.render.createElement('span');\r\n        this.render.appendChild(commentsBtn, icon);\r\n\r\n        icon.className = 'f-icon f-icon-message';\r\n        this.render.setStyle(icon, 'position', 'relative');\r\n        // this.render.setStyle(icon, 'margin-right', '3px');\r\n        this.render.setStyle(icon, 'top', '1px');\r\n        this.render.setStyle(icon, 'font-size', '13px');\r\n\r\n        this.el.nativeElement.after(commentsBtn);\r\n        this.commentsBtnElement = commentsBtn;\r\n\r\n        this.render.listen(commentsBtn, 'click', (e: MouseEvent) => {\r\n            e.stopPropagation();\r\n            if (!this.listPanelElRef) {\r\n                this.showListPanel();\r\n            } else {\r\n                this.hideListPanel();\r\n            }\r\n        })\r\n    }\r\n\r\n    private showListPanel() {\r\n        const listPanelEl = this.render.createElement('div');\r\n\r\n\r\n        const zindex = this.commonUtil.getFloatingLayerIndex();\r\n\r\n        const { left, bottom } = this.commentsBtnElement.getBoundingClientRect();\r\n        this.render.setStyle(listPanelEl, 'width', '200px');\r\n        this.render.setStyle(listPanelEl, 'max-height', `${this.maxHeight}px`);\r\n        this.render.setStyle(listPanelEl, 'position', 'absolute');\r\n        this.render.setStyle(listPanelEl, 'left', `${left}px`);\r\n        this.render.setStyle(listPanelEl, 'top', '0px');\r\n        this.render.setStyle(listPanelEl, 'z-index', zindex);\r\n        this.render.setStyle(listPanelEl, 'box-shadow', '0 2px 8px 0 #dedede');\r\n        this.render.setStyle(listPanelEl, 'border-radius', '6px');\r\n        this.render.setStyle(listPanelEl, 'background', 'white');\r\n        this.render.setStyle(listPanelEl, 'visibility', 'hidden');\r\n        document.body.append(listPanelEl);\r\n\r\n        this.listPanelElRef = listPanelEl;\r\n\r\n        const singListCmf = this.cfr.resolveComponentFactory(SingleListComponent);\r\n        this.singListRef = singListCmf.create(this.injector);\r\n\r\n        this.singListRef.instance.showButtons = true;\r\n        this.singListRef.instance.emptyDataMsg = this.localeSer.getValue('text.comments.empty');\r\n        this.singListRef.instance.buttons = [\r\n            { \r\n                text: this.mgrText ? this.mgrText : this.localeSer.getValue('text.comments.manager'), \r\n                iconCls: 'f-icon f-icon-home-setup', handler: () => {\r\n                    if (this.commentSer) {\r\n                        this.hideListPanel();\r\n                        this.commentSer.showCommentManageDialog({type: 'forms'}).subscribe((e) => {\r\n                            console.log(e);\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        ];\r\n        this.singListRef.instance.textField = 'message';\r\n        this.singListRef.instance.maxItems = 999999;\r\n\r\n        this.singListRef.instance.itemClick.subscribe((e) => {\r\n            const val = e.data['message'];\r\n            let _text = this.el.nativeElement.value || '';\r\n            _text += val;\r\n            if (this.ngControl) {\r\n                this.ngControl.control.patchValue(_text);\r\n            } else {\r\n                this.el.nativeElement.value = _text;\r\n            }\r\n\r\n            this.hideListPanel();\r\n        })\r\n\r\n        listPanelEl.appendChild(this.singListRef.location.nativeElement);\r\n        this.singListRef.changeDetectorRef.detectChanges();\r\n\r\n        this.loadData(this.singListRef);\r\n\r\n\r\n        this.overlaySer.registerMouseEvent(listPanelEl, (e) => {\r\n            if (this.listPanelElRef.contains(e.target) || this.commentsBtnElement === e.target || this.commentsBtnElement.contains(e.target)) {\r\n                return;\r\n            }\r\n            this.hideListPanel();\r\n        });\r\n    }\r\n\r\n    hideListPanel() {\r\n        if (this.singListRef) {\r\n            this.singListRef.destroy();\r\n            this.singListRef = null;\r\n        }\r\n\r\n        if (this.listPanelElRef) {\r\n            this.listPanelElRef.remove();\r\n            this.overlaySer.destory(this.listPanelElRef);\r\n            this.listPanelElRef = null;\r\n        }\r\n    }\r\n\r\n    private loadData(singListRef: ComponentRef<SingleListComponent>) {\r\n        if (this.commentSer) {\r\n            this.commentSer.getCommonComments({type: 'forms'}).subscribe((data) => {\r\n                singListRef.instance.loadData(data);\r\n                setTimeout(() => {\r\n                    this.resetPosition();\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private resetPosition() {\r\n        const { top, bottom, left } = this.commentsBtnElement.getBoundingClientRect();\r\n        const panelHeight = this.listPanelElRef.offsetHeight;\r\n        if (window.innerHeight - bottom  > this.maxHeight || window.innerHeight - bottom > panelHeight) {\r\n            this.render.setStyle(this.listPanelElRef, 'top', `${bottom}px`);\r\n            this.render.removeStyle(this.listPanelElRef, 'visibility');\r\n            return;\r\n        } else {\r\n            if (top > this.maxHeight || top > panelHeight) {\r\n                this.render.setStyle(this.listPanelElRef, 'top', `${top - panelHeight}px`);\r\n            } else {\r\n                this.render.setStyle(this.listPanelElRef, 'top', '0px');\r\n                if (left > 200) {\r\n                    this.render.setStyle(this.listPanelElRef, 'left', `${ left - 200 }px` );\r\n                }\r\n            }\r\n            this.render.removeStyle(this.listPanelElRef, 'visibility');\r\n        }\r\n    }\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, Injector, Input, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { OverLayHiddenService } from '@farris/ui-common';\r\nimport { Observable, of } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Directive({ \r\n    selector: '[single-select]',\r\n    exportAs: 'singleSelect'\r\n})\r\nexport class SingleSelectDirective implements OnInit, AfterViewInit, OnDestroy {\r\n    @Input() items: Array<{ label: string, value: string }> = [];\r\n    @Input() panelRef: HTMLElement;\r\n    @Input() width: number;\r\n    @Input() position: 'above'|'below' = 'below';\r\n    @Input() container = null;\r\n    private ngCtrl: NgControl;\r\n    private overlaySer: OverLayHiddenService;\r\n    selectEl = null;\r\n    private overlayHandler = null;\r\n    private displayTextEl = null;\r\n    private ngZone: NgZone = null;\r\n\r\n    beforeShow: (e?: any) => Observable<boolean> = null;\r\n\r\n    constructor(private injector: Injector, private elRef: ElementRef, private render: Renderer2) {\r\n        this.overlaySer = this.injector.get(OverLayHiddenService, new OverLayHiddenService());\r\n        this.ngZone = this.injector.get(NgZone, null);\r\n        if (this.overlaySer) {\r\n\r\n            if (this.ngZone) {\r\n                this.ngZone.runOutsideAngular(() => {\r\n                    this.registerMouseEvent();\r\n                });\r\n            } else {\r\n                this.registerMouseEvent();\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerMouseEvent() {\r\n        this.overlayHandler = this.overlaySer.registerMouseEvent(this.elRef.nativeElement, (e) => {\r\n            if (!this.panelRef.classList.contains('f-area-show')) {\r\n                return;\r\n            }\r\n\r\n            if (this.panelRef.contains(e.target)) {\r\n                return;\r\n            }\r\n\r\n            if (this.selectEl.contains(e.target)) {\r\n                return;\r\n            }\r\n\r\n            this.panelRef.classList.remove('f-area-show');\r\n        }); \r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.ngCtrl = this.injector.get(NgControl);\r\n\r\n        if (this.ngCtrl) {\r\n            this.ngCtrl.valueChanges.subscribe((v: any) => {\r\n                this.updateDisplayText();\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    ngAfterViewInit(): void {\r\n        const { container  } = this.createMySelect();\r\n        this.selectEl = container;\r\n        this.elRef.nativeElement.style.display = 'none';\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.overlayHandler) {\r\n            this.overlayHandler();\r\n        }\r\n    }\r\n\r\n    private createMySelect() {\r\n        const selectContainerEl = document.createElement('div');\r\n        selectContainerEl.className = 'input-group f-cmp-inputgroup';\r\n        if (this.width) {\r\n            selectContainerEl.style.width = `${this.width}px`;\r\n        }\r\n\r\n        selectContainerEl.style.userSelect = 'none';\r\n        selectContainerEl.style.overflow = 'hidden';\r\n\r\n        const selectTextEl = document.createElement('div');\r\n        selectTextEl.className = 'form-control f-utils-fill text-left px-1 d-flex';\r\n        selectTextEl.style.alignItems = 'center';\r\n        selectTextEl.style.whiteSpace = 'nowrap';\r\n        this.displayTextEl = selectTextEl;\r\n\r\n        const selectArrowEl = document.createElement('div');\r\n        selectArrowEl.className = 'input-group-append';\r\n        selectArrowEl.innerHTML = `<span class=\"input-group-text\"><i class=\"f-icon f-icon-arrow-s\"></i></span>`;\r\n\r\n        selectContainerEl.appendChild(selectTextEl);\r\n        selectContainerEl.appendChild(selectArrowEl);\r\n\r\n\r\n        this.elRef.nativeElement.after(selectContainerEl);\r\n\r\n\r\n\r\n        this.render.listen(selectContainerEl, 'click', (e) => {\r\n            if (this.panelRef.classList.contains('f-area-show')) {\r\n                this.panelRef.classList.remove('f-area-show');\r\n                return;\r\n            }\r\n\r\n            if (!this.beforeShow) {\r\n                this.beforeShow = () => {\r\n                    return of(true);\r\n                }\r\n            }\r\n\r\n            this.updatePosition();\r\n            this.beforeShow({instance: this}).pipe(\r\n                debounceTime(10)\r\n            ).subscribe(r => {\r\n                if (r) {\r\n                    this.panelRef.classList.add('f-area-show');\r\n                }\r\n            });\r\n        });\r\n\r\n        this.render.listen(this.panelRef, 'click', (e) => {\r\n            if (e.target.nodeName === 'LI') {\r\n                const val = e.target.getAttribute('value');\r\n                this.ngCtrl.control.setValue(val);\r\n                this.panelRef.classList.remove('f-area-show');\r\n                selectTextEl.innerHTML = e.target.innerHTML;\r\n            }\r\n        });\r\n\r\n        this.panelRef.style.cssText = `\r\n        position:fixed;z-index: 100;\r\n        box-shadow: 0 2px 8px 0 rgba(0,0,0,.15);\r\n        border-radius: 3px;max-height:300px;overflow:auto;\r\n        transition: all 0.08s linear;`;\r\n\r\n        this.panelRef.querySelector('ul').style.cssText = `position:relative;min-width: 100%;border:none; box-shadow: none;`;\r\n        \r\n        this.updateDisplayText();\r\n\r\n        return { container: selectContainerEl };\r\n    }\r\n\r\n    private updateDisplayText() {\r\n        setTimeout(() => {\r\n\r\n            const li = this.panelRef.querySelector(`[value=\"${this.ngCtrl.value}\"]`);\r\n            this.displayTextEl.innerHTML = li ? li.innerHTML : '';\r\n\r\n            if (this.items && !this.items.length) {\r\n                const item = this.items.find(n => n.value == this.ngCtrl.value);\r\n                if (item) {\r\n                    this.displayTextEl.innerHTML = item.label;\r\n                }\r\n            }\r\n\r\n            this.displayTextEl.title = this.displayTextEl.innerText;\r\n        });\r\n    }\r\n\r\n    private updatePosition() {\r\n        const ul: any = this.panelRef.querySelector('ul');\r\n        if (this.position === 'above') {\r\n            ul.style.position = 'relative';\r\n            const t = this.selectEl.offsetTop - ul.offsetHeight - 6;\r\n            const top = `${t}px`;\r\n            this.panelRef.style.top = top;\r\n            this.panelRef.style.transformOrigin = 'bottom';\r\n        } else {\r\n            this.panelRef.style.top = 'auto';\r\n            if (this.container) {\r\n                this.panelRef.style.top = (this.panelRef.offsetTop - this.container.scrollTop) + 'px';\r\n            }\r\n        }\r\n\r\n        // if ( this.selectEl.offsetLeft) {\r\n        //     this.panelRef.style.left = this.selectEl.offsetLeft + 'px';\r\n        // }\r\n\r\n        if (!this.width) {\r\n            this.panelRef.style.width = this.selectEl.offsetWidth + 'px';\r\n            ul.style.width = '100%';\r\n        } else {\r\n            this.panelRef.style.width = this.width + 'px';\r\n        }\r\n       \r\n    }\r\n   \r\n}","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IdService, FarrisCommonModule } from '@farris/ui-common';\r\n\r\nimport { RadioComponent } from './radio/radio.component';\r\nimport { RadioButtonComponent } from './radio/radio-button.component';\r\nimport { RadioGroupComponent } from './radio/radio-group.component';\r\nimport { FarrisRadioGroupComponent } from './radio/radiogroup.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { CheckboxGroupComponent } from './checkbox/checkbox-group.component';\r\nimport { FarrisCheckboxGroupComponent } from './checkbox/checkboxgroup.component';\r\nimport { TextareaAutoSizeDirective } from './textarea-autosize.directive';\r\nimport { TextareaZoomDirective } from './textarea-zoom.directive';\r\nimport {InputAppendDirective} from './input-append.directive';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { ShortCutTabKeyDirective } from './shortcut-tab.directive';\r\nimport { TextareaWordcountDirective } from './textarea-wordcount.directive';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { TextareaCommentsDirective } from './textarea-comments.directive';\r\nimport { SingleListComponent } from './comments/single-list.component';\r\nimport { SingleSelectDirective } from './single-select.directive';\r\n@NgModule({\r\n    declarations: [\r\n        RadioComponent,\r\n        RadioGroupComponent,\r\n        CheckboxComponent,\r\n        CheckboxGroupComponent,\r\n        RadioButtonComponent,\r\n        FarrisRadioGroupComponent,\r\n        FarrisCheckboxGroupComponent,\r\n        TextareaAutoSizeDirective,\r\n        TextareaZoomDirective,\r\n        ShortCutTabKeyDirective,\r\n        TextareaWordcountDirective,\r\n        InputAppendDirective,\r\n        TextareaCommentsDirective,\r\n        SingleListComponent,\r\n        SingleSelectDirective\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MessagerModule.forRoot(),\r\n        FarrisCommonModule.forRoot(),\r\n        LocaleModule,\r\n    ],\r\n    exports: [\r\n        RadioComponent,\r\n        RadioGroupComponent,\r\n        CheckboxComponent,\r\n        CheckboxGroupComponent,\r\n        RadioButtonComponent,\r\n        FarrisRadioGroupComponent,\r\n        FarrisCheckboxGroupComponent,\r\n        TextareaAutoSizeDirective,\r\n        TextareaZoomDirective,\r\n        ShortCutTabKeyDirective,\r\n        TextareaWordcountDirective,\r\n        InputAppendDirective,\r\n        TextareaCommentsDirective,\r\n        SingleSelectDirective\r\n    ],\r\n    entryComponents: [\r\n        SingleListComponent\r\n    ],\r\n    providers: [IdService],\r\n})\r\nexport class FarrisFormsModule { }\r\n"]}