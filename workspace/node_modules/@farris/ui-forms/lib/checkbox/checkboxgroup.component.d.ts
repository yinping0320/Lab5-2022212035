import { OnDestroy, SimpleChanges, OnChanges, Injector } from '@angular/core';
import { OnInit, EventEmitter } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { IdService } from '@farris/ui-common';
import { Observable, Subscription } from 'rxjs';
export declare class FarrisCheckboxGroupComponent implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {
    private idSer;
    private inject;
    tabIndex: number;
    data: any[];
    type: string;
    name: string;
    horizontal: boolean;
    separator: string;
    disable: boolean;
    value: any;
    isStringValue: boolean;
    textField: string;
    valueField: string;
    /** 加载数据事件 */
    loadData: (emptyData?: any[]) => Observable<any>;
    loadDataSubscription: Subscription;
    changeValue: EventEmitter<any>;
    setCheckboxData: EventEmitter<any>;
    private commonUtils;
    constructor(idSer: IdService, inject: Injector);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    _getText(item: any): any;
    _getValue(item: any): any;
    clickHandler(item: any, index: number): void;
    checked(item: any): boolean;
    transformToArr(value: any): string[];
    transformToStr(value: Array<string>): string | any[];
    writeValue(value: any): void;
    registerOnChange(fn: () => void): void;
    registerOnTouched(fn: () => void): void;
    private controlChange;
    private controlTouch;
}
