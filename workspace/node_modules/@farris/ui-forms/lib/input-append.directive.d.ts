import { ElementRef, Renderer2, Injector, OnInit, AfterViewInit, OnDestroy, ViewContainerRef } from '@angular/core';
import { EventEmitter } from '@angular/core';
export declare class InputAppendDirective implements OnInit, AfterViewInit, OnDestroy {
    private viewRef;
    private el;
    private render;
    private injector;
    private _enableAppend;
    enableAppend: string | boolean;
    private _appendScene;
    inputAppendScene: string;
    inputAppendControlType: string;
    private _appendType;
    inputAppendType: string;
    private _inputAppendText;
    inputAppendText: string;
    private _disabled;
    inputAppendDisabled: any;
    private _appendCls;
    inputAppendCls: string;
    inputAppendClickEvent: EventEmitter<{}>;
    private elWrapElement;
    private appendWrapElement;
    private appendTextElement;
    private clickHandler;
    private disabledCls;
    private ngZone;
    constructor(viewRef: ViewContainerRef, el: ElementRef, render: Renderer2, injector: Injector);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /**
     * 重置
     */
    private resetStruct;
    /**
     * 创建插入结构
     */
    private createStruct;
    /**
     * 因为在普通输入框、静态文本、多行文本框展示时，界面样式问题。
     * 所以需要单独处理，通过absolute定位，设置间距，保持界面一致
     */
    private modifyPaddingRight;
}
