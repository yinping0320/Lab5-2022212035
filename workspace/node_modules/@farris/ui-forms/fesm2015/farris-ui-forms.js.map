{"version":3,"file":"farris-ui-forms.js.map","sources":["ng://@farris/ui-forms/lib/radio/radio-group.component.ts","ng://@farris/ui-forms/lib/radio/radio.component.ts","ng://@farris/ui-forms/lib/radio/radio-button.component.ts","ng://@farris/ui-forms/lib/radio/radiogroup.component.ts","ng://@farris/ui-forms/lib/checkbox/checkbox-group.component.ts","ng://@farris/ui-forms/lib/checkbox/checkbox.component.ts","ng://@farris/ui-forms/lib/checkbox/checkboxgroup.component.ts","ng://@farris/ui-forms/lib/textarea-autosize.directive.ts","ng://@farris/ui-forms/lib/textarea-wordcount.directive.ts","ng://@farris/ui-forms/lib/textarea-zoom.directive.ts","ng://@farris/ui-forms/lib/input-append.directive.ts","ng://@farris/ui-forms/lib/shortcut-tab.directive.ts","ng://@farris/ui-forms/lib/comments/get-data.interface.ts","ng://@farris/ui-forms/lib/comments/single-list.component.ts","ng://@farris/ui-forms/lib/textarea-comments.directive.ts","ng://@farris/ui-forms/lib/single-select.directive.ts","ng://@farris/ui-forms/lib/forms.module.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, forwardRef, HostBinding } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { IdService } from '@farris/ui-common';\r\n@Component({\r\n    selector: 'farris-radio-group',\r\n    template: `\r\n    <div class=\"farris-radio-group btn-group\"\r\n    [class.farris-input-wrap]=\"type!=='button'\"\r\n    [class.btn-group-toggle]=\"type==='button'\"\r\n    [class.farris-checkradio-hor]=\"horizontal\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => RadioGroupComponent),\r\n        multi: true,\r\n    }],\r\n    styles: [`\r\n    `],\r\n})\r\nexport class RadioGroupComponent implements OnInit, ControlValueAccessor {\r\n    /* radio ç±»å */\r\n    @Input() type: string;\r\n\r\n    /* åå§å radio çå¼ */\r\n    @Input() model: any;\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() horizontal: boolean;\r\n\r\n    @Output() modelChange = new EventEmitter<any>();\r\n\r\n    // tslint:disable-next-line:ban-types\r\n    subscriber: Function[] = [];\r\n\r\n    constructor(private idSer: IdService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.name = this.idSer.generate().replace(/-/g, '_');\r\n    }\r\n\r\n    changeModel(value: any) {\r\n        this.model = value;\r\n        this.modelChange.emit(this.model);\r\n        this.controlChange(value);\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        this.model = value;\r\n        this.changeModel(this.model);\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.controlChange = fn\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.controlTouch = fn\r\n    }\r\n\r\n    private controlChange: Function = () => { }\r\n    private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, forwardRef, Optional, ElementRef, HostBinding, ChangeDetectorRef, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { RadioGroupComponent } from './radio-group.component';\r\n\r\n@Component({\r\n  selector: 'farris-radio',\r\n  templateUrl: './radio.component.html',\r\n  styleUrls: ['./radio.component.css'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => RadioComponent),\r\n    multi: true,\r\n  }]\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RadioComponent implements ControlValueAccessor, OnInit {\r\n\r\n  /* radio åçname ç¨äºå¤ä¸ªradioåéä½¿ç¨ */\r\n  // get name() {\r\n  //   if (this.hasParent(this.el.nativeElement)) {\r\n  //     return this.radioGroup.name;\r\n  //   }\r\n  // }\r\n \r\n  /* radio å¼ */\r\n  @Input()\r\n  get model(): any {\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.radioGroup.model;\r\n    }\r\n    return this.nyModel;\r\n  }\r\n\r\n  set model(model: any) {\r\n    this.nyModel = model;\r\n  }\r\n\r\n\r\n  @Input() id: string;\r\n\r\n  /* radio å¼ */\r\n  @Input() label: any = '';\r\n\r\n  /* ç¦ç¨ */\r\n  @Input() disabled: boolean;\r\n\r\n  nyModel: any;\r\n\r\n  name = '';\r\n\r\n  @Output() modelChange = new EventEmitter<any>();\r\n\r\n  @HostBinding('class.d-block') blockClass = true;\r\n\r\n  constructor(\r\n    @Optional() private radioGroup: RadioGroupComponent,\r\n    private el: ElementRef\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.name = this.radioGroup.name;\r\n  }\r\n\r\n  changeModelHandler() {\r\n    // ç¶åç´ è·ålabel  å­åç´ åä»ç¶åç´ è·åmodel\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.radioGroup.changeModel(this.label);\r\n    }\r\n    this.model = this.label;\r\n    this.modelChange.emit(this.model);\r\n    this.controlChange(this.label);\r\n  }\r\n\r\n  /* æ¯å¦å­å¨ç¶åç´   å­å¨å³åéç»*/\r\n  hasParent(element: any) {\r\n    return element.parentElement.classList.contains('farris-radio-group');\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.model = value;\r\n  }\r\n\r\n  registerOnChange(fn: Function): void {\r\n    this.controlChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: Function): void {\r\n    this.controlTouch = fn;\r\n  }\r\n\r\n  private controlChange: Function = () => { };\r\n  private controlTouch: Function = () => { };\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, forwardRef, Optional, ElementRef, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { RadioGroupComponent } from './radio-group.component';\r\nimport { HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'farris-radio-button',\r\n    template: `\r\n    <label [class]=\"'btn btn-'+type\" [class.active]=\"isGroupModel()\" [class.disabled]=\"disabled\">\r\n        <input class=\"custom-control-input\" [name]=\"name\" [value]=\"label\"\r\n        [ngModel]=\"model\" (ngModelChange)=\"changeModelHandler()\" type=\"radio\" [disabled]=\"disabled\">\r\n          <ng-content>\r\n          </ng-content>\r\n    </label>\r\n  `,\r\n    styles: [\r\n        `\r\n        .farris-radio-button>.btn{\r\n            margin-left:-1px\r\n          }\r\n          .farris-radio-button>.btn.active, .farris-radio-button>.btn:hover{\r\n            position: relative;\r\n          }\r\n      `\r\n    ],\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => RadioButtonComponent),\r\n        multi: true,\r\n    }],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class RadioButtonComponent implements ControlValueAccessor, OnInit {\r\n\r\n    /* radio åçname ç¨äºå¤ä¸ªradioåéä½¿ç¨ */\r\n    // get name() {\r\n\r\n    // }\r\n    name = '';\r\n\r\n    /* æé®ç±»å */\r\n    @Input()\r\n    type = 'secondary';\r\n\r\n    /* radio å¼ */\r\n    @Input()\r\n    get model(): any {\r\n        if (this.hasParent(this.el.nativeElement)) {\r\n            return this.radioGroup.model;\r\n        }\r\n        return this.nyModel;\r\n    }\r\n\r\n    set model(model: any) {\r\n        this.nyModel = model;\r\n    }\r\n\r\n\r\n    @Input()\r\n    id: string;\r\n\r\n    /* radio å¼ */\r\n    @Input()\r\n    label: any = '';\r\n\r\n    /* ç¦ç¨ */\r\n    @Input()\r\n    disabled: boolean;\r\n\r\n    nyModel: any;\r\n\r\n    @Output()\r\n    modelChange = new EventEmitter<any>();\r\n\r\n\r\n    @HostBinding('class.farris-radio-button')\r\n    get farrisRadioButtonClass() { return true; }\r\n\r\n    constructor(\r\n        @Optional() public radioGroup: RadioGroupComponent,\r\n        private el: ElementRef\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.name = this.hasParent(this.el.nativeElement) ? this.radioGroup.name : '';\r\n    }\r\n\r\n    isGroupModel() {\r\n        return this.label === this.radioGroup.model;\r\n    }\r\n\r\n    changeModelHandler() {\r\n        // ç¶åç´ è·ålabel  å­åç´ åä»ç¶åç´ è·åmodel\r\n        if (this.hasParent(this.el.nativeElement)) {\r\n            return this.radioGroup.changeModel(this.label);\r\n        }\r\n        this.model = this.label;\r\n        this.modelChange.emit(this.model);\r\n        this.controlChange(this.label);\r\n    }\r\n\r\n    /* æ¯å¦å­å¨ç¶åç´   å­å¨å³åéç»*/\r\n    hasParent(element: any) {\r\n        return element.parentElement.classList.contains('farris-input-wrap') || element.parentElement.classList.contains('btn-group');\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        this.model = value;\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.controlChange = fn\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.controlTouch = fn\r\n    }\r\n\r\n    private controlChange: Function = () => { }\r\n    private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { Component, Input, forwardRef, OnInit, EventEmitter, Optional, Injector } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, RadioControlValueAccessor } from '@angular/forms';\r\nimport { IdService, CommonUtils } from '@farris/ui-common';\r\nimport { Radio } from './radio';\r\nimport { Output } from '@angular/core';\r\n@Component({\r\n    selector: 'farris-radiogroup',\r\n    templateUrl: './radiogroup.component.html',\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => FarrisRadioGroupComponent),\r\n        multi: true,\r\n    }],\r\n    exportAs: 'FarrisRadioGroupComponent'\r\n})\r\nexport class FarrisRadioGroupComponent implements ControlValueAccessor, OnInit {\r\n    @Input('tab-index') tabIndex: number;\r\n    /* radio æ°ç» */\r\n    @Input() data: Radio[] = [];\r\n\r\n    /* radio ç±»å   åçæèæé®ç±»å*/\r\n    @Input() type: string;\r\n\r\n    /* nameæ è¯ */\r\n    @Input() name: string;\r\n\r\n    /* æ°´å¹³æå */\r\n    @Input() horizontal: boolean;\r\n\r\n    /* ç¦ç¨ */\r\n    @Input() disabled: boolean;\r\n\r\n    /* radio å¼ */\r\n    @Input() value: any;\r\n    @Input() textField = 'name';\r\n    @Input() valueField = 'value';\r\n\r\n    /** æ°æ®ä¸­æ è¯ç¦ç¨çå­æ®µåç§°ï¼é»è®¤ä¸º disabled */\r\n    @Input() disabledField = 'disabled';\r\n    /** åè¡¨ä¸­æ¯å¦æ¾ç¤ºå·²ç¦ç¨çé¡¹ï¼é»è®¤ true */\r\n    @Input() showDisabledItem = true;\r\n\r\n    /* ç¹å»äºä»¶ */\r\n    @Output() changeValue = new EventEmitter<any>();\r\n    private commonUtils: CommonUtils;\r\n    constructor(private idSer: IdService, @Optional() private inject: Injector) {\r\n        if (this.inject) {\r\n            this.commonUtils = this.inject.get(CommonUtils);\r\n        }\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.name = this.idSer.generate().replace(/-/g, '_');\r\n    }\r\n\r\n    clickHandler(item: any) {\r\n        let val = this._getValue(item);\r\n        if(this.value == val) return;\r\n        // æ´æ¹controlçå¼\r\n        this.value = val;\r\n        this.controlChange(this.value);\r\n        this.controlTouch(this.value);\r\n        this.changeValue.emit(this.value);\r\n    }\r\n\r\n    _getText(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.textField, item);\r\n            } else {\r\n                return item[this.textField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    _getValue(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.valueField, item);\r\n            } else {\r\n                return item[this.valueField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n\r\n    writeValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: () => void): void {\r\n        this.controlChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.controlTouch = fn;\r\n    }\r\n\r\n    private controlChange: (value: any) => void = () => { };\r\n    private controlTouch: (value: any) => void = () => { };\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { IdService } from '@farris/ui-common';\r\n@Component({\r\n    selector: 'farris-checkbox-group',\r\n    template: `\r\n    <div class=\"farris-input-wrap\" [class.farris-checkradio-hor]=\"horizontal\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => CheckboxGroupComponent),\r\n        multi: true,\r\n    }],\r\n    styles: [],\r\n})\r\nexport class CheckboxGroupComponent implements OnInit, ControlValueAccessor {\r\n\r\n    /* åå§å checkbox çå¼ */\r\n    @Input()\r\n    model = [];\r\n\r\n    /* è®¾ç½®é»è®¤nameå¼ */\r\n    @Input()\r\n    name: string;\r\n\r\n    /* æ§ä»¶æ°´å¹³æå */\r\n    @Input()\r\n    horizontal: boolean;\r\n\r\n    /*  */\r\n    @Output()\r\n    modelChange = new EventEmitter<any>();\r\n\r\n    constructor(private idSer: IdService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.name = this.idSer.generate();\r\n    }\r\n\r\n    changeModel(value: any) {\r\n        const index = this.model.findIndex(ele => {\r\n            return ele === value;\r\n        });\r\n        // å¦æå·²ç»éä¸­  åè®¾ç½®ä¸ºä¸éä¸­\r\n        if (index > -1) {\r\n            this.model.splice(index, 1);\r\n            return this.modelChange.emit(this.model);\r\n        }\r\n        // å¦ææ²¡æéä¸­  è®¾ç½®ä¸ºéä¸­\r\n        this.model.push(value);\r\n        // controlçå¼è®¾ç½®ä¸ºéå·åéçå­ç¬¦ä¸²  ä¾¿äºå­å¨åä¼ é\r\n        this.controlChange(this.model.join());\r\n        this.modelChange.emit(this.model);\r\n    }\r\n    writeValue(value: any): void {\r\n        this.model = value\r\n        this.changeModel(this.model)\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.controlChange = fn\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.controlTouch = fn\r\n    }\r\n\r\n    private controlChange: Function = () => { }\r\n    private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { Component, OnInit, Input, ElementRef, forwardRef, Output, EventEmitter } from '@angular/core';\r\nimport { CheckboxGroupComponent } from './checkbox-group.component';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n@Component({\r\n  selector: 'farris-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => CheckboxComponent),\r\n    multi: true,\r\n  }],\r\n  styles: ['./checkbox.component.css']\r\n})\r\nexport class CheckboxComponent implements OnInit, ControlValueAccessor {\r\n\r\n   /* radio åçname ç¨äºå¤ä¸ªradioåéä½¿ç¨ */\r\n   get name() {\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.checkbox.name;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  /* model */\r\n  @Input()\r\n  get model() {\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.checkbox.model.find(ele => {\r\n        return ele === this.label;\r\n      });\r\n    }\r\n    return this.nyModel;\r\n  }\r\n\r\n  set model(model: any) {\r\n    this.nyModel = model;\r\n  }\r\n\r\n  /* checkboxå¼ */\r\n  @Input()\r\n  label: any;\r\n\r\n  /* ç¦ç¨ */\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  @Output()\r\n  modelChange = new EventEmitter<any>();\r\n  nyModel: any;\r\n  constructor(\r\n    private checkbox: CheckboxGroupComponent,\r\n    private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /* å¼ä¼ é */\r\n  changeModelHandler() {\r\n    // ç¶åç´ è·ålabel  å­åç´ åä»ç¶åç´ è·åmodel\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.checkbox.changeModel(this.label);\r\n    }\r\n    this.model = this.label;\r\n    this.modelChange.emit(this.model);\r\n    this.controlChange(this.label);\r\n  }\r\n\r\n\r\n  /* æ¯å¦å­å¨ç¶åç´   å­å¨å³åéç»*/\r\n  hasParent(element: any) {\r\n    return element.parentElement.classList.contains('farris-input-wrap');\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.model = value;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.controlChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.controlTouch = fn;\r\n  }\r\n  private controlChange: Function = () => { }\r\n  private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { OnDestroy, SimpleChanges, OnChanges, Optional, Injector } from '@angular/core';\r\n/*\r\n * @Author: è¡çæ´(Yuyang)\r\n * @Date: 2019-08-29\r\n * @LastEditors:  è¡çæ´(Yuyang)\r\n * @LastEditTime: 2019-08-29\r\n * @QQ: 664927877\r\n * @Version: v0.0.8\r\n */\r\nimport { Component, Input, forwardRef, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { IdService, CommonUtils } from '@farris/ui-common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'farris-checkboxgroup',\r\n    templateUrl: './checkboxgroup.component.html',\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => FarrisCheckboxGroupComponent),\r\n        multi: true,\r\n    }],\r\n    exportAs: 'FarrisCheckboxGroupComponent'\r\n})\r\nexport class FarrisCheckboxGroupComponent implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\r\n\r\n    @Input('tab-index') tabIndex = 0;\r\n\r\n    /* radio æ°ç» */\r\n    @Input() data: any[] = [];\r\n\r\n    /* checkbox ç±»å   åçæèæé®ç±»å*/\r\n    @Input() type: string;\r\n\r\n    /* å¤éæ¡name */\r\n    @Input() name: string;\r\n\r\n    /* æ¯å¦æ°´å¹³åå¸ */\r\n    @Input() horizontal: boolean;\r\n\r\n    /* åéç¬¦ é»è®¤éå·*/\r\n    @Input() separator = ',';\r\n\r\n    /* ç¦ç¨ */\r\n    @Input() disable: boolean;\r\n\r\n    /* å¤éæ¡ç»çå¼ */\r\n    @Input() value: any;\r\n\r\n    /* å¼ç±»åæ¯å¦æ¯string */\r\n    @Input() isStringValue = true;\r\n\r\n    @Input() textField = 'name';\r\n    @Input() valueField = 'value';\r\n\r\n    /** å è½½æ°æ®äºä»¶ */\r\n    @Input() loadData: (emptyData?: any[]) => Observable<any>;\r\n    loadDataSubscription: Subscription;\r\n\r\n    @Output() changeValue = new EventEmitter<any>();\r\n\r\n    /* checkboxèµå¼äºä»¶ */\r\n    @Output() setCheckboxData = new EventEmitter<any>();\r\n\r\n    private commonUtils: CommonUtils;\r\n\r\n    constructor(private idSer: IdService, @Optional() private inject: Injector) {\r\n        if (this.inject) {\r\n            this.commonUtils = this.inject.get(CommonUtils);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        // åå§åname\r\n        this.name = this.idSer.generate().replace(/-/g, '_');\r\n\r\n        this.setCheckboxData.emit(this);\r\n        // todo åå¼å¯ä»¥å®ç°promise\r\n        if (this.loadData) {\r\n            this.loadDataSubscription = this.loadData().subscribe(res => this.data = res.data);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.loadDataSubscription) {\r\n            this.loadDataSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    _getText(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.textField, item);\r\n            } else {\r\n                return item[this.textField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    _getValue(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.valueField, item);\r\n            } else {\r\n                return item[this.valueField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /* éä¸­inputå¼ */\r\n    clickHandler(item: any, index: number) {\r\n        let arrValue = this.transformToArr(this.value) || [];\r\n\r\n        const val = String(this._getValue(item));\r\n        if (!arrValue || !arrValue.length) {\r\n            arrValue.push(val);\r\n        } else {\r\n            if (arrValue.some(item => item == val)) {\r\n                arrValue = arrValue.filter(n => n !== val);\r\n            } else {\r\n                arrValue.push(val);\r\n            }\r\n        }\r\n\r\n        // æ´æ°valueå¼\r\n        this.value = this.transformToStr(arrValue);\r\n\r\n        // ä¼ å¼formcontrol\r\n        this.controlChange(this.value);\r\n        this.controlTouch(this.value);\r\n        this.changeValue.emit(this.value);\r\n    }\r\n\r\n    /* è¢«éä¸­ */\r\n    checked(item: any) {\r\n        const val = String(this._getValue(item));\r\n        const checkedValue = this.transformToArr(this.value);\r\n        // å¤å¼\r\n        return checkedValue.some(item => item == val);\r\n    }\r\n\r\n    /* å¼å°æ°ç»å¼çè½¬æ¢ */\r\n    transformToArr(value: any): string[] {\r\n        if (!value) {\r\n            return [];\r\n        }\r\n        if (!this.isStringValue) {\r\n            return value;\r\n        }\r\n\r\n        return value.split(this.separator);\r\n    }\r\n\r\n    /* å¼å°å­ç¬¦ä¸²å¼çè½¬æ¢ */\r\n    transformToStr(value: Array<string>) {\r\n\r\n        const allVals = this.data.map(n => this._getValue(n));\r\n        const r = [];\r\n        allVals.forEach(n => {\r\n            if (value.some(item => item == n)) {\r\n                r.push(n);\r\n            }\r\n        });\r\n\r\n        if (!this.isStringValue) {\r\n            return r;\r\n        }\r\n        return r.join(this.separator);\r\n    }\r\n\r\n\r\n    writeValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n\r\n    /* changeæä½å¼åå  æ¹æ³éå*/\r\n    registerOnChange(fn: () => void): void {\r\n        this.controlChange = fn;\r\n    }\r\n\r\n    /* blurå¼åå  æ¹æ³éå*/\r\n    registerOnTouched(fn: () => void): void {\r\n        this.controlTouch = fn;\r\n    }\r\n\r\n    private controlChange: (value: any) => void = () => { };\r\n    private controlTouch: (value: any) => void = () => { };\r\n\r\n}\r\n","import { Directive, Input, Injector, OnInit, ElementRef, HostListener, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[auto-size]',\r\n})\r\nexport class TextareaAutoSizeDirective implements OnInit, AfterViewInit, OnChanges{\r\n    @Input('auto-size') enable = true;\r\n    @Input() maxHeight: number;\r\n\r\n    private previousValue = null;\r\n    private isUserResized = false;\r\n\r\n    private textarea;\r\n    private document;\r\n    private documentElement;\r\n    private minHeight;\r\n\r\n    constructor(private el: ElementRef, private ngControl: NgControl, private injector: Injector) {\r\n        this.textarea = this.el.nativeElement;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.enable && !changes.enable.isFirstChange()) {\r\n            this.sizeToFit();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (!this.enable) {\r\n            return;\r\n        }\r\n        \r\n        if (this.maxHeight) {\r\n            this.textarea.style.maxHeight = `${this.maxHeight}px`;\r\n        }\r\n        \r\n        this.minHeight = this.textarea.getBoundingClientRect().height;\r\n        if (this.minHeight) {\r\n            this.textarea.style.minHeight = `${this.minHeight}px`;\r\n        }\r\n    }\r\n\r\n    private init() {\r\n        if (this.enable) {\r\n            this.document = this.textarea.ownerDocument;\r\n            this.documentElement = this.document.documentElement;\r\n            if (this.textarea) {\r\n                if (this.textarea.value) {\r\n                    this.sizeToFit();\r\n                }\r\n            }\r\n\r\n            if (this.ngControl) {\r\n                this.ngControl.valueChanges.subscribe(v => {\r\n                    if (v !== this.previousValue) {\r\n                        this.sizeToFit();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener('input')\r\n    onInput() {\r\n        this.sizeToFit();\r\n    }\r\n\r\n    @HostListener('change')\r\n    onValueChange() {\r\n        this.sizeToFit();\r\n    }\r\n\r\n\r\n    private overflowOffset() {\r\n        let offsetTop = 0;\r\n        let el = this.textarea;\r\n\r\n        while (el !== document.body && el !== null) {\r\n            offsetTop += el.offsetTop || 0;\r\n            el = el.offsetParent;\r\n        }\r\n\r\n        const top = offsetTop - document.defaultView.pageYOffset;\r\n        const bottom = this.documentElement.clientHeight - (top + this.textarea.offsetHeight);\r\n        return { top, bottom };\r\n    }\r\n\r\n    private sizeToFit() {\r\n        if (!this.enable) {\r\n            return;\r\n        }\r\n\r\n        const textarea = this.textarea;\r\n        const viewportMarginBottom = 100;\r\n        if (this.isUserResized) { return; }\r\n        if (this.textarea.value === this.previousValue) { return; }\r\n        if (this.textarea.offsetWidth <= 0 && this.textarea.offsetHeight <= 0) { return; }\r\n\r\n        // const { top, bottom } = this.overflowOffset();\r\n        // if (top < 0 || bottom < 0) {\r\n        //     return;\r\n        // }\r\n\r\n        const textareaStyle = getComputedStyle(textarea);\r\n\r\n        const topBorderWidth = Number(textareaStyle.borderTopWidth.replace(/px/, ''));\r\n        const bottomBorderWidth = Number(textareaStyle.borderBottomWidth.replace(/px/, ''));\r\n\r\n        const isBorderBox = textareaStyle.boxSizing === 'border-box';\r\n        const borderAddOn = isBorderBox ? topBorderWidth + bottomBorderWidth : 0;\r\n\r\n        // const maxHeight = Number(textareaStyle.height.replace(/px/, '')) + bottom;\r\n        // const adjustedViewportMarginBottom = bottom < viewportMarginBottom ? bottom : viewportMarginBottom;\r\n        // textarea.style.maxHeight = `${maxHeight - adjustedViewportMarginBottom}px`;\r\n\r\n\r\n        const container = textarea.parentElement;\r\n        if (container instanceof HTMLElement) {\r\n            const containerHeight = container.style.height;\r\n            container.style.height = getComputedStyle(container).height;\r\n            textarea.style.height = 'auto';\r\n\r\n            let h = textarea.scrollHeight + borderAddOn;\r\n            if (this.minHeight > h) {\r\n                h = this.minHeight;\r\n            }\r\n            textarea.style.height = `${h}px`;\r\n            container.style.height = containerHeight;\r\n        }\r\n\r\n        this.previousValue = textarea.value;\r\n    }\r\n}\r\n","import { Directive, ElementRef, Injector, Input, Renderer2,\r\n    OnInit, AfterViewInit, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n@Directive({\r\n    selector: '[word-count]',\r\n    exportAs: 'WordCountRef'\r\n})\r\nexport class TextareaWordcountDirective implements OnInit, AfterViewInit, OnDestroy, OnChanges {\r\n    @Input('word-count') useWordCount = true;\r\n    /**\r\n     * ç»è®¡å­æ°çæ¹å¼ï¼ surplus å©ä½å¯è¾å¥å­æ°; length: å½åå·²è¾å¥å­æ°ï¼\r\n     *\r\n     * é»è®¤ä¸º surplus\r\n     */\r\n    @Input() countType: 'surplus' | 'length' = 'surplus';\r\n\r\n    @Input() onlyShowInDialog = false;\r\n\r\n    wordCountElement = null;\r\n    // å½åå­æ°\r\n    private currentLengthElement = null;\r\n    private eventManager: EventManager;\r\n    private ngControl: NgControl;\r\n    private onInput = null;\r\n    private localeSer: LocaleService;\r\n    private ro: ResizeObserver = null;\r\n    constructor(private el: ElementRef, private render: Renderer2, private injector: Injector) {\r\n        this.eventManager = this.injector.get(EventManager);\r\n        this.localeSer = this.injector.get(LocaleService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initWordCount();\r\n        if (this.ngControl && this.useWordCount) {\r\n            this.ngControl.control.valueChanges.subscribe((e) => {\r\n                this.updateWordsCount();\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n\r\n        if (changes.useWordCount && !changes.useWordCount.isFirstChange()) {\r\n            if (this.useWordCount) {\r\n                this.initWordCount();\r\n            } else {\r\n                this.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n\r\n        if(this.ro) {\r\n            this.ro.disconnect();\r\n            this.ro.unobserve(this.el.nativeElement.parentElement);\r\n        }\r\n    }\r\n\r\n\r\n    private destroy() {\r\n        if (this.onInput) {\r\n            this.onInput();\r\n        }\r\n\r\n        if (this.wordCountElement) {\r\n            this.wordCountElement.remove();\r\n        }\r\n    }\r\n\r\n    initWordCount() {\r\n        if (this.useWordCount && !this.onlyShowInDialog) {\r\n            this.createWordCountElement();\r\n        }\r\n    }\r\n\r\n    private createWordCountID() {\r\n        const tagName = this.el.nativeElement.tagName;\r\n        if (this.ngControl) {\r\n            const ctrlName = this.ngControl.name;\r\n            return `${tagName}_WORDCOUNT_${ctrlName}`;\r\n        } else {\r\n            if (this.el.nativeElement.id) {\r\n                return `${tagName}_WORDCOUNT_${this.el.nativeElement.id}`;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private createWordCountElement() {\r\n        const max = this.el.nativeElement.maxLength;\r\n        if (!max || max < 0) {\r\n            // console.info('æªè®¾ç½®æå¤§å­ç¬¦æ°ï¼è®¡æ°åè½å¤±æã');\r\n            return;\r\n        }\r\n\r\n        const wordCountSPAN = this.render.createElement('span');\r\n        wordCountSPAN.className = 'textarea-wordcount';\r\n\r\n        const id = this.createWordCountID();\r\n        if (id) {\r\n            wordCountSPAN.id = id;\r\n        }\r\n\r\n        this.render.setStyle(wordCountSPAN, 'position', 'absolute');\r\n        this.render.setStyle(wordCountSPAN, 'bottom', '0px');\r\n\r\n        const { width, right } = this.el.nativeElement.getBoundingClientRect();\r\n        const { width: parentWidth } = this.el.nativeElement.parentElement.getBoundingClientRect();\r\n        if (parentWidth !== width) {\r\n            this.render.setStyle(wordCountSPAN, 'right', `${parentWidth - width + 10}px`);\r\n\r\n            this.ro = new ResizeObserver((entries, observer) => {\r\n                if (entries && entries[0]) {\r\n                    const _pw = entries[0].contentRect.width;\r\n\r\n                    this.render.setStyle(wordCountSPAN, 'right', `${_pw - width + 10}px`);\r\n                }\r\n            });\r\n            this.ro.observe(this.el.nativeElement.parentElement);\r\n\r\n        } else {\r\n            this.render.setStyle(wordCountSPAN, 'right', '10px');\r\n        }\r\n        this.render.setStyle(wordCountSPAN, 'cursor', 'pointer');\r\n\r\n        this.el.nativeElement.after(wordCountSPAN);\r\n        this.wordCountElement = wordCountSPAN;\r\n\r\n        const currentLengthSPAN = this.render.createElement('span');\r\n        wordCountSPAN.appendChild(currentLengthSPAN);\r\n        this.currentLengthElement = currentLengthSPAN;\r\n        currentLengthSPAN.after( ` / ${max}` );\r\n\r\n        this.updateWordsCount();\r\n        this.onInput = this.render.listen(this.el.nativeElement, 'input', () => {\r\n            // value.replace(/\\n|\\r/gi, '') // ç§»é¤æ¢è¡ç¬¦\r\n            this.updateWordsCount();\r\n        });\r\n    }\r\n\r\n    updateWordsCount() {\r\n        if (!this.useWordCount || !this.currentLengthElement) {\r\n            return;\r\n        }\r\n        const max = this.el.nativeElement.maxLength;\r\n        const val = this.countType === 'surplus' ? max - this.el.nativeElement.value.length : this.el.nativeElement.value.length;\r\n        const tip = 'messager.prompt.tips.' + this.countType;\r\n\r\n        this.currentLengthElement.innerText = val;\r\n        this.wordCountElement.title = this.localeSer.getValue(tip).replace('{0}', val);\r\n    }\r\n}\r\n","import { TextareaWordcountDirective } from './textarea-wordcount.directive';\r\nimport { NgControl } from '@angular/forms';\r\nimport { Directive, ElementRef, Renderer2, Injector, OnInit, Input,\r\n            AfterViewInit, OnDestroy, OnChanges, SimpleChanges, Optional } from '@angular/core';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n@Directive({\r\n    selector: '[textarea-zoom]',\r\n})\r\nexport class TextareaZoomDirective implements OnInit, AfterViewInit, OnDestroy, OnChanges {\r\n    @Input('textarea-zoom') useZoom = true;\r\n    @Input() dialogWidth = 500;\r\n    @Input() dialogHeight = 400;\r\n    @Input() fullscreen = false;\r\n    @Input() title = '';\r\n    @Input() value = '';\r\n\r\n    onMouseEnter = null;\r\n    onMouseLeave = null;\r\n    onClick = null;\r\n    altEnterHandler = null;\r\n\r\n    zoomButtonElement = null;\r\n    private messagerService: MessagerService;\r\n    private eventManager: EventManager;\r\n    private ngControl: NgControl;\r\n    private localeSer: LocaleService\r\n    constructor(private el: ElementRef, private render: Renderer2, private injector: Injector,\r\n                @Optional() private wordCountRef: TextareaWordcountDirective ) {\r\n        this.messagerService = this.injector.get(MessagerService);\r\n        this.eventManager = this.injector.get(EventManager);\r\n        this.localeSer = this.injector.get(LocaleService, null);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.useZoom && !changes.useZoom.isFirstChange()) {\r\n            if (this.useZoom) {\r\n                this.createZoomButton();\r\n            } else {\r\n                this.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.useZoom) {\r\n            this.createZoomButton();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    private destroy() {\r\n        if (this.onMouseEnter) {\r\n            this.onMouseEnter();\r\n        }\r\n        if (this.onMouseLeave) {\r\n            this.onMouseLeave();\r\n        }\r\n\r\n        if (this.onClick) {\r\n            this.onClick();\r\n        }\r\n        if (this.altEnterHandler) {\r\n            this.altEnterHandler();\r\n        }\r\n\r\n        if (this.zoomButtonElement) {\r\n            this.zoomButtonElement.remove();\r\n        }\r\n    }\r\n\r\n    private bindEventHandler() {\r\n        this.altEnterHandler = this.eventManager.addEventListener(this.el.nativeElement, 'keydown.alt.enter',\r\n        (event: KeyboardEvent) => {\r\n            const target = (event.target as any);\r\n            const val = target.value + '\\n';\r\n            target.value = val;\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            return false;\r\n        });\r\n    }\r\n\r\n    private createZoombarID() {\r\n        const tagName = this.el.nativeElement.tagName;\r\n        if (this.ngControl) {\r\n            const ctrlName = this.ngControl.name;\r\n            return `${tagName}_ZOOMBAR_${ctrlName}`;\r\n        } else {\r\n            if (this.el.nativeElement.id) {\r\n                return `${tagName}_ZOOMBAR_${this.el.nativeElement.id}`;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private createZoomButton() {\r\n        const zoomSPAN = this.render.createElement('span');\r\n        zoomSPAN.className = 'f-icon modal_maximize textarea-zoom';\r\n        zoomSPAN.title =  this.localeSer.getValue('text.zoom') || 'ç¹å»åå¼¹åºè¿è¡ç¼è¾';\r\n\r\n        \r\n\r\n        const id = this.createZoombarID();\r\n        if (id) {\r\n            zoomSPAN.id = id;\r\n        }\r\n\r\n        this.render.setStyle(zoomSPAN, 'position', 'absolute');\r\n        this.render.setStyle(zoomSPAN, 'top', '2px');\r\n\r\n        const { width } = this.el.nativeElement.getBoundingClientRect();\r\n        const { width: parentWidth } = this.el.nativeElement.parentElement.getBoundingClientRect();\r\n        if (parentWidth !== width) {\r\n            this.render.setStyle(zoomSPAN, 'left', `${width - 18}px`);\r\n        } else {\r\n            this.render.setStyle(zoomSPAN, 'right', '2px');\r\n        }\r\n        this.render.setStyle(zoomSPAN, 'cursor', 'pointer');\r\n\r\n        this.el.nativeElement.after(zoomSPAN);\r\n\r\n        this.zoomButtonElement = zoomSPAN;\r\n\r\n        this.onMouseEnter = this.render.listen(zoomSPAN, 'mouseenter', () => {\r\n            this.render.setStyle(zoomSPAN, 'fontSize', '22px');\r\n        });\r\n        this.onMouseLeave = this.render.listen(zoomSPAN, 'mouseleave', () => {\r\n            this.render.setStyle(zoomSPAN, 'fontSize', '1rem');\r\n        });\r\n\r\n        this.onClick = this.render.listen(zoomSPAN, 'click', () => {\r\n            this.zoomTextarea();\r\n        });\r\n    }\r\n\r\n    private zoomTextarea() {\r\n        const opts: any = {\r\n            width: this.dialogWidth || 500,\r\n            height: this.dialogHeight || 400,\r\n            showFontSize: true,\r\n            inputType: 'textarea',\r\n            saveSize: true    // å¯ç¨ä¸ªæ§åå­å¨ï¼localStorage\r\n        };\r\n\r\n        if (window.localStorage) {\r\n            const key = this.messagerService.getKeyString();\r\n            const val = localStorage.getItem(key);\r\n            if (val) {\r\n                const lastSetting = JSON.parse(val);\r\n                opts.fontSize = lastSetting.fontSize || 18;\r\n                opts.width = lastSetting.width || opts.width;\r\n                opts.height = lastSetting.height || opts.height;\r\n            }\r\n        }\r\n\r\n        const tagName = this.el.nativeElement.tagName;\r\n        let showText = this.el.nativeElement.value;\r\n        if (this.ngControl) {\r\n            showText = this.ngControl.value;\r\n        } else {\r\n            showText = this.el.nativeElement.value;\r\n        }\r\n\r\n        showText = this.value || showText;\r\n\r\n\r\n        if (tagName === 'FARRIS-TEXT' || this.el.nativeElement.readOnly || this.el.nativeElement.disabled) {\r\n            opts.readonly = true;\r\n            opts.showOkButton = false;\r\n            this.messagerService.prompt2(this.title, showText, opts).subscribe();\r\n        } else {\r\n            opts.maxLength = this.el.nativeElement.maxLength;\r\n            opts.enableWordCount = this.wordCountRef ? this.wordCountRef.useWordCount : false;\r\n            opts.countType = this.wordCountRef ? this.wordCountRef.countType : 'length';\r\n            this.messagerService.prompt2(this.title, showText, opts).subscribe(v => {\r\n                if (typeof v === 'boolean' && !v) {\r\n                    return;\r\n                } else {\r\n                    this.ngControl.control.setValue(v);\r\n                    if (this.wordCountRef) {\r\n                        this.wordCountRef.updateWordsCount();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n","import {\r\n    Directive, ElementRef, Renderer2, Injector, OnInit, Input,\r\n    AfterViewInit, OnDestroy, OnChanges, SimpleChanges, Output, ViewContainerRef, TemplateRef, NgZone\r\n} from '@angular/core';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n    selector: '[input-append]',\r\n})\r\nexport class InputAppendDirective implements OnInit, AfterViewInit, OnDestroy {\r\n    private _enableAppend = true;\r\n    // ç¸å½äºå¯ç¨ç¦ç¨æ­¤åè½\r\n    @Input('input-append')\r\n    set enableAppend(value: string | boolean) {\r\n        if (value === '' || value) {\r\n            this._enableAppend = true;\r\n            // éè¦\r\n            if (!this.appendWrapElement) {\r\n                this.createStruct();\r\n            }\r\n        } else {\r\n            this._enableAppend = false;\r\n            if (this.appendWrapElement) {\r\n                this.resetStruct();\r\n            }\r\n        }\r\n    }\r\n    get enableAppend() {\r\n        return this._enableAppend;\r\n    }\r\n    // åºç¨åºæ¯ï¼é»è®¤è¿ä¸ªåè½æ¯å¨ç®åè¡¨æ ¼ Table\r\n    // è¿½å ä¸ä¸ªåºæ¯å¨æ®éè¡¨åä¸ Form\r\n    private _appendScene='Table';\r\n    @Input() \r\n    set inputAppendScene(val:string){\r\n        // æ¯æè¿ä¸¤ä¸ªåºæ¯\r\n        val=val=='Form'?'Form':'Table';\r\n        if(val!=this._appendScene){\r\n            switch (this.inputAppendControlType) {\r\n                case 'StaticText':\r\n                    this.render.removeClass(this.el.nativeElement, 'f-cmp-input-append-'+this._appendScene.toLowerCase());\r\n                    this.render.addClass(this.el.nativeElement, 'f-cmp-input-append-'+val.toLowerCase());\r\n                    break;\r\n                case 'TextBox':\r\n                case 'MultiTextBox':\r\n                    if (this.elWrapElement) {\r\n                        this.elWrapElement.className= this.elWrapElement.className.replace('f-cmp-input-append-'+this._appendScene.toLowerCase(),'f-cmp-input-append-'+val.toLowerCase());\r\n                    }\r\n                    break;\r\n            }\r\n            this._appendScene=val;\r\n            this.modifyPaddingRight();\r\n        }\r\n    }\r\n    get inputAppendScene(){\r\n        return this._appendScene;\r\n    }\r\n    // è¿½å å°åªä¸ªç±»åä¸ TextBoxãMultiTextBoxã StaticText\r\n    @Input() inputAppendControlType = 'InputGroup';\r\n    // æ ¹æ®ç±»åä¸ä¸æ ·ï¼å¨æ§ä»¶å¤äºç¦ç¨ãåªè¯»æ¶ï¼å³å®é¢è²æ¯å¦å¯ç¨\r\n    // æä¸¤ç§ï¼æé® button ææ¬ text\r\n    private _appendType = 'button';\r\n    @Input()\r\n    set inputAppendType(value: string) {\r\n        if (value) {\r\n            if (['button', 'text'].findIndex(item => item == value) < 0) {\r\n                // ç±»åå¨æ¯æèå´å\r\n                value = 'button';\r\n            }\r\n            if (value != this._appendType) {\r\n                if (this.appendWrapElement) {\r\n                    // ç§»é¤åæ¥ï¼è¿½å æ°ç\r\n                    this.render.removeClass(this.appendWrapElement, 'input-append-' + this._appendType);\r\n                    this.render.addClass(this.appendWrapElement, 'input-append-' + value);\r\n                    if (this._appendType == 'button') {\r\n                        // åæ¥æ¯æé®\r\n                        if (this.clickHandler) {\r\n                            this.clickHandler();\r\n                            this.clickHandler = null;\r\n                        }\r\n                    } else {\r\n                        this.clickHandler = this.render.listen(this.appendWrapElement, 'click', (ev) => {\r\n                            this.inputAppendClickEvent.emit(ev);\r\n                        });\r\n                    }\r\n                }\r\n                this._appendType = value;\r\n                this.modifyPaddingRight();\r\n            }\r\n        }\r\n\r\n    }\r\n    get inputAppendType() {\r\n        return this._appendType;\r\n    }\r\n    // è¿½å çææ¬\r\n    private _inputAppendText = '';\r\n    @Input()\r\n    set inputAppendText(value: string) {\r\n        if (value != this._inputAppendText) {\r\n            this._inputAppendText = value;\r\n            if (this.appendWrapElement && this._enableAppend) {\r\n                this.render.removeChild(this.appendWrapElement, this.appendTextElement);\r\n                this.appendTextElement.innerHTML = value;\r\n                this.render.appendChild(this.appendWrapElement, this.appendTextElement);\r\n                this.modifyPaddingRight();\r\n            } else {\r\n                this.createStruct();\r\n            }\r\n        }\r\n    }\r\n    get inputAppendText() {\r\n        return this._inputAppendText;\r\n    }\r\n    // æ¨¡æ¿\r\n    // @Input() inputAppendTmpl: TemplateRef<any>;\r\n    private _disabled = false;\r\n    @Input()\r\n    set inputAppendDisabled(value) {\r\n        if (value != this._disabled) {\r\n            this._disabled = value;\r\n            if (this.appendWrapElement) {\r\n                value && this.render.addClass(this.appendWrapElement, this.disabledCls);\r\n                !value && this.render.removeClass(this.appendWrapElement, this.disabledCls);\r\n            }\r\n            this.modifyPaddingRight();\r\n        }\r\n    }\r\n    get inputAppendDisabled() {\r\n        return this._disabled;\r\n    }\r\n    // å½_appendClsä¸ºç©ºæ¶ï¼\r\n    private _appendCls='input-group-text';\r\n    @Input() \r\n    set inputAppendCls(val:string){\r\n        if(val!=this._appendCls){ \r\n            val=val?val:'input-group-text';\r\n            if(this.appendTextElement){\r\n                this.appendTextElement.className=val;  \r\n            }      \r\n            this._appendCls=val;\r\n        }\r\n    }\r\n    get inputAppendCls(){\r\n        return this._appendCls\r\n    }\r\n    /*\r\n    * ææ¬ç¹å»äºä»¶\r\n    */\r\n    @Output() inputAppendClickEvent = new EventEmitter();\r\n    // æ è®°nativeçå¤å±\r\n    private elWrapElement = null;\r\n    // æ è®°åç´ \r\n    private appendWrapElement = null;\r\n    // ææ¶ä¸ç¨\r\n    private appendTextElement = null;\r\n    private clickHandler = null;\r\n    private disabledCls = 'f-state-disabled';\r\n    private ngZone: NgZone = null;\r\n    // private ngControl: NgControl;\r\n    constructor(private viewRef: ViewContainerRef, private el: ElementRef, private render: Renderer2, private injector: Injector) {\r\n        this.ngZone = this.injector.get(NgZone);\r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n\r\n    ngAfterViewInit() {\r\n        this.createStruct();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        //this.resetStruct();\r\n        if (this.clickHandler) {\r\n            this.clickHandler();\r\n            this.clickHandler = null;\r\n        }\r\n        if (this.appendWrapElement) {\r\n            this.appendWrapElement.remove();\r\n            this.appendWrapElement = null;\r\n        }\r\n        if (this.elWrapElement) {\r\n            this.elWrapElement.remove();\r\n            this.elWrapElement = null;\r\n        }\r\n    }\r\n    /**\r\n     * éç½®\r\n     */\r\n    private resetStruct() {\r\n        if (this.clickHandler) {\r\n            this.clickHandler();\r\n            this.clickHandler = null;\r\n        }\r\n        // åç±»åç§»é¤ä¸åæ°å¢å çç»æææ ·å¼\r\n        switch (this.inputAppendControlType) {\r\n            case 'StaticText':\r\n                this.render.removeClass(this.el.nativeElement, 'f-cmp-static-text-input-append');\r\n                this.render.removeClass(this.el.nativeElement, 'f-cmp-input-append-'+this.inputAppendScene.toLowerCase());\r\n                break;\r\n            case 'TextBox':\r\n            case 'MultiTextBox':\r\n                if (this.elWrapElement) {\r\n                    let wrapParent = this.render.parentNode(this.elWrapElement);\r\n                    this.render.appendChild(wrapParent, this.el.nativeElement);\r\n                    this.elWrapElement.remove();\r\n                    this.elWrapElement = null;\r\n                }\r\n                break;\r\n        }\r\n        if (this.appendWrapElement) {\r\n            this.appendWrapElement.remove();\r\n            this.appendWrapElement = null;\r\n        }\r\n        this.modifyPaddingRight();\r\n    }\r\n    /**\r\n     * åå»ºæå¥ç»æ\r\n     */\r\n    private createStruct() {\r\n        if (!this.inputAppendText || !this.enableAppend || this.appendWrapElement) {\r\n            return;\r\n        }\r\n        const buttonWrap = this.render.createElement('div');\r\n        buttonWrap.className = 'input-group-append input-append-wrapper';\r\n        buttonWrap.className += ' input-append-' + this.inputAppendType;\r\n        if (this._disabled) {\r\n            buttonWrap.className += ' ' + this.disabledCls;\r\n        }\r\n        const buttonTextWrap = this.render.createElement('div');\r\n        buttonTextWrap.className = this.inputAppendCls;\r\n        buttonTextWrap.innerHTML = this.inputAppendText;\r\n        this.appendTextElement = buttonTextWrap;\r\n        this.appendWrapElement = buttonWrap;\r\n        this.render.appendChild(buttonWrap, buttonTextWrap);\r\n        switch (this.inputAppendControlType) {\r\n            case 'StaticText':\r\n                // æ­¤æ¶è¿æ²¡æçæåé¨çæ ·å¼\r\n                // let textareaEl = this.el.nativeElement.querySelector('.f-form-control-textarea');\r\n                let clsNames='f-cmp-static-text-input-append'+(' f-cmp-input-append-'+this.inputAppendScene.toLowerCase()) + (this._disabled ? ' ' + this.disabledCls : '');\r\n                clsNames.split(' ').map((tclsName)=>{\r\n                    this.render.addClass(this.el.nativeElement,tclsName);\r\n                });               \r\n                this.render.appendChild(this.el.nativeElement, buttonWrap);\r\n                break;\r\n            case 'TextBox':\r\n            case 'MultiTextBox':\r\n                let textParent = this.render.parentNode(this.el.nativeElement);\r\n                const inputWrap = this.render.createElement('div');\r\n                inputWrap.className = 'f-cmp-text-input-append f-cmp-input-append-'+this.inputAppendScene.toLowerCase() + (this._disabled ? ' ' + this.disabledCls : '');\r\n                if (this.el.nativeElement.outerHTML.indexOf('textarea') > -1) {\r\n                    inputWrap.className = 'f-cmp-textarea-input-append f-cmp-input-append-'+this.inputAppendScene.toLowerCase() + (this._disabled ? ' ' + this.disabledCls : '');\r\n                }\r\n                this.elWrapElement = inputWrap;\r\n                this.render.appendChild(inputWrap, this.el.nativeElement);\r\n                this.render.appendChild(inputWrap, buttonWrap);\r\n                this.render.appendChild(textParent, inputWrap);\r\n                break;\r\n            default:\r\n                // å­å¨ç±»ä¼¼ä¸æè¿æ ·çæ§ä»¶ï¼åé¨è°ç¨input-groupç»æè¿æ²¡æåå§å\r\n                let inputGroupEl = this.el.nativeElement.querySelector('.input-group');\r\n                if (inputGroupEl) {\r\n                    this.render.appendChild(inputGroupEl, buttonWrap);\r\n                } else {\r\n                    if (this.ngZone) {\r\n                        this.ngZone.runOutsideAngular(() => {\r\n                            setTimeout(() => {\r\n                                let inputGroupEl2 = this.el.nativeElement.querySelector('.input-group');\r\n                                this.render.appendChild(inputGroupEl2, buttonWrap);\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n        if (this.inputAppendType == 'button') {\r\n            this.clickHandler = this.render.listen(this.appendWrapElement, 'click', (ev) => {\r\n                if(!this.inputAppendDisabled){\r\n                    this.inputAppendClickEvent.emit(ev);\r\n                }\r\n            });\r\n        }\r\n        this.modifyPaddingRight();\r\n    }\r\n    /**\r\n     * å ä¸ºå¨æ®éè¾å¥æ¡ãéæææ¬ãå¤è¡ææ¬æ¡å±ç¤ºæ¶ï¼çé¢æ ·å¼é®é¢ã\r\n     * æä»¥éè¦åç¬å¤çï¼éè¿absoluteå®ä½ï¼è®¾ç½®é´è·ï¼ä¿æçé¢ä¸è´\r\n     */\r\n    private modifyPaddingRight(){\r\n        let findType=['StaticText','TextBox','MultiTextBox'].find(typeItem=>typeItem==this.inputAppendControlType);\r\n        if(this.inputAppendScene=='Form'&&findType){\r\n            let changeEl=findType=='StaticText'?this.el.nativeElement.querySelector('span'):this.el.nativeElement;\r\n            if(this.enableAppend&&!this._disabled&&this.appendWrapElement){\r\n                //window.getComputhis.appendWrapElement\r\n                const tRectObj=this.appendWrapElement.getBoundingClientRect();\r\n                this.render.setStyle(changeEl, 'paddingRight',tRectObj.width+'px');                \r\n            }else{\r\n                this.render.removeStyle(changeEl, 'paddingRight');    \r\n            }\r\n        }\r\n        \r\n    }\r\n}\r\n","import { EventManager } from '@angular/platform-browser';\r\nimport { Directive, ElementRef, Injector, OnInit, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: 'shortcut-tab',\r\n})\r\nexport class ShortCutTabKeyDirective implements OnInit, AfterViewInit {\r\n\r\n    constructor(public el: ElementRef, public injector: Injector, private eventManager: EventManager) {}\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.eventManager.addEventListener(this.el.nativeElement, 'keydown',  (e: KeyboardEvent) => {\r\n            e.stopPropagation();\r\n            if (e.key === 'Tab') {\r\n                this.onTabKeydownHandler(e.target);\r\n            }\r\n        });\r\n    }\r\n\r\n    private onTabKeydownHandler(currentTarget) {\r\n        let allInputs = this.el.nativeElement.querySelectorAll('input,textarea');\r\n        allInputs = Array.from(allInputs);\r\n        const currentInputIndex = allInputs.findIndex(n => n === currentTarget);\r\n        let nextInputIndex = currentInputIndex + 1;\r\n        if (nextInputIndex >= allInputs.length) {\r\n            nextInputIndex = 0;\r\n        }\r\n        const nextInputTarget = allInputs[nextInputIndex];\r\n        if (nextInputTarget) {\r\n            setTimeout(() => {\r\n                nextInputTarget.focus();\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport interface ICommentsHttpService {\r\n    getCommonComments(filter: any): Observable<any>;\r\n    showCommentManageDialog(filter: any): Observable<any>;\r\n}\r\nexport const CommentsHttpToken = new InjectionToken<ICommentsHttpService>('Common comments HTTP service');","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener, Injector, Input, OnInit, Output, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'single-list',\r\n    templateUrl: './single-list.component.html'\r\n})\r\n\r\nexport class SingleListComponent implements OnInit {\r\n\r\n    @Input() showButtons = true;\r\n    @Input() buttons = [];\r\n    @Input() data: Array<any> = [];\r\n    @Input() textField: string = '';\r\n    @Input() formatter: (rowObj: any) => string;\r\n    @Input() maxItems = 10;\r\n    @Input() emptyDataMsg = 'ææ æ°æ®';\r\n\r\n    @Output() itemClick = new EventEmitter();\r\n\r\n    @ViewChild('itemsContainer') itemsContainer: ElementRef<any>;\r\n\r\n    activeIndex = -1;\r\n\r\n    constructor(private injector: Injector, private cdr: ChangeDetectorRef) { }\r\n\r\n    @HostListener('mousedown', ['$event'])\r\n    onClick($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n    }\r\n\r\n    ngOnInit() { }\r\n\r\n    loadData(items: any) {\r\n        this.data = items;\r\n\r\n        if (!this.cdr['destroyed']) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n\r\n    formatData(rowObj: any) {\r\n        return this.formatter(rowObj);\r\n    }\r\n\r\n    onItemClick($event, item) {\r\n        this.itemClick.emit({data: item, evnet: $event});\r\n    }\r\n\r\n    setActiveItem(index: number) {\r\n        this.activeIndex = index;\r\n        if (!this.cdr['destroyed']) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n}","import { AfterViewInit, ComponentFactoryResolver, ComponentRef, Directive, ElementRef, Injector, Input, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from \"@angular/core\";\r\nimport { NgControl } from \"@angular/forms\";\r\nimport { EventManager } from \"@angular/platform-browser\";\r\nimport { CommonUtils, OverLayHiddenService } from \"@farris/ui-common\";\r\nimport { LocaleService } from \"@farris/ui-locale\";\r\nimport { CommentsHttpToken, ICommentsHttpService } from \"./comments/get-data.interface\";\r\nimport { SingleListComponent } from \"./comments/single-list.component\";\r\n\r\n\r\n@Directive({\r\n    selector: '[common-comments]',\r\n})\r\nexport class TextareaCommentsDirective implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n\r\n    @Input('common-comments') useComments = true;\r\n    @Input() maxHeight = 300;\r\n    @Input() title = '';\r\n    @Input() mgrText = '';\r\n\r\n    private commentSer: ICommentsHttpService;\r\n    private eventManager: EventManager;\r\n    private ngControl: NgControl;\r\n    commentsBtnElement = null;\r\n    singListRef: ComponentRef<SingleListComponent> = null;\r\n    listPanelElRef = null;\r\n    private overlaySer: OverLayHiddenService;\r\n\r\n    private observer: MutationObserver;\r\n    private commonUtil: CommonUtils;\r\n    constructor(private injector: Injector, private el: ElementRef, private render: Renderer2, \r\n        private localeSer: LocaleService, private cfr: ComponentFactoryResolver) {\r\n        this.commentSer = this.injector.get(CommentsHttpToken, null);\r\n        this.overlaySer = this.injector.get(OverLayHiddenService, null);\r\n        this.commonUtil = this.injector.get(CommonUtils, null);\r\n        if (!this.overlaySer) {\r\n            this.overlaySer = new OverLayHiddenService();\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.init();\r\n        this.listenAttributesChanged();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.useComments && !changes.useComments.isFirstChange()) {\r\n            this.init();\r\n        }\r\n    }\r\n\r\n    private init() {\r\n        const readonly = this.el.nativeElement.readOnly;\r\n        const disabled = this.el.nativeElement.disabled;\r\n        if (this.useComments && (!readonly && !disabled)) {\r\n            this.createCommentsButton();\r\n        } else {\r\n            this.destroy();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n        this.hideListPanel();\r\n        // åæ­¢è§å¯å±æ§åå\r\n        this.observer.disconnect();\r\n        this.observer = null;\r\n    }\r\n\r\n    listenAttributesChanged() {\r\n        // éæ©éè¦è§å¯åå¨çèç¹\r\n        const targetNode = this.el.nativeElement;\r\n\r\n        // è§å¯å¨çéç½®ï¼éè¦è§å¯ä»ä¹åå¨ï¼\r\n        const config = { attributes: true };\r\n\r\n        // å½è§å¯å°åå¨æ¶æ§è¡çåè°å½æ°\r\n        const callback = (mutationsList, observer) => {\r\n            // Use traditional 'for loops' for IE 11\r\n            for(let mutation of mutationsList) {\r\n                if (mutation.type === 'attributes' && (mutation.attributeName === 'readonly' || mutation.attributeName === 'disabled')) {\r\n                    this.init();\r\n                }\r\n            }\r\n        };\r\n\r\n        // åå»ºä¸ä¸ªè§å¯å¨å®ä¾å¹¶ä¼ å¥åè°å½æ°\r\n        this.observer = new MutationObserver(callback);\r\n\r\n        // ä»¥ä¸è¿°éç½®å¼å§è§å¯ç®æ èç¹\r\n        this.observer.observe(targetNode, config);\r\n    }\r\n\r\n\r\n    destroy() {\r\n        if (this.commentsBtnElement) {\r\n            this.commentsBtnElement.remove();\r\n        }\r\n    }\r\n\r\n    private createID() {\r\n        const tagName = this.el.nativeElement.tagName;\r\n        if (this.ngControl) {\r\n            const ctrlName = this.ngControl.name;\r\n            return `${tagName}_COMMENTS_${ctrlName}`;\r\n        } else {\r\n            if (this.el.nativeElement.id) {\r\n                return `${tagName}_COMMENTS_${this.el.nativeElement.id}`;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private createCommentsButton() {\r\n        const commentsBtn = this.render.createElement('span');\r\n        commentsBtn.className = 'dropdown-toggle';\r\n        commentsBtn.title = this.title ? this.title : (this.localeSer.getValue('text.comments.title') || 'å¸¸ç¨æè§');\r\n        const id = this.createID();\r\n        if (id) {\r\n            commentsBtn.id = id;\r\n        }\r\n\r\n        this.render.setStyle(commentsBtn, 'position', 'absolute');\r\n        this.render.setStyle(commentsBtn, 'left', '3px');\r\n        this.render.setStyle(commentsBtn, 'bottom', '0px');\r\n        this.render.setStyle(commentsBtn, 'cursor', 'pointer');\r\n\r\n        const icon = this.render.createElement('span');\r\n        this.render.appendChild(commentsBtn, icon);\r\n\r\n        icon.className = 'f-icon f-icon-message';\r\n        this.render.setStyle(icon, 'position', 'relative');\r\n        // this.render.setStyle(icon, 'margin-right', '3px');\r\n        this.render.setStyle(icon, 'top', '1px');\r\n        this.render.setStyle(icon, 'font-size', '13px');\r\n\r\n        this.el.nativeElement.after(commentsBtn);\r\n        this.commentsBtnElement = commentsBtn;\r\n\r\n        this.render.listen(commentsBtn, 'click', (e: MouseEvent) => {\r\n            e.stopPropagation();\r\n            if (!this.listPanelElRef) {\r\n                this.showListPanel();\r\n            } else {\r\n                this.hideListPanel();\r\n            }\r\n        })\r\n    }\r\n\r\n    private showListPanel() {\r\n        const listPanelEl = this.render.createElement('div');\r\n\r\n\r\n        const zindex = this.commonUtil.getFloatingLayerIndex();\r\n\r\n        const { left, bottom } = this.commentsBtnElement.getBoundingClientRect();\r\n        this.render.setStyle(listPanelEl, 'width', '200px');\r\n        this.render.setStyle(listPanelEl, 'max-height', `${this.maxHeight}px`);\r\n        this.render.setStyle(listPanelEl, 'position', 'absolute');\r\n        this.render.setStyle(listPanelEl, 'left', `${left}px`);\r\n        this.render.setStyle(listPanelEl, 'top', '0px');\r\n        this.render.setStyle(listPanelEl, 'z-index', zindex);\r\n        this.render.setStyle(listPanelEl, 'box-shadow', '0 2px 8px 0 #dedede');\r\n        this.render.setStyle(listPanelEl, 'border-radius', '6px');\r\n        this.render.setStyle(listPanelEl, 'background', 'white');\r\n        this.render.setStyle(listPanelEl, 'visibility', 'hidden');\r\n        document.body.append(listPanelEl);\r\n\r\n        this.listPanelElRef = listPanelEl;\r\n\r\n        const singListCmf = this.cfr.resolveComponentFactory(SingleListComponent);\r\n        this.singListRef = singListCmf.create(this.injector);\r\n\r\n        this.singListRef.instance.showButtons = true;\r\n        this.singListRef.instance.emptyDataMsg = this.localeSer.getValue('text.comments.empty');\r\n        this.singListRef.instance.buttons = [\r\n            { \r\n                text: this.mgrText ? this.mgrText : this.localeSer.getValue('text.comments.manager'), \r\n                iconCls: 'f-icon f-icon-home-setup', handler: () => {\r\n                    if (this.commentSer) {\r\n                        this.hideListPanel();\r\n                        this.commentSer.showCommentManageDialog({type: 'forms'}).subscribe((e) => {\r\n                            console.log(e);\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        ];\r\n        this.singListRef.instance.textField = 'message';\r\n        this.singListRef.instance.maxItems = 999999;\r\n\r\n        this.singListRef.instance.itemClick.subscribe((e) => {\r\n            const val = e.data['message'];\r\n            let _text = this.el.nativeElement.value || '';\r\n            _text += val;\r\n            if (this.ngControl) {\r\n                this.ngControl.control.patchValue(_text);\r\n            } else {\r\n                this.el.nativeElement.value = _text;\r\n            }\r\n\r\n            this.hideListPanel();\r\n        })\r\n\r\n        listPanelEl.appendChild(this.singListRef.location.nativeElement);\r\n        this.singListRef.changeDetectorRef.detectChanges();\r\n\r\n        this.loadData(this.singListRef);\r\n\r\n\r\n        this.overlaySer.registerMouseEvent(listPanelEl, (e) => {\r\n            if (this.listPanelElRef.contains(e.target) || this.commentsBtnElement === e.target || this.commentsBtnElement.contains(e.target)) {\r\n                return;\r\n            }\r\n            this.hideListPanel();\r\n        });\r\n    }\r\n\r\n    hideListPanel() {\r\n        if (this.singListRef) {\r\n            this.singListRef.destroy();\r\n            this.singListRef = null;\r\n        }\r\n\r\n        if (this.listPanelElRef) {\r\n            this.listPanelElRef.remove();\r\n            this.overlaySer.destory(this.listPanelElRef);\r\n            this.listPanelElRef = null;\r\n        }\r\n    }\r\n\r\n    private loadData(singListRef: ComponentRef<SingleListComponent>) {\r\n        if (this.commentSer) {\r\n            this.commentSer.getCommonComments({type: 'forms'}).subscribe((data) => {\r\n                singListRef.instance.loadData(data);\r\n                setTimeout(() => {\r\n                    this.resetPosition();\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private resetPosition() {\r\n        const { top, bottom, left } = this.commentsBtnElement.getBoundingClientRect();\r\n        const panelHeight = this.listPanelElRef.offsetHeight;\r\n        if (window.innerHeight - bottom  > this.maxHeight || window.innerHeight - bottom > panelHeight) {\r\n            this.render.setStyle(this.listPanelElRef, 'top', `${bottom}px`);\r\n            this.render.removeStyle(this.listPanelElRef, 'visibility');\r\n            return;\r\n        } else {\r\n            if (top > this.maxHeight || top > panelHeight) {\r\n                this.render.setStyle(this.listPanelElRef, 'top', `${top - panelHeight}px`);\r\n            } else {\r\n                this.render.setStyle(this.listPanelElRef, 'top', '0px');\r\n                if (left > 200) {\r\n                    this.render.setStyle(this.listPanelElRef, 'left', `${ left - 200 }px` );\r\n                }\r\n            }\r\n            this.render.removeStyle(this.listPanelElRef, 'visibility');\r\n        }\r\n    }\r\n}","import { AfterViewInit, Directive, ElementRef, Injector, Input, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { OverLayHiddenService } from '@farris/ui-common';\r\nimport { Observable, of } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Directive({ \r\n    selector: '[single-select]',\r\n    exportAs: 'singleSelect'\r\n})\r\nexport class SingleSelectDirective implements OnInit, AfterViewInit, OnDestroy {\r\n    @Input() items: Array<{ label: string, value: string }> = [];\r\n    @Input() panelRef: HTMLElement;\r\n    @Input() width: number;\r\n    @Input() position: 'above'|'below' = 'below';\r\n    @Input() container = null;\r\n    private ngCtrl: NgControl;\r\n    private overlaySer: OverLayHiddenService;\r\n    selectEl = null;\r\n    private overlayHandler = null;\r\n    private displayTextEl = null;\r\n    private ngZone: NgZone = null;\r\n\r\n    beforeShow: (e?: any) => Observable<boolean> = null;\r\n\r\n    constructor(private injector: Injector, private elRef: ElementRef, private render: Renderer2) {\r\n        this.overlaySer = this.injector.get(OverLayHiddenService, new OverLayHiddenService());\r\n        this.ngZone = this.injector.get(NgZone, null);\r\n        if (this.overlaySer) {\r\n\r\n            if (this.ngZone) {\r\n                this.ngZone.runOutsideAngular(() => {\r\n                    this.registerMouseEvent();\r\n                });\r\n            } else {\r\n                this.registerMouseEvent();\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerMouseEvent() {\r\n        this.overlayHandler = this.overlaySer.registerMouseEvent(this.elRef.nativeElement, (e) => {\r\n            if (!this.panelRef.classList.contains('f-area-show')) {\r\n                return;\r\n            }\r\n\r\n            if (this.panelRef.contains(e.target)) {\r\n                return;\r\n            }\r\n\r\n            if (this.selectEl.contains(e.target)) {\r\n                return;\r\n            }\r\n\r\n            this.panelRef.classList.remove('f-area-show');\r\n        }); \r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.ngCtrl = this.injector.get(NgControl);\r\n\r\n        if (this.ngCtrl) {\r\n            this.ngCtrl.valueChanges.subscribe((v: any) => {\r\n                this.updateDisplayText();\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    ngAfterViewInit(): void {\r\n        const { container  } = this.createMySelect();\r\n        this.selectEl = container;\r\n        this.elRef.nativeElement.style.display = 'none';\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.overlayHandler) {\r\n            this.overlayHandler();\r\n        }\r\n    }\r\n\r\n    private createMySelect() {\r\n        const selectContainerEl = document.createElement('div');\r\n        selectContainerEl.className = 'input-group f-cmp-inputgroup';\r\n        if (this.width) {\r\n            selectContainerEl.style.width = `${this.width}px`;\r\n        }\r\n\r\n        selectContainerEl.style.userSelect = 'none';\r\n        selectContainerEl.style.overflow = 'hidden';\r\n\r\n        const selectTextEl = document.createElement('div');\r\n        selectTextEl.className = 'form-control f-utils-fill text-left px-1 d-flex';\r\n        selectTextEl.style.alignItems = 'center';\r\n        selectTextEl.style.whiteSpace = 'nowrap';\r\n        this.displayTextEl = selectTextEl;\r\n\r\n        const selectArrowEl = document.createElement('div');\r\n        selectArrowEl.className = 'input-group-append';\r\n        selectArrowEl.innerHTML = `<span class=\"input-group-text\"><i class=\"f-icon f-icon-arrow-s\"></i></span>`;\r\n\r\n        selectContainerEl.appendChild(selectTextEl);\r\n        selectContainerEl.appendChild(selectArrowEl);\r\n\r\n\r\n        this.elRef.nativeElement.after(selectContainerEl);\r\n\r\n\r\n\r\n        this.render.listen(selectContainerEl, 'click', (e) => {\r\n            if (this.panelRef.classList.contains('f-area-show')) {\r\n                this.panelRef.classList.remove('f-area-show');\r\n                return;\r\n            }\r\n\r\n            if (!this.beforeShow) {\r\n                this.beforeShow = () => {\r\n                    return of(true);\r\n                }\r\n            }\r\n\r\n            this.updatePosition();\r\n            this.beforeShow({instance: this}).pipe(\r\n                debounceTime(10)\r\n            ).subscribe(r => {\r\n                if (r) {\r\n                    this.panelRef.classList.add('f-area-show');\r\n                }\r\n            });\r\n        });\r\n\r\n        this.render.listen(this.panelRef, 'click', (e) => {\r\n            if (e.target.nodeName === 'LI') {\r\n                const val = e.target.getAttribute('value');\r\n                this.ngCtrl.control.setValue(val);\r\n                this.panelRef.classList.remove('f-area-show');\r\n                selectTextEl.innerHTML = e.target.innerHTML;\r\n            }\r\n        });\r\n\r\n        this.panelRef.style.cssText = `\r\n        position:fixed;z-index: 100;\r\n        box-shadow: 0 2px 8px 0 rgba(0,0,0,.15);\r\n        border-radius: 3px;max-height:300px;overflow:auto;\r\n        transition: all 0.08s linear;`;\r\n\r\n        this.panelRef.querySelector('ul').style.cssText = `position:relative;min-width: 100%;border:none; box-shadow: none;`;\r\n        \r\n        this.updateDisplayText();\r\n\r\n        return { container: selectContainerEl };\r\n    }\r\n\r\n    private updateDisplayText() {\r\n        setTimeout(() => {\r\n\r\n            const li = this.panelRef.querySelector(`[value=\"${this.ngCtrl.value}\"]`);\r\n            this.displayTextEl.innerHTML = li ? li.innerHTML : '';\r\n\r\n            if (this.items && !this.items.length) {\r\n                const item = this.items.find(n => n.value == this.ngCtrl.value);\r\n                if (item) {\r\n                    this.displayTextEl.innerHTML = item.label;\r\n                }\r\n            }\r\n\r\n            this.displayTextEl.title = this.displayTextEl.innerText;\r\n        });\r\n    }\r\n\r\n    private updatePosition() {\r\n        const ul: any = this.panelRef.querySelector('ul');\r\n        if (this.position === 'above') {\r\n            ul.style.position = 'relative';\r\n            const t = this.selectEl.offsetTop - ul.offsetHeight - 6;\r\n            const top = `${t}px`;\r\n            this.panelRef.style.top = top;\r\n            this.panelRef.style.transformOrigin = 'bottom';\r\n        } else {\r\n            this.panelRef.style.top = 'auto';\r\n            if (this.container) {\r\n                this.panelRef.style.top = (this.panelRef.offsetTop - this.container.scrollTop) + 'px';\r\n            }\r\n        }\r\n\r\n        // if ( this.selectEl.offsetLeft) {\r\n        //     this.panelRef.style.left = this.selectEl.offsetLeft + 'px';\r\n        // }\r\n\r\n        if (!this.width) {\r\n            this.panelRef.style.width = this.selectEl.offsetWidth + 'px';\r\n            ul.style.width = '100%';\r\n        } else {\r\n            this.panelRef.style.width = this.width + 'px';\r\n        }\r\n       \r\n    }\r\n   \r\n}","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IdService, FarrisCommonModule } from '@farris/ui-common';\r\n\r\nimport { RadioComponent } from './radio/radio.component';\r\nimport { RadioButtonComponent } from './radio/radio-button.component';\r\nimport { RadioGroupComponent } from './radio/radio-group.component';\r\nimport { FarrisRadioGroupComponent } from './radio/radiogroup.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { CheckboxGroupComponent } from './checkbox/checkbox-group.component';\r\nimport { FarrisCheckboxGroupComponent } from './checkbox/checkboxgroup.component';\r\nimport { TextareaAutoSizeDirective } from './textarea-autosize.directive';\r\nimport { TextareaZoomDirective } from './textarea-zoom.directive';\r\nimport {InputAppendDirective} from './input-append.directive';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { ShortCutTabKeyDirective } from './shortcut-tab.directive';\r\nimport { TextareaWordcountDirective } from './textarea-wordcount.directive';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { TextareaCommentsDirective } from './textarea-comments.directive';\r\nimport { SingleListComponent } from './comments/single-list.component';\r\nimport { SingleSelectDirective } from './single-select.directive';\r\n@NgModule({\r\n    declarations: [\r\n        RadioComponent,\r\n        RadioGroupComponent,\r\n        CheckboxComponent,\r\n        CheckboxGroupComponent,\r\n        RadioButtonComponent,\r\n        FarrisRadioGroupComponent,\r\n        FarrisCheckboxGroupComponent,\r\n        TextareaAutoSizeDirective,\r\n        TextareaZoomDirective,\r\n        ShortCutTabKeyDirective,\r\n        TextareaWordcountDirective,\r\n        InputAppendDirective,\r\n        TextareaCommentsDirective,\r\n        SingleListComponent,\r\n        SingleSelectDirective\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MessagerModule.forRoot(),\r\n        FarrisCommonModule.forRoot(),\r\n        LocaleModule,\r\n    ],\r\n    exports: [\r\n        RadioComponent,\r\n        RadioGroupComponent,\r\n        CheckboxComponent,\r\n        CheckboxGroupComponent,\r\n        RadioButtonComponent,\r\n        FarrisRadioGroupComponent,\r\n        FarrisCheckboxGroupComponent,\r\n        TextareaAutoSizeDirective,\r\n        TextareaZoomDirective,\r\n        ShortCutTabKeyDirective,\r\n        TextareaWordcountDirective,\r\n        InputAppendDirective,\r\n        TextareaCommentsDirective,\r\n        SingleSelectDirective\r\n    ],\r\n    entryComponents: [\r\n        SingleListComponent\r\n    ],\r\n    providers: [IdService],\r\n})\r\nexport class FarrisFormsModule { }\r\n"],"names":[],"mappings":"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"}
