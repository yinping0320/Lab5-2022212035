{"version":3,"file":"farris-ui-forms-validation-message.js.map","sources":["ng://@farris/ui-forms/validation-message/validate-msg.component.ts","ng://@farris/ui-forms/validation-message/form-message.module.ts"],"sourcesContent":["import { Component, ElementRef, Input, SimpleChanges, OnChanges } from '@angular/core';\r\n\r\n/**\r\n * å¨è¡¨ådomä¸­å±ç¤ºéè¯¯ä¿¡æ¯\r\n * éè¦å°formControlä¸­çerrorså¯¹è±¡ä¼ å¥\r\n *\r\n * eg: å¨å§åè¾å¥æ¡ä¸æ¹å±ç¤ºéªè¯ä¿¡æ¯\r\n *  å°viewModel.form.name.errorså¯¹è±¡ä¼ å¥\r\n *  <label class=\"k-form-field\">\r\n        <span>å§å</span>\r\n        <input class=\"k-textbox\" formControlName=\"name\" />\r\n        <validationMessage [errors]=\"viewModel.form.name.errors\"></validationMessage>\r\n    </label>\r\n */\r\n\r\n@Component({\r\n  selector: 'validationMessage',\r\n  template: `\r\n      <div class=\"farris-feedback f-state-invalid\">\r\n          <span class=\"f-icon f-icon-message_warning f-feedback-icon\" (click)=\"showErrorMessage=true\" *ngIf=\"!showErrorMessage\"></span>\r\n          <span class=\"f-feedback-message\" *ngIf=\"showErrorMessage\" (click)=\"showErrorMessage=false\">{{this.errorMessage}}</span>\r\n      </div>\r\n    `,\r\n  styles: []\r\n})\r\nclass ValidationMessageComponent implements OnChanges {\r\n  @Input() errors;\r\n  @Input() type: string;\r\n  errorMessage: string;\r\n  // é»è®¤æ¾ç¤ºéè¯¯æ¶æ¯\r\n  public showErrorMessage = true;\r\n  constructor(\r\n    private ele: ElementRef,\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.errorMessage = this.getErrorMessage(this.errors);\r\n    this.ele.nativeElement.style.display = !this.errorMessage ? 'none' : 'block';\r\n  }\r\n  private getErrorMessage(errors) {\r\n    if (!errors) {\r\n      return null;\r\n    } else {\r\n      let errorMessage = '';\r\n      Object.keys(errors).forEach(key => {\r\n        if (errors[key].name) {\r\n          errorMessage = errorMessage + ' ' + errors[key].name;\r\n        }\r\n      });\r\n      return errorMessage;\r\n    }\r\n  }\r\n}\r\nexport { ValidationMessageComponent };\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ValidationMessageComponent } from './validate-msg.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        ValidationMessageComponent\r\n    ],\r\n    exports: [\r\n        ValidationMessageComponent\r\n    ]\r\n})\r\nexport class FormMessageModule {\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAAA;;;;;;;;;;;;AAeA;IAgBE,oCACU,GAAe;QAAf,QAAG,GAAH,GAAG,CAAY;;QAFlB,qBAAgB,GAAG,IAAI,CAAC;KAK9B;;;;;IAED,gDAAW;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,MAAM,GAAG,OAAO,CAAC;KAC9E;;;;;;IACO,oDAAe;;;;;IAAvB,UAAwB,MAAM;QAC5B,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,IAAI,CAAC;SACb;aAAM;;gBACD,cAAY,GAAG,EAAE;YACrB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO;;;;YAAC,UAAA,GAAG;gBAC7B,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE;oBACpB,cAAY,GAAG,cAAY,GAAG,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;iBACtD;aACF,EAAC,CAAC;YACH,OAAO,cAAY,CAAC;SACrB;KACF;;gBAtCF,SAAS,SAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,QAAQ,EAAE,qWAKP;iBAEJ;;;;gBAxBmB,UAAU;;;yBA0B3B,KAAK;uBACL,KAAK;;IA2BR,iCAAC;CAvCD;;;;;;ACfA;IAIA;KAYC;;gBAZA,QAAQ,SAAC;oBACN,OAAO,EAAE;wBACL,YAAY;qBACf;oBACD,YAAY,EAAE;wBACV,0BAA0B;qBAC7B;oBACD,OAAO,EAAE;wBACL,0BAA0B;qBAC7B;iBACJ;;IAED,wBAAC;CAZD;;;;;;;;;;;;;;"}
