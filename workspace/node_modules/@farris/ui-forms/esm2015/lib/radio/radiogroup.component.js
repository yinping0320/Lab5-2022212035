/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, forwardRef, EventEmitter, Optional, Injector } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { IdService, CommonUtils } from '@farris/ui-common';
import { Output } from '@angular/core';
export class FarrisRadioGroupComponent {
    /**
     * @param {?} idSer
     * @param {?} inject
     */
    constructor(idSer, inject) {
        this.idSer = idSer;
        this.inject = inject;
        /* radio 数组 */
        this.data = [];
        this.textField = 'name';
        this.valueField = 'value';
        /**
         * 数据中标识禁用的字段名称，默认为 disabled
         */
        this.disabledField = 'disabled';
        /**
         * 列表中是否显示已禁用的项，默认 true
         */
        this.showDisabledItem = true;
        /* 点击事件 */
        this.changeValue = new EventEmitter();
        this.controlChange = (/**
         * @return {?}
         */
        () => { });
        this.controlTouch = (/**
         * @return {?}
         */
        () => { });
        if (this.inject) {
            this.commonUtils = this.inject.get(CommonUtils);
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.name = this.idSer.generate().replace(/-/g, '_');
    }
    /**
     * @param {?} item
     * @return {?}
     */
    clickHandler(item) {
        /** @type {?} */
        let val = this._getValue(item);
        if (this.value == val)
            return;
        // 更改control的值
        this.value = val;
        this.controlChange(this.value);
        this.controlTouch(this.value);
        this.changeValue.emit(this.value);
    }
    /**
     * @param {?} item
     * @return {?}
     */
    _getText(item) {
        if (item) {
            if (this.commonUtils && this.commonUtils.getValue) {
                return this.commonUtils.getValue(this.textField, item);
            }
            else {
                return item[this.textField];
            }
        }
        else {
            return '';
        }
    }
    /**
     * @param {?} item
     * @return {?}
     */
    _getValue(item) {
        if (item) {
            if (this.commonUtils && this.commonUtils.getValue) {
                return this.commonUtils.getValue(this.valueField, item);
            }
            else {
                return item[this.valueField];
            }
        }
        else {
            return '';
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    writeValue(value) {
        this.value = value;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this.controlChange = fn;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) {
        this.controlTouch = fn;
    }
}
FarrisRadioGroupComponent.decorators = [
    { type: Component, args: [{
                selector: 'farris-radiogroup',
                template: "<div class=\"farris-input-wrap\" [class.farris-checkradio-hor]=\"horizontal\">\r\n    <div class=\"custom-control custom-radio\" *ngFor=\"let item of data; let i=index\"  [style.display]=\"item[disabledField] && !showDisabledItem ? 'none': ''\">\r\n        <input #input class=\"custom-control-input\" [name]=\"name\" id=\"{{'radio_'+name+i}}\" type=\"radio\"\r\n        [value]=\"_getValue(item)\" (click)=\"clickHandler(item)\" [checked]=\"_getValue(item) == value\" \r\n        [disabled]=\"disabled || item[disabledField]\" tabindex=\"{{tabIndex}}\">\r\n        <label class=\"custom-control-label\" for=\"{{'radio_'+name+i}}\">{{_getText(item)}}</label>\r\n    </div>\r\n</div>\r\n\r\n\r\n",
                providers: [{
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => FarrisRadioGroupComponent)),
                        multi: true,
                    }],
                exportAs: 'FarrisRadioGroupComponent'
            }] }
];
/** @nocollapse */
FarrisRadioGroupComponent.ctorParameters = () => [
    { type: IdService },
    { type: Injector, decorators: [{ type: Optional }] }
];
FarrisRadioGroupComponent.propDecorators = {
    tabIndex: [{ type: Input, args: ['tab-index',] }],
    data: [{ type: Input }],
    type: [{ type: Input }],
    name: [{ type: Input }],
    horizontal: [{ type: Input }],
    disabled: [{ type: Input }],
    value: [{ type: Input }],
    textField: [{ type: Input }],
    valueField: [{ type: Input }],
    disabledField: [{ type: Input }],
    showDisabledItem: [{ type: Input }],
    changeValue: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    FarrisRadioGroupComponent.prototype.tabIndex;
    /** @type {?} */
    FarrisRadioGroupComponent.prototype.data;
    /** @type {?} */
    FarrisRadioGroupComponent.prototype.type;
    /** @type {?} */
    FarrisRadioGroupComponent.prototype.name;
    /** @type {?} */
    FarrisRadioGroupComponent.prototype.horizontal;
    /** @type {?} */
    FarrisRadioGroupComponent.prototype.disabled;
    /** @type {?} */
    FarrisRadioGroupComponent.prototype.value;
    /** @type {?} */
    FarrisRadioGroupComponent.prototype.textField;
    /** @type {?} */
    FarrisRadioGroupComponent.prototype.valueField;
    /**
     * 数据中标识禁用的字段名称，默认为 disabled
     * @type {?}
     */
    FarrisRadioGroupComponent.prototype.disabledField;
    /**
     * 列表中是否显示已禁用的项，默认 true
     * @type {?}
     */
    FarrisRadioGroupComponent.prototype.showDisabledItem;
    /** @type {?} */
    FarrisRadioGroupComponent.prototype.changeValue;
    /**
     * @type {?}
     * @private
     */
    FarrisRadioGroupComponent.prototype.commonUtils;
    /**
     * @type {?}
     * @private
     */
    FarrisRadioGroupComponent.prototype.controlChange;
    /**
     * @type {?}
     * @private
     */
    FarrisRadioGroupComponent.prototype.controlTouch;
    /**
     * @type {?}
     * @private
     */
    FarrisRadioGroupComponent.prototype.idSer;
    /**
     * @type {?}
     * @private
     */
    FarrisRadioGroupComponent.prototype.inject;
}
//# sourceMappingURL=data:application/json;base64,