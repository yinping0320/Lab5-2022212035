/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, forwardRef, Optional, ElementRef, HostBinding } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { RadioGroupComponent } from './radio-group.component';
var RadioComponent = /** @class */ (function () {
    function RadioComponent(radioGroup, el) {
        this.radioGroup = radioGroup;
        this.el = el;
        /* radio 值 */
        this.label = '';
        this.name = '';
        this.modelChange = new EventEmitter();
        this.blockClass = true;
        this.controlChange = (/**
         * @return {?}
         */
        function () { });
        this.controlTouch = (/**
         * @return {?}
         */
        function () { });
    }
    Object.defineProperty(RadioComponent.prototype, "model", {
        /* radio 原生name 用于多个radio单选使用 */
        // get name() {
        //   if (this.hasParent(this.el.nativeElement)) {
        //     return this.radioGroup.name;
        //   }
        // }
        /* radio 值 */
        get: /* radio 原生name 用于多个radio单选使用 */
        // get name() {
        //   if (this.hasParent(this.el.nativeElement)) {
        //     return this.radioGroup.name;
        //   }
        // }
        /* radio 值 */
        /**
         * @return {?}
         */
        function () {
            if (this.hasParent(this.el.nativeElement)) {
                return this.radioGroup.model;
            }
            return this.nyModel;
        },
        set: /**
         * @param {?} model
         * @return {?}
         */
        function (model) {
            this.nyModel = model;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    RadioComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.name = this.radioGroup.name;
    };
    /**
     * @return {?}
     */
    RadioComponent.prototype.changeModelHandler = /**
     * @return {?}
     */
    function () {
        // 父元素获取label  子元素再从父元素获取model
        if (this.hasParent(this.el.nativeElement)) {
            return this.radioGroup.changeModel(this.label);
        }
        this.model = this.label;
        this.modelChange.emit(this.model);
        this.controlChange(this.label);
    };
    /* 是否存在父元素  存在即单选组*/
    /* 是否存在父元素  存在即单选组*/
    /**
     * @param {?} element
     * @return {?}
     */
    RadioComponent.prototype.hasParent = /* 是否存在父元素  存在即单选组*/
    /**
     * @param {?} element
     * @return {?}
     */
    function (element) {
        return element.parentElement.classList.contains('farris-radio-group');
    };
    /**
     * @param {?} value
     * @return {?}
     */
    RadioComponent.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.model = value;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    RadioComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.controlChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    RadioComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.controlTouch = fn;
    };
    RadioComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-radio',
                    template: "<label class=\"custom-control custom-radio\">\r\n    <input class=\"custom-control-input\" [name]=\"name\" [value]=\"label\" \r\n    [ngModel]=\"model\" (ngModelChange)=\"changeModelHandler()\" type=\"radio\" [disabled]=\"disabled\">\r\n    <span class=\"custom-control-label\">\r\n      <ng-content>\r\n      </ng-content>\r\n    </span>\r\n</label>",
                    providers: [{
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return RadioComponent; })),
                            multi: true,
                        }]
                    // changeDetection: ChangeDetectionStrategy.OnPush,
                    ,
                    styles: [".btn-group .btn{margin-left:-1px}"]
                }] }
    ];
    /** @nocollapse */
    RadioComponent.ctorParameters = function () { return [
        { type: RadioGroupComponent, decorators: [{ type: Optional }] },
        { type: ElementRef }
    ]; };
    RadioComponent.propDecorators = {
        model: [{ type: Input }],
        id: [{ type: Input }],
        label: [{ type: Input }],
        disabled: [{ type: Input }],
        modelChange: [{ type: Output }],
        blockClass: [{ type: HostBinding, args: ['class.d-block',] }]
    };
    return RadioComponent;
}());
export { RadioComponent };
if (false) {
    /** @type {?} */
    RadioComponent.prototype.id;
    /** @type {?} */
    RadioComponent.prototype.label;
    /** @type {?} */
    RadioComponent.prototype.disabled;
    /** @type {?} */
    RadioComponent.prototype.nyModel;
    /** @type {?} */
    RadioComponent.prototype.name;
    /** @type {?} */
    RadioComponent.prototype.modelChange;
    /** @type {?} */
    RadioComponent.prototype.blockClass;
    /**
     * @type {?}
     * @private
     */
    RadioComponent.prototype.controlChange;
    /**
     * @type {?}
     * @private
     */
    RadioComponent.prototype.controlTouch;
    /**
     * @type {?}
     * @private
     */
    RadioComponent.prototype.radioGroup;
    /**
     * @type {?}
     * @private
     */
    RadioComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1mb3Jtcy8iLCJzb3VyY2VzIjpbImxpYi9yYWRpby9yYWRpby5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUE2QixNQUFNLGVBQWUsQ0FBQztBQUNqSixPQUFPLEVBQXdCLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDekUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFOUQ7SUFrREUsd0JBQ3NCLFVBQStCLEVBQzNDLEVBQWM7UUFERixlQUFVLEdBQVYsVUFBVSxDQUFxQjtRQUMzQyxPQUFFLEdBQUYsRUFBRSxDQUFZOztRQWZmLFVBQUssR0FBUSxFQUFFLENBQUM7UUFPekIsU0FBSSxHQUFHLEVBQUUsQ0FBQztRQUVBLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUVsQixlQUFVLEdBQUcsSUFBSSxDQUFDO1FBdUN4QyxrQkFBYTs7O1FBQWEsY0FBUSxDQUFDLEVBQUM7UUFDcEMsaUJBQVk7OztRQUFhLGNBQVEsQ0FBQyxFQUFDO0lBbEMzQyxDQUFDO0lBakNELHNCQUNJLGlDQUFLO1FBVFQsZ0NBQWdDO1FBQ2hDLGVBQWU7UUFDZixpREFBaUQ7UUFDakQsbUNBQW1DO1FBQ25DLE1BQU07UUFDTixJQUFJO1FBRUosYUFBYTs7Ozs7Ozs7Ozs7UUFDYjtZQUVFLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxFQUFFO2dCQUN6QyxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDO2FBQzlCO1lBQ0QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3RCLENBQUM7Ozs7O1FBRUQsVUFBVSxLQUFVO1lBQ2xCLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLENBQUM7OztPQUpBOzs7O0lBNkJELGlDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUM7SUFDbkMsQ0FBQzs7OztJQUVELDJDQUFrQjs7O0lBQWxCO1FBQ0UsOEJBQThCO1FBQzlCLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxFQUFFO1lBQ3pDLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ2hEO1FBQ0QsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRUQsb0JBQW9COzs7Ozs7SUFDcEIsa0NBQVM7Ozs7O0lBQVQsVUFBVSxPQUFZO1FBQ3BCLE9BQU8sT0FBTyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLG9CQUFvQixDQUFDLENBQUM7SUFDeEUsQ0FBQzs7Ozs7SUFFRCxtQ0FBVTs7OztJQUFWLFVBQVcsS0FBVTtRQUNuQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUNyQixDQUFDOzs7OztJQUVELHlDQUFnQjs7OztJQUFoQixVQUFpQixFQUFZO1FBQzNCLElBQUksQ0FBQyxhQUFhLEdBQUcsRUFBRSxDQUFDO0lBQzFCLENBQUM7Ozs7O0lBRUQsMENBQWlCOzs7O0lBQWpCLFVBQWtCLEVBQVk7UUFDNUIsSUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7SUFDekIsQ0FBQzs7Z0JBckZGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsY0FBYztvQkFDeEIsMFdBQXFDO29CQUVyQyxTQUFTLEVBQUUsQ0FBQzs0QkFDVixPQUFPLEVBQUUsaUJBQWlCOzRCQUMxQixXQUFXLEVBQUUsVUFBVTs7OzRCQUFDLGNBQU0sT0FBQSxjQUFjLEVBQWQsQ0FBYyxFQUFDOzRCQUM3QyxLQUFLLEVBQUUsSUFBSTt5QkFDWixDQUFDO29CQUNGLG1EQUFtRDs7O2lCQUNwRDs7OztnQkFaUSxtQkFBbUIsdUJBcUR2QixRQUFRO2dCQXZEMEQsVUFBVTs7O3dCQXlCOUUsS0FBSztxQkFhTCxLQUFLO3dCQUdMLEtBQUs7MkJBR0wsS0FBSzs4QkFNTCxNQUFNOzZCQUVOLFdBQVcsU0FBQyxlQUFlOztJQTBDOUIscUJBQUM7Q0FBQSxBQTFGRCxJQTBGQztTQS9FWSxjQUFjOzs7SUF1QnpCLDRCQUFvQjs7SUFHcEIsK0JBQXlCOztJQUd6QixrQ0FBMkI7O0lBRTNCLGlDQUFhOztJQUViLDhCQUFVOztJQUVWLHFDQUFnRDs7SUFFaEQsb0NBQWdEOzs7OztJQXVDaEQsdUNBQTRDOzs7OztJQUM1QyxzQ0FBMkM7Ozs7O0lBckN6QyxvQ0FBbUQ7Ozs7O0lBQ25ELDRCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBmb3J3YXJkUmVmLCBPcHRpb25hbCwgRWxlbWVudFJlZiwgSG9zdEJpbmRpbmcsIENoYW5nZURldGVjdG9yUmVmLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IsIE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBSYWRpb0dyb3VwQ29tcG9uZW50IH0gZnJvbSAnLi9yYWRpby1ncm91cC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdmYXJyaXMtcmFkaW8nLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9yYWRpby5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vcmFkaW8uY29tcG9uZW50LmNzcyddLFxyXG4gIHByb3ZpZGVyczogW3tcclxuICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxyXG4gICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gUmFkaW9Db21wb25lbnQpLFxyXG4gICAgbXVsdGk6IHRydWUsXHJcbiAgfV1cclxuICAvLyBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcclxufSlcclxuZXhwb3J0IGNsYXNzIFJhZGlvQ29tcG9uZW50IGltcGxlbWVudHMgQ29udHJvbFZhbHVlQWNjZXNzb3IsIE9uSW5pdCB7XHJcblxyXG4gIC8qIHJhZGlvIOWOn+eUn25hbWUg55So5LqO5aSa5LiqcmFkaW/ljZXpgInkvb/nlKggKi9cclxuICAvLyBnZXQgbmFtZSgpIHtcclxuICAvLyAgIGlmICh0aGlzLmhhc1BhcmVudCh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQpKSB7XHJcbiAgLy8gICAgIHJldHVybiB0aGlzLnJhZGlvR3JvdXAubmFtZTtcclxuICAvLyAgIH1cclxuICAvLyB9XHJcbiBcclxuICAvKiByYWRpbyDlgLwgKi9cclxuICBASW5wdXQoKVxyXG4gIGdldCBtb2RlbCgpOiBhbnkge1xyXG4gICAgaWYgKHRoaXMuaGFzUGFyZW50KHRoaXMuZWwubmF0aXZlRWxlbWVudCkpIHtcclxuICAgICAgcmV0dXJuIHRoaXMucmFkaW9Hcm91cC5tb2RlbDtcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLm55TW9kZWw7XHJcbiAgfVxyXG5cclxuICBzZXQgbW9kZWwobW9kZWw6IGFueSkge1xyXG4gICAgdGhpcy5ueU1vZGVsID0gbW9kZWw7XHJcbiAgfVxyXG5cclxuXHJcbiAgQElucHV0KCkgaWQ6IHN0cmluZztcclxuXHJcbiAgLyogcmFkaW8g5YC8ICovXHJcbiAgQElucHV0KCkgbGFiZWw6IGFueSA9ICcnO1xyXG5cclxuICAvKiDnpoHnlKggKi9cclxuICBASW5wdXQoKSBkaXNhYmxlZDogYm9vbGVhbjtcclxuXHJcbiAgbnlNb2RlbDogYW55O1xyXG5cclxuICBuYW1lID0gJyc7XHJcblxyXG4gIEBPdXRwdXQoKSBtb2RlbENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG5cclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmQtYmxvY2snKSBibG9ja0NsYXNzID0gdHJ1ZTtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBAT3B0aW9uYWwoKSBwcml2YXRlIHJhZGlvR3JvdXA6IFJhZGlvR3JvdXBDb21wb25lbnQsXHJcbiAgICBwcml2YXRlIGVsOiBFbGVtZW50UmVmXHJcbiAgKSB7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMubmFtZSA9IHRoaXMucmFkaW9Hcm91cC5uYW1lO1xyXG4gIH1cclxuXHJcbiAgY2hhbmdlTW9kZWxIYW5kbGVyKCkge1xyXG4gICAgLy8g54i25YWD57Sg6I635Y+WbGFiZWwgIOWtkOWFg+e0oOWGjeS7jueItuWFg+e0oOiOt+WPlm1vZGVsXHJcbiAgICBpZiAodGhpcy5oYXNQYXJlbnQodGhpcy5lbC5uYXRpdmVFbGVtZW50KSkge1xyXG4gICAgICByZXR1cm4gdGhpcy5yYWRpb0dyb3VwLmNoYW5nZU1vZGVsKHRoaXMubGFiZWwpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5tb2RlbCA9IHRoaXMubGFiZWw7XHJcbiAgICB0aGlzLm1vZGVsQ2hhbmdlLmVtaXQodGhpcy5tb2RlbCk7XHJcbiAgICB0aGlzLmNvbnRyb2xDaGFuZ2UodGhpcy5sYWJlbCk7XHJcbiAgfVxyXG5cclxuICAvKiDmmK/lkKblrZjlnKjniLblhYPntKAgIOWtmOWcqOWNs+WNlemAiee7hCovXHJcbiAgaGFzUGFyZW50KGVsZW1lbnQ6IGFueSkge1xyXG4gICAgcmV0dXJuIGVsZW1lbnQucGFyZW50RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2ZhcnJpcy1yYWRpby1ncm91cCcpO1xyXG4gIH1cclxuXHJcbiAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZCB7XHJcbiAgICB0aGlzLm1vZGVsID0gdmFsdWU7XHJcbiAgfVxyXG5cclxuICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBGdW5jdGlvbik6IHZvaWQge1xyXG4gICAgdGhpcy5jb250cm9sQ2hhbmdlID0gZm47XHJcbiAgfVxyXG5cclxuICByZWdpc3Rlck9uVG91Y2hlZChmbjogRnVuY3Rpb24pOiB2b2lkIHtcclxuICAgIHRoaXMuY29udHJvbFRvdWNoID0gZm47XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGNvbnRyb2xDaGFuZ2U6IEZ1bmN0aW9uID0gKCkgPT4geyB9O1xyXG4gIHByaXZhdGUgY29udHJvbFRvdWNoOiBGdW5jdGlvbiA9ICgpID0+IHsgfTtcclxuXHJcbn1cclxuIl19