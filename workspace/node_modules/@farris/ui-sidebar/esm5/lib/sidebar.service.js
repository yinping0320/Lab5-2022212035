/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
var FarrisSidebarService = /** @class */ (function () {
    function FarrisSidebarService() {
        this.isOpenSubject = new Subject();
    }
    /**
     * @param {?} message
     * @return {?}
     */
    FarrisSidebarService.prototype.sendIsOpen = /**
     * @param {?} message
     * @return {?}
     */
    function (message) {
        this.isOpenSubject.next(message);
    };
    /**
     * @return {?}
     */
    FarrisSidebarService.prototype.getIsOpen = /**
     * @return {?}
     */
    function () {
        return this.isOpenSubject.asObservable();
    };
    FarrisSidebarService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    FarrisSidebarService.ctorParameters = function () { return []; };
    /** @nocollapse */ FarrisSidebarService.ngInjectableDef = i0.defineInjectable({ factory: function FarrisSidebarService_Factory() { return new FarrisSidebarService(); }, token: FarrisSidebarService, providedIn: "root" });
    return FarrisSidebarService;
}());
export { FarrisSidebarService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FarrisSidebarService.prototype.isOpenSubject;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1zaWRlYmFyLyIsInNvdXJjZXMiOlsibGliL3NpZGViYXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFjLE1BQU0sTUFBTSxDQUFDOztBQUUzQztJQVNFO1FBRlEsa0JBQWEsR0FBRyxJQUFJLE9BQU8sRUFBTyxDQUFDO0lBRzNDLENBQUM7Ozs7O0lBRUQseUNBQVU7Ozs7SUFBVixVQUFXLE9BQVk7UUFDckIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDbkMsQ0FBQzs7OztJQUVELHdDQUFTOzs7SUFBVDtRQUNFLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUMzQyxDQUFDOztnQkFsQkYsVUFBVSxTQUNUO29CQUNFLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7Ozs7K0JBTkg7Q0F1QkMsQUFwQkQsSUFvQkM7U0FmWSxvQkFBb0I7Ozs7OztJQUUvQiw2Q0FBMkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFN1YmplY3QsIE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuXHJcbkBJbmplY3RhYmxlKFxyXG4gIHtcclxuICAgIHByb3ZpZGVkSW46ICdyb290J1xyXG4gIH1cclxuKVxyXG5leHBvcnQgY2xhc3MgRmFycmlzU2lkZWJhclNlcnZpY2Uge1xyXG5cclxuICBwcml2YXRlIGlzT3BlblN1YmplY3QgPSBuZXcgU3ViamVjdDxhbnk+KCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gIH1cclxuXHJcbiAgc2VuZElzT3BlbihtZXNzYWdlOiBhbnkpIHtcclxuICAgIHRoaXMuaXNPcGVuU3ViamVjdC5uZXh0KG1lc3NhZ2UpO1xyXG4gIH1cclxuXHJcbiAgZ2V0SXNPcGVuKCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICByZXR1cm4gdGhpcy5pc09wZW5TdWJqZWN0LmFzT2JzZXJ2YWJsZSgpO1xyXG4gIH1cclxuXHJcbn0iXX0=