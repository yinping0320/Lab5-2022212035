import { AfterViewInit, ElementRef, OnDestroy, SimpleChanges, EventEmitter, OnInit, OnChanges } from '@angular/core';
import { NumberSpinnerComponent } from './number-spinner.component';
import { PopoverDirective } from '@farris/ui-popover';
export declare class NumberRangeComponent extends NumberSpinnerComponent implements AfterViewInit, OnDestroy, OnInit, OnChanges {
    beginPlaceHolder: string;
    endPlaceHolder: string;
    inputPrev: ElementRef;
    inputNext: ElementRef;
    prevWrapper: ElementRef;
    nextWrapper: ElementRef;
    popover: PopoverDirective;
    separator: string;
    beginValue: any;
    endValue: any;
    private __value;
    value: any;
    beginValueChange: EventEmitter<{}>;
    endValueChange: EventEmitter<{}>;
    prevValue: any;
    nextValue: any;
    private _beginValue;
    private _endValue;
    readonly preNumValue: any;
    readonly nextNumValue: any;
    private documentClick;
    private focusState;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private initPlaceHolderInfo;
    private getRangeValue;
    private getEndValue;
    private getBeginValue;
    getRealValue(val: any): any;
    onModelChange(val: any, type?: string): void;
    onClick($event: any): void;
    onBlur(e: any, type: string): void;
    onFocus(type?: string): void;
    expendWidth(which: string, num: number): void;
    onMouseEnter(event: any): void;
    isShowPopover(): boolean;
    onKeyDownRange($event: KeyboardEvent, typ: 'begin' | 'end'): void;
    writeValue(val: any): void;
    setValue(val: any): void;
    up(e: Event, type: string): void;
    down(e: Event, type: string): void;
    private _compute;
}
