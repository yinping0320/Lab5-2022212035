/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BigNumber } from 'bignumber.js';
import { Component, forwardRef, Input, Output, ViewChild, ElementRef, EventEmitter } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { NumberSpinnerComponent } from './number-spinner.component';
import { PopoverDirective } from '@farris/ui-popover';
var NumberRangeComponent = /** @class */ (function (_super) {
    tslib_1.__extends(NumberRangeComponent, _super);
    function NumberRangeComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.beginPlaceHolder = '';
        _this.endPlaceHolder = '';
        _this.separator = '~';
        _this.__value = '';
        _this.beginValueChange = new EventEmitter();
        _this.endValueChange = new EventEmitter();
        /* 开始数字展示值 */
        _this.prevValue = '';
        /* 结束数字展示值 */
        _this.nextValue = '';
        _this._beginValue = '';
        _this._endValue = '';
        _this.focusState = {
            isFocus: false,
            target: '' // begin | end
        };
        return _this;
        //#endregion
    }
    Object.defineProperty(NumberRangeComponent.prototype, "beginValue", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.prevValue = this.format(value);
            // 开始真实数值
            this._beginValue = this.isEmpty(value) ? '' : value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberRangeComponent.prototype, "endValue", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.nextValue = this.format(value);
            // 结束真实数值
            this._endValue = this.isEmpty(value) ? '' : value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberRangeComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this.__value;
        },
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            if (v !== this.__value) {
                this.__value = v === '~' ? '' : v;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberRangeComponent.prototype, "preNumValue", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var v = this.getRealValue(this.parser ? this.prevValue : this._beginValue);
            if (this.canNull && this.isEmpty(v)) {
                return '';
            }
            else {
                return v || 0;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberRangeComponent.prototype, "nextNumValue", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var v = this.getRealValue(this.parser ? this.nextValue : this._endValue);
            if (this.canNull && this.isEmpty(v)) {
                return '';
            }
            else {
                return v || 0;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NumberRangeComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        _super.prototype.ngOnInit.call(this);
        this.showButton = false;
        this.initPlaceHolderInfo();
    };
    /**
     * @return {?}
     */
    NumberRangeComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.documentClick = this.render.listen(document, 'click', (/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            _this.render.setStyle(_this.prevWrapper.nativeElement, 'flex', 1);
            _this.render.setStyle(_this.nextWrapper.nativeElement, 'flex', 1);
        }));
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    NumberRangeComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        _super.prototype.ngOnChanges.call(this, changes);
        if (changes.value && !changes.value.isFirstChange()) {
            this.setValue(changes.value.currentValue);
        }
    };
    /**
     * @return {?}
     */
    NumberRangeComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.documentClick) {
            this.documentClick();
        }
    };
    /**
     * @private
     * @return {?}
     */
    NumberRangeComponent.prototype.initPlaceHolderInfo = /**
     * @private
     * @return {?}
     */
    function () {
        if (!this.beginPlaceHolder) {
            this.beginPlaceHolder = this.localeService.getValue('numberSpinner.range.begin') || this.placeholder;
        }
        if (!this.endPlaceHolder) {
            this.endPlaceHolder = this.localeService.getValue('numberSpinner.range.end') || this.placeholder;
        }
    };
    /**
     * @private
     * @return {?}
     */
    NumberRangeComponent.prototype.getRangeValue = /**
     * @private
     * @return {?}
     */
    function () {
        return this.preNumValue + this.separator + this.nextNumValue;
    };
    /**
     * @private
     * @return {?}
     */
    NumberRangeComponent.prototype.getEndValue = /**
     * @private
     * @return {?}
     */
    function () {
        return this.getRealValue(this.nextValue);
    };
    /**
     * @private
     * @return {?}
     */
    NumberRangeComponent.prototype.getBeginValue = /**
     * @private
     * @return {?}
     */
    function () {
        return this.getRealValue(this.prevValue);
    };
    /**
     * @param {?} val
     * @return {?}
     */
    NumberRangeComponent.prototype.getRealValue = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        if (this.parser) {
            return this.parser(val);
        }
        /** @type {?} */
        var _n = this.validInterval(new BigNumber(val), false);
        if (_n.isNaN()) {
            /** @type {?} */
            var minBigNum = new BigNumber('' + this.min);
            if (this.canNull || minBigNum.isNaN()) {
                return null;
            }
            else {
                _n = minBigNum;
            }
        }
        return (/** @type {?} */ (this._getRealValue(_n)));
    };
    /**
     * @param {?} val
     * @param {?=} type
     * @return {?}
     */
    NumberRangeComponent.prototype.onModelChange = /**
     * @param {?} val
     * @param {?=} type
     * @return {?}
     */
    function (val, type) {
        if (type === 'begin') {
            this._beginValue = val;
        }
        else if (type === 'end') {
            this._endValue = val;
        }
        this.value = this.getRangeValue();
        this.onChangeCallback(this.value);
        this.onTouchedCallback();
        this.valueChange.emit(this.value);
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    NumberRangeComponent.prototype.onClick = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        $event.stopPropagation();
    };
    /**
     * @param {?} e
     * @param {?} type
     * @return {?}
     */
    NumberRangeComponent.prototype.onBlur = /**
     * @param {?} e
     * @param {?} type
     * @return {?}
     */
    function (e, type) {
        if (!this.readonly && !this.disabled) {
            /** @type {?} */
            var tmpValue = e.value;
            this.focusState = { isFocus: false, target: type };
            if (type === 'begin') {
                /** @type {?} */
                var nextVal = this.getEndValue();
                /** @type {?} */
                var minValue = this.isEmpty(tmpValue)
                    ? ''
                    : this.isEmpty(nextVal)
                        ? tmpValue
                        : BigNumber.min(tmpValue, nextVal).toFixed();
                // this.prevValue = this.format(minValue);
                this.beginValue = this.validInterval(new BigNumber(minValue), false).toFixed();
                // this.beginValue = this.getRealValue(this.prevValue);
                this.inputPrev.nativeElement.value = this.prevValue;
                this.onModelChange(this._beginValue, type);
            }
            else {
                /** @type {?} */
                var beginVal = this.getBeginValue();
                /** @type {?} */
                var maxValue = this.isEmpty(tmpValue)
                    ? ''
                    : this.isEmpty(beginVal)
                        ? tmpValue
                        : BigNumber.max(tmpValue, beginVal).toFixed();
                // this.nextValue = this.format(maxValue);
                // this.endValue = this.getRealValue(this.nextValue);
                this.endValue = this.validInterval(new BigNumber(maxValue), false).toFixed();
                this.inputNext.nativeElement.value = this.nextValue;
                this.onModelChange(this._endValue, type);
            }
        }
        this.valueChange.emit(this.value);
        if (type === 'begin') {
            this.beginValueChange.emit(this.preNumValue);
        }
        else {
            this.endValueChange.emit(this.nextNumValue);
        }
        this.blur.emit();
    };
    /**
     * @param {?=} type
     * @return {?}
     */
    NumberRangeComponent.prototype.onFocus = /**
     * @param {?=} type
     * @return {?}
     */
    function (type) {
        if (!this.readonly && !this.disabled) {
            this.focusState = { isFocus: true, target: type };
            if (type === 'begin') {
                this.inputPrev.nativeElement.value = this._beginValue;
                this.inputPrev.nativeElement.setSelectionRange(0, this._beginValue.length);
                this.expendWidth('begin', 3);
            }
            else {
                this.inputNext.nativeElement.value = this._endValue;
                this.inputNext.nativeElement.setSelectionRange(0, this._endValue.length);
                this.expendWidth('end', 3);
            }
        }
        this.focus.emit(type);
    };
    /**
     * @param {?} which
     * @param {?} num
     * @return {?}
     */
    NumberRangeComponent.prototype.expendWidth = /**
     * @param {?} which
     * @param {?} num
     * @return {?}
     */
    function (which, num) {
        /** @type {?} */
        var target;
        /** @type {?} */
        var other;
        if (which === 'begin') {
            target = this.prevWrapper.nativeElement;
            other = this.nextWrapper.nativeElement;
        }
        else {
            target = this.nextWrapper.nativeElement;
            other = this.prevWrapper.nativeElement;
        }
        var width = target.getBoundingClientRect().width;
        if (width < 150) {
            this.render.setStyle(target, 'flex', num);
            this.render.setStyle(other, 'flex', 1);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NumberRangeComponent.prototype.onMouseEnter = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.isActiveTip = this.isShowPopover();
        if (this.nextValue && this.prevValue) {
            this.popValue = this.prevValue + '~' + this.nextValue;
        }
        else {
            this.popValue = '';
        }
    };
    /**
     * @return {?}
     */
    NumberRangeComponent.prototype.isShowPopover = /**
     * @return {?}
     */
    function () {
        var width = this.el.nativeElement.getBoundingClientRect().width;
        if (width && width < 200) {
            return true;
        }
        return false;
    };
    /**
     * @param {?} $event
     * @param {?} typ
     * @return {?}
     */
    NumberRangeComponent.prototype.onKeyDownRange = /**
     * @param {?} $event
     * @param {?} typ
     * @return {?}
     */
    function ($event, typ) {
        if ($event.key === 'ArrowDown') {
            $event.preventDefault();
            this.down($event, typ);
        }
        if ($event.key === 'ArrowUp') {
            $event.preventDefault();
            this.up($event, typ);
        }
        $event.stopPropagation();
    };
    /**
     * @param {?} val
     * @return {?}
     */
    NumberRangeComponent.prototype.writeValue = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        this.setValue(val);
    };
    /**
     * @param {?} val
     * @return {?}
     */
    NumberRangeComponent.prototype.setValue = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        if (typeof val === 'string') {
            /** @type {?} */
            var valArr = val.split(this.separator);
            this._beginValue = valArr[0] ? valArr[0] : '';
            this._endValue = valArr[1] ? valArr[1] : '';
        }
        else {
            this._beginValue = '';
            this._beginValue = '';
        }
        this.prevValue = this.format(this._beginValue);
        this.nextValue = this.format(this._endValue);
    };
    //#region 上下操作按钮 或 上下方向键
    //#region 上下操作按钮 或 上下方向键
    /**
     * @param {?} e
     * @param {?} type
     * @return {?}
     */
    NumberRangeComponent.prototype.up = 
    //#region 上下操作按钮 或 上下方向键
    /**
     * @param {?} e
     * @param {?} type
     * @return {?}
     */
    function (e, type) {
        e.stopPropagation();
        this._compute(type, 'up', ((/** @type {?} */ (e.target))).value);
    };
    /**
     * @param {?} e
     * @param {?} type
     * @return {?}
     */
    NumberRangeComponent.prototype.down = /**
     * @param {?} e
     * @param {?} type
     * @return {?}
     */
    function (e, type) {
        e.stopPropagation();
        this._compute(type, 'down', ((/** @type {?} */ (e.target))).value);
    };
    /**
     * @private
     * @param {?} type
     * @param {?} dir
     * @param {?} tagVal
     * @return {?}
     */
    NumberRangeComponent.prototype._compute = /**
     * @private
     * @param {?} type
     * @param {?} dir
     * @param {?} tagVal
     * @return {?}
     */
    function (type, dir, tagVal) {
        /** @type {?} */
        var m = dir === 'up' ? 'plus' : 'minus';
        // if (type === 'begin' && this.isDisableOfBtn(dir, this.prevValue)) {
        //     const bv = tagVal || 0;
        //     const ev = this.getRealValue(this.nextValue);
        //     const r = new BigNumber(bv)[m](Number(this.step));
        //     let v = r.toFixed();
        //     const minValue = BigNumber.min(v, ev);
        //     if (!minValue.eq(v) && !this.isEmpty(ev)) {
        //         v = ev;
        //     }
        //     this._beginValue = v;
        //     // this.prevValue = this.format(v);
        //     this.inputPrev.nativeElement.value = v;
        //     this.onModelChange(v, type);
        //     this.beginValueChange.emit(v);
        // } else if (type === 'end' && this.isDisableOfBtn(dir, this.nextValue)) {
        //     const bv = this.getRealValue(this.prevValue);
        //     const ev = tagVal || 0;
        //     const r = new BigNumber(ev)[m](Number(this.step));
        //     let v = r.toFixed();
        //     const maxValue = BigNumber.max(bv, v);
        //     if (!maxValue.eq(v) && !this.isEmpty(bv)) {
        //         v = bv;
        //     }
        //     this._endValue = v;
        //     // this.nextValue = this.format(v);
        //     this.inputNext.nativeElement.value = v;
        //     this.onModelChange(v, type);
        //     this.endValueChange.emit(v);
        // }
        if (type === 'begin' && this.isDisableOfBtn(dir, this.prevValue)) {
            /** @type {?} */
            var tmpValue = this.inputPrev.nativeElement.value;
            /** @type {?} */
            var nextVal = this.getEndValue();
            /** @type {?} */
            var bv = this.cleanNumString(tmpValue) || 0;
            /** @type {?} */
            var r = new BigNumber(bv)[m](Number(this.step));
            /** @type {?} */
            var v = r.toFixed();
            /** @type {?} */
            var minValue = this.isEmpty(v)
                ? ''
                : this.isEmpty(nextVal)
                    ? v
                    : BigNumber.min(v, nextVal).toFixed();
            this.beginValue = this.validInterval(new BigNumber(minValue), false).toFixed();
            this.inputPrev.nativeElement.value = this.prevValue;
            this.onModelChange(this._beginValue, type);
            this.beginValueChange.emit(this._beginValue);
        }
        else if (type === 'end' && this.isDisableOfBtn(dir, this.nextValue)) {
            /** @type {?} */
            var tmpValue = this.inputNext.nativeElement.value;
            /** @type {?} */
            var beginVal = this.getBeginValue();
            /** @type {?} */
            var bv = this.cleanNumString(tmpValue) || 0;
            /** @type {?} */
            var r = new BigNumber(bv)[m](Number(this.step));
            /** @type {?} */
            var v = r.toFixed();
            /** @type {?} */
            var maxValue = this.isEmpty(v)
                ? ''
                : this.isEmpty(beginVal)
                    ? v
                    : BigNumber.max(v, beginVal).toFixed();
            this.endValue = this.validInterval(new BigNumber(maxValue), false).toFixed();
            this.inputNext.nativeElement.value = this.nextValue;
            this.onModelChange(this._endValue, type);
            this.endValueChange.emit(this._endValue);
        }
        this.valueChange.emit(this.value);
        this.expendWidth(type, 3);
    };
    NumberRangeComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-number-range',
                    template: "<div\r\n    class=\"input-group number-range f-cmp-number-spinner\"\r\n    [ngClass]=\"{\r\n        'f-state-disabled': disabled,\r\n        'f-state-readonly': readonly\r\n    }\"\r\n    (click)=\"$event.stopPropagation()\" (mouseenter)=\"onMouseEnter($event)\"\r\n>\r\n    <div class=\"form-control input-container\"\r\n        #popover=\"bs-popover\"\r\n        farrisPopover\r\n        [popover]=\"popValue\"\r\n        [triggers]=\"'hover'\"\r\n        [popActive]=\"isActiveTip\"\r\n        [showAction]=\"'show2'\"\r\n        [container]=\"'body'\"\r\n    >\r\n        <div class=\"sub-input-group\" #prevWrapper>\r\n            <input\r\n                type=\"text\"\r\n                number-only\r\n                [precision]=\"precision\"\r\n                autocomplete=\"off\"\r\n                class=\"sub-input form-control f-state-focus f-state-hover\"\r\n                [(ngModel)]=\"prevValue\"\r\n                #inputPrev\r\n                (blur)=\"onBlur(inputPrev, 'begin')\"\r\n                (focus)=\"onFocus('begin')\"\r\n                (ngModelChange)=\"onModelChange($event, 'begin')\"\r\n                [placeholder]=\"disabled || readonly ?'':beginPlaceHolder\"\r\n                [readOnly]=\"disabled || readonly ? 'readonly' : ''\"\r\n                [style.text-align]=\"textAlign\"\r\n                (keydown)=\"onKeyDownRange($event, 'begin')\"\r\n                (click)=\"onClick($event)\"\r\n            />\r\n            <div class=\"input-group-append btn-group btn-group-number sub-btn-group\" *ngIf=\"!readonly && !disabled && showButton\">\r\n                <span class=\"icon k-i-arrow-chevron-up number-arrow-chevron\" [style.cursor]=\"isDisableOfBtn('up', prevValue) ? 'pointer' : 'not-allowed'\"\r\n                    (click)=\"up($event, 'begin')\"></span>\r\n                <span class=\"icon k-i-arrow-chevron-down number-arrow-chevron\" [style.cursor]=\"isDisableOfBtn('down', prevValue) ? 'pointer' : 'not-allowed'\"\r\n                    (click)=\"down($event, 'begin')\"></span>\r\n            </div>\r\n        </div>\r\n        <span class=\"spliter\">~</span>\r\n        <div class=\"sub-input-group\" #nextWrapper>\r\n            <input\r\n                type=\"text\"\r\n                number-only\r\n                [precision]=\"precision\"\r\n                autocomplete=\"off\"\r\n                class=\"sub-input form-control f-state-focus f-state-hover\"\r\n                [(ngModel)]=\"nextValue\"\r\n                #inputNext\r\n                (blur)=\"onBlur(inputNext, 'end')\"\r\n                (focus)=\"onFocus('end')\"\r\n                (ngModelChange)=\"onModelChange($event, 'end')\"\r\n                [placeholder]=\"disabled || readonly ?'':endPlaceHolder\"\r\n                [readOnly]=\"disabled || readonly ? 'readonly' : ''\"\r\n                [style.text-align]=\"textAlign\"\r\n                (keydown)=\"onKeyDownRange($event, 'end')\"\r\n                (click)=\"onClick($event)\"\r\n            />\r\n            <div class=\"input-group-append btn-group btn-group-number sub-btn-group\" *ngIf=\"!readonly && !disabled  && showButton\"[style.text-align]=\"textAlign\" style=\"border-right:0\">\r\n                    <span class=\"icon k-i-arrow-chevron-up number-arrow-chevron\"  [style.cursor]=\"isDisableOfBtn('up', nextValue) ? 'pointer' : 'not-allowed'\"\r\n                        (click)=\"up($event, 'end')\"></span>\r\n                    <span class=\"icon k-i-arrow-chevron-down number-arrow-chevron\"\r\n                        [style.cursor]=\"isDisableOfBtn('down', nextValue) ? 'pointer' : 'not-allowed'\"\r\n                        (click)=\"down($event, 'end')\"></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return NumberRangeComponent; })),
                            multi: true
                        }
                    ],
                    styles: [".input-group .btn-group-number{height:1.50003rem;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;background-color:#fff;border-left:1px solid #d9d9d9;width:1.50003rem}.input-group .btn-group-number .number-arrow-chevron{-webkit-box-flex:1;flex:1;line-height:1;height:50%;text-align:center}.input-group .btn-group-number .number-arrow-chevron:active{background-color:#e6e9f0}.input-group .btn-group-number .number-arrow-chevron:nth-child(2){border-top:1px solid #d9d9d9}input::-webkit-inner-spin-button,input::-webkit-outer-spin-button{-webkit-appearance:none!important;margin:0}.number-range{position:relative}.number-range .input-container{display:-webkit-box;display:flex;padding:0}.number-range .input-container .sub-input-group{-webkit-box-flex:1;flex:1;position:relative;display:-webkit-box;display:flex;-webkit-transition:.3s ease-out;transition:.3s ease-out}.number-range .input-container .sub-input-group .sub-input{width:100%;border:none;outline:0;background-color:rgba(0,0,0,0);min-width:2px;padding:.125rem 4px .125rem .5rem}.number-range .input-container .spliter{width:15px;text-align:center}"]
                }] }
    ];
    NumberRangeComponent.propDecorators = {
        beginPlaceHolder: [{ type: Input }],
        endPlaceHolder: [{ type: Input }],
        inputPrev: [{ type: ViewChild, args: ['inputPrev',] }],
        inputNext: [{ type: ViewChild, args: ['inputNext',] }],
        prevWrapper: [{ type: ViewChild, args: ['prevWrapper',] }],
        nextWrapper: [{ type: ViewChild, args: ['nextWrapper',] }],
        popover: [{ type: ViewChild, args: ['popover',] }],
        separator: [{ type: Input }],
        beginValue: [{ type: Input }],
        endValue: [{ type: Input }],
        value: [{ type: Input }],
        beginValueChange: [{ type: Output }],
        endValueChange: [{ type: Output }]
    };
    return NumberRangeComponent;
}(NumberSpinnerComponent));
export { NumberRangeComponent };
if (false) {
    /** @type {?} */
    NumberRangeComponent.prototype.beginPlaceHolder;
    /** @type {?} */
    NumberRangeComponent.prototype.endPlaceHolder;
    /** @type {?} */
    NumberRangeComponent.prototype.inputPrev;
    /** @type {?} */
    NumberRangeComponent.prototype.inputNext;
    /** @type {?} */
    NumberRangeComponent.prototype.prevWrapper;
    /** @type {?} */
    NumberRangeComponent.prototype.nextWrapper;
    /** @type {?} */
    NumberRangeComponent.prototype.popover;
    /** @type {?} */
    NumberRangeComponent.prototype.separator;
    /**
     * @type {?}
     * @private
     */
    NumberRangeComponent.prototype.__value;
    /** @type {?} */
    NumberRangeComponent.prototype.beginValueChange;
    /** @type {?} */
    NumberRangeComponent.prototype.endValueChange;
    /** @type {?} */
    NumberRangeComponent.prototype.prevValue;
    /** @type {?} */
    NumberRangeComponent.prototype.nextValue;
    /**
     * @type {?}
     * @private
     */
    NumberRangeComponent.prototype._beginValue;
    /**
     * @type {?}
     * @private
     */
    NumberRangeComponent.prototype._endValue;
    /**
     * @type {?}
     * @private
     */
    NumberRangeComponent.prototype.documentClick;
    /**
     * @type {?}
     * @private
     */
    NumberRangeComponent.prototype.focusState;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVyLXJhbmdlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktbnVtYmVyLXNwaW5uZXIvIiwic291cmNlcyI6WyJsaWIvbnVtYmVyLXJhbmdlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFFekMsT0FBTyxFQUNILFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFDckIsU0FBUyxFQUFFLFVBQVUsRUFDcEMsWUFBWSxFQUdmLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXREO0lBWTBDLGdEQUFzQjtJQVpoRTtRQUFBLHFFQXFYQztRQXZXWSxzQkFBZ0IsR0FBRyxFQUFFLENBQUM7UUFDdEIsb0JBQWMsR0FBRyxFQUFFLENBQUM7UUFRcEIsZUFBUyxHQUFHLEdBQUcsQ0FBQztRQWdCakIsYUFBTyxHQUFHLEVBQUUsQ0FBQztRQVlYLHNCQUFnQixHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDdEMsb0JBQWMsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDOztRQUc5QyxlQUFTLEdBQVEsRUFBRSxDQUFDOztRQUVwQixlQUFTLEdBQVEsRUFBRSxDQUFDO1FBRVosaUJBQVcsR0FBRyxFQUFFLENBQUM7UUFDakIsZUFBUyxHQUFHLEVBQUUsQ0FBQztRQW9CZixnQkFBVSxHQUFHO1lBQ2pCLE9BQU8sRUFBRSxLQUFLO1lBQ2QsTUFBTSxFQUFFLEVBQUUsQ0FBSSxjQUFjO1NBQy9CLENBQUM7O1FBZ1NGLFlBQVk7SUFFaEIsQ0FBQztJQTVWRyxzQkFDSSw0Q0FBVTs7Ozs7UUFEZCxV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QkFDckIsU0FBUyxTQUFDLFdBQVc7OEJBQ3JCLFNBQVMsU0FBQyxhQUFhOzhCQUN2QixTQUFTLFNBQUMsYUFBYTswQkFDdkIsU0FBUyxTQUFDLFNBQVM7NEJBRW5CLEtBQUs7NkJBRUwsS0FBSzsyQkFPTCxLQUFLO3dCQVFMLEtBQUs7bUNBV0wsTUFBTTtpQ0FDTixNQUFNOztJQWlVWCwyQkFBQztDQUFBLEFBclhELENBWTBDLHNCQUFzQixHQXlXL0Q7U0F6V1ksb0JBQW9COzs7SUFFN0IsZ0RBQStCOztJQUMvQiw4Q0FBNkI7O0lBRTdCLHlDQUE4Qzs7SUFDOUMseUNBQThDOztJQUM5QywyQ0FBa0Q7O0lBQ2xELDJDQUFrRDs7SUFDbEQsdUNBQWdEOztJQUVoRCx5Q0FBeUI7Ozs7O0lBZ0J6Qix1Q0FBcUI7O0lBWXJCLGdEQUFnRDs7SUFDaEQsOENBQThDOztJQUc5Qyx5Q0FBb0I7O0lBRXBCLHlDQUFvQjs7Ozs7SUFFcEIsMkNBQXlCOzs7OztJQUN6Qix5Q0FBdUI7Ozs7O0lBbUJ2Qiw2Q0FBc0I7Ozs7O0lBQ3RCLDBDQUdFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmlnTnVtYmVyIH0gZnJvbSAnYmlnbnVtYmVyLmpzJztcclxuXHJcbmltcG9ydCB7XHJcbiAgICBDb21wb25lbnQsIGZvcndhcmRSZWYsIElucHV0LCBPdXRwdXQsXHJcbiAgICBBZnRlclZpZXdJbml0LCBWaWV3Q2hpbGQsIEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgU2ltcGxlQ2hhbmdlcyxcclxuICAgIEV2ZW50RW1pdHRlcixcclxuICAgIE9uSW5pdCxcclxuICAgIE9uQ2hhbmdlc1xyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOR19WQUxVRV9BQ0NFU1NPUiB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgTnVtYmVyU3Bpbm5lckNvbXBvbmVudCB9IGZyb20gJy4vbnVtYmVyLXNwaW5uZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUG9wb3ZlckRpcmVjdGl2ZSB9IGZyb20gJ0BmYXJyaXMvdWktcG9wb3Zlcic7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnZmFycmlzLW51bWJlci1yYW5nZScsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vbnVtYmVyLXJhbmdlLmNvbXBvbmVudC5odG1sJyxcclxuICAgIHN0eWxlVXJsczogWycuL251bWJlci5jb21wb25lbnQuc2NzcyddLFxyXG4gICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcclxuICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gTnVtYmVyUmFuZ2VDb21wb25lbnQpLFxyXG4gICAgICAgICAgICBtdWx0aTogdHJ1ZVxyXG4gICAgICAgIH1cclxuICAgIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIE51bWJlclJhbmdlQ29tcG9uZW50IGV4dGVuZHMgTnVtYmVyU3Bpbm5lckNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSwgT25Jbml0LCBPbkNoYW5nZXMge1xyXG5cclxuICAgIEBJbnB1dCgpIGJlZ2luUGxhY2VIb2xkZXIgPSAnJztcclxuICAgIEBJbnB1dCgpIGVuZFBsYWNlSG9sZGVyID0gJyc7XHJcblxyXG4gICAgQFZpZXdDaGlsZCgnaW5wdXRQcmV2JykgaW5wdXRQcmV2OiBFbGVtZW50UmVmO1xyXG4gICAgQFZpZXdDaGlsZCgnaW5wdXROZXh0JykgaW5wdXROZXh0OiBFbGVtZW50UmVmO1xyXG4gICAgQFZpZXdDaGlsZCgncHJldldyYXBwZXInKSBwcmV2V3JhcHBlcjogRWxlbWVudFJlZjtcclxuICAgIEBWaWV3Q2hpbGQoJ25leHRXcmFwcGVyJykgbmV4dFdyYXBwZXI6IEVsZW1lbnRSZWY7XHJcbiAgICBAVmlld0NoaWxkKCdwb3BvdmVyJykgcG9wb3ZlcjogUG9wb3ZlckRpcmVjdGl2ZTtcclxuXHJcbiAgICBASW5wdXQoKSBzZXBhcmF0b3IgPSAnfic7XHJcblxyXG4gICAgQElucHV0KClcclxuICAgIHNldCBiZWdpblZhbHVlKHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5wcmV2VmFsdWUgPSB0aGlzLmZvcm1hdCh2YWx1ZSk7XHJcbiAgICAgICAgLy8g5byA5aeL55yf5a6e5pWw5YC8XHJcbiAgICAgICAgdGhpcy5fYmVnaW5WYWx1ZSA9IHRoaXMuaXNFbXB0eSh2YWx1ZSkgPyAnJyA6IHZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIEBJbnB1dCgpXHJcbiAgICBzZXQgZW5kVmFsdWUodmFsdWUpIHtcclxuICAgICAgICB0aGlzLm5leHRWYWx1ZSA9IHRoaXMuZm9ybWF0KHZhbHVlKTtcclxuICAgICAgICAvLyDnu5PmnZ/nnJ/lrp7mlbDlgLxcclxuICAgICAgICB0aGlzLl9lbmRWYWx1ZSA9IHRoaXMuaXNFbXB0eSh2YWx1ZSkgPyAnJyA6IHZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgX192YWx1ZSA9ICcnO1xyXG4gICAgQElucHV0KClcclxuICAgIGdldCB2YWx1ZSgpOiBhbnkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9fdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IHZhbHVlKHY6IGFueSkge1xyXG4gICAgICAgIGlmICh2ICE9PSB0aGlzLl9fdmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5fX3ZhbHVlID0gdiA9PT0gJ34nID8gJycgOiB2O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAT3V0cHV0KCkgYmVnaW5WYWx1ZUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSBlbmRWYWx1ZUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgICAvKiDlvIDlp4vmlbDlrZflsZXnpLrlgLwgKi9cclxuICAgIHByZXZWYWx1ZTogYW55ID0gJyc7XHJcbiAgICAvKiDnu5PmnZ/mlbDlrZflsZXnpLrlgLwgKi9cclxuICAgIG5leHRWYWx1ZTogYW55ID0gJyc7XHJcblxyXG4gICAgcHJpdmF0ZSBfYmVnaW5WYWx1ZSA9ICcnO1xyXG4gICAgcHJpdmF0ZSBfZW5kVmFsdWUgPSAnJztcclxuICAgIGdldCBwcmVOdW1WYWx1ZSgpIHtcclxuICAgICAgICBjb25zdCB2ID0gdGhpcy5nZXRSZWFsVmFsdWUodGhpcy5wYXJzZXIgPyB0aGlzLnByZXZWYWx1ZSA6IHRoaXMuX2JlZ2luVmFsdWUpO1xyXG4gICAgICAgIGlmICh0aGlzLmNhbk51bGwgJiYgdGhpcy5pc0VtcHR5KHYpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnJztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gdiB8fCAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBnZXQgbmV4dE51bVZhbHVlKCkge1xyXG4gICAgICAgIGNvbnN0IHYgPSB0aGlzLmdldFJlYWxWYWx1ZSh0aGlzLnBhcnNlciA/IHRoaXMubmV4dFZhbHVlIDogdGhpcy5fZW5kVmFsdWUpO1xyXG4gICAgICAgIGlmICh0aGlzLmNhbk51bGwgJiYgdGhpcy5pc0VtcHR5KHYpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnJztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gdiB8fCAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGRvY3VtZW50Q2xpY2s7XHJcbiAgICBwcml2YXRlIGZvY3VzU3RhdGUgPSB7XHJcbiAgICAgICAgaXNGb2N1czogZmFsc2UsXHJcbiAgICAgICAgdGFyZ2V0OiAnJyAgICAvLyBiZWdpbiB8IGVuZFxyXG4gICAgfTtcclxuXHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5uZ09uSW5pdCgpO1xyXG4gICAgICAgIHRoaXMuc2hvd0J1dHRvbiA9IGZhbHNlO1xyXG5cclxuICAgICAgICB0aGlzLmluaXRQbGFjZUhvbGRlckluZm8oKTtcclxuICAgIH1cclxuXHJcbiAgICBuZ0FmdGVyVmlld0luaXQoKSB7XHJcbiAgICAgICAgdGhpcy5kb2N1bWVudENsaWNrID0gdGhpcy5yZW5kZXIubGlzdGVuKGRvY3VtZW50LCAnY2xpY2snLCBlID0+IHtcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXIuc2V0U3R5bGUodGhpcy5wcmV2V3JhcHBlci5uYXRpdmVFbGVtZW50LCAnZmxleCcsIDEpO1xyXG4gICAgICAgICAgICB0aGlzLnJlbmRlci5zZXRTdHlsZSh0aGlzLm5leHRXcmFwcGVyLm5hdGl2ZUVsZW1lbnQsICdmbGV4JywgMSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLm5nT25DaGFuZ2VzKGNoYW5nZXMpO1xyXG4gICAgICAgIGlmIChjaGFuZ2VzLnZhbHVlICYmICFjaGFuZ2VzLnZhbHVlLmlzRmlyc3RDaGFuZ2UoKSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFZhbHVlKGNoYW5nZXMudmFsdWUuY3VycmVudFZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZG9jdW1lbnRDbGljaykge1xyXG4gICAgICAgICAgICB0aGlzLmRvY3VtZW50Q2xpY2soKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBpbml0UGxhY2VIb2xkZXJJbmZvKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5iZWdpblBsYWNlSG9sZGVyKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYmVnaW5QbGFjZUhvbGRlciA9IHRoaXMubG9jYWxlU2VydmljZS5nZXRWYWx1ZSgnbnVtYmVyU3Bpbm5lci5yYW5nZS5iZWdpbicpIHx8IHRoaXMucGxhY2Vob2xkZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghdGhpcy5lbmRQbGFjZUhvbGRlcikge1xyXG4gICAgICAgICAgICB0aGlzLmVuZFBsYWNlSG9sZGVyID0gIHRoaXMubG9jYWxlU2VydmljZS5nZXRWYWx1ZSgnbnVtYmVyU3Bpbm5lci5yYW5nZS5lbmQnKSB8fCB0aGlzLnBsYWNlaG9sZGVyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGdldFJhbmdlVmFsdWUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucHJlTnVtVmFsdWUgKyB0aGlzLnNlcGFyYXRvciArIHRoaXMubmV4dE51bVZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgZ2V0RW5kVmFsdWUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UmVhbFZhbHVlKHRoaXMubmV4dFZhbHVlKTtcclxuICAgIH1cclxuICAgIHByaXZhdGUgZ2V0QmVnaW5WYWx1ZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5nZXRSZWFsVmFsdWUodGhpcy5wcmV2VmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFJlYWxWYWx1ZSh2YWw6IGFueSkge1xyXG4gICAgICAgIGlmICh0aGlzLnBhcnNlcikge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wYXJzZXIodmFsKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IF9uID0gdGhpcy52YWxpZEludGVydmFsKG5ldyBCaWdOdW1iZXIodmFsKSwgZmFsc2UpO1xyXG4gICAgICAgIGlmIChfbi5pc05hTigpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG1pbkJpZ051bSA9IG5ldyBCaWdOdW1iZXIoJycgKyB0aGlzLm1pbik7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmNhbk51bGwgfHwgbWluQmlnTnVtLmlzTmFOKCkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgX24gPSBtaW5CaWdOdW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRSZWFsVmFsdWUoX24pIGFzIGFueTtcclxuICAgIH1cclxuXHJcbiAgICBvbk1vZGVsQ2hhbmdlKHZhbCwgdHlwZT86IHN0cmluZykge1xyXG4gICAgICAgIGlmICh0eXBlID09PSAnYmVnaW4nKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2JlZ2luVmFsdWUgPSB2YWw7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAnZW5kJykge1xyXG4gICAgICAgICAgICB0aGlzLl9lbmRWYWx1ZSA9IHZhbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy52YWx1ZSA9IHRoaXMuZ2V0UmFuZ2VWYWx1ZSgpO1xyXG4gICAgICAgIHRoaXMub25DaGFuZ2VDYWxsYmFjayh0aGlzLnZhbHVlKTtcclxuICAgICAgICB0aGlzLm9uVG91Y2hlZENhbGxiYWNrKCk7XHJcblxyXG4gICAgICAgIHRoaXMudmFsdWVDaGFuZ2UuZW1pdCh0aGlzLnZhbHVlKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkNsaWNrKCRldmVudCkge1xyXG4gICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkJsdXIoZTogYW55LCB0eXBlOiBzdHJpbmcpIHtcclxuICAgICAgICBpZiAoIXRoaXMucmVhZG9ubHkgJiYgIXRoaXMuZGlzYWJsZWQpIHtcclxuICAgICAgICAgICAgY29uc3QgdG1wVmFsdWUgPSBlLnZhbHVlO1xyXG4gICAgICAgICAgICB0aGlzLmZvY3VzU3RhdGUgPSB7IGlzRm9jdXM6IGZhbHNlLCB0YXJnZXQ6IHR5cGUgfTtcclxuICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdiZWdpbicpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG5leHRWYWwgPSB0aGlzLmdldEVuZFZhbHVlKCk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBtaW5WYWx1ZSA9IHRoaXMuaXNFbXB0eSh0bXBWYWx1ZSlcclxuICAgICAgICAgICAgICAgICAgICA/ICcnXHJcbiAgICAgICAgICAgICAgICAgICAgOiB0aGlzLmlzRW1wdHkobmV4dFZhbClcclxuICAgICAgICAgICAgICAgICAgICAgICAgPyB0bXBWYWx1ZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICA6IEJpZ051bWJlci5taW4odG1wVmFsdWUsIG5leHRWYWwpLnRvRml4ZWQoKTtcclxuICAgICAgICAgICAgICAgIC8vIHRoaXMucHJldlZhbHVlID0gdGhpcy5mb3JtYXQobWluVmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5iZWdpblZhbHVlID0gdGhpcy52YWxpZEludGVydmFsKG5ldyBCaWdOdW1iZXIobWluVmFsdWUpLCBmYWxzZSkudG9GaXhlZCgpO1xyXG4gICAgICAgICAgICAgICAgLy8gdGhpcy5iZWdpblZhbHVlID0gdGhpcy5nZXRSZWFsVmFsdWUodGhpcy5wcmV2VmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pbnB1dFByZXYubmF0aXZlRWxlbWVudC52YWx1ZSA9IHRoaXMucHJldlZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vbk1vZGVsQ2hhbmdlKHRoaXMuX2JlZ2luVmFsdWUsIHR5cGUpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgYmVnaW5WYWwgPSB0aGlzLmdldEJlZ2luVmFsdWUoKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG1heFZhbHVlID0gdGhpcy5pc0VtcHR5KHRtcFZhbHVlKVxyXG4gICAgICAgICAgICAgICAgICAgID8gJydcclxuICAgICAgICAgICAgICAgICAgICA6IHRoaXMuaXNFbXB0eShiZWdpblZhbClcclxuICAgICAgICAgICAgICAgICAgICAgICAgPyB0bXBWYWx1ZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICA6IEJpZ051bWJlci5tYXgodG1wVmFsdWUsIGJlZ2luVmFsKS50b0ZpeGVkKCk7XHJcbiAgICAgICAgICAgICAgICAvLyB0aGlzLm5leHRWYWx1ZSA9IHRoaXMuZm9ybWF0KG1heFZhbHVlKTtcclxuICAgICAgICAgICAgICAgIC8vIHRoaXMuZW5kVmFsdWUgPSB0aGlzLmdldFJlYWxWYWx1ZSh0aGlzLm5leHRWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVuZFZhbHVlID0gdGhpcy52YWxpZEludGVydmFsKG5ldyBCaWdOdW1iZXIobWF4VmFsdWUpLCBmYWxzZSkudG9GaXhlZCgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pbnB1dE5leHQubmF0aXZlRWxlbWVudC52YWx1ZSA9IHRoaXMubmV4dFZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vbk1vZGVsQ2hhbmdlKHRoaXMuX2VuZFZhbHVlLCB0eXBlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy52YWx1ZUNoYW5nZS5lbWl0KHRoaXMudmFsdWUpO1xyXG4gICAgICAgIGlmICh0eXBlID09PSAnYmVnaW4nKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYmVnaW5WYWx1ZUNoYW5nZS5lbWl0KHRoaXMucHJlTnVtVmFsdWUpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuZW5kVmFsdWVDaGFuZ2UuZW1pdCh0aGlzLm5leHROdW1WYWx1ZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmJsdXIuZW1pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uRm9jdXModHlwZT86IHN0cmluZykge1xyXG4gICAgICAgIGlmICghdGhpcy5yZWFkb25seSAmJiAhdGhpcy5kaXNhYmxlZCkge1xyXG4gICAgICAgICAgICB0aGlzLmZvY3VzU3RhdGUgPSB7IGlzRm9jdXM6IHRydWUsIHRhcmdldDogdHlwZSB9O1xyXG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gJ2JlZ2luJykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pbnB1dFByZXYubmF0aXZlRWxlbWVudC52YWx1ZSA9IHRoaXMuX2JlZ2luVmFsdWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmlucHV0UHJldi5uYXRpdmVFbGVtZW50LnNldFNlbGVjdGlvblJhbmdlKDAsIHRoaXMuX2JlZ2luVmFsdWUubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZXhwZW5kV2lkdGgoJ2JlZ2luJywgMyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmlucHV0TmV4dC5uYXRpdmVFbGVtZW50LnZhbHVlID0gdGhpcy5fZW5kVmFsdWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmlucHV0TmV4dC5uYXRpdmVFbGVtZW50LnNldFNlbGVjdGlvblJhbmdlKDAsIHRoaXMuX2VuZFZhbHVlLmxlbmd0aCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmV4cGVuZFdpZHRoKCdlbmQnLCAzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5mb2N1cy5lbWl0KHR5cGUpO1xyXG4gICAgfVxyXG5cclxuICAgIGV4cGVuZFdpZHRoKHdoaWNoOiBzdHJpbmcsIG51bTogbnVtYmVyKSB7XHJcbiAgICAgICAgbGV0IHRhcmdldDogRWxlbWVudDtcclxuICAgICAgICBsZXQgb3RoZXI6IEVsZW1lbnQ7XHJcbiAgICAgICAgaWYgKHdoaWNoID09PSAnYmVnaW4nKSB7XHJcbiAgICAgICAgICAgIHRhcmdldCA9IHRoaXMucHJldldyYXBwZXIubmF0aXZlRWxlbWVudDtcclxuICAgICAgICAgICAgb3RoZXIgPSB0aGlzLm5leHRXcmFwcGVyLm5hdGl2ZUVsZW1lbnQ7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGFyZ2V0ID0gdGhpcy5uZXh0V3JhcHBlci5uYXRpdmVFbGVtZW50O1xyXG4gICAgICAgICAgICBvdGhlciA9IHRoaXMucHJldldyYXBwZXIubmF0aXZlRWxlbWVudDtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgeyB3aWR0aCB9ID0gdGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgICAgIGlmICh3aWR0aCA8IDE1MCkge1xyXG4gICAgICAgICAgICB0aGlzLnJlbmRlci5zZXRTdHlsZSh0YXJnZXQsICdmbGV4JywgbnVtKTtcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXIuc2V0U3R5bGUob3RoZXIsICdmbGV4JywgMSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uTW91c2VFbnRlcihldmVudCkge1xyXG4gICAgICAgIHRoaXMuaXNBY3RpdmVUaXAgPSB0aGlzLmlzU2hvd1BvcG92ZXIoKTtcclxuICAgICAgICBpZiAodGhpcy5uZXh0VmFsdWUgJiYgdGhpcy5wcmV2VmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5wb3BWYWx1ZSA9IHRoaXMucHJldlZhbHVlICsgJ34nICsgdGhpcy5uZXh0VmFsdWU7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5wb3BWYWx1ZSA9ICcnO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpc1Nob3dQb3BvdmVyKCkge1xyXG4gICAgICAgIGNvbnN0IHsgd2lkdGggfSA9IHRoaXMuZWwubmF0aXZlRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICBpZiAod2lkdGggJiYgd2lkdGggPCAyMDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBvbktleURvd25SYW5nZSgkZXZlbnQ6IEtleWJvYXJkRXZlbnQsIHR5cDogJ2JlZ2luJ3wnZW5kJykge1xyXG4gICAgICAgIGlmICgkZXZlbnQua2V5ID09PSAnQXJyb3dEb3duJykge1xyXG4gICAgICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgdGhpcy5kb3duKCRldmVudCwgdHlwKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICgkZXZlbnQua2V5ID09PSAnQXJyb3dVcCcpIHtcclxuICAgICAgICAgICAgJGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHRoaXMudXAoJGV2ZW50LCB0eXApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgfVxyXG5cclxuICAgIHdyaXRlVmFsdWUodmFsOiBhbnkpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNldFZhbHVlKHZhbCk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0VmFsdWUodmFsOiBhbnkpIHtcclxuICAgICAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgICAgY29uc3QgdmFsQXJyID0gdmFsLnNwbGl0KHRoaXMuc2VwYXJhdG9yKTtcclxuICAgICAgICAgICAgdGhpcy5fYmVnaW5WYWx1ZSA9IHZhbEFyclswXSA/IHZhbEFyclswXSA6ICcnO1xyXG4gICAgICAgICAgICB0aGlzLl9lbmRWYWx1ZSA9IHZhbEFyclsxXSA/IHZhbEFyclsxXSA6ICcnO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2JlZ2luVmFsdWUgPSAnJztcclxuICAgICAgICAgICAgdGhpcy5fYmVnaW5WYWx1ZSA9ICcnO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnByZXZWYWx1ZSA9IHRoaXMuZm9ybWF0KHRoaXMuX2JlZ2luVmFsdWUpO1xyXG4gICAgICAgIHRoaXMubmV4dFZhbHVlID0gdGhpcy5mb3JtYXQodGhpcy5fZW5kVmFsdWUpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvLyNyZWdpb24g5LiK5LiL5pON5L2c5oyJ6ZKuIOaIliDkuIrkuIvmlrnlkJHplK5cclxuICAgIHVwKGU6IEV2ZW50LCB0eXBlOiBzdHJpbmcpIHtcclxuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgIHRoaXMuX2NvbXB1dGUodHlwZSwgJ3VwJywgKGUudGFyZ2V0IGFzIGFueSkudmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIGRvd24oZTogRXZlbnQsIHR5cGU6IHN0cmluZykge1xyXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgdGhpcy5fY29tcHV0ZSh0eXBlLCAnZG93bicsIChlLnRhcmdldCBhcyBhbnkpLnZhbHVlKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIF9jb21wdXRlKHR5cGU6IHN0cmluZywgZGlyOiAndXAnIHwgJ2Rvd24nLCB0YWdWYWwpIHtcclxuICAgICAgICBjb25zdCBtID0gZGlyID09PSAndXAnID8gJ3BsdXMnIDogJ21pbnVzJztcclxuICAgICAgICAvLyBpZiAodHlwZSA9PT0gJ2JlZ2luJyAmJiB0aGlzLmlzRGlzYWJsZU9mQnRuKGRpciwgdGhpcy5wcmV2VmFsdWUpKSB7XHJcbiAgICAgICAgLy8gICAgIGNvbnN0IGJ2ID0gdGFnVmFsIHx8IDA7XHJcbiAgICAgICAgLy8gICAgIGNvbnN0IGV2ID0gdGhpcy5nZXRSZWFsVmFsdWUodGhpcy5uZXh0VmFsdWUpO1xyXG4gICAgICAgIC8vICAgICBjb25zdCByID0gbmV3IEJpZ051bWJlcihidilbbV0oTnVtYmVyKHRoaXMuc3RlcCkpO1xyXG4gICAgICAgIC8vICAgICBsZXQgdiA9IHIudG9GaXhlZCgpO1xyXG4gICAgICAgIC8vICAgICBjb25zdCBtaW5WYWx1ZSA9IEJpZ051bWJlci5taW4odiwgZXYpO1xyXG4gICAgICAgIC8vICAgICBpZiAoIW1pblZhbHVlLmVxKHYpICYmICF0aGlzLmlzRW1wdHkoZXYpKSB7XHJcbiAgICAgICAgLy8gICAgICAgICB2ID0gZXY7XHJcbiAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAvLyAgICAgdGhpcy5fYmVnaW5WYWx1ZSA9IHY7XHJcbiAgICAgICAgLy8gICAgIC8vIHRoaXMucHJldlZhbHVlID0gdGhpcy5mb3JtYXQodik7XHJcbiAgICAgICAgLy8gICAgIHRoaXMuaW5wdXRQcmV2Lm5hdGl2ZUVsZW1lbnQudmFsdWUgPSB2O1xyXG4gICAgICAgIC8vICAgICB0aGlzLm9uTW9kZWxDaGFuZ2UodiwgdHlwZSk7XHJcbiAgICAgICAgLy8gICAgIHRoaXMuYmVnaW5WYWx1ZUNoYW5nZS5lbWl0KHYpO1xyXG4gICAgICAgIC8vIH0gZWxzZSBpZiAodHlwZSA9PT0gJ2VuZCcgJiYgdGhpcy5pc0Rpc2FibGVPZkJ0bihkaXIsIHRoaXMubmV4dFZhbHVlKSkge1xyXG4gICAgICAgIC8vICAgICBjb25zdCBidiA9IHRoaXMuZ2V0UmVhbFZhbHVlKHRoaXMucHJldlZhbHVlKTtcclxuICAgICAgICAvLyAgICAgY29uc3QgZXYgPSB0YWdWYWwgfHwgMDtcclxuICAgICAgICAvLyAgICAgY29uc3QgciA9IG5ldyBCaWdOdW1iZXIoZXYpW21dKE51bWJlcih0aGlzLnN0ZXApKTtcclxuICAgICAgICAvLyAgICAgbGV0IHYgPSByLnRvRml4ZWQoKTtcclxuICAgICAgICAvLyAgICAgY29uc3QgbWF4VmFsdWUgPSBCaWdOdW1iZXIubWF4KGJ2LCB2KTtcclxuICAgICAgICAvLyAgICAgaWYgKCFtYXhWYWx1ZS5lcSh2KSAmJiAhdGhpcy5pc0VtcHR5KGJ2KSkge1xyXG4gICAgICAgIC8vICAgICAgICAgdiA9IGJ2O1xyXG4gICAgICAgIC8vICAgICB9XHJcbiAgICAgICAgLy8gICAgIHRoaXMuX2VuZFZhbHVlID0gdjtcclxuICAgICAgICAvLyAgICAgLy8gdGhpcy5uZXh0VmFsdWUgPSB0aGlzLmZvcm1hdCh2KTtcclxuICAgICAgICAvLyAgICAgdGhpcy5pbnB1dE5leHQubmF0aXZlRWxlbWVudC52YWx1ZSA9IHY7XHJcbiAgICAgICAgLy8gICAgIHRoaXMub25Nb2RlbENoYW5nZSh2LCB0eXBlKTtcclxuICAgICAgICAvLyAgICAgdGhpcy5lbmRWYWx1ZUNoYW5nZS5lbWl0KHYpO1xyXG4gICAgICAgIC8vIH1cclxuXHJcbiAgICAgICAgaWYgKHR5cGUgPT09ICdiZWdpbicgJiYgdGhpcy5pc0Rpc2FibGVPZkJ0bihkaXIsIHRoaXMucHJldlZhbHVlKSkge1xyXG4gICAgICAgICAgICBjb25zdCB0bXBWYWx1ZSA9IHRoaXMuaW5wdXRQcmV2Lm5hdGl2ZUVsZW1lbnQudmFsdWU7XHJcbiAgICAgICAgICAgIGNvbnN0IG5leHRWYWwgPSB0aGlzLmdldEVuZFZhbHVlKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGJ2ID0gdGhpcy5jbGVhbk51bVN0cmluZyh0bXBWYWx1ZSkgfHwgMDtcclxuICAgICAgICAgICAgY29uc3QgciA9IG5ldyBCaWdOdW1iZXIoYnYpW21dKE51bWJlcih0aGlzLnN0ZXApKTtcclxuICAgICAgICAgICAgbGV0IHYgPSByLnRvRml4ZWQoKTtcclxuICAgICAgICAgICBcclxuICAgICAgICAgICAgY29uc3QgbWluVmFsdWUgPSB0aGlzLmlzRW1wdHkodilcclxuICAgICAgICAgICAgICAgID8gJydcclxuICAgICAgICAgICAgICAgIDogdGhpcy5pc0VtcHR5KG5leHRWYWwpXHJcbiAgICAgICAgICAgICAgICAgICAgPyB2XHJcbiAgICAgICAgICAgICAgICAgICAgOiBCaWdOdW1iZXIubWluKHYsIG5leHRWYWwpLnRvRml4ZWQoKTtcclxuICAgICAgICAgICAgdGhpcy5iZWdpblZhbHVlID0gdGhpcy52YWxpZEludGVydmFsKG5ldyBCaWdOdW1iZXIobWluVmFsdWUpLCBmYWxzZSkudG9GaXhlZCgpO1xyXG4gICAgICAgICAgICB0aGlzLmlucHV0UHJldi5uYXRpdmVFbGVtZW50LnZhbHVlID0gdGhpcy5wcmV2VmFsdWU7XHJcbiAgICAgICAgICAgIHRoaXMub25Nb2RlbENoYW5nZSh0aGlzLl9iZWdpblZhbHVlLCB0eXBlKTtcclxuICAgICAgICAgICAgdGhpcy5iZWdpblZhbHVlQ2hhbmdlLmVtaXQodGhpcy5fYmVnaW5WYWx1ZSk7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAnZW5kJyAmJiB0aGlzLmlzRGlzYWJsZU9mQnRuKGRpciwgdGhpcy5uZXh0VmFsdWUpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHRtcFZhbHVlID0gdGhpcy5pbnB1dE5leHQubmF0aXZlRWxlbWVudC52YWx1ZTtcclxuICAgICAgICAgICAgY29uc3QgYmVnaW5WYWwgPSB0aGlzLmdldEJlZ2luVmFsdWUoKTtcclxuICAgICAgICAgICAgY29uc3QgYnYgPSB0aGlzLmNsZWFuTnVtU3RyaW5nKHRtcFZhbHVlKSB8fCAwO1xyXG4gICAgICAgICAgICBjb25zdCByID0gbmV3IEJpZ051bWJlcihidilbbV0oTnVtYmVyKHRoaXMuc3RlcCkpO1xyXG4gICAgICAgICAgICBsZXQgdiA9IHIudG9GaXhlZCgpO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgbWF4VmFsdWUgPSB0aGlzLmlzRW1wdHkodilcclxuICAgICAgICAgICAgICAgID8gJydcclxuICAgICAgICAgICAgICAgIDogdGhpcy5pc0VtcHR5KGJlZ2luVmFsKVxyXG4gICAgICAgICAgICAgICAgICAgID8gdlxyXG4gICAgICAgICAgICAgICAgICAgIDogQmlnTnVtYmVyLm1heCh2LCBiZWdpblZhbCkudG9GaXhlZCgpO1xyXG4gICAgICAgICAgICB0aGlzLmVuZFZhbHVlID0gdGhpcy52YWxpZEludGVydmFsKG5ldyBCaWdOdW1iZXIobWF4VmFsdWUpLCBmYWxzZSkudG9GaXhlZCgpO1xyXG4gICAgICAgICAgICB0aGlzLmlucHV0TmV4dC5uYXRpdmVFbGVtZW50LnZhbHVlID0gdGhpcy5uZXh0VmFsdWU7XHJcbiAgICAgICAgICAgIHRoaXMub25Nb2RlbENoYW5nZSh0aGlzLl9lbmRWYWx1ZSwgdHlwZSk7XHJcbiAgICAgICAgICAgIHRoaXMuZW5kVmFsdWVDaGFuZ2UuZW1pdCh0aGlzLl9lbmRWYWx1ZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLnZhbHVlQ2hhbmdlLmVtaXQodGhpcy52YWx1ZSk7XHJcbiAgICAgICAgdGhpcy5leHBlbmRXaWR0aCh0eXBlLCAzKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyNlbmRyZWdpb25cclxuXHJcbn1cclxuIl19