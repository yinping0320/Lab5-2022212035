{"version":3,"file":"farris-ui-number-spinner.js.map","sources":["ng://@farris/ui-number-spinner/lib/number-spinner.service.ts","ng://@farris/ui-number-spinner/lib/number-spinner.component.ts","ng://@farris/ui-number-spinner/lib/number-only-directive.ts","ng://@farris/ui-number-spinner/lib/number-range.component.ts","ng://@farris/ui-number-spinner/lib/number-spinner.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NumberSpinnerService {\r\n\r\n  constructor() { }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-05 10:26:50\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2020-11-16 11:43:34\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport {\r\n    Component, Input, Output, EventEmitter, forwardRef, OnInit, ViewChild, ElementRef, Injector, AfterViewInit,\r\n    Renderer2, OnDestroy, OnChanges, SimpleChanges, HostBinding, ChangeDetectorRef, HostListener\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, NgControl, NgModel, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { CommonUtils } from '@farris/ui-common';\r\n\r\n\r\nexport interface NumberFormatter {\r\n    /** åç½®ç¬¦å· */\r\n    prefix?: string;\r\n    /** åç¼ */\r\n    suffix?: string;\r\n    /** å°æ°ç¹ */\r\n    decimalSeparator?: string;\r\n    /** ååä½ç¬¦å· */\r\n    groupSeparator?: string;\r\n    /** ååä½åç» */\r\n    groupSize?: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'farris-number-spinner',\r\n    template: `\r\n        <div class=\"input-group  f-state-hover flex-row\"\r\n            [ngClass]=\"{'f-state-disabled': disabled,'f-state-readonly': readonly,'f-state-focus': isFocus }\"\r\n            (mouseenter)=\"onMouseEnter($event)\"\r\n            #popover=\"bs-popover\"\r\n            farrisPopover\r\n            [popover]=\"popValue\" [triggers]=\"'hover'\" [popActive]=\"isActiveTip\"\r\n            [showAction]=\"'show2'\"  [container]=\"'body'\">\r\n            <input #input\r\n                type=\"text\"\r\n                number-only\r\n                [precision]=\"precision\"\r\n                autocomplete=\"off\"\r\n                class=\"form-control f-utils-fill\"\r\n                [ngModel]=\"value\"\r\n                [placeholder]=\"disabled||readonly || !editable?'':placeholder\"\r\n                [readonly]=\"readonly || !editable\"\r\n                [disabled]=\"disabled\"\r\n                [style.padding-right]=\"'4px'\"\r\n                [style.text-align]=\"textAlign\"\r\n                (ngModelChange)=\"onModelChange($event)\"\r\n                (blur)=\"onBlur(input)\"\r\n                (focus)=\"onFocus($event)\"\r\n                (keydown)=\"onKeyDown($event)\"\r\n                (click)=\"onClick($event)\"\r\n            />\r\n            <div class=\"input-group-append btn-group btn-group-number m-0\" *ngIf=\"!disabled && !readonly && showButton\">\r\n                <span class=\"icon k-i-arrow-chevron-up number-arrow-chevron\" [style.cursor]=\"isDisableOfBtn('up') ? 'pointer' : 'not-allowed'\"\r\n                        (click)=\"up($event)\"></span>\r\n                <span class=\"icon k-i-arrow-chevron-down number-arrow-chevron\" [style.cursor]=\"isDisableOfBtn('down') ? 'pointer' : 'not-allowed'\"\r\n                        (click)=\"down($event)\"></span>\r\n                \r\n            </div>\r\n        </div>\r\n    `,\r\n    styleUrls: ['./number.component.scss'],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => NumberSpinnerComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class NumberSpinnerComponent implements ControlValueAccessor, OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n    @HostBinding('class.f-cmp-number-spinner') hostClass = true;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() editable = true;\r\n    // formatter å parser å¿é¡»åæ¶å­å¨\r\n    @Input() formatter: (val: number) => string;\r\n\r\n    @Input() parser: (val: string | number) => number;\r\n    // ç©ºç½æç¤ºææ¬\r\n    @Input() placeholder = '';\r\n    // up or down æ­¥é¿\r\n    @Input() step = 1;\r\n    // æå¤§å¼\r\n    @Input() max: any;\r\n    // æå°å¼\r\n    @Input() min: any;\r\n\r\n    /** å¯ç¨å¤§æ°æ¯æ */\r\n    @Input() bigNumber = false;\r\n\r\n    // æ¯å¦æ¾ç¤ºå åæé®\r\n    @Input() showButton = true;\r\n    // æ¯å¦ä½¿ç¨ååå¼\r\n    @Input() useThousands = true;\r\n    // ææ¬æ¹å\r\n    @Input() textAlign = 'left';\r\n    // èªå¨è¡¥å¨å°æ°\r\n    @Input() autoDecimal = true;\r\n    // åè®¸ä¸ºç©º\r\n    @Input() canNull = false;\r\n    // ç²¾åº¦\r\n    @Input() precision = 0;\r\n    // åç¼\r\n    @Input() prefix = '';\r\n    // åç¼\r\n    @Input() suffix = '';\r\n    /** å°æ°ç¹ç¬¦å· */\r\n    @Input() decimalSeparator = '.';\r\n    /** ååä½ç¬¦å· */\r\n    @Input() groupSeparator = ',';\r\n    /** ä½¿ç¨ååä½æ¶ï¼æ¯ç»æ¾ç¤ºçå­ç¬¦æ° */\r\n    @Input() groupSize = 3;\r\n\r\n    private _value = '';\r\n    @Input()\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    set value(val: any) {\r\n        this._value = val;\r\n    }\r\n\r\n    /** æ¾ç¤º0å¼ */\r\n    @Input() showZero = true;\r\n\r\n    @Output() valueChange = new EventEmitter<any>();\r\n    @Output() blur = new EventEmitter();\r\n    @Output() focus = new EventEmitter();\r\n\r\n    @ViewChild('input') input: ElementRef;\r\n\r\n    isFocus = false;\r\n    popValue = '';\r\n    isActiveTip = false;\r\n    formatOptions: NumberFormatter = {};\r\n    private _realValue = null;\r\n    cdRef: ChangeDetectorRef;\r\n    commonUtils: CommonUtils;\r\n    private _ngControl: NgControl;\r\n    private showtipTimer = null;\r\n\r\n    _updateOn = 'change';\r\n    localeService: LocaleService = null;\r\n    onTouchedCallback: () => void = () => { };\r\n    onChangeCallback: (_: any) => void = () => { };\r\n\r\n    constructor(public el: ElementRef, public render: Renderer2, public injector: Injector) {\r\n        this.cdRef = this.injector.get(ChangeDetectorRef, null);\r\n\r\n        this.localeService = this.injector.get(LocaleService, null);\r\n\r\n        this.commonUtils = this.injector.get(CommonUtils, new CommonUtils());\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.formatOptions = this.buildFormatOptions();\r\n        this._ngControl = this.injector.get(NgControl, null);\r\n\r\n        if (this.localeService) {\r\n            const defaultPlaceHolder = this.localeService.getValue('numberSpinner.placeholder') || 'è¯·è¾å¥æ°å­';\r\n            if (!this.placeholder) {\r\n                this.placeholder = defaultPlaceHolder;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this._ngControl && this._ngControl.control) {\r\n            this._updateOn =  this._ngControl.control.updateOn;\r\n        }\r\n\r\n        this.listenInputPasteEvent();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        if (changes.value && !changes.value.isFirstChange()) {\r\n            this._realValue = this.getRealValue(changes.value.currentValue);\r\n            this.value = this.format(this._realValue);\r\n        }\r\n\r\n        if (changes.showZero && !changes.showZero.isFirstChange()) {\r\n            this.value = this.format(this._realValue);\r\n        }\r\n\r\n        if (changes.precision && !changes.precision.isFirstChange()) {\r\n            this.onOptionsChanged();\r\n        }\r\n\r\n        if (changes.useThousands && !changes.useThousands.isFirstChange()) {\r\n            this.onOptionsChanged();\r\n        }\r\n\r\n        if (changes.prefix && !changes.prefix.isFirstChange()) {\r\n            this.onOptionsChanged();\r\n        }\r\n        if (changes.suffix && !changes.suffix.isFirstChange()) {\r\n            this.onOptionsChanged();\r\n        }\r\n    }\r\n\r\n    private onOptionsChanged() {\r\n        this.formatOptions = this.buildFormatOptions();\r\n        this.value = this.format(this._realValue);\r\n    }\r\n\r\n    ngOnDestroy() {}\r\n\r\n    // æ¯æç²è´´å¸¦æ ¼å¼çæ°æ®\r\n    listenInputPasteEvent() {\r\n        this.input.nativeElement.addEventListener('paste', event => {\r\n            event.preventDefault();\r\n            const clipboardData = event.clipboardData || window['clipboardData'];\r\n            const pasteValue = clipboardData.getData('text');\r\n            const val = this.cleanNumString(pasteValue);\r\n\r\n            if (this.isEmpty(val)) {\r\n                return;\r\n            }\r\n\r\n            const target = event.target;\r\n            const start = (target as any).selectionStart;\r\n            const end = (target as any).selectionEnd;\r\n\r\n            if (this.isEmpty(val)) {\r\n                target.value = '';\r\n            } else {\r\n                target.value = target.value.slice(0, start) + val +  target.value.slice(end);\r\n            }\r\n\r\n            if (this._updateOn === 'change') {\r\n                this._realValue = this.getRealValue(target.value);\r\n                this.value = this._realValue;\r\n                this._modelChanged(this._realValue);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    onBlur($event, type: string = '') {\r\n        if (this.readonly || this.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (this._updateOn === 'blur') {\r\n            const val = this.cleanNumString($event.value);\r\n            this._realValue = this.getRealValue(val);\r\n        }\r\n\r\n        this.value = this.format(this._realValue);\r\n        this.input.nativeElement.value = this.value;\r\n        this.isFocus = false;\r\n        this.onModelChange(this._realValue, 'blur');\r\n        this.blur.emit({ event: $event, formatted: this.value, value: this._realValue, instance: this });\r\n    }\r\n\r\n    onClick($event) {\r\n        $event.stopPropagation();\r\n    }\r\n\r\n    onFocus($event) {\r\n        if (this.readonly || this.disabled) {\r\n            this.isFocus = false;\r\n            return;\r\n        }\r\n\r\n        this.value = this.isEmpty(this._realValue) ? '' :  ((!this.showZero && this._realValue == '0') ?  '' : this._realValue );\r\n        this.isFocus = true;\r\n        this.focus.emit({ event: $event, formatted: this.value, value: this._realValue, instance: this  });\r\n    }\r\n\r\n    onMouseEnter($event) {\r\n        if (this.value) {\r\n            this.popValue = this.value;\r\n            this.isActiveTip = this.isShowPopover();\r\n        }\r\n    }\r\n\r\n    onKeyDown(e: KeyboardEvent) {\r\n        if (e.key === 'ArrowDown') {\r\n            e.preventDefault();\r\n            this.down(e);\r\n            e.stopPropagation();\r\n        }\r\n\r\n        if (e.key === 'ArrowUp') {\r\n            e.preventDefault();\r\n            this.up(e);\r\n            e.stopPropagation();\r\n        }\r\n    }\r\n\r\n    private _modelChanged(realVal) {\r\n        this._realValue = realVal;\r\n        this.onChangeCallback(realVal);\r\n        this.onTouchedCallback();\r\n        this.valueChange.emit(realVal);\r\n    }\r\n\r\n    onModelChange(realVal: any, updateOn = 'change') {\r\n        // this._realValue = this.getRealValue(val);\r\n        let _realValue = realVal;\r\n        if (updateOn === 'change') {\r\n            const num = this.cleanNumString('' + realVal);\r\n            _realValue = this.getRealValue(num);\r\n        }\r\n        this.isActiveTip = false;\r\n        this.popValue = this.format(_realValue);\r\n        if (this._updateOn === updateOn) {\r\n            this._modelChanged(_realValue);\r\n        }\r\n    }\r\n\r\n    up(e: Event, type = null) {\r\n        this.compute('up');\r\n        e.stopPropagation();\r\n    }\r\n\r\n    down(e: Event, type = null) {\r\n        this.compute('down');\r\n        e.stopPropagation();\r\n    }\r\n\r\n    compute(tye = 'up') {\r\n        if (this.isDisableOfBtn(tye)) {\r\n            let _resultValue;\r\n            const realBigNum = new BigNumber(this._realValue || 0);\r\n            if (tye === 'up') {\r\n                _resultValue = realBigNum.plus(Number(this.step));\r\n            } else {\r\n                _resultValue = realBigNum.minus(Number(this.step));\r\n            }\r\n\r\n            const s = _resultValue.toFixed();\r\n            if (!this.isFocus) {\r\n                this.value = this.format(s);\r\n            } else {\r\n                this.value = s;\r\n            }\r\n            this.input.nativeElement.value = this.value;\r\n            this._modelChanged(this.getRealValue(_resultValue));\r\n        }\r\n    }\r\n\r\n    isDisableOfBtn(type: string, value?: any) {\r\n        if (value === undefined) {\r\n            value = this._realValue;\r\n        }\r\n        value = new BigNumber(value);\r\n\r\n        if (type === 'up' && !(new BigNumber(this.max)).isNaN() && value.gte(this.max)) {\r\n            return false;\r\n        }\r\n        if (type === 'down' && !(new BigNumber(this.min)).isNaN() && value.lte(this.min)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isShowPopover() {\r\n        const  width = this.input.nativeElement.clientWidth;\r\n        const { paddingLeft, paddingRight } = window.getComputedStyle(this.input.nativeElement);\r\n\r\n        const _width = width - (Number(paddingLeft.replace('px', '')) || 0) - (Number(paddingRight.replace('px', '')) || 0);\r\n\r\n        const txtWidth = this.commonUtils.getTextWidth(this.value, window.getComputedStyle(this.input.nativeElement).font);\r\n        if (_width && _width < txtWidth) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _getPrecision() {\r\n        return Number(this.precision || 0);\r\n    }\r\n\r\n    toFixed(n: BigNumber | number) {\r\n        let _n = n;\r\n        if (!BigNumber.isBigNumber(n)) {\r\n            _n = new BigNumber(n);\r\n        }\r\n\r\n        if (this.precision !== null && this.precision !== undefined) {\r\n            return n.toFixed(this._getPrecision());\r\n        }\r\n        return n.toFixed();\r\n    }\r\n\r\n    _getRealValue(_n: BigNumber) {\r\n        const n = this.toFixed(_n);\r\n        return this.bigNumber ? n : Number(n);\r\n    }\r\n\r\n    getRealValue(val: any) {\r\n        if (this.parser) {\r\n            if (!isNaN(Number(val))) {\r\n                return val;\r\n            } else {\r\n                return this.parser(val);\r\n            }\r\n        }\r\n\r\n        let _n = this.validInterval(new BigNumber(val));\r\n        if (_n.isNaN()) {\r\n\r\n            if (this.canNull) {\r\n                return null;\r\n            } else {\r\n                const minBigNum = new BigNumber('' + this.min);\r\n                const maxBigNum = new BigNumber('' + this.max);\r\n\r\n                if (!minBigNum.isNaN()) {\r\n                    _n = minBigNum;\r\n                } else if (!maxBigNum.isNaN()) {\r\n                    _n = maxBigNum;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n\r\n            // if (this.canNull || minBigNum.isNaN()) {\r\n            //     return null;\r\n            // } else {\r\n            //     _n = minBigNum;\r\n            // }\r\n        }\r\n\r\n        return this._getRealValue(_n);\r\n    }\r\n\r\n    private buildFormatOptions() {\r\n        return {\r\n            prefix: this.prefix,\r\n            suffix: this.suffix,\r\n            decimalSeparator: this.decimalSeparator,\r\n            groupSeparator: this.useThousands ? this.groupSeparator : '',\r\n            groupSize: this.groupSize\r\n        };\r\n    }\r\n\r\n    isEmpty(val: any) {\r\n        return isNaN(val) || val === null || val === undefined || val === '';\r\n    }\r\n\r\n    validInterval(bn: BigNumber, emit = true) {\r\n        let _bnVal = bn;\r\n\r\n        if (!this.isEmpty(this.max)) {\r\n            const _maxBigNum = new BigNumber('' + this.max);\r\n            if (bn.gt(_maxBigNum) ) {\r\n                _bnVal = _maxBigNum;\r\n                const _realValue = this._getRealValue(_maxBigNum);\r\n                if (emit) {\r\n                    this._modelChanged(_realValue);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!this.isEmpty(this.min)) {\r\n            const _minBigNum = new BigNumber('' + this.min);\r\n            if (bn.lt(_minBigNum)) {\r\n                _bnVal = _minBigNum;\r\n                const _realValue = this._getRealValue(_minBigNum);\r\n                if (emit) {\r\n                    this._modelChanged(_realValue);\r\n                }\r\n            }\r\n        }\r\n\r\n        return _bnVal;\r\n    }\r\n\r\n    format(val: any, emit = true) {\r\n        val = this.cleanNumString(val);\r\n        const bigVal = new BigNumber(val);\r\n        let _bgNum = bigVal;\r\n        if (emit) {\r\n            _bgNum = this.validInterval(bigVal);\r\n        }\r\n\r\n        if (_bgNum.valueOf() == '0' && !this.showZero) {\r\n            return '';\r\n        }\r\n\r\n        if (this.canNull && bigVal.isNaN()) {\r\n            return '';\r\n        } else {\r\n            if (_bgNum.isNaN()) {\r\n                return '';\r\n            }\r\n        }\r\n\r\n        if (this.formatter) {\r\n            return this.formatter(_bgNum.toNumber());\r\n        } else {\r\n\r\n            if (!Object.keys(this.formatOptions).length) {\r\n                this.formatOptions = this.buildFormatOptions();\r\n            }\r\n\r\n            return this._toFormat(_bgNum, this.formatOptions);\r\n        }\r\n    }\r\n\r\n    _toFormat(_bgNum: BigNumber, fmt: NumberFormatter) {\r\n        if (this.precision !== null && this.precision !== undefined) {\r\n            return _bgNum.toFormat(this._getPrecision(), fmt);\r\n        } else {\r\n            return _bgNum.toFormat(fmt);\r\n        }\r\n    }\r\n\r\n    cleanNumString(val: any) {\r\n        val = (val === null || val === undefined || val === '') ? '' : String(val);\r\n        val = val.replace(new RegExp(this.prefix, 'g'), '')\r\n                    .replace(new RegExp(this.suffix, 'g'), '').replace(/\\,/g, '');\r\n        if (this.groupSeparator && this.groupSeparator !== ',') {\r\n            val = val.replace(new RegExp(`\\\\${this.groupSeparator}`, 'g'), '');\r\n        }\r\n\r\n        if (this.decimalSeparator && this.decimalSeparator !== '.') {\r\n            val = val.replace(new RegExp(`\\\\${this.decimalSeparator}`, 'g'), '.');\r\n        }\r\n        return val;\r\n    }\r\n\r\n    updateValue(val) {\r\n        val = this.cleanNumString(val);\r\n        this._realValue = this.getRealValue(val);\r\n        this.value = this.format(this._realValue);\r\n        this.el.nativeElement.value = this.value;\r\n    }\r\n\r\n\r\n    private updateControlValue() {\r\n        let _val = this.cleanNumString(this.value);\r\n        if (this.parser) {\r\n            _val = this.parser(this.value);\r\n        }\r\n\r\n        if (this.isEmpty(this._realValue) && this.isEmpty(_val)) {\r\n            return;\r\n        }\r\n\r\n        const rv = new BigNumber(this._realValue);\r\n        const cv = new BigNumber(_val); // display value\r\n\r\n        if (rv.isNaN() && cv.isNaN()) {\r\n            return;\r\n        }\r\n\r\n        // if (!rv.eq(cv)) {\r\n        // }\r\n\r\n        if (this._ngControl ) {\r\n            const formgroup =  this._ngControl['formDirective'];\r\n            if (formgroup) {\r\n                let ctrl = formgroup.control.get(this._ngControl.name);\r\n\r\n                if (!ctrl && formgroup.control.controls) {\r\n                    ctrl = formgroup.control.controls[this._ngControl.name];\r\n                }\r\n\r\n                if (ctrl) {\r\n                    if (ctrl.value !== this._realValue) {\r\n                        ctrl.setValue(this._realValue);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    writeValue(val: any): void {\r\n        this._realValue = val;\r\n        this.value = this.format(this._realValue, false);\r\n\r\n        this.updateControlValue();\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChangeCallback = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouchedCallback = fn;\r\n    }\r\n\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n}\r\n","import { Directive, ElementRef, Input } from '@angular/core';\r\nimport { HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n    // tslint:disable-next-line: directive-selector\r\n    selector: '[number-only]'\r\n})\r\nexport class NumberOnlyDirective {\r\n\r\n    @Input() precision: number;\r\n\r\n    constructor(private element: ElementRef) {}\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    onKeyDown(e: KeyboardEvent) {\r\n        const val = (e.target as any).value;\r\n        const key = e.key;\r\n        const checkKeys = ['.', '-', '%'];\r\n        const selectionVal = this.getSelectionValue(e.target);\r\n        if (val && checkKeys.indexOf(key) > -1 && val.indexOf(key) > -1  && !(selectionVal && selectionVal.indexOf(key) > -1) ) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        if (\r\n            [46, 8, 9, 27, 13, 110, 190, 173].indexOf(e.keyCode) !== -1 ||\r\n            // åè®¸å¨é: Ctrl+A\r\n            (e.keyCode === 65 && (e.ctrlKey || e.metaKey)) ||\r\n            // åè®¸å¤å¶: Ctrl+C\r\n            (e.keyCode === 67 && (e.ctrlKey || e.metaKey)) ||\r\n            // åè®¸ç²è´´: Ctrl+V\r\n            (e.keyCode === 86 && (e.ctrlKey || e.metaKey)) ||\r\n            // åè®¸åªå: Ctrl+X\r\n            (e.keyCode === 88 && (e.ctrlKey || e.metaKey)) ||\r\n            // åè®¸: homeï¼å¤´ï¼, endï¼å°¾ï¼, leftï¼å·¦ç§»ï¼, rightï¼å³ç§»ï¼\r\n            (e.keyCode >= 35 && e.keyCode <= 39) ||\r\n            e.keyCode === 189 || e.keyCode === 109\r\n        ) {\r\n            // let it happen, don't do anything\r\n            return;\r\n        }\r\n        // ç¡®ä¿æ°å­ä»¥å¤çæ¡ä»¶è¢«æç»æ§è¡é»è®¤å¨ä½\r\n        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        // å¤æ­å½åå°æ°ç²¾åº¦\r\n        if (val.indexOf('.') > -1 && this.precision) {\r\n            const curPos = (e.target as any).selectionStart;\r\n            const selectionEnd = (e.target as any).selectionEnd;\r\n            const _precision = val.split('.')[1].length;\r\n\r\n            const dotPos = val.indexOf('.');\r\n            if (curPos > dotPos) {\r\n                const selectionText = val.substring(curPos, selectionEnd);\r\n                if (_precision - selectionText.length >= Number(this.precision)) {\r\n                    e.preventDefault();\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private getSelectionValue(target) {\r\n        const start = (target as any).selectionStart;\r\n        const end = (target as any).selectionEnd;\r\n        return target.value.substring(start, end);\r\n    }\r\n\r\n\r\n}\r\n","import { BigNumber } from 'bignumber.js';\r\n\r\nimport {\r\n    Component, forwardRef, Input, Output,\r\n    AfterViewInit, ViewChild, ElementRef, OnDestroy, SimpleChanges,\r\n    EventEmitter,\r\n    OnInit,\r\n    OnChanges\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { NumberSpinnerComponent } from './number-spinner.component';\r\nimport { PopoverDirective } from '@farris/ui-popover';\r\n\r\n@Component({\r\n    selector: 'farris-number-range',\r\n    templateUrl: './number-range.component.html',\r\n    styleUrls: ['./number.component.scss'],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => NumberRangeComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class NumberRangeComponent extends NumberSpinnerComponent implements AfterViewInit, OnDestroy, OnInit, OnChanges {\r\n\r\n    @Input() beginPlaceHolder = '';\r\n    @Input() endPlaceHolder = '';\r\n\r\n    @ViewChild('inputPrev') inputPrev: ElementRef;\r\n    @ViewChild('inputNext') inputNext: ElementRef;\r\n    @ViewChild('prevWrapper') prevWrapper: ElementRef;\r\n    @ViewChild('nextWrapper') nextWrapper: ElementRef;\r\n    @ViewChild('popover') popover: PopoverDirective;\r\n\r\n    @Input() separator = '~';\r\n\r\n    @Input()\r\n    set beginValue(value) {\r\n        this.prevValue = this.format(value);\r\n        // å¼å§çå®æ°å¼\r\n        this._beginValue = this.isEmpty(value) ? '' : value;\r\n    }\r\n\r\n    @Input()\r\n    set endValue(value) {\r\n        this.nextValue = this.format(value);\r\n        // ç»æçå®æ°å¼\r\n        this._endValue = this.isEmpty(value) ? '' : value;\r\n    }\r\n\r\n    private __value = '';\r\n    @Input()\r\n    get value(): any {\r\n        return this.__value;\r\n    }\r\n\r\n    set value(v: any) {\r\n        if (v !== this.__value) {\r\n            this.__value = v === '~' ? '' : v;\r\n        }\r\n    }\r\n\r\n    @Output() beginValueChange = new EventEmitter();\r\n    @Output() endValueChange = new EventEmitter();\r\n\r\n    /* å¼å§æ°å­å±ç¤ºå¼ */\r\n    prevValue: any = '';\r\n    /* ç»ææ°å­å±ç¤ºå¼ */\r\n    nextValue: any = '';\r\n\r\n    private _beginValue = '';\r\n    private _endValue = '';\r\n    get preNumValue() {\r\n        const v = this.getRealValue(this.parser ? this.prevValue : this._beginValue);\r\n        if (this.canNull && this.isEmpty(v)) {\r\n            return '';\r\n        } else {\r\n            return v || 0;\r\n        }\r\n    }\r\n\r\n    get nextNumValue() {\r\n        const v = this.getRealValue(this.parser ? this.nextValue : this._endValue);\r\n        if (this.canNull && this.isEmpty(v)) {\r\n            return '';\r\n        } else {\r\n            return v || 0;\r\n        }\r\n    }\r\n\r\n    private documentClick;\r\n    private focusState = {\r\n        isFocus: false,\r\n        target: ''    // begin | end\r\n    };\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.showButton = false;\r\n\r\n        this.initPlaceHolderInfo();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.documentClick = this.render.listen(document, 'click', e => {\r\n            this.render.setStyle(this.prevWrapper.nativeElement, 'flex', 1);\r\n            this.render.setStyle(this.nextWrapper.nativeElement, 'flex', 1);\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        super.ngOnChanges(changes);\r\n        if (changes.value && !changes.value.isFirstChange()) {\r\n            this.setValue(changes.value.currentValue);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.documentClick) {\r\n            this.documentClick();\r\n        }\r\n    }\r\n\r\n    private initPlaceHolderInfo() {\r\n        if (!this.beginPlaceHolder) {\r\n            this.beginPlaceHolder = this.localeService.getValue('numberSpinner.range.begin') || this.placeholder;\r\n        }\r\n        if (!this.endPlaceHolder) {\r\n            this.endPlaceHolder =  this.localeService.getValue('numberSpinner.range.end') || this.placeholder;\r\n        }\r\n    }\r\n\r\n    private getRangeValue() {\r\n        return this.preNumValue + this.separator + this.nextNumValue;\r\n    }\r\n\r\n    private getEndValue() {\r\n        return this.getRealValue(this.nextValue);\r\n    }\r\n    private getBeginValue() {\r\n        return this.getRealValue(this.prevValue);\r\n    }\r\n\r\n    getRealValue(val: any) {\r\n        if (this.parser) {\r\n            return this.parser(val);\r\n        }\r\n        let _n = this.validInterval(new BigNumber(val), false);\r\n        if (_n.isNaN()) {\r\n            const minBigNum = new BigNumber('' + this.min);\r\n            if (this.canNull || minBigNum.isNaN()) {\r\n                return null;\r\n            } else {\r\n                _n = minBigNum;\r\n            }\r\n        }\r\n\r\n        return this._getRealValue(_n) as any;\r\n    }\r\n\r\n    onModelChange(val, type?: string) {\r\n        if (type === 'begin') {\r\n            this._beginValue = val;\r\n        } else if (type === 'end') {\r\n            this._endValue = val;\r\n        }\r\n        this.value = this.getRangeValue();\r\n        this.onChangeCallback(this.value);\r\n        this.onTouchedCallback();\r\n\r\n        this.valueChange.emit(this.value);\r\n    }\r\n\r\n    onClick($event) {\r\n        $event.stopPropagation();\r\n    }\r\n\r\n    onBlur(e: any, type: string) {\r\n        if (!this.readonly && !this.disabled) {\r\n            const tmpValue = e.value;\r\n            this.focusState = { isFocus: false, target: type };\r\n            if (type === 'begin') {\r\n                const nextVal = this.getEndValue();\r\n                const minValue = this.isEmpty(tmpValue)\r\n                    ? ''\r\n                    : this.isEmpty(nextVal)\r\n                        ? tmpValue\r\n                        : BigNumber.min(tmpValue, nextVal).toFixed();\r\n                // this.prevValue = this.format(minValue);\r\n                this.beginValue = this.validInterval(new BigNumber(minValue), false).toFixed();\r\n                // this.beginValue = this.getRealValue(this.prevValue);\r\n                this.inputPrev.nativeElement.value = this.prevValue;\r\n                this.onModelChange(this._beginValue, type);\r\n            } else {\r\n                const beginVal = this.getBeginValue();\r\n                const maxValue = this.isEmpty(tmpValue)\r\n                    ? ''\r\n                    : this.isEmpty(beginVal)\r\n                        ? tmpValue\r\n                        : BigNumber.max(tmpValue, beginVal).toFixed();\r\n                // this.nextValue = this.format(maxValue);\r\n                // this.endValue = this.getRealValue(this.nextValue);\r\n                this.endValue = this.validInterval(new BigNumber(maxValue), false).toFixed();\r\n                this.inputNext.nativeElement.value = this.nextValue;\r\n                this.onModelChange(this._endValue, type);\r\n            }\r\n        }\r\n\r\n        this.valueChange.emit(this.value);\r\n        if (type === 'begin') {\r\n            this.beginValueChange.emit(this.preNumValue);\r\n        } else {\r\n            this.endValueChange.emit(this.nextNumValue);\r\n        }\r\n\r\n        this.blur.emit();\r\n    }\r\n\r\n    onFocus(type?: string) {\r\n        if (!this.readonly && !this.disabled) {\r\n            this.focusState = { isFocus: true, target: type };\r\n            if (type === 'begin') {\r\n                this.inputPrev.nativeElement.value = this._beginValue;\r\n                this.inputPrev.nativeElement.setSelectionRange(0, this._beginValue.length);\r\n                this.expendWidth('begin', 3);\r\n            } else {\r\n                this.inputNext.nativeElement.value = this._endValue;\r\n                this.inputNext.nativeElement.setSelectionRange(0, this._endValue.length);\r\n                this.expendWidth('end', 3);\r\n            }\r\n        }\r\n\r\n        this.focus.emit(type);\r\n    }\r\n\r\n    expendWidth(which: string, num: number) {\r\n        let target: Element;\r\n        let other: Element;\r\n        if (which === 'begin') {\r\n            target = this.prevWrapper.nativeElement;\r\n            other = this.nextWrapper.nativeElement;\r\n        } else {\r\n            target = this.nextWrapper.nativeElement;\r\n            other = this.prevWrapper.nativeElement;\r\n        }\r\n        const { width } = target.getBoundingClientRect();\r\n        if (width < 150) {\r\n            this.render.setStyle(target, 'flex', num);\r\n            this.render.setStyle(other, 'flex', 1);\r\n        }\r\n    }\r\n\r\n    onMouseEnter(event) {\r\n        this.isActiveTip = this.isShowPopover();\r\n        if (this.nextValue && this.prevValue) {\r\n            this.popValue = this.prevValue + '~' + this.nextValue;\r\n        } else {\r\n            this.popValue = '';\r\n        }\r\n    }\r\n\r\n    isShowPopover() {\r\n        const { width } = this.el.nativeElement.getBoundingClientRect();\r\n        if (width && width < 200) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onKeyDownRange($event: KeyboardEvent, typ: 'begin'|'end') {\r\n        if ($event.key === 'ArrowDown') {\r\n            $event.preventDefault();\r\n            this.down($event, typ);\r\n        }\r\n\r\n        if ($event.key === 'ArrowUp') {\r\n            $event.preventDefault();\r\n            this.up($event, typ);\r\n        }\r\n\r\n        $event.stopPropagation();\r\n    }\r\n\r\n    writeValue(val: any): void {\r\n        this.setValue(val);\r\n    }\r\n\r\n    setValue(val: any) {\r\n        if (typeof val === 'string') {\r\n            const valArr = val.split(this.separator);\r\n            this._beginValue = valArr[0] ? valArr[0] : '';\r\n            this._endValue = valArr[1] ? valArr[1] : '';\r\n        } else {\r\n            this._beginValue = '';\r\n            this._beginValue = '';\r\n        }\r\n        this.prevValue = this.format(this._beginValue);\r\n        this.nextValue = this.format(this._endValue);\r\n    }\r\n\r\n\r\n    //#region ä¸ä¸æä½æé® æ ä¸ä¸æ¹åé®\r\n    up(e: Event, type: string) {\r\n        e.stopPropagation();\r\n        this._compute(type, 'up', (e.target as any).value);\r\n    }\r\n\r\n    down(e: Event, type: string) {\r\n        e.stopPropagation();\r\n        this._compute(type, 'down', (e.target as any).value);\r\n    }\r\n\r\n    private _compute(type: string, dir: 'up' | 'down', tagVal) {\r\n        const m = dir === 'up' ? 'plus' : 'minus';\r\n        // if (type === 'begin' && this.isDisableOfBtn(dir, this.prevValue)) {\r\n        //     const bv = tagVal || 0;\r\n        //     const ev = this.getRealValue(this.nextValue);\r\n        //     const r = new BigNumber(bv)[m](Number(this.step));\r\n        //     let v = r.toFixed();\r\n        //     const minValue = BigNumber.min(v, ev);\r\n        //     if (!minValue.eq(v) && !this.isEmpty(ev)) {\r\n        //         v = ev;\r\n        //     }\r\n        //     this._beginValue = v;\r\n        //     // this.prevValue = this.format(v);\r\n        //     this.inputPrev.nativeElement.value = v;\r\n        //     this.onModelChange(v, type);\r\n        //     this.beginValueChange.emit(v);\r\n        // } else if (type === 'end' && this.isDisableOfBtn(dir, this.nextValue)) {\r\n        //     const bv = this.getRealValue(this.prevValue);\r\n        //     const ev = tagVal || 0;\r\n        //     const r = new BigNumber(ev)[m](Number(this.step));\r\n        //     let v = r.toFixed();\r\n        //     const maxValue = BigNumber.max(bv, v);\r\n        //     if (!maxValue.eq(v) && !this.isEmpty(bv)) {\r\n        //         v = bv;\r\n        //     }\r\n        //     this._endValue = v;\r\n        //     // this.nextValue = this.format(v);\r\n        //     this.inputNext.nativeElement.value = v;\r\n        //     this.onModelChange(v, type);\r\n        //     this.endValueChange.emit(v);\r\n        // }\r\n\r\n        if (type === 'begin' && this.isDisableOfBtn(dir, this.prevValue)) {\r\n            const tmpValue = this.inputPrev.nativeElement.value;\r\n            const nextVal = this.getEndValue();\r\n            const bv = this.cleanNumString(tmpValue) || 0;\r\n            const r = new BigNumber(bv)[m](Number(this.step));\r\n            let v = r.toFixed();\r\n           \r\n            const minValue = this.isEmpty(v)\r\n                ? ''\r\n                : this.isEmpty(nextVal)\r\n                    ? v\r\n                    : BigNumber.min(v, nextVal).toFixed();\r\n            this.beginValue = this.validInterval(new BigNumber(minValue), false).toFixed();\r\n            this.inputPrev.nativeElement.value = this.prevValue;\r\n            this.onModelChange(this._beginValue, type);\r\n            this.beginValueChange.emit(this._beginValue);\r\n        } else if (type === 'end' && this.isDisableOfBtn(dir, this.nextValue)) {\r\n            const tmpValue = this.inputNext.nativeElement.value;\r\n            const beginVal = this.getBeginValue();\r\n            const bv = this.cleanNumString(tmpValue) || 0;\r\n            const r = new BigNumber(bv)[m](Number(this.step));\r\n            let v = r.toFixed();\r\n\r\n            const maxValue = this.isEmpty(v)\r\n                ? ''\r\n                : this.isEmpty(beginVal)\r\n                    ? v\r\n                    : BigNumber.max(v, beginVal).toFixed();\r\n            this.endValue = this.validInterval(new BigNumber(maxValue), false).toFixed();\r\n            this.inputNext.nativeElement.value = this.nextValue;\r\n            this.onModelChange(this._endValue, type);\r\n            this.endValueChange.emit(this._endValue);\r\n        }\r\n\r\n        this.valueChange.emit(this.value);\r\n        this.expendWidth(type, 3);\r\n    }\r\n\r\n    //#endregion\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NumberSpinnerComponent } from './number-spinner.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NumberOnlyDirective } from './number-only-directive';\r\nimport { PopoverModule } from '@farris/ui-popover';\r\nimport { NumberRangeComponent } from './number-range.component';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\n@NgModule({\r\n    declarations: [\r\n        NumberSpinnerComponent, NumberOnlyDirective,\r\n        NumberRangeComponent\r\n    ],\r\n    imports: [\r\n        CommonModule, FormsModule,\r\n        PopoverModule.forRoot(),\r\n        LocaleModule.forRoot()\r\n    ],\r\n    exports: [NumberSpinnerComponent, NumberOnlyDirective,\r\n        NumberRangeComponent]\r\n})\r\nexport class NumberSpinnerModule {}\r\n"],"names":[],"mappings":"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"}
