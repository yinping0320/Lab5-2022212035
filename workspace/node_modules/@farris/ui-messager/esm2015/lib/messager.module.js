/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { FarrisCommonModule } from '@farris/ui-common';
// import { FarrisFormsModule } from '@farris/ui-forms';
import { ModalModule } from '@farris/ui-modal';
import { LocaleModule } from '@farris/ui-locale';
import { MessagerComponent } from './messager.component';
import { MessagerService } from './messager.service';
import { MESSAGER_DEFAULT_CONFIG, MessagerDefaultConfig } from './messager.config';
import { FarrisDefaultFocusDirective } from './farris-default-focus.directive';
export class MessagerModule {
    /**
     * @param {?=} config
     * @return {?}
     */
    static forRoot(config) {
        return {
            ngModule: MessagerModule,
            providers: [
                { provide: MESSAGER_DEFAULT_CONFIG, useValue: config || MessagerDefaultConfig },
                MessagerService
            ]
        };
    }
}
MessagerModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    FarrisCommonModule.forRoot(),
                    // FarrisFormsModule,
                    LocaleModule,
                    ModalModule.forRoot()
                ],
                declarations: [
                    FarrisDefaultFocusDirective,
                    MessagerComponent
                ],
                entryComponents: [
                    MessagerComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1tZXNzYWdlci8iLCJzb3VyY2VzIjpbImxpYi9tZXNzYWdlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7O0FBRXZELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUMvQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFakQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDekQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBa0IsdUJBQXVCLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRyxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQW9CL0UsTUFBTSxPQUFPLGNBQWM7Ozs7O0lBQ3ZCLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDbEMsT0FBTztZQUNILFFBQVEsRUFBRSxjQUFjO1lBQ3hCLFNBQVMsRUFBRTtnQkFDUCxFQUFDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxRQUFRLEVBQUUsTUFBTSxJQUFJLHFCQUFxQixFQUFFO2dCQUM5RSxlQUFlO2FBQ2xCO1NBQ0osQ0FBQztJQUNOLENBQUM7OztZQTFCSixRQUFRLFNBQUM7Z0JBQ04sT0FBTyxFQUFFO29CQUNMLFlBQVk7b0JBQ1osV0FBVztvQkFDWCxrQkFBa0IsQ0FBQyxPQUFPLEVBQUU7b0JBQzVCLHFCQUFxQjtvQkFDckIsWUFBWTtvQkFDWixXQUFXLENBQUMsT0FBTyxFQUFFO2lCQUN4QjtnQkFDRCxZQUFZLEVBQUU7b0JBQ1YsMkJBQTJCO29CQUMzQixpQkFBaUI7aUJBQ3BCO2dCQUNELGVBQWUsRUFBRTtvQkFDYixpQkFBaUI7aUJBQ3BCO2FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuXHJcbmltcG9ydCB7IEZhcnJpc0NvbW1vbk1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tbW9uJztcclxuLy8gaW1wb3J0IHsgRmFycmlzRm9ybXNNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWZvcm1zJztcclxuaW1wb3J0IHsgTW9kYWxNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW1vZGFsJztcclxuaW1wb3J0IHsgTG9jYWxlTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2NhbGUnO1xyXG5cclxuaW1wb3J0IHsgTWVzc2FnZXJDb21wb25lbnQgfSBmcm9tICcuL21lc3NhZ2VyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE1lc3NhZ2VyU2VydmljZSB9IGZyb20gJy4vbWVzc2FnZXIuc2VydmljZSc7XHJcbmltcG9ydCB7IE1lc3NhZ2VyQ29uZmlnLCBNRVNTQUdFUl9ERUZBVUxUX0NPTkZJRywgTWVzc2FnZXJEZWZhdWx0Q29uZmlnIH0gZnJvbSAnLi9tZXNzYWdlci5jb25maWcnO1xyXG5pbXBvcnQgeyBGYXJyaXNEZWZhdWx0Rm9jdXNEaXJlY3RpdmUgfSBmcm9tICcuL2ZhcnJpcy1kZWZhdWx0LWZvY3VzLmRpcmVjdGl2ZSc7XHJcblxyXG5cclxuQE5nTW9kdWxlKHtcclxuICAgIGltcG9ydHM6IFtcclxuICAgICAgICBDb21tb25Nb2R1bGUsXHJcbiAgICAgICAgRm9ybXNNb2R1bGUsXHJcbiAgICAgICAgRmFycmlzQ29tbW9uTW9kdWxlLmZvclJvb3QoKSxcclxuICAgICAgICAvLyBGYXJyaXNGb3Jtc01vZHVsZSxcclxuICAgICAgICBMb2NhbGVNb2R1bGUsXHJcbiAgICAgICAgTW9kYWxNb2R1bGUuZm9yUm9vdCgpXHJcbiAgICBdLFxyXG4gICAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICAgICAgRmFycmlzRGVmYXVsdEZvY3VzRGlyZWN0aXZlLFxyXG4gICAgICAgIE1lc3NhZ2VyQ29tcG9uZW50XHJcbiAgICBdLFxyXG4gICAgZW50cnlDb21wb25lbnRzOiBbXHJcbiAgICAgICAgTWVzc2FnZXJDb21wb25lbnRcclxuICAgIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIE1lc3NhZ2VyTW9kdWxlIHtcclxuICAgIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IE1lc3NhZ2VyQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmdNb2R1bGU6IE1lc3NhZ2VyTW9kdWxlLFxyXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtcclxuICAgICAgICAgICAgICAgIHtwcm92aWRlOiBNRVNTQUdFUl9ERUZBVUxUX0NPTkZJRywgdXNlVmFsdWU6IGNvbmZpZyB8fCBNZXNzYWdlckRlZmF1bHRDb25maWcgfSxcclxuICAgICAgICAgICAgICAgIE1lc3NhZ2VyU2VydmljZVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG4iXX0=