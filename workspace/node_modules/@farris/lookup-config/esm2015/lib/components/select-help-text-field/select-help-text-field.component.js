/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/select-help-text-field/select-help-text-field.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, Input, EventEmitter, ViewChild, TemplateRef, HostBinding, NgZone } from '@angular/core';
import { LocaleService } from '@farris/ui-locale';
import { NotifyService } from '@farris/ui-notify';
import { TreeTableComponent } from '@farris/ui-treetable';
export class SelectHelpTextFieldComponent {
    /**
     * @param {?} notifyService
     * @param {?} ngZone
     * @param {?} localeService
     */
    constructor(notifyService, ngZone, localeService) {
        this.notifyService = notifyService;
        this.ngZone = ngZone;
        this.localeService = localeService;
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.helpId = '';
        this.class = 'd-flex f-utils-fill-flex-column h-100';
        this.modalConfig = {
            title: '字段选择器',
            width: 900,
            height: 500,
            showButtons: true,
            showMaxButton: false
        };
        // 树表数据
        this.helpTreeData = [];
        // 树表列配置
        this.treeCols = [{ field: 'name', title: '名称' }, { field: 'label', title: '编号' }, { field: 'bindingPath', title: '绑定字段' }];
        this.fieldName = '名称';
        this.fieldLabel = '编号';
        this.fieldTitle = '绑定字段';
        this.fieldError = '已绑定字段不存在！';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.fieldName = this.localeService.getValue('lookupConfig.name');
        this.fieldLabel = this.localeService.getValue('lookupConfig.code');
        this.fieldTitle = this.localeService.getValue('lookupConfig.bindingPath');
        this.fieldError = this.localeService.getValue('lookupConfig.fieldError');
        this.treeCols = [{ field: 'name', title: this.fieldName }, { field: 'label', title: this.fieldLabel }, { field: 'bindingPath', title: this.fieldTitle }];
        if (!this.schemaData) {
            return;
        }
        this.getHelpFields(this.schemaData);
    }
    /**
     * 获取帮助schema字段
     * @param {?} schema schema
     * @return {?}
     */
    getHelpFields(schema) {
        if (!schema || !schema.entities || schema.entities.length === 0) {
            return;
        }
        /** @type {?} */
        const mainTable = schema.entities[0];
        if (mainTable.type && mainTable.type.fields) {
            this.helpTreeData = this.assembleFields2Tree(mainTable.type.fields);
        }
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        () => {
            setTimeout((/**
             * @return {?}
             */
            () => {
                if (!this.value) {
                    return;
                }
                try {
                    this.treeTable.selectNode(this.value);
                }
                catch (e) {
                    this.treeTable.clearSelections();
                    this.notifyService.error(this.fieldError);
                }
            }));
        }));
    }
    /**
     * schema字段集合组装成树
     * @param {?} fields schema字段集合
     * @return {?}
     */
    assembleFields2Tree(fields) {
        /** @type {?} */
        const treeData = [];
        fields.forEach((/**
         * @param {?} element
         * @return {?}
         */
        element => {
            // 关联表字段 / UDT字段
            /** @type {?} */
            let children = [];
            if (element.type && element.type.fields && element.type.fields.length > 0) {
                children = this.assembleFields2Tree(element.type.fields);
            }
            // 适配旧的帮助元数据没有bindingPath属性
            if (!element.bindingPath) {
                element.bindingPath = element['parentPath'] ? element['parentPath'] + '.' + element.label : element.label;
            }
            treeData.push({
                data: element,
                children,
                expanded: true,
                selectable: children.length > 0 ? false : true
            });
        }));
        return treeData;
    }
    /**
     * 取消
     * @return {?}
     */
    clickCancel() {
        this.closeModal.emit();
    }
    /**
     * 确定
     * @return {?}
     */
    clickConfirm() {
        if (!this.treeTable.selectedRow) {
            this.notifyService.warning('请选择字段');
            return;
        }
        /** @type {?} */
        const selectedData = this.treeTable.selectedRow.data;
        this.submitModal.emit({ value: selectedData.bindingPath, name: selectedData.name });
    }
}
SelectHelpTextFieldComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-select-help-text-field',
                template: "<farris-treetable #treeTable [data]=\"helpTreeData\" [columns]=\"treeCols\" [idField]=\"'bindingPath'\" [fixedHeader]=\"true\"\r\n    [fit]=\"true\" [singleSelect]=\"true\" [showFilterBar]=\"false\" [resizableColumns]=\"true\"\r\n    [showCheckAll]=\"false\" [showCheckbox]=\"false\" [checkOnSelect]=\"true\" [selectOnCheck]=\"true\">\r\n</farris-treetable>\r\n\r\n<ng-template #modalFooter>\r\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"clickCancel()\">{{ 'lookupConfig.cancel' | locale }}</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"clickConfirm()\">{{ 'lookupConfig.sure' | locale }}</button>\r\n</ng-template>"
            }] }
];
/** @nocollapse */
SelectHelpTextFieldComponent.ctorParameters = () => [
    { type: NotifyService },
    { type: NgZone },
    { type: LocaleService }
];
SelectHelpTextFieldComponent.propDecorators = {
    closeModal: [{ type: Output }],
    submitModal: [{ type: Output }],
    value: [{ type: Input }],
    helpId: [{ type: Input }],
    schemaData: [{ type: Input }],
    modalFooter: [{ type: ViewChild, args: ['modalFooter',] }],
    class: [{ type: HostBinding, args: ['class',] }],
    treeTable: [{ type: ViewChild, args: ['treeTable',] }]
};
if (false) {
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.closeModal;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.submitModal;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.value;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.helpId;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.schemaData;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.modalFooter;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.class;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.modalConfig;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.helpTreeData;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.treeCols;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.fieldName;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.fieldLabel;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.fieldTitle;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.fieldError;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.treeTable;
    /**
     * @type {?}
     * @private
     */
    SelectHelpTextFieldComponent.prototype.notifyService;
    /**
     * @type {?}
     * @private
     */
    SelectHelpTextFieldComponent.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    SelectHelpTextFieldComponent.prototype.localeService;
}
//# sourceMappingURL=data:application/json;base64,