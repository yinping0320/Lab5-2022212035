/**
 * @fileoverview added by tsickle
 * Generated from: lib/lookup-config.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ComponentFactoryResolver, Injector, Input, ViewChild } from '@angular/core';
import { BsModalService } from '@farris/ui-modal';
import { LookupConfigMetaDataComponent } from './components/lookup-config-metadata.component';
import { FilterGridComponent } from '@farris/ui-filter-editor';
import { FilterRelation, Compare, ExpressValueType } from '@farris/ui-common/types';
import { ConfigService } from './config.service';
import { HttpClient } from '@angular/common/http';
import { NotifyService } from '@farris/ui-notify';
import { GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';
import { LocaleService } from '@farris/ui-locale';
import { SelectHelpTextFieldComponent } from './components/select-help-text-field/select-help-text-field.component';
export class LookupConfigComponent {
    /**
     * @param {?} cfr
     * @param {?} injector
     * @param {?} modalService
     * @param {?} configService
     * @param {?} http
     * @param {?} notifyService
     * @param {?} GSPService
     */
    constructor(cfr, injector, modalService, configService, http, notifyService, GSPService) {
        this.cfr = cfr;
        this.injector = injector;
        this.modalService = modalService;
        this.configService = configService;
        this.http = http;
        this.notifyService = notifyService;
        this.GSPService = GSPService;
        this.groupIcon = '<i class="f-icon f-icon-lookup"></i>';
        this.metaDataName = ''; //元数据显示name
        this.metaDataTextFieldCloumns = [];
        this.isDeisgnerEnv = false;
        this.readonly = false;
        this.filterConditions = []; //筛选初始值
        //筛选初始值
        this.filterColumns = []; //筛选项
        //提交的数据
        this.lookupConfigData = {
            configId: '',
            code: '',
            name: '',
            filter: [],
            // metadata:{}
            helpId: '',
            textField: '',
            loadDataType: '' //加载方式
        };
        this.configCode = '';
        this.configName = '';
        //帮助数据
        this.configData = {};
        this.placeholder = '选择表单元数据';
        this.selectTitle = '帮助元数据选择';
        this.fileNamePlaceholder = '选择帮助文本字段';
        this.selectFileNameTitle = '文本字段选择器';
        this.isTreeList = false;
        this.typeNumValues = [
            {
                value: "default",
                name: "默认"
            },
            {
                value: "loadall",
                name: "全部加载"
            },
            {
                value: "layerload",
                name: "分层加载"
            }
        ];
        this.localeService = this.injector.get(LocaleService);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        /**
         * 运行时根据configid获取元数据信息
         */
        // if(!this.isDeisgnerEnv && this.configId !== '' && typeof(this.configId) != "undefined"){
        //   this.GSPService.GetMetadataRT(this.configId).subscribe((data: any) => {
        //   //this.http.get('assets/data/lookupconfig.json').subscribe((data: any) => {
        //     if(data && data.content){
        //       const metadataObject = JSON.parse(data.content); 
        //       const metadataSchema = metadataObject.schema.main;
        //       if (!metadataSchema || !metadataSchema.entities || metadataSchema.entities.length === 0) {
        //           return;
        //       }
        //       const metadatamainTable = metadataSchema.entities[0];
        //       if (metadatamainTable.type && metadatamainTable.type.fields) {
        //           this.getPlainFields(metadatamainTable.type.fields);
        //       }
        //     }
        //   },
        //   error => {
        //     if(error.message){
        //       this.notifyService.error(error.message);
        //     }
        //   }
        //   )
        // }
        /**
         * 根据configid获取回显数据
         */
        if (this.configId !== '' && typeof (this.configId) != "undefined") {
            this.configService.getHelpConfig(this.configId).subscribe((/**
             * @param {?} data
             * @return {?}
             */
            (data) => {
                if (data) {
                    this.configData = data;
                    this.configCode = data.code;
                    this.configName = data.name;
                    this.metaDataName = data.helpName;
                    this.lookupConfigData.helpId = data.helpId;
                    /** @type {?} */
                    const queryParams = JSON.parse(data.queryParam);
                    if (queryParams['filter'] && queryParams['filter']['filterConditions'] && queryParams['filter']['filterConditions'].length) {
                        this.filterConditions = queryParams['filter']['filterConditions'];
                    }
                    if (queryParams['loadTreeDataType']) {
                        this.loadDataType = queryParams['loadTreeDataType'];
                    }
                    if (queryParams['textField']) {
                        this.metaDataTextFieldValue = queryParams['textField'];
                    }
                    if (!this.isDeisgnerEnv && typeof (data.helpId) != "undefined") {
                        this.getMetadataRT(data.helpId);
                    }
                }
            }), (/**
             * @param {?} error
             * @return {?}
             */
            error => {
                if (error.message) {
                    this.notifyService.error(error.message);
                }
            }));
        }
        this.placeholder = this.localeService.getValue('lookupConfig.placeholder');
        this.selectTitle = this.localeService.getValue('lookupConfig.selectTitle');
        this.fileNamePlaceholder = this.localeService.getValue('lookupConfig.fileNamePlaceholder');
        this.selectFileNameTitle = this.localeService.getValue('lookupConfig.selectFileNameTitle');
        this.typeNumValues = [
            {
                value: "default",
                name: this.localeService.getValue('lookupConfig.loadTypeList.default')
            },
            {
                value: "loadall",
                name: this.localeService.getValue('lookupConfig.loadTypeList.all')
            },
            {
                value: "layerload",
                name: this.localeService.getValue('lookupConfig.loadTypeList.layer')
            }
        ];
    }
    /**
     * 运行时根据configid获取元数据信息
     * @param {?} helpId
     * @return {?}
     */
    getMetadataRT(helpId) {
        this.GSPService.GetMetadataRT(helpId).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        (data) => {
            //this.http.get('assets/data/lookupconfig.json').subscribe((data: any) => {
            //console.log(data);
            this.metaDataTextFieldCloumns = [];
            if (data && data.content) {
                /** @type {?} */
                const metadataObject = JSON.parse(data.content);
                this.metaData = metadataObject;
                this.isTreeList = (metadataObject.displayType.toLowerCase() === 'treelist');
                /** @type {?} */
                const metadataSchema = metadataObject.schema.main;
                if (!metadataSchema || !metadataSchema.entities || metadataSchema.entities.length === 0) {
                    return;
                }
                /** @type {?} */
                const metadatamainTable = metadataSchema.entities[0];
                if (metadatamainTable.type && metadatamainTable.type.fields) {
                    this.getPlainFields(metadatamainTable.type.fields);
                    this.getTextField(metadatamainTable.type.fields);
                    if (this.metaDataTextFieldCloumns && this.metaDataTextFieldCloumns.length) {
                        /** @type {?} */
                        let textField = this.metaDataTextFieldCloumns.find((/**
                         * @param {?} item
                         * @return {?}
                         */
                        item => {
                            return item.value.toLowerCase() == this.metaDataTextFieldValue.toLowerCase();
                        }));
                        this.metaDataTextField = textField ? textField.label : '';
                    }
                }
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        error => {
            if (error.message) {
                this.notifyService.error(error.message);
            }
        }));
    }
    /**
     * @param {?} fields
     * @return {?}
     */
    getTextField(fields) {
        fields.forEach((/**
         * @param {?} element
         * @return {?}
         */
        element => {
            this.metaDataTextFieldCloumns.push({
                label: element.name,
                value: element.path
            });
            if (element.type && element.type.fields && element.type.fields.length > 0) {
                this.getTextField(element.type.fields);
            }
        }));
    }
    /**
     * 获取元数据弹窗
     * @return {?}
     */
    getMetadata() {
        /** @type {?} */
        const metaDataFac = this.cfr.resolveComponentFactory(LookupConfigMetaDataComponent);
        /** @type {?} */
        const metaDataRef = metaDataFac.create(this.injector);
        metaDataRef.instance.metadataPath = this.metadataPath;
        // metaDataRef.instance.isDeisgnerEnv = this.isDeisgnerEnv;
        this.metadataDialog = this.modalService.show(metaDataRef, {
            title: this.selectTitle,
            width: 940,
            height: 600,
            showButtons: false,
            showMaxButton: false
        });
        metaDataRef.instance.selectedMeta.subscribe((/**
         * @param {?} $event
         * @return {?}
         */
        ($event) => {
            if (!$event || !$event.metadata) {
                return;
            }
            this.metedataInit($event);
            this.closeMetadataDlg();
        }));
        metaDataRef.instance.closeModal.subscribe((/**
         * @return {?}
         */
        () => {
            //测试
            //this.metedataInit(1);
            this.closeMetadataDlg();
        }));
    }
    /**
     * 供服务使用的获取提交数据
     * @return {?}
     */
    getdata() {
        //this.lookupConfigData.filter = this.fg.conditions;
        /** @type {?} */
        let conditions = this.fg.conditions.filter((/**
         * @param {?} c
         * @return {?}
         */
        c => c.filterField));
        this.lookupConfigData.filter = conditions;
        this.lookupConfigData.configId = this.configId;
        this.lookupConfigData.code = this.configCode;
        this.lookupConfigData.name = this.configName;
        this.lookupConfigData.textField = this.metaDataTextFieldValue;
        this.lookupConfigData.loadDataType = this.loadDataType;
        return this.lookupConfigData;
    }
    /**
     * 关闭弹窗
     * @return {?}
     */
    closeMetadataDlg() {
        if (this.metadataDialog) {
            this.metadataDialog.close();
        }
    }
    /**
     * 获取帮助schema字段
     * @param {?} schema schema
     * @return {?}
     */
    getHelpFields(schema) {
        if (!schema || !schema.entities || schema.entities.length === 0) {
            return;
        }
        /** @type {?} */
        const mainTable = schema.entities[0];
        if (mainTable.type && mainTable.type.fields) {
            this.getPlainFields(mainTable.type.fields);
        }
    }
    /**
     * @param {?} fields
     * @return {?}
     */
    getPlainFields(fields) {
        this.filterColumns = [];
        fields.forEach((/**
         * @param {?} element
         * @return {?}
         */
        element => {
            this.filterColumns = this.filterColumns.concat({
                label: element.name,
                value: element.path
            });
            // 关联表字段 / UDT字段
            if (element.type && element.type.fields && element.type.fields.length > 0) {
                this.getPlainFields(element.type.fields);
            }
        }));
    }
    /**
     * 帮助元数据中存储的relation等字段需要转成枚举值
     * @private
     * @param {?} conditions
     * @return {?}
     */
    adaptHelpConditions(conditions) {
        if (!conditions || !conditions.length) {
            return [];
        }
        conditions.forEach((/**
         * @param {?} cd
         * @return {?}
         */
        cd => {
            if (typeof (cd.relation) !== 'number') {
                cd.relation = (/** @type {?} */ (FilterRelation[cd.relation]));
            }
            if (typeof (cd.compare) !== 'number') {
                cd.compare = (/** @type {?} */ (Compare[cd.compare]));
            }
            if (typeof (cd.expresstype) !== 'number') {
                if (ExpressValueType) {
                    cd.expresstype = (/** @type {?} */ (ExpressValueType[cd.expresstype]));
                }
                else {
                    cd.expresstype = cd.expresstype === 'Value' ? 0 : 1;
                }
            }
        }));
        return conditions;
    }
    /**
     * 元数据信息初始化
     * @param {?} event
     * @return {?}
     */
    metedataInit(event) {
        /** @type {?} */
        const helpObject = JSON.parse(event.metadata.content);
        this.metaData = helpObject;
        this.filterConditions = this.adaptHelpConditions(helpObject.dataSource.conditions);
        this.getHelpFields(helpObject.schema.main);
        if (event.metadata.name) {
            this.metaDataName = event.metadata.name;
        }
        this.metaDataTextField = helpObject.textFieldName;
        this.metaDataTextFieldValue = helpObject.textField;
        this.isTreeList = (helpObject.displayType.toLowerCase() === 'treelist');
        //this.loadDataType = helpObject['dataSource']['treeInfo']['loadDataType'];
        /** @type {?} */
        let metedataLoadDataType = helpObject['dataSource']['treeInfo']['loadDataType'];
        if (metedataLoadDataType == 'all')
            this.loadDataType = 'loadall';
        else if (metedataLoadDataType == 'async')
            this.loadDataType = 'layerload';
        this.lookupConfigData.helpId = event.metadata.id;
        //模拟数据获取
        // let event2: any;
        // this.http.get('assets/data/lookupconfig2.json').subscribe((data: any) => {
        //   event2 = data;
        //   const helpObject = JSON.parse(event2.metadata.content);
        //   this.metaData = helpObject;
        //   this.filterConditions = this.adaptHelpConditions(helpObject.dataSource.conditions);
        //   this.getHelpFields(helpObject.schema.main);
        //   if (event2.metadata.fileName) {
        //     this.metaDataName = event2.metadata.fileName;
        //   }
        //   this.metaDataTextField = helpObject.textField
        //   this.isTreeList = (helpObject.displayType.toLowerCase() === 'treelist')
        //   this.loadDataType = helpObject['dataSource']['treeInfo']['loadDataType'];
        //   this.lookupConfigData.helpId = event2.metadata.id;
        //   console.log(helpObject);
        // }
        // );
    }
    /**
     * 帮助文本字段弹窗
     * @return {?}
     */
    getTextFieldName() {
        /** @type {?} */
        const fileNameDataFac = this.cfr.resolveComponentFactory(SelectHelpTextFieldComponent);
        /** @type {?} */
        const fileNameDataRef = fileNameDataFac.create(this.injector);
        if (!this.metaData)
            return;
        fileNameDataRef.instance.helpId = this.metaData.id;
        fileNameDataRef.instance.value = this.metaDataTextFieldValue;
        fileNameDataRef.instance.schemaData = this.metaData.schema.main;
        this.textFieldDialog = this.modalService.show(fileNameDataRef, {
            title: this.selectFileNameTitle,
            width: 900,
            height: 600,
            showButtons: true,
            buttons: fileNameDataRef.instance.modalFooter
        });
        fileNameDataRef.instance.submitModal.subscribe((/**
         * @param {?} $event
         * @return {?}
         */
        ($event) => {
            if ($event.value) {
                //this.metaDataTextField = $event.value;
                this.metaDataTextField = $event.name;
                this.metaDataTextFieldValue = $event.value;
                this.lookupConfigData.textField = this.metaDataTextFieldValue;
            }
            this.closeTextFieldDlg();
        }));
        fileNameDataRef.instance.closeModal.subscribe((/**
         * @return {?}
         */
        () => {
            this.closeTextFieldDlg();
        }));
    }
    /**
     * @return {?}
     */
    closeTextFieldDlg() {
        if (this.textFieldDialog) {
            this.textFieldDialog.close();
        }
    }
}
LookupConfigComponent.decorators = [
    { type: Component, args: [{
                selector: 'farris-lookup-config',
                template: "<div class=\"f-lookup-config-wrapper\">\r\n    <div class=\"f-lookup-config-inner farris-overflow-y-auto\">\r\n        <div class=\"f-lookup-config-item\">\r\n            <div class=\"config-item-title\">\r\n                <span class=\"config-item-title-text\">{{ 'lookupConfig.code' | locale:'\u7F16\u53F7' }}</span>\r\n            </div>\r\n            <div class=\"config-item-content\">\r\n                <div class=\"config-item-input-wrapper\">\r\n                    <input-group [(ngModel)]=\"configCode\" [readonly]=\"readonly\"></input-group>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"f-lookup-config-item\">\r\n            <div class=\"config-item-title\">\r\n                <span class=\"config-item-title-text\">{{ 'lookupConfig.name' | locale:'\u540D\u79F0' }}</span>\r\n            </div>\r\n            <div class=\"config-item-content\">\r\n                <div class=\"config-item-input-wrapper\">\r\n                    <input-group [(ngModel)]=\"configName\" [readonly]=\"readonly\"></input-group>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"f-lookup-config-item\">\r\n            <div class=\"config-item-title\">\r\n                <span class=\"config-item-title-text\">{{ 'lookupConfig.select' | locale:'\u9009\u62E9\u5E2E\u52A9\u5143\u6570\u636E' }}</span>\r\n            </div>\r\n            <div class=\"config-item-content\">\r\n                <div class=\"config-item-input-wrapper\">\r\n                    <input-group [editable]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon\"\r\n                        [enableClear]=\"false\" (clickHandle)=\"getMetadata()\" [ngModel]=\"metaDataName\"\r\n                        [placeholder]=\"placeholder\" [readonly]=\"readonly\"></input-group>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"f-lookup-config-item\" *ngIf=\"isTreeList\">\r\n            <div class=\"config-item-title\">\r\n                <span class=\"config-item-title-text\">{{ 'lookupConfig.loadTypeTitle' | locale:'\u9009\u62E9\u52A0\u8F7D\u65B9\u5F0F' }}</span>\r\n            </div>\r\n            <div class=\"config-item-content\">\r\n                <div class=\"config-item-input-wrapper\">\r\n                    <farris-combo-list\r\n                        [(ngModel)]=\"loadDataType\"\r\n                        [idField]=\"'value'\"\r\n                        [textField]=\"'name'\"\r\n                        [data]=\"typeNumValues\"\r\n                    ></farris-combo-list>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"f-lookup-config-item\" *ngIf=\"metaDataName || metaDataTextField\">\r\n            <div class=\"config-item-title\">\r\n                <span class=\"config-item-title-text\">{{ 'lookupConfig.textFieldLable' | locale:'\u5E2E\u52A9\u6587\u672C\u5B57\u6BB5' }}</span>\r\n            </div>\r\n            <div class=\"config-item-content\">\r\n                <div class=\"config-item-input-wrapper\">\r\n                    <input-group [editable]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon\"\r\n                        [enableClear]=\"false\" (clickHandle)=\"getTextFieldName()\" [ngModel]=\"metaDataTextField\"\r\n                        [placeholder]=\"placeholder\" [readonly]=\"readonly\"></input-group>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"f-lookup-config-item\">\r\n            <div class=\"config-item-title\">\r\n                <span class=\"config-item-title-text\">{{ 'lookupConfig.filter' | locale }}</span>\r\n            </div>\r\n            <div class=\"config-item-content\">\r\n                <div class=\"config-item-filter-wrapper\">\r\n                    <filter-grid #fg [conditions]=\"filterConditions\" [columns]=\"filterColumns\"></filter-grid>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- <button class=\"btn btn-primary\" (click)=\"getdata()\">\u83B7\u53D6</button> -->\r\n        <!-- <div class=\"f-lookup-config-item\">\r\n            <div class=\"config-item-title\">\r\n                <span class=\"config-item-title-text\">\u6743\u9650\u53C2\u6570</span>\r\n            </div>\r\n            <div class=\"config-item-content\">\r\n                <div class=\"config-item-permission-wrapper farris-form farris-form-controls-inline\">\r\n                    <div class=\"permission-input-item farris-group-wrap f-form-lable-auto\">\r\n                        <div class=\"form-group farris-form-group\">\r\n                            <label class=\"col-form-label\">\r\n                                <span class=\"farris-label-text\">\u4E1A\u52A1\u5BF9\u8C61</span>\r\n                            </label>\r\n                            <div class=\"farris-input-wrap\">\r\n                                <farris-lookup-grid\r\n                                    #lookup\r\n                                ></farris-lookup-grid>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"permission-input-item farris-group-wrap f-form-lable-auto\">\r\n                        <div class=\"form-group farris-form-group\">\r\n                            <label class=\"col-form-label\">\r\n                                <span class=\"farris-label-text\">\u4E1A\u52A1\u64CD\u4F5C</span>\r\n                            </label>\r\n                            <div class=\"farris-input-wrap\">\r\n                                <input class=\"form-control\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"permission-input-item farris-group-wrap f-form-lable-auto\">\r\n                        <div class=\"form-group farris-form-group\">\r\n                            <label class=\"col-form-label\">\r\n                                <span class=\"farris-label-text\">\u6388\u6743\u5BF9\u8C61</span>\r\n                            </label>\r\n                            <div class=\"farris-input-wrap\">\r\n                                <input class=\"form-control\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> -->\r\n    </div>\r\n</div>",
                styles: [".f-lookup-config-wrapper .f-lookup-config-inner{padding:14px}.f-lookup-config-wrapper .f-lookup-config-inner .f-lookup-config-item{padding-bottom:16px}.f-lookup-config-wrapper .f-lookup-config-inner .f-lookup-config-item .config-item-title{margin-bottom:10px;font-size:16px;color:rgba(0,0,0,.85);font-weight:500}.f-lookup-config-wrapper .f-lookup-config-inner .f-lookup-config-item .config-item-title .f-icon{margin-right:4px;font-size:16px}.f-lookup-config-wrapper .f-lookup-config-inner .f-lookup-config-item .config-item-content{padding-left:16px}.f-lookup-config-wrapper .f-lookup-config-inner .f-lookup-config-item .config-item-content .config-item-input-wrapper{max-width:360px}.f-lookup-config-wrapper .f-lookup-config-inner .f-lookup-config-item .config-item-content .config-item-filter-wrapper{padding-top:10px}"]
            }] }
];
/** @nocollapse */
LookupConfigComponent.ctorParameters = () => [
    { type: ComponentFactoryResolver },
    { type: Injector },
    { type: BsModalService },
    { type: ConfigService },
    { type: HttpClient },
    { type: NotifyService },
    { type: GSPMetadataRTService }
];
LookupConfigComponent.propDecorators = {
    configId: [{ type: Input }],
    metadataPath: [{ type: Input }],
    isDeisgnerEnv: [{ type: Input }],
    readonly: [{ type: Input }],
    fg: [{ type: ViewChild, args: ['fg',] }]
};
if (false) {
    /** @type {?} */
    LookupConfigComponent.prototype.groupIcon;
    /** @type {?} */
    LookupConfigComponent.prototype.metaDataName;
    /** @type {?} */
    LookupConfigComponent.prototype.metaDataTextField;
    /** @type {?} */
    LookupConfigComponent.prototype.metaDataTextFieldValue;
    /** @type {?} */
    LookupConfigComponent.prototype.metaDataTextFieldCloumns;
    /** @type {?} */
    LookupConfigComponent.prototype.metaData;
    /** @type {?} */
    LookupConfigComponent.prototype.configId;
    /** @type {?} */
    LookupConfigComponent.prototype.metadataPath;
    /** @type {?} */
    LookupConfigComponent.prototype.isDeisgnerEnv;
    /** @type {?} */
    LookupConfigComponent.prototype.readonly;
    /** @type {?} */
    LookupConfigComponent.prototype.fg;
    /** @type {?} */
    LookupConfigComponent.prototype.filterConditions;
    /** @type {?} */
    LookupConfigComponent.prototype.filterColumns;
    /** @type {?} */
    LookupConfigComponent.prototype.metadataDialog;
    /** @type {?} */
    LookupConfigComponent.prototype.textFieldDialog;
    /** @type {?} */
    LookupConfigComponent.prototype.lookupConfigData;
    /** @type {?} */
    LookupConfigComponent.prototype.configCode;
    /** @type {?} */
    LookupConfigComponent.prototype.configName;
    /** @type {?} */
    LookupConfigComponent.prototype.configData;
    /** @type {?} */
    LookupConfigComponent.prototype.localeService;
    /** @type {?} */
    LookupConfigComponent.prototype.placeholder;
    /** @type {?} */
    LookupConfigComponent.prototype.selectTitle;
    /** @type {?} */
    LookupConfigComponent.prototype.fileNamePlaceholder;
    /** @type {?} */
    LookupConfigComponent.prototype.selectFileNameTitle;
    /** @type {?} */
    LookupConfigComponent.prototype.isTreeList;
    /** @type {?} */
    LookupConfigComponent.prototype.loadDataType;
    /** @type {?} */
    LookupConfigComponent.prototype.typeNumValues;
    /**
     * @type {?}
     * @private
     */
    LookupConfigComponent.prototype.cfr;
    /**
     * @type {?}
     * @private
     */
    LookupConfigComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    LookupConfigComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    LookupConfigComponent.prototype.configService;
    /**
     * @type {?}
     * @private
     */
    LookupConfigComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    LookupConfigComponent.prototype.notifyService;
    /**
     * @type {?}
     * @private
     */
    LookupConfigComponent.prototype.GSPService;
}
//# sourceMappingURL=data:application/json;base64,