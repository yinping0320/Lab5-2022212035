/**
 * @fileoverview added by tsickle
 * Generated from: lib/lookup-data.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Injector } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { NotifyService } from '@farris/ui-notify';
import { LoadingService } from '@farris/ui-loading';
var LookupDataService = /** @class */ (function () {
    function LookupDataService(http, injector, notifyService, loading) {
        this.http = http;
        this.injector = injector;
        this.notifyService = notifyService;
        this.loading = loading;
    }
    /**
     * @param {?} url
     * @param {?} params
     * @return {?}
     */
    LookupDataService.prototype.getData = /**
     * @param {?} url
     * @param {?} params
     * @return {?}
     */
    function (url, params) {
        if (!params || !params.helpId) {
            this.notifyService.error('helpId不能为空');
            this.loading.clearAll();
            return;
        }
        /** @type {?} */
        var _url = "/api/runtime/bcc/v1.0/helpconfig/data/" + params.helpId;
        params = Object.assign(params || {}, { withSpecificField: true });
        return this.http.get(_url, { params: { queryParam: JSON.stringify(params) } });
    };
    LookupDataService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    LookupDataService.ctorParameters = function () { return [
        { type: HttpClient },
        { type: Injector },
        { type: NotifyService },
        { type: LoadingService }
    ]; };
    return LookupDataService;
}());
export { LookupDataService };
if (false) {
    /** @type {?} */
    LookupDataService.prototype.http;
    /**
     * @type {?}
     * @private
     */
    LookupDataService.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    LookupDataService.prototype.notifyService;
    /**
     * @type {?}
     * @private
     */
    LookupDataService.prototype.loading;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9va3VwLWRhdGEuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvbG9va3VwLWNvbmZpZy8iLCJzb3VyY2VzIjpbImxpYi9sb29rdXAtZGF0YS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFckQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRWxELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFcEQ7SUFFRSwyQkFDUyxJQUFnQixFQUNmLFFBQWtCLEVBQ2xCLGFBQTRCLEVBQzVCLE9BQXVCO1FBSHhCLFNBQUksR0FBSixJQUFJLENBQVk7UUFDZixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQ2xCLGtCQUFhLEdBQWIsYUFBYSxDQUFlO1FBQzVCLFlBQU8sR0FBUCxPQUFPLENBQWdCO0lBRWpDLENBQUM7Ozs7OztJQUVELG1DQUFPOzs7OztJQUFQLFVBQVEsR0FBRyxFQUFFLE1BQW9CO1FBQy9CLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFO1lBQzdCLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDeEIsT0FBTztTQUNSOztZQUNLLElBQUksR0FBRywyQ0FBeUMsTUFBTSxDQUFDLE1BQVE7UUFFckUsTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxJQUFJLEVBQUUsRUFBRSxFQUFFLGlCQUFpQixFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFDbEUsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxVQUFVLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNqRixDQUFDOztnQkFwQkYsVUFBVTs7OztnQkFMRixVQUFVO2dCQUZFLFFBQVE7Z0JBSXBCLGFBQWE7Z0JBQ2IsY0FBYzs7SUF1QnZCLHdCQUFDO0NBQUEsQUFyQkQsSUFxQkM7U0FwQlksaUJBQWlCOzs7SUFFMUIsaUNBQXVCOzs7OztJQUN2QixxQ0FBMEI7Ozs7O0lBQzFCLDBDQUFvQzs7Ozs7SUFDcEMsb0NBQStCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQgeyBSZW1vdGVQYXJhbXMsIElMb29rdXBIdHRwU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9va3VwJztcclxuaW1wb3J0IHsgTm90aWZ5U2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbm90aWZ5JztcclxuaW1wb3J0IHsgTG9hZGluZ1NlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLWxvYWRpbmcnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgTG9va3VwRGF0YVNlcnZpY2UgaW1wbGVtZW50cyBJTG9va3VwSHR0cFNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHVibGljIGh0dHA6IEh0dHBDbGllbnQsXHJcbiAgICBwcml2YXRlIGluamVjdG9yOiBJbmplY3RvcixcclxuICAgIHByaXZhdGUgbm90aWZ5U2VydmljZTogTm90aWZ5U2VydmljZSxcclxuICAgIHByaXZhdGUgbG9hZGluZzogTG9hZGluZ1NlcnZpY2VcclxuICApIHtcclxuICB9XHJcblxyXG4gIGdldERhdGEodXJsLCBwYXJhbXM6IFJlbW90ZVBhcmFtcyk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICBpZiAoIXBhcmFtcyB8fCAhcGFyYW1zLmhlbHBJZCkge1xyXG4gICAgICB0aGlzLm5vdGlmeVNlcnZpY2UuZXJyb3IoJ2hlbHBJZOS4jeiDveS4uuepuicpO1xyXG4gICAgICB0aGlzLmxvYWRpbmcuY2xlYXJBbGwoKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgY29uc3QgX3VybCA9IGAvYXBpL3J1bnRpbWUvYmNjL3YxLjAvaGVscGNvbmZpZy9kYXRhLyR7cGFyYW1zLmhlbHBJZH1gO1xyXG5cclxuICAgIHBhcmFtcyA9IE9iamVjdC5hc3NpZ24ocGFyYW1zIHx8IHt9LCB7IHdpdGhTcGVjaWZpY0ZpZWxkOiB0cnVlIH0pO1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQoX3VybCwgeyBwYXJhbXM6IHsgcXVlcnlQYXJhbTogSlNPTi5zdHJpbmdpZnkocGFyYW1zKSB9IH0pO1xyXG4gIH1cclxufVxyXG4iXX0=