/**
 * @fileoverview added by tsickle
 * Generated from: lib/config.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
var ConfigService = /** @class */ (function () {
    // httpUrl = 'http://10.25.11.67:5200';
    function ConfigService(http) {
        this.http = http;
        this.getHelpConfig_Path = '/api/runtime/bcc/v1.0/helpconfig';
        this.saveHelpConfig_Path = '/api/runtime/bcc/v1.0/helpconfig';
    }
    /**
     * 通过configId获取回显数据
     * @param configId 配置id
     */
    /**
     * 通过configId获取回显数据
     * @param {?} configId 配置id
     * @return {?}
     */
    ConfigService.prototype.getHelpConfig = /**
     * 通过configId获取回显数据
     * @param {?} configId 配置id
     * @return {?}
     */
    function (configId) {
        /** @type {?} */
        var url = this.getHelpConfig_Path + '/' + configId;
        return this.http.get(url);
        //return this.http.get('assets/data/helpconfig.json');
    };
    /**
     * 保存帮助配置
     * @param params 参数
     */
    /**
     * 保存帮助配置
     * @param {?} params 参数
     * @return {?}
     */
    ConfigService.prototype.saveHelpConfig = /**
     * 保存帮助配置
     * @param {?} params 参数
     * @return {?}
     */
    function (params) {
        /** @type {?} */
        var saveUrl = this.saveHelpConfig_Path;
        /** @type {?} */
        var thisParams = Object.assign({}, params);
        thisParams.queryParam = JSON.stringify(thisParams.queryParam);
        //console.log('save',thisParams)
        return this.http.put(saveUrl, thisParams);
        //return this.http.get('assets/data/savehelpconfig.json');
    };
    ConfigService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    ConfigService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    /** @nocollapse */ ConfigService.ngInjectableDef = i0.defineInjectable({ factory: function ConfigService_Factory() { return new ConfigService(i0.inject(i1.HttpClient)); }, token: ConfigService, providedIn: "root" });
    return ConfigService;
}());
export { ConfigService };
if (false) {
    /** @type {?} */
    ConfigService.prototype.getHelpConfig_Path;
    /** @type {?} */
    ConfigService.prototype.saveHelpConfig_Path;
    /**
     * @type {?}
     * @private
     */
    ConfigService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2xvb2t1cC1jb25maWcvIiwic291cmNlcyI6WyJsaWIvY29uZmlnLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7O0FBRWxEO0lBUUUsdUNBQXVDO0lBQ3ZDLHVCQUNVLElBQWdCO1FBQWhCLFNBQUksR0FBSixJQUFJLENBQVk7UUFMMUIsdUJBQWtCLEdBQUcsa0NBQWtDLENBQUM7UUFDeEQsd0JBQW1CLEdBQUcsa0NBQWtDLENBQUM7SUFLckQsQ0FBQztJQUNMOzs7T0FHRzs7Ozs7O0lBQ0gscUNBQWE7Ozs7O0lBQWIsVUFBYyxRQUFROztZQUNkLEdBQUcsR0FBRyxJQUFJLENBQUMsa0JBQWtCLEdBQUUsR0FBRyxHQUFFLFFBQVE7UUFDbEQsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUMxQixzREFBc0Q7SUFDeEQsQ0FBQztJQUVEOzs7T0FHRzs7Ozs7O0lBQ0gsc0NBQWM7Ozs7O0lBQWQsVUFBZSxNQUFNOztZQUNiLE9BQU8sR0FBRyxJQUFJLENBQUMsbUJBQW1COztZQUNsQyxVQUFVLEdBQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUMsTUFBTSxDQUFDO1FBQy9DLFVBQVUsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDOUQsZ0NBQWdDO1FBQ2hDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQzFDLDBEQUEwRDtJQUM1RCxDQUFDOztnQkFqQ0YsVUFBVSxTQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7OztnQkFKUSxVQUFVOzs7d0JBRG5CO0NBcUNDLEFBbENELElBa0NDO1NBL0JZLGFBQWE7OztJQUV4QiwyQ0FBd0Q7O0lBQ3hELDRDQUF5RDs7Ozs7SUFJdkQsNkJBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDb25maWdTZXJ2aWNlIHtcclxuXHJcbiAgZ2V0SGVscENvbmZpZ19QYXRoID0gJy9hcGkvcnVudGltZS9iY2MvdjEuMC9oZWxwY29uZmlnJztcclxuICBzYXZlSGVscENvbmZpZ19QYXRoID0gJy9hcGkvcnVudGltZS9iY2MvdjEuMC9oZWxwY29uZmlnJztcclxuXHJcbiAgLy8gaHR0cFVybCA9ICdodHRwOi8vMTAuMjUuMTEuNjc6NTIwMCc7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIGh0dHA6IEh0dHBDbGllbnQsXHJcbiAgKSB7IH1cclxuICAvKipcclxuICAgKiDpgJrov4djb25maWdJZOiOt+WPluWbnuaYvuaVsOaNrlxyXG4gICAqIEBwYXJhbSBjb25maWdJZCDphY3nva5pZFxyXG4gICAqL1xyXG4gIGdldEhlbHBDb25maWcoY29uZmlnSWQpIHtcclxuICAgIGNvbnN0IHVybCA9IHRoaXMuZ2V0SGVscENvbmZpZ19QYXRoICsnLycrIGNvbmZpZ0lkO1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodXJsKTtcclxuICAgIC8vcmV0dXJuIHRoaXMuaHR0cC5nZXQoJ2Fzc2V0cy9kYXRhL2hlbHBjb25maWcuanNvbicpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5L+d5a2Y5biu5Yqp6YWN572uXHJcbiAgICogQHBhcmFtIHBhcmFtcyDlj4LmlbBcclxuICAgKi9cclxuICBzYXZlSGVscENvbmZpZyhwYXJhbXMpe1xyXG4gICAgY29uc3Qgc2F2ZVVybCA9IHRoaXMuc2F2ZUhlbHBDb25maWdfUGF0aDtcclxuICAgIGNvbnN0IHRoaXNQYXJhbXM6YW55ID0gT2JqZWN0LmFzc2lnbih7fSxwYXJhbXMpO1xyXG4gICAgdGhpc1BhcmFtcy5xdWVyeVBhcmFtID0gSlNPTi5zdHJpbmdpZnkodGhpc1BhcmFtcy5xdWVyeVBhcmFtKTtcclxuICAgIC8vY29uc29sZS5sb2coJ3NhdmUnLHRoaXNQYXJhbXMpXHJcbiAgICByZXR1cm4gdGhpcy5odHRwLnB1dChzYXZlVXJsLCB0aGlzUGFyYW1zKTtcclxuICAgIC8vcmV0dXJuIHRoaXMuaHR0cC5nZXQoJ2Fzc2V0cy9kYXRhL3NhdmVoZWxwY29uZmlnLmpzb24nKTtcclxuICB9XHJcbn1cclxuIl19