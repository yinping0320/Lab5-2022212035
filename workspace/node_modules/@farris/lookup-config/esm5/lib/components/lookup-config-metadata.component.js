/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/lookup-config-metadata.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, EventEmitter, Input } from '@angular/core';
var LookupConfigMetaDataComponent = /** @class */ (function () {
    function LookupConfigMetaDataComponent() {
        // metadataPath = '';
        this.HelpMetadata = 'HelpMetadata';
        this.isDeisgnerEnv = false;
        this.selectedMeta = new EventEmitter();
        this.closeModal = new EventEmitter();
    }
    /**
     * @return {?}
     */
    LookupConfigMetaDataComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} event
     * @return {?}
     */
    LookupConfigMetaDataComponent.prototype.selectedMetadata = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.selectedMeta.emit(event);
    };
    /**
     * @return {?}
     */
    LookupConfigMetaDataComponent.prototype.closeModalEmitter = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    LookupConfigMetaDataComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-lookup-config-metadata',
                    template: "<div class=\"f-lookup-config-metadata\">\r\n    <div class=\"f-lookup-config-metadata-inner\">\r\n        <app-select-metadatart typeList=\"HelpMetadata\" (selectedMetadata)=\"selectedMetadata($event)\"\r\n            (closeModalEmitter)=\"closeModalEmitter()\">\r\n        </app-select-metadatart>\r\n    </div> \r\n</div>"
                }] }
    ];
    /** @nocollapse */
    LookupConfigMetaDataComponent.ctorParameters = function () { return []; };
    LookupConfigMetaDataComponent.propDecorators = {
        metadataPath: [{ type: Input }],
        isDeisgnerEnv: [{ type: Input }],
        selectedMeta: [{ type: Output, args: ['selectedMeta',] }],
        closeModal: [{ type: Output, args: ['closeModal',] }]
    };
    return LookupConfigMetaDataComponent;
}());
export { LookupConfigMetaDataComponent };
if (false) {
    /** @type {?} */
    LookupConfigMetaDataComponent.prototype.HelpMetadata;
    /** @type {?} */
    LookupConfigMetaDataComponent.prototype.metadataPath;
    /** @type {?} */
    LookupConfigMetaDataComponent.prototype.isDeisgnerEnv;
    /** @type {?} */
    LookupConfigMetaDataComponent.prototype.selectedMeta;
    /** @type {?} */
    LookupConfigMetaDataComponent.prototype.closeModal;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9va3VwLWNvbmZpZy1tZXRhZGF0YS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2xvb2t1cC1jb25maWcvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9sb29rdXAtY29uZmlnLW1ldGFkYXRhLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFL0U7SUFZRTs7UUFMQSxpQkFBWSxHQUFHLGNBQWMsQ0FBQztRQUVyQixrQkFBYSxHQUFXLEtBQUssQ0FBQztRQUNmLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUNwQyxlQUFVLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUN0QyxDQUFDOzs7O0lBRWpCLGdEQUFROzs7SUFBUjtJQUNBLENBQUM7Ozs7O0lBRUQsd0RBQWdCOzs7O0lBQWhCLFVBQWlCLEtBQUs7UUFDcEIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7OztJQUNELHlEQUFpQjs7O0lBQWpCO1FBQ0UsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN6QixDQUFDOztnQkF0QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSwrQkFBK0I7b0JBQ3pDLCtVQUFzRDtpQkFDdkQ7Ozs7OytCQUtFLEtBQUs7Z0NBQ0wsS0FBSzsrQkFDTCxNQUFNLFNBQUMsY0FBYzs2QkFDckIsTUFBTSxTQUFDLFlBQVk7O0lBYXRCLG9DQUFDO0NBQUEsQUF4QkQsSUF3QkM7U0FwQlksNkJBQTZCOzs7SUFHeEMscURBQThCOztJQUM5QixxREFBc0I7O0lBQ3RCLHNEQUF1Qzs7SUFDdkMscURBQTBEOztJQUMxRCxtREFBc0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2ZhcnJpcy1sb29rdXAtY29uZmlnLW1ldGFkYXRhJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vbG9va3VwLWNvbmZpZy1tZXRhZGF0YS5jb21wb25lbnQuaHRtbCdcclxufSlcclxuZXhwb3J0IGNsYXNzIExvb2t1cENvbmZpZ01ldGFEYXRhQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgLy8gbWV0YWRhdGFQYXRoID0gJyc7XHJcbiAgSGVscE1ldGFkYXRhID0gJ0hlbHBNZXRhZGF0YSc7XHJcbiAgQElucHV0KCkgbWV0YWRhdGFQYXRoO1xyXG4gIEBJbnB1dCgpIGlzRGVpc2duZXJFbnY6Ym9vbGVhbiA9IGZhbHNlO1xyXG4gIEBPdXRwdXQoJ3NlbGVjdGVkTWV0YScpIHNlbGVjdGVkTWV0YSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBAT3V0cHV0KCdjbG9zZU1vZGFsJykgY2xvc2VNb2RhbCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcblxyXG4gIHNlbGVjdGVkTWV0YWRhdGEoZXZlbnQpe1xyXG4gICAgdGhpcy5zZWxlY3RlZE1ldGEuZW1pdChldmVudCk7XHJcbiAgfVxyXG4gIGNsb3NlTW9kYWxFbWl0dGVyKCl7XHJcbiAgICB0aGlzLmNsb3NlTW9kYWwuZW1pdCgpO1xyXG4gIH1cclxuXHJcbn1cclxuIl19