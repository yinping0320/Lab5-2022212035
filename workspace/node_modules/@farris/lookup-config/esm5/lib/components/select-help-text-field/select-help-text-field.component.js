/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/select-help-text-field/select-help-text-field.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, Input, EventEmitter, ViewChild, TemplateRef, HostBinding, NgZone } from '@angular/core';
import { LocaleService } from '@farris/ui-locale';
import { NotifyService } from '@farris/ui-notify';
import { TreeTableComponent } from '@farris/ui-treetable';
var SelectHelpTextFieldComponent = /** @class */ (function () {
    function SelectHelpTextFieldComponent(notifyService, ngZone, localeService) {
        this.notifyService = notifyService;
        this.ngZone = ngZone;
        this.localeService = localeService;
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.helpId = '';
        this.class = 'd-flex f-utils-fill-flex-column h-100';
        this.modalConfig = {
            title: '字段选择器',
            width: 900,
            height: 500,
            showButtons: true,
            showMaxButton: false
        };
        // 树表数据
        this.helpTreeData = [];
        // 树表列配置
        this.treeCols = [{ field: 'name', title: '名称' }, { field: 'label', title: '编号' }, { field: 'bindingPath', title: '绑定字段' }];
        this.fieldName = '名称';
        this.fieldLabel = '编号';
        this.fieldTitle = '绑定字段';
        this.fieldError = '已绑定字段不存在！';
    }
    /**
     * @return {?}
     */
    SelectHelpTextFieldComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.fieldName = this.localeService.getValue('lookupConfig.name');
        this.fieldLabel = this.localeService.getValue('lookupConfig.code');
        this.fieldTitle = this.localeService.getValue('lookupConfig.bindingPath');
        this.fieldError = this.localeService.getValue('lookupConfig.fieldError');
        this.treeCols = [{ field: 'name', title: this.fieldName }, { field: 'label', title: this.fieldLabel }, { field: 'bindingPath', title: this.fieldTitle }];
        if (!this.schemaData) {
            return;
        }
        this.getHelpFields(this.schemaData);
    };
    /**
     * 获取帮助schema字段
     * @param schema schema
     */
    /**
     * 获取帮助schema字段
     * @param {?} schema schema
     * @return {?}
     */
    SelectHelpTextFieldComponent.prototype.getHelpFields = /**
     * 获取帮助schema字段
     * @param {?} schema schema
     * @return {?}
     */
    function (schema) {
        var _this = this;
        if (!schema || !schema.entities || schema.entities.length === 0) {
            return;
        }
        /** @type {?} */
        var mainTable = schema.entities[0];
        if (mainTable.type && mainTable.type.fields) {
            this.helpTreeData = this.assembleFields2Tree(mainTable.type.fields);
        }
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            setTimeout((/**
             * @return {?}
             */
            function () {
                if (!_this.value) {
                    return;
                }
                try {
                    _this.treeTable.selectNode(_this.value);
                }
                catch (e) {
                    _this.treeTable.clearSelections();
                    _this.notifyService.error(_this.fieldError);
                }
            }));
        }));
    };
    /**
     * schema字段集合组装成树
     * @param fields schema字段集合
     */
    /**
     * schema字段集合组装成树
     * @param {?} fields schema字段集合
     * @return {?}
     */
    SelectHelpTextFieldComponent.prototype.assembleFields2Tree = /**
     * schema字段集合组装成树
     * @param {?} fields schema字段集合
     * @return {?}
     */
    function (fields) {
        var _this = this;
        /** @type {?} */
        var treeData = [];
        fields.forEach((/**
         * @param {?} element
         * @return {?}
         */
        function (element) {
            // 关联表字段 / UDT字段
            /** @type {?} */
            var children = [];
            if (element.type && element.type.fields && element.type.fields.length > 0) {
                children = _this.assembleFields2Tree(element.type.fields);
            }
            // 适配旧的帮助元数据没有bindingPath属性
            if (!element.bindingPath) {
                element.bindingPath = element['parentPath'] ? element['parentPath'] + '.' + element.label : element.label;
            }
            treeData.push({
                data: element,
                children: children,
                expanded: true,
                selectable: children.length > 0 ? false : true
            });
        }));
        return treeData;
    };
    /**
     * 取消
     */
    /**
     * 取消
     * @return {?}
     */
    SelectHelpTextFieldComponent.prototype.clickCancel = /**
     * 取消
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    /**
     * 确定
     */
    /**
     * 确定
     * @return {?}
     */
    SelectHelpTextFieldComponent.prototype.clickConfirm = /**
     * 确定
     * @return {?}
     */
    function () {
        if (!this.treeTable.selectedRow) {
            this.notifyService.warning('请选择字段');
            return;
        }
        /** @type {?} */
        var selectedData = this.treeTable.selectedRow.data;
        this.submitModal.emit({ value: selectedData.bindingPath, name: selectedData.name });
    };
    SelectHelpTextFieldComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-select-help-text-field',
                    template: "<farris-treetable #treeTable [data]=\"helpTreeData\" [columns]=\"treeCols\" [idField]=\"'bindingPath'\" [fixedHeader]=\"true\"\r\n    [fit]=\"true\" [singleSelect]=\"true\" [showFilterBar]=\"false\" [resizableColumns]=\"true\"\r\n    [showCheckAll]=\"false\" [showCheckbox]=\"false\" [checkOnSelect]=\"true\" [selectOnCheck]=\"true\">\r\n</farris-treetable>\r\n\r\n<ng-template #modalFooter>\r\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"clickCancel()\">{{ 'lookupConfig.cancel' | locale }}</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"clickConfirm()\">{{ 'lookupConfig.sure' | locale }}</button>\r\n</ng-template>"
                }] }
    ];
    /** @nocollapse */
    SelectHelpTextFieldComponent.ctorParameters = function () { return [
        { type: NotifyService },
        { type: NgZone },
        { type: LocaleService }
    ]; };
    SelectHelpTextFieldComponent.propDecorators = {
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        value: [{ type: Input }],
        helpId: [{ type: Input }],
        schemaData: [{ type: Input }],
        modalFooter: [{ type: ViewChild, args: ['modalFooter',] }],
        class: [{ type: HostBinding, args: ['class',] }],
        treeTable: [{ type: ViewChild, args: ['treeTable',] }]
    };
    return SelectHelpTextFieldComponent;
}());
export { SelectHelpTextFieldComponent };
if (false) {
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.closeModal;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.submitModal;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.value;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.helpId;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.schemaData;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.modalFooter;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.class;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.modalConfig;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.helpTreeData;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.treeCols;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.fieldName;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.fieldLabel;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.fieldTitle;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.fieldError;
    /** @type {?} */
    SelectHelpTextFieldComponent.prototype.treeTable;
    /**
     * @type {?}
     * @private
     */
    SelectHelpTextFieldComponent.prototype.notifyService;
    /**
     * @type {?}
     * @private
     */
    SelectHelpTextFieldComponent.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    SelectHelpTextFieldComponent.prototype.localeService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LWhlbHAtdGV4dC1maWVsZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2xvb2t1cC1jb25maWcvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9zZWxlY3QtaGVscC10ZXh0LWZpZWxkL3NlbGVjdC1oZWxwLXRleHQtZmllbGQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUgsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQVksa0JBQWtCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVwRTtJQWtDSSxzQ0FBb0IsYUFBNEIsRUFBVSxNQUFjLEVBQVMsYUFBNEI7UUFBekYsa0JBQWEsR0FBYixhQUFhLENBQWU7UUFBVSxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQVMsa0JBQWEsR0FBYixhQUFhLENBQWU7UUE3Qm5HLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ3JDLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUV2QyxXQUFNLEdBQUcsRUFBRSxDQUFDO1FBS3JCLFVBQUssR0FBRyx1Q0FBdUMsQ0FBQztRQUVoRCxnQkFBVyxHQUFHO1lBQ1YsS0FBSyxFQUFFLE9BQU87WUFDZCxLQUFLLEVBQUUsR0FBRztZQUNWLE1BQU0sRUFBRSxHQUFHO1lBQ1gsV0FBVyxFQUFFLElBQUk7WUFDakIsYUFBYSxFQUFFLEtBQUs7U0FDdkIsQ0FBQzs7UUFHRixpQkFBWSxHQUFlLEVBQUUsQ0FBQzs7UUFFOUIsYUFBUSxHQUFHLENBQUMsRUFBRSxLQUFLLEVB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QyxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxFQUFFLFlBQVksQ0FBQyxXQUFXLEVBQUUsSUFBSSxFQUFFLFlBQVksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3hGLENBQUM7O2dCQWxISixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLDRCQUE0QjtvQkFDdEMsd3FCQUFzRDtpQkFDekQ7Ozs7Z0JBTlEsYUFBYTtnQkFGd0UsTUFBTTtnQkFDM0YsYUFBYTs7OzZCQVNqQixNQUFNOzhCQUNOLE1BQU07d0JBQ04sS0FBSzt5QkFDTCxLQUFLOzZCQUNMLEtBQUs7OEJBQ0wsU0FBUyxTQUFDLGFBQWE7d0JBRXZCLFdBQVcsU0FBQyxPQUFPOzRCQW9CbkIsU0FBUyxTQUFDLFdBQVc7O0lBbUYxQixtQ0FBQztDQUFBLEFBbkhELElBbUhDO1NBL0dZLDRCQUE0Qjs7O0lBQ3JDLGtEQUErQzs7SUFDL0MsbURBQWdEOztJQUNoRCw2Q0FBZTs7SUFDZiw4Q0FBcUI7O0lBQ3JCLGtEQUFvQjs7SUFDcEIsbURBQXdEOztJQUV4RCw2Q0FDZ0Q7O0lBRWhELG1EQU1FOztJQUdGLG9EQUE4Qjs7SUFFOUIsZ0RBQXNIOztJQUN0SCxpREFBaUI7O0lBQ2pCLGtEQUFrQjs7SUFDbEIsa0RBQW9COztJQUNwQixrREFBeUI7O0lBRXpCLGlEQUFzRDs7Ozs7SUFFMUMscURBQW9DOzs7OztJQUFFLDhDQUFzQjs7Ozs7SUFBQyxxREFBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT3V0cHV0LCBJbnB1dCwgRXZlbnRFbWl0dGVyLCBWaWV3Q2hpbGQsIFRlbXBsYXRlUmVmLCBIb3N0QmluZGluZywgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IExvY2FsZVNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLWxvY2FsZSc7XHJcbmltcG9ydCB7IE5vdGlmeVNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLW5vdGlmeSc7XHJcbmltcG9ydCB7IFRyZWVOb2RlLCBUcmVlVGFibGVDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLXRyZWV0YWJsZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnYXBwLXNlbGVjdC1oZWxwLXRleHQtZmllbGQnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL3NlbGVjdC1oZWxwLXRleHQtZmllbGQuY29tcG9uZW50Lmh0bWwnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTZWxlY3RIZWxwVGV4dEZpZWxkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIEBPdXRwdXQoKSBjbG9zZU1vZGFsID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcbiAgICBAT3V0cHV0KCkgc3VibWl0TW9kYWwgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuICAgIEBJbnB1dCgpIHZhbHVlO1xyXG4gICAgQElucHV0KCkgaGVscElkID0gJyc7XHJcbiAgICBASW5wdXQoKSBzY2hlbWFEYXRhO1xyXG4gICAgQFZpZXdDaGlsZCgnbW9kYWxGb290ZXInKSBtb2RhbEZvb3RlcjogVGVtcGxhdGVSZWY8YW55PjtcclxuXHJcbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzJylcclxuICAgIGNsYXNzID0gJ2QtZmxleCBmLXV0aWxzLWZpbGwtZmxleC1jb2x1bW4gaC0xMDAnO1xyXG5cclxuICAgIG1vZGFsQ29uZmlnID0ge1xyXG4gICAgICAgIHRpdGxlOiAn5a2X5q616YCJ5oup5ZmoJyxcclxuICAgICAgICB3aWR0aDogOTAwLFxyXG4gICAgICAgIGhlaWdodDogNTAwLFxyXG4gICAgICAgIHNob3dCdXR0b25zOiB0cnVlLFxyXG4gICAgICAgIHNob3dNYXhCdXR0b246IGZhbHNlXHJcbiAgICB9O1xyXG5cclxuICAgIC8vIOagkeihqOaVsOaNrlxyXG4gICAgaGVscFRyZWVEYXRhOiBUcmVlTm9kZVtdID0gW107XHJcbiAgICAvLyDmoJHooajliJfphY3nva5cclxuICAgIHRyZWVDb2xzID0gW3sgZmllbGQ6ICduYW1lJywgdGl0bGU6ICflkI3np7AnIH0sIHsgZmllbGQ6ICdsYWJlbCcsIHRpdGxlOiAn57yW5Y+3JyB9LCB7IGZpZWxkOiAnYmluZGluZ1BhdGgnLCB0aXRsZTogJ+e7keWumuWtl+autScgfV07XHJcbiAgICBmaWVsZE5hbWUgPSAn5ZCN56ewJztcclxuICAgIGZpZWxkTGFiZWwgPSAn57yW5Y+3JztcclxuICAgIGZpZWxkVGl0bGUgPSAn57uR5a6a5a2X5q61JztcclxuICAgIGZpZWxkRXJyb3IgPSAn5bey57uR5a6a5a2X5q615LiN5a2Y5Zyo77yBJztcclxuICAgIC8vIOagkeihqOWunuS+i1xyXG4gICAgQFZpZXdDaGlsZCgndHJlZVRhYmxlJykgdHJlZVRhYmxlOiBUcmVlVGFibGVDb21wb25lbnQ7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBub3RpZnlTZXJ2aWNlOiBOb3RpZnlTZXJ2aWNlLCBwcml2YXRlIG5nWm9uZTogTmdab25lLHByaXZhdGUgbG9jYWxlU2VydmljZTogTG9jYWxlU2VydmljZSkgeyB9XHJcblxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5maWVsZE5hbWUgPSB0aGlzLmxvY2FsZVNlcnZpY2UuZ2V0VmFsdWUoJ2xvb2t1cENvbmZpZy5uYW1lJyk7XHJcbiAgICAgICAgdGhpcy5maWVsZExhYmVsID0gdGhpcy5sb2NhbGVTZXJ2aWNlLmdldFZhbHVlKCdsb29rdXBDb25maWcuY29kZScpO1xyXG4gICAgICAgIHRoaXMuZmllbGRUaXRsZSA9IHRoaXMubG9jYWxlU2VydmljZS5nZXRWYWx1ZSgnbG9va3VwQ29uZmlnLmJpbmRpbmdQYXRoJyk7XHJcbiAgICAgICAgdGhpcy5maWVsZEVycm9yID0gdGhpcy5sb2NhbGVTZXJ2aWNlLmdldFZhbHVlKCdsb29rdXBDb25maWcuZmllbGRFcnJvcicpO1xyXG4gICAgICAgIHRoaXMudHJlZUNvbHMgPSBbeyBmaWVsZDogJ25hbWUnLCB0aXRsZTogdGhpcy5maWVsZE5hbWUgfSwgeyBmaWVsZDogJ2xhYmVsJywgdGl0bGU6IHRoaXMuZmllbGRMYWJlbCB9LCB7IGZpZWxkOiAnYmluZGluZ1BhdGgnLCB0aXRsZTogdGhpcy5maWVsZFRpdGxlIH1dO1xyXG4gICAgICAgIGlmICghdGhpcy5zY2hlbWFEYXRhKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5nZXRIZWxwRmllbGRzKHRoaXMuc2NoZW1hRGF0YSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOiOt+WPluW4ruWKqXNjaGVtYeWtl+autVxyXG4gICAgICogQHBhcmFtIHNjaGVtYSBzY2hlbWFcclxuICAgICAqL1xyXG4gICAgZ2V0SGVscEZpZWxkcyhzY2hlbWEpIHtcclxuICAgICAgICBpZiAoIXNjaGVtYSB8fCAhc2NoZW1hLmVudGl0aWVzIHx8IHNjaGVtYS5lbnRpdGllcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBtYWluVGFibGUgPSBzY2hlbWEuZW50aXRpZXNbMF07XHJcbiAgICAgICAgaWYgKG1haW5UYWJsZS50eXBlICYmIG1haW5UYWJsZS50eXBlLmZpZWxkcykge1xyXG4gICAgICAgICAgICB0aGlzLmhlbHBUcmVlRGF0YSA9IHRoaXMuYXNzZW1ibGVGaWVsZHMyVHJlZShtYWluVGFibGUudHlwZS5maWVsZHMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLnZhbHVlKSB7IHJldHVybjsgfVxyXG4gICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnRyZWVUYWJsZS5zZWxlY3ROb2RlKHRoaXMudmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudHJlZVRhYmxlLmNsZWFyU2VsZWN0aW9ucygpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5U2VydmljZS5lcnJvcih0aGlzLmZpZWxkRXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogc2NoZW1h5a2X5q616ZuG5ZCI57uE6KOF5oiQ5qCRXHJcbiAgICAgKiBAcGFyYW0gZmllbGRzIHNjaGVtYeWtl+autembhuWQiFxyXG4gICAgICovXHJcbiAgICBhc3NlbWJsZUZpZWxkczJUcmVlKGZpZWxkcykge1xyXG4gICAgICAgIGNvbnN0IHRyZWVEYXRhID0gW107XHJcbiAgICAgICAgZmllbGRzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgIC8vIOWFs+iBlOihqOWtl+autSAvIFVEVOWtl+autVxyXG4gICAgICAgICAgICBsZXQgY2hpbGRyZW4gPSBbXTtcclxuICAgICAgICAgICAgaWYgKGVsZW1lbnQudHlwZSAmJiBlbGVtZW50LnR5cGUuZmllbGRzICYmIGVsZW1lbnQudHlwZS5maWVsZHMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgY2hpbGRyZW4gPSB0aGlzLmFzc2VtYmxlRmllbGRzMlRyZWUoZWxlbWVudC50eXBlLmZpZWxkcyk7XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIOmAgumFjeaXp+eahOW4ruWKqeWFg+aVsOaNruayoeaciWJpbmRpbmdQYXRo5bGe5oCnXHJcbiAgICAgICAgICAgIGlmICghZWxlbWVudC5iaW5kaW5nUGF0aCkge1xyXG4gICAgICAgICAgICAgICAgZWxlbWVudC5iaW5kaW5nUGF0aCA9IGVsZW1lbnRbJ3BhcmVudFBhdGgnXSA/IGVsZW1lbnRbJ3BhcmVudFBhdGgnXSArICcuJyArIGVsZW1lbnQubGFiZWwgOiBlbGVtZW50LmxhYmVsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRyZWVEYXRhLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgZGF0YTogZWxlbWVudCxcclxuICAgICAgICAgICAgICAgIGNoaWxkcmVuLFxyXG4gICAgICAgICAgICAgICAgZXhwYW5kZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBzZWxlY3RhYmxlOiBjaGlsZHJlbi5sZW5ndGggPiAwID8gZmFsc2UgOiB0cnVlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB0cmVlRGF0YTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWPlua2iFxyXG4gICAgICovXHJcbiAgICBjbGlja0NhbmNlbCgpIHtcclxuICAgICAgICB0aGlzLmNsb3NlTW9kYWwuZW1pdCgpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDnoa7lrppcclxuICAgICAqL1xyXG4gICAgY2xpY2tDb25maXJtKCkge1xyXG4gICAgICAgIGlmICghdGhpcy50cmVlVGFibGUuc2VsZWN0ZWRSb3cpIHtcclxuICAgICAgICAgICAgdGhpcy5ub3RpZnlTZXJ2aWNlLndhcm5pbmcoJ+ivt+mAieaLqeWtl+autScpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHNlbGVjdGVkRGF0YSA9IHRoaXMudHJlZVRhYmxlLnNlbGVjdGVkUm93LmRhdGE7XHJcbiAgICAgICAgdGhpcy5zdWJtaXRNb2RhbC5lbWl0KHsgdmFsdWU6IHNlbGVjdGVkRGF0YS5iaW5kaW5nUGF0aCwgbmFtZTogc2VsZWN0ZWREYXRhLm5hbWUgfSk7XHJcbiAgICB9XHJcbn1cclxuIl19