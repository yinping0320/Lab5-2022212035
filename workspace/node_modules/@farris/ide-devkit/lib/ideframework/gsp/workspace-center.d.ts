import { PaneContainer } from './pane-container';
import { Pane } from './pane';
export declare class WorkspaceCenter {
    paneContainer: PaneContainer;
    didActivate: any;
    constructor(params: any);
    destroy(): void;
    serialize(): {
        deserializer: string;
        version: number;
        root: any;
        activePaneId: any;
    };
    deserialize(state: any, deserializerManager: any): void;
    activate(): void;
    getLocation(): string;
    setDraggingItem(): void;
    observePaneItems(callback: any): void;
    onDidChangeActivePaneItem(callback: any): void;
    onDidStopChangingActivePaneItem(callback: any): void;
    observeActivePaneItem(callback: any): void;
    onDidAddPane(callback: any): void;
    onWillDestroyPane(callback: any): void;
    onDidDestroyPane(callback: any): void;
    observePanes(callback: any): void;
    onDidChangeActivePane(callback: any): void;
    observeActivePane(callback: any): void;
    onDidAddPaneItem(callback: any): void;
    onWillDestroyPaneItem(callback: any): void;
    onDidDestroyPaneItem(callback: any): void;
    getPaneItems(): any[];
    getActivePaneItem(): any;
    saveAll(): void;
    confirmClose(options: any): Promise<boolean>;
    getPanes(): Pane[];
    getActivePane(): Pane;
    activateNextPane(): boolean;
    activatePreviousPane(): boolean;
    paneForURI(uri: any): Pane;
    paneForItem(item: any): Pane;
    destroyActivePane(): void;
}
