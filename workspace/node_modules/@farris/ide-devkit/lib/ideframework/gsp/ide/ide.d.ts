import { Messager } from './messager';
import { NotifyOptions } from '@farris/ui-notify';
import { Observable } from 'rxjs';
/**
 * 提供ide运行所需的方法，供插件使用
 */
export declare class Ide {
    private frameId;
    private events;
    private modal;
    private commandData;
    private msgr;
    private readonly isTop;
    private readonly parentInstance;
    readonly messager: Messager;
    constructor(parent?: Ide);
    getParam(key: string): string;
    getInitCommandData(frameId?: string): any;
    setInitCommandData(frameId: string, data: any): void;
    setMessager(messager: Messager): void;
    onPanelAdded(cb: (options: any, location?: string) => any): void;
    onPanelRemoved(cb: (id: string, lacation: string) => any): void;
    onPanelShown(cb: (id: string) => any): void;
    onPanelHidden(cb: (id: string) => any): void;
    onModalConfirming(cb: (id: string) => boolean): void;
    onModalCancelling(cb: (id: string) => boolean): void;
    onLeftActivated(cb: (id: string) => any): void;
    onNotifyShown(cb: (level: 'error' | 'warning' | 'info', content: string | NotifyOptions) => any): void;
    onLoadingShown(cb: (message?: string) => any): void;
    onLoadingHidden(cb: () => any): void;
    onDesignerStatusSet(cb: (args: any) => any): void;
    onCloseTab(id: string, cb: () => boolean | Observable<boolean>): any;
    addPanel(options: any): void;
    addModal(options: any): void;
    closeModal(id?: string): void;
    confirmModal(id: string): boolean;
    cancelModal(id: string): boolean;
    activateLeft(frameId?: string): void;
    notify(level: 'error' | 'warning' | 'info', content: string | NotifyOptions): void;
    loading(message?: string): void;
    loaded(): void;
    setDesignerStatus(metadataId: string, isDirty: boolean): void;
    notifyCloseTab(id: string): Observable<boolean>;
    registerIDE(workspace: any): void;
    private on;
    private emit;
}
