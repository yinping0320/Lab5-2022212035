import { OnInit, OnChanges, SimpleChanges, EventEmitter, ComponentFactoryResolver, Injector, ElementRef, TemplateRef, ViewContainerRef } from '@angular/core';
import { PropertyEntity } from '../../entity/property-entity';
import { BsModalService } from '@farris/ui-modal';
import { NotifyService } from '@farris/ui-notify';
export declare class PropertyItemComponent implements OnInit, OnChanges {
    private resolver;
    private modalService;
    private injector;
    private notifyServ;
    el: ElementRef;
    elementConfig: PropertyEntity;
    elementValue: any;
    valueChanged: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    triggerRefreshPanel: EventEmitter<any>;
    propItem: ViewContainerRef;
    stringTmpl: TemplateRef<any>;
    numberTmpl: TemplateRef<any>;
    selectTmpl: TemplateRef<any>;
    boolOrExpTmpl: TemplateRef<any>;
    multiSelectTmpl: TemplateRef<any>;
    dateTmpl: TemplateRef<any>;
    datetimeTmpl: TemplateRef<any>;
    modalTmpl: TemplateRef<any>;
    propertyOldType: string;
    elementShowValue: any;
    selectOptions: any[];
    itemType: string;
    precision: number;
    showClearButton: boolean;
    showDefaultValue: boolean;
    constructor(resolver: ComponentFactoryResolver, modalService: BsModalService, injector: Injector, notifyServ: NotifyService, el: ElementRef);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    refresh(): void;
    /**
     * 鼠标移入 --已废弃
     */
    onmouseover(): void;
    /**
     * 鼠标离开 --已废弃
     */
    onmouseleave(): void;
    /**
     * 清除模态框内容
     */
    modalClear(): void;
    /**
     * 变更属性值
     */
    changeValue(e: any): void;
    /**
     * farris 日期控件的变更事件
     * @param e e
     */
    changeDateValue(e: any): void;
    /**
     * 自定义编辑器使用模态框打开
     */
    openModal(): void;
    /**
     * 创建自定义编辑器
     */
    private createEditorComponent;
    /**
     * 模态框场景下将属性值转换为输入框中显示的值
     * @param value
     */
    private _convertModalShowValue;
}
