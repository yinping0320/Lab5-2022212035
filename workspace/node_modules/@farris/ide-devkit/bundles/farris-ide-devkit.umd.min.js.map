{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@farris/ide-devkit/lib/components/alert/alert.config.ts","ng://@farris/ide-devkit/lib/components/utils/decorators.ts","ng://@farris/ide-devkit/lib/components/utils/theme-provider.ts","ng://@farris/ide-devkit/lib/components/alert/alert.component.ts","ng://@farris/ide-devkit/lib/components/alert/alert.module.ts","ng://@farris/ide-devkit/lib/components/tooltip/tooltip.config.ts","ng://@farris/ide-devkit/lib/components/utils/facade/browser.ts","ng://@farris/ide-devkit/lib/components/tooltip/tooltip-container.component.ts","ng://@farris/ide-devkit/lib/components/utils/trigger.class.ts","ng://@farris/ide-devkit/lib/components/utils/triggers.ts","ng://@farris/ide-devkit/lib/components/utils/component-loader/content-ref.class.ts","ng://@farris/ide-devkit/lib/components/utils/component-loader/component-loader.class.ts","ng://@farris/ide-devkit/lib/components/utils/positioning/ng-positioning.ts","ng://@farris/ide-devkit/lib/components/utils/positioning/positioning.service.ts","ng://@farris/ide-devkit/lib/components/utils/component-loader/component-loader.factory.ts","ng://@farris/ide-devkit/lib/components/utils/warn-once.ts","ng://@farris/ide-devkit/lib/components/tooltip/tooltip.directive.ts","ng://@farris/ide-devkit/lib/components/tooltip/tooltip.module.ts","ng://@farris/ide-devkit/lib/components/modal/bs-modal-ref.service.ts","ng://@farris/ide-devkit/lib/components/modal/modal-backdrop.options.ts","ng://@farris/ide-devkit/lib/components/modal/modal-options.class.ts","ng://@farris/ide-devkit/lib/components/modal/modal-container.component.ts","ng://@farris/ide-devkit/lib/components/utils/utils.class.ts","ng://@farris/ide-devkit/lib/components/modal/modal-backdrop.component.ts","ng://@farris/ide-devkit/lib/components/modal/modal.directive.ts","ng://@farris/ide-devkit/lib/components/modal/bs-modal.service.ts","ng://@farris/ide-devkit/lib/components/modal/modal.module.ts","ng://@farris/ide-devkit/lib/components/navbar/navbar.state.ts","ng://@farris/ide-devkit/lib/components/dropdown/dropdown.config.ts","ng://@farris/ide-devkit/lib/components/dropdown/dropdown.state.ts","ng://@farris/ide-devkit/lib/components/utils/ng2-bootstrap-config.ts","ng://@farris/ide-devkit/lib/components/dropdown/dropdown-container.component.ts","ng://@farris/ide-devkit/lib/components/angular-editor/model/base-monaco-editor.ts","ng://@farris/ide-devkit/lib/components/dropdown/dropdown.directive.ts","ng://@farris/ide-devkit/lib/components/dropdown/dropdown-menu.directive.ts","ng://@farris/ide-devkit/lib/components/dropdown/dropdown-toggle.directive.ts","ng://@farris/ide-devkit/lib/components/dropdown/dropdown-button.directive.ts","ng://@farris/ide-devkit/lib/components/dropdown/dropdown-item.directive.ts","ng://@farris/ide-devkit/lib/components/dropdown/dropdown.module.ts","ng://@farris/ide-devkit/lib/components/navbar/navbar.directive.ts","ng://@farris/ide-devkit/lib/components/navbar/navbar.module.ts","ng://@farris/ide-devkit/lib/components/ng2tree-common/constants/events.ts","ng://@farris/ide-devkit/lib/components/ng2tree-common/models/tree-node.ts","ng://@farris/ide-devkit/lib/components/ng2tree-common/models/tree-options.ts","ng://@farris/ide-devkit/lib/components/ng2tree-common/models/tree-model.ts","ng://@farris/ide-devkit/lib/components/ng2tree-common/constants/keys.ts","ng://@farris/ide-devkit/lib/components/ng2tree-common/components/tree/tree.component.ts","ng://@farris/ide-devkit/lib/components/ng2tree-common/directives/tree-node-content.directive.ts","ng://@farris/ide-devkit/lib/components/ng2tree-common/models/tree-node-content-item.ts","ng://@farris/ide-devkit/lib/components/ng2tree-common/components/tree-node-content/tree-node-content.component.ts","ng://@farris/ide-devkit/lib/components/ng2tree-common/components/tree-node/tree-node.component.ts","ng://@farris/ide-devkit/lib/components/ng2tree-common/components/tree-node-drop-slot/tree-node-drop-slot.component.ts","ng://@farris/ide-devkit/lib/components/ng2tree-common/tree.module.ts","ng://@farris/ide-devkit/lib/components/angular-editor/model/config.ts","ng://@farris/ide-devkit/lib/components/angular-editor/constant/events.ts","ng://@farris/ide-devkit/lib/components/angular-editor/service/code-editor.event.service.ts","ng://@farris/ide-devkit/lib/components/angular-editor/service/angular-monaco-editor.service.ts","ng://@farris/ide-devkit/lib/components/angular-editor/angular-monaco-editor/angular-monaco-editor.component.ts","ng://@farris/ide-devkit/lib/components/angular-editor/editor.module.ts","ng://@farris/ide-devkit/lib/components/ng2-right-click-menu/sh-context-menu-item.directive.ts","ng://@farris/ide-devkit/lib/components/ng2-right-click-menu/sh-context-menu.service.ts","ng://@farris/ide-devkit/lib/components/ng2-right-click-menu/sh-context-menu.component.ts","ng://@farris/ide-devkit/lib/components/ng2-right-click-menu/sh-attach-menu.directive.ts","ng://@farris/ide-devkit/lib/components/ng2-right-click-menu/sh-context-menu.module.ts","ng://@farris/ide-devkit/lib/components/wizard/component/wizard.component.ts","ng://@farris/ide-devkit/lib/components/wizard/wizard.module.ts","ng://@farris/ide-devkit/lib/components/combo-list/combo.service.ts","ng://@farris/ide-devkit/lib/components/combo-list/combo-list.component.ts","ng://@farris/ide-devkit/lib/components/combo-list/combo-list.module.ts","ng://@farris/ide-devkit/lib/components/popover/popover.config.ts","ng://@farris/ide-devkit/lib/components/popover/popover-container.component.ts","ng://@farris/ide-devkit/lib/components/popover/popover.directive.ts","ng://@farris/ide-devkit/lib/components/popover/popover.module.ts","ng://@farris/ide-devkit/lib/components/property-panel/components/property-item/property-item.component.ts","ng://@farris/ide-devkit/lib/components/property-panel/components/property-item-list/property-item-list.component.ts","ng://@farris/ide-devkit/lib/components/property-panel/components/property-panel/property-panel.component.ts","ng://@farris/ide-devkit/lib/components/property-panel/property-panel.module.ts","ng://@farris/ide-devkit/lib/components/property-panel/entity/property-entity.ts","ng://@farris/ide-devkit/lib/components/tabset/tabset-config.ts","ng://@farris/ide-devkit/lib/components/tabset/tabset.ts","ng://@farris/ide-devkit/lib/components/tabset/tabset.module.ts","ng://@farris/ide-devkit/lib/components/navtab/navtab-config.ts","ng://@farris/ide-devkit/lib/components/navtab/navtab.ts","ng://@farris/ide-devkit/lib/components/navtab/navtab.module.ts","ng://@farris/ide-devkit/lib/components/accordion/accordion-config.ts","ng://@farris/ide-devkit/lib/components/accordion/accordion.ts","ng://@farris/ide-devkit/lib/components/utils/util.ts","ng://@farris/ide-devkit/lib/components/accordion/accordion.module.ts","ng://@farris/ide-devkit/lib/components/panel/sash.directive.ts","ng://@farris/ide-devkit/lib/components/panel/panel.module.ts","ng://@farris/ide-devkit/lib/components/modules.ts","ng://@farris/ide-devkit/lib/components/utils/linked-list.class.ts","ng://@farris/ide-devkit/lib/ideframework/eventbus/event-bus-proxy.ts","ng://@farris/ide-devkit/lib/ideframework/eventbus/event-pipe.ts","ng://@farris/ide-devkit/lib/ideframework/eventbus/duplex-event-pipe.ts","ng://@farris/ide-devkit/lib/ideframework/eventbus/event-bus.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/model.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/pane-axis.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/event-kit/disposable.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/event-kit/composite-disposable.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/event-kit/emitter.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/pane.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/item-registry.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/pane-container.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/dock.ts","ng://@farris/ide-devkit/lib/services/cache/services/storage/cache.storage.abstract.service.ts","ng://@farris/ide-devkit/lib/services/cache/services/storage/sessionstorage/cache.sessionstorage.service.ts","ng://@farris/ide-devkit/lib/services/cache/services/storage/localstorage/cache.localstorage.service.ts","ng://@farris/ide-devkit/lib/services/cache/services/storage/memory/cache.memory.service.ts","ng://@farris/ide-devkit/lib/services/cache/services/cache.service.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/command-registry.ts","ng://@farris/ide-devkit/lib/ideframework/util/util.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/view-registry.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/panel-container.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/panel.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/workspace-center.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/workspace.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/gsp-event-bus.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/ide/modal-frm.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/ide/ide.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/gsp.ts","ng://@farris/ide-devkit/lib/ideframework/gsp/ide/messager.ts","ng://@farris/ide-devkit/lib/ideframework/package/package-view.ts","ng://@farris/ide-devkit/lib/ideframework/package/package.ts","ng://@farris/ide-devkit/lib/ideframework/package/package-module.ts","ng://@farris/ide-devkit/lib/services/cache/cache.module.ts","ng://@farris/ide-devkit/lib/services/http/http.service.ts","ng://@farris/ide-devkit/lib/services/http/http.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","step","op","TypeError","done","value","pop","push","e","__values","o","m","__read","ar","error","__spread","concat","AlertConfig","type","dismissible","dismissOnTimeout","undefined","Injectable","OnChange","propertyKey","_key","get","set","emit","guessedVersion","AlertComponent","_config","changeDetection","_this","isOpen","onClose","EventEmitter","onClosed","classes","dismissibleChange","subscribe","markForCheck","ngOnInit","setTimeout","close","parseInt","Component","args","selector","template","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","Input","Output","tslib_1.__decorate","AlertModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","declarations","exports","entryComponents","TooltipConfig","placement","triggers","win","window","document","location","gc","performance","Event","MouseEvent","KeyboardEvent","EventTarget","History","Location","EventListener","isBs3","__theme","_guessBsVersion","spanEl","createElement","innerText","appendChild","classList","add","rect","getBoundingClientRect","removeChild","top","TooltipContainerComponent","config","ngAfterViewInit","classMap","in","fade","animation","containerClass","host","[class]","[class.show]","role","Trigger","open","isManual","DEFAULT_ALIASES","hover","focus","parseTriggers","aliases","trimmedTriggers","trim","parsedTriggers","split","map","trigger","triggerPair","alias","manualTriggers","filter","Error","ContentRef","nodes","viewRef","componentRef","ComponentLoader","_viewContainerRef","_renderer","_elementRef","_injector","_componentFactoryResolver","_ngZone","_applicationRef","_posService","onBeforeShow","onShown","onBeforeHide","onHidden","_providers","_isHiding","_listenOpts","_globalListener","Function","_componentRef","attach","compType","_componentFactory","resolveComponentFactory","to","container","position","opts","attachment","provide","provider","show","_subscribePositioning","_innerComponent","_contentRef","_getContentRef","content","context","initialState","injector","ReflectiveInjector","resolveAndCreate","attachView","hostView","instance","ElementRef","nativeElement","querySelector","parentElement","changeDetectorRef","detectChanges","_registerOutsideClick","hide","componentEl","parentNode","destroy","remove","indexOf","_removeGlobalListener","toggle","isShown","dispose","_unsubscribePositioning","_unregisterListenersFn","listen","listenOpts","outsideClick","registerHide","listenToTriggersV2","renderer","options","listeners","_registerHide","forEach","fn","useToggle","showFn","unsubscribeFn","attachInline","vRef","_inlineViewRef","createEmbeddedView","target_1","registerOutsideClick","event","contains","targets","some","getInnerComponent","_zoneSubscription","onStable","element","appendToBody","unsubscribe","TemplateRef","_viewRef","rootNodes","ComponentRef","createText","contentCmptFactory","modalContentInjector","Positioning","round","elPosition","parentOffset","width","height","bottom","left","right","getStyle","bcRect","offsetParentEl","offsetParent","offset","documentElement","clientTop","clientLeft","Math","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","positionElements","hostElement","targetElement","hostElPosition","targetElStyles","getAllStyles","shiftWidth","center","shiftHeight","targetElBCR","placementPrimary","placementSecondary","targetElPosition","newPlacementPrimary","autoPosition","parseFloat","marginBottom","marginRight","preferredPosition","innerHeight","innerWidth","getComputedStyle","prop","isStaticPositioned","positionService","pos","style","PositioningService","_getHtmlElement","providedIn","ComponentLoaderFactory","createLoader","ComponentFactoryResolver","NgZone","Injector","ApplicationRef","_messagesHash","_hideMsg","console","warnOnce","msg","isDevMode","warn","TooltipDirective","cis","tooltipChange","_animation","_fadeDuration","tooltipStateChanged","_tooltip","useValue","tooltip","isDisabled","delay","toString","_delayTimeoutId","showTooltip","cancelDelayedTooltipShowing","_tooltipCancelShowFn","tipTimer_1","timer","clearTimeout","ngOnDestroy","Directive","exportAs","ViewContainerRef","Renderer2","TooltipModule","BsModalRef","ModalBackdropOptions","animate","ModalOptions","modalConfigDefaults","backdrop","keyboard","ignoreBackdropClick","class","animated","CLASS_NAME","SCROLLBAR_MEASURER","BACKDROP","OPEN","FADE","IN","SHOW","TRANSITION_DURATIONS","DISMISS_REASONS","ModalContainerComponent","_element","isModalHiding","isAnimated","addClass","setStyle","bsModalService","getModalsCount","checkScrollbar","setScrollbar","onClick","setDismissReason","onEsc","keyCode","preventDefault","level","removeClass","tabindex","[attr.aria-modal]","HostListener","Utils","reflow","getStyles","elem","view","ownerDocument","defaultView","opener","ModalBackdropComponent","_isShown","_isAnimated","ModalDirective","clf","onShow","onHide","isBodyOverflowing","originalBodyPadding","scrollbarWidth","timerHideModal","timerRmBackDrop","isNested","_backdrop","conf","getConfig","dismissReason","hideModal","showBackdrop","showElement","nodeType","Node","ELEMENT_NODE","setAttribute","setProperty","transitionComplete","resetScrollbar","resetAdjustments","focusOtherModal","callback","callbackRemove","removeBackdrop","otherOpenedModals","querySelectorAll","clientWidth","getScrollbarWidth","getPropertyValue","paddingRight","scrollDiv","BsModalService","rendererFactory","modalsCount","lastDismissReason","loaders","_backdropLoader","createRenderer","_createLoaders","_showBackdrop","_showModal","_hideBackdrop","_hideModal","removeLoaders","isBackdropEnabled","isBackdropInDOM","backdropRef","duration","modalLoader","bsModalRef","modalContainerRef","reason","loader","copyEvent","splice","from","RendererFactory2","ModalModule","NavbarState","dropdownInstances","menuItems","subscriptions","onItemClick","addDropdown","dropdown","find","item","subscribeDropdown","childDropdowns","addMenuItem","menuItem","subscribeMenuItem","state","level1Dropdown","innerHideL1Dropdown","innerShowL1Dropdown","level2Dropdown","innerShowL2Dropdown","stopPropagation","onHover","containsItem","innerHideL2Dropdown","command","sub","hideCurrentDropdown","hideAllDropdown","BsDropdownConfig","autoClose","BsDropdownState","direction","isOpenChange","isDisabledChange","toggleClick","dropdownMenu","Promise","resolve","resolveDropdownMenu","loadPromise","BsDropdownContainerComponent","_state","cd","display","_subscription","HostBinding","BsDropdownDirective","_cis","_isInlineOpen","_subscriptions","_isInited","_dropdown","_isDisabled","_showInline","_level","pipe","_inlinedMenu","then","viewContainer","templateRef","addBs4Polyfills","catch","_dropup","dropup","_placement","removeShowClass","removeDropupStyles","elementRef","_b","tslib_1.__values","_c","addShowClass","checkRightAlignment","addDropupStyles","isRightAligned","removeStyle","[class.dropup]","[class.open]","ContentChildren","BsDropdownMenuDirective","_viewContainer","_templateRef","BsDropdownToggleDirective","ariaHaspopup","onDocumentClick","button","DropdownButtonDirective","DropdownItemDirective","barState","onMouseOver","BsDropdownModule","NavbarDirective","ViewChildren","NavbarModule","TREE_EVENTS","onToggle","onActiveChanged","onActivate","onDeactivate","onFocus","onBlur","onDoubleClick","onContextMenu","onInitialized","onUpdateData","onMoveNode","onAddNode","onRemoveNode","onRightMenuClicked","TreeNode","data","parent","treeModel","isVirtualRoot","_isActive","changeDisplayField","isExpandedField","isExpanded","childrenField","child","_isExpanded","fireEvent","idField","displayField","typeField","allowDrag","enableCustomContextMenu","isRoot","isLeaf","focusedNode","getFirstChild","getLastChild","_getIndexInParent","findAdjacentSibling","steps","index","findNextSibling","findPreviousSibling","findNextNode","goInside","findPreviousNode","previousSibling","isCollapsed","realParent","isDescendantOf","node","eventName","_activate","_deactivate","toggleActivated","isActive","activeNode","previousNode","blur","doublClick","rawEvent","contextMenu","dropMouseAction","$event","setFocus","_dropEventHandler","cancelDrag","tree","moveNode","getDragNode","rightMenuClicked","TreeOptions","treeNodeTemplate","TreeModel","eventNames","keys","firstUpdate","_dragNode","_dropLocation","setData","_a","events","update","virtualRoot","roots","_loadTreeNodeContentComponent","addStaticTreeNode","createAndAddTreeNode","id","name","subTitle","createdNode","createTreeNode","addTreeNode","addedNode","removeFocusedTreeNode","removeTreeNode","selectedTreeNode","log","locateTreeNode","needLocatedNode","locateNodeByID","nodeID","searchTreeNodeByID","searchTreeNode","searchedTreeNode","searchedNodeInChildren","_treeNodeContentComponent","focusedTree","getFirstRoot","first","getLastRoot","last","focusNextNode","nextNode","focusPreviousNode","focusDrillUp","focusDrillDown","canMoveNode","fromNode","children","fromChildren","toChildren","toIndex","setDragNode","dragNode","isDragging","setDropLocation","dropLocation","getDropLocation","component","isDraggingOver","KEYS","TreeComponent","ngOnChanges","changes","currentValue","pick","onKeydown","isFocused","includes","onMousedown","closest","searchAndLocationNodeById","elementId","searchNodeById","TreeNodeContentDirective","viewContainerRef","TreeNodeContentItem","displayData","TreeNodeContentComponent","componentFactoryResolver","rightMenuContainer","clear","originData","hasRightClickMenu","componentFactory","rightClickMenuComponent","createComponent","ViewChild","read","TreeNodeComponent","onDragStart","nodeIndex","onDragEnd","onDragOver","onDrop","onDragLeave","nodeContentWrapper","clientX","clientY","_loadTreeNodeContent","treeNodeContentItem","treeNodeContentHost","TreeNodeDropSlotComponent","dropIndex","TreeModule","ANGULAR_MONACO_EDITOR_CONFIG","InjectionToken","CODE_EDITOR_EVENTS","onInit","CodeEditorEventService","_events","addEvent","loadedMonaco","BaseMonacoEditor","codeEditorEventService","self","eventPair","_options","defaultOptions","_editor","initMonaco","baseUrl","onGotAmdLoader","require","paths","vs","onMonacoLoad","loaderScript","src","addEventListener","_windowResizeSubscription","AngularMonacoEditorService","_existError","handleModelMarkers","setModelMarkers","monaco","editor","model","owner","markers","CODE_EDITOR_INPUT_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","AngularMonacoEditorComponent","multi","_super","angularMonacoEditorService","zone","editorEventService","angularEditorconfig","_value","onControlValueChange","onControlTouched","tslib_1.__extends","enableModel","searchedModel","getModel","uri","createModel","language","_editorComponent","setValue","onDidChangeModelContent","onChangeModelContentHandler","onDidBlurEditorText","onBlurEditorTextHandler","onDidLayoutChange","onLayoutChangeHandler","refreshLayoutWhenWindowResize","fromEvent","layout","getValue","run","writeValue","registerOnChange","registerOnTouched","Inject","AngularMonacoEditorModule","MenuItemContext","$implicit","ShContextMenuItemDirective","closeOnClick","click","setNotActive","_active","subMenu","setActive","Optional","ShContextMenuService","overlay","activeOverlays","openMenu","ctxEvent","closeCurrentOverlays","menu","mouseEvent","activeMenu","overrideGetBoundingClientRect","scrollStrategy","buildCloseScrollStrategy","positionStrategy","buildConnectedPositionStrategy","attachContextToItems","overlayRef","createAndAttachOverlay","attachOverlayRef","registerBackdropEvents","openSubMenu","parentMenu","buildConnectedPositionStrategyForSubMenu","attachThisContext","backDropSub","closeSubMenus","itemsWithSubMenus","sm","elm","backdropElement","bind","hasBackdrop","backdropClass","menuPortal","TemplatePortal","menuTemplate","menuContainer","scrollStrategies","connectedTo","originX","originY","overlayX","overlayY","withFallbackPosition","detach","thisContext","Overlay","ShContextMenuComponent","ctxService","contentChildrenItems","QueryList","viewChildrenItems","onEnter","visible","subActive","divider","callWithContext","fallbackContext","isVisible","encapsulation","ViewEncapsulation","None","ShAttachMenuDirective","setupEvents","observables","merge","ShContextMenuModule","OverlayModule","WizardComponent","clickCancelBtn","clickFinishBtn","title","curStepIndex","curStep","createStepComponent","stepContainer","curComponentRef","addStep","stepList","curIndex","findIndex","nextStep","stepId","showFinishBtn","showNextStepBtn","removeStep","removeSteps","changeStep","oldStep","jumpStep","nextIndex","lastStep","validationFunc","validation","result","clickNextStep","moveToNextStep","clickCancel","finishWizard","beforeFinish","WizardModule","FormsModule","PerfectScrollbarModule","ComboService","innerData","selected$","Subject","isOpen$","BehaviorSubject","data$","val","toBoolean","selectItem","selectedValue","unSelectItem","isSelect","getSelected","selections","getValueByObj","field","reduce","obj","nextUniqueId","ComboListComponent","el","cdr","render","comboService","disabled","readonly","editable","placeholder","panelWidth","panelHeight","autoWidth","enableClear","showPanel","hidePanel","valueChange","selectChange","_cmbPanel","groupIcon","comboPanelCreated$","destroy$","ngControl","displayText","onChange","onTouched","creatContainer","panel","creatPanel","takeUntil","cmp","updatePosition","skip","documentClickEvent","removeDocumentListener","textField","updateMappingFieldValue","valueField","input","textbox","onClear","formDirective","form","bindingData","bindingPath","pathArr","mappingField","updateSelectedValues","onValueChange","pane","setDisabledState","NgControl","debounceTime","throttle","ev","interval","complete","onSelect","onUnSelected","DOCUMENT","ComboListModule","InputGroupModule","DatalistModule","PopoverConfig","PopoverContainerComponent","PopoverDirective","_popover","err","popover","popoverContext","popoverTitle","PopoverModule","PropertyItemComponent","resolver","modalService","notifyServ","valueChanged","submitModal","triggerRefreshPanel","selectOptions","itemType","precision","showClearButton","showDefaultValue","refresh","tmpl","elementConfig","propertyType","selectTmpl","multiSelectDataType","elementValue","multiSelectTmpl","_convertModalShowValue","modalTmpl","decimals","numberTmpl","stringTmpl","boolOrExpTmpl","dateTmpl","datetimeTmpl","defaultValue","propItem","propertyOldType","onmouseover","onmouseleave","modalClear","afterClickClearButton","changeObject","propertyID","propertyValue","parameters","changeValue","notAllowedChars","replace","RegExp","refreshPanelAfterChanged","changeDateValue","formatted","openModal","beforeOpenModal","warning","message","timeout","createEditorComponent","compRef","editorParams","modalConfig","showButtons","buttons","modalFooter","dialog","closeModal","converter","elementShowValue","convertTo","JSON","stringify","NotifyService","PropertyItemListComponent","simpleChanges","category","propertyData","enableCascade","adaptProperties","properties","cascadeValueStringify","items","_itemChanged","setPropertyRelates","categoryId","propertyPath","parentPropertyID","_submitModal","_cascadeitemChanged","__cascadeitemSubmitModal","valueObject","cascadeConfig","cascadeConverter","cascadeSummary","_checkCascadeVisible","refreshPanel","trackByPropId","PropItem","PropertyPanelComponent","isPersitOpenState","isShowPanel","closePropertyPanel","propertyChanged","showCloseBtn","categoryTabs","eastDiv","checkShowTabCategory","itemLists","changeStatus","propertyConfig","status","collapse","_valueChanged","tabId","tabName","categoryList","selectedTab","propTab","defaultTab","PropertyPanelModule","InputsModule","DropDownsModule","NotifyModule","FarrisDatePickerModule","FarrisComboListModule","NumberSpinnerModule","ElementPropertyConfig","hideTitle","PropertyEntity","isBigNumber","isExpand","hideCascadeTitle","BeforeOpenModalResult","PropertyChangeObject","NgbTabsetConfig","justify","orientation","nextId","NgbTabTitle","NgbTabContent","NgbTab","ContentChild","NgbTabset","destroyOnHide","tabChange","className","justifyClass","select","_getTabById","activeId","defaultPrevented_1","ngAfterContentChecked","activeTab","tabs","tabsWithId","tab","NGB_TABSET_DIRECTIVES","NgbTabsetModule","NgbNavTabsetConfig","NgbNavTabTitle","NgbNavTabContent","NgbNavTab","NgbNavTabset","NgbNavTabsetModule","NgbAccordionConfig","closeOthers","NgbPanelTitle","NgbPanelContent","NgbPanel","NgbAccordion","activeIds","panelChange","closeOtherPanels","panelId","panels","nextState","_closeOthers","_updateActiveIds","isString","NGB_ACCORDION_DIRECTIVES","NgbAccordionModule","SashDirective","widthChanged","onMouseDown","bindDocumentClickListener","onMouseUp","documentClickListener","unbindDocumentMoveListener","unbindDocumentClickListener","documentMoveListener","newWidth","PanelModule","NGB_MODULES","NgbRootModule","NgbModule","IDERootModule","LinkedList","asArray","getNode","current","head","createInternalArrayRepresentation","outArray","previous","tail","currentPreviousNode","currentNextNode","removedNode","toArray","findAll","_i","arg","unshift","reverse","shift","lastItem","every","EventBusProxy","eventBus","hostType","eventTokenValueProvider","post","EventPipe","tokenValue","emitter","parentEventPipeList","eventSubject","subscriptionMap","Map","onceSubscriptionMap","eventHandler","caller","subscription","subscribeOnce","unSubscribe","subscriber","delete","unSubscribeForOnce","matchEmitterToken","examByTargetToken","size","location_1","DuplexEventPipe","listenerResults","subject","notify","thenFn","catchFn","timestamp","Date","now","fooObservable","mapTo","listenerResultArray","forkJoin","results","listener","listenerResult","invokeResult","Observable","of","EventBus","proxyMap","eventMap","notificationMap","getProxy","ownerType","ownerName","has","emitterType","eventArgs","eventPipeList","Type","eventPipeList_1","eventPipeList_1_1","eventPipe","on","handler","getEventPipe","once","requestFor","requestName","requestValue","success","fail","findExistEventPipe","response","token","responseOn","responseSubject","requestObj","notification","eventPipeList_2","eventPipeList_2_1","Model","params","alive","assignId","resetNextInstanceId","PaneAxis","viewRegistry","deserialize","getElement","addChild","removeChidl","insertChildBefore","subscribeToChild","unsubscribeFromChild","Disposable","disposalAction","disposed","isDisposable","object","CompositeDisposable","disposables","Set","disposable","disposables_1","disposables_1_1","assertDisposable","Emitter","onEventHandlerException","exceptionHandler","dispatch","simpleDispatch","exceptionHandlers","exceptionHandlingDispatch","exception","handlersByEventName","currentHandlers","cleanup","off","preempt","handlerToRemove","oldHandlers","newHandlers","oldHandlers_1","oldHandlers_1_1","handlers","handlers_1","handlers_1_1","emitAsync","all","getEventNames","listenerCountForEventName","getTotalListenerCount","nextInstanceId","SaveCancelledError","Pane","subscriptionsPerItem","WeakMap","itemStack","setPendingItem","getPendingItem","clearPendingItem","onItemDidTerminatePendingState","saveItem","saveItemAs","max","activeItem","focused","applicationDelegate","notificationManager","deserializerManager","addItems","getActiveItem","setActiveItem","addItemsToStack","itemStackIndices","setFlexScale","flexScale","deserializers","notifications","views","activeItemIndex","activeItemURI","activeItemUri","_d","itemState","getURI","inspect","serialize","itemsToBeSerialized","deserializer","getParent","setParent","getContainer","setContainer","didAddPane","isItemAllowed","getAllowedLocations","getLocation","getFlexScale","increaseSize","decreaseSize","onDidChangeFlexScale","observeFlexScale","onDidActivate","onWillDestroy","onDidDestroy","onDidChangeActive","onDidChangeActivePane","activePane","observeActive","onDidAddItem","onDidRemoveItem","onWillRemoveItem","onDidMoveItem","observeItems","getItems","onDoingChangeActiveItem","onDidChangeActiveItem","onChooseNextMRUItem","onChooseLastMRUItem","onDoneChoosingMRUItem","observeActiveItem","onWillDestroyItem","activate","getPanes","unsubscribeFromItem","slice","modifyStack","addItemToStack","didChangeActiveItemOnPane","itemStackIndices_1","itemStackIndices_1_1","itemIndex","newItem","itemAtIndex","activateNextRecentlyUsedItem","itemStackIndex","nextRecentlyUsedItem","activatePreviousRecentlyUsedItem","previousRecentlyUsedItem","moveActiveItemToTopOfStack","activateNextItem","getActiveItemIndex","activateItemAtIndex","activatePreviousItem","activateLastItem","moveItemRight","rightItemIndex","moveItem","moveItemLeft","leftItemIndex","activateItem","addItem","moved","pending","isDestroyed","it","lastPendingItem","replacingPendingItem","pendingItem","didAddPaneItem","destroyItem","removeItem","removeItemFromStack","destroyed","didDestroyPaneItem","newIndex","oldIndex","moveItemToPane","destroyActiveItem","force","__awaiter","_arguments","P","generator","reject","fulfilled","rejected","isPermanentDockItem","destroyItems","destroyInactiveItems","promptToSaveItem","shouldPromptToSave","getUri","getTitle","saveDialog","saveButtonText","saveFn","confirm","detailedMessage","getMessageForErrorCode","code","saveActiveItem","nextAction","saveActiveItemAs","itemURI","save","promisify","handleSaveError","saveItems","itemForURI","activateItemForURI","copyActiveItem","copy","getActivePane","isAlive","splitLeft","splitRight","splitUp","splitDown","side","replaceChild","newPane","insertChildAfter","moveActiveItem","findLeftmostSibling","leftmostSibling","findRightmostSibling","rightmostSibling","findOrCreateRightmostSibling","findTopmostSibling","topmostSibling","findBottommostSibling","bottommostSibling","findOrCreateBottommostSibling","errorCode","ItemRegistry","WeakSet","hasItem","PaneContainer","itemRegistry","setRoot","didActivatePane","getRoot","version","root","activePaneId","destroyEmptyPanes","onDidChangeRoot","observeRoot","onDidAddPane","observePanes","onDidDestroyPane","onWillDestroyPane","onDidActivatePane","observeActivePane","onDidAddPaneItem","observePaneItems","getPaneItems","onDidChangeActivePaneItem","onDidStopChangingActivePaneItem","observeActivePaneItem","getActivePaneItem","onWillDestroyPaneItem","onDidDestroyPaneItem","oldChild","newChild","paneForURI","paneForItem","saveAll","confirmClose","promises","_e","_f","activateNextPane","panes","currentIndex","activatePreviousPane","previousIndex","moveActiveItemToPane","destPane","copyActiveItemToPane","length_1","willDestroyPane","didDestroyPane","willDestroyPaneItem","cancelStoppedChangingActivePaneItemTimeout","none","Dock","handleResizeHandleDragStart","handleResizeToFit","handleMouseMove","handleMouseUp","widthOrHeight","getWidthOrHeight","didActivate","paneContainer","shouldAnimate","elementAttached","setHovered","hovered","setState","setDraggingItem","draggingItem","newState","prevState","handleDidAddPaneItem","getInitialSize","handleDidRemovePaneItem","resizing","getPreferredSize","removeEventListener","pointWithinHoverArea","point","detectingExit","activePaneItem","serialized","onDidChangeVisible","observeVisible","onDidChangeHovered","destroyActivePane","getPreferredWidth","getPreferredHeight","CacheStorageAbstract","CacheSessionStorage","getItem","sessionStorage","parse","setItem","isEnabled","CacheLocalStorage","localStorage","CacheMemoryStorage","_data","CacheService","_storage","_defaultOptions","expires","Number","MAX_VALUE","maxAge","_prefix","_validateStorage","storageKey","_toStorageKey","_toStorageValue","_isSystemKey","tag","_saveTag","storageValue","_validateStorageValue","exists","_removeFromTag","removeAll","getTagData","tags","_tagsStorageKey","_fromStorageKey","useStorage","service","_initStorage","setGlobalPrefix","_getCachePrefix","removeTag","prefix","storage","_toStorageOptions","storageOptions","SequenceCount","CommandRegistry","handleCommandEvent","rootNode","registeredCommands","selectorBasedListenersByCommandName","inlineListenersByCommandName","commandRegistered","commandName","throwOnInvalidSelector","commands","didDispatch","validateSelector","isSelectorValid","valid","SyntaxError","addSelectorBasedListener","addInlineListener","listenersForCommand","selectorListener","SelectorBasedListener","listenersForElement","inlineListener","InlineListener","findCommands","commandNames","currentTarget","name_1","targetListeners","descriptor","listeners_1","listeners_1_1","matchesTarget","detail","CustomEvent","bubbles","onWillDispatch","onDidDispatch","getSnapshot","snapshot","restoreSnapshot","propagationStopped","immediatePropagationStopped","matched","dispatchedEvent","BUBBLING_PHASE","stopImmediatePropagation","abortKeyBinding","webkitMatchesSelector","sort","a","compare","extractDidDispatch","extractDescriptor","specificity","calculateSpecificity","calculate","commaIndex","substring","types","findMatch","sequenceNumber","other","omit","props","displayName","humanizeEventName","eventDoc","namespace","undash","namespaceDoc","regex","matches","match","matches_1","matches_1_1","str","join","Util","newGuid","random","setUrlParam","url","paramName","paramValue","override","path","search","URLSearchParams","ViewRegistry","gspEnvironment","clearDocumentRequests","addViewProvider","modelConstructor","createView","getViewProviderCount","getView","ViewConstructor","viewConstructor","initialize","setModel","getViewClass","updateDocument","readDocument","getNextUpdatePromise","requestDocumentUpdate","performDocumentUpdate","PanelContainer","dock","getPanels","onDidAddPanel","onDidRemovePanel","isModal","addPanel","panelDestroyed","getPanelIndex","panelForItem","priority","getPriority","Panel","autoFocus","getClassName","wasVisible","WorkspaceCenter","didChangeActivePane","didChangeActivePaneItem","ALL_LOCATIONS","Workspace","initOptions","initWorkspace","openers","frmOpeners","useFrmOpener","paneContainers","createCenter","createDock","activePaneContainer","panelContainers","header","footer","modal","reset","packageManager","updateWindowTitle","itemOrURI","itemExistsInWorkspace","searchAllPanes","paneContainerForURI","getActivePaneContainer","createItemForURI","getDefaultLocation","allowedLocations","getCenter","itemOpened","activatePane","initialColumn","initialLine","isNaN","setCursorBufferPosition","foundItems","getPaneContainers","isCenter","openSync","fileUri","getOpeners","opener_1","project","openURIInPane","opener_2","reopenItem","destroyedItemURIs","addOpener","addFrmOpener","saveActivePaneItem","saveActivePaneItemAs","destroyActivePaneItem","getVisiblePanes","getVisiblePaneContainers","paneContainerForItem","closeActivePaneItemOrEmptyPaneOrWindow","panelLocation","getLeftDock","getRightDock","getBottomDock","getBottomPanels","addBottomPanel","getLeftPanels","addLeftPanel","getRightPanels","addRightPanel","getTopPanels","addTopPanel","getHeaderPanels","addHeaderPanel","getFooterPanels","addFooterPanel","getModalPanels","addModalPanel","location_4","getPanelContainer","GspEventBus","eventeParams","dispatchCommand","registryActivateCommand","plugin","activateFn","eventParams","ModalFrm","Ide","frameId","getParam","isTop","commandData","msgr","messager","ide","unescape","getInitCommandData","parentInstance","setInitCommandData","setMessager","onPanelAdded","cb","onPanelRemoved","onPanelShown","onPanelHidden","onModalConfirming","onModalCancelling","onLeftActivated","onNotifyShown","onLoadingShown","onLoadingHidden","onDesignerStatusSet","onCloseTab","addModal","confirmModal","cancelModal","activateLeft","loading","loaded","setDesignerStatus","metadataId","isDirty","notifyCloseTab","registerIDE","workspace","onCloseDesigner","callbacks","observableResult","callbacks_1","callbacks_1_1","cbResult","GSP","pConfig","pViews","pCommands","pEventBus","pUtil","util","pWorkspace","pCache","cache","ctor","pContext","pIde","createChild","Messager","info","question","okCallback","cancelCallback","PackageView","serializedState","Package","gsp","packageId","packageView","sagipackageViewState","deactivate","getComponent","PackageModule","getPackage","package","initPackage","CacheModule","HttpService","http","request","setHeader","put","patch","headers","Content-Type","Access-Control-Allow-Origin","method","HttpClient","GSPHttpModule","HttpClientModule","string","boolean","number","boolOrExp","multiSelect","date","datetime","cascade"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AlertConfig {\r\n  /** default alert type */\r\n  type = 'warning';\r\n\r\n  /** is alerts are dismissible by default */\r\n  dismissible = false;\r\n\r\n  /** default time before alert will dismiss */\r\n  dismissOnTimeout?: number = undefined;\r\n}\r\n","/*tslint:disable:no-invalid-this */\r\nexport function OnChange(): any {\r\n  const sufix = 'Change';\r\n  return function OnChangeHandler(target: any, propertyKey: string): void {\r\n    const _key = ` __${propertyKey}Value`;\r\n    Object.defineProperty(target, propertyKey, {\r\n      get(): any { return this[_key]; },\r\n      set(value: any): void {\r\n        const prevValue = this[_key];\r\n        this[_key] = value;\r\n        if (prevValue !== value && this[propertyKey + sufix]) {\r\n          this[propertyKey + sufix].emit(value);\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n/* tslint:enable */\r\n","import { window } from './facade/browser';\r\n\r\nlet guessedVersion: 'bs3' | 'bs4';\r\n\r\nfunction _guessBsVersion(): 'bs3' | 'bs4' {\r\n  if (typeof document === 'undefined') {\r\n    return null;\r\n  }\r\n  const spanEl = document.createElement('span');\r\n  spanEl.innerText = 'test bs version';\r\n  document.body.appendChild(spanEl);\r\n  spanEl.classList.add('d-none');\r\n  const rect = spanEl.getBoundingClientRect();\r\n  document.body.removeChild(spanEl);\r\n  if (!rect) {\r\n    return 'bs3';\r\n  }\r\n\r\n  return rect.top === 0 ? 'bs4' : 'bs3';\r\n}\r\n\r\nexport function setTheme(theme: 'bs3' | 'bs4'): void {\r\n  guessedVersion = theme;\r\n}\r\n\r\n// todo: in ngx-bootstrap, bs4 will became a default one\r\nexport function isBs3(): boolean {\r\n  if (typeof window === 'undefined') {\r\n    return true;\r\n  }\r\n\r\n  if (typeof window.__theme === 'undefined') {\r\n    if (guessedVersion) {\r\n      return guessedVersion === 'bs3';\r\n    }\r\n    guessedVersion = _guessBsVersion();\r\n\r\n    return guessedVersion === 'bs3';\r\n  }\r\n\r\n  return window.__theme !== 'bs4';\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\nimport { AlertConfig } from './alert.config';\r\nimport { OnChange } from '../utils/decorators';\r\n\r\n@Component({\r\n  selector: 'alert,bs-alert',\r\n  templateUrl: './alert.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AlertComponent implements OnInit {\r\n  /** Alert type.\r\n   * Provides one of four bootstrap supported contextual classes:\r\n   * `success`, `info`, `warning` and `danger`\r\n   */\r\n  @Input() type = 'warning';\r\n  /** If set, displays an inline \"Close\" button */\r\n  @OnChange()   @Input()   dismissible = false;\r\n  /** Number in milliseconds, after which alert will be closed */\r\n  @Input() dismissOnTimeout: number | string;\r\n\r\n  /** Is alert visible */\r\n  @Input() isOpen = true;\r\n\r\n  /** This event fires immediately after close instance method is called,\r\n   * $event is an instance of Alert component.\r\n   */\r\n  @Output() onClose = new EventEmitter<AlertComponent>();\r\n  /** This event fires when alert closed, $event is an instance of Alert component */\r\n  @Output() onClosed = new EventEmitter<AlertComponent>();\r\n\r\n\r\n  classes = '';\r\n  dismissibleChange = new EventEmitter<boolean>();\r\n\r\n  constructor(_config: AlertConfig, private changeDetection: ChangeDetectorRef) {\r\n    Object.assign(this, _config);\r\n    this.dismissibleChange.subscribe((dismissible: boolean) => {\r\n      this.classes = this.dismissible ? 'alert-dismissible' : '';\r\n      this.changeDetection.markForCheck();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.dismissOnTimeout) {\r\n      // if dismissOnTimeout used as attr without binding, it will be a string\r\n      setTimeout(\r\n        () => this.close(),\r\n        parseInt(this.dismissOnTimeout as string, 10)\r\n      );\r\n    }\r\n  }\r\n\r\n  // todo: animation ` If the .fade and .in classes are present on the element,\r\n  // the alert will fade out before it is removed`\r\n  /**\r\n   * Closes an alert by removing it from the DOM.\r\n   */\r\n  close(): void {\r\n    if (!this.isOpen) {\r\n      return;\r\n    }\r\n\r\n    this.onClose.emit(this);\r\n    this.isOpen = false;\r\n    this.changeDetection.markForCheck();\r\n    this.onClosed.emit(this);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { AlertComponent } from './alert.component';\r\nimport { AlertConfig } from './alert.config';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [AlertComponent],\r\n  exports: [AlertComponent],\r\n  entryComponents: [AlertComponent]\r\n})\r\nexport class AlertModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return { ngModule: AlertModule, providers: [AlertConfig] };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n/** Default values provider for tooltip */\r\n@Injectable()\r\nexport class TooltipConfig {\r\n  /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\r\n  placement = 'top';\r\n  /** array of event names which triggers tooltip opening */\r\n  triggers = 'hover focus';\r\n  /** a selector specifying the element the tooltip should be appended to. Currently only supports \"body\" */\r\n  container: string;\r\n}\r\n","/*tslint:disable */\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * JS version of browser APIs. This library can only run in the browser.\r\n */\r\nvar win = (typeof window !== 'undefined' && window) || <any>{};\r\n\r\nexport { win as window };\r\nexport var document = win.document;\r\nexport var location = win.location;\r\nexport var gc = win['gc'] ? () => win['gc']() : (): any => null;\r\nexport var performance = win['performance'] ? win['performance'] : null;\r\nexport const Event = win['Event'];\r\nexport const MouseEvent = win['MouseEvent'];\r\nexport const KeyboardEvent = win['KeyboardEvent'];\r\nexport const EventTarget = win['EventTarget'];\r\nexport const History = win['History'];\r\nexport const Location = win['Location'];\r\nexport const EventListener = win['EventListener'];\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { TooltipConfig } from './tooltip.config';\r\nimport { isBs3 } from '../utils/theme-provider';\r\n\r\n@Component({\r\n  selector: 'bs-tooltip-container',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  // tslint:disable-next-line\r\n  host: {\r\n    '[class]':\r\n      '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\r\n    '[class.show]': '!isBs3',\r\n    role: 'tooltip'\r\n  },\r\n  styles: [\r\n    `\r\n    :host.tooltip {\r\n      display: block;\r\n    }\r\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\r\n      left: 50%;\r\n      margin-left: -6px;\r\n    }\r\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\r\n      top: 50%;\r\n      margin-top: -6px;\r\n    }\r\n  `\r\n  ],\r\n  template: `\r\n    <div class=\"tooltip-arrow arrow\"></div>\r\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\r\n    `\r\n})\r\nexport class TooltipContainerComponent implements AfterViewInit {\r\n  classMap: any;\r\n  placement: string;\r\n  containerClass: string;\r\n  animation: boolean;\r\n\r\n  get isBs3(): boolean {\r\n    return isBs3();\r\n  }\r\n\r\n  constructor(config: TooltipConfig) {\r\n    Object.assign(this, config);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.classMap = { in: false, fade: false };\r\n    this.classMap[this.placement] = true;\r\n    this.classMap[`tooltip-${this.placement}`] = true;\r\n\r\n    this.classMap.in = true;\r\n    if (this.animation) {\r\n      this.classMap.fade = true;\r\n    }\r\n\r\n    if (this.containerClass) {\r\n      this.classMap[this.containerClass] = true;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @copyright Valor Software\r\n * @copyright Angular ng-bootstrap team\r\n */\r\n\r\n export class Trigger {\r\n   public open: string;\r\n   public close?: string;\r\n\r\n   public constructor(open: string, close?: string) {\r\n     this.open = open;\r\n     this.close = close || open;\r\n   }\r\n\r\n   public isManual(): boolean { return this.open === 'manual' || this.close === 'manual'; }\r\n }\r\n","/**\r\n * @copyright Valor Software\r\n * @copyright Angular ng-bootstrap team\r\n */\r\nimport { Renderer2 } from '@angular/core';\r\nimport { Trigger } from './trigger.class';\r\nimport {\r\n  BsEventCallback, ListenOptions\r\n} from './component-loader/listen-options.model';\r\n\r\nconst DEFAULT_ALIASES = {\r\n  hover: ['mouseover', 'mouseout'],\r\n  focus: ['focusin', 'focusout']\r\n};\r\n\r\nexport function parseTriggers(triggers: string, aliases: any = DEFAULT_ALIASES): Trigger[] {\r\n  const trimmedTriggers = (triggers || '').trim();\r\n\r\n  if (trimmedTriggers.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  const parsedTriggers = trimmedTriggers\r\n    .split(/\\s+/)\r\n    .map((trigger: string) => trigger.split(':'))\r\n    .map((triggerPair: string[]) => {\r\n      const alias = aliases[triggerPair[0]] || triggerPair;\r\n\r\n      return new Trigger(alias[0], alias[1]);\r\n    });\r\n\r\n  const manualTriggers = parsedTriggers.filter((triggerPair: Trigger) =>\r\n    triggerPair.isManual()\r\n  );\r\n\r\n  if (manualTriggers.length > 1) {\r\n    throw new Error('Triggers parse error: only one manual trigger is allowed');\r\n  }\r\n\r\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\r\n    throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\r\n  }\r\n\r\n  return parsedTriggers;\r\n}\r\n\r\nexport function listenToTriggers(renderer: Renderer2,\r\n                                 target: any,\r\n                                 triggers: string,\r\n                                 showFn: BsEventCallback,\r\n                                 hideFn: BsEventCallback,\r\n                                 toggleFn: BsEventCallback): Function {\r\n  const parsedTriggers = parseTriggers(triggers);\r\n  const listeners: any[] = [];\r\n\r\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\r\n    return Function.prototype;\r\n  }\r\n\r\n  parsedTriggers.forEach((trigger: Trigger) => {\r\n    if (trigger.open === trigger.close) {\r\n      listeners.push(renderer.listen(target, trigger.open, toggleFn));\r\n\r\n      return;\r\n    }\r\n\r\n    listeners.push(\r\n      renderer.listen(target, trigger.open, showFn),\r\n      renderer.listen(target, trigger.close, hideFn)\r\n    );\r\n  });\r\n\r\n  return () => {\r\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\r\n  };\r\n}\r\n\r\nexport function listenToTriggersV2(renderer: Renderer2,\r\n                                   options: ListenOptions): Function {\r\n  const parsedTriggers = parseTriggers(options.triggers);\r\n  const target = options.target;\r\n  // do nothing\r\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\r\n    return Function.prototype;\r\n  }\r\n\r\n  // all listeners\r\n  const listeners: any[] = [];\r\n\r\n  // lazy listeners registration\r\n  const _registerHide: Function[] = [];\r\n  const registerHide = () => {\r\n    // add hide listeners to unregister array\r\n    _registerHide.forEach((fn: Function) => listeners.push(fn()));\r\n    // register hide events only once\r\n    _registerHide.length = 0;\r\n  };\r\n\r\n  // register open\\close\\toggle listeners\r\n  parsedTriggers.forEach((trigger: Trigger) => {\r\n    const useToggle = trigger.open === trigger.close;\r\n    const showFn = useToggle ? options.toggle : options.show;\r\n\r\n    if (!useToggle) {\r\n      _registerHide.push(() =>\r\n        renderer.listen(target, trigger.close, options.hide)\r\n      );\r\n    }\r\n\r\n    listeners.push(\r\n      renderer.listen(target, trigger.open, () => showFn(registerHide))\r\n    );\r\n  });\r\n\r\n  return () => {\r\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\r\n  };\r\n}\r\n\r\nexport function registerOutsideClick(renderer: Renderer2,\r\n                                     options: ListenOptions) {\r\n  if (!options.outsideClick) {\r\n    return Function.prototype;\r\n  }\r\n\r\n  return renderer.listen('document', 'click', (event: any) => {\r\n    if (options.target && options.target.contains(event.target)) {\r\n      return;\r\n    }\r\n    if (\r\n      options.targets &&\r\n      options.targets.some(target => target.contains(event.target))\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    options.hide();\r\n  });\r\n}\r\n","/**\r\n * @copyright Valor Software\r\n * @copyright Angular ng-bootstrap team\r\n */\r\n\r\n import { ComponentRef, ViewRef } from '@angular/core';\r\n\r\n export class ContentRef {\r\n   public nodes: any[];\r\n   public viewRef?: ViewRef;\r\n   public componentRef?: ComponentRef<any>;\r\n\r\n   public constructor(\r\n     nodes: any[],\r\n     viewRef?: ViewRef,\r\n     componentRef?: ComponentRef<any>\r\n   ) {\r\n     this.nodes = nodes;\r\n     this.viewRef = viewRef;\r\n     this.componentRef = componentRef;\r\n   }\r\n }\r\n","// tslint:disable:max-file-line-count\r\n// todo: add delay support\r\n// todo: merge events onShow, onShown, etc...\r\n// todo: add global positioning configuration?\r\nimport {\r\n  ApplicationRef,\r\n  ComponentFactory,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  ElementRef,\r\n  EmbeddedViewRef,\r\n  EventEmitter,\r\n  Injector,\r\n  NgZone,\r\n  Provider,\r\n  ReflectiveInjector,\r\n  Renderer2,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { PositioningOptions, PositioningService } from '../positioning/index';\r\nimport { listenToTriggersV2, registerOutsideClick } from '../triggers';\r\nimport { ContentRef } from './content-ref.class';\r\nimport { ListenOptions } from './listen-options.model';\r\n\r\nexport class ComponentLoader<T> {\r\n  onBeforeShow: EventEmitter<any> = new EventEmitter();\r\n  onShown: EventEmitter<any> = new EventEmitter();\r\n  onBeforeHide: EventEmitter<any> = new EventEmitter();\r\n  onHidden: EventEmitter<any> = new EventEmitter();\r\n\r\n  instance: T;\r\n  _componentRef: ComponentRef<T>;\r\n  _inlineViewRef: EmbeddedViewRef<T>;\r\n\r\n  private _providers: Provider[] = [];\r\n  private _componentFactory: ComponentFactory<T>;\r\n  private _zoneSubscription: any;\r\n  private _contentRef: ContentRef;\r\n  private _innerComponent: ComponentRef<T>;\r\n\r\n  private _unregisterListenersFn: Function;\r\n\r\n  get isShown(): boolean {\r\n    if (this._isHiding) {\r\n      return false;\r\n    }\r\n\r\n    return !!this._componentRef;\r\n  }\r\n\r\n  private _isHiding = false;\r\n\r\n  /**\r\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n   */\r\n  private attachment: string;\r\n\r\n  /**\r\n   * A selector specifying the element the popover should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n  private container: string | ElementRef | any;\r\n\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n  private triggers: string;\r\n\r\n  private _listenOpts: ListenOptions = {};\r\n  private _globalListener = Function.prototype;\r\n\r\n  /**\r\n   * Do not use this directly, it should be instanced via\r\n   * `ComponentLoadFactory.attach`\r\n   * @internal\r\n   */\r\n  // tslint:disable-next-line\r\n  public constructor(\r\n    private _viewContainerRef: ViewContainerRef,\r\n    private _renderer: Renderer2,\r\n    private _elementRef: ElementRef,\r\n    private _injector: Injector,\r\n    private _componentFactoryResolver: ComponentFactoryResolver,\r\n    private _ngZone: NgZone,\r\n    private _applicationRef: ApplicationRef,\r\n    private _posService: PositioningService\r\n  ) {}\r\n\r\n  attach(compType: Type<T>): ComponentLoader<T> {\r\n    this._componentFactory = this._componentFactoryResolver\r\n      .resolveComponentFactory<T>(compType);\r\n\r\n    return this;\r\n  }\r\n\r\n  // todo: add behaviour: to target element, `body`, custom element\r\n  to(container?: string): ComponentLoader<T> {\r\n    this.container = container || this.container;\r\n\r\n    return this;\r\n  }\r\n\r\n  position(opts?: PositioningOptions): ComponentLoader<T> {\r\n    this.attachment = opts.attachment || this.attachment;\r\n    this._elementRef = (opts.target as ElementRef) || this._elementRef;\r\n\r\n    return this;\r\n  }\r\n\r\n  provide(provider: Provider): ComponentLoader<T> {\r\n    this._providers.push(provider);\r\n\r\n    return this;\r\n  }\r\n\r\n  // todo: appendChild to element or document.querySelector(this.container)\r\n\r\n  show(opts: {\r\n         content?: string | TemplateRef<any>;\r\n         context?: any;\r\n         initialState?: any; [key: string]: any;\r\n       } = {}\r\n  ): ComponentRef<T> {\r\n\r\n    this._subscribePositioning();\r\n    this._innerComponent = null;\r\n\r\n    if (!this._componentRef) {\r\n      this.onBeforeShow.emit();\r\n      this._contentRef = this._getContentRef(opts.content, opts.context, opts.initialState);\r\n      const injector = ReflectiveInjector.resolveAndCreate(this._providers, this._injector);\r\n\r\n      this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\r\n      this._applicationRef.attachView(this._componentRef.hostView);\r\n      // this._componentRef = this._viewContainerRef\r\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\r\n      this.instance = this._componentRef.instance;\r\n\r\n      Object.assign(this._componentRef.instance, opts);\r\n\r\n      if (this.container instanceof ElementRef) {\r\n        this.container.nativeElement.appendChild(\r\n          this._componentRef.location.nativeElement\r\n        );\r\n      }\r\n\r\n      if (this.container === 'body' && typeof document !== 'undefined') {\r\n        document\r\n          .querySelector(this.container as string)\r\n          .appendChild(this._componentRef.location.nativeElement);\r\n      }\r\n\r\n      if (\r\n        !this.container &&\r\n        this._elementRef &&\r\n        this._elementRef.nativeElement.parentElement\r\n      ) {\r\n        this._elementRef.nativeElement.parentElement.appendChild(\r\n          this._componentRef.location.nativeElement\r\n        );\r\n      }\r\n\r\n      // we need to manually invoke change detection since events registered\r\n      // via\r\n      // Renderer::listen() are not picked up by change detection with the\r\n      // OnPush strategy\r\n      if (this._contentRef.componentRef) {\r\n        this._innerComponent = this._contentRef.componentRef.instance;\r\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\r\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\r\n      }\r\n      this._componentRef.changeDetectorRef.markForCheck();\r\n      this._componentRef.changeDetectorRef.detectChanges();\r\n      this.onShown.emit(this._componentRef.instance);\r\n    }\r\n\r\n    this._registerOutsideClick();\r\n\r\n    return this._componentRef;\r\n  }\r\n\r\n  hide(): ComponentLoader<T> {\r\n    if (!this._componentRef) {\r\n      return this;\r\n    }\r\n\r\n    this.onBeforeHide.emit(this._componentRef.instance);\r\n\r\n    const componentEl = this._componentRef.location.nativeElement;\r\n    componentEl.parentNode.removeChild(componentEl);\r\n    if (this._contentRef.componentRef) {\r\n      this._contentRef.componentRef.destroy();\r\n    }\r\n    this._componentRef.destroy();\r\n    if (this._viewContainerRef && this._contentRef.viewRef) {\r\n      this._viewContainerRef.remove(\r\n        this._viewContainerRef.indexOf(this._contentRef.viewRef)\r\n      );\r\n    }\r\n    if (this._contentRef.viewRef) {\r\n      this._contentRef.viewRef.destroy();\r\n    }\r\n    // this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._componentRef.hostView));\r\n    //\r\n    // if (this._contentRef.viewRef && this._viewContainerRef.indexOf(this._contentRef.viewRef) !== -1) {\r\n    //   this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\r\n    // }\r\n\r\n    this._contentRef = null;\r\n    this._componentRef = null;\r\n    this._removeGlobalListener();\r\n\r\n    this.onHidden.emit();\r\n\r\n    return this;\r\n  }\r\n\r\n  toggle(): void {\r\n    if (this.isShown) {\r\n      this.hide();\r\n\r\n      return;\r\n    }\r\n\r\n    this.show();\r\n  }\r\n\r\n  dispose(): void {\r\n    if (this.isShown) {\r\n      this.hide();\r\n    }\r\n\r\n    this._unsubscribePositioning();\r\n\r\n    if (this._unregisterListenersFn) {\r\n      this._unregisterListenersFn();\r\n    }\r\n  }\r\n\r\n  listen(listenOpts: ListenOptions): ComponentLoader<T> {\r\n    this.triggers = listenOpts.triggers || this.triggers;\r\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\r\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\r\n\r\n    const hide = (this._listenOpts.hide = () =>\r\n      listenOpts.hide ? listenOpts.hide() : void this.hide());\r\n    const show = (this._listenOpts.show = (registerHide: Function) => {\r\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\r\n      registerHide();\r\n    });\r\n\r\n    const toggle = (registerHide: Function) => {\r\n      this.isShown ? hide() : show(registerHide);\r\n    };\r\n\r\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\r\n      target: listenOpts.target,\r\n      triggers: listenOpts.triggers,\r\n      show,\r\n      hide,\r\n      toggle\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  _removeGlobalListener() {\r\n    if (this._globalListener) {\r\n      this._globalListener();\r\n      this._globalListener = null;\r\n    }\r\n  }\r\n\r\n  attachInline(\r\n    vRef: ViewContainerRef,\r\n    template: TemplateRef<any>\r\n  ): ComponentLoader<T> {\r\n    this._inlineViewRef = vRef.createEmbeddedView(template);\r\n\r\n    return this;\r\n  }\r\n\r\n  _registerOutsideClick(): void {\r\n    if (!this._componentRef || !this._componentRef.location) {\r\n      return;\r\n    }\r\n    // why: should run after first event bubble\r\n    if (this._listenOpts.outsideClick) {\r\n      const target = this._componentRef.location.nativeElement;\r\n      setTimeout(() => {\r\n        this._globalListener = registerOutsideClick(this._renderer, {\r\n          targets: [target, this._elementRef.nativeElement],\r\n          outsideClick: this._listenOpts.outsideClick,\r\n          hide: () => this._listenOpts.hide()\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  getInnerComponent(): ComponentRef<T> {\r\n    return this._innerComponent;\r\n  }\r\n\r\n  private _subscribePositioning(): void {\r\n    if (this._zoneSubscription || !this.attachment) {\r\n      return;\r\n    }\r\n\r\n    this._zoneSubscription = this._ngZone.onStable.subscribe(() => {\r\n      if (!this._componentRef) {\r\n        return;\r\n      }\r\n      this._posService.position({\r\n        element: this._componentRef.location,\r\n        target: this._elementRef,\r\n        attachment: this.attachment,\r\n        appendToBody: this.container === 'body'\r\n      });\r\n    });\r\n  }\r\n\r\n  private _unsubscribePositioning(): void {\r\n    if (!this._zoneSubscription) {\r\n      return;\r\n    }\r\n    this._zoneSubscription.unsubscribe();\r\n    this._zoneSubscription = null;\r\n  }\r\n\r\n  private _getContentRef(\r\n    content: string | TemplateRef<any> | any,\r\n    context?: any,\r\n    initialState?: any\r\n  ): ContentRef {\r\n    if (!content) {\r\n      return new ContentRef([]);\r\n    }\r\n\r\n    if (content instanceof TemplateRef) {\r\n      if (this._viewContainerRef) {\r\n        const _viewRef = this._viewContainerRef\r\n          .createEmbeddedView<TemplateRef<T>>(content, context);\r\n        _viewRef.markForCheck();\r\n\r\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\r\n      }\r\n      const viewRef = content.createEmbeddedView({});\r\n      this._applicationRef.attachView(viewRef);\r\n\r\n      return new ContentRef([viewRef.rootNodes], viewRef);\r\n    }\r\n\r\n    if (typeof content === 'function') {\r\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(\r\n        content\r\n      );\r\n      const modalContentInjector = ReflectiveInjector.resolveAndCreate(\r\n        [...this._providers],\r\n        this._injector\r\n      );\r\n      const componentRef = contentCmptFactory.create(modalContentInjector);\r\n      Object.assign(componentRef.instance, initialState);\r\n      this._applicationRef.attachView(componentRef.hostView);\r\n\r\n      return new ContentRef(\r\n        [[componentRef.location.nativeElement]],\r\n        componentRef.hostView,\r\n        componentRef\r\n      );\r\n    }\r\n\r\n    // æ¯æä¼ å¥çcontentæ¯ä¸ä¸ªComponentRefå®ä¾ added by liyz\r\n    if (content instanceof ComponentRef) {\r\n      Object.assign(content.instance, initialState);\r\n      this._applicationRef.attachView(content.hostView);\r\n\r\n      return new ContentRef(\r\n        [[content.location.nativeElement]],\r\n        content.hostView,\r\n        content\r\n      );\r\n    }\r\n\r\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\r\n  }\r\n}\r\n","/**\r\n * @copyright Valor Software\r\n * @copyright Angular ng-bootstrap team\r\n */\r\n\r\n// previous version:\r\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\r\n// tslint:disable\r\nexport class Positioning {\r\n  public position(element: HTMLElement, round = true): ClientRect {\r\n    let elPosition: ClientRect;\r\n    let parentOffset: ClientRect = {\r\n      width: 0,\r\n      height: 0,\r\n      top: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0\r\n    };\r\n\r\n    if (this.getStyle(element, 'position') === 'fixed') {\r\n      const bcRect = element.getBoundingClientRect();\r\n      elPosition = {\r\n        width: bcRect.width,\r\n        height: bcRect.height,\r\n        top: bcRect.top,\r\n        bottom: bcRect.bottom,\r\n        left: bcRect.left,\r\n        right: bcRect.right\r\n      };\r\n    } else {\r\n      const offsetParentEl = this.offsetParent(element);\r\n\r\n      elPosition = this.offset(element, false);\r\n\r\n      if (offsetParentEl !== document.documentElement) {\r\n        parentOffset = this.offset(offsetParentEl, false);\r\n      }\r\n\r\n      parentOffset.top += offsetParentEl.clientTop;\r\n      parentOffset.left += offsetParentEl.clientLeft;\r\n    }\r\n\r\n    elPosition.top -= parentOffset.top;\r\n    elPosition.bottom -= parentOffset.top;\r\n    elPosition.left -= parentOffset.left;\r\n    elPosition.right -= parentOffset.left;\r\n\r\n    if (round) {\r\n      elPosition.top = Math.round(elPosition.top);\r\n      elPosition.bottom = Math.round(elPosition.bottom);\r\n      elPosition.left = Math.round(elPosition.left);\r\n      elPosition.right = Math.round(elPosition.right);\r\n    }\r\n\r\n    return elPosition;\r\n  }\r\n\r\n  public offset(element: HTMLElement, round = true): ClientRect {\r\n    const elBcr = element.getBoundingClientRect();\r\n    const viewportOffset = {\r\n      top: window.pageYOffset - document.documentElement.clientTop,\r\n      left: window.pageXOffset - document.documentElement.clientLeft\r\n    };\r\n\r\n    let elOffset = {\r\n      height: elBcr.height || element.offsetHeight,\r\n      width: elBcr.width || element.offsetWidth,\r\n      top: elBcr.top + viewportOffset.top,\r\n      bottom: elBcr.bottom + viewportOffset.top,\r\n      left: elBcr.left + viewportOffset.left,\r\n      right: elBcr.right + viewportOffset.left\r\n    };\r\n\r\n    if (round) {\r\n      elOffset.height = Math.round(elOffset.height);\r\n      elOffset.width = Math.round(elOffset.width);\r\n      elOffset.top = Math.round(elOffset.top);\r\n      elOffset.bottom = Math.round(elOffset.bottom);\r\n      elOffset.left = Math.round(elOffset.left);\r\n      elOffset.right = Math.round(elOffset.right);\r\n    }\r\n\r\n    return elOffset;\r\n  }\r\n\r\n  public positionElements(\r\n    hostElement: HTMLElement,\r\n    targetElement: HTMLElement,\r\n    placement: string,\r\n    appendToBody?: boolean\r\n  ): ClientRect {\r\n    const hostElPosition = appendToBody\r\n      ? this.offset(hostElement, false)\r\n      : this.position(hostElement, false);\r\n    const targetElStyles = this.getAllStyles(targetElement);\r\n    const shiftWidth: any = {\r\n      left: hostElPosition.left,\r\n      center:\r\n      hostElPosition.left +\r\n      hostElPosition.width / 2 -\r\n      targetElement.offsetWidth / 2,\r\n      right: hostElPosition.left + hostElPosition.width\r\n    };\r\n    const shiftHeight: any = {\r\n      top: hostElPosition.top,\r\n      center:\r\n      hostElPosition.top +\r\n      hostElPosition.height / 2 -\r\n      targetElement.offsetHeight / 2,\r\n      bottom: hostElPosition.top + hostElPosition.height\r\n    };\r\n    const targetElBCR = targetElement.getBoundingClientRect();\r\n    let placementPrimary = placement.split(' ')[0] || 'top';\r\n    const placementSecondary = placement.split(' ')[1] || 'center';\r\n\r\n    let targetElPosition: ClientRect = {\r\n      height: targetElBCR.height || targetElement.offsetHeight,\r\n      width: targetElBCR.width || targetElement.offsetWidth,\r\n      top: 0,\r\n      bottom: targetElBCR.height || targetElement.offsetHeight,\r\n      left: 0,\r\n      right: targetElBCR.width || targetElement.offsetWidth\r\n    };\r\n\r\n    if (placementPrimary === 'auto') {\r\n      let newPlacementPrimary = this.autoPosition(\r\n        targetElPosition,\r\n        hostElPosition,\r\n        targetElement,\r\n        placementSecondary\r\n      );\r\n      if (!newPlacementPrimary)\r\n        newPlacementPrimary = this.autoPosition(\r\n          targetElPosition,\r\n          hostElPosition,\r\n          targetElement\r\n        );\r\n      if (newPlacementPrimary) placementPrimary = newPlacementPrimary;\r\n      targetElement.classList.add(placementPrimary);\r\n    }\r\n\r\n    switch (placementPrimary) {\r\n      case 'top':\r\n        targetElPosition.top =\r\n          hostElPosition.top -\r\n          (targetElement.offsetHeight +\r\n          parseFloat(targetElStyles.marginBottom));\r\n        targetElPosition.bottom +=\r\n          hostElPosition.top - targetElement.offsetHeight;\r\n        targetElPosition.left = shiftWidth[placementSecondary];\r\n        targetElPosition.right += shiftWidth[placementSecondary];\r\n        break;\r\n      case 'bottom':\r\n        targetElPosition.top = shiftHeight[placementPrimary];\r\n        targetElPosition.bottom += shiftHeight[placementPrimary];\r\n        targetElPosition.left = shiftWidth[placementSecondary];\r\n        targetElPosition.right += shiftWidth[placementSecondary];\r\n        break;\r\n      case 'left':\r\n        targetElPosition.top = shiftHeight[placementSecondary];\r\n        targetElPosition.bottom += shiftHeight[placementSecondary];\r\n        targetElPosition.left =\r\n          hostElPosition.left -\r\n          (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\r\n        targetElPosition.right +=\r\n          hostElPosition.left - targetElement.offsetWidth;\r\n        break;\r\n      case 'right':\r\n        targetElPosition.top = shiftHeight[placementSecondary];\r\n        targetElPosition.bottom += shiftHeight[placementSecondary];\r\n        targetElPosition.left = shiftWidth[placementPrimary];\r\n        targetElPosition.right += shiftWidth[placementPrimary];\r\n        break;\r\n    }\r\n\r\n    targetElPosition.top = Math.round(targetElPosition.top);\r\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\r\n    targetElPosition.left = Math.round(targetElPosition.left);\r\n    targetElPosition.right = Math.round(targetElPosition.right);\r\n\r\n    return targetElPosition;\r\n  }\r\n\r\n  private autoPosition(\r\n    targetElPosition: ClientRect,\r\n    hostElPosition: ClientRect,\r\n    targetElement: HTMLElement,\r\n    preferredPosition?: string\r\n  ) {\r\n    if (\r\n      (!preferredPosition || preferredPosition === 'right') &&\r\n      targetElPosition.left + hostElPosition.left - targetElement.offsetWidth <\r\n      0\r\n    ) {\r\n      return 'right';\r\n    } else if (\r\n      (!preferredPosition || preferredPosition === 'top') &&\r\n      targetElPosition.bottom +\r\n      hostElPosition.bottom +\r\n      targetElement.offsetHeight >\r\n      window.innerHeight\r\n    ) {\r\n      return 'top';\r\n    } else if (\r\n      (!preferredPosition || preferredPosition === 'bottom') &&\r\n      targetElPosition.top + hostElPosition.top - targetElement.offsetHeight < 0\r\n    ) {\r\n      return 'bottom';\r\n    } else if (\r\n      (!preferredPosition || preferredPosition === 'left') &&\r\n      targetElPosition.right +\r\n      hostElPosition.right +\r\n      targetElement.offsetWidth >\r\n      window.innerWidth\r\n    ) {\r\n      return 'left';\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private getAllStyles(element: HTMLElement) {\r\n    return window.getComputedStyle(element);\r\n  }\r\n\r\n  private getStyle(element: HTMLElement, prop: string): string {\r\n    return (this.getAllStyles(element) as any)[prop];\r\n  }\r\n\r\n  private isStaticPositioned(element: HTMLElement): boolean {\r\n    return (this.getStyle(element, 'position') || 'static') === 'static';\r\n  }\r\n\r\n  private offsetParent(element: HTMLElement): HTMLElement {\r\n    let offsetParentEl =\r\n      <HTMLElement>element.offsetParent || document.documentElement;\r\n\r\n    while (\r\n    offsetParentEl &&\r\n    offsetParentEl !== document.documentElement &&\r\n    this.isStaticPositioned(offsetParentEl)\r\n      ) {\r\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\r\n    }\r\n\r\n    return offsetParentEl || document.documentElement;\r\n  }\r\n}\r\n\r\nconst positionService = new Positioning();\r\n\r\nexport function positionElements(\r\n  hostElement: HTMLElement,\r\n  targetElement: HTMLElement,\r\n  placement: string,\r\n  appendToBody?: boolean\r\n): void {\r\n  const pos = positionService.positionElements(\r\n    hostElement,\r\n    targetElement,\r\n    placement,\r\n    appendToBody\r\n  );\r\n\r\n  targetElement.style.top = `${pos.top}px`;\r\n  targetElement.style.left = `${pos.left}px`;\r\n}\r\n","import { Injectable, ElementRef } from '@angular/core';\r\nimport { positionElements } from './ng-positioning';\r\n\r\nexport interface PositioningOptions {\r\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\r\n  element?: HTMLElement | ElementRef | string;\r\n\r\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\r\n  target?: HTMLElement | ElementRef | string;\r\n\r\n  /**\r\n   * A string of the form 'vert-attachment horiz-attachment' or 'placement'\r\n   * - placement can be \"top\", \"bottom\", \"left\", \"right\"\r\n   * not yet supported:\r\n   * - vert-attachment can be any of 'top', 'middle', 'bottom'\r\n   * - horiz-attachment can be any of 'left', 'center', 'right'\r\n   */\r\n  attachment?: string;\r\n\r\n  /** A string similar to `attachment`. The one difference is that, if it's not provided,\r\n   * `targetAttachment` will assume the mirror image of `attachment`.\r\n   */\r\n  targetAttachment?: string;\r\n\r\n  /** A string of the form 'vert-offset horiz-offset'\r\n   * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\r\n   */\r\n  offset?: string;\r\n\r\n  /** A string similar to `offset`, but referring to the offset of the target */\r\n  targetOffset?: string;\r\n\r\n  /** If true component will be attached to body */\r\n  appendToBody?: boolean;\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class PositioningService {\r\n  position(options: PositioningOptions): void {\r\n    const {element, target, attachment, appendToBody} = options;\r\n    positionElements(\r\n      _getHtmlElement(target),\r\n      _getHtmlElement(element),\r\n      attachment,\r\n      appendToBody\r\n    );\r\n  }\r\n\r\n}\r\n\r\nfunction _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\r\n  // it means that we got a selector\r\n  if (typeof element === 'string') {\r\n    return document.querySelector(element) as HTMLElement;\r\n  }\r\n\r\n  if (element instanceof ElementRef) {\r\n    return element.nativeElement;\r\n  }\r\n\r\n  return element as HTMLElement;\r\n}\r\n","import {\r\n  ApplicationRef, ComponentFactoryResolver, ElementRef, Injectable, Injector,\r\n  NgZone, Renderer2, ViewContainerRef\r\n} from '@angular/core';\r\nimport {ComponentLoader} from './component-loader.class';\r\nimport {PositioningService} from '../positioning/index';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ComponentLoaderFactory {\r\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\r\n              private _ngZone: NgZone,\r\n              private _injector: Injector,\r\n              private _posService: PositioningService,\r\n              private _applicationRef: ApplicationRef) {\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param _elementRef\r\n   * @param _viewContainerRef\r\n   * @param _renderer\r\n   * @returns ComponentLoader\r\n   */\r\n  createLoader<T>(_elementRef: ElementRef,\r\n                  _viewContainerRef: ViewContainerRef,\r\n                  _renderer: Renderer2): ComponentLoader<T> {\r\n    return new ComponentLoader<T>(\r\n      _viewContainerRef,\r\n      _renderer,\r\n      _elementRef,\r\n      this._injector,\r\n      this._componentFactoryResolver,\r\n      this._ngZone,\r\n      this._applicationRef,\r\n      this._posService\r\n    );\r\n  }\r\n}\r\n","import { isDevMode } from '@angular/core';\r\nconst _messagesHash: { [key: string]: boolean } = {};\r\nconst _hideMsg = typeof console === 'undefined' || !('warn' in console);\r\n\r\nexport function warnOnce(msg: string): void {\r\n  if (!isDevMode() || _hideMsg || msg in _messagesHash) {\r\n    return;\r\n  }\r\n\r\n  _messagesHash[msg] = true;\r\n  /*tslint:disable-next-line*/\r\n  console.warn(msg);\r\n}\r\n","// tslint:disable:deprecation\r\nimport {\r\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\r\n  Renderer2, TemplateRef, ViewContainerRef\r\n} from '@angular/core';\r\nimport { TooltipContainerComponent } from './tooltip-container.component';\r\nimport { TooltipConfig } from './tooltip.config';\r\nimport { ComponentLoader, ComponentLoaderFactory } from '../utils/component-loader/index';\r\nimport { OnChange } from '../utils/decorators';\r\nimport { warnOnce } from '../utils/warn-once';\r\nimport { parseTriggers } from '../utils/triggers';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { timer } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[tooltip], [tooltipHtml]',\r\n  exportAs: 'bs-tooltip'\r\n})\r\nexport class TooltipDirective implements OnInit, OnDestroy {\r\n  /**\r\n   * Content to be displayed as tooltip.\r\n   */\r\n  @OnChange()\r\n  @Input()\r\n  tooltip: string | TemplateRef<any>;\r\n  /** Fired when tooltip content changes */\r\n  @Output()\r\n  tooltipChange: EventEmitter<string | TemplateRef<any>> = new EventEmitter();\r\n\r\n  /**\r\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n   */\r\n  @Input() placement: string;\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n  @Input() triggers: string;\r\n  /**\r\n   * A selector specifying the element the tooltip should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n  @Input() container: string;\r\n\r\n  /**\r\n   * Returns whether or not the tooltip is currently being shown\r\n   */\r\n  @Input()\r\n  get isOpen(): boolean {\r\n    return this._tooltip.isShown;\r\n  }\r\n\r\n  set isOpen(value: boolean) {\r\n    if (value) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Allows to disable tooltip\r\n   */\r\n  @Input() isDisabled: boolean;\r\n\r\n  /**\r\n   * Css class for tooltip container\r\n   */\r\n  @Input() containerClass = '';\r\n  /**\r\n   * Delay before showing the tooltip\r\n   */\r\n  @Input() delay: number;\r\n\r\n  /**\r\n   * Emits an event when the tooltip is shown\r\n   */\r\n  @Output() onShown: EventEmitter<any>;\r\n  /**\r\n   * Emits an event when the tooltip is hidden\r\n   */\r\n  @Output() onHidden: EventEmitter<any>;\r\n\r\n  /** @deprecated - please use `tooltip` instead */\r\n  @Input('tooltipHtml')\r\n  set htmlContent(value: string | TemplateRef<any>) {\r\n    warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\r\n    this.tooltip = value;\r\n  }\r\n\r\n  /** @deprecated - please use `placement` instead */\r\n  @Input('tooltipPlacement')\r\n  set _placement(value: string) {\r\n    warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\r\n    this.placement = value;\r\n  }\r\n\r\n  /** @deprecated - please use `isOpen` instead*/\r\n  @Input('tooltipIsOpen')\r\n  set _isOpen(value: boolean) {\r\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\r\n    this.isOpen = value;\r\n  }\r\n\r\n  get _isOpen(): boolean {\r\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\r\n    return this.isOpen;\r\n  }\r\n\r\n  /** @deprecated - please use `isDisabled` instead */\r\n  @Input('tooltipEnable')\r\n  set _enable(value: boolean) {\r\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\r\n    this.isDisabled = value;\r\n  }\r\n\r\n  get _enable(): boolean {\r\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\r\n    return this.isDisabled;\r\n  }\r\n\r\n  /** @deprecated - please use `container=\"body\"` instead */\r\n  @Input('tooltipAppendToBody')\r\n  set _appendToBody(value: boolean) {\r\n    warnOnce(\r\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\r\n    );\r\n    this.container = value ? 'body' : this.container;\r\n  }\r\n\r\n  get _appendToBody(): boolean {\r\n    warnOnce(\r\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\r\n    );\r\n    return this.container === 'body';\r\n  }\r\n\r\n  /** @deprecated - removed, will be added to configuration */\r\n  @Input('tooltipAnimation') _animation = true;\r\n\r\n  /** @deprecated - will replaced with customClass */\r\n  @Input('tooltipClass')\r\n  set _popupClass(value: string) {\r\n    warnOnce('tooltipClass deprecated');\r\n  }\r\n\r\n  /** @deprecated - removed */\r\n  @Input('tooltipContext')\r\n  set _tooltipContext(value: any) {\r\n    warnOnce('tooltipContext deprecated');\r\n  }\r\n\r\n  /** @deprecated */\r\n  @Input('tooltipPopupDelay')\r\n  set _tooltipPopupDelay(value: number) {\r\n    warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\r\n    this.delay = value;\r\n  }\r\n\r\n  /** @deprecated */\r\n  @Input('tooltipFadeDuration') _fadeDuration = 150;\r\n\r\n  /** @deprecated -  please use `triggers` instead */\r\n  @Input('tooltipTrigger')\r\n  get _tooltipTrigger(): string | string[] {\r\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\r\n    return this.triggers;\r\n  }\r\n\r\n  set _tooltipTrigger(value: string | string[]) {\r\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\r\n    this.triggers = (value || '').toString();\r\n  }\r\n\r\n  /** @deprecated */\r\n  @Output()\r\n  tooltipStateChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  protected _delayTimeoutId: number | any;\r\n  protected _tooltipCancelShowFn: Function;\r\n\r\n  private _tooltip: ComponentLoader<TooltipContainerComponent>;\r\n\r\n  constructor(_viewContainerRef: ViewContainerRef,\r\n                     private _renderer: Renderer2,\r\n                     private _elementRef: ElementRef,\r\n                     cis: ComponentLoaderFactory,\r\n                     config: TooltipConfig) {\r\n    this._tooltip = cis\r\n      .createLoader<TooltipContainerComponent>(\r\n        this._elementRef,\r\n        _viewContainerRef,\r\n        this._renderer\r\n      )\r\n      .provide({provide: TooltipConfig, useValue: config});\r\n\r\n    Object.assign(this, config);\r\n    this.onShown = this._tooltip.onShown;\r\n    this.onHidden = this._tooltip.onHidden;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._tooltip.listen({\r\n      triggers: this.triggers,\r\n      show: () => this.show()\r\n    });\r\n    this.tooltipChange.subscribe((value: any) => {\r\n      if (!value) {\r\n        this._tooltip.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggles an elementâs tooltip. This is considered a âmanualâ triggering of\r\n   * the tooltip.\r\n   */\r\n  toggle(): void {\r\n    if (this.isOpen) {\r\n      return this.hide();\r\n    }\r\n\r\n    this.show();\r\n  }\r\n\r\n  /**\r\n   * Opens an elementâs tooltip. This is considered a âmanualâ triggering of\r\n   * the tooltip.\r\n   */\r\n  show(): void {\r\n    if (\r\n      this.isOpen ||\r\n      this.isDisabled ||\r\n      this._delayTimeoutId ||\r\n      !this.tooltip\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const showTooltip = () => {\r\n      if (this._delayTimeoutId) {\r\n        this._delayTimeoutId = undefined;\r\n      }\r\n\r\n      this._tooltip\r\n        .attach(TooltipContainerComponent)\r\n        .to(this.container)\r\n        .position({attachment: this.placement})\r\n        .show({\r\n          content: this.tooltip,\r\n          placement: this.placement,\r\n          containerClass: this.containerClass\r\n        });\r\n    };\r\n    const cancelDelayedTooltipShowing = () => {\r\n      if (this._tooltipCancelShowFn) {\r\n        this._tooltipCancelShowFn();\r\n      }\r\n    };\r\n\r\n    if (this.delay) {\r\n      const tipTimer = timer(this.delay).subscribe(() => {\r\n        showTooltip();\r\n        cancelDelayedTooltipShowing();\r\n      });\r\n\r\n      if (this.triggers) {\r\n        const triggers = parseTriggers(this.triggers);\r\n        this._tooltipCancelShowFn = this._renderer.listen(this._elementRef.nativeElement, triggers[0].close, () => {\r\n          tipTimer.unsubscribe();\r\n          cancelDelayedTooltipShowing();\r\n        });\r\n      }\r\n    } else {\r\n      showTooltip();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes an elementâs tooltip. This is considered a âmanualâ triggering of\r\n   * the tooltip.\r\n   */\r\n  hide(): void {\r\n    if (this._delayTimeoutId) {\r\n      clearTimeout(this._delayTimeoutId);\r\n      this._delayTimeoutId = undefined;\r\n    }\r\n\r\n    if (!this._tooltip.isShown) {\r\n      return;\r\n    }\r\n\r\n    this._tooltip.instance.classMap.in = false;\r\n    setTimeout(() => {\r\n      this._tooltip.hide();\r\n    }, this._fadeDuration);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._tooltip.dispose();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { TooltipContainerComponent } from './tooltip-container.component';\r\nimport { TooltipDirective } from './tooltip.directive';\r\nimport { TooltipConfig } from './tooltip.config';\r\nimport { ComponentLoaderFactory } from '../utils/component-loader/index';\r\nimport { PositioningService } from '../utils/positioning/index';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [TooltipDirective, TooltipContainerComponent],\r\n  exports: [TooltipDirective],\r\n  entryComponents: [TooltipContainerComponent]\r\n})\r\nexport class TooltipModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: TooltipModule,\r\n      providers: [TooltipConfig, ComponentLoaderFactory, PositioningService]\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class BsModalRef {\r\n  /**\r\n   * Reference to a component inside the modal. Null if modal's been created with TemplateRef\r\n   */\r\n  content?: any | null;\r\n\r\n  /**\r\n   * Hides the modal\r\n   */\r\n  hide: () => void = Function;\r\n}\r\n","export class ModalBackdropOptions {\r\n  animate = true;\r\n\r\n  constructor(options: ModalBackdropOptions) {\r\n    Object.assign(this, options);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ModalOptions {\r\n  /**\r\n   *  Includes a modal-backdrop element. Alternatively,\r\n   *  specify static for a backdrop which doesn't close the modal on click.\r\n   */\r\n  backdrop?: boolean | 'static';\r\n  /**\r\n   * Closes the modal when escape key is pressed.\r\n   */\r\n  keyboard?: boolean;\r\n\r\n  focus?: boolean;\r\n  /**\r\n   * Shows the modal when initialized.\r\n   */\r\n  show?: boolean;\r\n  /**\r\n   * Ignore the backdrop click\r\n   */\r\n  ignoreBackdropClick?: boolean;\r\n  /**\r\n   * Css class for opened modal\r\n   */\r\n  class?: string;\r\n  /**\r\n   * Toggle animation\r\n   */\r\n  animated?: boolean;\r\n  /**\r\n   * Modal data\r\n   */\r\n  initialState?: Object;\r\n}\r\n\r\n\r\nexport const modalConfigDefaults: ModalOptions = {\r\n  backdrop: true,\r\n  keyboard: true,\r\n  focus: true,\r\n  show: false,\r\n  ignoreBackdropClick: false,\r\n  class: '',\r\n  animated: true,\r\n  initialState: {}\r\n};\r\n\r\nexport const CLASS_NAME: any = {\r\n  SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\r\n  BACKDROP: 'modal-backdrop',\r\n  OPEN: 'modal-open',\r\n  FADE: 'fade',\r\n  IN: 'in', // bs3\r\n  SHOW: 'show' // bs4\r\n};\r\n\r\nexport const SELECTOR: any = {\r\n  DIALOG: '.modal-dialog',\r\n  DATA_TOGGLE: '[data-toggle=\"modal\"]',\r\n  DATA_DISMISS: '[data-dismiss=\"modal\"]',\r\n  FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\r\n};\r\n\r\nexport const TRANSITION_DURATIONS: any = {\r\n  MODAL: 300,\r\n  BACKDROP: 150\r\n};\r\n\r\nexport const DISMISS_REASONS = {\r\n  BACKRDOP: 'backdrop-click',\r\n  ESC: 'esc'\r\n};\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport {\r\n  CLASS_NAME,\r\n  DISMISS_REASONS,\r\n  ModalOptions,\r\n  TRANSITION_DURATIONS\r\n} from './modal-options.class';\r\nimport { BsModalService } from './bs-modal.service';\r\nimport { isBs3 } from '../utils/theme-provider';\r\n\r\n@Component({\r\n  selector: 'modal-container',\r\n  template: `\r\n    <div [class]=\"'modal-dialog' + (config.class ? ' ' + config.class : '')\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </div>\r\n  `,\r\n  host: {\r\n    class: 'modal',\r\n    role: 'dialog',\r\n    tabindex: '-1',\r\n    '[attr.aria-modal]': 'true'\r\n  }\r\n})\r\nexport class ModalContainerComponent implements OnInit, OnDestroy {\r\n  config: ModalOptions;\r\n  isShown = false;\r\n  level: number;\r\n  isAnimated: boolean;\r\n  bsModalService: BsModalService;\r\n  private isModalHiding = false;\r\n\r\n  constructor(options: ModalOptions,\r\n              protected _element: ElementRef,\r\n              private _renderer: Renderer2) {\r\n    this.config = Object.assign({}, options);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.isAnimated) {\r\n      this._renderer.addClass(\r\n        this._element.nativeElement,\r\n        CLASS_NAME.FADE\r\n      );\r\n    }\r\n    this._renderer.setStyle(\r\n      this._element.nativeElement,\r\n      'display',\r\n      'block'\r\n    );\r\n    setTimeout(() => {\r\n      this.isShown = true;\r\n      this._renderer.addClass(\r\n        this._element.nativeElement,\r\n        isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW\r\n      );\r\n    }, this.isAnimated ? TRANSITION_DURATIONS.BACKDROP : 0);\r\n    if (document && document.body) {\r\n      if (this.bsModalService.getModalsCount() === 1) {\r\n        this.bsModalService.checkScrollbar();\r\n        this.bsModalService.setScrollbar();\r\n      }\r\n      this._renderer.addClass(document.body, CLASS_NAME.OPEN);\r\n    }\r\n    if (this._element.nativeElement) {\r\n      this._element.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: any): void {\r\n    if (\r\n      this.config.ignoreBackdropClick ||\r\n      this.config.backdrop === 'static' ||\r\n      event.target !== this._element.nativeElement\r\n    ) {\r\n      return;\r\n    }\r\n    this.bsModalService.setDismissReason(DISMISS_REASONS.BACKRDOP);\r\n    this.hide();\r\n  }\r\n\r\n  @HostListener('window:keydown.esc', ['$event'])\r\n  onEsc(event: any): void {\r\n    if (!this.isShown) {\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === 27) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (\r\n      this.config.keyboard &&\r\n      this.level === this.bsModalService.getModalsCount()\r\n    ) {\r\n      this.bsModalService.setDismissReason(DISMISS_REASONS.ESC);\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.isShown) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide(): void {\r\n    if (this.isModalHiding || !this.isShown) {\r\n      return;\r\n    }\r\n    this.isModalHiding = true;\r\n    this._renderer.removeClass(\r\n      this._element.nativeElement,\r\n      isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW\r\n    );\r\n    setTimeout(() => {\r\n      this.isShown = false;\r\n      if (\r\n        document &&\r\n        document.body &&\r\n        this.bsModalService.getModalsCount() === 1\r\n      ) {\r\n        this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\r\n      }\r\n      this.bsModalService.hide(this.level);\r\n      this.isModalHiding = false;\r\n    }, this.isAnimated ? TRANSITION_DURATIONS.MODAL : 0);\r\n  }\r\n}\r\n","import { window } from './facade/browser';\r\n\r\nexport class Utils {\r\n  public static reflow(element: any): void {\r\n    ((bs: any): void => bs)(element.offsetHeight);\r\n  }\r\n\r\n  // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\r\n  public static getStyles(elem: any): any {\r\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n    // IE throws on elements created in popups\r\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n    let view = elem.ownerDocument.defaultView;\r\n\r\n    if (!view || !view.opener) {\r\n      view = window;\r\n    }\r\n\r\n    return view.getComputedStyle(elem);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\r\n\r\nimport { CLASS_NAME } from './modal-options.class';\r\nimport { isBs3 } from '../utils/theme-provider';\r\nimport { Utils } from '../utils/utils.class';\r\n\r\n\r\n/** This component will be added as background layout for modals if enabled */\r\n@Component({\r\n  selector: 'bs-modal-backdrop',\r\n  template: ' ',\r\n  host: { class: CLASS_NAME.BACKDROP }\r\n})\r\nexport class ModalBackdropComponent implements OnInit {\r\n  get isAnimated(): boolean {\r\n    return this._isAnimated;\r\n  }\r\n\r\n  set isAnimated(value: boolean) {\r\n    this._isAnimated = value;\r\n    // this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, value);\r\n  }\r\n\r\n  get isShown(): boolean {\r\n    return this._isShown;\r\n  }\r\n\r\n  set isShown(value: boolean) {\r\n    this._isShown = value;\r\n    if (value) {\r\n      this.renderer.addClass(\r\n        this.element.nativeElement,\r\n        `${CLASS_NAME.IN}`\r\n      );\r\n    } else {\r\n      this.renderer.removeClass(\r\n        this.element.nativeElement,\r\n        `${CLASS_NAME.IN}`\r\n      );\r\n    }\r\n    if (!isBs3()) {\r\n      if (value) {\r\n        this.renderer.addClass(\r\n          this.element.nativeElement,\r\n          `${CLASS_NAME.SHOW}`\r\n        );\r\n      } else {\r\n        this.renderer.removeClass(\r\n          this.element.nativeElement,\r\n          `${CLASS_NAME.SHOW}`\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  element: ElementRef;\r\n  renderer: Renderer2;\r\n\r\n  protected _isAnimated: boolean;\r\n  protected _isShown = false;\r\n\r\n  constructor(element: ElementRef, renderer: Renderer2) {\r\n    this.element = element;\r\n    this.renderer = renderer;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.isAnimated) {\r\n      this.renderer.addClass(\r\n        this.element.nativeElement,\r\n        `${CLASS_NAME.FADE}`\r\n      );\r\n      Utils.reflow(this.element.nativeElement);\r\n    }\r\n    this.isShown = true;\r\n  }\r\n}\r\n","/* tslint:disable:max-file-line-count */\r\n// todo: should we support enforce focus in?\r\n// todo: in original bs there are was a way to prevent modal from showing\r\n// todo: original modal had resize events\r\n\r\nimport {\r\n  ComponentRef, Directive, ElementRef, EventEmitter, HostListener, Input,\r\n  OnDestroy, OnInit, Output, Renderer2, ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { document, window } from '../utils/facade/browser';\r\n\r\nimport { isBs3 } from '../utils/theme-provider';\r\nimport { Utils } from '../utils/utils.class';\r\nimport { ModalBackdropComponent } from './modal-backdrop.component';\r\nimport {\r\n  CLASS_NAME, DISMISS_REASONS, modalConfigDefaults, ModalOptions\r\n} from './modal-options.class';\r\nimport { ComponentLoader } from '../utils/component-loader/component-loader.class';\r\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\r\n\r\nconst TRANSITION_DURATION = 300;\r\nconst BACKDROP_TRANSITION_DURATION = 150;\r\n\r\n/** Mark any code with directive to show it's content in modal */\r\n@Directive({\r\n  selector: '[bsModal]',\r\n  exportAs: 'bs-modal'\r\n})\r\nexport class ModalDirective implements OnDestroy, OnInit {\r\n  /** allows to set modal configuration via element property */\r\n  @Input()\r\n  set config(conf: ModalOptions) {\r\n    this._config = this.getConfig(conf);\r\n  }\r\n\r\n  get config(): ModalOptions {\r\n    return this._config;\r\n  }\r\n\r\n  /** This event fires immediately when the `show` instance method is called. */\r\n  @Output()\r\n  onShow: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\r\n  /** This event is fired when the modal has been made visible to the user\r\n   * (will wait for CSS transitions to complete)\r\n   */\r\n  @Output()\r\n  onShown: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\r\n  /** This event is fired immediately when\r\n   * the hide instance method has been called.\r\n   */\r\n  @Output()\r\n  onHide: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\r\n  /** This event is fired when the modal has finished being\r\n   * hidden from the user (will wait for CSS transitions to complete).\r\n   */\r\n  @Output()\r\n  onHidden: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\r\n\r\n  /** This field contains last dismiss reason.\r\n   * Possible values: `backdrop-click`, `esc` and `null`\r\n   * (if modal was closed by direct call of `.hide()`).\r\n   */\r\n  dismissReason: string;\r\n\r\n  get isShown(): boolean {\r\n    return this._isShown;\r\n  }\r\n\r\n  protected _config: ModalOptions;\r\n  protected _isShown = false;\r\n\r\n  protected isBodyOverflowing = false;\r\n  protected originalBodyPadding = 0;\r\n  protected scrollbarWidth = 0;\r\n\r\n  protected timerHideModal: any = 0;\r\n  protected timerRmBackDrop: any = 0;\r\n\r\n  // reference to backdrop component\r\n  protected backdrop: ComponentRef<ModalBackdropComponent>;\r\n  private _backdrop: ComponentLoader<ModalBackdropComponent>;\r\n\r\n  private isNested = false;\r\n\r\n  constructor(private _element: ElementRef,\r\n              _viewContainerRef: ViewContainerRef,\r\n              private _renderer: Renderer2,\r\n              clf: ComponentLoaderFactory) {\r\n    this._backdrop = clf.createLoader<ModalBackdropComponent>(\r\n      _element,\r\n      _viewContainerRef,\r\n      _renderer\r\n    );\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: any): void {\r\n    if (\r\n      this.config.ignoreBackdropClick ||\r\n      this.config.backdrop === 'static' ||\r\n      event.target !== this._element.nativeElement\r\n    ) {\r\n      return;\r\n    }\r\n    this.dismissReason = DISMISS_REASONS.BACKRDOP;\r\n    this.hide(event);\r\n  }\r\n\r\n  // todo: consider preventing default and stopping propagation\r\n  @HostListener('keydown.esc', ['$event'])\r\n  onEsc(event: any): void {\r\n    if (!this._isShown) {\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === 27) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (this.config.keyboard) {\r\n      this.dismissReason = DISMISS_REASONS.ESC;\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.config = void 0;\r\n    if (this._isShown) {\r\n      this._isShown = false;\r\n      this.hideModal();\r\n      this._backdrop.dispose();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this._config = this._config || this.getConfig();\r\n    setTimeout(() => {\r\n      if (this._config.show) {\r\n        this.show();\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  /* Public methods */\r\n\r\n  /** Allows to manually toggle modal visibility */\r\n  toggle(): void {\r\n    return this._isShown ? this.hide() : this.show();\r\n  }\r\n\r\n  /** Allows to manually open modal */\r\n  show(): void {\r\n    this.dismissReason = null;\r\n    this.onShow.emit(this);\r\n    if (this._isShown) {\r\n      return;\r\n    }\r\n    clearTimeout(this.timerHideModal);\r\n    clearTimeout(this.timerRmBackDrop);\r\n\r\n    this._isShown = true;\r\n\r\n    this.checkScrollbar();\r\n    this.setScrollbar();\r\n\r\n    if (document && document.body) {\r\n      if (document.body.classList.contains(CLASS_NAME.OPEN)) {\r\n        this.isNested = true;\r\n      } else {\r\n        this._renderer.addClass(document.body, CLASS_NAME.OPEN);\r\n      }\r\n    }\r\n\r\n    this.showBackdrop(() => {\r\n      this.showElement();\r\n    });\r\n  }\r\n\r\n  /** Allows to manually close modal */\r\n  hide(event?: Event): void {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    this.onHide.emit(this);\r\n\r\n    // todo: add an option to prevent hiding\r\n    if (!this._isShown) {\r\n      return;\r\n    }\r\n\r\n    clearTimeout(this.timerHideModal);\r\n    clearTimeout(this.timerRmBackDrop);\r\n\r\n    this._isShown = false;\r\n    this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.IN);\r\n    if (!isBs3()) {\r\n      this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.SHOW);\r\n    }\r\n    // this._addClassIn = false;\r\n\r\n    if (this._config.animated) {\r\n      this.timerHideModal = setTimeout(\r\n        () => this.hideModal(),\r\n        TRANSITION_DURATION\r\n      );\r\n    } else {\r\n      this.hideModal();\r\n    }\r\n  }\r\n\r\n  /** Private methods @internal */\r\n  protected getConfig(config?: ModalOptions): ModalOptions {\r\n    return Object.assign({}, modalConfigDefaults, config);\r\n  }\r\n\r\n  /**\r\n   *  Show dialog\r\n   *  @internal\r\n   */\r\n  protected showElement(): void {\r\n    // todo: replace this with component loader usage\r\n    if (\r\n      !this._element.nativeElement.parentNode ||\r\n      this._element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE\r\n    ) {\r\n      // don't move modals dom position\r\n      if (document && document.body) {\r\n        document.body.appendChild(this._element.nativeElement);\r\n      }\r\n    }\r\n\r\n    this._renderer.setAttribute(\r\n      this._element.nativeElement,\r\n      'aria-hidden',\r\n      'false'\r\n    );\r\n    this._renderer.setAttribute(\r\n      this._element.nativeElement,\r\n      'aria-modal',\r\n      'true'\r\n    );\r\n    this._renderer.setStyle(\r\n      this._element.nativeElement,\r\n      'display',\r\n      'block'\r\n    );\r\n    this._renderer.setProperty(\r\n      this._element.nativeElement,\r\n      'scrollTop',\r\n      0\r\n    );\r\n\r\n    if (this._config.animated) {\r\n      Utils.reflow(this._element.nativeElement);\r\n    }\r\n\r\n    // this._addClassIn = true;\r\n    this._renderer.addClass(this._element.nativeElement, CLASS_NAME.IN);\r\n    if (!isBs3()) {\r\n      this._renderer.addClass(this._element.nativeElement, CLASS_NAME.SHOW);\r\n    }\r\n\r\n    const transitionComplete = () => {\r\n      if (this._config.focus) {\r\n        this._element.nativeElement.focus();\r\n      }\r\n      this.onShown.emit(this);\r\n    };\r\n\r\n    if (this._config.animated) {\r\n      setTimeout(transitionComplete, TRANSITION_DURATION);\r\n    } else {\r\n      transitionComplete();\r\n    }\r\n  }\r\n\r\n  /** @internal */\r\n  protected hideModal(): void {\r\n    this._renderer.setAttribute(\r\n      this._element.nativeElement,\r\n      'aria-hidden',\r\n      'true'\r\n    );\r\n    this._renderer.setStyle(\r\n      this._element.nativeElement,\r\n      'display',\r\n      'none'\r\n    );\r\n    this.showBackdrop(() => {\r\n      if (!this.isNested) {\r\n        if (document && document.body) {\r\n          this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\r\n        }\r\n        this.resetScrollbar();\r\n      }\r\n      this.resetAdjustments();\r\n      this.focusOtherModal();\r\n      this.onHidden.emit(this);\r\n    });\r\n  }\r\n\r\n  // todo: original show was calling a callback when done, but we can use\r\n  // promise\r\n  /** @internal */\r\n  protected showBackdrop(callback?: Function): void {\r\n    if (\r\n      this._isShown &&\r\n      this.config.backdrop &&\r\n      (!this.backdrop || !this.backdrop.instance.isShown)\r\n    ) {\r\n      this.removeBackdrop();\r\n      this._backdrop\r\n        .attach(ModalBackdropComponent)\r\n        .to('body')\r\n        .show({isAnimated: this._config.animated});\r\n      this.backdrop = this._backdrop._componentRef;\r\n\r\n      if (!callback) {\r\n        return;\r\n      }\r\n\r\n      if (!this._config.animated) {\r\n        callback();\r\n\r\n        return;\r\n      }\r\n\r\n      setTimeout(callback, BACKDROP_TRANSITION_DURATION);\r\n    } else if (!this._isShown && this.backdrop) {\r\n      this.backdrop.instance.isShown = false;\r\n\r\n      const callbackRemove = () => {\r\n        this.removeBackdrop();\r\n        if (callback) {\r\n          callback();\r\n        }\r\n      };\r\n\r\n      if (this.backdrop.instance.isAnimated) {\r\n        this.timerRmBackDrop = setTimeout(\r\n          callbackRemove,\r\n          BACKDROP_TRANSITION_DURATION\r\n        );\r\n      } else {\r\n        callbackRemove();\r\n      }\r\n    } else if (callback) {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  /** @internal */\r\n  protected removeBackdrop(): void {\r\n    this._backdrop.hide();\r\n  }\r\n\r\n  /** Events tricks */\r\n\r\n  // no need for it\r\n  // protected setEscapeEvent():void {\r\n  //   if (this._isShown && this._config.keyboard) {\r\n  //     $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {\r\n  //       if (event.which === 27) {\r\n  //         this.hide()\r\n  //       }\r\n  //     })\r\n  //\r\n  //   } else if (!this._isShown) {\r\n  //     $(this._element).off(Event.KEYDOWN_DISMISS)\r\n  //   }\r\n  // }\r\n\r\n  // protected setResizeEvent():void {\r\n  // console.log(this.renderer.listenGlobal('', Event.RESIZE));\r\n  // if (this._isShown) {\r\n  //   $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this))\r\n  // } else {\r\n  //   $(window).off(Event.RESIZE)\r\n  // }\r\n  // }\r\n\r\n  protected focusOtherModal() {\r\n    if (this._element.nativeElement.parentElement == null) return;\r\n    const otherOpenedModals = this._element.nativeElement.parentElement.querySelectorAll('.in[bsModal]');\r\n    if (!otherOpenedModals.length) {\r\n      return;\r\n    }\r\n    otherOpenedModals[otherOpenedModals.length - 1].focus();\r\n  }\r\n\r\n  /** @internal */\r\n  protected resetAdjustments(): void {\r\n    this._renderer.setStyle(\r\n      this._element.nativeElement,\r\n      'paddingLeft',\r\n      ''\r\n    );\r\n    this._renderer.setStyle(\r\n      this._element.nativeElement,\r\n      'paddingRight',\r\n      ''\r\n    );\r\n  }\r\n\r\n  /** Scroll bar tricks */\r\n  /** @internal */\r\n  protected checkScrollbar(): void {\r\n    this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\r\n    this.scrollbarWidth = this.getScrollbarWidth();\r\n  }\r\n\r\n  protected setScrollbar(): void {\r\n    if (!document) {\r\n      return;\r\n    }\r\n\r\n    this.originalBodyPadding = parseInt(\r\n      window\r\n        .getComputedStyle(document.body)\r\n        .getPropertyValue('padding-right') || 0,\r\n      10\r\n    );\r\n\r\n    if (this.isBodyOverflowing) {\r\n      document.body.style.paddingRight = `${this.originalBodyPadding +\r\n      this.scrollbarWidth}px`;\r\n    }\r\n  }\r\n\r\n  protected resetScrollbar(): void {\r\n    document.body.style.paddingRight = this.originalBodyPadding + 'px';\r\n  }\r\n\r\n  // thx d.walsh\r\n  protected getScrollbarWidth(): number {\r\n    const scrollDiv = this._renderer.createElement('div');\r\n    this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\r\n    this._renderer.appendChild(document.body, scrollDiv);\r\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\r\n    this._renderer.removeChild(document.body, scrollDiv);\r\n\r\n    return scrollbarWidth;\r\n  }\r\n}\r\n","import {\r\n  ComponentRef,\r\n  Injectable,\r\n  TemplateRef,\r\n  EventEmitter, Renderer2, RendererFactory2\r\n} from '@angular/core';\r\n\r\nimport { ComponentLoader } from '../utils/component-loader/component-loader.class';\r\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\r\nimport { ModalBackdropComponent } from './modal-backdrop.component';\r\nimport { ModalContainerComponent } from './modal-container.component';\r\nimport {\r\n  CLASS_NAME,\r\n  modalConfigDefaults,\r\n  ModalOptions,\r\n  TRANSITION_DURATIONS\r\n} from './modal-options.class';\r\nimport { BsModalRef } from './bs-modal-ref.service';\r\n\r\n@Injectable()\r\nexport class BsModalService {\r\n  // constructor props\r\n  config: ModalOptions = modalConfigDefaults;\r\n\r\n  onShow: EventEmitter<any> = new EventEmitter();\r\n  onShown: EventEmitter<any> = new EventEmitter();\r\n  onHide: EventEmitter<any> = new EventEmitter();\r\n  onHidden: EventEmitter<any> = new EventEmitter();\r\n\r\n  protected isBodyOverflowing = false;\r\n  protected originalBodyPadding = 0;\r\n\r\n  protected scrollbarWidth = 0;\r\n\r\n  protected backdropRef: ComponentRef<ModalBackdropComponent>;\r\n  private _backdropLoader: ComponentLoader<ModalBackdropComponent>;\r\n  private modalsCount = 0;\r\n  private lastDismissReason = '';\r\n\r\n  private loaders: ComponentLoader<ModalContainerComponent>[] = [];\r\n\r\n  private _renderer: Renderer2;\r\n\r\n  constructor(rendererFactory: RendererFactory2, private clf: ComponentLoaderFactory) {\r\n    this._backdropLoader = this.clf.createLoader<ModalBackdropComponent>(\r\n      null,\r\n      null,\r\n      null\r\n    );\r\n    this._renderer = rendererFactory.createRenderer(null, null);\r\n  }\r\n\r\n  /** Shows a modal */\r\n  show(content: string | TemplateRef<any> | any, config?: ModalOptions): BsModalRef {\r\n    this.modalsCount++;\r\n    this._createLoaders();\r\n    this.config = Object.assign({}, modalConfigDefaults, config);\r\n    this._showBackdrop();\r\n    this.lastDismissReason = null;\r\n\r\n    return this._showModal(content);\r\n  }\r\n\r\n  hide(level: number) {\r\n    if (this.modalsCount === 1) {\r\n      this._hideBackdrop();\r\n      this.resetScrollbar();\r\n    }\r\n    this.modalsCount = this.modalsCount >= 1 ? this.modalsCount - 1 : 0;\r\n    setTimeout(() => {\r\n      this._hideModal(level);\r\n      this.removeLoaders(level);\r\n    }, this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0);\r\n  }\r\n\r\n  _showBackdrop(): void {\r\n    const isBackdropEnabled =\r\n      this.config.backdrop || this.config.backdrop === 'static';\r\n    const isBackdropInDOM =\r\n      !this.backdropRef || !this.backdropRef.instance.isShown;\r\n\r\n    if (this.modalsCount === 1) {\r\n      this.removeBackdrop();\r\n\r\n      if (isBackdropEnabled && isBackdropInDOM) {\r\n        this._backdropLoader\r\n          .attach(ModalBackdropComponent)\r\n          .to('body')\r\n          .show({ isAnimated: this.config.animated });\r\n        this.backdropRef = this._backdropLoader._componentRef;\r\n      }\r\n    }\r\n  }\r\n\r\n  _hideBackdrop(): void {\r\n    if (!this.backdropRef) {\r\n      return;\r\n    }\r\n    this.backdropRef.instance.isShown = false;\r\n    const duration = this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0;\r\n    setTimeout(() => this.removeBackdrop(), duration);\r\n  }\r\n\r\n  _showModal(content: any): BsModalRef {\r\n    const modalLoader = this.loaders[this.loaders.length - 1];\r\n    const bsModalRef = new BsModalRef();\r\n    const modalContainerRef = modalLoader\r\n      .provide({ provide: ModalOptions, useValue: this.config })\r\n      .provide({ provide: BsModalRef, useValue: bsModalRef })\r\n      .attach(ModalContainerComponent)\r\n      .to('body')\r\n      .show({content, isAnimated: this.config.animated, initialState: this.config.initialState, bsModalService: this});\r\n    modalContainerRef.instance.level = this.getModalsCount();\r\n    bsModalRef.hide = () => {\r\n      modalContainerRef.instance.hide();\r\n    };\r\n    bsModalRef.content = modalLoader.getInnerComponent() || null;\r\n\r\n    return bsModalRef;\r\n  }\r\n\r\n  _hideModal(level: number): void {\r\n    const modalLoader = this.loaders[level - 1];\r\n    if (modalLoader) {\r\n      modalLoader.hide();\r\n    }\r\n  }\r\n\r\n  getModalsCount(): number {\r\n    return this.modalsCount;\r\n  }\r\n\r\n  setDismissReason(reason: string) {\r\n    this.lastDismissReason = reason;\r\n  }\r\n\r\n  removeBackdrop(): void {\r\n    this._backdropLoader.hide();\r\n    this.backdropRef = null;\r\n  }\r\n\r\n  /** AFTER PR MERGE MODAL.COMPONENT WILL BE USING THIS CODE */\r\n  /** Scroll bar tricks */\r\n  /** @internal */\r\n  checkScrollbar(): void {\r\n    this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\r\n    this.scrollbarWidth = this.getScrollbarWidth();\r\n  }\r\n\r\n  setScrollbar(): void {\r\n    if (!document) {\r\n      return;\r\n    }\r\n\r\n    this.originalBodyPadding = parseInt(\r\n      window\r\n        .getComputedStyle(document.body)\r\n        .getPropertyValue('padding-right') || '0',\r\n      10\r\n    );\r\n\r\n    if (this.isBodyOverflowing) {\r\n      document.body.style.paddingRight = `${this.originalBodyPadding +\r\n        this.scrollbarWidth}px`;\r\n    }\r\n  }\r\n\r\n  private resetScrollbar(): void {\r\n    document.body.style.paddingRight = `${this.originalBodyPadding}px`;\r\n  }\r\n\r\n  // thx d.walsh\r\n  private getScrollbarWidth(): number {\r\n    const scrollDiv = this._renderer.createElement('div');\r\n    this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\r\n    this._renderer.appendChild(document.body, scrollDiv);\r\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\r\n    this._renderer.removeChild(document.body, scrollDiv);\r\n\r\n    return scrollbarWidth;\r\n  }\r\n\r\n  private _createLoaders(): void {\r\n    const loader = this.clf.createLoader<ModalContainerComponent>(\r\n      null,\r\n      null,\r\n      null\r\n    );\r\n    this.copyEvent(loader.onBeforeShow, this.onShow);\r\n    this.copyEvent(loader.onShown, this.onShown);\r\n    this.copyEvent(loader.onBeforeHide, this.onHide);\r\n    this.copyEvent(loader.onHidden, this.onHidden);\r\n    this.loaders.push(loader);\r\n  }\r\n\r\n  private removeLoaders(level: number): void {\r\n    this.loaders.splice(level - 1, 1);\r\n    this.loaders.forEach(\r\n      (loader: ComponentLoader<ModalContainerComponent>, i: number) => {\r\n        loader.instance.level = i + 1;\r\n      }\r\n    );\r\n  }\r\n\r\n  private copyEvent(from: EventEmitter<any>, to: EventEmitter<any>) {\r\n    from.subscribe(() => {\r\n      to.emit(this.lastDismissReason);\r\n    });\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { ModalBackdropComponent } from './modal-backdrop.component';\r\nimport { ModalDirective } from './modal.directive';\r\nimport { PositioningService } from '../utils/positioning/index';\r\nimport { ComponentLoaderFactory } from '../utils/component-loader/index';\r\nimport { ModalContainerComponent } from './modal-container.component';\r\nimport { BsModalService } from './bs-modal.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ModalBackdropComponent,\r\n    ModalDirective,\r\n    ModalContainerComponent\r\n  ],\r\n  exports: [ModalBackdropComponent, ModalDirective],\r\n  entryComponents: [ModalBackdropComponent, ModalContainerComponent]\r\n})\r\nexport class ModalModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: ModalModule,\r\n      providers: [BsModalService, ComponentLoaderFactory, PositioningService]\r\n    };\r\n  }\r\n}\r\n","import {ElementRef, EventEmitter, Injectable, OnDestroy} from '@angular/core';\r\nimport {BsDropdownDirective} from '../dropdown/index';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {BsDropdownState} from '../dropdown/dropdown.state';\r\nimport {DropdownItemDirective} from '../dropdown/dropdown-item.directive';\r\n\r\n@Injectable()\r\nexport class NavbarState implements OnDestroy {\r\n  private dropdownInstances: BsDropdownDirective[] = [];\r\n  private menuItems: DropdownItemDirective[] = [];\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  private level1Dropdown: BsDropdownDirective; // å½åä¸æèåçä¸»èåï¼\r\n  private level2Dropdown: BsDropdownDirective; // å½åä¸æèåçå­èå\r\n\r\n  onItemClick = new EventEmitter<string>();\r\n\r\n  autoClose: boolean;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  addDropdown(dropdown: BsDropdownDirective): void {\r\n    if (!this.dropdownInstances.find((item) => item === dropdown)) {\r\n      this.dropdownInstances.push(dropdown);\r\n      this.subscribeDropdown(dropdown);\r\n      dropdown.onShown.subscribe(() => setTimeout(() => {\r\n        dropdown.childDropdowns.forEach((item: BsDropdownDirective) => this.addDropdown(item));\r\n      }));\r\n    }\r\n  }\r\n\r\n  addMenuItem(menuItem: DropdownItemDirective): void {\r\n    if (!this.menuItems.find((item) => item === menuItem)) {\r\n      this.menuItems.push(menuItem);\r\n      this.subscribeMenuItem(menuItem);\r\n    }\r\n  }\r\n\r\n  private subscribeDropdown(dropdown: BsDropdownDirective): void {\r\n    // å¨ä¸æèåæ¾ç¤ºãéèæ¶ï¼è®°å½ä¸æ¾ç¤ºç¶æã\r\n    // this.subscriptions.push(\r\n    //   dropdown.onShown.subscribe((value) => {\r\n    //     debugger;\r\n    //     if(dropdown.isSubMenu) {\r\n    //\r\n    //     }\r\n    //   })\r\n    // );\r\n    //\r\n    // this.subscriptions.push(\r\n    //   dropdown.onHidden.subscribe((value) => {\r\n    //\r\n    //   })\r\n    // );\r\n\r\n    this.subscriptions.push(\r\n      dropdown.state.onClick.subscribe((event: Event) => {\r\n        if (dropdown.level === 1) {\r\n          if (dropdown.isOpen && this.level1Dropdown === dropdown) {\r\n            this.innerHideL1Dropdown();\r\n          } else {\r\n            this.innerShowL1Dropdown(dropdown);\r\n          }\r\n        } else if (dropdown.level === 2) {\r\n          if (!dropdown.isOpen || this.level2Dropdown !== dropdown) {\r\n            this.innerShowL2Dropdown(dropdown);\r\n          }\r\n        }\r\n        event.stopPropagation();\r\n      })\r\n    );\r\n\r\n    this.subscriptions.push(\r\n      dropdown.state.onHover.subscribe(() => {\r\n        if (!this.level1Dropdown) {\r\n          // èåæ²¡å±å¼ï¼é¼ æ æ¬åæ²¡æææ\r\n          return;\r\n        }\r\n        this.show(dropdown);\r\n      })\r\n    );\r\n  }\r\n\r\n  private subscribeMenuItem(menuItem: DropdownItemDirective): void {\r\n    this.subscriptions.push(\r\n      menuItem.onHover.subscribe(() => {\r\n        if (!this.level1Dropdown) {\r\n          return;\r\n        }\r\n        if (this.level1Dropdown.containsItem(menuItem)) {\r\n          this.innerHideL2Dropdown();\r\n        }\r\n      })\r\n    );\r\n\r\n    this.subscriptions.push(\r\n      menuItem.onClick.subscribe((command: string) => {\r\n        this.onItemClick.emit(command);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\n  hideCurrentDropdown(): void {\r\n    if (this.level2Dropdown) {\r\n      this.innerHideL2Dropdown();\r\n    } else {\r\n      this.innerHideL1Dropdown();\r\n    }\r\n  }\r\n\r\n  hideAllDropdown(): void {\r\n    this.innerHideL2Dropdown();\r\n    this.innerHideL1Dropdown();\r\n  }\r\n\r\n  show(dropdown: BsDropdownDirective): void {\r\n    if (dropdown.level === 1) {\r\n      if (dropdown !== this.level1Dropdown) {\r\n        this.innerShowL1Dropdown(dropdown);\r\n      }\r\n      this.innerHideL2Dropdown();\r\n    } else if (dropdown.level === 2) {\r\n      if (dropdown !== this.level2Dropdown) {\r\n        this.innerShowL2Dropdown(dropdown);\r\n      }\r\n    }\r\n\r\n\r\n\r\n    ///////////////////////////////\r\n    /*if (this.isMenuShown && this.isSubMenuShown && this.parentDropdown && this.parentDropdown.containsItem(dropdown)) {\r\n      // è¦æ¾ç¤ºçæ¯å­èåï¼ä¸æ¯å½åå­èå\r\n      if (this.currentDropdown && this.currentDropdown !== dropdown) {\r\n        this.currentDropdown.hide();\r\n      }\r\n      dropdown.show();\r\n      this.currentDropdown = dropdown;\r\n      this.isSubMenuShown = true;\r\n    } else if (this.isMenuShown && !this.isSubMenuShown && this.currentDropdown && this.currentDropdown.containsItem(dropdown)) {\r\n\r\n    } else {\r\n      // ä¸»èå\r\n      if (this.isSubMenuShown && this.currentDropdown && this.parentDropdown) {\r\n        this.currentDropdown.hide();\r\n        this.currentDropdown = null;\r\n        this.isSubMenuShown = false;\r\n      }\r\n      if (this.isMenuShown && this.currentDropdown && this.currentDropdown !== dropdown) {\r\n        this.currentDropdown.hide();\r\n      }\r\n      dropdown.show();\r\n      this.currentDropdown = dropdown;\r\n      this.isMenuShown = true;\r\n    }*/\r\n  }\r\n\r\n  hide(dropdown: BsDropdownDirective): void {\r\n    // if\r\n  }\r\n\r\n  private innerShowL1Dropdown(target: BsDropdownDirective): void {\r\n    if (this.level1Dropdown) {\r\n      this.level1Dropdown.hide();\r\n    }\r\n    target.show();\r\n    this.level1Dropdown = target;\r\n  }\r\n\r\n  private innerHideL1Dropdown(): void {\r\n    if (this.level1Dropdown) {\r\n      this.level1Dropdown.hide();\r\n      this.level1Dropdown = null;\r\n    }\r\n  }\r\n\r\n  private innerShowL2Dropdown(target: BsDropdownDirective): void {\r\n    if (this.level2Dropdown) {\r\n      this.level2Dropdown.hide();\r\n    }\r\n    target.show();\r\n    this.level2Dropdown = target;\r\n  }\r\n\r\n  private innerHideL2Dropdown(): void {\r\n    if (this.level2Dropdown) {\r\n      this.level2Dropdown.hide();\r\n      this.level2Dropdown = null;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n/** Default dropdown configuration */\r\n@Injectable()\r\nexport class BsDropdownConfig {\r\n  /** default dropdown auto closing behavior */\r\n  autoClose = true;\r\n}\r\n","import {ElementRef, EventEmitter, Injectable} from '@angular/core';\r\nimport { BsComponentRef } from '../utils/component-loader/bs-component-ref.class';\r\n\r\n@Injectable()\r\nexport class BsDropdownState {\r\n  direction: 'down' | 'up' = 'down';\r\n  autoClose: boolean;\r\n  isOpenChange = new EventEmitter<boolean>();\r\n  isDisabledChange = new EventEmitter<boolean>();\r\n  toggleClick = new EventEmitter<boolean>();\r\n  onHover = new EventEmitter<any>();\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  /**\r\n   * Content to be displayed as popover.\r\n   */\r\n   dropdownMenu: Promise<BsComponentRef<any>>;\r\n   resolveDropdownMenu: (componentRef: BsComponentRef<any>) => void;\r\n\r\n   constructor() {\r\n     this.dropdownMenu = new Promise((resolve) => {\r\n       this.resolveDropdownMenu = resolve;\r\n     });\r\n   }\r\n }\r\n","import { window } from './facade/browser';\r\n\r\nexport function isBs3(): boolean {\r\n  return window.__theme === 'bs4';\r\n}\r\n","import {\r\n  ChangeDetectionStrategy, Component, OnDestroy, HostBinding, ChangeDetectorRef, Renderer2,\r\n  ElementRef\r\n} from '@angular/core';\r\nimport { BsDropdownState } from './dropdown.state';\r\nimport {isBs3} from '../utils/ng2-bootstrap-config';\r\n\r\n@Component({\r\n  selector: 'mdb-dropdown-container',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n  <div [class.dropup]=\"direction === 'up'\"\r\n  [class.dropdown]=\"direction === 'down'\"\r\n  [class.show]=\"isOpen\"\r\n  [class.open]=\"isOpen\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n  `\r\n})\r\nexport class BsDropdownContainerComponent implements OnDestroy {\r\n  isOpen = false;\r\n\r\n  @HostBinding('style.display') display = 'block';\r\n  @HostBinding('style.position') position = 'absolute';\r\n\r\n  get direction(): 'down' | 'up' {\r\n    return this._state.direction;\r\n  }\r\n\r\n  private _subscription: any;\r\n\r\n  constructor(\r\n    private _state: BsDropdownState,\r\n    private cd: ChangeDetectorRef,\r\n    private _renderer: Renderer2,\r\n    _element: ElementRef\r\n  ) {\r\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\r\n      this.isOpen = value;\r\n      const dropdown = _element.nativeElement.querySelector('.dropdown-menu');\r\n      if (dropdown && !isBs3()) {\r\n        this._renderer.addClass(dropdown, 'show');\r\n        if (dropdown.classList.contains('dropdown-menu-right')) {\r\n          this._renderer.setStyle(dropdown, 'left', 'auto');\r\n          this._renderer.setStyle(dropdown, 'right', '0');\r\n        }\r\n        if (this.direction === 'up') {\r\n          this._renderer.setStyle(dropdown, 'top', 'auto');\r\n          this._renderer.setStyle(\r\n            dropdown,\r\n            'transform',\r\n            'translateY(-101%)'\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._subscription.unsubscribe();\r\n  }\r\n}\r\n","import { AfterViewInit, ElementRef, Input, OnDestroy, Output, ViewChild, EventEmitter } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { pick } from 'lodash-es';\r\n\r\nimport { AngularMonacoEditorConfig } from './config';\r\nimport { CodeEditorEventService } from '../service/code-editor.event.service';\r\n\r\nlet loadedMonaco = false;\r\nlet loadPromise: Promise<void>;\r\n\r\nexport abstract class BaseMonacoEditor implements AfterViewInit, OnDestroy {\r\n\r\n  protected _editor: any;\r\n  private _options: any;\r\n  protected _windowResizeSubscription: Subscription;\r\n\r\n  @ViewChild('codeEditor') _editorComponent: ElementRef; // å¨ææ·»å ä»£ç ç¼è¾å¨\r\n\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() onInit;\r\n\r\n  @Input('options')\r\n  set options(options: any) {\r\n    // é»è®¤options(this.config.defaultOptions) + èªå®ä¹options(options)\r\n    this._options = Object.assign({}, this.config.defaultOptions, options);\r\n    if (this._editor) {\r\n      this._editor.dispose();\r\n      this.initMonaco(options);\r\n    }\r\n  }\r\n  get options(): any {\r\n    return this._options;\r\n  }\r\n\r\n  constructor(private codeEditorEventService: CodeEditorEventService, private config: AngularMonacoEditorConfig) {\r\n        // åå§åèªå®ä¹äºä»¶\r\n        const self = this;\r\n        codeEditorEventService.eventNames.forEach((name) => {\r\n          // åå»ºèªå®ä¹äºä»¶ï¼æ­¤å¤ä½ç¨ç­æäº: @Output() onInit = new EventEmitter<any>()\r\n          self[name] = new EventEmitter<any>();\r\n          const eventPair = pick(self, name);\r\n          codeEditorEventService.addEvent(eventPair);\r\n        });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (loadedMonaco) {\r\n      // Wait until monaco editor is available\r\n      loadPromise.then(() => {\r\n        this.initMonaco(this.options);\r\n      });\r\n    } else {\r\n      loadedMonaco = true;\r\n      loadPromise = new Promise<void>((resolve: any) => {\r\n        const baseUrl = this.config.baseUrl || '/assets';\r\n        // if (typeof((<any>window).monaco) === 'object') {\r\n        //   resolve();\r\n        //   return;\r\n        // }\r\n        const onGotAmdLoader: any = () => {\r\n          // Load monaco\r\n          (<any>window).require.config({ paths: { 'vs': `${baseUrl}/monaco/vs` } });\r\n          (<any>window).require(['vs/editor/editor.main'], () => {\r\n            if (typeof this.config.onMonacoLoad === 'function') {\r\n              this.config.onMonacoLoad();\r\n            }\r\n            this.initMonaco(this.options);\r\n            resolve();\r\n          });\r\n        };\r\n\r\n        // Load AMD loader if necessary\r\n        if (!(<any>window).require) {\r\n          const loaderScript: HTMLScriptElement = document.createElement('script');\r\n          loaderScript.type = 'text/javascript';\r\n          loaderScript.src = `${baseUrl}/monaco/vs/loader.js`;\r\n          loaderScript.addEventListener('load', onGotAmdLoader);\r\n          document.body.appendChild(loaderScript);\r\n        } else {\r\n          onGotAmdLoader();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Monaco Editor Initializer\r\n  protected abstract initMonaco(options: any): void ;\r\n\r\n  ngOnDestroy() {\r\n    if (this._windowResizeSubscription) {\r\n      this._windowResizeSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this._editor) {\r\n      this._editor.dispose();\r\n      this._editor = undefined;\r\n    }\r\n  }\r\n}\r\n","// tslint:disable:max-file-line-count\r\nimport {\r\n  ContentChildren,\r\n  Directive, ElementRef, EmbeddedViewRef, EventEmitter, Input, OnDestroy,\r\n  OnInit, Output, Renderer2, ViewContainerRef\r\n} from '@angular/core';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { ComponentLoader, ComponentLoaderFactory } from '../utils/component-loader/index';\r\n\r\nimport { BsDropdownConfig } from './dropdown.config';\r\nimport { BsDropdownContainerComponent } from './dropdown-container.component';\r\nimport { BsDropdownState } from './dropdown.state';\r\nimport { BsComponentRef } from '../utils/component-loader/bs-component-ref.class';\r\nimport { BsDropdownMenuDirective } from '.';\r\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\r\nimport {DropdownItemDirective} from './dropdown-item.directive';\r\n\r\n@Directive({\r\n  selector: '[mdbDropdown],[dropdown]',\r\n  exportAs: 'bs-dropdown',\r\n  providers: [BsDropdownState],\r\n  host: {\r\n    '[class.dropup]': 'dropup',\r\n    '[class.open]': 'isOpen',\r\n    '[class.show]': 'isOpen && isBs4'\r\n  }\r\n})\r\nexport class BsDropdownDirective implements OnInit, OnDestroy {\r\n  /**\r\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n   */\r\n  @Input() placement: string;\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n  @Input() triggers: string;\r\n  /**\r\n   * A selector specifying the element the popover should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n  @Input() container: string;\r\n\r\n  /**\r\n   * This attribute indicates that the dropdown should be opened upwards\r\n   */\r\n  @Input() dropup: boolean;\r\n\r\n  /**\r\n   * Indicates that dropdown will be closed on item or document click,\r\n   * and after pressing ESC\r\n   */\r\n  @Input()\r\n  set autoClose(value: boolean) {\r\n    this._state.autoClose = value;\r\n  }\r\n\r\n  get autoClose(): boolean {\r\n    return this._state.autoClose;\r\n  }\r\n\r\n  /**\r\n   * Disables dropdown toggle and hides dropdown menu if opened\r\n   */\r\n  @Input()\r\n  set isDisabled(value: boolean) {\r\n    this._isDisabled = value;\r\n    this._state.isDisabledChange.emit(value);\r\n    if (value) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  get isDisabled(): boolean {\r\n    return this._isDisabled;\r\n  }\r\n\r\n  /**\r\n   * Returns whether or not the popover is currently being shown\r\n   */\r\n  @Input()\r\n  get isOpen(): boolean {\r\n    if (this._showInline) {\r\n      return this._isInlineOpen;\r\n    }\r\n\r\n    return this._dropdown.isShown;\r\n  }\r\n\r\n  set isOpen(value: boolean) {\r\n    if (value) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  get state(): BsDropdownState {\r\n    return this._state;\r\n  }\r\n\r\n  private _level: number;\r\n\r\n  @Input('dropdown')\r\n  set level(value: number) {\r\n    this._level = value;\r\n  }\r\n\r\n  get level(): number {\r\n    return this._level || 1;\r\n  }\r\n\r\n  get elementRef(): ElementRef {\r\n    return this._elementRef;\r\n  }\r\n\r\n  /**\r\n   * Emits an event when isOpen change\r\n   */\r\n  @Output() isOpenChange: EventEmitter<any>;\r\n\r\n  /**\r\n   * Emits an event when the popover is shown\r\n   */\r\n  @Output() onShown: EventEmitter<any>;\r\n\r\n  /**\r\n   * Emits an event when the popover is hidden\r\n   */\r\n  @Output() onHidden: EventEmitter<any>;\r\n\r\n  @ContentChildren(BsDropdownDirective) childDropdowns;\r\n\r\n  get isBs4(): boolean {\r\n    return !isBs3();\r\n  }\r\n\r\n  // todo: move to component loader\r\n  private _isInlineOpen = false;\r\n\r\n  private get _showInline(): boolean {\r\n    return !this.container;\r\n  }\r\n\r\n  // private _inlinedMenu: EmbeddedViewRef<BsDropdownMenuDirective>;\r\n  private _inlinedMenu: EmbeddedViewRef<BsDropdownContainerComponent>;\r\n\r\n  private _isDisabled: boolean;\r\n  private _dropdown: ComponentLoader<BsDropdownContainerComponent>;\r\n  private _subscriptions: Subscription[] = [];\r\n  private _isInited = false;\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              private _renderer: Renderer2,\r\n              private _viewContainerRef: ViewContainerRef,\r\n              private _cis: ComponentLoaderFactory,\r\n              private _config: BsDropdownConfig,\r\n              private _state: BsDropdownState) {\r\n\r\n    // set initial dropdown state from config\r\n    this._state.autoClose = this._config.autoClose;\r\n\r\n    // create dropdown component loader\r\n    this._dropdown = this._cis\r\n      .createLoader<BsDropdownContainerComponent>(\r\n        this._elementRef,\r\n        this._viewContainerRef,\r\n        this._renderer\r\n      )\r\n      .provide({provide: BsDropdownState, useValue: this._state});\r\n\r\n    this.onShown = this._dropdown.onShown;\r\n    this.onHidden = this._dropdown.onHidden;\r\n    this.isOpenChange = this._state.isOpenChange;\r\n    // this.onToggleHover = this._state.onHover;\r\n    // barState.addDropdown(this);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // fix: seems there are an issue with `routerLinkActive`\r\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\r\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\r\n    if (this._isInited) {\r\n      return;\r\n    }\r\n    this._isInited = true;\r\n\r\n    // attach DOM listeners\r\n    this._dropdown.listen({\r\n      // because of dropdown inline mode\r\n      outsideClick: false,\r\n      triggers: this.triggers,\r\n      show: () => this.show(), toggle: (value: boolean) => this.toggle(value)\r\n    });\r\n\r\n    // toggle visibility on toggle element click\r\n    this._subscriptions.push(\r\n      this._state.toggleClick.subscribe((value: boolean) => this.toggle(value))\r\n    );\r\n\r\n    // hide dropdown if set disabled while opened\r\n    this._subscriptions.push(\r\n      this._state.isDisabledChange.pipe(\r\n        filter((value: boolean) => value)\r\n      )\r\n      .subscribe((value: boolean) => this.hide())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Opens an elementâs popover. This is considered a âmanualâ triggering of\r\n   * the popover.\r\n   */\r\n  show(): void {\r\n    if (this.isOpen || this.isDisabled) {\r\n      return;\r\n    }\r\n\r\n    if (this._showInline) {\r\n      if (!this._inlinedMenu) {\r\n        this._state.dropdownMenu.then(\r\n          (dropdownMenu: BsComponentRef<BsDropdownMenuDirective>) => {\r\n            const _placement = this.placement || 'bottom left';\r\n            this._dropdown.attachInline(\r\n              dropdownMenu.viewContainer,\r\n              dropdownMenu.templateRef\r\n            );\r\n            this._inlinedMenu = this._dropdown._inlineViewRef;\r\n            this.addBs4Polyfills();\r\n          }\r\n        )\r\n        // swallow errors\r\n          .catch();\r\n      }\r\n      this.addBs4Polyfills();\r\n      this._isInlineOpen = true;\r\n      this.onShown.emit(true);\r\n      this._state.isOpenChange.emit(true);\r\n\r\n      return;\r\n    }\r\n    this._state.dropdownMenu.then(dropdownMenu => {\r\n      // check direction in which dropdown should be opened\r\n      const _dropup =\r\n        this.dropup ||\r\n        (typeof this.dropup !== 'undefined' && this.dropup);\r\n      this._state.direction = _dropup ? 'up' : 'down';\r\n      const _placement =\r\n        this.placement || (_dropup ? 'top left' : 'bottom left');\r\n\r\n      // show dropdown\r\n      this._dropdown\r\n        .attach(BsDropdownContainerComponent)\r\n        .to(this.container)\r\n        .position({attachment: _placement})\r\n        .show({\r\n          content: dropdownMenu.templateRef,\r\n          placement: _placement\r\n        });\r\n\r\n      this._state.isOpenChange.emit(true);\r\n    })\r\n    // swallow error\r\n      .catch();\r\n  }\r\n\r\n  /**\r\n   * Closes an elementâs popover. This is considered a âmanualâ triggering of\r\n   * the popover.\r\n   */\r\n  hide(): void {\r\n    if (!this.isOpen) {\r\n      return;\r\n    }\r\n\r\n    if (this._showInline) {\r\n      this.removeShowClass();\r\n      this.removeDropupStyles();\r\n      this._isInlineOpen = false;\r\n      this.onHidden.emit(true);\r\n    } else {\r\n      this._dropdown.hide();\r\n    }\r\n\r\n    this._state.isOpenChange.emit(false);\r\n  }\r\n\r\n  /**\r\n   * Toggles an elementâs popover. This is considered a âmanualâ triggering of\r\n   * the popover. With parameter <code>true</code> allows toggling, with parameter <code>false</code>\r\n   * only hides opened dropdown. Parameter usage will be removed in ngx-bootstrap v3\r\n   */\r\n  toggle(value?: boolean): void {\r\n    if (this.isOpen || !value) {\r\n      return this.hide();\r\n    }\r\n\r\n    return this.show();\r\n  }\r\n\r\n  containsItem(item: BsDropdownDirective | DropdownItemDirective): boolean {\r\n    return this._elementRef.nativeElement.contains(item.elementRef.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // clean up subscriptions and destroy dropdown\r\n    for (const sub of this._subscriptions) {\r\n      sub.unsubscribe();\r\n    }\r\n    this._dropdown.dispose();\r\n  }\r\n\r\n  private addBs4Polyfills(): void {\r\n    if (!isBs3()) {\r\n      this.addShowClass();\r\n      this.checkRightAlignment();\r\n      this.addDropupStyles();\r\n    }\r\n  }\r\n\r\n  private addShowClass(): void {\r\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\r\n      this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\r\n    }\r\n  }\r\n\r\n  private removeShowClass(): void {\r\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\r\n      this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\r\n    }\r\n  }\r\n\r\n  private checkRightAlignment(): void {\r\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\r\n      const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains(\r\n        'dropdown-menu-right'\r\n      );\r\n      this._renderer.setStyle(\r\n        this._inlinedMenu.rootNodes[0],\r\n        'left',\r\n        isRightAligned ? 'auto' : '0'\r\n      );\r\n      this._renderer.setStyle(\r\n        this._inlinedMenu.rootNodes[0],\r\n        'right',\r\n        isRightAligned ? '0' : 'auto'\r\n      );\r\n    }\r\n  }\r\n\r\n  private addDropupStyles(): void {\r\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\r\n      // a little hack to not break support of bootstrap 4 beta\r\n      this._renderer.setStyle(\r\n        this._inlinedMenu.rootNodes[0],\r\n        'top',\r\n        this.dropup ? 'auto' : '100%'\r\n      );\r\n      this._renderer.setStyle(\r\n        this._inlinedMenu.rootNodes[0],\r\n        'transform',\r\n        this.dropup ? 'translateY(-101%)' : 'translateY(0)'\r\n      );\r\n    }\r\n  }\r\n\r\n  private removeDropupStyles(): void {\r\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\r\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'top');\r\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'transform');\r\n    }\r\n  }\r\n}\r\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { BsDropdownState } from './dropdown.state';\r\n\r\n@Directive({\r\n  selector: '[mdbDropdownMenu],[dropdownMenu]',\r\n  exportAs: 'bs-dropdown-menu'\r\n})\r\nexport class BsDropdownMenuDirective {\r\n  constructor(_state: BsDropdownState,\r\n    _viewContainer: ViewContainerRef,\r\n    _templateRef: TemplateRef<any>) {\r\n    _state.resolveDropdownMenu({\r\n      templateRef: _templateRef,\r\n      viewContainer: _viewContainer\r\n    });\r\n  }\r\n}\r\n","import {Directive, ElementRef, HostBinding, HostListener, OnDestroy} from '@angular/core';\r\nimport {Subscription} from 'rxjs/Subscription';\r\n\r\nimport {BsDropdownState} from './dropdown.state';\r\n\r\n@Directive({\r\n  selector: '[mdbDropdownToggle],[dropdownToggle]',\r\n  exportAs: 'bs-dropdown-toggle'\r\n})\r\nexport class BsDropdownToggleDirective implements OnDestroy {\r\n  @HostBinding('attr.aria-haspopup') ariaHaspopup = true;\r\n  @HostBinding('attr.disabled') isDisabled: boolean = null;\r\n  // @HostBinding('class.active')\r\n  @HostBinding('attr.aria-expanded') isOpen: boolean;\r\n\r\n  private _subscriptions: Subscription[] = [];\r\n\r\n  constructor(private _state: BsDropdownState, private _element: ElementRef) {\r\n    // sync is open value with state\r\n    this._subscriptions.push(\r\n      this._state.isOpenChange.subscribe(\r\n        (value: boolean) => (this.isOpen = value)\r\n      )\r\n    );\r\n    // populate disabled state\r\n    this._subscriptions.push(\r\n      this._state.isDisabledChange.subscribe(\r\n        (value: boolean) => (this.isDisabled = value || null)\r\n      )\r\n    );\r\n  }\r\n\r\n  @HostListener('click', [])\r\n  onClick(): void {\r\n    if (this.isDisabled) {\r\n      return;\r\n    }\r\n    this._state.toggleClick.emit(true);\r\n  }\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  onDocumentClick(event: any): void {\r\n    if (\r\n      this._state.autoClose &&\r\n      event.button !== 2 &&\r\n      !this._element.nativeElement.contains(event.target)\r\n    ) {\r\n      this._state.toggleClick.emit(false);\r\n    }\r\n  }\r\n\r\n  @HostListener('keyup.esc')\r\n  onEsc(): void {\r\n    if (this._state.autoClose) {\r\n      this._state.toggleClick.emit(false);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const sub of this._subscriptions) {\r\n      sub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import {Directive, ElementRef, HostBinding, HostListener, Input, OnDestroy} from '@angular/core';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {BsDropdownState} from './dropdown.state';\r\n\r\n@Directive({\r\n  selector: '[dropdownButton]'\r\n})\r\nexport class DropdownButtonDirective implements OnDestroy {\r\n\r\n  private _subscriptions: Subscription[] = [];\r\n\r\n  @HostBinding('class.disabled') @Input() isDisabled: boolean = null;\r\n  @HostBinding('attr.aria-expanded') isOpen: boolean;\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: Event): void {\r\n    if (this.isDisabled) {\r\n      return;\r\n    }\r\n    this._state.onClick.emit(event);\r\n  }\r\n\r\n  @HostListener('mouseover')\r\n  onHover(): void {\r\n    if (this.isDisabled) {\r\n      return;\r\n    }\r\n    this._state.onHover.emit();\r\n  }\r\n\r\n  constructor(private _state: BsDropdownState,\r\n              private _element: ElementRef) {\r\n    // åæ­¥èåçæå¼ç¶æ\r\n    this._subscriptions.push(this._state.isOpenChange\r\n      .subscribe((value: boolean) => this.isOpen = value)\r\n    );\r\n    // åæ­¥èåçç¦ç¨ç¶æ\r\n    this._subscriptions.push(this._state.isDisabledChange\r\n      .subscribe((value: boolean) => this.isDisabled = value || null)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    for (const sub of this._subscriptions) {\r\n      sub.unsubscribe();\r\n    }\r\n  }\r\n\r\n}\r\n","import {Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input} from '@angular/core';\r\nimport {NavbarState} from '../navbar/navbar.state';\r\n\r\n@Directive({\r\n  selector: '[dropdownItem]',\r\n  exportAs: 'dropdownItem'\r\n})\r\nexport class DropdownItemDirective {\r\n\r\n  @HostBinding('class.disabled') @Input() isDisabled: boolean = null;\r\n\r\n  @Input('dropdownItem') command;\r\n\r\n  get elementRef(): ElementRef {\r\n    return this._elementRef;\r\n  }\r\n\r\n\r\n  onHover = new EventEmitter<any>();\r\n  onClick = new EventEmitter<string>();\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              private barState: NavbarState) {\r\n    this.barState.addMenuItem(this);\r\n  }\r\n\r\n  @HostListener('mouseover')\r\n  onMouseOver(): void {\r\n    this.onHover.emit();\r\n  }\r\n\r\n  @HostListener('click')\r\n  onItemClick(): void {\r\n    if (this.isDisabled) {\r\n      return;\r\n    }\r\n    this.onClick.emit(this.command);\r\n  }\r\n}\r\n","import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {ComponentLoaderFactory} from '../utils/component-loader/index';\r\n\r\nimport {PositioningService} from '../utils/positioning/index';\r\nimport {BsDropdownContainerComponent} from './dropdown-container.component';\r\nimport {BsDropdownMenuDirective} from './dropdown-menu.directive';\r\nimport {BsDropdownToggleDirective} from './dropdown-toggle.directive';\r\nimport {BsDropdownConfig} from './dropdown.config';\r\n\r\nimport {BsDropdownDirective} from './dropdown.directive';\r\nimport {BsDropdownState} from './dropdown.state';\r\nimport {NavbarState} from '../navbar/navbar.state';\r\nimport { DropdownButtonDirective } from './dropdown-button.directive';\r\nimport { DropdownItemDirective } from './dropdown-item.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BsDropdownMenuDirective,\r\n    BsDropdownToggleDirective,\r\n    BsDropdownContainerComponent,\r\n    BsDropdownDirective,\r\n    DropdownButtonDirective,\r\n    DropdownItemDirective\r\n  ],\r\n  exports: [\r\n    BsDropdownMenuDirective,\r\n    BsDropdownToggleDirective,\r\n    BsDropdownDirective,\r\n    DropdownButtonDirective,\r\n    DropdownItemDirective\r\n  ],\r\n  entryComponents: [BsDropdownContainerComponent]\r\n})\r\nexport class BsDropdownModule {\r\n  public static forRoot(config?: any): ModuleWithProviders {\r\n    return {\r\n      ngModule: BsDropdownModule, providers: [\r\n        ComponentLoaderFactory,\r\n        PositioningService,\r\n        BsDropdownState,\r\n        {provide: BsDropdownConfig, useValue: config ? config : {autoClose: true}}\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import {\r\n  AfterContentChecked,\r\n  AfterViewChecked, AfterViewInit,\r\n  ContentChildren,\r\n  Directive,\r\n  EventEmitter,\r\n  HostListener, OnChanges,\r\n  OnInit,\r\n  QueryList, ViewChildren\r\n} from '@angular/core';\r\nimport {NavbarState} from './navbar.state';\r\nimport {ElementRef} from '@angular/core';\r\nimport {BsDropdownConfig} from '../dropdown/dropdown.config';\r\nimport {BsDropdownDirective} from '../dropdown/index';\r\n\r\n@Directive({\r\n  selector: '[navbar]',\r\n  exportAs: 'navbar',\r\n  providers: [NavbarState]\r\n})\r\nexport class NavbarDirective implements OnInit, AfterViewInit {\r\n\r\n  onItemClick: EventEmitter<string>;\r\n\r\n  @ContentChildren(BsDropdownDirective) childDropdowns: QueryList<BsDropdownDirective>;\r\n  @ViewChildren(BsDropdownDirective) childDropdowns2: QueryList<BsDropdownDirective>;\r\n  @HostListener('document:click', ['$event'])\r\n  onDocumentClick(event: any): void {\r\n    this._state.hideAllDropdown();\r\n  }\r\n\r\n  @HostListener('keyup.esc')\r\n  onEsc(): void {\r\n    if (this._state.autoClose) {\r\n      this._state.hideCurrentDropdown();\r\n    }\r\n  }\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              private _config: BsDropdownConfig,\r\n              private _state: NavbarState) {\r\n    this._state.autoClose = this._config.autoClose;\r\n    this.onItemClick = this._state.onItemClick;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.childDropdowns.forEach((item: BsDropdownDirective) => this._state.addDropdown(item));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NavbarDirective } from './navbar.directive';\r\nimport { NavbarState } from './navbar.state';\r\n\r\n@NgModule({\r\n  declarations: [NavbarDirective],\r\n  providers: [NavbarState],\r\n  exports: [NavbarDirective]\r\n})\r\nexport class NavbarModule { }\r\n","export const TREE_EVENTS = {\r\n    onToggle: 'onToggle',\r\n    onActiveChanged: 'onActiveChanged',\r\n    onActivate: 'onActivate',\r\n    onDeactivate: 'onDeactivate',\r\n    onFocus: 'onFocus',\r\n    onBlur: 'onBlur',\r\n    onDoubleClick: 'onDoubleClick',\r\n    onContextMenu: 'onContextMenu',\r\n    onInitialized: 'onInitialized',\r\n    onUpdateData: 'onUpdateData',\r\n    onMoveNode: 'onMoveNode',\r\n    onAddNode: 'onAddNode',\r\n    onRemoveNode: 'onRemoveNode',\r\n    onRightMenuClicked: 'onRightMenuClicked'\r\n}","import { ElementRef, EventEmitter } from '@angular/core';\r\nimport { TreeModel } from './tree-model';\r\nimport { TREE_EVENTS } from '../constants/events';\r\nimport { TreeOptions } from './tree-options';\r\n\r\nexport class TreeNode {\r\n    private _isExpanded: boolean;\r\n    get isExpanded() {return this._isExpanded; }\r\n    set isExpanded(value) {this._isExpanded = value; }\r\n    get isCollapsed() {return !this._isExpanded; }\r\n\r\n    treeModel: TreeModel;\r\n    parent: TreeNode;\r\n    level: number;\r\n    isVirtualRoot = false;\r\n    elementRef: ElementRef;\r\n    parentNode: TreeNode;\r\n\r\n    _isActive = false;\r\n    get isActive() {\r\n        return this._isActive;\r\n    }\r\n    set isActive(value) {\r\n        this._isActive = value;\r\n    }\r\n\r\n    // åæ´æ èç¹å±ç¤ºå­æ®µï¼ç±å¤é¨è§¦å\r\n    changeDisplayField = new EventEmitter<any>();\r\n\r\n    constructor(public data, parent: TreeNode = null, treeModel: TreeModel) {\r\n\r\n        Object.assign( this, data, {parent, treeModel} );\r\n\r\n        this.treeModel = treeModel;\r\n        this.parent = parent;\r\n        this.level = this.parent ? this.parent.level + 1 : 0;\r\n        if (this.isExpandedField) {\r\n            this.isExpanded = true;\r\n        }\r\n\r\n        // éªè¯å­æ®µæ·»å \r\n        // console.log(this.idField);\r\n        // console.log(this.typeField);\r\n\r\n        this.childrenField = this.childrenField.map(child => new TreeNode(child, this, treeModel) );\r\n\r\n        // bugä¿®å¤ï¼TreeModel.canMoveNodeä½¿ç¨parentNodeï¼ä¼åºç°undefinedãè¿éåå¼å®¹\r\n        this.parentNode = this.parent;\r\n    }\r\n\r\n    // Proxy of treeModel\r\n    get options(): TreeOptions {\r\n        return this.treeModel.options;\r\n    }\r\n    fireEvent(event) {\r\n        this.treeModel.fireEvent(event);\r\n    }\r\n\r\n    // è¡¨ç°çæ´åä¸ä¸ªå­æ®µï¼å°å¶å°è£æå±æ§ï¼å¹¶æ ¹æ®å¼æ¾çè¯»åæéï¼è®¾ç½®get/set\r\n    get idField() {\r\n        return this[this.options.idField];\r\n    }\r\n\r\n    set idField(value) {\r\n        this[this.options.idField] = value;\r\n    }\r\n\r\n    get childrenField() {\r\n        return this[this.options.childrenField] || [];\r\n    }\r\n\r\n    set childrenField(value) {\r\n        this[this.options.childrenField] = value;\r\n    }\r\n\r\n    get displayField() {\r\n        return this[this.options.displayField];\r\n    }\r\n\r\n    get typeField() {\r\n        return this[this.options.typeField];\r\n    }\r\n\r\n    set typeField(value) {\r\n        this[this.options.typeField] = value;\r\n    }\r\n\r\n    get isExpandedField() {\r\n        return this[this.options.isExpandedField];\r\n    }\r\n    set isExpandedField(value) {\r\n        this[this.options.isExpandedField] = value;\r\n    }\r\n\r\n    allowDrag() {// è¡¨ç°çæ´åä¸ä¸ªå¨ä½ï¼å°å¶å°è£ææ¹æ³\r\n        return this.options.allowDrag;\r\n    }\r\n\r\n    enableCustomContextMenu() {\r\n        return this.options.enableCustomContextMenu;\r\n    }\r\n\r\n    get isRoot() { return this.parent.isVirtualRoot; }// ç¶èç¹ä¸ºç©ºï¼è¡¨ç¤ºè¿ä¸ªä¸ä¸ªæ ¹èç¹\r\n    get realParent() { return this.isRoot ? null : this.parent; }\r\n    get isLeaf() { return !this.childrenField.length; }\r\n    get hasChildren() { return !this.isLeaf; }\r\n    get isFocused() {return this.treeModel.focusedNode == this; }\r\n\r\n    getFirstChild() {\r\n        return this.childrenField && this.childrenField[0];\r\n    }\r\n\r\n    getLastChild() {\r\n        return this.childrenField && this.childrenField[this.childrenField.length - 1];\r\n    }\r\n\r\n    private _getIndexInParent() {\r\n        return this.parent && this.parent.childrenField.indexOf(this);\r\n    }\r\n\r\n    findAdjacentSibling(steps) {\r\n        const index = this._getIndexInParent();\r\n        return this.parent && this.parent.childrenField[index + steps];\r\n    }\r\n\r\n    findNextSibling() {\r\n        return this.findAdjacentSibling(+1);\r\n    }\r\n    findPreviousSibling() {\r\n        return this.findAdjacentSibling(-1);\r\n    }\r\n\r\n    findNextNode(goInside = true) {// æ¥æ¾Next Nodeæ¶ï¼é»è®¤è¿è¡åé¨æ¥æ¾\r\n        return goInside && this.isExpanded && this.getFirstChild() ||\r\n               this.findNextSibling() ||\r\n               this.parent && this.parent.findNextNode(false);\r\n    }\r\n\r\n    findPreviousNode() {\r\n        const previousSibling = this.findPreviousSibling();\r\n        if (!previousSibling) {\r\n          return this.realParent;\r\n        }\r\n        return previousSibling.isCollapsed\r\n          ? previousSibling\r\n          : previousSibling.getLastChild();\r\n    }\r\n\r\n    isDescendantOf(node: TreeNode) {\r\n        if (this === node) {\r\n            return true;\r\n        } else {\r\n            return this.parent && this.parent.isDescendantOf(node);\r\n        }\r\n    }\r\n\r\n    // åæ¢æ¹æ³\r\n    // åæ¢èç¹çæå ï¼Collapsedï¼ä¸æ©å±ï¼Expandedï¼ç¶æ\r\n    toggle() {\r\n        this.isExpanded = !this.isExpanded;\r\n        this.fireEvent({ eventName: TREE_EVENTS.onToggle, node: this, isExpanded: this.isExpanded });\r\n    }\r\n\r\n    private _activate() {\r\n        this._isActive = true;\r\n        this.fireEvent({ eventName: TREE_EVENTS.onActivate, node: this });\r\n        this.focus();\r\n    }\r\n\r\n    private _deactivate() {\r\n        this._isActive = false;\r\n        this.fireEvent({ eventName: TREE_EVENTS.onDeactivate, node: this });\r\n    }\r\n\r\n    toggleActivated() {\r\n        if (this.isActive) {\r\n            this._deactivate();\r\n            this.treeModel.activeNode = null;\r\n        } else {\r\n            if (this.treeModel.activeNode) {\r\n            this.treeModel.activeNode._deactivate();\r\n            }\r\n            this._activate();\r\n            this.treeModel.activeNode = this;\r\n        }\r\n        this.fireEvent({ eventName: TREE_EVENTS.onActiveChanged, node: this, isActive: this.isActive });\r\n    }\r\n\r\n    focus() {\r\n        const previousNode = this.treeModel.focusedNode;\r\n        this.treeModel.focusedNode = this;\r\n        if (previousNode) {\r\n            this.fireEvent({ eventName: TREE_EVENTS.onBlur, node: previousNode });\r\n        }\r\n        this.fireEvent({ eventName: TREE_EVENTS.onFocus, node: this });\r\n    }\r\n\r\n    blur() {\r\n        const previousNode = this.treeModel.focusedNode;\r\n        this.treeModel.focusedNode = null;\r\n        if (previousNode) {\r\n            this.fireEvent({ eventName: TREE_EVENTS.onBlur, node: this });\r\n        }\r\n    }\r\n\r\n    // åå»äºä»¶\r\n    doublClick(rawEvent: MouseEvent) {\r\n        this.fireEvent({ eventName: TREE_EVENTS.onDoubleClick, node: this, rawEvent });\r\n    }\r\n\r\n    // å³é®å¿«æ·èå\r\n    contextMenu(rawEvent: MouseEvent) {\r\n        if (this.enableCustomContextMenu()) {// å¯ç¨å³é®èååè½åï¼ç¦ç¨é»è®¤çå³é®èå\r\n            rawEvent.preventDefault();\r\n        }\r\n\r\n        this.fireEvent({ eventName: TREE_EVENTS.onContextMenu, node: this, rawEvent });\r\n    }\r\n\r\n    dropMouseAction($event, data: any = null) {\r\n        // 1.è®¾ç½®focus\r\n        this.treeModel.setFocus(true);\r\n        // 2.æ§è¡äºä»¶å¤çå¨\r\n        this._dropEventHandler(this.treeModel, this, $event, data);\r\n        // 3.å®ædropæä½åï¼éç½®dragç¶æ\r\n        this.treeModel.cancelDrag();\r\n    }\r\n\r\n    private _dropEventHandler(tree: TreeModel, node: TreeNode, $event: any ,\r\n                              to: { parentNode: TreeNode, index: number}) {\r\n        tree.moveNode({ from: tree.getDragNode(), to });\r\n        // console.log(\"dropEventHandler:\"+tree.roots);\r\n    }\r\n\r\n    // ç¹å»å³é®èåé¡¹\r\n    rightMenuClicked( event ) {\r\n        this.fireEvent({ eventName: TREE_EVENTS.onRightMenuClicked, node: this, rawEvent: event });\r\n    }\r\n}\r\n","import { ITreeOptions } from '../defs/api';\r\n\r\nexport class TreeOptions {\r\n  // å­æ®µä¸åºç´æ¥æ´é²\r\n  get idField(): string { return this.options.childrenField || 'id'}\r\n  get displayField(): string { return this.options.displayField || 'name'}\r\n  get typeField():string {return this.options.typeField || 'type'}\r\n  get childrenField(): string { return this.options.childrenField || 'children'}\r\n  get isExpandedField(): string { return this.options.isExpandedField || 'isExpanded'}\r\n  get treeNodeTemplate(): any { return this.options.treeNodeTemplate || '{{ node.displayField }}' }//æå¼è¡¨è¾¾å¼\r\n  get allowDrag(): boolean { return this.options.allowDrag }//æ¯å¦å¯ç¨ææ½åè½\r\n  get enableCustomContextMenu(): boolean{ return this.options.enableCustomContextMenu }//æ¯å¦å¯ç¨å¿«æ·èå\r\n\r\n  constructor(private options: ITreeOptions = {}) {//optionæ¯ä¸ä¸ªå¯¹è±¡\r\n    // nothing need to do\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { TreeNode } from './tree-node';\r\nimport { TreeOptions } from './tree-options';\r\nimport { TREE_EVENTS } from '../constants/events';\r\nimport { first, last, indexOf, findIndex, sortBy } from 'lodash-es';\r\n\r\n@Injectable()\r\nexport class TreeModel {\r\n    roots: TreeNode[];\r\n    options: TreeOptions = new TreeOptions();\r\n    static focusedTree = null;\r\n    // focused Node may be not actived \r\n    // actived Node must be focused\r\n    focusedNode: TreeNode = null;// be chosen node\r\n    activeNode: TreeNode = null;// be chosen and actived node\r\n    private events:any;\r\n    eventNames = Object.keys(TREE_EVENTS);\r\n\r\n    firstUpdate = true;\r\n    _dragNode: { parentNode: TreeNode, index: number } = null;\r\n    _dropLocation:{ component: any, parentNode: TreeNode, index: number } = null;\r\n\r\n    setData({nodes, options, events}){\r\n\r\n        this.options = new TreeOptions(options);\r\n        this.events = events;\r\n\r\n        this.update(nodes);\r\n    }\r\n\r\n    virtualRoot: TreeNode;\r\n    update(nodes){\r\n        // Update the tree:\r\n\r\n        this.virtualRoot = new TreeNode({ isVirtualRoot: true }, null,this);\r\n\r\n        this.roots = nodes && nodes.map(child => new TreeNode(child, this.virtualRoot, this));\r\n\r\n        this.virtualRoot[this.options.childrenField] = this.roots;\r\n  \r\n        this._loadTreeNodeContentComponent();\r\n    \r\n        // Fire event:\r\n        if (this.firstUpdate) {\r\n            if (this.roots) {\r\n                this.fireEvent({ eventName: TREE_EVENTS.onInitialized });\r\n                this.firstUpdate = false;\r\n            }\r\n        } else {\r\n            this.fireEvent({ eventName: TREE_EVENTS.onUpdateData });\r\n        }\r\n    }\r\n\r\n    //Used for code test\r\n    addStaticTreeNode(){\r\n        this.createAndAddTreeNode({        \r\n            id: 1,\r\n            name: 'root1',\r\n            subTitle: 'the root',\r\n            type: 'type1'\r\n        },this.focusedNode);\r\n    }\r\n\r\n    createAndAddTreeNode(data, parentNode: TreeNode, index?){\r\n        const createdNode = this.createTreeNode(data, parentNode);\r\n        this.addTreeNode(createdNode, parentNode, index);\r\n    }\r\n\r\n    createTreeNode(data, parent: TreeNode): TreeNode{\r\n        let createdNode =  new TreeNode(data, parent, this);\r\n        return createdNode;\r\n    }\r\n    \r\n    addTreeNode(addedNode: TreeNode, parentNode: TreeNode, index?){\r\n        if (addedNode == null) {\r\n            return;\r\n        }\r\n\r\n        if (parentNode == null) {// å¢å é¡¶çº§æ èç¹ï¼æ²¡æç¶èç¹çæ èç¹ï¼\r\n            this.roots.push(addedNode);\r\n        } else {\r\n            if (index === null || index === undefined) {\r\n                parentNode.childrenField.push(addedNode);\r\n            } else {\r\n                parentNode.childrenField.splice(index, 0, addedNode);\r\n            }\r\n        }\r\n\r\n        this.update(this.roots);\r\n\r\n        this.fireEvent({ eventName: TREE_EVENTS.onAddNode, addedNode, parentNode});\r\n    }\r\n\r\n    removeFocusedTreeNode(){\r\n        this.removeTreeNode(this.focusedNode);\r\n    }\r\n    \r\n    //ç§»é¤éä¸­çå·²ç¥èç¹\r\n    removeTreeNode(selectedTreeNode: TreeNode){\r\n        if(selectedTreeNode == null){\r\n            return;\r\n        }\r\n\r\n        const parent = selectedTreeNode.parent;\r\n        if(parent == null){//ç§»é¤é¡¶çº§æ èç¹ï¼æ²¡æç¶èç¹çæ èç¹ï¼\r\n            let index = this.roots.indexOf(selectedTreeNode);\r\n            this.roots.splice(index, 1);//ç§»é¤æ°ç»ä¸­æä¸æå®èç¹\r\n        }else{\r\n            if(parent.childrenField.length <= 0){\r\n                console.log(\"RemoveTreeNode Warning: it is impossible to remove element from an empty array\");\r\n                return;\r\n            }\r\n            //ç§»é¤æ°ç»ä¸­æä¸æå®èç¹\r\n            let index = parent.childrenField.indexOf(selectedTreeNode);\r\n            parent.childrenField.splice(index, 1);\r\n        }\r\n\r\n        this.update(this.roots);\r\n\r\n        this.fireEvent({ eventName: TREE_EVENTS.onRemoveNode, selectedTreeNode, parent});\r\n    }\r\n\r\n    /**\r\n     * å®ä½æå®æ èç¹\r\n     * @param needLocatedNode å¾å®ä½èç¹ \r\n     */\r\n    locateTreeNode(needLocatedNode: TreeNode){\r\n        if(needLocatedNode == null){\r\n            return;\r\n        }\r\n\r\n        let parentNode = needLocatedNode.parent;\r\n        while( parentNode != null){\r\n            parentNode.isExpanded = true;\r\n            parentNode = parentNode.parent;\r\n        }\r\n        \r\n        needLocatedNode.isActive = false;\r\n        needLocatedNode.toggleActivated();\r\n    }\r\n\r\n    /**\r\n     * éè¿IDå®ä½æ èç¹\r\n     * @param nodeID å¾æ¥æ¾å¹¶å®ä½èç¹çID\r\n     */\r\n    locateNodeByID(nodeID: string): boolean{\r\n        let node = this.searchTreeNodeByID(nodeID);\r\n        if(node == null) {\r\n            return false;\r\n        }\r\n        this.locateTreeNode(node);\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * æ¥æ¾æå®æ èç¹\r\n     * @param nodeID å¾æ¥æ¾èç¹ID\r\n     */\r\n    searchTreeNodeByID(nodeID: string): TreeNode{\r\n        return this.searchTreeNode(this.roots, nodeID);\r\n    }\r\n\r\n    \r\n    /**\r\n     * å¨æå®éåä¸­ï¼æ ¹æ®IDæ¥æ¾æ èç¹\r\n     * @param nodes æ éå\r\n     * @param nodeID å¾æ¥æ¾èç¹ID\r\n     */\r\n    searchTreeNode(nodes: TreeNode[], nodeID: string): TreeNode{\r\n\r\n        if(nodes == null || nodes.length <= 0){\r\n            return null;\r\n        }\r\n\r\n        if(nodeID == null || nodeID.length < 0){\r\n            return null;\r\n        }\r\n\r\n        let searchedTreeNode: TreeNode = null;\r\n        \r\n        nodes.forEach(node => {\r\n            if(node.idField == nodeID){ //åå½\r\n                searchedTreeNode = node;\r\n                return;\r\n            }\r\n\r\n            if(node.childrenField == null || node.childrenField.length < 0){ //åå½\r\n                return;\r\n            }\r\n\r\n            const searchedNodeInChildren = this.searchTreeNode(node.childrenField, nodeID);//éæ¨\r\n            if(searchedNodeInChildren != null){\r\n                searchedTreeNode = searchedNodeInChildren;\r\n            }\r\n            return;//åå½\r\n        });\r\n\r\n        return searchedTreeNode; //è¿å\r\n    }\r\n    \r\n    private _treeNodeContentComponent:any;\r\n    get treeNodeContentComponent() { return this._treeNodeContentComponent };\r\n    // if treeNodeTemplate is a component - use it,\r\n    // otherwise - it's a template, so wrap it with an AdHoc component\r\n    _loadTreeNodeContentComponent() {\r\n        this._treeNodeContentComponent = this.options.treeNodeTemplate;\r\n        if (typeof this._treeNodeContentComponent === 'string') {\r\n        // this._treeNodeContentComponent = this._createAdHocComponent(this._treeNodeContentComponent);\r\n        }\r\n    }\r\n\r\n    // _createAdHocComponent(templateStr) {\r\n    //     @Component({\r\n    //         selector: 'TreeNodeTemplate',\r\n    //         template: templateStr\r\n    //     })\r\n    //     class AdHocTreeNodeTemplateComponent {\r\n    //         @Input() node: TreeNode;\r\n    //     }\r\n    //     return AdHocTreeNodeTemplateComponent;\r\n    // }\r\n\r\n    get isFocused()\r\n    {\r\n        return TreeModel.focusedTree === this;\r\n    }\r\n    setFocus(value){\r\n        TreeModel.focusedTree = value ? this : null;\r\n    }\r\n    getFirstRoot(){\r\n        return first(this.roots);\r\n    }\r\n    getLastRoot(){\r\n        return last(this.roots);\r\n    }\r\n    focusNextNode() {\r\n        let previousNode = this.focusedNode;\r\n        let nextNode = previousNode ? previousNode.findNextNode() : this.getFirstRoot();\r\n        nextNode && nextNode.focus() // Short-circuit evaluation\r\n    }\r\n\r\n    focusPreviousNode() {\r\n        let previousNode = this.focusedNode;\r\n        let nextNode = previousNode ? previousNode.findPreviousNode() : this.getLastRoot();\r\n        nextNode && nextNode.focus();\r\n    }\r\n\r\n    focusDrillUp(){\r\n        let previousNode = this.focusedNode;\r\n        let nextNode = previousNode && previousNode.realParent;\r\n        nextNode && nextNode.focus();\r\n    }\r\n\r\n    focusDrillDown() {\r\n        let previousNode = this.focusedNode;\r\n        let nextNode = previousNode && previousNode.getFirstChild();\r\n        nextNode && nextNode.focus();\r\n    }\r\n\r\n    fireEvent(event) {\r\n        // https://stackoverflow.com/questions/35840576/differencse-between-eventemitter-next-and-eventemitter-emit-in-angular-2\r\n        //  abandon next() function, begin to use emit() function\r\n        // this.events[event.eventName].next(event);\r\n        // this.events[event.eventName].emit(event,alert(event.eventName));//åå°äºä»¶ï¼å¹¶ä¼ éäºä»¶çå¯¹è±¡\r\n        this.events[event.eventName].emit(event);\r\n\r\n    }\r\n\r\n    /**\r\n     * å¤æ­æ¯å¦æ§è¡ç§»å¨èç¹æä½ï¼å¯ä»¥ç§»å¨è¿åtrueï¼å¦åè¿åfalse\r\n     * @param param0 param0.from å¾ç§»å¨èç¹çåæç¶èç¹\r\n     *               param0.to å¾ç§»å¨èç¹çæ°ç¶èç¹\r\n     */\r\n    canMoveNode({ from, to }) {\r\n        // same node\r\n        if (from.parentNode === to.parentNode && from.index === to.index) {\r\n          return false;\r\n        }\r\n    \r\n        const fromChildren = from.parentNode.children;\r\n        const fromNode = fromChildren[from.index];\r\n        \r\n        return !to.parentNode.isDescendantOf(fromNode);\r\n    }\r\n\r\n    /**\r\n     * ç§»å¨èç¹\r\n     * @param param0 param0.from å¾ç§»å¨èç¹çåæç¶èç¹\r\n     *               param0.to å¾ç§»å¨èç¹çæ°ç¶èç¹\r\n     */\r\n    moveNode({ from, to }) {\r\n        if (!this.canMoveNode({ from , to })) return;\r\n    \r\n        const fromChildren = from.parentNode.childrenField;\r\n    \r\n        // If node doesn't have children - create children array\r\n        if (!to.parentNode.childrenField) {\r\n          to.parentNode.childrenField = [];\r\n        }\r\n        const toChildren = to.parentNode.childrenField;\r\n        \r\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\r\n        // The splice() method changes the contents of an array by removing existing elements and/or adding new elements.\r\n        const node = fromChildren.splice(from.index, 1)[0];\r\n    \r\n        // Compensate for index if already removed from parent:\r\n        let toIndex = (from.parentNode === to.parentNode && to.index > from.index) ? to.index - 1 : to.index;\r\n    \r\n        toChildren.splice(toIndex, 0, node);\r\n\r\n        // console.log(\"toChildren:\" + toChildren);\r\n\r\n        // console.log(\"AfterMoveNode:\" + this.roots);\r\n    \r\n        this.update(this.roots);// å®ç°node movedåï¼éæ°å·æ°è¿æ£µæ \r\n    \r\n        this.fireEvent({ eventName: TREE_EVENTS.onMoveNode, node, to });\r\n    }\r\n    \r\n    // TODO: move to a different service:\r\n    setDragNode(dragNode:{ parentNode: TreeNode, index: number }) {\r\n        this._dragNode = dragNode;\r\n    }\r\n    \r\n    getDragNode():{ parentNode: TreeNode, index:number } {\r\n        return this._dragNode || { parentNode: null, index: null };\r\n    }\r\n    \r\n    isDragging() {\r\n        return this.getDragNode().parentNode;\r\n    }\r\n    \r\n    setDropLocation(dropLocation: { component: any, parentNode: TreeNode, index: number }) {\r\n        this._dropLocation = dropLocation;\r\n    }\r\n    \r\n    getDropLocation(): { component: any, parentNode: TreeNode, index: number } {\r\n        return this._dropLocation || {component: null, parentNode: null, index: null};\r\n    }\r\n    \r\n    isDraggingOver(component) {\r\n        return this.getDropLocation().component === component;\r\n    }\r\n    \r\n    cancelDrag() {\r\n        this.setDropLocation(null);\r\n        this.setDragNode(null);\r\n    }\r\n}","// keys used in the angular tree component\r\nexport const KEYS = {\r\n    LEFT: 37,\r\n    UP: 38,\r\n    RIGHT: 39,\r\n    DOWN: 40,\r\n    ENTER: 13,\r\n    SPACE: 32\r\n}","import { Component, OnChanges, Input, Output, EventEmitter, HostListener } from '@angular/core';\r\nimport { TreeModel } from '../../models/tree-model';\r\nimport { TreeOptions } from '../../models/tree-options';\r\nimport { KEYS } from '../../constants/keys';\r\nimport { pick, includes } from 'lodash-es';//å°lodashå®è£å°node-modulesä¸­ï¼å®ç°æéå¼å¥\r\nimport { TreeNode } from '../../models/tree-node';\r\n\r\n//çº¦å®ä½¿ç¨ä¸åçº¿è¡¨ç¤ºlodashï¼å°±åç¨$è¡¨ç¤ºjQueryä¸æ ·\r\n//1.requireå³é®å­ä¸è¢«è¯å«ï¼\r\n// https://stackoverflow.com/questions/31173738/typescript-getting-error-ts2304-cannot-find-name-require\r\n// declare var require: any\r\n// const _ = require('lodash');\r\n//2.å®è£lodashçesçæ¬ï¼\r\n// (1) $>npm i lodash-es\r\n// (2) $>npm install --save @types/lodash\r\n@Component({\r\n  selector: 'ng2tree',\r\n  templateUrl: './tree.component.html',\r\n  styleUrls: ['./tree.component.css'],\r\n  providers:[\r\n    TreeModel\r\n  ]\r\n})\r\nexport class TreeComponent implements OnChanges {\r\n    // delegating to TreeModel service:\r\n    _nodes:any[];\r\n    @Input() set nodes(nodes:any[]) { };\r\n    _options:TreeOptions;\r\n    @Input() set options(options:TreeOptions) { };\r\n    \r\n    @Input() set focused(value:boolean) {\r\n      this.treeModel.setFocus(value);\r\n      // alert('focused on the tree');\r\n    }\r\n\r\n    @Output() onToggle;\r\n    @Output() onActiveChanged;\r\n    @Output() onActivate;\r\n    @Output() onDeactivate;\r\n    @Output() onFocus;\r\n    @Output() onBlur;\r\n    @Output() onDoubleClick;\r\n    @Output() onContextMenu;\r\n    @Output() onRightMenuClicked;\r\n  \r\n    constructor(public treeModel:TreeModel) { \r\n      treeModel.eventNames.forEach((name) => this[name] = new EventEmitter());//customEventName -> new EventEmitter()\r\n    }\r\n\r\n    ngOnChanges(changes) {\r\n      this.treeModel.setData({\r\n          nodes: changes.nodes && changes.nodes.currentValue,\r\n          options: changes.options && changes.options.currentValue,\r\n          events: pick(this, this.treeModel.eventNames)\r\n      });\r\n    }\r\n    // ä¼åä½¿ç¨HostListenerè£é¥°å¨ç»å®äºä»¶ï¼èä¸æ¯ä½¿ç¨DirectiveæComponentçhoståæ°æ®\r\n    // When binding events to Directive or Component, Angular suggests to prefer to HostListener decorator, \r\n    // rather than host metadata.\r\n    @HostListener('body: keydown', ['$event']) onKeydown($event) {\r\n      // alert('Pressed a key');\r\n      let focusedNode = this.treeModel.focusedNode;\r\n\r\n      if (!this.treeModel.isFocused) {\r\n        return;\r\n      }\r\n\r\n      if (includes([KEYS.DOWN, KEYS.UP, KEYS.LEFT,\r\n        KEYS.RIGHT, KEYS.ENTER, KEYS.SPACE], $event.keyCode)) {\r\n        $event.preventDefault();//åæ¶äºä»¶çé»è®¤å¨ä½ï¼å®ç°ä»å¯¹includesé®ååº\r\n      }\r\n  \r\n      switch ($event.keyCode) {\r\n        case KEYS.DOWN:\r\n          return this.treeModel.focusNextNode();\r\n  \r\n        case KEYS.UP:\r\n          return this.treeModel.focusPreviousNode();\r\n  \r\n        case KEYS.LEFT:\r\n          // alert('Focus Drill Up');\r\n          if (focusedNode.isExpanded) {\r\n            focusedNode.toggle();\r\n          }\r\n          else {\r\n            this.treeModel.focusDrillUp();\r\n          }\r\n          return;\r\n  \r\n        case KEYS.RIGHT:\r\n          // alert('Focus Drill Down');\r\n          if (focusedNode.isCollapsed) {\r\n            focusedNode.toggle();\r\n          }\r\n          else {\r\n            this.treeModel.focusDrillDown();\r\n          }\r\n          return;\r\n  \r\n        case KEYS.ENTER:\r\n        case KEYS.SPACE:\r\n          // alert('Enter or Space key.');\r\n          return focusedNode && focusedNode.toggleActivated();\r\n      }\r\n    }\r\n\r\n    @HostListener('body: mousedown', ['$event'])  onMousedown($event) {\r\n      // alert('click');\r\n      let insideClick = $event.target.closest('ng2tree');//å¤æ­å½ådomæ ä¸ä¸æä¸­æ¯å¦åå«æ ç»ä»¶\r\n      if (!insideClick) {\r\n        this.treeModel.setFocus(false);\r\n      }\r\n    }\r\n\r\n    searchAndLocationNodeById(elementId) {\r\n      // console.log('succeeded to search and location Node By Id in treeComponent:', elementId);\r\n      this.treeModel.locateNodeByID(elementId);\r\n    }\r\n\r\n    searchNodeById(elementId): TreeNode {\r\n      // console.log('succeeded to search and location Node By Id in treeComponent:', elementId);\r\n      return this.treeModel.searchTreeNodeByID(elementId);\r\n    }\r\n}","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n// å®ä¹è¾å©æä»¤TreeNodeContentï¼ç¨æ¥å¨æ¨¡æ¿ä¸­æ è®°æå¥ç¹\r\n@Directive({\r\n  selector: '[treeNodeContent-host]'\r\n})\r\n\r\nexport class TreeNodeContentDirective {\r\n\r\n  // ä¾èµæ³¨å¥ViewContainerRefï¼è·åå¯¹å®¹å¨è§å¾çè®¿é®æé\r\n  constructor(public viewContainerRef: ViewContainerRef) {\r\n\r\n  }\r\n}","import { Type } from '@angular/core';\r\n\r\nexport class TreeNodeContentItem {\r\n    constructor(public component: Type<any>, public displayData:any) {}\r\n}","import { Component, Input, Output, EventEmitter, OnInit, ComponentFactoryResolver, ViewContainerRef, ViewChild } from '@angular/core';\r\nimport { ITreeNodeContent } from './ITreeNodeContent';\r\n\r\n@Component({\r\n  selector: 'ng2tree-node-content',\r\n  templateUrl: './tree-node-content.component.html',\r\n  styleUrls: ['./tree-node-content.component.css']\r\n})\r\nexport class TreeNodeContentComponent implements ITreeNodeContent, OnInit {\r\n\r\n  @Input() displayData: any;\r\n  @Input() originData: any;\r\n  @Output() rightMenuClicked = new EventEmitter<any>();\r\n\r\n  @ViewChild('rightMenuContainer', { read: ViewContainerRef }) rightMenuContainer: ViewContainerRef;\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\r\n\r\n  }\r\n  ngOnInit() {\r\n    // å³é®èåç¸å³\r\n    this.rightMenuContainer.clear();\r\n    if (this.originData.hasRightClickMenu) {\r\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.originData.rightClickMenuComponent);\r\n      const componentRef = this.rightMenuContainer.createComponent(componentFactory);\r\n      componentRef.instance['nodeData'] = this.originData;\r\n      componentRef.instance['rightMenuClicked'].subscribe((event) => {\r\n        this.rightMenuClicked.emit(event);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, ViewChild, OnInit, Input, ComponentFactoryResolver, ViewContainerRef, ComponentRef } from '@angular/core';\r\nimport { TreeNode } from '../../models/tree-node';\r\nimport { TreeNodeContentDirective } from '../../directives/tree-node-content.directive';\r\nimport { TreeNodeContentItem } from '../../models/tree-node-content-item';\r\nimport { TreeNodeContentComponent } from '../tree-node-content/tree-node-content.component';\r\n\r\n@Component({\r\n  selector: 'ng2tree-node',\r\n  templateUrl: './tree-node.component.html',\r\n  styleUrls: ['./tree-node.component.css']\r\n})\r\nexport class TreeNodeComponent implements OnInit {\r\n\r\n  @Input() node: TreeNode;\r\n  @Input() nodeIndex: number;\r\n\r\n  // èç¹åå®¹ç»ä»¶å®ä¾\r\n  componentRef: ComponentRef<TreeNodeContentComponent>;\r\n\r\n  // TODO: move to draggable directive\r\n  onDragStart($event) {\r\n    // è®¾ç½®DragNode: éæ©dragNodeçç¶èç¹ä½ä¸ºDragNodeï¼éè¿indexå®ä½å°æå®çèç¹\r\n    setTimeout(() => this.node.treeModel.setDragNode({ parentNode: this.node.parent, index: this.nodeIndex }), 30);\r\n  }\r\n\r\n  onDragEnd() {\r\n    this.node.treeModel.setDragNode(null);\r\n  }\r\n\r\n  onDragOver($event) {\r\n    $event.preventDefault();\r\n    this.node.treeModel.setDropLocation({ component: this, parentNode: this.node, index: 0 });\r\n  }\r\n\r\n  onDrop($event) {\r\n    $event.preventDefault();\r\n    // this.node.mouseAction('drop', $event, { node: this.node, index: 0 });\r\n    this.node.treeModel.setFocus(true);\r\n    this.node.dropMouseAction($event,{ parentNode: this.node, index: 0 });\r\n    console.log(\"onDrop: tree-node-component\");\r\n  }\r\n\r\n  onDragLeave(nodeContentWrapper, $event) {\r\n    if (!this.node.treeModel.isDraggingOver(this)) {\r\n      return;\r\n    }\r\n    \r\n    const rect = nodeContentWrapper.getBoundingClientRect();\r\n\r\n    // If outside the element\r\n    if ($event.clientX < rect.left || $event.clientX > rect.right ||\r\n        $event.clientY < rect.top || $event.clientY > rect.bottom) {\r\n\r\n      this.node.treeModel.setDropLocation(null);\r\n    }\r\n  }\r\n\r\n  // ViewChild æ¯å±æ§è£é¥°å¨ï¼ç¨æ¥ä»æ¨¡æ¿è§å¾ä¸­è·åå¹éçåç´ \r\n  @ViewChild(TreeNodeContentDirective) treeNodeContentHost: TreeNodeContentDirective;\r\n\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\r\n    viewContainerRef: ViewContainerRef) {\r\n      \r\n  }\r\n\r\n  ngOnInit() {\r\n    this._loadTreeNodeContent();\r\n\r\n    // è§¦ååæ´æ èç¹å±ç¤ºææ¬\r\n    this.node.changeDisplayField.subscribe(name => {\r\n      if (this.componentRef) {\r\n        this.componentRef.instance.displayData = name;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n\r\n  }\r\n\r\n  // è§£å³ä½¿ç¨å¨æç»ä»¶åºç°ExpressionChangedAfterItHasBeenCheckedErroré®é¢ï¼\r\n  // https://github.com/angular/angular/issues/17572\r\n  _loadTreeNodeContent() {\r\n\r\n    // ä½¿ç¨Itemä»é»è¾ä¸å°TreeNodeContentComponentådataå³èèµ·æ¥\r\n    let treeNodeContentItem: TreeNodeContentItem = new TreeNodeContentItem(\r\n      TreeNodeContentComponent,this.node.displayField);\r\n    \r\n    // ä½¿ç¨ ComponentFactoryResolver æ¥ä¸ºæ¯ä¸ªå·ä½çç»ä»¶è§£æåºä¸ä¸ª ComponentFactory \r\n    // ç¶å ComponentFactory ä¼ä¸ºæ¯ä¸ä¸ªç»ä»¶åå»ºä¸ä¸ªå®ä¾\r\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(treeNodeContentItem.component);\r\n\r\n    let viewContainerRef = this.treeNodeContentHost.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    this.componentRef = viewContainerRef.createComponent(componentFactory);\r\n\r\n    this.componentRef.instance.displayData = treeNodeContentItem.displayData; // ä¼ å¥æ°æ®\r\n    this.componentRef.instance.originData = this.node.data;\r\n    this.componentRef.instance.rightMenuClicked.subscribe(event => {\r\n      this.node.rightMenuClicked(event);\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { TreeNode } from '../../models/tree-node';\r\n\r\n@Component({\r\n  selector: 'ng2tree-node-drop-slot',\r\n  templateUrl: './tree-node-drop-slot.component.html',\r\n  styleUrls: ['./tree-node-drop-slot.component.css']\r\n})\r\nexport class TreeNodeDropSlotComponent {\r\n\r\n  @Input() node: TreeNode;\r\n  @Input() dropIndex: number;\r\n\r\n  onDragOver($event) {\r\n    $event.preventDefault();\r\n    this.node.treeModel.setDropLocation({ component: this, parentNode: this.node, index: this.dropIndex });\r\n  }\r\n\r\n  onDragLeave() {\r\n    if (this.node.treeModel.isDraggingOver(this)) {\r\n      this.node.treeModel.setDropLocation(null);\r\n    }\r\n  }\r\n\r\n  onDrop($event) {\r\n    $event.preventDefault();\r\n    // this.node.mouseAction('drop', $event, { node: this.node, index: this.dropIndex });\r\n    console.log('onDropEvent: tree-node-drop-slot');\r\n    this.node.dropMouseAction($event, {parentNode: this.node, index: this.dropIndex });\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { TreeComponent } from './components/tree/tree.component';\r\nimport { TreeNodeComponent } from './components/tree-node/tree-node.component';\r\nimport { TreeNodeContentComponent } from './components/tree-node-content/tree-node-content.component';\r\nimport { TreeNodeContentDirective } from './directives/tree-node-content.directive';\r\nimport { TreeNodeDropSlotComponent } from './components/tree-node-drop-slot/tree-node-drop-slot.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TreeComponent,\r\n    TreeNodeComponent,\r\n    TreeNodeContentComponent,\r\n    TreeNodeContentDirective,\r\n    TreeNodeDropSlotComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: [\r\n  ],\r\n  entryComponents: [\r\n    TreeNodeContentComponent\r\n  ],\r\n  exports:[\r\n    TreeComponent,\r\n    TreeNodeComponent,\r\n    TreeNodeContentComponent,\r\n    TreeNodeContentDirective,\r\n    TreeNodeDropSlotComponent\r\n  ]\r\n})\r\nexport class TreeModule { }","import { InjectionToken } from '@angular/core';\r\n\r\n// injectionTokenä½ç¨è¯´æ\r\n// https://segmentfault.com/a/1190000008626348\r\nexport const ANGULAR_MONACO_EDITOR_CONFIG = new InjectionToken('ANGULAR_MONACO_EDITOR_CONFIG');\r\n\r\nexport interface AngularMonacoEditorConfig {\r\n  baseUrl?: string;\r\n  defaultOptions?: { [key: string]: any; };\r\n  onMonacoLoad?: Function;\r\n}\r\n","export const CODE_EDITOR_EVENTS = {\r\n    onInit: 'onInit'\r\n};\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { assign } from 'lodash-es';\r\n\r\nimport { CODE_EDITOR_EVENTS } from '../constant/events';\r\n\r\n@Injectable()\r\nexport class CodeEditorEventService {\r\n    public eventNames = Object.keys(CODE_EDITOR_EVENTS);\r\n    private _events: any = {}; // ä½¿ç¨äºä»¶\r\n\r\n    /**\r\n     * è®¾ç½®å¯ç¨äºä»¶\r\n     * @param  äºä»¶\r\n     */\r\n    addEvent(event) {\r\n        assign(this._events, event);\r\n        // console.log(this.events);\r\n    }\r\n\r\n    fireEvent(event) {\r\n        this._events[event.eventName].emit(event);\r\n        // console.log(\"Emit Event:\" + event);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\ndeclare const monaco: any;\r\n\r\n// Angular Monaco Editor Component Variables\r\n// æ±æ»Angular monaco editor component ç»ä»¶æ´é²çåé\r\n@Injectable()\r\nexport class AngularMonacoEditorService {\r\n\r\n    private _existError = false;//é»è®¤æ²¡æéè¯¯\r\n    get existError() {\r\n        return this._existError;\r\n    }\r\n\r\n    handleModelMarkers() {\r\n        var self = this;\r\n        // https://github.com/Microsoft/monaco-editor/issues/30\r\n        const setModelMarkers = monaco.editor.setModelMarkers;\r\n        monaco.editor.setModelMarkers = function (model, owner, markers) {\r\n            setModelMarkers.call(monaco.editor, model, owner, markers);\r\n            if (markers.length === 0) {\r\n                // there are no errors(synx error and validate error)\r\n                // console.log('continue');\r\n            } else {\r\n                // there are errors\r\n                self._existError = true;\r\n            }\r\n        };\r\n    }\r\n}\r\n","import { Component, Input, Output } from '@angular/core';\r\nimport { forwardRef, Inject, NgZone } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { fromEvent } from 'rxjs/observable/fromEvent';\r\n\r\nimport { ANGULAR_MONACO_EDITOR_CONFIG, AngularMonacoEditorConfig } from '../model/config';\r\nimport { CodeEditorEventService } from '../service/code-editor.event.service';\r\nimport { CODE_EDITOR_EVENTS } from '../constant/events';\r\nimport { AngularEditorModel } from '../model/types';\r\nimport { BaseMonacoEditor } from '../model/base-monaco-editor';\r\nimport { AngularMonacoEditorService } from '../service/angular-monaco-editor.service';\r\n\r\ndeclare const monaco: any;\r\n\r\n// èªå®ä¹è¾å¥æ§ä»¶:1.å°è£ControlValueAccessor\r\n// https://code-examples.net/zh-CN/q/2154761\r\nexport const CODE_EDITOR_INPUT_VALUE_ACCESSOR: any = {\r\n  // https://blog.csdn.net/wangdan_2013/article/details/81314959\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => AngularMonacoEditorComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'angular-monaco-editor',\r\n  templateUrl: './angular-monaco-editor.component.html',\r\n  styleUrls: ['./angular-monaco-editor.component.css'],\r\n  // èªå®ä¹è¾å¥æ§ä»¶:2.å¼å¥ä¾èµæå¡ControlValueAccessor\r\n  providers: [\r\n    CODE_EDITOR_INPUT_VALUE_ACCESSOR,\r\n    CodeEditorEventService,\r\n    AngularMonacoEditorService\r\n  ]\r\n})\r\n\r\n// èªå®ä¹è¾å¥æ§ä»¶ <-> Monaco Edtor\r\n\r\n// èªå®ä¹è¾å¥æ§ä»¶:3.1 implements ControlValueAccessor\r\nexport class AngularMonacoEditorComponent extends BaseMonacoEditor implements ControlValueAccessor {\r\n\r\n  @Input('model')\r\n  set model(model: AngularEditorModel) {\r\n    this.options.model = model;\r\n    if (this._editor) {\r\n      this._editor.dispose();\r\n      this.initMonaco(this.options);\r\n    }\r\n  }\r\n\r\n  private _value = '';\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  constructor(private angularMonacoEditorService: AngularMonacoEditorService,\r\n    private zone: NgZone,\r\n    private editorEventService: CodeEditorEventService,\r\n    @Inject(ANGULAR_MONACO_EDITOR_CONFIG) private angularEditorconfig: AngularMonacoEditorConfig) {\r\n    super(editorEventService, angularEditorconfig);\r\n  }\r\n\r\n  // todo: æåoptionså¬å±ç±»\r\n  protected initMonaco(options: any): void {\r\n    const enableModel = !!options.model;\r\n    if (enableModel) {\r\n      const searchedModel = monaco.editor.getModel(options.model.uri);\r\n      if (null !== searchedModel) {\r\n        searchedModel.dispose();\r\n      }\r\n\r\n      options.model = monaco.editor.createModel(options.model.value, options.model.language, options.model.uri);\r\n    }\r\n\r\n    this._editor = monaco.editor.create(this._editorComponent.nativeElement, options);\r\n\r\n    if (!enableModel) {\r\n      this._editor.setValue(this._value);\r\n    }\r\n    \r\n    if (enableModel) {\r\n      this.angularMonacoEditorService.handleModelMarkers();\r\n    }\r\n\r\n    // monaco editor -> outside component\r\n    this._editor.onDidChangeModelContent((e: any) => this.onChangeModelContentHandler(e));\r\n\r\n    this._editor.onDidBlurEditorText((e: any) => this.onBlurEditorTextHandler(e));\r\n\r\n    this._editor.onDidLayoutChange((e: any) => this.onLayoutChangeHandler(e));\r\n\r\n    // refresh layout on resize event.\r\n    this.refreshLayoutWhenWindowResize();\r\n\r\n    this.editorEventService.fireEvent({\r\n      eventName: CODE_EDITOR_EVENTS.onInit,\r\n      target: this,\r\n      editor: this._editor\r\n    });\r\n  }\r\n\r\n  /**\r\n   * refresh layout when resized the window\r\n   */\r\n  refreshLayoutWhenWindowResize() {\r\n    if (this._windowResizeSubscription) {\r\n      this._windowResizeSubscription.unsubscribe();\r\n    }\r\n    // fromEventç¨äºå¼å¬äºä»¶ï¼äºä»¶è§¦åæ¶ï¼å°äºä»¶eventè½¬æå¯æµå¨çObservableè¿è¡ä¼ è¾\r\n    // https://www.jianshu.com/p/46894deb870a\r\n    this._windowResizeSubscription = fromEvent(window, 'resize').subscribe(() => this._editor.layout());\r\n  }\r\n\r\n  onChangeModelContentHandler(e) {\r\n    const _value = this._editor.getValue();\r\n\r\n    // monaco editor -> outside component\r\n    // https://github.com/JTangming/tm/issues/4 ngZoneè¯¦è§£\r\n    this.zone.run(() => this.value = _value); // value is not propagated to parent when executing outside zone.\r\n  }\r\n\r\n  onBlurEditorTextHandler(e) {\r\n\r\n    this.onControlTouched();\r\n  }\r\n\r\n  onLayoutChangeHandler(e) {\r\n    console.log('Layout changed:\\n' + e);\r\n  }\r\n\r\n  // get accessor\r\n  get value(): any {\r\n    return this._value;\r\n  }\r\n\r\n  // set accessor including call the onchange callback\r\n  set value(v: any) {\r\n    if (v !== this.value) {// æ³¨æè¿ç§åæ³ï¼å¼å¾å­¦ä¹ \r\n      this._value = v;\r\n    }\r\n\r\n    this.onControlValueChange(this.value); // å¨å±æ§ä¿®é¥°å¨éè°ç¨onControlValueChangeæ¹æ³\r\n  }\r\n\r\n  // èªå®ä¹è¾å¥æ§ä»¶:3.2 implements ControlValueAccesso\r\n\r\n  // outside component -> monaco editor\r\n\r\n  // From ControlValueAccessor interface\r\n  writeValue(value: any) {\r\n    const self = this;\r\n    self.value = value || '';\r\n\r\n    // Fix for value change while dispose in process.\r\n    setTimeout(() => {\r\n      if (self._editor /*&& !this.options.model*/) {\r\n        self._editor.setValue(self._value);\r\n      }\r\n    });\r\n  }\r\n\r\n  // From ControlValueAccessor interface\r\n  registerOnChange(fn: any) {\r\n    this.onControlValueChange = fn;\r\n  }\r\n\r\n  // From ControlValueAccessor interface\r\n  registerOnTouched(fn: any) {\r\n    this.onControlTouched = fn;\r\n  }\r\n\r\n  // ControlValueAccessoræä¾çäºä»¶åè°\r\n  onControlValueChange = (_: any) => {\r\n  }\r\n\r\n  // ControlValueAccessoræä¾çäºä»¶åè°\r\n  onControlTouched = () => {\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\n\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { ANGULAR_MONACO_EDITOR_CONFIG, AngularMonacoEditorConfig } from './model/config';\r\nimport { AngularMonacoEditorComponent } from './angular-monaco-editor/angular-monaco-editor.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    AngularMonacoEditorComponent\r\n  ],\r\n  exports: [\r\n    AngularMonacoEditorComponent\r\n  ],\r\n  providers: [\r\n  ]\r\n})\r\n\r\nexport class AngularMonacoEditorModule {\r\n  public static forRoot(config: AngularMonacoEditorConfig = {}): ModuleWithProviders {\r\n    return {\r\n      ngModule: AngularMonacoEditorModule,\r\n      providers: [\r\n        { provide: ANGULAR_MONACO_EDITOR_CONFIG, useValue: config }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import {Directive, EventEmitter, Input, Optional, Output, TemplateRef} from '@angular/core';\r\n// import {ShContextMenuComponent} from './sh-context-menu.component';\r\nimport {ShContextMenuClickEvent} from './sh-context-menu.models';\r\n\r\nexport class MenuItemContext {\r\n  $implicit: any;\r\n\r\n  constructor() {\r\n    this.$implicit = {};\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[shContextMenuItem]'\r\n})\r\nexport class ShContextMenuItemDirective {\r\n  @Input() subMenu;\r\n  @Input() divider: boolean;\r\n  @Input() visible: (event: ShContextMenuClickEvent) => boolean;\r\n  @Input() disabled: (event: ShContextMenuClickEvent) => boolean;\r\n  @Input() closeOnClick = true;\r\n\r\n  @Output() click = new EventEmitter<ShContextMenuClickEvent>();\r\n\r\n  context: MenuItemContext = new MenuItemContext();\r\n\r\n  private _active: boolean;\r\n\r\n  constructor(@Optional() public template: TemplateRef<MenuItemContext>) {\r\n  }\r\n\r\n  setNotActive() {\r\n    this._active = false;\r\n    if (this.subMenu) {\r\n      this.subMenu.setNotActive();\r\n    }\r\n  }\r\n\r\n  setActive() {\r\n    this._active = true;\r\n  }\r\n}\r\n","import {ElementRef, Injectable, OnDestroy} from '@angular/core';\r\nimport {ShContextMenuComponent} from './sh-context-menu.component';\r\nimport {CloseScrollStrategy, Overlay} from '@angular/cdk/overlay';\r\nimport {TemplatePortal} from '@angular/cdk/portal';\r\nimport {ConnectedPositionStrategy} from '@angular/cdk/overlay/typings/position/connected-position-strategy';\r\nimport {ShContextMenuEvent, ShContextSubMenuEvent} from './sh-context-menu.models';\r\nimport {OverlayRef} from '@angular/cdk/overlay';\r\nimport {fromEvent} from 'rxjs/observable/fromEvent';\r\nimport {Subscription} from 'rxjs/Subscription';\r\n\r\n@Injectable()\r\nexport class ShContextMenuService implements OnDestroy {\r\n  activeOverlays: OverlayRef[] = [];\r\n  backDropSub: Subscription;\r\n\r\n  activeMenu: ShContextMenuComponent;\r\n\r\n  constructor(private overlay: Overlay) {\r\n  }\r\n\r\n  openMenu(ctxEvent: ShContextMenuEvent) {\r\n    this.closeCurrentOverlays();\r\n    const {menu, mouseEvent, targetElement, data} = ctxEvent;\r\n\r\n    this.activeMenu = menu;\r\n\r\n    mouseEvent.preventDefault();\r\n    mouseEvent.stopPropagation();\r\n\r\n    this.overrideGetBoundingClientRect(targetElement, mouseEvent);\r\n\r\n    const scrollStrategy = this.buildCloseScrollStrategy();\r\n    const positionStrategy = this.buildConnectedPositionStrategy(targetElement);\r\n\r\n    this.attachContextToItems(menu, data);\r\n\r\n    const overlayRef = this.createAndAttachOverlay(positionStrategy, scrollStrategy, menu, true);\r\n    this.attachOverlayRef(menu, overlayRef);\r\n\r\n    this.registerBackdropEvents(overlayRef);\r\n  }\r\n\r\n  openSubMenu(ctxEvent: ShContextSubMenuEvent): any {\r\n    const {menu, mouseEvent, targetElement, data, parentMenu} = ctxEvent;\r\n\r\n    mouseEvent.preventDefault();\r\n    mouseEvent.stopPropagation();\r\n\r\n    const scrollStrategy = this.buildCloseScrollStrategy();\r\n    const positionStrategy = this.buildConnectedPositionStrategyForSubMenu(targetElement);\r\n    const overlayRef = this.createAndAttachOverlay(positionStrategy, scrollStrategy, menu, false);\r\n\r\n    this.attachContextToItems(menu, data);\r\n    this.attachThisContext(menu, parentMenu);\r\n    this.attachOverlayRef(menu, overlayRef);\r\n  }\r\n\r\n  destroy() {\r\n    this.closeCurrentOverlays();\r\n    this.backDropSub.unsubscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  closeSubMenus(menu: ShContextMenuComponent) {\r\n    const itemsWithSubMenus = menu\r\n      .menuItems\r\n      .filter(i => !!i.subMenu && !!i.subMenu.overlayRef);\r\n\r\n    if (itemsWithSubMenus.length) {\r\n      itemsWithSubMenus.forEach(sm => this.closeSubMenus(sm.subMenu));\r\n\r\n      const overlayRefs = itemsWithSubMenus\r\n        .map(i => i.subMenu.overlayRef);\r\n\r\n      overlayRefs.forEach(r => r.dispose());\r\n    }\r\n  }\r\n\r\n  private registerBackdropEvents(overlayRef: OverlayRef) {\r\n    const elm = overlayRef.backdropElement;\r\n\r\n    this.backDropSub = fromEvent(elm, 'mousedown')\r\n      .subscribe(this.closeCurrentOverlays.bind(this));\r\n  }\r\n\r\n  private createAndAttachOverlay(positionStrategy: ConnectedPositionStrategy,\r\n                                 scrollStrategy: CloseScrollStrategy,\r\n                                 menu: ShContextMenuComponent,\r\n                                 hasBackdrop: boolean = true) {\r\n\r\n    const overlayRef = this.overlay.create({\r\n      positionStrategy,\r\n      scrollStrategy,\r\n      hasBackdrop: hasBackdrop,\r\n      backdropClass: 'sh-backdrop'\r\n    });\r\n\r\n    /*\r\n     TODO: try passing the TemplatePortal context (data)\r\n     and then injecting it to the *ngTemplateOutlet in the component template\r\n    */\r\n    const menuPortal = new TemplatePortal(menu.menuTemplate, menu.menuContainer);\r\n    overlayRef.attach(menuPortal);\r\n\r\n    this.activeOverlays.push(overlayRef);\r\n\r\n    return overlayRef;\r\n  }\r\n\r\n  private buildCloseScrollStrategy() {\r\n    return this.overlay.scrollStrategies.close();\r\n  }\r\n\r\n  private buildConnectedPositionStrategy(elm: ElementRef): ConnectedPositionStrategy {\r\n    return this\r\n      .overlay\r\n      .position()\r\n      .connectedTo(elm,\r\n        {originX: 'start', originY: 'bottom'},\r\n        {overlayX: 'start', overlayY: 'top'})\r\n      .withFallbackPosition(\r\n        {originX: 'start', originY: 'top'},\r\n        {overlayX: 'start', overlayY: 'bottom'})\r\n      .withFallbackPosition(\r\n        {originX: 'end', originY: 'top'},\r\n        {overlayX: 'start', overlayY: 'top'})\r\n      .withFallbackPosition(\r\n        {originX: 'start', originY: 'top'},\r\n        {overlayX: 'end', overlayY: 'top'})\r\n      .withFallbackPosition(\r\n        {originX: 'end', originY: 'center'},\r\n        {overlayX: 'start', overlayY: 'center'})\r\n      .withFallbackPosition(\r\n        {originX: 'start', originY: 'center'},\r\n        {overlayX: 'end', overlayY: 'center'});\r\n  }\r\n\r\n  private buildConnectedPositionStrategyForSubMenu(elm: ElementRef): ConnectedPositionStrategy {\r\n    return this\r\n      .overlay\r\n      .position()\r\n      .connectedTo(elm,\r\n        {originX: 'end', originY: 'top'},\r\n        {overlayX: 'start', overlayY: 'top'})\r\n      .withFallbackPosition(\r\n        {originX: 'start', originY: 'top'},\r\n        {overlayX: 'end', overlayY: 'top'})\r\n      .withFallbackPosition(\r\n        {originX: 'end', originY: 'bottom'},\r\n        {overlayX: 'start', overlayY: 'bottom'})\r\n      .withFallbackPosition(\r\n        {originX: 'start', originY: 'bottom'},\r\n        {overlayX: 'end', overlayY: 'bottom'});\r\n  }\r\n\r\n  /*\r\n    we need to override getBoundingClientRect() to return the position of the menu.\r\n    this is done because @angular/cdk use this function internally to determine where the overlay should be positioned\r\n    https://github.com/angular/material2/blob/master/src/cdk/overlay/position/connected-position-strategy.ts#L288\r\n   */\r\n  private overrideGetBoundingClientRect(elm: ElementRef, event: MouseEvent) {\r\n    const {clientX, clientY} = event;\r\n\r\n    elm.nativeElement.getBoundingClientRect = (): ClientRect => {\r\n      return {\r\n        bottom: clientY,\r\n        height: 0,\r\n        left: clientX,\r\n        right: clientX,\r\n        top: clientY,\r\n        width: 0\r\n      };\r\n    };\r\n  }\r\n\r\n  private closeCurrentOverlays() {\r\n    this.activeOverlays.forEach((o) => {\r\n      o.detach();\r\n      o.dispose();\r\n    });\r\n\r\n    this.activeOverlays = [];\r\n\r\n    // TODO: create close subject and emit.\r\n    // subscribe in component\r\n    if (this.activeMenu) {\r\n      this.activeMenu.close();\r\n    }\r\n  }\r\n\r\n  private attachContextToItems(menu: ShContextMenuComponent, data: any) {\r\n    menu.menuItems.forEach(i => i.context.$implicit = data);\r\n  }\r\n\r\n  private attachThisContext(menu: ShContextMenuComponent, parentMenu: ShContextMenuComponent) {\r\n    menu.thisContext = parentMenu.thisContext;\r\n  }\r\n\r\n  private attachOverlayRef(menu: ShContextMenuComponent, overlayRef: OverlayRef) {\r\n    menu.overlayRef = overlayRef;\r\n  }\r\n}\r\n","import {\r\n  Component, ContentChildren, ElementRef, Input, OnDestroy, QueryList, TemplateRef, ViewChild, ViewChildren,\r\n  ViewContainerRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {ShContextMenuItemDirective} from './sh-context-menu-item.directive';\r\nimport {ShContextMenuService} from './sh-context-menu.service';\r\nimport {OverlayRef} from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'sh-context-menu',\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['sh-context-menu.css'],\r\n  template: `\r\n    <ng-container #menuContainer></ng-container>\r\n    <ng-template #menuTemplate>\r\n      <div class=\"sh-context-menu\">\r\n        <div\r\n          *ngFor=\"let menuItem of menuItems\"\r\n          #itemElement\r\n          [ngClass]=\"{'sh-sub-anchor': menuItem.subMenu && menuItem.visible,\r\n           'sh-context-menu--item__disable': !menuItem.visible,\r\n           'sh-context-menu--item__divider': menuItem.divider,\r\n           'sh-context-menu--item__sub-active': subActive && menuItem.active}\"\r\n          class=\"sh-context-menu--item\"\r\n          (mouseenter)=\"onEnter($event, menuItem, itemElement)\"\r\n          (click)=\"onClick($event, menuItem)\">\r\n          <ng-container *ngIf=\"!menuItem.divider || !isVisible(menuItem)\">\r\n            <ng-content *ngTemplateOutlet=\"menuItem.template; context: menuItem.context\"></ng-content>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  `\r\n})\r\nexport class ShContextMenuComponent implements OnDestroy {\r\n  @Input('this') thisContext: any;\r\n\r\n  @ContentChildren(ShContextMenuItemDirective, {read: ShContextMenuItemDirective}) contentChildrenItems;\r\n  @ViewChildren(ShContextMenuItemDirective, {read: ShContextMenuItemDirective}) viewChildrenItems;\r\n\r\n  @ViewChild('menuTemplate', {read: TemplateRef}) menuTemplate;\r\n  @ViewChild('menuContainer', {read: ViewContainerRef}) menuContainer;\r\n\r\n  public overlayRef: OverlayRef;\r\n  subActive: boolean;\r\n\r\n  constructor(private ctxService: ShContextMenuService) {\r\n    this.contentChildrenItems = new QueryList<ShContextMenuItemDirective>();\r\n    this.viewChildrenItems = new QueryList<ShContextMenuItemDirective>();\r\n  }\r\n\r\n  get menuItems(): QueryList<ShContextMenuItemDirective> {\r\n    // when using the ShContextMenuComponent as menu, the ContentChildren is the source\r\n    if (this.contentChildrenItems.length) {\r\n      return this.contentChildrenItems;\r\n    }\r\n\r\n    // when using a custom component as menu the ViewChildren is the source\r\n    return this.viewChildrenItems;\r\n  }\r\n\r\n  onEnter($event: MouseEvent, item: ShContextMenuItemDirective, elm: HTMLElement) {\r\n    this.ctxService.closeSubMenus(this);\r\n    this.setNotActive();\r\n\r\n    if (!item.subMenu || !item.visible) {\r\n      return;\r\n    }\r\n\r\n    this.setActive(item);\r\n    this.ctxService.openSubMenu({\r\n      data: item.context.$implicit,\r\n      targetElement: new ElementRef(elm),\r\n      menu: item.subMenu,\r\n      mouseEvent: $event,\r\n      parentMenu: this\r\n    });\r\n  }\r\n\r\n  private setActive(item: ShContextMenuItemDirective) {\r\n    item.setActive();\r\n    this.subActive = true;\r\n  }\r\n\r\n  onClick(event: MouseEvent, item: ShContextMenuItemDirective) {\r\n    // TODO: move click handling to service\r\n\r\n    if (item.divider) {\r\n      return;\r\n    }\r\n\r\n    if (!item.subMenu && item.closeOnClick) {\r\n      this.ctxService.destroy();\r\n\r\n      item.click.emit({\r\n        data: item.context.$implicit,\r\n        event\r\n      });\r\n    }\r\n  }\r\n\r\n  private callWithContext(fn, fallbackContext, data, event) {\r\n    return fn.call(this.thisContext ? this.thisContext : fallbackContext, {data, event});\r\n  }\r\n\r\n  close(): void {\r\n    this.setNotActive();\r\n    this.menuContainer.detach();\r\n    if(this.overlayRef) {\r\n       this.overlayRef.detach();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.close();\r\n  }\r\n\r\n  setNotActive() {\r\n    this.subActive = false;\r\n    this.menuItems.forEach(i => i.setNotActive());\r\n  }\r\n\r\n  isVisible(item: ShContextMenuItemDirective) {\r\n    if (!item.visible) {\r\n      return true;\r\n    }\r\n\r\n    return this.callWithContext(item.visible, this, item.context.$implicit, null);\r\n  }\r\n}\r\n","import {Directive, ElementRef, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {ShContextMenuService} from './sh-context-menu.service';\r\nimport {ShContextMenuComponent} from './sh-context-menu.component';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {fromEvent} from 'rxjs/observable/fromEvent';\r\nimport {merge} from 'rxjs/observable/merge';\r\n\r\n@Directive({\r\n  selector: '[shAttachMenu]'\r\n})\r\nexport class ShAttachMenuDirective implements OnDestroy, OnInit {\r\n  @Input('shAttachMenu') menu: ShContextMenuComponent;\r\n  @Input('shMenuTriggers') triggers: string[];\r\n  @Input('shMenuData') data: any;\r\n  sub: Subscription;\r\n\r\n  constructor(private ctxService: ShContextMenuService, private elm: ElementRef) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setupEvents();\r\n  }\r\n\r\n  private setupEvents() {\r\n    const observables = [];\r\n\r\n    if (!this.triggers) {\r\n      observables.push(fromEvent(this.elm.nativeElement, 'contextmenu'));\r\n    } else {\r\n      this.triggers.forEach((t) => {\r\n        observables.push(fromEvent(this.elm.nativeElement, t));\r\n      });\r\n    }\r\n\r\n    this.sub = merge(...observables).subscribe(this.openMenu.bind(this));\r\n  }\r\n\r\n  openMenu(event: MouseEvent) {\r\n    this.ctxService.openMenu({\r\n      menu: this.menu,\r\n      mouseEvent: event,\r\n      targetElement: this.elm,\r\n      data: this.data\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sub.unsubscribe();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {ShContextMenuComponent} from './sh-context-menu.component';\r\nimport {ShAttachMenuDirective} from './sh-attach-menu.directive';\r\nimport {ShContextMenuService} from './sh-context-menu.service';\r\nimport {ShContextMenuItemDirective} from './sh-context-menu-item.directive';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShAttachMenuDirective,\r\n    ShContextMenuComponent,\r\n    ShContextMenuItemDirective\r\n  ],\r\n  exports: [\r\n    ShAttachMenuDirective,\r\n    ShContextMenuComponent,\r\n    ShContextMenuItemDirective\r\n  ],\r\n  providers: [\r\n    ShContextMenuService\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule\r\n  ],\r\n  entryComponents: [\r\n    ShContextMenuComponent\r\n  ]\r\n})\r\nexport class ShContextMenuModule {\r\n}\r\n","import {\r\n  Component, OnInit, Input, ViewChild, ComponentRef, ViewContainerRef, ComponentFactoryResolver,\r\n  Output, EventEmitter\r\n} from '@angular/core';\r\nimport { find, findIndex, merge } from 'lodash-es';\r\n\r\n@Component({\r\n  selector: 'app-wizard',\r\n  templateUrl: './wizard.component.html',\r\n  styleUrls: ['./wizard.component.css']\r\n})\r\nexport class WizardComponent implements OnInit {\r\n  @Output() clickCancelBtn = new EventEmitter<any>();\r\n  @Output() clickFinishBtn = new EventEmitter<any>();\r\n\r\n  @Input() title = '';\r\n  @Input() steps = [];\r\n  curStep;\r\n  curStepIndex = 0;\r\n  curComponentRef: ComponentRef<any>;\r\n  // finishedSteps = [];\r\n  @ViewChild('stepContainer', { read: ViewContainerRef }) stepContainer: ViewContainerRef;\r\n\r\n  constructor(private viewContainerRef: ViewContainerRef,\r\n    private componentFactoryResolver: ComponentFactoryResolver) { }\r\n\r\n  ngOnInit() {\r\n    if (this.steps && this.steps.length > 0) {\r\n      this.curStep = this.steps[this.curStepIndex];\r\n      this.createStepComponent(this.steps[this.curStepIndex]);\r\n    }\r\n  }\r\n  createStepComponent(step) {\r\n    this.stepContainer.clear();\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(step.component);\r\n    this.curComponentRef = this.stepContainer.createComponent(componentFactory);\r\n    this.curComponentRef.instance.data = step.data;\r\n\r\n    // æ°å¢æ­¥éª¤\r\n    if (this.curComponentRef.instance.addStep) {\r\n      this.curComponentRef.instance.addStep.subscribe((stepList) => {\r\n\r\n        const curIndex = findIndex(this.steps, this.curStep);\r\n        this.steps.splice(curIndex + 1, 0, ...stepList);\r\n\r\n        this.curStep.nextStep = stepList[0].stepId;\r\n        this.curStep.showFinishBtn = false;\r\n        this.curStep.showNextStepBtn = true;\r\n\r\n      });\r\n    }\r\n    // å é¤æ­¥éª¤\r\n    if (this.curComponentRef.instance.removeStep) {\r\n      this.curComponentRef.instance.removeStep.subscribe((data) => {\r\n        merge(this.curStep, data.curStep);\r\n        data.removeSteps.forEach(removeStep => {\r\n          const index = findIndex(this.steps, removeStep);\r\n          this.steps.splice(index, 1);\r\n        });\r\n      });\r\n    }\r\n    // åæ´æ­¥éª¤\r\n    if (this.curComponentRef.instance.changeStep) {\r\n      this.curComponentRef.instance.changeStep.subscribe((stepList) => {\r\n        stepList.forEach(changeStep => {\r\n          const oldStep = find(this.steps, function (s) { return s.stepId === changeStep.stepId; });\r\n          merge(oldStep, changeStep);\r\n        });\r\n      });\r\n    }\r\n\r\n  }\r\n  jumpStep(nextStep) {\r\n    // å¤æ­è·³è½¬æ¹å\r\n    if (nextStep === this.curStep) {\r\n      return;\r\n    }\r\n    const nextIndex = findIndex(this.steps, function (s) { return s.stepId === nextStep.stepId; });\r\n    if (nextIndex === this.curStepIndex) {\r\n      return;\r\n    }\r\n    if (nextIndex < this.curStepIndex) { // ååè·³\r\n      this.curStep = nextStep;\r\n      this.curStepIndex = nextIndex;\r\n      this.createStepComponent(nextStep);\r\n      return;\r\n    }\r\n    if (nextStep.stepId === this.curStep.nextStep) { // ä¸ä¸æ­¥\r\n      this.nextStep();\r\n      return;\r\n    }\r\n    //  else if (this.finishedSteps.indexOf(nextStep.stepId) > -1) { // å·²å®æçåç»­æ­¥éª¤\r\n    //   this.curStep = nextStep;\r\n    //   this.curStepIndex = nextIndex;\r\n    //   this.createStepComponent(nextStep);\r\n    // }\r\n\r\n  }\r\n  /**\r\n    * ç¹å»ä¸ä¸æ­¥\r\n    */\r\n  lastStep() {\r\n    const self = this;\r\n    this.curStepIndex = findIndex(this.steps, function (s) { return s.nextStep === self.curStep.stepId; });\r\n    this.curStep = this.steps[this.curStepIndex];\r\n    this.createStepComponent(this.curStep);\r\n  }\r\n\r\n  /**\r\n   * ç¹å»ä¸ä¸æ­¥\r\n   */\r\n  nextStep() {\r\n    // æ ¡éª\r\n    const validationFunc = this.curComponentRef.instance.validation;\r\n    if (validationFunc && typeof (validationFunc) === 'function') {\r\n      const result = validationFunc();\r\n      if (!result) { return; }\r\n    }\r\n    // æ§è¡åComponentå®ä¹çnextStepClickäºä»¶\r\n    const clickNextStep = this.curComponentRef.instance.clickNextStep;\r\n    if (clickNextStep && typeof (clickNextStep) === 'function') {\r\n      const result = clickNextStep(); // è¿åå¼æ¥æ¶booleanæobservableç±»å\r\n      if (typeof (result) === 'boolean') {\r\n        this.moveToNextStep(result);\r\n      } else {\r\n        result.subscribe(data => {\r\n          this.moveToNextStep(data);\r\n        });\r\n      }\r\n    } else {\r\n      this.moveToNextStep(true);\r\n    }\r\n  }\r\n\r\n  moveToNextStep(data) {\r\n    if (!data) {\r\n      return;\r\n    }\r\n    const curStep = this.curStep;\r\n    if (curStep.nextStep === '') {\r\n      return;\r\n    }\r\n    // this.finishedSteps.push(curStep.stepId);\r\n    this.curStepIndex = findIndex(this.steps, function (s) { return s.stepId === curStep.nextStep; });\r\n    if (this.curStepIndex > -1) {\r\n      this.curStep = this.steps[this.curStepIndex];\r\n      this.createStepComponent(this.curStep);\r\n    }\r\n\r\n  }\r\n  /**\r\n   * åæ¶\r\n   */\r\n  clickCancel() {\r\n    this.clickCancelBtn.emit();\r\n  }\r\n  /**\r\n   * å®æ\r\n   */\r\n  finishWizard() {\r\n    const validationFunc = this.curComponentRef.instance.validation;\r\n    if (validationFunc && typeof (validationFunc) === 'function') {\r\n      const result = validationFunc();\r\n      if (!result) { return; }\r\n    }\r\n\r\n    const beforeFinish = this.curComponentRef.instance.beforeFinish;\r\n    if (beforeFinish && typeof (beforeFinish) === 'function') {\r\n      const result = beforeFinish();\r\n      if (!result) { return; }\r\n    }\r\n    this.clickFinishBtn.emit();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { WizardComponent } from './component/wizard.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        WizardComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        PerfectScrollbarModule\r\n    ],\r\n    exports: [WizardComponent]\r\n})\r\nexport class WizardModule {\r\n    constructor() { }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { BehaviorSubject, Subject, Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ComboService {\r\n    idField: string;\r\n    valueField: string;\r\n    textField: string;\r\n    mapFields: { [sourceField: string]: string };\r\n    private innerData: any = [];\r\n    get data() {\r\n        return this.innerData;\r\n    }\r\n    set data(val) {\r\n        this.innerData = val;\r\n        this.data$.next(val);\r\n    }\r\n    selectedValue: any;\r\n    selected$ = new Subject<any>();\r\n    isOpen$ = new BehaviorSubject<boolean>(false);\r\n    data$ = new BehaviorSubject<any>('');\r\n    // columns: any;\r\n\r\n    // injectService() {\r\n    //     if (this.injector && !this.comboHttp) {\r\n    //         this.lookupUtils = this.injector.get(LookupUtils, null);\r\n    //         if (this.displayType.indexOf('LOOKUP') > -1) {\r\n    //             this.comboHttp = this.injector.get(ServerSideToken, null);\r\n    //         } else {\r\n    //             this.comboHttp = this.injector.get(ComboServerSideToken, null);\r\n    //         }\r\n    //     }\r\n    // }\r\n    toBoolean(value: any): boolean {\r\n        return value != null && `${value}` !== 'false';\r\n    }\r\n    selectItem(data: any, index?: number) {\r\n        this.isOpen$.next(false);\r\n        this.selectedValue = data;\r\n        this.selected$.next(this.selectedValue);\r\n    }\r\n    unSelectItem(data: any) {\r\n        this.selectedValue = null;\r\n        this.selected$.next(null);\r\n    }\r\n    isSelect(id: any) {\r\n\r\n        return false;\r\n    }\r\n\r\n    // loadData(data: any, selectValues: string = '', callback) {\r\n    //     if (data) {\r\n    //         if (selectValues) {\r\n    //             if (selectValues.split) {\r\n    //                 // key æ¯å­ç¬¦ä¸²ï¼å¯è½æ¯æ¼èµ·æ¥ç\r\n    //                 const selectedItems = selectValues.split(',').map(val => {\r\n    //                     return callback(data, val);\r\n    //                 });\r\n    //\r\n    //                 this.selections = selectedItems;\r\n    //             } else {\r\n    //                 // keyä¸å¯split\r\n    //                 this.selections = [selectValues];\r\n    //             }\r\n    //         } else {\r\n    //             this.selections = [];\r\n    //         }\r\n    //         // this.selections$.next(this.selections);\r\n    //         // const _data = this.initData(data);\r\n    //         // this.updateState({...this._state, data: _data});\r\n    //     } else {\r\n    //         // this.updateState({ data: [], selections: [] });\r\n    //     }\r\n    // }\r\n    // filterData(val: string, filed: any = 'text') {\r\n    //     if (val) {\r\n    //         const data = this.data\r\n    //             ? this.data.filter(item => {\r\n    //                 if (item[filed]) {\r\n    //                     return String(item[filed]).indexOf(val) > -1;\r\n    //                 } else if (item.data && item.data[filed]) {\r\n    //                     return String(item.data[filed]).indexOf(val) > -1;\r\n    //                 }\r\n    //               })\r\n    //             : [];\r\n    //         this.data$.next(data);\r\n    //     }\r\n    // }\r\n    getSelected() {\r\n        return this.selectedValue;\r\n    }\r\n\r\n    // filterSelections(displayText: string) {\r\n    //     if (displayText && this.selections) {\r\n    //         const selections = displayText\r\n    //             .split(',')\r\n    //             .map(val => {\r\n    //                 return this.selections.find(d => d[this.textField] === val);\r\n    //             })\r\n    //             .filter(val => !!val);\r\n    //         this.selectedValues = this.getValue(this.valueField, selections);\r\n    //         this.selections = selections;\r\n    //     }\r\n    // }\r\n\r\n    // clearSelections() {\r\n    //     this.selections = [];\r\n    // }\r\n\r\n    getValue(prop: string, selections?: any): any {\r\n        // selections = selections ? selections : this.selections;\r\n        // if (selections && selections.length) {\r\n        //     // if (this.mapFields) {\r\n        //     //     const helpFields = Object.keys(this.mapFields);\r\n        //     //     helpFields.forEach( (f: any) => {\r\n        //     //         if (this.mapFields[f] === prop) {\r\n        //     //             prop = f;\r\n        //     //             return;\r\n        //     //         }\r\n        //     //     });\r\n        //     // }\r\n        //\r\n        //     // if (selections.length === 1) {\r\n        //     //     return this.getValueByObj(prop, selections[0]);\r\n        //     // }\r\n        //\r\n        //     const tmp = selections\r\n        //         .map(item => {\r\n        //             return this.getValueByObj(prop, item);\r\n        //         })\r\n        //         .join(',');\r\n        //     return tmp;\r\n        // }\r\n        if (this.selectedValue) {\r\n            return this.getValueByObj(prop, this.selectedValue);\r\n        }\r\n        return '';\r\n    }\r\n    getValueByObj(field: string, data: any) {\r\n        if (!data) {\r\n            return '';\r\n        }\r\n        let resultVal = '';\r\n        if (field.indexOf('.') === -1) {\r\n            resultVal = data[field];\r\n        } else {\r\n            resultVal = field.split('.').reduce((obj, key) => {\r\n                if (obj) {\r\n                    return obj[key];\r\n                } else {\r\n                    return null;\r\n                }\r\n            }, data);\r\n        }\r\n        return resultVal;\r\n    }\r\n\r\n    // initData() {\r\n    //     // this.loadDataTable(this.data || []);\r\n    //     // switch (this.displayType) {\r\n    //     //     case 'TreeList': {\r\n    //     //         this.getData().subscribe(data => this.loadDataTree(data));\r\n    //     //         break;\r\n    //     //     }\r\n    //     //     case 'LIST': {\r\n    //     //         // List\r\n    //     //         this.getData().subscribe(data => this.loadDataTable(data));\r\n    //     //         break;\r\n    //     //     }\r\n    //     //     // case 'LOOKUPLIST': {\r\n    //     //     //     // List\r\n    //     //     //     this.getData().subscribe(data =>\r\n    //     //     //         this.loadLookUpDataTable(data)\r\n    //     //     //     );\r\n    //     //     //     break;\r\n    //     //     // }\r\n    //     //     // case 'LOOKUPTREELIST': {\r\n    //     //     //     // List\r\n    //     //     //     this.getData().subscribe(data => this.loadLookUpDataTree(data));\r\n    //     //     //     break;\r\n    //     //     // }\r\n    //     // }\r\n    // }\r\n\r\n    // getData(): Observable<any> {\r\n    //     // if (this.uri) {\r\n    //     //     const params = {};\r\n    //     //     this.showLoading();\r\n    //     //     if (this.comboHttp) {\r\n    //     //         return this.comboHttp.getData(this.uri);\r\n    //     //     } else {\r\n    //     //         return this.http.get(this.uri);\r\n    //     //     }\r\n    //     // } else {\r\n    //         if (this.data) {\r\n    //             return of(this.data);\r\n    //         } else {\r\n    //             return of([]);\r\n    //         }\r\n    //     // }\r\n    // }\r\n    // loadDataTable(data: any) {\r\n    //     if (data instanceof Array) {\r\n    //         this.data = data;\r\n    //     } else {\r\n    //         this.data = data.returnValue;\r\n    //     }\r\n    //     this.loadData(this.data, this.selectedValues, (dataArr, val) => {\r\n    //         // tslint:disable-next-line:triple-equals\r\n    //         return dataArr.find(d => d[this.idField] + '' == val);\r\n    //     });\r\n    //     // this.closeLoading();\r\n    // }\r\n    // loadDataTree(data: any) {\r\n    //     if (data instanceof Array) {\r\n    //         this.data = data;\r\n    //     } else {\r\n    //         this.data = data.returnValue;\r\n    //     }\r\n    //     this.loadData(this.data, this.selectedValues, (dataArr, val) => {\r\n    //         return eachData(dataArr, val, this.idField);\r\n    //         function eachData(paramData, paramVal, idField) {\r\n    //             let rtnData: any = '';\r\n    //             paramData.find(d => {\r\n    //                 // tslint:disable-next-line:triple-equals\r\n    //                 if (d.data[idField] == paramVal) {\r\n    //                     rtnData = d.data;\r\n    //                     return true;\r\n    //                 } else if (d.children && d.children.length) {\r\n    //                     rtnData = eachData(d.children, paramVal, idField);\r\n    //                 } else {\r\n    //                     return false;\r\n    //                 }\r\n    //             });\r\n    //             return rtnData;\r\n    //         }\r\n    //     });\r\n    //     // this.closeLoading();\r\n    // }\r\n    // loadLookUpDataTable(resData: any) {\r\n    //     if (resData.returnValue) {\r\n    //         resData = resData.returnValue;\r\n    //     }\r\n    //     this.columns = resData.columns;\r\n    //     this.pageInfo = resData.pageInfo;\r\n    //     this.data = resData.items;\r\n    //     this.loadData(this.data, this.selectedValues, (dataArr, val) => {\r\n    //         // tslint:disable-next-line: triple-equals\r\n    //         return dataArr.find(d => d[this.idField] + '' == val);\r\n    //     });\r\n    //     this.closeLoading();\r\n    // }\r\n    // loadLookUpDataTree(resData: any) {\r\n    //     if (resData.returnValue) {\r\n    //         resData = resData.returnValue;\r\n    //     }\r\n    //     this.columns = resData.columns;\r\n    //     const treeInfo = resData.treeInfo;\r\n    //     // tslint:disable-next-line: no-string-literal\r\n    //     if (!treeInfo['treeDataIsInit']) {\r\n    //         if (treeInfo.layerType.toLowerCase() === 'pathcode') {\r\n    //             this.data = this.lookupUtils.makeTree(resData.items, treeInfo);\r\n    //         } else {\r\n    //             this.data = this.lookupUtils.makeTreeWithParentID(\r\n    //                 resData.items,\r\n    //                 '',\r\n    //                 `${treeInfo.dataField}.${treeInfo.parentField}`,\r\n    //                 this.idField\r\n    //             );\r\n    //         }\r\n    //     }\r\n    //     this.loadData(this.data, this.selectedValues, (dataArr, val) => {\r\n    //         return eachData(dataArr, val, this.idField);\r\n    //         function eachData(paramData, paramVal, idField) {\r\n    //             let rtnData: any = '';\r\n    //             paramData.find(d => {\r\n    //                 // tslint:disable-next-line:triple-equals\r\n    //                 if (d.data[idField] == paramVal) {\r\n    //                     rtnData = d.data;\r\n    //                     return true;\r\n    //                 } else if (d.children && d.children.length) {\r\n    //                     rtnData = eachData(d.children, paramVal, idField);\r\n    //                 } else {\r\n    //                     return false;\r\n    //                 }\r\n    //             });\r\n    //             return rtnData;\r\n    //         }\r\n    //     });\r\n    //     this.closeLoading();\r\n    // }\r\n    // private showLoading() {\r\n    //     this.loading = this.loadingService.show();\r\n    // }\r\n    // closeLoading() {\r\n    //     if (this.loading) {\r\n    //         this.loading.close();\r\n    //         this.loading = null;\r\n    //     }\r\n    // }\r\n}\r\n","import {\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ElementRef,\r\n    ChangeDetectorRef,\r\n    Renderer2,\r\n    ViewChild,\r\n    AfterViewInit,\r\n    OnDestroy,\r\n    Inject,\r\n    Injector, Component, ChangeDetectionStrategy, ViewEncapsulation, forwardRef\r\n} from '@angular/core';\r\nimport { Subject, fromEvent, interval } from 'rxjs';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { takeUntil, filter, skip, debounceTime, throttle } from 'rxjs/operators';\r\nimport { ComboService } from './combo.service';\r\nimport { InputGroupComponent } from '@farris/ui-input-group';\r\nimport { SelectItem } from './combo.interface';\r\n\r\nlet nextUniqueId = 0;\r\n\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'farris-editable-combo-list',\r\n    templateUrl: './combo-list.component.html',\r\n    styleUrls: ['./combo-list.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => ComboListComponent),\r\n            multi: true\r\n        },\r\n        ComboService\r\n    ]\r\n})\r\nexport class ComboListComponent implements OnInit, AfterViewInit, OnDestroy, ControlValueAccessor {\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() editable = true;\r\n    @Input() placeholder = 'è¯·éæ©';\r\n    @Input() panelWidth = 300;\r\n    @Input() panelHeight = 300;\r\n    @Input() autoWidth = true;\r\n    @Input() enableClear = true;\r\n    @Input() mappingField: string;\r\n    @Input()\r\n    // set data(val: any) {\r\n    //     this.comboService.data = val;\r\n    // }\r\n    // get data() {\r\n    //     return this.comboService.data;\r\n    // }\r\n    data: any;\r\n    @Input()\r\n    set idField(val: string) {\r\n        this.comboService.idField = val;\r\n    }\r\n    get idField() {\r\n        return this.comboService.idField;\r\n    }\r\n    @Input()\r\n    set valueField(val: string) {\r\n        this.comboService.valueField = val;\r\n    }\r\n    get valueField() {\r\n        return this.comboService.valueField;\r\n    }\r\n    @Input()\r\n    set textField(val: string) {\r\n        this.comboService.textField = val;\r\n    }\r\n    get textField() {\r\n        return this.comboService.textField;\r\n    }\r\n\r\n    @Output() showPanel = new EventEmitter();\r\n    @Output() hidePanel = new EventEmitter();\r\n    @Output() clear = new EventEmitter();\r\n    @Output() valueChange = new EventEmitter<string>();\r\n    @Output() selectChange = new EventEmitter<any>();\r\n\r\n    // tslint:disable-next-line:variable-name\r\n    _cmbPanel: ElementRef = null;\r\n    @ViewChild('comboPanel') set cmbPanel(cmp: ElementRef) {\r\n        this._cmbPanel = cmp;\r\n        this.comboPanelCreated$.next(cmp);\r\n    }\r\n    @ViewChild('input') input: InputGroupComponent;\r\n    isOpen = false;\r\n    groupIcon = '<span class=\"f-icon f-icon-arrow-60-down\"></span>';\r\n    private comboPanelCreated$ = new Subject();\r\n    private destroy$ = new Subject();\r\n    private documentClickEvent: () => void;\r\n    ngControl: any = null;\r\n    displayText = '';\r\n    private value: any;\r\n\r\n    onChange: (value: string | string[]) => void = () => null;\r\n    onTouched: () => void = () => null;\r\n\r\n    constructor(\r\n        protected el: ElementRef,\r\n        protected cdr: ChangeDetectorRef,\r\n        @Inject(DOCUMENT) protected document: any,\r\n        protected render: Renderer2,\r\n        protected comboService: ComboService,\r\n        protected injector: Injector\r\n    ) {\r\n        const container = this.creatContainer();\r\n        const panel = this.creatPanel(container);\r\n        this.comboPanelCreated$\r\n            .pipe(\r\n                takeUntil(this.destroy$),\r\n                filter(v => !!v)\r\n            )\r\n            .subscribe((cmp: ElementRef) => {\r\n                panel.appendChild(cmp.nativeElement);\r\n                this.updatePosition();\r\n            });\r\n        this.destroy$.subscribe(() => {\r\n            // this.render.removeChild('body', container);\r\n            if (document.body.contains(container) && container.contains(panel)) {\r\n                container.removeChild(panel);\r\n            }\r\n            nextUniqueId = 0;\r\n        });\r\n        this.comboService.isOpen$\r\n            .pipe(\r\n                takeUntil(this.destroy$),\r\n                skip(1)\r\n            )\r\n            .subscribe(val => {\r\n                if (val) {\r\n                    this.documentClickEvent = this.render.listen('document', 'click', (event: any) => {\r\n                        if (\r\n                            !this.el.nativeElement.contains(event.target) &&\r\n                            (this._cmbPanel && !this.contains(this._cmbPanel, event))\r\n                        ) {\r\n                            this.isOpen = false;\r\n                            this.removeDocumentListener();\r\n                            this.cdr.markForCheck();\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.removeDocumentListener();\r\n                }\r\n                this.isOpen = !!val;\r\n                this.cdr.markForCheck();\r\n            });\r\n        this.comboService.selected$.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n            this.displayText = this.comboService.getValue(this.textField);\r\n            this.value = this.comboService.getValue(this.idField);\r\n            if (this.data && this.data.length > 0) {\r\n                this.onChange(this.value);\r\n                this.valueChange.emit(this.value);\r\n            } else {\r\n                this.updateMappingFieldValue();\r\n                this.onChange(this.displayText);\r\n                this.valueChange.emit(this.displayText);\r\n            }\r\n            this.cdr.detectChanges();\r\n            // this.focus();\r\n            // this.blur();\r\n        });\r\n    }\r\n    onClick() {\r\n        this.comboService.isOpen$.next(!this.isOpen);\r\n    }\r\n    private removeDocumentListener() {\r\n        if (this.documentClickEvent) {\r\n            this.documentClickEvent();\r\n            this.documentClickEvent = null;\r\n        }\r\n    }\r\n    onBlur(e) {\r\n        this.onTouched();\r\n    }\r\n    blur() {\r\n        this.input.textbox.nativeElement.blur();\r\n    }\r\n    focus() {\r\n        this.input.textbox.nativeElement.focus();\r\n    }\r\n    onClear() {\r\n        this.value = '';\r\n        this.comboService.selectedValue = null;\r\n        this.comboService.isOpen$.next(false);\r\n        this.comboService.selected$.next([]);\r\n        // this.updateMappingFieldValue();\r\n        // this.onChange('');\r\n        // this.onTouched();\r\n        this.clear.emit();\r\n    }\r\n    updateMappingFieldValue() {\r\n        if (\r\n            this.ngControl &&\r\n            this.ngControl.formDirective &&\r\n            this.ngControl.formDirective.form &&\r\n            this.ngControl.formDirective.form.bindingData\r\n        ) {\r\n            const bindingData = this.ngControl.formDirective.form.bindingData;\r\n            const bindingPath = this.ngControl.formDirective.form.bindingPath;\r\n            let pathArr = [];\r\n            if (bindingPath) {\r\n                pathArr = bindingPath.split('/').filter(n => n !== '');\r\n            }\r\n            this.mappingField = this.mappingField ? this.mappingField : '';\r\n            bindingData.setValue(pathArr.concat(this.mappingField.split('.')), this.value, true, true);\r\n        }\r\n    }\r\n    updateSelectedValues() {\r\n        if (\r\n            this.ngControl &&\r\n            this.ngControl.formDirective &&\r\n            this.ngControl.formDirective.form &&\r\n            this.ngControl.formDirective.form.bindingData\r\n        ) {\r\n            const bindingData = this.ngControl.formDirective.form.bindingData;\r\n            const bindingPath = this.ngControl.formDirective.form.bindingPath;\r\n            let pathArr = [];\r\n            if (bindingPath) {\r\n                pathArr = bindingPath.split('/').filter(n => n !== '');\r\n            }\r\n            this.mappingField = this.mappingField ? this.mappingField : '';\r\n            this.value = bindingData.getValue(pathArr.concat(this.mappingField.split('.')));\r\n        }\r\n    }\r\n    onValueChange(val) {\r\n        this.value = val;\r\n        this.onChange(val);\r\n        this.valueChange.emit(val);\r\n        // if (!this.multiSelect) {\r\n        //     this.comboService.serachValue$.next(val);\r\n        // }\r\n        // this.comboService.filterSelections(val);\r\n        // this.valueChange.emit(val);\r\n        // if (!this.uri && this.data && this.data.length > 0) {\r\n        //     this.onChange(this.selectedValues);\r\n        // } else {\r\n        //     this.onChange(this.displayText);\r\n        // }\r\n        // this.updateMappingFieldValue();\r\n    }\r\n    updatePosition() {\r\n        if (this.autoWidth) {\r\n            const { width } = this.input.el.nativeElement.getBoundingClientRect();\r\n            this.panelWidth = width ? width : this.panelWidth;\r\n        }\r\n        let { left, top } = this.el.nativeElement.getBoundingClientRect();\r\n        if (top + this.panelHeight > window.innerHeight && top - this.panelHeight > 0) {\r\n            top = top - this.panelHeight - 27;\r\n        }\r\n        return {\r\n            left: left + 'px',\r\n            top: top + 27 + 'px',\r\n            width: this.panelWidth + 'px',\r\n            height: this.panelHeight + 'px'\r\n        };\r\n    }\r\n    contains(el: ElementRef, event: any) {\r\n        return el.nativeElement.contains(event.target);\r\n    }\r\n    creatContainer() {\r\n        let container = this.document.querySelector('.overlay-container');\r\n        if (!container) {\r\n            container = this.document.createElement('div');\r\n            container.classList.add('overlay-container');\r\n        }\r\n        this.document.body.appendChild(container);\r\n\r\n        return container;\r\n    }\r\n    creatPanel(host: HTMLElement) {\r\n        const pane = this.document.createElement('div');\r\n\r\n        pane.id = `overlay-${nextUniqueId++}`;\r\n        pane.classList.add('overlay-pane');\r\n        host.appendChild(pane);\r\n\r\n        return pane;\r\n    }\r\n    writeValue(value: any): void {\r\n        this.displayText = value;\r\n        this.cdr.markForCheck();\r\n    }\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n        this.cdr.markForCheck();\r\n    }\r\n    ngOnInit() {}\r\n    ngAfterViewInit() {\r\n        // tslint:disable-next-line: deprecation\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n        if (!this.valueField && this.idField) {\r\n            this.valueField = this.idField;\r\n        }\r\n        fromEvent(window, 'resize')\r\n            .pipe(\r\n                debounceTime(100),\r\n                throttle(ev => interval(100)),\r\n                takeUntil(this.destroy$)\r\n            )\r\n            .subscribe(() => {\r\n                const { width } = this.input.el.nativeElement.getBoundingClientRect();\r\n                this.panelWidth = width;\r\n                this.comboService.isOpen$.next(false);\r\n            });\r\n        // this.comboService.injectService();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    onSelect(value: SelectItem) {\r\n        const {data, index} = {...value};\r\n        this.comboService.selectItem(data, index);\r\n        this.selectChange.emit({data, index});\r\n        this.focus();\r\n    }\r\n\r\n    onUnSelected(value: SelectItem) {\r\n        const {data} = {...value};\r\n        this.comboService.unSelectItem(data);\r\n        // console.log(data);\r\n        this.focus();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ComboListComponent } from './combo-list.component';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { DatalistModule } from '@farris/ui-datalist';\r\n\r\n@NgModule({\r\n    declarations: [ ComboListComponent ],\r\n    imports: [ CommonModule, FormsModule, InputGroupModule, DatalistModule ],\r\n    exports: [ ComboListComponent ]\r\n})\r\nexport class ComboListModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Configuration service for the Popover directive.\r\n * You can inject this service, typically in your root component, and customize\r\n * the values of its properties in order to provide default values for all the\r\n * popovers used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class PopoverConfig {\r\n  /**\r\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\r\n   */\r\n  placement = 'top';\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n  triggers = 'click';\r\n\r\n  outsideClick = false;\r\n  /**\r\n   * A selector specifying the element the popover should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n  container: string;\r\n}\r\n","import { ChangeDetectionStrategy, Input, Component } from '@angular/core';\r\nimport { PopoverConfig } from './popover.config';\r\nimport { isBs3 } from '../utils/theme-provider';\r\n\r\n@Component({\r\n  selector: 'popover-container',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  // tslint:disable-next-line\r\n  host: {\r\n    '[class]':\r\n      '\"popover in popover-\" + placement + \" \" + \"bs-popover-\" + placement + \" \" + placement + \" \" + containerClass',\r\n    '[class.show]': '!isBs3',\r\n    role: 'tooltip',\r\n    style: 'display:block;'\r\n  },\r\n  styles: [\r\n    `\r\n    :host.bs-popover-top .arrow, :host.bs-popover-bottom .arrow {\r\n      left: 50%;\r\n      margin-left: -8px;\r\n    }\r\n    :host.bs-popover-left .arrow, :host.bs-popover-right .arrow {\r\n      top: 50%;\r\n      margin-top: -8px;\r\n    }\r\n  `\r\n  ],\r\n  templateUrl: './popover-container.component.html'\r\n})\r\nexport class PopoverContainerComponent {\r\n  @Input() placement: string;\r\n  @Input() title: string;\r\n  containerClass: string;\r\n\r\n  get isBs3(): boolean {\r\n    return isBs3();\r\n  }\r\n\r\n  constructor(config: PopoverConfig) {\r\n    Object.assign(this, config);\r\n  }\r\n}\r\n","import {\r\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\r\n  Renderer2, TemplateRef, ViewContainerRef\r\n} from '@angular/core';\r\nimport { PopoverConfig } from './popover.config';\r\nimport { ComponentLoader, ComponentLoaderFactory } from '../utils/component-loader/index';\r\nimport { PopoverContainerComponent } from './popover-container.component';\r\n\r\n/**\r\n * A lightweight, extensible directive for fancy popover creation.\r\n */\r\n@Directive({selector: '[popover]', exportAs: 'bs-popover'})\r\nexport class PopoverDirective implements OnInit, OnDestroy {\r\n  /**\r\n   * Content to be displayed as popover.\r\n   */\r\n  @Input() popover: string | TemplateRef<any>;\r\n  /**\r\n   * Context to be used if popover is a template.\r\n   */\r\n  @Input() popoverContext: any;\r\n  /**\r\n   * Title of a popover.\r\n   */\r\n  @Input() popoverTitle: string;\r\n  /**\r\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n   */\r\n  @Input() placement: 'top' | 'bottom' | 'left' | 'right' | 'auto';\r\n  /**\r\n   * Close popover on outside click\r\n   */\r\n  @Input() outsideClick = false;\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n  @Input() triggers: string;\r\n  /**\r\n   * A selector specifying the element the popover should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n  @Input() container: string;\r\n\r\n  /**\r\n   * Css class for popover container\r\n   */\r\n  @Input() containerClass = '';\r\n\r\n  /**\r\n   * Returns whether or not the popover is currently being shown\r\n   */\r\n  @Input()\r\n  get isOpen(): boolean {\r\n    return this._popover.isShown;\r\n  }\r\n\r\n  set isOpen(value: boolean) {\r\n    if (value) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emits an event when the popover is shown\r\n   */\r\n  @Output() onShown: EventEmitter<any>;\r\n  /**\r\n   * Emits an event when the popover is hidden\r\n   */\r\n  @Output() onHidden: EventEmitter<any>;\r\n\r\n  private _popover: ComponentLoader<PopoverContainerComponent>;\r\n  private _isInited = false;\r\n\r\n  constructor(_elementRef: ElementRef,\r\n              _renderer: Renderer2,\r\n              _viewContainerRef: ViewContainerRef,\r\n              _config: PopoverConfig,\r\n              cis: ComponentLoaderFactory) {\r\n    this._popover = cis\r\n      .createLoader<PopoverContainerComponent>(\r\n        _elementRef,\r\n        _viewContainerRef,\r\n        _renderer\r\n      )\r\n      .provide({provide: PopoverConfig, useValue: _config});\r\n    Object.assign(this, _config);\r\n    this.onShown = this._popover.onShown;\r\n    this.onHidden = this._popover.onHidden;\r\n\r\n    // fix: no focus on button on Mac OS #1795\r\n    if (typeof window !== 'undefined') {\r\n      _elementRef.nativeElement.addEventListener('click', function () {\r\n        try {\r\n          _elementRef.nativeElement.focus();\r\n        } catch (err) {\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens an elementâs popover. This is considered a âmanualâ triggering of\r\n   * the popover.\r\n   */\r\n  show(): void {\r\n    if (this._popover.isShown || !this.popover) {\r\n      return;\r\n    }\r\n\r\n    this._popover\r\n      .attach(PopoverContainerComponent)\r\n      .to(this.container)\r\n      .position({attachment: this.placement})\r\n      .show({\r\n        content: this.popover,\r\n        context: this.popoverContext,\r\n        placement: this.placement,\r\n        title: this.popoverTitle,\r\n        containerClass: this.containerClass\r\n      });\r\n    this.isOpen = true;\r\n  }\r\n\r\n  /**\r\n   * Closes an elementâs popover. This is considered a âmanualâ triggering of\r\n   * the popover.\r\n   */\r\n  hide(): void {\r\n    if (this.isOpen) {\r\n      this._popover.hide();\r\n      this.isOpen = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles an elementâs popover. This is considered a âmanualâ triggering of\r\n   * the popover.\r\n   */\r\n  toggle(): void {\r\n    if (this.isOpen) {\r\n      return this.hide();\r\n    }\r\n\r\n    this.show();\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    // fix: seems there are an issue with `routerLinkActive`\r\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\r\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\r\n    if (this._isInited) {\r\n      return;\r\n    }\r\n    this._isInited = true;\r\n\r\n    this._popover.listen({\r\n      triggers: this.triggers,\r\n      outsideClick: this.outsideClick,\r\n      show: () => this.show()\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this._popover.dispose();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// import { ComponentLoaderFactory } from '../utils/component-loader';\r\n// import { PositioningService } from '../utils/positioning';\r\nimport { PopoverConfig } from './popover.config';\r\nimport { PopoverDirective } from './popover.directive';\r\nimport { PopoverContainerComponent } from './popover-container.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PopoverDirective, PopoverContainerComponent],\r\n  exports: [PopoverDirective],\r\n  // providers: [PopoverConfig, ComponentLoaderFactory, PositioningService],\r\n  entryComponents: [PopoverContainerComponent]\r\n})\r\nexport class PopoverModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: PopoverModule,\r\n      providers: [PopoverConfig]\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Component, OnInit, Input, Output, OnChanges, SimpleChanges,\r\n  EventEmitter, ComponentFactoryResolver, Injector, ElementRef, ApplicationRef, TemplateRef, ViewChild, ViewContainerRef\r\n} from '@angular/core';\r\nimport { PropertyEntity } from '../../entity/property-entity';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { NotifyService, NotifyOptions } from '@farris/ui-notify';\r\n\r\n@Component({\r\n  selector: 'webide-property-item',\r\n  templateUrl: './property-item.component.html',\r\n  styleUrls: ['./property-item.component.css']\r\n})\r\nexport class PropertyItemComponent implements OnInit, OnChanges {\r\n  @Input() elementConfig: PropertyEntity;\r\n  @Input() elementValue: any;\r\n  @Output() valueChanged = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  // åä¸è§¦åæ´ä½é¢æ¿å·æ°\r\n  @Output() triggerRefreshPanel = new EventEmitter<any>();\r\n\r\n  // æ§ä»¶å®¹å¨\r\n  @ViewChild('propItem', { read: ViewContainerRef }) propItem: ViewContainerRef;\r\n\r\n  // æ§ä»¶æ¨¡æ¿\r\n  @ViewChild('stringTmpl') stringTmpl: TemplateRef<any>;\r\n  @ViewChild('numberTmpl') numberTmpl: TemplateRef<any>;\r\n  @ViewChild('selectTmpl') selectTmpl: TemplateRef<any>;\r\n  @ViewChild('boolOrExpTmpl') boolOrExpTmpl: TemplateRef<any>;\r\n  @ViewChild('multiSelectTmpl') multiSelectTmpl: TemplateRef<any>;\r\n  @ViewChild('dateTmpl') dateTmpl: TemplateRef<any>;\r\n  @ViewChild('datetimeTmpl') datetimeTmpl: TemplateRef<any>;\r\n  @ViewChild('modalTmpl') modalTmpl: TemplateRef<any>;\r\n\r\n\r\n  // æ§ä»¶ç±»å--ç¨äºåºåå¨æåæ´æ§ä»¶ç±»åçåºæ¯ï¼éè¦éæ°æ¸²ææ¨¡æ¿\r\n  propertyOldType: string;\r\n\r\n  // æ¨¡ææ¡ç±»åçå±æ§:å±æ§æ¡çå±ç¤ºå¼\r\n  elementShowValue: any;\r\n\r\n  // ä¸ææ¡çæä¸¾é¡¹\r\n  selectOptions = [];\r\n\r\n  // æ§ä»¶ç±»å\r\n  itemType = 'string';\r\n\r\n  // æ°å­æ§ä»¶ç²¾åº¦\r\n  precision = 2;\r\n\r\n  // å·²åºå¼\r\n  showClearButton = false;\r\n\r\n  // é»è®¤å¼\r\n  showDefaultValue = false;\r\n\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver, private modalService: BsModalService,\r\n    private injector: Injector, private notifyServ: NotifyService, public el: ElementRef) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.refresh();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.refresh();\r\n  }\r\n\r\n  refresh() {\r\n\r\n    let tmpl: TemplateRef<any>;\r\n    // æ¾ç¤ºæ ¼å¼\r\n    const propertyType = this.itemType = this.elementConfig.propertyType;\r\n    switch (propertyType) {\r\n      case 'boolean': {\r\n        this.itemType = 'select';\r\n        this.selectOptions = [{ key: true, value: 'true' }, { key: false, value: 'false' }];\r\n\r\n        tmpl = this.selectTmpl;\r\n        break;\r\n      }\r\n      case 'select': {\r\n        this.selectOptions = this.elementConfig.iterator || [];\r\n\r\n        tmpl = this.selectTmpl;\r\n        break;\r\n      }\r\n      case 'multiSelect': {\r\n        this.selectOptions = this.elementConfig.iterator || [];\r\n        if (this.elementConfig.multiSelectDataType === 'array') {\r\n          this.elementValue = this.elementValue ? this.elementValue.toString() : '';\r\n        }\r\n\r\n        tmpl = this.multiSelectTmpl;\r\n        break;\r\n      }\r\n      case 'modal': {\r\n        this._convertModalShowValue(this.elementValue);\r\n\r\n        tmpl = this.modalTmpl;\r\n        break;\r\n      }\r\n      case 'number': {\r\n        this.precision = this.elementConfig.decimals === undefined ? 2 : this.elementConfig.decimals;\r\n\r\n        tmpl = this.numberTmpl;\r\n        break;\r\n      }\r\n      case 'string': {\r\n        if (this.elementConfig.readonly) {\r\n          this._convertModalShowValue(this.elementValue);\r\n        }\r\n        tmpl = this.stringTmpl;\r\n        break;\r\n      }\r\n      case 'boolOrExp': {\r\n        this.selectOptions = [{ key: true, value: 'true' }, { key: false, value: 'false' }];\r\n\r\n        tmpl = this.boolOrExpTmpl;\r\n        break;\r\n      }\r\n      case 'date': {\r\n        tmpl = this.dateTmpl;\r\n        break;\r\n      }\r\n      case 'datetime': {\r\n        tmpl = this.datetimeTmpl;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // é»è®¤å¼\r\n    if (Object.keys(this.elementConfig).indexOf('defaultValue') > -1) {\r\n      if (this.elementValue === undefined || this.elementValue === null) {\r\n        this.elementValue = this.elementConfig.defaultValue;\r\n      }\r\n      this.showDefaultValue = true;\r\n    }\r\n\r\n    // æ¯å¦æ¾ç¤º\r\n    if (Object.keys(this.elementConfig).indexOf('visible') < 0) {\r\n      this.elementConfig.visible = true;\r\n    }\r\n\r\n    // åå»ºæ¨¡æ¿\r\n    if (tmpl && (this.propItem.length === 0 || this.propertyOldType !== this.itemType)) {\r\n      this.propItem.clear();\r\n      this.propItem.createEmbeddedView(tmpl);\r\n      this.propertyOldType = this.itemType;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * é¼ æ ç§»å¥ --å·²åºå¼\r\n   */\r\n  onmouseover() {\r\n    if (!this.elementConfig.showClearButton) {\r\n      return;\r\n    }\r\n    if (!this.showClearButton) {\r\n      this.showClearButton = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * é¼ æ ç¦»å¼ --å·²åºå¼\r\n   */\r\n  onmouseleave() {\r\n    if (!this.elementConfig.showClearButton) {\r\n      return;\r\n    }\r\n    this.showClearButton = false;\r\n  }\r\n\r\n\r\n  /**\r\n   * æ¸é¤æ¨¡ææ¡åå®¹\r\n   */\r\n  modalClear() {\r\n    // æ°æ®è½¬æ¢\r\n    this._convertModalShowValue(null);\r\n\r\n    // è¥ææ¸é¤åäºä»¶ï¼åæ§è¡æ¹æ³\r\n    if (Object.keys(this.elementConfig).indexOf('afterClickClearButton') > -1 &&\r\n      typeof (this.elementConfig.afterClickClearButton) === 'function') {\r\n      this.elementConfig.afterClickClearButton(this.elementValue);\r\n    }\r\n\r\n    const changeObject = {\r\n      propertyID: this.elementConfig.propertyID,\r\n      propertyValue: null\r\n    };\r\n    this.submitModal.emit({ changeObject, parameters: null });\r\n  }\r\n\r\n  /**\r\n   * åæ´å±æ§å¼\r\n   */\r\n  changeValue(e) {\r\n    let value = this.elementValue;\r\n\r\n    // ææ¬æ§ä»¶éå¶è¾å¥å­ç¬¦\r\n    if (value && this.elementConfig.propertyType === 'string' && !this.elementConfig.readonly &&\r\n      this.elementConfig.notAllowedChars && this.elementConfig.notAllowedChars.length) {\r\n      this.elementConfig.notAllowedChars.forEach((c: any) => {\r\n        if (typeof (c) === 'object') {\r\n          value = value.replace(c, '');\r\n        } else if (typeof (c) === 'string') {\r\n          value = value.replace(new RegExp(c, 'g'), '');\r\n        }\r\n\r\n      });\r\n      this.elementValue = value;\r\n    }\r\n\r\n    // å¤éæ§ä»¶è¿åæ°ç»æ ¼å¼çæ°æ®\r\n    if (this.itemType === 'multiSelect' && this.elementConfig.multiSelectDataType === 'array') {\r\n      value = this.elementValue ? this.elementValue.split(',') : '';\r\n    }\r\n\r\n    const changeObject = {\r\n      propertyID: this.elementConfig.propertyID,\r\n      propertyValue: value\r\n    };\r\n    this.valueChanged.emit({ changeObject });\r\n    if (this.elementConfig.refreshPanelAfterChanged) {\r\n      this.triggerRefreshPanel.emit();\r\n    }\r\n  }\r\n  /**\r\n   * farris æ¥ææ§ä»¶çåæ´äºä»¶\r\n   * @param e e\r\n   */\r\n  changeDateValue(e) {\r\n    const value = e.formatted;\r\n\r\n    const changeObject = {\r\n      propertyID: this.elementConfig.propertyID,\r\n      propertyValue: value\r\n    };\r\n    this.valueChanged.emit({ changeObject });\r\n    if (this.elementConfig.refreshPanelAfterChanged) {\r\n      this.triggerRefreshPanel.emit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * èªå®ä¹ç¼è¾å¨ä½¿ç¨æ¨¡ææ¡æå¼\r\n   */\r\n  openModal() {\r\n    if (this.elementConfig.readonly) {\r\n      return;\r\n    }\r\n    if (Object.keys(this.elementConfig).indexOf('beforeOpenModal') > -1 && typeof (this.elementConfig.beforeOpenModal) === 'function') {\r\n      const result = this.elementConfig.beforeOpenModal();\r\n      if (result && !result.result) {\r\n        this.notifyServ.warning({\r\n          title: 'ç³»ç»æç¤º', msg: result.message, timeout: 3000\r\n        } as NotifyOptions);\r\n        return;\r\n      }\r\n    }\r\n    this.createEditorComponent();\r\n  }\r\n\r\n  /**\r\n   * åå»ºèªå®ä¹ç¼è¾å¨\r\n   */\r\n  private createEditorComponent() {\r\n    const editor = this.elementConfig.editor;\r\n    if (!editor) {\r\n      return;\r\n    }\r\n    // åå»ºæ¨¡ææ¡ç»ä»¶\r\n    const compFactory = this.resolver.resolveComponentFactory(editor);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.value = this.elementValue;\r\n    if (this.elementConfig.editorParams) {  // ç¼è¾å¨éè¦çé¢å¤åæ°\r\n      compRef.instance.editorParams = this.elementConfig.editorParams;\r\n    }\r\n    let modalConfig = compRef.instance.modalConfig;\r\n    if (!modalConfig) {\r\n      modalConfig = {\r\n        title: 'å±æ§éç½®',\r\n        width: 800,\r\n        height: 400,\r\n        showButtons: false\r\n      };\r\n    } else if (modalConfig.showButtons) {\r\n      modalConfig.buttons = compRef.instance.modalFooter;\r\n    }\r\n\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n\r\n    // çå¬å³é­æ¨¡ææ¡\r\n    if (compRef.instance.closeModal && compRef.instance.closeModal instanceof EventEmitter) {\r\n      compRef.instance.closeModal.subscribe((data) => {\r\n        // æ°æ®è½¬æ¢\r\n        if (data) {\r\n          this._convertModalShowValue(data);\r\n\r\n          const changeObject = {\r\n            propertyID: this.elementConfig.propertyID,\r\n            propertyValue: data\r\n          };\r\n          this.valueChanged.emit({ changeObject });\r\n\r\n        }\r\n\r\n        dialog.close();\r\n      });\r\n    }\r\n\r\n\r\n\r\n    // å¼¹åºæ¡å³é­äºä»¶ï¼å¸¦åæ°ï¼æ ¼å¼ä¸º{ value, parameters }\r\n    if (compRef.instance.submitModal && compRef.instance.submitModal instanceof EventEmitter) {\r\n      compRef.instance.submitModal.subscribe(data => {\r\n        if (!data) {\r\n          dialog.close();\r\n          return;\r\n        }\r\n        const { value, parameters } = data;\r\n        // æ°æ®è½¬æ¢\r\n        this._convertModalShowValue(value);\r\n\r\n        const changeObject = {\r\n          propertyID: this.elementConfig.propertyID,\r\n          propertyValue: value\r\n        };\r\n        this.submitModal.emit({ changeObject, parameters });\r\n\r\n        dialog.close();\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * æ¨¡ææ¡åºæ¯ä¸å°å±æ§å¼è½¬æ¢ä¸ºè¾å¥æ¡ä¸­æ¾ç¤ºçå¼\r\n   * @param value\r\n   */\r\n  private _convertModalShowValue(value) {\r\n    if (this.elementConfig.converter) {\r\n      this.elementShowValue = this.elementConfig.converter.convertTo(value);\r\n      return;\r\n    }\r\n    if (value && value instanceof Object) {\r\n      this.elementShowValue = JSON.stringify(value);\r\n      return;\r\n    }\r\n    this.elementShowValue = value;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, ViewChildren, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { ElementPropertyConfig } from '../../entity/property-entity';\r\nimport { PropertyItemComponent } from '../property-item/property-item.component';\r\n\r\n@Component({\r\n  selector: 'webide-property-item-list',\r\n  templateUrl: './property-item-list.component.html',\r\n  styleUrls: ['./property-item-list.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n\r\n})\r\nexport class PropertyItemListComponent implements OnChanges {\r\n  @Input() category: ElementPropertyConfig; // æä¸åç±»ä¸çå±æ§éç½®\r\n  @Input() propertyData; // å±æ§å¼\r\n  @Output() valueChanged = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n  @Output() triggerRefreshPanel = new EventEmitter<any>();\r\n\r\n  @ViewChildren(PropertyItemComponent) items: Array<PropertyItemComponent>;\r\n\r\n  // å®éå±æ§å¼\r\n  data;\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(simpleChanges: SimpleChanges) {\r\n    // è¥åç±»ä¸æpropertyDataï¼åååç±»ä¸çpropertyDataï¼å¦ååæ´ä½çpropertyData\r\n    if (this.category.propertyData && this.category.enableCascade) {\r\n      this.data = this.category.propertyData;\r\n    } else {\r\n      this.data = this.propertyData;\r\n    }\r\n\r\n    this.adaptProperties();\r\n\r\n  }\r\n  /**\r\n   * ééå±æ§\r\n   */\r\n  private adaptProperties() {\r\n    this.category.properties.forEach(propItem => {\r\n      if (propItem.propertyType === 'cascade') {\r\n        this.cascadeValueStringify(propItem, this.data[propItem.propertyID]);\r\n        if (Object.keys(propItem).indexOf('visible') < 0) {\r\n          propItem.visible = true;\r\n        }\r\n      }\r\n    });\r\n  }\r\n  refresh() {\r\n    // è¥åç±»ä¸æpropertyDataï¼åååç±»ä¸çpropertyDataï¼å¦ååæ´ä½çpropertyData\r\n    if (this.category.propertyData && this.category.enableCascade) {\r\n      this.data = this.category.propertyData;\r\n    } else {\r\n      this.data = this.propertyData;\r\n    }\r\n    this.items.forEach(item => item.refresh());\r\n  }\r\n\r\n  /**\r\n   * ä¸è¬å±æ§åæ´\r\n   * @param $event\r\n   */\r\n  _itemChanged($event) {\r\n    const { changeObject } = $event;\r\n    this.data[changeObject.propertyID] = changeObject.propertyValue;\r\n\r\n    if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {\r\n      this.category.setPropertyRelates(changeObject, this.data);\r\n      this.items.forEach(item => item.refresh());\r\n    }\r\n    changeObject.categoryId = this.category.categoryId;\r\n\r\n    if (this.category.enableCascade) {\r\n      changeObject.propertyPath = this.category.parentPropertyID;\r\n    }\r\n    this.valueChanged.emit(changeObject);\r\n  }\r\n\r\n  /**\r\n   * æ¨¡ææ¡æ°æ®åæ´ï¼TODO:å¾ä¼åï¼åå¹¶valueChangeäºä»¶ï¼\r\n   * @param $event\r\n   */\r\n  _submitModal($event) {\r\n    const { changeObject, parameters } = $event;\r\n    this.data[changeObject.propertyID] = changeObject.propertyValue;\r\n\r\n    if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {\r\n      this.category.setPropertyRelates(changeObject, this.data, parameters);\r\n      this.items.forEach(item => item.refresh());\r\n    }\r\n\r\n    changeObject.categoryId = this.category.categoryId;\r\n    if (this.category.enableCascade) {\r\n      changeObject.propertyPath = this.category.parentPropertyID;\r\n    }\r\n    this.submitModal.emit($event);\r\n  }\r\n\r\n  /**\r\n   * çº§èå±æ§åæ´\r\n   */\r\n  _cascadeitemChanged($event, propItem) {\r\n    const parentPropertyID = propItem.propertyID;\r\n    if (!parentPropertyID) {\r\n      return;\r\n    }\r\n    const { changeObject } = $event;\r\n    if (!this.data[parentPropertyID]) {\r\n      this.data[parentPropertyID] = {};\r\n    }\r\n\r\n    this.data[parentPropertyID][changeObject.propertyID] = changeObject.propertyValue;\r\n\r\n    changeObject.categoryId = this.category.categoryId;\r\n\r\n    changeObject.parentPropertyID = changeObject.propertyPath = parentPropertyID;\r\n    // åç±»å¯ç¨äºçº§èï¼å¹¶ä¸åç±»ä¸æçº§èå±æ§\r\n    if (this.category.enableCascade) {\r\n      changeObject.propertyPath = this.category.parentPropertyID + '.' + changeObject.parentPropertyID;\r\n    }\r\n\r\n    if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {\r\n      this.category.setPropertyRelates(changeObject, this.data);\r\n      this.items.forEach(item => item.refresh());\r\n    }\r\n\r\n    this.cascadeValueStringify(propItem, this.data[parentPropertyID]);\r\n    this.valueChanged.emit(changeObject);\r\n  }\r\n\r\n  /**\r\n   * çº§èæ¨¡ææ¡å±æ§åæ´\r\n   */\r\n  __cascadeitemSubmitModal($event, propItem) {\r\n    const parentPropertyID = propItem.propertyID;\r\n    if (!parentPropertyID) {\r\n      return;\r\n    }\r\n    const { changeObject, parameters } = $event;\r\n    if (!this.data[parentPropertyID]) {\r\n      this.data[parentPropertyID] = {};\r\n    }\r\n\r\n    this.data[parentPropertyID][changeObject.propertyID] = changeObject.propertyValue;\r\n\r\n    changeObject.categoryId = this.category.categoryId;\r\n\r\n    changeObject.parentPropertyID = changeObject.propertyPath = parentPropertyID;\r\n    // åç±»å¯ç¨äºçº§èï¼å¹¶ä¸åç±»ä¸æçº§èå±æ§\r\n    if (this.category.enableCascade) {\r\n      changeObject.propertyPath = this.category.parentPropertyID + '.' + changeObject.parentPropertyID;\r\n    }\r\n\r\n    if (this.category.setPropertyRelates && typeof (this.category.setPropertyRelates) === 'function') {\r\n      this.category.setPropertyRelates(changeObject, this.data, parameters);\r\n      this.items.forEach(item => item.refresh());\r\n    }\r\n\r\n    this.cascadeValueStringify(propItem, this.data[parentPropertyID]);\r\n\r\n    this.submitModal.emit($event);\r\n  }\r\n  /**\r\n   * çº§èå±æ§çæ±æ»ä¿¡æ¯\r\n   * @param propItem\r\n   * @param valueObject\r\n   */\r\n  cascadeValueStringify(propItem, valueObject) {\r\n    if (!propItem || !propItem.cascadeConfig) {\r\n      return;\r\n    }\r\n    if (!valueObject) {\r\n      propItem.cascadeSummary = '';\r\n      return;\r\n    }\r\n    if (!propItem.cascadeConverter || !propItem.cascadeConverter.convertTo) {\r\n      propItem.cascadeSummary = JSON.stringify(valueObject);\r\n    } else {\r\n      propItem.cascadeSummary = propItem.cascadeConverter.convertTo(valueObject, propItem.cascadeConfig);\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   *  å·²åºå¼\r\n   */\r\n  _checkCascadeVisible(propItem) {\r\n    if (Object.keys(propItem).indexOf('visible') < 0) {\r\n      return true;\r\n    } else {\r\n      return propItem.visible;\r\n    }\r\n  }\r\n\r\n\r\n  refreshPanel() {\r\n    this.triggerRefreshPanel.emit();\r\n  }\r\n\r\n  trackByPropId(index: number, PropItem: any): string {\r\n    return PropItem.propertyID;\r\n  }\r\n\r\n}\r\n","import {\r\n  Component, OnInit, Input, ViewChild, ElementRef, Output,\r\n  EventEmitter, OnChanges, SimpleChanges, ViewChildren\r\n} from '@angular/core';\r\nimport { ElementPropertyConfig, PropertyChangeObject } from '../../entity/property-entity';\r\nimport { PropertyItemListComponent } from '../property-item-list/property-item-list.component';\r\n\r\n@Component({\r\n  selector: 'app-property-panel',\r\n  templateUrl: './property-panel.component.html',\r\n  styleUrls: ['./property-panel.component.css']\r\n})\r\nexport class PropertyPanelComponent implements OnInit, OnChanges {\r\n  @Input() width: number;\r\n  @Input() height: number;\r\n\r\n  /** æ¯å¦ææé¢æ¿çéèæ¾ç¤ºç¶æ */\r\n  @Input() isPersitOpenState = false;\r\n\r\n  /** isPersitOpenState=trueæ¶ï¼æ§å¶é¢æ¿æ¯å¦éèæ¾ç¤º */\r\n  @Input() isShowPanel = false;\r\n\r\n  /** isPersitOpenState=trueæ¶ï¼æåºé¢æ¿çå³é­äºä»¶ */\r\n  @Output() closePropertyPanel = new EventEmitter<any>();\r\n\r\n  /** å±æ§ç±»å */\r\n  @Input() propertyConfig: ElementPropertyConfig[];\r\n\r\n  /**  å±æ§å¼ */\r\n  @Input() propertyData = {};\r\n\r\n  /** å±æ§åæ´äºä»¶ */\r\n  @Output() propertyChanged = new EventEmitter<any>();\r\n\r\n  /** æ¨¡ææ¡å±æ§åæ´äºä»¶   */\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  /** æ¯å¦å±ç¤ºå³é­æé® */\r\n  @Input() showCloseBtn = true;\r\n\r\n\r\n  @ViewChild('east') private eastDiv: ElementRef;\r\n  @ViewChildren(PropertyItemListComponent) itemLists: Array<PropertyItemListComponent>;\r\n\r\n  /** å½åå±ç¤ºç¶æ */\r\n  isOpen = true;\r\n\r\n  /** å¤å±åç±»ï¼ä»¥æ ç­¾é¡µå½¢å¼å±ç¤º */\r\n  categoryTabs = [];\r\n\r\n  /** å½åéä¸­çæ ç­¾é¡µ */\r\n  selectedTab: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.width) {\r\n      this.eastDiv.nativeElement.style.width = this.width + 'px';\r\n    } else {\r\n      this.eastDiv.nativeElement.style.width = 'inherit';\r\n    }\r\n    if (this.height) {\r\n      this.eastDiv.nativeElement.style.height = this.height + 'px';\r\n    } else {\r\n      this.eastDiv.nativeElement.style.height = '100%';\r\n    }\r\n\r\n\r\n    if (this.isPersitOpenState) {\r\n      this.isOpen = this.isShowPanel;\r\n    }\r\n\r\n    this.checkShowTabCategory();\r\n  }\r\n\r\n  /**\r\n   *  æ´æ¹é¢æ¿çéèæ¾ç¤ºç¶æï¼åªæå¨isPersitOpenState=trueæ¶çæ\r\n   */\r\n  ngOnChanges(simpleChanges: SimpleChanges) {\r\n    if (simpleChanges.isShowPanel && this.isPersitOpenState) {\r\n      this.isOpen = this.isShowPanel;\r\n    }\r\n    this.checkShowTabCategory();\r\n  }\r\n  refreshPanel() {\r\n    this.checkShowTabCategory();\r\n    this.itemLists.forEach(item => item.refresh());\r\n  }\r\n  changeStatus(item: any) {\r\n    if (this.propertyConfig.length < 2) {\r\n      return;\r\n    }\r\n    if (!item.status || item.status === 'open') {\r\n      item.status = 'closed';\r\n    } else {\r\n      item.status = 'open';\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  éèé¢æ¿\r\n   */\r\n  collapse() {\r\n    // isPersitOpenState=trueæ¶,ç±å¤é¨ç¡®å®ç¶æ\r\n    if (!this.isPersitOpenState) {\r\n      this.isOpen = false;\r\n    }\r\n    this.closePropertyPanel.emit();\r\n  }\r\n\r\n  /**\r\n   * æåºå±æ§åæ´äºä»¶\r\n   */\r\n  _valueChanged(changeObject: PropertyChangeObject) {\r\n    this.propertyChanged.emit(changeObject);\r\n  }\r\n  _submitModal($event: PropertyChangeObject) {\r\n    this.submitModal.emit($event);\r\n  }\r\n\r\n  /**\r\n   * å°å±æ§åç±»æç§æ ç­¾é¡µè¿è¡å½ç±»\r\n   */\r\n  private checkShowTabCategory() {\r\n    this.categoryTabs = [];\r\n    if (!this.propertyConfig || this.propertyConfig.length === 0) {\r\n      this.categoryTabs = [{\r\n        tabId: 'default',\r\n        tabName: 'å±æ§',\r\n        categoryList: []\r\n      }];\r\n      this.selectedTab = null;\r\n      return;\r\n    }\r\n    this.propertyConfig.forEach(config => {\r\n      if (config.tabId) {\r\n        const propTab = this.categoryTabs.find(t => t.tabId === config.tabId);\r\n        if (!propTab) {\r\n          this.categoryTabs.push({\r\n            tabId: config.tabId,\r\n            tabName: config.tabName,\r\n            categoryList: [config],\r\n            hide: config.hide || config.properties.length === 0\r\n          });\r\n        } else {\r\n\r\n          propTab.categoryList.push(config);\r\n          if (propTab.hide) {\r\n            propTab.hide = config.hide || config.properties.length === 0;\r\n          }\r\n        }\r\n      } else {\r\n        const defaultTab = this.categoryTabs.find(t => t.tabId === 'default');\r\n        if (!defaultTab) {\r\n          this.categoryTabs.push({\r\n            tabId: 'default',\r\n            tabName: 'å±æ§',\r\n            categoryList: [config]\r\n          });\r\n        } else {\r\n          defaultTab.categoryList.push(config);\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    this.selectedTab = this.categoryTabs[0];\r\n\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n// import { PopoverModule } from '@farris/ui-popover';\r\nimport { PopoverModule } from '../popover/popover.module';\r\nimport { PropertyPanelComponent } from './components/property-panel/property-panel.component';\r\nimport { PropertyItemListComponent } from './components/property-item-list/property-item-list.component';\r\nimport { PropertyItemComponent } from './components/property-item/property-item.component';\r\nimport { InputsModule } from '@progress/kendo-angular-inputs';\r\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { ComboListModule } from '../combo-list/combo-list.module';\r\nimport { ComboListModule as FarrisComboListModule } from '@farris/ui-combo-list';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        PropertyPanelComponent,\r\n        PropertyItemListComponent,\r\n        PropertyItemComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        PopoverModule,\r\n        // PopoverModule.forRoot(),\r\n        InputsModule,\r\n        DropDownsModule,\r\n        ComboListModule,\r\n        NotifyModule.forRoot(),\r\n        ModalModule.forRoot(),\r\n        FarrisDatePickerModule,\r\n        FarrisComboListModule,\r\n        NumberSpinnerModule\r\n    ],\r\n    exports: [PropertyPanelComponent],\r\n    entryComponents: [PropertyPanelComponent, PropertyItemComponent]\r\n})\r\nexport class PropertyPanelModule {\r\n    constructor() { }\r\n}\r\n","import { Type } from '@angular/core';\r\n\r\n/**\r\n * å±æ§ç±»å\r\n */\r\nexport enum PropertyType {\r\n    string = 'string',\r\n    boolean = 'boolean',\r\n    number = 'number',\r\n    select = 'select',\r\n    boolOrExp = 'boolOrExp',\r\n    multiSelect = 'multiSelect',\r\n    date = 'date',\r\n    datetime = 'datetime',\r\n    modal = 'modal',\r\n    cascade = 'cascade'\r\n}\r\n\r\n\r\n/**\r\n * å±æ§åç±»å®ä½\r\n */\r\nexport class ElementPropertyConfig {\r\n    /**\r\n     * åç±»ID\r\n     */\r\n    categoryId: string;\r\n\r\n    /**\r\n     * åç±»æ¾ç¤ºçåç§°\r\n     */\r\n    categoryName: string;\r\n\r\n    /**\r\n     * åç±»æ¯å¦éèï¼é»è®¤false\r\n     */\r\n    hide?= false;\r\n\r\n    /**\r\n     * æ¯å¦éèåç±»æ é¢\r\n     */\r\n    hideTitle?= false;\r\n\r\n    /**\r\n     * åç±»ä¸çå±æ§éç½®\r\n     */\r\n    properties: PropertyEntity[];\r\n\r\n    /**\r\n     * æ¯å¦å¯ç¨çº§èç¹æ§ï¼é»è®¤false\r\n     */\r\n    enableCascade?= false;\r\n\r\n    /**\r\n     * å±æ§å¼ï¼åç±»å¯ç¨çº§èç¹æ§æ¶å¿å¡«\r\n     */\r\n    propertyData?: any;\r\n\r\n    /**\r\n     * ç¶çº§å±æ§IDï¼åç±»å¯ç¨çº§èç¹æ§æ¶å¿å¡«\r\n     */\r\n    parentPropertyID?: string;\r\n\r\n    /**\r\n     * å±æ§å³èå³ç³»ï¼ç¨äºå±æ§åæ´åä¿®æ¹å¶ä»å±æ§éç½®æå±æ§å¼\r\n     */\r\n    setPropertyRelates?: (changeObject, propertyData, parameters?) => void;\r\n\r\n    /**\r\n     * åç±»ä»¥æ ç­¾é¡µå±ç¤ºæ¶ï¼æ ç­¾é¡µçIDãè¥åªéå¹³éºå±ç¤ºï¼åä¸éè¦ä¼ å¥ã\r\n     */\r\n    tabId?: string;\r\n\r\n    /**\r\n     * åç±»ä»¥æ ç­¾é¡µå±ç¤ºæ¶ï¼æ ç­¾é¡µçåç§°ãè¥åªéå¹³éºå±ç¤ºï¼åä¸éè¦ä¼ å¥ã\r\n     */\r\n    tabName?: string;\r\n}\r\n\r\n\r\n\r\n/**\r\n * å±æ§å®ä½\r\n */\r\nexport class PropertyEntity {\r\n    /**\r\n     * å±æ§ID\r\n     */\r\n    propertyID: string;\r\n\r\n    /**\r\n     * å±æ§æ¾ç¤ºçåç§°\r\n     */\r\n    propertyName: string;\r\n\r\n    /**\r\n     * å±æ§çç±»å\r\n     */\r\n    propertyType: PropertyType | any;\r\n\r\n    /**\r\n     * å±æ§æè¿°\r\n     */\r\n    description?: string;\r\n\r\n    /**\r\n     * å±æ§çé»è®¤å¼\r\n     */\r\n    defaultValue?: any;\r\n\r\n    /**\r\n     * æ¯å¦åªè¯»ï¼é»è®¤false\r\n     */\r\n    readonly?= false;\r\n\r\n    /**\r\n     * æ¯å¦å¯è§ï¼é»è®¤true\r\n     */\r\n    visible?= true;\r\n\r\n    /**\r\n     * æå°å¼\r\n     */\r\n    min?: any;\r\n\r\n    /**\r\n     * æå¤§å¼\r\n     */\r\n    max?: any;\r\n\r\n    /**\r\n     * æ°å­ç±»åå±æ§çå°æ°ä½æ°\r\n     */\r\n    decimals?: number;\r\n\r\n    /**\r\n     * æ¯å¦å¤§æ°å­\r\n     */\r\n    isBigNumber?= false;\r\n\r\n    /**\r\n     * å±æ§æ¹ååæ¯å¦éè¦å·æ°æ´ä¸ªé¢æ¿ï¼ç¨äºæ´æ¹å¶ä»åç±»ä¸çå±æ§\r\n     */\r\n    refreshPanelAfterChanged?= false;\r\n\r\n    /**\r\n     * ä¸ææ¡çæä¸¾å¼\r\n     */\r\n    iterator?: KeyMap[];\r\n\r\n    /**\r\n     * ä¸æå¤éç±»åï¼å±æ§å¼çç±»åï¼string(å¤å¼ä»¥éå·åé)/array(å¤å¼ç»è£ææ°ç»)\r\n     */\r\n    multiSelectDataType?= 'string';\r\n\r\n    /**\r\n     * ææ¬æ§ä»¶éå¶è¾å¥çå­ç¬¦ï¼æ¯æå­ç¬¦åæ­£åè¡¨è¾¾å¼\r\n     */\r\n    notAllowedChars?: any[];\r\n\r\n    /**\r\n     * çº§èå±æ§éç½®\r\n     */\r\n    cascadeConfig?: PropertyEntity[];\r\n\r\n    /**\r\n     * çº§èå±æ§æ¯å¦é»è®¤æ¶èµ·\r\n     */\r\n    isExpand?= false;\r\n\r\n    /**\r\n     * æ¯å¦éèçº§èå±æ§çå¤´é¨\r\n     */\r\n    hideCascadeTitle?= false;\r\n\r\n    /**\r\n     * çº§èå±æ§çæ±æ»ä¿¡æ¯\r\n     */\r\n    cascadeConverter?: TypeConverter;\r\n\r\n    /**\r\n     * æ¨¡ææ¡å±æ§èªå®ä¹ç¼è¾å¨\r\n     */\r\n    editor?: Type<any>;\r\n\r\n    /**\r\n     * æ¨¡ææ¡å±æ§èªå®ä¹ç¼è¾å¨åæ°\r\n     */\r\n    editorParams?: any;\r\n\r\n    /**\r\n     *  æ¨¡ææ¡å±æ§å¼è½¬æ¢å¨\r\n     */\r\n    converter?: TypeConverter;\r\n\r\n    /**\r\n     * æ¨¡ææ¡å±æ§æ¯å¦å±ç¤ºæ¸é¤å¾æ \r\n     */\r\n    showClearButton?= false;\r\n\r\n    /**\r\n     * ç¹å»æ¸é¤æé®åçæ¹æ³ï¼åæ°ä¸ºæ¸é¤åçå±æ§å¼\r\n     */\r\n    afterClickClearButton?(value: any): void;\r\n\r\n    /**\r\n     * æå¼æ¨¡ææ¡åçæ¹æ³ï¼ä¸è¬ç¨äºæ ¡éªé»è¾ï¼è¿åå¼ä¸­result=trueï¼åè¿ä¸æ­¥æå¼æ¨¡ææ¡ï¼result=falseåæç¤ºmessageåå®¹ï¼å¹¶ä¸åæå¼æ¨¡ææ¡ã\r\n     */\r\n    beforeOpenModal?(): BeforeOpenModalResult {\r\n        return new BeforeOpenModalResult();\r\n    }\r\n\r\n    [propName: string]: any;\r\n}\r\n\r\n/**\r\n * å±æ§å¼è½¬æ¢å¨ï¼è¿åæ¨¡ææ¡ç±»å±æ§ææ¬æ¡åçæ¾ç¤ºåå®¹\r\n */\r\nexport interface TypeConverter {\r\n    convertTo(data: any, params?: any): string; // ç±æ¨¡ææ¡è½¬ä¸ºå±æ§æ¡ä¸­å±ç¤ºçå¼\r\n}\r\n\r\nexport interface KeyMap {\r\n    key: any;\r\n    value: any;\r\n}\r\n\r\n/**\r\n * æå¼æ¨¡ææ¡åçæ¹æ³è¿åå¼ï¼result=trueï¼åè¿ä¸æ­¥æå¼æ¨¡ææ¡ï¼result=falseåæç¤ºmessageåå®¹ï¼å¹¶ä¸åæå¼æ¨¡ææ¡ã\r\n */\r\nexport class BeforeOpenModalResult {\r\n    result: boolean;\r\n    message?: string;\r\n}\r\n\r\n/**\r\n * å±æ§åæ´é\r\n */\r\nexport class PropertyChangeObject {\r\n    /**\r\n     * å±æ§ID\r\n     */\r\n    propertyID: string;\r\n\r\n    /**\r\n     * åæ´åçå±æ§å¼\r\n     */\r\n    propertyValue: any;\r\n\r\n    /**\r\n     *  å±æ§æå¨åç±»ID\r\n     */\r\n    categoryId: string;\r\n\r\n    /**\r\n     * çº§èå±æ§çç¶è·¯å¾ï¼ä»¥.åé\r\n     */\r\n    propertyPath: string;\r\n\r\n    /**\r\n     * çº§èå±æ§çç¶å±æ§ID\r\n     */\r\n    parentPropertyID: string;\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Configuration service for the NgbTabset component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the tabsets used in the application.\r\n */\r\n@Injectable()\r\nexport class NgbTabsetConfig {\r\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\r\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\r\n  type: 'tabs' | 'pills' = 'tabs';\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ContentChildren,\r\n  QueryList,\r\n  Directive,\r\n  TemplateRef,\r\n  ContentChild,\r\n  AfterContentChecked,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { NgbTabsetConfig } from './tabset-config';\r\n\r\nlet nextId = 0;\r\n\r\n/**\r\n * This directive should be used to wrap tab titles that need to contain HTML markup or other directives.\r\n */\r\n@Directive({ selector: 'ng-template[ngbTabTitle]' })\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class NgbTabTitle {\r\n  constructor(public templateRef: TemplateRef<any>) { }\r\n}\r\n\r\n/**\r\n * This directive must be used to wrap content to be displayed in a tab.\r\n */\r\n@Directive({ selector: 'ng-template[ngbTabContent]' })\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class NgbTabContent {\r\n  constructor(public templateRef: TemplateRef<any>) { }\r\n}\r\n\r\n/**\r\n * A directive representing an individual tab.\r\n */\r\n@Directive({ selector: 'ngb-tab' })\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class NgbTab {\r\n  /**\r\n   * Unique tab identifier. Must be unique for the entire document for proper accessibility support.\r\n   */\r\n  @Input() id = `ngb-tab-${nextId++}`;\r\n  /**\r\n   * Simple (string only) title. Use the \"NgbTabTitle\" directive for more complex use-cases.\r\n   */\r\n  @Input() title: string;\r\n  /**\r\n   * Allows toggling disabled state of a given state. Disabled tabs can't be selected.\r\n   */\r\n  @Input() disabled = false;\r\n\r\n  @ContentChild(NgbTabContent) contentTpl: NgbTabContent;\r\n  @ContentChild(NgbTabTitle) titleTpl: NgbTabTitle;\r\n}\r\n\r\n/**\r\n * The payload of the change event fired right before the tab change\r\n */\r\nexport interface NgbTabChangeEvent {\r\n  /**\r\n   * Id of the currently active tab\r\n   */\r\n  activeId: string;\r\n\r\n  /**\r\n   * Id of the newly selected tab\r\n   */\r\n  nextId: string;\r\n\r\n  /**\r\n   * Function that will prevent tab switch if called\r\n   */\r\n  preventDefault: () => void;\r\n}\r\n\r\n/**\r\n * A component that makes it easy to create tabbed interface.\r\n */\r\n@Component({\r\n  selector: 'ngb-tabset',\r\n  exportAs: 'ngbTabset',\r\n  template: `\r\n    <ul [class]=\"'web-ide-content-tab-header nav nav-' + type + (orientation == 'horizontal'?  ' '\r\n      + justifyClass : ' flex-column')\" role=\"tablist\">\r\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\r\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\r\n          href (click)=\"select(tab.id)\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\r\n          [attr.aria-controls]=\"((!destroyOnHide || tab.id === activeId) ? tab.id + '-panel' : null)\"\r\n          [attr.aria-expanded]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\r\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n    <div class=\"web-ide-content tab-content d-flex\">\r\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\r\n        <div\r\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\r\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\r\n          role=\"tabpanel\"\r\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\"\r\n          [attr.aria-expanded]=\"tab.id === activeId\">\r\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl.templateRef\"></ng-template>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./tabset.css']\r\n})\r\n// tslint:disable-next-line:component-class-suffix\r\nexport class NgbTabset implements AfterContentChecked {\r\n  justifyClass: string;\r\n\r\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\r\n\r\n  /**\r\n   * An identifier of an initially selected (active) tab. Use the \"select\" method to switch a tab programmatically.\r\n   */\r\n  @Input() activeId: string;\r\n\r\n  /**\r\n   * Whether the closed tabs should be hidden without destroying them\r\n   */\r\n  @Input() destroyOnHide = true;\r\n\r\n  /**\r\n   * The horizontal alignment of the nav with flexbox utilities. Can be one of 'start', 'center', 'end', 'fill' or\r\n   * 'justified'\r\n   * The default value is 'start'.\r\n   */\r\n  @Input()\r\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\r\n    if (className === 'fill' || className === 'justified') {\r\n      this.justifyClass = `nav-${className}`;\r\n    } else {\r\n      this.justifyClass = `justify-content-${className}`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The orientation of the nav (horizontal or vertical).\r\n   * The default value is 'horizontal'.\r\n   */\r\n  @Input() orientation: 'horizontal' | 'vertical';\r\n\r\n  /**\r\n   * Type of navigation to be used for tabs. Can be one of 'tabs' or 'pills'.\r\n   */\r\n  @Input() type: 'tabs' | 'pills';\r\n\r\n  /**\r\n   * A tab change event fired right before the tab selection happens. See NgbTabChangeEvent for payload details\r\n   */\r\n  @Output() tabChange = new EventEmitter<NgbTabChangeEvent>();\r\n\r\n  constructor(config: NgbTabsetConfig) {\r\n    this.type = config.type;\r\n    this.justify = config.justify;\r\n    this.orientation = config.orientation;\r\n  }\r\n\r\n  /**\r\n   * Selects the tab with the given id and shows its associated pane.\r\n   * Any other tab that was previously selected becomes unselected and its associated pane is hidden.\r\n   */\r\n  select(tabId: string) {\r\n    const selectedTab = this._getTabById(tabId);\r\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\r\n      let defaultPrevented = false;\r\n\r\n      this.tabChange.emit(\r\n        { activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; } });\r\n\r\n      if (!defaultPrevented) {\r\n        this.activeId = selectedTab.id;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    // auto-correct activeId that might have been set incorrectly as input\r\n    const activeTab = this._getTabById(this.activeId);\r\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\r\n  }\r\n\r\n  private _getTabById(id: string): NgbTab {\r\n    const tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\r\n    return tabsWithId.length ? tabsWithId[0] : null;\r\n  }\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\r\nimport {NgbTabsetConfig} from './tabset-config';\r\n\r\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\r\nexport {NgbTabsetConfig} from './tabset-config';\r\n\r\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\r\n\r\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule]})\r\nexport class NgbTabsetModule {\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTabsetModule, providers: [NgbTabsetConfig]}; }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Configuration service for the NgbNavTabset component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the tabsets used in the application.\r\n */\r\n@Injectable()\r\nexport class NgbNavTabsetConfig {\r\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\r\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\r\n  type: 'tabs' | 'pills' = 'tabs';\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ContentChildren,\r\n  QueryList,\r\n  Directive,\r\n  TemplateRef,\r\n  ContentChild,\r\n  AfterContentChecked,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { NgbNavTabsetConfig } from './navtab-config';\r\n\r\nlet nextId = 0;\r\n\r\n/**\r\n * This directive should be used to wrap tab titles that need to contain HTML markup or other directives.\r\n */\r\n@Directive({ selector: 'ng-template[ngbNavTabTitle]' })\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class NgbNavTabTitle {\r\n  constructor(public templateRef: TemplateRef<any>) { }\r\n}\r\n\r\n/**\r\n * This directive must be used to wrap content to be displayed in a tab.\r\n */\r\n@Directive({ selector: 'ng-template[ngbNavTabContent]' })\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class NgbNavTabContent {\r\n  constructor(public templateRef: TemplateRef<any>) { }\r\n}\r\n\r\n/**\r\n * A directive representing an individual tab.\r\n */\r\n@Directive({ selector: 'ngb-navtab' })\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class NgbNavTab {\r\n  /**\r\n   * Unique tab identifier. Must be unique for the entire document for proper accessibility support.\r\n   */\r\n  @Input() id = `ngb-tab-${nextId++}`;\r\n  /**\r\n   * Simple (string only) title. Use the \"NgbNavTabTitle\" directive for more complex use-cases.\r\n   */\r\n  @Input() title: string;\r\n  /**\r\n   * Allows toggling disabled state of a given state. Disabled tabs can't be selected.\r\n   */\r\n  @Input() disabled = false;\r\n\r\n  @ContentChild(NgbNavTabContent) contentTpl: NgbNavTabContent;\r\n  @ContentChild(NgbNavTabTitle) titleTpl: NgbNavTabTitle;\r\n}\r\n\r\n/**\r\n * The payload of the change event fired right before the tab change\r\n */\r\nexport interface NgbNavTabChangeEvent {\r\n  /**\r\n   * Id of the currently active tab\r\n   */\r\n  activeId: string;\r\n\r\n  /**\r\n   * Id of the newly selected tab\r\n   */\r\n  nextId: string;\r\n\r\n  /**\r\n   * Function that will prevent tab switch if called\r\n   */\r\n  preventDefault: () => void;\r\n}\r\n\r\n/**\r\n * A component that makes it easy to create tabbed interface.\r\n */\r\n@Component({\r\n  selector: 'ngb-navtabset',\r\n  exportAs: 'NgbNavTabset',\r\n  template: `\r\n    <ul [class]=\"'web-ide-activity-bar nav nav-' + type + (orientation == 'horizontal'?  ' '\r\n      + justifyClass : ' flex-column')\" role=\"tablist\">\r\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\r\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\r\n          href (click)=\"select(tab.id)\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\r\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\r\n          [attr.aria-expanded]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\r\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n    <div class=\"web-ide-side-bar tab-content\">\r\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\r\n        <div\r\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\r\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\r\n          role=\"tabpanel\"\r\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\"\r\n          [attr.aria-expanded]=\"tab.id === activeId\">\r\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl.templateRef\"></ng-template>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./navtab.css']\r\n})\r\n// tslint:disable-next-line:component-class-suffix\r\nexport class NgbNavTabset implements AfterContentChecked {\r\n  justifyClass: string;\r\n\r\n  @ContentChildren(NgbNavTab) tabs: QueryList<NgbNavTab>;\r\n\r\n  /**\r\n   * An identifier of an initially selected (active) tab. Use the \"select\" method to switch a tab programmatically.\r\n   */\r\n  @Input() activeId: string;\r\n\r\n  /**\r\n   * Whether the closed tabs should be hidden without destroying them\r\n   */\r\n  @Input() destroyOnHide = true;\r\n\r\n  /**\r\n   * The horizontal alignment of the nav with flexbox utilities. Can be one of 'start', 'center', 'end', 'fill' or\r\n   * 'justified'\r\n   * The default value is 'start'.\r\n   */\r\n  @Input()\r\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\r\n    if (className === 'fill' || className === 'justified') {\r\n      this.justifyClass = `nav-${className}`;\r\n    } else {\r\n      this.justifyClass = `justify-content-${className}`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The orientation of the nav (horizontal or vertical).\r\n   * The default value is 'horizontal'.\r\n   */\r\n  @Input() orientation: 'horizontal' | 'vertical';\r\n\r\n  /**\r\n   * Type of navigation to be used for tabs. Can be one of 'tabs' or 'pills'.\r\n   */\r\n  @Input() type: 'tabs' | 'pills';\r\n\r\n  /**\r\n   * A tab change event fired right before the tab selection happens. See NgbNavTabChangeEvent for payload details\r\n   */\r\n  @Output() tabChange = new EventEmitter<NgbNavTabChangeEvent>();\r\n\r\n  constructor(config: NgbNavTabsetConfig) {\r\n    this.type = config.type;\r\n    this.justify = config.justify;\r\n    this.orientation = config.orientation;\r\n  }\r\n\r\n  /**\r\n   * Selects the tab with the given id and shows its associated pane.\r\n   * Any other tab that was previously selected becomes unselected and its associated pane is hidden.\r\n   */\r\n  select(tabId: string) {\r\n    const selectedTab = this._getTabById(tabId);\r\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\r\n      let defaultPrevented = false;\r\n\r\n      this.tabChange.emit(\r\n        { activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; } });\r\n\r\n      if (!defaultPrevented) {\r\n        this.activeId = selectedTab.id;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    // auto-correct activeId that might have been set incorrectly as input\r\n    const activeTab = this._getTabById(this.activeId);\r\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\r\n  }\r\n\r\n  private _getTabById(id: string): NgbNavTab {\r\n    const tabsWithId: NgbNavTab[] = this.tabs.filter(tab => tab.id === id);\r\n    return tabsWithId.length ? tabsWithId[0] : null;\r\n  }\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbNavTabset, NgbNavTab, NgbNavTabContent, NgbNavTabTitle, NgbNavTabChangeEvent} from './navtab';\r\nimport {NgbNavTabsetConfig} from './navtab-config';\r\n\r\nexport {NgbNavTabset, NgbNavTab, NgbNavTabContent, NgbNavTabTitle, NgbNavTabChangeEvent} from './navtab';\r\nexport {NgbNavTabsetConfig} from './navtab-config';\r\n\r\nconst NGB_TABSET_DIRECTIVES = [NgbNavTabset, NgbNavTab, NgbNavTabContent, NgbNavTabTitle];\r\n\r\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule]})\r\nexport class NgbNavTabsetModule {\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbNavTabsetModule, providers: [NgbNavTabsetConfig]}; }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Configuration service for the NgbAccordion component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the accordions used in the application.\r\n */\r\n@Injectable()\r\nexport class NgbAccordionConfig {\r\n  closeOthers = false;\r\n  type: string;\r\n}\r\n","import {\r\n  AfterContentChecked,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  HostBinding\r\n} from '@angular/core';\r\n\r\nimport { isString } from '../utils/util';\r\n\r\nimport { NgbAccordionConfig } from './accordion-config';\r\n\r\nlet nextId = 0;\r\n\r\n/**\r\n * This directive should be used to wrap accordion panel titles that need to contain HTML markup or other directives.\r\n */\r\n@Directive({ selector: 'ng-template[ngbPanelTitle]' })\r\nexport class NgbPanelTitle {\r\n  constructor(public templateRef: TemplateRef<any>) { }\r\n}\r\n\r\n/**\r\n * This directive must be used to wrap accordion panel content.\r\n */\r\n@Directive({ selector: 'ng-template[ngbPanelContent]' })\r\nexport class NgbPanelContent {\r\n  constructor(public templateRef: TemplateRef<any>) { }\r\n}\r\n\r\n/**\r\n * The NgbPanel directive represents an individual panel with the title and collapsible\r\n * content\r\n */\r\n@Directive({ selector: 'ngb-panel' })\r\nexport class NgbPanel {\r\n  /**\r\n   *  A flag determining whether the panel is disabled or not.\r\n   *  When disabled, the panel cannot be toggled.\r\n   */\r\n  @Input() disabled = false;\r\n\r\n  /**\r\n   *  An optional id for the panel. The id should be unique.\r\n   *  If not provided, it will be auto-generated.\r\n   */\r\n  @Input() id = `ngb-panel-${nextId++}`;\r\n\r\n  /**\r\n   * A flag telling if the panel is currently open\r\n   */\r\n  isOpen = false;\r\n\r\n  /**\r\n   *  The title for the panel.\r\n   */\r\n  @Input() title: string;\r\n\r\n  /**\r\n   *  Accordion's types of panels to be applied per panel basis.\r\n   *  Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\" and \"danger\".\r\n   */\r\n  @Input() type: string;\r\n\r\n  @ContentChild(NgbPanelContent) contentTpl: NgbPanelContent;\r\n  @ContentChild(NgbPanelTitle) titleTpl: NgbPanelTitle;\r\n}\r\n\r\n/**\r\n * The payload of the change event fired right before toggling an accordion panel\r\n */\r\nexport interface NgbPanelChangeEvent {\r\n  /**\r\n   * Id of the accordion panel that is toggled\r\n   */\r\n  panelId: string;\r\n\r\n  /**\r\n   * Whether the panel will be opened (true) or closed (false)\r\n   */\r\n  nextState: boolean;\r\n\r\n  /**\r\n   * Function that will prevent panel toggling if called\r\n   */\r\n  preventDefault: () => void;\r\n}\r\n\r\n/**\r\n * The NgbAccordion directive is a collection of panels.\r\n * It can assure that only one panel can be opened at a time.\r\n */\r\n@Component({\r\n  selector: 'ngb-accordion',\r\n  exportAs: 'ngbAccordion',\r\n  // host: { 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels' },\r\n  template: `\r\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\r\n      <div class=\"card\">\r\n        <div role=\"tab\" id=\"{{panel.id}}-header\"\r\n          [class]=\"'card-header ' + (panel.type ? 'card-'+panel.type: type ? 'card-'+type : '')\" [class.active]=\"panel.isOpen\">\r\n          <a href (click)=\"toggle(panel.id)\" [class.text-muted]=\"panel.disabled\" [attr.tabindex]=\"(panel.disabled ? '-1' : null)\"\r\n            [attr.aria-expanded]=\"panel.isOpen\" [attr.aria-controls]=\"(panel.isOpen ? panel.id : null)\"\r\n            [attr.aria-disabled]=\"panel.disabled\">\r\n            {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\r\n          </a>\r\n        </div>\r\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\r\n             class=\"card-body collapse {{panel.isOpen ? 'show' : null}}\" *ngIf=\"!destroyOnHide || panel.isOpen\">\r\n             <ng-template [ngTemplateOutlet]=\"panel.contentTpl.templateRef\"></ng-template>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  `\r\n})\r\nexport class NgbAccordion implements AfterContentChecked {\r\n\r\n  // @HostBinding('role') get tablist() { return 'tablist'; }\r\n\r\n  // @HostBinding('attr.aria-multiselectable') get multiselectable() { return !this.closeOtherPanels; }\r\n\r\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\r\n\r\n  /**\r\n   * An array or comma separated strings of panel identifiers that should be opened\r\n   */\r\n  @Input() activeIds: string | string[] = [];\r\n\r\n  /**\r\n   *  Whether the other panels should be closed when a panel is opened\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('closeOthers') closeOtherPanels: boolean;\r\n\r\n  /**\r\n   * Whether the closed panels should be hidden without destroying them\r\n   */\r\n  @Input() destroyOnHide = true;\r\n\r\n  /**\r\n   *  Accordion's types of panels to be applied globally.\r\n   *  Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\" and \"danger\".\r\n   */\r\n  @Input() type: string;\r\n\r\n  /**\r\n   * A panel change event fired right before the panel toggle happens. See NgbPanelChangeEvent for payload details\r\n   */\r\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\r\n\r\n  constructor(config: NgbAccordionConfig) {\r\n    this.type = config.type;\r\n    this.closeOtherPanels = config.closeOthers;\r\n  }\r\n\r\n  /**\r\n   * Programmatically toggle a panel with a given id.\r\n   */\r\n  toggle(panelId: string) {\r\n    const panel = this.panels.find(p => p.id === panelId);\r\n\r\n    if (panel && !panel.disabled) {\r\n      let defaultPrevented = false;\r\n\r\n      this.panelChange.emit(\r\n        { panelId: panelId, nextState: !panel.isOpen, preventDefault: () => { defaultPrevented = true; } });\r\n\r\n      if (!defaultPrevented) {\r\n        panel.isOpen = !panel.isOpen;\r\n\r\n        if (this.closeOtherPanels) {\r\n          this._closeOthers(panelId);\r\n        }\r\n        this._updateActiveIds();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    // active id updates\r\n    if (isString(this.activeIds)) {\r\n      this.activeIds = (<string>this.activeIds).split(/\\s*,\\s*/);\r\n    }\r\n\r\n    // update panels open states\r\n    this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\r\n\r\n    // closeOthers updates\r\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\r\n      this._closeOthers(this.activeIds[0]);\r\n      this._updateActiveIds();\r\n    }\r\n  }\r\n\r\n  private _closeOthers(panelId: string) {\r\n    this.panels.forEach(panel => {\r\n      if (panel.id !== panelId) {\r\n        panel.isOpen = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  private _updateActiveIds() {\r\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\r\n  }\r\n}\r\n","export function toInteger(value: any): number {\r\n  return parseInt(`${value}`, 10);\r\n}\r\n\r\nexport function toString(value: any): string {\r\n  return (value !== undefined && value !== null) ? `${value}` : '';\r\n}\r\n\r\nexport function getValueInRange(value: number, max: number, min = 0): number {\r\n  return Math.max(Math.min(value, max), min);\r\n}\r\n\r\nexport function isString(value: any): value is string {\r\n  return typeof value === 'string';\r\n}\r\n\r\nexport function isNumber(value: any): value is number {\r\n  return !isNaN(toInteger(value));\r\n}\r\n\r\nexport function isInteger(value: any): value is number {\r\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n}\r\n\r\nexport function isDefined(value: any): boolean {\r\n  return value !== undefined && value !== null;\r\n}\r\n\r\nexport function padNumber(value: number) {\r\n  if (isNumber(value)) {\r\n    return `0${value}`.slice(-2);\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\nexport function regExpEscape(text) {\r\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelChangeEvent} from './accordion';\r\nimport {NgbAccordionConfig} from './accordion-config';\r\n\r\nexport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelChangeEvent} from './accordion';\r\nexport {NgbAccordionConfig} from './accordion-config';\r\n\r\nconst NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent];\r\n\r\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\r\nexport class NgbAccordionModule {\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAccordionModule, providers: [NgbAccordionConfig]}; }\r\n}\r\n","import {\r\n  Directive, ElementRef, EmbeddedViewRef, EventEmitter, HostBinding, Input, OnDestroy, OnInit, Output, Renderer,\r\n  ViewContainerRef,\r\n  HostListener,\r\n  Renderer2\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[sash]',\r\n  exportAs: 'sash'\r\n})\r\nexport class SashDirective implements OnInit, OnDestroy {\r\n\r\n  documentClickListener: any;\r\n\r\n  documentMoveListener: any;\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private _viewContainerRef: ViewContainerRef) {\r\n\r\n  }\r\n\r\n  @Input() panelWidth: number;\r\n\r\n  @Output() widthChanged = new EventEmitter<number>();\r\n\r\n  @HostListener('mousedown') onMouseDown() {\r\n    console.log('mousedown');\r\n    this.bindDocumentClickListener();\r\n  }\r\n\r\n  @HostListener('mouseup') onMouseUp() {\r\n    console.log('mouseup');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n\r\n\r\n  bindDocumentClickListener() {\r\n    if (!this.documentClickListener) {\r\n      this.documentClickListener = this.renderer.listen('document', 'mouseup', (event) => {\r\n        console.log('mouseup');\r\n        console.log(event);\r\n        this.unbindDocumentMoveListener();\r\n        this.unbindDocumentClickListener();\r\n      });\r\n\r\n      if (!this.documentMoveListener) {\r\n        this.bindDocumentClickListener = this.renderer.listen('document', 'mousemove', (event) => {\r\n          this.panelWidth = event.clientX;\r\n          const newWidth = event.clientX as number;\r\n          this.widthChanged.emit(newWidth);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  unbindDocumentClickListener() {\r\n    if (this.documentClickListener) {\r\n      this.documentClickListener();\r\n      this.documentClickListener = null;\r\n    }\r\n  }\r\n\r\n  unbindDocumentMoveListener() {\r\n    if (this.bindDocumentClickListener) {\r\n      this.bindDocumentClickListener();\r\n      this.bindDocumentClickListener = null;\r\n    }\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { SashDirective } from './sash.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SashDirective\r\n  ],\r\n  exports: [\r\n    SashDirective\r\n  ]\r\n})\r\nexport class PanelModule {\r\n  public static forRoot(config?: any): ModuleWithProviders {\r\n    return {\r\n      ngModule: PanelModule\r\n    };\r\n  }\r\n}\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { BsDropdownModule } from './dropdown';\r\nimport { NgbTabsetModule, NgbTabChangeEvent } from './tabset/tabset.module';\r\nimport { NgbNavTabsetModule, NgbNavTabChangeEvent } from './navtab/navtab.module';\r\nimport { NgbAccordionModule } from './accordion/accordion.module';\r\nimport { PanelModule } from './panel/panel.module';\r\n\r\nconst MODULES = [\r\n  BsDropdownModule\r\n];\r\n\r\nconst NGB_MODULES = [\r\n  NgbTabsetModule,\r\n  NgbNavTabsetModule,\r\n  NgbAccordionModule\r\n];\r\n\r\nconst IDE_MODULES = [\r\n  PanelModule\r\n];\r\n\r\n// @NgModule({\r\n//   imports: [\r\n//     BsDropdownModule.forRoot()\r\n//   ],\r\n//   exports: [BsDropdownModule],\r\n//   schemas: [NO_ERRORS_SCHEMA]\r\n// })\r\n// export class MDBRootModule {\r\n// }\r\n\r\n// @NgModule({ exports: [BsDropdownModule] })\r\n// export class MDBBootstrapModule {\r\n//   public static forRoot(): ModuleWithProviders {\r\n//     return { ngModule: MDBRootModule };\r\n//   }\r\n// }\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgbTabsetModule.forRoot(),\r\n    NgbNavTabsetModule.forRoot(),\r\n    NgbAccordionModule.forRoot()\r\n  ],\r\n  exports: [\r\n    NGB_MODULES\r\n  ]\r\n})\r\nexport class NgbRootModule {\r\n}\r\n\r\n@NgModule({})\r\nexport class NgbModule {\r\n  static forRoot(): ModuleWithProviders { return { ngModule: NgbRootModule }; }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    PanelModule.forRoot()\r\n  ]\r\n})\r\nexport class IDERootModule {\r\n}\r\n\r\n// @NgModule({ imports: IDE_MODULES, exports: IDE_MODULES })\r\n// export class IDEModule {\r\n//   static forRoot(): ModuleWithProviders { return { ngModule: IDERootModule }; }\r\n// }","export class LinkedList <T> {\r\n\r\n  public length = 0;\r\n  protected head: any;\r\n  protected tail: any;\r\n  protected current: any;\r\n  protected asArray: T[] = [];\r\n\r\n  protected getNode(position: number): any {\r\n    if (this.length === 0 || position < 0 || position >= this.length) {\r\n      throw new Error('Position is out of the list');\r\n    }\r\n\r\n    let current = this.head;\r\n\r\n    for (let index = 0; index < position; index++) {\r\n      current = current.next;\r\n    }\r\n    return current;\r\n  }\r\n\r\n  protected createInternalArrayRepresentation(): void {\r\n    const outArray: any[] = [];\r\n    let current = this.head;\r\n\r\n    while (current) {\r\n      outArray.push(current.value);\r\n      current = current.next;\r\n    }\r\n    this.asArray = outArray;\r\n  }\r\n\r\n  public get(position: number): T {\r\n    if (this.length === 0 || position < 0 || position >= this.length) {\r\n      return void 0;\r\n    }\r\n\r\n    let current = this.head;\r\n\r\n    for (let index = 0; index < position; index++) {\r\n      current = current.next;\r\n    }\r\n    return current.value;\r\n  }\r\n\r\n  public add(value: T, position: number = this.length): void {\r\n    if (position < 0 || position > this.length) {\r\n      throw new Error('Position is out of the list');\r\n    }\r\n\r\n    const node = {\r\n      value: value as any,\r\n      next: undefined as any,\r\n      previous: undefined as any\r\n    };\r\n\r\n    if (this.length === 0) {\r\n      this.head = node;\r\n      this.tail = node;\r\n      this.current = node;\r\n    } else {\r\n      if (position === 0) {\r\n        // first node\r\n        node.next = this.head;\r\n        this.head.previous = node;\r\n        this.head = node;\r\n      } else if (position === this.length) {\r\n        // last node\r\n        this.tail.next = node;\r\n        node.previous = this.tail;\r\n        this.tail = node;\r\n      } else {\r\n        // node in middle\r\n        const currentPreviousNode = this.getNode(position - 1);\r\n        const currentNextNode = currentPreviousNode.next;\r\n\r\n        currentPreviousNode.next = node;\r\n        currentNextNode.previous = node;\r\n\r\n        node.previous = currentPreviousNode;\r\n        node.next = currentNextNode;\r\n      }\r\n\r\n    }\r\n    this.length++;\r\n    this.createInternalArrayRepresentation();\r\n  }\r\n\r\n  public remove(position: number = 0): void {\r\n    if (this.length === 0 || position < 0 || position >= this.length) {\r\n      throw new Error('Position is out of the list');\r\n    }\r\n\r\n    if (position === 0) {\r\n      // first node\r\n      this.head = this.head.next;\r\n\r\n      if (this.head) {\r\n        // there is no second node\r\n        this.head.previous = undefined;\r\n      } else {\r\n        // there is no second node\r\n        this.tail = undefined;\r\n      }\r\n    } else if (position === this.length - 1) {\r\n      // last node\r\n      this.tail = this.tail.previous;\r\n      this.tail.next = undefined;\r\n    } else {\r\n      // middle node\r\n      const removedNode = this.getNode(position);\r\n      removedNode.next.previous = removedNode.previous;\r\n      removedNode.previous.next = removedNode.next;\r\n    }\r\n\r\n    this.length--;\r\n    this.createInternalArrayRepresentation();\r\n  }\r\n\r\n  public set(position: number, value: T): void {\r\n    if (this.length === 0 || position < 0 || position >= this.length) {\r\n      throw new Error('Position is out of the list');\r\n    }\r\n\r\n    const node = this.getNode(position);\r\n    node.value = value;\r\n    this.createInternalArrayRepresentation();\r\n  }\r\n\r\n  public toArray(): T[] {\r\n    return this.asArray;\r\n  }\r\n\r\n  public findAll(fn: any): any[] {\r\n    let current = this.head;\r\n    const result: any[] = [];\r\n    for (let index = 0; index < this.length; index++) {\r\n      if (fn(current.value, index)) {\r\n        result.push({index, value: current.value});\r\n      }\r\n      current = current.next;\r\n    }\r\n    return result;\r\n  }\r\n  // Array methods overriding start\r\n  public push(...args: T[]): number {\r\n    args.forEach((arg: any) => {\r\n      this.add(arg);\r\n    });\r\n    return this.length;\r\n  }\r\n\r\n  public pop(): T {\r\n    if (this.length === 0) {\r\n      return undefined;\r\n    }\r\n    const last = this.tail;\r\n    this.remove(this.length - 1);\r\n    return last.value;\r\n  }\r\n\r\n  public unshift(...args: T[]): number {\r\n    args.reverse();\r\n    args.forEach((arg: any) => {\r\n      this.add(arg, 0);\r\n    });\r\n    return this.length;\r\n  }\r\n\r\n  public shift(): T {\r\n    if (this.length === 0) {\r\n      return undefined;\r\n    }\r\n    const lastItem = this.head.value;\r\n    this.remove();\r\n    return lastItem;\r\n  }\r\n\r\n  public forEach(fn: any): void {\r\n    let current = this.head;\r\n    for (let index = 0; index < this.length; index++) {\r\n      fn(current.value, index);\r\n      current = current.next;\r\n    }\r\n  }\r\n\r\n  public indexOf(value: T): number {\r\n    let current = this.head;\r\n    let position = 0;\r\n\r\n    for (let index = 0; index < this.length; index++) {\r\n      if (current.value === value) {\r\n\r\n        position = index;\r\n        break;\r\n      }\r\n      current = current.next;\r\n    }\r\n    return position;\r\n  }\r\n\r\n  public some(fn: any): boolean {\r\n    let current = this.head;\r\n    let result  = false;\r\n    while (current && !result) {\r\n      if (fn(current.value)) {\r\n        result = true;\r\n        break;\r\n      }\r\n      current = current.next;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public every(fn: any): boolean {\r\n    let current = this.head;\r\n    let result  = true;\r\n    while (current && result)  {\r\n      if (!fn(current.value)) {\r\n        result = false;\r\n      }\r\n      current = current.next;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public toString(): string {\r\n    return '[Linked List]';\r\n  }\r\n\r\n  public find(fn: any): T {\r\n    let current = this.head;\r\n    let result: T;\r\n    for (let index = 0; index < this.length; index++) {\r\n      if (fn(current.value, index)) {\r\n        result = current.value;\r\n        break;\r\n      }\r\n      current = current.next;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public findIndex(fn: any): number {\r\n    let current = this.head;\r\n    let result: number;\r\n    for (let index = 0; index < this.length; index++) {\r\n      if (fn(current.value, index)) {\r\n        result = index;\r\n        break;\r\n      }\r\n      current = current.next;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  // Array methods overriding END\r\n}\r\n","import { IEmitable } from './types';\r\nimport {Type} from '@angular/core/src/type';\r\n\r\nexport class EventBusProxy {\r\n\r\n  constructor(private eventBus: IEmitable, private hostType: Type<any>, private eventTokenValueProvider: () => any) {\r\n  }\r\n\r\n  post(eventName: string, data: any) {\r\n    this.eventBus.post(this.hostType, this.eventTokenValueProvider(), eventName, data);\r\n  }\r\n}\r\n\r\n","import { Subject } from 'rxjs/Subject';\r\nimport {IDisposable} from './types';\r\nimport {Subscription} from 'rxjs/Subscription';\r\n\r\nexport class EventPipe implements IDisposable {\r\n\r\n  private eventSubject: Subject<any>;\r\n  private subscriptionMap: Map<object, Subscription>;\r\n  private onceSubscriptionMap: Map<object, Subscription>;\r\n\r\n  constructor(private name: string,\r\n               private tokenValue: string,\r\n               private emitter: string,\r\n               private parentEventPipeList: Array<EventPipe>) {\r\n    this.eventSubject = new Subject<any>();\r\n    this.subscriptionMap = new Map<object, Subscription>();\r\n    this.onceSubscriptionMap = new Map<object, Subscription>();\r\n    if (this.parentEventPipeList) {\r\n      this.parentEventPipeList.push(this);\r\n    }\r\n  }\r\n\r\n  post(data: any) {\r\n    this.eventSubject.next(data);\r\n  }\r\n\r\n  subscribe(eventHandler: (value: any) => void, caller: object): IDisposable {\r\n    const subscription = this.eventSubject.subscribe((value) => eventHandler.call(caller, value));\r\n    this.subscriptionMap.set(\r\n      caller,\r\n      subscription\r\n    );\r\n    return this;\r\n  }\r\n\r\n  subscribeOnce(eventHandler: (value: any) => void, caller: object): IDisposable {\r\n    const subscription = this.eventSubject.subscribe((value) => eventHandler.call(caller, value));\r\n    this.onceSubscriptionMap.set(\r\n      caller,\r\n      subscription\r\n    );\r\n    return this;\r\n  }\r\n\r\n  unSubscribe(subscriber: object) {\r\n    let subscription = this.subscriptionMap.get(subscriber);\r\n    if (subscription) {\r\n      subscription.unsubscribe();\r\n      subscription = null;\r\n      this.subscriptionMap.delete(subscriber);\r\n    } else {\r\n      subscription = this.onceSubscriptionMap.get(subscriber);\r\n      if (subscription) {\r\n        subscription.unsubscribe();\r\n        subscription = null;\r\n        this.onceSubscriptionMap.delete(subscriber);\r\n      }\r\n    }\r\n  }\r\n\r\n  // æ³¨éä½¿ç¨onceæ¹æ³æ³¨åçè®¢éã\r\n  unSubscribeForOnce() {\r\n    for (const subscriber of Array.from(this.onceSubscriptionMap.keys())) {\r\n      this.unSubscribe(subscriber);\r\n    }\r\n  }\r\n\r\n  matchEmitterToken(emitter: string, tokenValue: string): boolean {\r\n    if (this.emitter && emitter && this.emitter !== emitter) {\r\n      return false;\r\n    }\r\n    if (this.tokenValue && tokenValue && this.tokenValue !== tokenValue) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  examByTargetToken(target: string, tokenValue: string): boolean {\r\n    if (this.emitter !== target) {\r\n      return false;\r\n    }\r\n    if (this.tokenValue !== tokenValue) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  dispose(subscriber: object): void {\r\n    this.unSubscribe(subscriber);\r\n    if (this.subscriptionMap.size === 0 && this.parentEventPipeList) {\r\n      const location = this.parentEventPipeList.findIndex(item => item === this);\r\n      if (location !== -1) {\r\n        this.parentEventPipeList.splice(location, 1);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { forkJoin, Observable, of, Subject, timer } from 'rxjs';\r\nimport { IThenable } from './types';\r\nimport { mapTo } from 'rxjs/operators';\r\n\r\nexport class DuplexEventPipe {\r\n  private listenerResults: Map<string, Observable<boolean>[]>;\r\n  private subject: Subject<any>;\r\n  constructor(eventName: string) {\r\n    this.listenerResults = new Map<string, Observable<boolean>[]>();\r\n    this.subject = new Subject<boolean>();\r\n  }\r\n\r\n  notify(value: any): IThenable {\r\n    let thenFn: () => void = () => {};\r\n    let catchFn: () => void = () => {};\r\n    const timestamp = Date.now().toString();\r\n    this.subject.next({ value, timestamp });\r\n\r\n    // fooObservableæ æä¹ï¼æä¸¤ä¸ªä½ç¨ï¼\r\n    // 1. æ²¡æå®éobservableæ¶è½å¤è®©forkJoinè¾åºå¼ï¼è¿å¥subscriber.next\r\n    // 2. å»ºç«å»¶è¿çobservableï¼è·³åºå½åmicro taskï¼ï¼é¿åsubscriptionæªè¿ååthenFnæªè¢«è®¾ç½®ã\r\n    const fooObservable = timer(0).pipe(mapTo(true));\r\n    let listenerResultArray = this.listenerResults.get(timestamp);\r\n    if (!listenerResultArray) {\r\n      listenerResultArray = [fooObservable];\r\n    } else {\r\n      listenerResultArray = listenerResultArray.concat(fooObservable);\r\n      this.listenerResults.delete(timestamp);\r\n    }\r\n    const subscription = forkJoin(listenerResultArray).subscribe({next: (results: boolean[]) => {\r\n      const success = results.reduce((previous, current) => previous && current);\r\n      if (success) {\r\n        thenFn();\r\n      } else {\r\n        catchFn();\r\n      }\r\n      subscription.unsubscribe();\r\n    }, error: () => {\r\n      subscription.unsubscribe();\r\n    }});\r\n    return {\r\n      then(callback: () => any) {\r\n        thenFn = callback;\r\n        return this;\r\n      },\r\n      catch(callback: () => void) {\r\n        catchFn = callback;\r\n        return this;\r\n      }\r\n    };\r\n  }\r\n\r\n  listen(callback: (value: any) => Observable<boolean> | boolean | void, caller?: any) {\r\n    const listener = caller ? callback.bind(caller) : callback;\r\n    this.subject.subscribe(({value, timestamp}) => {\r\n      let listenerResult: Observable<boolean>;\r\n      const invokeResult = listener(value);\r\n      if (invokeResult instanceof Observable) {\r\n        listenerResult = invokeResult;\r\n      } else if (typeof invokeResult === 'boolean') {\r\n        listenerResult = of(invokeResult);\r\n      } else {\r\n        listenerResult = of(true);\r\n      }\r\n\r\n      let listenerResultArray = this.listenerResults.get(timestamp);\r\n      if (!listenerResultArray) {\r\n        listenerResultArray = [];\r\n        this.listenerResults.set(timestamp, listenerResultArray);\r\n      }\r\n      listenerResultArray.push(listenerResult);\r\n    });\r\n  }\r\n}\r\n","import {Injectable, Type} from '@angular/core';\r\nimport {EventBusProxy} from './event-bus-proxy';\r\nimport { IDisposable, IEmitable, IThenable } from './types';\r\nimport {EventPipe} from './event-pipe';\r\nimport { Observable } from 'rxjs';\r\nimport { DuplexEventPipe } from './duplex-event-pipe';\r\n\r\n@Injectable()\r\nexport class EventBus implements IEmitable {\r\n  private proxyMap: Map<string, EventBusProxy>;\r\n  private eventMap: Map<string, Array<EventPipe>>;\r\n  private notificationMap: Map<string, DuplexEventPipe>;\r\n\r\n  constructor() {\r\n    this.proxyMap = new Map<string, EventBusProxy>();\r\n    this.eventMap = new Map<string, Array<EventPipe>>();\r\n    this.notificationMap = new Map<string, DuplexEventPipe>();\r\n  }\r\n\r\n  getProxy(ownerType: Type<any>, eventTokenValueProvider: () => any): EventBusProxy {\r\n    const ownerName = ownerType.constructor.name;\r\n    if (!this.proxyMap.has(ownerName)) {\r\n      this.proxyMap.set(ownerName, new EventBusProxy(this, ownerType, eventTokenValueProvider));\r\n    }\r\n    return this.proxyMap.get(ownerName);\r\n  }\r\n\r\n  /**\r\n   * åéäºä»¶ï¼éç¥è®¢éèæ¥æ¶æ¶æ¯ã\r\n   */\r\n  post(emitterType: Type<any> | string, tokenValue: string, eventName: string, eventArgs: any): void {\r\n    const eventPipeList = this.eventMap.get(eventName);\r\n    if (!eventPipeList) {\r\n      return;\r\n    }\r\n\r\n    if (!emitterType) {\r\n      console.error('postæ¹æ³çåæ°emitterTypeä¸è½ä¸ºç©ºã');\r\n      return;\r\n    }\r\n    let emitter: string;\r\n    if (emitterType instanceof Type) {\r\n      emitter = emitterType.name;\r\n    } else {\r\n      emitter = emitterType;\r\n    }\r\n\r\n    for (const eventPipe of eventPipeList) {\r\n      if (eventPipe.matchEmitterToken(emitter, tokenValue)) {\r\n        eventPipe.post(eventArgs);\r\n        eventPipe.unSubscribeForOnce();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è®¢éäºä»¶\r\n   */\r\n  on(target: string, tokenValue: string, eventName: string, caller: object, handler: (value: any) => void): IDisposable {\r\n    return this.getEventPipe(eventName, target, tokenValue).subscribe(handler, caller);\r\n  }\r\n\r\n  /**\r\n   * è®¢éä¸æ¬¡ãæ¥æ¶å°ä¸æ¬¡æ¶æ¯ä¹åèªå¨åæ¶è®¢é\r\n   */\r\n  once(target: string, tokenValue: string, eventName: string, caller: object, handler: (value: any) => void): IDisposable {\r\n    return this.getEventPipe(eventName, target, tokenValue).subscribeOnce(handler, caller);\r\n  }\r\n\r\n  /**\r\n   * åéä¸ä¸ªè¯·æ±äºä»¶ï¼è·åçå¬èçååºå¹¶å¤ç\r\n   */\r\n  requestFor(target: string, tokenValue: string, requestName: string, requestValue: any, success: (any) => any, fail?: (string) => any) {\r\n    const eventPipe = this.findExistEventPipe(requestName, 'RequestSubject', tokenValue);\r\n    if (eventPipe) {\r\n      this.once(target, tokenValue, requestName, this, (response) => {\r\n        if (response.status === 'success') {\r\n          success(response.data);\r\n        } else {\r\n          if (fail) {\r\n            fail('No target responser listening');\r\n          }\r\n        }\r\n      });\r\n      eventPipe.post({target, token: tokenValue, data: requestValue});\r\n    } else {\r\n      if (fail) {\r\n        fail('No target responser listening.');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * çå¬ä¸ä¸ªè¯·æ±äºä»¶ï¼ç»åºååº\r\n   */\r\n  responseOn(responseSubject: string, requestName: string, callback: (any) => any) {\r\n    this.on('RequestSubject', null, requestName, this, (requestObj) => {\r\n      const response = {status: 'fail', data: null};\r\n      if (responseSubject === requestObj.target) {\r\n        response.data = callback(requestObj.data);\r\n        response.status = 'success';\r\n      }\r\n      this.post(requestObj.target, requestObj.token, requestName, response);\r\n    });\r\n  }\r\n\r\n  notify(eventName: string, eventArgs: any): IThenable {\r\n    let notification = this.notificationMap.get(eventName);\r\n    if (!notification) {\r\n      notification = new DuplexEventPipe(eventName);\r\n      this.notificationMap.set(eventName, notification);\r\n    }\r\n    return notification.notify(eventArgs);\r\n  }\r\n\r\n  listen(eventName: string, handler: (value: any) => Observable<boolean> | boolean | void, caller?: object): void {\r\n    let notification = this.notificationMap.get(eventName);\r\n    if (!notification) {\r\n      notification = new DuplexEventPipe(eventName);\r\n      this.notificationMap.set(eventName, notification);\r\n    }\r\n    return notification.listen(handler, caller);\r\n  }\r\n\r\n  private getEventPipe(eventName: string, target: string, tokenValue: string) {\r\n    let eventPipeList = this.eventMap.get(eventName);\r\n    if (!eventPipeList) {\r\n      eventPipeList = new Array<EventPipe>();\r\n      this.eventMap.set(eventName, eventPipeList);\r\n    }\r\n    let eventPipe = eventPipeList.find(item => item.examByTargetToken(target, tokenValue));\r\n    if (!eventPipe) {\r\n      eventPipe = new EventPipe(eventName, tokenValue, target, eventPipeList);\r\n    }\r\n    return eventPipe;\r\n  }\r\n\r\n  private findExistEventPipe(eventName: string, target: string, tokenValue: string): EventPipe {\r\n    const eventPipeList = this.eventMap.get(eventName);\r\n    if (!eventPipeList) {\r\n      return null;\r\n    }\r\n    // return eventPipeList.find(item => item.examByTargetToken(target, tokenValue));\r\n    for (const eventPipe of eventPipeList) {\r\n      if (eventPipe.matchEmitterToken(target, tokenValue)) {\r\n        return eventPipe;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nclass RequestSubject {}\r\nclass DataClass {}\r\n","let nextInstanceId = 1;\r\n\r\nexport class Model {\r\n  alive = true;\r\n  get isAlive() { return this.alive; }\r\n  get isDestroyed() { return !this.alive; }\r\n\r\n  constructor(params: any) {\r\n\r\n  }\r\n\r\n  assignId(id) {\r\n\r\n  }\r\n\r\n  destroy() {\r\n\r\n  }\r\n\r\n  resetNextInstanceId() {\r\n    nextInstanceId = 1;\r\n  }\r\n}\r\n","import { Model } from './model';\r\n\r\nexport class PaneAxis extends Model {\r\n  flexScale: any;\r\n  parent: any;\r\n  container: any;\r\n  orientation: any;\r\n  children: any[];\r\n  panes: any[];\r\n  items: any[];\r\n  deserialize() {\r\n\r\n  }\r\n\r\n\r\n  constructor(params?: any, viewRegistry?: any) {\r\n    super({});\r\n  }\r\n\r\n  getElement() { }\r\n\r\n  addChild() { }\r\n\r\n  removeChidl() { }\r\n\r\n  insertChildBefore() { }\r\n\r\n  subscribeToChild() { }\r\n\r\n  unsubscribeFromChild() { }\r\n}\r\n","// Essential: A handle to a resource that can be disposed. For example,\r\n// {Emitter::on} returns disposables representing subscriptions.\r\n\r\nexport class Disposable {\r\n\r\n  private disposed = false;\r\n\r\n  // Public: Ensure that `object` correctly implements the `Disposable`\r\n  // contract.\r\n  //\r\n  // * `object` An {Object} you want to perform the check against.\r\n  //\r\n  // Returns a {Boolean} indicating whether `object` is a valid `Disposable`.\r\n  static isDisposable(object): boolean {\r\n    if (object && object.dispose && typeof(object.dispose) === 'function') {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  //////\r\n  /// Section: Construction and Destruction\r\n  //////\r\n\r\n  // Public: Construct a Disposable\r\n  //\r\n  // * `disposalAction` A {Function} to call when {::dispose} is called for the\r\n  //   first time.\r\n  constructor(private disposalAction: () => any) { }\r\n\r\n  // Public: Perform the disposal action, indicating that the resource associated\r\n  // with this disposable is no longer needed.\r\n  //\r\n  // You can call this method more than once, but the disposal action will only\r\n  // be performed the first time.\r\n  dispose() {\r\n    if (!this.disposed) {\r\n      this.disposed = true;\r\n      if (this.disposalAction) {\r\n        this.disposalAction();\r\n      }\r\n      this.disposalAction = null;\r\n    }\r\n  }\r\n}\r\n","import { Disposable } from './disposable';\r\n\r\n// Essential: An object that aggregates multiple {Disposable} instances together\r\n// into a single disposable, so they can all be disposed as a group.\r\n//\r\n// These are very useful when subscribing to multiple events.\r\n//\r\n// ## Examples\r\n//\r\n// ```coffee\r\n// {CompositeDisposable} = require 'atom'\r\n//\r\n// class Something\r\n//   constructor: ->\r\n//     @disposables = new CompositeDisposable\r\n//     editor = atom.workspace.getActiveTextEditor()\r\n//     @disposables.add editor.onDidChange ->\r\n//     @disposables.add editor.onDidChangePath ->\r\n//\r\n//   destroy: ->\r\n//     @disposables.dispose()\r\n// ```\r\nexport class CompositeDisposable {\r\n  private disposed = false;\r\n  private disposables: Set<any>;\r\n\r\n  //////\r\n  /// Section: Construction and Destruction\r\n  //////\r\n\r\n  // Public: Construct an instance, optionally with one or more disposables\r\n  constructor(...disposables) {\r\n    this.disposables = new Set();\r\n    this.add(...disposables);\r\n  }\r\n  // Public: Dispose all disposables added to this composite disposable.\r\n  //\r\n  // If this object has already been disposed, this method has no effect.\r\n  dispose() {\r\n    if (!this.disposed) {\r\n      this.disposed = true;\r\n      this.disposables.forEach((disposable) => disposable.dispose());\r\n      this.disposables = null;\r\n    }\r\n  }\r\n  //////\r\n  /// Section: Managing Disposables\r\n  //////\r\n\r\n  // Public: Add disposables to be disposed when the composite is disposed.\r\n  //\r\n  // If this object has already been disposed, this method has no effect.\r\n  //\r\n  // * `...disposables` {Disposable} instances or any objects with `.dispose()`\r\n  //   methods.\r\n  add(...disposables) {\r\n    if (!this.disposed) {\r\n      for (const disposable of disposables) {\r\n        if (this.assertDisposable(disposable)) {\r\n          this.disposables.add(disposable);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Public: Remove a previously added disposable.\r\n  //\r\n  // * `disposable` {Disposable} instance or any object with a `.dispose()`\r\n  //   method.\r\n  remove(disposable): void {\r\n    if (!this.disposed) {\r\n      this.disposables.delete(disposable);\r\n    }\r\n  }\r\n  // Public: Alias to {CompositeDisposable::remove}\r\n  delete(disposable): void {\r\n    this.remove(disposable);\r\n  }\r\n  // Public: Clear all disposables. They will not be disposed by the next call\r\n  // to dispose.\r\n  clear() {\r\n    if (!this.disposed) {\r\n      this.disposables.clear();\r\n    }\r\n  }\r\n\r\n  assertDisposable(disposable): boolean {\r\n    if (!Disposable.isDisposable(disposable)) {\r\n      throw new TypeError('Arguments to CompositeDisposable.add must have a .dispose() method');\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Disposable } from './disposable';\r\nimport { CompositeDisposable } from './composite-disposable';\r\n\r\n// Essential: Utility class to be used when implementing event-based APIs that\r\n// allows for handlers registered via `::on` to be invoked with calls to\r\n// `::emit`. Instances of this class are intended to be used internally by\r\n// classes that expose an event-based API.\r\n//\r\n// For example:\r\n//\r\n// ```coffee\r\n// class User\r\n//   constructor: ->\r\n//     @emitter = new Emitter\r\n//\r\n//   onDidChangeName: (callback) ->\r\n//     @emitter.on 'did-change-name', callback\r\n//\r\n//   setName: (name) ->\r\n//     if name isnt @name\r\n//       @name = name\r\n//       @emitter.emit 'did-change-name', name\r\n//     @name\r\n// ```\r\nexport class Emitter {\r\n  static exceptionHandlers = [];\r\n  static dispatch = Emitter.simpleDispatch;\r\n\r\n  private disposed = false;\r\n  private subscriptions: CompositeDisposable;\r\n  private handlersByEventName: any;\r\n\r\n\r\n  static onEventHandlerException(exceptionHandler) {\r\n    this.dispatch = this.simpleDispatch;\r\n    if (this.exceptionHandlers.length === 0) {\r\n      this.dispatch = this.exceptionHandlingDispatch;\r\n    }\r\n\r\n    this.exceptionHandlers.push(exceptionHandler);\r\n\r\n    return new Disposable(() => {\r\n      this.exceptionHandlers.splice(this.exceptionHandlers.indexOf(exceptionHandler), 1);\r\n      if (this.exceptionHandlers.length === 0) {\r\n        return this.dispatch = this.simpleDispatch;\r\n      }\r\n    });\r\n  }\r\n\r\n  static simpleDispatch(handler, value) {\r\n    return handler(value);\r\n  }\r\n\r\n  static exceptionHandlingDispatch(handler, value) {\r\n    try {\r\n      return handler(value);\r\n    } catch (exception) {\r\n      return this.exceptionHandlers.map((exceptionHandler) => exceptionHandler(exception));\r\n    }\r\n  }\r\n\r\n  //////\r\n  /// Section: Construction and Destruction\r\n  //////\r\n\r\n  // Public: Construct an emitter.\r\n  //\r\n  // ```coffee\r\n  // @emitter = new Emitter()\r\n  // ```\r\n  constructor() {\r\n    this.clear();\r\n  }\r\n\r\n  // Public: Clear out any existing subscribers.\r\n  clear() {\r\n    if (this.subscriptions) {\r\n      this.subscriptions.dispose();\r\n    }\r\n    this.subscriptions = new CompositeDisposable();\r\n    return this.handlersByEventName = {};\r\n  }\r\n\r\n  // Public: Unsubscribe all handlers.\r\n  dispose() {\r\n    this.subscriptions.dispose();\r\n    this.handlersByEventName = null;\r\n    this.disposed = true;\r\n  }\r\n\r\n  //////\r\n  /// Section: Event Subscription\r\n  //////\r\n\r\n  // Public: Register the given handler function to be invoked whenever events by\r\n  // the given name are emitted via {::emit}.\r\n  //\r\n  // * `eventName` {String} naming the event that you want to invoke the handler\r\n  //   when emitted.\r\n  // * `handler` {Function} to invoke when {::emit} is called with the given\r\n  //   event name.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  on(eventName, handler, unshift = false): Disposable {\r\n    if (this.disposed) {\r\n      throw new Error('Emitter has been disposed');\r\n    }\r\n\r\n    if (typeof handler !== 'function') {\r\n      throw new Error('Handler must be a function');\r\n    }\r\n    const currentHandlers = this.handlersByEventName[eventName];\r\n    if (currentHandlers) {\r\n      if (unshift) {\r\n        this.handlersByEventName[eventName] = [handler].concat(currentHandlers);\r\n      } else {\r\n        this.handlersByEventName[eventName] = currentHandlers.concat(handler);\r\n      }\r\n    } else {\r\n      this.handlersByEventName[eventName] = [handler];\r\n    }\r\n    // When the emitter is disposed, we want to dispose of all subscriptions.\r\n    // However, we also need to stop tracking disposables when they're disposed\r\n    // from outside, otherwise this class will hold references to all the\r\n    // disposables it created (instead of just the active ones).\r\n    const cleanup = new Disposable(() => {\r\n      this.subscriptions.remove(cleanup);\r\n      return this.off(eventName, handler);\r\n    });\r\n    this.subscriptions.add(cleanup);\r\n    return cleanup;\r\n  }\r\n\r\n  // Public: Register the given handler function to be invoked the next time an\r\n  // events with the given name is emitted via {::emit}.\r\n  //\r\n  // * `eventName` {String} naming the event that you want to invoke the handler\r\n  //   when emitted.\r\n  // * `handler` {Function} to invoke when {::emit} is called with the given\r\n  //   event name.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  once(eventName, handler, unshift = false): Disposable {\r\n    let disposable: Disposable;\r\n    const wrapped = (value) => {\r\n      disposable.dispose();\r\n      handler(value);\r\n    };\r\n    disposable = this.on(eventName, wrapped, unshift);\r\n    return disposable;\r\n  }\r\n\r\n  // Public: Register the given handler function to be invoked *before* all\r\n  // other handlers existing at the time of subscription whenever events by the\r\n  // given name are emitted via {::emit}.\r\n  //\r\n  // Use this method when you need to be the first to handle a given event. This\r\n  // could be required when a data structure in a parent object needs to be\r\n  // updated before third-party event handlers registered on a child object via a\r\n  // public API are invoked. Your handler could itself be preempted via\r\n  // subsequent calls to this method, but this can be controlled by keeping\r\n  // methods based on `::preempt` private.\r\n  //\r\n  // * `eventName` {String} naming the event that you want to invoke the handler\r\n  //   when emitted.\r\n  // * `handler` {Function} to invoke when {::emit} is called with the given\r\n  //   event name.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  preempt(eventName, handler) {\r\n    this.on(eventName, handler, true);\r\n  }\r\n\r\n  // Private: Used by the disposable.\r\n  off(eventName, handlerToRemove) {\r\n    if (this.disposed) {\r\n      return;\r\n    }\r\n\r\n    const oldHandlers = this.handlersByEventName[eventName];\r\n\r\n    if (oldHandlers) {\r\n      const newHandlers = [];\r\n      for (const handler of oldHandlers) {\r\n        if (handler !== handlerToRemove) {\r\n          newHandlers.push(handler);\r\n        }\r\n      }\r\n      if (newHandlers.length > 0) {\r\n        this.handlersByEventName[eventName] = newHandlers;\r\n      } else {\r\n        delete this.handlersByEventName[eventName];\r\n      }\r\n    }\r\n  }\r\n\r\n  //////\r\n  /// Section: Event Emission\r\n  //////\r\n\r\n  // Public: Invoke handlers registered via {::on} for the given event name.\r\n  //\r\n  // * `eventName` The name of the event to emit. Handlers registered with {::on}\r\n  //   for the same name will be invoked.\r\n  // * `value` Callbacks will be invoked with this value as an argument.\r\n  emit(eventName, value) {\r\n    if (this.handlersByEventName && this.handlersByEventName[eventName]) {\r\n      const handlers = this.handlersByEventName[eventName];\r\n      for (const handler of handlers) {\r\n        Emitter.dispatch(handler, value);\r\n      }\r\n    }\r\n  }\r\n\r\n  emitAsync(eventName, value): Promise<any> {\r\n    if (this.handlersByEventName && this.handlersByEventName[eventName]) {\r\n      const results = [];\r\n      for (const handler of this.handlersByEventName[eventName]) {\r\n        results.push(Emitter.dispatch(handler, value));\r\n      }\r\n      return Promise.all(results).then(function() {});\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n\r\n  getEventNames(): string[] {\r\n    return Object.keys(this.handlersByEventName);\r\n  }\r\n\r\n  listenerCountForEventName(eventName) {\r\n    return this.handlersByEventName && this.handlersByEventName[eventName] ? this.handlersByEventName[eventName].length : 0;\r\n  }\r\n\r\n  getTotalListenerCount() {\r\n    let result = 0;\r\n    for (const eventName in this.handlersByEventName) {\r\n      if (this.handlersByEventName.hasOwnProperty(eventName)) {\r\n        result += this.handlersByEventName[eventName].length;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { PaneAxis } from './pane-axis';\r\nimport { Emitter, Disposable } from './event-kit';\r\n\r\n// const Grim = require('grim')\r\n// const {CompositeDisposable, Emitter} = require('event-kit')\r\n// const PaneAxis = require('./pane-axis')\r\n// const TextEditor = require('./text-editor')\r\n// const PaneElement = require('./pane-element')\r\n\r\nlet nextInstanceId = 1;\r\n\r\nclass SaveCancelledError extends Error { }\r\n\r\n// Extended: A container for presenting content in the center of the workspace.\r\n// Panes can contain multiple items, one of which is *active* at a given time.\r\n// The view corresponding to the active item is displayed in the interface. In\r\n// the default configuration, tabs are also displayed for each item.\r\n//\r\n// Each pane may also contain one *pending* item. When a pending item is added\r\n// to a pane, it will replace the currently pending item, if any, instead of\r\n// simply being added. In the default configuration, the text in the tab for\r\n// pending items is shown in italics.\r\nexport class Pane {\r\n\r\n  id: any;\r\n  activeItem: any;\r\n  focused: any;\r\n  applicationDelegate: any;\r\n  notificationManager: any;\r\n  config: any;\r\n  deserializerManager: any;\r\n  viewRegistry: any;\r\n  private emitter: Emitter;\r\n  alive = true;\r\n  subscriptionsPerItem = new WeakMap();\r\n  items = [];\r\n  itemStack = [];\r\n  container = null;\r\n  flexScale: any;\r\n  parent: any;\r\n  itemStackIndex: number;\r\n  pendingItem: any;\r\n\r\n  static deserialize(state, { deserializers, applicationDelegate, config, notifications, views }) {\r\n    const { activeItemIndex } = state;\r\n    const activeItemURI = state.activeItemURI || state.activeItemUri;\r\n\r\n    const items = [];\r\n    for (const itemState of state.items) {\r\n      const item = deserializers.deserialize(itemState);\r\n      if (item) { items.push(item); }\r\n    }\r\n    state.items = items;\r\n\r\n    state.activeItem = items[activeItemIndex];\r\n    if (!state.activeItem && activeItemURI) {\r\n      state.activeItem = state.items.find((item) =>\r\n        typeof item.getURI === 'function' && item.getURI() === activeItemURI\r\n      );\r\n    }\r\n\r\n    return new Pane(Object.assign(state, {\r\n      deserializerManager: deserializers,\r\n      notificationManager: notifications,\r\n      viewRegistry: views,\r\n      config,\r\n      applicationDelegate\r\n    }));\r\n  }\r\n\r\n\r\n\r\n  inspect() {\r\n    return `Pane ${this.id}`;\r\n  }\r\n  constructor(params: any) {\r\n    this.setPendingItem = this.setPendingItem.bind(this);\r\n    this.getPendingItem = this.getPendingItem.bind(this);\r\n    this.clearPendingItem = this.clearPendingItem.bind(this);\r\n    this.onItemDidTerminatePendingState = this.onItemDidTerminatePendingState.bind(this);\r\n    this.saveItem = this.saveItem.bind(this);\r\n    this.saveItemAs = this.saveItemAs.bind(this);\r\n\r\n    this.id = params.id;\r\n    if (this.id != null) {\r\n      nextInstanceId = Math.max(nextInstanceId, this.id + 1);\r\n    } else {\r\n      this.id = nextInstanceId++;\r\n    }\r\n\r\n    this.activeItem = params.activeItem;\r\n    this.focused = params.focused != null ? params.focused : false;\r\n    this.applicationDelegate = params.applicationDelegate;\r\n    this.notificationManager = params.notificationManager;\r\n    this.config = params.config;\r\n    this.deserializerManager = params.deserializerManager;\r\n    this.viewRegistry = params.viewRegistry;\r\n\r\n    this.emitter = new Emitter();\r\n    this.alive = true;\r\n    this.subscriptionsPerItem = new WeakMap();\r\n    this.items = [];\r\n    this.itemStack = [];\r\n    this.container = null;\r\n\r\n    this.addItems((params.items || []).filter(item => item));\r\n    if (!this.getActiveItem()) {\r\n      this.setActiveItem(this.items[0]);\r\n    }\r\n    this.addItemsToStack(params.itemStackIndices || []);\r\n    this.setFlexScale(params.flexScale || 1);\r\n  }\r\n\r\n  getElement() {\r\n  }\r\n\r\n  serialize() {\r\n    const itemsToBeSerialized = this.items.filter(item => item && typeof item.serialize === 'function');\r\n\r\n    const itemStackIndices = [];\r\n    for (const item of this.itemStack) {\r\n      if (typeof item.serialize === 'function') {\r\n        itemStackIndices.push(itemsToBeSerialized.indexOf(item));\r\n      }\r\n    }\r\n\r\n    const activeItemIndex = itemsToBeSerialized.indexOf(this.activeItem);\r\n\r\n    return {\r\n      deserializer: 'Pane',\r\n      id: this.id,\r\n      items: itemsToBeSerialized.map(item => item.serialize()),\r\n      itemStackIndices,\r\n      activeItemIndex,\r\n      focused: this.focused,\r\n      flexScale: this.flexScale\r\n    };\r\n  }\r\n\r\n  getParent() { return this.parent; }\r\n\r\n  setParent(parent) {\r\n    this.parent = parent;\r\n  }\r\n\r\n  getContainer() { return this.container; }\r\n\r\n  setContainer(container) {\r\n    if (container && container !== this.container) {\r\n      this.container = container;\r\n      container.didAddPane({ pane: this });\r\n    }\r\n  }\r\n\r\n  // Private: Determine whether the given item is allowed to exist in this pane.\r\n  //\r\n  // * `item` the Item\r\n  //\r\n  // Returns a {Boolean}.\r\n  isItemAllowed(item) {\r\n    if (typeof item.getAllowedLocations !== 'function') {\r\n      return true;\r\n    } else {\r\n      return item.getAllowedLocations().includes(this.getContainer().getLocation());\r\n    }\r\n  }\r\n\r\n  setFlexScale(flexScale) {\r\n    this.flexScale = flexScale;\r\n    return this.flexScale;\r\n  }\r\n\r\n  getFlexScale() { return this.flexScale; }\r\n\r\n  increaseSize() { this.setFlexScale(this.getFlexScale() * 1.1); }\r\n\r\n  decreaseSize() { this.setFlexScale(this.getFlexScale() / 1.1); }\r\n\r\n  /*\r\n  Section: Event Subscription\r\n  */\r\n\r\n  // Public: Invoke the given callback when the pane resizes\r\n  //\r\n  // The callback will be invoked when pane's flexScale property changes.\r\n  // Use {::getFlexScale} to get the current value.\r\n  //\r\n  // * `callback` {Function} to be called when the pane is resized\r\n  //   * `flexScale` {Number} representing the panes `flex-grow`; ability for a\r\n  //     flex item to grow if necessary.\r\n  //\r\n  // Returns a {Disposable} on which '.dispose()' can be called to unsubscribe.\r\n  onDidChangeFlexScale(callback) {\r\n  }\r\n\r\n  // Public: Invoke the given callback with the current and future values of\r\n  // {::getFlexScale}.\r\n  //\r\n  // * `callback` {Function} to be called with the current and future values of\r\n  //   the {::getFlexScale} property.\r\n  //   * `flexScale` {Number} representing the panes `flex-grow`; ability for a\r\n  //     flex item to grow if necessary.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  observeFlexScale(callback) {\r\n    callback(this.flexScale);\r\n    return this.onDidChangeFlexScale(callback);\r\n  }\r\n\r\n  // Public: Invoke the given callback when the pane is activated.\r\n  //\r\n  // The given callback will be invoked whenever {::activate} is called on the\r\n  // pane, even if it is already active at the time.\r\n  //\r\n  // * `callback` {Function} to be called when the pane is activated.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidActivate(callback) {\r\n  }\r\n\r\n  // Public: Invoke the given callback before the pane is destroyed.\r\n  //\r\n  // * `callback` {Function} to be called before the pane is destroyed.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onWillDestroy(callback) {\r\n  }\r\n\r\n  // Public: Invoke the given callback when the pane is destroyed.\r\n  //\r\n  // * `callback` {Function} to be called when the pane is destroyed.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidDestroy(callback) {\r\n  }\r\n\r\n  // Public: Invoke the given callback when the value of the {::isActive}\r\n  // property changes.\r\n  //\r\n  // * `callback` {Function} to be called when the value of the {::isActive}\r\n  //   property changes.\r\n  //   * `active` {Boolean} indicating whether the pane is active.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidChangeActive(callback) {\r\n    return this.container.onDidChangeActivePane(activePane => {\r\n      const isActive = this === activePane;\r\n      callback(isActive);\r\n    });\r\n  }\r\n\r\n  // Public: Invoke the given callback with the current and future values of the\r\n  // {::isActive} property.\r\n  //\r\n  // * `callback` {Function} to be called with the current and future values of\r\n  //   the {::isActive} property.\r\n  //   * `active` {Boolean} indicating whether the pane is active.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  observeActive(callback) {\r\n    callback(this.isActive());\r\n    return this.onDidChangeActive(callback);\r\n  }\r\n\r\n  // Public: Invoke the given callback when an item is added to the pane.\r\n  //\r\n  // * `callback` {Function} to be called with when items are added.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `item` The added pane item.\r\n  //     * `index` {Number} indicating where the item is located.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidAddItem(callback) {\r\n    return this.emitter.on('did-add-item', callback);\r\n  }\r\n\r\n  // Public: Invoke the given callback when an item is removed from the pane.\r\n  //\r\n  // * `callback` {Function} to be called with when items are removed.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `item` The removed pane item.\r\n  //     * `index` {Number} indicating where the item was located.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidRemoveItem(callback): Disposable {\r\n    return this.emitter.on('did-remove-item', callback);\r\n  }\r\n\r\n  // Public: Invoke the given callback before an item is removed from the pane.\r\n  //\r\n  // * `callback` {Function} to be called with when items are removed.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `item` The pane item to be removed.\r\n  //     * `index` {Number} indicating where the item is located.\r\n  onWillRemoveItem(callback) {\r\n  }\r\n\r\n  // Public: Invoke the given callback when an item is moved within the pane.\r\n  //\r\n  // * `callback` {Function} to be called with when items are moved.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `item` The removed pane item.\r\n  //     * `oldIndex` {Number} indicating where the item was located.\r\n  //     * `newIndex` {Number} indicating where the item is now located.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidMoveItem(callback) {\r\n  }\r\n\r\n  // Public: Invoke the given callback with all current and future items.\r\n  //\r\n  // * `callback` {Function} to be called with current and future items.\r\n  //   * `item` An item that is present in {::getItems} at the time of\r\n  //     subscription or that is added at some later time.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  observeItems(callback) {\r\n    for (const item of this.getItems()) {\r\n      callback(item);\r\n    }\r\n    return this.onDidAddItem(({ item }) => callback(item));\r\n  }\r\n\r\n  // å¬ææ¹æ³ï¼ å½{::getActiveItem}å¼åæ¢åè°ç¨ã\r\n  onDoingChangeActiveItem(callback): Disposable {\r\n    return this.emitter.on('doing-change-active-item', callback);\r\n  }\r\n\r\n  // Public: Invoke the given callback when the value of {::getActiveItem}\r\n  // changes.\r\n  //\r\n  // * `callback` {Function} to be called with when the active item changes.\r\n  //   * `activeItem` The current active item.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidChangeActiveItem(callback): Disposable {\r\n    return this.emitter.on('did-change-active-item', callback);\r\n  }\r\n\r\n  // Public: Invoke the given callback when {::activateNextRecentlyUsedItem}\r\n  // has been called, either initiating or continuing a forward MRU traversal of\r\n  // pane items.\r\n  //\r\n  // * `callback` {Function} to be called with when the active item changes.\r\n  //   * `nextRecentlyUsedItem` The next MRU item, now being set active\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onChooseNextMRUItem(callback) {\r\n  }\r\n\r\n  // Public: Invoke the given callback when {::activatePreviousRecentlyUsedItem}\r\n  // has been called, either initiating or continuing a reverse MRU traversal of\r\n  // pane items.\r\n  //\r\n  // * `callback` {Function} to be called with when the active item changes.\r\n  //   * `previousRecentlyUsedItem` The previous MRU item, now being set active\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onChooseLastMRUItem(callback) {\r\n  }\r\n\r\n  // Public: Invoke the given callback when {::moveActiveItemToTopOfStack}\r\n  // has been called, terminating an MRU traversal of pane items and moving the\r\n  // current active item to the top of the stack. Typically bound to a modifier\r\n  // (e.g. CTRL) key up event.\r\n  //\r\n  // * `callback` {Function} to be called with when the MRU traversal is done.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDoneChoosingMRUItem(callback) {\r\n  }\r\n\r\n  // Public: Invoke the given callback with the current and future values of\r\n  // {::getActiveItem}.\r\n  //\r\n  // * `callback` {Function} to be called with the current and future active\r\n  //   items.\r\n  //   * `activeItem` The current active item.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  observeActiveItem(callback): Disposable {\r\n    callback(this.getActiveItem());\r\n    return this.onDidChangeActiveItem(callback);\r\n  }\r\n\r\n  // Public: Invoke the given callback before items are destroyed.\r\n  //\r\n  // * `callback` {Function} to be called before items are destroyed.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `item` The item that will be destroyed.\r\n  //     * `index` The location of the item.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to\r\n  // unsubscribe.\r\n  onWillDestroyItem(callback) {\r\n  }\r\n\r\n  // Called by the view layer to indicate that the pane has gained focus.\r\n  focus() {\r\n    this.focused = true;\r\n    return this.activate();\r\n  }\r\n\r\n  // Called by the view layer to indicate that the pane has lost focus.\r\n  blur() {\r\n    this.focused = false;\r\n    return true; // if this is called from an event handler, don't cancel it\r\n  }\r\n\r\n  isFocused() { return this.focused; }\r\n\r\n  getPanes() { return [this]; }\r\n\r\n  unsubscribeFromItem(item) {\r\n    const subscription = this.subscriptionsPerItem.get(item);\r\n    if (subscription) {\r\n      subscription.dispose();\r\n      this.subscriptionsPerItem.delete(item);\r\n    }\r\n  }\r\n\r\n  /*\r\n  Section: Items\r\n  */\r\n\r\n  // Public: Get the items in this pane.\r\n  //\r\n  // Returns an {Array} of items.\r\n  getItems() {\r\n    return this.items.slice();\r\n  }\r\n\r\n  // Public: Get the active pane item in this pane.\r\n  //\r\n  // Returns a pane item.\r\n  getActiveItem() { return this.activeItem; }\r\n\r\n  setActiveItem(activeItem?: any, options?: any) {\r\n    const modifyStack = options && options.modifyStack;\r\n    if (activeItem !== this.activeItem) {\r\n      if (modifyStack !== false) { this.addItemToStack(activeItem); }\r\n      this.emitter.emit('doing-change-active-item', this.activeItem);\r\n      this.activeItem = activeItem;\r\n      this.emitter.emit('did-change-active-item', this.activeItem);\r\n      if (this.container) { this.container.didChangeActiveItemOnPane(this, this.activeItem); }\r\n    }\r\n    return this.activeItem;\r\n  }\r\n\r\n  // Build the itemStack after deserializing\r\n  addItemsToStack(itemStackIndices) {\r\n    if (this.items.length > 0) {\r\n      if (itemStackIndices.length !== this.items.length || itemStackIndices.includes(-1)) {\r\n        itemStackIndices = this.items.map((item, i) => i);\r\n      }\r\n\r\n      for (const itemIndex of itemStackIndices) {\r\n        this.addItemToStack(this.items[itemIndex]);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Add item (or move item) to the end of the itemStack\r\n  addItemToStack(newItem) {\r\n    if (newItem == null) { return; }\r\n    const index = this.itemStack.indexOf(newItem);\r\n    if (index !== -1) { this.itemStack.splice(index, 1); }\r\n    return this.itemStack.push(newItem);\r\n  }\r\n\r\n  // Public: Return the item at the given index.\r\n  //\r\n  // * `index` {Number}\r\n  //\r\n  // Returns an item or `null` if no item exists at the given index.\r\n  itemAtIndex(index) {\r\n    return this.items[index];\r\n  }\r\n\r\n  // Makes the next item in the itemStack active.\r\n  activateNextRecentlyUsedItem() {\r\n    if (this.items.length > 1) {\r\n      if (this.itemStackIndex == null) { this.itemStackIndex = this.itemStack.length - 1; }\r\n      if (this.itemStackIndex === 0) { this.itemStackIndex = this.itemStack.length; }\r\n      this.itemStackIndex--;\r\n      const nextRecentlyUsedItem = this.itemStack[this.itemStackIndex];\r\n      this.setActiveItem(nextRecentlyUsedItem, { modifyStack: false });\r\n    }\r\n  }\r\n\r\n  // Makes the previous item in the itemStack active.\r\n  activatePreviousRecentlyUsedItem() {\r\n    if (this.items.length > 1) {\r\n      if (this.itemStackIndex + 1 === this.itemStack.length || this.itemStackIndex == null) {\r\n        this.itemStackIndex = -1;\r\n      }\r\n      this.itemStackIndex++;\r\n      const previousRecentlyUsedItem = this.itemStack[this.itemStackIndex];\r\n      this.setActiveItem(previousRecentlyUsedItem, { modifyStack: false });\r\n    }\r\n  }\r\n\r\n  // Moves the active item to the end of the itemStack once the ctrl key is lifted\r\n  moveActiveItemToTopOfStack() {\r\n    delete this.itemStackIndex;\r\n    this.addItemToStack(this.activeItem);\r\n  }\r\n\r\n  // Public: Makes the next item active.\r\n  activateNextItem() {\r\n    const index = this.getActiveItemIndex();\r\n    if (index < (this.items.length - 1)) {\r\n      this.activateItemAtIndex(index + 1);\r\n    } else {\r\n      this.activateItemAtIndex(0);\r\n    }\r\n  }\r\n\r\n  // Public: Makes the previous item active.\r\n  activatePreviousItem() {\r\n    const index = this.getActiveItemIndex();\r\n    if (index > 0) {\r\n      this.activateItemAtIndex(index - 1);\r\n    } else {\r\n      this.activateItemAtIndex(this.items.length - 1);\r\n    }\r\n  }\r\n\r\n  activateLastItem() {\r\n    this.activateItemAtIndex(this.items.length - 1);\r\n  }\r\n\r\n  // Public: Move the active tab to the right.\r\n  moveItemRight() {\r\n    const index = this.getActiveItemIndex();\r\n    const rightItemIndex = index + 1;\r\n    if (rightItemIndex <= this.items.length - 1) { this.moveItem(this.getActiveItem(), rightItemIndex); }\r\n  }\r\n\r\n  // Public: Move the active tab to the left\r\n  moveItemLeft() {\r\n    const index = this.getActiveItemIndex();\r\n    const leftItemIndex = index - 1;\r\n    if (leftItemIndex >= 0) { return this.moveItem(this.getActiveItem(), leftItemIndex); }\r\n  }\r\n\r\n  // Public: Get the index of the active item.\r\n  //\r\n  // Returns a {Number}.\r\n  getActiveItemIndex() {\r\n    return this.items.indexOf(this.activeItem);\r\n  }\r\n\r\n  // Public: Activate the item at the given index.\r\n  //\r\n  // * `index` {Number}\r\n  activateItemAtIndex(index) {\r\n    const item = this.itemAtIndex(index) || this.getActiveItem();\r\n    return this.setActiveItem(item);\r\n  }\r\n\r\n  // Public: Make the given item *active*, causing it to be displayed by\r\n  // the pane's view.\r\n  //\r\n  // * `item` The item to activate\r\n  // * `options` (optional) {Object}\r\n  //   * `pending` (optional) {Boolean} indicating that the item should be added\r\n  //     in a pending state if it does not yet exist in the pane. Existing pending\r\n  //     items in a pane are replaced with new pending items when they are opened.\r\n  activateItem(item, options: any = {}) {\r\n    if (item) {\r\n      const index = (this.getPendingItem() === this.activeItem)\r\n        ? this.getActiveItemIndex()\r\n        : this.getActiveItemIndex() + 1;\r\n      this.addItem(item, Object.assign({}, options, { index }));\r\n      this.setActiveItem(item);\r\n    }\r\n  }\r\n\r\n  // Public: Add the given item to the pane.\r\n  //\r\n  // * `item` The item to add. It can be a model with an associated view or a\r\n  //   view.\r\n  // * `options` (optional) {Object}\r\n  //   * `index` (optional) {Number} indicating the index at which to add the item.\r\n  //     If omitted, the item is added after the current active item.\r\n  //   * `pending` (optional) {Boolean} indicating that the item should be\r\n  //     added in a pending state. Existing pending items in a pane are replaced with\r\n  //     new pending items when they are opened.\r\n  //\r\n  // Returns the added item.\r\n  addItem(item, options: any = {}) {\r\n    // Backward compat with old API:\r\n    //   addItem(item, index=@getActiveItemIndex() + 1)\r\n    if (typeof options === 'number') {\r\n      options = { index: options };\r\n    }\r\n\r\n    const index = options.index != null ? options.index : this.getActiveItemIndex() + 1;\r\n    const moved = options.moved != null ? options.moved : false;\r\n    const pending = options.pending != null ? options.pending : false;\r\n\r\n    if (!item || typeof item !== 'object') {\r\n      throw new Error(`Pane items must be objects. Attempted to add item ${item}.`);\r\n    }\r\n\r\n    if (typeof item.isDestroyed === 'function' && item.isDestroyed()) {\r\n      throw new Error(`Adding a pane item with URI\r\n      '${typeof item.getURI === 'function' && item.getURI()}' that has already been destroyed`);\r\n    }\r\n\r\n    if (this.items.find(it => it === item)) { return; }\r\n\r\n    if (typeof item.onDidDestroy === 'function') {\r\n    }\r\n\r\n    this.items.splice(index, 0, item);\r\n    const lastPendingItem = this.getPendingItem();\r\n    const replacingPendingItem = lastPendingItem != null && !moved;\r\n    if (replacingPendingItem) { this.pendingItem = null; }\r\n    if (pending) { this.setPendingItem(item); }\r\n\r\n    this.emitter.emit('did-add-item', { item, index, moved });\r\n    if (!moved) {\r\n      if (this.container) { this.container.didAddPaneItem(item, this, index); }\r\n    }\r\n\r\n    if (replacingPendingItem) { this.destroyItem(lastPendingItem); }\r\n    if (!this.getActiveItem()) { this.setActiveItem(item); }\r\n    return item;\r\n  }\r\n\r\n  setPendingItem(item) {\r\n    if (this.pendingItem !== item) {\r\n      const mostRecentPendingItem = this.pendingItem;\r\n      this.pendingItem = item;\r\n    }\r\n  }\r\n\r\n  getPendingItem() {\r\n    return this.pendingItem || null;\r\n  }\r\n\r\n  clearPendingItem() {\r\n    this.setPendingItem(null);\r\n  }\r\n\r\n  onItemDidTerminatePendingState(callback) {\r\n  }\r\n\r\n  // Public: Add the given items to the pane.\r\n  //\r\n  // * `items` An {Array} of items to add. Items can be views or models with\r\n  //   associated views. Any objects that are already present in the pane's\r\n  //   current items will not be added again.\r\n  // * `index` (optional) {Number} index at which to add the items. If omitted,\r\n  //   the item is #   added after the current active item.\r\n  //\r\n  // Returns an {Array} of added items.\r\n  addItems(items: any[], index = this.getActiveItemIndex() + 1) {\r\n    items = items.filter(item => !this.items.find(it => it === item));\r\n    for (let i = 0; i < items.length; i++) {\r\n      const item = items[i];\r\n      this.addItem(item, { index: index + i });\r\n    }\r\n    return items;\r\n  }\r\n\r\n  removeItem(item, moved = false) {\r\n    const index = this.items.indexOf(item);\r\n    if (index === -1) { return; }\r\n    if (this.getPendingItem() === item) { this.pendingItem = null; }\r\n    this.removeItemFromStack(item);\r\n    // this.emitter.emit('will-remove-item', {item, index, destroyed: !moved, moved});\r\n    this.unsubscribeFromItem(item);\r\n\r\n    if (item === this.activeItem) {\r\n      if (this.items.length === 1) {\r\n        this.setActiveItem(undefined);\r\n      } else if (index === 0) {\r\n        this.activateNextItem();\r\n      } else {\r\n        this.activatePreviousItem();\r\n      }\r\n    }\r\n    this.items.splice(index, 1);\r\n    this.emitter.emit('did-remove-item', { item, index, destroyed: !moved, moved });\r\n    if (!moved && this.container) { this.container.didDestroyPaneItem({ item, index, pane: this }); }\r\n    if (this.items.length === 0 && this.config && this.config.get && this.config.get('core.destroyEmptyPanes')) {\r\n      this.destroy();\r\n    }\r\n  }\r\n\r\n  // Remove the given item from the itemStack.\r\n  //\r\n  // * `item` The item to remove.\r\n  // * `index` {Number} indicating the index to which to remove the item from the itemStack.\r\n  removeItemFromStack(item) {\r\n    const index = this.itemStack.indexOf(item);\r\n    if (index !== -1) { this.itemStack.splice(index, 1); }\r\n  }\r\n\r\n  // Public: Move the given item to the given index.\r\n  //\r\n  // * `item` The item to move.\r\n  // * `index` {Number} indicating the index to which to move the item.\r\n  moveItem(item, newIndex) {\r\n    const oldIndex = this.items.indexOf(item);\r\n    this.items.splice(oldIndex, 1);\r\n    this.items.splice(newIndex, 0, item);\r\n  }\r\n\r\n  // Public: Move the given item to the given index on another pane.\r\n  //\r\n  // * `item` The item to move.\r\n  // * `pane` {Pane} to which to move the item.\r\n  // * `index` {Number} indicating the index to which to move the item in the\r\n  //   given pane.\r\n  moveItemToPane(item?, pane?, index?) {\r\n    this.removeItem(item, true);\r\n    return pane.addItem(item, { index, moved: true });\r\n  }\r\n\r\n  // Public: Destroy the active item and activate the next item.\r\n  //\r\n  // Returns a {Promise} that resolves when the item is destroyed.\r\n  destroyActiveItem() {\r\n    return this.destroyItem(this.activeItem);\r\n  }\r\n\r\n  // Public: Destroy the given item.\r\n  //\r\n  // If the item is active, the next item will be activated. If the item is the\r\n  // last item, the pane will be destroyed if the `core.destroyEmptyPanes` config\r\n  // setting is `true`.\r\n  //\r\n  // * `item` Item to destroy\r\n  // * `force` (optional) {Boolean} Destroy the item without prompting to save\r\n  //    it, even if the item's `isPermanentDockItem` method returns true.\r\n  //\r\n  // Returns a {Promise} that resolves with a {Boolean} indicating whether or not\r\n  // the item was destroyed.\r\n  async destroyItem(item?: any, force?) {\r\n    const index = this.items.indexOf(item);\r\n    if (index === -1) { return false; }\r\n\r\n    if (!force &&\r\n      typeof item.isPermanentDockItem === 'function' && item.isPermanentDockItem() &&\r\n      (!this.container || this.container.getLocation() !== 'center')) {\r\n      return false;\r\n    }\r\n\r\n    // In the case where there are no `onWillDestroyPaneItem` listeners, preserve the old behavior\r\n    // where `Pane.destroyItem` and callers such as `Pane.close` take effect synchronously.\r\n\r\n\r\n    this.removeItem(item, false);\r\n    if (typeof item.destroy === 'function') { item.destroy(); }\r\n    return true;\r\n  }\r\n\r\n  // Public: Destroy all items.\r\n  destroyItems() {\r\n    return Promise.all(\r\n      this.getItems().map(item => this.destroyItem(item))\r\n    );\r\n  }\r\n\r\n  // Public: Destroy all items except for the active item.\r\n  destroyInactiveItems() {\r\n    return Promise.all(\r\n      this.getItems()\r\n        .filter(item => item !== this.activeItem)\r\n        .map(item => this.destroyItem(item))\r\n    );\r\n  }\r\n\r\n  promptToSaveItem(item, options = {}): Promise<boolean> {\r\n    if (typeof item.shouldPromptToSave !== 'function' || !item.shouldPromptToSave(options)) {\r\n      return Promise.resolve(true);\r\n    }\r\n\r\n    let uri;\r\n    if (typeof item.getURI === 'function') {\r\n      uri = item.getURI();\r\n    } else if (typeof item.getUri === 'function') {\r\n      uri = item.getUri();\r\n    } else {\r\n      return Promise.resolve(true);\r\n    }\r\n\r\n    const title = (typeof item.getTitle === 'function' && item.getTitle()) || uri;\r\n\r\n    const saveDialog = (saveButtonText, saveFn, message): Promise<boolean> => {\r\n      const chosen = this.applicationDelegate.confirm({\r\n        message,\r\n        detailedMessage: 'Your changes will be lost if you close this item without saving.',\r\n        buttons: [saveButtonText, 'Cancel', '&Don\\'t Save']\r\n      }\r\n      );\r\n\r\n      switch (chosen) {\r\n        case 0:\r\n          return new Promise(resolve => {\r\n            return saveFn(item, error => {\r\n              if (error instanceof SaveCancelledError) {\r\n                resolve(false);\r\n              } else if (error) {\r\n                saveDialog(\r\n                  'Save as',\r\n                  this.saveItemAs,\r\n                  `'${title}' could not be saved.\\nError: ${this.getMessageForErrorCode(error.code)}`\r\n                ).then(resolve);\r\n              } else {\r\n                resolve(true);\r\n              }\r\n            });\r\n          });\r\n        case 1:\r\n          return Promise.resolve(false);\r\n        case 2:\r\n          return Promise.resolve(true);\r\n      }\r\n    };\r\n\r\n    return saveDialog(\r\n      'Save',\r\n      this.saveItem,\r\n      `'${title}' has changes, do you want to save them?`\r\n    );\r\n  }\r\n\r\n  // Public: Save the active item.\r\n  saveActiveItem(nextAction?: () => any) {\r\n    return this.saveItem(this.getActiveItem(), nextAction);\r\n  }\r\n\r\n  // Public: Prompt the user for a location and save the active item with the\r\n  // path they select.\r\n  //\r\n  // * `nextAction` (optional) {Function} which will be called after the item is\r\n  //   successfully saved.\r\n  //\r\n  // Returns a {Promise} that resolves when the save is complete\r\n  saveActiveItemAs(nextAction?: () => any) {\r\n    return this.saveItemAs(this.getActiveItem(), nextAction);\r\n  }\r\n\r\n  // Public: Save the given item.\r\n  //\r\n  // * `item` The item to save.\r\n  // * `nextAction` (optional) {Function} which will be called with no argument\r\n  //   after the item is successfully saved, or with the error if it failed.\r\n  //   The return value will be that of `nextAction` or `undefined` if it was not\r\n  //   provided\r\n  //\r\n  // Returns a {Promise} that resolves when the save is complete\r\n  saveItem(item, nextAction) {\r\n    if (!item) { return Promise.resolve(); }\r\n\r\n    let itemURI;\r\n    if (typeof item.getURI === 'function') {\r\n      itemURI = item.getURI();\r\n    } else if (typeof item.getUri === 'function') {\r\n      itemURI = item.getUri();\r\n    }\r\n\r\n    if (itemURI != null) {\r\n      if (typeof item.save === 'function') {\r\n        return promisify(() => item.save())\r\n          .then(() => {\r\n            if (nextAction) { nextAction(); }\r\n          })\r\n          .catch(error => {\r\n            if (nextAction) {\r\n              nextAction(error);\r\n            } else {\r\n              this.handleSaveError(error, item);\r\n            }\r\n          });\r\n      } else if (nextAction) {\r\n        nextAction();\r\n        return Promise.resolve();\r\n      }\r\n    } else {\r\n      return this.saveItemAs(item, nextAction);\r\n    }\r\n  }\r\n\r\n  // Public: Prompt the user for a location and save the active item with the\r\n  // path they select.\r\n  //\r\n  // * `item` The item to save.\r\n  // * `nextAction` (optional) {Function} which will be called with no argument\r\n  //   after the item is successfully saved, or with the error if it failed.\r\n  //   The return value will be that of `nextAction` or `undefined` if it was not\r\n  //   provided\r\n  saveItemAs(item, nextAction) {\r\n  }\r\n\r\n  // Public: Save all items.\r\n  saveItems() {\r\n  }\r\n\r\n  // Public: Return the first item that matches the given URI or undefined if\r\n  // none exists.\r\n  //\r\n  // * `uri` {String} containing a URI.\r\n  itemForURI(uri) {\r\n    return this.items.find(item => {\r\n      if (typeof item.getURI === 'function') {\r\n        return item.getURI() === uri;\r\n      } else if (typeof item.getUri === 'function') {\r\n        return item.getUri() === uri;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Public: Activate the first item that matches the given URI.\r\n  //\r\n  // * `uri` {String} containing a URI.\r\n  //\r\n  // Returns a {Boolean} indicating whether an item matching the URI was found.\r\n  activateItemForURI(uri) {\r\n    const item = this.itemForURI(uri);\r\n    if (item) {\r\n      this.activateItem(item);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  copyActiveItem() {\r\n    if (this.activeItem && typeof this.activeItem.copy === 'function') {\r\n      return this.activeItem.copy();\r\n    }\r\n  }\r\n\r\n  /*\r\n  Section: Lifecycle\r\n  */\r\n\r\n  // Public: Determine whether the pane is active.\r\n  //\r\n  // Returns a {Boolean}.\r\n  isActive() {\r\n    return this.container && this.container.getActivePane() === this;\r\n  }\r\n\r\n  // Public: Makes this pane the *active* pane, causing it to gain focus.\r\n  activate() {\r\n  }\r\n\r\n  // Public: Close the pane and destroy all its items.\r\n  //\r\n  // If this is the last pane, all the items will be destroyed but the pane\r\n  // itself will not be destroyed.\r\n  destroy() {\r\n  }\r\n\r\n  isAlive() { return this.alive; }\r\n\r\n  // Public: Determine whether this pane has been destroyed.\r\n  //\r\n  // Returns a {Boolean}.\r\n  isDestroyed() { return !this.isAlive(); }\r\n\r\n  /*\r\n  Section: Splitting\r\n  */\r\n\r\n  // Public: Create a new pane to the left of this pane.\r\n  //\r\n  // * `params` (optional) {Object} with the following keys:\r\n  //   * `items` (optional) {Array} of items to add to the new pane.\r\n  //   * `copyActiveItem` (optional) {Boolean} true will copy the active item into the new split pane\r\n  //\r\n  // Returns the new {Pane}.\r\n  splitLeft(params) {\r\n    return this.split('horizontal', 'before', params);\r\n  }\r\n\r\n  // Public: Create a new pane to the right of this pane.\r\n  //\r\n  // * `params` (optional) {Object} with the following keys:\r\n  //   * `items` (optional) {Array} of items to add to the new pane.\r\n  //   * `copyActiveItem` (optional) {Boolean} true will copy the active item into the new split pane\r\n  //\r\n  // Returns the new {Pane}.\r\n  splitRight(params) {\r\n    return this.split('horizontal', 'after', params);\r\n  }\r\n\r\n  // Public: Creates a new pane above the receiver.\r\n  //\r\n  // * `params` (optional) {Object} with the following keys:\r\n  //   * `items` (optional) {Array} of items to add to the new pane.\r\n  //   * `copyActiveItem` (optional) {Boolean} true will copy the active item into the new split pane\r\n  //\r\n  // Returns the new {Pane}.\r\n  splitUp(params) {\r\n    return this.split('vertical', 'before', params);\r\n  }\r\n\r\n  // Public: Creates a new pane below the receiver.\r\n  //\r\n  // * `params` (optional) {Object} with the following keys:\r\n  //   * `items` (optional) {Array} of items to add to the new pane.\r\n  //   * `copyActiveItem` (optional) {Boolean} true will copy the active item into the new split pane\r\n  //\r\n  // Returns the new {Pane}.\r\n  splitDown(params) {\r\n    return this.split('vertical', 'after', params);\r\n  }\r\n\r\n  split(orientation, side, params) {\r\n    if (params && params.copyActiveItem) {\r\n      if (!params.items) { params.items = []; }\r\n      params.items.push(this.copyActiveItem());\r\n    }\r\n\r\n    if (this.parent.orientation !== orientation) {\r\n      this.parent.replaceChild(this, new PaneAxis({\r\n        container: this.container,\r\n        orientation,\r\n        children: [this],\r\n        flexScale: this.flexScale\r\n      },\r\n        this.viewRegistry\r\n      ));\r\n      this.setFlexScale(1);\r\n    }\r\n\r\n    const newPane = new Pane(Object.assign({\r\n      applicationDelegate: this.applicationDelegate,\r\n      notificationManager: this.notificationManager,\r\n      deserializerManager: this.deserializerManager,\r\n      config: this.config,\r\n      viewRegistry: this.viewRegistry\r\n    }, params));\r\n\r\n    switch (side) {\r\n      case 'before': this.parent.insertChildBefore(this, newPane); break;\r\n      case 'after': this.parent.insertChildAfter(this, newPane); break;\r\n    }\r\n\r\n    if (params && params.moveActiveItem && this.activeItem) {\r\n      this.moveItemToPane(this.activeItem, newPane);\r\n    }\r\n\r\n    newPane.activate();\r\n    return newPane;\r\n  }\r\n\r\n  // If the parent is a horizontal axis, returns its first child if it is a pane;\r\n  // otherwise returns this pane.\r\n  findLeftmostSibling() {\r\n    if (this.parent.orientation === 'horizontal') {\r\n      const [leftmostSibling] = this.parent.children;\r\n      if (leftmostSibling instanceof PaneAxis) {\r\n        return this;\r\n      } else {\r\n        return leftmostSibling;\r\n      }\r\n    } else {\r\n      return this;\r\n    }\r\n  }\r\n\r\n  findRightmostSibling() {\r\n    if (this.parent.orientation === 'horizontal') {\r\n      const rightmostSibling = this.parent.children[this.parent.children.length - 1];\r\n      if (rightmostSibling instanceof PaneAxis) {\r\n        return this;\r\n      } else {\r\n        return rightmostSibling;\r\n      }\r\n    } else {\r\n      return this;\r\n    }\r\n  }\r\n\r\n  // If the parent is a horizontal axis, returns its last child if it is a pane;\r\n  // otherwise returns a new pane created by splitting this pane rightward.\r\n  findOrCreateRightmostSibling() {\r\n    const rightmostSibling = this.findRightmostSibling();\r\n    if (rightmostSibling === this) {\r\n      return this.splitRight({});\r\n    } else {\r\n      return rightmostSibling;\r\n    }\r\n  }\r\n\r\n  // If the parent is a vertical axis, returns its first child if it is a pane;\r\n  // otherwise returns this pane.\r\n  findTopmostSibling() {\r\n    if (this.parent.orientation === 'vertical') {\r\n      const [topmostSibling] = this.parent.children;\r\n      if (topmostSibling instanceof PaneAxis) {\r\n        return this;\r\n      } else {\r\n        return topmostSibling;\r\n      }\r\n    } else {\r\n      return this;\r\n    }\r\n  }\r\n\r\n  findBottommostSibling() {\r\n    if (this.parent.orientation === 'vertical') {\r\n      const bottommostSibling = this.parent.children[this.parent.children.length - 1];\r\n      if (bottommostSibling instanceof PaneAxis) {\r\n        return this;\r\n      } else {\r\n        return bottommostSibling;\r\n      }\r\n    } else {\r\n      return this;\r\n    }\r\n  }\r\n\r\n  // If the parent is a vertical axis, returns its last child if it is a pane;\r\n  // otherwise returns a new pane created by splitting this pane bottomward.\r\n  findOrCreateBottommostSibling() {\r\n    const bottommostSibling = this.findBottommostSibling();\r\n    if (bottommostSibling === this) {\r\n      return this.splitDown({});\r\n    } else {\r\n      return bottommostSibling;\r\n    }\r\n  }\r\n\r\n  // Private: Close the pane unless the user cancels the action via a dialog.\r\n  //\r\n  // Returns a {Promise} that resolves once the pane is either closed, or the\r\n  // closing has been cancelled.\r\n  close() {\r\n    return Promise.all(this.getItems().map(item => this.promptToSaveItem(item)))\r\n      .then(results => {\r\n        if (!results.find(item => item === false)) { return this.destroy(); }\r\n      });\r\n  }\r\n\r\n  handleSaveError(error, item) {\r\n  }\r\n\r\n  getMessageForErrorCode(errorCode) {\r\n    switch (errorCode) {\r\n      case 'EACCES': return 'Permission denied';\r\n      case 'ECONNRESET': return 'Connection reset';\r\n      case 'EINTR': return 'Interrupted system call';\r\n      case 'EIO': return 'I/O error writing file';\r\n      case 'ENOSPC': return 'No space left on device';\r\n      case 'ENOTSUP': return 'Operation not supported on socket';\r\n      case 'ENXIO': return 'No such device or address';\r\n      case 'EROFS': return 'Read-only file system';\r\n      case 'ESPIPE': return 'Invalid seek';\r\n      case 'ETIMEDOUT': return 'Connection timed out';\r\n    }\r\n  }\r\n}\r\n\r\nfunction promisify(callback) {\r\n  try {\r\n    return Promise.resolve(callback());\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n}\r\n","export class ItemRegistry {\r\n  items: WeakSet<any>;\r\n  constructor() {\r\n    this.items = new WeakSet();\r\n  }\r\n\r\n  addItem(item: any) {\r\n    if (this.hasItem(item)) {\r\n      throw new Error(`The workspace can only contain one instance of item ${item}`);\r\n    }\r\n    this.items.add(item);\r\n  }\r\n\r\n  removeItem(item: any) {\r\n    this.items.delete(item);\r\n  }\r\n\r\n  hasItem(item) {\r\n    return this.items.has(item);\r\n  }\r\n}\r\n","import { Pane } from './pane';\r\nimport { ItemRegistry } from './item-registry';\r\n\r\nconst SERIALIZATION_VERSION = 1;\r\n\r\nexport class PaneContainer {\r\n  itemRegistry: any;\r\n  alive: boolean;\r\n  viewRegistry: any;\r\n  location: any;\r\n  activePane: any;\r\n  root: any;\r\n  config: any;\r\n\r\n  constructor(params) {\r\n    let applicationDelegate, deserializerManager, notificationManager;\r\n    ({\r\n      config: this.config,\r\n      applicationDelegate,\r\n      notificationManager,\r\n      deserializerManager,\r\n      viewRegistry: this.viewRegistry,\r\n      location: this.location\r\n    } = params);\r\n\r\n    this.itemRegistry = new ItemRegistry();\r\n    this.alive = true;\r\n\r\n\r\n    this.setRoot(new Pane({\r\n      container: this,\r\n      config: this.config,\r\n      applicationDelegate,\r\n      notificationManager,\r\n      deserializerManager,\r\n      viewRegistry: this.viewRegistry\r\n    }));\r\n    this.didActivatePane(this.getRoot());\r\n  }\r\n\r\n  getLocation() { return this.location; }\r\n\r\n  getElement() {\r\n  }\r\n\r\n  destroy() {\r\n    this.alive = false;\r\n    for (const pane of this.getRoot().getPanes()) { pane.destroy(); }\r\n\r\n  }\r\n\r\n  isAlive() { return this.alive; }\r\n\r\n  isDestroyed() { return !this.isAlive(); }\r\n\r\n  serialize(...params) {\r\n    return {\r\n      deserializer: 'PaneContainer',\r\n      version: SERIALIZATION_VERSION,\r\n      root: this.root ? this.root.serialize() : null,\r\n      activePaneId: this.activePane.id\r\n    };\r\n  }\r\n\r\n  deserialize(state, deserializerManager) {\r\n    if (state.version !== SERIALIZATION_VERSION) { return; }\r\n    this.setRoot(deserializerManager.deserialize(state.root));\r\n    this.activePane = this.getRoot().getPanes().find(pane => pane.id === state.activePaneId) || this.getPanes()[0];\r\n    if (this.config && this.config.get && this.config.get('core.destroyEmptyPanes')) {\r\n      this.destroyEmptyPanes();\r\n    }\r\n  }\r\n\r\n  onDidChangeRoot(fn) {\r\n  }\r\n\r\n  observeRoot(fn) {\r\n    fn(this.getRoot());\r\n    return this.onDidChangeRoot(fn);\r\n  }\r\n\r\n  onDidAddPane(fn) {\r\n  }\r\n\r\n  observePanes(fn) {\r\n    for (const pane of this.getPanes()) { fn(pane); }\r\n    return this.onDidAddPane(({ pane }) => fn(pane));\r\n  }\r\n\r\n  onDidDestroyPane(fn) {\r\n  }\r\n\r\n  onWillDestroyPane(fn) {\r\n  }\r\n\r\n  onDidChangeActivePane(fn) {\r\n  }\r\n\r\n  onDidActivatePane(fn) {\r\n  }\r\n\r\n  observeActivePane(fn) {\r\n    fn(this.getActivePane());\r\n    return this.onDidChangeActivePane(fn);\r\n  }\r\n\r\n  onDidAddPaneItem(fn) {\r\n  }\r\n\r\n  observePaneItems(fn) {\r\n    for (const item of this.getPaneItems()) { fn(item); }\r\n    return this.onDidAddPaneItem(({ item }) => fn(item));\r\n  }\r\n\r\n  onDidChangeActivePaneItem(fn) {\r\n  }\r\n\r\n  onDidStopChangingActivePaneItem(fn) {\r\n  }\r\n\r\n  observeActivePaneItem(fn) {\r\n    fn(this.getActivePaneItem());\r\n    return this.onDidChangeActivePaneItem(fn);\r\n  }\r\n\r\n  onWillDestroyPaneItem(fn) {\r\n  }\r\n\r\n  onDidDestroyPaneItem(fn) {\r\n  }\r\n\r\n  getRoot() { return this.root; }\r\n\r\n  setRoot(root) {\r\n    this.root = root;\r\n    this.root.setParent(this);\r\n    this.root.setContainer(this);\r\n    if ((this.getActivePane() == null) && this.root instanceof Pane) {\r\n      this.didActivatePane(this.root);\r\n    }\r\n  }\r\n\r\n  replaceChild(oldChild, newChild) {\r\n    if (oldChild !== this.root) { throw new Error('Replacing non-existent child'); }\r\n    this.setRoot(newChild);\r\n  }\r\n\r\n  getPanes(): Pane[] {\r\n    if (this.alive) {\r\n      return this.getRoot().getPanes();\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  getPaneItems(): any[] {\r\n    return this.getRoot().getItems();\r\n  }\r\n\r\n  getActivePane(): Pane {\r\n    return this.activePane;\r\n  }\r\n\r\n  getActivePaneItem(): any {\r\n    return this.getActivePane().getActiveItem();\r\n  }\r\n\r\n  paneForURI(uri): Pane {\r\n    return this.getPanes().find(pane => pane.itemForURI(uri) != null);\r\n  }\r\n\r\n  paneForItem(item): Pane {\r\n    return this.getPanes().find(pane => pane.getItems().find(it => it === item));\r\n  }\r\n\r\n  saveAll() {\r\n    for (const pane of this.getPanes()) { pane.saveItems(); }\r\n  }\r\n\r\n  confirmClose(options) {\r\n    const promises = [];\r\n    for (const pane of this.getPanes()) {\r\n      for (const item of pane.getItems()) {\r\n        promises.push(pane.promptToSaveItem(item, options));\r\n      }\r\n    }\r\n    return Promise.all(promises).then((results: boolean[]) => !results.find(item => item === false));\r\n  }\r\n\r\n  activateNextPane() {\r\n    const panes = this.getPanes();\r\n    if (panes.length > 1) {\r\n      const currentIndex = panes.indexOf(this.activePane);\r\n      const nextIndex = (currentIndex + 1) % panes.length;\r\n      panes[nextIndex].activate();\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  activatePreviousPane() {\r\n    const panes = this.getPanes();\r\n    if (panes.length > 1) {\r\n      const currentIndex = panes.indexOf(this.activePane);\r\n      let previousIndex = currentIndex - 1;\r\n      if (previousIndex < 0) { previousIndex = panes.length - 1; }\r\n      panes[previousIndex].activate();\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  moveActiveItemToPane(destPane) {\r\n    const item = this.activePane.getActiveItem();\r\n\r\n    if (!destPane.isItemAllowed(item)) { return; }\r\n\r\n    this.activePane.moveItemToPane(item, destPane);\r\n    destPane.setActiveItem(item);\r\n  }\r\n\r\n  copyActiveItemToPane(destPane) {\r\n    const item = this.activePane.copyActiveItem();\r\n\r\n    if (item && destPane.isItemAllowed(item)) {\r\n      destPane.activateItem(item);\r\n    }\r\n  }\r\n\r\n  destroyEmptyPanes() {\r\n    for (const pane of this.getPanes()) { if (pane.items.length === 0) { pane.destroy(); } }\r\n  }\r\n\r\n  didAddPane(event) {\r\n    const items = event.pane.getItems();\r\n    for (let i = 0, length = items.length; i < length; i++) {\r\n      const item = items[i];\r\n      this.didAddPaneItem(item, event.pane, i);\r\n    }\r\n  }\r\n\r\n  willDestroyPane(event) {\r\n  }\r\n\r\n  didDestroyPane(event) {\r\n  }\r\n\r\n  didActivatePane(activePane) {\r\n    if (activePane !== this.activePane) {\r\n      if (!this.getPanes().find(item => item === activePane)) {\r\n        throw new Error('Setting active pane that is not present in pane container');\r\n      }\r\n\r\n      this.activePane = activePane;\r\n      this.didChangeActiveItemOnPane(this.activePane, this.activePane.getActiveItem());\r\n    }\r\n    return this.activePane;\r\n  }\r\n\r\n  didAddPaneItem(item, pane, index) {\r\n    this.itemRegistry.addItem(item);\r\n  }\r\n\r\n  willDestroyPaneItem(event) {\r\n  }\r\n\r\n  didDestroyPaneItem(event) {\r\n    this.itemRegistry.removeItem(event.item);\r\n    // this.emitter.emit('did-destroy-pane-item', event);\r\n  }\r\n\r\n  didChangeActiveItemOnPane(pane, activeItem) {\r\n    if (pane === this.getActivePane()) {\r\n\r\n      this.cancelStoppedChangingActivePaneItemTimeout();\r\n      // `setTimeout()` isn't available during the snapshotting phase, but that's okay.\r\n\r\n    }\r\n  }\r\n\r\n  cancelStoppedChangingActivePaneItemTimeout() {\r\n\r\n  }\r\n}\r\n","import { PaneContainer } from './pane-container';\r\nimport { Pane } from './pane';\r\nimport { ViewRegistry } from './view-registry';\r\nimport { Emitter, Disposable } from './event-kit';\r\n\r\nexport enum DockStyle {\r\n  none,\r\n  left,\r\n  right,\r\n  top,\r\n  bottom\r\n}\r\n\r\nexport class Dock {\r\n  private location: any;\r\n  private widthOrHeight: any;\r\n  private viewRegistry: ViewRegistry;\r\n  private didActivate: boolean;\r\n  private paneContainer: PaneContainer;\r\n  private state: any;\r\n  private emitter: Emitter;\r\n\r\n\r\n  constructor(params) {\r\n    this.handleResizeHandleDragStart = this.handleResizeHandleDragStart.bind(this);\r\n    this.handleResizeToFit = this.handleResizeToFit.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n\r\n    this.location = params.location;\r\n    this.widthOrHeight = getWidthOrHeight(this.location);\r\n    this.viewRegistry = params.viewRegistry;\r\n    this.didActivate = params.didActivate;\r\n\r\n    this.emitter = new Emitter();\r\n\r\n    this.paneContainer = new PaneContainer({\r\n      location: this.location,\r\n      viewRegistry: this.viewRegistry\r\n    });\r\n\r\n    this.state = {\r\n      size: null,\r\n      visible: false,\r\n      shouldAnimate: false\r\n    };\r\n\r\n  }\r\n\r\n  // This method is called explicitly by the object which adds the Dock to the document.\r\n  elementAttached() {\r\n    // Re-render when the dock is attached to make sure we remeasure sizes defined in CSS.\r\n    this.render(this.state);\r\n  }\r\n\r\n  getElement() {\r\n\r\n  }\r\n\r\n  getLocation() {\r\n    return this.location;\r\n  }\r\n\r\n  destroy() {\r\n    this.paneContainer.destroy();\r\n    // window.removeEventListener('mousemove', this.handleMouseMove);\r\n    // window.removeEventListener('mouseup', this.handleMouseUp);\r\n    // window.removeEventListener('drag', this.handleDrag);\r\n    // window.removeEventListener('dragend', this.handleDragEnd);\r\n  }\r\n\r\n  setHovered(hovered) {\r\n    if (hovered === this.state.hovered) {\r\n      return;\r\n    }\r\n    this.setState({ hovered });\r\n  }\r\n\r\n  setDraggingItem(draggingItem) {\r\n    if (draggingItem === this.state.draggingItem) { return; }\r\n    this.setState({ draggingItem });\r\n  }\r\n\r\n  // Extended: Show the dock and focus its active {Pane}.\r\n  activate() {\r\n    this.getActivePane().activate();\r\n  }\r\n\r\n  // Extended: Show the dock without focusing it.\r\n  show() {\r\n    this.setState({ visible: true });\r\n  }\r\n\r\n  // Extended: Hide the dock and activate the {WorkspaceCenter} if the dock was\r\n  // was previously focused.\r\n  hide() {\r\n    this.setState({ visible: false });\r\n  }\r\n\r\n  // Extended: Toggle the dock's visibility without changing the {Workspace}'s\r\n  // active pane container.\r\n  toggle() {\r\n    // const state = { visible: !this.state.visible };\r\n    // if (!state.visible) { state.hovered = false; }\r\n    // this.setState(state);\r\n  }\r\n\r\n  // Extended: Check if the dock is visible.\r\n  //\r\n  // Returns a {Boolean}.\r\n  isVisible() {\r\n    return this.state.visible;\r\n  }\r\n\r\n  setState(newState) {\r\n    const prevState = this.state;\r\n    const nextState = Object.assign({}, prevState, newState);\r\n\r\n    // Update the `shouldAnimate` state. This needs to be written to the DOM before updating the\r\n    // class that changes the animated property. Normally we'd have to defer the class change a\r\n    // frame to ensure the property is animated (or not) appropriately, however we luck out in this\r\n    // case because the drag start always happens before the item is dragged into the toggle button.\r\n    if (nextState.visible !== prevState.visible) {\r\n      // Never animate toggling visibility...\r\n      nextState.shouldAnimate = false;\r\n    } else if (!nextState.visible && nextState.draggingItem && !prevState.draggingItem) {\r\n      // ...but do animate if you start dragging while the panel is hidden.\r\n      nextState.shouldAnimate = true;\r\n    }\r\n\r\n    this.state = nextState;\r\n    this.render(this.state);\r\n\r\n    const { visible } = this.state;\r\n    // if (visible !== prevState.visible) {\r\n    //   this.emitter.emit('did-change-visible', visible);\r\n    // }\r\n  }\r\n\r\n  render(state) {\r\n\r\n  }\r\n\r\n  handleDidAddPaneItem() {\r\n    if (this.state.size == null) {\r\n      this.setState({ size: this.getInitialSize() });\r\n    }\r\n  }\r\n\r\n  handleDidRemovePaneItem() {\r\n    // Hide the dock if you remove the last item.\r\n    if (this.paneContainer.getPaneItems().length === 0) {\r\n      this.setState({ visible: false, hovered: false, size: null });\r\n    }\r\n  }\r\n\r\n  handleResizeHandleDragStart() {\r\n    window.addEventListener('mousemove', this.handleMouseMove);\r\n    window.addEventListener('mouseup', this.handleMouseUp);\r\n    this.setState({ resizing: true });\r\n  }\r\n\r\n  handleResizeToFit() {\r\n    const item = this.getActivePaneItem();\r\n    if (item) {\r\n      const size = getPreferredSize(item, this.getLocation());\r\n      if (size != null) { this.setState({ size }); }\r\n    }\r\n  }\r\n\r\n  handleMouseMove(event) {\r\n    if (event.buttons === 0) { // We missed the mouseup event. For some reason it happens on Windows\r\n      this.handleMouseUp(event);\r\n      return;\r\n    }\r\n\r\n    const size = 0;\r\n    // switch (this.location) {\r\n    //   case 'left':\r\n    //     size = event.pageX - this.element.getBoundingClientRect().left;\r\n    //     break;\r\n    //   case 'bottom':\r\n    //     size = this.element.getBoundingClientRect().bottom - event.pageY;\r\n    //     break;\r\n    //   case 'right':\r\n    //     size = this.element.getBoundingClientRect().right - event.pageX;\r\n    //     break;\r\n    // }\r\n    this.setState({ size });\r\n  }\r\n\r\n  handleMouseUp(event) {\r\n    window.removeEventListener('mousemove', this.handleMouseMove);\r\n    window.removeEventListener('mouseup', this.handleMouseUp);\r\n    this.setState({ resizing: false });\r\n  }\r\n\r\n  // Determine whether the cursor is within the dock hover area. This isn't as simple as just using\r\n  // mouseenter/leave because we want to be a little more forgiving. For example, if the cursor is\r\n  // over the footer, we want to show the bottom dock's toggle button. Also note that our criteria\r\n  // for detecting entry are different than detecting exit but, in order for us to avoid jitter, the\r\n  // area considered when detecting exit MUST fully encompass the area considered when detecting\r\n  // entry.\r\n  pointWithinHoverArea (point, detectingExit) {\r\n  }\r\n\r\n  getInitialSize() {\r\n    // The item may not have been activated yet. If that's the case, just use the first item.\r\n    const activePaneItem = this.paneContainer.getActivePaneItem() || this.paneContainer.getPaneItems()[0];\r\n    // If there are items, we should have an explicit width; if not, we shouldn't.\r\n    return activePaneItem\r\n      ? getPreferredSize(activePaneItem, this.location)\r\n      : null;\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      deserializer: 'Dock',\r\n      size: this.state.size,\r\n      paneContainer: this.paneContainer.serialize({}),\r\n      visible: this.state.visible\r\n    };\r\n  }\r\n\r\n  deserialize(serialized, deserializerManager) {\r\n    this.paneContainer.deserialize(serialized.paneContainer, deserializerManager);\r\n    this.setState({\r\n      size: serialized.size || this.getInitialSize(),\r\n      // If no items could be deserialized, we don't want to show the dock (even if it was visible last time)\r\n      visible: serialized.visible && (this.paneContainer.getPaneItems().length > 0)\r\n    });\r\n  }\r\n\r\n  /*\r\n  Section: Event Subscription\r\n  */\r\n\r\n  // Essential: Invoke the given callback when the visibility of the dock changes.\r\n  //\r\n  // * `callback` {Function} to be called when the visibility changes.\r\n  //   * `visible` {Boolean} Is the dock now visible?\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidChangeVisible(callback) {\r\n  }\r\n\r\n  // Essential: Invoke the given callback with the current and all future visibilities of the dock.\r\n  //\r\n  // * `callback` {Function} to be called when the visibility changes.\r\n  //   * `visible` {Boolean} Is the dock now visible?\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  observeVisible(callback) {\r\n    callback(this.isVisible());\r\n    return this.onDidChangeVisible(callback);\r\n  }\r\n\r\n  // Essential: Invoke the given callback with all current and future panes items\r\n  // in the dock.\r\n  //\r\n  // * `callback` {Function} to be called with current and future pane items.\r\n  //   * `item` An item that is present in {::getPaneItems} at the time of\r\n  //      subscription or that is added at some later time.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  observePaneItems(callback) {\r\n    return this.paneContainer.observePaneItems(callback);\r\n  }\r\n\r\n  // Essential: Invoke the given callback when the active pane item changes.\r\n  //\r\n  // Because observers are invoked synchronously, it's important not to perform\r\n  // any expensive operations via this method. Consider\r\n  // {::onDidStopChangingActivePaneItem} to delay operations until after changes\r\n  // stop occurring.\r\n  //\r\n  // * `callback` {Function} to be called when the active pane item changes.\r\n  //   * `item` The active pane item.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidChangeActivePaneItem(callback) {\r\n    return this.paneContainer.onDidChangeActivePaneItem(callback);\r\n  }\r\n\r\n  // Essential: Invoke the given callback when the active pane item stops\r\n  // changing.\r\n  //\r\n  // Observers are called asynchronously 100ms after the last active pane item\r\n  // change. Handling changes here rather than in the synchronous\r\n  // {::onDidChangeActivePaneItem} prevents unneeded work if the user is quickly\r\n  // changing or closing tabs and ensures critical UI feedback, like changing the\r\n  // highlighted tab, gets priority over work that can be done asynchronously.\r\n  //\r\n  // * `callback` {Function} to be called when the active pane item stopts\r\n  //   changing.\r\n  //   * `item` The active pane item.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidStopChangingActivePaneItem(callback) {\r\n    return this.paneContainer.onDidStopChangingActivePaneItem(callback);\r\n  }\r\n\r\n  // Essential: Invoke the given callback with the current active pane item and\r\n  // with all future active pane items in the dock.\r\n  //\r\n  // * `callback` {Function} to be called when the active pane item changes.\r\n  //   * `item` The current active pane item.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  observeActivePaneItem(callback) {\r\n    return this.paneContainer.observeActivePaneItem(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback when a pane is added to the dock.\r\n  //\r\n  // * `callback` {Function} to be called panes are added.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `pane` The added pane.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidAddPane(callback) {\r\n    return this.paneContainer.onDidAddPane(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback before a pane is destroyed in the\r\n  // dock.\r\n  //\r\n  // * `callback` {Function} to be called before panes are destroyed.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `pane` The pane to be destroyed.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onWillDestroyPane(callback) {\r\n    return this.paneContainer.onWillDestroyPane(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback when a pane is destroyed in the dock.\r\n  //\r\n  // * `callback` {Function} to be called panes are destroyed.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `pane` The destroyed pane.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidDestroyPane(callback) {\r\n    return this.paneContainer.onDidDestroyPane(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback with all current and future panes in the\r\n  // dock.\r\n  //\r\n  // * `callback` {Function} to be called with current and future panes.\r\n  //   * `pane` A {Pane} that is present in {::getPanes} at the time of\r\n  //      subscription or that is added at some later time.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  observePanes(callback) {\r\n    return this.paneContainer.observePanes(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback when the active pane changes.\r\n  //\r\n  // * `callback` {Function} to be called when the active pane changes.\r\n  //   * `pane` A {Pane} that is the current return value of {::getActivePane}.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidChangeActivePane(callback) {\r\n    return this.paneContainer.onDidChangeActivePane(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback with the current active pane and when\r\n  // the active pane changes.\r\n  //\r\n  // * `callback` {Function} to be called with the current and future active#\r\n  //   panes.\r\n  //   * `pane` A {Pane} that is the current return value of {::getActivePane}.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  observeActivePane(callback) {\r\n    return this.paneContainer.observeActivePane(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback when a pane item is added to the dock.\r\n  //\r\n  // * `callback` {Function} to be called when pane items are added.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `item` The added pane item.\r\n  //     * `pane` {Pane} containing the added item.\r\n  //     * `index` {Number} indicating the index of the added item in its pane.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidAddPaneItem(callback) {\r\n    return this.paneContainer.onDidAddPaneItem(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback when a pane item is about to be\r\n  // destroyed, before the user is prompted to save it.\r\n  //\r\n  // * `callback` {Function} to be called before pane items are destroyed.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `item` The item to be destroyed.\r\n  //     * `pane` {Pane} containing the item to be destroyed.\r\n  //     * `index` {Number} indicating the index of the item to be destroyed in\r\n  //       its pane.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose` can be called to unsubscribe.\r\n  onWillDestroyPaneItem(callback) {\r\n    return this.paneContainer.onWillDestroyPaneItem(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback when a pane item is destroyed.\r\n  //\r\n  // * `callback` {Function} to be called when pane items are destroyed.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `item` The destroyed item.\r\n  //     * `pane` {Pane} containing the destroyed item.\r\n  //     * `index` {Number} indicating the index of the destroyed item in its\r\n  //       pane.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose` can be called to unsubscribe.\r\n  onDidDestroyPaneItem(callback) {\r\n    return this.paneContainer.onDidDestroyPaneItem(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback when the hovered state of the dock changes.\r\n  //\r\n  // * `callback` {Function} to be called when the hovered state changes.\r\n  //   * `hovered` {Boolean} Is the dock now hovered?\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidChangeHovered (callback): Disposable {\r\n    return this.emitter.on('did-change-hovered', callback);\r\n  }\r\n\r\n  /*\r\n  Section: Pane Items\r\n  */\r\n\r\n  // Essential: Get all pane items in the dock.\r\n  //\r\n  // Returns an {Array} of items.\r\n  getPaneItems() {\r\n    return this.paneContainer.getPaneItems();\r\n  }\r\n\r\n  // Essential: Get the active {Pane}'s active item.\r\n  //\r\n  // Returns an pane item {Object}.\r\n  getActivePaneItem() {\r\n    return this.paneContainer.getActivePaneItem();\r\n  }\r\n\r\n  // Save all pane items.\r\n  saveAll() {\r\n    this.paneContainer.saveAll();\r\n  }\r\n\r\n  confirmClose(options) {\r\n    return this.paneContainer.confirmClose(options);\r\n  }\r\n\r\n  /*\r\n  Section: Panes\r\n  */\r\n\r\n  // Extended: Get all panes in the dock.\r\n  //\r\n  // Returns an {Array} of {Pane}s.\r\n  getPanes(): Pane[] {\r\n    return this.paneContainer.getPanes();\r\n  }\r\n\r\n  // Extended: Get the active {Pane}.\r\n  //\r\n  // Returns a {Pane}.\r\n  getActivePane() {\r\n    return this.paneContainer.getActivePane();\r\n  }\r\n\r\n  // Extended: Make the next pane active.\r\n  activateNextPane() {\r\n    return this.paneContainer.activateNextPane();\r\n  }\r\n\r\n  // Extended: Make the previous pane active.\r\n  activatePreviousPane() {\r\n    return this.paneContainer.activatePreviousPane();\r\n  }\r\n\r\n  paneForURI(uri) {\r\n    return this.paneContainer.paneForURI(uri);\r\n  }\r\n\r\n  paneForItem(item) {\r\n    return this.paneContainer.paneForItem(item);\r\n  }\r\n\r\n  // Destroy (close) the active pane.\r\n  destroyActivePane() {\r\n    const activePane = this.getActivePane();\r\n    if (activePane != null) {\r\n      activePane.destroy();\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction getWidthOrHeight(location) {\r\n  return location === 'left' || location === 'right' ? 'width' : 'height';\r\n}\r\n\r\nfunction getPreferredSize(item, location) {\r\n  switch (location) {\r\n    case 'left':\r\n    case 'right':\r\n      return typeof item.getPreferredWidth === 'function'\r\n        ? item.getPreferredWidth()\r\n        : null;\r\n    default:\r\n      return typeof item.getPreferredHeight === 'function'\r\n        ? item.getPreferredHeight()\r\n        : null;\r\n  }\r\n}\r\n\r\nfunction getIconName(location, visible) {\r\n  switch (location) {\r\n    case 'right': return visible ? 'icon-chevron-right' : 'icon-chevron-left';\r\n    case 'bottom': return visible ? 'icon-chevron-down' : 'icon-chevron-up';\r\n    case 'left': return visible ? 'icon-chevron-left' : 'icon-chevron-right';\r\n    default: throw new Error(`Invalid location: ${location}`);\r\n  }\r\n}\r\n\r\nfunction rectContainsPoint(rect, point) {\r\n  return (\r\n    point.x >= rect.left &&\r\n    point.y >= rect.top &&\r\n    point.x <= rect.right &&\r\n    point.y <= rect.bottom\r\n  );\r\n}\r\n\r\n// Is the item allowed in the given location?\r\nfunction isItemAllowed(item, location) {\r\n  if (typeof item.getAllowedLocations !== 'function') {\r\n    return true;\r\n  }\r\n  return item.getAllowedLocations().includes(location);\r\n}\r\n","import { CacheStoragesEnum } from '../../enums/cache.storages.enum';\r\nimport { StorageValueInterface } from '../../interfaces/storage.value.interface';\r\n\r\n/**\r\n * Abstract cache storage\r\n */\r\nexport abstract class CacheStorageAbstract {\r\n\r\n    /**\r\n     * Get item from storage\r\n     * @param key\r\n     */\r\n    public abstract getItem(key: string): StorageValueInterface;\r\n\r\n    /**\r\n     * Set item to storage\r\n     * @param key\r\n     * @param value\r\n     */\r\n    public abstract setItem(key: string, value: StorageValueInterface): boolean;\r\n\r\n    /**\r\n     * Remove item from storage\r\n     * @param key\r\n     */\r\n    public abstract removeItem(key: string): void;\r\n\r\n    /**\r\n     * Clear item in storage\r\n     */\r\n    public abstract clear(): void;\r\n\r\n    /**\r\n     * Get current storage type\r\n     */\r\n    public abstract type(): CacheStoragesEnum;\r\n\r\n    /**\r\n     * Check if storage is enabled\r\n     */\r\n    public abstract isEnabled(): boolean;\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CacheStorageAbstract } from '../cache.storage.abstract.service';\r\nimport { CacheStoragesEnum } from '../../../enums/cache.storages.enum';\r\nimport { StorageValueInterface } from '../../../interfaces/storage.value.interface';\r\n\r\n/**\r\n * Service for storing data in session storage\r\n */\r\n@Injectable()\r\nexport class CacheSessionStorage extends CacheStorageAbstract {\r\n\r\n    public getItem(key: string) {\r\n        const value = sessionStorage.getItem(key);\r\n        return value ? JSON.parse(value) : null;\r\n    }\r\n\r\n    public setItem(key: string, value: StorageValueInterface) {\r\n        try {\r\n            sessionStorage.setItem(key, JSON.stringify(value));\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public removeItem(key: string) {\r\n        sessionStorage.removeItem(key);\r\n    }\r\n\r\n    public clear() {\r\n        sessionStorage.clear();\r\n    }\r\n\r\n    public type() {\r\n        return CacheStoragesEnum.SESSION_STORAGE;\r\n    }\r\n\r\n    public isEnabled() {\r\n        try {\r\n            sessionStorage.setItem('test', 'test');\r\n            sessionStorage.removeItem('test');\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CacheStorageAbstract } from '../cache.storage.abstract.service';\r\nimport { CacheStoragesEnum } from '../../../enums/cache.storages.enum';\r\nimport { StorageValueInterface } from '../../../interfaces/storage.value.interface';\r\n\r\n/**\r\n * Service for storing data in local storage\r\n */\r\n@Injectable()\r\nexport class CacheLocalStorage extends CacheStorageAbstract {\r\n\r\n    public getItem(key: string) {\r\n        const value = localStorage.getItem(key);\r\n        return value ? JSON.parse(value) : null;\r\n    }\r\n\r\n    public setItem(key: string, value: StorageValueInterface) {\r\n        try {\r\n            localStorage.setItem(key, JSON.stringify(value));\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public removeItem(key: string) {\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n    public clear() {\r\n        localStorage.clear();\r\n    }\r\n\r\n    public type() {\r\n        return CacheStoragesEnum.LOCAL_STORAGE;\r\n    }\r\n\r\n    public isEnabled() {\r\n        try {\r\n            localStorage.setItem('test', 'test');\r\n            localStorage.removeItem('test');\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CacheStorageAbstract } from '../cache.storage.abstract.service';\r\nimport { CacheStoragesEnum } from '../../../enums/cache.storages.enum';\r\nimport { StorageValueInterface } from '../../../interfaces/storage.value.interface';\r\n\r\n/**\r\n * Service for storing data in local storage\r\n */\r\n@Injectable()\r\nexport class CacheMemoryStorage extends CacheStorageAbstract {\r\n\r\n    private _data: {[key: string]: any} = {};\r\n\r\n    public getItem(key: string) {\r\n        return this._data[key] ? this._data[key] : null;\r\n    }\r\n\r\n    public setItem(key: string, value: StorageValueInterface) {\r\n        this._data[key] = value;\r\n        return true;\r\n    }\r\n\r\n    public removeItem(key: string) {\r\n        delete this._data[key];\r\n    }\r\n\r\n    public clear() {\r\n        this._data = [];\r\n    }\r\n\r\n    public type() {\r\n        return CacheStoragesEnum.MEMORY;\r\n    }\r\n\r\n    public isEnabled() {\r\n        return true;\r\n    }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { CacheOptionsInterface } from '../interfaces/cache.options.interface';\r\nimport { CacheStoragesEnum } from '../enums/cache.storages.enum';\r\nimport { CacheStorageAbstract } from './storage/cache.storage.abstract.service';\r\nimport { CacheSessionStorage } from './storage/sessionstorage/cache.sessionstorage.service';\r\nimport { CacheLocalStorage } from './storage/localstorage/cache.localstorage.service';\r\nimport { CacheMemoryStorage } from './storage/memory/cache.memory.service';\r\nimport { StorageValueInterface } from '../interfaces/storage.value.interface';\r\n\r\nconst CACHE_PREFIX = 'CacheService';\r\n\r\nconst DEFAULT_STORAGE = CacheStoragesEnum.MEMORY;\r\nconst DEFAULT_ENABLED_STORAGE = CacheStoragesEnum.SESSION_STORAGE;\r\n\r\n@Injectable()\r\nexport class CacheService {\r\n\r\n    /**\r\n     * Default cache options\r\n     */\r\n    private _defaultOptions: CacheOptionsInterface = {\r\n        expires: Number.MAX_VALUE,\r\n        maxAge : Number.MAX_VALUE\r\n    };\r\n\r\n    /**\r\n     * Cache prefix\r\n     */\r\n    private _prefix: string = CACHE_PREFIX;\r\n\r\n    public constructor(@Optional() private _storage: CacheStorageAbstract) {\r\n        this._validateStorage();\r\n    }\r\n\r\n    /**\r\n     * Set data to cache\r\n     * @param key key\r\n     * @param value value\r\n     * @param options options\r\n     */\r\n    public set(key: string, value: any, options?: CacheOptionsInterface) {\r\n        const storageKey = this._toStorageKey(key);\r\n        options = options ? options : this._defaultOptions;\r\n        if (this._storage.setItem(storageKey, this._toStorageValue(value, options))) {\r\n            if (!this._isSystemKey(key) && options.tag) {\r\n                this._saveTag(options.tag, storageKey);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    /**\r\n     * Get data from cache\r\n     * @param key key\r\n     * @returns result\r\n     */\r\n    public get(key: string): any {\r\n        const storageValue = this._storage.getItem(this._toStorageKey(key));\r\n        let value: any = null;\r\n        if (storageValue) {\r\n            if (this._validateStorageValue(storageValue)) {\r\n                value = storageValue.value;\r\n            } else {\r\n                this.remove(key);\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Check if value exists\r\n     * @param key key\r\n     * @returns result\r\n     */\r\n    public exists(key: string): boolean {\r\n        return !!this.get(key);\r\n    }\r\n\r\n    /**\r\n     * Remove item from cache\r\n     * @param key key\r\n     */\r\n    public remove(key: string) {\r\n        this._storage.removeItem(this._toStorageKey(key));\r\n        this._removeFromTag(this._toStorageKey(key));\r\n    }\r\n\r\n    /**\r\n     * Remove all from cache\r\n     */\r\n    public removeAll() {\r\n        this._storage.clear();\r\n    }\r\n\r\n    /**\r\n     * Get all tag data\r\n     * @param tag tag\r\n     * @returns result\r\n     */\r\n    public getTagData(tag: string) {\r\n        const tags = this.get(this._tagsStorageKey()) || {};\r\n        const result: {[key: string]: any} = {};\r\n        if (tags[tag]) {\r\n            tags[tag].forEach((key: string) => {\r\n                const data = this.get(this._fromStorageKey(key));\r\n                if (data) {\r\n                    result[this._fromStorageKey(key)] = data;\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Create a new instance of cache with needed storage\r\n     * @param type type\r\n     * @returns result\r\n     */\r\n    public useStorage(type: CacheStoragesEnum) {\r\n        const service = new CacheService(this._initStorage(type));\r\n        service.setGlobalPrefix(this._getCachePrefix());\r\n        return service;\r\n    }\r\n\r\n    /**\r\n     * Remove all by tag\r\n     * @param tag tag\r\n     */\r\n    public removeTag(tag: string) {\r\n        const tags = this.get(this._tagsStorageKey()) || {};\r\n        if (tags[tag]) {\r\n            tags[tag].forEach((key: string) => {\r\n                this._storage.removeItem(key);\r\n            });\r\n            delete tags[tag];\r\n            this.set(this._tagsStorageKey(), tags);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set global cache key prefix\r\n     * @param prefix prefix\r\n     */\r\n    public setGlobalPrefix(prefix: string) {\r\n        this._prefix = prefix;\r\n    }\r\n\r\n    /**\r\n     * Validate cache storage\r\n     */\r\n    private _validateStorage() {\r\n        if (!this._storage) {\r\n            this._storage = this._initStorage(DEFAULT_STORAGE);\r\n        }\r\n        if (!this._storage.isEnabled()) {\r\n            this._storage = this._initStorage(DEFAULT_ENABLED_STORAGE);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove key from tags keys list\r\n     * @param key key\r\n     */\r\n    private _removeFromTag(key: string) {\r\n        // tslint:disable-next-line:prefer-const\r\n        let tags = this.get(this._tagsStorageKey()) || {};\r\n        let index: number;\r\n        // tslint:disable-next-line:forin\r\n        for (const tag in tags) {\r\n            index = tags[tag].indexOf(key);\r\n            if (index !== -1) {\r\n                tags[tag].splice(index, 1);\r\n                this.set(this._tagsStorageKey(), tags);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Init storage by type\r\n     * @param type type\r\n     */\r\n    private _initStorage(type: CacheStoragesEnum) {\r\n        let storage: CacheStorageAbstract;\r\n        switch (type) {\r\n            case CacheStoragesEnum.SESSION_STORAGE:\r\n                storage = new CacheSessionStorage();\r\n                break;\r\n            case CacheStoragesEnum.LOCAL_STORAGE:\r\n                storage = new CacheLocalStorage();\r\n                break;\r\n            default: storage = new CacheMemoryStorage();\r\n        }\r\n        return storage;\r\n    }\r\n\r\n    private _toStorageKey(key: string) {\r\n        return this._getCachePrefix() + key;\r\n    }\r\n\r\n    private _fromStorageKey(key: string) {\r\n        return key.replace(this._getCachePrefix(), '');\r\n    }\r\n\r\n    /**\r\n     * Prepare value to set to storage\r\n     * @param value value\r\n     * @param options options\r\n     * @returns result\r\n     */\r\n    private _toStorageValue(value: any, options: CacheOptionsInterface): StorageValueInterface {\r\n        return {\r\n            value,\r\n            options: this._toStorageOptions(options)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Prepare options to set to storage\r\n     * @param options options\r\n     * @returns result\r\n     */\r\n    private _toStorageOptions(options: CacheOptionsInterface): CacheOptionsInterface {\r\n        const storageOptions: CacheOptionsInterface = {};\r\n        storageOptions.expires = options.expires ? options.expires :\r\n            (options.maxAge ? Date.now() + (options.maxAge * 1000) : this._defaultOptions.expires);\r\n        storageOptions.maxAge = options.maxAge ? options.maxAge : this._defaultOptions.maxAge;\r\n        return storageOptions;\r\n    }\r\n\r\n    /**\r\n     * Validate storage value\r\n     * @param value value\r\n     * @returns result\r\n     */\r\n    private _validateStorageValue(value: StorageValueInterface) {\r\n        return !!value.options.expires && value.options.expires > Date.now();\r\n    }\r\n\r\n    /**\r\n     * check if its system cache key\r\n     * @param key key\r\n     * @returns result\r\n     */\r\n    private _isSystemKey(key: string) {\r\n        return [this._tagsStorageKey()].indexOf(key) !== -1;\r\n    }\r\n\r\n    /**\r\n     * Save tag to list of tags\r\n     * @param tag tag\r\n     * @param key key\r\n     */\r\n    private _saveTag(tag: string, key: string) {\r\n        const tags = this.get(this._tagsStorageKey()) || {};\r\n        if (!tags[tag]) {\r\n            tags[tag] = [key];\r\n        } else {\r\n            tags[tag].push(key);\r\n        }\r\n        this.set(this._tagsStorageKey(), tags);\r\n    }\r\n\r\n    /**\r\n     * Get global cache prefix\r\n     * @returns result\r\n     */\r\n    private _getCachePrefix() {\r\n        return this._prefix;\r\n    }\r\n\r\n    private _tagsStorageKey() {\r\n        return 'CacheService_tags';\r\n    }\r\n\r\n}\r\n","// tslint:disable: forin\r\nimport { Emitter, Disposable, CompositeDisposable } from './event-kit';\r\n// import { calculateSpecificity, validateSelector } from 'clear-cut';\r\n// const _ = require('underscore-plus')\r\n\r\nlet SequenceCount = 0;\r\n\r\n// Public: Associates listener functions with commands in a\r\n// context-sensitive way using CSS selectors. You can access a global instance of\r\n// this class via `atom.commands`, and commands registered there will be\r\n// presented in the command palette.\r\n//\r\n// The global command registry facilitates a style of event handling known as\r\n// *event delegation* that was popularized by jQuery. Atom commands are expressed\r\n// as custom DOM events that can be invoked on the currently focused element via\r\n// a key binding or manually via the command palette. Rather than binding\r\n// listeners for command events directly to DOM nodes, you instead register\r\n// command event listeners globally on `atom.commands` and constrain them to\r\n// specific kinds of elements with CSS selectors.\r\n//\r\n// Command names must follow the `namespace:action` pattern, where `namespace`\r\n// will typically be the name of your package, and `action` describes the\r\n// behavior of your command. If either part consists of multiple words, these\r\n// must be separated by hyphens. E.g. `awesome-package:turn-it-up-to-eleven`.\r\n// All words should be lowercased.\r\n//\r\n// As the event bubbles upward through the DOM, all registered event listeners\r\n// with matching selectors are invoked in order of specificity. In the event of a\r\n// specificity tie, the most recently registered listener is invoked first. This\r\n// mirrors the \"cascade\" semantics of CSS. Event listeners are invoked in the\r\n// context of the current DOM node, meaning `this` always points at\r\n// `event.currentTarget`. As is normally the case with DOM events,\r\n// `stopPropagation` and `stopImmediatePropagation` can be used to terminate the\r\n// bubbling process and prevent invocation of additional listeners.\r\n//\r\n// ## Example\r\n//\r\n// Here is a command that inserts the current date in an editor:\r\n//\r\n// ```coffee\r\n// atom.commands.add 'atom-text-editor',\r\n//   'user:insert-date': (event) ->\r\n//     editor = @getModel()\r\n//     editor.insertText(new Date().toLocaleString())\r\n// ```\r\nexport class CommandRegistry {\r\n  private rootNode: any;\r\n  private registeredCommands: any;\r\n  private selectorBasedListenersByCommandName: any;\r\n  private inlineListenersByCommandName: any;\r\n  private emitter: Emitter;\r\n\r\n  constructor() {\r\n    this.handleCommandEvent = this.handleCommandEvent.bind(this);\r\n    this.rootNode = null;\r\n    this.clear();\r\n  }\r\n\r\n  clear() {\r\n    this.registeredCommands = {};\r\n    this.selectorBasedListenersByCommandName = {};\r\n    this.inlineListenersByCommandName = {};\r\n    this.emitter = new Emitter();\r\n  }\r\n\r\n  attach(rootNode) {\r\n    this.rootNode = rootNode;\r\n    for (const command in this.selectorBasedListenersByCommandName) {\r\n      this.commandRegistered(command);\r\n    }\r\n\r\n    for (const command in this.inlineListenersByCommandName) {\r\n      this.commandRegistered(command);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    for (const commandName in this.registeredCommands) {\r\n      this.rootNode.removeEventListener(\r\n        commandName,\r\n        this.handleCommandEvent,\r\n        true\r\n      );\r\n    }\r\n  }\r\n\r\n  // Public: Add one or more command listeners associated with a selector.\r\n  //\r\n  // ## Arguments: Registering One Command\r\n  //\r\n  // * `target` A {String} containing a CSS selector or a DOM element. If you\r\n  //   pass a selector, the command will be globally associated with all matching\r\n  //   elements. The `,` combinator is not currently supported. If you pass a\r\n  //   DOM element, the command will be associated with just that element.\r\n  // * `commandName` A {String} containing the name of a command you want to\r\n  //   handle such as `user:insert-date`.\r\n  // * `listener` A listener which handles the event.  Either a {Function} to\r\n  //   call when the given command is invoked on an element matching the\r\n  //   selector, or an {Object} with a `didDispatch` property which is such a\r\n  //   function.\r\n  //\r\n  //   The function (`listener` itself if it is a function, or the `didDispatch`\r\n  //   method if `listener` is an object) will be called with `this` referencing\r\n  //   the matching DOM node and the following argument:\r\n  //     * `event`: A standard DOM event instance. Call `stopPropagation` or\r\n  //       `stopImmediatePropagation` to terminate bubbling early.\r\n  //\r\n  //   Additionally, `listener` may have additional properties which are returned\r\n  //   to those who query using `atom.commands.findCommands`, as well as several\r\n  //   meaningful metadata properties:\r\n  //     * `displayName`: Overrides any generated `displayName` that would\r\n  //       otherwise be generated from the event name.\r\n  //     * `description`: Used by consumers to display detailed information about\r\n  //       the command.\r\n  //     * `hiddenInCommandPalette`: If `true`, this command will not appear in\r\n  //       the bundled command palette by default, but can still be shown with.\r\n  //       the `Command Palette: Show Hidden Commands` command. This is a good\r\n  //       option when you need to register large numbers of commands that don't\r\n  //       make sense to be executed from the command palette. Please use this\r\n  //       option conservatively, as it could reduce the discoverability of your\r\n  //       package's commands.\r\n  //\r\n  // ## Arguments: Registering Multiple Commands\r\n  //\r\n  // * `target` A {String} containing a CSS selector or a DOM element. If you\r\n  //   pass a selector, the commands will be globally associated with all\r\n  //   matching elements. The `,` combinator is not currently supported.\r\n  //   If you pass a DOM element, the command will be associated with just that\r\n  //   element.\r\n  // * `commands` An {Object} mapping command names like `user:insert-date` to\r\n  //   listener {Function}s.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to remove the\r\n  // added command handler(s).\r\n  add(target, commandName, listener, throwOnInvalidSelector = true) {\r\n    if (typeof commandName === 'object') {\r\n      const commands = commandName;\r\n      throwOnInvalidSelector = listener;\r\n      const disposable = new CompositeDisposable();\r\n      for (commandName in commands) {\r\n        listener = commands[commandName];\r\n        disposable.add(this.add(target, commandName, listener, throwOnInvalidSelector));\r\n      }\r\n      return disposable;\r\n    }\r\n\r\n    if (listener == null) {\r\n      throw new Error('Cannot register a command with a null listener.');\r\n    }\r\n\r\n    // type Listener = ((e: CustomEvent) => void) | {\r\n    //   displayName?: string,\r\n    //   description?: string,\r\n    //   didDispatch(e: CustomEvent): void,\r\n    // }\r\n    if ((typeof listener !== 'function') && (typeof listener.didDispatch !== 'function')) {\r\n      throw new Error('Listener must be a callback function or an object with a didDispatch method.');\r\n    }\r\n\r\n    if (typeof target === 'string') {\r\n      if (throwOnInvalidSelector) {\r\n        validateSelector(target);\r\n      }\r\n      return this.addSelectorBasedListener(target, commandName, listener);\r\n    } else {\r\n      return this.addInlineListener(target, commandName, listener);\r\n    }\r\n  }\r\n\r\n  addSelectorBasedListener(selector, commandName, listener) {\r\n    if (this.selectorBasedListenersByCommandName[commandName] == null) {\r\n      this.selectorBasedListenersByCommandName[commandName] = [];\r\n    }\r\n    const listenersForCommand = this.selectorBasedListenersByCommandName[commandName];\r\n    const selectorListener = new SelectorBasedListener(selector, commandName, listener);\r\n    listenersForCommand.push(selectorListener);\r\n\r\n    this.commandRegistered(commandName);\r\n\r\n    return new Disposable(() => {\r\n      listenersForCommand.splice(listenersForCommand.indexOf(selectorListener), 1);\r\n      if (listenersForCommand.length === 0) {\r\n        delete this.selectorBasedListenersByCommandName[commandName];\r\n      }\r\n    });\r\n  }\r\n\r\n  addInlineListener(element, commandName, listener) {\r\n    if (this.inlineListenersByCommandName[commandName] == null) {\r\n      this.inlineListenersByCommandName[commandName] = new WeakMap();\r\n    }\r\n\r\n    const listenersForCommand = this.inlineListenersByCommandName[commandName];\r\n    let listenersForElement = listenersForCommand.get(element);\r\n    if (!listenersForElement) {\r\n      listenersForElement = [];\r\n      listenersForCommand.set(element, listenersForElement);\r\n    }\r\n    const inlineListener = new InlineListener(commandName, listener);\r\n    listenersForElement.push(inlineListener);\r\n\r\n    this.commandRegistered(commandName);\r\n\r\n    return new Disposable(() => {\r\n      listenersForElement.splice(listenersForElement.indexOf(inlineListener), 1);\r\n      if (listenersForElement.length === 0) {\r\n        listenersForCommand.delete(element);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Public: Find all registered commands matching a query.\r\n  //\r\n  // * `params` An {Object} containing one or more of the following keys:\r\n  //   * `target` A DOM node that is the hypothetical target of a given command.\r\n  //\r\n  // Returns an {Array} of `CommandDescriptor` {Object}s containing the following keys:\r\n  //  * `name` The name of the command. For example, `user:insert-date`.\r\n  //  * `displayName` The display name of the command. For example,\r\n  //    `User: Insert Date`.\r\n  // Additional metadata may also be present in the returned descriptor:\r\n  //  * `description` a {String} describing the function of the command in more\r\n  //    detail than the title\r\n  //  * `tags` an {Array} of {String}s that describe keywords related to the\r\n  //    command\r\n  //  Any additional nonstandard metadata provided when the command was `add`ed\r\n  //  may also be present in the returned descriptor.\r\n  findCommands({ target }) {\r\n    const commandNames = new Set();\r\n    const commands = [];\r\n    let currentTarget = target;\r\n    while (true) {\r\n      let listeners;\r\n      for (const name in this.inlineListenersByCommandName) {\r\n        listeners = this.inlineListenersByCommandName[name];\r\n        if (listeners.has(currentTarget) && !commandNames.has(name)) {\r\n          commandNames.add(name);\r\n          const targetListeners = listeners.get(currentTarget);\r\n          commands.push(\r\n            ...targetListeners.map(listener => listener.descriptor)\r\n          );\r\n        }\r\n      }\r\n\r\n      for (const commandName in this.selectorBasedListenersByCommandName) {\r\n        listeners = this.selectorBasedListenersByCommandName[commandName];\r\n        for (const listener of listeners) {\r\n          if (listener.matchesTarget(currentTarget)) {\r\n            if (!commandNames.has(commandName)) {\r\n              commandNames.add(commandName);\r\n              commands.push(listener.descriptor);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (currentTarget === window) {\r\n        break;\r\n      }\r\n      currentTarget = currentTarget.parentNode || window;\r\n    }\r\n\r\n    return commands;\r\n  }\r\n\r\n  // Public: Simulate the dispatch of a command on a DOM node.\r\n  //\r\n  // This can be useful for testing when you want to simulate the invocation of a\r\n  // command on a detached DOM node. Otherwise, the DOM node in question needs to\r\n  // be attached to the document so the event bubbles up to the root node to be\r\n  // processed.\r\n  //\r\n  // * `target` The DOM node at which to start bubbling the command event.\r\n  // * `commandName` {String} indicating the name of the command to dispatch.\r\n  dispatch(target, commandName, detail) {\r\n    const event = new CustomEvent(commandName, { bubbles: true, detail });\r\n    Object.defineProperty(event, 'target', { value: target });\r\n    return this.handleCommandEvent(event);\r\n  }\r\n\r\n  // Public: Invoke the given callback before dispatching a command event.\r\n  //\r\n  // * `callback` {Function} to be called before dispatching each command\r\n  //   * `event` The Event that will be dispatched\r\n  onWillDispatch(callback) {\r\n    return this.emitter.on('will-dispatch', callback);\r\n  }\r\n\r\n  // Public: Invoke the given callback after dispatching a command event.\r\n  //\r\n  // * `callback` {Function} to be called after dispatching each command\r\n  //   * `event` The Event that was dispatched\r\n  onDidDispatch(callback) {\r\n    return this.emitter.on('did-dispatch', callback);\r\n  }\r\n\r\n  getSnapshot() {\r\n    const snapshot = {};\r\n    for (const commandName in this.selectorBasedListenersByCommandName) {\r\n      const listeners = this.selectorBasedListenersByCommandName[commandName];\r\n      snapshot[commandName] = listeners.slice();\r\n    }\r\n    return snapshot;\r\n  }\r\n\r\n  restoreSnapshot(snapshot) {\r\n    this.selectorBasedListenersByCommandName = {};\r\n    for (const commandName in snapshot) {\r\n      const listeners = snapshot[commandName];\r\n      this.selectorBasedListenersByCommandName[commandName] = listeners.slice();\r\n    }\r\n  }\r\n\r\n  handleCommandEvent(event) {\r\n    let propagationStopped = false;\r\n    let immediatePropagationStopped = false;\r\n    const matched = [];\r\n    let currentTarget = event.target;\r\n\r\n    const dispatchedEvent = new CustomEvent(event.type, {\r\n      bubbles: true,\r\n      detail: event.detail\r\n    });\r\n    Object.defineProperty(dispatchedEvent, 'eventPhase', {\r\n      value: Event.BUBBLING_PHASE\r\n    });\r\n    Object.defineProperty(dispatchedEvent, 'currentTarget', {\r\n      get() {\r\n        return currentTarget;\r\n      }\r\n    });\r\n    Object.defineProperty(dispatchedEvent, 'target', { value: currentTarget });\r\n    Object.defineProperty(dispatchedEvent, 'preventDefault', {\r\n      value() {\r\n        return event.preventDefault();\r\n      }\r\n    });\r\n    Object.defineProperty(dispatchedEvent, 'stopPropagation', {\r\n      value() {\r\n        event.stopPropagation();\r\n        propagationStopped = true;\r\n      }\r\n    });\r\n    Object.defineProperty(dispatchedEvent, 'stopImmediatePropagation', {\r\n      value() {\r\n        event.stopImmediatePropagation();\r\n        propagationStopped = true;\r\n        immediatePropagationStopped = true;\r\n      }\r\n    });\r\n    Object.defineProperty(dispatchedEvent, 'abortKeyBinding', {\r\n      value() {\r\n        if (typeof event.abortKeyBinding === 'function') {\r\n          event.abortKeyBinding();\r\n        }\r\n      }\r\n    });\r\n\r\n    for (const key of Object.keys(event)) {\r\n      if (!(key in dispatchedEvent)) {\r\n        dispatchedEvent[key] = event[key];\r\n      }\r\n    }\r\n\r\n    this.emitter.emit('will-dispatch', dispatchedEvent);\r\n\r\n    while (true) {\r\n      const commandInlineListeners =\r\n        this.inlineListenersByCommandName[event.type]\r\n        ? this.inlineListenersByCommandName[event.type].get(currentTarget)\r\n        : null;\r\n      let listeners = commandInlineListeners || [];\r\n      if (currentTarget.webkitMatchesSelector != null) {\r\n        const selectorBasedListeners =\r\n          (this.selectorBasedListenersByCommandName[event.type] || [])\r\n            .filter(listener => listener.matchesTarget(currentTarget))\r\n            .sort((a, b) => a.compare(b));\r\n        listeners = selectorBasedListeners.concat(listeners);\r\n      }\r\n\r\n      // Call inline listeners first in reverse registration order,\r\n      // and selector-based listeners by specificity and reverse\r\n      // registration order.\r\n      for (let i = listeners.length - 1; i >= 0; i--) {\r\n        const listener = listeners[i];\r\n        if (immediatePropagationStopped) {\r\n          break;\r\n        }\r\n        matched.push(listener.didDispatch.call(currentTarget, dispatchedEvent));\r\n      }\r\n\r\n      if (currentTarget === window) {\r\n        break;\r\n      }\r\n      if (propagationStopped) {\r\n        break;\r\n      }\r\n      currentTarget = currentTarget.parentNode || window;\r\n    }\r\n\r\n    this.emitter.emit('did-dispatch', dispatchedEvent);\r\n\r\n    return (matched.length > 0 ? Promise.all(matched) : null);\r\n  }\r\n\r\n  commandRegistered(commandName) {\r\n    if (this.rootNode != null && !this.registeredCommands[commandName]) {\r\n      this.rootNode.addEventListener(commandName, this.handleCommandEvent, true);\r\n      return (this.registeredCommands[commandName] = true);\r\n    }\r\n  }\r\n}\r\n\r\n// type Listener = {\r\n//   descriptor: CommandDescriptor,\r\n//   extractDidDispatch: (e: CustomEvent) => void,\r\n// };\r\nclass SelectorBasedListener {\r\n  private selector: string;\r\n  private didDispatch: any;\r\n  private descriptor: any;\r\n  private specificity: number;\r\n  private sequenceNumber: number;\r\n\r\n  constructor(selector, commandName, listener) {\r\n    this.selector = selector;\r\n    this.didDispatch = extractDidDispatch(listener);\r\n    this.descriptor = extractDescriptor(commandName, listener);\r\n    this.specificity = calculateSpecificity(this.selector);\r\n    this.sequenceNumber = SequenceCount++;\r\n  }\r\n\r\n  compare(other) {\r\n    return (\r\n      this.specificity - other.specificity ||\r\n      this.sequenceNumber - other.sequenceNumber\r\n    );\r\n  }\r\n\r\n  matchesTarget(target) {\r\n    return target.webkitMatchesSelector && target.webkitMatchesSelector(this.selector);\r\n  }\r\n}\r\n\r\nclass InlineListener {\r\n  private didDispatch: any;\r\n  private descriptor: any;\r\n  constructor(commandName, listener) {\r\n    this.didDispatch = extractDidDispatch(listener);\r\n    this.descriptor = extractDescriptor(commandName, listener);\r\n  }\r\n}\r\n\r\n// type CommandDescriptor = {\r\n//   name: string,\r\n//   displayName: string,\r\n// };\r\nfunction extractDescriptor(name, listener) {\r\n  return Object.assign(\r\n    omit(listener, 'didDispatch'),\r\n    {\r\n      name,\r\n      displayName: listener.displayName ? listener.displayName : humanizeEventName(name)\r\n    }\r\n  );\r\n}\r\n\r\nfunction extractDidDispatch(listener) {\r\n  return typeof listener === 'function' ? listener : listener.didDispatch;\r\n}\r\n\r\nfunction validateSelector(selector: string) {\r\n  if (!isSelectorValid(selector)) {\r\n    const error = new SyntaxError(selector + ' is not a valid selector');\r\n    // error.code = 'EBADSELECTOR';\r\n    throw error;\r\n  }\r\n}\r\n\r\nfunction isSelectorValid(selector: string) {\r\n  let valid: boolean;\r\n\r\n  try {\r\n    document.querySelector(selector);\r\n    valid = true;\r\n  } catch (error) {\r\n    valid = false;\r\n  }\r\n\r\n  return valid;\r\n}\r\n\r\nfunction calculateSpecificity(selector: string) {\r\n  const specificity = calculate(selector);\r\n  return specificity;\r\n}\r\nfunction calculate(selector: string) {\r\n  const commaIndex = selector.indexOf(',');\r\n  if (commaIndex !== -1) {\r\n    selector = selector.substring(0, commaIndex);\r\n  }\r\n\r\n  const types = {\r\n    a: 0,\r\n    b: 0,\r\n    c: 0\r\n  };\r\n\r\n  // The following regular expressions assume that selectors matching the preceding regular expressions have been removed\r\n  const attributeRegex = /(\\[[^\\]]+\\])/g;\r\n  const idRegex = /(#[^\\s\\+>~\\.\\[:]+)/g;\r\n  const classRegex = /(\\.[^\\s\\+>~\\.\\[:]+)/g;\r\n  const pseudoElementRegex = /(::[^\\s\\+>~\\.\\[:]+|:first-line|:first-letter|:before|:after)/g;\r\n  const pseudoClassRegex = /(:[^\\s\\+>~\\.\\[:]+)/g;\r\n  const elementRegex = /([^\\s\\+>~\\.\\[:]+)/g;\r\n  const notRegex = /:not\\(([^\\)]*)\\)/g;\r\n  const ruleRegex = /\\{[^]*/gm;\r\n  const separatorRegex = /[\\*\\s\\+>~]/g;\r\n  const straysRegex = /[#\\.]/g;\r\n\r\n  // Remove the negation psuedo-class (:not) but leave its argument because specificity is calculated on its argument\r\n  selector = selector.replace(notRegex, ' $1 ');\r\n\r\n  // Remove anything after a left brace in case a user has pasted in a rule, not just a selector\r\n  selector = selector.replace(ruleRegex, ' ');\r\n\r\n  // Add attribute selectors to parts collection (type b)\r\n  selector = findMatch(attributeRegex, 'b', types, selector);\r\n\r\n  // Add ID selectors to parts collection (type a)\r\n  selector = findMatch(idRegex, 'a', types, selector);\r\n\r\n  // Add class selectors to parts collection (type b)\r\n  selector = findMatch(classRegex, 'b', types, selector);\r\n\r\n  // Add pseudo-element selectors to parts collection (type c)\r\n  selector = findMatch(pseudoElementRegex, 'c', types, selector);\r\n\r\n  // Add pseudo-class selectors to parts collection (type b)\r\n  selector = findMatch(pseudoClassRegex, 'b', types, selector);\r\n\r\n  // Remove universal selector and separator characters\r\n  selector = selector.replace(separatorRegex, ' ');\r\n\r\n  // Remove any stray dots or hashes which aren't attached to words\r\n  // These may be present if the user is live-editing this selector\r\n  selector = selector.replace(straysRegex, ' ');\r\n\r\n  // The only things left should be element selectors (type c)\r\n  findMatch(elementRegex, 'c', types, selector);\r\n\r\n  return (types.a * 100) + (types.b * 10) + (types.c * 1);\r\n}\r\n\r\nfunction findMatch(regex, type, types, selector) {\r\n  const matches = selector.match(regex);\r\n  if (matches) {\r\n    for (const match of matches) {\r\n      types[type]++;\r\n      // Replace this simple selector with whitespace so it won't be counted in further simple selectors\r\n      selector = selector.replace(match, ' ');\r\n    }\r\n  }\r\n\r\n  return selector;\r\n}\r\n\r\nfunction omit(obj: any, ...props: string[]) {\r\n  // const iteratee = (value, key) => !props.find(key);\r\n\r\n  const result = {};\r\n  if (!obj) {\r\n    return result;\r\n  }\r\n  Object.keys(obj).forEach(key => {\r\n    if (!props.find(prop => prop === key)) {\r\n      return;\r\n    }\r\n    result[key] = obj[key];\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction humanizeEventName(eventName, eventDoc = null) {\r\n  const ref = eventName.split(':');\r\n  const [namespace, event] = ref;\r\n  if (event == null) {\r\n    return undash(namespace);\r\n  }\r\n  const namespaceDoc = undash(namespace);\r\n  if (eventDoc == null) {\r\n    eventDoc = undash(event);\r\n  }\r\n  return '' + namespaceDoc + ': ' + eventDoc;\r\n}\r\n\r\nfunction undash(str) {\r\n  if (str) {\r\n    return str.split('-').join(' ');\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class Util {\r\n  newGuid() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      // tslint:disable: no-bitwise\r\n      const r = Math.random() * 16 | 0;\r\n      const v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * åurlæ·»å QueryParam\r\n   * @param url åå§url\r\n   * @param paramName åæ°å\r\n   * @param paramValue åæ°å¼\r\n   * @param override æ¯å¦è¦çãä¸ºTrueæ¶ï¼å¦æåæ°å·²å­å¨ï¼å°è¦çå·²æåæ°ï¼å¦åæ¾å¼å¤çãé»è®¤ä¸ºFalseã\r\n   */\r\n  setUrlParam(url: string, paramName: string, paramValue: string, override?: boolean) {\r\n    const [path, search] = url.split('?');\r\n    const params = new URLSearchParams(search);\r\n    if (params.has(paramName) && !override) {\r\n      return url;\r\n    }\r\n\r\n    params.set(paramName, paramValue);\r\n    return path + '?' + params.toString();\r\n  }\r\n}\r\n","import { Disposable } from './event-kit';\r\nimport { ComponentRef } from '@angular/core';\r\n\r\n// Essential: `ViewRegistry` handles the association between model and view\r\n// types in Atom. We call this association a View Provider. As in, for a given\r\n// model, this class can provide a view via {::getView}, as long as the\r\n// model/view association was registered via {::addViewProvider}\r\n//\r\n// If you're adding your own kind of pane item, a good strategy for all but the\r\n// simplest items is to separate the model and the view. The model handles\r\n// application logic and is the primary point of API interaction. The view\r\n// just handles presentation.\r\n//\r\n// Note: Models can be any object, but must implement a `getTitle()` function\r\n// if they are to be displayed in a {Pane}\r\n//\r\n// View providers inform the workspace how your model objects should be\r\n// presented in the DOM. A view provider must always return a DOM node, which\r\n// makes [HTML 5 custom elements](http://www.html5rocks.com/en/tutorials/webcomponents/customelements/)\r\n// an ideal tool for implementing views in Atom.\r\n//\r\n// You can access the `ViewRegistry` object via `atom.views`.\r\nexport class ViewRegistry {\r\n  // private animationFrameRequest: any;\r\n  // private documentReadInProgress: boolean;\r\n  private gspEnvironment: any;\r\n  private views: WeakMap<object, ComponentRef<any>>;\r\n  private providers: any[];\r\n  // private documentWriters: any;\r\n  // private documentReaders: any;\r\n  // private nextUpdatePromise: any;\r\n  // private resolveNextUpdatePromise: (value?: {} | PromiseLike<{}>) => void;\r\n  constructor (gspEnvironment) {\r\n    // this.animationFrameRequest = null\r\n    // this.documentReadInProgress = false\r\n    // this.performDocumentUpdate = this.performDocumentUpdate.bind(this);\r\n    this.gspEnvironment = gspEnvironment;\r\n    this.clear();\r\n  }\r\n\r\n  clear () {\r\n    this.views = new WeakMap();\r\n    this.providers = [];\r\n    this.clearDocumentRequests();\r\n  }\r\n\r\n  // Essential: Add a provider that will be used to construct views in the\r\n  // workspace's view layer based on model objects in its model layer.\r\n  //\r\n  // ## Examples\r\n  //\r\n  // Text editors are divided into a model and a view layer, so when you interact\r\n  // with methods like `atom.workspace.getActiveTextEditor()` you're only going\r\n  // to get the model object. We display text editors on screen by teaching the\r\n  // workspace what view constructor it should use to represent them:\r\n  //\r\n  // ```coffee\r\n  // atom.views.addViewProvider TextEditor, (textEditor) ->\r\n  //   textEditorElement = new TextEditorElement\r\n  //   textEditorElement.initialize(textEditor)\r\n  //   textEditorElement\r\n  // ```\r\n  //\r\n  // * `modelConstructor` (optional) Constructor {Function} for your model. If\r\n  //   a constructor is given, the `createView` function will only be used\r\n  //   for model objects inheriting from that constructor. Otherwise, it will\r\n  //   will be called for any object.\r\n  // * `createView` Factory {Function} that is passed an instance of your model\r\n  //   and must return a subclass of `HTMLElement` or `undefined`. If it returns\r\n  //   `undefined`, then the registry will continue to search for other view\r\n  //   providers.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to remove the\r\n  // added provider.\r\n  addViewProvider (modelConstructor, createView) {\r\n    let provider;\r\n    if (arguments.length === 1) {\r\n      switch (typeof modelConstructor) {\r\n        case 'function':\r\n          provider = {createView: modelConstructor, modelConstructor: null};\r\n          break;\r\n        case 'object':\r\n          provider = modelConstructor;\r\n          break;\r\n        default:\r\n          throw new TypeError('Arguments to addViewProvider must be functions');\r\n      }\r\n    } else {\r\n      provider = {modelConstructor, createView};\r\n    }\r\n\r\n    this.providers.push(provider);\r\n    return new Disposable(() => {\r\n      this.providers = this.providers.filter(p => p !== provider);\r\n    });\r\n  }\r\n\r\n  getViewProviderCount () {\r\n    return this.providers.length;\r\n  }\r\n\r\n  // Essential: Get the view associated with an object in the workspace.\r\n  //\r\n  // If you're just *using* the workspace, you shouldn't need to access the view\r\n  // layer, but view layer access may be necessary if you want to perform DOM\r\n  // manipulation that isn't supported via the model API.\r\n  //\r\n  // ## View Resolution Algorithm\r\n  //\r\n  // The view associated with the object is resolved using the following\r\n  // sequence\r\n  //\r\n  //  1. Is the object an instance of `HTMLElement`? If true, return the object.\r\n  //  2. Does the object have a method named `getElement` that returns an\r\n  //     instance of `HTMLElement`? If true, return that value.\r\n  //  3. Does the object have a property named `element` with a value which is\r\n  //     an instance of `HTMLElement`? If true, return the property value.\r\n  //  4. Is the object a jQuery object, indicated by the presence of a `jquery`\r\n  //     property? If true, return the root DOM element (i.e. `object[0]`).\r\n  //  5. Has a view provider been registered for the object? If true, use the\r\n  //     provider to create a view associated with the object, and return the\r\n  //     view.\r\n  //\r\n  // If no associated view is returned by the sequence an error is thrown.\r\n  //\r\n  // Returns a DOM element.\r\n  getView (object): ComponentRef<any> {\r\n    if (object == null) { return; }\r\n\r\n    let view = this.views.get(object);\r\n    if (!view) {\r\n      view = this.createView(object);\r\n      this.views.set(object, view);\r\n    }\r\n    return view;\r\n  }\r\n\r\n  createView (object): ComponentRef<any> {\r\n    if (object instanceof ComponentRef) { return object; }\r\n\r\n    let element;\r\n    if (object && (typeof object.getElement === 'function')) {\r\n      element = object.getElement();\r\n      if (element instanceof ComponentRef) {\r\n        return element;\r\n      }\r\n    }\r\n\r\n    if (object && object.element instanceof ComponentRef) {\r\n      return object.element;\r\n    }\r\n\r\n    // if (object && object.jquery) {\r\n    //   return object[0];\r\n    // }\r\n\r\n    for (const provider of this.providers) {\r\n      if (provider.modelConstructor === null) {\r\n        element = provider.createView(object, this.gspEnvironment);\r\n        if (element) { return element; }\r\n        continue;\r\n      }\r\n\r\n      if (object instanceof provider.modelConstructor) {\r\n        element = provider.createView && provider.createView(object, this.gspEnvironment);\r\n        if (element) { return element; }\r\n\r\n        const ViewConstructor = provider.viewConstructor;\r\n        if (ViewConstructor) {\r\n          element = new ViewConstructor();\r\n          if (element.initialize) {\r\n            element.initialize(object);\r\n          } else if (element.setModel) {\r\n            element.setModel(object);\r\n          }\r\n          return element;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (object && object.getViewClass) {\r\n      const ViewConstructor = object.getViewClass();\r\n      if (ViewConstructor) {\r\n        const view = new ViewConstructor(object);\r\n        return view;\r\n      }\r\n    }\r\n\r\n    throw new Error(`Can't create a view for ${object.constructor.name} instance. Please register a view provider.`);\r\n  }\r\n\r\n  updateDocument (fn) {\r\n    // this.documentWriters.push(fn)\r\n    // if (!this.documentReadInProgress) { this.requestDocumentUpdate() }\r\n    // return new Disposable(() => {\r\n    //   this.documentWriters = this.documentWriters.filter(writer => writer !== fn)\r\n    // })\r\n  }\r\n\r\n  readDocument (fn) {\r\n    // this.documentReaders.push(fn)\r\n    // this.requestDocumentUpdate()\r\n    // return new Disposable(() => {\r\n    //   this.documentReaders = this.documentReaders.filter(reader => reader !== fn)\r\n    // })\r\n  }\r\n\r\n  getNextUpdatePromise () {\r\n    // if (this.nextUpdatePromise == null) {\r\n    //   this.nextUpdatePromise = new Promise(resolve => {\r\n    //     this.resolveNextUpdatePromise = resolve\r\n    //   })\r\n    // }\r\n\r\n    // return this.nextUpdatePromise\r\n  }\r\n\r\n  clearDocumentRequests () {\r\n    // this.documentReaders = []\r\n    // this.documentWriters = []\r\n    // this.nextUpdatePromise = null\r\n    // this.resolveNextUpdatePromise = null\r\n    // if (this.animationFrameRequest != null) {\r\n    //   cancelAnimationFrame(this.animationFrameRequest)\r\n    //   this.animationFrameRequest = null\r\n    // }\r\n  }\r\n\r\n  requestDocumentUpdate () {\r\n    // if (this.animationFrameRequest == null) {\r\n    //   this.animationFrameRequest = requestAnimationFrame(this.performDocumentUpdate)\r\n    // }\r\n  }\r\n\r\n  performDocumentUpdate () {\r\n    // const { resolveNextUpdatePromise } = this\r\n    // this.animationFrameRequest = null\r\n    // this.nextUpdatePromise = null\r\n    // this.resolveNextUpdatePromise = null\r\n\r\n    // var writer = this.documentWriters.shift()\r\n    // while (writer) {\r\n    //   writer()\r\n    //   writer = this.documentWriters.shift()\r\n    // }\r\n\r\n    // var reader = this.documentReaders.shift()\r\n    // this.documentReadInProgress = true\r\n    // while (reader) {\r\n    //   reader()\r\n    //   reader = this.documentReaders.shift()\r\n    // }\r\n    // this.documentReadInProgress = false\r\n\r\n    // // process updates requested as a result of reads\r\n    // writer = this.documentWriters.shift()\r\n    // while (writer) {\r\n    //   writer()\r\n    //   writer = this.documentWriters.shift()\r\n    // }\r\n\r\n    // if (resolveNextUpdatePromise) { resolveNextUpdatePromise() }\r\n  }\r\n}\r\n","import { Panel } from './panel';\r\nimport { Dock } from './dock';\r\nimport { PanelLocation } from './types';\r\nimport { ViewRegistry } from './view-registry';\r\nimport { CompositeDisposable, Emitter, Disposable } from './event-kit';\r\n\r\nexport class PanelContainer {\r\n  private emitter: Emitter;\r\n  private subscriptions: CompositeDisposable;\r\n\r\n  panels: Panel[] = [];\r\n\r\n  constructor(\r\n    private viewRegistry: ViewRegistry,\r\n    private location: PanelLocation,\r\n    private dock: Dock = null) {\r\n      this.emitter = new Emitter();\r\n      this.subscriptions = new CompositeDisposable();\r\n    }\r\n\r\n  destroy() {\r\n    for (const panel of this.getPanels()) {\r\n      panel.destroy();\r\n    }\r\n  }\r\n\r\n  getElement() {\r\n  }\r\n\r\n  /*\r\n  Section: Event Subscription\r\n  */\r\n\r\n  onDidAddPanel(callback): Disposable {\r\n    return this.emitter.on('did-add-panel', callback);\r\n  }\r\n\r\n  onDidRemovePanel(callback): Disposable {\r\n    return this.emitter.on('did-remove-panel', callback);\r\n  }\r\n\r\n  onDidDestroy(callback): Disposable {\r\n    return this.emitter.once('did-destroy', callback);\r\n  }\r\n\r\n  getLocation(): PanelLocation {\r\n    return this.location;\r\n  }\r\n\r\n  isModal() { return this.location === 'modal'; }\r\n\r\n  getPanels(): Panel[] { return this.panels.slice(); }\r\n\r\n  addPanel(panel: Panel): Panel {\r\n    this.subscriptions.add(panel.onDidDestroy(this.panelDestroyed.bind(this)));\r\n\r\n    const index = this.getPanelIndex(panel);\r\n    if (index === this.panels.length) {\r\n      this.panels.push(panel);\r\n    } else {\r\n      this.panels.splice(index, 0, panel);\r\n    }\r\n\r\n    this.emitter.emit('did-add-panel', {panel, index});\r\n    return panel;\r\n  }\r\n\r\n  panelForItem(item) {\r\n    for (const panel of this.panels) {\r\n      if (panel.getItem() === item) {\r\n        return panel;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  panelDestroyed(panel) {\r\n    const index = this.panels.indexOf(panel);\r\n    if (index > -1) {\r\n      this.panels.splice(index, 1);\r\n      this.emitter.emit('did-remove-panel', {panel, index});\r\n    }\r\n  }\r\n\r\n  getPanelIndex(panel) {\r\n    const priority = panel.getPriority();\r\n    if (['bottom', 'right'].find(item => item === this.location)) {\r\n      for (let i = this.panels.length - 1; i >= 0; i--) {\r\n        const p = this.panels[i];\r\n        if (priority < p.getPriority()) { return i + 1; }\r\n      }\r\n      return 0;\r\n    } else {\r\n      for (let i = 0; i < this.panels.length; i++) {\r\n        const p = this.panels[i];\r\n        if (priority < p.getPriority()) { return i; }\r\n      }\r\n      return this.panels.length;\r\n    }\r\n  }\r\n}\r\n","import { ViewRegistry } from './view-registry';\r\nimport { Emitter, Disposable } from './event-kit';\r\n\r\nexport interface PanelOptions {\r\n  item: any;\r\n  autoFocus?: boolean;\r\n  visible?: boolean;\r\n  priority?: number;\r\n  className?: string;\r\n}\r\n\r\nexport class Panel {\r\n  /*\r\n  Section: Construction and Destruction\r\n  */\r\n  destroyed: boolean;\r\n  item: any;\r\n  autoFocus: boolean;\r\n  visible: boolean;\r\n  priority: number;\r\n  className: string;\r\n  viewRegistry: any;\r\n  private emitter: Emitter;\r\n\r\n  constructor(options: PanelOptions, viewRegistry: ViewRegistry) {\r\n    this.destroyed = false;\r\n    this.item = options.item;\r\n    this.autoFocus = options.autoFocus == null ? false : options.autoFocus;\r\n    this.visible = options.visible == null ? true : options.visible;\r\n    this.priority = options.priority == null ? 100 : options.priority;\r\n    this.className = options.className;\r\n    this.viewRegistry = viewRegistry;\r\n    this.emitter = new Emitter();\r\n  }\r\n\r\n  // Public: Destroy and remove this panel from the UI.\r\n  destroy() {\r\n    if (this.destroyed) {\r\n      return;\r\n    }\r\n    this.destroyed = true;\r\n    this.hide();\r\n    this.emitter.emit('did-destroy', this);\r\n    return this.emitter.dispose();\r\n  }\r\n\r\n  getElement() {\r\n    return this.item.getElement(); // ç´æ¥è¿åitemçè§å¾ï¼ä¸ååè£ä¸å±Panel\r\n  }\r\n\r\n  /*\r\n  Section: Event Subscription\r\n  */\r\n\r\n  // Public: Invoke the given callback when the pane hidden or shown.\r\n  //\r\n  // * `callback` {Function} to be called when the pane is destroyed.\r\n  //   * `visible` {Boolean} true when the panel has been shown\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidChangeVisible(callback) {\r\n    return this.emitter.on('did-change-visible', callback);\r\n  }\r\n\r\n  // Public: Invoke the given callback when the pane is destroyed.\r\n  //\r\n  // * `callback` {Function} to be called when the pane is destroyed.\r\n  //   * `panel` {Panel} this panel\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidDestroy(callback): Disposable {\r\n    return this.emitter.once('did-destroy', callback);\r\n  }\r\n\r\n  /*\r\n  Section: Panel Details\r\n  */\r\n\r\n  // Public: Returns the panel's item.\r\n  getItem() {\r\n    return this.item;\r\n  }\r\n\r\n  // Public: Returns a {Number} indicating this panel's priority.\r\n  getPriority() {\r\n    return this.priority;\r\n  }\r\n\r\n  getClassName() {\r\n    return this.className;\r\n  }\r\n\r\n  // Public: Returns a {Boolean} true when the panel is visible.\r\n  isVisible() {\r\n    return this.visible;\r\n  }\r\n\r\n  // Public: Hide this panel\r\n  hide() {\r\n    const wasVisible = this.visible;\r\n    this.visible = false;\r\n    if (wasVisible) {\r\n      this.emitter.emit('did-change-visible', this.visible);\r\n    }\r\n  }\r\n\r\n  // Public: Show this panel\r\n  show() {\r\n    const wasVisible = this.visible;\r\n    this.visible = true;\r\n    if (!wasVisible) {\r\n      this.emitter.emit('did-change-visible', this.visible);\r\n    }\r\n  }\r\n}\r\n","import { PaneContainer } from './pane-container';\r\nimport { Pane } from './pane';\r\n\r\n// Essential: Represents the workspace at the center of the entire window.\r\nexport class WorkspaceCenter {\r\n  paneContainer: PaneContainer;\r\n  didActivate: any;\r\n\r\n  constructor(params) {\r\n    params.location = 'center';\r\n    this.paneContainer = new PaneContainer(params);\r\n    this.didActivate = params.didActivate;\r\n    this.paneContainer.onDidActivatePane(() => this.didActivate(this));\r\n    this.paneContainer.onDidChangeActivePane((pane) => {\r\n      params.didChangeActivePane(this, pane);\r\n    });\r\n    this.paneContainer.onDidChangeActivePaneItem((item) => {\r\n      params.didChangeActivePaneItem(this, item);\r\n    });\r\n    this.paneContainer.onDidDestroyPaneItem((item) => params.didDestroyPaneItem(item));\r\n  }\r\n\r\n  destroy() {\r\n    this.paneContainer.destroy();\r\n  }\r\n\r\n  serialize() {\r\n    return this.paneContainer.serialize();\r\n  }\r\n\r\n  deserialize(state, deserializerManager) {\r\n    this.paneContainer.deserialize(state, deserializerManager);\r\n  }\r\n\r\n  activate() {\r\n    this.getActivePane().activate();\r\n  }\r\n\r\n  getLocation() {\r\n    return 'center';\r\n  }\r\n\r\n  setDraggingItem() {\r\n    // No-op\r\n  }\r\n\r\n  // Essential: Invoke the given callback with all current and future panes items\r\n  // in the workspace center.\r\n  //\r\n  // * `callback` {Function} to be called with current and future pane items.\r\n  //   * `item` An item that is present in {::getPaneItems} at the time of\r\n  //      subscription or that is added at some later time.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  observePaneItems(callback) { return this.paneContainer.observePaneItems(callback); }\r\n\r\n  // Essential: Invoke the given callback when the active pane item changes.\r\n  //\r\n  // Because observers are invoked synchronously, it's important not to perform\r\n  // any expensive operations via this method. Consider\r\n  // {::onDidStopChangingActivePaneItem} to delay operations until after changes\r\n  // stop occurring.\r\n  //\r\n  // * `callback` {Function} to be called when the active pane item changes.\r\n  //   * `item` The active pane item.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidChangeActivePaneItem(callback) {\r\n    return this.paneContainer.onDidChangeActivePaneItem(callback);\r\n  }\r\n\r\n  // Essential: Invoke the given callback when the active pane item stops\r\n  // changing.\r\n  //\r\n  // Observers are called asynchronously 100ms after the last active pane item\r\n  // change. Handling changes here rather than in the synchronous\r\n  // {::onDidChangeActivePaneItem} prevents unneeded work if the user is quickly\r\n  // changing or closing tabs and ensures critical UI feedback, like changing the\r\n  // highlighted tab, gets priority over work that can be done asynchronously.\r\n  //\r\n  // * `callback` {Function} to be called when the active pane item stopts\r\n  //   changing.\r\n  //   * `item` The active pane item.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidStopChangingActivePaneItem(callback) {\r\n    return this.paneContainer.onDidStopChangingActivePaneItem(callback);\r\n  }\r\n\r\n  // Essential: Invoke the given callback with the current active pane item and\r\n  // with all future active pane items in the workspace center.\r\n  //\r\n  // * `callback` {Function} to be called when the active pane item changes.\r\n  //   * `item` The current active pane item.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  observeActivePaneItem(callback) {\r\n    return this.paneContainer.observeActivePaneItem(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback when a pane is added to the workspace\r\n  // center.\r\n  //\r\n  // * `callback` {Function} to be called panes are added.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `pane` The added pane.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidAddPane(callback) {\r\n    return this.paneContainer.onDidAddPane(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback before a pane is destroyed in the\r\n  // workspace center.\r\n  //\r\n  // * `callback` {Function} to be called before panes are destroyed.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `pane` The pane to be destroyed.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onWillDestroyPane(callback) {\r\n    return this.paneContainer.onWillDestroyPane(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback when a pane is destroyed in the\r\n  // workspace center.\r\n  //\r\n  // * `callback` {Function} to be called panes are destroyed.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `pane` The destroyed pane.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidDestroyPane(callback) {\r\n    return this.paneContainer.onDidDestroyPane(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback with all current and future panes in the\r\n  // workspace center.\r\n  //\r\n  // * `callback` {Function} to be called with current and future panes.\r\n  //   * `pane` A {Pane} that is present in {::getPanes} at the time of\r\n  //      subscription or that is added at some later time.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  observePanes(callback) {\r\n    return this.paneContainer.observePanes(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback when the active pane changes.\r\n  //\r\n  // * `callback` {Function} to be called when the active pane changes.\r\n  //   * `pane` A {Pane} that is the current return value of {::getActivePane}.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidChangeActivePane(callback) {\r\n    return this.paneContainer.onDidChangeActivePane(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback with the current active pane and when\r\n  // the active pane changes.\r\n  //\r\n  // * `callback` {Function} to be called with the current and future active#\r\n  //   panes.\r\n  //   * `pane` A {Pane} that is the current return value of {::getActivePane}.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  observeActivePane(callback) {\r\n    return this.paneContainer.observeActivePane(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback when a pane item is added to the\r\n  // workspace center.\r\n  //\r\n  // * `callback` {Function} to be called when pane items are added.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `item` The added pane item.\r\n  //     * `pane` {Pane} containing the added item.\r\n  //     * `index` {Number} indicating the index of the added item in its pane.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.\r\n  onDidAddPaneItem(callback) {\r\n    return this.paneContainer.onDidAddPaneItem(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback when a pane item is about to be\r\n  // destroyed, before the user is prompted to save it.\r\n  //\r\n  // * `callback` {Function} to be called before pane items are destroyed.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `item` The item to be destroyed.\r\n  //     * `pane` {Pane} containing the item to be destroyed.\r\n  //     * `index` {Number} indicating the index of the item to be destroyed in\r\n  //       its pane.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose` can be called to unsubscribe.\r\n  onWillDestroyPaneItem(callback) {\r\n    return this.paneContainer.onWillDestroyPaneItem(callback);\r\n  }\r\n\r\n  // Extended: Invoke the given callback when a pane item is destroyed.\r\n  //\r\n  // * `callback` {Function} to be called when pane items are destroyed.\r\n  //   * `event` {Object} with the following keys:\r\n  //     * `item` The destroyed item.\r\n  //     * `pane` {Pane} containing the destroyed item.\r\n  //     * `index` {Number} indicating the index of the destroyed item in its\r\n  //       pane.\r\n  //\r\n  // Returns a {Disposable} on which `.dispose` can be called to unsubscribe.\r\n  onDidDestroyPaneItem(callback) {\r\n    return this.paneContainer.onDidDestroyPaneItem(callback);\r\n  }\r\n\r\n  /*\r\n  Section: Pane Items\r\n  */\r\n\r\n  // Essential: Get all pane items in the workspace center.\r\n  //\r\n  // Returns an {Array} of items.\r\n  getPaneItems() {\r\n    return this.paneContainer.getPaneItems();\r\n  }\r\n\r\n  // Essential: Get the active {Pane}'s active item.\r\n  //\r\n  // Returns an pane item {Object}.\r\n  getActivePaneItem() {\r\n    return this.paneContainer.getActivePaneItem();\r\n  }\r\n\r\n  // Save all pane items.\r\n  saveAll() {\r\n    this.paneContainer.saveAll();\r\n  }\r\n\r\n  confirmClose(options) {\r\n    return this.paneContainer.confirmClose(options);\r\n  }\r\n\r\n  /*\r\n  Section: Panes\r\n  */\r\n\r\n  // Extended: Get all panes in the workspace center.\r\n  //\r\n  // Returns an {Array} of {Pane}s.\r\n  getPanes(): Pane[] {\r\n    return this.paneContainer.getPanes();\r\n  }\r\n\r\n  // Extended: Get the active {Pane}.\r\n  //\r\n  // Returns a {Pane}.\r\n  getActivePane(): Pane {\r\n    return this.paneContainer.getActivePane();\r\n  }\r\n\r\n  // Extended: Make the next pane active.\r\n  activateNextPane() {\r\n    return this.paneContainer.activateNextPane();\r\n  }\r\n\r\n  // Extended: Make the previous pane active.\r\n  activatePreviousPane() {\r\n    return this.paneContainer.activatePreviousPane();\r\n  }\r\n\r\n  paneForURI(uri): Pane {\r\n    return this.paneContainer.paneForURI(uri);\r\n  }\r\n\r\n  paneForItem(item): Pane {\r\n    return this.paneContainer.paneForItem(item);\r\n  }\r\n\r\n  // Destroy (close) the active pane.\r\n  destroyActivePane() {\r\n    const activePane = this.getActivePane();\r\n    if (activePane != null) {\r\n      activePane.destroy();\r\n    }\r\n  }\r\n}\r\n","import { PanelContainer } from './panel-container';\r\nimport { Panel, PanelOptions } from './panel';\r\nimport { Dock } from './dock';\r\nimport { WorkspaceCenter } from './workspace-center';\r\nimport { ViewRegistry } from './view-registry';\r\nimport { PanelLocation } from './types';\r\nimport { PaneContainer } from './pane-container';\r\nimport { Pane } from './pane';\r\n\r\nexport interface PaneContainers {\r\n  center: WorkspaceCenter;\r\n  left: Dock;\r\n  right: Dock;\r\n  bottom: Dock;\r\n}\r\n\r\nexport interface PanelContainers {\r\n  // top: PanelContainer;\r\n  // left: PanelContainer;\r\n  // right: PanelContainer;\r\n  // bottom: PanelContainer;\r\n  // header: PanelContainer;\r\n  // footer: PanelContainer;\r\n  // modal: PanelContainer;\r\n  [location: string]: PanelContainer;\r\n}\r\nconst gsp: any = {};\r\nconst ALL_LOCATIONS = ['center', 'left', 'right', 'bottom'];\r\nexport class Workspace {\r\n  private paneContainers: PaneContainers;\r\n  private panelContainers: PanelContainers;\r\n  private activePaneContainer: Dock | WorkspaceCenter;\r\n  private viewRegistry: ViewRegistry;\r\n  private packageManager: any;\r\n  private openers: any[];\r\n  private frmOpeners: any[];\r\n  private useFrmOpener: boolean;\r\n  private notificationManager: any;\r\n  private config: any;\r\n  private destroyedItemURIs: any[];\r\n  private project: any;\r\n\r\n  constructor(params) {\r\n    this.initOptions(params);\r\n    this.initWorkspace();\r\n    this.openers = [];\r\n    this.frmOpeners = [];\r\n    this.useFrmOpener = false;\r\n    this.viewRegistry = params.viewRegistry;\r\n    // this.subscribeToEvents();\r\n  }\r\n\r\n  private initOptions(params) {\r\n    this.config = params.config || {};\r\n  }\r\n\r\n  private initWorkspace() {\r\n    // åå»ºå·¥ä½åºåé é¢æ¿å®¹å¨ã\r\n    this.paneContainers = {\r\n      // åå»ºä¸»åºåã\r\n      center: this.createCenter(),\r\n      // åå»ºå·¦ä¾§é¢æ¿ã\r\n      left: this.createDock('left'),\r\n      // åå»ºå³ä¾§é¢æ¿ã\r\n      right: this.createDock('right'),\r\n      // åå»ºåºé¨é¢æ¿ã\r\n      bottom: this.createDock('bottom')\r\n    };\r\n    this.activePaneContainer = this.paneContainers.center;\r\n    // åå»ºé¢æ¿å®¹å¨\r\n    this.panelContainers = {\r\n      top: new PanelContainer(this.viewRegistry, 'top'),\r\n      left: new PanelContainer(this.viewRegistry, 'left', this.paneContainers.left),\r\n      right: new PanelContainer(this.viewRegistry, 'right', this.paneContainers.right),\r\n      bottom: new PanelContainer(this.viewRegistry, 'bottom', this.paneContainers.bottom),\r\n      header: new PanelContainer(this.viewRegistry, 'header'),\r\n      footer: new PanelContainer(this.viewRegistry, 'footer'),\r\n      modal: new PanelContainer(this.viewRegistry, 'modal')\r\n    };\r\n  }\r\n\r\n  get paneContainer(): PaneContainer {\r\n    return this.paneContainers.center.paneContainer;\r\n  }\r\n  /**\r\n   * è¿åå·¥ä½åºåç´ \r\n   */\r\n  getElement() {\r\n  }\r\n  /**\r\n   * åå»ºä¸»é¢æ¿\r\n   */\r\n  createCenter() {\r\n    return new WorkspaceCenter({ viewRegistry: this.viewRegistry });\r\n  }\r\n  /**\r\n   * åå»ºåé é¢æ¿\r\n   * @param location åé é¢æ¿ä½ç½®\r\n   */\r\n  createDock(location) {\r\n    return new Dock({\r\n      location,\r\n      viewRegistry: this.viewRegistry\r\n    });\r\n  }\r\n  /**\r\n   * éç½®å·¥ä½åº\r\n   * @param packageManager åç®¡çå¨\r\n   */\r\n  reset(packageManager) {\r\n    this.packageManager = packageManager;\r\n\r\n    this.destroyed();\r\n\r\n    this.initWorkspace();\r\n  }\r\n\r\n  // Called by the Serializable mixin during serialization.\r\n  /**\r\n   * åºååå·¥ä½åºéç½®\r\n   */\r\n  serialize() {\r\n  }\r\n  /**\r\n   * ååºååå·¥ä½åºéç½®\r\n   * @param state state\r\n   * @param deserializerManager dm\r\n   */\r\n  deserialize(state, deserializerManager) {\r\n  }\r\n\r\n  // Updates the application's title and proxy icon based on whichever file is\r\n  // open.\r\n  updateWindowTitle() {\r\n\r\n  }\r\n\r\n  open(itemOrURI, options: any = {}) {\r\n    let uri, item;\r\n    if (typeof itemOrURI === 'string') {\r\n      uri = itemOrURI; // this.project.resolvePath(itemOrURI);\r\n    } else if (itemOrURI) {\r\n      item = itemOrURI;\r\n      if (typeof item.getURI === 'function') { uri = item.getURI(); }\r\n    }\r\n\r\n    if (!this.config.get('core.allowPendingPaneItems')) {\r\n      options.pending = false;\r\n    }\r\n\r\n    // Avoid adding URLs as recent documents to work-around this Spotlight crash:\r\n    // https://github.com/atom/atom/issues/10071\r\n    // if (uri && (!url.parse(uri).protocol || process.platform === 'win32')) {\r\n    //   this.applicationDelegate.addRecentDocument(uri);\r\n    // }\r\n\r\n    let pane, itemExistsInWorkspace;\r\n\r\n    // Try to find an existing item in the workspace.\r\n    if (item || uri) {\r\n      if (options.pane) {\r\n        pane = options.pane;\r\n      } else if (options.searchAllPanes) {\r\n        pane = item ? this.paneForItem(item) : this.paneForURI(uri);\r\n      } else {\r\n        // If an item with the given URI is already in the workspace, assume\r\n        // that item's pane container is the preferred location for that URI.\r\n        let container;\r\n        if (uri) { container = this.paneContainerForURI(uri); }\r\n        if (!container) { container = this.getActivePaneContainer(); }\r\n\r\n        // The `split` option affects where we search for the item.\r\n        pane = container.getActivePane();\r\n        switch (options.split) {\r\n          case 'left':\r\n            pane = pane.findLeftmostSibling();\r\n            break;\r\n          case 'right':\r\n            pane = pane.findRightmostSibling();\r\n            break;\r\n          case 'up':\r\n            pane = pane.findTopmostSibling();\r\n            break;\r\n          case 'down':\r\n            pane = pane.findBottommostSibling();\r\n            break;\r\n        }\r\n      }\r\n\r\n      if (pane) {\r\n        if (item) {\r\n          itemExistsInWorkspace = pane.getItems().includes(item);\r\n        } else {\r\n          item = pane.itemForURI(uri);\r\n          itemExistsInWorkspace = item != null;\r\n        }\r\n      }\r\n    }\r\n\r\n    // If we already have an item at this stage, we won't need to do an async\r\n    // lookup of the URI, so we yield the event loop to ensure this method\r\n    // is consistently asynchronous.\r\n    if (item) {\r\n      Promise.resolve();\r\n    }\r\n\r\n    if (!itemExistsInWorkspace) {\r\n      item = item || this.createItemForURI(uri, options);\r\n      if (!item) { return; }\r\n\r\n      if (options.pane) {\r\n        pane = options.pane;\r\n      } else {\r\n        let location = options.location;\r\n        // if (!location && !options.split && uri && this.enablePersistence) {\r\n        //   // location = await;\r\n        //   this.itemLocationStore.load(uri);\r\n        // }\r\n        if (!location && typeof item.getDefaultLocation === 'function') {\r\n          location = item.getDefaultLocation();\r\n        }\r\n\r\n        const allowedLocations = typeof item.getAllowedLocations === 'function' ? item.getAllowedLocations() : ALL_LOCATIONS;\r\n        location = allowedLocations.includes(location) ? location : allowedLocations[0];\r\n\r\n        const container = this.paneContainers[location] || this.getCenter();\r\n        pane = container.getActivePane();\r\n        switch (options.split) {\r\n          case 'left':\r\n            pane = pane.findLeftmostSibling();\r\n            break;\r\n          case 'right':\r\n            pane = pane.findOrCreateRightmostSibling();\r\n            break;\r\n          case 'up':\r\n            pane = pane.findTopmostSibling();\r\n            break;\r\n          case 'down':\r\n            pane = pane.findOrCreateBottommostSibling();\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!options.pending && (pane.getPendingItem() === item)) {\r\n      pane.clearPendingItem();\r\n    }\r\n\r\n    this.itemOpened(item);\r\n\r\n    if (options.activateItem === false) {\r\n      pane.addItem(item, { pending: options.pending });\r\n    } else {\r\n      pane.activateItem(item, { pending: options.pending });\r\n    }\r\n\r\n    if (options.activatePane !== false) {\r\n      pane.activate();\r\n    }\r\n\r\n    let initialColumn = 0;\r\n    let initialLine = 0;\r\n    if (!Number.isNaN(options.initialLine)) {\r\n      initialLine = options.initialLine;\r\n    }\r\n    if (!Number.isNaN(options.initialColumn)) {\r\n      initialColumn = options.initialColumn;\r\n    }\r\n    if (initialLine >= 0 || initialColumn >= 0) {\r\n      if (typeof item.setCursorBufferPosition === 'function') {\r\n        item.setCursorBufferPosition([initialLine, initialColumn]);\r\n      }\r\n    }\r\n\r\n    const index = pane.getActiveItemIndex();\r\n    return item;\r\n  }\r\n\r\n  hide(itemOrURI) {\r\n    let foundItems = false;\r\n\r\n    // If any visible item has the given URI, hide it\r\n    for (const container of this.getPaneContainers()) {\r\n      const isCenter = container === this.getCenter();\r\n      if (isCenter || (container as Dock).isVisible()) {\r\n        for (const pane of container.getPanes()) {\r\n          const activeItem = pane.getActiveItem();\r\n          const foundItem = (\r\n            activeItem != null && (\r\n              activeItem === itemOrURI ||\r\n              typeof activeItem.getURI === 'function' && activeItem.getURI() === itemOrURI\r\n            )\r\n          );\r\n          if (foundItem) {\r\n            foundItems = true;\r\n            // We can't really hide the center so we just destroy the item.\r\n            if (isCenter) {\r\n              pane.destroyItem(activeItem);\r\n            } else {\r\n              (container as Dock).hide();\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return foundItems;\r\n  }\r\n\r\n  toggle(itemOrURI) {\r\n    if (this.hide(itemOrURI)) {\r\n      return Promise.resolve();\r\n    } else {\r\n      return this.open(itemOrURI, { searchAllPanes: true });\r\n    }\r\n  }\r\n\r\n  openSync(fileUri = '', options = { initialColumn: '', initialLine: '', activateItem: '', activatePane: '' }) {\r\n    const { initialLine, initialColumn } = options;\r\n    const activatePane = options.activatePane != null ? options.activatePane : true;\r\n    const activateItem = options.activateItem != null ? options.activateItem : true;\r\n\r\n    const uri = fileUri; // this.project.resolvePath(uri_);\r\n    let item = this.getActivePane().itemForURI(uri);\r\n    if (uri && (item == null)) {\r\n      for (const opener of this.getOpeners()) {\r\n        item = opener(uri, options);\r\n        if (item) { break; }\r\n      }\r\n    }\r\n    if (item == null) {\r\n      item = this.project.openSync(uri, { initialLine, initialColumn });\r\n    }\r\n\r\n    if (activateItem) {\r\n      this.getActivePane().activateItem(item);\r\n    }\r\n    this.itemOpened(item);\r\n    if (activatePane) {\r\n      this.getActivePane().activate();\r\n    }\r\n    return item;\r\n  }\r\n\r\n  openURIInPane(uri, pane) {\r\n    return this.open(uri, { pane });\r\n  }\r\n\r\n  createItemForURI(uri, options) {\r\n    if (uri != null) {\r\n      for (const opener of this.getOpeners()) {\r\n        const item = opener(uri, options);\r\n        if (item != null) {\r\n          if (!item.getURI || typeof item.getURI !== 'function' || !item.getUri || typeof item.getURI !== 'function') {\r\n            item.getUri = () => uri;\r\n          }\r\n          return item;\r\n        }\r\n      }\r\n    }\r\n\r\n    try {\r\n      // return this.openTextFile(uri, options);\r\n    } catch (error) {\r\n      // switch (error.code) {\r\n      //   case 'CANCELLED':\r\n      //     return Promise.resolve();\r\n      //   case 'EACCES':\r\n      //     this.notificationManager.addWarning(`Permission denied '${error.path}'`);\r\n      //     return Promise.resolve();\r\n      //   case 'EPERM':\r\n      //   case 'EBUSY':\r\n      //   case 'ENXIO':\r\n      //   case 'EIO':\r\n      //   case 'ENOTCONN':\r\n      //   case 'UNKNOWN':\r\n      //   case 'ECONNRESET':\r\n      //   case 'EINVAL':\r\n      //   case 'EMFILE':\r\n      //   case 'ENOTDIR':\r\n      //   case 'EAGAIN':\r\n      //     this.notificationManager.addWarning(\r\n      //       `Unable to open '${error.path != null ? error.path : uri}'`,\r\n      //       { detail: error.message }\r\n      //     );\r\n      //     return Promise.resolve();\r\n      //   default:\r\n      //     throw error;\r\n      // }\r\n    }\r\n  }\r\n\r\n  reopenItem() {\r\n    const uri = this.destroyedItemURIs.pop();\r\n    if (uri) {\r\n      return this.open(uri);\r\n    } else {\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n  addOpener(opener) {\r\n    this.openers.push(opener);\r\n    // return new Disposable(() => { _.remove(this.openers, opener); });\r\n  }\r\n\r\n  addFrmOpener(opener) {\r\n    if (!this.useFrmOpener) {\r\n      this.useFrmOpener = true;\r\n    }\r\n    this.frmOpeners.push(opener);\r\n  }\r\n\r\n  getOpeners() {\r\n    return this.useFrmOpener ? this.frmOpeners : this.openers;\r\n  }\r\n\r\n  getPaneItems() {\r\n    return new Array().concat(this.getPaneContainers().map(container => container.getPaneItems()));\r\n  }\r\n\r\n  getActivePaneItem() {\r\n    return this.getActivePaneContainer().getActivePaneItem();\r\n  }\r\n\r\n  saveAll() {\r\n    this.getPaneContainers().forEach(container => {\r\n      container.saveAll();\r\n    });\r\n  }\r\n\r\n  confirmClose(options) {\r\n    return Promise.all(this.getPaneContainers().map(container =>\r\n      container.confirmClose(options)\r\n    )).then((results) => !results.find(item => item === false));\r\n  }\r\n\r\n  saveActivePaneItem() {\r\n    return this.getCenter().getActivePane().saveActiveItem();\r\n  }\r\n\r\n  saveActivePaneItemAs() {\r\n    this.getCenter().getActivePane().saveActiveItemAs();\r\n  }\r\n\r\n  destroyActivePaneItem() {\r\n    return this.getActivePane().destroyActiveItem();\r\n  }\r\n\r\n  getActivePaneContainer() {\r\n    return this.activePaneContainer;\r\n  }\r\n\r\n  getPanes() {\r\n    return new Array().concat(this.getPaneContainers().map(container => container.getPanes()));\r\n  }\r\n\r\n  getVisiblePanes() {\r\n    return new Array().concat(this.getVisiblePaneContainers().map(container => container.getPanes()));\r\n  }\r\n\r\n  getActivePane() {\r\n    return this.getActivePaneContainer().getActivePane();\r\n  }\r\n\r\n  activateNextPane() {\r\n    return this.getActivePaneContainer().activateNextPane();\r\n  }\r\n\r\n  activatePreviousPane() {\r\n    return this.getActivePaneContainer().activatePreviousPane();\r\n  }\r\n\r\n  paneContainerForURI(uri) {\r\n    return this.getPaneContainers().find(container => !!container.paneForURI(uri));\r\n  }\r\n\r\n  paneContainerForItem(uri) {\r\n    return this.getPaneContainers().find(container => !!container.paneForItem(uri));\r\n  }\r\n\r\n  paneForURI(uri): Pane {\r\n    for (const location of this.getPaneContainers()) {\r\n      const pane = location.paneForURI(uri);\r\n      if (pane != null) {\r\n        return pane;\r\n      }\r\n    }\r\n  }\r\n\r\n  paneForItem(item): Pane {\r\n    for (const location of this.getPaneContainers()) {\r\n      const pane = location.paneForItem(item);\r\n      if (pane != null) {\r\n        return pane;\r\n      }\r\n    }\r\n  }\r\n\r\n  destroyActivePane() {\r\n    const activePane = this.getActivePane();\r\n    if (activePane != null) {\r\n      activePane.destroy();\r\n    }\r\n  }\r\n\r\n\r\n  closeActivePaneItemOrEmptyPaneOrWindow() {\r\n    if (this.getCenter().getActivePaneItem() != null) {\r\n      this.getCenter().getActivePane().destroyActiveItem();\r\n    } else if (this.getCenter().getPanes().length > 1) {\r\n      this.getCenter().destroyActivePane();\r\n    } else if (this.config.get('core.closeEmptyWindows')) {\r\n      // åä¸ºå³é­atomåºç¨çªå£ãideä¸­æä¸å³é­æ´ä¸ªçªå£ã\r\n      // atom.close();\r\n    }\r\n  }\r\n\r\n  itemOpened(item) {\r\n  }\r\n\r\n\r\n  destroyed() {\r\n    this.paneContainers.center.destroy();\r\n    this.paneContainers.left.destroy();\r\n    this.paneContainers.right.destroy();\r\n    this.paneContainers.bottom.destroy();\r\n\r\n    for (const panelLocation in this.panelContainers) {\r\n      if (this.panelContainers.hasOwnProperty(panelLocation)) {\r\n        const panelContainer = this.panelContainers[panelLocation];\r\n        this.paneContainer.destroy();\r\n      }\r\n    }\r\n  }\r\n\r\n  getCenter(): WorkspaceCenter {\r\n    return this.paneContainers.center;\r\n  }\r\n\r\n  getLeftDock() {\r\n    return this.paneContainers.left;\r\n  }\r\n\r\n  getRightDock() {\r\n    return this.paneContainers.right;\r\n  }\r\n\r\n  getBottomDock() {\r\n    return this.paneContainers.bottom;\r\n  }\r\n\r\n  getPaneContainers() {\r\n    return [\r\n      this.paneContainers.center,\r\n      this.paneContainers.left,\r\n      this.paneContainers.right,\r\n      this.paneContainers.bottom\r\n    ];\r\n  }\r\n\r\n  getVisiblePaneContainers() {\r\n    const center = this.getCenter();\r\n    return this.getPaneContainers()\r\n      .filter(container => container === center || (container as Dock).isVisible());\r\n  }\r\n\r\n  getBottomPanels() {\r\n    return this.getPanels('bottom');\r\n  }\r\n\r\n  addBottomPanel(options: PanelOptions): Panel {\r\n    return this.addPanel('bottom', options);\r\n  }\r\n\r\n  getLeftPanels() {\r\n    return this.getPanels('left');\r\n  }\r\n\r\n  addLeftPanel(options: PanelOptions): Panel {\r\n    return this.addPanel('left', options);\r\n  }\r\n\r\n  getRightPanels() {\r\n    return this.getPanels('right');\r\n  }\r\n\r\n  addRightPanel(options: PanelOptions): Panel {\r\n    return this.addPanel('right', options);\r\n  }\r\n\r\n  getTopPanels() {\r\n    return this.getPanels('top');\r\n  }\r\n\r\n  addTopPanel(options: PanelOptions): Panel {\r\n    return this.addPanel('top', options);\r\n  }\r\n\r\n  getHeaderPanels() {\r\n    return this.getPanels('header');\r\n  }\r\n\r\n  addHeaderPanel(options: PanelOptions): Panel {\r\n    return this.addPanel('header', options);\r\n  }\r\n\r\n  getFooterPanels() {\r\n    return this.getPanels('footer');\r\n  }\r\n\r\n  addFooterPanel(options: PanelOptions): Panel {\r\n    return this.addPanel('footer', options);\r\n  }\r\n\r\n  getModalPanels() {\r\n    return this.getPanels('modal');\r\n  }\r\n\r\n  addModalPanel(options: PanelOptions): Panel {\r\n    return this.addPanel('modal', options);\r\n  }\r\n\r\n  panelForItem(item): Panel {\r\n    for (const location in this.panelContainers) {\r\n      if (this.panelContainers.hasOwnProperty(location)) {\r\n        const panel = this.panelContainers[location].panelForItem(item);\r\n        if (panel != null) {\r\n          return panel;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getPanelContainer(location: PanelLocation): PanelContainer {\r\n    return this.panelContainers[location];\r\n  }\r\n\r\n  getPanels(location: PanelLocation): Panel[] {\r\n    return this.panelContainers[location].getPanels();\r\n  }\r\n\r\n  addPanel(location: PanelLocation, options: PanelOptions): Panel {\r\n    const panel = new Panel(options, this.viewRegistry);\r\n    return this.panelContainers[location].addPanel(panel);\r\n  }\r\n}\r\n","import { EventBus, IDisposable } from '../eventbus';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Type } from '@angular/core';\r\n\r\nexport class GspEventBus extends EventBus {\r\n  private commands: any[] = [];\r\n\r\n  on(target: string, tokenValue: string, eventName: string, caller: object, handler: (value: any) => void) {\r\n    // å¦ææå¯¹åºæ¿æ´»å½ä»¤ï¼çå¬äºä»¶æ¶ç«å³æ§è¡åè°å½æ°\r\n    const command = this.commands.find(item => item.name === eventName);\r\n    if (command) {\r\n      handler.call(caller, command.eventeParams);\r\n    }\r\n    return super.on(target, tokenValue, eventName, caller, handler);\r\n  }\r\n\r\n  post(emitterType: Type<any> | string, tokenValue: string, eventName: string, eventArgs: any): void {\r\n    this.dispatchCommand(eventName, eventArgs);\r\n    super.post(emitterType, tokenValue, eventName, eventArgs);\r\n  }\r\n\r\n  registryActivateCommand(commandName: string, plugin: any, activateFn: (arg0: any) => void) {\r\n    this.commands.push({\r\n      name: commandName,\r\n      plugin,\r\n      activateFn\r\n    });\r\n  }\r\n\r\n  private dispatchCommand(commandName: string, args: any) {\r\n    const command = this.commands.find(item => item.name === commandName);\r\n    if (command) {\r\n      command.activateFn(command.plugin);\r\n      command.eventParams = args;\r\n    }\r\n  }\r\n}\r\n","export class ModalFrm {\r\n\r\n  add(options: any) {\r\n\r\n  }\r\n\r\n  show(id: string) {\r\n\r\n  }\r\n\r\n  hide(id: string) {\r\n\r\n  }\r\n\r\n  close(id: string) {\r\n    \r\n  }\r\n}\r\n","import { Messager } from './messager';\r\nimport { ModalFrm } from './modal-frm';\r\nimport { NotifyOptions } from '@farris/ui-notify';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n\r\n/**\r\n * æä¾ideè¿è¡æéçæ¹æ³ï¼ä¾æä»¶ä½¿ç¨\r\n */\r\n\r\nexport class Ide {\r\n  private frameId: string;\r\n  private events: Map<string, any[]>;\r\n  private modal: ModalFrm;\r\n  private commandData: Map<string, any>;\r\n  private msgr: Messager;\r\n  private get isTop(): boolean {\r\n    return window.top === window;\r\n  }\r\n  private get parentInstance() {\r\n    let instance = this;\r\n    const top = window.top;\r\n    if (top && top['gsp']) {\r\n      instance = top['gsp'].ide;\r\n    }\r\n    return instance;\r\n  }\r\n\r\n  get messager(): Messager {\r\n    return this.msgr;\r\n  }\r\n\r\n  constructor(parent?: Ide) {\r\n    this.events = new Map<string, any[]>();\r\n    this.modal = new ModalFrm();\r\n    this.frameId = this.getParam('frameID');\r\n    if (this.isTop) {\r\n      this.commandData = new Map<string, any>();\r\n    }\r\n    if (parent) {\r\n      this.msgr =  parent.messager;\r\n    }\r\n  }\r\n\r\n  /* #region  frame util */\r\n  getParam(key: string) {\r\n    const params = new URLSearchParams(window.location.search);\r\n    return unescape(params.get(key));\r\n  }\r\n\r\n  getInitCommandData(frameId?: string): any {\r\n    if (!this.isTop) {\r\n      frameId = frameId || this.frameId;\r\n      return this.parentInstance.getInitCommandData(frameId);\r\n    } else {\r\n      return this.commandData.get(frameId);\r\n    }\r\n  }\r\n\r\n  setInitCommandData(frameId: string, data: any) {\r\n    if (!this.isTop) {\r\n      this.parentInstance.setInitCommandData(frameId, data);\r\n    } else {\r\n      this.commandData.set(frameId, data);\r\n    }\r\n  }\r\n\r\n  setMessager(messager: Messager) {\r\n    this.msgr = messager;\r\n  }\r\n  /* #endregion */\r\n\r\n  /* #region  event */\r\n  onPanelAdded(cb: (options: any, location?: string) => any) {\r\n    this.on('panel-added', cb);\r\n  }\r\n\r\n  onPanelRemoved(cb: (id: string, lacation: string) => any) {\r\n    this.on('panel-removed', cb);\r\n  }\r\n\r\n  onPanelShown(cb: (id: string) => any) {\r\n    this.on('panel-shown', cb);\r\n  }\r\n\r\n  onPanelHidden(cb: (id: string) => any) {\r\n    this.on('panel-hidden', cb);\r\n  }\r\n\r\n  onModalConfirming(cb: (id: string) => boolean) {\r\n    if (this.parentInstance !== this) {\r\n      this.parentInstance.onModalConfirming(cb);\r\n    } else {\r\n      this.on('confirm-modal', cb);\r\n    }\r\n  }\r\n\r\n  onModalCancelling(cb: (id: string) => boolean) {\r\n    this.on('cancel-modal', cb);\r\n  }\r\n\r\n  onLeftActivated(cb: (id: string) => any) {\r\n    if (this.isTop) {\r\n      this.on('activate-left', cb);\r\n    } else {\r\n      this.parentInstance.onLeftActivated(cb);\r\n    }\r\n  }\r\n\r\n  onNotifyShown(cb: (level: 'error' | 'warning' | 'info', content: string | NotifyOptions) => any) {\r\n    this.on('show-notify', cb);\r\n  }\r\n\r\n  onLoadingShown(cb: (message?: string) => any) {\r\n    this.on('show-loading', cb);\r\n  }\r\n\r\n  onLoadingHidden(cb: () => any) {\r\n    this.on('hide-loading', cb);\r\n  }\r\n\r\n  onDesignerStatusSet(cb: (args) => any) {\r\n    this.on('set-designer-status', cb);\r\n  }\r\n\r\n  // onBeforeClose(id: string, cb: () => boolean) {\r\n  //   this.on('on-before-close', ({metadataId}) => {\r\n  //     if (id === metadataId) {\r\n  //       return cb();\r\n  //     }\r\n  //     return true;\r\n  //   });\r\n  // }\r\n\r\n  onCloseTab(id: string, cb: () => boolean | Observable<boolean>) {\r\n    if (!this.isTop) {\r\n      return this.parentInstance.onCloseTab(id, cb);\r\n    }\r\n    this.on('close-tab', tabId => {\r\n      if (id === tabId) {\r\n        return cb();\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n  /* #endregion */\r\n\r\n\r\n  /* #region  panel */\r\n  addPanel(options: any) {\r\n    this.emit('panel-added', options);\r\n  }\r\n  /* #endregion */\r\n\r\n  /* #region  modal */\r\n  addModal(options: any) {\r\n    this.emit('panel-added', options, 'modal');\r\n  }\r\n\r\n  closeModal(id?: string) {\r\n    if (this.parentInstance !== this) {\r\n      this.parentInstance.closeModal(id);\r\n    }\r\n    this.emit('panel-removed', id, 'modal');\r\n  }\r\n\r\n  confirmModal(id: string): boolean {\r\n    let result = true;\r\n    // if (this.parentInstance !== this) {\r\n    //   result = this.parentInstance.confirmModal(id);\r\n    // }\r\n    result = result && this.emit('confirm-modal', id) as boolean;\r\n    return result;\r\n  }\r\n\r\n  cancelModal(id: string): boolean {\r\n    let result = true;\r\n    if (this.parentInstance !== this) {\r\n      result = this.parentInstance.cancelModal(id);\r\n    }\r\n    result = result && this.emit('cancel-modal', id) as boolean;\r\n    return result;\r\n  }\r\n\r\n  // addLeft    registryOpener....\r\n  /* #endregion */\r\n\r\n  /* #region  left rigion */\r\n\r\n  activateLeft(frameId?: string) {\r\n    frameId = frameId || this.frameId;\r\n    if (this.isTop) {\r\n      this.emit('activate-left', frameId);\r\n    } else {\r\n      this.parentInstance.activateLeft(frameId);\r\n    }\r\n  }\r\n  /* #endregion */\r\n\r\n  notify(level: 'error' | 'warning' | 'info', content: string | NotifyOptions) {\r\n    if (this.isTop) {\r\n      this.emit('show-notify', level, content);\r\n    } else {\r\n      this.parentInstance.notify(level, content);\r\n    }\r\n  }\r\n\r\n  loading(message?: string): void {\r\n    if (this.isTop) {\r\n      this.emit('show-loading', message);\r\n    } else {\r\n      this.parentInstance.loading(message);\r\n    }\r\n  }\r\n\r\n  loaded(): void {\r\n    if (this.isTop) {\r\n      this.emit('hide-loading');\r\n    } else {\r\n      this.parentInstance.loaded();\r\n    }\r\n  }\r\n\r\n  setDesignerStatus(metadataId: string, isDirty: boolean) {\r\n    if (this.isTop) {\r\n      this.emit('set-designer-status', {id: metadataId, isDirty});\r\n    } else {\r\n      this.parentInstance.setDesignerStatus(metadataId, isDirty);\r\n    }\r\n  }\r\n\r\n  // closeDesigner(metadataId: string) {\r\n  //   if (this.isTop) {\r\n  //     this.emit('close-designer', {id: metadataId});\r\n  //   } else {\r\n  //     this.parentInstance.closeDesigner(metadataId);\r\n  //   }\r\n  // }\r\n\r\n  notifyCloseTab(id: string): Observable<boolean> {\r\n    if (!this.isTop) {\r\n      return this.parentInstance.notifyCloseTab(id);\r\n    }\r\n\r\n    const result = this.emit('close-tab', id);\r\n    if (result == null) {\r\n      return of(true);\r\n    } else if (typeof result === 'boolean') {\r\n      return of (result);\r\n    } else {\r\n      return result;\r\n    }\r\n  }\r\n\r\n  registerIDE(workspace: any) {\r\n    // ç¨æ¥æide viewå®ä¾ä¸gspå¯¹è±¡ç»å®ã\r\n    // TODOï¼ viewå®ä¾çå¬gspå¯¹è±¡çæä½æ¾å¨è¿éã\r\n\r\n    if (typeof workspace.onCloseDesigner === 'function') {\r\n      this.on('close-designer', workspace.onCloseDesigner.bind(workspace));\r\n    }\r\n  }\r\n\r\n  /* #region  private method */\r\n  private on(name: string, cb: any) {\r\n    let callbacks = this.events.get(name);\r\n    if (!callbacks) {\r\n      callbacks = [cb];\r\n      this.events.set(name, callbacks);\r\n    } else {\r\n      callbacks.push(cb);\r\n    }\r\n  }\r\n\r\n  private emit(name: string, ...params: any[]): boolean | Observable<boolean> {\r\n    const callbacks = this.events.get(name);\r\n\r\n    if (!callbacks || !callbacks.length) { return; }\r\n\r\n    let result = true;\r\n    const observableResult = new Array<Observable<boolean>>(); // åæ¶æ¯æè¿åbooleanåObservable\r\n    for (const cb of callbacks) {\r\n      const cbResult = cb(...params);\r\n      if (cbResult == null) {\r\n        continue;\r\n      }\r\n      if (typeof cbResult === 'boolean') {\r\n        result = result && cbResult;\r\n      } else if (typeof cbResult.subscribe === 'function' && cbResult.constructor.name === Observable.name) {\r\n        // å¤æ­æ¡ä»¶ä¸è½ä½¿ç¨cbResult instanceof Observable,å ä¸ºcbå¯è½æ¯æ¥èªäºä¸åçiframeç¯å¢ï¼å¯¼è´è·è¿éçObservableæé å½æ°ä¸ä¸æ ·ã\r\n        observableResult.push(cbResult);\r\n      }\r\n    }\r\n\r\n    if (observableResult.length) {\r\n      return forkJoin([...observableResult, of(result)]).pipe(map(results => {\r\n        return results.reduce((previous, current) => previous && current);\r\n      }));\r\n    } else {\r\n      return result;\r\n    }\r\n\r\n  }\r\n  /* #endregion */\r\n}\r\n\r\n","import { CacheService } from './../../services/cache/services/cache.service';\r\nimport { CommandRegistry } from './command-registry';\r\nimport { EventBus } from '../eventbus/event-bus';\r\nimport { Util } from '../util/util';\r\nimport { ViewRegistry } from './view-registry';\r\nimport { Workspace } from './workspace';\r\nimport { GspEventBus } from './gsp-event-bus';\r\nimport { Ide } from './ide/ide';\r\nimport { ContextManager } from './context/context';\r\n\r\nexport class GSP {\r\n  private pEventBus: EventBus;\r\n  private pUtil: Util;\r\n  private pWorkspace: Workspace;\r\n  private pConfig: any;\r\n  private pViews: ViewRegistry;\r\n  private pCommands: CommandRegistry;\r\n  private pIde: Ide;\r\n  private pCache: CacheService;\r\n  private pContext: ContextManager;\r\n\r\n  get eventBus(): EventBus { return this.pEventBus; }\r\n  get util(): Util { return this.pUtil; }\r\n  get workspace(): Workspace { return this.pWorkspace; }\r\n  get views(): ViewRegistry { return this.pViews; }\r\n  get commands(): CommandRegistry { return this.pCommands; }\r\n  get ide(): Ide { return this.pIde; }\r\n  get cache(): CacheService { return this.pCache; }\r\n  get context(): ContextManager { return this.pContext; }\r\n\r\n  constructor(parent?: GSP) {\r\n    this.pConfig = {\r\n      get(key) {\r\n        return this[key];\r\n      }\r\n    };\r\n    let ide: Ide;\r\n    if (parent) {\r\n      this.pViews = parent.views;\r\n      this.pCommands = parent.commands;\r\n      this.pEventBus = parent.eventBus;\r\n      this.pUtil = parent.util;\r\n      this.pWorkspace = parent.workspace;\r\n      this.pCache = parent.cache;\r\n      ide = parent.ide;\r\n      const ctor: any = parent.context.constructor;\r\n      this.pContext = new ctor();\r\n    } else {\r\n      this.pViews = new ViewRegistry(this);\r\n      this.pCommands = new CommandRegistry();\r\n      this.pEventBus = new GspEventBus();\r\n      this.pUtil = new Util();\r\n      this.pWorkspace = new Workspace({\r\n        config: this.pConfig,\r\n        viewRegistry: this.pViews\r\n      });\r\n      this.pCache = new CacheService(null);\r\n    }\r\n    this.pIde = new Ide(ide);\r\n  }\r\n\r\n  /**\r\n   * @deprecated ç±å­æ¨¡åç¬èªåå»ºgspå®ä¾ï¼ä¼ å¥ç¶å®ä¾ä½ä¸ºåæ°ã\r\n   * æ¯ä¸ªiframeææä¸ä¸ªç¬æçgspå®ä¾ï¼å¶ä¸­eventbuså±äº«ï¼ideä¸å±äº«\r\n   */\r\n  createChild() {\r\n    const child = new GSP(this);\r\n    // child.pEventBus = this.pEventBus;\r\n    // child.pViews = this.pViews;\r\n    // child.pWorkspace = this.pWorkspace;\r\n    return child;\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nexport class Messager {\r\n  info(message: string, callback?: () => void): void {\r\n\r\n  }\r\n\r\n  question(message: string, okCallback: () => void, cancelCallback?: () => void): void {\r\n\r\n  }\r\n\r\n  confirm(message: string): Observable<boolean> {\r\n    return null;\r\n  }\r\n\r\n  error(message: string): void {\r\n\r\n  }\r\n\r\n  warning(message: string): void {\r\n\r\n  }\r\n}\r\n","import { ComponentRef } from '@angular/core';\r\n\r\nexport class PackageView {\r\n  protected element: ComponentRef<any>;\r\n\r\n  constructor(serializedState: any) {\r\n\r\n  }\r\n\r\n  getElement() {\r\n    return this.element;\r\n  }\r\n\r\n  /**\r\n   * Returns an object that can be retrieved when package is activated.\r\n   */\r\n  serialize() { }\r\n\r\n  destroy() {\r\n  }\r\n}\r\n","import { Type } from '@angular/core';\r\nimport { GSP } from '../gsp/gsp';\r\nimport { PackageView } from './package-view';\r\n\r\nexport class Package {\r\n  protected packageView: PackageView;\r\n  // leftPanel: any;\r\n  // modelPanel: any;\r\n  protected subscriptions: any = [];\r\n  protected packageId: string;\r\n  public data: any;\r\n\r\n  get id(): string {\r\n    return this.packageId;\r\n  }\r\n  set id(value: string) {\r\n    this.packageId = value;\r\n  }\r\n\r\n  get view(): PackageView {\r\n    return this.packageView;\r\n  }\r\n\r\n  constructor(protected gsp: GSP) {\r\n    this.packageId = gsp.util.newGuid();\r\n  }\r\n\r\n  activate(state) {\r\n    this.packageView = new PackageView(state.sagipackageViewState);\r\n    // /*this.leftPanel = */this.ws.addLeftPanel({\r\n    //   title: 'test',\r\n    //   item: this.packageView.getComponent(),\r\n    //   visible: false\r\n    // });\r\n  }\r\n\r\n  initialize() { }\r\n\r\n  deactivate() {\r\n    this.packageView.destroy();\r\n  }\r\n\r\n  serialize(): any {\r\n    return {\r\n      sagipackageViewState: this.packageView.serialize()\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    // return (\r\n    //   this.modelPanel.isVisible() ?\r\n    //     this.modelPanel.hide() :\r\n    //     this.modelPanel.show()\r\n    // );\r\n  }\r\n\r\n  getComponent(): Type<any> {\r\n    return null;\r\n  }\r\n}\r\n","import { GSP } from '../gsp/gsp';\r\nimport { Package } from './package';\r\n\r\n\r\nexport class PackageModule {\r\n\r\n  protected package: Package;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  getPackage(gsp: GSP) {\r\n    if (!this.package) {\r\n      this.initPackage(gsp);\r\n      // ng7åçº§åï¼æä»¶åæ¯iframeçå½¢å¼ï¼åå§åæ¹å¼æ¹åã\r\n      if (this.package) {\r\n        this.package.initialize();\r\n      }\r\n    }\r\n    return this.package;\r\n  }\r\n\r\n  protected initPackage(gsp: GSP) {\r\n    this.package = new Package(gsp);\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CacheLocalStorage } from './services/storage/localstorage/cache.localstorage.service';\r\nimport { CacheMemoryStorage } from './services/storage/memory/cache.memory.service';\r\nimport { CacheSessionStorage } from './services/storage/sessionstorage/cache.sessionstorage.service';\r\nimport { CacheService } from './services/cache.service';\r\n\r\n@NgModule({\r\n  declarations: []\r\n})\r\nexport class CacheModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: CacheModule,\r\n      providers: [\r\n        CacheLocalStorage,\r\n        CacheMemoryStorage,\r\n        CacheSessionStorage,\r\n        CacheService\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CacheService } from '../cache/services/cache.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n  constructor(private http: HttpClient, private cache: CacheService) {\r\n  }\r\n\r\n  get(url: string): Observable<any> {\r\n    return this.request('Get', url, this.setHeader({}));\r\n  }\r\n\r\n  post(url: string, body: any): Observable<any> {\r\n    return this.request('Post', url, this.setHeader({body}));\r\n  }\r\n  put(url: string, body: any): Observable<any> {\r\n    return this.request('Put', url, this.setHeader({body}));\r\n  }\r\n  delete(url: string, body: any): Observable<any> {\r\n    return this.request('Delete', url, this.setHeader({body}));\r\n  }\r\n  patch(url: string, body: any): Observable<any> {\r\n    return this.request('Patch', url, this.setHeader({body}));\r\n  }\r\n\r\n  setHeader(options: any) {\r\n\r\n    options.headers = {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*'\r\n    };\r\n    if (this.cache.exists('sessionId') && this.cache.get('sessionId')) {\r\n      options.headers['SessionId'] = this.cache.get('sessionId');\r\n    }\r\n    return options;\r\n  }\r\n  request(method: string, url: string, options: any): Observable<any> {\r\n    if (options.body) {\r\n      if (typeof options.body !== 'string') {\r\n        options.body = JSON.stringify(options.body);\r\n      }\r\n    }\r\n\r\n\r\n    return this.http.request(method, url, options)\r\n      .pipe(map((data) => {\r\n        console.log(data);\r\n        return data;\r\n      }));\r\n  }\r\n}\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    HttpClientModule\r\n  ],\r\n  providers: [ HttpService ]\r\n})\r\nexport class GSPHttpModule {\r\n\r\n}\r\n"]}