/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
var ModalOptions = /** @class */ (function () {
    function ModalOptions() {
    }
    ModalOptions.decorators = [
        { type: Injectable }
    ];
    return ModalOptions;
}());
export { ModalOptions };
if (false) {
    /**
     *  Includes a modal-backdrop element. Alternatively,
     *  specify static for a backdrop which doesn't close the modal on click.
     * @type {?}
     */
    ModalOptions.prototype.backdrop;
    /**
     * Closes the modal when escape key is pressed.
     * @type {?}
     */
    ModalOptions.prototype.keyboard;
    /** @type {?} */
    ModalOptions.prototype.focus;
    /**
     * Shows the modal when initialized.
     * @type {?}
     */
    ModalOptions.prototype.show;
    /**
     * Ignore the backdrop click
     * @type {?}
     */
    ModalOptions.prototype.ignoreBackdropClick;
    /**
     * Css class for opened modal
     * @type {?}
     */
    ModalOptions.prototype.class;
    /**
     * Toggle animation
     * @type {?}
     */
    ModalOptions.prototype.animated;
    /**
     * Modal data
     * @type {?}
     */
    ModalOptions.prototype.initialState;
}
/** @type {?} */
export var modalConfigDefaults = {
    backdrop: true,
    keyboard: true,
    focus: true,
    show: false,
    ignoreBackdropClick: false,
    class: '',
    animated: true,
    initialState: {}
};
/** @type {?} */
export var CLASS_NAME = {
    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',
    BACKDROP: 'modal-backdrop',
    OPEN: 'modal-open',
    FADE: 'fade',
    IN: 'in',
    // bs3
    SHOW: 'show' // bs4
};
/** @type {?} */
export var SELECTOR = {
    DIALOG: '.modal-dialog',
    DATA_TOGGLE: '[data-toggle="modal"]',
    DATA_DISMISS: '[data-dismiss="modal"]',
    FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'
};
/** @type {?} */
export var TRANSITION_DURATIONS = {
    MODAL: 300,
    BACKDROP: 150
};
/** @type {?} */
export var DISMISS_REASONS = {
    BACKRDOP: 'backdrop-click',
    ESC: 'esc'
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtb3B0aW9ucy5jbGFzcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvaWRlLWRldmtpdC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL21vZGFsL21vZGFsLW9wdGlvbnMuY2xhc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0M7SUFBQTtJQWlDQSxDQUFDOztnQkFqQ0EsVUFBVTs7SUFpQ1gsbUJBQUM7Q0FBQSxBQWpDRCxJQWlDQztTQWhDWSxZQUFZOzs7Ozs7O0lBS3ZCLGdDQUE4Qjs7Ozs7SUFJOUIsZ0NBQW1COztJQUVuQiw2QkFBZ0I7Ozs7O0lBSWhCLDRCQUFlOzs7OztJQUlmLDJDQUE4Qjs7Ozs7SUFJOUIsNkJBQWU7Ozs7O0lBSWYsZ0NBQW1COzs7OztJQUluQixvQ0FBc0I7OztBQUl4QixNQUFNLEtBQU8sbUJBQW1CLEdBQWlCO0lBQy9DLFFBQVEsRUFBRSxJQUFJO0lBQ2QsUUFBUSxFQUFFLElBQUk7SUFDZCxLQUFLLEVBQUUsSUFBSTtJQUNYLElBQUksRUFBRSxLQUFLO0lBQ1gsbUJBQW1CLEVBQUUsS0FBSztJQUMxQixLQUFLLEVBQUUsRUFBRTtJQUNULFFBQVEsRUFBRSxJQUFJO0lBQ2QsWUFBWSxFQUFFLEVBQUU7Q0FDakI7O0FBRUQsTUFBTSxLQUFPLFVBQVUsR0FBUTtJQUM3QixrQkFBa0IsRUFBRSx5QkFBeUI7SUFDN0MsUUFBUSxFQUFFLGdCQUFnQjtJQUMxQixJQUFJLEVBQUUsWUFBWTtJQUNsQixJQUFJLEVBQUUsTUFBTTtJQUNaLEVBQUUsRUFBRSxJQUFJOztJQUNSLElBQUksRUFBRSxNQUFNLENBQUMsTUFBTTtDQUNwQjs7QUFFRCxNQUFNLEtBQU8sUUFBUSxHQUFRO0lBQzNCLE1BQU0sRUFBRSxlQUFlO0lBQ3ZCLFdBQVcsRUFBRSx1QkFBdUI7SUFDcEMsWUFBWSxFQUFFLHdCQUF3QjtJQUN0QyxhQUFhLEVBQUUsb0RBQW9EO0NBQ3BFOztBQUVELE1BQU0sS0FBTyxvQkFBb0IsR0FBUTtJQUN2QyxLQUFLLEVBQUUsR0FBRztJQUNWLFFBQVEsRUFBRSxHQUFHO0NBQ2Q7O0FBRUQsTUFBTSxLQUFPLGVBQWUsR0FBRztJQUM3QixRQUFRLEVBQUUsZ0JBQWdCO0lBQzFCLEdBQUcsRUFBRSxLQUFLO0NBQ1giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBNb2RhbE9wdGlvbnMge1xyXG4gIC8qKlxyXG4gICAqICBJbmNsdWRlcyBhIG1vZGFsLWJhY2tkcm9wIGVsZW1lbnQuIEFsdGVybmF0aXZlbHksXHJcbiAgICogIHNwZWNpZnkgc3RhdGljIGZvciBhIGJhY2tkcm9wIHdoaWNoIGRvZXNuJ3QgY2xvc2UgdGhlIG1vZGFsIG9uIGNsaWNrLlxyXG4gICAqL1xyXG4gIGJhY2tkcm9wPzogYm9vbGVhbiB8ICdzdGF0aWMnO1xyXG4gIC8qKlxyXG4gICAqIENsb3NlcyB0aGUgbW9kYWwgd2hlbiBlc2NhcGUga2V5IGlzIHByZXNzZWQuXHJcbiAgICovXHJcbiAga2V5Ym9hcmQ/OiBib29sZWFuO1xyXG5cclxuICBmb2N1cz86IGJvb2xlYW47XHJcbiAgLyoqXHJcbiAgICogU2hvd3MgdGhlIG1vZGFsIHdoZW4gaW5pdGlhbGl6ZWQuXHJcbiAgICovXHJcbiAgc2hvdz86IGJvb2xlYW47XHJcbiAgLyoqXHJcbiAgICogSWdub3JlIHRoZSBiYWNrZHJvcCBjbGlja1xyXG4gICAqL1xyXG4gIGlnbm9yZUJhY2tkcm9wQ2xpY2s/OiBib29sZWFuO1xyXG4gIC8qKlxyXG4gICAqIENzcyBjbGFzcyBmb3Igb3BlbmVkIG1vZGFsXHJcbiAgICovXHJcbiAgY2xhc3M/OiBzdHJpbmc7XHJcbiAgLyoqXHJcbiAgICogVG9nZ2xlIGFuaW1hdGlvblxyXG4gICAqL1xyXG4gIGFuaW1hdGVkPzogYm9vbGVhbjtcclxuICAvKipcclxuICAgKiBNb2RhbCBkYXRhXHJcbiAgICovXHJcbiAgaW5pdGlhbFN0YXRlPzogT2JqZWN0O1xyXG59XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IG1vZGFsQ29uZmlnRGVmYXVsdHM6IE1vZGFsT3B0aW9ucyA9IHtcclxuICBiYWNrZHJvcDogdHJ1ZSxcclxuICBrZXlib2FyZDogdHJ1ZSxcclxuICBmb2N1czogdHJ1ZSxcclxuICBzaG93OiBmYWxzZSxcclxuICBpZ25vcmVCYWNrZHJvcENsaWNrOiBmYWxzZSxcclxuICBjbGFzczogJycsXHJcbiAgYW5pbWF0ZWQ6IHRydWUsXHJcbiAgaW5pdGlhbFN0YXRlOiB7fVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IENMQVNTX05BTUU6IGFueSA9IHtcclxuICBTQ1JPTExCQVJfTUVBU1VSRVI6ICdtb2RhbC1zY3JvbGxiYXItbWVhc3VyZScsXHJcbiAgQkFDS0RST1A6ICdtb2RhbC1iYWNrZHJvcCcsXHJcbiAgT1BFTjogJ21vZGFsLW9wZW4nLFxyXG4gIEZBREU6ICdmYWRlJyxcclxuICBJTjogJ2luJywgLy8gYnMzXHJcbiAgU0hPVzogJ3Nob3cnIC8vIGJzNFxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFNFTEVDVE9SOiBhbnkgPSB7XHJcbiAgRElBTE9HOiAnLm1vZGFsLWRpYWxvZycsXHJcbiAgREFUQV9UT0dHTEU6ICdbZGF0YS10b2dnbGU9XCJtb2RhbFwiXScsXHJcbiAgREFUQV9ESVNNSVNTOiAnW2RhdGEtZGlzbWlzcz1cIm1vZGFsXCJdJyxcclxuICBGSVhFRF9DT05URU5UOiAnLm5hdmJhci1maXhlZC10b3AsIC5uYXZiYXItZml4ZWQtYm90dG9tLCAuaXMtZml4ZWQnXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgVFJBTlNJVElPTl9EVVJBVElPTlM6IGFueSA9IHtcclxuICBNT0RBTDogMzAwLFxyXG4gIEJBQ0tEUk9QOiAxNTBcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBESVNNSVNTX1JFQVNPTlMgPSB7XHJcbiAgQkFDS1JET1A6ICdiYWNrZHJvcC1jbGljaycsXHJcbiAgRVNDOiAnZXNjJ1xyXG59O1xyXG4iXX0=