/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChildren, ElementRef, Input, QueryList, TemplateRef, ViewChild, ViewChildren, ViewContainerRef, ViewEncapsulation } from '@angular/core';
import { ShContextMenuItemDirective } from './sh-context-menu-item.directive';
import { ShContextMenuService } from './sh-context-menu.service';
var ShContextMenuComponent = /** @class */ (function () {
    function ShContextMenuComponent(ctxService) {
        this.ctxService = ctxService;
        this.contentChildrenItems = new QueryList();
        this.viewChildrenItems = new QueryList();
    }
    Object.defineProperty(ShContextMenuComponent.prototype, "menuItems", {
        get: /**
         * @return {?}
         */
        function () {
            // when using the ShContextMenuComponent as menu, the ContentChildren is the source
            if (this.contentChildrenItems.length) {
                return this.contentChildrenItems;
            }
            // when using a custom component as menu the ViewChildren is the source
            return this.viewChildrenItems;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} $event
     * @param {?} item
     * @param {?} elm
     * @return {?}
     */
    ShContextMenuComponent.prototype.onEnter = /**
     * @param {?} $event
     * @param {?} item
     * @param {?} elm
     * @return {?}
     */
    function ($event, item, elm) {
        this.ctxService.closeSubMenus(this);
        this.setNotActive();
        if (!item.subMenu || !item.visible) {
            return;
        }
        this.setActive(item);
        this.ctxService.openSubMenu({
            data: item.context.$implicit,
            targetElement: new ElementRef(elm),
            menu: item.subMenu,
            mouseEvent: $event,
            parentMenu: this
        });
    };
    /**
     * @private
     * @param {?} item
     * @return {?}
     */
    ShContextMenuComponent.prototype.setActive = /**
     * @private
     * @param {?} item
     * @return {?}
     */
    function (item) {
        item.setActive();
        this.subActive = true;
    };
    /**
     * @param {?} event
     * @param {?} item
     * @return {?}
     */
    ShContextMenuComponent.prototype.onClick = /**
     * @param {?} event
     * @param {?} item
     * @return {?}
     */
    function (event, item) {
        // TODO: move click handling to service
        if (item.divider) {
            return;
        }
        if (!item.subMenu && item.closeOnClick) {
            this.ctxService.destroy();
            item.click.emit({
                data: item.context.$implicit,
                event: event
            });
        }
    };
    /**
     * @private
     * @param {?} fn
     * @param {?} fallbackContext
     * @param {?} data
     * @param {?} event
     * @return {?}
     */
    ShContextMenuComponent.prototype.callWithContext = /**
     * @private
     * @param {?} fn
     * @param {?} fallbackContext
     * @param {?} data
     * @param {?} event
     * @return {?}
     */
    function (fn, fallbackContext, data, event) {
        return fn.call(this.thisContext ? this.thisContext : fallbackContext, { data: data, event: event });
    };
    /**
     * @return {?}
     */
    ShContextMenuComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.setNotActive();
        this.menuContainer.detach();
        if (this.overlayRef) {
            this.overlayRef.detach();
        }
    };
    /**
     * @return {?}
     */
    ShContextMenuComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.close();
    };
    /**
     * @return {?}
     */
    ShContextMenuComponent.prototype.setNotActive = /**
     * @return {?}
     */
    function () {
        this.subActive = false;
        this.menuItems.forEach(function (i) { return i.setNotActive(); });
    };
    /**
     * @param {?} item
     * @return {?}
     */
    ShContextMenuComponent.prototype.isVisible = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        if (!item.visible) {
            return true;
        }
        return this.callWithContext(item.visible, this, item.context.$implicit, null);
    };
    ShContextMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sh-context-menu',
                    encapsulation: ViewEncapsulation.None,
                    template: "\n    <ng-container #menuContainer></ng-container>\n    <ng-template #menuTemplate>\n      <div class=\"sh-context-menu\">\n        <div\n          *ngFor=\"let menuItem of menuItems\"\n          #itemElement\n          [ngClass]=\"{'sh-sub-anchor': menuItem.subMenu && menuItem.visible,\n           'sh-context-menu--item__disable': !menuItem.visible,\n           'sh-context-menu--item__divider': menuItem.divider,\n           'sh-context-menu--item__sub-active': subActive && menuItem.active}\"\n          class=\"sh-context-menu--item\"\n          (mouseenter)=\"onEnter($event, menuItem, itemElement)\"\n          (click)=\"onClick($event, menuItem)\">\n          <ng-container *ngIf=\"!menuItem.divider || !isVisible(menuItem)\">\n            <ng-content *ngTemplateOutlet=\"menuItem.template; context: menuItem.context\"></ng-content>\n          </ng-container>\n        </div>\n      </div>\n    </ng-template>\n  ",
                    styles: [".sh-backdrop{background-color:transparent}.sh-context-menu{background:#fff;min-width:150px;border:1px solid rgba(0,0,0,.2);border-radius:3px;box-shadow:0 0 10px 2px rgba(0,0,0,.1);color:#656565;margin:0}.sh-context-menu--item{padding:7px 10px 7px 15px;transition:.15s}.sh-context-menu--item:hover,.sh-context-menu--item__sub-active{background-color:#ededed;cursor:pointer}.sh-context-menu--item.sh-context-menu--item__divider:hover{background-color:#ececec;color:#000;cursor:default}.sh-context-menu--item__divider{height:1px;padding:0;overflow:hidden;border-bottom:1px solid #d0d0d0}.sh-context-menu--item.sh-sub-anchor{position:relative;min-width:140px}.sh-sub-anchor:after{content:\"\";top:50%;right:6px;-webkit-transform:translateY(-50%);transform:translateY(-50%);position:absolute;border-top:4px solid transparent;border-bottom:4px solid transparent;border-left:5px solid #000}.sh-context-menu--item__disable{color:#a6a2a2}"]
                }] }
    ];
    /** @nocollapse */
    ShContextMenuComponent.ctorParameters = function () { return [
        { type: ShContextMenuService }
    ]; };
    ShContextMenuComponent.propDecorators = {
        thisContext: [{ type: Input, args: ['this',] }],
        contentChildrenItems: [{ type: ContentChildren, args: [ShContextMenuItemDirective, { read: ShContextMenuItemDirective },] }],
        viewChildrenItems: [{ type: ViewChildren, args: [ShContextMenuItemDirective, { read: ShContextMenuItemDirective },] }],
        menuTemplate: [{ type: ViewChild, args: ['menuTemplate', { read: TemplateRef },] }],
        menuContainer: [{ type: ViewChild, args: ['menuContainer', { read: ViewContainerRef },] }]
    };
    return ShContextMenuComponent;
}());
export { ShContextMenuComponent };
if (false) {
    /** @type {?} */
    ShContextMenuComponent.prototype.thisContext;
    /** @type {?} */
    ShContextMenuComponent.prototype.contentChildrenItems;
    /** @type {?} */
    ShContextMenuComponent.prototype.viewChildrenItems;
    /** @type {?} */
    ShContextMenuComponent.prototype.menuTemplate;
    /** @type {?} */
    ShContextMenuComponent.prototype.menuContainer;
    /** @type {?} */
    ShContextMenuComponent.prototype.overlayRef;
    /** @type {?} */
    ShContextMenuComponent.prototype.subActive;
    /**
     * @type {?}
     * @private
     */
    ShContextMenuComponent.prototype.ctxService;
}
//# sourceMappingURL=data:application/json;base64,