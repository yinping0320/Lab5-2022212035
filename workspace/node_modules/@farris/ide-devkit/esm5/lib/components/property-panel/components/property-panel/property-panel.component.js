/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewChild, ElementRef, Output, EventEmitter, ViewChildren } from '@angular/core';
import { PropertyItemListComponent } from '../property-item-list/property-item-list.component';
var PropertyPanelComponent = /** @class */ (function () {
    function PropertyPanelComponent() {
        /**
         * 是否持有面板的隐藏显示状态
         */
        this.isPersitOpenState = false;
        /**
         * isPersitOpenState=true时，控制面板是否隐藏显示
         */
        this.isShowPanel = false;
        /**
         * isPersitOpenState=true时，抛出面板的关闭事件
         */
        this.closePropertyPanel = new EventEmitter();
        /**
         * 属性值
         */
        this.propertyData = {};
        /**
         * 属性变更事件
         */
        this.propertyChanged = new EventEmitter();
        /**
         * 模态框属性变更事件
         */
        this.submitModal = new EventEmitter();
        /**
         * 是否展示关闭按钮
         */
        this.showCloseBtn = true;
        /**
         * 当前展示状态
         */
        this.isOpen = true;
        /**
         * 外层分类，以标签页形式展示
         */
        this.categoryTabs = [];
    }
    /**
     * @return {?}
     */
    PropertyPanelComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.width) {
            this.eastDiv.nativeElement.style.width = this.width + 'px';
        }
        else {
            this.eastDiv.nativeElement.style.width = 'inherit';
        }
        if (this.height) {
            this.eastDiv.nativeElement.style.height = this.height + 'px';
        }
        else {
            this.eastDiv.nativeElement.style.height = '100%';
        }
        if (this.isPersitOpenState) {
            this.isOpen = this.isShowPanel;
        }
        this.checkShowTabCategory();
    };
    /**
     *  更改面板的隐藏显示状态，只有在isPersitOpenState=true时生效
     */
    /**
     *  更改面板的隐藏显示状态，只有在isPersitOpenState=true时生效
     * @param {?} simpleChanges
     * @return {?}
     */
    PropertyPanelComponent.prototype.ngOnChanges = /**
     *  更改面板的隐藏显示状态，只有在isPersitOpenState=true时生效
     * @param {?} simpleChanges
     * @return {?}
     */
    function (simpleChanges) {
        if (simpleChanges.isShowPanel && this.isPersitOpenState) {
            this.isOpen = this.isShowPanel;
        }
        this.checkShowTabCategory();
    };
    /**
     * @return {?}
     */
    PropertyPanelComponent.prototype.refreshPanel = /**
     * @return {?}
     */
    function () {
        this.checkShowTabCategory();
        this.itemLists.forEach(function (item) { return item.refresh(); });
    };
    /**
     * @param {?} item
     * @return {?}
     */
    PropertyPanelComponent.prototype.changeStatus = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        if (this.propertyConfig.length < 2) {
            return;
        }
        if (!item.status || item.status === 'open') {
            item.status = 'closed';
        }
        else {
            item.status = 'open';
        }
    };
    /**
     *  隐藏面板
     */
    /**
     *  隐藏面板
     * @return {?}
     */
    PropertyPanelComponent.prototype.collapse = /**
     *  隐藏面板
     * @return {?}
     */
    function () {
        // isPersitOpenState=true时,由外部确定状态
        if (!this.isPersitOpenState) {
            this.isOpen = false;
        }
        this.closePropertyPanel.emit();
    };
    /**
     * 抛出属性变更事件
     */
    /**
     * 抛出属性变更事件
     * @param {?} changeObject
     * @return {?}
     */
    PropertyPanelComponent.prototype._valueChanged = /**
     * 抛出属性变更事件
     * @param {?} changeObject
     * @return {?}
     */
    function (changeObject) {
        this.propertyChanged.emit(changeObject);
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    PropertyPanelComponent.prototype._submitModal = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.submitModal.emit($event);
    };
    /**
     * 将属性分类按照标签页进行归类
     */
    /**
     * 将属性分类按照标签页进行归类
     * @private
     * @return {?}
     */
    PropertyPanelComponent.prototype.checkShowTabCategory = /**
     * 将属性分类按照标签页进行归类
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.categoryTabs = [];
        if (!this.propertyConfig || this.propertyConfig.length === 0) {
            this.categoryTabs = [{
                    tabId: 'default',
                    tabName: '属性',
                    categoryList: []
                }];
            this.selectedTab = null;
            return;
        }
        this.propertyConfig.forEach(function (config) {
            if (config.tabId) {
                /** @type {?} */
                var propTab = _this.categoryTabs.find(function (t) { return t.tabId === config.tabId; });
                if (!propTab) {
                    _this.categoryTabs.push({
                        tabId: config.tabId,
                        tabName: config.tabName,
                        categoryList: [config],
                        hide: config.hide || config.properties.length === 0
                    });
                }
                else {
                    propTab.categoryList.push(config);
                    if (propTab.hide) {
                        propTab.hide = config.hide || config.properties.length === 0;
                    }
                }
            }
            else {
                /** @type {?} */
                var defaultTab = _this.categoryTabs.find(function (t) { return t.tabId === 'default'; });
                if (!defaultTab) {
                    _this.categoryTabs.push({
                        tabId: 'default',
                        tabName: '属性',
                        categoryList: [config]
                    });
                }
                else {
                    defaultTab.categoryList.push(config);
                }
            }
        });
        this.selectedTab = this.categoryTabs[0];
    };
    PropertyPanelComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-property-panel',
                    template: "<div #east [style.display]=\"isOpen?'block':'none'\">\r\n    <div class=\"propertyPanel panel d-flex flex-column\">\r\n\r\n\r\n        <div class=\"title d-flex\">\r\n            <div class=\"title-label\" *ngFor=\"let tab of categoryTabs\" (click)=\"selectedTab=tab\" [hidden]=\"tab.hide\"\r\n                [class.active]=\"selectedTab && selectedTab.tabId===tab.tabId && categoryTabs.length>1\">\r\n                <span>{{tab.tabName}}</span>\r\n            </div>\r\n            <div class=\"title-actions\">\r\n                <div class=\"monaco-toolbar\">\r\n                    <div class=\"monaco-action-bar animated\">\r\n                        <ul class=\"actions-container\" role=\"toolbar\">\r\n                            <li class=\"action-item\" (click)=\"collapse()\" *ngIf=\"showCloseBtn\">\r\n                                <a class=\"hide-panel\" title=\"\u5173\u95ED\"></a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div #propertyPanel class=\"panel-body\" [style.height]=\"(height - 35) + 'px'\" *ngIf=\"selectedTab\">\r\n            <ul class=\"property-grid\">\r\n                <li *ngFor=\"let category of selectedTab.categoryList\">\r\n                    <ng-container *ngIf=\"!category.hide\">\r\n                        <span *ngIf=\"!category.hideTitle\"\r\n                            [class]=\"category.status === 'closed' ? 'group-label collapse': 'group-label expand' \"\r\n                            (click)=\"changeStatus(category)\">{{ category.categoryName }}</span>\r\n                        <div [style.display]=\"!category.status || category.status === 'open'?'block':'none'\"\r\n                            class=\"py-1 \">\r\n                            <webide-property-item-list [category]=\"category\" [propertyData]=\"propertyData\"\r\n                                (valueChanged)=\"_valueChanged($event)\" (submitModal)=\"_submitModal($event)\"\r\n                                (triggerRefreshPanel)=\"refreshPanel()\"></webide-property-item-list>\r\n                        </div>\r\n                    </ng-container>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n</div>",
                    styles: [":host{width:inherit;height:inherit}.propertyPanel{width:100%;height:100%;color:rgba(0,0,0,.75);background:#f3f8ff!important;border-color:#d8dbe2!important}.propertyPanel .title{position:relative;background:#d0d8e9!important;padding-right:40px;flex-wrap:wrap}.propertyPanel .title>.title-label{line-height:34px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;padding-left:12px;padding-right:12px;color:#333;font-size:14px;font-weight:600;cursor:pointer}.propertyPanel .title>.title-label.active{background:#8fb1df!important}.propertyPanel .title .title-actions{padding-left:35px;height:35px;flex:1;box-sizing:border-box;position:absolute;right:10px;top:0}.propertyPanel .property-grid .group-label{line-height:30px;display:block;padding-left:12px;cursor:pointer;background:#e2e9f6!important;color:#34495e!important;font-weight:600!important}.propertyPanel .panel-body{overflow:auto;height:100%}.propertyPanel .property-grid{list-style:none;margin:0;padding:0}.propertyPanel .action-item{cursor:pointer;display:inline-block;transition:transform 50ms;transition:transform 50ms,-webkit-transform 50ms;position:relative;padding:0}.propertyPanel .action-item .hide-panel{height:35px;display:block;line-height:35px;min-width:28px;color:rgba(66,66,66,.75);background-color:transparent!important;outline:0!important;background:url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M9.784 8L13 11.217 11.215 13 8.001 9.786 4.785 13 3 11.216l3.214-3.215L3 4.785 4.784 3 8 6.216 11.216 3 13 4.785 9.784 8.001z' fill='%23424242'/%3E%3C/svg%3E\") 50% 50% no-repeat}"]
                }] }
    ];
    /** @nocollapse */
    PropertyPanelComponent.ctorParameters = function () { return []; };
    PropertyPanelComponent.propDecorators = {
        width: [{ type: Input }],
        height: [{ type: Input }],
        isPersitOpenState: [{ type: Input }],
        isShowPanel: [{ type: Input }],
        closePropertyPanel: [{ type: Output }],
        propertyConfig: [{ type: Input }],
        propertyData: [{ type: Input }],
        propertyChanged: [{ type: Output }],
        submitModal: [{ type: Output }],
        showCloseBtn: [{ type: Input }],
        eastDiv: [{ type: ViewChild, args: ['east',] }],
        itemLists: [{ type: ViewChildren, args: [PropertyItemListComponent,] }]
    };
    return PropertyPanelComponent;
}());
export { PropertyPanelComponent };
if (false) {
    /** @type {?} */
    PropertyPanelComponent.prototype.width;
    /** @type {?} */
    PropertyPanelComponent.prototype.height;
    /**
     * 是否持有面板的隐藏显示状态
     * @type {?}
     */
    PropertyPanelComponent.prototype.isPersitOpenState;
    /**
     * isPersitOpenState=true时，控制面板是否隐藏显示
     * @type {?}
     */
    PropertyPanelComponent.prototype.isShowPanel;
    /**
     * isPersitOpenState=true时，抛出面板的关闭事件
     * @type {?}
     */
    PropertyPanelComponent.prototype.closePropertyPanel;
    /**
     * 属性类型
     * @type {?}
     */
    PropertyPanelComponent.prototype.propertyConfig;
    /**
     * 属性值
     * @type {?}
     */
    PropertyPanelComponent.prototype.propertyData;
    /**
     * 属性变更事件
     * @type {?}
     */
    PropertyPanelComponent.prototype.propertyChanged;
    /**
     * 模态框属性变更事件
     * @type {?}
     */
    PropertyPanelComponent.prototype.submitModal;
    /**
     * 是否展示关闭按钮
     * @type {?}
     */
    PropertyPanelComponent.prototype.showCloseBtn;
    /**
     * @type {?}
     * @private
     */
    PropertyPanelComponent.prototype.eastDiv;
    /** @type {?} */
    PropertyPanelComponent.prototype.itemLists;
    /**
     * 当前展示状态
     * @type {?}
     */
    PropertyPanelComponent.prototype.isOpen;
    /**
     * 外层分类，以标签页形式展示
     * @type {?}
     */
    PropertyPanelComponent.prototype.categoryTabs;
    /**
     * 当前选中的标签页
     * @type {?}
     */
    PropertyPanelComponent.prototype.selectedTab;
}
//# sourceMappingURL=data:application/json;base64,