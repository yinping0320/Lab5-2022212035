/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
var PropertyType = {
    string: 'string',
    boolean: 'boolean',
    number: 'number',
    select: 'select',
    boolOrExp: 'boolOrExp',
    multiSelect: 'multiSelect',
    date: 'date',
    datetime: 'datetime',
    modal: 'modal',
    cascade: 'cascade',
};
export { PropertyType };
/**
 * 属性分类实体
 */
var /**
 * 属性分类实体
 */
ElementPropertyConfig = /** @class */ (function () {
    function ElementPropertyConfig() {
        /**
         * 分类是否隐藏，默认false
         */
        this.hide = false;
        /**
         * 是否隐藏分类标题
         */
        this.hideTitle = false;
        /**
         * 是否启用级联特性，默认false
         */
        this.enableCascade = false;
    }
    return ElementPropertyConfig;
}());
/**
 * 属性分类实体
 */
export { ElementPropertyConfig };
if (false) {
    /**
     * 分类ID
     * @type {?}
     */
    ElementPropertyConfig.prototype.categoryId;
    /**
     * 分类显示的名称
     * @type {?}
     */
    ElementPropertyConfig.prototype.categoryName;
    /**
     * 分类是否隐藏，默认false
     * @type {?}
     */
    ElementPropertyConfig.prototype.hide;
    /**
     * 是否隐藏分类标题
     * @type {?}
     */
    ElementPropertyConfig.prototype.hideTitle;
    /**
     * 分类下的属性配置
     * @type {?}
     */
    ElementPropertyConfig.prototype.properties;
    /**
     * 是否启用级联特性，默认false
     * @type {?}
     */
    ElementPropertyConfig.prototype.enableCascade;
    /**
     * 属性值：分类启用级联特性时必填
     * @type {?}
     */
    ElementPropertyConfig.prototype.propertyData;
    /**
     * 父级属性ID：分类启用级联特性时必填
     * @type {?}
     */
    ElementPropertyConfig.prototype.parentPropertyID;
    /**
     * 属性关联关系，用于属性变更后修改其他属性配置或属性值
     * @type {?}
     */
    ElementPropertyConfig.prototype.setPropertyRelates;
    /**
     * 分类以标签页展示时，标签页的ID。若只需平铺展示，则不需要传入。
     * @type {?}
     */
    ElementPropertyConfig.prototype.tabId;
    /**
     * 分类以标签页展示时，标签页的名称。若只需平铺展示，则不需要传入。
     * @type {?}
     */
    ElementPropertyConfig.prototype.tabName;
}
/**
 * 属性实体
 */
var /**
 * 属性实体
 */
PropertyEntity = /** @class */ (function () {
    function PropertyEntity() {
        /**
         * 是否只读，默认false
         */
        this.readonly = false;
        /**
         * 是否可见，默认true
         */
        this.visible = true;
        /**
         * 是否大数字
         */
        this.isBigNumber = false;
        /**
         * 属性改变后是否需要刷新整个面板：用于更改其他分类下的属性
         */
        this.refreshPanelAfterChanged = false;
        /**
         * 下拉多选类型：属性值的类型：string(多值以逗号分隔)/array(多值组装成数组)
         */
        this.multiSelectDataType = 'string';
        /**
         * 级联属性是否默认收起
         */
        this.isExpand = false;
        /**
         * 是否隐藏级联属性的头部
         */
        this.hideCascadeTitle = false;
        /**
         * 模态框属性是否展示清除图标
         */
        this.showClearButton = false;
    }
    /**
     * 打开模态框前的方法，一般用于校验逻辑，返回值中result=true，则进一步打开模态框，result=false则提示message内容，并不再打开模态框。
     */
    /**
     * 打开模态框前的方法，一般用于校验逻辑，返回值中result=true，则进一步打开模态框，result=false则提示message内容，并不再打开模态框。
     * @return {?}
     */
    PropertyEntity.prototype.beforeOpenModal = /**
     * 打开模态框前的方法，一般用于校验逻辑，返回值中result=true，则进一步打开模态框，result=false则提示message内容，并不再打开模态框。
     * @return {?}
     */
    function () {
        return new BeforeOpenModalResult();
    };
    return PropertyEntity;
}());
/**
 * 属性实体
 */
export { PropertyEntity };
if (false) {
    /**
     * 属性ID
     * @type {?}
     */
    PropertyEntity.prototype.propertyID;
    /**
     * 属性显示的名称
     * @type {?}
     */
    PropertyEntity.prototype.propertyName;
    /**
     * 属性的类型
     * @type {?}
     */
    PropertyEntity.prototype.propertyType;
    /**
     * 属性描述
     * @type {?}
     */
    PropertyEntity.prototype.description;
    /**
     * 属性的默认值
     * @type {?}
     */
    PropertyEntity.prototype.defaultValue;
    /**
     * 是否只读，默认false
     * @type {?}
     */
    PropertyEntity.prototype.readonly;
    /**
     * 是否可见，默认true
     * @type {?}
     */
    PropertyEntity.prototype.visible;
    /**
     * 最小值
     * @type {?}
     */
    PropertyEntity.prototype.min;
    /**
     * 最大值
     * @type {?}
     */
    PropertyEntity.prototype.max;
    /**
     * 数字类型属性的小数位数
     * @type {?}
     */
    PropertyEntity.prototype.decimals;
    /**
     * 是否大数字
     * @type {?}
     */
    PropertyEntity.prototype.isBigNumber;
    /**
     * 属性改变后是否需要刷新整个面板：用于更改其他分类下的属性
     * @type {?}
     */
    PropertyEntity.prototype.refreshPanelAfterChanged;
    /**
     * 下拉框的枚举值
     * @type {?}
     */
    PropertyEntity.prototype.iterator;
    /**
     * 下拉多选类型：属性值的类型：string(多值以逗号分隔)/array(多值组装成数组)
     * @type {?}
     */
    PropertyEntity.prototype.multiSelectDataType;
    /**
     * 文本控件限制输入的字符，支持字符和正则表达式
     * @type {?}
     */
    PropertyEntity.prototype.notAllowedChars;
    /**
     * 级联属性配置
     * @type {?}
     */
    PropertyEntity.prototype.cascadeConfig;
    /**
     * 级联属性是否默认收起
     * @type {?}
     */
    PropertyEntity.prototype.isExpand;
    /**
     * 是否隐藏级联属性的头部
     * @type {?}
     */
    PropertyEntity.prototype.hideCascadeTitle;
    /**
     * 级联属性的汇总信息
     * @type {?}
     */
    PropertyEntity.prototype.cascadeConverter;
    /**
     * 模态框属性自定义编辑器
     * @type {?}
     */
    PropertyEntity.prototype.editor;
    /**
     * 模态框属性自定义编辑器参数
     * @type {?}
     */
    PropertyEntity.prototype.editorParams;
    /**
     *  模态框属性值转换器
     * @type {?}
     */
    PropertyEntity.prototype.converter;
    /**
     * 模态框属性是否展示清除图标
     * @type {?}
     */
    PropertyEntity.prototype.showClearButton;
    /* Skipping unhandled member: [propName: string]: any;*/
}
/**
 * 属性值转换器，返回模态框类属性文本框内的显示内容
 * @record
 */
export function TypeConverter() { }
if (false) {
    /**
     * @param {?} data
     * @param {?=} params
     * @return {?}
     */
    TypeConverter.prototype.convertTo = function (data, params) { };
}
/**
 * @record
 */
export function KeyMap() { }
if (false) {
    /** @type {?} */
    KeyMap.prototype.key;
    /** @type {?} */
    KeyMap.prototype.value;
}
/**
 * 打开模态框前的方法返回值，result=true，则进一步打开模态框，result=false则提示message内容，并不再打开模态框。
 */
var /**
 * 打开模态框前的方法返回值，result=true，则进一步打开模态框，result=false则提示message内容，并不再打开模态框。
 */
BeforeOpenModalResult = /** @class */ (function () {
    function BeforeOpenModalResult() {
    }
    return BeforeOpenModalResult;
}());
/**
 * 打开模态框前的方法返回值，result=true，则进一步打开模态框，result=false则提示message内容，并不再打开模态框。
 */
export { BeforeOpenModalResult };
if (false) {
    /** @type {?} */
    BeforeOpenModalResult.prototype.result;
    /** @type {?} */
    BeforeOpenModalResult.prototype.message;
}
/**
 * 属性变更集
 */
var /**
 * 属性变更集
 */
PropertyChangeObject = /** @class */ (function () {
    function PropertyChangeObject() {
    }
    return PropertyChangeObject;
}());
/**
 * 属性变更集
 */
export { PropertyChangeObject };
if (false) {
    /**
     * 属性ID
     * @type {?}
     */
    PropertyChangeObject.prototype.propertyID;
    /**
     * 变更后的属性值
     * @type {?}
     */
    PropertyChangeObject.prototype.propertyValue;
    /**
     *  属性所在分类ID
     * @type {?}
     */
    PropertyChangeObject.prototype.categoryId;
    /**
     * 级联属性的父路径，以.分隔
     * @type {?}
     */
    PropertyChangeObject.prototype.propertyPath;
    /**
     * 级联属性的父属性ID
     * @type {?}
     */
    PropertyChangeObject.prototype.parentPropertyID;
}
//# sourceMappingURL=data:application/json;base64,