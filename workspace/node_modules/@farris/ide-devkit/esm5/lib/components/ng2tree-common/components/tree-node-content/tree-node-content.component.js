/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ComponentFactoryResolver, ViewContainerRef, ViewChild } from '@angular/core';
var TreeNodeContentComponent = /** @class */ (function () {
    function TreeNodeContentComponent(componentFactoryResolver) {
        this.componentFactoryResolver = componentFactoryResolver;
        this.rightMenuClicked = new EventEmitter();
    }
    /**
     * @return {?}
     */
    TreeNodeContentComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // 右键菜单相关
        this.rightMenuContainer.clear();
        if (this.originData.hasRightClickMenu) {
            /** @type {?} */
            var componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.originData.rightClickMenuComponent);
            /** @type {?} */
            var componentRef = this.rightMenuContainer.createComponent(componentFactory);
            componentRef.instance['nodeData'] = this.originData;
            componentRef.instance['rightMenuClicked'].subscribe(function (event) {
                _this.rightMenuClicked.emit(event);
            });
        }
    };
    TreeNodeContentComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ng2tree-node-content',
                    template: "<div class='tree-node-content' *ngIf=\"!originData.hasRightClickMenu\">\r\n  <span>{{ displayData }}</span>\r\n</div>\r\n<ng-container #rightMenuContainer>\r\n</ng-container>",
                    styles: [".tree-node-content:hover{background:#a8daa7}"]
                }] }
    ];
    /** @nocollapse */
    TreeNodeContentComponent.ctorParameters = function () { return [
        { type: ComponentFactoryResolver }
    ]; };
    TreeNodeContentComponent.propDecorators = {
        displayData: [{ type: Input }],
        originData: [{ type: Input }],
        rightMenuClicked: [{ type: Output }],
        rightMenuContainer: [{ type: ViewChild, args: ['rightMenuContainer', { read: ViewContainerRef },] }]
    };
    return TreeNodeContentComponent;
}());
export { TreeNodeContentComponent };
if (false) {
    /** @type {?} */
    TreeNodeContentComponent.prototype.displayData;
    /** @type {?} */
    TreeNodeContentComponent.prototype.originData;
    /** @type {?} */
    TreeNodeContentComponent.prototype.rightMenuClicked;
    /** @type {?} */
    TreeNodeContentComponent.prototype.rightMenuContainer;
    /**
     * @type {?}
     * @private
     */
    TreeNodeContentComponent.prototype.componentFactoryResolver;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1ub2RlLWNvbnRlbnQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9pZGUtZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbmcydHJlZS1jb21tb24vY29tcG9uZW50cy90cmVlLW5vZGUtY29udGVudC90cmVlLW5vZGUtY29udGVudC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQVUsd0JBQXdCLEVBQUUsZ0JBQWdCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBR3RJO0lBWUUsa0NBQW9CLHdCQUFrRDtRQUFsRCw2QkFBd0IsR0FBeEIsd0JBQXdCLENBQTBCO1FBSDVELHFCQUFnQixHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFLckQsQ0FBQzs7OztJQUNELDJDQUFROzs7SUFBUjtRQUFBLGlCQVdDO1FBVkMsU0FBUztRQUNULElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNoQyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsaUJBQWlCLEVBQUU7O2dCQUMvQixnQkFBZ0IsR0FBRyxJQUFJLENBQUMsd0JBQXdCLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyx1QkFBdUIsQ0FBQzs7Z0JBQ2pILFlBQVksR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsZUFBZSxDQUFDLGdCQUFnQixDQUFDO1lBQzlFLFlBQVksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztZQUNwRCxZQUFZLENBQUMsUUFBUSxDQUFDLGtCQUFrQixDQUFDLENBQUMsU0FBUyxDQUFDLFVBQUMsS0FBSztnQkFDeEQsS0FBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNwQyxDQUFDLENBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQzs7Z0JBMUJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsc0JBQXNCO29CQUNoQywwTEFBaUQ7O2lCQUVsRDs7OztnQkFQd0Qsd0JBQXdCOzs7OEJBVTlFLEtBQUs7NkJBQ0wsS0FBSzttQ0FDTCxNQUFNO3FDQUVOLFNBQVMsU0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRTs7SUFnQjdELCtCQUFDO0NBQUEsQUEzQkQsSUEyQkM7U0F0Qlksd0JBQXdCOzs7SUFFbkMsK0NBQTBCOztJQUMxQiw4Q0FBeUI7O0lBQ3pCLG9EQUFxRDs7SUFFckQsc0RBQWtHOzs7OztJQUN0Riw0REFBMEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgT25Jbml0LCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIFZpZXdDb250YWluZXJSZWYsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBJVHJlZU5vZGVDb250ZW50IH0gZnJvbSAnLi9JVHJlZU5vZGVDb250ZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbmcydHJlZS1ub2RlLWNvbnRlbnQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi90cmVlLW5vZGUtY29udGVudC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vdHJlZS1ub2RlLWNvbnRlbnQuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBUcmVlTm9kZUNvbnRlbnRDb21wb25lbnQgaW1wbGVtZW50cyBJVHJlZU5vZGVDb250ZW50LCBPbkluaXQge1xyXG5cclxuICBASW5wdXQoKSBkaXNwbGF5RGF0YTogYW55O1xyXG4gIEBJbnB1dCgpIG9yaWdpbkRhdGE6IGFueTtcclxuICBAT3V0cHV0KCkgcmlnaHRNZW51Q2xpY2tlZCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG5cclxuICBAVmlld0NoaWxkKCdyaWdodE1lbnVDb250YWluZXInLCB7IHJlYWQ6IFZpZXdDb250YWluZXJSZWYgfSkgcmlnaHRNZW51Q29udGFpbmVyOiBWaWV3Q29udGFpbmVyUmVmO1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY29tcG9uZW50RmFjdG9yeVJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIpIHtcclxuXHJcbiAgfVxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgLy8g5Y+z6ZSu6I+c5Y2V55u45YWzXHJcbiAgICB0aGlzLnJpZ2h0TWVudUNvbnRhaW5lci5jbGVhcigpO1xyXG4gICAgaWYgKHRoaXMub3JpZ2luRGF0YS5oYXNSaWdodENsaWNrTWVudSkge1xyXG4gICAgICBjb25zdCBjb21wb25lbnRGYWN0b3J5ID0gdGhpcy5jb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkodGhpcy5vcmlnaW5EYXRhLnJpZ2h0Q2xpY2tNZW51Q29tcG9uZW50KTtcclxuICAgICAgY29uc3QgY29tcG9uZW50UmVmID0gdGhpcy5yaWdodE1lbnVDb250YWluZXIuY3JlYXRlQ29tcG9uZW50KGNvbXBvbmVudEZhY3RvcnkpO1xyXG4gICAgICBjb21wb25lbnRSZWYuaW5zdGFuY2VbJ25vZGVEYXRhJ10gPSB0aGlzLm9yaWdpbkRhdGE7XHJcbiAgICAgIGNvbXBvbmVudFJlZi5pbnN0YW5jZVsncmlnaHRNZW51Q2xpY2tlZCddLnN1YnNjcmliZSgoZXZlbnQpID0+IHtcclxuICAgICAgICB0aGlzLnJpZ2h0TWVudUNsaWNrZWQuZW1pdChldmVudCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=