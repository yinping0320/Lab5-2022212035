/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
// Angular Monaco Editor Component Variables
// 汇总Angular monaco editor component 组件暴露的变量
var AngularMonacoEditorService = /** @class */ (function () {
    function AngularMonacoEditorService() {
        this._existError = false; //默认没有错误
    }
    Object.defineProperty(AngularMonacoEditorService.prototype, "existError", {
        get: 
        //默认没有错误
        /**
         * @return {?}
         */
        function () {
            return this._existError;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    AngularMonacoEditorService.prototype.handleModelMarkers = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var self = this;
        // https://github.com/Microsoft/monaco-editor/issues/30
        /** @type {?} */
        var setModelMarkers = monaco.editor.setModelMarkers;
        monaco.editor.setModelMarkers = function (model, owner, markers) {
            setModelMarkers.call(monaco.editor, model, owner, markers);
            if (markers.length === 0) {
                // there are no errors(synx error and validate error)
                // console.log('continue');
            }
            else {
                // there are errors
                self._existError = true;
            }
        };
    };
    AngularMonacoEditorService.decorators = [
        { type: Injectable }
    ];
    return AngularMonacoEditorService;
}());
export { AngularMonacoEditorService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    AngularMonacoEditorService.prototype._existError;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1tb25hY28tZWRpdG9yLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2lkZS1kZXZraXQvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9hbmd1bGFyLWVkaXRvci9zZXJ2aWNlL2FuZ3VsYXItbW9uYWNvLWVkaXRvci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFNM0M7SUFBQTtRQUdZLGdCQUFXLEdBQUcsS0FBSyxDQUFDLENBQUEsUUFBUTtJQW9CeEMsQ0FBQztJQW5CRyxzQkFBSSxrREFBVTs7Ozs7O1FBQWQ7WUFDSSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDNUIsQ0FBQzs7O09BQUE7Ozs7SUFFRCx1REFBa0I7OztJQUFsQjs7WUFDUSxJQUFJLEdBQUcsSUFBSTs7O1lBRVQsZUFBZSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsZUFBZTtRQUNyRCxNQUFNLENBQUMsTUFBTSxDQUFDLGVBQWUsR0FBRyxVQUFVLEtBQUssRUFBRSxLQUFLLEVBQUUsT0FBTztZQUMzRCxlQUFlLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztZQUMzRCxJQUFJLE9BQU8sQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUN0QixxREFBcUQ7Z0JBQ3JELDJCQUEyQjthQUM5QjtpQkFBTTtnQkFDSCxtQkFBbUI7Z0JBQ25CLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO2FBQzNCO1FBQ0wsQ0FBQyxDQUFDO0lBQ04sQ0FBQzs7Z0JBdEJKLFVBQVU7O0lBdUJYLGlDQUFDO0NBQUEsQUF2QkQsSUF1QkM7U0F0QlksMEJBQTBCOzs7Ozs7SUFFbkMsaURBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuZGVjbGFyZSBjb25zdCBtb25hY286IGFueTtcclxuXHJcbi8vIEFuZ3VsYXIgTW9uYWNvIEVkaXRvciBDb21wb25lbnQgVmFyaWFibGVzXHJcbi8vIOaxh+aAu0FuZ3VsYXIgbW9uYWNvIGVkaXRvciBjb21wb25lbnQg57uE5Lu25pq06Zyy55qE5Y+Y6YePXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIEFuZ3VsYXJNb25hY29FZGl0b3JTZXJ2aWNlIHtcclxuXHJcbiAgICBwcml2YXRlIF9leGlzdEVycm9yID0gZmFsc2U7Ly/pu5jorqTmsqHmnInplJnor69cclxuICAgIGdldCBleGlzdEVycm9yKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9leGlzdEVycm9yO1xyXG4gICAgfVxyXG5cclxuICAgIGhhbmRsZU1vZGVsTWFya2VycygpIHtcclxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdC9tb25hY28tZWRpdG9yL2lzc3Vlcy8zMFxyXG4gICAgICAgIGNvbnN0IHNldE1vZGVsTWFya2VycyA9IG1vbmFjby5lZGl0b3Iuc2V0TW9kZWxNYXJrZXJzO1xyXG4gICAgICAgIG1vbmFjby5lZGl0b3Iuc2V0TW9kZWxNYXJrZXJzID0gZnVuY3Rpb24gKG1vZGVsLCBvd25lciwgbWFya2Vycykge1xyXG4gICAgICAgICAgICBzZXRNb2RlbE1hcmtlcnMuY2FsbChtb25hY28uZWRpdG9yLCBtb2RlbCwgb3duZXIsIG1hcmtlcnMpO1xyXG4gICAgICAgICAgICBpZiAobWFya2Vycy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgICAgIC8vIHRoZXJlIGFyZSBubyBlcnJvcnMoc3lueCBlcnJvciBhbmQgdmFsaWRhdGUgZXJyb3IpXHJcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnY29udGludWUnKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIC8vIHRoZXJlIGFyZSBlcnJvcnNcclxuICAgICAgICAgICAgICAgIHNlbGYuX2V4aXN0RXJyb3IgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG4iXX0=