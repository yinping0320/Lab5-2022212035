/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ModalFrm } from './modal-frm';
import { forkJoin, Observable, of } from 'rxjs';
import { map } from 'rxjs/operators';
/**
 * 提供ide运行所需的方法，供插件使用
 */
var /**
 * 提供ide运行所需的方法，供插件使用
 */
Ide = /** @class */ (function () {
    function Ide(parent) {
        this.events = new Map();
        this.modal = new ModalFrm();
        this.frameId = this.getParam('frameID');
        if (this.isTop) {
            this.commandData = new Map();
        }
        if (parent) {
            this.msgr = parent.messager;
        }
    }
    Object.defineProperty(Ide.prototype, "isTop", {
        get: /**
         * @private
         * @return {?}
         */
        function () {
            return window.top === window;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Ide.prototype, "parentInstance", {
        get: /**
         * @private
         * @template THIS
         * @this {THIS}
         * @return {THIS}
         */
        function () {
            /** @type {?} */
            var instance = (/** @type {?} */ (this));
            /** @type {?} */
            var top = window.top;
            if (top && top['gsp']) {
                instance = top['gsp'].ide;
            }
            return instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Ide.prototype, "messager", {
        get: /**
         * @return {?}
         */
        function () {
            return this.msgr;
        },
        enumerable: true,
        configurable: true
    });
    /* #region  frame util */
    /* #region  frame util */
    /**
     * @param {?} key
     * @return {?}
     */
    Ide.prototype.getParam = /* #region  frame util */
    /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        /** @type {?} */
        var params = new URLSearchParams(window.location.search);
        return unescape(params.get(key));
    };
    /**
     * @param {?=} frameId
     * @return {?}
     */
    Ide.prototype.getInitCommandData = /**
     * @param {?=} frameId
     * @return {?}
     */
    function (frameId) {
        if (!this.isTop) {
            frameId = frameId || this.frameId;
            return this.parentInstance.getInitCommandData(frameId);
        }
        else {
            return this.commandData.get(frameId);
        }
    };
    /**
     * @param {?} frameId
     * @param {?} data
     * @return {?}
     */
    Ide.prototype.setInitCommandData = /**
     * @param {?} frameId
     * @param {?} data
     * @return {?}
     */
    function (frameId, data) {
        if (!this.isTop) {
            this.parentInstance.setInitCommandData(frameId, data);
        }
        else {
            this.commandData.set(frameId, data);
        }
    };
    /**
     * @param {?} messager
     * @return {?}
     */
    Ide.prototype.setMessager = /**
     * @param {?} messager
     * @return {?}
     */
    function (messager) {
        this.msgr = messager;
    };
    /* #endregion */
    /* #region  event */
    /* #endregion */
    /* #region  event */
    /**
     * @param {?} cb
     * @return {?}
     */
    Ide.prototype.onPanelAdded = /* #endregion */
    /* #region  event */
    /**
     * @param {?} cb
     * @return {?}
     */
    function (cb) {
        this.on('panel-added', cb);
    };
    /**
     * @param {?} cb
     * @return {?}
     */
    Ide.prototype.onPanelRemoved = /**
     * @param {?} cb
     * @return {?}
     */
    function (cb) {
        this.on('panel-removed', cb);
    };
    /**
     * @param {?} cb
     * @return {?}
     */
    Ide.prototype.onPanelShown = /**
     * @param {?} cb
     * @return {?}
     */
    function (cb) {
        this.on('panel-shown', cb);
    };
    /**
     * @param {?} cb
     * @return {?}
     */
    Ide.prototype.onPanelHidden = /**
     * @param {?} cb
     * @return {?}
     */
    function (cb) {
        this.on('panel-hidden', cb);
    };
    /**
     * @param {?} cb
     * @return {?}
     */
    Ide.prototype.onModalConfirming = /**
     * @param {?} cb
     * @return {?}
     */
    function (cb) {
        if (this.parentInstance !== this) {
            this.parentInstance.onModalConfirming(cb);
        }
        else {
            this.on('confirm-modal', cb);
        }
    };
    /**
     * @param {?} cb
     * @return {?}
     */
    Ide.prototype.onModalCancelling = /**
     * @param {?} cb
     * @return {?}
     */
    function (cb) {
        this.on('cancel-modal', cb);
    };
    /**
     * @param {?} cb
     * @return {?}
     */
    Ide.prototype.onLeftActivated = /**
     * @param {?} cb
     * @return {?}
     */
    function (cb) {
        if (this.isTop) {
            this.on('activate-left', cb);
        }
        else {
            this.parentInstance.onLeftActivated(cb);
        }
    };
    /**
     * @param {?} cb
     * @return {?}
     */
    Ide.prototype.onNotifyShown = /**
     * @param {?} cb
     * @return {?}
     */
    function (cb) {
        this.on('show-notify', cb);
    };
    /**
     * @param {?} cb
     * @return {?}
     */
    Ide.prototype.onLoadingShown = /**
     * @param {?} cb
     * @return {?}
     */
    function (cb) {
        this.on('show-loading', cb);
    };
    /**
     * @param {?} cb
     * @return {?}
     */
    Ide.prototype.onLoadingHidden = /**
     * @param {?} cb
     * @return {?}
     */
    function (cb) {
        this.on('hide-loading', cb);
    };
    /**
     * @param {?} cb
     * @return {?}
     */
    Ide.prototype.onDesignerStatusSet = /**
     * @param {?} cb
     * @return {?}
     */
    function (cb) {
        this.on('set-designer-status', cb);
    };
    // onBeforeClose(id: string, cb: () => boolean) {
    //   this.on('on-before-close', ({metadataId}) => {
    //     if (id === metadataId) {
    //       return cb();
    //     }
    //     return true;
    //   });
    // }
    // onBeforeClose(id: string, cb: () => boolean) {
    //   this.on('on-before-close', ({metadataId}) => {
    //     if (id === metadataId) {
    //       return cb();
    //     }
    //     return true;
    //   });
    // }
    /**
     * @param {?} id
     * @param {?} cb
     * @return {?}
     */
    Ide.prototype.onCloseTab = 
    // onBeforeClose(id: string, cb: () => boolean) {
    //   this.on('on-before-close', ({metadataId}) => {
    //     if (id === metadataId) {
    //       return cb();
    //     }
    //     return true;
    //   });
    // }
    /**
     * @param {?} id
     * @param {?} cb
     * @return {?}
     */
    function (id, cb) {
        if (!this.isTop) {
            return this.parentInstance.onCloseTab(id, cb);
        }
        this.on('close-tab', function (tabId) {
            if (id === tabId) {
                return cb();
            }
            return true;
        });
    };
    /* #endregion */
    /* #region  panel */
    /* #endregion */
    /* #region  panel */
    /**
     * @param {?} options
     * @return {?}
     */
    Ide.prototype.addPanel = /* #endregion */
    /* #region  panel */
    /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        this.emit('panel-added', options);
    };
    /* #endregion */
    /* #region  modal */
    /* #endregion */
    /* #region  modal */
    /**
     * @param {?} options
     * @return {?}
     */
    Ide.prototype.addModal = /* #endregion */
    /* #region  modal */
    /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        this.emit('panel-added', options, 'modal');
    };
    /**
     * @param {?=} id
     * @return {?}
     */
    Ide.prototype.closeModal = /**
     * @param {?=} id
     * @return {?}
     */
    function (id) {
        if (this.parentInstance !== this) {
            this.parentInstance.closeModal(id);
        }
        this.emit('panel-removed', id, 'modal');
    };
    /**
     * @param {?} id
     * @return {?}
     */
    Ide.prototype.confirmModal = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var result = true;
        // if (this.parentInstance !== this) {
        //   result = this.parentInstance.confirmModal(id);
        // }
        result = result && (/** @type {?} */ (this.emit('confirm-modal', id)));
        return result;
    };
    /**
     * @param {?} id
     * @return {?}
     */
    Ide.prototype.cancelModal = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var result = true;
        if (this.parentInstance !== this) {
            result = this.parentInstance.cancelModal(id);
        }
        result = result && (/** @type {?} */ (this.emit('cancel-modal', id)));
        return result;
    };
    // addLeft    registryOpener....
    /* #endregion */
    /* #region  left rigion */
    // addLeft    registryOpener....
    /* #endregion */
    /* #region  left rigion */
    /**
     * @param {?=} frameId
     * @return {?}
     */
    Ide.prototype.activateLeft = 
    // addLeft    registryOpener....
    /* #endregion */
    /* #region  left rigion */
    /**
     * @param {?=} frameId
     * @return {?}
     */
    function (frameId) {
        frameId = frameId || this.frameId;
        if (this.isTop) {
            this.emit('activate-left', frameId);
        }
        else {
            this.parentInstance.activateLeft(frameId);
        }
    };
    /* #endregion */
    /* #endregion */
    /**
     * @param {?} level
     * @param {?} content
     * @return {?}
     */
    Ide.prototype.notify = /* #endregion */
    /**
     * @param {?} level
     * @param {?} content
     * @return {?}
     */
    function (level, content) {
        if (this.isTop) {
            this.emit('show-notify', level, content);
        }
        else {
            this.parentInstance.notify(level, content);
        }
    };
    /**
     * @param {?=} message
     * @return {?}
     */
    Ide.prototype.loading = /**
     * @param {?=} message
     * @return {?}
     */
    function (message) {
        if (this.isTop) {
            this.emit('show-loading', message);
        }
        else {
            this.parentInstance.loading(message);
        }
    };
    /**
     * @return {?}
     */
    Ide.prototype.loaded = /**
     * @return {?}
     */
    function () {
        if (this.isTop) {
            this.emit('hide-loading');
        }
        else {
            this.parentInstance.loaded();
        }
    };
    /**
     * @param {?} metadataId
     * @param {?} isDirty
     * @return {?}
     */
    Ide.prototype.setDesignerStatus = /**
     * @param {?} metadataId
     * @param {?} isDirty
     * @return {?}
     */
    function (metadataId, isDirty) {
        if (this.isTop) {
            this.emit('set-designer-status', { id: metadataId, isDirty: isDirty });
        }
        else {
            this.parentInstance.setDesignerStatus(metadataId, isDirty);
        }
    };
    // closeDesigner(metadataId: string) {
    //   if (this.isTop) {
    //     this.emit('close-designer', {id: metadataId});
    //   } else {
    //     this.parentInstance.closeDesigner(metadataId);
    //   }
    // }
    // closeDesigner(metadataId: string) {
    //   if (this.isTop) {
    //     this.emit('close-designer', {id: metadataId});
    //   } else {
    //     this.parentInstance.closeDesigner(metadataId);
    //   }
    // }
    /**
     * @param {?} id
     * @return {?}
     */
    Ide.prototype.notifyCloseTab = 
    // closeDesigner(metadataId: string) {
    //   if (this.isTop) {
    //     this.emit('close-designer', {id: metadataId});
    //   } else {
    //     this.parentInstance.closeDesigner(metadataId);
    //   }
    // }
    /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        if (!this.isTop) {
            return this.parentInstance.notifyCloseTab(id);
        }
        /** @type {?} */
        var result = this.emit('close-tab', id);
        if (result == null) {
            return of(true);
        }
        else if (typeof result === 'boolean') {
            return of(result);
        }
        else {
            return result;
        }
    };
    /**
     * @param {?} workspace
     * @return {?}
     */
    Ide.prototype.registerIDE = /**
     * @param {?} workspace
     * @return {?}
     */
    function (workspace) {
        // 用来把ide view实例与gsp对象绑定。
        // TODO： view实例监听gsp对象的操作放在这里。
        if (typeof workspace.onCloseDesigner === 'function') {
            this.on('close-designer', workspace.onCloseDesigner.bind(workspace));
        }
    };
    /* #region  private method */
    /* #region  private method */
    /**
     * @private
     * @param {?} name
     * @param {?} cb
     * @return {?}
     */
    Ide.prototype.on = /* #region  private method */
    /**
     * @private
     * @param {?} name
     * @param {?} cb
     * @return {?}
     */
    function (name, cb) {
        /** @type {?} */
        var callbacks = this.events.get(name);
        if (!callbacks) {
            callbacks = [cb];
            this.events.set(name, callbacks);
        }
        else {
            callbacks.push(cb);
        }
    };
    /**
     * @private
     * @param {?} name
     * @param {...?} params
     * @return {?}
     */
    Ide.prototype.emit = /**
     * @private
     * @param {?} name
     * @param {...?} params
     * @return {?}
     */
    function (name) {
        var params = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
        }
        var e_1, _a;
        /** @type {?} */
        var callbacks = this.events.get(name);
        if (!callbacks || !callbacks.length) {
            return;
        }
        /** @type {?} */
        var result = true;
        /** @type {?} */
        var observableResult = new Array();
        try {
            for (var callbacks_1 = tslib_1.__values(callbacks), callbacks_1_1 = callbacks_1.next(); !callbacks_1_1.done; callbacks_1_1 = callbacks_1.next()) {
                var cb = callbacks_1_1.value;
                /** @type {?} */
                var cbResult = cb.apply(void 0, tslib_1.__spread(params));
                if (cbResult == null) {
                    continue;
                }
                if (typeof cbResult === 'boolean') {
                    result = result && cbResult;
                }
                else if (typeof cbResult.subscribe === 'function' && cbResult.constructor.name === Observable.name) {
                    // 判断条件不能使用cbResult instanceof Observable,因为cb可能是来自于不同的iframe环境，导致跟这里的Observable构造函数不一样。
                    observableResult.push(cbResult);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (callbacks_1_1 && !callbacks_1_1.done && (_a = callbacks_1.return)) _a.call(callbacks_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (observableResult.length) {
            return forkJoin(tslib_1.__spread(observableResult, [of(result)])).pipe(map(function (results) {
                return results.reduce(function (previous, current) { return previous && current; });
            }));
        }
        else {
            return result;
        }
    };
    return Ide;
}());
/**
 * 提供ide运行所需的方法，供插件使用
 */
export { Ide };
if (false) {
    /**
     * @type {?}
     * @private
     */
    Ide.prototype.frameId;
    /**
     * @type {?}
     * @private
     */
    Ide.prototype.events;
    /**
     * @type {?}
     * @private
     */
    Ide.prototype.modal;
    /**
     * @type {?}
     * @private
     */
    Ide.prototype.commandData;
    /**
     * @type {?}
     * @private
     */
    Ide.prototype.msgr;
}
//# sourceMappingURL=data:application/json;base64,