/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Essential: A handle to a resource that can be disposed. For example,
// {Emitter::on} returns disposables representing subscriptions.
var Disposable = /** @class */ (function () {
    //////
    /// Section: Construction and Destruction
    //////
    // Public: Construct a Disposable
    //
    // * `disposalAction` A {Function} to call when {::dispose} is called for the
    //   first time.
    function Disposable(disposalAction) {
        this.disposalAction = disposalAction;
        this.disposed = false;
    }
    // Public: Ensure that `object` correctly implements the `Disposable`
    // contract.
    //
    // * `object` An {Object} you want to perform the check against.
    //
    // Returns a {Boolean} indicating whether `object` is a valid `Disposable`.
    // Public: Ensure that `object` correctly implements the `Disposable`
    // contract.
    //
    // * `object` An {Object} you want to perform the check against.
    //
    // Returns a {Boolean} indicating whether `object` is a valid `Disposable`.
    /**
     * @param {?} object
     * @return {?}
     */
    Disposable.isDisposable = 
    // Public: Ensure that `object` correctly implements the `Disposable`
    // contract.
    //
    // * `object` An {Object} you want to perform the check against.
    //
    // Returns a {Boolean} indicating whether `object` is a valid `Disposable`.
    /**
     * @param {?} object
     * @return {?}
     */
    function (object) {
        if (object && object.dispose && typeof (object.dispose) === 'function') {
            return true;
        }
        return false;
    };
    // Public: Perform the disposal action, indicating that the resource associated
    // with this disposable is no longer needed.
    //
    // You can call this method more than once, but the disposal action will only
    // be performed the first time.
    // Public: Perform the disposal action, indicating that the resource associated
    // with this disposable is no longer needed.
    //
    // You can call this method more than once, but the disposal action will only
    // be performed the first time.
    /**
     * @return {?}
     */
    Disposable.prototype.dispose = 
    // Public: Perform the disposal action, indicating that the resource associated
    // with this disposable is no longer needed.
    //
    // You can call this method more than once, but the disposal action will only
    // be performed the first time.
    /**
     * @return {?}
     */
    function () {
        if (!this.disposed) {
            this.disposed = true;
            if (this.disposalAction) {
                this.disposalAction();
            }
            this.disposalAction = null;
        }
    };
    return Disposable;
}());
export { Disposable };
if (false) {
    /**
     * @type {?}
     * @private
     */
    Disposable.prototype.disposed;
    /**
     * @type {?}
     * @private
     */
    Disposable.prototype.disposalAction;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzcG9zYWJsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvaWRlLWRldmtpdC8iLCJzb3VyY2VzIjpbImxpYi9pZGVmcmFtZXdvcmsvZ3NwL2V2ZW50LWtpdC9kaXNwb3NhYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUdBO0lBZ0JFLE1BQU07SUFDTix5Q0FBeUM7SUFDekMsTUFBTTtJQUVOLGlDQUFpQztJQUNqQyxFQUFFO0lBQ0YsNkVBQTZFO0lBQzdFLGdCQUFnQjtJQUNoQixvQkFBb0IsY0FBeUI7UUFBekIsbUJBQWMsR0FBZCxjQUFjLENBQVc7UUF0QnJDLGFBQVEsR0FBRyxLQUFLLENBQUM7SUFzQndCLENBQUM7SUFwQmxELHFFQUFxRTtJQUNyRSxZQUFZO0lBQ1osRUFBRTtJQUNGLGdFQUFnRTtJQUNoRSxFQUFFO0lBQ0YsMkVBQTJFOzs7Ozs7Ozs7OztJQUNwRSx1QkFBWTs7Ozs7Ozs7Ozs7SUFBbkIsVUFBb0IsTUFBTTtRQUN4QixJQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsT0FBTyxJQUFJLE9BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssVUFBVSxFQUFFO1lBQ3JFLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFXRCwrRUFBK0U7SUFDL0UsNENBQTRDO0lBQzVDLEVBQUU7SUFDRiw2RUFBNkU7SUFDN0UsK0JBQStCOzs7Ozs7Ozs7SUFDL0IsNEJBQU87Ozs7Ozs7OztJQUFQO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7WUFDckIsSUFBSSxJQUFJLENBQUMsY0FBYyxFQUFFO2dCQUN2QixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7YUFDdkI7WUFDRCxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztTQUM1QjtJQUNILENBQUM7SUFDSCxpQkFBQztBQUFELENBQUMsQUF4Q0QsSUF3Q0M7Ozs7Ozs7SUF0Q0MsOEJBQXlCOzs7OztJQXNCYixvQ0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBFc3NlbnRpYWw6IEEgaGFuZGxlIHRvIGEgcmVzb3VyY2UgdGhhdCBjYW4gYmUgZGlzcG9zZWQuIEZvciBleGFtcGxlLFxyXG4vLyB7RW1pdHRlcjo6b259IHJldHVybnMgZGlzcG9zYWJsZXMgcmVwcmVzZW50aW5nIHN1YnNjcmlwdGlvbnMuXHJcblxyXG5leHBvcnQgY2xhc3MgRGlzcG9zYWJsZSB7XHJcblxyXG4gIHByaXZhdGUgZGlzcG9zZWQgPSBmYWxzZTtcclxuXHJcbiAgLy8gUHVibGljOiBFbnN1cmUgdGhhdCBgb2JqZWN0YCBjb3JyZWN0bHkgaW1wbGVtZW50cyB0aGUgYERpc3Bvc2FibGVgXHJcbiAgLy8gY29udHJhY3QuXHJcbiAgLy9cclxuICAvLyAqIGBvYmplY3RgIEFuIHtPYmplY3R9IHlvdSB3YW50IHRvIHBlcmZvcm0gdGhlIGNoZWNrIGFnYWluc3QuXHJcbiAgLy9cclxuICAvLyBSZXR1cm5zIGEge0Jvb2xlYW59IGluZGljYXRpbmcgd2hldGhlciBgb2JqZWN0YCBpcyBhIHZhbGlkIGBEaXNwb3NhYmxlYC5cclxuICBzdGF0aWMgaXNEaXNwb3NhYmxlKG9iamVjdCk6IGJvb2xlYW4ge1xyXG4gICAgaWYgKG9iamVjdCAmJiBvYmplY3QuZGlzcG9zZSAmJiB0eXBlb2Yob2JqZWN0LmRpc3Bvc2UpID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuICAvLy8vLy9cclxuICAvLy8gU2VjdGlvbjogQ29uc3RydWN0aW9uIGFuZCBEZXN0cnVjdGlvblxyXG4gIC8vLy8vL1xyXG5cclxuICAvLyBQdWJsaWM6IENvbnN0cnVjdCBhIERpc3Bvc2FibGVcclxuICAvL1xyXG4gIC8vICogYGRpc3Bvc2FsQWN0aW9uYCBBIHtGdW5jdGlvbn0gdG8gY2FsbCB3aGVuIHs6OmRpc3Bvc2V9IGlzIGNhbGxlZCBmb3IgdGhlXHJcbiAgLy8gICBmaXJzdCB0aW1lLlxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZGlzcG9zYWxBY3Rpb246ICgpID0+IGFueSkgeyB9XHJcblxyXG4gIC8vIFB1YmxpYzogUGVyZm9ybSB0aGUgZGlzcG9zYWwgYWN0aW9uLCBpbmRpY2F0aW5nIHRoYXQgdGhlIHJlc291cmNlIGFzc29jaWF0ZWRcclxuICAvLyB3aXRoIHRoaXMgZGlzcG9zYWJsZSBpcyBubyBsb25nZXIgbmVlZGVkLlxyXG4gIC8vXHJcbiAgLy8gWW91IGNhbiBjYWxsIHRoaXMgbWV0aG9kIG1vcmUgdGhhbiBvbmNlLCBidXQgdGhlIGRpc3Bvc2FsIGFjdGlvbiB3aWxsIG9ubHlcclxuICAvLyBiZSBwZXJmb3JtZWQgdGhlIGZpcnN0IHRpbWUuXHJcbiAgZGlzcG9zZSgpIHtcclxuICAgIGlmICghdGhpcy5kaXNwb3NlZCkge1xyXG4gICAgICB0aGlzLmRpc3Bvc2VkID0gdHJ1ZTtcclxuICAgICAgaWYgKHRoaXMuZGlzcG9zYWxBY3Rpb24pIHtcclxuICAgICAgICB0aGlzLmRpc3Bvc2FsQWN0aW9uKCk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5kaXNwb3NhbEFjdGlvbiA9IG51bGw7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==