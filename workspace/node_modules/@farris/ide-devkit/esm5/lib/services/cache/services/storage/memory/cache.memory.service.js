/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { CacheStorageAbstract } from '../cache.storage.abstract.service';
/**
 * Service for storing data in local storage
 */
var CacheMemoryStorage = /** @class */ (function (_super) {
    tslib_1.__extends(CacheMemoryStorage, _super);
    function CacheMemoryStorage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._data = {};
        return _this;
    }
    /**
     * @param {?} key
     * @return {?}
     */
    CacheMemoryStorage.prototype.getItem = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        return this._data[key] ? this._data[key] : null;
    };
    /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    CacheMemoryStorage.prototype.setItem = /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    function (key, value) {
        this._data[key] = value;
        return true;
    };
    /**
     * @param {?} key
     * @return {?}
     */
    CacheMemoryStorage.prototype.removeItem = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        delete this._data[key];
    };
    /**
     * @return {?}
     */
    CacheMemoryStorage.prototype.clear = /**
     * @return {?}
     */
    function () {
        this._data = [];
    };
    /**
     * @return {?}
     */
    CacheMemoryStorage.prototype.type = /**
     * @return {?}
     */
    function () {
        return 2 /* MEMORY */;
    };
    /**
     * @return {?}
     */
    CacheMemoryStorage.prototype.isEnabled = /**
     * @return {?}
     */
    function () {
        return true;
    };
    CacheMemoryStorage.decorators = [
        { type: Injectable }
    ];
    return CacheMemoryStorage;
}(CacheStorageAbstract));
export { CacheMemoryStorage };
if (false) {
    /**
     * @type {?}
     * @private
     */
    CacheMemoryStorage.prototype._data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGUubWVtb3J5LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2lkZS1kZXZraXQvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvY2FjaGUvc2VydmljZXMvc3RvcmFnZS9tZW1vcnkvY2FjaGUubWVtb3J5LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDOzs7O0FBT3pFO0lBQ3dDLDhDQUFvQjtJQUQ1RDtRQUFBLHFFQTZCQztRQTFCVyxXQUFLLEdBQXlCLEVBQUUsQ0FBQzs7SUEwQjdDLENBQUM7Ozs7O0lBeEJVLG9DQUFPOzs7O0lBQWQsVUFBZSxHQUFXO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ3BELENBQUM7Ozs7OztJQUVNLG9DQUFPOzs7OztJQUFkLFVBQWUsR0FBVyxFQUFFLEtBQTRCO1FBQ3BELElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7Ozs7O0lBRU0sdUNBQVU7Ozs7SUFBakIsVUFBa0IsR0FBVztRQUN6QixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDM0IsQ0FBQzs7OztJQUVNLGtDQUFLOzs7SUFBWjtRQUNJLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ3BCLENBQUM7Ozs7SUFFTSxpQ0FBSTs7O0lBQVg7UUFDSSxzQkFBZ0M7SUFDcEMsQ0FBQzs7OztJQUVNLHNDQUFTOzs7SUFBaEI7UUFDSSxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDOztnQkE1QkosVUFBVTs7SUE2QlgseUJBQUM7Q0FBQSxBQTdCRCxDQUN3QyxvQkFBb0IsR0E0QjNEO1NBNUJZLGtCQUFrQjs7Ozs7O0lBRTNCLG1DQUF5QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ2FjaGVTdG9yYWdlQWJzdHJhY3QgfSBmcm9tICcuLi9jYWNoZS5zdG9yYWdlLmFic3RyYWN0LnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBDYWNoZVN0b3JhZ2VzRW51bSB9IGZyb20gJy4uLy4uLy4uL2VudW1zL2NhY2hlLnN0b3JhZ2VzLmVudW0nO1xyXG5pbXBvcnQgeyBTdG9yYWdlVmFsdWVJbnRlcmZhY2UgfSBmcm9tICcuLi8uLi8uLi9pbnRlcmZhY2VzL3N0b3JhZ2UudmFsdWUuaW50ZXJmYWNlJztcclxuXHJcbi8qKlxyXG4gKiBTZXJ2aWNlIGZvciBzdG9yaW5nIGRhdGEgaW4gbG9jYWwgc3RvcmFnZVxyXG4gKi9cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgQ2FjaGVNZW1vcnlTdG9yYWdlIGV4dGVuZHMgQ2FjaGVTdG9yYWdlQWJzdHJhY3Qge1xyXG5cclxuICAgIHByaXZhdGUgX2RhdGE6IHtba2V5OiBzdHJpbmddOiBhbnl9ID0ge307XHJcblxyXG4gICAgcHVibGljIGdldEl0ZW0oa2V5OiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZGF0YVtrZXldID8gdGhpcy5fZGF0YVtrZXldIDogbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0SXRlbShrZXk6IHN0cmluZywgdmFsdWU6IFN0b3JhZ2VWYWx1ZUludGVyZmFjZSkge1xyXG4gICAgICAgIHRoaXMuX2RhdGFba2V5XSA9IHZhbHVlO1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyByZW1vdmVJdGVtKGtleTogc3RyaW5nKSB7XHJcbiAgICAgICAgZGVsZXRlIHRoaXMuX2RhdGFba2V5XTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgY2xlYXIoKSB7XHJcbiAgICAgICAgdGhpcy5fZGF0YSA9IFtdO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB0eXBlKCkge1xyXG4gICAgICAgIHJldHVybiBDYWNoZVN0b3JhZ2VzRW51bS5NRU1PUlk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGlzRW5hYmxlZCgpIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxufVxyXG4iXX0=