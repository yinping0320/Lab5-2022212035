/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, EventEmitter, Input, Output, ViewContainerRef, HostListener, Renderer2 } from '@angular/core';
export class SashDirective {
    /**
     * @param {?} _elementRef
     * @param {?} renderer
     * @param {?} _viewContainerRef
     */
    constructor(_elementRef, renderer, _viewContainerRef) {
        this._elementRef = _elementRef;
        this.renderer = renderer;
        this._viewContainerRef = _viewContainerRef;
        this.widthChanged = new EventEmitter();
    }
    /**
     * @return {?}
     */
    onMouseDown() {
        console.log('mousedown');
        this.bindDocumentClickListener();
    }
    /**
     * @return {?}
     */
    onMouseUp() {
        console.log('mouseup');
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
    }
    /**
     * @return {?}
     */
    bindDocumentClickListener() {
        if (!this.documentClickListener) {
            this.documentClickListener = this.renderer.listen('document', 'mouseup', (event) => {
                console.log('mouseup');
                console.log(event);
                this.unbindDocumentMoveListener();
                this.unbindDocumentClickListener();
            });
            if (!this.documentMoveListener) {
                this.bindDocumentClickListener = this.renderer.listen('document', 'mousemove', (event) => {
                    this.panelWidth = event.clientX;
                    /** @type {?} */
                    const newWidth = (/** @type {?} */ (event.clientX));
                    this.widthChanged.emit(newWidth);
                });
            }
        }
    }
    /**
     * @return {?}
     */
    unbindDocumentClickListener() {
        if (this.documentClickListener) {
            this.documentClickListener();
            this.documentClickListener = null;
        }
    }
    /**
     * @return {?}
     */
    unbindDocumentMoveListener() {
        if (this.bindDocumentClickListener) {
            this.bindDocumentClickListener();
            this.bindDocumentClickListener = null;
        }
    }
}
SashDirective.decorators = [
    { type: Directive, args: [{
                selector: '[sash]',
                exportAs: 'sash'
            },] }
];
/** @nocollapse */
SashDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: ViewContainerRef }
];
SashDirective.propDecorators = {
    panelWidth: [{ type: Input }],
    widthChanged: [{ type: Output }],
    onMouseDown: [{ type: HostListener, args: ['mousedown',] }],
    onMouseUp: [{ type: HostListener, args: ['mouseup',] }]
};
if (false) {
    /** @type {?} */
    SashDirective.prototype.documentClickListener;
    /** @type {?} */
    SashDirective.prototype.documentMoveListener;
    /** @type {?} */
    SashDirective.prototype.panelWidth;
    /** @type {?} */
    SashDirective.prototype.widthChanged;
    /**
     * @type {?}
     * @private
     */
    SashDirective.prototype._elementRef;
    /**
     * @type {?}
     * @private
     */
    SashDirective.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    SashDirective.prototype._viewContainerRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FzaC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2lkZS1kZXZraXQvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wYW5lbC9zYXNoLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFBRSxVQUFVLEVBQW1CLFlBQVksRUFBZSxLQUFLLEVBQXFCLE1BQU0sRUFDbkcsZ0JBQWdCLEVBQ2hCLFlBQVksRUFDWixTQUFTLEVBQ1YsTUFBTSxlQUFlLENBQUM7QUFNdkIsTUFBTSxPQUFPLGFBQWE7Ozs7OztJQU14QixZQUFvQixXQUF1QixFQUNqQyxRQUFtQixFQUNuQixpQkFBbUM7UUFGekIsZ0JBQVcsR0FBWCxXQUFXLENBQVk7UUFDakMsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQUNuQixzQkFBaUIsR0FBakIsaUJBQWlCLENBQWtCO1FBTW5DLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztJQUpwRCxDQUFDOzs7O0lBTTBCLFdBQVc7UUFDcEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN6QixJQUFJLENBQUMseUJBQXlCLEVBQUUsQ0FBQztJQUNuQyxDQUFDOzs7O0lBRXdCLFNBQVM7UUFDaEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN6QixDQUFDOzs7O0lBRUQsUUFBUTtJQUNSLENBQUM7Ozs7SUFFRCxXQUFXO0lBQ1gsQ0FBQzs7OztJQUlELHlCQUF5QjtRQUN2QixJQUFJLENBQUMsSUFBSSxDQUFDLHFCQUFxQixFQUFFO1lBQy9CLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsU0FBUyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUU7Z0JBQ2pGLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQ3ZCLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ25CLElBQUksQ0FBQywwQkFBMEIsRUFBRSxDQUFDO2dCQUNsQyxJQUFJLENBQUMsMkJBQTJCLEVBQUUsQ0FBQztZQUNyQyxDQUFDLENBQUMsQ0FBQztZQUVILElBQUksQ0FBQyxJQUFJLENBQUMsb0JBQW9CLEVBQUU7Z0JBQzlCLElBQUksQ0FBQyx5QkFBeUIsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsV0FBVyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUU7b0JBQ3ZGLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQzs7MEJBQzFCLFFBQVEsR0FBRyxtQkFBQSxLQUFLLENBQUMsT0FBTyxFQUFVO29CQUN4QyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDbkMsQ0FBQyxDQUFDLENBQUM7YUFDSjtTQUNGO0lBQ0gsQ0FBQzs7OztJQUVELDJCQUEyQjtRQUN6QixJQUFJLElBQUksQ0FBQyxxQkFBcUIsRUFBRTtZQUM5QixJQUFJLENBQUMscUJBQXFCLEVBQUUsQ0FBQztZQUM3QixJQUFJLENBQUMscUJBQXFCLEdBQUcsSUFBSSxDQUFDO1NBQ25DO0lBQ0gsQ0FBQzs7OztJQUVELDBCQUEwQjtRQUN4QixJQUFJLElBQUksQ0FBQyx5QkFBeUIsRUFBRTtZQUNsQyxJQUFJLENBQUMseUJBQXlCLEVBQUUsQ0FBQztZQUNqQyxJQUFJLENBQUMseUJBQXlCLEdBQUcsSUFBSSxDQUFDO1NBQ3ZDO0lBQ0gsQ0FBQzs7O1lBcEVGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsUUFBUTtnQkFDbEIsUUFBUSxFQUFFLE1BQU07YUFDakI7Ozs7WUFUWSxVQUFVO1lBR3JCLFNBQVM7WUFGVCxnQkFBZ0I7Ozt5QkFxQmYsS0FBSzsyQkFFTCxNQUFNOzBCQUVOLFlBQVksU0FBQyxXQUFXO3dCQUt4QixZQUFZLFNBQUMsU0FBUzs7OztJQW5CdkIsOENBQTJCOztJQUUzQiw2Q0FBMEI7O0lBUTFCLG1DQUE0Qjs7SUFFNUIscUNBQW9EOzs7OztJQVJ4QyxvQ0FBK0I7Ozs7O0lBQ3pDLGlDQUEyQjs7Ozs7SUFDM0IsMENBQTJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEVtYmVkZGVkVmlld1JlZiwgRXZlbnRFbWl0dGVyLCBIb3N0QmluZGluZywgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0LCBPdXRwdXQsIFJlbmRlcmVyLFxyXG4gIFZpZXdDb250YWluZXJSZWYsXHJcbiAgSG9zdExpc3RlbmVyLFxyXG4gIFJlbmRlcmVyMlxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdbc2FzaF0nLFxyXG4gIGV4cG9ydEFzOiAnc2FzaCdcclxufSlcclxuZXhwb3J0IGNsYXNzIFNhc2hEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcblxyXG4gIGRvY3VtZW50Q2xpY2tMaXN0ZW5lcjogYW55O1xyXG5cclxuICBkb2N1bWVudE1vdmVMaXN0ZW5lcjogYW55O1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9lbGVtZW50UmVmOiBFbGVtZW50UmVmLFxyXG4gICAgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyLFxyXG4gICAgcHJpdmF0ZSBfdmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZikge1xyXG5cclxuICB9XHJcblxyXG4gIEBJbnB1dCgpIHBhbmVsV2lkdGg6IG51bWJlcjtcclxuXHJcbiAgQE91dHB1dCgpIHdpZHRoQ2hhbmdlZCA9IG5ldyBFdmVudEVtaXR0ZXI8bnVtYmVyPigpO1xyXG5cclxuICBASG9zdExpc3RlbmVyKCdtb3VzZWRvd24nKSBvbk1vdXNlRG93bigpIHtcclxuICAgIGNvbnNvbGUubG9nKCdtb3VzZWRvd24nKTtcclxuICAgIHRoaXMuYmluZERvY3VtZW50Q2xpY2tMaXN0ZW5lcigpO1xyXG4gIH1cclxuXHJcbiAgQEhvc3RMaXN0ZW5lcignbW91c2V1cCcpIG9uTW91c2VVcCgpIHtcclxuICAgIGNvbnNvbGUubG9nKCdtb3VzZXVwJyk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xyXG4gIH1cclxuXHJcblxyXG5cclxuICBiaW5kRG9jdW1lbnRDbGlja0xpc3RlbmVyKCkge1xyXG4gICAgaWYgKCF0aGlzLmRvY3VtZW50Q2xpY2tMaXN0ZW5lcikge1xyXG4gICAgICB0aGlzLmRvY3VtZW50Q2xpY2tMaXN0ZW5lciA9IHRoaXMucmVuZGVyZXIubGlzdGVuKCdkb2N1bWVudCcsICdtb3VzZXVwJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ21vdXNldXAnKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhldmVudCk7XHJcbiAgICAgICAgdGhpcy51bmJpbmREb2N1bWVudE1vdmVMaXN0ZW5lcigpO1xyXG4gICAgICAgIHRoaXMudW5iaW5kRG9jdW1lbnRDbGlja0xpc3RlbmVyKCk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgaWYgKCF0aGlzLmRvY3VtZW50TW92ZUxpc3RlbmVyKSB7XHJcbiAgICAgICAgdGhpcy5iaW5kRG9jdW1lbnRDbGlja0xpc3RlbmVyID0gdGhpcy5yZW5kZXJlci5saXN0ZW4oJ2RvY3VtZW50JywgJ21vdXNlbW92ZScsIChldmVudCkgPT4ge1xyXG4gICAgICAgICAgdGhpcy5wYW5lbFdpZHRoID0gZXZlbnQuY2xpZW50WDtcclxuICAgICAgICAgIGNvbnN0IG5ld1dpZHRoID0gZXZlbnQuY2xpZW50WCBhcyBudW1iZXI7XHJcbiAgICAgICAgICB0aGlzLndpZHRoQ2hhbmdlZC5lbWl0KG5ld1dpZHRoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdW5iaW5kRG9jdW1lbnRDbGlja0xpc3RlbmVyKCkge1xyXG4gICAgaWYgKHRoaXMuZG9jdW1lbnRDbGlja0xpc3RlbmVyKSB7XHJcbiAgICAgIHRoaXMuZG9jdW1lbnRDbGlja0xpc3RlbmVyKCk7XHJcbiAgICAgIHRoaXMuZG9jdW1lbnRDbGlja0xpc3RlbmVyID0gbnVsbDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHVuYmluZERvY3VtZW50TW92ZUxpc3RlbmVyKCkge1xyXG4gICAgaWYgKHRoaXMuYmluZERvY3VtZW50Q2xpY2tMaXN0ZW5lcikge1xyXG4gICAgICB0aGlzLmJpbmREb2N1bWVudENsaWNrTGlzdGVuZXIoKTtcclxuICAgICAgdGhpcy5iaW5kRG9jdW1lbnRDbGlja0xpc3RlbmVyID0gbnVsbDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19