/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { TreeNode } from '../../models/tree-node';
export class TreeNodeDropSlotComponent {
    /**
     * @param {?} $event
     * @return {?}
     */
    onDragOver($event) {
        $event.preventDefault();
        this.node.treeModel.setDropLocation({ component: this, parentNode: this.node, index: this.dropIndex });
    }
    /**
     * @return {?}
     */
    onDragLeave() {
        if (this.node.treeModel.isDraggingOver(this)) {
            this.node.treeModel.setDropLocation(null);
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onDrop($event) {
        $event.preventDefault();
        // this.node.mouseAction('drop', $event, { node: this.node, index: this.dropIndex });
        console.log('onDropEvent: tree-node-drop-slot');
        this.node.dropMouseAction($event, { parentNode: this.node, index: this.dropIndex });
    }
}
TreeNodeDropSlotComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng2tree-node-drop-slot',
                template: "<div\r\n  class=\"node-drop-slot\"\r\n  [class.is-dragging-over]=\"node.treeModel.isDraggingOver(this)\"\r\n  (drop)=\"onDrop($event)\"\r\n  (dragover)=\"onDragOver($event)\"\r\n  (dragleave)=\"onDragLeave()\"\r\n>\r\n</div>",
                styles: [".node-drop-slot{display:block;height:2px;width:100%}.node-drop-slot.is-dragging-over{background:#dfe;height:20px;border:2px dotted #888}"]
            }] }
];
TreeNodeDropSlotComponent.propDecorators = {
    node: [{ type: Input }],
    dropIndex: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    TreeNodeDropSlotComponent.prototype.node;
    /** @type {?} */
    TreeNodeDropSlotComponent.prototype.dropIndex;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1ub2RlLWRyb3Atc2xvdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2lkZS1kZXZraXQvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9uZzJ0cmVlLWNvbW1vbi9jb21wb25lbnRzL3RyZWUtbm9kZS1kcm9wLXNsb3QvdHJlZS1ub2RlLWRyb3Atc2xvdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQU9sRCxNQUFNLE9BQU8seUJBQXlCOzs7OztJQUtwQyxVQUFVLENBQUMsTUFBTTtRQUNmLE1BQU0sQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUN6RyxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQzVDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUMzQztJQUNILENBQUM7Ozs7O0lBRUQsTUFBTSxDQUFDLE1BQU07UUFDWCxNQUFNLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDeEIscUZBQXFGO1FBQ3JGLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0NBQWtDLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxNQUFNLEVBQUUsRUFBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUM7SUFDckYsQ0FBQzs7O1lBMUJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsd0JBQXdCO2dCQUNsQyw0T0FBbUQ7O2FBRXBEOzs7bUJBR0UsS0FBSzt3QkFDTCxLQUFLOzs7O0lBRE4seUNBQXdCOztJQUN4Qiw4Q0FBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRyZWVOb2RlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3RyZWUtbm9kZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ25nMnRyZWUtbm9kZS1kcm9wLXNsb3QnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi90cmVlLW5vZGUtZHJvcC1zbG90LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi90cmVlLW5vZGUtZHJvcC1zbG90LmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVHJlZU5vZGVEcm9wU2xvdENvbXBvbmVudCB7XHJcblxyXG4gIEBJbnB1dCgpIG5vZGU6IFRyZWVOb2RlO1xyXG4gIEBJbnB1dCgpIGRyb3BJbmRleDogbnVtYmVyO1xyXG5cclxuICBvbkRyYWdPdmVyKCRldmVudCkge1xyXG4gICAgJGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB0aGlzLm5vZGUudHJlZU1vZGVsLnNldERyb3BMb2NhdGlvbih7IGNvbXBvbmVudDogdGhpcywgcGFyZW50Tm9kZTogdGhpcy5ub2RlLCBpbmRleDogdGhpcy5kcm9wSW5kZXggfSk7XHJcbiAgfVxyXG5cclxuICBvbkRyYWdMZWF2ZSgpIHtcclxuICAgIGlmICh0aGlzLm5vZGUudHJlZU1vZGVsLmlzRHJhZ2dpbmdPdmVyKHRoaXMpKSB7XHJcbiAgICAgIHRoaXMubm9kZS50cmVlTW9kZWwuc2V0RHJvcExvY2F0aW9uKG51bGwpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgb25Ecm9wKCRldmVudCkge1xyXG4gICAgJGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAvLyB0aGlzLm5vZGUubW91c2VBY3Rpb24oJ2Ryb3AnLCAkZXZlbnQsIHsgbm9kZTogdGhpcy5ub2RlLCBpbmRleDogdGhpcy5kcm9wSW5kZXggfSk7XHJcbiAgICBjb25zb2xlLmxvZygnb25Ecm9wRXZlbnQ6IHRyZWUtbm9kZS1kcm9wLXNsb3QnKTtcclxuICAgIHRoaXMubm9kZS5kcm9wTW91c2VBY3Rpb24oJGV2ZW50LCB7cGFyZW50Tm9kZTogdGhpcy5ub2RlLCBpbmRleDogdGhpcy5kcm9wSW5kZXggfSk7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=