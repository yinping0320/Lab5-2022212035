/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter } from '@angular/core';
import { TREE_EVENTS } from '../constants/events';
export class TreeNode {
    /**
     * @param {?} data
     * @param {?=} parent
     * @param {?=} treeModel
     */
    constructor(data, parent = null, treeModel) {
        this.data = data;
        this.isVirtualRoot = false;
        this._isActive = false;
        // 变更树节点展示字段，由外部触发
        this.changeDisplayField = new EventEmitter();
        Object.assign(this, data, { parent, treeModel });
        this.treeModel = treeModel;
        this.parent = parent;
        this.level = this.parent ? this.parent.level + 1 : 0;
        if (this.isExpandedField) {
            this.isExpanded = true;
        }
        // 验证字段添加
        // console.log(this.idField);
        // console.log(this.typeField);
        this.childrenField = this.childrenField.map(child => new TreeNode(child, this, treeModel));
        // bug修复：TreeModel.canMoveNode使用parentNode，会出现undefined。这里做兼容
        this.parentNode = this.parent;
    }
    /**
     * @return {?}
     */
    get isExpanded() { return this._isExpanded; }
    /**
     * @param {?} value
     * @return {?}
     */
    set isExpanded(value) { this._isExpanded = value; }
    /**
     * @return {?}
     */
    get isCollapsed() { return !this._isExpanded; }
    /**
     * @return {?}
     */
    get isActive() {
        return this._isActive;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set isActive(value) {
        this._isActive = value;
    }
    // Proxy of treeModel
    /**
     * @return {?}
     */
    get options() {
        return this.treeModel.options;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    fireEvent(event) {
        this.treeModel.fireEvent(event);
    }
    // 表现的更像一个字段，将其封装成属性，并根据开放的读写权限，设置get/set
    /**
     * @return {?}
     */
    get idField() {
        return this[this.options.idField];
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set idField(value) {
        this[this.options.idField] = value;
    }
    /**
     * @return {?}
     */
    get childrenField() {
        return this[this.options.childrenField] || [];
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set childrenField(value) {
        this[this.options.childrenField] = value;
    }
    /**
     * @return {?}
     */
    get displayField() {
        return this[this.options.displayField];
    }
    /**
     * @return {?}
     */
    get typeField() {
        return this[this.options.typeField];
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set typeField(value) {
        this[this.options.typeField] = value;
    }
    /**
     * @return {?}
     */
    get isExpandedField() {
        return this[this.options.isExpandedField];
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set isExpandedField(value) {
        this[this.options.isExpandedField] = value;
    }
    /**
     * @return {?}
     */
    allowDrag() {
        return this.options.allowDrag;
    }
    /**
     * @return {?}
     */
    enableCustomContextMenu() {
        return this.options.enableCustomContextMenu;
    }
    /**
     * @return {?}
     */
    get isRoot() { return this.parent.isVirtualRoot; } // 父节点为空，表示这个一个根节点
    // 父节点为空，表示这个一个根节点
    /**
     * @return {?}
     */
    get realParent() { return this.isRoot ? null : this.parent; }
    /**
     * @return {?}
     */
    get isLeaf() { return !this.childrenField.length; }
    /**
     * @return {?}
     */
    get hasChildren() { return !this.isLeaf; }
    /**
     * @return {?}
     */
    get isFocused() { return this.treeModel.focusedNode == this; }
    /**
     * @return {?}
     */
    getFirstChild() {
        return this.childrenField && this.childrenField[0];
    }
    /**
     * @return {?}
     */
    getLastChild() {
        return this.childrenField && this.childrenField[this.childrenField.length - 1];
    }
    /**
     * @private
     * @return {?}
     */
    _getIndexInParent() {
        return this.parent && this.parent.childrenField.indexOf(this);
    }
    /**
     * @param {?} steps
     * @return {?}
     */
    findAdjacentSibling(steps) {
        /** @type {?} */
        const index = this._getIndexInParent();
        return this.parent && this.parent.childrenField[index + steps];
    }
    /**
     * @return {?}
     */
    findNextSibling() {
        return this.findAdjacentSibling(+1);
    }
    /**
     * @return {?}
     */
    findPreviousSibling() {
        return this.findAdjacentSibling(-1);
    }
    /**
     * @param {?=} goInside
     * @return {?}
     */
    findNextNode(goInside = true) {
        return goInside && this.isExpanded && this.getFirstChild() ||
            this.findNextSibling() ||
            this.parent && this.parent.findNextNode(false);
    }
    /**
     * @return {?}
     */
    findPreviousNode() {
        /** @type {?} */
        const previousSibling = this.findPreviousSibling();
        if (!previousSibling) {
            return this.realParent;
        }
        return previousSibling.isCollapsed
            ? previousSibling
            : previousSibling.getLastChild();
    }
    /**
     * @param {?} node
     * @return {?}
     */
    isDescendantOf(node) {
        if (this === node) {
            return true;
        }
        else {
            return this.parent && this.parent.isDescendantOf(node);
        }
    }
    // 切换方法
    // 切换节点的折叠（Collapsed）与扩展（Expanded）状态
    /**
     * @return {?}
     */
    toggle() {
        this.isExpanded = !this.isExpanded;
        this.fireEvent({ eventName: TREE_EVENTS.onToggle, node: this, isExpanded: this.isExpanded });
    }
    /**
     * @private
     * @return {?}
     */
    _activate() {
        this._isActive = true;
        this.fireEvent({ eventName: TREE_EVENTS.onActivate, node: this });
        this.focus();
    }
    /**
     * @private
     * @return {?}
     */
    _deactivate() {
        this._isActive = false;
        this.fireEvent({ eventName: TREE_EVENTS.onDeactivate, node: this });
    }
    /**
     * @return {?}
     */
    toggleActivated() {
        if (this.isActive) {
            this._deactivate();
            this.treeModel.activeNode = null;
        }
        else {
            if (this.treeModel.activeNode) {
                this.treeModel.activeNode._deactivate();
            }
            this._activate();
            this.treeModel.activeNode = this;
        }
        this.fireEvent({ eventName: TREE_EVENTS.onActiveChanged, node: this, isActive: this.isActive });
    }
    /**
     * @return {?}
     */
    focus() {
        /** @type {?} */
        const previousNode = this.treeModel.focusedNode;
        this.treeModel.focusedNode = this;
        if (previousNode) {
            this.fireEvent({ eventName: TREE_EVENTS.onBlur, node: previousNode });
        }
        this.fireEvent({ eventName: TREE_EVENTS.onFocus, node: this });
    }
    /**
     * @return {?}
     */
    blur() {
        /** @type {?} */
        const previousNode = this.treeModel.focusedNode;
        this.treeModel.focusedNode = null;
        if (previousNode) {
            this.fireEvent({ eventName: TREE_EVENTS.onBlur, node: this });
        }
    }
    // 双击事件
    /**
     * @param {?} rawEvent
     * @return {?}
     */
    doublClick(rawEvent) {
        this.fireEvent({ eventName: TREE_EVENTS.onDoubleClick, node: this, rawEvent });
    }
    // 右键快捷菜单
    /**
     * @param {?} rawEvent
     * @return {?}
     */
    contextMenu(rawEvent) {
        if (this.enableCustomContextMenu()) { // 启用右键菜单功能后，禁用默认的右键菜单
            rawEvent.preventDefault();
        }
        this.fireEvent({ eventName: TREE_EVENTS.onContextMenu, node: this, rawEvent });
    }
    /**
     * @param {?} $event
     * @param {?=} data
     * @return {?}
     */
    dropMouseAction($event, data = null) {
        // 1.设置focus
        this.treeModel.setFocus(true);
        // 2.执行事件处理器
        this._dropEventHandler(this.treeModel, this, $event, data);
        // 3.完成drop操作后，重置drag状态
        this.treeModel.cancelDrag();
    }
    /**
     * @private
     * @param {?} tree
     * @param {?} node
     * @param {?} $event
     * @param {?} to
     * @return {?}
     */
    _dropEventHandler(tree, node, $event, to) {
        tree.moveNode({ from: tree.getDragNode(), to });
        // console.log("dropEventHandler:"+tree.roots);
    }
    // 点击右键菜单项
    /**
     * @param {?} event
     * @return {?}
     */
    rightMenuClicked(event) {
        this.fireEvent({ eventName: TREE_EVENTS.onRightMenuClicked, node: this, rawEvent: event });
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    TreeNode.prototype._isExpanded;
    /** @type {?} */
    TreeNode.prototype.treeModel;
    /** @type {?} */
    TreeNode.prototype.parent;
    /** @type {?} */
    TreeNode.prototype.level;
    /** @type {?} */
    TreeNode.prototype.isVirtualRoot;
    /** @type {?} */
    TreeNode.prototype.elementRef;
    /** @type {?} */
    TreeNode.prototype.parentNode;
    /** @type {?} */
    TreeNode.prototype._isActive;
    /** @type {?} */
    TreeNode.prototype.changeDisplayField;
    /** @type {?} */
    TreeNode.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,