/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, Input, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';
import { TreeNode } from '../../models/tree-node';
import { TreeNodeContentDirective } from '../../directives/tree-node-content.directive';
import { TreeNodeContentItem } from '../../models/tree-node-content-item';
import { TreeNodeContentComponent } from '../tree-node-content/tree-node-content.component';
export class TreeNodeComponent {
    /**
     * @param {?} componentFactoryResolver
     * @param {?} viewContainerRef
     */
    constructor(componentFactoryResolver, viewContainerRef) {
        this.componentFactoryResolver = componentFactoryResolver;
    }
    // TODO: move to draggable directive
    /**
     * @param {?} $event
     * @return {?}
     */
    onDragStart($event) {
        // 设置DragNode: 选择dragNode的父节点作为DragNode，通过index定位到指定的节点
        setTimeout(() => this.node.treeModel.setDragNode({ parentNode: this.node.parent, index: this.nodeIndex }), 30);
    }
    /**
     * @return {?}
     */
    onDragEnd() {
        this.node.treeModel.setDragNode(null);
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onDragOver($event) {
        $event.preventDefault();
        this.node.treeModel.setDropLocation({ component: this, parentNode: this.node, index: 0 });
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onDrop($event) {
        $event.preventDefault();
        // this.node.mouseAction('drop', $event, { node: this.node, index: 0 });
        this.node.treeModel.setFocus(true);
        this.node.dropMouseAction($event, { parentNode: this.node, index: 0 });
        console.log("onDrop: tree-node-component");
    }
    /**
     * @param {?} nodeContentWrapper
     * @param {?} $event
     * @return {?}
     */
    onDragLeave(nodeContentWrapper, $event) {
        if (!this.node.treeModel.isDraggingOver(this)) {
            return;
        }
        /** @type {?} */
        const rect = nodeContentWrapper.getBoundingClientRect();
        // If outside the element
        if ($event.clientX < rect.left || $event.clientX > rect.right ||
            $event.clientY < rect.top || $event.clientY > rect.bottom) {
            this.node.treeModel.setDropLocation(null);
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this._loadTreeNodeContent();
        // 触发变更树节点展示文本
        this.node.changeDisplayField.subscribe(name => {
            if (this.componentRef) {
                this.componentRef.instance.displayData = name;
            }
        });
    }
    /**
     * @return {?}
     */
    ngOnChanges() {
    }
    // 解决使用动态组件出现ExpressionChangedAfterItHasBeenCheckedError问题：
    // https://github.com/angular/angular/issues/17572
    /**
     * @return {?}
     */
    _loadTreeNodeContent() {
        // 使用Item从逻辑上将TreeNodeContentComponent和data关联起来
        /** @type {?} */
        let treeNodeContentItem = new TreeNodeContentItem(TreeNodeContentComponent, this.node.displayField);
        // 使用 ComponentFactoryResolver 来为每个具体的组件解析出一个 ComponentFactory 
        // 然后 ComponentFactory 会为每一个组件创建一个实例
        /** @type {?} */
        let componentFactory = this.componentFactoryResolver.resolveComponentFactory(treeNodeContentItem.component);
        /** @type {?} */
        let viewContainerRef = this.treeNodeContentHost.viewContainerRef;
        viewContainerRef.clear();
        this.componentRef = viewContainerRef.createComponent(componentFactory);
        this.componentRef.instance.displayData = treeNodeContentItem.displayData; // 传入数据
        this.componentRef.instance.originData = this.node.data;
        this.componentRef.instance.rightMenuClicked.subscribe(event => {
            this.node.rightMenuClicked(event);
        });
    }
}
TreeNodeComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng2tree-node',
                template: "<div class=\"tree-node tree-node-level-{{ node.level }}\"\r\n[class.tree-node-expanded]=\"node.isExpanded && node.hasChildren\"\r\n[class.tree-node-collapsed]=\"node.isCollapsed && node.hasChildren\"\r\n[class.tree-node-leaf]=\"node.isLeaf\"\r\n[class.tree-node-active]=\"node.isActive\"\r\n[class.tree-node-focused]=\"node.isFocused\">\r\n\r\n<ng2tree-node-drop-slot\r\n  *ngIf=\"nodeIndex === 0\"\r\n  [dropIndex]=\"nodeIndex\"\r\n  [node]=\"node.parent\"\r\n></ng2tree-node-drop-slot>\r\n\r\n<span\r\n  *ngIf=\"node.hasChildren\"\r\n  class=\"toggle-children\"\r\n  (click)=\"node.toggleActivated()\"\r\n  (click)=\"node.toggle()\"\r\n  >\r\n</span>\r\n<span\r\n  *ngIf=\"!node.hasChildren\"\r\n  class=\"toggle-children-placeholder\">\r\n</span>\r\n\r\n<!-- \u8BBE\u7F6Eclick\u4E8B\u4EF6\u7684\u5904\u7406\u5668 -->\r\n<!-- [draggable]=\"node.allowDrag()\"\r\n(dragstart)=\"onDragStart($event)\"\r\n(drop)=\"onDrop($event)\"\r\n(dragend)=\"onDragEnd()\"\r\n(dragover)=\"onDragOver($event)\"\r\n(dragleave)=\"onDragLeave(nodeContentWrapper, $event)\" -->\r\n<div class=\"node-content-wrapper\"\r\n  #nodeContentWrapper\r\n  (click)=\"node.toggleActivated()\"\r\n  (dblclick)=\"node.doublClick($event)\"\r\n  (contextmenu)=\"node.contextMenu($event)\"\r\n\r\n  >\r\n  <!-- \u8BBE\u7F6E\u52A8\u6001\u7EC4\u4EF6\u7684\u951A\u70B9 -->\r\n  <ng-template treeNodeContent-host></ng-template> \r\n</div>\r\n\r\n<div class=\"tree-children\" [hidden]=\"node.isCollapsed\">\r\n  <ng2tree-node\r\n    *ngFor=\"let child of node.childrenField; let i = index\"\r\n    [node]=\"child\"\r\n    [nodeIndex]=\"i\">\r\n  </ng2tree-node>\r\n</div>\r\n\r\n<ng2tree-node-drop-slot\r\n  [dropIndex]=\"nodeIndex + 1\"\r\n  [node]=\"node.parent\"\r\n></ng2tree-node-drop-slot>\r\n\r\n</div>",
                styles: [".tree-children{padding-left:20px}.node-content-wrapper{display:inline-block;padding:2px 5px;border-radius:2px;transition:background-color .15s,box-shadow .15s;white-space:nowrap}.tree-node-active>.node-content-wrapper{background:#beebff}.tree-node-active.tree-node-focused>.node-content-wrapper{background:#5db0e7}.tree-node-focused>.node-content-wrapper{background:#e7f4f9}.node-content-wrapper:hover{background:#f7fbff}.node-content-wrapper:hover,.tree-node-active>.node-content-wrapper,.tree-node-focused>.node-content-wrapper{box-shadow:inset 0 0 1px #999}.tree-node-expanded .toggle-children{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='%23646465' d='M11 10H5.344L11 4.414V10z'/%3E%3C/svg%3E\")}.tree-node-collapsed .toggle-children{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='%23646465' d='M6 4v8l4-4-4-4zm1 2.414L8.586 8 7 9.586V6.414z'/%3E%3C/svg%3E\")}.toggle-children{height:16px;width:16px;background-size:16px;display:inline-block;position:relative;background-repeat:no-repeat;background-position:center;right:-6px;top:4px;overflow:hidden}.toggle-children-placeholder{display:inline-block;height:10px;width:10px;position:relative;top:1px}.tree-node-icon{width:1rem}.tree-node{white-space:nowrap}"]
            }] }
];
/** @nocollapse */
TreeNodeComponent.ctorParameters = () => [
    { type: ComponentFactoryResolver },
    { type: ViewContainerRef }
];
TreeNodeComponent.propDecorators = {
    node: [{ type: Input }],
    nodeIndex: [{ type: Input }],
    treeNodeContentHost: [{ type: ViewChild, args: [TreeNodeContentDirective,] }]
};
if (false) {
    /** @type {?} */
    TreeNodeComponent.prototype.node;
    /** @type {?} */
    TreeNodeComponent.prototype.nodeIndex;
    /** @type {?} */
    TreeNodeComponent.prototype.componentRef;
    /** @type {?} */
    TreeNodeComponent.prototype.treeNodeContentHost;
    /**
     * @type {?}
     * @private
     */
    TreeNodeComponent.prototype.componentFactoryResolver;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1ub2RlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvaWRlLWRldmtpdC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL25nMnRyZWUtY29tbW9uL2NvbXBvbmVudHMvdHJlZS1ub2RlL3RyZWUtbm9kZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSx3QkFBd0IsRUFBRSxnQkFBZ0IsRUFBZ0IsTUFBTSxlQUFlLENBQUM7QUFDOUgsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ2xELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQ3hGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBTzVGLE1BQU0sT0FBTyxpQkFBaUI7Ozs7O0lBaUQ1QixZQUFvQix3QkFBa0QsRUFDcEUsZ0JBQWtDO1FBRGhCLDZCQUF3QixHQUF4Qix3QkFBd0IsQ0FBMEI7SUFHdEUsQ0FBQzs7Ozs7O0lBM0NELFdBQVcsQ0FBQyxNQUFNO1FBQ2hCLHVEQUF1RDtRQUN2RCxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLEVBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNqSCxDQUFDOzs7O0lBRUQsU0FBUztRQUNQLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN4QyxDQUFDOzs7OztJQUVELFVBQVUsQ0FBQyxNQUFNO1FBQ2Ys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Z0JBQ1QsUUFBUSxFQUFFLGNBQWM7Z0JBQ3hCLG92REFBeUM7O2FBRTFDOzs7O1lBVjZDLHdCQUF3QjtZQUFFLGdCQUFnQjs7O21CQWFyRixLQUFLO3dCQUNMLEtBQUs7a0NBNENMLFNBQVMsU0FBQyx3QkFBd0I7Ozs7SUE3Q25DLGlDQUF3Qjs7SUFDeEIsc0NBQTJCOztJQUczQix5Q0FBcUQ7O0lBeUNyRCxnREFBbUY7Ozs7O0lBRXZFLHFEQUEwRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlld0NoaWxkLCBPbkluaXQsIElucHV0LCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIFZpZXdDb250YWluZXJSZWYsIENvbXBvbmVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUcmVlTm9kZSB9IGZyb20gJy4uLy4uL21vZGVscy90cmVlLW5vZGUnO1xyXG5pbXBvcnQgeyBUcmVlTm9kZUNvbnRlbnREaXJlY3RpdmUgfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL3RyZWUtbm9kZS1jb250ZW50LmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IFRyZWVOb2RlQ29udGVudEl0ZW0gfSBmcm9tICcuLi8uLi9tb2RlbHMvdHJlZS1ub2RlLWNvbnRlbnQtaXRlbSc7XHJcbmltcG9ydCB7IFRyZWVOb2RlQ29udGVudENvbXBvbmVudCB9IGZyb20gJy4uL3RyZWUtbm9kZS1jb250ZW50L3RyZWUtbm9kZS1jb250ZW50LmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ25nMnRyZWUtbm9kZScsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3RyZWUtbm9kZS5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vdHJlZS1ub2RlLmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVHJlZU5vZGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBASW5wdXQoKSBub2RlOiBUcmVlTm9kZTtcclxuICBASW5wdXQoKSBub2RlSW5kZXg6IG51bWJlcjtcclxuXHJcbiAgLy8g6IqC54K55YaF5a6557uE5Lu25a6e5L6LXHJcbiAgY29tcG9uZW50UmVmOiBDb21wb25lbnRSZWY8VHJlZU5vZGVDb250ZW50Q29tcG9uZW50PjtcclxuXHJcbiAgLy8gVE9ETzogbW92ZSB0byBkcmFnZ2FibGUgZGlyZWN0aXZlXHJcbiAgb25EcmFnU3RhcnQoJGV2ZW50KSB7XHJcbiAgICAvLyDorr7nva5EcmFnTm9kZTog6YCJ5oupZHJhZ05vZGXnmoTniLboioLngrnkvZzkuLpEcmFnTm9kZe+8jOmAmui/h2luZGV45a6a5L2N5Yiw5oyH5a6a55qE6IqC54K5XHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHRoaXMubm9kZS50cmVlTW9kZWwuc2V0RHJhZ05vZGUoeyBwYXJlbnROb2RlOiB0aGlzLm5vZGUucGFyZW50LCBpbmRleDogdGhpcy5ub2RlSW5kZXggfSksIDMwKTtcclxuICB9XHJcblxyXG4gIG9uRHJhZ0VuZCgpIHtcclxuICAgIHRoaXMubm9kZS50cmVlTW9kZWwuc2V0RHJhZ05vZGUobnVsbCk7XHJcbiAgfVxyXG5cclxuICBvbkRyYWdPdmVyKCRldmVudCkge1xyXG4gICAgJGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB0aGlzLm5vZGUudHJlZU1vZGVsLnNldERyb3BMb2NhdGlvbih7IGNvbXBvbmVudDogdGhpcywgcGFyZW50Tm9kZTogdGhpcy5ub2RlLCBpbmRleDogMCB9KTtcclxuICB9XHJcblxyXG4gIG9uRHJvcCgkZXZlbnQpIHtcclxuICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgLy8gdGhpcy5ub2RlLm1vdXNlQWN0aW9uKCdkcm9wJywgJGV2ZW50LCB7IG5vZGU6IHRoaXMubm9kZSwgaW5kZXg6IDAgfSk7XHJcbiAgICB0aGlzLm5vZGUudHJlZU1vZGVsLnNldEZvY3VzKHRydWUpO1xyXG4gICAgdGhpcy5ub2RlLmRyb3BNb3VzZUFjdGlvbigkZXZlbnQseyBwYXJlbnROb2RlOiB0aGlzLm5vZGUsIGluZGV4OiAwIH0pO1xyXG4gICAgY29uc29sZS5sb2coXCJvbkRyb3A6IHRyZWUtbm9kZS1jb21wb25lbnRcIik7XHJcbiAgfVxyXG5cclxuICBvbkRyYWdMZWF2ZShub2RlQ29udGVudFdyYXBwZXIsICRldmVudCkge1xyXG4gICAgaWYgKCF0aGlzLm5vZGUudHJlZU1vZGVsLmlzRHJhZ2dpbmdPdmVyKHRoaXMpKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgY29uc3QgcmVjdCA9IG5vZGVDb250ZW50V3JhcHBlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuXHJcbiAgICAvLyBJZiBvdXRzaWRlIHRoZSBlbGVtZW50XHJcbiAgICBpZiAoJGV2ZW50LmNsaWVudFggPCByZWN0LmxlZnQgfHwgJGV2ZW50LmNsaWVudFggPiByZWN0LnJpZ2h0IHx8XHJcbiAgICAgICAgJGV2ZW50LmNsaWVudFkgPCByZWN0LnRvcCB8fCAkZXZlbnQuY2xpZW50WSA+IHJlY3QuYm90dG9tKSB7XHJcblxyXG4gICAgICB0aGlzLm5vZGUudHJlZU1vZGVsLnNldERyb3BMb2NhdGlvbihudWxsKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIFZpZXdDaGlsZCDmmK/lsZ7mgKfoo4XppbDlmajvvIznlKjmnaXku47mqKHmnb/op4blm77kuK3ojrflj5bljLnphY3nmoTlhYPntKBcclxuICBAVmlld0NoaWxkKFRyZWVOb2RlQ29udGVudERpcmVjdGl2ZSkgdHJlZU5vZGVDb250ZW50SG9zdDogVHJlZU5vZGVDb250ZW50RGlyZWN0aXZlO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvbXBvbmVudEZhY3RvcnlSZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxyXG4gICAgdmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZikge1xyXG4gICAgICBcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5fbG9hZFRyZWVOb2RlQ29udGVudCgpO1xyXG5cclxuICAgIC8vIOinpuWPkeWPmOabtOagkeiKgueCueWxleekuuaWh+acrFxyXG4gICAgdGhpcy5ub2RlLmNoYW5nZURpc3BsYXlGaWVsZC5zdWJzY3JpYmUobmFtZSA9PiB7XHJcbiAgICAgIGlmICh0aGlzLmNvbXBvbmVudFJlZikge1xyXG4gICAgICAgIHRoaXMuY29tcG9uZW50UmVmLmluc3RhbmNlLmRpc3BsYXlEYXRhID0gbmFtZTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcygpIHtcclxuXHJcbiAgfVxyXG5cclxuICAvLyDop6PlhrPkvb/nlKjliqjmgIHnu4Tku7blh7rnjrBFeHByZXNzaW9uQ2hhbmdlZEFmdGVySXRIYXNCZWVuQ2hlY2tlZEVycm9y6Zeu6aKY77yaXHJcbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvYW5ndWxhci9pc3N1ZXMvMTc1NzJcclxuICBfbG9hZFRyZWVOb2RlQ29udGVudCgpIHtcclxuXHJcbiAgICAvLyDkvb/nlKhJdGVt5LuO6YC76L6R5LiK5bCGVHJlZU5vZGVDb250ZW50Q29tcG9uZW505ZKMZGF0YeWFs+iBlOi1t+adpVxyXG4gICAgbGV0IHRyZWVOb2RlQ29udGVudEl0ZW06IFRyZWVOb2RlQ29udGVudEl0ZW0gPSBuZXcgVHJlZU5vZGVDb250ZW50SXRlbShcclxuICAgICAgVHJlZU5vZGVDb250ZW50Q29tcG9uZW50LHRoaXMubm9kZS5kaXNwbGF5RmllbGQpO1xyXG4gICAgXHJcbiAgICAvLyDkvb/nlKggQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyIOadpeS4uuavj+S4quWFt+S9k+eahOe7hOS7tuino+aekOWHuuS4gOS4qiBDb21wb25lbnRGYWN0b3J5IFxyXG4gICAgLy8g54S25ZCOIENvbXBvbmVudEZhY3Rvcnkg5Lya5Li65q+P5LiA5Liq57uE5Lu25Yib5bu65LiA5Liq5a6e5L6LXHJcbiAgICBsZXQgY29tcG9uZW50RmFjdG9yeSA9IHRoaXMuY29tcG9uZW50RmFjdG9yeVJlc29sdmVyLnJlc29sdmVDb21wb25lbnRGYWN0b3J5KHRyZWVOb2RlQ29udGVudEl0ZW0uY29tcG9uZW50KTtcclxuXHJcbiAgICBsZXQgdmlld0NvbnRhaW5lclJlZiA9IHRoaXMudHJlZU5vZGVDb250ZW50SG9zdC52aWV3Q29udGFpbmVyUmVmO1xyXG4gICAgdmlld0NvbnRhaW5lclJlZi5jbGVhcigpO1xyXG5cclxuICAgIHRoaXMuY29tcG9uZW50UmVmID0gdmlld0NvbnRhaW5lclJlZi5jcmVhdGVDb21wb25lbnQoY29tcG9uZW50RmFjdG9yeSk7XHJcblxyXG4gICAgdGhpcy5jb21wb25lbnRSZWYuaW5zdGFuY2UuZGlzcGxheURhdGEgPSB0cmVlTm9kZUNvbnRlbnRJdGVtLmRpc3BsYXlEYXRhOyAvLyDkvKDlhaXmlbDmja5cclxuICAgIHRoaXMuY29tcG9uZW50UmVmLmluc3RhbmNlLm9yaWdpbkRhdGEgPSB0aGlzLm5vZGUuZGF0YTtcclxuICAgIHRoaXMuY29tcG9uZW50UmVmLmluc3RhbmNlLnJpZ2h0TWVudUNsaWNrZWQuc3Vic2NyaWJlKGV2ZW50ID0+IHtcclxuICAgICAgdGhpcy5ub2RlLnJpZ2h0TWVudUNsaWNrZWQoZXZlbnQpO1xyXG4gICAgfSk7XHJcblxyXG4gIH1cclxuXHJcbn1cclxuIl19