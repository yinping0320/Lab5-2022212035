/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input } from '@angular/core';
import { NavbarState } from '../navbar/navbar.state';
export class DropdownItemDirective {
    /**
     * @param {?} _elementRef
     * @param {?} barState
     */
    constructor(_elementRef, barState) {
        this._elementRef = _elementRef;
        this.barState = barState;
        this.isDisabled = null;
        this.onHover = new EventEmitter();
        this.onClick = new EventEmitter();
        this.barState.addMenuItem(this);
    }
    /**
     * @return {?}
     */
    get elementRef() {
        return this._elementRef;
    }
    /**
     * @return {?}
     */
    onMouseOver() {
        this.onHover.emit();
    }
    /**
     * @return {?}
     */
    onItemClick() {
        if (this.isDisabled) {
            return;
        }
        this.onClick.emit(this.command);
    }
}
DropdownItemDirective.decorators = [
    { type: Directive, args: [{
                selector: '[dropdownItem]',
                exportAs: 'dropdownItem'
            },] }
];
/** @nocollapse */
DropdownItemDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: NavbarState }
];
DropdownItemDirective.propDecorators = {
    isDisabled: [{ type: HostBinding, args: ['class.disabled',] }, { type: Input }],
    command: [{ type: Input, args: ['dropdownItem',] }],
    onMouseOver: [{ type: HostListener, args: ['mouseover',] }],
    onItemClick: [{ type: HostListener, args: ['click',] }]
};
if (false) {
    /** @type {?} */
    DropdownItemDirective.prototype.isDisabled;
    /** @type {?} */
    DropdownItemDirective.prototype.command;
    /** @type {?} */
    DropdownItemDirective.prototype.onHover;
    /** @type {?} */
    DropdownItemDirective.prototype.onClick;
    /**
     * @type {?}
     * @private
     */
    DropdownItemDirective.prototype._elementRef;
    /**
     * @type {?}
     * @private
     */
    DropdownItemDirective.prototype.barState;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24taXRlbS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2lkZS1kZXZraXQvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9kcm9wZG93bi9kcm9wZG93bi1pdGVtLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3BHLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQU1uRCxNQUFNLE9BQU8scUJBQXFCOzs7OztJQWNoQyxZQUFvQixXQUF1QixFQUN2QixRQUFxQjtRQURyQixnQkFBVyxHQUFYLFdBQVcsQ0FBWTtRQUN2QixhQUFRLEdBQVIsUUFBUSxDQUFhO1FBYkQsZUFBVSxHQUFZLElBQUksQ0FBQztRQVNuRSxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUNsQyxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUluQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7O0lBWEQsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzFCLENBQUM7Ozs7SUFZRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN0QixDQUFDOzs7O0lBR0QsV0FBVztRQUNULElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNuQixPQUFPO1NBQ1I7UUFDRCxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7O1lBbENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQixRQUFRLEVBQUUsY0FBYzthQUN6Qjs7OztZQU5rQixVQUFVO1lBQ3JCLFdBQVc7Ozt5QkFRaEIsV0FBVyxTQUFDLGdCQUFnQixjQUFHLEtBQUs7c0JBRXBDLEtBQUssU0FBQyxjQUFjOzBCQWVwQixZQUFZLFNBQUMsV0FBVzswQkFLeEIsWUFBWSxTQUFDLE9BQU87Ozs7SUF0QnJCLDJDQUFtRTs7SUFFbkUsd0NBQStCOztJQU8vQix3Q0FBa0M7O0lBQ2xDLHdDQUFxQzs7Ozs7SUFFekIsNENBQStCOzs7OztJQUMvQix5Q0FBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBIb3N0QmluZGluZywgSG9zdExpc3RlbmVyLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7TmF2YmFyU3RhdGV9IGZyb20gJy4uL25hdmJhci9uYXZiYXIuc3RhdGUnO1xyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdbZHJvcGRvd25JdGVtXScsXHJcbiAgZXhwb3J0QXM6ICdkcm9wZG93bkl0ZW0nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEcm9wZG93bkl0ZW1EaXJlY3RpdmUge1xyXG5cclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmRpc2FibGVkJykgQElucHV0KCkgaXNEaXNhYmxlZDogYm9vbGVhbiA9IG51bGw7XHJcblxyXG4gIEBJbnB1dCgnZHJvcGRvd25JdGVtJykgY29tbWFuZDtcclxuXHJcbiAgZ2V0IGVsZW1lbnRSZWYoKTogRWxlbWVudFJlZiB7XHJcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudFJlZjtcclxuICB9XHJcblxyXG5cclxuICBvbkhvdmVyID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcbiAgb25DbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9lbGVtZW50UmVmOiBFbGVtZW50UmVmLFxyXG4gICAgICAgICAgICAgIHByaXZhdGUgYmFyU3RhdGU6IE5hdmJhclN0YXRlKSB7XHJcbiAgICB0aGlzLmJhclN0YXRlLmFkZE1lbnVJdGVtKHRoaXMpO1xyXG4gIH1cclxuXHJcbiAgQEhvc3RMaXN0ZW5lcignbW91c2VvdmVyJylcclxuICBvbk1vdXNlT3ZlcigpOiB2b2lkIHtcclxuICAgIHRoaXMub25Ib3Zlci5lbWl0KCk7XHJcbiAgfVxyXG5cclxuICBASG9zdExpc3RlbmVyKCdjbGljaycpXHJcbiAgb25JdGVtQ2xpY2soKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5pc0Rpc2FibGVkKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHRoaXMub25DbGljay5lbWl0KHRoaXMuY29tbWFuZCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==