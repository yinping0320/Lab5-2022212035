/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ComponentFactoryResolver, Directive, EventEmitter, HostListener, Injector, Input, NgZone, Output, Renderer2 } from '@angular/core';
import { reqAnimFrame } from '@farris/ui-common';
import { InputGroupComponent } from '@farris/ui-input-group';
import { debounceTime } from 'rxjs/operators';
import { SearchBoxComponent } from '../search-box.component';
import { trim } from 'lodash-es';
import { SearchPanelComponent } from './search-panel.component';
export class SearchPanelDirective {
    /**
     * @param {?} injector
     * @param {?} ngzone
     * @param {?} render
     * @param {?} inputRef
     * @param {?} searchBoxRef
     * @param {?} cfr
     */
    constructor(injector, ngzone, render, inputRef, searchBoxRef, cfr) {
        this.injector = injector;
        this.ngzone = ngzone;
        this.render = render;
        this.inputRef = inputRef;
        this.searchBoxRef = searchBoxRef;
        this.cfr = cfr;
        this.maxFields = 5;
        /**
         * 启用 任意字段
         */
        this.useAnyField = true;
        this.escHandler = new EventEmitter();
        this.maxPanelItems = 10;
        this.minPanelWidth = 270;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        if ((!this.fields || !this.fields.length) && !this.useAnyField) {
            return;
        }
        this.inputRef.inputClick.subscribe((/**
         * @param {?} e
         * @return {?}
         */
        (e) => {
            e.stopPropagation();
        }));
        this.inputRef.valueChange.pipe(debounceTime(50)).subscribe((/**
         * @param {?} val
         * @return {?}
         */
        (val) => {
            if (trim(val)) {
                // 值变化显示查询面板
                if (!this.panelElement) {
                    this.createDataPanel();
                    this.searchPanelRef.instance.setActiveItem(0);
                }
                this.searchPanelRef.instance.setValue(val);
            }
            else {
                if (this.panelElement) {
                    this.hide();
                }
            }
        }));
        this.searchBoxRef.clear.subscribe((/**
         * @return {?}
         */
        () => {
            this.hide();
        }));
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.searchBoxRef.overLayService.destory(this.searchBoxRef.el.nativeElement);
    }
    /**
     * @private
     * @return {?}
     */
    removePanelElement() {
        document.body.removeChild(this.panelElement);
        this.panelElement = null;
        if (this.searchPanelRef) {
            this.searchPanelRef.destroy();
            this.searchPanelRef = null;
        }
    }
    /**
     * @param {?=} e
     * @return {?}
     */
    hide(e) {
        reqAnimFrame((/**
         * @return {?}
         */
        () => {
            this.inputRef.value = '';
            if (this.panelElement) {
                if (e && (e.type === 'mousewheel' || e.type === 'wheel')) {
                    this.removePanelElement();
                }
                else {
                    this.panelElement.classList.remove('f-area-show');
                    setTimeout((/**
                     * @return {?}
                     */
                    () => {
                        this.removePanelElement();
                    }), 120);
                }
                this.searchBoxRef.overLayService.destory(this.searchBoxRef.el.nativeElement);
            }
        }));
    }
    /**
     * @private
     * @param {?=} updateTopPosition
     * @return {?}
     */
    setPanelPosition(updateTopPosition = true) {
        if (this.panelElement) {
            const { maxWidth, left, top, height } = this.getPanelSize();
            this.panelElement.style.minWidth = `${this.minPanelWidth}px`;
            this.panelElement.style.maxWidth = `${maxWidth}px`;
            this.panelElement.style.maxHeight = `${height}px`;
            if (updateTopPosition) {
                this.panelElement.style.top = `${top}px`;
            }
            this.panelElement.style.left = `${left}px`;
        }
    }
    /**
     * @private
     * @return {?}
     */
    createDataPanel() {
        this.panelElement = document.createElement('div');
        this.panelElement.classList.add('overlay-pane', 'f-search-box-panel', 'f-area-hide');
        /** @type {?} */
        const zindex = '' + this.searchBoxRef.commonUtils.getFloatingLayerIndex();
        document.body.appendChild(this.panelElement);
        this.setPanelPosition();
        this.panelElement.style.zIndex = zindex;
        this.panelElement.style.overflow = 'hidden';
        // 创建数据展示组件
        /** @type {?} */
        const cmpFact = this.cfr.resolveComponentFactory(SearchPanelComponent);
        this.searchPanelRef = cmpFact.create(this.injector);
        if (this.useAnyField && !this.fields.find((/**
         * @param {?} n
         * @return {?}
         */
        n => n.code === '*'))) {
            /** @type {?} */
            const anyfieldsName = this.searchBoxRef.localeSer.getValue('searchbox.anyFields');
            this.fields.splice(0, 0, { code: '*', name: anyfieldsName });
        }
        this.searchPanelRef.instance.fields = this.fields;
        this.panelElement.appendChild(this.searchPanelRef.location.nativeElement);
        this.searchPanelRef.changeDetectorRef.detectChanges();
        this.searchPanelRef.instance.searchKeyWord = this.inputRef.value;
        this.searchPanelRef.instance.itemClick.subscribe((/**
         * @param {?} e
         * @return {?}
         */
        (e) => {
            const { data } = e;
            this.selectItem(data);
        }));
        this.searchPanelRef.instance.closepanel.subscribe((/**
         * @return {?}
         */
        () => {
            this.hide();
        }));
        // 注册鼠标滚轮，点击事件，用于隐藏Panel
        this.searchBoxRef.overLayService.registerMouseEvent(this.searchBoxRef.el.nativeElement, (/**
         * @param {?} e
         * @return {?}
         */
        (e) => {
            if (!this.panelElement || e.target['closest']('.f-search-box-panel')) {
                return;
            }
            if (this.inputRef && this.inputRef.textbox.nativeElement === e.target) {
                return false;
            }
            // 输入框内有文本时，如果不允许关闭弹出面板，可放开
            // if (this.inputRef.value) {
            //     return;
            // }
            this.hide(e);
        }));
        if (this.searchPanelRef.instance.fields.length + 1 < this.maxPanelItems) {
            /** @type {?} */
            let newHeight = this.searchPanelRef.instance.itemsContainer.nativeElement.querySelector('ul').offsetHeight + 40;
            this.searchPanelRef.instance.itemsContainer.nativeElement.style.height = `${newHeight}px`;
            if (this.panelElement) {
                if (this.panelElement.style.transformOrigin.indexOf('bottom') > -1) {
                    this.panelElement.style.top = `${this.getInputSizeInfo().top - newHeight - 5}px`;
                }
                this.panelElement.style.height = 'auto';
            }
        }
        else {
            this.searchPanelRef.instance.itemsContainer.nativeElement.style.height = '100%';
            if (this.panelElement) {
                this.render.removeStyle(this.panelElement, 'height');
            }
        }
        this.panelElement.classList.add('f-area-show');
    }
    /**
     * @private
     * @param {?} data
     * @return {?}
     */
    selectItem(data) {
        if (!data) {
            return;
        }
        this.searchBoxRef.select(Object.assign({}, data, { value: this.inputRef.value }));
        this.hide();
        this.inputRef.focus();
    }
    /**
     * @private
     * @return {?}
     */
    calculationPanelHeight() {
        return this.maxPanelItems * 30 + 15;
    }
    /**
     * @private
     * @return {?}
     */
    getInputSizeInfo() {
        /** @type {?} */
        const el = this.searchBoxRef.enableFloat ? this.searchBoxRef.shadowBox : this.searchBoxRef.container;
        return el.nativeElement.getBoundingClientRect();
    }
    /**
     * @private
     * @return {?}
     */
    getPanelSize() {
        let { width, height, top, left } = this.getInputSizeInfo();
        /** @type {?} */
        const bottom = window.innerHeight - height - top;
        /** @type {?} */
        let panelHeight = this.calculationPanelHeight();
        /** @type {?} */
        const h = top > bottom ? top : bottom;
        if (bottom > panelHeight) {
            top = top + height;
            // 面板由上向下展开
            this.panelElement.style.transformOrigin = '100% top';
        }
        else {
            if (top > bottom) {
                if (h < panelHeight) {
                    panelHeight = h - 10;
                    top = 10;
                }
                else {
                    top = top - parseInt('' + panelHeight, 10) - 5;
                }
                // 面板由下向上展开
                this.panelElement.style.transformOrigin = '100% bottom';
            }
            else {
                if (h < panelHeight) {
                    panelHeight = h - 10;
                }
                top = top + height;
            }
        }
        /** @type {?} */
        let _width = width < this.minPanelWidth ? this.minPanelWidth : width;
        if (window.innerWidth - left < _width) {
            left = left + width - _width;
        }
        return { width: _width, top, height: panelHeight, left, maxWidth: Math.floor(window.innerWidth - left - 10) };
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    registerKeyboardEvent($event) {
        /** @type {?} */
        const rows = this.fields;
        if ($event.code === 'ArrowUp' || $event.code === 'ArrowDown') {
            $event.preventDefault();
            $event.stopPropagation();
            if (this.searchPanelRef) {
                /** @type {?} */
                const idx = this.searchPanelRef.instance.activeIndex;
                /** @type {?} */
                const setActiveItem = (/**
                 * @param {?} index
                 * @return {?}
                 */
                (index) => {
                    this.searchPanelRef.instance.setActiveItem(index);
                });
                if ($event.code === 'ArrowUp') { // up
                    if (idx > -1) {
                        /** @type {?} */
                        let prevIdx = idx - 1;
                        if (prevIdx < 0) {
                            prevIdx = rows.length - 1;
                        }
                        setActiveItem(prevIdx);
                    }
                    else {
                        setActiveItem(rows.length - 1);
                    }
                }
                if ($event.code === 'ArrowDown') { // down
                    // down
                    /** @type {?} */
                    let nextIdx = idx + 1;
                    if (nextIdx >= rows.length) {
                        nextIdx = 0;
                    }
                    setActiveItem(nextIdx);
                }
            }
        }
        if ($event.code === 'Backspace') {
            if (!this.inputRef.value) {
                if (this.searchBoxRef.displayTextList && this.searchBoxRef.displayTextList.length) {
                    $event.preventDefault();
                    $event.stopPropagation();
                    /** @type {?} */
                    const removeItem = this.searchBoxRef.displayTextList[this.searchBoxRef.displayTextList.length - 1];
                    if (removeItem) {
                        this.searchBoxRef.remove(removeItem.code);
                        if (this.searchPanelRef) {
                            this.searchPanelRef.changeDetectorRef.detectChanges();
                        }
                    }
                }
            }
        }
        if ($event.key === 'Enter') {
            if (rows && rows.length && this.panelElement) {
                /** @type {?} */
                const idx = this.searchPanelRef.instance.activeIndex;
                /** @type {?} */
                const data = rows[idx];
                this.selectItem(data);
            }
            else {
                this.searchBoxRef.onSubmit($event);
            }
        }
        if ($event.key === 'Escape') {
            if (this.panelElement) {
                this.hide();
            }
            else {
                this.escHandler.emit();
            }
        }
    }
}
SearchPanelDirective.decorators = [
    { type: Directive, args: [{ selector: '[search-box-panel]' },] }
];
/** @nocollapse */
SearchPanelDirective.ctorParameters = () => [
    { type: Injector },
    { type: NgZone },
    { type: Renderer2 },
    { type: InputGroupComponent },
    { type: SearchBoxComponent },
    { type: ComponentFactoryResolver }
];
SearchPanelDirective.propDecorators = {
    fields: [{ type: Input, args: ['search-box-panel',] }],
    maxFields: [{ type: Input }],
    useAnyField: [{ type: Input }],
    escHandler: [{ type: Output }],
    registerKeyboardEvent: [{ type: HostListener, args: ['keydown', ['$event'],] }]
};
if (false) {
    /** @type {?} */
    SearchPanelDirective.prototype.fields;
    /** @type {?} */
    SearchPanelDirective.prototype.maxFields;
    /**
     * 启用 任意字段
     * @type {?}
     */
    SearchPanelDirective.prototype.useAnyField;
    /** @type {?} */
    SearchPanelDirective.prototype.escHandler;
    /**
     * @type {?}
     * @private
     */
    SearchPanelDirective.prototype.panelElement;
    /**
     * @type {?}
     * @private
     */
    SearchPanelDirective.prototype.searchPanelRef;
    /**
     * @type {?}
     * @private
     */
    SearchPanelDirective.prototype.maxPanelItems;
    /**
     * @type {?}
     * @private
     */
    SearchPanelDirective.prototype.minPanelWidth;
    /**
     * @type {?}
     * @private
     */
    SearchPanelDirective.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    SearchPanelDirective.prototype.ngzone;
    /**
     * @type {?}
     * @private
     */
    SearchPanelDirective.prototype.render;
    /**
     * @type {?}
     * @private
     */
    SearchPanelDirective.prototype.inputRef;
    /**
     * @type {?}
     * @private
     */
    SearchPanelDirective.prototype.searchBoxRef;
    /**
     * @type {?}
     * @private
     */
    SearchPanelDirective.prototype.cfr;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLXBhbmVsLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktc2VhcmNoLWJveC8iLCJzb3VyY2VzIjpbImxpYi9zZWFyY2gtcGFuZWwvc2VhcmNoLXBhbmVsLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFpQix3QkFBd0IsRUFBZ0IsU0FBUyxFQUFjLFlBQVksRUFDL0YsWUFBWSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUErQixNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUU3RCxPQUFPLEVBQUUsWUFBWSxFQUFlLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFN0QsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUdoRSxNQUFNLE9BQU8sb0JBQW9COzs7Ozs7Ozs7SUFlN0IsWUFBb0IsUUFBa0IsRUFDMUIsTUFBYyxFQUNkLE1BQWlCLEVBQ2pCLFFBQTZCLEVBQzdCLFlBQWdDLEVBQ2hDLEdBQTZCO1FBTHJCLGFBQVEsR0FBUixRQUFRLENBQVU7UUFDMUIsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUNkLFdBQU0sR0FBTixNQUFNLENBQVc7UUFDakIsYUFBUSxHQUFSLFFBQVEsQ0FBcUI7UUFDN0IsaUJBQVksR0FBWixZQUFZLENBQW9CO1FBQ2hDLFFBQUcsR0FBSCxHQUFHLENBQTBCO1FBbEJoQyxjQUFTLEdBQUcsQ0FBQyxDQUFDOzs7O1FBR2QsZ0JBQVcsR0FBRyxJQUFJLENBQUM7UUFFbEIsZUFBVSxHQUFH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QUM7Ozs7SUFuUG5DLHNDQUFzRDs7SUFDdEQseUNBQXVCOzs7OztJQUd2QiwyQ0FBNEI7O0lBRTVCLDBDQUEwQzs7Ozs7SUFFMUMsNENBQWtDOzs7OztJQUNsQyw4Q0FBMkQ7Ozs7O0lBRTNELDZDQUEyQjs7Ozs7SUFDM0IsNkNBQTRCOzs7OztJQUVoQix3Q0FBMEI7Ozs7O0lBQ2xDLHNDQUFzQjs7Ozs7SUFDdEIsc0NBQXlCOzs7OztJQUN6Qix3Q0FBcUM7Ozs7O0lBQ3JDLDRDQUF3Qzs7Ozs7SUFDeEMsbUNBQXFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBDb21wb25lbnRSZWYsIERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBmb3J3YXJkUmVmLCBcclxuICAgIEhvc3RMaXN0ZW5lciwgSW5qZWN0b3IsIElucHV0LCBOZ1pvbmUsIE9uRGVzdHJveSwgT25Jbml0LCBPcHRpb25hbCwgT3V0cHV0LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgcmVxQW5pbUZyYW1lIH0gZnJvbSAnQGZhcnJpcy91aS1jb21tb24nO1xyXG5pbXBvcnQgeyBJbnB1dEdyb3VwQ29tcG9uZW50IH0gZnJvbSAnQGZhcnJpcy91aS1pbnB1dC1ncm91cCc7XHJcbmltcG9ydCB7IGZyb20sIGZyb21FdmVudCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBkZWJvdW5jZVRpbWUsIGZpbHRlciwgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQgeyBTZWFyY2hCb3hDb21wb25lbnQgfSBmcm9tICcuLi9zZWFyY2gtYm94LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNlYXJjaEZpZWxkIH0gZnJvbSAnLi4vc2VhcmNoLWJveC50eXBlcyc7XHJcbmltcG9ydCB7IHRyaW0gfSBmcm9tICdsb2Rhc2gtZXMnO1xyXG5pbXBvcnQgeyBTZWFyY2hQYW5lbENvbXBvbmVudCB9IGZyb20gJy4vc2VhcmNoLXBhbmVsLmNvbXBvbmVudCc7XHJcblxyXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbc2VhcmNoLWJveC1wYW5lbF0nfSlcclxuZXhwb3J0IGNsYXNzIFNlYXJjaFBhbmVsRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xyXG4gICAgQElucHV0KCdzZWFyY2gtYm94LXBhbmVsJykgZmllbGRzOiBBcnJheTxTZWFyY2hGaWVsZD47XHJcbiAgICBASW5wdXQoKSBtYXhGaWVsZHMgPSA1O1xyXG5cclxuICAgIC8qKiDlkK/nlKgg5Lu75oSP5a2X5q61ICovXHJcbiAgICBASW5wdXQoKSB1c2VBbnlGaWVsZCA9IHRydWU7XHJcblxyXG4gICAgQE91dHB1dCgpIGVzY0hhbmRsZXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gICAgcHJpdmF0ZSBwYW5lbEVsZW1lbnQ6IEhUTUxFbGVtZW50O1xyXG4gICAgcHJpdmF0ZSBzZWFyY2hQYW5lbFJlZjogQ29tcG9uZW50UmVmPFNlYXJjaFBhbmVsQ29tcG9uZW50PjtcclxuXHJcbiAgICBwcml2YXRlIG1heFBhbmVsSXRlbXMgPSAxMDtcclxuICAgIHByaXZhdGUgbWluUGFuZWxXaWR0aCA9IDI3MDtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGluamVjdG9yOiBJbmplY3RvciwgXHJcbiAgICAgICAgcHJpdmF0ZSBuZ3pvbmU6IE5nWm9uZSxcclxuICAgICAgICBwcml2YXRlIHJlbmRlcjogUmVuZGVyZXIyLCBcclxuICAgICAgICBwcml2YXRlIGlucHV0UmVmOiBJbnB1dEdyb3VwQ29tcG9uZW50LFxyXG4gICAgICAgIHByaXZhdGUgc2VhcmNoQm94UmVmOiBTZWFyY2hCb3hDb21wb25lbnQsXHJcbiAgICAgICAgcHJpdmF0ZSBjZnI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcikge1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcclxuICAgICAgICBpZiAoKCF0aGlzLmZpZWxkcyB8fCAhdGhpcy5maWVsZHMubGVuZ3RoKSAmJiAhdGhpcy51c2VBbnlGaWVsZCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmlucHV0UmVmLmlucHV0Q2xpY2suc3Vic2NyaWJlKChlOiBNb3VzZUV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuaW5wdXRSZWYudmFsdWVDaGFuZ2UucGlwZShcclxuICAgICAgICAgICAgZGVib3VuY2VUaW1lKDUwKVxyXG4gICAgICAgICkuc3Vic2NyaWJlKCh2YWw6IHN0cmluZykgPT4ge1xyXG4gICAgICAgICAgIFxyXG4gICAgICAgICAgICBpZiAodHJpbSh2YWwpKSB7XHJcbiAgICAgICAgICAgICAgICAvLyDlgLzlj5jljJbmmL7npLrmn6Xor6LpnaLmnb9cclxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5wYW5lbEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNyZWF0ZURhdGFQYW5lbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VhcmNoUGFuZWxSZWYuaW5zdGFuY2Uuc2V0QWN0aXZlSXRlbSgwKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlYXJjaFBhbmVsUmVmLmluc3RhbmNlLnNldFZhbHVlKHZhbCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5wYW5lbEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5zZWFyY2hCb3hSZWYuY2xlYXIuc3Vic2NyaWJlKCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5oaWRlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWFyY2hCb3hSZWYub3ZlckxheVNlcnZpY2UuZGVzdG9yeSh0aGlzLnNlYXJjaEJveFJlZi5lbC5uYXRpdmVFbGVtZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHJlbW92ZVBhbmVsRWxlbWVudCgpIHtcclxuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRoaXMucGFuZWxFbGVtZW50KTtcclxuICAgICAgICB0aGlzLnBhbmVsRWxlbWVudCA9IG51bGw7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLnNlYXJjaFBhbmVsUmVmKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VhcmNoUGFuZWxSZWYuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICB0aGlzLnNlYXJjaFBhbmVsUmVmID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGhpZGUoZT86IGFueSkge1xyXG4gICAgICAgIHJlcUFuaW1GcmFtZSgoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuaW5wdXRSZWYudmFsdWUgPSAnJztcclxuICAgICAgICAgICAgaWYgKHRoaXMucGFuZWxFbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZSAmJiAoIGUudHlwZSA9PT0gJ21vdXNld2hlZWwnIHx8IGUudHlwZSA9PT0gJ3doZWVsJykpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZVBhbmVsRWxlbWVudCgpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBhbmVsRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdmLWFyZWEtc2hvdycpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZVBhbmVsRWxlbWVudCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sMTIwKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWFyY2hCb3hSZWYub3ZlckxheVNlcnZpY2UuZGVzdG9yeSh0aGlzLnNlYXJjaEJveFJlZi5lbC5uYXRpdmVFbGVtZW50KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc2V0UGFuZWxQb3NpdGlvbih1cGRhdGVUb3BQb3NpdGlvbiA9IHRydWUpIHtcclxuICAgICAgICBpZiAodGhpcy5wYW5lbEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgY29uc3QgeyBtYXhXaWR0aCwgbGVmdCwgdG9wLCBoZWlnaHQgfSA9IHRoaXMuZ2V0UGFuZWxTaXplKCk7XHJcbiAgICAgICAgICAgIHRoaXMucGFuZWxFbGVtZW50LnN0eWxlLm1pbldpZHRoID0gYCR7dGhpcy5taW5QYW5lbFdpZHRofXB4YDtcclxuICAgICAgICAgICAgdGhpcy5wYW5lbEVsZW1lbnQuc3R5bGUubWF4V2lkdGggPSBgJHttYXhXaWR0aH1weGA7XHJcbiAgICAgICAgICAgIHRoaXMucGFuZWxFbGVtZW50LnN0eWxlLm1heEhlaWdodCA9IGAke2hlaWdodH1weGA7XHJcbiAgICAgICAgICAgIGlmICh1cGRhdGVUb3BQb3NpdGlvbikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wYW5lbEVsZW1lbnQuc3R5bGUudG9wID0gYCR7dG9wfXB4YDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnBhbmVsRWxlbWVudC5zdHlsZS5sZWZ0ID0gYCR7bGVmdH1weGA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgY3JlYXRlRGF0YVBhbmVsKCkge1xyXG4gICAgICAgIHRoaXMucGFuZWxFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgdGhpcy5wYW5lbEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnb3ZlcmxheS1wYW5lJywgJ2Ytc2VhcmNoLWJveC1wYW5lbCcsICdmLWFyZWEtaGlkZScpO1xyXG4gICAgICAgIGNvbnN0IHppbmRleCAgPSAnJyArIHRoaXMuc2VhcmNoQm94UmVmLmNvbW1vblV0aWxzLmdldEZsb2F0aW5nTGF5ZXJJbmRleCgpO1xyXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5wYW5lbEVsZW1lbnQpO1xyXG4gICAgICAgIHRoaXMuc2V0UGFuZWxQb3NpdGlvbigpO1xyXG4gICAgICAgIHRoaXMucGFuZWxFbGVtZW50LnN0eWxlLnpJbmRleCA9IHppbmRleDtcclxuXHJcblxyXG4gICAgICAgIHRoaXMucGFuZWxFbGVtZW50LnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8g5Yib5bu65pWw5o2u5bGV56S657uE5Lu2XHJcbiAgICAgICAgY29uc3QgY21wRmFjdCA9IHRoaXMuY2ZyLnJlc29sdmVDb21wb25lbnRGYWN0b3J5KFNlYXJjaFBhbmVsQ29tcG9uZW50KTtcclxuICAgICAgICB0aGlzLnNlYXJjaFBhbmVsUmVmID0gY21wRmFjdC5jcmVhdGUodGhpcy5pbmplY3Rvcik7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLnVzZUFueUZpZWxkICYmICF0aGlzLmZpZWxkcy5maW5kKG4gPT4gbi5jb2RlID09PSAnKicpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGFueWZpZWxkc05hbWUgPSB0aGlzLnNlYXJjaEJveFJlZi5sb2NhbGVTZXIuZ2V0VmFsdWUoJ3NlYXJjaGJveC5hbnlGaWVsZHMnKVxyXG4gICAgICAgICAgICB0aGlzLmZpZWxkcy5zcGxpY2UoMCwwLCB7IGNvZGU6ICcqJywgbmFtZTogYW55ZmllbGRzTmFtZSB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuc2VhcmNoUGFuZWxSZWYuaW5zdGFuY2UuZmllbGRzID0gdGhpcy5maWVsZHM7XHJcblxyXG4gICAgICAgIHRoaXMucGFuZWxFbGVtZW50LmFwcGVuZENoaWxkKHRoaXMuc2VhcmNoUGFuZWxSZWYubG9jYXRpb24ubmF0aXZlRWxlbWVudCk7XHJcblxyXG4gICAgICAgIHRoaXMuc2VhcmNoUGFuZWxSZWYuY2hhbmdlRGV0ZWN0b3JSZWYuZGV0ZWN0Q2hhbmdlcygpO1xyXG5cclxuICAgICAgICB0aGlzLnNlYXJjaFBhbmVsUmVmLmluc3RhbmNlLnNlYXJjaEtleVdvcmQgPSB0aGlzLmlucHV0UmVmLnZhbHVlO1xyXG4gICAgICAgIFxyXG5cclxuICAgICAgICB0aGlzLnNlYXJjaFBhbmVsUmVmLmluc3RhbmNlLml0ZW1DbGljay5zdWJzY3JpYmUoKGU6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCB7IGRhdGEgfSA9IGU7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0SXRlbShkYXRhKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5zZWFyY2hQYW5lbFJlZi5pbnN0YW5jZS5jbG9zZXBhbmVsLnN1YnNjcmliZSgoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuaGlkZSgpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyDms6jlhozpvKDmoIfmu5rova7vvIzngrnlh7vkuovku7bvvIznlKjkuo7pmpDol49QYW5lbFxyXG4gICAgICAgIHRoaXMuc2VhcmNoQm94UmVmLm92ZXJMYXlTZXJ2aWNlLnJlZ2lzdGVyTW91c2VFdmVudCh0aGlzLnNlYXJjaEJveFJlZi5lbC5uYXRpdmVFbGVtZW50LCAoZTogTW91c2VFdmVudCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMucGFuZWxFbGVtZW50IHx8IGUudGFyZ2V0WydjbG9zZXN0J10oJy5mLXNlYXJjaC1ib3gtcGFuZWwnKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZih0aGlzLmlucHV0UmVmICYmIHRoaXMuaW5wdXRSZWYudGV4dGJveC5uYXRpdmVFbGVtZW50ID09PSBlLnRhcmdldCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyDovpPlhaXmoYblhoXmnInmlofmnKzml7bvvIzlpoLmnpzkuI3lhYHorrjlhbPpl63lvLnlh7rpnaLmnb/vvIzlj6/mlL7lvIBcclxuICAgICAgICAgICAgLy8gaWYgKHRoaXMuaW5wdXRSZWYudmFsdWUpIHtcclxuICAgICAgICAgICAgLy8gICAgIHJldHVybjtcclxuICAgICAgICAgICAgLy8gfVxyXG5cclxuICAgICAgICAgICAgdGhpcy5oaWRlKGUpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuXHJcbiAgICAgICAgaWYgKCB0aGlzLnNlYXJjaFBhbmVsUmVmLmluc3RhbmNlLmZpZWxkcy5sZW5ndGggKyAxIDwgdGhpcy5tYXhQYW5lbEl0ZW1zKSB7XHJcbiAgICAgICAgICAgIGxldCBuZXdIZWlnaHQgPSB0aGlzLnNlYXJjaFBhbmVsUmVmLmluc3RhbmNlLml0ZW1zQ29udGFpbmVyLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvcigndWwnKS5vZmZzZXRIZWlnaHQgKyA0MDtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuc2VhcmNoUGFuZWxSZWYuaW5zdGFuY2UuaXRlbXNDb250YWluZXIubmF0aXZlRWxlbWVudC5zdHlsZS5oZWlnaHQgPSBgJHtuZXdIZWlnaHR9cHhgO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5wYW5lbEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnBhbmVsRWxlbWVudC5zdHlsZS50cmFuc2Zvcm1PcmlnaW4uaW5kZXhPZignYm90dG9tJykgPiAtMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGFuZWxFbGVtZW50LnN0eWxlLnRvcCA9IGAke3RoaXMuZ2V0SW5wdXRTaXplSW5mbygpLnRvcCAtIG5ld0hlaWdodCAtIDV9cHhgIDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMucGFuZWxFbGVtZW50LnN0eWxlLmhlaWdodCA9ICdhdXRvJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VhcmNoUGFuZWxSZWYuaW5zdGFuY2UuaXRlbXNDb250YWluZXIubmF0aXZlRWxlbWVudC5zdHlsZS5oZWlnaHQgPSAnMTAwJSc7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnBhbmVsRWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXIucmVtb3ZlU3R5bGUodGhpcy5wYW5lbEVsZW1lbnQsICdoZWlnaHQnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5wYW5lbEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnZi1hcmVhLXNob3cnKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHNlbGVjdEl0ZW0oZGF0YTogYW55KSB7XHJcbiAgICAgICAgaWYgKCFkYXRhKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuc2VhcmNoQm94UmVmLnNlbGVjdCh7Li4uZGF0YSwgdmFsdWU6IHRoaXMuaW5wdXRSZWYudmFsdWV9KTtcclxuICAgICAgICB0aGlzLmhpZGUoKTtcclxuXHJcbiAgICAgICAgdGhpcy5pbnB1dFJlZi5mb2N1cygpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBwcml2YXRlIGNhbGN1bGF0aW9uUGFuZWxIZWlnaHQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubWF4UGFuZWxJdGVtcyAqIDMwICsgMTU7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBnZXRJbnB1dFNpemVJbmZvKCkge1xyXG4gICAgICAgIGNvbnN0IGVsID0gdGhpcy5zZWFyY2hCb3hSZWYuZW5hYmxlRmxvYXQgPyB0aGlzLnNlYXJjaEJveFJlZi5zaGFkb3dCb3g6IHRoaXMuc2VhcmNoQm94UmVmLmNvbnRhaW5lcjtcclxuICAgICAgICByZXR1cm4gZWwubmF0aXZlRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGdldFBhbmVsU2l6ZSgpIHtcclxuICAgICAgICBsZXQgeyB3aWR0aCwgaGVpZ2h0LCB0b3AsIGxlZnQgfSA9IHRoaXMuZ2V0SW5wdXRTaXplSW5mbygpO1xyXG4gICAgICAgIGNvbnN0IGJvdHRvbSA9IHdpbmRvdy5pbm5lckhlaWdodCAtIGhlaWdodCAtIHRvcDtcclxuICAgICAgICBsZXQgcGFuZWxIZWlnaHQgPSB0aGlzLmNhbGN1bGF0aW9uUGFuZWxIZWlnaHQoKTtcclxuXHJcbiAgICAgICAgY29uc3QgaCA9IHRvcCA+IGJvdHRvbSA/IHRvcCA6IGJvdHRvbTtcclxuICAgICAgICBpZiAoYm90dG9tID4gcGFuZWxIZWlnaHQpIHtcclxuICAgICAgICAgICAgdG9wID0gdG9wICsgaGVpZ2h0O1xyXG4gICAgICAgICAgICAvLyDpnaLmnb/nlLHkuIrlkJHkuIvlsZXlvIBcclxuICAgICAgICAgICAgdGhpcy5wYW5lbEVsZW1lbnQuc3R5bGUudHJhbnNmb3JtT3JpZ2luID0gJzEwMCUgdG9wJztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAodG9wID4gYm90dG9tKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoaCA8IHBhbmVsSGVpZ2h0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFuZWxIZWlnaHQgPSBoIC0gMTA7XHJcbiAgICAgICAgICAgICAgICAgICAgdG9wID0gMTA7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRvcCA9IHRvcCAtIHBhcnNlSW50KCcnICsgcGFuZWxIZWlnaHQsIDEwKSAtIDU7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgLy8g6Z2i5p2/55Sx5LiL5ZCR5LiK5bGV5byAXHJcbiAgICAgICAgICAgICAgICB0aGlzLnBhbmVsRWxlbWVudC5zdHlsZS50cmFuc2Zvcm1PcmlnaW4gPSAnMTAwJSBib3R0b20nO1xyXG5cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmIChoIDwgcGFuZWxIZWlnaHQpIHtcclxuICAgICAgICAgICAgICAgICAgICBwYW5lbEhlaWdodCA9IGggLSAxMDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRvcCA9IHRvcCArIGhlaWdodDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IF93aWR0aCA9ICB3aWR0aCA8IHRoaXMubWluUGFuZWxXaWR0aD8gdGhpcy5taW5QYW5lbFdpZHRoOiB3aWR0aDtcclxuICAgICAgICBpZiAod2luZG93LmlubmVyV2lkdGggLSBsZWZ0IDwgX3dpZHRoKSB7XHJcbiAgICAgICAgICAgIGxlZnQgPSBsZWZ0ICsgd2lkdGggLSBfd2lkdGg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4geyB3aWR0aDogX3dpZHRoLCB0b3AsIGhlaWdodDogcGFuZWxIZWlnaHQsIGxlZnQsIG1heFdpZHRoOiBNYXRoLmZsb29yKHdpbmRvdy5pbm5lcldpZHRoIC0gbGVmdCAtIDEwKSB9O1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBASG9zdExpc3RlbmVyKCdrZXlkb3duJywgWyckZXZlbnQnXSlcclxuICAgIHJlZ2lzdGVyS2V5Ym9hcmRFdmVudCgkZXZlbnQ6IEtleWJvYXJkRXZlbnQpIHtcclxuICAgICAgICBjb25zdCByb3dzID0gdGhpcy5maWVsZHM7XHJcbiAgICAgICAgaWYgKCRldmVudC5jb2RlID09PSAnQXJyb3dVcCcgfHwgJGV2ZW50LmNvZGUgPT09ICdBcnJvd0Rvd24nKSB7XHJcbiAgICAgICAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy5zZWFyY2hQYW5lbFJlZikge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgaWR4ID0gdGhpcy5zZWFyY2hQYW5lbFJlZi5pbnN0YW5jZS5hY3RpdmVJbmRleDtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHNldEFjdGl2ZUl0ZW0gPSAoaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlYXJjaFBhbmVsUmVmLmluc3RhbmNlLnNldEFjdGl2ZUl0ZW0oaW5kZXgpO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LmNvZGUgPT09ICdBcnJvd1VwJykgeyAgLy8gdXBcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaWR4ID4gLTEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHByZXZJZHggPSBpZHggLSAxO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJldklkeCA8IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZJZHggPSByb3dzLmxlbmd0aCAtIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QWN0aXZlSXRlbShwcmV2SWR4KTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRBY3RpdmVJdGVtKHJvd3MubGVuZ3RoIC0gMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKCRldmVudC5jb2RlID09PSAnQXJyb3dEb3duJykgeyAvLyBkb3duXHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IG5leHRJZHggPSBpZHggKyAxO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChuZXh0SWR4ID49IHJvd3MubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5leHRJZHggPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgc2V0QWN0aXZlSXRlbShuZXh0SWR4KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKCRldmVudC5jb2RlID09PSAnQmFja3NwYWNlJykge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuaW5wdXRSZWYudmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnNlYXJjaEJveFJlZi5kaXNwbGF5VGV4dExpc3QgJiYgIHRoaXMuc2VhcmNoQm94UmVmLmRpc3BsYXlUZXh0TGlzdC5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgICAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVtb3ZlSXRlbSA9IHRoaXMuc2VhcmNoQm94UmVmLmRpc3BsYXlUZXh0TGlzdFt0aGlzLnNlYXJjaEJveFJlZi5kaXNwbGF5VGV4dExpc3QubGVuZ3RoIC0xXTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVtb3ZlSXRlbSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlYXJjaEJveFJlZi5yZW1vdmUocmVtb3ZlSXRlbS5jb2RlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuc2VhcmNoUGFuZWxSZWYpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VhcmNoUGFuZWxSZWYuY2hhbmdlRGV0ZWN0b3JSZWYuZGV0ZWN0Q2hhbmdlcygpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgaWYoJGV2ZW50LmtleSA9PT0gJ0VudGVyJykge1xyXG4gICAgICAgICAgICBpZiAocm93cyAmJiByb3dzLmxlbmd0aCAmJiB0aGlzLnBhbmVsRWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgaWR4ID0gdGhpcy5zZWFyY2hQYW5lbFJlZi5pbnN0YW5jZS5hY3RpdmVJbmRleDtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSByb3dzW2lkeF07XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdEl0ZW0oZGF0YSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlYXJjaEJveFJlZi5vblN1Ym1pdCgkZXZlbnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZigkZXZlbnQua2V5ID09PSAnRXNjYXBlJykge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5wYW5lbEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaGlkZSgpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5lc2NIYW5kbGVyLmVtaXQoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ==