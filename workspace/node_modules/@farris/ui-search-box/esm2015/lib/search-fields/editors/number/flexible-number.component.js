/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter, Component, Input, Injector, ChangeDetectorRef, Output } from '@angular/core';
export class SearchFieldFlexibleNumberComponent {
    /**
     * @param {?} injecotr
     * @param {?} cd
     */
    constructor(injecotr, cd) {
        this.injecotr = injecotr;
        this.cd = cd;
        this.valueChange = new EventEmitter();
        // 是否为区间日期
        this.single = true;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.single = this.field.control.single;
        if (this.field) {
            if (this.field.value) {
                const { value, begin, end } = this.field.value;
                this.value = value;
                this.beginValue = begin;
                this.endValue = end;
            }
            this.bigNumber = this.field.control.bigNumber;
            this.precision = this.field.control.precision || 0;
            if (!this.bigNumber) {
                this.min = -2147483648;
                this.max = 2147483647;
            }
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onSingleValueChange($event) {
        this.single = !$event;
        this.valueChange.emit({ field: this.field.code, value: { value: this.value, end: this.endValue, begin: this.beginValue, single: this.single } });
        this.cd.detectChanges();
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onValueChange($event) {
        this.valueChange.emit({ field: this.field.code, value: { value: $event, single: true } });
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onBeginValueChange($event) {
        this.valueChange.emit({ field: this.field.code, value: { begin: $event, end: this.endValue, single: false } });
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onEndValueChange($event) {
        this.valueChange.emit({ field: this.field.code, value: { begin: this.beginValue, end: $event, single: false } });
    }
}
SearchFieldFlexibleNumberComponent.decorators = [
    { type: Component, args: [{
                selector: 'search-filed-editor-number',
                template: "<div class=\"f-panel-filter-tip\">\r\n    <span class=\"panel-filter-tip-text\">{{ 'filterPanel.intervalFilter' | locale }}</span>\r\n    <farris-switch size=\"small\" [checked]=\"!single\" (valueChange)=\"onSingleValueChange($event)\"></farris-switch>\r\n</div>\r\n<div class=\"f-panel-filter-content\">\r\n    <ng-container *ngIf=\"single; else elseTemplate\">\r\n        <farris-number-spinner\r\n            class=\"f-utils-fill-flex-row\"\r\n            [(ngModel)]=\"value\"\r\n            [precision]=\"precision\"\r\n            [bigNumber]=\"bigNumber\"\r\n            [canNull]=\"true\"\r\n            [min]=\"min\" [max]=\"max\"\r\n            [placeholder]=\"placeholder\"\r\n            (valueChange)=\"onValueChange($event)\"\r\n            #numberText\r\n        ></farris-number-spinner>\r\n    </ng-container>\r\n    <ng-template #elseTemplate>\r\n        <div class=\"d-flex panel-flexible-range-wrapper\">\r\n            <farris-number-spinner\r\n                [(ngModel)]=\"beginValue\"\r\n                [precision]=\"precision\"\r\n                [bigNumber]=\"bigNumber\"\r\n                [canNull]=\"true\"\r\n                [min]=\"min\" [max]=\"endValue?endValue:max\"\r\n                [placeholder]=\"beginPlaceHolder\"\r\n                (valueChange)=\"onBeginValueChange($event)\"\r\n                #beginNumberText\r\n            ></farris-number-spinner>\r\n            <span class=\"f-icon f-icon-orientation-arrow\"></span>\r\n            <farris-number-spinner\r\n                [(ngModel)]=\"endValue\"\r\n                [precision]=\"precision\"\r\n                [bigNumber]=\"bigNumber\"\r\n                [canNull]=\"true\"\r\n                [min]=\"beginValue?beginValue:min\" [max]=\"max\"\r\n                [placeholder]=\"endPlaceHolder\"\r\n                (valueChange)=\"onEndValueChange($event)\"\r\n            ></farris-number-spinner>\r\n        </div>\r\n    </ng-template>\r\n    \r\n</div>"
            }] }
];
/** @nocollapse */
SearchFieldFlexibleNumberComponent.ctorParameters = () => [
    { type: Injector },
    { type: ChangeDetectorRef }
];
SearchFieldFlexibleNumberComponent.propDecorators = {
    field: [{ type: Input }],
    valueChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.field;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.valueChange;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.single;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.value;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.precision;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.bigNumber;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.placeholder;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.beginValue;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.endValue;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.beginPlaceHolder;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.endPlaceHolder;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.max;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.min;
    /**
     * @type {?}
     * @private
     */
    SearchFieldFlexibleNumberComponent.prototype.injecotr;
    /**
     * @type {?}
     * @private
     */
    SearchFieldFlexibleNumberComponent.prototype.cd;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxleGlibGUtbnVtYmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktc2VhcmNoLWJveC8iLCJzb3VyY2VzIjpbImxpYi9zZWFyY2gtZmllbGRzL2VkaXRvcnMvbnVtYmVyL2ZsZXhpYmxlLW51bWJlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxRQUFRLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBTzNHLE1BQU0sT0FBTyxrQ0FBa0M7Ozs7O0lBaUIzQyxZQUFvQixRQUFrQixFQUFVLEVBQXFCO1FBQWpELGFBQVEsR0FBUixRQUFRLENBQVU7UUFBVSxPQUFFLEdBQUYsRUFBRSxDQUFtQjtRQWQzRCxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7O1FBRTNDLFdBQU0sR0FBRyxJQUFJLENBQUM7SUFZMkQsQ0FBQzs7OztJQUUxRSxRQUFRO1FBQ0osSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFDeEMsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1osSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRTtzQkFDWixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLO2dCQUM5QyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztnQkFDbkIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7Z0JBQ3hCLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDO2FBQ3ZCO1lBRUQsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUM7WUFFOUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxTQUFTLElBQUksQ0FBQyxDQUFDO1lBRW5ELElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO2dCQUNqQixJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDO2dCQUN2QixJQUFJLENBQUMsR0FBRyxHQUFHLFVBQVUsQ0FBQzthQUN6QjtTQUNKO0lBQ0wsQ0FBQzs7Ozs7SUFFRCxtQkFBbUIsQ0FBQyxNQUFNO1FBQ3RCLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUMsS0FBSyxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxVQUFVLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUMsRUFBRSxDQUFDLENBQUM7UUFDaEosSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUM1QixDQUFDOzs7OztJQUVELGFBQWEsQ0FBQyxNQUFNO1FBQ2hCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUcsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFDLEtBQUssRUFBRSxFQUFFLEtBQUssRUFBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBQyxFQUFFLENBQUMsQ0FBQztJQUM1RixDQUFDOzs7OztJQUVELGtCQUFrQixDQUFDLE1BQU07UUFDckIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3BILENBQUM7Ozs7O0lBRUQsZ0JBQWdCLENBQUMsTUFBTTtRQUNuQixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFHLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBQyxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDckgsQ0FBQzs7O1lBN0RKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsNEJBQTRCO2dCQUN0QyxtN0RBQStDO2FBQ2xEOzs7O1lBTGdELFFBQVE7WUFBRSxpQkFBaUI7OztvQkFTdkUsS0FBSzswQkFDTCxNQUFNOzs7O0lBRFAsbURBQWU7O0lBQ2YseURBQTJDOztJQUUzQyxvREFBYzs7SUFDZCxtREFBTTs7SUFDTix1REFBVTs7SUFDVix1REFBVTs7SUFDVix5REFBWTs7SUFDWix3REFBVzs7SUFDWCxzREFBUzs7SUFDVCw4REFBaUI7O0lBQ2pCLDREQUFlOztJQUNmLGlEQUFZOztJQUNaLGlEQUFZOzs7OztJQUVBLHNEQUEwQjs7Ozs7SUFBRSxnREFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgSW5qZWN0b3IsIENoYW5nZURldGVjdG9yUmVmLCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ3NlYXJjaC1maWxlZC1lZGl0b3ItbnVtYmVyJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9mbGV4aWJsZS1udW1iZXIuY29tcG9uZW50Lmh0bWwnXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgU2VhcmNoRmllbGRGbGV4aWJsZU51bWJlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gICAgQElucHV0KCkgZmllbGQ7XHJcbiAgICBAT3V0cHV0KCkgdmFsdWVDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICAvLyDmmK/lkKbkuLrljLrpl7Tml6XmnJ9cclxuICAgIHNpbmdsZSA9IHRydWU7XHJcbiAgICB2YWx1ZTtcclxuICAgIHByZWNpc2lvbjtcclxuICAgIGJpZ051bWJlcjtcclxuICAgIHBsYWNlaG9sZGVyO1xyXG4gICAgYmVnaW5WYWx1ZTtcclxuICAgIGVuZFZhbHVlO1xyXG4gICAgYmVnaW5QbGFjZUhvbGRlcjtcclxuICAgIGVuZFBsYWNlSG9sZGVyO1xyXG4gICAgbWF4OiBudW1iZXI7XHJcbiAgICBtaW46IG51bWJlcjtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGluamVjb3RyOiBJbmplY3RvciwgcHJpdmF0ZSBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpIHsgfVxyXG5cclxuICAgIG5nT25Jbml0KCkge1xyXG4gICAgICAgIHRoaXMuc2luZ2xlID0gdGhpcy5maWVsZC5jb250cm9sLnNpbmdsZTtcclxuICAgICAgICBpZiAodGhpcy5maWVsZCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5maWVsZC52YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgeyB2YWx1ZSwgYmVnaW4sIGVuZCB9ID0gdGhpcy5maWVsZC52YWx1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuYmVnaW5WYWx1ZSA9IGJlZ2luO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5lbmRWYWx1ZSA9IGVuZDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdGhpcy5iaWdOdW1iZXIgPSB0aGlzLmZpZWxkLmNvbnRyb2wuYmlnTnVtYmVyO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5wcmVjaXNpb24gPSB0aGlzLmZpZWxkLmNvbnRyb2wucHJlY2lzaW9uIHx8IDA7XHJcblxyXG4gICAgICAgICAgICBpZiAoIXRoaXMuYmlnTnVtYmVyKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1pbiA9IC0yMTQ3NDgzNjQ4O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5tYXggPSAyMTQ3NDgzNjQ3O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uU2luZ2xlVmFsdWVDaGFuZ2UoJGV2ZW50KSB7XHJcbiAgICAgICAgdGhpcy5zaW5nbGUgPSAhJGV2ZW50O1xyXG4gICAgICAgIHRoaXMudmFsdWVDaGFuZ2UuZW1pdCh7ICBmaWVsZDogdGhpcy5maWVsZC5jb2RlLHZhbHVlOiB7IHZhbHVlOiB0aGlzLnZhbHVlLCBlbmQ6IHRoaXMuZW5kVmFsdWUsIGJlZ2luOiB0aGlzLmJlZ2luVmFsdWUsIHNpbmdsZTogdGhpcy5zaW5nbGV9IH0pO1xyXG4gICAgICAgIHRoaXMuY2QuZGV0ZWN0Q2hhbmdlcygpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uVmFsdWVDaGFuZ2UoJGV2ZW50KSB7XHJcbiAgICAgICAgdGhpcy52YWx1ZUNoYW5nZS5lbWl0KHsgIGZpZWxkOiB0aGlzLmZpZWxkLmNvZGUsdmFsdWU6IHsgdmFsdWU6JGV2ZW50LCBzaW5nbGU6IHRydWV9IH0pO1xyXG4gICAgfVxyXG5cclxuICAgIG9uQmVnaW5WYWx1ZUNoYW5nZSgkZXZlbnQpe1xyXG4gICAgICAgIHRoaXMudmFsdWVDaGFuZ2UuZW1pdCh7ICBmaWVsZDogdGhpcy5maWVsZC5jb2RlLCB2YWx1ZTogeyBiZWdpbjogJGV2ZW50LCBlbmQ6IHRoaXMuZW5kVmFsdWUsIHNpbmdsZTogZmFsc2UgfSB9KTtcclxuICAgIH1cclxuXHJcbiAgICBvbkVuZFZhbHVlQ2hhbmdlKCRldmVudCkge1xyXG4gICAgICAgIHRoaXMudmFsdWVDaGFuZ2UuZW1pdCh7ICBmaWVsZDogdGhpcy5maWVsZC5jb2RlLHZhbHVlOiB7IGJlZ2luOiB0aGlzLmJlZ2luVmFsdWUsIGVuZDogJGV2ZW50LCBzaW5nbGU6IGZhbHNlIH0gfSk7XHJcbiAgICB9XHJcblxyXG59Il19