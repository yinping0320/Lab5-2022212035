/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter, Component, Input, Injector, ChangeDetectorRef, Output } from '@angular/core';
var SearchFieldFlexibleNumberComponent = /** @class */ (function () {
    function SearchFieldFlexibleNumberComponent(injecotr, cd) {
        this.injecotr = injecotr;
        this.cd = cd;
        this.valueChange = new EventEmitter();
        // 是否为区间日期
        this.single = true;
    }
    /**
     * @return {?}
     */
    SearchFieldFlexibleNumberComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.single = this.field.control.single;
        if (this.field) {
            if (this.field.value) {
                var _a = this.field.value, value = _a.value, begin = _a.begin, end = _a.end;
                this.value = value;
                this.beginValue = begin;
                this.endValue = end;
            }
            this.bigNumber = this.field.control.bigNumber;
            this.precision = this.field.control.precision || 0;
            if (!this.bigNumber) {
                this.min = -2147483648;
                this.max = 2147483647;
            }
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    SearchFieldFlexibleNumberComponent.prototype.onSingleValueChange = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.single = !$event;
        this.valueChange.emit({ field: this.field.code, value: { value: this.value, end: this.endValue, begin: this.beginValue, single: this.single } });
        this.cd.detectChanges();
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    SearchFieldFlexibleNumberComponent.prototype.onValueChange = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.valueChange.emit({ field: this.field.code, value: { value: $event, single: true } });
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    SearchFieldFlexibleNumberComponent.prototype.onBeginValueChange = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.valueChange.emit({ field: this.field.code, value: { begin: $event, end: this.endValue, single: false } });
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    SearchFieldFlexibleNumberComponent.prototype.onEndValueChange = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.valueChange.emit({ field: this.field.code, value: { begin: this.beginValue, end: $event, single: false } });
    };
    SearchFieldFlexibleNumberComponent.decorators = [
        { type: Component, args: [{
                    selector: 'search-filed-editor-number',
                    template: "<div class=\"f-panel-filter-tip\">\r\n    <span class=\"panel-filter-tip-text\">{{ 'filterPanel.intervalFilter' | locale }}</span>\r\n    <farris-switch size=\"small\" [checked]=\"!single\" (valueChange)=\"onSingleValueChange($event)\"></farris-switch>\r\n</div>\r\n<div class=\"f-panel-filter-content\">\r\n    <ng-container *ngIf=\"single; else elseTemplate\">\r\n        <farris-number-spinner\r\n            class=\"f-utils-fill-flex-row\"\r\n            [(ngModel)]=\"value\"\r\n            [precision]=\"precision\"\r\n            [bigNumber]=\"bigNumber\"\r\n            [canNull]=\"true\"\r\n            [min]=\"min\" [max]=\"max\"\r\n            [placeholder]=\"placeholder\"\r\n            (valueChange)=\"onValueChange($event)\"\r\n            #numberText\r\n        ></farris-number-spinner>\r\n    </ng-container>\r\n    <ng-template #elseTemplate>\r\n        <div class=\"d-flex panel-flexible-range-wrapper\">\r\n            <farris-number-spinner\r\n                [(ngModel)]=\"beginValue\"\r\n                [precision]=\"precision\"\r\n                [bigNumber]=\"bigNumber\"\r\n                [canNull]=\"true\"\r\n                [min]=\"min\" [max]=\"endValue?endValue:max\"\r\n                [placeholder]=\"beginPlaceHolder\"\r\n                (valueChange)=\"onBeginValueChange($event)\"\r\n                #beginNumberText\r\n            ></farris-number-spinner>\r\n            <span class=\"f-icon f-icon-orientation-arrow\"></span>\r\n            <farris-number-spinner\r\n                [(ngModel)]=\"endValue\"\r\n                [precision]=\"precision\"\r\n                [bigNumber]=\"bigNumber\"\r\n                [canNull]=\"true\"\r\n                [min]=\"beginValue?beginValue:min\" [max]=\"max\"\r\n                [placeholder]=\"endPlaceHolder\"\r\n                (valueChange)=\"onEndValueChange($event)\"\r\n            ></farris-number-spinner>\r\n        </div>\r\n    </ng-template>\r\n    \r\n</div>"
                }] }
    ];
    /** @nocollapse */
    SearchFieldFlexibleNumberComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: ChangeDetectorRef }
    ]; };
    SearchFieldFlexibleNumberComponent.propDecorators = {
        field: [{ type: Input }],
        valueChange: [{ type: Output }]
    };
    return SearchFieldFlexibleNumberComponent;
}());
export { SearchFieldFlexibleNumberComponent };
if (false) {
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.field;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.valueChange;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.single;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.value;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.precision;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.bigNumber;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.placeholder;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.beginValue;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.endValue;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.beginPlaceHolder;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.endPlaceHolder;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.max;
    /** @type {?} */
    SearchFieldFlexibleNumberComponent.prototype.min;
    /**
     * @type {?}
     * @private
     */
    SearchFieldFlexibleNumberComponent.prototype.injecotr;
    /**
     * @type {?}
     * @private
     */
    SearchFieldFlexibleNumberComponent.prototype.cd;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxleGlibGUtbnVtYmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktc2VhcmNoLWJveC8iLCJzb3VyY2VzIjpbImxpYi9zZWFyY2gtZmllbGRzL2VkaXRvcnMvbnVtYmVyL2ZsZXhpYmxlLW51bWJlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxRQUFRLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNHO0lBc0JJLDRDQUFvQixRQUFrQixFQUFVLEVBQXFCO1FBQWpELGFBQVEsR0FBUixRQUFRLENBQVU7UUFBVSxPQUFFLEdBQUYsRUFBRSxDQUFtQjtRQWQzRCxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7O1FBRTNDLFdBQU0sR0FBRyxJQUFJLENBQUM7SUFZMkQsQ0FBQzs7OztJQUUxRSxxREFBUTs7O0lBQVI7UUFDSSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztRQUN4QyxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDWixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFO2dCQUNaLElBQUEscUJBQXdDLEVBQXRDLGdCQUFLLEVBQUUsZ0JBQUssRUFBRSxZQUF3QjtnQkFDOUMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7Z0JBQ25CLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO2dCQUN4QixJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQzthQUN2QjtZQUVELElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDO1lBRTlDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsU0FBUyxJQUFJLENBQUMsQ0FBQztZQUVuRCxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtnQkFDakIsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQztnQkFDdkIsSUFBSSxDQUFDLEdBQUcsR0FBRyxVQUFVLENBQUM7YUFDekI7U0FDSjtJQUNMLENBQUM7Ozs7O0lBRUQsZ0VBQW1COzs7O0lBQW5CLFVBQW9CLE1BQU07UUFDdEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLE1BQU0sQ0FBQztRQUN0QixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFHLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBQyxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBQyxFQUFFLENBQUMsQ0FBQztRQUNoSixJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQzVCLENBQUM7Ozs7O0lBRUQsMERBQWE7Ozs7SUFBYixVQUFjLE1BQU07UUFDaEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUMsS0FBSyxFQUFFLEVBQUUsS0FBSyxFQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzVGLENBQUM7Ozs7O0lBRUQsK0RBQWtCOzs7O0lBQWxCLFVBQW1CLE1BQU07UUFDckIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3BILENBQUM7Ozs7O0lBRUQsNkRBQWdCOzs7O0lBQWhCLFVBQWlCLE1BQU07UUFDbkIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUMsS0FBSyxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxVQUFVLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3JILENBQUM7O2dCQTdESixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLDRCQUE0QjtvQkFDdEMsbTdEQUErQztpQkFDbEQ7Ozs7Z0JBTGdELFFBQVE7Z0JBQUUsaUJBQWlCOzs7d0JBU3ZFLEtBQUs7OEJBQ0wsTUFBTTs7SUF1RFgseUNBQUM7Q0FBQSxBQS9ERCxJQStEQztTQTFEWSxrQ0FBa0M7OztJQUUzQyxtREFBZTs7SUFDZix5REFBMkM7O0lBRTNDLG9EQUFjOztJQUNkLG1EQUFNOztJQUNOLHVEQUFVOztJQUNWLHVEQUFVOztJQUNWLHlEQUFZOztJQUNaLHdEQUFXOztJQUNYLHNEQUFTOztJQUNULDhEQUFpQjs7SUFDakIsNERBQWU7O0lBQ2YsaURBQVk7O0lBQ1osaURBQVk7Ozs7O0lBRUEsc0RBQTBCOzs7OztJQUFFLGdEQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0LCBJbmplY3RvciwgQ2hhbmdlRGV0ZWN0b3JSZWYsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnc2VhcmNoLWZpbGVkLWVkaXRvci1udW1iZXInLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL2ZsZXhpYmxlLW51bWJlci5jb21wb25lbnQuaHRtbCdcclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBTZWFyY2hGaWVsZEZsZXhpYmxlTnVtYmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgICBASW5wdXQoKSBmaWVsZDtcclxuICAgIEBPdXRwdXQoKSB2YWx1ZUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIC8vIOaYr+WQpuS4uuWMuumXtOaXpeacn1xyXG4gICAgc2luZ2xlID0gdHJ1ZTtcclxuICAgIHZhbHVlO1xyXG4gICAgcHJlY2lzaW9uO1xyXG4gICAgYmlnTnVtYmVyO1xyXG4gICAgcGxhY2Vob2xkZXI7XHJcbiAgICBiZWdpblZhbHVlO1xyXG4gICAgZW5kVmFsdWU7XHJcbiAgICBiZWdpblBsYWNlSG9sZGVyO1xyXG4gICAgZW5kUGxhY2VIb2xkZXI7XHJcbiAgICBtYXg6IG51bWJlcjtcclxuICAgIG1pbjogbnVtYmVyO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgaW5qZWNvdHI6IEluamVjdG9yLCBwcml2YXRlIGNkOiBDaGFuZ2VEZXRlY3RvclJlZikgeyB9XHJcblxyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5zaW5nbGUgPSB0aGlzLmZpZWxkLmNvbnRyb2wuc2luZ2xlO1xyXG4gICAgICAgIGlmICh0aGlzLmZpZWxkKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmZpZWxkLnZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB7IHZhbHVlLCBiZWdpbiwgZW5kIH0gPSB0aGlzLmZpZWxkLnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5iZWdpblZhbHVlID0gYmVnaW47XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVuZFZhbHVlID0gZW5kO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLmJpZ051bWJlciA9IHRoaXMuZmllbGQuY29udHJvbC5iaWdOdW1iZXI7XHJcblxyXG4gICAgICAgICAgICB0aGlzLnByZWNpc2lvbiA9IHRoaXMuZmllbGQuY29udHJvbC5wcmVjaXNpb24gfHwgMDtcclxuXHJcbiAgICAgICAgICAgIGlmICghdGhpcy5iaWdOdW1iZXIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubWluID0gLTIxNDc0ODM2NDg7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1heCA9IDIxNDc0ODM2NDc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25TaW5nbGVWYWx1ZUNoYW5nZSgkZXZlbnQpIHtcclxuICAgICAgICB0aGlzLnNpbmdsZSA9ICEkZXZlbnQ7XHJcbiAgICAgICAgdGhpcy52YWx1ZUNoYW5nZS5lbWl0KHsgIGZpZWxkOiB0aGlzLmZpZWxkLmNvZGUsdmFsdWU6IHsgdmFsdWU6IHRoaXMudmFsdWUsIGVuZDogdGhpcy5lbmRWYWx1ZSwgYmVnaW46IHRoaXMuYmVnaW5WYWx1ZSwgc2luZ2xlOiB0aGlzLnNpbmdsZX0gfSk7XHJcbiAgICAgICAgdGhpcy5jZC5kZXRlY3RDaGFuZ2VzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25WYWx1ZUNoYW5nZSgkZXZlbnQpIHtcclxuICAgICAgICB0aGlzLnZhbHVlQ2hhbmdlLmVtaXQoeyAgZmllbGQ6IHRoaXMuZmllbGQuY29kZSx2YWx1ZTogeyB2YWx1ZTokZXZlbnQsIHNpbmdsZTogdHJ1ZX0gfSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25CZWdpblZhbHVlQ2hhbmdlKCRldmVudCl7XHJcbiAgICAgICAgdGhpcy52YWx1ZUNoYW5nZS5lbWl0KHsgIGZpZWxkOiB0aGlzLmZpZWxkLmNvZGUsIHZhbHVlOiB7IGJlZ2luOiAkZXZlbnQsIGVuZDogdGhpcy5lbmRWYWx1ZSwgc2luZ2xlOiBmYWxzZSB9IH0pO1xyXG4gICAgfVxyXG5cclxuICAgIG9uRW5kVmFsdWVDaGFuZ2UoJGV2ZW50KSB7XHJcbiAgICAgICAgdGhpcy52YWx1ZUNoYW5nZS5lbWl0KHsgIGZpZWxkOiB0aGlzLmZpZWxkLmNvZGUsdmFsdWU6IHsgYmVnaW46IHRoaXMuYmVnaW5WYWx1ZSwgZW5kOiAkZXZlbnQsIHNpbmdsZTogZmFsc2UgfSB9KTtcclxuICAgIH1cclxuXHJcbn0iXX0=