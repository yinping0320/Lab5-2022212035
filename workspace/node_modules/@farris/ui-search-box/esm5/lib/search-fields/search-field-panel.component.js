/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Injector, Input, Output, ViewChild } from '@angular/core';
var SearchFieldPanelComponent = /** @class */ (function () {
    function SearchFieldPanelComponent(injecotr, cd) {
        this.injecotr = injecotr;
        this.cd = cd;
        this.filterChange = new EventEmitter();
        this.remove = new EventEmitter();
        this.conditions = null;
        this.elRef = this.injecotr.get(ElementRef, null);
    }
    /**
     * @return {?}
     */
    SearchFieldPanelComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?} $event
     * @return {?}
     */
    SearchFieldPanelComponent.prototype.onSearchValueChange = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.conditions = $event;
        this.cd.detectChanges();
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    SearchFieldPanelComponent.prototype.onSubmitCondition = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.fieldOptions.value = this.conditions.value;
        if (!this.fieldOptions.value.single) {
            this.fieldOptions.value.value = null;
        }
        else {
            delete this.fieldOptions.value.begin;
            delete this.fieldOptions.value.end;
        }
        this.filterChange.emit(this.conditions);
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    SearchFieldPanelComponent.prototype.onRemoveSearchField = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.remove.emit(this.fieldOptions);
    };
    SearchFieldPanelComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-search-field-panel',
                    template: "<div class=\"f-search-field-panel f-filter-panel-inner\">\r\n    <div class=\"f-filter-panel-arrow\" style=\"left: 26px; right: auto;\"></div>\r\n    <div class=\"f-filter-panel-content \" style=\"box-shadow:none\">\r\n        <search-filed-editor-date [field]=\"fieldOptions\" *ngIf=\"fieldOptions.control?.controltype === 'datetime'\"\r\n            class=\"d-flex flex-column\" (valueChange)=\"onSearchValueChange($event)\"></search-filed-editor-date>\r\n\r\n        <search-filed-editor-number [field]=\"fieldOptions\" *ngIf=\"fieldOptions.control?.controltype === 'number'\" \r\n            class=\"d-flex flex-column\" (valueChange)=\"onSearchValueChange($event)\"></search-filed-editor-number>\r\n\r\n        <search-filed-editor-enum [field]=\"fieldOptions\" *ngIf=\"fieldOptions.control?.controltype === 'enum'\" \r\n            class=\"d-flex flex-column\" (valueChange)=\"onSearchValueChange($event)\"></search-filed-editor-enum>\r\n\r\n        <search-field-editor-bool [field]=\"fieldOptions\" *ngIf=\"fieldOptions.control?.controltype === 'dropdown'\" \r\n            class=\"d-flex flex-column\" (valueChange)=\"onSearchValueChange($event)\"></search-field-editor-bool>\r\n    </div>\r\n\r\n    <div class=\"f-filter-panel-footer\">\r\n        <div class=\"filer-panel-clear\">\r\n            <button class=\"btn btn-link\" (click)=\"onRemoveSearchField($event)\" [disabled]=\"fieldOptions?.value | canclear\">{{'searchbox.clear' | locale}}</button>\r\n        </div>\r\n        <div class=\"filter-panel-btns\">\r\n            <button class=\"btn btn-secondary close-field-panel\">{{'searchbox.cancel' | locale}}</button>\r\n            <button class=\"filter-panel-submit btn btn-primary\" #btnSubmit [disabled]=\"conditions?.value | canclear\" (click)=\"onSubmitCondition($event)\">{{'searchbox.ok' | locale}}</button>\r\n        </div>\r\n    </div>\r\n</div>"
                }] }
    ];
    /** @nocollapse */
    SearchFieldPanelComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: ChangeDetectorRef }
    ]; };
    SearchFieldPanelComponent.propDecorators = {
        fieldOptions: [{ type: Input }],
        btnSubmit: [{ type: ViewChild, args: ['btnSubmit',] }],
        filterChange: [{ type: Output }],
        remove: [{ type: Output }]
    };
    return SearchFieldPanelComponent;
}());
export { SearchFieldPanelComponent };
if (false) {
    /** @type {?} */
    SearchFieldPanelComponent.prototype.fieldOptions;
    /** @type {?} */
    SearchFieldPanelComponent.prototype.btnSubmit;
    /** @type {?} */
    SearchFieldPanelComponent.prototype.filterChange;
    /** @type {?} */
    SearchFieldPanelComponent.prototype.remove;
    /** @type {?} */
    SearchFieldPanelComponent.prototype.conditions;
    /** @type {?} */
    SearchFieldPanelComponent.prototype.elRef;
    /**
     * @type {?}
     * @private
     */
    SearchFieldPanelComponent.prototype.injecotr;
    /**
     * @type {?}
     * @private
     */
    SearchFieldPanelComponent.prototype.cd;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLWZpZWxkLXBhbmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktc2VhcmNoLWJveC8iLCJzb3VyY2VzIjpbImxpYi9zZWFyY2gtZmllbGRzL3NlYXJjaC1maWVsZC1wYW5lbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBZ0IsUUFBUSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpKO0lBZ0JJLG1DQUFvQixRQUFrQixFQUFVLEVBQXFCO1FBQWpELGFBQVEsR0FBUixRQUFRLENBQVU7UUFBVSxPQUFFLEdBQUYsRUFBRSxDQUFtQjtRQUwzRCxpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDbEMsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFdEMsZUFBVSxHQUFHLElBQUksQ0FBQztRQUdkLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3JELENBQUM7Ozs7SUFFRCw0Q0FBUTs7O0lBQVIsY0FBYSxDQUFDOzs7OztJQUVkLHVEQUFtQjs7OztJQUFuQixVQUFvQixNQUFNO1FBQ3RCLElBQUksQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDNUIsQ0FBQzs7Ozs7SUFFRCxxREFBaUI7Ozs7SUFBakIsVUFBa0IsTUFBTTtRQUNwQixJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQztRQUNoRCxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFO1lBQ2pDLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7U0FDeEM7YUFBTTtZQUNILE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO1lBQ3JDLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDO1NBQ3RDO1FBQ0QsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzVDLENBQUM7Ozs7O0lBRUQsdURBQW1COzs7O0lBQW5CLFVBQW9CLE1BQWtCO1FBQ2xDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUN4QyxDQUFDOztnQkF4Q0osU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSwyQkFBMkI7b0JBQ3JDLGsyREFBa0Q7aUJBQ3JEOzs7O2dCQUw4RSxRQUFRO2dCQUE5RSxpQkFBaUI7OzsrQkFTckIsS0FBSzs0QkFFTCxTQUFTLFNBQUMsV0FBVzsrQkFFckIsTUFBTTt5QkFDTixNQUFNOztJQTZCWCxnQ0FBQztDQUFBLEFBekNELElBeUNDO1NBcENZLHlCQUF5Qjs7O0lBRWxDLGlEQUFzQjs7SUFFdEIsOENBQThDOztJQUU5QyxpREFBNEM7O0lBQzVDLDJDQUFzQzs7SUFFdEMsK0NBQWtCOztJQUNsQiwwQ0FBa0I7Ozs7O0lBQ04sNkNBQTBCOzs7OztJQUFFLHVDQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSG9zdExpc3RlbmVyLCBJbmplY3RvciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdmYXJyaXMtc2VhcmNoLWZpZWxkLXBhbmVsJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9zZWFyY2gtZmllbGQtcGFuZWwuY29tcG9uZW50Lmh0bWwnXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgU2VhcmNoRmllbGRQYW5lbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gICAgQElucHV0KCkgZmllbGRPcHRpb25zO1xyXG5cclxuICAgIEBWaWV3Q2hpbGQoJ2J0blN1Ym1pdCcpIGJ0blN1Ym1pdDogRWxlbWVudFJlZjtcclxuXHJcbiAgICBAT3V0cHV0KCkgZmlsdGVyQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIHJlbW92ZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgICBjb25kaXRpb25zID0gbnVsbDtcclxuICAgIGVsUmVmOiBFbGVtZW50UmVmO1xyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBpbmplY290cjogSW5qZWN0b3IsIHByaXZhdGUgY2Q6IENoYW5nZURldGVjdG9yUmVmKSB7XHJcbiAgICAgICAgdGhpcy5lbFJlZiA9IHRoaXMuaW5qZWNvdHIuZ2V0KEVsZW1lbnRSZWYsIG51bGwpO1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25Jbml0KCkgeyB9XHJcblxyXG4gICAgb25TZWFyY2hWYWx1ZUNoYW5nZSgkZXZlbnQpIHtcclxuICAgICAgICB0aGlzLmNvbmRpdGlvbnMgPSAkZXZlbnQ7XHJcbiAgICAgICAgdGhpcy5jZC5kZXRlY3RDaGFuZ2VzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25TdWJtaXRDb25kaXRpb24oJGV2ZW50KSB7XHJcbiAgICAgICAgdGhpcy5maWVsZE9wdGlvbnMudmFsdWUgPSB0aGlzLmNvbmRpdGlvbnMudmFsdWU7XHJcbiAgICAgICAgaWYgKCF0aGlzLmZpZWxkT3B0aW9ucy52YWx1ZS5zaW5nbGUpIHtcclxuICAgICAgICAgICAgdGhpcy5maWVsZE9wdGlvbnMudmFsdWUudmFsdWUgPSBudWxsO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLmZpZWxkT3B0aW9ucy52YWx1ZS5iZWdpbjtcclxuICAgICAgICAgICAgZGVsZXRlIHRoaXMuZmllbGRPcHRpb25zLnZhbHVlLmVuZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5maWx0ZXJDaGFuZ2UuZW1pdCh0aGlzLmNvbmRpdGlvbnMpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uUmVtb3ZlU2VhcmNoRmllbGQoJGV2ZW50OiBNb3VzZUV2ZW50KSB7XHJcbiAgICAgICAgdGhpcy5yZW1vdmUuZW1pdCh0aGlzLmZpZWxkT3B0aW9ucyk7XHJcbiAgICB9XHJcbn0iXX0=