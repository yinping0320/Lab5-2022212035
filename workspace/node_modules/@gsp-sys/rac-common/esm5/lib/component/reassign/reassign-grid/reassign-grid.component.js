/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChild, TemplateRef } from '@angular/core';
import { ReAssignService } from '../../../common/service/reassign.service';
var ReassignGridComponent = /** @class */ (function () {
    function ReassignGridComponent(reAssignService) {
        this.reAssignService = reAssignService;
        this.selectedKey = '';
        this.selectedKeyOld = '';
        this.selectedChanged = new EventEmitter();
        /**
         * 帮助输出事件
         */
        this.selectedAfterOk = new EventEmitter();
        this.closeModalEmitter = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ReassignGridComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.columns = [
            // { field: 'name', title: this.translate.instant('lblAuthObj') }
            { field: 'authorizationCode', title: '权限对象编号', width: '0' },
            { field: 'authorizationName', title: '权限对象名称', width: '200' },
            { field: 'authfieldCode', title: '权限字段编号', width: '0' },
            { field: 'authfieldName', title: '权限字段名称' }
        ];
    };
    /** 获取允许重授权的权限 */
    /**
     * 获取允许重授权的权限
     * @return {?}
     */
    ReassignGridComponent.prototype.initData = /**
     * 获取允许重授权的权限
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var obs = this.reAssignService.getAll();
        obs.subscribe((/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            _this.datas = result;
        }));
    };
    /** 输入属性变化后 */
    /**
     * 输入属性变化后
     * @param {?} changes
     * @return {?}
     */
    ReassignGridComponent.prototype.ngOnChanges = /**
     * 输入属性变化后
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (!this.datas || this.datas.length <= 0) {
            // 服务端获取数据
            this.initData();
        }
    };
    /**
     * 选中行改变后触发事件
     */
    /**
     * 选中行改变后触发事件
     * @param {?} args
     * @return {?}
     */
    ReassignGridComponent.prototype.handleSelection = /**
     * 选中行改变后触发事件
     * @param {?} args
     * @return {?}
     */
    function (args) {
        this.selectedModel = args.data;
        if (!this.selectedModel) {
            this.selectedKey = '';
            return;
        }
        this.selectedKey = this.selectedModel.id;
        // 首次触发
        if (this.selectedKeyOld === '') {
            this.selectedKeyOld = this.selectedKey;
            this.selectedChanged.emit(this.selectedModel);
        }
        else {
            // 变化的情况下触发
            if (this.selectedKeyOld !== this.selectedKey) {
                this.selectedKeyOld = this.selectedKey;
                this.selectedChanged.emit(this.selectedModel);
            }
        }
    };
    /**
     * @param {?} __0
     * @return {?}
     */
    ReassignGridComponent.prototype.iconClass = /**
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var id = _a.id;
        return {
            'k-i-folder': true,
            'k-icon': true
        };
    };
    /** 帮助确定按钮 */
    /**
     * 帮助确定按钮
     * @return {?}
     */
    ReassignGridComponent.prototype.confirm = /**
     * 帮助确定按钮
     * @return {?}
     */
    function () {
        this.selectedKeyOld = this.selectedKey;
        this.selectedAfterOk.emit(this.selectedModel);
    };
    /**
     * @return {?}
     */
    ReassignGridComponent.prototype.cancle = /**
     * @return {?}
     */
    function () {
        this.closeModalEmitter.next();
    };
    ReassignGridComponent.decorators = [
        { type: Component, args: [{
                    selector: 'rac-reassign-grid',
                    template: "\r\n<div class=\"f-utils-flex-column\" style=\"height:450px;\">\r\n    <farris-datagrid   #farrisGrid  class=\"f-utils-flex-column f-utils-fill\" [columns]=\"columns\" [data]=\"datas\" [showBorder]=\"false\"\r\n        [idField]=\"'id'\"\r\n        [showLineNumber]=\"true\" [fitColumns]=\"true\" [fit]=\"true\" [striped]=\"true\" \r\n        (selectChanged)=\"handleSelection($event)\">\r\n    </farris-datagrid>\r\n</div>\r\n\r\n<ng-template #btnOkAndCancle >\r\n      <button class=\"btn btn-sm btn-primary\" (click)=\"confirm()\">\u786E\u8BA4</button>\r\n      <button class=\"btn btn-sm btn-default\" (click)=\"cancle()\">\u53D6\u6D88</button>\r\n</ng-template>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ReassignGridComponent.ctorParameters = function () { return [
        { type: ReAssignService }
    ]; };
    ReassignGridComponent.propDecorators = {
        datas: [{ type: Input }],
        selectedChanged: [{ type: Output }],
        selectedAfterOk: [{ type: Output }],
        closeModalEmitter: [{ type: Output }],
        btnOkAndCancleRef: [{ type: ViewChild, args: ['btnOkAndCancle',] }]
    };
    return ReassignGridComponent;
}());
export { ReassignGridComponent };
if (false) {
    /** @type {?} */
    ReassignGridComponent.prototype.columns;
    /** @type {?} */
    ReassignGridComponent.prototype.datas;
    /** @type {?} */
    ReassignGridComponent.prototype.selectedKey;
    /** @type {?} */
    ReassignGridComponent.prototype.selectedKeyOld;
    /** @type {?} */
    ReassignGridComponent.prototype.selectedModel;
    /** @type {?} */
    ReassignGridComponent.prototype.selectedChanged;
    /**
     * 帮助输出事件
     * @type {?}
     */
    ReassignGridComponent.prototype.selectedAfterOk;
    /** @type {?} */
    ReassignGridComponent.prototype.closeModalEmitter;
    /** @type {?} */
    ReassignGridComponent.prototype.btnOkAndCancleRef;
    /**
     * @type {?}
     * @private
     */
    ReassignGridComponent.prototype.reAssignService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhc3NpZ24tZ3JpZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXN5cy9yYWMtY29tbW9uLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudC9yZWFzc2lnbi9yZWFzc2lnbi1ncmlkL3JlYXNzaWduLWdyaWQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUtqSSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFFM0U7SUFzQkUsK0JBQ1UsZUFBZ0M7UUFBaEMsb0JBQWUsR0FBZixlQUFlLENBQWlCO1FBZDFDLGdCQUFXLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLG1CQUFjLEdBQUcsRUFBRSxDQUFDO1FBR1Ysb0JBQWUsR0FBaUMsSUFBSSxZQUFZLEVBQWtCLENBQUM7Ozs7UUFHbkYsb0JBQWUsR0FBaUMsSUFBSSxZQUFZLEVBQWtCLENBQUM7UUFDbkYsc0JBQWlCLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7SUFNMUIsQ0FBQzs7OztJQUVoRCx3Q0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsT0FBTyxHQUFHO1lBQ2IsaUVBQWlFO1lBQ2pFLEVBQUUsS0FBSyxFQUFFLG1CQUFtQixFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRTtZQUMzRCxFQUFFLEtBQUssRUFBRSxtQkFBbUIsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUU7WUFDN0QsRUFBRSxLQUFLLEVBQUUsZUFBZSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRTtZQUN2RCxFQUFFLEtBQUssRUFBRSxlQUFlLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtTQUM1QyxDQUFDO0lBQ0osQ0FBQztJQUVELGlCQUFpQjs7Ozs7SUFDakIsd0NBQVE7Ozs7SUFBUjtRQUFBLGlCQUtDOztZQUpTLEdBQUcsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRTtRQUN6QyxHQUFHLENBQUMsU0FBUzs7OztRQUFDLFVBQUMsTUFBVztZQUN4QixLQUFJLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQztRQUN0QixDQUFDLEVBQUMsQ0FBQztJQUNQLENBQUM7SUFFQSxjQUFjOzs7Ozs7SUFDZCwyQ0FBVzs7Ozs7SUFBWCxVQUFZLE9BQXNCO1FBQ2pDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtZQUN6QyxVQUFVO1lBQ1YsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ2pCO0lBQ0gsQ0FBQztJQUVGOztPQUVHOzs7Ozs7SUFDRiwrQ0FBZTs7Ozs7SUFBZixVQUFnQixJQUFTO1FBQ3ZCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUMvQixJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUN2QixJQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQztZQUN0QixPQUFRO1NBQ1Q7UUFDRCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDO1FBQ3pDLE9BQU87UUFDUCxJQUFJLElBQUksQ0FBQyxjQUFjLEtBQUssRUFBRSxFQUFFO1lBQzlCLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztZQUN2QyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7U0FDL0M7YUFBTTtZQUNMLFdBQVc7WUFDWCxJQUFJLElBQUksQ0FBQyxjQUFjLEtBQUssSUFBSSxDQUFDLFdBQVcsRUFBRTtnQkFDNUMsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO2dCQUN2QyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7YUFDL0M7U0FDRjtJQUNILENBQUM7Ozs7O0lBRUQseUNBQVM7Ozs7SUFBVCxVQUFVLEVBQVc7WUFBVCxVQUFFO1FBQ1osT0FBTztZQUNMLFlBQVksRUFBRSxJQUFJO1lBQ2xCLFFBQVEsRUFBRSxJQUFJO1NBQ2YsQ0FBQztJQUNKLENBQUM7SUFFRCxhQUFhOzs7OztJQUNiLHVDQUFPOzs7O0lBQVA7UUFDRSxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDdkMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ2hELENBQUM7Ozs7SUFFRCxzQ0FBTTs7O0lBQU47UUFDRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDaEMsQ0FBQzs7Z0JBekZGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsbUJBQW1CO29CQUM3QixzcUJBQTZDOztpQkFFOUM7Ozs7Z0JBTlEsZUFBZTs7O3dCQVVyQixLQUFLO2tDQUtMLE1BQU07a0NBR04sTUFBTTtvQ0FDTixNQUFNO29DQUdOLFNBQVMsU0FBQyxnQkFBZ0I7O0lBc0U3Qiw0QkFBQztDQUFBLEFBMUZELElBMEZDO1NBckZZLHFCQUFxQjs7O0lBRWhDLHdDQUFhOztJQUNiLHNDQUFpQzs7SUFDakMsNENBQWlCOztJQUNqQiwrQ0FBb0I7O0lBQ3BCLDhDQUE4Qjs7SUFFOUIsZ0RBQTZGOzs7OztJQUc3RixnREFBNkY7O0lBQzdGLGtEQUF5RTs7SUFHekUsa0RBQWlFOzs7OztJQUcvRCxnREFBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT25DaGFuZ2VzLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIFZpZXdDaGlsZCwgVGVtcGxhdGVSZWYsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBmcm9tLCBvZiB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XHJcbmltcG9ydCB7IFJlQXNzaWduRW50aXR5IH0gZnJvbSAnLi4vLi4vLi4vY29tbW9uL2VudGl0eS9yZWFzc2lnbi5lbnRpdHknO1xyXG5pbXBvcnQgeyBSZUFzc2lnblNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9jb21tb24vc2VydmljZS9yZWFzc2lnbi5zZXJ2aWNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAncmFjLXJlYXNzaWduLWdyaWQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9yZWFzc2lnbi1ncmlkLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9yZWFzc2lnbi1ncmlkLmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgUmVhc3NpZ25HcmlkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xyXG5cclxuICBjb2x1bW5zOiBhbnk7XHJcbiAgQElucHV0KCkgZGF0YXM6IFJlQXNzaWduRW50aXR5W107XHJcbiAgc2VsZWN0ZWRLZXkgPSAnJztcclxuICBzZWxlY3RlZEtleU9sZCA9ICcnO1xyXG4gIHNlbGVjdGVkTW9kZWw6IFJlQXNzaWduRW50aXR5O1xyXG5cclxuICBAT3V0cHV0KCkgc2VsZWN0ZWRDaGFuZ2VkOiBFdmVudEVtaXR0ZXI8UmVBc3NpZ25FbnRpdHk+ID0gbmV3IEV2ZW50RW1pdHRlcjxSZUFzc2lnbkVudGl0eT4oKTtcclxuXHJcbiAgLyoqIOW4ruWKqei+k+WHuuS6i+S7tiAqL1xyXG4gIEBPdXRwdXQoKSBzZWxlY3RlZEFmdGVyT2s6IEV2ZW50RW1pdHRlcjxSZUFzc2lnbkVudGl0eT4gPSBuZXcgRXZlbnRFbWl0dGVyPFJlQXNzaWduRW50aXR5PigpO1xyXG4gIEBPdXRwdXQoKSBjbG9zZU1vZGFsRW1pdHRlcjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuXHJcbiAgLy8g5rOo5YWl5Yiw5biu5Yqp55qE56Gu6K6k5ZKM5Y+W5raI5oyJ6ZKuXHJcbiAgQFZpZXdDaGlsZCgnYnRuT2tBbmRDYW5jbGUnKSBidG5Pa0FuZENhbmNsZVJlZjogVGVtcGxhdGVSZWY8YW55PjtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIHJlQXNzaWduU2VydmljZTogUmVBc3NpZ25TZXJ2aWNlICkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5jb2x1bW5zID0gW1xyXG4gICAgICAvLyB7IGZpZWxkOiAnbmFtZScsIHRpdGxlOiB0aGlzLnRyYW5zbGF0ZS5pbnN0YW50KCdsYmxBdXRoT2JqJykgfVxyXG4gICAgICB7IGZpZWxkOiAnYXV0aG9yaXphdGlvbkNvZGUnLCB0aXRsZTogJ+adg+mZkOWvueixoee8luWPtycsIHdpZHRoOiAnMCcgfSxcclxuICAgICAgeyBmaWVsZDogJ2F1dGhvcml6YXRpb25OYW1lJywgdGl0bGU6ICfmnYPpmZDlr7nosaHlkI3np7AnLCB3aWR0aDogJzIwMCcgfSxcclxuICAgICAgeyBmaWVsZDogJ2F1dGhmaWVsZENvZGUnLCB0aXRsZTogJ+adg+mZkOWtl+autee8luWPtycsIHdpZHRoOiAnMCcgfSxcclxuICAgICAgeyBmaWVsZDogJ2F1dGhmaWVsZE5hbWUnLCB0aXRsZTogJ+adg+mZkOWtl+auteWQjeensCcgfVxyXG4gICAgXTtcclxuICB9XHJcblxyXG4gIC8qKiDojrflj5blhYHorrjph43mjojmnYPnmoTmnYPpmZAgKi9cclxuICBpbml0RGF0YSgpIHtcclxuICAgICAgY29uc3Qgb2JzID0gdGhpcy5yZUFzc2lnblNlcnZpY2UuZ2V0QWxsKCk7XHJcbiAgICAgIG9icy5zdWJzY3JpYmUoKHJlc3VsdDogYW55KSA9PiB7XHJcbiAgICAgICAgdGhpcy5kYXRhcyA9IHJlc3VsdDtcclxuICAgICAgfSk7XHJcbiAgfVxyXG5cclxuICAgLyoqIOi+k+WFpeWxnuaAp+WPmOWMluWQjiAqL1xyXG4gICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XHJcbiAgICBpZiAoIXRoaXMuZGF0YXMgfHwgdGhpcy5kYXRhcy5sZW5ndGggPD0gMCkge1xyXG4gICAgICAvLyDmnI3liqHnq6/ojrflj5bmlbDmja5cclxuICAgICAgdGhpcy5pbml0RGF0YSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAvKipcclxuICAqIOmAieS4reihjOaUueWPmOWQjuinpuWPkeS6i+S7tlxyXG4gICovXHJcbiAgaGFuZGxlU2VsZWN0aW9uKGFyZ3M6IGFueSkge1xyXG4gICAgdGhpcy5zZWxlY3RlZE1vZGVsID0gYXJncy5kYXRhO1xyXG4gICAgaWYgKCF0aGlzLnNlbGVjdGVkTW9kZWwpIHtcclxuICAgICAgdGhpcy5zZWxlY3RlZEtleSA9ICcnO1xyXG4gICAgICByZXR1cm4gO1xyXG4gICAgfVxyXG4gICAgdGhpcy5zZWxlY3RlZEtleSA9IHRoaXMuc2VsZWN0ZWRNb2RlbC5pZDtcclxuICAgIC8vIOmmluasoeinpuWPkVxyXG4gICAgaWYgKHRoaXMuc2VsZWN0ZWRLZXlPbGQgPT09ICcnKSB7XHJcbiAgICAgIHRoaXMuc2VsZWN0ZWRLZXlPbGQgPSB0aGlzLnNlbGVjdGVkS2V5O1xyXG4gICAgICB0aGlzLnNlbGVjdGVkQ2hhbmdlZC5lbWl0KHRoaXMuc2VsZWN0ZWRNb2RlbCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyDlj5jljJbnmoTmg4XlhrXkuIvop6blj5FcclxuICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRLZXlPbGQgIT09IHRoaXMuc2VsZWN0ZWRLZXkpIHtcclxuICAgICAgICB0aGlzLnNlbGVjdGVkS2V5T2xkID0gdGhpcy5zZWxlY3RlZEtleTtcclxuICAgICAgICB0aGlzLnNlbGVjdGVkQ2hhbmdlZC5lbWl0KHRoaXMuc2VsZWN0ZWRNb2RlbCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIGljb25DbGFzcyh7IGlkIH06IGFueSk6IGFueSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAnay1pLWZvbGRlcic6IHRydWUsXHJcbiAgICAgICdrLWljb24nOiB0cnVlXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgLyoqIOW4ruWKqeehruWumuaMiemSriAqL1xyXG4gIGNvbmZpcm0oKSB7XHJcbiAgICB0aGlzLnNlbGVjdGVkS2V5T2xkID0gdGhpcy5zZWxlY3RlZEtleTtcclxuICAgIHRoaXMuc2VsZWN0ZWRBZnRlck9rLmVtaXQodGhpcy5zZWxlY3RlZE1vZGVsKTtcclxuICB9XHJcblxyXG4gIGNhbmNsZSgpIHtcclxuICAgIHRoaXMuY2xvc2VNb2RhbEVtaXR0ZXIubmV4dCgpO1xyXG4gIH1cclxufVxyXG4iXX0=