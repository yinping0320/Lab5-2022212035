/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, Output, Input, EventEmitter } from '@angular/core';
import { LookupComponent } from '@farris/ui-lookup';
import { ReAssignEntity } from '../../../common/entity';
var ReassignHelpComponent = /** @class */ (function () {
    function ReassignHelpComponent() {
        this.displayText = '';
        this.selectedKeyOld = '';
        /**
         * 导航事件
         */
        this.selectedChanged = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ReassignHelpComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    // 取数列
    // 取数列
    /**
     * @param {?} args
     * @return {?}
     */
    ReassignHelpComponent.prototype.afterKeySelected = 
    // 取数列
    /**
     * @param {?} args
     * @return {?}
     */
    function (args) {
        this.curObj = new ReAssignEntity();
        this.curKeyIdList = [];
        // 更新值
        this.curObj.id = args['id'];
        this.curObj.authorizationCode = args['authorizationCode'];
        this.curObj.authorizationName = args['authorizationName'];
        this.curObj.authfieldCode = args['authfieldCode'];
        this.curObj.authfieldName = args['authfieldName'];
        this.displayText = args['authorizationName'] + ' ' + args['authfieldName'];
        this.selectedChanged.emit(this.curObj);
        this.reassignLookup.closeDialog();
    };
    /**
     * 选中行改变后触发事件
     */
    /**
     * 选中行改变后触发事件
     * @param {?} args
     * @return {?}
     */
    ReassignHelpComponent.prototype.handleSelection = /**
     * 选中行改变后触发事件
     * @param {?} args
     * @return {?}
     */
    function (args) {
        this.curKeyId = args.node.data.id;
        this.curObj = args.node.data;
        // 首次触发
        if (this.curKeyId === '') {
            this.selectedKeyOld = this.curKeyId;
            this.selectedChanged.emit(this.curObj);
        }
        else {
            // 变化的情况下触发
            if (this.selectedKeyOld !== this.curKeyId) {
                this.selectedKeyOld = this.curKeyId;
                this.selectedChanged.emit(this.curObj);
            }
        }
    };
    ReassignHelpComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'rac-reassign-help',
                    template: "<farris-lookup #reassignLookup [displayText]=\"displayText\" style=\"width:350px\"  name=\"reassignLookup\" \r\n[showButtons]=\"true\" [title]=\"'\u8BF7\u9009\u62E9\u6743\u9650'\" [buttonsRef]=\"this.reassignHelp.btnOkAndCancleRef\">\r\n  <div style=\"padding: 10px\">\r\n    <rac-reassign-grid #reassignHelp style=\"height:450px;width:540px\" [datas]=\"datas\" calss=\"f-utils-fill\"\r\n      (selectedAfterOk)=\"afterKeySelected($event)\" (closeModalEmitter)=\"this.reassignLookup.closeDialog()\">\r\n    </rac-reassign-grid>\r\n  </div>\r\n</farris-lookup>\r\n\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ReassignHelpComponent.ctorParameters = function () { return []; };
    ReassignHelpComponent.propDecorators = {
        displayText: [{ type: Input }],
        curKeyId: [{ type: Input }],
        datas: [{ type: Input }],
        reassignLookup: [{ type: ViewChild, args: ['reassignLookup',] }],
        selectedChanged: [{ type: Output }]
    };
    return ReassignHelpComponent;
}());
export { ReassignHelpComponent };
if (false) {
    /** @type {?} */
    ReassignHelpComponent.prototype.displayText;
    /** @type {?} */
    ReassignHelpComponent.prototype.curKeyId;
    /** @type {?} */
    ReassignHelpComponent.prototype.datas;
    /** @type {?} */
    ReassignHelpComponent.prototype.curKeyIdList;
    /** @type {?} */
    ReassignHelpComponent.prototype.curObj;
    /** @type {?} */
    ReassignHelpComponent.prototype.selectedKeyOld;
    /** @type {?} */
    ReassignHelpComponent.prototype.reassignLookup;
    /**
     * 导航事件
     * @type {?}
     */
    ReassignHelpComponent.prototype.selectedChanged;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhc3NpZ24taGVscC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXN5cy9yYWMtY29tbW9uLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudC9yZWFzc2lnbi9yZWFzc2lnbi1oZWxwL3JlYXNzaWduLWhlbHAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUFVLFNBQVMsRUFDZ0IsTUFBTSxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQ3hFLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFeEQ7SUFvQkU7UUFaUyxnQkFBVyxHQUFHLEVBQUUsQ0FBQztRQUsxQixtQkFBYyxHQUFHLEVBQUUsQ0FBQzs7OztRQUtWLG9CQUFlLEdBQWlDLElBQUksWUFBWSxFQUFrQixDQUFDO0lBRTdFLENBQUM7Ozs7SUFFakIsd0NBQVE7OztJQUFSO0lBQ0EsQ0FBQztJQUVBLE1BQU07Ozs7OztJQUNOLGdEQUFnQjs7Ozs7O0lBQWhCLFVBQWlCLElBQVM7UUFDekIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLGNBQWMsRUFBRSxDQUFDO1FBQ25DLElBQUksQ0FBQyxZQUFZLEdBQUcsRUFBRSxDQUFDO1FBQ3ZCLE1BQU07UUFDTixJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUMxRCxJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1FBQzFELElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUNsRCxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDbEQsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFFO1FBQzVFLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN2QyxJQUFJLENBQUMsY0FBYyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3RDLENBQUM7SUFHRDs7T0FFRzs7Ozs7O0lBQ0gsK0NBQWU7Ozs7O0lBQWYsVUFBZ0IsSUFBUztRQUN2QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUNsQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQzdCLE9BQU87UUFDUCxJQUFJLElBQUksQ0FBQyxRQUFRLEtBQUssRUFBRSxFQUFFO1lBQ3hCLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUNwQyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEM7YUFBTTtZQUNMLFdBQVc7WUFDWCxJQUFJLElBQUksQ0FBQyxjQUFjLEtBQUssSUFBSSxDQUFDLFFBQVEsRUFBRTtnQkFDekMsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO2dCQUNwQyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDeEM7U0FDRjtJQUNILENBQUM7O2dCQTFEQSxTQUFTLFNBQUM7O29CQUVULFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLG1rQkFBNkM7O2lCQUU5Qzs7Ozs7OEJBR0UsS0FBSzsyQkFDTCxLQUFLO3dCQUNMLEtBQUs7aUNBS0wsU0FBUyxTQUFDLGdCQUFnQjtrQ0FHMUIsTUFBTTs7SUEwQ1QsNEJBQUM7Q0FBQSxBQTVERCxJQTREQztTQXREWSxxQkFBcUI7OztJQUVoQyw0Q0FBMEI7O0lBQzFCLHlDQUEwQjs7SUFDMUIsc0NBQWlDOztJQUNqQyw2Q0FBdUI7O0lBQ3ZCLHVDQUF1Qjs7SUFDdkIsK0NBQW9COztJQUVwQiwrQ0FBNkQ7Ozs7O0lBRzdELGdEQUE2RiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgQ29tcG9uZW50LCBPbkluaXQsIFZpZXdDaGlsZCwgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBJbmplY3RvcixcclxuICBUZW1wbGF0ZVJlZiwgSG9zdEJpbmRpbmcsIEFmdGVyVmlld0NoZWNrZWQsIE91dHB1dCwgSW5wdXQsIEV2ZW50RW1pdHRlclxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBmcm9tIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IExvb2t1cENvbXBvbmVudCB9IGZyb20gJ0BmYXJyaXMvdWktbG9va3VwJztcclxuaW1wb3J0IHsgUmVBc3NpZ25FbnRpdHkgfSBmcm9tICcuLi8uLi8uLi9jb21tb24vZW50aXR5JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3JcclxuICBzZWxlY3RvcjogJ3JhYy1yZWFzc2lnbi1oZWxwJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vcmVhc3NpZ24taGVscC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vcmVhc3NpZ24taGVscC5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFJlYXNzaWduSGVscENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIEBJbnB1dCgpIGRpc3BsYXlUZXh0ID0gJyc7XHJcbiAgQElucHV0KCkgY3VyS2V5SWQ6IHN0cmluZztcclxuICBASW5wdXQoKSBkYXRhczogUmVBc3NpZ25FbnRpdHlbXTtcclxuICBjdXJLZXlJZExpc3Q6IHN0cmluZ1tdO1xyXG4gIGN1ck9iajogUmVBc3NpZ25FbnRpdHk7XHJcbiAgc2VsZWN0ZWRLZXlPbGQgPSAnJztcclxuXHJcbiAgQFZpZXdDaGlsZCgncmVhc3NpZ25Mb29rdXAnKSByZWFzc2lnbkxvb2t1cDogTG9va3VwQ29tcG9uZW50O1xyXG5cclxuICAvKiog5a+86Iiq5LqL5Lu2ICovXHJcbiAgQE91dHB1dCgpIHNlbGVjdGVkQ2hhbmdlZDogRXZlbnRFbWl0dGVyPFJlQXNzaWduRW50aXR5PiA9IG5ldyBFdmVudEVtaXR0ZXI8UmVBc3NpZ25FbnRpdHk+KCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbiAgIC8vIOWPluaVsOWIl1xyXG4gICBhZnRlcktleVNlbGVjdGVkKGFyZ3M6IGFueSkge1xyXG4gICAgdGhpcy5jdXJPYmogPSBuZXcgUmVBc3NpZ25FbnRpdHkoKTtcclxuICAgIHRoaXMuY3VyS2V5SWRMaXN0ID0gW107XHJcbiAgICAvLyDmm7TmlrDlgLxcclxuICAgIHRoaXMuY3VyT2JqLmlkID0gYXJnc1snaWQnXTtcclxuICAgIHRoaXMuY3VyT2JqLmF1dGhvcml6YXRpb25Db2RlID0gYXJnc1snYXV0aG9yaXphdGlvbkNvZGUnXTtcclxuICAgIHRoaXMuY3VyT2JqLmF1dGhvcml6YXRpb25OYW1lID0gYXJnc1snYXV0aG9yaXphdGlvbk5hbWUnXTtcclxuICAgIHRoaXMuY3VyT2JqLmF1dGhmaWVsZENvZGUgPSBhcmdzWydhdXRoZmllbGRDb2RlJ107XHJcbiAgICB0aGlzLmN1ck9iai5hdXRoZmllbGROYW1lID0gYXJnc1snYXV0aGZpZWxkTmFtZSddO1xyXG4gICAgdGhpcy5kaXNwbGF5VGV4dCA9IGFyZ3NbJ2F1dGhvcml6YXRpb25OYW1lJ10gKyAnICcgKyBhcmdzWydhdXRoZmllbGROYW1lJ10gO1xyXG4gICAgdGhpcy5zZWxlY3RlZENoYW5nZWQuZW1pdCh0aGlzLmN1ck9iaik7XHJcbiAgICB0aGlzLnJlYXNzaWduTG9va3VwLmNsb3NlRGlhbG9nKCk7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICog6YCJ5Lit6KGM5pS55Y+Y5ZCO6Kem5Y+R5LqL5Lu2XHJcbiAqL1xyXG5oYW5kbGVTZWxlY3Rpb24oYXJnczogYW55KSB7XHJcbiAgdGhpcy5jdXJLZXlJZCA9IGFyZ3Mubm9kZS5kYXRhLmlkO1xyXG4gIHRoaXMuY3VyT2JqID0gYXJncy5ub2RlLmRhdGE7XHJcbiAgLy8g6aaW5qyh6Kem5Y+RXHJcbiAgaWYgKHRoaXMuY3VyS2V5SWQgPT09ICcnKSB7XHJcbiAgICB0aGlzLnNlbGVjdGVkS2V5T2xkID0gdGhpcy5jdXJLZXlJZDtcclxuICAgIHRoaXMuc2VsZWN0ZWRDaGFuZ2VkLmVtaXQodGhpcy5jdXJPYmopO1xyXG4gIH0gZWxzZSB7XHJcbiAgICAvLyDlj5jljJbnmoTmg4XlhrXkuIvop6blj5FcclxuICAgIGlmICh0aGlzLnNlbGVjdGVkS2V5T2xkICE9PSB0aGlzLmN1cktleUlkKSB7XHJcbiAgICAgIHRoaXMuc2VsZWN0ZWRLZXlPbGQgPSB0aGlzLmN1cktleUlkO1xyXG4gICAgICB0aGlzLnNlbGVjdGVkQ2hhbmdlZC5lbWl0KHRoaXMuY3VyT2JqKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbn1cclxuIl19