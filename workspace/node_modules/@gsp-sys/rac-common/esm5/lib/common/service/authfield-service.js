/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { RestfulService } from '@farris/devkit';
import { RacCommonUtil } from '../util/rac-util';
import { of } from 'rxjs/observable/of';
import { MessagerService } from '@farris/ui-messager';
/**
 * 取数服务
 */
var AuthfieldService = /** @class */ (function () {
    function AuthfieldService(rest, util, msgService) {
        this.rest = rest;
        this.util = util;
        this.msgService = msgService;
    }
    /**根据权限字段的标识获取权限字段
     * @param authfield 权限字段标识
     */
    /**
     * 根据权限字段的标识获取权限字段
     * @param {?} authfield 权限字段标识
     * @return {?}
     */
    AuthfieldService.prototype.getbyId = /**
     * 根据权限字段的标识获取权限字段
     * @param {?} authfield 权限字段标识
     * @return {?}
     */
    function (authfield) {
        /** @type {?} */
        var headers = this.util.getHeader();
        /** @type {?} */
        var url = this.util.getAuthfieldPath() + "/" + authfield;
        return this.rest.get(url, null, headers);
    };
    /**
     * 异常处理
     * @param auobj 权限对象实体
     */
    /**
     * 异常处理
     * @param {?} error
     * @return {?}
     */
    AuthfieldService.prototype.handlerError = /**
     * 异常处理
     * @param {?} error
     * @return {?}
     */
    function (error) {
        console.log(error);
        this.msgService.error(error.error.Message);
    };
    /**
     * @private
     * @template T
     * @param {?=} operation
     * @param {?=} result
     * @return {?}
     */
    AuthfieldService.prototype.handleError = /**
     * @private
     * @template T
     * @param {?=} operation
     * @param {?=} result
     * @return {?}
     */
    function (operation, result) {
        if (operation === void 0) { operation = 'operation'; }
        return (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            console.error(error); // log to console instead
            return of((/** @type {?} */ (result)));
        });
    };
    AuthfieldService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    AuthfieldService.ctorParameters = function () { return [
        { type: RestfulService },
        { type: RacCommonUtil },
        { type: MessagerService }
    ]; };
    return AuthfieldService;
}());
export { AuthfieldService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    AuthfieldService.prototype.rest;
    /**
     * @type {?}
     * @private
     */
    AuthfieldService.prototype.util;
    /**
     * @type {?}
     * @private
     */
    AuthfieldService.prototype.msgService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aGZpZWxkLXNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXN5cy9yYWMtY29tbW9uLyIsInNvdXJjZXMiOlsibGliL2NvbW1vbi9zZXJ2aWNlL2F1dGhmaWVsZC1zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFHQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUFFLEVBQUUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3hDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7OztBQUd0RDtJQUVJLDBCQUNZLElBQW9CLEVBQ3BCLElBQW1CLEVBQ25CLFVBQTJCO1FBRjNCLFNBQUksR0FBSixJQUFJLENBQWdCO1FBQ3BCLFNBQUksR0FBSixJQUFJLENBQWU7UUFDbkIsZUFBVSxHQUFWLFVBQVUsQ0FBaUI7SUFFdkMsQ0FBQztJQUVEOztPQUVHOzs7Ozs7SUFDSCxrQ0FBTzs7Ozs7SUFBUCxVQUFRLFNBQWlCOztZQUNmLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTs7WUFDL0IsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsR0FBRyxHQUFHLEdBQUcsU0FBUztRQUMxRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUdEOzs7T0FHRzs7Ozs7O0lBQ0gsdUNBQVk7Ozs7O0lBQVosVUFBYSxLQUF3QjtRQUNqQyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ25CLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0MsQ0FBQzs7Ozs7Ozs7SUFFTyxzQ0FBVzs7Ozs7OztJQUFuQixVQUF1QixTQUF1QixFQUFFLE1BQVU7UUFBbkMsMEJBQUEsRUFBQSx1QkFBdUI7UUFDMUM7Ozs7UUFBTyxVQUFDLEtBQVU7WUFDZCxPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMseUJBQXlCO1lBQy9DLE9BQU8sRUFBRSxDQUFDLG1CQUFBLE1BQU0sRUFBSyxDQUFDLENBQUM7UUFDM0IsQ0FBQyxFQUFDO0lBQ04sQ0FBQzs7Z0JBakNKLFVBQVU7Ozs7Z0JBTkYsY0FBYztnQkFDZCxhQUFhO2dCQUViLGVBQWU7O0lBcUN4Qix1QkFBQztDQUFBLEFBbENELElBa0NDO1NBakNZLGdCQUFnQjs7Ozs7O0lBRXJCLGdDQUE0Qjs7Ozs7SUFDNUIsZ0NBQTJCOzs7OztJQUMzQixzQ0FBbUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwRXJyb3JSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUmVzdGZ1bFNlcnZpY2UgfSBmcm9tICdAZmFycmlzL2RldmtpdCc7XHJcbmltcG9ydCB7IFJhY0NvbW1vblV0aWwgfSBmcm9tICcuLi91dGlsL3JhYy11dGlsJztcclxuaW1wb3J0IHsgb2YgfSBmcm9tICdyeGpzL29ic2VydmFibGUvb2YnO1xyXG5pbXBvcnQgeyBNZXNzYWdlclNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLW1lc3NhZ2VyJztcclxuXHJcbi8qKiDlj5bmlbDmnI3liqEgKi9cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgQXV0aGZpZWxkU2VydmljZSB7XHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBwcml2YXRlIHJlc3Q6IFJlc3RmdWxTZXJ2aWNlLFxyXG4gICAgICAgIHByaXZhdGUgdXRpbDogUmFjQ29tbW9uVXRpbCxcclxuICAgICAgICBwcml2YXRlIG1zZ1NlcnZpY2U6IE1lc3NhZ2VyU2VydmljZSxcclxuICAgICkge1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuagueaNruadg+mZkOWtl+auteeahOagh+ivhuiOt+WPluadg+mZkOWtl+autVxyXG4gICAgICogQHBhcmFtIGF1dGhmaWVsZCDmnYPpmZDlrZfmrrXmoIfor4ZcclxuICAgICAqL1xyXG4gICAgZ2V0YnlJZChhdXRoZmllbGQ6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICAgICAgY29uc3QgaGVhZGVycyA9IHRoaXMudXRpbC5nZXRIZWFkZXIoKTtcclxuICAgICAgICBjb25zdCB1cmwgPSB0aGlzLnV0aWwuZ2V0QXV0aGZpZWxkUGF0aCgpICsgYC9gICsgYXV0aGZpZWxkO1xyXG4gICAgICAgIHJldHVybiB0aGlzLnJlc3QuZ2V0KHVybCwgbnVsbCwgaGVhZGVycyk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5byC5bi45aSE55CGXHJcbiAgICAgKiBAcGFyYW0gYXVvYmog5p2D6ZmQ5a+56LGh5a6e5L2TXHJcbiAgICAgKi9cclxuICAgIGhhbmRsZXJFcnJvcihlcnJvcjogSHR0cEVycm9yUmVzcG9uc2UpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICAgICAgdGhpcy5tc2dTZXJ2aWNlLmVycm9yKGVycm9yLmVycm9yLk1lc3NhZ2UpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgaGFuZGxlRXJyb3I8VD4ob3BlcmF0aW9uID0gJ29wZXJhdGlvbicsIHJlc3VsdD86IFQpIHtcclxuICAgICAgICByZXR1cm4gKGVycm9yOiBhbnkpOiBPYnNlcnZhYmxlPFQ+ID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7IC8vIGxvZyB0byBjb25zb2xlIGluc3RlYWRcclxuICAgICAgICAgICAgcmV0dXJuIG9mKHJlc3VsdCBhcyBUKTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==