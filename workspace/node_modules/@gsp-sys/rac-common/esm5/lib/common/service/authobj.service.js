/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { RestfulService } from '@farris/devkit';
import { RacCommonUtil } from '../util/rac-util';
import { of } from 'rxjs/observable/of';
import { MessagerService } from '@farris/ui-messager';
/**
 * 取数服务
 */
var AuthObjService = /** @class */ (function () {
    function AuthObjService(rest, util, msgService) {
        this.rest = rest;
        this.util = util;
        this.msgService = msgService;
    }
    /**
     * 获取指定权限对象、数据操作下关联的权限字段
     */
    /**
     * 获取指定权限对象、数据操作下关联的权限字段
     * @param {?} authObjId
     * @param {?} authOpId
     * @return {?}
     */
    AuthObjService.prototype.getAuthEntryByOp = /**
     * 获取指定权限对象、数据操作下关联的权限字段
     * @param {?} authObjId
     * @param {?} authOpId
     * @return {?}
     */
    function (authObjId, authOpId) {
        /** @type {?} */
        var url = this.util.getAuthorizationPath() + "/" + authObjId + "/" + authOpId;
        /** @type {?} */
        var headers = this.util.getHeader();
        return this.rest.get(url, null, headers);
    };
    /**
     * @return {?}
     */
    AuthObjService.prototype.getAll = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var headers = this.util.getHeader();
        /** @type {?} */
        var url = this.util.getAuthorizationPath() + '/designtime';
        return this.rest.get(url, null, headers);
    };
    /**
     * @return {?}
     */
    AuthObjService.prototype.getAllReAssign = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var headers = this.util.getHeader();
        /** @type {?} */
        var url = this.util.getAuthorizationPath() + '/reassign';
        return this.rest.get(url, null, headers);
    };
    /**
     * 异常处理
     * @param auobj 权限对象实体
     */
    /**
     * 异常处理
     * @param {?} error
     * @return {?}
     */
    AuthObjService.prototype.handlerError = /**
     * 异常处理
     * @param {?} error
     * @return {?}
     */
    function (error) {
        console.log(error);
        this.msgService.error(error.error.Message);
    };
    /**
     * @private
     * @template T
     * @param {?=} operation
     * @param {?=} result
     * @return {?}
     */
    AuthObjService.prototype.handleError = /**
     * @private
     * @template T
     * @param {?=} operation
     * @param {?=} result
     * @return {?}
     */
    function (operation, result) {
        if (operation === void 0) { operation = 'operation'; }
        return (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            console.error(error); // log to console instead
            return of((/** @type {?} */ (result)));
        });
    };
    AuthObjService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    AuthObjService.ctorParameters = function () { return [
        { type: RestfulService },
        { type: RacCommonUtil },
        { type: MessagerService }
    ]; };
    return AuthObjService;
}());
export { AuthObjService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    AuthObjService.prototype.rest;
    /**
     * @type {?}
     * @private
     */
    AuthObjService.prototype.util;
    /**
     * @type {?}
     * @private
     */
    AuthObjService.prototype.msgService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aG9iai5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1zeXMvcmFjLWNvbW1vbi8iLCJzb3VyY2VzIjpbImxpYi9jb21tb24vc2VydmljZS9hdXRob2JqLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUdBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDeEMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7O0FBR3REO0lBRUksd0JBQ1ksSUFBb0IsRUFDcEIsSUFBbUIsRUFDbkIsVUFBMkI7UUFGM0IsU0FBSSxHQUFKLElBQUksQ0FBZ0I7UUFDcEIsU0FBSSxHQUFKLElBQUksQ0FBZTtRQUNuQixlQUFVLEdBQVYsVUFBVSxDQUFpQjtJQUV2QyxDQUFDO0lBRUQ7O09BRUc7Ozs7Ozs7SUFDSCx5Q0FBZ0I7Ozs7OztJQUFoQixVQUFpQixTQUFpQixFQUFFLFFBQWdCOztZQUMxQyxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxHQUFHLEdBQUcsR0FBRyxTQUFTLEdBQUcsR0FBRyxHQUFHLFFBQVE7O1lBQ3pFLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtRQUNyQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDN0MsQ0FBQzs7OztJQUdELCtCQUFNOzs7SUFBTjs7WUFDVSxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUU7O1lBQy9CLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLG9CQUFvQixFQUFFLEdBQUcsYUFBYTtRQUM1RCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDN0MsQ0FBQzs7OztJQUVELHVDQUFjOzs7SUFBZDs7WUFDVSxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUU7O1lBQy9CLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLG9CQUFvQixFQUFFLEdBQUcsV0FBVztRQUMxRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUdEOzs7T0FHRzs7Ozs7O0lBQ0gscUNBQVk7Ozs7O0lBQVosVUFBYSxLQUF3QjtRQUNqQyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ25CLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0MsQ0FBQzs7Ozs7Ozs7SUFFTyxvQ0FBVzs7Ozs7OztJQUFuQixVQUF1QixTQUF1QixFQUFFLE1BQVU7UUFBbkMsMEJBQUEsRUFBQSx1QkFBdUI7UUFDMUM7Ozs7UUFBTyxVQUFDLEtBQVU7WUFDZCxPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMseUJBQXlCO1lBQy9DLE9BQU8sRUFBRSxDQUFDLG1CQUFBLE1BQU0sRUFBSyxDQUFDLENBQUM7UUFDM0IsQ0FBQyxFQUFDO0lBQ04sQ0FBQzs7Z0JBOUNKLFVBQVU7Ozs7Z0JBTkYsY0FBYztnQkFDZCxhQUFhO2dCQUViLGVBQWU7O0lBa0R4QixxQkFBQztDQUFBLEFBL0NELElBK0NDO1NBOUNZLGNBQWM7Ozs7OztJQUVuQiw4QkFBNEI7Ozs7O0lBQzVCLDhCQUEyQjs7Ozs7SUFDM0Isb0NBQW1DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cEVycm9yUmVzcG9uc2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFJlc3RmdWxTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy9kZXZraXQnO1xyXG5pbXBvcnQgeyBSYWNDb21tb25VdGlsIH0gZnJvbSAnLi4vdXRpbC9yYWMtdXRpbCc7XHJcbmltcG9ydCB7IG9mIH0gZnJvbSAncnhqcy9vYnNlcnZhYmxlL29mJztcclxuaW1wb3J0IHsgTWVzc2FnZXJTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1tZXNzYWdlcic7XHJcblxyXG4vKiog5Y+W5pWw5pyN5YqhICovXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIEF1dGhPYmpTZXJ2aWNlIHtcclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIHByaXZhdGUgcmVzdDogUmVzdGZ1bFNlcnZpY2UsXHJcbiAgICAgICAgcHJpdmF0ZSB1dGlsOiBSYWNDb21tb25VdGlsLFxyXG4gICAgICAgIHByaXZhdGUgbXNnU2VydmljZTogTWVzc2FnZXJTZXJ2aWNlLFxyXG4gICAgKSB7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflj5bmjIflrprmnYPpmZDlr7nosaHjgIHmlbDmja7mk43kvZzkuIvlhbPogZTnmoTmnYPpmZDlrZfmrrVcclxuICAgICAqL1xyXG4gICAgZ2V0QXV0aEVudHJ5QnlPcChhdXRoT2JqSWQ6IHN0cmluZywgYXV0aE9wSWQ6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICAgICAgY29uc3QgdXJsID0gdGhpcy51dGlsLmdldEF1dGhvcml6YXRpb25QYXRoKCkgKyBgL2AgKyBhdXRoT2JqSWQgKyBgL2AgKyBhdXRoT3BJZDtcclxuICAgICAgICBjb25zdCBoZWFkZXJzID0gdGhpcy51dGlsLmdldEhlYWRlcigpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLnJlc3QuZ2V0KHVybCwgbnVsbCwgaGVhZGVycyk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGdldEFsbCgpOiBPYnNlcnZhYmxlPGFueVtdPiB7XHJcbiAgICAgICAgY29uc3QgaGVhZGVycyA9IHRoaXMudXRpbC5nZXRIZWFkZXIoKTtcclxuICAgICAgICBjb25zdCB1cmwgPSB0aGlzLnV0aWwuZ2V0QXV0aG9yaXphdGlvblBhdGgoKSArICcvZGVzaWdudGltZSc7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucmVzdC5nZXQodXJsLCBudWxsLCBoZWFkZXJzKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRBbGxSZUFzc2lnbigpOiBPYnNlcnZhYmxlPGFueVtdPiB7XHJcbiAgICAgICAgY29uc3QgaGVhZGVycyA9IHRoaXMudXRpbC5nZXRIZWFkZXIoKTtcclxuICAgICAgICBjb25zdCB1cmwgPSB0aGlzLnV0aWwuZ2V0QXV0aG9yaXphdGlvblBhdGgoKSArICcvcmVhc3NpZ24nO1xyXG4gICAgICAgIHJldHVybiB0aGlzLnJlc3QuZ2V0KHVybCwgbnVsbCwgaGVhZGVycyk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5byC5bi45aSE55CGXHJcbiAgICAgKiBAcGFyYW0gYXVvYmog5p2D6ZmQ5a+56LGh5a6e5L2TXHJcbiAgICAgKi9cclxuICAgIGhhbmRsZXJFcnJvcihlcnJvcjogSHR0cEVycm9yUmVzcG9uc2UpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICAgICAgdGhpcy5tc2dTZXJ2aWNlLmVycm9yKGVycm9yLmVycm9yLk1lc3NhZ2UpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgaGFuZGxlRXJyb3I8VD4ob3BlcmF0aW9uID0gJ29wZXJhdGlvbicsIHJlc3VsdD86IFQpIHtcclxuICAgICAgICByZXR1cm4gKGVycm9yOiBhbnkpOiBPYnNlcnZhYmxlPFQ+ID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7IC8vIGxvZyB0byBjb25zb2xlIGluc3RlYWRcclxuICAgICAgICAgICAgcmV0dXJuIG9mKHJlc3VsdCBhcyBUKTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==