{"version":3,"sources":["ng://@gsp-sys/rac-common/lib/common/entity/authentry.entity.ts","ng://@gsp-sys/rac-common/lib/common/entity/authfield.entity.ts","ng://@gsp-sys/rac-common/lib/common/entity/authobj.entity.ts","ng://@gsp-sys/rac-common/lib/common/entity/reassign.entity.ts","ng://@gsp-sys/rac-common/lib/common/entity/operation.entity.ts","ng://@gsp-sys/rac-common/lib/common/entity/data-source-context.entity.ts","ng://@gsp-sys/rac-common/lib/common/entity/fetchertype.ts","ng://@gsp-sys/rac-common/lib/common/entity/auresult.entity.ts","ng://@gsp-sys/rac-common/lib/common/entity/auth-data-source.entity.ts","ng://@gsp-sys/rac-common/lib/common/entity/hierarchical-type.enum.ts","ng://@gsp-sys/rac-common/lib/common/entity/hierarchicalInfo.entity.ts","ng://@gsp-sys/rac-common/lib/common/entity/field-access-type.ts","ng://@gsp-sys/rac-common/lib/common/entity/auresut-changes.entity.ts","ng://@gsp-sys/rac-common/lib/common/entity/datafetcher.entity.ts","ng://@gsp-sys/rac-common/lib/common/entity/dbocolumn.entity.ts","ng://@gsp-sys/rac-common/lib/common/entity/rule-type.enum.ts","ng://@gsp-sys/rac-common/lib/common/entity/resultcontext.entity.ts","ng://@gsp-sys/rac-common/lib/common/util/rac-util.ts","ng://@gsp-sys/rac-common/lib/common/service/tree.service.ts","ng://@gsp-sys/rac-common/lib/common/service/reassign.service.ts","ng://@gsp-sys/rac-common/lib/common/service/auresult-service.ts","ng://@gsp-sys/rac-common/lib/common/service/authfield-service.ts","ng://@gsp-sys/rac-common/lib/common/util/page.ts","ng://@gsp-sys/rac-common/lib/common/service/authobj.service.ts","ng://@gsp-sys/rac-common/lib/common/util/local-repository.ts","ng://@gsp-sys/rac-common/lib/component/data-help/data-help.component.ts","ng://@gsp-sys/rac-common/lib/component/auobj/auobj-help/auobj-help.component.ts","ng://@gsp-sys/rac-common/lib/component/auobj/auobj-tree/auobj-tree.component.ts","ng://@gsp-sys/rac-common/lib/component/authfield/authfield-help/authfield-help.component.ts","ng://@gsp-sys/rac-common/lib/component/authfield/authfield-tree/authfield-tree.component.ts","ng://@gsp-sys/rac-common/lib/component/reassign/reassign-grid/reassign-grid.component.ts","ng://@gsp-sys/rac-common/lib/component/reassign/reassign-help/reassign-help.component.ts","ng://@gsp-sys/rac-common/lib/raccommon.module.ts"],"names":["AuthEntryEntity","AuthFieldEntity","GSPAuthFieldGroup","AuthobjEntity","ReAssignEntity","OperationEntity","DataSourceContextEntity","None","DataRow","Column","Rule","BizDataDTO","AuresultEntity","AuthDataSource","AuthDataField","Undefined","Parent","Path","ParentAndPath","HierarchicalInfoEntity","ReadOnly","Full","AuresultChangesEntity","AuresultSave","DataFetcherEntity","DBOColumnEntity","True","Common","ResultContextEntity","this","inheritPermission","assid1","assid2","auVarValues","AuthfieldVarEntity","RacCommonUtil","sessionSv","AUDATACONTROL","expandIcon","collapseIcon","leafIcon","prototype","getHeader","sessionId","getCurrentSeesionId","headers","HttpHeaders","set","getCurrentUserId","getGuid36","S4","Math","random","toString","substring","getResultPath","getAuthorizationPath","getAuthfieldPath","getReAssignPath","getAddIds","newarr","oldarr","addIds","forEach","x","includes","push","getRemoveIds","convertToBizDataDTO","arrs","map","dataDto","data","isNullOrEmptyString","value","isBlank","trim","length","undefined","isNotNullOrEmptyString","findLayer1ByParentId","datas","key","parentKey","rtn","find","parent","type","parentId","isNav","setTreeIcon","farrisTt","detectChanges","Injectable","SessionService","TreeService","util","makeTreeByPath","pathField","_this","pathLayerOnes","filter","findObj","treedata","entity","item","findChildrenByPath","childList","childitem","child","childEntity","makeTreeByParent","parentField","keyField","findChildrenByParent","ReAssignService","rest","msgService","getAll","url","get","RestfulService","MessagerService","AuresultService","session","getDataSourceByContext","authField","resultContext","urlNew","year","yearObj","post","param","ownerId","ownerType","authfield","getDataSource","getNoUsersDataSource","getNoUsersDataSourceByGroup","getYears","su","AuthfieldService","getbyId","handlerError","error","console","log","Message","handleError","operation","result","of","PAGESIZES","AuthObjService","getAuthEntryByOp","authObjId","authOpId","getAllReAssign","LocalRepository","mapAuresults","Map","mapDataSource","DataHelpComponent","notifyService","treeService","closeModalEmitter","EventEmitter","selectEmitter","selectedModels","hasSelectKeys","isHasSelectAll","canAssignDatas","isDisplayTree","isShowSearch","isSelectAll","selectKeys","singleSelect","treeHeight","isAuGroup","selectByGroupEmitter","dataKey","helpFields","showFields","codeOrNameFields","authDataSource","isEnable","isAllAuth","skip","pageSize","pageIndex","flatData","root","saveSelections","treeCols","loadDataType","cascadeCheck","cascadeUp","cascadeDown","isTreeLoaded","searchInfo","searchDatas","searchTitle","oldTreeSearch","treeSearchIndex","pageSetting","buttonCount","info","pageSizes","previousNext","ngOnInit","getAuthDataSource","displayData","showElement","hierarchicalType","hierarchicalInfo","getCodeOrNameFields","showTreeInfo","queryByPage","hideElement","field","title","width","HierarchicalType","parentKeyField","farrisTree","loadedData","subscribe","d","expandNode","checkAllNodes","checkedNodes","Object","defineProperty","checkboxOnly","mode","enabled","iconClass","_a","k-i-folder","k-icon","getSelectInfo","selectedKey","isIntegrityData","checkeds","checkedRows","n","m","y","getIsAllAuth","confirm","next","cancle","checkAllClick","findIndex","unCheckAllNodes","index","splice","checkClick","onSelectedKeysChange","e","pageChange","event","take","gridView","slice","total","searchClick","search","txt","searchTree","i","indexOf","toLocaleLowerCase","searchTreeSelf","arg","clearSelections","selectNode","collapseAll","expandParent","warning","parentNode","findRowNode","id","treeCheckAll","treeUnCheckAll","nodeUnChecked","elementName","document","getElementById","style","display","Component","args","selector","template","NotifyService","ViewChild","Output","Input","AuobjHelpComponent","displayText","selectedKeyOld","selectedChanged","curKeyIdList","curKeyId","afterKeySelected","curAuthObj","from","name","emit","auobjLookup","closeDialog","handleSelection","node","AuobjTreeComponent","service","racUtil","translate","cols","selectedchanged","selectedAfterOk","initData","dataMode","initNodeList_1","convertToTreeNode","initTreeNodeList","treeNodeData","children","leaf","obj","icon","appendNode","newObj","selectedRow","append","removeNode","remove","updateNode","selectedModel","TranslateService","AuthfieldHelpComponent","AuthfieldTreeComponent","ReassignGridComponent","reAssignService","columns","ngOnChanges","changes","ReassignHelpComponent","curObj","authorizationCode","authorizationName","authfieldCode","authfieldName","reassignLookup","RacCommonModule","NgModule","declarations","imports","CommonModule","HttpClientModule","ButtonsModule","FormsModule","ReactiveFormsModule","GridModule","DatagridModule","KendoLayoutModule","LayoutModule","FarrisPanelModule","TreeTableModule","DataTableModule","TreeViewModule","LookupModule","ModalModule","forRoot","MessagerModule","entryComponents","providers","exports"],"mappings":"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","sourcesContent":["import { FetcherType } from './fetchertype';\r\n\r\n/**\r\n * æä½å®ä½\r\n */\r\nexport class AuthEntryEntity {\r\n\r\n    /**\r\n     * åç \r\n     */\r\n    id: string;\r\n\r\n\r\n    /**\r\n     * æéå¯¹è±¡Id\r\n     */\r\n   authorizationId: string;\r\n\r\n    /**\r\n     * æéå­æ®µId\r\n     */\r\n    authField: string;\r\n\r\n    /**\r\n     * æéå­æ®µç¼å·\r\n     */\r\n   authFieldCode: string;\r\n\r\n    /**\r\n     * æéå­æ®µåç§°\r\n     */\r\n   authFieldName: string;\r\n\r\n    /**\r\n     * åç½®åæ§ä¸»ä½\r\n     */\r\n    ctrlObj: string;\r\n\r\n    /**\r\n     * å®éåæ§ä¸»ä½\r\n     */\r\n    realCtrlObj: string;\r\n\r\n    /**\r\n     * åç½®å¯ç¨ç¶æ\r\n     */\r\n    state: string;\r\n\r\n    /**\r\n     * å®éå¯ç¨ç¶æ\r\n     */\r\n    realState: string;\r\n\r\n    /**\r\n     * æè¿°\r\n     */\r\n    note: string;\r\n\r\n    /**\r\n     * å³èçæ°æ®æä½\r\n     */\r\n    authOps: any[];\r\n\r\n\r\n    /** æéå­æ®µçç±»åï¼è¡ãåãè§å */\r\n    aoFetcherType: FetcherType;\r\n}\r\n","import { FetcherType } from './fetchertype';\r\nimport { DataFetcherEntity } from './datafetcher.entity';\r\n\r\n/**\r\n * æéå­æ®µå®ä½\r\n */\r\nexport class AuthFieldEntity {\r\n\r\n    /**\r\n     * åç \r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * ç¼å·\r\n     */\r\n    code: string;\r\n\r\n    /**\r\n     * åç§°\r\n     */\r\n    name: string;\r\n\r\n     /**\r\n      * ç¶èç¹\r\n      */\r\n    parentId: string;\r\n\r\n    /**\r\n     * ç±»åï¼0åç»ï¼1æéå­æ®µï¼99ä¸å¡å¯¹è±¡ï¼1äº§åã2å³é®åºç¨ã3SUçº§ï¼\r\n     */\r\n    type: string;\r\n\r\n     /** æ¯å¦åç»æ¨¡å¼ */\r\n    isAuGroup: boolean;\r\n\r\n     /** æ¯å¦è¿æ»¤æ¨¡å¼ */\r\n    isAuGroupFilter: boolean;\r\n\r\n    /** æ¯å¦åç»´åº¦æ§å¶ */\r\n    isCtrlByGroup: boolean;\r\n\r\n    /** æ¯å¦åç»æ¨¡å¼ */\r\n    authFieldGroups: GSPAuthFieldGroup[];\r\n\r\n     /** æ¯å¦åºåå¹´åº¦ */\r\n     isYear: boolean;\r\n\r\n      /** æ¯å¦å±æ§å±ç¤º */\r\n     displayTree: boolean;\r\n\r\n     /** æéå­æ®µçç±»åï¼è¡ãåãè§å */\r\n     aoFetcherType: FetcherType;\r\n\r\n     /** åæ°ä¿¡æ¯ */\r\n     dataFetcher: DataFetcherEntity;\r\n\r\n     /** æ¯å¦å¯ç¨åçº§ææ */\r\n     auDataControl: boolean;\r\n\r\n     /** æå¨SU */\r\n     su: string;\r\n}\r\n\r\n/**\r\n * æéå­æ®µåç»\r\n */\r\nexport class GSPAuthFieldGroup {\r\n\r\n    /** æéå­æ®µ */\r\n    authField: string;\r\n\r\n    /** ç»´åº¦å¯¹åºçæéå­æ®µ */\r\n    groupAuthField: string;\r\n\r\n    /** æ¯å¦åç»´åº¦åç» */\r\n    isAuGroup: boolean;\r\n\r\n    /** ç»´åº¦é¡ºåº */\r\n    dimensionOrder: number;\r\n\r\n    refElementField: string;\r\n}\r\n","import { AuthEntryEntity } from './authentry.entity';\r\nimport { OperationEntity } from './operation.entity';\r\n/**\r\n * æéå¯¹è±¡å®ä½\r\n */\r\nexport class AuthobjEntity {\r\n\r\n    /**\r\n     * åç \r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * ç¼å·\r\n     */\r\n    code: string;\r\n\r\n    /**\r\n     * åç§°\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * ä¸å¡å¯¹è±¡åç \r\n     */\r\n    businessId: string;\r\n\r\n    /**\r\n     * æéå¯¹è±¡çç¶èç¹\r\n     */\r\n    parentId: string;\r\n\r\n     /**\r\n      * ä¸å¡å¯¹è±¡åç§°\r\n      */\r\n    businessName: string;\r\n\r\n    sysInit: boolean;\r\n\r\n     /**\r\n      * ç±»åï¼ç¨äºæéå¯¹è±¡æ æé ï¼0ï¼ä¸å¡å¯¹è±¡ 1ï¼æéå¯¹è±¡\r\n      */\r\n    type: number;\r\n\r\n    /**\r\n     * æè¿°\r\n     */\r\n    note: string;\r\n\r\n    /**\r\n     * æéæä½åè¡¨\r\n     */\r\n    authOps: OperationEntity[];\r\n\r\n    /**\r\n     * æ°æ®å­æ®µåè¡¨\r\n     */\r\n    authEntry: AuthEntryEntity[];\r\n}\r\n","/**\r\n * æä½å®ä½\r\n */\r\nexport class ReAssignEntity {\r\n\r\n    /**\r\n     * åç \r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * æéå¯¹è±¡Id\r\n     */\r\n    authorizationId: string;\r\n\r\n    /**\r\n     * æéå­æ®µId\r\n     */\r\n    authfieldId: string;\r\n\r\n    /**\r\n     * æéå­æ®µç¼å·\r\n     */\r\n    authfieldCode: string;\r\n\r\n    /**\r\n     * æéå­æ®µåç§°\r\n     */\r\n    authfieldName: string;\r\n\r\n    /**\r\n     * æéå­æ®µæ¯å¦ä¸ºæ å½¢å±ç¤º\r\n     */\r\n    displayTree: boolean;\r\n\r\n    /**\r\n     * æéå¯¹è±¡ç¼å·\r\n     */\r\n    authorizationCode: string;\r\n\r\n    /**\r\n     * æéå¯¹è±¡åç§°\r\n     */\r\n    authorizationName: string;\r\n\r\n    /**\r\n     * 1ï¼åå¹¶åçæéï¼0ï¼åç½®çæé\r\n     */\r\n    type: string;\r\n\r\n    /**\r\n     * åéæ¹å¼ï¼1ï¼ç»åæä½ãå¶å®ï¼ä¸ç»å\r\n     */\r\n    assignType: string;\r\n\r\n    /**\r\n     * æ§å¶æ¹å¼ï¼1ï¼ç¨æ·ä¸ä¸åå°±ç¨å²ä½ä¸çï¼ 0æèç©ºï¼ç¨æ·ä¸ä¸åå°±ä»£è¡¨æ²¡ææé\r\n     */\r\n    controlType: string;\r\n}\r\n","\r\n/**\r\n * æ°æ®æä½å®ä½\r\n */\r\nexport class OperationEntity {\r\n\r\n    /**\r\n     * åç \r\n     */\r\n    id: string;\r\n\r\n\r\n    /**\r\n     * ç¼å·\r\n     */\r\n    code: string;\r\n\r\n    /**\r\n     * åç§°\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * æéå¯¹è±¡Id\r\n     */\r\n    authorizationId: string;\r\n\r\n     /**\r\n      * ç±»åï¼0å¬å±ï¼1ç§æ\r\n      */\r\n    type: number;\r\n}\r\n","/**\r\n * æ°æ®æºä¸ä¸æ\r\n */\r\nexport class DataSourceContextEntity {\r\n     /** åç  */\r\n    ownerId: string;\r\n    ownerType: number;\r\n    authfield: string;\r\n    year: string;\r\n    assid1: string;\r\n    assid2: string;\r\n}\r\n","/** åæ°æ¹å¼ è¡ãåãè§å */\r\nexport enum FetcherType {\r\n    None = 0,\r\n    DataRow = 1,\r\n    Column = 2,\r\n    Rule = 3\r\n}\r\n","import {FieldAccessType} from './field-access-type';\r\n\r\n\r\n/**\r\n *   è§åæéå®ä½\r\n */\r\nexport class BizDataDTO  {\r\n    data: string;\r\n    assid1: string;\r\n    assid2: string;\r\n    assid3: string;\r\n    fieldAccessFlag: FieldAccessType;\r\n}\r\n\r\n/**\r\n * æéå­æ®µå®ä½\r\n */\r\nexport class AuresultEntity  {\r\n\r\n    groupId: string;\r\n\r\n\r\n    /**\r\n     * æéåId\r\n     */\r\n    packageId: string;\r\n\r\n    /**\r\n     * æéå¯¹è±¡Id\r\n     */\r\n    authorizationId: string;\r\n\r\n    /**\r\n     * æéå­æ®µId\r\n     */\r\n    authField: string;\r\n\r\n    /**\r\n     * åºäºæéç»æååç»çä¸å¡æ°æ®éå\r\n     */\r\n    datas: BizDataDTO[];\r\n\r\n\r\n    /**\r\n     *  åºäºæéç»æååç»çæ°æ®æä½Idéåï¼ç¨äºä»ä»¥æéå­æ®µä¸ºç»´åº¦åå\r\n     */\r\n    authorizations: AuthorizationEntity[];\r\n\r\n    /**\r\n     *  åºäºæéç»æååç»çæ°æ®æä½Idéåï¼ç¨äºä»¥æéå­æ®µãæéå¯¹è±¡ä¸ºç»´åº¦è¿è¡åå\r\n     */\r\n    authOps: AuthoperationEntity[];\r\n\r\n\r\n    /**\r\n     *  åºäºæéç»æååç»çè§åæé\r\n     */\r\n    ruleEntity: GSPAuthorizationRule[];\r\n}\r\n\r\n/**\r\n * æéå¯¹è±¡å®ä½\r\n */\r\nexport class AuthorizationEntity {\r\n    id: string;\r\n    code: string;\r\n    name: string;\r\n    authOps: AuthoperationEntity[];\r\n}\r\n\r\n/**\r\n * æéç»æå®ä½\r\n */\r\nexport class AuthoperationEntity {\r\n    id: string;\r\n    code: string;\r\n    name: string;\r\n}\r\n\r\n/**\r\n * è§åæéå®ä½\r\n */\r\nexport class GSPAuthorizationRule {\r\n    Type: number;  //  ç±»åï¼1æ å½¢è§åï¼2æ®éè§å\r\n    NeedInput: boolean;  //\r\n    Lbracket: string; // å·¦æ¬å·\r\n    Rbracket: string; // å³æ¬å·\r\n    Variable: string; // åé\r\n    Value: string; // åéå¼\r\n    DisplayValue: string; // å±ç¤ºåç§°\r\n    Relation: string; // å³ç³»\r\n}\r\n\r\n\r\n\r\n","import { GSPAuthFieldGroup } from './authfield.entity';\r\nimport { HierarchicalType } from './hierarchical-type.enum';\r\nimport { HierarchicalInfoEntity } from './hierarchicalinfo.entity';\r\n\r\n/**\r\n * æéå­æ®µå¯¹åºçè®¾ç½®ä¿¡æ¯ï¼åæ°åãå¸®å©åãå±ç¤ºåï¼ä»¥åæ°æ®æº\r\n */\r\nexport class AuthDataSource {\r\n    keyField: string;\r\n    helpFields: string[];\r\n    showFields: AuthDataField[];\r\n    data: any[];\r\n    groupInfos: GSPAuthFieldGroup[];\r\n    hierarchicalType: HierarchicalType;\r\n    hierarchicalInfo: HierarchicalInfoEntity;\r\n    isIntegrityData: boolean;\r\n}\r\n\r\nexport class AuthDataField {\r\n    id: string;\r\n    field: string;\r\n    title: string;\r\n}\r\n\r\n\r\n\r\n","/** åçº§æ¹å¼ */\r\nexport enum HierarchicalType {\r\n        Undefined = 0,\r\n        Parent = 1,\r\n        Path = 2,\r\n        ParentAndPath = 3\r\n}\r\n","\r\n\r\n\r\n\r\nexport class HierarchicalInfoEntity  {\r\n\r\n    /** åçº§ç å­æ®µ */\r\n    pathField: string;\r\n\r\n    /** åçº§ç é¿åº¦ */\r\n    pathLength: number;\r\n\r\n    /** ç¶èç¹å¯¹åºçä¸»é®å­æ®µ */\r\n    parentKeyField: string;\r\n\r\n    /** ç¶èç¹å­æ®µ */\r\n    parentField: string;\r\n    /** æåºå­æ®µ */\r\n    sortOrderField: string;\r\n}\r\n","    /** å­æ®µè®¿é®æé */\r\n    export enum FieldAccessType {\r\n        /** æªå®ä¹ï¼ä¸æ¯å­æ®µæéã */\r\n        Undefined = 0,\r\n        /** æ²¡æä»»ä½è®¿é®æéã */\r\n        None = 1,\r\n         /** åªè¯»æéã */\r\n        ReadOnly = 2,\r\n         /** æ²¡æéå¶ã */\r\n        Full = 3\r\n    }\r\n","\r\nimport { AuresultEntity, AuthoperationEntity } from './auresult.entity';\r\nimport { AuthorizationEntity, GSPAuthorizationRule, BizDataDTO } from './auresult.entity';\r\n/**\r\n * æéåéç»æåæ´éå®ä½\r\n */\r\nexport class AuresultChangesEntity {\r\n\r\n    ownerType: number; // 1 å²ä½ 2 ç¨æ·\r\n    ownerId: string;  // æéæ¥æèæ è¯\r\n    packageId: string;  //\r\n    dictDimensionValue: Map<string, string>;  // å¹´åº¦\r\n    authField: string; // æéå­æ®µ\r\n    authorizationId: string; // æéå¯¹è±¡\r\n    authOpIds: string[]; // æ°æ®æä½éå\r\n    addResult: AuresultSave[];\r\n    removeResult: AuresultSave[];\r\n    editResult: AuresultSave[];\r\n}\r\n\r\n\r\n\r\nexport class AuresultSave {\r\n    packageId: string;\r\n    authField: string;\r\n\r\n    /** æéå¯¹è±¡ï¼ç¨äºä»¥æéå­æ®µãæéå¯¹è±¡ä¸ºç»´åº¦è¿è¡åå */\r\n    authorizationId: string; // æéå¯¹è±¡\r\n    groupId: string;\r\n    datas: BizDataDTO[];\r\n\r\n    /** åºäºæéç»æååç»çæ°æ®æä½Idéåï¼ç¨äºä»¥æéå­æ®µãæéå¯¹è±¡ä¸ºç»´åº¦è¿è¡åå */\r\n    authOps: AuthoperationEntity[];\r\n    ruleEntity: GSPAuthorizationRule[];\r\n}\r\n\r\n\r\n\r\n\r\n","import { Entity, NgField, EntityList, NgList } from '@farris/devkit';\r\nimport { HierarchicalInfoEntity } from './hierarchicalInfo.entity';\r\nimport { HierarchicalType } from './hierarchical-type.enum';\r\nimport { RuleType } from './rule-type.enum';\r\nimport { DBOColumnEntity } from './dbocolumn.entity';\r\n\r\n\r\nexport class DataFetcherEntity {\r\n\r\n    // æ°æ®æº\r\n    dataSource: string;\r\n\r\n    /** åæ°åID */\r\n    key: string;\r\n\r\n    /** åæ°ååå­ */\r\n    keyName: string;\r\n\r\n    // å±ç¤ºå\r\n    listElements: any[];\r\n\r\n    dataSourceType: string;\r\n\r\n    type: any;\r\n\r\n    filter: string;\r\n\r\n\r\n    /** è§åç±»å */\r\n    ruleType: RuleType;\r\n\r\n    hierarchicalType: HierarchicalType;\r\n\r\n    /** åçº§ä¿¡æ¯ */\r\n    hierarchicalInfo: HierarchicalInfoEntity;\r\n\r\n    /** åçº§ç å¯¹è±¡ */\r\n    pathFieldObject: DBOColumnEntity;\r\n\r\n    /** æåºå¯¹è±¡ */\r\n    sortOrderFieldObject: DBOColumnEntity;\r\n\r\n    /** åçº§ç é¿åº¦ */\r\n    pathLength: number;\r\n\r\n    /** ç¶è·¯å¾å¯¹åºçä¸»é®åå¯¹è±¡ */\r\n    parentKeyFieldObject: DBOColumnEntity;\r\n\r\n    /** ç¶è·¯å¾å¯¹è±¡ */\r\n    parentFieldObject: DBOColumnEntity;\r\n\r\n    variantCode: string;\r\n\r\n    sortCondition: any;\r\n\r\n}\r\n","\r\nexport class DBOColumnEntity  {\r\n\r\n    id: string;\r\n    code: string;\r\n    name: string;\r\n}\r\n","/** è§åæ¹å¼ */\r\nexport enum RuleType {\r\n    True = 1,\r\n    Common = 2,\r\n}\r\n","export class ResultContextEntity {\r\n    // æéææèæ è¯\r\n    ownerId: string;\r\n    // æéææèç¼å·\r\n    ownerCode: string;\r\n    // æéææèç¼å·\r\n    ownerName: string;\r\n    /** æéææèç±»å å²ä½1ï¼ç¨æ·2 */\r\n    ownerType: number;\r\n    /**  å²ä½ç±»å ç»ç»å²0ï¼éç¨å²1ï¼ç¨æ·2  */\r\n    posType: number;\r\n    // æéåID\r\n    packageId: string;\r\n    /**  ç»ç»å²ä¸çæ°æ®æéèªå¨ç»§æ¿ä¸å¡ç»ç»æé */\r\n    inheritPermission = false;\r\n    // å¹´åº¦\r\n    yearObj: any;\r\n    year: string;\r\n\r\n    /** ç»´åº¦1çå¼ */\r\n    assid1 = '';\r\n    /** ç»´åº¦2çå¼ */\r\n    assid2 = '';\r\n\r\n    /** åéå¼ */\r\n    auVarValues: AuthfieldVarEntity[] = [];\r\n\r\n    authfield: string;\r\n    authObjId: string;\r\n}\r\n\r\n/** æéå­æ®µç¨å°çåéé®å¼å¯¹ */\r\nexport class AuthfieldVarEntity {\r\n    key: string;\r\n    value: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { SessionService } from '@ecp-caf/caf-common';\r\nimport { BizDataDTO } from '../entity/auresult.entity';\r\nimport { TreeTableComponent } from '@farris/ui-treetable';\r\n\r\n@Injectable()\r\nexport class RacCommonUtil {\r\n\r\n    constructor(private sessionSv: SessionService) {\r\n    }\r\n\r\n    public sessionId: string;\r\n    // public currentUrl = 'http://127.0.0.1:5000';\r\n    // public currentUrl = window.localStorage.getItem('ip');\r\n\r\n    // æéææèæ è¯  TODO å½ä»¤ä¸æ¯æä¼ åæ°ï¼ææ¶è¿ä¹å¤ç\r\n    public ownerId: string;\r\n\r\n    // æéææèç¼å·  TODO å½ä»¤ä¸æ¯æä¼ åæ°ï¼ææ¶è¿ä¹å¤ç\r\n    public ownerCode: string;\r\n\r\n    // æéææèç¼å·  TODO å½ä»¤ä¸æ¯æä¼ åæ°ï¼ææ¶è¿ä¹å¤ç\r\n    public ownerName: string;\r\n\r\n    /** æéææèç±»å å²ä½1ï¼ç¨æ·2 */\r\n    public ownerType: number;\r\n\r\n    /**  å²ä½ç±»å ç»ç»å²0ï¼éç¨å²1ï¼ç¨æ·2 TODO å½ä»¤ä¸æ¯æä¼ åæ°ï¼ææ¶è¿ä¹å¤ç */\r\n     public posType: number;\r\n\r\n    //  TODO å½ä»¤ä¸æ¯æä¼ åæ°ï¼ææ¶è¿ä¹å¤ç\r\n    public packageId: string;\r\n\r\n    // å¹´åº¦  TODO å½ä»¤ä¸æ¯æä¼ åæ°ï¼ææ¶è¿ä¹å¤ç\r\n    public year: any;\r\n    /** ç»´åº¦1çå¼ */\r\n    public assid1 = '';\r\n    /** ç»´åº¦2çå¼ */\r\n    public assid2 = '';\r\n\r\n\r\n    // è·¯ç±è¿æ¥çèåID\r\n    public funcId: string;\r\n\r\n    public AUDATACONTROL = 'AuDataControl';\r\n\r\n    /**\r\n     * æé Header\r\n     */\r\n    getHeader() {\r\n\r\n        const sessionId = this.sessionSv.getCurrentSeesionId();\r\n        const headers = new HttpHeaders().set('SessionId', sessionId);\r\n        return { headers };\r\n    }\r\n\r\n    /**\r\n     * è·åä¸ä¸æä¸­çç¨æ·\r\n     */\r\n    getCurrentUserId(): string {\r\n\r\n        // æµè¯ç¨åæ­»\r\n        return 'admin';\r\n    }\r\n\r\n    /** Guidçæ */\r\n    getGuid36(): string {\r\n        function S4() {\r\n            // tslint:disable-next-line:no-bitwise\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * æéåéç»æè·¯å¾\r\n     */\r\n    getResultPath(): any {\r\n        const path = `/api/runtime/sys/v1.0/assignresults`;\r\n        return path;\r\n    }\r\n\r\n    /**\r\n     * æéå¯¹è±¡è·¯å¾\r\n     */\r\n    getAuthorizationPath(): any {\r\n        const path = `/api/runtime/sys/v1.0/authorizations`;\r\n        return path;\r\n    }\r\n\r\n\r\n    /**\r\n     * æéå­æ®µè·¯å¾\r\n     */\r\n    getAuthfieldPath(): any {\r\n        const path = `/api/runtime/sys/v1.0/authfields`;\r\n        return path;\r\n    }\r\n\r\n    /**\r\n     * éææå¯¹è±¡è·¯å¾\r\n     */\r\n    getReAssignPath(): string {\r\n        const path = `/api/runtime/sys/v1.0/reassigns`;\r\n        return path;\r\n    }\r\n\r\n    /**\r\n     * è·åæ°å¢çåå®¹\r\n     * @param newarr: ææ°çåå®¹\r\n     * @param oldarrï¼åå²åå®¹\r\n     */\r\n    getAddIds(newarr: string[], oldarr: string[]): string[] {\r\n        const addIds: string[]  = [];\r\n        newarr.forEach(x => {\r\n          if (!oldarr.includes(x)) {\r\n              addIds.push(x);\r\n            }\r\n        });\r\n        return addIds;\r\n    }\r\n\r\n    /**\r\n     * è·åå é¤çåå®¹\r\n     * @param newarr: ææ°çåå®¹\r\n     * @param oldarrï¼åå²åå®¹\r\n     */\r\n    getRemoveIds(newarr: string[], oldarr: string[]): string[] {\r\n       return this.getAddIds(oldarr, newarr);\r\n    }\r\n\r\n    convertToBizDataDTO(arrs: string[]): BizDataDTO[] {\r\n       return arrs.map(x => {\r\n            const dataDto = new BizDataDTO();\r\n            dataDto.data = x;\r\n            return dataDto;\r\n          });\r\n    }\r\n\r\n\r\n     /**\r\n      * ææçå­ç¬¦ä¸²\r\n      */\r\n     isNullOrEmptyString(value: string): boolean {\r\n        return  this.isBlank(value) || value.toString().trim().length === 0;\r\n    }\r\n\r\n     /**\r\n      * ä¸ä¸ºç©º\r\n      */\r\n    isBlank(value: any) {\r\n        return value === null || value === undefined;\r\n    }\r\n\r\n     /**\r\n      * å­ç¬¦ä¸²ä¸ä¸ºç©º\r\n      */\r\n     isNotNullOrEmptyString(value: string): boolean {\r\n        return  !(this.isNullOrEmptyString(value));\r\n    }\r\n\r\n\r\n    /** æ¾å°æ å½¢Parentåçº§æ¹å¼çå è½½çç¬¬ä¸å± */\r\n    findLayer1ByParentId(datas: any[], key: string, parentKey: string): any[] {\r\n        const rtn = [];\r\n        datas.forEach(data => {\r\n            const findParent = datas.find(parent => parent[key] === data[parentKey]);\r\n            if (!findParent && data.type !== undefined && data.type !== null  && data.type.toString() === '99') {\r\n                data.parentId = undefined;\r\n                rtn.push(data);\r\n            }\r\n        });\r\n        return rtn;\r\n    }\r\n\r\n      /** ç±»åæ¯å¦ä¸ºå¯¼èª */\r\n      isNav(type: string) {\r\n        return type === '99' ||  type === '0';\r\n     }\r\n\r\n     public expandIcon = 'f-icon f-icon-file-folder-open text-warning';\r\n     public collapseIcon = 'f-icon f-icon-file-folder-close text-warning';\r\n     public leafIcon = 'f-icon f-icon-file-txt text-warning';\r\n     setTreeIcon(farrisTt: TreeTableComponent) {\r\n         farrisTt.expandIcon = this.expandIcon;\r\n         farrisTt.collapseIcon = this.collapseIcon;\r\n         farrisTt.leafIcon = this.leafIcon;\r\n         farrisTt.detectChanges();\r\n     }\r\n\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { RestfulService } from '@farris/devkit';\r\nimport { RacCommonUtil } from '../util/rac-util';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { HierarchicalType } from '../entity/hierarchical-type.enum';\r\n\r\n\r\n/** åæ°æå¡ */\r\n@Injectable()\r\nexport class TreeService {\r\n    constructor(\r\n        // private rest: RestfulService,\r\n        private util: RacCommonUtil,\r\n        // private msgService: MessagerService,\r\n    ) {\r\n    }\r\n\r\n    /** æç§pathç æé æ  */\r\n    makeTreeByPath(datas: any[], pathField: string ): any [] {\r\n        // ä¸ç´ç²ç©ºï¼æèæ²æä¸ç´ç\r\n        const pathLayerOnes = datas.filter(x => {\r\n            if ( this.util.isNullOrEmptyString(x[pathField]) ) {\r\n               return true;\r\n            }\r\n            const findObj = datas.find(parent => parent[pathField] === x[pathField].substring(0, x[pathField].length - 4 ));\r\n            if ( findObj === undefined || findObj === null ) {\r\n               return true;\r\n            }\r\n\r\n        });\r\n        const treedata = [];\r\n        pathLayerOnes.forEach(x => {\r\n                const entity = {};\r\n                entity['data'] = x;\r\n                entity['children'] = [];\r\n                treedata.push(entity);\r\n                // this.root = x['id'];\r\n        });\r\n        treedata.forEach( item => {\r\n                this.findChildrenByPath(item, datas, pathField);\r\n            }\r\n        );\r\n        return treedata;\r\n    }\r\n\r\n    /** æ¾å°å­èç¹ */\r\n    findChildrenByPath(parent: any, datas: any[], pathField: string) {\r\n    const childList = datas.filter(childitem => {\r\n          if (childitem[pathField].substring(0, childitem[pathField].length - 4) === parent['data'][pathField]) {\r\n              return true;\r\n          }\r\n        });\r\n    if (childList && childList.length > 0) {\r\n      childList.forEach(child => {\r\n        const childEntity = {};\r\n        childEntity['data'] = child;\r\n         // tslint:disable-next-line:no-string-literal\r\n        childEntity['children'] = [];\r\n         // tslint:disable-next-line:no-string-literal\r\n        parent['children'].push(childEntity);\r\n        this.findChildrenByPath(childEntity, datas, pathField);\r\n      });\r\n    }\r\n  }\r\n\r\n   /** æç§parentç æé æ  */\r\n   makeTreeByParent(datas: any[], parentField: string, keyField: string): any [] {\r\n    // ä¸ç´ç²ç©ºï¼æèæ²æä¸ç´ç\r\n    const pathLayerOnes = datas.filter(x => {\r\n       if ( this.util.isNullOrEmptyString(x[parentField])) {\r\n           return true;\r\n       }\r\n       // æ­å±çè¿ç§ï¼åºè¯¥ä¹å±äºä¸çº§\r\n       const p = datas.find(parent => parent[keyField] === x[parentField]);\r\n       if (!p) {\r\n         return true;\r\n       }\r\n    });\r\n    const treedata = [];\r\n    pathLayerOnes.forEach(x => {\r\n            const entity = {};\r\n            entity['data'] = x;\r\n            entity['children'] = [];\r\n            treedata.push(entity);\r\n            // this.root = x['id'];\r\n    });\r\n    treedata.forEach( item => {\r\n            this.findChildrenByParent(item, datas, parentField, keyField);\r\n        }\r\n    );\r\n    return treedata;\r\n    }\r\n\r\n    /** æ¾å°å­èç¹ */\r\n    findChildrenByParent(parent: any, datas: any[], parentField: string, keyField: string) {\r\n        const childList = datas.filter(childitem => {\r\n            if (childitem[parentField] === parent['data'][keyField]) {\r\n                return true;\r\n            }\r\n        });\r\n        if (childList && childList.length > 0) {\r\n          childList.forEach(child => {\r\n            const childEntity = {};\r\n            childEntity['data'] = child;\r\n            childEntity['children'] = [];\r\n            parent['children'].push(childEntity);\r\n            this.findChildrenByParent(childEntity, datas, parentField, keyField);\r\n          });\r\n        }\r\n    }\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { RestfulService } from '@farris/devkit';\r\nimport { RacCommonUtil } from '../util/rac-util';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n/** éæææå¡ */\r\n@Injectable()\r\nexport class ReAssignService {\r\n    constructor(\r\n        private rest: RestfulService,\r\n        private util: RacCommonUtil,\r\n        private msgService: MessagerService,\r\n    ) {\r\n    }\r\n\r\n    /** éæææå¡ */\r\n    getAll(): Observable<any[]> {\r\n        const headers = this.util.getHeader();\r\n        const url = this.util.getReAssignPath() + '';\r\n        return this.rest.get(url, null, headers);\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { RestfulService } from '@farris/devkit';\r\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { RacCommonUtil } from '../../common/util/rac-util';\r\nimport { AuthDataSource } from '../entity/auth-data-source.entity';\r\nimport { AuresultChangesEntity, AuresultSave } from '../entity/auresut-changes.entity';\r\nimport { AuresultEntity } from '../entity/auresult.entity';\r\nimport { ResultContextEntity } from '../entity/resultcontext.entity';\r\n// import { isNullOrEmptyString } from '@progress/kendo-angular-grid/dist/es2015/utils';\r\n\r\n@Injectable()\r\nexport class AuresultService {\r\n    constructor(\r\n        private rest: RestfulService,\r\n        private session: RacCommonUtil,\r\n    ) { }\r\n\r\n\r\n\r\n    /**\r\n     * è·åæééè¦åéçä¸å¡æ°æ®çæ°æ®æº\r\n     */\r\n    getDataSourceByContext(authField: string, resultContext: ResultContextEntity): Observable<any> {\r\n        // mockæ°æ®\r\n        // return of(dataSource);this.resultContext.dictDimensionValue\r\n        const headers = this.session.getHeader();\r\n        const url = this.session.getResultPath();\r\n        const urlNew = url + '/datasource';\r\n        let year = '';\r\n        if ( resultContext.yearObj && resultContext.yearObj.value ) {\r\n            year = resultContext.yearObj.value;\r\n        }\r\n        resultContext.year = year;\r\n        if ( resultContext.auVarValues && resultContext.auVarValues.length > 0 ) {\r\n            return this.rest.post(urlNew + '/var', resultContext, null, headers);\r\n       }\r\n        const ownerId = resultContext.ownerId;\r\n        const ownerType = resultContext.ownerType;\r\n        const param = {\r\n            ownerId: ownerId,\r\n            ownerType: ownerType,\r\n            authfield: authField,\r\n            year: year,\r\n        };\r\n        return this.rest.get(urlNew, param, headers);\r\n    }\r\n\r\n\r\n    /**\r\n     * è·åæéå¯ä»¥åéçä¸å¡æ°æ®çæ°æ®æº\r\n     */\r\n    getDataSource(authField: string): Observable<any> {\r\n        const ownerId = this.session.ownerId;\r\n        const ownerType = this.session.ownerType;\r\n        const authDataSource = new AuthDataSource();\r\n        const headers = this.session.getHeader();\r\n        const url = this.session.getResultPath();\r\n        /**\r\n         * ownerId  æéææèId,æ­¤å¤ç¨æ·åå¨å±ä¸å¡ç»ç»è¿æ»¤çï¼æ¥æ¾å·²åéçä¸å¡ç»ç»ä½¿ç¨ï¼è¿éä¸éè¦\r\n         * ownerType æéææèç±»å å²ä½1ï¼ç¨æ·2\r\n         */\r\n        const param = {\r\n            ownerId: '',\r\n            ownerType: 2,\r\n            authfield: authField,\r\n            year: ''\r\n        };\r\n        const urlNew = url + '/datasource';\r\n        return this.rest.get(urlNew, param, headers);\r\n    }\r\n\r\n    /**\r\n     * è·åæéå¯ä»¥åéçä¸å¡æ°æ®çæ°æ®æº\r\n     */\r\n    getNoUsersDataSource(authField: string, year: string ): Observable<any> {\r\n        const ownerId = 'nouser';\r\n        const ownerType = this.session.ownerType;\r\n        const authDataSource = new AuthDataSource();\r\n        const headers = this.session.getHeader();\r\n        const url = this.session.getResultPath();\r\n        /**\r\n         * ownerId  æéææèId,æ­¤å¤ç¨æ·åå¨å±ä¸å¡ç»ç»è¿æ»¤çï¼æ¥æ¾å·²åéçä¸å¡ç»ç»ä½¿ç¨ï¼è¿éä¸éè¦\r\n         * ownerType æéææèç±»å å²ä½1ï¼ç¨æ·2\r\n         */\r\n        const param = {\r\n            ownerId: ownerId,\r\n            ownerType: 2,\r\n            authfield: authField,\r\n            year: year\r\n        };\r\n        const urlNew = url + '/datasource';\r\n        return this.rest.get(urlNew, param, headers);\r\n    }\r\n\r\n    /**\r\n     * è·åæééè¦åéçä¸å¡æ°æ®çæ°æ®æº\r\n     */\r\n    getNoUsersDataSourceByGroup(authField: string, year: string, assid1: string, assid2: string): Observable<any> {\r\n        // mockæ°æ®\r\n        // return of(dataSource);\r\n        const authDataSource = new AuthDataSource();\r\n        const headers = this.session.getHeader();\r\n        const url = this.session.getResultPath();\r\n        const param = {\r\n            ownerId: 'nouser',\r\n            ownerType: 2,\r\n            authfield: authField,\r\n            year: year,\r\n            assid1: assid1,\r\n            assid2: assid2,\r\n        };\r\n        const urlNew = url + '/datasource/group';\r\n        return this.rest.get(urlNew, param, headers);\r\n    }\r\n\r\n\r\n    /**\r\n     * è·åå¹´åº¦\r\n     */\r\n    getYears(su: string): Observable<any> {\r\n        const authDataSource = new AuthDataSource();\r\n        const headers = this.session.getHeader();\r\n        const url = this.session.getResultPath();\r\n        if (!su) {\r\n            su = '*';\r\n        }\r\n        const urlNew = url + '/years/' + su;\r\n        return this.rest.get(urlNew, null, headers);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { RestfulService } from '@farris/devkit';\r\nimport { RacCommonUtil } from '../util/rac-util';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n/** åæ°æå¡ */\r\n@Injectable()\r\nexport class AuthfieldService {\r\n    constructor(\r\n        private rest: RestfulService,\r\n        private util: RacCommonUtil,\r\n        private msgService: MessagerService,\r\n    ) {\r\n    }\r\n\r\n    /**æ ¹æ®æéå­æ®µçæ è¯è·åæéå­æ®µ\r\n     * @param authfield æéå­æ®µæ è¯\r\n     */\r\n    getbyId(authfield: string): Observable<any> {\r\n        const headers = this.util.getHeader();\r\n        const url = this.util.getAuthfieldPath() + `/` + authfield;\r\n        return this.rest.get(url, null, headers);\r\n    }\r\n\r\n\r\n    /**\r\n     * å¼å¸¸å¤ç\r\n     * @param auobj æéå¯¹è±¡å®ä½\r\n     */\r\n    handlerError(error: HttpErrorResponse) {\r\n        console.log(error);\r\n        this.msgService.error(error.error.Message);\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n            console.error(error); // log to console instead\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","/**\r\n * åé¡µåå§å¼\r\n */\r\nexport const INIT_PAGEINDEX = 1;\r\nexport const INIT_SKIP = 0;\r\nexport const INIT_PAGESIZE = 20;\r\n\r\n\r\n/**\r\n * åé¡µä¿¡æ¯\r\n */\r\nexport const BUTTONCOUNT = 0;\r\nexport const PAGESIZES = [20, 50, 100, 200];\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { RestfulService } from '@farris/devkit';\r\nimport { RacCommonUtil } from '../util/rac-util';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n/** åæ°æå¡ */\r\n@Injectable()\r\nexport class AuthObjService {\r\n    constructor(\r\n        private rest: RestfulService,\r\n        private util: RacCommonUtil,\r\n        private msgService: MessagerService,\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * è·åæå®æéå¯¹è±¡ãæ°æ®æä½ä¸å³èçæéå­æ®µ\r\n     */\r\n    getAuthEntryByOp(authObjId: string, authOpId: string): Observable<any> {\r\n        const url = this.util.getAuthorizationPath() + `/` + authObjId + `/` + authOpId;\r\n        const headers = this.util.getHeader();\r\n        return this.rest.get(url, null, headers);\r\n    }\r\n\r\n\r\n    getAll(): Observable<any[]> {\r\n        const headers = this.util.getHeader();\r\n        const url = this.util.getAuthorizationPath() + '/designtime';\r\n        return this.rest.get(url, null, headers);\r\n    }\r\n\r\n    getAllReAssign(): Observable<any[]> {\r\n        const headers = this.util.getHeader();\r\n        const url = this.util.getAuthorizationPath() + '/reassign';\r\n        return this.rest.get(url, null, headers);\r\n    }\r\n\r\n\r\n    /**\r\n     * å¼å¸¸å¤ç\r\n     * @param auobj æéå¯¹è±¡å®ä½\r\n     */\r\n    handlerError(error: HttpErrorResponse) {\r\n        console.log(error);\r\n        this.msgService.error(error.error.Message);\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n            console.error(error); // log to console instead\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n\r\n\r\n@Injectable()\r\n/** æ¬å°ä»åºï¼ç¼å­æ¬å°æ°æ®ï¼æ¯å¦æäºæ°æ®å·²ç»è·åå°±ä¸éè¦åæ¬¡å»æå¡å¨ç«¯è·å */\r\nexport class LocalRepository {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    /** æéç»ææ°æ® key:authfieldId+authobjId+authopId  */\r\n    mapAuresults: Map<string, any[]> = new Map<string, any[]>();\r\n\r\n    /** æéåæ°æº key:authfieldId */\r\n    mapDataSource: Map<string, any> = new Map<string, any>();\r\n}\r\n","import {\r\n    Component, OnInit, ViewChild, TemplateRef, Input, Output, OnChanges,\r\n    SimpleChange, EventEmitter, SimpleChanges, Injector, LOCALE_ID, Inject\r\n} from '@angular/core';\r\nimport { Observable, from } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n// import { isNullOrEmptyString } from '@progress/kendo-angular-grid/dist/es2015/utils';\r\nimport { SelectableSettings, PagerSettings, PageChangeEvent, GridDataResult } from '@progress/kendo-angular-grid';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { EntityFactory } from '@farris/devkit';\r\nimport { TreeTableComponent } from '@farris/ui-treetable';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n// import { TranslateService } from '@ngx-translate/core';\r\nimport { BizDataDTO } from '../../common/entity/auresult.entity';\r\nimport { AuthDataField, AuthDataSource } from '../../common/entity/auth-data-source.entity';\r\nimport { AuresultService } from '../../common/service/auresult-service';\r\nimport { RacCommonUtil } from '../../common/util/rac-util';\r\nimport { INIT_SKIP, BUTTONCOUNT, PAGESIZES, INIT_PAGEINDEX, INIT_PAGESIZE } from '../../common/util/page';\r\nimport { HierarchicalType } from '../../common/entity/hierarchical-type.enum';\r\nimport { TreeService } from '../../common/service/tree.service';\r\n\r\n/**\r\n * ç¨æ·ææä¸å¡ç»ç»ç»ä»¶\r\n */\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'rac-data-help',\r\n    templateUrl: './data-help.component.html',\r\n    styleUrls: ['./data-help.component.css']\r\n})\r\nexport class DataHelpComponent implements OnInit {\r\n\r\n    // æ³¨å¥å°å¸®å©çç¡®è®¤ååæ¶æé®\r\n    @ViewChild('btnOkAndCancle') btnOkAndCancleRef: TemplateRef<any>;\r\n    @ViewChild('farrisTree') farrisTree: TreeTableComponent;\r\n\r\n    closeModalEmitter: EventEmitter<any> = new EventEmitter<BizDataDTO[]>();\r\n    /** å¼¹åºæ¡ä¸­ç¨å°çæç»éä¸­çæ°æ® */\r\n    @Output() selectEmitter: EventEmitter<{\r\n        data: any[],\r\n        selectedKey: string[]\r\n    }> = new EventEmitter<{\r\n        data: any[],\r\n        selectedKey: string[]\r\n    }>();\r\n    selectedModels: any[] = [];\r\n    @Input() hasSelectKeys: string[] = [];    // è¾å¥ ä¿®æ¹åï¼å·²ç»éä¸­\r\n    @Input() isHasSelectAll = false; // è¾å¥ ä¹åæ¯å¦å¨é\r\n    @Input() authField = ''; // å¨å±ä¸å¡ç»ç»åç \r\n    @Input() ownerId = ''; // ç¨æ·åç \r\n    @Input() canAssignDatas: any[] = []; // å¯åéçæ°æ®æº\r\n    @Input() data: any; // è¿è¡æ¶æ°æ®\r\n    @Input() isIntegrityData: boolean; // æ°æ®æ¯å¦å®æ´ï¼å®æ´è¡¨ç¤ºå¯ä»¥å*\r\n    @Input() isDisplayTree = false; // è¾å¥\r\n    @Input() isShowSearch = false; // æ¯å¦å±ç¤ºæç´¢\r\n    isSelectAll = false;\r\n    selectKeys: string[] = [];\r\n    /** æ¯å¦åé */\r\n    @Input() singleSelect = false;\r\n    @Input() treeHeight = '342px';\r\n    /** æ¯å¦åç»´åº¦åç» */\r\n    isAuGroup = true;\r\n    /** å¼¹åºæ¡ä¸­ç¨å°çæç»éä¸­çæ°æ® */\r\n    selectByGroupEmitter: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n    // ä¸å¡æ°æ®æºç¸å³ä¿¡æ¯\r\n    dataKey = ''; // åæ°ä¸»é®å\r\n    helpFields: string[] = []; // å­æ®µæ¾ç¤ºå\r\n    showFields: AuthDataField[] = []; // æ¾ç¤ºçå­æ®µ\r\n    codeOrNameFields: AuthDataField[] = []; // æç´¢çå­æ®µï¼\r\n    authDataSource: AuthDataSource = new AuthDataSource();\r\n    /** æ¯å¦å¯ç¨ */\r\n    isEnable = true;\r\n    /** æ¯å¦å¨é¨æé */\r\n    isAllAuth = false;\r\n    /**\r\n     * åé¡µåæ°ï¼é»è®¤å±ç¤º200æ¡,å¯ä¿®æ¹\r\n     */\r\n    public gridView: GridDataResult;\r\n    public pageSetting: PagerSettings | boolean;\r\n    // ç»ä»¶ä¸ç¨skip\r\n    skip = INIT_SKIP;\r\n    pageSize = INIT_PAGESIZE;\r\n    pageIndex = INIT_PAGEINDEX;\r\n    // æ æ§ä»¶\r\n    // æ æ§ä»¶ç»å®çæ°æ®\r\n    treedata: any[] = [];\r\n    // ç»å®æ çå¹³éºæ°æ®\r\n    flatData: any[] = [];\r\n    /** rootæ ¹èç¹ï¼ç¨äºé»è®¤å±å¼ */\r\n    root = '';\r\n    saveSelections: any = [];\r\n    // TreeTableä¸è¦æ¾ç¤ºçå\r\n    treeCols: any = [];\r\n    // [\r\n    //   { field: 'name', title: 'åç§°', width: 100 },\r\n    //   { field: 'code', title: 'ç¼å·', width: 100 },\r\n    // ];\r\n    // æ èç¹å è½½æ¹å¼ï¼asyncå¼æ­¥ï¼all åæ­¥\r\n    loadDataType = 'all'; // 'all' | 'async'\r\n    // æ èç¹éä¸­å¨ä½\r\n    cascadeCheck = false;\r\n    cascadeUp = false;\r\n    cascadeDown = true;\r\n    // æ¯å¦å·²ç»å è½½è¿\r\n    isTreeLoaded = false;\r\n    constructor (\r\n        private session: RacCommonUtil,\r\n        private msgService: MessagerService,\r\n        private notifyService: NotifyService,\r\n        private treeService: TreeService,\r\n        // ,private translate: TranslateService\r\n    ) {\r\n        // åé¡µæ¨¡å¼\r\n        this.pageSetting = {\r\n            buttonCount: BUTTONCOUNT,\r\n            info: true,\r\n            pageSizes: PAGESIZES,\r\n            previousNext: true\r\n        };\r\n    }\r\n\r\n    /** è¦æç´¢çä¿¡æ¯ */\r\n    searchInfo = '';\r\n    /** è¦æç´¢çä¿¡æ¯ */\r\n    searchDatas: any[] = [];\r\n   // searchTitle = this.translate.instant('auresult_search_label');\r\n    searchTitle = 'æ¥æ¾';\r\n\r\n    ngOnInit () {\r\n    }\r\n\r\n    /** è·åå¯åéçä¸å¡æ°æ® */\r\n    getAuthDataSource (): void {\r\n        this.isSelectAll = false;\r\n        this.session.ownerId = this.ownerId;\r\n        this.session.ownerType = 2;\r\n        this.selectKeys = [];\r\n        this.treeCols = [];\r\n        this.treedata = [];\r\n        this.cascadeCheck = false; // loadæ°æ®æ¶ï¼çº§èåå³é­ï¼å¦åä¼å¯¼è´ä¸çº§éä¸­ï¼èªå¨éä¸­ä¸çº§\r\n        if (this.session.isNullOrEmptyString(this.authField)) {\r\n            this.canAssignDatas = [];\r\n            this.isSelectAll = false;\r\n            return;\r\n        }\r\n    }\r\n    /** æ ¹æ®è·åå°çæéç»ææ°æ®ï¼å è½½çé¢ */\r\n    displayData() {\r\n        this.selectKeys = [];\r\n        this.treeCols = [];\r\n        this.treedata = [];\r\n        this.cascadeCheck = false; // loadæ°æ®æ¶ï¼çº§èåå³é­ï¼å¦åä¼å¯¼è´ä¸çº§éä¸­ï¼èªå¨éä¸­ä¸çº§\r\n        if (this.session.isNullOrEmptyString(this.authField)) {\r\n            this.canAssignDatas = [];\r\n            this.isSelectAll = false;\r\n            return;\r\n        }\r\n        this.showElement('checkall');\r\n        this.isSelectAll = false;\r\n        this.authDataSource.data = this.data.data;\r\n        this.authDataSource.showFields = this.data.showFields;\r\n        this.authDataSource.keyField = this.data.keyField;\r\n        this.authDataSource.helpFields = this.data.helpFields;\r\n        this.authDataSource.hierarchicalType = this.data.hierarchicalType;\r\n        this.authDataSource.hierarchicalInfo = this.data.hierarchicalInfo;\r\n        this.canAssignDatas = this.authDataSource.data;\r\n        this.searchDatas = this.canAssignDatas;\r\n        this.dataKey = this.authDataSource.keyField;\r\n        this.helpFields = this.authDataSource.helpFields;\r\n        this.showFields = this.authDataSource.showFields;\r\n        this.codeOrNameFields = this.getCodeOrNameFields();\r\n        if (this.hasSelectKeys.find(x => x === '*')) {\r\n            this.isSelectAll = this.isHasSelectAll = true;\r\n        }\r\n        if (this.isAllAuth) {\r\n            this.isSelectAll = this.isHasSelectAll = true;\r\n        }\r\n        if (this.isSelectAll) {\r\n            // TODO  å¦ä½ææ ç´æ¥éä¸­å¨é¨\r\n            this.canAssignDatas.forEach((item) => {\r\n                this.selectKeys.push(item[this.dataKey]);\r\n            });\r\n        } else if (this.hasSelectKeys) {\r\n            this.hasSelectKeys.forEach((item) => {\r\n                this.selectKeys.push(item);\r\n            });\r\n        }\r\n        // æ¾ç¤ºåè¡¨\r\n        if (this.isDisplayTree === false) {\r\n            this.queryByPage();\r\n            return;\r\n        }\r\n        // æ¾ç¤ºæ ä¿¡æ¯\r\n        this.showTreeInfo();\r\n    }\r\n\r\n    /** å±ç¤ºæ å½¢ç¸å³æ°æ® */\r\n    showTreeInfo() {\r\n        this.hideElement('checkall');\r\n        // if (this.farrisTree === undefined) {\r\n        //     return;\r\n        // }\r\n        // å¤çæ å½¢ç¸å³é»è¾\r\n        this.authDataSource.showFields.forEach((item) => {\r\n            this.treeCols.push({ field: item.field, title: item.title, width: 100 });\r\n        });\r\n        const hierarchicalType = this.authDataSource.hierarchicalType;\r\n        const hierarchicalInfo = this.authDataSource.hierarchicalInfo;\r\n        if (hierarchicalType === HierarchicalType.Parent) {\r\n            let parentKey = this.dataKey; // parentå¯¹åºä¸»é®å,å¦ææ²¡æåç¬è®¾ç½®å°±ä½¿ç¨åæ°å\r\n            if ( hierarchicalInfo.parentKeyField && hierarchicalInfo.parentKeyField.length > 0) {\r\n                parentKey = hierarchicalInfo.parentKeyField;\r\n            }\r\n            this.treedata = this.treeService.makeTreeByParent(this.canAssignDatas, hierarchicalInfo.parentField, parentKey);\r\n        } else {\r\n            this.treedata = this.treeService.makeTreeByPath(this.canAssignDatas, hierarchicalInfo.pathField);\r\n        }\r\n        // æ¾å°ç¬¬ä¸å±   ç´æ¥å±å¼\r\n        // åå§å è½½ä¸çº§èï¼å¦åä¼å¯¼è´ä¸çº§éä¸­ï¼èªå¨éä¸­ä¸çº§\r\n        this.farrisTree.cascadeCheck = false;\r\n        this.isTreeLoaded = false;\r\n        this.farrisTree.loadedData.subscribe(d => {\r\n            // å è½½è¿ï¼ä¹åä¸éè¦åæ¬¡å è½½\r\n            if (this.isTreeLoaded === true) {\r\n                return;\r\n            }\r\n            // åå§å è½½ä¸çº§èï¼å¦åä¼å¯¼è´ä¸çº§éä¸­ï¼èªå¨éä¸­ä¸çº§\r\n            this.farrisTree.cascadeCheck = false;\r\n            // æ ¹èç¹é»è®¤å±å¼\r\n            if ((this.root) && this.root !== '') {\r\n                this.farrisTree.expandNode(this.root);\r\n            }\r\n            if (this.isSelectAll) {\r\n                this.farrisTree.checkAllNodes();\r\n            } else if (this.hasSelectKeys.length > 0) {\r\n                this.farrisTree.checkedNodes(this.hasSelectKeys);\r\n            }\r\n            // loadå®æ°æ®æ¶ï¼çº§èæå¼ï¼å¯ä»¥éä¸­ä¸çº§èªå¨éä¸­ä¸çº§\r\n            this.farrisTree.cascadeCheck = true;\r\n            // å è½½è¿ï¼ä¹åä¸éè¦åæ¬¡å è½½\r\n            this.isTreeLoaded = true;\r\n        });\r\n    }\r\n\r\n    /** æ¥éå¤ç */\r\n    handleError (error: HttpErrorResponse) {\r\n        this.authDataSource.data = [];\r\n        console.log(error);\r\n        console.log(error.error.Message);\r\n        this.msgService.error(error.error.Message);\r\n    }\r\n\r\n\r\n    // éæ©å±æ§ï¼åéãå¤é\r\n    public get selectableSettings (): SelectableSettings {\r\n        return {\r\n            checkboxOnly: true,\r\n            mode: this.singleSelect ? 'single' : 'multiple',\r\n            enabled: true\r\n        };\r\n    }\r\n\r\n    // å¾æ \r\n    iconClass ({ type }: any): any {\r\n        return {\r\n            'k-i-folder': true,\r\n            'k-icon': true\r\n        };\r\n    }\r\n\r\n    /**\r\n     * è·åéæ©ä¿¡æ¯\r\n     */\r\n    public getSelectInfo(): { data: any[], selectedKey: string[] } {\r\n        this.selectedModels = [];\r\n        const result = {\r\n            data: [],\r\n            selectedKey: []\r\n        };\r\n        // å¨é\r\n        if (this.isSelectAll && this.isIntegrityData && this.data.length === this.selectKeys) {\r\n            const obj = {\r\n                data: '*'\r\n            };\r\n            this.selectedModels.push(obj);\r\n            result.data = ['*'];\r\n            result.selectedKey = ['*'];\r\n            return result;\r\n        }\r\n\r\n        // æ æ¾ç¤ºï¼éè¦åæ ¹æ®éä¸­çæ°æ®æé selectKeys\r\n        if (this.isDisplayTree) {\r\n            // éä¸­çè¡ï¼è¿æ»¤æä¸å¡å¯¹è±¡ï¼åªä¿çåè½æä½\r\n            if (this.farrisTree.checkeds) {\r\n                const checkedRows = this.farrisTree.checkeds.map(n => n.data);\r\n                // è¿æ»¤åè½æä½åç»çè¡\r\n                // let checkedOpRows = this.checkedRows.filter(x => x.type === '1');\r\n                this.selectKeys = checkedRows.map(m => m[this.dataKey]);\r\n            } else {\r\n                this.selectKeys = [];\r\n            }\r\n        }\r\n        if (this.selectKeys.length > 0) {\r\n            this.selectKeys.map(x => {\r\n                const findObj = this.canAssignDatas.find(y => y[this.dataKey] === x);\r\n                this.selectedModels.push(findObj);\r\n            });\r\n        }\r\n        result.data = this.selectedModels;\r\n        result.selectedKey = this.selectKeys;\r\n        return result;\r\n    }\r\n\r\n    /** å¤æ­æ¯å¦åäºå¨é¨æé*ï¼é¦åå¿é¡»å¨éï¼å¶æ¬¡å¿é¡»æ¯æ°æ®å®æ´çï¼ç¶åéä¸­çæ°æ®å¿é¡»ä¸æ°æ®æºé¿åº¦ä¸è´ï¼å¦æä»æç´¢åçå¨éï¼ä¸æ¯*ï¼ */\r\n    getIsAllAuth() {\r\n        return this.isSelectAll && this.isIntegrityData && this.data.length === this.selectKeys;\r\n    }\r\n\r\n    /** ç¡®å®åå°éä¸­æ°æ®ä»¥åéä¸­åç  */\r\n    confirm () {\r\n        this.closeModalEmitter.next();\r\n        this.selectedModels = [];\r\n        if (this.getIsAllAuth() ) {\r\n            const obj = {\r\n                data: '*'\r\n            };\r\n            this.selectedModels.push(obj);\r\n            this.selectEmitter.next({\r\n                data: ['*'],\r\n                selectedKey: ['*']\r\n            });\r\n            return;\r\n        }\r\n\r\n        // æ æ¾ç¤ºï¼éè¦åæ ¹æ®éä¸­çæ°æ®æé selectKeys\r\n        if (this.isDisplayTree) {\r\n            // éä¸­çè¡ï¼è¿æ»¤æä¸å¡å¯¹è±¡ï¼åªä¿çåè½æä½\r\n            if (this.farrisTree.checkeds) {\r\n                const checkedRows = this.farrisTree.checkeds.map(n => n.data);\r\n                // è¿æ»¤åè½æä½åç»çè¡\r\n                // let checkedOpRows = this.checkedRows.filter(x => x.type === '1');\r\n                this.selectKeys = checkedRows.map(m => m[this.dataKey]);\r\n            } else {\r\n                this.selectKeys = [];\r\n            }\r\n        }\r\n        if (this.selectKeys.length > 0) {\r\n            this.selectKeys.map(x => {\r\n                const findObj = this.canAssignDatas.find(y => y[this.dataKey] === x);\r\n                this.selectedModels.push(findObj);\r\n            });\r\n        }\r\n        this.selectEmitter.next({\r\n            data: this.selectedModels,\r\n            selectedKey: this.selectKeys\r\n        });\r\n    }\r\n\r\n    cancle () {\r\n        this.closeModalEmitter.next();\r\n    }\r\n\r\n    /** å¨éï¼è¿éå¨éå¯è½æ¯è¿æ»¤åæ°æ®çå¨é */\r\n    checkAllClick() {\r\n        this.isSelectAll = !this.isSelectAll;\r\n        let key = '';\r\n        if (this.isSelectAll) {\r\n            // å¦æå·²ç»éä¸­ï¼åä¸å¤çï¼æ²¡æéä¸­ï¼åéä¸­\r\n            this.searchDatas.forEach((data) => {\r\n                key = data[this.dataKey];\r\n                const index = this.selectKeys.findIndex( x => x === key );\r\n                if (index < 0) {\r\n                    this.selectKeys.push(key);\r\n                }\r\n            });\r\n            if ( this.isDisplayTree ) {\r\n                if ( this.farrisTree) {\r\n                   this.farrisTree.checkAllNodes();\r\n                }\r\n             }\r\n        } else {\r\n\r\n            if ( this.isDisplayTree ) {\r\n                if ( this.farrisTree) {\r\n                   this.farrisTree.unCheckAllNodes();\r\n                }\r\n             } else {\r\n                this.searchDatas.forEach((data) => {\r\n                    key = data[this.dataKey];\r\n                    const index = this.selectKeys.findIndex( x => x === key );\r\n                    if (index > -1) {\r\n                         // å¦æå·²ç»éä¸­ï¼å°±å é¤\r\n                         this.selectKeys.splice(index, 1);\r\n                    }\r\n                });\r\n             }\r\n        }\r\n    }\r\n\r\n    checkClick () {\r\n        this.isSelectAll = !this.isSelectAll;\r\n        if (this.isSelectAll) {\r\n            // TODO  å¦ä½ææ ç´æ¥éä¸­å¨é¨\r\n            this.canAssignDatas.forEach((data) => {\r\n                this.selectKeys.push(data[this.dataKey]);\r\n            });\r\n            this.farrisTree.checkAllNodes();\r\n            this.selectByGroupEmitter.next(['*']);\r\n        } else {\r\n            //  this.farrisTree.unCheckAllNodes();\r\n            this.selectKeys = [];\r\n            this.selectByGroupEmitter.next([]);\r\n        }\r\n    }\r\n\r\n    /** éæ©äºä»¶ */\r\n    public onSelectedKeysChange (e) {\r\n        const len = this.selectKeys.length;\r\n        if (len !== this.canAssignDatas.length) {\r\n            // å¦æå¨é¨éä¸­äºï¼isSelectAll ä¹ä¸éè¦è®¾ç½®ä¸ºtrueï¼isSelectAllçå«ä¹æ¯*çææï¼æ°å¢æ°æ®ä¹è¢«éä¸­\r\n            this.isSelectAll = false;\r\n        }\r\n\r\n        if (this.isSelectAll) {\r\n            this.selectByGroupEmitter.next(['*']);\r\n        } else {\r\n            this.selectByGroupEmitter.next(this.selectKeys);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * ç¹å»åé¡µæ¥è¯¢æèåé¡µåæ°åååæ¥è¯¢\r\n     * @param event åé¡µåæ°\r\n     */\r\n    public pageChange (event: PageChangeEvent): void {\r\n        // skipåpageSizeå¿é¡»å¾éæ°èµå¼ï¼å ä¸ºå¯è½ç¨æ·éæ°éæ©äºåé¡µå¤§å°æèåé¡µç´¢å¼\r\n        // å·æ°çé¢æé®æ°éåç¦ç¹\r\n        this.skip = event.skip;\r\n        this.pageSize = event.take;\r\n        this.pageIndex = this.skip / this.pageSize + 1;\r\n        // æ¥è¯¢\r\n        this.queryByPage();\r\n    }\r\n\r\n    /**\r\n     * åè¡¨çæ¥è¯¢\r\n     */\r\n    queryByPage() {\r\n        this.gridView = {\r\n            data: this.searchDatas.slice(this.skip, this.skip + this.pageSize),\r\n            total: this.searchDatas.length\r\n        };\r\n    }\r\n\r\n    searchClick() {\r\n        this.search(this.searchInfo);\r\n    }\r\n\r\n\r\n    /**\r\n     * æç´¢æ ç¶\r\n     */\r\n    search(txt: string) {\r\n        if (this.isDisplayTree) {\r\n            this.searchTree(txt);\r\n            return;\r\n        }\r\n        this.searchInfo = txt;\r\n        if (this.session.isNullOrEmptyString(this.searchInfo)) {\r\n            this.searchDatas = this.canAssignDatas;\r\n            this.queryByPage();\r\n            return;\r\n        }\r\n        this.searchDatas = [];\r\n        this.canAssignDatas.forEach((item: any) => {\r\n            // tslint:disable-next-line:prefer-for-of\r\n            for (let i = 0; i < this.showFields.length; i++) {\r\n                if (item[this.showFields[i].field].toString().indexOf(this.searchInfo) > -1) {\r\n                    this.searchDatas.push(item);\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        this.queryByPage();\r\n    }\r\n    /**\r\n     * è·åç¼å·æèåç§°å­æ®µ\r\n     */\r\n    getCodeOrNameFields(): AuthDataField[] {\r\n        const result: AuthDataField[] = [];\r\n        this.showFields.forEach(item => {\r\n            if (item.field.toLocaleLowerCase().indexOf('code') > -1 ||\r\n                item.field.toLocaleLowerCase().indexOf('name') > -1) {\r\n                result.push(item);\r\n            }\r\n        });\r\n        if (result.length === 0) {\r\n            result.push(this.showFields[0]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    searchTreeSelf(arg: any) {\r\n        this.searchTree(arg.value);\r\n    }\r\n    // ä¸æ¬¡æç´¢ææ¬\r\n    oldTreeSearch = '';\r\n    treeSearchIndex = 0;\r\n    /** æç´¢ï¼ æ­¤å¤æ¯åå±å è½½ï¼æç´¢æ¶éè¦æ ¹æ®åæ°æ®è¿è¡æç´¢ï¼æç´¢åï¼éè¦å°å¯¹åºç¶èç¹å±ç¤º\r\n     *   @param args  æ ¼å¼ searchData = { field: '*', value: '' };\r\n     */\r\n    searchTree(txt: any) {\r\n        // æç´¢åå®¹ä¸ºç©ºï¼ä¸å¤ç\r\n        if (!txt) {\r\n            this.treeSearchIndex = 0;\r\n            return;\r\n        }\r\n        this.farrisTree.clearSelections();\r\n        // æç´¢åå®¹ä¸ä¸æ¬¡ä¸åï¼éæ°æç´¢\r\n        if (this.oldTreeSearch !== txt) {\r\n            // ç½®ç©ºéæ°æç´¢\r\n            this.searchDatas = [];\r\n            this.canAssignDatas.forEach((item: any) => {\r\n                // éåæç´¢å­æ®µ\r\n                // tslint:disable-next-line:prefer-for-of\r\n                for (let i = 0; i < this.codeOrNameFields.length; i++) {\r\n                    const field = this.codeOrNameFields[i].field;\r\n                    if (item[field].indexOf(txt) > -1) {\r\n                        this.searchDatas.push(item);\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n            // é¦æ¬¡æç´¢ï¼ä»ç¬¬ä¸ä¸ªå¼å§æç´¢\r\n            this.treeSearchIndex = 0;\r\n        }\r\n        if (this.searchDatas.length === 0) {\r\n            this.msgService.warning('æ²¡ææ»¡è¶³æ¡ä»¶çæ°æ®!');\r\n            return;\r\n        }\r\n        // æå°æå®å¯¹è±¡ï¼éè¦è®¾ç½®ç¶èç¹å¨é¨å±å¼,å¶ä»èç¹å¨é¨æ¶èµ·\r\n        const key = this.searchDatas[this.treeSearchIndex][this.dataKey];\r\n        this.farrisTree.selectNode(key);\r\n        this.farrisTree.collapseAll();\r\n        // å±å¼ç¶çº§\r\n        this.expandParent(key);\r\n        this.oldTreeSearch = txt;\r\n        this.treeSearchIndex = this.treeSearchIndex + 1;\r\n        // å·²ç»æç´¢å°æåï¼éè¦éå¤´æç´¢\r\n        if (this.treeSearchIndex === this.searchDatas.length) {\r\n            this.oldTreeSearch = '';\r\n            this.treeSearchIndex = 0;\r\n        }\r\n    }\r\n    /** éä¸æ¾å°éè¦å±å¼çç¶èç¹ï¼å¨é¨å±å¼ */\r\n    expandParent(key: string) {\r\n        const parent = this.farrisTree.findRowNode(key);\r\n        let parentNode = parent.parent;\r\n        if (parentNode) {\r\n            while (parentNode) {\r\n                this.farrisTree.expandNode(parentNode.id);\r\n                parentNode = parentNode.parent;\r\n            }\r\n        } else {\r\n            this.farrisTree.expandNode(key);\r\n        }\r\n    }\r\n\r\n    /** æ å½¢éä¸­å¨é¨ */\r\n    treeCheckAll() {\r\n        this.isSelectAll = true;\r\n    }\r\n\r\n    /** æ å½¢åæ¶å¨é¨ */\r\n    treeUnCheckAll () {\r\n        this.isSelectAll = false;\r\n    }\r\n\r\n    /** åæ¶å¾é */\r\n    nodeUnChecked () {\r\n        if (this.isSelectAll) {\r\n            this.isSelectAll = false;\r\n        }\r\n    }\r\n\r\n    showElement (elementName: string) {\r\n        if (document.getElementById(elementName)) {\r\n            document.getElementById(elementName).style.display = '';\r\n        }\r\n    }\r\n    hideElement (elementName: string) {\r\n        if (document.getElementById(elementName)) {\r\n            document.getElementById(elementName).style.display = 'none';\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n","import {\r\n  Component, OnInit, ViewChild, ComponentFactoryResolver, Injector,\r\n  TemplateRef, HostBinding, AfterViewChecked, Output, Input, EventEmitter\r\n} from '@angular/core';\r\nimport { Observable, from } from 'rxjs';\r\nimport { LookupComponent } from '@farris/ui-lookup';\r\nimport { AuthobjEntity } from '../../../common/entity/authobj.entity';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'rac-auobj-help',\r\n  templateUrl: './auobj-help.component.html',\r\n  styleUrls: ['./auobj-help.component.css']\r\n})\r\nexport class AuobjHelpComponent implements OnInit {\r\n\r\n\r\n    /** è¦å è½½çæ°æ®ç±»å\r\n     * allä»£è¡¨å¨é¨æéå¯¹è±¡\r\n     * reassignä»£è¡¨åè®¸å¨ç¨æ·ä¸éæ°ææçæéå¯¹è±¡\r\n     */\r\n  @Input() dataMode: 'all' | 'reassign';\r\n  @Input() displayText = '';\r\n  @Input() curKeyId: string;\r\n  curKeyIdList: string[];\r\n  curAuthObj: AuthobjEntity;\r\n  selectedKeyOld = '';\r\n\r\n  @ViewChild('auobjLookup') auobjLookup: LookupComponent;\r\n\r\n  /** å¯¼èªäºä»¶ */\r\n  @Output() selectedChanged: EventEmitter<AuthobjEntity> = new EventEmitter<AuthobjEntity>();\r\n\r\n\r\n  ngOnInit() {\r\n    this.curKeyIdList = [];\r\n    this.curKeyIdList.push(this.curKeyId);\r\n  }\r\n\r\n\r\n  constructor() { }\r\n\r\n  // åæ°å\r\n  afterKeySelected(args: any) {\r\n      this.curAuthObj = new AuthobjEntity();\r\n      this.curKeyIdList = [];\r\n      // æ´æ°å¼\r\n      from(args).subscribe(\r\n          item => {\r\n                this.curAuthObj.id = item['id'];\r\n                this.curAuthObj.name = item['name'];\r\n                this.curKeyId = item['id'];\r\n                this.curKeyIdList.push(item['id']);\r\n                this.displayText = item['name'];\r\n                this.selectedChanged.emit(this.curAuthObj);\r\n          }\r\n      );\r\n      this.auobjLookup.closeDialog();\r\n  }\r\n\r\n\r\n  /**\r\n   * éä¸­è¡æ¹ååè§¦åäºä»¶\r\n   */\r\n  handleSelection(args: any) {\r\n    this.curKeyId = args.node.data.id;\r\n    this.curAuthObj = args.node.data;\r\n    // é¦æ¬¡è§¦å\r\n    if (this.curKeyId === '') {\r\n      this.selectedKeyOld = this.curKeyId;\r\n      this.selectedChanged.emit(this.curAuthObj);\r\n    } else {\r\n      // ååçæåµä¸è§¦å\r\n      if (this.selectedKeyOld !== this.curKeyId) {\r\n        this.selectedKeyOld = this.curKeyId;\r\n        this.selectedChanged.emit(this.curAuthObj);\r\n      }\r\n    }\r\n  }\r\n}","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, TemplateRef } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, from, of } from 'rxjs';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TreeNode, TreeTableComponent } from '@farris/ui-treetable';\r\n\r\n\r\nimport { AuthobjEntity } from '../../../common/entity/authobj.entity';\r\nimport { AuthObjService } from '../../../common/service/authobj.service';\r\nimport { RacCommonUtil } from '../../../common/util/rac-util';\r\n\r\n@Component({\r\n  selector: 'rac-auobj-tree',\r\n  templateUrl: './auobj-tree.component.html',\r\n  styleUrls: ['./auobj-tree.component.css']\r\n})\r\nexport class AuobjTreeComponent  implements OnInit {\r\n\r\n    /** è¦å è½½çæ°æ®ç±»å\r\n     * allä»£è¡¨å¨é¨æéå¯¹è±¡\r\n     * reassignä»£è¡¨åè®¸å¨ç¨æ·ä¸éæ°ææçæéå¯¹è±¡\r\n     */\r\n  @Input()\r\n  dataMode: 'all' | 'reassign';\r\n\r\n  @Input()\r\n  initSelectedKeys: string[];\r\n\r\n  public data: any[] = [];\r\n  public selectedKey = '';\r\n  selectedKeyOld = '';\r\n  selectedModel: AuthobjEntity;\r\n  // æ æéåæ°\r\n  cols: any[] = [];\r\n  /** æ ç»å®æ°æ®æº */\r\n  treeNodeData: TreeNode[];\r\n  @ViewChild('farrisTt') farrisTt: TreeTableComponent;\r\n  @Output() selectedchanged: EventEmitter<AuthobjEntity> = new EventEmitter<AuthobjEntity>();\r\n\r\n  /** å¸®å©è¾åºäºä»¶ */\r\n  @Output() selectedAfterOk: EventEmitter<AuthobjEntity> = new EventEmitter<AuthobjEntity>();\r\n  @Output() closeModalEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  // æ³¨å¥å°å¸®å©çç¡®è®¤ååæ¶æé®\r\n  @ViewChild('btnOkAndCancle') btnOkAndCancleRef: TemplateRef<any>;\r\n\r\n  constructor(\r\n    private service: AuthObjService,\r\n    public racUtil: RacCommonUtil,\r\n    private translate: TranslateService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.cols = [\r\n      // { field: 'name', title: this.translate.instant('lblAuthObj') }\r\n      { field: 'name', title: 'åç§°' }\r\n    ];\r\n\r\n  }\r\n\r\n  /** æ ¹æ®åéçåè½æä½åå§å¯¹åºçæéå¯¹è±¡ */\r\n  initData() {\r\n    let obs = this.service.getAll();\r\n    if ( this.dataMode === 'reassign' ) {\r\n      obs = this.service.getAllReAssign();\r\n    } else {\r\n      obs = this.service.getAll();\r\n    }\r\n    obs.subscribe((result: any) => {\r\n      this.data = result;\r\n      if (this.data) {\r\n        const initNodeList: TreeNode[] = [];\r\n        const layer1 = this.racUtil.findLayer1ByParentId(this.data, 'id', 'parentId');\r\n        layer1.forEach(item => {\r\n          const node = this.convertToTreeNode(item);\r\n          initNodeList.push(node);\r\n          this.initTreeNodeList(node);\r\n        });\r\n        this.treeNodeData = initNodeList;\r\n        this.racUtil.setTreeIcon(this.farrisTt);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * æé Farris-Treeæéç»æ\r\n   * @param authfieldList æéå­æ®µåè¡¨\r\n   */\r\n  private initTreeNodeList(parentNode: TreeNode) {\r\n    // æ ¹æ®ç¶èç¹è¿æ»¤å­èç¹\r\n    const children = this.data.filter(x => x.parentId === parentNode.data.id);\r\n\r\n    // å°è¿æ»¤çæ°æ®å å°TreeNodesä¸­\r\n    if (children && children.length > 0) {\r\n      children.forEach(item => {\r\n        const child = this.convertToTreeNode(item);\r\n        parentNode.leaf = false;\r\n        parentNode.children.push(child);\r\n        this.initTreeNodeList(child);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * å°æéå­æ®µå®ä½è½¬æ¢ä¸ºFarris-TreeNode\r\n   */\r\n  private convertToTreeNode(obj: AuthobjEntity): TreeNode {\r\n    const node = { data: obj, leaf: true, children: [], icon: this.racUtil.leafIcon };\r\n    // æ¯å¦æç»èç¹ï¼typeä¸º0 è¯´ææ¯å¯¼èª\r\n    if (this.racUtil.isNav(obj.type.toString())) {\r\n      // tslint:disable-next-line:no-string-literal\r\n      node['leaf'] = false;\r\n      // tslint:disable-next-line:no-string-literal\r\n      node['children'] = [];\r\n      node['expandedIcon'] = this.racUtil.expandIcon;  // 'folder-open';\r\n      node['collapseIcon'] = this.racUtil.collapseIcon; // 'folder';\r\n    }\r\n    return node;\r\n  }\r\n\r\n  appendNode(newObj: AuthobjEntity) {\r\n    const parentRowNode = this.farrisTt.findRowNode(newObj.parentId);\r\n    // const newTreeNode = this.convertToTreeNode(newObj);\r\n    const selectedRow = this.farrisTt.selectedRow;\r\n    if (this.racUtil.isNav( selectedRow.data.type)) {\r\n      this.farrisTt.append( newObj, this.farrisTt.selectedRow);\r\n    } else {\r\n      this.farrisTt.append( newObj , this.farrisTt.selectedRow.parent);\r\n    }\r\n    this.farrisTt.selectNode(newObj.id);\r\n  }\r\n\r\n  removeNode(newObj: AuthobjEntity) {\r\n    this.farrisTt.remove(newObj.id);\r\n  }\r\n\r\n  updateNode(newObj: AuthobjEntity) {\r\n   // TODO updateæ¶data åæ°æé®é¢\r\n   // this.farrisTt.update(newObj.id, newObj);\r\n  }\r\n\r\n  /**\r\n   * éä¸­è¡æ¹ååè§¦åäºä»¶\r\n   */\r\n  handleSelection(args: any) {\r\n    this.selectedKey = args.node.data.id;\r\n    this.selectedModel = args.node.data;\r\n    // é¦æ¬¡è§¦å\r\n    if (this.selectedKeyOld === '') {\r\n      this.selectedKeyOld = this.selectedKey;\r\n      this.selectedchanged.emit(this.selectedModel);\r\n    } else {\r\n      // ååçæåµä¸è§¦å\r\n      if (this.selectedKeyOld !== this.selectedKey) {\r\n        this.selectedKeyOld = this.selectedKey;\r\n        this.selectedchanged.emit(this.selectedModel);\r\n      }\r\n    }\r\n  }\r\n\r\n  iconClass({ id }: any): any {\r\n    return {\r\n      'k-i-folder': true,\r\n      'k-icon': true\r\n    };\r\n  }\r\n\r\n  /** å¸®å©ç¡®å®æé® */\r\n  confirm() {\r\n    this.selectedKeyOld = this.selectedKey;\r\n    this.selectedAfterOk.emit(this.selectedModel);\r\n  }\r\n\r\n  cancle() {\r\n    this.closeModalEmitter.next();\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'rac-authfield-help',\r\n  templateUrl: './authfield-help.component.html',\r\n  styleUrls: ['./authfield-help.component.css']\r\n})\r\nexport class AuthfieldHelpComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'rac-authfield-tree',\r\n  templateUrl: './authfield-tree.component.html',\r\n  styleUrls: ['./authfield-tree.component.css']\r\n})\r\nexport class AuthfieldTreeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, ViewChild, TemplateRef, SimpleChanges } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, from, of } from 'rxjs';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ReAssignEntity } from '../../../common/entity/reassign.entity';\r\nimport { ReAssignService } from '../../../common/service/reassign.service';\r\n\r\n@Component({\r\n  selector: 'rac-reassign-grid',\r\n  templateUrl: './reassign-grid.component.html',\r\n  styleUrls: ['./reassign-grid.component.css']\r\n})\r\nexport class ReassignGridComponent implements OnInit, OnChanges {\r\n\r\n  columns: any;\r\n  @Input() datas: ReAssignEntity[];\r\n  selectedKey = '';\r\n  selectedKeyOld = '';\r\n  selectedModel: ReAssignEntity;\r\n\r\n  @Output() selectedChanged: EventEmitter<ReAssignEntity> = new EventEmitter<ReAssignEntity>();\r\n\r\n  /** å¸®å©è¾åºäºä»¶ */\r\n  @Output() selectedAfterOk: EventEmitter<ReAssignEntity> = new EventEmitter<ReAssignEntity>();\r\n  @Output() closeModalEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  // æ³¨å¥å°å¸®å©çç¡®è®¤ååæ¶æé®\r\n  @ViewChild('btnOkAndCancle') btnOkAndCancleRef: TemplateRef<any>;\r\n\r\n  constructor(\r\n    private reAssignService: ReAssignService ) { }\r\n\r\n  ngOnInit() {\r\n    this.columns = [\r\n      // { field: 'name', title: this.translate.instant('lblAuthObj') }\r\n      { field: 'authorizationCode', title: 'æéå¯¹è±¡ç¼å·', width: '0' },\r\n      { field: 'authorizationName', title: 'æéå¯¹è±¡åç§°', width: '200' },\r\n      { field: 'authfieldCode', title: 'æéå­æ®µç¼å·', width: '0' },\r\n      { field: 'authfieldName', title: 'æéå­æ®µåç§°' }\r\n    ];\r\n  }\r\n\r\n  /** è·ååè®¸éææçæé */\r\n  initData() {\r\n      const obs = this.reAssignService.getAll();\r\n      obs.subscribe((result: any) => {\r\n        this.datas = result;\r\n      });\r\n  }\r\n\r\n   /** è¾å¥å±æ§ååå */\r\n   ngOnChanges(changes: SimpleChanges): void {\r\n    if (!this.datas || this.datas.length <= 0) {\r\n      // æå¡ç«¯è·åæ°æ®\r\n      this.initData();\r\n    }\r\n  }\r\n\r\n /**\r\n  * éä¸­è¡æ¹ååè§¦åäºä»¶\r\n  */\r\n  handleSelection(args: any) {\r\n    this.selectedModel = args.data;\r\n    if (!this.selectedModel) {\r\n      this.selectedKey = '';\r\n      return ;\r\n    }\r\n    this.selectedKey = this.selectedModel.id;\r\n    // é¦æ¬¡è§¦å\r\n    if (this.selectedKeyOld === '') {\r\n      this.selectedKeyOld = this.selectedKey;\r\n      this.selectedChanged.emit(this.selectedModel);\r\n    } else {\r\n      // ååçæåµä¸è§¦å\r\n      if (this.selectedKeyOld !== this.selectedKey) {\r\n        this.selectedKeyOld = this.selectedKey;\r\n        this.selectedChanged.emit(this.selectedModel);\r\n      }\r\n    }\r\n  }\r\n\r\n  iconClass({ id }: any): any {\r\n    return {\r\n      'k-i-folder': true,\r\n      'k-icon': true\r\n    };\r\n  }\r\n\r\n  /** å¸®å©ç¡®å®æé® */\r\n  confirm() {\r\n    this.selectedKeyOld = this.selectedKey;\r\n    this.selectedAfterOk.emit(this.selectedModel);\r\n  }\r\n\r\n  cancle() {\r\n    this.closeModalEmitter.next();\r\n  }\r\n}\r\n","import {\r\n  Component, OnInit, ViewChild, ComponentFactoryResolver, Injector,\r\n  TemplateRef, HostBinding, AfterViewChecked, Output, Input, EventEmitter\r\n} from '@angular/core';\r\nimport { Observable, from } from 'rxjs';\r\nimport { LookupComponent } from '@farris/ui-lookup';\r\nimport { ReAssignEntity } from '../../../common/entity';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'rac-reassign-help',\r\n  templateUrl: './reassign-help.component.html',\r\n  styleUrls: ['./reassign-help.component.css']\r\n})\r\nexport class ReassignHelpComponent implements OnInit {\r\n\r\n  @Input() displayText = '';\r\n  @Input() curKeyId: string;\r\n  @Input() datas: ReAssignEntity[];\r\n  curKeyIdList: string[];\r\n  curObj: ReAssignEntity;\r\n  selectedKeyOld = '';\r\n\r\n  @ViewChild('reassignLookup') reassignLookup: LookupComponent;\r\n\r\n  /** å¯¼èªäºä»¶ */\r\n  @Output() selectedChanged: EventEmitter<ReAssignEntity> = new EventEmitter<ReAssignEntity>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n   // åæ°å\r\n   afterKeySelected(args: any) {\r\n    this.curObj = new ReAssignEntity();\r\n    this.curKeyIdList = [];\r\n    // æ´æ°å¼\r\n    this.curObj.id = args['id'];\r\n    this.curObj.authorizationCode = args['authorizationCode'];\r\n    this.curObj.authorizationName = args['authorizationName'];\r\n    this.curObj.authfieldCode = args['authfieldCode'];\r\n    this.curObj.authfieldName = args['authfieldName'];\r\n    this.displayText = args['authorizationName'] + ' ' + args['authfieldName'] ;\r\n    this.selectedChanged.emit(this.curObj);\r\n    this.reassignLookup.closeDialog();\r\n}\r\n\r\n\r\n/**\r\n * éä¸­è¡æ¹ååè§¦åäºä»¶\r\n */\r\nhandleSelection(args: any) {\r\n  this.curKeyId = args.node.data.id;\r\n  this.curObj = args.node.data;\r\n  // é¦æ¬¡è§¦å\r\n  if (this.curKeyId === '') {\r\n    this.selectedKeyOld = this.curKeyId;\r\n    this.selectedChanged.emit(this.curObj);\r\n  } else {\r\n    // ååçæåµä¸è§¦å\r\n    if (this.selectedKeyOld !== this.curKeyId) {\r\n      this.selectedKeyOld = this.curKeyId;\r\n      this.selectedChanged.emit(this.curObj);\r\n    }\r\n  }\r\n}\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { LayoutModule as KendoLayoutModule  } from '@progress/kendo-angular-layout';\r\nimport { TreeViewModule } from '@progress/kendo-angular-treeview';\r\nimport { ButtonsModule } from '@progress/kendo-angular-buttons';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { LayoutModule } from '@farris/ui-layout';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { FarrisPanelModule } from '@farris/ui-panel';\r\nimport { TreeTableModule } from '@farris/ui-treetable';\r\nimport { DataTableModule } from '@farris/ui-datatable';\r\nimport { DatagridModule } from '@farris/ui-datagrid';\r\nimport { AuthObjService } from './common/service/authobj.service';\r\nimport { AuresultService } from './common/service/auresult-service';\r\nimport { LocalRepository } from './common/util/local-repository';\r\nimport { RacCommonUtil } from './common/util/rac-util';\r\n// import { AuresultComponent } from './component/auresult/auresult.component';\r\nimport { DataHelpComponent } from './component/data-help/data-help.component';\r\n// import { AuthentryGridComponent } from './component/authentry/authentry-grid/authentry-grid.component';\r\nimport { AuobjHelpComponent } from './component/auobj/auobj-help/auobj-help.component';\r\nimport { AuobjTreeComponent } from './component/auobj/auobj-tree/auobj-tree.component';\r\nimport { AuthfieldHelpComponent } from './component/authfield/authfield-help/authfield-help.component';\r\nimport { AuthfieldTreeComponent } from './component/authfield/authfield-tree/authfield-tree.component';\r\nimport { ReassignGridComponent } from './component/reassign/reassign-grid/reassign-grid.component';\r\nimport { ReassignHelpComponent } from './component/reassign/reassign-help/reassign-help.component';\r\nimport { ReAssignService } from './common/service/reassign.service';\r\nimport { AuthfieldService } from './common/service/authfield-service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DataHelpComponent,\r\n   AuobjHelpComponent,\r\n   AuobjTreeComponent,\r\n   AuthfieldHelpComponent,\r\n   AuthfieldTreeComponent,\r\n   ReassignGridComponent,\r\n   ReassignHelpComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    ButtonsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    GridModule,\r\n    DatagridModule,\r\n    KendoLayoutModule,\r\n    LayoutModule,\r\n    FarrisPanelModule,\r\n    TreeTableModule,\r\n    DataTableModule,\r\n    TreeViewModule,\r\n    LookupModule,\r\n    ModalModule.forRoot(),\r\n    MessagerModule.forRoot()\r\n  ],\r\n  entryComponents: [\r\n    DataHelpComponent,\r\n    AuobjHelpComponent,\r\n    AuobjTreeComponent,\r\n    AuthfieldHelpComponent,\r\n    AuthfieldTreeComponent,\r\n    ReassignHelpComponent,\r\n    ReassignGridComponent\r\n  ],\r\n  providers: [\r\n     RacCommonUtil,\r\n      LocalRepository,\r\n      AuresultService,\r\n      AuthObjService,\r\n      ReAssignService,\r\n      AuthfieldService\r\n  ],\r\n  exports: [\r\n     DataHelpComponent,\r\n     AuobjHelpComponent,\r\n     AuobjTreeComponent,\r\n     AuthfieldHelpComponent,\r\n     AuthfieldTreeComponent,\r\n     ReassignHelpComponent,\r\n     ReassignGridComponent\r\n  ]\r\n})\r\nexport class RacCommonModule { }\r\n\r\n\r\n"]}