/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChild, TemplateRef } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
import { TreeTableComponent } from '@farris/ui-treetable';
import { AuthObjService } from '../../../common/service/authobj.service';
import { RacCommonUtil } from '../../../common/util/rac-util';
export class AuobjTreeComponent {
    /**
     * @param {?} service
     * @param {?} racUtil
     * @param {?} translate
     */
    constructor(service, racUtil, translate) {
        this.service = service;
        this.racUtil = racUtil;
        this.translate = translate;
        this.data = [];
        this.selectedKey = '';
        this.selectedKeyOld = '';
        // 树所需参数
        this.cols = [];
        this.selectedchanged = new EventEmitter();
        /**
         * 帮助输出事件
         */
        this.selectedAfterOk = new EventEmitter();
        this.closeModalEmitter = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.cols = [
            // { field: 'name', title: this.translate.instant('lblAuthObj') }
            { field: 'name', title: '名称' }
        ];
    }
    /**
     * 根据分配的功能操作初始对应的权限对象
     * @return {?}
     */
    initData() {
        /** @type {?} */
        let obs = this.service.getAll();
        if (this.dataMode === 'reassign') {
            obs = this.service.getAllReAssign();
        }
        else {
            obs = this.service.getAll();
        }
        obs.subscribe((/**
         * @param {?} result
         * @return {?}
         */
        (result) => {
            this.data = result;
            if (this.data) {
                /** @type {?} */
                const initNodeList = [];
                /** @type {?} */
                const layer1 = this.racUtil.findLayer1ByParentId(this.data, 'id', 'parentId');
                layer1.forEach((/**
                 * @param {?} item
                 * @return {?}
                 */
                item => {
                    /** @type {?} */
                    const node = this.convertToTreeNode(item);
                    initNodeList.push(node);
                    this.initTreeNodeList(node);
                }));
                this.treeNodeData = initNodeList;
                this.racUtil.setTreeIcon(this.farrisTt);
            }
        }));
    }
    /**
     * 构造Farris-Tree所需结构
     * @private
     * @param {?} parentNode
     * @return {?}
     */
    initTreeNodeList(parentNode) {
        // 根据父节点过滤子节点
        /** @type {?} */
        const children = this.data.filter((/**
         * @param {?} x
         * @return {?}
         */
        x => x.parentId === parentNode.data.id));
        // 将过滤的数据加到TreeNodes中
        if (children && children.length > 0) {
            children.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                /** @type {?} */
                const child = this.convertToTreeNode(item);
                parentNode.leaf = false;
                parentNode.children.push(child);
                this.initTreeNodeList(child);
            }));
        }
    }
    /**
     * 将权限字段实体转换为Farris-TreeNode
     * @private
     * @param {?} obj
     * @return {?}
     */
    convertToTreeNode(obj) {
        /** @type {?} */
        const node = { data: obj, leaf: true, children: [], icon: this.racUtil.leafIcon };
        // 是否明细节点，type为0 说明是导航
        if (this.racUtil.isNav(obj.type.toString())) {
            // tslint:disable-next-line:no-string-literal
            node['leaf'] = false;
            // tslint:disable-next-line:no-string-literal
            node['children'] = [];
            node['expandedIcon'] = this.racUtil.expandIcon; // 'folder-open';
            node['collapseIcon'] = this.racUtil.collapseIcon; // 'folder';
        }
        return node;
    }
    /**
     * @param {?} newObj
     * @return {?}
     */
    appendNode(newObj) {
        /** @type {?} */
        const parentRowNode = this.farrisTt.findRowNode(newObj.parentId);
        // const newTreeNode = this.convertToTreeNode(newObj);
        /** @type {?} */
        const selectedRow = this.farrisTt.selectedRow;
        if (this.racUtil.isNav(selectedRow.data.type)) {
            this.farrisTt.append(newObj, this.farrisTt.selectedRow);
        }
        else {
            this.farrisTt.append(newObj, this.farrisTt.selectedRow.parent);
        }
        this.farrisTt.selectNode(newObj.id);
    }
    /**
     * @param {?} newObj
     * @return {?}
     */
    removeNode(newObj) {
        this.farrisTt.remove(newObj.id);
    }
    /**
     * @param {?} newObj
     * @return {?}
     */
    updateNode(newObj) {
        // TODO update时data 参数有问题
        // this.farrisTt.update(newObj.id, newObj);
    }
    /**
     * 选中行改变后触发事件
     * @param {?} args
     * @return {?}
     */
    handleSelection(args) {
        this.selectedKey = args.node.data.id;
        this.selectedModel = args.node.data;
        // 首次触发
        if (this.selectedKeyOld === '') {
            this.selectedKeyOld = this.selectedKey;
            this.selectedchanged.emit(this.selectedModel);
        }
        else {
            // 变化的情况下触发
            if (this.selectedKeyOld !== this.selectedKey) {
                this.selectedKeyOld = this.selectedKey;
                this.selectedchanged.emit(this.selectedModel);
            }
        }
    }
    /**
     * @param {?} __0
     * @return {?}
     */
    iconClass({ id }) {
        return {
            'k-i-folder': true,
            'k-icon': true
        };
    }
    /**
     * 帮助确定按钮
     * @return {?}
     */
    confirm() {
        this.selectedKeyOld = this.selectedKey;
        this.selectedAfterOk.emit(this.selectedModel);
    }
    /**
     * @return {?}
     */
    cancle() {
        this.closeModalEmitter.next();
    }
}
AuobjTreeComponent.decorators = [
    { type: Component, args: [{
                selector: 'rac-auobj-tree',
                template: "<farris-treetable class =\"f-utils-fill-flex-column\"  #farrisTt  \r\n[data]=\"treeNodeData\"\r\n[columns]=\"cols\"\r\n[idField]=\"'id'\" \r\n[fixedHeader]=\"true\"\r\n[fit]=\"true\"\r\n[showIcon]=\"true\"\r\n(nodeSelected)=\"handleSelection($event)\">\r\n</farris-treetable>\r\n\r\n<ng-template #btnOkAndCancle >\r\n    <button class=\"btn btn-sm btn-primary\" (click)=\"confirm()\">\u786E\u8BA4</button>\r\n    <button class=\"btn btn-sm btn-default\" (click)=\"cancle()\">\u53D6\u6D88</button>\r\n  </ng-template>\r\n\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
AuobjTreeComponent.ctorParameters = () => [
    { type: AuthObjService },
    { type: RacCommonUtil },
    { type: TranslateService }
];
AuobjTreeComponent.propDecorators = {
    dataMode: [{ type: Input }],
    initSelectedKeys: [{ type: Input }],
    farrisTt: [{ type: ViewChild, args: ['farrisTt',] }],
    selectedchanged: [{ type: Output }],
    selectedAfterOk: [{ type: Output }],
    closeModalEmitter: [{ type: Output }],
    btnOkAndCancleRef: [{ type: ViewChild, args: ['btnOkAndCancle',] }]
};
if (false) {
    /**
     * 要加载的数据类型
     * all代表全部权限对象
     * reassign代表允许在用户上重新授权的权限对象
     * @type {?}
     */
    AuobjTreeComponent.prototype.dataMode;
    /** @type {?} */
    AuobjTreeComponent.prototype.initSelectedKeys;
    /** @type {?} */
    AuobjTreeComponent.prototype.data;
    /** @type {?} */
    AuobjTreeComponent.prototype.selectedKey;
    /** @type {?} */
    AuobjTreeComponent.prototype.selectedKeyOld;
    /** @type {?} */
    AuobjTreeComponent.prototype.selectedModel;
    /** @type {?} */
    AuobjTreeComponent.prototype.cols;
    /**
     * 树绑定数据源
     * @type {?}
     */
    AuobjTreeComponent.prototype.treeNodeData;
    /** @type {?} */
    AuobjTreeComponent.prototype.farrisTt;
    /** @type {?} */
    AuobjTreeComponent.prototype.selectedchanged;
    /**
     * 帮助输出事件
     * @type {?}
     */
    AuobjTreeComponent.prototype.selectedAfterOk;
    /** @type {?} */
    AuobjTreeComponent.prototype.closeModalEmitter;
    /** @type {?} */
    AuobjTreeComponent.prototype.btnOkAndCancleRef;
    /**
     * @type {?}
     * @private
     */
    AuobjTreeComponent.prototype.service;
    /** @type {?} */
    AuobjTreeComponent.prototype.racUtil;
    /**
     * @type {?}
     * @private
     */
    AuobjTreeComponent.prototype.translate;
}
//# sourceMappingURL=data:application/json;base64,