/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChild, TemplateRef } from '@angular/core';
import { ReAssignService } from '../../../common/service/reassign.service';
export class ReassignGridComponent {
    /**
     * @param {?} reAssignService
     */
    constructor(reAssignService) {
        this.reAssignService = reAssignService;
        this.selectedKey = '';
        this.selectedKeyOld = '';
        this.selectedChanged = new EventEmitter();
        /**
         * 帮助输出事件
         */
        this.selectedAfterOk = new EventEmitter();
        this.closeModalEmitter = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.columns = [
            // { field: 'name', title: this.translate.instant('lblAuthObj') }
            { field: 'authorizationCode', title: '权限对象编号', width: '0' },
            { field: 'authorizationName', title: '权限对象名称', width: '200' },
            { field: 'authfieldCode', title: '权限字段编号', width: '0' },
            { field: 'authfieldName', title: '权限字段名称' }
        ];
    }
    /**
     * 获取允许重授权的权限
     * @return {?}
     */
    initData() {
        /** @type {?} */
        const obs = this.reAssignService.getAll();
        obs.subscribe((/**
         * @param {?} result
         * @return {?}
         */
        (result) => {
            this.datas = result;
        }));
    }
    /**
     * 输入属性变化后
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (!this.datas || this.datas.length <= 0) {
            // 服务端获取数据
            this.initData();
        }
    }
    /**
     * 选中行改变后触发事件
     * @param {?} args
     * @return {?}
     */
    handleSelection(args) {
        this.selectedModel = args.data;
        if (!this.selectedModel) {
            this.selectedKey = '';
            return;
        }
        this.selectedKey = this.selectedModel.id;
        // 首次触发
        if (this.selectedKeyOld === '') {
            this.selectedKeyOld = this.selectedKey;
            this.selectedChanged.emit(this.selectedModel);
        }
        else {
            // 变化的情况下触发
            if (this.selectedKeyOld !== this.selectedKey) {
                this.selectedKeyOld = this.selectedKey;
                this.selectedChanged.emit(this.selectedModel);
            }
        }
    }
    /**
     * @param {?} __0
     * @return {?}
     */
    iconClass({ id }) {
        return {
            'k-i-folder': true,
            'k-icon': true
        };
    }
    /**
     * 帮助确定按钮
     * @return {?}
     */
    confirm() {
        this.selectedKeyOld = this.selectedKey;
        this.selectedAfterOk.emit(this.selectedModel);
    }
    /**
     * @return {?}
     */
    cancle() {
        this.closeModalEmitter.next();
    }
}
ReassignGridComponent.decorators = [
    { type: Component, args: [{
                selector: 'rac-reassign-grid',
                template: "\r\n<div class=\"f-utils-flex-column\" style=\"height:450px;\">\r\n    <farris-datagrid   #farrisGrid  class=\"f-utils-flex-column f-utils-fill\" [columns]=\"columns\" [data]=\"datas\" [showBorder]=\"false\"\r\n        [idField]=\"'id'\"\r\n        [showLineNumber]=\"true\" [fitColumns]=\"true\" [fit]=\"true\" [striped]=\"true\" \r\n        (selectChanged)=\"handleSelection($event)\">\r\n    </farris-datagrid>\r\n</div>\r\n\r\n<ng-template #btnOkAndCancle >\r\n      <button class=\"btn btn-sm btn-primary\" (click)=\"confirm()\">\u786E\u8BA4</button>\r\n      <button class=\"btn btn-sm btn-default\" (click)=\"cancle()\">\u53D6\u6D88</button>\r\n</ng-template>",
                styles: [""]
            }] }
];
/** @nocollapse */
ReassignGridComponent.ctorParameters = () => [
    { type: ReAssignService }
];
ReassignGridComponent.propDecorators = {
    datas: [{ type: Input }],
    selectedChanged: [{ type: Output }],
    selectedAfterOk: [{ type: Output }],
    closeModalEmitter: [{ type: Output }],
    btnOkAndCancleRef: [{ type: ViewChild, args: ['btnOkAndCancle',] }]
};
if (false) {
    /** @type {?} */
    ReassignGridComponent.prototype.columns;
    /** @type {?} */
    ReassignGridComponent.prototype.datas;
    /** @type {?} */
    ReassignGridComponent.prototype.selectedKey;
    /** @type {?} */
    ReassignGridComponent.prototype.selectedKeyOld;
    /** @type {?} */
    ReassignGridComponent.prototype.selectedModel;
    /** @type {?} */
    ReassignGridComponent.prototype.selectedChanged;
    /**
     * 帮助输出事件
     * @type {?}
     */
    ReassignGridComponent.prototype.selectedAfterOk;
    /** @type {?} */
    ReassignGridComponent.prototype.closeModalEmitter;
    /** @type {?} */
    ReassignGridComponent.prototype.btnOkAndCancleRef;
    /**
     * @type {?}
     * @private
     */
    ReassignGridComponent.prototype.reAssignService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhc3NpZ24tZ3JpZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXN5cy9yYWMtY29tbW9uLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudC9yZWFzc2lnbi9yZWFzc2lnbi1ncmlkL3JlYXNzaWduLWdyaWQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUtqSSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFPM0UsTUFBTSxPQUFPLHFCQUFxQjs7OztJQWlCaEMsWUFDVSxlQUFnQztRQUFoQyxvQkFBZSxHQUFmLGVBQWUsQ0FBaUI7UUFkMUMsZ0JBQVcsR0FBRyxFQUFFLENBQUM7UUFDakIsbUJBQWMsR0FBRyxFQUFFLENBQUM7UUFHVixvQkFBZSxHQUFpQyxJQUFJLFlBQVksRUFBa0IsQ0FBQzs7OztRQUduRixvQkFBZSxHQUFpQyxJQUFJLFlBQVksRUFBa0IsQ0FBQztRQUNuRixzQkFBaUIsR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQU0xQixDQUFDOzs7O0lBRWhELFFBQVE7UUFDTixJQUFJLENBQUMsT0FBTyxHQUFHO1lBQ2IsaUVBQWlFO1lBQ2pFLEVBQUUsS0FBSyxFQUFFLG1CQUFtQixFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRTtZQUMzRCxFQUFFLEtBQUssRUFBRSxtQkFBbUIsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUU7WUFDN0QsRUFBRSxLQUFLLEVBQUUsZUFBZSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRTtZQUN2RCxFQUFFLEtBQUssRUFBRSxlQUFlLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtTQUM1QyxDQUFDO0lBQ0osQ0FBQzs7Ozs7SUFHRCxRQUFROztjQUNFLEdBQUcsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRTtRQUN6QyxHQUFHLENBQUMsU0FBUzs7OztRQUFDLENBQUMsTUFBVyxFQUFFLEVBQUU7WUFDNUIsSUFBSSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUM7UUFDdEIsQ0FBQyxFQUFDLENBQUM7SUFDUCxDQUFDOzs7Ozs7SUFHQSxXQUFXLENBQUMsT0FBc0I7UUFDakMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO1lBQ3pDLFVBQVU7WUFDVixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDakI7SUFDSCxDQUFDOzs7Ozs7SUFLRCxlQUFlLENBQUMsSUFBUztRQUN2QixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDdkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxFQUFFLENBQUM7WUFDdEIsT0FBUTtTQUNUO1FBQ0QsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQztRQUN6QyxPQUFPO1FBQ1AsSUFBSSxJQUFJLENBQUMsY0FBYyxLQUFLLEVBQUUsRUFBRTtZQUM5QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7WUFDdkMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1NBQy9DO2FBQU07WUFDTCxXQUFXO1lBQ1gsSUFBSSxJQUFJLENBQUMsY0FBYyxLQUFLLElBQUksQ0FBQyxXQUFXLEVBQUU7Z0JBQzVDLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztnQkFDdkMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO2FBQy9DO1NBQ0Y7SUFDSCxDQUFDOzs7OztJQUVELFNBQVMsQ0FBQyxFQUFFLEVBQUUsRUFBTztRQUNuQixPQUFPO1lBQ0wsWUFBWSxFQUFFLElBQUk7WUFDbEIsUUFBUSxFQUFFLElBQUk7U0FDZixDQUFDO0lBQ0osQ0FBQzs7Ozs7SUFHRCxPQUFPO1FBQ0wsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUNoRCxDQUFDOzs7O0lBRUQsTUFBTTtRQUNKLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNoQyxDQUFDOzs7WUF6RkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxtQkFBbUI7Z0JBQzdCLHNxQkFBNkM7O2FBRTlDOzs7O1lBTlEsZUFBZTs7O29CQVVyQixLQUFLOzhCQUtMLE1BQU07OEJBR04sTUFBTTtnQ0FDTixNQUFNO2dDQUdOLFNBQVMsU0FBQyxnQkFBZ0I7Ozs7SUFiM0Isd0NBQWE7O0lBQ2Isc0NBQWlDOztJQUNqQyw0Q0FBaUI7O0lBQ2pCLCtDQUFvQjs7SUFDcEIsOENBQThCOztJQUU5QixnREFBNkY7Ozs7O0lBRzdGLGdEQUE2Rjs7SUFDN0Ysa0RBQXlFOztJQUd6RSxrREFBaUU7Ozs7O0lBRy9ELGdEQUF3QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBPbkNoYW5nZXMsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgVmlld0NoaWxkLCBUZW1wbGF0ZVJlZiwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUsIGZyb20sIG9mIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IFRyYW5zbGF0ZVNlcnZpY2UgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcclxuaW1wb3J0IHsgUmVBc3NpZ25FbnRpdHkgfSBmcm9tICcuLi8uLi8uLi9jb21tb24vZW50aXR5L3JlYXNzaWduLmVudGl0eSc7XHJcbmltcG9ydCB7IFJlQXNzaWduU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9zZXJ2aWNlL3JlYXNzaWduLnNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdyYWMtcmVhc3NpZ24tZ3JpZCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3JlYXNzaWduLWdyaWQuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3JlYXNzaWduLWdyaWQuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBSZWFzc2lnbkdyaWRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XHJcblxyXG4gIGNvbHVtbnM6IGFueTtcclxuICBASW5wdXQoKSBkYXRhczogUmVBc3NpZ25FbnRpdHlbXTtcclxuICBzZWxlY3RlZEtleSA9ICcnO1xyXG4gIHNlbGVjdGVkS2V5T2xkID0gJyc7XHJcbiAgc2VsZWN0ZWRNb2RlbDogUmVBc3NpZ25FbnRpdHk7XHJcblxyXG4gIEBPdXRwdXQoKSBzZWxlY3RlZENoYW5nZWQ6IEV2ZW50RW1pdHRlcjxSZUFzc2lnbkVudGl0eT4gPSBuZXcgRXZlbnRFbWl0dGVyPFJlQXNzaWduRW50aXR5PigpO1xyXG5cclxuICAvKiog5biu5Yqp6L6T5Ye65LqL5Lu2ICovXHJcbiAgQE91dHB1dCgpIHNlbGVjdGVkQWZ0ZXJPazogRXZlbnRFbWl0dGVyPFJlQXNzaWduRW50aXR5PiA9IG5ldyBFdmVudEVtaXR0ZXI8UmVBc3NpZ25FbnRpdHk+KCk7XHJcbiAgQE91dHB1dCgpIGNsb3NlTW9kYWxFbWl0dGVyOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG5cclxuICAvLyDms6jlhaXliLDluK7liqnnmoTnoa7orqTlkozlj5bmtojmjInpkq5cclxuICBAVmlld0NoaWxkKCdidG5Pa0FuZENhbmNsZScpIGJ0bk9rQW5kQ2FuY2xlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgcmVBc3NpZ25TZXJ2aWNlOiBSZUFzc2lnblNlcnZpY2UgKSB7IH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmNvbHVtbnMgPSBbXHJcbiAgICAgIC8vIHsgZmllbGQ6ICduYW1lJywgdGl0bGU6IHRoaXMudHJhbnNsYXRlLmluc3RhbnQoJ2xibEF1dGhPYmonKSB9XHJcbiAgICAgIHsgZmllbGQ6ICdhdXRob3JpemF0aW9uQ29kZScsIHRpdGxlOiAn5p2D6ZmQ5a+56LGh57yW5Y+3Jywgd2lkdGg6ICcwJyB9LFxyXG4gICAgICB7IGZpZWxkOiAnYXV0aG9yaXphdGlvbk5hbWUnLCB0aXRsZTogJ+adg+mZkOWvueixoeWQjeensCcsIHdpZHRoOiAnMjAwJyB9LFxyXG4gICAgICB7IGZpZWxkOiAnYXV0aGZpZWxkQ29kZScsIHRpdGxlOiAn5p2D6ZmQ5a2X5q6157yW5Y+3Jywgd2lkdGg6ICcwJyB9LFxyXG4gICAgICB7IGZpZWxkOiAnYXV0aGZpZWxkTmFtZScsIHRpdGxlOiAn5p2D6ZmQ5a2X5q615ZCN56ewJyB9XHJcbiAgICBdO1xyXG4gIH1cclxuXHJcbiAgLyoqIOiOt+WPluWFgeiuuOmHjeaOiOadg+eahOadg+mZkCAqL1xyXG4gIGluaXREYXRhKCkge1xyXG4gICAgICBjb25zdCBvYnMgPSB0aGlzLnJlQXNzaWduU2VydmljZS5nZXRBbGwoKTtcclxuICAgICAgb2JzLnN1YnNjcmliZSgocmVzdWx0OiBhbnkpID0+IHtcclxuICAgICAgICB0aGlzLmRhdGFzID0gcmVzdWx0O1xyXG4gICAgICB9KTtcclxuICB9XHJcblxyXG4gICAvKiog6L6T5YWl5bGe5oCn5Y+Y5YyW5ZCOICovXHJcbiAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy5kYXRhcyB8fCB0aGlzLmRhdGFzLmxlbmd0aCA8PSAwKSB7XHJcbiAgICAgIC8vIOacjeWKoeerr+iOt+WPluaVsOaNrlxyXG4gICAgICB0aGlzLmluaXREYXRhKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuIC8qKlxyXG4gICog6YCJ5Lit6KGM5pS55Y+Y5ZCO6Kem5Y+R5LqL5Lu2XHJcbiAgKi9cclxuICBoYW5kbGVTZWxlY3Rpb24oYXJnczogYW55KSB7XHJcbiAgICB0aGlzLnNlbGVjdGVkTW9kZWwgPSBhcmdzLmRhdGE7XHJcbiAgICBpZiAoIXRoaXMuc2VsZWN0ZWRNb2RlbCkge1xyXG4gICAgICB0aGlzLnNlbGVjdGVkS2V5ID0gJyc7XHJcbiAgICAgIHJldHVybiA7XHJcbiAgICB9XHJcbiAgICB0aGlzLnNlbGVjdGVkS2V5ID0gdGhpcy5zZWxlY3RlZE1vZGVsLmlkO1xyXG4gICAgLy8g6aaW5qyh6Kem5Y+RXHJcbiAgICBpZiAodGhpcy5zZWxlY3RlZEtleU9sZCA9PT0gJycpIHtcclxuICAgICAgdGhpcy5zZWxlY3RlZEtleU9sZCA9IHRoaXMuc2VsZWN0ZWRLZXk7XHJcbiAgICAgIHRoaXMuc2VsZWN0ZWRDaGFuZ2VkLmVtaXQodGhpcy5zZWxlY3RlZE1vZGVsKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIOWPmOWMlueahOaDheWGteS4i+inpuWPkVxyXG4gICAgICBpZiAodGhpcy5zZWxlY3RlZEtleU9sZCAhPT0gdGhpcy5zZWxlY3RlZEtleSkge1xyXG4gICAgICAgIHRoaXMuc2VsZWN0ZWRLZXlPbGQgPSB0aGlzLnNlbGVjdGVkS2V5O1xyXG4gICAgICAgIHRoaXMuc2VsZWN0ZWRDaGFuZ2VkLmVtaXQodGhpcy5zZWxlY3RlZE1vZGVsKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaWNvbkNsYXNzKHsgaWQgfTogYW55KTogYW55IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICdrLWktZm9sZGVyJzogdHJ1ZSxcclxuICAgICAgJ2staWNvbic6IHRydWVcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvKiog5biu5Yqp56Gu5a6a5oyJ6ZKuICovXHJcbiAgY29uZmlybSgpIHtcclxuICAgIHRoaXMuc2VsZWN0ZWRLZXlPbGQgPSB0aGlzLnNlbGVjdGVkS2V5O1xyXG4gICAgdGhpcy5zZWxlY3RlZEFmdGVyT2suZW1pdCh0aGlzLnNlbGVjdGVkTW9kZWwpO1xyXG4gIH1cclxuXHJcbiAgY2FuY2xlKCkge1xyXG4gICAgdGhpcy5jbG9zZU1vZGFsRW1pdHRlci5uZXh0KCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==