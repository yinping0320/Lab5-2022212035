import { FieldAccessType } from './field-access-type';
/**
 *   规则权限实体
 */
export declare class BizDataDTO {
    data: string;
    assid1: string;
    assid2: string;
    assid3: string;
    fieldAccessFlag: FieldAccessType;
}
/**
 * 权限字段实体
 */
export declare class AuresultEntity {
    groupId: string;
    /**
     * 权限包Id
     */
    packageId: string;
    /**
     * 权限对象Id
     */
    authorizationId: string;
    /**
     * 权限字段Id
     */
    authField: string;
    /**
     * 基于权限结果包分组的业务数据集合
     */
    datas: BizDataDTO[];
    /**
     *  基于权限结果包分组的数据操作Id集合；用于仅以权限字段为维度划分
     */
    authorizations: AuthorizationEntity[];
    /**
     *  基于权限结果包分组的数据操作Id集合；用于以权限字段、权限对象为维度进行划分
     */
    authOps: AuthoperationEntity[];
    /**
     *  基于权限结果包分组的规则权限
     */
    ruleEntity: GSPAuthorizationRule[];
}
/**
 * 权限对象实体
 */
export declare class AuthorizationEntity {
    id: string;
    code: string;
    name: string;
    authOps: AuthoperationEntity[];
}
/**
 * 权限结果实体
 */
export declare class AuthoperationEntity {
    id: string;
    code: string;
    name: string;
}
/**
 * 规则权限实体
 */
export declare class GSPAuthorizationRule {
    Type: number;
    NeedInput: boolean;
    Lbracket: string;
    Rbracket: string;
    Variable: string;
    Value: string;
    DisplayValue: string;
    Relation: string;
}
