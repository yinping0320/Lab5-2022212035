/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, EventEmitter, ViewChild, TemplateRef, Input, Optional } from '@angular/core';
import { RtfAppService } from '../service/rtf-app.service';
import { I18NresourceService } from '../service/i18N/i18-nresource.service';
import { i18nAppHelpInfo } from '../../models/i18n-model/i18n-model';
import { MessagerService } from '@farris/ui-messager';
/**
 * 系统管理：功能操作左树有、右列表展示
 */
// tslint:disable
export class RtfAppComponent {
    /**
     * @param {?} rtfAppService
     * @param {?} i18nService
     * @param {?} farrisMsg
     */
    constructor(rtfAppService, i18nService, farrisMsg) {
        this.rtfAppService = rtfAppService;
        this.i18nService = i18nService;
        this.farrisMsg = farrisMsg;
        /**
         * 确认事件
         */
        this.afterConfirm = new EventEmitter();
        /**
         * 关闭事件
         */
        this.afterCancle = new EventEmitter();
        this.dataarray = [];
        /**
         * 当前选中数据
         */
        this.curSelectedKeys = [];
        this.title = '';
        this.i18nEntity = {};
        if (!i18nService) {
            this.i18nService = new I18NresourceService(rtfAppService);
        }
        // this.i18nEntityInit();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.selectableSettings = {
            checkboxOnly: true,
            // 默认单选
            mode: !this.gridSelectMode ? 'single' : this.gridSelectMode,
            enabled: true
        };
        /*this.rtfAppService.getAppList().subscribe(
            res => {
                // 左侧树
                this.treeData = res;
                // 菜单明细数据
                const info = res.filter(item => item.layer === '4');
                info.forEach(element => {
                    this.dataarray = this.dataarray.concat(element.appInvoks);
                });
                // this.gridData = this.dataarray;
            },
            error => {
                console.log('获取失败');
            }
        );*/
        // 获取所有应用数据
        this.rtfAppService.getAppListWithBizObjectData().subscribe((/**
         * @param {?} res
         * @return {?}
         */
        res => {
            this.treeData = res;
            /** @type {?} */
            const appDetails = res.filter((/**
             * @param {?} item
             * @return {?}
             */
            (item) => item.layer === '4' || (item.layer === '5')));
            appDetails.forEach((/**
             * @param {?} ele
             * @return {?}
             */
            ele => {
                this.dataarray = this.dataarray.concat(ele.appInvoks);
            }));
        }), (/**
         * @param {?} error
         * @return {?}
         */
        error => {
            this.farrisMsg.error("获取应用数据失败");
        }));
    }
    /**
     * 搜索
     * @param {?} filterValue 查询条件
     * @return {?}
     */
    searchData(filterValue) {
        // 空的搜索是全部数据
        if (filterValue === null || filterValue === '') {
            this.gridData = this.data.concat();
            return;
        }
        /** @type {?} */
        const filter = filterValue.toLowerCase();
        // 搜索到上级时
        this.gridData = this.data.filter((/**
         * @param {?} item
         * @return {?}
         */
        item => item.code.toLowerCase().includes(filter) ||
            item.name.toLowerCase().includes(filter)));
    }
    /**
     * 左侧树切换
     * @param {?} arg 对象参数
     * @return {?}
     */
    leftAppTreeChanged(arg) {
        this.selectedTreeNode = arg;
        if (!('4' === arg.layer || '5' === arg.layer)) {
            this.gridData = [];
            return;
        }
        /** @type {?} */
        const selectedId = arg && arg.id;
        // 根据父子关系过滤当前界面数据，包含上下级
        this.gridData = this.dataarray.filter((/**
         * @param {?} item
         * @return {?}
         */
        item => selectedId && item.appId === selectedId));
    }
    /**
     * 获取选中数据
     * @return {?}
     */
    getSelectedObject() {
        /** @type {?} */
        const result = this.dataarray.filter((/**
         * @param {?} item
         * @return {?}
         */
        item => this.curSelectedKeys && this.curSelectedKeys.findIndex((/**
         * @param {?} select
         * @return {?}
         */
        select => select === item.id)) >= 0));
        return result;
    }
    /**
     * 确认
     * @return {?}
     */
    confirm() {
        /** @type {?} */
        const result = this.getSelectedObject();
        if (this.selectedTreeNode && result && result.length > 0) {
            this.selectedTreeNode.selectedInvok = result.filter((/**
             * @param {?} inv
             * @return {?}
             */
            inv => inv && inv.appId === this.selectedTreeNode.id));
        }
        this.afterConfirm.next(this.selectedTreeNode);
        // 取消-目的是在这里让模态框消失
        this.cancle();
    }
    /**
     * 取消
     * @return {?}
     */
    cancle() {
        this.afterCancle.next();
    }
    /**
     * @return {?}
     */
    i18nEntityInitBak() {
        this.i18nService.getI18nJson().subscribe((/**
         * @param {?} entity
         * @return {?}
         */
        entity => {
            if (entity) {
                this.title = entity.TitleName;
                this.i18nEntity = entity;
                this.i18nService.i18nObj = entity;
            }
        }));
    }
    /**
     * @param {?} langCode
     * @return {?}
     */
    setCurrentLangCode(langCode) {
        this.currentLangCode = langCode;
        this.title = this.getResOnCurrentLangeContext('TitleName');
    }
    /**
     * @param {?} resKey
     * @return {?}
     */
    getResOnCurrentLangeContext(resKey) {
        /** @type {?} */
        const resValue = i18nAppHelpInfo[this.currentLangCode][resKey];
        return resValue;
    }
}
RtfAppComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-rtf-app',
                template: "<div class=\"d-flex flex-row\" style=\"\r\nwidth: 800px; \r\nborder:2px;\r\nposition:absolute;\r\ntop:0px;\r\nbottom: 0px;\r\nright:0px;\r\nleft:0px;\r\noverflow: hidden;\r\nheight: 100%;\">\r\n    <div class=\"flex-fill\">\r\n        <kendo-splitter style=\"height:100%\" orientation=\"horizontal\">\r\n            <kendo-splitter-pane size=\"40%\" min=\"20%\" max=\"50%\">\r\n                <div class=\"d-flex flex-column flex-fill\" style=\"height:100%\">\r\n                    <div class=\"p-2\" style=\"height: 35px;\">\r\n                        <h5>{{this.getResOnCurrentLangeContext('TitleName')}}</h5>\r\n                        <hr class=\"m-0 p-0\" />\r\n                    </div>\r\n                    <div class=\"flex-fill\" style=\"overflow: auto;\">\r\n                        <app-module-tree [appTreeData]=\"this.treeData\" [bizObjectId]=\"bizObjectId\"\r\n                            (appTreeChanged)=\"leftAppTreeChanged($event)\"></app-module-tree>\r\n                    </div>\r\n                </div>\r\n            </kendo-splitter-pane>\r\n            <kendo-splitter-pane style=\"flex:1 1 0px; order: 2;\">\r\n                <div class=\"d-flex flex-column flex-fill\" style=\"height:100%\">\r\n                    <div class=\"p-2\" style=\"height: 35px;\">\r\n                        <h5>{{this.getResOnCurrentLangeContext('EntranceList')}}</h5>\r\n                        <hr class=\"m-0 p-0\" />\r\n                    </div>\r\n                    \r\n                    <!-- <div class=\"clearfix mt-1 mb-1 ml-1\">\r\n            <input #filter placeholder=\"\u8F93\u5165\u7F16\u53F7\u6216\u540D\u79F0\u67E5\u627E\" type=\"text\" />\r\n            <button class=\"btn btn-sm btn-default\" (click)=\"searchData(filter.value)\">\u67E5\u627E</button>\r\n          </div> -->\r\n                    <div class=\"d-flex flex-fill\" style=\"position:relative;\">\r\n                        <kendo-grid [class]=\"'flex-fill'\" [selectable]=\"selectableSettings\"\r\n                            [kendoGridBinding]=\"gridData\" [kendoGridSelectBy]=\"'id'\" [selectedKeys]=\"curSelectedKeys\">\r\n                            <kendo-grid-checkbox-column width=\"50px\"></kendo-grid-checkbox-column>\r\n                            <kendo-grid-column field=\"code\" title=\"{{this.getResOnCurrentLangeContext( 'Code')}}\">\r\n                            </kendo-grid-column>\r\n                            <kendo-grid-column field=\"name\" title=\"{{this.getResOnCurrentLangeContext( 'Name')}}\">\r\n                            </kendo-grid-column>\r\n                            <kendo-grid-column field=\"appEntrance\"\r\n                                title=\"{{this.getResOnCurrentLangeContext( 'Entrance')}}\"></kendo-grid-column>\r\n                        </kendo-grid>\r\n                    </div>\r\n                </div>\r\n            </kendo-splitter-pane>\r\n        </kendo-splitter>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #btnOkAndCancle>\r\n    <button class=\"btn btn-sm btn-primary\" (click)=\"confirm()\">{{this.getResOnCurrentLangeContext('Confirm')}}</button>\r\n    <button class=\"btn btn-sm btn-default\" (click)=\"cancle()\">{{this.getResOnCurrentLangeContext('Cancel')}}</button>\r\n</ng-template>",
                styles: [""]
            }] }
];
/** @nocollapse */
RtfAppComponent.ctorParameters = () => [
    { type: RtfAppService },
    { type: I18NresourceService, decorators: [{ type: Optional }] },
    { type: MessagerService }
];
RtfAppComponent.propDecorators = {
    bizObjectId: [{ type: Input }],
    gridSelectMode: [{ type: Input }],
    afterConfirm: [{ type: Output }],
    afterCancle: [{ type: Output }],
    btnOkAndCancleRef: [{ type: ViewChild, args: ['btnOkAndCancle',] }]
};
if (false) {
    /** @type {?} */
    RtfAppComponent.prototype.bizObjectId;
    /** @type {?} */
    RtfAppComponent.prototype.gridSelectMode;
    /**
     * 确认事件
     * @type {?}
     */
    RtfAppComponent.prototype.afterConfirm;
    /**
     * 关闭事件
     * @type {?}
     */
    RtfAppComponent.prototype.afterCancle;
    /** @type {?} */
    RtfAppComponent.prototype.btnOkAndCancleRef;
    /** @type {?} */
    RtfAppComponent.prototype.data;
    /** @type {?} */
    RtfAppComponent.prototype.dataarray;
    /** @type {?} */
    RtfAppComponent.prototype.gridData;
    /**
     * 左侧树列表数据
     * @type {?}
     */
    RtfAppComponent.prototype.treeData;
    /**
     * 当前选中数据
     * @type {?}
     */
    RtfAppComponent.prototype.curSelectedKeys;
    /** @type {?} */
    RtfAppComponent.prototype.selectableSettings;
    /** @type {?} */
    RtfAppComponent.prototype.selectedTreeNode;
    /**
     * @type {?}
     * @private
     */
    RtfAppComponent.prototype.currentLangCode;
    /** @type {?} */
    RtfAppComponent.prototype.title;
    /** @type {?} */
    RtfAppComponent.prototype.i18nEntity;
    /**
     * @type {?}
     * @private
     */
    RtfAppComponent.prototype.rtfAppService;
    /**
     * @type {?}
     * @private
     */
    RtfAppComponent.prototype.i18nService;
    /**
     * @type {?}
     * @private
     */
    RtfAppComponent.prototype.farrisMsg;
}
//# sourceMappingURL=data:application/json;base64,