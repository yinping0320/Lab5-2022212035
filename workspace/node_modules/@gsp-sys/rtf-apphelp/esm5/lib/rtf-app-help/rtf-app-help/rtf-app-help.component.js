/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, Injector, ComponentFactoryResolver } from '@angular/core';
import { RtfAppComponent } from '../rtf-app/rtf-app.component';
import { BsModalService } from '@farris/ui-modal';
import { RtfUIWebapiService } from '../../common/rtf-ui-webapi.service';
import { MessagerService } from '@farris/ui-messager';
// tslint:disable
var RtfAppHelpComponent = /** @class */ (function () {
    function RtfAppHelpComponent(rtfCommon, modalService, farrisMsg, injector, cfr) {
        this.rtfCommon = rtfCommon;
        this.modalService = modalService;
        this.farrisMsg = farrisMsg;
        this.injector = injector;
        this.cfr = cfr;
        /**
         * 初始选中的权限对象内码
         */
        this.initSelectKeys = [];
        this.languageCode = 'zh-CHS';
        /**
         * 输出事件
         */
        this.afterHelpConfirm = new EventEmitter();
    }
    /**
     * @return {?}
     */
    RtfAppHelpComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * 弹出Farris模态框帮助
     */
    /**
     * 弹出Farris模态框帮助
     * @param {?=} sessionId
     * @return {?}
     */
    RtfAppHelpComponent.prototype.showHelp = /**
     * 弹出Farris模态框帮助
     * @param {?=} sessionId
     * @return {?}
     */
    function (sessionId) {
        var _this = this;
        this.rtfCommon.sessionId = ' ';
        /** @type {?} */
        var compFactory = this.cfr.resolveComponentFactory(RtfAppComponent);
        this.funcOpComp = compFactory.create(this.injector);
        // 向组件绑定语言代码
        this.funcOpComp.instance.setCurrentLangCode(this.languageCode);
        // 获取功能菜单的实例组件
        if (this.initSelectKeys != null && this.initSelectKeys.length > 0) {
            /*this.initSelectKeys
                .forEach(key => this.funcOpComp.instance.curSelectedKeys.push(key));*/
            this.funcOpComp.instance.curSelectedKeys.push(this.initSelectKeys[0]);
        }
        // 初始化选择的业务对象
        if (this.bizObjectId && this.bizObjectId !== '') {
            this.funcOpComp.instance.bizObjectId = this.bizObjectId;
        }
        /** @type {?} */
        var modalConfig = {
            title: this.funcOpComp.instance.title,
            width: 800,
            height: 550,
            buttons: this.funcOpComp.instance.btnOkAndCancleRef,
            showButtons: true,
            showMaxButton: false,
            resizable: false
        };
        // 弹出帮助框
        this.funcOpDialog = this.modalService.show(this.funcOpComp, modalConfig);
        // 取消后
        this.funcOpComp.instance.afterCancle.subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            // 消失模态框
            _this.funcOpDialog.close();
        }));
        // 确认后
        this.funcOpComp.instance.afterConfirm.subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            _this.afterHelpConfirm.next(res);
        }));
    };
    RtfAppHelpComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-rtf-application-help',
                    template: "",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    RtfAppHelpComponent.ctorParameters = function () { return [
        { type: RtfUIWebapiService },
        { type: BsModalService },
        { type: MessagerService },
        { type: Injector },
        { type: ComponentFactoryResolver }
    ]; };
    RtfAppHelpComponent.propDecorators = {
        bizObjectId: [{ type: Input }],
        initSelectKeys: [{ type: Input }],
        languageCode: [{ type: Input }],
        afterHelpConfirm: [{ type: Output }]
    };
    return RtfAppHelpComponent;
}());
export { RtfAppHelpComponent };
if (false) {
    /**
     * 所属的业务对象内码
     * @type {?}
     */
    RtfAppHelpComponent.prototype.bizObjectId;
    /**
     * 初始选中的权限对象内码
     * @type {?}
     */
    RtfAppHelpComponent.prototype.initSelectKeys;
    /** @type {?} */
    RtfAppHelpComponent.prototype.languageCode;
    /**
     * 输出事件
     * @type {?}
     */
    RtfAppHelpComponent.prototype.afterHelpConfirm;
    /**
     * @type {?}
     * @private
     */
    RtfAppHelpComponent.prototype.funcOpComp;
    /**
     * @type {?}
     * @private
     */
    RtfAppHelpComponent.prototype.funcOpDialog;
    /**
     * @type {?}
     * @private
     */
    RtfAppHelpComponent.prototype.rtfCommon;
    /**
     * @type {?}
     * @private
     */
    RtfAppHelpComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    RtfAppHelpComponent.prototype.farrisMsg;
    /**
     * @type {?}
     * @private
     */
    RtfAppHelpComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    RtfAppHelpComponent.prototype.cfr;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnRmLWFwcC1oZWxwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atc3lzL3J0Zi1hcHBoZWxwLyIsInNvdXJjZXMiOlsibGliL3J0Zi1hcHAtaGVscC9ydGYtYXBwLWhlbHAvcnRmLWFwcC1oZWxwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBVSxZQUFZLEVBQUUsS0FBSyxFQUFnQixNQUFNLEVBQUUsUUFBUSxFQUFFLHdCQUF3QixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pJLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMvRCxPQUFPLEVBQWMsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDeEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDOztBQUd0RDtJQTZCSSw2QkFDWSxTQUE2QixFQUM3QixZQUE0QixFQUM1QixTQUEwQixFQUMxQixRQUFrQixFQUNsQixHQUE2QjtRQUo3QixjQUFTLEdBQVQsU0FBUyxDQUFvQjtRQUM3QixpQkFBWSxHQUFaLFlBQVksQ0FBZ0I7UUFDNUIsY0FBUyxHQUFULFNBQVMsQ0FBaUI7UUFDMUIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUNsQixRQUFHLEdBQUgsR0FBRyxDQUEwQjs7OztRQW5CekMsbUJBQWMsR0FBYSxFQUFFLENBQUM7UUFHOUIsaUJBQVksR0FBRyxRQUFRLENBQUM7Ozs7UUFLeEIscUJBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQVksQ0FBQztJQVdILENBQUM7Ozs7SUFFOUMsc0NBQVE7OztJQUFSO0lBQ0EsQ0FBQztJQUVEOztPQUVHOzs7Ozs7SUFDSCxzQ0FBUTs7Ozs7SUFBUixVQUFTLFNBQWtCO1FBQTNCLGlCQXVDQztRQXRDRyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUM7O1lBQ3pCLFdBQVcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDLGVBQWUsQ0FBQztRQUNyRSxJQUFJLENBQUMsVUFBVSxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3BELFlBQVk7UUFDWixJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDL0QsY0FBYztRQUNkLElBQUksSUFBSSxDQUFDLGNBQWMsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQy9EO3NGQUMwRTtZQUMxRSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUN6RTtRQUNELGFBQWE7UUFDYixJQUFJLElBQUksQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDLFdBQVcsS0FBSyxFQUFFLEVBQUU7WUFDN0MsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7U0FDM0Q7O1lBQ0ssV0FBVyxHQUFHO1lBQ2hCLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxLQUFLO1lBQ3JDLEtBQUssRUFBRSxHQUFHO1lBQ1YsTUFBTSxFQUFFLEdBQUc7WUFDWCxPQUFPLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsaUJBQWlCO1lBQ25ELFdBQVcsRUFBRSxJQUFJO1lBQ2pCLGFBQWEsRUFBRSxLQUFLO1lBQ3BCLFNBQVMsRUFBRSxLQUFLO1NBQ25CO1FBQ0QsUUFBUTtRQUNSLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxXQUFXLENBQUMsQ0FBQztRQUV6RSxNQUFNO1FBQ04sSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLFNBQVM7Ozs7UUFDMUMsVUFBQSxHQUFHO1lBQ0MsUUFBUTtZQUNSLEtBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDOUIsQ0FBQyxFQUNKLENBQUM7UUFDRixNQUFNO1FBQ04sSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLFNBQVM7Ozs7UUFBQyxVQUFDLEdBQWE7WUFDMUQsS0FBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNwQyxDQUFDLEVBQUMsQ0FBQztJQUNQLENBQUM7O2dCQWpGSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLDBCQUEwQjtvQkFDcEMsWUFBNEM7O2lCQUUvQzs7OztnQkFSUSxrQkFBa0I7Z0JBRE4sY0FBYztnQkFFMUIsZUFBZTtnQkFKK0MsUUFBUTtnQkFBRSx3QkFBd0I7Ozs4QkFpQnBHLEtBQUs7aUNBSUwsS0FBSzsrQkFHTCxLQUFLO21DQUtMLE1BQU07O0lBNkRYLDBCQUFDO0NBQUEsQUFuRkQsSUFtRkM7U0E5RVksbUJBQW1COzs7Ozs7SUFLNUIsMENBQTZCOzs7OztJQUk3Qiw2Q0FDOEI7O0lBRTlCLDJDQUN3Qjs7Ozs7SUFJeEIsK0NBQ2dEOzs7OztJQUdoRCx5Q0FBa0Q7Ozs7O0lBRWxELDJDQUFpQzs7Ozs7SUFFN0Isd0NBQXFDOzs7OztJQUNyQywyQ0FBb0M7Ozs7O0lBQ3BDLHdDQUFrQzs7Ozs7SUFDbEMsdUNBQTBCOzs7OztJQUMxQixrQ0FBcUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSdGZBcHAgfSBmcm9tICcuLy4uL2VudGl0aWVzL3J0Zi1hcHAnO1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgQ29tcG9uZW50UmVmLCBPdXRwdXQsIEluamVjdG9yLCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUnRmQXBwQ29tcG9uZW50IH0gZnJvbSAnLi4vcnRmLWFwcC9ydGYtYXBwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEJzTW9kYWxSZWYsIEJzTW9kYWxTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1tb2RhbCc7XHJcbmltcG9ydCB7IFJ0ZlVJV2ViYXBpU2VydmljZSB9IGZyb20gJy4uLy4uL2NvbW1vbi9ydGYtdWktd2ViYXBpLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBNZXNzYWdlclNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLW1lc3NhZ2VyJztcclxuXHJcbi8vIHRzbGludDpkaXNhYmxlXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdhcHAtcnRmLWFwcGxpY2F0aW9uLWhlbHAnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL3J0Zi1hcHAtaGVscC5jb21wb25lbnQuaHRtbCcsXHJcbiAgICBzdHlsZVVybHM6IFsnLi9ydGYtYXBwLWhlbHAuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBSdGZBcHBIZWxwQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOaJgOWxnueahOS4muWKoeWvueixoeWGheeggVxyXG4gICAgICovXHJcbiAgICBASW5wdXQoKSBiaXpPYmplY3RJZDogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiDliJ3lp4vpgInkuK3nmoTmnYPpmZDlr7nosaHlhoXnoIFcclxuICAgICAqL1xyXG4gICAgQElucHV0KClcclxuICAgIGluaXRTZWxlY3RLZXlzOiBzdHJpbmdbXSA9IFtdO1xyXG5cclxuICAgIEBJbnB1dCgpXHJcbiAgICBsYW5ndWFnZUNvZGUgPSAnemgtQ0hTJztcclxuICAgIC8qKlxyXG4gICAgICog6L6T5Ye65LqL5Lu2XHJcbiAgICAgKi9cclxuICAgIEBPdXRwdXQoKVxyXG4gICAgYWZ0ZXJIZWxwQ29uZmlybSA9IG5ldyBFdmVudEVtaXR0ZXI8UnRmQXBwW10+KCk7XHJcblxyXG4gICAgLy8g5biu5Yqp5LiK5Yqo5oCB5Yib5bu655qE5pi+56S65qih5p2/XHJcbiAgICBwcml2YXRlIGZ1bmNPcENvbXA6IENvbXBvbmVudFJlZjxSdGZBcHBDb21wb25lbnQ+O1xyXG4gICAgLy8g5qih5oCB5qGG5pyN5YqhXHJcbiAgICBwcml2YXRlIGZ1bmNPcERpYWxvZzogQnNNb2RhbFJlZjtcclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIHByaXZhdGUgcnRmQ29tbW9uOiBSdGZVSVdlYmFwaVNlcnZpY2UsXHJcbiAgICAgICAgcHJpdmF0ZSBtb2RhbFNlcnZpY2U6IEJzTW9kYWxTZXJ2aWNlLFxyXG4gICAgICAgIHByaXZhdGUgZmFycmlzTXNnOiBNZXNzYWdlclNlcnZpY2UsXHJcbiAgICAgICAgcHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IsXHJcbiAgICAgICAgcHJpdmF0ZSBjZnI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcikgeyB9XHJcblxyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlvLnlh7pGYXJyaXPmqKHmgIHmoYbluK7liqlcclxuICAgICAqL1xyXG4gICAgc2hvd0hlbHAoc2Vzc2lvbklkPzogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5ydGZDb21tb24uc2Vzc2lvbklkID0gJyAnO1xyXG4gICAgICAgIGNvbnN0IGNvbXBGYWN0b3J5ID0gdGhpcy5jZnIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkoUnRmQXBwQ29tcG9uZW50KTtcclxuICAgICAgICB0aGlzLmZ1bmNPcENvbXAgPSBjb21wRmFjdG9yeS5jcmVhdGUodGhpcy5pbmplY3Rvcik7XHJcbiAgICAgICAgLy8g5ZCR57uE5Lu257uR5a6a6K+t6KiA5Luj56CBXHJcbiAgICAgICAgdGhpcy5mdW5jT3BDb21wLmluc3RhbmNlLnNldEN1cnJlbnRMYW5nQ29kZSh0aGlzLmxhbmd1YWdlQ29kZSk7XHJcbiAgICAgICAgLy8g6I635Y+W5Yqf6IO96I+c5Y2V55qE5a6e5L6L57uE5Lu2XHJcbiAgICAgICAgaWYgKHRoaXMuaW5pdFNlbGVjdEtleXMgIT0gbnVsbCAmJiB0aGlzLmluaXRTZWxlY3RLZXlzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgLyp0aGlzLmluaXRTZWxlY3RLZXlzXHJcbiAgICAgICAgICAgICAgICAuZm9yRWFjaChrZXkgPT4gdGhpcy5mdW5jT3BDb21wLmluc3RhbmNlLmN1clNlbGVjdGVkS2V5cy5wdXNoKGtleSkpOyovXHJcbiAgICAgICAgICAgIHRoaXMuZnVuY09wQ29tcC5pbnN0YW5jZS5jdXJTZWxlY3RlZEtleXMucHVzaCh0aGlzLmluaXRTZWxlY3RLZXlzWzBdKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g5Yid5aeL5YyW6YCJ5oup55qE5Lia5Yqh5a+56LGhXHJcbiAgICAgICAgaWYgKHRoaXMuYml6T2JqZWN0SWQgJiYgdGhpcy5iaXpPYmplY3RJZCAhPT0gJycpIHtcclxuICAgICAgICAgICAgdGhpcy5mdW5jT3BDb21wLmluc3RhbmNlLmJpek9iamVjdElkID0gdGhpcy5iaXpPYmplY3RJZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgbW9kYWxDb25maWcgPSB7XHJcbiAgICAgICAgICAgIHRpdGxlOiB0aGlzLmZ1bmNPcENvbXAuaW5zdGFuY2UudGl0bGUsXHJcbiAgICAgICAgICAgIHdpZHRoOiA4MDAsXHJcbiAgICAgICAgICAgIGhlaWdodDogNTUwLFxyXG4gICAgICAgICAgICBidXR0b25zOiB0aGlzLmZ1bmNPcENvbXAuaW5zdGFuY2UuYnRuT2tBbmRDYW5jbGVSZWYsXHJcbiAgICAgICAgICAgIHNob3dCdXR0b25zOiB0cnVlLFxyXG4gICAgICAgICAgICBzaG93TWF4QnV0dG9uOiBmYWxzZSxcclxuICAgICAgICAgICAgcmVzaXphYmxlOiBmYWxzZVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgLy8g5by55Ye65biu5Yqp5qGGXHJcbiAgICAgICAgdGhpcy5mdW5jT3BEaWFsb2cgPSB0aGlzLm1vZGFsU2VydmljZS5zaG93KHRoaXMuZnVuY09wQ29tcCwgbW9kYWxDb25maWcpO1xyXG5cclxuICAgICAgICAvLyDlj5bmtojlkI5cclxuICAgICAgICB0aGlzLmZ1bmNPcENvbXAuaW5zdGFuY2UuYWZ0ZXJDYW5jbGUuc3Vic2NyaWJlKFxyXG4gICAgICAgICAgICByZXMgPT4ge1xyXG4gICAgICAgICAgICAgICAgLy8g5raI5aSx5qih5oCB5qGGXHJcbiAgICAgICAgICAgICAgICB0aGlzLmZ1bmNPcERpYWxvZy5jbG9zZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgKTtcclxuICAgICAgICAvLyDnoa7orqTlkI5cclxuICAgICAgICB0aGlzLmZ1bmNPcENvbXAuaW5zdGFuY2UuYWZ0ZXJDb25maXJtLnN1YnNjcmliZSgocmVzOiBSdGZBcHBbXSkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmFmdGVySGVscENvbmZpcm0ubmV4dChyZXMpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=