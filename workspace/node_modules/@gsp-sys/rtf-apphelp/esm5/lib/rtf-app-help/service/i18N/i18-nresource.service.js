/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { of } from 'rxjs';
import { RtfAppService } from '../rtf-app.service';
import * as i0 from "@angular/core";
import * as i1 from "../rtf-app.service";
// WARNING: interface has both a type and a value, skipping emit
var I18NresourceService = /** @class */ (function () {
    function I18NresourceService(rtfAppService) {
        this.rtfAppService = rtfAppService;
    }
    /**
     * @return {?}
     */
    I18NresourceService.prototype.getI18nJson = /**
     * @return {?}
     */
    function () {
        if (this.i18nObj) {
            return of(this.i18nObj);
        }
        /** @type {?} */
        var url = this.getI18nJsonApi(null);
        return this.rtfAppService.getI18nJson(url);
    };
    /**
     * @param {?} lang
     * @return {?}
     */
    I18NresourceService.prototype.getI18nJsonApi = /**
     * @param {?} lang
     * @return {?}
     */
    function (lang) {
        // const curLang = lang || 'zh-CHS';
        /** @type {?} */
        var curLang = 'zh-CHS';
        return "/platform/runtime/sys/web/assets/i18n/apphelp/" + curLang + ".json";
    };
    I18NresourceService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    I18NresourceService.ctorParameters = function () { return [
        { type: RtfAppService }
    ]; };
    /** @nocollapse */ I18NresourceService.ngInjectableDef = i0.defineInjectable({ factory: function I18NresourceService_Factory() { return new I18NresourceService(i0.inject(i1.RtfAppService)); }, token: I18NresourceService, providedIn: "root" });
    return I18NresourceService;
}());
export { I18NresourceService };
if (false) {
    /** @type {?} */
    I18NresourceService.prototype.i18nObj;
    /**
     * @type {?}
     * @private
     */
    I18NresourceService.prototype.rtfAppService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaTE4LW5yZXNvdXJjZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1zeXMvcnRmLWFwcGhlbHAvIiwic291cmNlcyI6WyJsaWIvcnRmLWFwcC1oZWxwL3NlcnZpY2UvaTE4Ti9pMTgtbnJlc291cmNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBYyxFQUFFLEVBQVEsTUFBTSxNQUFNLENBQUM7QUFDNUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDOzs7O0FBUW5EO0lBT0ksNkJBQW9CLGFBQTRCO1FBQTVCLGtCQUFhLEdBQWIsYUFBYSxDQUFlO0lBQUksQ0FBQzs7OztJQUdyRCx5Q0FBVzs7O0lBQVg7UUFDSSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDZCxPQUFPLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDM0I7O1lBQ0ssR0FBRyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDO1FBQ3JDLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDL0MsQ0FBQzs7Ozs7SUFFRCw0Q0FBYzs7OztJQUFkLFVBQWUsSUFBWTs7O1lBRWpCLE9BQU8sR0FBRyxRQUFRO1FBQ3hCLE9BQU8sbURBQWlELE9BQU8sVUFBTyxDQUFDO0lBQzNFLENBQUM7O2dCQXRCSixVQUFVLFNBQUM7b0JBQ1IsVUFBVSxFQUFFLE1BQU07aUJBQ3JCOzs7O2dCQVZRLGFBQWE7Ozs4QkFGdEI7Q0FpQ0MsQUF2QkQsSUF1QkM7U0FwQlksbUJBQW1COzs7SUFFNUIsc0NBQW9COzs7OztJQUVSLDRDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIEluamVjdCwgTE9DQUxFX0lEIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUsIG9mLCBmcm9tIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IFJ0ZkFwcFNlcnZpY2UgfSBmcm9tICcuLi9ydGYtYXBwLnNlcnZpY2UnO1xyXG5cclxuXHJcbmRlY2xhcmUgdmFyIFN5c3RlbTogU3lzdGVtO1xyXG5pbnRlcmZhY2UgU3lzdGVtIHtcclxuICAgIGltcG9ydChyZXF1ZXN0OiBzdHJpbmcpOiBQcm9taXNlPGFueT47XHJcbn1cclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICAgIHByb3ZpZGVkSW46ICdyb290J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgSTE4TnJlc291cmNlU2VydmljZSB7XHJcblxyXG4gICAgcHVibGljIGkxOG5PYmo6IGFueTtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJ0ZkFwcFNlcnZpY2U6IFJ0ZkFwcFNlcnZpY2UpIHsgfVxyXG5cclxuXHJcbiAgICBnZXRJMThuSnNvbigpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgICAgIGlmICh0aGlzLmkxOG5PYmopIHtcclxuICAgICAgICAgICAgcmV0dXJuIG9mKHRoaXMuaTE4bk9iaik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHVybCA9IHRoaXMuZ2V0STE4bkpzb25BcGkobnVsbCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucnRmQXBwU2VydmljZS5nZXRJMThuSnNvbih1cmwpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEkxOG5Kc29uQXBpKGxhbmc6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgLy8gY29uc3QgY3VyTGFuZyA9IGxhbmcgfHwgJ3poLUNIUyc7XHJcbiAgICAgICAgY29uc3QgY3VyTGFuZyA9ICd6aC1DSFMnO1xyXG4gICAgICAgIHJldHVybiBgL3BsYXRmb3JtL3J1bnRpbWUvc3lzL3dlYi9hc3NldHMvaTE4bi9hcHBoZWxwLyR7Y3VyTGFuZ30uanNvbmA7XHJcbiAgICB9XHJcbn1cclxuIl19