/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { RtfUIWebapiService } from '../../common/rtf-ui-webapi.service';
var RtfAppService = /** @class */ (function () {
    function RtfAppService(rtfCommon, httpClient) {
        this.rtfCommon = rtfCommon;
        this.httpClient = httpClient;
    }
    /**
     * 获取功能菜单操作
     */
    /**
     * 获取功能菜单操作
     * @return {?}
     */
    RtfAppService.prototype.getAppList = /**
     * 获取功能菜单操作
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = this.rtfCommon.functionsApi;
        /** @type {?} */
        var header = this.rtfCommon.httpHeader;
        return this.httpClient.get(url, header);
    };
    /**
     * 获取包含BO数据的应用数据
     */
    /**
     * 获取包含BO数据的应用数据
     * @return {?}
     */
    RtfAppService.prototype.getAppListWithBizObjectData = /**
     * 获取包含BO数据的应用数据
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = this.rtfCommon.appsWithBOApi;
        /** @type {?} */
        var header = this.rtfCommon.httpHeader;
        return this.httpClient.get(url, header);
    };
    /**
     * 获取多语资源文件
     */
    /**
     * 获取多语资源文件
     * @param {?} url
     * @return {?}
     */
    RtfAppService.prototype.getI18nJson = /**
     * 获取多语资源文件
     * @param {?} url
     * @return {?}
     */
    function (url) {
        /** @type {?} */
        var header = this.rtfCommon.httpHeader;
        return this.httpClient.get(url, header);
    };
    RtfAppService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    RtfAppService.ctorParameters = function () { return [
        { type: RtfUIWebapiService },
        { type: HttpClient }
    ]; };
    return RtfAppService;
}());
export { RtfAppService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    RtfAppService.prototype.rtfCommon;
    /**
     * @type {?}
     * @private
     */
    RtfAppService.prototype.httpClient;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnRmLWFwcC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1zeXMvcnRmLWFwcGhlbHAvIiwic291cmNlcyI6WyJsaWIvcnRmLWFwcC1oZWxwL3NlcnZpY2UvcnRmLWFwcC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFbEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFFeEU7SUFHSSx1QkFDWSxTQUE2QixFQUM3QixVQUFzQjtRQUR0QixjQUFTLEdBQVQsU0FBUyxDQUFvQjtRQUM3QixlQUFVLEdBQVYsVUFBVSxDQUFZO0lBRWxDLENBQUM7SUFFRDs7T0FFRzs7Ozs7SUFDSCxrQ0FBVTs7OztJQUFWOztZQUNVLEdBQUcsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVk7O1lBQ2pDLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVU7UUFDeEMsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUNEOztPQUVHOzs7OztJQUNILG1EQUEyQjs7OztJQUEzQjs7WUFDVSxHQUFHLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhOztZQUNsQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVO1FBQ3hDLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFRDs7T0FFRzs7Ozs7O0lBQ0gsbUNBQVc7Ozs7O0lBQVgsVUFBWSxHQUFXOztZQUNiLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVU7UUFDeEMsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDNUMsQ0FBQzs7Z0JBaENKLFVBQVU7Ozs7Z0JBRkYsa0JBQWtCO2dCQUZsQixVQUFVOztJQXFDbkIsb0JBQUM7Q0FBQSxBQWpDRCxJQWlDQztTQWhDWSxhQUFhOzs7Ozs7SUFHbEIsa0NBQXFDOzs7OztJQUNyQyxtQ0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3QsIExPQ0FMRV9JRCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBmcm9tLCBvZiB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBSdGZVSVdlYmFwaVNlcnZpY2UgfSBmcm9tICcuLi8uLi9jb21tb24vcnRmLXVpLXdlYmFwaS5zZXJ2aWNlJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIFJ0ZkFwcFNlcnZpY2Uge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIHByaXZhdGUgcnRmQ29tbW9uOiBSdGZVSVdlYmFwaVNlcnZpY2UsXHJcbiAgICAgICAgcHJpdmF0ZSBodHRwQ2xpZW50OiBIdHRwQ2xpZW50XHJcbiAgICApIHtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOiOt+WPluWKn+iDveiPnOWNleaTjeS9nFxyXG4gICAgICovXHJcbiAgICBnZXRBcHBMaXN0KCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICAgICAgY29uc3QgdXJsID0gdGhpcy5ydGZDb21tb24uZnVuY3Rpb25zQXBpO1xyXG4gICAgICAgIGNvbnN0IGhlYWRlciA9IHRoaXMucnRmQ29tbW9uLmh0dHBIZWFkZXI7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cENsaWVudC5nZXQodXJsLCBoZWFkZXIpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflj5bljIXlkKtCT+aVsOaNrueahOW6lOeUqOaVsOaNrlxyXG4gICAgICovXHJcbiAgICBnZXRBcHBMaXN0V2l0aEJpek9iamVjdERhdGEoKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgICAgICBjb25zdCB1cmwgPSB0aGlzLnJ0ZkNvbW1vbi5hcHBzV2l0aEJPQXBpO1xyXG4gICAgICAgIGNvbnN0IGhlYWRlciA9IHRoaXMucnRmQ29tbW9uLmh0dHBIZWFkZXI7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cENsaWVudC5nZXQodXJsLCBoZWFkZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6I635Y+W5aSa6K+t6LWE5rqQ5paH5Lu2XHJcbiAgICAgKi9cclxuICAgIGdldEkxOG5Kc29uKHVybDogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgICAgICBjb25zdCBoZWFkZXIgPSB0aGlzLnJ0ZkNvbW1vbi5odHRwSGVhZGVyO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmh0dHBDbGllbnQuZ2V0KHVybCwgaGVhZGVyKTtcclxuICAgIH1cclxufVxyXG4iXX0=