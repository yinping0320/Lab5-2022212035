import { OnInit, EventEmitter, TemplateRef, AfterContentInit, ElementRef } from '@angular/core';
import { SysFuncOperationService } from '../service/sys-func-operation.service';
import { DatagridComponent } from '@farris/ui-datagrid';
import { TreeTableComponent } from '@farris/ui-treetable';
import { BizObjectService } from '../service/biz-object.service';
import { SysLocaleService } from '../../locale/sys-locale.service';
/**
 * 系统管理：功能操作左树有、右列表展示
 */
export declare class SysFarrisFuncOperationComponent implements OnInit, AfterContentInit {
    private funcOpService;
    private bizObjectService;
    private localService;
    /** 业务对象,负责传递 */
    bizObjectId: string;
    /** 选择模式 */
    gridSelectMode: 'single' | 'multiple';
    multiSelect: boolean;
    /** 已经废弃 */
    sessionId: string;
    /** 是否只显示分组 */
    onlyShowGroup: boolean;
    /** 分组能否被选择 */
    isGroupCanSelected: boolean;
    /**
     * 确认事件
     */
    afterConfirm: EventEmitter<any[]>;
    /**
     * 关闭事件
     */
    afterCancle: EventEmitter<any>;
    btnOkAndCancleRef: TemplateRef<any>;
    /**
     * 功能操作全量数据
     */
    gridDataSrc: any[];
    treeDataSrc: any[];
    /**
     * 当前UI显示动能操作列表数据
     */
    gridData: any[];
    treeData: any[];
    /**
     * 当前选中数据
     */
    curSelected: any[];
    curSelectedKeys: string[];
    gridColumns: any[];
    treeColumns: any[];
    opSearchTxt: any;
    i18nRes: any;
    operationGrid: DatagridComponent;
    farrisTreeParent: ElementRef;
    farrisTt: TreeTableComponent;
    /**
     * 监控拖拽事件，重绘组织TreeTable
     * @param event 事件参数
     */
    winResize(): void;
    constructor(funcOpService: SysFuncOperationService, bizObjectService: BizObjectService, localService: SysLocaleService);
    /** 重绘Farris-TreeTable的大小 */
    reSizeTreeTable(height?: number, width?: number): void;
    ngOnInit(): void;
    /** 页面渲染完成后 */
    ngAfterContentInit(): void;
    /**
     * 加载数据,TODO 加载数据
     */
    loadData(): void;
    /**
     * 刷新列表显示
     */
    private freshGridAndSelect;
    /**
     * 构造树
     */
    private makeTree;
    /**
     * 父节点构造树
     */
    private makeChildrenByParentId;
    /**
     * 搜索时监测回车
     */
    onKeyUp(arg: any): void;
    /**
     * 搜索
     */
    searchData(): void;
    /**
     * 格式化
     */
    funcGroupFormatter: (val: any, data: any) => string;
    /**
     * 获取功能分组
     */
    getFuncGroup(funcOpObj: any): string;
    /**
     * 业务对象变化后
     * @param arg 业务对象参数
     */
    bizObjectChanged(arg: any): void;
    /**
     * 获取选中数据
     */
    getSelectedObject(): any[];
    /**
     * 选中后
     */
    checked(row: any): void;
    /**
     * 取消选中列表
     */
    unchecked(row: any): void;
    /**
     * 确认
     */
    confirm(): void;
    /**
     * 取消
     */
    cancle(): void;
}
