{"version":3,"sources":["ng://@gsp-sys/sysmgr-ui/lib/sys-common/sys-front.util.ts","ng://@gsp-sys/sysmgr-ui/lib/func-op-help/service/sys-func-operation.service.ts","ng://@gsp-sys/sysmgr-ui/lib/func-op-help/sys-func-operation/sys-func-operation.component.ts","ng://@gsp-sys/sysmgr-ui/lib/func-op-help/service/biz-object.service.ts","ng://@gsp-sys/sysmgr-ui/lib/locale/locales/zh-cn/navigiation.ts","ng://@gsp-sys/sysmgr-ui/lib/locale/locales/zh-cn/help.ts","ng://@gsp-sys/sysmgr-ui/lib/locale/locales/zh-cn/index.ts","ng://@gsp-sys/sysmgr-ui/lib/locale/locales/index.ts","ng://@gsp-sys/sysmgr-ui/lib/locale/locales/en-us/index.ts","ng://@gsp-sys/sysmgr-ui/lib/locale/locales/en-us/navigation.ts","ng://@gsp-sys/sysmgr-ui/lib/locale/locales/en-us/help.ts","ng://@gsp-sys/sysmgr-ui/lib/locale/locales/zh-ct/index.ts","ng://@gsp-sys/sysmgr-ui/lib/locale/locales/zh-ct/navigiation.ts","ng://@gsp-sys/sysmgr-ui/lib/locale/locales/zh-ct/help.ts","ng://@gsp-sys/sysmgr-ui/lib/locale/sys-locale.service.ts","ng://@gsp-sys/sysmgr-ui/lib/func-op-help/sys-farris-func-operation/sys-farris-func-operation.component.ts","ng://@gsp-sys/sysmgr-ui/lib/func-op-help/sys-func-op-help/sys-func-op-help.component.ts","ng://@gsp-sys/sysmgr-ui/lib/func-op-help/biz-object/biz-object.component.ts","ng://@gsp-sys/sysmgr-ui/lib/func-op-help/func-op.help.module.ts","ng://@gsp-sys/sysmgr-ui/lib/sys-manager-ui/service/sys-help.service.ts","ng://@gsp-sys/sysmgr-ui/lib/sys-manager-ui/service/sys-exception.service.ts","ng://@gsp-sys/sysmgr-ui/lib/sys-manager-ui/group-nav/group.service.ts","ng://@gsp-sys/sysmgr-ui/lib/sys-manager-ui/group-nav/group-nav.component.ts","ng://@gsp-sys/sysmgr-ui/lib/sys-manager-ui/help-meta/sys-help-meta.ts","ng://@gsp-sys/sysmgr-ui/lib/sys-manager-ui/service/sys-farris-lookup.service.ts","ng://@gsp-sys/sysmgr-ui/lib/sys-manager-ui/sys-farris-lookup/sys-farris-lookup.component.ts","ng://@gsp-sys/sysmgr-ui/lib/sys-manager-ui/service/help-filter-map.ts","ng://@gsp-sys/sysmgr-ui/lib/sys-manager-ui/sys-farris-tree-help/sys-farris-tree-help.component.ts","ng://@gsp-sys/sysmgr-ui/lib/sys-manager-ui/sys-manager-ui.module.ts","ng://@gsp-sys/sysmgr-ui/lib/sys-manager-ui/filter/auth-op.ts"],"names":["SysFrontUtil","Object","defineProperty","prototype","headers","Content-Type","Access-Control-Allow-Origin","responseType","SysFuncOperationService","sysUtil","rest","this","getFuncOperations","url","operationApi","get","httpHeader","Injectable","HttpClient","SysFuncOperationComponent","funcOpService","onlyShowGroup","afterConfirm","EventEmitter","afterCancle","curSelectedKeys","title","ngOnInit","loadData","_this","selectableSettings","checkboxOnly","mode","gridSelectMode","enabled","subscribe","res","data","funcList","filter","item","type","gridData","concat","error","console","log","searchData","filterValue","toLowerCase","includes","getFuncGroup","bizObjectChanged","arg","length","busId","funcOpObj","parentId","undefined","parentObj","getSelectedObject","findIndex","select","confirm","result","next","cancle","Component","args","selector","template","Input","Output","ViewChild","BizObjectService","getBizObjects","bizObjectApi","NAVI_LOCALE_ZHCHS","rootNodeCode","rootNodeTitle","codeField","nameField","allColumnsTitle","searchNullData","HELP_LOCALE_ZHCHS","userTitle","positionTitle","roleTitle","userOrgTitle","userGroupTitle","positionGroupTitle","roleGroupTitle","orderField","orgName","orgNamePathField","operationTitle","busTitle","opGroupField","ZH_CHS","navi","help","SYS_LOCALES","zh-CHS","zh-cn","en","zh-CHT","SysLocaleService","lang","localeId","getLanguageCode","langData","getComponentOpt","comp","LanguageService","SysFarrisFuncOperationComponent","bizObjectService","localService","multiSelect","curSelected","gridColumns","opSearchTxt","funcGroupFormatter","val","winResize","reSizeTreeTable","height","width","farrisTreeParent","nativeElement","clientHeight","clientWidth","farrisTt","resize","operationGrid","restService","virtualized","fitColumns","fit","i18nRes","field","formatter","treeColumns","ngAfterContentInit","treeDataSrc","treeData","makeTree","lists","gridDataSrc","freshGridAndSelect","list","clearAll","forEach","indexOf","id","checkRow","push","root","t","layer","map","children","expanded","selectable","e","makeChildrenByParentId","datas","c","parentID","d","onKeyUp","which","content","trim","code","name","node","businessId","checkeds","checked","row","unchecked","x","splice","HostListener","SysFuncOpHelpComponent","modalService","injector","cfr","useNewUI","initSelectKeys","afterHelpConfirm","showNewHelp","sessionId","funcOpCompNew","resolveComponentFactory","create","key","instance","bizObjectId","isGroupCanSelected","modalConfig","buttons","btnOkAndCancleRef","showButtons","showMaxButton","resizable","funcOpDialog","show","close","showHelp","compFactory","funcOpComp","BsModalService","Injector","ComponentFactoryResolver","BizObjectComponent","selectKeys","expandedKeys","element","curBizObjectId_1","find","setTimeout","emit","selectChange","curBusId","dataItem","SysFuncOpHelpModule","NgModule","imports","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","DatagridModule","TreeTableModule","LayoutModule","TreeViewModule","KendoLayoutModule","GridModule","ModalModule","forRoot","MessagerModule","declarations","providers","entryComponents","exports","SysHelpService","http","getHttpOption","SysDataUtil","deleteEmpty","paramStr","JSON","stringify","getHeader","params","param","getUsers","opt","userWebApi","pipe","getPositions","positionWebApi","getRoles","roleWebApi","getOrgs","useView","handerTreeData","sysOrgWebApi","getUserGroups","userGroupWebApi","getPositionGroups","posGroupWebApi","getRoleGroups","roleGroupWebApi","convert2Json","path","isDetail","nodeType","getParentOrg","org","src","from","SysCommonUtilService","SysExceptionService","getErrorInfo","Message","GroupService","getUrlByGroupType","getByLayer","getByParentId","providedIn","GroupNavComponent","groupService","notifyService","msg","showHeader","fixedHeader","withCodeColumn","allRoot","needRemote","showNodeTypeColumn","showFilterBar","searchFields","label","value","search","selectRowChanged","searchInfo","oldSearchInfo","oldField","searchResult","searchIndex","temp","cols","rootNode","leaf","groupType","initTreeNodeList","updateSerializedValue","expand","childNode","convertToTreeNode","appendChildren","refreshThisNav","clearSearchValue","isSearchTree","codeOrName","search_data","selectNode","collapseAll","expandParent","scrollToCurrentNode","info","farris_selectable","firstLayer","curId_1","childern","secondLayer","onNodeSelect","event","getTreeData","getTreeTableComp","isCheck","unCheckAllNodes","parentNode","findRowNode","parent","expandNode","NotifyService","MessagerService","userHelp","posHelp","roleHelp","userGroupHelp","posGroupHelp","roleGroupHelp","sysOrgHelp","SysFarrisLookupService","setFilterData","str","filterData","parse","setListData","apply","getFilterData","getTreeDataAsync","treeParam","searchValue","farrisSelectedData","category","hasOwnProperty","parentPath","parentLayer","searchField","newUrl","newOpt","assign","gridResult","selectedData","items","treeInfo","loadDataType","layerType","dataField","pathField","layerField","parentField","isDetailField","columns","makeTreeByParent","keyField","pathLayerOnes","treedata","findChildrenByParent","childList","childitem","child","getGridData","index","pageIndex","size","pageSize","customData","filterStr","filterObj","allData","total","totalCount","pageInfo","pageList","enablePager","getData","typeIndex","httpUrl","substring","SysFarrisLookupComponent","showUserOrderField","showUserUnitInfo","disabled","required","enableToSelect","pagination","withPermission","useBeforeCloseEvent","typeMode","afterConfirmData","clear","loadSuccessEvent","valueChangedEvent","selectDataEvent","dialogClosed","mapFields","beforeOpen","queryMode","bindingData","split","of","showDialog","dictPicked","beforeClose","closeDialog","afterOk","helpdata","mapfields","singleSelect","displayTxt","idList","nameStr","join","idStr","onOkClick","farrisLookUp","sourceType","dataUri","afterClear","oncheckedChange","provide","ServerSideToken","useClass","HelpFilterMap","helpMeta","Map","SysFarrisTreeHelpComponent","sysHelpService","async","showAllPathOrg","selectedDataName_1","allPathOrg","nameList","treeDataIsInit","$event","SysManagerUIModule","LookupModule","SysCommonModule","CookieService","AuthOp","userManage","userView","userAssPosition","positionManage","positionView","positionAssRole","positionAssUser","roleManage","roleAssPosition"],"mappings":"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","sourcesContent":["export class SysFrontUtil {\r\n    /**\r\n     * sessionId,è°ç¨èä¼ éè¿æ¥\r\n     */\r\n    sessionId: string;\r\n    /** åè½æä½ */\r\n    get operationApi (): string {\r\n        return '/api/runtime/sys/v1.0/funcOperations';\r\n    }\r\n    /** ä¸å¡å¯¹è±¡ */\r\n    get bizObjectApi (): string {\r\n        return '/api/runtime/sys/v1.0/business-objects';\r\n    }\r\n    /**\r\n     * Httpå¤´ä¿¡æ¯\r\n     */\r\n    get httpHeader (): any {\r\n        const options: any = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n//                SessionId: this.sessionId\r\n            },\r\n            responseType: 'json'\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { SysFrontUtil } from '../../sys-common/sys-front.util';\r\n\r\n@Injectable()\r\nexport class SysFuncOperationService {\r\n    constructor(\r\n        private sysUtil: SysFrontUtil,\r\n        private rest: HttpClient) {\r\n    }\r\n\r\n    /**\r\n     * è·ååè½æä½åè¡¨\r\n     */\r\n    getFuncOperations(): Observable<any> {\r\n        const url = this.sysUtil.operationApi + '/all';\r\n        return this.rest.get(url, this.sysUtil.httpHeader);\r\n    }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, ViewChild, TemplateRef, Input } from '@angular/core';\r\nimport { SelectableSettings } from '@progress/kendo-angular-grid';\r\nimport { SysFuncOperationService } from '../service/sys-func-operation.service';\r\n\r\n/**\r\n * ç³»ç»ç®¡çï¼åè½æä½å·¦æ æãå³åè¡¨å±ç¤º\r\n */\r\n@Component({\r\n    selector: 'app-sys-func-operation',\r\n    templateUrl: './sys-func-operation.component.html',\r\n    styleUrls: ['./sys-func-operation.component.css']\r\n})\r\nexport class SysFuncOperationComponent implements OnInit {\r\n\r\n    /**ä¸å¡å¯¹è±¡,è´è´£ä¼ é */\r\n    @Input() bizObjectId: string;\r\n    /**éæ©æ¨¡å¼ */\r\n    @Input()\r\n    gridSelectMode: 'single' | 'multiple';\r\n    /**sessionId */\r\n    @Input()\r\n    sessionId: string;\r\n    /**æ¯å¦åªæ¾ç¤ºåç» */\r\n    @Input()\r\n    onlyShowGroup: boolean = false;\r\n    /**åç»è½å¦è¢«éæ© */\r\n    @Input()\r\n    isGroupCanSelected: boolean;\r\n    /**\r\n     * ç¡®è®¤äºä»¶\r\n     */\r\n    @Output()\r\n    afterConfirm = new EventEmitter<object[]>();\r\n    /**\r\n     * å³é­äºä»¶\r\n     */\r\n    @Output()\r\n    afterCancle = new EventEmitter<any>();\r\n    // æ³¨å¥å°å¸®å©çç¡®è®¤ååæ¶æé®\r\n    @ViewChild('btnOkAndCancle')\r\n    btnOkAndCancleRef: TemplateRef<any>;\r\n    /**\r\n     * åè½æä½å¨éæ°æ®\r\n     */\r\n    data: object[];\r\n    /**\r\n     * å½åUIæ¾ç¤ºå¨è½æä½åè¡¨æ°æ®\r\n     */\r\n    gridData: object[];\r\n    /**\r\n     * å½åéä¸­æ°æ®\r\n     */\r\n    curSelectedKeys: string[] = [];\r\n    selectableSettings: SelectableSettings;\r\n    title = 'åè½æä½å¸®å©';\r\n    constructor (\r\n        private funcOpService: SysFuncOperationService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit () {}\r\n\r\n   loadData () {\r\n        this.selectableSettings = {\r\n            checkboxOnly: true,\r\n            // é»è®¤åé\r\n            mode: !this.gridSelectMode ? 'single' : this.gridSelectMode,\r\n            enabled: true\r\n        };\r\n        this.funcOpService.getFuncOperations().subscribe(res => {\r\n            this.data = [];\r\n            const funcList: any[] = res;\r\n            if (this.onlyShowGroup) {\r\n                this.data = funcList.filter(item => item.type == 0);\r\n            } else {\r\n                this.data = funcList;\r\n            }\r\n            // funcList.forEach(item => {\r\n            //     this.data.push(item);\r\n            //     // å¦æææç»èç¹\r\n            //     if (this.onlyShowGroup === false && item['children'] !== null && item['children'].length > 0) {\r\n            //         item['children'].forEach(child => this.data.push(child));\r\n            //     }\r\n            // });\r\n            this.gridData = [];\r\n            // å¤å¶ä¸ä»½\r\n            this.gridData = this.data.concat();\r\n        },\r\n            error => {\r\n                console.log('è·ååè½æä½å¯¹è±¡åè¡¨å¤±è´¥');\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * æç´¢\r\n     * @param filterValue æ¥è¯¢æ¡ä»¶\r\n     */\r\n    searchData (filterValue: string) {\r\n        // æµè¯\r\n        if (filterValue === null || filterValue === '') {\r\n            // å¨éçæ°æ®\r\n            this.gridData = this.data.concat();\r\n            return;\r\n        }\r\n        const filter = filterValue.toLowerCase();\r\n        // æç´¢å°ä¸çº§æ¶\r\n        this.gridData = this.data.filter(item =>\r\n            item['code'].toLowerCase().includes(filter) ||\r\n            item['name'].toLowerCase().includes(filter) ||\r\n            this.getFuncGroup(item).toLowerCase().includes(filter));\r\n    }\r\n\r\n    /**\r\n     * ä¸å¡å¯¹è±¡ååå\r\n     * @param arg ä¸å¡å¯¹è±¡åæ°\r\n     */\r\n    bizObjectChanged (arg: any) {\r\n        if (!this.data || this.data.length === 0) {\r\n            return;\r\n        }\r\n        const busId = arg;\r\n        // æ ¹æ®ä¸å¡å¯¹è±¡è¿æ»¤\r\n        this.gridData = this.data.filter(item =>\r\n            item['businessId'] === busId);\r\n    }\r\n\r\n\r\n    /**\r\n     * è·ååè½åç»\r\n     */\r\n    getFuncGroup (funcOpObj: any): string {\r\n        // è·åç¶èç¹\r\n        const parentId = funcOpObj['parentId'];\r\n        if (parentId !== null && parentId !== undefined && parentId !== '') {\r\n            const parentObj = this.data.filter(item => item['id'] === parentId);\r\n            if (parentObj !== null && parentObj.length > 0) {\r\n                return parentObj[0]['name'];\r\n            }\r\n        } else {\r\n            return 'æ ';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * è·åéä¸­æ°æ®\r\n     */\r\n    getSelectedObject (): any {\r\n        const result = this.data.filter(item =>\r\n            this.curSelectedKeys.findIndex(select => select === item['id']) >= 0);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * ç¡®è®¤\r\n     */\r\n    confirm () {\r\n        const result = this.getSelectedObject();\r\n        this.afterConfirm.next(result);\r\n        // åæ¶-ç®çæ¯å¨è¿éè®©æ¨¡ææ¡æ¶å¤±\r\n        this.cancle();\r\n    }\r\n    /**\r\n     * åæ¶\r\n     */\r\n    cancle () {\r\n        this.afterCancle.next();\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { SysFrontUtil } from '../../sys-common/sys-front.util';\r\n\r\n@Injectable()\r\nexport class BizObjectService {\r\n\r\n    constructor (\r\n        private rest: HttpClient,\r\n        private sysUtil: SysFrontUtil) {\r\n    }\r\n\r\n    /**\r\n     * è·åä¸å¡å¯¹è±¡åè¡¨\r\n     */\r\n    getBizObjects(): Observable<any> {\r\n        const url = this.sysUtil.bizObjectApi;\r\n        return this.rest.get(url, this.sysUtil.httpHeader);\r\n    }\r\n}\r\n","export const NAVI_LOCALE_ZHCHS = {\r\n    rootNodeCode: 'ALL',\r\n    rootNodeTitle: 'ææ',\r\n    codeField: 'ç¼å·',\r\n    nameField: 'åç§°',\r\n    allColumnsTitle:'ææå',\r\n    searchNullData: 'æ²¡æè¦æ¥æ¾çæ°æ®ï¼'\r\n};\r\n","export const HELP_LOCALE_ZHCHS = {\r\n    userTitle: 'ç¨æ·',\r\n    positionTitle: 'å²ä½',\r\n    roleTitle: 'åè½ç»',\r\n    userOrgTitle: 'ç»ç»',\r\n    userGroupTitle: 'ç¨æ·åç»',\r\n    positionGroupTitle: 'å²ä½åç»',\r\n    roleGroupTitle: 'åè½ç»åç»',\r\n    codeField: 'ç¼å·',\r\n    nameField: 'åç§°',\r\n    orderField: 'æåºå·',\r\n    orgName: 'é¶å±ç»ç»',\r\n    orgNamePathField: 'é¶å±åä½',\r\n    operationTitle: 'åè½æä½',\r\n    busTitle: 'ä¸å¡å¯¹è±¡',\r\n    opGroupField: 'åè½åç»'\r\n\r\n};\r\n","import { NAVI_LOCALE_ZHCHS } from './navigiation';\r\nimport { HELP_LOCALE_ZHCHS } from './help';\r\n\r\nexport const ZH_CHS = {\r\n    navi: NAVI_LOCALE_ZHCHS,\r\n    help: HELP_LOCALE_ZHCHS\r\n};\r\n","import { EN_US } from './en-us';\r\nimport { ZH_CHS } from './zh-cn';\r\nimport { ZH_CHT } from './zh-ct';\r\n\r\n\r\nexport const SYS_LOCALES = {\r\n    'zh-CHS': ZH_CHS,\r\n    'zh-cn': ZH_CHS,\r\n    en: EN_US,\r\n    'zh-CHT':ZH_CHT\r\n};\r\n","import { NAVI_LOCALE_EN_US } from './navigation';\r\nimport { HELP_LOCALE_EN_US } from './help';\r\n\r\nexport const EN_US = {\r\n    navi: NAVI_LOCALE_EN_US,\r\n    help: HELP_LOCALE_EN_US\r\n};\r\n","export const NAVI_LOCALE_EN_US = {\r\n    rootNodeCode: 'ALL',\r\n    rootNodeTitle: 'all data',\r\n    codeField: 'Code',\r\n    nameField: 'Name',\r\n    allColumnsTitle:'All columns',\r\n    searchNullData: 'No data to find!'\r\n};\r\n","export const HELP_LOCALE_EN_US = {\r\n    userTitle: 'Users',\r\n    positionTitle: 'Positions',\r\n    roleTitle: 'Roles',\r\n    userOrgTitle: 'Organizations',\r\n    userGroupTitle: 'User Groups',\r\n    positionGroupTitle: 'Position Groups',\r\n    roleGroupTitle: 'Role Groups',\r\n    codeField: 'Code',\r\n    nameField: 'Name',\r\n    orderField: 'Order',\r\n    orgName: 'Org Info',\r\n    orgNamePathField: 'Company Info',\r\n    operationTitle: 'Function Operation',\r\n    busTitle: 'Business Object',\r\n    opGroupField: 'Operation Group'\r\n};\r\n","import { NAVI_LOCALE_ZHCHT } from './navigiation';\r\nimport { HELP_LOCALE_ZHCHT } from './help';\r\n\r\nexport const ZH_CHT = {\r\n    navi: NAVI_LOCALE_ZHCHT,\r\n    help: HELP_LOCALE_ZHCHT\r\n};\r\n","export const NAVI_LOCALE_ZHCHT = {\r\n    rootNodeCode: 'ALL',\r\n    rootNodeTitle: 'ææ',\r\n    codeField: 'ç·¨è',\r\n    nameField: 'åç¨±',\r\n    allColumnsTitle:'ææå',\r\n    searchNullData: 'æ²æè¦æ¥æ¾çæ¸æï¼'\r\n};\r\n","export const HELP_LOCALE_ZHCHT = {\r\n    userTitle: 'ç¨æ¶',\r\n    positionTitle: 'å´ä½',\r\n    roleTitle: 'åè½çµ',\r\n    userOrgTitle: 'çµç¹',\r\n    userGroupTitle: 'ç¨æ¶åçµ',\r\n    positionGroupTitle: 'å´ä½åçµ',\r\n    roleGroupTitle: 'åè½çµåçµ',\r\n    codeField: 'ç·¨è',\r\n    nameField: 'åç¨±',\r\n    orderField: 'æåºè',\r\n    orgName: 'é¸å±¬çµç¹',\r\n    orgNamePathField: 'é¸å±¬å®ä½',\r\n    operationTitle: 'åè½æä½',\r\n    busTitle: 'æ¥­åå°è±¡',\r\n    opGroupField: 'åè½åçµ'\r\n\r\n\r\n};\r\n","import { Injectable, Inject, LOCALE_ID } from '@angular/core';\r\nimport { SYS_LOCALES } from './locales';\r\nimport { LanguageService } from '@ecp-caf/caf-common';\r\n\r\n@Injectable()\r\nexport class SysLocaleService {\r\n    langData: any;\r\n    constructor(\r\n        private lang:LanguageService\r\n    ) {\r\n        let localeId = 'zh-CHS';\r\n        if (lang) {\r\n            localeId = lang.getLanguageCode();\r\n        }\r\n        this.langData = SYS_LOCALES[localeId];\r\n        if (!this.langData) {\r\n            this.langData = SYS_LOCALES['zh-CHS'];\r\n        }\r\n        console.log(localeId);\r\n        console.log(this.langData);\r\n    }\r\n\r\n    getComponentOpt(comp: string): any {\r\n        return this.langData[comp];\r\n    }\r\n\r\n}\r\n","import { element } from 'protractor';\r\nimport { Component, OnInit, Output, EventEmitter, ViewChild, TemplateRef, Input, AfterContentInit, ElementRef, HostListener } from '@angular/core';\r\nimport { SysFuncOperationService } from '../service/sys-func-operation.service';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { TreeNode, TreeTableComponent } from '@farris/ui-treetable';\r\nimport { BizObjectService } from '../service/biz-object.service';\r\nimport { SysLocaleService } from '../../locale/sys-locale.service';\r\nimport { HELP_LOCALE_ZHCHS } from '../../locale/locales/zh-cn/help';\r\n\r\n/**\r\n * ç³»ç»ç®¡çï¼åè½æä½å·¦æ æãå³åè¡¨å±ç¤º\r\n */\r\n@Component({\r\n    selector: 'app-sys-farris-func-operation',\r\n    templateUrl: './sys-farris-func-operation.component.html',\r\n    styleUrls: ['./sys-farris-func-operation.component.css']\r\n})\r\nexport class SysFarrisFuncOperationComponent implements OnInit,AfterContentInit {\r\n\r\n    /** ä¸å¡å¯¹è±¡,è´è´£ä¼ é */\r\n    @Input() bizObjectId: string;\r\n    /** éæ©æ¨¡å¼ */\r\n    @Input()\r\n    gridSelectMode: 'single' | 'multiple';\r\n    multiSelect = false;\r\n    /** å·²ç»åºå¼ */\r\n    @Input()\r\n    sessionId: string;\r\n    /** æ¯å¦åªæ¾ç¤ºåç» */\r\n    @Input()\r\n    onlyShowGroup = false;\r\n    /** åç»è½å¦è¢«éæ© */\r\n    @Input()\r\n    isGroupCanSelected: boolean;\r\n    /**\r\n     * ç¡®è®¤äºä»¶\r\n     */\r\n    @Output()\r\n    afterConfirm = new EventEmitter<any[]>();\r\n    /**\r\n     * å³é­äºä»¶\r\n     */\r\n    @Output()\r\n    afterCancle = new EventEmitter<any>();\r\n    // æ³¨å¥å°å¸®å©çç¡®è®¤ååæ¶æé®\r\n    @ViewChild('btnOkAndCancle')\r\n    btnOkAndCancleRef: TemplateRef<any>;\r\n    /**\r\n     * åè½æä½å¨éæ°æ®\r\n     */\r\n    gridDataSrc: any[];\r\n    treeDataSrc: any[];\r\n    /**\r\n     * å½åUIæ¾ç¤ºå¨è½æä½åè¡¨æ°æ®\r\n     */\r\n    gridData: any[];\r\n    treeData: any[];\r\n    /**\r\n     * å½åéä¸­æ°æ®\r\n     */\r\n    curSelected:any[]=[];\r\n    curSelectedKeys: string[] = [];\r\n    gridColumns: any[] = [];\r\n    treeColumns: any[];\r\n    opSearchTxt = null;\r\n    i18nRes: any;\r\n    @ViewChild('operationGrid') operationGrid: DatagridComponent;\r\n    @ViewChild('farrisTreeParent') farrisTreeParent: ElementRef;\r\n    @ViewChild('tt') farrisTt: TreeTableComponent;\r\n    /**\r\n     * çæ§ææ½äºä»¶ï¼éç»ç»ç»TreeTable\r\n     * @param event äºä»¶åæ°\r\n     */\r\n     @HostListener('window:resize', [])\r\n     winResize() {\r\n         this.reSizeTreeTable();\r\n     }\r\n    constructor(\r\n        private funcOpService: SysFuncOperationService,\r\n        private bizObjectService: BizObjectService,\r\n        private localService: SysLocaleService\r\n    ) {\r\n    }\r\n    /** éç»Farris-TreeTableçå¤§å° */\r\n    public reSizeTreeTable (height: number = 0, width: number = 0) {\r\n        if (height === 0) {\r\n            height = this.farrisTreeParent.nativeElement.clientHeight;\r\n        }\r\n        if (width === 0) {\r\n            width = this.farrisTreeParent.nativeElement.clientWidth;\r\n        }\r\n        this.farrisTt.resize({ height, width });\r\n    }\r\n    ngOnInit() {\r\n        this.operationGrid.restService = null;\r\n        this.operationGrid.virtualized = true;\r\n        this.operationGrid.fitColumns = true;\r\n        this.operationGrid.fit = true;\r\n        if (this.localService) {\r\n            this.i18nRes = this.localService.getComponentOpt('help');\r\n        } else {\r\n            this.i18nRes = HELP_LOCALE_ZHCHS;\r\n        }\r\n        // åªæ¾ç¤ºåç»ï¼åè½èåä½¿ç¨\r\n        if (this.onlyShowGroup) {\r\n            this.gridColumns = [\r\n                { field: 'code', title: this.i18nRes.codeField, width: 120 },\r\n                { field: 'name', title: this.i18nRes.nameField, width: 150 }\r\n            ];\r\n            // ç§ææ¹æ³ï¼æ´æ°å\r\n            // this.operationGrid['columnsChanged']();\r\n        } else {\r\n            this.gridColumns = [\r\n                { field: 'code', title: this.i18nRes.codeField, width: 120 },\r\n                { field: 'name', title: this.i18nRes.nameField, width: 150 },\r\n                { field: 'parentId', title: this.i18nRes.opGroupField, formatter: this.funcGroupFormatter }\r\n            ];\r\n        }\r\n        this.treeColumns = [\r\n            { field: 'name', title: this.i18nRes.busTitle, width: 100 }\r\n        ];\r\n        // å¤é\r\n        if (this.gridSelectMode === 'multiple') {\r\n            this.multiSelect = true;\r\n        }\r\n        this.loadData();\r\n    }\r\n\r\n    /** é¡µé¢æ¸²æå®æå */\r\n    ngAfterContentInit (): void {\r\n        this.reSizeTreeTable();\r\n    }\r\n    \r\n    /**\r\n     * å è½½æ°æ®,TODO å è½½æ°æ®\r\n     */\r\n    loadData () {\r\n        // å è½½ä¸å¡å¯¹è±¡æ°æ®\r\n        this.bizObjectService.getBizObjects().subscribe((result: any) => {\r\n            this.treeDataSrc = result;\r\n            this.treeData = this.makeTree(result);\r\n        });\r\n        // å è½½åè½æä½æ°æ®\r\n        this.funcOpService.getFuncOperations().subscribe(lists => {\r\n            // åªæ¾ç¤ºåç»\r\n            if (this.onlyShowGroup) {\r\n                this.gridDataSrc = lists.filter(item => item.type == 0);\r\n            } else {\r\n                this.gridDataSrc = lists;\r\n            }\r\n            // ä¸å®è¦å»¶è¿ä¸æ®µæ¶é´\r\n            this.freshGridAndSelect(this.gridDataSrc.concat());\r\n        },\r\n            error => {\r\n                console.log('è·ååè½æä½å¯¹è±¡åè¡¨å¤±è´¥');\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * å·æ°åè¡¨æ¾ç¤º\r\n     */\r\n    private freshGridAndSelect (list: any[]) {\r\n        this.operationGrid.clearAll();\r\n        this.operationGrid.loadData(list);\r\n        list.forEach(item => {\r\n            if(this.curSelectedKeys.indexOf(item.id)>-1){\r\n                this.operationGrid.checkRow(item.id,false);\r\n                if(this.curSelected.indexOf(item)===-1){\r\n                    this.curSelected.push(item);\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * æé æ \r\n     */\r\n    private makeTree (data: any[]): TreeNode[] {\r\n        const root = data.filter(t => t.layer === 1).map(t => {\r\n            return {\r\n                data: t,\r\n                children: [],\r\n                expanded: false,\r\n                selectable: true\r\n            };\r\n        });\r\n        root.forEach(e => {\r\n            // æé ä¸çº§ï¼childrenï¼ç¶çº§çidä¿¡æ¯\r\n            e.children = this.makeChildrenByParentId(data, e.data.id);\r\n        });\r\n        // é»è®¤å±å¼ç¬¬ä¸ä¸ªèç¹\r\n        root[0].expanded = true;\r\n        return root;\r\n    }\r\n\r\n    /**\r\n     * ç¶èç¹æé æ \r\n     */\r\n    private makeChildrenByParentId (datas: any[], parentId: string): any[] {\r\n        const x = datas.filter(c => c.parentID === parentId).map(d => {\r\n            return {\r\n                data: d,\r\n                children: this.makeChildrenByParentId(datas, d.id),\r\n                expanded: false,\r\n                selectable: true\r\n            };\r\n        });\r\n        return x;\r\n    }\r\n    /**\r\n     * æç´¢æ¶çæµåè½¦\r\n     */\r\n    onKeyUp (arg: any) {\r\n        if (arg && arg.which === 13) {\r\n            this.searchData();\r\n        }\r\n    }\r\n    /**\r\n     * æç´¢\r\n     */\r\n    searchData () {\r\n        // æµè¯\r\n        if (!this.opSearchTxt) {\r\n            // å¨éçæ°æ®\r\n            this.gridData = this.gridDataSrc;\r\n            this.freshGridAndSelect(this.gridData);\r\n            return;\r\n        }\r\n        const content = this.opSearchTxt.trim();\r\n        if (!content) {\r\n            // å¨éçæ°æ®\r\n            this.gridData = this.gridDataSrc;\r\n            this.freshGridAndSelect(this.gridData);\r\n            return;\r\n        }\r\n        const filter = content.toLowerCase();\r\n        // å¦æåªæ¾ç¤ºåç»\r\n        if (this.onlyShowGroup) {\r\n            this.gridData = this.gridDataSrc.filter(item =>\r\n                item.code.toLowerCase().includes(filter) ||\r\n                item.name.toLowerCase().includes(filter));\r\n        } else {\r\n            // éè¦æ¾ç¤ºæä½çæ¶åï¼æç´¢å°ä¸çº§æ¶\r\n            this.gridData = this.gridDataSrc.filter(item =>\r\n                item.code.toLowerCase().includes(filter) ||\r\n                item.name.toLowerCase().includes(filter) ||\r\n                this.getFuncGroup(item).toLowerCase().includes(filter));\r\n        }\r\n        this.freshGridAndSelect(this.gridData);\r\n    }\r\n\r\n    /**\r\n     * æ ¼å¼å\r\n     */\r\n    funcGroupFormatter = (val, data) => {\r\n        return this.getFuncGroup(data);\r\n    }\r\n\r\n    /**\r\n     * è·ååè½åç»\r\n     */\r\n    getFuncGroup (funcOpObj: any): string {\r\n        // è·åç¶èç¹\r\n        const parentId = funcOpObj.parentId;\r\n        if (parentId) {\r\n            const parentObj = this.gridDataSrc.filter(item => item.id === parentId);\r\n            if (parentObj !== null && parentObj.length > 0) {\r\n                return parentObj[0].name;\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ä¸å¡å¯¹è±¡ååå\r\n     * @param arg ä¸å¡å¯¹è±¡åæ°\r\n     */\r\n    bizObjectChanged (arg: any) {\r\n        if (!this.gridDataSrc || this.gridDataSrc.length === 0) {\r\n            return;\r\n        }\r\n        const busId = arg.node.data.id;\r\n        // æ ¹æ®ä¸å¡å¯¹è±¡è¿æ»¤\r\n        const lists = this.gridDataSrc.filter(item =>\r\n            item.businessId === busId);\r\n        this.freshGridAndSelect(lists);\r\n    }\r\n    /**\r\n     * è·åéä¸­æ°æ®\r\n     */\r\n    getSelectedObject(): any[] {\r\n        const rows = this.operationGrid.checkeds.map(item => item.data);\r\n        return rows;\r\n    }\r\n    /**\r\n     * éä¸­å\r\n     */\r\n    checked(row) {\r\n        console.log(row);\r\n        if (row && row.id) {\r\n            // æ¯å¦å¤é\r\n            if (this.multiSelect) {\r\n                if(this.curSelectedKeys.indexOf(row.id)<0){\r\n                    this.curSelected.push(row.data);\r\n                    this.curSelectedKeys.push(row.id);\r\n                }\r\n\r\n            } else {\r\n                this.curSelected=[row.data];\r\n                this.curSelectedKeys = [row.id];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * åæ¶éä¸­åè¡¨\r\n     */\r\n    unchecked(row) {\r\n        console.log(row);\r\n        if (row && row.id) {\r\n            if (this.multiSelect) {\r\n                const x = this.curSelectedKeys.findIndex(item => item === row.id);\r\n                if (x >= 0) {\r\n                    this.curSelectedKeys.splice(x, 1);\r\n                    this.curSelected.splice(x, 1)\r\n                }\r\n            } else {\r\n                this.curSelectedKeys = [];\r\n                this.curSelected = [];\r\n\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * ç¡®è®¤\r\n     */\r\n    confirm () {\r\n        // const result = this.getSelectedObject();\r\n        const result = this.curSelected;\r\n        console.log(result);\r\n        this.afterConfirm.next(result);\r\n        // åæ¶-ç®çæ¯å¨è¿éè®©æ¨¡ææ¡æ¶å¤±\r\n        this.cancle();\r\n    }\r\n    /**\r\n     * åæ¶\r\n     */\r\n    cancle () {\r\n        this.afterCancle.next();\r\n    }\r\n}\r\n\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    EventEmitter,\r\n    Input,\r\n    ComponentRef,\r\n    Output,\r\n    Injector,\r\n    ComponentFactoryResolver\r\n} from '@angular/core';\r\nimport { SysFuncOperationComponent } from '../sys-func-operation/sys-func-operation.component';\r\nimport { SysFrontUtil } from '../../sys-common/sys-front.util';\r\nimport { BsModalRef, BsModalService } from '@farris/ui-modal';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { SysFarrisFuncOperationComponent } from '../sys-farris-func-operation/sys-farris-func-operation.component';\r\nimport { SysLocaleService } from '../../locale/sys-locale.service';\r\nimport { HELP_LOCALE_ZHCHS } from '../../locale/locales/zh-cn/help';\r\n\r\n@Component({\r\n    selector: 'app-sys-func-op-help',\r\n    templateUrl: './sys-func-op-help.component.html',\r\n    styleUrls: ['./sys-func-op-help.component.css']\r\n})\r\nexport class SysFuncOpHelpComponent implements OnInit {\r\n\r\n    /** æå±çä¸å¡å¯¹è±¡åç  */\r\n    @Input() bizObjectId: string;\r\n\r\n    /** æ¯å¦å¯ç¨æ°UI,å¯ç¨åæ§è½æå */\r\n    @Input() useNewUI = false;\r\n    /**\r\n     * åå§éä¸­çæéå¯¹è±¡åç \r\n     */\r\n    @Input()\r\n    initSelectKeys: string[] = [];\r\n    /** æ¯å¦åªæ¾ç¤ºåç» */\r\n    @Input()\r\n    onlyShowGroup = false;\r\n\r\n    @Input()\r\n    gridSelectMode: 'single' | 'multiple';\r\n\r\n    /** åç»è½å¦è¢«éæ© */\r\n    @Input()\r\n    isGroupCanSelected: boolean;\r\n    /**\r\n     * è¾åºäºä»¶\r\n     */\r\n    @Output()\r\n    afterHelpConfirm = new EventEmitter<object[]>();\r\n    // å¸®å©ä¸å¨æåå»ºçæ¾ç¤ºæ¨¡æ¿\r\n    private funcOpComp: ComponentRef<SysFuncOperationComponent>;\r\n    // æ¨¡ææ¡æå¡\r\n    private funcOpDialog: BsModalRef;\r\n    i18nRes: any;\r\n    constructor (\r\n        private modalService: BsModalService,\r\n        private injector: Injector,\r\n        private cfr: ComponentFactoryResolver,\r\n        private sysUtil: SysFrontUtil,\r\n        private localService: SysLocaleService\r\n    ) {\r\n        if (this.localService) {\r\n            this.i18nRes = this.localService.getComponentOpt('help');\r\n        } else {\r\n            this.i18nRes = HELP_LOCALE_ZHCHS;\r\n        }\r\n    }\r\n\r\n    ngOnInit () {\r\n    }\r\n\r\n    /**\r\n     * æ°UI\r\n     */\r\n    showNewHelp (sessionId) {\r\n        // è°ç¨å¸®å©æ¶å¿é¡»ä¼ ésessionId\r\n        this.sysUtil.sessionId = sessionId;\r\n        const compFactory = this.cfr.resolveComponentFactory(SysFarrisFuncOperationComponent);\r\n        const funcOpCompNew: ComponentRef<SysFarrisFuncOperationComponent> = compFactory.create(this.injector);\r\n        // è·ååè½æä½çå®ä¾ç»ä»¶\r\n        if (this.initSelectKeys != null && this.initSelectKeys.length > 0) {\r\n            this.initSelectKeys.forEach(key => funcOpCompNew.instance.curSelectedKeys.push(key));\r\n        }\r\n        // åå§åéæ©çä¸å¡æä½\r\n        if (this.bizObjectId && this.bizObjectId !== '') {\r\n            funcOpCompNew.instance.bizObjectId = this.bizObjectId;\r\n        }\r\n        if (this.gridSelectMode) {\r\n            funcOpCompNew.instance.gridSelectMode = this.gridSelectMode;\r\n        }\r\n        funcOpCompNew.instance.onlyShowGroup = this.onlyShowGroup;\r\n        funcOpCompNew.instance.isGroupCanSelected = this.isGroupCanSelected;\r\n        const modalConfig = {\r\n            title: this.i18nRes.operationTitle,\r\n            width: 850,\r\n            height: 550,\r\n            buttons: funcOpCompNew.instance.btnOkAndCancleRef,\r\n            showButtons: true,\r\n            showMaxButton: true,\r\n            resizable: true\r\n        };\r\n        // å¼¹åºå¸®å©æ¡\r\n        this.funcOpDialog = this.modalService.show(funcOpCompNew, modalConfig);\r\n        // åæ¶å\r\n        funcOpCompNew.instance.afterCancle.subscribe(\r\n            res => {\r\n                // æ¶å¤±æ¨¡ææ¡\r\n                this.funcOpDialog.close();\r\n            }\r\n        );\r\n        // ç¡®è®¤å\r\n        funcOpCompNew.instance.afterConfirm.subscribe(res => {\r\n            this.afterHelpConfirm.next(res);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * å¼¹åºFarrisæ¨¡ææ¡å¸®å©\r\n     */\r\n    showHelp (sessionId: string) {\r\n        if (this.useNewUI) {\r\n            this.showNewHelp(sessionId);\r\n            return;\r\n        }\r\n        // è°ç¨å¸®å©æ¶å¿é¡»ä¼ ésessionId\r\n        this.sysUtil.sessionId = sessionId;\r\n        const compFactory = this.cfr.resolveComponentFactory(SysFuncOperationComponent);\r\n        this.funcOpComp = compFactory.create(this.injector);\r\n        // è·ååè½æä½çå®ä¾ç»ä»¶\r\n        if (this.initSelectKeys != null && this.initSelectKeys.length > 0) {\r\n            this.initSelectKeys\r\n                .forEach(key => this.funcOpComp.instance.curSelectedKeys.push(key));\r\n        }\r\n        // åå§åéæ©çä¸å¡æä½\r\n        if (this.bizObjectId && this.bizObjectId !== '') {\r\n            this.funcOpComp.instance.bizObjectId = this.bizObjectId;\r\n        }\r\n        if (this.gridSelectMode) {\r\n            this.funcOpComp.instance.gridSelectMode = this.gridSelectMode;\r\n        }\r\n        this.funcOpComp.instance.onlyShowGroup = this.onlyShowGroup;\r\n        this.funcOpComp.instance.isGroupCanSelected = this.isGroupCanSelected;\r\n        // æ§çæ¬çéè¦å¨è¿éloaddata\r\n        this.funcOpComp.instance.loadData();\r\n        const modalConfig = {\r\n            title: 'åè½æä½å¸®å©',\r\n            width: 800,\r\n            height: 550,\r\n            buttons: this.funcOpComp.instance.btnOkAndCancleRef,\r\n            showButtons: true,\r\n            showMaxButton: false,\r\n            resizable: false\r\n        };\r\n        // å¼¹åºå¸®å©æ¡\r\n        this.funcOpDialog = this.modalService.show(this.funcOpComp, modalConfig);\r\n        // åæ¶å\r\n        this.funcOpComp.instance.afterCancle.subscribe(\r\n            res => {\r\n                // æ¶å¤±æ¨¡ææ¡\r\n                this.funcOpDialog.close();\r\n            }\r\n        );\r\n        // ç¡®è®¤å\r\n        this.funcOpComp.instance.afterConfirm.subscribe(res => {\r\n            this.afterHelpConfirm.next(res);\r\n        });\r\n    }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { BizObjectService } from '../service/biz-object.service';\r\n\r\n@Component({\r\n    selector: 'app-biz-object',\r\n    templateUrl: './biz-object.component.html',\r\n    styleUrls: ['./biz-object.component.css']\r\n})\r\nexport class BizObjectComponent implements OnInit {\r\n\r\n    @Input() bizObjectId: string;\r\n    public data: any[];\r\n    public selectKeys: string[] = [];\r\n    currentid: string;\r\n    /** ä¸å¡å¯¹è±¡ååå */\r\n    @Output()\r\n    bizObjectChanged: EventEmitter<string> = new EventEmitter<string>();\r\n    /** æ æ§ä»¶å±å¼çèç¹å¼ */\r\n    expandedKeys = [];\r\n\r\n    constructor (private bizObjectService: BizObjectService) {\r\n    }\r\n\r\n    ngOnInit () {\r\n        this.bizObjectService.getBizObjects().subscribe((result: any) => {\r\n            result.forEach(element => {\r\n                if (!element.parentID) {\r\n                    element.parentID = undefined;\r\n                    // å±å¼ç¬¬ä¸çº§\r\n                    if (element.layer === 1) {\r\n                        this.expandedKeys.push(element.id);\r\n                    }\r\n                }\r\n            });\r\n            this.data = result;\r\n            // é»è®¤ä¸å¡å¯¹è±¡çå¤ç\r\n            if (this.bizObjectId && this.bizObjectId !== '') {\r\n                // æ ç¦ç¹è¡\r\n                let curBizObjectId = this.bizObjectId;\r\n                while (curBizObjectId) {\r\n                    this.expandedKeys.push(curBizObjectId);\r\n                    // æ¾å°å½åèç¹çç¶èç¹\r\n                    curBizObjectId = this.data.find(item => item.id === curBizObjectId).parentID;\r\n                }\r\n                // å³ä¾§æä½åå\r\n                this.selectKeys = [this.bizObjectId];\r\n                setTimeout(() => {\r\n                    this.bizObjectChanged.emit(this.bizObjectId);\r\n                }, 80);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /** éä¸­è¡æ¹ååè§¦åäºä»¶ */\r\n    selectChange (args: any) {\r\n        const curBusId = args.dataItem.id;\r\n        // é¦æ¬¡è§¦å\r\n        if (this.selectKeys == null || this.selectKeys.length === 0) {\r\n            this.bizObjectChanged.emit(curBusId);\r\n        } else {\r\n            // è¿ä¸ªäºä»¶éè¿ä¸ä¼å¯¹selectedkeysæ°ç»èµå¼ï¼æ¯ä¸ä¸ä¸ªç¶æç\r\n            const lastBusId = this.selectKeys[0];\r\n            // ååçæåµä¸è§¦å\r\n            if (lastBusId !== curBusId) {\r\n                this.bizObjectChanged.emit(curBusId);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SysFuncOperationComponent } from './sys-func-operation/sys-func-operation.component';\r\nimport { SysFuncOpHelpComponent } from './sys-func-op-help/sys-func-op-help.component';\r\nimport { BizObjectComponent } from './biz-object/biz-object.component';\r\nimport { BizObjectService } from './service/biz-object.service';\r\nimport { SysFuncOperationService } from './service/sys-func-operation.service';\r\nimport { SysFrontUtil } from '../sys-common/sys-front.util';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { DatagridModule } from '@farris/ui-datagrid';\r\nimport { TreeTableModule } from '@farris/ui-treetable';\r\nimport { LayoutModule } from '@farris/ui-layout';\r\nimport { SysFarrisFuncOperationComponent } from './sys-farris-func-operation/sys-farris-func-operation.component';\r\nimport { TreeViewModule } from '@progress/kendo-angular-treeview';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { LayoutModule as KendoLayoutModule } from '@progress/kendo-angular-layout';\r\nimport { SysLocaleService } from '../locale/sys-locale.service';\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        DatagridModule,\r\n        TreeTableModule,\r\n        LayoutModule,\r\n        TreeViewModule,\r\n        KendoLayoutModule,\r\n        LayoutModule,\r\n        GridModule,\r\n        ModalModule.forRoot(),\r\n        MessagerModule.forRoot()\r\n    ],\r\n\r\n    declarations: [\r\n        SysFuncOperationComponent,\r\n        SysFuncOpHelpComponent,\r\n        BizObjectComponent,\r\n        SysFarrisFuncOperationComponent\r\n    ],\r\n    providers: [\r\n        SysFrontUtil,\r\n        SysLocaleService,\r\n        SysFuncOperationService,\r\n        BizObjectService\r\n    ],\r\n    entryComponents: [\r\n        SysFuncOperationComponent,\r\n        SysFarrisFuncOperationComponent\r\n    ],\r\n    exports: [\r\n        SysFuncOperationComponent,\r\n        SysFuncOpHelpComponent,\r\n        BizObjectComponent,\r\n        SysFarrisFuncOperationComponent\r\n    ]\r\n})\r\nexport class SysFuncOpHelpModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, from } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SysCommonUtilService, SysDataUtil } from '@gsp-sys/sysmgr-common';\r\nimport { map } from 'rxjs/operators';\r\nimport { GspUserFilter } from '../filter/gsp-user-filter';\r\nimport { GspPositionFilter } from '../filter/gsp-position-filter';\r\nimport { GspRoleFilter } from '../filter/gsp-role-filter';\r\nimport { TreeFilter } from '../filter/tree-filter';\r\n\r\n@Injectable()\r\nexport class SysHelpService {\r\n\r\n    constructor (\r\n        private http: HttpClient,\r\n        private sysUtil: SysCommonUtilService\r\n    ) {\r\n    }\r\n\r\n    private getHttpOption (filter: any): { headers: any, params: any } {\r\n        SysDataUtil.deleteEmpty(filter);\r\n        const paramStr = JSON.stringify(filter);\r\n        const opt = {\r\n            headers: this.sysUtil.getHeader()['headers'],\r\n            params: { param: paramStr }\r\n        };\r\n        return opt;\r\n    }\r\n\r\n    getUsers (filter: GspUserFilter): Observable<any> {\r\n        const opt = this.getHttpOption(filter);\r\n        // ç¨æ·ç®åçæåé¡µä¿¡æ¯\r\n        return this.http.get(this.sysUtil.userWebApi, opt).pipe(map((val: any) => {\r\n            return val.data;\r\n        }));\r\n    }\r\n\r\n    getPositions (filter: GspPositionFilter): Observable<any> {\r\n        const opt = this.getHttpOption(filter);\r\n        return this.http.get(this.sysUtil.positionWebApi, opt).pipe(map((val: any) => {\r\n            return val.data;\r\n        }));\r\n    }\r\n    getRoles (filter: GspRoleFilter): Observable<any> {\r\n        const opt = this.getHttpOption(filter);\r\n        return this.http.get(this.sysUtil.roleWebApi, opt).pipe(map((val: any) => {\r\n            return val.data;\r\n        }));\r\n    }\r\n    getOrgs (filter: TreeFilter): Observable<any> {\r\n        const opt = this.getHttpOption(filter);\r\n        // è§å¾\r\n        opt.params.useView = true;\r\n        return this.handerTreeData(this.http.get(this.sysUtil.sysOrgWebApi + '/all', opt));\r\n    }\r\n    getUserGroups (filter: TreeFilter): Observable<any> {\r\n        const opt = this.getHttpOption(filter);\r\n        return this.handerTreeData(this.http.get(this.sysUtil.userGroupWebApi + '/all', opt));\r\n    }\r\n    getPositionGroups (filter: TreeFilter): Observable<any> {\r\n        const opt = this.getHttpOption(filter);\r\n        return this.handerTreeData(this.http.get(this.sysUtil.posGroupWebApi + '/all', opt));\r\n    }\r\n    getRoleGroups (filter: TreeFilter): Observable<any> {\r\n        const opt = this.getHttpOption(filter);\r\n        return this.handerTreeData(this.http.get(this.sysUtil.roleGroupWebApi + '/all', opt));\r\n    }\r\n\r\n    convert2Json(item: any): any {\r\n        const result: any = {\r\n            id: item.id,\r\n            code: item.code,\r\n            name: item.name,\r\n            parentId: item.parentId || '',\r\n            path: item.path,\r\n            layer: item.layer,\r\n            isDetail: item.isDetail,\r\n\r\n        };\r\n        if (item.nodeType != null && item.nodeType !== undefined) {\r\n            result.nodeType = item.nodeType;\r\n        }\r\n        return result;\r\n    }\r\n    getParentOrg (org: any): Observable<any> {\r\n        const paramStr = JSON.stringify(this.convert2Json(org));\r\n\r\n        const opt = {\r\n            headers: this.sysUtil.getHeader()['headers'],\r\n            params: { param: paramStr }\r\n        };\r\n        return this.http.get(this.sysUtil.sysOrgWebApi+'/getparentorg/0002', opt).pipe(map((val: any) => {\r\n            return val;\r\n        }));\r\n    }\r\n\r\n    /** ééKendo-treeViewç»æ */\r\n    private handerTreeData (src: Observable<any>): Observable<any> {\r\n        return src.pipe(map((val: any[]) => {\r\n            from(val).subscribe(item => {\r\n                if (item.layer == 1 || item.parentId == null || item.parentId === '') {\r\n                    item.parentId = undefined;\r\n                }\r\n            });\r\n            return val;\r\n        }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class SysExceptionService {\r\n    getErrorInfo(error: any): string {\r\n        return error.Message;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SysCommonUtilService, SysDataUtil } from '@gsp-sys/sysmgr-common';\r\nimport { Observable } from 'rxjs';\r\nimport { TreeFilter } from '../filter/tree-filter';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupService {\r\n\r\nconstructor(\r\n    private http: HttpClient,\r\n    private sysUtil: SysCommonUtilService\r\n) {\r\n}\r\n    private getUrlByGroupType(type: string): string {\r\n        let url = '';\r\n        switch (type) {\r\n            case 'user':\r\n                url = this.sysUtil.userGroupWebApi;\r\n                break;\r\n            case 'position':\r\n                url = this.sysUtil.posGroupWebApi;\r\n                break;\r\n            case 'role':\r\n                url = this.sysUtil.roleGroupWebApi;\r\n                break;\r\n            case 'org':\r\n                url = this.sysUtil.sysOrgWebApi;\r\n                break;\r\n            // é»è®¤ç¨æ·åç»\r\n            default:\r\n                url = this.sysUtil.userGroupWebApi;\r\n                break;\r\n        }\r\n        return url;\r\n     }\r\n    /**\r\n     * æ ¹æ®çº§æ°è·åç»ç»\r\n     * @param layer çº§æ°\r\n     */\r\n    getByLayer(layer: number, type: string, filter: TreeFilter): Observable<any> {\r\n        const url = this.getUrlByGroupType(type);\r\n        if (!filter) {\r\n            filter = {};\r\n        }\r\n        filter.layer = layer;\r\n        filter.parentId = null;\r\n        SysDataUtil.deleteEmpty(filter);\r\n        const opt = {\r\n            headers: this.sysUtil.getHeader().headers,\r\n            params: { param: JSON.stringify(filter) }\r\n        };\r\n        return this.http.get(url, opt);\r\n    }\r\n\r\n    /**\r\n     * æ ¹æ®çº§æ°è·åç»ç»\r\n     * @param parentId ç¶èç¹\r\n     */\r\n    getByParentId(parentId: string, type: string, filter: TreeFilter): Observable<any> {\r\n        const url = this.getUrlByGroupType(type);\r\n        if (!filter) {\r\n            filter = {};\r\n        }\r\n        filter.layer = null;\r\n        filter.parentId = parentId;\r\n        SysDataUtil.deleteEmpty(filter);\r\n        const opt = {\r\n            headers: this.sysUtil.getHeader().headers,\r\n            params: { param: JSON.stringify(filter) }\r\n        };\r\n        return this.http.get(url, opt);\r\n    }\r\n\r\n    /**\r\n     * æ ¹æ®çº§æ°è·åç»ç»\r\n     * @param parentId ç¶èç¹\r\n     */\r\n    searchData( type: string, filter: TreeFilter): Observable<any> {\r\n        const url = this.getUrlByGroupType(type);\r\n        if (!filter) {\r\n            filter = {};\r\n        }\r\n        filter.layer = null;\r\n        filter.parentId = null;\r\n        SysDataUtil.deleteEmpty(filter);\r\n        const opt = {\r\n            headers: this.sysUtil.getHeader().headers,\r\n            params: { param: JSON.stringify(filter) }\r\n        };\r\n        return this.http.get(url, opt);\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild, Input, EventEmitter, Output, HostListener, ElementRef, AfterContentInit } from '@angular/core';\r\nimport { TreeTableComponent, TreeNode } from '@farris/ui-treetable';\r\nimport { from } from 'rxjs';\r\nimport { GroupService } from './group.service';\r\nimport { filter } from 'rxjs/operators';\r\nimport { TreeFilter } from '../filter/tree-filter';\r\nimport { SysLocaleService } from '../../locale/sys-locale.service';\r\nimport { NAVI_LOCALE_ZHCHS } from '../../locale/locales/zh-cn/navigiation';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { NotifyService } from '@farris/ui-notify';\r\n\r\n@Component({\r\n    selector: 'lib-group-nav',\r\n    templateUrl: './group-nav.component.html',\r\n    styleUrls: ['./group-nav.component.css']\r\n})\r\nexport class GroupNavComponent implements OnInit, AfterContentInit {\r\n\r\n    @ViewChild('farrisTreeParent') farrisTreeParent: ElementRef;\r\n    @ViewChild('farrisTt') farrisTt: TreeTableComponent;\r\n    @Input() title: string;\r\n    @Input() showHeader = true;\r\n    @Input() fixedHeader = true;\r\n    @Input() withCodeColumn = true;\r\n    // æ¯å¦æ·»å æææ ¹èç¹\r\n    @Input() allRoot = false;\r\n    @Input() groupType: 'user' | 'position' | 'role' | 'org';\r\n    // é»è®¤ä¸å¼å¯æ°æ®æéè¿æ»¤\r\n    @Input() filter: TreeFilter;\r\n    @Input() selectKeys: string[] = [];\r\n    @Input() needRemote = true;\r\n    /** æ¾ç¤ºç»ç»ç±»åå */\r\n    @Input() showNodeTypeColumn = false;\r\n    @Input() treeData: TreeNode[];\r\n    @Input() showFilterBar:boolean = false;\r\n    searchFields:any = [{label: \"ç¼å·\",value: \"code\"},{label: \"åç§°\",value: \"name\"}];\r\n    allColumnsTitle='ææå'\r\n    @Output() search: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() selectRowChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    // æ¾ç¤ºå\r\n    cols: any[];\r\n    i18nRes: any;\r\n\r\n    /** æ¥è¯¢åå®¹ */\r\n    searchInfo = '';\r\n    /** ä¸æ¬¡æ¥è¯¢åå®¹ */\r\n    oldSearchInfo = '';\r\n\r\n    field = '';\r\n    /** ä¸æ¬¡æ¥è¯¢åå®¹ */\r\n    oldField = '';\r\n\r\n    //ä¸æ¬¡æç´¢ç»æ\r\n    searchResult = [];\r\n    //ä¸æ¬¡æç´¢çä½ç½®\r\n    searchIndex = 0;\r\n\r\n    /**\r\n     * çæ§ææ½äºä»¶ï¼éç»ç»ç»TreeTable\r\n     * @param event äºä»¶åæ°\r\n     */\r\n    temp = true;\r\n\r\n    @HostListener('window:resize', [])\r\n    winResize() {\r\n        this.reSizeTreeTable();\r\n    }\r\n    constructor(\r\n        public groupService: GroupService,\r\n        public localService: SysLocaleService,\r\n        private notifyService: NotifyService,\r\n        public msg: MessagerService,\r\n\r\n    ) {\r\n    }\r\n\r\n\r\n    /** éç»Farris-TreeTableçå¤§å° */\r\n    public reSizeTreeTable (height: number = 0, width: number = 0) {\r\n        if (height === 0) {\r\n            height = this.farrisTreeParent.nativeElement.clientHeight;\r\n        }\r\n        if (width === 0) {\r\n            width = this.farrisTreeParent.nativeElement.clientWidth;\r\n        }\r\n        this.farrisTt.resize({ height, width });\r\n    }\r\n\r\n    ngOnInit () {\r\n        if (this.localService) {\r\n            this.i18nRes = this.localService.getComponentOpt('navi');\r\n        } else {\r\n            this.i18nRes = NAVI_LOCALE_ZHCHS;\r\n        }\r\n        this.searchFields = [{label: this.i18nRes.codeField,value: \"code\"},{label: this.i18nRes.nameField,value: \"name\"}];\r\n        this.allColumnsTitle=this.i18nRes.allColumnsTitle;\r\n\r\n        // å¯ç¨ç¼å·å\r\n        if (this.withCodeColumn) {\r\n            this.fixedHeader = true;\r\n            this.showHeader = true;\r\n            this.cols = [\r\n                { field: 'code', title: this.i18nRes.codeField, width: 100 },\r\n                { field: 'name', title: this.i18nRes.nameField, width: 100 }\r\n            ];\r\n        } else {\r\n            this.fixedHeader = false;\r\n            this.showHeader = false;\r\n            this.cols = [\r\n                { field: 'name', title: this.i18nRes.nameField, width: 100 }\r\n            ];\r\n\r\n        }\r\n        // éè¦è·åæ°æ®ï¼å¦åç´æ¥æ ¹æ®treeDataåå§æ°æ®\r\n        if (this.needRemote) {\r\n            // æææ è¯\r\n            if (this.allRoot) {\r\n                this.treeData = [];\r\n                const rootNode: TreeNode = {};\r\n                rootNode.children = [];\r\n                rootNode.data = {\r\n                    id: 'all',\r\n                    code: this.i18nRes.rootNodeCode,\r\n                    name: this.i18nRes.rootNodeTitle\r\n                };\r\n                rootNode.expanded = true;\r\n                rootNode.leaf = false;\r\n                rootNode.selectable = true;\r\n                this.treeData.push(rootNode);\r\n            } else {\r\n                this.treeData = [];\r\n            }\r\n\r\n            this.groupService.getByLayer(1, this.groupType, this.filter).subscribe(val => {\r\n                this.initTreeNodeList(val);\r\n            });\r\n        } else { // ä¸éè¦ä»æå¡å¨ç«¯è·å\r\n            this.farrisTt.updateSerializedValue();\r\n        }\r\n\r\n        // å¼æ­¥å è½½ï¼éè¿childrenä¸º0æ¥å¤æ­ä»æªå±å¼è¿èç¹\r\n        this.farrisTt.expand.pipe(filter((node: TreeNode) => node.children.length === 0)).subscribe((node: TreeNode) => {\r\n            node['showLoading'] = true;\r\n            const id = node.data.id;\r\n            // è·åç³»ç»ç»ç»\r\n            this.groupService.getByParentId(id, this.groupType, this.filter).subscribe((list: any[]) => {\r\n                node['showLoading'] = false;\r\n                const childNode: TreeNode[] = [];\r\n                // è½¬æ¢ä¸çº§ç»ç»\r\n                from(list).subscribe(item => {\r\n                    childNode.push(this.convertToTreeNode(item));\r\n                });\r\n                // é²æ­¢åºç°ä¸çº§èç¹æ²¡ææ°æ®\r\n                if (childNode.length > 0) {\r\n                    this.farrisTt.appendChildren(childNode, node);\r\n                } else {// åºè¯¥æ¯æ ä¸çº§æéæèµ°è¿é\r\n                    node.leaf = true;\r\n                    this.farrisTt.updateSerializedValue();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * å·æ°å½åé¡µé¢ä¿¡æ¯\r\n     */\r\n    refreshThisNav(){\r\n        this.treeData=[];\r\n        const rootNode: TreeNode = {};\r\n        rootNode.children = [];\r\n        rootNode.data = {\r\n            id: 'all',\r\n            code: this.i18nRes.rootNodeCode,\r\n            name: this.i18nRes.rootNodeTitle\r\n        };\r\n        rootNode.expanded = true;\r\n        rootNode.leaf = false;\r\n        rootNode.selectable = true;\r\n        this.treeData.push(rootNode);\r\n        this.groupService.getByLayer(1, this.groupType, this.filter).subscribe(val => {\r\n            this.initTreeNodeList(val);\r\n        });\r\n    }\r\n\r\n    /** é¡µé¢æ¸²æå®æå */\r\n    ngAfterContentInit (): void {\r\n        this.reSizeTreeTable();\r\n    }\r\n\r\n    /** æç´¢ï¼ æ­¤å¤æ¯åå±å è½½ï¼æç´¢æ¶éè¦æ ¹æ®åæ°æ®è¿è¡æç´¢ï¼æç´¢åï¼éè¦å°å¯¹åºç¶èç¹å±ç¤º \r\n     *   @param args  æ ¼å¼ searchData = { field: '*', value: '' };\r\n     */\r\n     searchData(args: any) {\r\n        this.search.next(args);\r\n        if (!this.filter) {\r\n            this.filter = {};\r\n        }\r\n        if(!args){\r\n            return;\r\n        }\r\n        this.searchInfo = args.value;\r\n        this.field = args.field;\r\n\r\n        // æç´¢åå®¹ä¸ºç©º\r\n        if (!this.searchInfo || this.searchInfo.length <= 0 ) {\r\n            this.clearSearchValue();\r\n            return;\r\n        }\r\n        \r\n        // æç´¢åå®¹ä¸ä¸æ¬¡ä¸åï¼éæ°æç´¢\r\n        if (this.oldSearchInfo !== this.searchInfo || this.oldField !== this.field) {\r\n            this.filter.isSearchTree = true;\r\n            if(this.field === '*'){\r\n                this.filter.codeOrName = this.searchInfo;\r\n                this.filter.code = '';\r\n                this.filter.name = '';\r\n                    \r\n            }else if(this.field === 'code'){\r\n                this.filter.code = this.searchInfo;\r\n                this.filter.name = '';\r\n                this.filter.codeOrName = '';\r\n\r\n            }else if(this.field === 'name'){\r\n                this.filter.name = this.searchInfo;\r\n                this.filter.code = '';\r\n                this.filter.codeOrName = '';\r\n\r\n            }\r\n\r\n            this.groupService.searchData( this.groupType, this.filter).subscribe(list => {\r\n                this.treeData = [];\r\n                this.searchResult = [];\r\n                this.searchIndex = 0;\r\n\r\n                if (list && list.length > 0) {\r\n                    this.treeData = this.makeTree(list);\r\n                    list.forEach(item=>{\r\n                        if(item.search_data){\r\n                            this.searchResult.push(item.id);\r\n                        }\r\n                    })\r\n                    // æå¨æ´æ°TreeTableçå¼\r\n                    this.farrisTt.updateSerializedValue();\r\n                    setTimeout(()=>{\r\n                        this.farrisTt.selectNode(this.searchResult[0]);\r\n                        this.farrisTt.collapseAll();\r\n                        this.expandParent(this.searchResult[0]);\r\n                        this.farrisTt.scrollToCurrentNode();\r\n                    })\r\n\r\n                }else{\r\n                    // æå¨æ´æ°TreeTableçå¼\r\n                    this.farrisTt.updateSerializedValue();\r\n                    this.notifyService.info(this.i18nRes.searchNullData);\r\n                }\r\n\r\n            });\r\n\r\n        }else{\r\n            if(this.searchResult && this.searchResult.length > 0){\r\n                this.searchIndex = this.searchIndex + 1;\r\n                // å·²ç»æç´¢å°æåï¼éè¦éå¤´æç´¢\r\n                if ( this.searchIndex === this.searchResult.length) {\r\n                    this.searchIndex = 0;\r\n                }\r\n    \r\n                setTimeout(()=>{\r\n                    this.farrisTt.selectNode(this.searchResult[this.searchIndex]);\r\n                    this.farrisTt.collapseAll();\r\n                    this.expandParent(this.searchResult[this.searchIndex]);\r\n                    this.farrisTt.scrollToCurrentNode();\r\n                })\r\n            }else{\r\n                this.notifyService.info(this.i18nRes.searchNullData);\r\n\r\n            }\r\n\r\n        }\r\n        this.oldSearchInfo = this.searchInfo;\r\n        this.oldField = this.field;\r\n\r\n    }\r\n\r\n    clearSearchValue(){\r\n        //ç¹å»æ¸é¤æ¶ï¼é²æ­¢äºä»¶æ§è¡ä¸¤æ¬¡\r\n        if(!this.temp){\r\n            return;\r\n        }\r\n        this.temp = false;\r\n\r\n        // æææ è¯\r\n        if (this.allRoot) {\r\n            this.treeData = [];\r\n            const rootNode: TreeNode = {};\r\n            rootNode.children = [];\r\n            rootNode.data = {\r\n                id: 'all',\r\n                code: this.i18nRes.rootNodeCode,\r\n                name: this.i18nRes.rootNodeTitle\r\n            };\r\n            rootNode.expanded = true;\r\n            rootNode.leaf = false;\r\n            rootNode.selectable = true;\r\n            this.treeData.push(rootNode);\r\n        } else {\r\n            this.treeData = [];\r\n        }\r\n        this.filter.isSearchTree = false;\r\n        this.filter.codeOrName = null;\r\n        this.filter.code = null;\r\n        this.filter.name = null;\r\n\r\n        this.groupService.getByLayer(1, this.groupType, this.filter).subscribe(val => {\r\n            this.initTreeNodeList(val);\r\n            if(this.treeData.length>0){\r\n                this.farrisTt.selectNode(this.treeData[0].data.id);\r\n\r\n            }\r\n            this.temp = true;\r\n        });\r\n        this.oldSearchInfo = '';\r\n        this.oldField = '';\r\n    }\r\n\r\n    /**\r\n     * æé æ \r\n    */\r\n    private makeTree(data: any[]): TreeNode[] {\r\n        const root = data.filter(t => t.layer === 1).map(t => {\r\n            const node: TreeNode = { \r\n                data: t ,\r\n                children: [],\r\n                expanded: false,\r\n                selectable: t.farris_selectable};\r\n\r\n            if (!t.isDetail) {\r\n                node.leaf = false;\r\n                node.children = [];\r\n            }\r\n            return node;\r\n        });\r\n        root.forEach(e => {\r\n            // æé ä¸çº§ï¼childrenï¼ç¶çº§çidä¿¡æ¯\r\n            e.children = this.makeChildrenByParentId(data, e.data.id);\r\n        });\r\n        return root;\r\n    }\r\n\r\n    /**\r\n     * ç¶èç¹æé æ \r\n     */\r\n    private makeChildrenByParentId(datas: any[], parentId: string): any[] {\r\n        const x = datas.filter(c => c.parentId === parentId).map(d => {\r\n            return {\r\n                data: d,\r\n                children: this.makeChildrenByParentId(datas, d.id),\r\n                expanded: false,\r\n                selectable: d.farris_selectable\r\n            };\r\n        });\r\n        return x;\r\n    }\r\n\r\n\r\n    /**\r\n     * å°ç»ç»å®ä½è½¬æ¢ä¸ºFarris-TreeNode\r\n     */\r\n    private convertToTreeNode (src: any): TreeNode {\r\n        const node: TreeNode = { data: src };\r\n        // éæç»èç¹\r\n        if (!src.isDetail) {\r\n            node.leaf = false;\r\n            node.children = [];\r\n        }\r\n        // TODO: åªæææéçç»ç»æè½è¢«éä¸­,è¿æ¯è¿éä¸åå¤çï¼åéäºä»¶æ¶å»å¤ç\r\n        node.selectable = src.farris_selectable;\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * åå§é¡¶çº§åç»ï¼é»è®¤layer=1çæåµ\r\n     * @param sysOrgList ç³»ç»ç»ç»åè¡¨\r\n     */\r\n    private initTreeNodeList (list: any[]) {\r\n        if (!list || list.length === 0) {\r\n            return;\r\n        }\r\n        from(list).subscribe(firstLayer => {\r\n            const node = this.convertToTreeNode(firstLayer);\r\n            // éæç»ï¼å¸¦å¾ä¸å¤æé ä¸çº§ï¼åè®¾ææ°æ®\r\n            if (node.leaf) {\r\n                const curId = firstLayer.id;\r\n                const childern = list.filter(item => item.parentId === curId);\r\n                from(childern).subscribe(secondLayer => {\r\n                    node.children.push(this.convertToTreeNode(secondLayer));\r\n                });\r\n            }\r\n            // å¦ææ·»å æææ ¹èç¹\r\n            if (this.allRoot) {\r\n                this.treeData[0].children.push(node);\r\n            } else {\r\n                this.treeData.push(node);\r\n            }\r\n        });\r\n        // æå¨æ´æ°TreeTableçå¼\r\n        this.farrisTt.updateSerializedValue();\r\n    }\r\n\r\n    /**\r\n     * éæ©çç»ç»è¡\r\n     * @param arg åæ°\r\n     */\r\n    onNodeSelect (event: any) {\r\n        console.log(event.node.data);\r\n        this.selectRowChanged.next(event.node.data);\r\n    }\r\n\r\n    /**\r\n     * è·åå½åTreeTableçç»å®æ°æ®\r\n     */\r\n    public getTreeData (): TreeNode[] {\r\n        return this.treeData;\r\n    }\r\n\r\n    /**\r\n     * è·åå½åTreeTableçç»ä»¶å®ä¾\r\n     */\r\n    public getTreeTableComp (): TreeTableComponent {\r\n        return this.farrisTt;\r\n    }\r\n    /**\r\n     * éä¸­æä¸ªèç¹\r\n     */\r\n    public selectNode (id: string, isCheck?: boolean) {\r\n        this.farrisTt.selectNode(id, isCheck);\r\n    }\r\n\r\n    /**\r\n     * æ¸é¤ææéä¸­å¼\r\n     */\r\n    public unCheckAllNodes () {\r\n        this.farrisTt.unCheckAllNodes();\r\n    }\r\n\r\n    /**\r\n     * æ¸é¤ææéä¸­å¼\r\n     */\r\n    scrollToCurrentNode(key:any){\r\n        if(key){\r\n            this.farrisTt.selectNode(key);\r\n            this.expandParent(key);\r\n            this.farrisTt.scrollToCurrentNode();\r\n        }\r\n\r\n    } \r\n    \r\n    /** éä¸æ¾å°éè¦å±å¼çç¶èç¹ï¼å¨é¨å±å¼ */\r\n    expandParent(key: string) {\r\n        const parent = this.farrisTt.findRowNode(key);\r\n        let parentNode = parent.parent;\r\n        if (parentNode) {\r\n            while (parentNode) {\r\n                this.farrisTt.expandNode(parentNode.id);\r\n                parentNode = parentNode.parent;\r\n            }\r\n        } else {\r\n            // this.farrisTt.expandNode(key);\r\n        }\r\n    }\r\n}\r\n\r\n","\r\nexport const userHelp = 'user';\r\nexport const posHelp = 'position';\r\nexport const roleHelp = 'role';\r\nexport const userGroupHelp = 'userGroup';\r\nexport const posGroupHelp = 'posGroup';\r\nexport const roleGroupHelp = 'roleGroupHelp';\r\nexport const sysOrgHelp = 'sysOrg';\r\n","import { Observable, of, from } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ILookupHttpService, RemoteParams, LookupGridResult } from '@farris/ui-lookup';\r\nimport { SysCommonUtilService, SysDataUtil } from '@gsp-sys/sysmgr-common';\r\nimport { map } from 'rxjs/operators';\r\nimport { userHelp, posHelp, roleHelp, userGroupHelp, posGroupHelp, roleGroupHelp, sysOrgHelp } from '../help-meta/sys-help-meta';\r\nimport { TreeNode } from '@farris/ui-treetable';\r\nimport { SysLocaleService } from '../../locale/sys-locale.service';\r\nimport { TreeFilter } from '../filter/tree-filter';\r\n\r\n\r\n/**\r\n * å¸®å©æå¡\r\n */\r\n@Injectable()\r\nexport class SysFarrisLookupService implements ILookupHttpService {\r\n\r\n    private filterData: any;\r\n    private i18nRes: any;\r\n    constructor (\r\n        private http: HttpClient,\r\n        private sysUtil: SysCommonUtilService,\r\n        private localService: SysLocaleService\r\n    ) {\r\n    }\r\n\r\n    /** åå§è¿æ»¤æ¡ä»¶ */\r\n    private setFilterData (filter: any) {\r\n        // æè¿æ»¤æ¡ä»¶\r\n        if (filter) {\r\n            const str = JSON.stringify(filter);\r\n            if (str !== '{}') {\r\n                // ä¸å®è¦å¤å¶\r\n                this.filterData = JSON.parse(str);\r\n            } else {\r\n                this.filterData = null;\r\n            }\r\n        } else {\r\n            this.filterData = null;\r\n        }\r\n    }\r\n    /**\r\n     * æ·»å æ°æ®\r\n     */\r\n    private setListData (src: any[], data: any[]) {\r\n        if (src) {\r\n            src.push.apply(src, data);\r\n        }\r\n    }\r\n    /** è·åè¿æ»¤æ°æ® */\r\n    private getFilterData (): any {\r\n        return this.filterData;\r\n    }\r\n    /**\r\n     * å¼æ­¥è·åçæ¬\r\n     */\r\n    getTreeDataAsync(url: string, params?: RemoteParams): Observable<LookupGridResult> {\r\n        this.i18nRes = this.localService.getComponentOpt('help');\r\n        // è§£ææ¥è¯¢jsonå¯¹è±¡\r\n        const treeParam = JSON.parse(params.searchValue);\r\n        let farrisSelectedData = params['customData'].farrisSelectedData;\r\n\r\n        let filter: TreeFilter = {};\r\n        // filter.withPermission = true;\r\n        const category = treeParam.category;\r\n        // 1.é¦æ¬¡å è½½\r\n        if (category === 'all') {\r\n            filter.layer = 1;\r\n        }\r\n        // 2.å¼æ­¥å±å¼ä¸çº§\r\n        if (category === 'children') {\r\n            if (treeParam.hasOwnProperty('parentPath')) {\r\n                filter.path = treeParam.parentPath;\r\n            }\r\n            if (treeParam.hasOwnProperty('parentLayer')) {\r\n                // åç«¯æç´¢ä»¥ä¸çº§èç¹ä¸ºçº§æ°çèç¹\r\n                filter.layer = treeParam.parentLayer + 1;\r\n            }\r\n            if (treeParam.hasOwnProperty('parentId')) {\r\n                filter.parentId = treeParam.parentId;\r\n            }\r\n        }\r\n        // 3.æç´¢\r\n        if (category === 'search') {\r\n            const searchField = treeParam.searchField;\r\n            const searchValue: string = treeParam.searchValue.trim();\r\n            if (searchValue) {\r\n                filter.isSearchTree = true;\r\n                switch (searchField) {\r\n                    case 'code':\r\n                        filter.code = searchValue;\r\n                        break;\r\n                    case 'name':\r\n                        filter.name = searchValue;\r\n                        break;\r\n                    // å¨é¨åæç´¢ï¼ä¹åæ¯'*'\r\n                    case '*':\r\n                    default:\r\n                        filter.codeOrName = searchValue;\r\n                        break;\r\n                }\r\n            } else {\r\n                // æç´¢ä¸ºç©ºï¼éæ°å è½½ï¼é»è®¤ä»1çº§å¼å§\r\n                filter.layer = 1;\r\n            }\r\n        }\r\n\r\n        //å¦ææ¯ç»ç»ï¼è¯·æ±éä¸­æ°æ®æ¶\r\n        if (url === '/api/runtime/sys/v1.0/sysOrgs' && category === 'fav') {\r\n\r\n            let newUrl = url+'/nullorg' \r\n            const newOpt = {\r\n                headers: this.sysUtil.getHeader()['headers'],\r\n                params: { useView : 'true'}\r\n            }\r\n            return this.http.get(newUrl, newOpt).pipe(map((val: any[]) => {\r\n                const gridResult: LookupGridResult = {};\r\n                return gridResult;\r\n            }));\r\n        }\r\n\r\n        // è¯´ææè¿æ»¤æ¡ä»¶\r\n        if (this.getFilterData()) {\r\n            filter = Object.assign(this.getFilterData(), filter);\r\n            SysDataUtil.deleteEmpty(filter);\r\n        }\r\n        const paramStr = JSON.stringify(filter);\r\n        const opt = {\r\n            headers: this.sysUtil.getHeader()['headers'],\r\n            params: { param: paramStr }\r\n        };\r\n        return this.http.get(url, opt).pipe(map((val: any[]) => {\r\n            const gridResult: any = {};\r\n            gridResult.selectedData = farrisSelectedData;\r\n\r\n            gridResult.items = [];\r\n            gridResult.treeInfo = {\r\n                loadDataType: 'async',\r\n                layerType: 'parentId',\r\n                dataField: 'treeInfo',\r\n                pathField: 'path',\r\n                layerField: 'layer',\r\n                parentField: 'parentId',\r\n                isDetailField: 'isDetail'\r\n            };\r\n            gridResult.treeInfo['treeDataIsInit'] = true;\r\n            gridResult.columns = [\r\n                { field: 'code', title: this.i18nRes.codeField },\r\n                { field: 'name', title: this.i18nRes.nameField }];\r\n            gridResult.searchFields = [\r\n                { label: this.i18nRes.codeField, value: 'code' },\r\n                { label: this.i18nRes.nameField, value: 'name' }\r\n            ];\r\n            // å¿é¡»è¦èµå¼\r\n            from(val).subscribe(item => {\r\n                if (item.layer === 1 || !item.parentId) {\r\n                    item.parentId = null;\r\n                }\r\n                item.treeInfo = {\r\n                    parentId: item.parentId,\r\n                    path: item.path,\r\n                    layer: item.layer,\r\n                    isDetail: item.isDetail\r\n                };\r\n            });\r\n            // å¦ææ¯æç´¢çè¯ï¼éè¦èªå·±æé æ \r\n            if (filter.isSearchTree) {\r\n                gridResult.items = this.makeTreeByParent(val, 'parentId', 'id');\r\n                console.log(gridResult.items);\r\n            } else {\r\n                // æç»æï¼æ®éåå±å è½½\r\n                if (val && val.length > 0) {\r\n                    from(val).subscribe(item => {\r\n                        gridResult.items.push(this.convertToTreeNode(item));\r\n                    });\r\n                }\r\n            }\r\n            return gridResult;\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * å°æ èç¹è½¬æ¢ä¸ºFarris TreeNode\r\n     */\r\n    private convertToTreeNode (src: any): TreeNode {\r\n        const node: TreeNode = {};\r\n        node.data = src;\r\n        node.children = [];\r\n        node.selectable = src.farris_selectable;\r\n        node.leaf = src.isDetail;\r\n        node.parent = src.parentId;\r\n        // è¿ä¸æ¡å¿é¡»å¾å ï¼å¦åä¸è¡\r\n        node.id = node.data.id;\r\n        // æç´¢çæ¶åææ«çº§æ·»å äºè¿ä¸ªå±æ§ï¼ä¸éè¦å±å¼\r\n        if (src.hasOwnProperty('expanded')) {\r\n            node.expanded = src.expanded;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /** æç§parentç æé æ  */\r\n    makeTreeByParent (datas: any[], parentField: string, keyField: string): TreeNode[] {\r\n        // ä¸ç´ç²ç©ºï¼æèæ²æä¸ç´ç\r\n        const pathLayerOnes = datas.filter(x => {\r\n            if (!x[parentField]) {\r\n                return true;\r\n            }\r\n            // æ­å±çè¿ç§ï¼åºè¯¥ä¹å±äºä¸çº§\r\n            const p = datas.find(parent => parent[keyField] === x[parentField]);\r\n            if (!p) {\r\n                return true;\r\n            }\r\n        });\r\n        const treedata: TreeNode[] = [];\r\n        pathLayerOnes.forEach(x => {\r\n            const node = this.convertToTreeNode(x);\r\n            treedata.push(node);\r\n        });\r\n        treedata.forEach(item => {\r\n            this.findChildrenByParent(item, datas, parentField, keyField);\r\n        });\r\n        return treedata;\r\n    }\r\n\r\n    /** æ¾å°å­èç¹ */\r\n    findChildrenByParent (parent: TreeNode, datas: any[], parentField: string, keyField: string) {\r\n        const childList = datas.filter(childitem => {\r\n            if (childitem[parentField] === parent.data[keyField]) {\r\n                return true;\r\n            }\r\n        });\r\n        if (childList && childList.length > 0) {\r\n            childList.forEach(child => {\r\n                const node = this.convertToTreeNode(child);\r\n                parent.children.push(node);\r\n                this.findChildrenByParent(node, datas, parentField, keyField);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * å¨é¨è·åçæ¬çæ¬\r\n     */\r\n    getTreeData (url: string, params?: RemoteParams): Observable<LookupGridResult> {\r\n        let filter: any = {};\r\n        // è¯´ææè¿æ»¤æ¡ä»¶\r\n        if (this.getFilterData()) {\r\n            filter = Object.assign(this.getFilterData(), filter);\r\n            SysDataUtil.deleteEmpty(filter);\r\n        }\r\n        const paramStr = JSON.stringify(filter);\r\n        const opt = {\r\n            headers: this.sysUtil.getHeader()['headers'],\r\n            params: { param: paramStr }\r\n        };\r\n        return this.http.get(url, opt).pipe(map((val: any[]) => {\r\n            if (val && val.length > 0) {\r\n                val.forEach(item => {\r\n                    if (item.layer == 1 || item.parentId == null) {\r\n                        item.parentId = '';\r\n                    }\r\n                    // æ»¡è¶³åç«¯ç»æ\r\n                    item.treeInfo = {\r\n                        parentId: item.parentId,\r\n                        path: item.path,\r\n                        layer: item.layer,\r\n                        isDetail: item.isDetail\r\n                    };\r\n                    item.selectable = false;\r\n                });\r\n            } else {\r\n                val = [];\r\n            }\r\n            return { items: val };\r\n        }));\r\n    }\r\n\r\n    /** è·ååè¡¨æ°æ® */\r\n    getGridData (url: string, params?: RemoteParams): Observable<LookupGridResult> {\r\n        let index = params.pageIndex;\r\n        let size = params.pageSize;\r\n        let farrisSelectedData = params['customData'].farrisSelectedData;\r\n\r\n        // ç®åè¿ä¸ªå°æ¹æé®é¢ï¼ç¬¬ä¸æ¬¡çæ¶åä¼ éä¸è¿æ¥\r\n        if (!index) {\r\n            const customData = params['customData'];\r\n            index = customData.filter.pageIndex;\r\n            size = customData.filter.pageSize;\r\n        }\r\n        let param: any = {\r\n            pageIndex: index,\r\n            pageSize: size,\r\n        };\r\n        // æ¯å¦ææç´¢\r\n        const filterStr = params.searchValue;\r\n        const filterObj = JSON.parse(filterStr);\r\n        const searchField = filterObj.searchField;\r\n        const searchValue = filterObj.searchValue;\r\n        // æè¿æ»¤æ¥è¯¢,æå¯è½æç´¢å¼ä¸ºç©ºï¼è¿æ¶åæ¯ä¸éè¦æç´¢ç\r\n        if (searchField && searchValue) {\r\n            switch (searchField) {\r\n                case 'code':\r\n                    param.code = searchValue;\r\n                    break;\r\n                case 'name':\r\n                    param.name = searchValue;\r\n                    break;\r\n                // å¨é¨åæç´¢ï¼ä¹åæ¯'*'\r\n                case '*':\r\n                default:\r\n                    param.codeOrName = searchValue;\r\n                    break;\r\n            }\r\n        }\r\n        // è¯´ææè¿æ»¤æ¡ä»¶\r\n        if (this.getFilterData()) {\r\n            param = Object.assign(this.getFilterData(), param);\r\n            SysDataUtil.deleteEmpty(param);\r\n        }\r\n        console.log(param);\r\n        const paramStr = JSON.stringify(param);\r\n        const opt = {\r\n            headers: this.sysUtil.getHeader()['headers'],\r\n            params: { param: paramStr }\r\n        };\r\n        return this.http.get(url, opt).pipe(map((val: any) => {\r\n            if (val && val.data) {\r\n                // å°æ¬æ¬¡åé¡µçæ°æ®éå å°å½åå¸®å©çåè¡¨ä¸­\r\n                this.setListData(params['customData'].allData, val.data);\r\n            }\r\n            return {\r\n                items: val.data,\r\n                total: val.totalCount,\r\n                pageInfo: {\r\n                    pageIndex: index,\r\n                    pageSize: size,\r\n                    pageList: [20, 40, 60, 80, 100],\r\n                    enablePager: true\r\n                },\r\n                selectedData:farrisSelectedData\r\n            };\r\n        }));\r\n    }\r\n    /** åæ° */\r\n    getData (url: string, params?: RemoteParams): Observable<LookupGridResult> {\r\n        console.log(params);\r\n        console.log(url);\r\n        const filter = params['customData'].filter;\r\n        this.setFilterData(filter);\r\n        const typeIndex = url.indexOf('\\/');\r\n        const httpUrl = url.substring(typeIndex, url.length);\r\n        const helpType = url.substring(0, typeIndex);\r\n        switch (helpType) {\r\n            case userHelp:\r\n            case posHelp:\r\n            case roleHelp:\r\n                return this.getGridData(httpUrl, params);\r\n            case userGroupHelp:\r\n            case posGroupHelp:\r\n            case roleGroupHelp:\r\n            case sysOrgHelp:\r\n                return this.getTreeDataAsync(httpUrl, params);\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import { forEach } from '@angular/router/src/utils/collection';\r\nimport { Component, OnInit, Input, Output, EventEmitter, ViewChild, Optional } from '@angular/core';\r\nimport { userHelp, posHelp, roleHelp } from '../help-meta/sys-help-meta';\r\nimport { SysCommonUtilService } from '@gsp-sys/sysmgr-common';\r\nimport { ServerSideToken, LookupGridComponent, PickingResult, PickedResult } from '@farris/ui-lookup';\r\nimport { SysFarrisLookupService } from '../service/sys-farris-lookup.service';\r\nimport { GspUserFilter } from '../filter/gsp-user-filter';\r\nimport { GspPositionFilter } from '../filter/gsp-position-filter';\r\nimport { GspRoleFilter } from '../filter/gsp-role-filter';\r\nimport { Observable, of } from 'rxjs';\r\nimport { SysLocaleService } from '../../locale/sys-locale.service';\r\nimport { HELP_LOCALE_ZHCHS } from '../../locale/locales/zh-cn/help';\r\nimport { map, filter } from 'rxjs/operators';\r\nimport { element } from 'protractor';\r\n\r\n@Component({\r\n    selector: 'sys-farris-grid-lookup',\r\n    templateUrl: './sys-farris-lookup.component.html',\r\n    styleUrls: ['./sys-farris-lookup.component.css'],\r\n    providers: [\r\n        { provide: ServerSideToken, useClass: SysFarrisLookupService }\r\n    ]\r\n})\r\nexport class SysFarrisLookupComponent implements OnInit {\r\n\r\n    /** æ é¢ */\r\n    @Input() title: string;\r\n    /**å®½åº¦ */\r\n    @Input() width = 550;\r\n    /** æ¯å¦æ¾ç¤ºç¨æ·æåºå­æ®µï¼WFä½¿ç¨ */\r\n    @Input() showUserOrderField = false;\r\n    /** æ¾ç¤ºç¨æ·çåä½ä¿¡æ¯ï¼WFä½¿ç¨ */\r\n    @Input() showUserUnitInfo = false;\r\n    /** åæ°æº */\r\n    @Input() sourceType: 'user' | 'position' | 'role';\r\n    /** åªè¯» */\r\n    @Input() disabled = false;\r\n    /**\r\n     * å¿å¡«\r\n     */\r\n    @Input() required=true;\r\n    /**\r\n     * æå¼å¸®å©åæ¯å¦æéä¸­æ°æ®\r\n     */\r\n    @Input() enableToSelect=true;\r\n    /** æ¯å¦åé */\r\n    @Input() singleSelect: boolean;\r\n    /** æ¯å¦åé¡µï¼é»è®¤true */\r\n    @Input() pagination = true;\r\n    /** é¦æ¬¡å è½½ç¬¬å é¡µï¼é»è®¤1 */\r\n    @Input() pageIndex = 1;\r\n    /** æ¯é¡µå è½½æ°ï¼é»è®¤20 */\r\n    @Input() pageSize = 20;\r\n    /** ç»å®å°å¸®å©ä¸çæ°æ®ï¼åå§æ¾ç¤ºå¼ç¨ */\r\n    @Input() displayTxt: string;\r\n    /** å­å¨å¸®å©éæ©çå¯¹è±¡ */\r\n    @Input() bindingData: { id: string, name: string };\r\n    /** è¿æ»¤æ¡ä»¶ */\r\n    @Input() filter: GspUserFilter | GspPositionFilter | GspRoleFilter | any;\r\n    /** æ¯å¦å¼å§æ°æ®æéè¿æ»¤ */\r\n    @Input() withPermission = false;\r\n    /** å¯ç¨å³é­åäºä»¶ */\r\n    @Input() useBeforeCloseEvent = false;\r\n    @Input() beforeClose: (selectData: any) => Observable<PickedResult>;\r\n    @Input() typeMode=0;\r\n    /** å¸®å©éæ©åäºä»¶ */\r\n    @Output() afterConfirm: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /** å¸®å©éæ©åäºä»¶ï¼ä¼è¿åéä¸­åå é¤çid */\r\n    @Output() afterConfirmData: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /** æ¸ç©ºåäºä»¶-ææ¶ä¸ç¨ */\r\n    @Output() clear: EventEmitter<any> = new EventEmitter<any>();\r\n    /** å³é­å-ææ¶ä¸ç¨ */\r\n    @Output() loadSuccessEvent: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() valueChangedEvent: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() selectDataEvent: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() dialogClosed: EventEmitter<any> = new EventEmitter<any>();\r\n    dataUri: string;\r\n    columns: any[];\r\n    selectedData :any[]=[];\r\n    farrisSelectedData:any[]=[];\r\n    @ViewChild('farrislookup') public farrisLookUp: LookupGridComponent;\r\n    mapFields = { id: 'id', name: 'name' };\r\n    /** æ¯æ¬¡å³é­åæ°æ® */\r\n    public allData: any[];\r\n    public i18nRes: any;\r\n    constructor(\r\n        public sysUtil: SysCommonUtilService,\r\n        public localService: SysLocaleService\r\n    ) {\r\n        this.selectedData = [];\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.localService) {\r\n            this.i18nRes = this.localService.getComponentOpt('help');\r\n        } else {\r\n            this.i18nRes = HELP_LOCALE_ZHCHS;\r\n        }\r\n        this.columns = [\r\n            { title: this.i18nRes.codeField, field: 'code', searchField: 'code', width: '160' },\r\n            { title: this.i18nRes.nameField, field: 'name', searchField: 'name', width: '200' },\r\n        ];\r\n        // æ¾ç¤ºç¨æ·çåä½è·¯å¾ä¿¡æ¯ï¼WFä½¿ç¨\r\n        if (this.showUserUnitInfo) {\r\n            this.width = 850;\r\n            this.columns.push({ title: this.i18nRes.orgNamePathField, field: 'orgNamePath' });\r\n            this.width = 850;\r\n            this.columns.push({ title: this.i18nRes.orgName, field: 'sysOrgName' });\r\n        }\r\n        // æ¾ç¤ºæåºå­æ®µï¼WFä½¿ç¨\r\n        if (this.showUserOrderField) {\r\n            this.columns.push({ title: this.i18nRes.orderField, field: 'orderNum' });\r\n        }\r\n        // åå§å\r\n        this.allData = [];\r\n        // webapiåå§\r\n        switch (this.sourceType) {\r\n            case 'position':\r\n                this.dataUri = posHelp + this.sysUtil.positionWebApi;\r\n                if (!this.title) {\r\n                    this.title = this.i18nRes.positionTitle;\r\n                }\r\n                break;\r\n            case 'role':\r\n                this.dataUri = roleHelp + this.sysUtil.roleWebApi;\r\n                if (!this.title) {\r\n                    this.title = this.i18nRes.roleTitle;\r\n                }\r\n                break;\r\n            case 'user':\r\n            default:\r\n                this.dataUri = userHelp + this.sysUtil.userWebApi;\r\n                if (!this.title) {\r\n                    this.title = this.i18nRes.userTitle;\r\n                }\r\n                break;\r\n        }\r\n        // å¿é¡»è¦æï¼å¦ååå§éä¸­ä¸èµ·ä½ç¨\r\n        this.farrisLookUp.mapFields = { id: 'id', name: 'name' };\r\n        // å¸®å©å³é­åäºä»¶\r\n        this.farrisLookUp.dialogClosed.subscribe(val => {\r\n            console.log(val);\r\n            this.dialogClosed.next(val);\r\n        });\r\n    }\r\n\r\n    /** å¸®å©åäºä»¶,å¼ºè¡ä¼ éè¿æ»¤æ¡ä»¶ */\r\n    beforeOpen = (arg) => {\r\n        if (!this.filter) {\r\n            // å¯è½è°ç¨æ¹ä¸ä¼ éï¼è¯å«ä¸ºéç©º\r\n            this.filter = {};\r\n        }\r\n        /**\r\n         * WFä½¿ç¨ï¼å¦ææ¾ç¤ºç¨æ·çåä½ä¿¡æ¯ï¼éè¦æ¥è¯¢æ¡ä»¶ä¸­å¢å å¦ä¸æ è¯ï¼\r\n         * æå¡å¨ç«¯è§£æ\r\n         */\r\n        if (this.showUserUnitInfo) {\r\n            this.filter.queryMode = '0002';\r\n        }\r\n        this.filter.pageIndex = this.pageIndex;\r\n        this.filter.pageSize = this.pageSize;\r\n        this.allData.length = 0;\r\n        this.farrisSelectedData = [];\r\n        this.selectedData = [];\r\n\r\n        if(this.bindingData!=null&&this.bindingData.id!=null&&this.bindingData.id!=\"\"){\r\n            this.selectedData = this.bindingData.id.split(',');\r\n            this.selectedData.forEach(item=>{\r\n                this.farrisSelectedData.push({\"id\":item});\r\n\r\n            });\r\n        }\r\n\r\n        // æè¿æ»¤æ°æ®åå½åçæ°æ®ä¼ éå°serviceå±\r\n        return of({\r\n            showDialog: true, data: {\r\n                filter: this.filter,\r\n                allData: this.allData,\r\n                farrisSelectedData:this.farrisSelectedData\r\n            }\r\n        });\r\n    }\r\n\r\n    /** å¸®å©å³é­åäºä»¶,ç®åæ è®ºæ¯å¦é½ä¼ç»§ç»­èµ°afterOkæ å°äºä»¶ */\r\n    dictPicked = (arg: any): Observable<PickedResult> => {\r\n        if (this.useBeforeCloseEvent && this.beforeClose) {\r\n            return this.beforeClose(arg).pipe(map(val => {\r\n                // å¦æè½å³é­ï¼è°ç¨åäºä»¶\r\n                if (val.closeDialog) {\r\n                    this.afterConfirm.next(arg);\r\n                }\r\n                return val;\r\n            }));\r\n        } else {\r\n            return of({ closeDialog: true });\r\n        }\r\n    }\r\n\r\n    /** å¸®å©æ å°åäºä»¶ */\r\n    afterOk = (helpdata, mapfields) => {\r\n        if (this.useBeforeCloseEvent) {\r\n            return;\r\n        }\r\n        if(this.typeMode&&this.typeMode===1){\r\n            if(!this.singleSelect){\r\n                this.selectedData = this.selectedData.filter(item=>{\r\n                    if(this.allData.findIndex(element=>{\r\n                        if(item.hasOwnProperty(\"id\")){\r\n                            return element.id===item.id;\r\n                        }else{\r\n                            return element.id===item;\r\n                        }\r\n                    })>-1){\r\n                        return true;\r\n                    }else{\r\n                        return false;\r\n                    }\r\n                });\r\n        \r\n                this.selectedData.forEach((item,index)=>{\r\n                    if(!item.hasOwnProperty(\"id\")){\r\n                        this.allData.forEach(element=>{\r\n                            if(element.id===item){\r\n                                this.selectedData[index] = element;\r\n                            }\r\n                        })\r\n                    }\r\n                });\r\n                helpdata = this.selectedData;\r\n            }\r\n        }\r\n\r\n        if (helpdata) {\r\n            // å¤éçè¯éè¦å¤ç,å¸®å©å·²éå·ä¸ºé´é\r\n            if (!this.singleSelect) {\r\n                const idList: string[] = helpdata.map(item => item.id);\r\n                const nameList: string[] = helpdata.map(item => item.name);\r\n                const nameStr = nameList.join();\r\n                const idStr = idList.join();\r\n                this.displayTxt = nameStr;\r\n                this.bindingData.id = idStr;\r\n                this.bindingData.name = nameStr;\r\n            } else {\r\n                this.displayTxt = helpdata.name;\r\n            }\r\n        } else {// ç®åæ¸ç©ºä¼èµ°è¿éï¼èä¸ä¸¤æ¬¡\r\n        }\r\n        // è§¦åäºä»¶\r\n        this.afterConfirm.next(helpdata);\r\n        // this.afterConfirmData.next(this.selctedData);\r\n    }\r\n\r\n    /** æ¸ç©ºå */\r\n    afterClear (arg: any) {\r\n        this.clear.next(arg);\r\n    }\r\n\r\n    /** æå¨æ¾ç¤ºå¸®å© */\r\n    public showHelp() {\r\n        this.farrisLookUp.showDialog();\r\n    }\r\n\r\n    oncheckedChange(arg:any){ \r\n        if(this.singleSelect){\r\n            this.selectedData=[];\r\n        }       \r\n        if(arg.isCheck){\r\n            arg.data.forEach(item=>{\r\n                if(this.selectedData.indexOf(item.id)===-1){\r\n                    this.selectedData.push(item);\r\n                }\r\n            });\r\n        }else{\r\n            this.selectedData = this.selectedData.filter(item=>{\r\n                if(arg.data.findIndex(element=>{return item.hasOwnProperty(\"id\")?item.id===element.id:item===element.id})>-1){\r\n                    return false;\r\n                }else{\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onOkClick=()=>{\r\n        if (this.useBeforeCloseEvent) {\r\n            return;\r\n        }\r\n        let helpdata :any;\r\n        if(!this.selectedData||this.selectedData.length===0){\r\n            if(this.singleSelect){\r\n                this.afterConfirm.next(helpdata);\r\n            }else{\r\n                this.afterConfirm.next([]);\r\n            }\r\n            this.farrisLookUp.closeDialog();\r\n            return;\r\n        }\r\n\r\n        this.selectedData = this.selectedData.filter(item=>{\r\n            if(this.allData.findIndex(element=>{\r\n                if(item.hasOwnProperty(\"id\")){\r\n                    return element.id===item.id;\r\n                }else{\r\n                    return element.id===item;\r\n                }\r\n            })>-1){\r\n                return true;\r\n            }else{\r\n                return false;\r\n            }\r\n        });\r\n\r\n        this.selectedData.forEach((item,index)=>{\r\n            if(!item.hasOwnProperty(\"id\")){\r\n                this.allData.forEach(element=>{\r\n                    if(element.id===item){\r\n                        this.selectedData[index] = element;\r\n                    }\r\n                })\r\n            }\r\n        });\r\n        helpdata = this.selectedData;\r\n\r\n        if (helpdata&&helpdata.length>0) {\r\n            // å¤éçè¯éè¦å¤ç,å¸®å©å·²éå·ä¸ºé´é\r\n            if (!this.singleSelect) {\r\n                const idList: string[] = helpdata.map(item => item.id);\r\n                const nameList: string[] = helpdata.map(item => item.name);\r\n                const nameStr = nameList.join();\r\n                const idStr = idList.join();\r\n                this.displayTxt = nameStr;\r\n                this.bindingData.id = idStr;\r\n                this.bindingData.name = nameStr;\r\n                this.afterConfirm.next(helpdata);\r\n\r\n            } else {\r\n                let nameStr = helpdata[0].name;\r\n                this.displayTxt = nameStr;\r\n                this.afterConfirm.next(helpdata[0]);\r\n            }\r\n        } else {// ç®åæ¸ç©ºä¼èµ°è¿éï¼èä¸ä¸¤æ¬¡\r\n            this.afterConfirm.next(helpdata);\r\n        }\r\n        // è§¦åäºä»¶\r\n        this.farrisLookUp.closeDialog();\r\n    }\r\n\r\n}\r\n\r\n","export class HelpFilterMap {\r\n    /** å¸®å©åæ°æ®çè¿æ»¤æ¡ä»¶ */\r\n    helpMeta: Map<string, any> = new Map<string, any>();\r\n}\r\n","import { forEach } from '@angular/router/src/utils/collection';\r\nimport { SysHelpService } from './../service/sys-help.service';\r\nimport { Component, OnInit, Input, EventEmitter, Output, ViewChild } from '@angular/core';\r\nimport { TreeFilter } from '../filter/tree-filter';\r\nimport { LookupGridComponent, ServerSideToken, PickedResult } from '@farris/ui-lookup';\r\nimport { SysCommonUtilService } from '@gsp-sys/sysmgr-common';\r\nimport { sysOrgHelp, posGroupHelp, roleGroupHelp, userGroupHelp } from '../help-meta/sys-help-meta';\r\nimport { SysFarrisLookupService } from '../service/sys-farris-lookup.service';\r\nimport { of, Observable } from 'rxjs';\r\nimport { SysLocaleService } from '../../locale/sys-locale.service';\r\nimport { LanguageService } from '@ecp-caf/caf-common';\r\nimport { HELP_LOCALE_ZHCHS } from '../../locale/locales/zh-cn/help';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'sys-farris-tree-help',\r\n    templateUrl: './sys-farris-tree-help.component.html',\r\n    styleUrls: ['./sys-farris-tree-help.component.css'],\r\n    providers: [\r\n        { provide: ServerSideToken, useClass: SysFarrisLookupService }\r\n    ]\r\n})\r\nexport class SysFarrisTreeHelpComponent implements OnInit {\r\n    /** æ¯å¦åªè¯» */\r\n    @Input() disabled = false;\r\n    /** æ é¢ */\r\n    @Input() title: string;\r\n    /** æ¯å¦åå±å è½½ç»ç» */\r\n    @Input() async = false;\r\n    /** åæ°æº */\r\n    @Input() sourceType: 'org' | 'usergroup' | 'positiongroup' | 'rolegroup';\r\n    /** æ¯å¦åé */\r\n    @Input() singleSelect = true;\r\n    /** ç»å®å°å¸®å©ä¸çæ°æ®ï¼åå§æ¾ç¤ºå¼ç¨ */\r\n    @Input() displayTxt: string;\r\n    /** å­å¨å¸®å©éæ©çå¯¹è±¡ */\r\n    @Input() bindingData: { id: string, name: string };\r\n    /** è¿æ»¤æ¡ä»¶ */\r\n    @Input() filter: TreeFilter;\r\n    /**\r\n     * æå¼å¸®å©åæ¯å¦æéä¸­æ°æ®\r\n     */\r\n    @Input() enableToSelect=true;\r\n    /** å¯ç¨å³é­åäºä»¶ */\r\n    @Input() useBeforeCloseEvent = false;\r\n    @Input() beforeClose: (selectData: any) => Observable<PickedResult>;\r\n    /** æ¯å¦å¼å§æ°æ®æéè¿æ»¤ */\r\n    @Input() withPermission = false;\r\n    /** å¸®å©éæ©åäºä»¶ */\r\n    @Output() afterConfirm: EventEmitter<any> = new EventEmitter<any>();\r\n    /** æ¸ç©ºåäºä»¶-ææ¶ä¸ç¨ */\r\n    @Output() clear: EventEmitter<any> = new EventEmitter<any>();\r\n    @Input() showAllPathOrg:boolean = false;\r\n    @ViewChild('farristreelookup') public farrisLookUp: LookupGridComponent;\r\n    mapFields = { id: 'id', name: 'name' };\r\n\r\n    dataUri: string;\r\n    columns: any;\r\n    treeInfo: any;\r\n    public allData = [];\r\n    public i18nRes: any;\r\n    constructor (\r\n        public sysUtil: SysCommonUtilService,\r\n        public localService: SysLocaleService,\r\n        public sysHelpService: SysHelpService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit () {\r\n        if (this.localService) {\r\n            this.i18nRes = this.localService.getComponentOpt('help');\r\n        } else {\r\n            this.i18nRes = HELP_LOCALE_ZHCHS;\r\n        }\r\n        // é»è®¤ä¸åå±å è½½\r\n        this.treeInfo = {\r\n            loadDataType: 'all',\r\n            layerType: 'parentId',\r\n            dataField: 'treeInfo',\r\n            pathField: 'path',\r\n            layerField: 'layer',\r\n            parentField: 'parentId',\r\n            isDetailField: 'isDetail',\r\n            treeDataIsInit: false\r\n        };\r\n        this.columns = [\r\n            { title: this.i18nRes.codeField, field: 'code', searchField: 'code' },\r\n            { title: this.i18nRes.nameField, field: 'name', searchField: 'name' },\r\n        ];\r\n        // å¼æ­¥å è½½çè¯éè¦å¼å¯è¿ä¸¤ä¸ªå¼å³\r\n        if (this.async) {\r\n            this.treeInfo.loadDataType = 'async';\r\n            this.treeInfo.treeDataIsInit = true;\r\n        }\r\n        // webapiåå§\r\n        switch (this.sourceType) {\r\n            case 'org':\r\n                this.dataUri = sysOrgHelp + this.sysUtil.sysOrgWebApi;\r\n                if (!this.title) {\r\n                    this.title = this.i18nRes.userOrgTitle;\r\n                }\r\n                break;\r\n            case 'usergroup':\r\n                this.dataUri = userGroupHelp + this.sysUtil.userGroupWebApi;\r\n                if (!this.title) {\r\n                    this.title = this.i18nRes.userGroupTitle;\r\n                }\r\n                break;\r\n            case 'positiongroup':\r\n                this.dataUri = posGroupHelp + this.sysUtil.posGroupWebApi;\r\n                if (!this.title) {\r\n                    this.title = this.i18nRes.positionGroupTitle;\r\n                }\r\n                break;\r\n            case 'rolegroup':\r\n            default:\r\n                this.dataUri = roleGroupHelp + this.sysUtil.roleGroupWebApi;\r\n                if (!this.title) {\r\n                    this.title = this.i18nRes.roleGroupTitle;\r\n                }\r\n                break;\r\n        }\r\n        // å¿é¡»è¦æï¼å¦ååå§éä¸­ä¸èµ·ä½ç¨\r\n        this.farrisLookUp.mapFields = { id: 'id', name: 'name' };\r\n    }\r\n\r\n    /** å¸®å©åäºä»¶,å¼ºè¡ä¼ éè¿æ»¤æ¡ä»¶ */\r\n    beforeOpen = (arg) => {\r\n        //å¦ææè¿æ»¤æ¡ä»¶ï¼éå å°urlè·¯å¾\r\n        let farrisSelectedData = [];\r\n        let selectedData = [];\r\n        let temp = 0;\r\n\r\n        if(this.bindingData!=null&&this.bindingData.id!=null&&this.bindingData.id!=\"\"){\r\n            selectedData = this.bindingData.id.split(',');\r\n            let selectedDataName = this.bindingData.name.split(',');\r\n\r\n            selectedData.forEach(item=>{\r\n                farrisSelectedData.push({\"id\":item,\"name\":selectedDataName[temp]});\r\n                temp = temp+1;\r\n\r\n            });\r\n        }\r\n        return of({\r\n            showDialog: true,\r\n            data: {\r\n                filter: this.filter,\r\n                allData: this.allData,\r\n                farrisSelectedData:farrisSelectedData\r\n            }\r\n        });\r\n    }\r\n\r\n    /** å¸®å©å³é­åäºä»¶,ç®åæ è®ºæ¯å¦é½ä¼ç»§ç»­èµ°afterOkæ å°äºä»¶ */\r\n    dictPicked = (arg: any): Observable<PickedResult> => {\r\n        if (this.useBeforeCloseEvent && this.beforeClose) {\r\n            return this.beforeClose(arg).pipe(map(val => {\r\n                // å¦æè½å³é­ï¼è°ç¨åäºä»¶\r\n                if (val.closeDialog) {\r\n                    this.afterConfirm.next(arg);\r\n                }\r\n                return val;\r\n            }));\r\n        } else {\r\n            return of({ closeDialog: true });\r\n        }\r\n    }\r\n    /** å¸®å©æ å°åäºä»¶ */\r\n    afterOk = (helpdata, mapfields) => {\r\n        // å¦æå¯ç¨äºå³é­åæ ¡éªäºä»¶ï¼ä¸èµ°è¿é\r\n        if (this.useBeforeCloseEvent) {\r\n            return;\r\n        }\r\n        if (helpdata) {\r\n            // å¤éçè¯éè¦å¤ç,å¸®å©å·²éå·ä¸ºé´é\r\n            if (!this.singleSelect) {\r\n                const idList: string[] = helpdata.map(item => item.id);\r\n                const nameList: string[] = helpdata.map(item => item.name);\r\n                this.bindingData.id = idList.join();\r\n                this.bindingData.name = nameList.join();\r\n                this.displayTxt = this.bindingData.name;\r\n                this.afterConfirm.next(helpdata);\r\n\r\n            } else {\r\n                // å¸®å©æ¾ç¤º\r\n                this.displayTxt = helpdata.name;\r\n                if(this.showAllPathOrg){\r\n                    this.sysHelpService.getParentOrg(helpdata).subscribe(items=>{\r\n                        if(items&&items.length>0){\r\n                            helpdata.allPathOrg=items;\r\n                        }\r\n                        this.afterConfirm.next(helpdata);\r\n                        console.log(helpdata);\r\n                    });\r\n                }else{\r\n                    this.afterConfirm.next(helpdata);\r\n\r\n                }\r\n            }\r\n        } else {// ç®åæ¸ç©ºä¼èµ°è¿éï¼èä¸ä¸¤æ¬¡\r\n            // è§¦åäºä»¶\r\n            this.afterConfirm.next(helpdata);\r\n            console.log(helpdata);\r\n        }\r\n\r\n    }\r\n\r\n    /** æ¸ç©ºå */\r\n    afterClear(arg: any) {\r\n        this.clear.next(arg);\r\n    }\r\n\r\n    /** æå¨æ¾ç¤ºå¸®å© */\r\n    public showHelp() {\r\n        this.farrisLookUp.showDialog();\r\n    }\r\n    search($event){\r\n        console.log($event);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SysHelpService } from './service/sys-help.service';\r\nimport { SysCommonUtilService, SysCommonModule } from '@gsp-sys/sysmgr-common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { SysExceptionService } from './service/sys-exception.service';\r\nimport { GroupNavComponent } from './group-nav/group-nav.component';\r\nimport { TreeTableModule } from '@farris/ui-treetable';\r\nimport { GroupService } from './group-nav/group.service';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { SysFarrisLookupComponent } from './sys-farris-lookup/sys-farris-lookup.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HelpFilterMap } from './service/help-filter-map';\r\nimport { SysFarrisTreeHelpComponent } from './sys-farris-tree-help/sys-farris-tree-help.component';\r\nimport { DatagridModule } from '@farris/ui-datagrid';\r\nimport { SysLocaleService } from '../locale/sys-locale.service';\r\nimport { LanguageService } from '@ecp-caf/caf-common';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        LookupModule,\r\n        ModalModule.forRoot(),\r\n        MessagerModule.forRoot(),\r\n        DatagridModule,\r\n        TreeTableModule,\r\n        SysCommonModule\r\n    ],\r\n    declarations: [\r\n        GroupNavComponent,\r\n        SysFarrisLookupComponent,\r\n        SysFarrisTreeHelpComponent\r\n    ],\r\n    exports: [\r\n        GroupNavComponent,\r\n        SysFarrisLookupComponent,\r\n        SysFarrisTreeHelpComponent\r\n    ],\r\n    providers: [\r\n        HelpFilterMap,\r\n        SysHelpService,\r\n        SysExceptionService,\r\n        SysCommonUtilService,\r\n        GroupService,\r\n        LanguageService,\r\n        CookieService,\r\n        SysLocaleService]\r\n})\r\nexport class SysManagerUIModule { }\r\n","/**\r\n * æ°æ®æéæä½\r\n */\r\nexport class AuthOp {\r\n    public static userManage = 'UserManage';\r\n    public static userView = 'UserView';\r\n    public static  userAssPosition = 'UserAssPosition';\r\n\r\n    public static positionManage = 'PositionManage';\r\n    public static positionView = 'PositionView';\r\n    public static positionAssRole = 'PositionAssRole';\r\n    /** å·²ç»åºå¼ */\r\n    public static  positionAssUser = 'PositionAssUser';\r\n\r\n    public static roleManage = 'RoleManage';\r\n    /** å·²ç»åºå¼ */\r\n    public static  roleAssPosition = 'RoleAssPosition';\r\n}\r\n"]}