/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { SysHelpService } from './service/sys-help.service';
import { SysCommonUtilService, SysCommonModule } from '@gsp-sys/sysmgr-common';
import { HttpClientModule } from '@angular/common/http';
import { ModalModule } from '@farris/ui-modal';
import { MessagerModule } from '@farris/ui-messager';
import { SysExceptionService } from './service/sys-exception.service';
import { GroupNavComponent } from './group-nav/group-nav.component';
import { TreeTableModule } from '@farris/ui-treetable';
import { GroupService } from './group-nav/group.service';
import { LookupModule } from '@farris/ui-lookup';
import { SysFarrisLookupComponent } from './sys-farris-lookup/sys-farris-lookup.component';
import { FormsModule } from '@angular/forms';
import { HelpFilterMap } from './service/help-filter-map';
import { SysFarrisTreeHelpComponent } from './sys-farris-tree-help/sys-farris-tree-help.component';
import { DatagridModule } from '@farris/ui-datagrid';
import { SysLocaleService } from '../locale/sys-locale.service';
import { LanguageService } from '@ecp-caf/caf-common';
import { CookieService } from 'ngx-cookie-service';
var SysManagerUIModule = /** @class */ (function () {
    function SysManagerUIModule() {
    }
    SysManagerUIModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        HttpClientModule,
                        LookupModule,
                        ModalModule.forRoot(),
                        MessagerModule.forRoot(),
                        DatagridModule,
                        TreeTableModule,
                        SysCommonModule
                    ],
                    declarations: [
                        GroupNavComponent,
                        SysFarrisLookupComponent,
                        SysFarrisTreeHelpComponent
                    ],
                    exports: [
                        GroupNavComponent,
                        SysFarrisLookupComponent,
                        SysFarrisTreeHelpComponent
                    ],
                    providers: [
                        HelpFilterMap,
                        SysHelpService,
                        SysExceptionService,
                        SysCommonUtilService,
                        GroupService,
                        LanguageService,
                        CookieService,
                        SysLocaleService
                    ]
                },] }
    ];
    return SysManagerUIModule;
}());
export { SysManagerUIModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3lzLW1hbmFnZXItdWkubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1zeXMvc3lzbWdyLXVpLyIsInNvdXJjZXMiOlsibGliL3N5cy1tYW5hZ2VyLXVpL3N5cy1tYW5hZ2VyLXVpLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzVELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxlQUFlLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUMvRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3RFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDekQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBQzNGLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDMUQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sdURBQXVELENBQUM7QUFDbkcsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFHbkQ7SUFBQTtJQWdDa0MsQ0FBQzs7Z0JBaENsQyxRQUFRLFNBQUM7b0JBQ04sT0FBTyxFQUFFO3dCQUNMLFlBQVk7d0JBQ1osV0FBVzt3QkFDWCxnQkFBZ0I7d0JBQ2hCLFlBQVk7d0JBQ1osV0FBVyxDQUFDLE9BQU8sRUFBRTt3QkFDckIsY0FBYyxDQUFDLE9BQU8sRUFBRTt3QkFDeEIsY0FBYzt3QkFDZCxlQUFlO3dCQUNmLGVBQWU7cUJBQ2xCO29CQUNELFlBQVksRUFBRTt3QkFDVixpQkFBaUI7d0JBQ2pCLHdCQUF3Qjt3QkFDeEIsMEJBQTBCO3FCQUM3QjtvQkFDRCxPQUFPLEVBQUU7d0JBQ0wsaUJBQWlCO3dCQUNqQix3QkFBd0I7d0JBQ3hCLDBCQUEwQjtxQkFDN0I7b0JBQ0QsU0FBUyxFQUFFO3dCQUNQLGFBQWE7d0JBQ2IsY0FBYzt3QkFDZCxtQkFBbUI7d0JBQ25CLG9CQUFvQjt3QkFDcEIsWUFBWTt3QkFDWixlQUFlO3dCQUNmLGFBQWE7d0JBQ2IsZ0JBQWdCO3FCQUFDO2lCQUN4Qjs7SUFDaUMseUJBQUM7Q0FBQSxBQWhDbkMsSUFnQ21DO1NBQXRCLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IFN5c0hlbHBTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlL3N5cy1oZWxwLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBTeXNDb21tb25VdGlsU2VydmljZSwgU3lzQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGdzcC1zeXMvc3lzbWdyLWNvbW1vbic7XHJcbmltcG9ydCB7IEh0dHBDbGllbnRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IE1vZGFsTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1tb2RhbCc7XHJcbmltcG9ydCB7IE1lc3NhZ2VyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1tZXNzYWdlcic7XHJcbmltcG9ydCB7IFN5c0V4Y2VwdGlvblNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2Uvc3lzLWV4Y2VwdGlvbi5zZXJ2aWNlJztcclxuaW1wb3J0IHsgR3JvdXBOYXZDb21wb25lbnQgfSBmcm9tICcuL2dyb3VwLW5hdi9ncm91cC1uYXYuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVHJlZVRhYmxlTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS10cmVldGFibGUnO1xyXG5pbXBvcnQgeyBHcm91cFNlcnZpY2UgfSBmcm9tICcuL2dyb3VwLW5hdi9ncm91cC5zZXJ2aWNlJztcclxuaW1wb3J0IHsgTG9va3VwTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb29rdXAnO1xyXG5pbXBvcnQgeyBTeXNGYXJyaXNMb29rdXBDb21wb25lbnQgfSBmcm9tICcuL3N5cy1mYXJyaXMtbG9va3VwL3N5cy1mYXJyaXMtbG9va3VwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBIZWxwRmlsdGVyTWFwIH0gZnJvbSAnLi9zZXJ2aWNlL2hlbHAtZmlsdGVyLW1hcCc7XHJcbmltcG9ydCB7IFN5c0ZhcnJpc1RyZWVIZWxwQ29tcG9uZW50IH0gZnJvbSAnLi9zeXMtZmFycmlzLXRyZWUtaGVscC9zeXMtZmFycmlzLXRyZWUtaGVscC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBEYXRhZ3JpZE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZGF0YWdyaWQnO1xyXG5pbXBvcnQgeyBTeXNMb2NhbGVTZXJ2aWNlIH0gZnJvbSAnLi4vbG9jYWxlL3N5cy1sb2NhbGUuc2VydmljZSc7XHJcbmltcG9ydCB7IExhbmd1YWdlU2VydmljZSB9IGZyb20gJ0BlY3AtY2FmL2NhZi1jb21tb24nO1xyXG5pbXBvcnQgeyBDb29raWVTZXJ2aWNlIH0gZnJvbSAnbmd4LWNvb2tpZS1zZXJ2aWNlJztcclxuXHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gICAgaW1wb3J0czogW1xyXG4gICAgICAgIENvbW1vbk1vZHVsZSxcclxuICAgICAgICBGb3Jtc01vZHVsZSxcclxuICAgICAgICBIdHRwQ2xpZW50TW9kdWxlLFxyXG4gICAgICAgIExvb2t1cE1vZHVsZSxcclxuICAgICAgICBNb2RhbE1vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgTWVzc2FnZXJNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIERhdGFncmlkTW9kdWxlLFxyXG4gICAgICAgIFRyZWVUYWJsZU1vZHVsZSxcclxuICAgICAgICBTeXNDb21tb25Nb2R1bGVcclxuICAgIF0sXHJcbiAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICBHcm91cE5hdkNvbXBvbmVudCxcclxuICAgICAgICBTeXNGYXJyaXNMb29rdXBDb21wb25lbnQsXHJcbiAgICAgICAgU3lzRmFycmlzVHJlZUhlbHBDb21wb25lbnRcclxuICAgIF0sXHJcbiAgICBleHBvcnRzOiBbXHJcbiAgICAgICAgR3JvdXBOYXZDb21wb25lbnQsXHJcbiAgICAgICAgU3lzRmFycmlzTG9va3VwQ29tcG9uZW50LFxyXG4gICAgICAgIFN5c0ZhcnJpc1RyZWVIZWxwQ29tcG9uZW50XHJcbiAgICBdLFxyXG4gICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgSGVscEZpbHRlck1hcCxcclxuICAgICAgICBTeXNIZWxwU2VydmljZSxcclxuICAgICAgICBTeXNFeGNlcHRpb25TZXJ2aWNlLFxyXG4gICAgICAgIFN5c0NvbW1vblV0aWxTZXJ2aWNlLFxyXG4gICAgICAgIEdyb3VwU2VydmljZSxcclxuICAgICAgICBMYW5ndWFnZVNlcnZpY2UsXHJcbiAgICAgICAgQ29va2llU2VydmljZSxcclxuICAgICAgICBTeXNMb2NhbGVTZXJ2aWNlXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgU3lzTWFuYWdlclVJTW9kdWxlIHsgfVxyXG4iXX0=