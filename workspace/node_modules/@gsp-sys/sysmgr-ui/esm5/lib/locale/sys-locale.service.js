/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { SYS_LOCALES } from './locales';
import { LanguageService } from '@ecp-caf/caf-common';
var SysLocaleService = /** @class */ (function () {
    function SysLocaleService(lang) {
        this.lang = lang;
        /** @type {?} */
        var localeId = 'zh-CHS';
        if (lang) {
            localeId = lang.getLanguageCode();
        }
        this.langData = SYS_LOCALES[localeId];
        if (!this.langData) {
            this.langData = SYS_LOCALES['zh-CHS'];
        }
        console.log(localeId);
        console.log(this.langData);
    }
    /**
     * @param {?} comp
     * @return {?}
     */
    SysLocaleService.prototype.getComponentOpt = /**
     * @param {?} comp
     * @return {?}
     */
    function (comp) {
        return this.langData[comp];
    };
    SysLocaleService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    SysLocaleService.ctorParameters = function () { return [
        { type: LanguageService }
    ]; };
    return SysLocaleService;
}());
export { SysLocaleService };
if (false) {
    /** @type {?} */
    SysLocaleService.prototype.langData;
    /**
     * @type {?}
     * @private
     */
    SysLocaleService.prototype.lang;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3lzLWxvY2FsZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1zeXMvc3lzbWdyLXVpLyIsInNvdXJjZXMiOlsibGliL2xvY2FsZS9zeXMtbG9jYWxlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDeEMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXREO0lBR0ksMEJBQ1ksSUFBb0I7UUFBcEIsU0FBSSxHQUFKLElBQUksQ0FBZ0I7O1lBRXhCLFFBQVEsR0FBRyxRQUFRO1FBQ3ZCLElBQUksSUFBSSxFQUFFO1lBQ04sUUFBUSxHQUFHLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztTQUNyQztRQUNELElBQUksQ0FBQyxRQUFRLEdBQUcsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2hCLElBQUksQ0FBQyxRQUFRLEdBQUcsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ3pDO1FBQ0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN0QixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMvQixDQUFDOzs7OztJQUVELDBDQUFlOzs7O0lBQWYsVUFBZ0IsSUFBWTtRQUN4QixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDL0IsQ0FBQzs7Z0JBcEJKLFVBQVU7Ozs7Z0JBRkYsZUFBZTs7SUF3QnhCLHVCQUFDO0NBQUEsQUF0QkQsSUFzQkM7U0FyQlksZ0JBQWdCOzs7SUFDekIsb0NBQWM7Ozs7O0lBRVYsZ0NBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0LCBMT0NBTEVfSUQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgU1lTX0xPQ0FMRVMgfSBmcm9tICcuL2xvY2FsZXMnO1xyXG5pbXBvcnQgeyBMYW5ndWFnZVNlcnZpY2UgfSBmcm9tICdAZWNwLWNhZi9jYWYtY29tbW9uJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIFN5c0xvY2FsZVNlcnZpY2Uge1xyXG4gICAgbGFuZ0RhdGE6IGFueTtcclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIHByaXZhdGUgbGFuZzpMYW5ndWFnZVNlcnZpY2VcclxuICAgICkge1xyXG4gICAgICAgIGxldCBsb2NhbGVJZCA9ICd6aC1DSFMnO1xyXG4gICAgICAgIGlmIChsYW5nKSB7XHJcbiAgICAgICAgICAgIGxvY2FsZUlkID0gbGFuZy5nZXRMYW5ndWFnZUNvZGUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5sYW5nRGF0YSA9IFNZU19MT0NBTEVTW2xvY2FsZUlkXTtcclxuICAgICAgICBpZiAoIXRoaXMubGFuZ0RhdGEpIHtcclxuICAgICAgICAgICAgdGhpcy5sYW5nRGF0YSA9IFNZU19MT0NBTEVTWyd6aC1DSFMnXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc29sZS5sb2cobG9jYWxlSWQpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMubGFuZ0RhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldENvbXBvbmVudE9wdChjb21wOiBzdHJpbmcpOiBhbnkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmxhbmdEYXRhW2NvbXBdO1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=