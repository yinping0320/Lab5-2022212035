/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, Injector, ComponentFactoryResolver } from '@angular/core';
import { SysFuncOperationComponent } from '../sys-func-operation/sys-func-operation.component';
import { SysFrontUtil } from '../../sys-common/sys-front.util';
import { BsModalService } from '@farris/ui-modal';
import { SysFarrisFuncOperationComponent } from '../sys-farris-func-operation/sys-farris-func-operation.component';
import { SysLocaleService } from '../../locale/sys-locale.service';
import { HELP_LOCALE_ZHCHS } from '../../locale/locales/zh-cn/help';
var SysFuncOpHelpComponent = /** @class */ (function () {
    function SysFuncOpHelpComponent(modalService, injector, cfr, sysUtil, localService) {
        this.modalService = modalService;
        this.injector = injector;
        this.cfr = cfr;
        this.sysUtil = sysUtil;
        this.localService = localService;
        /**
         * 是否启用新UI,启用后性能提升
         */
        this.useNewUI = false;
        /**
         * 初始选中的权限对象内码
         */
        this.initSelectKeys = [];
        /**
         * 是否只显示分组
         */
        this.onlyShowGroup = false;
        /**
         * 输出事件
         */
        this.afterHelpConfirm = new EventEmitter();
        if (this.localService) {
            this.i18nRes = this.localService.getComponentOpt('help');
        }
        else {
            this.i18nRes = HELP_LOCALE_ZHCHS;
        }
    }
    /**
     * @return {?}
     */
    SysFuncOpHelpComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * 新UI
     */
    /**
     * 新UI
     * @param {?} sessionId
     * @return {?}
     */
    SysFuncOpHelpComponent.prototype.showNewHelp = /**
     * 新UI
     * @param {?} sessionId
     * @return {?}
     */
    function (sessionId) {
        var _this = this;
        // 调用帮助时必须传递sessionId
        this.sysUtil.sessionId = sessionId;
        /** @type {?} */
        var compFactory = this.cfr.resolveComponentFactory(SysFarrisFuncOperationComponent);
        /** @type {?} */
        var funcOpCompNew = compFactory.create(this.injector);
        // 获取功能操作的实例组件
        if (this.initSelectKeys != null && this.initSelectKeys.length > 0) {
            this.initSelectKeys.forEach((/**
             * @param {?} key
             * @return {?}
             */
            function (key) { return funcOpCompNew.instance.curSelectedKeys.push(key); }));
        }
        // 初始化选择的业务操作
        if (this.bizObjectId && this.bizObjectId !== '') {
            funcOpCompNew.instance.bizObjectId = this.bizObjectId;
        }
        if (this.gridSelectMode) {
            funcOpCompNew.instance.gridSelectMode = this.gridSelectMode;
        }
        funcOpCompNew.instance.onlyShowGroup = this.onlyShowGroup;
        funcOpCompNew.instance.isGroupCanSelected = this.isGroupCanSelected;
        /** @type {?} */
        var modalConfig = {
            title: this.i18nRes.operationTitle,
            width: 850,
            height: 550,
            buttons: funcOpCompNew.instance.btnOkAndCancleRef,
            showButtons: true,
            showMaxButton: true,
            resizable: true
        };
        // 弹出帮助框
        this.funcOpDialog = this.modalService.show(funcOpCompNew, modalConfig);
        // 取消后
        funcOpCompNew.instance.afterCancle.subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            // 消失模态框
            _this.funcOpDialog.close();
        }));
        // 确认后
        funcOpCompNew.instance.afterConfirm.subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            _this.afterHelpConfirm.next(res);
        }));
    };
    /**
     * 弹出Farris模态框帮助
     */
    /**
     * 弹出Farris模态框帮助
     * @param {?} sessionId
     * @return {?}
     */
    SysFuncOpHelpComponent.prototype.showHelp = /**
     * 弹出Farris模态框帮助
     * @param {?} sessionId
     * @return {?}
     */
    function (sessionId) {
        var _this = this;
        if (this.useNewUI) {
            this.showNewHelp(sessionId);
            return;
        }
        // 调用帮助时必须传递sessionId
        this.sysUtil.sessionId = sessionId;
        /** @type {?} */
        var compFactory = this.cfr.resolveComponentFactory(SysFuncOperationComponent);
        this.funcOpComp = compFactory.create(this.injector);
        // 获取功能操作的实例组件
        if (this.initSelectKeys != null && this.initSelectKeys.length > 0) {
            this.initSelectKeys
                .forEach((/**
             * @param {?} key
             * @return {?}
             */
            function (key) { return _this.funcOpComp.instance.curSelectedKeys.push(key); }));
        }
        // 初始化选择的业务操作
        if (this.bizObjectId && this.bizObjectId !== '') {
            this.funcOpComp.instance.bizObjectId = this.bizObjectId;
        }
        if (this.gridSelectMode) {
            this.funcOpComp.instance.gridSelectMode = this.gridSelectMode;
        }
        this.funcOpComp.instance.onlyShowGroup = this.onlyShowGroup;
        this.funcOpComp.instance.isGroupCanSelected = this.isGroupCanSelected;
        // 旧版本的需要在这里loaddata
        this.funcOpComp.instance.loadData();
        /** @type {?} */
        var modalConfig = {
            title: '功能操作帮助',
            width: 800,
            height: 550,
            buttons: this.funcOpComp.instance.btnOkAndCancleRef,
            showButtons: true,
            showMaxButton: false,
            resizable: false
        };
        // 弹出帮助框
        this.funcOpDialog = this.modalService.show(this.funcOpComp, modalConfig);
        // 取消后
        this.funcOpComp.instance.afterCancle.subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            // 消失模态框
            _this.funcOpDialog.close();
        }));
        // 确认后
        this.funcOpComp.instance.afterConfirm.subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            _this.afterHelpConfirm.next(res);
        }));
    };
    SysFuncOpHelpComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-sys-func-op-help',
                    template: "",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    SysFuncOpHelpComponent.ctorParameters = function () { return [
        { type: BsModalService },
        { type: Injector },
        { type: ComponentFactoryResolver },
        { type: SysFrontUtil },
        { type: SysLocaleService }
    ]; };
    SysFuncOpHelpComponent.propDecorators = {
        bizObjectId: [{ type: Input }],
        useNewUI: [{ type: Input }],
        initSelectKeys: [{ type: Input }],
        onlyShowGroup: [{ type: Input }],
        gridSelectMode: [{ type: Input }],
        isGroupCanSelected: [{ type: Input }],
        afterHelpConfirm: [{ type: Output }]
    };
    return SysFuncOpHelpComponent;
}());
export { SysFuncOpHelpComponent };
if (false) {
    /**
     * 所属的业务对象内码
     * @type {?}
     */
    SysFuncOpHelpComponent.prototype.bizObjectId;
    /**
     * 是否启用新UI,启用后性能提升
     * @type {?}
     */
    SysFuncOpHelpComponent.prototype.useNewUI;
    /**
     * 初始选中的权限对象内码
     * @type {?}
     */
    SysFuncOpHelpComponent.prototype.initSelectKeys;
    /**
     * 是否只显示分组
     * @type {?}
     */
    SysFuncOpHelpComponent.prototype.onlyShowGroup;
    /** @type {?} */
    SysFuncOpHelpComponent.prototype.gridSelectMode;
    /**
     * 分组能否被选择
     * @type {?}
     */
    SysFuncOpHelpComponent.prototype.isGroupCanSelected;
    /**
     * 输出事件
     * @type {?}
     */
    SysFuncOpHelpComponent.prototype.afterHelpConfirm;
    /**
     * @type {?}
     * @private
     */
    SysFuncOpHelpComponent.prototype.funcOpComp;
    /**
     * @type {?}
     * @private
     */
    SysFuncOpHelpComponent.prototype.funcOpDialog;
    /** @type {?} */
    SysFuncOpHelpComponent.prototype.i18nRes;
    /**
     * @type {?}
     * @private
     */
    SysFuncOpHelpComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    SysFuncOpHelpComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    SysFuncOpHelpComponent.prototype.cfr;
    /**
     * @type {?}
     * @private
     */
    SysFuncOpHelpComponent.prototype.sysUtil;
    /**
     * @type {?}
     * @private
     */
    SysFuncOpHelpComponent.prototype.localService;
}
//# sourceMappingURL=data:application/json;base64,