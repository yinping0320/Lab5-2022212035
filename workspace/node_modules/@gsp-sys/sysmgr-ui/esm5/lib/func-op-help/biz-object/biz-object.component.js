/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, EventEmitter, Input } from '@angular/core';
import { BizObjectService } from '../service/biz-object.service';
var BizObjectComponent = /** @class */ (function () {
    function BizObjectComponent(bizObjectService) {
        this.bizObjectService = bizObjectService;
        this.selectKeys = [];
        /**
         * 业务对象变化后
         */
        this.bizObjectChanged = new EventEmitter();
        /**
         * 树控件展开的节点值
         */
        this.expandedKeys = [];
    }
    /**
     * @return {?}
     */
    BizObjectComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.bizObjectService.getBizObjects().subscribe((/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            result.forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                if (!element.parentID) {
                    element.parentID = undefined;
                    // 展开第一级
                    if (element.layer === 1) {
                        _this.expandedKeys.push(element.id);
                    }
                }
            }));
            _this.data = result;
            // 默认业务对象的处理
            if (_this.bizObjectId && _this.bizObjectId !== '') {
                // 树焦点行
                /** @type {?} */
                var curBizObjectId_1 = _this.bizObjectId;
                while (curBizObjectId_1) {
                    _this.expandedKeys.push(curBizObjectId_1);
                    // 找到当前节点的父节点
                    curBizObjectId_1 = _this.data.find((/**
                     * @param {?} item
                     * @return {?}
                     */
                    function (item) { return item.id === curBizObjectId_1; })).parentID;
                }
                // 右侧操作变化
                _this.selectKeys = [_this.bizObjectId];
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    _this.bizObjectChanged.emit(_this.bizObjectId);
                }), 80);
            }
        }));
    };
    /** 选中行改变后触发事件 */
    /**
     * 选中行改变后触发事件
     * @param {?} args
     * @return {?}
     */
    BizObjectComponent.prototype.selectChange = /**
     * 选中行改变后触发事件
     * @param {?} args
     * @return {?}
     */
    function (args) {
        /** @type {?} */
        var curBusId = args.dataItem.id;
        // 首次触发
        if (this.selectKeys == null || this.selectKeys.length === 0) {
            this.bizObjectChanged.emit(curBusId);
        }
        else {
            // 这个事件里还不会对selectedkeys数组赋值，是上一个状态的
            /** @type {?} */
            var lastBusId = this.selectKeys[0];
            // 变化的情况下触发
            if (lastBusId !== curBusId) {
                this.bizObjectChanged.emit(curBusId);
            }
        }
    };
    BizObjectComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-biz-object',
                    template: "<div class=\"d-flex flex-column flex-fill pt-2 pb-2\" style=\"height: 100%\">\r\n    <kendo-treeview [nodes]=\"data\" textField=\"name\" kendoTreeViewExpandable kendoTreeViewFlatDataBinding idField=\"id\"\r\n      parentIdField=\"parentID\" kendoTreeViewSelectable [selectBy]=\"'id'\" [(selectedKeys)]=\"this.selectKeys\"\r\n      [(expandedKeys)]=\"expandedKeys\"\r\n      [expandBy]=\"'id'\"\r\n      (selectionChange)=\"selectChange($event)\">\r\n    </kendo-treeview>\r\n</div>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    BizObjectComponent.ctorParameters = function () { return [
        { type: BizObjectService }
    ]; };
    BizObjectComponent.propDecorators = {
        bizObjectId: [{ type: Input }],
        bizObjectChanged: [{ type: Output }]
    };
    return BizObjectComponent;
}());
export { BizObjectComponent };
if (false) {
    /** @type {?} */
    BizObjectComponent.prototype.bizObjectId;
    /** @type {?} */
    BizObjectComponent.prototype.data;
    /** @type {?} */
    BizObjectComponent.prototype.selectKeys;
    /** @type {?} */
    BizObjectComponent.prototype.currentid;
    /**
     * 业务对象变化后
     * @type {?}
     */
    BizObjectComponent.prototype.bizObjectChanged;
    /**
     * 树控件展开的节点值
     * @type {?}
     */
    BizObjectComponent.prototype.expandedKeys;
    /**
     * @type {?}
     * @private
     */
    BizObjectComponent.prototype.bizObjectService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYml6LW9iamVjdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXN5cy9zeXNtZ3ItdWkvIiwic291cmNlcyI6WyJsaWIvZnVuYy1vcC1oZWxwL2Jpei1vYmplY3QvYml6LW9iamVjdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0UsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFFakU7SUFpQkksNEJBQXFCLGdCQUFrQztRQUFsQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBUmhELGVBQVUsR0FBYSxFQUFFLENBQUM7Ozs7UUFJakMscUJBQWdCLEdBQXlCLElBQUksWUFBWSxFQUFVLENBQUM7Ozs7UUFFcEUsaUJBQVksR0FBRyxFQUFFLENBQUM7SUFHbEIsQ0FBQzs7OztJQUVELHFDQUFROzs7SUFBUjtRQUFBLGlCQTRCQztRQTNCRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxFQUFFLENBQUMsU0FBUzs7OztRQUFDLFVBQUMsTUFBVztZQUN4RCxNQUFNLENBQUMsT0FBTzs7OztZQUFDLFVBQUEsT0FBTztnQkFDbEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUU7b0JBQ25CLE9BQU8sQ0FBQyxRQUFRLEdBQUcsU0FBUyxDQUFDO29CQUM3QixRQUFRO29CQUNSLElBQUksT0FBTyxDQUFDLEtBQUssS0FBSyxDQUFDLEVBQUU7d0JBQ3JCLEtBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQztxQkFDdEM7aUJBQ0o7WUFDTCxDQUFDLEVBQUMsQ0FBQztZQUNILEtBQUksQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDO1lBQ25CLFlBQVk7WUFDWixJQUFJLEtBQUksQ0FBQyxXQUFXLElBQUksS0FBSSxDQUFDLFdBQVcsS0FBSyxFQUFFLEVBQUU7OztvQkFFekMsZ0JBQWMsR0FBRyxLQUFJLENBQUMsV0FBVztnQkFDckMsT0FBTyxnQkFBYyxFQUFFO29CQUNuQixLQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxnQkFBYyxDQUFDLENBQUM7b0JBQ3ZDLGFBQWE7b0JBQ2IsZ0JBQWMsR0FBRyxLQUFJLENBQUMsSUFBSSxDQUFDLElBQUk7Ozs7b0JBQUMsVUFBQSxJQUFJLElBQUksT0FBQSxJQUFJLENBQUMsRUFBRSxLQUFLLGdCQUFjLEVBQTFCLENBQTBCLEVBQUMsQ0FBQyxRQUFRLENBQUM7aUJBQ2hGO2dCQUNELFNBQVM7Z0JBQ1QsS0FBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLEtBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFDckMsVUFBVTs7O2dCQUFDO29CQUNQLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO2dCQUNqRCxDQUFDLEdBQUUsRUFBRSxDQUFDLENBQUM7YUFDVjtRQUNMLENBQUMsRUFBQyxDQUFDO0lBQ1AsQ0FBQztJQUdELGlCQUFpQjs7Ozs7O0lBQ2pCLHlDQUFZOzs7OztJQUFaLFVBQWMsSUFBUzs7WUFDYixRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ2pDLE9BQU87UUFDUCxJQUFJLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUN6RCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ3hDO2FBQU07OztnQkFFRyxTQUFTLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDcEMsV0FBVztZQUNYLElBQUksU0FBUyxLQUFLLFFBQVEsRUFBRTtnQkFDeEIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQzthQUN4QztTQUNKO0lBQ0wsQ0FBQzs7Z0JBakVKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQiw2ZUFBMEM7O2lCQUU3Qzs7OztnQkFOUSxnQkFBZ0I7Ozs4QkFTcEIsS0FBSzttQ0FLTCxNQUFNOztJQXNEWCx5QkFBQztDQUFBLEFBbEVELElBa0VDO1NBN0RZLGtCQUFrQjs7O0lBRTNCLHlDQUE2Qjs7SUFDN0Isa0NBQW1COztJQUNuQix3Q0FBaUM7O0lBQ2pDLHVDQUFrQjs7Ozs7SUFFbEIsOENBQ29FOzs7OztJQUVwRSwwQ0FBa0I7Ozs7O0lBRUwsOENBQTBDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBCaXpPYmplY3RTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZS9iaXotb2JqZWN0LnNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2FwcC1iaXotb2JqZWN0JyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9iaXotb2JqZWN0LmNvbXBvbmVudC5odG1sJyxcclxuICAgIHN0eWxlVXJsczogWycuL2Jpei1vYmplY3QuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBCaXpPYmplY3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICAgIEBJbnB1dCgpIGJpek9iamVjdElkOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgZGF0YTogYW55W107XHJcbiAgICBwdWJsaWMgc2VsZWN0S2V5czogc3RyaW5nW10gPSBbXTtcclxuICAgIGN1cnJlbnRpZDogc3RyaW5nO1xyXG4gICAgLyoqIOS4muWKoeWvueixoeWPmOWMluWQjiAqL1xyXG4gICAgQE91dHB1dCgpXHJcbiAgICBiaXpPYmplY3RDaGFuZ2VkOiBFdmVudEVtaXR0ZXI8c3RyaW5nPiA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xyXG4gICAgLyoqIOagkeaOp+S7tuWxleW8gOeahOiKgueCueWAvCAqL1xyXG4gICAgZXhwYW5kZWRLZXlzID0gW107XHJcblxyXG4gICAgY29uc3RydWN0b3IgKHByaXZhdGUgYml6T2JqZWN0U2VydmljZTogQml6T2JqZWN0U2VydmljZSkge1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25Jbml0ICgpIHtcclxuICAgICAgICB0aGlzLmJpek9iamVjdFNlcnZpY2UuZ2V0Qml6T2JqZWN0cygpLnN1YnNjcmliZSgocmVzdWx0OiBhbnkpID0+IHtcclxuICAgICAgICAgICAgcmVzdWx0LmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWVsZW1lbnQucGFyZW50SUQpIHtcclxuICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnBhcmVudElEID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIOWxleW8gOesrOS4gOe6p1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LmxheWVyID09PSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXhwYW5kZWRLZXlzLnB1c2goZWxlbWVudC5pZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdGhpcy5kYXRhID0gcmVzdWx0O1xyXG4gICAgICAgICAgICAvLyDpu5jorqTkuJrliqHlr7nosaHnmoTlpITnkIZcclxuICAgICAgICAgICAgaWYgKHRoaXMuYml6T2JqZWN0SWQgJiYgdGhpcy5iaXpPYmplY3RJZCAhPT0gJycpIHtcclxuICAgICAgICAgICAgICAgIC8vIOagkeeEpueCueihjFxyXG4gICAgICAgICAgICAgICAgbGV0IGN1ckJpek9iamVjdElkID0gdGhpcy5iaXpPYmplY3RJZDtcclxuICAgICAgICAgICAgICAgIHdoaWxlIChjdXJCaXpPYmplY3RJZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXhwYW5kZWRLZXlzLnB1c2goY3VyQml6T2JqZWN0SWQpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIOaJvuWIsOW9k+WJjeiKgueCueeahOeItuiKgueCuVxyXG4gICAgICAgICAgICAgICAgICAgIGN1ckJpek9iamVjdElkID0gdGhpcy5kYXRhLmZpbmQoaXRlbSA9PiBpdGVtLmlkID09PSBjdXJCaXpPYmplY3RJZCkucGFyZW50SUQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvLyDlj7Pkvqfmk43kvZzlj5jljJZcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0S2V5cyA9IFt0aGlzLmJpek9iamVjdElkXTtcclxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYml6T2JqZWN0Q2hhbmdlZC5lbWl0KHRoaXMuYml6T2JqZWN0SWQpO1xyXG4gICAgICAgICAgICAgICAgfSwgODApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8qKiDpgInkuK3ooYzmlLnlj5jlkI7op6blj5Hkuovku7YgKi9cclxuICAgIHNlbGVjdENoYW5nZSAoYXJnczogYW55KSB7XHJcbiAgICAgICAgY29uc3QgY3VyQnVzSWQgPSBhcmdzLmRhdGFJdGVtLmlkO1xyXG4gICAgICAgIC8vIOmmluasoeinpuWPkVxyXG4gICAgICAgIGlmICh0aGlzLnNlbGVjdEtleXMgPT0gbnVsbCB8fCB0aGlzLnNlbGVjdEtleXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYml6T2JqZWN0Q2hhbmdlZC5lbWl0KGN1ckJ1c0lkKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvLyDov5nkuKrkuovku7bph4zov5jkuI3kvJrlr7lzZWxlY3RlZGtleXPmlbDnu4TotYvlgLzvvIzmmK/kuIrkuIDkuKrnirbmgIHnmoRcclxuICAgICAgICAgICAgY29uc3QgbGFzdEJ1c0lkID0gdGhpcy5zZWxlY3RLZXlzWzBdO1xyXG4gICAgICAgICAgICAvLyDlj5jljJbnmoTmg4XlhrXkuIvop6blj5FcclxuICAgICAgICAgICAgaWYgKGxhc3RCdXNJZCAhPT0gY3VyQnVzSWQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYml6T2JqZWN0Q2hhbmdlZC5lbWl0KGN1ckJ1c0lkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuIl19