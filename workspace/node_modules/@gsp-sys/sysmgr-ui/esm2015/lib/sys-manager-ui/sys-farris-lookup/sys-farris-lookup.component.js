/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';
import { userHelp, posHelp, roleHelp } from '../help-meta/sys-help-meta';
import { SysCommonUtilService } from '@gsp-sys/sysmgr-common';
import { ServerSideToken, LookupGridComponent } from '@farris/ui-lookup';
import { SysFarrisLookupService } from '../service/sys-farris-lookup.service';
import { of } from 'rxjs';
import { SysLocaleService } from '../../locale/sys-locale.service';
import { HELP_LOCALE_ZHCHS } from '../../locale/locales/zh-cn/help';
import { map } from 'rxjs/operators';
export class SysFarrisLookupComponent {
    /**
     * @param {?} sysUtil
     * @param {?} localService
     */
    constructor(sysUtil, localService) {
        this.sysUtil = sysUtil;
        this.localService = localService;
        /**
         * 宽度
         */
        this.width = 550;
        /**
         * 是否显示用户排序字段，WF使用
         */
        this.showUserOrderField = false;
        /**
         * 显示用户的单位信息，WF使用
         */
        this.showUserUnitInfo = false;
        /**
         * 只读
         */
        this.disabled = false;
        /**
         * 必填
         */
        this.required = true;
        /**
         * 打开帮助后是否有选中数据
         */
        this.enableToSelect = true;
        /**
         * 是否分页，默认true
         */
        this.pagination = true;
        /**
         * 首次加载第几页，默认1
         */
        this.pageIndex = 1;
        /**
         * 每页加载数，默认20
         */
        this.pageSize = 20;
        /**
         * 是否开始数据权限过滤
         */
        this.withPermission = false;
        /**
         * 启用关闭前事件
         */
        this.useBeforeCloseEvent = false;
        this.typeMode = 0;
        /**
         * 帮助选择后事件
         */
        this.afterConfirm = new EventEmitter();
        /**
         * 帮助选择后事件，会返回选中和删除的id
         */
        this.afterConfirmData = new EventEmitter();
        /**
         * 清空后事件-暂时不用
         */
        this.clear = new EventEmitter();
        /**
         * 关闭前-暂时不用
         */
        this.loadSuccessEvent = new EventEmitter();
        this.valueChangedEvent = new EventEmitter();
        this.selectDataEvent = new EventEmitter();
        this.dialogClosed = new EventEmitter();
        this.selectedData = [];
        this.farrisSelectedData = [];
        this.mapFields = { id: 'id', name: 'name' };
        /**
         * 帮助前事件,强行传递过滤条件
         */
        this.beforeOpen = (/**
         * @param {?} arg
         * @return {?}
         */
        (arg) => {
            if (!this.filter) {
                // 可能调用方不传递，识别为非空
                this.filter = {};
            }
            /**
             * WF使用，如果显示用户的单位信息，需要查询条件中增加如下标识，
             * 服务器端解析
             */
            if (this.showUserUnitInfo) {
                this.filter.queryMode = '0002';
            }
            this.filter.pageIndex = this.pageIndex;
            this.filter.pageSize = this.pageSize;
            this.allData.length = 0;
            this.farrisSelectedData = [];
            this.selectedData = [];
            if (this.bindingData != null && this.bindingData.id != null && this.bindingData.id != "") {
                this.selectedData = this.bindingData.id.split(',');
                this.selectedData.forEach((/**
                 * @param {?} item
                 * @return {?}
                 */
                item => {
                    this.farrisSelectedData.push({ "id": item });
                }));
            }
            // 把过滤数据和当前的数据传递到service层
            return of({
                showDialog: true, data: {
                    filter: this.filter,
                    allData: this.allData,
                    farrisSelectedData: this.farrisSelectedData
                }
            });
        });
        /**
         * 帮助关闭前事件,目前无论是否都会继续走afterOk映射事件
         */
        this.dictPicked = (/**
         * @param {?} arg
         * @return {?}
         */
        (arg) => {
            if (this.useBeforeCloseEvent && this.beforeClose) {
                return this.beforeClose(arg).pipe(map((/**
                 * @param {?} val
                 * @return {?}
                 */
                val => {
                    // 如果能关闭，调用后事件
                    if (val.closeDialog) {
                        this.afterConfirm.next(arg);
                    }
                    return val;
                })));
            }
            else {
                return of({ closeDialog: true });
            }
        });
        /**
         * 帮助映射后事件
         */
        this.afterOk = (/**
         * @param {?} helpdata
         * @param {?} mapfields
         * @return {?}
         */
        (helpdata, mapfields) => {
            if (this.useBeforeCloseEvent) {
                return;
            }
            if (this.typeMode && this.typeMode === 1) {
                if (!this.singleSelect) {
                    this.selectedData = this.selectedData.filter((/**
                     * @param {?} item
                     * @return {?}
                     */
                    item => {
                        if (this.allData.findIndex((/**
                         * @param {?} element
                         * @return {?}
                         */
                        element => {
                            if (item.hasOwnProperty("id")) {
                                return element.id === item.id;
                            }
                            else {
                                return element.id === item;
                            }
                        })) > -1) {
                            return true;
                        }
                        else {
                            return false;
                        }
                    }));
                    this.selectedData.forEach((/**
                     * @param {?} item
                     * @param {?} index
                     * @return {?}
                     */
                    (item, index) => {
                        if (!item.hasOwnProperty("id")) {
                            this.allData.forEach((/**
                             * @param {?} element
                             * @return {?}
                             */
                            element => {
                                if (element.id === item) {
                                    this.selectedData[index] = element;
                                }
                            }));
                        }
                    }));
                    helpdata = this.selectedData;
                }
            }
            if (helpdata) {
                // 多选的话需要处理,帮助已逗号为间隔
                if (!this.singleSelect) {
                    /** @type {?} */
                    const idList = helpdata.map((/**
                     * @param {?} item
                     * @return {?}
                     */
                    item => item.id));
                    /** @type {?} */
                    const nameList = helpdata.map((/**
                     * @param {?} item
                     * @return {?}
                     */
                    item => item.name));
                    /** @type {?} */
                    const nameStr = nameList.join();
                    /** @type {?} */
                    const idStr = idList.join();
                    this.displayTxt = nameStr;
                    this.bindingData.id = idStr;
                    this.bindingData.name = nameStr;
                }
                else {
                    this.displayTxt = helpdata.name;
                }
            }
            else { // 目前清空会走这里，而且两次
            }
            // 触发事件
            this.afterConfirm.next(helpdata);
            // this.afterConfirmData.next(this.selctedData);
        });
        this.onOkClick = (/**
         * @return {?}
         */
        () => {
            if (this.useBeforeCloseEvent) {
                return;
            }
            /** @type {?} */
            let helpdata;
            if (!this.selectedData || this.selectedData.length === 0) {
                if (this.singleSelect) {
                    this.afterConfirm.next(helpdata);
                }
                else {
                    this.afterConfirm.next([]);
                }
                this.farrisLookUp.closeDialog();
                return;
            }
            this.selectedData = this.selectedData.filter((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                if (this.allData.findIndex((/**
                 * @param {?} element
                 * @return {?}
                 */
                element => {
                    if (item.hasOwnProperty("id")) {
                        return element.id === item.id;
                    }
                    else {
                        return element.id === item;
                    }
                })) > -1) {
                    return true;
                }
                else {
                    return false;
                }
            }));
            this.selectedData.forEach((/**
             * @param {?} item
             * @param {?} index
             * @return {?}
             */
            (item, index) => {
                if (!item.hasOwnProperty("id")) {
                    this.allData.forEach((/**
                     * @param {?} element
                     * @return {?}
                     */
                    element => {
                        if (element.id === item) {
                            this.selectedData[index] = element;
                        }
                    }));
                }
            }));
            helpdata = this.selectedData;
            if (helpdata && helpdata.length > 0) {
                // 多选的话需要处理,帮助已逗号为间隔
                if (!this.singleSelect) {
                    /** @type {?} */
                    const idList = helpdata.map((/**
                     * @param {?} item
                     * @return {?}
                     */
                    item => item.id));
                    /** @type {?} */
                    const nameList = helpdata.map((/**
                     * @param {?} item
                     * @return {?}
                     */
                    item => item.name));
                    /** @type {?} */
                    const nameStr = nameList.join();
                    /** @type {?} */
                    const idStr = idList.join();
                    this.displayTxt = nameStr;
                    this.bindingData.id = idStr;
                    this.bindingData.name = nameStr;
                    this.afterConfirm.next(helpdata);
                }
                else {
                    /** @type {?} */
                    let nameStr = helpdata[0].name;
                    this.displayTxt = nameStr;
                    this.afterConfirm.next(helpdata[0]);
                }
            }
            else { // 目前清空会走这里，而且两次
                this.afterConfirm.next(helpdata);
            }
            // 触发事件
            this.farrisLookUp.closeDialog();
        });
        this.selectedData = [];
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.localService) {
            this.i18nRes = this.localService.getComponentOpt('help');
        }
        else {
            this.i18nRes = HELP_LOCALE_ZHCHS;
        }
        this.columns = [
            { title: this.i18nRes.codeField, field: 'code', searchField: 'code', width: '160' },
            { title: this.i18nRes.nameField, field: 'name', searchField: 'name', width: '200' },
        ];
        // 显示用户的单位路径信息，WF使用
        if (this.showUserUnitInfo) {
            this.width = 850;
            this.columns.push({ title: this.i18nRes.orgNamePathField, field: 'orgNamePath' });
            this.width = 850;
            this.columns.push({ title: this.i18nRes.orgName, field: 'sysOrgName' });
        }
        // 显示排序字段，WF使用
        if (this.showUserOrderField) {
            this.columns.push({ title: this.i18nRes.orderField, field: 'orderNum' });
        }
        // 初始化
        this.allData = [];
        // webapi初始
        switch (this.sourceType) {
            case 'position':
                this.dataUri = posHelp + this.sysUtil.positionWebApi;
                if (!this.title) {
                    this.title = this.i18nRes.positionTitle;
                }
                break;
            case 'role':
                this.dataUri = roleHelp + this.sysUtil.roleWebApi;
                if (!this.title) {
                    this.title = this.i18nRes.roleTitle;
                }
                break;
            case 'user':
            default:
                this.dataUri = userHelp + this.sysUtil.userWebApi;
                if (!this.title) {
                    this.title = this.i18nRes.userTitle;
                }
                break;
        }
        // 必须要有，否则初始选中不起作用
        this.farrisLookUp.mapFields = { id: 'id', name: 'name' };
        // 帮助关闭后事件
        this.farrisLookUp.dialogClosed.subscribe((/**
         * @param {?} val
         * @return {?}
         */
        val => {
            console.log(val);
            this.dialogClosed.next(val);
        }));
    }
    /**
     * 清空后
     * @param {?} arg
     * @return {?}
     */
    afterClear(arg) {
        this.clear.next(arg);
    }
    /**
     * 手动显示帮助
     * @return {?}
     */
    showHelp() {
        this.farrisLookUp.showDialog();
    }
    /**
     * @param {?} arg
     * @return {?}
     */
    oncheckedChange(arg) {
        if (this.singleSelect) {
            this.selectedData = [];
        }
        if (arg.isCheck) {
            arg.data.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                if (this.selectedData.indexOf(item.id) === -1) {
                    this.selectedData.push(item);
                }
            }));
        }
        else {
            this.selectedData = this.selectedData.filter((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                if (arg.data.findIndex((/**
                 * @param {?} element
                 * @return {?}
                 */
                element => { return item.hasOwnProperty("id") ? item.id === element.id : item === element.id; })) > -1) {
                    return false;
                }
                else {
                    return true;
                }
            }));
        }
    }
}
SysFarrisLookupComponent.decorators = [
    { type: Component, args: [{
                selector: 'sys-farris-grid-lookup',
                template: "<farris-lookup-grid #farrislookup\r\n    [disabled]=\"disabled\"\r\n    [editable]=\"false\"\r\n    [bindingData]=\"bindingData\"\r\n    [(ngModel)]=\"displayTxt\"\r\n    [columns]=\"columns\"\r\n    [singleSelect]=\"singleSelect\"\r\n    [title]=\"title\"\r\n    [displayType]=\"'List'\"\r\n    [uri]=\"dataUri\"\r\n    [idField]=\"'id'\"\r\n    [pageIndex]=\"pageIndex\"\r\n    [pageSize]=\"pageSize\"\r\n    [enableToSelect]=\"enableToSelect\"\r\n    [pagination]=\"pagination\"\r\n    [valueField]=\"'id'\" \r\n    [textField]=\"'name'\"\r\n    (clear)=\"afterClear($event)\"\r\n    [mapFields]=\"mapFields\"\r\n    [dictPicking]=\"beforeOpen\"\r\n    [dictPicked]=\"beforeClose\"\r\n    [mappingFn]= \"afterOk\"\r\n    [dialogWidth]=\"width\"\r\n    (checkedChange)=\"oncheckedChange($event)\"\r\n\r\n    [required]=\"required\"></farris-lookup-grid>\r\n\r\n    <!--\r\n        \u786E\u5B9A\u7684\u81EA\u5B9A\u4E49\u4E8B\u4EF6\uFF0C\u9700\u8981\u5220\u9664\r\n        [okHandler]=\"onOkClick\" -->\r\n\r\n",
                providers: [
                    { provide: ServerSideToken, useClass: SysFarrisLookupService }
                ],
                styles: [""]
            }] }
];
/** @nocollapse */
SysFarrisLookupComponent.ctorParameters = () => [
    { type: SysCommonUtilService },
    { type: SysLocaleService }
];
SysFarrisLookupComponent.propDecorators = {
    title: [{ type: Input }],
    width: [{ type: Input }],
    showUserOrderField: [{ type: Input }],
    showUserUnitInfo: [{ type: Input }],
    sourceType: [{ type: Input }],
    disabled: [{ type: Input }],
    required: [{ type: Input }],
    enableToSelect: [{ type: Input }],
    singleSelect: [{ type: Input }],
    pagination: [{ type: Input }],
    pageIndex: [{ type: Input }],
    pageSize: [{ type: Input }],
    displayTxt: [{ type: Input }],
    bindingData: [{ type: Input }],
    filter: [{ type: Input }],
    withPermission: [{ type: Input }],
    useBeforeCloseEvent: [{ type: Input }],
    beforeClose: [{ type: Input }],
    typeMode: [{ type: Input }],
    afterConfirm: [{ type: Output }],
    afterConfirmData: [{ type: Output }],
    clear: [{ type: Output }],
    loadSuccessEvent: [{ type: Output }],
    valueChangedEvent: [{ type: Output }],
    selectDataEvent: [{ type: Output }],
    dialogClosed: [{ type: Output }],
    farrisLookUp: [{ type: ViewChild, args: ['farrislookup',] }]
};
if (false) {
    /**
     * 标题
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.title;
    /**
     * 宽度
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.width;
    /**
     * 是否显示用户排序字段，WF使用
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.showUserOrderField;
    /**
     * 显示用户的单位信息，WF使用
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.showUserUnitInfo;
    /**
     * 取数源
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.sourceType;
    /**
     * 只读
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.disabled;
    /**
     * 必填
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.required;
    /**
     * 打开帮助后是否有选中数据
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.enableToSelect;
    /**
     * 是否单选
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.singleSelect;
    /**
     * 是否分页，默认true
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.pagination;
    /**
     * 首次加载第几页，默认1
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.pageIndex;
    /**
     * 每页加载数，默认20
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.pageSize;
    /**
     * 绑定到帮助上的数据，初始显示值用
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.displayTxt;
    /**
     * 存储帮助选择的对象
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.bindingData;
    /**
     * 过滤条件
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.filter;
    /**
     * 是否开始数据权限过滤
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.withPermission;
    /**
     * 启用关闭前事件
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.useBeforeCloseEvent;
    /** @type {?} */
    SysFarrisLookupComponent.prototype.beforeClose;
    /** @type {?} */
    SysFarrisLookupComponent.prototype.typeMode;
    /**
     * 帮助选择后事件
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.afterConfirm;
    /**
     * 帮助选择后事件，会返回选中和删除的id
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.afterConfirmData;
    /**
     * 清空后事件-暂时不用
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.clear;
    /**
     * 关闭前-暂时不用
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.loadSuccessEvent;
    /** @type {?} */
    SysFarrisLookupComponent.prototype.valueChangedEvent;
    /** @type {?} */
    SysFarrisLookupComponent.prototype.selectDataEvent;
    /** @type {?} */
    SysFarrisLookupComponent.prototype.dialogClosed;
    /** @type {?} */
    SysFarrisLookupComponent.prototype.dataUri;
    /** @type {?} */
    SysFarrisLookupComponent.prototype.columns;
    /** @type {?} */
    SysFarrisLookupComponent.prototype.selectedData;
    /** @type {?} */
    SysFarrisLookupComponent.prototype.farrisSelectedData;
    /** @type {?} */
    SysFarrisLookupComponent.prototype.farrisLookUp;
    /** @type {?} */
    SysFarrisLookupComponent.prototype.mapFields;
    /**
     * 每次关闭前数据
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.allData;
    /** @type {?} */
    SysFarrisLookupComponent.prototype.i18nRes;
    /**
     * 帮助前事件,强行传递过滤条件
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.beforeOpen;
    /**
     * 帮助关闭前事件,目前无论是否都会继续走afterOk映射事件
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.dictPicked;
    /**
     * 帮助映射后事件
     * @type {?}
     */
    SysFarrisLookupComponent.prototype.afterOk;
    /** @type {?} */
    SysFarrisLookupComponent.prototype.onOkClick;
    /** @type {?} */
    SysFarrisLookupComponent.prototype.sysUtil;
    /** @type {?} */
    SysFarrisLookupComponent.prototype.localService;
}
//# sourceMappingURL=data:application/json;base64,