/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { SysHelpService } from './../service/sys-help.service';
import { Component, Input, EventEmitter, Output, ViewChild } from '@angular/core';
import { LookupGridComponent, ServerSideToken } from '@farris/ui-lookup';
import { SysCommonUtilService } from '@gsp-sys/sysmgr-common';
import { sysOrgHelp, posGroupHelp, roleGroupHelp, userGroupHelp } from '../help-meta/sys-help-meta';
import { SysFarrisLookupService } from '../service/sys-farris-lookup.service';
import { of } from 'rxjs';
import { SysLocaleService } from '../../locale/sys-locale.service';
import { HELP_LOCALE_ZHCHS } from '../../locale/locales/zh-cn/help';
import { map } from 'rxjs/operators';
export class SysFarrisTreeHelpComponent {
    /**
     * @param {?} sysUtil
     * @param {?} localService
     * @param {?} sysHelpService
     */
    constructor(sysUtil, localService, sysHelpService) {
        this.sysUtil = sysUtil;
        this.localService = localService;
        this.sysHelpService = sysHelpService;
        /**
         * 是否只读
         */
        this.disabled = false;
        /**
         * 是否分层加载组织
         */
        this.async = false;
        /**
         * 是否单选
         */
        this.singleSelect = true;
        /**
         * 打开帮助后是否有选中数据
         */
        this.enableToSelect = true;
        /**
         * 启用关闭前事件
         */
        this.useBeforeCloseEvent = false;
        /**
         * 是否开始数据权限过滤
         */
        this.withPermission = false;
        /**
         * 帮助选择后事件
         */
        this.afterConfirm = new EventEmitter();
        /**
         * 清空后事件-暂时不用
         */
        this.clear = new EventEmitter();
        this.showAllPathOrg = false;
        this.mapFields = { id: 'id', name: 'name' };
        this.allData = [];
        /**
         * 帮助前事件,强行传递过滤条件
         */
        this.beforeOpen = (/**
         * @param {?} arg
         * @return {?}
         */
        (arg) => {
            //如果有过滤条件，附加到url路径
            /** @type {?} */
            let farrisSelectedData = [];
            /** @type {?} */
            let selectedData = [];
            /** @type {?} */
            let temp = 0;
            if (this.bindingData != null && this.bindingData.id != null && this.bindingData.id != "") {
                selectedData = this.bindingData.id.split(',');
                /** @type {?} */
                let selectedDataName = this.bindingData.name.split(',');
                selectedData.forEach((/**
                 * @param {?} item
                 * @return {?}
                 */
                item => {
                    farrisSelectedData.push({ "id": item, "name": selectedDataName[temp] });
                    temp = temp + 1;
                }));
            }
            return of({
                showDialog: true,
                data: {
                    filter: this.filter,
                    allData: this.allData,
                    farrisSelectedData: farrisSelectedData
                }
            });
        });
        /**
         * 帮助关闭前事件,目前无论是否都会继续走afterOk映射事件
         */
        this.dictPicked = (/**
         * @param {?} arg
         * @return {?}
         */
        (arg) => {
            if (this.useBeforeCloseEvent && this.beforeClose) {
                return this.beforeClose(arg).pipe(map((/**
                 * @param {?} val
                 * @return {?}
                 */
                val => {
                    // 如果能关闭，调用后事件
                    if (val.closeDialog) {
                        this.afterConfirm.next(arg);
                    }
                    return val;
                })));
            }
            else {
                return of({ closeDialog: true });
            }
        });
        /**
         * 帮助映射后事件
         */
        this.afterOk = (/**
         * @param {?} helpdata
         * @param {?} mapfields
         * @return {?}
         */
        (helpdata, mapfields) => {
            // 如果启用了关闭前校验事件，不走这里
            if (this.useBeforeCloseEvent) {
                return;
            }
            if (helpdata) {
                // 多选的话需要处理,帮助已逗号为间隔
                if (!this.singleSelect) {
                    /** @type {?} */
                    const idList = helpdata.map((/**
                     * @param {?} item
                     * @return {?}
                     */
                    item => item.id));
                    /** @type {?} */
                    const nameList = helpdata.map((/**
                     * @param {?} item
                     * @return {?}
                     */
                    item => item.name));
                    this.bindingData.id = idList.join();
                    this.bindingData.name = nameList.join();
                    this.displayTxt = this.bindingData.name;
                    this.afterConfirm.next(helpdata);
                }
                else {
                    // 帮助显示
                    this.displayTxt = helpdata.name;
                    if (this.showAllPathOrg) {
                        this.sysHelpService.getParentOrg(helpdata).subscribe((/**
                         * @param {?} items
                         * @return {?}
                         */
                        items => {
                            if (items && items.length > 0) {
                                helpdata.allPathOrg = items;
                            }
                            this.afterConfirm.next(helpdata);
                            console.log(helpdata);
                        }));
                    }
                    else {
                        this.afterConfirm.next(helpdata);
                    }
                }
            }
            else { // 目前清空会走这里，而且两次
                // 触发事件
                this.afterConfirm.next(helpdata);
                console.log(helpdata);
            }
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.localService) {
            this.i18nRes = this.localService.getComponentOpt('help');
        }
        else {
            this.i18nRes = HELP_LOCALE_ZHCHS;
        }
        // 默认不分层加载
        this.treeInfo = {
            loadDataType: 'all',
            layerType: 'parentId',
            dataField: 'treeInfo',
            pathField: 'path',
            layerField: 'layer',
            parentField: 'parentId',
            isDetailField: 'isDetail',
            treeDataIsInit: false
        };
        this.columns = [
            { title: this.i18nRes.codeField, field: 'code', searchField: 'code' },
            { title: this.i18nRes.nameField, field: 'name', searchField: 'name' },
        ];
        // 异步加载的话需要开启这两个开关
        if (this.async) {
            this.treeInfo.loadDataType = 'async';
            this.treeInfo.treeDataIsInit = true;
        }
        // webapi初始
        switch (this.sourceType) {
            case 'org':
                this.dataUri = sysOrgHelp + this.sysUtil.sysOrgWebApi;
                if (!this.title) {
                    this.title = this.i18nRes.userOrgTitle;
                }
                break;
            case 'usergroup':
                this.dataUri = userGroupHelp + this.sysUtil.userGroupWebApi;
                if (!this.title) {
                    this.title = this.i18nRes.userGroupTitle;
                }
                break;
            case 'positiongroup':
                this.dataUri = posGroupHelp + this.sysUtil.posGroupWebApi;
                if (!this.title) {
                    this.title = this.i18nRes.positionGroupTitle;
                }
                break;
            case 'rolegroup':
            default:
                this.dataUri = roleGroupHelp + this.sysUtil.roleGroupWebApi;
                if (!this.title) {
                    this.title = this.i18nRes.roleGroupTitle;
                }
                break;
        }
        // 必须要有，否则初始选中不起作用
        this.farrisLookUp.mapFields = { id: 'id', name: 'name' };
    }
    /**
     * 清空后
     * @param {?} arg
     * @return {?}
     */
    afterClear(arg) {
        this.clear.next(arg);
    }
    /**
     * 手动显示帮助
     * @return {?}
     */
    showHelp() {
        this.farrisLookUp.showDialog();
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    search($event) {
        console.log($event);
    }
}
SysFarrisTreeHelpComponent.decorators = [
    { type: Component, args: [{
                selector: 'sys-farris-tree-help',
                template: "<farris-lookup-grid #farristreelookup\r\n    [(ngModel)]=\"displayTxt\"\r\n    [bindingData]=\"bindingData\"\r\n    [title]=\"title\"\r\n    [remoteSearch]=\"true\"\r\n    [editable]=\"false\"\r\n    [disabled]=\"disabled\"\r\n    [displayType]=\"'TREELIST'\"\r\n    [singleSelect]=\"singleSelect\"\r\n    [enableToSelect]=\"enableToSelect\"\r\n    [uri]=\"dataUri\"\r\n    [columns] = \"columns\"\r\n    [idField]=\"'id'\"\r\n    [treeInfo]=\"treeInfo\"\r\n    [textField]= \"'name'\"\r\n    [valueField]=\"'id'\"\r\n    [mappingFn]= \"afterOk\"\r\n    [mapFields]=\"mapFields\"\r\n    [dictPicking]=\"beforeOpen\"\r\n    [dictPicked]=\"dictPicked\"\r\n    (clear)=\"afterClear($event)\"\r\n    (search)=\"search($event)\"\r\n></farris-lookup-grid>",
                providers: [
                    { provide: ServerSideToken, useClass: SysFarrisLookupService }
                ],
                styles: [""]
            }] }
];
/** @nocollapse */
SysFarrisTreeHelpComponent.ctorParameters = () => [
    { type: SysCommonUtilService },
    { type: SysLocaleService },
    { type: SysHelpService }
];
SysFarrisTreeHelpComponent.propDecorators = {
    disabled: [{ type: Input }],
    title: [{ type: Input }],
    async: [{ type: Input }],
    sourceType: [{ type: Input }],
    singleSelect: [{ type: Input }],
    displayTxt: [{ type: Input }],
    bindingData: [{ type: Input }],
    filter: [{ type: Input }],
    enableToSelect: [{ type: Input }],
    useBeforeCloseEvent: [{ type: Input }],
    beforeClose: [{ type: Input }],
    withPermission: [{ type: Input }],
    afterConfirm: [{ type: Output }],
    clear: [{ type: Output }],
    showAllPathOrg: [{ type: Input }],
    farrisLookUp: [{ type: ViewChild, args: ['farristreelookup',] }]
};
if (false) {
    /**
     * 是否只读
     * @type {?}
     */
    SysFarrisTreeHelpComponent.prototype.disabled;
    /**
     * 标题
     * @type {?}
     */
    SysFarrisTreeHelpComponent.prototype.title;
    /**
     * 是否分层加载组织
     * @type {?}
     */
    SysFarrisTreeHelpComponent.prototype.async;
    /**
     * 取数源
     * @type {?}
     */
    SysFarrisTreeHelpComponent.prototype.sourceType;
    /**
     * 是否单选
     * @type {?}
     */
    SysFarrisTreeHelpComponent.prototype.singleSelect;
    /**
     * 绑定到帮助上的数据，初始显示值用
     * @type {?}
     */
    SysFarrisTreeHelpComponent.prototype.displayTxt;
    /**
     * 存储帮助选择的对象
     * @type {?}
     */
    SysFarrisTreeHelpComponent.prototype.bindingData;
    /**
     * 过滤条件
     * @type {?}
     */
    SysFarrisTreeHelpComponent.prototype.filter;
    /**
     * 打开帮助后是否有选中数据
     * @type {?}
     */
    SysFarrisTreeHelpComponent.prototype.enableToSelect;
    /**
     * 启用关闭前事件
     * @type {?}
     */
    SysFarrisTreeHelpComponent.prototype.useBeforeCloseEvent;
    /** @type {?} */
    SysFarrisTreeHelpComponent.prototype.beforeClose;
    /**
     * 是否开始数据权限过滤
     * @type {?}
     */
    SysFarrisTreeHelpComponent.prototype.withPermission;
    /**
     * 帮助选择后事件
     * @type {?}
     */
    SysFarrisTreeHelpComponent.prototype.afterConfirm;
    /**
     * 清空后事件-暂时不用
     * @type {?}
     */
    SysFarrisTreeHelpComponent.prototype.clear;
    /** @type {?} */
    SysFarrisTreeHelpComponent.prototype.showAllPathOrg;
    /** @type {?} */
    SysFarrisTreeHelpComponent.prototype.farrisLookUp;
    /** @type {?} */
    SysFarrisTreeHelpComponent.prototype.mapFields;
    /** @type {?} */
    SysFarrisTreeHelpComponent.prototype.dataUri;
    /** @type {?} */
    SysFarrisTreeHelpComponent.prototype.columns;
    /** @type {?} */
    SysFarrisTreeHelpComponent.prototype.treeInfo;
    /** @type {?} */
    SysFarrisTreeHelpComponent.prototype.allData;
    /** @type {?} */
    SysFarrisTreeHelpComponent.prototype.i18nRes;
    /**
     * 帮助前事件,强行传递过滤条件
     * @type {?}
     */
    SysFarrisTreeHelpComponent.prototype.beforeOpen;
    /**
     * 帮助关闭前事件,目前无论是否都会继续走afterOk映射事件
     * @type {?}
     */
    SysFarrisTreeHelpComponent.prototype.dictPicked;
    /**
     * 帮助映射后事件
     * @type {?}
     */
    SysFarrisTreeHelpComponent.prototype.afterOk;
    /** @type {?} */
    SysFarrisTreeHelpComponent.prototype.sysUtil;
    /** @type {?} */
    SysFarrisTreeHelpComponent.prototype.localService;
    /** @type {?} */
    SysFarrisTreeHelpComponent.prototype.sysHelpService;
}
//# sourceMappingURL=data:application/json;base64,