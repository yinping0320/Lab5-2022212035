/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { from } from 'rxjs';
import { HttpClient } from '@angular/common/http';
import { SysCommonUtilService, SysDataUtil } from '@gsp-sys/sysmgr-common';
import { map } from 'rxjs/operators';
export class SysHelpService {
    /**
     * @param {?} http
     * @param {?} sysUtil
     */
    constructor(http, sysUtil) {
        this.http = http;
        this.sysUtil = sysUtil;
    }
    /**
     * @private
     * @param {?} filter
     * @return {?}
     */
    getHttpOption(filter) {
        SysDataUtil.deleteEmpty(filter);
        /** @type {?} */
        const paramStr = JSON.stringify(filter);
        /** @type {?} */
        const opt = {
            headers: this.sysUtil.getHeader()['headers'],
            params: { param: paramStr }
        };
        return opt;
    }
    /**
     * @param {?} filter
     * @return {?}
     */
    getUsers(filter) {
        /** @type {?} */
        const opt = this.getHttpOption(filter);
        // 用户目前的有分页信息
        return this.http.get(this.sysUtil.userWebApi, opt).pipe(map((/**
         * @param {?} val
         * @return {?}
         */
        (val) => {
            return val.data;
        })));
    }
    /**
     * @param {?} filter
     * @return {?}
     */
    getPositions(filter) {
        /** @type {?} */
        const opt = this.getHttpOption(filter);
        return this.http.get(this.sysUtil.positionWebApi, opt).pipe(map((/**
         * @param {?} val
         * @return {?}
         */
        (val) => {
            return val.data;
        })));
    }
    /**
     * @param {?} filter
     * @return {?}
     */
    getRoles(filter) {
        /** @type {?} */
        const opt = this.getHttpOption(filter);
        return this.http.get(this.sysUtil.roleWebApi, opt).pipe(map((/**
         * @param {?} val
         * @return {?}
         */
        (val) => {
            return val.data;
        })));
    }
    /**
     * @param {?} filter
     * @return {?}
     */
    getOrgs(filter) {
        /** @type {?} */
        const opt = this.getHttpOption(filter);
        // 视图
        opt.params.useView = true;
        return this.handerTreeData(this.http.get(this.sysUtil.sysOrgWebApi + '/all', opt));
    }
    /**
     * @param {?} filter
     * @return {?}
     */
    getUserGroups(filter) {
        /** @type {?} */
        const opt = this.getHttpOption(filter);
        return this.handerTreeData(this.http.get(this.sysUtil.userGroupWebApi + '/all', opt));
    }
    /**
     * @param {?} filter
     * @return {?}
     */
    getPositionGroups(filter) {
        /** @type {?} */
        const opt = this.getHttpOption(filter);
        return this.handerTreeData(this.http.get(this.sysUtil.posGroupWebApi + '/all', opt));
    }
    /**
     * @param {?} filter
     * @return {?}
     */
    getRoleGroups(filter) {
        /** @type {?} */
        const opt = this.getHttpOption(filter);
        return this.handerTreeData(this.http.get(this.sysUtil.roleGroupWebApi + '/all', opt));
    }
    /**
     * @param {?} item
     * @return {?}
     */
    convert2Json(item) {
        /** @type {?} */
        const result = {
            id: item.id,
            code: item.code,
            name: item.name,
            parentId: item.parentId || '',
            path: item.path,
            layer: item.layer,
            isDetail: item.isDetail,
        };
        if (item.nodeType != null && item.nodeType !== undefined) {
            result.nodeType = item.nodeType;
        }
        return result;
    }
    /**
     * @param {?} org
     * @return {?}
     */
    getParentOrg(org) {
        /** @type {?} */
        const paramStr = JSON.stringify(this.convert2Json(org));
        /** @type {?} */
        const opt = {
            headers: this.sysUtil.getHeader()['headers'],
            params: { param: paramStr }
        };
        return this.http.get(this.sysUtil.sysOrgWebApi + '/getparentorg/0002', opt).pipe(map((/**
         * @param {?} val
         * @return {?}
         */
        (val) => {
            return val;
        })));
    }
    /**
     * 适配Kendo-treeView结构
     * @private
     * @param {?} src
     * @return {?}
     */
    handerTreeData(src) {
        return src.pipe(map((/**
         * @param {?} val
         * @return {?}
         */
        (val) => {
            from(val).subscribe((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                if (item.layer == 1 || item.parentId == null || item.parentId === '') {
                    item.parentId = undefined;
                }
            }));
            return val;
        })));
    }
}
SysHelpService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
SysHelpService.ctorParameters = () => [
    { type: HttpClient },
    { type: SysCommonUtilService }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    SysHelpService.prototype.http;
    /**
     * @type {?}
     * @private
     */
    SysHelpService.prototype.sysUtil;
}
//# sourceMappingURL=data:application/json;base64,