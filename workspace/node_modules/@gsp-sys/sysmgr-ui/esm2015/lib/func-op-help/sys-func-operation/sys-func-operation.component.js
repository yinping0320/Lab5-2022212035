/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, EventEmitter, ViewChild, TemplateRef, Input } from '@angular/core';
import { SysFuncOperationService } from '../service/sys-func-operation.service';
/**
 * 系统管理：功能操作左树有、右列表展示
 */
export class SysFuncOperationComponent {
    /**
     * @param {?} funcOpService
     */
    constructor(funcOpService) {
        this.funcOpService = funcOpService;
        /**
         * 是否只显示分组
         */
        this.onlyShowGroup = false;
        /**
         * 确认事件
         */
        this.afterConfirm = new EventEmitter();
        /**
         * 关闭事件
         */
        this.afterCancle = new EventEmitter();
        /**
         * 当前选中数据
         */
        this.curSelectedKeys = [];
        this.title = '功能操作帮助';
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @return {?}
     */
    loadData() {
        this.selectableSettings = {
            checkboxOnly: true,
            // 默认单选
            mode: !this.gridSelectMode ? 'single' : this.gridSelectMode,
            enabled: true
        };
        this.funcOpService.getFuncOperations().subscribe((/**
         * @param {?} res
         * @return {?}
         */
        res => {
            this.data = [];
            /** @type {?} */
            const funcList = res;
            if (this.onlyShowGroup) {
                this.data = funcList.filter((/**
                 * @param {?} item
                 * @return {?}
                 */
                item => item.type == 0));
            }
            else {
                this.data = funcList;
            }
            // funcList.forEach(item => {
            //     this.data.push(item);
            //     // 如果有明细节点
            //     if (this.onlyShowGroup === false && item['children'] !== null && item['children'].length > 0) {
            //         item['children'].forEach(child => this.data.push(child));
            //     }
            // });
            this.gridData = [];
            // 复制一份
            this.gridData = this.data.concat();
        }), (/**
         * @param {?} error
         * @return {?}
         */
        error => {
            console.log('获取功能操作对象列表失败');
        }));
    }
    /**
     * 搜索
     * @param {?} filterValue 查询条件
     * @return {?}
     */
    searchData(filterValue) {
        // 测试
        if (filterValue === null || filterValue === '') {
            // 全量的数据
            this.gridData = this.data.concat();
            return;
        }
        /** @type {?} */
        const filter = filterValue.toLowerCase();
        // 搜索到上级时
        this.gridData = this.data.filter((/**
         * @param {?} item
         * @return {?}
         */
        item => item['code'].toLowerCase().includes(filter) ||
            item['name'].toLowerCase().includes(filter) ||
            this.getFuncGroup(item).toLowerCase().includes(filter)));
    }
    /**
     * 业务对象变化后
     * @param {?} arg 业务对象参数
     * @return {?}
     */
    bizObjectChanged(arg) {
        if (!this.data || this.data.length === 0) {
            return;
        }
        /** @type {?} */
        const busId = arg;
        // 根据业务对象过滤
        this.gridData = this.data.filter((/**
         * @param {?} item
         * @return {?}
         */
        item => item['businessId'] === busId));
    }
    /**
     * 获取功能分组
     * @param {?} funcOpObj
     * @return {?}
     */
    getFuncGroup(funcOpObj) {
        // 获取父节点
        /** @type {?} */
        const parentId = funcOpObj['parentId'];
        if (parentId !== null && parentId !== undefined && parentId !== '') {
            /** @type {?} */
            const parentObj = this.data.filter((/**
             * @param {?} item
             * @return {?}
             */
            item => item['id'] === parentId));
            if (parentObj !== null && parentObj.length > 0) {
                return parentObj[0]['name'];
            }
        }
        else {
            return '无';
        }
    }
    /**
     * 获取选中数据
     * @return {?}
     */
    getSelectedObject() {
        /** @type {?} */
        const result = this.data.filter((/**
         * @param {?} item
         * @return {?}
         */
        item => this.curSelectedKeys.findIndex((/**
         * @param {?} select
         * @return {?}
         */
        select => select === item['id'])) >= 0));
        return result;
    }
    /**
     * 确认
     * @return {?}
     */
    confirm() {
        /** @type {?} */
        const result = this.getSelectedObject();
        this.afterConfirm.next(result);
        // 取消-目的是在这里让模态框消失
        this.cancle();
    }
    /**
     * 取消
     * @return {?}
     */
    cancle() {
        this.afterCancle.next();
    }
}
SysFuncOperationComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-sys-func-operation',
                template: "<div class=\"d-flex flex-row\" style=\"\r\nwidth: 800px; \r\nborder:2px;\r\nposition:absolute;\r\ntop:0px;\r\nbottom: 0px;\r\nright:0px;\r\nleft:0px;\r\noverflow: hidden;\r\nheight: 100%;\">\r\n  <div class=\"flex-fill\">\r\n    <kendo-splitter style=\"height:100%\" orientation=\"horizontal\">\r\n      <kendo-splitter-pane size=\"40%\" min=\"20%\" max=\"50%\">\r\n        <div class=\"d-flex flex-column flex-fill\" style=\"height:100%\">\r\n          <div class=\"p-2\" style=\"height: 35px;\">\r\n            <h5>\u4E1A\u52A1\u5BF9\u8C61</h5>\r\n            <hr class=\"m-0 p-0\" />\r\n          </div>\r\n          <div class=\"flex-fill\" style=\"overflow: auto;\">\r\n            <app-biz-object [bizObjectId]=\"bizObjectId\" (bizObjectChanged)=\"bizObjectChanged($event)\"></app-biz-object>\r\n          </div>\r\n        </div>\r\n      </kendo-splitter-pane>\r\n      <kendo-splitter-pane>\r\n        <div class=\"d-flex flex-column flex-fill\" style=\"height:100%\">\r\n          <div class=\"p-2\" style=\"height: 35px;\">\r\n            <h5>\u529F\u80FD\u64CD\u4F5C</h5>\r\n            <hr class=\"m-0 p-0\" />\r\n          </div>\r\n          <div class=\"clearfix mt-1 mb-1 ml-1\">\r\n            <input #filter placeholder=\"\u8F93\u5165\u7F16\u53F7\u6216\u540D\u79F0\u67E5\u627E\" type=\"text\" />\r\n            <button class=\"btn btn-sm btn-default\" (click)=\"searchData(filter.value)\">\u67E5\u627E</button>\r\n          </div>\r\n          <div class=\"d-flex flex-fill\" style=\"position:relative;\">\r\n            <kendo-grid [class]=\"'flex-fill'\" [selectable]=\"selectableSettings\" [kendoGridBinding]=\"gridData\"\r\n              [kendoGridSelectBy]=\"'id'\" [selectedKeys]=\"curSelectedKeys\">\r\n              <kendo-grid-checkbox-column width=\"40\"></kendo-grid-checkbox-column>\r\n              <kendo-grid-column field=\"code\" title=\"\u7F16\u53F7\"></kendo-grid-column>\r\n              <kendo-grid-column field=\"name\" title=\"\u540D\u79F0\"></kendo-grid-column>\r\n              <kendo-grid-column *ngIf=\"!onlyShowGroup\" title=\"\u529F\u80FD\u5206\u7EC4\">\r\n                <ng-template kendoGridCellTemplate let-dataItem>\r\n                  {{getFuncGroup(dataItem)}}\r\n                </ng-template>\r\n              </kendo-grid-column>\r\n            </kendo-grid>\r\n          </div>\r\n        </div>\r\n      </kendo-splitter-pane>\r\n    </kendo-splitter>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #btnOkAndCancle>\r\n  <button class=\"btn btn-sm btn-primary\" (click)=\"confirm()\">\u786E\u8BA4</button>\r\n  <button class=\"btn btn-sm btn-default\" (click)=\"cancle()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
SysFuncOperationComponent.ctorParameters = () => [
    { type: SysFuncOperationService }
];
SysFuncOperationComponent.propDecorators = {
    bizObjectId: [{ type: Input }],
    gridSelectMode: [{ type: Input }],
    sessionId: [{ type: Input }],
    onlyShowGroup: [{ type: Input }],
    isGroupCanSelected: [{ type: Input }],
    afterConfirm: [{ type: Output }],
    afterCancle: [{ type: Output }],
    btnOkAndCancleRef: [{ type: ViewChild, args: ['btnOkAndCancle',] }]
};
if (false) {
    /**
     * 业务对象,负责传递
     * @type {?}
     */
    SysFuncOperationComponent.prototype.bizObjectId;
    /**
     * 选择模式
     * @type {?}
     */
    SysFuncOperationComponent.prototype.gridSelectMode;
    /**
     * sessionId
     * @type {?}
     */
    SysFuncOperationComponent.prototype.sessionId;
    /**
     * 是否只显示分组
     * @type {?}
     */
    SysFuncOperationComponent.prototype.onlyShowGroup;
    /**
     * 分组能否被选择
     * @type {?}
     */
    SysFuncOperationComponent.prototype.isGroupCanSelected;
    /**
     * 确认事件
     * @type {?}
     */
    SysFuncOperationComponent.prototype.afterConfirm;
    /**
     * 关闭事件
     * @type {?}
     */
    SysFuncOperationComponent.prototype.afterCancle;
    /** @type {?} */
    SysFuncOperationComponent.prototype.btnOkAndCancleRef;
    /**
     * 功能操作全量数据
     * @type {?}
     */
    SysFuncOperationComponent.prototype.data;
    /**
     * 当前UI显示动能操作列表数据
     * @type {?}
     */
    SysFuncOperationComponent.prototype.gridData;
    /**
     * 当前选中数据
     * @type {?}
     */
    SysFuncOperationComponent.prototype.curSelectedKeys;
    /** @type {?} */
    SysFuncOperationComponent.prototype.selectableSettings;
    /** @type {?} */
    SysFuncOperationComponent.prototype.title;
    /**
     * @type {?}
     * @private
     */
    SysFuncOperationComponent.prototype.funcOpService;
}
//# sourceMappingURL=data:application/json;base64,