/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { SYS_LOCALES } from './locales';
import { LanguageService } from '@ecp-caf/caf-common';
export class SysLocaleService {
    /**
     * @param {?} lang
     */
    constructor(lang) {
        this.lang = lang;
        /** @type {?} */
        let localeId = 'zh-CHS';
        if (lang) {
            localeId = lang.getLanguageCode();
        }
        this.langData = SYS_LOCALES[localeId];
        if (!this.langData) {
            this.langData = SYS_LOCALES['zh-CHS'];
        }
        console.log(localeId);
        console.log(this.langData);
    }
    /**
     * @param {?} comp
     * @return {?}
     */
    getComponentOpt(comp) {
        return this.langData[comp];
    }
}
SysLocaleService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
SysLocaleService.ctorParameters = () => [
    { type: LanguageService }
];
if (false) {
    /** @type {?} */
    SysLocaleService.prototype.langData;
    /**
     * @type {?}
     * @private
     */
    SysLocaleService.prototype.lang;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3lzLWxvY2FsZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1zeXMvc3lzbWdyLXVpLyIsInNvdXJjZXMiOlsibGliL2xvY2FsZS9zeXMtbG9jYWxlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDeEMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBR3RELE1BQU0sT0FBTyxnQkFBZ0I7Ozs7SUFFekIsWUFDWSxJQUFvQjtRQUFwQixTQUFJLEdBQUosSUFBSSxDQUFnQjs7WUFFeEIsUUFBUSxHQUFHLFFBQVE7UUFDdkIsSUFBSSxJQUFJLEVBQUU7WUFDTixRQUFRLEdBQUcsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1NBQ3JDO1FBQ0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDaEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDekM7UUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3RCLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQy9CLENBQUM7Ozs7O0lBRUQsZUFBZSxDQUFDLElBQVk7UUFDeEIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9CLENBQUM7OztZQXBCSixVQUFVOzs7O1lBRkYsZUFBZTs7OztJQUlwQixvQ0FBYzs7Ozs7SUFFVixnQ0FBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3QsIExPQ0FMRV9JRCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTWVNfTE9DQUxFUyB9IGZyb20gJy4vbG9jYWxlcyc7XHJcbmltcG9ydCB7IExhbmd1YWdlU2VydmljZSB9IGZyb20gJ0BlY3AtY2FmL2NhZi1jb21tb24nO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgU3lzTG9jYWxlU2VydmljZSB7XHJcbiAgICBsYW5nRGF0YTogYW55O1xyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHJpdmF0ZSBsYW5nOkxhbmd1YWdlU2VydmljZVxyXG4gICAgKSB7XHJcbiAgICAgICAgbGV0IGxvY2FsZUlkID0gJ3poLUNIUyc7XHJcbiAgICAgICAgaWYgKGxhbmcpIHtcclxuICAgICAgICAgICAgbG9jYWxlSWQgPSBsYW5nLmdldExhbmd1YWdlQ29kZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmxhbmdEYXRhID0gU1lTX0xPQ0FMRVNbbG9jYWxlSWRdO1xyXG4gICAgICAgIGlmICghdGhpcy5sYW5nRGF0YSkge1xyXG4gICAgICAgICAgICB0aGlzLmxhbmdEYXRhID0gU1lTX0xPQ0FMRVNbJ3poLUNIUyddO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zb2xlLmxvZyhsb2NhbGVJZCk7XHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5sYW5nRGF0YSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q29tcG9uZW50T3B0KGNvbXA6IHN0cmluZyk6IGFueSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubGFuZ0RhdGFbY29tcF07XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==