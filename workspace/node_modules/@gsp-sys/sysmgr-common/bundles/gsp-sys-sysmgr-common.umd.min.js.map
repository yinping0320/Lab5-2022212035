{"version":3,"sources":["ng://@gsp-sys/sysmgr-common/lib/service/sys-manager-util.service.ts","ng://@gsp-sys/sysmgr-common/lib/config/sys-security-config.service.ts","ng://@gsp-sys/sysmgr-common/lib/syscommon.module.ts","ng://@gsp-sys/sysmgr-common/lib/util/result-package.ts","ng://@gsp-sys/sysmgr-common/lib/util/gsp-sec-setting.ts","ng://@gsp-sys/sysmgr-common/lib/util/sys-data-util.ts","ng://@gsp-sys/sysmgr-common/lib/util/sys-position-func-op.ts","ng://@gsp-sys/sysmgr-common/lib/util/sys-role-func-op.ts","ng://@gsp-sys/sysmgr-common/lib/util/sys-user-func-op.ts","ng://@gsp-sys/sysmgr-common/lib/enum/position-type.enum.ts","ng://@gsp-sys/sysmgr-common/lib/util/sys-action-util.ts"],"names":["SysCommonUtilService","sessionService","this","apiPath","userWebApi","secLevelWebApi","userLimitWebApi","userPositionWebApi","userPositionOrgWebApi","sysOrgWebApi","positionWebApi","roleWebApi","positionRoleWebApi","operationWebApi","userGroupWebApi","posGroupWebApi","roleGroupWebApi","authFieldDesignWebApi","authFieldAssignWebApi","sysFuncOpPermissionWebapi","sysSecurityApi","prototype","getSessionId","getUserSessionId","getHeader","headers","Content-Type","Access-Control-Allow-Origin","SessionId","Injectable","SessionService","SysSecurityConfigService","http","sysUtil","isOnSecurity","url","get","pipe","map","res","getCurrentUserAppConfig","menuId","getAppConfigByUserType","type","args","providedIn","HttpClient","SysCommonModule","NgModule","declarations","imports","CommonModule","HttpClientModule","exports","providers","ResultPackage","check","removingResults","Array","addingResults","ownerAuditEntity","id","code","name","addingEntity","removingEntity","allFlag","GspSecSetting","funcObj","userType","funcOp","funcPage","canMgrUserTypeScope","SysDataUtil","getGuid","S4","Math","random","toString","substring","deleteEmpty","obj","key","undefined","PositionFuncOp","opList","Add","Edit","Delete","AssUser","AssRole","AssDataAuth","AssBizOrg","RoleFuncOp","AssPosition","AssOp","UserFuncOp","State","orgPos","generalPos","hidenOrgPos","None"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { SessionService } from '@ecp-caf/caf-common';\r\n\r\n/**\r\n * ç³»ç»ç®¡çå¬å±sessionãwebapiç­å¬ç¨æ¹æ³\r\n */\r\n@Injectable()\r\nexport class SysCommonUtilService {\r\n\r\n    /** ç¨æ·webapi */\r\n    public readonly userWebApi: string;\r\n    /** ç¨æ·å¯çº§å­å¸webapi */\r\n    public readonly secLevelWebApi: string;\r\n    /** ç»å½éå¶ */\r\n    public readonly userLimitWebApi: string;\r\n    /** ç¨æ·ç»ç»å²ä½å³ç³»webapi */\r\n    public readonly userPositionWebApi: string;\r\n    /** ç¨æ·éç¨å²ä½ä¸å¡ç»ç»å³ç³»webapi */\r\n    public readonly userPositionOrgWebApi: string;\r\n    /** ç³»ç»ç»ç»webapi */\r\n    public readonly sysOrgWebApi: string;\r\n    /** å²ä½webapi */\r\n    public readonly positionWebApi: string;\r\n    /** åè½ç»webapi */\r\n    public readonly roleWebApi: string;\r\n    /** åè½ç»åå²ä½å³ç³»webapi */\r\n    public readonly positionRoleWebApi: string;\r\n    /** åè½æä½webapi */\r\n    public readonly operationWebApi: string;\r\n    /** ç¨æ·åç»webapi */\r\n    public readonly userGroupWebApi: string;\r\n    /** å²ä½åç»webapi */\r\n    public readonly posGroupWebApi: string;\r\n    /** åè½ç»åç»webapi */\r\n    public readonly roleGroupWebApi: string;\r\n    /** æéå­æ®µå®ä¹æ¶webapi */\r\n    public readonly authFieldDesignWebApi: string;\r\n    /** æéå­æ®µåéæ¶webapi */\r\n    public readonly authFieldAssignWebApi: string;\r\n    public readonly sysFuncOpPermissionWebapi: string;\r\n    /** ä¿å¯æµè¯ç¸å³ */\r\n    public readonly sysSecurityApi: string;\r\n\r\n    constructor (\r\n        private sessionService: SessionService\r\n    ) {\r\n        const apiPath = '/api/runtime/sys/v1.0';\r\n        this.userWebApi = apiPath + '/users';\r\n        this.secLevelWebApi = apiPath + '/seclevels';\r\n        this.userLimitWebApi = apiPath + '/userLimit';\r\n        this.userPositionWebApi = apiPath + '/user-position';\r\n        this.userPositionOrgWebApi = apiPath + '/user-position-org';\r\n        this.sysOrgWebApi = apiPath + '/sysOrgs';\r\n        this.positionWebApi = apiPath + '/positions';\r\n        this.roleWebApi = apiPath + '/roles';\r\n        this.positionRoleWebApi = apiPath + '/position-role';\r\n        this.operationWebApi = apiPath + '/funcOperations';\r\n        this.userGroupWebApi = apiPath + '/usergroups';\r\n        this.posGroupWebApi = apiPath + '/posgroups';\r\n        this.roleGroupWebApi = apiPath + '/rolegroups';\r\n        this.authFieldDesignWebApi = apiPath + '/authfields';\r\n        this.authFieldAssignWebApi = apiPath + '/assignresults';\r\n        this.sysFuncOpPermissionWebapi = apiPath + '/sysFuncOpPermission';\r\n        this.sysSecurityApi = apiPath + '/secmgrset';\r\n    }\r\n\r\n    /**\r\n     * è·åå½åç¨æ·çsessionId\r\n     */\r\n    public getSessionId (): string {\r\n        return this.sessionService.getUserSessionId();\r\n    }\r\n\r\n    /**\r\n     * æé Header\r\n     */\r\n    public getHeader (): any {\r\n        const options: any = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                SessionId: this.getSessionId()\r\n            }\r\n        };\r\n        return options;\r\n    }\r\n}\r\n\r\n","import { SysCommonUtilService } from '../service/sys-manager-util.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n/** ä¿å¯æµè¯æå¡ç±» */\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SysSecurityConfigService {\r\n\r\n    constructor (\r\n        private http: HttpClient,\r\n        private sysUtil: SysCommonUtilService\r\n    ) { }\r\n\r\n    /** æ¯å¦å¼å¯ä¸å */\r\n    public isOnSecurity (): Observable<boolean> {\r\n        const url = this.sysUtil.sysSecurityApi + '/useSecurity';\r\n        return this.http.get(url, this.sysUtil.getHeader()).pipe(map((res: any) => res as boolean));\r\n    }\r\n\r\n    /**\r\n     * æ ¹æ®å½åç»å½ç¨æ·è·åä¿å¯æµè¯çåè½éç½®èå´\r\n     * @param menuId åè½æ è¯\r\n     */\r\n    getCurrentUserAppConfig(menuId: string): Observable<any> {\r\n        const url = this.sysUtil.sysSecurityApi + '/funcobj/' + menuId;\r\n        return this.http.get(url, this.sysUtil.getHeader());\r\n    }\r\n\r\n    /**\r\n     * æ ¹æ®æå®ç¨æ·ç±»å«è·åçé¢æ¾ç¤ºä¿¡æ¯-,ç®ååªä¼ étype=\"alluser\"ä½¿ç¨\r\n     * @param menuId åè½æ è¯\r\n     */\r\n    getAppConfigByUserType(menuId: string, type: string): Observable<any> {\r\n        const url = this.sysUtil.sysSecurityApi + '/funcobj/' + menuId + '/' + type;\r\n        return this.http.get(url, this.sysUtil.getHeader());\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SysCommonUtilService } from './service/sys-manager-util.service';\r\nimport { SessionService } from '@ecp-caf/caf-common';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SysSecurityConfigService } from './config/sys-security-config.service';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        HttpClientModule\r\n    ],\r\n    exports: [],\r\n    providers: [\r\n        SessionService,\r\n        SysCommonUtilService,\r\n        SysSecurityConfigService]\r\n})\r\nexport class SysCommonModule { }\r\n","import { NameEntity } from './name-entity';\r\n\r\n/** äºåå³ç³»å®ä½å¢éå */\r\nexport class ResultPackage {\r\n\r\n    constructor() {\r\n        this.removingResults = new Array<string>();\r\n        this.addingResults = new Array<string>();\r\n        this.ownerAuditEntity = { id: null, code: null, name: null };\r\n        this.addingEntity = new Array<NameEntity>();\r\n        this.removingEntity = new Array<NameEntity>();\r\n        this.allFlag = '0';\r\n    }\r\n    /** ä¸»ä½åç  */\r\n    ownerId: string;\r\n    /** ææçå®¢ä½å é¤åè¡¨ */\r\n    removingResults: Array<string>;\r\n    /** ææçå®¢ä½å¢å åè¡¨ */\r\n    addingResults: Array<string>;\r\n    /** ä¸»ä½æè¿° */\r\n    ownerAuditEntity: NameEntity;\r\n    /** æ°å¢å®¢ä½æè¿° */\r\n    addingEntity: Array<NameEntity>;\r\n    /** å é¤å®¢ä½æè¿° */\r\n    removingEntity: Array<NameEntity>;\r\n    /** æ¯å¦ææææï¼0=å¦ï¼1=ææ */\r\n    allFlag: string;\r\n    /** * æ¯å¦è¿è¡æ ¡éª */\r\n    check = true;\r\n}\r\n","\r\n/**\r\n * ä¿å¯æµè¯ç¸å³éç½®\r\n */\r\nexport class GspSecSetting {\r\n    id: string;\r\n    /**\r\n     * åè½èåæ è¯\r\n     */\r\n    funcObj: string;\r\n    /**\r\n     * ç¨æ·è§è²\r\n     */\r\n    userType: string;\r\n    /**\r\n     * æä½ç±»åï¼viewï¼editç­\r\n     */\r\n    funcOp: string;\r\n    /**\r\n     * åè½éç½®é¡µç­¾\r\n     */\r\n    funcPage: string;\r\n    /**\r\n     * å¯ä»¥ç®¡ççç¨æ·èå´\r\n     */\r\n    canMgrUserTypeScope: string;\r\n\r\n    constructor () {\r\n        this.id = '';\r\n        this.funcObj = '';\r\n        this.userType = '';\r\n        this.funcOp = '';\r\n        this.funcPage = '';\r\n        this.canMgrUserTypeScope = '';\r\n    }\r\n}\r\n","\r\nexport class SysDataUtil {\r\n    /**\r\n     * Guid\r\n     */\r\n    static getGuid (): string {\r\n        function S4 () {\r\n            // tslint:disable-next-line:no-bitwise\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());\r\n    }\r\n\r\n    /**\r\n     * å é¤å¯¹è±¡ä¸­ç©ºçå±æ§\r\n     */\r\n    static deleteEmpty (obj: any) {\r\n        for (let key in obj) {\r\n            if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\r\n                delete obj[key]\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n * å²ä½ç»´æ¤åè½æä½\r\n */\r\nexport class PositionFuncOp {\r\n    /**æ°å¢ */\r\n    static readonly Add = 'Position_Add';\r\n    /**ç¼è¾ */\r\n    static readonly Edit = 'Position_Edit';\r\n    /**å é¤ */\r\n    static readonly Delete = 'Position_Delete';\r\n    /**ææç¨æ· */\r\n    static readonly AssUser = 'Position_AssUser';\r\n    /**ææåè½ç» */\r\n    static readonly AssRole = 'Position_AssRole';\r\n    /**åéæ°æ®æé */\r\n    static readonly AssDataAuth = 'Position_AssDataAuth';\r\n    /**ææä¸å¡ç»ç» */\r\n    static readonly AssBizOrg = 'Position_AssBizOrg';\r\n    /**å²ä½çåè½æä½åè¡¨ */\r\n    static readonly opList = [\r\n        PositionFuncOp.Add,\r\n        PositionFuncOp.Edit,\r\n        PositionFuncOp.Delete,\r\n        PositionFuncOp.AssUser,\r\n        PositionFuncOp.AssRole,\r\n        PositionFuncOp.AssDataAuth,\r\n        PositionFuncOp.AssBizOrg\r\n    ];\r\n}","/**\r\n * åè½ç»ç»´æ¤åè½æä½\r\n */\r\nexport class RoleFuncOp {\r\n    /**æ°å¢ */\r\n    static readonly Add = 'Role_Add';\r\n    /**ç¼è¾ */\r\n    static readonly Edit = 'Role_Edit';\r\n    /**å é¤ */\r\n    static readonly Delete = 'Role_Delete';\r\n    /**ææå²ä½ */\r\n    static readonly AssPosition = 'Role_AssPosition';\r\n    /**ææåè½æä½ */\r\n    static readonly AssOp = 'Role_AssOp';\r\n\r\n    /**åè½ç»çåè½æä½åè¡¨ */\r\n    static readonly opList = [\r\n        RoleFuncOp.Add,\r\n        RoleFuncOp.Edit,\r\n        RoleFuncOp.Delete,\r\n        RoleFuncOp.AssPosition,\r\n        RoleFuncOp.AssOp\r\n    ];\r\n}\r\n","/**\r\n * ç¨æ·ç»´æ¤åè½æä½\r\n */\r\nexport class UserFuncOp {\r\n    /**æ°å¢ */\r\n    static readonly Add = 'User_Add';\r\n    /**ç¼è¾ */\r\n    static readonly Edit = 'User_Edit';\r\n    /**å é¤ */\r\n    static readonly Delete = 'User_Delete';\r\n    /**ææå²ä½ */\r\n    static readonly AssPosition = 'User_AssPosition';\r\n    /**æ°æ®æé */\r\n    static readonly AssDataAuth = 'User_AssDataAuth';\r\n    /**ç¶ææ§å¶ */\r\n    static readonly State = 'User_State';\r\n\r\n    static readonly opList = [\r\n        UserFuncOp.Add,\r\n        UserFuncOp.Edit,\r\n        UserFuncOp.Delete,\r\n        UserFuncOp.AssPosition,\r\n        UserFuncOp.AssDataAuth,\r\n        UserFuncOp.State\r\n    ];\r\n}\r\n","/**\r\n * å²ä½ç±»å«æä¸¾\r\n */\r\nexport enum PositionType {\r\n    /**\r\n     * ç»ç»å²ä½\r\n     */\r\n    orgPos = 0,\r\n    /**\r\n     * éç¨ç»ç»å²ä½\r\n     */\r\n    generalPos,\r\n    /**\r\n     * åé¨éèç»ç»å²ä½-Dev\r\n     */\r\n    hidenOrgPos,\r\n    /**\r\n     * å¶ä»\r\n     */\r\n    None = 99\r\n}\r\n","\r\nexport const SYS_VIEW = 'view';\r\nexport const SYS_ADD = 'add';\r\nexport const SYS_EDIT = 'edit';\r\nexport const SYS_SAVE = 'save';"]}