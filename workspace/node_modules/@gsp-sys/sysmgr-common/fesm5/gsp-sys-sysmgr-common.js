import { SessionService } from '@ecp-caf/caf-common';
import { CommonModule } from '@angular/common';
import { Injectable, NgModule, defineInjectable, inject } from '@angular/core';
import { HttpClient, HttpClientModule } from '@angular/common/http';
import { map } from 'rxjs/operators';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 系统管理公共session、webapi等公用方法
 */
var SysCommonUtilService = /** @class */ (function () {
    function SysCommonUtilService(sessionService) {
        this.sessionService = sessionService;
        /** @type {?} */
        var apiPath = '/api/runtime/sys/v1.0';
        this.userWebApi = apiPath + '/users';
        this.secLevelWebApi = apiPath + '/seclevels';
        this.userLimitWebApi = apiPath + '/userLimit';
        this.userPositionWebApi = apiPath + '/user-position';
        this.userPositionOrgWebApi = apiPath + '/user-position-org';
        this.sysOrgWebApi = apiPath + '/sysOrgs';
        this.positionWebApi = apiPath + '/positions';
        this.roleWebApi = apiPath + '/roles';
        this.positionRoleWebApi = apiPath + '/position-role';
        this.operationWebApi = apiPath + '/funcOperations';
        this.userGroupWebApi = apiPath + '/usergroups';
        this.posGroupWebApi = apiPath + '/posgroups';
        this.roleGroupWebApi = apiPath + '/rolegroups';
        this.authFieldDesignWebApi = apiPath + '/authfields';
        this.authFieldAssignWebApi = apiPath + '/assignresults';
        this.sysFuncOpPermissionWebapi = apiPath + '/sysFuncOpPermission';
        this.sysSecurityApi = apiPath + '/secmgrset';
    }
    /**
     * 获取当前用户的sessionId
     */
    /**
     * 获取当前用户的sessionId
     * @return {?}
     */
    SysCommonUtilService.prototype.getSessionId = /**
     * 获取当前用户的sessionId
     * @return {?}
     */
    function () {
        return this.sessionService.getUserSessionId();
    };
    /**
     * 构造Header
     */
    /**
     * 构造Header
     * @return {?}
     */
    SysCommonUtilService.prototype.getHeader = /**
     * 构造Header
     * @return {?}
     */
    function () {
        /** @type {?} */
        var options = {
            headers: {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*',
                SessionId: this.getSessionId()
            }
        };
        return options;
    };
    SysCommonUtilService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    SysCommonUtilService.ctorParameters = function () { return [
        { type: SessionService }
    ]; };
    return SysCommonUtilService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 保密测评服务类
 */
var SysSecurityConfigService = /** @class */ (function () {
    function SysSecurityConfigService(http, sysUtil) {
        this.http = http;
        this.sysUtil = sysUtil;
    }
    /** 是否开启三员 */
    /**
     * 是否开启三员
     * @return {?}
     */
    SysSecurityConfigService.prototype.isOnSecurity = /**
     * 是否开启三员
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = this.sysUtil.sysSecurityApi + '/useSecurity';
        return this.http.get(url, this.sysUtil.getHeader()).pipe(map((/**
         * @param {?} res
         * @return {?}
         */
        function (res) { return (/** @type {?} */ (res)); })));
    };
    /**
     * 根据当前登录用户获取保密测评的功能配置范围
     * @param menuId 功能标识
     */
    /**
     * 根据当前登录用户获取保密测评的功能配置范围
     * @param {?} menuId 功能标识
     * @return {?}
     */
    SysSecurityConfigService.prototype.getCurrentUserAppConfig = /**
     * 根据当前登录用户获取保密测评的功能配置范围
     * @param {?} menuId 功能标识
     * @return {?}
     */
    function (menuId) {
        /** @type {?} */
        var url = this.sysUtil.sysSecurityApi + '/funcobj/' + menuId;
        return this.http.get(url, this.sysUtil.getHeader());
    };
    /**
     * 根据指定用户类别获取界面显示信息-,目前只传递type="alluser"使用
     * @param menuId 功能标识
     */
    /**
     * 根据指定用户类别获取界面显示信息-,目前只传递type="alluser"使用
     * @param {?} menuId 功能标识
     * @param {?} type
     * @return {?}
     */
    SysSecurityConfigService.prototype.getAppConfigByUserType = /**
     * 根据指定用户类别获取界面显示信息-,目前只传递type="alluser"使用
     * @param {?} menuId 功能标识
     * @param {?} type
     * @return {?}
     */
    function (menuId, type) {
        /** @type {?} */
        var url = this.sysUtil.sysSecurityApi + '/funcobj/' + menuId + '/' + type;
        return this.http.get(url, this.sysUtil.getHeader());
    };
    SysSecurityConfigService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    SysSecurityConfigService.ctorParameters = function () { return [
        { type: HttpClient },
        { type: SysCommonUtilService }
    ]; };
    /** @nocollapse */ SysSecurityConfigService.ngInjectableDef = defineInjectable({ factory: function SysSecurityConfigService_Factory() { return new SysSecurityConfigService(inject(HttpClient), inject(SysCommonUtilService)); }, token: SysSecurityConfigService, providedIn: "root" });
    return SysSecurityConfigService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SysCommonModule = /** @class */ (function () {
    function SysCommonModule() {
    }
    SysCommonModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [],
                    imports: [
                        CommonModule,
                        HttpClientModule
                    ],
                    exports: [],
                    providers: [
                        SessionService,
                        SysCommonUtilService,
                        SysSecurityConfigService
                    ]
                },] }
    ];
    return SysCommonModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 二元关系实体增量包
 */
var  /**
 * 二元关系实体增量包
 */
ResultPackage = /** @class */ (function () {
    function ResultPackage() {
        /**
         * 是否进行校验
         */
        this.check = true;
        this.removingResults = new Array();
        this.addingResults = new Array();
        this.ownerAuditEntity = { id: null, code: null, name: null };
        this.addingEntity = new Array();
        this.removingEntity = new Array();
        this.allFlag = '0';
    }
    return ResultPackage;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 保密测评相关配置
 */
var  /**
 * 保密测评相关配置
 */
GspSecSetting = /** @class */ (function () {
    function GspSecSetting() {
        this.id = '';
        this.funcObj = '';
        this.userType = '';
        this.funcOp = '';
        this.funcPage = '';
        this.canMgrUserTypeScope = '';
    }
    return GspSecSetting;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var SYS_VIEW = 'view';
/** @type {?} */
var SYS_ADD = 'add';
/** @type {?} */
var SYS_EDIT = 'edit';
/** @type {?} */
var SYS_SAVE = 'save';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SysDataUtil = /** @class */ (function () {
    function SysDataUtil() {
    }
    /**
     * Guid
     */
    /**
     * Guid
     * @return {?}
     */
    SysDataUtil.getGuid = /**
     * Guid
     * @return {?}
     */
    function () {
        /**
         * @return {?}
         */
        function S4() {
            // tslint:disable-next-line:no-bitwise
            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
        }
        return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());
    };
    /**
     * 删除对象中空的属性
     */
    /**
     * 删除对象中空的属性
     * @param {?} obj
     * @return {?}
     */
    SysDataUtil.deleteEmpty = /**
     * 删除对象中空的属性
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        for (var key in obj) {
            if (obj[key] === undefined || obj[key] === null || obj[key] === '') {
                delete obj[key];
            }
        }
    };
    return SysDataUtil;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 岗位维护功能操作
 */
var PositionFuncOp = /** @class */ (function () {
    function PositionFuncOp() {
    }
    /**
     * 新增
     */
    PositionFuncOp.Add = 'Position_Add';
    /**
     * 编辑
     */
    PositionFuncOp.Edit = 'Position_Edit';
    /**
     * 删除
     */
    PositionFuncOp.Delete = 'Position_Delete';
    /**
     * 授权用户
     */
    PositionFuncOp.AssUser = 'Position_AssUser';
    /**
     * 授权功能组
     */
    PositionFuncOp.AssRole = 'Position_AssRole';
    /**
     * 分配数据权限
     */
    PositionFuncOp.AssDataAuth = 'Position_AssDataAuth';
    /**
     * 授权业务组织
     */
    PositionFuncOp.AssBizOrg = 'Position_AssBizOrg';
    /**
     * 岗位的功能操作列表
     */
    PositionFuncOp.opList = [
        PositionFuncOp.Add,
        PositionFuncOp.Edit,
        PositionFuncOp.Delete,
        PositionFuncOp.AssUser,
        PositionFuncOp.AssRole,
        PositionFuncOp.AssDataAuth,
        PositionFuncOp.AssBizOrg
    ];
    return PositionFuncOp;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 功能组维护功能操作
 */
var RoleFuncOp = /** @class */ (function () {
    function RoleFuncOp() {
    }
    /**
     * 新增
     */
    RoleFuncOp.Add = 'Role_Add';
    /**
     * 编辑
     */
    RoleFuncOp.Edit = 'Role_Edit';
    /**
     * 删除
     */
    RoleFuncOp.Delete = 'Role_Delete';
    /**
     * 授权岗位
     */
    RoleFuncOp.AssPosition = 'Role_AssPosition';
    /**
     * 授权功能操作
     */
    RoleFuncOp.AssOp = 'Role_AssOp';
    /**
     * 功能组的功能操作列表
     */
    RoleFuncOp.opList = [
        RoleFuncOp.Add,
        RoleFuncOp.Edit,
        RoleFuncOp.Delete,
        RoleFuncOp.AssPosition,
        RoleFuncOp.AssOp
    ];
    return RoleFuncOp;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 用户维护功能操作
 */
var UserFuncOp = /** @class */ (function () {
    function UserFuncOp() {
    }
    /**
     * 新增
     */
    UserFuncOp.Add = 'User_Add';
    /**
     * 编辑
     */
    UserFuncOp.Edit = 'User_Edit';
    /**
     * 删除
     */
    UserFuncOp.Delete = 'User_Delete';
    /**
     * 授权岗位
     */
    UserFuncOp.AssPosition = 'User_AssPosition';
    /**
     * 数据权限
     */
    UserFuncOp.AssDataAuth = 'User_AssDataAuth';
    /**
     * 状态控制
     */
    UserFuncOp.State = 'User_State';
    UserFuncOp.opList = [
        UserFuncOp.Add,
        UserFuncOp.Edit,
        UserFuncOp.Delete,
        UserFuncOp.AssPosition,
        UserFuncOp.AssDataAuth,
        UserFuncOp.State
    ];
    return UserFuncOp;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {number} */
var PositionType = {
    /**
     * 组织岗位
     */
    orgPos: 0,
    /**
     * 通用组织岗位
     */
    generalPos: 1,
    /**
     * 内部隐藏组织岗位-Dev
     */
    hidenOrgPos: 2,
    /**
     * 其他
     */
    None: 99,
};
PositionType[PositionType.orgPos] = 'orgPos';
PositionType[PositionType.generalPos] = 'generalPos';
PositionType[PositionType.hidenOrgPos] = 'hidenOrgPos';
PositionType[PositionType.None] = 'None';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { SysCommonModule, SysCommonUtilService, ResultPackage, GspSecSetting, SYS_ADD, SYS_EDIT, SYS_VIEW, SYS_SAVE, SysDataUtil, PositionFuncOp, RoleFuncOp, UserFuncOp, PositionType, SysSecurityConfigService };

//# sourceMappingURL=gsp-sys-sysmgr-common.js.map