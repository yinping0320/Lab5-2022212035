/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { SysCommonUtilService } from '../service/sys-manager-util.service';
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
import * as i2 from "../service/sys-manager-util.service";
/**
 * 保密测评服务类
 */
var SysSecurityConfigService = /** @class */ (function () {
    function SysSecurityConfigService(http, sysUtil) {
        this.http = http;
        this.sysUtil = sysUtil;
    }
    /** 是否开启三员 */
    /**
     * 是否开启三员
     * @return {?}
     */
    SysSecurityConfigService.prototype.isOnSecurity = /**
     * 是否开启三员
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = this.sysUtil.sysSecurityApi + '/useSecurity';
        return this.http.get(url, this.sysUtil.getHeader()).pipe(map((/**
         * @param {?} res
         * @return {?}
         */
        function (res) { return (/** @type {?} */ (res)); })));
    };
    /**
     * 根据当前登录用户获取保密测评的功能配置范围
     * @param menuId 功能标识
     */
    /**
     * 根据当前登录用户获取保密测评的功能配置范围
     * @param {?} menuId 功能标识
     * @return {?}
     */
    SysSecurityConfigService.prototype.getCurrentUserAppConfig = /**
     * 根据当前登录用户获取保密测评的功能配置范围
     * @param {?} menuId 功能标识
     * @return {?}
     */
    function (menuId) {
        /** @type {?} */
        var url = this.sysUtil.sysSecurityApi + '/funcobj/' + menuId;
        return this.http.get(url, this.sysUtil.getHeader());
    };
    /**
     * 根据指定用户类别获取界面显示信息-,目前只传递type="alluser"使用
     * @param menuId 功能标识
     */
    /**
     * 根据指定用户类别获取界面显示信息-,目前只传递type="alluser"使用
     * @param {?} menuId 功能标识
     * @param {?} type
     * @return {?}
     */
    SysSecurityConfigService.prototype.getAppConfigByUserType = /**
     * 根据指定用户类别获取界面显示信息-,目前只传递type="alluser"使用
     * @param {?} menuId 功能标识
     * @param {?} type
     * @return {?}
     */
    function (menuId, type) {
        /** @type {?} */
        var url = this.sysUtil.sysSecurityApi + '/funcobj/' + menuId + '/' + type;
        return this.http.get(url, this.sysUtil.getHeader());
    };
    SysSecurityConfigService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    SysSecurityConfigService.ctorParameters = function () { return [
        { type: HttpClient },
        { type: SysCommonUtilService }
    ]; };
    /** @nocollapse */ SysSecurityConfigService.ngInjectableDef = i0.defineInjectable({ factory: function SysSecurityConfigService_Factory() { return new SysSecurityConfigService(i0.inject(i1.HttpClient), i0.inject(i2.SysCommonUtilService)); }, token: SysSecurityConfigService, providedIn: "root" });
    return SysSecurityConfigService;
}());
export { SysSecurityConfigService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    SysSecurityConfigService.prototype.http;
    /**
     * @type {?}
     * @private
     */
    SysSecurityConfigService.prototype.sysUtil;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3lzLXNlY3VyaXR5LWNvbmZpZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1zeXMvc3lzbWdyLWNvbW1vbi8iLCJzb3VyY2VzIjpbImxpYi9jb25maWcvc3lzLXNlY3VyaXR5LWNvbmZpZy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVsRCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7Ozs7QUFHckM7SUFLSSxrQ0FDWSxJQUFnQixFQUNoQixPQUE2QjtRQUQ3QixTQUFJLEdBQUosSUFBSSxDQUFZO1FBQ2hCLFlBQU8sR0FBUCxPQUFPLENBQXNCO0lBQ3JDLENBQUM7SUFFTCxhQUFhOzs7OztJQUNOLCtDQUFZOzs7O0lBQW5COztZQUNVLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsR0FBRyxjQUFjO1FBQ3hELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRzs7OztRQUFDLFVBQUMsR0FBUSxXQUFLLG1CQUFBLEdBQUcsRUFBVyxHQUFBLEVBQUMsQ0FBQyxDQUFDO0lBQ2hHLENBQUM7SUFFRDs7O09BR0c7Ozs7OztJQUNILDBEQUF1Qjs7Ozs7SUFBdkIsVUFBd0IsTUFBYzs7WUFDNUIsR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxHQUFHLFdBQVcsR0FBRyxNQUFNO1FBQzlELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRUQ7OztPQUdHOzs7Ozs7O0lBQ0gseURBQXNCOzs7Ozs7SUFBdEIsVUFBdUIsTUFBYyxFQUFFLElBQVk7O1lBQ3pDLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsR0FBRyxXQUFXLEdBQUcsTUFBTSxHQUFHLEdBQUcsR0FBRyxJQUFJO1FBQzNFLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUN4RCxDQUFDOztnQkFoQ0osVUFBVSxTQUFDO29CQUNSLFVBQVUsRUFBRSxNQUFNO2lCQUNyQjs7OztnQkFQUSxVQUFVO2dCQUZWLG9CQUFvQjs7O21DQUE3QjtDQXdDQyxBQWpDRCxJQWlDQztTQTlCWSx3QkFBd0I7Ozs7OztJQUc3Qix3Q0FBd0I7Ozs7O0lBQ3hCLDJDQUFxQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN5c0NvbW1vblV0aWxTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZS9zeXMtbWFuYWdlci11dGlsLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5cclxuLyoqIOS/neWvhua1i+ivhOacjeWKoeexuyAqL1xyXG5ASW5qZWN0YWJsZSh7XHJcbiAgICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIFN5c1NlY3VyaXR5Q29uZmlnU2VydmljZSB7XHJcblxyXG4gICAgY29uc3RydWN0b3IgKFxyXG4gICAgICAgIHByaXZhdGUgaHR0cDogSHR0cENsaWVudCxcclxuICAgICAgICBwcml2YXRlIHN5c1V0aWw6IFN5c0NvbW1vblV0aWxTZXJ2aWNlXHJcbiAgICApIHsgfVxyXG5cclxuICAgIC8qKiDmmK/lkKblvIDlkK/kuInlkZggKi9cclxuICAgIHB1YmxpYyBpc09uU2VjdXJpdHkgKCk6IE9ic2VydmFibGU8Ym9vbGVhbj4ge1xyXG4gICAgICAgIGNvbnN0IHVybCA9IHRoaXMuc3lzVXRpbC5zeXNTZWN1cml0eUFwaSArICcvdXNlU2VjdXJpdHknO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KHVybCwgdGhpcy5zeXNVdGlsLmdldEhlYWRlcigpKS5waXBlKG1hcCgocmVzOiBhbnkpID0+IHJlcyBhcyBib29sZWFuKSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmoLnmja7lvZPliY3nmbvlvZXnlKjmiLfojrflj5bkv53lr4bmtYvor4TnmoTlip/og73phY3nva7ojIPlm7RcclxuICAgICAqIEBwYXJhbSBtZW51SWQg5Yqf6IO95qCH6K+GXHJcbiAgICAgKi9cclxuICAgIGdldEN1cnJlbnRVc2VyQXBwQ29uZmlnKG1lbnVJZDogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgICAgICBjb25zdCB1cmwgPSB0aGlzLnN5c1V0aWwuc3lzU2VjdXJpdHlBcGkgKyAnL2Z1bmNvYmovJyArIG1lbnVJZDtcclxuICAgICAgICByZXR1cm4gdGhpcy5odHRwLmdldCh1cmwsIHRoaXMuc3lzVXRpbC5nZXRIZWFkZXIoKSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmoLnmja7mjIflrprnlKjmiLfnsbvliKvojrflj5bnlYzpnaLmmL7npLrkv6Hmga8tLOebruWJjeWPquS8oOmAknR5cGU9XCJhbGx1c2VyXCLkvb/nlKhcclxuICAgICAqIEBwYXJhbSBtZW51SWQg5Yqf6IO95qCH6K+GXHJcbiAgICAgKi9cclxuICAgIGdldEFwcENvbmZpZ0J5VXNlclR5cGUobWVudUlkOiBzdHJpbmcsIHR5cGU6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICAgICAgY29uc3QgdXJsID0gdGhpcy5zeXNVdGlsLnN5c1NlY3VyaXR5QXBpICsgJy9mdW5jb2JqLycgKyBtZW51SWQgKyAnLycgKyB0eXBlO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KHVybCwgdGhpcy5zeXNVdGlsLmdldEhlYWRlcigpKTtcclxuICAgIH1cclxufVxyXG4iXX0=