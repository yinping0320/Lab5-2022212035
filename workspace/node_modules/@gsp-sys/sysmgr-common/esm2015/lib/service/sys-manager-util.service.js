/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { SessionService } from '@ecp-caf/caf-common';
/**
 * 系统管理公共session、webapi等公用方法
 */
export class SysCommonUtilService {
    /**
     * @param {?} sessionService
     */
    constructor(sessionService) {
        this.sessionService = sessionService;
        /** @type {?} */
        const apiPath = '/api/runtime/sys/v1.0';
        this.userWebApi = apiPath + '/users';
        this.secLevelWebApi = apiPath + '/seclevels';
        this.userLimitWebApi = apiPath + '/userLimit';
        this.userPositionWebApi = apiPath + '/user-position';
        this.userPositionOrgWebApi = apiPath + '/user-position-org';
        this.sysOrgWebApi = apiPath + '/sysOrgs';
        this.positionWebApi = apiPath + '/positions';
        this.roleWebApi = apiPath + '/roles';
        this.positionRoleWebApi = apiPath + '/position-role';
        this.operationWebApi = apiPath + '/funcOperations';
        this.userGroupWebApi = apiPath + '/usergroups';
        this.posGroupWebApi = apiPath + '/posgroups';
        this.roleGroupWebApi = apiPath + '/rolegroups';
        this.authFieldDesignWebApi = apiPath + '/authfields';
        this.authFieldAssignWebApi = apiPath + '/assignresults';
        this.sysFuncOpPermissionWebapi = apiPath + '/sysFuncOpPermission';
        this.sysSecurityApi = apiPath + '/secmgrset';
    }
    /**
     * 获取当前用户的sessionId
     * @return {?}
     */
    getSessionId() {
        return this.sessionService.getUserSessionId();
    }
    /**
     * 构造Header
     * @return {?}
     */
    getHeader() {
        /** @type {?} */
        const options = {
            headers: {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*',
                SessionId: this.getSessionId()
            }
        };
        return options;
    }
}
SysCommonUtilService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
SysCommonUtilService.ctorParameters = () => [
    { type: SessionService }
];
if (false) {
    /**
     * 用户webapi
     * @type {?}
     */
    SysCommonUtilService.prototype.userWebApi;
    /**
     * 用户密级字典webapi
     * @type {?}
     */
    SysCommonUtilService.prototype.secLevelWebApi;
    /**
     * 登录限制
     * @type {?}
     */
    SysCommonUtilService.prototype.userLimitWebApi;
    /**
     * 用户组织岗位关系webapi
     * @type {?}
     */
    SysCommonUtilService.prototype.userPositionWebApi;
    /**
     * 用户通用岗位业务组织关系webapi
     * @type {?}
     */
    SysCommonUtilService.prototype.userPositionOrgWebApi;
    /**
     * 系统组织webapi
     * @type {?}
     */
    SysCommonUtilService.prototype.sysOrgWebApi;
    /**
     * 岗位webapi
     * @type {?}
     */
    SysCommonUtilService.prototype.positionWebApi;
    /**
     * 功能组webapi
     * @type {?}
     */
    SysCommonUtilService.prototype.roleWebApi;
    /**
     * 功能组和岗位关系webapi
     * @type {?}
     */
    SysCommonUtilService.prototype.positionRoleWebApi;
    /**
     * 功能操作webapi
     * @type {?}
     */
    SysCommonUtilService.prototype.operationWebApi;
    /**
     * 用户分组webapi
     * @type {?}
     */
    SysCommonUtilService.prototype.userGroupWebApi;
    /**
     * 岗位分组webapi
     * @type {?}
     */
    SysCommonUtilService.prototype.posGroupWebApi;
    /**
     * 功能组分组webapi
     * @type {?}
     */
    SysCommonUtilService.prototype.roleGroupWebApi;
    /**
     * 权限字段定义时webapi
     * @type {?}
     */
    SysCommonUtilService.prototype.authFieldDesignWebApi;
    /**
     * 权限字段分配时webapi
     * @type {?}
     */
    SysCommonUtilService.prototype.authFieldAssignWebApi;
    /** @type {?} */
    SysCommonUtilService.prototype.sysFuncOpPermissionWebapi;
    /**
     * 保密测评相关
     * @type {?}
     */
    SysCommonUtilService.prototype.sysSecurityApi;
    /**
     * @type {?}
     * @private
     */
    SysCommonUtilService.prototype.sessionService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3lzLW1hbmFnZXItdXRpbC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1zeXMvc3lzbWdyLWNvbW1vbi8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlL3N5cy1tYW5hZ2VyLXV0aWwuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7Ozs7QUFNckQsTUFBTSxPQUFPLG9CQUFvQjs7OztJQW9DN0IsWUFDWSxjQUE4QjtRQUE5QixtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7O2NBRWhDLE9BQU8sR0FBRyx1QkFBdUI7UUFDdkMsSUFBSSxDQUFDLFVBQVUsR0FBRyxPQUFPLEdBQUcsUUFBUSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxjQUFjLEdBQUcsT0FBTyxHQUFHLFlBQVksQ0FBQztRQUM3QyxJQUFJLENBQUMsZUFBZSxHQUFHLE9BQU8sR0FBRyxZQUFZLENBQUM7UUFDOUMsSUFBSSxDQUFDLGtCQUFrQixHQUFHLE9BQU8sR0FBRyxnQkFBZ0IsQ0FBQztRQUNyRCxJQUFJLENBQUMscUJBQXFCLEdBQUcsT0FBTyxHQUFHLG9CQUFvQixDQUFDO1FBQzVELElBQUksQ0FBQyxZQUFZLEdBQUcsT0FBTyxHQUFHLFVBQVUsQ0FBQztRQUN6QyxJQUFJLENBQUMsY0FBYyxHQUFHLE9BQU8sR0FBRyxZQUFZLENBQUM7UUFDN0MsSUFBSSxDQUFDLFVBQVUsR0FBRyxPQUFPLEdBQUcsUUFBUSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxPQUFPLEdBQUcsZ0JBQWdCLENBQUM7UUFDckQsSUFBSSxDQUFDLGVBQWUsR0FBRyxPQUFPLEdBQUcsaUJBQWlCLENBQUM7UUFDbkQsSUFBSSxDQUFDLGVBQWUsR0FBRyxPQUFPLEdBQUcsYUFBYSxDQUFDO1FBQy9DLElBQUksQ0FBQyxjQUFjLEdBQUcsT0FBTyxHQUFHLFlBQVksQ0FBQztRQUM3QyxJQUFJLENBQUMsZUFBZSxHQUFHLE9BQU8sR0FBRyxhQUFhLENBQUM7UUFDL0MsSUFBSSxDQUFDLHFCQUFxQixHQUFHLE9BQU8sR0FBRyxhQUFhLENBQUM7UUFDckQsSUFBSSxDQUFDLHFCQUFxQixHQUFHLE9BQU8sR0FBRyxnQkFBZ0IsQ0FBQztRQUN4RCxJQUFJLENBQUMseUJBQXlCLEdBQUcsT0FBTyxHQUFHLHNCQUFzQixDQUFDO1FBQ2xFLElBQUksQ0FBQyxjQUFjLEdBQUcsT0FBTyxHQUFHLFlBQVksQ0FBQztJQUNqRCxDQUFDOzs7OztJQUtNLFlBQVk7UUFDZixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUNsRCxDQUFDOzs7OztJQUtNLFNBQVM7O2NBQ04sT0FBTyxHQUFRO1lBQ2pCLE9BQU8sRUFBRTtnQkFDTCxjQUFjLEVBQUUsa0JBQWtCO2dCQUNsQyw2QkFBNkIsRUFBRSxHQUFHO2dCQUNsQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRTthQUNqQztTQUNKO1FBQ0QsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQzs7O1lBL0VKLFVBQVU7Ozs7WUFMRixjQUFjOzs7Ozs7O0lBU25CLDBDQUFtQzs7Ozs7SUFFbkMsOENBQXVDOzs7OztJQUV2QywrQ0FBd0M7Ozs7O0lBRXhDLGtEQUEyQzs7Ozs7SUFFM0MscURBQThDOzs7OztJQUU5Qyw0Q0FBcUM7Ozs7O0lBRXJDLDhDQUF1Qzs7Ozs7SUFFdkMsMENBQW1DOzs7OztJQUVuQyxrREFBMkM7Ozs7O0lBRTNDLCtDQUF3Qzs7Ozs7SUFFeEMsK0NBQXdDOzs7OztJQUV4Qyw4Q0FBdUM7Ozs7O0lBRXZDLCtDQUF3Qzs7Ozs7SUFFeEMscURBQThDOzs7OztJQUU5QyxxREFBOEM7O0lBQzlDLHlEQUFrRDs7Ozs7SUFFbEQsOENBQXVDOzs7OztJQUduQyw4Q0FBc0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFNlc3Npb25TZXJ2aWNlIH0gZnJvbSAnQGVjcC1jYWYvY2FmLWNvbW1vbic7XHJcblxyXG4vKipcclxuICog57O757uf566h55CG5YWs5YWxc2Vzc2lvbuOAgXdlYmFwaeetieWFrOeUqOaWueazlVxyXG4gKi9cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgU3lzQ29tbW9uVXRpbFNlcnZpY2Uge1xyXG5cclxuICAgIC8qKiDnlKjmiLd3ZWJhcGkgKi9cclxuICAgIHB1YmxpYyByZWFkb25seSB1c2VyV2ViQXBpOiBzdHJpbmc7XHJcbiAgICAvKiog55So5oi35a+G57qn5a2X5YW4d2ViYXBpICovXHJcbiAgICBwdWJsaWMgcmVhZG9ubHkgc2VjTGV2ZWxXZWJBcGk6IHN0cmluZztcclxuICAgIC8qKiDnmbvlvZXpmZDliLYgKi9cclxuICAgIHB1YmxpYyByZWFkb25seSB1c2VyTGltaXRXZWJBcGk6IHN0cmluZztcclxuICAgIC8qKiDnlKjmiLfnu4Tnu4flspfkvY3lhbPns7t3ZWJhcGkgKi9cclxuICAgIHB1YmxpYyByZWFkb25seSB1c2VyUG9zaXRpb25XZWJBcGk6IHN0cmluZztcclxuICAgIC8qKiDnlKjmiLfpgJrnlKjlspfkvY3kuJrliqHnu4Tnu4flhbPns7t3ZWJhcGkgKi9cclxuICAgIHB1YmxpYyByZWFkb25seSB1c2VyUG9zaXRpb25PcmdXZWJBcGk6IHN0cmluZztcclxuICAgIC8qKiDns7vnu5/nu4Tnu4d3ZWJhcGkgKi9cclxuICAgIHB1YmxpYyByZWFkb25seSBzeXNPcmdXZWJBcGk6IHN0cmluZztcclxuICAgIC8qKiDlspfkvY13ZWJhcGkgKi9cclxuICAgIHB1YmxpYyByZWFkb25seSBwb3NpdGlvbldlYkFwaTogc3RyaW5nO1xyXG4gICAgLyoqIOWKn+iDvee7hHdlYmFwaSAqL1xyXG4gICAgcHVibGljIHJlYWRvbmx5IHJvbGVXZWJBcGk6IHN0cmluZztcclxuICAgIC8qKiDlip/og73nu4TlkozlspfkvY3lhbPns7t3ZWJhcGkgKi9cclxuICAgIHB1YmxpYyByZWFkb25seSBwb3NpdGlvblJvbGVXZWJBcGk6IHN0cmluZztcclxuICAgIC8qKiDlip/og73mk43kvZx3ZWJhcGkgKi9cclxuICAgIHB1YmxpYyByZWFkb25seSBvcGVyYXRpb25XZWJBcGk6IHN0cmluZztcclxuICAgIC8qKiDnlKjmiLfliIbnu4R3ZWJhcGkgKi9cclxuICAgIHB1YmxpYyByZWFkb25seSB1c2VyR3JvdXBXZWJBcGk6IHN0cmluZztcclxuICAgIC8qKiDlspfkvY3liIbnu4R3ZWJhcGkgKi9cclxuICAgIHB1YmxpYyByZWFkb25seSBwb3NHcm91cFdlYkFwaTogc3RyaW5nO1xyXG4gICAgLyoqIOWKn+iDvee7hOWIhue7hHdlYmFwaSAqL1xyXG4gICAgcHVibGljIHJlYWRvbmx5IHJvbGVHcm91cFdlYkFwaTogc3RyaW5nO1xyXG4gICAgLyoqIOadg+mZkOWtl+auteWumuS5ieaXtndlYmFwaSAqL1xyXG4gICAgcHVibGljIHJlYWRvbmx5IGF1dGhGaWVsZERlc2lnbldlYkFwaTogc3RyaW5nO1xyXG4gICAgLyoqIOadg+mZkOWtl+auteWIhumFjeaXtndlYmFwaSAqL1xyXG4gICAgcHVibGljIHJlYWRvbmx5IGF1dGhGaWVsZEFzc2lnbldlYkFwaTogc3RyaW5nO1xyXG4gICAgcHVibGljIHJlYWRvbmx5IHN5c0Z1bmNPcFBlcm1pc3Npb25XZWJhcGk6IHN0cmluZztcclxuICAgIC8qKiDkv53lr4bmtYvor4Tnm7jlhbMgKi9cclxuICAgIHB1YmxpYyByZWFkb25seSBzeXNTZWN1cml0eUFwaTogc3RyaW5nO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yIChcclxuICAgICAgICBwcml2YXRlIHNlc3Npb25TZXJ2aWNlOiBTZXNzaW9uU2VydmljZVxyXG4gICAgKSB7XHJcbiAgICAgICAgY29uc3QgYXBpUGF0aCA9ICcvYXBpL3J1bnRpbWUvc3lzL3YxLjAnO1xyXG4gICAgICAgIHRoaXMudXNlcldlYkFwaSA9IGFwaVBhdGggKyAnL3VzZXJzJztcclxuICAgICAgICB0aGlzLnNlY0xldmVsV2ViQXBpID0gYXBpUGF0aCArICcvc2VjbGV2ZWxzJztcclxuICAgICAgICB0aGlzLnVzZXJMaW1pdFdlYkFwaSA9IGFwaVBhdGggKyAnL3VzZXJMaW1pdCc7XHJcbiAgICAgICAgdGhpcy51c2VyUG9zaXRpb25XZWJBcGkgPSBhcGlQYXRoICsgJy91c2VyLXBvc2l0aW9uJztcclxuICAgICAgICB0aGlzLnVzZXJQb3NpdGlvbk9yZ1dlYkFwaSA9IGFwaVBhdGggKyAnL3VzZXItcG9zaXRpb24tb3JnJztcclxuICAgICAgICB0aGlzLnN5c09yZ1dlYkFwaSA9IGFwaVBhdGggKyAnL3N5c09yZ3MnO1xyXG4gICAgICAgIHRoaXMucG9zaXRpb25XZWJBcGkgPSBhcGlQYXRoICsgJy9wb3NpdGlvbnMnO1xyXG4gICAgICAgIHRoaXMucm9sZVdlYkFwaSA9IGFwaVBhdGggKyAnL3JvbGVzJztcclxuICAgICAgICB0aGlzLnBvc2l0aW9uUm9sZVdlYkFwaSA9IGFwaVBhdGggKyAnL3Bvc2l0aW9uLXJvbGUnO1xyXG4gICAgICAgIHRoaXMub3BlcmF0aW9uV2ViQXBpID0gYXBpUGF0aCArICcvZnVuY09wZXJhdGlvbnMnO1xyXG4gICAgICAgIHRoaXMudXNlckdyb3VwV2ViQXBpID0gYXBpUGF0aCArICcvdXNlcmdyb3Vwcyc7XHJcbiAgICAgICAgdGhpcy5wb3NHcm91cFdlYkFwaSA9IGFwaVBhdGggKyAnL3Bvc2dyb3Vwcyc7XHJcbiAgICAgICAgdGhpcy5yb2xlR3JvdXBXZWJBcGkgPSBhcGlQYXRoICsgJy9yb2xlZ3JvdXBzJztcclxuICAgICAgICB0aGlzLmF1dGhGaWVsZERlc2lnbldlYkFwaSA9IGFwaVBhdGggKyAnL2F1dGhmaWVsZHMnO1xyXG4gICAgICAgIHRoaXMuYXV0aEZpZWxkQXNzaWduV2ViQXBpID0gYXBpUGF0aCArICcvYXNzaWducmVzdWx0cyc7XHJcbiAgICAgICAgdGhpcy5zeXNGdW5jT3BQZXJtaXNzaW9uV2ViYXBpID0gYXBpUGF0aCArICcvc3lzRnVuY09wUGVybWlzc2lvbic7XHJcbiAgICAgICAgdGhpcy5zeXNTZWN1cml0eUFwaSA9IGFwaVBhdGggKyAnL3NlY21ncnNldCc7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflj5blvZPliY3nlKjmiLfnmoRzZXNzaW9uSWRcclxuICAgICAqL1xyXG4gICAgcHVibGljIGdldFNlc3Npb25JZCAoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5zZXNzaW9uU2VydmljZS5nZXRVc2VyU2Vzc2lvbklkKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmnoTpgKBIZWFkZXJcclxuICAgICAqL1xyXG4gICAgcHVibGljIGdldEhlYWRlciAoKTogYW55IHtcclxuICAgICAgICBjb25zdCBvcHRpb25zOiBhbnkgPSB7XHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgICAgICAgICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogJyonLFxyXG4gICAgICAgICAgICAgICAgU2Vzc2lvbklkOiB0aGlzLmdldFNlc3Npb25JZCgpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiBvcHRpb25zO1xyXG4gICAgfVxyXG59XHJcblxyXG4iXX0=