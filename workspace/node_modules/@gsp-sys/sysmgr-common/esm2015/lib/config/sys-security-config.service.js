/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { SysCommonUtilService } from '../service/sys-manager-util.service';
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
import * as i2 from "../service/sys-manager-util.service";
/**
 * 保密测评服务类
 */
export class SysSecurityConfigService {
    /**
     * @param {?} http
     * @param {?} sysUtil
     */
    constructor(http, sysUtil) {
        this.http = http;
        this.sysUtil = sysUtil;
    }
    /**
     * 是否开启三员
     * @return {?}
     */
    isOnSecurity() {
        /** @type {?} */
        const url = this.sysUtil.sysSecurityApi + '/useSecurity';
        return this.http.get(url, this.sysUtil.getHeader()).pipe(map((/**
         * @param {?} res
         * @return {?}
         */
        (res) => (/** @type {?} */ (res)))));
    }
    /**
     * 根据当前登录用户获取保密测评的功能配置范围
     * @param {?} menuId 功能标识
     * @return {?}
     */
    getCurrentUserAppConfig(menuId) {
        /** @type {?} */
        const url = this.sysUtil.sysSecurityApi + '/funcobj/' + menuId;
        return this.http.get(url, this.sysUtil.getHeader());
    }
    /**
     * 根据指定用户类别获取界面显示信息-,目前只传递type="alluser"使用
     * @param {?} menuId 功能标识
     * @param {?} type
     * @return {?}
     */
    getAppConfigByUserType(menuId, type) {
        /** @type {?} */
        const url = this.sysUtil.sysSecurityApi + '/funcobj/' + menuId + '/' + type;
        return this.http.get(url, this.sysUtil.getHeader());
    }
}
SysSecurityConfigService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
SysSecurityConfigService.ctorParameters = () => [
    { type: HttpClient },
    { type: SysCommonUtilService }
];
/** @nocollapse */ SysSecurityConfigService.ngInjectableDef = i0.defineInjectable({ factory: function SysSecurityConfigService_Factory() { return new SysSecurityConfigService(i0.inject(i1.HttpClient), i0.inject(i2.SysCommonUtilService)); }, token: SysSecurityConfigService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    SysSecurityConfigService.prototype.http;
    /**
     * @type {?}
     * @private
     */
    SysSecurityConfigService.prototype.sysUtil;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3lzLXNlY3VyaXR5LWNvbmZpZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1zeXMvc3lzbWdyLWNvbW1vbi8iLCJzb3VyY2VzIjpbImxpYi9jb25maWcvc3lzLXNlY3VyaXR5LWNvbmZpZy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVsRCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7Ozs7QUFNckMsTUFBTSxPQUFPLHdCQUF3Qjs7Ozs7SUFFakMsWUFDWSxJQUFnQixFQUNoQixPQUE2QjtRQUQ3QixTQUFJLEdBQUosSUFBSSxDQUFZO1FBQ2hCLFlBQU8sR0FBUCxPQUFPLENBQXNCO0lBQ3JDLENBQUM7Ozs7O0lBR0UsWUFBWTs7Y0FDVCxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLEdBQUcsY0FBYztRQUN4RCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUc7Ozs7UUFBQyxDQUFDLEdBQVEsRUFBRSxFQUFFLENBQUMsbUJBQUEsR0FBRyxFQUFXLEVBQUMsQ0FBQyxDQUFDO0lBQ2hHLENBQUM7Ozs7OztJQU1ELHVCQUF1QixDQUFDLE1BQWM7O2NBQzVCLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsR0FBRyxXQUFXLEdBQUcsTUFBTTtRQUM5RCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUM7SUFDeEQsQ0FBQzs7Ozs7OztJQU1ELHNCQUFzQixDQUFDLE1BQWMsRUFBRSxJQUFZOztjQUN6QyxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLEdBQUcsV0FBVyxHQUFHLE1BQU0sR0FBRyxHQUFHLEdBQUcsSUFBSTtRQUMzRSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUM7SUFDeEQsQ0FBQzs7O1lBaENKLFVBQVUsU0FBQztnQkFDUixVQUFVLEVBQUUsTUFBTTthQUNyQjs7OztZQVBRLFVBQVU7WUFGVixvQkFBb0I7Ozs7Ozs7O0lBYXJCLHdDQUF3Qjs7Ozs7SUFDeEIsMkNBQXFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3lzQ29tbW9uVXRpbFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlL3N5cy1tYW5hZ2VyLXV0aWwuc2VydmljZSc7XHJcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG4vKiog5L+d5a+G5rWL6K+E5pyN5Yqh57G7ICovXHJcbkBJbmplY3RhYmxlKHtcclxuICAgIHByb3ZpZGVkSW46ICdyb290J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgU3lzU2VjdXJpdHlDb25maWdTZXJ2aWNlIHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvciAoXHJcbiAgICAgICAgcHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50LFxyXG4gICAgICAgIHByaXZhdGUgc3lzVXRpbDogU3lzQ29tbW9uVXRpbFNlcnZpY2VcclxuICAgICkgeyB9XHJcblxyXG4gICAgLyoqIOaYr+WQpuW8gOWQr+S4ieWRmCAqL1xyXG4gICAgcHVibGljIGlzT25TZWN1cml0eSAoKTogT2JzZXJ2YWJsZTxib29sZWFuPiB7XHJcbiAgICAgICAgY29uc3QgdXJsID0gdGhpcy5zeXNVdGlsLnN5c1NlY3VyaXR5QXBpICsgJy91c2VTZWN1cml0eSc7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodXJsLCB0aGlzLnN5c1V0aWwuZ2V0SGVhZGVyKCkpLnBpcGUobWFwKChyZXM6IGFueSkgPT4gcmVzIGFzIGJvb2xlYW4pKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOagueaNruW9k+WJjeeZu+W9leeUqOaIt+iOt+WPluS/neWvhua1i+ivhOeahOWKn+iDvemFjee9ruiMg+WbtFxyXG4gICAgICogQHBhcmFtIG1lbnVJZCDlip/og73moIfor4ZcclxuICAgICAqL1xyXG4gICAgZ2V0Q3VycmVudFVzZXJBcHBDb25maWcobWVudUlkOiBzdHJpbmcpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgICAgIGNvbnN0IHVybCA9IHRoaXMuc3lzVXRpbC5zeXNTZWN1cml0eUFwaSArICcvZnVuY29iai8nICsgbWVudUlkO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KHVybCwgdGhpcy5zeXNVdGlsLmdldEhlYWRlcigpKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOagueaNruaMh+WumueUqOaIt+exu+WIq+iOt+WPlueVjOmdouaYvuekuuS/oeaBry0s55uu5YmN5Y+q5Lyg6YCSdHlwZT1cImFsbHVzZXJcIuS9v+eUqFxyXG4gICAgICogQHBhcmFtIG1lbnVJZCDlip/og73moIfor4ZcclxuICAgICAqL1xyXG4gICAgZ2V0QXBwQ29uZmlnQnlVc2VyVHlwZShtZW51SWQ6IHN0cmluZywgdHlwZTogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgICAgICBjb25zdCB1cmwgPSB0aGlzLnN5c1V0aWwuc3lzU2VjdXJpdHlBcGkgKyAnL2Z1bmNvYmovJyArIG1lbnVJZCArICcvJyArIHR5cGU7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodXJsLCB0aGlzLnN5c1V0aWwuZ2V0SGVhZGVyKCkpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==