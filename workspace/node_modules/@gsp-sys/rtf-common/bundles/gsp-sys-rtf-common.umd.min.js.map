{"version":3,"sources":["ng://@gsp-sys/rtf-common/lib/common-shared.module.ts","ng://@gsp-sys/rtf-common/lib/services/frmVariableService/framework-variable.service.ts","ng://@gsp-sys/rtf-common/lib/services/funcsservice/funcs.service.ts","node_modules/tslib/tslib.es6.js","ng://@gsp-sys/rtf-common/lib/eventbus/frm-eventpipe.ts","ng://@gsp-sys/rtf-common/lib/eventbus/frm-evenbus.ts","ng://@gsp-sys/rtf-common/lib/services/loading/loading.component.ts","ng://@gsp-sys/rtf-common/lib/services/loading/loading.config.ts","ng://@gsp-sys/rtf-common/lib/services/loading/loading.service.ts","ng://@gsp-sys/rtf-common/lib/models/iframe.model.ts","ng://@gsp-sys/rtf-common/lib/shared/frm-util.ts","ng://@gsp-sys/rtf-common/lib/services/i18nService/i18n-setting.service.ts","ng://@gsp-sys/rtf-common/lib/services/appservice/app.service.ts","ng://@gsp-sys/rtf-common/lib/services/frmservice/frameworkservice.ts","ng://@gsp-sys/rtf-common/lib/services/frmEventService/framework-event.service.ts","ng://@gsp-sys/rtf-common/lib/services/communication/broadcasting-station.service.ts","ng://@gsp-sys/rtf-common/lib/resolve/function-resolver.ts","ng://@gsp-sys/rtf-common/lib/services/loading/loading.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [\r\n  ],\r\n  exports: [],\r\n  providers: [],\r\n  entryComponents: []\r\n})\r\nexport class CommonSharedModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { WindowVariableService } from '@ecp-caf/caf-common';\r\n\r\n@Injectable()\r\nexport class FrameworkVariableService {\r\n\r\n    private frameworkVariable = 'frameworkVariable';\r\n    private nameSpace = 'variables';\r\n    private frmVariableName = 'rtfFrmVariable';\r\n    private windowService: WindowVariableService;\r\n\r\n    constructor() {\r\n        this.windowService = new WindowVariableService();\r\n        this.frmVariableInitial();\r\n    }\r\n\r\n    public getFrameworkVariable(): any {\r\n        return this.windowService.getTopWindow()[this.frameworkVariable];\r\n    }\r\n\r\n    /**\r\n     * å¨æ¡æ¶é¡¶çº§windowæ³¨ååé\r\n     */\r\n    public frameworkVariableReg(key: string, value: any) {\r\n        const frmVariable = this.getFrameworkVariable();\r\n        if (frmVariable && frmVariable.name && frmVariable.name === this.frmVariableName) {\r\n            frmVariable[this.nameSpace] = frmVariable[this.nameSpace] || {};\r\n            frmVariable[this.nameSpace][key] = value;\r\n            return;\r\n        }\r\n        this.frmVariableInitial();\r\n        this.getFrameworkVariable()[this.nameSpace][key] = value;\r\n    }\r\n\r\n    public getFrmVariableByKey(key: string): any {\r\n        const frmVariable = this.getFrameworkVariable();\r\n        if (frmVariable && frmVariable[this.nameSpace] && frmVariable[this.nameSpace][key]) {\r\n            return frmVariable[this.nameSpace][key];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * å¨æ¡æ¶çé¡¶çº§windowä¸\r\n     * å®ä¹ä¸ä¸ªå¬å±åéã\r\n     * ç¨äºå­æ¾èåãåºç¨ç¼å­æ°æ®ï¼eventbusé½å¬å±å¯¹è±¡\r\n     * å¯¹ééå±æä¾æå¡\r\n     */\r\n    private frmVariableInitial() {\r\n        const topWin = this.windowService.getTopWindow();\r\n        const name = 'name';\r\n        topWin[this.frameworkVariable] = topWin[this.frameworkVariable] || {};\r\n        topWin[this.frameworkVariable][name] = this.frmVariableName;\r\n        topWin[this.frameworkVariable][this.nameSpace] = topWin[this.frameworkVariable][this.nameSpace] || {};\r\n    }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { FrameworkVariableService } from '../frmVariableService/framework-variable.service';\r\n\r\n@Injectable()\r\nexport class FuncsService {\r\n\r\n    private allgspfuncs = 'allgspfuncs';\r\n    private allfuncinvoks = 'allfuncinvoks';\r\n\r\n    constructor(@Optional() private frmVariableService: FrameworkVariableService) {\r\n        if (!this.frmVariableService) {\r\n            this.frmVariableService = new FrameworkVariableService();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ç¼å­ææåè½\r\n     */\r\n    public cacheAllFuncs(funcs: any[]) {\r\n        this.frmVariableService.frameworkVariableReg(this.allgspfuncs, funcs);\r\n    }\r\n\r\n    /**\r\n     * è·åææç¼å­çåè½\r\n     */\r\n    public getAllCachedFuncs(): any {\r\n        const funcsCache = this.frmVariableService.getFrmVariableByKey(this.allgspfuncs);\r\n        return funcsCache as any[] || [];\r\n    }\r\n\r\n    /**\r\n     * è·åæåè½\r\n     */\r\n    public getCachedFunc(funcId: string): any {\r\n        const allfuncs = this.getAllCachedFuncs();\r\n        if (allfuncs) {\r\n            return allfuncs.find(f => f.id === funcId);\r\n        }\r\n    }\r\n\r\n    public cacheAllFuncInvoks(invoks: any[]) {\r\n        this.frmVariableService.frameworkVariableReg(this.allfuncinvoks, invoks);\r\n    }\r\n\r\n    public getAllCachedFuncInvoks(): any {\r\n        const invokCache = this.frmVariableService.getFrmVariableByKey(this.allfuncinvoks);\r\n        return invokCache as any[] || [];\r\n    }\r\n\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// tslint:disable-next-line:import-blacklist\r\nimport { BehaviorSubject, Subscription, Subject } from 'rxjs';\r\nimport { Injectable, Type } from '@angular/core';\r\nimport { IDisposable } from './types';\r\n\r\n@Injectable()\r\nexport class EventBusPipe implements IDisposable {\r\n\r\n    public eventSubject: Subject<any>;\r\n    public observers: Map<string, Subscription>;\r\n    public pipeCode: string;\r\n    private subscription: Subscription;\r\n    private onceSubscription: Subscription;\r\n\r\n    constructor(private tokenValue: string, private parentEventPipeList: Array<EventBusPipe>, sub: Subject<any>) {\r\n        this.eventSubject = sub || new BehaviorSubject<any>(null);\r\n        this.subscription = new Subscription();\r\n        this.onceSubscription = new Subscription();\r\n        this.observers = new Map<string, Subscription>();\r\n\r\n        if (this.parentEventPipeList) {\r\n            this.parentEventPipeList.push(this);\r\n        }\r\n    }\r\n\r\n    post(bizPara: any) {\r\n        this.eventSubject.next(bizPara);\r\n    }\r\n\r\n    subscribe(eventHandler: (value: any) => void): IDisposable {\r\n        this.subscription = this.eventSubject.subscribe((value) => {\r\n            eventHandler(value);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    subscribeWithObkey(observerKey: string, eventHandler: (value: any) => void): IDisposable {\r\n        const observer = this.observers.get(observerKey);\r\n        if (observer) {\r\n            observer.unsubscribe();\r\n        }\r\n        const sub = this.eventSubject.subscribe((value) => {\r\n            eventHandler(value);\r\n        });\r\n        this.observers.set(observerKey, sub);\r\n        return this;\r\n    }\r\n\r\n    subscribeOnce(eventHandler: (value: any) => void): IDisposable {\r\n        const self = this;\r\n        const scription = this.eventSubject.subscribe((value) => {\r\n            eventHandler(value);\r\n            if (scription) {\r\n                scription.unsubscribe();\r\n            }\r\n            self.parentEventPipeList = new Array<EventBusPipe>();\r\n        });\r\n        return this;\r\n    }\r\n\r\n    unSubscribe() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n            this.subscription = null;\r\n        }\r\n    }\r\n    // æ³¨éä½¿ç¨onceæ¹æ³æ³¨åçè®¢éã\r\n    unSubscribeForOnce() {\r\n        this.onceSubscription.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * åæ¶æè§å¯èçè®¢é\r\n     * @param observerKey è§å¯èå¯ä¸æ è¯\r\n     */\r\n    unSubscribeWithObkey(observerKey: string) {\r\n        const scription = this.observers.get(observerKey);\r\n        if (scription) {\r\n            scription.unsubscribe();\r\n        }\r\n    }\r\n\r\n\r\n    matchEmitterToken(tokenValue: string): boolean {\r\n        if (this.tokenValue && tokenValue && this.tokenValue !== tokenValue) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    examByTargetToken(tokenValue: string): boolean {\r\n        if (this.tokenValue !== tokenValue) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    dispose(subscriber: Subscription): void {\r\n    }\r\n}\r\n","import { Injectable, Type } from '@angular/core';\r\nimport { IDisposable, IEmitable } from './types';\r\nimport { EventBusPipe } from './frm-eventpipe';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class FrmEventBus implements IEmitable {\r\n\r\n    public eventMap: Map<string, Array<EventBusPipe>>;\r\n\r\n    constructor() {\r\n        this.eventMap = new Map<string, Array<EventBusPipe>>();\r\n    }\r\n\r\n\r\n    // åéäºä»¶ï¼éç¥è®¢éèæ¥æ¶æ¶æ¯ã\r\n    post(tokenValue: string, eventArgs: any): void {\r\n        let eventPipeList = this.eventMap.get(tokenValue);\r\n        if (!eventPipeList) {\r\n            eventPipeList = new Array<EventBusPipe>();\r\n            this.eventMap.set(tokenValue, eventPipeList);\r\n        }\r\n        let eventPipe = eventPipeList.find(item => item.examByTargetToken(tokenValue));\r\n        if (!eventPipe) {\r\n            eventPipe = new EventBusPipe(tokenValue, eventPipeList, null);\r\n        }\r\n        for (const eventPipeDetail of eventPipeList) {\r\n            if (eventPipeDetail.matchEmitterToken(tokenValue)) {\r\n                eventPipeDetail.post(eventArgs);\r\n            }\r\n        }\r\n    }\r\n\r\n    initialPipe(token: string, sub: Subject<any>) {\r\n        let pipes = this.eventMap.get(token);\r\n        if (!pipes) {\r\n            pipes = new Array<EventBusPipe>();\r\n            this.eventMap.set(token, pipes);\r\n        }\r\n        let eventPipe = pipes.find(item => item.examByTargetToken(token));\r\n        if (!eventPipe) {\r\n            eventPipe = new EventBusPipe(token, pipes, sub);\r\n        }\r\n    }\r\n\r\n    // è®¢éäºä»¶\r\n    on(tokenValue: string, handler: (value: any) => void): IDisposable {\r\n        const pipe = this.getEventPipe(tokenValue);\r\n        if (pipe) {\r\n            return pipe.subscribe(handler);\r\n        }\r\n    }\r\n\r\n    /** è®¢éäºä»¶ï¼å¹¶è®°å½è®¢éèå¯ä¸æ è¯ */\r\n    onWithObkey(tokenValue: string, observerKey: string, handler: (value: any) => void): IDisposable {\r\n        const pipe = this.getEventPipe(tokenValue);\r\n        if (pipe) {\r\n            return pipe.subscribeWithObkey(observerKey, handler);\r\n        }\r\n    }\r\n\r\n    // è®¢éä¸æ¬¡ãæ¥æ¶å°ä¸æ¬¡æ¶æ¯ä¹åèªå¨åæ¶è®¢é\r\n    once(tokenValue: string, handler: (value: any) => void): IDisposable {\r\n        const pipe = this.getEventPipe(tokenValue);\r\n        if (pipe) {\r\n            const res = pipe.subscribeOnce(handler);\r\n            this.eventMap.delete(tokenValue);\r\n            return res;\r\n        }\r\n    }\r\n\r\n    unSubscribe(tokenValue: string) {\r\n        const pipe = this.getEventPipe(tokenValue);\r\n        if (pipe) {\r\n            pipe.unSubscribe();\r\n        }\r\n    }\r\n\r\n    private getEventPipe(tokenValue: string) {\r\n        const eventPipeList = this.eventMap.get(tokenValue);\r\n        if (!eventPipeList) {\r\n            return null;\r\n        }\r\n        const eventPipe = eventPipeList.find(item => item.examByTargetToken(tokenValue));\r\n        return eventPipe;\r\n    }\r\n}\r\n","import { Component, OnInit, ElementRef, ViewChild, Renderer2, AfterViewInit, Output, EventEmitter } from '@angular/core';\r\n\r\n// tslint:disable\r\n@Component({\r\n    selector: 'farris-loading',\r\n    template: `\r\n        <div #loadingBackdrop class=\"farris-loading-backdrop\" *ngIf=\"isActive\"></div>\r\n        <div #loadingContainerEl class=\"farris-loading\" *ngIf=\"isActive\">\r\n            <div class=\"ng-busy-default-wrapper\">\r\n                <div class=\"ng-busy-default-sign\">\r\n                    <div class=\"ng-busy-default-spinner\">\r\n                        <svg class=\"circular\" viewBox=\"25 25 50 50\">\r\n                            <circle class=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"></circle>\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n        .circular {\r\n            -webkit-animation: rotate 2s linear infinite;\r\n            animation: rotate 2s linear infinite;\r\n            height: 100%;\r\n            -webkit-transform-origin: center center;\r\n            transform-origin: center center;\r\n            width: 100%;\r\n            position: absolute;\r\n            top: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            margin: auto;\r\n        }\r\n        .circular .path {\r\n            stroke-dasharray: 1, 200;\r\n            stroke-dashoffset: 0;\r\n            -webkit-animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;\r\n            animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;\r\n            stroke-linecap: round;\r\n        }\r\n\r\n        @-webkit-keyframes rotate {\r\n            100% {\r\n            -webkit-transform: rotate(360deg);\r\n                    transform: rotate(360deg);\r\n            }\r\n        }\r\n        @keyframes rotate {\r\n            100% {\r\n            -webkit-transform: rotate(360deg);\r\n                    transform: rotate(360deg);\r\n            }\r\n        }\r\n        @-webkit-keyframes dash {\r\n            0% {\r\n            stroke-dasharray: 1, 200;\r\n            stroke-dashoffset: 0;\r\n            }\r\n            50% {\r\n            stroke-dasharray: 89, 200;\r\n            stroke-dashoffset: -35px;\r\n            }\r\n            100% {\r\n            stroke-dasharray: 89, 200;\r\n            stroke-dashoffset: -124px;\r\n            }\r\n        }\r\n        @keyframes dash {\r\n            0% {\r\n            stroke-dasharray: 1, 200;\r\n            stroke-dashoffset: 0;\r\n            }\r\n            50% {\r\n            stroke-dasharray: 89, 200;\r\n            stroke-dashoffset: -35px;\r\n            }\r\n            100% {\r\n            stroke-dasharray: 89, 200;\r\n            stroke-dashoffset: -124px;\r\n            }\r\n        }\r\n        @-webkit-keyframes color {\r\n            100%,\r\n            0% {\r\n            stroke: #48a7ff;\r\n            }\r\n            40% {\r\n            stroke: #48a7ff;\r\n            }\r\n            66% {\r\n            stroke: #48a7ff;\r\n            }\r\n            80%,\r\n            90% {\r\n            stroke: #48a7ff;\r\n            }\r\n        }\r\n        @keyframes color {\r\n            100%,\r\n            0% {\r\n            stroke: #48a7ff;\r\n            }\r\n            40% {\r\n            stroke: #48a7ff;\r\n            }\r\n            66% {\r\n            stroke: #48a7ff;\r\n            }\r\n            80%,\r\n            90% {\r\n            stroke: #48a7ff;\r\n            }\r\n        }\r\n        .ng-busy-default-spinner {\r\n            width: 126px;height: 126px;\r\n        }\r\n        .ng-busy-default-sign{\r\n            background: transparent;\r\n            box-shadow: none;\r\n        }\r\n        .farris-loading-backdrop {\r\n            background-color: #ffffff;\r\n            opacity: .0;\r\n        }\r\n        `\r\n    ]\r\n})\r\nexport class LoadingComponent implements OnInit, AfterViewInit {\r\n\r\n    id: number;\r\n\r\n    private _isActive = false;\r\n    message = 'æ­£å¨å è½½ï¼è¯·ç¨å...';\r\n\r\n    get isActive() {\r\n        return this._isActive;\r\n    }\r\n\r\n    set isActive(val: boolean) {\r\n        this._isActive = val;\r\n        if (val) {\r\n            this.animate('fadeIn');\r\n        } else {\r\n            this.el.nativeElement && this.el.nativeElement.remove();\r\n        }\r\n\r\n    }\r\n\r\n    @ViewChild('loadingContainerEl') loadingContainerEl: ElementRef;\r\n    @ViewChild('loadingBackdrop') loadingBackdrop: ElementRef;\r\n    @Output() closed = new EventEmitter();\r\n\r\n\r\n    constructor(private render: Renderer2, private el: ElementRef) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngOnDestroy() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // setTimeout(() => this.setPosition(), 0 );\r\n        this.setPosition();\r\n    }\r\n\r\n    close() {\r\n        this.isActive = false;\r\n    }\r\n\r\n    private setPosition() {\r\n        const containerWidth = this.loadingContainerEl.nativeElement.clientWidth;\r\n        const containerHeight = this.loadingContainerEl.nativeElement.clientHeight;\r\n\r\n        this.render.setStyle(this.loadingContainerEl.nativeElement, 'marginTop', -containerHeight / 2 + 'px');\r\n        this.render.setStyle(this.loadingContainerEl.nativeElement, 'marginLeft', -containerWidth / 2 + 'px');\r\n    }\r\n\r\n    private animate(animateCls: string) {\r\n        this.render.setAttribute(this.el.nativeElement, 'class', animateCls);\r\n        this.addAnimationEndEvent('webkitAnimationEnd', 'mozAnimationEnd', 'MSAnimationEnd', 'oanimationend', 'animationend');\r\n    }\r\n\r\n    private addAnimationEndEvent(...events: string[]) {\r\n        const _this = this;\r\n\r\n        events.forEach(e => {\r\n            _this.el.nativeElement.addEventListener(e, function handler() {\r\n                _this.render.removeAttribute(_this.el.nativeElement, 'class');\r\n                _this.el.nativeElement.removeEventListener(e, handler);\r\n\r\n                _this.closed.emit(_this.isActive);\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface LoadingConfig {\r\n    container?: any;\r\n    message?: string;\r\n    position?: string;\r\n    template?: string;\r\n}\r\n\r\nexport const loaddingDefaultConfig = {\r\n    container: 'body',\r\n    message: 'æ­£å¨å è½½ä¸­ï¼è¯·ç¨å...',\r\n    posion: 'center'\r\n};\r\n\r\nexport const LOADING_DEFAULT_CONFIG = new InjectionToken<LoadingConfig>('loading default options.');\r\n","import { LoadingComponent } from './loading.component';\r\nimport { Injectable, ApplicationRef, ComponentFactoryResolver, Injector, ComponentRef, ElementRef } from '@angular/core';\r\nimport { LoadingConfig, LOADING_DEFAULT_CONFIG, loaddingDefaultConfig } from './loading.config';\r\n\r\n@Injectable()\r\nexport class LoadingService {\r\n\r\n    config: LoadingConfig;\r\n    private loadingCmpRef: ComponentRef<LoadingComponent>;\r\n\r\n    constructor(\r\n        private appRef: ApplicationRef,\r\n        private cfr: ComponentFactoryResolver,\r\n        private injecotr: Injector\r\n    ) {\r\n    }\r\n\r\n    show(config?: LoadingConfig): LoadingComponent {\r\n        this.removeDomCheck();\r\n        this.config = this.injecotr.get(LOADING_DEFAULT_CONFIG) || {};\r\n        this.config = Object.assign(loaddingDefaultConfig, this.config);\r\n\r\n        const loadingFactory = this.cfr.resolveComponentFactory(LoadingComponent);\r\n        this.loadingCmpRef = loadingFactory.create(this.injecotr);\r\n\r\n        if (config) {\r\n            this.config = Object.assign({}, this.config, config);\r\n        }\r\n\r\n        const languageCode = localStorage.getItem('languageCode');\r\n        if (languageCode === 'en') {\r\n            this.config.message = 'Loading...';\r\n        }\r\n\r\n        const container = this.config.container;\r\n        if (container === 'body') {\r\n            document.querySelector(container as string).appendChild(this.loadingCmpRef.location.nativeElement);\r\n        } else {\r\n            if (container instanceof ElementRef) {\r\n                container.nativeElement.appendChild(\r\n                    this.loadingCmpRef.location.nativeElement\r\n                );\r\n            }\r\n        }\r\n        this.loadingCmpRef.instance.isActive = true;\r\n        Object.assign(this.loadingCmpRef.instance, this.config);\r\n\r\n        this.loadingCmpRef.instance.closed.subscribe(state => {\r\n            if (!state) {\r\n                this.clearDom(this.loadingCmpRef);\r\n            }\r\n        });\r\n\r\n        this.loadingCmpRef.changeDetectorRef.markForCheck();\r\n        this.loadingCmpRef.changeDetectorRef.detectChanges();\r\n\r\n        return this.loadingCmpRef.instance;\r\n    }\r\n\r\n    close() {\r\n        if (!!this.loadingCmpRef) {\r\n            this.clearDom(this.loadingCmpRef);\r\n        }\r\n    }\r\n\r\n    private clearDom(cmpRef: ComponentRef<LoadingComponent>) {\r\n        try {\r\n            const loadingEl = cmpRef.location.nativeElement;\r\n\r\n            if (!!loadingEl && loadingEl.parentNode) {\r\n                loadingEl.parentNode.removeChild(loadingEl);\r\n            }\r\n\r\n            this.config = this.injecotr.get(LOADING_DEFAULT_CONFIG);\r\n            cmpRef.destroy();\r\n            cmpRef = null;\r\n            setTimeout(() => {\r\n                // 1.5s åæ£æ¥æ¯å¦ç§»é¤æå\r\n                this.removeDomCheck();\r\n            }, 1500);\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.removeDomCheck();\r\n        }\r\n    }\r\n\r\n    private removeDomCheck(): void {\r\n        try {\r\n            const el = document.getElementsByTagName('farris-loading')[0];\r\n            if (!!el && !!el.parentNode) {\r\n                el.parentNode.removeChild(el);\r\n            }\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n    }\r\n}\r\n\r\n","export class IframeLink {\r\n    /** å¯ä¸æ è¯ tabId */\r\n    id: string;\r\n\r\n    code: string; // ç¼å·\r\n    FuncName: string; // åç§°\r\n    appType: string; // åºç¨ç±»å menu app\r\n    funcId: string;\r\n    appId: string;\r\n    appEntrance: string;\r\n    /** iframeæå è½½åè½çurlåquerystringåæ°è¿è¡æ¶æ¼æ¥ */\r\n    src: string;\r\n    /** iframeæå è½½åè½çurl */\r\n    url: string;\r\n\r\n    active = false;\r\n    /** å½åiframeå¯¹åºçåè½session */\r\n    sessionid: string;\r\n\r\n    reload: boolean;\r\n    /** æ¯å¦ä¸ºjQueryåçå¼å */\r\n    isjquery: boolean;\r\n\r\n    /**\r\n     * spaæ¨¡å¼ä¸éå¤æå¼åè½\r\n     * trueï¼æé æ°çé¡µé¢å®ä¾\r\n     * false || null || undefinedï¼å¤ç¨å·²æå¼çé¡µé¢å®ä¾\r\n     */\r\n    isNewTab: boolean;\r\n\r\n    /** æ ç­¾é¡µæå¼æ¹å¼: spa mdi */\r\n    mode: string;\r\n    /** èåé¨ç½²suä¿¡æ¯ */\r\n    su: string;\r\n\r\n    /**\r\n     * å½åè¡¨åçå¬å±åétoken\r\n     */\r\n    formToken: string;\r\n\r\n    constructor(code: string, sessionid: string, src = '', active = false) {\r\n        this.code = code;\r\n        this.src = src;\r\n        this.active = active;\r\n        this.sessionid = sessionid;\r\n    }\r\n}\r\n","import { FrmEventBus } from '../eventbus/frm-evenbus';\r\nimport { IframeLink } from '../models/iframe.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { EventBusPipe } from '../eventbus/frm-eventpipe';\r\nimport { FrameworkVariableService } from '../services/frmVariableService/framework-variable.service';\r\n\r\nexport class FrmUtil {\r\n\r\n    public static setHeader(bizContextId: string, options: any) {\r\n        options.headers = {\r\n            'Content-Type': 'application/json',\r\n        };\r\n        if (bizContextId) {\r\n            const contextKey = 'X-CAF-Runtime-Context';\r\n            options.headers[contextKey] = bizContextId;\r\n        }\r\n        return options;\r\n    }\r\n\r\n    public static getTabArray(): IframeLink[] {\r\n        const iframeTabArr = 'iframeTabarray';\r\n        const topWin = this.getTopWindow();\r\n        let frmWin: Window = window;\r\n        while ((!frmWin[iframeTabArr] || frmWin[iframeTabArr].length === 0) && frmWin !== topWin) {\r\n            frmWin = frmWin.parent;\r\n        }\r\n        return frmWin[iframeTabArr] as IframeLink[] || [];\r\n    }\r\n\r\n    public static getTopWindow(): Window {\r\n        let curWin: Window = window.self;\r\n        try {\r\n            while (curWin.location.origin === curWin.parent.location.origin) {\r\n                if (curWin !== curWin.parent) {\r\n                    curWin = curWin.parent;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        } catch (e) { }\r\n        return curWin;\r\n    }\r\n\r\n    public static removeTab(index: number) {\r\n        const iframeArr = this.getTabArray();\r\n        iframeArr.splice(index, 1);\r\n    }\r\n}\r\n\r\nexport class EventUtil {\r\n\r\n    /** eventToken str */\r\n    public static FARRIS_APPS = 'all-gsp-farrisapps';\r\n    public static FARRIS_APP_CLICK = 'farrisapp-click';\r\n    public static ALL_GSP_FUNCS = 'all-gsp-functions';\r\n    public static BEFORE_FUNC_CLOSE = 'beforeFuncCloseEvent';\r\n    public static FUNC_CLOSED = 'FuncClosed';\r\n    public static FUNC_SWITCH = 'funcSwitchEvent';\r\n    public static AFTER_FRAME_LOAD = \"after-iframe-load-event\";\r\n    private static eventBusKey = 'frmEventBus';\r\n\r\n    private static frmVariable = new FrameworkVariableService();\r\n\r\n    /** è·åæ¡æ¶event */\r\n    public static getFrmEvent(): FrmEventBus {\r\n        const eventBus = this.frmVariable.getFrmVariableByKey(this.eventBusKey);\r\n        return eventBus as FrmEventBus;\r\n    }\r\n\r\n    public static setFrmEvent(feb: FrmEventBus) {\r\n        this.frmVariable.frameworkVariableReg(this.eventBusKey, feb);\r\n    }\r\n\r\n    /**\r\n     * è·åappå¯ä¸çè§å¯èæ è¯\r\n     */\r\n    public static appObsToken(appId: string, appEntrance: string, tabId?: string): string {\r\n        return tabId || `${appId}#${appEntrance}`;\r\n    }\r\n\r\n    /**\r\n     * è·åfuncå¯ä¸çè§å¯èæ è¯\r\n     */\r\n    public static funcObsToken(funcId: string, tabId?: string): string {\r\n        return tabId || funcId;\r\n    }\r\n\r\n    /**\r\n     * è·åæäºä»¶ççå¬è\r\n     */\r\n    public static getObserver(eventToken: string): Map<string, Subscription> {\r\n        const feb = this.getFrmEvent();\r\n        const eventMap = feb.eventMap.get(eventToken);\r\n        if (!eventMap) {\r\n            return null;\r\n        }\r\n\r\n        let eventPipe: EventBusPipe;\r\n        for (const eventPipeDetail of eventMap) {\r\n            if (eventPipeDetail.matchEmitterToken(eventToken)) {\r\n                eventPipe = eventPipeDetail;\r\n                break;\r\n            }\r\n        }\r\n        if (!eventPipe) {\r\n            return null;\r\n        }\r\n        const obs = eventPipe.observers;\r\n        return obs;\r\n    }\r\n\r\n    /**\r\n     * æ¸ç©ºçå¬è\r\n     */\r\n    public static clearObserver(obKey: string) {\r\n        const switchObsMap = this.getObserver(this.FUNC_SWITCH);\r\n        const switchObs = switchObsMap.get(obKey);\r\n        if (switchObs) {\r\n            switchObs.unsubscribe();\r\n            switchObsMap.delete(obKey);\r\n        }\r\n        const closeObsMap = this.getObserver(this.FUNC_CLOSED);\r\n        const closeObs = closeObsMap.get(obKey);\r\n        if (closeObs) {\r\n            closeObs.unsubscribe();\r\n            closeObsMap.delete(obKey);\r\n        }\r\n        const beforeCloseMap = this.getObserver(this.BEFORE_FUNC_CLOSE);\r\n        const beforeClose = beforeCloseMap.get(obKey);\r\n        if (beforeClose) {\r\n            beforeClose.unsubscribe();\r\n            beforeCloseMap.delete(obKey);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ¸ç©ºæä¸ªç®¡é\r\n     */\r\n    public static clearEventPipe(pipeToken: string) {\r\n        const feb = this.getFrmEvent();\r\n        const eventPipes = feb.eventMap.get(pipeToken);\r\n        if (!eventPipes) {\r\n            return;\r\n        }\r\n        const eventPipe = eventPipes.find(item => item.examByTargetToken(pipeToken));\r\n        if (eventPipe) {\r\n            eventPipe.unSubscribe();\r\n            feb.eventMap.delete(pipeToken);\r\n        }\r\n    }\r\n}\r\n\r\nexport const AppType = {\r\n    App: 'app',\r\n    Menu: 'menu',\r\n    Other: 'other'\r\n};\r\n\r\nexport interface FuncEventArgs {\r\n    /** å½åtabé¡µçå¯ä¸æ è¯ */\r\n    tabId: string;\r\n    /** å½åtabæå¼çåè½ç±»å app or menu */\r\n    appType: string;\r\n    funcId?: string;\r\n    appId?: string;\r\n    appEntrance?: string;\r\n    tabName?: string;\r\n    beforeCloseHandle?: (arg: any) => void;\r\n}\r\n\r\nexport interface FuncStateParam {\r\n    /**\r\n     * formToken (ç®ç§° cvft)\r\n     */\r\n    token?: string;\r\n    /** å½åtabé¡µçå¯ä¸æ è¯ */\r\n    tabId: string;\r\n    funcId?: string;\r\n    appId?: string;\r\n    appEntrance?: string;\r\n    /**\r\n     * å½é¡µé¢nameèªå®ä¹æ¶ä¸ºèªå®ä¹\r\n     * å¦åï¼funcä¸ºfuncNameï¼appä¸ºentryName\r\n     */\r\n    menuName: string;\r\n    /**\r\n     * å¨ä½\r\n     */\r\n    action: string;\r\n}\r\n\r\nexport interface AppOptions {\r\n    /**\r\n     * æå®å½åæå¼çæ¯èåï¼menuï¼è¿æ¯åºç¨ï¼appï¼\r\n     */\r\n    appType: string;\r\n\r\n    /*** å¦ææå¼èåï¼funcIdéè¦æå®ï¼appIdãappEntranceå¯ä»¥ä¸ºç©º */\r\n    funcId: string;\r\n\r\n    /*** å¦ææå¼åºç¨ï¼appIdåappEntranceéè¦æå®ï¼funcIdå¯ä»¥ä¸ºç©º */\r\n    appId: string;\r\n    appEntrance: string;\r\n\r\n    /** å¦æéè¦éå¤æå¼åè½ï¼åèªè¡æå®å¯ä¸tabId */\r\n    tabId?: string;\r\n    tabName?: string;\r\n\r\n    /**\r\n     * è¡¨åå¬å±åétoken/formToken\r\n     */\r\n    token?: string;\r\n    /**\r\n     * è¡¨åæå±SU\r\n     */\r\n    su?: string;\r\n    routeUrl?: string;\r\n    entityParams?: any;\r\n    queryStringParams?: Map<string, string>;\r\n    isReload?: boolean;\r\n    isJquery?: boolean;\r\n    /**\r\n     * spaæ¨¡å¼ä¸éå¤æå¼åè½\r\n     * trueï¼æé æ°çé¡µé¢å®ä¾\r\n     * false || null || undefinedï¼å¤ç¨å·²æå¼çé¡µé¢å®ä¾\r\n     * ç®åæ°çtabIdå°±æ¯æ°çé¡µé¢å®ä¾\r\n     */\r\n    isNewTab?: boolean;\r\n\r\n    /**\r\n     * åªè·åè¢«æå¼è¡¨åçlinkå®ä½ï¼\r\n     * ä¸è§¦åæ¡æ¶å è½½è¡¨åå®è·µ\r\n     */\r\n    onlyGetIframeLink?: boolean;\r\n\r\n    /**\r\n     * å³é­ååè°å¤ç\r\n     */\r\n    beforeCloseHandle?: (arg: any) => void;\r\n}\r\n\r\nexport interface FrmSubjectOptions {\r\n    customToken?: string;\r\n    funcId?: string;\r\n    appId?: string;\r\n    appEntrance?: string;\r\n}\r\n\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpService, LanguageService } from '@ecp-caf/caf-common';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, switchMap } from 'rxjs/operators';\r\nimport { FrameworkVariableService } from '../frmVariableService/framework-variable.service';\r\n\r\nexport interface I18nSettingEntity {\r\n    i18nSetting?: any;\r\n    languages?: any;\r\n    currentLanCode?: string;\r\n}\r\n\r\n@Injectable()\r\nexport class FrmI18nSettingService {\r\n\r\n    private variableKey = 'frm-i18nSetting';\r\n    constructor(\r\n        private frmVariable: FrameworkVariableService,\r\n        private lanService: LanguageService,\r\n        private http: HttpService\r\n    ) {\r\n    }\r\n\r\n    public getSetting(): any {\r\n        const temp = this.frmVariable.getFrmVariableByKey(this.variableKey);\r\n        return this.deepClone(temp);\r\n    }\r\n\r\n    public getSetting$(): Observable<any> {\r\n        const temp = this.frmVariable.getFrmVariableByKey(this.variableKey);\r\n        return !temp ? this.loadSetting$() : of(this.deepClone(temp));\r\n    }\r\n\r\n    public loadSetting$(): Observable<any> {\r\n        const rtfService = (window as any).gspframeworkService && (window as any).gspframeworkService.rtf;\r\n        const entity: I18nSettingEntity = {};\r\n        if (!!rtfService && !!rtfService.language) {\r\n            try {\r\n                const lanService = rtfService.language;\r\n                lanService.i18nSetting(\r\n                    res => {\r\n                        entity.i18nSetting = res;\r\n                    },\r\n                    err => {\r\n                        console.log(err);\r\n                    }\r\n                );\r\n                lanService.allLanguages(\r\n                    res => {\r\n                        entity.languages = res;\r\n                    },\r\n                    err => {\r\n                        console.log(err);\r\n                    }\r\n                );\r\n                entity.currentLanCode = lanService.getLanguageCode();\r\n                this.frmVariable.frameworkVariableReg(this.variableKey, entity);\r\n                return of(entity);\r\n            } catch (e) {\r\n                console.log(e);\r\n                return of(null);\r\n            }\r\n        } else {\r\n            const languagesUrl = '/api/runtime/sys/v1.0/i18n/languageservice/getalllanguages';\r\n            const settingUrl = '/api/runtime/sys/v1.0/i18n/i18nusersetting/setting';\r\n            entity.currentLanCode = this.lanService.getLanguageCode();\r\n            return this.http.get(languagesUrl).pipe(\r\n                map(\r\n                    (res) => entity.languages = res\r\n                ),\r\n                switchMap(\r\n                    () => this.http.get(settingUrl)\r\n                ),\r\n                map(\r\n                    (res) => {\r\n                        entity.i18nSetting = res;\r\n                        this.frmVariable.frameworkVariableReg(this.variableKey, entity);\r\n                        return entity;\r\n                    }\r\n                ),\r\n                catchError(\r\n                    (err: HttpErrorResponse) => {\r\n                        console.log(err);\r\n                        return of(null);\r\n                    }\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    private deepClone(target: any): any {\r\n        let result;\r\n        if (typeof target === 'object') {\r\n            if (Array.isArray(target)) {\r\n                result = [];\r\n                for (let i in target) {\r\n                    result.push(this.deepClone(target[i]))\r\n                }\r\n            } else if (target === null) {\r\n                result = null;\r\n            } else if (target.constructor === RegExp) {\r\n                result = target;\r\n            } else {\r\n                result = {};\r\n                for (let i in target) {\r\n                    result[i] = this.deepClone(target[i]);\r\n                }\r\n            }\r\n        } else {\r\n            result = target;\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { Observable, of, zip } from 'rxjs';\r\nimport { HttpService, LanguageService, SessionService } from '@ecp-caf/caf-common';\r\nimport { IframeLink } from '../../models/iframe.model';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { FrmEventBus } from '../../eventbus/frm-evenbus';\r\nimport { EventUtil, FrmUtil, AppType, FuncEventArgs, AppOptions, FuncStateParam } from '../../shared/frm-util';\r\nimport { FrameworkVariableService } from '../frmVariableService/framework-variable.service';\r\nimport { FrmI18nSettingService } from '../i18nService/i18n-setting.service';\r\n\r\n\r\n@Injectable()\r\nexport class AppService {\r\n    private FUNCSTATUS_PATH = '/api/runtime/sys/v1.0/function-states';\r\n    private APPINVOKE_CAHCE_KEY = 'allappinvoks';\r\n    private frmVariableService: FrameworkVariableService;\r\n\r\n    constructor(\r\n        private http: HttpService,\r\n        private sessionSvc: SessionService,\r\n        @Optional() private i18nSetting: FrmI18nSettingService\r\n    ) {\r\n        this.frmVariableService = new FrameworkVariableService();\r\n        if (!this.i18nSetting) {\r\n            const variables = new FrameworkVariableService();\r\n            const language = new LanguageService(null);\r\n            this.i18nSetting = new FrmI18nSettingService(variables, language, http);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Appè·³è½¬æå¼\r\n     */\r\n    public openApp(appId: string, appEntrance: string, params: Map<string, string>, reload?: boolean) {\r\n        const appOpts: AppOptions = {\r\n            funcId: '',\r\n            appId,\r\n            appEntrance,\r\n            appType: AppType.App,\r\n            entityParams: params,\r\n            queryStringParams: params,\r\n            isReload: reload\r\n        };\r\n        this.openAppByOptions(appOpts);\r\n    }\r\n\r\n    /**\r\n     * Appè·³è½¬æå¼æå¡\r\n     */\r\n    public openAppByOptions(options: AppOptions) {\r\n\r\n        const linkobj = this.checkingRepeatOpen(options);\r\n        if (linkobj) {\r\n            return;\r\n        }\r\n        this.getInvokeAndEnterApp$(options).subscribe(\r\n            link => {\r\n                this.getFeb().post(EventUtil.FARRIS_APP_CLICK, link);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * æµæ¹å¼ï¼Appè·³è½¬æå¼æå¡\r\n     */\r\n    public openAppByOptions$(options: AppOptions): Observable<any> {\r\n        const linkobj = this.checkingRepeatOpen(options);\r\n        if (linkobj) {\r\n            return of(true);\r\n        }\r\n        return this.getInvokeAndEnterApp$(options).pipe(\r\n            map(\r\n                link => {\r\n                    this.getFeb().post(EventUtil.FARRIS_APP_CLICK, link);\r\n                    return true;\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * è·åappè°ç¨ä¿¡æ¯\r\n     */\r\n    public getAppInvok(appId: string): Observable<any> {\r\n        const invoks = this.getInvokCache();\r\n        const funcInvok = invoks.find(f => f.id === appId);\r\n        if (!funcInvok) {\r\n            return this.getInvokConfig(appId).pipe(\r\n                map(v => {\r\n                    if (!v) {\r\n                        return null;\r\n                    }\r\n                    this.refreshInvokCache(invoks, v);\r\n                    return v;\r\n                })\r\n            );\r\n        }\r\n        return of(funcInvok);\r\n    }\r\n\r\n    public beforeCloseAppByOptions(options: AppOptions) {\r\n        const appObkey = EventUtil.appObsToken(options.appId, options.appEntrance, options.tabId);\r\n        const obs = EventUtil.getObserver(EventUtil.BEFORE_FUNC_CLOSE).get(appObkey);\r\n        if (!obs) {\r\n            this.closeAppByOptions(options).subscribe();\r\n            return;\r\n        }\r\n\r\n        const eventArgs: FuncEventArgs = {\r\n            tabId: this.getPageId(options.appId, options.appEntrance, options.tabId),\r\n            appType: AppType.App,\r\n            appId: options.appId,\r\n            appEntrance: options.appEntrance\r\n        };\r\n        this.getFeb().post(EventUtil.BEFORE_FUNC_CLOSE, eventArgs);\r\n    }\r\n\r\n    /**\r\n     * Appå³é­åæ¥å£\r\n     */\r\n    public beforeCloseApp(appId: string, appEntrance: string, tabId?: string) {\r\n        const self = this;\r\n        const appObkey = EventUtil.appObsToken(appId, appEntrance, tabId);\r\n        const obs = EventUtil.getObserver(EventUtil.BEFORE_FUNC_CLOSE).get(appObkey);\r\n        if (!obs) {\r\n            this.closeApp(appId, appEntrance, tabId).subscribe();\r\n            return;\r\n        }\r\n\r\n        const eventArgs: FuncEventArgs = {\r\n            tabId: self.getPageId(appId, appEntrance, tabId),\r\n            appType: AppType.App,\r\n            appId,\r\n            appEntrance\r\n        };\r\n        this.getFeb().post(EventUtil.BEFORE_FUNC_CLOSE, eventArgs);\r\n    }\r\n\r\n    public closeAppByOptions(options: AppOptions): Observable<any> {\r\n        const appObkey = EventUtil.appObsToken(options.appId, options.appEntrance, options.tabId);\r\n        const pageToken = this.getPageId(options.appId, options.appEntrance, options.tabId);\r\n        EventUtil.clearObserver(appObkey);\r\n        EventUtil.clearEventPipe(pageToken);\r\n        const objIndex = FrmUtil.getTabArray().findIndex(i => i.id === pageToken && i.appType === AppType.App);\r\n        const obj = FrmUtil.getTabArray()[objIndex];\r\n\r\n        options.token = options.token || obj.formToken;\r\n        FrmUtil.removeTab(objIndex);\r\n        const eventArgs: FuncEventArgs = {\r\n            tabId: pageToken,\r\n            appType: AppType.App,\r\n            appId: options.tabId,\r\n            appEntrance: options.appEntrance\r\n        };\r\n        this.getFeb().post(EventUtil.FUNC_CLOSED, eventArgs);\r\n        return this.quitApp(options, obj.su);\r\n    }\r\n\r\n    /**\r\n     * å³é­app\r\n     */\r\n    public closeApp(appId: string, appEntrance: string, tabId?: string): Observable<any> {\r\n        const self = this;\r\n        const appObkey = EventUtil.appObsToken(appId, appEntrance, tabId);\r\n        const pageId = this.getPageId(appId, appEntrance, tabId);\r\n        EventUtil.clearObserver(appObkey);\r\n        EventUtil.clearEventPipe(pageId);\r\n        const objIndex = FrmUtil.getTabArray().findIndex(i => i.id === pageId && i.appType === AppType.App);\r\n        const obj = FrmUtil.getTabArray()[objIndex];\r\n        const formToken = obj.formToken;\r\n        FrmUtil.removeTab(objIndex);\r\n        const eventArgs: FuncEventArgs = {\r\n            tabId: pageId,\r\n            appType: AppType.App,\r\n            appId,\r\n            appEntrance,\r\n        };\r\n        self.getFeb().post(EventUtil.FUNC_CLOSED, eventArgs);\r\n\r\n        const options: AppOptions = {\r\n            tabId,\r\n            funcId: '',\r\n            appId,\r\n            appEntrance,\r\n            appType: AppType.App,\r\n            token: formToken\r\n        };\r\n        return this.quitApp(options, obj.su).pipe(\r\n            map(v => { })\r\n        );\r\n    }\r\n\r\n    private getInvokeAndEnterApp$(options: AppOptions): Observable<IframeLink> {\r\n        const newPageId = this.newPageId(options.appId, options.appEntrance, options.tabId);\r\n        options.tabId = newPageId;\r\n        return this.getAppInvok(options.appId).pipe(\r\n            switchMap(\r\n                value => {\r\n                    let invokEntry = value.appInvoks.find(invok => invok.appEntrance === options.appEntrance);\r\n                    if (!options.appEntrance && !invokEntry) {\r\n                        invokEntry = value.appInvoks.find(invok => !invok.appEntrance);\r\n                    }\r\n                    if (!invokEntry) {\r\n                        window.alert(`è¯·æ£æ¥å½ååºç¨(ID:${options.appId})éç½®çåºç¨å¥å£(appEntrance:${options.appEntrance})æ¯å¦å­å¨`);\r\n                        return;\r\n                    }\r\n                    let entityParam: any;\r\n                    try {\r\n                        entityParam = invokEntry.entityParams ? JSON.parse(invokEntry.entityParams) : null;\r\n                    } catch (e) {\r\n                        entityParam = null;\r\n                        console.log(e);\r\n                    }\r\n                    const su = this.getSu(value.url);\r\n\r\n                    return this.enterApp({\r\n                        tabId: newPageId,\r\n                        appId: options.appId,\r\n                        appEntrance: options.appEntrance,\r\n                        menuName: options.tabName || invokEntry.name,\r\n                        action: 'enterapp'\r\n                    }, su).pipe(\r\n                        map(\r\n                            token => {\r\n                                const routurl = value.url + (options.appEntrance ? `#/${options.appEntrance}` : '');\r\n                                const linkobj = new IframeLink(\r\n                                    value.code,\r\n                                    null,\r\n                                    this.buildQueryString(routurl, options.appId, options.appEntrance,\r\n                                        options.tabId, token, options.queryStringParams),\r\n                                );\r\n                                // idå å¥å£åºå,tabIdé¡µç­¾å¯ä¸æ è¯\r\n                                linkobj.id = newPageId;\r\n                                linkobj.appType = AppType.App;\r\n                                linkobj.appId = options.appId;\r\n                                linkobj.appEntrance = options.appEntrance;\r\n                                // æ¾ç¤ºappåå­åå¥å£åå­\r\n                                linkobj.FuncName = options.tabName || invokEntry.name;\r\n                                linkobj.url = value.url;\r\n                                linkobj.reload = options.isReload;\r\n                                linkobj.su = su;\r\n                                linkobj.formToken = token;\r\n                                if (entityParam) {\r\n                                    entityParam.forEach(\r\n                                        item => {\r\n                                            if (item.name === 'mode') {\r\n                                                linkobj.mode = item.value;\r\n                                                linkobj.src += (item.value ? `&appMode=${item.value}&` : '');\r\n                                            }\r\n                                        }\r\n                                    );\r\n                                }\r\n\r\n                                this.getFeb().post(newPageId, options.entityParams);\r\n                                return linkobj;\r\n                            }\r\n                        ),\r\n                        switchMap(\r\n                            formLink => {\r\n                                return this.i18nSetting.getSetting$().pipe(\r\n                                    map(\r\n                                        () => formLink\r\n                                    )\r\n                                )\r\n                            }\r\n                        )\r\n                    );\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    private getInvokConfig(appId: string) {\r\n        const url = `/api/runtime/sys/v1.0/gspapp/${appId}`;\r\n        return this.http.request('Get', url, FrmUtil.setHeader(null, {}));\r\n    }\r\n\r\n    /**\r\n     * è¿å¥åºç¨ï¼è§¦åç¸å³æå¡\r\n     */\r\n    private enterApp(enterParam: FuncStateParam, su: string): Observable<any> {\r\n        const bizContextUrl = this.FUNCSTATUS_PATH + (!su ? '' : `?su=${su}`);\r\n        return this.http.request('Post', bizContextUrl, FrmUtil.setHeader(null, { body: enterParam })).pipe(\r\n            map((v: any) => {\r\n                return v.token || v.sessionId;\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * éåºåºç¨ï¼è§¦åç¸å³æå¡\r\n     */\r\n    private quitApp(options: AppOptions, su?: string): Observable<any> {\r\n        const body = {\r\n            tabId: options.tabId,\r\n            token: options.token,\r\n            appId: options.appId,\r\n            appEntrance: options.appEntrance,\r\n            action: 'quitapp'\r\n        };\r\n\r\n        const invokObs = this.getAppInvok(options.appId);\r\n        const bizContextUrl = this.FUNCSTATUS_PATH + (!su ? '' : `?su=${su}`);\r\n        const funcState$ = this.http.request('Post', bizContextUrl, FrmUtil.setHeader(null, { body }));\r\n        // tslint:disable-next-line: deprecation\r\n        const $r = zip(invokObs, funcState$, (res1, res2) => ({ res1, res2 }));\r\n        return $r;\r\n    }\r\n\r\n    private getSu(url: string): string {\r\n        const uriArr = url.split('/');\r\n        return uriArr.length > 3 ? uriArr[3] : '';\r\n    }\r\n\r\n    private getInvokCache() {\r\n        const appInvokesCache = this.frmVariableService.getFrmVariableByKey(this.APPINVOKE_CAHCE_KEY);\r\n        return appInvokesCache as any[] || [];\r\n    }\r\n\r\n    private refreshInvokCache(invoks: any[], funcInvok: any) {\r\n        if (!funcInvok) {\r\n            return;\r\n        }\r\n        invoks.push(funcInvok);\r\n        this.frmVariableService.frameworkVariableReg(this.APPINVOKE_CAHCE_KEY, invoks);\r\n    }\r\n\r\n    // tslint:disable-next-line: max-line-length\r\n    private buildQueryString(routurl: string, appId: string, appEntrance: string, tabId: string, token: string, params: Map<string, string>): string {\r\n        if (routurl.indexOf('?') < 0) {\r\n            routurl += `?appId=${appId}&appEntrance=${appEntrance}`;\r\n        } else {\r\n            routurl += `&appId=${appId}&appEntrance=${appEntrance}`;\r\n        }\r\n\r\n        routurl += `&appType=${AppType.App}`;\r\n        routurl += `&tabId=${this.getPageId(appId, appEntrance, tabId)}`;\r\n        routurl += !token ? '' : `&cvft=${token}`;\r\n        if (params) {\r\n            params.forEach((value, key) => {\r\n                routurl += !key ? '' : `&${key}=${value}`;\r\n            });\r\n        }\r\n        return routurl;\r\n    }\r\n\r\n\r\n    private getFeb(): FrmEventBus {\r\n        return EventUtil.getFrmEvent();\r\n    }\r\n\r\n    private mergeAppId(appId: string, appEntrance): string {\r\n        return `${appId}_${appEntrance}`;\r\n    }\r\n\r\n    /**\r\n     * è·åå½åèåé¡µé¢çå¯ä¸æ è¯\r\n     */\r\n    private getPageId(appId: string, appEntrance: string, tabId: string): string {\r\n        return tabId || this.mergeAppId(appId, appEntrance);\r\n    }\r\n\r\n    /**\r\n     * çæé¡µé¢å¯ä¸æ è¯\r\n     */\r\n    private newPageId(appId: string, appEntrance: string, tabId: string): string {\r\n        return tabId ? `${this.mergeAppId(appId, appEntrance)}_${tabId}` : this.mergeAppId(appId, appEntrance);\r\n    }\r\n\r\n    private checkingRepeatOpen(options: AppOptions): IframeLink {\r\n        const appId = options.appId;\r\n        const appEntrance = options.appEntrance;\r\n        const tabId = options.tabId;\r\n        const entityParams = options.entityParams;\r\n\r\n        let linkobj: IframeLink;\r\n        const pageId = this.getPageId(appId, appEntrance, tabId);\r\n        linkobj = FrmUtil.getTabArray().find(i => i.id === pageId && i.appType === AppType.App);\r\n        if (linkobj) {\r\n            linkobj.FuncName = options.tabName || linkobj.FuncName;\r\n            linkobj.src = this.buildQueryString(linkobj.url, appId, appEntrance, options.tabId,\r\n                linkobj.sessionid, options.queryStringParams);\r\n            linkobj.reload = options.isReload;\r\n            this.getFeb().post(pageId, entityParams);\r\n            this.getFeb().post(EventUtil.FARRIS_APP_CLICK, linkobj);\r\n        }\r\n        return linkobj;\r\n    }\r\n\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { OpenfuncOptions } from '../../models/function.model';\r\nimport { of, Observable } from 'rxjs';\r\nimport { FrmEventBus } from '../../eventbus/frm-evenbus';\r\nimport { LoadingService } from '../loading/loading.service';\r\nimport { FuncsService } from '../funcsservice/funcs.service';\r\nimport { IframeLink } from '../../models/iframe.model';\r\nimport { map, switchMap, catchError } from 'rxjs/operators';\r\nimport { CacheService, HttpService, LanguageService, SessionService } from '@ecp-caf/caf-common';\r\nimport { EventUtil, FrmUtil, AppType, FuncEventArgs, AppOptions, FuncStateParam } from '../../shared/frm-util';\r\nimport { AppService } from '../appservice/app.service';\r\nimport { FrmI18nSettingService } from '../i18nService/i18n-setting.service';\r\nimport { FrameworkVariableService } from '../frmVariableService/framework-variable.service';\r\n\r\n@Injectable()\r\nexport class FrameworkService {\r\n\r\n    private FUNCSTATUS_PATH = '/api/runtime/sys/v1.0/function-states';\r\n    public BeforeFuncClose = EventUtil.BEFORE_FUNC_CLOSE;\r\n    public FuncClosed = EventUtil.FUNC_CLOSED;\r\n    public FuncSwitch = EventUtil.FUNC_SWITCH;\r\n\r\n    constructor(\r\n        private http: HttpService,\r\n        private router: Router,\r\n        private cache: CacheService,\r\n        private sessionSvc: SessionService,\r\n        private feb: FrmEventBus,\r\n        private funcService: FuncsService,\r\n        private loadService: LoadingService,\r\n        @Optional() private appService: AppService,\r\n        @Optional() private i18nSetting: FrmI18nSettingService\r\n    ) {\r\n        if (!this.i18nSetting) {\r\n            const variables = new FrameworkVariableService();\r\n            const language = new LanguageService(null);\r\n            this.i18nSetting = new FrmI18nSettingService(variables, language, http);\r\n        }\r\n        if (!this.appService) {\r\n            this.appService = new AppService(this.http, this.sessionSvc, this.i18nSetting);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ ¹æ®funcidæå¼åè½èå\r\n     * (éç¨äºåé¡µç­¾è·¯ç±ï¼ä¸æ¯æNG7åçº§åèåä¹é´è·³è½¬)\r\n     */\r\n    openFunc(funcid: string, routepath: string, parentsessionid: string, newsession: boolean = true, simpleparam: string = ''): any {\r\n\r\n        const appOps: AppOptions = {\r\n            appType: AppType.Menu,\r\n            funcId: funcid,\r\n            appId: '',\r\n            appEntrance: ''\r\n        };\r\n\r\n        this.internalOpen(appOps);\r\n        return of(true);\r\n        // return this.internalOpen$(appOps);\r\n    }\r\n\r\n    /**\r\n     * ç´æ¥æå¼åè½\r\n     */\r\n    public openMenu(options: AppOptions) {\r\n        switch (options.appType && options.appType.toLowerCase()) {\r\n            case AppType.App:\r\n                if (!options.appId) {\r\n                    window.alert('åæ°appIdä¸è½ä¸ºç©ºï¼');\r\n                    return;\r\n                }\r\n                this.appService.openAppByOptions(options);\r\n                break;\r\n            case AppType.Menu:\r\n                this.internalOpen(options);\r\n                break;\r\n            case AppType.Other: break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * éè¿æµæ¹å¼æå¼åè½\r\n     */\r\n    public openMenu$(options: AppOptions) {\r\n        switch (options.appType && options.appType.toLowerCase()) {\r\n            case AppType.App:\r\n                if (!options.appId) {\r\n                    window.alert('åæ°appIdä¸è½ä¸ºç©ºï¼');\r\n                    return;\r\n                }\r\n                return this.appService.openAppByOptions$(options);\r\n            case AppType.Menu:\r\n                if (options.onlyGetIframeLink === true) {\r\n                    return this.internalOpenByIframeLink$(options);\r\n                }\r\n                return this.internalOpen$(options);\r\n            case AppType.Other: break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æå¼èæ¥èå\r\n     */\r\n    openConnectedFunc(funcId: string, options: OpenfuncOptions) {\r\n        const appOps: AppOptions = {\r\n            appType: AppType.Menu,\r\n            funcId,\r\n            appId: '',\r\n            appEntrance: '',\r\n            entityParams: options.EntityParam,\r\n        };\r\n\r\n        this.internalOpen(appOps);\r\n    }\r\n\r\n    /**\r\n     * æå¼èæ¥èåï¼å¹¶ä¼ å\r\n     */\r\n    public openFuncWithParam(funcId: string, params: Map<string, string>, reload?: boolean) {\r\n        const options: AppOptions = {\r\n            appType: AppType.Menu,\r\n            funcId,\r\n            appId: '',\r\n            appEntrance: '',\r\n            entityParams: params,\r\n            queryStringParams: params,\r\n            isReload: reload\r\n        };\r\n        this.internalOpen(options);\r\n    }\r\n\r\n    /**\r\n     * æå¼åè½ï¼ä¸è¿åæµ\r\n     */\r\n    private internalOpen(options: AppOptions) {\r\n        this.checkingBeforeOpen$(options)\r\n            .subscribe(\r\n                res => {\r\n                    if (!res || !res.func || res.linkobj) {\r\n                        return;\r\n                    }\r\n                    const func = res.func;\r\n                    this.getInvokeAndEnterFunc$(options, func).subscribe(\r\n                        (lobj: IframeLink) => this.getFeb().post(EventUtil.FARRIS_APP_CLICK, lobj),\r\n                        err => {\r\n                            const info = {\r\n                                isErr: true,\r\n                                errInfo: err\r\n                            };\r\n                            this.getFeb().post(EventUtil.FARRIS_APP_CLICK, info);\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n    }\r\n\r\n    /**\r\n     * éè¿ä¸²æµæ§å¶ï¼æå¼èå\r\n     */\r\n    private internalOpen$(options: AppOptions): Observable<any> {\r\n        return this.checkingBeforeOpen$(options)\r\n            .pipe(\r\n                switchMap(\r\n                    res => {\r\n                        if (!res || !res.func || res.linkobj) {\r\n                            return of(null);\r\n                        }\r\n                        const func = res.func;\r\n                        return this.getInvokeAndEnterFunc$(options, func).pipe(\r\n                            map(\r\n                                (lobj: IframeLink) => {\r\n                                    this.getFeb().post(EventUtil.FARRIS_APP_CLICK, lobj);\r\n                                    return true;\r\n                                }\r\n                            )\r\n                        );\r\n                    }\r\n                )\r\n            );\r\n    }\r\n\r\n    /**\r\n     * éè¿ä¸²æµè·åè¢«æå¼èåçiframeLinkå¯¹è±¡ä¿¡æ¯\r\n     */\r\n    private internalOpenByIframeLink$(options: AppOptions): Observable<IframeLink> {\r\n\r\n        if (!options.funcId) {\r\n            window.alert('åæ°funcIdä¸è½ä¸ºç©ºï¼');\r\n            return of(null);\r\n        }\r\n\r\n        return this.getFuncEntity(options.funcId).pipe(\r\n            switchMap(\r\n                func => {\r\n                    if (!func) {\r\n                        window.alert(`è¯·ç¡®è®¤æ¨æ¯å¦å·å¤æå¼èå(ID:${options.funcId})çæé`);\r\n                        return null;\r\n                    }\r\n                    return this.getInvokeAndEnterFunc$(options, func);\r\n                }\r\n            ));\r\n    }\r\n\r\n    private getInvokeAndEnterFunc$(options: AppOptions, func: any): Observable<IframeLink> {\r\n        const newPageId = this.newPageId(options.funcId, options.tabId);\r\n        options.tabId = newPageId;\r\n        let linkobj: IframeLink;\r\n        return this.getFuncInvok(options.funcId).pipe(\r\n            switchMap(\r\n                funcInvok => {\r\n\r\n                    const routurl = funcInvok.invokingConfig.url;\r\n                    const paramInfo = funcInvok.invokingConfig.staticParams;\r\n                    const entityParamInfo = funcInvok.invokingConfig.entityParams;\r\n                    const staticParam = paramInfo ? JSON.parse(paramInfo) : '';\r\n                    const entityParam = entityParamInfo ? JSON.parse(entityParamInfo) : '';\r\n\r\n                    const su = this.getSu(routurl);\r\n                    return this.enterFunc({\r\n                        tabId: newPageId,\r\n                        funcId: options.funcId,\r\n                        menuName: options.tabName || func.name,\r\n                        action: 'enter'\r\n                    }, su).pipe(\r\n                        map(\r\n                            formToken => {\r\n                                linkobj = new IframeLink(\r\n                                    func.code,\r\n                                    null,\r\n                                    this.buildQueryStringByMap(routurl, options.funcId, options.tabId,\r\n                                        formToken, options.queryStringParams),\r\n                                );\r\n                                linkobj.id = newPageId; // é¡µé¢å¯ä¸æ è¯ åè®¸é¡µé¢éå¤æå¼\r\n                                linkobj.appType = AppType.Menu;\r\n                                linkobj.funcId = options.funcId;\r\n                                linkobj.FuncName = options.tabName || func.name;\r\n                                linkobj.url = funcInvok.invokingConfig.url;\r\n                                linkobj.reload = options.isReload;\r\n                                linkobj.su = su;\r\n                                linkobj.isNewTab = options.isNewTab;\r\n                                linkobj.formToken = formToken;\r\n\r\n                                if (staticParam) {\r\n                                    // dkyç¹æ®åºæ¯ï¼æå¼jqueryåçåè½\r\n                                    staticParam.forEach(\r\n                                        item => {\r\n                                            if (item.name === 'jquery') {\r\n                                                linkobj.isjquery = true;\r\n                                            }\r\n                                            if (item.name === 'mode') {\r\n                                                linkobj.mode = item.value;\r\n                                                linkobj.src += (item.value ? `&appMode=${item.value}&` : '');\r\n                                            }\r\n                                        }\r\n                                    );\r\n                                }\r\n                                // å¤§å¯¹è±¡å®ä½ä¼ åï¼éå¯¹è¢«æå¼é¡µé¢å»ºç«å¯ä¸ç®¡é\r\n                                this.getFeb().post(newPageId, options.entityParams);\r\n                                // this.getFeb().post(EventUtil.FARRIS_APP_CLICK, linkobj);\r\n                                return linkobj;\r\n                            }\r\n                        ),\r\n                        switchMap(\r\n                            formLink => {\r\n                                return this.i18nSetting.getSetting$().pipe(\r\n                                    map(\r\n                                        () => formLink\r\n                                    )\r\n                                )\r\n                            }\r\n                        )\r\n                    );\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n\r\n    /**\r\n     * æµæ¹å¼æ£æ¥èåæå¼ç¶æ\r\n     */\r\n    private checkingBeforeOpen$(options: AppOptions): Observable<any> {\r\n        if (!options.funcId) {\r\n            window.alert('åæ°funcIdä¸è½ä¸ºç©ºï¼');\r\n            return of(null);\r\n        }\r\n\r\n        return this.getFuncEntity(options.funcId).pipe(map(\r\n            func => {\r\n                if (!func) {\r\n                    window.alert(`è¯·ç¡®è®¤æ¨æ¯å¦å·å¤æå¼èå(ID:${options.funcId})çæé`);\r\n                    return null;\r\n                }\r\n\r\n                const funcId = options.funcId;\r\n                const tabId = options.tabId;\r\n                const pageId = this.getPageId(funcId, tabId);\r\n                const linkobj = FrmUtil.getTabArray().find(i => i.id === pageId && i.appType === AppType.Menu);\r\n\r\n                if (linkobj) {\r\n                    linkobj.FuncName = options.tabName || linkobj.FuncName;\r\n                    linkobj.src = this.buildQueryStringByMap(linkobj.url, funcId, options.tabId, '', options.queryStringParams);\r\n                    linkobj.reload = options.isReload; // çé¢å·æ°ä¸æ¹session\r\n                    this.getFeb().post(pageId, options.entityParams);\r\n                    this.getFeb().post(EventUtil.FARRIS_APP_CLICK, linkobj);\r\n                }\r\n                return { func, linkobj };\r\n            }\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * å³é­å\r\n     */\r\n    beforeCloseMenu(options: AppOptions) {\r\n        switch (options.appType && options.appType.toLowerCase()) {\r\n            case AppType.App:\r\n                this.appService.beforeCloseAppByOptions(options);\r\n                break;\r\n            case AppType.Menu:\r\n                this.beforeCloseFuncByOptions(options);\r\n                break;\r\n            default: break;\r\n        }\r\n    }\r\n\r\n    private beforeCloseFuncByOptions(options: AppOptions) {\r\n        const func = this.funcService.getCachedFunc(options.funcId);\r\n        const funcObkey = EventUtil.funcObsToken(options.funcId, options.tabId);\r\n        const pageId = this.getPageId(options.funcId, options.tabId);\r\n\r\n        const obs = EventUtil.getObserver(EventUtil.BEFORE_FUNC_CLOSE).get(funcObkey);\r\n        if (!obs) {\r\n            this.closeFuncByOptions(options);\r\n            return;\r\n        }\r\n\r\n        const eventArgs: FuncEventArgs = {\r\n            tabId: pageId,\r\n            appType: AppType.Menu,\r\n            funcId: options.funcId,\r\n            tabName: func && func.Name,\r\n            beforeCloseHandle: options.beforeCloseHandle\r\n        };\r\n        this.getFeb().post(EventUtil.BEFORE_FUNC_CLOSE, eventArgs);\r\n    }\r\n\r\n    /**\r\n     * èåå³é­åäºä»¶è§¦å(æ  token)\r\n     */\r\n    beforeCloseFunc(funcId: string, tabId?: string) {\r\n        const func = this.funcService.getCachedFunc(funcId);\r\n        const funcObkey = EventUtil.funcObsToken(funcId, tabId);\r\n\r\n        const obs = EventUtil.getObserver(EventUtil.BEFORE_FUNC_CLOSE).get(funcObkey);\r\n        if (!obs) {\r\n            this.closeFunc(funcId, tabId);\r\n            return;\r\n        }\r\n\r\n        const eventArgs: FuncEventArgs = {\r\n            tabId: this.getPageId(funcId, tabId),\r\n            appType: AppType.Menu,\r\n            funcId,\r\n            tabName: func && func.Name\r\n        };\r\n        this.getFeb().post(EventUtil.BEFORE_FUNC_CLOSE, eventArgs);\r\n    }\r\n\r\n    /**\r\n     * ç´æ¥å³é­\r\n     *\r\n     */\r\n    closeMenu(options: AppOptions) {\r\n        switch (options.appType && options.appType.toLowerCase()) {\r\n            case AppType.App:\r\n                this.appService.closeAppByOptions(options).subscribe();\r\n                break;\r\n            case AppType.Menu:\r\n                this.closeFuncByOptions(options);\r\n                break;\r\n            default: break;\r\n        }\r\n    }\r\n\r\n    private closeFuncByOptions(options: AppOptions) {\r\n        const pageId = this.getPageId(options.funcId, options.tabId);\r\n        EventUtil.clearObserver(EventUtil.funcObsToken(options.funcId, options.tabId));\r\n        EventUtil.clearEventPipe(pageId); // å½åé¡µé¢å¤§å¯¹è±¡ä¼ åä¼æå¯ä¸çç®¡é\r\n        const func = this.funcService.getCachedFunc(options.funcId);\r\n        const objIndex = FrmUtil.getTabArray().findIndex(i => i.id === pageId && i.appType === AppType.Menu);\r\n        const obj = FrmUtil.getTabArray()[objIndex];\r\n        options.token = options.token || obj.formToken;\r\n        let su = options.su;\r\n        if (obj) {\r\n            su = obj.su;\r\n            FrmUtil.removeTab(objIndex);\r\n            const eventArgs: FuncEventArgs = {\r\n                tabId: pageId,\r\n                appType: AppType.Menu,\r\n                funcId: options.funcId,\r\n                tabName: func && func.name\r\n            };\r\n            this.getFeb().post(EventUtil.FUNC_CLOSED, eventArgs);\r\n        }\r\n        this.quitFunc(options, su)\r\n            .subscribe(() => { });\r\n    }\r\n\r\n    /**\r\n     * å³é­èåtabé¡µç­¾ï¼tabIdå¯ä»¥æå®ï¼é»è®¤ä¸ºfuncId\r\n     */\r\n    closeFunc(funcId: string, tabId?: string): any {\r\n        const self = this;\r\n        const pageId = this.getPageId(funcId, tabId);\r\n        EventUtil.clearObserver(EventUtil.funcObsToken(funcId, tabId));\r\n        EventUtil.clearEventPipe(pageId); // å½åé¡µé¢å¤§å¯¹è±¡ä¼ åä¼æå¯ä¸çç®¡é\r\n        const func = this.funcService.getCachedFunc(funcId);\r\n        const objIndex = FrmUtil.getTabArray().findIndex(i => i.id === pageId && i.appType === AppType.Menu);\r\n        const obj = FrmUtil.getTabArray()[objIndex];\r\n        const formToken = obj.formToken;\r\n        if (obj) {\r\n            FrmUtil.removeTab(objIndex);\r\n            const eventArgs: FuncEventArgs = {\r\n                tabId: pageId,\r\n                appType: AppType.Menu,\r\n                funcId,\r\n                tabName: func && func.name\r\n            };\r\n            self.getFeb().post(EventUtil.FUNC_CLOSED, eventArgs);\r\n        }\r\n\r\n        const options: AppOptions = {\r\n            tabId,\r\n            funcId,\r\n            appId: '',\r\n            appEntrance: '',\r\n            appType: AppType.Menu,\r\n            token: formToken,\r\n        };\r\n        this.quitFunc(options, obj.su)\r\n            .subscribe(() => { }\r\n            );\r\n        return of(true);\r\n    }\r\n\r\n\r\n    /**\r\n     * è·åèåçè°ç¨ä¿¡æ¯\r\n     */\r\n    getFuncInvok(funcId: string): Observable<any> {\r\n        const invoks = this.getInvokCache();\r\n        const funcInvok = invoks.find(f => f.id === funcId);\r\n        if (!funcInvok) {\r\n            return this.getInvokConfig(funcId).pipe(\r\n                map(v => {\r\n                    if (!v) {\r\n                        return null;\r\n                    }\r\n                    invoks.push(v);\r\n                    this.funcService.cacheAllFuncInvoks(invoks);\r\n                    return v;\r\n                })\r\n            );\r\n        }\r\n        return of(funcInvok);\r\n    }\r\n\r\n    /**\r\n     * è·åèåå®ä½\r\n     */\r\n    getFuncEntity(funcId: string): Observable<any> {\r\n        const func = this.funcService.getCachedFunc(funcId);\r\n        if (!func) {\r\n            const url = `/api/runtime/sys/v1.0/functions/${funcId}`;\r\n            return this.http.request('Get', url, FrmUtil.setHeader(null, {}))\r\n                .pipe(\r\n                    map(v => {\r\n                        if (!v || !v[0]) {\r\n                            return null;\r\n                        }\r\n                        const allFuncs = this.funcService.getAllCachedFuncs() as any[];\r\n                        allFuncs.push(v[0]);\r\n                        this.funcService.cacheAllFuncs(allFuncs);\r\n                        return v[0];\r\n                    })\r\n                );\r\n        }\r\n        return of(func);\r\n    }\r\n\r\n    /**\r\n     * è·åèåé¢ç½®åæ°\r\n     */\r\n    getPresetParams(funcId: string): Observable<any> {\r\n        return this.getFuncInvok(funcId).pipe(\r\n            map(funcInvok => {\r\n                const paramInfo = funcInvok.invokingConfig.staticParams;\r\n                const entityParamInfo = funcInvok.invokingConfig.entityParams;\r\n                const staticParam = paramInfo ? JSON.parse(paramInfo) : [];\r\n                const entityParam = entityParamInfo ? JSON.parse(entityParamInfo) : [];\r\n                return this.mergeParams(staticParam, entityParam);\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * è·åèåçéæåæ°\r\n     */\r\n    getStaticParam(funcId: string): Observable<any> {\r\n        return this.getFuncInvok(funcId).pipe(\r\n            map(v => {\r\n                if (v.invokingConfig.staticParams) {\r\n                    return JSON.parse(v.invokingConfig.staticParams);\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * è·åè¡¨åçå®ä½åæ°\r\n     */\r\n    getEntityParam(tabId: string, handler: (value: any) => void, isSubonce: boolean = true): any {\r\n        if (isSubonce) {\r\n            this.getFeb().once(tabId, handler);\r\n        }\r\n        this.getFeb().on(tabId, handler);\r\n    }\r\n\r\n    entityParamUnsub(funcId: string) {\r\n        this.getFeb().unSubscribe(funcId);\r\n    }\r\n\r\n    /**\r\n     * è·åæèåçå®ä½åæ°ç»æ\r\n     */\r\n    getEntityParamStructure(funcId: string): Observable<any> {\r\n        return this.getFuncInvok(funcId).pipe(\r\n            map(v => {\r\n                if (v.invokingConfig.entityParams) {\r\n                    return JSON.parse(v.invokingConfig.entityParams);\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    private mergeParams(staticParam: any[], entityParam: any[]): Map<any, any> {\r\n        const paraMap = new Map<any, any>();\r\n        if (entityParam) {\r\n            entityParam.forEach((item: any) => {\r\n                paraMap.set(item.name, item.value);\r\n            });\r\n        }\r\n        if (staticParam) {\r\n            // funcä¸å¯¹appåæ°å¤ç¨\r\n            staticParam.forEach((item: any) => {\r\n                paraMap.set(item.name, item.value);\r\n            });\r\n        }\r\n        return paraMap;\r\n    }\r\n\r\n\r\n    private getInvokConfig(funcId: string) {\r\n        const url = `/api/runtime/sys/v1.0/functions/funcInvok/${funcId}`;\r\n        return this.http.request('Get', url, FrmUtil.setHeader(null, {}));\r\n    }\r\n\r\n\r\n    private getInvokCache() {\r\n        return this.funcService.getAllCachedFuncInvoks();\r\n    }\r\n\r\n    /**\r\n     * è·åæ¡æ¶eventbus\r\n     */\r\n    private getFeb(): FrmEventBus {\r\n        return EventUtil.getFrmEvent();\r\n    }\r\n\r\n    /**\r\n     * æé åè½åsession\r\n     * (1912 funcSessionç§»é¤åï¼æ¥å£ä¸åæä¾)\r\n     */\r\n    public buildFuncSession(funcId: string, su?: string): Observable<any> {\r\n        const self = this;\r\n        const userSession = this.sessionSvc.getUserSessionId();\r\n        const body = {\r\n            token: userSession,\r\n            funcId,\r\n            action: 'enter'\r\n        };\r\n\r\n        const bizContextUrl = this.FUNCSTATUS_PATH + (!su ? '' : `?su=${su}`);\r\n        return this.http.request('Post', bizContextUrl, FrmUtil.setHeader(userSession, { body })).pipe(\r\n            map((v: any) => {\r\n                const ss: string = v.sessionId;\r\n                if (ss !== undefined && ss !== null && ss.length > 0) {\r\n                    self.sessionSvc.setFuncSessionId(funcId, ss);\r\n                }\r\n                return ss;\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * è¿å¥åè½ï¼è§¦åæå¡ç«¯é»è¾\r\n     * ç§»é¤funcSession\r\n     * è¿åå¬å±åétoken\r\n     */\r\n    private enterFunc(enterParam: FuncStateParam, su: string): Observable<any> {\r\n        const bizContextUrl = this.FUNCSTATUS_PATH + (!su ? '' : `?su=${su}`);\r\n        return this.http.request('Post', bizContextUrl, FrmUtil.setHeader(null, { body: enterParam }))\r\n            .pipe(\r\n                map((v: any) => {\r\n                    return v.token || v.sessionId;\r\n                })\r\n            );\r\n    }\r\n\r\n    /**\r\n     * éåºåè½ï¼å¦æå­å¨bizContextï¼åç§»é¤\r\n     */\r\n    private quitFunc(options: AppOptions, su: string): Observable<any> {\r\n        const body = {\r\n            token: options.token,\r\n            tabId: options.tabId,\r\n            funcId: options.funcId,\r\n            action: 'quit'\r\n        };\r\n        const bizContextUrl = this.FUNCSTATUS_PATH + (!su ? '' : `?su=${su}`);\r\n        return this.http.request('Post', bizContextUrl, FrmUtil.setHeader(null, { body }));\r\n    }\r\n\r\n    /**\r\n     * è·åå½ååºç¨æå±su\r\n     */\r\n    private getSu(url: string): string {\r\n        const uriArr = url.split('/');\r\n        return uriArr.length > 3 ? uriArr[3] : '';\r\n    }\r\n\r\n    /**\r\n     * iframe urlæ¼æ¥ querystring åæ°\r\n     */\r\n    private buildQueryString(routurl: string, funcId: string, params): string {\r\n        if (routurl.indexOf('?') < 0) {\r\n            routurl += `?funcId=${funcId}`;\r\n        } else {\r\n            routurl += `&funcId=${funcId}`;\r\n        }\r\n        if (params) {\r\n            Object.keys(params).forEach((propName: string, index) => {\r\n                routurl += `${index === 0 ? '' : '&'}${propName}=${params[propName]}`;\r\n            });\r\n        }\r\n        return routurl;\r\n    }\r\n\r\n    /**\r\n     * url æ¼æ¥mapæ ¼å¼çåæ°\r\n     */\r\n    private buildQueryStringByMap(routurl: string, funcId: string, tabId: string, token: string, params: Map<string, string>): string {\r\n        if (routurl.indexOf('?') < 0) {\r\n            routurl += `?funcId=${funcId}`;\r\n        } else {\r\n            routurl += `&funcId=${funcId}`;\r\n        }\r\n\r\n        routurl += `&appType=${AppType.Menu}`;\r\n        routurl += `&tabId=${this.getPageId(funcId, tabId)}`;\r\n        routurl += !token ? '' : `&cvft=${token}`;\r\n        if (params) {\r\n            params.forEach((value, key) => {\r\n                routurl += !key ? '' : `&${key}=${value}`;\r\n            });\r\n        }\r\n        return routurl;\r\n    }\r\n\r\n    /**\r\n     * è·åå½åèåé¡µé¢çå¯ä¸æ è¯\r\n     */\r\n    private getPageId(funcId: string, tabId: string): string {\r\n        return tabId || funcId;\r\n    }\r\n\r\n    /**\r\n     * é¡µé¢ç¬¬ä¸æ¬¡è¢«æå¼æ¶ï¼çæå¯ä¸æ è¯\r\n     */\r\n    private newPageId(funcId: string, tabId: string): string {\r\n        return tabId ? `${funcId}_${tabId}` : funcId;\r\n    }\r\n\r\n    public eventFire(token: string, args: any) {\r\n        const feb = EventUtil.getFrmEvent();\r\n        if (!feb || typeof feb.post !== 'function') {\r\n            return;\r\n        }\r\n        feb.post(token, args);\r\n    }\r\n\r\n    public eventListner(token: string, handler: (value: any) => void, options?: AppOptions) {\r\n        const feb = EventUtil.getFrmEvent();\r\n        if (!feb || typeof feb.on !== 'function') {\r\n            return;\r\n        }\r\n        // èåçå¬èå¿é¡»è¦å£°æèªå·±çèº«ä»½ï¼æ¹ä¾¿æ¡æ¶ç®¡ç\r\n        if (options && options.appType) {\r\n            switch (options.appType.toLowerCase()) {\r\n                case AppType.App:\r\n                    const appObkey = EventUtil.appObsToken(options.appId, options.appEntrance, options.tabId);\r\n                    feb.onWithObkey(token, appObkey, handler);\r\n                    return;\r\n                case AppType.Menu:\r\n                    const funcObkey = EventUtil.funcObsToken(options.funcId, options.tabId);\r\n                    feb.onWithObkey(token, funcObkey, handler);\r\n                    return;\r\n                default: break;\r\n            }\r\n        }\r\n        feb.on(token, handler);\r\n    }\r\n\r\n    /** åå»ºçå¬è®¢é, ç»´æ¤ä¸ä¸ªçå¬èåè¡¨ï¼éå¯¹èåè§¦åäºä»¶ */\r\n    public eventListner4Func(token: string, funcId: string, handler: (value: any) => void) {\r\n        const feb = EventUtil.getFrmEvent();\r\n        if (!feb || typeof feb.on !== 'function') {\r\n            return;\r\n        }\r\n        feb.onWithObkey(token, funcId, handler);\r\n    }\r\n\r\n    /** åå»ºçå¬è®¢é, ç»´æ¤ä¸ä¸ªçå¬èåè¡¨ï¼éå¯¹åºç¨è§¦åäºä»¶ */\r\n    public eventListner4App(token: string, appId: string, appEntrance: string, handler: (value: any) => void) {\r\n        const feb = EventUtil.getFrmEvent();\r\n        if (!feb || typeof feb.on !== 'function') {\r\n            return;\r\n        }\r\n        const appObkey = EventUtil.appObsToken(appId, appEntrance);\r\n        feb.onWithObkey(token, appObkey, handler);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EventUtil, AppType, AppOptions } from '../../shared/frm-util';\r\nimport { FrmEventBus } from '../../eventbus/frm-evenbus';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class FrameworkEventService {\r\n\r\n    public FarrisApps = EventUtil.FARRIS_APPS;\r\n    public FarrisAppClick = EventUtil.FARRIS_APP_CLICK;\r\n    public AllGspFuncs = EventUtil.ALL_GSP_FUNCS;\r\n    public BeforeFuncClose = EventUtil.BEFORE_FUNC_CLOSE;\r\n    public FuncClosed = EventUtil.FUNC_CLOSED;\r\n    public FuncSwitch = EventUtil.FUNC_SWITCH;\r\n    public AfterFrameLoad = EventUtil.AFTER_FRAME_LOAD;\r\n\r\n    constructor(private feb: FrmEventBus) {\r\n        const eventBusEntity = EventUtil.getFrmEvent();\r\n        if (!eventBusEntity) {\r\n            EventUtil.setFrmEvent(this.feb || new FrmEventBus());\r\n            this.eventInitial();\r\n        }\r\n    }\r\n\r\n\r\n    public eventFire(token: string, args: any) {\r\n        const feb = EventUtil.getFrmEvent();\r\n        if (!feb || typeof feb.post !== 'function') {\r\n            return;\r\n        }\r\n        feb.post(token, args);\r\n    }\r\n\r\n    public eventListner(token: string, handler: (value: any) => void, options?: AppOptions) {\r\n        const feb = EventUtil.getFrmEvent();\r\n        if (!feb || typeof feb.on !== 'function') {\r\n            return;\r\n        }\r\n        // èåçå¬èå¿é¡»è¦å£°æèªå·±çèº«ä»½ï¼æ¹ä¾¿æ¡æ¶ç®¡ç\r\n        if (options && options.appType) {\r\n            switch (options.appType.toLowerCase()) {\r\n                case AppType.App:\r\n                    const appObkey = EventUtil.appObsToken(options.appId, options.appEntrance, options.tabId);\r\n                    feb.onWithObkey(token, appObkey, handler);\r\n                    return;\r\n                case AppType.Menu:\r\n                    const funcObkey = EventUtil.funcObsToken(options.funcId, options.tabId);\r\n                    feb.onWithObkey(token, funcObkey, handler);\r\n                    return;\r\n                default: break;\r\n            }\r\n        }\r\n        feb.on(token, handler);\r\n    }\r\n\r\n    private eventInitial() {\r\n        const feb = EventUtil.getFrmEvent();\r\n        if (!feb || typeof feb.post !== 'function') {\r\n            return;\r\n        }\r\n        feb.post(this.FarrisApps, null);\r\n        feb.post(this.FarrisAppClick, null);\r\n        feb.post(this.AllGspFuncs, null);\r\n        feb.initialPipe(this.FuncClosed, new Subject<any>());\r\n        feb.initialPipe(this.FuncSwitch, new Subject<any>());\r\n        feb.initialPipe(this.BeforeFuncClose, new Subject<any>());\r\n        feb.initialPipe(this.AfterFrameLoad, new Subject<any>());\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FrameworkVariableService } from '../frmVariableService/framework-variable.service';\r\nimport { EventBusPipe } from '../../eventbus/frm-eventpipe';\r\nimport { Subject } from 'rxjs';\r\nimport { FrmSubjectOptions } from '../../shared/frm-util';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BroadcastingStationService {\r\n\r\n    private subjectMaps: Map<string, EventBusPipe>;\r\n    private frmVariableService: FrameworkVariableService;\r\n    private frmSubject = 'frmBroadcast-subjects';\r\n\r\n    constructor() {\r\n        this.frmVariableService = new FrameworkVariableService();\r\n        this.subjectMaps = this.frmVariableService.getFrmVariableByKey(this.frmSubject) || new Map<string, EventBusPipe>();\r\n    }\r\n\r\n    /**\r\n     * æ³¨åä¸»é¢ï¼å¹¶è·åå½åä¸»é¢å¯ä¸æ è¯token\r\n     * @param subjectCode ä¸»é¢ç¼ç ï¼å»ºè®®ææç¡®å«ä¹ï¼æ¹ä¾¿ç¡®è®¤å½åä¸»é¢çèè´£\r\n     * codeä¸æ¯å¯ä¸æ è¯ï¼å³ä½¿ç¸åcodeæ¯æ¬¡æ³¨åé½ä¼çæä¸ä¸ªæ°çä¸»é¢ï¼è¿åå¼tokenæ¯å¯ä¸æ è¯\r\n     * @param options ä¸»é¢æ³¨åæä½ï¼å¯ä»¥ç´æ¥å¯¹äºèå æ åºç¨æ³¨åä¸»é¢\r\n     * @param customSub èªå®ä¹ä¸»é¢ï¼å¦æä¸ºnullæèä¸ä¼ ï¼é»è®¤ä¸ºSubject\r\n     */\r\n    public subjectRegister(subjectCode: string, options: FrmSubjectOptions, customSub?: Subject<any>): string {\r\n        if (!customSub) {\r\n            customSub = new Subject<any>();\r\n        }\r\n        let token: string;\r\n        if (options && options.funcId) {\r\n            token = options.funcId;\r\n        } else if (options && options.appId && options.appEntrance) {\r\n            token = `${options.appId}-${options.appEntrance}`;\r\n        } else {\r\n            token = this.createToken();\r\n        }\r\n        const pipe = new EventBusPipe(token, null, customSub);\r\n        pipe.pipeCode = subjectCode;\r\n        this.subjectMaps.set(token, pipe);\r\n        this.frmVariableService.frameworkVariableReg(this.frmSubject, this.subjectMaps);\r\n        return token;\r\n    }\r\n\r\n    /**\r\n     * æ³¨åä¸»é¢ï¼å¯ç´æ¥è·åä¸»é¢å®ä½ï¼\r\n     * æ¡æ¶ä¸æç®¡ç»´æ¤ï¼å¸¸ç¨äºééå±ä¸äºä»¶æ©å±æºå¶\r\n     * @param options æ³¨ååæ°\r\n     * @param customSub æ¯å¦èªå®ä¹ä¸»é¢\r\n     */\r\n    public customSubjectRegister(options: FrmSubjectOptions, customSub?: Subject<any>): Map<string, EventBusPipe> {\r\n        const subMap = new Map<string, EventBusPipe>();\r\n        if (!customSub) {\r\n            customSub = new Subject<any>();\r\n        }\r\n        let token: string;\r\n        if (options && options.customToken) {\r\n            token = options.customToken;\r\n        } else if (options && options.funcId) {\r\n            token = options.funcId;\r\n        } else if (options && options.appId && options.appEntrance) {\r\n            token = `${options.appId}-${options.appEntrance}`;\r\n        } else {\r\n            token = this.createToken();\r\n        }\r\n        const pipe = new EventBusPipe(token, null, customSub);\r\n        subMap.set(token, pipe);\r\n        return subMap;\r\n    }\r\n\r\n    /**\r\n     * å é¤ä¸»é¢\r\n     * @param subjectToken ä¸»é¢å¯ä¸æ è¯\r\n     */\r\n    public subjectRemove(subjectToken: string) {\r\n        this.subjectMaps.delete(subjectToken);\r\n        this.frmVariableService.frameworkVariableReg(this.frmSubject, this.subjectMaps);\r\n    }\r\n\r\n    /**\r\n     * éè¿æä¸ªä¸»é¢åéæ¶æ¯\r\n     * @param subjectToken ä¸»é¢å¯ä¸çtokenæ è¯\r\n     * @param info è¦åéçæ¶æ¯\r\n     */\r\n    public notify(subjectToken: string, info: any) {\r\n        const sub = this.getSubject(subjectToken);\r\n        if (!sub) {\r\n            return;\r\n        }\r\n        sub.post(info);\r\n    }\r\n\r\n    /**\r\n     * ä¸ºä¸»é¢æ·»å è§å¯èï¼å¹¶çå¬ä¸»é¢æ¶æ¯\r\n     * @param subjectToken ä¸»é¢token\r\n     * @param observerToken å½åçå¬ä¸»é¢çè§å¯èå¯ä¸æ è¯token\r\n     * @param handler è§å¯èçå¬å°ä¸»é¢æ¶æ¯æ¶è¦æ§è¡çå¨ä½\r\n     */\r\n    public response(subjectToken: string, observerToken: string, handler: (value: any) => void) {\r\n        const sub = this.getSubject(subjectToken);\r\n        if (!sub) {\r\n            return;\r\n        }\r\n        sub.subscribeWithObkey(observerToken, handler);\r\n    }\r\n\r\n    /**\r\n     * è§å¯èåæ¶å¯¹ä¸»é¢çè®¢é\r\n     * @param subjectToken ä¸»é¢å¯ä¸æ è¯\r\n     * @param observerToken è§å¯èå¯ä¸æ è¯\r\n     */\r\n    public responseUnSubscribe(subjectToken: string, observerToken: string) {\r\n        const sub = this.getSubject(subjectToken);\r\n        if (!sub) {\r\n            return;\r\n        }\r\n        sub.unSubscribeWithObkey(observerToken);\r\n    }\r\n\r\n    private getSubject(subjectToken: string): EventBusPipe {\r\n        return this.subjectMaps.get(subjectToken);\r\n    }\r\n\r\n    /**\r\n     * åå»ºå¯ä¸token\r\n     */\r\n    private createToken() {\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        const S4 = function () {\r\n            // tslint:disable-next-line:no-bitwise\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        };\r\n        return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, Resolve, RouterStateSnapshot,\r\n         ActivatedRouteSnapshot , ParamMap} from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { FrmEventBus } from '../eventbus/frm-evenbus';\r\n\r\n\r\n@Injectable()\r\nexport class FunctionResolver implements Resolve<any> {\r\n\r\n  constructor( private router: Router, private feb: FrmEventBus) {}\r\n\r\n  editvalue: any;\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n    const id = route.paramMap.get('funcid');\r\n    this.editvalue = null;\r\n    this.feb.on('frmopenfunc', (value: any) => {\r\n          this.editvalue = value;\r\n    });\r\n    return of(this.editvalue);\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoadingComponent } from './loading.component';\r\nimport { LoadingService } from './loading.service';\r\nimport { LoadingConfig, LOADING_DEFAULT_CONFIG, loaddingDefaultConfig } from './loading.config';\r\n\r\n// export function loadingFactory(app: ApplicationRef, cfr: ComponentFactoryResolver, injector: Injector) {\r\n//     return new LoadingService(app, cfr, injector);\r\n// }\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        LoadingComponent\r\n    ],\r\n    entryComponents: [\r\n        LoadingComponent\r\n    ]\r\n})\r\nexport class LoadingModule {\r\n    static forRoot(config?: LoadingConfig): ModuleWithProviders {\r\n        // const _config = config ? Object.assign({}, loaddingDefaultConfig, config) : loaddingDefaultConfig;\r\n\r\n        return {\r\n            ngModule: LoadingModule,\r\n            providers: [\r\n                { provide: LOADING_DEFAULT_CONFIG, useValue: config || loaddingDefaultConfig},\r\n                LoadingService\r\n                // { provide: LoadingService, useFactory: loadingFactory, deps: [ApplicationRef, ComponentFactoryResolver, Injector] }\r\n            ]\r\n        };\r\n    }\r\n}\r\n"],"names":["CommonSharedModule","NgModule","args","imports","CommonModule","RouterModule","declarations","exports","providers","entryComponents","FrameworkVariableService","prototype","getFrameworkVariable","this","windowService","getTopWindow","frameworkVariable","frameworkVariableReg","key","value","frmVariable","name","frmVariableName","nameSpace","frmVariableInitial","getFrmVariableByKey","topWin","Injectable","WindowVariableService","FuncsService","cacheAllFuncs","funcs","frmVariableService","allgspfuncs","getAllCachedFuncs","getCachedFunc","funcId","allfuncs","find","f","id","cacheAllFuncInvoks","invoks","allfuncinvoks","getAllCachedFuncInvoks","decorators","type","Optional","__values","o","s","Symbol","iterator","m","i","call","length","next","done","TypeError","EventBusPipe","post","bizPara","eventSubject","subscribe","eventHandler","subscription","subscribeWithObkey","observerKey","observer","observers","get","unsubscribe","sub","set","subscribeOnce","self","scription","parentEventPipeList","Array","unSubscribe","unSubscribeForOnce","onceSubscription","unSubscribeWithObkey","matchEmitterToken","tokenValue","examByTargetToken","dispose","subscriber","Subject","BehaviorSubject","Subscription","Map","push","FrmEventBus","eventArgs","eventPipeList","eventMap","eventPipe","item","eventPipeList_1","tslib_1.__values","eventPipeList_1_1","eventPipeDetail","initialPipe","token","pipes","on","handler","pipe","getEventPipe","onWithObkey","once","res","delete","LoadingComponent","Object","defineProperty","_isActive","val","animate","el","nativeElement","remove","ngOnInit","ngOnDestroy","ngAfterViewInit","setPosition","close","isActive","containerWidth","loadingContainerEl","clientWidth","containerHeight","clientHeight","render","setStyle","animateCls","setAttribute","addAnimationEndEvent","events","_i","arguments","_this","forEach","e","addEventListener","removeAttribute","removeEventListener","closed","emit","Component","selector","template","Renderer2","ElementRef","ViewChild","Output","message","EventEmitter","loaddingDefaultConfig","container","posion","LOADING_DEFAULT_CONFIG","InjectionToken","LoadingService","show","config","removeDomCheck","injecotr","assign","loadingFactory","cfr","resolveComponentFactory","loadingCmpRef","create","localStorage","getItem","document","querySelector","appendChild","location","instance","state","clearDom","changeDetectorRef","markForCheck","detectChanges","cmpRef","loadingEl","parentNode","removeChild","destroy","setTimeout","console","log","getElementsByTagName","ex","ApplicationRef","ComponentFactoryResolver","Injector","appRef","IframeLink","code","sessionid","src","active","FrmUtil","setHeader","bizContextId","options","headers","Content-Type","getTabArray","iframeTabArr","frmWin","window","parent","curWin","origin","removeTab","index","splice","EventUtil","getFrmEvent","eventBusKey","setFrmEvent","feb","appObsToken","appId","appEntrance","tabId","funcObsToken","getObserver","eventToken","eventMap_1","eventMap_1_1","clearObserver","obKey","switchObsMap","FUNC_SWITCH","switchObs","closeObsMap","FUNC_CLOSED","closeObs","beforeCloseMap","BEFORE_FUNC_CLOSE","beforeClose","clearEventPipe","pipeToken","eventPipes","FARRIS_APPS","FARRIS_APP_CLICK","ALL_GSP_FUNCS","AFTER_FRAME_LOAD","AppType","App","Menu","Other","FrmI18nSettingService","getSetting","temp","variableKey","deepClone","getSetting$","of","loadSetting$","rtfService","gspframeworkService","rtf","entity","language","currentLanCode","lanService","getLanguageCode","http","map","languages","switchMap","i18nSetting","catchError","err","allLanguages","target","result","isArray","constructor","RegExp","LanguageService","HttpService","AppService","openApp","params","reload","appOpts","appType","entityParams","queryStringParams","isReload","openAppByOptions","checkingRepeatOpen","getInvokeAndEnterApp$","link","getFeb","openAppByOptions$","getAppInvok","getInvokCache","funcInvok","getInvokConfig","v","refreshInvokCache","beforeCloseAppByOptions","appObkey","getPageId","closeAppByOptions","beforeCloseApp","closeApp","pageToken","objIndex","findIndex","obj","formToken","quitApp","su","pageId","newPageId","invokEntry","appInvoks","invok","entityParam","JSON","parse","getSu","url","enterApp","menuName","tabName","action","routurl","linkobj","buildQueryString","FuncName","mode","formLink","alert","request","enterParam","bizContextUrl","FUNCSTATUS_PATH","body","sessionId","invokObs","funcState$","zip","res1","res2","uriArr","split","APPINVOKE_CAHCE_KEY","indexOf","mergeAppId","SessionService","sessionSvc","variables","FrameworkService","openFunc","funcid","routepath","parentsessionid","newsession","simpleparam","appOps","internalOpen","openMenu","toLowerCase","appService","openMenu$","onlyGetIframeLink","internalOpenByIframeLink$","internalOpen$","openConnectedFunc","EntityParam","openFuncWithParam","checkingBeforeOpen$","func","getInvokeAndEnterFunc$","lobj","info","isErr","errInfo","getFuncEntity","getFuncInvok","invokingConfig","paramInfo","staticParams","entityParamInfo","staticParam","enterFunc","buildQueryStringByMap","isNewTab","isjquery","beforeCloseMenu","beforeCloseFuncByOptions","funcService","funcObkey","Name","beforeCloseHandle","closeFuncByOptions","beforeCloseFunc","closeFunc","closeMenu","quitFunc","allFuncs","getPresetParams","mergeParams","getStaticParam","getEntityParam","isSubonce","entityParamUnsub","getEntityParamStructure","paraMap","buildFuncSession","userSession","getUserSessionId","ss","undefined","setFuncSessionId","keys","propName","eventFire","eventListner","eventListner4Func","eventListner4App","Router","CacheService","router","cache","loadService","BeforeFuncClose","FuncClosed","FuncSwitch","FrameworkEventService","eventInitial","FarrisApps","FarrisAppClick","AllGspFuncs","AfterFrameLoad","BroadcastingStationService","subjectRegister","subjectCode","customSub","createToken","pipeCode","subjectMaps","frmSubject","customSubjectRegister","subMap","customToken","subjectRemove","subjectToken","notify","getSubject","response","observerToken","responseUnSubscribe","S4","Math","random","toString","substring","providedIn","FunctionResolver","resolve","route","paramMap","editvalue","LoadingModule","forRoot","ngModule","provide","useValue"],"mappings":"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"}