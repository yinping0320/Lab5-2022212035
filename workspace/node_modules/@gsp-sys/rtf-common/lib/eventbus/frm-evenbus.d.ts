import { IDisposable, IEmitable } from './types';
import { EventBusPipe } from './frm-eventpipe';
import { Subject } from 'rxjs';
export declare class FrmEventBus implements IEmitable {
    eventMap: Map<string, Array<EventBusPipe>>;
    constructor();
    post(tokenValue: string, eventArgs: any): void;
    initialPipe(token: string, sub: Subject<any>): void;
    on(tokenValue: string, handler: (value: any) => void): IDisposable;
    /** 订阅事件，并记录订阅者唯一标识 */
    onWithObkey(tokenValue: string, observerKey: string, handler: (value: any) => void): IDisposable;
    once(tokenValue: string, handler: (value: any) => void): IDisposable;
    unSubscribe(tokenValue: string): void;
    private getEventPipe;
}
