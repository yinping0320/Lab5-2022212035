/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { FrameworkVariableService } from '../services/frmVariableService/framework-variable.service';
var FrmUtil = /** @class */ (function () {
    function FrmUtil() {
    }
    /**
     * @param {?} bizContextId
     * @param {?} options
     * @return {?}
     */
    FrmUtil.setHeader = /**
     * @param {?} bizContextId
     * @param {?} options
     * @return {?}
     */
    function (bizContextId, options) {
        options.headers = {
            'Content-Type': 'application/json',
        };
        if (bizContextId) {
            /** @type {?} */
            var contextKey = 'X-CAF-Runtime-Context';
            options.headers[contextKey] = bizContextId;
        }
        return options;
    };
    /**
     * @return {?}
     */
    FrmUtil.getTabArray = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var iframeTabArr = 'iframeTabarray';
        /** @type {?} */
        var topWin = this.getTopWindow();
        /** @type {?} */
        var frmWin = window;
        while ((!frmWin[iframeTabArr] || frmWin[iframeTabArr].length === 0) && frmWin !== topWin) {
            frmWin = frmWin.parent;
        }
        return (/** @type {?} */ (frmWin[iframeTabArr])) || [];
    };
    /**
     * @return {?}
     */
    FrmUtil.getTopWindow = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var curWin = window.self;
        try {
            while (curWin.location.origin === curWin.parent.location.origin) {
                if (curWin !== curWin.parent) {
                    curWin = curWin.parent;
                }
                else {
                    break;
                }
            }
        }
        catch (e) { }
        return curWin;
    };
    /**
     * @param {?} index
     * @return {?}
     */
    FrmUtil.removeTab = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        /** @type {?} */
        var iframeArr = this.getTabArray();
        iframeArr.splice(index, 1);
    };
    return FrmUtil;
}());
export { FrmUtil };
var EventUtil = /** @class */ (function () {
    function EventUtil() {
    }
    /** 获取框架event */
    /**
     * 获取框架event
     * @return {?}
     */
    EventUtil.getFrmEvent = /**
     * 获取框架event
     * @return {?}
     */
    function () {
        /** @type {?} */
        var eventBus = this.frmVariable.getFrmVariableByKey(this.eventBusKey);
        return (/** @type {?} */ (eventBus));
    };
    /**
     * @param {?} feb
     * @return {?}
     */
    EventUtil.setFrmEvent = /**
     * @param {?} feb
     * @return {?}
     */
    function (feb) {
        this.frmVariable.frameworkVariableReg(this.eventBusKey, feb);
    };
    /**
     * 获取app唯一的观察者标识
     */
    /**
     * 获取app唯一的观察者标识
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?=} tabId
     * @return {?}
     */
    EventUtil.appObsToken = /**
     * 获取app唯一的观察者标识
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?=} tabId
     * @return {?}
     */
    function (appId, appEntrance, tabId) {
        return tabId || appId + "#" + appEntrance;
    };
    /**
     * 获取func唯一的观察者标识
     */
    /**
     * 获取func唯一的观察者标识
     * @param {?} funcId
     * @param {?=} tabId
     * @return {?}
     */
    EventUtil.funcObsToken = /**
     * 获取func唯一的观察者标识
     * @param {?} funcId
     * @param {?=} tabId
     * @return {?}
     */
    function (funcId, tabId) {
        return tabId || funcId;
    };
    /**
     * 获取某事件的监听者
     */
    /**
     * 获取某事件的监听者
     * @param {?} eventToken
     * @return {?}
     */
    EventUtil.getObserver = /**
     * 获取某事件的监听者
     * @param {?} eventToken
     * @return {?}
     */
    function (eventToken) {
        var e_1, _a;
        /** @type {?} */
        var feb = this.getFrmEvent();
        /** @type {?} */
        var eventMap = feb.eventMap.get(eventToken);
        if (!eventMap) {
            return null;
        }
        /** @type {?} */
        var eventPipe;
        try {
            for (var eventMap_1 = tslib_1.__values(eventMap), eventMap_1_1 = eventMap_1.next(); !eventMap_1_1.done; eventMap_1_1 = eventMap_1.next()) {
                var eventPipeDetail = eventMap_1_1.value;
                if (eventPipeDetail.matchEmitterToken(eventToken)) {
                    eventPipe = eventPipeDetail;
                    break;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (eventMap_1_1 && !eventMap_1_1.done && (_a = eventMap_1.return)) _a.call(eventMap_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (!eventPipe) {
            return null;
        }
        /** @type {?} */
        var obs = eventPipe.observers;
        return obs;
    };
    /**
     * 清空监听者
     */
    /**
     * 清空监听者
     * @param {?} obKey
     * @return {?}
     */
    EventUtil.clearObserver = /**
     * 清空监听者
     * @param {?} obKey
     * @return {?}
     */
    function (obKey) {
        /** @type {?} */
        var switchObsMap = this.getObserver(this.FUNC_SWITCH);
        /** @type {?} */
        var switchObs = switchObsMap.get(obKey);
        if (switchObs) {
            switchObs.unsubscribe();
            switchObsMap.delete(obKey);
        }
        /** @type {?} */
        var closeObsMap = this.getObserver(this.FUNC_CLOSED);
        /** @type {?} */
        var closeObs = closeObsMap.get(obKey);
        if (closeObs) {
            closeObs.unsubscribe();
            closeObsMap.delete(obKey);
        }
        /** @type {?} */
        var beforeCloseMap = this.getObserver(this.BEFORE_FUNC_CLOSE);
        /** @type {?} */
        var beforeClose = beforeCloseMap.get(obKey);
        if (beforeClose) {
            beforeClose.unsubscribe();
            beforeCloseMap.delete(obKey);
        }
    };
    /**
     * 清空某个管道
     */
    /**
     * 清空某个管道
     * @param {?} pipeToken
     * @return {?}
     */
    EventUtil.clearEventPipe = /**
     * 清空某个管道
     * @param {?} pipeToken
     * @return {?}
     */
    function (pipeToken) {
        /** @type {?} */
        var feb = this.getFrmEvent();
        /** @type {?} */
        var eventPipes = feb.eventMap.get(pipeToken);
        if (!eventPipes) {
            return;
        }
        /** @type {?} */
        var eventPipe = eventPipes.find((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item.examByTargetToken(pipeToken); }));
        if (eventPipe) {
            eventPipe.unSubscribe();
            feb.eventMap.delete(pipeToken);
        }
    };
    /**
     * eventToken str
     */
    EventUtil.FARRIS_APPS = 'all-gsp-farrisapps';
    EventUtil.FARRIS_APP_CLICK = 'farrisapp-click';
    EventUtil.ALL_GSP_FUNCS = 'all-gsp-functions';
    EventUtil.BEFORE_FUNC_CLOSE = 'beforeFuncCloseEvent';
    EventUtil.FUNC_CLOSED = 'FuncClosed';
    EventUtil.FUNC_SWITCH = 'funcSwitchEvent';
    EventUtil.AFTER_FRAME_LOAD = "after-iframe-load-event";
    EventUtil.eventBusKey = 'frmEventBus';
    EventUtil.frmVariable = new FrameworkVariableService();
    return EventUtil;
}());
export { EventUtil };
if (false) {
    /**
     * eventToken str
     * @type {?}
     */
    EventUtil.FARRIS_APPS;
    /** @type {?} */
    EventUtil.FARRIS_APP_CLICK;
    /** @type {?} */
    EventUtil.ALL_GSP_FUNCS;
    /** @type {?} */
    EventUtil.BEFORE_FUNC_CLOSE;
    /** @type {?} */
    EventUtil.FUNC_CLOSED;
    /** @type {?} */
    EventUtil.FUNC_SWITCH;
    /** @type {?} */
    EventUtil.AFTER_FRAME_LOAD;
    /**
     * @type {?}
     * @private
     */
    EventUtil.eventBusKey;
    /**
     * @type {?}
     * @private
     */
    EventUtil.frmVariable;
}
/** @type {?} */
export var AppType = {
    App: 'app',
    Menu: 'menu',
    Other: 'other'
};
/**
 * @record
 */
export function FuncEventArgs() { }
if (false) {
    /**
     * 当前tab页的唯一标识
     * @type {?}
     */
    FuncEventArgs.prototype.tabId;
    /**
     * 当前tab打开的功能类型 app or menu
     * @type {?}
     */
    FuncEventArgs.prototype.appType;
    /** @type {?|undefined} */
    FuncEventArgs.prototype.funcId;
    /** @type {?|undefined} */
    FuncEventArgs.prototype.appId;
    /** @type {?|undefined} */
    FuncEventArgs.prototype.appEntrance;
    /** @type {?|undefined} */
    FuncEventArgs.prototype.tabName;
    /** @type {?|undefined} */
    FuncEventArgs.prototype.beforeCloseHandle;
}
/**
 * @record
 */
export function FuncStateParam() { }
if (false) {
    /**
     * formToken (简称 cvft)
     * @type {?|undefined}
     */
    FuncStateParam.prototype.token;
    /**
     * 当前tab页的唯一标识
     * @type {?}
     */
    FuncStateParam.prototype.tabId;
    /** @type {?|undefined} */
    FuncStateParam.prototype.funcId;
    /** @type {?|undefined} */
    FuncStateParam.prototype.appId;
    /** @type {?|undefined} */
    FuncStateParam.prototype.appEntrance;
    /**
     * 当页面name自定义时为自定义
     * 否则：func为funcName，app为entryName
     * @type {?}
     */
    FuncStateParam.prototype.menuName;
    /**
     * 动作
     * @type {?}
     */
    FuncStateParam.prototype.action;
}
/**
 * @record
 */
export function AppOptions() { }
if (false) {
    /**
     * 指定当前打开的是菜单（menu）还是应用（app）
     * @type {?}
     */
    AppOptions.prototype.appType;
    /**
     * 如果打开菜单，funcId需要指定，appId、appEntrance可以为空
     * @type {?}
     */
    AppOptions.prototype.funcId;
    /**
     * 如果打开应用，appId及appEntrance需要指定，funcId可以为空
     * @type {?}
     */
    AppOptions.prototype.appId;
    /** @type {?} */
    AppOptions.prototype.appEntrance;
    /**
     * 如果需要重复打开功能，则自行指定唯一tabId
     * @type {?|undefined}
     */
    AppOptions.prototype.tabId;
    /** @type {?|undefined} */
    AppOptions.prototype.tabName;
    /**
     * 表单公共变量token/formToken
     * @type {?|undefined}
     */
    AppOptions.prototype.token;
    /**
     * 表单所属SU
     * @type {?|undefined}
     */
    AppOptions.prototype.su;
    /** @type {?|undefined} */
    AppOptions.prototype.routeUrl;
    /** @type {?|undefined} */
    AppOptions.prototype.entityParams;
    /** @type {?|undefined} */
    AppOptions.prototype.queryStringParams;
    /** @type {?|undefined} */
    AppOptions.prototype.isReload;
    /** @type {?|undefined} */
    AppOptions.prototype.isJquery;
    /**
     * spa模式下重复打开功能
     * true：构造新的页面实例
     * false || null || undefined：复用已打开的页面实例
     * 目前新的tabId就是新的页面实例
     * @type {?|undefined}
     */
    AppOptions.prototype.isNewTab;
    /**
     * 只获取被打开表单的link实体，
     * 不触发框架加载表单实践
     * @type {?|undefined}
     */
    AppOptions.prototype.onlyGetIframeLink;
    /**
     * 关闭前回调处理
     * @type {?|undefined}
     */
    AppOptions.prototype.beforeCloseHandle;
}
/**
 * @record
 */
export function FrmSubjectOptions() { }
if (false) {
    /** @type {?|undefined} */
    FrmSubjectOptions.prototype.customToken;
    /** @type {?|undefined} */
    FrmSubjectOptions.prototype.funcId;
    /** @type {?|undefined} */
    FrmSubjectOptions.prototype.appId;
    /** @type {?|undefined} */
    FrmSubjectOptions.prototype.appEntrance;
}
//# sourceMappingURL=data:application/json;base64,