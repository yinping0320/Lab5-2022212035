/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { WindowVariableService } from '@ecp-caf/caf-common';
var FrameworkVariableService = /** @class */ (function () {
    function FrameworkVariableService() {
        this.frameworkVariable = 'frameworkVariable';
        this.nameSpace = 'variables';
        this.frmVariableName = 'rtfFrmVariable';
        this.windowService = new WindowVariableService();
        this.frmVariableInitial();
    }
    /**
     * @return {?}
     */
    FrameworkVariableService.prototype.getFrameworkVariable = /**
     * @return {?}
     */
    function () {
        return this.windowService.getTopWindow()[this.frameworkVariable];
    };
    /**
     * 在框架顶级window注册变量
     */
    /**
     * 在框架顶级window注册变量
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    FrameworkVariableService.prototype.frameworkVariableReg = /**
     * 在框架顶级window注册变量
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    function (key, value) {
        /** @type {?} */
        var frmVariable = this.getFrameworkVariable();
        if (frmVariable && frmVariable.name && frmVariable.name === this.frmVariableName) {
            frmVariable[this.nameSpace] = frmVariable[this.nameSpace] || {};
            frmVariable[this.nameSpace][key] = value;
            return;
        }
        this.frmVariableInitial();
        this.getFrameworkVariable()[this.nameSpace][key] = value;
    };
    /**
     * @param {?} key
     * @return {?}
     */
    FrameworkVariableService.prototype.getFrmVariableByKey = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        /** @type {?} */
        var frmVariable = this.getFrameworkVariable();
        if (frmVariable && frmVariable[this.nameSpace] && frmVariable[this.nameSpace][key]) {
            return frmVariable[this.nameSpace][key];
        }
        return null;
    };
    /**
     * 在框架的顶级window上
     * 定义一个公共变量。
     * 用于存放菜单、应用缓存数据，eventbus都公共对象
     * 对适配层提供服务
     */
    /**
     * 在框架的顶级window上
     * 定义一个公共变量。
     * 用于存放菜单、应用缓存数据，eventbus都公共对象
     * 对适配层提供服务
     * @private
     * @return {?}
     */
    FrameworkVariableService.prototype.frmVariableInitial = /**
     * 在框架的顶级window上
     * 定义一个公共变量。
     * 用于存放菜单、应用缓存数据，eventbus都公共对象
     * 对适配层提供服务
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var topWin = this.windowService.getTopWindow();
        /** @type {?} */
        var name = 'name';
        topWin[this.frameworkVariable] = topWin[this.frameworkVariable] || {};
        topWin[this.frameworkVariable][name] = this.frmVariableName;
        topWin[this.frameworkVariable][this.nameSpace] = topWin[this.frameworkVariable][this.nameSpace] || {};
    };
    FrameworkVariableService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    FrameworkVariableService.ctorParameters = function () { return []; };
    return FrameworkVariableService;
}());
export { FrameworkVariableService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FrameworkVariableService.prototype.frameworkVariable;
    /**
     * @type {?}
     * @private
     */
    FrameworkVariableService.prototype.nameSpace;
    /**
     * @type {?}
     * @private
     */
    FrameworkVariableService.prototype.frmVariableName;
    /**
     * @type {?}
     * @private
     */
    FrameworkVariableService.prototype.windowService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJhbWV3b3JrLXZhcmlhYmxlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXN5cy9ydGYtY29tbW9uLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL2ZybVZhcmlhYmxlU2VydmljZS9mcmFtZXdvcmstdmFyaWFibGUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUU1RDtJQVFJO1FBTFEsc0JBQWlCLEdBQUcsbUJBQW1CLENBQUM7UUFDeEMsY0FBUyxHQUFHLFdBQVcsQ0FBQztRQUN4QixvQkFBZSxHQUFHLGdCQUFnQixDQUFDO1FBSXZDLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxxQkFBcUIsRUFBRSxDQUFDO1FBQ2pELElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO0lBQzlCLENBQUM7Ozs7SUFFTSx1REFBb0I7OztJQUEzQjtRQUNJLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztJQUNyRSxDQUFDO0lBRUQ7O09BRUc7Ozs7Ozs7SUFDSSx1REFBb0I7Ozs7OztJQUEzQixVQUE0QixHQUFXLEVBQUUsS0FBVTs7WUFDekMsV0FBVyxHQUFHLElBQUksQ0FBQyxvQkFBb0IsRUFBRTtRQUMvQyxJQUFJLFdBQVcsSUFBSSxXQUFXLENBQUMsSUFBSSxJQUFJLFdBQVcsQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDLGVBQWUsRUFBRTtZQUM5RSxXQUFXLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ2hFLFdBQVcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDO1lBQ3pDLE9BQU87U0FDVjtRQUNELElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO1FBQzFCLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDN0QsQ0FBQzs7Ozs7SUFFTSxzREFBbUI7Ozs7SUFBMUIsVUFBMkIsR0FBVzs7WUFDNUIsV0FBVyxHQUFHLElBQUksQ0FBQyxvQkFBb0IsRUFBRTtRQUMvQyxJQUFJLFdBQVcsSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDaEYsT0FBTyxXQUFXLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQzNDO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVEOzs7OztPQUtHOzs7Ozs7Ozs7SUFDSyxxREFBa0I7Ozs7Ozs7O0lBQTFCOztZQUNVLE1BQU0sR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLFlBQVksRUFBRTs7WUFDMUMsSUFBSSxHQUFHLE1BQU07UUFDbkIsTUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDdEUsTUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUM7UUFDNUQsTUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUMxRyxDQUFDOztnQkFuREosVUFBVTs7OztJQW9EWCwrQkFBQztDQUFBLEFBcERELElBb0RDO1NBbkRZLHdCQUF3Qjs7Ozs7O0lBRWpDLHFEQUFnRDs7Ozs7SUFDaEQsNkNBQWdDOzs7OztJQUNoQyxtREFBMkM7Ozs7O0lBQzNDLGlEQUE2QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgV2luZG93VmFyaWFibGVTZXJ2aWNlIH0gZnJvbSAnQGVjcC1jYWYvY2FmLWNvbW1vbic7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBGcmFtZXdvcmtWYXJpYWJsZVNlcnZpY2Uge1xyXG5cclxuICAgIHByaXZhdGUgZnJhbWV3b3JrVmFyaWFibGUgPSAnZnJhbWV3b3JrVmFyaWFibGUnO1xyXG4gICAgcHJpdmF0ZSBuYW1lU3BhY2UgPSAndmFyaWFibGVzJztcclxuICAgIHByaXZhdGUgZnJtVmFyaWFibGVOYW1lID0gJ3J0ZkZybVZhcmlhYmxlJztcclxuICAgIHByaXZhdGUgd2luZG93U2VydmljZTogV2luZG93VmFyaWFibGVTZXJ2aWNlO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMud2luZG93U2VydmljZSA9IG5ldyBXaW5kb3dWYXJpYWJsZVNlcnZpY2UoKTtcclxuICAgICAgICB0aGlzLmZybVZhcmlhYmxlSW5pdGlhbCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRGcmFtZXdvcmtWYXJpYWJsZSgpOiBhbnkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLndpbmRvd1NlcnZpY2UuZ2V0VG9wV2luZG93KClbdGhpcy5mcmFtZXdvcmtWYXJpYWJsZV07XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlnKjmoYbmnrbpobbnuqd3aW5kb3fms6jlhozlj5jph49cclxuICAgICAqL1xyXG4gICAgcHVibGljIGZyYW1ld29ya1ZhcmlhYmxlUmVnKGtleTogc3RyaW5nLCB2YWx1ZTogYW55KSB7XHJcbiAgICAgICAgY29uc3QgZnJtVmFyaWFibGUgPSB0aGlzLmdldEZyYW1ld29ya1ZhcmlhYmxlKCk7XHJcbiAgICAgICAgaWYgKGZybVZhcmlhYmxlICYmIGZybVZhcmlhYmxlLm5hbWUgJiYgZnJtVmFyaWFibGUubmFtZSA9PT0gdGhpcy5mcm1WYXJpYWJsZU5hbWUpIHtcclxuICAgICAgICAgICAgZnJtVmFyaWFibGVbdGhpcy5uYW1lU3BhY2VdID0gZnJtVmFyaWFibGVbdGhpcy5uYW1lU3BhY2VdIHx8IHt9O1xyXG4gICAgICAgICAgICBmcm1WYXJpYWJsZVt0aGlzLm5hbWVTcGFjZV1ba2V5XSA9IHZhbHVlO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuZnJtVmFyaWFibGVJbml0aWFsKCk7XHJcbiAgICAgICAgdGhpcy5nZXRGcmFtZXdvcmtWYXJpYWJsZSgpW3RoaXMubmFtZVNwYWNlXVtrZXldID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldEZybVZhcmlhYmxlQnlLZXkoa2V5OiBzdHJpbmcpOiBhbnkge1xyXG4gICAgICAgIGNvbnN0IGZybVZhcmlhYmxlID0gdGhpcy5nZXRGcmFtZXdvcmtWYXJpYWJsZSgpO1xyXG4gICAgICAgIGlmIChmcm1WYXJpYWJsZSAmJiBmcm1WYXJpYWJsZVt0aGlzLm5hbWVTcGFjZV0gJiYgZnJtVmFyaWFibGVbdGhpcy5uYW1lU3BhY2VdW2tleV0pIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZybVZhcmlhYmxlW3RoaXMubmFtZVNwYWNlXVtrZXldO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWcqOahhuaetueahOmhtue6p3dpbmRvd+S4ilxyXG4gICAgICog5a6a5LmJ5LiA5Liq5YWs5YWx5Y+Y6YeP44CCXHJcbiAgICAgKiDnlKjkuo7lrZjmlL7oj5zljZXjgIHlupTnlKjnvJPlrZjmlbDmja7vvIxldmVudGJ1c+mDveWFrOWFseWvueixoVxyXG4gICAgICog5a+56YCC6YWN5bGC5o+Q5L6b5pyN5YqhXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZnJtVmFyaWFibGVJbml0aWFsKCkge1xyXG4gICAgICAgIGNvbnN0IHRvcFdpbiA9IHRoaXMud2luZG93U2VydmljZS5nZXRUb3BXaW5kb3coKTtcclxuICAgICAgICBjb25zdCBuYW1lID0gJ25hbWUnO1xyXG4gICAgICAgIHRvcFdpblt0aGlzLmZyYW1ld29ya1ZhcmlhYmxlXSA9IHRvcFdpblt0aGlzLmZyYW1ld29ya1ZhcmlhYmxlXSB8fCB7fTtcclxuICAgICAgICB0b3BXaW5bdGhpcy5mcmFtZXdvcmtWYXJpYWJsZV1bbmFtZV0gPSB0aGlzLmZybVZhcmlhYmxlTmFtZTtcclxuICAgICAgICB0b3BXaW5bdGhpcy5mcmFtZXdvcmtWYXJpYWJsZV1bdGhpcy5uYW1lU3BhY2VdID0gdG9wV2luW3RoaXMuZnJhbWV3b3JrVmFyaWFibGVdW3RoaXMubmFtZVNwYWNlXSB8fCB7fTtcclxuICAgIH1cclxufVxyXG4iXX0=