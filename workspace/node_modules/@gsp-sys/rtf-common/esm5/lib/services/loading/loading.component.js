/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, ViewChild, Renderer2, Output, EventEmitter } from '@angular/core';
// tslint:disable
var LoadingComponent = /** @class */ (function () {
    function LoadingComponent(render, el) {
        this.render = render;
        this.el = el;
        this._isActive = false;
        this.message = '正在加载，请稍候...';
        this.closed = new EventEmitter();
    }
    Object.defineProperty(LoadingComponent.prototype, "isActive", {
        get: /**
         * @return {?}
         */
        function () {
            return this._isActive;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._isActive = val;
            if (val) {
                this.animate('fadeIn');
            }
            else {
                this.el.nativeElement && this.el.nativeElement.remove();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    LoadingComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    LoadingComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    LoadingComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        // setTimeout(() => this.setPosition(), 0 );
        this.setPosition();
    };
    /**
     * @return {?}
     */
    LoadingComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.isActive = false;
    };
    /**
     * @private
     * @return {?}
     */
    LoadingComponent.prototype.setPosition = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var containerWidth = this.loadingContainerEl.nativeElement.clientWidth;
        /** @type {?} */
        var containerHeight = this.loadingContainerEl.nativeElement.clientHeight;
        this.render.setStyle(this.loadingContainerEl.nativeElement, 'marginTop', -containerHeight / 2 + 'px');
        this.render.setStyle(this.loadingContainerEl.nativeElement, 'marginLeft', -containerWidth / 2 + 'px');
    };
    /**
     * @private
     * @param {?} animateCls
     * @return {?}
     */
    LoadingComponent.prototype.animate = /**
     * @private
     * @param {?} animateCls
     * @return {?}
     */
    function (animateCls) {
        this.render.setAttribute(this.el.nativeElement, 'class', animateCls);
        this.addAnimationEndEvent('webkitAnimationEnd', 'mozAnimationEnd', 'MSAnimationEnd', 'oanimationend', 'animationend');
    };
    /**
     * @private
     * @param {...?} events
     * @return {?}
     */
    LoadingComponent.prototype.addAnimationEndEvent = /**
     * @private
     * @param {...?} events
     * @return {?}
     */
    function () {
        var events = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            events[_i] = arguments[_i];
        }
        /** @type {?} */
        var _this = this;
        events.forEach((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            _this.el.nativeElement.addEventListener(e, (/**
             * @return {?}
             */
            function handler() {
                _this.render.removeAttribute(_this.el.nativeElement, 'class');
                _this.el.nativeElement.removeEventListener(e, handler);
                _this.closed.emit(_this.isActive);
            }));
        }));
    };
    LoadingComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-loading',
                    template: "\n        <div #loadingBackdrop class=\"farris-loading-backdrop\" *ngIf=\"isActive\"></div>\n        <div #loadingContainerEl class=\"farris-loading\" *ngIf=\"isActive\">\n            <div class=\"ng-busy-default-wrapper\">\n                <div class=\"ng-busy-default-sign\">\n                    <div class=\"ng-busy-default-spinner\">\n                        <svg class=\"circular\" viewBox=\"25 25 50 50\">\n                            <circle class=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"></circle>\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    ",
                    styles: ["\n        .circular {\n            -webkit-animation: rotate 2s linear infinite;\n            animation: rotate 2s linear infinite;\n            height: 100%;\n            -webkit-transform-origin: center center;\n            transform-origin: center center;\n            width: 100%;\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n            margin: auto;\n        }\n        .circular .path {\n            stroke-dasharray: 1, 200;\n            stroke-dashoffset: 0;\n            -webkit-animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;\n            animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;\n            stroke-linecap: round;\n        }\n\n        @-webkit-keyframes rotate {\n            100% {\n            -webkit-transform: rotate(360deg);\n                    transform: rotate(360deg);\n            }\n        }\n        @keyframes rotate {\n            100% {\n            -webkit-transform: rotate(360deg);\n                    transform: rotate(360deg);\n            }\n        }\n        @-webkit-keyframes dash {\n            0% {\n            stroke-dasharray: 1, 200;\n            stroke-dashoffset: 0;\n            }\n            50% {\n            stroke-dasharray: 89, 200;\n            stroke-dashoffset: -35px;\n            }\n            100% {\n            stroke-dasharray: 89, 200;\n            stroke-dashoffset: -124px;\n            }\n        }\n        @keyframes dash {\n            0% {\n            stroke-dasharray: 1, 200;\n            stroke-dashoffset: 0;\n            }\n            50% {\n            stroke-dasharray: 89, 200;\n            stroke-dashoffset: -35px;\n            }\n            100% {\n            stroke-dasharray: 89, 200;\n            stroke-dashoffset: -124px;\n            }\n        }\n        @-webkit-keyframes color {\n            100%,\n            0% {\n            stroke: #48a7ff;\n            }\n            40% {\n            stroke: #48a7ff;\n            }\n            66% {\n            stroke: #48a7ff;\n            }\n            80%,\n            90% {\n            stroke: #48a7ff;\n            }\n        }\n        @keyframes color {\n            100%,\n            0% {\n            stroke: #48a7ff;\n            }\n            40% {\n            stroke: #48a7ff;\n            }\n            66% {\n            stroke: #48a7ff;\n            }\n            80%,\n            90% {\n            stroke: #48a7ff;\n            }\n        }\n        .ng-busy-default-spinner {\n            width: 126px;height: 126px;\n        }\n        .ng-busy-default-sign{\n            background: transparent;\n            box-shadow: none;\n        }\n        .farris-loading-backdrop {\n            background-color: #ffffff;\n            opacity: .0;\n        }\n        "]
                }] }
    ];
    /** @nocollapse */
    LoadingComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: ElementRef }
    ]; };
    LoadingComponent.propDecorators = {
        loadingContainerEl: [{ type: ViewChild, args: ['loadingContainerEl',] }],
        loadingBackdrop: [{ type: ViewChild, args: ['loadingBackdrop',] }],
        closed: [{ type: Output }]
    };
    return LoadingComponent;
}());
export { LoadingComponent };
if (false) {
    /** @type {?} */
    LoadingComponent.prototype.id;
    /**
     * @type {?}
     * @private
     */
    LoadingComponent.prototype._isActive;
    /** @type {?} */
    LoadingComponent.prototype.message;
    /** @type {?} */
    LoadingComponent.prototype.loadingContainerEl;
    /** @type {?} */
    LoadingComponent.prototype.loadingBackdrop;
    /** @type {?} */
    LoadingComponent.prototype.closed;
    /**
     * @type {?}
     * @private
     */
    LoadingComponent.prototype.render;
    /**
     * @type {?}
     * @private
     */
    LoadingComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,