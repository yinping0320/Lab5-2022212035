/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Optional } from '@angular/core';
import { FrameworkVariableService } from '../frmVariableService/framework-variable.service';
var FuncsService = /** @class */ (function () {
    function FuncsService(frmVariableService) {
        this.frmVariableService = frmVariableService;
        this.allgspfuncs = 'allgspfuncs';
        this.allfuncinvoks = 'allfuncinvoks';
        if (!this.frmVariableService) {
            this.frmVariableService = new FrameworkVariableService();
        }
    }
    /**
     * 缓存所有功能
     */
    /**
     * 缓存所有功能
     * @param {?} funcs
     * @return {?}
     */
    FuncsService.prototype.cacheAllFuncs = /**
     * 缓存所有功能
     * @param {?} funcs
     * @return {?}
     */
    function (funcs) {
        this.frmVariableService.frameworkVariableReg(this.allgspfuncs, funcs);
    };
    /**
     * 获取所有缓存的功能
     */
    /**
     * 获取所有缓存的功能
     * @return {?}
     */
    FuncsService.prototype.getAllCachedFuncs = /**
     * 获取所有缓存的功能
     * @return {?}
     */
    function () {
        /** @type {?} */
        var funcsCache = this.frmVariableService.getFrmVariableByKey(this.allgspfuncs);
        return (/** @type {?} */ (funcsCache)) || [];
    };
    /**
     * 获取某功能
     */
    /**
     * 获取某功能
     * @param {?} funcId
     * @return {?}
     */
    FuncsService.prototype.getCachedFunc = /**
     * 获取某功能
     * @param {?} funcId
     * @return {?}
     */
    function (funcId) {
        /** @type {?} */
        var allfuncs = this.getAllCachedFuncs();
        if (allfuncs) {
            return allfuncs.find((/**
             * @param {?} f
             * @return {?}
             */
            function (f) { return f.id === funcId; }));
        }
    };
    /**
     * @param {?} invoks
     * @return {?}
     */
    FuncsService.prototype.cacheAllFuncInvoks = /**
     * @param {?} invoks
     * @return {?}
     */
    function (invoks) {
        this.frmVariableService.frameworkVariableReg(this.allfuncinvoks, invoks);
    };
    /**
     * @return {?}
     */
    FuncsService.prototype.getAllCachedFuncInvoks = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var invokCache = this.frmVariableService.getFrmVariableByKey(this.allfuncinvoks);
        return (/** @type {?} */ (invokCache)) || [];
    };
    FuncsService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    FuncsService.ctorParameters = function () { return [
        { type: FrameworkVariableService, decorators: [{ type: Optional }] }
    ]; };
    return FuncsService;
}());
export { FuncsService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FuncsService.prototype.allgspfuncs;
    /**
     * @type {?}
     * @private
     */
    FuncsService.prototype.allfuncinvoks;
    /**
     * @type {?}
     * @private
     */
    FuncsService.prototype.frmVariableService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVuY3Muc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atc3lzL3J0Zi1jb21tb24vIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvZnVuY3NzZXJ2aWNlL2Z1bmNzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBRTVGO0lBTUksc0JBQWdDLGtCQUE0QztRQUE1Qyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQTBCO1FBSHBFLGdCQUFXLEdBQUcsYUFBYSxDQUFDO1FBQzVCLGtCQUFhLEdBQUcsZUFBZSxDQUFDO1FBR3BDLElBQUksQ0FBQyxJQUFJLENBQUMsa0JBQWtCLEVBQUU7WUFDMUIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksd0JBQXdCLEVBQUUsQ0FBQztTQUM1RDtJQUNMLENBQUM7SUFFRDs7T0FFRzs7Ozs7O0lBQ0ksb0NBQWE7Ozs7O0lBQXBCLFVBQXFCLEtBQVk7UUFDN0IsSUFBSSxDQUFDLGtCQUFrQixDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDMUUsQ0FBQztJQUVEOztPQUVHOzs7OztJQUNJLHdDQUFpQjs7OztJQUF4Qjs7WUFDVSxVQUFVLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDaEYsT0FBTyxtQkFBQSxVQUFVLEVBQVMsSUFBSSxFQUFFLENBQUM7SUFDckMsQ0FBQztJQUVEOztPQUVHOzs7Ozs7SUFDSSxvQ0FBYTs7Ozs7SUFBcEIsVUFBcUIsTUFBYzs7WUFDekIsUUFBUSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtRQUN6QyxJQUFJLFFBQVEsRUFBRTtZQUNWLE9BQU8sUUFBUSxDQUFDLElBQUk7Ozs7WUFBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxFQUFFLEtBQUssTUFBTSxFQUFmLENBQWUsRUFBQyxDQUFDO1NBQzlDO0lBQ0wsQ0FBQzs7Ozs7SUFFTSx5Q0FBa0I7Ozs7SUFBekIsVUFBMEIsTUFBYTtRQUNuQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUM3RSxDQUFDOzs7O0lBRU0sNkNBQXNCOzs7SUFBN0I7O1lBQ1UsVUFBVSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBQ2xGLE9BQU8sbUJBQUEsVUFBVSxFQUFTLElBQUksRUFBRSxDQUFDO0lBQ3JDLENBQUM7O2dCQTVDSixVQUFVOzs7O2dCQUZGLHdCQUF3Qix1QkFRaEIsUUFBUTs7SUF3Q3pCLG1CQUFDO0NBQUEsQUE5Q0QsSUE4Q0M7U0E3Q1ksWUFBWTs7Ozs7O0lBRXJCLG1DQUFvQzs7Ozs7SUFDcEMscUNBQXdDOzs7OztJQUU1QiwwQ0FBZ0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBGcmFtZXdvcmtWYXJpYWJsZVNlcnZpY2UgfSBmcm9tICcuLi9mcm1WYXJpYWJsZVNlcnZpY2UvZnJhbWV3b3JrLXZhcmlhYmxlLnNlcnZpY2UnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgRnVuY3NTZXJ2aWNlIHtcclxuXHJcbiAgICBwcml2YXRlIGFsbGdzcGZ1bmNzID0gJ2FsbGdzcGZ1bmNzJztcclxuICAgIHByaXZhdGUgYWxsZnVuY2ludm9rcyA9ICdhbGxmdW5jaW52b2tzJztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBwcml2YXRlIGZybVZhcmlhYmxlU2VydmljZTogRnJhbWV3b3JrVmFyaWFibGVTZXJ2aWNlKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmZybVZhcmlhYmxlU2VydmljZSkge1xyXG4gICAgICAgICAgICB0aGlzLmZybVZhcmlhYmxlU2VydmljZSA9IG5ldyBGcmFtZXdvcmtWYXJpYWJsZVNlcnZpY2UoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnvJPlrZjmiYDmnInlip/og71cclxuICAgICAqL1xyXG4gICAgcHVibGljIGNhY2hlQWxsRnVuY3MoZnVuY3M6IGFueVtdKSB7XHJcbiAgICAgICAgdGhpcy5mcm1WYXJpYWJsZVNlcnZpY2UuZnJhbWV3b3JrVmFyaWFibGVSZWcodGhpcy5hbGxnc3BmdW5jcywgZnVuY3MpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6I635Y+W5omA5pyJ57yT5a2Y55qE5Yqf6IO9XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBnZXRBbGxDYWNoZWRGdW5jcygpOiBhbnkge1xyXG4gICAgICAgIGNvbnN0IGZ1bmNzQ2FjaGUgPSB0aGlzLmZybVZhcmlhYmxlU2VydmljZS5nZXRGcm1WYXJpYWJsZUJ5S2V5KHRoaXMuYWxsZ3NwZnVuY3MpO1xyXG4gICAgICAgIHJldHVybiBmdW5jc0NhY2hlIGFzIGFueVtdIHx8IFtdO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6I635Y+W5p+Q5Yqf6IO9XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBnZXRDYWNoZWRGdW5jKGZ1bmNJZDogc3RyaW5nKTogYW55IHtcclxuICAgICAgICBjb25zdCBhbGxmdW5jcyA9IHRoaXMuZ2V0QWxsQ2FjaGVkRnVuY3MoKTtcclxuICAgICAgICBpZiAoYWxsZnVuY3MpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGFsbGZ1bmNzLmZpbmQoZiA9PiBmLmlkID09PSBmdW5jSWQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgY2FjaGVBbGxGdW5jSW52b2tzKGludm9rczogYW55W10pIHtcclxuICAgICAgICB0aGlzLmZybVZhcmlhYmxlU2VydmljZS5mcmFtZXdvcmtWYXJpYWJsZVJlZyh0aGlzLmFsbGZ1bmNpbnZva3MsIGludm9rcyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldEFsbENhY2hlZEZ1bmNJbnZva3MoKTogYW55IHtcclxuICAgICAgICBjb25zdCBpbnZva0NhY2hlID0gdGhpcy5mcm1WYXJpYWJsZVNlcnZpY2UuZ2V0RnJtVmFyaWFibGVCeUtleSh0aGlzLmFsbGZ1bmNpbnZva3MpO1xyXG4gICAgICAgIHJldHVybiBpbnZva0NhY2hlIGFzIGFueVtdIHx8IFtdO1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=