/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Optional } from '@angular/core';
import { of, zip } from 'rxjs';
import { HttpService, LanguageService, SessionService } from '@ecp-caf/caf-common';
import { IframeLink } from '../../models/iframe.model';
import { map, switchMap } from 'rxjs/operators';
import { EventUtil, FrmUtil, AppType } from '../../shared/frm-util';
import { FrameworkVariableService } from '../frmVariableService/framework-variable.service';
import { FrmI18nSettingService } from '../i18nService/i18n-setting.service';
var AppService = /** @class */ (function () {
    function AppService(http, sessionSvc, i18nSetting) {
        this.http = http;
        this.sessionSvc = sessionSvc;
        this.i18nSetting = i18nSetting;
        this.FUNCSTATUS_PATH = '/api/runtime/sys/v1.0/function-states';
        this.APPINVOKE_CAHCE_KEY = 'allappinvoks';
        this.frmVariableService = new FrameworkVariableService();
        if (!this.i18nSetting) {
            /** @type {?} */
            var variables = new FrameworkVariableService();
            /** @type {?} */
            var language = new LanguageService(null);
            this.i18nSetting = new FrmI18nSettingService(variables, language, http);
        }
    }
    /**
     * App跳转打开
     */
    /**
     * App跳转打开
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?} params
     * @param {?=} reload
     * @return {?}
     */
    AppService.prototype.openApp = /**
     * App跳转打开
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?} params
     * @param {?=} reload
     * @return {?}
     */
    function (appId, appEntrance, params, reload) {
        /** @type {?} */
        var appOpts = {
            funcId: '',
            appId: appId,
            appEntrance: appEntrance,
            appType: AppType.App,
            entityParams: params,
            queryStringParams: params,
            isReload: reload
        };
        this.openAppByOptions(appOpts);
    };
    /**
     * App跳转打开服务
     */
    /**
     * App跳转打开服务
     * @param {?} options
     * @return {?}
     */
    AppService.prototype.openAppByOptions = /**
     * App跳转打开服务
     * @param {?} options
     * @return {?}
     */
    function (options) {
        var _this = this;
        /** @type {?} */
        var linkobj = this.checkingRepeatOpen(options);
        if (linkobj) {
            return;
        }
        this.getInvokeAndEnterApp$(options).subscribe((/**
         * @param {?} link
         * @return {?}
         */
        function (link) {
            _this.getFeb().post(EventUtil.FARRIS_APP_CLICK, link);
        }));
    };
    /**
     * 流方式，App跳转打开服务
     */
    /**
     * 流方式，App跳转打开服务
     * @param {?} options
     * @return {?}
     */
    AppService.prototype.openAppByOptions$ = /**
     * 流方式，App跳转打开服务
     * @param {?} options
     * @return {?}
     */
    function (options) {
        var _this = this;
        /** @type {?} */
        var linkobj = this.checkingRepeatOpen(options);
        if (linkobj) {
            return of(true);
        }
        return this.getInvokeAndEnterApp$(options).pipe(map((/**
         * @param {?} link
         * @return {?}
         */
        function (link) {
            _this.getFeb().post(EventUtil.FARRIS_APP_CLICK, link);
            return true;
        })));
    };
    /**
     * 获取app调用信息
     */
    /**
     * 获取app调用信息
     * @param {?} appId
     * @return {?}
     */
    AppService.prototype.getAppInvok = /**
     * 获取app调用信息
     * @param {?} appId
     * @return {?}
     */
    function (appId) {
        var _this = this;
        /** @type {?} */
        var invoks = this.getInvokCache();
        /** @type {?} */
        var funcInvok = invoks.find((/**
         * @param {?} f
         * @return {?}
         */
        function (f) { return f.id === appId; }));
        if (!funcInvok) {
            return this.getInvokConfig(appId).pipe(map((/**
             * @param {?} v
             * @return {?}
             */
            function (v) {
                if (!v) {
                    return null;
                }
                _this.refreshInvokCache(invoks, v);
                return v;
            })));
        }
        return of(funcInvok);
    };
    /**
     * @param {?} options
     * @return {?}
     */
    AppService.prototype.beforeCloseAppByOptions = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        /** @type {?} */
        var appObkey = EventUtil.appObsToken(options.appId, options.appEntrance, options.tabId);
        /** @type {?} */
        var obs = EventUtil.getObserver(EventUtil.BEFORE_FUNC_CLOSE).get(appObkey);
        if (!obs) {
            this.closeAppByOptions(options).subscribe();
            return;
        }
        /** @type {?} */
        var eventArgs = {
            tabId: this.getPageId(options.appId, options.appEntrance, options.tabId),
            appType: AppType.App,
            appId: options.appId,
            appEntrance: options.appEntrance
        };
        this.getFeb().post(EventUtil.BEFORE_FUNC_CLOSE, eventArgs);
    };
    /**
     * App关闭前接口
     */
    /**
     * App关闭前接口
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?=} tabId
     * @return {?}
     */
    AppService.prototype.beforeCloseApp = /**
     * App关闭前接口
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?=} tabId
     * @return {?}
     */
    function (appId, appEntrance, tabId) {
        /** @type {?} */
        var self = this;
        /** @type {?} */
        var appObkey = EventUtil.appObsToken(appId, appEntrance, tabId);
        /** @type {?} */
        var obs = EventUtil.getObserver(EventUtil.BEFORE_FUNC_CLOSE).get(appObkey);
        if (!obs) {
            this.closeApp(appId, appEntrance, tabId).subscribe();
            return;
        }
        /** @type {?} */
        var eventArgs = {
            tabId: self.getPageId(appId, appEntrance, tabId),
            appType: AppType.App,
            appId: appId,
            appEntrance: appEntrance
        };
        this.getFeb().post(EventUtil.BEFORE_FUNC_CLOSE, eventArgs);
    };
    /**
     * @param {?} options
     * @return {?}
     */
    AppService.prototype.closeAppByOptions = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        /** @type {?} */
        var appObkey = EventUtil.appObsToken(options.appId, options.appEntrance, options.tabId);
        /** @type {?} */
        var pageToken = this.getPageId(options.appId, options.appEntrance, options.tabId);
        EventUtil.clearObserver(appObkey);
        EventUtil.clearEventPipe(pageToken);
        /** @type {?} */
        var objIndex = FrmUtil.getTabArray().findIndex((/**
         * @param {?} i
         * @return {?}
         */
        function (i) { return i.id === pageToken && i.appType === AppType.App; }));
        /** @type {?} */
        var obj = FrmUtil.getTabArray()[objIndex];
        options.token = options.token || obj.formToken;
        FrmUtil.removeTab(objIndex);
        /** @type {?} */
        var eventArgs = {
            tabId: pageToken,
            appType: AppType.App,
            appId: options.tabId,
            appEntrance: options.appEntrance
        };
        this.getFeb().post(EventUtil.FUNC_CLOSED, eventArgs);
        return this.quitApp(options, obj.su);
    };
    /**
     * 关闭app
     */
    /**
     * 关闭app
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?=} tabId
     * @return {?}
     */
    AppService.prototype.closeApp = /**
     * 关闭app
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?=} tabId
     * @return {?}
     */
    function (appId, appEntrance, tabId) {
        /** @type {?} */
        var self = this;
        /** @type {?} */
        var appObkey = EventUtil.appObsToken(appId, appEntrance, tabId);
        /** @type {?} */
        var pageId = this.getPageId(appId, appEntrance, tabId);
        EventUtil.clearObserver(appObkey);
        EventUtil.clearEventPipe(pageId);
        /** @type {?} */
        var objIndex = FrmUtil.getTabArray().findIndex((/**
         * @param {?} i
         * @return {?}
         */
        function (i) { return i.id === pageId && i.appType === AppType.App; }));
        /** @type {?} */
        var obj = FrmUtil.getTabArray()[objIndex];
        /** @type {?} */
        var formToken = obj.formToken;
        FrmUtil.removeTab(objIndex);
        /** @type {?} */
        var eventArgs = {
            tabId: pageId,
            appType: AppType.App,
            appId: appId,
            appEntrance: appEntrance,
        };
        self.getFeb().post(EventUtil.FUNC_CLOSED, eventArgs);
        /** @type {?} */
        var options = {
            tabId: tabId,
            funcId: '',
            appId: appId,
            appEntrance: appEntrance,
            appType: AppType.App,
            token: formToken
        };
        return this.quitApp(options, obj.su).pipe(map((/**
         * @param {?} v
         * @return {?}
         */
        function (v) { })));
    };
    /**
     * @private
     * @param {?} options
     * @return {?}
     */
    AppService.prototype.getInvokeAndEnterApp$ = /**
     * @private
     * @param {?} options
     * @return {?}
     */
    function (options) {
        var _this = this;
        /** @type {?} */
        var newPageId = this.newPageId(options.appId, options.appEntrance, options.tabId);
        options.tabId = newPageId;
        return this.getAppInvok(options.appId).pipe(switchMap((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            /** @type {?} */
            var invokEntry = value.appInvoks.find((/**
             * @param {?} invok
             * @return {?}
             */
            function (invok) { return invok.appEntrance === options.appEntrance; }));
            if (!options.appEntrance && !invokEntry) {
                invokEntry = value.appInvoks.find((/**
                 * @param {?} invok
                 * @return {?}
                 */
                function (invok) { return !invok.appEntrance; }));
            }
            if (!invokEntry) {
                window.alert("\u8BF7\u68C0\u67E5\u5F53\u524D\u5E94\u7528(ID:" + options.appId + ")\u914D\u7F6E\u7684\u5E94\u7528\u5165\u53E3(appEntrance:" + options.appEntrance + ")\u662F\u5426\u5B58\u5728");
                return;
            }
            /** @type {?} */
            var entityParam;
            try {
                entityParam = invokEntry.entityParams ? JSON.parse(invokEntry.entityParams) : null;
            }
            catch (e) {
                entityParam = null;
                console.log(e);
            }
            /** @type {?} */
            var su = _this.getSu(value.url);
            return _this.enterApp({
                tabId: newPageId,
                appId: options.appId,
                appEntrance: options.appEntrance,
                menuName: options.tabName || invokEntry.name,
                action: 'enterapp'
            }, su).pipe(map((/**
             * @param {?} token
             * @return {?}
             */
            function (token) {
                /** @type {?} */
                var routurl = value.url + (options.appEntrance ? "#/" + options.appEntrance : '');
                /** @type {?} */
                var linkobj = new IframeLink(value.code, null, _this.buildQueryString(routurl, options.appId, options.appEntrance, options.tabId, token, options.queryStringParams));
                // id加入口区分,tabId页签唯一标识
                linkobj.id = newPageId;
                linkobj.appType = AppType.App;
                linkobj.appId = options.appId;
                linkobj.appEntrance = options.appEntrance;
                // 显示app名字及入口名字
                linkobj.FuncName = options.tabName || invokEntry.name;
                linkobj.url = value.url;
                linkobj.reload = options.isReload;
                linkobj.su = su;
                linkobj.formToken = token;
                if (entityParam) {
                    entityParam.forEach((/**
                     * @param {?} item
                     * @return {?}
                     */
                    function (item) {
                        if (item.name === 'mode') {
                            linkobj.mode = item.value;
                            linkobj.src += (item.value ? "&appMode=" + item.value + "&" : '');
                        }
                    }));
                }
                _this.getFeb().post(newPageId, options.entityParams);
                return linkobj;
            })), switchMap((/**
             * @param {?} formLink
             * @return {?}
             */
            function (formLink) {
                return _this.i18nSetting.getSetting$().pipe(map((/**
                 * @return {?}
                 */
                function () { return formLink; })));
            })));
        })));
    };
    /**
     * @private
     * @param {?} appId
     * @return {?}
     */
    AppService.prototype.getInvokConfig = /**
     * @private
     * @param {?} appId
     * @return {?}
     */
    function (appId) {
        /** @type {?} */
        var url = "/api/runtime/sys/v1.0/gspapp/" + appId;
        return this.http.request('Get', url, FrmUtil.setHeader(null, {}));
    };
    /**
     * 进入应用，触发相关服务
     */
    /**
     * 进入应用，触发相关服务
     * @private
     * @param {?} enterParam
     * @param {?} su
     * @return {?}
     */
    AppService.prototype.enterApp = /**
     * 进入应用，触发相关服务
     * @private
     * @param {?} enterParam
     * @param {?} su
     * @return {?}
     */
    function (enterParam, su) {
        /** @type {?} */
        var bizContextUrl = this.FUNCSTATUS_PATH + (!su ? '' : "?su=" + su);
        return this.http.request('Post', bizContextUrl, FrmUtil.setHeader(null, { body: enterParam })).pipe(map((/**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            return v.token || v.sessionId;
        })));
    };
    /**
     * 退出应用，触发相关服务
     */
    /**
     * 退出应用，触发相关服务
     * @private
     * @param {?} options
     * @param {?=} su
     * @return {?}
     */
    AppService.prototype.quitApp = /**
     * 退出应用，触发相关服务
     * @private
     * @param {?} options
     * @param {?=} su
     * @return {?}
     */
    function (options, su) {
        /** @type {?} */
        var body = {
            tabId: options.tabId,
            token: options.token,
            appId: options.appId,
            appEntrance: options.appEntrance,
            action: 'quitapp'
        };
        /** @type {?} */
        var invokObs = this.getAppInvok(options.appId);
        /** @type {?} */
        var bizContextUrl = this.FUNCSTATUS_PATH + (!su ? '' : "?su=" + su);
        /** @type {?} */
        var funcState$ = this.http.request('Post', bizContextUrl, FrmUtil.setHeader(null, { body: body }));
        // tslint:disable-next-line: deprecation
        /** @type {?} */
        var $r = zip(invokObs, funcState$, (/**
         * @param {?} res1
         * @param {?} res2
         * @return {?}
         */
        function (res1, res2) { return ({ res1: res1, res2: res2 }); }));
        return $r;
    };
    /**
     * @private
     * @param {?} url
     * @return {?}
     */
    AppService.prototype.getSu = /**
     * @private
     * @param {?} url
     * @return {?}
     */
    function (url) {
        /** @type {?} */
        var uriArr = url.split('/');
        return uriArr.length > 3 ? uriArr[3] : '';
    };
    /**
     * @private
     * @return {?}
     */
    AppService.prototype.getInvokCache = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var appInvokesCache = this.frmVariableService.getFrmVariableByKey(this.APPINVOKE_CAHCE_KEY);
        return (/** @type {?} */ (appInvokesCache)) || [];
    };
    /**
     * @private
     * @param {?} invoks
     * @param {?} funcInvok
     * @return {?}
     */
    AppService.prototype.refreshInvokCache = /**
     * @private
     * @param {?} invoks
     * @param {?} funcInvok
     * @return {?}
     */
    function (invoks, funcInvok) {
        if (!funcInvok) {
            return;
        }
        invoks.push(funcInvok);
        this.frmVariableService.frameworkVariableReg(this.APPINVOKE_CAHCE_KEY, invoks);
    };
    // tslint:disable-next-line: max-line-length
    // tslint:disable-next-line: max-line-length
    /**
     * @private
     * @param {?} routurl
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?} tabId
     * @param {?} token
     * @param {?} params
     * @return {?}
     */
    AppService.prototype.buildQueryString = 
    // tslint:disable-next-line: max-line-length
    /**
     * @private
     * @param {?} routurl
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?} tabId
     * @param {?} token
     * @param {?} params
     * @return {?}
     */
    function (routurl, appId, appEntrance, tabId, token, params) {
        if (routurl.indexOf('?') < 0) {
            routurl += "?appId=" + appId + "&appEntrance=" + appEntrance;
        }
        else {
            routurl += "&appId=" + appId + "&appEntrance=" + appEntrance;
        }
        routurl += "&appType=" + AppType.App;
        routurl += "&tabId=" + this.getPageId(appId, appEntrance, tabId);
        routurl += !token ? '' : "&cvft=" + token;
        if (params) {
            params.forEach((/**
             * @param {?} value
             * @param {?} key
             * @return {?}
             */
            function (value, key) {
                routurl += !key ? '' : "&" + key + "=" + value;
            }));
        }
        return routurl;
    };
    /**
     * @private
     * @return {?}
     */
    AppService.prototype.getFeb = /**
     * @private
     * @return {?}
     */
    function () {
        return EventUtil.getFrmEvent();
    };
    /**
     * @private
     * @param {?} appId
     * @param {?} appEntrance
     * @return {?}
     */
    AppService.prototype.mergeAppId = /**
     * @private
     * @param {?} appId
     * @param {?} appEntrance
     * @return {?}
     */
    function (appId, appEntrance) {
        return appId + "_" + appEntrance;
    };
    /**
     * 获取当前菜单页面的唯一标识
     */
    /**
     * 获取当前菜单页面的唯一标识
     * @private
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?} tabId
     * @return {?}
     */
    AppService.prototype.getPageId = /**
     * 获取当前菜单页面的唯一标识
     * @private
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?} tabId
     * @return {?}
     */
    function (appId, appEntrance, tabId) {
        return tabId || this.mergeAppId(appId, appEntrance);
    };
    /**
     * 生成页面唯一标识
     */
    /**
     * 生成页面唯一标识
     * @private
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?} tabId
     * @return {?}
     */
    AppService.prototype.newPageId = /**
     * 生成页面唯一标识
     * @private
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?} tabId
     * @return {?}
     */
    function (appId, appEntrance, tabId) {
        return tabId ? this.mergeAppId(appId, appEntrance) + "_" + tabId : this.mergeAppId(appId, appEntrance);
    };
    /**
     * @private
     * @param {?} options
     * @return {?}
     */
    AppService.prototype.checkingRepeatOpen = /**
     * @private
     * @param {?} options
     * @return {?}
     */
    function (options) {
        /** @type {?} */
        var appId = options.appId;
        /** @type {?} */
        var appEntrance = options.appEntrance;
        /** @type {?} */
        var tabId = options.tabId;
        /** @type {?} */
        var entityParams = options.entityParams;
        /** @type {?} */
        var linkobj;
        /** @type {?} */
        var pageId = this.getPageId(appId, appEntrance, tabId);
        linkobj = FrmUtil.getTabArray().find((/**
         * @param {?} i
         * @return {?}
         */
        function (i) { return i.id === pageId && i.appType === AppType.App; }));
        if (linkobj) {
            linkobj.FuncName = options.tabName || linkobj.FuncName;
            linkobj.src = this.buildQueryString(linkobj.url, appId, appEntrance, options.tabId, linkobj.sessionid, options.queryStringParams);
            linkobj.reload = options.isReload;
            this.getFeb().post(pageId, entityParams);
            this.getFeb().post(EventUtil.FARRIS_APP_CLICK, linkobj);
        }
        return linkobj;
    };
    AppService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    AppService.ctorParameters = function () { return [
        { type: HttpService },
        { type: SessionService },
        { type: FrmI18nSettingService, decorators: [{ type: Optional }] }
    ]; };
    return AppService;
}());
export { AppService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    AppService.prototype.FUNCSTATUS_PATH;
    /**
     * @type {?}
     * @private
     */
    AppService.prototype.APPINVOKE_CAHCE_KEY;
    /**
     * @type {?}
     * @private
     */
    AppService.prototype.frmVariableService;
    /**
     * @type {?}
     * @private
     */
    AppService.prototype.http;
    /**
     * @type {?}
     * @private
     */
    AppService.prototype.sessionSvc;
    /**
     * @type {?}
     * @private
     */
    AppService.prototype.i18nSetting;
}
//# sourceMappingURL=data:application/json;base64,