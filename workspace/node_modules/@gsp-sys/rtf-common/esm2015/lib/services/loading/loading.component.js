/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, ViewChild, Renderer2, Output, EventEmitter } from '@angular/core';
// tslint:disable
export class LoadingComponent {
    /**
     * @param {?} render
     * @param {?} el
     */
    constructor(render, el) {
        this.render = render;
        this.el = el;
        this._isActive = false;
        this.message = '正在加载，请稍候...';
        this.closed = new EventEmitter();
    }
    /**
     * @return {?}
     */
    get isActive() {
        return this._isActive;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set isActive(val) {
        this._isActive = val;
        if (val) {
            this.animate('fadeIn');
        }
        else {
            this.el.nativeElement && this.el.nativeElement.remove();
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        // setTimeout(() => this.setPosition(), 0 );
        this.setPosition();
    }
    /**
     * @return {?}
     */
    close() {
        this.isActive = false;
    }
    /**
     * @private
     * @return {?}
     */
    setPosition() {
        /** @type {?} */
        const containerWidth = this.loadingContainerEl.nativeElement.clientWidth;
        /** @type {?} */
        const containerHeight = this.loadingContainerEl.nativeElement.clientHeight;
        this.render.setStyle(this.loadingContainerEl.nativeElement, 'marginTop', -containerHeight / 2 + 'px');
        this.render.setStyle(this.loadingContainerEl.nativeElement, 'marginLeft', -containerWidth / 2 + 'px');
    }
    /**
     * @private
     * @param {?} animateCls
     * @return {?}
     */
    animate(animateCls) {
        this.render.setAttribute(this.el.nativeElement, 'class', animateCls);
        this.addAnimationEndEvent('webkitAnimationEnd', 'mozAnimationEnd', 'MSAnimationEnd', 'oanimationend', 'animationend');
    }
    /**
     * @private
     * @param {...?} events
     * @return {?}
     */
    addAnimationEndEvent(...events) {
        /** @type {?} */
        const _this = this;
        events.forEach((/**
         * @param {?} e
         * @return {?}
         */
        e => {
            _this.el.nativeElement.addEventListener(e, (/**
             * @return {?}
             */
            function handler() {
                _this.render.removeAttribute(_this.el.nativeElement, 'class');
                _this.el.nativeElement.removeEventListener(e, handler);
                _this.closed.emit(_this.isActive);
            }));
        }));
    }
}
LoadingComponent.decorators = [
    { type: Component, args: [{
                selector: 'farris-loading',
                template: `
        <div #loadingBackdrop class="farris-loading-backdrop" *ngIf="isActive"></div>
        <div #loadingContainerEl class="farris-loading" *ngIf="isActive">
            <div class="ng-busy-default-wrapper">
                <div class="ng-busy-default-sign">
                    <div class="ng-busy-default-spinner">
                        <svg class="circular" viewBox="25 25 50 50">
                            <circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="2" stroke-miterlimit="10"></circle>
                        </svg>
                    </div>
                </div>
            </div>
        </div>
    `,
                styles: [`
        .circular {
            -webkit-animation: rotate 2s linear infinite;
            animation: rotate 2s linear infinite;
            height: 100%;
            -webkit-transform-origin: center center;
            transform-origin: center center;
            width: 100%;
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
            margin: auto;
        }
        .circular .path {
            stroke-dasharray: 1, 200;
            stroke-dashoffset: 0;
            -webkit-animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;
            animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;
            stroke-linecap: round;
        }

        @-webkit-keyframes rotate {
            100% {
            -webkit-transform: rotate(360deg);
                    transform: rotate(360deg);
            }
        }
        @keyframes rotate {
            100% {
            -webkit-transform: rotate(360deg);
                    transform: rotate(360deg);
            }
        }
        @-webkit-keyframes dash {
            0% {
            stroke-dasharray: 1, 200;
            stroke-dashoffset: 0;
            }
            50% {
            stroke-dasharray: 89, 200;
            stroke-dashoffset: -35px;
            }
            100% {
            stroke-dasharray: 89, 200;
            stroke-dashoffset: -124px;
            }
        }
        @keyframes dash {
            0% {
            stroke-dasharray: 1, 200;
            stroke-dashoffset: 0;
            }
            50% {
            stroke-dasharray: 89, 200;
            stroke-dashoffset: -35px;
            }
            100% {
            stroke-dasharray: 89, 200;
            stroke-dashoffset: -124px;
            }
        }
        @-webkit-keyframes color {
            100%,
            0% {
            stroke: #48a7ff;
            }
            40% {
            stroke: #48a7ff;
            }
            66% {
            stroke: #48a7ff;
            }
            80%,
            90% {
            stroke: #48a7ff;
            }
        }
        @keyframes color {
            100%,
            0% {
            stroke: #48a7ff;
            }
            40% {
            stroke: #48a7ff;
            }
            66% {
            stroke: #48a7ff;
            }
            80%,
            90% {
            stroke: #48a7ff;
            }
        }
        .ng-busy-default-spinner {
            width: 126px;height: 126px;
        }
        .ng-busy-default-sign{
            background: transparent;
            box-shadow: none;
        }
        .farris-loading-backdrop {
            background-color: #ffffff;
            opacity: .0;
        }
        `]
            }] }
];
/** @nocollapse */
LoadingComponent.ctorParameters = () => [
    { type: Renderer2 },
    { type: ElementRef }
];
LoadingComponent.propDecorators = {
    loadingContainerEl: [{ type: ViewChild, args: ['loadingContainerEl',] }],
    loadingBackdrop: [{ type: ViewChild, args: ['loadingBackdrop',] }],
    closed: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    LoadingComponent.prototype.id;
    /**
     * @type {?}
     * @private
     */
    LoadingComponent.prototype._isActive;
    /** @type {?} */
    LoadingComponent.prototype.message;
    /** @type {?} */
    LoadingComponent.prototype.loadingContainerEl;
    /** @type {?} */
    LoadingComponent.prototype.loadingBackdrop;
    /** @type {?} */
    LoadingComponent.prototype.closed;
    /**
     * @type {?}
     * @private
     */
    LoadingComponent.prototype.render;
    /**
     * @type {?}
     * @private
     */
    LoadingComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,