/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { LoadingComponent } from './loading.component';
import { LoadingService } from './loading.service';
import { LOADING_DEFAULT_CONFIG, loaddingDefaultConfig } from './loading.config';
// export function loadingFactory(app: ApplicationRef, cfr: ComponentFactoryResolver, injector: Injector) {
//     return new LoadingService(app, cfr, injector);
// }
export class LoadingModule {
    /**
     * @param {?=} config
     * @return {?}
     */
    static forRoot(config) {
        // const _config = config ? Object.assign({}, loaddingDefaultConfig, config) : loaddingDefaultConfig;
        return {
            ngModule: LoadingModule,
            providers: [
                { provide: LOADING_DEFAULT_CONFIG, useValue: config || loaddingDefaultConfig },
                LoadingService
                // { provide: LoadingService, useFactory: loadingFactory, deps: [ApplicationRef, ComponentFactoryResolver, Injector] }
            ]
        };
    }
}
LoadingModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    LoadingComponent
                ],
                entryComponents: [
                    LoadingComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXN5cy9ydGYtY29tbW9uLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL2xvYWRpbmcvbG9hZGluZy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFpQixzQkFBc0IsRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGtCQUFrQixDQUFDOzs7O0FBaUJoRyxNQUFNLE9BQU8sYUFBYTs7Ozs7SUFDdEIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFzQjtRQUNqQyxxR0FBcUc7UUFFckcsT0FBTztZQUNILFFBQVEsRUFBRSxhQUFhO1lBQ3ZCLFNBQVMsRUFBRTtnQkFDUCxFQUFFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxRQUFRLEVBQUUsTUFBTSxJQUFJLHFCQUFxQixFQUFDO2dCQUM3RSxjQUFjO2dCQUNkLHNIQUFzSDthQUN6SDtTQUNKLENBQUM7SUFDTixDQUFDOzs7WUF2QkosUUFBUSxTQUFDO2dCQUNOLE9BQU8sRUFBRTtvQkFDTCxZQUFZO2lCQUNmO2dCQUNELFlBQVksRUFBRTtvQkFDVixnQkFBZ0I7aUJBQ25CO2dCQUNELGVBQWUsRUFBRTtvQkFDYixnQkFBZ0I7aUJBQ25CO2FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5cclxuaW1wb3J0IHsgTG9hZGluZ0NvbXBvbmVudCB9IGZyb20gJy4vbG9hZGluZy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMb2FkaW5nU2VydmljZSB9IGZyb20gJy4vbG9hZGluZy5zZXJ2aWNlJztcclxuaW1wb3J0IHsgTG9hZGluZ0NvbmZpZywgTE9BRElOR19ERUZBVUxUX0NPTkZJRywgbG9hZGRpbmdEZWZhdWx0Q29uZmlnIH0gZnJvbSAnLi9sb2FkaW5nLmNvbmZpZyc7XHJcblxyXG4vLyBleHBvcnQgZnVuY3Rpb24gbG9hZGluZ0ZhY3RvcnkoYXBwOiBBcHBsaWNhdGlvblJlZiwgY2ZyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIGluamVjdG9yOiBJbmplY3Rvcikge1xyXG4vLyAgICAgcmV0dXJuIG5ldyBMb2FkaW5nU2VydmljZShhcHAsIGNmciwgaW5qZWN0b3IpO1xyXG4vLyB9XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gICAgaW1wb3J0czogW1xyXG4gICAgICAgIENvbW1vbk1vZHVsZVxyXG4gICAgXSxcclxuICAgIGRlY2xhcmF0aW9uczogW1xyXG4gICAgICAgIExvYWRpbmdDb21wb25lbnRcclxuICAgIF0sXHJcbiAgICBlbnRyeUNvbXBvbmVudHM6IFtcclxuICAgICAgICBMb2FkaW5nQ29tcG9uZW50XHJcbiAgICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBMb2FkaW5nTW9kdWxlIHtcclxuICAgIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IExvYWRpbmdDb25maWcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcclxuICAgICAgICAvLyBjb25zdCBfY29uZmlnID0gY29uZmlnID8gT2JqZWN0LmFzc2lnbih7fSwgbG9hZGRpbmdEZWZhdWx0Q29uZmlnLCBjb25maWcpIDogbG9hZGRpbmdEZWZhdWx0Q29uZmlnO1xyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBuZ01vZHVsZTogTG9hZGluZ01vZHVsZSxcclxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgICAgICAgICB7IHByb3ZpZGU6IExPQURJTkdfREVGQVVMVF9DT05GSUcsIHVzZVZhbHVlOiBjb25maWcgfHwgbG9hZGRpbmdEZWZhdWx0Q29uZmlnfSxcclxuICAgICAgICAgICAgICAgIExvYWRpbmdTZXJ2aWNlXHJcbiAgICAgICAgICAgICAgICAvLyB7IHByb3ZpZGU6IExvYWRpbmdTZXJ2aWNlLCB1c2VGYWN0b3J5OiBsb2FkaW5nRmFjdG9yeSwgZGVwczogW0FwcGxpY2F0aW9uUmVmLCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIEluamVjdG9yXSB9XHJcbiAgICAgICAgICAgIF1cclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==