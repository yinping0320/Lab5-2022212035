/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, Injector, ComponentFactoryResolver } from '@angular/core';
import { RtfAppComponent } from '../rtf-app/rtf-app.component';
import { BsModalService } from '@farris/ui-modal';
import { RtfUIWebapiService } from '../../common/rtf-ui-webapi.service';
import { MessagerService } from '@farris/ui-messager';
// tslint:disable
var RtfAppHelpComponent = /** @class */ (function () {
    function RtfAppHelpComponent(rtfCommon, modalService, farrisMsg, injector, cfr) {
        this.rtfCommon = rtfCommon;
        this.modalService = modalService;
        this.farrisMsg = farrisMsg;
        this.injector = injector;
        this.cfr = cfr;
        /**
         * 初始选中的权限对象内码
         */
        this.initSelectKeys = [];
        this.languageCode = 'zh-CHS';
        this.isLayeredLoad = false;
        /**
         * 输出事件
         */
        this.afterHelpConfirm = new EventEmitter();
    }
    /**
     * @return {?}
     */
    RtfAppHelpComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * 弹出Farris模态框帮助
     */
    /**
     * 弹出Farris模态框帮助
     * @param {?=} sessionId
     * @return {?}
     */
    RtfAppHelpComponent.prototype.showHelp = /**
     * 弹出Farris模态框帮助
     * @param {?=} sessionId
     * @return {?}
     */
    function (sessionId) {
        var _this = this;
        // if (!sessionId || sessionId === '') {
        //     this.farrisMsg.error('调用帮助时请传递上下文变量!');
        //     return;
        // }
        this.rtfCommon.sessionId = ' ';
        /** @type {?} */
        var compFactory = this.cfr.resolveComponentFactory(RtfAppComponent);
        this.funcOpComp = compFactory.create(this.injector);
        // 向组件绑定语言代码
        this.funcOpComp.instance.setCurrentLangCode(this.languageCode);
        this.funcOpComp.instance.isLayeredLoad = this.isLayeredLoad;
        // 获取功能菜单的实例组件
        if (this.initSelectKeys != null && this.initSelectKeys.length > 0) {
            this.initSelectKeys
                .forEach((/**
             * @param {?} key
             * @return {?}
             */
            function (key) { return _this.funcOpComp.instance.curSelectedKeys.push(key); }));
        }
        // 初始化选择的业务对象
        if (this.bizObjectId && this.bizObjectId !== '') {
            this.funcOpComp.instance.bizObjectId = this.bizObjectId;
        }
        /** @type {?} */
        var modalConfig = {
            title: this.funcOpComp.instance.title,
            width: 800,
            height: 550,
            buttons: this.funcOpComp.instance.btnOkAndCancleRef,
            showButtons: true,
            showMaxButton: false,
            resizable: false
        };
        // 弹出帮助框
        this.funcOpDialog = this.modalService.show(this.funcOpComp, modalConfig);
        // 取消后
        this.funcOpComp.instance.afterCancle.subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            // 消失模态框
            _this.funcOpDialog.close();
        }));
        // 确认后
        this.funcOpComp.instance.afterConfirm.subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            _this.afterHelpConfirm.next(res);
        }));
    };
    RtfAppHelpComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-rtf-app-help',
                    template: "",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    RtfAppHelpComponent.ctorParameters = function () { return [
        { type: RtfUIWebapiService },
        { type: BsModalService },
        { type: MessagerService },
        { type: Injector },
        { type: ComponentFactoryResolver }
    ]; };
    RtfAppHelpComponent.propDecorators = {
        bizObjectId: [{ type: Input }],
        initSelectKeys: [{ type: Input }],
        languageCode: [{ type: Input }],
        isLayeredLoad: [{ type: Input }],
        afterHelpConfirm: [{ type: Output }]
    };
    return RtfAppHelpComponent;
}());
export { RtfAppHelpComponent };
if (false) {
    /**
     * 所属的业务对象内码
     * @type {?}
     */
    RtfAppHelpComponent.prototype.bizObjectId;
    /**
     * 初始选中的权限对象内码
     * @type {?}
     */
    RtfAppHelpComponent.prototype.initSelectKeys;
    /** @type {?} */
    RtfAppHelpComponent.prototype.languageCode;
    /** @type {?} */
    RtfAppHelpComponent.prototype.isLayeredLoad;
    /**
     * 输出事件
     * @type {?}
     */
    RtfAppHelpComponent.prototype.afterHelpConfirm;
    /**
     * @type {?}
     * @private
     */
    RtfAppHelpComponent.prototype.funcOpComp;
    /**
     * @type {?}
     * @private
     */
    RtfAppHelpComponent.prototype.funcOpDialog;
    /**
     * @type {?}
     * @private
     */
    RtfAppHelpComponent.prototype.rtfCommon;
    /**
     * @type {?}
     * @private
     */
    RtfAppHelpComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    RtfAppHelpComponent.prototype.farrisMsg;
    /**
     * @type {?}
     * @private
     */
    RtfAppHelpComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    RtfAppHelpComponent.prototype.cfr;
}
//# sourceMappingURL=data:application/json;base64,