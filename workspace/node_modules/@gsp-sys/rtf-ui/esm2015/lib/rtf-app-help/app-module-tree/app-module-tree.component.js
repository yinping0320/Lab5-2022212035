/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, EventEmitter, Input } from '@angular/core';
import { from } from 'rxjs';
export class AppModuleTreeComponent {
    constructor() {
        /**
         * 菜单明细类
         */
        this.appTreeData = [];
        this.selectKeys = [];
        /**
         * 功能菜单模块变化后后
         */
        this.appTreeChanged = new EventEmitter();
        /**
         * 树节点展开后的输出
         */
        this.appTreeExpanded = new EventEmitter();
        /**
         * 树控件展开的节点值
         */
        this.expandedKeys = [];
    }
    /**
     * 变化情况
     * @param {?} changes 变化
     * @return {?}
     */
    ngOnChanges(changes) {
        // 初始化变化取消
        // 未包含appTreeData的变化
        if (!changes['appTreeData']) {
            return;
        }
        // 无效的值不予处理
        if (!changes['appTreeData'].currentValue ||
            changes['appTreeData'].currentValue.length === 0) {
            return;
        }
        // 获取到菜单数据
        from(this.appTreeData).subscribe((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            if (!item.ParentId || item.ParentId === '0') {
                item.ParentId = undefined;
                if (item.Layer === 1) {
                    this.expandedKeys.push(item.Id);
                }
            }
        }));
        /*
         // 默认业务对象的处理
         if (!isNullOrUndefined(this.bizObjectId) && this.bizObjectId !== '') {
            // 树焦点行
            let curBizObjectId = this.bizObjectId;
            while (!isNullOrUndefined(curBizObjectId)) {
                this.expandedKeys.push(curBizObjectId);
                // 找到当前节点的付家店
                curBizObjectId = this.data.find(item => item['id'] === curBizObjectId)['parentID'];
            }
            // 右侧操作变化
            this.selectKeys = [this.bizObjectId];
            setTimeout(() => {
                this.bizObjectChanged.emit(this.bizObjectId);
            }, 80);
        }
        */
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * 选中行改变后触发事件
     * @param {?} args
     * @return {?}
     */
    selectChange(args) {
        /** @type {?} */
        const curApp = args.dataItem;
        // 首次触发
        if (this.selectKeys == null || this.selectKeys.length === 0) {
            this.appTreeChanged.emit(curApp);
        }
        else {
            // 这个事件里还不会对selectedkeys数组赋值，是上一个状态的
            /** @type {?} */
            const lastAppId = this.selectKeys[0];
            /** @type {?} */
            const curAppId = curApp.Id;
            // 变化的情况下触发
            if (lastAppId !== curAppId) {
                this.appTreeChanged.emit(curApp);
            }
        }
    }
    /**
     * @param {?} arg
     * @return {?}
     */
    onExpand(arg) {
        console.log('菜单帮助左侧树展开');
        if (!arg || !arg.dataItem) {
            return;
        }
        this.appTreeExpanded.emit(arg.dataItem);
    }
}
AppModuleTreeComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-module-tree',
                template: "<div class=\"d-flex flex-column flex-fill pt-2 pb-2\" style=\"height: 100%\">\r\n    <kendo-treeview [nodes]=\"appTreeData\" textField=\"Name\" kendoTreeViewExpandable kendoTreeViewFlatDataBinding\r\n        idField=\"Id\" parentIdField=\"ParentId\" kendoTreeViewSelectable [selectBy]=\"'Id'\"\r\n        [(selectedKeys)]=\"this.selectKeys\" [(expandedKeys)]=\"expandedKeys\" [expandBy]=\"'Id'\"\r\n        (expand)=\"this.onExpand($event)\" (selectionChange)=\"selectChange($event)\">\r\n    </kendo-treeview>\r\n</div>",
                styles: [""]
            }] }
];
/** @nocollapse */
AppModuleTreeComponent.ctorParameters = () => [];
AppModuleTreeComponent.propDecorators = {
    appTreeData: [{ type: Input }],
    bizObjectId: [{ type: Input }],
    appTreeChanged: [{ type: Output }],
    appTreeExpanded: [{ type: Output }]
};
if (false) {
    /**
     * 菜单明细类
     * @type {?}
     */
    AppModuleTreeComponent.prototype.appTreeData;
    /**
     * 业务对象
     *
     * @type {?}
     */
    AppModuleTreeComponent.prototype.bizObjectId;
    /** @type {?} */
    AppModuleTreeComponent.prototype.selectKeys;
    /** @type {?} */
    AppModuleTreeComponent.prototype.currentid;
    /**
     * 功能菜单模块变化后后
     * @type {?}
     */
    AppModuleTreeComponent.prototype.appTreeChanged;
    /**
     * 树节点展开后的输出
     * @type {?}
     */
    AppModuleTreeComponent.prototype.appTreeExpanded;
    /**
     * 树控件展开的节点值
     * @type {?}
     */
    AppModuleTreeComponent.prototype.expandedKeys;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLW1vZHVsZS10cmVlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atc3lzL3J0Zi11aS8iLCJzb3VyY2VzIjpbImxpYi9ydGYtYXBwLWhlbHAvYXBwLW1vZHVsZS10cmVlL2FwcC1tb2R1bGUtdHJlZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBRXpHLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFPNUIsTUFBTSxPQUFPLHNCQUFzQjtJQTZCL0I7Ozs7UUF2QkEsZ0JBQVcsR0FBYSxFQUFFLENBQUM7UUFNcEIsZUFBVSxHQUFhLEVBQUUsQ0FBQzs7OztRQU1qQyxtQkFBYyxHQUF5QixJQUFJLFlBQVksRUFBVSxDQUFDOzs7O1FBS2xFLG9CQUFlLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7Ozs7UUFJN0QsaUJBQVksR0FBRyxFQUFFLENBQUM7SUFHbEIsQ0FBQzs7Ozs7O0lBTUQsV0FBVyxDQUFDLE9BQXNCO1FBQzlCLFVBQVU7UUFDVixvQkFBb0I7UUFDcEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsRUFBRTtZQUN6QixPQUFPO1NBQ1Y7UUFDRCxXQUFXO1FBQ1gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxZQUFZO1lBQ3BDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxZQUFZLENBQUMsTUFBTSxLQUFLLENBQUMsRUFDbEQ7WUFDRSxPQUFPO1NBQ1Y7UUFFRCxVQUFVO1FBQ1YsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxTQUFTOzs7O1FBQUMsSUFBSSxDQUFDLEVBQUU7WUFDcEMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsS0FBSyxHQUFHLEVBQUU7Z0JBQ3pDLElBQUksQ0FBQyxRQUFRLEdBQUcsU0FBUyxDQUFDO2dCQUMxQixJQUFJLElBQUksQ0FBQyxLQUFLLEtBQUssQ0FBQyxFQUFFO29CQUNsQixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7aUJBQ25DO2FBQ0o7UUFDTCxDQUFDLEVBQ0EsQ0FBQztRQUVGOzs7Ozs7Ozs7Ozs7Ozs7O1VBZ0JFO0lBQ04sQ0FBQzs7OztJQUVELFFBQVE7SUFDUixDQUFDOzs7Ozs7SUFJRCxZQUFZLENBQUMsSUFBUzs7Y0FDWixNQUFNLEdBQVcsSUFBSSxDQUFDLFFBQVE7UUFDcEMsT0FBTztRQUNQLElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ3pELElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3BDO2FBQU07OztrQkFFRyxTQUFTLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7O2tCQUM5QixRQUFRLEdBQUcsTUFBTSxDQUFDLEVBQUU7WUFDMUIsV0FBVztZQUNYLElBQUksU0FBUyxLQUFLLFFBQVEsRUFBRTtnQkFDeEIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDcEM7U0FDSjtJQUNMLENBQUM7Ozs7O0lBRUQsUUFBUSxDQUFDLEdBQVE7UUFDYixPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFO1lBQ3ZCLE9BQU87U0FDVjtRQUNELElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM1QyxDQUFDOzs7WUEvR0osU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxpQkFBaUI7Z0JBQzNCLG9oQkFBK0M7O2FBRWxEOzs7OzswQkFNSSxLQUFLOzBCQU1MLEtBQUs7NkJBTUwsTUFBTTs4QkFLTixNQUFNOzs7Ozs7O0lBakJQLDZDQUMyQjs7Ozs7O0lBSzNCLDZDQUE2Qjs7SUFDN0IsNENBQWlDOztJQUNqQywyQ0FBa0I7Ozs7O0lBSWxCLGdEQUNrRTs7Ozs7SUFJbEUsaURBQzZEOzs7OztJQUk3RCw4Q0FBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUnRmQXBwIH0gZnJvbSAnLi4vZW50aXRpZXMvcnRmLWFwcCc7XHJcbmltcG9ydCB7IGZyb20gfSBmcm9tICdyeGpzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdhcHAtbW9kdWxlLXRyZWUnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL2FwcC1tb2R1bGUtdHJlZS5jb21wb25lbnQuaHRtbCcsXHJcbiAgICBzdHlsZVVybHM6IFsnLi9hcHAtbW9kdWxlLXRyZWUuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBcHBNb2R1bGVUcmVlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog6I+c5Y2V5piO57uG57G7XHJcbiAgICAgKi9cclxuICAgIEBJbnB1dCgpXHJcbiAgICBhcHBUcmVlRGF0YTogUnRmQXBwW10gPSBbXTtcclxuICAgIC8qKlxyXG4gICAgICog5Lia5Yqh5a+56LGhXHJcbiAgICAgKlxyXG4gICAgICovXHJcbiAgICBASW5wdXQoKSBiaXpPYmplY3RJZDogc3RyaW5nO1xyXG4gICAgcHVibGljIHNlbGVjdEtleXM6IHN0cmluZ1tdID0gW107XHJcbiAgICBjdXJyZW50aWQ6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICog5Yqf6IO96I+c5Y2V5qih5Z2X5Y+Y5YyW5ZCO5ZCOXHJcbiAgICAgKi9cclxuICAgIEBPdXRwdXQoKVxyXG4gICAgYXBwVHJlZUNoYW5nZWQ6IEV2ZW50RW1pdHRlcjxSdGZBcHA+ID0gbmV3IEV2ZW50RW1pdHRlcjxSdGZBcHA+KCk7XHJcbiAgICAvKipcclxuICAgICAqIOagkeiKgueCueWxleW8gOWQjueahOi+k+WHulxyXG4gICAgICovXHJcbiAgICBAT3V0cHV0KClcclxuICAgIGFwcFRyZWVFeHBhbmRlZDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuICAgIC8qKlxyXG4gICAgICog5qCR5o6n5Lu25bGV5byA55qE6IqC54K55YC8XHJcbiAgICAgKi9cclxuICAgIGV4cGFuZGVkS2V5cyA9IFtdO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Y+Y5YyW5oOF5Ya1XHJcbiAgICAgKiBAcGFyYW0gY2hhbmdlcyDlj5jljJZcclxuICAgICAqL1xyXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgICAgIC8vIOWIneWni+WMluWPmOWMluWPlua2iFxyXG4gICAgICAgIC8vIOacquWMheWQq2FwcFRyZWVEYXRh55qE5Y+Y5YyWXHJcbiAgICAgICAgaWYgKCFjaGFuZ2VzWydhcHBUcmVlRGF0YSddKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g5peg5pWI55qE5YC85LiN5LqI5aSE55CGXHJcbiAgICAgICAgaWYgKCFjaGFuZ2VzWydhcHBUcmVlRGF0YSddLmN1cnJlbnRWYWx1ZSB8fFxyXG4gICAgICAgICAgICBjaGFuZ2VzWydhcHBUcmVlRGF0YSddLmN1cnJlbnRWYWx1ZS5sZW5ndGggPT09IDBcclxuICAgICAgICApIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8g6I635Y+W5Yiw6I+c5Y2V5pWw5o2uXHJcbiAgICAgICAgZnJvbSh0aGlzLmFwcFRyZWVEYXRhKS5zdWJzY3JpYmUoaXRlbSA9PiB7XHJcbiAgICAgICAgICAgIGlmICghaXRlbS5QYXJlbnRJZCB8fCBpdGVtLlBhcmVudElkID09PSAnMCcpIHtcclxuICAgICAgICAgICAgICAgIGl0ZW0uUGFyZW50SWQgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgICAgICAgICBpZiAoaXRlbS5MYXllciA9PT0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXhwYW5kZWRLZXlzLnB1c2goaXRlbS5JZCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgKTtcclxuXHJcbiAgICAgICAgLypcclxuICAgICAgICAgLy8g6buY6K6k5Lia5Yqh5a+56LGh55qE5aSE55CGXHJcbiAgICAgICAgIGlmICghaXNOdWxsT3JVbmRlZmluZWQodGhpcy5iaXpPYmplY3RJZCkgJiYgdGhpcy5iaXpPYmplY3RJZCAhPT0gJycpIHtcclxuICAgICAgICAgICAgLy8g5qCR54Sm54K56KGMXHJcbiAgICAgICAgICAgIGxldCBjdXJCaXpPYmplY3RJZCA9IHRoaXMuYml6T2JqZWN0SWQ7XHJcbiAgICAgICAgICAgIHdoaWxlICghaXNOdWxsT3JVbmRlZmluZWQoY3VyQml6T2JqZWN0SWQpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmV4cGFuZGVkS2V5cy5wdXNoKGN1ckJpek9iamVjdElkKTtcclxuICAgICAgICAgICAgICAgIC8vIOaJvuWIsOW9k+WJjeiKgueCueeahOS7mOWutuW6l1xyXG4gICAgICAgICAgICAgICAgY3VyQml6T2JqZWN0SWQgPSB0aGlzLmRhdGEuZmluZChpdGVtID0+IGl0ZW1bJ2lkJ10gPT09IGN1ckJpek9iamVjdElkKVsncGFyZW50SUQnXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyDlj7Pkvqfmk43kvZzlj5jljJZcclxuICAgICAgICAgICAgdGhpcy5zZWxlY3RLZXlzID0gW3RoaXMuYml6T2JqZWN0SWRdO1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYml6T2JqZWN0Q2hhbmdlZC5lbWl0KHRoaXMuYml6T2JqZWN0SWQpO1xyXG4gICAgICAgICAgICB9LCA4MCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICovXHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOmAieS4reihjOaUueWPmOWQjuinpuWPkeS6i+S7tlxyXG4gICAgICovXHJcbiAgICBzZWxlY3RDaGFuZ2UoYXJnczogYW55KSB7XHJcbiAgICAgICAgY29uc3QgY3VyQXBwOiBSdGZBcHAgPSBhcmdzLmRhdGFJdGVtO1xyXG4gICAgICAgIC8vIOmmluasoeinpuWPkVxyXG4gICAgICAgIGlmICh0aGlzLnNlbGVjdEtleXMgPT0gbnVsbCB8fCB0aGlzLnNlbGVjdEtleXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYXBwVHJlZUNoYW5nZWQuZW1pdChjdXJBcHApO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIOi/meS4quS6i+S7tumHjOi/mOS4jeS8muWvuXNlbGVjdGVka2V5c+aVsOe7hOi1i+WAvO+8jOaYr+S4iuS4gOS4queKtuaAgeeahFxyXG4gICAgICAgICAgICBjb25zdCBsYXN0QXBwSWQgPSB0aGlzLnNlbGVjdEtleXNbMF07XHJcbiAgICAgICAgICAgIGNvbnN0IGN1ckFwcElkID0gY3VyQXBwLklkO1xyXG4gICAgICAgICAgICAvLyDlj5jljJbnmoTmg4XlhrXkuIvop6blj5FcclxuICAgICAgICAgICAgaWYgKGxhc3RBcHBJZCAhPT0gY3VyQXBwSWQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYXBwVHJlZUNoYW5nZWQuZW1pdChjdXJBcHApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uRXhwYW5kKGFyZzogYW55KSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ+iPnOWNleW4ruWKqeW3puS+p+agkeWxleW8gCcpO1xyXG4gICAgICAgIGlmICghYXJnIHx8ICFhcmcuZGF0YUl0ZW0pIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmFwcFRyZWVFeHBhbmRlZC5lbWl0KGFyZy5kYXRhSXRlbSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbiJdfQ==