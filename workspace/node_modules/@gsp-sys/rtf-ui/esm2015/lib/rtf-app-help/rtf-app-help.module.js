/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { GridModule } from '@progress/kendo-angular-grid';
import { LayoutModule } from '@progress/kendo-angular-layout';
import { TreeViewModule } from '@progress/kendo-angular-treeview';
import { AppModuleTreeComponent } from './app-module-tree/app-module-tree.component';
import { RtfAppComponent } from './rtf-app/rtf-app.component';
import { RtfAppHelpComponent } from './rtf-app-help/rtf-app-help.component';
import { RtfAppService } from './service/rtf-app.service';
import { RtfUIWebapiService } from '../common/rtf-ui-webapi.service';
import { HttpClientModule } from '@angular/common/http';
import { ModalModule } from '@farris/ui-modal';
import { MessagerModule } from '@farris/ui-messager';
export class RtfAppHelpModule {
}
RtfAppHelpModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    HttpClientModule,
                    // kendo
                    GridModule,
                    LayoutModule,
                    TreeViewModule,
                    // farris
                    ModalModule.forRoot(),
                    MessagerModule.forRoot(),
                ],
                declarations: [
                    AppModuleTreeComponent,
                    RtfAppComponent,
                    RtfAppHelpComponent,
                ],
                entryComponents: [
                    RtfAppComponent
                ],
                providers: [
                    RtfUIWebapiService,
                    RtfAppService,
                ],
                exports: [
                    RtfAppComponent,
                    RtfAppHelpComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnRmLWFwcC1oZWxwLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atc3lzL3J0Zi11aS8iLCJzb3VyY2VzIjpbImxpYi9ydGYtYXBwLWhlbHAvcnRmLWFwcC1oZWxwLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM5RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDbEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDckYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzlELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNyRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBbUNyRCxNQUFNLE9BQU8sZ0JBQWdCOzs7WUFqQzVCLFFBQVEsU0FBQztnQkFDTixPQUFPLEVBQUU7b0JBQ0wsWUFBWTtvQkFDWixnQkFBZ0I7b0JBQ2hCLFFBQVE7b0JBQ1IsVUFBVTtvQkFDVixZQUFZO29CQUNaLGNBQWM7b0JBQ2QsU0FBUztvQkFDVCxXQUFXLENBQUMsT0FBTyxFQUFFO29CQUNyQixjQUFjLENBQUMsT0FBTyxFQUFFO2lCQUMzQjtnQkFFRCxZQUFZLEVBQUU7b0JBQ1Ysc0JBQXNCO29CQUN0QixlQUFlO29CQUNmLG1CQUFtQjtpQkFDdEI7Z0JBRUQsZUFBZSxFQUFFO29CQUNiLGVBQWU7aUJBQ2xCO2dCQUVELFNBQVMsRUFBRTtvQkFDUCxrQkFBa0I7b0JBQ2xCLGFBQWE7aUJBQ2hCO2dCQUVELE9BQU8sRUFBRTtvQkFDTCxlQUFlO29CQUNmLG1CQUFtQjtpQkFDdEI7YUFDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEdyaWRNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1ncmlkJztcclxuaW1wb3J0IHsgTGF5b3V0TW9kdWxlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItbGF5b3V0JztcclxuaW1wb3J0IHsgVHJlZVZpZXdNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci10cmVldmlldyc7XHJcbmltcG9ydCB7IEFwcE1vZHVsZVRyZWVDb21wb25lbnQgfSBmcm9tICcuL2FwcC1tb2R1bGUtdHJlZS9hcHAtbW9kdWxlLXRyZWUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUnRmQXBwQ29tcG9uZW50IH0gZnJvbSAnLi9ydGYtYXBwL3J0Zi1hcHAuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUnRmQXBwSGVscENvbXBvbmVudCB9IGZyb20gJy4vcnRmLWFwcC1oZWxwL3J0Zi1hcHAtaGVscC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBSdGZBcHBTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlL3J0Zi1hcHAuc2VydmljZSc7XHJcbmltcG9ydCB7IFJ0ZlVJV2ViYXBpU2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi9ydGYtdWktd2ViYXBpLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQgeyBNb2RhbE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbW9kYWwnO1xyXG5pbXBvcnQgeyBNZXNzYWdlck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbWVzc2FnZXInO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICAgIGltcG9ydHM6IFtcclxuICAgICAgICBDb21tb25Nb2R1bGUsXHJcbiAgICAgICAgSHR0cENsaWVudE1vZHVsZSxcclxuICAgICAgICAvLyBrZW5kb1xyXG4gICAgICAgIEdyaWRNb2R1bGUsXHJcbiAgICAgICAgTGF5b3V0TW9kdWxlLFxyXG4gICAgICAgIFRyZWVWaWV3TW9kdWxlLFxyXG4gICAgICAgIC8vIGZhcnJpc1xyXG4gICAgICAgIE1vZGFsTW9kdWxlLmZvclJvb3QoKSxcclxuICAgICAgICBNZXNzYWdlck1vZHVsZS5mb3JSb290KCksXHJcbiAgICBdLFxyXG5cclxuICAgIGRlY2xhcmF0aW9uczogW1xyXG4gICAgICAgIEFwcE1vZHVsZVRyZWVDb21wb25lbnQsXHJcbiAgICAgICAgUnRmQXBwQ29tcG9uZW50LFxyXG4gICAgICAgIFJ0ZkFwcEhlbHBDb21wb25lbnQsXHJcbiAgICBdLFxyXG5cclxuICAgIGVudHJ5Q29tcG9uZW50czogW1xyXG4gICAgICAgIFJ0ZkFwcENvbXBvbmVudFxyXG4gICAgXSxcclxuXHJcbiAgICBwcm92aWRlcnM6IFtcclxuICAgICAgICBSdGZVSVdlYmFwaVNlcnZpY2UsXHJcbiAgICAgICAgUnRmQXBwU2VydmljZSxcclxuICAgIF0sXHJcblxyXG4gICAgZXhwb3J0czogW1xyXG4gICAgICAgIFJ0ZkFwcENvbXBvbmVudCxcclxuICAgICAgICBSdGZBcHBIZWxwQ29tcG9uZW50XHJcbiAgICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBSdGZBcHBIZWxwTW9kdWxlIHsgfVxyXG4iXX0=