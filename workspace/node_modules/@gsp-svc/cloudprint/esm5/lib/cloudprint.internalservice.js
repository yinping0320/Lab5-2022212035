/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Injector, ApplicationRef } from '@angular/core';
import { ComponentFactoryResolver } from '@angular/core';
import { PrintEntity } from './entitys/printEntity';
import { NotifyService } from '@farris/ui-notify';
import { Urls } from './utils/cloudprint.Urls';
import { AppService } from '@gsp-sys/rtf-common';
import { PrintFormatService } from './services/printFormatService';
import { WindowService } from '@progress/kendo-angular-dialog';
import { DataValidator } from './utils/cloudprint.datavalidator';
import { BsModalService } from '@farris/ui-modal';
var CloudprintInternalService = /** @class */ (function () {
    function CloudprintInternalService(formatSrv, resolver, injector, applicationRef, notifyService, appService, windowService, modalService) {
        this.formatSrv = formatSrv;
        this.resolver = resolver;
        this.injector = injector;
        this.applicationRef = applicationRef;
        this.notifyService = notifyService;
        this.appService = appService;
        this.windowService = windowService;
        this.modalService = modalService;
        /**
         * 打印参数实体
         */
        this.printEntity = new PrintEntity();
        // 设置printEntity的默认值
        this.printEntity.appUrl = Urls.CloudPrintBaseUrl;
        this.printEntity.isUseMetaData = true;
        this.printEntity.language = localStorage.getItem("languageCode") || 'zh-CHS';
        this.formatSrv.printEntity = this.printEntity;
    }
    Object.defineProperty(CloudprintInternalService.prototype, "setPrintEntity", {
        /**
         * 设置PrintEntity参数
         * @description 如果外界new新的PrintEntity，则需要调用该方法同步service的entity
         *              外界没有new新的PrintEntity，则不需要调用该方法
         */
        set: /**
         * 设置PrintEntity参数
         * \@description 如果外界new新的PrintEntity，则需要调用该方法同步service的entity
         *              外界没有new新的PrintEntity，则不需要调用该方法
         * @param {?} entity
         * @return {?}
         */
        function (entity) {
            this.printEntity = entity;
            // this.designerSrv.printEntity = this.printEntity;
            // this.viewerSrv.printEntity = this.printEntity;
            this.formatSrv.printEntity = this.printEntity;
        },
        enumerable: true,
        configurable: true
    });
    /**be数据源创建格式*/
    /**
     * be数据源创建格式
     * @param {?} beId
     * @return {?}
     */
    CloudprintInternalService.prototype.createPrintFormatWithBE = /**
     * be数据源创建格式
     * @param {?} beId
     * @return {?}
     */
    function (beId) {
        return this.formatSrv.createPrintFormatWithBE(beId);
    };
    /**vo数据源创建格式*/
    /**
     * vo数据源创建格式
     * @param {?} voId
     * @return {?}
     */
    CloudprintInternalService.prototype.createPrintFormatWithVO = /**
     * vo数据源创建格式
     * @param {?} voId
     * @return {?}
     */
    function (voId) {
        return this.formatSrv.createPrintFormatWithVO(voId);
    };
    /**根据数据源id获取格式*/
    /**
     * 根据数据源id获取格式
     * @param {?} sourceId
     * @return {?}
     */
    CloudprintInternalService.prototype.getPrintFormatByDataSrouceId = /**
     * 根据数据源id获取格式
     * @param {?} sourceId
     * @return {?}
     */
    function (sourceId) {
        return this.formatSrv.getFormatBySourceId(sourceId);
    };
    /**根据数据源和维度获取格式*/
    /**
     * 根据数据源和维度获取格式
     * @param {?} billCategoryId
     * @param {?} sourceId
     * @param {?} firstDimension
     * @param {?} secondDimension
     * @return {?}
     */
    CloudprintInternalService.prototype.getPrintFormatByDataSrouceAndDimension = /**
     * 根据数据源和维度获取格式
     * @param {?} billCategoryId
     * @param {?} sourceId
     * @param {?} firstDimension
     * @param {?} secondDimension
     * @return {?}
     */
    function (billCategoryId, sourceId, firstDimension, secondDimension) {
        return this.formatSrv.getPrintFormatByDataSrouceAndDimension(billCategoryId, sourceId, firstDimension, secondDimension);
    };
    /**根据业务对象id获取数据源*/
    /**
     * 根据业务对象id获取数据源
     * @param {?} boId
     * @return {?}
     */
    CloudprintInternalService.prototype.getDataSourceByBOId = /**
     * 根据业务对象id获取数据源
     * @param {?} boId
     * @return {?}
     */
    function (boId) {
        return this.formatSrv.getDataSourceByBOId(boId);
    };
    /**根据格式id获取格式*/
    /**
     * 根据格式id获取格式
     * @param {?} formatId
     * @return {?}
     */
    CloudprintInternalService.prototype.getFormatByFormatId = /**
     * 根据格式id获取格式
     * @param {?} formatId
     * @return {?}
     */
    function (formatId) {
        return this.formatSrv.getFormatByFormatId(formatId);
    };
    /**根据已有的格式id和数据源id，实时获取数据源结构后组成新的格式*/
    /**
     * 根据已有的格式id和数据源id，实时获取数据源结构后组成新的格式
     * @param {?} formatId
     * @return {?}
     */
    CloudprintInternalService.prototype.getNewSourceFormatByFormatId = /**
     * 根据已有的格式id和数据源id，实时获取数据源结构后组成新的格式
     * @param {?} formatId
     * @return {?}
     */
    function (formatId) {
        return this.formatSrv.getNewSourceFormatByFormatId(formatId);
    };
    /**根据已有的格式id和数据源id，语言，实时获取数据源结构后组成新的格式*/
    /**
     * 根据已有的格式id和数据源id，语言，实时获取数据源结构后组成新的格式
     * @param {?} formatId
     * @param {?} lang
     * @return {?}
     */
    CloudprintInternalService.prototype.getNewSourceFormatByFormatIdAndLang = /**
     * 根据已有的格式id和数据源id，语言，实时获取数据源结构后组成新的格式
     * @param {?} formatId
     * @param {?} lang
     * @return {?}
     */
    function (formatId, lang) {
        return this.formatSrv.getNewSourceFormatByFormatIdAndLang(formatId, lang);
    };
    /**保存格式*/
    /**
     * 保存格式
     * @param {?} data
     * @return {?}
     */
    CloudprintInternalService.prototype.save = /**
     * 保存格式
     * @param {?} data
     * @return {?}
     */
    function (data) {
        return this.formatSrv.save(data);
    };
    /**保存格式*/
    /**
     * 保存格式
     * @param {?} data
     * @return {?}
     */
    CloudprintInternalService.prototype.saveWithRes = /**
     * 保存格式
     * @param {?} data
     * @return {?}
     */
    function (data) {
        return this.formatSrv.saveWithRes(data);
    };
    /**删除格式*/
    /**
     * 删除格式
     * @param {?} formatId
     * @return {?}
     */
    CloudprintInternalService.prototype.remove = /**
     * 删除格式
     * @param {?} formatId
     * @return {?}
     */
    function (formatId) {
        return this.formatSrv.remove(formatId);
    };
    /**根据格式id获取格式*/
    /**
     * 根据格式id获取格式
     * @param {?} id
     * @return {?}
     */
    CloudprintInternalService.prototype.getFormatById = /**
     * 根据格式id获取格式
     * @param {?} id
     * @return {?}
     */
    function (id) {
        if (DataValidator.checkAppUrl(this.printEntity.appUrl) == false) {
            this.notifyService.info('未配置正确的appUrl');
            return;
        }
        return this.formatSrv.loadFormat(id, 'CloudPrint');
    };
    CloudprintInternalService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    CloudprintInternalService.ctorParameters = function () { return [
        { type: PrintFormatService },
        { type: ComponentFactoryResolver },
        { type: Injector },
        { type: ApplicationRef },
        { type: NotifyService },
        { type: AppService },
        { type: WindowService },
        { type: BsModalService }
    ]; };
    return CloudprintInternalService;
}());
export { CloudprintInternalService };
if (false) {
    /**
     * 打印参数实体
     * @type {?}
     */
    CloudprintInternalService.prototype.printEntity;
    /**
     * @type {?}
     * @private
     */
    CloudprintInternalService.prototype.formatSrv;
    /**
     * @type {?}
     * @private
     */
    CloudprintInternalService.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    CloudprintInternalService.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    CloudprintInternalService.prototype.applicationRef;
    /**
     * @type {?}
     * @private
     */
    CloudprintInternalService.prototype.notifyService;
    /**
     * @type {?}
     * @private
     */
    CloudprintInternalService.prototype.appService;
    /**
     * @type {?}
     * @private
     */
    CloudprintInternalService.prototype.windowService;
    /**
     * @type {?}
     * @private
     */
    CloudprintInternalService.prototype.modalService;
}
//# sourceMappingURL=data:application/json;base64,