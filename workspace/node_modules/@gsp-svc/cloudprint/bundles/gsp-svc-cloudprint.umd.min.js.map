{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@gsp-svc/cloudprint/lib/entitys/printEntity.ts","ng://@gsp-svc/cloudprint/lib/functions/cloudprint.function.filtervalue.ts","ng://@gsp-svc/cloudprint/lib/functions/cloudprint.function.utils.ts","ng://@gsp-svc/cloudprint/lib/functions/cloudprint.function.format.ts","ng://@gsp-svc/cloudprint/lib/functions/cloudprint.function.convert.ts","ng://@gsp-svc/cloudprint/lib/functions/cloudprint.function.register.ts","ng://@gsp-svc/cloudprint/lib/entitys/config.ts","ng://@gsp-svc/cloudprint/lib/utils/cloudprint.Urls.ts","ng://@gsp-svc/cloudprint/lib/entitys/printFormat.ts","ng://@gsp-svc/cloudprint/lib/utils/cloudprint.datavalidator.ts","ng://@gsp-svc/cloudprint/lib/services/printFormatService.ts","ng://@gsp-svc/cloudprint/lib/cloudprint-designer/cloudprint-designer.service.ts","ng://@gsp-svc/cloudprint/lib/utils/cloudprint.utils.ts","ng://@gsp-svc/cloudprint/lib/cloudprint-designer/cloudprint-designer.component.ts","ng://@gsp-svc/cloudprint/lib/cloudprint-viewer/cloudprint-viewer.service.ts","ng://@gsp-svc/cloudprint/lib/cloudprint-viewer/cloudprint-viewer.component.ts","ng://@gsp-svc/cloudprint/lib/entitys/enums/cmpType.ts","ng://@gsp-svc/cloudprint/lib/entitys/outputoptions/outputParam.ts","ng://@gsp-svc/cloudprint/lib/entitys/enums/sourceType.ts","ng://@gsp-svc/cloudprint/lib/cloudprint-formatlist/formatlist.component.ts","ng://@gsp-svc/cloudprint/lib/entitys/enums/querytype.ts","ng://@gsp-svc/cloudprint/lib/entitys/enums/printtype.ts","ng://@gsp-svc/cloudprint/lib/entitys/outputoptions/printsetting.ts","ng://@gsp-svc/cloudprint/lib/entitys/enums/printOritation.ts","ng://@gsp-svc/cloudprint/lib/entitys/outputoptions/paperkind.ts","ng://@gsp-svc/cloudprint/lib/cloudprint-formatlistjob/formatlistjob.component.ts","ng://@gsp-svc/cloudprint/lib/i18n/language.resource.ts","ng://@gsp-svc/cloudprint/lib/local.pipe.ts","ng://@gsp-svc/cloudprint/lib/cloudprint.service.ts","ng://@gsp-svc/cloudprint/lib/cloudprint.module.ts","ng://@gsp-svc/cloudprint/lib/entitys/datasourceoptions/basesourceoptions.ts","ng://@gsp-svc/cloudprint/lib/entitys/datasourceoptions/sourceFilterOptions.ts","ng://@gsp-svc/cloudprint/lib/entitys/datasourceoptions/sourceOptions.ts","ng://@gsp-svc/cloudprint/lib/entitys/datasourceoptions/retrieveParam.ts","ng://@gsp-svc/cloudprint/lib/entitys/outputoptions/fileType.ts","ng://@gsp-svc/cloudprint/lib/entitys/outputoptions/outputOptions.ts","ng://@gsp-svc/cloudprint/lib/cloudprint.internalservice.ts","ng://@gsp-svc/cloudprint/lib/cloudprint.attachmentservice.ts","ng://@gsp-svc/cloudprint/lib/entitys/outputoptions/outputType.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__read","o","m","r","i","ar","error","__spread","arguments","concat","PrintEntity","downLoadFileName","onSaveReportEvent","EventEmitter","onExitEvent","onGetPrintFormatIdEvent","onSavedReportEvent","PrintFunctionsOfFiltervalue","GetValue","Category","GroupFunctionName","FunctionName","Description","TypeOfFunction","ReturnType","String","ReturnDescription","ArgumentTypes","Number","ArgumentNames","ArgumentDescriptions","Function","dataSource","row","col","table","dataTable","rows","list","columns","storage","values","GetFilterValues","Boolean","filterColumn","filterValue","targetColumnName","first","colValues","find","columnName","a","index","res","tmpIndex","substring","PrintFunctionUtils","FormatToCurrencyNumber","number","FormatToCurrencyNumberCN","startsWith","ConvertCurrency","replace","RegExp","money","integerNum","decimalNum","parts","cnNums","cnIntRadice","cnIntUnits","cnDecUnits","chineseStr","parseFloat","toString","indexOf","split","substr","parseInt","zeroCount","IntLen","q","decLen","FormatToCurrencyCN","FormatToCurrency","str","insert_item","item","newstr","dateFormat","date","format","undefined","Date","map","getFullYear","M","getMonth","getDate","H","getHours","getMinutes","s","getSeconds","Math","floor","getMilliseconds","reg","all","charString","char","count","number_format","decimals","dec_point","thousands_sep","roundtag","prec","k","isFinite","abs","sep","dec","pow","console","log","toFixed","round","re","test","join","PrintFunctionsOfFormat","ParseEnumValue","realValue","disPlayValue","enumObject","Format8CharDateTime","dataString","FormatDateTime","datetime","FormatDateTimeStr","datestring","FormatDateTimeCN","isSimple","isDeleteZero","FormatYearCN","FormatMonthCN","FormatDayCN","FormatFloat","RemoveRepeatedJoiner","joiner","FormatPageIndexWithStartNumber","page","start","PrintFunctionsOfConvert","ConvertStringToBigDecimal","ConvertDoubleToBigDecimal","SubStringMoney","position","isZeroShow","SubDoubleMoney","CloudprintFunctionRegister","http","httpoptions","SessionId","Content-Type","initCustomFunction","configUrl","_this","funcs","funcFormat","funcConvert","Stimulsoft","Report","Dictionary","StiFunctions","getFunctions","func","addFunction","get","toPromise","data","addJsFuncPlugins","allFuncs","window","key","f2","sub","Subject","complete","loader","import","path","Injectable","HttpClient","Config","PRINT_SU","Urls","CloudPrintBaseUrl","CloudPrintDimensionUrl","CloudPrintDeviceUrl","GetPrintFormatByDataSrouceId","GetPrintFormatByDataSrouceAndDimension","GetPrintFormatAndDevice","GetPrintDevice","SavePrintFormat","SavePrintFormatWithRes","DeletePrintFormat","GetDataSourceByBOId","CreatePrintFormatWithBE","CreatePrintFormatWithVO","CreatePrintFormatWithBO","CreatePrintFormatWithSchema","LoadPrintFormatById","LoadNewSourcePrintFormatById","LoadNewSourcePrintFormatByIdAndLang","LoadPrintData","GetDesigerHtml","GetCustomJsFunc","PrintSingleById","PrintSingleByFilter","PrintMultiById","PrintMultiByFilter","PrintSingleBOData","PrintTestData","SendPrintEvent","PrintAttachment","IsRemotePrint","GetEnableFonts","PrintFormat","nameMap","DataValidator","checkForEmptyString","obj","Error","checkForNullReference","checkFlag","flag","checkAppUrl","url","PrintFormatService","httpClient","printEntity","curSu","createPrintFormatWithBE","beId","appUrl","sessionId","createPrintFormatWithVO","voId","createPrintFormatWithBO","biznessObjectClassInfo","getDataSourceByBOId","boId","getFormatBySourceId","dataSourceId","ret","getPrintFormatByDataSrouceAndDimension","billCategoryId","sourceId","firstDimension","secondDimension","getPrintFormatAndDevice","post","getPrintDevice","getFormatByFormatId","formatId","getNewSourceFormatByFormatId","getNewSourceFormatByFormatIdAndLang","lang","save","saveWithRes","remove","loadFormat","reportID","alert","printFormat","content","loadData","dataIds","data2","printSingleById","beOptions","options","su","BEOptions","Options","responseType","ServiceUnit","getSuByFormatId","FormatId","sucode","printSingleByFilter","printMultiById","beOptionsList","sourceOptionsList","printMultiByFilter","sourceFilterOptionsList","printTestData","formats","datas","JSON","stringify","sendPrintEvent","isRemotePrint","_a","getEnableFonts","CloudprintdesignerService","Utils","isPC","navigator","userAgent","match","uuid","gen","renderPdfByByte","rendedFormat","ele","lock_1","setInterval","document","getElementById","filebtn","contentWindow","printbtn","downbtn","file","down","print_1","style","display","clearInterval","binaryData","Uint8Array","URL","createObjectURL","Blob","type","innerHTML","encodeURIComponent","hidden","out","random","CloudprintDesignerComponent","server","formatSrv","notifyService","functionRegister","editsrv","loadSrv","Base","StiLicense","isUseMetaData","ngOnInit","docTitle","title","initDesigner","ngOnDestroy","emit","setPrintEntity","entity","setOptions","toolbar","showAboutButton","showFileMenuAbout","showFileMenuClose","showFileMenuExit","showFileMenuInfo","showFileMenuNew","showFileMenuOptions","showFileMenuReportSetup","showFileMenuSave","showPublishButton","showSaveButton","state","showSetupToolboxButton","appearance","showTooltipsHelp","fullScreenMode","isFullScreen","dictionary","dataSourcesPermissions","Designer","StiDesignerPermissions","ModifyView","resourcesPermissions","None","dataRelationsPermissions","dataColumnsPermissions","initEvents","self","designer","onSaveReport","temp","report","saveToJsonString","pages","parent","msg","Localization","StiLocalization","success","id","saved","catch","onPreviewReport","show","message","reader","FileReader","readAsArrayBuffer","onload","close","checkBeforeSave","isSave","components","fonts","fontsAll","forEach","element","copytemp","System","Drawing","FontFamily","_families","StiDesignerOptions","StiDesigner","StiReport","initLocalizations","loadDesigner","foramtId","loc","language","addLocalizationFile","cultureName","load","dataId","dataSet","Data","DataSet","readJson","databases","clear","regData","renderHtml","setOptionsAfterRend","height","designerHeight","jsObject","properties","reportFile","buttons","dictionaryActions","dictionaryNewItem","pageToolButton","insertToolButton","propertiesToolbarEventsTab","redoButton","undoButton","reportCheckerButton","localizationButton","resizeDesigner","workPanel","changeVisibleState","visibleState","viewer","viewerContainer","firstChild","controls","Zoom","ZoomOnePage","ZoomPageWidth","loadSystemFonts","Component","args","selector","template","NotifyService","LoadingService","CloudprintviewerService","CloudprintViewerComponent","langservice","elementRef","printSrv","initViewer","renderPdf","outputParam","prnOutputOps","printJob","prnSourceOptions","isFilter","printDirect","print","sourceopslist","billcate","biztype","source","entityfilter","dataid","isfilter","x","SourceId","EntityFilter","DataIds","bizTypeId","formatid","sourceid","billcategory","printBox","printMultiByFilter4Job","printMultiById4Job","printSingleByFilter4Job","printSingleById4Job","LanguageService","ElementRef","CloudprintService","decorators","Inject","forwardRef","Input","Viewer","OutputParam","BE","VO","BO","CO","FormatlistComponent","localeid","field","localepip","transform","selectChange","rowdata","checkBeforePrint","warning","LOCALE_ID","Form","Query","LedgerPaper","Attachment","Unknown","PrintSetting","Portrait","Landscape","PaperKind","FormatlistjobComponent","paperlist","layoutlist","isShowFormat","printType","width","top","bottom","left","right","copy","paperkind","layout","printboxid","isCustomPaper","isCustomMargin","custompaper","custommargin","printerSelectChange","boxId","ps","copys","paperName","centerPrint","PrintOritation","printOritation","printter","printSetting","LANG_RESOURCES","zh-CHS","printview","printformat","printdesigner","printset","printer","cancel","sendprintjob","appurlerror","formatcode","formatname","portrait","landscape","selectprinter","selectformat","selectlayout","noagent","nopapersize","paper","paperway","PrintWithoutPreview","PrintWithBox","en-US","en","zh-CHT","LocalLangPipe","localeId","defaultLang","langCode","localStorage","getItem","name","Pipe","resolver","designerSrv","viewerSrv","injector","applicationRef","appService","windowService","modalService","windowRef","BsModalService","localpipe","defineProperty","openFormatListByDimension","filter","that","FirstDimensionVal","SecondDimensionVal","outputBySingleSelectionFormat","beoptions","assign","isJob","printerName","printsetting","resolveComponentFactory","instance","dlg","showButtons","showMaxButton","text","cls","handle","subscribe","openFormatListByDimension4Job","isMulti","device","ids","boxlist","outputByMultiSelectionFormat","DeviceId","downloadFile","openRendedViewer","openDesigner","openDesignerInternal","openDesignerOnEle","openDesignerNewTab","openDesignerOnEleForRuntime","formatCode","formatName","bizObjectId","datasourceId","sourceType","initPrintFormat","code","isUseTemplate","dataSchema","printschema","createDesignerRef","appendChild","getComponentRootNode","designercomponentRef","param","prnFormat","prnData","prnFormatId","prnDataId","prnType","CmpType","openAppByOptions","appType","funcId","tabName","appId","appEntrance","tabId","entityParams","foramtParam","formatEntity","SourceType","factory","viewContainer","createComponent","attachView","hostView","destroy","detachView","sourceOptions","preViewLocal","preViewRemote","openRendedViewer4Attachment","prnRendedFormat","btoa","remotePrint","createViewerRef","viewercomponentRef","outputparam","cpRef","rootNodes","queryType","QueryType","PrintType","self_1","info","beFilteroptions","self_2","link","createElement","blob","setAttribute","visibility","click","removeChild","outputBEData","outputBEDataWithFilter","ComponentFactoryResolver","Injector","ApplicationRef","AppService","WindowService","ɵ0","CloudPrintModule","NgModule","imports","CommonModule","HttpClientModule","NotifyModule","WindowModule","FormsModule","GridModule","DialogModule","LoadingModule","forRoot","FarrisDialogModule","FarrisButtonModule","SplitterModule","DatagridModule","AngularDraggableModule","FarrisSectionModule","ModalModule","NumberSpinnerModule","ComboListModule","FarrisFormsModule","FResponseToolbarModule","declarations","entryComponents","NotifyContainerComponent","providers","provide","useValue","BaseSourceOptions","includeChildData","SourceFilterOptions","_super","tslib_1.__extends","SourceOptions","RetrieveParam","NodeSortInfos","SortConditions","CurrentData","TransactionalBuffer","Original","Asc","Desc","Pdf","Html5","OutputOptions","FileType","CloudprintInternalService","getPrintFormatByDataSrouceId","getFormatById","CloudPrintAttachmentService","printAttachment","attachmentoptions","printAttachmentJob","attachmentOptions","err","Message","PRINT","EXPORT"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { EventEmitter } from '@angular/core';\r\nimport { PrintFormat } from './printFormat';\r\nimport { SourceType } from './enums/sourceType';\r\n\r\nexport class PrintEntity {\r\n    /**\r\n     * æ¯å¦å¨å±æ¸²æ\r\n     * é»è®¤ï¼false\r\n     */\r\n    isFullScreen: boolean;\r\n    /**\r\n     * SessionID\r\n     */\r\n    sessionId: string;\r\n    /**\r\n     * ç¬¬ä¸æ¹åºç¨çåºå°å\r\n     * (é»è®¤GSPäºæå°åºå°å)\r\n     */\r\n    appUrl: string;\r\n    /**\r\n     * å½åè¯­è¨\r\n     */\r\n    language: string;\r\n    /**\r\n     * ä¸ä¸ªå¼å³ï¼æ¯å¦è®¾è®¡å¨å¤çä¿å­é»è¾\r\n     * é»è®¤ä¸º:false\r\n     */\r\n    isUseMetaData: boolean;\r\n    //#region æ ¼å¼ç¸å³\r\n    /**\r\n     * è®¾è®¡å¨çé«åº¦\r\n     */\r\n    designerHeight: string;\r\n    /**\r\n     * æ ¼å¼id\r\n     */\r\n    foramtId: string;\r\n    /**\r\n     * æ¥è¡¨æ ¼å¼(è®¾è®¡æ¶)\r\n     */\r\n    format: string;\r\n    /**\r\n     * æ°æ®Id\r\n     */\r\n    dataId: string;\r\n    /**\r\n     * æ¥è¡¨æ°æ®\r\n     */\r\n    data: any;\r\n    /**\r\n     * schemaçç±»åï¼\r\n     *  BE\r\n     *  vo\r\n     *  BO\r\n     *  co\r\n     */\r\n    schemaType: SourceType;\r\n\r\n    printFormat: PrintFormat;\r\n\r\n    downLoadFileName='PrintReport'\r\n\r\n    //0ç¼è¾ï¼1æ¥ç\r\n    state:any;\r\n    \r\n    /**\r\n     * å·²ç»æ¸²ææå½¢çæ¥è¡¨æ ¼å¼(è¿è¡æ¶)\r\n     */\r\n    rendedFormat: any;\r\n\r\n    /**\r\n     * ä¿å­åäºä»¶\r\n     */\r\n    onSaveReportEvent: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * éåºåäºä»¶\r\n     * å¯ç¨äºéæ¯èµæº\r\n     */\r\n    onExitEvent: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * ä¿å­æåä¹åçidäºä»¶\r\n     */\r\n    onGetPrintFormatIdEvent: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    /**\r\n     * ä¿å­æååçäºä»¶\r\n     */\r\n    onSavedReportEvent: EventEmitter<any> = new EventEmitter<any>();\r\n}\r\n","// å¼å¥Stimulsoftçjsåº\r\ndeclare var Stimulsoft;\r\n\r\n/**\r\n * äºæå°åç½®çå½æ°\r\n */\r\nexport class PrintFunctionsOfFiltervalue {\r\n    // /**\r\n    //  * æ³¨æï¼\r\n    //  * 1.ArgsTypeçç±»ååºè¯¥ä¸ºJavaScriptçç±»åèä¸æ¯stimulsoftçç±»å( è¿éä¼è¢«å®æ¹ææ¡£å¹²æ° )\r\n    //  * 2.æ°æ®æºçä¼ éï¼ç´æ¥å¨åæ°ä¸äºä¸tableåå°±è¡äºã\r\n    //  */\r\n\r\n    // /**\r\n    //  * åé¡µå½æ°\r\n    //  */\r\n    // Pagination = {\r\n    //     Category : \"GSPBuildInFunc\",\r\n    //     GroupFunctionName : \"FilterData\",\r\n    //     FunctionName : \"Pagination\",\r\n    //     Description : \"åé¡µ\",\r\n    //     TypeOfFunction : \"void\",\r\n    //     ReturnType : 'void',\r\n    //     ReturnDescription : \"æ°æ®å¼\",\r\n    //     ArgumentTypes : [Object,Number],\r\n    //     ArgumentNames : [ 'dataSource','pagesize'],\r\n    //     ArgumentDescriptions : [ \"æ°æ®æº\", \"æ¯é¡µè¡æ°\"],\r\n    //     Function: function(dataSource,pagesize) {\r\n    //         const pos = dataSource.position+1;\r\n    //         // æ¢é¡µ\r\n    //         if (pos % pagesize === 0 && pos !== 0) {\r\n    //             dataSource.dictionary.report.engine.newPage();\r\n    //         }\r\n    //     },\r\n    // };\r\n\r\n\r\n    /**\r\n     * è·åæå®æ°æ®æºä¸­æå®è¡åæå®åçå¼\r\n     */\r\n    GetValue = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'FilterData',\r\n        FunctionName : 'GetValue',\r\n        Description : 'è·åæå®æ°æ®æºä¸­æå®è¡åæå®åçå¼',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'æ°æ®å¼',\r\n        ArgumentTypes : [Object, Number, Number],\r\n        ArgumentNames : [ 'dataSource', 'row', 'col'],\r\n        ArgumentDescriptions : [ 'æ°æ®æº', 'æ¯é¡µè¡æ°'],\r\n        Function: function(dataSource, row, col) {\r\n            const table = dataSource.dataTable;\r\n            if (table == null) {\r\n                return '';\r\n            }\r\n\r\n            const a = table.rows.list[row - 1].columns.list[col - 1].storage.values[row - 1];\r\n            return a;\r\n        },\r\n    };\r\n\r\n\r\n    /**\r\n     * è·åç¬¦åæ¡ä»¶çç®æ åçå¼\r\n     */\r\n    GetFilterValues = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'FilterData',\r\n        FunctionName : 'GetFilterValues',\r\n        Description : 'è·åç¬¦åæ¡ä»¶çç®æ åçå¼',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'æ°æ®å¼',\r\n        ArgumentTypes : [Object, String, String, String, Boolean],\r\n        ArgumentNames : [ 'dataSource', 'filterColumn', 'filterValue', 'targetColumnName', 'first'],\r\n        ArgumentDescriptions : [ 'æ°æ®æº', 'è¿æ»¤å', 'è¿æ»¤å¼ï¼å¿é¡»æ¯stirngï¼', 'ç®æ å', 'æ¯å¦è·åç¬¬ä¸ä¸ªç¬¦åæ¡ä»¶çå¼' ],\r\n        Function: function(dataSource: any, filterColumn: string, filterValue: any, targetColumnName: string, first: boolean) {\r\n            const table = dataSource.dataTable;\r\n            if (table == null) {\r\n                return '';\r\n            }\r\n            const colValues = table.columns.list.find((e) => e.columnName === filterColumn).storage.values;\r\n            const a = [];\r\n            for (let index = 0; index < colValues.length; index++) {\r\n                const element = colValues[index];\r\n                if (element === filterValue) {\r\n                    a.push(index);\r\n                    if (first) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let res = '';\r\n            const tmpIndex = a.pop();\r\n            if (tmpIndex >= 0) {\r\n                res += table.columns.list.find((e) => e.columnName === targetColumnName).storage.values[tmpIndex];\r\n                res += ';';\r\n            }\r\n\r\n            return res.substring(0, res.length - 2);\r\n        },\r\n    };\r\n\r\n\r\n}\r\n","/**\r\n * äºæå°å½æ°å·¥å·ç±»\r\n */\r\nexport class PrintFunctionUtils {\r\n\r\n\r\n    /**\r\n     * å°æ°å­è½¬ä¸ºæ±å­\r\n     * @param number æ°å¼\r\n     */\r\n    public static FormatToCurrencyNumber(number: number): string {\r\n\r\n        var result = PrintFunctionUtils.FormatToCurrencyNumberCN(number);\r\n        // æç±»ä¼¼ ãä¸åäºãä¸­çä¸å»æï¼æ¹ä¸ºãåäºã\r\n        if (result.startsWith('ä¸å')) {\r\n            result = result.substring(1);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * å°æ°å­è½¬æ¢ä¸ºæ±å­\r\n     * @param number æ°å¼\r\n     */\r\n    public static FormatToCurrencyNumberCN(number: number): string {\r\n        var res = PrintFunctionUtils.ConvertCurrency(number);\r\n        var result = res;\r\n\r\n        result = result.replace(new RegExp(\"å£¹\",\"gm\"), \"ä¸\");\r\n        result = result.replace(new RegExp(\"è´°\",\"gm\"), \"äº\");\r\n        result = result.replace(new RegExp(\"å\",\"gm\"), \"ä¸\");\r\n        result = result.replace(new RegExp(\"è\",\"gm\"), \"å\");\r\n        result = result.replace(new RegExp(\"ä¼\",\"gm\"), \"äº\");\r\n        result = result.replace(new RegExp(\"é\",\"gm\"), \"å­\");\r\n        result = result.replace(new RegExp(\"æ\",\"gm\"), \"ä¸\");\r\n        result = result.replace(new RegExp(\"æ\",\"gm\"), \"å«\");\r\n        result = result.replace(new RegExp(\"ç\",\"gm\"), \"ä¹\");\r\n        result = result.replace(new RegExp(\"æ¾\",\"gm\"), \"å\");\r\n        result = result.replace(new RegExp(\"ä½°\",\"gm\"), \"ç¾\");\r\n        result = result.replace(new RegExp(\"ä»\",\"gm\"), \"å\");\r\n\r\n        result = result.replace(\"å\", \"ç¹\");\r\n        result = result.replace(\"è§\", \"\");\r\n        result = result.replace(\"å\", \"\");\r\n        result = result.replace(\"æ´\", \"\");\r\n\r\n        if (result[result.length - 1] == 'ç¹') \r\n        {\r\n            result = result.substring(0, result.length-1);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static ConvertCurrency(money) {\r\n        //æ±å­çæ°å­\r\n        var cnNums = new Array('é¶', 'å£¹', 'è´°', 'å', 'è', 'ä¼', 'é', 'æ', 'æ', 'ç');\r\n        //åºæ¬åä½\r\n        var cnIntRadice = new Array('', 'æ¾', 'ä½°', 'ä»');\r\n        //å¯¹åºæ´æ°é¨åæ©å±åä½\r\n        var cnIntUnits = new Array('', 'ä¸', 'äº¿', 'å');\r\n        //å¯¹åºå°æ°é¨ååä½\r\n        var cnDecUnits = new Array('è§', 'å', 'æ¯«', 'å');\r\n        //æ´æ°éé¢æ¶åé¢è·çå­ç¬¦\r\n        var cnInteger = 'æ´';\r\n        //æ´åå®ä»¥åçåä½\r\n        var cnIntLast = 'å';\r\n        //æå¤§å¤ççæ°å­\r\n        var maxNum = 999999999999999.9999;\r\n        //éé¢æ´æ°é¨å\r\n        var integerNum;\r\n        //éé¢å°æ°é¨å\r\n        var decimalNum;\r\n        //è¾åºçä¸­æéé¢å­ç¬¦ä¸²\r\n        var chineseStr = '';\r\n        //åç¦»éé¢åç¨çæ°ç»ï¼é¢å®ä¹\r\n        var parts;\r\n        if (money == '') { return ''; }\r\n        money = parseFloat(money);\r\n        if (money >= maxNum) {\r\n          //è¶åºæå¤§å¤çæ°å­\r\n          return '';\r\n        }\r\n        if (money == 0) {\r\n          chineseStr = cnNums[0] + cnIntLast + cnInteger;\r\n          return chineseStr;\r\n        }\r\n        //è½¬æ¢ä¸ºå­ç¬¦ä¸²\r\n        money = money.toString();\r\n        if (money.indexOf('.') == -1) {\r\n          integerNum = money;\r\n          decimalNum = '';\r\n        } else {\r\n          parts = money.split('.');\r\n          integerNum = parts[0];\r\n          decimalNum = parts[1].substr(0, 4);\r\n        }\r\n        //è·åæ´åé¨åè½¬æ¢\r\n        if (parseInt(integerNum, 10) > 0) {\r\n          var zeroCount = 0;\r\n          var IntLen = integerNum.length;\r\n          for (var i = 0; i < IntLen; i++) {\r\n            var n = integerNum.substr(i, 1);\r\n            var p = IntLen - i - 1;\r\n            var q = p / 4;\r\n            var m = p % 4;\r\n            if (n == '0') {\r\n              zeroCount++;\r\n            } else {\r\n              if (zeroCount > 0) {\r\n                chineseStr += cnNums[0];\r\n              }\r\n              //å½é¶\r\n              zeroCount = 0;\r\n              chineseStr += cnNums[parseInt(n)] + cnIntRadice[m];\r\n            }\r\n            if (m == 0 && zeroCount < 4) {\r\n              chineseStr += cnIntUnits[q];\r\n            }\r\n          }\r\n          chineseStr += cnIntLast;\r\n        }\r\n        //å°æ°é¨å\r\n        if (decimalNum != '') {\r\n          var decLen = decimalNum.length;\r\n          //å¤çå°å\r\n          if (decLen > 2) \r\n          {\r\n              decLen = 2;\r\n          }\r\n          for (var i = 0; i < decLen; i++) {\r\n            var n = decimalNum.substr(i, 1);\r\n            if (n != '0') {\r\n              chineseStr += cnNums[Number(n)] + cnDecUnits[i];\r\n            }\r\n          }\r\n        }\r\n        if (chineseStr == '') {\r\n          chineseStr += cnNums[0] + cnIntLast + cnInteger;\r\n        } else if (decimalNum == '') {\r\n          chineseStr += cnInteger;\r\n        }\r\n        return chineseStr;\r\n    }\r\n\r\n    /**\r\n     * å°æ°å¼æ ¼å¼åä¸ºä¸­æå¤§åè´§å¸éé¢ï¼å½¢å¦ãå£¹æ¾ä¸æä»åé¶ä¼è§ååã\r\n     */\r\n    public static FormatToCurrencyCN(money: number) {\r\n        return PrintFunctionUtils.ConvertCurrency(money);\r\n    }\r\n\r\n    public static FormatToCurrency(money: number){\r\n        let str = this.FormatToCurrencyCN(money);\r\n        str = str.replace('é¶','');\r\n        return str;\r\n    }\r\n\r\n\r\n    private static insert_item(str, item, index) {\r\n        // åå§åä¸ä¸ªç©ºå­ç¬¦ä¸²\r\n        let newstr = '';\r\n        const tmp = str.substring(0, index);\r\n        const estr = str.substring(index, str.length);\r\n        newstr += tmp + item + estr;\r\n        return newstr;\r\n    }\r\n\r\n    /**\r\n    * å¯¹æ¥æè¿è¡æ ¼å¼åï¼ åC#å¤§è´ä¸è´ é»è®¤yyyy-MM-dd HH:mm:ss\r\n    * å¯ä¸å¸¦åæ° ä¸ä¸ªæ¥æåæ° æä¸ä¸ªæ ¼å¼ååæ°\r\n    * @param date è¦æ ¼å¼åçæ¥æ \r\n    * @param format è¿è¡æ ¼å¼åçæ¨¡å¼å­ç¬¦ä¸²\r\n    *     æ¯æçæ¨¡å¼å­æ¯æï¼ \r\n    *     y:å¹´, \r\n    *     M:å¹´ä¸­çæä»½(1-12), \r\n    *     d:æä»½ä¸­çå¤©(1-31), \r\n    *     H:å°æ¶(0-23), \r\n    *     h:å°æ¶(0-11), \r\n    *     m:å(0-59), \r\n    *     s:ç§(0-59), \r\n    *     f:æ¯«ç§(0-999),\r\n    *     q:å­£åº¦(1-4)\r\n    * @return String\r\n    * @author adswads@gmail.com\r\n    */\r\n    public static dateFormat(date?: any, format?: string): string {\r\n        // æ åæ°\r\n        if (date === undefined && format === undefined) {\r\n            date = new Date();\r\n            format = 'yyyy-MM-dd HH:mm:ss';\r\n        } else if (typeof (date) === 'string') {// æ æ¥æ\r\n            format = date;\r\n            date = new Date();\r\n        } else if (format === undefined) {// æ æ ¼å¼ååæ°\r\n            format = 'yyyy-MM-dd HH:mm:ss';\r\n        } else { }// æ²¡æåéç¬¦çç¹æ®å¤ç\r\n\r\n        const map = {\r\n            y: date.getFullYear() + '', // å¹´ä»½\r\n            M: date.getMonth() + 1 + '', // æä»½\r\n            d: date.getDate() + '', // æ¥\r\n            H: date.getHours(), // å°æ¶ 24\r\n            m: date.getMinutes() + '', // å\r\n            s: date.getSeconds() + '', // ç§\r\n            q: Math.floor((date.getMonth() + 3) / 3) + '', // å­£åº¦\r\n            f: date.getMilliseconds() + '' // æ¯«ç§\r\n        };\r\n        // å°æ¶ 12\r\n        if (map['H'] > 12) { map['h'] = map['H'] - 12 + ''; } else { map['h'] = map['H'] + ''; }\r\n        map['H'] += '';\r\n\r\n        const reg = 'yMdHhmsqf';\r\n        let all = '', str = '';\r\n        for (let i = 0, n = 0; i < reg.length; i++) {\r\n            n = format.indexOf(reg[i]);\r\n            if (n < 0) { continue; }\r\n            all = '';\r\n            for (; n < format.length; n++) {\r\n                if (format[n] !== reg[i]) {\r\n                    break;\r\n                }\r\n                all += reg[i];\r\n            }\r\n            if (all.length > 0) {\r\n                if (all.length === map[reg[i]].length) {\r\n                    str = map[reg[i]];\r\n                } else if (all.length > map[reg[i]].length) {\r\n                    if (reg[i] === 'f') {\r\n                        str = map[reg[i]] + this.charString('0', all.length - map[reg[i]].length);\r\n                    }  else {\r\n                        str = this.charString('0', all.length - map[reg[i]].length) + map[reg[i]];\r\n                    }\r\n                } else {\r\n                    switch (reg[i]) {\r\n                        case 'y': str = map[reg[i]].substr(map[reg[i]].length - all.length); break;\r\n                        case 'f': str = map[reg[i]].substr(0, all.length); break;\r\n                        default: str = map[reg[i]]; break;\r\n                    }\r\n                }\r\n                format = format.replace(all, str);\r\n            }\r\n        }\r\n        return format;\r\n    }\r\n\r\n    /**\r\n    * è¿åå­ç¬¦ä¸² ä¸ºnä¸ªcharææ\r\n    * @param char éå¤çå­ç¬¦\r\n    * @param count æ¬¡æ°\r\n    * @return String\r\n    * @author adswads@gmail.com\r\n    */\r\n   private static charString(char: string, count: number): string {\r\n        let str = '';\r\n        while (count--) {\r\n            str += char;\r\n        }\r\n        return str;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * æ ¼å¼åæ°å­\r\n     * @param  number  [è¦æ ¼å¼åçæ°å­]\r\n     * @param  decimals         [ä¿çå ä½å°æ°]\r\n     * @param  dec_point        [å°æ°ç¹ç¬¦å·]\r\n     * @param  thousands_sep    [ååä½ç¬¦å·]\r\n     * @param  roundtag         [èå¥åæ°ï¼é»è®¤ \"ceil\" åä¸å,\"floor\"åä¸å,\"round\" åèäºå¥]\r\n     * @return  æ ¼å¼ååçç»æ\r\n     */\r\n    private static  number_format(number, decimals, dec_point, thousands_sep, roundtag) {\r\n        number = (number + '').replace(/[^0-9+-Ee.]/g, '');\r\n        roundtag = roundtag || 'ceil'; // \"ceil\",\"floor\",\"round\"\r\n        let n = !isFinite(+number) ? 0 : +number,\r\n            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n            sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,\r\n            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n            s = [],\r\n            toFixedFix = function (n, prec) {\r\n\r\n                const k = Math.pow(10, prec);\r\n                console.log();\r\n    \r\n                return '' + parseFloat(Math[roundtag](parseFloat((n * k).toFixed(prec * 2))).toFixed(prec * 2)) / k;\r\n            };\r\n        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\r\n        const re = /(-?\\d+)(\\d{3})/;\r\n        while (re.test(s[0])) {\r\n            s[0] = s[0].replace(re, '$1' + sep + '$2');\r\n        }\r\n    \r\n        if ((s[1] || '').length < prec) {\r\n            s[1] = s[1] || '';\r\n            s[1] += new Array(prec - s[1].length + 1).join('0');\r\n        }\r\n        return s.join(dec);\r\n    }\r\n\r\n}\r\n","import { PrintFunctionUtils } from './cloudprint.function.utils';\r\n\r\n// å¼å¥Stimulsoftçjsåº\r\ndeclare var Stimulsoft;\r\n\r\n/**\r\n * äºæå°åç½®çå½æ°\r\n */\r\nexport class PrintFunctionsOfFormat {\r\n    /**\r\n     * æ³¨æï¼\r\n     * 1.ArgsTypeçç±»ååºè¯¥ä¸ºJavaScriptçç±»åèä¸æ¯stimulsoftçç±»å( è¿éä¼è¢«å®æ¹ææ¡£å¹²æ° )\r\n     * 2.æ°æ®æºçä¼ éï¼ç´æ¥å¨åæ°ä¸äºä¸tableåå°±è¡äºã\r\n     */\r\n\r\n\r\n    /**\r\n     * å°æä¸¾å¼è½¬æ¢ä¸ºæ¾ç¤ºå¼\r\n     */\r\n    ParseEnumValue = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Format', \r\n        FunctionName : 'ParseEnumValue',\r\n        Description : 'å°æä¸¾å¼è½¬æ¢ä¸ºæ¾ç¤ºå¼',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'æ¾ç¤ºå¼',\r\n        ArgumentTypes : [String, String, Object],\r\n        ArgumentNames : [ 'realValue', 'disPlayValue', 'enumObject'],\r\n        ArgumentDescriptions : [  'æä¸¾å¼(0/1/2)', 'æ¾ç¤ºå¼(ä¸­/è±/æ³)', 'æä¸¾å®ä¾'],\r\n        Function: function(realValue: string, disPlayValue: string, enumObject: any) {\r\n            // const real = realValue.split('/');\r\n            // const disPlay = disPlayValue.split('/');\r\n\r\n            // if (real.length === disPlay.length) {\r\n            //     const enumIntValue = enumObject.toString();\r\n            //     const index = real.findIndex(x => x === enumIntValue);\r\n\r\n            //     if (index > -1) {\r\n            //         return disPlay[index];\r\n            //     }\r\n            // }\r\n\r\n            // return '';\r\n        },\r\n    };\r\n\r\n\r\n    /**\r\n     * å°8ä½å­ç¬¦ä¸²å½¢å¼çæ¥æè½¬æ¢ä¸ºæå®æ ¼å¼çæ¥ææ ¼å¼\r\n     */\r\n    Format8CharDateTime = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Format',\r\n        FunctionName : 'Format8CharDateTime',\r\n        Description : 'å°8ä½å­ç¬¦ä¸²å½¢å¼çæ¥æè½¬æ¢ä¸ºæå®æ ¼å¼çæ¥ææ ¼å¼',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'æå®æ¥ææ ¼å¼çå­ç¬¦ä¸²',\r\n        ArgumentTypes : [String, String],\r\n        ArgumentNames : [ 'format', 'dataString'],\r\n        ArgumentDescriptions : [  'æä¸¾å¼(0/1/2)', 'æ¾ç¤ºå¼(ä¸­/è±/æ³)', 'æä¸¾å®ä¾'],\r\n        Function: function(format: string, dataString: string) {\r\n            // if (dataString.length !== 8) {\r\n            //     return dataString;\r\n            // }\r\n            // // tslint:disable-next-line:radix\r\n            // const year = parseInt(dataString.substring(0, 4));\r\n            // // tslint:disable-next-line:radix\r\n            // const mouth = parseInt(dataString.substring(4, 6));\r\n            // // tslint:disable-next-line:radix\r\n            // const day = parseInt(dataString.substring(6, 8));\r\n\r\n            // const dateTime = new Date();\r\n            // dateTime.setFullYear(year);\r\n            // /**\r\n            //  * Sets the month value in the Date object using local time.\r\n            //  * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\r\n            //  * @param date A numeric value representing the day of the month. If this value is not supplied, the value from a call to the getDate method is used.\r\n            // */\r\n            // dateTime.setMonth(mouth - 1);\r\n            // dateTime.setDate(day);\r\n\r\n            // return PrintFunctionUtils.dateFormat(dateTime, format);\r\n        },\r\n    };\r\n\r\n\r\n    /**\r\n     * å°8ä½å­ç¬¦ä¸²å½¢å¼çæ¥æè½¬æ¢ä¸ºæå®æ ¼å¼çæ¥ææ ¼å¼\r\n     */\r\n    FormatDateTime = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Format',\r\n        FunctionName : 'FormatDateTime',\r\n        Description : 'å°æ¥æè½¬æ¢ä¸ºæå®æ ¼å¼çæ¥ææ ¼å¼',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'æå®æ¥ææ ¼å¼çå­ç¬¦ä¸²',\r\n        ArgumentTypes : [String, Object],\r\n        ArgumentNames : [ 'format', 'datetime'],\r\n        ArgumentDescriptions : [  'æ ¼å¼', 'æ¥æ(DateTimeç±»å)'],\r\n        Function: function(format: string, datetime: any) {\r\n            // if (typeof (date) === 'string') {\r\n\r\n            //     const year = parseInt(date.substring(0, 4));\r\n            //     const mouth = parseInt(date.substring(5, 7));\r\n            //     const day = parseInt(date.substring(8, 10));\r\n            //     const dateTime = new Date();\r\n            //     dateTime.setFullYear(year);\r\n            //     /**\r\n            //      * Sets the month value in the Date object using local time.\r\n            //      * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\r\n            //      * @param date A numeric value representing the day of the month. If this value is not supplied, the value from a call to the getDate method is used.\r\n            //     */\r\n            //     dateTime.setMonth(mouth - 1);\r\n            //     dateTime.setDate(day);\r\n            //     return PrintFunctionUtils.dateFormat(dateTime, format);\r\n            // } else {\r\n            //     const year = date.year;\r\n            //     const mouth = date.month;\r\n            //     const day = date.day;\r\n            //     const dateTime = new Date();\r\n            //     dateTime.setFullYear(year);\r\n            //     /**\r\n            //      * Sets the month value in the Date object using local time.\r\n            //      * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\r\n            //      * @param date A numeric value representing the day of the month. If this value is not supplied, the value from a call to the getDate method is used.\r\n            //     */\r\n            //     dateTime.setMonth(mouth - 1);\r\n            //     dateTime.setDate(day);\r\n            //     return PrintFunctionUtils.dateFormat(dateTime, format);\r\n            // }\r\n        },\r\n    };\r\n\r\n    /**\r\n     * å°å­ç¬¦ä¸²å½¢å¼çæ¥æè½¬æ¢ä¸ºæå®æ ¼å¼çæ¥ææ ¼å¼\r\n     */\r\n    FormatDateTimeStr = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Format',\r\n        FunctionName : 'FormatDateTimeStr',\r\n        Description : 'å°æ¥æå­ç¬¦ä¸²è½¬æ¢ä¸ºæå®æ ¼å¼çæ¥ææ ¼å¼',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'æå®æ¥ææ ¼å¼çå­ç¬¦ä¸²',\r\n        ArgumentTypes : [String, String],\r\n        ArgumentNames : [ 'format', 'datestring'],\r\n        ArgumentDescriptions : [  'æ ¼å¼', 'æ¥æå­ç¬¦ä¸²)'],\r\n        Function: function(format: string, datestring: string) {\r\n\r\n            // const year = parseInt(date.substring(0, 4));\r\n            // const mouth = parseInt(date.substring(5, 7));\r\n            // const day = parseInt(date.substring(8, 10));\r\n            // const dateTime = new Date();\r\n            // dateTime.setFullYear(year);\r\n            // /**\r\n            //  * Sets the month value in the Date object using local time.\r\n            //  * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\r\n            //  * @param date A numeric value representing the day of the month. If this value is not supplied, the value from a call to the getDate method is used.\r\n            // */\r\n            // dateTime.setMonth(mouth - 1);\r\n            // dateTime.setDate(day);\r\n            // return PrintFunctionUtils.dateFormat(dateTime, format);\r\n        },\r\n    };\r\n\r\n    FormatDateTimeCN = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Format',\r\n        FunctionName : 'FormatDateTimeCN',\r\n        Description : 'å°æ°å­æ¥æè½¬æ¢ä¸ºæ±å­æ¥æ',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'æ±å­æ¥æ',\r\n        ArgumentTypes : [Object, Boolean,Boolean],\r\n        ArgumentNames : [ 'datetime', 'isSimple','isDeleteZero'],\r\n        ArgumentDescriptions : [  'æ¥æ(DateTimeç±»å)', 'æ¯å¦ç®ä½æ±å­','æ¯å¦å»é¤é¶'],\r\n        Function: function(datetime,isSimple,isDeleteZero) {\r\n        },\r\n    };\r\n\r\n    // FormatDateTimeStrCN = {\r\n    //     Category : 'IGixFucs',\r\n    //     GroupFunctionName : 'Format',\r\n    //     FunctionName : 'FormatDateTimeStrCN',\r\n    //     Description : 'å°æ°å­æ¥æå­ç¬¦è½¬æ¢ä¸ºæ±å­æ¥æ',\r\n    //     TypeOfFunction : 'void',\r\n    //     ReturnType : String,\r\n    //     ReturnDescription : 'æ±å­æ¥æ',\r\n    //     ArgumentTypes : [String, Boolean,Boolean],\r\n    //     ArgumentNames : [ 'datestring', 'isSimple','isDeleteZero'],\r\n    //     ArgumentDescriptions : [  'æ¥æå­ç¬¦ä¸²ï¼yyyy-MM-ddï¼', 'æ¯å¦ç®ä½æ±å­','æ¯å¦å»é¤é¶'],\r\n    //     Function: function(datestring: string, isSimple: Boolean,isDeleteZero: Boolean) {\r\n    //     },\r\n    // };\r\n\r\n    FormatYearCN = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Format',\r\n        FunctionName : 'FormatYearCN',\r\n        Description : 'å°æ°å­æ¥æè½¬æ¢ä¸ºæ±å­å¹´',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'æ±å­å¹´',\r\n        ArgumentTypes : [Object, Boolean],\r\n        ArgumentNames : [ 'datetime', 'isSimple'],\r\n        ArgumentDescriptions : [  'æ¥æ(DateTimeç±»å)', 'æ¯å¦ç®ä½æ±å­'],\r\n        Function: function(datetime,isSimple) {\r\n        },\r\n    };\r\n\r\n    FormatMonthCN = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Format',\r\n        FunctionName : 'FormatMonthCN',\r\n        Description : 'å°æ°å­æ¥æè½¬æ¢ä¸ºæ±å­æ',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'æ±å­æ',\r\n        ArgumentTypes : [Object, Boolean,Boolean],\r\n        ArgumentNames : [ 'datetime', 'isSimple','isDeleteZero'],\r\n        ArgumentDescriptions : [  'æ¥æ(DateTimeç±»å)', 'æ¯å¦ç®ä½æ±å­','æ¯å¦å»é¤é¶'],\r\n        Function: function(datetime,isSimple,isDeleteZero) {\r\n        },\r\n    };\r\n\r\n    FormatDayCN = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Format',\r\n        FunctionName : 'FormatDayCN',\r\n        Description : 'å°æ°å­æ¥æè½¬æ¢ä¸ºæ±å­æ¥',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'æ±å­æ¥',\r\n        ArgumentTypes : [Object, Boolean,Boolean],\r\n        ArgumentNames : [ 'datetime', 'isSimple','isDeleteZero'],\r\n        ArgumentDescriptions : [  'æ¥æ(DateTimeç±»å)', 'æ¯å¦ç®ä½æ±å­','æ¯å¦å»é¤é¶'],\r\n        Function: function(datetime,isSimple,isDeleteZero) {\r\n        },\r\n    };\r\n\r\n    /**\r\n     * å°é¿æä¼¯æ°å­è½¬æ¢ä¸ºæ±å­\r\n     */\r\n    FormatToCurrencyNumber = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Format',\r\n        FunctionName : 'FormatToCurrencyNumber',\r\n        Description : 'å°æ°å¼æ ¼å¼åä¸ºå¤§åä¸­æï¼æ¯å¦å°12.38æ ¼å¼åä¸ºãåäºç¹ä¸å«ã',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'å¤§åä¸­ææ°å­',\r\n        ArgumentTypes : [Number],\r\n        ArgumentNames : [ 'number'],\r\n        ArgumentDescriptions : ['æ°å¼'],\r\n        Function: PrintFunctionUtils.FormatToCurrencyNumber,\r\n    };\r\n\r\n\r\n    /**\r\n     * å°é¿æä¼¯æ°å­è½¬æ¢ä¸ºæ±å­\r\n     */\r\n    FormatToCurrencyNumberCN = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Format',\r\n        FunctionName : 'FormatToCurrencyNumberCN',\r\n        Description : 'å°æ°å¼æ ¼å¼åä¸ºå¤§åä¸­æéé¢æ°å¼ï¼æ¯å¦å°12.38æ ¼å¼åä¸ºãä¸åäºç¹ä¸å«ã',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'å¤§åä¸­ææ°å¼',\r\n        ArgumentTypes : [Number],\r\n        ArgumentNames : [ 'number'],\r\n        ArgumentDescriptions : ['æ°å¼'],\r\n        Function: PrintFunctionUtils.FormatToCurrencyNumberCN,\r\n    };\r\n\r\n\r\n    /**\r\n     * å°é¿æä¼¯æ°å­è½¬æ¢ä¸ºæ±å­\r\n     */\r\n    FormatToCurrencyCN = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Format',\r\n        FunctionName : 'FormatToCurrencyCN',\r\n        Description : 'å°æ°å¼æ ¼å¼åä¸ºä¸­æå¤§åè´§å¸éé¢',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'ä¸­æå¤§åè´§å¸éé¢',\r\n        ArgumentTypes : [Number],\r\n        ArgumentNames : [ 'money'],\r\n        ArgumentDescriptions : ['æ°å¼'],\r\n        Function: PrintFunctionUtils.FormatToCurrencyCN,\r\n    };\r\n\r\n    /**\r\n     * å°é¿æä¼¯æ°å­è½¬æ¢ä¸ºæ±å­\r\n     */\r\n    FormatToCurrency = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Format',\r\n        FunctionName : 'FormatToCurrency',\r\n        Description : 'å°æ°å¼æ ¼å¼åä¸ºä¸­æå¤§åè´§å¸éé¢',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'ä¸­æå¤§åè´§å¸éé¢',\r\n        ArgumentTypes : [Number],\r\n        ArgumentNames : [ 'money'],\r\n        ArgumentDescriptions : ['æ°å¼'],\r\n        Function: PrintFunctionUtils.FormatToCurrency,\r\n    };\r\n\r\n\r\n    /**\r\n     * å°é¿æä¼¯æ°å­è½¬æ¢ä¸ºæ±å­\r\n     */\r\n    FormatFloat = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Format', \r\n        FunctionName : 'FormatFloat',\r\n        Description : 'å°æµ®ç¹ç±»åè½¬åä¸ºæå®çæ ¼å¼æ¾ç¤º',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'æµ®ç¹åæ°å­ç»æ',\r\n        ArgumentTypes : [Number, String],\r\n        ArgumentNames : [ 'f', 'format'],\r\n        ArgumentDescriptions : ['æµ®ç¹åæ°å­', 'æ ¼å¼'],\r\n        Function: function(f: number, format: string) {\r\n            \r\n        },\r\n    };\r\n\r\n    /**\r\n     * å°è¿ç»­åºç°çè¿æ¥ç¬¦è½¬æ¢ä¸ºåä¸ªå­ç¬¦ï¼\r\n     * ä¾å¦å°12---32è½¬æ¢ä¸º12-32\r\n     */\r\n    RemoveRepeatedJoiner = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Format',\r\n        FunctionName : 'RemoveRepeatedJoiner',\r\n        Description : 'å°è¿ç»­åºç°çè¿æ¥ç¬¦è½¬æ¢ä¸ºåä¸ªå­ç¬¦ï¼ä¾å¦å°12---32è½¬æ¢ä¸º12-32',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'ææ¢åçå­ç¬¦ä¸²',\r\n        ArgumentTypes : [String, String],\r\n        ArgumentNames : [ 'joiner', 'str'],\r\n        ArgumentDescriptions : ['è¿æ¥ç¬¦', 'å­ç¬¦ä¸²'],\r\n        Function: function(joiner: string, str: string) {\r\n            // if (joiner.length > 1 && str.trim().length) {\r\n            //     return str;\r\n            // }\r\n\r\n            // joiner = joiner.substring(0, 1);\r\n\r\n            // const patten = '(' + joiner + ')+';\r\n            // const subStr = new RegExp(patten, 'g');\r\n            // let res = str.replace(subStr, joiner);\r\n\r\n            // if (res[0] === joiner) {\r\n            //     res = res.substr(1);\r\n            // }\r\n            // if (res[res.length - 1] === joiner) {\r\n            //     res = res.substr(0, res.length - 2);\r\n            // }\r\n            // return res;\r\n        },\r\n  \r\n    };\r\n\r\n    /**\r\n     * æ ¹æ®èµ·å§é¡µç è½¬åé¡µç \r\n     */\r\n    FormatPageIndexWithStartNumber = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Format',\r\n        FunctionName : 'FormatPageIndexWithStartNumber',\r\n        Description : 'æ ¹æ®èµ·å§é¡µç éæ°è®¡ç®é¡µç ï¼ä¾å¦ï¼èµ·å§é¡µç ä¸º10ï¼é£ç¬¬ä¸é¡µå°æ¾ç¤º10',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'è½¬ååçé¡µç ',\r\n        ArgumentTypes : [String, Number],\r\n        ArgumentNames : [ 'page', 'start'],\r\n        ArgumentDescriptions : ['å½åé¡µç (æ¥èªç³»ç»åé)', 'èµ·å§é¡µ'],\r\n        Function: function(page: string, start: number) {\r\n            // const newline = Number(page)+start;\r\n            // return newline;\r\n        },\r\n    }\r\n    \r\n    /**\r\n     * è¿åæå®keyçèµæºå¼\r\n     */\r\n    // L = {\r\n    //     Category : 'IGixFucs',\r\n    //     GroupFunctionName : 'Location',\r\n    //     FunctionName : 'L',\r\n    //     Description : 'æ¬å°å',\r\n    //     TypeOfFunction : 'void',\r\n    //     ReturnType : String,\r\n    //     ReturnDescription : 'è¿åæå®keyçèµæºå¼',\r\n    //     ArgumentTypes : [String, String],\r\n    //     ArgumentNames : [ 'resourceKey', 'defaultValue'],\r\n    //     ArgumentDescriptions : ['èµæºKey', 'defaultValue'],\r\n    //     Function: function(resourceKey: string, defaultValue: string) {\r\n    //         return defaultValue;\r\n    //     },\r\n    // };\r\n}\r\n\r\n\r\n","// å¼å¥Stimulsoftçjsåº\r\ndeclare var Stimulsoft;\r\n\r\n/**\r\n * äºæå°åç½®çå½æ°\r\n */\r\nexport class PrintFunctionsOfConvert {\r\n    \r\n    /**\r\n     * å°å­ç¬¦ä¸²è½¬åä¸ºBigDecimal\r\n     */\r\n    ConvertStringToBigDecimal = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Convert', \r\n        FunctionName : 'ConvertStringToBigDecimal',\r\n        Description : 'å°å­ç¬¦ä¸²è½¬åä¸ºBigDecimal',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'æ¾ç¤ºå¼',\r\n        ArgumentTypes : [String],\r\n        ArgumentNames : [ 'money'],\r\n        ArgumentDescriptions : ['éé¢å­ç¬¦ä¸²'],\r\n        Function: function(money:String) {\r\n            // const real = realValue.split('/');\r\n            // const disPlay = disPlayValue.split('/');\r\n\r\n            // if (real.length === disPlay.length) {\r\n            //     const enumIntValue = enumObject.toString();\r\n            //     const index = real.findIndex(x => x === enumIntValue);\r\n\r\n            //     if (index > -1) {\r\n            //         return disPlay[index];\r\n            //     }\r\n            // }\r\n\r\n            // return '';\r\n        },\r\n    };\r\n\r\n        \r\n    /**\r\n     * å°Doubleè½¬åä¸ºBigDecimal\r\n     */\r\n    ConvertDoubleToBigDecimal = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Convert', \r\n        FunctionName : 'ConvertDoubleToBigDecimal',\r\n        Description : 'å°Doubleè½¬åä¸ºBigDecimal',\r\n        TypeOfFunction : 'void',\r\n        ReturnType : String,\r\n        ReturnDescription : 'æ¾ç¤ºå¼',\r\n        ArgumentTypes : [Number],\r\n        ArgumentNames : [ 'money',],\r\n        ArgumentDescriptions : ['doubleç±»åçéé¢'],\r\n        Function: function(money:Number) {\r\n            // const real = realValue.split('/');\r\n            // const disPlay = disPlayValue.split('/');\r\n\r\n            // if (real.length === disPlay.length) {\r\n            //     const enumIntValue = enumObject.toString();\r\n            //     const index = real.findIndex(x => x === enumIntValue);\r\n\r\n            //     if (index > -1) {\r\n            //         return disPlay[index];\r\n            //     }\r\n            // }\r\n\r\n            // return '';\r\n        },\r\n    };\r\n\r\n    /**\r\n     * å°Doubleè½¬åä¸ºBigDecimal\r\n     */\r\n    SubStringMoney = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Convert', \r\n        FunctionName : 'SubStringMoney',\r\n        Description : 'æç§ä½ç½®æªåéé¢æ°å¼',\r\n        TypeOfFunction : 'string',\r\n        ReturnType : String,\r\n        ReturnDescription : 'æªåçéé¢ï¼ä¾å¦ï¼SubStringMoney(\"1232.32\",\"-1\")è¿å3ï¼',\r\n        ArgumentTypes : [Number,String,Boolean],\r\n        ArgumentNames : [ 'money','position','isZeroShow'],\r\n        ArgumentDescriptions : ['stringç±»åçéé¢','stringæªåçä½ç½®ï¼å°æ°ç¹å¾å·¦ä½ç½®æ¯1,2,3ä¾æ¬¡ç±»æ¨ï¼å¾å³æ¯-1,-2ä¾æ¬¡ç±»æ¨ï¼'],\r\n        Function: function(money:String,position: String,isZeroShow: boolean) {\r\n        },\r\n    };\r\n\r\n    /**\r\n     * å°Doubleè½¬åä¸ºBigDecimal\r\n     */\r\n    SubDoubleMoney = {\r\n        Category : 'IGixFucs',\r\n        GroupFunctionName : 'Convert', \r\n        FunctionName : 'SubDoubleMoney',\r\n        Description : 'æç§ä½ç½®æªåéé¢æ°å¼',\r\n        TypeOfFunction : 'string',\r\n        ReturnType : String,\r\n        ReturnDescription : 'æªåçéé¢ï¼ä¾å¦ï¼SubStringMoney(\"1232.32\",\"3\")è¿å2ï¼',\r\n        ArgumentTypes : [Number,String,Boolean],\r\n        ArgumentNames : [ 'money','position','isZeroShow'],\r\n        ArgumentDescriptions : ['doubleç±»åçéé¢','stringç±»åæªåçä½ç½®ï¼å°æ°ç¹å¾å·¦ä½ç½®æ¯1,2,3ä¾æ¬¡ç±»æ¨ï¼å¾å³æ¯-1,-2ä¾æ¬¡ç±»æ¨ï¼'],\r\n        Function: function(money:Number,position: String,isZeroShow: boolean) {\r\n        },\r\n    };\r\n}","import { Injectable } from '@angular/core';\r\nimport { PrintFunctionsOfFiltervalue } from './cloudprint.function.filtervalue';\r\nimport { PrintFunctionsOfFormat } from './cloudprint.function.format';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PrintFunctionsOfConvert } from './cloudprint.function.convert';\r\n\r\n\r\n// å¼å¥Stimulsoftçjsåº\r\ndeclare var Stimulsoft;\r\n\r\n@Injectable()\r\nexport class CloudprintFunctionRegister {\r\n\r\n  private httpoptions = {};\r\n\r\n  constructor(private http: HttpClient) { \r\n    this.httpoptions['headers'] = {\r\n      SessionId:'',\r\n      'Content-Type':'application/json'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * åå§åèªå®ä¹å½æ°\r\n   */\r\n  public initCustomFunction(configUrl) {\r\n\r\n    // åç½®å½æ°-æ°å¼è¿æ»¤\r\n    const funcs = new PrintFunctionsOfFiltervalue();\r\n    // åç½®å½æ°-æ ¼å¼å\r\n    const funcFormat = new PrintFunctionsOfFormat();\r\n    // åç½®å½æ°-æ ¼å¼å\r\n    const funcConvert = new PrintFunctionsOfConvert();\r\n\r\n    // è¿éé»è®¤çGSPåç½®å½æ°åç»ä¸ºGSP\r\n    if (Stimulsoft.Report.Dictionary.StiFunctions.getFunctions('IGixFucs').length === 0) {\r\n        // tslint:disable-next-line:forin\r\n        for (const f in funcs) {\r\n            const func = funcs[f];\r\n            Stimulsoft.Report.Dictionary.StiFunctions.addFunction(\r\n              func.Category,\r\n              func.GroupFunctionName,\r\n              func.FunctionName,\r\n              func.Description,\r\n              func.TypeOfFunction,\r\n              func.ReturnType,\r\n              func.ReturnDescription,\r\n              func.ArgumentTypes,\r\n              func.ArgumentNames,\r\n              func.ArgumentDescriptions,\r\n              func.Function\r\n              );\r\n        }\r\n\r\n        // tslint:disable-next-line:forin\r\n        for (const f in funcFormat) {\r\n          const func = funcFormat[f];\r\n          Stimulsoft.Report.Dictionary.StiFunctions.addFunction(\r\n            func.Category,\r\n            func.GroupFunctionName,\r\n            func.FunctionName,\r\n            func.Description,\r\n            func.TypeOfFunction,\r\n            func.ReturnType,\r\n            func.ReturnDescription,\r\n            func.ArgumentTypes,\r\n            func.ArgumentNames,\r\n            func.ArgumentDescriptions,\r\n            func.Function);\r\n        }\r\n\r\n        // tslint:disable-next-line:forin\r\n        for (const f in funcConvert) {\r\n          const func = funcConvert[f];\r\n          Stimulsoft.Report.Dictionary.StiFunctions.addFunction(\r\n            func.Category,\r\n            func.GroupFunctionName,\r\n            func.FunctionName,\r\n            func.Description,\r\n            func.TypeOfFunction,\r\n            func.ReturnType,\r\n            func.ReturnDescription,\r\n            func.ArgumentTypes,\r\n            func.ArgumentNames,\r\n            func.ArgumentDescriptions,\r\n            func.Function);\r\n        }\r\n    }\r\n\r\n\r\n    // èªå®ä¹å½æ°todo:æç»èªå®ä¹å½æ°ä»åå°åéç½®æä»¶éçè§£æ\r\n    return this.http.get(configUrl,this.httpoptions).toPromise()\r\n    .then((data:[]) => {\r\n      if(data && data.length>0){\r\n        return this.addJsFuncPlugins(-1, data)\r\n        .then(() => {\r\n          if (!data) {\r\n            return;\r\n          }\r\n          const allFuncs = [];\r\n          // tslint:disable-next-line:forin\r\n          if(data.length>0){\r\n            for (const i in data) {\r\n              allFuncs.push(window[(data[i] as any).key]);\r\n            }\r\n          }\r\n\r\n  \r\n          \r\n          if (Stimulsoft.Report.Dictionary.StiFunctions.getFunctions('CustomFucs').length === 0 && allFuncs.length>0) {\r\n            // tslint:disable-next-line:forin\r\n            for (const f in allFuncs) {\r\n                const item = allFuncs[f];\r\n                // tslint:disable-next-line:forin\r\n                for (const f2 in item) {\r\n                  const func = item[f2];\r\n                  Stimulsoft.Report.Dictionary.StiFunctions.addFunction(\r\n                    'CustomFucs',\r\n                    func.GroupFunctionName,\r\n                    func.FunctionName,\r\n                    func.Description,\r\n                    func.TypeOfFunction,\r\n                    func.ReturnType,\r\n                    func.ReturnDescription,\r\n                    func.ArgumentTypes,\r\n                    func.ArgumentNames,\r\n                    func.ArgumentDescriptions,\r\n                    func.Function);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  /**\r\n   * æ·»å jsä¸å¡å½æ°æä»¶\r\n   */\r\n  private addJsFuncPlugins(i, data) {\r\n    if (!data && data.length==0) {\r\n      const sub = new Subject<any>();\r\n      sub.complete(); // æ²¡æè¿å¥è¯toPromise()éçåå®¹ä¸è·\r\n      return sub.toPromise();\r\n    }\r\n\r\n    const loader = window['System'];\r\n    if (i < data.length - 1) {\r\n      i++;\r\n      this.addJsFuncPlugins(i, data);\r\n    }\r\n    return loader.import(data[i].path);\r\n  }\r\n\r\n}\r\n","export class Config{\r\n    public static PRINT_SU = 'Prt';\r\n}\r\n","import { Config } from '../entitys/config';\r\n\r\nexport const Urls = {\r\n    // ç¬¬ä¸æ¹åºç¨é½ç»ä¸èµ°èªå·±æå¡ç«¯è½¬è°\r\n    \r\n\r\n    /** äºæå°çåºå°å*/\r\n    CloudPrintBaseUrl: '/api/runtime/'+Config.PRINT_SU+'/v1.0/service',\r\n    CloudPrintDimensionUrl: '/api/runtime/'+Config.PRINT_SU+'/v1.0/demensionservice',\r\n    CloudPrintDeviceUrl: '/api/runtime/'+Config.PRINT_SU+'/v1.0/device',\r\n\r\n    /**æ ¹æ®æ°æ®æºè·åæ ¼å¼ */\r\n    GetPrintFormatByDataSrouceId : '/GetPrintFormatByDataSrouceId?',\r\n    \r\n    /**æ ¹æ®æ°æ®æºåç»´åº¦è·åæ ¼å¼*/\r\n    GetPrintFormatByDataSrouceAndDimension : '/GetPrintFormatByDataSrouceAndDimension?',\r\n\r\n    /**è·åæ ¼å¼åæå°è®¾å¤ */\r\n    GetPrintFormatAndDevice: '/getPrintFormatAndDevice?',\r\n    GetPrintDevice: '/getPrintDevice?',\r\n\r\n    /**ä¿å­æ ¼å¼ */\r\n    SavePrintFormat : '/SavePrintFormat',\r\n\r\n    /**ä¿å­æ ¼å¼ */\r\n    SavePrintFormatWithRes : '/savePrintFormatWithRes',\r\n\r\n    /**å é¤æå®ç»´åº¦ */\r\n    DeletePrintFormat : '/DeletePrintFormat',\r\n\r\n    /**è·åæå®ä¸å¡å¯¹è±¡ä¸çæå°æ°æ®æº */\r\n    GetDataSourceByBOId : '/GetDataSourceByBOId?',\r\n\r\n    CreatePrintFormatWithBE : '/CreatePrintFormatWithBE?',\r\n\r\n    CreatePrintFormatWithVO : '/CreatePrintFormatWithVO?',\r\n\r\n    CreatePrintFormatWithBO : '/CreatePrintFormatWithBO?',\r\n\r\n    CreatePrintFormatWithSchema: '/CreatePrintFormatWithSchema',\r\n    \r\n\r\n    /**å è½½å·²ææ ¼å¼API*/\r\n    LoadPrintFormatById: '/GetPrintFormatById?',\r\n\r\n    LoadNewSourcePrintFormatById:'/getNewSourcePrintFormatById?',\r\n\r\n    LoadNewSourcePrintFormatByIdAndLang:'/getNewSourcePrintFormatByIdAndLang?',\r\n\r\n    /**å è½½æå°æ°æ®API*/\r\n    LoadPrintData: '/GetPrintData?',\r\n\r\n    /**è·åè®¾è®¡å¨é¡µé¢*/\r\n    GetDesigerHtml: '/GetDesigerHtml',\r\n\r\n    /**è·åæ©å±çjsä¸å¡å½æ°*/\r\n    GetCustomJsFunc: '/GetCustomJsFunc',\r\n\r\n    /**æå°API*/\r\n    PrintSingleById: '/OutputBEData?',\r\n    PrintSingleByFilter: '/OutputBEDataWithFilter?',\r\n    PrintMultiById:'/printMultiById?',\r\n    PrintMultiByFilter:'/printMultiByFilter?',\r\n    PrintSingleBOData: '/OutputBOData?',\r\n    /** æå°æµè¯æ°æ®ï¼ç¨äºè®¾è®¡æ¶é¢è§ */\r\n    PrintTestData:'/printTestData?',\r\n    /** è§¦åæå°äºä»¶ */\r\n    SendPrintEvent:'/sendPrintEvent?',\r\n    PrintAttachment:'/printAttachment?',\r\n    IsRemotePrint:'/isRemotePrint?',\r\n    GetEnableFonts:'/fonts?'\r\n};\r\n","import { SourceType } from './enums/sourceType';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { SysOrgType } from './enums/sysorgtype';\r\n\r\nexport class PrintFormat{\r\n    constructor(){\r\n        this.nameMap = {};\r\n    }\r\n    //#region è¿é¨åæ¯è·åç«¯å®ä½ç±»å¯¹åºçå±æ§ï¼æä»¥é¦å­æ¯å¤§åäº\r\n    /** æå°åæ°æ®id */\r\n    id: string;\r\n    /** æå°åæ°æ®ç¼å· */\r\n    code: string;\r\n    /** æå°åæ°æ®åç§° */\r\n    name: string;\r\n    name_chs:string;\r\n    name_en:string;\r\n    /** å¤è¯­åç§°å¯¹è±¡ */\r\n    nameMap={};\r\n\r\n    /** ä¸å¡å¯¹è±¡id */\r\n    bizObjectId: string;\r\n    /** æ ¼å¼åå®¹ */\r\n    content: string;\r\n    /** æ°æ®æºId */\r\n    dataSourceId: string;\r\n    /** æ°æ®Schema */\r\n    dataSchema: any;\r\n\r\n    /** åå§åè¯­è¨ */\r\n    originLanguage: string;\r\n\r\n    /** è¯­è¨ */\r\n    language: string;\r\n\r\n    /** åå»ºäºº */\r\n    creator: string;\r\n\r\n    /** åå»ºæ¶é´ */\r\n    createdTime: Date;\r\n\r\n    /** æåä¿®æ¹äºº */\r\n    lastModifier: string;\r\n\r\n    /** æåä¿®æ¹æ¶é´ */\r\n    lastModifiedTime: Date;\r\n    /** å®ä½ç±»schemaæå¨çdll */\r\n    entityDll: string;\r\n    /** å®ä½ç±»schemaæå¨çclass */\r\n    entityClass: string;\r\n    //#endregion\r\n\r\n    // æ°æ®æºåæ°æ®å¯¹è±¡\r\n    sourceMetadata: any;\r\n    // æ¯å¦ä½¿ç¨æ¨¡æ¿\r\n    isUseTemplate: boolean;\r\n    /**\r\n     * æ°æ®æºç±»å\r\n     * BEï¼GSPBusinessEntity\r\n     * EF: EFCoreçå®ä½ç±»\r\n     * VOï¼GSPViewModel\r\n     */\r\n    sourceType: SourceType;\r\n\r\n    sysFormat: boolean;\r\n\r\n    sysOrgType: SysOrgType;\r\n\r\n    currentLanguage;\r\n\r\n    publicFormat: boolean;\r\n\r\n    billcategoryId:string;\r\n\r\n    /**\r\n     * ç»´åº¦åéid\r\n     */\r\n    distributeId: string;\r\n    /**\r\n     * ç»´åº¦ä¸\r\n     */\r\n    firstDimensionVal: string;\r\n\r\n    /**\r\n     * ç»´åº¦äº\r\n     */\r\n    secondDimensionVal: string;\r\n\r\n    // /**\r\n    //  * ä¿å­åäºä»¶\r\n    //  */\r\n    // onSaveReportEvent: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    // /**\r\n    //  * éåºåäºä»¶\r\n    //  * å¯ç¨äºéæ¯èµæº\r\n    //  */\r\n    // onExitEvent: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n}\r\n","export class DataValidator{\r\n\r\n    static checkForEmptyString(obj:String, s:String)\r\n    {\r\n        if(obj || obj.length===0)\r\n        {\r\n            throw new Error(s+'ä¸ºç©º');\r\n        }\r\n    }\r\n\r\n    static checkForNullReference(obj:Object, s:String)\r\n    {\r\n        if(obj == null)\r\n        {\r\n            throw new Error(s+'ä¸ºnull');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ¹æ³æ å¿ä½æ ¡éª\r\n     */\r\n    static checkFlag(flag: string) {\r\n        if (flag && flag === 'CloudPrint') {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ ¡éªappUrl\r\n     */\r\n    static checkAppUrl(url) {\r\n        if (!url) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { PrintFormat } from '../entitys/printFormat';\r\nimport { Urls } from '../utils/cloudprint.Urls';\r\nimport { PrintEntity } from '../entitys/printEntity';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Utils } from '../utils/cloudprint.utils';\r\nimport { Subject } from 'rxjs';\r\nimport { SourceOptions } from '../entitys/datasourceoptions/sourceOptions';\r\nimport { OutputOptions } from '../entitys/outputoptions/outputOptions';\r\nimport { SourceFilterOptions } from '../entitys/datasourceoptions/sourceFilterOptions';\r\nimport { BOOptions } from '../entitys/datasourceoptions/booptions';\r\nimport { Config } from '../entitys/config';\r\nimport { DataValidator } from '../utils/cloudprint.datavalidator';\r\nimport { BaseSourceOptions } from '../entitys/datasourceoptions/basesourceoptions';\r\n\r\n@Injectable()\r\nexport class PrintFormatService {\r\n\r\n    printEntity = new PrintEntity();\r\n\r\n    private curSu = Config.PRINT_SU;\r\n    \r\n    constructor(private httpClient: HttpClient) {\r\n    }\r\n\r\n    createPrintFormatWithBE(beId: string): Promise<any> {\r\n        const url = this.printEntity.appUrl + Urls.CreatePrintFormatWithBE+'beId='+ beId + '&su=' + this.curSu;\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n        return this.httpClient.get(url ,httpoptions).toPromise();\r\n    }\r\n\r\n    createPrintFormatWithVO(voId: string): Promise<any> {\r\n\r\n        const url = this.printEntity.appUrl + Urls.CreatePrintFormatWithVO+'voId=' + voId + '&su=' + this.curSu;\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n        return this.httpClient.get(url,httpoptions).toPromise();\r\n    }\r\n    \r\n\r\n    createPrintFormatWithBO(biznessObjectClassInfo: string): Promise<any> {\r\n\r\n        const url = this.printEntity.appUrl + Urls.CreatePrintFormatWithBO+'biznessObjectClassInfo=' + biznessObjectClassInfo + '&su=' + this.curSu;\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n        return this.httpClient.get(url,httpoptions).toPromise();\r\n    }\r\n    \r\n    \r\n    getDataSourceByBOId(boId: string): Promise<any>{\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n        const url = this.printEntity.appUrl + Urls.GetDataSourceByBOId;\r\n        return this.httpClient.get(url + 'boId=' +  boId + '&su='+this.curSu).toPromise();\r\n    }\r\n\r\n    getFormatBySourceId(dataSourceId:string) : Promise<any>{\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n        return this.httpClient.get(this.printEntity.appUrl + Urls.GetPrintFormatByDataSrouceId+'dataSrouceId=' + dataSourceId+'&su='+this.curSu,httpoptions)\r\n        .toPromise()\r\n        .then((ret) => {\r\n            return ret;\r\n        });\r\n    }\r\n\r\n    getPrintFormatByDataSrouceAndDimension(billCategoryId,sourceId,firstDimension,secondDimension) : Promise<any>{\r\n\r\n        firstDimension = firstDimension || '';\r\n        secondDimension = secondDimension || ''\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n        return this.httpClient.get(this.printEntity.appUrl + Urls.GetPrintFormatByDataSrouceAndDimension+'billCategoryId='+billCategoryId+'&sourceId='+sourceId+'&firstDimension='+firstDimension+'&secondDimension='+secondDimension+'&su='+this.curSu,httpoptions)\r\n        .toPromise()\r\n        .then((ret) => {\r\n            return ret;\r\n        });\r\n    }\r\n\r\n    getPrintFormatAndDevice(billCategoryId,sourceId,firstDimension,secondDimension) : Promise<any>{\r\n\r\n        firstDimension = firstDimension || '';\r\n        secondDimension = secondDimension || ''\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n        const data = {\r\n            billCategoryId:billCategoryId,\r\n            sourceId:sourceId,\r\n            firstDimension:firstDimension,\r\n            secondDimension:secondDimension\r\n        }\r\n        return this.httpClient.post(this.printEntity.appUrl + Urls.GetPrintFormatAndDevice+'su='+this.curSu, data,httpoptions)\r\n        .toPromise()\r\n        .then((ret) => {\r\n            return ret;\r\n        });\r\n    }\r\n\r\n    getPrintDevice() : Promise<any>{\r\n\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n\r\n        return this.httpClient.post(Urls.CloudPrintDeviceUrl + Urls.GetPrintDevice+'su='+this.curSu, null,httpoptions)\r\n        .toPromise()\r\n        .then((ret) => {\r\n            return ret;\r\n        });\r\n    }\r\n\r\n    getFormatByFormatId(formatId:string) : Promise<any>{\r\n        const url = this.printEntity.appUrl + Urls.LoadPrintFormatById+'metadataId=' + formatId+'&su='+this.curSu;\r\n        // LoadPrintFormatByIdæ¯ä¸ªGetè¯·æ±\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n        return this.httpClient.get(url,httpoptions).toPromise()\r\n        .then((data: any) => {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * æ ¹æ®å·²æçæ ¼å¼idåæ°æ®æºidï¼å®æ¶è·åæ°æ®æºç»æåç»ææ°çæ ¼å¼\r\n     */\r\n    getNewSourceFormatByFormatId(formatId:string): Promise<any> {\r\n        const url = Urls.CloudPrintBaseUrl + Urls.LoadNewSourcePrintFormatById;\r\n\r\n        return this.httpClient.get(url + 'formatId=' +  formatId).toPromise();\r\n    }\r\n\r\n    /**\r\n     * æ ¹æ®å·²æçæ ¼å¼idåæ°æ®æºid,è¯­è¨ï¼å®æ¶è·åæ°æ®æºç»æåç»ææ°çæ ¼å¼\r\n     */\r\n    getNewSourceFormatByFormatIdAndLang(formatId:string,lang:string): Promise<any> {\r\n        const url = Urls.CloudPrintBaseUrl + Urls.LoadNewSourcePrintFormatByIdAndLang;\r\n\r\n        return this.httpClient.get(url + 'formatId=' +  formatId +'&lang='+lang).toPromise();\r\n    }\r\n\r\n    save(data: PrintFormat) : Promise<any> {\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n        return this.httpClient.post(this.printEntity.appUrl + Urls.SavePrintFormat+'?su='+this.curSu, data,httpoptions)\r\n        .toPromise()\r\n        .then((ret) => {\r\n            return ret;\r\n        });\r\n    }\r\n\r\n    saveWithRes(data: PrintFormat) : Promise<any> {\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n        return this.httpClient.post(this.printEntity.appUrl + Urls.SavePrintFormatWithRes+'?su='+this.curSu, data,httpoptions)\r\n        .toPromise()\r\n        .then((ret) => {\r\n            return ret;\r\n        });\r\n    }\r\n\r\n    remove(data: string) {\r\n        // const body = { 'printFormatId':data};\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n        return this.httpClient.post(this.printEntity.appUrl + Urls.DeletePrintFormat+'/'+data+'?su='+this.curSu, null,httpoptions)\r\n        .toPromise()\r\n        .then((ret) => {\r\n            return ret;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * å è½½æ ¼å¼\r\n     * @param reportID id\r\n     */\r\n    loadFormat(reportID: string, flag: string): Promise<any> {\r\n        if (DataValidator.checkFlag(flag) === false) {\r\n            alert('åé¨æ¹æ³ï¼å¤é¨è¯·ä½¿ç¨cloudprint.serviceä¸çæå¡');\r\n            return null;\r\n        }\r\n        /**\r\n         * å¯¹äºGSåé¨éæï¼åå¤å±å¶å®å·²ç»ç»this.printEntity.formatèµå¼äº\r\n         */\r\n        if (this.printEntity.format) {\r\n            const sub = new Subject<any>();\r\n            sub.complete(); // æ²¡æè¿å¥è¯toPromise()éçåå®¹ä¸è·\r\n            return sub.toPromise()\r\n            .then(() => {\r\n                this.printEntity.printFormat = this.printEntity.printFormat || new PrintFormat();\r\n                this.printEntity.printFormat.content = this.printEntity.format;\r\n                return this.printEntity.format;\r\n            });\r\n        }\r\n\r\n        /**\r\n         * è¿åä¸»è¦è¿æ¯éå¯¹çç¬¬ä¸æ¹ï¼ç¬¬ä¸æ¹éè¿è½¬è°çæ¹å¼\r\n         * 1.ç¬¬ä¸æ¹æå¡ç«¯å®ç°CreatePrintFormatWithBE,CreatePrintFormatWithSchemaåGetPrintFormatByIdè¿ä¿©ä¸ªgetè¯·æ±æ¥å£\r\n         * 2.ç¬¬ä¸æ¹æå¡ç«¯è¿ä¿©è¯·æ±æ¥å£è°ç¨äºæå°çæå¡\r\n         */\r\n        let url: string ;\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n        if (reportID && reportID.length > 0) {// å è½½å·²æçæ ¼å¼\r\n            url = this.printEntity.appUrl + Urls.LoadPrintFormatById+'metadataId=' + reportID+'&su='+this.curSu;\r\n            // LoadPrintFormatByIdæ¯ä¸ªGetè¯·æ±\r\n            return this.httpClient.get(url,httpoptions).toPromise()\r\n            .then((data: any) => {\r\n                // å è½½äºæ ¼å¼åææ ¼å¼è®°ä½\r\n                this.printEntity.printFormat = data;\r\n                this.printEntity.format = data.content; \r\n                return data.content;\r\n            });\r\n        } else {\r\n            console.log(this.printEntity.format);\r\n            console.log(reportID);\r\n            console.error('æ ¼å¼idä¸ºç©ºï¼æ æ³è·åæ ¼å¼ä¿¡æ¯');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * å è½½æ°æ®\r\n     * @param dataIds è¦å è½½çæ°æ®Id\r\n     */\r\n    loadData(dataIds: string, flag: string): Promise<any> {\r\n        if (DataValidator.checkFlag(flag) === false) {\r\n            alert('åé¨æ¹æ³ï¼å¤é¨è¯·ä½¿ç¨cloudprint.serviceä¸çæå¡');\r\n            return null;\r\n        }\r\n        /**\r\n         * å¯¹äºGSåé¨éæï¼åå¤å±å¶å®å·²ç»ç»this.printEntity.dataèµå¼äº\r\n         */\r\n        if (this.printEntity.data) {\r\n            const sub = new Subject<any>();\r\n            sub.complete(); // æ²¡æè¿å¥è¯toPromise()éçåå®¹ä¸è·\r\n            return sub.toPromise()\r\n            .then(() => {\r\n                return this.printEntity.data;\r\n            });\r\n        }\r\n\r\n        /**\r\n         * è¿åä¸»è¦è¿æ¯éå¯¹çç¬¬ä¸æ¹ï¼ç¬¬ä¸æ¹éè¿è½¬è°çæ¹å¼\r\n         * 1.ç¬¬ä¸æ¹æå¡ç«¯å®ç°GetPrintDataè¿ä¸ªgetè¯·æ±æ¥å£\r\n         * 2.ç¬¬ä¸æ¹æå¡ç«¯è¿ä¿©è¯·æ±æ¥å£è°ç¨äºæå°çæå¡\r\n         */\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n        return this.httpClient.get(this.printEntity.appUrl + Urls.LoadPrintData + 'dataIds=' + dataIds+'&su='+this.curSu, httpoptions).toPromise()\r\n        .then((data2) => {\r\n            return data2;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * åæ ¼å¼æ°æ®idæ¸²ææå°\r\n     * GSåé¨/ç¬¬ä¸æ¹\r\n     * @param beOptions æ°æ®æºéé¡¹\r\n     * @param options å¯¼åºéé¡¹\r\n     * @param su:åæ æ¨¡å¼ä¸ï¼è¯¥suåªæ¯ç¨æ¥ç»nginxæ¥éç½®è·¯ç±\r\n     */\r\n    printSingleById(beOptions: SourceOptions, options: OutputOptions ,su:string,  flag): Promise<string> {\r\n        if (DataValidator.checkFlag(flag) === false) {\r\n            alert('åé¨æ¹æ³ï¼å¤é¨è¯·ä½¿ç¨cloudprint.serviceä¸çæå¡');\r\n            return null;\r\n        }\r\n\r\n        const body = {\r\n            BEOptions: beOptions,\r\n            Options: options\r\n        };\r\n        /**\r\n         * è¿åå¦æéå¯¹çç¬¬ä¸æ¹ï¼ç¬¬ä¸æ¹éè¿è½¬è°çæ¹å¼\r\n         * 1.ç¬¬ä¸æ¹æå¡ç«¯å®ç°Printè¿ä¸ªpostè¯·æ±æ¥å£\r\n         * 2.ç¬¬ä¸æ¹æå¡ç«¯è¿ä¿©è¯·æ±æ¥å£è°ç¨äºæå°çæå¡\r\n         */\r\n        const httpoptions = {};\r\n        httpoptions['responseType'] = 'blob';\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n\r\n        if(!beOptions.ServiceUnit){\r\n            return this.getSuByFormatId(beOptions.FormatId)\r\n            .then((sucode)=>{\r\n                beOptions.ServiceUnit = sucode;\r\n                su = su || beOptions.ServiceUnit;\r\n                return this.httpClient.post(this.printEntity.appUrl + Urls.PrintSingleById + 'su='+su, body, httpoptions).toPromise()\r\n                .then((ret: any) => {\r\n                    return ret;\r\n                });\r\n            });\r\n        }else{\r\n            su = su || beOptions.ServiceUnit;\r\n            return this.httpClient.post(this.printEntity.appUrl + Urls.PrintSingleById + 'su='+su, body, httpoptions).toPromise()\r\n            .then((ret: any) => {\r\n                return ret;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * åæ ¼å¼è¿æ»¤æ¡ä»¶æ¸²ææå°\r\n     * GSåé¨/ç¬¬ä¸æ¹\r\n     * @param beOptions BEFilteréé¡¹\r\n     * @param options å¯¼åºéé¡¹\r\n     * @param su:åæ æ¨¡å¼ä¸ï¼è¯¥suåªæ¯ç¨æ¥ç»nginxæ¥éç½®è·¯ç±\r\n     */\r\n    printSingleByFilter(beOptions: SourceFilterOptions, options: OutputOptions,su:string, flag): Promise<string> {\r\n        if (DataValidator.checkFlag(flag) === false) {\r\n            alert('åé¨æ¹æ³ï¼å¤é¨è¯·ä½¿ç¨cloudprint.serviceä¸çæå¡');\r\n            return null;\r\n        }\r\n\r\n        const body = {\r\n            BEOptions: beOptions,\r\n            Options: options\r\n        };\r\n\r\n        /**\r\n         * è¿åå¦æéå¯¹çç¬¬ä¸æ¹ï¼ç¬¬ä¸æ¹éè¿è½¬è°çæ¹å¼\r\n         * 1.ç¬¬ä¸æ¹æå¡ç«¯å®ç°Printè¿ä¸ªpostè¯·æ±æ¥å£\r\n         * 2.ç¬¬ä¸æ¹æå¡ç«¯è¿ä¿©è¯·æ±æ¥å£è°ç¨äºæå°çæå¡\r\n         */\r\n        const httpoptions = {};\r\n        httpoptions['responseType'] = 'blob';\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n\r\n        if(!beOptions.ServiceUnit){\r\n            return this.getSuByFormatId(beOptions.FormatId)\r\n            .then((sucode)=>{\r\n                beOptions.ServiceUnit = sucode;\r\n                su = su || beOptions.ServiceUnit;\r\n                return this.httpClient.post(this.printEntity.appUrl + Urls.PrintSingleByFilter + 'su='+su, body, httpoptions).toPromise()\r\n                .then((ret: any) => {\r\n                    return ret;\r\n                });\r\n            });\r\n        }else{\r\n            su = su || beOptions.ServiceUnit;\r\n            return this.httpClient.post(this.printEntity.appUrl + Urls.PrintSingleByFilter + 'su='+su, body, httpoptions).toPromise()\r\n            .then((ret: any) => {\r\n                return ret;\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * su:åæ æ¨¡å¼ä¸ï¼è¯¥suåªæ¯ç¨æ¥ç»nginxæ¥éç½®è·¯ç±\r\n     */\r\n    printMultiById(beOptionsList: Array<SourceOptions>, options: OutputOptions, su:String , flag): Promise<string>{\r\n        if (DataValidator.checkFlag(flag) === false) {\r\n            alert('åé¨æ¹æ³ï¼å¤é¨è¯·ä½¿ç¨cloudprint.serviceä¸çæå¡');\r\n            return null;\r\n        }\r\n\r\n        const body = {\r\n            sourceOptionsList: beOptionsList,\r\n            options: options\r\n        };\r\n        /**\r\n         * è¿åå¦æéå¯¹çç¬¬ä¸æ¹ï¼ç¬¬ä¸æ¹éè¿è½¬è°çæ¹å¼\r\n         * 1.ç¬¬ä¸æ¹æå¡ç«¯å®ç°Printè¿ä¸ªpostè¯·æ±æ¥å£\r\n         * 2.ç¬¬ä¸æ¹æå¡ç«¯è¿ä¿©è¯·æ±æ¥å£è°ç¨äºæå°çæå¡\r\n         */\r\n        const httpoptions = {};\r\n        httpoptions['responseType'] = 'blob';\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n\r\n        return this.httpClient.post(this.printEntity.appUrl + Urls.PrintMultiById + 'su='+su, body, httpoptions).toPromise()\r\n        .then((ret: any) => {\r\n            return ret;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * su:åæ æ¨¡å¼ä¸ï¼è¯¥suåªæ¯ç¨æ¥ç»nginxæ¥éç½®è·¯ç±\r\n     */\r\n    printMultiByFilter(beOptionsList: Array<SourceFilterOptions>, options: OutputOptions, su:String , flag): Promise<string>{\r\n        if (DataValidator.checkFlag(flag) === false) {\r\n            alert('åé¨æ¹æ³ï¼å¤é¨è¯·ä½¿ç¨cloudprint.serviceä¸çæå¡');\r\n            return null;\r\n        }\r\n\r\n        const body = {\r\n            sourceFilterOptionsList: beOptionsList,\r\n            options: options\r\n        };\r\n        /**\r\n         * è¿åå¦æéå¯¹çç¬¬ä¸æ¹ï¼ç¬¬ä¸æ¹éè¿è½¬è°çæ¹å¼\r\n         * 1.ç¬¬ä¸æ¹æå¡ç«¯å®ç°Printè¿ä¸ªpostè¯·æ±æ¥å£\r\n         * 2.ç¬¬ä¸æ¹æå¡ç«¯è¿ä¿©è¯·æ±æ¥å£è°ç¨äºæå°çæå¡\r\n         */\r\n        const httpoptions = {};\r\n        httpoptions['responseType'] = 'blob';\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n\r\n        return this.httpClient.post(this.printEntity.appUrl + Urls.PrintMultiByFilter + 'su='+su, body, httpoptions).toPromise()\r\n        .then((ret: any) => {\r\n            return ret;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * æ¸²ææµè¯æ°æ®\r\n     */\r\n    printTestData(formats:String, datas:String , flag): Promise<string>{\r\n        if (DataValidator.checkFlag(flag) === false) {\r\n            alert('åé¨æ¹æ³ï¼å¤é¨è¯·ä½¿ç¨cloudprint.serviceä¸çæå¡');\r\n            return null;\r\n        }\r\n\r\n        const body = {\r\n            format: formats,\r\n            data: JSON.stringify(datas),\r\n        };\r\n        /**\r\n         * è¿åå¦æéå¯¹çç¬¬ä¸æ¹ï¼ç¬¬ä¸æ¹éè¿è½¬è°çæ¹å¼\r\n         * 1.ç¬¬ä¸æ¹æå¡ç«¯å®ç°Printè¿ä¸ªpostè¯·æ±æ¥å£\r\n         * 2.ç¬¬ä¸æ¹æå¡ç«¯è¿ä¿©è¯·æ±æ¥å£è°ç¨äºæå°çæå¡\r\n         */\r\n        const httpoptions = {};\r\n        httpoptions['responseType'] = 'blob';\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n\r\n        return this.httpClient.post(this.printEntity.appUrl + Urls.PrintTestData + 'su='+this.curSu, body, httpoptions).toPromise()\r\n        .then((ret: any) => {\r\n            return ret;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * è§¦åæå°äºä»¶\r\n     */\r\n    sendPrintEvent(data, flag): Promise<string>{\r\n        if (DataValidator.checkFlag(flag) === false) {\r\n            alert('åé¨æ¹æ³ï¼å¤é¨è¯·ä½¿ç¨cloudprint.serviceä¸çæå¡');\r\n            return null;\r\n        }\r\n\r\n        // const body = {\r\n        //     formatid:formatid,\r\n        //     su:su,\r\n        // };\r\n        /**\r\n         * è¿åå¦æéå¯¹çç¬¬ä¸æ¹ï¼ç¬¬ä¸æ¹éè¿è½¬è°çæ¹å¼\r\n         * 1.ç¬¬ä¸æ¹æå¡ç«¯å®ç°Printè¿ä¸ªpostè¯·æ±æ¥å£\r\n         * 2.ç¬¬ä¸æ¹æå¡ç«¯è¿ä¿©è¯·æ±æ¥å£è°ç¨äºæå°çæå¡\r\n         */\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n\r\n        return this.httpClient.post(this.printEntity.appUrl + Urls.SendPrintEvent + 'su='+this.curSu, data, httpoptions).toPromise()\r\n        .then((ret: any) => {\r\n            return ret;\r\n        });\r\n    }\r\n\r\n    async isRemotePrint() : Promise<any>{\r\n        const url = this.printEntity.appUrl + Urls.IsRemotePrint+'su='+this.curSu;\r\n        // LoadPrintFormatByIdæ¯ä¸ªGetè¯·æ±\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n\r\n        // var httpops = Object.assign({},httpoptions);\r\n        // httpops['responseType']=\"text/html\";\r\n\r\n        return await this.httpClient.get(url,httpoptions).toPromise()\r\n        .then((data: any) => {\r\n          return data;\r\n        });\r\n    } \r\n\r\n    async getEnableFonts() : Promise<any>{\r\n        const url = this.printEntity.appUrl + Urls.GetEnableFonts+'su='+this.curSu;\r\n        // LoadPrintFormatByIdæ¯ä¸ªGetè¯·æ±\r\n        const httpoptions = {};\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n\r\n        return await this.httpClient.get(url,httpoptions).toPromise()\r\n        .then((data: any) => {\r\n          return data;\r\n        });\r\n    } \r\n\r\n\r\n    /**\r\n     * éè¿æå°æ ¼å¼ï¼è·åboï¼å¨è·åsuï¼è¿æ¯ä¸ä¸ªä¸´æ¶æ¹æ¡ï¼\r\n     * @param id \r\n     */\r\n    private getSuByFormatId(formatId): Promise<string> {\r\n        const url = this.printEntity.appUrl +'/getSuByFormatId?formatId=' + formatId+'&su=cloudprint';\r\n        const httpoptions = {};\r\n        httpoptions['responseType'] = 'text/html';\r\n        httpoptions['headers'] = {\r\n            SessionId: this.printEntity.sessionId || '',\r\n            'Content-Type':'application/json'\r\n        };\r\n        return this.httpClient.get(url,httpoptions).toPromise()\r\n        .then((data: any) => {\r\n          return data;\r\n        });\r\n    }\r\n \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n// @Injectable({\r\n//   providedIn: 'root'\r\n// })\r\n/**\r\n * ä¸ç¨äºï¼ä½æ¯å¾ä¿çï¼ä¸ç¶çè¯å«äººç¨äºè¿ä¸ªnpmåçå¾éæ°æå\r\n */\r\n@Injectable()\r\nexport class CloudprintdesignerService {\r\n  // printEntity = new PrintEntity();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // /**\r\n  //  * å è½½Designerçç»æ\r\n  //  * @param reportID id\r\n  //  */\r\n  // loadFormat(reportID: string, flag: string): Promise<any> {\r\n  //   if (Utils.checkFlag(flag) === false) {\r\n  //     alert('åé¨æ¹æ³ï¼å¤é¨è¯·ä½¿ç¨cloudprint.serviceä¸çæå¡');\r\n  //     return null;\r\n  //   }\r\n  //   /**\r\n  //    * å¯¹äºGSåé¨éæï¼åå¤å±å¶å®å·²ç»ç»this.printEntity.formatèµå¼äº\r\n  //    */\r\n  //   if (this.printEntity.format) {\r\n  //     const sub = new Subject<any>();\r\n  //     sub.complete(); // æ²¡æè¿å¥è¯toPromise()éçåå®¹ä¸è·\r\n  //     return sub.toPromise()\r\n  //     .then(() => {\r\n  //       this.printEntity.printFormat = this.printEntity.printFormat || new PrintFormat();\r\n  //       this.printEntity.printFormat.content = this.printEntity.format;\r\n  //       return this.printEntity.format;\r\n  //     });\r\n  //   }\r\n\r\n  //   /**\r\n  //    * è¿åä¸»è¦è¿æ¯éå¯¹çç¬¬ä¸æ¹ï¼ç¬¬ä¸æ¹éè¿è½¬è°çæ¹å¼\r\n  //    * 1.ç¬¬ä¸æ¹æå¡ç«¯å®ç°CreatePrintFormatWithBE,CreatePrintFormatWithSchemaåGetPrintFormatByIdè¿ä¿©ä¸ªgetè¯·æ±æ¥å£\r\n  //    * 2.ç¬¬ä¸æ¹æå¡ç«¯è¿ä¿©è¯·æ±æ¥å£è°ç¨äºæå°çæå¡\r\n  //    */\r\n  //   let url: string ;\r\n  //   const httpoptions = {};\r\n  //   httpoptions['headers'] = {\r\n  //     SessionId: this.printEntity.sessionId || '',\r\n  //     'Content-Type':'application/json'\r\n  //   };\r\n\r\n  //   if (reportID && reportID.length > 0) {// å è½½å·²æçæ ¼å¼\r\n  //     url = this.printEntity.appUrl + Urls.LoadPrintFormatById + reportID;\r\n  //     // LoadPrintFormatByIdæ¯ä¸ªGetè¯·æ±\r\n  //     return this.http.get(url,httpoptions).toPromise()\r\n  //     .then((data: any) => {\r\n  //       // å è½½äºæ ¼å¼åææ ¼å¼è®°ä½\r\n  //       this.printEntity.printFormat = data;\r\n  //       return data.content;\r\n  //     });\r\n  //   } else {// å è½½æ°æ ¼å¼\r\n  //     const body = {};\r\n  //     // CreatePrintFormatWithBEåCreatePrintFormatWithBOæ¯postè¯·æ±\r\n\r\n  //     if (this.printEntity.schemaType === SchemaType.BO) {// bo\r\n  //       url = this.printEntity.appUrl + Urls.CreatePrintFormatWithBO + this.printEntity.format;\r\n  //       return this.http.get(url, httpoptions)\r\n  //       .toPromise()\r\n  //       .then((ret: any) => {\r\n  //         return ret.format;\r\n  //       });\r\n\r\n  //     } else {// schema\r\n  //       url = this.printEntity.appUrl + Urls.CreatePrintFormatWithSchema;\r\n  //       body['printDataSchemaView'] = this.printEntity.format;\r\n  //       return this.http.post(url, body, httpoptions)\r\n  //       .toPromise()\r\n  //       .then((ret) => {\r\n  //         return ret;\r\n  //       });\r\n  //     }\r\n  //   }\r\n\r\n  // }\r\n\r\n  // /**\r\n  //  * å è½½designeræ°æ®\r\n  //  * @param dataIds è¦å è½½çæ°æ®Id\r\n  //  */\r\n  // loadData(dataIds: string, flag: string): Promise<any> {\r\n  //   if (Utils.checkFlag(flag) === false) {\r\n  //     alert('åé¨æ¹æ³ï¼å¤é¨è¯·ä½¿ç¨cloudprint.serviceä¸çæå¡');\r\n  //     return null;\r\n  //   }\r\n  //   /**\r\n  //    * å¯¹äºGSåé¨éæï¼åå¤å±å¶å®å·²ç»ç»this.printEntity.dataèµå¼äº\r\n  //    */\r\n  //   if (this.printEntity.data) {\r\n  //     const sub = new Subject<any>();\r\n  //     sub.complete(); // æ²¡æè¿å¥è¯toPromise()éçåå®¹ä¸è·\r\n  //     return sub.toPromise()\r\n  //     .then(() => {\r\n  //       return this.printEntity.data;\r\n  //     });\r\n\r\n  //   }\r\n\r\n  //   /**\r\n  //    * è¿åä¸»è¦è¿æ¯éå¯¹çç¬¬ä¸æ¹ï¼ç¬¬ä¸æ¹éè¿è½¬è°çæ¹å¼\r\n  //    * 1.ç¬¬ä¸æ¹æå¡ç«¯å®ç°GetPrintDataè¿ä¸ªgetè¯·æ±æ¥å£\r\n  //    * 2.ç¬¬ä¸æ¹æå¡ç«¯è¿ä¿©è¯·æ±æ¥å£è°ç¨äºæå°çæå¡\r\n  //    */\r\n  //   const httpoptions = {};\r\n  //   httpoptions['headers'] = {\r\n  //     SessionId: this.printEntity.sessionId || '',\r\n  //     'Content-Type':'application/json'\r\n  //   };\r\n  //   return this.http.get(this.printEntity.appUrl + Urls.LoadPrintData + dataIds, httpoptions).toPromise()\r\n  //   .then((data2) => {\r\n  //     return data2;\r\n  //   });\r\n  // }\r\n\r\n\r\n  // // /**\r\n  // //  * ä¿å­å½åçæ ¼å¼\r\n  // //  * @param id æ ¼å¼id/æ ¼å¼åæ°æ®id\r\n  // //  * @param mrt å½åçè®¾è®¡å¨æ ¼å¼\r\n  // //  */\r\n  // // saveReportFormat(printFormat: PrintFormat,flag: string): Promise<string> {\r\n  // //   if (Utils.checkFlag(flag) === false) {\r\n  // //     alert('åé¨æ¹æ³ï¼å¤é¨è¯·ä½¿ç¨cloudprint.serviceä¸çæå¡');\r\n  // //     return null;\r\n  // //   }\r\n\r\n  // //   // const body = {\r\n  // //   //   PrintFormat: printFormat,\r\n  // //   // };\r\n\r\n  // //   /**\r\n  // //    * è¿åä¸»è¦è¿æ¯éå¯¹çç¬¬ä¸æ¹ï¼ç¬¬ä¸æ¹éè¿è½¬è°çæ¹å¼\r\n  // //    * 1.ç¬¬ä¸æ¹æå¡ç«¯å®ç°SavePrintFormatè¿ä¸ªgetè¯·æ±æ¥å£\r\n  // //    * 2.ç¬¬ä¸æ¹æå¡ç«¯è¿ä¿©è¯·æ±æ¥å£è°ç¨äºæå°çæå¡\r\n  // //    */\r\n  // //   const httpoptions = {};\r\n  // //   httpoptions['headers'] = {\r\n  // //     SessionId: this.printEntity.sessionId || '',\r\n  // //     'Content-Type':'application/json'\r\n  // //   };\r\n\r\n\r\n  // //   return this.http.post(this.printEntity.appUrl + Urls.SavePrintFormat, body, httpoptions)\r\n  // //   .toPromise()\r\n  // //   .then((ret: any) => {\r\n  // //     return ret;\r\n  // //   });\r\n  // // }\r\n  \r\n}\r\n","// @dynamic\r\nexport class Utils {\r\n\r\n    /**\r\n     * å¤æ­æ¯å¦PCç«¯ or ç§»å¨ç«¯\r\n     * true:PC\r\n     * false:Mobile\r\n     */\r\n    public static isPC(): boolean {\r\n\r\n        if ((navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i))) {\r\n            return false;  // ç§»å¨ç«¯\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public static uuid(): string {\r\n        return [this.gen(2), this.gen(1), this.gen(1), this.gen(1), this.gen(3)].join('-');\r\n    }\r\n\r\n    public static renderPdfByByte(rendedFormat,ele){\r\n        if (rendedFormat) {\r\n\r\n          const lock = setInterval(function() {\r\n            if (ele) { \r\n                const v = document.getElementById('viewframe') as any;\r\n                if(v){\r\n                    const filebtn = v.contentWindow.document.getElementById('openFile');\r\n                    const printbtn =  v.contentWindow.document.getElementById('print');\r\n                    const downbtn =  v.contentWindow.document.getElementById('download');\r\n                    let file = false;\r\n                    let down = false;\r\n                    let print = false;\r\n                    if(filebtn) {\r\n                        filebtn.style.display='none';\r\n                        file = true;\r\n                    }\r\n                    if(downbtn) {\r\n                        downbtn.style.display='none';\r\n                        down = true;\r\n                    }\r\n                    if(printbtn) {\r\n                        printbtn.style.display='none';\r\n                        print = true;\r\n                    }\r\n    \r\n                    if(file && down && print){\r\n                        clearInterval(lock);\r\n                    }\r\n                }else{\r\n                    const binaryData = [];\r\n                    // binaryData.push(self.convertBase64ToUint8Array(rendedFormat));\r\n                    binaryData.push(new Uint8Array(rendedFormat));\r\n                    this.url =window.URL.createObjectURL(new Blob(binaryData, {type:'application/pdf'}));\r\n                    // éè¿pdfjsæ¥é¢è§pdf\r\n                    ele.innerHTML = '<iframe id=\"viewframe\" src=\"/platform/common/web/pdfjs/viewer.html?file='+encodeURIComponent(this.url)+'\" height=\"100%\" width=\"100%\"></iframe>';\r\n                    ele.hidden = false;\r\n                }\r\n            }\r\n          }, 200);\r\n        }\r\n    }\r\n    \r\n    private static gen(count: number) {\r\n        let out = '';\r\n        for (let i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy, ViewChild, ViewContainerRef } from '@angular/core';\r\n// import { CloudprintdesignerService } from './cloudprint-designer.service';\r\nimport { PrintEntity } from '../entitys/printEntity';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { CloudprintFunctionRegister } from '../functions/cloudprint.function.register';\r\nimport { Urls } from '../utils/cloudprint.Urls';\r\nimport { PrintFormatService } from '../services/printFormatService';\r\nimport { CloudprintdesignerService } from './cloudprint-designer.service';\r\nimport { Utils } from '../utils/cloudprint.utils';\r\nimport { LoadingService } from '@farris/ui-loading';\r\n// import {DialogService} from '@progress/kendo-angular-dialog';\r\n// import * as Stimulsoft from 'stimulsoft-reports-js';\r\n\r\n// å¼å¥Stimulsoftçjsåº\r\ndeclare var Stimulsoft;\r\n\r\n@Component({\r\n  selector: 'app-cloudprint-designer',\r\n  templateUrl: './cloudprint-designer.component.html',\r\n  styleUrls: ['./cloudprint-designer.component.css'],\r\n  // providers: [\r\n  //   CloudprintdesignerService,\r\n  //   NotifyService\r\n  // ],\r\n})\r\nexport class CloudprintDesignerComponent implements OnInit, OnDestroy {\r\n  // private options: any;\r\n  /** è®¾è®¡å¨å¯¹è±¡ */\r\n  private designer: any;\r\n\r\n  private docTitle: string;\r\n\r\n  /** æå°åæ°å®ä½ */\r\n  printEntity = new PrintEntity();\r\n  // localeid:string\r\n\r\n  constructor(private server: CloudprintdesignerService,\r\n              private formatSrv: PrintFormatService,\r\n              private notifyService: NotifyService,\r\n              private functionRegister: CloudprintFunctionRegister,\r\n              private editsrv: PrintFormatService,\r\n              private loadSrv: LoadingService,\r\n              ) {\r\n\r\n    Stimulsoft.Base.StiLicense.key = '6vJhGtLLLz2GNviWmUTrhSqnOItdDwjBylQzQcAOiHmUA7xxS8GDDAme3ObyU+jZAO9YGs0yUwkFhPz4MWHZaEdiyH' + \r\n        'ffzbOBGSAkqiNry5YZGU/0ZeiKWcHEB38tgR/zaXp8v+ktUiBOl5B2Dll4y33a3osXfKmsg7lHgK/JYlcS08G7Nggu' + \r\n        'H8vVnzvNulyD1uv6QdfRDQOP/FfeKHq3M70ZPvUspYpkCzGqP4nJJ5ktST13+f3E90Y0n1BkbAbYCI3JqheM988LYP' + \r\n        '2lmJ5mAzuV5t3ILzfUehp6/HIy8LPbzzVlU22X9I1t2xY6W1qsi/pKaXeAfJ0T5x/CUbywJ9JyKaTMwIUhDqUVIrle' + \r\n        'QbFvNFUrLznXCcd55QNngQjoC6Wx9CZ9ryjdPdp0dMfCC0exZXtQW0IR+lWjD9pdUkYPJWn5eACs0ToahpEvdwlW76' + \r\n        'eL5ufNRT6xYjBqlGQ/9VuV5LD9EROLqHxpucBoNPLl7s8ealNcm5seZjuR1iSiOPcqd05m3ellOoxBzSLWaB/sNMWT' + \r\n        'AOhBIWNv7dPOcq8KuAfwaJCkV3WTbQAhX2XJ';   \r\n          \r\n    this.printEntity.isUseMetaData = true;\r\n    // this.server.printEntity = this.printEntity;\r\n    this.formatSrv.printEntity = this.printEntity;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.docTitle = document.title;\r\n    this.initDesigner();\r\n    console.log('å è½½è®¾è®¡å¨æå');\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.printEntity.onExitEvent.emit();\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®PrintEntityåæ°\r\n   * @description å¦æå¤çnewæ°çPrintEntityï¼åéè¦è°ç¨è¯¥æ¹æ³åæ­¥serviceçentity\r\n   *              å¤çæ²¡ænewæ°çPrintEntityï¼åä¸éè¦è°ç¨è¯¥æ¹æ³\r\n   *\r\n   * å¦ä¸ä»£ç æ¯cloudprint.service.tséçä»£ç ï¼å¨cloudprint.service.tsææ°çprintEntityï¼\r\n   *           æä»¥éè¦è°ç¨setPrintEntityæ¥åæ­¥\r\n   *           this.designercomponentRef.instance.setPrintEntity(this.printEntity)\r\n   *\r\n   */\r\n  setPrintEntity(entity) {\r\n    this.printEntity = entity;\r\n    // this.server.printEntity = this.printEntity;\r\n    this.formatSrv.printEntity = this.printEntity;\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®Designerçoptions\r\n   * @param options Designerçoptionså¯¹è±¡\r\n   */\r\n  private setOptions(options: any): void {\r\n    options.toolbar.showAboutButton = false;\r\n    // æä»¶tab\r\n    // options.toolbar.showFileMenu = false;\r\n    // æä»¶tabä¸çæé®\r\n    options.toolbar.showFileMenuAbout = false;\r\n    options.toolbar.showFileMenuClose = false;\r\n    options.toolbar.showFileMenuExit = false;\r\n    options.toolbar.showFileMenuInfo = false;\r\n    options.toolbar.showFileMenuNew = false;\r\n    // options.toolbar.showFileMenuOpen = false;\r\n    options.toolbar.showFileMenuOptions = false;\r\n    options.toolbar.showFileMenuReportSetup = false;\r\n    options.toolbar.showFileMenuSave = false;\r\n    // options.toolbar.showFileMenussSaveAs = false;\r\n    // é¢è§tab\r\n    // options.toolbar.showPreviewButton = false;\r\n    options.toolbar.showPublishButton = false;\r\n    // ä¿å­æé®\r\n    options.toolbar.showSaveButton = !(this.printEntity.state==1);\r\n    options.toolbar.showSetupToolboxButton = false;\r\n\r\n    // options.appearance.showReportTree = false;\r\n    options.appearance.showTooltipsHelp = false;\r\n    options.appearance.fullScreenMode = this.printEntity.isFullScreen || false;\r\n    // options.appearance.showSaveDialog = false;\r\n\r\n    // options.components.showBarCode = false;\r\n    // options.components.showChart = false;\r\n    // options.components.showCheckBox = false;\r\n    // options.components.showClone = false;\r\n    // options.components.showImage = false;\r\n    // options.components.showPanel = false;\r\n    // options.components.showRichText = false;\r\n    // options.components.showShape = false;\r\n    // options.components.showSubReport = false;\r\n    // options.components.showText = false;\r\n    // options.components.showTextInCells = false;\r\n    // options.components.showZipCode = false;\r\n\r\n    // options.crossBands.showCrossDataBand = false;\r\n    // options.crossBands.showCrossFooterBand = false;\r\n    // options.crossBands.showCrossGroupFooterBand = false;\r\n    // options.crossBands.showCrossGroupHeaderBand = false;\r\n    // options.crossBands.showCrossHeaderBand = false;\r\n    // options.crossBands.showCrossTab = false;\r\n\r\n    // options.bands.showChildBand = false;\r\n    // options.bands.showColumnFooterBand = false;\r\n    // options.bands.showColumnHeaderBand = false;\r\n    // options.bands.showDataBand = false;\r\n    // options.bands.showEmptyBand = false;\r\n    // options.bands.showFooterBand = false;\r\n    // options.bands.showGroupFooterBand = false;\r\n    // options.bands.showGroupHeaderBand = false;\r\n    // options.bands.showHeaderBand = false;\r\n    // options.bands.showHierarchicalBand = false;\r\n    // options.bands.showOverlayBand = false;\r\n    // options.bands.showPageFooterBand = false;\r\n    // options.bands.showPageHeaderBand = false;\r\n    // options.bands.showReportSummaryBand = false;\r\n    // options.bands.showReportTitleBand = false;\r\n    // options.bands.showTable = false;\r\n\r\n    options.dictionary.dataSourcesPermissions = Stimulsoft.Designer.StiDesignerPermissions.ModifyView;\r\n    options.dictionary.resourcesPermissions = Stimulsoft.Designer.StiDesignerPermissions.None;\r\n    options.dictionary.dataRelationsPermissions = Stimulsoft.Designer.StiDesignerPermissions.ModifyView;\r\n    options.dictionary.dataColumnsPermissions = Stimulsoft.Designer.StiDesignerPermissions.ModifyView;\r\n\r\n  }\r\n\r\n  /**\r\n   * åå§åDesignerçäºä»¶\r\n   */\r\n  private initEvents(): void {\r\n    const self = this;\r\n    // ä¿å­å\r\n    this.designer.onSaveReport = function(e) {\r\n\r\n      const temp = e.report.saveToJsonString();\r\n      const pages = this.report.pages.list;\r\n      // ä¿å­åäºä»¶\r\n      self.printEntity.onSaveReportEvent.emit(temp);\r\n      if(window.parent && window.parent['onSaveReportEvent']){\r\n        (window.parent as any).onSaveReportEvent({\r\n          format:temp,\r\n        });\r\n      }\r\n\r\n      // isUseMetaDataå½ä¸ªå¼å³å§ï¼å¤çè®¾ç½®ä¸ºfalseï¼ä»£è¡¨å¤çèªå·±å¤çä¿å­äº\r\n      if (self.printEntity.isUseMetaData) {\r\n        self.printEntity.printFormat.content = temp;\r\n\r\n        self.formatSrv.saveWithRes(self.printEntity.printFormat)\r\n        .then((format) => {\r\n\r\n          const msg  = Stimulsoft.Base.Localization.StiLocalization.get('Custom', 'sucSave');\r\n          self.notifyService.success(msg);\r\n          \r\n          self.printEntity.printFormat = format;\r\n          //åè°è®¢éæ ¼å¼idäºä»¶\r\n          self.printEntity.onGetPrintFormatIdEvent.emit(self.printEntity.printFormat.id);\r\n\r\n          //åè°æ ¼å¼ä¿å­åäºä»¶\r\n          self.printEntity.onSavedReportEvent.emit({\r\n            printFormat: self.printEntity.printFormat,\r\n          });\r\n\r\n          //åè°æ ¼å¼ä¿å­åäºä»¶\r\n          if(window.parent && window.parent['onSavedReportEvent']){\r\n            (window.parent as any).onSavedReportEvent({\r\n              saved: true,\r\n              format:self.printEntity.printFormat,\r\n            });\r\n          }\r\n\r\n        })\r\n        .catch((e)=> {\r\n          const msg  = Stimulsoft.Base.Localization.StiLocalization.get('Custom', 'failSave');\r\n          self.notifyService.error(msg);\r\n          self.printEntity.onGetPrintFormatIdEvent.emit('');\r\n          console.log(e);\r\n        });\r\n      }\r\n    };\r\n\r\n    // é¢è§å\r\n    this.designer.onPreviewReport = function(e) {  \r\n      const temp = e.report.saveToJsonString();\r\n      const ele = document.getElementById('StiDesigner_ViewerReportPanel');\r\n      ele.hidden = true;\r\n\r\n      self.loadSrv.show({\r\n        message: 'loading...',\r\n      });\r\n      self.editsrv.printTestData(temp,self.printEntity.data,'CloudPrint')\r\n      .then((data)=>{\r\n\r\n        const b = new Blob([data]);\r\n        const reader = new FileReader();\r\n        reader.readAsArrayBuffer(b);\r\n        reader.onload = function (e) {\r\n          const rendedFormat = reader.result as any;\r\n          Utils.renderPdfByByte(rendedFormat,ele);\r\n        };\r\n\r\n        self.loadSrv.close();\r\n      }); \r\n\r\n      return false;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * ä¿å­åæ ¡éª\r\n   * @param pages æ¥è¡¨çpage\r\n   */\r\n  private checkBeforeSave(pages): boolean {\r\n    let isSave = true;\r\n    for (let i = 0; i < pages.count; i++) {\r\n      if (pages[i].components.count === 0) {\r\n        isSave = false;\r\n        break;\r\n      }\r\n    }\r\n    return isSave;\r\n  }\r\n\r\n  /**\r\n   * åå§åDesigner\r\n   */\r\n  private initDesigner(): Promise<void> {\r\n    return this.editsrv.getEnableFonts()\r\n    .then((fonts)=>{\r\n      // var temp = Stimulsoft.Base.StiFontCollection.getFontFamilies().filter(x=>x.name=='SimSun' || x.name=='SimHei' || x.name=='Arial');\r\n      //families æ¯ä¸ªåªè¯»å±æ§ï¼æ æ³èµå¼ï¼å¯ç´æ¥ä¿®æ¹å¶åé¨å¯¹è±¡çå¼_families\r\n      // Stimulsoft.System.Drawing.FontFamily.families.clear();\r\n      // Stimulsoft.System.Drawing.FontFamily._families=temp;\r\n      var fontsAll = [];\r\n      fonts.forEach(element => {\r\n        var copytemp = new Stimulsoft.System.Drawing.FontFamily(element)\r\n        fontsAll.push(copytemp);\r\n      });\r\n      Stimulsoft.System.Drawing.FontFamily._families=fontsAll;\r\n  \r\n      // Set full screen mode for the designer\r\n      const options = new Stimulsoft.Designer.StiDesignerOptions();\r\n      // Create the report designer with specified options\r\n      this.designer = new Stimulsoft.Designer.StiDesigner(options, 'StiDesigner', false);\r\n      this.designer.report = new Stimulsoft.Report.StiReport();\r\n  \r\n      // å½éåè®¾ç½®\r\n      this.initLocalizations();\r\n      // è®¾ç½®ä¸äºå±æ§\r\n      this.setOptions(options);\r\n      // æ³¨åäºä»¶\r\n      this.initEvents();\r\n      // å è½½è®¾è®¡å¨\r\n      return this.loadDesigner(this.printEntity.foramtId);\r\n    })\r\n    .catch(()=>{\r\n      this.notifyService.error(\"Load Enable Fonts Error\");\r\n    })\r\n  }\r\n\r\n  /**\r\n   * åå§åæ¬å°å\r\n   */\r\n  private initLocalizations() {\r\n    const loc = this.printEntity.language;\r\n\r\n    // è®¾ç½®æ¬å°åè¯­è¨ç¸å³\r\n    Stimulsoft.Base\r\n              .Localization\r\n              .StiLocalization\r\n              .addLocalizationFile('/platform/common/web/stimulsoft/languages/' + loc + '.xml', false, loc);\r\n    Stimulsoft.Base.Localization.StiLocalization.cultureName = loc;\r\n  }\r\n\r\n  /**\r\n   * åå§åèªå®ä¹å½æ°\r\n   */\r\n  private initCustomFunction() {\r\n    return this.functionRegister.initCustomFunction(this.printEntity.appUrl + Urls.GetCustomJsFunc);\r\n  }\r\n\r\n\r\n  /**\r\n   * å è½½Designer\r\n   * @param formatId æ ¼å¼id\r\n   */\r\n  private loadDesigner(formatId: string) {\r\n    // å è½½designerçschema\r\n    return this.formatSrv.loadFormat(formatId, 'CloudPrint')\r\n    .then((format) => {\r\n\r\n      this.designer.report.load(format);\r\n      // å è½½æ°æ®\r\n      return this.formatSrv.loadData(this.printEntity.dataId, 'CloudPrint');\r\n    })\r\n    .then((data2) => {\r\n      // å è½½æ°æ®\r\n      const dataSet = new Stimulsoft.System.Data.DataSet('Data');\r\n      console.log('ç»æ°æ®æºæ·»å æ°æ®');\r\n\r\n      dataSet.readJson(data2);\r\n      console.log('æ¸ç©ºæ¥è¡¨çæ°æ®æºï¼ä»¥ä¾¿éæ°èµå¼');\r\n      this.designer.report.dictionary.databases.clear();\r\n      this.designer.report.regData('Data', 'Data', dataSet);\r\n\r\n      // åå§åèªå®ä¹å½æ°\r\n      return this.initCustomFunction();\r\n    })\r\n    .then(() => {\r\n\r\n      // æ¸²æ\r\n      this.designer.renderHtml('designer');\r\n      // è®¾ç½®æ¸²æåçå±æ§\r\n      this.setOptionsAfterRend(this.designer);\r\n      // ä¿®æ¹stimulsoftæ¸²ææ¶è®¾å®çå·¥ä½åºçé»è®¤é«åº¦\r\n      document.getElementById('StiDesigner').style.height = this.printEntity.designerHeight;\r\n      // è°æ´å¤§å°\r\n      // this.designer.jsObject.ResizeDesigner();\r\n      document.title = this.docTitle;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * æ¸²æåéè¦è®¾ç½®çå±æ§\r\n   * @param designer å½åçDesignerå¯¹è±¡\r\n   */\r\n  private setOptionsAfterRend(designer: any): void {\r\n    //å±è½ä¿å­æé®çå¼¹æ¡\r\n    designer.jsObject.options.report.properties.reportFile='report.mrt';\r\n\r\n    designer.jsObject.options.buttons.dictionaryActions.hidden = true;\r\n    designer.jsObject.options.buttons.dictionaryNewItem.hidden = true;\r\n    designer.jsObject.options.buttons.pageToolButton.hidden = true;\r\n    designer.jsObject.options.buttons.insertToolButton.hidden = true;\r\n    // å±æ§é¢æ¿çäºä»¶æé®\r\n    designer.jsObject.options.buttons.propertiesToolbarEventsTab.hidden=true;\r\n    // å±æ§é¢æ¿çäºä»¶tab\r\n    // designer.jsObject.options.buttons.propertiesToolbarEventsTab.hidden = true;\r\n    // å±æ§é¢æ¿çå±æ§tab\r\n    // designer.jsObject.options.buttons.propertiesToolbarPropertiesTab.hidden = true;\r\n    designer.jsObject.options.buttons.redoButton.hidden = true;\r\n    designer.jsObject.options.buttons.undoButton.hidden = true;\r\n    designer.jsObject.options.buttons.reportCheckerButton.hidden = true;\r\n    designer.jsObject.options.buttons.localizationButton.hidden = true;\r\n    designer.jsObject.options.buttons.resizeDesigner.hidden = true;\r\n\r\n    // é»è®¤éèworkpanel\r\n    designer.jsObject.options.workPanel.changeVisibleState(!1);\r\n    designer.jsObject.options.workPanel.visibleState = !1;\r\n\r\n    const viewer = designer.jsObject.options.viewerContainer.firstChild;\r\n    // viewer.jsObject.controls.menus.saveMenu.items[\"Html\"].style.display = \"none\";\r\n    // viewer.jsObject.controls.menus.saveMenu.items[\"separator2\"].style.display = \"none\";\r\n    // var toolbarTable = viewer.jsObject.controls.toolbar.firstChild;\r\n    // viewer.jsObject.controls.toolbar.removeChild(toolbarTable);\r\n    //é¢è§çé¢çå·¥å·æ \r\n    viewer.jsObject.controls.toolbar.style.display = 'none';\r\n    //é¢è§çé¢çç¼©æ¾æé®\r\n    viewer.jsObject.controls.buttons.Zoom.style.display = 'none';\r\n    viewer.jsObject.controls.buttons.ZoomOnePage.style.display = 'none';\r\n    viewer.jsObject.controls.buttons.ZoomPageWidth.style.display = 'none';\r\n    // viewer.jsObject.controls.menus.printMenu.items['PrintPdf'].style.display='none'\r\n    // viewer.jsObject.controls.menus.printMenu.items['PrintWithPreview'].style.display='none'\r\n    // viewer.jsObject.controls.menus.printMenu.items['PrintWithoutPreview'].style.display='none'\r\n\r\n  }\r\n\r\n  private loadSystemFonts():any{\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n/**\r\n * ä¸ç¨äºï¼ä½æ¯å¾ä¿çï¼ä¸ç¶çè¯å«äººç¨äºè¿ä¸ªnpmåçå¾éæ°æå\r\n */\r\n@Injectable()\r\nexport class CloudprintviewerService {\r\n\r\n  // printEntity = new PrintEntity();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // /**\r\n  //  * å è½½Viewerç»æ\r\n  //  * @param reportID id\r\n  //  */\r\n  // loadFormat(reportID: string, flag): Promise<any> {\r\n  //   if (Utils.checkFlag(flag) === false) {\r\n  //     alert('åé¨æ¹æ³ï¼å¤é¨è¯·ä½¿ç¨cloudprint.serviceä¸çæå¡');\r\n  //     return null;\r\n  //   }\r\n  //   /**\r\n  //    * å¯¹äºGSåé¨éæï¼åå¤å±å¶å®å·²ç»ç»this.printEntity.formatèµå¼äº\r\n  //    */\r\n  //   if (this.printEntity.format) {\r\n  //     const sub = new Subject<any>();\r\n  //     sub.complete(); // æ²¡æè¿å¥è¯toPromise()éçåå®¹ä¸è·\r\n  //     return sub.toPromise()\r\n  //     .then(() => {\r\n  //       return this.printEntity.format;\r\n  //     });\r\n  //   }\r\n\r\n  //   const httpoptions = {};\r\n  //   httpoptions['headers'] = {\r\n  //     SessionId: this.printEntity.sessionId || '',\r\n  //     'Content-Type':'application/json'\r\n  //   };\r\n\r\n  //   /**\r\n  //    * è¿åä¸»è¦è¿æ¯éå¯¹çç¬¬ä¸æ¹ï¼ç¬¬ä¸æ¹éè¿è½¬è°çæ¹å¼\r\n  //    * 1.ç¬¬ä¸æ¹æå¡ç«¯å®ç°NewPrintFormatåGetPrintFormatByIdè¿ä¿©ä¸ªgetè¯·æ±æ¥å£\r\n  //    * 2.ç¬¬ä¸æ¹æå¡ç«¯è¿ä¿©è¯·æ±æ¥å£è°ç¨äºæå°çæå¡\r\n  //    */\r\n  //   let url: string ;\r\n  //   if (reportID && reportID.length > 0) {\r\n  //     url = this.printEntity.appUrl + Urls.LoadPrintFormatById + reportID;\r\n  //     // å è½½å·²ææ ¼å¼æ¯ä¸ªgetè¯·æ±\r\n  //     return this.http.get(url,httpoptions).toPromise()\r\n  //     .then((data) => {\r\n  //       return data;\r\n  //     });\r\n  //   } else {\r\n  //     const body = {};\r\n      \r\n\r\n  //     if (this.printEntity.schemaType === SchemaType.BO) {// bo\r\n  //       url = this.printEntity.appUrl + Urls.CreatePrintFormatWithBO + this.printEntity.format;\r\n  //       return this.http.get(url, httpoptions)\r\n  //       .toPromise()\r\n  //       .then((ret) => {\r\n  //         return ret;\r\n  //       });\r\n  //     } else {// schema\r\n  //       url = this.printEntity.appUrl + Urls.CreatePrintFormatWithSchema;\r\n  //       body['printDataSchemaView'] = this.printEntity.format;\r\n  //       return this.http.post(url, body, httpoptions)\r\n  //       .toPromise()\r\n  //       .then((ret) => {\r\n  //         return ret;\r\n  //       });\r\n  //     }\r\n\r\n  //     // CreatePrintFormatWithBEåCreatePrintFormatWithBOæ¯postè¯·æ±\r\n\r\n \r\n  //   }\r\n\r\n  // }\r\n\r\n  // /**\r\n  //  * å è½½Vieweræ°æ®\r\n  //  * @param dataIds è¦å è½½çæ°æ®Id\r\n  //  */\r\n  // loadData(dataIds: string, flag): Promise<any> {\r\n  //   if (Utils.checkFlag(flag) === false) {\r\n  //     alert('åé¨æ¹æ³ï¼å¤é¨è¯·ä½¿ç¨cloudprint.serviceä¸çæå¡');\r\n  //     return null;\r\n  //   }\r\n  //   /**\r\n  //    * å¯¹äºGSåé¨éæï¼åå¤å±å¶å®å·²ç»ç»this.printEntity.dataèµå¼äº\r\n  //    */\r\n  //   if (this.printEntity.data) {\r\n  //     const sub = new Subject<any>();\r\n  //     sub.complete(); // æ²¡æè¿å¥è¯toPromise()éçåå®¹ä¸è·\r\n  //     return sub.toPromise()\r\n  //     .then(() => {\r\n  //       return this.printEntity.data;\r\n  //     });\r\n  //   }\r\n\r\n  //   /**\r\n  //    * è¿åä¸»è¦è¿æ¯éå¯¹çç¬¬ä¸æ¹ï¼ç¬¬ä¸æ¹éè¿è½¬è°çæ¹å¼\r\n  //    * 1.ç¬¬ä¸æ¹æå¡ç«¯å®ç°GetPrintDataè¿ä¸ªgetè¯·æ±æ¥å£\r\n  //    * 2.ç¬¬ä¸æ¹æå¡ç«¯è¿ä¿©è¯·æ±æ¥å£è°ç¨äºæå°çæå¡\r\n  //    */\r\n\r\n  //   const httpoptions = {};\r\n  //   httpoptions['headers'] = {\r\n  //     SessionId: this.printEntity.sessionId || '',\r\n  //     'Content-Type':'application/json'\r\n  //   };\r\n  //   return this.http.get(this.printEntity.appUrl + Urls.LoadPrintData + dataIds, httpoptions).toPromise()\r\n  //   .then((data2) => {\r\n  //     return data2;\r\n  //   });\r\n  // }\r\n\r\n  // /**\r\n  //  * åå°æå°\r\n  //  * GSåé¨/ç¬¬ä¸æ¹\r\n  //  * @param beOptions æ°æ®æºéé¡¹\r\n  //  * @param options å¯¼åºéé¡¹\r\n  //  */\r\n  // OutputBEData(beOptions: SourceOptions, options: OutputOptions , flag): Promise<string> {\r\n  //   if (Utils.checkFlag(flag) === false) {\r\n  //     alert('åé¨æ¹æ³ï¼å¤é¨è¯·ä½¿ç¨cloudprint.serviceä¸çæå¡');\r\n  //     return null;\r\n  //   }\r\n\r\n  //   const body = {\r\n  //     BEOptions: beOptions,\r\n  //     Options: options\r\n  //   };\r\n  //   // const httpoptions = {};\r\n  //   // httpoptions['responseType'] = 'arraybuffer';\r\n  //   // return this.http.post(this.printEntity.appUrl + Urls.OutputBEData, body).toPromise()\r\n  //   // .then((ret: any) => {\r\n  //   //   return ret;\r\n  //   // });\r\n  //   /**\r\n  //    * è¿åå¦æéå¯¹çç¬¬ä¸æ¹ï¼ç¬¬ä¸æ¹éè¿è½¬è°çæ¹å¼\r\n  //    * 1.ç¬¬ä¸æ¹æå¡ç«¯å®ç°Printè¿ä¸ªpostè¯·æ±æ¥å£\r\n  //    * 2.ç¬¬ä¸æ¹æå¡ç«¯è¿ä¿©è¯·æ±æ¥å£è°ç¨äºæå°çæå¡\r\n  //    */\r\n  //   const httpoptions = {};\r\n  //   httpoptions['responseType'] = 'arraybuffer';\r\n  //   httpoptions['headers'] = {\r\n  //     SessionId: this.printEntity.sessionId || '',\r\n  //     'Content-Type':'application/json'\r\n  //   };\r\n  //   return this.http.post(this.printEntity.appUrl + Urls.OutputBEData, body, httpoptions).toPromise()\r\n  //   .then((ret: any) => {\r\n  //     return ret;\r\n  //   });\r\n  // }\r\n\r\n  // /**\r\n  //  * åå°æå°\r\n  //  * GSåé¨/ç¬¬ä¸æ¹\r\n  //  * @param beOptions BEFilteréé¡¹\r\n  //  * @param options å¯¼åºéé¡¹\r\n  //  */\r\n  // OutputBEDataWithFilter(beOptions: SourceFilterOptions, options: OutputOptions, flag): Promise<string> {\r\n  //   if (Utils.checkFlag(flag) === false) {\r\n  //     alert('åé¨æ¹æ³ï¼å¤é¨è¯·ä½¿ç¨cloudprint.serviceä¸çæå¡');\r\n  //     return null;\r\n  //   }\r\n\r\n  //   const body = {\r\n  //     BEOptions: beOptions,\r\n  //     Options: options\r\n  //   };\r\n\r\n  //   // this.http.setHeader({\r\n  //   //   responseType : 'arraybuffer'\r\n  //   // });\r\n  //   // return this.http.post(this.printEntity.appUrl + Urls.OutputBEDataWithFilter, body).toPromise()\r\n  //   // .then((ret: any) => {\r\n  //   //   return ret;\r\n  //   // });\r\n  //   /**\r\n  //    * è¿åå¦æéå¯¹çç¬¬ä¸æ¹ï¼ç¬¬ä¸æ¹éè¿è½¬è°çæ¹å¼\r\n  //    * 1.ç¬¬ä¸æ¹æå¡ç«¯å®ç°Printè¿ä¸ªpostè¯·æ±æ¥å£\r\n  //    * 2.ç¬¬ä¸æ¹æå¡ç«¯è¿ä¿©è¯·æ±æ¥å£è°ç¨äºæå°çæå¡\r\n  //    */\r\n  //   const httpoptions = {};\r\n  //   httpoptions['responseType'] = 'arraybuffer';\r\n  //   httpoptions['headers'] = {\r\n  //     SessionId: this.printEntity.sessionId || '',\r\n  //     'Content-Type':'application/json'\r\n  //   };\r\n  //   return this.http.post(this.printEntity.appUrl + Urls.OutputBEDataWithFilter, body, httpoptions).toPromise()\r\n  //   .then((ret: any) => {\r\n  //     return ret;\r\n  //   });\r\n  // }\r\n\r\n  // /**\r\n  //  * åå°æå°\r\n  //  * GSåé¨/ç¬¬ä¸æ¹\r\n  //  * @param boOptions BOéé¡¹\r\n  //  * @param options å¯¼åºéé¡¹\r\n  //  */\r\n  // OutputBOData(boOptions: BOOptions, options: OutputOptions, flag): Promise<string> {\r\n  //   if (Utils.checkFlag(flag) === false) {\r\n  //     alert('åé¨æ¹æ³ï¼å¤é¨è¯·ä½¿ç¨cloudprint.serviceä¸çæå¡');\r\n  //     return null;\r\n  //   }\r\n\r\n  //   const body = {\r\n  //     BOOptions: boOptions,\r\n  //     Options: options\r\n  //   };\r\n\r\n  //   // this.http.setHeader({\r\n  //   //   responseType : 'arraybuffer'\r\n  //   // });\r\n  //   // return this.http.post(this.printEntity.appUrl + Urls.OutputBOData, body).toPromise()\r\n  //   // .then((ret: any) => {\r\n  //   //   return ret;\r\n  //   // });\r\n  //   /**\r\n  //    * è¿åå¦æéå¯¹çç¬¬ä¸æ¹ï¼ç¬¬ä¸æ¹éè¿è½¬è°çæ¹å¼\r\n  //    * 1.ç¬¬ä¸æ¹æå¡ç«¯å®ç°Printè¿ä¸ªpostè¯·æ±æ¥å£\r\n  //    * 2.ç¬¬ä¸æ¹æå¡ç«¯è¿ä¿©è¯·æ±æ¥å£è°ç¨äºæå°çæå¡\r\n  //    */\r\n  //   const httpoptions = {};\r\n  //   httpoptions['responseType'] = 'arraybuffer';\r\n  //   httpoptions['headers'] = {\r\n  //     SessionId: this.printEntity.sessionId || '',\r\n  //     'Content-Type':'application/json'\r\n  //   };\r\n  //   return this.http.post(this.printEntity.appUrl + Urls.OutputBOData, body, httpoptions).toPromise()\r\n  //   .then((ret: any) => {\r\n  //     return ret;\r\n  //   });\r\n  // }\r\n}\r\n","import { Component, OnInit, OnDestroy, Input, Inject, forwardRef, ElementRef } from '@angular/core';\r\nimport { CloudprintviewerService } from './cloudprint-viewer.service';\r\nimport { PrintEntity } from '../entitys/printEntity';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { Utils } from '../utils/cloudprint.utils';\r\nimport { CloudprintFunctionRegister } from '../functions/cloudprint.function.register';\r\nimport { Urls } from '../utils/cloudprint.Urls';\r\nimport { PrintFormatService } from '../services/printFormatService';\r\nimport { LanguageService } from '@ecp-caf/caf-common';\r\nimport { SourceFilterOptions } from '../entitys/datasourceoptions/sourceFilterOptions';\r\nimport { OutputParam } from '../entitys/outputoptions/outputParam';\r\nimport { SourceOptions } from '../entitys/datasourceoptions/sourceOptions';\r\nimport { CloudprintService } from '../cloudprint.service';\r\nimport { LoadingService } from '@farris/ui-loading';\r\nimport { LocalLangPipe } from '../local.pipe';\r\n\r\n// å¼å¥Stimulsoftçjsåº\r\ndeclare var Stimulsoft;\r\n\r\n@Component({\r\n  selector: 'app-cloudprint-viewer',\r\n  templateUrl: './cloudprint-viewer.component.html',\r\n  styleUrls: ['./cloudprint-viewer.component.css'],\r\n  // providers: [\r\n  //   CloudprintviewerService,\r\n  //   NotifyService,\r\n  //   LanguageService\r\n  // ],\r\n})\r\nexport class CloudprintViewerComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() public outputParam : OutputParam;\r\n  @Input() public isRemotePrint: any;\r\n\r\n  /** é¢è§å¨å¯¹è±¡ */\r\n  private viewer: any;\r\n  localpipe: LocalLangPipe;\r\n\r\n  private docTitle: string;\r\n  /** æå°åæ°å®ä½ */\r\n  printEntity = new PrintEntity();\r\n\r\n  // private server: CloudprintviewerService,\r\n  constructor(private server: CloudprintviewerService,\r\n              private formatSrv: PrintFormatService,\r\n              private notifyService: NotifyService,\r\n              private functionRegister: CloudprintFunctionRegister,\r\n              private langservice:LanguageService,\r\n              private loadSrv: LoadingService,\r\n              private elementRef: ElementRef,\r\n              //@Inject(forwardRef(() => CloudprintService))çåå ï¼https://stackoverflow.com/questions/37997824/exception-cant-resolve-all-parameters#\r\n              @Inject(forwardRef(() => CloudprintService))private printSrv: CloudprintService) {\r\n\r\n\r\n      Stimulsoft.Base.StiLicense.key = '6vJhGtLLLz2GNviWmUTrhSqnOItdDwjBylQzQcAOiHmUA7xxS8GDDAme3ObyU+jZAO9YGs0yUwkFhPz4MWHZaEdiyH' + \r\n        'ffzbOBGSAkqiNry5YZGU/0ZeiKWcHEB38tgR/zaXp8v+ktUiBOl5B2Dll4y33a3osXfKmsg7lHgK/JYlcS08G7Nggu' + \r\n        'H8vVnzvNulyD1uv6QdfRDQOP/FfeKHq3M70ZPvUspYpkCzGqP4nJJ5ktST13+f3E90Y0n1BkbAbYCI3JqheM988LYP' + \r\n        '2lmJ5mAzuV5t3ILzfUehp6/HIy8LPbzzVlU22X9I1t2xY6W1qsi/pKaXeAfJ0T5x/CUbywJ9JyKaTMwIUhDqUVIrle' + \r\n        'QbFvNFUrLznXCcd55QNngQjoC6Wx9CZ9ryjdPdp0dMfCC0exZXtQW0IR+lWjD9pdUkYPJWn5eACs0ToahpEvdwlW76' + \r\n        'eL5ufNRT6xYjBqlGQ/9VuV5LD9EROLqHxpucBoNPLl7s8ealNcm5seZjuR1iSiOPcqd05m3ellOoxBzSLWaB/sNMWT' + \r\n        'AOhBIWNv7dPOcq8KuAfwaJCkV3WTbQAhX2XJ';\r\n      \r\n      this.printEntity.isUseMetaData = true;\r\n      this.formatSrv.printEntity = this.printEntity;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.docTitle = document.title;\r\n    // åå§åViewer;\r\n    this.initViewer();\r\n\r\n    console.log('ç»ä»¶åå§ï¼å è½½é¢è§å¨æå');\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.printEntity.onExitEvent.emit();\r\n\r\n    console.log('ç»ä»¶éæ¯');\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®PrintEntityåæ°\r\n   * @description å¦æå¤çnewæ°çPrintEntityï¼åéè¦è°ç¨è¯¥æ¹æ³åæ­¥serviceçentity\r\n   *              å¤çæ²¡ænewæ°çPrintEntityï¼åä¸éè¦è°ç¨è¯¥æ¹æ³\r\n   *\r\n   * å¦ä¸ä»£ç æ¯cloudprint.service.tséçä»£ç ï¼å¨cloudprint.service.tsææ°çprintEntityï¼\r\n   *           æä»¥éè¦è°ç¨setPrintEntityæ¥åæ­¥\r\n   *           this.designercomponentRef.instance.setPrintEntity(this.printEntity)\r\n   *\r\n   */\r\n  setPrintEntity(entity) {\r\n    this.printEntity = entity;\r\n    // this.server.printEntity = this.printEntity;\r\n    this.formatSrv.printEntity = this.printEntity;\r\n  }\r\n\r\n  /**\r\n   * åå§åViewer\r\n   */\r\n  private initViewer(): void {\r\n    // å è½½æ°æ®\r\n    const self = this;\r\n    document.title = this.docTitle;\r\n    this.loadSrv.show({\r\n      message: 'loading...',\r\n    });\r\n    // å¦ææ¯åç«¯æ¸²æçåéï¼ååå°ç´æ¥ä½¿ç¨\r\n    const rendedFormat = this.printEntity.rendedFormat;\r\n    const ret = this.renderPdf(rendedFormat);\r\n    if(ret && ret.then){\r\n      ret.then(()=>{\r\n        this.loadSrv.close();\r\n      });\r\n    }else{\r\n      this.loadSrv.close();\r\n    }\r\n\r\n  }\r\n\r\n  private renderPdf(rendedFormat){\r\n    const self = this;\r\n\r\n    if (rendedFormat) {//ææ¸²æçç»æåç´æ¥å±ç¤º\r\n      const ele = document.getElementById('viewer');\r\n      // ele.hidden = true;\r\n      Utils.renderPdfByByte(rendedFormat,ele);\r\n\r\n    } else {//æ²¡ææ¸²æçç»æåéè¿åç«¯æ¸²æåå±ç¤º\r\n      this.outputParam.prnOutputOps.printJob = false;\r\n      if (this.outputParam.prnSourceOptions.length > 1) {\r\n        if (this.outputParam.isFilter) {\r\n          return this.formatSrv.printMultiByFilter(this.outputParam.prnSourceOptions as Array<SourceFilterOptions>, this.outputParam.prnOutputOps, null,'CloudPrint')\r\n          .then((data)=>{\r\n            const b = new Blob([data]);\r\n            const reader = new FileReader();\r\n            reader.readAsArrayBuffer(b);\r\n            reader.onload = function (e) {\r\n              self.renderPdf(reader.result as any);\r\n            };\r\n          });\r\n        } else {\r\n          return this.formatSrv.printMultiById(this.outputParam.prnSourceOptions as Array<SourceOptions>, this.outputParam.prnOutputOps, null,'CloudPrint')\r\n          .then((data)=>{\r\n            const b = new Blob([data]);\r\n            const reader = new FileReader();\r\n            reader.readAsArrayBuffer(b);\r\n            reader.onload = function (e) {\r\n              self.renderPdf(reader.result as any);\r\n            };\r\n          });\r\n        }\r\n      } else {\r\n        if (this.outputParam.isFilter) {\r\n          return this.formatSrv.printSingleByFilter(this.outputParam.prnSourceOptions[0] as SourceFilterOptions, this.outputParam.prnOutputOps, null,'CloudPrint')\r\n          .then((data)=>{\r\n            const b = new Blob([data]);\r\n            const reader = new FileReader();\r\n            reader.readAsArrayBuffer(b);\r\n            reader.onload = function (e) {\r\n              self.renderPdf(reader.result as any);\r\n            };\r\n          });\r\n        } else {\r\n          return this.formatSrv.printSingleById(this.outputParam.prnSourceOptions[0] as SourceOptions, this.outputParam.prnOutputOps, null,'CloudPrint')\r\n          .then((data)=>{\r\n            const b = new Blob([data]);\r\n            const reader = new FileReader();\r\n            reader.readAsArrayBuffer(b);\r\n            reader.onload = function (e) {\r\n              self.renderPdf(reader.result as any);\r\n            };\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** ç´æ¥æå° */\r\n  printDirect(){\r\n    const ele = document.getElementById('viewer');\r\n    const iframe = ele.firstChild as any;\r\n    iframe.contentWindow.print();\r\n\r\n    const sourceopslist = this.outputParam.prnSourceOptions;\r\n    let su=[];\r\n    let id=[];\r\n    let billcate=[];\r\n    let biztype=[];\r\n    let source=[];\r\n    let entityfilter=[];\r\n    let dataid=[];\r\n    let isfilter=[];\r\n    sourceopslist.forEach(x=>{\r\n      su.push(x.ServiceUnit);\r\n      id.push(x.FormatId);\r\n      source.push(x.SourceId);\r\n      isfilter.push(this.outputParam.isFilter);\r\n      if(this.outputParam.isFilter){\r\n        entityfilter.push(JSON.stringify((x as SourceFilterOptions).EntityFilter));\r\n      }else{\r\n        dataid.push((x as SourceOptions).DataIds);\r\n      }\r\n      billcate.push(x.billCategoryId);\r\n      biztype.push(x.bizTypeId);\r\n    });\r\n    const data = {\r\n      formatid:id,\r\n      sourceid:source,\r\n      entityfilter:entityfilter,\r\n      dataid:dataid,\r\n      isfilter:isfilter,\r\n      su:su,\r\n      billcategory:billcate,\r\n      biztype:biztype\r\n    };\r\n    this.formatSrv.sendPrintEvent(data,\"CloudPrint\");\r\n  }\r\n\r\n  /** çå­åå°æå° */\r\n  printBox(){\r\n    const self = this;\r\n    self.outputParam.prnOutputOps.printJob = true;\r\n    if (self.outputParam.prnSourceOptions.length > 1) {\r\n      if (self.outputParam.isFilter) {\r\n        return self.printSrv.printMultiByFilter4Job(self.outputParam.prnSourceOptions as Array<SourceFilterOptions>, self.outputParam.prnOutputOps);\r\n      } else {\r\n        return self.printSrv.printMultiById4Job(self.outputParam.prnSourceOptions as Array<SourceOptions>, self.outputParam.prnOutputOps);\r\n      }\r\n    } else {\r\n      if (self.outputParam.isFilter) {\r\n        return self.printSrv.printSingleByFilter4Job(self.outputParam.prnSourceOptions[0] as SourceFilterOptions, self.outputParam.prnOutputOps);\r\n      } else {\r\n        return self.printSrv.printSingleById4Job(self.outputParam.prnSourceOptions[0] as SourceOptions, self.outputParam.prnOutputOps);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/** æ§ä»¶ç±»åæä¸¾ */\r\nexport enum CmpType {\r\n    Designer= 1,\r\n    Viewer= 2\r\n}\r\n","import { OutputOptions } from './outputOptions';\r\nimport { CmpType } from '../enums/cmpType';\r\nimport { BaseSourceOptions } from '../datasourceoptions/basesourceoptions';\r\n\r\n/**\r\n * å¯¼åºè®¾ç½®\r\n */\r\nexport class OutputParam {\r\n    prnFormat: string;\r\n    prnData: object;\r\n    prnFormatId: string;\r\n    prnDataId: string;\r\n    prnType: CmpType;\r\n    prnRendedFormat: string;\r\n    prnSourceOptions:Array<BaseSourceOptions>;\r\n    prnOutputOps: OutputOptions;\r\n    isFilter:boolean;\r\n}\r\n\r\n\r\n","\r\n\r\n/**\r\n * æ°æ®æºç±»å\r\n */\r\nexport enum SourceType {\r\n    BE= 0, // BE\r\n    VO= 1, // VO\r\n    BO= 2,// .net å®ä½\r\n    CO=3,//éç¨æ°æ®ç»æ\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, ViewChild, LOCALE_ID, Inject } from '@angular/core';\r\nimport { PrintFormat } from '../entitys/printFormat';\r\nimport { PageChangeEvent, GridDataResult } from '@progress/kendo-angular-grid';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { BsModalRef } from '@farris/ui-modal';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { LocalLangPipe } from '../local.pipe';\r\n\r\n@Component({\r\n  selector: 'lib-formatlist',\r\n  templateUrl: './formatlist.component.html',\r\n  styleUrls: ['./formatlist.component.css']\r\n})\r\nexport class FormatlistComponent implements OnInit {\r\n  // @ViewChild('printjob') printjob: DialogComponent;\r\n\r\n  @Input() public formats : PrintFormat[];\r\n\r\n  print: EventEmitter<any> = new EventEmitter<any>();\r\n  // dlg:BsModalRef;\r\n  columns = [];\r\n  formatId:string;\r\n\r\n  localepip:LocalLangPipe;\r\n\r\n  constructor(private notifyService: NotifyService,\r\n    @Inject(LOCALE_ID) localeid:string) { \r\n      \r\n    debugger;\r\n    // localeid = localStorage.getItem(\"languageCode\") || localeid;\r\n    // this.localepip = new LocalLangPipe(localeid);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.columns = [\r\n      {field: 'code', title: this.localepip.transform('formatcode')},\r\n      {field: 'name', title:  this.localepip.transform('formatname')},\r\n    ];\r\n  }\r\n\r\n  selectChange(rowdata: any){\r\n    this.formatId = rowdata.id;\r\n  }\r\n\r\n  printJob(){\r\n\r\n    if(this.checkBeforePrint()){\r\n      this.print.emit({\r\n        id:this.formatId\r\n      });\r\n    }\r\n  }\r\n\r\n  private checkBeforePrint(){\r\n    if(!this.formatId){\r\n      this.notifyService.warning(this.localepip.transform('selectformat'));\r\n      return false;\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * æ¥è¯¢ç±»å\r\n */\r\nexport enum QueryType{\r\n    BusinessEntity = 'BusinessEntity', //ä¸å¡å®ä½\r\n    ViewModel = 'ViewModel', //è§å¾å®ä½\r\n    InternalService = 'InternalService',// åé¨æå¡\r\n    CunstomComponent = 'CunstomComponent',// èªå®ä¹æä»¶\r\n    CommonStructure = 'CommonStructure',//éç¨æ°æ®ç»æ\r\n    PrintReport = 'PrintReport',\r\n    BusinessObject = 'BusinessObject',//ç¡¬ç¼ç çä¸å¡å®ä½\r\n    Unknown = 'Unknown',\r\n}\r\n","/**\r\n * æå°ç±»å\r\n */\r\nexport enum PrintType{\r\n    /**\r\n     * è¡¨åæå°\r\n     */\r\n    Form='Form',\r\n    /**\r\n     * æ¥è¯¢æå°\r\n     */\r\n    Query='Query',\r\n    /**\r\n     * è´¦é¡µæå°\r\n     */\r\n    LedgerPaper='LedgerPaper',\r\n\r\n    /**\r\n     * éä»¶æå°\r\n     */\r\n    Attachment='Attachment',\r\n\r\n    Unknown='Unknown'\r\n}\r\n","import { PrintOritation } from '../enums/printOritation';\r\n\r\nexport class PrintSetting{\r\n    copys:Number;\r\n    paperName:String;\r\n    width:Number;\r\n    height:Number;\r\n    top:Number;\r\n    bottom:Number;\r\n    left:Number;\r\n    right:Number;\r\n    printOritation:PrintOritation;\r\n    centerPrint:boolean;\r\n}","/** æå°æ¹å */\r\nexport enum PrintOritation {\r\n    Portrait = 'Portrait',//çºµå\r\n    Landscape = 'Landscape'//æ¨ªå\r\n}\r\n","export const PaperKind = [\r\n    {\r\n        key:'A2',\r\n        value:'A2'\r\n    },\r\n    {\r\n        key:'A3',\r\n        value:'A3'\r\n    },\r\n    // {\r\n    //     key:'A3Extra',\r\n    //     value:'A3Extra'\r\n    // },\r\n    // {\r\n    //     key:'A3ExtraTransverse',\r\n    //     value:'A3ExtraTransverse'\r\n    // },\r\n    // {\r\n    //     key:'A3Transverse',\r\n    //     value:'A3Transverse'\r\n    // },\r\n    {\r\n        key:'A4',\r\n        value:'A4'\r\n    },\r\n    {\r\n        key:'A5',\r\n        value:'A5'\r\n    },\r\n    {\r\n        key:'B4',\r\n        value:'B4'\r\n    },\r\n    {\r\n        key:'B5',\r\n        value:'B5'\r\n    },\r\n    {\r\n        key:'Legal',\r\n        value:'Legal'\r\n    },\r\n    {\r\n        key:'Letter',\r\n        value:'Letter'\r\n    },\r\n    {\r\n        key:'Statement',\r\n        value:'Statement'\r\n    },\r\n    {\r\n        key:'Tabloid',\r\n        value:'Tabloid'\r\n    }\r\n];","import { Component, OnInit,AfterViewInit, Input, EventEmitter, ViewChild, LOCALE_ID, Inject } from '@angular/core';\r\nimport { PrintFormat } from '../entitys/printFormat';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { PrintSetting } from '../entitys/outputoptions/printsetting';\r\nimport { PrintOritation } from '../entitys/enums/printOritation';\r\nimport { PaperKind } from '../entitys/outputoptions/paperkind';\r\nimport { BsModalRef } from '@farris/ui-modal';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { LocalLangPipe } from '../local.pipe';\r\n\r\n@Component({\r\n  selector: 'lib-formatlistjob',\r\n  templateUrl: './formatlistjob.component.html',\r\n  styleUrls: ['./formatlistjob.component.css']\r\n})\r\nexport class FormatlistjobComponent implements OnInit {\r\n  // @ViewChild('printjob') printjob: DialogComponent;\r\n\r\n  @Input() public formats : PrintFormat[];\r\n  @Input() public boxlist : any[];\r\n\r\n  print: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  // dlg:BsModalRef;\r\n  paperlist = [];\r\n  layoutlist = [];\r\n  columns = [];\r\n  //æ¯å¦å±ç¤ºæ ¼å¼åè¡¨\r\n  isShowFormat = true;\r\n  //æå°ç±»å0:è¡¨åæå°ï¼1:éä»¶æå°\r\n  printType = 0;\r\n  height=0;//é»è®¤ä¸º0ï¼æ ¹æ®çº¸å¼ å¤§å°æ¥\r\n  width=0;//é»è®¤ä¸º0,æ ¹æ®çº¸å¼ å¤§å°æ¥\r\n  top=0;\r\n  bottom=0;\r\n  left=0;\r\n  right=0;\r\n  copy=1;\r\n  paperkind='A4';\r\n  layout='Portrait';\r\n  printter:string;\r\n  printboxid='';\r\n  formatId:string;\r\n  //èªå®ä¹çº¸å¼ \r\n  isCustomPaper=false;\r\n  //èªå®ä¹é¡µè¾¹è·\r\n  isCustomMargin=false;\r\n\r\n  custompaper='èªå®ä¹çº¸å¼ :';\r\n  custommargin='èªå®ä¹é¡µè¾¹è·:';\r\n\r\n  localepip : LocalLangPipe;\r\n  constructor(private notifyService: NotifyService,\r\n    @Inject(LOCALE_ID) localeid:string) { \r\n      \r\n      debugger;\r\n      // localeid = localStorage.getItem(\"languageCode\") || localeid;\r\n      // this.localepip = new LocalLangPipe(localeid);\r\n      \r\n  }\r\n\r\n  ngOnInit() {\r\n    debugger;\r\n    \r\n    this.custompaper = this.localepip.transform('custompaper');\r\n    this.custommargin = this.localepip.transform('custommargin');\r\n\r\n    this.columns = [\r\n      {field: 'code', title: this.localepip.transform('formatcode')},\r\n      {field: 'name', title: this.localepip.transform('formatname')},\r\n    ];\r\n    //çº¸å¼ \r\n    this.paperlist = PaperKind;\r\n    //å¸å±\r\n    this.layoutlist = [\r\n      {\r\n        key:'Portrait',\r\n        value:this.localepip.transform('portrait')\r\n      },\r\n      {\r\n        key:'Landscape',\r\n        value:this.localepip.transform('landscape')\r\n      }\r\n    ];\r\n    \r\n  }\r\n  \r\n  printerSelectChange(rowdata: any){\r\n    this.printboxid = rowdata.data.boxId;\r\n  }\r\n\r\n  selectChange(rowdata: any){\r\n    this.formatId = rowdata.id;\r\n  }\r\n\r\n  printJob(){\r\n\r\n    if(this.checkBeforePrint()){\r\n      const ps = new PrintSetting();\r\n      ps.bottom = this.bottom;\r\n      ps.top = this.top;\r\n      ps.left = this.left;\r\n      ps.right = this.right;\r\n      ps.height = this.height;\r\n      ps.width = this.width;\r\n      ps.copys = this.copy;\r\n      ps.paperName = this.paperkind;\r\n      if(this.isCustomPaper){\r\n        ps.centerPrint = false;\r\n      }else{\r\n        ps.centerPrint = true;\r\n      }\r\n\r\n      if(PrintOritation.Landscape.toString() == this.layout){\r\n        ps.printOritation = PrintOritation.Landscape;\r\n      }else{\r\n        ps.printOritation = PrintOritation.Portrait;\r\n      }\r\n      \r\n      this.print.emit({\r\n        id:this.formatId,\r\n        boxId:this.printboxid,\r\n        printter:this.printter,\r\n        printSetting:ps\r\n      });  \r\n    }\r\n  }\r\n\r\n  private checkBeforePrint(){\r\n    if(!this.formatId && this.printType!=1){\r\n      this.notifyService.warning(this.localepip.transform('selectformat'));\r\n      return false;\r\n    }else if(!this.printter){\r\n      this.notifyService.warning(this.localepip.transform('selectprinter'));\r\n      return false;\r\n    }else if(!this.layout){\r\n      this.notifyService.warning(this.localepip.transform('selectlayout'));\r\n      return false;\r\n    }else if(!this.paperkind && this.height==0 && this.width==0){\r\n      this.notifyService.warning(this.localepip.transform('nopapersize'));\r\n      return false;\r\n    }else if(!this.printboxid){\r\n      this.notifyService.warning(this.localepip.transform('noagent'));\r\n      return false;\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n}\r\n","export const LANG_RESOURCES = {\r\n    'zh-CHS': {\r\n        'printview': 'æå°é¢è§',\r\n        'printformat':'æå°æ ¼å¼',\r\n        'printdesigner':'æå°è®¾è®¡å¨',\r\n        'printset':'æå°éç½®',\r\n        'printer':'æå°æº',\r\n        'print':'æå°',\r\n        'cancel':'åæ¶',\r\n        'sendprintjob':'å·²æååéæå°ä»»å¡',\r\n        'appurlerror':'æªéç½®æ­£ç¡®çappUrl',\r\n        'formatcode':'æ ¼å¼ç¼å·',\r\n        'formatname':'æ ¼å¼åç§°',\r\n        'portrait':'çºµå',\r\n        'landscape':'æ¨ªå',\r\n        'selectprinter':'è¯·éæ©æå°æº',\r\n        'selectformat':'è¯·éæ©æå°æ ¼å¼',\r\n        'selectlayout':'è¯·éæ©å¸å±',\r\n        'noagent':'æå°æºå¯¹åºçæå°ä»£çä¸ºç©º,åç»­æå°å°æ æ³å®ä½æå°æº',\r\n        'nopapersize':'çº¸å¼ åèªå®ä¹å¤§å°ä¸å¯åæ¶ä¸ºç©º',\r\n        'paper':'çº¸å¼ ',\r\n        'paperway':'çº¸å¼ æ¹å',\r\n        'copys':'æå°ä»½æ°',\r\n        'length':'é¿(åç±³)',\r\n        'width':'å®½(åç±³)',\r\n        'top':'ä¸(åç±³)',\r\n        'bottom':'ä¸(åç±³)',\r\n        'left':'å·¦(åç±³)',\r\n        'right':'å³(åç±³)',\r\n        'custompaper':'èªå®ä¹çº¸å¼ :',\r\n        'custommargin':'èªå®ä¹é¡µè¾¹è·:',\r\n        'PrintWithoutPreview':'ç´æ¥æå°',\r\n        'PrintWithBox':'è¿ç¨æå°',\r\n    },\r\n    'en-US': {\r\n        'printview': 'Print View',\r\n        'printformat':'Print Format',\r\n        'printdesigner':'Print Designer',\r\n        'printset':'Print Setting',\r\n        'print':'Print',\r\n        'cancel':'Cancel',\r\n        'printer':'Printer',\r\n        'sendprintjob':'Send Print Job Success',\r\n        'appurlerror':'AppUrl Error',\r\n        'formatcode':'Format Code',\r\n        'formatname':'Format Name',\r\n        'portrait':'Portrait',\r\n        'landscape':'Landscape',\r\n        'selectprinter':'Please Select Printer',\r\n        'selectformat':'Please Select Format',\r\n        'selectlayout':'Please Select Layout',\r\n        'noagent':'Agent Is Empty,It May Can Not Locate The Printer',\r\n        'nopapersize':'Paper Size Is Not Allowed Empty',\r\n        'paper':'Paper',\r\n        'paperway':'Paper Direction',\r\n        'copys':'Copy',\r\n        'length':'Length(centimetre)',\r\n        'width':'Width(centimetre)',\r\n        'top':'Top(centimetre)',\r\n        'bottom':'Bottom(centimetre)',\r\n        'left':'Left(centimetre)',\r\n        'right':'Right(centimetre)',\r\n        'custompaper':'Custom Paper:',\r\n        'custommargin':'Custom Margin:',\r\n        'PrintWithoutPreview':'Direct Print',\r\n        'PrintWithBox':'Remote Print',\r\n    },\r\n    'en': {\r\n        'printview': 'Print View',\r\n        'printformat':'Print Format',\r\n        'printdesigner':'Print Designer',\r\n        'printset':'Print Setting',\r\n        'print':'Print',\r\n        'cancel':'Cancel',\r\n        'printer':'Printer',\r\n        'sendprintjob':'Send Print Job Success',\r\n        'appurlerror':'AppUrl Error',\r\n        'formatcode':'Format Code',\r\n        'formatname':'Format Name',\r\n        'portrait':'Portrait',\r\n        'landscape':'Landscape',\r\n        'selectprinter':'Please Select Printer',\r\n        'selectformat':'Please Select Format',\r\n        'selectlayout':'Please Select Layout',\r\n        'noagent':'Agent Is Empty,It May Can Not Locate The Printer',\r\n        'nopapersize':'Paper Size Is Not Allowed Empty',\r\n        'paper':'Paper',\r\n        'paperway':'Paper Direction',\r\n        'copys':'Copy',\r\n        'length':'Length(centimetre)',\r\n        'width':'Width(centimetre)',\r\n        'top':'Top(centimetre)',\r\n        'bottom':'Bottom(centimetre)',\r\n        'left':'Left(centimetre)',\r\n        'right':'Right(centimetre)',\r\n        'custompaper':'Custom Paper:',\r\n        'custommargin':'Custom Margin:',\r\n        'PrintWithoutPreview':'Direct Print',\r\n        'PrintWithBox':'Remote Print',\r\n    },\r\n    'zh-CHT': {\r\n        'printview': 'æå°é è¦½',\r\n        'printformat':'æå°æ ¼å¼',\r\n        'printdesigner':'æå°è¨­è¨å¨',\r\n        'printset':'æå°éç½®',\r\n        'printer':'æå°æ©',\r\n        'print':'æå°',\r\n        'cancel':'åæ¶',\r\n        'sendprintjob':'å·²æåç¼éæå°ä»»å',\r\n        'appurlerror':'æªéç½®æ­£ç¢ºçappUrl',\r\n        'formatcode':'æ ¼å¼ç·¨è',\r\n        'formatname':'æ ¼å¼åç¨±',\r\n        'portrait':'ç¸±å',\r\n        'landscape':'æ©«å',\r\n        'selectprinter':'è«é¸ææå°æ©',\r\n        'selectformat':'è«é¸ææå°æ ¼å¼',\r\n        'selectlayout':'è«é¸æä½å±',\r\n        'noagent':'æå°æ©å°æçæå°ä»£ççºç©º,å¾çºæå°å°ç¡æ³å®ä½æå°æ©',\r\n        'nopapersize':'ç´å¼µåèªå®ç¾©å¤§å°ä¸å¯åæçºç©º',\r\n        'paper':'ç´å¼µ',\r\n        'paperway':'ç´å¼µæ¹å',\r\n        'copys':'æå°ä»½æ¸',\r\n        'length':'é·(åç±³)',\r\n        'width':'å¯¬(åç±³)',\r\n        'top':'ä¸(åç±³)',\r\n        'bottom':'ä¸(åç±³)',\r\n        'left':'å·¦(åç±³)',\r\n        'right':'å³(åç±³)',\r\n        'custompaper':'èªå®ç¾©ç´å¼µ:',\r\n        'custommargin':'èªå®ç¾©é éè·:',\r\n        'PrintWithoutPreview':'ç´æ¥æå°',\r\n        'PrintWithBox':'é ç¨æå°',\r\n    },\r\n};","import { Pipe, PipeTransform, Inject, LOCALE_ID } from '@angular/core';\r\nimport { LANG_RESOURCES } from './i18n/language.resource';\r\n\r\n@Pipe({ name: 'locale' })\r\nexport class LocalLangPipe implements PipeTransform {\r\n    private readonly defaultLang: string = \"zh-CHS\";\r\n    private langCode: string;\r\n    private lang: {};\r\n    constructor(\r\n        @Inject(LOCALE_ID) localeId: string\r\n    ) {\r\n        this.langCode = localStorage.getItem(\"languageCode\") || localeId || this.defaultLang;\r\n        this.lang = LANG_RESOURCES[this.langCode] || LANG_RESOURCES[this.defaultLang];\r\n    }\r\n    transform(name: string): any {\r\n        return this.lang[name] || name;\r\n    }\r\n}\r\n\r\n","import { Injectable, Injector, ApplicationRef, EventEmitter, Query, LOCALE_ID } from '@angular/core';\r\nimport { ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, ViewContainerRef } from '@angular/core';\r\n\r\nimport { CloudprintDesignerComponent } from './cloudprint-designer/cloudprint-designer.component';\r\nimport { CloudprintViewerComponent } from './cloudprint-viewer/cloudprint-viewer.component';\r\nimport { PrintEntity } from './entitys/printEntity';\r\n\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { OutputOptions } from './entitys/outputoptions/outputOptions';\r\nimport { Urls } from './utils/cloudprint.Urls';\r\nimport { SourceOptions } from './entitys/datasourceoptions/sourceOptions';\r\nimport { SourceFilterOptions } from './entitys/datasourceoptions/sourceFilterOptions';\r\nimport { BOOptions } from './entitys/datasourceoptions/booptions';\r\nimport { AppService, AppOptions, FrameworkVariableService } from '@gsp-sys/rtf-common';\r\nimport { FileType } from './entitys/outputoptions/fileType';\r\nimport { CmpType } from './entitys/enums/cmpType';\r\nimport { OutputParam } from './entitys/outputoptions/outputParam';\r\nimport { PrintFormatService } from './services/printFormatService';\r\nimport { SourceType } from './entitys/enums/sourceType';\r\n\r\nimport { PrintFormat } from './entitys/printFormat';\r\n\r\n\r\nimport {\r\n  WindowRef,\r\n  WindowCloseResult,\r\n  WindowService\r\n} from '@progress/kendo-angular-dialog';\r\nimport { FormatlistComponent } from './cloudprint-formatlist/formatlist.component';\r\nimport { Utils } from './utils/cloudprint.utils';\r\nimport { CloudprintdesignerService } from './cloudprint-designer/cloudprint-designer.service';\r\nimport { CloudprintviewerService } from './cloudprint-viewer/cloudprint-viewer.service';\r\nimport { Subject } from 'rxjs';\r\nimport { QueryType } from './entitys/enums/querytype';\r\nimport { PrintType } from './entitys/enums/printtype';\r\nimport { DataValidator } from './utils/cloudprint.datavalidator';\r\nimport { BaseSourceOptions } from './entitys/datasourceoptions/basesourceoptions';\r\nimport { FormatlistjobComponent } from './cloudprint-formatlistjob/formatlistjob.component';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { LocalLangPipe } from './local.pipe';\r\n\r\n\r\n@Injectable()\r\nexport class CloudprintService {\r\n  // ç»ä»¶å¼ç¨åé\r\n  private designercomponentRef: ComponentRef<CloudprintDesignerComponent>;\r\n  private viewercomponentRef: ComponentRef<CloudprintViewerComponent>;\r\n  /**\r\n   * Saasåºç¨éè¿æé å½æ°æ³¨å¥çViewContainerRefå¯¹è±¡\r\n   * \r\n   * ä¾å­ï¼\r\n   *    xxx.html\r\n   *          <ng-container #prndesigner></ng-container>\r\n   * \r\n   *    xxx.component.ts\r\n   *          @ViewChild('prndesigner', {read: ViewContainerRef}) \r\n   *          private container: ViewContainerRef;\r\n   */\r\n  viewContainer: ViewContainerRef;\r\n\r\n  /**\r\n   * æå°åæ°å®ä½\r\n   */\r\n  printEntity = new PrintEntity();\r\n\r\n  /**\r\n   * è®¾ç½®PrintEntityåæ°\r\n   * @description å¦æå¤çnewæ°çPrintEntityï¼åéè¦è°ç¨è¯¥æ¹æ³åæ­¥serviceçentity\r\n   *              å¤çæ²¡ænewæ°çPrintEntityï¼åä¸éè¦è°ç¨è¯¥æ¹æ³\r\n   */\r\n  set setPrintEntity(entity) {\r\n    this.printEntity = entity;\r\n    // this.designerSrv.printEntity = this.printEntity;\r\n    // this.viewerSrv.printEntity = this.printEntity;\r\n    this.formatSrv.printEntity = this.printEntity;\r\n  }\r\n\r\n  localeid:string;\r\n  localpipe: LocalLangPipe;\r\n\r\n  constructor(\r\n    private formatSrv: PrintFormatService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private designerSrv: CloudprintdesignerService,\r\n    private viewerSrv: CloudprintviewerService,\r\n    private injector: Injector,\r\n    private applicationRef: ApplicationRef,\r\n    private notifyService: NotifyService,\r\n    private appService: AppService,\r\n    private windowService: WindowService,\r\n    private modalService: BsModalService,\r\n    ) {\r\n      \r\n    // è®¾ç½®printEntityçé»è®¤å¼\r\n    this.printEntity.appUrl = Urls.CloudPrintBaseUrl;\r\n    this.printEntity.isUseMetaData = true;\r\n    this.printEntity.language = localStorage.getItem(\"languageCode\") || 'zh-CHS';\r\n    \r\n    // å°printEntityè®¾ç½®å°designer serviceä¸ï¼ä¸è®¾ç½®ï¼åé¢è°ç¨æå¡ä¼åç°æå¡çprintEntityæ¯ç©ºçï¼\r\n    // this.designerSrv.printEntity = this.printEntity;\r\n    // å°printEntityè®¾ç½®å°viewer serviceä¸ï¼ä¸è®¾ç½®ï¼åé¢è°ç¨æå¡ä¼åç°æå¡çprintEntityæ¯ç©ºçï¼\r\n    // this.viewerSrv.printEntity = this.printEntity;\r\n    this.formatSrv.printEntity = this.printEntity;\r\n\r\n    if(this.injector)\r\n    {\r\n      this.modalService = this.injector.get(BsModalService);\r\n      this.localeid = localStorage.getItem(\"languageCode\") || this.injector.get(LOCALE_ID);\r\n      this.localpipe = new LocalLangPipe(this.localeid);\r\n    } \r\n   \r\n  }\r\n\r\n\r\n  //#region æ ¼å¼éæ©åè¡¨ç¸å³æ¥å£\r\n  windowRef: WindowRef = undefined;\r\n\r\n  /**\r\n   * è¿è¡æ¶æå°æ¶æ ¹æ®ç»´åº¦è¿æ»¤å¼¹åºæå°æ ¼å¼éæ©åè¡¨\r\n   * @param dataSourceId æ°æ®æºId\r\n   * @param filter æ¯å¦è¿æ»¤æ¡ä»¶\r\n   * @param beOptions beOptions\r\n   * @param options è¾åºoptions\r\n   * @param ele æå®çelementåç´ \r\n   */\r\n  private openFormatListByDimension(beOptions:BaseSourceOptions, options: OutputOptions, ele:any,filter:boolean){\r\n    const that = this;\r\n    const dataSourceId = beOptions.SourceId;\r\n    const billCategoryId = beOptions.billCategoryId;\r\n    return this.formatSrv.getPrintFormatByDataSrouceAndDimension(billCategoryId,dataSourceId,(beOptions as any).FirstDimensionVal,(beOptions as any).SecondDimensionVal).then((res)=>{\r\n      const format : PrintFormat[] = (res != null && res.length != undefined) ? res : [];\r\n\r\n      //åªæä¸æ¡æå°æ ¼å¼ï¼ç´æ¥è¾åºé¢è§\r\n      if(format.length === 1){\r\n        return that.outputBySingleSelectionFormat({\r\n          'id': format[0].id, \r\n          'isFilter' : filter, \r\n          'beoptions': Object.assign({}, beOptions), \r\n          'options':options,\r\n          'isJob': false, \r\n          'printerName':'',\r\n          'boxId':'',\r\n          'printSetting':null,\r\n          'ele':ele});\r\n      }\r\n\r\n      const factory = that.resolver.resolveComponentFactory(FormatlistComponent);\r\n      const printsetting = factory.create(that.injector);\r\n      \r\n      printsetting.instance.formats = [...format];\r\n      printsetting.instance.localepip = that.localpipe;\r\n\r\n      const dlg = this.modalService.show(printsetting,{\r\n        title: this.localpipe.transform('printformat'),\r\n        width:400, \r\n        height: 500,\r\n        showButtons: true,\r\n        showMaxButton:false,\r\n        buttons: [\r\n          { text: this.localpipe.transform('print'), cls: 'btn btn-primary', handle: () => {\r\n            printsetting.instance.printJob();\r\n          }},\r\n          { text: this.localpipe.transform('cancel'), cls: 'btn btn-secondary', handle: () => {\r\n            dlg.close();\r\n          }}\r\n        ],\r\n      });\r\n      // printsetting.instance.dlg = dlg;\r\n      //è®¢éäºå¼¹åºçæ ¼å¼éæ©åè¡¨çå³é­äºä»¶\r\n      printsetting.instance.print.subscribe((data) => {\r\n          dlg.close();\r\n          return that.outputBySingleSelectionFormat({\r\n              'id': data.id, \r\n              'isFilter' : filter, \r\n              'beoptions': Object.assign({}, beOptions), \r\n              'options':options, \r\n              'isJob': false,\r\n              'printerName':'',\r\n              'boxId':'',\r\n              'printSetting':null,\r\n              'ele':ele});\r\n      });\r\n      \r\n    });\r\n  }\r\n\r\n  /**\r\n   * åå°æå°ä»»å¡çæ ¼å¼éæ©åæå°éç½®åè¡¨\r\n   */\r\n  private openFormatListByDimension4Job(beOptions:Array<BaseSourceOptions>, options: OutputOptions,filter:boolean,isMulti:boolean){\r\n    const that = this;\r\n\r\n    if(isMulti){//æ¹éæå°\r\n      return this.formatSrv.getPrintDevice().then((data)=>{\r\n        const device = data || [];\r\n\r\n        let ids = '';\r\n        beOptions.forEach(x=>ids+=x.FormatId+',');\r\n  \r\n        const factory = that.resolver.resolveComponentFactory(FormatlistjobComponent);\r\n        const printsetting = factory.create(that.injector);\r\n  \r\n        printsetting.instance.boxlist = device;\r\n        printsetting.instance.formatId = ids.length>0?ids.substr(0,ids.length-1):ids;\r\n        printsetting.instance.isShowFormat = false;\r\n        printsetting.instance.localepip = that.localpipe;\r\n\r\n        const dlg = this.modalService.show(printsetting,{\r\n          title: this.localpipe.transform('printset'),\r\n          width: 800, \r\n          height: 500,\r\n          showButtons: true,\r\n          showMaxButton:false,\r\n          buttons: [\r\n            { text: this.localpipe.transform('print'), cls: 'btn btn-primary', handle: () => {\r\n              printsetting.instance.printJob();\r\n            }},\r\n            { text: this.localpipe.transform('cancel'), cls: 'btn btn-secondary', handle: () => {\r\n              dlg.close();\r\n            }}\r\n          ],\r\n        });  \r\n        //è®¢éäºå¼¹åºçæ ¼å¼éæ©åè¡¨çå³é­äºä»¶\r\n        printsetting.instance.print.subscribe((data) => {\r\n            dlg.close();\r\n            return that.outputByMultiSelectionFormat({\r\n              'isFilter' : filter, \r\n              'beoptions': [...beOptions], \r\n              'options': Object.assign({}, options),\r\n              'isJob': true,\r\n              'printerName':data.printter,\r\n              'boxId':data.boxId,\r\n              'printSetting':data.printSetting,\r\n              'ele':null});\r\n        });\r\n      });\r\n    }else{\r\n      const billCategoryId = beOptions[0].billCategoryId;\r\n      const dataSourceId = beOptions[0].SourceId;\r\n      return this.formatSrv.getPrintFormatAndDevice(billCategoryId,dataSourceId,(beOptions as any).FirstDimensionVal,(beOptions as any).SecondDimensionVal).then((res)=>{\r\n        const format = res.format || [];\r\n        const device = res.device || [];\r\n        //åªæä¸æ¡æå°æ ¼å¼ï¼åä¸ç¨åéæ©æ ¼å¼\r\n        if(format.length === 1){\r\n          beOptions[0].FormatId = format[0].id;\r\n        }\r\n  \r\n        const factory = that.resolver.resolveComponentFactory(FormatlistjobComponent);\r\n        const printsetting = factory.create(that.injector);\r\n   \r\n        printsetting.instance.formats = format;\r\n        printsetting.instance.boxlist = device;\r\n        printsetting.instance.formatId = beOptions[0].FormatId;\r\n        printsetting.instance.isShowFormat = beOptions[0].FormatId?false:true;\r\n        printsetting.instance.localepip = that.localpipe;\r\n\r\n        const dlg = this.modalService.show(printsetting,{\r\n          title: this.localpipe.transform('printset'),\r\n          width: 800, \r\n          height: 500,\r\n          showButtons: true,\r\n          showMaxButton:false,\r\n          buttons: [\r\n            { text: this.localpipe.transform('print'), cls: 'btn btn-primary', handle: () => {\r\n              printsetting.instance.printJob();\r\n            }},\r\n            { text: this.localpipe.transform('cancel'), cls: 'btn btn-secondary', handle: () => {\r\n              dlg.close();\r\n            }}\r\n          ],\r\n        });  \r\n        //è®¢éäºå¼¹åºçæ ¼å¼éæ©åè¡¨çå³é­äºä»¶\r\n        printsetting.instance.print.subscribe((data) => {\r\n            dlg.close();\r\n            return that.outputBySingleSelectionFormat({\r\n              'id': data.id, \r\n              'isFilter' : filter, \r\n              'beoptions': Object.assign({}, beOptions[0]), \r\n              'options': Object.assign({}, options),\r\n              'isJob': true,\r\n              'printerName':data.printter,\r\n              'boxId':data.boxId,\r\n              'printSetting':data.printSetting,\r\n              'ele':null});\r\n        });\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  // éäºæ ¼å¼åçè¾åº\r\n  private outputBySingleSelectionFormat(res: any): any{\r\n    console.log('éå®æ ¼å¼åå¤æ¸²æ: ' + JSON.stringify(res));\r\n    const self = this;\r\n\r\n    if(!res.id){\r\n      return;\r\n    }\r\n  \r\n    res.beoptions.FormatId = res.id;\r\n    res.options.DeviceId = res.boxId;\r\n    res.options.printerName = res.printerName;\r\n    res.options.printSetting = res.printSetting;\r\n    res.options.printJob = res.isJob;\r\n\r\n    if(res.isJob){//åå°æå°\r\n      if(res.isFilter === true) {\r\n        return this.formatSrv.printSingleByFilter(res.beoptions, res.options, res.su,'CloudPrint')\r\n        .then(()=>{\r\n          self.notifyService.success(this.localpipe.transform('sendprintjob'));\r\n        });\r\n      }else{\r\n        return this.formatSrv.printSingleById(res.beoptions, res.options, res.su,'CloudPrint')\r\n        .then(()=>{\r\n          self.notifyService.success(this.localpipe.transform('sendprintjob'));\r\n        });\r\n      }\r\n    }else{//åå°æå°\r\n      if(res.ele) {//æeleï¼åå¼æè´è´£æ¸²æ\r\n        if(res.isFilter === true) {\r\n          if(res.ele==='download'){\r\n            return this.formatSrv.printSingleByFilter(res.beoptions, res.options, res.su,'CloudPrint')\r\n            .then((data) => {\r\n              self.downloadFile(data);  \r\n            }); \r\n          }else{\r\n            self.openRendedViewer(res.ele,null,res.options,[res.beoptions],res.isFilter);\r\n          }  \r\n        } else {  \r\n          if(res.ele==='download'){\r\n            return this.formatSrv.printSingleById(res.beoptions, res.options, res.su,'CloudPrint')\r\n            .then((data) => {\r\n              self.downloadFile(data);  \r\n            }); \r\n          }else{\r\n            self.openRendedViewer(res.ele,null,res.options,[res.beoptions],res.isFilter);\r\n          }\r\n        }\r\n      }else{//æ²¡æeleï¼ååªè¿ååå°çæ¸²æç»æï¼ç»è°ç¨æ¹èªå·±å¤ç\r\n        if(res.filter === true){\r\n          return this.formatSrv.printSingleByFilter(res.beoptions, res.options, res.su,'CloudPrint');\r\n        }else{\r\n          return this.formatSrv.printSingleById(res.beoptions, res.options, res.su,'CloudPrint');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private outputByMultiSelectionFormat(res: any): any{\r\n    console.log('éå®æ ¼å¼åå¤æ¸²æ: ' + JSON.stringify(res));\r\n    const self = this;\r\n\r\n    res.options.DeviceId = res.boxId;\r\n    res.options.printerName = res.printerName;\r\n    res.options.printSetting = res.printSetting;\r\n    res.options.printJob = res.isJob;\r\n\r\n    if(res.isJob){//åå°æå°\r\n      if(res.isFilter === true) {\r\n        return this.formatSrv.printMultiByFilter(res.beoptions, res.options, res.su,'CloudPrint')\r\n        .then(()=>{\r\n          self.notifyService.success(this.localpipe.transform('sendprintjob'));\r\n        });\r\n      }else{\r\n        return this.formatSrv.printMultiById(res.beoptions, res.options, res.su,'CloudPrint')\r\n        .then(()=>{\r\n          self.notifyService.success(this.localpipe.transform('sendprintjob'));\r\n        });\r\n      }\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region å¯¹å¤è®¾è®¡å¨åé¢è§å¨æ¥å£\r\n\r\n  /**\r\n   * å¨å½åé¡µé¢Bodyä¸æå¼Designer\r\n   * @param format æ ¼å¼\r\n   * @param data æ°æ®\r\n   * @param formatId æ ¼å¼id\r\n   * @param dataIds æ°æ®ids\r\n   */\r\n  openDesigner(format: string, data: object, formatId: string, dataIds: string) {\r\n    this.openDesignerInternal(window.document.body, format, data, formatId, dataIds);\r\n  }\r\n\r\n  /**\r\n   * å¨å½åé¡µé¢çæå®çåç´ ä¸æå¼Designer\r\n   * @param ele æå®çåç´ \r\n   * @param format æ ¼å¼\r\n   * @param data æ°æ®\r\n   * @param formatId æ ¼å¼id\r\n   * @param dataIds æ°æ®ids\r\n   */\r\n  openDesignerOnEle(ele: HTMLElement, format: string, data: object, formatId: string, dataIds: string) {\r\n    this.openDesignerInternal(ele, format, data, formatId, dataIds);\r\n  }\r\n\r\n  /**\r\n   * å¨æ°çtabé¡µé¢ä¸æå¼Designer\r\n   * @param format æ ¼å¼\r\n   * @param data æ°æ®\r\n   * @param formatId æ ¼å¼id\r\n   * @param dataIds æ°æ®ids\r\n   */\r\n  openDesignerNewTab(format: string, data: object, formatId: string, dataIds: string) {\r\n    this.openDesignerInternal(null, format, data, formatId, dataIds);\r\n  }\r\n  \r\n  /**\r\n   * è¿è¡æ¶å¨å½åé¡µé¢çæå®çåç´ ä¸æå¼Designer\r\n   * @param ele æå®çåç´ \r\n   * @param formatCode æ ¼å¼ç¼å·\r\n   * @param formatName æ ¼å¼åç§°\r\n   * @param bizObjectId ä¸å¡å¯¹è±¡Id\r\n   * @param datasourceId æ°æ®æºId, BEId/VOId/BesinessObjectClassInfo\r\n   * @param sourceType æ°æ®æºç±»å, SourceType.BE/SourceType.VO/SourceType.BO\r\n   */\r\n  openDesignerOnEleForRuntime(ele: HTMLElement,formatId: string, formatCode: string, formatName: string, bizObjectId: string, datasourceId: string, sourceType: SourceType) {\r\n    this.printEntity.printFormat = new PrintFormat();\r\n    this.printEntity.isUseMetaData = true;\r\n\r\n    if(formatId && formatId.length>0){\r\n      // ç¼è¾\r\n      this.formatSrv.getNewSourceFormatByFormatId(formatId)\r\n      .then((res) => {\r\n        this.printEntity.printFormat = res;\r\n        //æå¼è®¾è®¡å¨\r\n        this.openDesignerOnEle(ele, this.printEntity.printFormat.content, {}, '', '');\r\n      });\r\n    }else{\r\n      //åå§å\r\n      this.initPrintFormat(datasourceId, sourceType)\r\n      .then((res)=>{\r\n        this.printEntity.printFormat.id = Utils.uuid();\r\n        this.printEntity.printFormat.code = formatCode;\r\n        this.printEntity.printFormat.name = formatName;\r\n\r\n        this.printEntity.printFormat.bizObjectId = bizObjectId;\r\n        this.printEntity.printFormat.dataSourceId = datasourceId;\r\n        this.printEntity.printFormat.sourceType = sourceType;\r\n        this.printEntity.printFormat.isUseTemplate = false;\r\n        this.printEntity.printFormat.content = res.format; //æå°æ ¼å¼mrt   \r\n        this.printEntity.printFormat.dataSchema =  res.printschema;//PrintDataSchemaViewæè¿°   \r\n\r\n        //æå¼è®¾è®¡å¨\r\n        this.openDesignerOnEle(ele, this.printEntity.printFormat.content, {}, '', '');\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * å¨æå®çåç´ ä¸æå¼Designer(åç«¯æ¸²æ)\r\n   * @param ele æå®çåç´ \r\n   * @param format æ ¼å¼\r\n   * @param data æ°æ®\r\n   * @param formatId æ ¼å¼id\r\n   * @param dataIds æ°æ®ids\r\n   */\r\n  private openDesignerInternal(ele: HTMLElement, format: string, data: object, formatId: string, dataIds: string) {\r\n    if (ele) {\r\n      this.printEntity.format = format;\r\n      this.printEntity.data = data;\r\n      this.printEntity.foramtId = formatId;\r\n      this.printEntity.dataId = dataIds;\r\n      this.createDesignerRef();\r\n      // ç»è§å¾æ·»å èæ£æ¥(è¿ä¸ªæ¹å¼æ¯éå@ViewChildçæ¹æ³ä½¿ç¨ç)\r\n      // this.applicationRef.attachView(this.designercomponentRef.hostView);\r\n      // å°åå»ºå¥½çç»ä»¶å¼ç¨appendå°æå®æ ç­¾ä¸\r\n      // è¿éå°å¨æç»ä»¶å è½½å°æå®çhtmléæä¸¤ç§æ¹å¼ï¼\r\n      //  1.ä¸é¢ç@ViewChil\r\n      //  2.å¦ä¸çele.appendChild(this.getComponentRootNode(this.viewercomponentRef));æ¹å¼\r\n      ele.appendChild(this.getComponentRootNode(this.designercomponentRef)); \r\n    } else {\r\n      const param = new OutputParam();\r\n      param.prnFormat = format;\r\n      param.prnData = data;\r\n      param.prnFormatId = formatId;\r\n      param.prnDataId = dataIds;\r\n      param.prnType = CmpType.Designer;\r\n\r\n      this.appService.openAppByOptions({\r\n        appType:'app',\r\n        funcId:'',\r\n        tabName:this.localpipe.transform('printdesigner'),\r\n        appId:'cloudprint-view-index',\r\n        appEntrance:'cloudprint-view-index',\r\n        tabId:Utils.uuid(),\r\n        entityParams:{\r\n          foramtParam:param,\r\n          formatEntity:null,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è·åç©ºç½æå°æ ¼å¼\r\n   */\r\n  private initPrintFormat(datasourceId: string, sourceType: SourceType):Promise<any>{\r\n\r\n    if(sourceType === SourceType.BE)\r\n    {\r\n      //boæ°æ®æº\r\n      return this.formatSrv.createPrintFormatWithBE(datasourceId);\r\n    }\r\n    else if (sourceType === SourceType.VO) \r\n    {\r\n      // voæ°æ®æº\r\n      return this.formatSrv.createPrintFormatWithVO(datasourceId);\r\n    }\r\n    else\r\n    {\r\n      // é»è®¤ç¨BEæ°æ®æº\r\n      return this.formatSrv.createPrintFormatWithBO(datasourceId);\r\n    }  \r\n  }\r\n\r\n  /**\r\n   * åå»ºDesigneræä»¶çå¼ç¨å¯¹è±¡\r\n   */\r\n  private createDesignerRef(): void {\r\n\r\n    const factory = this.resolver.resolveComponentFactory(CloudprintDesignerComponent);\r\n    if (!this.viewContainer) {\r\n      this.designercomponentRef = factory.create(this.injector);\r\n      this.applicationRef.attachView(this.designercomponentRef.hostView);\r\n\r\n    } else {\r\n      this.viewContainer.clear();\r\n      this.designercomponentRef = this.viewContainer.createComponent(factory);\r\n    }\r\n\r\n    // åæ­¥ç»ä»¶åç»ä»¶ä¸ä¾èµçæå¡çprintEntity\r\n    this.designercomponentRef.instance.setPrintEntity(this.printEntity);\r\n    // this.designercomponentRef.instance.localeid = this.localeid;\r\n\r\n    // è®¢ééåºäºä»¶\r\n    this.designercomponentRef.instance.printEntity.onExitEvent.subscribe((e) => {\r\n      this.designercomponentRef.destroy();\r\n      if (!this.viewContainer) {\r\n        this.applicationRef.detachView(this.designercomponentRef.hostView);\r\n      } else {\r\n        this.viewContainer.clear();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * æå¼å·²ç»æ¸²æçViewerï¼åç«¯æ¸²æï¼\r\n   * @param ele æå®çåç´ \r\n   * @param data å·²ç»æ¸²æçæ ¼å¼(åç«¯æ¸²ææ¯pdfçäºè¿å¶æµ)\r\n   */\r\n  openRendedViewer(ele: any, data: any, options: OutputOptions,sourceOptions: Array<BaseSourceOptions>=null,isFilter:boolean=false,printEntity:PrintEntity=null,param:any=null) {\r\n    \r\n    if(printEntity!=null){//ç¨å¤ççprintEntityå±æ§è¦çå½åçprintEntityçå±æ§\r\n      // tslint:disable-next-line:forin\r\n      for (const key in printEntity) {\r\n        this.printEntity[key] = printEntity[key];\r\n      }\r\n    }\r\n\r\n    if(data){//æ°æ®å·²æ¸²æï¼ç´æ¥æå°ï¼ä¸å­å¨åå°æå°äº\r\n      this.preViewLocal(ele,data,options,sourceOptions,printEntity,isFilter,param);\r\n    }else{\r\n      this.preViewRemote(ele,options,sourceOptions,isFilter,printEntity,param);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * æå¼å·²ç»æ¸²æçViewerï¼åç«¯æ¸²æ,ç»éä»¶ç¨çï¼\r\n   * @param ele æå®çåç´ \r\n   * @param data å·²ç»æ¸²æçæ ¼å¼(åç«¯æ¸²ææ¯pdfçäºè¿å¶æµ)\r\n   */\r\n  openRendedViewer4Attachment(ele: any, data: any, options: OutputOptions) {\r\n    \r\n    this.openRendedViewer(ele,data,options,null,false,this.printEntity);\r\n  }\r\n\r\n  /**\r\n   * æ¬å°ç´æ¥æå°\r\n   */\r\n  private preViewLocal(ele: any, data: any, options: OutputOptions,sourceOptions: Array<BaseSourceOptions>=null,printEntity:PrintEntity=null,isFilter:boolean,param:any=null){\r\n    const self = this;\r\n\r\n    const b = new Blob([data]);\r\n    const reader = new FileReader();\r\n    reader.readAsArrayBuffer(b);\r\n    reader.onload = async function (e) {\r\n      const rendedFormat = reader.result as any;\r\n      const param = new OutputParam();\r\n      param.prnRendedFormat = btoa(new Uint8Array(rendedFormat) as any);\r\n      param.prnType = CmpType.Viewer;\r\n      param.prnOutputOps = Object.assign({},options);\r\n      param.prnSourceOptions = sourceOptions?[...sourceOptions]:[];\r\n      param.isFilter = isFilter;\r\n\r\n      if (ele === 'tab') {\r\n        self.appService.openAppByOptions({\r\n          appType:'app',\r\n          funcId:'',\r\n          tabName:self.localpipe.transform('printview'),\r\n          appId:'cloudprint-view-index',\r\n          appEntrance:'cloudprint-view-index',\r\n          tabId:Utils.uuid(),\r\n          entityParams:{\r\n            foramtParam:param,\r\n            formatEntity:null,\r\n          },\r\n        });\r\n      } else {\r\n        const remotePrint = await self.formatSrv.isRemotePrint();\r\n        self.createViewerRef();        \r\n        self.printEntity.rendedFormat = rendedFormat;\r\n        self.viewercomponentRef.instance.outputParam = param;\r\n        self.viewercomponentRef.instance.isRemotePrint = remotePrint;\r\n        ele.appendChild(self.getComponentRootNode(self.viewercomponentRef));\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * è¿ç¨æå°\r\n   */\r\n  private async preViewRemote(ele: any, options: OutputOptions,sourceOptions: Array<BaseSourceOptions>=null,isFilter:boolean,printEntity:PrintEntity=null,param:any=null){\r\n    const self = this;\r\n\r\n    const outputparam = new OutputParam();\r\n    outputparam.prnType = CmpType.Viewer;\r\n    outputparam.prnOutputOps = Object.assign({},options);\r\n    outputparam.prnSourceOptions =[...sourceOptions];\r\n    outputparam.isFilter = isFilter;\r\n    if (ele === 'tab') {\r\n\r\n      self.appService.openAppByOptions({\r\n        appType:'app',\r\n        funcId:'',\r\n        tabName:self.localpipe.transform('printview'),\r\n        appId:'cloudprint-view-index',\r\n        appEntrance:'cloudprint-view-index',\r\n        tabId:Utils.uuid(),\r\n        entityParams:{\r\n          foramtParam:outputparam,\r\n          formatEntity:null,\r\n        },\r\n      });\r\n    } else {\r\n      const remotePrint = await self.formatSrv.isRemotePrint();\r\n      self.createViewerRef();\r\n      self.viewercomponentRef.instance.outputParam = outputparam;\r\n      self.viewercomponentRef.instance.isRemotePrint = remotePrint;\r\n      ele.appendChild(self.getComponentRootNode(self.viewercomponentRef));\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * åå»ºVieweræä»¶çå¼ç¨å¯¹è±¡\r\n   */\r\n  private createViewerRef(): void {\r\n\r\n    const factory = this.resolver.resolveComponentFactory(CloudprintViewerComponent);\r\n    if (!this.viewContainer) {\r\n      this.viewercomponentRef = factory.create(this.injector);\r\n      this.applicationRef.attachView(this.viewercomponentRef.hostView);\r\n    } else {\r\n      this.viewContainer.clear();\r\n      this.viewercomponentRef = this.viewContainer.createComponent(factory);\r\n    }\r\n\r\n    // åæ­¥ç»ä»¶åç»ä»¶ä¸ä¾èµçæå¡çprintEntity\r\n    this.viewercomponentRef.instance.setPrintEntity(this.printEntity);\r\n    this.viewercomponentRef.instance.localpipe = this.localpipe;\r\n    // è®¢ééåºäºä»¶\r\n    this.viewercomponentRef.instance.printEntity.onExitEvent.subscribe((e) => {\r\n      this.viewercomponentRef.destroy();\r\n      if (!this.viewContainer) {\r\n        this.applicationRef.detachView(this.viewercomponentRef.hostView);\r\n      } else {\r\n        this.viewContainer.clear();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * å°ComponentRefç±»åçç»ä»¶å¼ç¨è½¬æ¢ä¸ºDOMèç¹ï¼åèèªMaterial2ï¼\r\n   * @param cpRef ç»ä»¶çå¼ç¨å¯¹è±¡\r\n   */\r\n  private getComponentRootNode(cpRef: ComponentRef<any>): HTMLElement {\r\n    return (cpRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n  }\r\n  //#endregion\r\n\r\n  //#region å¯¹å¤æå°æå¡æ¥å£\r\n  /**\r\n   * åæ ¼å¼æ°æ®idæå°\r\n   * suï¼åæ æ¨¡å¼ä¸nginxè·¯ç±çsu\r\n   * \r\n   * 1.å¸¦ç»´åº¦è¿æ»¤æ ¼å¼éæ©å¨\r\n   */\r\n  printSingleById(beoptions: SourceOptions, options: OutputOptions, ele: any,su=null,param=null): any {\r\n    if(DataValidator.checkAppUrl(this.printEntity.appUrl)==false){\r\n      this.notifyService.info(this.localpipe.transform('appurlerror'));\r\n      return;\r\n    }\r\n\r\n    if(beoptions.queryType==undefined){//å¼å®¹ä»¥åçé»è¾\r\n      beoptions.queryType = QueryType.Unknown;\r\n    }\r\n    if(options.printType==undefined){//å¼å®¹ä»¥åçé»è¾è¿éé»è®¤ä¸ºè¡¨åæå°\r\n      options.printType = PrintType.Form;\r\n    }\r\n\r\n    //ä¸è¡¨åéææ¶ï¼è¡¨åæå°æ¶æå¤ä¸ªæå°æ ¼å¼ï¼éè¦éæ©ï¼è¿æ¶åæ ¼å¼idæ¯ç©ºç\r\n    if(beoptions.FormatId == undefined || beoptions.FormatId == '') {\r\n      return this.openFormatListByDimension(beoptions, options, ele, false);\r\n    } else {\r\n      if (ele) {\r\n        const self = this;\r\n        if(ele==='download'){\r\n          return this.formatSrv.printSingleById(beoptions, options,su, 'CloudPrint')\r\n          .then((data) => {\r\n            self.downloadFile(data); \r\n          }); \r\n        }else{\r\n          self.openRendedViewer(ele,null,options,[beoptions],false);\r\n        }\r\n      } else {\r\n        return this.formatSrv.printSingleById(beoptions, options,su, 'CloudPrint');\r\n      }      \r\n    }\r\n  }\r\n\r\n  /**\r\n   * åæ ¼å¼è¿æ»¤å¨æå°\r\n   * suï¼åæ æ¨¡å¼ä¸nginxè·¯ç±çsu\r\n   * \r\n   * 1.å¸¦ç»´åº¦è¿æ»¤æ ¼å¼éæ©å¨\r\n   */\r\n  printSingleByFilter(beFilteroptions: SourceFilterOptions, options: OutputOptions, ele: any,su=null,param=null): any {\r\n    if(DataValidator.checkAppUrl(this.printEntity.appUrl)==false){\r\n      this.notifyService.info(this.localpipe.transform('appurlerror'));\r\n      return;\r\n    }\r\n    \r\n    if(beFilteroptions.queryType==undefined){//å¼å®¹ä»¥åçé»è¾\r\n      beFilteroptions.queryType = QueryType.Unknown;\r\n    }\r\n    if(options.printType==undefined){//å¼å®¹ä»¥åçé»è¾è¿éé»è®¤ä¸ºè¡¨åæå°\r\n      options.printType = PrintType.Form;\r\n    }\r\n\r\n    //ä¸è¡¨åéææ¶ï¼è¡¨åæå°æ¶æå¤ä¸ªæå°æ ¼å¼ï¼éè¦éæ©ï¼è¿æ¶åæ ¼å¼idæ¯ç©ºç\r\n    if(beFilteroptions.FormatId == undefined || beFilteroptions.FormatId == '') {\r\n      return this.openFormatListByDimension(beFilteroptions, options, ele, true);\r\n    } else  {\r\n      if (ele) {\r\n        const self = this;\r\n        if(ele==='download'){\r\n          return this.formatSrv.printSingleByFilter(beFilteroptions, options,su, 'CloudPrint')\r\n          .then((data) => {\r\n            self.downloadFile(data);\r\n    \r\n          });\r\n        }else{\r\n          self.openRendedViewer(ele,null,options,[beFilteroptions],true);\r\n        }\r\n      } else {\r\n        return this.formatSrv.printSingleByFilter(beFilteroptions, options, su,'CloudPrint');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * å¤æ ¼å¼æ°æ®idæå°\r\n   * suï¼åæ æ¨¡å¼ä¸nginxè·¯ç±çsu\r\n   * \r\n   * TODO: ç®åä¸å¸¦æ ¼å¼éæ©å¨,éè¦å¤çç»ç»å¥½æ ¼å¼åæ°æ®çå¯¹åºå³ç³»\r\n   */\r\n  printMultiById(beOptionsList: Array<SourceOptions>, options: OutputOptions,ele: any, su=null, param=null): any{\r\n    for(let i=0; i< beOptionsList.length;i++){\r\n      DataValidator.checkForNullReference(beOptionsList[i].queryType,'queryType');\r\n    }\r\n\r\n    DataValidator.checkForNullReference(options.printType,'printType');\r\n\r\n    if(DataValidator.checkAppUrl(this.printEntity.appUrl)==false){\r\n      this.notifyService.info(this.localpipe.transform('appurlerror'));\r\n      return;\r\n    }\r\n\r\n    if(ele){\r\n      const self = this;\r\n      if(ele==='download'){\r\n        return this.formatSrv.printMultiById(beOptionsList,options,su,'CloudPrint')\r\n        .then((data) => {\r\n          this.downloadFile(data);\r\n        }); \r\n      }else{\r\n        self.openRendedViewer(ele, null, options,beOptionsList,false);\r\n      }\r\n    }else{\r\n      return this.formatSrv.printMultiById(beOptionsList,options,su,'CloudPrint');\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * å¤æ ¼å¼è¿æ»¤å¨æå°\r\n   * suï¼åæ æ¨¡å¼ä¸nginxè·¯ç±çsu\r\n   * \r\n   * TODO: ç®åä¸å¸¦æ ¼å¼éæ©å¨,éè¦å¤çç»ç»å¥½æ ¼å¼åæ°æ®çå¯¹åºå³ç³»\r\n   */\r\n  printMultiByFilter(beOptionsList: Array<SourceFilterOptions>, options: OutputOptions, ele: any,su=null, param=null): any{\r\n    for(let i=0; i< beOptionsList.length;i++){\r\n      DataValidator.checkForNullReference(beOptionsList[i].queryType,'queryType');\r\n    }\r\n\r\n    DataValidator.checkForNullReference(options.printType,'printType');\r\n    if(DataValidator.checkAppUrl(this.printEntity.appUrl) == false){\r\n      this.notifyService.info(this.localpipe.transform('appurlerror'));\r\n      return;\r\n    }\r\n    if(ele){\r\n      const self = this;\r\n      if(ele==='download'){\r\n        return this.formatSrv.printMultiByFilter(beOptionsList,options,su,'CloudPrint')\r\n        .then((data) => {\r\n          this.downloadFile(data);\r\n        });  \r\n      }else{\r\n        self.openRendedViewer(ele, null, options,beOptionsList,true);\r\n      }\r\n   \r\n    }else{\r\n      return this.formatSrv.printMultiByFilter(beOptionsList,options,su,'CloudPrint');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * åæ ¼å¼æ°æ®idæå°\r\n   * suï¼åæ æ¨¡å¼ä¸nginxè·¯ç±çsu\r\n   * \r\n   * 1.å¸¦ç»´åº¦è¿æ»¤æ ¼å¼éæ©å¨\r\n   */\r\n  printSingleById4Job(beoptions: SourceOptions, options: OutputOptions,su=null,param=null): any {\r\n    if(DataValidator.checkAppUrl(this.printEntity.appUrl)==false){\r\n      this.notifyService.info(this.localpipe.transform('appurlerror'));\r\n      return;\r\n    }\r\n    if(beoptions.queryType==undefined){//å¼å®¹ä»¥åçé»è¾\r\n      beoptions.queryType = QueryType.Unknown;\r\n    }\r\n    if(options.printType==undefined){//å¼å®¹ä»¥åçé»è¾è¿éé»è®¤ä¸ºè¡¨åæå°\r\n      options.printType = PrintType.Form;\r\n    }\r\n\r\n    return this.openFormatListByDimension4Job([beoptions], options, false,false);\r\n  }\r\n\r\n  /**\r\n   * åæ ¼å¼è¿æ»¤å¨æå°\r\n   * suï¼åæ æ¨¡å¼ä¸nginxè·¯ç±çsu\r\n   * \r\n   * 1.å¸¦ç»´åº¦è¿æ»¤æ ¼å¼éæ©å¨\r\n   */\r\n  printSingleByFilter4Job(beFilteroptions: SourceFilterOptions, options: OutputOptions, su=null,param=null): any {\r\n    if(DataValidator.checkAppUrl(this.printEntity.appUrl)==false){\r\n      this.notifyService.info(this.localpipe.transform('appurlerror'));\r\n      return;\r\n    }\r\n    if(beFilteroptions.queryType==undefined){//å¼å®¹ä»¥åçé»è¾\r\n      beFilteroptions.queryType = QueryType.Unknown;\r\n    }\r\n    if(options.printType==undefined){//å¼å®¹ä»¥åçé»è¾è¿éé»è®¤ä¸ºè¡¨åæå°\r\n      options.printType = PrintType.Form;\r\n    }\r\n    return this.openFormatListByDimension4Job([beFilteroptions], options, true,false);\r\n  }\r\n\r\n  /**\r\n   * å¤æ ¼å¼æ°æ®idæå°\r\n   * suï¼åæ æ¨¡å¼ä¸nginxè·¯ç±çsu\r\n   * \r\n   * TODO: ç®åä¸å¸¦æ ¼å¼éæ©å¨\r\n   */\r\n  printMultiById4Job(beOptionsList: Array<SourceOptions>, options: OutputOptions, su=null, param=null): any{\r\n    // tslint:disable-next-line:forin\r\n    for(const b in beOptionsList){\r\n      DataValidator.checkForNullReference(beOptionsList[0].queryType,'queryType');\r\n    }\r\n\r\n    DataValidator.checkForNullReference(options.printType,'printType');\r\n    if(DataValidator.checkAppUrl(this.printEntity.appUrl)==false){\r\n      this.notifyService.info(this.localpipe.transform('appurlerror'));\r\n      return;\r\n    }\r\n    return this.openFormatListByDimension4Job(beOptionsList, options, false,true);\r\n\r\n  }\r\n\r\n  /**\r\n   * å¤æ ¼å¼è¿æ»¤å¨æå°\r\n   * suï¼åæ æ¨¡å¼ä¸nginxè·¯ç±çsu\r\n   * \r\n   * TODO: ç®åä¸å¸¦æ ¼å¼éæ©å¨\r\n   */\r\n  printMultiByFilter4Job(beFilteroptions: Array<SourceFilterOptions>, options: OutputOptions, su=null, param=null): any{\r\n\r\n    // tslint:disable-next-line:forin\r\n    for(const b in beFilteroptions){\r\n      DataValidator.checkForNullReference(beFilteroptions[0].queryType,'queryType');\r\n    }\r\n\r\n    DataValidator.checkForNullReference(options.printType,'printType');\r\n    if(DataValidator.checkAppUrl(this.printEntity.appUrl)==false){\r\n      this.notifyService.info(this.localpipe.transform('appurlerror'));\r\n      return;\r\n    }\r\n    return this.openFormatListByDimension4Job(beFilteroptions, options, true,true);\r\n  }\r\n  \r\n  /**\r\n   * åå»ºblobå¯¹è±¡ï¼å¹¶å©ç¨æµè§å¨æå¼urlè¿è¡ä¸è½½\r\n   * @param data æä»¶æµæ°æ®\r\n   */\r\n  downloadFile(data) {\r\n  \r\n    const link = document.createElement('a');\r\n    const blob = new Blob([data], {type: 'application/pdf;charset=UTF-8'});\r\n    link.setAttribute('href', window.URL.createObjectURL(blob));\r\n    link.setAttribute('download', this.printEntity.downLoadFileName+'.pdf');\r\n    link.style.visibility = 'hidden';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n  //#endregion\r\n  \r\n  /**\r\n   * æå°ï¼è¿æäºï¼æ¹ä¸ºprintSingleByIdï¼\r\n   * @param beoptions æ°æ®æºéé¡¹\r\n   * @param options å¯¼åºéé¡¹\r\n   * @param ele é¢è§æ¶è¦æ¸²æçä¸»ä½\r\n   * eleä¸ºç©ºæ¶ï¼è¿åæ¸²ææµï¼\r\n   * eleä¸ºtabå­ç¬¦ä¸²æ¶ï¼æ°çtabé¡µæå¼é¢è§å¨ï¼\r\n   * eleä¸ºdownloadå­ç¬¦ä¸²æ¶ï¼ä¸è½½ï¼\r\n   * eleä¸ºelementåç´ æ¶ï¼å½åé¡µçelementä¸æ¸²æé¢è§å¨\r\n   * \r\n   * æ³¨æbeoptionséçRetrieveParamåçå±æ§å¼é½éè¦å°åå­æ¯å¼å¤´\r\n   */\r\n  outputBEData(beoptions: any, options: OutputOptions, ele: any): any {\r\n    return this.printSingleById(beoptions,options,ele);\r\n  }\r\n\r\n  /**\r\n   * æå°ï¼è¿æäºï¼æ¹ä¸ºprintSingleByFilterï¼\r\n   * @param beoptions BEFilteréé¡¹\r\n   * @param options å¯¼åºéé¡¹\r\n   * @param ele é¢è§æ¶è¦æ¸²æçä¸»ä½\r\n   * eleä¸ºç©ºæ¶ï¼è¿åæ¸²ææµï¼\r\n   * eleä¸ºtabå­ç¬¦ä¸²æ¶ï¼æ°çtabé¡µæå¼é¢è§å¨ï¼\r\n   * eleä¸ºdownloadå­ç¬¦ä¸²æ¶ï¼ä¸è½½\r\n   * eleä¸ºelementåç´ æ¶ï¼å½åé¡µçelementä¸æ¸²æé¢è§å¨\r\n   * \r\n   * æ³¨æbeoptionséçRetrieveParamåçå±æ§å¼é½éè¦å°åå­æ¯å¼å¤´\r\n   */\r\n  outputBEDataWithFilter(beFilteroptions: any, options: OutputOptions, ele: any): any {\r\n    return this.printSingleByFilter(beFilteroptions, options,ele);\r\n  }\r\n\r\n}\r\n","import { LOCALE_ID, NgModule, SystemJsNgModuleLoaderConfig } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { CloudprintDesignerComponent } from './cloudprint-designer/cloudprint-designer.component';\r\nimport { CloudprintViewerComponent } from './cloudprint-viewer/cloudprint-viewer.component';\r\nimport { CloudprintdesignerService } from './cloudprint-designer/cloudprint-designer.service';\r\nimport { CloudprintviewerService } from './cloudprint-viewer/cloudprint-viewer.service';\r\nimport { CloudprintService } from './cloudprint.service';\r\n\r\nimport { NotifyService, NotifyContainerComponent, NotifyModule } from '@farris/ui-notify';\r\nimport { CloudprintFunctionRegister } from './functions/cloudprint.function.register';\r\nimport { AppService, CommonSharedModule } from '@gsp-sys/rtf-common';\r\nimport { PrintFormatService } from './services/printFormatService';\r\nimport { FormatlistComponent } from './cloudprint-formatlist/formatlist.component';\r\nimport { WindowModule, DialogModule } from '@progress/kendo-angular-dialog';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { LanguageService } from '@ecp-caf/caf-common';\r\nimport { FormatlistjobComponent } from './cloudprint-formatlistjob/formatlistjob.component';\r\n\r\nimport { LoadingModule, LoadingService } from '@farris/ui-loading';\r\nimport { FarrisButtonModule } from '@farris/ui-button';\r\nimport { DatagridModule } from '@farris/ui-datagrid';\r\nimport { SplitterModule  } from '@farris/ui-splitter';\r\nimport { FarrisSectionModule } from '@farris/ui-section';\r\nimport { AngularDraggableModule } from '@farris/ui-draggable';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { LocalLangPipe } from './local.pipe';\r\n// import { BrowserModule } from '@angular/platform-browser';\r\nimport { FResponseToolbarModule } from '@farris/ui-response-toolbar';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    // BrowserModule,\r\n    HttpClientModule,\r\n    NotifyModule,\r\n    WindowModule,\r\n    FormsModule,\r\n    GridModule,\r\n    DialogModule,\r\n    LoadingModule,\r\n    LoadingModule.forRoot(),\r\n    FarrisDialogModule,\r\n    FarrisButtonModule,\r\n    SplitterModule,\r\n    DatagridModule,\r\n    AngularDraggableModule,\r\n    FarrisSectionModule,\r\n    ModalModule.forRoot(),\r\n    NumberSpinnerModule,\r\n    ComboListModule,\r\n    FarrisFormsModule,\r\n    FResponseToolbarModule\r\n  ],\r\n  declarations: [\r\n    CloudprintDesignerComponent,\r\n    CloudprintViewerComponent,\r\n    FormatlistComponent,\r\n    FormatlistjobComponent,\r\n    LocalLangPipe\r\n  ],\r\n  entryComponents: [\r\n    CloudprintDesignerComponent,\r\n    CloudprintViewerComponent,\r\n    NotifyContainerComponent,\r\n    FormatlistComponent,\r\n    FormatlistjobComponent\r\n  ],\r\n  providers: [\r\n    // componentéä¾èµçæå¡é½éè¦å¨è¿éç³æä¸\r\n    CloudprintdesignerService,\r\n    CloudprintviewerService,\r\n    CloudprintService,\r\n    NotifyService,\r\n    CloudprintFunctionRegister,\r\n    AppService,\r\n    PrintFormatService,\r\n    LanguageService,\r\n    LoadingService,\r\n    { provide: LOCALE_ID, useValue: localStorage.getItem('languageCode') || 'zh-CHS' },\r\n  ],\r\n  // bootstrap: [ CloudprintDesignerComponent ]\r\n})\r\nexport class CloudPrintModule {\r\n}\r\n","import { QueryType } from '../enums/querytype';\r\n\r\nexport class BaseSourceOptions{\r\n    /**æå°åæ°æ®ç¼å·*/\r\n    FormatId: string;\r\n    /**BEåæ°æ®ç¼å·*/\r\n    SourceId: string;\r\n    /** åæ®ç±»åid*/\r\n    billCategoryId:string;\r\n    /**ä¸å¡ç±»åid */\r\n    bizTypeId:string;\r\n    /** æå¡åå*/\r\n    ServiceUnit: string;\r\n    /** å½åé¡µ*/\r\n    currentPage: number;\r\n    /** æ¯é¡µè¡æ°*/\r\n    pageRowCount: number;\r\n    /**æ¥è¯¢ç±»åï¼\r\n     * éå¯¹èªå®ä¹åæ°çæ¹å¼ï¼ç±»åå¼ç±åæ¹èªå·±çº¦å®å­ç¬¦ä¸²*/\r\n    queryType:QueryType;    \r\n    /**åé¨æå¡çserviceid*/\r\n    queryServiceId:string;\r\n    /** æ¥è¯¢åæ°*/\r\n    queryParam:any;\r\n\r\n    includeChildData:boolean = true;\r\n}\r\n","import { BaseSourceOptions } from './basesourceoptions';\r\nimport { QueryType } from '../enums/querytype';\r\n\r\nexport class SourceFilterOptions extends BaseSourceOptions{\r\n    public constructor() {\r\n        super();\r\n        this.queryType = QueryType.Unknown;\r\n\r\n    }\r\n    /**\r\n     * Gsç³»ç»Beæ°æ®è¿æ»¤å¨\r\n     */\r\n    EntityFilter: any;\r\n\r\n    // FirstDimensionId:string;\r\n\r\n    FirstDimensionVal: string;\r\n\r\n    // SecondDimension: string;\r\n\r\n    SecondDimensionVal: string;\r\n}\r\n","import { BaseSourceOptions } from './basesourceoptions';\r\nimport { QueryType } from '../enums/querytype';\r\n\r\nexport class SourceOptions extends BaseSourceOptions{\r\n\r\n    public constructor() {\r\n        super();\r\n        this.queryType = QueryType.Unknown;\r\n    }\r\n    /**\r\n     * Gsç³»ç»Beæ°æ®æ è¯\r\n     */\r\n    DataIds: string[];\r\n\r\n    RetrieveParam:any;\r\n    \r\n    // FirstDimensionId:string;\r\n\r\n    FirstDimensionVal: string;\r\n\r\n    // SecondDimensionId: string;\r\n\r\n    SecondDimensionVal: string;\r\n}\r\n","/**\r\n * è¿ä¸ªç±»ä»¥åä¸ç¨äºï¼ä½æ¯ä¸è½å ï¼è´¢å¡å·²ç»ä½¿ç¨ \r\n */\r\n\r\nexport class RetrieveParam {\r\n    NeedLock: boolean;\r\n    NodeSortInfos: NodeSortInfos[];\r\n    CacheType: RequestedBufferType;\r\n    ForceFromRepository: boolean;\r\n}\r\n\r\nexport class NodeSortInfos {\r\n    NodeCode: string;\r\n    SortConditions: SortConditions[];\r\n}\r\n\r\nexport class SortConditions {\r\n    SortType: SortType;\r\n    SortField: string;\r\n}\r\n\r\n\r\n//\r\n// æè¦:\r\n//     æ°æ®æ£ç´¢æ¶ä½¿ç¨çæ°æ®æ¥æºç±»å\r\nexport enum RequestedBufferType\r\n{\r\n    //\r\n    // æè¦:\r\n    //     æ¬æ¬¡è¯·æ±ä¸­çæ°æ®ã\r\n    //\r\n    // è¨è®ºï¼\r\n    //     å¦ææ¬æ¬¡è¯·æ±æ§è¡æå,æäº¤å°Inspur.Gsp.Bef.Api.Parameter.RequestedBufferType.TransactionalBuffer,å¦åè¢«ä¸¢å¼\r\n    CurrentData = 0,\r\n    //\r\n    // æè¦:\r\n    //     åå«ä¼è¯è¿ç¨ä¸­å·²ç»æ¥åçåæ´æ°æ®\r\n    TransactionalBuffer = 1,\r\n    //\r\n    // æè¦:\r\n    //     ä¿®æ¹ä¹åçèå¼,ç¨äºæ¯è¾åæ´,è·åå·®å¼æè§¦åäºä»¶ãä¼è¯è¿ç¨ä¸­ä¿æä¸æ°æ®åºä¸­ä¸è´\r\n    Original = 2\r\n}\r\n\r\nexport enum SortType {\r\n    Asc = 0,\r\n    Desc = 1\r\n}\r\n\r\n\r\n///\t\t\t\"RetrieveParam\": {\r\n///\t\t\t\t\"NeedLock\": false,\r\n///\t\t\t\t\"CacheType\": 0,\r\n///\t\t\t\t\"NodeSortInfos\": [{\r\n///\t\t\t\t\t\"NodeCode\": \"OrderItems\",\r\n///\t\t\t\t\t\"SortConditions\": [{\r\n///\t\t\t\t\t\t\"SortType\": 0,\r\n///\t\t\t\t\t\t\"SortField\": \"Price\"\r\n///\r\n///\t\t\t\t\t}]\r\n///\t\t\t\t}],\r\n///\t\t\t\t\"ForceFromRepository\": false\r\n///\t\t\t}\r\n","/**\r\n * æä»¶ç±»å\r\n *  (ä¸ºäºå¼å®¹javaï¼æ¹ä¸ºstringç±»å)\r\n */\r\nexport enum FileType {\r\n    None = 'None',\r\n    //\r\n    // æè¦:1\r\n    //     Adobe PDF format for export.\r\n    Pdf ='Pdf',\r\n    //\r\n    // æè¦:36\r\n    //     HTML5 format for export.\r\n    Html5 = 'Html5',\r\n    // //\r\n    // // æè¦:\r\n    // //     Microsoft Xps format for export.\r\n    // Xps = 2,\r\n    // //\r\n    // // æè¦:\r\n    // //     HTML Table format for export.\r\n    // HtmlTable = 3,\r\n    // //\r\n    // // æè¦:\r\n    // //     HTML Span format for export.\r\n    // HtmlSpan = 4,\r\n    // //\r\n    // // æè¦:\r\n    // //     HTML Div format for export.\r\n    // HtmlDiv = 5,\r\n    // //\r\n    // // æè¦:\r\n    // //     RTF format for export.\r\n    // Rtf = 6,\r\n    // //\r\n    // // æè¦:\r\n    // //     Table in Rtf format for export.\r\n    // RtfTable = 7,\r\n    // //\r\n    // // æè¦:\r\n    // //     Components of the report will be placed into RTF frames for export.\r\n    // RtfFrame = 8,\r\n    // //\r\n    // // æè¦:\r\n    // //     Please use StiExportFormat.RtfFrame instead.\r\n    // RtfMode1 = 8,\r\n    // //\r\n    // // æè¦:\r\n    // //     Components of the report will be placed into RTF frames with borders in Microsoft\r\n    // //     Word graphic format for export.\r\n    // RtfWinWord = 9,\r\n    // //\r\n    // // æè¦:\r\n    // //     StiExportFormat.RtfWinWord should be used instead.\r\n    // RtfMode2 = 9,\r\n    // //\r\n    // // æè¦:\r\n    // //     Mode for export to the RTF format with Tab symbol as delimiter of the text.\r\n    // RtfTabbedText = 10,\r\n    // //\r\n    // // æè¦:\r\n    // //     StiExportFormat.RtfTabbedText should be used instead.\r\n    // RtfMode3 = 10,\r\n    // //\r\n    // // æè¦:\r\n    // //     Text format for export.\r\n    // Text = 11,\r\n    // //\r\n    // // æè¦:\r\n    // //     Excel BIFF (Binary Interchange File Format) format for export.\r\n    // Excel = 12,\r\n    // //\r\n    // // æè¦:\r\n    // //     Excel Xml format for export.\r\n    // ExcelXml = 13,\r\n    // //\r\n    // // æè¦:\r\n    // //     Excel 2007 format for export.\r\n    // Excel2007 = 14,\r\n    // //\r\n    // // æè¦:\r\n    // //     Word 2007 format for export.\r\n    // Word2007 = 15,\r\n    // //\r\n    // // æè¦:\r\n    // //     Xml format for export.\r\n    // Xml = 16,\r\n    // //\r\n    // // æè¦:\r\n    // //     CSV (Comma Separated Value) file format for export.\r\n    // Csv = 17,\r\n    // //\r\n    // // æè¦:\r\n    // //     Dif file format for export.\r\n    // Dif = 18,\r\n    // //\r\n    // // æè¦:\r\n    // //     Sylk file format for export.\r\n    // Sylk = 19,\r\n    // //\r\n    // // æè¦:\r\n    // //     Image format for export.\r\n    // Image = 20,\r\n    // //\r\n    // // æè¦:\r\n    // //     Image in GIF format for export.\r\n    // ImageGif = 21,\r\n    // //\r\n    // // æè¦:\r\n    // //     Image in BMP format for export.\r\n    // ImageBmp = 22,\r\n    // //\r\n    // // æè¦:\r\n    // //     Image in PNG format for export.\r\n    // ImagePng = 23,\r\n    // //\r\n    // // æè¦:\r\n    // //     Image in TIFF format for export.\r\n    // ImageTiff = 24,\r\n    // //\r\n    // // æè¦:\r\n    // //     Image in JPEG format for export.\r\n    // ImageJpeg = 25,\r\n    // //\r\n    // // æè¦:\r\n    // //     Image in PCX format for export.\r\n    // ImagePcx = 26,\r\n    // //\r\n    // // æè¦:\r\n    // //     Image in EMF format for export.\r\n    // ImageEmf = 27,\r\n    // //\r\n    // // æè¦:\r\n    // //     Image in SVG format for export.\r\n    // ImageSvg = 28,\r\n    // //\r\n    // // æè¦:\r\n    // //     Image in SVGZ format for export.\r\n    // ImageSvgz = 29,\r\n    // //\r\n    // // æè¦:\r\n    // //     WebArchive format for export.\r\n    // Mht = 30,\r\n    // //\r\n    // // æè¦:\r\n    // //     dBase/FoxPro format for export.\r\n    // Dbf = 31,\r\n    // //\r\n    // // æè¦:\r\n    // //     HTML format for export.\r\n    // Html = 32,\r\n    // //\r\n    // // æè¦:\r\n    // //     OpenDocument Calc file\r\n    // Ods = 33,\r\n    // //\r\n    // // æè¦:\r\n    // //     OpenDocument Writer file\r\n    // Odt = 34,\r\n    // //\r\n    // // æè¦:\r\n    // //     PowerPoint 2007 format for export\r\n    // Ppt2007 = 35,\r\n\r\n    // //\r\n    // // æè¦:\r\n    // //     Universal format for all data type of exports.\r\n    // Data = 37,\r\n    // //\r\n    // // æè¦:\r\n    // //     Document MDC file.\r\n    // Document = 1000\r\n}\r\n","import { FileType } from './fileType';\r\nimport { OutputType } from './outputType';\r\nimport { PrintType } from '../enums/printtype';\r\nimport { PrintSetting } from './printsetting';\r\n\r\n/**\r\n * å¯¼åºè®¾ç½®\r\n */\r\nexport class OutputOptions {\r\n\r\n    constructor() {\r\n        this.FileType = FileType.Pdf;\r\n        this.printType= PrintType.Form;\r\n    }\r\n    /**è¾åºç±»å æå°/å¯¼åº*/\r\n    OutputType: OutputType;\r\n    /** å¯¼åºæä»¶ç±»å(é»è®¤æ¯Pdf) */\r\n    FileType: FileType;\r\n    /** å¯¼åºè·¯å¾ */\r\n    Path: string;\r\n    /** è®¾å¤Id */\r\n    DeviceId: string;\r\n    /** æå°ç±»å */\r\n    printType: PrintType;\r\n    /** æ¯å¦åå°ä»»å¡æå°*/\r\n    printJob:boolean=false;\r\n    /**æå°æºåç§°*/\r\n    printerName:String='';\r\n    /**æå°è®¾ç½®*/\r\n    printSetting:PrintSetting=new PrintSetting();\r\n}\r\n\r\n\r\n","import { Injectable, Injector, ApplicationRef, EventEmitter, Query, LOCALE_ID } from '@angular/core';\r\nimport { ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, ViewContainerRef } from '@angular/core';\r\n\r\nimport { CloudprintDesignerComponent } from './cloudprint-designer/cloudprint-designer.component';\r\nimport { CloudprintViewerComponent } from './cloudprint-viewer/cloudprint-viewer.component';\r\nimport { PrintEntity } from './entitys/printEntity';\r\n\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { OutputOptions } from './entitys/outputoptions/outputOptions';\r\nimport { Urls } from './utils/cloudprint.Urls';\r\nimport { SourceOptions } from './entitys/datasourceoptions/sourceOptions';\r\nimport { SourceFilterOptions } from './entitys/datasourceoptions/sourceFilterOptions';\r\nimport { BOOptions } from './entitys/datasourceoptions/booptions';\r\nimport { AppService, AppOptions, FrameworkVariableService } from '@gsp-sys/rtf-common';\r\nimport { FileType } from './entitys/outputoptions/fileType';\r\nimport { CmpType } from './entitys/enums/cmpType';\r\nimport { OutputParam } from './entitys/outputoptions/outputParam';\r\nimport { PrintFormatService } from './services/printFormatService';\r\nimport { SourceType } from './entitys/enums/sourceType';\r\n\r\nimport { PrintFormat } from './entitys/printFormat';\r\n\r\n\r\nimport {\r\n  WindowRef,\r\n  WindowCloseResult,\r\n  WindowService\r\n} from '@progress/kendo-angular-dialog';\r\nimport { FormatlistComponent } from './cloudprint-formatlist/formatlist.component';\r\nimport { Utils } from './utils/cloudprint.utils';\r\nimport { CloudprintdesignerService } from './cloudprint-designer/cloudprint-designer.service';\r\nimport { CloudprintviewerService } from './cloudprint-viewer/cloudprint-viewer.service';\r\nimport { Subject } from 'rxjs';\r\nimport { QueryType } from './entitys/enums/querytype';\r\nimport { PrintType } from './entitys/enums/printtype';\r\nimport { DataValidator } from './utils/cloudprint.datavalidator';\r\nimport { BaseSourceOptions } from './entitys/datasourceoptions/basesourceoptions';\r\nimport { FormatlistjobComponent } from './cloudprint-formatlistjob/formatlistjob.component';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { LocalLangPipe } from './local.pipe';\r\n\r\n\r\n@Injectable()\r\nexport class CloudprintInternalService {\r\n \r\n  /**\r\n   * æå°åæ°å®ä½\r\n   */\r\n  printEntity = new PrintEntity();\r\n\r\n  /**\r\n   * è®¾ç½®PrintEntityåæ°\r\n   * @description å¦æå¤çnewæ°çPrintEntityï¼åéè¦è°ç¨è¯¥æ¹æ³åæ­¥serviceçentity\r\n   *              å¤çæ²¡ænewæ°çPrintEntityï¼åä¸éè¦è°ç¨è¯¥æ¹æ³\r\n   */\r\n  set setPrintEntity(entity) {\r\n    this.printEntity = entity;\r\n    // this.designerSrv.printEntity = this.printEntity;\r\n    // this.viewerSrv.printEntity = this.printEntity;\r\n    this.formatSrv.printEntity = this.printEntity;\r\n  }\r\n  constructor(\r\n    private formatSrv: PrintFormatService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private applicationRef: ApplicationRef,\r\n    private notifyService: NotifyService,\r\n    private appService: AppService,\r\n    private windowService: WindowService,\r\n    private modalService: BsModalService,\r\n    ) {\r\n      \r\n        // è®¾ç½®printEntityçé»è®¤å¼\r\n        this.printEntity.appUrl = Urls.CloudPrintBaseUrl;\r\n        this.printEntity.isUseMetaData = true;\r\n        this.printEntity.language = localStorage.getItem(\"languageCode\") || 'zh-CHS';\r\n    \r\n        this.formatSrv.printEntity = this.printEntity;\r\n\r\n    }\r\n\r\n\r\n    /**beæ°æ®æºåå»ºæ ¼å¼*/\r\n    createPrintFormatWithBE(beId: string): Promise<any> {\r\n        return this.formatSrv.createPrintFormatWithBE(beId);\r\n    }\r\n\r\n    /**voæ°æ®æºåå»ºæ ¼å¼*/\r\n    createPrintFormatWithVO(voId: string): Promise<any> {\r\n        return this.formatSrv.createPrintFormatWithVO(voId);\r\n    }\r\n\r\n    /**æ ¹æ®æ°æ®æºidè·åæ ¼å¼*/\r\n    getPrintFormatByDataSrouceId(sourceId: string): Promise<any>{\r\n        return this.formatSrv.getFormatBySourceId(sourceId);\r\n    }\r\n\r\n    /**æ ¹æ®æ°æ®æºåç»´åº¦è·åæ ¼å¼*/\r\n    getPrintFormatByDataSrouceAndDimension(billCategoryId,sourceId,firstDimension,secondDimension): Promise<any>{\r\n        return this.formatSrv.getPrintFormatByDataSrouceAndDimension(billCategoryId,sourceId,firstDimension,secondDimension);\r\n    }\r\n\r\n    /**æ ¹æ®ä¸å¡å¯¹è±¡idè·åæ°æ®æº*/\r\n    getDataSourceByBOId(boId: string): Promise<any>{\r\n        return this.formatSrv.getDataSourceByBOId(boId);\r\n    }\r\n\r\n    /**æ ¹æ®æ ¼å¼idè·åæ ¼å¼*/\r\n    getFormatByFormatId(formatId:string) : Promise<any>{\r\n        return this.formatSrv.getFormatByFormatId(formatId);\r\n    }\r\n\r\n    /**æ ¹æ®å·²æçæ ¼å¼idåæ°æ®æºidï¼å®æ¶è·åæ°æ®æºç»æåç»ææ°çæ ¼å¼*/\r\n    getNewSourceFormatByFormatId(formatId:string): Promise<any> {\r\n        return this.formatSrv.getNewSourceFormatByFormatId(formatId);\r\n    }\r\n\r\n    /**æ ¹æ®å·²æçæ ¼å¼idåæ°æ®æºidï¼è¯­è¨ï¼å®æ¶è·åæ°æ®æºç»æåç»ææ°çæ ¼å¼*/\r\n    getNewSourceFormatByFormatIdAndLang(formatId:string,lang:string): Promise<any> {\r\n        return this.formatSrv.getNewSourceFormatByFormatIdAndLang(formatId,lang);\r\n    }\r\n\r\n    /**ä¿å­æ ¼å¼*/\r\n    save(data: PrintFormat) : Promise<any> {\r\n        return this.formatSrv.save(data);\r\n    }\r\n\r\n    /**ä¿å­æ ¼å¼*/\r\n    saveWithRes(data: PrintFormat) : Promise<any> {\r\n        return this.formatSrv.saveWithRes(data);\r\n    }\r\n\r\n    /**å é¤æ ¼å¼*/\r\n    remove(formatId: string) {\r\n        return this.formatSrv.remove(formatId);\r\n    }\r\n\r\n    /**æ ¹æ®æ ¼å¼idè·åæ ¼å¼*/\r\n    getFormatById(id: string): any {\r\n        if(DataValidator.checkAppUrl(this.printEntity.appUrl)==false){\r\n            this.notifyService.info('æªéç½®æ­£ç¡®çappUrl');\r\n            return;\r\n        }\r\n        return this.formatSrv.loadFormat(id, 'CloudPrint');\r\n\r\n    }\r\n\r\n}\r\n","import { Injectable, Injector, ApplicationRef, EventEmitter, Query, LOCALE_ID } from '@angular/core';\r\nimport { ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, ViewContainerRef } from '@angular/core';\r\n\r\nimport { CloudprintDesignerComponent } from './cloudprint-designer/cloudprint-designer.component';\r\nimport { CloudprintViewerComponent } from './cloudprint-viewer/cloudprint-viewer.component';\r\nimport { PrintEntity } from './entitys/printEntity';\r\n\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { OutputOptions } from './entitys/outputoptions/outputOptions';\r\nimport { Urls } from './utils/cloudprint.Urls';\r\nimport { SourceOptions } from './entitys/datasourceoptions/sourceOptions';\r\nimport { SourceFilterOptions } from './entitys/datasourceoptions/sourceFilterOptions';\r\nimport { BOOptions } from './entitys/datasourceoptions/booptions';\r\nimport { AppService, AppOptions, FrameworkVariableService } from '@gsp-sys/rtf-common';\r\nimport { FileType } from './entitys/outputoptions/fileType';\r\nimport { CmpType } from './entitys/enums/cmpType';\r\nimport { OutputParam } from './entitys/outputoptions/outputParam';\r\nimport { PrintFormatService } from './services/printFormatService';\r\nimport { SourceType } from './entitys/enums/sourceType';\r\n\r\nimport { PrintFormat } from './entitys/printFormat';\r\n\r\nimport { FormatlistComponent } from './cloudprint-formatlist/formatlist.component';\r\nimport { Utils } from './utils/cloudprint.utils';\r\nimport { CloudprintdesignerService } from './cloudprint-designer/cloudprint-designer.service';\r\nimport { CloudprintviewerService } from './cloudprint-viewer/cloudprint-viewer.service';\r\nimport { Subject } from 'rxjs';\r\nimport { QueryType } from './entitys/enums/querytype';\r\nimport { PrintType } from './entitys/enums/printtype';\r\nimport { DataValidator } from './utils/cloudprint.datavalidator';\r\nimport { BaseSourceOptions } from './entitys/datasourceoptions/basesourceoptions';\r\nimport { FormatlistjobComponent } from './cloudprint-formatlistjob/formatlistjob.component';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { LocalLangPipe } from './local.pipe';\r\nimport { AttachmentOptions } from './entitys/datasourceoptions/attachmentoptions';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Config } from './entitys/config';\r\n\r\n\r\n/**\r\n * éä»¶æå°çæå¡\r\n */\r\n@Injectable()\r\nexport class CloudPrintAttachmentService {\r\n \r\n  /**\r\n   * æå°åæ°å®ä½\r\n   */\r\n  printEntity = new PrintEntity();\r\n\r\n  /**\r\n   * è®¾ç½®PrintEntityåæ°\r\n   * @description å¦æå¤çnewæ°çPrintEntityï¼åéè¦è°ç¨è¯¥æ¹æ³åæ­¥serviceçentity\r\n   *              å¤çæ²¡ænewæ°çPrintEntityï¼åä¸éè¦è°ç¨è¯¥æ¹æ³\r\n   */\r\n  set setPrintEntity(entity) {\r\n    this.printEntity = entity;\r\n    // this.designerSrv.printEntity = this.printEntity;\r\n    // this.viewerSrv.printEntity = this.printEntity;\r\n    this.formatSrv.printEntity = this.printEntity;\r\n  }\r\n\r\n  localeid:string;\r\n  localpipe: LocalLangPipe;\r\n\r\n  constructor(\r\n    private formatSrv: PrintFormatService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private applicationRef: ApplicationRef,\r\n    private notifyService: NotifyService,\r\n    private appService: AppService,\r\n    private modalService: BsModalService,\r\n    private httpClient: HttpClient\r\n    ) {\r\n        // è®¾ç½®printEntityçé»è®¤å¼\r\n        this.printEntity.appUrl = Urls.CloudPrintBaseUrl;\r\n        this.printEntity.isUseMetaData = true;\r\n        this.printEntity.language = localStorage.getItem(\"languageCode\") || 'zh-CHS';\r\n    \r\n        this.formatSrv.printEntity = this.printEntity;\r\n\r\n\r\n        if(this.injector)\r\n        {\r\n          this.modalService = this.injector.get(BsModalService);\r\n          this.localeid = localStorage.getItem(\"languageCode\") || this.injector.get(LOCALE_ID);\r\n          this.localpipe = new LocalLangPipe(this.localeid);\r\n        } \r\n    }\r\n\r\n\r\n    async printAttachment(attachmentoptions: AttachmentOptions, options: OutputOptions,su=null,param=null) {\r\n      if(DataValidator.checkAppUrl(this.printEntity.appUrl)==false){\r\n        this.notifyService.info(this.localpipe.transform('appurlerror'));\r\n        return;\r\n      }\r\n      if(attachmentoptions.queryType==undefined){//å¼å®¹ä»¥åçé»è¾\r\n        attachmentoptions.queryType = QueryType.Unknown;\r\n      }\r\n\r\n      if(options.printType==undefined){//å¼å®¹ä»¥åçé»è¾è¿éé»è®¤ä¸ºè¡¨åæå°\r\n        options.printType = PrintType.Attachment;\r\n      }\r\n\r\n      const that = this;\r\n      return this.formatSrv.getPrintDevice().then((data)=>{\r\n        const device = data || [];\r\n        const factory = that.resolver.resolveComponentFactory(FormatlistjobComponent);\r\n        const printsetting = factory.create(that.injector);\r\n  \r\n        printsetting.instance.boxlist = device;\r\n        printsetting.instance.formatId = '';\r\n        printsetting.instance.isShowFormat = false;\r\n        printsetting.instance.printType = 1;\r\n        printsetting.instance.localepip = that.localpipe;\r\n\r\n        const dlg = this.modalService.show(printsetting,{\r\n          title: this.localpipe.transform('printset'),\r\n          width: 800, \r\n          height: 500,\r\n          showButtons: true,\r\n          showMaxButton:false,\r\n          buttons: [\r\n            { text: this.localpipe.transform('print'), cls: 'btn btn-primary', handle: () => {\r\n              printsetting.instance.printJob();\r\n            }},\r\n            { text: this.localpipe.transform('cancel'), cls: 'btn btn-secondary', handle: () => {\r\n              dlg.close();\r\n            }}\r\n          ],\r\n        });  \r\n        //è®¢éäºå¼¹åºçæ ¼å¼éæ©åè¡¨çå³é­äºä»¶\r\n        printsetting.instance.print.subscribe(async (data) => {\r\n            dlg.close();\r\n            options.printSetting = data.printSetting;\r\n            options.printerName = data.printter;\r\n            options.DeviceId = data.boxId;\r\n            options.printJob = true;\r\n            return await this.printAttachmentJob(attachmentoptions,options);\r\n        });\r\n      });\r\n\r\n  \r\n      \r\n    }\r\n\r\n    private async printAttachmentJob(attachmentoptions: AttachmentOptions, options: OutputOptions){\r\n      const url = this.printEntity.appUrl + Urls.PrintAttachment+ 'su=' + Config.PRINT_SU;;\r\n\r\n      const httpoptions = {};\r\n      httpoptions['headers'] = {\r\n          SessionId: this.printEntity.sessionId || '',\r\n          'Content-Type':'application/json'\r\n      };\r\n      const data = {\r\n        attachmentOptions:attachmentoptions,\r\n        options:options,\r\n      }\r\n\r\n      return await this.httpClient.post(url,data,httpoptions).toPromise()\r\n      .then(()=>{\r\n        this.notifyService.info(this.localpipe.transform('sendprintjob'));\r\n        return this.localpipe.transform('sendprintjob');\r\n      })\r\n      .catch((err)=>{\r\n        this.notifyService.warning(err.error.Message);\r\n        return err.error.Message;\r\n      });    \r\n    }\r\n\r\n}\r\n","/**\r\n * å¯¼åºç±»å\r\n * (ä¸ºäºå¼å®¹javaï¼æ¹ä¸ºstringç±»å)\r\n */\r\nexport enum OutputType {\r\n    /**\r\n     * 0\r\n     */\r\n    None = 'None',\r\n    /** æå° 1*/\r\n    PRINT = 'PRINT',\r\n    /** å¯¼åº 2*/\r\n    EXPORT = 'EXPORT',\r\n}\r\n"]}