/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, LOCALE_ID, Inject } from '@angular/core';
import { NotifyService } from '@farris/ui-notify';
export class FormatlistComponent {
    /**
     * @param {?} notifyService
     * @param {?} localeid
     */
    constructor(notifyService, localeid) {
        this.notifyService = notifyService;
        this.print = new EventEmitter();
        // dlg:BsModalRef;
        this.columns = [];
        debugger;
        // localeid = localStorage.getItem("languageCode") || localeid;
        // this.localepip = new LocalLangPipe(localeid);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.columns = [
            { field: 'code', title: this.localepip.transform('formatcode') },
            { field: 'name', title: this.localepip.transform('formatname') },
        ];
    }
    /**
     * @param {?} rowdata
     * @return {?}
     */
    selectChange(rowdata) {
        this.formatId = rowdata.id;
    }
    /**
     * @return {?}
     */
    printJob() {
        if (this.checkBeforePrint()) {
            this.print.emit({
                id: this.formatId
            });
        }
    }
    /**
     * @private
     * @return {?}
     */
    checkBeforePrint() {
        if (!this.formatId) {
            this.notifyService.warning(this.localepip.transform('selectformat'));
            return false;
        }
        else {
            return true;
        }
    }
}
FormatlistComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-formatlist',
                template: "\r\n<div class=\"f-page f-page-navigate f-page-is-grid-card\">\r\n    <section class=\"f-page-main\">\r\n        <farris-section class=\"f-section-grid f-section-in-managelist\" [showHeader]=\"false\">\r\n    \r\n            <div class=\"f-section-content\">\r\n                <div class=\"f-component-grid\">\r\n                <farris-datagrid\r\n                    [fit]=\"true\" \r\n                    [pagination]=\"false\"\r\n                    [virtualized]=\"false\"\r\n                    [columns]=\"columns\"\r\n                    [pageSize]=\"50\"\r\n                    [showBorder]=\"false\"\r\n                    [striped]=\"false\"\r\n                    [data]=\"formats\"\r\n                    [fitColumns]=\"true\"\r\n                    [nowrap]=\"false\"\r\n                    (selectChanged)=\"selectChange($event)\">\r\n                </farris-datagrid>\r\n                </div>\r\n            </div>\r\n        </farris-section>\r\n    </section>    \r\n</div>\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
FormatlistComponent.ctorParameters = () => [
    { type: NotifyService },
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }
];
FormatlistComponent.propDecorators = {
    formats: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    FormatlistComponent.prototype.formats;
    /** @type {?} */
    FormatlistComponent.prototype.print;
    /** @type {?} */
    FormatlistComponent.prototype.columns;
    /** @type {?} */
    FormatlistComponent.prototype.formatId;
    /** @type {?} */
    FormatlistComponent.prototype.localepip;
    /**
     * @type {?}
     * @private
     */
    FormatlistComponent.prototype.notifyService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0bGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXN2Yy9jbG91ZHByaW50LyIsInNvdXJjZXMiOlsibGliL2Nsb3VkcHJpbnQtZm9ybWF0bGlzdC9mb3JtYXRsaXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsWUFBWSxFQUFhLFNBQVMsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHckcsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBVWxELE1BQU0sT0FBTyxtQkFBbUI7Ozs7O0lBWTlCLFlBQW9CLGFBQTRCLEVBQzNCLFFBQWU7UUFEaEIsa0JBQWEsR0FBYixhQUFhLENBQWU7UUFQaEQsVUFBSyxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDOztRQUVuRCxZQUFPLEdBQUcsRUFBRSxDQUFDO1FBUVgsUUFBUSxDQUFDO1FBQ1QsK0RBQStEO1FBQy9ELGdEQUFnRDtJQUNsRCxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxPQUFPLEdBQUc7WUFDYixFQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxFQUFDO1lBQzlELEVBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLEVBQUM7U0FDaEUsQ0FBQztJQUNKLENBQUM7Ozs7O0lBRUQsWUFBWSxDQUFDLE9BQVk7UUFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDO0lBQzdCLENBQUM7Ozs7SUFFRCxRQUFRO1FBRU4sSUFBRyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsRUFBQztZQUN6QixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztnQkFDZCxFQUFFLEVBQUMsSUFBSSxDQUFDLFFBQVE7YUFDakIsQ0FBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDOzs7OztJQUVPLGdCQUFnQjtRQUN0QixJQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBQztZQUNoQixJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO1lBQ3JFLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7YUFBSTtZQUNILE9BQU8sSUFBSSxDQUFDO1NBQ2I7SUFDSCxDQUFDOzs7WUFwREYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLGsvQkFBMEM7O2FBRTNDOzs7O1lBVFEsYUFBYTt5Q0F1QmpCLE1BQU0sU0FBQyxTQUFTOzs7c0JBVmxCLEtBQUs7Ozs7SUFBTixzQ0FBd0M7O0lBRXhDLG9DQUFtRDs7SUFFbkQsc0NBQWE7O0lBQ2IsdUNBQWdCOztJQUVoQix3Q0FBd0I7Ozs7O0lBRVosNENBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBFdmVudEVtaXR0ZXIsIFZpZXdDaGlsZCwgTE9DQUxFX0lELCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUHJpbnRGb3JtYXQgfSBmcm9tICcuLi9lbnRpdHlzL3ByaW50Rm9ybWF0JztcclxuaW1wb3J0IHsgUGFnZUNoYW5nZUV2ZW50LCBHcmlkRGF0YVJlc3VsdCB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWdyaWQnO1xyXG5pbXBvcnQgeyBOb3RpZnlTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1ub3RpZnknO1xyXG5pbXBvcnQgeyBCc01vZGFsUmVmIH0gZnJvbSAnQGZhcnJpcy91aS1tb2RhbCc7XHJcbmltcG9ydCB7IERpYWxvZ0NvbXBvbmVudCB9IGZyb20gJ0BmYXJyaXMvdWktZGlhbG9nJztcclxuaW1wb3J0IHsgTG9jYWxMYW5nUGlwZSB9IGZyb20gJy4uL2xvY2FsLnBpcGUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdsaWItZm9ybWF0bGlzdCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2Zvcm1hdGxpc3QuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2Zvcm1hdGxpc3QuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGb3JtYXRsaXN0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICAvLyBAVmlld0NoaWxkKCdwcmludGpvYicpIHByaW50am9iOiBEaWFsb2dDb21wb25lbnQ7XHJcblxyXG4gIEBJbnB1dCgpIHB1YmxpYyBmb3JtYXRzIDogUHJpbnRGb3JtYXRbXTtcclxuXHJcbiAgcHJpbnQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcbiAgLy8gZGxnOkJzTW9kYWxSZWY7XHJcbiAgY29sdW1ucyA9IFtdO1xyXG4gIGZvcm1hdElkOnN0cmluZztcclxuXHJcbiAgbG9jYWxlcGlwOkxvY2FsTGFuZ1BpcGU7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbm90aWZ5U2VydmljZTogTm90aWZ5U2VydmljZSxcclxuICAgIEBJbmplY3QoTE9DQUxFX0lEKSBsb2NhbGVpZDpzdHJpbmcpIHsgXHJcbiAgICAgIFxyXG4gICAgZGVidWdnZXI7XHJcbiAgICAvLyBsb2NhbGVpZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwibGFuZ3VhZ2VDb2RlXCIpIHx8IGxvY2FsZWlkO1xyXG4gICAgLy8gdGhpcy5sb2NhbGVwaXAgPSBuZXcgTG9jYWxMYW5nUGlwZShsb2NhbGVpZCk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuY29sdW1ucyA9IFtcclxuICAgICAge2ZpZWxkOiAnY29kZScsIHRpdGxlOiB0aGlzLmxvY2FsZXBpcC50cmFuc2Zvcm0oJ2Zvcm1hdGNvZGUnKX0sXHJcbiAgICAgIHtmaWVsZDogJ25hbWUnLCB0aXRsZTogIHRoaXMubG9jYWxlcGlwLnRyYW5zZm9ybSgnZm9ybWF0bmFtZScpfSxcclxuICAgIF07XHJcbiAgfVxyXG5cclxuICBzZWxlY3RDaGFuZ2Uocm93ZGF0YTogYW55KXtcclxuICAgIHRoaXMuZm9ybWF0SWQgPSByb3dkYXRhLmlkO1xyXG4gIH1cclxuXHJcbiAgcHJpbnRKb2IoKXtcclxuXHJcbiAgICBpZih0aGlzLmNoZWNrQmVmb3JlUHJpbnQoKSl7XHJcbiAgICAgIHRoaXMucHJpbnQuZW1pdCh7XHJcbiAgICAgICAgaWQ6dGhpcy5mb3JtYXRJZFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgY2hlY2tCZWZvcmVQcmludCgpe1xyXG4gICAgaWYoIXRoaXMuZm9ybWF0SWQpe1xyXG4gICAgICB0aGlzLm5vdGlmeVNlcnZpY2Uud2FybmluZyh0aGlzLmxvY2FsZXBpcC50cmFuc2Zvcm0oJ3NlbGVjdGZvcm1hdCcpKTtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=