/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
// import { CloudprintdesignerService } from './cloudprint-designer.service';
import { PrintEntity } from '../entitys/printEntity';
import { NotifyService } from '@farris/ui-notify';
import { CloudprintFunctionRegister } from '../functions/cloudprint.function.register';
import { Urls } from '../utils/cloudprint.Urls';
import { PrintFormatService } from '../services/printFormatService';
import { CloudprintdesignerService } from './cloudprint-designer.service';
import { Utils } from '../utils/cloudprint.utils';
import { LoadingService } from '@farris/ui-loading';
export class CloudprintDesignerComponent {
    // localeid:string
    /**
     * @param {?} server
     * @param {?} formatSrv
     * @param {?} notifyService
     * @param {?} functionRegister
     * @param {?} editsrv
     * @param {?} loadSrv
     */
    constructor(server, formatSrv, notifyService, functionRegister, editsrv, loadSrv) {
        this.server = server;
        this.formatSrv = formatSrv;
        this.notifyService = notifyService;
        this.functionRegister = functionRegister;
        this.editsrv = editsrv;
        this.loadSrv = loadSrv;
        /**
         * 打印参数实体
         */
        this.printEntity = new PrintEntity();
        Stimulsoft.Base.StiLicense.key = '6vJhGtLLLz2GNviWmUTrhSqnOItdDwjBylQzQcAOiHmUA7xxS8GDDAme3ObyU+jZAO9YGs0yUwkFhPz4MWHZaEdiyH' +
            'ffzbOBGSAkqiNry5YZGU/0ZeiKWcHEB38tgR/zaXp8v+ktUiBOl5B2Dll4y33a3osXfKmsg7lHgK/JYlcS08G7Nggu' +
            'H8vVnzvNulyD1uv6QdfRDQOP/FfeKHq3M70ZPvUspYpkCzGqP4nJJ5ktST13+f3E90Y0n1BkbAbYCI3JqheM988LYP' +
            '2lmJ5mAzuV5t3ILzfUehp6/HIy8LPbzzVlU22X9I1t2xY6W1qsi/pKaXeAfJ0T5x/CUbywJ9JyKaTMwIUhDqUVIrle' +
            'QbFvNFUrLznXCcd55QNngQjoC6Wx9CZ9ryjdPdp0dMfCC0exZXtQW0IR+lWjD9pdUkYPJWn5eACs0ToahpEvdwlW76' +
            'eL5ufNRT6xYjBqlGQ/9VuV5LD9EROLqHxpucBoNPLl7s8ealNcm5seZjuR1iSiOPcqd05m3ellOoxBzSLWaB/sNMWT' +
            'AOhBIWNv7dPOcq8KuAfwaJCkV3WTbQAhX2XJ';
        this.printEntity.isUseMetaData = true;
        // this.server.printEntity = this.printEntity;
        this.formatSrv.printEntity = this.printEntity;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.docTitle = document.title;
        this.initDesigner();
        console.log('加载设计器成功');
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.printEntity.onExitEvent.emit();
    }
    /**
     * 设置PrintEntity参数
     * \@description 如果外界new新的PrintEntity，则需要调用该方法同步service的entity
     *              外界没有new新的PrintEntity，则不需要调用该方法
     *
     * 如下代码是cloudprint.service.ts里的代码，在cloudprint.service.ts有新的printEntity，
     *           所以需要调用setPrintEntity来同步
     *           this.designercomponentRef.instance.setPrintEntity(this.printEntity)
     *
     * @param {?} entity
     * @return {?}
     */
    setPrintEntity(entity) {
        this.printEntity = entity;
        // this.server.printEntity = this.printEntity;
        this.formatSrv.printEntity = this.printEntity;
    }
    /**
     * 设置Designer的options
     * @private
     * @param {?} options Designer的options对象
     * @return {?}
     */
    setOptions(options) {
        options.toolbar.showAboutButton = false;
        // 文件tab
        // options.toolbar.showFileMenu = false;
        // 文件tab下的按钮
        options.toolbar.showFileMenuAbout = false;
        options.toolbar.showFileMenuClose = false;
        options.toolbar.showFileMenuExit = false;
        options.toolbar.showFileMenuInfo = false;
        options.toolbar.showFileMenuNew = false;
        // options.toolbar.showFileMenuOpen = false;
        options.toolbar.showFileMenuOptions = false;
        options.toolbar.showFileMenuReportSetup = false;
        options.toolbar.showFileMenuSave = false;
        // options.toolbar.showFileMenussSaveAs = false;
        // 预览tab
        // options.toolbar.showPreviewButton = false;
        options.toolbar.showPublishButton = false;
        // 保存按钮
        options.toolbar.showSaveButton = !(this.printEntity.state == 1);
        options.toolbar.showSetupToolboxButton = false;
        // options.appearance.showReportTree = false;
        options.appearance.showTooltipsHelp = false;
        options.appearance.fullScreenMode = this.printEntity.isFullScreen || false;
        // options.appearance.showSaveDialog = false;
        // options.components.showBarCode = false;
        // options.components.showChart = false;
        // options.components.showCheckBox = false;
        // options.components.showClone = false;
        // options.components.showImage = false;
        // options.components.showPanel = false;
        // options.components.showRichText = false;
        // options.components.showShape = false;
        // options.components.showSubReport = false;
        // options.components.showText = false;
        // options.components.showTextInCells = false;
        // options.components.showZipCode = false;
        // options.crossBands.showCrossDataBand = false;
        // options.crossBands.showCrossFooterBand = false;
        // options.crossBands.showCrossGroupFooterBand = false;
        // options.crossBands.showCrossGroupHeaderBand = false;
        // options.crossBands.showCrossHeaderBand = false;
        // options.crossBands.showCrossTab = false;
        // options.bands.showChildBand = false;
        // options.bands.showColumnFooterBand = false;
        // options.bands.showColumnHeaderBand = false;
        // options.bands.showDataBand = false;
        // options.bands.showEmptyBand = false;
        // options.bands.showFooterBand = false;
        // options.bands.showGroupFooterBand = false;
        // options.bands.showGroupHeaderBand = false;
        // options.bands.showHeaderBand = false;
        // options.bands.showHierarchicalBand = false;
        // options.bands.showOverlayBand = false;
        // options.bands.showPageFooterBand = false;
        // options.bands.showPageHeaderBand = false;
        // options.bands.showReportSummaryBand = false;
        // options.bands.showReportTitleBand = false;
        // options.bands.showTable = false;
        options.dictionary.dataSourcesPermissions = Stimulsoft.Designer.StiDesignerPermissions.ModifyView;
        options.dictionary.resourcesPermissions = Stimulsoft.Designer.StiDesignerPermissions.None;
        options.dictionary.dataRelationsPermissions = Stimulsoft.Designer.StiDesignerPermissions.ModifyView;
        options.dictionary.dataColumnsPermissions = Stimulsoft.Designer.StiDesignerPermissions.ModifyView;
    }
    /**
     * 初始化Designer的事件
     * @private
     * @return {?}
     */
    initEvents() {
        /** @type {?} */
        const self = this;
        // 保存前
        this.designer.onSaveReport = (/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            /** @type {?} */
            const temp = e.report.saveToJsonString();
            /** @type {?} */
            const pages = this.report.pages.list;
            // 保存前事件
            self.printEntity.onSaveReportEvent.emit(temp);
            if (window.parent && window.parent['onSaveReportEvent']) {
                ((/** @type {?} */ (window.parent))).onSaveReportEvent({
                    format: temp,
                });
            }
            // isUseMetaData当个开关吧，外界设置为false，代表外界自己处理保存了
            if (self.printEntity.isUseMetaData) {
                self.printEntity.printFormat.content = temp;
                self.formatSrv.saveWithRes(self.printEntity.printFormat)
                    .then((/**
                 * @param {?} format
                 * @return {?}
                 */
                (format) => {
                    /** @type {?} */
                    const msg = Stimulsoft.Base.Localization.StiLocalization.get('Custom', 'sucSave');
                    self.notifyService.success(msg);
                    self.printEntity.printFormat = format;
                    //回调订阅格式id事件
                    self.printEntity.onGetPrintFormatIdEvent.emit(self.printEntity.printFormat.id);
                    //回调格式保存后事件
                    self.printEntity.onSavedReportEvent.emit({
                        printFormat: self.printEntity.printFormat,
                    });
                    //回调格式保存后事件
                    if (window.parent && window.parent['onSavedReportEvent']) {
                        ((/** @type {?} */ (window.parent))).onSavedReportEvent({
                            saved: true,
                            format: self.printEntity.printFormat,
                        });
                    }
                }))
                    .catch((/**
                 * @param {?} e
                 * @return {?}
                 */
                (e) => {
                    /** @type {?} */
                    const msg = Stimulsoft.Base.Localization.StiLocalization.get('Custom', 'failSave');
                    self.notifyService.error(msg);
                    self.printEntity.onGetPrintFormatIdEvent.emit('');
                    console.log(e);
                }));
            }
        });
        // 预览前
        this.designer.onPreviewReport = (/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            /** @type {?} */
            const temp = e.report.saveToJsonString();
            /** @type {?} */
            const ele = document.getElementById('StiDesigner_ViewerReportPanel');
            ele.hidden = true;
            self.loadSrv.show({
                message: 'loading...',
            });
            self.editsrv.printTestData(temp, self.printEntity.data, 'CloudPrint')
                .then((/**
             * @param {?} data
             * @return {?}
             */
            (data) => {
                /** @type {?} */
                const b = new Blob([data]);
                /** @type {?} */
                const reader = new FileReader();
                reader.readAsArrayBuffer(b);
                reader.onload = (/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) {
                    /** @type {?} */
                    const rendedFormat = (/** @type {?} */ (reader.result));
                    Utils.renderPdfByByte(rendedFormat, ele);
                });
                self.loadSrv.close();
            }));
            return false;
        });
    }
    /**
     * 保存前校验
     * @private
     * @param {?} pages 报表的page
     * @return {?}
     */
    checkBeforeSave(pages) {
        /** @type {?} */
        let isSave = true;
        for (let i = 0; i < pages.count; i++) {
            if (pages[i].components.count === 0) {
                isSave = false;
                break;
            }
        }
        return isSave;
    }
    /**
     * 初始化Designer
     * @private
     * @return {?}
     */
    initDesigner() {
        return this.editsrv.getEnableFonts()
            .then((/**
         * @param {?} fonts
         * @return {?}
         */
        (fonts) => {
            // var temp = Stimulsoft.Base.StiFontCollection.getFontFamilies().filter(x=>x.name=='SimSun' || x.name=='SimHei' || x.name=='Arial');
            //families 是个只读属性，无法赋值，可直接修改其内部对象的值_families
            // Stimulsoft.System.Drawing.FontFamily.families.clear();
            // Stimulsoft.System.Drawing.FontFamily._families=temp;
            /** @type {?} */
            var fontsAll = [];
            fonts.forEach((/**
             * @param {?} element
             * @return {?}
             */
            element => {
                /** @type {?} */
                var copytemp = new Stimulsoft.System.Drawing.FontFamily(element);
                fontsAll.push(copytemp);
            }));
            Stimulsoft.System.Drawing.FontFamily._families = fontsAll;
            // Set full screen mode for the designer
            /** @type {?} */
            const options = new Stimulsoft.Designer.StiDesignerOptions();
            // Create the report designer with specified options
            this.designer = new Stimulsoft.Designer.StiDesigner(options, 'StiDesigner', false);
            this.designer.report = new Stimulsoft.Report.StiReport();
            // 国际化设置
            this.initLocalizations();
            // 设置一些属性
            this.setOptions(options);
            // 注册事件
            this.initEvents();
            // 加载设计器
            return this.loadDesigner(this.printEntity.foramtId);
        }))
            .catch((/**
         * @return {?}
         */
        () => {
            this.notifyService.error("Load Enable Fonts Error");
        }));
    }
    /**
     * 初始化本地化
     * @private
     * @return {?}
     */
    initLocalizations() {
        /** @type {?} */
        const loc = this.printEntity.language;
        // 设置本地化语言相关
        Stimulsoft.Base
            .Localization
            .StiLocalization
            .addLocalizationFile('/platform/common/web/stimulsoft/languages/' + loc + '.xml', false, loc);
        Stimulsoft.Base.Localization.StiLocalization.cultureName = loc;
    }
    /**
     * 初始化自定义函数
     * @private
     * @return {?}
     */
    initCustomFunction() {
        return this.functionRegister.initCustomFunction(this.printEntity.appUrl + Urls.GetCustomJsFunc);
    }
    /**
     * 加载Designer
     * @private
     * @param {?} formatId 格式id
     * @return {?}
     */
    loadDesigner(formatId) {
        // 加载designer的schema
        return this.formatSrv.loadFormat(formatId, 'CloudPrint')
            .then((/**
         * @param {?} format
         * @return {?}
         */
        (format) => {
            this.designer.report.load(format);
            // 加载数据
            return this.formatSrv.loadData(this.printEntity.dataId, 'CloudPrint');
        }))
            .then((/**
         * @param {?} data2
         * @return {?}
         */
        (data2) => {
            // 加载数据
            /** @type {?} */
            const dataSet = new Stimulsoft.System.Data.DataSet('Data');
            console.log('给数据源添加数据');
            dataSet.readJson(data2);
            console.log('清空报表的数据源，以便重新赋值');
            this.designer.report.dictionary.databases.clear();
            this.designer.report.regData('Data', 'Data', dataSet);
            // 初始化自定义函数
            return this.initCustomFunction();
        }))
            .then((/**
         * @return {?}
         */
        () => {
            // 渲染
            this.designer.renderHtml('designer');
            // 设置渲染后的属性
            this.setOptionsAfterRend(this.designer);
            // 修改stimulsoft渲染时设定的工作区的默认高度
            document.getElementById('StiDesigner').style.height = this.printEntity.designerHeight;
            // 调整大小
            // this.designer.jsObject.ResizeDesigner();
            document.title = this.docTitle;
        }))
            .catch((/**
         * @param {?} e
         * @return {?}
         */
        (e) => {
            console.log(e);
        }));
    }
    /**
     * 渲染后需要设置的属性
     * @private
     * @param {?} designer 当前的Designer对象
     * @return {?}
     */
    setOptionsAfterRend(designer) {
        //屏蔽保存按钮的弹框
        designer.jsObject.options.report.properties.reportFile = 'report.mrt';
        designer.jsObject.options.buttons.dictionaryActions.hidden = true;
        designer.jsObject.options.buttons.dictionaryNewItem.hidden = true;
        designer.jsObject.options.buttons.pageToolButton.hidden = true;
        designer.jsObject.options.buttons.insertToolButton.hidden = true;
        // 属性面板的事件按钮
        designer.jsObject.options.buttons.propertiesToolbarEventsTab.hidden = true;
        // 属性面板的事件tab
        // designer.jsObject.options.buttons.propertiesToolbarEventsTab.hidden = true;
        // 属性面板的属性tab
        // designer.jsObject.options.buttons.propertiesToolbarPropertiesTab.hidden = true;
        designer.jsObject.options.buttons.redoButton.hidden = true;
        designer.jsObject.options.buttons.undoButton.hidden = true;
        designer.jsObject.options.buttons.reportCheckerButton.hidden = true;
        designer.jsObject.options.buttons.localizationButton.hidden = true;
        designer.jsObject.options.buttons.resizeDesigner.hidden = true;
        // 默认隐藏workpanel
        designer.jsObject.options.workPanel.changeVisibleState(!1);
        designer.jsObject.options.workPanel.visibleState = !1;
        /** @type {?} */
        const viewer = designer.jsObject.options.viewerContainer.firstChild;
        // viewer.jsObject.controls.menus.saveMenu.items["Html"].style.display = "none";
        // viewer.jsObject.controls.menus.saveMenu.items["separator2"].style.display = "none";
        // var toolbarTable = viewer.jsObject.controls.toolbar.firstChild;
        // viewer.jsObject.controls.toolbar.removeChild(toolbarTable);
        //预览界面的工具栏
        viewer.jsObject.controls.toolbar.style.display = 'none';
        //预览界面的缩放按钮
        viewer.jsObject.controls.buttons.Zoom.style.display = 'none';
        viewer.jsObject.controls.buttons.ZoomOnePage.style.display = 'none';
        viewer.jsObject.controls.buttons.ZoomPageWidth.style.display = 'none';
        // viewer.jsObject.controls.menus.printMenu.items['PrintPdf'].style.display='none'
        // viewer.jsObject.controls.menus.printMenu.items['PrintWithPreview'].style.display='none'
        // viewer.jsObject.controls.menus.printMenu.items['PrintWithoutPreview'].style.display='none'
    }
    /**
     * @private
     * @return {?}
     */
    loadSystemFonts() {
    }
}
CloudprintDesignerComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-cloudprint-designer',
                template: "<div style=\"overflow:auto;height: 100%;width: 100%\">\r\n    <div id=\"designer\" style=\"height: 100%;width: 100%\"></div>\r\n</div>\r\n",
                styles: ["div #StiDesigner{height:100%}"]
            }] }
];
/** @nocollapse */
CloudprintDesignerComponent.ctorParameters = () => [
    { type: CloudprintdesignerService },
    { type: PrintFormatService },
    { type: NotifyService },
    { type: CloudprintFunctionRegister },
    { type: PrintFormatService },
    { type: LoadingService }
];
if (false) {
    /**
     * 设计器对象
     * @type {?}
     * @private
     */
    CloudprintDesignerComponent.prototype.designer;
    /**
     * @type {?}
     * @private
     */
    CloudprintDesignerComponent.prototype.docTitle;
    /**
     * 打印参数实体
     * @type {?}
     */
    CloudprintDesignerComponent.prototype.printEntity;
    /**
     * @type {?}
     * @private
     */
    CloudprintDesignerComponent.prototype.server;
    /**
     * @type {?}
     * @private
     */
    CloudprintDesignerComponent.prototype.formatSrv;
    /**
     * @type {?}
     * @private
     */
    CloudprintDesignerComponent.prototype.notifyService;
    /**
     * @type {?}
     * @private
     */
    CloudprintDesignerComponent.prototype.functionRegister;
    /**
     * @type {?}
     * @private
     */
    CloudprintDesignerComponent.prototype.editsrv;
    /**
     * @type {?}
     * @private
     */
    CloudprintDesignerComponent.prototype.loadSrv;
}
//# sourceMappingURL=data:application/json;base64,