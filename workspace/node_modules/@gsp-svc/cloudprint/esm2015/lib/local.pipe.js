/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe, Inject, LOCALE_ID } from '@angular/core';
import { LANG_RESOURCES } from './i18n/language.resource';
export class LocalLangPipe {
    /**
     * @param {?} localeId
     */
    constructor(localeId) {
        this.defaultLang = "zh-CHS";
        this.langCode = localStorage.getItem("languageCode") || localeId || this.defaultLang;
        this.lang = LANG_RESOURCES[this.langCode] || LANG_RESOURCES[this.defaultLang];
    }
    /**
     * @param {?} name
     * @return {?}
     */
    transform(name) {
        return this.lang[name] || name;
    }
}
LocalLangPipe.decorators = [
    { type: Pipe, args: [{ name: 'locale' },] }
];
/** @nocollapse */
LocalLangPipe.ctorParameters = () => [
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    LocalLangPipe.prototype.defaultLang;
    /**
     * @type {?}
     * @private
     */
    LocalLangPipe.prototype.langCode;
    /**
     * @type {?}
     * @private
     */
    LocalLangPipe.prototype.lang;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWwucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atc3ZjL2Nsb3VkcHJpbnQvIiwic291cmNlcyI6WyJsaWIvbG9jYWwucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFHMUQsTUFBTSxPQUFPLGFBQWE7Ozs7SUFJdEIsWUFDdUIsUUFBZ0I7UUFKdEIsZ0JBQVcsR0FBVyxRQUFRLENBQUM7UUFNNUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxJQUFJLFFBQVEsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQ3JGLElBQUksQ0FBQyxJQUFJLEdBQUcsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxjQUFjLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ2xGLENBQUM7Ozs7O0lBQ0QsU0FBUyxDQUFDLElBQVk7UUFDbEIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQztJQUNuQyxDQUFDOzs7WUFiSixJQUFJLFNBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFOzs7O3lDQU1mLE1BQU0sU0FBQyxTQUFTOzs7Ozs7O0lBSnJCLG9DQUFnRDs7Ozs7SUFDaEQsaUNBQXlCOzs7OztJQUN6Qiw2QkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtLCBJbmplY3QsIExPQ0FMRV9JRCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBMQU5HX1JFU09VUkNFUyB9IGZyb20gJy4vaTE4bi9sYW5ndWFnZS5yZXNvdXJjZSc7XHJcblxyXG5AUGlwZSh7IG5hbWU6ICdsb2NhbGUnIH0pXHJcbmV4cG9ydCBjbGFzcyBMb2NhbExhbmdQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IGRlZmF1bHRMYW5nOiBzdHJpbmcgPSBcInpoLUNIU1wiO1xyXG4gICAgcHJpdmF0ZSBsYW5nQ29kZTogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBsYW5nOiB7fTtcclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIEBJbmplY3QoTE9DQUxFX0lEKSBsb2NhbGVJZDogc3RyaW5nXHJcbiAgICApIHtcclxuICAgICAgICB0aGlzLmxhbmdDb2RlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJsYW5ndWFnZUNvZGVcIikgfHwgbG9jYWxlSWQgfHwgdGhpcy5kZWZhdWx0TGFuZztcclxuICAgICAgICB0aGlzLmxhbmcgPSBMQU5HX1JFU09VUkNFU1t0aGlzLmxhbmdDb2RlXSB8fCBMQU5HX1JFU09VUkNFU1t0aGlzLmRlZmF1bHRMYW5nXTtcclxuICAgIH1cclxuICAgIHRyYW5zZm9ybShuYW1lOiBzdHJpbmcpOiBhbnkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmxhbmdbbmFtZV0gfHwgbmFtZTtcclxuICAgIH1cclxufVxyXG5cclxuIl19