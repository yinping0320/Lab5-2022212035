import { OnInit, OnDestroy, ElementRef } from '@angular/core';
import { CloudprintviewerService } from './cloudprint-viewer.service';
import { PrintEntity } from '../entitys/printEntity';
import { NotifyService } from '@farris/ui-notify';
import { CloudprintFunctionRegister } from '../functions/cloudprint.function.register';
import { PrintFormatService } from '../services/printFormatService';
import { LanguageService } from '@ecp-caf/caf-common';
import { OutputParam } from '../entitys/outputoptions/outputParam';
import { CloudprintService } from '../cloudprint.service';
import { LoadingService } from '@farris/ui-loading';
import { LocalLangPipe } from '../local.pipe';
export declare class CloudprintViewerComponent implements OnInit, OnDestroy {
    private server;
    private formatSrv;
    private notifyService;
    private functionRegister;
    private langservice;
    private loadSrv;
    private elementRef;
    private printSrv;
    outputParam: OutputParam;
    isRemotePrint: any;
    /** 预览器对象 */
    private viewer;
    localpipe: LocalLangPipe;
    private docTitle;
    /** 打印参数实体 */
    printEntity: PrintEntity;
    constructor(server: CloudprintviewerService, formatSrv: PrintFormatService, notifyService: NotifyService, functionRegister: CloudprintFunctionRegister, langservice: LanguageService, loadSrv: LoadingService, elementRef: ElementRef, printSrv: CloudprintService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    /**
     * 设置PrintEntity参数
     * @description 如果外界new新的PrintEntity，则需要调用该方法同步service的entity
     *              外界没有new新的PrintEntity，则不需要调用该方法
     *
     * 如下代码是cloudprint.service.ts里的代码，在cloudprint.service.ts有新的printEntity，
     *           所以需要调用setPrintEntity来同步
     *           this.designercomponentRef.instance.setPrintEntity(this.printEntity)
     *
     */
    setPrintEntity(entity: any): void;
    /**
     * 初始化Viewer
     */
    private initViewer;
    private renderPdf;
    /** 直接打印 */
    printDirect(): void;
    /** 盒子后台打印 */
    printBox(): any;
}
