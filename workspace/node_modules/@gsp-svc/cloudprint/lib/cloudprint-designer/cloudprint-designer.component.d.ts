import { OnInit, OnDestroy } from '@angular/core';
import { PrintEntity } from '../entitys/printEntity';
import { NotifyService } from '@farris/ui-notify';
import { CloudprintFunctionRegister } from '../functions/cloudprint.function.register';
import { PrintFormatService } from '../services/printFormatService';
import { CloudprintdesignerService } from './cloudprint-designer.service';
import { LoadingService } from '@farris/ui-loading';
export declare class CloudprintDesignerComponent implements OnInit, OnDestroy {
    private server;
    private formatSrv;
    private notifyService;
    private functionRegister;
    private editsrv;
    private loadSrv;
    /** 设计器对象 */
    private designer;
    private docTitle;
    /** 打印参数实体 */
    printEntity: PrintEntity;
    constructor(server: CloudprintdesignerService, formatSrv: PrintFormatService, notifyService: NotifyService, functionRegister: CloudprintFunctionRegister, editsrv: PrintFormatService, loadSrv: LoadingService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    /**
     * 设置PrintEntity参数
     * @description 如果外界new新的PrintEntity，则需要调用该方法同步service的entity
     *              外界没有new新的PrintEntity，则不需要调用该方法
     *
     * 如下代码是cloudprint.service.ts里的代码，在cloudprint.service.ts有新的printEntity，
     *           所以需要调用setPrintEntity来同步
     *           this.designercomponentRef.instance.setPrintEntity(this.printEntity)
     *
     */
    setPrintEntity(entity: any): void;
    /**
     * 设置Designer的options
     * @param options Designer的options对象
     */
    private setOptions;
    /**
     * 初始化Designer的事件
     */
    private initEvents;
    /**
     * 保存前校验
     * @param pages 报表的page
     */
    private checkBeforeSave;
    /**
     * 初始化Designer
     */
    private initDesigner;
    /**
     * 初始化本地化
     */
    private initLocalizations;
    /**
     * 初始化自定义函数
     */
    private initCustomFunction;
    /**
     * 加载Designer
     * @param formatId 格式id
     */
    private loadDesigner;
    /**
     * 渲染后需要设置的属性
     * @param designer 当前的Designer对象
     */
    private setOptionsAfterRend;
    private loadSystemFonts;
}
