import { OnInit, ElementRef, OnDestroy } from '@angular/core';
import { NgZone } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { MyMonacoEditorConfig } from './editorconfig';
import { CodeEditorEventService } from './my-monaco-editor-services/monaco-editor.event.service';
import { ExpressionEventService } from '../expression-event-service';
export declare const CODE_EDITOR_INPUT_VALUE_ACCESSOR: any;
export declare class MyMonacoEditorComponent implements ControlValueAccessor, OnDestroy, OnInit {
    private zone;
    private config;
    private codeEditorEventService;
    private eventService;
    protected _editor: any;
    private _options;
    _editorComponent: ElementRef;
    onInit: any;
    onChange: any;
    onTouched: any;
    options: any;
    insertWord(insertWord: string): void;
    constructor(zone: NgZone, config: MyMonacoEditorConfig, codeEditorEventService: CodeEditorEventService, eventService: ExpressionEventService);
    ngOnInit(): void;
    private onMonacoLoad;
    ngOnDestroy(): void;
    protected initMonaco(options: any): void;
    onChangeModelContentHandler(): void;
    onBlurEditorTextHandler(): void;
    private _value;
    value: any;
    localEditor(): void;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    onChangeHandler: (_: any) => void;
    onTouchedHandler: () => void;
}
