/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HttpClient } from '@angular/common/http';
import { Component, Output, EventEmitter, Input } from '@angular/core';
import { ExpressionEditorLocalePipe } from '../expression-editor-locale.pipe';
import { VarType } from './vartype';
var ExpressionVarGridComponent = /** @class */ (function () {
    function ExpressionVarGridComponent() {
        this.selectVarRow = new EventEmitter();
        this.columns = [
            { field: 'name', title: '名称' },
        ];
        this.items = [];
        //初始化i18n标识
        this.localeId = localStorage.getItem('languageCode');
        this.localePipe = new ExpressionEditorLocalePipe(this.localeId);
    }
    /**
     * @return {?}
     */
    ExpressionVarGridComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.items = [
            {
                name: this.localePipe.transform("VariableSessionValue"),
                id: VarType.Session
            },
            {
                name: this.localePipe.transform("VariableContextParameter"),
                id: VarType.Context
            }
        ];
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    ExpressionVarGridComponent.prototype.selectRowChange = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.selectVarRow.emit($event.data);
    };
    ExpressionVarGridComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-expression-var-grid',
                    template: "<farris-datagrid\r\n[idField]=\"'id'\"\r\n[height]=\"268\"\r\n[columns]=\"columns\" \r\n[data]=\"items\"\r\n[fit]=\"true\"\r\n[fitColumns]=\"true\"\r\n[striped]=\"false\"\r\n[showHeader]=\"false\"\r\n[headerHeight]=\"30\"\r\n[pagination]=\"false\"\r\n(selectChanged)=\"selectRowChange($event)\"\r\n>\r\n</farris-datagrid>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ExpressionVarGridComponent.ctorParameters = function () { return []; };
    ExpressionVarGridComponent.propDecorators = {
        h1: [{ type: Input }],
        selectVarRow: [{ type: Output }]
    };
    return ExpressionVarGridComponent;
}());
export { ExpressionVarGridComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ExpressionVarGridComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    ExpressionVarGridComponent.prototype.localePipe;
    /** @type {?} */
    ExpressionVarGridComponent.prototype.h1;
    /** @type {?} */
    ExpressionVarGridComponent.prototype.selectVarRow;
    /** @type {?} */
    ExpressionVarGridComponent.prototype.columns;
    /** @type {?} */
    ExpressionVarGridComponent.prototype.items;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwcmVzc2lvbi12YXItZ3JpZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXN2Yy9leHByZXNzaW9uLyIsInNvdXJjZXMiOlsibGliL2V4cHJlc3Npb24tdmFyLWdyaWQvZXhwcmVzc2lvbi12YXItZ3JpZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9FLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFcEM7SUFXRTtRQU1VLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUM1QyxZQUFPLEdBQUc7WUFDUixFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBQztTQUM1QixDQUFDO1FBQ0osVUFBSyxHQUFDLEVBQUUsQ0FBQztRQVRQLFdBQVc7UUFDWCxJQUFJLENBQUMsUUFBUSxHQUFJLFlBQVksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLDBCQUEwQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRSxDQUFDOzs7O0lBT0QsNkNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLEtBQUssR0FBQztZQUNUO2dCQUNFLElBQUksRUFBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxzQkFBc0IsQ0FBQztnQkFDdEQsRUFBRSxFQUFDLE9BQU8sQ0FBQyxPQUFPO2FBQ25CO1lBQ0Q7Z0JBQ0UsSUFBSSxFQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLDBCQUEwQixDQUFDO2dCQUMxRCxFQUFFLEVBQUMsT0FBTyxDQUFDLE9BQU87YUFDbkI7U0FDRixDQUFBO0lBQ0gsQ0FBQzs7Ozs7SUFDRCxvREFBZTs7OztJQUFmLFVBQWdCLE1BQU07UUFFcEIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3RDLENBQUM7O2dCQXJDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHlCQUF5QjtvQkFDbkMsaVZBQW1EOztpQkFFcEQ7Ozs7O3FCQVlFLEtBQUs7K0JBQ0wsTUFBTTs7SUFxQlQsaUNBQUM7Q0FBQSxBQXRDRCxJQXNDQztTQWpDWSwwQkFBMEI7Ozs7OztJQUdyQyw4Q0FBMEI7Ozs7O0lBQzFCLGdEQUFpRDs7SUFPakQsd0NBQXlCOztJQUN6QixrREFBNEM7O0lBQzVDLDZDQUVJOztJQUNKLDJDQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBFeHByZXNzaW9uRWRpdG9yTG9jYWxlUGlwZSB9IGZyb20gJy4uL2V4cHJlc3Npb24tZWRpdG9yLWxvY2FsZS5waXBlJztcclxuaW1wb3J0IHsgVmFyVHlwZSB9IGZyb20gJy4vdmFydHlwZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FwcC1leHByZXNzaW9uLXZhci1ncmlkJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vZXhwcmVzc2lvbi12YXItZ3JpZC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vZXhwcmVzc2lvbi12YXItZ3JpZC5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEV4cHJlc3Npb25WYXJHcmlkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgLy/lrprkuYlpMThu5qCH6K+GXHJcbiAgcHJpdmF0ZSBsb2NhbGVJZCA6IHN0cmluZztcclxuICBwcml2YXRlIGxvY2FsZVBpcGUgOiAgRXhwcmVzc2lvbkVkaXRvckxvY2FsZVBpcGU7XHJcbiAgXHJcbiAgY29uc3RydWN0b3IoKSB7IFxyXG4gICAgLy/liJ3lp4vljJZpMThu5qCH6K+GXHJcbiAgICB0aGlzLmxvY2FsZUlkID0gIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdsYW5ndWFnZUNvZGUnKTtcclxuICAgIHRoaXMubG9jYWxlUGlwZSA9IG5ldyBFeHByZXNzaW9uRWRpdG9yTG9jYWxlUGlwZSh0aGlzLmxvY2FsZUlkKTtcclxuICB9XHJcbiAgQElucHV0KCkgaDEgOiBIdHRwQ2xpZW50O1xyXG4gIEBPdXRwdXQoKSBzZWxlY3RWYXJSb3cgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgY29sdW1ucyA9IFtcclxuICAgIHsgZmllbGQ6ICduYW1lJywgdGl0bGU6ICflkI3np7AnfSxcclxuICAgIF07XHJcbiAgaXRlbXM9W107XHJcbiAgbmdPbkluaXQoKSB7IFxyXG4gICAgdGhpcy5pdGVtcz1bXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOnRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oXCJWYXJpYWJsZVNlc3Npb25WYWx1ZVwiKSxcclxuICAgICAgICBpZDpWYXJUeXBlLlNlc3Npb25cclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIG5hbWU6dGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybShcIlZhcmlhYmxlQ29udGV4dFBhcmFtZXRlclwiKSxcclxuICAgICAgICBpZDpWYXJUeXBlLkNvbnRleHRcclxuICAgICAgfVxyXG4gICAgXVxyXG4gIH1cclxuICBzZWxlY3RSb3dDaGFuZ2UoJGV2ZW50KVxyXG4gIHtcclxuICAgIHRoaXMuc2VsZWN0VmFyUm93LmVtaXQoJGV2ZW50LmRhdGEpO1xyXG4gIH1cclxufVxyXG4iXX0=