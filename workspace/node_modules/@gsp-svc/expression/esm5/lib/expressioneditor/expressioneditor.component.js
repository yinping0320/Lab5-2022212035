/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, Injector, Optional } from '@angular/core';
import { ExpressionEventService } from '../expression-event-service';
import { VarType } from '../expression-var-grid/vartype';
import { ExpressionContextEntity } from '../expression-context-entity';
import { Schema, EntitySet } from '../schema';
import { ExpressionEntity } from '../expression-entity';
import { CurrentNode } from '../currentNode';
import { InjectedEntity } from '../injected-entity';
import { NotifyService } from '@farris/ui-notify';
import { InjectedType } from '../injected-type';
import { Adapter } from '../adapter';
import InputStream from 'antlr4/InputStream';
import CommonTokenStream from 'antlr4/CommonTokenStream';
import JavaScriptLexer from 'JavaScriptLexer';
import { HttpClient } from "@angular/common/http";
import { ExpressionEditorLocalePipe } from '../expression-editor-locale.pipe';
import { FunctionI18nResources } from '../i18n/FunctionI18nResource';
import { NewEntitySet, NewSchema } from '../i18n/NewSchema';
var ExpressioneditorComponent = /** @class */ (function () {
    function ExpressioneditorComponent(eventService, injector, http) {
        this.eventService = eventService;
        this.injector = injector;
        this.http = http;
        this.standardFunctions = []; //规范函数
        //规范函数
        this.allFunctions = []; //所有函数，包含不规范
        //所有函数，包含不规范
        this.deprecatedFunctions = [
            "StringSubstring", "StringLength", "StringReplace", "StringToUpper", "StringToLower", "StringIndexOf", "StringLastIndexOf", "StringTrimStart", "StringTrimEnd", "StringTrim", "StringAdd",
            "Round", "BankerRound",
            "getComputeJsonData",
            "ToDecimal", "ToSingle"
        ]; //函数调整，一些函数由于命名不规范而不使用，并为这些函数提供规范命名的实现。为了支持已经保存的表达式，不规范命名函数将会保留，但是会被过滤掉
        //函数调整，一些函数由于命名不规范而不使用，并为这些函数提供规范命名的实现。为了支持已经保存的表达式，不规范命名函数将会保留，但是会被过滤掉
        this.currentFuncTabType = "String"; //当前函数选择类型
        //当前函数选择类型
        this.currentVarType = VarType.Context; //当前变量选择类型
        //当前变量选择类型
        this.descriptinfo = ""; //函数说明
        //函数说明
        this.keyInfo = ""; //函数key值
        //函数key值
        this.schema = new Map(); //schema列表
        //schema列表
        this.newSchemaMap = new Map(); //newSchema列表
        //newSchema列表
        this.choseSchemaTableName = new CurrentNode; //选择schema、entity中的表名
        //表达式临时文本
        this.selectedResource = false;
        this.entitywidth = "100%";
        this.adapter = new Adapter();
        this.selectnewfunc = false;
        this.funcExtend = []; //扩展函数实体
        //扩展函数实体
        this.expressionEntity = new ExpressionContextEntity; //表达式内部上下文
        //表达式内部上下文
        this.contextEntities = [];
        this.sessionEntities = [];
        this.injectedEntities = [];
        this.smartHelp = [];
        this.isPanel = false;
        this.funcEntities = [];
        this.gspCDTs = [];
        this.commonObjects = [];
        this.injectSchemaName = "CommonObject";
        this.injectedType = InjectedType.EntityType;
        this.windowWidth = 1000;
        this.result = new EventEmitter();
        this.closeModalEmitter = new EventEmitter();
        //消息提示
        this.notifies = {
            1: { type: 'success', msg: '表达式生成！' },
            2: { type: 'warning', msg: '请确保必填项填写完整！' },
            3: { type: 'info', msg: '功能尚未提供！' }
        };
        //编辑器的基本参数
        this.options = {
            theme: 'vs-light',
            language: 'javascript',
            automaticLayout: true
        };
        if (this.injector) {
            this.notifyService = this.injector.get(NotifyService);
            this.http = this.injector.get(HttpClient);
            this.localeId = localStorage.getItem('languageCode');
            this.localePipe = new ExpressionEditorLocalePipe(this.localeId);
        }
    }
    //编辑器显示文本绑定
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.ngOnInit = 
    //编辑器显示文本绑定
    /**
     * @return {?}
     */
    function () {
        //初始化frame i18n资源
        this.Advanced = this.localePipe.transform("Advanced");
        this.String = this.localePipe.transform("String");
        this.Aggregate = this.localePipe.transform("Aggregate");
        this.Estimate = this.localePipe.transform("Estimate");
        this.DateTime = this.localePipe.transform("DateTime");
        this.Translate = this.localePipe.transform("Translate");
        this.Analytical = this.localePipe.transform("Analytical");
        this.Math = this.localePipe.transform("Math");
        this.Extend = this.localePipe.transform("Extend");
        this.Variable = this.localePipe.transform("Variable");
        this.Entity = this.localePipe.transform("Entity");
        this.Help = this.localePipe.transform("Help");
        this.FunctionDescription = this.localePipe.transform("FunctionDescription");
        this.VarDescription = this.localePipe.transform("VarDescription");
        this.CurrentProp = this.localePipe.transform("CurrentProp");
        this.CurrentChosedProp = this.localePipe.transform("CurrentChosedProp");
        //初始化i18n函数
        this.allFunctions = FunctionI18nResources[this.localeId] || FunctionI18nResources["zh-CHS"];
        //过滤不规范命名函数
        for (var i = 0; i < this.allFunctions.length; i++) {
            if (!this.deprecatedFunctions.includes(this.allFunctions[i].key)) {
                this.standardFunctions.push(this.allFunctions[i]);
            }
        }
        //区分：弹出框or面板
        if (this.isPanel) {
            this.OninitPanel();
        }
        else {
            this.OninitWindows();
        }
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        if (this.isPanel) {
            this.OninitPanel();
        }
    };
    //弹出框式
    //弹出框式
    /**
     * @private
     * @return {?}
     */
    ExpressioneditorComponent.prototype.OninitWindows = 
    //弹出框式
    /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        //若表达式上下文实体为空或其中的预置表达式文本字段为空或文本长度为0，则预置默认的文本
        if (!(this.expressionEntity) || !(this.expressionEntity.expr) || this.expressionEntity.expr.length == 0) {
            this.code = null;
        }
        else {
            //否则，添加预置文本显示
            this.code = this.expressionEntity.expr;
        }
        //初始化各扩展函数实体
        this.expressionEntity.funcEntities.forEach((/**
         * @param {?} funcentity
         * @return {?}
         */
        function (funcentity) {
            _this.funcExtend = _this.funcExtend.filter((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.key !== funcentity.key; }));
            _this.funcExtend.push(funcentity);
        }));
        //初始化各上下文实体
        this.expressionEntity.contextEntities.forEach((/**
         * @param {?} contextentity
         * @return {?}
         */
        function (contextentity) {
            _this.contextEntities.push(contextentity);
        }));
        //初始化各系统变量实体
        this.expressionEntity.sessionEntities.forEach((/**
         * @param {?} sessionentity
         * @return {?}
         */
        function (sessionentity) {
            _this.sessionEntities.push(sessionentity);
        }));
        //初始化schema实体类型列表
        this.schema = this.expressionEntity.schemaMap;
        //初始化newSchema实体类型列表
        this.newSchemaMap = this.expressionEntity.newSchemaMap;
        //初始化injectedEntities注入实体
        this.injectedEntities = this.expressionEntity.injectedEntities;
        //初始化smartHelp列表
        this.smartHelp = this.expressionEntity.smartHelpEntities;
    };
    //面板式
    //面板式
    /**
     * @private
     * @return {?}
     */
    ExpressioneditorComponent.prototype.OninitPanel = 
    //面板式
    /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.customNewSchemaName && this.customNewSchema) {
            //注入NewSchema
            this.newSchemaMap.set(this.customNewSchemaName, this.customNewSchema);
            if (this.injectName && this.injectNameInSchema && this.injectSchemaName) {
                this.injectedEntities = this.injectedEntities.filter((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item.injectedName !== _this.injectName; }));
                //构造注入实体对象
                /** @type {?} */
                var injectedEntity = new InjectedEntity();
                //若注入的实体名为空，则默认为注入实体在newSchema中的名称
                injectedEntity.name = this.injectName ? this.injectName : this.injectNameInSchema;
                injectedEntity.schemaName = this.injectSchemaName;
                injectedEntity.injectedName = this.injectNameInSchema;
                injectedEntity.injectedType = this.injectedType;
                this.injectedEntities.push(injectedEntity);
            }
            if (this.gspCDTs && this.gspCDTs.length > 0) {
                /** @type {?} */
                var innerSchema_1 = new NewSchema();
                //若newSchemaMap中存在CDT的schema
                if (this.newSchemaMap.get("CDT")) {
                    innerSchema_1 = this.newSchemaMap.get("CDT");
                }
                //将每一个CDT转化为newSchema内部结构中的entityType
                this.gspCDTs.forEach((/**
                 * @param {?} gspCDT
                 * @return {?}
                 */
                function (gspCDT) {
                    /** @type {?} */
                    var entityType = _this.adapter.convertCDTOfNewSchema(gspCDT);
                    innerSchema_1.entityTypes = innerSchema_1.entityTypes.filter((/**
                     * @param {?} item
                     * @return {?}
                     */
                    function (item) { return item.code !== entityType.code; }));
                    innerSchema_1.entityTypes.push(entityType);
                }));
                //将合并后的newSchema放入内部上下文实体中
                this.newSchemaMap.set("CDT", innerSchema_1);
            }
            if (this.commonObjects && this.commonObjects.length > 0) {
                /** @type {?} */
                var innerSchema_2 = new NewSchema;
                ;
                //若newSchemaMap中存在CO的newSchema
                if (this.newSchemaMap.get("CommonObject")) {
                    innerSchema_2 = this.newSchemaMap.get("CommonObject");
                }
                this.commonObjects.forEach((/**
                 * @param {?} co
                 * @return {?}
                 */
                function (co) {
                    //将每一个CO转化为schema内部结构中的entityType
                    /** @type {?} */
                    var entityTypes = _this.adapter.convertCOOfNewSchema(co);
                    entityTypes.forEach((/**
                     * @param {?} entityType
                     * @return {?}
                     */
                    function (entityType) {
                        innerSchema_2.entityTypes = innerSchema_2.entityTypes.filter((/**
                         * @param {?} item
                         * @return {?}
                         */
                        function (item) { return item.code !== entityType.code; }));
                        innerSchema_2.entityTypes.push(entityType);
                        /** @type {?} */
                        var entitySet = new NewEntitySet;
                        entitySet.code = entityType.code + "s";
                        entitySet.name = entityType.name;
                        entitySet.entityType = entityType.code;
                        innerSchema_2.entitySets = innerSchema_2.entitySets.filter((/**
                         * @param {?} item
                         * @return {?}
                         */
                        function (item) { return item.code !== entitySet.code; }));
                        innerSchema_2.entitySets.push(entitySet);
                    }));
                }));
                //将合并后的newSchema放入内部上下文实体中
                this.newSchemaMap.set("CommonObject", innerSchema_2);
            }
        }
        else if (this.customSchemaName && this.customSchema) {
            //注入旧Schema对象
            this.schema.set(this.customSchemaName, this.customSchema);
            if (this.injectName && this.injectNameInSchema && this.injectSchemaName) {
                this.injectedEntities = this.injectedEntities.filter((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item.injectedName !== _this.injectName; }));
                //构造注入实体对象
                /** @type {?} */
                var injectedEntity = new InjectedEntity();
                //若注入的实体名为空，则默认为注入实体在schema中的名称
                injectedEntity.name = this.injectName ? this.injectName : this.injectNameInSchema;
                injectedEntity.schemaName = this.injectSchemaName;
                injectedEntity.injectedName = this.injectNameInSchema;
                injectedEntity.injectedType = this.injectedType;
                this.injectedEntities.push(injectedEntity);
            }
            if (this.gspCDTs && this.gspCDTs.length > 0) {
                /** @type {?} */
                var innerSchema_3 = new Schema();
                //若schemaMap中存在CDT的schema
                if (this.schema.get("CDT")) {
                    innerSchema_3 = this.schema.get("CDT");
                }
                //将每一个CDT转化为schema内部结构中的entityType
                this.gspCDTs.forEach((/**
                 * @param {?} gspCDT
                 * @return {?}
                 */
                function (gspCDT) {
                    /** @type {?} */
                    var entityType = _this.adapter.convertCDT(gspCDT);
                    innerSchema_3.entityTypes = innerSchema_3.entityTypes.filter((/**
                     * @param {?} item
                     * @return {?}
                     */
                    function (item) { return item.id !== entityType.id; }));
                    innerSchema_3.entityTypes.push(entityType);
                }));
                //将合并后的schema放入内部上下文实体中
                this.schema.set("CDT", innerSchema_3);
            }
            //处理旧Schema的CO对象
            if (this.commonObjects && this.commonObjects.length > 0) {
                /** @type {?} */
                var innerSchema_4 = new Schema;
                ;
                //若schemaMap中存在CO的schema
                if (this.schema.get("CommonObject")) {
                    innerSchema_4 = this.schema.get("CommonObject");
                }
                this.commonObjects.forEach((/**
                 * @param {?} co
                 * @return {?}
                 */
                function (co) {
                    //将每一个CO转化为schema内部结构中的entityType
                    /** @type {?} */
                    var entityTypes = _this.adapter.convertCO(co);
                    entityTypes.forEach((/**
                     * @param {?} entityType
                     * @return {?}
                     */
                    function (entityType) {
                        innerSchema_4.entityTypes = innerSchema_4.entityTypes.filter((/**
                         * @param {?} item
                         * @return {?}
                         */
                        function (item) { return item.id !== entityType.id; }));
                        innerSchema_4.entityTypes.push(entityType);
                        /** @type {?} */
                        var entitySet = new EntitySet;
                        entitySet.name = entityType.name + "s";
                        entitySet.entityType = entityType.name;
                        entitySet.description = entityType.description;
                        innerSchema_4.entitySets = innerSchema_4.entitySets.filter((/**
                         * @param {?} item
                         * @return {?}
                         */
                        function (item) { return item.name !== entitySet.name; }));
                        innerSchema_4.entitySets.push(entitySet);
                    }));
                }));
                //将合并后的schema放入内部上下文实体中
                this.schema.set("CommonObject", innerSchema_4);
            }
        }
        //初始化扩展函数
        if (this.funcEntities.length > 0) {
            this.funcEntities.forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                _this.funcExtend = _this.funcExtend.filter((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item.key !== element.key; }));
                _this.funcExtend.push(element);
            }));
        }
        //预置编辑框显示值
        /** @type {?} */
        var textEntity = (/** @type {?} */ (JSON.parse(this.text ? this.text : null)));
        if (textEntity && textEntity.expr) {
            //加载Antlr4工具
            /** @type {?} */
            var inputStream = new InputStream.InputStream(textEntity.expr);
            /** @type {?} */
            var lexer = new JavaScriptLexer.JavaScriptLexer(inputStream);
            /** @type {?} */
            var tokens = new CommonTokenStream.CommonTokenStream(lexer);
            tokens.fill();
            //tokens切分的js文本抽取到array中
            /** @type {?} */
            var array = new Array();
            for (var index = 0; index < tokens.tokens.length - 1; index++) {
                array[index] = tokens.tokens[index].text;
            }
            //遍历array的js文本，每个js文本遍历allFunctions查找对应的语义化文本，封装为str
            /** @type {?} */
            var str = "";
            for (var index = 0; index < array.length; index++) {
                if (((array[index] == "DefaultFunction") || (array[index] == "Math")) && (array[index + 1] == ".")) {
                    continue;
                }
                else if (array[index] == "." && (array[index - 1] == "DefaultFunction" || array[index - 1] == "Math")) {
                    continue;
                }
                else {
                    /** @type {?} */
                    var num = 0;
                    //遍历上下文变量
                    if (num == 0) {
                        for (var i = 0; i < this.contextEntities.length; i++) {
                            if (array[index] == ("\"" + this.contextEntities[i].key + "\"")) {
                                str = str + "\"" + this.contextEntities[i].name + "\"";
                                num = 1;
                                break;
                            }
                        }
                    }
                    //遍历session变量
                    if (num == 0) {
                        for (var i = 0; i < this.sessionEntities.length; i++) {
                            if (array[index] == ("\"" + this.sessionEntities[i].key + "\"")) {
                                str = str + "\"" + this.sessionEntities[i].name + "\"";
                                num = 1;
                                break;
                            }
                        }
                    }
                    //计数器num：如果遍历allFunctions没找到对应字段，则直接拼接(num=0)；否则替换(num=1)
                    if (num == 0) {
                        for (var i = 0; i < this.allFunctions.length; i++) {
                            if (array[index] == this.allFunctions[i].key) {
                                if (this.allFunctions[i].type != "Advanced") {
                                    str = str + this.allFunctions[i].name;
                                    num = 1;
                                    break;
                                }
                            }
                        }
                    }
                    //如果计数器为0，证明没有语义化匹配。显示原始数据
                    if (num == 0) {
                        str = str + array[index];
                    }
                }
            }
            this.code = str;
        }
        else {
            this.code = null;
        }
    };
    //编辑器初始化事件句柄
    //编辑器初始化事件句柄
    /**
     * @param {?} $event
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onInitHandler = 
    //编辑器初始化事件句柄
    /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
    };
    //编辑器表达式改变事件句柄
    //编辑器表达式改变事件句柄
    /**
     * @param {?} event
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onChangeHandler = 
    //编辑器表达式改变事件句柄
    /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.expressioninfo = event.data;
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onTouchedHandler = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
    };
    /***函数选择tab也切换事件 */
    /**
     * 函数选择tab也切换事件
     * @param {?} $event
     * @return {?}
     */
    ExpressioneditorComponent.prototype.funcTabChange = /**
     * 函数选择tab也切换事件
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.currentFuncTabType = $event.nextId;
    };
    //函数表格中选择行事件
    //函数表格中选择行事件
    /**
     * @param {?} $event
     * @return {?}
     */
    ExpressioneditorComponent.prototype.selectFuncRowChange = 
    //函数表格中选择行事件
    /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.descriptinfo = this.FunctionDescription + $event.description;
        this.eventService.clearVarSelect();
        this.selectnewfunc = true;
    };
    //变量：类型选择                        (farris单击事件，不调整)
    //变量：类型选择                        (farris单击事件，不调整)
    /**
     * @param {?} $event
     * @return {?}
     */
    ExpressioneditorComponent.prototype.selectVarRowChange = 
    //变量：类型选择                        (farris单击事件，不调整)
    /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.currentVarType = $event.id;
    };
    //变量：描述                            (farris单击事件，不调整)
    //变量：描述                            (farris单击事件，不调整)
    /**
     * @param {?} $event
     * @return {?}
     */
    ExpressioneditorComponent.prototype.selectVarInfoRowChange = 
    //变量：描述                            (farris单击事件，不调整)
    /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.descriptinfo = this.VarDescription + $event.description;
        this.eventService.clearFuncSelect();
    };
    //schema表名选择                        (未使用)
    //schema表名选择                        (未使用)
    /**
     * @param {?} $event
     * @return {?}
     */
    ExpressioneditorComponent.prototype.selectschemaChange = 
    //schema表名选择                        (未使用)
    /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.choseSchemaTableName = $event;
    };
    //数据：父组件单击描述                   (farris单击事件，不调整)
    //数据：父组件单击描述                   (farris单击事件，不调整)
    /**
     * @param {?} $event
     * @return {?}
     */
    ExpressioneditorComponent.prototype.selectentitychange = 
    //数据：父组件单击描述                   (farris单击事件，不调整)
    /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.choseSchemaTableName = $event;
        if ($event.nodeType == "Complex") {
            this.entitywidth = "80%";
            this.selectedResource = true;
        }
        else {
            this.entitywidth = "100%";
            this.selectedResource = false;
        }
        this.descriptinfo = this.CurrentProp + $event.name + "-->" + $event.description;
    };
    //数据：子组件单击描述                   (farris单击事件，不调整)
    //数据：子组件单击描述                   (farris单击事件，不调整)
    /**
     * @param {?} $event
     * @return {?}
     */
    ExpressioneditorComponent.prototype.selectschemainfoChange = 
    //数据：子组件单击描述                   (farris单击事件，不调整)
    /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.descriptinfo = this.CurrentChosedProp + $event.name + "-->" + $event.description;
    };
    //变量：双击插入                        (farris双击事件：调整)
    //变量：双击插入                        (farris双击事件：调整)
    /**
     * @param {?} $event
     * @return {?}
     */
    ExpressioneditorComponent.prototype.dbclickVarInsert = 
    //变量：双击插入                        (farris双击事件：调整)
    /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event) {
            switch (this.currentVarType) {
                case VarType.Context:
                    for (var i = 0; i < this.standardFunctions.length; i++) {
                        if (this.standardFunctions[i].key == "GetContextParameter") {
                            this.eventService.insertExpression(this.standardFunctions[i].name + "(\"" + $event.data.name + "\")");
                            break;
                        }
                    }
                    break;
                case VarType.Session:
                    for (var i = 0; i < this.standardFunctions.length; i++) {
                        if (this.standardFunctions[i].key == "GetSessionValue") {
                            this.eventService.insertExpression(this.standardFunctions[i].name + "(\"" + $event.data.name + "\")");
                            break;
                        }
                    }
                    break;
                default:
                    break;
            }
        }
    };
    //双击插入schema表信息                  (未使用)
    //双击插入schema表信息                  (未使用)
    /**
     * @param {?} $event
     * @return {?}
     */
    ExpressioneditorComponent.prototype.dbclickSchemaInfoInsert = 
    //双击插入schema表信息                  (未使用)
    /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event) {
            this.eventService.insertExpression($event.data);
        }
    };
    //数据：双击插入                        (双击事件：不调整)
    //数据：双击插入                        (双击事件：不调整)
    /**
     * @param {?} $event
     * @return {?}
     */
    ExpressioneditorComponent.prototype.dbclickEntityInsert = 
    //数据：双击插入                        (双击事件：不调整)
    /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event) {
            this.eventService.insertExpression($event);
        }
    };
    //数据子组件：双击插入                  (farris双击事件：子组件已修改)
    //数据子组件：双击插入                  (farris双击事件：子组件已修改)
    /**
     * @param {?} $event
     * @return {?}
     */
    ExpressioneditorComponent.prototype.dbclickEntityInfoInsert = 
    //数据子组件：双击插入                  (farris双击事件：子组件已修改)
    /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event) {
            this.eventService.insertExpression($event);
        }
    };
    //智能帮助：双击                        (未使用)          
    //智能帮助：双击                        (未使用)          
    /**
     * @param {?} $event
     * @return {?}
     */
    ExpressioneditorComponent.prototype.dbclickSmartHelpInsert = 
    //智能帮助：双击                        (未使用)          
    /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event) {
            this.eventService.insertExpression($event.data);
        }
    };
    /**
     * @description 函数：双击插入          (farris双击事件：调整)
     * @param $event
     * 1：判断是否为Advanced，如果是：直接获取对应的name插入;如果不是：获取对应的name，然后拼接参数
     */
    /**
     * \@description 函数：双击插入          (farris双击事件：调整)
     * @param {?} $event
     * 1：判断是否为Advanced，如果是：直接获取对应的name插入;如果不是：获取对应的name，然后拼接参数
     * @return {?}
     */
    ExpressioneditorComponent.prototype.dbclickInsert = /**
     * \@description 函数：双击插入          (farris双击事件：调整)
     * @param {?} $event
     * 1：判断是否为Advanced，如果是：直接获取对应的name插入;如果不是：获取对应的name，然后拼接参数
     * @return {?}
     */
    function ($event) {
        //插入编辑框的语义化文本insertText
        /** @type {?} */
        var insertText = $event.data.key;
        //根据$event.data.key找到函数的语义化名称
        for (var index = 0; index < this.standardFunctions.length; index++) {
            if (insertText == this.standardFunctions[index].key) {
                insertText = this.standardFunctions[index].name;
                break;
            }
            ;
        }
        //如果不是Advanced，拼接参数
        if ($event.data.type != "Advanced") {
            insertText += "(";
            /** @type {?} */
            var paramsList = $event.data.params;
            for (var i = 0; i <= paramsList.length - 1; i++) {
                if (paramsList.length == 1) {
                    //一个参数，无需添加逗号。参数类型为String则首尾追加""，其他直接添加
                    if (paramsList[0].type == "string") {
                        insertText += "\"" + paramsList[0].name + "\"";
                    }
                    else {
                        insertText += paramsList[0].name;
                    }
                }
                else {
                    //多个参数，添加逗号分隔参数
                    if (i != paramsList.length - 1) {
                        //参数不是最后一位
                        if (paramsList[i].type == "string") {
                            insertText += "\"" + paramsList[i].name + "\",";
                        }
                        else {
                            insertText += paramsList[i].name + ",";
                        }
                    }
                    else {
                        //参数是最后一位
                        if (paramsList[i].type == "string") {
                            insertText += "\"" + paramsList[i].name + "\"";
                        }
                        else {
                            insertText += paramsList[i].name;
                        }
                    }
                }
            }
            insertText += ")";
        }
        this.keyInfo = insertText;
        this.eventService.insertExpression(this.keyInfo);
    };
    /**
     * @description 获取表达式串
     * 保存时，进行语义化-->js的转换
     * 1：封装ExpressionEntity    属性：expr, sexpr
     * 2：判断有无expr；有则使用Antlr4进行解析转换
     *    2.1：Antlr4工具拿到数组Array
     *    2.2：根据数组元素与name的对应，替换为key
     *    2.3：替换后的数组元素拼接出str
     */
    /**
     * \@description 获取表达式串
     * 保存时，进行语义化-->js的转换
     * 1：封装ExpressionEntity    属性：expr, sexpr
     * 2：判断有无expr；有则使用Antlr4进行解析转换
     *    2.1：Antlr4工具拿到数组Array
     *    2.2：根据数组元素与name的对应，替换为key
     *    2.3：替换后的数组元素拼接出str
     * @return {?}
     */
    ExpressioneditorComponent.prototype.getExprs = /**
     * \@description 获取表达式串
     * 保存时，进行语义化-->js的转换
     * 1：封装ExpressionEntity    属性：expr, sexpr
     * 2：判断有无expr；有则使用Antlr4进行解析转换
     *    2.1：Antlr4工具拿到数组Array
     *    2.2：根据数组元素与name的对应，替换为key
     *    2.3：替换后的数组元素拼接出str
     * @return {?}
     */
    function () {
        /** @type {?} */
        var exprEntity = new ExpressionEntity;
        exprEntity.expr = this.expressioninfo;
        exprEntity.sexpr = this.expressionEntity.sexpr;
        if (exprEntity.expr == null || exprEntity.expr == "") {
            this.result.emit(null);
        }
        else {
            //2：expr不为空，使用Antlr4进行解析
            /** @type {?} */
            var inputStream = new InputStream.InputStream(exprEntity.expr);
            /** @type {?} */
            var lexer = new JavaScriptLexer.JavaScriptLexer(inputStream);
            /** @type {?} */
            var tokens = new CommonTokenStream.CommonTokenStream(lexer);
            tokens.fill();
            /** @type {?} */
            var array = new Array();
            for (var index = 0; index < tokens.tokens.length - 1; index++) {
                array[index] = tokens.tokens[index].text;
            }
            //遍历所有的token
            for (var index = 0; index < array.length; index++) {
                /** @type {?} */
                var num = 0;
                if (num == 0) {
                    //遍历上下文变量
                    for (var i = 0; i < this.expressionEntity.contextEntities.length; i++) {
                        if (array[index] == ("\"" + this.expressionEntity.contextEntities[i].name + "\"")) {
                            array[index] = "\"" + this.expressionEntity.contextEntities[i].key + "\"";
                            num = 1;
                            break;
                        }
                    }
                }
                if (num == 0) {
                    //遍历session变量
                    for (var i = 0; i < this.expressionEntity.sessionEntities.length; i++) {
                        if (array[index] == ("\"" + this.expressionEntity.sessionEntities[i].name + "\"")) {
                            array[index] = "\"" + this.expressionEntity.sessionEntities[i].key + "\"";
                            num = 1;
                            break;
                        }
                    }
                }
                if (num == 0) {
                    //遍历函数
                    for (var indexTok = 0; indexTok < this.standardFunctions.length; indexTok++) {
                        if (array[index] == this.standardFunctions[indexTok].name) {
                            array[index] = this.standardFunctions[indexTok].keyFront + '.' + this.standardFunctions[indexTok].key;
                            num = 1;
                            break;
                        }
                        ;
                    }
                }
            }
            //封装js表达式文本expressionStr
            /** @type {?} */
            var expressionStr = "";
            for (var index = 0; index < array.length; index++) {
                expressionStr = expressionStr + array[index];
            }
            exprEntity.expr = expressionStr;
            this.result.emit(JSON.stringify(exprEntity));
        }
    };
    //获取表达式串
    //获取表达式串
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.getExpr = 
    //获取表达式串
    /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var exprEntity = new ExpressionEntity;
        exprEntity.expr = this.expressioninfo;
        exprEntity.sexpr = this.expressionEntity.sexpr;
        if (exprEntity.expr == null || exprEntity.expr == "") {
            this.result.emit(null);
        }
        else {
            //2：expr不为空，使用Antlr4进行解析
            /** @type {?} */
            var inputStream = new InputStream.InputStream(exprEntity.expr);
            /** @type {?} */
            var lexer = new JavaScriptLexer.JavaScriptLexer(inputStream);
            /** @type {?} */
            var tokens = new CommonTokenStream.CommonTokenStream(lexer);
            tokens.fill();
            /** @type {?} */
            var array = new Array();
            for (var index = 0; index < tokens.tokens.length - 1; index++) {
                array[index] = tokens.tokens[index].text;
            }
            for (var index = 0; index < array.length; index++) {
                /** @type {?} */
                var num = 0;
                if (num == 0) {
                    //遍历上下文变量
                    for (var i = 0; i < this.contextEntities.length; i++) {
                        if (array[index] == ("\"" + this.contextEntities[i].name + "\"")) {
                            array[index] = "\"" + this.contextEntities[i].key + "\"";
                            num = 1;
                            break;
                        }
                    }
                }
                if (num == 0) {
                    //遍历session变量
                    for (var i = 0; i < this.sessionEntities.length; i++) {
                        if (array[index] == ("\"" + this.sessionEntities[i].name + "\"")) {
                            array[index] = "\"" + this.sessionEntities[i].key + "\"";
                            num = 1;
                            break;
                        }
                    }
                }
                if (num == 0) {
                    for (var indexTok = 0; indexTok < this.standardFunctions.length; indexTok++) {
                        if (array[index] == this.standardFunctions[indexTok].name) {
                            array[index] = this.standardFunctions[indexTok].keyFront + '.' + this.standardFunctions[indexTok].key;
                            num = 1;
                            break;
                        }
                        ;
                    }
                }
            }
            //封装js表达式文本expressionStr
            /** @type {?} */
            var expressionStr = "";
            for (var index = 0; index < array.length; index++) {
                expressionStr = expressionStr + array[index];
            }
            exprEntity.expr = expressionStr;
            return JSON.stringify(exprEntity);
        }
    };
    //重置
    //重置
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.reset = 
    //重置
    /**
     * @return {?}
     */
    function () {
        this.expressioninfo = null;
        this.code = null;
        this.eventService.pushclearExpression();
    };
    //校验
    //校验
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.check = 
    //校验
    /**
     * @return {?}
     */
    function () {
        console.log(this.expressioninfo);
        if (this.notifyService) {
            this.notifyService[this.notifies['3'].type]({
                msg: this.notifies['3'].msg
            });
        }
        else {
            alert("功能尚未提供！");
        }
    };
    //帮助
    //帮助
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.help = 
    //帮助
    /**
     * @return {?}
     */
    function () {
        if (this.notifyService) {
            this.notifyService[this.notifies['3'].type]({
                msg: this.notifies['3'].msg
            });
        }
        else {
            alert("功能尚未提供！");
        }
    };
    //导入
    //导入
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.import = 
    //导入
    /**
     * @return {?}
     */
    function () {
        if (this.notifyService) {
            this.notifyService[this.notifies['3'].type]({
                msg: this.notifies['3'].msg
            });
        }
        else {
            alert("功能尚未提供！");
        }
    };
    //手动实时更改显示值
    //手动实时更改显示值
    /**
     * @param {?} textii
     * @return {?}
     */
    ExpressioneditorComponent.prototype.changeText = 
    //手动实时更改显示值
    /**
     * @param {?} textii
     * @return {?}
     */
    function (textii) {
        //预置编辑框显示值
        /** @type {?} */
        var textEntity = (/** @type {?} */ (JSON.parse(textii ? textii : null)));
        if (textEntity && textEntity.expr) {
            this.code = textEntity.expr;
        }
        else {
            this.code = null;
        }
    };
    /**
     * @param {?} injectName
     * @param {?=} injectSchemaName
     * @param {?=} injectNameInSchema
     * @param {?=} injectedType
     * @return {?}
     */
    ExpressioneditorComponent.prototype.changeInjectEntity = /**
     * @param {?} injectName
     * @param {?=} injectSchemaName
     * @param {?=} injectNameInSchema
     * @param {?=} injectedType
     * @return {?}
     */
    function (injectName, injectSchemaName, injectNameInSchema, injectedType) {
        if (injectSchemaName === void 0) { injectSchemaName = "CommonObject"; }
        if (injectedType === void 0) { injectedType = InjectedType.EntityType; }
        if (injectName && injectNameInSchema && injectSchemaName) {
            //构造注入实体对象
            /** @type {?} */
            var injectedEntity = new InjectedEntity();
            //若注入的实体名为空，则默认为注入实体在schema中的名称
            injectedEntity.name = injectName ? injectName : injectNameInSchema;
            injectedEntity.schemaName = injectSchemaName;
            injectedEntity.injectedName = injectNameInSchema;
            injectedEntity.injectedType = injectedType;
            this.expressionEntity.injectedEntities.push(injectedEntity);
        }
        this.injectedEntities = this.expressionEntity.injectedEntities;
    };
    /**
     * @param {?} commonObjects
     * @return {?}
     */
    ExpressioneditorComponent.prototype.changeCO = /**
     * @param {?} commonObjects
     * @return {?}
     */
    function (commonObjects) {
        var _this = this;
        if (commonObjects && commonObjects.length > 0) {
            /** @type {?} */
            var schema_1;
            //若schemaMap中存在CO的schema
            if (this.expressionEntity.schemaMap.get("CommonObject")) {
                schema_1 = this.expressionEntity.schemaMap.get("CommonObject");
            }
            else
                schema_1 = new Schema;
            commonObjects.forEach((/**
             * @param {?} co
             * @return {?}
             */
            function (co) {
                //将每一个CO转化为schema内部结构中的entityType
                /** @type {?} */
                var entityTypes = _this.adapter.convertCO(co);
                entityTypes.forEach((/**
                 * @param {?} entityType
                 * @return {?}
                 */
                function (entityType) {
                    schema_1.entityTypes.push(entityType);
                    /** @type {?} */
                    var entitySet = new EntitySet;
                    entitySet.name = entityType.name + "s";
                    entitySet.entityType = entityType.name;
                    entitySet.description = entityType.description;
                    schema_1.entitySets.push(entitySet);
                }));
            }));
            //将合并后的schema放入内部上下文实体中
            this.schema.set("CommonObject", schema_1);
        }
    };
    /**
     * @param {?} contextEntities
     * @return {?}
     */
    ExpressioneditorComponent.prototype.changeContextVar = /**
     * @param {?} contextEntities
     * @return {?}
     */
    function (contextEntities) {
        var _this = this;
        contextEntities.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this.contextEntities = _this.contextEntities.filter((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.key !== item.key; }));
            _this.contextEntities.push(item);
        }));
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.hide = /**
     * @return {?}
     */
    function () {
        this.selectnewfunc = false;
    };
    //#region 编辑符号方法
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////编辑符号方法
    //////////////////////////////////////////////////////////////////////////////////////////////////////
    //#region 编辑符号方法
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////编辑符号方法
    //////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onDoubleQuotation = 
    //#region 编辑符号方法
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////编辑符号方法
    //////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression("\"\"");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onEqual = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression(" == ");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onSparen = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression("()");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onBrace = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression("[]");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onAnd = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression(" && ");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onOr = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression(" || ");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onExclamation = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression("!");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onIequal = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression(" == ");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onUnequal = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression(" != ");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onLess = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression(" < ");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onLessequal = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression(" <= ");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onMore = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression(" > ");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onMoreequal = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression(" >= ");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onPlus = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression(" + ");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onMinus = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression(" - ");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onMultiple = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression("*");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onDivision = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression("/");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onPercent = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression("%");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onAssign = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression(" = ");
    };
    /**
     * @return {?}
     */
    ExpressioneditorComponent.prototype.onOppose = /**
     * @return {?}
     */
    function () {
        this.eventService.insertExpression("!");
    };
    ExpressioneditorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-expressioneditor',
                    template: "<div class=\"h-100 f-utils-flex-column\">\r\n<div id=\"main\" style=\"width:100%;padding-left: 20px;\">\r\n  <div id=\"left\" style=\"width:87%;float:left;border:1px solid #D9D9D9\">\r\n    <div style=\"height:136px;\" class=\"position-relative\">\r\n        <app-my-monaco-editor style=\"z-index: 125;\" [options]=\"options\" [(ngModel)]=\"code\" (onInit)=\"onInitHandler($event)\"\r\n        (onTouched)=\"onTouchedHandler($event)\" (onChange)=\"onChangeHandler($event)\" class=\"f-utils-absolute-all\"> </app-my-monaco-editor>\r\n    </div>\r\n  </div>\r\n  <div id=\"right\" style=\"width:13%;float:left;\">\r\n      <button class=\"btn f-btn-mr btn-primary\" type=\"button\" style=\"height: 28px;width: 110px;margin-left: 8px;margin-bottom: 8px\" (click)=check()>{{ 'CheckFront' | locale }}</button>\r\n      <button class=\"btn f-btn-mr btn-secondary\" type=\"button\" style=\"height: 28px;width: 110px;margin-left: 8px;margin-bottom: 8px\" (click)=reset()>{{ 'ResetFront' | locale }}</button>\r\n      <button class=\"btn f-btn-mr btn-secondary\" type=\"button\" style=\"height: 28px;width: 110px;margin-left: 8px;margin-bottom: 8px\" (click)=help()>{{ 'HelpFront' | locale }}</button>\r\n      <button class=\"btn f-btn-mr btn-secondary\" type=\"button\" style=\"height: 28px;width: 110px;margin-left: 8px;margin-bottom: 8px\" (click)=import()>{{ 'ImportFront' | locale }}</button>\r\n  </div>\r\n</div>\r\n<div id=\"select\" class=\"f-utils-fill\">\r\n  <div id=\"left\" style=\"width:50%;height:100%;float:left;padding-left: 20px;\">\r\n    <div style=\"height:100%;border:1px solid rgb(235, 233, 233)\">\r\n      <farris-tabs style=\"height:100%\" [value]=\"'String'\" [contentFill]=\"true\" (tabChange)=\"funcTabChange($event)\">\r\n          <farris-tab [title]=\"this.Advanced\" [id]=\"'Advanced'\">\r\n              <ng-template #content>\r\n                  <div style=\"height:100%\">\r\n                    <app-expr-func-grid [currentFuncTabType]=\"'Advanced'\" (selectFuncRow)=\"selectFuncRowChange($event)\" (dbclickInsert)=\"dbclickInsert($event)\"></app-expr-func-grid>\r\n                  </div>\r\n              </ng-template>\r\n          </farris-tab>\r\n          <farris-tab [title]=\"this.String\" [id]=\"'String'\">\r\n              <ng-template #content>\r\n                  <div style=\"height:100%\">\r\n                    <app-expr-func-grid [currentFuncTabType]=\"'String'\" (selectFuncRow)=\"selectFuncRowChange($event)\" (dbclickInsert)=\"dbclickInsert($event)\"></app-expr-func-grid>\r\n                  </div>\r\n              </ng-template>\r\n          </farris-tab>\r\n          <farris-tab [title]=\"this.Math\" [id]=\"'Math'\">\r\n            <ng-template #content>\r\n                <div style=\"height:100%\">\r\n                    <app-expr-func-grid [currentFuncTabType]=\"'Math'\" (selectFuncRow)=\"selectFuncRowChange($event)\" (dbclickInsert)=\"dbclickInsert($event)\"></app-expr-func-grid>\r\n                </div>\r\n            </ng-template>\r\n        </farris-tab>\r\n        <farris-tab [title]=\"this.Estimate\" [id]=\"'Estimate'\">\r\n            <ng-template #content>\r\n                <div style=\"height:100%\">\r\n                    <app-expr-func-grid [currentFuncTabType]=\"'Estimate'\" (selectFuncRow)=\"selectFuncRowChange($event)\" (dbclickInsert)=\"dbclickInsert($event)\"></app-expr-func-grid>\r\n                </div>\r\n            </ng-template>\r\n        </farris-tab>\r\n        <farris-tab [title]=\"this.DateTime\" [id]=\"'DateTime'\">\r\n            <ng-template #content>\r\n                <div style=\"height:100%\">\r\n                    <app-expr-func-grid [currentFuncTabType]=\"'DateTime'\" (selectFuncRow)=\"selectFuncRowChange($event)\" (dbclickInsert)=\"dbclickInsert($event)\"></app-expr-func-grid>\r\n                </div>\r\n            </ng-template>\r\n        </farris-tab>\r\n        <farris-tab [title]=\"this.Translate\" [id]=\"'Translate'\">\r\n            <ng-template #content>\r\n                <div style=\"height:100%\">\r\n                    <app-expr-func-grid [currentFuncTabType]=\"'Translate'\" (selectFuncRow)=\"selectFuncRowChange($event)\" (dbclickInsert)=\"dbclickInsert($event)\"></app-expr-func-grid>\r\n                </div>\r\n            </ng-template>\r\n        </farris-tab>\r\n          <farris-tab [title]=\"this.Aggregate\" [id]=\"'Aggregate'\">\r\n              <ng-template #content>\r\n                  <div style=\"height:100%\">\r\n                      <app-expr-func-grid [currentFuncTabType]=\"'Aggregate'\" (selectFuncRow)=\"selectFuncRowChange($event)\" (dbclickInsert)=\"dbclickInsert($event)\"></app-expr-func-grid>\r\n                  </div>\r\n              </ng-template>\r\n          </farris-tab>\r\n          <farris-tab [title]=\"this.Analytical\" [id]=\"'Analytical'\">\r\n              <ng-template #content>\r\n                  <div style=\"height:100%\">\r\n                      <app-expr-func-grid [currentFuncTabType]=\"'Analytical'\" (selectFuncRow)=\"selectFuncRowChange($event)\" (dbclickInsert)=\"dbclickInsert($event)\"></app-expr-func-grid>\r\n                  </div>\r\n              </ng-template>\r\n          </farris-tab>\r\n          <farris-tab [title]=\"this.Extend\" [id]=\"'Extend'\">\r\n              <ng-template #content>\r\n                  <div style=\"height:100%\">\r\n                      <app-expr-func-grid [funcExtend]=\"funcExtend\" [currentFuncTabType]=\"'Extend'\" (selectFuncRow)=\"selectFuncRowChange($event)\" (dbclickInsert)=\"dbclickInsert($event)\"></app-expr-func-grid>\r\n                  </div>\r\n              </ng-template>\r\n          </farris-tab>\r\n      </farris-tabs>\r\n    </div>\r\n  </div>\r\n  <div id=\"middle\" class=\"position-relative\" style=\"width:36%;height:100%;float:left;padding-left: 7px;border:1px solid rgb(235, 233, 233)\">\r\n    <farris-tabs [value]=\"'Variable'\" [contentFill]=\"true\" class=\"f-utils-absolute-all\" style=\"left:6px;right:5px\">\r\n          <farris-tab [title]=\"this.Variable\" [id]=\"'Variable'\" class=\"f-utils-overflow-hidden\">\r\n              <ng-template #content>\r\n                  <div style=\"width: 100%;height: 100%; display: flex;\">\r\n                      <div class=\"f-utils-flex-column position-relative\" style=\"width: 30%;height: 100%;\" ngResizable [rzMinWidth]=\"40\"\r\n                          [rzMaxWidth]=\"400\" [rzHandles]=\"'e'\" rzAspectRatio=\"true\">\r\n                          <app-expression-var-grid (selectVarRow)=\"selectVarRowChange($event)\" [h1]=\"this.http\" class=\"f-utils-fill\"></app-expression-var-grid>\r\n                      </div>\r\n                      <div class=\"f-utils-flex-column position-relative\" style=\"width: 70%;height: 100%;flex: 1 1 auto; border-left: 1px solid #ddd;\">\r\n                          <app-expression-var-info-grid \r\n                          class=\"f-utils-fill\"\r\n                          [currentVarType]=\"currentVarType\"  \r\n                          [contextEntities]=\"contextEntities\"\r\n                          [sessionEntities]=\"sessionEntities\"\r\n                          (selectVarInfoRow)=\"selectVarInfoRowChange($event)\" \r\n                          (dbclickInsert)=\"dbclickVarInsert($event)\">\r\n                        </app-expression-var-info-grid>\r\n                      </div>\r\n                  </div>\r\n              </ng-template>\r\n          </farris-tab>\r\n          <farris-tab [title]=\"this.Entity\" [id]=\"'Entity'\">\r\n              <ng-template #content>\r\n                  <div class = \"f-utils-absolute-all f-utils-flex-row\">\r\n                      <div class = \"f-utils-fill-flex-column\" style=\"width:entitywidth;\" ngResizable [rzMinWidth]=\"40\"\r\n                          [rzMaxWidth]=\"800\" [rzHandles]=\"'e'\" rzAspectRatio=\"true\">\r\n                          <app-expression-entity-grid class=\"f-utils-fill-flex-column\"\r\n                          [schema]=\"schema\"\r\n                          [newSchemaMap]=\"newSchemaMap\"\r\n                          [injectedEntities]=\"injectedEntities\"\r\n                          (dbclickInsert)=\"dbclickEntityInsert($event)\" \r\n                          (selectentitychange)=\"selectentitychange($event)\"\r\n                          ></app-expression-entity-grid> \r\n                      </div>\r\n                      <div *ngIf = selectedResource class = \"f-utils-flex-column col-3 px-0\" style=\"border-left: 1px solid #ddd;\">\r\n                          <app-expression-entity-info-grid class = \"f-utils-fill-flex-column\"\r\n                          [schema]=\"schema\" \r\n                          [newSchemaMap]=\"newSchemaMap\"\r\n                          [choseEntityTableName]=\"choseSchemaTableName\"\r\n                          (dbclickInsert)=\"dbclickEntityInfoInsert($event)\"\r\n                          (selectSchemaRow)=\"selectschemainfoChange($event)\"\r\n                          ></app-expression-entity-info-grid>\r\n                      </div>\r\n                  </div>\r\n              </ng-template>\r\n          </farris-tab>\r\n          <!-- <farris-tab [title]=\"'\u5B9E\u4F53\u7C7B\u578B'\" [id]=\"'EntityType'\">\r\n              <ng-template #content>\r\n                  <div style=\"width: 100%;height: 100%; display: flex;\" >\r\n                      <div style=\"width: 50%;height: 268px; \" ngResizable [rzMinWidth]=\"40\"\r\n                          [rzMaxWidth]=\"500\" [rzHandles]=\"'e'\" rzAspectRatio=\"true\" >\r\n                          <app-expression-schema-grid \r\n                          [schema]=\"schema\" \r\n                          (selectschemachange)=\"selectschemaChange($event)\"\r\n                          ></app-expression-schema-grid> \r\n                      </div>\r\n                      <div style=\"width: 50%; flex: 1 1 auto; border-left: 1px solid #ddd;\">\r\n                          <app-expression-schema-info-grid \r\n                          [schema]=\"schema\" \r\n                          [choseSchemaTableName]=\"choseSchemaTableName\"\r\n                          (dbclickInsert)=\"dbclickSchemaInfoInsert($event)\"\r\n                          (selectSchemaRow)=\"selectschemainfoChange($event)\"\r\n                          ></app-expression-schema-info-grid>\r\n                      </div>\r\n                  </div>\r\n              </ng-template>\r\n          </farris-tab> -->\r\n          <farris-tab [title]=\"this.Help\" [id]=\"'Help'\" class=\"f-utils-overflow-hidden\">\r\n              <ng-template #content>\r\n                  <div class=\"f-utils-flex-column position-relative\" style=\"width: 100%;height: 100%\">\r\n                    <app-expression-smart-help-grid \r\n                    class=\"f-utils-fill\"\r\n                    [smartHelp]=\"smartHelp\"\r\n                    (dbclickInsert)=\"dbclickSmartHelpInsert($event)\"\r\n                    ></app-expression-smart-help-grid>\r\n                  </div>\r\n              </ng-template>\r\n          </farris-tab>\r\n      </farris-tabs>\r\n  </div>\r\n  <div id=\"right\" style=\"width:14%;float: left;padding-left: 5px;padding-right: 15px;\">\r\n      <div style=\"border: 0 solid #D9D9D9;border-radius: 3px;\">\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onPlus()\">+</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onMinus()\">-</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onMultiple()\">*</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onDivision()\">/</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onPercent()\">%</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onAssign()\">=</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onDoubleQuotation()\">\" \"</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onEqual()\">==</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onUnequal()\">!=</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onMoreequal()\">>=</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onLessequal()\"><=</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onLess()\">{{'<'}}</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onMore()\">{{'>'}}</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onBrace()\">[&nbsp;]</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onSparen()\">(&nbsp;)</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onOr()\">||</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onAnd()\">&&</button>\r\n            <button type=\"button\" class=\"btn cbtn btn-secondary\" (click)=\"onOppose()\">!</button>\r\n      </div>       \r\n  </div>\r\n</div>\r\n<div *ngIf = selectnewfunc style=\"padding-left: 20px;position: absolute;bottom: 0;left: 0;right: 0;border-top: 1px solid #ddd;z-index: 100;background: white\">\r\n    <span style=\"\r\n    position: absolute;\r\n    top: -18px;\r\n    left: 50%;\r\n    border-radius: 4px;\r\n    width: 40px;\r\n    height: 18px;\r\n    cursor: pointer;\r\n    background: #fff;\r\n    text-align: center;\r\n    border: 1px solid #efecec;\r\n    /* box-shadow: 0 0 6px 0 rgba(57,66,100,.08); */\r\n    color: #59a1ff;\r\n    border-bottom: none;\r\n\"><i class=\"f-icon f-icon-arrow-seek-down\" (click)=\"hide()\"></i></span>\r\n    <span>\r\n      <i class=\"f-icon f-icon-info\"></i>\r\n    </span>\r\n    {{descriptinfo}}\r\n</div>\r\n</div>\r\n",
                    styles: [".cbtn{width:40px;height:40px;background:#fdfdfd;border:1px solid #d0d0d0;border-radius:3px;text-align:center}"]
                }] }
    ];
    /** @nocollapse */
    ExpressioneditorComponent.ctorParameters = function () { return [
        { type: ExpressionEventService },
        { type: Injector, decorators: [{ type: Optional }] },
        { type: HttpClient }
    ]; };
    ExpressioneditorComponent.propDecorators = {
        funcExtend: [{ type: Input }],
        expressionEntity: [{ type: Input }],
        contextEntities: [{ type: Input }],
        sessionEntities: [{ type: Input }],
        injectedEntities: [{ type: Input }],
        smartHelp: [{ type: Input }],
        text: [{ type: Input }],
        isPanel: [{ type: Input }],
        funcEntities: [{ type: Input }],
        gspCDTs: [{ type: Input }],
        commonObjects: [{ type: Input }],
        customSchemaName: [{ type: Input }],
        customSchema: [{ type: Input }],
        injectName: [{ type: Input }],
        injectSchemaName: [{ type: Input }],
        injectNameInSchema: [{ type: Input }],
        injectedType: [{ type: Input }],
        customNewSchemaName: [{ type: Input }],
        customNewSchema: [{ type: Input }],
        windowWidth: [{ type: Input }],
        result: [{ type: Output }],
        closeModalEmitter: [{ type: Output }]
    };
    return ExpressioneditorComponent;
}());
export { ExpressioneditorComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ExpressioneditorComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    ExpressioneditorComponent.prototype.localePipe;
    /**
     * @type {?}
     * @private
     */
    ExpressioneditorComponent.prototype.notifyService;
    /** @type {?} */
    ExpressioneditorComponent.prototype.Advanced;
    /** @type {?} */
    ExpressioneditorComponent.prototype.String;
    /** @type {?} */
    ExpressioneditorComponent.prototype.Aggregate;
    /** @type {?} */
    ExpressioneditorComponent.prototype.Estimate;
    /** @type {?} */
    ExpressioneditorComponent.prototype.DateTime;
    /** @type {?} */
    ExpressioneditorComponent.prototype.Translate;
    /** @type {?} */
    ExpressioneditorComponent.prototype.Analytical;
    /** @type {?} */
    ExpressioneditorComponent.prototype.Math;
    /** @type {?} */
    ExpressioneditorComponent.prototype.Extend;
    /** @type {?} */
    ExpressioneditorComponent.prototype.Variable;
    /** @type {?} */
    ExpressioneditorComponent.prototype.Entity;
    /** @type {?} */
    ExpressioneditorComponent.prototype.Help;
    /** @type {?} */
    ExpressioneditorComponent.prototype.FunctionDescription;
    /** @type {?} */
    ExpressioneditorComponent.prototype.VarDescription;
    /** @type {?} */
    ExpressioneditorComponent.prototype.CurrentProp;
    /** @type {?} */
    ExpressioneditorComponent.prototype.CurrentChosedProp;
    /** @type {?} */
    ExpressioneditorComponent.prototype.standardFunctions;
    /** @type {?} */
    ExpressioneditorComponent.prototype.allFunctions;
    /** @type {?} */
    ExpressioneditorComponent.prototype.deprecatedFunctions;
    /** @type {?} */
    ExpressioneditorComponent.prototype.currentFuncTabType;
    /** @type {?} */
    ExpressioneditorComponent.prototype.currentVarType;
    /** @type {?} */
    ExpressioneditorComponent.prototype.descriptinfo;
    /** @type {?} */
    ExpressioneditorComponent.prototype.keyInfo;
    /** @type {?} */
    ExpressioneditorComponent.prototype.schema;
    /** @type {?} */
    ExpressioneditorComponent.prototype.newSchemaMap;
    /** @type {?} */
    ExpressioneditorComponent.prototype.choseSchemaTableName;
    /** @type {?} */
    ExpressioneditorComponent.prototype.expressioninfo;
    /** @type {?} */
    ExpressioneditorComponent.prototype.selectedResource;
    /** @type {?} */
    ExpressioneditorComponent.prototype.entitywidth;
    /** @type {?} */
    ExpressioneditorComponent.prototype.adapter;
    /** @type {?} */
    ExpressioneditorComponent.prototype.selectnewfunc;
    /** @type {?} */
    ExpressioneditorComponent.prototype.funcExtend;
    /** @type {?} */
    ExpressioneditorComponent.prototype.expressionEntity;
    /** @type {?} */
    ExpressioneditorComponent.prototype.contextEntities;
    /** @type {?} */
    ExpressioneditorComponent.prototype.sessionEntities;
    /** @type {?} */
    ExpressioneditorComponent.prototype.injectedEntities;
    /** @type {?} */
    ExpressioneditorComponent.prototype.smartHelp;
    /** @type {?} */
    ExpressioneditorComponent.prototype.text;
    /** @type {?} */
    ExpressioneditorComponent.prototype.isPanel;
    /** @type {?} */
    ExpressioneditorComponent.prototype.funcEntities;
    /** @type {?} */
    ExpressioneditorComponent.prototype.gspCDTs;
    /** @type {?} */
    ExpressioneditorComponent.prototype.commonObjects;
    /** @type {?} */
    ExpressioneditorComponent.prototype.customSchemaName;
    /** @type {?} */
    ExpressioneditorComponent.prototype.customSchema;
    /** @type {?} */
    ExpressioneditorComponent.prototype.injectName;
    /** @type {?} */
    ExpressioneditorComponent.prototype.injectSchemaName;
    /** @type {?} */
    ExpressioneditorComponent.prototype.injectNameInSchema;
    /** @type {?} */
    ExpressioneditorComponent.prototype.injectedType;
    /** @type {?} */
    ExpressioneditorComponent.prototype.customNewSchemaName;
    /** @type {?} */
    ExpressioneditorComponent.prototype.customNewSchema;
    /** @type {?} */
    ExpressioneditorComponent.prototype.windowWidth;
    /** @type {?} */
    ExpressioneditorComponent.prototype.result;
    /** @type {?} */
    ExpressioneditorComponent.prototype.closeModalEmitter;
    /**
     * @type {?}
     * @private
     */
    ExpressioneditorComponent.prototype.notifies;
    /** @type {?} */
    ExpressioneditorComponent.prototype.options;
    /** @type {?} */
    ExpressioneditorComponent.prototype.code;
    /**
     * @type {?}
     * @private
     */
    ExpressioneditorComponent.prototype.eventService;
    /**
     * @type {?}
     * @private
     */
    ExpressioneditorComponent.prototype.injector;
    /** @type {?} */
    ExpressioneditorComponent.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,