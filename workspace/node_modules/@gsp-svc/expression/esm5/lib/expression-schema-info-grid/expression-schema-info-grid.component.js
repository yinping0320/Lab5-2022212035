/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { Property } from '../schema';
import { CurrentNode } from '../currentNode';
var ExpressionSchemaInfoGridComponent = /** @class */ (function () {
    function ExpressionSchemaInfoGridComponent() {
        this.schema = new Map();
        this.choseSchemaTableName = new CurrentNode;
        this.selectSchemaRow = new EventEmitter();
        this.dbclickInsert = new EventEmitter();
        this.selectString = "";
        this.items = [];
        this.columns = [{ field: 'name', title: '属性名称', filter: true }];
    }
    /**
     * @return {?}
     */
    ExpressionSchemaInfoGridComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    ExpressionSchemaInfoGridComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var schemaName = this.choseSchemaTableName.parentName;
        /** @type {?} */
        var tableId = this.choseSchemaTableName.id;
        /** @type {?} */
        var tableName = this.choseSchemaTableName.name;
        /** @type {?} */
        var schemaItem = this.schema.get(schemaName);
        if (schemaItem) {
            /** @type {?} */
            var entityType = schemaItem.entityTypes.find((/**
             * @param {?} entitytype
             * @return {?}
             */
            function (entitytype) { return (entitytype.id == tableId && entitytype.name == tableName) || (entitytype.id == "" && entitytype.name == tableName); }));
            if (entityType) {
                this.items = entityType.properties;
                entityType.navigationProperties.forEach((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) {
                    /** @type {?} */
                    var property = new Property;
                    property.name = item.name;
                    property.type = item.type.toString();
                    property.description = item.description;
                    _this.items = _this.items.filter((/**
                     * @param {?} item
                     * @return {?}
                     */
                    function (item) { return item.name !== property.name; }));
                    _this.items.push(property);
                }));
                this.selectString = entityType.name;
            }
            else {
                /** @type {?} */
                var entitySet_1 = schemaItem.entitySets.find((/**
                 * @param {?} entityset
                 * @return {?}
                 */
                function (entityset) { return entityset.name == tableName; }));
                if (entitySet_1) {
                    /** @type {?} */
                    var eType = schemaItem.entityTypes.find((/**
                     * @param {?} entitytype
                     * @return {?}
                     */
                    function (entitytype) { return entitytype.name == entitySet_1.entityType; }));
                    this.items = eType.properties;
                    eType.navigationProperties.forEach((/**
                     * @param {?} item
                     * @return {?}
                     */
                    function (item) {
                        /** @type {?} */
                        var property = new Property;
                        property.name = item.name;
                        property.type = item.type.toString();
                        property.description = item.description;
                        _this.items = _this.items.filter((/**
                         * @param {?} item
                         * @return {?}
                         */
                        function (item) { return item.name !== property.name; }));
                        _this.items.push(property);
                    }));
                    this.selectString = entitySet_1.name + ".[0]";
                }
            }
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    ExpressionSchemaInfoGridComponent.prototype.ondblclickRow = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.dbclickInsert.emit(this.selectString + "." + $event.rowData.name);
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    ExpressionSchemaInfoGridComponent.prototype.selectRowChange = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.selectSchemaRow.emit($event.data);
    };
    ExpressionSchemaInfoGridComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-expression-schema-info-grid',
                    template: "<farris-datagrid\r\n[idField]=\"'name'\"\r\n[height]=\"268\"\r\n[width]=\"300\"\r\n[columns]=\"columns\" \r\n[data]=\"items\"\r\n[fit]=\"true\"\r\n[fitColumns]=\"true\"\r\n[striped]=\"false\"\r\n[showHeader]=\"true\"\r\n[pagination]=\"false\"\r\n[enableFilterRow]=\"true\"\r\n(dblclickRow)=\"ondblclickRow($event)\"\r\n(selectChanged)=\"selectRowChange($event)\"\r\n>\r\n</farris-datagrid>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ExpressionSchemaInfoGridComponent.ctorParameters = function () { return []; };
    ExpressionSchemaInfoGridComponent.propDecorators = {
        schema: [{ type: Input }],
        choseSchemaTableName: [{ type: Input }],
        selectSchemaRow: [{ type: Output }],
        dbclickInsert: [{ type: Output }]
    };
    return ExpressionSchemaInfoGridComponent;
}());
export { ExpressionSchemaInfoGridComponent };
if (false) {
    /** @type {?} */
    ExpressionSchemaInfoGridComponent.prototype.schema;
    /** @type {?} */
    ExpressionSchemaInfoGridComponent.prototype.choseSchemaTableName;
    /** @type {?} */
    ExpressionSchemaInfoGridComponent.prototype.selectSchemaRow;
    /** @type {?} */
    ExpressionSchemaInfoGridComponent.prototype.dbclickInsert;
    /** @type {?} */
    ExpressionSchemaInfoGridComponent.prototype.selectString;
    /** @type {?} */
    ExpressionSchemaInfoGridComponent.prototype.items;
    /** @type {?} */
    ExpressionSchemaInfoGridComponent.prototype.columns;
}
//# sourceMappingURL=data:application/json;base64,