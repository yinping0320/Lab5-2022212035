/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ComputeRuleComponent } from './compute-rule/compute-rule.component';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { ComboLookupModule } from '@farris/ui-combo-lookup';
import { DataTableModule } from '@farris/ui-datatable';
import { HttpClientModule } from '@angular/common/http';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { ModalModule, BsModalService } from '@farris/ui-modal';
import { MessagerModule } from '@farris/ui-messager';
import { ComboService } from '@farris/ui-combo-list';
import { NotifyModule } from '@farris/ui-notify';
import { ExpressioneditorComponent } from './expressioneditor/expressioneditor.component';
import { MyMonacoEditorModule } from './my-monaco-editor/my-monaco-editor.module';
import { ExpressionEventService } from './expression-event-service';
import { SplitterModule } from '@farris/ui-splitter';
import { FarrisTabsModule } from '@farris/ui-tabs';
import { DatagridModule } from '@farris/ui-datagrid';
import { ExprFuncGridComponent } from './expr-func-grid/expr-func-grid.component';
import { AngularDraggableModule } from '@farris/ui-draggable';
import { ExpressionVarGridComponent } from './expression-var-grid/expression-var-grid.component';
import { ExpressionVarInfoGridComponent } from './expression-var-info-grid/expression-var-info-grid.component';
import { TreeTableModule } from '@farris/ui-treetable';
import { DatagridFilterRowModule } from '@farris/ui-datagrid-filter';
import { ExpressionSchemaGridComponent } from './expression-schema-grid/expression-schema-grid.component';
import { ExpressionSchemaInfoGridComponent } from './expression-schema-info-grid/expression-schema-info-grid.component';
import { ExpressionEntityGridComponent } from './expression-entity-grid/expression-entity-grid.component';
import { ExpressionEntityInfoGridComponent } from './expression-entity-info-grid/expression-entity-info-grid.component';
import { ExpressionSmartHelpGridComponent } from './expression-smart-help-grid/expression-smart-help-grid.component';
import { DialogsModule } from '@progress/kendo-angular-dialog';
import { LayoutModule } from '@progress/kendo-angular-layout';
import { ButtonsModule } from '@progress/kendo-angular-buttons';
import { TreeViewModule } from '@progress/kendo-angular-treeview';
import { InputsModule } from '@progress/kendo-angular-inputs';
import { GridModule } from '@progress/kendo-angular-grid';
import { HttpClient } from "@angular/common/http";
// import { ExpressionEditorLocalePipe, ExpressionEditorLocaleService } from './expression-editor-locale.pipe';
import { ExpressionEditorLocalePipe } from './expression-editor-locale.pipe';
/** @type {?} */
const monacoConfig = {
    baseUrl: 'assets',
    defaultOptions: { scrollBeyondLastLine: false }
};
export class ExpressionModule {
}
ExpressionModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    ComputeRuleComponent, ExpressioneditorComponent, ExprFuncGridComponent, ExpressionVarGridComponent, ExpressionVarInfoGridComponent, ExpressionSchemaGridComponent, ExpressionSchemaInfoGridComponent, ExpressionEntityGridComponent, ExpressionEntityInfoGridComponent, ExpressionSmartHelpGridComponent, ExpressionEditorLocalePipe
                ],
                imports: [
                    CommonModule,
                    MyMonacoEditorModule.forRoot(monacoConfig),
                    FormsModule,
                    DialogsModule,
                    LayoutModule,
                    ButtonsModule,
                    TreeViewModule,
                    InputsModule,
                    GridModule,
                    FormsModule,
                    ReactiveFormsModule,
                    TreeTableModule,
                    ComboLookupModule,
                    DataTableModule,
                    FarrisDialogModule,
                    PerfectScrollbarModule,
                    HttpClientModule,
                    MessagerModule.forRoot(),
                    ModalModule.forRoot(),
                    NotifyModule,
                    SplitterModule,
                    FarrisTabsModule,
                    DatagridFilterRowModule.forRoot(),
                    DatagridModule,
                    AngularDraggableModule,
                ],
                entryComponents: [ComputeRuleComponent, ExpressioneditorComponent],
                exports: [ComputeRuleComponent, ExpressioneditorComponent],
                // providers: [ComboService, BsModalService, ExpressionEventService, HttpClient, ExpressionEditorLocaleService]
                providers: [ComboService, BsModalService, ExpressionEventService, HttpClient]
            },] }
];
//# sourceMappingURL=data:application/json;base64,