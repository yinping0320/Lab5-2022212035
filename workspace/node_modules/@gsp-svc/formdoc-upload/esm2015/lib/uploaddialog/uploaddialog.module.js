/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { MessagerModule } from '@farris/ui-messager';
import { BsModalService } from '@farris/ui-modal';
import { UploadModule } from '../upload/upload.module';
import { UploadDialogComponent } from './uploaddialog/uploaddialog.component';
import { HttpService } from '@ecp-caf/caf-common';
import { UploadService } from '../upload/upload.service';
import { UploadDialogService } from '../uploaddialog.service';
import { HttpClientModule } from '@angular/common/http';
import { NotifyModule } from '@farris/ui-notify';
import { FileUploadComponent } from '../upload/file-upload/file-upload.component';
export class UploadDialogMoudle {
}
UploadDialogMoudle.decorators = [
    { type: NgModule, args: [{
                declarations: [UploadDialogComponent],
                imports: [
                    CommonModule,
                    FarrisDialogModule,
                    MessagerModule.forRoot(),
                    UploadModule,
                    NotifyModule.forRoot(),
                    HttpClientModule
                ],
                exports: [UploadDialogComponent, FileUploadComponent],
                entryComponents: [UploadDialogComponent, FileUploadComponent],
                providers: [BsModalService, HttpService, UploadDialogService, UploadService]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBsb2FkZGlhbG9nLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atc3ZjL2Zvcm1kb2MtdXBsb2FkLyIsInNvdXJjZXMiOlsibGliL3VwbG9hZGRpYWxvZy91cGxvYWRkaWFsb2cubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWxELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUM5RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDbEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzlELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQWlCbEYsTUFBTSxPQUFPLGtCQUFrQjs7O1lBZDlCLFFBQVEsU0FBQztnQkFDUixZQUFZLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQztnQkFDckMsT0FBTyxFQUFFO29CQUNQLFlBQVk7b0JBQ1osa0JBQWtCO29CQUNsQixjQUFjLENBQUMsT0FBTyxFQUFFO29CQUN4QixZQUFZO29CQUNaLFlBQVksQ0FBQyxPQUFPLEVBQUU7b0JBQ3RCLGdCQUFnQjtpQkFDakI7Z0JBQ0QsT0FBTyxFQUFFLENBQUMscUJBQXFCLEVBQUMsbUJBQW1CLENBQUM7Z0JBQ3BELGVBQWUsRUFBRSxDQUFDLHFCQUFxQixFQUFDLG1CQUFtQixDQUFDO2dCQUM1RCxTQUFTLEVBQUUsQ0FBQyxjQUFjLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLGFBQWEsQ0FBQzthQUM3RSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5pbXBvcnQgeyBGYXJyaXNEaWFsb2dNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRpYWxvZyc7XG5pbXBvcnQgeyBNZXNzYWdlck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbWVzc2FnZXInO1xuaW1wb3J0IHsgQnNNb2RhbFNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLW1vZGFsJztcblxuaW1wb3J0IHsgVXBsb2FkTW9kdWxlIH0gZnJvbSAnLi4vdXBsb2FkL3VwbG9hZC5tb2R1bGUnO1xuaW1wb3J0IHsgVXBsb2FkRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi91cGxvYWRkaWFsb2cvdXBsb2FkZGlhbG9nLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBIdHRwU2VydmljZSB9IGZyb20gJ0BlY3AtY2FmL2NhZi1jb21tb24nO1xuaW1wb3J0IHsgVXBsb2FkU2VydmljZSB9IGZyb20gJy4uL3VwbG9hZC91cGxvYWQuc2VydmljZSc7XG5pbXBvcnQgeyBVcGxvYWREaWFsb2dTZXJ2aWNlIH0gZnJvbSAnLi4vdXBsb2FkZGlhbG9nLnNlcnZpY2UnO1xuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE5vdGlmeU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbm90aWZ5JztcbmltcG9ydCB7IEZpbGVVcGxvYWRDb21wb25lbnQgfSBmcm9tICcuLi91cGxvYWQvZmlsZS11cGxvYWQvZmlsZS11cGxvYWQuY29tcG9uZW50JztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtVcGxvYWREaWFsb2dDb21wb25lbnRdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIEZhcnJpc0RpYWxvZ01vZHVsZSxcbiAgICBNZXNzYWdlck1vZHVsZS5mb3JSb290KCksXG4gICAgVXBsb2FkTW9kdWxlLFxuICAgIE5vdGlmeU1vZHVsZS5mb3JSb290KCksXG4gICAgSHR0cENsaWVudE1vZHVsZVxuICBdLFxuICBleHBvcnRzOiBbVXBsb2FkRGlhbG9nQ29tcG9uZW50LEZpbGVVcGxvYWRDb21wb25lbnRdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtVcGxvYWREaWFsb2dDb21wb25lbnQsRmlsZVVwbG9hZENvbXBvbmVudF0sXG4gIHByb3ZpZGVyczogW0JzTW9kYWxTZXJ2aWNlLCBIdHRwU2VydmljZSwgVXBsb2FkRGlhbG9nU2VydmljZSwgVXBsb2FkU2VydmljZV1cbn0pXG5leHBvcnQgY2xhc3MgVXBsb2FkRGlhbG9nTW91ZGxlIHsgfVxuIl19