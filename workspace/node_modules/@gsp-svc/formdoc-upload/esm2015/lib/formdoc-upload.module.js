/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HttpClientModule } from '@angular/common/http';
import { LOCALE_ID, NgModule } from '@angular/core';
import { CacheService, HttpService, LanguageService, SessionService } from '@ecp-caf/caf-common';
import { FormdocUploadComponent } from './formdoc-upload.component';
const ɵ0 = localStorage.getItem('languageCode') || 'zh-CHS';
export class FormdocUploadModule {
}
FormdocUploadModule.decorators = [
    { type: NgModule, args: [{
                declarations: [FormdocUploadComponent],
                imports: [
                    HttpClientModule
                ],
                exports: [FormdocUploadComponent],
                providers: [LanguageService, HttpService, CacheService, SessionService,
                    { provide: LOCALE_ID, useValue: ɵ0 },]
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWRvYy11cGxvYWQubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1zdmMvZm9ybWRvYy11cGxvYWQvIiwic291cmNlcyI6WyJsaWIvZm9ybWRvYy11cGxvYWQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakcsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7V0FZaEMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSxRQUFRO0FBRXBGLE1BQU0sT0FBTyxtQkFBbUI7OztZQVYvQixRQUFRLFNBQUM7Z0JBQ1IsWUFBWSxFQUFFLENBQUMsc0JBQXNCLENBQUM7Z0JBQ3RDLE9BQU8sRUFBRTtvQkFDUCxnQkFBZ0I7aUJBQ2pCO2dCQUVELE9BQU8sRUFBRSxDQUFDLHNCQUFzQixDQUFDO2dCQUNqQyxTQUFTLEVBQUMsQ0FBSyxlQUFlLEVBQUMsV0FBVyxFQUFDLFlBQVksRUFBQyxjQUFjO29CQUNwRSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxJQUFrRCxFQUFFLEVBQUU7YUFDdkYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgTE9DQUxFX0lELCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2FjaGVTZXJ2aWNlLCBIdHRwU2VydmljZSwgTGFuZ3VhZ2VTZXJ2aWNlLCBTZXNzaW9uU2VydmljZSB9IGZyb20gJ0BlY3AtY2FmL2NhZi1jb21tb24nO1xuaW1wb3J0IHsgRm9ybWRvY1VwbG9hZENvbXBvbmVudCB9IGZyb20gJy4vZm9ybWRvYy11cGxvYWQuY29tcG9uZW50JztcbmltcG9ydCB7IExvY2FsTGFuZ1BpcGUgfSBmcm9tICcuL2xvY2FsLnBpcGUnO1xuXG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0Zvcm1kb2NVcGxvYWRDb21wb25lbnRdLFxuICBpbXBvcnRzOiBbXG4gICAgSHR0cENsaWVudE1vZHVsZVxuICBdLFxuICBcbiAgZXhwb3J0czogW0Zvcm1kb2NVcGxvYWRDb21wb25lbnRdLFxuICBwcm92aWRlcnM6WyAgICBMYW5ndWFnZVNlcnZpY2UsSHR0cFNlcnZpY2UsQ2FjaGVTZXJ2aWNlLFNlc3Npb25TZXJ2aWNlLFxuICAgIHsgcHJvdmlkZTogTE9DQUxFX0lELCB1c2VWYWx1ZTogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2xhbmd1YWdlQ29kZScpIHx8ICd6aC1DSFMnIH0sXVxufSlcbmV4cG9ydCBjbGFzcyBGb3JtZG9jVXBsb2FkTW9kdWxlIHsgfVxuIl19