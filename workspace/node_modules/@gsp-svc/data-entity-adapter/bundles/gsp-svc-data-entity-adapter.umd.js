(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common/http'), require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@gsp-svc/data-entity-adapter', ['exports', '@angular/common/http', '@angular/core'], factory) :
    (factory((global['gsp-svc'] = global['gsp-svc'] || {}, global['gsp-svc']['data-entity-adapter'] = {}),global.ng.common.http,global.ng.core));
}(this, (function (exports,http,core) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * data-entity-service对外提供服务类
     */
    var DataEntityService = /** @class */ (function () {
        function DataEntityService(http$$1) {
            this.http = http$$1;
        }
        /**
         * @description 根据Id获取Schema
         * @param id be或vo的ID
         * @returns Schema
         */
        /**
         * \@description 根据Id获取Schema
         * @param {?} id be或vo的ID
         * @return {?} Schema
         */
        DataEntityService.prototype.getSchemaById = /**
         * \@description 根据Id获取Schema
         * @param {?} id be或vo的ID
         * @return {?} Schema
         */
            function (id) {
                return this.http.get("/api/runtime/sys/v1.0/dataentity/schema/id/" + id);
            };
        /**
         * 根据对象获取
         * @param obj 对象
         * @returns
         */
        /**
         * 根据对象获取
         * @param {?} map
         * @return {?}
         */
        DataEntityService.prototype.getSchemaByObj = /**
         * 根据对象获取
         * @param {?} map
         * @return {?}
         */
            function (map) {
                return this.http.post("/api/runtime/sys/v1.0/dataentity/schema/obj", map);
            };
        /**
         * 获取BE/VO
         * @param BE/VO的id
         */
        /**
         * 获取BE/VO
         * @param {?} id
         * @return {?}
         */
        DataEntityService.prototype.getBEOrVo = /**
         * 获取BE/VO
         * @param {?} id
         * @return {?}
         */
            function (id) {
                return this.http.get("/api/runtime/sys/v1.0/dataentity/schema/bevo/" + id);
            };
        DataEntityService.decorators = [
            { type: core.Injectable }
        ];
        /** @nocollapse */
        DataEntityService.ctorParameters = function () {
            return [
                { type: http.HttpClient }
            ];
        };
        return DataEntityService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var DataEntityModule = /** @class */ (function () {
        function DataEntityModule() {
        }
        DataEntityModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [],
                        imports: [
                            http.HttpClientModule
                        ],
                        entryComponents: [],
                        exports: [],
                        providers: [DataEntityService, http.HttpClient]
                    },] }
        ];
        return DataEntityModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.DataEntityModule = DataEntityModule;
    exports.DataEntityService = DataEntityService;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=gsp-svc-data-entity-adapter.umd.js.map