/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
var PptViewerComponent = /** @class */ (function () {
    function PptViewerComponent(sanitizer) {
        this.sanitizer = sanitizer;
    }
    /**
     * @return {?}
     */
    PptViewerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.viewUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.pptUrl);
    };
    /**
     * @param {?} url
     * @return {?}
     */
    PptViewerComponent.prototype.pptChange = /**
     * @param {?} url
     * @return {?}
     */
    function (url) {
        this.viewUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);
    };
    PptViewerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-ppt-viewer',
                    template: "<div class=\"f-page\"><iframe id=\"viewPpt\" [src]=\"viewUrl\" height=\"100%\" width=\"100%\"></iframe></div>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    PptViewerComponent.ctorParameters = function () { return [
        { type: DomSanitizer }
    ]; };
    PptViewerComponent.propDecorators = {
        pptUrl: [{ type: Input }]
    };
    return PptViewerComponent;
}());
export { PptViewerComponent };
if (false) {
    /** @type {?} */
    PptViewerComponent.prototype.pptUrl;
    /** @type {?} */
    PptViewerComponent.prototype.viewUrl;
    /**
     * @type {?}
     * @private
     */
    PptViewerComponent.prototype.sanitizer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHB0LXZpZXdlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXN2Yy9maWxlLXZpZXdlci8iLCJzb3VyY2VzIjpbImxpYi9wcHQtdmlld2VyL3BwdC12aWV3ZXIvcHB0LXZpZXdlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUV6RDtJQVdFLDRCQUFvQixTQUF1QjtRQUF2QixjQUFTLEdBQVQsU0FBUyxDQUFjO0lBQUksQ0FBQzs7OztJQUVoRCxxQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsT0FBTyxHQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsOEJBQThCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzFFLENBQUM7Ozs7O0lBRUQsc0NBQVM7Ozs7SUFBVCxVQUFVLEdBQVc7UUFDbkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLDhCQUE4QixDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3BFLENBQUM7O2dCQW5CRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIseUhBQTBDOztpQkFFM0M7Ozs7Z0JBTlEsWUFBWTs7O3lCQVNsQixLQUFLOztJQWNSLHlCQUFDO0NBQUEsQUFyQkQsSUFxQkM7U0FoQlksa0JBQWtCOzs7SUFFN0Isb0NBQXVCOztJQUV2QixxQ0FBWTs7Ozs7SUFFQSx1Q0FBK0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERvbVNhbml0aXplciB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHAtcHB0LXZpZXdlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wcHQtdmlld2VyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vcHB0LXZpZXdlci5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgUHB0Vmlld2VyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBASW5wdXQoKSBwcHRVcmw6c3RyaW5nO1xuXG4gIHZpZXdVcmw6IGFueVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc2FuaXRpemVyOiBEb21TYW5pdGl6ZXIpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMudmlld1VybD10aGlzLnNhbml0aXplci5ieXBhc3NTZWN1cml0eVRydXN0UmVzb3VyY2VVcmwodGhpcy5wcHRVcmwpO1xuICB9XG5cbiAgcHB0Q2hhbmdlKHVybDogc3RyaW5nKSB7XG4gICAgdGhpcy52aWV3VXJsID0gdGhpcy5zYW5pdGl6ZXIuYnlwYXNzU2VjdXJpdHlUcnVzdFJlc291cmNlVXJsKHVybCk7XG4gIH1cblxufVxuIl19