/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Observable } from "rxjs";
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var PagePreloadService = /** @class */ (function () {
    function PagePreloadService() {
        var _this = this;
        this._checkPreload = new Observable((/**
         * @param {?} observer
         * @return {?}
         */
        function (observer) {
            return _this._observer = observer;
        }));
    }
    Object.defineProperty(PagePreloadService.prototype, "checkPreload", {
        get: /**
         * @return {?}
         */
        function () {
            return this._checkPreload;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} page
     * @return {?}
     */
    PagePreloadService.prototype.changeLastPageInView = /**
     * @param {?} page
     * @return {?}
     */
    function (page) {
        if (this._observer) {
            this._observer.next(page);
        }
    };
    PagePreloadService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    PagePreloadService.ctorParameters = function () { return []; };
    /** @nocollapse */ PagePreloadService.ngInjectableDef = i0.defineInjectable({ factory: function PagePreloadService_Factory() { return new PagePreloadService(); }, token: PagePreloadService, providedIn: "root" });
    return PagePreloadService;
}());
export { PagePreloadService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PagePreloadService.prototype._checkPreload;
    /**
     * @type {?}
     * @private
     */
    PagePreloadService.prototype._observer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS1wcmVsb2FkLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXN2Yy9maWxlLXZpZXdlci8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlL3BhZ2UtcHJlbG9hZC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFXLE1BQU0sTUFBTSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBRTNDO0lBT0U7UUFBQSxpQkFHQztRQUZDLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxVQUFVOzs7O1FBQUMsVUFBQSxRQUFRO1lBQzFDLE9BQUEsS0FBSSxDQUFDLFNBQVMsR0FBRyxRQUFRO1FBQXpCLENBQXlCLEVBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQsc0JBQUksNENBQVk7Ozs7UUFBaEI7WUFDRSxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUM7UUFDNUIsQ0FBQzs7O09BQUE7Ozs7O0lBRUQsaURBQW9COzs7O0lBQXBCLFVBQXFCLElBQVk7UUFDL0IsSUFBRyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2pCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzNCO0lBQ0gsQ0FBQzs7Z0JBcEJGLFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7Ozs7OzZCQUxEO0NBd0JDLEFBckJELElBcUJDO1NBbEJZLGtCQUFrQjs7Ozs7O0lBQzdCLDJDQUFtRDs7Ozs7SUFDbkQsdUNBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtPYnNlcnZhYmxlLCBPYnNlcnZlcn0gZnJvbSBcInJ4anNcIjtcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgUGFnZVByZWxvYWRTZXJ2aWNlIHtcbiAgcHJpdmF0ZSByZWFkb25seSBfY2hlY2tQcmVsb2FkOiBPYnNlcnZhYmxlPG51bWJlcj47XG4gIHByaXZhdGUgX29ic2VydmVyOiBPYnNlcnZlcjxudW1iZXI+O1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuX2NoZWNrUHJlbG9hZCA9IG5ldyBPYnNlcnZhYmxlKG9ic2VydmVyID0+XG4gICAgICB0aGlzLl9vYnNlcnZlciA9IG9ic2VydmVyKTtcbiAgfVxuXG4gIGdldCBjaGVja1ByZWxvYWQoKTogT2JzZXJ2YWJsZTxudW1iZXI+IHtcbiAgICByZXR1cm4gdGhpcy5fY2hlY2tQcmVsb2FkO1xuICB9XG5cbiAgY2hhbmdlTGFzdFBhZ2VJblZpZXcocGFnZTogbnVtYmVyKSB7XG4gICAgaWYodGhpcy5fb2JzZXJ2ZXIpIHtcbiAgICAgIHRoaXMuX29ic2VydmVyLm5leHQocGFnZSk7XG4gICAgfVxuICB9XG59XG4iXX0=