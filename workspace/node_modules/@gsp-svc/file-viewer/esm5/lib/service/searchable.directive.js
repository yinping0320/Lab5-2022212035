/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef } from '@angular/core';
import { SearchService } from "./search.service";
//import {HighlightSearchPipe} from "./pipes";
import { ZoomService } from "./zoom.service";
import * as jquery from "jquery";
/** @type {?} */
var $ = jquery.default;
var SearchableDirective = /** @class */ (function () {
    function SearchableDirective(_elementRef, _searchService, _zoomService) {
        var _this = this;
        this._elementRef = _elementRef;
        this._searchService = _searchService;
        this._zoomService = _zoomService;
        this.current = 0;
        this.total = 0;
        this.zoom = 100;
        _searchService.currentChange.subscribe((/**
         * @param {?} current
         * @return {?}
         */
        function (current) {
            _this.current = current;
            if (_this.current !== 0) {
                //this.moveToCurrent();
            }
        }));
        _searchService.textChange.subscribe((/**
         * @param {?} text
         * @return {?}
         */
        function (text) {
            _this.text = text;
            //this.highlightSearch();
        }));
        this.zoom = _zoomService.zoom ? _zoomService.zoom : this.zoom;
        _zoomService.zoomChange.subscribe((/**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            _this.zoom = val ? val : _this.zoom;
        }));
    }
    // private highlightSearch() {
    //   const el = this._elementRef ? this._elementRef.nativeElement : null;
    //   if (el) {
    //     this.cleanHighlight(el);
    //     if (this.text) {
    //       this.highlightEl(el);
    //       const count = el.querySelectorAll('.gd-highlight').length;
    //       this.total = count;
    //     } else {
    //       this.total = 0;
    //     }
    //     this._searchService.setTotal(this.total);
    //   }
    // }
    // private moveToCurrent() {
    //   if (this.current === 0) {
    //     return;
    //   }
    //   const currentZoom = this.getZoom();
    //   const el = this._elementRef ? this._elementRef.nativeElement : null;
    //   if (el) {
    //     el.querySelectorAll('.gd-highlight-select').forEach(function (value) {
    //       $(value).removeClass('gd-highlight-select');
    //     });
    //     const currentEl = el.querySelectorAll('.gd-highlight')[this.current - 1];
    //     $(currentEl).addClass('gd-highlight-select');
    //     if (currentEl) {
    //       const options = {
    //         left: 0,
    //         top: ($(currentEl).offset().top * currentZoom) + el.parentElement.scrollTop - 150,
    //       };
    //       el.parentElement.scrollTo(options);
    //     }
    //   }
    // }
    // private highlightEl(el: Element) {
    //   const textNodes = $(el).find('*').contents().filter(function () {
    //     const nodeName = this.parentElement.nodeName.toLowerCase();
    //     const checkClass = (<Element>this).classList ? !(<Element>this).classList.contains('gd-highlight') : true;
    //     return this.nodeType === 3 &&
    //       this.textContent.trim().length !== 0 &&
    //       nodeName !== 'style' &&
    //       nodeName !== 'title' &&
    //       nodeName !== 'body' &&
    //       nodeName !== 'script' &&
    //       checkClass;
    //   });
    //   const text = this.text;
    //   const highlight = this._highlight;
    //   textNodes.each(function () {
    //     const $this = $(this);
    //     let content = $this.text();
    //     content = highlight.transform(content, text);
    //     $this.replaceWith(content);
    //   });
    //   el.normalize();
    // }
    // private cleanHighlight(el: HTMLElement) {
    //   const nodeListOf = el.querySelectorAll('.gd-highlight');
    //   for (let i = 0; i < nodeListOf.length; i++) {
    //     const element = nodeListOf.item(i);
    //     element.replaceWith((<HTMLElement>element).innerText);
    //   }
    //   el.normalize();
    // }
    // private highlightSearch() {
    //   const el = this._elementRef ? this._elementRef.nativeElement : null;
    //   if (el) {
    //     this.cleanHighlight(el);
    //     if (this.text) {
    //       this.highlightEl(el);
    //       const count = el.querySelectorAll('.gd-highlight').length;
    //       this.total = count;
    //     } else {
    //       this.total = 0;
    //     }
    //     this._searchService.setTotal(this.total);
    //   }
    // }
    // private moveToCurrent() {
    //   if (this.current === 0) {
    //     return;
    //   }
    //   const currentZoom = this.getZoom();
    //   const el = this._elementRef ? this._elementRef.nativeElement : null;
    //   if (el) {
    //     el.querySelectorAll('.gd-highlight-select').forEach(function (value) {
    //       $(value).removeClass('gd-highlight-select');
    //     });
    //     const currentEl = el.querySelectorAll('.gd-highlight')[this.current - 1];
    //     $(currentEl).addClass('gd-highlight-select');
    //     if (currentEl) {
    //       const options = {
    //         left: 0,
    //         top: ($(currentEl).offset().top * currentZoom) + el.parentElement.scrollTop - 150,
    //       };
    //       el.parentElement.scrollTo(options);
    //     }
    //   }
    // }
    // private highlightEl(el: Element) {
    //   const textNodes = $(el).find('*').contents().filter(function () {
    //     const nodeName = this.parentElement.nodeName.toLowerCase();
    //     const checkClass = (<Element>this).classList ? !(<Element>this).classList.contains('gd-highlight') : true;
    //     return this.nodeType === 3 &&
    //       this.textContent.trim().length !== 0 &&
    //       nodeName !== 'style' &&
    //       nodeName !== 'title' &&
    //       nodeName !== 'body' &&
    //       nodeName !== 'script' &&
    //       checkClass;
    //   });
    //   const text = this.text;
    //   const highlight = this._highlight;
    //   textNodes.each(function () {
    //     const $this = $(this);
    //     let content = $this.text();
    //     content = highlight.transform(content, text);
    //     $this.replaceWith(content);
    //   });
    //   el.normalize();
    // }
    // private cleanHighlight(el: HTMLElement) {
    //   const nodeListOf = el.querySelectorAll('.gd-highlight');
    //   for (let i = 0; i < nodeListOf.length; i++) {
    //     const element = nodeListOf.item(i);
    //     element.replaceWith((<HTMLElement>element).innerText);
    //   }
    //   el.normalize();
    // }
    /**
     * @private
     * @return {?}
     */
    SearchableDirective.prototype.getZoom = 
    // private highlightSearch() {
    //   const el = this._elementRef ? this._elementRef.nativeElement : null;
    //   if (el) {
    //     this.cleanHighlight(el);
    //     if (this.text) {
    //       this.highlightEl(el);
    //       const count = el.querySelectorAll('.gd-highlight').length;
    //       this.total = count;
    //     } else {
    //       this.total = 0;
    //     }
    //     this._searchService.setTotal(this.total);
    //   }
    // }
    // private moveToCurrent() {
    //   if (this.current === 0) {
    //     return;
    //   }
    //   const currentZoom = this.getZoom();
    //   const el = this._elementRef ? this._elementRef.nativeElement : null;
    //   if (el) {
    //     el.querySelectorAll('.gd-highlight-select').forEach(function (value) {
    //       $(value).removeClass('gd-highlight-select');
    //     });
    //     const currentEl = el.querySelectorAll('.gd-highlight')[this.current - 1];
    //     $(currentEl).addClass('gd-highlight-select');
    //     if (currentEl) {
    //       const options = {
    //         left: 0,
    //         top: ($(currentEl).offset().top * currentZoom) + el.parentElement.scrollTop - 150,
    //       };
    //       el.parentElement.scrollTo(options);
    //     }
    //   }
    // }
    // private highlightEl(el: Element) {
    //   const textNodes = $(el).find('*').contents().filter(function () {
    //     const nodeName = this.parentElement.nodeName.toLowerCase();
    //     const checkClass = (<Element>this).classList ? !(<Element>this).classList.contains('gd-highlight') : true;
    //     return this.nodeType === 3 &&
    //       this.textContent.trim().length !== 0 &&
    //       nodeName !== 'style' &&
    //       nodeName !== 'title' &&
    //       nodeName !== 'body' &&
    //       nodeName !== 'script' &&
    //       checkClass;
    //   });
    //   const text = this.text;
    //   const highlight = this._highlight;
    //   textNodes.each(function () {
    //     const $this = $(this);
    //     let content = $this.text();
    //     content = highlight.transform(content, text);
    //     $this.replaceWith(content);
    //   });
    //   el.normalize();
    // }
    // private cleanHighlight(el: HTMLElement) {
    //   const nodeListOf = el.querySelectorAll('.gd-highlight');
    //   for (let i = 0; i < nodeListOf.length; i++) {
    //     const element = nodeListOf.item(i);
    //     element.replaceWith((<HTMLElement>element).innerText);
    //   }
    //   el.normalize();
    // }
    /**
     * @private
     * @return {?}
     */
    function () {
        return this.zoom / 100;
    };
    SearchableDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[gdSearchable]'
                },] }
    ];
    /** @nocollapse */
    SearchableDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: SearchService },
        { type: ZoomService }
    ]; };
    return SearchableDirective;
}());
export { SearchableDirective };
if (false) {
    /** @type {?} */
    SearchableDirective.prototype.text;
    /** @type {?} */
    SearchableDirective.prototype.current;
    /** @type {?} */
    SearchableDirective.prototype.total;
    /**
     * @type {?}
     * @private
     */
    SearchableDirective.prototype.zoom;
    /**
     * @type {?}
     * @private
     */
    SearchableDirective.prototype._elementRef;
    /**
     * @type {?}
     * @private
     */
    SearchableDirective.prototype._searchService;
    /**
     * @type {?}
     * @private
     */
    SearchableDirective.prototype._zoomService;
}
//# sourceMappingURL=data:application/json;base64,