/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Injector, ChangeDetectorRef, ViewChild } from '@angular/core';
import { DocViewRequest } from '../entity/docviewrequest';
import { DocViewerService } from '../../service/doc-viewer.service';
import { ZoomService } from '../../service/zoom.service';
import { NavigateService } from '../../service/navigate.service';
import { WindowService } from '../../service/window.service';
import { LoadingService } from '@farris/ui-loading';
import { ExcelDocumentComponent } from '../../excel-document/excel-document.component';
import { PagePreloadService } from '../../service/page-preload.service';
var DocViewerComponent = /** @class */ (function () {
    function DocViewerComponent(_viewerService, _zoomService, _navigateService, _windowService, loadService, pagePreloadService, injector) {
        // configService.updatedConfig.subscribe((viewerConfig) => {
        //   // this.viewerConfig = viewerConfig;
        // });
        this._viewerService = _viewerService;
        this._zoomService = _zoomService;
        this._navigateService = _navigateService;
        this._windowService = _windowService;
        this.loadService = loadService;
        this.pagePreloadService = pagePreloadService;
        this.injector = injector;
        this.title = 'GspCloudViewer';
        this.countPages = 0;
        this.formatDisabled = !this.file;
        this.showThumbnails = false;
        this.showSearch = false;
        this._zoom = 100;
        this.fileWasDropped = false;
        this.style = { transform: '', msTransform: '', oTransform: '', webkitTransform: '' };
        this.scale = 1;
        this.rotation = 0;
        this.translateX = 0;
        this.translateY = 0;
    }
    /**
     * @param {?} start
     * @param {?} end
     * @return {?}
     */
    DocViewerComponent.prototype.preloadPages = /**
     * @param {?} start
     * @param {?} end
     * @return {?}
     */
    function (start, end) {
        var _this = this;
        var _loop_1 = function (i) {
            this_1._viewerService.loadPage(this_1.credentials, i).subscribe((/**
             * @param {?} page
             * @return {?}
             */
            function (page) {
                _this.file.pages[i - 1] = page;
                if (_this.file.thumbnails && !_this.file.thumbnails[i - 1].data) {
                    if (page.data) {
                        page.data = page.data.replace(/>\s+</g, '><')
                            .replace(/\uFEFF/g, "");
                    }
                    _this.file.thumbnails[i - 1].data = page.data;
                }
            }));
        };
        var this_1 = this;
        for (var i = start; i <= end; i++) {
            _loop_1(i);
        }
    };
    /**
     * @param {?} file
     * @return {?}
     */
    DocViewerComponent.prototype.viewType = /**
     * @param {?} file
     * @return {?}
     */
    function (file) {
        return file.filePath.endsWith('.pdf');
    };
    /**
     * @return {?}
     */
    DocViewerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var request = new DocViewRequest();
        request.filePath = this.filePath;
        /** @type {?} */
        var loading = this.loadService.show({
            message: '文档加载中'
        });
        this._viewerService.loadFileInfo(request).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            loading.close();
            if (res.error != null) {
                // this.msgService.warning('获取数据失败,请稍后重试。');
                //this.configList = [new StorageConfig];
            }
            else {
                _this.file = res;
                _this.credentials = { guid: _this.file.filePath, password: "" };
                _this.formatDisabled = !_this.file;
                if (_this.file) {
                    if (_this.file.pages && _this.file.pages[0]) {
                        _this._pageHeight = _this.file.pages[0].height;
                        _this._pageWidth = _this.file.pages[0].width;
                        _this.options = _this.zoomOptions();
                        _this.refreshZoom();
                    }
                    //const preloadPageCount = this.viewerConfig.preloadPageCount;
                    /** @type {?} */
                    var countPages = _this.file.pages ? _this.file.pages.length : 0;
                    _this._navigateService.countPages = countPages;
                    _this._navigateService.currentPage = 1;
                    _this.countPages = countPages;
                    _this.pagePreloadService.checkPreload.subscribe((/**
                     * @param {?} page
                     * @return {?}
                     */
                    function (page) {
                        //if (this.viewerConfig.preloadPageCount !== 0) {
                        for (var i = page; i < page + 2; i++) {
                            if (i > 0 && i <= _this.countPages && !_this.file.pages[i - 1].data) {
                                _this.preloadPages(i, i);
                            }
                        }
                        // }
                    }));
                }
                _this.getFile();
                // if (!this.notExcel()) {
                //   this.file.pages.forEach(ele => {
                //     if (ele.data.includes("<x:Name>"))
                //       ele.sheetName = ele.data.split("<x:Name>")[1].split("</x:Name>")[0];
                //   })
                // }
            }
            if (_this.injector) {
                /** @type {?} */
                var changeDetector = _this.injector.get(ChangeDetectorRef);
                changeDetector.detectChanges();
            }
        }));
    };
    /**
     * @param {?} deg
     * @return {?}
     */
    DocViewerComponent.prototype.rotate = /**
     * @param {?} deg
     * @return {?}
     */
    function (deg) {
        var _this = this;
        if (this.formatDisabled)
            return;
        /** @type {?} */
        var pageNumber = this._navigateService.currentPage;
        /** @type {?} */
        var loading = this.loadService.show({
            message: '文档加载中'
        });
        if (this.saveRotateStateConfig && this.file) {
            this._viewerService.rotate(this.credentials, deg, pageNumber).subscribe((/**
             * @param {?} res
             * @return {?}
             */
            function (res) {
                var e_1, _a;
                loading.close();
                if (res.error != null) {
                    // this.msgService.warning('获取数据失败,请稍后重试。');
                    //this.configList = [new StorageConfig];
                }
                else {
                    /** @type {?} */
                    var data = res;
                    try {
                        for (var data_1 = tslib_1.__values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {
                            var page = data_1_1.value;
                            /** @type {?} */
                            var pageModel = _this.file.pages[page.pageNumber - 1];
                            if (_this.file && _this.file.pages && pageModel) {
                                _this.changeAngle(pageModel, page.angle);
                            }
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                }
                // this._viewerService.rotate(this.credentials, deg, pageNumber).subscribe((data: RotatedPage[]) => {
                //   for (const page of data) {
                //     const pageModel = this.file.pages[page.pageNumber - 1];
                //     if (this.file && this.file.pages && pageModel) {
                //       this.changeAngle(pageModel, page.angle);
                //     }
                //   }
            }));
        }
        else {
            /** @type {?} */
            var pageModel = this.file.pages[pageNumber - 1];
            if (this.file && this.file.pages && pageModel) {
                /** @type {?} */
                var angle = pageModel.angle + deg;
                if (angle > 360) {
                    this.changeAngle(pageModel, 90);
                }
                else if (angle < -360) {
                    this.changeAngle(pageModel, -90);
                }
                else {
                    this.changeAngle(pageModel, angle);
                }
            }
        }
    };
    /**
     * @private
     * @param {?} page
     * @param {?} angle
     * @return {?}
     */
    DocViewerComponent.prototype.changeAngle = /**
     * @private
     * @param {?} page
     * @param {?} angle
     * @return {?}
     */
    function (page, angle) {
        page.angle = angle;
    };
    /**
     * @param {?} filePath
     * @return {?}
     */
    DocViewerComponent.prototype.docChange = /**
     * @param {?} filePath
     * @return {?}
     */
    function (filePath) {
        var _this = this;
        /** @type {?} */
        var request = new DocViewRequest();
        request.filePath = filePath;
        /** @type {?} */
        var loading = this.loadService.show({
            message: '文档加载中'
        });
        this._viewerService.loadFileInfo(request).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            loading.close();
            if (res.error != null) {
                // this.msgService.warning('获取数据失败,请稍后重试。');
                //this.configList = [new StorageConfig];
            }
            else {
                _this.file = res;
                _this.credentials = { guid: _this.file.filePath, password: "" };
                _this.formatDisabled = !_this.file;
                if (_this.file) {
                    if (_this.file.pages && _this.file.pages[0]) {
                        _this._pageHeight = _this.file.pages[0].height;
                        _this._pageWidth = _this.file.pages[0].width;
                        _this.options = _this.zoomOptions();
                        _this.refreshZoom();
                    }
                    //const preloadPageCount = this.viewerConfig.preloadPageCount;
                    /** @type {?} */
                    var countPages = _this.file.pages ? _this.file.pages.length : 0;
                    _this._navigateService.countPages = countPages;
                    _this._navigateService.currentPage = 1;
                    _this.countPages = countPages;
                }
                _this.getFile();
                if (!_this.notExcel())
                    _this.excelView.currentPageNo = 1;
                // if (!this.notExcel()) {
                //   this.file.pages.forEach(ele => {
                //     if (ele.data.includes("<x:Name>"))
                //       ele.sheetName = ele.data.split("<x:Name>")[1].split("</x:Name>")[0];
                //   })
                // }
            }
        }));
    };
    /**
     * @return {?}
     */
    DocViewerComponent.prototype.getFile = /**
     * @return {?}
     */
    function () {
        return this.file;
    };
    /**
     * @return {?}
     */
    DocViewerComponent.prototype.notExcel = /**
     * @return {?}
     */
    function () {
        return !(this.filePath.endsWith('.xls') || this.filePath.endsWith('.xlsx'));
    };
    Object.defineProperty(DocViewerComponent.prototype, "rewriteConfig", {
        get: /**
         * @return {?}
         */
        function () {
            return this.viewerConfig ? this.viewerConfig.rewrite : true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DocViewerComponent.prototype, "zoomConfig", {
        get: /**
         * @return {?}
         */
        function () {
            return this.viewerConfig ? this.viewerConfig.zoom : true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DocViewerComponent.prototype, "pageSelectorConfig", {
        get: /**
         * @return {?}
         */
        function () {
            return this.viewerConfig ? this.viewerConfig.pageSelector : true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DocViewerComponent.prototype, "searchConfig", {
        get: /**
         * @return {?}
         */
        function () {
            return this.viewerConfig ? this.viewerConfig.search : true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DocViewerComponent.prototype, "thumbnailsConfig", {
        get: /**
         * @return {?}
         */
        function () {
            return this.viewerConfig ? this.viewerConfig.thumbnails : true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DocViewerComponent.prototype, "rotateConfig", {
        get: /**
         * @return {?}
         */
        function () {
            return this.viewerConfig ? this.viewerConfig.rotate : true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DocViewerComponent.prototype, "downloadConfig", {
        get: /**
         * @return {?}
         */
        function () {
            return this.viewerConfig ? this.viewerConfig.download : true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DocViewerComponent.prototype, "uploadConfig", {
        get: /**
         * @return {?}
         */
        function () {
            return this.viewerConfig ? this.viewerConfig.upload : true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DocViewerComponent.prototype, "printConfig", {
        get: /**
         * @return {?}
         */
        function () {
            return this.viewerConfig ? this.viewerConfig.print : true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DocViewerComponent.prototype, "browseConfig", {
        get: /**
         * @return {?}
         */
        function () {
            return this.viewerConfig ? this.viewerConfig.browse : true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DocViewerComponent.prototype, "htmlModeConfig", {
        get: /**
         * @return {?}
         */
        function () {
            return this.viewerConfig ? this.viewerConfig.htmlMode : true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DocViewerComponent.prototype, "saveRotateStateConfig", {
        get: /**
         * @return {?}
         */
        function () {
            return this.viewerConfig ? this.viewerConfig.saveRotateState : true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DocViewerComponent.prototype, "enableRightClickConfig", {
        get: /**
         * @return {?}
         */
        function () {
            return this.viewerConfig ? this.viewerConfig.enableRightClick : true;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    DocViewerComponent.prototype.rotateClockwise = /**
     * @return {?}
     */
    function () {
        this.rotate(90);
    };
    /**
     * @return {?}
     */
    DocViewerComponent.prototype.rotateCounterClockwise = /**
     * @return {?}
     */
    function () {
        this.rotate(-90);
    };
    Object.defineProperty(DocViewerComponent.prototype, "currentPage", {
        get: /**
         * @return {?}
         */
        function () {
            return this._navigateService.currentPage;
        },
        enumerable: true,
        configurable: true
    });
    // selectDir($event: string) {
    //   this._viewerService.loadFiles($event).subscribe((files: FileModel[]) => this.files = files || []);
    // }
    // preloadPages(start: number, end: number) {
    //   for (let i = start; i <= end; i++) {
    //     this._viewerService.loadPage(this.credentials, i).subscribe((page: PageModel) => {
    //       this.file.pages[i - 1] = page;
    //     });
    //   }
    // }
    // upload($event: string) {
    //   this._viewerService.upload(null, $event, this.rewriteConfig).subscribe(() => {
    //     this.selectDir('');
    //   });
    // }
    // selectDir($event: string) {
    //   this._viewerService.loadFiles($event).subscribe((files: FileModel[]) => this.files = files || []);
    // }
    // preloadPages(start: number, end: number) {
    //   for (let i = start; i <= end; i++) {
    //     this._viewerService.loadPage(this.credentials, i).subscribe((page: PageModel) => {
    //       this.file.pages[i - 1] = page;
    //     });
    //   }
    // }
    // upload($event: string) {
    //   this._viewerService.upload(null, $event, this.rewriteConfig).subscribe(() => {
    //     this.selectDir('');
    //   });
    // }
    /**
     * @return {?}
     */
    DocViewerComponent.prototype.nextPage = 
    // selectDir($event: string) {
    //   this._viewerService.loadFiles($event).subscribe((files: FileModel[]) => this.files = files || []);
    // }
    // preloadPages(start: number, end: number) {
    //   for (let i = start; i <= end; i++) {
    //     this._viewerService.loadPage(this.credentials, i).subscribe((page: PageModel) => {
    //       this.file.pages[i - 1] = page;
    //     });
    //   }
    // }
    // upload($event: string) {
    //   this._viewerService.upload(null, $event, this.rewriteConfig).subscribe(() => {
    //     this.selectDir('');
    //   });
    // }
    /**
     * @return {?}
     */
    function () {
        if (this.formatDisabled)
            return;
        this._navigateService.nextPage();
    };
    /**
     * @return {?}
     */
    DocViewerComponent.prototype.prevPage = /**
     * @return {?}
     */
    function () {
        if (this.formatDisabled)
            return;
        this._navigateService.prevPage();
    };
    /**
     * @return {?}
     */
    DocViewerComponent.prototype.toLastPage = /**
     * @return {?}
     */
    function () {
        if (this.formatDisabled)
            return;
        this._navigateService.toLastPage();
    };
    /**
     * @return {?}
     */
    DocViewerComponent.prototype.toFirstPage = /**
     * @return {?}
     */
    function () {
        if (this.formatDisabled)
            return;
        this._navigateService.toFirstPage();
    };
    /**
     * @param {?} page
     * @return {?}
     */
    DocViewerComponent.prototype.navigateToPage = /**
     * @param {?} page
     * @return {?}
     */
    function (page) {
        if (this.formatDisabled)
            return;
        this._navigateService.navigateTo(page);
    };
    /**
     * @return {?}
     */
    DocViewerComponent.prototype.zoomIn = /**
     * @return {?}
     */
    function () {
        if (this.formatDisabled)
            return;
        if (this._zoom < 490) {
            this.zoom = this._zoom + 10;
        }
    };
    /**
     * @return {?}
     */
    DocViewerComponent.prototype.zoomOut = /**
     * @return {?}
     */
    function () {
        if (this.formatDisabled)
            return;
        if (this._zoom > 30) {
            this.zoom = this._zoom - 10;
        }
    };
    /**
     * @return {?}
     */
    DocViewerComponent.prototype.zoomReset = /**
     * @return {?}
     */
    function () {
        this.zoom = 100;
    };
    /**
     * @return {?}
     */
    DocViewerComponent.prototype.zoomOptions = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var width = this.getFitToWidth();
        /** @type {?} */
        var height = this.getFitToHeight();
        return this._zoomService.zoomOptions(width, height);
    };
    /**
     * @private
     * @return {?}
     */
    DocViewerComponent.prototype.refreshZoom = /**
     * @private
     * @return {?}
     */
    function () {
        this.zoom = this._windowService.isDesktop() ? 100 : this.getFitToWidth();
        //this.zoom = 100;  
    };
    /**
     * @private
     * @return {?}
     */
    DocViewerComponent.prototype.getFitToWidth = /**
     * @private
     * @return {?}
     */
    function () {
        // const pageWidth = this.ptToPx(this._pageWidth);
        // const pageHeight = this.ptToPx(this._pageHeight);
        /** @type {?} */
        var pageWidth = !this.notExcel() ? this._pageWidth : this.ptToPx(this._pageWidth);
        /** @type {?} */
        var pageHeight = !this.notExcel() ? this._pageHeight : this.ptToPx(this._pageHeight);
        /** @type {?} */
        var offsetWidth = pageWidth ? pageWidth : window.innerWidth;
        return (pageHeight > pageWidth && Math.round(offsetWidth / window.innerWidth) < 2) ? 200 - Math.round(offsetWidth * 100 / window.innerWidth) : Math.round(window.innerWidth * 100 / offsetWidth);
    };
    /**
     * @private
     * @return {?}
     */
    DocViewerComponent.prototype.getFitToHeight = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var pageWidth = !this.notExcel() ? this._pageWidth : this.ptToPx(this._pageWidth);
        /** @type {?} */
        var pageHeight = !this.notExcel() ? this._pageHeight : this.ptToPx(this._pageHeight);
        /** @type {?} */
        var windowHeight = (pageHeight > pageWidth) ? window.innerHeight - 100 : window.innerHeight + 100;
        /** @type {?} */
        var offsetHeight = pageHeight ? pageHeight : windowHeight;
        return (pageHeight > pageWidth) ? Math.round(windowHeight * 100 / offsetHeight) : Math.round(offsetHeight * 100 / windowHeight);
    };
    /**
     * @private
     * @param {?} pt
     * @return {?}
     */
    DocViewerComponent.prototype.ptToPx = /**
     * @private
     * @param {?} pt
     * @return {?}
     */
    function (pt) {
        //pt * 96 / 72 = px.
        return pt * 96 / 72;
    };
    Object.defineProperty(DocViewerComponent.prototype, "zoom", {
        get: /**
         * @return {?}
         */
        function () {
            return this._zoom;
        },
        set: /**
         * @param {?} zoom
         * @return {?}
         */
        function (zoom) {
            this._zoom = zoom;
            this._zoomService.changeZoom(this._zoom);
        },
        enumerable: true,
        configurable: true
    });
    DocViewerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-doc-viewer',
                    template: "<!-- <gd-loading-mask [loadingMask]=\"isLoading\"></gd-loading-mask> -->\n<div class=\"f-page\">\n    <div class=\"wrapper f-utils-fill-flex-column\" style=\"overflow-x:auto;overflow-y: hidden;\">\n        <div class=\"top-panel\" *ngIf=\"notExcel()\">\n            <app-gsp-top-toolbar class=\"toolbar-panel\">\n                <!-- <app-gsp-button [disabled]=\"formatDisabled\" [icon]=\"'angle-double-left'\" [tooltip]=\"'First Page'\" (click)=\"toFirstPage()\" *ngIf=\"pageSelectorConfig\"></app-gsp-button> -->\n                <div class=\"btn btn-secondary page-button\" (click)=\"toFirstPage()\">\n                    <img [src]=\"'/platform/runtime/dfs/images/firstPage.png'\" title=\"'\u7B2C\u4E00\u9875'\">\n                </div>\n                <!-- <app-gsp-button [disabled]=\"formatDisabled\" [icon]=\"'angle-left'\" [tooltip]=\"'Previous Page'\" (click)=\"prevPage()\" *ngIf=\"pageSelectorConfig\"></app-gsp-button> -->\n                <div class=\"btn btn-secondary page-button\" (click)=\"prevPage()\">\n                    <img [src]=\"'/platform/runtime/dfs/images/prePage.png'\" title=\"'\u524D\u4E00\u9875'\">\n                </div>\n                <div class=\"current-page-number\" [ngClass]=\"{'active': !formatDisabled}\" style=\"position: relative;  bottom: 11px; right:-47px\">{{currentPage}}/{{countPages}}\n                </div>\n                <div class=\"btn btn-secondary page-button\" (click)=\"nextPage()\">\n                    <img [src]=\"'/platform/runtime/dfs/images/nextPage.png'\" title=\"'\u540E\u4E00\u9875'\">\n                </div>\n                <div class=\"btn btn-secondary page-button\" (click)=\"toLastPage()\">\n                    <img [src]=\"'/platform/runtime/dfs/images/lastPage.png'\" title=\"'\u6700\u540E\u4E00\u9875'\">\n                </div>\n                <!-- <app-gsp-button [disabled]=\"formatDisabled\" [icon]=\"'angle-right'\" [tooltip]=\"'Next Page'\" (click)=\"nextPage()\" *ngIf=\"pageSelectorConfig\"></app-gsp-button>\n                <app-gsp-button [disabled]=\"formatDisabled\" [icon]=\"'angle-double-right'\" [tooltip]=\"'Last Page'\" (click)=\"nextPage()\" *ngIf=\"pageSelectorConfig\"></app-gsp-button> -->\n            </app-gsp-top-toolbar>\n        </div>\n        <div class=\"doc-panel  f-utils-fill-flex-column\" *ngIf=\"file\">\n\n            <app-gsp-document class=\"gsp-document\" *ngIf=\"file &&  notExcel()\" [file]=\"getFile()\" [mode]=\"htmlModeConfig\" [preloadPageCount]=\"viewerConfig?.preloadPageCount\" [ngStyle]=\"style\"></app-gsp-document>\n            <app-excel-document class=\"gsp-document\" *ngIf=\"file &&  !notExcel() \" style=\"overflow: hidden;\" [file]=\"getFile()\" [mode]=\"htmlModeConfig\" gdScrollable [preloadPageCount]=\"viewerConfig?.preloadPageCount\">\n            </app-excel-document>\n\n        </div>\n    </div>\n</div>",
                    styles: [":host *{font-family:'Open Sans',Arial,Helvetica,sans-serif}.current-page-number{margin-left:7px;font-size:14px;color:#959da5;width:37px;height:37px;line-height:37px;text-align:center}.current-page-number.active{color:#fff}.page-button{background-color:#212529;width:28px;height:28px;border:none;position:relative;bottom:14px;right:-50px}.page-button img{position:relative;left:-13px}.wrapper{align-items:stretch;height:100%;width:100%;position:absolute;top:0;bottom:0;left:0;right:0}.doc-panel{display:flex}.thumbnails-button{position:absolute;right:3px}.gsp-document{width:100%;height:100%}.top-panel{display:flex;align-items:center;width:100%;height:32px}.toolbar-panel{background-color:#3e4e5a;width:100%;height:32px}::ng-deep .tools .button,::ng-deep .tools .nav-caret,::ng-deep .tools .selected-value{color:#fff!important}::ng-deep .tools .button.inactive,::ng-deep .tools .nav-caret.inactive,::ng-deep .tools .selected-value.inactive{color:#959da5!important}::ng-deep .tools .button{flex-flow:column}::ng-deep .tools .dropdown-menu .option{color:#6e6e6e!important}::ng-deep .tools .dropdown-menu .option:hover{background-color:#4b566c!important}::ng-deep .tools .icon-button{margin:0 0 0 7px!important}::ng-deep .tools .select{width:65px;height:37px;margin-left:7px;line-height:37px;text-align:center}"]
                }] }
    ];
    /** @nocollapse */
    DocViewerComponent.ctorParameters = function () { return [
        { type: DocViewerService },
        { type: ZoomService },
        { type: NavigateService },
        { type: WindowService },
        { type: LoadingService },
        { type: PagePreloadService },
        { type: Injector }
    ]; };
    DocViewerComponent.propDecorators = {
        excelView: [{ type: ViewChild, args: [ExcelDocumentComponent,] }],
        filePath: [{ type: Input }]
    };
    return DocViewerComponent;
}());
export { DocViewerComponent };
if (false) {
    /** @type {?} */
    DocViewerComponent.prototype.excelView;
    /** @type {?} */
    DocViewerComponent.prototype.filePath;
    /** @type {?} */
    DocViewerComponent.prototype.title;
    /** @type {?} */
    DocViewerComponent.prototype.file;
    /** @type {?} */
    DocViewerComponent.prototype.viewerConfig;
    /** @type {?} */
    DocViewerComponent.prototype.countPages;
    /** @type {?} */
    DocViewerComponent.prototype.formatDisabled;
    /** @type {?} */
    DocViewerComponent.prototype.showThumbnails;
    /** @type {?} */
    DocViewerComponent.prototype.showSearch;
    /** @type {?} */
    DocViewerComponent.prototype.isDesktop;
    /** @type {?} */
    DocViewerComponent.prototype.isLoading;
    /** @type {?} */
    DocViewerComponent.prototype.credentials;
    /** @type {?} */
    DocViewerComponent.prototype._zoom;
    /** @type {?} */
    DocViewerComponent.prototype._pageWidth;
    /** @type {?} */
    DocViewerComponent.prototype._pageHeight;
    /** @type {?} */
    DocViewerComponent.prototype.options;
    /** @type {?} */
    DocViewerComponent.prototype.fileWasDropped;
    /** @type {?} */
    DocViewerComponent.prototype.style;
    /** @type {?} */
    DocViewerComponent.prototype.scale;
    /** @type {?} */
    DocViewerComponent.prototype.rotation;
    /** @type {?} */
    DocViewerComponent.prototype.translateX;
    /** @type {?} */
    DocViewerComponent.prototype.translateY;
    /**
     * @type {?}
     * @private
     */
    DocViewerComponent.prototype._viewerService;
    /**
     * @type {?}
     * @private
     */
    DocViewerComponent.prototype._zoomService;
    /**
     * @type {?}
     * @private
     */
    DocViewerComponent.prototype._navigateService;
    /**
     * @type {?}
     * @private
     */
    DocViewerComponent.prototype._windowService;
    /**
     * @type {?}
     * @private
     */
    DocViewerComponent.prototype.loadService;
    /**
     * @type {?}
     * @private
     */
    DocViewerComponent.prototype.pagePreloadService;
    /**
     * @type {?}
     * @private
     */
    DocViewerComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,