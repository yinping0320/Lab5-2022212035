/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class ImageViewerComponent {
    constructor() {
        this.index = 0;
        this.style = { transform: '', msTransform: '', oTransform: '', webkitTransform: '' };
        this.scale = 1;
        this.rotation = 0;
        this.translateX = 0;
        this.translateY = 0;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    zoomIn() {
        this.scale < 4 ? this.scale += 0.1 : 4;
        this.updateStyle();
    }
    /**
     * @return {?}
     */
    zoomOut() {
        this.scale > 0.3 ? this.scale -= 0.1 : 0.3;
        this.scale = Number(this.scale.toFixed(1));
        this.updateStyle();
    }
    /**
     * @return {?}
     */
    zoomReset() {
        this.scale = 1;
        this.updateStyle();
    }
    /**
     * @param {?} evt
     * @return {?}
     */
    scrollZoom(evt) {
        evt.deltaY > 0 ? this.zoomOut() : this.zoomIn();
        return false;
    }
    /**
     * @return {?}
     */
    rotateClockwise() {
        this.rotation += 90;
        this.updateStyle();
    }
    /**
     * @return {?}
     */
    rotateCounterClockwise() {
        this.rotation -= 90;
        this.updateStyle();
    }
    /**
     * @param {?} evt
     * @return {?}
     */
    onDragStart(evt) {
        this.prevX = evt.clientX;
        this.prevY = evt.clientY;
    }
    /**
     * @param {?} evt
     * @return {?}
     */
    onDragOver(evt) {
        this.translateX += (evt.clientX - this.prevX);
        this.translateY += (evt.clientY - this.prevY);
        this.prevX = evt.clientX;
        this.prevY = evt.clientY;
        this.updateStyle();
    }
    // @HostListener('window:keyup.ArrowLeft')
    // preFile() {
    //   if (this.index > 0) {
    //     this.index -= 1;
    //     this.reset();
    //   }
    // }
    // @HostListener('window:keyup.ArrowRight')
    // nextFile() {
    //   if (this.index < this.src.length - 1) {
    //     this.index += 1;
    //     this.reset();
    //   }
    // }
    /**
     * @param {?} url
     * @return {?}
     */
    imageChange(url) {
        this.imageUrl = url;
        this.reset();
    }
    /**
     * @return {?}
     */
    reset() {
        this.scale = 1;
        this.rotation = 0;
        this.translateX = 0;
        this.translateY = 0;
        this.updateStyle();
    }
    /**
     * @return {?}
     */
    updateStyle() {
        this.style.transform = `translate(${this.translateX}px, ${this.translateY}px) rotate(${this.rotation}deg) scale(${this.scale})`;
        this.style.msTransform = this.style.transform;
        this.style.webkitTransform = this.style.transform;
        this.style.oTransform = this.style.transform;
    }
}
ImageViewerComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-image-viewer',
                template: "<div (wheel)=\"scrollZoom($event)\" (dragover)=\"onDragOver($event)\" (dragstart)=\"onDragStart($event)\"  >\n  <img [src]='imageUrl' id=\"image\" [ngStyle]=\"style\">\n  <!-- <div>\n      <button id=\"zoomin\" kendoButton [icon]=\"'zoom-in'\" (click)=\"zoomIn()\"></button>\n      <button id=\"zoomout\" kendoButton [icon]=\"'zoom-out'\" (click)=\"zoomOut()\"></button>\n      <button id=\"clockwise\" kendoButton [icon]=\"'reload'\" (click)=\"rotateClockwise()\"></button>\n      <button id=\"counterclockwise\" kendoButton [icon]=\"'reset'\" (click)=\"rotateCounterClockwise()\"></button>\n  </div> -->\n  <!--div id=\"picchange\">\n      <button *ngIf=\"src.length>1\" id=\"prepic\" kendoButton [icon]=\"'arrow-chevron-left'\" (click)=\"prePicture()\"\n          [disabled]=\"index == 0\"></button>\n\n      <button *ngIf=\"src.length>1\" id=\"nextpic\" kendoButton [icon]=\"'arrow-chevron-right'\" (click)=\"nextPicture()\"\n          [disabled]=\"index == src.length - 1\"></button>\n  </div-->\n</div>\n",
                styles: ["#image{text-align:center;margin:auto;top:0;left:0;bottom:0;right:0;position:absolute;max-height:100%;max-width:100%;overflow:hidden}#zoomin{width:40px;height:40px;border-radius:20px;position:absolute;right:30px;bottom:285px;transform:scale(1.5);-ms-transform:scale(1.5);-moz-transform:scale(1.5);-webkit-transform:scale(1.5);-o-transform:scale(1.5)}#zoomout{width:40px;height:40px;border-radius:20px;position:absolute;right:30px;bottom:205px;transform:scale(1.5);-ms-transform:scale(1.5);-moz-transform:scale(1.5);-webkit-transform:scale(1.5);-o-transform:scale(1.5)}#clockwise{width:40px;height:40px;border-radius:20px;position:absolute;right:30px;bottom:125px;transform:scale(1.5) rotate(45deg);-ms-transform:scale(1.5) rotate(45deg);-moz-transform:scale(1.5) rotate(45deg);-webkit-transform:scale(1.5) rotate(45deg);-o-transform:scale(1.5) rotate(45deg)}#counterclockwise{width:40px;height:40px;border-radius:20px;position:absolute;right:30px;bottom:45px;transform:scale(1.5) rotate(-45deg);-ms-transform:scale(1.5) rotate(-45deg);-moz-transform:scale(1.5) rotate(-45deg);-webkit-transform:scale(1.5) rotate(-45deg);-o-transform:scale(1.5) rotate(-45deg)}#prepic{width:40px;height:40px;border-radius:20px;position:absolute;bottom:25px;right:50px;transform:scale(1.5);-ms-transform:scale(1.5);-moz-transform:scale(1.5);-webkit-transform:scale(1.5);-o-transform:scale(1.5)}#nextpic{width:40px;height:40px;border-radius:20px;position:relative;bottom:25px;left:50px;transform:scale(1.5);-ms-transform:scale(1.5);-moz-transform:scale(1.5);-webkit-transform:scale(1.5);-o-transform:scale(1.5)}#picchange{position:fixed;bottom:0;left:50%}"]
            }] }
];
/** @nocollapse */
ImageViewerComponent.ctorParameters = () => [];
ImageViewerComponent.propDecorators = {
    imageUrl: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ImageViewerComponent.prototype.imageUrl;
    /** @type {?} */
    ImageViewerComponent.prototype.index;
    /** @type {?} */
    ImageViewerComponent.prototype.style;
    /** @type {?} */
    ImageViewerComponent.prototype.scale;
    /** @type {?} */
    ImageViewerComponent.prototype.rotation;
    /** @type {?} */
    ImageViewerComponent.prototype.translateX;
    /** @type {?} */
    ImageViewerComponent.prototype.translateY;
    /** @type {?} */
    ImageViewerComponent.prototype.prevX;
    /** @type {?} */
    ImageViewerComponent.prototype.prevY;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2Utdmlld2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atc3ZjL2ZpbGUtdmlld2VyLyIsInNvdXJjZXMiOlsibGliL2ltYWdlLXZpZXdlci9pbWFnZS12aWV3ZXIvaW1hZ2Utdmlld2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBd0IsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBT3ZFLE1BQU0sT0FBTyxvQkFBb0I7SUFJL0I7UUFNQSxVQUFLLEdBQVcsQ0FBQyxDQUFDO1FBQ2xCLFVBQUssR0FBRyxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsV0FBVyxFQUFFLEVBQUUsRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFLGVBQWUsRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUNoRixVQUFLLEdBQVcsQ0FBQyxDQUFDO1FBQ2xCLGFBQVEsR0FBRyxDQUFDLENBQUM7UUFDYixlQUFVLEdBQUcsQ0FBQyxDQUFDO1FBQ2YsZUFBVSxHQUFHLENBQUMsQ0FBQztJQVhDLENBQUM7Ozs7SUFFakIsUUFBUTtJQUNSLENBQUM7Ozs7SUFZRCxNQUFNO1FBQ0osSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7Ozs7SUFFRCxPQUFPO1FBQ0wsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7UUFDM0MsSUFBSSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMzQyxJQUFJLENBQUMsV0FBVyxF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bmVyLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHAtaW1hZ2Utdmlld2VyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2ltYWdlLXZpZXdlci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2ltYWdlLXZpZXdlci5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgSW1hZ2VWaWV3ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBJbnB1dCgpIGltYWdlVXJsOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG5cbiAgaW5kZXg6IG51bWJlciA9IDA7XG4gIHN0eWxlID0geyB0cmFuc2Zvcm06ICcnLCBtc1RyYW5zZm9ybTogJycsIG9UcmFuc2Zvcm06ICcnLCB3ZWJraXRUcmFuc2Zvcm06ICcnIH07XG4gIHNjYWxlOiBudW1iZXIgPSAxO1xuICByb3RhdGlvbiA9IDA7XG4gIHRyYW5zbGF0ZVggPSAwO1xuICB0cmFuc2xhdGVZID0gMDtcbiAgcHJldlg6IG51bWJlcjtcbiAgcHJldlk6IG51bWJlcjtcblxuICB6b29tSW4oKSB7XG4gICAgdGhpcy5zY2FsZSA8IDQgPyB0aGlzLnNjYWxlICs9IDAuMSA6IDQ7XG4gICAgdGhpcy51cGRhdGVTdHlsZSgpO1xuICB9XG5cbiAgem9vbU91dCgpIHtcbiAgICB0aGlzLnNjYWxlID4gMC4zID8gdGhpcy5zY2FsZSAtPSAwLjEgOiAwLjM7XG4gICAgdGhpcy5zY2FsZSA9IE51bWJlcih0aGlzLnNjYWxlLnRvRml4ZWQoMSkpO1xuICAgIHRoaXMudXBkYXRlU3R5bGUoKTtcbiAgfVxuXG4gIHpvb21SZXNldCgpIHtcbiAgICB0aGlzLnNjYWxlID0gMTtcbiAgICB0aGlzLnVwZGF0ZVN0eWxlKCk7XG4gIH1cblxuICBzY3JvbGxab29tKGV2dCkge1xuICAgIGV2dC5kZWx0YVkgPiAwID8gdGhpcy56b29tT3V0KCkgOiB0aGlzLnpvb21JbigpO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJvdGF0ZUNsb2Nrd2lzZSgpIHtcbiAgICB0aGlzLnJvdGF0aW9uICs9IDkwO1xuICAgIHRoaXMudXBkYXRlU3R5bGUoKTtcbiAgfVxuXG4gIHJvdGF0ZUNvdW50ZXJDbG9ja3dpc2UoKSB7XG4gICAgdGhpcy5yb3RhdGlvbiAtPSA5MDtcbiAgICB0aGlzLnVwZGF0ZVN0eWxlKCk7XG4gIH1cblxuICBvbkRyYWdTdGFydChldnQpIHtcbiAgICB0aGlzLnByZXZYID0gZXZ0LmNsaWVudFg7XG4gICAgdGhpcy5wcmV2WSA9IGV2dC5jbGllbnRZO1xuICB9XG5cbiAgb25EcmFnT3ZlcihldnQpIHtcbiAgICB0aGlzLnRyYW5zbGF0ZVggKz0gKGV2dC5jbGllbnRYIC0gdGhpcy5wcmV2WCk7XG4gICAgdGhpcy50cmFuc2xhdGVZICs9IChldnQuY2xpZW50WSAtIHRoaXMucHJldlkpO1xuICAgIHRoaXMucHJldlggPSBldnQuY2xpZW50WDtcbiAgICB0aGlzLnByZXZZID0gZXZ0LmNsaWVudFk7XG4gICAgdGhpcy51cGRhdGVTdHlsZSgpO1xuICB9XG5cbiAgLy8gQEhvc3RMaXN0ZW5lcignd2luZG93OmtleXVwLkFycm93TGVmdCcpXG4gIC8vIHByZUZpbGUoKSB7XG4gIC8vICAgaWYgKHRoaXMuaW5kZXggPiAwKSB7XG4gIC8vICAgICB0aGlzLmluZGV4IC09IDE7XG4gIC8vICAgICB0aGlzLnJlc2V0KCk7XG4gIC8vICAgfVxuICAvLyB9XG5cbiAgLy8gQEhvc3RMaXN0ZW5lcignd2luZG93OmtleXVwLkFycm93UmlnaHQnKVxuICAvLyBuZXh0RmlsZSgpIHtcbiAgLy8gICBpZiAodGhpcy5pbmRleCA8IHRoaXMuc3JjLmxlbmd0aCAtIDEpIHtcbiAgLy8gICAgIHRoaXMuaW5kZXggKz0gMTtcbiAgLy8gICAgIHRoaXMucmVzZXQoKTtcbiAgLy8gICB9XG4gIC8vIH1cblxuICBpbWFnZUNoYW5nZSh1cmw6IHN0cmluZykge1xuICAgIHRoaXMuaW1hZ2VVcmwgPSB1cmw7XG4gICAgdGhpcy5yZXNldCgpO1xuICB9XG5cbiAgcmVzZXQoKSB7XG4gICAgdGhpcy5zY2FsZSA9IDE7XG4gICAgdGhpcy5yb3RhdGlvbiA9IDA7XG4gICAgdGhpcy50cmFuc2xhdGVYID0gMDtcbiAgICB0aGlzLnRyYW5zbGF0ZVkgPSAwO1xuICAgIHRoaXMudXBkYXRlU3R5bGUoKTtcbiAgfVxuXG4gIHVwZGF0ZVN0eWxlKCkge1xuICAgIHRoaXMuc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSgke3RoaXMudHJhbnNsYXRlWH1weCwgJHt0aGlzLnRyYW5zbGF0ZVl9cHgpIHJvdGF0ZSgke3RoaXMucm90YXRpb259ZGVnKSBzY2FsZSgke3RoaXMuc2NhbGV9KWA7XG4gICAgdGhpcy5zdHlsZS5tc1RyYW5zZm9ybSA9IHRoaXMuc3R5bGUudHJhbnNmb3JtO1xuICAgIHRoaXMuc3R5bGUud2Via2l0VHJhbnNmb3JtID0gdGhpcy5zdHlsZS50cmFuc2Zvcm07XG4gICAgdGhpcy5zdHlsZS5vVHJhbnNmb3JtID0gdGhpcy5zdHlsZS50cmFuc2Zvcm07XG4gIH1cblxufVxuIl19