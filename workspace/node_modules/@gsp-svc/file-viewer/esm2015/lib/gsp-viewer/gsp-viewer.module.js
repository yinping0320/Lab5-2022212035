/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { GspViewerComponent } from './gsp-viewer.component';
import { ImageViewerModule } from '../image-viewer/image-viewer.module';
import { DocViewerModule } from '../doc-viewer/doc-viewer.module';
import { PdfViewerModule } from '../pdf-viewer/pdf-viewer.module';
import { OfdViewerModule } from '../ofd-viewer/ofd-viewer.module';
import { NotifyModule } from '@farris/ui-notify';
import { FileListService } from '../service/file-list.service';
import { RotationDirective } from '../service/rotation.directive';
import { SearchService } from '../service/search.service';
import { SelectionService } from '../service/selection.service';
import { ZoomService } from '../service/zoom.service';
import { ConfigService } from '../service/config.service';
import { DocViewerService } from '../service/doc-viewer.service';
import { NavigateService } from '../service/navigate.service';
import { PagePreloadService } from '../service/page-preload.service';
import { WindowService } from '../service/window.service';
export class GspViewerModule {
}
GspViewerModule.decorators = [
    { type: NgModule, args: [{
                declarations: [GspViewerComponent],
                imports: [
                    CommonModule,
                    ImageViewerModule,
                    DocViewerModule,
                    OfdViewerModule,
                    PdfViewerModule,
                    NotifyModule.forRoot()
                ],
                exports: [GspViewerComponent],
                entryComponents: [GspViewerComponent],
                providers: [RotationDirective, SearchService, SelectionService, ZoomService, ConfigService, DocViewerService,
                    FileListService, NavigateService, PagePreloadService, WindowService]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3NwLXZpZXdlci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXN2Yy9maWxlLXZpZXdlci8iLCJzb3VyY2VzIjpbImxpYi9nc3Atdmlld2VyL2dzcC12aWV3ZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUN4RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDbEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNsRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzFELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNyRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFpQjFELE1BQU0sT0FBTyxlQUFlOzs7WUFmM0IsUUFBUSxTQUFDO2dCQUNSLFlBQVksRUFBRSxDQUFDLGtCQUFrQixDQUFDO2dCQUNsQyxPQUFPLEVBQUU7b0JBQ1AsWUFBWTtvQkFDWixpQkFBaUI7b0JBQ2pCLGVBQWU7b0JBQ2YsZUFBZTtvQkFDZixlQUFlO29CQUNmLFlBQVksQ0FBQyxPQUFPLEVBQUU7aUJBQ3ZCO2dCQUNELE9BQU8sRUFBRSxDQUFDLGtCQUFrQixDQUFDO2dCQUM3QixlQUFlLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztnQkFDckMsU0FBUyxFQUFFLENBQUMsaUJBQWlCLEVBQUUsYUFBYSxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUUsZ0JBQWdCO29CQUMxRyxlQUFlLEVBQUUsZUFBZSxFQUFFLGtCQUFrQixFQUFFLGFBQWEsQ0FBQzthQUN2RSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgR3NwVmlld2VyQ29tcG9uZW50IH0gZnJvbSAnLi9nc3Atdmlld2VyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJbWFnZVZpZXdlck1vZHVsZSB9IGZyb20gJy4uL2ltYWdlLXZpZXdlci9pbWFnZS12aWV3ZXIubW9kdWxlJztcbmltcG9ydCB7IERvY1ZpZXdlck1vZHVsZSB9IGZyb20gJy4uL2RvYy12aWV3ZXIvZG9jLXZpZXdlci5tb2R1bGUnO1xuaW1wb3J0IHsgUGRmVmlld2VyTW9kdWxlIH0gZnJvbSAnLi4vcGRmLXZpZXdlci9wZGYtdmlld2VyLm1vZHVsZSc7XG5pbXBvcnQgeyBPZmRWaWV3ZXJNb2R1bGUgfSBmcm9tICcuLi9vZmQtdmlld2VyL29mZC12aWV3ZXIubW9kdWxlJztcbmltcG9ydCB7IE5vdGlmeU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbm90aWZ5JztcbmltcG9ydCB7IEZpbGVMaXN0U2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2UvZmlsZS1saXN0LnNlcnZpY2UnO1xuaW1wb3J0IHsgUm90YXRpb25EaXJlY3RpdmUgfSBmcm9tICcuLi9zZXJ2aWNlL3JvdGF0aW9uLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTZWFyY2hTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZS9zZWFyY2guc2VydmljZSc7XG5pbXBvcnQgeyBTZWxlY3Rpb25TZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZS9zZWxlY3Rpb24uc2VydmljZSc7XG5pbXBvcnQgeyBab29tU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2Uvem9vbS5zZXJ2aWNlJztcbmltcG9ydCB7IENvbmZpZ1NlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlL2NvbmZpZy5zZXJ2aWNlJztcbmltcG9ydCB7IERvY1ZpZXdlclNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlL2RvYy12aWV3ZXIuc2VydmljZSc7XG5pbXBvcnQgeyBOYXZpZ2F0ZVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlL25hdmlnYXRlLnNlcnZpY2UnO1xuaW1wb3J0IHsgUGFnZVByZWxvYWRTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZS9wYWdlLXByZWxvYWQuc2VydmljZSc7XG5pbXBvcnQgeyBXaW5kb3dTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZS93aW5kb3cuc2VydmljZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0dzcFZpZXdlckNvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgSW1hZ2VWaWV3ZXJNb2R1bGUsXG4gICAgRG9jVmlld2VyTW9kdWxlLFxuICAgIE9mZFZpZXdlck1vZHVsZSxcbiAgICBQZGZWaWV3ZXJNb2R1bGUsXG4gICAgTm90aWZ5TW9kdWxlLmZvclJvb3QoKVxuICBdLFxuICBleHBvcnRzOiBbR3NwVmlld2VyQ29tcG9uZW50XSxcbiAgZW50cnlDb21wb25lbnRzOiBbR3NwVmlld2VyQ29tcG9uZW50XSxcbiAgcHJvdmlkZXJzOiBbUm90YXRpb25EaXJlY3RpdmUsIFNlYXJjaFNlcnZpY2UsIFNlbGVjdGlvblNlcnZpY2UsIFpvb21TZXJ2aWNlLCBDb25maWdTZXJ2aWNlLCBEb2NWaWV3ZXJTZXJ2aWNlLFxuICAgIEZpbGVMaXN0U2VydmljZSwgTmF2aWdhdGVTZXJ2aWNlLCBQYWdlUHJlbG9hZFNlcnZpY2UsIFdpbmRvd1NlcnZpY2VdXG59KVxuZXhwb3J0IGNsYXNzIEdzcFZpZXdlck1vZHVsZSB7IH1cbiJdfQ==