/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Injector, ChangeDetectorRef, ViewChild } from '@angular/core';
import { DocViewRequest } from '../entity/docviewrequest';
import { DocViewerService } from '../../service/doc-viewer.service';
import { ZoomService } from '../../service/zoom.service';
import { NavigateService } from '../../service/navigate.service';
import { WindowService } from '../../service/window.service';
import { LoadingService } from '@farris/ui-loading';
import { ExcelDocumentComponent } from '../../excel-document/excel-document.component';
import { PagePreloadService } from '../../service/page-preload.service';
export class DocViewerComponent {
    /**
     * @param {?} _viewerService
     * @param {?} _zoomService
     * @param {?} _navigateService
     * @param {?} _windowService
     * @param {?} loadService
     * @param {?} pagePreloadService
     * @param {?=} injector
     */
    constructor(_viewerService, _zoomService, _navigateService, _windowService, loadService, pagePreloadService, injector) {
        // configService.updatedConfig.subscribe((viewerConfig) => {
        //   // this.viewerConfig = viewerConfig;
        // });
        this._viewerService = _viewerService;
        this._zoomService = _zoomService;
        this._navigateService = _navigateService;
        this._windowService = _windowService;
        this.loadService = loadService;
        this.pagePreloadService = pagePreloadService;
        this.injector = injector;
        this.title = 'GspCloudViewer';
        this.countPages = 0;
        this.formatDisabled = !this.file;
        this.showThumbnails = false;
        this.showSearch = false;
        this._zoom = 100;
        this.fileWasDropped = false;
        this.style = { transform: '', msTransform: '', oTransform: '', webkitTransform: '' };
        this.scale = 1;
        this.rotation = 0;
        this.translateX = 0;
        this.translateY = 0;
    }
    /**
     * @param {?} start
     * @param {?} end
     * @return {?}
     */
    preloadPages(start, end) {
        for (let i = start; i <= end; i++) {
            this._viewerService.loadPage(this.credentials, i).subscribe((/**
             * @param {?} page
             * @return {?}
             */
            (page) => {
                this.file.pages[i - 1] = page;
                if (this.file.thumbnails && !this.file.thumbnails[i - 1].data) {
                    if (page.data) {
                        page.data = page.data.replace(/>\s+</g, '><')
                            .replace(/\uFEFF/g, "");
                    }
                    this.file.thumbnails[i - 1].data = page.data;
                }
            }));
        }
    }
    /**
     * @param {?} file
     * @return {?}
     */
    viewType(file) {
        return file.filePath.endsWith('.pdf');
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        /** @type {?} */
        let request = new DocViewRequest();
        request.filePath = this.filePath;
        /** @type {?} */
        const loading = this.loadService.show({
            message: '文档加载中'
        });
        this._viewerService.loadFileInfo(request).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        res => {
            loading.close();
            if (res.error != null) {
                // this.msgService.warning('获取数据失败,请稍后重试。');
                //this.configList = [new StorageConfig];
            }
            else {
                this.file = res;
                this.credentials = { guid: this.file.filePath, password: "" };
                this.formatDisabled = !this.file;
                if (this.file) {
                    if (this.file.pages && this.file.pages[0]) {
                        this._pageHeight = this.file.pages[0].height;
                        this._pageWidth = this.file.pages[0].width;
                        this.options = this.zoomOptions();
                        this.refreshZoom();
                    }
                    //const preloadPageCount = this.viewerConfig.preloadPageCount;
                    /** @type {?} */
                    const countPages = this.file.pages ? this.file.pages.length : 0;
                    this._navigateService.countPages = countPages;
                    this._navigateService.currentPage = 1;
                    this.countPages = countPages;
                    this.pagePreloadService.checkPreload.subscribe((/**
                     * @param {?} page
                     * @return {?}
                     */
                    (page) => {
                        //if (this.viewerConfig.preloadPageCount !== 0) {
                        for (let i = page; i < page + 2; i++) {
                            if (i > 0 && i <= this.countPages && !this.file.pages[i - 1].data) {
                                this.preloadPages(i, i);
                            }
                        }
                        // }
                    }));
                }
                this.getFile();
                // if (!this.notExcel()) {
                //   this.file.pages.forEach(ele => {
                //     if (ele.data.includes("<x:Name>"))
                //       ele.sheetName = ele.data.split("<x:Name>")[1].split("</x:Name>")[0];
                //   })
                // }
            }
            if (this.injector) {
                /** @type {?} */
                let changeDetector = this.injector.get(ChangeDetectorRef);
                changeDetector.detectChanges();
            }
        }));
    }
    /**
     * @param {?} deg
     * @return {?}
     */
    rotate(deg) {
        if (this.formatDisabled)
            return;
        /** @type {?} */
        const pageNumber = this._navigateService.currentPage;
        /** @type {?} */
        const loading = this.loadService.show({
            message: '文档加载中'
        });
        if (this.saveRotateStateConfig && this.file) {
            this._viewerService.rotate(this.credentials, deg, pageNumber).subscribe((/**
             * @param {?} res
             * @return {?}
             */
            res => {
                loading.close();
                if (res.error != null) {
                    // this.msgService.warning('获取数据失败,请稍后重试。');
                    //this.configList = [new StorageConfig];
                }
                else {
                    /** @type {?} */
                    let data = res;
                    for (const page of data) {
                        /** @type {?} */
                        const pageModel = this.file.pages[page.pageNumber - 1];
                        if (this.file && this.file.pages && pageModel) {
                            this.changeAngle(pageModel, page.angle);
                        }
                    }
                }
                // this._viewerService.rotate(this.credentials, deg, pageNumber).subscribe((data: RotatedPage[]) => {
                //   for (const page of data) {
                //     const pageModel = this.file.pages[page.pageNumber - 1];
                //     if (this.file && this.file.pages && pageModel) {
                //       this.changeAngle(pageModel, page.angle);
                //     }
                //   }
            }));
        }
        else {
            /** @type {?} */
            const pageModel = this.file.pages[pageNumber - 1];
            if (this.file && this.file.pages && pageModel) {
                /** @type {?} */
                const angle = pageModel.angle + deg;
                if (angle > 360) {
                    this.changeAngle(pageModel, 90);
                }
                else if (angle < -360) {
                    this.changeAngle(pageModel, -90);
                }
                else {
                    this.changeAngle(pageModel, angle);
                }
            }
        }
    }
    /**
     * @private
     * @param {?} page
     * @param {?} angle
     * @return {?}
     */
    changeAngle(page, angle) {
        page.angle = angle;
    }
    /**
     * @param {?} filePath
     * @return {?}
     */
    docChange(filePath) {
        /** @type {?} */
        let request = new DocViewRequest();
        request.filePath = filePath;
        /** @type {?} */
        const loading = this.loadService.show({
            message: '文档加载中'
        });
        this._viewerService.loadFileInfo(request).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        res => {
            loading.close();
            if (res.error != null) {
                // this.msgService.warning('获取数据失败,请稍后重试。');
                //this.configList = [new StorageConfig];
            }
            else {
                this.file = res;
                this.credentials = { guid: this.file.filePath, password: "" };
                this.formatDisabled = !this.file;
                if (this.file) {
                    if (this.file.pages && this.file.pages[0]) {
                        this._pageHeight = this.file.pages[0].height;
                        this._pageWidth = this.file.pages[0].width;
                        this.options = this.zoomOptions();
                        this.refreshZoom();
                    }
                    //const preloadPageCount = this.viewerConfig.preloadPageCount;
                    /** @type {?} */
                    const countPages = this.file.pages ? this.file.pages.length : 0;
                    this._navigateService.countPages = countPages;
                    this._navigateService.currentPage = 1;
                    this.countPages = countPages;
                }
                this.getFile();
                if (!this.notExcel())
                    this.excelView.currentPageNo = 1;
                // if (!this.notExcel()) {
                //   this.file.pages.forEach(ele => {
                //     if (ele.data.includes("<x:Name>"))
                //       ele.sheetName = ele.data.split("<x:Name>")[1].split("</x:Name>")[0];
                //   })
                // }
            }
        }));
    }
    /**
     * @return {?}
     */
    getFile() {
        return this.file;
    }
    /**
     * @return {?}
     */
    notExcel() {
        return !(this.filePath.endsWith('.xls') || this.filePath.endsWith('.xlsx'));
    }
    /**
     * @return {?}
     */
    get rewriteConfig() {
        return this.viewerConfig ? this.viewerConfig.rewrite : true;
    }
    /**
     * @return {?}
     */
    get zoomConfig() {
        return this.viewerConfig ? this.viewerConfig.zoom : true;
    }
    /**
     * @return {?}
     */
    get pageSelectorConfig() {
        return this.viewerConfig ? this.viewerConfig.pageSelector : true;
    }
    /**
     * @return {?}
     */
    get searchConfig() {
        return this.viewerConfig ? this.viewerConfig.search : true;
    }
    /**
     * @return {?}
     */
    get thumbnailsConfig() {
        return this.viewerConfig ? this.viewerConfig.thumbnails : true;
    }
    /**
     * @return {?}
     */
    get rotateConfig() {
        return this.viewerConfig ? this.viewerConfig.rotate : true;
    }
    /**
     * @return {?}
     */
    get downloadConfig() {
        return this.viewerConfig ? this.viewerConfig.download : true;
    }
    /**
     * @return {?}
     */
    get uploadConfig() {
        return this.viewerConfig ? this.viewerConfig.upload : true;
    }
    /**
     * @return {?}
     */
    get printConfig() {
        return this.viewerConfig ? this.viewerConfig.print : true;
    }
    /**
     * @return {?}
     */
    get browseConfig() {
        return this.viewerConfig ? this.viewerConfig.browse : true;
    }
    /**
     * @return {?}
     */
    get htmlModeConfig() {
        return this.viewerConfig ? this.viewerConfig.htmlMode : true;
    }
    /**
     * @return {?}
     */
    get saveRotateStateConfig() {
        return this.viewerConfig ? this.viewerConfig.saveRotateState : true;
    }
    /**
     * @return {?}
     */
    get enableRightClickConfig() {
        return this.viewerConfig ? this.viewerConfig.enableRightClick : true;
    }
    /**
     * @return {?}
     */
    rotateClockwise() {
        this.rotate(90);
    }
    /**
     * @return {?}
     */
    rotateCounterClockwise() {
        this.rotate(-90);
    }
    /**
     * @return {?}
     */
    get currentPage() {
        return this._navigateService.currentPage;
    }
    // selectDir($event: string) {
    //   this._viewerService.loadFiles($event).subscribe((files: FileModel[]) => this.files = files || []);
    // }
    // preloadPages(start: number, end: number) {
    //   for (let i = start; i <= end; i++) {
    //     this._viewerService.loadPage(this.credentials, i).subscribe((page: PageModel) => {
    //       this.file.pages[i - 1] = page;
    //     });
    //   }
    // }
    // upload($event: string) {
    //   this._viewerService.upload(null, $event, this.rewriteConfig).subscribe(() => {
    //     this.selectDir('');
    //   });
    // }
    /**
     * @return {?}
     */
    nextPage() {
        if (this.formatDisabled)
            return;
        this._navigateService.nextPage();
    }
    /**
     * @return {?}
     */
    prevPage() {
        if (this.formatDisabled)
            return;
        this._navigateService.prevPage();
    }
    /**
     * @return {?}
     */
    toLastPage() {
        if (this.formatDisabled)
            return;
        this._navigateService.toLastPage();
    }
    /**
     * @return {?}
     */
    toFirstPage() {
        if (this.formatDisabled)
            return;
        this._navigateService.toFirstPage();
    }
    /**
     * @param {?} page
     * @return {?}
     */
    navigateToPage(page) {
        if (this.formatDisabled)
            return;
        this._navigateService.navigateTo(page);
    }
    /**
     * @return {?}
     */
    zoomIn() {
        if (this.formatDisabled)
            return;
        if (this._zoom < 490) {
            this.zoom = this._zoom + 10;
        }
    }
    /**
     * @return {?}
     */
    zoomOut() {
        if (this.formatDisabled)
            return;
        if (this._zoom > 30) {
            this.zoom = this._zoom - 10;
        }
    }
    /**
     * @return {?}
     */
    zoomReset() {
        this.zoom = 100;
    }
    /**
     * @return {?}
     */
    zoomOptions() {
        /** @type {?} */
        const width = this.getFitToWidth();
        /** @type {?} */
        const height = this.getFitToHeight();
        return this._zoomService.zoomOptions(width, height);
    }
    /**
     * @private
     * @return {?}
     */
    refreshZoom() {
        this.zoom = this._windowService.isDesktop() ? 100 : this.getFitToWidth();
        //this.zoom = 100;  
    }
    /**
     * @private
     * @return {?}
     */
    getFitToWidth() {
        // const pageWidth = this.ptToPx(this._pageWidth);
        // const pageHeight = this.ptToPx(this._pageHeight);
        /** @type {?} */
        const pageWidth = !this.notExcel() ? this._pageWidth : this.ptToPx(this._pageWidth);
        /** @type {?} */
        const pageHeight = !this.notExcel() ? this._pageHeight : this.ptToPx(this._pageHeight);
        /** @type {?} */
        const offsetWidth = pageWidth ? pageWidth : window.innerWidth;
        return (pageHeight > pageWidth && Math.round(offsetWidth / window.innerWidth) < 2) ? 200 - Math.round(offsetWidth * 100 / window.innerWidth) : Math.round(window.innerWidth * 100 / offsetWidth);
    }
    /**
     * @private
     * @return {?}
     */
    getFitToHeight() {
        /** @type {?} */
        const pageWidth = !this.notExcel() ? this._pageWidth : this.ptToPx(this._pageWidth);
        /** @type {?} */
        const pageHeight = !this.notExcel() ? this._pageHeight : this.ptToPx(this._pageHeight);
        /** @type {?} */
        const windowHeight = (pageHeight > pageWidth) ? window.innerHeight - 100 : window.innerHeight + 100;
        /** @type {?} */
        const offsetHeight = pageHeight ? pageHeight : windowHeight;
        return (pageHeight > pageWidth) ? Math.round(windowHeight * 100 / offsetHeight) : Math.round(offsetHeight * 100 / windowHeight);
    }
    /**
     * @private
     * @param {?} pt
     * @return {?}
     */
    ptToPx(pt) {
        //pt * 96 / 72 = px.
        return pt * 96 / 72;
    }
    /**
     * @param {?} zoom
     * @return {?}
     */
    set zoom(zoom) {
        this._zoom = zoom;
        this._zoomService.changeZoom(this._zoom);
    }
    /**
     * @return {?}
     */
    get zoom() {
        return this._zoom;
    }
}
DocViewerComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-doc-viewer',
                template: "<!-- <gd-loading-mask [loadingMask]=\"isLoading\"></gd-loading-mask> -->\n<div class=\"f-page\">\n    <div class=\"wrapper f-utils-fill-flex-column\" style=\"overflow-x:auto;overflow-y: hidden;\">\n        <div class=\"top-panel\" *ngIf=\"notExcel()\">\n            <app-gsp-top-toolbar class=\"toolbar-panel\">\n                <!-- <app-gsp-button [disabled]=\"formatDisabled\" [icon]=\"'angle-double-left'\" [tooltip]=\"'First Page'\" (click)=\"toFirstPage()\" *ngIf=\"pageSelectorConfig\"></app-gsp-button> -->\n                <div class=\"btn btn-secondary page-button\" (click)=\"toFirstPage()\">\n                    <img [src]=\"'/platform/runtime/dfs/images/firstPage.png'\" title=\"'\u7B2C\u4E00\u9875'\">\n                </div>\n                <!-- <app-gsp-button [disabled]=\"formatDisabled\" [icon]=\"'angle-left'\" [tooltip]=\"'Previous Page'\" (click)=\"prevPage()\" *ngIf=\"pageSelectorConfig\"></app-gsp-button> -->\n                <div class=\"btn btn-secondary page-button\" (click)=\"prevPage()\">\n                    <img [src]=\"'/platform/runtime/dfs/images/prePage.png'\" title=\"'\u524D\u4E00\u9875'\">\n                </div>\n                <div class=\"current-page-number\" [ngClass]=\"{'active': !formatDisabled}\" style=\"position: relative;  bottom: 11px; right:-47px\">{{currentPage}}/{{countPages}}\n                </div>\n                <div class=\"btn btn-secondary page-button\" (click)=\"nextPage()\">\n                    <img [src]=\"'/platform/runtime/dfs/images/nextPage.png'\" title=\"'\u540E\u4E00\u9875'\">\n                </div>\n                <div class=\"btn btn-secondary page-button\" (click)=\"toLastPage()\">\n                    <img [src]=\"'/platform/runtime/dfs/images/lastPage.png'\" title=\"'\u6700\u540E\u4E00\u9875'\">\n                </div>\n                <!-- <app-gsp-button [disabled]=\"formatDisabled\" [icon]=\"'angle-right'\" [tooltip]=\"'Next Page'\" (click)=\"nextPage()\" *ngIf=\"pageSelectorConfig\"></app-gsp-button>\n                <app-gsp-button [disabled]=\"formatDisabled\" [icon]=\"'angle-double-right'\" [tooltip]=\"'Last Page'\" (click)=\"nextPage()\" *ngIf=\"pageSelectorConfig\"></app-gsp-button> -->\n            </app-gsp-top-toolbar>\n        </div>\n        <div class=\"doc-panel  f-utils-fill-flex-column\" *ngIf=\"file\">\n\n            <app-gsp-document class=\"gsp-document\" *ngIf=\"file &&  notExcel()\" [file]=\"getFile()\" [mode]=\"htmlModeConfig\" [preloadPageCount]=\"viewerConfig?.preloadPageCount\" [ngStyle]=\"style\"></app-gsp-document>\n            <app-excel-document class=\"gsp-document\" *ngIf=\"file &&  !notExcel() \" style=\"overflow: hidden;\" [file]=\"getFile()\" [mode]=\"htmlModeConfig\" gdScrollable [preloadPageCount]=\"viewerConfig?.preloadPageCount\">\n            </app-excel-document>\n\n        </div>\n    </div>\n</div>",
                styles: [":host *{font-family:'Open Sans',Arial,Helvetica,sans-serif}.current-page-number{margin-left:7px;font-size:14px;color:#959da5;width:37px;height:37px;line-height:37px;text-align:center}.current-page-number.active{color:#fff}.page-button{background-color:#212529;width:28px;height:28px;border:none;position:relative;bottom:14px;right:-50px}.page-button img{position:relative;left:-13px}.wrapper{align-items:stretch;height:100%;width:100%;position:absolute;top:0;bottom:0;left:0;right:0}.doc-panel{display:flex}.thumbnails-button{position:absolute;right:3px}.gsp-document{width:100%;height:100%}.top-panel{display:flex;align-items:center;width:100%;height:32px}.toolbar-panel{background-color:#3e4e5a;width:100%;height:32px}::ng-deep .tools .button,::ng-deep .tools .nav-caret,::ng-deep .tools .selected-value{color:#fff!important}::ng-deep .tools .button.inactive,::ng-deep .tools .nav-caret.inactive,::ng-deep .tools .selected-value.inactive{color:#959da5!important}::ng-deep .tools .button{flex-flow:column}::ng-deep .tools .dropdown-menu .option{color:#6e6e6e!important}::ng-deep .tools .dropdown-menu .option:hover{background-color:#4b566c!important}::ng-deep .tools .icon-button{margin:0 0 0 7px!important}::ng-deep .tools .select{width:65px;height:37px;margin-left:7px;line-height:37px;text-align:center}"]
            }] }
];
/** @nocollapse */
DocViewerComponent.ctorParameters = () => [
    { type: DocViewerService },
    { type: ZoomService },
    { type: NavigateService },
    { type: WindowService },
    { type: LoadingService },
    { type: PagePreloadService },
    { type: Injector }
];
DocViewerComponent.propDecorators = {
    excelView: [{ type: ViewChild, args: [ExcelDocumentComponent,] }],
    filePath: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    DocViewerComponent.prototype.excelView;
    /** @type {?} */
    DocViewerComponent.prototype.filePath;
    /** @type {?} */
    DocViewerComponent.prototype.title;
    /** @type {?} */
    DocViewerComponent.prototype.file;
    /** @type {?} */
    DocViewerComponent.prototype.viewerConfig;
    /** @type {?} */
    DocViewerComponent.prototype.countPages;
    /** @type {?} */
    DocViewerComponent.prototype.formatDisabled;
    /** @type {?} */
    DocViewerComponent.prototype.showThumbnails;
    /** @type {?} */
    DocViewerComponent.prototype.showSearch;
    /** @type {?} */
    DocViewerComponent.prototype.isDesktop;
    /** @type {?} */
    DocViewerComponent.prototype.isLoading;
    /** @type {?} */
    DocViewerComponent.prototype.credentials;
    /** @type {?} */
    DocViewerComponent.prototype._zoom;
    /** @type {?} */
    DocViewerComponent.prototype._pageWidth;
    /** @type {?} */
    DocViewerComponent.prototype._pageHeight;
    /** @type {?} */
    DocViewerComponent.prototype.options;
    /** @type {?} */
    DocViewerComponent.prototype.fileWasDropped;
    /** @type {?} */
    DocViewerComponent.prototype.style;
    /** @type {?} */
    DocViewerComponent.prototype.scale;
    /** @type {?} */
    DocViewerComponent.prototype.rotation;
    /** @type {?} */
    DocViewerComponent.prototype.translateX;
    /** @type {?} */
    DocViewerComponent.prototype.translateY;
    /**
     * @type {?}
     * @private
     */
    DocViewerComponent.prototype._viewerService;
    /**
     * @type {?}
     * @private
     */
    DocViewerComponent.prototype._zoomService;
    /**
     * @type {?}
     * @private
     */
    DocViewerComponent.prototype._navigateService;
    /**
     * @type {?}
     * @private
     */
    DocViewerComponent.prototype._windowService;
    /**
     * @type {?}
     * @private
     */
    DocViewerComponent.prototype.loadService;
    /**
     * @type {?}
     * @private
     */
    DocViewerComponent.prototype.pagePreloadService;
    /**
     * @type {?}
     * @private
     */
    DocViewerComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,