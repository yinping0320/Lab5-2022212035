{"version":3,"file":"gsp-svc-filtercondition.js.map","sources":["ng://@gsp-svc/filtercondition/lib/filter-expression-entity.ts","ng://@gsp-svc/filtercondition/lib/typeinfo.ts","ng://@gsp-svc/filtercondition/lib/property-entity.ts","ng://@gsp-svc/filtercondition/lib/injected-entity.ts","ng://@gsp-svc/filtercondition/lib/i18n/lang.resource.ts","ng://@gsp-svc/filtercondition/lib/filter-condition-locale.pipe.ts","ng://@gsp-svc/filtercondition/lib/filter-condition/filter-condition.component.ts","ng://@gsp-svc/filtercondition/lib/navigation-property-entity.ts","ng://@gsp-svc/filtercondition/lib/schema.ts","ng://@gsp-svc/filtercondition/lib/NewSchema.ts","ng://@gsp-svc/filtercondition/lib/adapter.ts","ng://@gsp-svc/filtercondition/lib/filter-service.ts","ng://@gsp-svc/filtercondition/lib/property-adapter.ts","ng://@gsp-svc/filtercondition/lib/filter-expression/filter-expression.component.ts","ng://@gsp-svc/filtercondition/lib/filter-condition.module.ts"],"sourcesContent":["import { ExpressTypeEnum, CompareTypeEnum, RelationTypeEnum} from \"./typeinfo\";\r\nimport { PropertyDataType } from \".\";\r\n\r\n/**\r\n * è¡¨è¾¾å¼å®ä½åºç¡ç±»\r\n */\r\nexport class FilterExpressionBase{}\r\n/**\r\n * è¿æ»¤è¡¨è¾¾å¼å¤æé¡¹\r\n * @property relationOperator å³ç³»æä½ç¬¦\r\n * @property expressItems è¡¨è¾¾å¼å­é¡¹éå\r\n */\r\nexport class FilterExpression extends FilterExpressionBase\r\n{\r\n    relationOperator:RelationTypeEnum;\r\n    expressItems:FilterExpressionBase[]=[];\r\n}\r\n/**\r\n * è¡¨è¾¾å¼å±æ§é¡¹\r\n * @property propertyName å±æ§å\r\n * @property propertyDataType å±æ§æ°æ®ç±»å\r\n * @property operator æä½ç¬¦\r\n * @property expressType è¡¨è¾¾å¼ç±»å\r\n * @property value å¼\r\n * @property parentItem ç¶é¡¹\r\n */\r\nexport class ExpressionItem extends FilterExpressionBase\r\n{\r\n    propertyName:string;\r\n    propertyDataType:PropertyDataType;\r\n    operator:CompareTypeEnum;\r\n    expressType:ExpressTypeEnum;\r\n    value:any;\r\n    parentItem:string;\r\n}\r\n","/**\r\n * è¡¨è¾¾å¼ç±»åæä¸¾\r\n */\r\nexport enum ExpressTypeEnum {\r\n  Value,\r\n  Expression\r\n}\r\n/**\r\n * å³ç³»ç±»åæä¸¾\r\n */\r\nexport enum RelationTypeEnum {\r\n  And,\r\n  Or,\r\n  AddProperty,\r\n  AddRelation\r\n}\r\n/**\r\n * æ¯è¾ç±»åæä¸¾\r\n */\r\nexport enum CompareTypeEnum {\r\n  GreaterThan,\r\n  GreaterThanOrEqual,\r\n  LessThan,\r\n  LessThanOrEqual,\r\n  Equal,\r\n  NotEqual,\r\n  Contains,\r\n  NotContains,\r\n  StartsWith,\r\n  NotStartsWith,\r\n  EndsWith,\r\n  NotEndsWith,\r\n  IsNull,\r\n  IsNotNull,\r\n  In,\r\n  NotIn\r\n}\r\n\r\n/**\r\n * å³ç³»ç±»å\r\n * åå«å¹¶ä¸ãæèãæ·»å å±æ§ãæ·»å å³ç³»\r\n */\r\nexport const RelationTypes=\r\n  [\r\n    { id: \"å¹¶ä¸\"},\r\n    { id: \"æè\"},\r\n  ];\r\n\r\n/**\r\n * æ¯è¾ç±»å\r\n * åå«å¸¸è§çå³ç³»æ¯è¾ç¬¦\r\n */\r\n// export const CompareTypes: Array<{ text: string, value: CompareTypeEnum }> =\r\n//   [\r\n//     { text: \"å¤§äº\", value: CompareTypeEnum.GreaterThan },\r\n//     { text: \"å¤§äºç­äº\", value: CompareTypeEnum.GreaterThanOrEqual },\r\n//     { text: \"å°äº\", value: CompareTypeEnum.LessThan },\r\n//     { text: \"å°äºç­äº\", value: CompareTypeEnum.LessThanOrEqual },\r\n//     { text: \"ç­äº\", value: CompareTypeEnum.Equal },\r\n//     { text: \"ä¸ç­äº\", value: CompareTypeEnum.NotEqual },\r\n//     { text: \"åå«\", value: CompareTypeEnum.Contains },\r\n//     { text: \"å¼å¤´æ¯\", value: CompareTypeEnum.StartsWith },\r\n//     { text: \"ç»å°¾æ¯\", value: CompareTypeEnum.EndsWith },\r\n//     { text: \"ä¸åå«\", value: CompareTypeEnum.NotContains },\r\n//     { text: \"ä¸åå«å¼å¤´æ¯\", value: CompareTypeEnum.NotStartsWith },\r\n//     { text: \"ä¸åå«ç»å°¾æ¯\", value: CompareTypeEnum.NotEndsWith },\r\n//     { text: \"ä¸º(ç©º)\", value: CompareTypeEnum.IsNull },\r\n//     { text: \"ä¸ä¸º(ç©º)\", value: CompareTypeEnum.IsNotNull },\r\n//     { text: \"å¨\", value: CompareTypeEnum.In },\r\n//     { text: \"ä¸å¨\", value: CompareTypeEnum.NotIn }\r\n//   ];\r\n  export const CompareTypes =[\r\n    {id: 'å¤§äº'},\r\n    {id: 'å¤§äºç­äº'},\r\n    {id: 'å°äº'},\r\n    {id: 'å°äºç­äº'},\r\n    {id: 'ç­äº'},\r\n    {id: 'ä¸ç­äº'},\r\n    {id: 'åå«'},\r\n    {id: 'å¼å¤´æ¯'},\r\n    {id: 'ç»å°¾æ¯'},\r\n    {id: 'ä¸åå«'},\r\n    {id: 'ä¸åå«å¼å¤´æ¯'},\r\n    {id: 'ä¸åå«ç»å°¾æ¯'},\r\n    {id: 'ä¸ºç©º'},\r\n    {id: 'ä¸ä¸º(ç©º)'},\r\n    {id: 'å¨'},\r\n    {id: 'ä¸å¨'}\r\n  ]\r\n  \r\n/**\r\n * è¡¨è¾¾å¼ç±»å\r\n * åå«å¼ãè¡¨è¾¾å¼ä¸¤ç§ç±»å\r\n */\r\nexport const ExpressTypes =\r\n  [\r\n    {id: 'å¼'},\r\n    {id: 'è¡¨è¾¾å¼'}\r\n  ];\r\n","/**\r\n * å±æ§å®ä½\r\n */\r\nexport class PropertyEntity\r\n{\r\n    name:string;\r\n    displayName:string;\r\n    propertyDataType:PropertyDataType;\r\n}\r\n/**\r\n * å­æ®µæ°æ®ç±»å\r\n */\r\nexport enum PropertyDataType\r\n{\r\n    String,\r\n    Int16,\r\n    Int32,\r\n    Int64,\r\n    Decimal,\r\n    Double,\r\n    Byte,\r\n    Char,\r\n    Boolean,\r\n    DateTime,\r\n    Array\r\n}","/**\r\n * æ³¨å¥å®ä½ä¿¡æ¯\r\n * @property name æ³¨å¥å¯¹è±¡å¨schemaä¸­çåç§°\r\n * @property schemaName æ³¨å¥å¯¹è±¡æå¨schema\r\n * @property injectedType æ³¨å¥å¯¹è±¡ç±»å\r\n */\r\n export class FilterInjectedEntity {\r\n    name: string;\r\n    schemaName: string;\r\n    injectedType: FilterInjectedType;\r\n}\r\n\r\nexport enum FilterInjectedType\r\n{\r\n    EntitySet,\r\n    EntityType\r\n}\r\n","export const Filter_Condition_LANG_RESOURCES = {\r\n    \"zh-CHS\": {\r\n        \"Item\": \"éæ©é¡¹\",\r\n        \"Operator\": \"æä½ç¬¦\",\r\n        \"ExpressType\": \"å¼ç±»å\",\r\n        \"Value\": \"å¼\",\r\n        \"Operation\": \"æä½\",\r\n        \"WindowTitle\": \"è¿æ»¤æ¡ä»¶è¡¨è¾¾å¼\",\r\n        \"Confirm\": \"ç¡®å®\",\r\n        \"Reset\": \"éç½®\",\r\n        \"Cancle\":\"åæ¶\",\r\n        \"Add\":\"æ·»å \",\r\n        \"Delete\":\"å é¤\",\r\n        \"AddGroup\":\"æ·»å æ¡ä»¶åç»\",\r\n        \"AddItem\":\"æ·»å æ¡ä»¶\",\r\n        \"PlaceHolder\":\"è¯·è¾å¥å¼\",\r\n        \"Expression\":\"è¡¨è¾¾å¼\",\r\n        \"SelectItem\":\"è¯·éæ©é¡¹ç®\",\r\n        \"And\":\"å¹¶ä¸\",\r\n        \"Or\":\"æè\",\r\n        \"SelectProperty\":\"éæ©å±æ§\",\r\n        \"GreaterThan\":\"å¤§äº\",\r\n        \"GreaterThanOrEqual\":\"å¤§äºç­äº\",\r\n        \"LessThan\":\"å°äº\",\r\n        \"LessThanOrEqual\":\"å°äºç­äº\",\r\n        \"Equal\":\"ç­äº\",\r\n        \"NotEqual\":\"ä¸ç­äº\",\r\n        \"Contains\":\"åå«\",\r\n        \"NotContains\":\"ä¸åå«\",\r\n        \"StartsWith\":\"å¼å¤´æ¯\",\r\n        \"NotStartsWith\":\"ä¸åå«å¼å¤´æ¯\",\r\n        \"EndsWith\":\"ç»å°¾æ¯\",\r\n        \"NotEndsWith\":\"ä¸åå«ç»å°¾æ¯\",\r\n        \"IsNull\":\"ä¸ºç©º\",\r\n        \"IsNotNull\":\"ä¸ä¸º(ç©º)\",\r\n        \"In\":\"å¨\",\r\n        \"NotIn\":\"ä¸å¨\",\r\n        \"Success\":\"è¡¨è¾¾å¼å·²çæï¼\",\r\n        \"Warning_SelectRelation\":\"è¯·éæ©å³ç³»å¼ï¼\",\r\n        \"Warning_ContainsFilters\":\"è¯·ä¿è¯å³ç³»ä¸­åå«è¿æ»¤é¡¹ï¼\",\r\n        \"Warning_ConditionsComplete\":\"è¯·ä¿è¯è¿æ»¤æ¡ä»¶å®æ´ï¼\",\r\n        \"Warning_NumericMatch\":\"æ°å¼åå­æ®µä¸å¯å¡«å­ç¬¦ï¼\",\r\n    },\r\n    \"en\": {\r\n        \"Item\": \"Item\",\r\n        \"Operator\": \"Operator\",\r\n        \"ExpressType\": \"ExpressType\",\r\n        \"Value\": \"Value\",\r\n        \"Operation\": \"Operation\",\r\n        \"WindowTitle\": \"FilterCondition\",\r\n        \"Confirm\": \"Confirm\",\r\n        \"Reset\": \"Reset\",\r\n        \"Cancle\":\"Cancle\",\r\n        \"Add\":\"Add\",\r\n        \"Delete\":\"Delete\",\r\n        \"AddGroup\":\"AddGroup\",\r\n        \"AddItem\":\"AddItem\",\r\n        \"PlaceHolder\":\"Please Input Value\",\r\n        \"Expression\":\"Expression\",\r\n        \"SelectItem\":\"Please Select Item\",\r\n        \"And\":\"And\",\r\n        \"Or\":\"Or\",\r\n        \"SelectProperty\":\"SelectProperty\",\r\n        \"GreaterThan\":\"GreaterThan\",\r\n        \"GreaterThanOrEqual\":\"GreaterThanOrEqual\",\r\n        \"LessThan\":\"LessThan\",\r\n        \"LessThanOrEqual\":\"LessThanOrEqual\",\r\n        \"Equal\":\"Equal\",\r\n        \"NotEqual\":\"NotEqual\",\r\n        \"Contains\":\"Contains\",\r\n        \"NotContains\":\"NotContains\",\r\n        \"StartsWith\":\"StartsWith\",\r\n        \"NotStartsWith\":\"NotStartsWith\",\r\n        \"EndsWith\":\"EndsWith\",\r\n        \"NotEndsWith\":\"NotEndsWith\",\r\n        \"IsNull\":\"IsNull\",\r\n        \"IsNotNull\":\"IsNotNull\",\r\n        \"In\":\"In\",\r\n        \"NotIn\":\"NotIn\",\r\n        \"Success\":\"Expression Has Been Createdï¼\",\r\n        \"Warning_SelectRelation\":\"Please Select Relations!\",\r\n        \"Warning_ContainsFilters\":\"Please ensure that the relationship contains filters!\",\r\n        \"Warning_ConditionsComplete\":\"Please ensure that the filter conditions are complete!\",\r\n        \"Warning_NumericMatch\":\"Numeric fields cannot be filled with characters\",\r\n    },\r\n    \"en-US\": {\r\n        \"Item\": \"Item\",\r\n        \"Operator\": \"Operator\",\r\n        \"ExpressType\": \"ExpressType\",\r\n        \"Value\": \"Value\",\r\n        \"Operation\": \"Operation\",\r\n        \"WindowTitle\": \"FilterCondition\",\r\n        \"Confirm\": \"Confirm\",\r\n        \"Reset\": \"Reset\",\r\n        \"Cancle\":\"Cancle\",\r\n        \"Add\":\"Add\",\r\n        \"Delete\":\"Delete\",\r\n        \"AddGroup\":\"AddGroup\",\r\n        \"AddItem\":\"AddItem\",\r\n        \"PlaceHolder\":\"Please Input Value\",\r\n        \"Expression\":\"Expression\",\r\n        \"SelectItem\":\"Please Select Item\",\r\n        \"And\":\"And\",\r\n        \"Or\":\"Or\",\r\n        \"SelectProperty\":\"SelectProperty\",\r\n        \"GreaterThan\":\"GreaterThan\",\r\n        \"GreaterThanOrEqual\":\"GreaterThanOrEqual\",\r\n        \"LessThan\":\"LessThan\",\r\n        \"LessThanOrEqual\":\"LessThanOrEqual\",\r\n        \"Equal\":\"Equal\",\r\n        \"NotEqual\":\"NotEqual\",\r\n        \"Contains\":\"Contains\",\r\n        \"NotContains\":\"NotContains\",\r\n        \"StartsWith\":\"StartsWith\",\r\n        \"NotStartsWith\":\"NotStartsWith\",\r\n        \"EndsWith\":\"EndsWith\",\r\n        \"NotEndsWith\":\"NotEndsWith\",\r\n        \"IsNull\":\"IsNull\",\r\n        \"IsNotNull\":\"IsNotNull\",\r\n        \"In\":\"In\",\r\n        \"NotIn\":\"NotIn\",\r\n        \"Success\":\"Expression has been createdï¼\",\r\n        \"Warning_SelectRelation\":\"Please Select Relations!\",\r\n        \"Warning_ContainsFilters\":\"Please ensure that the relationship contains filters!\",\r\n        \"Warning_ConditionsComplete\":\"Please ensure that the filter conditions are complete!\",\r\n        \"Warning_NumericMatch\":\"Numeric fields cannot be filled with characters\",\r\n    },\r\n    \"zh-CHT\": {\r\n        \"Item\": \"é¸æé \",\r\n        \"Operator\": \"æä½ç¬¦\",\r\n        \"ExpressType\": \"å¼é¡å\",\r\n        \"Value\": \"å¼\",\r\n        \"Operation\": \"æä½\",\r\n        \"WindowTitle\": \"éæ¿¾æ¢ä»¶é¶éå¼\",\r\n        \"Confirm\": \"ç¢ºå®\",\r\n        \"Reset\": \"éç½®\",\r\n        \"Cancle\":\"åæ¶\",\r\n        \"Add\":\"æ·»å \",\r\n        \"Delete\":\"åªé¤\",\r\n        \"AddGroup\":\"æ·»å æ¢ä»¶åçµ\",\r\n        \"AddItem\":\"æ·»å æ¢ä»¶\",\r\n        \"PlaceHolder\":\"è«è¼¸å¥å¼\",\r\n        \"Expression\":\"é¶éå¼\",\r\n        \"SelectItem\":\"è«é¸æé ç®\",\r\n        \"And\":\"ä¸¦ä¸\",\r\n        \"Or\":\"æè\",\r\n        \"SelectProperty\":\"é¸æå±¬æ§\",\r\n        \"GreaterThan\":\"å¤§æ¼\",\r\n        \"GreaterThanOrEqual\":\"å¤§æ¼ç­æ¼\",\r\n        \"LessThan\":\"å°æ¼\",\r\n        \"LessThanOrEqual\":\"å°æ¼ç­æ¼\",\r\n        \"Equal\":\"ç­æ¼\",\r\n        \"NotEqual\":\"ä¸ç­æ¼\",\r\n        \"Contains\":\"åå«\",\r\n        \"NotContains\":\"ä¸åå«\",\r\n        \"StartsWith\":\"éé ­æ¯\",\r\n        \"NotStartsWith\":\"ä¸åå«éé ­æ¯\",\r\n        \"EndsWith\":\"çµå°¾æ¯\",\r\n        \"NotEndsWith\":\"ä¸åå«çµå°¾æ¯\",\r\n        \"IsNull\":\"çºç©º\",\r\n        \"IsNotNull\":\"ä¸çºç©º\",\r\n        \"In\":\"å¨\",\r\n        \"NotIn\":\"ä¸å¨\",\r\n        \"Success\":\"é¶éå¼å·²çæï¼\",\r\n        \"Warning_SelectRelation\":\"è«é¸æéä¿å¼ï¼\",\r\n        \"Warning_ContainsFilters\":\"è«ä¿è­éä¿ä¸­åå«éæ¿¾é ï¼\",\r\n        \"Warning_ConditionsComplete\":\"è«ä¿è­éæ¿¾æ¢ä»¶å®æ´ï¼\",\r\n        \"Warning_NumericMatch\":\"æ¸å¼åå­æ®µä¸å¯å¡«å­ç¬¦ï¼\",\r\n    }    \r\n};","import { Pipe, PipeTransform, Inject, LOCALE_ID } from '@angular/core';\r\nimport { Filter_Condition_LANG_RESOURCES } from './i18n/lang.resource';\r\n\r\n@Pipe({ name: 'locale' })\r\nexport class FilterConditionLocalePipe implements PipeTransform {\r\n    private readonly defaultLang: string = \"zh-CHS\";\r\n    private langCode: string;\r\n    private lang: {};\r\n    constructor(\r\n        @Inject(LOCALE_ID) localeId: string\r\n    ) {\r\n        localeId = localStorage.getItem('languageCode');\r\n        this.langCode = localeId || this.defaultLang;\r\n        this.lang = Filter_Condition_LANG_RESOURCES[this.langCode] || Filter_Condition_LANG_RESOURCES[this.defaultLang];\r\n    }\r\n    transform(name: string): any {\r\n        return this.lang[name] || name;\r\n    }\r\n}\r\n\r\n","import { Component, ViewChild, Input, EventEmitter, Output, OnInit, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TreeTableComponent, TreeNode } from '@farris/ui-treetable';\r\nimport { FilterExpression, ExpressionItem } from '../filter-expression-entity';\r\nimport { ExpressionService } from '@gsp-svc/expression';\r\nimport { VarEntity } from '@gsp-svc/expression';\r\nimport { Schema } from '@gsp-svc/expression';\r\nimport { GspCommonDataType } from '@gsp-bef/gsp-cm-metadata';\r\nimport { InjectedEntity } from '@gsp-svc/expression';\r\nimport { ExpressTypeEnum, CompareTypes, RelationTypes, ExpressTypes, RelationTypeEnum, CompareTypeEnum} from '../typeinfo';\r\nimport { PropertyDataType } from '../property-entity';\r\nimport {FieldType} from '../field-type';\r\nimport { FilterEntitySchema } from '../schema';\r\nimport { FilterInjectedEntity } from '../injected-entity';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { FilterConditionLocalePipe } from '../filter-condition-locale.pipe';\r\nimport { NewSchema } from '../NewSchema';\r\n@Component({\r\n  selector: 'app-filter-condition',\r\n  templateUrl: './filter-condition.component.html',\r\n  styleUrls: ['./filter-condition.component.css'],\r\n  providers: [ExpressionService],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\n/**\r\n * è¿æ»¤æ¡ä»¶å¼¹åºæ¡é»è¾ç±»\r\n */\r\nexport class FilterConditionComponent implements OnInit {\r\n  localePipe: FilterConditionLocalePipe;\r\n  constructor(private expr: ExpressionService,\r\n    private notifyservice:NotifyService,\r\n    @Inject(LOCALE_ID) localeId:string,\r\n    ) {\r\n      localeId =  localStorage.getItem('languageCode');\r\n      this.localePipe = new FilterConditionLocalePipe(localeId);\r\n     }\r\n  \r\n  treeDataTemp: TreeNode[]\r\n  //è·å¾æ åè¡¨ç»ä»¶æ\r\n  @ViewChild('tt') tt: TreeTableComponent;\r\n  //å³é­çªå£äºä»¶\r\n  @Output() closed = new EventEmitter<string>();\r\n  @Output() result = new EventEmitter<string>();\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼ä¸ä¸æå®ä½\r\n  @Input() contextEntity:VarEntity[] =[];\r\n  //é¢ç½®è®¡ç®é»è®¤è¡¨è¾¾å¼æ¾ç¤º\r\n  @Input() expressionText: string = \"\";\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼ä¸­çschema\r\n  @Input() expressionSchema: Array<{ name: string, schema: Schema }> = [];\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼ä¸­çæ³¨å¥å®ä½\r\n  @Input() expressionInjectedEntities: InjectedEntity[] = [];\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼cdté\r\n  @Input() expressionCDT: GspCommonDataType[] = [];\r\n  //é¢ç½®å±æ§åè¡¨\r\n  @Input() propertyList: Array<{ text: string,propertyDataType:PropertyDataType, value: string,parentItem:string}> = [];\r\n  //é¢ç½®è¿æ»¤è¡¨è¾¾å¼ä¸²\r\n  @Input() filterExpressionString: string = null;\r\n  //é¢ç½®è¿æ»¤è¡¨è¾¾å¼schema\r\n  @Input() schemaMap = new Map<string,FilterEntitySchema>();\r\n  //==============æ°å å¥çnewSchemaMap=======================\r\n  //é¢ç½®è¿æ»¤è¡¨è¾¾å¼newSchema\r\n   @Input() newSchemaMap = new Map<string,NewSchema>();\r\n  //========================================================\r\n  //é¢ç½®è¿æ»¤è¡¨è¾¾å¼æ³¨å¥å®ä½\r\n  @Input() injectedEntity = new FilterInjectedEntity();\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼å¼¹åºæ¡å®½åº¦\r\n  @Input() exprWinWidth:number =850;\r\n  popupSettings=\r\n  {\r\n    popupClass:\"lpopup\"\r\n  }\r\n\r\n  public operatorView = [];\r\n  //æä½æ¯è¾ç¬¦é\r\n  public operators= [];\r\n  \r\n  public stringOperators = [];\r\n\r\n  public NumberOperators = [];\r\n  //å³ç³»é\r\n  public relations = [];\r\n  //è¡¨è¾¾å¼ç±»åé\r\n  public expressTypes =  [];\r\n  public filterExpression: FilterExpression;\r\n  //æ å½¢ç»æèç¹å®ä½é\r\n  public nodeTemp: TreeNode[];\r\n  //æä½é»è¾éé»è®¤æ¾ç¤ºå¼\r\n  defaultSelectGroup:string;\r\n  defaultSelectItem:string;\r\n  //æä½æ¯è¾ç¬¦é»è®¤æ¾ç¤ºå¼\r\n  public defaultOperatorText:string;\r\n  //è¡¨è¾¾å¼ç±»åé»è®¤æ¾ç¤ºå¼\r\n  public defaultExpressTypeText:string;\r\n  //å¤æ­æ¯å¦ä¿å­ç¼è¾åçè¿æ»¤è¡¨è¾¾å¼\r\n  public isEdited: boolean = false;\r\n  //é¢ç½®è¿æ»¤è¡¨è¾¾å¼ä¸²\r\n  public filterExpressionPre: FilterExpression;\r\n  public displayPopup:boolean = false;\r\n  cols:any[];\r\n  groupIcon = '<span class=\"f-icon f-icon-windows\"></span>';\r\n  treeData: TreeNode[] = [];\r\n   //æ¶æ¯æç¤º\r\n  private notifies = {};  \r\n  private itemValue:string;\r\n  //åå§åï¼å¤å¶treeDataå¼,treeDataTempç¨äºè½¬æ¢ä¸ºFilterExpressionå®ä½\r\n  ngOnInit(): void {\r\n    //å¹¶ä¸æ å½¢è¡¨ç»å®çæ¾ç¤ºçå \r\n    this.cols = [\r\n      { field: 'item', title: this.localePipe.transform(\"Item\"), width: 271 },\r\n      { field: 'operator', title: this.localePipe.transform(\"Operator\"), width: 191 },\r\n      { field: 'expressType', title: this.localePipe.transform(\"ExpressType\"), width: 180 },\r\n      { field: 'value', title: this.localePipe.transform(\"Value\"), width: 214 },\r\n      { field: 'operation', title: this.localePipe.transform(\"Operation\"), width: 130}];\r\n    if (!(this.filterExpressionString) || this.filterExpressionString == \"\") {\r\n      this.treeData = [\r\n        {\r\n          data:\r\n          {\r\n            \"id\": 1,                    //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n            \"item\": this.localePipe.transform(\"And\"),             //å±æ§é¡¹\r\n            \"propertyDataType\":null,    //å±æ§æ°æ®ç±»å\r\n            \"operator\": null,           //æä½æ¯è¾ç¬¦\r\n            \"expressType\": null,        //è¡¨è¾¾å¼ç±»å\r\n            \"value\": null,              //å¼\r\n            \"displaySelect\":false,      //éæ©é¡¹æ¾ç¤º\r\n            \"displayOperator\": false,   //æä½ç¬¦é¡¹æ¾ç¤º\r\n            \"displayExpressType\": false,//è¡¨è¾¾å¼ç±»åæ¾ç¤º\r\n            \"displayValue\": false,      //å¼æ¾ç¤º\r\n            \"parentItem\":null           //ç¶å­é¡¹ \r\n          },\r\n          children: [],                 //å­èç¹éå\r\n          expanded: true                //æ¯å¦å±å¼\r\n        }\r\n      ];\r\n    }\r\n    else {\r\n      this.filterExpressionPre = JSON.parse(this.filterExpressionString);\r\n      this.treeData.push(this.unConvert(this.filterExpressionPre));\r\n      this.treeData[0].data.id = 1;\r\n    }\r\n    this.treeDataTemp = this.treeData;\r\n    this.defaultSelectItem =  this.localePipe.transform(\"SelectItem\");\r\n    this.defaultExpressTypeText = this.localePipe.transform(\"Value\");\r\n    this.defaultSelectGroup=this.localePipe.transform(\"And\");\r\n    this.defaultOperatorText = this.localePipe.transform(\"GreaterThan\");\r\n    this.notifies = {\r\n      1: { type: 'success', msg: this.localePipe.transform(\"Success\")},\r\n      2: { type: 'warning', msg: this.localePipe.transform(\"Warning_SelectRelation\") },\r\n      3: { type: 'warning',msg: this.localePipe.transform(\"Warning_ContainsFilters\") },\r\n      4: { type: 'warning',msg: this.localePipe.transform(\"Warning_ConditionsComplete\")},\r\n      5: { type: 'warning',msg:this.localePipe.transform(\"Warning_NumericMatch\")}\r\n    };  \r\n    this.expressTypes =  [\r\n      {id: this.localePipe.transform(\"Value\")},\r\n      {id: this.localePipe.transform(\"Expression\")}\r\n    ];\r\n    this.relations =  [\r\n      { id: this.localePipe.transform(\"And\")},\r\n      { id: this.localePipe.transform(\"Or\")},\r\n    ];\r\n    this.operators = [\r\n      { id: this.localePipe.transform(\"GreaterThan\")},\r\n      { id: this.localePipe.transform(\"GreaterThanOrEqual\")},\r\n      { id: this.localePipe.transform(\"LessThan\")},\r\n      { id: this.localePipe.transform(\"LessThanOrEqual\")},\r\n      { id: this.localePipe.transform(\"Equal\")},\r\n      { id: this.localePipe.transform(\"NotEqual\")},\r\n      { id: this.localePipe.transform(\"Contains\")},\r\n      { id: this.localePipe.transform(\"NotContains\")},\r\n      { id: this.localePipe.transform(\"StartsWith\")},\r\n      { id: this.localePipe.transform(\"EndsWith\")},\r\n      { id: this.localePipe.transform(\"NotStartsWith\")},\r\n      { id: this.localePipe.transform(\"NotEndsWith\")},\r\n      { id: this.localePipe.transform(\"IsNull\")},\r\n      { id: this.localePipe.transform(\"IsNotNull\")},\r\n      { id: this.localePipe.transform(\"In\")},\r\n      { id: this.localePipe.transform(\"NotIn\")},\r\n    ];\r\n    this.NumberOperators = [\r\n      { id: this.localePipe.transform(\"GreaterThan\")},\r\n      { id: this.localePipe.transform(\"GreaterThanOrEqual\")},\r\n      { id: this.localePipe.transform(\"LessThan\")},\r\n      { id: this.localePipe.transform(\"LessThanOrEqual\")},\r\n      { id: this.localePipe.transform(\"Equal\")},\r\n      { id: this.localePipe.transform(\"NotEqual\")},\r\n      { id: this.localePipe.transform(\"IsNull\")},\r\n      { id: this.localePipe.transform(\"IsNotNull\")},\r\n    ];\r\n    this.stringOperators = [\r\n      { id: this.localePipe.transform(\"Equal\")},\r\n      { id: this.localePipe.transform(\"NotEqual\")},\r\n      { id: this.localePipe.transform(\"Contains\")},\r\n      { id: this.localePipe.transform(\"NotContains\")},\r\n      { id: this.localePipe.transform(\"StartsWith\")},\r\n      { id: this.localePipe.transform(\"EndsWith\")},\r\n      { id: this.localePipe.transform(\"NotStartsWith\")},\r\n      { id: this.localePipe.transform(\"NotEndsWith\")},\r\n      { id: this.localePipe.transform(\"IsNull\")},\r\n      { id: this.localePipe.transform(\"IsNotNull\")},\r\n    ];\r\n  }\r\n \r\n\r\n  /**\r\n   * æ å½¢è¡¨ä¸­èç¹éæ©è§¦åå½æ°\r\n   * @param $event æéèç¹ä¿¡æ¯\r\n   */\r\n  nodeSelected($event) {\r\n   \r\n    //éèæææçèç¹éæ©ç¼è¾æ¡ï¼åæ¬å­èç¹ç\r\n    this.hideNodeEditor(this.treeData);\r\n\r\n    //å°æéèç¹æ¯è¾é¡¹ãè¡¨è¾¾å¼ç±»åé¡¹ãå¼ç¼è¾æ¡æ¾ç¤ºï¼å¹¶å°æéå¯¹åºæ°æ®èµç»é»è®¤é¡¹è¿è¡æ¾ç¤º \r\n    this.defaultOperatorText = $event.node.data.operator;\r\n    this.defaultExpressTypeText = $event.node.data.expressType;\r\n    if($event.node.data.item==this.localePipe.transform(\"And\") || $event.node.data.item==this.localePipe.transform(\"Or\"))\r\n    {\r\n      this.defaultSelectGroup = $event.node.data.item;\r\n    }\r\n    else if($event.node.data.item!==this.localePipe.transform(\"SelectProperty\"))\r\n    {\r\n      let properties = this.propertyList.filter(x => x.text == $event.node.data.item);\r\n      this.defaultSelectItem = properties[0].value;\r\n\r\n      if(properties[0].propertyDataType==PropertyDataType.String){\r\n        this.operatorView = this.stringOperators;\r\n      }\r\n      else if(properties[0].propertyDataType==PropertyDataType.Int16||\r\n      properties[0].propertyDataType==PropertyDataType.Int32 ||\r\n      properties[0].propertyDataType==PropertyDataType.Int64 ||\r\n      properties[0].propertyDataType==PropertyDataType.Decimal ||\r\n      properties[0].propertyDataType==PropertyDataType.Double){\r\n        this.operatorView = this.NumberOperators;\r\n      }\r\n      else this.operatorView = this.operators;\r\n    }\r\n   \r\n    $event.node.data.displayOperator = true;\r\n    $event.node.data.displayExpressType = true;\r\n    $event.node.data.displayValue = true;\r\n    $event.node.data.displaySelect = true;\r\n  };\r\n  /**\r\n   * éèæææçèç¹éæ©ç¼è¾æ¡ï¼åæ¬å­èç¹ç\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   */\r\n  hideNodeEditor(treeNodes: TreeNode[]) {\r\n    treeNodes.forEach(element => {\r\n      element.data.displayOperator = false;\r\n      element.data.displayExpressType = false;\r\n      element.data.displayValue = false;\r\n      element.data.displaySelect = false;\r\n      //è¥æå­èç¹ï¼åå°å¶å­èç¹çç¼è¾éæ©æ¡éè\r\n      if ((element.children) && element.children.length != 0) {\r\n        this.hideNodeEditor(element.children);\r\n      }\r\n    });\r\n  };\r\n  /***\r\n   * éæ©é»è¾éæ¶\r\n   */\r\n  selectGroup($event)\r\n  {\r\n    this.propertyNodeOperate($event, this.treeData, FieldType.Group);\r\n  }\r\n  /***\r\n   * éæ©é¡¹æ¶\r\n   */\r\n  selectItem($event)\r\n  {\r\n    this.propertyNodeOperate($event, this.treeData, FieldType.Item);\r\n  }\r\n  /**\r\n   * éæ©æ¯è¾æä½ç¬¦æ¶\r\n   * @param $event æ¯è¾æä½é¡¹ä¿¡æ¯\r\n   */\r\n  selectOperator($event) {\r\n    this.propertyNodeOperate($event, this.treeData, FieldType.Operation);\r\n  };\r\n  /**\r\n   * éæ©å¼ç±»åæ¶\r\n   * @param $event å¼ç±»åé¡¹ä¿¡æ¯\r\n   */\r\n  selectExpressType($event) {\r\n    this.propertyNodeOperate($event, this.treeData, FieldType.Valuetype)\r\n  };\r\n  /**\r\n   * éæ©ç»æåéèè¯¥å­æ®µéæ©æ¡\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   * @param fieldType æéå­æ®µ\r\n   */\r\n  hideFieldEditor(treeNodes: TreeNode[], fieldType: FieldType) {\r\n    //æ¾å°ææä½çèç¹ï¼æ ¹æ®æéæ©çå­æ®µå°å¯¹åºéæ©ç¼è¾æ¡éè\r\n    treeNodes.forEach(treeNode => {\r\n      if (this.tt.isSelected(treeNode)) {\r\n        switch (fieldType) {\r\n          case FieldType.Item:treeNode.data.displaySelect = false;break;\r\n          case FieldType.Operation: treeNode.data.displayOperator = false; break;\r\n          case FieldType.Valuetype: treeNode.data.displayExpressType = false; break;\r\n        }\r\n        return;\r\n      }\r\n      //è¥æªæ¾å°æéèç¹ï¼åæ¾å¶å­èç¹\r\n      else if ((treeNode.children) && treeNode.children.length != 0) {\r\n        this.hideFieldEditor(treeNode.children, fieldType);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * æå¼è®¡ç®è¡¨è¾¾å¼ç¼è¾å¨\r\n   */\r\n  openExpressEditor() {\r\n    let that = this;\r\n    //é¢ç½®è®¡ç®è¡¨è¾¾å¼å¼¹åºæ¡å®½åº¦\r\n    //this.expr.addWindowWidth(this.exprWinWidth);\r\n    //æ·»å é¢ç½®ä¸ä¸æåé\r\n    if(this.contextEntity && this.contextEntity.length!=0)\r\n    {\r\n      this.contextEntity.forEach(element => {\r\n        this.expr.addContext(element);\r\n      });\r\n    }\r\n    \r\n    //æ·»å é¢ç½®è¡¨è¾¾å¼ææ¬\r\n    let selectNode = this.isSelected(this.treeData);\r\n    if((selectNode) && (selectNode.data.value!=\"\") && (selectNode.data.value!=null))\r\n    {\r\n      this.expr.addExpressionText(selectNode.data.value);\r\n    }\r\n    else this.expr.addExpressionText(this.expressionText);\r\n    //æ·»å æ³¨å¥å®ä½\r\n    this.expressionInjectedEntities.forEach(element => {\r\n      this.expr.addInjectedEntity(element.name, element.schemaName, element.injectedName, element.injectedType);\r\n    });\r\n    //æ·»å schema\r\n    this.expressionSchema.forEach(element => {\r\n      this.expr.addSchema(element.name, element.schema);\r\n    });\r\n    //æ·»å cdt\r\n    this.expr.addCDT(this.expressionCDT);\r\n    //æå¼è¡¨è¾¾å¼ç¼è¾å¨å¹¶è¿åç¼è¾ç»æ\r\n    this.expr.buildExpression().then(info => {\r\n      let expressInfo: any = info;\r\n      this.displayExpressResult(that.treeData, expressInfo);\r\n    });\r\n  }\r\n   /**\r\n   * éä¸­èç¹éæ©\r\n   * @param treeNodes å³ç³»ç»\r\n   */\r\n  isSelected(treeNodes:TreeNode[]):any\r\n  {\r\n    let treeNode:TreeNode;\r\n    for(var i = 0; i < treeNodes.length; i ++)\r\n    {\r\n      if (this.tt.isSelected(treeNodes[i])) {\r\n        treeNode = treeNodes[i];\r\n        break;\r\n      }\r\n      //è¥å¨è¯¥å±èç¹ä¸­æªæ¾å°æéèç¹ï¼åæ¾å¶å­èç¹\r\n      else if ((treeNodes[i].children) && treeNodes[i].children.length != 0) {\r\n        treeNode = this.isSelected(treeNodes[i].children);\r\n        if((treeNode)) break; \r\n      }\r\n    }\r\n    return treeNode;\r\n  }\r\n  /**\r\n   * å°è®¡ç®è¡¨è¾¾å¼ç»æå±ç¤ºå°å¯¹åºèç¹\r\n   * @param treeNodes æ è¡¨ç»å®ç»æ\r\n   * @param expressInfo è®¡ç®è¡¨è¾¾å¼å¾å°ç»æ\r\n   */\r\n  displayExpressResult(treeNodes: TreeNode[], expressInfo: string) {\r\n    //æ¾å°æéèç¹å®ä½ï¼å¹¶å°è®¡ç®è¡¨è¾¾å¼æå¾ç»æèµç»å¯¹åºå±æ§è¿è¡æ¾ç¤º\r\n    treeNodes.forEach(treeNode => {\r\n      if (this.tt.isSelected(treeNode)) {\r\n        treeNode.data.value = expressInfo;\r\n        return;\r\n      }\r\n      //è¥å¨è¯¥å±èç¹ä¸­æªæ¾å°æéèç¹ï¼åæ¾å¶å­èç¹\r\n      else if ((treeNode.children) && treeNode.children.length != 0) {\r\n        this.displayExpressResult(treeNode.children, expressInfo);\r\n      }\r\n      //è¥ä»æªæ¾å°ï¼åä¸è¿è¡ä»»ä½æä½\r\n    });\r\n  }\r\n  /**\r\n   * å³ç³»éæ©æé®éæ©äºä»¶\r\n   * @param $event éæ©æé®æéä¿¡æ¯\r\n   */\r\n  itemClick($event) {\r\n    //è¥éæ©æ·»å å³ç³»\r\n    if ($event.value == RelationTypeEnum.AddRelation) {\r\n      this.addNode(this.treeData,this.localePipe.transform(\"And\"),null,null);\r\n    }\r\n    //è¥éæ©æ·»å å±æ§\r\n    else if ($event.value == RelationTypeEnum.AddProperty) {\r\n      this.addNode(this.treeData, this.localePipe.transform(\"SelectProperty\"),this.localePipe.transform(\"Equal\"),this.localePipe.transform(\"Value\"));\r\n    }\r\n    else this.propertyNodeOperate($event, this.treeData, FieldType.Item);\r\n  }\r\n \r\n  /**\r\n   * éæ©å±æ§èç¹æä½\r\n   * å¯¹æ°æ·»å çå±æ§èç¹è¿è¡é»è¾å¤ç\r\n   * @param value \r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   * @param fieldType èç¹ç±»å\r\n   */\r\n  propertyNodeOperate(event: any, treeNodes: TreeNode[], fieldType: FieldType) {\r\n    treeNodes.forEach(treenode => {\r\n      if (this.tt.isSelected(treenode)) {\r\n        //å¯¹æéèç¹è¿è¡èµå¼æä½\r\n        switch (fieldType) {\r\n          case FieldType.Group:\r\n          {\r\n            treenode.data.item = event.data.id;\r\n            this.defaultSelectGroup = event.data.id;\r\n          }break;\r\n          case FieldType.Item: \r\n          {\r\n            treenode.data.item =event.data.text;\r\n            this.defaultSelectItem = event.data.value;\r\n            treenode.data.parentItem = event.data.parentItem;\r\n            treenode.data.propertyDataType = event.data.propertyDataType;\r\n\r\n            if(treenode.data.propertyDataType==PropertyDataType.String){\r\n              this.operatorView = this.stringOperators;\r\n            }\r\n            else if(treenode.data.propertyDataType==PropertyDataType.Int16 ||\r\n            treenode.data.propertyDataType==PropertyDataType.Int32 ||\r\n            treenode.data.propertyDataType==PropertyDataType.Int64 ||\r\n            treenode.data.propertyDataType==PropertyDataType.Decimal ||\r\n            treenode.data.propertyDataType==PropertyDataType.Double){\r\n              this.operatorView = this.NumberOperators;\r\n            }\r\n            else this.operatorView = this.operators;\r\n\r\n            \r\n          } break;\r\n          case FieldType.Operation: \r\n          {\r\n            treenode.data.operator = event.data.id;\r\n            this.defaultOperatorText = event.data.id;        \r\n          } break;\r\n          case FieldType.Valuetype: \r\n          {\r\n            treenode.data.expressType = event.data.id; \r\n            this.defaultExpressTypeText = event.data.id;          \r\n          } break;\r\n        }\r\n        return;\r\n      }\r\n      //å¦åå¯¹å¶å­èç¹è¿è¡èµå¼æä½\r\n      else if ((treenode.children) && treenode.children.length != 0) {\r\n        this.propertyNodeOperate(event, treenode.children, fieldType);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * æ ¹æ®æéä¸ºå³ç³»æèå±æ§å¯¹æ°èç¹è¿è¡åå§å\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   * @param defaultString æ°èç¹æ¾ç¤ºé»è®¤å¼\r\n   */\r\n  addNode(treeNodes: TreeNode[], defaultString: any,defaultOperator:string,defalutExpressType:string)\r\n   {\r\n    treeNodes.forEach(treeNode => {\r\n      if (this.tt.isSelected(treeNode)) {\r\n        //è¥å³ç³»å¼ä¸ºç©º\r\n        if(!(treeNode.data.item))\r\n        {\r\n          this.notifyservice[this.notifies['2'].type]({\r\n            msg: this.notifies['2'].msg\r\n          });  \r\n          return;\r\n        }\r\n        //è¥ä¸ºæéçå³ç³»èç¹ï¼åå¨å¶å­é¡¹éæ·»å æ°å­èç¹\r\n        let newNode: TreeNode =\r\n        {\r\n          data:\r\n          {\r\n            \"item\": defaultString,\r\n            \"propertyDataType\":null,    //å±æ§æ°æ®ç±»å\r\n            \"operator\": defaultOperator,\r\n            \"expressType\": defalutExpressType,\r\n            \"value\": null,\r\n            \"id\": Math.random(),\r\n            \"parentItem\":null      \r\n          },\r\n          parent: treeNode,\r\n          children: [],\r\n          expanded: true\r\n        };\r\n        //åè¯¥æéèç¹çå­é¡¹æ·»å æ°èç¹\r\n        treeNode.children.push(newNode);\r\n        return;\r\n      }\r\n      //è¥æªæ¾å°æéèç¹ï¼ä¸è¯¥èç¹å­é¡¹ä¸ä¸ºç©ºï¼åå¨å¶å­é¡¹ä¸­æ¥æ¾æéèç¹\r\n      else if ((treeNode.children) && treeNode.children.length != 0) {\r\n        this.addNode(treeNode.children, defaultString,defaultOperator,defalutExpressType);\r\n      }\r\n    });\r\n    this.tt.updateSerializedValue();\r\n  }\r\n  /**\r\n   * å é¤èç¹\r\n   * @param treeNode è¦å é¤çèç¹\r\n   */\r\n  deleteNode($event) {\r\n    this.onDelete(this.treeData,$event);\r\n  }\r\n  /**\r\n   * å é¤èç¹å·ä½å®ç°ç±»\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   */\r\n  onDelete(treeNodes: TreeNode[],id:number) {\r\n    treeNodes.forEach(treeNode => {\r\n      if (treeNode.data.id==id) {\r\n        if(treeNode.data.id==1)\r\n        {\r\n          this.treeData = [\r\n            {\r\n              data:\r\n              {\r\n                \"id\": 1,                    //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n                \"propertyDataType\":null,    //å±æ§æ°æ®ç±»å\r\n                \"item\": this.localePipe.transform(\"And\"),              //å±æ§é¡¹\r\n                \"operator\": null,           //æä½æ¯è¾ç¬¦\r\n                \"expressType\": null,        //è¡¨è¾¾å¼ç±»å\r\n                \"value\": null,              //å¼\r\n                \"displaySelect\":false,      //éæ©é¡¹æ¾ç¤º\r\n                \"displayOperator\": false,   //æä½ç¬¦é¡¹æ¾ç¤º\r\n                \"displayExpressType\": false,//è¡¨è¾¾å¼ç±»åæ¾ç¤º\r\n                \"displayValue\": false,      //å¼æ¾ç¤º\r\n                \"parentItem\":null           //ç¶é¡¹\r\n              },\r\n              children: [],                 //å­èç¹éå\r\n              expanded: true                //æ¯å¦å±å¼\r\n            }\r\n          ];\r\n          return;\r\n        }\r\n        //æéèç¹æå¨æ°\r\n        let index = treeNodes.indexOf(treeNode);\r\n        //å°æéèç¹åé¤\r\n        treeNodes.splice(index, 1);\r\n      }\r\n      else if ((treeNode.children) && treeNode.children.length != 0) {\r\n        treeNode.children = this.onDelete(treeNode.children,id);\r\n      }\r\n    });\r\n    this.tt.updateSerializedValue();\r\n    return treeNodes;\r\n  }\r\n  /**\r\n   * ç¡®å®\r\n   * çæè¿æ»¤è¡¨è¾¾å¼\r\n   */\r\n  onConfirm() {\r\n    this.treeDataTemp = this.treeData;\r\n    let isNull = true;\r\n    let isMatch = true;\r\n    if(this.checkNull(this.treeDataTemp[0].children,isNull) && this.checkMatch(this.treeDataTemp[0].children, isMatch))\r\n    {\r\n      this.filterExpression = new FilterExpression();\r\n      //æ ¹æ®æ å½¢æ°æ®ç»æè½¬åä¸ºè¿æ»¤è¡¨è¾¾å¼å®ä½\r\n      this.convert(this.filterExpression, this.treeDataTemp[0]);\r\n      this.isEdited = true;\r\n      this.notifyservice[this.notifies['1'].type]({\r\n        msg: this.notifies['1'].msg\r\n      });  \r\n      this.close();\r\n      this.closed.emit(\"close\");\r\n    }\r\n   \r\n  }\r\n  //éå½æ£æ¥æ´ä¸ªè¿æ»¤è¡¨è¾¾å¼æ¯å¦ææ¼å¡«çé¡¹\r\n  checkNull(treeNodes:TreeNode[],isNull:boolean):boolean\r\n  {\r\n    for(var i=0;i<treeNodes.length;i++)\r\n    {\r\n      if(treeNodes[i].data.item == this.localePipe.transform(\"And\") || treeNodes[i].data.item == this.localePipe.transform(\"Or\"))\r\n      {\r\n        if(!(treeNodes[i].children) || treeNodes[i].children.length==0) \r\n        {\r\n          this.notifyservice[this.notifies['3'].type]({\r\n            msg: this.notifies['3'].msg\r\n          });  \r\n          isNull = false;\r\n          break;\r\n        }\r\n        else if(!this.checkNull(treeNodes[i].children,isNull)) \r\n        {\r\n          isNull = false;\r\n          break;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        if(!(treeNodes[i].data.item) || treeNodes[i].data.item == this.localePipe.transform(\"SelectProperty\")\r\n        || !(treeNodes[i].data.operator) || !(treeNodes[i].data.expressType) \r\n        || treeNodes[i].data.value==null || treeNodes[i].data.value==undefined)\r\n       {\r\n        this.notifyservice[this.notifies['4'].type]({\r\n          msg: this.notifies['4'].msg\r\n        });  \r\n         isNull = false;\r\n         break;\r\n       }\r\n      }\r\n    }\r\n    return isNull;\r\n  }\r\n\r\n  /**\r\n   * éç½®\r\n   * éç½®ä¸ºåå§ç¶æ\r\n   */\r\n  onCancel() {\r\n    this.isEdited = false;\r\n    if(this.filterExpressionString == null || this.filterExpressionString ==\"\")\r\n    {\r\n      this.treeData = [\r\n        {\r\n          data:\r\n          {\r\n            \"id\": 1,                    //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n            \"item\": null,               //å±æ§é¡¹\r\n            \"propertyDataType\":null,    //å±æ§æ°æ®ç±»å\r\n            \"operator\": null,           //æä½æ¯è¾ç¬¦\r\n            \"expressType\": null,        //è¡¨è¾¾å¼ç±»å\r\n            \"value\": null,              //å¼\r\n            \"displaySelect\":false,      //éæ©é¡¹æ¾ç¤º\r\n            \"displayOperator\": false,   //æä½ç¬¦é¡¹æ¾ç¤º\r\n            \"displayExpressType\": false,//è¡¨è¾¾å¼ç±»åæ¾ç¤º\r\n            \"displayValue\": false,      //å¼æ¾ç¤º\r\n            \"parentItem\":null           //ç¶é¡¹\r\n          },\r\n          children: [],                 //å­èç¹éå\r\n          expanded: true                //æ¯å¦å±å¼\r\n        }\r\n      ];\r\n    }\r\n    else \r\n    {\r\n      this.filterExpressionPre = JSON.parse(this.filterExpressionString);\r\n      this.treeData = [];\r\n      this.treeData.push(this.unConvert(this.filterExpressionPre));\r\n      this.treeData[0].data.id = 1;\r\n    }\r\n  }\r\n   /**åæ¶ */\r\n   cancle()\r\n   {\r\n     this.closed.emit(\"close\");\r\n   }\r\n  /**\r\n   * å³é­çªå£\r\n   */\r\n  close() {\r\n    if (this.isEdited == true) {\r\n      //è¥åªåå«å³ç³»é¡¹åè¿åç©º\r\n      if(this.filterExpression.expressItems.length==0) this.result.next(null);\r\n      //è¥æåä¸æ¬¡ç¹äºç¡®å®ï¼åå°è¿æ»¤è¡¨è¾¾å¼JSONåºååè¾åº\r\n      else this.result.next(JSON.stringify(this.filterExpression));\r\n    }\r\n    //è¥æªç¹ç¡®å®ï¼é»è®¤æ ä»»ä½ç¼è¾ææ¬ï¼åè¾åºç©ºä¸²\r\n    else this.result.next(this.filterExpressionString);\r\n  }\r\n  /**\r\n   * å°treeDataè½¬åä¸ºfiletrExpressionå®ä½\r\n   * @param filterExpression è¿æ»¤è¡¨è¾¾å¼å®ä½\r\n   * @param treeNode æå¤å±çtreeNode\r\n   */\r\n  convert(filterExpression: FilterExpression, treeNode: TreeNode): FilterExpression {\r\n    //å¾å°æå¤å±çå³ç³»ç¬¦\r\n    filterExpression.relationOperator = this.typeMatch(treeNode.data.item);\r\n    //è¥å¶å­é¡¹ä¸ä¸ºç©º\r\n    if (treeNode.children.length != 0) {\r\n      //å¯¹å¶æ¯ä¸ä¸ªå­é¡¹è¿è¡è½¬åæä½\r\n      treeNode.children.forEach(treeNodeItem => {\r\n        //è¥å­é¡¹ä¸ºå¹¶ä¸ãæèï¼åæ°å»ºå¤æè¿æ»¤è¡¨è¾¾å¼\r\n        if (this.typeMatch(treeNodeItem.data.item) == RelationTypeEnum.And ||\r\n          this.typeMatch(treeNodeItem.data.item) == RelationTypeEnum.Or) {\r\n          let filterExpressionItem = new FilterExpression();\r\n          filterExpression.expressItems.push(this.convert(filterExpressionItem, treeNodeItem));\r\n        }\r\n        //è¥å­é¡¹ä¸ºå±æ§è¡¨è¾¾å¼\r\n        else {\r\n          let filterItem = new ExpressionItem();\r\n          //æ ¹æ®å±æ§åå±ç¤ºå¼æ¾å°å¶å¨é¢ç½®åè¡¨ä¸­çè¯­ä¹åå¼ï¼å°è¯­ä¹åå¼èµç»å®ä½ä¿å­\r\n          let properties = this.propertyList.filter(x => x.text == treeNodeItem.data.item);\r\n          filterItem.propertyName = properties[0].value;\r\n          filterItem.propertyDataType = treeNodeItem.data.propertyDataType;\r\n          filterItem.operator = this.typeMatch(treeNodeItem.data.operator);\r\n          filterItem.expressType = this.typeMatch(treeNodeItem.data.expressType);\r\n          filterItem.value = treeNodeItem.data.value;\r\n          filterItem.parentItem = treeNodeItem.data.parentItem;\r\n          //è¥ä¸ºæ°å¼åæ¯è¾ï¼åå°valueå¼å¼ºå¶è½¬æ¢ä¸ºæ°å­\r\n          if (filterItem.expressType == ExpressTypeEnum.Value &&\r\n            (filterItem.operator == CompareTypeEnum.GreaterThan\r\n              || filterItem.operator == CompareTypeEnum.GreaterThanOrEqual\r\n              || filterItem.operator == CompareTypeEnum.LessThan\r\n              || filterItem.operator == CompareTypeEnum.LessThanOrEqual\r\n            )) {\r\n            filterItem.value = Number(treeNodeItem.data.value);\r\n          }\r\n          if (filterItem.expressType == ExpressTypeEnum.Value &&\r\n            (filterItem.operator == CompareTypeEnum.Equal\r\n              || filterItem.operator == CompareTypeEnum.NotEqual)) {\r\n            if(filterItem.propertyDataType == PropertyDataType.Decimal \r\n              || filterItem.propertyDataType == PropertyDataType.Double\r\n              || filterItem.propertyDataType == PropertyDataType.Int16\r\n              || filterItem.propertyDataType == PropertyDataType.Int32\r\n              || filterItem.propertyDataType == PropertyDataType.Int64 )\r\n            {\r\n              filterItem.value = Number(treeNodeItem.data.value);\r\n            }\r\n          }\r\n          //å°å­é¡¹æ¾å¥ç¶é¡¹çå­æ®µä¸­\r\n          filterExpression.expressItems.push(filterItem);\r\n        }\r\n      });\r\n    }\r\n    return filterExpression;\r\n  }\r\n  /**\r\n   * filetrExpressionåè½¬åä¸ºTreeNode\r\n   * @param filterExpress å¾è½¬åçfiletrExpressionå®ä½\r\n   */\r\n  unConvert(filterExpress: FilterExpression): TreeNode {\r\n    let treeData: TreeNode =\r\n    {\r\n      data:\r\n      {\r\n        \"id\": Math.random(),        //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n        \"item\": this.relationTypeReverseMatch(filterExpress.relationOperator), //å±æ§é¡¹\r\n        \"propertyDataType\":null,    //å±æ§æ°æ®ç±»å\r\n        \"operator\": null,           //æä½æ¯è¾ç¬¦\r\n        \"expressType\": null,        //è¡¨è¾¾å¼ç±»å\r\n        \"value\": null,              //å¼\r\n        \"displaySelect\":false,      //éæ©é¡¹æ¾ç¤º\r\n        \"displayOperator\": false,   //æä½ç¬¦é¡¹æ¾ç¤º\r\n        \"displayExpressType\": false,//è¡¨è¾¾å¼ç±»åæ¾ç¤º\r\n        \"displayValue\": false,      //å¼æ¾ç¤º\r\n        \"parentItem\":null           //ç¶é¡¹\r\n      },\r\n      children: [],                 //å­èç¹éå\r\n      expanded: true                //æ¯å¦å±å¼\r\n    };\r\n    //å¯¹äºæ¯ä¸ä¸ªå­é¡¹\r\n    filterExpress.expressItems.forEach(expressItem => {\r\n      let filterExpressItem = expressItem as FilterExpression;\r\n      //è¥å­é¡¹ä¸ºFilterExpressionç±»åï¼èµå¼\r\n      if ((filterExpressItem.relationOperator == RelationTypeEnum.And || filterExpressItem.relationOperator == RelationTypeEnum.Or)) \r\n      {\r\n        let treeDataChild = this.unConvert(filterExpressItem);\r\n        treeDataChild.data.parent = treeData;//æ·»å ç¶èç¹\r\n        treeData.children.push(treeDataChild);\r\n      }\r\n      else //è¥å­é¡¹ä¸ºExpressionItemç±»åï¼èµå¼\r\n      {\r\n        let expressionItem = expressItem as ExpressionItem;\r\n        let properties = this.propertyList.filter(x => x.value == expressionItem.propertyName);\r\n        let treeDataChild:TreeNode =\r\n        {\r\n          data:\r\n          {\r\n            \"id\": Math.random(),                      //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n            \"item\": properties[0].text,               //å±æ§é¡¹\r\n            \"propertyDataType\":expressionItem.propertyDataType,                  //å±æ§æ°æ®ç±»å\r\n            \"operator\": this.operatorReverseMatch(expressionItem.operator),      //æä½æ¯è¾ç¬¦\r\n            \"expressType\": this.expressTypeReverseMatch(expressionItem.expressType),//è¡¨è¾¾å¼ç±»å\r\n            \"value\": expressionItem.value,            //å¼\r\n            \"parentItem\":expressionItem.parentItem    //ç¶é¡¹\r\n          },\r\n          parent: treeData,             //æ·»å ç¶èç¹\r\n          children: [],                 //å­èç¹éå\r\n          expanded: true                //æ¯å¦å±å¼\r\n        }\r\n        treeData.children.push(treeDataChild); \r\n      }\r\n    });\r\n    return treeData;\r\n  }\r\n  /***\r\n   * æ·»å æ¡ä»¶é¡¹\r\n   */\r\n  addItem()\r\n  {\r\n    this.defaultSelectItem = this.localePipe.transform(\"SelectItem\");\r\n    this.hideNodeEditor(this.treeData);\r\n    this.addNode(this.treeData, this.localePipe.transform(\"SelectProperty\"),this.localePipe.transform(\"Equal\"),this.localePipe.transform(\"Value\"));\r\n  }\r\n  /***\r\n   * æ·»å æ¡ä»¶ç»\r\n   */\r\n  addGroup()\r\n  {\r\n    this.addNode(this.treeData,this.localePipe.transform(\"And\"),null,null);\r\n  }\r\n  /**\r\n   * ç±»åä¿¡æ¯å¹é\r\n   * @param type ç±»å\r\n   */\r\n  typeMatch(type: any): any {\r\n    switch (type) {\r\n      case this.localePipe.transform(\"And\"): return RelationTypeEnum.And;\r\n      case this.localePipe.transform(\"Or\"): return RelationTypeEnum.Or;\r\n      case this.localePipe.transform(\"GreaterThan\"): return CompareTypeEnum.GreaterThan;\r\n      case this.localePipe.transform(\"GreaterThanOrEqual\"): return CompareTypeEnum.GreaterThanOrEqual;\r\n      case this.localePipe.transform(\"LessThan\"): return CompareTypeEnum.LessThan;\r\n      case this.localePipe.transform(\"LessThanOrEqual\"): return CompareTypeEnum.LessThanOrEqual;\r\n      case this.localePipe.transform(\"Equal\"): return CompareTypeEnum.Equal;\r\n      case this.localePipe.transform(\"NotEqual\"): return CompareTypeEnum.NotEqual;\r\n      case this.localePipe.transform(\"Contains\"): return CompareTypeEnum.Contains;\r\n      case this.localePipe.transform(\"NotContains\"): return CompareTypeEnum.NotContains;\r\n      case this.localePipe.transform(\"StartsWith\"): return CompareTypeEnum.StartsWith;\r\n      case this.localePipe.transform(\"EndsWith\"): return CompareTypeEnum.EndsWith;\r\n      case this.localePipe.transform(\"NotStartsWith\"): return CompareTypeEnum.NotStartsWith;\r\n      case this.localePipe.transform(\"NotEndsWith\"): return CompareTypeEnum.NotEndsWith;\r\n      case this.localePipe.transform(\"IsNull\"): return CompareTypeEnum.IsNull;\r\n      case this.localePipe.transform(\"IsNotNull\"): return CompareTypeEnum.IsNotNull;\r\n      case this.localePipe.transform(\"In\"): return CompareTypeEnum.In;\r\n      case this.localePipe.transform(\"NotIn\"): return CompareTypeEnum.NotIn;\r\n      case this.localePipe.transform(\"Value\"): return ExpressTypeEnum.Value;\r\n      case this.localePipe.transform(\"Expression\"): return ExpressTypeEnum.Expression;\r\n    }\r\n  }\r\n  relationTypeReverseMatch(type: RelationTypeEnum): string {\r\n    switch (type) {\r\n      case RelationTypeEnum.And: return this.localePipe.transform(\"And\") ;\r\n      case RelationTypeEnum.Or: return this.localePipe.transform(\"Or\");\r\n    }\r\n  }\r\n  operatorReverseMatch(type: CompareTypeEnum): string\r\n  {\r\n    switch (type) {\r\n      case CompareTypeEnum.GreaterThan: return this.localePipe.transform(\"GreaterThan\");\r\n      case CompareTypeEnum.GreaterThanOrEqual: return this.localePipe.transform(\"GreaterThanOrEqual\");\r\n      case CompareTypeEnum.LessThan: return this.localePipe.transform(\"LessThan\");\r\n      case CompareTypeEnum.LessThanOrEqual: return this.localePipe.transform(\"LessThanOrEqual\");\r\n      case CompareTypeEnum.Equal: return this.localePipe.transform(\"Equal\");\r\n      case CompareTypeEnum.NotEqual: return this.localePipe.transform(\"NotEqual\");\r\n      case CompareTypeEnum.Contains: return this.localePipe.transform(\"Contains\");\r\n      case CompareTypeEnum.NotContains: return this.localePipe.transform(\"NotContains\");\r\n      case CompareTypeEnum.StartsWith: return this.localePipe.transform(\"StartsWith\");\r\n      case CompareTypeEnum.EndsWith: return this.localePipe.transform(\"EndsWith\");\r\n      case CompareTypeEnum.NotStartsWith: return this.localePipe.transform(\"NotStartsWith\");\r\n      case CompareTypeEnum.NotEndsWith: return this.localePipe.transform(\"NotEndsWith\");\r\n      case CompareTypeEnum.IsNull: return this.localePipe.transform(\"IsNull\");\r\n      case CompareTypeEnum.IsNotNull: return this.localePipe.transform(\"IsNotNull\");\r\n      case CompareTypeEnum.In: return this.localePipe.transform(\"In\");\r\n      case CompareTypeEnum.NotIn: return this.localePipe.transform(\"NotIn\");\r\n    }\r\n  }\r\n  expressTypeReverseMatch(type: ExpressTypeEnum): string\r\n  {\r\n    switch (type) {\r\n      case ExpressTypeEnum.Value: return this.localePipe.transform(\"Value\");\r\n      case ExpressTypeEnum.Expression: return this.localePipe.transform(\"Expression\");\r\n    }\r\n  }\r\n  onfocus()\r\n{\r\n  this.displayPopup = true;\r\n}\r\nonblur()\r\n{\r\n  this.displayPopup = false;\r\n}\r\n\r\ncheckMatch(treeNodes: TreeNode[],isMatch: boolean)\r\n{\r\n  for (var i = 0; i < treeNodes.length; i++) {\r\n    if (treeNodes[i].data.item != this.localePipe.transform(\"And\") && treeNodes[i].data.item != this.localePipe.transform(\"Or\")) {\r\n      if (treeNodes[i].data.expressType==this.localePipe.transform(\"Value\")){\r\n        if((treeNodes[i].data.propertyDataType==PropertyDataType.Int16 || treeNodes[i].data.propertyDataType==PropertyDataType.Int32 || treeNodes[i].data.propertyDataType==PropertyDataType.Int64) && isNaN(treeNodes[i].data.value)){\r\n          this.notifyservice[this.notifies['5'].type]({\r\n            msg: this.notifies['5'].msg\r\n          });  \r\n          isMatch = false;\r\n          break;\r\n        }\r\n    }\r\n  }\r\n  else isMatch = this.checkMatch(treeNodes[i].children,isMatch);\r\n}\r\nreturn isMatch;\r\n}\r\n}\r\n","/**\r\n * å¯¼èªå±æ§ç±»\r\n * @property name å¯¼èªå±æ§è¯­ä¹ååç§°\r\n * @property navigationType å¯¼èªå±æ§ç±»å\r\n */\r\nexport class NavigationProperty\r\n{\r\n    name:string;\r\n    displayName:string;\r\n    navigationEntity:string;\r\n    navigationType:NavigationType;\r\n}\r\n/** \r\n * å¯¼èªå±æ§ç±»å\r\n * @member EntitySet å®ä½é\r\n * @member EntityType å®ä½ç±»å\r\n */\r\n export enum NavigationType{\r\n    EntitySet,\r\n    EntityType\r\n}","import { PropertyEntity } from \"./property-entity\";\r\nimport { NavigationProperty } from \"./navigation-property-entity\";\r\n/**\r\n * schemaå®ä½ç±»\r\n * @property entitySets  å®ä½ééå\r\n * @property entityTypes å®ä½ç±»åéå\r\n */\r\n export class FilterEntitySchema {\r\n    entitySets: FilterEntitySet[] = [];\r\n    entityTypes: FilterEntityType[] = [];\r\n}\r\n/**\r\n * è¿æ»¤å®ä½ç±»å\r\n * ç¨äºå¤çº§åµå¥å®ä½æ¾ç¤º\r\n * @property name å®ä½å(ç¨äºå®ä½é´å¯¼èªä½¿ç¨)\r\n * @property displayName å±ç¤ºåç§°\r\n * @property properties å±æ§é\r\n * @property navigationProperties å¯¼èªå±æ§é\r\n */\r\nexport class FilterEntityType\r\n{\r\n    name:string;\r\n    displayName:string;\r\n    properties:PropertyEntity[] = [];\r\n    navigationProperties:NavigationProperty[] = [];\r\n}\r\n/**\r\n * è¿æ»¤å®ä½ç±»åé\r\n * ç¨äºå¤çº§åµå¥å®ä½æ¾ç¤º\r\n * @property name å®ä½éå\r\n * @property entityTypeName åå«çå®ä½ç±»åå\r\n */\r\nexport class FilterEntitySet\r\n{\r\n    name:string;\r\n    displayName:string;             \r\n    entityTypeName:string;      \r\n}","/**\r\n * @description ç»ä¸ç»æSchema\r\n * @param name åç§°\r\n * @param description æè¿°\r\n * @param entitySets å®ä½é\r\n * @param entityTypes å®ä½ç±»å\r\n * @param associations å³èéå\r\n * @date 2021-04-14\r\n * @author Wenxing Man\r\n */\r\nexport class NewSchema {\r\n    name: string;\r\n    description: string;\r\n    entitySets: NewEntitySet[] = [];\r\n    entityTypes: NewEntityType[] = [];\r\n    associations: NewAssociation[] = [];\r\n}\r\n/**\r\n * @param code å®ä½éå\r\n * @param name å®ä½éè¯­ä¹åå\r\n * @param entityType å¯¹åºEntityTypeçid\r\n * @date 2021-04-14\r\n * @author Wenxing Man\r\n */\r\nexport class NewEntitySet {\r\n    code: string;\r\n    name: string;\r\n    entityType: string;\r\n}\r\n/**\r\n * @param code å±æ§å\r\n * @param name å®ä½è¯­ä¹åå\r\n * @param master  æ¯å¦æ¯ä¸»å®ä½\r\n * @param properties    å±æ§éå\r\n * @param keys  ä¸»é®éå\r\n * @param navigationPorperties å¯¼èªéåå±æ§\r\n * @date 2021-04-14\r\n * @author Wenxing Man\r\n */\r\nexport class NewEntityType {\r\n    code: string;\r\n    name: string;\r\n    master: boolean;\r\n    properties: NewProperty[] = [];\r\n    keys: String[] = [];\r\n    navigationProperties: NewNavigationProperty[] = [];\r\n}\r\n/**\r\n * @param name å³èåç§°\r\n * @param masterType ä¸»å¯¹è±¡ç±»å\r\n * @param childType å­å¯¹è±¡ç±»å\r\n * @param masterProperty ä¸»å¯¹è±¡å­æ®µ\r\n * @param childProperty ä»å¯¹è±¡å­æ®µ\r\n * @date 2021-04-14\r\n * @author Wenxing Man\r\n */\r\nexport class NewAssociation {\r\n    name: string;\r\n    masterType: string;\r\n    childType: string;\r\n    masterProperty: string;\r\n    childProperty: string;\r\n}\r\n/**\r\n * @param code å±æ§å\r\n * @param name å±æ§è¯­ä¹åå\r\n * @param dataType å±æ§å¼ç±»å\r\n * @param nullable æ¯å¦åè®¸ä¸ºç©ºå¼\r\n * @param dafaultValue å±æ§é»è®¤å¼\r\n * @date 2021-04-14\r\n * @author Wenxing Man\r\n */\r\nexport class NewProperty {\r\n    code: string;\r\n    name: string;\r\n    dataType: NewDataType;\r\n    nullable: boolean;\r\n    defaultValue: object;\r\n}\r\n/**\r\n * @param code å¯¼èªå±æ§åç§°\r\n * @param name å¯¼èªå±æ§è¯­ä¹åå\r\n * @param navigationName å¯¼èªå¯¹è±¡çåç§°\r\n * @param navigationType å±æ§ç±»å\r\n * @param relationShip å³èçå¯¹è±¡\r\n * @date 2021-04-14\r\n * @author Wenxing Man\r\n */\r\nexport class NewNavigationProperty {\r\n    code: string;\r\n    name: string;\r\n    navigationName: string;\r\n    navigationType: NewNavigationType;\r\n    relationShip: string;\r\n}\r\n\r\n/**\r\n * @description æ°æ®ç±»åçæä¸¾\r\n */\r\nexport enum NewDataType {\r\n    String,\r\n    Byte,\r\n    Boolean,\r\n    Date,\r\n    DateTime,\r\n    Decimal,\r\n    Integer\r\n}\r\n\r\n/**\r\n * @description å¯¼èªå±æ§ç±»åçæä¸¾\r\n * @enum EntitySet EntitySet\r\n * @enum EntityType EntityType\r\n */\r\nexport enum NewNavigationType {\r\n    EntitySet = \"EntitySet\",\r\n    EntityType = \"EntityType\"\r\n}","import { FilterEntityType } from \"./schema\";\r\nimport { GSPCommonObject, IGSPCommonObject, GSPElementDataType, GSPElementObjectType } from \"@gsp-bef/gsp-cm-metadata\";\r\nimport { PropertyEntity, PropertyDataType } from \"./property-entity\";\r\nimport { NavigationProperty, NavigationType } from \"./navigation-property-entity\";\r\nimport { NewDataType, NewEntityType, NewProperty, NewNavigationProperty, NewNavigationType } from \"./NewSchema\";\r\n\r\nexport class Adapter {\r\n    public convertCO(commonObject: GSPCommonObject): FilterEntityType[] {\r\n        let entityTypes: FilterEntityType[] = [];\r\n        entityTypes.push(this.adaptCO(commonObject, entityTypes));\r\n        return entityTypes;\r\n    }\r\n    /**\r\n     * COè½¬åéå½æ¹æ³\r\n     * @param gspCO å¾è½¬ågspCO\r\n     * @param entityTypes ä»gspCOæåçææä¸»ä»è¡¨\r\n     */\r\n    private adaptCO(gspCO: IGSPCommonObject, entityTypes: FilterEntityType[]): FilterEntityType {\r\n        let entityType = new FilterEntityType();\r\n        entityType.name = gspCO.Code;\r\n        entityType.displayName = gspCO.Name;\r\n        //æ¯ä¸ªå±æ§è½¬å\r\n        if ((gspCO.ContainElements) && gspCO.ContainElements.length != 0) {\r\n            gspCO.ContainElements.forEach(element => {\r\n                if (!element.IsUdt && element.ObjectType != GSPElementObjectType.Association) {\r\n                    let property = new PropertyEntity();\r\n                    property.name = element.Code;\r\n                    property.displayName = element.Name;\r\n                    property.propertyDataType = this.convertPropertyDataType(element.MDataType);\r\n                    entityType.properties.push(property);\r\n                }\r\n            });\r\n        };\r\n        //å­è¡¨è½¬åä¸ºå¯¼èªå±æ§\r\n        if ((gspCO.ContainChildObjects) && gspCO.ContainChildObjects.length != 0) {\r\n            gspCO.ContainChildObjects.forEach(childObject => {\r\n                let naviproperty = new NavigationProperty();\r\n                naviproperty.displayName = childObject.Name;\r\n                naviproperty.name = childObject.Code + \"s\";\r\n                naviproperty.navigationEntity = childObject.Code;\r\n                naviproperty.navigationType = NavigationType.EntityType;\r\n                entityType.navigationProperties.push(naviproperty);\r\n                entityTypes.push(this.adaptCO(childObject, entityTypes));\r\n            });\r\n        };\r\n        return entityType;\r\n    }\r\n    /**\r\n     * å±æ§æ°æ®ç±»åè½¬æ¢\r\n     */\r\n    private convertPropertyDataType(dataType: GSPElementDataType): PropertyDataType {\r\n        switch (dataType) {\r\n            case GSPElementDataType.String:\r\n            case GSPElementDataType.Text:\r\n                return PropertyDataType.String;\r\n            case GSPElementDataType.Integer:\r\n                return PropertyDataType.Int32;\r\n            case GSPElementDataType.Decimal:\r\n                return PropertyDataType.Decimal;\r\n            case GSPElementDataType.DateTime:\r\n            case GSPElementDataType.Date:\r\n                return PropertyDataType.DateTime;\r\n            case GSPElementDataType.Boolean:\r\n                return PropertyDataType.Boolean;\r\n            case GSPElementDataType.Binary:\r\n                return PropertyDataType.Array;\r\n            default: return null;\r\n        }\r\n    }\r\n\r\n    //=====================================è½¬æ¢CO---->NewSchema===================================\r\n\r\n    /**\r\n     * @description å°COè½¬åä¸ºNewEntityType[]\r\n     * @param co å¾è½¬æ¢CO\r\n     * @returns NewEntityType[] NewEntityType[]\r\n     */\r\n    public convertCOOfNewSchema(co: GSPCommonObject): NewEntityType[] {\r\n        let types: NewEntityType[] = [];\r\n        types.push(this.adaptCOOfNewSchema(co, types));\r\n        return types;\r\n    }\r\n\r\n    /**\r\n     * @description å°COè½¬åä¸ºNewEntityType[]\r\n     * @param co å¾è½¬æ¢CO\r\n     * @param types æ°ç»:EntityType[]\r\n     * @returns NewEntityType[] NewEntityType[]\r\n     */\r\n    public adaptCOOfNewSchema(co: GSPCommonObject, types: NewEntityType[]): NewEntityType {\r\n        let type = new NewEntityType();\r\n        type.code = co.Code;\r\n        type.name = co.Name;\r\n        //ä¸è¬å±æ§è½¬å\r\n        if (co.ContainElements && co.ContainElements.length > 0) {\r\n            co.ContainElements.forEach(ele => {\r\n                if (!ele.IsUdt && ele.ObjectType != GSPElementObjectType.Association) {\r\n                    let pro = new NewProperty();\r\n                    pro.code = ele.Code;\r\n                    pro.name = ele.Name;\r\n                    pro.dataType = this.convertCOEleTypeProType(ele.MDataType);\r\n                    type.properties.push(pro);\r\n                }\r\n            });\r\n        }\r\n        //å¯¼èªå±æ§è½¬å\r\n        if (co.ContainChildObjects && co.ContainChildObjects.length > 0) {\r\n            co.ContainChildObjects.forEach(obj => {\r\n                let naPro = new NewNavigationProperty();\r\n                naPro.code = obj.Code + \"s\";\r\n                naPro.name = obj.Name;\r\n                naPro.navigationName = obj.ID;\r\n                naPro.navigationType = NewNavigationType.EntityType;\r\n                naPro.relationShip = \"\";\r\n                type.navigationProperties.push(naPro);\r\n                types.push(this.adaptCOOfNewSchema(obj as GSPCommonObject, types));\r\n            });\r\n        }\r\n        return type;\r\n    }\r\n\r\n    /**\r\n     * @description å°BEå®ä¹çå­æ®µç±»åè½¬æ¢ä¸ºç»ä¸Schemaçå­æ®µç±»å\r\n     * @param dataType BEå®ä¹çå±æ§ç±»å\r\n     * @returns NewDataType ç»ä¸Schemaçå±æ§ç±»å\r\n     */\r\n    public convertCOEleTypeProType(dataType: GSPElementDataType): NewDataType {\r\n        let type = NewDataType.String;\r\n        switch (dataType) {\r\n            case GSPElementDataType.String:\r\n            case GSPElementDataType.Text:\r\n                type = NewDataType.String;\r\n                break;\r\n            case GSPElementDataType.Integer:\r\n                type = NewDataType.Integer;\r\n                break;\r\n            case GSPElementDataType.Decimal:\r\n                type = NewDataType.Decimal;\r\n                break;\r\n            case GSPElementDataType.DateTime:\r\n                type = NewDataType.DateTime;\r\n                break;\r\n            case GSPElementDataType.Date:\r\n                type = NewDataType.Date;\r\n                break;\r\n            case GSPElementDataType.Boolean:\r\n                type = NewDataType.Boolean;\r\n                break;\r\n            case GSPElementDataType.Binary:\r\n                type = NewDataType.Byte;\r\n                break;\r\n        }\r\n        return type;\r\n    }\r\n\r\n}","import { Injectable, Injector, ApplicationRef, ComponentFactoryResolver, LOCALE_ID, Inject } from \"@angular/core\";\r\nimport { FilterConditionComponent } from \"./filter-condition/filter-condition.component\";\r\nimport { GspCommonDataType } from \"@gsp-bef/gsp-cm-metadata\";\r\nimport { GSPCommonObject } from \"@gsp-bef/gsp-cm-metadata\";\r\nimport { VarEntity } from \"@gsp-svc/expression\";\r\nimport { Schema } from \"@gsp-svc/expression\";\r\nimport { InjectedEntity } from \"@gsp-svc/expression\";\r\nimport { InjectedType } from '@gsp-svc/expression';\r\nimport { FilterInjectedEntity, FilterInjectedType } from \"./injected-entity\";\r\nimport { FilterEntitySchema } from \"./schema\";\r\nimport { PropertyAdapter } from \"./property-adapter\";\r\nimport { PropertyDataType } from \"./property-entity\";\r\nimport { Adapter } from \"./adapter\";\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { FilterConditionLocalePipe } from './filter-condition-locale.pipe';\r\nimport { NewSchema } from \"./NewSchema\";\r\nimport { Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n/**\r\n * è¿æ»¤è¡¨è¾¾å¼æå¡ç±»\r\n * @author linchang 2018/12/10\r\n */\r\n@Injectable()\r\nexport class FilterService {\r\n    i: number = 0;\r\n    adapter: Adapter = new Adapter();\r\n    //å±æ§åè¡¨\r\n    propertyList: Array<{ text: string, propertyDataType: PropertyDataType, value: string, parentItem: string }> = [];\r\n    //é¢ç½®è®¡ç®è¡¨è¾¾å¼åé\r\n    contextEntity: VarEntity[] = [];\r\n    expressionText: string = null;\r\n    expressionSchema = Array<{ name: string, schema: Schema }>();\r\n    expressionInjectedEntities: InjectedEntity[] = [];\r\n    expressionCDT: GspCommonDataType[] = [];\r\n    //é¢ç½®æ¡ä»¶è¡¨è¾¾å¼åé\r\n    filterExpressionString: string = null;//è¿æ»¤è¡¨è¾¾å¼åºååä¸²\r\n    schemaMap = new Map<string, FilterEntitySchema>();\r\n    newSchemaMap = new Map<string, NewSchema>();                         //è¿æ»¤è¡¨è¾¾å¼æ·»å NewSchema\r\n    injectedEntity: FilterInjectedEntity;\r\n    exprWinWidth: number = 850;\r\n    localePipe: FilterConditionLocalePipe;\r\n    localeId: string;\r\n    private modalService: BsModalService;\r\n    simpleModalConfig;\r\n    constructor(\r\n        private injector: Injector,\r\n        private applicationRef: ApplicationRef,\r\n        private compFactRes: ComponentFactoryResolver,\r\n        private http: HttpClient\r\n    ) {\r\n        this.modalService = this.injector.get(BsModalService);\r\n    }\r\n    // åå»ºè¡¨è¾¾å¼\r\n    public buildExpression() {\r\n        let that = this;\r\n        return new Promise(\r\n            function (resolve) {\r\n                const compFactory = that.compFactRes.resolveComponentFactory(FilterConditionComponent);\r\n                const compRef = compFactory.create(that.injector);\r\n                compRef.instance.propertyList = that.propertyList;\r\n                compRef.instance.contextEntity = that.contextEntity;\r\n                compRef.instance.expressionCDT = that.expressionCDT;\r\n                compRef.instance.expressionSchema = that.expressionSchema;\r\n                compRef.instance.expressionText = that.expressionText;\r\n                compRef.instance.expressionInjectedEntities = that.expressionInjectedEntities;\r\n                compRef.instance.filterExpressionString = that.filterExpressionString;\r\n                compRef.instance.schemaMap = that.schemaMap;\r\n                //===================ç»ä»¶å å¥newSchemaMap===============\r\n                compRef.instance.newSchemaMap = that.newSchemaMap;\r\n                //=====================================================    \r\n                compRef.instance.exprWinWidth = that.exprWinWidth;\r\n                that.localePipe = compRef.instance.localePipe;\r\n                const dialog = that.modalService.show(compRef, {\r\n                    title: that.localePipe.transform(\"WindowTitle\"),\r\n                    width: 1010,\r\n                    height: 550,\r\n                    showButtons: false\r\n                });\r\n                compRef.instance.closed.subscribe($event => dialog.close());\r\n                compRef.instance.result.subscribe((expressionContent) => {\r\n                    return resolve(expressionContent);\r\n                });\r\n            })\r\n    }\r\n    /**\r\n     *  é¢ç½®å±æ§åè¡¨\r\n     * @param name å±æ§è¯­ä¹\r\n     * @param displayName å±ç¤ºåç§°\r\n     * @param propertyDataType å±æ§æ°æ®ç±»å\r\n     */\r\n    public addProperty(name: string, displayName: string, propertyDataType: PropertyDataType): void {\r\n        let propertyEntity =\r\n        {\r\n            text: displayName,\r\n            propertyDataType: propertyDataType,\r\n            value: name,\r\n            parentItem: null\r\n        };\r\n        this.propertyList = this.propertyList.filter(item => item.value !== name);\r\n        this.propertyList.push(propertyEntity);\r\n    }\r\n\r\n    /**\r\n     * æ·»å ä¸ä¸æåé\r\n     * @param contextEntity ä¸ä¸æåé\r\n     */\r\n    public addExpressionContext(contextEntity: VarEntity): void {\r\n        this.contextEntity = this.contextEntity.filter(item => item.key !== contextEntity.key);\r\n        this.contextEntity.push(contextEntity);\r\n    }\r\n    /**\r\n     * é¢ç½®è¡¨è¾¾å¼é»è®¤æ¾ç¤º\r\n     * @param text é¢ç½®ææ¬\r\n     */\r\n    public addExpressionText(text: string): void {\r\n        this.expressionText = text;\r\n    }\r\n    /**\r\n     * é¢ç½®Schema\r\n     * @param name schemaåç§°\r\n     * @param schema schemaå®ä½\r\n     */\r\n    public addExpressionSchema(name: string, schema: Schema): void {\r\n        this.expressionSchema = this.expressionSchema.filter(item => item.name !== name);\r\n        this.expressionSchema.push({ name, schema });\r\n    }\r\n    /**\r\n     * é¢ç½®æ³¨åå®ä½\r\n     * @param name æ³¨åå®ä½å\r\n     * @param schemaName æå¨schemaçå\r\n     * @param typeNameInSchema å¨schemaä¸­åç§°\r\n     * @param injectedType æ³¨åçç±»å\r\n     * @author linchang 2018/12/10\r\n     */\r\n    public addExpressionInjectedEntity(name: string, schemaName: string, typeNameInSchema: string, injectedType: InjectedType): void {\r\n        //æé æ³¨å¥å®ä½å¯¹è±¡\r\n        let injectedEntity = new InjectedEntity();\r\n        injectedEntity.name = name;\r\n        injectedEntity.schemaName = schemaName;\r\n        injectedEntity.injectedName = typeNameInSchema;\r\n        injectedEntity.injectedType = injectedType;\r\n        this.expressionInjectedEntities.push(injectedEntity);\r\n    }\r\n    /**\r\n     * é¢ç½®CDT\r\n     * @param gspCDTs é¢ç½®çCDTéå\r\n     */\r\n    public addExpressionCDT(gspCDTs: GspCommonDataType[]): void {\r\n        this.expressionCDT = gspCDTs;\r\n    }\r\n    /**\r\n     * é¢ç½®è¿æ»¤æ¡ä»¶è¡¨è¾¾å¼\r\n     * @param filterExpression é¢ç½®çè¿æ»¤è¡¨è¾¾å¼ä¸²\r\n     */\r\n    public addFilterCondition(filterExpression: string) {\r\n        this.filterExpressionString = filterExpression;\r\n    }\r\n    /**\r\n     * é¢ç½®schema\r\n     * @param name schemaå,é»è®¤ä¸ºCO\r\n     * @param filterSchema schemaå®ä½\r\n     */\r\n    public addSchema(name: string, filterSchema: FilterEntitySchema) {\r\n        if (filterSchema == null) {\r\n            alert(\"Schema Cannot Null\");\r\n        }\r\n        else this.schemaMap.set(name, filterSchema);\r\n    }\r\n    /**\r\n     * æ·»å æ³¨å¥å®ä½\r\n     * @param name æ³¨å¥å®ä½å¨schemaä¸­çåç§°\r\n     * @param schemaName æ³¨å¥å®ä½æå¨çschemaå\r\n     * @param injectedType æ³¨å¥ç±»åï¼ä¸å¡«é»è®¤ä¸ºEntityType\r\n     */\r\n    public addInjectedEntity(name: string, schemaName: string, injectedType: FilterInjectedType = FilterInjectedType.EntityType) {\r\n        this.injectedEntity = new FilterInjectedEntity();\r\n        this.injectedEntity.name = name;\r\n        this.injectedEntity.schemaName = schemaName;\r\n        this.injectedEntity.injectedType = injectedType;\r\n        let propertyAdapter = new PropertyAdapter();\r\n        this.propertyList = propertyAdapter.adapter(this.injectedEntity, this.schemaMap);\r\n    }\r\n    /**\r\n     * æ·»å GSPCommonObject\r\n     * @param commonObject å¾è½¬åCO\r\n     */\r\n    public addCommonObject(commonObject: GSPCommonObject): void {\r\n        let schema;\r\n        //è¥schemaMapä¸­å­å¨COçschema\r\n        if (this.schemaMap.get(\"CommonObject\")) {\r\n            schema = this.schemaMap.get(\"CommonObject\");\r\n        }\r\n        else schema = new Schema;\r\n        //å°æ¯ä¸ä¸ªCOè½¬åä¸ºschemaåé¨ç»æä¸­çentityType\r\n        let entityTypes = this.adapter.convertCO(commonObject);\r\n        entityTypes.forEach(entityType => {\r\n            schema.entityTypes = schema.entityTypes.filter(item => item.name !== entityType.name);\r\n            schema.entityTypes.push(entityType);\r\n        });\r\n\r\n        //å°åå¹¶åçschemaæ¾å¥åé¨ä¸ä¸æå®ä½ä¸­\r\n        this.addSchema(\"CommonObject\", schema);\r\n    }\r\n    /**\r\n     * è®¾ç½®è®¡ç®è¡¨è¾¾å¼å¼¹åºæ¡å®½åº¦\r\n     * @param exprWinWidth \r\n     */\r\n    public addExprWinWidth(exprWinWidth: number) {\r\n        this.exprWinWidth = exprWinWidth;\r\n\r\n    }\r\n\r\n    //======================åä¸½åå²çº¿ä¹ç»ä¸ç»æSchema============================================================\r\n\r\n    /**\r\n     * @description ånewSchemaMapä¸­æ·»å NewSchema\r\n     * @param name Mapä¸­çkeyå¼\r\n     * @param schema Mapçvalue\r\n     */\r\n    public addNewSchema(name: string, schema: NewSchema) {\r\n        if (name != null && name != \"\" && schema != null) {\r\n            this.newSchemaMap.set(name, schema);\r\n        } else {\r\n            alert(\"Name or Schema is null !\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ·»å æ³¨å¥å®ä½\r\n     * @param name æ³¨å¥å®ä½å¨schemaä¸­çåç§°\r\n     * @param schemaName æ³¨å¥å®ä½æå¨çschemaå\r\n     * @param injectedType æ³¨å¥ç±»åï¼é»è®¤ä¸ºEntityType\r\n     */\r\n    public addInjectedEntityOfNewSchema(name: string, schemaName: string, injectedType: FilterInjectedType = FilterInjectedType.EntityType) {\r\n        this.injectedEntity = new FilterInjectedEntity();\r\n        this.injectedEntity.name = name;\r\n        this.injectedEntity.schemaName = schemaName;\r\n        this.injectedEntity.injectedType = injectedType;\r\n        let propertyAdapter = new PropertyAdapter();\r\n        this.propertyList = propertyAdapter.adapterOfNewSchema(this.injectedEntity, this.newSchemaMap);\r\n    }\r\n\r\n\r\n    //=======================================================================================================================\r\n}","import { FilterInjectedEntity, FilterInjectedType } from \"./injected-entity\";\r\nimport { FilterEntitySchema, FilterEntityType, FilterEntitySet } from \"./schema\";\r\nimport { NavigationType } from \"./navigation-property-entity\";\r\nimport { PropertyDataType } from \".\";\r\nimport { NewDataType, NewEntitySet, NewEntityType, NewNavigationType, NewSchema } from \"./NewSchema\";\r\n\r\nexport class PropertyAdapter {\r\n    entityName: string;\r\n    /**\r\n     * å±æ§ééå¨ï¼æ³¨å¥å¤çº§å®ä½è½¬åä¸ºArray\r\n     * @param injectedEntity æ³¨å¥çå®ä½\r\n     * @param schemaMap æ³¨å¥çschema\r\n     */\r\n    adapter(injectedEntity: FilterInjectedEntity, schemaMap: Map<string, FilterEntitySchema>) {\r\n        //æ ¹æ®æ³¨å¥schemaåå¾å°schema\r\n        let schema = schemaMap.get(injectedEntity.schemaName);\r\n        //æ ¹æ®æ³¨å¥ç±»ååå«è¿è¡è½¬å\r\n        switch (injectedEntity.injectedType) {\r\n            case FilterInjectedType.EntitySet:\r\n                {\r\n                    let entitySet = schema.entitySets.find(entitySet => entitySet.name == injectedEntity.name);\r\n                    return this.convertEntitySet(entitySet, schema);\r\n                }\r\n            case FilterInjectedType.EntityType:\r\n                {\r\n                    let entityType = schema.entityTypes.find(entityType => entityType.name == injectedEntity.name);\r\n                    return this.convertEntityType(entityType, schema);\r\n                }\r\n            default: break;\r\n        }\r\n    }\r\n    /**\r\n     * å°å®ä½ç±»è½¬åæArrray\r\n     * @param entityType è¢«è½¬æ¢çå®ä½ç±»\r\n     */\r\n    convertEntityType(entityType: FilterEntityType, schema: FilterEntitySchema): any {\r\n        let propertyList = Array<{ text: string, propertyDataType: PropertyDataType, value: string, parentItem: string }>();\r\n        //å¸¸è§å±æ§è½¬å\r\n        entityType.properties.forEach(property => {\r\n            let propertyListItem =\r\n            {\r\n                text: property.displayName,\r\n                propertyDataType: property.propertyDataType,\r\n                value: property.name,\r\n                parentItem: null\r\n            };\r\n            propertyList.push(propertyListItem);\r\n        });\r\n        //å¯¼èªå±æ§è½¬å\r\n        entityType.navigationProperties.forEach(navigationProperty => {\r\n            //æ ¹æ®å¯¼èªå±æ§ç±»åè¿è¡è½¬å\r\n            switch (navigationProperty.navigationType) {\r\n                //è¥å¯¼èªå±æ§ä¸ºEntitySet\r\n                case NavigationType.EntitySet:\r\n                    {\r\n                        //æ ¹æ®å¯¼èªå±æ§åæ¾å°schemaä¸­çEntitySet\r\n                        let entitySet = schema.entitySets.find(entitySet => entitySet.name == navigationProperty.navigationEntity);\r\n                        //å­å®ä½éè½¬åä¸ºArray\r\n                        this.convertEntitySet(entitySet, schema).forEach(element => {\r\n                            //è¥å­å®ä½ä¸­çæ¯ä¸ªå±æ§ç¶é¡¹ä¸ä¸ºç©ºï¼åå¨ç¶é¡¹ååæ·»å è¯¥å¯¼èªå±æ§åï¼ä¾å¦OrderItemåå Orderä¸ºOrders.OrderItem\r\n                            if (element.parentItem != null) {\r\n                                element.parentItem = navigationProperty.name + \".\" + element.parentItem;\r\n                            }\r\n                            //è¥ç¶é¡¹ä¸ºç©ºï¼åè®¾ç½®è¯¥å±æ§ç¶é¡¹ä¸ºå¯¼èªå±æ§å\r\n                            else {\r\n                                element.parentItem = navigationProperty.name;\r\n                            }\r\n                            //è®¾ç½®è¯¥å±æ§çæ¾ç¤ºåç§°\r\n                            element.text = navigationProperty.displayName + \".\" + element.text;\r\n                            propertyList.push(element);\r\n                        });\r\n                    } break;\r\n                //è¥å¯¼èªå±æ§ç±»åä¸ºEntityType\r\n                case NavigationType.EntityType:\r\n                    {\r\n                        //æ ¹æ®å¯¼èªå±æ§åæ¾å°schemaä¸­çEntityType\r\n                        let entityType = schema.entityTypes.find(entityType => entityType.name == navigationProperty.navigationEntity);\r\n                        //å­å®ä½è½¬åä¸ºArray\r\n                        this.convertEntityType(entityType, schema).forEach(element => {\r\n                            //è¥å­å®ä½ä¸­çæ¯ä¸ªå±æ§ç¶é¡¹ä¸ä¸ºç©ºï¼åå¨ç¶é¡¹ååæ·»å è¯¥å¯¼èªå±æ§åï¼ä¾å¦OrderItemåå Orderä¸ºOrder.OrderItem\r\n                            if (element.parentItem != null) {\r\n                                element.parentItem = navigationProperty.name + \".\" + element.parentItem;\r\n                            }\r\n                            //è¥ç¶é¡¹ä¸ºç©ºï¼åè®¾ç½®è¯¥å±æ§ç¶é¡¹ä¸ºå¯¼èªå±æ§å\r\n                            else {\r\n                                element.parentItem = navigationProperty.name;\r\n                            }\r\n                            //è®¾ç½®è¯¥å±æ§çæ¾ç¤ºåç§°\r\n                            element.text = navigationProperty.displayName + \".\" + element.text;\r\n                            propertyList.push(element);\r\n                        });\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n        return propertyList;\r\n    }\r\n    /**\r\n     * å®ä½éè½¬åä¸ºå±æ§åè¡¨\r\n     * @param entitySet å¾è½¬åå®ä½é\r\n     * @param schema æå¨schema\r\n     */\r\n    convertEntitySet(entitySet: FilterEntitySet, schema: FilterEntitySchema): any {\r\n        let propertyList = Array<{ text: string, propertyDataType: PropertyDataType, value: string }>();\r\n        let entityType = schema.entityTypes.find(entityType => entityType.name == entitySet.entityTypeName);\r\n\r\n        entityType.properties.forEach(property => {\r\n            let propertyListItem =\r\n            {\r\n                text: property.displayName,\r\n                propertyDataType: property.propertyDataType,\r\n                value: property.name,\r\n                parentItem: null\r\n            };\r\n            propertyList.push(propertyListItem);\r\n        });\r\n        if (entityType.navigationProperties.length != 0) {\r\n            //å¯¼èªå±æ§è½¬å\r\n            entityType.navigationProperties.forEach(navigationProperty => {\r\n\r\n                switch (navigationProperty.navigationType) {\r\n                    case NavigationType.EntitySet:\r\n                        {\r\n                            let entitySet = schema.entitySets.find(entitySet => entitySet.name == navigationProperty.navigationEntity);\r\n                            this.convertEntitySet(entitySet, schema).forEach(element => {\r\n\r\n                                if (element.parentItem != null) {\r\n                                    element.parentItem = navigationProperty.name + \".\" + element.parentItem;\r\n                                }\r\n                                else {\r\n                                    element.parentItem = navigationProperty.name;\r\n                                }\r\n                                element.text = navigationProperty.displayName + \".\" + element.text;\r\n                                propertyList.push(element);\r\n                            });\r\n                        } break;\r\n                    case NavigationType.EntityType:\r\n                        {\r\n                            let entityType = schema.entityTypes.find(entityType => entityType.name == navigationProperty.navigationEntity);\r\n                            this.convertEntityType(entityType, schema).forEach(element => {\r\n\r\n                                if (element.parentItem != null) {\r\n                                    element.parentItem = navigationProperty.name + \".\" + element.parentItem;\r\n                                }\r\n                                else {\r\n                                    element.parentItem = navigationProperty.name;\r\n                                }\r\n                                element.text = navigationProperty.displayName + \".\" + element.text;\r\n                                propertyList.push(element);\r\n                            });\r\n                        }\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n        return propertyList;\r\n    }\r\n\r\n    //==========================åå²çº¿ï¼NewSchemaï¼============================================\r\n    /**\r\n     * \r\n     * @param injectedEntity \r\n     * @param newSchemaMap \r\n     */\r\n    public adapterOfNewSchema(injectedEntity: FilterInjectedEntity, newSchemaMap: Map<string, NewSchema>) {\r\n        //injectedEntity.schemaNameæ¾å°Schema\r\n        let schema = newSchemaMap.get(injectedEntity.schemaName);\r\n\r\n        //injectedEntity.injectedTypeç¡®å®æ¾setsè¿æ¯types\r\n        switch (injectedEntity.injectedType) {\r\n            case FilterInjectedType.EntitySet: {\r\n                let set = schema.entitySets.find(set => set.code == injectedEntity.name);\r\n                return this.convertNewEntitySet(set, schema);\r\n            }\r\n            case FilterInjectedType.EntityType: {\r\n                let type = schema.entityTypes.find(type => type.code == injectedEntity.name);\r\n                return this.convertNewEntityType(type, schema);\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description è½¬æ¢EntityType\r\n     * @param type NewEntityType\r\n     * @param schema NewSchema\r\n     * @returns \r\n     */\r\n    convertNewEntityType(type: NewEntityType, schema: NewSchema): any {\r\n        let propertyList = Array<{ text: string, propertyDataType: PropertyDataType, value: string, parentItem: string }>();\r\n        //propertyè½¬æ¢\r\n        type.properties.forEach(pro => {\r\n            let propertyListItem =\r\n            {\r\n                value: pro.code,\r\n                text: pro.name,\r\n                propertyDataType: this.convertNewDataType2PropertyDataType(pro.dataType),\r\n                parentItem: null\r\n            };\r\n            propertyList.push(propertyListItem);\r\n        });\r\n        //navigationPropertyè½¬æ¢\r\n        type.navigationProperties.forEach(naPro => {\r\n            switch (naPro.navigationType) {\r\n                case NewNavigationType.EntitySet:\r\n                    {\r\n                        let naProSet = schema.entitySets.find(naProSet => naProSet.code == naPro.navigationName);\r\n                        this.convertNewEntitySet(naProSet, schema).forEach(ele => {\r\n                            if (ele.parentItem != null) {\r\n                                ele.parentItem = naPro.code + \".\" + ele.parentItem;\r\n                            } else {\r\n                                ele.parentItem = naPro.code;\r\n                            }\r\n                            ele.text = naPro.name + \".\" + ele.text;\r\n                            propertyList.push(ele);\r\n                        });\r\n                    }\r\n                    break;\r\n                case NewNavigationType.EntityType:\r\n                    {\r\n                        let naProType = schema.entityTypes.find(naProType => naProType.code == naPro.navigationName);\r\n                        this.convertNewEntityType(naProType, schema).forEach(ele => {\r\n                            if (ele.parentItem != null) {\r\n                                ele.parentItem = naPro.code + \".\" + ele.parentItem;\r\n                            } else {\r\n                                ele.parentItem = naPro.code;\r\n                            }\r\n                            ele.text = naPro.name + \".\" + ele.text;\r\n                            propertyList.push(ele);\r\n                        });\r\n                    }\r\n                    break;\r\n            }\r\n        })\r\n        return propertyList;\r\n    }\r\n\r\n\r\n    convertNewEntitySet(set: NewEntitySet, schema: NewSchema): any {\r\n        let propertyList = Array<{ text: string, propertyDataType: PropertyDataType, value: string, parentItem: string }>();\r\n        let type = schema.entityTypes.find(type => type.code == set.entityType);\r\n        type.properties.forEach(pro => {\r\n            let propertyListItem =\r\n            {\r\n                value: pro.code,\r\n                text: pro.name,\r\n                propertyDataType: this.convertNewDataType2PropertyDataType(pro.dataType),\r\n                parentItem: null\r\n            };\r\n            propertyList.push(propertyListItem);\r\n        });\r\n        if (type.navigationProperties.length != 0) {\r\n            type.navigationProperties.forEach(naPro => {\r\n                switch (naPro.navigationType) {\r\n                    case NewNavigationType.EntitySet:\r\n                        {\r\n                            let naProSet = schema.entitySets.find(naProSet => naProSet.code == naPro.navigationName);\r\n                            this.convertNewEntitySet(naProSet, schema).forEach(ele => {\r\n                                    if (ele.parentItem != null) {\r\n                                        ele.parentItem = naPro.code + \".\" + ele.parentItem;\r\n                                    } else {\r\n                                        ele.parentItem = naPro.code;\r\n                                    }\r\n                                    ele.text = naPro.name + \".\" + ele.text;\r\n                                    propertyList.push(ele);\r\n                            });\r\n                        }\r\n                        break;\r\n                    case NewNavigationType.EntityType:\r\n                        {\r\n                            let naProType = schema.entityTypes.find(naProType => naProType.code == naPro.navigationName);\r\n                            this.convertNewEntityType(naProType, schema).forEach(ele => {\r\n                                if (ele.parentItem != null) {\r\n                                    ele.parentItem = naPro.code + \".\" + ele.parentItem;\r\n                                } else {\r\n                                    ele.parentItem = naPro.code;\r\n                                }\r\n                                ele.text = naPro.name + \".\" + ele.text;\r\n                                propertyList.push(ele);\r\n                            });\r\n                        }\r\n                        break;\r\n                }\r\n            })\r\n        }\r\n        return propertyList;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param newType ç»ä¸Schemaçå±æ§\r\n     * @returns \r\n     */\r\n    convertNewDataType2PropertyDataType(newType: NewDataType): PropertyDataType {\r\n        let type = PropertyDataType.String;\r\n        switch (newType) {\r\n            case NewDataType.Boolean:\r\n                type = PropertyDataType.Boolean;\r\n                break;\r\n            case NewDataType.Byte:\r\n                type = PropertyDataType.Byte;\r\n                break;\r\n            case NewDataType.Date:\r\n                type = PropertyDataType.DateTime;\r\n                break;\r\n            case NewDataType.DateTime:\r\n                type = PropertyDataType.DateTime;\r\n                break;\r\n            case NewDataType.Decimal:\r\n                type = PropertyDataType.Decimal;\r\n                break;\r\n            case NewDataType.Integer:\r\n                type = PropertyDataType.Int32;\r\n                break;\r\n            case NewDataType.String:\r\n                type = PropertyDataType.String;\r\n                break;\r\n        }\r\n        return type;\r\n    }\r\n\r\n}","import { Component, ViewChild, Input, EventEmitter, Output, OnInit, OnChanges, ViewEncapsulation, LOCALE_ID, Inject, Injector } from '@angular/core';\r\nimport { TreeTableComponent, TreeNode } from '@farris/ui-treetable';\r\nimport { FilterExpression, ExpressionItem } from '../filter-expression-entity';\r\nimport { VarEntity } from '@gsp-svc/expression';\r\nimport { Schema } from '@gsp-svc/expression';\r\nimport { GspCommonDataType } from '@gsp-bef/gsp-cm-metadata';\r\nimport { InjectedEntity } from '@gsp-svc/expression';\r\nimport { ExpressTypeEnum, RelationTypeEnum, CompareTypeEnum } from '../typeinfo';\r\nimport { ExpressionService } from '@gsp-svc/expression';\r\nimport { PropertyDataType } from '../property-entity';\r\nimport { FieldType } from '../field-type';\r\nimport { FilterInjectedEntity } from '../injected-entity';\r\nimport { PropertyAdapter } from '../property-adapter';\r\nimport { FilterEntitySchema, FilterEntityType } from '../schema';\r\nimport { GSPCommonObject } from '@gsp-bef/gsp-cm-metadata';\r\nimport { Adapter } from '../adapter';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { FilterConditionLocalePipe } from '../filter-condition-locale.pipe';\r\nimport { NewSchema } from '../NewSchema';\r\n@Component({\r\n  selector: 'app-filter-expression',\r\n  templateUrl: './filter-expression.component.html',\r\n  styleUrls: ['./filter-expression.component.css'],\r\n  providers: [ExpressionService, PropertyAdapter],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n/**\r\n * è¿æ»¤æ¡ä»¶é¢æ¿é»è¾ç±»\r\n */\r\nexport class FilterExpressionComponent implements OnChanges {\r\n  localePipe: FilterConditionLocalePipe;\r\n  constructor(private expr: ExpressionService,\r\n    private propertyAdapter: PropertyAdapter,\r\n    private notifyservice: NotifyService,\r\n    private injector: Injector,\r\n    @Inject(LOCALE_ID) localeId: string) {\r\n    this.localePipe = new FilterConditionLocalePipe(localeId);\r\n  }\r\n  treeDataTemp: TreeNode[]\r\n  //è·å¾æ åè¡¨ç»ä»¶æ\r\n  @ViewChild('tt') tt: TreeTableComponent;\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼ä¸ä¸æå®ä½\r\n  @Input() contextEntity: VarEntity[] = [];\r\n  //é¢ç½®è®¡ç®é»è®¤è¡¨è¾¾å¼æ¾ç¤º\r\n  @Input() expressionText: string = \"\";\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼ä¸­çschema\r\n  @Input() expressionSchema: Array<{ name: string, schema: Schema }> = [];\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼ä¸­çæ³¨å¥å®ä½\r\n  @Input() expressionInjectedEntities: InjectedEntity[] = [];\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼cdté\r\n  @Input() expressionCDT: GspCommonDataType[] = [];\r\n  //é¢ç½®å±æ§åè¡¨\r\n  @Input() propertyList: Array<{ text: string, value: string, propertyFieldType: PropertyDataType }> = [];\r\n  //é¢ç½®è¿æ»¤è¡¨è¾¾å¼ä¸²\r\n  @Input() filterExpressionString: string = null;\r\n  //é¢ç½®schemaå\r\n  @Input() schemaName: string;\r\n  //é¢ç½®è¿æ»¤è¡¨è¾¾å¼schema\r\n  @Input() schema: FilterEntitySchema;\r\n  //===========================åå²çº¿ä¹NewSchema===============================\r\n  @Input() newSchema: NewSchema;\r\n  //schemaå­å¨ç»æ\r\n  filterNewSchemaMap = new Map<string, NewSchema>();\r\n  //==========================================================================\r\n  //è¿æ»¤è¡¨è¾¾å¼æ³¨å¥å®ä½\r\n  @Input() injectedEntity: FilterInjectedEntity;\r\n  //æ³¨å¥CO\r\n  @Input() gspCommonObject: GSPCommonObject;\r\n\r\n  @Input() disabled: boolean = false;\r\n  //åé¨å±æ§åè¡¨ä½¿ç¨\r\n  propertyListInner: Array<{ text: string, propertyDataType: PropertyDataType, value: string, parentItem: string }> = [];\r\n  //æä½æ¯è¾ç¬¦é\r\n  public operators = [];\r\n\r\n  public stringOperators = [];\r\n\r\n  public NumberOperators = [];\r\n  //å³ç³»é\r\n  public relations = [];\r\n  //è¡¨è¾¾å¼ç±»åé\r\n  public expressTypes = [];\r\n  public filterExpression: FilterExpression;\r\n  //æ å½¢ç»æèç¹å®ä½é\r\n  public nodeTemp: TreeNode[];\r\n  defaultSelectGroup: string;\r\n  defaultSelectItem: string;\r\n  //æä½æ¯è¾ç¬¦é»è®¤æ¾ç¤ºå¼\r\n  public defaultOperatorText: string;\r\n  //è¡¨è¾¾å¼ç±»åé»è®¤æ¾ç¤ºå¼\r\n  public defaultExpressTypeText;\r\n\r\n  public displayPopup: boolean = false;\r\n  // public defaultOperator: { text: string, value: string } = { text: null, value: null };\r\n  //è¡¨è¾¾å¼ç±»åé»è®¤æ¾ç¤ºå¼ \r\n  // public defaultExpressType: { text: string, value: string } = { text: null, value: null };\r\n  //é¢ç½®è¿æ»¤è¡¨è¾¾å¼å®ä½\r\n  public filterExpressionPre: FilterExpression;\r\n  //æ£æ¥è¿æ»¤æ¡ä»¶å®ä½æ¯å¦å®æ´æ­£ç¡®\r\n  public checkFilterStruc: boolean = true;\r\n  //schemaå­å¨ç»æ\r\n  filterSchemaMap = new Map<string, FilterEntitySchema>();\r\n  adapter: Adapter = new Adapter();\r\n  treeData: TreeNode[] = [];\r\n  columnWidth = [\"30%\", \"20%\", \"20%\", \"20%\", \"10%\"];\r\n  //æ¶æ¯æç¤º\r\n  private notifies = {};\r\n  cols: any[];\r\n  //åå§åï¼å¤å¶treeDataå¼,treeDataTempç¨äºè½¬æ¢ä¸ºFilterExpressionå®ä½\r\n  ngOnChanges(): void {\r\n    //å¹¶ä¸æ å½¢è¡¨ç»å®çæ¾ç¤ºçå \r\n    this.cols = [\r\n      { field: 'item', title: this.localePipe.transform(\"Item\"), width: 271 },\r\n      { field: 'operator', title: this.localePipe.transform(\"Operator\"), width: 191 },\r\n      { field: 'expressType', title: this.localePipe.transform(\"ExpressType\"), width: 180 },\r\n      { field: 'value', title: this.localePipe.transform(\"Value\"), width: 214 },\r\n      { field: 'operation', title: this.localePipe.transform(\"Operation\"), width: 130 }];\r\n\r\n    this.propertyListInner = [];\r\n    this.treeDataTemp = this.treeData;\r\n    //=================================åå²çº¿ä¹NewSchema====================================\r\n    //æ³¨å¥NewSchema\r\n    if (this.schemaName && this.newSchema) {\r\n      this.addNewSchema(this.schemaName, this.newSchema);\r\n      //æ³¨å¥co\r\n      if (this.gspCommonObject) {\r\n        let newSchema: NewSchema;\r\n        //è¥schemaMapä¸­å­å¨COçschema\r\n        if ((this.filterNewSchemaMap.get(\"CommonObject\"))) {\r\n          newSchema = this.filterNewSchemaMap.get(\"CommonObject\");\r\n        } else {\r\n          newSchema = new NewSchema();\r\n        }\r\n        //å°æ¯ä¸ä¸ªCOè½¬åä¸ºschemaåé¨ç»æä¸­çentityType\r\n        let entityTypes = this.adapter.convertCOOfNewSchema(this.gspCommonObject);\r\n        if ((entityTypes) && entityTypes.length != 0) {\r\n          entityTypes.forEach(entityType => {\r\n            if (newSchema.entityTypes.find(x => x.code == entityType.code) == null) {\r\n              newSchema.entityTypes.push(entityType);\r\n            }\r\n          });\r\n        }\r\n        //å°åå¹¶åçschemaæ¾å¥åé¨ä¸ä¸æå®ä½ä¸­\r\n        this.addNewSchema(\"CommonObject\", newSchema);\r\n      }\r\n      //æ·»å å±æ§åè¡¨\r\n      this.propertyList.forEach(property => {\r\n        let propertyInner =\r\n        {\r\n          value: property.value,\r\n          text: property.text,\r\n          propertyDataType: property.propertyFieldType,\r\n          parentItem: null\r\n        };\r\n        this.propertyListInner.push(propertyInner);\r\n      });\r\n      if ((this.injectedEntity)) {\r\n        this.propertyAdapter.adapterOfNewSchema(this.injectedEntity, this.filterNewSchemaMap).forEach(element => {\r\n          this.propertyListInner.push(element);\r\n        });\r\n      }\r\n    } else {\r\n      //===========================================æ§Schema==========================================\r\n      if (this.schemaName != null && (this.schema)) {\r\n        this.addSchema(this.schemaName, this.schema);\r\n      }\r\n      if ((this.gspCommonObject)) {\r\n        let schema: FilterEntitySchema;\r\n        //è¥schemaMapä¸­å­å¨COçschema\r\n        if ((this.filterSchemaMap.get(\"CommonObject\"))) {\r\n          schema = this.filterSchemaMap.get(\"CommonObject\");\r\n        }\r\n        else\r\n          schema = new FilterEntitySchema();\r\n        //å°æ¯ä¸ä¸ªCOè½¬åä¸ºschemaåé¨ç»æä¸­çentityType\r\n        let entityTypes = this.adapter.convertCO(this.gspCommonObject);\r\n        if ((entityTypes) && entityTypes.length != 0) {\r\n          entityTypes.forEach(entityType => {\r\n            if (schema.entityTypes.find(x => x.name == entityType.name) == null) {\r\n              schema.entityTypes.push(entityType);\r\n            }\r\n          });\r\n        }\r\n        //å°åå¹¶åçschemaæ¾å¥åé¨ä¸ä¸æå®ä½ä¸­\r\n        this.addSchema(\"CommonObject\", schema);\r\n      }\r\n      this.propertyList.forEach(property => {\r\n        let propertyInner =\r\n        {\r\n          text: property.text,\r\n          propertyDataType: property.propertyFieldType,\r\n          value: property.value,\r\n          parentItem: null\r\n        };\r\n        this.propertyListInner.push(propertyInner);\r\n      });\r\n      if ((this.injectedEntity)) {\r\n        this.propertyAdapter.adapter(this.injectedEntity, this.filterSchemaMap).forEach(element => {\r\n          this.propertyListInner.push(element);\r\n        });\r\n      }\r\n    }\r\n\r\n    this.defaultExpressTypeText = this.localePipe.transform(\"Value\");\r\n    this.defaultSelectGroup = this.localePipe.transform('And');\r\n    this.defaultSelectItem = this.localePipe.transform(\"SelectItem\");\r\n    this.defaultOperatorText = this.localePipe.transform(\"GreaterThan\");\r\n    this.notifies = {\r\n      1: { type: 'success', msg: this.localePipe.transform(\"Success\") },\r\n      2: { type: 'warning', msg: this.localePipe.transform(\"Warning_SelectRelation\") },\r\n      3: { type: 'warning', msg: this.localePipe.transform(\"Warning_ContainsFilters\") },\r\n      4: { type: 'warning', msg: this.localePipe.transform(\"Warning_ConditionsComplete\") },\r\n      5: { type: 'warning', msg: this.localePipe.transform(\"Warning_NumericMatch\") }\r\n    };\r\n    this.expressTypes = [\r\n      { id: this.localePipe.transform(\"Value\") },\r\n      { id: this.localePipe.transform(\"Expression\") }\r\n    ];\r\n    this.relations = [\r\n      { id: this.localePipe.transform(\"And\") },\r\n      { id: this.localePipe.transform(\"Or\") },\r\n    ];\r\n    this.NumberOperators = [\r\n      { id: this.localePipe.transform(\"GreaterThan\") },\r\n      { id: this.localePipe.transform(\"GreaterThanOrEqual\") },\r\n      { id: this.localePipe.transform(\"LessThan\") },\r\n      { id: this.localePipe.transform(\"LessThanOrEqual\") },\r\n      { id: this.localePipe.transform(\"Equal\") },\r\n      { id: this.localePipe.transform(\"NotEqual\") },\r\n      { id: this.localePipe.transform(\"IsNull\") },\r\n      { id: this.localePipe.transform(\"IsNotNull\") },\r\n    ];\r\n    this.stringOperators = [\r\n      { id: this.localePipe.transform(\"Equal\") },\r\n      { id: this.localePipe.transform(\"NotEqual\") },\r\n      { id: this.localePipe.transform(\"Contains\") },\r\n      { id: this.localePipe.transform(\"NotContains\") },\r\n      { id: this.localePipe.transform(\"StartsWith\") },\r\n      { id: this.localePipe.transform(\"EndsWith\") },\r\n      { id: this.localePipe.transform(\"NotStartsWith\") },\r\n      { id: this.localePipe.transform(\"NotEndsWith\") },\r\n      { id: this.localePipe.transform(\"IsNull\") },\r\n      { id: this.localePipe.transform(\"IsNotNull\") },\r\n    ];\r\n    this.operators = [\r\n      { id: this.localePipe.transform(\"GreaterThan\") },\r\n      { id: this.localePipe.transform(\"GreaterThanOrEqual\") },\r\n      { id: this.localePipe.transform(\"LessThan\") },\r\n      { id: this.localePipe.transform(\"LessThanOrEqual\") },\r\n      { id: this.localePipe.transform(\"Equal\") },\r\n      { id: this.localePipe.transform(\"NotEqual\") },\r\n      { id: this.localePipe.transform(\"Contains\") },\r\n      { id: this.localePipe.transform(\"NotContains\") },\r\n      { id: this.localePipe.transform(\"StartsWith\") },\r\n      { id: this.localePipe.transform(\"EndsWith\") },\r\n      { id: this.localePipe.transform(\"NotStartsWith\") },\r\n      { id: this.localePipe.transform(\"NotEndsWith\") },\r\n      { id: this.localePipe.transform(\"IsNull\") },\r\n      { id: this.localePipe.transform(\"IsNotNull\") },\r\n      { id: this.localePipe.transform(\"In\") },\r\n      { id: this.localePipe.transform(\"NotIn\") },\r\n    ];\r\n    this.onCancel();\r\n  }\r\n\r\n  //=================æ·»å NewSchema=====================\r\n  /**\r\n   * @description æ·»å NewSchemaå°Mapä¸­\r\n   * @param name schemaåç§°\r\n   * @param filterNewSchema æ³¨å¥çç»ä¸ç»æNewSchema\r\n   */\r\n  addNewSchema(name: string, filterNewSchema: NewSchema) {\r\n    this.filterNewSchemaMap.set(name, filterNewSchema);\r\n  }\r\n  //==================================================\r\n\r\n  /**\r\n   * æ·»å schemaå¥Map\r\n   * @param name schemaå\r\n   * @param filterSchema \r\n   */\r\n  addSchema(name: string, filterSchema: FilterEntitySchema) {\r\n    this.filterSchemaMap.set(name, filterSchema);\r\n  }\r\n  /**\r\n   * æ å½¢è¡¨ä¸­èç¹éæ©è§¦åå½æ°\r\n   * @param $event æéèç¹ä¿¡æ¯\r\n   */\r\n  nodeSelected($event) {\r\n    //éèæææçèç¹éæ©ç¼è¾æ¡ï¼åæ¬å­èç¹ç\r\n    this.hideNodeEditor(this.treeData);\r\n    //å°æéèç¹æ¯è¾é¡¹ãè¡¨è¾¾å¼ç±»åé¡¹ãå¼ç¼è¾æ¡æ¾ç¤ºï¼å¹¶å°æéå¯¹åºæ°æ®èµç»é»è®¤é¡¹è¿è¡æ¾ç¤º\r\n    this.defaultOperatorText = $event.node.data.operator;\r\n    this.defaultExpressTypeText = $event.node.data.expressType;\r\n    if ($event.node.data.item == this.localePipe.transform('And') || $event.node.data.item == this.localePipe.transform('Or')) {\r\n      this.defaultSelectGroup = $event.node.data.item;\r\n    }\r\n    else if ($event.node.data.item !== this.localePipe.transform(\"SelectProperty\")) {\r\n      let properties = this.propertyListInner.filter(x => x.text == $event.node.data.item);\r\n      this.defaultSelectItem = properties[0].value;\r\n    }\r\n    else if ($event.node.data.item == this.localePipe.transform(\"SelectProperty\")) {\r\n      this.defaultSelectItem = $event.node.data.item;\r\n    }\r\n    this.treeData = [...this.treeData];\r\n    $event.node.data.displayOperator = true;\r\n    $event.node.data.displayExpressType = true;\r\n    $event.node.data.displayValue = true;\r\n    $event.node.data.displaySelect = true;\r\n  };\r\n  /**\r\n   * éèæææçèç¹éæ©ç¼è¾æ¡ï¼åæ¬å­èç¹ç\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   */\r\n  hideNodeEditor(treeNodes: TreeNode[]) {\r\n    treeNodes.forEach(element => {\r\n      element.data.displayOperator = false;\r\n      element.data.displayExpressType = false;\r\n      element.data.displayValue = false;\r\n      element.data.displaySelect = false;\r\n      //è¥æå­èç¹ï¼åå°å¶å­èç¹çç¼è¾éæ©æ¡éè\r\n      if ((element.children) && element.children.length != 0) {\r\n        this.hideNodeEditor(element.children);\r\n      }\r\n    });\r\n  };\r\n  //èç¹æªéæ©å½æ°\r\n  nodeUnSelect() {\r\n    console.log(\"nodeUnselect\");\r\n  };\r\n  /***\r\n  * éæ©é»è¾éæ¶\r\n  */\r\n  selectGroup($event) {\r\n    this.propertyNodeOperate($event, this.treeData, FieldType.Group);\r\n  }\r\n  /***\r\n   * éæ©é¡¹æ¶\r\n   */\r\n  selectItem($event) {\r\n    this.propertyNodeOperate($event, this.treeData, FieldType.Item);\r\n  }\r\n  /**\r\n   * éæ©æ¯è¾æä½ç¬¦æ¶\r\n   * @param $event æ¯è¾æä½é¡¹ä¿¡æ¯\r\n   */\r\n  selectOperator($event) {\r\n    this.propertyNodeOperate($event, this.treeData, FieldType.Operation);\r\n  };\r\n  /**\r\n   * éæ©å¼ç±»åæ¶\r\n   * @param $event å¼ç±»åé¡¹ä¿¡æ¯\r\n   */\r\n  selectExpressType($event) {\r\n    this.propertyNodeOperate($event, this.treeData, FieldType.Valuetype);\r\n  };\r\n  /**\r\n   * éæ©ç»æåéèè¯¥å­æ®µéæ©æ¡\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   * @param fieldType æéå­æ®µ\r\n   */\r\n  hideFieldEditor(treeNodes: TreeNode[], fieldType: FieldType) {\r\n    //æ¾å°ææä½çèç¹ï¼æ ¹æ®æéæ©çå­æ®µå°å¯¹åºéæ©ç¼è¾æ¡éè\r\n    treeNodes.forEach(treeNode => {\r\n      if (this.tt.isSelected(treeNode)) {\r\n        switch (fieldType) {\r\n          case FieldType.Item: treeNode.data.displaySelect = false; break;\r\n          case FieldType.Operation: treeNode.data.displayOperator = false; break;\r\n          case FieldType.Valuetype: treeNode.data.displayExpressType = false; break;\r\n        }\r\n        return;\r\n      }\r\n      //è¥æªæ¾å°æéèç¹ï¼åæ¾å¶å­èç¹\r\n      else if ((treeNode.children) && treeNode.children.length != 0) {\r\n        this.hideFieldEditor(treeNode.children, fieldType);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * æå¼è®¡ç®è¡¨è¾¾å¼ç¼è¾å¨\r\n   */\r\n  openExpressEditor() {\r\n    let that = this;\r\n    //æ·»å é¢ç½®ä¸ä¸æåé\r\n    if (this.contextEntity && this.contextEntity.length != 0) {\r\n      this.contextEntity.forEach(element => {\r\n        this.expr.addContext(element);\r\n      });\r\n    }\r\n    //æ·»å é¢ç½®è¡¨è¾¾å¼ææ¬\r\n    let selectNode = this.isSelected(this.treeData);\r\n    if ((selectNode) && (selectNode.data.value != \"\") && (selectNode.data.value != null)) {\r\n      this.expr.addExpressionText(selectNode.data.value);\r\n    }\r\n    else this.expr.addExpressionText(this.expressionText);\r\n    //æ·»å æ³¨å¥å®ä½\r\n    this.expressionInjectedEntities.forEach(element => {\r\n      this.expr.addInjectedEntity(element.name, element.schemaName, element.injectedName, element.injectedType);\r\n    });\r\n    //æ·»å CDT\r\n    this.expr.addCDT(this.expressionCDT);\r\n    //æ·»å schema\r\n    this.expressionSchema.forEach(element => {\r\n      this.expr.addSchema(element.name, element.schema);\r\n    });\r\n    //æå¼è¡¨è¾¾å¼ç¼è¾å¨å¹¶è¿åç¼è¾ç»æ\r\n    this.expr.buildExpression().then(info => {\r\n      let expressInfo: any = info;\r\n      this.displayExpressResult(that.treeData, expressInfo);\r\n    });\r\n  }\r\n  /**\r\n   * éä¸­èç¹éæ©\r\n   * @param treeNodes å³ç³»ç»\r\n   */\r\n  isSelected(treeNodes: TreeNode[]): any {\r\n    let treeNode: TreeNode;\r\n    for (var i = 0; i < treeNodes.length; i++) {\r\n      if (this.tt.isSelected(treeNodes[i])) {\r\n        treeNode = treeNodes[i];\r\n        break;\r\n      }\r\n      //è¥å¨è¯¥å±èç¹ä¸­æªæ¾å°æéèç¹ï¼åæ¾å¶å­èç¹\r\n      else if ((treeNodes[i].children) && treeNodes[i].children.length != 0) {\r\n        treeNode = this.isSelected(treeNodes[i].children);\r\n        if ((treeNode)) break;\r\n      }\r\n    }\r\n    return treeNode;\r\n  }\r\n  /**\r\n   * å°è®¡ç®è¡¨è¾¾å¼ç»æå±ç¤ºå°å¯¹åºèç¹\r\n   * @param treeNodes æ è¡¨ç»å®ç»æ\r\n   * @param expressInfo è®¡ç®è¡¨è¾¾å¼å¾å°ç»æ\r\n   */\r\n  displayExpressResult(treeNodes: TreeNode[], expressInfo: string) {\r\n    //æ¾å°æéèç¹å®ä½ï¼å¹¶å°è®¡ç®è¡¨è¾¾å¼æå¾ç»æèµç»å¯¹åºå±æ§è¿è¡æ¾ç¤º\r\n    treeNodes.forEach(treeNode => {\r\n      if (this.tt.isSelected(treeNode)) {\r\n        treeNode.data.value = expressInfo;\r\n        return;\r\n      }\r\n      //è¥å¨è¯¥å±èç¹ä¸­æªæ¾å°æéèç¹ï¼åæ¾å¶å­èç¹\r\n      else if ((treeNode.children) && treeNode.children.length != 0) {\r\n        this.displayExpressResult(treeNode.children, expressInfo);\r\n      }\r\n      //è¥ä»æªæ¾å°ï¼åä¸è¿è¡ä»»ä½æä½\r\n    });\r\n  }\r\n  /**\r\n   * å³ç³»éæ©æé®éæ©äºä»¶\r\n   * @param $event éæ©æé®æéä¿¡æ¯\r\n   */\r\n  itemClick($event) {\r\n    //è¥éæ©æ·»å å³ç³»\r\n    if ($event.value == RelationTypeEnum.AddRelation) {\r\n      this.addNode(this.treeData, this.localePipe.transform('And'), null, null);\r\n    }\r\n    //è¥éæ©æ·»å å±æ§\r\n    else if ($event.value == RelationTypeEnum.AddProperty) {\r\n      this.addNode(this.treeData, this.localePipe.transform(\"SelectProperty\"), this.localePipe.transform(\"Equal\"), this.localePipe.transform(\"Value\"));\r\n    }\r\n    else this.propertyNodeOperate($event, this.treeData, FieldType.Item);\r\n  }\r\n  /**\r\n   * éæ©å±æ§èç¹æä½\r\n   * å¯¹æ°æ·»å çå±æ§èç¹è¿è¡é»è¾å¤ç\r\n   * @param event ç¹å»äºä»¶\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   * @param fieldType èç¹ç±»å\r\n   */\r\n  propertyNodeOperate(event: any, treeNodes: TreeNode[], fieldType: FieldType) {\r\n    treeNodes.forEach(treenode => {\r\n      if (this.tt.isSelected(treenode)) {\r\n        //å¯¹æéèç¹è¿è¡èµå¼æä½\r\n        switch (fieldType) {\r\n          case FieldType.Group:\r\n            {\r\n              treenode.data.item = event.data.id;\r\n              this.defaultSelectGroup = event.data.id;\r\n            } break;\r\n          case FieldType.Item:\r\n            {\r\n              treenode.data.item = event.data.text;\r\n              this.defaultSelectItem = event.data.value;\r\n              treenode.data.parentItem = event.data.parentItem;\r\n              treenode.data.propertyDataType = event.data.propertyDataType;\r\n            } break;\r\n          case FieldType.Operation:\r\n            {\r\n              treenode.data.operator = event.data.id;\r\n              this.defaultOperatorText = event.data.id;\r\n            } break;\r\n          case FieldType.Valuetype:\r\n            {\r\n              treenode.data.expressType = event.data.id;\r\n              this.defaultExpressTypeText = event.data.id;\r\n            } break;\r\n        }\r\n        return;\r\n      }\r\n      //å¦åå¯¹å¶å­èç¹è¿è¡èµå¼æä½\r\n      else if ((treenode.children) && treenode.children.length != 0) {\r\n        this.propertyNodeOperate(event, treenode.children, fieldType);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * æ ¹æ®æéä¸ºå³ç³»æèå±æ§å¯¹æ°èç¹è¿è¡åå§å\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   * @param defaultString æ°èç¹æ¾ç¤ºé»è®¤å¼\r\n   */\r\n  addNode(treeNodes: TreeNode[], defaultString: any, defaultOperator: string, defalutExpressType: string) {\r\n    treeNodes.forEach(treeNode => {\r\n      if (this.tt.isSelected(treeNode)) {\r\n        //è¥å³ç³»å¼ä¸ºç©º\r\n        if (!(treeNode.data.item)) {\r\n          this.notifyservice[this.notifies['2'].type]({\r\n            msg: this.notifies['2'].msg\r\n          });\r\n          return;\r\n        }\r\n        //è¥ä¸ºæéçå³ç³»èç¹ï¼åå¨å¶å­é¡¹éæ·»å æ°å­èç¹\r\n        let newNode: TreeNode =\r\n        {\r\n          data:\r\n          {\r\n            \"item\": defaultString,\r\n            \"propertyDataType\": null,    //å±æ§æ°æ®ç±»å\r\n            \"operator\": defaultOperator,\r\n            \"expressType\": defalutExpressType,\r\n            \"value\": null,\r\n            \"id\": Math.random(),\r\n            \"parentItem\": null\r\n          },\r\n          parent: treeNode,\r\n          children: [],\r\n          expanded: true\r\n        };\r\n        //åè¯¥æéèç¹çå­é¡¹æ·»å æ°èç¹\r\n        treeNode.children.push(newNode);\r\n        return;\r\n      }\r\n      //è¥æªæ¾å°æéèç¹ï¼ä¸è¯¥èç¹å­é¡¹ä¸ä¸ºç©ºï¼åå¨å¶å­é¡¹ä¸­æ¥æ¾æéèç¹\r\n      else if ((treeNode.children) && treeNode.children.length != 0) {\r\n        this.addNode(treeNode.children, defaultString, defaultOperator, defalutExpressType);\r\n      }\r\n    });\r\n    this.tt.updateSerializedValue();\r\n  }\r\n  /**\r\n   * å é¤èç¹\r\n   * @param treeNode è¦å é¤çèç¹\r\n   */\r\n  deleteNode($event) {\r\n    this.onDelete(this.treeData, $event);\r\n  }\r\n  /**\r\n  * éç½®(å¤é¨è°ç¨)\r\n  * éç½®ä¸ºåå§ç¶æ\r\n  */\r\n  onCancel() {\r\n    if (this.filterExpressionString == null || this.filterExpressionString == \"\") {\r\n      this.treeData = [\r\n        {\r\n          data:\r\n          {\r\n            \"id\": 1,                    //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n            \"item\": this.localePipe.transform('And'),               //å±æ§é¡¹\r\n            \"propertyDataType\": null,    //å±æ§æ°æ®ç±»å\r\n            \"operator\": null,           //æä½æ¯è¾ç¬¦\r\n            \"expressType\": null,        //è¡¨è¾¾å¼ç±»å\r\n            \"value\": null,              //å¼\r\n            \"displaySelect\": false,      //éæ©é¡¹æ¾ç¤º\r\n            \"displayOperator\": false,   //æä½ç¬¦é¡¹æ¾ç¤º\r\n            \"displayExpressType\": false,//è¡¨è¾¾å¼ç±»åæ¾ç¤º\r\n            \"displayValue\": false,      //å¼æ¾ç¤º\r\n            \"parentItem\": null           //ç¶é¡¹\r\n          },\r\n          children: [],                 //å­èç¹éå\r\n          expanded: true                //æ¯å¦å±å¼\r\n        }\r\n      ];\r\n    }\r\n    else {\r\n      this.filterExpressionPre = JSON.parse(this.filterExpressionString);\r\n      this.treeData = [];\r\n      this.treeData.push(this.unConvert(this.filterExpressionPre));\r\n      this.treeData[0].data.id = 1;\r\n    }\r\n  }\r\n  /**\r\n   * å é¤èç¹å·ä½å®ç°ç±»\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   */\r\n  onDelete(treeNodes: TreeNode[], id: number) {\r\n    treeNodes.forEach(treeNode => {\r\n      if (treeNode.data.id == id) {\r\n        if (treeNode.data.id == 1) {\r\n          this.treeData = [\r\n            {\r\n              data:\r\n              {\r\n                \"id\": 1,                    //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n                \"item\": this.localePipe.transform('And'),              //å±æ§é¡¹\r\n                \"propertyDataType\": null,   //å±æ§æ°æ®ç±»å\r\n                \"operator\": null,           //æä½æ¯è¾ç¬¦\r\n                \"expressType\": null,        //è¡¨è¾¾å¼ç±»å\r\n                \"value\": null,              //å¼\r\n                \"displaySelect\": false,      //éæ©é¡¹æ¾ç¤º\r\n                \"displayOperator\": false,   //æä½ç¬¦é¡¹æ¾ç¤º\r\n                \"displayExpressType\": false,//è¡¨è¾¾å¼ç±»åæ¾ç¤º\r\n                \"displayValue\": false,      //å¼æ¾ç¤º\r\n                \"parentItem\": null           //ç¶é¡¹\r\n              },\r\n              children: [],                 //å­èç¹éå\r\n              expanded: true                //æ¯å¦å±å¼\r\n            }\r\n          ];\r\n          return;\r\n        }\r\n        //æéèç¹æå¨æ°\r\n        let index = treeNodes.indexOf(treeNode);\r\n        //å°æéèç¹åé¤\r\n        treeNodes.splice(index, 1);\r\n      }\r\n      else if ((treeNode.children) && treeNode.children.length != 0) {\r\n        treeNode.children = this.onDelete(treeNode.children, id);\r\n      }\r\n    });\r\n    this.tt.updateSerializedValue();\r\n    return treeNodes;\r\n  }\r\n  /***\r\n  * æ·»å æ¡ä»¶é¡¹\r\n  */\r\n  addItem() {\r\n    this.defaultSelectItem = this.localePipe.transform(\"SelectItem\");\r\n    this.hideNodeEditor(this.treeData);\r\n    this.addNode(this.treeData, this.localePipe.transform(\"SelectProperty\"), this.localePipe.transform(\"Equal\"), this.localePipe.transform(\"Value\"));\r\n  }\r\n  /***\r\n   * æ·»å æ¡ä»¶ç»\r\n   */\r\n  addGroup() {\r\n    this.addNode(this.treeData, this.localePipe.transform('And'), null, null);\r\n  }\r\n  /**\r\n   * å°treeDataè½¬åä¸ºfiletrExpressionå®ä½\r\n   * @param filterExpression è¿æ»¤è¡¨è¾¾å¼å®ä½\r\n   * @param treeNode æå¤å±çtreeNode\r\n   */\r\n  convert(filterExpression: FilterExpression, treeNode: TreeNode): FilterExpression {\r\n    //å¾å°æå¤å±çå³ç³»ç¬¦\r\n    filterExpression.relationOperator = this.typeMatch(treeNode.data.item);\r\n    //è¥å¶å­é¡¹ä¸ä¸ºç©º\r\n    if (treeNode.children.length != 0) {\r\n      //å¯¹å¶æ¯ä¸ä¸ªå­é¡¹è¿è¡è½¬åæä½\r\n      treeNode.children.forEach(treeNodeItem => {\r\n        //è¥å­é¡¹ä¸ºå¹¶ä¸ãæèï¼åæ°å»ºå¤æè¿æ»¤è¡¨è¾¾å¼\r\n        if (this.typeMatch(treeNodeItem.data.item) == RelationTypeEnum.And ||\r\n          this.typeMatch(treeNodeItem.data.item) == RelationTypeEnum.Or) {\r\n          let filterExpressionItem = new FilterExpression();\r\n          filterExpression.expressItems.push(this.convert(filterExpressionItem, treeNodeItem));\r\n        }\r\n        //è¥å­é¡¹ä¸ºå±æ§è¡¨è¾¾å¼\r\n        else {\r\n          let filterItem = new ExpressionItem();\r\n          let properties = this.propertyListInner.filter(x => x.text == treeNodeItem.data.item);\r\n          filterItem.propertyName = properties[0].value;\r\n          filterItem.propertyDataType = treeNodeItem.data.propertyDataType;\r\n          filterItem.operator = this.typeMatch(treeNodeItem.data.operator);\r\n          filterItem.expressType = this.typeMatch(treeNodeItem.data.expressType);\r\n          filterItem.value = treeNodeItem.data.value;\r\n          filterItem.parentItem = treeNodeItem.data.parentItem;\r\n          //è¥ä¸ºæ°å¼åæ¯è¾ï¼åå°valueå¼å¼ºå¶è½¬æ¢ä¸ºæ°å­\r\n          if (filterItem.expressType == ExpressTypeEnum.Value &&\r\n            (filterItem.operator == CompareTypeEnum.GreaterThan\r\n              || filterItem.operator == CompareTypeEnum.GreaterThanOrEqual\r\n              || filterItem.operator == CompareTypeEnum.LessThan\r\n              || filterItem.operator == CompareTypeEnum.LessThanOrEqual\r\n            )) {\r\n            filterItem.value = Number(treeNodeItem.data.value);\r\n          }\r\n          if (filterItem.expressType == ExpressTypeEnum.Value &&\r\n            (filterItem.operator == CompareTypeEnum.Equal\r\n              || filterItem.operator == CompareTypeEnum.NotEqual)) {\r\n            if (filterItem.propertyDataType == PropertyDataType.Decimal\r\n              || filterItem.propertyDataType == PropertyDataType.Double\r\n              || filterItem.propertyDataType == PropertyDataType.Int16\r\n              || filterItem.propertyDataType == PropertyDataType.Int32\r\n              || filterItem.propertyDataType == PropertyDataType.Int64) {\r\n              filterItem.value = Number(treeNodeItem.data.value);\r\n            }\r\n          }\r\n\r\n          //å°å­é¡¹æ¾å¥ç¶é¡¹çå­æ®µä¸­\r\n          filterExpression.expressItems.push(filterItem);\r\n        }\r\n      });\r\n    }\r\n    return filterExpression;\r\n  }\r\n  /**\r\n  * filetrExpressionåè½¬åä¸ºTreeNode\r\n  * @param filterExpress å¾è½¬åçfiletrExpressionå®ä½\r\n  */\r\n  unConvert(filterExpress: FilterExpression): TreeNode {\r\n    let treeData: TreeNode =\r\n    {\r\n      data:\r\n      {\r\n        \"id\": Math.random(),        //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n        \"item\": this.relationTypeReverseMatch(filterExpress.relationOperator), //å±æ§é¡¹\r\n        \"propertyDataType\": null,    //å±æ§æ°æ®ç±»å\r\n        \"operator\": null,           //æä½æ¯è¾ç¬¦\r\n        \"expressType\": null,        //è¡¨è¾¾å¼ç±»å\r\n        \"value\": null,              //å¼\r\n        \"displaySelect\": false,      //éæ©é¡¹æ¾ç¤º\r\n        \"displayOperator\": false,   //æä½ç¬¦é¡¹æ¾ç¤º\r\n        \"displayExpressType\": false,//è¡¨è¾¾å¼ç±»åæ¾ç¤º\r\n        \"displayValue\": false,      //å¼æ¾ç¤º\r\n        \"parentItem\": null           //ç¶é¡¹\r\n      },\r\n      children: [],                 //å­èç¹éå\r\n      expanded: true                //æ¯å¦å±å¼\r\n    };\r\n    //å¯¹äºæ¯ä¸ä¸ªå­é¡¹\r\n    filterExpress.expressItems.forEach(expressItem => {\r\n      let filterExpressItem = expressItem as FilterExpression;\r\n      //è¥å­é¡¹ä¸ºFilterExpressionç±»åï¼èµå¼\r\n      if ((filterExpressItem.relationOperator == RelationTypeEnum.And || filterExpressItem.relationOperator == RelationTypeEnum.Or)) {\r\n        let treeDataChild = this.unConvert(filterExpressItem);\r\n        treeDataChild.data.parent = treeData;//æ·»å ç¶èç¹\r\n        treeData.children.push(treeDataChild);\r\n      }\r\n      else //è¥å­é¡¹ä¸ºExpressionItemç±»åï¼èµå¼\r\n      {\r\n        let expressionItem = expressItem as ExpressionItem;\r\n        let properties = this.propertyListInner.filter(x => x.value == expressionItem.propertyName);\r\n        let treeDataChild: TreeNode =\r\n        {\r\n          data:\r\n          {\r\n            \"id\": Math.random(),                      //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n            \"item\": properties[0].text,               //å±æ§é¡¹\r\n            \"propertyDataType\": expressionItem.propertyDataType,\r\n            \"operator\": this.operatorReverseMatch(expressionItem.operator),      //æä½æ¯è¾ç¬¦\r\n            \"expressType\": this.expressTypeReverseMatch(expressionItem.expressType),//è¡¨è¾¾å¼ç±»å\r\n            \"value\": expressionItem.value,            //å¼\r\n            \"parentItem\": expressionItem.parentItem    //ç¶é¡¹\r\n          },\r\n          parent: treeData,             //æ·»å ç¶èç¹\r\n          children: [],                 //å­èç¹éå\r\n          expanded: true                //æ¯å¦å±å¼\r\n        }\r\n        treeData.children.push(treeDataChild);\r\n      }\r\n    });\r\n    return treeData;\r\n  }\r\n  /**\r\n   * ç±»åä¿¡æ¯å¹é\r\n   * @param type ç±»å\r\n   */\r\n  typeMatch(type: any): any {\r\n    switch (type) {\r\n      case this.localePipe.transform(\"And\"): return RelationTypeEnum.And;\r\n      case this.localePipe.transform(\"Or\"): return RelationTypeEnum.Or;\r\n      case this.localePipe.transform(\"GreaterThan\"): return CompareTypeEnum.GreaterThan;\r\n      case this.localePipe.transform(\"GreaterThanOrEqual\"): return CompareTypeEnum.GreaterThanOrEqual;\r\n      case this.localePipe.transform(\"LessThan\"): return CompareTypeEnum.LessThan;\r\n      case this.localePipe.transform(\"LessThanOrEqual\"): return CompareTypeEnum.LessThanOrEqual;\r\n      case this.localePipe.transform(\"Equal\"): return CompareTypeEnum.Equal;\r\n      case this.localePipe.transform(\"NotEqual\"): return CompareTypeEnum.NotEqual;\r\n      case this.localePipe.transform(\"Contains\"): return CompareTypeEnum.Contains;\r\n      case this.localePipe.transform(\"NotContains\"): return CompareTypeEnum.NotContains;\r\n      case this.localePipe.transform(\"StartsWith\"): return CompareTypeEnum.StartsWith;\r\n      case this.localePipe.transform(\"EndsWith\"): return CompareTypeEnum.EndsWith;\r\n      case this.localePipe.transform(\"NotStartsWith\"): return CompareTypeEnum.NotStartsWith;\r\n      case this.localePipe.transform(\"NotEndsWith\"): return CompareTypeEnum.NotEndsWith;\r\n      case this.localePipe.transform(\"IsNull\"): return CompareTypeEnum.IsNull;\r\n      case this.localePipe.transform(\"IsNotNull\"): return CompareTypeEnum.IsNotNull;\r\n      case this.localePipe.transform(\"In\"): return CompareTypeEnum.In;\r\n      case this.localePipe.transform(\"NotIn\"): return CompareTypeEnum.NotIn;\r\n      case this.localePipe.transform(\"Value\"): return ExpressTypeEnum.Value;\r\n      case this.localePipe.transform(\"Expression\"): return ExpressTypeEnum.Expression;\r\n    }\r\n  }\r\n  relationTypeReverseMatch(type: RelationTypeEnum): string {\r\n    switch (type) {\r\n      case RelationTypeEnum.And: return this.localePipe.transform('And');\r\n      case RelationTypeEnum.Or: return this.localePipe.transform('Or');\r\n    }\r\n  }\r\n  operatorReverseMatch(type: CompareTypeEnum): string {\r\n    switch (type) {\r\n      case CompareTypeEnum.GreaterThan: return this.localePipe.transform(\"GreaterThan\");\r\n      case CompareTypeEnum.GreaterThanOrEqual: return this.localePipe.transform(\"GreaterThanOrEqual\");\r\n      case CompareTypeEnum.LessThan: return this.localePipe.transform(\"LessThan\");\r\n      case CompareTypeEnum.LessThanOrEqual: return this.localePipe.transform(\"LessThanOrEqual\");\r\n      case CompareTypeEnum.Equal: return this.localePipe.transform(\"Equal\");\r\n      case CompareTypeEnum.NotEqual: return this.localePipe.transform(\"NotEqual\");\r\n      case CompareTypeEnum.Contains: return this.localePipe.transform(\"Contains\");\r\n      case CompareTypeEnum.NotContains: return this.localePipe.transform(\"NotContains\");\r\n      case CompareTypeEnum.StartsWith: return this.localePipe.transform(\"StartsWith\");\r\n      case CompareTypeEnum.EndsWith: return this.localePipe.transform(\"EndsWith\");\r\n      case CompareTypeEnum.NotStartsWith: return this.localePipe.transform(\"NotStartsWith\");\r\n      case CompareTypeEnum.NotEndsWith: return this.localePipe.transform(\"NotEndsWith\");\r\n      case CompareTypeEnum.IsNull: return this.localePipe.transform(\"IsNull\");\r\n      case CompareTypeEnum.IsNotNull: return this.localePipe.transform(\"IsNotNull\");\r\n      case CompareTypeEnum.In: return this.localePipe.transform(\"In\");\r\n      case CompareTypeEnum.NotIn: return this.localePipe.transform(\"NotIn\");\r\n    }\r\n  }\r\n  expressTypeReverseMatch(type: ExpressTypeEnum): string {\r\n    switch (type) {\r\n      case ExpressTypeEnum.Value: return this.localePipe.transform(\"Value\");\r\n      case ExpressTypeEnum.Expression: return this.localePipe.transform('Expression');\r\n    }\r\n  }\r\n  /**\r\n   * è¿æ»¤è¡¨è¾¾å¼è·å(å¤é¨è°ç¨)\r\n   */\r\n  getFilterExpression(): string {\r\n    this.treeDataTemp = this.treeData;\r\n    let isNull = true;\r\n    let isMatch = true;\r\n    if (this.checkNull(this.treeDataTemp[0].children, isNull) && this.checkMatch(this.treeDataTemp[0].children, isMatch)) {\r\n      this.filterExpression = new FilterExpression();\r\n      //æ ¹æ®æ å½¢æ°æ®ç»æè½¬åä¸ºè¿æ»¤è¡¨è¾¾å¼å®ä½\r\n      this.convert(this.filterExpression, this.treeDataTemp[0]);\r\n      //è¥åªåå«å³ç³»é¡¹åè¿åç©º\r\n      if (this.filterExpression.expressItems.length == 0) return null;\r\n      else {\r\n        if (this.filterExpression.relationOperator == null) {\r\n          this.filterExpression.relationOperator = RelationTypeEnum.Or;\r\n        }\r\n        return JSON.stringify(this.filterExpression);\r\n      }\r\n    }\r\n  }\r\n  //éå½æ£æ¥æ´ä¸ªè¿æ»¤è¡¨è¾¾å¼æ¯å¦ææ¼å¡«çé¡¹\r\n  public checkNull(treeNodes: TreeNode[], isNull: boolean): boolean {\r\n    for (var i = 0; i < treeNodes.length; i++) {\r\n      if (treeNodes[i].data.item == this.localePipe.transform('And') || treeNodes[i].data.item == this.localePipe.transform('Or')) {\r\n        if (!(treeNodes[i].children) || treeNodes[i].children.length == 0) {\r\n          this.checkFilterStruc = false;\r\n          this.notifyservice[this.notifies['3'].type]({\r\n            msg: this.notifies['3'].msg\r\n          });\r\n          isNull = false;\r\n          break;\r\n        }\r\n        else if (!this.checkNull(treeNodes[i].children, isNull)) {\r\n          isNull = false;\r\n          break;\r\n        }\r\n      }\r\n      else {\r\n        if (!(treeNodes[i].data.item) || treeNodes[i].data.item == this.localePipe.transform(\"SelectProperty\")\r\n          || !(treeNodes[i].data.operator) || !(treeNodes[i].data.expressType)\r\n          || !(treeNodes[i].data.value)) {\r\n          this.notifyservice[this.notifies['4'].type]({\r\n            msg: this.notifies['4'].msg\r\n          });\r\n          this.checkFilterStruc = false;\r\n          isNull = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return isNull;\r\n  }\r\n  onfocus() {\r\n    this.displayPopup = true;\r\n  }\r\n  onblur() {\r\n    this.displayPopup = false;\r\n  }\r\n  checkMatch(treeNodes: TreeNode[], isMatch: boolean) {\r\n    for (var i = 0; i < treeNodes.length; i++) {\r\n      if (treeNodes[i].data.item != this.localePipe.transform('And') && treeNodes[i].data.item != this.localePipe.transform('Or')) {\r\n        if (treeNodes[i].data.expressType == this.localePipe.transform(\"Value\")) {\r\n          if ((treeNodes[i].data.propertyDataType == PropertyDataType.Int16 || treeNodes[i].data.propertyDataType == PropertyDataType.Int32 || treeNodes[i].data.propertyDataType == PropertyDataType.Int64) && isNaN(treeNodes[i].data.value)) {\r\n            this.notifyservice[this.notifies['5'].type]({\r\n              msg: this.notifies['5'].msg\r\n            });\r\n            isMatch = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      else isMatch = this.checkMatch(treeNodes[i].children, isMatch);\r\n    }\r\n    return isMatch;\r\n  }\r\n}\r\n\r\n","import { LOCALE_ID,NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FilterConditionComponent } from './filter-condition/filter-condition.component';\r\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns'\r\nimport { TreeTableModule} from  '@farris/ui-treetable';\r\nimport { ButtonModule } from '@progress/kendo-angular-buttons';\r\nimport { DropDownButtonModule } from '@progress/kendo-angular-buttons';\r\nimport { InputsModule } from '@progress/kendo-angular-inputs';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PopupModule } from '@progress/kendo-angular-popup';\r\nimport { FilterExpressionComponent } from './filter-expression/filter-expression.component';\r\nimport {ExpressionModule} from '@gsp-svc/expression';\r\nimport { ModalModule, BsModalService} from '@farris/ui-modal';\r\nimport { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { FilterConditionLocalePipe } from './filter-condition-locale.pipe';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DropDownsModule,\r\n    ButtonModule,\r\n    DropDownButtonModule,\r\n    InputsModule,\r\n    FormsModule,\r\n    PopupModule,\r\n    ComboListModule,\r\n    ExpressionModule,\r\n    TreeTableModule,\r\n    InputGroupModule,\r\n    NotifyModule,\r\n    FDropdownDirectiveTypeModule,\r\n    ModalModule.forRoot(),\r\n  ],\r\n  declarations: [FilterConditionComponent, FilterExpressionComponent, FilterConditionLocalePipe],\r\n  entryComponents:[FilterConditionComponent,FilterExpressionComponent],\r\n  exports: [FilterConditionComponent,FilterExpressionComponent],\r\n  providers:[\r\n    BsModalService,\r\n    { provide: LOCALE_ID, useValue: localStorage.getItem('languageCode') || 'zh-CHS' }\r\n  ]\r\n})\r\nexport class FilterConditionModule { }\r\n"],"names":[],"mappings":"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"}
