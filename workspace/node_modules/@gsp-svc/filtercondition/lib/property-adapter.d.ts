import { FilterInjectedEntity } from "./injected-entity";
import { FilterEntitySchema, FilterEntityType, FilterEntitySet } from "./schema";
import { PropertyDataType } from ".";
import { NewDataType, NewEntitySet, NewEntityType, NewSchema } from "./NewSchema";
export declare class PropertyAdapter {
    entityName: string;
    /**
     * 属性适配器，注入多级实体转化为Array
     * @param injectedEntity 注入的实体
     * @param schemaMap 注入的schema
     */
    adapter(injectedEntity: FilterInjectedEntity, schemaMap: Map<string, FilterEntitySchema>): any;
    /**
     * 将实体类转化成Arrray
     * @param entityType 被转换的实体类
     */
    convertEntityType(entityType: FilterEntityType, schema: FilterEntitySchema): any;
    /**
     * 实体集转化为属性列表
     * @param entitySet 待转化实体集
     * @param schema 所在schema
     */
    convertEntitySet(entitySet: FilterEntitySet, schema: FilterEntitySchema): any;
    /**
     *
     * @param injectedEntity
     * @param newSchemaMap
     */
    adapterOfNewSchema(injectedEntity: FilterInjectedEntity, newSchemaMap: Map<string, NewSchema>): any;
    /**
     * @description 转换EntityType
     * @param type NewEntityType
     * @param schema NewSchema
     * @returns
     */
    convertNewEntityType(type: NewEntityType, schema: NewSchema): any;
    convertNewEntitySet(set: NewEntitySet, schema: NewSchema): any;
    /**
     *
     * @param newType 统一Schema的属性
     * @returns
     */
    convertNewDataType2PropertyDataType(newType: NewDataType): PropertyDataType;
}
