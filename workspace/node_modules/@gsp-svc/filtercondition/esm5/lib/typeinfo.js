/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {number} */
var ExpressTypeEnum = {
    Value: 0,
    Expression: 1,
};
export { ExpressTypeEnum };
ExpressTypeEnum[ExpressTypeEnum.Value] = 'Value';
ExpressTypeEnum[ExpressTypeEnum.Expression] = 'Expression';
/** @enum {number} */
var RelationTypeEnum = {
    And: 0,
    Or: 1,
    AddProperty: 2,
    AddRelation: 3,
};
export { RelationTypeEnum };
RelationTypeEnum[RelationTypeEnum.And] = 'And';
RelationTypeEnum[RelationTypeEnum.Or] = 'Or';
RelationTypeEnum[RelationTypeEnum.AddProperty] = 'AddProperty';
RelationTypeEnum[RelationTypeEnum.AddRelation] = 'AddRelation';
/** @enum {number} */
var CompareTypeEnum = {
    GreaterThan: 0,
    GreaterThanOrEqual: 1,
    LessThan: 2,
    LessThanOrEqual: 3,
    Equal: 4,
    NotEqual: 5,
    Contains: 6,
    NotContains: 7,
    StartsWith: 8,
    NotStartsWith: 9,
    EndsWith: 10,
    NotEndsWith: 11,
    IsNull: 12,
    IsNotNull: 13,
    In: 14,
    NotIn: 15,
};
export { CompareTypeEnum };
CompareTypeEnum[CompareTypeEnum.GreaterThan] = 'GreaterThan';
CompareTypeEnum[CompareTypeEnum.GreaterThanOrEqual] = 'GreaterThanOrEqual';
CompareTypeEnum[CompareTypeEnum.LessThan] = 'LessThan';
CompareTypeEnum[CompareTypeEnum.LessThanOrEqual] = 'LessThanOrEqual';
CompareTypeEnum[CompareTypeEnum.Equal] = 'Equal';
CompareTypeEnum[CompareTypeEnum.NotEqual] = 'NotEqual';
CompareTypeEnum[CompareTypeEnum.Contains] = 'Contains';
CompareTypeEnum[CompareTypeEnum.NotContains] = 'NotContains';
CompareTypeEnum[CompareTypeEnum.StartsWith] = 'StartsWith';
CompareTypeEnum[CompareTypeEnum.NotStartsWith] = 'NotStartsWith';
CompareTypeEnum[CompareTypeEnum.EndsWith] = 'EndsWith';
CompareTypeEnum[CompareTypeEnum.NotEndsWith] = 'NotEndsWith';
CompareTypeEnum[CompareTypeEnum.IsNull] = 'IsNull';
CompareTypeEnum[CompareTypeEnum.IsNotNull] = 'IsNotNull';
CompareTypeEnum[CompareTypeEnum.In] = 'In';
CompareTypeEnum[CompareTypeEnum.NotIn] = 'NotIn';
/**
 * 关系类型
 * 包含并且、或者、添加属性、添加关系
 * @type {?}
 */
export var RelationTypes = [
    { id: "并且" },
    { id: "或者" },
];
// export const CompareTypes: Array<{ text: string, value: CompareTypeEnum }> =
//   [
//     { text: "大于", value: CompareTypeEnum.GreaterThan },
//     { text: "大于等于", value: CompareTypeEnum.GreaterThanOrEqual },
//     { text: "小于", value: CompareTypeEnum.LessThan },
//     { text: "小于等于", value: CompareTypeEnum.LessThanOrEqual },
//     { text: "等于", value: CompareTypeEnum.Equal },
//     { text: "不等于", value: CompareTypeEnum.NotEqual },
//     { text: "包含", value: CompareTypeEnum.Contains },
//     { text: "开头是", value: CompareTypeEnum.StartsWith },
//     { text: "结尾是", value: CompareTypeEnum.EndsWith },
//     { text: "不包含", value: CompareTypeEnum.NotContains },
//     { text: "不包含开头是", value: CompareTypeEnum.NotStartsWith },
//     { text: "不包含结尾是", value: CompareTypeEnum.NotEndsWith },
//     { text: "为(空)", value: CompareTypeEnum.IsNull },
//     { text: "不为(空)", value: CompareTypeEnum.IsNotNull },
//     { text: "在", value: CompareTypeEnum.In },
//     { text: "不在", value: CompareTypeEnum.NotIn }
//   ];
/**
 * 比较类型
 * 包含常规的关系比较符
 * @type {?}
 */
export var CompareTypes = [
    { id: '大于' },
    { id: '大于等于' },
    { id: '小于' },
    { id: '小于等于' },
    { id: '等于' },
    { id: '不等于' },
    { id: '包含' },
    { id: '开头是' },
    { id: '结尾是' },
    { id: '不包含' },
    { id: '不包含开头是' },
    { id: '不包含结尾是' },
    { id: '为空' },
    { id: '不为(空)' },
    { id: '在' },
    { id: '不在' }
]
/**
 * 表达式类型
 * 包含值、表达式两种类型
 */
;
/**
 * 表达式类型
 * 包含值、表达式两种类型
 * @type {?}
 */
export var ExpressTypes = [
    { id: '值' },
    { id: '表达式' }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZWluZm8uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXN2Yy9maWx0ZXJjb25kaXRpb24vIiwic291cmNlcyI6WyJsaWIvdHlwZWluZm8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0lBSUUsUUFBSztJQUNMLGFBQVU7Ozs7Ozs7SUFNVixNQUFHO0lBQ0gsS0FBRTtJQUNGLGNBQVc7SUFDWCxjQUFXOzs7Ozs7Ozs7SUFNWCxjQUFXO0lBQ1gscUJBQWtCO0lBQ2xCLFdBQVE7SUFDUixrQkFBZTtJQUNmLFFBQUs7SUFDTCxXQUFRO0lBQ1IsV0FBUTtJQUNSLGNBQVc7SUFDWCxhQUFVO0lBQ1YsZ0JBQWE7SUFDYixZQUFRO0lBQ1IsZUFBVztJQUNYLFVBQU07SUFDTixhQUFTO0lBQ1QsTUFBRTtJQUNGLFNBQUs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU9QLE1BQU0sS0FBTyxhQUFhLEdBQ3hCO0lBQ0UsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFDO0lBQ1gsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFDO0NBQ1o7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5QkQsTUFBTSxLQUFPLFlBQVksR0FBRTtJQUN6QixFQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUM7SUFDVixFQUFDLEVBQUUsRUFBRSxNQUFNLEVBQUM7SUFDWixFQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUM7SUFDVixFQUFDLEVBQUUsRUFBRSxNQUFNLEVBQUM7SUFDWixFQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUM7SUFDVixFQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUM7SUFDWCxFQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUM7SUFDVixFQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUM7SUFDWCxFQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUM7SUFDWCxFQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUM7SUFDWCxFQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUM7SUFDZCxFQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUM7SUFDZCxFQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUM7SUFDVixFQUFDLEVBQUUsRUFBRSxPQUFPLEVBQUM7SUFDYixFQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUM7SUFDVCxFQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUM7Q0FDWDtBQUVIOzs7R0FHRzs7Ozs7OztBQUNILE1BQU0sS0FBTyxZQUFZLEdBQ3ZCO0lBQ0UsRUFBQyxFQUFFLEVBQUUsR0FBRyxFQUFDO0lBQ1QsRUFBQyxFQUFFLEVBQUUsS0FBSyxFQUFDO0NBQ1oiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICog6KGo6L6+5byP57G75Z6L5p6a5Li+XHJcbiAqL1xyXG5leHBvcnQgZW51bSBFeHByZXNzVHlwZUVudW0ge1xyXG4gIFZhbHVlLFxyXG4gIEV4cHJlc3Npb25cclxufVxyXG4vKipcclxuICog5YWz57O757G75Z6L5p6a5Li+XHJcbiAqL1xyXG5leHBvcnQgZW51bSBSZWxhdGlvblR5cGVFbnVtIHtcclxuICBBbmQsXHJcbiAgT3IsXHJcbiAgQWRkUHJvcGVydHksXHJcbiAgQWRkUmVsYXRpb25cclxufVxyXG4vKipcclxuICog5q+U6L6D57G75Z6L5p6a5Li+XHJcbiAqL1xyXG5leHBvcnQgZW51bSBDb21wYXJlVHlwZUVudW0ge1xyXG4gIEdyZWF0ZXJUaGFuLFxyXG4gIEdyZWF0ZXJUaGFuT3JFcXVhbCxcclxuICBMZXNzVGhhbixcclxuICBMZXNzVGhhbk9yRXF1YWwsXHJcbiAgRXF1YWwsXHJcbiAgTm90RXF1YWwsXHJcbiAgQ29udGFpbnMsXHJcbiAgTm90Q29udGFpbnMsXHJcbiAgU3RhcnRzV2l0aCxcclxuICBOb3RTdGFydHNXaXRoLFxyXG4gIEVuZHNXaXRoLFxyXG4gIE5vdEVuZHNXaXRoLFxyXG4gIElzTnVsbCxcclxuICBJc05vdE51bGwsXHJcbiAgSW4sXHJcbiAgTm90SW5cclxufVxyXG5cclxuLyoqXHJcbiAqIOWFs+ezu+exu+Wei1xyXG4gKiDljIXlkKvlubbkuJTjgIHmiJbogIXjgIHmt7vliqDlsZ7mgKfjgIHmt7vliqDlhbPns7tcclxuICovXHJcbmV4cG9ydCBjb25zdCBSZWxhdGlvblR5cGVzPVxyXG4gIFtcclxuICAgIHsgaWQ6IFwi5bm25LiUXCJ9LFxyXG4gICAgeyBpZDogXCLmiJbogIVcIn0sXHJcbiAgXTtcclxuXHJcbi8qKlxyXG4gKiDmr5TovoPnsbvlnotcclxuICog5YyF5ZCr5bi46KeE55qE5YWz57O75q+U6L6D56ymXHJcbiAqL1xyXG4vLyBleHBvcnQgY29uc3QgQ29tcGFyZVR5cGVzOiBBcnJheTx7IHRleHQ6IHN0cmluZywgdmFsdWU6IENvbXBhcmVUeXBlRW51bSB9PiA9XHJcbi8vICAgW1xyXG4vLyAgICAgeyB0ZXh0OiBcIuWkp+S6jlwiLCB2YWx1ZTogQ29tcGFyZVR5cGVFbnVtLkdyZWF0ZXJUaGFuIH0sXHJcbi8vICAgICB7IHRleHQ6IFwi5aSn5LqO562J5LqOXCIsIHZhbHVlOiBDb21wYXJlVHlwZUVudW0uR3JlYXRlclRoYW5PckVxdWFsIH0sXHJcbi8vICAgICB7IHRleHQ6IFwi5bCP5LqOXCIsIHZhbHVlOiBDb21wYXJlVHlwZUVudW0uTGVzc1RoYW4gfSxcclxuLy8gICAgIHsgdGV4dDogXCLlsI/kuo7nrYnkuo5cIiwgdmFsdWU6IENvbXBhcmVUeXBlRW51bS5MZXNzVGhhbk9yRXF1YWwgfSxcclxuLy8gICAgIHsgdGV4dDogXCLnrYnkuo5cIiwgdmFsdWU6IENvbXBhcmVUeXBlRW51bS5FcXVhbCB9LFxyXG4vLyAgICAgeyB0ZXh0OiBcIuS4jeetieS6jlwiLCB2YWx1ZTogQ29tcGFyZVR5cGVFbnVtLk5vdEVxdWFsIH0sXHJcbi8vICAgICB7IHRleHQ6IFwi5YyF5ZCrXCIsIHZhbHVlOiBDb21wYXJlVHlwZUVudW0uQ29udGFpbnMgfSxcclxuLy8gICAgIHsgdGV4dDogXCLlvIDlpLTmmK9cIiwgdmFsdWU6IENvbXBhcmVUeXBlRW51bS5TdGFydHNXaXRoIH0sXHJcbi8vICAgICB7IHRleHQ6IFwi57uT5bC+5pivXCIsIHZhbHVlOiBDb21wYXJlVHlwZUVudW0uRW5kc1dpdGggfSxcclxuLy8gICAgIHsgdGV4dDogXCLkuI3ljIXlkKtcIiwgdmFsdWU6IENvbXBhcmVUeXBlRW51bS5Ob3RDb250YWlucyB9LFxyXG4vLyAgICAgeyB0ZXh0OiBcIuS4jeWMheWQq+W8gOWktOaYr1wiLCB2YWx1ZTogQ29tcGFyZVR5cGVFbnVtLk5vdFN0YXJ0c1dpdGggfSxcclxuLy8gICAgIHsgdGV4dDogXCLkuI3ljIXlkKvnu5PlsL7mmK9cIiwgdmFsdWU6IENvbXBhcmVUeXBlRW51bS5Ob3RFbmRzV2l0aCB9LFxyXG4vLyAgICAgeyB0ZXh0OiBcIuS4uijnqbopXCIsIHZhbHVlOiBDb21wYXJlVHlwZUVudW0uSXNOdWxsIH0sXHJcbi8vICAgICB7IHRleHQ6IFwi5LiN5Li6KOepuilcIiwgdmFsdWU6IENvbXBhcmVUeXBlRW51bS5Jc05vdE51bGwgfSxcclxuLy8gICAgIHsgdGV4dDogXCLlnKhcIiwgdmFsdWU6IENvbXBhcmVUeXBlRW51bS5JbiB9LFxyXG4vLyAgICAgeyB0ZXh0OiBcIuS4jeWcqFwiLCB2YWx1ZTogQ29tcGFyZVR5cGVFbnVtLk5vdEluIH1cclxuLy8gICBdO1xyXG4gIGV4cG9ydCBjb25zdCBDb21wYXJlVHlwZXMgPVtcclxuICAgIHtpZDogJ+Wkp+S6jid9LFxyXG4gICAge2lkOiAn5aSn5LqO562J5LqOJ30sXHJcbiAgICB7aWQ6ICflsI/kuo4nfSxcclxuICAgIHtpZDogJ+Wwj+S6juetieS6jid9LFxyXG4gICAge2lkOiAn562J5LqOJ30sXHJcbiAgICB7aWQ6ICfkuI3nrYnkuo4nfSxcclxuICAgIHtpZDogJ+WMheWQqyd9LFxyXG4gICAge2lkOiAn5byA5aS05pivJ30sXHJcbiAgICB7aWQ6ICfnu5PlsL7mmK8nfSxcclxuICAgIHtpZDogJ+S4jeWMheWQqyd9LFxyXG4gICAge2lkOiAn5LiN5YyF5ZCr5byA5aS05pivJ30sXHJcbiAgICB7aWQ6ICfkuI3ljIXlkKvnu5PlsL7mmK8nfSxcclxuICAgIHtpZDogJ+S4uuepuid9LFxyXG4gICAge2lkOiAn5LiN5Li6KOepuiknfSxcclxuICAgIHtpZDogJ+WcqCd9LFxyXG4gICAge2lkOiAn5LiN5ZyoJ31cclxuICBdXHJcbiAgXHJcbi8qKlxyXG4gKiDooajovr7lvI/nsbvlnotcclxuICog5YyF5ZCr5YC844CB6KGo6L6+5byP5Lik56eN57G75Z6LXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgRXhwcmVzc1R5cGVzID1cclxuICBbXHJcbiAgICB7aWQ6ICflgLwnfSxcclxuICAgIHtpZDogJ+ihqOi+vuW8jyd9XHJcbiAgXTtcclxuIl19