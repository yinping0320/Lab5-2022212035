/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { LOCALE_ID, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FilterConditionComponent } from './filter-condition/filter-condition.component';
import { DropDownsModule } from '@progress/kendo-angular-dropdowns';
import { TreeTableModule } from '@farris/ui-treetable';
import { ButtonModule } from '@progress/kendo-angular-buttons';
import { DropDownButtonModule } from '@progress/kendo-angular-buttons';
import { InputsModule } from '@progress/kendo-angular-inputs';
import { FormsModule } from '@angular/forms';
import { PopupModule } from '@progress/kendo-angular-popup';
import { FilterExpressionComponent } from './filter-expression/filter-expression.component';
import { ExpressionModule } from '@gsp-svc/expression';
import { ModalModule, BsModalService } from '@farris/ui-modal';
import { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';
import { ComboListModule } from '@farris/ui-combo-list';
import { InputGroupModule } from '@farris/ui-input-group';
import { NotifyModule } from '@farris/ui-notify';
import { FilterConditionLocalePipe } from './filter-condition-locale.pipe';
var ɵ0 = localStorage.getItem('languageCode') || 'zh-CHS';
var FilterConditionModule = /** @class */ (function () {
    function FilterConditionModule() {
    }
    FilterConditionModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        DropDownsModule,
                        ButtonModule,
                        DropDownButtonModule,
                        InputsModule,
                        FormsModule,
                        PopupModule,
                        ComboListModule,
                        ExpressionModule,
                        TreeTableModule,
                        InputGroupModule,
                        NotifyModule,
                        FDropdownDirectiveTypeModule,
                        ModalModule.forRoot(),
                    ],
                    declarations: [FilterConditionComponent, FilterExpressionComponent, FilterConditionLocalePipe],
                    entryComponents: [FilterConditionComponent, FilterExpressionComponent],
                    exports: [FilterConditionComponent, FilterExpressionComponent],
                    providers: [
                        BsModalService,
                        { provide: LOCALE_ID, useValue: ɵ0 }
                    ]
                },] }
    ];
    return FilterConditionModule;
}());
export { FilterConditionModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLWNvbmRpdGlvbi5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXN2Yy9maWx0ZXJjb25kaXRpb24vIiwic291cmNlcyI6WyJsaWIvZmlsdGVyLWNvbmRpdGlvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUMsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUN6RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUNBQW1DLENBQUE7QUFDbkUsT0FBTyxFQUFFLGVBQWUsRUFBQyxNQUFPLHNCQUFzQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUMvRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDOUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUM1RixPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsV0FBVyxFQUFFLGNBQWMsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBQzlELE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUMxRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7U0F1QnZDLFlBQVksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLElBQUksUUFBUTtBQXRCcEY7SUFBQTtJQXlCcUMsQ0FBQzs7Z0JBekJyQyxRQUFRLFNBQUM7b0JBQ1IsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osZUFBZTt3QkFDZixZQUFZO3dCQUNaLG9CQUFvQjt3QkFDcEIsWUFBWTt3QkFDWixXQUFXO3dCQUNYLFdBQVc7d0JBQ1gsZUFBZTt3QkFDZixnQkFBZ0I7d0JBQ2hCLGVBQWU7d0JBQ2YsZ0JBQWdCO3dCQUNoQixZQUFZO3dCQUNaLDRCQUE0Qjt3QkFDNUIsV0FBVyxDQUFDLE9BQU8sRUFBRTtxQkFDdEI7b0JBQ0QsWUFBWSxFQUFFLENBQUMsd0JBQXdCLEVBQUUseUJBQXlCLEVBQUUseUJBQXlCLENBQUM7b0JBQzlGLGVBQWUsRUFBQyxDQUFDLHdCQUF3QixFQUFDLHlCQUF5QixDQUFDO29CQUNwRSxPQUFPLEVBQUUsQ0FBQyx3QkFBd0IsRUFBQyx5QkFBeUIsQ0FBQztvQkFDN0QsU0FBUyxFQUFDO3dCQUNSLGNBQWM7d0JBQ2QsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsSUFBa0QsRUFBRTtxQkFDbkY7aUJBQ0Y7O0lBQ29DLDRCQUFDO0NBQUEsQUF6QnRDLElBeUJzQztTQUF6QixxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMT0NBTEVfSUQsTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRmlsdGVyQ29uZGl0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9maWx0ZXItY29uZGl0aW9uL2ZpbHRlci1jb25kaXRpb24uY29tcG9uZW50JztcclxuaW1wb3J0IHsgRHJvcERvd25zTW9kdWxlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItZHJvcGRvd25zJ1xyXG5pbXBvcnQgeyBUcmVlVGFibGVNb2R1bGV9IGZyb20gICdAZmFycmlzL3VpLXRyZWV0YWJsZSc7XHJcbmltcG9ydCB7IEJ1dHRvbk1vZHVsZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWJ1dHRvbnMnO1xyXG5pbXBvcnQgeyBEcm9wRG93bkJ1dHRvbk1vZHVsZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWJ1dHRvbnMnO1xyXG5pbXBvcnQgeyBJbnB1dHNNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1pbnB1dHMnO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgUG9wdXBNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1wb3B1cCc7XHJcbmltcG9ydCB7IEZpbHRlckV4cHJlc3Npb25Db21wb25lbnQgfSBmcm9tICcuL2ZpbHRlci1leHByZXNzaW9uL2ZpbHRlci1leHByZXNzaW9uLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7RXhwcmVzc2lvbk1vZHVsZX0gZnJvbSAnQGdzcC1zdmMvZXhwcmVzc2lvbic7XHJcbmltcG9ydCB7IE1vZGFsTW9kdWxlLCBCc01vZGFsU2VydmljZX0gZnJvbSAnQGZhcnJpcy91aS1tb2RhbCc7XHJcbmltcG9ydCB7IEZEcm9wZG93bkRpcmVjdGl2ZVR5cGVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRyb3Bkb3duJztcclxuaW1wb3J0IHsgQ29tYm9MaXN0TW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21iby1saXN0JztcclxuaW1wb3J0IHsgSW5wdXRHcm91cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktaW5wdXQtZ3JvdXAnO1xyXG5pbXBvcnQgeyBOb3RpZnlNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW5vdGlmeSc7XHJcbmltcG9ydCB7IEZpbHRlckNvbmRpdGlvbkxvY2FsZVBpcGUgfSBmcm9tICcuL2ZpbHRlci1jb25kaXRpb24tbG9jYWxlLnBpcGUnO1xyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIERyb3BEb3duc01vZHVsZSxcclxuICAgIEJ1dHRvbk1vZHVsZSxcclxuICAgIERyb3BEb3duQnV0dG9uTW9kdWxlLFxyXG4gICAgSW5wdXRzTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBQb3B1cE1vZHVsZSxcclxuICAgIENvbWJvTGlzdE1vZHVsZSxcclxuICAgIEV4cHJlc3Npb25Nb2R1bGUsXHJcbiAgICBUcmVlVGFibGVNb2R1bGUsXHJcbiAgICBJbnB1dEdyb3VwTW9kdWxlLFxyXG4gICAgTm90aWZ5TW9kdWxlLFxyXG4gICAgRkRyb3Bkb3duRGlyZWN0aXZlVHlwZU1vZHVsZSxcclxuICAgIE1vZGFsTW9kdWxlLmZvclJvb3QoKSxcclxuICBdLFxyXG4gIGRlY2xhcmF0aW9uczogW0ZpbHRlckNvbmRpdGlvbkNvbXBvbmVudCwgRmlsdGVyRXhwcmVzc2lvbkNvbXBvbmVudCwgRmlsdGVyQ29uZGl0aW9uTG9jYWxlUGlwZV0sXHJcbiAgZW50cnlDb21wb25lbnRzOltGaWx0ZXJDb25kaXRpb25Db21wb25lbnQsRmlsdGVyRXhwcmVzc2lvbkNvbXBvbmVudF0sXHJcbiAgZXhwb3J0czogW0ZpbHRlckNvbmRpdGlvbkNvbXBvbmVudCxGaWx0ZXJFeHByZXNzaW9uQ29tcG9uZW50XSxcclxuICBwcm92aWRlcnM6W1xyXG4gICAgQnNNb2RhbFNlcnZpY2UsXHJcbiAgICB7IHByb3ZpZGU6IExPQ0FMRV9JRCwgdXNlVmFsdWU6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdsYW5ndWFnZUNvZGUnKSB8fCAnemgtQ0hTJyB9XHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRmlsdGVyQ29uZGl0aW9uTW9kdWxlIHsgfVxyXG4iXX0=