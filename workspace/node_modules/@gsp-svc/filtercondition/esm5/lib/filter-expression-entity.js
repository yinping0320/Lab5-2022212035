/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/**
 * 表达式实体基础类
 */
var /**
 * 表达式实体基础类
 */
FilterExpressionBase = /** @class */ (function () {
    function FilterExpressionBase() {
    }
    return FilterExpressionBase;
}());
/**
 * 表达式实体基础类
 */
export { FilterExpressionBase };
/**
 * 过滤表达式复杂项
 * \@property relationOperator 关系操作符
 * \@property expressItems 表达式子项集合
 */
var /**
 * 过滤表达式复杂项
 * \@property relationOperator 关系操作符
 * \@property expressItems 表达式子项集合
 */
FilterExpression = /** @class */ (function (_super) {
    tslib_1.__extends(FilterExpression, _super);
    function FilterExpression() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.expressItems = [];
        return _this;
    }
    return FilterExpression;
}(FilterExpressionBase));
/**
 * 过滤表达式复杂项
 * \@property relationOperator 关系操作符
 * \@property expressItems 表达式子项集合
 */
export { FilterExpression };
if (false) {
    /** @type {?} */
    FilterExpression.prototype.relationOperator;
    /** @type {?} */
    FilterExpression.prototype.expressItems;
}
/**
 * 表达式属性项
 * \@property propertyName 属性名
 * \@property propertyDataType 属性数据类型
 * \@property operator 操作符
 * \@property expressType 表达式类型
 * \@property value 值
 * \@property parentItem 父项
 */
var /**
 * 表达式属性项
 * \@property propertyName 属性名
 * \@property propertyDataType 属性数据类型
 * \@property operator 操作符
 * \@property expressType 表达式类型
 * \@property value 值
 * \@property parentItem 父项
 */
ExpressionItem = /** @class */ (function (_super) {
    tslib_1.__extends(ExpressionItem, _super);
    function ExpressionItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ExpressionItem;
}(FilterExpressionBase));
/**
 * 表达式属性项
 * \@property propertyName 属性名
 * \@property propertyDataType 属性数据类型
 * \@property operator 操作符
 * \@property expressType 表达式类型
 * \@property value 值
 * \@property parentItem 父项
 */
export { ExpressionItem };
if (false) {
    /** @type {?} */
    ExpressionItem.prototype.propertyName;
    /** @type {?} */
    ExpressionItem.prototype.propertyDataType;
    /** @type {?} */
    ExpressionItem.prototype.operator;
    /** @type {?} */
    ExpressionItem.prototype.expressType;
    /** @type {?} */
    ExpressionItem.prototype.value;
    /** @type {?} */
    ExpressionItem.prototype.parentItem;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLWV4cHJlc3Npb24tZW50aXR5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1zdmMvZmlsdGVyY29uZGl0aW9uLyIsInNvdXJjZXMiOlsibGliL2ZpbHRlci1leHByZXNzaW9uLWVudGl0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQU1BOzs7O0lBQUE7SUFBa0MsQ0FBQztJQUFELDJCQUFDO0FBQUQsQ0FBQyxBQUFuQyxJQUFtQzs7Ozs7Ozs7OztBQU1uQzs7Ozs7O0lBQXNDLDRDQUFvQjtJQUExRDtRQUFBLHFFQUlDO1FBREcsa0JBQVksR0FBd0IsRUFBRSxDQUFDOztJQUMzQyxDQUFDO0lBQUQsdUJBQUM7QUFBRCxDQUFDLEFBSkQsQ0FBc0Msb0JBQW9CLEdBSXpEOzs7Ozs7Ozs7SUFGRyw0Q0FBa0M7O0lBQ2xDLHdDQUF1Qzs7Ozs7Ozs7Ozs7QUFXM0M7Ozs7Ozs7Ozs7SUFBb0MsMENBQW9CO0lBQXhEOztJQVFBLENBQUM7SUFBRCxxQkFBQztBQUFELENBQUMsQUFSRCxDQUFvQyxvQkFBb0IsR0FRdkQ7Ozs7Ozs7Ozs7Ozs7SUFORyxzQ0FBb0I7O0lBQ3BCLDBDQUFrQzs7SUFDbEMsa0NBQXlCOztJQUN6QixxQ0FBNEI7O0lBQzVCLCtCQUFVOztJQUNWLG9DQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV4cHJlc3NUeXBlRW51bSwgQ29tcGFyZVR5cGVFbnVtLCBSZWxhdGlvblR5cGVFbnVtfSBmcm9tIFwiLi90eXBlaW5mb1wiO1xyXG5pbXBvcnQgeyBQcm9wZXJ0eURhdGFUeXBlIH0gZnJvbSBcIi5cIjtcclxuXHJcbi8qKlxyXG4gKiDooajovr7lvI/lrp7kvZPln7rnoYDnsbtcclxuICovXHJcbmV4cG9ydCBjbGFzcyBGaWx0ZXJFeHByZXNzaW9uQmFzZXt9XHJcbi8qKlxyXG4gKiDov4fmu6Tooajovr7lvI/lpI3mnYLpoblcclxuICogQHByb3BlcnR5IHJlbGF0aW9uT3BlcmF0b3Ig5YWz57O75pON5L2c56ymXHJcbiAqIEBwcm9wZXJ0eSBleHByZXNzSXRlbXMg6KGo6L6+5byP5a2Q6aG56ZuG5ZCIXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRmlsdGVyRXhwcmVzc2lvbiBleHRlbmRzIEZpbHRlckV4cHJlc3Npb25CYXNlXHJcbntcclxuICAgIHJlbGF0aW9uT3BlcmF0b3I6UmVsYXRpb25UeXBlRW51bTtcclxuICAgIGV4cHJlc3NJdGVtczpGaWx0ZXJFeHByZXNzaW9uQmFzZVtdPVtdO1xyXG59XHJcbi8qKlxyXG4gKiDooajovr7lvI/lsZ7mgKfpoblcclxuICogQHByb3BlcnR5IHByb3BlcnR5TmFtZSDlsZ7mgKflkI1cclxuICogQHByb3BlcnR5IHByb3BlcnR5RGF0YVR5cGUg5bGe5oCn5pWw5o2u57G75Z6LXHJcbiAqIEBwcm9wZXJ0eSBvcGVyYXRvciDmk43kvZznrKZcclxuICogQHByb3BlcnR5IGV4cHJlc3NUeXBlIOihqOi+vuW8j+exu+Wei1xyXG4gKiBAcHJvcGVydHkgdmFsdWUg5YC8XHJcbiAqIEBwcm9wZXJ0eSBwYXJlbnRJdGVtIOeItumhuVxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIEV4cHJlc3Npb25JdGVtIGV4dGVuZHMgRmlsdGVyRXhwcmVzc2lvbkJhc2Vcclxue1xyXG4gICAgcHJvcGVydHlOYW1lOnN0cmluZztcclxuICAgIHByb3BlcnR5RGF0YVR5cGU6UHJvcGVydHlEYXRhVHlwZTtcclxuICAgIG9wZXJhdG9yOkNvbXBhcmVUeXBlRW51bTtcclxuICAgIGV4cHJlc3NUeXBlOkV4cHJlc3NUeXBlRW51bTtcclxuICAgIHZhbHVlOmFueTtcclxuICAgIHBhcmVudEl0ZW06c3RyaW5nO1xyXG59XHJcbiJdfQ==