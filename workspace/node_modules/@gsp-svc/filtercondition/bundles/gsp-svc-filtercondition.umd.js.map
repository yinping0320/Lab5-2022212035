{"version":3,"file":"gsp-svc-filtercondition.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@gsp-svc/filtercondition/lib/filter-expression-entity.ts","ng://@gsp-svc/filtercondition/lib/typeinfo.ts","ng://@gsp-svc/filtercondition/lib/property-entity.ts","ng://@gsp-svc/filtercondition/lib/injected-entity.ts","ng://@gsp-svc/filtercondition/lib/i18n/lang.resource.ts","ng://@gsp-svc/filtercondition/lib/filter-condition-locale.pipe.ts","ng://@gsp-svc/filtercondition/lib/filter-condition/filter-condition.component.ts","ng://@gsp-svc/filtercondition/lib/navigation-property-entity.ts","ng://@gsp-svc/filtercondition/lib/schema.ts","ng://@gsp-svc/filtercondition/lib/NewSchema.ts","ng://@gsp-svc/filtercondition/lib/adapter.ts","ng://@gsp-svc/filtercondition/lib/filter-service.ts","ng://@gsp-svc/filtercondition/lib/property-adapter.ts","ng://@gsp-svc/filtercondition/lib/filter-expression/filter-expression.component.ts","ng://@gsp-svc/filtercondition/lib/filter-condition.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ExpressTypeEnum, CompareTypeEnum, RelationTypeEnum} from \"./typeinfo\";\r\nimport { PropertyDataType } from \".\";\r\n\r\n/**\r\n * è¡¨è¾¾å¼å®ä½åºç¡ç±»\r\n */\r\nexport class FilterExpressionBase{}\r\n/**\r\n * è¿æ»¤è¡¨è¾¾å¼å¤æé¡¹\r\n * @property relationOperator å³ç³»æä½ç¬¦\r\n * @property expressItems è¡¨è¾¾å¼å­é¡¹éå\r\n */\r\nexport class FilterExpression extends FilterExpressionBase\r\n{\r\n    relationOperator:RelationTypeEnum;\r\n    expressItems:FilterExpressionBase[]=[];\r\n}\r\n/**\r\n * è¡¨è¾¾å¼å±æ§é¡¹\r\n * @property propertyName å±æ§å\r\n * @property propertyDataType å±æ§æ°æ®ç±»å\r\n * @property operator æä½ç¬¦\r\n * @property expressType è¡¨è¾¾å¼ç±»å\r\n * @property value å¼\r\n * @property parentItem ç¶é¡¹\r\n */\r\nexport class ExpressionItem extends FilterExpressionBase\r\n{\r\n    propertyName:string;\r\n    propertyDataType:PropertyDataType;\r\n    operator:CompareTypeEnum;\r\n    expressType:ExpressTypeEnum;\r\n    value:any;\r\n    parentItem:string;\r\n}\r\n","/**\r\n * è¡¨è¾¾å¼ç±»åæä¸¾\r\n */\r\nexport enum ExpressTypeEnum {\r\n  Value,\r\n  Expression\r\n}\r\n/**\r\n * å³ç³»ç±»åæä¸¾\r\n */\r\nexport enum RelationTypeEnum {\r\n  And,\r\n  Or,\r\n  AddProperty,\r\n  AddRelation\r\n}\r\n/**\r\n * æ¯è¾ç±»åæä¸¾\r\n */\r\nexport enum CompareTypeEnum {\r\n  GreaterThan,\r\n  GreaterThanOrEqual,\r\n  LessThan,\r\n  LessThanOrEqual,\r\n  Equal,\r\n  NotEqual,\r\n  Contains,\r\n  NotContains,\r\n  StartsWith,\r\n  NotStartsWith,\r\n  EndsWith,\r\n  NotEndsWith,\r\n  IsNull,\r\n  IsNotNull,\r\n  In,\r\n  NotIn\r\n}\r\n\r\n/**\r\n * å³ç³»ç±»å\r\n * åå«å¹¶ä¸ãæèãæ·»å å±æ§ãæ·»å å³ç³»\r\n */\r\nexport const RelationTypes=\r\n  [\r\n    { id: \"å¹¶ä¸\"},\r\n    { id: \"æè\"},\r\n  ];\r\n\r\n/**\r\n * æ¯è¾ç±»å\r\n * åå«å¸¸è§çå³ç³»æ¯è¾ç¬¦\r\n */\r\n// export const CompareTypes: Array<{ text: string, value: CompareTypeEnum }> =\r\n//   [\r\n//     { text: \"å¤§äº\", value: CompareTypeEnum.GreaterThan },\r\n//     { text: \"å¤§äºç­äº\", value: CompareTypeEnum.GreaterThanOrEqual },\r\n//     { text: \"å°äº\", value: CompareTypeEnum.LessThan },\r\n//     { text: \"å°äºç­äº\", value: CompareTypeEnum.LessThanOrEqual },\r\n//     { text: \"ç­äº\", value: CompareTypeEnum.Equal },\r\n//     { text: \"ä¸ç­äº\", value: CompareTypeEnum.NotEqual },\r\n//     { text: \"åå«\", value: CompareTypeEnum.Contains },\r\n//     { text: \"å¼å¤´æ¯\", value: CompareTypeEnum.StartsWith },\r\n//     { text: \"ç»å°¾æ¯\", value: CompareTypeEnum.EndsWith },\r\n//     { text: \"ä¸åå«\", value: CompareTypeEnum.NotContains },\r\n//     { text: \"ä¸åå«å¼å¤´æ¯\", value: CompareTypeEnum.NotStartsWith },\r\n//     { text: \"ä¸åå«ç»å°¾æ¯\", value: CompareTypeEnum.NotEndsWith },\r\n//     { text: \"ä¸º(ç©º)\", value: CompareTypeEnum.IsNull },\r\n//     { text: \"ä¸ä¸º(ç©º)\", value: CompareTypeEnum.IsNotNull },\r\n//     { text: \"å¨\", value: CompareTypeEnum.In },\r\n//     { text: \"ä¸å¨\", value: CompareTypeEnum.NotIn }\r\n//   ];\r\n  export const CompareTypes =[\r\n    {id: 'å¤§äº'},\r\n    {id: 'å¤§äºç­äº'},\r\n    {id: 'å°äº'},\r\n    {id: 'å°äºç­äº'},\r\n    {id: 'ç­äº'},\r\n    {id: 'ä¸ç­äº'},\r\n    {id: 'åå«'},\r\n    {id: 'å¼å¤´æ¯'},\r\n    {id: 'ç»å°¾æ¯'},\r\n    {id: 'ä¸åå«'},\r\n    {id: 'ä¸åå«å¼å¤´æ¯'},\r\n    {id: 'ä¸åå«ç»å°¾æ¯'},\r\n    {id: 'ä¸ºç©º'},\r\n    {id: 'ä¸ä¸º(ç©º)'},\r\n    {id: 'å¨'},\r\n    {id: 'ä¸å¨'}\r\n  ]\r\n  \r\n/**\r\n * è¡¨è¾¾å¼ç±»å\r\n * åå«å¼ãè¡¨è¾¾å¼ä¸¤ç§ç±»å\r\n */\r\nexport const ExpressTypes =\r\n  [\r\n    {id: 'å¼'},\r\n    {id: 'è¡¨è¾¾å¼'}\r\n  ];\r\n","/**\r\n * å±æ§å®ä½\r\n */\r\nexport class PropertyEntity\r\n{\r\n    name:string;\r\n    displayName:string;\r\n    propertyDataType:PropertyDataType;\r\n}\r\n/**\r\n * å­æ®µæ°æ®ç±»å\r\n */\r\nexport enum PropertyDataType\r\n{\r\n    String,\r\n    Int16,\r\n    Int32,\r\n    Int64,\r\n    Decimal,\r\n    Double,\r\n    Byte,\r\n    Char,\r\n    Boolean,\r\n    DateTime,\r\n    Array\r\n}","/**\r\n * æ³¨å¥å®ä½ä¿¡æ¯\r\n * @property name æ³¨å¥å¯¹è±¡å¨schemaä¸­çåç§°\r\n * @property schemaName æ³¨å¥å¯¹è±¡æå¨schema\r\n * @property injectedType æ³¨å¥å¯¹è±¡ç±»å\r\n */\r\n export class FilterInjectedEntity {\r\n    name: string;\r\n    schemaName: string;\r\n    injectedType: FilterInjectedType;\r\n}\r\n\r\nexport enum FilterInjectedType\r\n{\r\n    EntitySet,\r\n    EntityType\r\n}\r\n","export const Filter_Condition_LANG_RESOURCES = {\r\n    \"zh-CHS\": {\r\n        \"Item\": \"éæ©é¡¹\",\r\n        \"Operator\": \"æä½ç¬¦\",\r\n        \"ExpressType\": \"å¼ç±»å\",\r\n        \"Value\": \"å¼\",\r\n        \"Operation\": \"æä½\",\r\n        \"WindowTitle\": \"è¿æ»¤æ¡ä»¶è¡¨è¾¾å¼\",\r\n        \"Confirm\": \"ç¡®å®\",\r\n        \"Reset\": \"éç½®\",\r\n        \"Cancle\":\"åæ¶\",\r\n        \"Add\":\"æ·»å \",\r\n        \"Delete\":\"å é¤\",\r\n        \"AddGroup\":\"æ·»å æ¡ä»¶åç»\",\r\n        \"AddItem\":\"æ·»å æ¡ä»¶\",\r\n        \"PlaceHolder\":\"è¯·è¾å¥å¼\",\r\n        \"Expression\":\"è¡¨è¾¾å¼\",\r\n        \"SelectItem\":\"è¯·éæ©é¡¹ç®\",\r\n        \"And\":\"å¹¶ä¸\",\r\n        \"Or\":\"æè\",\r\n        \"SelectProperty\":\"éæ©å±æ§\",\r\n        \"GreaterThan\":\"å¤§äº\",\r\n        \"GreaterThanOrEqual\":\"å¤§äºç­äº\",\r\n        \"LessThan\":\"å°äº\",\r\n        \"LessThanOrEqual\":\"å°äºç­äº\",\r\n        \"Equal\":\"ç­äº\",\r\n        \"NotEqual\":\"ä¸ç­äº\",\r\n        \"Contains\":\"åå«\",\r\n        \"NotContains\":\"ä¸åå«\",\r\n        \"StartsWith\":\"å¼å¤´æ¯\",\r\n        \"NotStartsWith\":\"ä¸åå«å¼å¤´æ¯\",\r\n        \"EndsWith\":\"ç»å°¾æ¯\",\r\n        \"NotEndsWith\":\"ä¸åå«ç»å°¾æ¯\",\r\n        \"IsNull\":\"ä¸ºç©º\",\r\n        \"IsNotNull\":\"ä¸ä¸º(ç©º)\",\r\n        \"In\":\"å¨\",\r\n        \"NotIn\":\"ä¸å¨\",\r\n        \"Success\":\"è¡¨è¾¾å¼å·²çæï¼\",\r\n        \"Warning_SelectRelation\":\"è¯·éæ©å³ç³»å¼ï¼\",\r\n        \"Warning_ContainsFilters\":\"è¯·ä¿è¯å³ç³»ä¸­åå«è¿æ»¤é¡¹ï¼\",\r\n        \"Warning_ConditionsComplete\":\"è¯·ä¿è¯è¿æ»¤æ¡ä»¶å®æ´ï¼\",\r\n        \"Warning_NumericMatch\":\"æ°å¼åå­æ®µä¸å¯å¡«å­ç¬¦ï¼\",\r\n    },\r\n    \"en\": {\r\n        \"Item\": \"Item\",\r\n        \"Operator\": \"Operator\",\r\n        \"ExpressType\": \"ExpressType\",\r\n        \"Value\": \"Value\",\r\n        \"Operation\": \"Operation\",\r\n        \"WindowTitle\": \"FilterCondition\",\r\n        \"Confirm\": \"Confirm\",\r\n        \"Reset\": \"Reset\",\r\n        \"Cancle\":\"Cancle\",\r\n        \"Add\":\"Add\",\r\n        \"Delete\":\"Delete\",\r\n        \"AddGroup\":\"AddGroup\",\r\n        \"AddItem\":\"AddItem\",\r\n        \"PlaceHolder\":\"Please Input Value\",\r\n        \"Expression\":\"Expression\",\r\n        \"SelectItem\":\"Please Select Item\",\r\n        \"And\":\"And\",\r\n        \"Or\":\"Or\",\r\n        \"SelectProperty\":\"SelectProperty\",\r\n        \"GreaterThan\":\"GreaterThan\",\r\n        \"GreaterThanOrEqual\":\"GreaterThanOrEqual\",\r\n        \"LessThan\":\"LessThan\",\r\n        \"LessThanOrEqual\":\"LessThanOrEqual\",\r\n        \"Equal\":\"Equal\",\r\n        \"NotEqual\":\"NotEqual\",\r\n        \"Contains\":\"Contains\",\r\n        \"NotContains\":\"NotContains\",\r\n        \"StartsWith\":\"StartsWith\",\r\n        \"NotStartsWith\":\"NotStartsWith\",\r\n        \"EndsWith\":\"EndsWith\",\r\n        \"NotEndsWith\":\"NotEndsWith\",\r\n        \"IsNull\":\"IsNull\",\r\n        \"IsNotNull\":\"IsNotNull\",\r\n        \"In\":\"In\",\r\n        \"NotIn\":\"NotIn\",\r\n        \"Success\":\"Expression Has Been Createdï¼\",\r\n        \"Warning_SelectRelation\":\"Please Select Relations!\",\r\n        \"Warning_ContainsFilters\":\"Please ensure that the relationship contains filters!\",\r\n        \"Warning_ConditionsComplete\":\"Please ensure that the filter conditions are complete!\",\r\n        \"Warning_NumericMatch\":\"Numeric fields cannot be filled with characters\",\r\n    },\r\n    \"en-US\": {\r\n        \"Item\": \"Item\",\r\n        \"Operator\": \"Operator\",\r\n        \"ExpressType\": \"ExpressType\",\r\n        \"Value\": \"Value\",\r\n        \"Operation\": \"Operation\",\r\n        \"WindowTitle\": \"FilterCondition\",\r\n        \"Confirm\": \"Confirm\",\r\n        \"Reset\": \"Reset\",\r\n        \"Cancle\":\"Cancle\",\r\n        \"Add\":\"Add\",\r\n        \"Delete\":\"Delete\",\r\n        \"AddGroup\":\"AddGroup\",\r\n        \"AddItem\":\"AddItem\",\r\n        \"PlaceHolder\":\"Please Input Value\",\r\n        \"Expression\":\"Expression\",\r\n        \"SelectItem\":\"Please Select Item\",\r\n        \"And\":\"And\",\r\n        \"Or\":\"Or\",\r\n        \"SelectProperty\":\"SelectProperty\",\r\n        \"GreaterThan\":\"GreaterThan\",\r\n        \"GreaterThanOrEqual\":\"GreaterThanOrEqual\",\r\n        \"LessThan\":\"LessThan\",\r\n        \"LessThanOrEqual\":\"LessThanOrEqual\",\r\n        \"Equal\":\"Equal\",\r\n        \"NotEqual\":\"NotEqual\",\r\n        \"Contains\":\"Contains\",\r\n        \"NotContains\":\"NotContains\",\r\n        \"StartsWith\":\"StartsWith\",\r\n        \"NotStartsWith\":\"NotStartsWith\",\r\n        \"EndsWith\":\"EndsWith\",\r\n        \"NotEndsWith\":\"NotEndsWith\",\r\n        \"IsNull\":\"IsNull\",\r\n        \"IsNotNull\":\"IsNotNull\",\r\n        \"In\":\"In\",\r\n        \"NotIn\":\"NotIn\",\r\n        \"Success\":\"Expression has been createdï¼\",\r\n        \"Warning_SelectRelation\":\"Please Select Relations!\",\r\n        \"Warning_ContainsFilters\":\"Please ensure that the relationship contains filters!\",\r\n        \"Warning_ConditionsComplete\":\"Please ensure that the filter conditions are complete!\",\r\n        \"Warning_NumericMatch\":\"Numeric fields cannot be filled with characters\",\r\n    },\r\n    \"zh-CHT\": {\r\n        \"Item\": \"é¸æé \",\r\n        \"Operator\": \"æä½ç¬¦\",\r\n        \"ExpressType\": \"å¼é¡å\",\r\n        \"Value\": \"å¼\",\r\n        \"Operation\": \"æä½\",\r\n        \"WindowTitle\": \"éæ¿¾æ¢ä»¶é¶éå¼\",\r\n        \"Confirm\": \"ç¢ºå®\",\r\n        \"Reset\": \"éç½®\",\r\n        \"Cancle\":\"åæ¶\",\r\n        \"Add\":\"æ·»å \",\r\n        \"Delete\":\"åªé¤\",\r\n        \"AddGroup\":\"æ·»å æ¢ä»¶åçµ\",\r\n        \"AddItem\":\"æ·»å æ¢ä»¶\",\r\n        \"PlaceHolder\":\"è«è¼¸å¥å¼\",\r\n        \"Expression\":\"é¶éå¼\",\r\n        \"SelectItem\":\"è«é¸æé ç®\",\r\n        \"And\":\"ä¸¦ä¸\",\r\n        \"Or\":\"æè\",\r\n        \"SelectProperty\":\"é¸æå±¬æ§\",\r\n        \"GreaterThan\":\"å¤§æ¼\",\r\n        \"GreaterThanOrEqual\":\"å¤§æ¼ç­æ¼\",\r\n        \"LessThan\":\"å°æ¼\",\r\n        \"LessThanOrEqual\":\"å°æ¼ç­æ¼\",\r\n        \"Equal\":\"ç­æ¼\",\r\n        \"NotEqual\":\"ä¸ç­æ¼\",\r\n        \"Contains\":\"åå«\",\r\n        \"NotContains\":\"ä¸åå«\",\r\n        \"StartsWith\":\"éé ­æ¯\",\r\n        \"NotStartsWith\":\"ä¸åå«éé ­æ¯\",\r\n        \"EndsWith\":\"çµå°¾æ¯\",\r\n        \"NotEndsWith\":\"ä¸åå«çµå°¾æ¯\",\r\n        \"IsNull\":\"çºç©º\",\r\n        \"IsNotNull\":\"ä¸çºç©º\",\r\n        \"In\":\"å¨\",\r\n        \"NotIn\":\"ä¸å¨\",\r\n        \"Success\":\"é¶éå¼å·²çæï¼\",\r\n        \"Warning_SelectRelation\":\"è«é¸æéä¿å¼ï¼\",\r\n        \"Warning_ContainsFilters\":\"è«ä¿è­éä¿ä¸­åå«éæ¿¾é ï¼\",\r\n        \"Warning_ConditionsComplete\":\"è«ä¿è­éæ¿¾æ¢ä»¶å®æ´ï¼\",\r\n        \"Warning_NumericMatch\":\"æ¸å¼åå­æ®µä¸å¯å¡«å­ç¬¦ï¼\",\r\n    }    \r\n};","import { Pipe, PipeTransform, Inject, LOCALE_ID } from '@angular/core';\r\nimport { Filter_Condition_LANG_RESOURCES } from './i18n/lang.resource';\r\n\r\n@Pipe({ name: 'locale' })\r\nexport class FilterConditionLocalePipe implements PipeTransform {\r\n    private readonly defaultLang: string = \"zh-CHS\";\r\n    private langCode: string;\r\n    private lang: {};\r\n    constructor(\r\n        @Inject(LOCALE_ID) localeId: string\r\n    ) {\r\n        localeId = localStorage.getItem('languageCode');\r\n        this.langCode = localeId || this.defaultLang;\r\n        this.lang = Filter_Condition_LANG_RESOURCES[this.langCode] || Filter_Condition_LANG_RESOURCES[this.defaultLang];\r\n    }\r\n    transform(name: string): any {\r\n        return this.lang[name] || name;\r\n    }\r\n}\r\n\r\n","import { Component, ViewChild, Input, EventEmitter, Output, OnInit, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TreeTableComponent, TreeNode } from '@farris/ui-treetable';\r\nimport { FilterExpression, ExpressionItem } from '../filter-expression-entity';\r\nimport { ExpressionService } from '@gsp-svc/expression';\r\nimport { VarEntity } from '@gsp-svc/expression';\r\nimport { Schema } from '@gsp-svc/expression';\r\nimport { GspCommonDataType } from '@gsp-bef/gsp-cm-metadata';\r\nimport { InjectedEntity } from '@gsp-svc/expression';\r\nimport { ExpressTypeEnum, CompareTypes, RelationTypes, ExpressTypes, RelationTypeEnum, CompareTypeEnum} from '../typeinfo';\r\nimport { PropertyDataType } from '../property-entity';\r\nimport {FieldType} from '../field-type';\r\nimport { FilterEntitySchema } from '../schema';\r\nimport { FilterInjectedEntity } from '../injected-entity';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { FilterConditionLocalePipe } from '../filter-condition-locale.pipe';\r\nimport { NewSchema } from '../NewSchema';\r\n@Component({\r\n  selector: 'app-filter-condition',\r\n  templateUrl: './filter-condition.component.html',\r\n  styleUrls: ['./filter-condition.component.css'],\r\n  providers: [ExpressionService],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\n/**\r\n * è¿æ»¤æ¡ä»¶å¼¹åºæ¡é»è¾ç±»\r\n */\r\nexport class FilterConditionComponent implements OnInit {\r\n  localePipe: FilterConditionLocalePipe;\r\n  constructor(private expr: ExpressionService,\r\n    private notifyservice:NotifyService,\r\n    @Inject(LOCALE_ID) localeId:string,\r\n    ) {\r\n      localeId =  localStorage.getItem('languageCode');\r\n      this.localePipe = new FilterConditionLocalePipe(localeId);\r\n     }\r\n  \r\n  treeDataTemp: TreeNode[]\r\n  //è·å¾æ åè¡¨ç»ä»¶æ\r\n  @ViewChild('tt') tt: TreeTableComponent;\r\n  //å³é­çªå£äºä»¶\r\n  @Output() closed = new EventEmitter<string>();\r\n  @Output() result = new EventEmitter<string>();\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼ä¸ä¸æå®ä½\r\n  @Input() contextEntity:VarEntity[] =[];\r\n  //é¢ç½®è®¡ç®é»è®¤è¡¨è¾¾å¼æ¾ç¤º\r\n  @Input() expressionText: string = \"\";\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼ä¸­çschema\r\n  @Input() expressionSchema: Array<{ name: string, schema: Schema }> = [];\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼ä¸­çæ³¨å¥å®ä½\r\n  @Input() expressionInjectedEntities: InjectedEntity[] = [];\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼cdté\r\n  @Input() expressionCDT: GspCommonDataType[] = [];\r\n  //é¢ç½®å±æ§åè¡¨\r\n  @Input() propertyList: Array<{ text: string,propertyDataType:PropertyDataType, value: string,parentItem:string}> = [];\r\n  //é¢ç½®è¿æ»¤è¡¨è¾¾å¼ä¸²\r\n  @Input() filterExpressionString: string = null;\r\n  //é¢ç½®è¿æ»¤è¡¨è¾¾å¼schema\r\n  @Input() schemaMap = new Map<string,FilterEntitySchema>();\r\n  //==============æ°å å¥çnewSchemaMap=======================\r\n  //é¢ç½®è¿æ»¤è¡¨è¾¾å¼newSchema\r\n   @Input() newSchemaMap = new Map<string,NewSchema>();\r\n  //========================================================\r\n  //é¢ç½®è¿æ»¤è¡¨è¾¾å¼æ³¨å¥å®ä½\r\n  @Input() injectedEntity = new FilterInjectedEntity();\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼å¼¹åºæ¡å®½åº¦\r\n  @Input() exprWinWidth:number =850;\r\n  popupSettings=\r\n  {\r\n    popupClass:\"lpopup\"\r\n  }\r\n\r\n  public operatorView = [];\r\n  //æä½æ¯è¾ç¬¦é\r\n  public operators= [];\r\n  \r\n  public stringOperators = [];\r\n\r\n  public NumberOperators = [];\r\n  //å³ç³»é\r\n  public relations = [];\r\n  //è¡¨è¾¾å¼ç±»åé\r\n  public expressTypes =  [];\r\n  public filterExpression: FilterExpression;\r\n  //æ å½¢ç»æèç¹å®ä½é\r\n  public nodeTemp: TreeNode[];\r\n  //æä½é»è¾éé»è®¤æ¾ç¤ºå¼\r\n  defaultSelectGroup:string;\r\n  defaultSelectItem:string;\r\n  //æä½æ¯è¾ç¬¦é»è®¤æ¾ç¤ºå¼\r\n  public defaultOperatorText:string;\r\n  //è¡¨è¾¾å¼ç±»åé»è®¤æ¾ç¤ºå¼\r\n  public defaultExpressTypeText:string;\r\n  //å¤æ­æ¯å¦ä¿å­ç¼è¾åçè¿æ»¤è¡¨è¾¾å¼\r\n  public isEdited: boolean = false;\r\n  //é¢ç½®è¿æ»¤è¡¨è¾¾å¼ä¸²\r\n  public filterExpressionPre: FilterExpression;\r\n  public displayPopup:boolean = false;\r\n  cols:any[];\r\n  groupIcon = '<span class=\"f-icon f-icon-windows\"></span>';\r\n  treeData: TreeNode[] = [];\r\n   //æ¶æ¯æç¤º\r\n  private notifies = {};  \r\n  private itemValue:string;\r\n  //åå§åï¼å¤å¶treeDataå¼,treeDataTempç¨äºè½¬æ¢ä¸ºFilterExpressionå®ä½\r\n  ngOnInit(): void {\r\n    //å¹¶ä¸æ å½¢è¡¨ç»å®çæ¾ç¤ºçå \r\n    this.cols = [\r\n      { field: 'item', title: this.localePipe.transform(\"Item\"), width: 271 },\r\n      { field: 'operator', title: this.localePipe.transform(\"Operator\"), width: 191 },\r\n      { field: 'expressType', title: this.localePipe.transform(\"ExpressType\"), width: 180 },\r\n      { field: 'value', title: this.localePipe.transform(\"Value\"), width: 214 },\r\n      { field: 'operation', title: this.localePipe.transform(\"Operation\"), width: 130}];\r\n    if (!(this.filterExpressionString) || this.filterExpressionString == \"\") {\r\n      this.treeData = [\r\n        {\r\n          data:\r\n          {\r\n            \"id\": 1,                    //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n            \"item\": this.localePipe.transform(\"And\"),             //å±æ§é¡¹\r\n            \"propertyDataType\":null,    //å±æ§æ°æ®ç±»å\r\n            \"operator\": null,           //æä½æ¯è¾ç¬¦\r\n            \"expressType\": null,        //è¡¨è¾¾å¼ç±»å\r\n            \"value\": null,              //å¼\r\n            \"displaySelect\":false,      //éæ©é¡¹æ¾ç¤º\r\n            \"displayOperator\": false,   //æä½ç¬¦é¡¹æ¾ç¤º\r\n            \"displayExpressType\": false,//è¡¨è¾¾å¼ç±»åæ¾ç¤º\r\n            \"displayValue\": false,      //å¼æ¾ç¤º\r\n            \"parentItem\":null           //ç¶å­é¡¹ \r\n          },\r\n          children: [],                 //å­èç¹éå\r\n          expanded: true                //æ¯å¦å±å¼\r\n        }\r\n      ];\r\n    }\r\n    else {\r\n      this.filterExpressionPre = JSON.parse(this.filterExpressionString);\r\n      this.treeData.push(this.unConvert(this.filterExpressionPre));\r\n      this.treeData[0].data.id = 1;\r\n    }\r\n    this.treeDataTemp = this.treeData;\r\n    this.defaultSelectItem =  this.localePipe.transform(\"SelectItem\");\r\n    this.defaultExpressTypeText = this.localePipe.transform(\"Value\");\r\n    this.defaultSelectGroup=this.localePipe.transform(\"And\");\r\n    this.defaultOperatorText = this.localePipe.transform(\"GreaterThan\");\r\n    this.notifies = {\r\n      1: { type: 'success', msg: this.localePipe.transform(\"Success\")},\r\n      2: { type: 'warning', msg: this.localePipe.transform(\"Warning_SelectRelation\") },\r\n      3: { type: 'warning',msg: this.localePipe.transform(\"Warning_ContainsFilters\") },\r\n      4: { type: 'warning',msg: this.localePipe.transform(\"Warning_ConditionsComplete\")},\r\n      5: { type: 'warning',msg:this.localePipe.transform(\"Warning_NumericMatch\")}\r\n    };  \r\n    this.expressTypes =  [\r\n      {id: this.localePipe.transform(\"Value\")},\r\n      {id: this.localePipe.transform(\"Expression\")}\r\n    ];\r\n    this.relations =  [\r\n      { id: this.localePipe.transform(\"And\")},\r\n      { id: this.localePipe.transform(\"Or\")},\r\n    ];\r\n    this.operators = [\r\n      { id: this.localePipe.transform(\"GreaterThan\")},\r\n      { id: this.localePipe.transform(\"GreaterThanOrEqual\")},\r\n      { id: this.localePipe.transform(\"LessThan\")},\r\n      { id: this.localePipe.transform(\"LessThanOrEqual\")},\r\n      { id: this.localePipe.transform(\"Equal\")},\r\n      { id: this.localePipe.transform(\"NotEqual\")},\r\n      { id: this.localePipe.transform(\"Contains\")},\r\n      { id: this.localePipe.transform(\"NotContains\")},\r\n      { id: this.localePipe.transform(\"StartsWith\")},\r\n      { id: this.localePipe.transform(\"EndsWith\")},\r\n      { id: this.localePipe.transform(\"NotStartsWith\")},\r\n      { id: this.localePipe.transform(\"NotEndsWith\")},\r\n      { id: this.localePipe.transform(\"IsNull\")},\r\n      { id: this.localePipe.transform(\"IsNotNull\")},\r\n      { id: this.localePipe.transform(\"In\")},\r\n      { id: this.localePipe.transform(\"NotIn\")},\r\n    ];\r\n    this.NumberOperators = [\r\n      { id: this.localePipe.transform(\"GreaterThan\")},\r\n      { id: this.localePipe.transform(\"GreaterThanOrEqual\")},\r\n      { id: this.localePipe.transform(\"LessThan\")},\r\n      { id: this.localePipe.transform(\"LessThanOrEqual\")},\r\n      { id: this.localePipe.transform(\"Equal\")},\r\n      { id: this.localePipe.transform(\"NotEqual\")},\r\n      { id: this.localePipe.transform(\"IsNull\")},\r\n      { id: this.localePipe.transform(\"IsNotNull\")},\r\n    ];\r\n    this.stringOperators = [\r\n      { id: this.localePipe.transform(\"Equal\")},\r\n      { id: this.localePipe.transform(\"NotEqual\")},\r\n      { id: this.localePipe.transform(\"Contains\")},\r\n      { id: this.localePipe.transform(\"NotContains\")},\r\n      { id: this.localePipe.transform(\"StartsWith\")},\r\n      { id: this.localePipe.transform(\"EndsWith\")},\r\n      { id: this.localePipe.transform(\"NotStartsWith\")},\r\n      { id: this.localePipe.transform(\"NotEndsWith\")},\r\n      { id: this.localePipe.transform(\"IsNull\")},\r\n      { id: this.localePipe.transform(\"IsNotNull\")},\r\n    ];\r\n  }\r\n \r\n\r\n  /**\r\n   * æ å½¢è¡¨ä¸­èç¹éæ©è§¦åå½æ°\r\n   * @param $event æéèç¹ä¿¡æ¯\r\n   */\r\n  nodeSelected($event) {\r\n   \r\n    //éèæææçèç¹éæ©ç¼è¾æ¡ï¼åæ¬å­èç¹ç\r\n    this.hideNodeEditor(this.treeData);\r\n\r\n    //å°æéèç¹æ¯è¾é¡¹ãè¡¨è¾¾å¼ç±»åé¡¹ãå¼ç¼è¾æ¡æ¾ç¤ºï¼å¹¶å°æéå¯¹åºæ°æ®èµç»é»è®¤é¡¹è¿è¡æ¾ç¤º \r\n    this.defaultOperatorText = $event.node.data.operator;\r\n    this.defaultExpressTypeText = $event.node.data.expressType;\r\n    if($event.node.data.item==this.localePipe.transform(\"And\") || $event.node.data.item==this.localePipe.transform(\"Or\"))\r\n    {\r\n      this.defaultSelectGroup = $event.node.data.item;\r\n    }\r\n    else if($event.node.data.item!==this.localePipe.transform(\"SelectProperty\"))\r\n    {\r\n      let properties = this.propertyList.filter(x => x.text == $event.node.data.item);\r\n      this.defaultSelectItem = properties[0].value;\r\n\r\n      if(properties[0].propertyDataType==PropertyDataType.String){\r\n        this.operatorView = this.stringOperators;\r\n      }\r\n      else if(properties[0].propertyDataType==PropertyDataType.Int16||\r\n      properties[0].propertyDataType==PropertyDataType.Int32 ||\r\n      properties[0].propertyDataType==PropertyDataType.Int64 ||\r\n      properties[0].propertyDataType==PropertyDataType.Decimal ||\r\n      properties[0].propertyDataType==PropertyDataType.Double){\r\n        this.operatorView = this.NumberOperators;\r\n      }\r\n      else this.operatorView = this.operators;\r\n    }\r\n   \r\n    $event.node.data.displayOperator = true;\r\n    $event.node.data.displayExpressType = true;\r\n    $event.node.data.displayValue = true;\r\n    $event.node.data.displaySelect = true;\r\n  };\r\n  /**\r\n   * éèæææçèç¹éæ©ç¼è¾æ¡ï¼åæ¬å­èç¹ç\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   */\r\n  hideNodeEditor(treeNodes: TreeNode[]) {\r\n    treeNodes.forEach(element => {\r\n      element.data.displayOperator = false;\r\n      element.data.displayExpressType = false;\r\n      element.data.displayValue = false;\r\n      element.data.displaySelect = false;\r\n      //è¥æå­èç¹ï¼åå°å¶å­èç¹çç¼è¾éæ©æ¡éè\r\n      if ((element.children) && element.children.length != 0) {\r\n        this.hideNodeEditor(element.children);\r\n      }\r\n    });\r\n  };\r\n  /***\r\n   * éæ©é»è¾éæ¶\r\n   */\r\n  selectGroup($event)\r\n  {\r\n    this.propertyNodeOperate($event, this.treeData, FieldType.Group);\r\n  }\r\n  /***\r\n   * éæ©é¡¹æ¶\r\n   */\r\n  selectItem($event)\r\n  {\r\n    this.propertyNodeOperate($event, this.treeData, FieldType.Item);\r\n  }\r\n  /**\r\n   * éæ©æ¯è¾æä½ç¬¦æ¶\r\n   * @param $event æ¯è¾æä½é¡¹ä¿¡æ¯\r\n   */\r\n  selectOperator($event) {\r\n    this.propertyNodeOperate($event, this.treeData, FieldType.Operation);\r\n  };\r\n  /**\r\n   * éæ©å¼ç±»åæ¶\r\n   * @param $event å¼ç±»åé¡¹ä¿¡æ¯\r\n   */\r\n  selectExpressType($event) {\r\n    this.propertyNodeOperate($event, this.treeData, FieldType.Valuetype)\r\n  };\r\n  /**\r\n   * éæ©ç»æåéèè¯¥å­æ®µéæ©æ¡\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   * @param fieldType æéå­æ®µ\r\n   */\r\n  hideFieldEditor(treeNodes: TreeNode[], fieldType: FieldType) {\r\n    //æ¾å°ææä½çèç¹ï¼æ ¹æ®æéæ©çå­æ®µå°å¯¹åºéæ©ç¼è¾æ¡éè\r\n    treeNodes.forEach(treeNode => {\r\n      if (this.tt.isSelected(treeNode)) {\r\n        switch (fieldType) {\r\n          case FieldType.Item:treeNode.data.displaySelect = false;break;\r\n          case FieldType.Operation: treeNode.data.displayOperator = false; break;\r\n          case FieldType.Valuetype: treeNode.data.displayExpressType = false; break;\r\n        }\r\n        return;\r\n      }\r\n      //è¥æªæ¾å°æéèç¹ï¼åæ¾å¶å­èç¹\r\n      else if ((treeNode.children) && treeNode.children.length != 0) {\r\n        this.hideFieldEditor(treeNode.children, fieldType);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * æå¼è®¡ç®è¡¨è¾¾å¼ç¼è¾å¨\r\n   */\r\n  openExpressEditor() {\r\n    let that = this;\r\n    //é¢ç½®è®¡ç®è¡¨è¾¾å¼å¼¹åºæ¡å®½åº¦\r\n    //this.expr.addWindowWidth(this.exprWinWidth);\r\n    //æ·»å é¢ç½®ä¸ä¸æåé\r\n    if(this.contextEntity && this.contextEntity.length!=0)\r\n    {\r\n      this.contextEntity.forEach(element => {\r\n        this.expr.addContext(element);\r\n      });\r\n    }\r\n    \r\n    //æ·»å é¢ç½®è¡¨è¾¾å¼ææ¬\r\n    let selectNode = this.isSelected(this.treeData);\r\n    if((selectNode) && (selectNode.data.value!=\"\") && (selectNode.data.value!=null))\r\n    {\r\n      this.expr.addExpressionText(selectNode.data.value);\r\n    }\r\n    else this.expr.addExpressionText(this.expressionText);\r\n    //æ·»å æ³¨å¥å®ä½\r\n    this.expressionInjectedEntities.forEach(element => {\r\n      this.expr.addInjectedEntity(element.name, element.schemaName, element.injectedName, element.injectedType);\r\n    });\r\n    //æ·»å schema\r\n    this.expressionSchema.forEach(element => {\r\n      this.expr.addSchema(element.name, element.schema);\r\n    });\r\n    //æ·»å cdt\r\n    this.expr.addCDT(this.expressionCDT);\r\n    //æå¼è¡¨è¾¾å¼ç¼è¾å¨å¹¶è¿åç¼è¾ç»æ\r\n    this.expr.buildExpression().then(info => {\r\n      let expressInfo: any = info;\r\n      this.displayExpressResult(that.treeData, expressInfo);\r\n    });\r\n  }\r\n   /**\r\n   * éä¸­èç¹éæ©\r\n   * @param treeNodes å³ç³»ç»\r\n   */\r\n  isSelected(treeNodes:TreeNode[]):any\r\n  {\r\n    let treeNode:TreeNode;\r\n    for(var i = 0; i < treeNodes.length; i ++)\r\n    {\r\n      if (this.tt.isSelected(treeNodes[i])) {\r\n        treeNode = treeNodes[i];\r\n        break;\r\n      }\r\n      //è¥å¨è¯¥å±èç¹ä¸­æªæ¾å°æéèç¹ï¼åæ¾å¶å­èç¹\r\n      else if ((treeNodes[i].children) && treeNodes[i].children.length != 0) {\r\n        treeNode = this.isSelected(treeNodes[i].children);\r\n        if((treeNode)) break; \r\n      }\r\n    }\r\n    return treeNode;\r\n  }\r\n  /**\r\n   * å°è®¡ç®è¡¨è¾¾å¼ç»æå±ç¤ºå°å¯¹åºèç¹\r\n   * @param treeNodes æ è¡¨ç»å®ç»æ\r\n   * @param expressInfo è®¡ç®è¡¨è¾¾å¼å¾å°ç»æ\r\n   */\r\n  displayExpressResult(treeNodes: TreeNode[], expressInfo: string) {\r\n    //æ¾å°æéèç¹å®ä½ï¼å¹¶å°è®¡ç®è¡¨è¾¾å¼æå¾ç»æèµç»å¯¹åºå±æ§è¿è¡æ¾ç¤º\r\n    treeNodes.forEach(treeNode => {\r\n      if (this.tt.isSelected(treeNode)) {\r\n        treeNode.data.value = expressInfo;\r\n        return;\r\n      }\r\n      //è¥å¨è¯¥å±èç¹ä¸­æªæ¾å°æéèç¹ï¼åæ¾å¶å­èç¹\r\n      else if ((treeNode.children) && treeNode.children.length != 0) {\r\n        this.displayExpressResult(treeNode.children, expressInfo);\r\n      }\r\n      //è¥ä»æªæ¾å°ï¼åä¸è¿è¡ä»»ä½æä½\r\n    });\r\n  }\r\n  /**\r\n   * å³ç³»éæ©æé®éæ©äºä»¶\r\n   * @param $event éæ©æé®æéä¿¡æ¯\r\n   */\r\n  itemClick($event) {\r\n    //è¥éæ©æ·»å å³ç³»\r\n    if ($event.value == RelationTypeEnum.AddRelation) {\r\n      this.addNode(this.treeData,this.localePipe.transform(\"And\"),null,null);\r\n    }\r\n    //è¥éæ©æ·»å å±æ§\r\n    else if ($event.value == RelationTypeEnum.AddProperty) {\r\n      this.addNode(this.treeData, this.localePipe.transform(\"SelectProperty\"),this.localePipe.transform(\"Equal\"),this.localePipe.transform(\"Value\"));\r\n    }\r\n    else this.propertyNodeOperate($event, this.treeData, FieldType.Item);\r\n  }\r\n \r\n  /**\r\n   * éæ©å±æ§èç¹æä½\r\n   * å¯¹æ°æ·»å çå±æ§èç¹è¿è¡é»è¾å¤ç\r\n   * @param value \r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   * @param fieldType èç¹ç±»å\r\n   */\r\n  propertyNodeOperate(event: any, treeNodes: TreeNode[], fieldType: FieldType) {\r\n    treeNodes.forEach(treenode => {\r\n      if (this.tt.isSelected(treenode)) {\r\n        //å¯¹æéèç¹è¿è¡èµå¼æä½\r\n        switch (fieldType) {\r\n          case FieldType.Group:\r\n          {\r\n            treenode.data.item = event.data.id;\r\n            this.defaultSelectGroup = event.data.id;\r\n          }break;\r\n          case FieldType.Item: \r\n          {\r\n            treenode.data.item =event.data.text;\r\n            this.defaultSelectItem = event.data.value;\r\n            treenode.data.parentItem = event.data.parentItem;\r\n            treenode.data.propertyDataType = event.data.propertyDataType;\r\n\r\n            if(treenode.data.propertyDataType==PropertyDataType.String){\r\n              this.operatorView = this.stringOperators;\r\n            }\r\n            else if(treenode.data.propertyDataType==PropertyDataType.Int16 ||\r\n            treenode.data.propertyDataType==PropertyDataType.Int32 ||\r\n            treenode.data.propertyDataType==PropertyDataType.Int64 ||\r\n            treenode.data.propertyDataType==PropertyDataType.Decimal ||\r\n            treenode.data.propertyDataType==PropertyDataType.Double){\r\n              this.operatorView = this.NumberOperators;\r\n            }\r\n            else this.operatorView = this.operators;\r\n\r\n            \r\n          } break;\r\n          case FieldType.Operation: \r\n          {\r\n            treenode.data.operator = event.data.id;\r\n            this.defaultOperatorText = event.data.id;        \r\n          } break;\r\n          case FieldType.Valuetype: \r\n          {\r\n            treenode.data.expressType = event.data.id; \r\n            this.defaultExpressTypeText = event.data.id;          \r\n          } break;\r\n        }\r\n        return;\r\n      }\r\n      //å¦åå¯¹å¶å­èç¹è¿è¡èµå¼æä½\r\n      else if ((treenode.children) && treenode.children.length != 0) {\r\n        this.propertyNodeOperate(event, treenode.children, fieldType);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * æ ¹æ®æéä¸ºå³ç³»æèå±æ§å¯¹æ°èç¹è¿è¡åå§å\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   * @param defaultString æ°èç¹æ¾ç¤ºé»è®¤å¼\r\n   */\r\n  addNode(treeNodes: TreeNode[], defaultString: any,defaultOperator:string,defalutExpressType:string)\r\n   {\r\n    treeNodes.forEach(treeNode => {\r\n      if (this.tt.isSelected(treeNode)) {\r\n        //è¥å³ç³»å¼ä¸ºç©º\r\n        if(!(treeNode.data.item))\r\n        {\r\n          this.notifyservice[this.notifies['2'].type]({\r\n            msg: this.notifies['2'].msg\r\n          });  \r\n          return;\r\n        }\r\n        //è¥ä¸ºæéçå³ç³»èç¹ï¼åå¨å¶å­é¡¹éæ·»å æ°å­èç¹\r\n        let newNode: TreeNode =\r\n        {\r\n          data:\r\n          {\r\n            \"item\": defaultString,\r\n            \"propertyDataType\":null,    //å±æ§æ°æ®ç±»å\r\n            \"operator\": defaultOperator,\r\n            \"expressType\": defalutExpressType,\r\n            \"value\": null,\r\n            \"id\": Math.random(),\r\n            \"parentItem\":null      \r\n          },\r\n          parent: treeNode,\r\n          children: [],\r\n          expanded: true\r\n        };\r\n        //åè¯¥æéèç¹çå­é¡¹æ·»å æ°èç¹\r\n        treeNode.children.push(newNode);\r\n        return;\r\n      }\r\n      //è¥æªæ¾å°æéèç¹ï¼ä¸è¯¥èç¹å­é¡¹ä¸ä¸ºç©ºï¼åå¨å¶å­é¡¹ä¸­æ¥æ¾æéèç¹\r\n      else if ((treeNode.children) && treeNode.children.length != 0) {\r\n        this.addNode(treeNode.children, defaultString,defaultOperator,defalutExpressType);\r\n      }\r\n    });\r\n    this.tt.updateSerializedValue();\r\n  }\r\n  /**\r\n   * å é¤èç¹\r\n   * @param treeNode è¦å é¤çèç¹\r\n   */\r\n  deleteNode($event) {\r\n    this.onDelete(this.treeData,$event);\r\n  }\r\n  /**\r\n   * å é¤èç¹å·ä½å®ç°ç±»\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   */\r\n  onDelete(treeNodes: TreeNode[],id:number) {\r\n    treeNodes.forEach(treeNode => {\r\n      if (treeNode.data.id==id) {\r\n        if(treeNode.data.id==1)\r\n        {\r\n          this.treeData = [\r\n            {\r\n              data:\r\n              {\r\n                \"id\": 1,                    //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n                \"propertyDataType\":null,    //å±æ§æ°æ®ç±»å\r\n                \"item\": this.localePipe.transform(\"And\"),              //å±æ§é¡¹\r\n                \"operator\": null,           //æä½æ¯è¾ç¬¦\r\n                \"expressType\": null,        //è¡¨è¾¾å¼ç±»å\r\n                \"value\": null,              //å¼\r\n                \"displaySelect\":false,      //éæ©é¡¹æ¾ç¤º\r\n                \"displayOperator\": false,   //æä½ç¬¦é¡¹æ¾ç¤º\r\n                \"displayExpressType\": false,//è¡¨è¾¾å¼ç±»åæ¾ç¤º\r\n                \"displayValue\": false,      //å¼æ¾ç¤º\r\n                \"parentItem\":null           //ç¶é¡¹\r\n              },\r\n              children: [],                 //å­èç¹éå\r\n              expanded: true                //æ¯å¦å±å¼\r\n            }\r\n          ];\r\n          return;\r\n        }\r\n        //æéèç¹æå¨æ°\r\n        let index = treeNodes.indexOf(treeNode);\r\n        //å°æéèç¹åé¤\r\n        treeNodes.splice(index, 1);\r\n      }\r\n      else if ((treeNode.children) && treeNode.children.length != 0) {\r\n        treeNode.children = this.onDelete(treeNode.children,id);\r\n      }\r\n    });\r\n    this.tt.updateSerializedValue();\r\n    return treeNodes;\r\n  }\r\n  /**\r\n   * ç¡®å®\r\n   * çæè¿æ»¤è¡¨è¾¾å¼\r\n   */\r\n  onConfirm() {\r\n    this.treeDataTemp = this.treeData;\r\n    let isNull = true;\r\n    let isMatch = true;\r\n    if(this.checkNull(this.treeDataTemp[0].children,isNull) && this.checkMatch(this.treeDataTemp[0].children, isMatch))\r\n    {\r\n      this.filterExpression = new FilterExpression();\r\n      //æ ¹æ®æ å½¢æ°æ®ç»æè½¬åä¸ºè¿æ»¤è¡¨è¾¾å¼å®ä½\r\n      this.convert(this.filterExpression, this.treeDataTemp[0]);\r\n      this.isEdited = true;\r\n      this.notifyservice[this.notifies['1'].type]({\r\n        msg: this.notifies['1'].msg\r\n      });  \r\n      this.close();\r\n      this.closed.emit(\"close\");\r\n    }\r\n   \r\n  }\r\n  //éå½æ£æ¥æ´ä¸ªè¿æ»¤è¡¨è¾¾å¼æ¯å¦ææ¼å¡«çé¡¹\r\n  checkNull(treeNodes:TreeNode[],isNull:boolean):boolean\r\n  {\r\n    for(var i=0;i<treeNodes.length;i++)\r\n    {\r\n      if(treeNodes[i].data.item == this.localePipe.transform(\"And\") || treeNodes[i].data.item == this.localePipe.transform(\"Or\"))\r\n      {\r\n        if(!(treeNodes[i].children) || treeNodes[i].children.length==0) \r\n        {\r\n          this.notifyservice[this.notifies['3'].type]({\r\n            msg: this.notifies['3'].msg\r\n          });  \r\n          isNull = false;\r\n          break;\r\n        }\r\n        else if(!this.checkNull(treeNodes[i].children,isNull)) \r\n        {\r\n          isNull = false;\r\n          break;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        if(!(treeNodes[i].data.item) || treeNodes[i].data.item == this.localePipe.transform(\"SelectProperty\")\r\n        || !(treeNodes[i].data.operator) || !(treeNodes[i].data.expressType) \r\n        || treeNodes[i].data.value==null || treeNodes[i].data.value==undefined)\r\n       {\r\n        this.notifyservice[this.notifies['4'].type]({\r\n          msg: this.notifies['4'].msg\r\n        });  \r\n         isNull = false;\r\n         break;\r\n       }\r\n      }\r\n    }\r\n    return isNull;\r\n  }\r\n\r\n  /**\r\n   * éç½®\r\n   * éç½®ä¸ºåå§ç¶æ\r\n   */\r\n  onCancel() {\r\n    this.isEdited = false;\r\n    if(this.filterExpressionString == null || this.filterExpressionString ==\"\")\r\n    {\r\n      this.treeData = [\r\n        {\r\n          data:\r\n          {\r\n            \"id\": 1,                    //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n            \"item\": null,               //å±æ§é¡¹\r\n            \"propertyDataType\":null,    //å±æ§æ°æ®ç±»å\r\n            \"operator\": null,           //æä½æ¯è¾ç¬¦\r\n            \"expressType\": null,        //è¡¨è¾¾å¼ç±»å\r\n            \"value\": null,              //å¼\r\n            \"displaySelect\":false,      //éæ©é¡¹æ¾ç¤º\r\n            \"displayOperator\": false,   //æä½ç¬¦é¡¹æ¾ç¤º\r\n            \"displayExpressType\": false,//è¡¨è¾¾å¼ç±»åæ¾ç¤º\r\n            \"displayValue\": false,      //å¼æ¾ç¤º\r\n            \"parentItem\":null           //ç¶é¡¹\r\n          },\r\n          children: [],                 //å­èç¹éå\r\n          expanded: true                //æ¯å¦å±å¼\r\n        }\r\n      ];\r\n    }\r\n    else \r\n    {\r\n      this.filterExpressionPre = JSON.parse(this.filterExpressionString);\r\n      this.treeData = [];\r\n      this.treeData.push(this.unConvert(this.filterExpressionPre));\r\n      this.treeData[0].data.id = 1;\r\n    }\r\n  }\r\n   /**åæ¶ */\r\n   cancle()\r\n   {\r\n     this.closed.emit(\"close\");\r\n   }\r\n  /**\r\n   * å³é­çªå£\r\n   */\r\n  close() {\r\n    if (this.isEdited == true) {\r\n      //è¥åªåå«å³ç³»é¡¹åè¿åç©º\r\n      if(this.filterExpression.expressItems.length==0) this.result.next(null);\r\n      //è¥æåä¸æ¬¡ç¹äºç¡®å®ï¼åå°è¿æ»¤è¡¨è¾¾å¼JSONåºååè¾åº\r\n      else this.result.next(JSON.stringify(this.filterExpression));\r\n    }\r\n    //è¥æªç¹ç¡®å®ï¼é»è®¤æ ä»»ä½ç¼è¾ææ¬ï¼åè¾åºç©ºä¸²\r\n    else this.result.next(this.filterExpressionString);\r\n  }\r\n  /**\r\n   * å°treeDataè½¬åä¸ºfiletrExpressionå®ä½\r\n   * @param filterExpression è¿æ»¤è¡¨è¾¾å¼å®ä½\r\n   * @param treeNode æå¤å±çtreeNode\r\n   */\r\n  convert(filterExpression: FilterExpression, treeNode: TreeNode): FilterExpression {\r\n    //å¾å°æå¤å±çå³ç³»ç¬¦\r\n    filterExpression.relationOperator = this.typeMatch(treeNode.data.item);\r\n    //è¥å¶å­é¡¹ä¸ä¸ºç©º\r\n    if (treeNode.children.length != 0) {\r\n      //å¯¹å¶æ¯ä¸ä¸ªå­é¡¹è¿è¡è½¬åæä½\r\n      treeNode.children.forEach(treeNodeItem => {\r\n        //è¥å­é¡¹ä¸ºå¹¶ä¸ãæèï¼åæ°å»ºå¤æè¿æ»¤è¡¨è¾¾å¼\r\n        if (this.typeMatch(treeNodeItem.data.item) == RelationTypeEnum.And ||\r\n          this.typeMatch(treeNodeItem.data.item) == RelationTypeEnum.Or) {\r\n          let filterExpressionItem = new FilterExpression();\r\n          filterExpression.expressItems.push(this.convert(filterExpressionItem, treeNodeItem));\r\n        }\r\n        //è¥å­é¡¹ä¸ºå±æ§è¡¨è¾¾å¼\r\n        else {\r\n          let filterItem = new ExpressionItem();\r\n          //æ ¹æ®å±æ§åå±ç¤ºå¼æ¾å°å¶å¨é¢ç½®åè¡¨ä¸­çè¯­ä¹åå¼ï¼å°è¯­ä¹åå¼èµç»å®ä½ä¿å­\r\n          let properties = this.propertyList.filter(x => x.text == treeNodeItem.data.item);\r\n          filterItem.propertyName = properties[0].value;\r\n          filterItem.propertyDataType = treeNodeItem.data.propertyDataType;\r\n          filterItem.operator = this.typeMatch(treeNodeItem.data.operator);\r\n          filterItem.expressType = this.typeMatch(treeNodeItem.data.expressType);\r\n          filterItem.value = treeNodeItem.data.value;\r\n          filterItem.parentItem = treeNodeItem.data.parentItem;\r\n          //è¥ä¸ºæ°å¼åæ¯è¾ï¼åå°valueå¼å¼ºå¶è½¬æ¢ä¸ºæ°å­\r\n          if (filterItem.expressType == ExpressTypeEnum.Value &&\r\n            (filterItem.operator == CompareTypeEnum.GreaterThan\r\n              || filterItem.operator == CompareTypeEnum.GreaterThanOrEqual\r\n              || filterItem.operator == CompareTypeEnum.LessThan\r\n              || filterItem.operator == CompareTypeEnum.LessThanOrEqual\r\n            )) {\r\n            filterItem.value = Number(treeNodeItem.data.value);\r\n          }\r\n          if (filterItem.expressType == ExpressTypeEnum.Value &&\r\n            (filterItem.operator == CompareTypeEnum.Equal\r\n              || filterItem.operator == CompareTypeEnum.NotEqual)) {\r\n            if(filterItem.propertyDataType == PropertyDataType.Decimal \r\n              || filterItem.propertyDataType == PropertyDataType.Double\r\n              || filterItem.propertyDataType == PropertyDataType.Int16\r\n              || filterItem.propertyDataType == PropertyDataType.Int32\r\n              || filterItem.propertyDataType == PropertyDataType.Int64 )\r\n            {\r\n              filterItem.value = Number(treeNodeItem.data.value);\r\n            }\r\n          }\r\n          //å°å­é¡¹æ¾å¥ç¶é¡¹çå­æ®µä¸­\r\n          filterExpression.expressItems.push(filterItem);\r\n        }\r\n      });\r\n    }\r\n    return filterExpression;\r\n  }\r\n  /**\r\n   * filetrExpressionåè½¬åä¸ºTreeNode\r\n   * @param filterExpress å¾è½¬åçfiletrExpressionå®ä½\r\n   */\r\n  unConvert(filterExpress: FilterExpression): TreeNode {\r\n    let treeData: TreeNode =\r\n    {\r\n      data:\r\n      {\r\n        \"id\": Math.random(),        //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n        \"item\": this.relationTypeReverseMatch(filterExpress.relationOperator), //å±æ§é¡¹\r\n        \"propertyDataType\":null,    //å±æ§æ°æ®ç±»å\r\n        \"operator\": null,           //æä½æ¯è¾ç¬¦\r\n        \"expressType\": null,        //è¡¨è¾¾å¼ç±»å\r\n        \"value\": null,              //å¼\r\n        \"displaySelect\":false,      //éæ©é¡¹æ¾ç¤º\r\n        \"displayOperator\": false,   //æä½ç¬¦é¡¹æ¾ç¤º\r\n        \"displayExpressType\": false,//è¡¨è¾¾å¼ç±»åæ¾ç¤º\r\n        \"displayValue\": false,      //å¼æ¾ç¤º\r\n        \"parentItem\":null           //ç¶é¡¹\r\n      },\r\n      children: [],                 //å­èç¹éå\r\n      expanded: true                //æ¯å¦å±å¼\r\n    };\r\n    //å¯¹äºæ¯ä¸ä¸ªå­é¡¹\r\n    filterExpress.expressItems.forEach(expressItem => {\r\n      let filterExpressItem = expressItem as FilterExpression;\r\n      //è¥å­é¡¹ä¸ºFilterExpressionç±»åï¼èµå¼\r\n      if ((filterExpressItem.relationOperator == RelationTypeEnum.And || filterExpressItem.relationOperator == RelationTypeEnum.Or)) \r\n      {\r\n        let treeDataChild = this.unConvert(filterExpressItem);\r\n        treeDataChild.data.parent = treeData;//æ·»å ç¶èç¹\r\n        treeData.children.push(treeDataChild);\r\n      }\r\n      else //è¥å­é¡¹ä¸ºExpressionItemç±»åï¼èµå¼\r\n      {\r\n        let expressionItem = expressItem as ExpressionItem;\r\n        let properties = this.propertyList.filter(x => x.value == expressionItem.propertyName);\r\n        let treeDataChild:TreeNode =\r\n        {\r\n          data:\r\n          {\r\n            \"id\": Math.random(),                      //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n            \"item\": properties[0].text,               //å±æ§é¡¹\r\n            \"propertyDataType\":expressionItem.propertyDataType,                  //å±æ§æ°æ®ç±»å\r\n            \"operator\": this.operatorReverseMatch(expressionItem.operator),      //æä½æ¯è¾ç¬¦\r\n            \"expressType\": this.expressTypeReverseMatch(expressionItem.expressType),//è¡¨è¾¾å¼ç±»å\r\n            \"value\": expressionItem.value,            //å¼\r\n            \"parentItem\":expressionItem.parentItem    //ç¶é¡¹\r\n          },\r\n          parent: treeData,             //æ·»å ç¶èç¹\r\n          children: [],                 //å­èç¹éå\r\n          expanded: true                //æ¯å¦å±å¼\r\n        }\r\n        treeData.children.push(treeDataChild); \r\n      }\r\n    });\r\n    return treeData;\r\n  }\r\n  /***\r\n   * æ·»å æ¡ä»¶é¡¹\r\n   */\r\n  addItem()\r\n  {\r\n    this.defaultSelectItem = this.localePipe.transform(\"SelectItem\");\r\n    this.hideNodeEditor(this.treeData);\r\n    this.addNode(this.treeData, this.localePipe.transform(\"SelectProperty\"),this.localePipe.transform(\"Equal\"),this.localePipe.transform(\"Value\"));\r\n  }\r\n  /***\r\n   * æ·»å æ¡ä»¶ç»\r\n   */\r\n  addGroup()\r\n  {\r\n    this.addNode(this.treeData,this.localePipe.transform(\"And\"),null,null);\r\n  }\r\n  /**\r\n   * ç±»åä¿¡æ¯å¹é\r\n   * @param type ç±»å\r\n   */\r\n  typeMatch(type: any): any {\r\n    switch (type) {\r\n      case this.localePipe.transform(\"And\"): return RelationTypeEnum.And;\r\n      case this.localePipe.transform(\"Or\"): return RelationTypeEnum.Or;\r\n      case this.localePipe.transform(\"GreaterThan\"): return CompareTypeEnum.GreaterThan;\r\n      case this.localePipe.transform(\"GreaterThanOrEqual\"): return CompareTypeEnum.GreaterThanOrEqual;\r\n      case this.localePipe.transform(\"LessThan\"): return CompareTypeEnum.LessThan;\r\n      case this.localePipe.transform(\"LessThanOrEqual\"): return CompareTypeEnum.LessThanOrEqual;\r\n      case this.localePipe.transform(\"Equal\"): return CompareTypeEnum.Equal;\r\n      case this.localePipe.transform(\"NotEqual\"): return CompareTypeEnum.NotEqual;\r\n      case this.localePipe.transform(\"Contains\"): return CompareTypeEnum.Contains;\r\n      case this.localePipe.transform(\"NotContains\"): return CompareTypeEnum.NotContains;\r\n      case this.localePipe.transform(\"StartsWith\"): return CompareTypeEnum.StartsWith;\r\n      case this.localePipe.transform(\"EndsWith\"): return CompareTypeEnum.EndsWith;\r\n      case this.localePipe.transform(\"NotStartsWith\"): return CompareTypeEnum.NotStartsWith;\r\n      case this.localePipe.transform(\"NotEndsWith\"): return CompareTypeEnum.NotEndsWith;\r\n      case this.localePipe.transform(\"IsNull\"): return CompareTypeEnum.IsNull;\r\n      case this.localePipe.transform(\"IsNotNull\"): return CompareTypeEnum.IsNotNull;\r\n      case this.localePipe.transform(\"In\"): return CompareTypeEnum.In;\r\n      case this.localePipe.transform(\"NotIn\"): return CompareTypeEnum.NotIn;\r\n      case this.localePipe.transform(\"Value\"): return ExpressTypeEnum.Value;\r\n      case this.localePipe.transform(\"Expression\"): return ExpressTypeEnum.Expression;\r\n    }\r\n  }\r\n  relationTypeReverseMatch(type: RelationTypeEnum): string {\r\n    switch (type) {\r\n      case RelationTypeEnum.And: return this.localePipe.transform(\"And\") ;\r\n      case RelationTypeEnum.Or: return this.localePipe.transform(\"Or\");\r\n    }\r\n  }\r\n  operatorReverseMatch(type: CompareTypeEnum): string\r\n  {\r\n    switch (type) {\r\n      case CompareTypeEnum.GreaterThan: return this.localePipe.transform(\"GreaterThan\");\r\n      case CompareTypeEnum.GreaterThanOrEqual: return this.localePipe.transform(\"GreaterThanOrEqual\");\r\n      case CompareTypeEnum.LessThan: return this.localePipe.transform(\"LessThan\");\r\n      case CompareTypeEnum.LessThanOrEqual: return this.localePipe.transform(\"LessThanOrEqual\");\r\n      case CompareTypeEnum.Equal: return this.localePipe.transform(\"Equal\");\r\n      case CompareTypeEnum.NotEqual: return this.localePipe.transform(\"NotEqual\");\r\n      case CompareTypeEnum.Contains: return this.localePipe.transform(\"Contains\");\r\n      case CompareTypeEnum.NotContains: return this.localePipe.transform(\"NotContains\");\r\n      case CompareTypeEnum.StartsWith: return this.localePipe.transform(\"StartsWith\");\r\n      case CompareTypeEnum.EndsWith: return this.localePipe.transform(\"EndsWith\");\r\n      case CompareTypeEnum.NotStartsWith: return this.localePipe.transform(\"NotStartsWith\");\r\n      case CompareTypeEnum.NotEndsWith: return this.localePipe.transform(\"NotEndsWith\");\r\n      case CompareTypeEnum.IsNull: return this.localePipe.transform(\"IsNull\");\r\n      case CompareTypeEnum.IsNotNull: return this.localePipe.transform(\"IsNotNull\");\r\n      case CompareTypeEnum.In: return this.localePipe.transform(\"In\");\r\n      case CompareTypeEnum.NotIn: return this.localePipe.transform(\"NotIn\");\r\n    }\r\n  }\r\n  expressTypeReverseMatch(type: ExpressTypeEnum): string\r\n  {\r\n    switch (type) {\r\n      case ExpressTypeEnum.Value: return this.localePipe.transform(\"Value\");\r\n      case ExpressTypeEnum.Expression: return this.localePipe.transform(\"Expression\");\r\n    }\r\n  }\r\n  onfocus()\r\n{\r\n  this.displayPopup = true;\r\n}\r\nonblur()\r\n{\r\n  this.displayPopup = false;\r\n}\r\n\r\ncheckMatch(treeNodes: TreeNode[],isMatch: boolean)\r\n{\r\n  for (var i = 0; i < treeNodes.length; i++) {\r\n    if (treeNodes[i].data.item != this.localePipe.transform(\"And\") && treeNodes[i].data.item != this.localePipe.transform(\"Or\")) {\r\n      if (treeNodes[i].data.expressType==this.localePipe.transform(\"Value\")){\r\n        if((treeNodes[i].data.propertyDataType==PropertyDataType.Int16 || treeNodes[i].data.propertyDataType==PropertyDataType.Int32 || treeNodes[i].data.propertyDataType==PropertyDataType.Int64) && isNaN(treeNodes[i].data.value)){\r\n          this.notifyservice[this.notifies['5'].type]({\r\n            msg: this.notifies['5'].msg\r\n          });  \r\n          isMatch = false;\r\n          break;\r\n        }\r\n    }\r\n  }\r\n  else isMatch = this.checkMatch(treeNodes[i].children,isMatch);\r\n}\r\nreturn isMatch;\r\n}\r\n}\r\n","/**\r\n * å¯¼èªå±æ§ç±»\r\n * @property name å¯¼èªå±æ§è¯­ä¹ååç§°\r\n * @property navigationType å¯¼èªå±æ§ç±»å\r\n */\r\nexport class NavigationProperty\r\n{\r\n    name:string;\r\n    displayName:string;\r\n    navigationEntity:string;\r\n    navigationType:NavigationType;\r\n}\r\n/** \r\n * å¯¼èªå±æ§ç±»å\r\n * @member EntitySet å®ä½é\r\n * @member EntityType å®ä½ç±»å\r\n */\r\n export enum NavigationType{\r\n    EntitySet,\r\n    EntityType\r\n}","import { PropertyEntity } from \"./property-entity\";\r\nimport { NavigationProperty } from \"./navigation-property-entity\";\r\n/**\r\n * schemaå®ä½ç±»\r\n * @property entitySets  å®ä½ééå\r\n * @property entityTypes å®ä½ç±»åéå\r\n */\r\n export class FilterEntitySchema {\r\n    entitySets: FilterEntitySet[] = [];\r\n    entityTypes: FilterEntityType[] = [];\r\n}\r\n/**\r\n * è¿æ»¤å®ä½ç±»å\r\n * ç¨äºå¤çº§åµå¥å®ä½æ¾ç¤º\r\n * @property name å®ä½å(ç¨äºå®ä½é´å¯¼èªä½¿ç¨)\r\n * @property displayName å±ç¤ºåç§°\r\n * @property properties å±æ§é\r\n * @property navigationProperties å¯¼èªå±æ§é\r\n */\r\nexport class FilterEntityType\r\n{\r\n    name:string;\r\n    displayName:string;\r\n    properties:PropertyEntity[] = [];\r\n    navigationProperties:NavigationProperty[] = [];\r\n}\r\n/**\r\n * è¿æ»¤å®ä½ç±»åé\r\n * ç¨äºå¤çº§åµå¥å®ä½æ¾ç¤º\r\n * @property name å®ä½éå\r\n * @property entityTypeName åå«çå®ä½ç±»åå\r\n */\r\nexport class FilterEntitySet\r\n{\r\n    name:string;\r\n    displayName:string;             \r\n    entityTypeName:string;      \r\n}","/**\r\n * @description ç»ä¸ç»æSchema\r\n * @param name åç§°\r\n * @param description æè¿°\r\n * @param entitySets å®ä½é\r\n * @param entityTypes å®ä½ç±»å\r\n * @param associations å³èéå\r\n * @date 2021-04-14\r\n * @author Wenxing Man\r\n */\r\nexport class NewSchema {\r\n    name: string;\r\n    description: string;\r\n    entitySets: NewEntitySet[] = [];\r\n    entityTypes: NewEntityType[] = [];\r\n    associations: NewAssociation[] = [];\r\n}\r\n/**\r\n * @param code å®ä½éå\r\n * @param name å®ä½éè¯­ä¹åå\r\n * @param entityType å¯¹åºEntityTypeçid\r\n * @date 2021-04-14\r\n * @author Wenxing Man\r\n */\r\nexport class NewEntitySet {\r\n    code: string;\r\n    name: string;\r\n    entityType: string;\r\n}\r\n/**\r\n * @param code å±æ§å\r\n * @param name å®ä½è¯­ä¹åå\r\n * @param master  æ¯å¦æ¯ä¸»å®ä½\r\n * @param properties    å±æ§éå\r\n * @param keys  ä¸»é®éå\r\n * @param navigationPorperties å¯¼èªéåå±æ§\r\n * @date 2021-04-14\r\n * @author Wenxing Man\r\n */\r\nexport class NewEntityType {\r\n    code: string;\r\n    name: string;\r\n    master: boolean;\r\n    properties: NewProperty[] = [];\r\n    keys: String[] = [];\r\n    navigationProperties: NewNavigationProperty[] = [];\r\n}\r\n/**\r\n * @param name å³èåç§°\r\n * @param masterType ä¸»å¯¹è±¡ç±»å\r\n * @param childType å­å¯¹è±¡ç±»å\r\n * @param masterProperty ä¸»å¯¹è±¡å­æ®µ\r\n * @param childProperty ä»å¯¹è±¡å­æ®µ\r\n * @date 2021-04-14\r\n * @author Wenxing Man\r\n */\r\nexport class NewAssociation {\r\n    name: string;\r\n    masterType: string;\r\n    childType: string;\r\n    masterProperty: string;\r\n    childProperty: string;\r\n}\r\n/**\r\n * @param code å±æ§å\r\n * @param name å±æ§è¯­ä¹åå\r\n * @param dataType å±æ§å¼ç±»å\r\n * @param nullable æ¯å¦åè®¸ä¸ºç©ºå¼\r\n * @param dafaultValue å±æ§é»è®¤å¼\r\n * @date 2021-04-14\r\n * @author Wenxing Man\r\n */\r\nexport class NewProperty {\r\n    code: string;\r\n    name: string;\r\n    dataType: NewDataType;\r\n    nullable: boolean;\r\n    defaultValue: object;\r\n}\r\n/**\r\n * @param code å¯¼èªå±æ§åç§°\r\n * @param name å¯¼èªå±æ§è¯­ä¹åå\r\n * @param navigationName å¯¼èªå¯¹è±¡çåç§°\r\n * @param navigationType å±æ§ç±»å\r\n * @param relationShip å³èçå¯¹è±¡\r\n * @date 2021-04-14\r\n * @author Wenxing Man\r\n */\r\nexport class NewNavigationProperty {\r\n    code: string;\r\n    name: string;\r\n    navigationName: string;\r\n    navigationType: NewNavigationType;\r\n    relationShip: string;\r\n}\r\n\r\n/**\r\n * @description æ°æ®ç±»åçæä¸¾\r\n */\r\nexport enum NewDataType {\r\n    String,\r\n    Byte,\r\n    Boolean,\r\n    Date,\r\n    DateTime,\r\n    Decimal,\r\n    Integer\r\n}\r\n\r\n/**\r\n * @description å¯¼èªå±æ§ç±»åçæä¸¾\r\n * @enum EntitySet EntitySet\r\n * @enum EntityType EntityType\r\n */\r\nexport enum NewNavigationType {\r\n    EntitySet = \"EntitySet\",\r\n    EntityType = \"EntityType\"\r\n}","import { FilterEntityType } from \"./schema\";\r\nimport { GSPCommonObject, IGSPCommonObject, GSPElementDataType, GSPElementObjectType } from \"@gsp-bef/gsp-cm-metadata\";\r\nimport { PropertyEntity, PropertyDataType } from \"./property-entity\";\r\nimport { NavigationProperty, NavigationType } from \"./navigation-property-entity\";\r\nimport { NewDataType, NewEntityType, NewProperty, NewNavigationProperty, NewNavigationType } from \"./NewSchema\";\r\n\r\nexport class Adapter {\r\n    public convertCO(commonObject: GSPCommonObject): FilterEntityType[] {\r\n        let entityTypes: FilterEntityType[] = [];\r\n        entityTypes.push(this.adaptCO(commonObject, entityTypes));\r\n        return entityTypes;\r\n    }\r\n    /**\r\n     * COè½¬åéå½æ¹æ³\r\n     * @param gspCO å¾è½¬ågspCO\r\n     * @param entityTypes ä»gspCOæåçææä¸»ä»è¡¨\r\n     */\r\n    private adaptCO(gspCO: IGSPCommonObject, entityTypes: FilterEntityType[]): FilterEntityType {\r\n        let entityType = new FilterEntityType();\r\n        entityType.name = gspCO.Code;\r\n        entityType.displayName = gspCO.Name;\r\n        //æ¯ä¸ªå±æ§è½¬å\r\n        if ((gspCO.ContainElements) && gspCO.ContainElements.length != 0) {\r\n            gspCO.ContainElements.forEach(element => {\r\n                if (!element.IsUdt && element.ObjectType != GSPElementObjectType.Association) {\r\n                    let property = new PropertyEntity();\r\n                    property.name = element.Code;\r\n                    property.displayName = element.Name;\r\n                    property.propertyDataType = this.convertPropertyDataType(element.MDataType);\r\n                    entityType.properties.push(property);\r\n                }\r\n            });\r\n        };\r\n        //å­è¡¨è½¬åä¸ºå¯¼èªå±æ§\r\n        if ((gspCO.ContainChildObjects) && gspCO.ContainChildObjects.length != 0) {\r\n            gspCO.ContainChildObjects.forEach(childObject => {\r\n                let naviproperty = new NavigationProperty();\r\n                naviproperty.displayName = childObject.Name;\r\n                naviproperty.name = childObject.Code + \"s\";\r\n                naviproperty.navigationEntity = childObject.Code;\r\n                naviproperty.navigationType = NavigationType.EntityType;\r\n                entityType.navigationProperties.push(naviproperty);\r\n                entityTypes.push(this.adaptCO(childObject, entityTypes));\r\n            });\r\n        };\r\n        return entityType;\r\n    }\r\n    /**\r\n     * å±æ§æ°æ®ç±»åè½¬æ¢\r\n     */\r\n    private convertPropertyDataType(dataType: GSPElementDataType): PropertyDataType {\r\n        switch (dataType) {\r\n            case GSPElementDataType.String:\r\n            case GSPElementDataType.Text:\r\n                return PropertyDataType.String;\r\n            case GSPElementDataType.Integer:\r\n                return PropertyDataType.Int32;\r\n            case GSPElementDataType.Decimal:\r\n                return PropertyDataType.Decimal;\r\n            case GSPElementDataType.DateTime:\r\n            case GSPElementDataType.Date:\r\n                return PropertyDataType.DateTime;\r\n            case GSPElementDataType.Boolean:\r\n                return PropertyDataType.Boolean;\r\n            case GSPElementDataType.Binary:\r\n                return PropertyDataType.Array;\r\n            default: return null;\r\n        }\r\n    }\r\n\r\n    //=====================================è½¬æ¢CO---->NewSchema===================================\r\n\r\n    /**\r\n     * @description å°COè½¬åä¸ºNewEntityType[]\r\n     * @param co å¾è½¬æ¢CO\r\n     * @returns NewEntityType[] NewEntityType[]\r\n     */\r\n    public convertCOOfNewSchema(co: GSPCommonObject): NewEntityType[] {\r\n        let types: NewEntityType[] = [];\r\n        types.push(this.adaptCOOfNewSchema(co, types));\r\n        return types;\r\n    }\r\n\r\n    /**\r\n     * @description å°COè½¬åä¸ºNewEntityType[]\r\n     * @param co å¾è½¬æ¢CO\r\n     * @param types æ°ç»:EntityType[]\r\n     * @returns NewEntityType[] NewEntityType[]\r\n     */\r\n    public adaptCOOfNewSchema(co: GSPCommonObject, types: NewEntityType[]): NewEntityType {\r\n        let type = new NewEntityType();\r\n        type.code = co.Code;\r\n        type.name = co.Name;\r\n        //ä¸è¬å±æ§è½¬å\r\n        if (co.ContainElements && co.ContainElements.length > 0) {\r\n            co.ContainElements.forEach(ele => {\r\n                if (!ele.IsUdt && ele.ObjectType != GSPElementObjectType.Association) {\r\n                    let pro = new NewProperty();\r\n                    pro.code = ele.Code;\r\n                    pro.name = ele.Name;\r\n                    pro.dataType = this.convertCOEleTypeProType(ele.MDataType);\r\n                    type.properties.push(pro);\r\n                }\r\n            });\r\n        }\r\n        //å¯¼èªå±æ§è½¬å\r\n        if (co.ContainChildObjects && co.ContainChildObjects.length > 0) {\r\n            co.ContainChildObjects.forEach(obj => {\r\n                let naPro = new NewNavigationProperty();\r\n                naPro.code = obj.Code + \"s\";\r\n                naPro.name = obj.Name;\r\n                naPro.navigationName = obj.ID;\r\n                naPro.navigationType = NewNavigationType.EntityType;\r\n                naPro.relationShip = \"\";\r\n                type.navigationProperties.push(naPro);\r\n                types.push(this.adaptCOOfNewSchema(obj as GSPCommonObject, types));\r\n            });\r\n        }\r\n        return type;\r\n    }\r\n\r\n    /**\r\n     * @description å°BEå®ä¹çå­æ®µç±»åè½¬æ¢ä¸ºç»ä¸Schemaçå­æ®µç±»å\r\n     * @param dataType BEå®ä¹çå±æ§ç±»å\r\n     * @returns NewDataType ç»ä¸Schemaçå±æ§ç±»å\r\n     */\r\n    public convertCOEleTypeProType(dataType: GSPElementDataType): NewDataType {\r\n        let type = NewDataType.String;\r\n        switch (dataType) {\r\n            case GSPElementDataType.String:\r\n            case GSPElementDataType.Text:\r\n                type = NewDataType.String;\r\n                break;\r\n            case GSPElementDataType.Integer:\r\n                type = NewDataType.Integer;\r\n                break;\r\n            case GSPElementDataType.Decimal:\r\n                type = NewDataType.Decimal;\r\n                break;\r\n            case GSPElementDataType.DateTime:\r\n                type = NewDataType.DateTime;\r\n                break;\r\n            case GSPElementDataType.Date:\r\n                type = NewDataType.Date;\r\n                break;\r\n            case GSPElementDataType.Boolean:\r\n                type = NewDataType.Boolean;\r\n                break;\r\n            case GSPElementDataType.Binary:\r\n                type = NewDataType.Byte;\r\n                break;\r\n        }\r\n        return type;\r\n    }\r\n\r\n}","import { Injectable, Injector, ApplicationRef, ComponentFactoryResolver, LOCALE_ID, Inject } from \"@angular/core\";\r\nimport { FilterConditionComponent } from \"./filter-condition/filter-condition.component\";\r\nimport { GspCommonDataType } from \"@gsp-bef/gsp-cm-metadata\";\r\nimport { GSPCommonObject } from \"@gsp-bef/gsp-cm-metadata\";\r\nimport { VarEntity } from \"@gsp-svc/expression\";\r\nimport { Schema } from \"@gsp-svc/expression\";\r\nimport { InjectedEntity } from \"@gsp-svc/expression\";\r\nimport { InjectedType } from '@gsp-svc/expression';\r\nimport { FilterInjectedEntity, FilterInjectedType } from \"./injected-entity\";\r\nimport { FilterEntitySchema } from \"./schema\";\r\nimport { PropertyAdapter } from \"./property-adapter\";\r\nimport { PropertyDataType } from \"./property-entity\";\r\nimport { Adapter } from \"./adapter\";\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { FilterConditionLocalePipe } from './filter-condition-locale.pipe';\r\nimport { NewSchema } from \"./NewSchema\";\r\nimport { Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n/**\r\n * è¿æ»¤è¡¨è¾¾å¼æå¡ç±»\r\n * @author linchang 2018/12/10\r\n */\r\n@Injectable()\r\nexport class FilterService {\r\n    i: number = 0;\r\n    adapter: Adapter = new Adapter();\r\n    //å±æ§åè¡¨\r\n    propertyList: Array<{ text: string, propertyDataType: PropertyDataType, value: string, parentItem: string }> = [];\r\n    //é¢ç½®è®¡ç®è¡¨è¾¾å¼åé\r\n    contextEntity: VarEntity[] = [];\r\n    expressionText: string = null;\r\n    expressionSchema = Array<{ name: string, schema: Schema }>();\r\n    expressionInjectedEntities: InjectedEntity[] = [];\r\n    expressionCDT: GspCommonDataType[] = [];\r\n    //é¢ç½®æ¡ä»¶è¡¨è¾¾å¼åé\r\n    filterExpressionString: string = null;//è¿æ»¤è¡¨è¾¾å¼åºååä¸²\r\n    schemaMap = new Map<string, FilterEntitySchema>();\r\n    newSchemaMap = new Map<string, NewSchema>();                         //è¿æ»¤è¡¨è¾¾å¼æ·»å NewSchema\r\n    injectedEntity: FilterInjectedEntity;\r\n    exprWinWidth: number = 850;\r\n    localePipe: FilterConditionLocalePipe;\r\n    localeId: string;\r\n    private modalService: BsModalService;\r\n    simpleModalConfig;\r\n    constructor(\r\n        private injector: Injector,\r\n        private applicationRef: ApplicationRef,\r\n        private compFactRes: ComponentFactoryResolver,\r\n        private http: HttpClient\r\n    ) {\r\n        this.modalService = this.injector.get(BsModalService);\r\n    }\r\n    // åå»ºè¡¨è¾¾å¼\r\n    public buildExpression() {\r\n        let that = this;\r\n        return new Promise(\r\n            function (resolve) {\r\n                const compFactory = that.compFactRes.resolveComponentFactory(FilterConditionComponent);\r\n                const compRef = compFactory.create(that.injector);\r\n                compRef.instance.propertyList = that.propertyList;\r\n                compRef.instance.contextEntity = that.contextEntity;\r\n                compRef.instance.expressionCDT = that.expressionCDT;\r\n                compRef.instance.expressionSchema = that.expressionSchema;\r\n                compRef.instance.expressionText = that.expressionText;\r\n                compRef.instance.expressionInjectedEntities = that.expressionInjectedEntities;\r\n                compRef.instance.filterExpressionString = that.filterExpressionString;\r\n                compRef.instance.schemaMap = that.schemaMap;\r\n                //===================ç»ä»¶å å¥newSchemaMap===============\r\n                compRef.instance.newSchemaMap = that.newSchemaMap;\r\n                //=====================================================    \r\n                compRef.instance.exprWinWidth = that.exprWinWidth;\r\n                that.localePipe = compRef.instance.localePipe;\r\n                const dialog = that.modalService.show(compRef, {\r\n                    title: that.localePipe.transform(\"WindowTitle\"),\r\n                    width: 1010,\r\n                    height: 550,\r\n                    showButtons: false\r\n                });\r\n                compRef.instance.closed.subscribe($event => dialog.close());\r\n                compRef.instance.result.subscribe((expressionContent) => {\r\n                    return resolve(expressionContent);\r\n                });\r\n            })\r\n    }\r\n    /**\r\n     *  é¢ç½®å±æ§åè¡¨\r\n     * @param name å±æ§è¯­ä¹\r\n     * @param displayName å±ç¤ºåç§°\r\n     * @param propertyDataType å±æ§æ°æ®ç±»å\r\n     */\r\n    public addProperty(name: string, displayName: string, propertyDataType: PropertyDataType): void {\r\n        let propertyEntity =\r\n        {\r\n            text: displayName,\r\n            propertyDataType: propertyDataType,\r\n            value: name,\r\n            parentItem: null\r\n        };\r\n        this.propertyList = this.propertyList.filter(item => item.value !== name);\r\n        this.propertyList.push(propertyEntity);\r\n    }\r\n\r\n    /**\r\n     * æ·»å ä¸ä¸æåé\r\n     * @param contextEntity ä¸ä¸æåé\r\n     */\r\n    public addExpressionContext(contextEntity: VarEntity): void {\r\n        this.contextEntity = this.contextEntity.filter(item => item.key !== contextEntity.key);\r\n        this.contextEntity.push(contextEntity);\r\n    }\r\n    /**\r\n     * é¢ç½®è¡¨è¾¾å¼é»è®¤æ¾ç¤º\r\n     * @param text é¢ç½®ææ¬\r\n     */\r\n    public addExpressionText(text: string): void {\r\n        this.expressionText = text;\r\n    }\r\n    /**\r\n     * é¢ç½®Schema\r\n     * @param name schemaåç§°\r\n     * @param schema schemaå®ä½\r\n     */\r\n    public addExpressionSchema(name: string, schema: Schema): void {\r\n        this.expressionSchema = this.expressionSchema.filter(item => item.name !== name);\r\n        this.expressionSchema.push({ name, schema });\r\n    }\r\n    /**\r\n     * é¢ç½®æ³¨åå®ä½\r\n     * @param name æ³¨åå®ä½å\r\n     * @param schemaName æå¨schemaçå\r\n     * @param typeNameInSchema å¨schemaä¸­åç§°\r\n     * @param injectedType æ³¨åçç±»å\r\n     * @author linchang 2018/12/10\r\n     */\r\n    public addExpressionInjectedEntity(name: string, schemaName: string, typeNameInSchema: string, injectedType: InjectedType): void {\r\n        //æé æ³¨å¥å®ä½å¯¹è±¡\r\n        let injectedEntity = new InjectedEntity();\r\n        injectedEntity.name = name;\r\n        injectedEntity.schemaName = schemaName;\r\n        injectedEntity.injectedName = typeNameInSchema;\r\n        injectedEntity.injectedType = injectedType;\r\n        this.expressionInjectedEntities.push(injectedEntity);\r\n    }\r\n    /**\r\n     * é¢ç½®CDT\r\n     * @param gspCDTs é¢ç½®çCDTéå\r\n     */\r\n    public addExpressionCDT(gspCDTs: GspCommonDataType[]): void {\r\n        this.expressionCDT = gspCDTs;\r\n    }\r\n    /**\r\n     * é¢ç½®è¿æ»¤æ¡ä»¶è¡¨è¾¾å¼\r\n     * @param filterExpression é¢ç½®çè¿æ»¤è¡¨è¾¾å¼ä¸²\r\n     */\r\n    public addFilterCondition(filterExpression: string) {\r\n        this.filterExpressionString = filterExpression;\r\n    }\r\n    /**\r\n     * é¢ç½®schema\r\n     * @param name schemaå,é»è®¤ä¸ºCO\r\n     * @param filterSchema schemaå®ä½\r\n     */\r\n    public addSchema(name: string, filterSchema: FilterEntitySchema) {\r\n        if (filterSchema == null) {\r\n            alert(\"Schema Cannot Null\");\r\n        }\r\n        else this.schemaMap.set(name, filterSchema);\r\n    }\r\n    /**\r\n     * æ·»å æ³¨å¥å®ä½\r\n     * @param name æ³¨å¥å®ä½å¨schemaä¸­çåç§°\r\n     * @param schemaName æ³¨å¥å®ä½æå¨çschemaå\r\n     * @param injectedType æ³¨å¥ç±»åï¼ä¸å¡«é»è®¤ä¸ºEntityType\r\n     */\r\n    public addInjectedEntity(name: string, schemaName: string, injectedType: FilterInjectedType = FilterInjectedType.EntityType) {\r\n        this.injectedEntity = new FilterInjectedEntity();\r\n        this.injectedEntity.name = name;\r\n        this.injectedEntity.schemaName = schemaName;\r\n        this.injectedEntity.injectedType = injectedType;\r\n        let propertyAdapter = new PropertyAdapter();\r\n        this.propertyList = propertyAdapter.adapter(this.injectedEntity, this.schemaMap);\r\n    }\r\n    /**\r\n     * æ·»å GSPCommonObject\r\n     * @param commonObject å¾è½¬åCO\r\n     */\r\n    public addCommonObject(commonObject: GSPCommonObject): void {\r\n        let schema;\r\n        //è¥schemaMapä¸­å­å¨COçschema\r\n        if (this.schemaMap.get(\"CommonObject\")) {\r\n            schema = this.schemaMap.get(\"CommonObject\");\r\n        }\r\n        else schema = new Schema;\r\n        //å°æ¯ä¸ä¸ªCOè½¬åä¸ºschemaåé¨ç»æä¸­çentityType\r\n        let entityTypes = this.adapter.convertCO(commonObject);\r\n        entityTypes.forEach(entityType => {\r\n            schema.entityTypes = schema.entityTypes.filter(item => item.name !== entityType.name);\r\n            schema.entityTypes.push(entityType);\r\n        });\r\n\r\n        //å°åå¹¶åçschemaæ¾å¥åé¨ä¸ä¸æå®ä½ä¸­\r\n        this.addSchema(\"CommonObject\", schema);\r\n    }\r\n    /**\r\n     * è®¾ç½®è®¡ç®è¡¨è¾¾å¼å¼¹åºæ¡å®½åº¦\r\n     * @param exprWinWidth \r\n     */\r\n    public addExprWinWidth(exprWinWidth: number) {\r\n        this.exprWinWidth = exprWinWidth;\r\n\r\n    }\r\n\r\n    //======================åä¸½åå²çº¿ä¹ç»ä¸ç»æSchema============================================================\r\n\r\n    /**\r\n     * @description ånewSchemaMapä¸­æ·»å NewSchema\r\n     * @param name Mapä¸­çkeyå¼\r\n     * @param schema Mapçvalue\r\n     */\r\n    public addNewSchema(name: string, schema: NewSchema) {\r\n        if (name != null && name != \"\" && schema != null) {\r\n            this.newSchemaMap.set(name, schema);\r\n        } else {\r\n            alert(\"Name or Schema is null !\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ·»å æ³¨å¥å®ä½\r\n     * @param name æ³¨å¥å®ä½å¨schemaä¸­çåç§°\r\n     * @param schemaName æ³¨å¥å®ä½æå¨çschemaå\r\n     * @param injectedType æ³¨å¥ç±»åï¼é»è®¤ä¸ºEntityType\r\n     */\r\n    public addInjectedEntityOfNewSchema(name: string, schemaName: string, injectedType: FilterInjectedType = FilterInjectedType.EntityType) {\r\n        this.injectedEntity = new FilterInjectedEntity();\r\n        this.injectedEntity.name = name;\r\n        this.injectedEntity.schemaName = schemaName;\r\n        this.injectedEntity.injectedType = injectedType;\r\n        let propertyAdapter = new PropertyAdapter();\r\n        this.propertyList = propertyAdapter.adapterOfNewSchema(this.injectedEntity, this.newSchemaMap);\r\n    }\r\n\r\n\r\n    //=======================================================================================================================\r\n}","import { FilterInjectedEntity, FilterInjectedType } from \"./injected-entity\";\r\nimport { FilterEntitySchema, FilterEntityType, FilterEntitySet } from \"./schema\";\r\nimport { NavigationType } from \"./navigation-property-entity\";\r\nimport { PropertyDataType } from \".\";\r\nimport { NewDataType, NewEntitySet, NewEntityType, NewNavigationType, NewSchema } from \"./NewSchema\";\r\n\r\nexport class PropertyAdapter {\r\n    entityName: string;\r\n    /**\r\n     * å±æ§ééå¨ï¼æ³¨å¥å¤çº§å®ä½è½¬åä¸ºArray\r\n     * @param injectedEntity æ³¨å¥çå®ä½\r\n     * @param schemaMap æ³¨å¥çschema\r\n     */\r\n    adapter(injectedEntity: FilterInjectedEntity, schemaMap: Map<string, FilterEntitySchema>) {\r\n        //æ ¹æ®æ³¨å¥schemaåå¾å°schema\r\n        let schema = schemaMap.get(injectedEntity.schemaName);\r\n        //æ ¹æ®æ³¨å¥ç±»ååå«è¿è¡è½¬å\r\n        switch (injectedEntity.injectedType) {\r\n            case FilterInjectedType.EntitySet:\r\n                {\r\n                    let entitySet = schema.entitySets.find(entitySet => entitySet.name == injectedEntity.name);\r\n                    return this.convertEntitySet(entitySet, schema);\r\n                }\r\n            case FilterInjectedType.EntityType:\r\n                {\r\n                    let entityType = schema.entityTypes.find(entityType => entityType.name == injectedEntity.name);\r\n                    return this.convertEntityType(entityType, schema);\r\n                }\r\n            default: break;\r\n        }\r\n    }\r\n    /**\r\n     * å°å®ä½ç±»è½¬åæArrray\r\n     * @param entityType è¢«è½¬æ¢çå®ä½ç±»\r\n     */\r\n    convertEntityType(entityType: FilterEntityType, schema: FilterEntitySchema): any {\r\n        let propertyList = Array<{ text: string, propertyDataType: PropertyDataType, value: string, parentItem: string }>();\r\n        //å¸¸è§å±æ§è½¬å\r\n        entityType.properties.forEach(property => {\r\n            let propertyListItem =\r\n            {\r\n                text: property.displayName,\r\n                propertyDataType: property.propertyDataType,\r\n                value: property.name,\r\n                parentItem: null\r\n            };\r\n            propertyList.push(propertyListItem);\r\n        });\r\n        //å¯¼èªå±æ§è½¬å\r\n        entityType.navigationProperties.forEach(navigationProperty => {\r\n            //æ ¹æ®å¯¼èªå±æ§ç±»åè¿è¡è½¬å\r\n            switch (navigationProperty.navigationType) {\r\n                //è¥å¯¼èªå±æ§ä¸ºEntitySet\r\n                case NavigationType.EntitySet:\r\n                    {\r\n                        //æ ¹æ®å¯¼èªå±æ§åæ¾å°schemaä¸­çEntitySet\r\n                        let entitySet = schema.entitySets.find(entitySet => entitySet.name == navigationProperty.navigationEntity);\r\n                        //å­å®ä½éè½¬åä¸ºArray\r\n                        this.convertEntitySet(entitySet, schema).forEach(element => {\r\n                            //è¥å­å®ä½ä¸­çæ¯ä¸ªå±æ§ç¶é¡¹ä¸ä¸ºç©ºï¼åå¨ç¶é¡¹ååæ·»å è¯¥å¯¼èªå±æ§åï¼ä¾å¦OrderItemåå Orderä¸ºOrders.OrderItem\r\n                            if (element.parentItem != null) {\r\n                                element.parentItem = navigationProperty.name + \".\" + element.parentItem;\r\n                            }\r\n                            //è¥ç¶é¡¹ä¸ºç©ºï¼åè®¾ç½®è¯¥å±æ§ç¶é¡¹ä¸ºå¯¼èªå±æ§å\r\n                            else {\r\n                                element.parentItem = navigationProperty.name;\r\n                            }\r\n                            //è®¾ç½®è¯¥å±æ§çæ¾ç¤ºåç§°\r\n                            element.text = navigationProperty.displayName + \".\" + element.text;\r\n                            propertyList.push(element);\r\n                        });\r\n                    } break;\r\n                //è¥å¯¼èªå±æ§ç±»åä¸ºEntityType\r\n                case NavigationType.EntityType:\r\n                    {\r\n                        //æ ¹æ®å¯¼èªå±æ§åæ¾å°schemaä¸­çEntityType\r\n                        let entityType = schema.entityTypes.find(entityType => entityType.name == navigationProperty.navigationEntity);\r\n                        //å­å®ä½è½¬åä¸ºArray\r\n                        this.convertEntityType(entityType, schema).forEach(element => {\r\n                            //è¥å­å®ä½ä¸­çæ¯ä¸ªå±æ§ç¶é¡¹ä¸ä¸ºç©ºï¼åå¨ç¶é¡¹ååæ·»å è¯¥å¯¼èªå±æ§åï¼ä¾å¦OrderItemåå Orderä¸ºOrder.OrderItem\r\n                            if (element.parentItem != null) {\r\n                                element.parentItem = navigationProperty.name + \".\" + element.parentItem;\r\n                            }\r\n                            //è¥ç¶é¡¹ä¸ºç©ºï¼åè®¾ç½®è¯¥å±æ§ç¶é¡¹ä¸ºå¯¼èªå±æ§å\r\n                            else {\r\n                                element.parentItem = navigationProperty.name;\r\n                            }\r\n                            //è®¾ç½®è¯¥å±æ§çæ¾ç¤ºåç§°\r\n                            element.text = navigationProperty.displayName + \".\" + element.text;\r\n                            propertyList.push(element);\r\n                        });\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n        return propertyList;\r\n    }\r\n    /**\r\n     * å®ä½éè½¬åä¸ºå±æ§åè¡¨\r\n     * @param entitySet å¾è½¬åå®ä½é\r\n     * @param schema æå¨schema\r\n     */\r\n    convertEntitySet(entitySet: FilterEntitySet, schema: FilterEntitySchema): any {\r\n        let propertyList = Array<{ text: string, propertyDataType: PropertyDataType, value: string }>();\r\n        let entityType = schema.entityTypes.find(entityType => entityType.name == entitySet.entityTypeName);\r\n\r\n        entityType.properties.forEach(property => {\r\n            let propertyListItem =\r\n            {\r\n                text: property.displayName,\r\n                propertyDataType: property.propertyDataType,\r\n                value: property.name,\r\n                parentItem: null\r\n            };\r\n            propertyList.push(propertyListItem);\r\n        });\r\n        if (entityType.navigationProperties.length != 0) {\r\n            //å¯¼èªå±æ§è½¬å\r\n            entityType.navigationProperties.forEach(navigationProperty => {\r\n\r\n                switch (navigationProperty.navigationType) {\r\n                    case NavigationType.EntitySet:\r\n                        {\r\n                            let entitySet = schema.entitySets.find(entitySet => entitySet.name == navigationProperty.navigationEntity);\r\n                            this.convertEntitySet(entitySet, schema).forEach(element => {\r\n\r\n                                if (element.parentItem != null) {\r\n                                    element.parentItem = navigationProperty.name + \".\" + element.parentItem;\r\n                                }\r\n                                else {\r\n                                    element.parentItem = navigationProperty.name;\r\n                                }\r\n                                element.text = navigationProperty.displayName + \".\" + element.text;\r\n                                propertyList.push(element);\r\n                            });\r\n                        } break;\r\n                    case NavigationType.EntityType:\r\n                        {\r\n                            let entityType = schema.entityTypes.find(entityType => entityType.name == navigationProperty.navigationEntity);\r\n                            this.convertEntityType(entityType, schema).forEach(element => {\r\n\r\n                                if (element.parentItem != null) {\r\n                                    element.parentItem = navigationProperty.name + \".\" + element.parentItem;\r\n                                }\r\n                                else {\r\n                                    element.parentItem = navigationProperty.name;\r\n                                }\r\n                                element.text = navigationProperty.displayName + \".\" + element.text;\r\n                                propertyList.push(element);\r\n                            });\r\n                        }\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n        return propertyList;\r\n    }\r\n\r\n    //==========================åå²çº¿ï¼NewSchemaï¼============================================\r\n    /**\r\n     * \r\n     * @param injectedEntity \r\n     * @param newSchemaMap \r\n     */\r\n    public adapterOfNewSchema(injectedEntity: FilterInjectedEntity, newSchemaMap: Map<string, NewSchema>) {\r\n        //injectedEntity.schemaNameæ¾å°Schema\r\n        let schema = newSchemaMap.get(injectedEntity.schemaName);\r\n\r\n        //injectedEntity.injectedTypeç¡®å®æ¾setsè¿æ¯types\r\n        switch (injectedEntity.injectedType) {\r\n            case FilterInjectedType.EntitySet: {\r\n                let set = schema.entitySets.find(set => set.code == injectedEntity.name);\r\n                return this.convertNewEntitySet(set, schema);\r\n            }\r\n            case FilterInjectedType.EntityType: {\r\n                let type = schema.entityTypes.find(type => type.code == injectedEntity.name);\r\n                return this.convertNewEntityType(type, schema);\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description è½¬æ¢EntityType\r\n     * @param type NewEntityType\r\n     * @param schema NewSchema\r\n     * @returns \r\n     */\r\n    convertNewEntityType(type: NewEntityType, schema: NewSchema): any {\r\n        let propertyList = Array<{ text: string, propertyDataType: PropertyDataType, value: string, parentItem: string }>();\r\n        //propertyè½¬æ¢\r\n        type.properties.forEach(pro => {\r\n            let propertyListItem =\r\n            {\r\n                value: pro.code,\r\n                text: pro.name,\r\n                propertyDataType: this.convertNewDataType2PropertyDataType(pro.dataType),\r\n                parentItem: null\r\n            };\r\n            propertyList.push(propertyListItem);\r\n        });\r\n        //navigationPropertyè½¬æ¢\r\n        type.navigationProperties.forEach(naPro => {\r\n            switch (naPro.navigationType) {\r\n                case NewNavigationType.EntitySet:\r\n                    {\r\n                        let naProSet = schema.entitySets.find(naProSet => naProSet.code == naPro.navigationName);\r\n                        this.convertNewEntitySet(naProSet, schema).forEach(ele => {\r\n                            if (ele.parentItem != null) {\r\n                                ele.parentItem = naPro.code + \".\" + ele.parentItem;\r\n                            } else {\r\n                                ele.parentItem = naPro.code;\r\n                            }\r\n                            ele.text = naPro.name + \".\" + ele.text;\r\n                            propertyList.push(ele);\r\n                        });\r\n                    }\r\n                    break;\r\n                case NewNavigationType.EntityType:\r\n                    {\r\n                        let naProType = schema.entityTypes.find(naProType => naProType.code == naPro.navigationName);\r\n                        this.convertNewEntityType(naProType, schema).forEach(ele => {\r\n                            if (ele.parentItem != null) {\r\n                                ele.parentItem = naPro.code + \".\" + ele.parentItem;\r\n                            } else {\r\n                                ele.parentItem = naPro.code;\r\n                            }\r\n                            ele.text = naPro.name + \".\" + ele.text;\r\n                            propertyList.push(ele);\r\n                        });\r\n                    }\r\n                    break;\r\n            }\r\n        })\r\n        return propertyList;\r\n    }\r\n\r\n\r\n    convertNewEntitySet(set: NewEntitySet, schema: NewSchema): any {\r\n        let propertyList = Array<{ text: string, propertyDataType: PropertyDataType, value: string, parentItem: string }>();\r\n        let type = schema.entityTypes.find(type => type.code == set.entityType);\r\n        type.properties.forEach(pro => {\r\n            let propertyListItem =\r\n            {\r\n                value: pro.code,\r\n                text: pro.name,\r\n                propertyDataType: this.convertNewDataType2PropertyDataType(pro.dataType),\r\n                parentItem: null\r\n            };\r\n            propertyList.push(propertyListItem);\r\n        });\r\n        if (type.navigationProperties.length != 0) {\r\n            type.navigationProperties.forEach(naPro => {\r\n                switch (naPro.navigationType) {\r\n                    case NewNavigationType.EntitySet:\r\n                        {\r\n                            let naProSet = schema.entitySets.find(naProSet => naProSet.code == naPro.navigationName);\r\n                            this.convertNewEntitySet(naProSet, schema).forEach(ele => {\r\n                                    if (ele.parentItem != null) {\r\n                                        ele.parentItem = naPro.code + \".\" + ele.parentItem;\r\n                                    } else {\r\n                                        ele.parentItem = naPro.code;\r\n                                    }\r\n                                    ele.text = naPro.name + \".\" + ele.text;\r\n                                    propertyList.push(ele);\r\n                            });\r\n                        }\r\n                        break;\r\n                    case NewNavigationType.EntityType:\r\n                        {\r\n                            let naProType = schema.entityTypes.find(naProType => naProType.code == naPro.navigationName);\r\n                            this.convertNewEntityType(naProType, schema).forEach(ele => {\r\n                                if (ele.parentItem != null) {\r\n                                    ele.parentItem = naPro.code + \".\" + ele.parentItem;\r\n                                } else {\r\n                                    ele.parentItem = naPro.code;\r\n                                }\r\n                                ele.text = naPro.name + \".\" + ele.text;\r\n                                propertyList.push(ele);\r\n                            });\r\n                        }\r\n                        break;\r\n                }\r\n            })\r\n        }\r\n        return propertyList;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param newType ç»ä¸Schemaçå±æ§\r\n     * @returns \r\n     */\r\n    convertNewDataType2PropertyDataType(newType: NewDataType): PropertyDataType {\r\n        let type = PropertyDataType.String;\r\n        switch (newType) {\r\n            case NewDataType.Boolean:\r\n                type = PropertyDataType.Boolean;\r\n                break;\r\n            case NewDataType.Byte:\r\n                type = PropertyDataType.Byte;\r\n                break;\r\n            case NewDataType.Date:\r\n                type = PropertyDataType.DateTime;\r\n                break;\r\n            case NewDataType.DateTime:\r\n                type = PropertyDataType.DateTime;\r\n                break;\r\n            case NewDataType.Decimal:\r\n                type = PropertyDataType.Decimal;\r\n                break;\r\n            case NewDataType.Integer:\r\n                type = PropertyDataType.Int32;\r\n                break;\r\n            case NewDataType.String:\r\n                type = PropertyDataType.String;\r\n                break;\r\n        }\r\n        return type;\r\n    }\r\n\r\n}","import { Component, ViewChild, Input, EventEmitter, Output, OnInit, OnChanges, ViewEncapsulation, LOCALE_ID, Inject, Injector } from '@angular/core';\r\nimport { TreeTableComponent, TreeNode } from '@farris/ui-treetable';\r\nimport { FilterExpression, ExpressionItem } from '../filter-expression-entity';\r\nimport { VarEntity } from '@gsp-svc/expression';\r\nimport { Schema } from '@gsp-svc/expression';\r\nimport { GspCommonDataType } from '@gsp-bef/gsp-cm-metadata';\r\nimport { InjectedEntity } from '@gsp-svc/expression';\r\nimport { ExpressTypeEnum, RelationTypeEnum, CompareTypeEnum } from '../typeinfo';\r\nimport { ExpressionService } from '@gsp-svc/expression';\r\nimport { PropertyDataType } from '../property-entity';\r\nimport { FieldType } from '../field-type';\r\nimport { FilterInjectedEntity } from '../injected-entity';\r\nimport { PropertyAdapter } from '../property-adapter';\r\nimport { FilterEntitySchema, FilterEntityType } from '../schema';\r\nimport { GSPCommonObject } from '@gsp-bef/gsp-cm-metadata';\r\nimport { Adapter } from '../adapter';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { FilterConditionLocalePipe } from '../filter-condition-locale.pipe';\r\nimport { NewSchema } from '../NewSchema';\r\n@Component({\r\n  selector: 'app-filter-expression',\r\n  templateUrl: './filter-expression.component.html',\r\n  styleUrls: ['./filter-expression.component.css'],\r\n  providers: [ExpressionService, PropertyAdapter],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n/**\r\n * è¿æ»¤æ¡ä»¶é¢æ¿é»è¾ç±»\r\n */\r\nexport class FilterExpressionComponent implements OnChanges {\r\n  localePipe: FilterConditionLocalePipe;\r\n  constructor(private expr: ExpressionService,\r\n    private propertyAdapter: PropertyAdapter,\r\n    private notifyservice: NotifyService,\r\n    private injector: Injector,\r\n    @Inject(LOCALE_ID) localeId: string) {\r\n    this.localePipe = new FilterConditionLocalePipe(localeId);\r\n  }\r\n  treeDataTemp: TreeNode[]\r\n  //è·å¾æ åè¡¨ç»ä»¶æ\r\n  @ViewChild('tt') tt: TreeTableComponent;\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼ä¸ä¸æå®ä½\r\n  @Input() contextEntity: VarEntity[] = [];\r\n  //é¢ç½®è®¡ç®é»è®¤è¡¨è¾¾å¼æ¾ç¤º\r\n  @Input() expressionText: string = \"\";\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼ä¸­çschema\r\n  @Input() expressionSchema: Array<{ name: string, schema: Schema }> = [];\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼ä¸­çæ³¨å¥å®ä½\r\n  @Input() expressionInjectedEntities: InjectedEntity[] = [];\r\n  //é¢ç½®è®¡ç®è¡¨è¾¾å¼cdté\r\n  @Input() expressionCDT: GspCommonDataType[] = [];\r\n  //é¢ç½®å±æ§åè¡¨\r\n  @Input() propertyList: Array<{ text: string, value: string, propertyFieldType: PropertyDataType }> = [];\r\n  //é¢ç½®è¿æ»¤è¡¨è¾¾å¼ä¸²\r\n  @Input() filterExpressionString: string = null;\r\n  //é¢ç½®schemaå\r\n  @Input() schemaName: string;\r\n  //é¢ç½®è¿æ»¤è¡¨è¾¾å¼schema\r\n  @Input() schema: FilterEntitySchema;\r\n  //===========================åå²çº¿ä¹NewSchema===============================\r\n  @Input() newSchema: NewSchema;\r\n  //schemaå­å¨ç»æ\r\n  filterNewSchemaMap = new Map<string, NewSchema>();\r\n  //==========================================================================\r\n  //è¿æ»¤è¡¨è¾¾å¼æ³¨å¥å®ä½\r\n  @Input() injectedEntity: FilterInjectedEntity;\r\n  //æ³¨å¥CO\r\n  @Input() gspCommonObject: GSPCommonObject;\r\n\r\n  @Input() disabled: boolean = false;\r\n  //åé¨å±æ§åè¡¨ä½¿ç¨\r\n  propertyListInner: Array<{ text: string, propertyDataType: PropertyDataType, value: string, parentItem: string }> = [];\r\n  //æä½æ¯è¾ç¬¦é\r\n  public operators = [];\r\n\r\n  public stringOperators = [];\r\n\r\n  public NumberOperators = [];\r\n  //å³ç³»é\r\n  public relations = [];\r\n  //è¡¨è¾¾å¼ç±»åé\r\n  public expressTypes = [];\r\n  public filterExpression: FilterExpression;\r\n  //æ å½¢ç»æèç¹å®ä½é\r\n  public nodeTemp: TreeNode[];\r\n  defaultSelectGroup: string;\r\n  defaultSelectItem: string;\r\n  //æä½æ¯è¾ç¬¦é»è®¤æ¾ç¤ºå¼\r\n  public defaultOperatorText: string;\r\n  //è¡¨è¾¾å¼ç±»åé»è®¤æ¾ç¤ºå¼\r\n  public defaultExpressTypeText;\r\n\r\n  public displayPopup: boolean = false;\r\n  // public defaultOperator: { text: string, value: string } = { text: null, value: null };\r\n  //è¡¨è¾¾å¼ç±»åé»è®¤æ¾ç¤ºå¼ \r\n  // public defaultExpressType: { text: string, value: string } = { text: null, value: null };\r\n  //é¢ç½®è¿æ»¤è¡¨è¾¾å¼å®ä½\r\n  public filterExpressionPre: FilterExpression;\r\n  //æ£æ¥è¿æ»¤æ¡ä»¶å®ä½æ¯å¦å®æ´æ­£ç¡®\r\n  public checkFilterStruc: boolean = true;\r\n  //schemaå­å¨ç»æ\r\n  filterSchemaMap = new Map<string, FilterEntitySchema>();\r\n  adapter: Adapter = new Adapter();\r\n  treeData: TreeNode[] = [];\r\n  columnWidth = [\"30%\", \"20%\", \"20%\", \"20%\", \"10%\"];\r\n  //æ¶æ¯æç¤º\r\n  private notifies = {};\r\n  cols: any[];\r\n  //åå§åï¼å¤å¶treeDataå¼,treeDataTempç¨äºè½¬æ¢ä¸ºFilterExpressionå®ä½\r\n  ngOnChanges(): void {\r\n    //å¹¶ä¸æ å½¢è¡¨ç»å®çæ¾ç¤ºçå \r\n    this.cols = [\r\n      { field: 'item', title: this.localePipe.transform(\"Item\"), width: 271 },\r\n      { field: 'operator', title: this.localePipe.transform(\"Operator\"), width: 191 },\r\n      { field: 'expressType', title: this.localePipe.transform(\"ExpressType\"), width: 180 },\r\n      { field: 'value', title: this.localePipe.transform(\"Value\"), width: 214 },\r\n      { field: 'operation', title: this.localePipe.transform(\"Operation\"), width: 130 }];\r\n\r\n    this.propertyListInner = [];\r\n    this.treeDataTemp = this.treeData;\r\n    //=================================åå²çº¿ä¹NewSchema====================================\r\n    //æ³¨å¥NewSchema\r\n    if (this.schemaName && this.newSchema) {\r\n      this.addNewSchema(this.schemaName, this.newSchema);\r\n      //æ³¨å¥co\r\n      if (this.gspCommonObject) {\r\n        let newSchema: NewSchema;\r\n        //è¥schemaMapä¸­å­å¨COçschema\r\n        if ((this.filterNewSchemaMap.get(\"CommonObject\"))) {\r\n          newSchema = this.filterNewSchemaMap.get(\"CommonObject\");\r\n        } else {\r\n          newSchema = new NewSchema();\r\n        }\r\n        //å°æ¯ä¸ä¸ªCOè½¬åä¸ºschemaåé¨ç»æä¸­çentityType\r\n        let entityTypes = this.adapter.convertCOOfNewSchema(this.gspCommonObject);\r\n        if ((entityTypes) && entityTypes.length != 0) {\r\n          entityTypes.forEach(entityType => {\r\n            if (newSchema.entityTypes.find(x => x.code == entityType.code) == null) {\r\n              newSchema.entityTypes.push(entityType);\r\n            }\r\n          });\r\n        }\r\n        //å°åå¹¶åçschemaæ¾å¥åé¨ä¸ä¸æå®ä½ä¸­\r\n        this.addNewSchema(\"CommonObject\", newSchema);\r\n      }\r\n      //æ·»å å±æ§åè¡¨\r\n      this.propertyList.forEach(property => {\r\n        let propertyInner =\r\n        {\r\n          value: property.value,\r\n          text: property.text,\r\n          propertyDataType: property.propertyFieldType,\r\n          parentItem: null\r\n        };\r\n        this.propertyListInner.push(propertyInner);\r\n      });\r\n      if ((this.injectedEntity)) {\r\n        this.propertyAdapter.adapterOfNewSchema(this.injectedEntity, this.filterNewSchemaMap).forEach(element => {\r\n          this.propertyListInner.push(element);\r\n        });\r\n      }\r\n    } else {\r\n      //===========================================æ§Schema==========================================\r\n      if (this.schemaName != null && (this.schema)) {\r\n        this.addSchema(this.schemaName, this.schema);\r\n      }\r\n      if ((this.gspCommonObject)) {\r\n        let schema: FilterEntitySchema;\r\n        //è¥schemaMapä¸­å­å¨COçschema\r\n        if ((this.filterSchemaMap.get(\"CommonObject\"))) {\r\n          schema = this.filterSchemaMap.get(\"CommonObject\");\r\n        }\r\n        else\r\n          schema = new FilterEntitySchema();\r\n        //å°æ¯ä¸ä¸ªCOè½¬åä¸ºschemaåé¨ç»æä¸­çentityType\r\n        let entityTypes = this.adapter.convertCO(this.gspCommonObject);\r\n        if ((entityTypes) && entityTypes.length != 0) {\r\n          entityTypes.forEach(entityType => {\r\n            if (schema.entityTypes.find(x => x.name == entityType.name) == null) {\r\n              schema.entityTypes.push(entityType);\r\n            }\r\n          });\r\n        }\r\n        //å°åå¹¶åçschemaæ¾å¥åé¨ä¸ä¸æå®ä½ä¸­\r\n        this.addSchema(\"CommonObject\", schema);\r\n      }\r\n      this.propertyList.forEach(property => {\r\n        let propertyInner =\r\n        {\r\n          text: property.text,\r\n          propertyDataType: property.propertyFieldType,\r\n          value: property.value,\r\n          parentItem: null\r\n        };\r\n        this.propertyListInner.push(propertyInner);\r\n      });\r\n      if ((this.injectedEntity)) {\r\n        this.propertyAdapter.adapter(this.injectedEntity, this.filterSchemaMap).forEach(element => {\r\n          this.propertyListInner.push(element);\r\n        });\r\n      }\r\n    }\r\n\r\n    this.defaultExpressTypeText = this.localePipe.transform(\"Value\");\r\n    this.defaultSelectGroup = this.localePipe.transform('And');\r\n    this.defaultSelectItem = this.localePipe.transform(\"SelectItem\");\r\n    this.defaultOperatorText = this.localePipe.transform(\"GreaterThan\");\r\n    this.notifies = {\r\n      1: { type: 'success', msg: this.localePipe.transform(\"Success\") },\r\n      2: { type: 'warning', msg: this.localePipe.transform(\"Warning_SelectRelation\") },\r\n      3: { type: 'warning', msg: this.localePipe.transform(\"Warning_ContainsFilters\") },\r\n      4: { type: 'warning', msg: this.localePipe.transform(\"Warning_ConditionsComplete\") },\r\n      5: { type: 'warning', msg: this.localePipe.transform(\"Warning_NumericMatch\") }\r\n    };\r\n    this.expressTypes = [\r\n      { id: this.localePipe.transform(\"Value\") },\r\n      { id: this.localePipe.transform(\"Expression\") }\r\n    ];\r\n    this.relations = [\r\n      { id: this.localePipe.transform(\"And\") },\r\n      { id: this.localePipe.transform(\"Or\") },\r\n    ];\r\n    this.NumberOperators = [\r\n      { id: this.localePipe.transform(\"GreaterThan\") },\r\n      { id: this.localePipe.transform(\"GreaterThanOrEqual\") },\r\n      { id: this.localePipe.transform(\"LessThan\") },\r\n      { id: this.localePipe.transform(\"LessThanOrEqual\") },\r\n      { id: this.localePipe.transform(\"Equal\") },\r\n      { id: this.localePipe.transform(\"NotEqual\") },\r\n      { id: this.localePipe.transform(\"IsNull\") },\r\n      { id: this.localePipe.transform(\"IsNotNull\") },\r\n    ];\r\n    this.stringOperators = [\r\n      { id: this.localePipe.transform(\"Equal\") },\r\n      { id: this.localePipe.transform(\"NotEqual\") },\r\n      { id: this.localePipe.transform(\"Contains\") },\r\n      { id: this.localePipe.transform(\"NotContains\") },\r\n      { id: this.localePipe.transform(\"StartsWith\") },\r\n      { id: this.localePipe.transform(\"EndsWith\") },\r\n      { id: this.localePipe.transform(\"NotStartsWith\") },\r\n      { id: this.localePipe.transform(\"NotEndsWith\") },\r\n      { id: this.localePipe.transform(\"IsNull\") },\r\n      { id: this.localePipe.transform(\"IsNotNull\") },\r\n    ];\r\n    this.operators = [\r\n      { id: this.localePipe.transform(\"GreaterThan\") },\r\n      { id: this.localePipe.transform(\"GreaterThanOrEqual\") },\r\n      { id: this.localePipe.transform(\"LessThan\") },\r\n      { id: this.localePipe.transform(\"LessThanOrEqual\") },\r\n      { id: this.localePipe.transform(\"Equal\") },\r\n      { id: this.localePipe.transform(\"NotEqual\") },\r\n      { id: this.localePipe.transform(\"Contains\") },\r\n      { id: this.localePipe.transform(\"NotContains\") },\r\n      { id: this.localePipe.transform(\"StartsWith\") },\r\n      { id: this.localePipe.transform(\"EndsWith\") },\r\n      { id: this.localePipe.transform(\"NotStartsWith\") },\r\n      { id: this.localePipe.transform(\"NotEndsWith\") },\r\n      { id: this.localePipe.transform(\"IsNull\") },\r\n      { id: this.localePipe.transform(\"IsNotNull\") },\r\n      { id: this.localePipe.transform(\"In\") },\r\n      { id: this.localePipe.transform(\"NotIn\") },\r\n    ];\r\n    this.onCancel();\r\n  }\r\n\r\n  //=================æ·»å NewSchema=====================\r\n  /**\r\n   * @description æ·»å NewSchemaå°Mapä¸­\r\n   * @param name schemaåç§°\r\n   * @param filterNewSchema æ³¨å¥çç»ä¸ç»æNewSchema\r\n   */\r\n  addNewSchema(name: string, filterNewSchema: NewSchema) {\r\n    this.filterNewSchemaMap.set(name, filterNewSchema);\r\n  }\r\n  //==================================================\r\n\r\n  /**\r\n   * æ·»å schemaå¥Map\r\n   * @param name schemaå\r\n   * @param filterSchema \r\n   */\r\n  addSchema(name: string, filterSchema: FilterEntitySchema) {\r\n    this.filterSchemaMap.set(name, filterSchema);\r\n  }\r\n  /**\r\n   * æ å½¢è¡¨ä¸­èç¹éæ©è§¦åå½æ°\r\n   * @param $event æéèç¹ä¿¡æ¯\r\n   */\r\n  nodeSelected($event) {\r\n    //éèæææçèç¹éæ©ç¼è¾æ¡ï¼åæ¬å­èç¹ç\r\n    this.hideNodeEditor(this.treeData);\r\n    //å°æéèç¹æ¯è¾é¡¹ãè¡¨è¾¾å¼ç±»åé¡¹ãå¼ç¼è¾æ¡æ¾ç¤ºï¼å¹¶å°æéå¯¹åºæ°æ®èµç»é»è®¤é¡¹è¿è¡æ¾ç¤º\r\n    this.defaultOperatorText = $event.node.data.operator;\r\n    this.defaultExpressTypeText = $event.node.data.expressType;\r\n    if ($event.node.data.item == this.localePipe.transform('And') || $event.node.data.item == this.localePipe.transform('Or')) {\r\n      this.defaultSelectGroup = $event.node.data.item;\r\n    }\r\n    else if ($event.node.data.item !== this.localePipe.transform(\"SelectProperty\")) {\r\n      let properties = this.propertyListInner.filter(x => x.text == $event.node.data.item);\r\n      this.defaultSelectItem = properties[0].value;\r\n    }\r\n    else if ($event.node.data.item == this.localePipe.transform(\"SelectProperty\")) {\r\n      this.defaultSelectItem = $event.node.data.item;\r\n    }\r\n    this.treeData = [...this.treeData];\r\n    $event.node.data.displayOperator = true;\r\n    $event.node.data.displayExpressType = true;\r\n    $event.node.data.displayValue = true;\r\n    $event.node.data.displaySelect = true;\r\n  };\r\n  /**\r\n   * éèæææçèç¹éæ©ç¼è¾æ¡ï¼åæ¬å­èç¹ç\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   */\r\n  hideNodeEditor(treeNodes: TreeNode[]) {\r\n    treeNodes.forEach(element => {\r\n      element.data.displayOperator = false;\r\n      element.data.displayExpressType = false;\r\n      element.data.displayValue = false;\r\n      element.data.displaySelect = false;\r\n      //è¥æå­èç¹ï¼åå°å¶å­èç¹çç¼è¾éæ©æ¡éè\r\n      if ((element.children) && element.children.length != 0) {\r\n        this.hideNodeEditor(element.children);\r\n      }\r\n    });\r\n  };\r\n  //èç¹æªéæ©å½æ°\r\n  nodeUnSelect() {\r\n    console.log(\"nodeUnselect\");\r\n  };\r\n  /***\r\n  * éæ©é»è¾éæ¶\r\n  */\r\n  selectGroup($event) {\r\n    this.propertyNodeOperate($event, this.treeData, FieldType.Group);\r\n  }\r\n  /***\r\n   * éæ©é¡¹æ¶\r\n   */\r\n  selectItem($event) {\r\n    this.propertyNodeOperate($event, this.treeData, FieldType.Item);\r\n  }\r\n  /**\r\n   * éæ©æ¯è¾æä½ç¬¦æ¶\r\n   * @param $event æ¯è¾æä½é¡¹ä¿¡æ¯\r\n   */\r\n  selectOperator($event) {\r\n    this.propertyNodeOperate($event, this.treeData, FieldType.Operation);\r\n  };\r\n  /**\r\n   * éæ©å¼ç±»åæ¶\r\n   * @param $event å¼ç±»åé¡¹ä¿¡æ¯\r\n   */\r\n  selectExpressType($event) {\r\n    this.propertyNodeOperate($event, this.treeData, FieldType.Valuetype);\r\n  };\r\n  /**\r\n   * éæ©ç»æåéèè¯¥å­æ®µéæ©æ¡\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   * @param fieldType æéå­æ®µ\r\n   */\r\n  hideFieldEditor(treeNodes: TreeNode[], fieldType: FieldType) {\r\n    //æ¾å°ææä½çèç¹ï¼æ ¹æ®æéæ©çå­æ®µå°å¯¹åºéæ©ç¼è¾æ¡éè\r\n    treeNodes.forEach(treeNode => {\r\n      if (this.tt.isSelected(treeNode)) {\r\n        switch (fieldType) {\r\n          case FieldType.Item: treeNode.data.displaySelect = false; break;\r\n          case FieldType.Operation: treeNode.data.displayOperator = false; break;\r\n          case FieldType.Valuetype: treeNode.data.displayExpressType = false; break;\r\n        }\r\n        return;\r\n      }\r\n      //è¥æªæ¾å°æéèç¹ï¼åæ¾å¶å­èç¹\r\n      else if ((treeNode.children) && treeNode.children.length != 0) {\r\n        this.hideFieldEditor(treeNode.children, fieldType);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * æå¼è®¡ç®è¡¨è¾¾å¼ç¼è¾å¨\r\n   */\r\n  openExpressEditor() {\r\n    let that = this;\r\n    //æ·»å é¢ç½®ä¸ä¸æåé\r\n    if (this.contextEntity && this.contextEntity.length != 0) {\r\n      this.contextEntity.forEach(element => {\r\n        this.expr.addContext(element);\r\n      });\r\n    }\r\n    //æ·»å é¢ç½®è¡¨è¾¾å¼ææ¬\r\n    let selectNode = this.isSelected(this.treeData);\r\n    if ((selectNode) && (selectNode.data.value != \"\") && (selectNode.data.value != null)) {\r\n      this.expr.addExpressionText(selectNode.data.value);\r\n    }\r\n    else this.expr.addExpressionText(this.expressionText);\r\n    //æ·»å æ³¨å¥å®ä½\r\n    this.expressionInjectedEntities.forEach(element => {\r\n      this.expr.addInjectedEntity(element.name, element.schemaName, element.injectedName, element.injectedType);\r\n    });\r\n    //æ·»å CDT\r\n    this.expr.addCDT(this.expressionCDT);\r\n    //æ·»å schema\r\n    this.expressionSchema.forEach(element => {\r\n      this.expr.addSchema(element.name, element.schema);\r\n    });\r\n    //æå¼è¡¨è¾¾å¼ç¼è¾å¨å¹¶è¿åç¼è¾ç»æ\r\n    this.expr.buildExpression().then(info => {\r\n      let expressInfo: any = info;\r\n      this.displayExpressResult(that.treeData, expressInfo);\r\n    });\r\n  }\r\n  /**\r\n   * éä¸­èç¹éæ©\r\n   * @param treeNodes å³ç³»ç»\r\n   */\r\n  isSelected(treeNodes: TreeNode[]): any {\r\n    let treeNode: TreeNode;\r\n    for (var i = 0; i < treeNodes.length; i++) {\r\n      if (this.tt.isSelected(treeNodes[i])) {\r\n        treeNode = treeNodes[i];\r\n        break;\r\n      }\r\n      //è¥å¨è¯¥å±èç¹ä¸­æªæ¾å°æéèç¹ï¼åæ¾å¶å­èç¹\r\n      else if ((treeNodes[i].children) && treeNodes[i].children.length != 0) {\r\n        treeNode = this.isSelected(treeNodes[i].children);\r\n        if ((treeNode)) break;\r\n      }\r\n    }\r\n    return treeNode;\r\n  }\r\n  /**\r\n   * å°è®¡ç®è¡¨è¾¾å¼ç»æå±ç¤ºå°å¯¹åºèç¹\r\n   * @param treeNodes æ è¡¨ç»å®ç»æ\r\n   * @param expressInfo è®¡ç®è¡¨è¾¾å¼å¾å°ç»æ\r\n   */\r\n  displayExpressResult(treeNodes: TreeNode[], expressInfo: string) {\r\n    //æ¾å°æéèç¹å®ä½ï¼å¹¶å°è®¡ç®è¡¨è¾¾å¼æå¾ç»æèµç»å¯¹åºå±æ§è¿è¡æ¾ç¤º\r\n    treeNodes.forEach(treeNode => {\r\n      if (this.tt.isSelected(treeNode)) {\r\n        treeNode.data.value = expressInfo;\r\n        return;\r\n      }\r\n      //è¥å¨è¯¥å±èç¹ä¸­æªæ¾å°æéèç¹ï¼åæ¾å¶å­èç¹\r\n      else if ((treeNode.children) && treeNode.children.length != 0) {\r\n        this.displayExpressResult(treeNode.children, expressInfo);\r\n      }\r\n      //è¥ä»æªæ¾å°ï¼åä¸è¿è¡ä»»ä½æä½\r\n    });\r\n  }\r\n  /**\r\n   * å³ç³»éæ©æé®éæ©äºä»¶\r\n   * @param $event éæ©æé®æéä¿¡æ¯\r\n   */\r\n  itemClick($event) {\r\n    //è¥éæ©æ·»å å³ç³»\r\n    if ($event.value == RelationTypeEnum.AddRelation) {\r\n      this.addNode(this.treeData, this.localePipe.transform('And'), null, null);\r\n    }\r\n    //è¥éæ©æ·»å å±æ§\r\n    else if ($event.value == RelationTypeEnum.AddProperty) {\r\n      this.addNode(this.treeData, this.localePipe.transform(\"SelectProperty\"), this.localePipe.transform(\"Equal\"), this.localePipe.transform(\"Value\"));\r\n    }\r\n    else this.propertyNodeOperate($event, this.treeData, FieldType.Item);\r\n  }\r\n  /**\r\n   * éæ©å±æ§èç¹æä½\r\n   * å¯¹æ°æ·»å çå±æ§èç¹è¿è¡é»è¾å¤ç\r\n   * @param event ç¹å»äºä»¶\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   * @param fieldType èç¹ç±»å\r\n   */\r\n  propertyNodeOperate(event: any, treeNodes: TreeNode[], fieldType: FieldType) {\r\n    treeNodes.forEach(treenode => {\r\n      if (this.tt.isSelected(treenode)) {\r\n        //å¯¹æéèç¹è¿è¡èµå¼æä½\r\n        switch (fieldType) {\r\n          case FieldType.Group:\r\n            {\r\n              treenode.data.item = event.data.id;\r\n              this.defaultSelectGroup = event.data.id;\r\n            } break;\r\n          case FieldType.Item:\r\n            {\r\n              treenode.data.item = event.data.text;\r\n              this.defaultSelectItem = event.data.value;\r\n              treenode.data.parentItem = event.data.parentItem;\r\n              treenode.data.propertyDataType = event.data.propertyDataType;\r\n            } break;\r\n          case FieldType.Operation:\r\n            {\r\n              treenode.data.operator = event.data.id;\r\n              this.defaultOperatorText = event.data.id;\r\n            } break;\r\n          case FieldType.Valuetype:\r\n            {\r\n              treenode.data.expressType = event.data.id;\r\n              this.defaultExpressTypeText = event.data.id;\r\n            } break;\r\n        }\r\n        return;\r\n      }\r\n      //å¦åå¯¹å¶å­èç¹è¿è¡èµå¼æä½\r\n      else if ((treenode.children) && treenode.children.length != 0) {\r\n        this.propertyNodeOperate(event, treenode.children, fieldType);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * æ ¹æ®æéä¸ºå³ç³»æèå±æ§å¯¹æ°èç¹è¿è¡åå§å\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   * @param defaultString æ°èç¹æ¾ç¤ºé»è®¤å¼\r\n   */\r\n  addNode(treeNodes: TreeNode[], defaultString: any, defaultOperator: string, defalutExpressType: string) {\r\n    treeNodes.forEach(treeNode => {\r\n      if (this.tt.isSelected(treeNode)) {\r\n        //è¥å³ç³»å¼ä¸ºç©º\r\n        if (!(treeNode.data.item)) {\r\n          this.notifyservice[this.notifies['2'].type]({\r\n            msg: this.notifies['2'].msg\r\n          });\r\n          return;\r\n        }\r\n        //è¥ä¸ºæéçå³ç³»èç¹ï¼åå¨å¶å­é¡¹éæ·»å æ°å­èç¹\r\n        let newNode: TreeNode =\r\n        {\r\n          data:\r\n          {\r\n            \"item\": defaultString,\r\n            \"propertyDataType\": null,    //å±æ§æ°æ®ç±»å\r\n            \"operator\": defaultOperator,\r\n            \"expressType\": defalutExpressType,\r\n            \"value\": null,\r\n            \"id\": Math.random(),\r\n            \"parentItem\": null\r\n          },\r\n          parent: treeNode,\r\n          children: [],\r\n          expanded: true\r\n        };\r\n        //åè¯¥æéèç¹çå­é¡¹æ·»å æ°èç¹\r\n        treeNode.children.push(newNode);\r\n        return;\r\n      }\r\n      //è¥æªæ¾å°æéèç¹ï¼ä¸è¯¥èç¹å­é¡¹ä¸ä¸ºç©ºï¼åå¨å¶å­é¡¹ä¸­æ¥æ¾æéèç¹\r\n      else if ((treeNode.children) && treeNode.children.length != 0) {\r\n        this.addNode(treeNode.children, defaultString, defaultOperator, defalutExpressType);\r\n      }\r\n    });\r\n    this.tt.updateSerializedValue();\r\n  }\r\n  /**\r\n   * å é¤èç¹\r\n   * @param treeNode è¦å é¤çèç¹\r\n   */\r\n  deleteNode($event) {\r\n    this.onDelete(this.treeData, $event);\r\n  }\r\n  /**\r\n  * éç½®(å¤é¨è°ç¨)\r\n  * éç½®ä¸ºåå§ç¶æ\r\n  */\r\n  onCancel() {\r\n    if (this.filterExpressionString == null || this.filterExpressionString == \"\") {\r\n      this.treeData = [\r\n        {\r\n          data:\r\n          {\r\n            \"id\": 1,                    //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n            \"item\": this.localePipe.transform('And'),               //å±æ§é¡¹\r\n            \"propertyDataType\": null,    //å±æ§æ°æ®ç±»å\r\n            \"operator\": null,           //æä½æ¯è¾ç¬¦\r\n            \"expressType\": null,        //è¡¨è¾¾å¼ç±»å\r\n            \"value\": null,              //å¼\r\n            \"displaySelect\": false,      //éæ©é¡¹æ¾ç¤º\r\n            \"displayOperator\": false,   //æä½ç¬¦é¡¹æ¾ç¤º\r\n            \"displayExpressType\": false,//è¡¨è¾¾å¼ç±»åæ¾ç¤º\r\n            \"displayValue\": false,      //å¼æ¾ç¤º\r\n            \"parentItem\": null           //ç¶é¡¹\r\n          },\r\n          children: [],                 //å­èç¹éå\r\n          expanded: true                //æ¯å¦å±å¼\r\n        }\r\n      ];\r\n    }\r\n    else {\r\n      this.filterExpressionPre = JSON.parse(this.filterExpressionString);\r\n      this.treeData = [];\r\n      this.treeData.push(this.unConvert(this.filterExpressionPre));\r\n      this.treeData[0].data.id = 1;\r\n    }\r\n  }\r\n  /**\r\n   * å é¤èç¹å·ä½å®ç°ç±»\r\n   * @param treeNodes æ å½¢è¡¨ç»å®ç»æ\r\n   */\r\n  onDelete(treeNodes: TreeNode[], id: number) {\r\n    treeNodes.forEach(treeNode => {\r\n      if (treeNode.data.id == id) {\r\n        if (treeNode.data.id == 1) {\r\n          this.treeData = [\r\n            {\r\n              data:\r\n              {\r\n                \"id\": 1,                    //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n                \"item\": this.localePipe.transform('And'),              //å±æ§é¡¹\r\n                \"propertyDataType\": null,   //å±æ§æ°æ®ç±»å\r\n                \"operator\": null,           //æä½æ¯è¾ç¬¦\r\n                \"expressType\": null,        //è¡¨è¾¾å¼ç±»å\r\n                \"value\": null,              //å¼\r\n                \"displaySelect\": false,      //éæ©é¡¹æ¾ç¤º\r\n                \"displayOperator\": false,   //æä½ç¬¦é¡¹æ¾ç¤º\r\n                \"displayExpressType\": false,//è¡¨è¾¾å¼ç±»åæ¾ç¤º\r\n                \"displayValue\": false,      //å¼æ¾ç¤º\r\n                \"parentItem\": null           //ç¶é¡¹\r\n              },\r\n              children: [],                 //å­èç¹éå\r\n              expanded: true                //æ¯å¦å±å¼\r\n            }\r\n          ];\r\n          return;\r\n        }\r\n        //æéèç¹æå¨æ°\r\n        let index = treeNodes.indexOf(treeNode);\r\n        //å°æéèç¹åé¤\r\n        treeNodes.splice(index, 1);\r\n      }\r\n      else if ((treeNode.children) && treeNode.children.length != 0) {\r\n        treeNode.children = this.onDelete(treeNode.children, id);\r\n      }\r\n    });\r\n    this.tt.updateSerializedValue();\r\n    return treeNodes;\r\n  }\r\n  /***\r\n  * æ·»å æ¡ä»¶é¡¹\r\n  */\r\n  addItem() {\r\n    this.defaultSelectItem = this.localePipe.transform(\"SelectItem\");\r\n    this.hideNodeEditor(this.treeData);\r\n    this.addNode(this.treeData, this.localePipe.transform(\"SelectProperty\"), this.localePipe.transform(\"Equal\"), this.localePipe.transform(\"Value\"));\r\n  }\r\n  /***\r\n   * æ·»å æ¡ä»¶ç»\r\n   */\r\n  addGroup() {\r\n    this.addNode(this.treeData, this.localePipe.transform('And'), null, null);\r\n  }\r\n  /**\r\n   * å°treeDataè½¬åä¸ºfiletrExpressionå®ä½\r\n   * @param filterExpression è¿æ»¤è¡¨è¾¾å¼å®ä½\r\n   * @param treeNode æå¤å±çtreeNode\r\n   */\r\n  convert(filterExpression: FilterExpression, treeNode: TreeNode): FilterExpression {\r\n    //å¾å°æå¤å±çå³ç³»ç¬¦\r\n    filterExpression.relationOperator = this.typeMatch(treeNode.data.item);\r\n    //è¥å¶å­é¡¹ä¸ä¸ºç©º\r\n    if (treeNode.children.length != 0) {\r\n      //å¯¹å¶æ¯ä¸ä¸ªå­é¡¹è¿è¡è½¬åæä½\r\n      treeNode.children.forEach(treeNodeItem => {\r\n        //è¥å­é¡¹ä¸ºå¹¶ä¸ãæèï¼åæ°å»ºå¤æè¿æ»¤è¡¨è¾¾å¼\r\n        if (this.typeMatch(treeNodeItem.data.item) == RelationTypeEnum.And ||\r\n          this.typeMatch(treeNodeItem.data.item) == RelationTypeEnum.Or) {\r\n          let filterExpressionItem = new FilterExpression();\r\n          filterExpression.expressItems.push(this.convert(filterExpressionItem, treeNodeItem));\r\n        }\r\n        //è¥å­é¡¹ä¸ºå±æ§è¡¨è¾¾å¼\r\n        else {\r\n          let filterItem = new ExpressionItem();\r\n          let properties = this.propertyListInner.filter(x => x.text == treeNodeItem.data.item);\r\n          filterItem.propertyName = properties[0].value;\r\n          filterItem.propertyDataType = treeNodeItem.data.propertyDataType;\r\n          filterItem.operator = this.typeMatch(treeNodeItem.data.operator);\r\n          filterItem.expressType = this.typeMatch(treeNodeItem.data.expressType);\r\n          filterItem.value = treeNodeItem.data.value;\r\n          filterItem.parentItem = treeNodeItem.data.parentItem;\r\n          //è¥ä¸ºæ°å¼åæ¯è¾ï¼åå°valueå¼å¼ºå¶è½¬æ¢ä¸ºæ°å­\r\n          if (filterItem.expressType == ExpressTypeEnum.Value &&\r\n            (filterItem.operator == CompareTypeEnum.GreaterThan\r\n              || filterItem.operator == CompareTypeEnum.GreaterThanOrEqual\r\n              || filterItem.operator == CompareTypeEnum.LessThan\r\n              || filterItem.operator == CompareTypeEnum.LessThanOrEqual\r\n            )) {\r\n            filterItem.value = Number(treeNodeItem.data.value);\r\n          }\r\n          if (filterItem.expressType == ExpressTypeEnum.Value &&\r\n            (filterItem.operator == CompareTypeEnum.Equal\r\n              || filterItem.operator == CompareTypeEnum.NotEqual)) {\r\n            if (filterItem.propertyDataType == PropertyDataType.Decimal\r\n              || filterItem.propertyDataType == PropertyDataType.Double\r\n              || filterItem.propertyDataType == PropertyDataType.Int16\r\n              || filterItem.propertyDataType == PropertyDataType.Int32\r\n              || filterItem.propertyDataType == PropertyDataType.Int64) {\r\n              filterItem.value = Number(treeNodeItem.data.value);\r\n            }\r\n          }\r\n\r\n          //å°å­é¡¹æ¾å¥ç¶é¡¹çå­æ®µä¸­\r\n          filterExpression.expressItems.push(filterItem);\r\n        }\r\n      });\r\n    }\r\n    return filterExpression;\r\n  }\r\n  /**\r\n  * filetrExpressionåè½¬åä¸ºTreeNode\r\n  * @param filterExpress å¾è½¬åçfiletrExpressionå®ä½\r\n  */\r\n  unConvert(filterExpress: FilterExpression): TreeNode {\r\n    let treeData: TreeNode =\r\n    {\r\n      data:\r\n      {\r\n        \"id\": Math.random(),        //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n        \"item\": this.relationTypeReverseMatch(filterExpress.relationOperator), //å±æ§é¡¹\r\n        \"propertyDataType\": null,    //å±æ§æ°æ®ç±»å\r\n        \"operator\": null,           //æä½æ¯è¾ç¬¦\r\n        \"expressType\": null,        //è¡¨è¾¾å¼ç±»å\r\n        \"value\": null,              //å¼\r\n        \"displaySelect\": false,      //éæ©é¡¹æ¾ç¤º\r\n        \"displayOperator\": false,   //æä½ç¬¦é¡¹æ¾ç¤º\r\n        \"displayExpressType\": false,//è¡¨è¾¾å¼ç±»åæ¾ç¤º\r\n        \"displayValue\": false,      //å¼æ¾ç¤º\r\n        \"parentItem\": null           //ç¶é¡¹\r\n      },\r\n      children: [],                 //å­èç¹éå\r\n      expanded: true                //æ¯å¦å±å¼\r\n    };\r\n    //å¯¹äºæ¯ä¸ä¸ªå­é¡¹\r\n    filterExpress.expressItems.forEach(expressItem => {\r\n      let filterExpressItem = expressItem as FilterExpression;\r\n      //è¥å­é¡¹ä¸ºFilterExpressionç±»åï¼èµå¼\r\n      if ((filterExpressItem.relationOperator == RelationTypeEnum.And || filterExpressItem.relationOperator == RelationTypeEnum.Or)) {\r\n        let treeDataChild = this.unConvert(filterExpressItem);\r\n        treeDataChild.data.parent = treeData;//æ·»å ç¶èç¹\r\n        treeData.children.push(treeDataChild);\r\n      }\r\n      else //è¥å­é¡¹ä¸ºExpressionItemç±»åï¼èµå¼\r\n      {\r\n        let expressionItem = expressItem as ExpressionItem;\r\n        let properties = this.propertyListInner.filter(x => x.value == expressionItem.propertyName);\r\n        let treeDataChild: TreeNode =\r\n        {\r\n          data:\r\n          {\r\n            \"id\": Math.random(),                      //æ å½¢ç»æä¸­æ¯ä¸ªèç¹çid\r\n            \"item\": properties[0].text,               //å±æ§é¡¹\r\n            \"propertyDataType\": expressionItem.propertyDataType,\r\n            \"operator\": this.operatorReverseMatch(expressionItem.operator),      //æä½æ¯è¾ç¬¦\r\n            \"expressType\": this.expressTypeReverseMatch(expressionItem.expressType),//è¡¨è¾¾å¼ç±»å\r\n            \"value\": expressionItem.value,            //å¼\r\n            \"parentItem\": expressionItem.parentItem    //ç¶é¡¹\r\n          },\r\n          parent: treeData,             //æ·»å ç¶èç¹\r\n          children: [],                 //å­èç¹éå\r\n          expanded: true                //æ¯å¦å±å¼\r\n        }\r\n        treeData.children.push(treeDataChild);\r\n      }\r\n    });\r\n    return treeData;\r\n  }\r\n  /**\r\n   * ç±»åä¿¡æ¯å¹é\r\n   * @param type ç±»å\r\n   */\r\n  typeMatch(type: any): any {\r\n    switch (type) {\r\n      case this.localePipe.transform(\"And\"): return RelationTypeEnum.And;\r\n      case this.localePipe.transform(\"Or\"): return RelationTypeEnum.Or;\r\n      case this.localePipe.transform(\"GreaterThan\"): return CompareTypeEnum.GreaterThan;\r\n      case this.localePipe.transform(\"GreaterThanOrEqual\"): return CompareTypeEnum.GreaterThanOrEqual;\r\n      case this.localePipe.transform(\"LessThan\"): return CompareTypeEnum.LessThan;\r\n      case this.localePipe.transform(\"LessThanOrEqual\"): return CompareTypeEnum.LessThanOrEqual;\r\n      case this.localePipe.transform(\"Equal\"): return CompareTypeEnum.Equal;\r\n      case this.localePipe.transform(\"NotEqual\"): return CompareTypeEnum.NotEqual;\r\n      case this.localePipe.transform(\"Contains\"): return CompareTypeEnum.Contains;\r\n      case this.localePipe.transform(\"NotContains\"): return CompareTypeEnum.NotContains;\r\n      case this.localePipe.transform(\"StartsWith\"): return CompareTypeEnum.StartsWith;\r\n      case this.localePipe.transform(\"EndsWith\"): return CompareTypeEnum.EndsWith;\r\n      case this.localePipe.transform(\"NotStartsWith\"): return CompareTypeEnum.NotStartsWith;\r\n      case this.localePipe.transform(\"NotEndsWith\"): return CompareTypeEnum.NotEndsWith;\r\n      case this.localePipe.transform(\"IsNull\"): return CompareTypeEnum.IsNull;\r\n      case this.localePipe.transform(\"IsNotNull\"): return CompareTypeEnum.IsNotNull;\r\n      case this.localePipe.transform(\"In\"): return CompareTypeEnum.In;\r\n      case this.localePipe.transform(\"NotIn\"): return CompareTypeEnum.NotIn;\r\n      case this.localePipe.transform(\"Value\"): return ExpressTypeEnum.Value;\r\n      case this.localePipe.transform(\"Expression\"): return ExpressTypeEnum.Expression;\r\n    }\r\n  }\r\n  relationTypeReverseMatch(type: RelationTypeEnum): string {\r\n    switch (type) {\r\n      case RelationTypeEnum.And: return this.localePipe.transform('And');\r\n      case RelationTypeEnum.Or: return this.localePipe.transform('Or');\r\n    }\r\n  }\r\n  operatorReverseMatch(type: CompareTypeEnum): string {\r\n    switch (type) {\r\n      case CompareTypeEnum.GreaterThan: return this.localePipe.transform(\"GreaterThan\");\r\n      case CompareTypeEnum.GreaterThanOrEqual: return this.localePipe.transform(\"GreaterThanOrEqual\");\r\n      case CompareTypeEnum.LessThan: return this.localePipe.transform(\"LessThan\");\r\n      case CompareTypeEnum.LessThanOrEqual: return this.localePipe.transform(\"LessThanOrEqual\");\r\n      case CompareTypeEnum.Equal: return this.localePipe.transform(\"Equal\");\r\n      case CompareTypeEnum.NotEqual: return this.localePipe.transform(\"NotEqual\");\r\n      case CompareTypeEnum.Contains: return this.localePipe.transform(\"Contains\");\r\n      case CompareTypeEnum.NotContains: return this.localePipe.transform(\"NotContains\");\r\n      case CompareTypeEnum.StartsWith: return this.localePipe.transform(\"StartsWith\");\r\n      case CompareTypeEnum.EndsWith: return this.localePipe.transform(\"EndsWith\");\r\n      case CompareTypeEnum.NotStartsWith: return this.localePipe.transform(\"NotStartsWith\");\r\n      case CompareTypeEnum.NotEndsWith: return this.localePipe.transform(\"NotEndsWith\");\r\n      case CompareTypeEnum.IsNull: return this.localePipe.transform(\"IsNull\");\r\n      case CompareTypeEnum.IsNotNull: return this.localePipe.transform(\"IsNotNull\");\r\n      case CompareTypeEnum.In: return this.localePipe.transform(\"In\");\r\n      case CompareTypeEnum.NotIn: return this.localePipe.transform(\"NotIn\");\r\n    }\r\n  }\r\n  expressTypeReverseMatch(type: ExpressTypeEnum): string {\r\n    switch (type) {\r\n      case ExpressTypeEnum.Value: return this.localePipe.transform(\"Value\");\r\n      case ExpressTypeEnum.Expression: return this.localePipe.transform('Expression');\r\n    }\r\n  }\r\n  /**\r\n   * è¿æ»¤è¡¨è¾¾å¼è·å(å¤é¨è°ç¨)\r\n   */\r\n  getFilterExpression(): string {\r\n    this.treeDataTemp = this.treeData;\r\n    let isNull = true;\r\n    let isMatch = true;\r\n    if (this.checkNull(this.treeDataTemp[0].children, isNull) && this.checkMatch(this.treeDataTemp[0].children, isMatch)) {\r\n      this.filterExpression = new FilterExpression();\r\n      //æ ¹æ®æ å½¢æ°æ®ç»æè½¬åä¸ºè¿æ»¤è¡¨è¾¾å¼å®ä½\r\n      this.convert(this.filterExpression, this.treeDataTemp[0]);\r\n      //è¥åªåå«å³ç³»é¡¹åè¿åç©º\r\n      if (this.filterExpression.expressItems.length == 0) return null;\r\n      else {\r\n        if (this.filterExpression.relationOperator == null) {\r\n          this.filterExpression.relationOperator = RelationTypeEnum.Or;\r\n        }\r\n        return JSON.stringify(this.filterExpression);\r\n      }\r\n    }\r\n  }\r\n  //éå½æ£æ¥æ´ä¸ªè¿æ»¤è¡¨è¾¾å¼æ¯å¦ææ¼å¡«çé¡¹\r\n  public checkNull(treeNodes: TreeNode[], isNull: boolean): boolean {\r\n    for (var i = 0; i < treeNodes.length; i++) {\r\n      if (treeNodes[i].data.item == this.localePipe.transform('And') || treeNodes[i].data.item == this.localePipe.transform('Or')) {\r\n        if (!(treeNodes[i].children) || treeNodes[i].children.length == 0) {\r\n          this.checkFilterStruc = false;\r\n          this.notifyservice[this.notifies['3'].type]({\r\n            msg: this.notifies['3'].msg\r\n          });\r\n          isNull = false;\r\n          break;\r\n        }\r\n        else if (!this.checkNull(treeNodes[i].children, isNull)) {\r\n          isNull = false;\r\n          break;\r\n        }\r\n      }\r\n      else {\r\n        if (!(treeNodes[i].data.item) || treeNodes[i].data.item == this.localePipe.transform(\"SelectProperty\")\r\n          || !(treeNodes[i].data.operator) || !(treeNodes[i].data.expressType)\r\n          || !(treeNodes[i].data.value)) {\r\n          this.notifyservice[this.notifies['4'].type]({\r\n            msg: this.notifies['4'].msg\r\n          });\r\n          this.checkFilterStruc = false;\r\n          isNull = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return isNull;\r\n  }\r\n  onfocus() {\r\n    this.displayPopup = true;\r\n  }\r\n  onblur() {\r\n    this.displayPopup = false;\r\n  }\r\n  checkMatch(treeNodes: TreeNode[], isMatch: boolean) {\r\n    for (var i = 0; i < treeNodes.length; i++) {\r\n      if (treeNodes[i].data.item != this.localePipe.transform('And') && treeNodes[i].data.item != this.localePipe.transform('Or')) {\r\n        if (treeNodes[i].data.expressType == this.localePipe.transform(\"Value\")) {\r\n          if ((treeNodes[i].data.propertyDataType == PropertyDataType.Int16 || treeNodes[i].data.propertyDataType == PropertyDataType.Int32 || treeNodes[i].data.propertyDataType == PropertyDataType.Int64) && isNaN(treeNodes[i].data.value)) {\r\n            this.notifyservice[this.notifies['5'].type]({\r\n              msg: this.notifies['5'].msg\r\n            });\r\n            isMatch = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      else isMatch = this.checkMatch(treeNodes[i].children, isMatch);\r\n    }\r\n    return isMatch;\r\n  }\r\n}\r\n\r\n","import { LOCALE_ID,NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FilterConditionComponent } from './filter-condition/filter-condition.component';\r\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns'\r\nimport { TreeTableModule} from  '@farris/ui-treetable';\r\nimport { ButtonModule } from '@progress/kendo-angular-buttons';\r\nimport { DropDownButtonModule } from '@progress/kendo-angular-buttons';\r\nimport { InputsModule } from '@progress/kendo-angular-inputs';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PopupModule } from '@progress/kendo-angular-popup';\r\nimport { FilterExpressionComponent } from './filter-expression/filter-expression.component';\r\nimport {ExpressionModule} from '@gsp-svc/expression';\r\nimport { ModalModule, BsModalService} from '@farris/ui-modal';\r\nimport { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { FilterConditionLocalePipe } from './filter-condition-locale.pipe';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DropDownsModule,\r\n    ButtonModule,\r\n    DropDownButtonModule,\r\n    InputsModule,\r\n    FormsModule,\r\n    PopupModule,\r\n    ComboListModule,\r\n    ExpressionModule,\r\n    TreeTableModule,\r\n    InputGroupModule,\r\n    NotifyModule,\r\n    FDropdownDirectiveTypeModule,\r\n    ModalModule.forRoot(),\r\n  ],\r\n  declarations: [FilterConditionComponent, FilterExpressionComponent, FilterConditionLocalePipe],\r\n  entryComponents:[FilterConditionComponent,FilterExpressionComponent],\r\n  exports: [FilterConditionComponent,FilterExpressionComponent],\r\n  providers:[\r\n    BsModalService,\r\n    { provide: LOCALE_ID, useValue: localStorage.getItem('languageCode') || 'zh-CHS' }\r\n  ]\r\n})\r\nexport class FilterConditionModule { }\r\n"],"names":["tslib_1.__extends","Pipe","Inject","LOCALE_ID","EventEmitter","Component","ExpressionService","ViewEncapsulation","NotifyService","ViewChild","Output","Input","GSPElementObjectType","GSPElementDataType","http","BsModalService","InjectedEntity","Schema","Injectable","Injector","ApplicationRef","ComponentFactoryResolver","HttpClient","NgModule","CommonModule","DropDownsModule","ButtonModule","DropDownButtonModule","InputsModule","FormsModule","PopupModule","ComboListModule","ExpressionModule","TreeTableModule","InputGroupModule","NotifyModule","FDropdownDirectiveTypeModule","ModalModule"],"mappings":"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"}
