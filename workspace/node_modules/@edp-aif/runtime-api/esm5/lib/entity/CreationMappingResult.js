/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { MappingResult } from './MappingResult';
import { MappingAssociation } from './MappingAssociation';
import { BpmnModelJsonHelper } from '@edp-aif/common-api';
var CreationMappingResult = /** @class */ (function (_super) {
    tslib_1.__extends(CreationMappingResult, _super);
    function CreationMappingResult() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.associations = new Array();
        _this.entityData = null;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    CreationMappingResult.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.associations = new Array();
        this.entityData = null;
    };
    /**
     * @return {?}
     */
    CreationMappingResult.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "associations", this.associations);
        BpmnModelJsonHelper.SetAttributeValue(obj, "entityData", this.entityData);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    CreationMappingResult.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.associations = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "associations", MappingAssociation);
        this.entityData = BpmnModelJsonHelper.GetAttributeValue(obj, "entityData");
    };
    return CreationMappingResult;
}(MappingResult));
export { CreationMappingResult };
if (false) {
    /** @type {?} */
    CreationMappingResult.prototype.associations;
    /** @type {?} */
    CreationMappingResult.prototype.entityData;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3JlYXRpb25NYXBwaW5nUmVzdWx0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1haWYvcnVudGltZS1hcGkvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L0NyZWF0aW9uTWFwcGluZ1Jlc3VsdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNoRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMxRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUUxRDtJQUEyQyxpREFBYTtJQUF4RDtRQUFBLHFFQTBCQztRQXpCRyxrQkFBWSxHQUE4QixJQUFJLEtBQUssRUFBRSxDQUFDO1FBQ3RELGdCQUFVLEdBQU8sSUFBSSxDQUFDOztJQXdCMUIsQ0FBQzs7Ozs7SUF0QmEsbURBQW1COzs7O0lBQTdCO1FBQ0ksaUJBQU0sbUJBQW1CLFdBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksS0FBSyxFQUFFLENBQUM7UUFDaEMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7SUFDM0IsQ0FBQzs7OztJQUVNLG1EQUFtQjs7O0lBQTFCOztZQUNRLEdBQUcsR0FBRyxpQkFBTSxtQkFBbUIsV0FBRTtRQUVyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsY0FBYyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM5RSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsWUFBWSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUUxRSxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRU0sa0RBQWtCOzs7O0lBQXpCLFVBQTBCLEdBQU87UUFDN0IsaUJBQU0sa0JBQWtCLFlBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLFlBQVksR0FBRyxtQkFBbUIsQ0FBQyx1QkFBdUIsQ0FBQyxHQUFHLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixDQUFDLENBQUM7UUFDekcsSUFBSSxDQUFDLFVBQVUsR0FBRyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDL0UsQ0FBQztJQUNMLDRCQUFDO0FBQUQsQ0FBQyxBQTFCRCxDQUEyQyxhQUFhLEdBMEJ2RDs7OztJQXpCRyw2Q0FBc0Q7O0lBQ3RELDJDQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1hcHBpbmdSZXN1bHQgfSBmcm9tICcuL01hcHBpbmdSZXN1bHQnO1xyXG5pbXBvcnQgeyBNYXBwaW5nQXNzb2NpYXRpb24gfSBmcm9tICcuL01hcHBpbmdBc3NvY2lhdGlvbic7XHJcbmltcG9ydCB7IEJwbW5Nb2RlbEpzb25IZWxwZXIgfSBmcm9tICdAZWRwLWFpZi9jb21tb24tYXBpJztcclxuXHJcbmV4cG9ydCBjbGFzcyBDcmVhdGlvbk1hcHBpbmdSZXN1bHQgZXh0ZW5kcyBNYXBwaW5nUmVzdWx0IHtcclxuICAgIGFzc29jaWF0aW9uczogQXJyYXk8TWFwcGluZ0Fzc29jaWF0aW9uPiA9IG5ldyBBcnJheSgpO1xyXG4gICAgZW50aXR5RGF0YToge30gPSBudWxsO1xyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCkge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICAgICAgdGhpcy5hc3NvY2lhdGlvbnMgPSBuZXcgQXJyYXkoKTtcclxuICAgICAgICB0aGlzLmVudGl0eURhdGEgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IHt9IHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJhc3NvY2lhdGlvbnNcIiwgdGhpcy5hc3NvY2lhdGlvbnMpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImVudGl0eURhdGFcIiwgdGhpcy5lbnRpdHlEYXRhKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgTG9hZEZyb21Kc29uT2JqZWN0KG9iajoge30pOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy5hc3NvY2lhdGlvbnMgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNMaXN0KG9iaiwgXCJhc3NvY2lhdGlvbnNcIiwgTWFwcGluZ0Fzc29jaWF0aW9uKTtcclxuICAgICAgICB0aGlzLmVudGl0eURhdGEgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJlbnRpdHlEYXRhXCIpO1xyXG4gICAgfVxyXG59Il19