/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { RpcMappingResult } from './RpcMappingResult';
import { BpmnModelJsonHelper } from '@edp-aif/common-api';
import { MappingAssociation } from '../MappingAssociation';
var RpcCreationMappingResult = /** @class */ (function (_super) {
    tslib_1.__extends(RpcCreationMappingResult, _super);
    function RpcCreationMappingResult() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.associations = new Array();
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    RpcCreationMappingResult.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.associations = new Array();
    };
    /**
     * @return {?}
     */
    RpcCreationMappingResult.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "associations", this.associations);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    RpcCreationMappingResult.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.associations = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "associations", MappingAssociation);
    };
    return RpcCreationMappingResult;
}(RpcMappingResult));
export { RpcCreationMappingResult };
if (false) {
    /** @type {?} */
    RpcCreationMappingResult.prototype.associations;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUnBjQ3JlYXRpb25NYXBwaW5nUmVzdWx0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1haWYvcnVudGltZS1hcGkvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L3JwYy9ScGNDcmVhdGlvbk1hcHBpbmdSZXN1bHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUUzRDtJQUE4QyxvREFBZ0I7SUFBOUQ7UUFBQSxxRUFzQkM7UUFyQkcsa0JBQVksR0FBOEIsSUFBSSxLQUFLLEVBQUUsQ0FBQzs7SUFxQjFELENBQUM7Ozs7O0lBbkJhLHNEQUFtQjs7OztJQUE3QjtRQUNJLGlCQUFNLG1CQUFtQixXQUFFLENBQUM7UUFFNUIsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO0lBQ3BDLENBQUM7Ozs7SUFFTSxzREFBbUI7OztJQUExQjs7WUFDUSxHQUFHLEdBQUcsaUJBQU0sbUJBQW1CLFdBQUU7UUFFckMsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGNBQWMsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFFOUUsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVNLHFEQUFrQjs7OztJQUF6QixVQUEwQixHQUFPO1FBQzdCLGlCQUFNLGtCQUFrQixZQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxZQUFZLEdBQUcsbUJBQW1CLENBQUMsdUJBQXVCLENBQUMsR0FBRyxFQUFFLGNBQWMsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0lBQzdHLENBQUM7SUFDTCwrQkFBQztBQUFELENBQUMsQUF0QkQsQ0FBOEMsZ0JBQWdCLEdBc0I3RDs7OztJQXJCRyxnREFBc0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBScGNNYXBwaW5nUmVzdWx0IH0gZnJvbSAnLi9ScGNNYXBwaW5nUmVzdWx0JztcclxuaW1wb3J0IHsgQnBtbk1vZGVsSnNvbkhlbHBlciB9IGZyb20gJ0BlZHAtYWlmL2NvbW1vbi1hcGknO1xyXG5pbXBvcnQgeyBNYXBwaW5nQXNzb2NpYXRpb24gfSBmcm9tICcuLi9NYXBwaW5nQXNzb2NpYXRpb24nO1xyXG5cclxuZXhwb3J0IGNsYXNzIFJwY0NyZWF0aW9uTWFwcGluZ1Jlc3VsdCBleHRlbmRzIFJwY01hcHBpbmdSZXN1bHQge1xyXG4gICAgYXNzb2NpYXRpb25zOiBBcnJheTxNYXBwaW5nQXNzb2NpYXRpb24+ID0gbmV3IEFycmF5KCk7XHJcblxyXG4gICAgcHJvdGVjdGVkIFJlc2V0QmVmb3JlTG9hZEZyb20oKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuUmVzZXRCZWZvcmVMb2FkRnJvbSgpO1xyXG5cclxuICAgICAgICB0aGlzLmFzc29jaWF0aW9ucyA9IG5ldyBBcnJheSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IHt9IHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJhc3NvY2lhdGlvbnNcIiwgdGhpcy5hc3NvY2lhdGlvbnMpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLmFzc29jaWF0aW9ucyA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc0xpc3Qob2JqLCBcImFzc29jaWF0aW9uc1wiLCBNYXBwaW5nQXNzb2NpYXRpb24pO1xyXG4gICAgfVxyXG59Il19