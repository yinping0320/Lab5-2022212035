/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { JsonConvertableImpl, BpmnModelJsonHelper } from '@edp-aif/common-api';
import { MappingAssociation } from '../MappingAssociation';
var RpcWritebackRuleExecutorArgs = /** @class */ (function (_super) {
    tslib_1.__extends(RpcWritebackRuleExecutorArgs, _super);
    function RpcWritebackRuleExecutorArgs() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.sourceVoEntities = new Array();
        _this.associations = new Array();
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    RpcWritebackRuleExecutorArgs.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.writebackRuleId = null;
        this.sourceVoId = null;
        this.targetVoFuncSessionId = null;
        this.sourceVoEntities = new Array();
        this.associations = new Array();
    };
    /**
     * @return {?}
     */
    RpcWritebackRuleExecutorArgs.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "writebackRuleId", this.writebackRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoId", this.sourceVoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoFuncSessionId", this.targetVoFuncSessionId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoEntities", BpmnModelJsonHelper.StringListToJson(this.sourceVoEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "associations", this.associations);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    RpcWritebackRuleExecutorArgs.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.writebackRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "writebackRuleId");
        this.sourceVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoId");
        this.targetVoFuncSessionId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoFuncSessionId");
        this.sourceVoEntities = BpmnModelJsonHelper.StringListFromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoEntities"));
        this.associations = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "associations", MappingAssociation);
    };
    return RpcWritebackRuleExecutorArgs;
}(JsonConvertableImpl));
export { RpcWritebackRuleExecutorArgs };
if (false) {
    /** @type {?} */
    RpcWritebackRuleExecutorArgs.prototype.writebackRuleId;
    /** @type {?} */
    RpcWritebackRuleExecutorArgs.prototype.sourceVoId;
    /** @type {?} */
    RpcWritebackRuleExecutorArgs.prototype.sourceVoEntities;
    /** @type {?} */
    RpcWritebackRuleExecutorArgs.prototype.associations;
    /** @type {?} */
    RpcWritebackRuleExecutorArgs.prototype.targetVoFuncSessionId;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUnBjV3JpdGViYWNrUnVsZUV4ZWN1dG9yQXJncy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYWlmL3J1bnRpbWUtYXBpLyIsInNvdXJjZXMiOlsibGliL2VudGl0eS9ycGMvUnBjV3JpdGViYWNrUnVsZUV4ZWN1dG9yQXJncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQy9FLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRTNEO0lBQWtELHdEQUFtQjtJQUFyRTtRQUFBLHFFQXNDQztRQW5DRyxzQkFBZ0IsR0FBa0IsSUFBSSxLQUFLLEVBQUUsQ0FBQztRQUM5QyxrQkFBWSxHQUE4QixJQUFJLEtBQUssRUFBRSxDQUFDOztJQWtDMUQsQ0FBQzs7Ozs7SUEvQmEsMERBQW1COzs7O0lBQTdCO1FBQ0ksaUJBQU0sbUJBQW1CLFdBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztRQUM1QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUN2QixJQUFJLENBQUMscUJBQXFCLEdBQUcsSUFBSSxDQUFDO1FBQ2xDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztJQUNwQyxDQUFDOzs7O0lBRU0sMERBQW1COzs7SUFBMUI7O1lBQ1EsR0FBRyxHQUFHLGlCQUFNLG1CQUFtQixXQUFFO1FBRXJDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDcEYsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFlBQVksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDMUUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLHVCQUF1QixFQUFFLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1FBQ2hHLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxrQkFBa0IsRUFBRSxtQkFBbUIsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO1FBQzVILG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxjQUFjLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBRTlFLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFTSx5REFBa0I7Ozs7SUFBekIsVUFBMEIsR0FBTztRQUM3QixpQkFBTSxrQkFBa0IsWUFBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMsZUFBZSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO1FBQzdGLElBQUksQ0FBQyxVQUFVLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ25GLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztRQUN6RyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsbUJBQW1CLENBQUMsa0JBQWtCLENBQUMsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGtCQUFrQixDQUFDLENBQUMsQ0FBQztRQUN2SSxJQUFJLENBQUMsWUFBWSxHQUFHLG1CQUFtQixDQUFDLHVCQUF1QixDQUFDLEdBQUcsRUFBRSxjQUFjLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztJQUM3RyxDQUFDO0lBQ0wsbUNBQUM7QUFBRCxDQUFDLEFBdENELENBQWtELG1CQUFtQixHQXNDcEU7Ozs7SUFyQ0csdURBQXdCOztJQUN4QixrREFBbUI7O0lBQ25CLHdEQUE4Qzs7SUFDOUMsb0RBQXNEOztJQUN0RCw2REFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBKc29uQ29udmVydGFibGVJbXBsLCBCcG1uTW9kZWxKc29uSGVscGVyIH0gZnJvbSAnQGVkcC1haWYvY29tbW9uLWFwaSc7XHJcbmltcG9ydCB7IE1hcHBpbmdBc3NvY2lhdGlvbiB9IGZyb20gJy4uL01hcHBpbmdBc3NvY2lhdGlvbic7XHJcblxyXG5leHBvcnQgY2xhc3MgUnBjV3JpdGViYWNrUnVsZUV4ZWN1dG9yQXJncyBleHRlbmRzIEpzb25Db252ZXJ0YWJsZUltcGwge1xyXG4gICAgd3JpdGViYWNrUnVsZUlkOiBzdHJpbmc7XHJcbiAgICBzb3VyY2VWb0lkOiBzdHJpbmc7XHJcbiAgICBzb3VyY2VWb0VudGl0aWVzOiBBcnJheTxzdHJpbmc+ID0gbmV3IEFycmF5KCk7XHJcbiAgICBhc3NvY2lhdGlvbnM6IEFycmF5PE1hcHBpbmdBc3NvY2lhdGlvbj4gPSBuZXcgQXJyYXkoKTtcclxuICAgIHRhcmdldFZvRnVuY1Nlc3Npb25JZDogc3RyaW5nO1xyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICAgICAgdGhpcy53cml0ZWJhY2tSdWxlSWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuc291cmNlVm9JZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy50YXJnZXRWb0Z1bmNTZXNzaW9uSWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuc291cmNlVm9FbnRpdGllcyA9IG5ldyBBcnJheSgpO1xyXG4gICAgICAgIHRoaXMuYXNzb2NpYXRpb25zID0gbmV3IEFycmF5KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENvbnZlcnRUb0pzb25PYmplY3QoKToge30ge1xyXG4gICAgICAgIGxldCBvYmogPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcblxyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIndyaXRlYmFja1J1bGVJZFwiLCB0aGlzLndyaXRlYmFja1J1bGVJZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwic291cmNlVm9JZFwiLCB0aGlzLnNvdXJjZVZvSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInRhcmdldFZvRnVuY1Nlc3Npb25JZFwiLCB0aGlzLnRhcmdldFZvRnVuY1Nlc3Npb25JZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwic291cmNlVm9FbnRpdGllc1wiLCBCcG1uTW9kZWxKc29uSGVscGVyLlN0cmluZ0xpc3RUb0pzb24odGhpcy5zb3VyY2VWb0VudGl0aWVzKSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiYXNzb2NpYXRpb25zXCIsIHRoaXMuYXNzb2NpYXRpb25zKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgTG9hZEZyb21Kc29uT2JqZWN0KG9iajoge30pOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy53cml0ZWJhY2tSdWxlSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcIndyaXRlYmFja1J1bGVJZFwiKTtcclxuICAgICAgICB0aGlzLnNvdXJjZVZvSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInNvdXJjZVZvSWRcIik7XHJcbiAgICAgICAgdGhpcy50YXJnZXRWb0Z1bmNTZXNzaW9uSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInRhcmdldFZvRnVuY1Nlc3Npb25JZFwiKTtcclxuICAgICAgICB0aGlzLnNvdXJjZVZvRW50aXRpZXMgPSBCcG1uTW9kZWxKc29uSGVscGVyLlN0cmluZ0xpc3RGcm9tSnNvbihCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInNvdXJjZVZvRW50aXRpZXNcIikpO1xyXG4gICAgICAgIHRoaXMuYXNzb2NpYXRpb25zID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzTGlzdChvYmosIFwiYXNzb2NpYXRpb25zXCIsIE1hcHBpbmdBc3NvY2lhdGlvbik7XHJcbiAgICB9XHJcbn0iXX0=