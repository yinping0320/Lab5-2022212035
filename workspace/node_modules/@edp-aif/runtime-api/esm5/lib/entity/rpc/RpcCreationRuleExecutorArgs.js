/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { JsonConvertableImpl, BpmnModelJsonHelper } from '@edp-aif/common-api';
var RpcCreationRuleExecutorArgs = /** @class */ (function (_super) {
    tslib_1.__extends(RpcCreationRuleExecutorArgs, _super);
    function RpcCreationRuleExecutorArgs() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.sourceVoEntities = new Array();
        _this.targetVoProxyEntities = new Array();
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    RpcCreationRuleExecutorArgs.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.sourceVoEntities = new Array();
        this.creationRuleId = null;
        this.bizFlowchartId = null;
        this.sourceVoId = null;
        this.targetVoProxyId = null;
        this.targetVoProxyEntities = new Array();
    };
    /**
     * @return {?}
     */
    RpcCreationRuleExecutorArgs.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationRuleId", this.creationRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoId", this.sourceVoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizFlowchartId", this.bizFlowchartId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoEntities", BpmnModelJsonHelper.StringListToJson(this.sourceVoEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyId", this.targetVoProxyId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyEntities", BpmnModelJsonHelper.StringListToJson(this.targetVoProxyEntities));
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    RpcCreationRuleExecutorArgs.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.creationRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationRuleId");
        this.sourceVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoId");
        this.bizFlowchartId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizFlowchartId");
        this.sourceVoEntities = BpmnModelJsonHelper.StringListFromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoEntities"));
        this.targetVoProxyId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyId");
        this.targetVoProxyEntities = BpmnModelJsonHelper.StringListFromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyEntities"));
    };
    return RpcCreationRuleExecutorArgs;
}(JsonConvertableImpl));
export { RpcCreationRuleExecutorArgs };
if (false) {
    /** @type {?} */
    RpcCreationRuleExecutorArgs.prototype.creationRuleId;
    /** @type {?} */
    RpcCreationRuleExecutorArgs.prototype.sourceVoId;
    /** @type {?} */
    RpcCreationRuleExecutorArgs.prototype.bizFlowchartId;
    /** @type {?} */
    RpcCreationRuleExecutorArgs.prototype.sourceVoEntities;
    /** @type {?} */
    RpcCreationRuleExecutorArgs.prototype.targetVoProxyId;
    /** @type {?} */
    RpcCreationRuleExecutorArgs.prototype.targetVoProxyEntities;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUnBjQ3JlYXRpb25SdWxlRXhlY3V0b3JBcmdzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1haWYvcnVudGltZS1hcGkvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L3JwYy9ScGNDcmVhdGlvblJ1bGVFeGVjdXRvckFyZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUUvRTtJQUFpRCx1REFBbUI7SUFBcEU7UUFBQSxxRUEyQ0M7UUF2Q0csc0JBQWdCLEdBQWtCLElBQUksS0FBSyxFQUFFLENBQUM7UUFFOUMsMkJBQXFCLEdBQWtCLElBQUksS0FBSyxFQUFFLENBQUM7O0lBcUN2RCxDQUFDOzs7OztJQW5DYSx5REFBbUI7Ozs7SUFBN0I7UUFDSSxpQkFBTSxtQkFBbUIsV0FBRSxDQUFDO1FBRTVCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO1FBQzNCLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO1FBQzNCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO1FBQzVCLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO0lBQzdDLENBQUM7Ozs7SUFFTSx5REFBbUI7OztJQUExQjs7WUFDUSxHQUFHLEdBQUcsaUJBQU0sbUJBQW1CLFdBQUU7UUFFckMsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGdCQUFnQixFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUNsRixtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsWUFBWSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUMxRSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ2xGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxrQkFBa0IsRUFBRSxtQkFBbUIsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO1FBQzVILG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDcEYsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLHVCQUF1QixFQUFFLG1CQUFtQixDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUM7UUFFdEksT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVNLHdEQUFrQjs7OztJQUF6QixVQUEwQixHQUFPO1FBQzdCLGlCQUFNLGtCQUFrQixZQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxjQUFjLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFDM0YsSUFBSSxDQUFDLFVBQVUsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFDbkYsSUFBSSxDQUFDLGNBQWMsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztRQUMzRixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsbUJBQW1CLENBQUMsa0JBQWtCLENBQUMsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGtCQUFrQixDQUFDLENBQUMsQ0FBQztRQUV2SSxJQUFJLENBQUMsZUFBZSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO1FBQzdGLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxtQkFBbUIsQ0FBQyxrQkFBa0IsQ0FBQyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsdUJBQXVCLENBQUMsQ0FBQyxDQUFDO0lBQ3JKLENBQUM7SUFDTCxrQ0FBQztBQUFELENBQUMsQUEzQ0QsQ0FBaUQsbUJBQW1CLEdBMkNuRTs7OztJQTFDRyxxREFBdUI7O0lBQ3ZCLGlEQUFtQjs7SUFDbkIscURBQXVCOztJQUN2Qix1REFBOEM7O0lBQzlDLHNEQUF3Qjs7SUFDeEIsNERBQW1EIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSnNvbkNvbnZlcnRhYmxlSW1wbCwgQnBtbk1vZGVsSnNvbkhlbHBlciB9IGZyb20gJ0BlZHAtYWlmL2NvbW1vbi1hcGknO1xyXG5cclxuZXhwb3J0IGNsYXNzIFJwY0NyZWF0aW9uUnVsZUV4ZWN1dG9yQXJncyBleHRlbmRzIEpzb25Db252ZXJ0YWJsZUltcGwge1xyXG4gICAgY3JlYXRpb25SdWxlSWQ6IHN0cmluZztcclxuICAgIHNvdXJjZVZvSWQ6IHN0cmluZztcclxuICAgIGJpekZsb3djaGFydElkOiBzdHJpbmc7XHJcbiAgICBzb3VyY2VWb0VudGl0aWVzOiBBcnJheTxzdHJpbmc+ID0gbmV3IEFycmF5KCk7XHJcbiAgICB0YXJnZXRWb1Byb3h5SWQ6IHN0cmluZztcclxuICAgIHRhcmdldFZvUHJveHlFbnRpdGllczogQXJyYXk8c3RyaW5nPiA9IG5ldyBBcnJheSgpO1xyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICAgICAgdGhpcy5zb3VyY2VWb0VudGl0aWVzID0gbmV3IEFycmF5KCk7XHJcbiAgICAgICAgdGhpcy5jcmVhdGlvblJ1bGVJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5iaXpGbG93Y2hhcnRJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5zb3VyY2VWb0lkID0gbnVsbDtcclxuICAgICAgICB0aGlzLnRhcmdldFZvUHJveHlJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy50YXJnZXRWb1Byb3h5RW50aXRpZXMgPSBuZXcgQXJyYXkoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ29udmVydFRvSnNvbk9iamVjdCgpOiB7fSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuXHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiY3JlYXRpb25SdWxlSWRcIiwgdGhpcy5jcmVhdGlvblJ1bGVJZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwic291cmNlVm9JZFwiLCB0aGlzLnNvdXJjZVZvSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImJpekZsb3djaGFydElkXCIsIHRoaXMuYml6Rmxvd2NoYXJ0SWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInNvdXJjZVZvRW50aXRpZXNcIiwgQnBtbk1vZGVsSnNvbkhlbHBlci5TdHJpbmdMaXN0VG9Kc29uKHRoaXMuc291cmNlVm9FbnRpdGllcykpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInRhcmdldFZvUHJveHlJZFwiLCB0aGlzLnRhcmdldFZvUHJveHlJZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwidGFyZ2V0Vm9Qcm94eUVudGl0aWVzXCIsIEJwbW5Nb2RlbEpzb25IZWxwZXIuU3RyaW5nTGlzdFRvSnNvbih0aGlzLnRhcmdldFZvUHJveHlFbnRpdGllcykpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLmNyZWF0aW9uUnVsZUlkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJjcmVhdGlvblJ1bGVJZFwiKTtcclxuICAgICAgICB0aGlzLnNvdXJjZVZvSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInNvdXJjZVZvSWRcIik7XHJcbiAgICAgICAgdGhpcy5iaXpGbG93Y2hhcnRJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiYml6Rmxvd2NoYXJ0SWRcIik7XHJcbiAgICAgICAgdGhpcy5zb3VyY2VWb0VudGl0aWVzID0gQnBtbk1vZGVsSnNvbkhlbHBlci5TdHJpbmdMaXN0RnJvbUpzb24oQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJzb3VyY2VWb0VudGl0aWVzXCIpKTtcclxuXHJcbiAgICAgICAgdGhpcy50YXJnZXRWb1Byb3h5SWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInRhcmdldFZvUHJveHlJZFwiKTtcclxuICAgICAgICB0aGlzLnRhcmdldFZvUHJveHlFbnRpdGllcyA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuU3RyaW5nTGlzdEZyb21Kc29uKEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwidGFyZ2V0Vm9Qcm94eUVudGl0aWVzXCIpKTtcclxuICAgIH1cclxufSJdfQ==