/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { JsonConvertableImpl, BpmnModelJsonHelper } from '@edp-aif/common-api';
import { RpcCreationMappingResult } from './RpcCreationMappingResult';
export class RpcCreationRuleExecutorResult extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.mappingResults = new Array();
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.creationRuleId = null;
        this.creationRuleInstanceId = null;
        this.bizFlowchartId = null;
        this.mappingResults = new Array();
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationRuleId", this.creationRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationRuleInstanceId", this.creationRuleInstanceId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizFlowchartId", this.bizFlowchartId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingResults", this.mappingResults);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.creationRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationRuleId");
        this.creationRuleInstanceId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationRuleInstanceId");
        this.bizFlowchartId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizFlowchartId");
        this.mappingResults = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "mappingResults", RpcCreationMappingResult);
    }
}
if (false) {
    /** @type {?} */
    RpcCreationRuleExecutorResult.prototype.creationRuleId;
    /** @type {?} */
    RpcCreationRuleExecutorResult.prototype.creationRuleInstanceId;
    /** @type {?} */
    RpcCreationRuleExecutorResult.prototype.bizFlowchartId;
    /** @type {?} */
    RpcCreationRuleExecutorResult.prototype.mappingResults;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUnBjQ3JlYXRpb25SdWxlRXhlY3V0b3JSZXN1bHQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWFpZi9ydW50aW1lLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvcnBjL1JwY0NyZWF0aW9uUnVsZUV4ZWN1dG9yUmVzdWx0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUV0RSxNQUFNLE9BQU8sNkJBQThCLFNBQVEsbUJBQW1CO0lBQXRFOztRQUlJLG1CQUFjLEdBQW9DLElBQUksS0FBSyxFQUFFLENBQUM7SUE4QmxFLENBQUM7Ozs7O0lBNUJhLG1CQUFtQjtRQUN6QixLQUFLLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztRQUMzQixJQUFJLENBQUMsc0JBQXNCLEdBQUcsSUFBSSxDQUFDO1FBQ25DLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO1FBQzNCLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztJQUN0QyxDQUFDOzs7O0lBRU0sbUJBQW1COztZQUNsQixHQUFHLEdBQUcsS0FBSyxDQUFDLG1CQUFtQixFQUFFO1FBRXJDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDbEYsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLHdCQUF3QixFQUFFLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1FBQ2xHLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDbEYsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGdCQUFnQixFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUVsRixPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRU0sa0JBQWtCLENBQUMsR0FBTztRQUM3QixLQUFLLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLGNBQWMsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztRQUMzRixJQUFJLENBQUMsc0JBQXNCLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLHdCQUF3QixDQUFDLENBQUM7UUFDM0csSUFBSSxDQUFDLGNBQWMsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztRQUMzRixJQUFJLENBQUMsY0FBYyxHQUFHLG1CQUFtQixDQUFDLHVCQUF1QixDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSx3QkFBd0IsQ0FBQyxDQUFDO0lBQ3ZILENBQUM7Q0FDSjs7O0lBakNHLHVEQUF1Qjs7SUFDdkIsK0RBQStCOztJQUMvQix1REFBdUI7O0lBQ3ZCLHVEQUE4RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEpzb25Db252ZXJ0YWJsZUltcGwsIEJwbW5Nb2RlbEpzb25IZWxwZXIgfSBmcm9tICdAZWRwLWFpZi9jb21tb24tYXBpJztcclxuaW1wb3J0IHsgUnBjQ3JlYXRpb25NYXBwaW5nUmVzdWx0IH0gZnJvbSAnLi9ScGNDcmVhdGlvbk1hcHBpbmdSZXN1bHQnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFJwY0NyZWF0aW9uUnVsZUV4ZWN1dG9yUmVzdWx0IGV4dGVuZHMgSnNvbkNvbnZlcnRhYmxlSW1wbCB7XHJcbiAgICBjcmVhdGlvblJ1bGVJZDogc3RyaW5nO1xyXG4gICAgY3JlYXRpb25SdWxlSW5zdGFuY2VJZDogc3RyaW5nO1xyXG4gICAgYml6Rmxvd2NoYXJ0SWQ6IHN0cmluZztcclxuICAgIG1hcHBpbmdSZXN1bHRzOiBBcnJheTxScGNDcmVhdGlvbk1hcHBpbmdSZXN1bHQ+ID0gbmV3IEFycmF5KCk7XHJcblxyXG4gICAgcHJvdGVjdGVkIFJlc2V0QmVmb3JlTG9hZEZyb20oKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuUmVzZXRCZWZvcmVMb2FkRnJvbSgpO1xyXG5cclxuICAgICAgICB0aGlzLmNyZWF0aW9uUnVsZUlkID0gbnVsbDtcclxuICAgICAgICB0aGlzLmNyZWF0aW9uUnVsZUluc3RhbmNlSWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuYml6Rmxvd2NoYXJ0SWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMubWFwcGluZ1Jlc3VsdHMgPSBuZXcgQXJyYXkoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ29udmVydFRvSnNvbk9iamVjdCgpOiB7fSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuXHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiY3JlYXRpb25SdWxlSWRcIiwgdGhpcy5jcmVhdGlvblJ1bGVJZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiY3JlYXRpb25SdWxlSW5zdGFuY2VJZFwiLCB0aGlzLmNyZWF0aW9uUnVsZUluc3RhbmNlSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImJpekZsb3djaGFydElkXCIsIHRoaXMuYml6Rmxvd2NoYXJ0SWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIm1hcHBpbmdSZXN1bHRzXCIsIHRoaXMubWFwcGluZ1Jlc3VsdHMpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLmNyZWF0aW9uUnVsZUlkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJjcmVhdGlvblJ1bGVJZFwiKTtcclxuICAgICAgICB0aGlzLmNyZWF0aW9uUnVsZUluc3RhbmNlSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImNyZWF0aW9uUnVsZUluc3RhbmNlSWRcIik7XHJcbiAgICAgICAgdGhpcy5iaXpGbG93Y2hhcnRJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiYml6Rmxvd2NoYXJ0SWRcIik7XHJcbiAgICAgICAgdGhpcy5tYXBwaW5nUmVzdWx0cyA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc0xpc3Qob2JqLCBcIm1hcHBpbmdSZXN1bHRzXCIsIFJwY0NyZWF0aW9uTWFwcGluZ1Jlc3VsdCk7XHJcbiAgICB9XHJcbn0iXX0=