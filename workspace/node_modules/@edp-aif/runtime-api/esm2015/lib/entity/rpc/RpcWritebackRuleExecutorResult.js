/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { JsonConvertableImpl, BpmnModelJsonHelper } from '@edp-aif/common-api';
import { RpcWritebackMappingResult } from './RpcWritebackMappingResult';
export class RpcWritebackRuleExecutorResult extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.mappingResults = new Array();
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.mappingResults = new Array();
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingResults", this.mappingResults);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.mappingResults = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "mappingResults", RpcWritebackMappingResult);
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    RpcWritebackRuleExecutorResult.prototype.mappingResults;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUnBjV3JpdGViYWNrUnVsZUV4ZWN1dG9yUmVzdWx0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1haWYvcnVudGltZS1hcGkvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L3JwYy9ScGNXcml0ZWJhY2tSdWxlRXhlY3V0b3JSZXN1bHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQy9FLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBRXhFLE1BQU0sT0FBTyw4QkFBK0IsU0FBUSxtQkFBbUI7SUFBdkU7O1FBQ1ksbUJBQWMsR0FBcUMsSUFBSSxLQUFLLEVBQUUsQ0FBQztJQXFCM0UsQ0FBQzs7Ozs7SUFuQmEsbUJBQW1CO1FBQ3pCLEtBQUssQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBRTVCLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztJQUN0QyxDQUFDOzs7O0lBRU0sbUJBQW1COztZQUNsQixHQUFHLEdBQUcsS0FBSyxDQUFDLG1CQUFtQixFQUFFO1FBRXJDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFFbEYsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVNLGtCQUFrQixDQUFDLEdBQU87UUFDN0IsS0FBSyxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxjQUFjLEdBQUcsbUJBQW1CLENBQUMsdUJBQXVCLENBQUMsR0FBRyxFQUFFLGdCQUFnQixFQUFFLHlCQUF5QixDQUFDLENBQUM7SUFDeEgsQ0FBQztDQUNKOzs7Ozs7SUFyQkcsd0RBQXVFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSnNvbkNvbnZlcnRhYmxlSW1wbCwgQnBtbk1vZGVsSnNvbkhlbHBlciB9IGZyb20gJ0BlZHAtYWlmL2NvbW1vbi1hcGknO1xyXG5pbXBvcnQgeyBScGNXcml0ZWJhY2tNYXBwaW5nUmVzdWx0IH0gZnJvbSAnLi9ScGNXcml0ZWJhY2tNYXBwaW5nUmVzdWx0JztcclxuXHJcbmV4cG9ydCBjbGFzcyBScGNXcml0ZWJhY2tSdWxlRXhlY3V0b3JSZXN1bHQgZXh0ZW5kcyBKc29uQ29udmVydGFibGVJbXBsIHtcclxuICAgIHByaXZhdGUgbWFwcGluZ1Jlc3VsdHM6IEFycmF5PFJwY1dyaXRlYmFja01hcHBpbmdSZXN1bHQ+ID0gbmV3IEFycmF5KCk7XHJcblxyXG4gICAgcHJvdGVjdGVkIFJlc2V0QmVmb3JlTG9hZEZyb20oKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuUmVzZXRCZWZvcmVMb2FkRnJvbSgpO1xyXG5cclxuICAgICAgICB0aGlzLm1hcHBpbmdSZXN1bHRzID0gbmV3IEFycmF5KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENvbnZlcnRUb0pzb25PYmplY3QoKToge30ge1xyXG4gICAgICAgIGxldCBvYmogPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcblxyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIm1hcHBpbmdSZXN1bHRzXCIsIHRoaXMubWFwcGluZ1Jlc3VsdHMpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLm1hcHBpbmdSZXN1bHRzID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzTGlzdChvYmosIFwibWFwcGluZ1Jlc3VsdHNcIiwgUnBjV3JpdGViYWNrTWFwcGluZ1Jlc3VsdCk7XHJcbiAgICB9XHJcbn0iXX0=