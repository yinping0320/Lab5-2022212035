/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule, SystemJsNgModuleLoader, NgModuleFactoryLoader, LOCALE_ID } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';
import { ModalModule } from '@farris/ui-modal';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { ReferSelectorComponent } from './components/refer-selector/refer-selector.component';
import { PushSelectorComponent } from './components/push-selector/push-selector.component';
import { AifRuntimeModuleConfig } from './config/aif-runtime-module.config';
import { SourceDataSelectorComponent } from './components/source-data-selector/source-data-selector.component';
import { TreeTableModule } from '@farris/ui-treetable';
import { NotifyModule } from '@farris/ui-notify';
import { MessagerModule } from '@farris/ui-messager';
import { AifLocalePipe } from './pipe/locale.pipe';
const ɵ0 = localStorage.getItem('languageCode') || 'zh-CHS', ɵ1 = {};
/**
 * @deprecated please use \@edp-bif/runtime-api
 */
export class AifRuntimeModule {
    /**
     * @param {?=} config
     * @return {?}
     */
    static forRoot(config) {
        return {
            "ngModule": AifRuntimeModule,
            "providers": [
                { provide: AifRuntimeModuleConfig, useValue: config || {} },
            ]
        };
    }
}
AifRuntimeModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    ReactiveFormsModule,
                    HttpClientModule,
                    ModalModule.forRoot(),
                    NotifyModule.forRoot(),
                    MessagerModule.forRoot(),
                    FarrisDialogModule.forRoot(),
                    TreeTableModule,
                ],
                providers: [
                    { provide: LOCALE_ID, useValue: ɵ0 },
                    { provide: AifRuntimeModuleConfig, useValue: ɵ1 },
                    { provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader },
                ],
                declarations: [
                    ReferSelectorComponent,
                    PushSelectorComponent,
                    SourceDataSelectorComponent,
                    AifLocalePipe,
                ],
                exports: [
                    ReferSelectorComponent,
                    PushSelectorComponent,
                    SourceDataSelectorComponent,
                ],
                entryComponents: [
                    ReferSelectorComponent,
                    PushSelectorComponent,
                    SourceDataSelectorComponent,
                ]
            },] }
];
export { ɵ0, ɵ1 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWlmLXJ1bnRpbWUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1haWYvcnVudGltZS1hcGkvIiwic291cmNlcyI6WyJsaWIvYWlmLW1hbnVhbC1jcmVhdGlvbi9haWYtcnVudGltZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLHNCQUFzQixFQUFFLHFCQUFxQixFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4SCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUMvQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQztBQUM5RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUMzRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUM1RSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxrRUFBa0UsQ0FBQztBQUMvRyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDdkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7V0FrQlgsWUFBWSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSxRQUFRLE9BQ25DLEVBQUU7Ozs7QUFvQnZELE1BQU0sT0FBTyxnQkFBZ0I7Ozs7O0lBQ2xCLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBK0I7UUFDakQsT0FBTztZQUNILFVBQVUsRUFBRSxnQkFBZ0I7WUFDNUIsV0FBVyxFQUFFO2dCQUNULEVBQUUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLFFBQVEsRUFBRSxNQUFNLElBQUksRUFBRSxFQUFFO2FBQzlEO1NBQ0osQ0FBQztJQUNOLENBQUM7OztZQTFDSixRQUFRLFNBQUM7Z0JBQ04sT0FBTyxFQUFFO29CQUNMLFlBQVk7b0JBQ1osV0FBVztvQkFDWCxtQkFBbUI7b0JBQ25CLGdCQUFnQjtvQkFDaEIsV0FBVyxDQUFDLE9BQU8sRUFBRTtvQkFDckIsWUFBWSxDQUFDLE9BQU8sRUFBRTtvQkFDdEIsY0FBYyxDQUFDLE9BQU8sRUFBRTtvQkFDeEIsa0JBQWtCLENBQUMsT0FBTyxFQUFFO29CQUM1QixlQUFlO2lCQUNsQjtnQkFDRCxTQUFTLEVBQUU7b0JBQ1AsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsSUFBa0QsRUFBRTtvQkFDbEYsRUFBRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsUUFBUSxJQUFJLEVBQUU7b0JBQ2pELEVBQUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLFFBQVEsRUFBRSxzQkFBc0IsRUFBRTtpQkFDdkU7Z0JBQ0QsWUFBWSxFQUFFO29CQUNWLHNCQUFzQjtvQkFDdEIscUJBQXFCO29CQUNyQiwyQkFBMkI7b0JBQzNCLGFBQWE7aUJBQ2hCO2dCQUNELE9BQU8sRUFBRTtvQkFDTCxzQkFBc0I7b0JBQ3RCLHFCQUFxQjtvQkFDckIsMkJBQTJCO2lCQUM5QjtnQkFDRCxlQUFlLEVBQUU7b0JBQ2Isc0JBQXNCO29CQUN0QixxQkFBcUI7b0JBQ3JCLDJCQUEyQjtpQkFDOUI7YUFDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBTeXN0ZW1Kc05nTW9kdWxlTG9hZGVyLCBOZ01vZHVsZUZhY3RvcnlMb2FkZXIsIExPQ0FMRV9JRCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgTW9kYWxNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW1vZGFsJztcclxuaW1wb3J0IHsgRmFycmlzRGlhbG9nTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kaWFsb2cnO1xyXG5pbXBvcnQgeyBSZWZlclNlbGVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3JlZmVyLXNlbGVjdG9yL3JlZmVyLXNlbGVjdG9yLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFB1c2hTZWxlY3RvckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9wdXNoLXNlbGVjdG9yL3B1c2gtc2VsZWN0b3IuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQWlmUnVudGltZU1vZHVsZUNvbmZpZyB9IGZyb20gJy4vY29uZmlnL2FpZi1ydW50aW1lLW1vZHVsZS5jb25maWcnO1xyXG5pbXBvcnQgeyBTb3VyY2VEYXRhU2VsZWN0b3JDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvc291cmNlLWRhdGEtc2VsZWN0b3Ivc291cmNlLWRhdGEtc2VsZWN0b3IuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVHJlZVRhYmxlTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS10cmVldGFibGUnO1xyXG5pbXBvcnQgeyBOb3RpZnlNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW5vdGlmeSc7XHJcbmltcG9ydCB7IE1lc3NhZ2VyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1tZXNzYWdlcic7XHJcbmltcG9ydCB7IEFpZkxvY2FsZVBpcGUgfSBmcm9tICcuL3BpcGUvbG9jYWxlLnBpcGUnO1xyXG5cclxuLyoqXHJcbiAqIEBkZXByZWNhdGVkIHBsZWFzZSB1c2UgQGVkcC1iaWYvcnVudGltZS1hcGkgXHJcbiAqL1xyXG5ATmdNb2R1bGUoe1xyXG4gICAgaW1wb3J0czogW1xyXG4gICAgICAgIENvbW1vbk1vZHVsZSxcclxuICAgICAgICBGb3Jtc01vZHVsZSxcclxuICAgICAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxyXG4gICAgICAgIEh0dHBDbGllbnRNb2R1bGUsXHJcbiAgICAgICAgTW9kYWxNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIE5vdGlmeU1vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgTWVzc2FnZXJNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIEZhcnJpc0RpYWxvZ01vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgVHJlZVRhYmxlTW9kdWxlLFxyXG4gICAgXSxcclxuICAgIHByb3ZpZGVyczogW1xyXG4gICAgICAgIHsgcHJvdmlkZTogTE9DQUxFX0lELCB1c2VWYWx1ZTogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2xhbmd1YWdlQ29kZScpIHx8ICd6aC1DSFMnIH0sXHJcbiAgICAgICAgeyBwcm92aWRlOiBBaWZSdW50aW1lTW9kdWxlQ29uZmlnLCB1c2VWYWx1ZToge30gfSxcclxuICAgICAgICB7IHByb3ZpZGU6IE5nTW9kdWxlRmFjdG9yeUxvYWRlciwgdXNlQ2xhc3M6IFN5c3RlbUpzTmdNb2R1bGVMb2FkZXIgfSxcclxuICAgIF0sXHJcbiAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICBSZWZlclNlbGVjdG9yQ29tcG9uZW50LFxyXG4gICAgICAgIFB1c2hTZWxlY3RvckNvbXBvbmVudCxcclxuICAgICAgICBTb3VyY2VEYXRhU2VsZWN0b3JDb21wb25lbnQsXHJcbiAgICAgICAgQWlmTG9jYWxlUGlwZSxcclxuICAgIF0sXHJcbiAgICBleHBvcnRzOiBbXHJcbiAgICAgICAgUmVmZXJTZWxlY3RvckNvbXBvbmVudCxcclxuICAgICAgICBQdXNoU2VsZWN0b3JDb21wb25lbnQsXHJcbiAgICAgICAgU291cmNlRGF0YVNlbGVjdG9yQ29tcG9uZW50LFxyXG4gICAgXSxcclxuICAgIGVudHJ5Q29tcG9uZW50czogW1xyXG4gICAgICAgIFJlZmVyU2VsZWN0b3JDb21wb25lbnQsXHJcbiAgICAgICAgUHVzaFNlbGVjdG9yQ29tcG9uZW50LFxyXG4gICAgICAgIFNvdXJjZURhdGFTZWxlY3RvckNvbXBvbmVudCxcclxuICAgIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEFpZlJ1bnRpbWVNb2R1bGUge1xyXG4gICAgcHVibGljIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEFpZlJ1bnRpbWVNb2R1bGVDb25maWcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBcIm5nTW9kdWxlXCI6IEFpZlJ1bnRpbWVNb2R1bGUsXHJcbiAgICAgICAgICAgIFwicHJvdmlkZXJzXCI6IFtcclxuICAgICAgICAgICAgICAgIHsgcHJvdmlkZTogQWlmUnVudGltZU1vZHVsZUNvbmZpZywgdXNlVmFsdWU6IGNvbmZpZyB8fCB7fSB9LFxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufSJdfQ==