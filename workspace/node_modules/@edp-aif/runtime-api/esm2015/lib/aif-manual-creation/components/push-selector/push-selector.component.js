/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Inject, LOCALE_ID } from '@angular/core';
import { Subject } from 'rxjs';
import { SELECTOR_ARGS_INJECTOR } from '../../config/selector-args-injector.config';
import { FormGetCreationRuleEntityExArgs } from '../../form-args';
import { AifDataService } from '../../service/aif-data.service';
/**
 * @deprecated please use \@edp-bif/runtime-api
 */
export class PushSelectorComponent {
    /**
     * @param {?} args
     * @param {?} dataService
     * @param {?} localeId
     */
    constructor(args, dataService, localeId) {
        this.dataService = dataService;
        //目标VoId列表
        this.targetVoIdList = [];
        //目标VoId与目标VoName映射
        this.targetVoNameDict = {};
        //目标VoId与相应的生单规则列表映射
        this.creationRuleDict = {};
        this.bsModalRef4AifSelector = null;
        this.subject4CreationRule = new Subject();
        this.clickOk4AifSelector = (/**
         * @return {?}
         */
        () => {
            this.subject4CreationRule.next(this.selectedCreationRule);
            this.subject4CreationRule.complete();
            this.bsModalRef4AifSelector.close();
        });
        this.clickClose4AifSelector = (/**
         * @return {?}
         */
        () => {
            this.bsModalRef4AifSelector.close();
        });
        this.args = new FormGetCreationRuleEntityExArgs();
        this.args.LoadFromJsonObject(args);
    }
    /**
     * @return {?}
     */
    get selectedTargetVoId() {
        return this._selectedTargetVoId;
    }
    /**
     * @param {?} targetVoId
     * @return {?}
     */
    set selectedTargetVoId(targetVoId) {
        this._selectedTargetVoId = targetVoId;
        if (targetVoId != null) {
            this.selectedCreationRule = this.creationRuleDict[this._selectedTargetVoId][0];
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.loadItems();
    }
    /**
     * @private
     * @return {?}
     */
    loadItems() {
        /** @type {?} */
        let list$ = null;
        if (this.args.targetVoId == null) {
            if (this.args.bizFlowchartId == null) {
                list$ = this.dataService.getSlimCreationRulesBySourceVoId(this.args.sourceVoId);
            }
            else {
                list$ = this.dataService.getSlimCreationRulesBySourceVoIdAndFlowchartId(this.args.sourceVoId, this.args.bizFlowchartId);
            }
        }
        else {
            if (this.args.bizFlowchartId == null) {
                list$ = this.dataService.getSlimCreationRulesBySourceVoIdAndTargetVoId(this.args.sourceVoId, this.args.targetVoId);
            }
            else {
                list$ = this.dataService.getSlimCreationRulesBySourceVoIdAndTargetVoIdAndFlowchartId(this.args.sourceVoId, this.args.targetVoId, this.args.bizFlowchartId);
            }
        }
        list$.subscribe((/**
         * @param {?} result
         * @return {?}
         */
        (result) => {
            /** @type {?} */
            const list = result;
            list.forEach((/**
             * @param {?} elt
             * @return {?}
             */
            elt => {
                if (this.targetVoIdList.includes(elt.targetVoId) === false) {
                    this.targetVoIdList.push(elt.targetVoId);
                    this.creationRuleDict[elt.targetVoId] = new Array();
                }
                this.targetVoNameDict[elt.targetVoId] = elt.targetVoName;
                this.creationRuleDict[elt.targetVoId].push(elt);
            }));
            this.selectedTargetVoId = this.targetVoIdList.length > 0 ? this.targetVoIdList[0] : null;
        }));
    }
}
PushSelectorComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-push-selector',
                template: "<div class=\"g-main p-2\">\r\n  <!--  -->\r\n  <div class=\"form-group\" style=\"height: 150px;overflow-y: auto;\">\r\n    <div [hidden]=\"targetVoIdList.length != 0\"><span style=\"color: red;\">{{ 'emptyResult' | aifLocale }}</span></div>\r\n    <div>{{ 'selectTargetBillType' | aifLocale }}</div>\r\n    <div *ngFor=\"let targetVoId of targetVoIdList;let i=index\" class=\"col-sm-12 col-md-5 form-check form-check-inline\">\r\n      <input class=\"form-check-input\" type=\"radio\" [name]=\"'targetVoId'+i\" id=\"targetVoId\" [value]=\"targetVoId\"\r\n        [(ngModel)]=\"selectedTargetVoId\" />\r\n      <label class=\"form-check-label\" [for]=\"'targetVoId'+i\">{{targetVoNameDict[targetVoId]}}</label>\r\n    </div>\r\n  </div>\r\n\r\n  <!--  -->\r\n  <div class=\"form-group\" style=\"\">\r\n    <div>{{ 'selectCreationRule' | aifLocale }}</div>\r\n    <select class=\"form-control\" name=\"selectedCreationRule\" [(ngModel)]=\"selectedCreationRule\">\r\n      <option *ngFor=\"let cr of creationRuleDict[selectedTargetVoId];\" [ngValue]=\"cr\">\r\n        {{cr.name}}</option>\r\n    </select>\r\n  </div>\r\n\r\n  <!--  -->\r\n  <div class=\"form-group\" style=\"\">\r\n    <div>{{ 'creationRuleDesciption' | aifLocale }}</div>\r\n    <textarea readonly class=\"form-control\" name=\"description\" rows=\"3\"\r\n      [ngModel]=\"selectedCreationRule&&selectedCreationRule.description\"></textarea>\r\n  </div>\r\n</div>",
                styles: [""]
            }] }
];
/** @nocollapse */
PushSelectorComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [SELECTOR_ARGS_INJECTOR,] }] },
    { type: AifDataService },
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }
];
if (false) {
    /** @type {?} */
    PushSelectorComponent.prototype.targetVoIdList;
    /** @type {?} */
    PushSelectorComponent.prototype.targetVoNameDict;
    /** @type {?} */
    PushSelectorComponent.prototype.creationRuleDict;
    /**
     * @type {?}
     * @private
     */
    PushSelectorComponent.prototype._selectedTargetVoId;
    /** @type {?} */
    PushSelectorComponent.prototype.selectedCreationRule;
    /** @type {?} */
    PushSelectorComponent.prototype.bsModalRef4AifSelector;
    /** @type {?} */
    PushSelectorComponent.prototype.subject4CreationRule;
    /**
     * @type {?}
     * @private
     */
    PushSelectorComponent.prototype.args;
    /** @type {?} */
    PushSelectorComponent.prototype.clickOk4AifSelector;
    /** @type {?} */
    PushSelectorComponent.prototype.clickClose4AifSelector;
    /**
     * @type {?}
     * @private
     */
    PushSelectorComponent.prototype.dataService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVzaC1zZWxlY3Rvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWFpZi9ydW50aW1lLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9haWYtbWFudWFsLWNyZWF0aW9uL2NvbXBvbmVudHMvcHVzaC1zZWxlY3Rvci9wdXNoLXNlbGVjdG9yLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXJFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDL0IsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFHcEYsT0FBTyxFQUFFLCtCQUErQixFQUErQixNQUFNLGlCQUFpQixDQUFDO0FBQy9GLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQzs7OztBQVVoRSxNQUFNLE9BQU8scUJBQXFCOzs7Ozs7SUFrQ2hDLFlBQ2tDLElBQWlDLEVBQ3pELFdBQTJCLEVBQ2hCLFFBQWdCO1FBRDNCLGdCQUFXLEdBQVgsV0FBVyxDQUFnQjs7UUFqQ3JDLG1CQUFjLEdBQWEsRUFBRSxDQUFDOztRQUc5QixxQkFBZ0IsR0FFWixFQUFFLENBQUM7O1FBR1AscUJBQWdCLEdBRVosRUFBRSxDQUFDO1FBaUJQLDJCQUFzQixHQUFlLElBQUksQ0FBQztRQUMxQyx5QkFBb0IsR0FBdUMsSUFBSSxPQUFPLEVBQUUsQ0FBQztRQWdCekUsd0JBQW1COzs7UUFBRyxHQUFHLEVBQUU7WUFDekIsSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsQ0FBQztZQUMxRCxJQUFJLENBQUMsb0JBQW9CLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDckMsSUFBSSxDQUFDLHNCQUFzQixDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3RDLENBQUMsRUFBQztRQUVG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QUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUMzRixDQUFDLEVBQ0YsQ0FBQztJQUNKLENBQUM7OztZQTVGRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtnQkFDN0IsbTZDQUE2Qzs7YUFFOUM7Ozs7NENBb0NJLE1BQU0sU0FBQyxzQkFBc0I7WUE3Q3pCLGNBQWM7eUNBK0NsQixNQUFNLFNBQUMsU0FBUzs7OztJQWxDbkIsK0NBQThCOztJQUc5QixpREFFTzs7SUFHUCxpREFFTzs7Ozs7SUFHUCxvREFBb0M7O0lBWXBDLHFEQUFnRDs7SUFFaEQsdURBQTBDOztJQUMxQyxxREFBeUU7Ozs7O0lBRXpFLHFDQUE4Qzs7SUFjOUMsb0RBSUU7O0lBRUYsdURBRUU7Ozs7O0lBbkJBLDRDQUFtQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbmplY3QsIExPQ0FMRV9JRCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBCc01vZGFsUmVmIH0gZnJvbSAnQGZhcnJpcy91aS1tb2RhbCc7XHJcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgU0VMRUNUT1JfQVJHU19JTkpFQ1RPUiB9IGZyb20gJy4uLy4uL2NvbmZpZy9zZWxlY3Rvci1hcmdzLWluamVjdG9yLmNvbmZpZyc7XHJcbmltcG9ydCB7IElTbGltQ3JlYXRpb25SdWxlRW50aXR5RXggfSBmcm9tICdAZWRwLWFpZi9jb21tb24tYXBpJztcclxuaW1wb3J0IHsgSUFpZkNyZWF0aW9uUnVsZVNlbGVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vYmFzZS9JQWlmQ3JlYXRpb25SdWxlU2VsZWN0b3JDb21wb25lbnQnO1xyXG5pbXBvcnQgeyBGb3JtR2V0Q3JlYXRpb25SdWxlRW50aXR5RXhBcmdzLCBHZXRDcmVhdGlvblJ1bGVFbnRpdHlFeEFyZ3MgfSBmcm9tICcuLi8uLi9mb3JtLWFyZ3MnO1xyXG5pbXBvcnQgeyBBaWZEYXRhU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2UvYWlmLWRhdGEuc2VydmljZSc7XHJcblxyXG4vKipcclxuICogQGRlcHJlY2F0ZWQgcGxlYXNlIHVzZSBAZWRwLWJpZi9ydW50aW1lLWFwaSBcclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbGliLXB1c2gtc2VsZWN0b3InLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9wdXNoLXNlbGVjdG9yLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9wdXNoLXNlbGVjdG9yLmNvbXBvbmVudC5jc3MnXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIFB1c2hTZWxlY3RvckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgSUFpZkNyZWF0aW9uUnVsZVNlbGVjdG9yQ29tcG9uZW50IHtcclxuXHJcbiAgLy/nm67moIdWb0lk5YiX6KGoXHJcbiAgdGFyZ2V0Vm9JZExpc3Q6IHN0cmluZ1tdID0gW107XHJcblxyXG4gIC8v55uu5qCHVm9JZOS4juebruagh1ZvTmFtZeaYoOWwhFxyXG4gIHRhcmdldFZvTmFtZURpY3Q6IHtcclxuICAgIFt0YXJnZXRWb0lkOiBzdHJpbmddOiBzdHJpbmdcclxuICB9ID0ge307XHJcblxyXG4gIC8v55uu5qCHVm9JZOS4juebuOW6lOeahOeUn+WNleinhOWImeWIl+ihqOaYoOWwhFxyXG4gIGNyZWF0aW9uUnVsZURpY3Q6IHtcclxuICAgIFt0YXJnZXRWb0lkOiBzdHJpbmddOiBJU2xpbUNyZWF0aW9uUnVsZUVudGl0eUV4W11cclxuICB9ID0ge307XHJcblxyXG4gIC8v6YCJ5Lit55qE55uu5qCHVm9JZFxyXG4gIHByaXZhdGUgX3NlbGVjdGVkVGFyZ2V0Vm9JZDogc3RyaW5nO1xyXG4gIGdldCBzZWxlY3RlZFRhcmdldFZvSWQoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLl9zZWxlY3RlZFRhcmdldFZvSWQ7XHJcbiAgfVxyXG4gIHNldCBzZWxlY3RlZFRhcmdldFZvSWQodGFyZ2V0Vm9JZDogc3RyaW5nKSB7XHJcbiAgICB0aGlzLl9zZWxlY3RlZFRhcmdldFZvSWQgPSB0YXJnZXRWb0lkO1xyXG4gICAgaWYgKHRhcmdldFZvSWQgIT0gbnVsbCkge1xyXG4gICAgICB0aGlzLnNlbGVjdGVkQ3JlYXRpb25SdWxlID0gdGhpcy5jcmVhdGlvblJ1bGVEaWN0W3RoaXMuX3NlbGVjdGVkVGFyZ2V0Vm9JZF1bMF07XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvL+mAieS4reeahOeUn+WNleinhOWImVxyXG4gIHNlbGVjdGVkQ3JlYXRpb25SdWxlOiBJU2xpbUNyZWF0aW9uUnVsZUVudGl0eUV4O1xyXG5cclxuICBic01vZGFsUmVmNEFpZlNlbGVjdG9yOiBCc01vZGFsUmVmID0gbnVsbDtcclxuICBzdWJqZWN0NENyZWF0aW9uUnVsZTogU3ViamVjdDxJU2xpbUNyZWF0aW9uUnVsZUVudGl0eUV4PiA9IG5ldyBTdWJqZWN0KCk7XHJcblxyXG4gIHByaXZhdGUgYXJnczogRm9ybUdldENyZWF0aW9uUnVsZUVudGl0eUV4QXJncztcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIEBJbmplY3QoU0VMRUNUT1JfQVJHU19JTkpFQ1RPUikgYXJnczogR2V0Q3JlYXRpb25SdWxlRW50aXR5RXhBcmdzLFxyXG4gICAgcHJpdmF0ZSBkYXRhU2VydmljZTogQWlmRGF0YVNlcnZpY2UsXHJcbiAgICBASW5qZWN0KExPQ0FMRV9JRCkgbG9jYWxlSWQ6IHN0cmluZyxcclxuICApIHtcclxuICAgIHRoaXMuYXJncyA9IG5ldyBGb3JtR2V0Q3JlYXRpb25SdWxlRW50aXR5RXhBcmdzKCk7XHJcbiAgICB0aGlzLmFyZ3MuTG9hZEZyb21Kc29uT2JqZWN0KGFyZ3MpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmxvYWRJdGVtcygpO1xyXG4gIH1cclxuXHJcbiAgY2xpY2tPazRBaWZTZWxlY3RvciA9ICgpID0+IHtcclxuICAgIHRoaXMuc3ViamVjdDRDcmVhdGlvblJ1bGUubmV4dCh0aGlzLnNlbGVjdGVkQ3JlYXRpb25SdWxlKTtcclxuICAgIHRoaXMuc3ViamVjdDRDcmVhdGlvblJ1bGUuY29tcGxldGUoKTtcclxuICAgIHRoaXMuYnNNb2RhbFJlZjRBaWZTZWxlY3Rvci5jbG9zZSgpO1xyXG4gIH07XHJcblxyXG4gIGNsaWNrQ2xvc2U0QWlmU2VsZWN0b3IgPSAoKSA9PiB7XHJcbiAgICB0aGlzLmJzTW9kYWxSZWY0QWlmU2VsZWN0b3IuY2xvc2UoKTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIGxvYWRJdGVtcygpOiB2b2lkIHtcclxuICAgIGxldCBsaXN0JCA9IG51bGw7XHJcbiAgICBpZiAodGhpcy5hcmdzLnRhcmdldFZvSWQgPT0gbnVsbCkge1xyXG4gICAgICBpZiAodGhpcy5hcmdzLmJpekZsb3djaGFydElkID09IG51bGwpIHtcclxuICAgICAgICBsaXN0JCA9IHRoaXMuZGF0YVNlcnZpY2UuZ2V0U2xpbUNyZWF0aW9uUnVsZXNCeVNvdXJjZVZvSWQodGhpcy5hcmdzLnNvdXJjZVZvSWQpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGxpc3QkID0gdGhpcy5kYXRhU2VydmljZS5nZXRTbGltQ3JlYXRpb25SdWxlc0J5U291cmNlVm9JZEFuZEZsb3djaGFydElkKHRoaXMuYXJncy5zb3VyY2VWb0lkLCB0aGlzLmFyZ3MuYml6Rmxvd2NoYXJ0SWQpO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAodGhpcy5hcmdzLmJpekZsb3djaGFydElkID09IG51bGwpIHtcclxuICAgICAgICBsaXN0JCA9IHRoaXMuZGF0YVNlcnZpY2UuZ2V0U2xpbUNyZWF0aW9uUnVsZXNCeVNvdXJjZVZvSWRBbmRUYXJnZXRWb0lkKHRoaXMuYXJncy5zb3VyY2VWb0lkLCB0aGlzLmFyZ3MudGFyZ2V0Vm9JZCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgbGlzdCQgPSB0aGlzLmRhdGFTZXJ2aWNlLmdldFNsaW1DcmVhdGlvblJ1bGVzQnlTb3VyY2VWb0lkQW5kVGFyZ2V0Vm9JZEFuZEZsb3djaGFydElkKHRoaXMuYXJncy5zb3VyY2VWb0lkLCB0aGlzLmFyZ3MudGFyZ2V0Vm9JZCwgdGhpcy5hcmdzLmJpekZsb3djaGFydElkKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgbGlzdCQuc3Vic2NyaWJlKFxyXG4gICAgICAocmVzdWx0OiBJU2xpbUNyZWF0aW9uUnVsZUVudGl0eUV4W10pID0+IHtcclxuICAgICAgICBjb25zdCBsaXN0ID0gcmVzdWx0O1xyXG4gICAgICAgIGxpc3QuZm9yRWFjaChlbHQgPT4ge1xyXG4gICAgICAgICAgaWYgKHRoaXMudGFyZ2V0Vm9JZExpc3QuaW5jbHVkZXMoZWx0LnRhcmdldFZvSWQpID09PSBmYWxzZSkge1xyXG4gICAgICAgICAgICB0aGlzLnRhcmdldFZvSWRMaXN0LnB1c2goZWx0LnRhcmdldFZvSWQpO1xyXG4gICAgICAgICAgICB0aGlzLmNyZWF0aW9uUnVsZURpY3RbZWx0LnRhcmdldFZvSWRdID0gbmV3IEFycmF5PElTbGltQ3JlYXRpb25SdWxlRW50aXR5RXg+KCk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgdGhpcy50YXJnZXRWb05hbWVEaWN0W2VsdC50YXJnZXRWb0lkXSA9IGVsdC50YXJnZXRWb05hbWU7XHJcbiAgICAgICAgICB0aGlzLmNyZWF0aW9uUnVsZURpY3RbZWx0LnRhcmdldFZvSWRdLnB1c2goZWx0KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLnNlbGVjdGVkVGFyZ2V0Vm9JZCA9IHRoaXMudGFyZ2V0Vm9JZExpc3QubGVuZ3RoID4gMCA/IHRoaXMudGFyZ2V0Vm9JZExpc3RbMF0gOiBudWxsO1xyXG4gICAgICB9XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG4iXX0=