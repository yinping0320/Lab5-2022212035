/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BpmnModelJsonHelper, JsonConvertableImpl } from '@edp-aif/common-api';
export class FormGetCreationRuleEntityExArgs extends JsonConvertableImpl {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.bizFlowchartId = null;
        this.sourceVoId = null;
        this.targetVoId = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizFlowchartId", this.bizFlowchartId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoId", this.sourceVoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoId", this.targetVoId);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.bizFlowchartId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizFlowchartId");
        this.sourceVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoId");
        this.targetVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoId");
    }
}
if (false) {
    /** @type {?} */
    FormGetCreationRuleEntityExArgs.prototype.bizFlowchartId;
    /** @type {?} */
    FormGetCreationRuleEntityExArgs.prototype.sourceVoId;
    /** @type {?} */
    FormGetCreationRuleEntityExArgs.prototype.targetVoId;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRm9ybUdldENyZWF0aW9uUnVsZUVudGl0eUV4QXJncy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYWlmL3J1bnRpbWUtYXBpLyIsInNvdXJjZXMiOlsibGliL2FpZi1tYW51YWwtY3JlYXRpb24vZm9ybS1hcmdzL0Zvcm1HZXRDcmVhdGlvblJ1bGVFbnRpdHlFeEFyZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRS9FLE1BQU0sT0FBTywrQkFBZ0MsU0FBUSxtQkFBbUI7Ozs7O0lBSzFELG1CQUFtQjtRQUN6QixLQUFLLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztRQUMzQixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUN2QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztJQUMzQixDQUFDOzs7O0lBRU0sbUJBQW1COztZQUNsQixHQUFHLEdBQUcsS0FBSyxDQUFDLG1CQUFtQixFQUFFO1FBRXJDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDbEYsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFlBQVksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDMUUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFlBQVksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFFMUUsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVNLGtCQUFrQixDQUFDLEdBQU87UUFDN0IsS0FBSyxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxjQUFjLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFDM0YsSUFBSSxDQUFDLFVBQVUsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFDbkYsSUFBSSxDQUFDLFVBQVUsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDdkYsQ0FBQztDQUNKOzs7SUE3QkcseURBQXVCOztJQUN2QixxREFBbUI7O0lBQ25CLHFEQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJwbW5Nb2RlbEpzb25IZWxwZXIsIEpzb25Db252ZXJ0YWJsZUltcGwgfSBmcm9tICdAZWRwLWFpZi9jb21tb24tYXBpJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGb3JtR2V0Q3JlYXRpb25SdWxlRW50aXR5RXhBcmdzIGV4dGVuZHMgSnNvbkNvbnZlcnRhYmxlSW1wbCB7XHJcbiAgICBiaXpGbG93Y2hhcnRJZDogc3RyaW5nO1xyXG4gICAgc291cmNlVm9JZDogc3RyaW5nO1xyXG4gICAgdGFyZ2V0Vm9JZDogc3RyaW5nO1xyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICAgICAgdGhpcy5iaXpGbG93Y2hhcnRJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5zb3VyY2VWb0lkID0gbnVsbDtcclxuICAgICAgICB0aGlzLnRhcmdldFZvSWQgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IHt9IHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJiaXpGbG93Y2hhcnRJZFwiLCB0aGlzLmJpekZsb3djaGFydElkKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJzb3VyY2VWb0lkXCIsIHRoaXMuc291cmNlVm9JZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwidGFyZ2V0Vm9JZFwiLCB0aGlzLnRhcmdldFZvSWQpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLmJpekZsb3djaGFydElkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJiaXpGbG93Y2hhcnRJZFwiKTtcclxuICAgICAgICB0aGlzLnNvdXJjZVZvSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInNvdXJjZVZvSWRcIik7XHJcbiAgICAgICAgdGhpcy50YXJnZXRWb0lkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJ0YXJnZXRWb0lkXCIpO1xyXG4gICAgfVxyXG59Il19