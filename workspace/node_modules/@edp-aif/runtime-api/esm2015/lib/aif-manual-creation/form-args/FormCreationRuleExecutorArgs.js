/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { JsonConvertableImpl, BpmnModelJsonHelper } from '@edp-aif/common-api';
/**
 * 表单手工生单时执行生单规则参数类。
 */
export class FormCreationRuleExecutorArgs extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        /**
         * 来源单据ID树形列表
         */
        this.sourceVoEntityDatas = new Array();
        /**
         * 目标单据主表ID列表
         */
        this.targetVoDataIds = new Array();
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.sourceVoEntityDatas = new Array();
        this.creationRuleId = null;
        this.bizFlowchartId = null;
        this.targetVoDataIds = new Array();
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationRuleId", this.creationRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizFlowchartId", this.bizFlowchartId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoEntityDatas", BpmnModelJsonHelper.StringListToJsonArray(this.sourceVoEntityDatas));
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoDataIds", BpmnModelJsonHelper.StringListToJsonArray(this.targetVoDataIds));
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.creationRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationRuleId");
        this.bizFlowchartId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizFlowchartId");
        this.sourceVoEntityDatas = BpmnModelJsonHelper.StringListFromJsonArray(BpmnModelJsonHelper.GetAttributeValue(obj, "sourceVoEntityDatas"));
        this.targetVoDataIds = BpmnModelJsonHelper.StringListFromJsonArray((/** @type {?} */ (BpmnModelJsonHelper.GetAttributeValue(obj, "targetVoDataIds"))));
    }
}
if (false) {
    /**
     * 生单规则ID
     * @type {?}
     */
    FormCreationRuleExecutorArgs.prototype.creationRuleId;
    /**
     * 业务场景图ID
     * @type {?}
     */
    FormCreationRuleExecutorArgs.prototype.bizFlowchartId;
    /**
     * 来源单据ID树形列表
     * @type {?}
     */
    FormCreationRuleExecutorArgs.prototype.sourceVoEntityDatas;
    /**
     * 目标单据主表ID列表
     * @type {?}
     */
    FormCreationRuleExecutorArgs.prototype.targetVoDataIds;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRm9ybUNyZWF0aW9uUnVsZUV4ZWN1dG9yQXJncy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYWlmL3J1bnRpbWUtYXBpLyIsInNvdXJjZXMiOlsibGliL2FpZi1tYW51YWwtY3JlYXRpb24vZm9ybS1hcmdzL0Zvcm1DcmVhdGlvblJ1bGVFeGVjdXRvckFyZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7O0FBSy9FLE1BQU0sT0FBTyw0QkFBNkIsU0FBUSxtQkFBbUI7SUFBckU7Ozs7O1FBWUksd0JBQW1CLEdBQWtCLElBQUksS0FBSyxFQUFFLENBQUM7Ozs7UUFJakQsb0JBQWUsR0FBa0IsSUFBSSxLQUFLLEVBQUUsQ0FBQztJQThCakQsQ0FBQzs7Ozs7SUE1QmEsbUJBQW1CO1FBQ3pCLEtBQUssQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBRTVCLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO1FBQzNCLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO1FBQzNCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztJQUN2QyxDQUFDOzs7O0lBRU0sbUJBQW1COztZQUNsQixHQUFHLEdBQUcsS0FBSyxDQUFDLG1CQUFtQixFQUFFO1FBRXJDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDbEYsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGdCQUFnQixFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUNsRixtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUscUJBQXFCLEVBQUUsbUJBQW1CLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQztRQUN2SSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLEVBQUUsbUJBQW1CLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7UUFFL0gsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVNLGtCQUFrQixDQUFDLEdBQU87UUFDN0IsS0FBSyxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxjQUFjLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFDM0YsSUFBSSxDQUFDLGNBQWMsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztRQUMzRixJQUFJLENBQUMsbUJBQW1CLEdBQUcsbUJBQW1CLENBQUMsdUJBQXVCLENBQUMsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLHFCQUFxQixDQUFDLENBQUMsQ0FBQztRQUMxSSxJQUFJLENBQUMsZUFBZSxHQUFHLG1CQUFtQixDQUFDLHVCQUF1QixDQUFDLG1CQUFBLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxpQkFBaUIsQ0FBQyxFQUFpQixDQUFDLENBQUM7SUFDdkosQ0FBQztDQUNKOzs7Ozs7SUExQ0csc0RBQXVCOzs7OztJQUl2QixzREFBdUI7Ozs7O0lBSXZCLDJEQUFpRDs7Ozs7SUFJakQsdURBQTZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSnNvbkNvbnZlcnRhYmxlSW1wbCwgQnBtbk1vZGVsSnNvbkhlbHBlciB9IGZyb20gJ0BlZHAtYWlmL2NvbW1vbi1hcGknO1xyXG5cclxuLyoqXHJcbiAqIOihqOWNleaJi+W3peeUn+WNleaXtuaJp+ihjOeUn+WNleinhOWImeWPguaVsOexu+OAglxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIEZvcm1DcmVhdGlvblJ1bGVFeGVjdXRvckFyZ3MgZXh0ZW5kcyBKc29uQ29udmVydGFibGVJbXBsIHtcclxuICAgIC8qKlxyXG4gICAgICog55Sf5Y2V6KeE5YiZSURcclxuICAgICAqL1xyXG4gICAgY3JlYXRpb25SdWxlSWQ6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICog5Lia5Yqh5Zy65pmv5Zu+SURcclxuICAgICAqL1xyXG4gICAgYml6Rmxvd2NoYXJ0SWQ6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICog5p2l5rqQ5Y2V5o2uSUTmoJHlvaLliJfooahcclxuICAgICAqL1xyXG4gICAgc291cmNlVm9FbnRpdHlEYXRhczogQXJyYXk8c3RyaW5nPiA9IG5ldyBBcnJheSgpO1xyXG4gICAgLyoqXHJcbiAgICAgKiDnm67moIfljZXmja7kuLvooahJROWIl+ihqFxyXG4gICAgICovXHJcbiAgICB0YXJnZXRWb0RhdGFJZHM6IEFycmF5PHN0cmluZz4gPSBuZXcgQXJyYXkoKTtcclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcblxyXG4gICAgICAgIHRoaXMuc291cmNlVm9FbnRpdHlEYXRhcyA9IG5ldyBBcnJheSgpO1xyXG4gICAgICAgIHRoaXMuY3JlYXRpb25SdWxlSWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuYml6Rmxvd2NoYXJ0SWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMudGFyZ2V0Vm9EYXRhSWRzID0gbmV3IEFycmF5KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENvbnZlcnRUb0pzb25PYmplY3QoKToge30ge1xyXG4gICAgICAgIGxldCBvYmogPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcblxyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImNyZWF0aW9uUnVsZUlkXCIsIHRoaXMuY3JlYXRpb25SdWxlSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImJpekZsb3djaGFydElkXCIsIHRoaXMuYml6Rmxvd2NoYXJ0SWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInNvdXJjZVZvRW50aXR5RGF0YXNcIiwgQnBtbk1vZGVsSnNvbkhlbHBlci5TdHJpbmdMaXN0VG9Kc29uQXJyYXkodGhpcy5zb3VyY2VWb0VudGl0eURhdGFzKSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwidGFyZ2V0Vm9EYXRhSWRzXCIsIEJwbW5Nb2RlbEpzb25IZWxwZXIuU3RyaW5nTGlzdFRvSnNvbkFycmF5KHRoaXMudGFyZ2V0Vm9EYXRhSWRzKSk7XHJcblxyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IHt9KTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMuY3JlYXRpb25SdWxlSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImNyZWF0aW9uUnVsZUlkXCIpO1xyXG4gICAgICAgIHRoaXMuYml6Rmxvd2NoYXJ0SWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImJpekZsb3djaGFydElkXCIpO1xyXG4gICAgICAgIHRoaXMuc291cmNlVm9FbnRpdHlEYXRhcyA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuU3RyaW5nTGlzdEZyb21Kc29uQXJyYXkoQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwic291cmNlVm9FbnRpdHlEYXRhc1wiKSk7XHJcbiAgICAgICAgdGhpcy50YXJnZXRWb0RhdGFJZHMgPSBCcG1uTW9kZWxKc29uSGVscGVyLlN0cmluZ0xpc3RGcm9tSnNvbkFycmF5KEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInRhcmdldFZvRGF0YUlkc1wiKSBhcyBBcnJheTxzdHJpbmc+KTtcclxuICAgIH1cclxufSJdfQ==