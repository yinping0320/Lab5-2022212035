import { ISlimCreationRuleEntityEx, FormSettings } from "@edp-aif/common-api";
import { Observable } from "rxjs";
import { FormCreationRuleExecutorArgs, FormCreateResult, FormCreateArgs, FormUpdateResult, FormUpdateArgs } from '../form-args';
import { Entity, Repository } from '@farris/devkit';
import { RpcCreationRuleExecutorResult } from '../../entity';
export declare class AifDataService {
    private readonly getCreationRuleEntityByIdUrl;
    private readonly getCreationRuleEntityByIdMethod;
    private readonly getCreationRuleUrl;
    private readonly getCreationRuleMethod;
    private readonly executeCreationRuleUrl;
    private readonly executeCreationRuleMethod;
    private readonly formCreateUrl;
    private readonly formCreateMethod;
    private readonly formUpdateUrl;
    private readonly formUpdateMethod;
    private readonly generalTextUrl;
    private readonly generalTextMethod;
    private repository;
    constructor(repository: Repository<Entity>);
    /**
     * 根据来源 VO Id获取生单规则实体列表。
     *
     * @param sourceVoId 来源 VO Id。
     * @return 符合条件的生单规则实体列表。
     */
    getSlimCreationRulesBySourceVoId(sourceVoId: string): Observable<ISlimCreationRuleEntityEx[]>;
    /**
     * 根据目标 VO Id获取生单规则实体列表。
     *
     * @param targetVoId 目标 VO Id。
     * @return 符合条件的生单规则实体列表。
     */
    getSlimCreationRulesByTargetVoId(targetVoId: string): Observable<ISlimCreationRuleEntityEx[]>;
    /**
     * 根据来源 VO Id和目标 VO Id获取生单规则实体列表。
     *
     * @param sourceVoId 来源 VO Id。
     * @param targetVoId 目标 VO Id。
     * @return 符合条件的生单规则实体列表。
     */
    getSlimCreationRulesBySourceVoIdAndTargetVoId(sourceVoId: string, targetVoId: string): Observable<ISlimCreationRuleEntityEx[]>;
    /**
     * 根据来源 VO Id获取生单规则实体列表。
     *
     * @param sourceVoId     来源 VO Id。
     * @param bizFlowchartId 业务场景图Id。
     * @return 符合条件的生单规则实体列表。
     */
    getSlimCreationRulesBySourceVoIdAndFlowchartId(sourceVoId: string, bizFlowchartId: string): Observable<ISlimCreationRuleEntityEx[]>;
    /**
     * 根据目标 VO Id获取生单规则实体列表。
     *
     * @param targetVoId     目标 VO Id。
     * @param bizFlowchartId 业务场景图Id。
     * @return 符合条件的生单规则实体列表。
     */
    getSlimCreationRulesByTargetVoIdAndFlowchartId(targetVoId: string, bizFlowchartId: string): Observable<ISlimCreationRuleEntityEx[]>;
    /**
     * 根据来源 VO Id和目标 VO Id获取生单规则实体列表。
     *
     * @param sourceVoId     来源 VO Id。
     * @param targetVoId     目标 VO Id。
     * @param bizFlowchartId 业务场景图Id。
     * @return 符合条件的生单规则实体列表。
     */
    getSlimCreationRulesBySourceVoIdAndTargetVoIdAndFlowchartId(sourceVoId: string, targetVoId: string, bizFlowchartId: string): Observable<ISlimCreationRuleEntityEx[]>;
    /**
     * 获取生单规则实体
     */
    getSlimCreationRuleEntityExById(creationRuleId: string): Observable<ISlimCreationRuleEntityEx>;
    /**
     * 获取表单配置实体
     * @param formSettingsId
     */
    getFormSettingsById(formSettingsId: string): Observable<FormSettings>;
    /**
     * 执行生单规则
     */
    executeCreationRule(args: FormCreationRuleExecutorArgs): Observable<RpcCreationRuleExecutorResult>;
    /**
     * 创建单据
     */
    createEntityDatas(args: FormCreateArgs): Observable<FormCreateResult>;
    /**
     * 修改单据
     */
    updateEntityDatas(args: FormUpdateArgs): Observable<FormUpdateResult>;
    private getCreationRuleList;
    /**
 * 参考farris/bef EntityUtil实现
 * @param entity
 * @param initialData
 */
    private appendInitialData;
}
