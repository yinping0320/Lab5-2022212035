/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BpmnModelJsonHelper } from './BpmnModelJsonHelper';
var ExtensionMethod = /** @class */ (function () {
    function ExtensionMethod() {
    }
    /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    ExtensionMethod.getAttributeValue = /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    function (obj, attributeName) {
        return BpmnModelJsonHelper.GetAttributeValue(obj, attributeName);
    };
    /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    ExtensionMethod.getAttributeValue4Boolean = /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    function (obj, attributeName) {
        return BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, attributeName);
    };
    /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    ExtensionMethod.getAttributeValue4Decimal = /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    function (obj, attributeName) {
        return BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, attributeName);
    };
    /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    ExtensionMethod.getAttributeValue4String = /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    function (obj, attributeName) {
        return BpmnModelJsonHelper.GetAttributeValueAsString(obj, attributeName);
    };
    /**
     * @param {?} obj
     * @param {?} attributeName
     * @param {?} value
     * @return {?}
     */
    ExtensionMethod.setAttributeValue = /**
     * @param {?} obj
     * @param {?} attributeName
     * @param {?} value
     * @return {?}
     */
    function (obj, attributeName, value) {
        BpmnModelJsonHelper.SetAttributeValue(obj, attributeName, value);
    };
    return ExtensionMethod;
}());
export { ExtensionMethod };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXh0ZW5zaW9uTWV0aG9kLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1haWYvY29tbW9uLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9FeHRlbnNpb25NZXRob2QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRTVEO0lBQUE7SUFvQkEsQ0FBQzs7Ozs7O0lBbkJpQixpQ0FBaUI7Ozs7O0lBQS9CLFVBQWdDLEdBQVEsRUFBRSxhQUFxQjtRQUMzRCxPQUFPLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUNyRSxDQUFDOzs7Ozs7SUFFYSx5Q0FBeUI7Ozs7O0lBQXZDLFVBQXdDLEdBQVEsRUFBRSxhQUFxQjtRQUNuRSxPQUFPLG1CQUFtQixDQUFDLDBCQUEwQixDQUFDLEdBQUcsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUM5RSxDQUFDOzs7Ozs7SUFFYSx5Q0FBeUI7Ozs7O0lBQXZDLFVBQXdDLEdBQVEsRUFBRSxhQUFxQjtRQUNuRSxPQUFPLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUM3RSxDQUFDOzs7Ozs7SUFFYSx3Q0FBd0I7Ozs7O0lBQXRDLFVBQXVDLEdBQVEsRUFBRSxhQUFxQjtRQUNsRSxPQUFPLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUM3RSxDQUFDOzs7Ozs7O0lBRWEsaUNBQWlCOzs7Ozs7SUFBL0IsVUFBZ0MsR0FBUSxFQUFFLGFBQXFCLEVBQUUsS0FBc0M7UUFDbkcsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGFBQWEsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNyRSxDQUFDO0lBQ0wsc0JBQUM7QUFBRCxDQUFDLEFBcEJELElBb0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnBtbk1vZGVsSnNvbkhlbHBlciB9IGZyb20gJy4vQnBtbk1vZGVsSnNvbkhlbHBlcic7XHJcblxyXG5leHBvcnQgY2xhc3MgRXh0ZW5zaW9uTWV0aG9kIHtcclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0QXR0cmlidXRlVmFsdWUob2JqOiBhbnksIGF0dHJpYnV0ZU5hbWU6IHN0cmluZyk6IGFueSB7XHJcbiAgICAgICAgcmV0dXJuIEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWUob2JqLCBhdHRyaWJ1dGVOYW1lKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldEF0dHJpYnV0ZVZhbHVlNEJvb2xlYW4ob2JqOiBhbnksIGF0dHJpYnV0ZU5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNCb29sZWFuKG9iaiwgYXR0cmlidXRlTmFtZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBnZXRBdHRyaWJ1dGVWYWx1ZTREZWNpbWFsKG9iajogYW55LCBhdHRyaWJ1dGVOYW1lOiBzdHJpbmcpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNOdW1iZXIob2JqLCBhdHRyaWJ1dGVOYW1lKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldEF0dHJpYnV0ZVZhbHVlNFN0cmluZyhvYmo6IGFueSwgYXR0cmlidXRlTmFtZTogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgYXR0cmlidXRlTmFtZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBzZXRBdHRyaWJ1dGVWYWx1ZShvYmo6IGFueSwgYXR0cmlidXRlTmFtZTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nIHwgYm9vbGVhbiB8IG51bWJlciB8IGFueSk6IHZvaWQge1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBhdHRyaWJ1dGVOYW1lLCB2YWx1ZSk7XHJcbiAgICB9XHJcbn1cclxuIl19