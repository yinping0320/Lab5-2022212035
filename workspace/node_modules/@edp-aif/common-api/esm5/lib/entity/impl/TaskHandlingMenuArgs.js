/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper } from "../../BpmnModelJsonHelper";
import { JsonConvertableImpl } from "../../JsonConvertableImpl";
import { TaskHandlingMenuParameter } from "./TaskHandlingMenuParameter";
var TaskHandlingMenuArgs = /** @class */ (function (_super) {
    tslib_1.__extends(TaskHandlingMenuArgs, _super);
    function TaskHandlingMenuArgs() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.parameters = [];
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    TaskHandlingMenuArgs.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.menuId = null;
        this.menuName = null;
        this.parameters = [];
    };
    /**
     * @return {?}
     */
    TaskHandlingMenuArgs.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "menuId", this.menuId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "menuName", this.menuName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "parameters", this.parameters);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    TaskHandlingMenuArgs.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.menuId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "menuId");
        this.menuName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "menuName");
        this.parameters = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "parameters", TaskHandlingMenuParameter);
    };
    return TaskHandlingMenuArgs;
}(JsonConvertableImpl));
export { TaskHandlingMenuArgs };
if (false) {
    /** @type {?} */
    TaskHandlingMenuArgs.prototype.menuId;
    /** @type {?} */
    TaskHandlingMenuArgs.prototype.menuName;
    /** @type {?} */
    TaskHandlingMenuArgs.prototype.parameters;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGFza0hhbmRsaW5nTWVudUFyZ3MuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWFpZi9jb21tb24tYXBpLyIsInNvdXJjZXMiOlsibGliL2VudGl0eS9pbXBsL1Rhc2tIYW5kbGluZ01lbnVBcmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDaEUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDaEUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFeEU7SUFBMEMsZ0RBQW1CO0lBQTdEO1FBQUEscUVBaUNDO1FBOUJHLGdCQUFVLEdBQWdDLEVBQUUsQ0FBQzs7SUE4QmpELENBQUM7Ozs7O0lBM0JhLGtEQUFtQjs7OztJQUE3QjtRQUNJLGlCQUFNLG1CQUFtQixXQUFFLENBQUM7UUFFNUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDckIsSUFBSSxDQUFDLFVBQVUsR0FBRyxFQUFFLENBQUM7SUFDekIsQ0FBQzs7OztJQUdNLGtEQUFtQjs7O0lBQTFCOztZQUNRLEdBQUcsR0FBRyxpQkFBTSxtQkFBbUIsV0FBRTtRQUVyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNsRSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN0RSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsWUFBWSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUUxRSxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBR00saURBQWtCOzs7O0lBQXpCLFVBQTBCLEdBQU87UUFDN0IsaUJBQU0sa0JBQWtCLFlBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDL0UsSUFBSSxDQUFDLFVBQVUsR0FBRyxtQkFBbUIsQ0FBQyx1QkFBdUIsQ0FBQyxHQUFHLEVBQUUsWUFBWSxFQUFFLHlCQUF5QixDQUFDLENBQUM7SUFDaEgsQ0FBQztJQUNMLDJCQUFDO0FBQUQsQ0FBQyxBQWpDRCxDQUEwQyxtQkFBbUIsR0FpQzVEOzs7O0lBaENHLHNDQUFlOztJQUNmLHdDQUFpQjs7SUFDakIsMENBQTZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnBtbk1vZGVsSnNvbkhlbHBlciB9IGZyb20gXCIuLi8uLi9CcG1uTW9kZWxKc29uSGVscGVyXCI7XHJcbmltcG9ydCB7IEpzb25Db252ZXJ0YWJsZUltcGwgfSBmcm9tIFwiLi4vLi4vSnNvbkNvbnZlcnRhYmxlSW1wbFwiO1xyXG5pbXBvcnQgeyBUYXNrSGFuZGxpbmdNZW51UGFyYW1ldGVyIH0gZnJvbSBcIi4vVGFza0hhbmRsaW5nTWVudVBhcmFtZXRlclwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFRhc2tIYW5kbGluZ01lbnVBcmdzIGV4dGVuZHMgSnNvbkNvbnZlcnRhYmxlSW1wbCB7XHJcbiAgICBtZW51SWQ6IHN0cmluZztcclxuICAgIG1lbnVOYW1lOiBzdHJpbmc7XHJcbiAgICBwYXJhbWV0ZXJzOiBUYXNrSGFuZGxpbmdNZW51UGFyYW1ldGVyW10gPSBbXTtcclxuXHJcblxyXG4gICAgcHJvdGVjdGVkIFJlc2V0QmVmb3JlTG9hZEZyb20oKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuUmVzZXRCZWZvcmVMb2FkRnJvbSgpO1xyXG5cclxuICAgICAgICB0aGlzLm1lbnVJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5tZW51TmFtZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5wYXJhbWV0ZXJzID0gW107XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHB1YmxpYyBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IHt9IHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJtZW51SWRcIiwgdGhpcy5tZW51SWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIm1lbnVOYW1lXCIsIHRoaXMubWVudU5hbWUpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInBhcmFtZXRlcnNcIiwgdGhpcy5wYXJhbWV0ZXJzKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcblxyXG4gICAgcHVibGljIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IHt9KTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMubWVudUlkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJtZW51SWRcIik7XHJcbiAgICAgICAgdGhpcy5tZW51TmFtZSA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwibWVudU5hbWVcIik7XHJcbiAgICAgICAgdGhpcy5wYXJhbWV0ZXJzID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzTGlzdChvYmosIFwicGFyYW1ldGVyc1wiLCBUYXNrSGFuZGxpbmdNZW51UGFyYW1ldGVyKTtcclxuICAgIH1cclxufSJdfQ==