/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper } from "../../BpmnModelJsonHelper";
import { JsonConvertableImpl } from "../../JsonConvertableImpl";
import { Participant } from "./Participant";
import { TaskHandlingMenuArgs } from "./TaskHandlingMenuArgs";
var TaskCenterContent = /** @class */ (function (_super) {
    tslib_1.__extends(TaskCenterContent, _super);
    function TaskCenterContent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.participants = [];
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    TaskCenterContent.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.participants = [];
        this.taskHandlingMenuArgs = null;
    };
    /**
     * @return {?}
     */
    TaskCenterContent.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "participants", this.participants);
        BpmnModelJsonHelper.SetAttributeValue(obj, "taskHandlingMenuArgs", this.taskHandlingMenuArgs);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    TaskCenterContent.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.participants = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "participants", Participant);
        this.taskHandlingMenuArgs = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, "taskHandlingMenuArgs", TaskHandlingMenuArgs);
    };
    return TaskCenterContent;
}(JsonConvertableImpl));
export { TaskCenterContent };
if (false) {
    /** @type {?} */
    TaskCenterContent.prototype.participants;
    /** @type {?} */
    TaskCenterContent.prototype.taskHandlingMenuArgs;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGFza0NlbnRlckNvbnRlbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWFpZi9jb21tb24tYXBpLyIsInNvdXJjZXMiOlsibGliL2VudGl0eS9pbXBsL1Rhc2tDZW50ZXJDb250ZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDaEUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDaEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1QyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUU5RDtJQUF1Qyw2Q0FBbUI7SUFBMUQ7UUFBQSxxRUEyQkM7UUExQkcsa0JBQVksR0FBa0IsRUFBRSxDQUFDOztJQTBCckMsQ0FBQzs7Ozs7SUF0QmEsK0NBQW1COzs7O0lBQTdCO1FBQ0ksaUJBQU0sbUJBQW1CLFdBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsWUFBWSxHQUFHLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxDQUFDO0lBQ3JDLENBQUM7Ozs7SUFFTSwrQ0FBbUI7OztJQUExQjs7WUFDUSxHQUFHLEdBQUcsaUJBQU0sbUJBQW1CLFdBQUU7UUFFckMsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGNBQWMsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDOUUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLHNCQUFzQixFQUFFLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBRTlGLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFTSw4Q0FBa0I7Ozs7SUFBekIsVUFBMEIsR0FBTztRQUM3QixpQkFBTSxrQkFBa0IsWUFBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMsWUFBWSxHQUFHLG1CQUFtQixDQUFDLHVCQUF1QixDQUFDLEdBQUcsRUFBRSxjQUFjLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFDbEcsSUFBSSxDQUFDLG9CQUFvQixHQUFHLG1CQUFtQixDQUFDLG1DQUFtQyxDQUFDLEdBQUcsRUFBRSxzQkFBc0IsRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO0lBQzNJLENBQUM7SUFDTCx3QkFBQztBQUFELENBQUMsQUEzQkQsQ0FBdUMsbUJBQW1CLEdBMkJ6RDs7OztJQTFCRyx5Q0FBaUM7O0lBQ2pDLGlEQUEyQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJwbW5Nb2RlbEpzb25IZWxwZXIgfSBmcm9tIFwiLi4vLi4vQnBtbk1vZGVsSnNvbkhlbHBlclwiO1xyXG5pbXBvcnQgeyBKc29uQ29udmVydGFibGVJbXBsIH0gZnJvbSBcIi4uLy4uL0pzb25Db252ZXJ0YWJsZUltcGxcIjtcclxuaW1wb3J0IHsgUGFydGljaXBhbnQgfSBmcm9tIFwiLi9QYXJ0aWNpcGFudFwiO1xyXG5pbXBvcnQgeyBUYXNrSGFuZGxpbmdNZW51QXJncyB9IGZyb20gXCIuL1Rhc2tIYW5kbGluZ01lbnVBcmdzXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVGFza0NlbnRlckNvbnRlbnQgZXh0ZW5kcyBKc29uQ29udmVydGFibGVJbXBsIHtcclxuICAgIHBhcnRpY2lwYW50czogUGFydGljaXBhbnRbXSA9IFtdO1xyXG4gICAgdGFza0hhbmRsaW5nTWVudUFyZ3M6IFRhc2tIYW5kbGluZ01lbnVBcmdzO1xyXG5cclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcblxyXG4gICAgICAgIHRoaXMucGFydGljaXBhbnRzID0gW107XHJcbiAgICAgICAgdGhpcy50YXNrSGFuZGxpbmdNZW51QXJncyA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENvbnZlcnRUb0pzb25PYmplY3QoKToge30ge1xyXG4gICAgICAgIGxldCBvYmogPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcblxyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInBhcnRpY2lwYW50c1wiLCB0aGlzLnBhcnRpY2lwYW50cyk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwidGFza0hhbmRsaW5nTWVudUFyZ3NcIiwgdGhpcy50YXNrSGFuZGxpbmdNZW51QXJncyk7XHJcblxyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IHt9KTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMucGFydGljaXBhbnRzID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzTGlzdChvYmosIFwicGFydGljaXBhbnRzXCIsIFBhcnRpY2lwYW50KTtcclxuICAgICAgICB0aGlzLnRhc2tIYW5kbGluZ01lbnVBcmdzID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzSnNvblNlcmlhbGl6YWJsZShvYmosIFwidGFza0hhbmRsaW5nTWVudUFyZ3NcIiwgVGFza0hhbmRsaW5nTWVudUFyZ3MpO1xyXG4gICAgfVxyXG59Il19