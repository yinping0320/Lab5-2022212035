/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { JsonConvertableImpl } from '../../JsonConvertableImpl';
import { BpmnModelJsonHelper } from '../../BpmnModelJsonHelper';
import { PushCreationMode } from './PushCreationMode';
import { TaskCenterContent } from './TaskCenterContent';
/**
 * 手工生单界面相关配置。
 */
var /**
 * 手工生单界面相关配置。
 */
FormSettings = /** @class */ (function (_super) {
    tslib_1.__extends(FormSettings, _super);
    function FormSettings() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.pushCreationMode = PushCreationMode.CREATION;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    FormSettings.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.pushCreationMode = PushCreationMode.CREATION;
        this.taskCenterContent = null;
        this.sourceDataSelectorModuleUrl = null;
        this.sourceDataSelectorAppId = null;
        this.sourceDataSelectorAppName = null;
        this.sourceDataSelectorAppEntrance = null;
        this.sourceDataSelectorAppEntranceName = null;
        this.targetCardAppId = null;
        this.targetCardAppName = null;
        this.targetCardAppEntrance = null;
        this.targetCardAppLoadCmd = null;
        this.targetCardAppEntranceName = null;
        this.targetListAppId = null;
        this.targetListAppName = null;
        this.targetListAppEntrance = null;
        this.targetListAppEntrance = null;
        this.targetListAppEntranceName = null;
    };
    /**
     * @return {?}
     */
    FormSettings.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "pushCreationMode", this.pushCreationMode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "taskCenterContent", this.taskCenterContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceDataSelectorModuleUrl", this.sourceDataSelectorModuleUrl);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceDataSelectorAppId", this.sourceDataSelectorAppId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceDataSelectorAppName", this.sourceDataSelectorAppName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceDataSelectorAppEntrance", this.sourceDataSelectorAppEntrance);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceDataSelectorAppEntranceName", this.sourceDataSelectorAppEntranceName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetCardAppId", this.targetCardAppId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetCardAppName", this.targetCardAppName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetCardAppEntrance", this.targetCardAppEntrance);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetCardAppLoadCmd", this.targetCardAppLoadCmd);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetCardAppEntranceName", this.targetCardAppEntranceName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetListAppId", this.targetListAppId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetListAppName", this.targetListAppName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetListAppEntrance", this.targetListAppEntrance);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetListAppEntrance", this.targetListAppEntrance);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetListAppEntranceName", this.targetListAppEntranceName);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    FormSettings.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        /** @type {?} */
        var pushCreationMode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "pushCreationMode");
        if (pushCreationMode == null) {
            this.pushCreationMode = PushCreationMode.CREATION;
        }
        else {
            this.pushCreationMode = PushCreationMode[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "pushCreationMode")];
        }
        this.taskCenterContent = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, "taskCenterContent", TaskCenterContent);
        this.sourceDataSelectorModuleUrl = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceDataSelectorModuleUrl");
        this.sourceDataSelectorAppId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceDataSelectorAppId");
        this.sourceDataSelectorAppName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceDataSelectorAppName");
        this.sourceDataSelectorAppEntrance = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceDataSelectorAppEntrance");
        this.sourceDataSelectorAppEntranceName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceDataSelectorAppEntranceName");
        this.targetCardAppId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetCardAppId");
        this.targetCardAppName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetCardAppName");
        this.targetCardAppEntrance = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetCardAppEntrance");
        this.targetCardAppLoadCmd = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetCardAppLoadCmd");
        this.targetCardAppEntranceName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetCardAppEntranceName");
        this.targetListAppId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetListAppId");
        this.targetListAppName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetListAppName");
        this.targetListAppEntrance = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetListAppEntrance");
        this.targetListAppLoadCmd = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetListAppLoadCmd");
        this.targetListAppEntranceName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetListAppEntranceName");
    };
    return FormSettings;
}(JsonConvertableImpl));
/**
 * 手工生单界面相关配置。
 */
export { FormSettings };
if (false) {
    /** @type {?} */
    FormSettings.prototype.pushCreationMode;
    /** @type {?} */
    FormSettings.prototype.taskCenterContent;
    /**
     * 自定义来源单据选择器url，格式为“包含angular模块且使用systemjs模块的js文件的绝对路
     * 径（不加.js）#模块类名，此模块需实现IAifSelectorModule接口”。例如/apps/aiftestapp/
     * aiftestsua/web/bo-aiftestboafront/aif-test/aif-test#AifTestModule。
     * @type {?}
     */
    FormSettings.prototype.sourceDataSelectorModuleUrl;
    /**
     * 来源单据选择器appId
     * @type {?}
     */
    FormSettings.prototype.sourceDataSelectorAppId;
    /**
     * 来源单据选择器app名称
     * @type {?}
     */
    FormSettings.prototype.sourceDataSelectorAppName;
    /**
     * 来源单据选择器appEntrance
     * @type {?}
     */
    FormSettings.prototype.sourceDataSelectorAppEntrance;
    /**
     * 来源单据选择器app入口名称
     * @type {?}
     */
    FormSettings.prototype.sourceDataSelectorAppEntranceName;
    /**
     * 单条目标单据制单界面appId。
     * @type {?}
     */
    FormSettings.prototype.targetCardAppId;
    /**
     * 单条目标单据制单界面app名称。
     * @type {?}
     */
    FormSettings.prototype.targetCardAppName;
    /**
     * 单条目标单据制单界面appEntrance。
     * @type {?}
     */
    FormSettings.prototype.targetCardAppEntrance;
    /**
     * 单条目标单据制单界面加载命令。
     * @type {?}
     */
    FormSettings.prototype.targetCardAppLoadCmd;
    /**
     * 单条目标单据制单界面appEntrance名称。
     * @type {?}
     */
    FormSettings.prototype.targetCardAppEntranceName;
    /**
     * 多条目标单据制单界面appId。该值为空且生成多条单据时打开多个单条单据制单界面。
     * @type {?}
     */
    FormSettings.prototype.targetListAppId;
    /**
     * 多条目标单据制单界面appId。该值为空且生成多条单据时打开多个单条单据制单界面。
     * @type {?}
     */
    FormSettings.prototype.targetListAppName;
    /**
     * 多条目标单据制单界面appEntrance。
     * @type {?}
     */
    FormSettings.prototype.targetListAppEntrance;
    /**
     * 单条目标单据制单界面加载命令。
     * @type {?}
     */
    FormSettings.prototype.targetListAppLoadCmd;
    /**
     * 多条目标单据制单界面appEntrance名称。
     * @type {?}
     */
    FormSettings.prototype.targetListAppEntranceName;
}
//# sourceMappingURL=data:application/json;base64,