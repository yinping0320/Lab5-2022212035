/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { JsonConvertableImpl } from '../../JsonConvertableImpl';
import { BpmnModelJsonHelper } from '../../BpmnModelJsonHelper';
/**
 * 实体类接口。
 * @abstract
 */
var /**
 * 实体类接口。
 * @abstract
 */
Entity = /** @class */ (function (_super) {
    tslib_1.__extends(Entity, _super);
    function Entity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @protected
     * @return {?}
     */
    Entity.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.id = null;
        this.creator = null;
        this.createdTime = null;
        this.lastModifier = null;
        this.lastModifiedTime = null;
    };
    /**
     * @return {?}
     */
    Entity.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "id", this.id);
        BpmnModelJsonHelper.SetAttributeValue(obj, "creator", this.creator);
        BpmnModelJsonHelper.SetAttributeValue(obj, "createdTime", this.createdTime);
        BpmnModelJsonHelper.SetAttributeValue(obj, "lastModifier", this.lastModifier);
        BpmnModelJsonHelper.SetAttributeValue(obj, "lastModifiedTime", this.lastModifiedTime);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    Entity.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.id = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "id");
        this.creator = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creator");
        this.createdTime = BpmnModelJsonHelper.GetAttributeValueAsDateTime(obj, "createdTime");
        this.lastModifier = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "lastModifier");
        this.lastModifiedTime = BpmnModelJsonHelper.GetAttributeValueAsDateTime(obj, "lastModifiedTime");
    };
    return Entity;
}(JsonConvertableImpl));
/**
 * 实体类接口。
 * @abstract
 */
export { Entity };
if (false) {
    /**
     * 唯一标识。
     * @type {?}
     */
    Entity.prototype.id;
    /** @type {?} */
    Entity.prototype.creator;
    /** @type {?} */
    Entity.prototype.createdTime;
    /** @type {?} */
    Entity.prototype.lastModifier;
    /** @type {?} */
    Entity.prototype.lastModifiedTime;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW50aXR5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1haWYvY29tbW9uLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvaW1wbC9FbnRpdHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7Ozs7QUFHaEU7Ozs7O0lBQXFDLGtDQUFtQjtJQUF4RDs7SUF3Q0EsQ0FBQzs7Ozs7SUEvQmEsb0NBQW1COzs7O0lBQTdCO1FBQ0ksaUJBQU0sbUJBQW1CLFdBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQztRQUNmLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7SUFDakMsQ0FBQzs7OztJQUVELG9DQUFtQjs7O0lBQW5COztZQUNRLEdBQUcsR0FBRyxpQkFBTSxtQkFBbUIsV0FBRTtRQUVyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMxRCxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNwRSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUM1RSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsY0FBYyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM5RSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsa0JBQWtCLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFFdEYsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVELG1DQUFrQjs7OztJQUFsQixVQUFtQixHQUFPO1FBQ3RCLGlCQUFNLGtCQUFrQixZQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxFQUFFLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ25FLElBQUksQ0FBQyxPQUFPLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQzdFLElBQUksQ0FBQyxXQUFXLEdBQUcsbUJBQW1CLENBQUMsMkJBQTJCLENBQUMsR0FBRyxFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBQ3ZGLElBQUksQ0FBQyxZQUFZLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGNBQWMsQ0FBQyxDQUFDO1FBQ3ZGLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxtQkFBbUIsQ0FBQywyQkFBMkIsQ0FBQyxHQUFHLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztJQUNyRyxDQUFDO0lBQ0wsYUFBQztBQUFELENBQUMsQUF4Q0QsQ0FBcUMsbUJBQW1CLEdBd0N2RDs7Ozs7Ozs7Ozs7SUF0Q0csb0JBQVc7O0lBRVgseUJBQWdCOztJQUNoQiw2QkFBa0I7O0lBQ2xCLDhCQUFxQjs7SUFDckIsa0NBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUVudGl0eSB9IGZyb20gJy4uL0lFbnRpdHknO1xyXG5pbXBvcnQgeyBKc29uQ29udmVydGFibGVJbXBsIH0gZnJvbSAnLi4vLi4vSnNvbkNvbnZlcnRhYmxlSW1wbCc7XHJcbmltcG9ydCB7IEJwbW5Nb2RlbEpzb25IZWxwZXIgfSBmcm9tICcuLi8uLi9CcG1uTW9kZWxKc29uSGVscGVyJztcclxuXHJcbi8qKuWunuS9k+exu+aOpeWPo+OAgiovXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBFbnRpdHkgZXh0ZW5kcyBKc29uQ29udmVydGFibGVJbXBsIGltcGxlbWVudHMgSUVudGl0eSB7XHJcbiAgICAvKirllK/kuIDmoIfor4bjgIIqL1xyXG4gICAgaWQ6IHN0cmluZztcclxuXHJcbiAgICBjcmVhdG9yOiBzdHJpbmc7XHJcbiAgICBjcmVhdGVkVGltZTogRGF0ZTtcclxuICAgIGxhc3RNb2RpZmllcjogc3RyaW5nO1xyXG4gICAgbGFzdE1vZGlmaWVkVGltZTogRGF0ZTtcclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcblxyXG4gICAgICAgIHRoaXMuaWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuY3JlYXRvciA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVkVGltZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5sYXN0TW9kaWZpZXIgPSBudWxsO1xyXG4gICAgICAgIHRoaXMubGFzdE1vZGlmaWVkVGltZSA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgQ29udmVydFRvSnNvbk9iamVjdCgpOiB7fSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuXHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiaWRcIiwgdGhpcy5pZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiY3JlYXRvclwiLCB0aGlzLmNyZWF0b3IpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImNyZWF0ZWRUaW1lXCIsIHRoaXMuY3JlYXRlZFRpbWUpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImxhc3RNb2RpZmllclwiLCB0aGlzLmxhc3RNb2RpZmllcik7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwibGFzdE1vZGlmaWVkVGltZVwiLCB0aGlzLmxhc3RNb2RpZmllZFRpbWUpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IHt9KSB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMuaWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImlkXCIpO1xyXG4gICAgICAgIHRoaXMuY3JlYXRvciA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiY3JlYXRvclwiKTtcclxuICAgICAgICB0aGlzLmNyZWF0ZWRUaW1lID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzRGF0ZVRpbWUob2JqLCBcImNyZWF0ZWRUaW1lXCIpO1xyXG4gICAgICAgIHRoaXMubGFzdE1vZGlmaWVyID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJsYXN0TW9kaWZpZXJcIik7XHJcbiAgICAgICAgdGhpcy5sYXN0TW9kaWZpZWRUaW1lID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzRGF0ZVRpbWUob2JqLCBcImxhc3RNb2RpZmllZFRpbWVcIik7XHJcbiAgICB9XHJcbn0iXX0=