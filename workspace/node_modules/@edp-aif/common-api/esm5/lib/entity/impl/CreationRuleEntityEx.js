/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { CreationRuleEntity } from './CreationRuleEntity';
import { BpmnModelJsonHelper } from '../../BpmnModelJsonHelper';
var CreationRuleEntityEx = /** @class */ (function (_super) {
    tslib_1.__extends(CreationRuleEntityEx, _super);
    function CreationRuleEntityEx(entity) {
        var _this = _super.call(this) || this;
        if (entity != null) {
            _this.id = entity.id;
            _this.appCode = entity.appCode;
            _this.boId = entity.boId;
            _this.createdTime = entity.createdTime;
            _this.creator = entity.creator;
            _this.description = entity.description;
            _this.isEnabled = entity.isEnabled;
            _this.lastModifiedTime = entity.lastModifiedTime;
            _this.lastModifier = entity.lastModifier;
            _this.mappingComponentId = entity.mappingComponentId;
            _this.mappingComponentMetadataId = entity.mappingComponentMetadataId;
            _this.mappingRuleId = entity.mappingRuleId;
            _this.mappingRuleMetadataId = entity.mappingRuleMetadataId;
            _this.name = entity.name;
            _this.persistenceVersion = entity.persistenceVersion;
            _this.sourceAppCode = entity.sourceAppCode;
            _this.sourceBeId = entity.sourceBeId;
            _this.sourceBeMetadataId = entity.sourceBeMetadataId;
            //this.sourceBeType = entity.sourceBeType;
            _this.sourceBoId = entity.sourceBoId;
            _this.sourceSuCode = entity.sourceSuCode;
            _this.sourceVoId = entity.sourceVoId;
            _this.sourceVoMetadataId = entity.sourceVoMetadataId;
            //this.sourceVoType = entity.sourceVoType;
            _this.suCode = entity.suCode;
            _this.targetAppCode = entity.targetAppCode;
            _this.targetBeId = entity.targetBeId;
            _this.targetBeMetadataId = entity.targetBeMetadataId;
            //this.targetBeType = entity.targetBeType;
            _this.targetBoId = entity.targetBoId;
            _this.targetSuCode = entity.targetSuCode;
            _this.targetVoId = entity.targetVoId;
            _this.targetVoMetadataId = entity.targetVoMetadataId;
            _this.targetVoProxyId = entity.targetVoProxyId;
            _this.targetVoProxyMetadataId = entity.targetVoProxyMetadataId;
            //this.targetVoProxyType = entity.targetVoProxyType;
            //this.targetVoType = entity.targetVoType;
        }
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    CreationRuleEntityEx.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.sourceBeName = null;
        this.targetBeName = null;
        this.sourceVoName = null;
        this.targetVoName = null;
        this.targetVoProxyName = null;
    };
    /**
     * @return {?}
     */
    CreationRuleEntityEx.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeName", this.sourceBeName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeName", this.targetBeName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoName", this.sourceVoName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoName", this.targetVoName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyName", this.targetVoProxyName);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    CreationRuleEntityEx.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.sourceBeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeName");
        this.targetBeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeName");
        this.sourceVoName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoName");
        this.targetVoName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoName");
        this.targetVoProxyName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyName");
    };
    return CreationRuleEntityEx;
}(CreationRuleEntity));
export { CreationRuleEntityEx };
if (false) {
    /** @type {?} */
    CreationRuleEntityEx.prototype.sourceBeName;
    /** @type {?} */
    CreationRuleEntityEx.prototype.targetBeName;
    /** @type {?} */
    CreationRuleEntityEx.prototype.sourceVoName;
    /** @type {?} */
    CreationRuleEntityEx.prototype.targetVoName;
    /** @type {?} */
    CreationRuleEntityEx.prototype.targetVoProxyName;
}
//# sourceMappingURL=data:application/json;base64,