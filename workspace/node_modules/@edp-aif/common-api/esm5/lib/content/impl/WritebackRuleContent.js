/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Content } from './Content';
import { WritebackRuleEntity } from '../../entity/impl/WritebackRuleEntity';
import { BpmnModelJsonHelper } from '../../BpmnModelJsonHelper';
var WritebackRuleContent = /** @class */ (function (_super) {
    tslib_1.__extends(WritebackRuleContent, _super);
    function WritebackRuleContent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @return {?}
     */
    WritebackRuleContent.prototype.ResetBeforeLoadFrom = /**
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.mappingContent = null;
    };
    /**
     * @return {?}
     */
    WritebackRuleContent.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingContent", this.mappingContent);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    WritebackRuleContent.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.mappingContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingContent");
    };
    /**
     * @protected
     * @return {?}
     */
    WritebackRuleContent.prototype.GetEntityClass = /**
     * @protected
     * @return {?}
     */
    function () {
        return WritebackRuleEntity;
    };
    return WritebackRuleContent;
}(Content));
export { WritebackRuleContent };
if (false) {
    /** @type {?} */
    WritebackRuleContent.prototype.mappingContent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV3JpdGViYWNrUnVsZUNvbnRlbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWFpZi9jb21tb24tYXBpLyIsInNvdXJjZXMiOlsibGliL2NvbnRlbnQvaW1wbC9Xcml0ZWJhY2tSdWxlQ29udGVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFHcEMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDNUUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFaEU7SUFBMEMsZ0RBQTZCO0lBQXZFOztJQXNCQSxDQUFDOzs7O0lBbkJHLGtEQUFtQjs7O0lBQW5CO1FBQ0ksaUJBQU0sbUJBQW1CLFdBQUUsQ0FBQztRQUM1QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztJQUMvQixDQUFDOzs7O0lBRUQsa0RBQW1COzs7SUFBbkI7O1lBQ1EsR0FBRyxHQUFHLGlCQUFNLG1CQUFtQixXQUFFO1FBQ3JDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDbEYsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVELGlEQUFrQjs7OztJQUFsQixVQUFtQixHQUFPO1FBQ3RCLGlCQUFNLGtCQUFrQixZQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzlCLElBQUksQ0FBQyxjQUFjLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGdCQUFnQixDQUFDLENBQUM7SUFDL0YsQ0FBQzs7Ozs7SUFFUyw2Q0FBYzs7OztJQUF4QjtRQUNJLE9BQU8sbUJBQW1CLENBQUM7SUFDL0IsQ0FBQztJQUNMLDJCQUFDO0FBQUQsQ0FBQyxBQXRCRCxDQUEwQyxPQUFPLEdBc0JoRDs7OztJQXJCRyw4Q0FBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb250ZW50IH0gZnJvbSAnLi9Db250ZW50JztcclxuaW1wb3J0IHsgSVdyaXRlYmFja1J1bGVFbnRpdHkgfSBmcm9tICcuLi8uLi9lbnRpdHkvSVdyaXRlYmFja1J1bGVFbnRpdHknO1xyXG5pbXBvcnQgeyBJV3JpdGViYWNrUnVsZUNvbnRlbnQgfSBmcm9tICcuLi9JV3JpdGViYWNrUnVsZUNvbnRlbnQnO1xyXG5pbXBvcnQgeyBXcml0ZWJhY2tSdWxlRW50aXR5IH0gZnJvbSAnLi4vLi4vZW50aXR5L2ltcGwvV3JpdGViYWNrUnVsZUVudGl0eSc7XHJcbmltcG9ydCB7IEJwbW5Nb2RlbEpzb25IZWxwZXIgfSBmcm9tICcuLi8uLi9CcG1uTW9kZWxKc29uSGVscGVyJztcclxuXHJcbmV4cG9ydCBjbGFzcyBXcml0ZWJhY2tSdWxlQ29udGVudCBleHRlbmRzIENvbnRlbnQ8SVdyaXRlYmFja1J1bGVFbnRpdHk+IGltcGxlbWVudHMgSVdyaXRlYmFja1J1bGVDb250ZW50IHtcclxuICAgIG1hcHBpbmdDb250ZW50OiBzdHJpbmc7XHJcblxyXG4gICAgUmVzZXRCZWZvcmVMb2FkRnJvbSgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcbiAgICAgICAgdGhpcy5tYXBwaW5nQ29udGVudCA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgQ29udmVydFRvSnNvbk9iamVjdCgpIHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIm1hcHBpbmdDb250ZW50XCIsIHRoaXMubWFwcGluZ0NvbnRlbnQpO1xyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgTG9hZEZyb21Kc29uT2JqZWN0KG9iajoge30pOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuICAgICAgICB0aGlzLm1hcHBpbmdDb250ZW50ID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJtYXBwaW5nQ29udGVudFwiKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgcHJvdGVjdGVkIEdldEVudGl0eUNsYXNzKCkge1xyXG4gICAgICAgIHJldHVybiBXcml0ZWJhY2tSdWxlRW50aXR5O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==