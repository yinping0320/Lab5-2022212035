/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Content } from './Content';
import { CreationRuleEntity } from '../../entity/impl/CreationRuleEntity';
import { BpmnModelJsonHelper } from '../../BpmnModelJsonHelper';
var CreationRuleContent = /** @class */ (function (_super) {
    tslib_1.__extends(CreationRuleContent, _super);
    function CreationRuleContent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @return {?}
     */
    CreationRuleContent.prototype.ResetBeforeLoadFrom = /**
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.mappingContent = null;
    };
    /**
     * @return {?}
     */
    CreationRuleContent.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingContent", this.mappingContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "formSettings", this.formSettings);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    CreationRuleContent.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.mappingContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingContent");
        this.formSettings = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "formSettings");
    };
    /**
     * @protected
     * @return {?}
     */
    CreationRuleContent.prototype.GetEntityClass = /**
     * @protected
     * @return {?}
     */
    function () {
        return CreationRuleEntity;
    };
    return CreationRuleContent;
}(Content));
export { CreationRuleContent };
if (false) {
    /** @type {?} */
    CreationRuleContent.prototype.mappingContent;
    /** @type {?} */
    CreationRuleContent.prototype.formSettings;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3JlYXRpb25SdWxlQ29udGVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYWlmL2NvbW1vbi1hcGkvIiwic291cmNlcyI6WyJsaWIvY29udGVudC9pbXBsL0NyZWF0aW9uUnVsZUNvbnRlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBR3BDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRWhFO0lBQXlDLCtDQUE0QjtJQUFyRTs7SUF5QkEsQ0FBQzs7OztJQXJCRyxpREFBbUI7OztJQUFuQjtRQUNJLGlCQUFNLG1CQUFtQixXQUFFLENBQUM7UUFDNUIsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7SUFDL0IsQ0FBQzs7OztJQUVELGlEQUFtQjs7O0lBQW5COztZQUNRLEdBQUcsR0FBRyxpQkFBTSxtQkFBbUIsV0FBRTtRQUNyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ2xGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxjQUFjLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzlFLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFRCxnREFBa0I7Ozs7SUFBbEIsVUFBbUIsR0FBTztRQUN0QixpQkFBTSxrQkFBa0IsWUFBQyxHQUFHLENBQUMsQ0FBQztRQUM5QixJQUFJLENBQUMsY0FBYyxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1FBQzNGLElBQUksQ0FBQyxZQUFZLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQzNGLENBQUM7Ozs7O0lBRVMsNENBQWM7Ozs7SUFBeEI7UUFDSSxPQUFPLGtCQUFrQixDQUFDO0lBQzlCLENBQUM7SUFDTCwwQkFBQztBQUFELENBQUMsQUF6QkQsQ0FBeUMsT0FBTyxHQXlCL0M7Ozs7SUF4QkcsNkNBQXVCOztJQUN2QiwyQ0FBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb250ZW50IH0gZnJvbSAnLi9Db250ZW50JztcclxuaW1wb3J0IHsgSUNyZWF0aW9uUnVsZUVudGl0eSB9IGZyb20gJy4uLy4uL2VudGl0eS9JQ3JlYXRpb25SdWxlRW50aXR5JztcclxuaW1wb3J0IHsgSUNyZWF0aW9uUnVsZUNvbnRlbnQgfSBmcm9tICcuLi9JQ3JlYXRpb25SdWxlQ29udGVudCc7XHJcbmltcG9ydCB7IENyZWF0aW9uUnVsZUVudGl0eSB9IGZyb20gJy4uLy4uL2VudGl0eS9pbXBsL0NyZWF0aW9uUnVsZUVudGl0eSc7XHJcbmltcG9ydCB7IEJwbW5Nb2RlbEpzb25IZWxwZXIgfSBmcm9tICcuLi8uLi9CcG1uTW9kZWxKc29uSGVscGVyJztcclxuXHJcbmV4cG9ydCBjbGFzcyBDcmVhdGlvblJ1bGVDb250ZW50IGV4dGVuZHMgQ29udGVudDxJQ3JlYXRpb25SdWxlRW50aXR5PiBpbXBsZW1lbnRzIElDcmVhdGlvblJ1bGVDb250ZW50IHtcclxuICAgIG1hcHBpbmdDb250ZW50OiBzdHJpbmc7XHJcbiAgICBmb3JtU2V0dGluZ3M6IHN0cmluZztcclxuXHJcbiAgICBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuICAgICAgICB0aGlzLm1hcHBpbmdDb250ZW50ID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBDb252ZXJ0VG9Kc29uT2JqZWN0KCkge1xyXG4gICAgICAgIGxldCBvYmogPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwibWFwcGluZ0NvbnRlbnRcIiwgdGhpcy5tYXBwaW5nQ29udGVudCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiZm9ybVNldHRpbmdzXCIsIHRoaXMuZm9ybVNldHRpbmdzKTtcclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IHt9KTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcbiAgICAgICAgdGhpcy5tYXBwaW5nQ29udGVudCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwibWFwcGluZ0NvbnRlbnRcIik7XHJcbiAgICAgICAgdGhpcy5mb3JtU2V0dGluZ3MgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImZvcm1TZXR0aW5nc1wiKTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgR2V0RW50aXR5Q2xhc3MoKSB7XHJcbiAgICAgICAgcmV0dXJuIENyZWF0aW9uUnVsZUVudGl0eTtcclxuICAgIH1cclxufVxyXG4iXX0=