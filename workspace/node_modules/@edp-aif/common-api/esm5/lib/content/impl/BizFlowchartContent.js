/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Content } from './Content';
import { BpmnModelJsonHelper } from '../../BpmnModelJsonHelper';
import { BizFlowchartEntity } from '../../entity/impl/BizFlowchartEntity';
var BizFlowchartContent = /** @class */ (function (_super) {
    tslib_1.__extends(BizFlowchartContent, _super);
    function BizFlowchartContent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @protected
     * @return {?}
     */
    BizFlowchartContent.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.bpmnModel = null;
    };
    /**
     * @return {?}
     */
    BizFlowchartContent.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bpmnModel", this.bpmnModel);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    BizFlowchartContent.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.bpmnModel = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bpmnModel");
    };
    /**
     * @protected
     * @return {?}
     */
    BizFlowchartContent.prototype.GetEntityClass = /**
     * @protected
     * @return {?}
     */
    function () {
        return BizFlowchartEntity;
    };
    return BizFlowchartContent;
}(Content));
export { BizFlowchartContent };
if (false) {
    /** @type {?} */
    BizFlowchartContent.prototype.bpmnModel;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQml6Rmxvd2NoYXJ0Q29udGVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYWlmL2NvbW1vbi1hcGkvIiwic291cmNlcyI6WyJsaWIvY29udGVudC9pbXBsL0JpekZsb3djaGFydENvbnRlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBR3BDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBRTFFO0lBQXlDLCtDQUE0QjtJQUFyRTs7SUEwQkEsQ0FBQzs7Ozs7SUF2QmEsaURBQW1COzs7O0lBQTdCO1FBQ0ksaUJBQU0sbUJBQW1CLFdBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztJQUMxQixDQUFDOzs7O0lBRU0saURBQW1COzs7SUFBMUI7O1lBQ1EsR0FBRyxHQUFHLGlCQUFNLG1CQUFtQixXQUFFO1FBRXJDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRXhFLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFTSxnREFBa0I7Ozs7SUFBekIsVUFBMEIsR0FBTztRQUM3QixpQkFBTSxrQkFBa0IsWUFBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMsU0FBUyxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNyRixDQUFDOzs7OztJQUVTLDRDQUFjOzs7O0lBQXhCO1FBQ0ksT0FBTyxrQkFBa0IsQ0FBQztJQUM5QixDQUFDO0lBQ0wsMEJBQUM7QUFBRCxDQUFDLEFBMUJELENBQXlDLE9BQU8sR0EwQi9DOzs7O0lBekJHLHdDQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnRlbnQgfSBmcm9tICcuL0NvbnRlbnQnO1xyXG5pbXBvcnQgeyBJQml6Rmxvd2NoYXJ0RW50aXR5IH0gZnJvbSAnLi4vLi4vZW50aXR5L0lCaXpGbG93Y2hhcnRFbnRpdHknO1xyXG5pbXBvcnQgeyBJQml6Rmxvd2NoYXJ0Q29udGVudCB9IGZyb20gJy4uL0lCaXpGbG93Y2hhcnRDb250ZW50JztcclxuaW1wb3J0IHsgQnBtbk1vZGVsSnNvbkhlbHBlciB9IGZyb20gJy4uLy4uL0JwbW5Nb2RlbEpzb25IZWxwZXInO1xyXG5pbXBvcnQgeyBCaXpGbG93Y2hhcnRFbnRpdHkgfSBmcm9tICcuLi8uLi9lbnRpdHkvaW1wbC9CaXpGbG93Y2hhcnRFbnRpdHknO1xyXG5cclxuZXhwb3J0IGNsYXNzIEJpekZsb3djaGFydENvbnRlbnQgZXh0ZW5kcyBDb250ZW50PElCaXpGbG93Y2hhcnRFbnRpdHk+IGltcGxlbWVudHMgSUJpekZsb3djaGFydENvbnRlbnQge1xyXG4gICAgYnBtbk1vZGVsOiBzdHJpbmc7XHJcblxyXG4gICAgcHJvdGVjdGVkIFJlc2V0QmVmb3JlTG9hZEZyb20oKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuUmVzZXRCZWZvcmVMb2FkRnJvbSgpO1xyXG5cclxuICAgICAgICB0aGlzLmJwbW5Nb2RlbCA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENvbnZlcnRUb0pzb25PYmplY3QoKToge30ge1xyXG4gICAgICAgIGxldCBvYmogPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcblxyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImJwbW5Nb2RlbFwiLCB0aGlzLmJwbW5Nb2RlbCk7XHJcblxyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IHt9KTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMuYnBtbk1vZGVsID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJicG1uTW9kZWxcIik7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIEdldEVudGl0eUNsYXNzKCkge1xyXG4gICAgICAgIHJldHVybiBCaXpGbG93Y2hhcnRFbnRpdHk7XHJcbiAgICB9XHJcbn0iXX0=