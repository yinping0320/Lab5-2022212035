/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper } from '../BpmnModelJsonHelper';
import { KitBill } from './KitBill';
import { BillDataTable } from './BillDataTable';
var BillData = /** @class */ (function (_super) {
    tslib_1.__extends(BillData, _super);
    function BillData() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @protected
     * @return {?}
     */
    BillData.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.mainTable = null;
    };
    /**
     * @return {?}
     */
    BillData.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mainTable", this.mainTable);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    BillData.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.mainTable = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, "mainTable", BillDataTable);
        this.ApplyRelationship();
    };
    /*
     * 将数据集、主表、子表、行、字段之间的隶属关系应用到各个对象上。
     * */
    /*
         * 将数据集、主表、子表、行、字段之间的隶属关系应用到各个对象上。
         * */
    /**
     * @return {?}
     */
    BillData.prototype.ApplyRelationship = /*
         * 将数据集、主表、子表、行、字段之间的隶属关系应用到各个对象上。
         * */
    /**
     * @return {?}
     */
    function () {
        this.Apply2Table(this, null, this.mainTable);
        return this;
    };
    /**
     * @private
     * @param {?} attachedBillData
     * @param {?} attachedRow
     * @param {?} table
     * @return {?}
     */
    BillData.prototype.Apply2Table = /**
     * @private
     * @param {?} attachedBillData
     * @param {?} attachedRow
     * @param {?} table
     * @return {?}
     */
    function (attachedBillData, attachedRow, table) {
        var e_1, _a;
        table.attachedBillData = attachedBillData;
        table.attachedRow = attachedRow;
        try {
            for (var _b = tslib_1.__values(table.GetRowList()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var row = _c.value;
                this.Apply2Row(table, row);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    /**
     * @private
     * @param {?} attachedTable
     * @param {?} row
     * @return {?}
     */
    BillData.prototype.Apply2Row = /**
     * @private
     * @param {?} attachedTable
     * @param {?} row
     * @return {?}
     */
    function (attachedTable, row) {
        var e_2, _a, e_3, _b;
        row.attachedTable = attachedTable;
        try {
            for (var _c = tslib_1.__values(row.GetFieldList()), _d = _c.next(); !_d.done; _d = _c.next()) {
                var field = _d.value;
                this.Apply2Field(row, field);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_2) throw e_2.error; }
        }
        try {
            for (var _e = tslib_1.__values(row.GetChildTableList()), _f = _e.next(); !_f.done; _f = _e.next()) {
                var childTable = _f.value;
                this.Apply2Table(attachedTable.attachedBillData, row, childTable);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_3) throw e_3.error; }
        }
    };
    /**
     * @private
     * @param {?} attachedRow
     * @param {?} field
     * @return {?}
     */
    BillData.prototype.Apply2Field = /**
     * @private
     * @param {?} attachedRow
     * @param {?} field
     * @return {?}
     */
    function (attachedRow, field) {
        var e_4, _a;
        field.attachedRow = attachedRow;
        try {
            for (var _b = tslib_1.__values(field.GetSubFieldList()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var subField = _c.value;
                this.Apply2SubField(field, subField);
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
    };
    /**
     * @private
     * @param {?} attachedField
     * @param {?} field
     * @return {?}
     */
    BillData.prototype.Apply2SubField = /**
     * @private
     * @param {?} attachedField
     * @param {?} field
     * @return {?}
     */
    function (attachedField, field) {
        var e_5, _a;
        field.attachedField = field;
        try {
            for (var _b = tslib_1.__values(field.GetSubFieldList()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var subField = _c.value;
                this.Apply2SubField(field, subField);
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_5) throw e_5.error; }
        }
    };
    return BillData;
}(KitBill));
export { BillData };
if (false) {
    /** @type {?} */
    BillData.prototype.mainTable;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmlsbERhdGEuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWFpZi9jb21tb24tYXBpLyIsInNvdXJjZXMiOlsibGliL2JpbGxraXQvQmlsbERhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM3RCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3BDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQU1oRDtJQUE4QixvQ0FBTztJQUFyQzs7SUFzRUEsQ0FBQzs7Ozs7SUFuRWEsc0NBQW1COzs7O0lBQTdCO1FBQ0ksaUJBQU0sbUJBQW1CLFdBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztJQUMxQixDQUFDOzs7O0lBRU0sc0NBQW1COzs7SUFBMUI7O1lBQ1EsR0FBRyxHQUFHLGlCQUFNLG1CQUFtQixXQUFFO1FBRXJDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRXhFLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFTSxxQ0FBa0I7Ozs7SUFBekIsVUFBMEIsR0FBTztRQUM3QixpQkFBTSxrQkFBa0IsWUFBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMsU0FBUyxHQUFHLG1CQUFtQixDQUFDLG1DQUFtQyxDQUFDLEdBQUcsRUFBRSxXQUFXLEVBQUUsYUFBYSxDQUFDLENBQUM7UUFFMUcsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVEOztTQUVLOzs7Ozs7O0lBQ0Usb0NBQWlCOzs7Ozs7SUFBeEI7UUFDSSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRTdDLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7Ozs7Ozs7O0lBRU8sOEJBQVc7Ozs7Ozs7SUFBbkIsVUFBb0IsZ0JBQTBCLEVBQUUsV0FBd0IsRUFBRSxLQUFvQjs7UUFDMUYsS0FBSyxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDO1FBQzFDLEtBQUssQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDOztZQUVoQyxLQUFnQixJQUFBLEtBQUEsaUJBQUEsS0FBSyxDQUFDLFVBQVUsRUFBRSxDQUFBLGdCQUFBLDRCQUFFO2dCQUEvQixJQUFJLEdBQUcsV0FBQTtnQkFDUixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQzthQUM5Qjs7Ozs7Ozs7O0lBQ0wsQ0FBQzs7Ozs7OztJQUVPLDRCQUFTOzs7Ozs7SUFBakIsVUFBa0IsYUFBNEIsRUFBRSxHQUFnQjs7UUFDNUQsR0FBRyxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7O1lBRWxDLEtBQWtCLElBQUEsS0FBQSxpQkFBQSxHQUFHLENBQUMsWUFBWSxFQUFFLENBQUEsZ0JBQUEsNEJBQUU7Z0JBQWpDLElBQUksS0FBSyxXQUFBO2dCQUNWLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO2FBQ2hDOzs7Ozs7Ozs7O1lBRUQsS0FBdUIsSUFBQSxLQUFBLGlCQUFBLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRSxDQUFBLGdCQUFBLDRCQUFFO2dCQUEzQyxJQUFJLFVBQVUsV0FBQTtnQkFDZixJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsRUFBRSxHQUFHLEVBQUUsVUFBVSxDQUFDLENBQUM7YUFDckU7Ozs7Ozs7OztJQUNMLENBQUM7Ozs7Ozs7SUFFTyw4QkFBVzs7Ozs7O0lBQW5CLFVBQW9CLFdBQXdCLEVBQUUsS0FBb0I7O1FBQzlELEtBQUssQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDOztZQUVoQyxLQUFxQixJQUFBLEtBQUEsaUJBQUEsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFBLGdCQUFBLDRCQUFFO2dCQUF6QyxJQUFJLFFBQVEsV0FBQTtnQkFDYixJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQzthQUN4Qzs7Ozs7Ozs7O0lBQ0wsQ0FBQzs7Ozs7OztJQUVPLGlDQUFjOzs7Ozs7SUFBdEIsVUFBdUIsYUFBZ0MsRUFBRSxLQUF1Qjs7UUFDNUUsS0FBSyxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7O1lBRTVCLEtBQXFCLElBQUEsS0FBQSxpQkFBQSxLQUFLLENBQUMsZUFBZSxFQUFFLENBQUEsZ0JBQUEsNEJBQUU7Z0JBQXpDLElBQUksUUFBUSxXQUFBO2dCQUNiLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDO2FBQ3hDOzs7Ozs7Ozs7SUFDTCxDQUFDO0lBQ0wsZUFBQztBQUFELENBQUMsQUF0RUQsQ0FBOEIsT0FBTyxHQXNFcEM7Ozs7SUFyRUcsNkJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnBtbk1vZGVsSnNvbkhlbHBlciB9IGZyb20gJy4uL0JwbW5Nb2RlbEpzb25IZWxwZXInO1xyXG5pbXBvcnQgeyBLaXRCaWxsIH0gZnJvbSAnLi9LaXRCaWxsJztcclxuaW1wb3J0IHsgQmlsbERhdGFUYWJsZSB9IGZyb20gJy4vQmlsbERhdGFUYWJsZSc7XHJcbmltcG9ydCB7IEJpbGxEYXRhUm93IH0gZnJvbSAnLi9CaWxsRGF0YVJvdyc7XHJcbmltcG9ydCB7IEJpbGxEYXRhRmllbGQgfSBmcm9tICcuL0JpbGxEYXRhRmllbGQnO1xyXG5pbXBvcnQgeyBCaWxsRGF0YUZpZWxkQmFzZSB9IGZyb20gJy4vQmlsbERhdGFGaWVsZEJhc2UnO1xyXG5pbXBvcnQgeyBCaWxsRGF0YVN1YkZpZWxkIH0gZnJvbSAnLi9CaWxsRGF0YVN1YkZpZWxkJztcclxuXHJcbmV4cG9ydCBjbGFzcyBCaWxsRGF0YSBleHRlbmRzIEtpdEJpbGwge1xyXG4gICAgbWFpblRhYmxlOiBCaWxsRGF0YVRhYmxlO1xyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICAgICAgdGhpcy5tYWluVGFibGUgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IHt9IHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJtYWluVGFibGVcIiwgdGhpcy5tYWluVGFibGUpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLm1haW5UYWJsZSA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc0pzb25TZXJpYWxpemFibGUob2JqLCBcIm1haW5UYWJsZVwiLCBCaWxsRGF0YVRhYmxlKTtcclxuXHJcbiAgICAgICAgdGhpcy5BcHBseVJlbGF0aW9uc2hpcCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qXHJcbiAgICAgKiDlsIbmlbDmja7pm4bjgIHkuLvooajjgIHlrZDooajjgIHooYzjgIHlrZfmrrXkuYvpl7TnmoTpmrblsZ7lhbPns7vlupTnlKjliLDlkITkuKrlr7nosaHkuIrjgIJcclxuICAgICAqICovXHJcbiAgICBwdWJsaWMgQXBwbHlSZWxhdGlvbnNoaXAoKTogQmlsbERhdGEge1xyXG4gICAgICAgIHRoaXMuQXBwbHkyVGFibGUodGhpcywgbnVsbCwgdGhpcy5tYWluVGFibGUpO1xyXG5cclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIEFwcGx5MlRhYmxlKGF0dGFjaGVkQmlsbERhdGE6IEJpbGxEYXRhLCBhdHRhY2hlZFJvdzogQmlsbERhdGFSb3csIHRhYmxlOiBCaWxsRGF0YVRhYmxlKTogdm9pZCB7XHJcbiAgICAgICAgdGFibGUuYXR0YWNoZWRCaWxsRGF0YSA9IGF0dGFjaGVkQmlsbERhdGE7XHJcbiAgICAgICAgdGFibGUuYXR0YWNoZWRSb3cgPSBhdHRhY2hlZFJvdztcclxuXHJcbiAgICAgICAgZm9yIChsZXQgcm93IG9mIHRhYmxlLkdldFJvd0xpc3QoKSkge1xyXG4gICAgICAgICAgICB0aGlzLkFwcGx5MlJvdyh0YWJsZSwgcm93KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBBcHBseTJSb3coYXR0YWNoZWRUYWJsZTogQmlsbERhdGFUYWJsZSwgcm93OiBCaWxsRGF0YVJvdyk6IHZvaWQge1xyXG4gICAgICAgIHJvdy5hdHRhY2hlZFRhYmxlID0gYXR0YWNoZWRUYWJsZTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgZmllbGQgb2Ygcm93LkdldEZpZWxkTGlzdCgpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQXBwbHkyRmllbGQocm93LCBmaWVsZCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmb3IgKGxldCBjaGlsZFRhYmxlIG9mIHJvdy5HZXRDaGlsZFRhYmxlTGlzdCgpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQXBwbHkyVGFibGUoYXR0YWNoZWRUYWJsZS5hdHRhY2hlZEJpbGxEYXRhLCByb3csIGNoaWxkVGFibGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIEFwcGx5MkZpZWxkKGF0dGFjaGVkUm93OiBCaWxsRGF0YVJvdywgZmllbGQ6IEJpbGxEYXRhRmllbGQpOiB2b2lkIHtcclxuICAgICAgICBmaWVsZC5hdHRhY2hlZFJvdyA9IGF0dGFjaGVkUm93O1xyXG5cclxuICAgICAgICBmb3IgKGxldCBzdWJGaWVsZCBvZiBmaWVsZC5HZXRTdWJGaWVsZExpc3QoKSkge1xyXG4gICAgICAgICAgICB0aGlzLkFwcGx5MlN1YkZpZWxkKGZpZWxkLCBzdWJGaWVsZCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgQXBwbHkyU3ViRmllbGQoYXR0YWNoZWRGaWVsZDogQmlsbERhdGFGaWVsZEJhc2UsIGZpZWxkOiBCaWxsRGF0YVN1YkZpZWxkKTogdm9pZCB7XHJcbiAgICAgICAgZmllbGQuYXR0YWNoZWRGaWVsZCA9IGZpZWxkO1xyXG5cclxuICAgICAgICBmb3IgKGxldCBzdWJGaWVsZCBvZiBmaWVsZC5HZXRTdWJGaWVsZExpc3QoKSkge1xyXG4gICAgICAgICAgICB0aGlzLkFwcGx5MlN1YkZpZWxkKGZpZWxkLCBzdWJGaWVsZCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==