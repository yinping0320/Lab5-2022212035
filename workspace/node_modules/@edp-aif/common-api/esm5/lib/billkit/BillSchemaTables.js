/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var BillSchemaTables = /** @class */ (function () {
    function BillSchemaTables() {
        this._map = {};
        this._list = new Array();
    }
    Object.defineProperty(BillSchemaTables.prototype, "map", {
        get: /**
         * @return {?}
         */
        function () {
            return this._map;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BillSchemaTables.prototype, "list", {
        get: /**
         * @return {?}
         */
        function () {
            return this._list;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    BillSchemaTables.prototype.GetMap = /**
     * @return {?}
     */
    function () {
        return this._map;
    };
    /**
     * @return {?}
     */
    BillSchemaTables.prototype.GetList = /**
     * @return {?}
     */
    function () {
        return this._list;
    };
    /**
     * @param {?} table
     * @return {?}
     */
    BillSchemaTables.prototype.Add = /**
     * @param {?} table
     * @return {?}
     */
    function (table) {
        this._map[table.tableName] = table;
        this._list.push(table);
    };
    /**
     * @param {?} table
     * @return {?}
     */
    BillSchemaTables.prototype.Remove = /**
     * @param {?} table
     * @return {?}
     */
    function (table) {
        /** @type {?} */
        var bak = this._map[table.tableName];
        delete this._map[table.tableName];
        for (var i = 0; i < this._list.length; i++) {
            if (this._list[i].tableName == bak.tableName) {
                this._list.splice(i, 1);
                return true;
            }
        }
        return false;
    };
    /**
     * @return {?}
     */
    BillSchemaTables.prototype.Clear = /**
     * @return {?}
     */
    function () {
        this._map = {};
        this._list.length = 0;
    };
    return BillSchemaTables;
}());
export { BillSchemaTables };
if (false) {
    /**
     * @type {?}
     * @private
     */
    BillSchemaTables.prototype._map;
    /**
     * @type {?}
     * @private
     */
    BillSchemaTables.prototype._list;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmlsbFNjaGVtYVRhYmxlcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYWlmL2NvbW1vbi1hcGkvIiwic291cmNlcyI6WyJsaWIvYmlsbGtpdC9CaWxsU2NoZW1hVGFibGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQTtJQUFBO1FBQ1ksU0FBSSxHQUF1QyxFQUFFLENBQUM7UUFDOUMsVUFBSyxHQUEyQixJQUFJLEtBQUssRUFBRSxDQUFDO0lBeUN4RCxDQUFDO0lBdkNHLHNCQUFJLGlDQUFHOzs7O1FBQVA7WUFDSSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDckIsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSxrQ0FBSTs7OztRQUFSO1lBQ0ksT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3RCLENBQUM7OztPQUFBOzs7O0lBRU0saUNBQU07OztJQUFiO1FBQ0ksT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ3JCLENBQUM7Ozs7SUFFTSxrQ0FBTzs7O0lBQWQ7UUFDSSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDdEIsQ0FBQzs7Ozs7SUFFTSw4QkFBRzs7OztJQUFWLFVBQVcsS0FBc0I7UUFDN0IsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsS0FBSyxDQUFDO1FBQ25DLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzNCLENBQUM7Ozs7O0lBRU0saUNBQU07Ozs7SUFBYixVQUFjLEtBQXNCOztZQUMxQixHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDO1FBQ3RDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7UUFFbEMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3hDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLElBQUksR0FBRyxDQUFDLFNBQVMsRUFBRTtnQkFDMUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUN4QixPQUFPLElBQUksQ0FBQzthQUNmO1NBQ0o7UUFFRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDOzs7O0lBRU0sZ0NBQUs7OztJQUFaO1FBQ0ksSUFBSSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7UUFDZixJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUNMLHVCQUFDO0FBQUQsQ0FBQyxBQTNDRCxJQTJDQzs7Ozs7OztJQTFDRyxnQ0FBc0Q7Ozs7O0lBQ3RELGlDQUFvRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJpbGxTY2hlbWFUYWJsZSB9IGZyb20gJy4vQmlsbFNjaGVtYVRhYmxlJztcclxuXHJcbmV4cG9ydCBjbGFzcyBCaWxsU2NoZW1hVGFibGVzIHtcclxuICAgIHByaXZhdGUgX21hcDogeyBba2V5OiBzdHJpbmddOiBCaWxsU2NoZW1hVGFibGUgfSA9IHt9O1xyXG4gICAgcHJpdmF0ZSBfbGlzdDogQXJyYXk8QmlsbFNjaGVtYVRhYmxlPiA9IG5ldyBBcnJheSgpO1xyXG5cclxuICAgIGdldCBtYXAoKTogeyBba2V5OiBzdHJpbmddOiBCaWxsU2NoZW1hVGFibGUgfSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX21hcDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgbGlzdCgpOiBBcnJheTxCaWxsU2NoZW1hVGFibGU+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbGlzdDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgR2V0TWFwKCk6IHsgW2tleTogc3RyaW5nXTogQmlsbFNjaGVtYVRhYmxlIH0ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9tYXA7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIEdldExpc3QoKTogQXJyYXk8QmlsbFNjaGVtYVRhYmxlPiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xpc3Q7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIEFkZCh0YWJsZTogQmlsbFNjaGVtYVRhYmxlKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fbWFwW3RhYmxlLnRhYmxlTmFtZV0gPSB0YWJsZTtcclxuICAgICAgICB0aGlzLl9saXN0LnB1c2godGFibGUpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBSZW1vdmUodGFibGU6IEJpbGxTY2hlbWFUYWJsZSk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGNvbnN0IGJhayA9IHRoaXMuX21hcFt0YWJsZS50YWJsZU5hbWVdO1xyXG4gICAgICAgIGRlbGV0ZSB0aGlzLl9tYXBbdGFibGUudGFibGVOYW1lXTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9saXN0Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9saXN0W2ldLnRhYmxlTmFtZSA9PSBiYWsudGFibGVOYW1lKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9saXN0LnNwbGljZShpLCAxKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENsZWFyKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX21hcCA9IHt9O1xyXG4gICAgICAgIHRoaXMuX2xpc3QubGVuZ3RoID0gMDtcclxuICAgIH1cclxufVxyXG4iXX0=