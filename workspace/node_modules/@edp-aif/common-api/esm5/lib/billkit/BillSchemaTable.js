/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper } from '../BpmnModelJsonHelper';
import { BillSchemaFields } from './BillSchemaFields';
import { BillSchemaField } from './BillSchemaField';
import { KitTable } from './KitTable';
import { BillSchemaTables } from './BillSchemaTables';
var BillSchemaTable = /** @class */ (function (_super) {
    tslib_1.__extends(BillSchemaTable, _super);
    function BillSchemaTable() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.fields = new BillSchemaFields();
        _this.childTables = new BillSchemaTables();
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    BillSchemaTable.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.caption = null;
        this.attachedBillSchema = null;
        this.attachedTable = null;
        this.fields.Clear();
        this.childTables.Clear();
    };
    /**
     * @return {?}
     */
    BillSchemaTable.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        var e_1, _a, e_2, _b;
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "caption", this.caption);
        /** @type {?} */
        var fields = [];
        try {
            for (var _c = tslib_1.__values(this.fields.GetList()), _d = _c.next(); !_d.done; _d = _c.next()) {
                var value = _d.value;
                fields.push(value.ConvertToJsonObject());
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
        BpmnModelJsonHelper.SetAttributeValue(obj, "fields", fields);
        if (this.childTables.GetList().length > 0) {
            /** @type {?} */
            var childTables = [];
            try {
                for (var _e = tslib_1.__values(this.childTables.GetList()), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var value = _f.value;
                    childTables.push(value.ConvertToJsonObject());
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_2) throw e_2.error; }
            }
            BpmnModelJsonHelper.SetAttributeValue(obj, "childTables", childTables);
        }
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    BillSchemaTable.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var e_3, _a, e_4, _b;
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.caption = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "caption");
        /** @type {?} */
        var fields = BpmnModelJsonHelper.GetAttributeValue(obj, "fields");
        try {
            for (var fields_1 = tslib_1.__values(fields), fields_1_1 = fields_1.next(); !fields_1_1.done; fields_1_1 = fields_1.next()) {
                var item = fields_1_1.value;
                /** @type {?} */
                var value = new BillSchemaField();
                value.LoadFromJsonObject(item);
                this.fields.Add(value);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (fields_1_1 && !fields_1_1.done && (_a = fields_1.return)) _a.call(fields_1);
            }
            finally { if (e_3) throw e_3.error; }
        }
        /** @type {?} */
        var childTables = BpmnModelJsonHelper.GetAttributeValue(obj, "childTables");
        if (childTables != null) {
            try {
                for (var childTables_1 = tslib_1.__values(childTables), childTables_1_1 = childTables_1.next(); !childTables_1_1.done; childTables_1_1 = childTables_1.next()) {
                    var item = childTables_1_1.value;
                    /** @type {?} */
                    var value = new BillSchemaTable();
                    value.LoadFromJsonObject(item);
                    this.childTables.Add(value);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (childTables_1_1 && !childTables_1_1.done && (_b = childTables_1.return)) _b.call(childTables_1);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
    };
    /**
     * @param {?} field
     * @return {?}
     */
    BillSchemaTable.prototype.AddField = /**
     * @param {?} field
     * @return {?}
     */
    function (field) {
        this.fields.Add(field);
    };
    /**
     * @return {?}
     */
    BillSchemaTable.prototype.getFieldMap = /**
     * @return {?}
     */
    function () {
        return this.fields.GetMap();
    };
    /**
     * @return {?}
     */
    BillSchemaTable.prototype.getFieldList = /**
     * @return {?}
     */
    function () {
        return this.fields.GetList();
    };
    /**
     * @param {?} table
     * @return {?}
     */
    BillSchemaTable.prototype.AddChildTable = /**
     * @param {?} table
     * @return {?}
     */
    function (table) {
        this.childTables.Add(table);
    };
    /**
     * @return {?}
     */
    BillSchemaTable.prototype.GetChildTableMap = /**
     * @return {?}
     */
    function () {
        return this.childTables.GetMap();
    };
    /**
     * @return {?}
     */
    BillSchemaTable.prototype.GetChildTableList = /**
     * @return {?}
     */
    function () {
        return this.childTables.GetList();
    };
    return BillSchemaTable;
}(KitTable));
export { BillSchemaTable };
if (false) {
    /** @type {?} */
    BillSchemaTable.prototype.caption;
    /** @type {?} */
    BillSchemaTable.prototype.fields;
    /** @type {?} */
    BillSchemaTable.prototype.childTables;
    /** @type {?} */
    BillSchemaTable.prototype.attachedBillSchema;
    /** @type {?} */
    BillSchemaTable.prototype.attachedTable;
}
//# sourceMappingURL=data:application/json;base64,