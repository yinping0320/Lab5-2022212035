/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var BillDataFields = /** @class */ (function () {
    function BillDataFields() {
        this._map = {};
        this._list = new Array();
    }
    Object.defineProperty(BillDataFields.prototype, "map", {
        get: /**
         * @return {?}
         */
        function () {
            return this._map;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BillDataFields.prototype, "list", {
        get: /**
         * @return {?}
         */
        function () {
            return this._list;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} field
     * @return {?}
     */
    BillDataFields.prototype.Add = /**
     * @param {?} field
     * @return {?}
     */
    function (field) {
        this._map[field.fieldName] = field;
        this._list.push(field);
    };
    /**
     * @param {?} field
     * @return {?}
     */
    BillDataFields.prototype.Remove = /**
     * @param {?} field
     * @return {?}
     */
    function (field) {
        /** @type {?} */
        var bak = this._map[field.fieldName];
        delete this._map[field.fieldName];
        for (var i = 0; i < this._list.length; i++) {
            if (this._list[i].fieldName == bak.fieldName) {
                this._list.splice(i, 1);
                return true;
            }
        }
        return false;
    };
    /**
     * @return {?}
     */
    BillDataFields.prototype.Clear = /**
     * @return {?}
     */
    function () {
        this._map = {};
        this._list.length = 0;
    };
    /**
     * @return {?}
     */
    BillDataFields.prototype.GetMap = /**
     * @return {?}
     */
    function () {
        return this._map;
    };
    /**
     * @return {?}
     */
    BillDataFields.prototype.GetList = /**
     * @return {?}
     */
    function () {
        return this._list;
    };
    return BillDataFields;
}());
export { BillDataFields };
if (false) {
    /**
     * @type {?}
     * @private
     */
    BillDataFields.prototype._map;
    /**
     * @type {?}
     * @private
     */
    BillDataFields.prototype._list;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmlsbERhdGFGaWVsZHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWFpZi9jb21tb24tYXBpLyIsInNvdXJjZXMiOlsibGliL2JpbGxraXQvQmlsbERhdGFGaWVsZHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBO0lBQUE7UUFDWSxTQUFJLEdBQXFDLEVBQUUsQ0FBQztRQUM1QyxVQUFLLEdBQXlCLElBQUksS0FBSyxFQUFFLENBQUM7SUF5Q3RELENBQUM7SUF2Q0csc0JBQUksK0JBQUc7Ozs7UUFBUDtZQUNJLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztRQUNyQixDQUFDOzs7T0FBQTtJQUVELHNCQUFJLGdDQUFJOzs7O1FBQVI7WUFDSSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDdEIsQ0FBQzs7O09BQUE7Ozs7O0lBRU0sNEJBQUc7Ozs7SUFBVixVQUFXLEtBQW9CO1FBQzNCLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUNuQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQixDQUFDOzs7OztJQUVNLCtCQUFNOzs7O0lBQWIsVUFBYyxLQUFvQjs7WUFDeEIsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQztRQUN0QyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRWxDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN4QyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxJQUFJLEdBQUcsQ0FBQyxTQUFTLEVBQUU7Z0JBQzFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDeEIsT0FBTyxJQUFJLENBQUM7YUFDZjtTQUNKO1FBRUQsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQzs7OztJQUVNLDhCQUFLOzs7SUFBWjtRQUNJLElBQUksQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDO1FBQ2YsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQzFCLENBQUM7Ozs7SUFFTSwrQkFBTTs7O0lBQWI7UUFDSSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDckIsQ0FBQzs7OztJQUVNLGdDQUFPOzs7SUFBZDtRQUNJLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN0QixDQUFDO0lBQ0wscUJBQUM7QUFBRCxDQUFDLEFBM0NELElBMkNDOzs7Ozs7O0lBMUNHLDhCQUFvRDs7Ozs7SUFDcEQsK0JBQWtEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmlsbERhdGFGaWVsZCB9IGZyb20gJy4vQmlsbERhdGFGaWVsZCc7XHJcblxyXG5leHBvcnQgY2xhc3MgQmlsbERhdGFGaWVsZHMge1xyXG4gICAgcHJpdmF0ZSBfbWFwOiB7IFtrZXk6IHN0cmluZ106IEJpbGxEYXRhRmllbGQgfSA9IHt9O1xyXG4gICAgcHJpdmF0ZSBfbGlzdDogQXJyYXk8QmlsbERhdGFGaWVsZD4gPSBuZXcgQXJyYXkoKTtcclxuXHJcbiAgICBnZXQgbWFwKCk6IHsgW2tleTogc3RyaW5nXTogQmlsbERhdGFGaWVsZCB9IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbWFwO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBsaXN0KCk6IEFycmF5PEJpbGxEYXRhRmllbGQ+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbGlzdDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQWRkKGZpZWxkOiBCaWxsRGF0YUZpZWxkKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fbWFwW2ZpZWxkLmZpZWxkTmFtZV0gPSBmaWVsZDtcclxuICAgICAgICB0aGlzLl9saXN0LnB1c2goZmllbGQpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBSZW1vdmUoZmllbGQ6IEJpbGxEYXRhRmllbGQpOiBib29sZWFuIHtcclxuICAgICAgICBjb25zdCBiYWsgPSB0aGlzLl9tYXBbZmllbGQuZmllbGROYW1lXTtcclxuICAgICAgICBkZWxldGUgdGhpcy5fbWFwW2ZpZWxkLmZpZWxkTmFtZV07XHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fbGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fbGlzdFtpXS5maWVsZE5hbWUgPT0gYmFrLmZpZWxkTmFtZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fbGlzdC5zcGxpY2UoaSwgMSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBDbGVhcigpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9tYXAgPSB7fTtcclxuICAgICAgICB0aGlzLl9saXN0Lmxlbmd0aCA9IDA7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIEdldE1hcCgpOiB7IFtrZXk6IHN0cmluZ106IEJpbGxEYXRhRmllbGQgfSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX21hcDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgR2V0TGlzdCgpOiBBcnJheTxCaWxsRGF0YUZpZWxkPiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xpc3Q7XHJcbiAgICB9XHJcbn1cclxuIl19