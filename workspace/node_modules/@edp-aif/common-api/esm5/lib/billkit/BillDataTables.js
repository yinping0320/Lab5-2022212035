/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var BillDataTables = /** @class */ (function () {
    function BillDataTables() {
        this._map = {};
        this._list = new Array();
    }
    Object.defineProperty(BillDataTables.prototype, "map", {
        get: /**
         * @return {?}
         */
        function () {
            return this._map;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BillDataTables.prototype, "list", {
        get: /**
         * @return {?}
         */
        function () {
            return this._list;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    BillDataTables.prototype.GetMap = /**
     * @return {?}
     */
    function () {
        return this._map;
    };
    /**
     * @return {?}
     */
    BillDataTables.prototype.GetList = /**
     * @return {?}
     */
    function () {
        return this._list;
    };
    /**
     * @param {?} table
     * @return {?}
     */
    BillDataTables.prototype.Add = /**
     * @param {?} table
     * @return {?}
     */
    function (table) {
        this._map[table.tableName] = table;
        this._list.push(table);
    };
    /**
     * @param {?} table
     * @return {?}
     */
    BillDataTables.prototype.Remove = /**
     * @param {?} table
     * @return {?}
     */
    function (table) {
        /** @type {?} */
        var bak = this._map[table.tableName];
        delete this._map[table.tableName];
        for (var i = 0; i < this._list.length; i++) {
            if (this._list[i].tableName == bak.tableName) {
                this._list.splice(i, 1);
                return true;
            }
        }
        return false;
    };
    /**
     * @return {?}
     */
    BillDataTables.prototype.Clear = /**
     * @return {?}
     */
    function () {
        this._map = {};
        this._list.length = 0;
    };
    return BillDataTables;
}());
export { BillDataTables };
if (false) {
    /**
     * @type {?}
     * @private
     */
    BillDataTables.prototype._map;
    /**
     * @type {?}
     * @private
     */
    BillDataTables.prototype._list;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmlsbERhdGFUYWJsZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWFpZi9jb21tb24tYXBpLyIsInNvdXJjZXMiOlsibGliL2JpbGxraXQvQmlsbERhdGFUYWJsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBO0lBQUE7UUFDWSxTQUFJLEdBQXFDLEVBQUUsQ0FBQztRQUM1QyxVQUFLLEdBQXlCLElBQUksS0FBSyxFQUFFLENBQUM7SUF5Q3RELENBQUM7SUF2Q0csc0JBQUksK0JBQUc7Ozs7UUFBUDtZQUNJLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztRQUNyQixDQUFDOzs7T0FBQTtJQUVELHNCQUFJLGdDQUFJOzs7O1FBQVI7WUFDSSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDdEIsQ0FBQzs7O09BQUE7Ozs7SUFFTSwrQkFBTTs7O0lBQWI7UUFDSSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDckIsQ0FBQzs7OztJQUVNLGdDQUFPOzs7SUFBZDtRQUNJLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN0QixDQUFDOzs7OztJQUVNLDRCQUFHOzs7O0lBQVYsVUFBVyxLQUFvQjtRQUMzQixJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxLQUFLLENBQUM7UUFDbkMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0IsQ0FBQzs7Ozs7SUFFTSwrQkFBTTs7OztJQUFiLFVBQWMsS0FBb0I7O1lBQ3hCLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUM7UUFDdEMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUVsQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDeEMsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsSUFBSSxHQUFHLENBQUMsU0FBUyxFQUFFO2dCQUMxQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3hCLE9BQU8sSUFBSSxDQUFDO2FBQ2Y7U0FDSjtRQUVELE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7Ozs7SUFFTSw4QkFBSzs7O0lBQVo7UUFDSSxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztRQUNmLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBQ0wscUJBQUM7QUFBRCxDQUFDLEFBM0NELElBMkNDOzs7Ozs7O0lBMUNHLDhCQUFvRDs7Ozs7SUFDcEQsK0JBQWtEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmlsbERhdGFUYWJsZSB9IGZyb20gJy4vQmlsbERhdGFUYWJsZSc7XHJcblxyXG5leHBvcnQgY2xhc3MgQmlsbERhdGFUYWJsZXMge1xyXG4gICAgcHJpdmF0ZSBfbWFwOiB7IFtrZXk6IHN0cmluZ106IEJpbGxEYXRhVGFibGUgfSA9IHt9O1xyXG4gICAgcHJpdmF0ZSBfbGlzdDogQXJyYXk8QmlsbERhdGFUYWJsZT4gPSBuZXcgQXJyYXkoKTtcclxuXHJcbiAgICBnZXQgbWFwKCk6IHsgW2tleTogc3RyaW5nXTogQmlsbERhdGFUYWJsZSB9IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbWFwO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBsaXN0KCk6IEFycmF5PEJpbGxEYXRhVGFibGU+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbGlzdDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgR2V0TWFwKCk6IHsgW2tleTogc3RyaW5nXTogQmlsbERhdGFUYWJsZSB9IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbWFwO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBHZXRMaXN0KCk6IEFycmF5PEJpbGxEYXRhVGFibGU+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbGlzdDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQWRkKHRhYmxlOiBCaWxsRGF0YVRhYmxlKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fbWFwW3RhYmxlLnRhYmxlTmFtZV0gPSB0YWJsZTtcclxuICAgICAgICB0aGlzLl9saXN0LnB1c2godGFibGUpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBSZW1vdmUodGFibGU6IEJpbGxEYXRhVGFibGUpOiBib29sZWFuIHtcclxuICAgICAgICBjb25zdCBiYWsgPSB0aGlzLl9tYXBbdGFibGUudGFibGVOYW1lXTtcclxuICAgICAgICBkZWxldGUgdGhpcy5fbWFwW3RhYmxlLnRhYmxlTmFtZV07XHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fbGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fbGlzdFtpXS50YWJsZU5hbWUgPT0gYmFrLnRhYmxlTmFtZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fbGlzdC5zcGxpY2UoaSwgMSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBDbGVhcigpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9tYXAgPSB7fTtcclxuICAgICAgICB0aGlzLl9saXN0Lmxlbmd0aCA9IDA7XHJcbiAgICB9XHJcbn1cclxuIl19