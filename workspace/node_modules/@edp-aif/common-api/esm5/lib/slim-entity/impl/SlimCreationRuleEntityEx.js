/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { SlimCreationRuleEntity } from './SlimCreationRuleEntity';
import { BpmnModelJsonHelper } from '../../BpmnModelJsonHelper';
var SlimCreationRuleEntityEx = /** @class */ (function (_super) {
    tslib_1.__extends(SlimCreationRuleEntityEx, _super);
    function SlimCreationRuleEntityEx(entity) {
        var _this = _super.call(this) || this;
        if (entity != null) {
            _this.id = entity.id;
            _this.description = entity.description;
            _this.mappingComponentId = entity.mappingComponentId;
            _this.mappingRuleMetadataId = entity.mappingRuleMetadataId;
            _this.name = entity.name;
            _this.sourceVoId = entity.sourceVoId;
            _this.sourceBeId = entity.sourceBeId;
            _this.suCode = entity.suCode;
            _this.targetVoId = entity.targetVoId;
            _this.targetBeId = entity.targetBeId;
            _this.targetSuCode = entity.targetSuCode;
            _this.targetVoProxyId = entity.targetVoProxyId;
            _this.formSettingsId = entity.formSettingsId;
            _this.mappingRuleId = entity.mappingRuleId;
        }
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    SlimCreationRuleEntityEx.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.name = null;
        this.sourceVoName = null;
        this.targetVoName = null;
        this.targetVoProxyName = null;
        this.description = null;
    };
    /**
     * @return {?}
     */
    SlimCreationRuleEntityEx.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "name", this.name);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoName", this.sourceVoName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoName", this.targetVoName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyName", this.targetVoProxyName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "description", this.description);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    SlimCreationRuleEntityEx.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.name = BpmnModelJsonHelper.GetAttributeValue(obj, "name");
        this.sourceVoName = BpmnModelJsonHelper.GetAttributeValue(obj, "sourceVoName");
        this.targetVoName = BpmnModelJsonHelper.GetAttributeValue(obj, "targetVoName");
        this.targetVoProxyName = BpmnModelJsonHelper.GetAttributeValue(obj, "targetVoProxyName");
        this.description = BpmnModelJsonHelper.GetAttributeValue(obj, "description");
    };
    return SlimCreationRuleEntityEx;
}(SlimCreationRuleEntity));
export { SlimCreationRuleEntityEx };
if (false) {
    /** @type {?} */
    SlimCreationRuleEntityEx.prototype.name;
    /** @type {?} */
    SlimCreationRuleEntityEx.prototype.sourceVoName;
    /** @type {?} */
    SlimCreationRuleEntityEx.prototype.targetVoName;
    /** @type {?} */
    SlimCreationRuleEntityEx.prototype.targetVoProxyName;
    /** @type {?} */
    SlimCreationRuleEntityEx.prototype.description;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xpbUNyZWF0aW9uUnVsZUVudGl0eUV4LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1haWYvY29tbW9uLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9zbGltLWVudGl0eS9pbXBsL1NsaW1DcmVhdGlvblJ1bGVFbnRpdHlFeC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBR2hFO0lBQThDLG9EQUFzQjtJQU9oRSxrQ0FBWSxNQUEyQjtRQUF2QyxZQUNJLGlCQUFPLFNBa0JWO1FBaEJHLElBQUcsTUFBTSxJQUFJLElBQUksRUFBQztZQUNkLEtBQUksQ0FBQyxFQUFFLEdBQUcsTUFBTSxDQUFDLEVBQUUsQ0FBQztZQUNwQixLQUFJLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQyxXQUFXLENBQUM7WUFDdEMsS0FBSSxDQUFDLGtCQUFrQixHQUFHLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQztZQUNwRCxLQUFJLENBQUMscUJBQXFCLEdBQUcsTUFBTSxDQUFDLHFCQUFxQixDQUFDO1lBQzFELEtBQUksQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQztZQUN4QixLQUFJLENBQUMsVUFBVSxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUM7WUFDcEMsS0FBSSxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDO1lBQ3BDLEtBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztZQUM1QixLQUFJLENBQUMsVUFBVSxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUM7WUFDcEMsS0FBSSxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDO1lBQ3BDLEtBQUksQ0FBQyxZQUFZLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQztZQUN4QyxLQUFJLENBQUMsZUFBZSxHQUFHLE1BQU0sQ0FBQyxlQUFlLENBQUM7WUFDOUMsS0FBSSxDQUFDLGNBQWMsR0FBRyxNQUFNLENBQUMsY0FBYyxDQUFDO1lBQzVDLEtBQUksQ0FBQyxhQUFhLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQztTQUM3Qzs7SUFDTCxDQUFDOzs7OztJQUVTLHNEQUFtQjs7OztJQUE3QjtRQUNJLGlCQUFNLG1CQUFtQixXQUFFLENBQUM7UUFFNUIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7UUFDekIsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7UUFDekIsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQztRQUM5QixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztJQUM1QixDQUFDOzs7O0lBRU0sc0RBQW1COzs7SUFBMUI7O1lBQ1EsR0FBRyxHQUFHLGlCQUFNLG1CQUFtQixXQUFFO1FBRXJDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlELG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxjQUFjLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzlFLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxjQUFjLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzlFLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUN4RixtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUU1RSxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBR00scURBQWtCOzs7O0lBQXpCLFVBQTBCLEdBQU87UUFDN0IsaUJBQU0sa0JBQWtCLFlBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLElBQUksR0FBRyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDL0QsSUFBSSxDQUFDLFlBQVksR0FBRyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsY0FBYyxDQUFDLENBQUM7UUFDL0UsSUFBSSxDQUFDLFlBQVksR0FBRyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsY0FBYyxDQUFDLENBQUM7UUFDL0UsSUFBSSxDQUFDLGlCQUFpQixHQUFHLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO1FBQ3pGLElBQUksQ0FBQyxXQUFXLEdBQUcsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBQ2pGLENBQUM7SUFDTCwrQkFBQztBQUFELENBQUMsQUE1REQsQ0FBOEMsc0JBQXNCLEdBNERuRTs7OztJQTNERyx3Q0FBYTs7SUFDYixnREFBcUI7O0lBQ3JCLGdEQUFxQjs7SUFDckIscURBQTBCOztJQUMxQiwrQ0FBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJU2xpbUNyZWF0aW9uUnVsZUVudGl0eUV4IH0gZnJvbSAnLi4vSVNsaW1DcmVhdGlvblJ1bGVFbnRpdHlFeCc7XHJcbmltcG9ydCB7IFNsaW1DcmVhdGlvblJ1bGVFbnRpdHkgfSBmcm9tICcuL1NsaW1DcmVhdGlvblJ1bGVFbnRpdHknO1xyXG5pbXBvcnQgeyBCcG1uTW9kZWxKc29uSGVscGVyIH0gZnJvbSAnLi4vLi4vQnBtbk1vZGVsSnNvbkhlbHBlcic7XHJcbmltcG9ydCB7IENyZWF0aW9uUnVsZUVudGl0eSB9IGZyb20gJy4uLy4uL2VudGl0eS9pbXBsL0NyZWF0aW9uUnVsZUVudGl0eSc7XHJcblxyXG5leHBvcnQgY2xhc3MgU2xpbUNyZWF0aW9uUnVsZUVudGl0eUV4IGV4dGVuZHMgU2xpbUNyZWF0aW9uUnVsZUVudGl0eSBpbXBsZW1lbnRzIElTbGltQ3JlYXRpb25SdWxlRW50aXR5RXgge1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG4gICAgc291cmNlVm9OYW1lOiBzdHJpbmc7XHJcbiAgICB0YXJnZXRWb05hbWU6IHN0cmluZztcclxuICAgIHRhcmdldFZvUHJveHlOYW1lOiBzdHJpbmc7XHJcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGVudGl0eT86IENyZWF0aW9uUnVsZUVudGl0eSkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcblxyXG4gICAgICAgIGlmKGVudGl0eSAhPSBudWxsKXtcclxuICAgICAgICAgICAgdGhpcy5pZCA9IGVudGl0eS5pZDtcclxuICAgICAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGVudGl0eS5kZXNjcmlwdGlvbjtcclxuICAgICAgICAgICAgdGhpcy5tYXBwaW5nQ29tcG9uZW50SWQgPSBlbnRpdHkubWFwcGluZ0NvbXBvbmVudElkO1xyXG4gICAgICAgICAgICB0aGlzLm1hcHBpbmdSdWxlTWV0YWRhdGFJZCA9IGVudGl0eS5tYXBwaW5nUnVsZU1ldGFkYXRhSWQ7XHJcbiAgICAgICAgICAgIHRoaXMubmFtZSA9IGVudGl0eS5uYW1lO1xyXG4gICAgICAgICAgICB0aGlzLnNvdXJjZVZvSWQgPSBlbnRpdHkuc291cmNlVm9JZDtcclxuICAgICAgICAgICAgdGhpcy5zb3VyY2VCZUlkID0gZW50aXR5LnNvdXJjZUJlSWQ7XHJcbiAgICAgICAgICAgIHRoaXMuc3VDb2RlID0gZW50aXR5LnN1Q29kZTtcclxuICAgICAgICAgICAgdGhpcy50YXJnZXRWb0lkID0gZW50aXR5LnRhcmdldFZvSWQ7XHJcbiAgICAgICAgICAgIHRoaXMudGFyZ2V0QmVJZCA9IGVudGl0eS50YXJnZXRCZUlkO1xyXG4gICAgICAgICAgICB0aGlzLnRhcmdldFN1Q29kZSA9IGVudGl0eS50YXJnZXRTdUNvZGU7XHJcbiAgICAgICAgICAgIHRoaXMudGFyZ2V0Vm9Qcm94eUlkID0gZW50aXR5LnRhcmdldFZvUHJveHlJZDtcclxuICAgICAgICAgICAgdGhpcy5mb3JtU2V0dGluZ3NJZCA9IGVudGl0eS5mb3JtU2V0dGluZ3NJZDtcclxuICAgICAgICAgICAgdGhpcy5tYXBwaW5nUnVsZUlkID0gZW50aXR5Lm1hcHBpbmdSdWxlSWQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICAgICAgdGhpcy5uYW1lID0gbnVsbDtcclxuICAgICAgICB0aGlzLnNvdXJjZVZvTmFtZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy50YXJnZXRWb05hbWUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMudGFyZ2V0Vm9Qcm94eU5hbWUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IHt9IHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJuYW1lXCIsIHRoaXMubmFtZSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwic291cmNlVm9OYW1lXCIsIHRoaXMuc291cmNlVm9OYW1lKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJ0YXJnZXRWb05hbWVcIiwgdGhpcy50YXJnZXRWb05hbWUpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInRhcmdldFZvUHJveHlOYW1lXCIsIHRoaXMudGFyZ2V0Vm9Qcm94eU5hbWUpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImRlc2NyaXB0aW9uXCIsIHRoaXMuZGVzY3JpcHRpb24pO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBwdWJsaWMgTG9hZEZyb21Kc29uT2JqZWN0KG9iajoge30pOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy5uYW1lID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwibmFtZVwiKTtcclxuICAgICAgICB0aGlzLnNvdXJjZVZvTmFtZSA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInNvdXJjZVZvTmFtZVwiKTtcclxuICAgICAgICB0aGlzLnRhcmdldFZvTmFtZSA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInRhcmdldFZvTmFtZVwiKTtcclxuICAgICAgICB0aGlzLnRhcmdldFZvUHJveHlOYW1lID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwidGFyZ2V0Vm9Qcm94eU5hbWVcIik7XHJcbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImRlc2NyaXB0aW9uXCIpO1xyXG4gICAgfVxyXG59Il19