/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { SlimP2PMetadataEntity } from './SlimP2PMetadataEntity';
import { BpmnModelJsonHelper } from '../../BpmnModelJsonHelper';
/**
 * @abstract
 */
var /**
 * @abstract
 */
SlimMappingEntity = /** @class */ (function (_super) {
    tslib_1.__extends(SlimMappingEntity, _super);
    function SlimMappingEntity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @protected
     * @return {?}
     */
    SlimMappingEntity.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.mappingRuleMetadataId = null;
        this.mappingRuleId = null;
        this.mappingComponentId = null;
        this.mappingClassTypeName = null;
    };
    /**
     * @return {?}
     */
    SlimMappingEntity.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingRuleMetadataId", this.mappingRuleMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingRuleId", this.mappingRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingComponentId", this.mappingComponentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingClassTypeName", this.mappingClassTypeName);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    SlimMappingEntity.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.mappingRuleMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingRuleMetadataId");
        this.mappingRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingRuleId");
        this.mappingComponentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingComponentId");
        this.mappingClassTypeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingClassTypeName");
    };
    return SlimMappingEntity;
}(SlimP2PMetadataEntity));
/**
 * @abstract
 */
export { SlimMappingEntity };
if (false) {
    /** @type {?} */
    SlimMappingEntity.prototype.mappingRuleMetadataId;
    /** @type {?} */
    SlimMappingEntity.prototype.mappingComponentId;
    /** @type {?} */
    SlimMappingEntity.prototype.mappingRuleId;
    /** @type {?} */
    SlimMappingEntity.prototype.mappingClassTypeName;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xpbU1hcHBpbmdFbnRpdHkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWFpZi9jb21tb24tYXBpLyIsInNvdXJjZXMiOlsibGliL3NsaW0tZW50aXR5L2ltcGwvU2xpbU1hcHBpbmdFbnRpdHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7OztBQUVoRTs7OztJQUFnRCw2Q0FBcUI7SUFBckU7O0lBK0JBLENBQUM7Ozs7O0lBekJhLCtDQUFtQjs7OztJQUE3QjtRQUNJLGlCQUFNLG1CQUFtQixXQUFFLENBQUM7UUFFNUIsSUFBSSxDQUFDLHFCQUFxQixHQUFHLElBQUksQ0FBQztRQUNsQyxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQztRQUMxQixJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDO1FBQy9CLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLENBQUM7SUFDckMsQ0FBQzs7OztJQUVELCtDQUFtQjs7O0lBQW5COztZQUNRLEdBQUcsR0FBRyxpQkFBTSxtQkFBbUIsV0FBRTtRQUNyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsdUJBQXVCLEVBQUUsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFDaEcsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGVBQWUsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDaEYsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLG9CQUFvQixFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQzFGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxzQkFBc0IsRUFBRSxJQUFJLENBQUMsb0JBQW9CLENBQUMsQ0FBQztRQUM5RixPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRUQsOENBQWtCOzs7O0lBQWxCLFVBQW1CLEdBQU87UUFDdEIsaUJBQU0sa0JBQWtCLFlBQUMsR0FBRyxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLHFCQUFxQixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO1FBQ3pHLElBQUksQ0FBQyxhQUFhLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGVBQWUsQ0FBQyxDQUFDO1FBQ3pGLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztRQUNuRyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLHNCQUFzQixDQUFDLENBQUM7SUFDM0csQ0FBQztJQUNMLHdCQUFDO0FBQUQsQ0FBQyxBQS9CRCxDQUFnRCxxQkFBcUIsR0ErQnBFOzs7Ozs7O0lBOUJHLGtEQUE4Qjs7SUFDOUIsK0NBQTJCOztJQUMzQiwwQ0FBc0I7O0lBQ3RCLGlEQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElTbGltTWFwcGluZ0VudGl0eSB9IGZyb20gJy4uL0lTbGltTWFwcGluZ0VudGl0eSc7XHJcbmltcG9ydCB7IFNsaW1QMlBNZXRhZGF0YUVudGl0eSB9IGZyb20gJy4vU2xpbVAyUE1ldGFkYXRhRW50aXR5JztcclxuaW1wb3J0IHsgQnBtbk1vZGVsSnNvbkhlbHBlciB9IGZyb20gJy4uLy4uL0JwbW5Nb2RlbEpzb25IZWxwZXInO1xyXG5cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFNsaW1NYXBwaW5nRW50aXR5IGV4dGVuZHMgU2xpbVAyUE1ldGFkYXRhRW50aXR5IGltcGxlbWVudHMgSVNsaW1NYXBwaW5nRW50aXR5IHtcclxuICAgIG1hcHBpbmdSdWxlTWV0YWRhdGFJZDogc3RyaW5nO1xyXG4gICAgbWFwcGluZ0NvbXBvbmVudElkOiBzdHJpbmc7XHJcbiAgICBtYXBwaW5nUnVsZUlkOiBzdHJpbmc7XHJcbiAgICBtYXBwaW5nQ2xhc3NUeXBlTmFtZTogc3RyaW5nO1xyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICAgICAgdGhpcy5tYXBwaW5nUnVsZU1ldGFkYXRhSWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMubWFwcGluZ1J1bGVJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5tYXBwaW5nQ29tcG9uZW50SWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMubWFwcGluZ0NsYXNzVHlwZU5hbWUgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIENvbnZlcnRUb0pzb25PYmplY3QoKToge30ge1xyXG4gICAgICAgIGxldCBvYmogPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwibWFwcGluZ1J1bGVNZXRhZGF0YUlkXCIsIHRoaXMubWFwcGluZ1J1bGVNZXRhZGF0YUlkKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJtYXBwaW5nUnVsZUlkXCIsIHRoaXMubWFwcGluZ1J1bGVJZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwibWFwcGluZ0NvbXBvbmVudElkXCIsIHRoaXMubWFwcGluZ0NvbXBvbmVudElkKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJtYXBwaW5nQ2xhc3NUeXBlTmFtZVwiLCB0aGlzLm1hcHBpbmdDbGFzc1R5cGVOYW1lKTtcclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IHt9KSB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcbiAgICAgICAgdGhpcy5tYXBwaW5nUnVsZU1ldGFkYXRhSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcIm1hcHBpbmdSdWxlTWV0YWRhdGFJZFwiKTtcclxuICAgICAgICB0aGlzLm1hcHBpbmdSdWxlSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcIm1hcHBpbmdSdWxlSWRcIik7XHJcbiAgICAgICAgdGhpcy5tYXBwaW5nQ29tcG9uZW50SWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcIm1hcHBpbmdDb21wb25lbnRJZFwiKTtcclxuICAgICAgICB0aGlzLm1hcHBpbmdDbGFzc1R5cGVOYW1lID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJtYXBwaW5nQ2xhc3NUeXBlTmFtZVwiKTtcclxuICAgIH1cclxufSJdfQ==