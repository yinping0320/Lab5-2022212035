/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BpmnModelJsonHelper } from "../../BpmnModelJsonHelper";
import { JsonConvertableImpl } from "../../JsonConvertableImpl";
export class PositionParticipant extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.orgType = "Sys";
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.positionId = null;
        this.positionName = null;
        this.positionType = null;
        this.orgId = null;
        this.orgName = null;
        this.orgType = null;
        this.orgIdExpression = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "positionId", this.positionId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "positionName", this.positionName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "positionType", this.positionType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "orgId", this.orgId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "orgName", this.orgName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "orgType", this.orgType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "orgIdExpression", this.orgIdExpression);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.positionId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "positionId");
        this.positionName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "positionName");
        this.positionType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "positionType");
        this.orgId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "orgId");
        this.orgName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "orgName");
        this.orgType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "orgType");
        this.orgIdExpression = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "orgIdExpression");
    }
}
if (false) {
    /** @type {?} */
    PositionParticipant.prototype.positionId;
    /** @type {?} */
    PositionParticipant.prototype.positionName;
    /** @type {?} */
    PositionParticipant.prototype.positionType;
    /** @type {?} */
    PositionParticipant.prototype.orgId;
    /** @type {?} */
    PositionParticipant.prototype.orgName;
    /** @type {?} */
    PositionParticipant.prototype.orgType;
    /** @type {?} */
    PositionParticipant.prototype.orgIdExpression;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9zaXRpb25QYXJ0aWNpcGFudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYWlmL2NvbW1vbi1hcGkvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L2ltcGwvUG9zaXRpb25QYXJ0aWNpcGFudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDaEUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFaEUsTUFBTSxPQUFPLG1CQUFvQixTQUFRLG1CQUFtQjtJQUE1RDs7UUFNSSxZQUFPLEdBQVcsS0FBSyxDQUFDO0lBd0M1QixDQUFDOzs7OztJQXJDYSxtQkFBbUI7UUFDekIsS0FBSyxDQUFDLG1CQUFtQixFQUFFLENBQUM7UUFFNUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7UUFDdkIsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7UUFDekIsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7UUFDekIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDbEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDcEIsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUM7SUFDaEMsQ0FBQzs7OztJQUVNLG1CQUFtQjs7WUFDbEIsR0FBRyxHQUFHLEtBQUssQ0FBQyxtQkFBbUIsRUFBRTtRQUVyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsWUFBWSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUMxRSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsY0FBYyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM5RSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsY0FBYyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM5RSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNoRSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNwRSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNwRSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBRXBGLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFTSxrQkFBa0IsQ0FBQyxHQUFPO1FBQzdCLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMsVUFBVSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUMsQ0FBQztRQUNuRixJQUFJLENBQUMsWUFBWSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxjQUFjLENBQUMsQ0FBQztRQUN2RixJQUFJLENBQUMsWUFBWSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxjQUFjLENBQUMsQ0FBQztRQUN2RixJQUFJLENBQUMsS0FBSyxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUN6RSxJQUFJLENBQUMsT0FBTyxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUM3RSxJQUFJLENBQUMsT0FBTyxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUM3RSxJQUFJLENBQUMsZUFBZSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0lBQ2pHLENBQUM7Q0FDSjs7O0lBN0NHLHlDQUFtQjs7SUFDbkIsMkNBQXFCOztJQUNyQiwyQ0FBcUI7O0lBQ3JCLG9DQUFjOztJQUNkLHNDQUFnQjs7SUFDaEIsc0NBQXdCOztJQUN4Qiw4Q0FBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCcG1uTW9kZWxKc29uSGVscGVyIH0gZnJvbSBcIi4uLy4uL0JwbW5Nb2RlbEpzb25IZWxwZXJcIjtcclxuaW1wb3J0IHsgSnNvbkNvbnZlcnRhYmxlSW1wbCB9IGZyb20gXCIuLi8uLi9Kc29uQ29udmVydGFibGVJbXBsXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUG9zaXRpb25QYXJ0aWNpcGFudCBleHRlbmRzIEpzb25Db252ZXJ0YWJsZUltcGwge1xyXG4gICAgcG9zaXRpb25JZDogc3RyaW5nO1xyXG4gICAgcG9zaXRpb25OYW1lOiBzdHJpbmc7XHJcbiAgICBwb3NpdGlvblR5cGU6IHN0cmluZztcclxuICAgIG9yZ0lkOiBzdHJpbmc7XHJcbiAgICBvcmdOYW1lOiBzdHJpbmc7XHJcbiAgICBvcmdUeXBlOiBzdHJpbmcgPSBcIlN5c1wiO1xyXG4gICAgb3JnSWRFeHByZXNzaW9uOiBzdHJpbmc7XHJcblxyXG4gICAgcHJvdGVjdGVkIFJlc2V0QmVmb3JlTG9hZEZyb20oKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuUmVzZXRCZWZvcmVMb2FkRnJvbSgpO1xyXG5cclxuICAgICAgICB0aGlzLnBvc2l0aW9uSWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMucG9zaXRpb25OYW1lID0gbnVsbDtcclxuICAgICAgICB0aGlzLnBvc2l0aW9uVHlwZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5vcmdJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5vcmdOYW1lID0gbnVsbDtcclxuICAgICAgICB0aGlzLm9yZ1R5cGUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMub3JnSWRFeHByZXNzaW9uID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ29udmVydFRvSnNvbk9iamVjdCgpOiB7fSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuXHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwicG9zaXRpb25JZFwiLCB0aGlzLnBvc2l0aW9uSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInBvc2l0aW9uTmFtZVwiLCB0aGlzLnBvc2l0aW9uTmFtZSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwicG9zaXRpb25UeXBlXCIsIHRoaXMucG9zaXRpb25UeXBlKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJvcmdJZFwiLCB0aGlzLm9yZ0lkKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJvcmdOYW1lXCIsIHRoaXMub3JnTmFtZSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwib3JnVHlwZVwiLCB0aGlzLm9yZ1R5cGUpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIm9yZ0lkRXhwcmVzc2lvblwiLCB0aGlzLm9yZ0lkRXhwcmVzc2lvbik7XHJcblxyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IHt9KTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMucG9zaXRpb25JZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwicG9zaXRpb25JZFwiKTtcclxuICAgICAgICB0aGlzLnBvc2l0aW9uTmFtZSA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwicG9zaXRpb25OYW1lXCIpO1xyXG4gICAgICAgIHRoaXMucG9zaXRpb25UeXBlID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJwb3NpdGlvblR5cGVcIik7XHJcbiAgICAgICAgdGhpcy5vcmdJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwib3JnSWRcIik7XHJcbiAgICAgICAgdGhpcy5vcmdOYW1lID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJvcmdOYW1lXCIpO1xyXG4gICAgICAgIHRoaXMub3JnVHlwZSA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwib3JnVHlwZVwiKTtcclxuICAgICAgICB0aGlzLm9yZ0lkRXhwcmVzc2lvbiA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwib3JnSWRFeHByZXNzaW9uXCIpO1xyXG4gICAgfVxyXG59Il19