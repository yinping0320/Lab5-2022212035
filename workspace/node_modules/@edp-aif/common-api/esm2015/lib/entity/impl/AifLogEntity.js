/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BpmnModelJsonHelper } from '../../BpmnModelJsonHelper';
import { AifLogLevel } from '../../config/AifLogLevel';
import { Entity } from './Entity';
export class AifLogEntity extends Entity {
    constructor() {
        super(...arguments);
        this.logLevel = AifLogLevel.NONE;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.content = null;
        this.trackingTag = null;
        this.logTime = null;
        this.logLevel = AifLogLevel.NONE;
        this.suCode = null;
        this.className = null;
        this.methodName = null;
        this.logPoint = null;
        this.bizEventId = null;
        this.bifCpId = null;
        this.bifWpId = null;
        this.creationProcessId = null;
        this.writebackProcessId = null;
        this.processInstanceId = null;
        this.creationRuleId = null;
        this.writebackRuleId = null;
        this.ruleInstanceId = null;
        this.bizActionId = null;
        this.threadId = null;
        this.sessionId = null;
        this.bizContextId = null;
        this.userId = null;
        this.tenantId = null;
        this.tag = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "content", this.content);
        BpmnModelJsonHelper.SetAttributeValue(obj, "trackingTag", this.trackingTag);
        BpmnModelJsonHelper.SetAttributeValue(obj, "logTime", this.logTime);
        BpmnModelJsonHelper.SetAttributeValue(obj, "logLevel", this.logLevel);
        BpmnModelJsonHelper.SetAttributeValue(obj, "suCode", this.suCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "className", this.className);
        BpmnModelJsonHelper.SetAttributeValue(obj, "methodName", this.methodName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "logPoint", this.logPoint);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizEventId", this.bizEventId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bifCpId", this.bifCpId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bifWpId", this.bifWpId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationProcessId", this.creationProcessId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "writebackProcessId", this.writebackProcessId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "processInstanceId", this.processInstanceId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationRuleId", this.creationRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "writebackRuleId", this.writebackRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "ruleInstanceId", this.ruleInstanceId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizActionId", this.bizActionId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "threadId", this.threadId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sessionId", this.sessionId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizContextId", this.bizContextId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "userId", this.userId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tenantId", this.tenantId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tag", this.tag);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.content = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "content");
        this.trackingTag = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "trackingTag");
        this.logTime = BpmnModelJsonHelper.GetAttributeValueAsDateTime(obj, "logTime");
        this.logLevel = AifLogLevel[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "logLevel")];
        this.suCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "suCode");
        this.className = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "className");
        this.methodName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "methodName");
        this.logPoint = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "logPoint");
        this.bizEventId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizEventId");
        this.bifCpId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bifCpId");
        this.bifWpId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bifWpId");
        this.creationProcessId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationProcessId");
        this.writebackProcessId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "writebackProcessId");
        this.processInstanceId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "processInstanceId");
        this.creationRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationRuleId");
        this.writebackRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "writebackRuleId");
        this.ruleInstanceId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "ruleInstanceId");
        this.bizActionId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizActionId");
        this.threadId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "threadId");
        this.sessionId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sessionId");
        this.bizContextId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizContextId");
        this.userId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "userId");
        this.tenantId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tenantId");
        this.tag = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tag");
    }
}
if (false) {
    /** @type {?} */
    AifLogEntity.prototype.content;
    /** @type {?} */
    AifLogEntity.prototype.trackingTag;
    /** @type {?} */
    AifLogEntity.prototype.logTime;
    /** @type {?} */
    AifLogEntity.prototype.logLevel;
    /** @type {?} */
    AifLogEntity.prototype.suCode;
    /** @type {?} */
    AifLogEntity.prototype.className;
    /** @type {?} */
    AifLogEntity.prototype.methodName;
    /** @type {?} */
    AifLogEntity.prototype.logPoint;
    /** @type {?} */
    AifLogEntity.prototype.bizEventId;
    /** @type {?} */
    AifLogEntity.prototype.bifCpId;
    /** @type {?} */
    AifLogEntity.prototype.bifWpId;
    /** @type {?} */
    AifLogEntity.prototype.creationProcessId;
    /** @type {?} */
    AifLogEntity.prototype.writebackProcessId;
    /** @type {?} */
    AifLogEntity.prototype.processInstanceId;
    /** @type {?} */
    AifLogEntity.prototype.creationRuleId;
    /** @type {?} */
    AifLogEntity.prototype.writebackRuleId;
    /** @type {?} */
    AifLogEntity.prototype.ruleInstanceId;
    /** @type {?} */
    AifLogEntity.prototype.bizActionId;
    /** @type {?} */
    AifLogEntity.prototype.threadId;
    /** @type {?} */
    AifLogEntity.prototype.sessionId;
    /** @type {?} */
    AifLogEntity.prototype.bizContextId;
    /** @type {?} */
    AifLogEntity.prototype.userId;
    /** @type {?} */
    AifLogEntity.prototype.tenantId;
    /** @type {?} */
    AifLogEntity.prototype.tag;
}
//# sourceMappingURL=data:application/json;base64,