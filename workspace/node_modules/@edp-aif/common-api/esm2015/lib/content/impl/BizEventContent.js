/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Content } from './Content';
import { BizEventEntity } from '../../entity/impl/BizEventEntity';
import { BpmnModelJsonHelper } from '../../BpmnModelJsonHelper';
export class BizEventContent extends Content {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.canDoExpression = null;
        this.bizFlowchartIdExpression = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "canDoExpression", this.canDoExpression);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizFlowchartIdExpression", this.bizFlowchartIdExpression);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.canDoExpression = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "canDoExpression");
        this.bizFlowchartIdExpression = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizFlowchartIdExpression");
    }
    /**
     * @protected
     * @return {?}
     */
    GetEntityClass() {
        return BizEventEntity;
    }
}
if (false) {
    /** @type {?} */
    BizEventContent.prototype.canDoExpression;
    /** @type {?} */
    BizEventContent.prototype.bizFlowchartIdExpression;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQml6RXZlbnRDb250ZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1haWYvY29tbW9uLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9jb250ZW50L2ltcGwvQml6RXZlbnRDb250ZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBR3BDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNsRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUVoRSxNQUFNLE9BQU8sZUFBZ0IsU0FBUSxPQUF3Qjs7Ozs7SUFLL0MsbUJBQW1CO1FBQ3pCLEtBQUssQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBRTVCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO1FBQzVCLElBQUksQ0FBQyx3QkFBd0IsR0FBRyxJQUFJLENBQUM7SUFDekMsQ0FBQzs7OztJQUVNLG1CQUFtQjs7WUFDbEIsR0FBRyxHQUFHLEtBQUssQ0FBQyxtQkFBbUIsRUFBRTtRQUVyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ3BGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSwwQkFBMEIsRUFBRSxJQUFJLENBQUMsd0JBQXdCLENBQUMsQ0FBQztRQUV0RyxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRU0sa0JBQWtCLENBQUMsR0FBTztRQUM3QixLQUFLLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLGVBQWUsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztRQUM3RixJQUFJLENBQUMsd0JBQXdCLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLDBCQUEwQixDQUFDLENBQUM7SUFDbkgsQ0FBQzs7Ozs7SUFFUyxjQUFjO1FBQ3BCLE9BQU8sY0FBYyxDQUFDO0lBQzFCLENBQUM7Q0FDSjs7O0lBOUJHLDBDQUF3Qjs7SUFDeEIsbURBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGVudCB9IGZyb20gJy4vQ29udGVudCc7XHJcbmltcG9ydCB7IElCaXpFdmVudEVudGl0eSB9IGZyb20gJy4uLy4uL2VudGl0eS9JQml6RXZlbnRFbnRpdHknO1xyXG5pbXBvcnQgeyBJQml6RXZlbnRDb250ZW50IH0gZnJvbSAnLi4vSUJpekV2ZW50Q29udGVudCc7XHJcbmltcG9ydCB7IEJpekV2ZW50RW50aXR5IH0gZnJvbSAnLi4vLi4vZW50aXR5L2ltcGwvQml6RXZlbnRFbnRpdHknO1xyXG5pbXBvcnQgeyBCcG1uTW9kZWxKc29uSGVscGVyIH0gZnJvbSAnLi4vLi4vQnBtbk1vZGVsSnNvbkhlbHBlcic7XHJcblxyXG5leHBvcnQgY2xhc3MgQml6RXZlbnRDb250ZW50IGV4dGVuZHMgQ29udGVudDxJQml6RXZlbnRFbnRpdHk+IGltcGxlbWVudHMgSUJpekV2ZW50Q29udGVudCB7XHJcbiAgICBjYW5Eb0V4cHJlc3Npb246IHN0cmluZztcclxuICAgIGJpekZsb3djaGFydElkRXhwcmVzc2lvbjogc3RyaW5nO1xyXG5cclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcblxyXG4gICAgICAgIHRoaXMuY2FuRG9FeHByZXNzaW9uID0gbnVsbDtcclxuICAgICAgICB0aGlzLmJpekZsb3djaGFydElkRXhwcmVzc2lvbiA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENvbnZlcnRUb0pzb25PYmplY3QoKToge30ge1xyXG4gICAgICAgIGxldCBvYmogPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcblxyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImNhbkRvRXhwcmVzc2lvblwiLCB0aGlzLmNhbkRvRXhwcmVzc2lvbik7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiYml6Rmxvd2NoYXJ0SWRFeHByZXNzaW9uXCIsIHRoaXMuYml6Rmxvd2NoYXJ0SWRFeHByZXNzaW9uKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgTG9hZEZyb21Kc29uT2JqZWN0KG9iajoge30pOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy5jYW5Eb0V4cHJlc3Npb24gPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImNhbkRvRXhwcmVzc2lvblwiKTtcclxuICAgICAgICB0aGlzLmJpekZsb3djaGFydElkRXhwcmVzc2lvbiA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiYml6Rmxvd2NoYXJ0SWRFeHByZXNzaW9uXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBHZXRFbnRpdHlDbGFzcygpOiB0eXBlb2YgQml6RXZlbnRFbnRpdHkge1xyXG4gICAgICAgIHJldHVybiBCaXpFdmVudEVudGl0eTtcclxuICAgIH1cclxufSJdfQ==