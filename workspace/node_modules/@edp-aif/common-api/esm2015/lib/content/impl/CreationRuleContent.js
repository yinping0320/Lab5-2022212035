/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Content } from './Content';
import { CreationRuleEntity } from '../../entity/impl/CreationRuleEntity';
import { BpmnModelJsonHelper } from '../../BpmnModelJsonHelper';
export class CreationRuleContent extends Content {
    /**
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.mappingContent = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingContent", this.mappingContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "formSettings", this.formSettings);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.mappingContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingContent");
        this.formSettings = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "formSettings");
    }
    /**
     * @protected
     * @return {?}
     */
    GetEntityClass() {
        return CreationRuleEntity;
    }
}
if (false) {
    /** @type {?} */
    CreationRuleContent.prototype.mappingContent;
    /** @type {?} */
    CreationRuleContent.prototype.formSettings;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3JlYXRpb25SdWxlQ29udGVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYWlmL2NvbW1vbi1hcGkvIiwic291cmNlcyI6WyJsaWIvY29udGVudC9pbXBsL0NyZWF0aW9uUnVsZUNvbnRlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFHcEMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDMUUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFaEUsTUFBTSxPQUFPLG1CQUFvQixTQUFRLE9BQTRCOzs7O0lBSWpFLG1CQUFtQjtRQUNmLEtBQUssQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBQzVCLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO0lBQy9CLENBQUM7Ozs7SUFFRCxtQkFBbUI7O1lBQ1gsR0FBRyxHQUFHLEtBQUssQ0FBQyxtQkFBbUIsRUFBRTtRQUNyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ2xGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxjQUFjLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzlFLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFRCxrQkFBa0IsQ0FBQyxHQUFPO1FBQ3RCLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM5QixJQUFJLENBQUMsY0FBYyxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1FBQzNGLElBQUksQ0FBQyxZQUFZLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQzNGLENBQUM7Ozs7O0lBRVMsY0FBYztRQUNwQixPQUFPLGtCQUFrQixDQUFDO0lBQzlCLENBQUM7Q0FDSjs7O0lBeEJHLDZDQUF1Qjs7SUFDdkIsMkNBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGVudCB9IGZyb20gJy4vQ29udGVudCc7XHJcbmltcG9ydCB7IElDcmVhdGlvblJ1bGVFbnRpdHkgfSBmcm9tICcuLi8uLi9lbnRpdHkvSUNyZWF0aW9uUnVsZUVudGl0eSc7XHJcbmltcG9ydCB7IElDcmVhdGlvblJ1bGVDb250ZW50IH0gZnJvbSAnLi4vSUNyZWF0aW9uUnVsZUNvbnRlbnQnO1xyXG5pbXBvcnQgeyBDcmVhdGlvblJ1bGVFbnRpdHkgfSBmcm9tICcuLi8uLi9lbnRpdHkvaW1wbC9DcmVhdGlvblJ1bGVFbnRpdHknO1xyXG5pbXBvcnQgeyBCcG1uTW9kZWxKc29uSGVscGVyIH0gZnJvbSAnLi4vLi4vQnBtbk1vZGVsSnNvbkhlbHBlcic7XHJcblxyXG5leHBvcnQgY2xhc3MgQ3JlYXRpb25SdWxlQ29udGVudCBleHRlbmRzIENvbnRlbnQ8SUNyZWF0aW9uUnVsZUVudGl0eT4gaW1wbGVtZW50cyBJQ3JlYXRpb25SdWxlQ29udGVudCB7XHJcbiAgICBtYXBwaW5nQ29udGVudDogc3RyaW5nO1xyXG4gICAgZm9ybVNldHRpbmdzOiBzdHJpbmc7XHJcblxyXG4gICAgUmVzZXRCZWZvcmVMb2FkRnJvbSgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcbiAgICAgICAgdGhpcy5tYXBwaW5nQ29udGVudCA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgQ29udmVydFRvSnNvbk9iamVjdCgpIHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIm1hcHBpbmdDb250ZW50XCIsIHRoaXMubWFwcGluZ0NvbnRlbnQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImZvcm1TZXR0aW5nc1wiLCB0aGlzLmZvcm1TZXR0aW5ncyk7XHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG4gICAgICAgIHRoaXMubWFwcGluZ0NvbnRlbnQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcIm1hcHBpbmdDb250ZW50XCIpO1xyXG4gICAgICAgIHRoaXMuZm9ybVNldHRpbmdzID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJmb3JtU2V0dGluZ3NcIik7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIEdldEVudGl0eUNsYXNzKCkge1xyXG4gICAgICAgIHJldHVybiBDcmVhdGlvblJ1bGVFbnRpdHk7XHJcbiAgICB9XHJcbn1cclxuIl19