/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export class BillSchemaSubFields {
    constructor() {
        this._map = {};
        this._list = new Array();
    }
    /**
     * @return {?}
     */
    get map() {
        return this._map;
    }
    /**
     * @return {?}
     */
    get list() {
        return this._list;
    }
    /**
     * @param {?} row
     * @return {?}
     */
    Add(row) {
        this._map[row.fieldName] = row;
        this._list.push(row);
    }
    /**
     * @param {?} row
     * @return {?}
     */
    Remove(row) {
        /** @type {?} */
        const bak = this._map[row.fieldName];
        delete this._map[row.fieldName];
        for (let i = 0; i < this._list.length; i++) {
            if (this._list[i].fieldName == bak.fieldName) {
                this._list.splice(i, 1);
                return true;
            }
        }
        return false;
    }
    /**
     * @return {?}
     */
    Clear() {
        this._map = {};
        this._list.length = 0;
    }
    /**
     * @return {?}
     */
    GetMap() {
        return this._map;
    }
    /**
     * @return {?}
     */
    GetList() {
        return this._list;
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    BillSchemaSubFields.prototype._map;
    /**
     * @type {?}
     * @private
     */
    BillSchemaSubFields.prototype._list;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmlsbFNjaGVtYVN1YkZpZWxkcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYWlmL2NvbW1vbi1hcGkvIiwic291cmNlcyI6WyJsaWIvYmlsbGtpdC9CaWxsU2NoZW1hU3ViRmllbGRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxNQUFNLE9BQU8sbUJBQW1CO0lBQWhDO1FBQ1ksU0FBSSxHQUEwQyxFQUFFLENBQUM7UUFDakQsVUFBSyxHQUE4QixJQUFJLEtBQUssRUFBRSxDQUFDO0lBeUMzRCxDQUFDOzs7O0lBdkNHLElBQUksR0FBRztRQUNILE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNyQixDQUFDOzs7O0lBRUQsSUFBSSxJQUFJO1FBQ0osT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3RCLENBQUM7Ozs7O0lBRU0sR0FBRyxDQUFDLEdBQXVCO1FBQzlCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEdBQUcsQ0FBQztRQUMvQixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN6QixDQUFDOzs7OztJQUVNLE1BQU0sQ0FBQyxHQUF1Qjs7Y0FDM0IsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQztRQUNwQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRWhDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN4QyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxJQUFJLEdBQUcsQ0FBQyxTQUFTLEVBQUU7Z0JBQzFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDeEIsT0FBTyxJQUFJLENBQUM7YUFDZjtTQUNKO1FBRUQsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQzs7OztJQUVNLEtBQUs7UUFDUixJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztRQUNmLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUMxQixDQUFDOzs7O0lBRU0sTUFBTTtRQUNULE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNyQixDQUFDOzs7O0lBRU0sT0FBTztRQUNWLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN0QixDQUFDO0NBQ0o7Ozs7OztJQTFDRyxtQ0FBeUQ7Ozs7O0lBQ3pELG9DQUF1RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJpbGxTY2hlbWFTdWJGaWVsZCB9IGZyb20gJy4vQmlsbFNjaGVtYVN1YkZpZWxkJztcclxuXHJcbmV4cG9ydCBjbGFzcyBCaWxsU2NoZW1hU3ViRmllbGRzIHtcclxuICAgIHByaXZhdGUgX21hcDogeyBba2V5OiBzdHJpbmddOiBCaWxsU2NoZW1hU3ViRmllbGQgfSA9IHt9O1xyXG4gICAgcHJpdmF0ZSBfbGlzdDogQXJyYXk8QmlsbFNjaGVtYVN1YkZpZWxkPiA9IG5ldyBBcnJheSgpO1xyXG5cclxuICAgIGdldCBtYXAoKTogeyBba2V5OiBzdHJpbmddOiBCaWxsU2NoZW1hU3ViRmllbGQgfSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX21hcDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgbGlzdCgpOiBBcnJheTxCaWxsU2NoZW1hU3ViRmllbGQ+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbGlzdDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQWRkKHJvdzogQmlsbFNjaGVtYVN1YkZpZWxkKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fbWFwW3Jvdy5maWVsZE5hbWVdID0gcm93O1xyXG4gICAgICAgIHRoaXMuX2xpc3QucHVzaChyb3cpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBSZW1vdmUocm93OiBCaWxsU2NoZW1hU3ViRmllbGQpOiBib29sZWFuIHtcclxuICAgICAgICBjb25zdCBiYWsgPSB0aGlzLl9tYXBbcm93LmZpZWxkTmFtZV07XHJcbiAgICAgICAgZGVsZXRlIHRoaXMuX21hcFtyb3cuZmllbGROYW1lXTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9saXN0Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9saXN0W2ldLmZpZWxkTmFtZSA9PSBiYWsuZmllbGROYW1lKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9saXN0LnNwbGljZShpLCAxKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENsZWFyKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX21hcCA9IHt9O1xyXG4gICAgICAgIHRoaXMuX2xpc3QubGVuZ3RoID0gMDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgR2V0TWFwKCk6IHsgW2tleTogc3RyaW5nXTogQmlsbFNjaGVtYVN1YkZpZWxkIH0ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9tYXA7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIEdldExpc3QoKTogQXJyYXk8QmlsbFNjaGVtYVN1YkZpZWxkPiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xpc3Q7XHJcbiAgICB9XHJcbn1cclxuIl19