import { IJsonSerializable } from './IJsonSerializable';
export declare class BpmnModelJsonHelper {
    static readonly MIN_OFFSETDATETIME: Date;
    static readonly MAX_OFFSETDATETIME: Date;
    static GetAttributeValue(obj: {}, attributeName: string): any;
    static SetAttributeValue<T extends IJsonSerializable>(obj: {}, attributeName: string, value: string | boolean | number | Date | Array<T> | T | object): void;
    static GetAttributeValueAsString(obj: {}, attributeName: string): string;
    static GetAttributeValueAsBoolean(obj: {}, attributeName: string): boolean;
    static GetAttributeValueAsNumber(obj: {}, attributeName: string): number;
    static GetAttributeValueAsList<ReturnT extends IJsonSerializable, ClassOfT extends ReturnT>(obj: Object, attributeName: string, classOfT: new () => ClassOfT): Array<ReturnT>;
    static GetAttributeValueAsDateTime(obj: Object, attributeName: string): Date;
    static GetAttributeValueAsJsonSerializable<ReturnT extends IJsonSerializable, ClassOfT extends ReturnT>(obj: Object, attributeName: string, classOfT: new () => ClassOfT): ReturnT;
    static DateTimeToString(dt: Date): string;
    /**
     *
     * @param str 格式为：yyyyMMddHHmmssSSS
     */
    static DateTimeFromString(str: string): Date;
    static ToJson<T extends IJsonSerializable>(value: Array<T>): string;
    static FromJson<ReturnT extends IJsonSerializable, ClassOfT extends ReturnT>(json: string, classOfT: new () => ClassOfT): Array<ReturnT>;
    static StringListToJsonArray(value: Array<string>): Array<string>;
    static StringListFromJsonArray(jsonArray: Array<Object>): Array<string>;
    static StringListToJson(value: Array<string>): string;
    static StringListFromJson(json: string): Array<string>;
    static IsNullOrWhiteSpace(string: string): boolean;
    private static GetDateFromISO;
    private static dateFormat;
    private static myPadStart;
}
