/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BpmnModelJsonHelper {
    /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    static GetAttributeValue(obj, attributeName) {
        if (obj == null) {
            return null;
        }
        if (obj.hasOwnProperty(attributeName)) {
            return obj[attributeName];
        }
        else {
            return null;
        }
    }
    /**
     * @template T
     * @param {?} obj
     * @param {?} attributeName
     * @param {?} value
     * @return {?}
     */
    static SetAttributeValue(obj, attributeName, value) {
        if (obj == null || value == null)
            return;
        /** @type {?} */
        let jsonArray = [];
        if (value instanceof Array) {
            //判断是否为IJsonSerializable实现类的数组，是则全部调用ConvertToJsonObject序列化，否则直接赋值
            for (let item of value) {
                if (item["ConvertToJsonObject"] != null && item["LoadFromJsonObject"] != null) {
                    jsonArray.push(item.ConvertToJsonObject());
                }
                else {
                    break;
                }
            }
            if (jsonArray.length == value.length) {
                obj[attributeName] = jsonArray;
            }
            else {
                obj[attributeName] = value;
            }
        }
        else if (value["ConvertToJsonObject"] != null && value["LoadFromJsonObject"] != null) {
            //判断是否为IJsonSerializable实现类的对象，是则调用ConvertToJsonObject序列化
            obj[attributeName] = ((/** @type {?} */ (value))).ConvertToJsonObject();
        }
        else if (value instanceof Date) {
            //判断是否为日期类型，是日期类型则转为字符串UTC的yyyyMMDDhhmmssSSS格式字符串
            /** @type {?} */
            const str = BpmnModelJsonHelper.DateTimeToString(value);
            BpmnModelJsonHelper.SetAttributeValue(obj, attributeName, str);
        }
        else {
            obj[attributeName] = value;
        }
    }
    /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    static GetAttributeValueAsString(obj, attributeName) {
        if (obj == null) {
            return null;
        }
        if (obj.hasOwnProperty(attributeName) == true && typeof (obj[attributeName]) == "string") {
            return obj[attributeName];
        }
        return null;
    }
    /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    static GetAttributeValueAsBoolean(obj, attributeName) {
        if (obj == null) {
            return null;
        }
        if (obj.hasOwnProperty(attributeName) == true && typeof (obj[attributeName]) == "boolean") {
            return obj[attributeName];
        }
        return null;
    }
    /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    static GetAttributeValueAsNumber(obj, attributeName) {
        if (obj == null) {
            return null;
        }
        if (obj.hasOwnProperty(attributeName) == true && typeof (obj[attributeName]) == "number") {
            return obj[attributeName];
        }
        return null;
    }
    /**
     * @template ReturnT, ClassOfT
     * @param {?} obj
     * @param {?} attributeName
     * @param {?} classOfT
     * @return {?}
     */
    static GetAttributeValueAsList(obj, attributeName, classOfT) {
        /** @type {?} */
        let jsonArray = BpmnModelJsonHelper.GetAttributeValue(obj, attributeName);
        if (jsonArray == null) {
            return null;
        }
        /** @type {?} */
        let list = [];
        for (let item of jsonArray) {
            /** @type {?} */
            let instance = null;
            try {
                instance = (/** @type {?} */ (new classOfT()));
            }
            catch (e) {
                throw e;
            }
            instance.LoadFromJsonObject(item);
            list.push(instance);
        }
        return list;
    }
    /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    static GetAttributeValueAsDateTime(obj, attributeName) {
        return BpmnModelJsonHelper.DateTimeFromString(BpmnModelJsonHelper.GetAttributeValueAsString(obj, attributeName));
    }
    /**
     * @template ReturnT, ClassOfT
     * @param {?} obj
     * @param {?} attributeName
     * @param {?} classOfT
     * @return {?}
     */
    static GetAttributeValueAsJsonSerializable(obj, attributeName, classOfT) {
        /** @type {?} */
        let jsonObject = BpmnModelJsonHelper.GetAttributeValue(obj, attributeName);
        if (jsonObject == null) {
            return null;
        }
        /** @type {?} */
        let instance = null;
        try {
            instance = (/** @type {?} */ (new classOfT()));
        }
        catch (e) {
            throw e;
        }
        instance.LoadFromJsonObject(jsonObject);
        return instance;
    }
    /**
     * @param {?} dt
     * @return {?}
     */
    static DateTimeToString(dt) {
        if (dt == null)
            return null;
        /** @type {?} */
        const time = dt.getTime();
        if (time < BpmnModelJsonHelper.MIN_OFFSETDATETIME.getTime() || time > BpmnModelJsonHelper.MAX_OFFSETDATETIME.getTime()) {
            throw `给定的日期时间值 ${dt.toISOString()} 超出支持范围(0001-01-01T12:00:00.000Z - 9999-12-31T23:59:59.000Z):`;
        }
        return BpmnModelJsonHelper.dateFormat(dt, "yyyyMMddHHmmssSSS");
    }
    /**
     *
     * @param {?} str 格式为：yyyyMMddHHmmssSSS
     * @return {?}
     */
    static DateTimeFromString(str) {
        if (str == null)
            return null;
        // const s = `${str.substring(0, 4)}/${str.substring(4, 6)}/${str.substring(6, 8)} ${str.substring(8, 10)}:${str.substring(10, 12)}:${str.substring(12, 14)}.${str.substring(14)}`;
        /** @type {?} */
        const date = new Date();
        date.setUTCFullYear(parseInt(str.substring(0, 4)));
        date.setUTCMonth(parseInt(str.substring(4, 6)) - 1);
        date.setUTCDate(parseInt(str.substring(6, 8)));
        date.setUTCHours(parseInt(str.substring(8, 10)));
        date.setUTCMinutes(parseInt(str.substring(10, 12)));
        date.setUTCSeconds(parseInt(str.substring(12, 14)));
        date.setUTCMilliseconds(parseInt(str.substring(14)));
        return date;
    }
    /**
     * @template T
     * @param {?} value
     * @return {?}
     */
    static ToJson(value) {
        if (value === undefined || value === null) {
            return null;
        }
        /** @type {?} */
        let list = [];
        for (let item of value) {
            list.push(item.ConvertToJsonObject());
        }
        return JSON.stringify(list);
    }
    /**
     * @template ReturnT, ClassOfT
     * @param {?} json
     * @param {?} classOfT
     * @return {?}
     */
    static FromJson(json, classOfT) {
        if (BpmnModelJsonHelper.IsNullOrWhiteSpace(json)) {
            return null;
        }
        /** @type {?} */
        let list = new Array();
        /** @type {?} */
        let jsonArr = JSON.parse(json);
        if (jsonArr == null || Array.isArray(jsonArr) === false) {
            return list;
        }
        jsonArr.forEach((/**
         * @param {?} elt
         * @return {?}
         */
        elt => {
            /** @type {?} */
            let newInstance = (/** @type {?} */ (new classOfT()));
            newInstance.LoadFromJsonObject(elt);
            list.push(newInstance);
        }));
        return list;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    static StringListToJsonArray(value) {
        if (value == null)
            return null;
        /** @type {?} */
        let jsonArray = new Array();
        for (let item of value) {
            jsonArray.push(item);
        }
        return jsonArray;
    }
    /**
     * @param {?} jsonArray
     * @return {?}
     */
    static StringListFromJsonArray(jsonArray) {
        if (jsonArray == null) {
            return null;
        }
        /** @type {?} */
        let list = new Array();
        for (let item of jsonArray) {
            if (typeof item == "object") {
                list.push(JSON.stringify(item));
            }
            else {
                list.push(String(item));
            }
        }
        return list;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    static StringListToJson(value) {
        /** @type {?} */
        let jsonArray = BpmnModelJsonHelper.StringListToJsonArray(value);
        if (jsonArray == null)
            return null;
        return JSON.stringify(jsonArray);
    }
    /**
     * @param {?} json
     * @return {?}
     */
    static StringListFromJson(json) {
        if (BpmnModelJsonHelper.IsNullOrWhiteSpace(json)) {
            return null;
        }
        /** @type {?} */
        let jsonArray = (/** @type {?} */ (JSON.parse(json)));
        if (jsonArray == null) {
            return null;
        }
        return BpmnModelJsonHelper.StringListFromJsonArray(jsonArray);
    }
    /**
     * @param {?} string
     * @return {?}
     */
    static IsNullOrWhiteSpace(string) {
        if (string == null) {
            return true;
        }
        else {
            return string.replace(/(^s*)|(s*$)/g, "").length == 0;
        }
    }
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    static GetDateFromISO(value) {
        /** @type {?} */
        let a = /^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/.exec(value);
        if (a) {
            return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4], +a[5], +a[6]));
        }
        else {
            return null;
        }
    }
    /**
     * @private
     * @param {?} date
     * @param {?} fmt
     * @return {?}
     */
    static dateFormat(date, fmt) {
        /** @type {?} */
        let ret;
        /** @type {?} */
        const opt = {
            "y+": date.getUTCFullYear().toString(),
            // 年
            "M+": (date.getUTCMonth() + 1).toString(),
            // 月
            "d+": date.getUTCDate().toString(),
            // 日
            "H+": date.getUTCHours().toString(),
            // 时
            "m+": date.getUTCMinutes().toString(),
            // 分
            "s+": date.getUTCSeconds().toString(),
            // 秒
            "S+": date.getUTCMilliseconds().toString(),
        };
        for (let k in opt) {
            ret = new RegExp("(" + k + ")").exec(fmt);
            if (ret) {
                if (!String.prototype.padStart) {
                    fmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (BpmnModelJsonHelper.myPadStart(opt[k], ret[1].length, "0")));
                }
                else {
                    fmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, "0")));
                }
            }
        }
        return fmt;
    }
    /**
     * @private
     * @param {?} src
     * @param {?} targetLength
     * @param {?} padString
     * @return {?}
     */
    static myPadStart(src, targetLength, padString) {
        targetLength = targetLength >> 0; //floor if number or convert non-number to 0;
        padString = String(typeof padString !== 'undefined' ? padString : ' ');
        if (src.length > targetLength) {
            return String(src);
        }
        else {
            targetLength = targetLength - src.length;
            if (targetLength > padString.length) {
                padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed
            }
            return padString.slice(0, targetLength) + String(src);
        }
    }
}
BpmnModelJsonHelper.MIN_OFFSETDATETIME = BpmnModelJsonHelper.GetDateFromISO("0001-01-01T12:00:00.000Z");
BpmnModelJsonHelper.MAX_OFFSETDATETIME = BpmnModelJsonHelper.GetDateFromISO("9999-12-31T23:59:59.000Z");

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class ExtensionMethod {
    /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    static getAttributeValue(obj, attributeName) {
        return BpmnModelJsonHelper.GetAttributeValue(obj, attributeName);
    }
    /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    static getAttributeValue4Boolean(obj, attributeName) {
        return BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, attributeName);
    }
    /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    static getAttributeValue4Decimal(obj, attributeName) {
        return BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, attributeName);
    }
    /**
     * @param {?} obj
     * @param {?} attributeName
     * @return {?}
     */
    static getAttributeValue4String(obj, attributeName) {
        return BpmnModelJsonHelper.GetAttributeValueAsString(obj, attributeName);
    }
    /**
     * @param {?} obj
     * @param {?} attributeName
     * @param {?} value
     * @return {?}
     */
    static setAttributeValue(obj, attributeName, value) {
        BpmnModelJsonHelper.SetAttributeValue(obj, attributeName, value);
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
class JsonConvertableImpl {
    /**
     * @return {?}
     */
    ConvertToJson() {
        return JSON.stringify(this.ConvertToJsonObject());
    }
    /**
     * @param {?} json
     * @return {?}
     */
    LoadFromJson(json) {
        this.ResetBeforeLoadFrom();
        /** @type {?} */
        let obj = JSON.parse(json);
        this.LoadFromJsonObject(obj);
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = {};
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        this.ResetBeforeLoadFrom();
    }
    /**
     * 从 JsonObject 中加载数据前，赋予各属性初始值。
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TextValue extends JsonConvertableImpl {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.hasValue = false;
        this.value = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "hasValue", this.hasValue);
        BpmnModelJsonHelper.SetAttributeValue(obj, "value", this.value);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.hasValue = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "hasValue");
        this.value = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "value");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
class KitBill extends JsonConvertableImpl {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.schemaCategoryId = null;
        this.schemaId = null;
        this.schemaCaption = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "schemaCategoryId", this.schemaCategoryId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "schemaId", this.schemaId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "schemaCaption", this.schemaCaption);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.schemaCategoryId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "schemaCategoryId");
        this.schemaId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "schemaId");
        this.schemaCaption = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "schemaCaption");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
class KitField extends JsonConvertableImpl {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.fieldName = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "name", this.fieldName);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.fieldName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "name");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class DataTypeStoreImpl {
    /**
     * @param {?} dataValue
     * @return {?}
     */
    set dataValue(dataValue) {
        //todo: 临时实现
        this.textValue = dataValue;
    }
    /**
     * @return {?}
     */
    get dataValue() {
        return this.textValue;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
class KitFieldInstance extends KitField {
    /**
     * @param {?=} fieldName
     * @param {?=} fieldValue
     */
    constructor(fieldName, fieldValue) {
        super();
        this.fieldStore = new DataTypeStoreImpl();
        this.fieldName = fieldName;
        this.SetFieldValue(fieldValue);
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.fieldStore = new DataTypeStoreImpl();
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        if ("base.string" != this.fieldStore.converterName) {
            ExtensionMethod.setAttributeValue(obj, "conv", this.fieldStore.converterName);
        }
        if (this.fieldStore.textValue != null) {
            ExtensionMethod.setAttributeValue(obj, "value", this.fieldStore.textValue);
        }
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        /** @type {?} */
        let conv = ExtensionMethod.getAttributeValue4String(obj, 'conv');
        if (conv == null) {
            conv = "base.string";
        }
        this.fieldStore.converterName = conv;
        /** @type {?} */
        let text = ExtensionMethod.getAttributeValue4String(obj, "value");
        if (text != null) {
            this.fieldStore.textValue = text;
        }
    }
    /**
     * @return {?}
     */
    GetFieldValue() {
        return this.fieldStore.dataValue;
    }
    /**
     * @param {?} fieldValue
     * @return {?}
     */
    SetFieldValue(fieldValue) {
        this.fieldStore.dataValue = fieldValue;
    }
    /**
     * @return {?}
     */
    GetTextValue() {
        return this.fieldStore.textValue;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
class BillDataFieldBase extends KitFieldInstance {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BillDataSubFields {
    constructor() {
        this._map = {};
        this._list = new Array();
    }
    /**
     * @return {?}
     */
    get map() {
        return this._map;
    }
    /**
     * @return {?}
     */
    get list() {
        return this._list;
    }
    /**
     * @param {?} row
     * @return {?}
     */
    Add(row) {
        this._map[row.fieldName] = row;
        this._list.push(row);
    }
    /**
     * @param {?} row
     * @return {?}
     */
    Remove(row) {
        /** @type {?} */
        const bak = this._map[row.fieldName];
        delete this._map[row.fieldName];
        for (let i = 0; i < this._list.length; i++) {
            if (this._list[i].fieldName == bak.fieldName) {
                this._list.splice(i, 1);
                return true;
            }
        }
        return false;
    }
    /**
     * @return {?}
     */
    Clear() {
        this._map = {};
        this._list.length = 0;
    }
    /**
     * @return {?}
     */
    GetMap() {
        return this._map;
    }
    /**
     * @return {?}
     */
    GetList() {
        return this._list;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BillDataSubField extends BillDataFieldBase {
    constructor() {
        super(...arguments);
        this.subFields = new BillDataSubFields();
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.subFields.Clear();
        this.attachedField = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        if (this.subFields.GetList().length > 0) {
            /** @type {?} */
            let subFields = [];
            for (let value of this.subFields.GetList()) {
                subFields.push(value.ConvertToJsonObject());
            }
            BpmnModelJsonHelper.SetAttributeValue(obj, "subFields", subFields);
        }
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        /** @type {?} */
        let subFields = BpmnModelJsonHelper.GetAttributeValue(obj, "subFields");
        if (subFields != null) {
            for (let item of subFields) {
                /** @type {?} */
                let value = new BillDataSubField();
                value.LoadFromJsonObject(item);
                this.subFields.Add(value);
            }
        }
    }
    /**
     * @param {?} field
     * @return {?}
     */
    AddSubField(field) {
        this.subFields.Add(field);
    }
    /**
     * @return {?}
     */
    GetSubFieldMap() {
        return this.subFields.GetMap();
    }
    /**
     * @return {?}
     */
    GetSubFieldList() {
        return this.subFields.GetList();
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BillDataField extends BillDataFieldBase {
    constructor() {
        super(...arguments);
        this.subFields = new BillDataSubFields();
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.subFields.Clear();
        this.attachedRow = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        if (this.subFields.GetList().length > 0) {
            /** @type {?} */
            let subFields = [];
            for (let value of this.subFields.GetList()) {
                subFields.push(value.ConvertToJsonObject());
            }
            BpmnModelJsonHelper.SetAttributeValue(obj, "subFields", subFields);
        }
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        /** @type {?} */
        let subFields = BpmnModelJsonHelper.GetAttributeValue(obj, "subFields");
        if (subFields != null) {
            for (let item of subFields) {
                /** @type {?} */
                let value = new BillDataSubField();
                value.LoadFromJsonObject(item);
                this.subFields.Add(value);
            }
        }
    }
    /**
     * @param {?} field
     * @return {?}
     */
    AddSubField(field) {
        this.subFields.Add(field);
    }
    /**
     * @return {?}
     */
    GetSubFieldMap() {
        return this.subFields.GetMap();
    }
    /**
     * @return {?}
     */
    GetSubFieldList() {
        return this.subFields.GetList();
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BillDataFields {
    constructor() {
        this._map = {};
        this._list = new Array();
    }
    /**
     * @return {?}
     */
    get map() {
        return this._map;
    }
    /**
     * @return {?}
     */
    get list() {
        return this._list;
    }
    /**
     * @param {?} field
     * @return {?}
     */
    Add(field) {
        this._map[field.fieldName] = field;
        this._list.push(field);
    }
    /**
     * @param {?} field
     * @return {?}
     */
    Remove(field) {
        /** @type {?} */
        const bak = this._map[field.fieldName];
        delete this._map[field.fieldName];
        for (let i = 0; i < this._list.length; i++) {
            if (this._list[i].fieldName == bak.fieldName) {
                this._list.splice(i, 1);
                return true;
            }
        }
        return false;
    }
    /**
     * @return {?}
     */
    Clear() {
        this._map = {};
        this._list.length = 0;
    }
    /**
     * @return {?}
     */
    GetMap() {
        return this._map;
    }
    /**
     * @return {?}
     */
    GetList() {
        return this._list;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BillDataTables {
    constructor() {
        this._map = {};
        this._list = new Array();
    }
    /**
     * @return {?}
     */
    get map() {
        return this._map;
    }
    /**
     * @return {?}
     */
    get list() {
        return this._list;
    }
    /**
     * @return {?}
     */
    GetMap() {
        return this._map;
    }
    /**
     * @return {?}
     */
    GetList() {
        return this._list;
    }
    /**
     * @param {?} table
     * @return {?}
     */
    Add(table) {
        this._map[table.tableName] = table;
        this._list.push(table);
    }
    /**
     * @param {?} table
     * @return {?}
     */
    Remove(table) {
        /** @type {?} */
        const bak = this._map[table.tableName];
        delete this._map[table.tableName];
        for (let i = 0; i < this._list.length; i++) {
            if (this._list[i].tableName == bak.tableName) {
                this._list.splice(i, 1);
                return true;
            }
        }
        return false;
    }
    /**
     * @return {?}
     */
    Clear() {
        this._map = {};
        this._list.length = 0;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const BillDataRowPersistenceType = {
    Unchanged: "Unchanged",
    Insert: "Insert",
    Update: "Update",
    Delete: "Delete",
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BillDataRow extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.fields = new BillDataFields();
        this.childTables = new BillDataTables();
        this.persistenceType = BillDataRowPersistenceType.Unchanged;
        //public String getDataIdPath()
        //{
        //    return dataId;
        //}
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.dataId = null;
        this.fields.Clear();
        this.childTables.Clear();
        this.attachedTable = null;
        this.persistenceType = BillDataRowPersistenceType.Unchanged;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "dataId", this.dataId);
        if (this.persistenceType != BillDataRowPersistenceType.Unchanged) {
            BpmnModelJsonHelper.SetAttributeValue(obj, "persist", this.persistenceType);
        }
        /** @type {?} */
        let fields = [];
        for (let value of this.fields.GetList()) {
            fields.push(value.ConvertToJsonObject());
        }
        BpmnModelJsonHelper.SetAttributeValue(obj, "fields", fields);
        if (this.childTables.GetList().length > 0) {
            /** @type {?} */
            let childTables = [];
            for (let value of this.childTables.GetList()) {
                childTables.push(value.ConvertToJsonObject());
            }
            BpmnModelJsonHelper.SetAttributeValue(obj, "childTables", childTables);
        }
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.dataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "dataId");
        /** @type {?} */
        const persistenceType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "persist");
        if (persistenceType != null) {
            this.persistenceType = BillDataRowPersistenceType[persistenceType];
        }
        /** @type {?} */
        let fields = BpmnModelJsonHelper.GetAttributeValue(obj, "fields");
        for (let item of fields) {
            /** @type {?} */
            let value = new BillDataField();
            value.LoadFromJsonObject(item);
            this.fields.Add(value);
        }
        /** @type {?} */
        let childTables = BpmnModelJsonHelper.GetAttributeValue(obj, "childTables");
        if (childTables != null) {
            for (let item of childTables) {
                /** @type {?} */
                let value = new BillDataTable();
                value.LoadFromJsonObject(item);
                this.childTables.Add(value);
            }
        }
    }
    /**
     * @return {?}
     */
    GetFieldMap() {
        return this.fields.GetMap();
    }
    /**
     * @return {?}
     */
    GetFieldList() {
        return this.fields.GetList();
    }
    /**
     * @return {?}
     */
    GetChildTableMap() {
        return this.childTables.GetMap();
    }
    /**
     * @return {?}
     */
    GetChildTableList() {
        return this.childTables.GetList();
    }
    /**
     * @param {?} field
     * @return {?}
     */
    AddField(field) {
        this.fields.Add(field);
    }
    /**
     * @param {?} table
     * @return {?}
     */
    AddChildTable(table) {
        this.childTables.Add(table);
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BillDataRows {
    constructor() {
        this._map = {};
        this._list = new Array();
    }
    /**
     * @return {?}
     */
    get map() {
        return this._map;
    }
    /**
     * @return {?}
     */
    get list() {
        return this._list;
    }
    /**
     * @param {?} row
     * @return {?}
     */
    Add(row) {
        this._map[row.dataId] = row;
        this._list.push(row);
    }
    /**
     * @param {?} row
     * @return {?}
     */
    Remove(row) {
        /** @type {?} */
        const bak = this._map[row.dataId];
        delete this._map[row.dataId];
        for (let i = 0; i < this._list.length; i++) {
            if (this._list[i].dataId == bak.dataId) {
                this._list.splice(i, 1);
                return true;
            }
        }
        return false;
    }
    /**
     * @return {?}
     */
    Clear() {
        this._map = {};
        this._list.length = 0;
    }
    /**
     * @return {?}
     */
    GetMap() {
        return this._map;
    }
    /**
     * @return {?}
     */
    GetList() {
        return this._list;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
class KitTable extends JsonConvertableImpl {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.tableName = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "tableName", this.tableName);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.tableName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tableName");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BillDataTable extends KitTable {
    constructor() {
        super(...arguments);
        this.rows = new BillDataRows();
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.attachedBillData = null;
        this.attachedRow = null;
        this.rows.Clear();
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        /** @type {?} */
        let dataRows = [];
        for (let value of this.rows.GetList()) {
            dataRows.push(value.ConvertToJsonObject());
        }
        BpmnModelJsonHelper.SetAttributeValue(obj, "rows", dataRows);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        /** @type {?} */
        let dataRows = BpmnModelJsonHelper.GetAttributeValue(obj, "rows");
        for (let item of dataRows) {
            /** @type {?} */
            let value = new BillDataRow();
            value.LoadFromJsonObject(item);
            this.rows.Add(value);
        }
    }
    /**
     * @param {?} row
     * @return {?}
     */
    AddRow(row) {
        this.rows.Add(row);
    }
    /**
     * @return {?}
     */
    GetRowMap() {
        return this.rows.GetMap();
    }
    /**
     * @return {?}
     */
    GetRowList() {
        return this.rows.GetList();
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BillData extends KitBill {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.mainTable = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "mainTable", this.mainTable);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.mainTable = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, "mainTable", BillDataTable);
        this.ApplyRelationship();
    }
    /*
         * 将数据集、主表、子表、行、字段之间的隶属关系应用到各个对象上。
         * */
    /**
     * @return {?}
     */
    ApplyRelationship() {
        this.Apply2Table(this, null, this.mainTable);
        return this;
    }
    /**
     * @private
     * @param {?} attachedBillData
     * @param {?} attachedRow
     * @param {?} table
     * @return {?}
     */
    Apply2Table(attachedBillData, attachedRow, table) {
        table.attachedBillData = attachedBillData;
        table.attachedRow = attachedRow;
        for (let row of table.GetRowList()) {
            this.Apply2Row(table, row);
        }
    }
    /**
     * @private
     * @param {?} attachedTable
     * @param {?} row
     * @return {?}
     */
    Apply2Row(attachedTable, row) {
        row.attachedTable = attachedTable;
        for (let field of row.GetFieldList()) {
            this.Apply2Field(row, field);
        }
        for (let childTable of row.GetChildTableList()) {
            this.Apply2Table(attachedTable.attachedBillData, row, childTable);
        }
    }
    /**
     * @private
     * @param {?} attachedRow
     * @param {?} field
     * @return {?}
     */
    Apply2Field(attachedRow, field) {
        field.attachedRow = attachedRow;
        for (let subField of field.GetSubFieldList()) {
            this.Apply2SubField(field, subField);
        }
    }
    /**
     * @private
     * @param {?} attachedField
     * @param {?} field
     * @return {?}
     */
    Apply2SubField(attachedField, field) {
        field.attachedField = field;
        for (let subField of field.GetSubFieldList()) {
            this.Apply2SubField(field, subField);
        }
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BillSchemaFields {
    constructor() {
        this._map = {};
        this._list = new Array();
    }
    /**
     * @return {?}
     */
    get map() {
        return this._map;
    }
    /**
     * @return {?}
     */
    get list() {
        return this._list;
    }
    /**
     * @return {?}
     */
    GetMap() {
        return this._map;
    }
    /**
     * @return {?}
     */
    GetList() {
        return this._list;
    }
    /**
     * @param {?} field
     * @return {?}
     */
    Add(field) {
        this._map[field.fieldName] = field;
        this._list.push(field);
    }
    /**
     * @param {?} field
     * @return {?}
     */
    Remove(field) {
        /** @type {?} */
        const bak = this._map[field.fieldName];
        delete this._map[field.fieldName];
        for (let i = 0; i < this._list.length; i++) {
            if (this._list[i].fieldName == bak.fieldName) {
                this._list.splice(i, 1);
                return true;
            }
        }
        return false;
    }
    /**
     * @return {?}
     */
    Clear() {
        this._map = {};
        this._list.length = 0;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const DataType = {
    Unknow: "Unknow",
    String: "String",
    Integer: "Integer",
    Decimal: "Decimal",
    Boolean: "Boolean",
    DateTime: "DateTime",
    Binary: "Binary",
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
class BillSchemaFieldBase extends KitField {
    constructor() {
        super(...arguments);
        this.dataType = DataType.Unknow;
        this.extendProperties = {};
        this.length = 0;
        this.precision = 0;
        this.scale = 0;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.fieldType = null;
        this.dataType = DataType.Unknow;
        this.caption = null;
        this.extendProperties = {};
        this.length = 0;
        this.precision = 0;
        this.scale = 0;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "type", this.fieldType);
        if (this.dataType != DataType.String) {
            BpmnModelJsonHelper.SetAttributeValue(obj, "data", this.dataType);
        }
        BpmnModelJsonHelper.SetAttributeValue(obj, "cap", this.caption);
        if (this.length != 0) {
            BpmnModelJsonHelper.SetAttributeValue(obj, "length", this.length);
        }
        if (this.precision != 0) {
            BpmnModelJsonHelper.SetAttributeValue(obj, "precision", this.precision);
        }
        if (this.scale != 0) {
            BpmnModelJsonHelper.SetAttributeValue(obj, "scale", this.scale);
        }
        if (this.extendProperties && Object.keys(this.extendProperties).length > 0) {
            /** @type {?} */
            let tmpObj = {};
            for (let key in this.extendProperties) {
                BpmnModelJsonHelper.SetAttributeValue(tmpObj, key, this.extendProperties[key]);
            }
            BpmnModelJsonHelper.SetAttributeValue(obj, "props", tmpObj);
        }
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.fieldType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "type");
        /** @type {?} */
        let data = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "data");
        if (data == null) {
            this.dataType = DataType.String;
        }
        else {
            this.dataType = DataType[data];
        }
        this.caption = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "cap");
        this.length = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, "length");
        this.precision = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, "precision");
        this.scale = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, "scale");
        /** @type {?} */
        let extendPropertiesObj = BpmnModelJsonHelper.GetAttributeValue(obj, "props");
        if (extendPropertiesObj != null) {
            /** @type {?} */
            let tmpObj = extendPropertiesObj;
            for (let key in tmpObj) {
                /** @type {?} */
                let value = BpmnModelJsonHelper.GetAttributeValueAsString(tmpObj, key);
                this.extendProperties[key] = value;
            }
        }
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BillSchemaSubFields {
    constructor() {
        this._map = {};
        this._list = new Array();
    }
    /**
     * @return {?}
     */
    get map() {
        return this._map;
    }
    /**
     * @return {?}
     */
    get list() {
        return this._list;
    }
    /**
     * @param {?} row
     * @return {?}
     */
    Add(row) {
        this._map[row.fieldName] = row;
        this._list.push(row);
    }
    /**
     * @param {?} row
     * @return {?}
     */
    Remove(row) {
        /** @type {?} */
        const bak = this._map[row.fieldName];
        delete this._map[row.fieldName];
        for (let i = 0; i < this._list.length; i++) {
            if (this._list[i].fieldName == bak.fieldName) {
                this._list.splice(i, 1);
                return true;
            }
        }
        return false;
    }
    /**
     * @return {?}
     */
    Clear() {
        this._map = {};
        this._list.length = 0;
    }
    /**
     * @return {?}
     */
    GetMap() {
        return this._map;
    }
    /**
     * @return {?}
     */
    GetList() {
        return this._list;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BillSchemaSubField extends BillSchemaFieldBase {
    constructor() {
        super(...arguments);
        this.subFields = new BillSchemaSubFields();
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.subFields.Clear();
        this.attachedField = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        if (this.subFields.GetList().length > 0) {
            /** @type {?} */
            let subFields = [];
            for (let value of this.subFields.GetList()) {
                subFields.push(value.ConvertToJsonObject());
            }
            BpmnModelJsonHelper.SetAttributeValue(obj, "subFields", subFields);
        }
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        /** @type {?} */
        let subFields = BpmnModelJsonHelper.GetAttributeValue(obj, "subFields");
        if (subFields != null) {
            for (let item of subFields) {
                /** @type {?} */
                let value = new BillSchemaSubField();
                value.LoadFromJsonObject(item);
                this.subFields.Add(value);
            }
        }
    }
    /**
     * @param {?} field
     * @return {?}
     */
    AddSubField(field) {
        this.subFields.Add(field);
    }
    /**
     * @return {?}
     */
    GetSubFieldMap() {
        return this.subFields.GetMap();
    }
    /**
     * @return {?}
     */
    GetSubFieldList() {
        return this.subFields.GetList();
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BillSchemaField extends BillSchemaFieldBase {
    constructor() {
        super(...arguments);
        this.subFields = new BillSchemaSubFields();
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.subFields.Clear();
        this.attachedTable = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        if (this.subFields.GetList().length > 0) {
            /** @type {?} */
            let subFields = [];
            for (let value of this.subFields.GetList()) {
                subFields.push(value.ConvertToJsonObject());
            }
            BpmnModelJsonHelper.SetAttributeValue(obj, "subFields", subFields);
        }
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        /** @type {?} */
        let subFields = BpmnModelJsonHelper.GetAttributeValue(obj, "subFields");
        if (subFields != null) {
            for (let item of subFields) {
                /** @type {?} */
                let value = new BillSchemaSubField();
                value.LoadFromJsonObject(item);
                this.subFields.Add(value);
            }
        }
    }
    /**
     * @param {?} field
     * @return {?}
     */
    AddSubField(field) {
        this.subFields.Add(field);
    }
    /**
     * @return {?}
     */
    GetSubFieldMap() {
        return this.subFields.GetMap();
    }
    /**
     * @return {?}
     */
    GetSubFieldList() {
        return this.subFields.GetList();
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BillSchemaTables {
    constructor() {
        this._map = {};
        this._list = new Array();
    }
    /**
     * @return {?}
     */
    get map() {
        return this._map;
    }
    /**
     * @return {?}
     */
    get list() {
        return this._list;
    }
    /**
     * @return {?}
     */
    GetMap() {
        return this._map;
    }
    /**
     * @return {?}
     */
    GetList() {
        return this._list;
    }
    /**
     * @param {?} table
     * @return {?}
     */
    Add(table) {
        this._map[table.tableName] = table;
        this._list.push(table);
    }
    /**
     * @param {?} table
     * @return {?}
     */
    Remove(table) {
        /** @type {?} */
        const bak = this._map[table.tableName];
        delete this._map[table.tableName];
        for (let i = 0; i < this._list.length; i++) {
            if (this._list[i].tableName == bak.tableName) {
                this._list.splice(i, 1);
                return true;
            }
        }
        return false;
    }
    /**
     * @return {?}
     */
    Clear() {
        this._map = {};
        this._list.length = 0;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BillSchemaTable extends KitTable {
    constructor() {
        super(...arguments);
        this.fields = new BillSchemaFields();
        this.childTables = new BillSchemaTables();
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.caption = null;
        this.attachedBillSchema = null;
        this.attachedTable = null;
        this.fields.Clear();
        this.childTables.Clear();
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "caption", this.caption);
        /** @type {?} */
        let fields = [];
        for (let value of this.fields.GetList()) {
            fields.push(value.ConvertToJsonObject());
        }
        BpmnModelJsonHelper.SetAttributeValue(obj, "fields", fields);
        if (this.childTables.GetList().length > 0) {
            /** @type {?} */
            let childTables = [];
            for (let value of this.childTables.GetList()) {
                childTables.push(value.ConvertToJsonObject());
            }
            BpmnModelJsonHelper.SetAttributeValue(obj, "childTables", childTables);
        }
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.caption = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "caption");
        /** @type {?} */
        let fields = BpmnModelJsonHelper.GetAttributeValue(obj, "fields");
        for (let item of fields) {
            /** @type {?} */
            let value = new BillSchemaField();
            value.LoadFromJsonObject(item);
            this.fields.Add(value);
        }
        /** @type {?} */
        let childTables = BpmnModelJsonHelper.GetAttributeValue(obj, "childTables");
        if (childTables != null) {
            for (let item of childTables) {
                /** @type {?} */
                let value = new BillSchemaTable();
                value.LoadFromJsonObject(item);
                this.childTables.Add(value);
            }
        }
    }
    /**
     * @param {?} field
     * @return {?}
     */
    AddField(field) {
        this.fields.Add(field);
    }
    /**
     * @return {?}
     */
    getFieldMap() {
        return this.fields.GetMap();
    }
    /**
     * @return {?}
     */
    getFieldList() {
        return this.fields.GetList();
    }
    /**
     * @param {?} table
     * @return {?}
     */
    AddChildTable(table) {
        this.childTables.Add(table);
    }
    /**
     * @return {?}
     */
    GetChildTableMap() {
        return this.childTables.GetMap();
    }
    /**
     * @return {?}
     */
    GetChildTableList() {
        return this.childTables.GetList();
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BillSchema extends KitBill {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.mainTable = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "mainTable", this.mainTable);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.mainTable = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, "mainTable", BillSchemaTable);
        this.ApplyRelationship();
    }
    /*
         * 将架构、主表、子表、列、字段之间的隶属关系应用到各个对象上。
         * */
    /**
     * @return {?}
     */
    ApplyRelationship() {
        this.Apply2Table(this, null, this.mainTable);
        return this;
    }
    /**
     * @private
     * @param {?} attachedBillSchema
     * @param {?} attachedTable
     * @param {?} table
     * @return {?}
     */
    Apply2Table(attachedBillSchema, attachedTable, table) {
        table.attachedBillSchema = attachedBillSchema;
        table.attachedTable = attachedTable;
        for (let field of table.getFieldList()) {
            this.Apply2Field(table, field);
        }
        for (let childTable of table.GetChildTableList()) {
            this.Apply2Table(table.attachedBillSchema, table, childTable);
        }
    }
    /**
     * @private
     * @param {?} attachedTable
     * @param {?} field
     * @return {?}
     */
    Apply2Field(attachedTable, field) {
        field.attachedTable = attachedTable;
        for (let subField of field.GetSubFieldList()) {
            this.Apply2SubField(field, subField);
        }
    }
    /**
     * @private
     * @param {?} attachedField
     * @param {?} field
     * @return {?}
     */
    Apply2SubField(attachedField, field) {
        field.attachedField = attachedField;
        for (let subField of field.GetSubFieldList()) {
            this.Apply2SubField(field, subField);
        }
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class AifConfigIds {
}
AifConfigIds.LOGLEVEL = "LOGLEVEL";

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const AifLogLevel = {
    /**
     * 不记日志。
     */
    NONE: "NONE",
    /**
     * 错误。
     */
    ERROR: "ERROR",
    /**
     * 警告。
     */
    WARNING: "WARNING",
    /**
     * 信息。
     */
    INFO: "INFO",
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class AifLogLevelConfig extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.logLevel = AifLogLevel.NONE;
        this.writeAllInfo = false;
        this.bifCpIds = new Array();
        this.bifWpIds = new Array();
        this.aifEventIds = new Array();
        this.aifCpIds = new Array();
        this.aifWpIds = new Array();
        this.aifCrIds = new Array();
        this.aifWrIds = new Array();
        this.aifActionIds = new Array();
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.writeAllInfo = false;
        this.logLevel = AifLogLevel.NONE;
        this.bifCpIds.length = 0;
        this.bifWpIds.length = 0;
        this.aifEventIds.length = 0;
        this.aifCpIds.length = 0;
        this.aifWpIds.length = 0;
        this.aifCrIds.length = 0;
        this.aifWrIds.length = 0;
        this.aifActionIds.length = 0;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "writeAllInfo", this.writeAllInfo);
        BpmnModelJsonHelper.SetAttributeValue(obj, "logLevel", this.logLevel);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bifCpIds", BpmnModelJsonHelper.StringListToJson(this.bifCpIds));
        BpmnModelJsonHelper.SetAttributeValue(obj, "bifWpIds", BpmnModelJsonHelper.StringListToJson(this.bifWpIds));
        BpmnModelJsonHelper.SetAttributeValue(obj, "aifEventIds", BpmnModelJsonHelper.StringListToJson(this.aifEventIds));
        BpmnModelJsonHelper.SetAttributeValue(obj, "aifCpIds", BpmnModelJsonHelper.StringListToJson(this.aifCpIds));
        BpmnModelJsonHelper.SetAttributeValue(obj, "aifWpIds", BpmnModelJsonHelper.StringListToJson(this.aifWpIds));
        BpmnModelJsonHelper.SetAttributeValue(obj, "aifCrIds", BpmnModelJsonHelper.StringListToJson(this.aifCrIds));
        BpmnModelJsonHelper.SetAttributeValue(obj, "aifWrIds", BpmnModelJsonHelper.StringListToJson(this.aifWrIds));
        BpmnModelJsonHelper.SetAttributeValue(obj, "aifActionIds", BpmnModelJsonHelper.StringListToJson(this.aifActionIds));
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.writeAllInfo = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "writeAllInfo");
        this.logLevel = AifLogLevel[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "logLevel")];
        this.bifCpIds = BpmnModelJsonHelper.StringListFromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bifCpIds"));
        this.bifWpIds = BpmnModelJsonHelper.StringListFromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bifWpIds"));
        this.aifEventIds = BpmnModelJsonHelper.StringListFromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "aifEventIds"));
        this.aifCpIds = BpmnModelJsonHelper.StringListFromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "aifCpIds"));
        this.aifWpIds = BpmnModelJsonHelper.StringListFromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "aifWpIds"));
        this.aifCrIds = BpmnModelJsonHelper.StringListFromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "aifCrIds"));
        this.aifWrIds = BpmnModelJsonHelper.StringListFromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "aifWrIds"));
        this.aifActionIds = BpmnModelJsonHelper.StringListFromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "aifActionIds"));
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 * @template TEntity
 */
class Content extends JsonConvertableImpl {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.entity = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "entity", this.entity);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.entity = BpmnModelJsonHelper.GetAttributeValue(obj, "entity");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 实体类接口。
 * @abstract
 */
class Entity extends JsonConvertableImpl {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.id = null;
        this.creator = null;
        this.createdTime = null;
        this.lastModifier = null;
        this.lastModifiedTime = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "id", this.id);
        BpmnModelJsonHelper.SetAttributeValue(obj, "creator", this.creator);
        BpmnModelJsonHelper.SetAttributeValue(obj, "createdTime", this.createdTime);
        BpmnModelJsonHelper.SetAttributeValue(obj, "lastModifier", this.lastModifier);
        BpmnModelJsonHelper.SetAttributeValue(obj, "lastModifiedTime", this.lastModifiedTime);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.id = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "id");
        this.creator = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creator");
        this.createdTime = BpmnModelJsonHelper.GetAttributeValueAsDateTime(obj, "createdTime");
        this.lastModifier = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "lastModifier");
        this.lastModifiedTime = BpmnModelJsonHelper.GetAttributeValueAsDateTime(obj, "lastModifiedTime");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 元数据实体类接口。
 * @abstract
 */
class MetadataEntity extends Entity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.appCode = null;
        this.suCode = null;
        this.boId = null;
        this.persistenceVersion = null;
        this.name = null;
        this.description = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "appCode", this.appCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "suCode", this.suCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "boId", this.boId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "persistenceVersion", this.persistenceVersion);
        BpmnModelJsonHelper.SetAttributeValue(obj, "name", this.name);
        BpmnModelJsonHelper.SetAttributeValue(obj, "description", this.description);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.appCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "appCode");
        this.suCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "suCode");
        this.boId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "boId");
        this.persistenceVersion = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "persistenceVersion");
        this.name = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "name");
        this.description = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "description");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const BizActionType = {
    /** 默认*/
    DEFAULT: "DEFAULT",
    /**生单*/
    CREATION: "CREATION",
    /**回写*/
    WRITEBACK: "WRITEBACK",
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 业务动作实体类。
 */
class BizActionEntity extends MetadataEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.bizActionType = BizActionType.DEFAULT;
        this.beMetadataId = null;
        //this.beType = null;
        this.bizActionAgentMetadataId = null;
        this.bizActionAgentComponentId = null;
        this.voMetadataId = null;
        //this.voType = null;
        this.beId = null;
        this.voId = null;
        this.bizActionAgentClassTypeName = null;
        this.beMetadataRootId = null;
        this.beMetadataParentId = null;
        this.beMetadataIdPath = null;
        this.beRootId = null;
        this.beParentId = null;
        this.beIdPath = null;
        this.voMetadataRootId = null;
        this.voMetadataParentId = null;
        this.voMetadataIdPath = null;
        this.voRootId = null;
        this.voParentId = null;
        this.voIdPath = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizActionType", this.bizActionType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beMetadataId", this.beMetadataId);
        //BpmnModelJsonHelper.SetAttributeValue(obj, "beType", this.beType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizActionAgentMetadataId", this.bizActionAgentMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizActionAgentComponentId", this.bizActionAgentComponentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voMetadataId", this.voMetadataId);
        //BpmnModelJsonHelper.SetAttributeValue(obj, "voType", this.voType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beId", this.beId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voId", this.voId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizActionAgentClassTypeName", this.bizActionAgentClassTypeName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beMetadataRootId", this.beMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beMetadataParentId", this.beMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beMetadataIdPath", this.beMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beRootId", this.beRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beParentId", this.beParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beIdPath", this.beIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voMetadataRootId", this.voMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voMetadataParentId", this.voMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voMetadataIdPath", this.voMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voRootId", this.voRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voParentId", this.voParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voIdPath", this.voIdPath);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.bizActionType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizActionType");
        this.beMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beMetadataId");
        //this.beType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beType");
        this.bizActionAgentMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizActionAgentMetadataId");
        this.bizActionAgentComponentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizActionAgentComponentId");
        this.voMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voMetadataId");
        //this.voType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voType");
        this.beId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beId");
        this.voId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voId");
        this.bizActionAgentClassTypeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizActionAgentClassTypeName");
        this.beMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beMetadataRootId");
        this.beMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beMetadataParentId");
        this.beMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beMetadataIdPath");
        this.beRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beRootId");
        this.beParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beParentId");
        this.beIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beIdPath");
        this.voMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voMetadataRootId");
        this.voMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voMetadataParentId");
        this.voMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voMetadataIdPath");
        this.voRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voRootId");
        this.voParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voParentId");
        this.voIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voIdPath");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BizActionContent extends Content {
    /**
     * @protected
     * @return {?}
     */
    GetEntityClass() {
        return BizActionEntity;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 业务事件实体类。
 */
class BizEventEntity extends MetadataEntity {
    constructor() {
        super(...arguments);
        this.isEnabled = true;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.isEnabled = true;
        this.beEventRouterMetadataId = null;
        this.beEventRouterComponentId = null;
        this.bizEventAgentMetadataId = null;
        this.bizEventAgentComponentId = null;
        this.beMetadataId = null;
        this.beId = null;
        //this.beType = null;
        this.voMetadataId = null;
        this.voId = null;
        //this.voType = null;
        this.canDoExpressionId = null;
        this.bizFlowchartIdExpressionId = null;
        this.beEventRouterClassTypeName = null;
        this.beMetadataRootId = null;
        this.beMetadataParentId = null;
        this.beMetadataIdPath = null;
        this.beRootId = null;
        this.beParentId = null;
        this.beIdPath = null;
        this.voMetadataRootId = null;
        this.voMetadataParentId = null;
        this.voMetadataIdPath = null;
        this.voRootId = null;
        this.voParentId = null;
        this.voIdPath = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "isEnabled", this.isEnabled);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beEventRouterMetadataId", this.beEventRouterMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beEventRouterComponentId", this.beEventRouterComponentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizEventAgentMetadataId", this.bizEventAgentMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizEventAgentComponentId", this.bizEventAgentComponentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beMetadataId", this.beMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beId", this.beId);
        //BpmnModelJsonHelper.SetAttributeValue(obj, "beType", this.beType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voMetadataId", this.voMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voId", this.voId);
        //BpmnModelJsonHelper.SetAttributeValue(obj, "voType", this.voType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "canDoExpressionId", this.canDoExpressionId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizFlowchartIdExpressionId", this.bizFlowchartIdExpressionId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beEventRouterClassTypeName", this.beEventRouterClassTypeName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beMetadataRootId", this.beMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beMetadataParentId", this.beMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beMetadataIdPath", this.beMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beRootId", this.beRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beParentId", this.beParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beIdPath", this.beIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voMetadataRootId", this.voMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voMetadataParentId", this.voMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voMetadataIdPath", this.voMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voRootId", this.voRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voParentId", this.voParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voIdPath", this.voIdPath);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.isEnabled = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isEnabled");
        this.beEventRouterMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beEventRouterMetadataId");
        this.beEventRouterComponentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beEventRouterComponentId");
        this.bizEventAgentMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizEventAgentMetadataId");
        this.bizEventAgentComponentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizEventAgentComponentId");
        this.beMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beMetadataId");
        //this.beType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beType");
        this.beId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beId");
        this.voMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voMetadataId");
        this.voId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voId");
        //this.voType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voType");
        this.canDoExpressionId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "canDoExpressionId");
        this.bizFlowchartIdExpressionId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizFlowchartIdExpressionId");
        this.beEventRouterClassTypeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beEventRouterClassTypeName");
        this.beMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beMetadataRootId");
        this.beMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beMetadataParentId");
        this.beMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beMetadataIdPath");
        this.beRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beRootId");
        this.beParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beParentId");
        this.beIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beIdPath");
        this.voMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voMetadataRootId");
        this.voMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voMetadataParentId");
        this.voMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voMetadataIdPath");
        this.voRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voRootId");
        this.voParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voParentId");
        this.voIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voIdPath");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BizEventContent extends Content {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.canDoExpression = null;
        this.bizFlowchartIdExpression = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "canDoExpression", this.canDoExpression);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizFlowchartIdExpression", this.bizFlowchartIdExpression);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.canDoExpression = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "canDoExpression");
        this.bizFlowchartIdExpression = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizFlowchartIdExpression");
    }
    /**
     * @protected
     * @return {?}
     */
    GetEntityClass() {
        return BizEventEntity;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BizFlowchartEntity extends MetadataEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.bpmnModelContentId = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "bpmnModelContentId", this.bpmnModelContentId);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.bpmnModelContentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bpmnModelContentId");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BizFlowchartContent extends Content {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.bpmnModel = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "bpmnModel", this.bpmnModel);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.bpmnModel = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bpmnModel");
    }
    /**
     * @protected
     * @return {?}
     */
    GetEntityClass() {
        return BizFlowchartEntity;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 点到点元数据实体类。
 * @abstract
 */
class P2PMetadataEntity extends MetadataEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.sourceAppCode = null;
        this.sourceSuCode = null;
        this.sourceBoId = null;
        this.sourceBeMetadataId = null;
        this.sourceBeId = null;
        //this.sourceBeType = null;
        this.sourceVoMetadataId = null;
        this.sourceVoId = null;
        //this.sourceVoType = null;
        this.targetAppCode = null;
        this.targetSuCode = null;
        this.targetBoId = null;
        this.targetBeMetadataId = null;
        this.targetBeId = null;
        //this.targetBeType = null;
        this.targetVoMetadataId = null;
        this.targetVoId = null;
        //this.targetVoType = null;
        this.targetVoProxyMetadataId = null;
        this.targetVoProxyId = null;
        //this.targetVoProxyType = null;
        this.sourceBeMetadataRootId = null;
        this.sourceBeMetadataParentId = null;
        this.sourceBeMetadataIdPath = null;
        this.sourceBeRootId = null;
        this.sourceBeParentId = null;
        this.sourceBeIdPath = null;
        this.sourceVoMetadataRootId = null;
        this.sourceVoMetadataParentId = null;
        this.sourceVoMetadataIdPath = null;
        this.sourceVoRootId = null;
        this.sourceVoParentId = null;
        this.sourceVoIdPath = null;
        this.targetBeMetadataRootId = null;
        this.targetBeMetadataParentId = null;
        this.targetBeMetadataIdPath = null;
        this.targetBeRootId = null;
        this.targetBeParentId = null;
        this.targetBeIdPath = null;
        this.targetVoMetadataRootId = null;
        this.targetVoMetadataParentId = null;
        this.targetVoMetadataIdPath = null;
        this.targetVoRootId = null;
        this.targetVoParentId = null;
        this.targetVoIdPath = null;
        this.targetVoProxyMetadataRootId = null;
        this.targetVoProxyMetadataParentId = null;
        this.targetVoProxyMetadataIdPath = null;
        this.targetVoProxyRootId = null;
        this.targetVoProxyParentId = null;
        this.targetVoProxyIdPath = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceAppCode", this.sourceAppCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceSuCode", this.sourceSuCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBoId", this.sourceBoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeMetadataId", this.sourceBeMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeId", this.sourceBeId);
        //BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeType", this.sourceBeType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoMetadataId", this.sourceVoMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoId", this.sourceVoId);
        //BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoType", this.sourceVoType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetAppCode", this.targetAppCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetSuCode", this.targetSuCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBoId", this.targetBoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeMetadataId", this.targetBeMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeId", this.targetBeId);
        //BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeType", this.targetBeType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoMetadataId", this.targetVoMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoId", this.targetVoId);
        //BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoType", this.targetVoType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyMetadataId", this.targetVoProxyMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyId", this.targetVoProxyId);
        //BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyType", this.targetVoProxyType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeMetadataRootId", this.sourceBeMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeMetadataParentId", this.sourceBeMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeMetadataIdPath", this.sourceBeMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeRootId", this.sourceBeRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeParentId", this.sourceBeParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeIdPath", this.sourceBeIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoMetadataRootId", this.sourceVoMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoMetadataParentId", this.sourceVoMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoMetadataIdPath", this.sourceVoMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoRootId", this.sourceVoRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoParentId", this.sourceVoParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoIdPath", this.sourceVoIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeMetadataRootId", this.targetBeMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeMetadataParentId", this.targetBeMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeMetadataIdPath", this.targetBeMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeRootId", this.targetBeRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeParentId", this.targetBeParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeIdPath", this.targetBeIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoMetadataRootId", this.targetVoMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoMetadataParentId", this.targetVoMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoMetadataIdPath", this.targetVoMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoRootId", this.targetVoRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoParentId", this.targetVoParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoIdPath", this.targetVoIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyMetadataRootId", this.targetVoProxyMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyMetadataParentId", this.targetVoProxyMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyMetadataIdPath", this.targetVoProxyMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyRootId", this.targetVoProxyRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyParentId", this.targetVoProxyParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyIdPath", this.targetVoProxyIdPath);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.sourceAppCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceAppCode");
        this.sourceSuCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceSuCode");
        this.sourceBoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBoId");
        this.sourceBeMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeMetadataId");
        this.sourceBeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeId");
        //this.sourceBeType= BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeType");
        this.sourceVoMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoMetadataId");
        this.sourceVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoId");
        //this.sourceVoType= BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoType");
        this.targetAppCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetAppCode");
        this.targetSuCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetSuCode");
        this.targetBoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBoId");
        this.targetBeMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeMetadataId");
        this.targetBeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeId");
        //this.targetBeType= BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeType");
        this.targetVoMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoMetadataId");
        this.targetVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoId");
        //this.targetVoType= BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoType");
        this.targetVoProxyMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyMetadataId");
        this.targetVoProxyId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyId");
        //this.targetVoProxyType= BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyType");
        this.sourceBeMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeMetadataRootId");
        this.sourceBeMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeMetadataParentId");
        this.sourceBeMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeMetadataIdPath");
        this.sourceBeRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeRootId");
        this.sourceBeParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeParentId");
        this.sourceBeIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeIdPath");
        this.sourceVoMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoMetadataRootId");
        this.sourceVoMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoMetadataParentId");
        this.sourceVoMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoMetadataIdPath");
        this.sourceVoRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoRootId");
        this.sourceVoParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoParentId");
        this.sourceVoIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoIdPath");
        this.targetBeMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeMetadataRootId");
        this.targetBeMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeMetadataParentId");
        this.targetBeMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeMetadataIdPath");
        this.targetBeRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeRootId");
        this.targetBeParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeParentId");
        this.targetBeIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeIdPath");
        this.targetVoMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoMetadataRootId");
        this.targetVoMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoMetadataParentId");
        this.targetVoMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoMetadataIdPath");
        this.targetVoRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoRootId");
        this.targetVoParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoParentId");
        this.targetVoIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoIdPath");
        this.targetVoProxyMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyMetadataRootId");
        this.targetVoProxyMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyMetadataParentId");
        this.targetVoProxyMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyMetadataIdPath");
        this.targetVoProxyRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyRootId");
        this.targetVoProxyParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyParentId");
        this.targetVoProxyIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyIdPath");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const CallType = {
    /**默认值。*/
    DEFAULT: "DEFAULT",
    /**同步调用。*/
    SYNC: "SYNC",
    /**异步调用。*/
    ASYNC: "ASYNC",
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 业务流程实体类。
 * @abstract
 */
class BizProcessEntity extends P2PMetadataEntity {
    constructor() {
        super(...arguments);
        this.callType = CallType.SYNC;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.bizEventId = null;
        this.bizActionId = null;
        this.isEnabled = false;
        this.callType = CallType.SYNC;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizEventId", this.bizEventId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizActionId", this.bizActionId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "isEnabled", this.isEnabled);
        BpmnModelJsonHelper.SetAttributeValue(obj, "callType", this.callType);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.bizEventId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizEventId");
        this.bizActionId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizActionId");
        this.isEnabled = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isEnabled");
        this.callType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "callType");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 生单流程实体类。
 */
class CreationProcessEntity extends BizProcessEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.creationRuleId = null;
        this.reverseWriteRuleId = null;
        this.reverseWriteRuleClassName = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationRuleId", this.creationRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "reverseWriteRuleId", this.reverseWriteRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "reverseWriteRuleClassName", this.reverseWriteRuleClassName);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.creationRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationRuleId");
        this.reverseWriteRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "reverseWriteRuleId");
        this.reverseWriteRuleClassName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "reverseWriteRuleClassName");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class CreationProcessContent extends Content {
    /**
     * @protected
     * @return {?}
     */
    GetEntityClass() {
        return CreationProcessEntity;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 映射规则实体类接口。
 * @abstract
 */
class MappingEntity extends P2PMetadataEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.mappingRuleMetadataId = null;
        this.mappingRuleId = null;
        this.mappingComponentMetadataId = null;
        this.mappingComponentId = null;
        this.mappingClassTypeName = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingRuleMetadataId", this.mappingRuleMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingRuleId", this.mappingRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingComponentMetadataId", this.mappingComponentMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingComponentId", this.mappingComponentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingClassTypeName", this.mappingClassTypeName);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.mappingRuleMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingRuleMetadataId");
        this.mappingRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingRuleId");
        this.mappingComponentMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingComponentMetadataId");
        this.mappingComponentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingComponentId");
        this.mappingClassTypeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingClassTypeName");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 生单规则实体类
 */
class CreationRuleEntity extends MappingEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.isEnabled = false;
        this.formSettingsId = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "isEnabled", this.isEnabled);
        BpmnModelJsonHelper.SetAttributeValue(obj, "formSettingsId", this.formSettingsId);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.isEnabled = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isEnabled");
        this.formSettingsId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "formSettingsId");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class CreationRuleContent extends Content {
    /**
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.mappingContent = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingContent", this.mappingContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "formSettings", this.formSettings);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.mappingContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingContent");
        this.formSettings = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "formSettings");
    }
    /**
     * @protected
     * @return {?}
     */
    GetEntityClass() {
        return CreationRuleEntity;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 回写流程实体类。
 */
class WritebackProcessEntity extends BizProcessEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.writebackRuleId = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "writebackRuleId", this.writebackRuleId);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.writebackRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "writebackRuleId");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class WritebackProcessContent extends Content {
    /**
     * @protected
     * @return {?}
     */
    GetEntityClass() {
        return WritebackProcessEntity;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 回写规则实体类。
 */
class WritebackRuleEntity extends MappingEntity {
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class WritebackRuleContent extends Content {
    /**
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.mappingContent = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingContent", this.mappingContent);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.mappingContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingContent");
    }
    /**
     * @protected
     * @return {?}
     */
    GetEntityClass() {
        return WritebackRuleEntity;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const AssociationType = {
    /**
     * 默认。
     */
    DEFAULT: "DEFAULT",
    /**
     * 生成关系。
     */
    GENERATE: "GENERATE",
    /**
     * 更新关系。
     */
    UPDATE: "UPDATE",
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class AifConfigEntity extends Entity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.content = null;
        this.tag = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "content", this.content);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tag", this.tag);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.content = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "content");
        this.tag = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tag");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class AifLogEntity extends Entity {
    constructor() {
        super(...arguments);
        this.logLevel = AifLogLevel.NONE;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.content = null;
        this.trackingTag = null;
        this.logTime = null;
        this.logLevel = AifLogLevel.NONE;
        this.suCode = null;
        this.className = null;
        this.methodName = null;
        this.logPoint = null;
        this.bizEventId = null;
        this.bifCpId = null;
        this.bifWpId = null;
        this.creationProcessId = null;
        this.writebackProcessId = null;
        this.processInstanceId = null;
        this.creationRuleId = null;
        this.writebackRuleId = null;
        this.ruleInstanceId = null;
        this.bizActionId = null;
        this.threadId = null;
        this.sessionId = null;
        this.bizContextId = null;
        this.userId = null;
        this.tenantId = null;
        this.tag = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "content", this.content);
        BpmnModelJsonHelper.SetAttributeValue(obj, "trackingTag", this.trackingTag);
        BpmnModelJsonHelper.SetAttributeValue(obj, "logTime", this.logTime);
        BpmnModelJsonHelper.SetAttributeValue(obj, "logLevel", this.logLevel);
        BpmnModelJsonHelper.SetAttributeValue(obj, "suCode", this.suCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "className", this.className);
        BpmnModelJsonHelper.SetAttributeValue(obj, "methodName", this.methodName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "logPoint", this.logPoint);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizEventId", this.bizEventId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bifCpId", this.bifCpId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bifWpId", this.bifWpId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationProcessId", this.creationProcessId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "writebackProcessId", this.writebackProcessId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "processInstanceId", this.processInstanceId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationRuleId", this.creationRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "writebackRuleId", this.writebackRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "ruleInstanceId", this.ruleInstanceId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizActionId", this.bizActionId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "threadId", this.threadId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sessionId", this.sessionId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizContextId", this.bizContextId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "userId", this.userId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tenantId", this.tenantId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tag", this.tag);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.content = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "content");
        this.trackingTag = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "trackingTag");
        this.logTime = BpmnModelJsonHelper.GetAttributeValueAsDateTime(obj, "logTime");
        this.logLevel = AifLogLevel[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "logLevel")];
        this.suCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "suCode");
        this.className = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "className");
        this.methodName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "methodName");
        this.logPoint = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "logPoint");
        this.bizEventId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizEventId");
        this.bifCpId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bifCpId");
        this.bifWpId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bifWpId");
        this.creationProcessId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationProcessId");
        this.writebackProcessId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "writebackProcessId");
        this.processInstanceId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "processInstanceId");
        this.creationRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationRuleId");
        this.writebackRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "writebackRuleId");
        this.ruleInstanceId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "ruleInstanceId");
        this.bizActionId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizActionId");
        this.threadId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "threadId");
        this.sessionId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sessionId");
        this.bizContextId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizContextId");
        this.userId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "userId");
        this.tenantId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tenantId");
        this.tag = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tag");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class AssociationEntity extends Entity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.creationRuleId = null;
        this.creationRuleInstanceId = null;
        this.bizFlowchartId = null;
        this.creationProcessId = null;
        this.creationProcessInstanceId = null;
        this.srcBeMetadataId = null;
        this.tarBeMetadataId = null;
        this.tarBoId = null;
        this.srcBoId = null;
        this.srcAppCode = null;
        this.tarAppCode = null;
        this.srcSuCode = null;
        this.tarSuCode = null;
        //this.srcBeType = null;
        //this.tarBeType = null;
        this.relationName = null;
        this.srcRootTableName = null;
        this.srcRootDataId = null;
        this.srcParentTableName = null;
        this.srcParentDataId = null;
        this.srcTableName = null;
        this.srcDataId = null;
        this.tarRootTableName = null;
        this.tarRootDataId = null;
        this.tarParentTableName = null;
        this.tarParentDataId = null;
        this.tarTableName = null;
        this.tarDataId = null;
        //this.srcVoType = null;
        //this.tarVoType = null;
        //this.tarVoProxyType = null;
        this.srcVoMetadataId = null;
        this.tarVoMetadataId = null;
        this.tarVoProxyMetadataId = null;
        this.srcTableNamePath = null;
        this.srcDataIdPath = null;
        this.tarTableNamePath = null;
        this.tarDataIdPath = null;
        this.srcBeId = null;
        this.tarBeId = null;
        this.srcVoId = null;
        this.tarVoId = null;
        this.tarVoProxyId = null;
        this.srcBeMetadataRootId = null;
        this.srcBeMetadataParentId = null;
        this.srcBeMetadataIdPath = null;
        this.srcBeRootId = null;
        this.srcBeParentId = null;
        this.srcBeIdPath = null;
        this.srcVoMetadataRootId = null;
        this.srcVoMetadataParentId = null;
        this.srcVoMetadataIdPath = null;
        this.srcVoRootId = null;
        this.srcVoParentId = null;
        this.srcVoIdPath = null;
        this.tarBeMetadataRootId = null;
        this.tarBeMetadataParentId = null;
        this.tarBeMetadataIdPath = null;
        this.tarBeRootId = null;
        this.tarBeParentId = null;
        this.tarBeIdPath = null;
        this.tarVoMetadataRootId = null;
        this.tarVoMetadataParentId = null;
        this.tarVoMetadataIdPath = null;
        this.tarVoRootId = null;
        this.tarVoParentId = null;
        this.tarVoIdPath = null;
        this.tarVoProxyMetadataRootId = null;
        this.tarVoProxyMetadataParentId = null;
        this.tarVoProxyMetadataIdPath = null;
        this.tarVoProxyRootId = null;
        this.tarVoProxyParentId = null;
        this.tarVoProxyIdPath = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationRuleId", this.creationRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationRuleInstanceId", this.creationRuleInstanceId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizFlowchartId", this.bizFlowchartId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationProcessId", this.creationProcessId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationProcessInstanceId", this.creationProcessInstanceId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcBeMetadataId", this.srcBeMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarBeMetadataId", this.tarBeMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarBoId", this.tarBoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcBoId", this.srcBoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcAppCode", this.srcAppCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarAppCode", this.tarAppCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcSuCode", this.srcSuCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarSuCode", this.tarSuCode);
        //BpmnModelJsonHelper.SetAttributeValue(obj, "srcBeType", this.srcBeType);
        //BpmnModelJsonHelper.SetAttributeValue(obj, "tarBeType", this.tarBeType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "relationName", this.relationName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcRootTableName", this.srcRootTableName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcRootDataId", this.srcRootDataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcParentTableName", this.srcParentTableName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcParentDataId", this.srcParentDataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcTableName", this.srcTableName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcDataId", this.srcDataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarRootTableName", this.tarRootTableName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarRootDataId", this.tarRootDataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarParentTableName", this.tarParentTableName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarParentDataId", this.tarParentDataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarTableName", this.tarTableName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarDataId", this.tarDataId);
        //BpmnModelJsonHelper.SetAttributeValue(obj, "srcVoType", this.srcVoType);
        //BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoType", this.tarVoType);
        //BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoProxyType", this.tarVoProxyType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcVoMetadataId", this.srcVoMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoMetadataId", this.tarVoMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoProxyMetadataId", this.tarVoProxyMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcTableNamePath", this.srcTableNamePath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcDataIdPath", this.srcDataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarTableNamePath", this.tarTableNamePath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarDataIdPath", this.tarDataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcBeId", this.srcBeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarBeId", this.tarBeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcVoId", this.srcVoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoId", this.tarVoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoProxyId", this.tarVoProxyId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcBeMetadataRootId", this.srcBeMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcBeMetadataParentId", this.srcBeMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcBeMetadataIdPath", this.srcBeMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcBeRootId", this.srcBeRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcBeParentId", this.srcBeParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcBeIdPath", this.srcBeIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcVoMetadataRootId", this.srcVoMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcVoMetadataParentId", this.srcVoMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcVoMetadataIdPath", this.srcVoMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcVoRootId", this.srcVoRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcVoParentId", this.srcVoParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcVoIdPath", this.srcVoIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarBeMetadataRootId", this.tarBeMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarBeMetadataParentId", this.tarBeMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarBeMetadataIdPath", this.tarBeMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarBeRootId", this.tarBeRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarBeParentId", this.tarBeParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarBeIdPath", this.tarBeIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoMetadataRootId", this.tarVoMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoMetadataParentId", this.tarVoMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoMetadataIdPath", this.tarVoMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoRootId", this.tarVoRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoParentId", this.tarVoParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoIdPath", this.tarVoIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoProxyMetadataRootId", this.tarVoProxyMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoProxyMetadataParentId", this.tarVoProxyMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoProxyMetadataIdPath", this.tarVoProxyMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoProxyRootId", this.tarVoProxyRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoProxyParentId", this.tarVoProxyParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarVoProxyIdPath", this.tarVoProxyIdPath);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.creationRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationRuleId");
        this.creationRuleInstanceId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationRuleInstanceId");
        this.bizFlowchartId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizFlowchartId");
        this.creationProcessId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationProcessId");
        this.creationProcessInstanceId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationProcessInstanceId");
        this.srcBeMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcBeMetadataId");
        this.tarBeMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarBeMetadataId");
        this.tarBoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarBoId");
        this.srcBoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcBoId");
        this.srcAppCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcAppCode");
        this.tarAppCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarAppCode");
        this.srcSuCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcSuCode");
        this.tarSuCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarSuCode");
        //this.srcBeType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcBeType");
        //this.tarBeType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarBeType");
        this.relationName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "relationName");
        this.srcRootTableName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcRootTableName");
        this.srcRootDataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcRootDataId");
        this.srcParentTableName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcParentTableName");
        this.srcParentDataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcParentDataId");
        this.srcTableName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcTableName");
        this.srcDataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcDataId");
        this.tarRootTableName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarRootTableName");
        this.tarRootDataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarRootDataId");
        this.tarParentTableName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarParentTableName");
        this.tarParentDataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarParentDataId");
        this.tarTableName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarTableName");
        this.tarDataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarDataId");
        //this.srcVoType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcVoType");
        //this.tarVoType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoType");
        //this.tarVoProxyType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoProxyType");
        this.srcVoMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcVoMetadataId");
        this.tarVoMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoMetadataId");
        this.tarVoProxyMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoProxyMetadataId");
        this.srcTableNamePath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcTableNamePath");
        this.srcDataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcDataIdPath");
        this.tarTableNamePath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarTableNamePath");
        this.tarDataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarDataIdPath");
        this.srcBeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcBeId");
        this.tarBeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarBeId");
        this.srcVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcVoId");
        this.tarVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoId");
        this.tarVoProxyId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoProxyId");
        this.srcBeMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcBeMetadataRootId");
        this.srcBeMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcBeMetadataParentId");
        this.srcBeMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcBeMetadataIdPath");
        this.srcBeRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcBeRootId");
        this.srcBeParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcBeParentId");
        this.srcBeIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcBeIdPath");
        this.srcVoMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcVoMetadataRootId");
        this.srcVoMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcVoMetadataParentId");
        this.srcVoMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcVoMetadataIdPath");
        this.srcVoRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcVoRootId");
        this.srcVoParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcVoParentId");
        this.srcVoIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcVoIdPath");
        this.tarBeMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarBeMetadataRootId");
        this.tarBeMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarBeMetadataParentId");
        this.tarBeMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarBeMetadataIdPath");
        this.tarBeRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarBeRootId");
        this.tarBeParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarBeParentId");
        this.tarBeIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarBeIdPath");
        this.tarVoMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoMetadataRootId");
        this.tarVoMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoMetadataParentId");
        this.tarVoMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoMetadataIdPath");
        this.tarVoRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoRootId");
        this.tarVoParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoParentId");
        this.tarVoIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoIdPath");
        this.tarVoProxyMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoProxyMetadataRootId");
        this.tarVoProxyMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoProxyMetadataParentId");
        this.tarVoProxyMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoProxyMetadataIdPath");
        this.tarVoProxyRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoProxyRootId");
        this.tarVoProxyParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoProxyParentId");
        this.tarVoProxyIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarVoProxyIdPath");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BizFlowchartRefEntity extends Entity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.bizFlowchartId = null;
        this.refEntityId = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizFlowchartId", this.bizFlowchartId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "refEntityId", this.refEntityId);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.bizFlowchartId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizFlowchartId");
        this.refEntityId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "refEntityId");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BizFlowchartRefMetadataEntity extends BizFlowchartRefEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.refAppCode = null;
        this.refSuCode = null;
        this.refBoId = null;
        this.bizFlowchartAppCode = null;
        this.bizFlowchartSuCode = null;
        this.bizFlowchartBoId = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "refAppCode", this.refAppCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "refSuCode", this.refSuCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "refBoId", this.refBoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizFlowchartAppCode", this.bizFlowchartAppCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizFlowchartSuCode", this.bizFlowchartSuCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizFlowchartBoId", this.bizFlowchartBoId);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.refAppCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "refAppCode");
        this.refSuCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "refSuCode");
        this.refBoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "refBoId");
        this.bizFlowchartAppCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizFlowchartAppCode");
        this.bizFlowchartSuCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizFlowchartSuCode");
        this.bizFlowchartBoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizFlowchartBoId");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BizFlowchartRefP2PMetadataEntity extends BizFlowchartRefMetadataEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.sourceAppCode = null;
        this.sourceSuCode = null;
        this.sourceBoId = null;
        this.sourceBeMetadataId = null;
        this.sourceBeId = null;
        this.sourceVoMetadataId = null;
        this.sourceVoId = null;
        this.targetAppCode = null;
        this.targetSuCode = null;
        this.targetBoId = null;
        this.targetBeMetadataId = null;
        this.targetBeId = null;
        this.targetVoMetadataId = null;
        this.targetVoId = null;
        this.targetVoProxyMetadataId = null;
        this.targetVoProxyId = null;
        this.sourceBeMetadataRootId = null;
        this.sourceBeMetadataParentId = null;
        this.sourceBeMetadataIdPath = null;
        this.sourceBeRootId = null;
        this.sourceBeParentId = null;
        this.sourceBeIdPath = null;
        this.sourceVoMetadataRootId = null;
        this.sourceVoMetadataParentId = null;
        this.sourceVoMetadataIdPath = null;
        this.sourceVoRootId = null;
        this.sourceVoParentId = null;
        this.sourceVoIdPath = null;
        this.targetBeMetadataRootId = null;
        this.targetBeMetadataParentId = null;
        this.targetBeMetadataIdPath = null;
        this.targetBeRootId = null;
        this.targetBeParentId = null;
        this.targetBeIdPath = null;
        this.targetVoMetadataRootId = null;
        this.targetVoMetadataParentId = null;
        this.targetVoMetadataIdPath = null;
        this.targetVoRootId = null;
        this.targetVoParentId = null;
        this.targetVoIdPath = null;
        this.targetVoProxyMetadataRootId = null;
        this.targetVoProxyMetadataParentId = null;
        this.targetVoProxyMetadataIdPath = null;
        this.targetVoProxyRootId = null;
        this.targetVoProxyParentId = null;
        this.targetVoProxyIdPath = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceAppCode", this.sourceAppCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceSuCode", this.sourceSuCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBoId", this.sourceBoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeMetadataId", this.sourceBeMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeId", this.sourceBeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoMetadataId", this.sourceVoMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoId", this.sourceVoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetAppCode", this.targetAppCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetSuCode", this.targetSuCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBoId", this.targetBoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeMetadataId", this.targetBeMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeId", this.targetBeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoMetadataId", this.targetVoMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoId", this.targetVoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyMetadataId", this.targetVoProxyMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyId", this.targetVoProxyId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeMetadataRootId", this.sourceBeMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeMetadataParentId", this.sourceBeMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeMetadataIdPath", this.sourceBeMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeRootId", this.sourceBeRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeParentId", this.sourceBeParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeIdPath", this.sourceBeIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoMetadataRootId", this.sourceVoMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoMetadataParentId", this.sourceVoMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoMetadataIdPath", this.sourceVoMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoRootId", this.sourceVoRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoParentId", this.sourceVoParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoIdPath", this.sourceVoIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeMetadataRootId", this.targetBeMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeMetadataParentId", this.targetBeMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeMetadataIdPath", this.targetBeMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeRootId", this.targetBeRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeParentId", this.targetBeParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeIdPath", this.targetBeIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoMetadataRootId", this.targetVoMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoMetadataParentId", this.targetVoMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoMetadataIdPath", this.targetVoMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoRootId", this.targetVoRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoParentId", this.targetVoParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoIdPath", this.targetVoIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyMetadataRootId", this.targetVoProxyMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyMetadataParentId", this.targetVoProxyMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyMetadataIdPath", this.targetVoProxyMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyRootId", this.targetVoProxyRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyParentId", this.targetVoProxyParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyIdPath", this.targetVoProxyIdPath);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.sourceAppCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceAppCode");
        this.sourceSuCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceSuCode");
        this.sourceBoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBoId");
        this.sourceBeMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeMetadataId");
        this.sourceBeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeId");
        this.sourceVoMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoMetadataId");
        this.sourceVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoId");
        this.targetAppCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetAppCode");
        this.targetSuCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetSuCode");
        this.targetBoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBoId");
        this.targetBeMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeMetadataId");
        this.targetBeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeId");
        this.targetVoMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoMetadataId");
        this.targetVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoId");
        this.targetVoProxyMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyMetadataId");
        this.targetVoProxyId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyId");
        this.sourceBeMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeMetadataRootId");
        this.sourceBeMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeMetadataParentId");
        this.sourceBeMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeMetadataIdPath");
        this.sourceBeRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeRootId");
        this.sourceBeParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeParentId");
        this.sourceBeIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeIdPath");
        this.sourceVoMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoMetadataRootId");
        this.sourceVoMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoMetadataParentId");
        this.sourceVoMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoMetadataIdPath");
        this.sourceVoRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoRootId");
        this.sourceVoParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoParentId");
        this.sourceVoIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoIdPath");
        this.targetBeMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeMetadataRootId");
        this.targetBeMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeMetadataParentId");
        this.targetBeMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeMetadataIdPath");
        this.targetBeRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeRootId");
        this.targetBeParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeParentId");
        this.targetBeIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeIdPath");
        this.targetVoMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoMetadataRootId");
        this.targetVoMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoMetadataParentId");
        this.targetVoMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoMetadataIdPath");
        this.targetVoRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoRootId");
        this.targetVoParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoParentId");
        this.targetVoIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoIdPath");
        this.targetVoProxyMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyMetadataRootId");
        this.targetVoProxyMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyMetadataParentId");
        this.targetVoProxyMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyMetadataIdPath");
        this.targetVoProxyRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyRootId");
        this.targetVoProxyParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyParentId");
        this.targetVoProxyIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyIdPath");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BizFlowchartCPEntity extends BizFlowchartRefP2PMetadataEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.bizEventId = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizEventId", this.bizEventId);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.bizEventId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizEventId");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BizFlowchartCREntity extends BizFlowchartRefP2PMetadataEntity {
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BizFlowchartWPEntity extends BizFlowchartRefP2PMetadataEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.bizEventId = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizEventId", this.bizEventId);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.bizEventId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizEventId");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class CreationRuleEntityEx extends CreationRuleEntity {
    /**
     * @param {?=} entity
     */
    constructor(entity) {
        super();
        if (entity != null) {
            this.id = entity.id;
            this.appCode = entity.appCode;
            this.boId = entity.boId;
            this.createdTime = entity.createdTime;
            this.creator = entity.creator;
            this.description = entity.description;
            this.isEnabled = entity.isEnabled;
            this.lastModifiedTime = entity.lastModifiedTime;
            this.lastModifier = entity.lastModifier;
            this.mappingComponentId = entity.mappingComponentId;
            this.mappingComponentMetadataId = entity.mappingComponentMetadataId;
            this.mappingRuleId = entity.mappingRuleId;
            this.mappingRuleMetadataId = entity.mappingRuleMetadataId;
            this.name = entity.name;
            this.persistenceVersion = entity.persistenceVersion;
            this.sourceAppCode = entity.sourceAppCode;
            this.sourceBeId = entity.sourceBeId;
            this.sourceBeMetadataId = entity.sourceBeMetadataId;
            //this.sourceBeType = entity.sourceBeType;
            this.sourceBoId = entity.sourceBoId;
            this.sourceSuCode = entity.sourceSuCode;
            this.sourceVoId = entity.sourceVoId;
            this.sourceVoMetadataId = entity.sourceVoMetadataId;
            //this.sourceVoType = entity.sourceVoType;
            this.suCode = entity.suCode;
            this.targetAppCode = entity.targetAppCode;
            this.targetBeId = entity.targetBeId;
            this.targetBeMetadataId = entity.targetBeMetadataId;
            //this.targetBeType = entity.targetBeType;
            this.targetBoId = entity.targetBoId;
            this.targetSuCode = entity.targetSuCode;
            this.targetVoId = entity.targetVoId;
            this.targetVoMetadataId = entity.targetVoMetadataId;
            this.targetVoProxyId = entity.targetVoProxyId;
            this.targetVoProxyMetadataId = entity.targetVoProxyMetadataId;
            //this.targetVoProxyType = entity.targetVoProxyType;
            //this.targetVoType = entity.targetVoType;
        }
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.sourceBeName = null;
        this.targetBeName = null;
        this.sourceVoName = null;
        this.targetVoName = null;
        this.targetVoProxyName = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeName", this.sourceBeName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeName", this.targetBeName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoName", this.sourceVoName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoName", this.targetVoName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyName", this.targetVoProxyName);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.sourceBeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeName");
        this.targetBeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeName");
        this.sourceVoName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoName");
        this.targetVoName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoName");
        this.targetVoProxyName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyName");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class GeneralTextEntity extends Entity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.text = null;
        this.tag = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "text", this.text);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tag", this.tag);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.text = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "text");
        this.tag = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tag");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const PushCreationMode = {
    CREATION: "CREATION",
    TASKCENTER: "TASKCENTER",
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const ParticipantType = {
    UserParticipant: "UserParticipant",
    PositionParticipant: "PositionParticipant",
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class PositionParticipant extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.orgType = "Sys";
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.positionId = null;
        this.positionName = null;
        this.positionType = null;
        this.orgId = null;
        this.orgName = null;
        this.orgType = null;
        this.orgIdExpression = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "positionId", this.positionId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "positionName", this.positionName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "positionType", this.positionType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "orgId", this.orgId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "orgName", this.orgName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "orgType", this.orgType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "orgIdExpression", this.orgIdExpression);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.positionId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "positionId");
        this.positionName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "positionName");
        this.positionType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "positionType");
        this.orgId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "orgId");
        this.orgName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "orgName");
        this.orgType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "orgType");
        this.orgIdExpression = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "orgIdExpression");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class UserParticipant extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.orgType = "Sys";
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.userId = null;
        this.userName = null;
        this.orgId = null;
        this.orgName = null;
        this.orgType = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "userId", this.userId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "userName", this.userName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "orgId", this.orgId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "orgName", this.orgName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "orgType", this.orgType);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.userId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "userId");
        this.userName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "userName");
        this.orgId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "orgId");
        this.orgName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "orgName");
        this.orgType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "orgType");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class Participant extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.participantType = ParticipantType.UserParticipant;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.participantType = ParticipantType.UserParticipant;
        this.userParticipant = null;
        this.positionParticipant = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "participantType", this.participantType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "userParticipant", this.userParticipant);
        BpmnModelJsonHelper.SetAttributeValue(obj, "positionParticipant", this.positionParticipant);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.participantType = ParticipantType[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "participantType")];
        this.userParticipant = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, "userParticipant", UserParticipant);
        this.positionParticipant = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, "positionParticipant", PositionParticipant);
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const TaskHandlingMenuParameterMode = {
    CONSTANT: "CONSTANT",
    FIELD: "FIELD",
    EXPRESSION: "EXPRESSION",
    COMPONENT: "COMPONENT",
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TaskHandlingMenuParameter extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.parameterMode = TaskHandlingMenuParameterMode.CONSTANT;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.parameterMode = TaskHandlingMenuParameterMode.CONSTANT;
        this.code = null;
        this.constantValue = null;
        this.fieldContent = null;
        this.expressionContent = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "parameterMode", this.parameterMode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "code", this.code);
        BpmnModelJsonHelper.SetAttributeValue(obj, "constantValue", this.constantValue);
        BpmnModelJsonHelper.SetAttributeValue(obj, "fieldContent", this.fieldContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "expressionContent", this.expressionContent);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.parameterMode = TaskHandlingMenuParameterMode[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "parameterMode")];
        this.code = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "code");
        this.constantValue = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "constantValue");
        this.fieldContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "fieldContent");
        this.expressionContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "expressionContent");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TaskHandlingMenuArgs extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.parameters = [];
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.menuId = null;
        this.menuName = null;
        this.parameters = [];
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "menuId", this.menuId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "menuName", this.menuName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "parameters", this.parameters);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.menuId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "menuId");
        this.menuName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "menuName");
        this.parameters = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "parameters", TaskHandlingMenuParameter);
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TaskCenterContent extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.participants = [];
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.participants = [];
        this.taskHandlingMenuArgs = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "participants", this.participants);
        BpmnModelJsonHelper.SetAttributeValue(obj, "taskHandlingMenuArgs", this.taskHandlingMenuArgs);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.participants = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "participants", Participant);
        this.taskHandlingMenuArgs = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, "taskHandlingMenuArgs", TaskHandlingMenuArgs);
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 手工生单界面相关配置。
 */
class FormSettings extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.pushCreationMode = PushCreationMode.CREATION;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.pushCreationMode = PushCreationMode.CREATION;
        this.taskCenterContent = null;
        this.sourceDataSelectorModuleUrl = null;
        this.sourceDataSelectorAppId = null;
        this.sourceDataSelectorAppName = null;
        this.sourceDataSelectorAppEntrance = null;
        this.sourceDataSelectorAppEntranceName = null;
        this.targetCardAppId = null;
        this.targetCardAppName = null;
        this.targetCardAppEntrance = null;
        this.targetCardAppLoadCmd = null;
        this.targetCardAppEntranceName = null;
        this.targetListAppId = null;
        this.targetListAppName = null;
        this.targetListAppEntrance = null;
        this.targetListAppEntrance = null;
        this.targetListAppEntranceName = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "pushCreationMode", this.pushCreationMode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "taskCenterContent", this.taskCenterContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceDataSelectorModuleUrl", this.sourceDataSelectorModuleUrl);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceDataSelectorAppId", this.sourceDataSelectorAppId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceDataSelectorAppName", this.sourceDataSelectorAppName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceDataSelectorAppEntrance", this.sourceDataSelectorAppEntrance);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceDataSelectorAppEntranceName", this.sourceDataSelectorAppEntranceName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetCardAppId", this.targetCardAppId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetCardAppName", this.targetCardAppName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetCardAppEntrance", this.targetCardAppEntrance);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetCardAppLoadCmd", this.targetCardAppLoadCmd);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetCardAppEntranceName", this.targetCardAppEntranceName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetListAppId", this.targetListAppId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetListAppName", this.targetListAppName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetListAppEntrance", this.targetListAppEntrance);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetListAppEntrance", this.targetListAppEntrance);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetListAppEntranceName", this.targetListAppEntranceName);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        /** @type {?} */
        const pushCreationMode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "pushCreationMode");
        if (pushCreationMode == null) {
            this.pushCreationMode = PushCreationMode.CREATION;
        }
        else {
            this.pushCreationMode = PushCreationMode[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "pushCreationMode")];
        }
        this.taskCenterContent = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, "taskCenterContent", TaskCenterContent);
        this.sourceDataSelectorModuleUrl = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceDataSelectorModuleUrl");
        this.sourceDataSelectorAppId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceDataSelectorAppId");
        this.sourceDataSelectorAppName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceDataSelectorAppName");
        this.sourceDataSelectorAppEntrance = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceDataSelectorAppEntrance");
        this.sourceDataSelectorAppEntranceName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceDataSelectorAppEntranceName");
        this.targetCardAppId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetCardAppId");
        this.targetCardAppName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetCardAppName");
        this.targetCardAppEntrance = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetCardAppEntrance");
        this.targetCardAppLoadCmd = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetCardAppLoadCmd");
        this.targetCardAppEntranceName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetCardAppEntranceName");
        this.targetListAppId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetListAppId");
        this.targetListAppName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetListAppName");
        this.targetListAppEntrance = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetListAppEntrance");
        this.targetListAppLoadCmd = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetListAppLoadCmd");
        this.targetListAppEntranceName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetListAppEntranceName");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const ExpressionType = {
    CONSTANT: "CONSTANT",
    FIELDVALUE: "FIELDVALUE",
    EXPRESSION: "EXPRESSION",
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const ReverseMode = {
    /**
     * 覆盖。
     */
    COVERING: "COVERING",
    /**
     * 累加。
     */
    ACCUMULATING: "ACCUMULATING",
    /**
     * 扣减。
     */
    DEDUCTION: "DEDUCTION",
    /**
     * 表达式。
     */
    EXPRESSION: "EXPRESSION",
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class ReverseWriteRuleExpressionContent extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.expressionType = ExpressionType.FIELDVALUE;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.upFieldCodePath = null;
        this.upVoFieldType = null;
        this.upVoFieldName = null;
        this.upVoTableName = null;
        this.downFieldCodePath = null;
        this.downVoFieldType = null;
        this.downVoFieldName = null;
        this.downVoTableName = null;
        this.expressionType = ExpressionType.FIELDVALUE;
        this.reverseMode = ReverseMode.COVERING;
        this.expressionContent = null;
        this.constantValue = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "upFieldCodePath", this.upFieldCodePath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upVoFieldType", this.upVoFieldType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upVoFieldName", this.upVoFieldName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upVoTableName", this.upVoTableName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downFieldCodePath", this.downFieldCodePath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downVoFieldType", this.downVoFieldType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downVoFieldName", this.downVoFieldName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downVoTableName", this.downVoTableName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "expressionType", this.expressionType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "reverseMode", this.reverseMode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "expressionContent", this.expressionContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "constantValue", this.constantValue);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.upFieldCodePath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upFieldCodePath");
        this.upVoFieldType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upVoFieldType");
        this.upVoFieldName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upVoFieldName");
        this.upVoTableName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upVoTableName");
        this.downFieldCodePath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downFieldCodePath");
        this.downVoFieldType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downVoFieldType");
        this.downVoFieldName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downVoFieldName");
        this.downVoTableName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downVoTableName");
        if (BpmnModelJsonHelper.GetAttributeValueAsString(obj, "expressionType") != null) {
            this.expressionType = ExpressionType[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "expressionType")];
        }
        if (BpmnModelJsonHelper.GetAttributeValueAsString(obj, "reverseMode") != null) {
            this.reverseMode = ReverseMode[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "reverseMode")];
        }
        this.expressionContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "expressionContent");
        this.constantValue = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "constantValue");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const VoFieldType = {
    String: "String",
    Text: "Text",
    Integer: "Integer",
    Decimal: "Decimal",
    Boolean: "Boolean",
    Date: "Date",
    DateTime: "DateTime",
    Binary: "Binary",
    Enum: "Enum",
    Association: "Association",
    DynamicProp: "DynamicProp",
    SingleUdt: "SingleUdt",
    EnumSingleUdt: "EnumSingleUdt",
    RelationSingleUdt: "RelationSingleUdt",
    SingleColumnMultiUdt: "SingleColumnMultiUdt",
    MultiColumnsMultiUdt: "MultiColumnsMultiUdt",
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
class SlimEntity extends JsonConvertableImpl {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.id = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "id", this.id);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.id = BpmnModelJsonHelper.GetAttributeValue(obj, "id");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class SlimAssociationEntity extends SlimEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.srcBeMetadataId = null;
        this.tarBeMetadataId = null;
        this.srcTableName = null;
        this.srcDataId = null;
        this.tarTableName = null;
        this.tarDataId = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcBeMetadataId", this.srcBeMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarBeMetadataId", this.tarBeMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcTableName", this.srcTableName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "srcDataId", this.srcDataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarTableName", this.tarTableName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "tarDataId", this.tarDataId);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.srcBeMetadataId = BpmnModelJsonHelper.GetAttributeValue(obj, "srcBeMetadataId");
        this.tarBeMetadataId = BpmnModelJsonHelper.GetAttributeValue(obj, "tarBeMetadataId");
        this.srcTableName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcTableName");
        this.srcDataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "srcDataId");
        this.tarTableName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarTableName");
        this.tarDataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "tarDataId");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
class SlimMetadataEntity extends SlimEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.suCode = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "suCode", this.suCode);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.suCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "suCode");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class SlimBizActionEntity extends SlimMetadataEntity {
    constructor() {
        super(...arguments);
        this.bizActionType = BizActionType.DEFAULT;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.bizActionType = BizActionType.DEFAULT;
        this.bizActionAgentComponentId = null;
        this.voId = null;
        this.bizActionAgentClassTypeName = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizActionType", this.bizActionType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizActionAgentComponentId", this.bizActionAgentComponentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voId", this.voId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizActionAgentClassTypeName", this.bizActionAgentClassTypeName);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.bizActionType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizActionType");
        this.bizActionAgentComponentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizActionAgentComponentId");
        this.voId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voId");
        this.bizActionAgentClassTypeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizActionAgentClassTypeName");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class SlimBizEventEntity extends SlimMetadataEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.beEventRouterComponentId = null;
        this.bizEventAgentComponentId = null;
        this.voId = null;
        this.canDoExpressionId = null;
        this.bizFlowchartIdExpressionId = null;
        this.beEventRouterClassTypeName = null;
        this.isEnabled = true;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "isEnabled", this.isEnabled);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beEventRouterComponentId", this.beEventRouterComponentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizEventAgentComponentId", this.bizEventAgentComponentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voId", this.voId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "canDoExpressionId", this.canDoExpressionId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizFlowchartIdExpressionId", this.bizFlowchartIdExpressionId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "beEventRouterClassTypeName", this.beEventRouterClassTypeName);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.isEnabled = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isEnabled");
        this.beEventRouterComponentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beEventRouterComponentId");
        this.bizEventAgentComponentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizEventAgentComponentId");
        this.voId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voId");
        this.canDoExpressionId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "canDoExpressionId");
        this.bizFlowchartIdExpressionId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizFlowchartIdExpressionId");
        this.beEventRouterClassTypeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "beEventRouterClassTypeName");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
class SlimP2PMetadataEntity extends SlimMetadataEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.sourceBeId = null;
        this.sourceVoId = null;
        this.targetSuCode = null;
        this.targetBeId = null;
        this.targetVoId = null;
        this.targetVoProxyId = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceBeId", this.sourceBeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoId", this.sourceVoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetSuCode", this.targetSuCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetBeId", this.targetBeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoId", this.targetVoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyId", this.targetVoProxyId);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.sourceBeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceBeId");
        this.sourceVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceVoId");
        this.targetSuCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetSuCode");
        this.targetBeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetBeId");
        this.targetVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoId");
        this.targetVoProxyId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetVoProxyId");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
class SlimBizProcessEntity extends SlimP2PMetadataEntity {
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class SlimCreationProcessEntity extends SlimBizProcessEntity {
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
class SlimMappingEntity extends SlimP2PMetadataEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.mappingRuleMetadataId = null;
        this.mappingRuleId = null;
        this.mappingComponentId = null;
        this.mappingClassTypeName = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingRuleMetadataId", this.mappingRuleMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingRuleId", this.mappingRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingComponentId", this.mappingComponentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingClassTypeName", this.mappingClassTypeName);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.mappingRuleMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingRuleMetadataId");
        this.mappingRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingRuleId");
        this.mappingComponentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingComponentId");
        this.mappingClassTypeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingClassTypeName");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class SlimCreationRuleEntity extends SlimMappingEntity {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.formSettingsId = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "formSettingsId", this.formSettingsId);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.formSettingsId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "formSettingsId");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class SlimCreationRuleEntityEx extends SlimCreationRuleEntity {
    /**
     * @param {?=} entity
     */
    constructor(entity) {
        super();
        if (entity != null) {
            this.id = entity.id;
            this.description = entity.description;
            this.mappingComponentId = entity.mappingComponentId;
            this.mappingRuleMetadataId = entity.mappingRuleMetadataId;
            this.name = entity.name;
            this.sourceVoId = entity.sourceVoId;
            this.sourceBeId = entity.sourceBeId;
            this.suCode = entity.suCode;
            this.targetVoId = entity.targetVoId;
            this.targetBeId = entity.targetBeId;
            this.targetSuCode = entity.targetSuCode;
            this.targetVoProxyId = entity.targetVoProxyId;
            this.formSettingsId = entity.formSettingsId;
            this.mappingRuleId = entity.mappingRuleId;
        }
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.name = null;
        this.sourceVoName = null;
        this.targetVoName = null;
        this.targetVoProxyName = null;
        this.description = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "name", this.name);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceVoName", this.sourceVoName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoName", this.targetVoName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetVoProxyName", this.targetVoProxyName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "description", this.description);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.name = BpmnModelJsonHelper.GetAttributeValue(obj, "name");
        this.sourceVoName = BpmnModelJsonHelper.GetAttributeValue(obj, "sourceVoName");
        this.targetVoName = BpmnModelJsonHelper.GetAttributeValue(obj, "targetVoName");
        this.targetVoProxyName = BpmnModelJsonHelper.GetAttributeValue(obj, "targetVoProxyName");
        this.description = BpmnModelJsonHelper.GetAttributeValue(obj, "description");
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class SlimWritebackProcessEntity extends SlimBizProcessEntity {
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class SlimWritebackRuleEntity extends SlimMappingEntity {
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { BpmnModelJsonHelper, ExtensionMethod, JsonConvertableImpl, TextValue, BillData, BillDataFieldBase, BillDataField, BillDataFields, BillDataRow, BillDataRowPersistenceType, BillDataRows, BillDataSubField, BillDataSubFields, BillDataTable, BillDataTables, BillSchema, BillSchemaFieldBase, BillSchemaField, BillSchemaFields, BillSchemaSubField, BillSchemaSubFields, BillSchemaTable, BillSchemaTables, DataType, DataTypeStoreImpl, KitBill, KitField, KitFieldInstance, KitTable, AifConfigIds, AifLogLevel, AifLogLevelConfig, BizActionContent, BizEventContent, BizFlowchartContent, Content, CreationProcessContent, CreationRuleContent, WritebackProcessContent, WritebackRuleContent, AssociationType, BizActionType, CallType, AifConfigEntity, AifLogEntity, AssociationEntity, BizActionEntity, BizEventEntity, BizFlowchartCPEntity, BizFlowchartCREntity, BizFlowchartEntity, BizFlowchartRefEntity, BizFlowchartRefMetadataEntity, BizFlowchartRefP2PMetadataEntity, BizFlowchartWPEntity, BizProcessEntity, CreationProcessEntity, CreationRuleEntity, CreationRuleEntityEx, Entity, GeneralTextEntity, MappingEntity, MetadataEntity, P2PMetadataEntity, WritebackProcessEntity, WritebackRuleEntity, FormSettings, ReverseWriteRuleExpressionContent, VoFieldType, ExpressionType, ReverseMode, PushCreationMode, TaskCenterContent, TaskHandlingMenuArgs, TaskHandlingMenuParameter, TaskHandlingMenuParameterMode, Participant, ParticipantType, UserParticipant, PositionParticipant, SlimAssociationEntity, SlimBizActionEntity, SlimBizEventEntity, SlimBizProcessEntity, SlimCreationProcessEntity, SlimCreationRuleEntity, SlimCreationRuleEntityEx, SlimEntity, SlimMappingEntity, SlimMetadataEntity, SlimP2PMetadataEntity, SlimWritebackProcessEntity, SlimWritebackRuleEntity };

//# sourceMappingURL=edp-aif-common-api.js.map