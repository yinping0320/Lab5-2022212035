/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/tracking/StringTypeFormatInfo.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper, JsonConvertableImpl } from "@edp-aif/common-api";
import { SimpleValueMappingInfo } from "./SimpleValueMappingInfo";
import { StringDisplayMode } from "./StringDisplayMode";
var StringTypeFormatInfo = /** @class */ (function (_super) {
    tslib_1.__extends(StringTypeFormatInfo, _super);
    function StringTypeFormatInfo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.stringDisplayMode = StringDisplayMode.SIMPLEVALUEMAPPING;
        _this.simpleValueMappingInfos = [];
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    StringTypeFormatInfo.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.stringDisplayMode = StringDisplayMode.SIMPLEVALUEMAPPING;
        this.simpleValueMappingInfos = [];
    };
    /**
     * @return {?}
     */
    StringTypeFormatInfo.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "stringDisplayMode", this.stringDisplayMode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "simpleValueMappingInfos", this.simpleValueMappingInfos);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    StringTypeFormatInfo.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.stringDisplayMode = StringDisplayMode[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "stringDisplayMode")];
        this.simpleValueMappingInfos = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "simpleValueMappingInfos", SimpleValueMappingInfo);
    };
    return StringTypeFormatInfo;
}(JsonConvertableImpl));
export { StringTypeFormatInfo };
if (false) {
    /** @type {?} */
    StringTypeFormatInfo.prototype.stringDisplayMode;
    /** @type {?} */
    StringTypeFormatInfo.prototype.simpleValueMappingInfos;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RyaW5nVHlwZUZvcm1hdEluZm8uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWJpZi9ydW50aW1lLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvdHJhY2tpbmcvU3RyaW5nVHlwZUZvcm1hdEluZm8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLG1CQUFtQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFL0UsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFeEQ7SUFBMEMsZ0RBQW1CO0lBQTdEO1FBQUEscUVBMEJDO1FBekJHLHVCQUFpQixHQUFzQixpQkFBaUIsQ0FBQyxrQkFBa0IsQ0FBQztRQUM1RSw2QkFBdUIsR0FBNkIsRUFBRSxDQUFDOztJQXdCM0QsQ0FBQzs7Ozs7SUF0QmEsa0RBQW1COzs7O0lBQTdCO1FBQ0ksaUJBQU0sbUJBQW1CLFdBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsaUJBQWlCLEdBQUcsaUJBQWlCLENBQUMsa0JBQWtCLENBQUM7UUFDOUQsSUFBSSxDQUFDLHVCQUF1QixHQUFHLEVBQUUsQ0FBQztJQUN0QyxDQUFDOzs7O0lBRU0sa0RBQW1COzs7SUFBMUI7O1lBQ1EsR0FBRyxHQUFHLGlCQUFNLG1CQUFtQixXQUFFO1FBRXJDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUN4RixtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUseUJBQXlCLEVBQUUsSUFBSSxDQUFDLHVCQUF1QixDQUFDLENBQUM7UUFFcEcsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVNLGlEQUFrQjs7OztJQUF6QixVQUEwQixHQUFPO1FBQzdCLGlCQUFNLGtCQUFrQixZQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO1FBQ3BILElBQUksQ0FBQyx1QkFBdUIsR0FBRyxtQkFBbUIsQ0FBQyx1QkFBdUIsQ0FBQyxHQUFHLEVBQUUseUJBQXlCLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztJQUN2SSxDQUFDO0lBQ0wsMkJBQUM7QUFBRCxDQUFDLEFBMUJELENBQTBDLG1CQUFtQixHQTBCNUQ7Ozs7SUF6QkcsaURBQTRFOztJQUM1RSx1REFBdUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCcG1uTW9kZWxKc29uSGVscGVyLCBKc29uQ29udmVydGFibGVJbXBsIH0gZnJvbSBcIkBlZHAtYWlmL2NvbW1vbi1hcGlcIjtcclxuaW1wb3J0IHsgU2NhbGVNb2RlIH0gZnJvbSBcIi4vU2NhbGVNb2RlXCI7XHJcbmltcG9ydCB7IFNpbXBsZVZhbHVlTWFwcGluZ0luZm8gfSBmcm9tIFwiLi9TaW1wbGVWYWx1ZU1hcHBpbmdJbmZvXCI7XHJcbmltcG9ydCB7IFN0cmluZ0Rpc3BsYXlNb2RlIH0gZnJvbSBcIi4vU3RyaW5nRGlzcGxheU1vZGVcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBTdHJpbmdUeXBlRm9ybWF0SW5mbyBleHRlbmRzIEpzb25Db252ZXJ0YWJsZUltcGwge1xyXG4gICAgc3RyaW5nRGlzcGxheU1vZGU6IFN0cmluZ0Rpc3BsYXlNb2RlID0gU3RyaW5nRGlzcGxheU1vZGUuU0lNUExFVkFMVUVNQVBQSU5HO1xyXG4gICAgc2ltcGxlVmFsdWVNYXBwaW5nSW5mb3M6IFNpbXBsZVZhbHVlTWFwcGluZ0luZm9bXSA9IFtdO1xyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICAgICAgdGhpcy5zdHJpbmdEaXNwbGF5TW9kZSA9IFN0cmluZ0Rpc3BsYXlNb2RlLlNJTVBMRVZBTFVFTUFQUElORztcclxuICAgICAgICB0aGlzLnNpbXBsZVZhbHVlTWFwcGluZ0luZm9zID0gW107XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENvbnZlcnRUb0pzb25PYmplY3QoKToge30ge1xyXG4gICAgICAgIGxldCBvYmogPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcblxyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInN0cmluZ0Rpc3BsYXlNb2RlXCIsIHRoaXMuc3RyaW5nRGlzcGxheU1vZGUpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInNpbXBsZVZhbHVlTWFwcGluZ0luZm9zXCIsIHRoaXMuc2ltcGxlVmFsdWVNYXBwaW5nSW5mb3MpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLnN0cmluZ0Rpc3BsYXlNb2RlID0gU3RyaW5nRGlzcGxheU1vZGVbQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJzdHJpbmdEaXNwbGF5TW9kZVwiKV07XHJcbiAgICAgICAgdGhpcy5zaW1wbGVWYWx1ZU1hcHBpbmdJbmZvcyA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc0xpc3Qob2JqLCBcInNpbXBsZVZhbHVlTWFwcGluZ0luZm9zXCIsIFNpbXBsZVZhbHVlTWFwcGluZ0luZm8pO1xyXG4gICAgfVxyXG59Il19