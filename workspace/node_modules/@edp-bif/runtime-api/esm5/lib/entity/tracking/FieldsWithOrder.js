/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/tracking/FieldsWithOrder.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper, JsonConvertableImpl } from "@edp-aif/common-api";
import { TypeToFormat } from "./typeToFormat";
var FieldsWithOrder = /** @class */ (function (_super) {
    tslib_1.__extends(FieldsWithOrder, _super);
    function FieldsWithOrder() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * 数据类型
         */
        _this.typeToFormat = TypeToFormat.DEFAULT;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    FieldsWithOrder.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.order = 0;
        this.fieldName = null;
        this.fieldPath = null;
        this.name = null;
        this.customName = null;
        this.colI18nValues = null;
        this.typeToFormat = TypeToFormat.DEFAULT;
        this.formatInfo = null;
        this.version = 0;
    };
    /**
     * @return {?}
     */
    FieldsWithOrder.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "order", this.order);
        BpmnModelJsonHelper.SetAttributeValue(obj, "name", this.name);
        BpmnModelJsonHelper.SetAttributeValue(obj, "fieldName", this.fieldName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "fieldPath", this.fieldPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "customName", this.customName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "colI18nValues", this.colI18nValues);
        BpmnModelJsonHelper.SetAttributeValue(obj, "typeToFormat", this.typeToFormat);
        BpmnModelJsonHelper.SetAttributeValue(obj, "formatInfo", this.formatInfo);
        BpmnModelJsonHelper.SetAttributeValue(obj, "version", this.version);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    FieldsWithOrder.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.order = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, "order");
        this.name = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "name");
        this.fieldName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "fieldName");
        this.fieldPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "fieldPath");
        this.customName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "customName");
        this.colI18nValues = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "colI18nValues");
        this.typeToFormat = TypeToFormat[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "typeToFormat")];
        this.formatInfo = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "formatInfo");
        this.version = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, "version");
    };
    return FieldsWithOrder;
}(JsonConvertableImpl));
export { FieldsWithOrder };
if (false) {
    /** @type {?} */
    FieldsWithOrder.prototype.order;
    /**
     * 字段名
     * @type {?}
     */
    FieldsWithOrder.prototype.fieldName;
    /**
     * 字段名称
     * @type {?}
     */
    FieldsWithOrder.prototype.name;
    /**
     * 字段路径
     * @type {?}
     */
    FieldsWithOrder.prototype.fieldPath;
    /**
     * 自定义名称
     * @type {?}
     */
    FieldsWithOrder.prototype.customName;
    /**
     * 多语信息
     * @type {?}
     */
    FieldsWithOrder.prototype.colI18nValues;
    /**
     * 数据类型
     * @type {?}
     */
    FieldsWithOrder.prototype.typeToFormat;
    /**
     * 格式化
     * @type {?}
     */
    FieldsWithOrder.prototype.formatInfo;
    /**
     * 版本信息
     * @type {?}
     */
    FieldsWithOrder.prototype.version;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmllbGRzV2l0aE9yZGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1iaWYvcnVudGltZS1hcGkvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L3RyYWNraW5nL0ZpZWxkc1dpdGhPcmRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFOUM7SUFBcUMsMkNBQW1CO0lBQXhEO1FBQUEscUVBK0VDOzs7O1FBdERHLGtCQUFZLEdBQWlCLFlBQVksQ0FBQyxPQUFPLENBQUM7O0lBc0R0RCxDQUFDOzs7OztJQTNDYSw2Q0FBbUI7Ozs7SUFBN0I7UUFDSSxpQkFBTSxtQkFBbUIsV0FBRSxDQUFDO1FBRTVCLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFDdEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFDdEIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7UUFDdkIsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUM7UUFDMUIsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO0lBQ3JCLENBQUM7Ozs7SUFFTSw2Q0FBbUI7OztJQUExQjs7WUFDUSxHQUFHLEdBQUcsaUJBQU0sbUJBQW1CLFdBQUU7UUFFckMsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDaEUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUQsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDeEUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDeEUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFlBQVksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDMUUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGVBQWUsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDaEYsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGNBQWMsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDOUUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFlBQVksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDMUUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFcEUsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVNLDRDQUFrQjs7OztJQUF6QixVQUEwQixHQUFPO1FBQzdCLGlCQUFNLGtCQUFrQixZQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxLQUFLLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3pFLElBQUksQ0FBQyxJQUFJLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxTQUFTLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQ2pGLElBQUksQ0FBQyxTQUFTLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQ2pGLElBQUksQ0FBQyxVQUFVLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ25GLElBQUksQ0FBQyxhQUFhLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGVBQWUsQ0FBQyxDQUFDO1FBQ3pGLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxjQUFjLENBQUMsQ0FBQyxDQUFDO1FBQ3JHLElBQUksQ0FBQyxVQUFVLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ25GLElBQUksQ0FBQyxPQUFPLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ2pGLENBQUM7SUFDTCxzQkFBQztBQUFELENBQUMsQUEvRUQsQ0FBcUMsbUJBQW1CLEdBK0V2RDs7OztJQTlFRyxnQ0FBYzs7Ozs7SUFJZCxvQ0FBa0I7Ozs7O0lBSWxCLCtCQUFhOzs7OztJQUliLG9DQUFrQjs7Ozs7SUFJbEIscUNBQW1COzs7OztJQUluQix3Q0FBc0I7Ozs7O0lBSXRCLHVDQUFrRDs7Ozs7SUFJbEQscUNBQW1COzs7OztJQUluQixrQ0FBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCcG1uTW9kZWxKc29uSGVscGVyLCBKc29uQ29udmVydGFibGVJbXBsIH0gZnJvbSBcIkBlZHAtYWlmL2NvbW1vbi1hcGlcIjtcclxuaW1wb3J0IHsgVHlwZVRvRm9ybWF0IH0gZnJvbSBcIi4vdHlwZVRvRm9ybWF0XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgRmllbGRzV2l0aE9yZGVyIGV4dGVuZHMgSnNvbkNvbnZlcnRhYmxlSW1wbCB7XHJcbiAgICBvcmRlcjogbnVtYmVyO1xyXG4gICAgLyoqXHJcbiAgICAgKiDlrZfmrrXlkI1cclxuICAgICAqL1xyXG4gICAgZmllbGROYW1lOiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIOWtl+auteWQjeensFxyXG4gICAgICovXHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIOWtl+autei3r+W+hFxyXG4gICAgICovXHJcbiAgICBmaWVsZFBhdGg6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICog6Ieq5a6a5LmJ5ZCN56ewXHJcbiAgICAgKi9cclxuICAgIGN1c3RvbU5hbWU6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICog5aSa6K+t5L+h5oGvXHJcbiAgICAgKi9cclxuICAgIGNvbEkxOG5WYWx1ZXM6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICog5pWw5o2u57G75Z6LXHJcbiAgICAgKi9cclxuICAgIHR5cGVUb0Zvcm1hdDogVHlwZVRvRm9ybWF0ID0gVHlwZVRvRm9ybWF0LkRFRkFVTFQ7XHJcbiAgICAvKipcclxuICAgICAqIOagvOW8j+WMllxyXG4gICAgICovXHJcbiAgICBmb3JtYXRJbmZvOiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIOeJiOacrOS/oeaBr1xyXG4gICAgICovXHJcbiAgICB2ZXJzaW9uOiBudW1iZXI7XHJcblxyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICAgICAgdGhpcy5vcmRlciA9IDA7XHJcbiAgICAgICAgdGhpcy5maWVsZE5hbWUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuZmllbGRQYXRoID0gbnVsbDtcclxuICAgICAgICB0aGlzLm5hbWUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuY3VzdG9tTmFtZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5jb2xJMThuVmFsdWVzID0gbnVsbDtcclxuICAgICAgICB0aGlzLnR5cGVUb0Zvcm1hdCA9IFR5cGVUb0Zvcm1hdC5ERUZBVUxUO1xyXG4gICAgICAgIHRoaXMuZm9ybWF0SW5mbyA9IG51bGw7XHJcbiAgICAgICAgdGhpcy52ZXJzaW9uID0gMDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ29udmVydFRvSnNvbk9iamVjdCgpOiB7fSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuXHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwib3JkZXJcIiwgdGhpcy5vcmRlcik7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwibmFtZVwiLCB0aGlzLm5hbWUpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImZpZWxkTmFtZVwiLCB0aGlzLmZpZWxkTmFtZSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiZmllbGRQYXRoXCIsIHRoaXMuZmllbGRQYXRoKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJjdXN0b21OYW1lXCIsIHRoaXMuY3VzdG9tTmFtZSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiY29sSTE4blZhbHVlc1wiLCB0aGlzLmNvbEkxOG5WYWx1ZXMpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInR5cGVUb0Zvcm1hdFwiLCB0aGlzLnR5cGVUb0Zvcm1hdCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiZm9ybWF0SW5mb1wiLCB0aGlzLmZvcm1hdEluZm8pO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInZlcnNpb25cIiwgdGhpcy52ZXJzaW9uKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgTG9hZEZyb21Kc29uT2JqZWN0KG9iajoge30pOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy5vcmRlciA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc051bWJlcihvYmosIFwib3JkZXJcIik7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJuYW1lXCIpO1xyXG4gICAgICAgIHRoaXMuZmllbGROYW1lID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJmaWVsZE5hbWVcIik7XHJcbiAgICAgICAgdGhpcy5maWVsZFBhdGggPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImZpZWxkUGF0aFwiKTtcclxuICAgICAgICB0aGlzLmN1c3RvbU5hbWUgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImN1c3RvbU5hbWVcIik7XHJcbiAgICAgICAgdGhpcy5jb2xJMThuVmFsdWVzID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJjb2xJMThuVmFsdWVzXCIpO1xyXG4gICAgICAgIHRoaXMudHlwZVRvRm9ybWF0ID0gVHlwZVRvRm9ybWF0W0JwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwidHlwZVRvRm9ybWF0XCIpXTtcclxuICAgICAgICB0aGlzLmZvcm1hdEluZm8gPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImZvcm1hdEluZm9cIik7XHJcbiAgICAgICAgdGhpcy52ZXJzaW9uID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzTnVtYmVyKG9iaiwgXCJ2ZXJzaW9uXCIpO1xyXG4gICAgfVxyXG59Il19