/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/tracking/SummaryFieldsInfo.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper, JsonConvertableImpl } from "@edp-aif/common-api";
import { FieldsWithOrder } from "./FieldsWithOrder";
var SummaryFieldsInfo = /** @class */ (function (_super) {
    tslib_1.__extends(SummaryFieldsInfo, _super);
    function SummaryFieldsInfo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.fields = [];
        _this.childFieldInfos = [];
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    SummaryFieldsInfo.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.code = null;
        this.fields = [];
        this.childFieldInfos = [];
    };
    /**
     * @return {?}
     */
    SummaryFieldsInfo.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "code", this.code);
        BpmnModelJsonHelper.SetAttributeValue(obj, "fields", this.fields);
        BpmnModelJsonHelper.SetAttributeValue(obj, "childFieldInfos", this.childFieldInfos);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    SummaryFieldsInfo.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.code = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "code");
        this.fields = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "fields", FieldsWithOrder);
        this.childFieldInfos = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "childFieldInfos", SummaryFieldsInfo);
    };
    return SummaryFieldsInfo;
}(JsonConvertableImpl));
export { SummaryFieldsInfo };
if (false) {
    /** @type {?} */
    SummaryFieldsInfo.prototype.code;
    /** @type {?} */
    SummaryFieldsInfo.prototype.fields;
    /** @type {?} */
    SummaryFieldsInfo.prototype.childFieldInfos;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3VtbWFyeUZpZWxkc0luZm8uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWJpZi9ydW50aW1lLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvdHJhY2tpbmcvU3VtbWFyeUZpZWxkc0luZm8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLG1CQUFtQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDL0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRXBEO0lBQXVDLDZDQUFtQjtJQUExRDtRQUFBLHFFQThCQztRQTVCRyxZQUFNLEdBQXNCLEVBQUUsQ0FBQztRQUMvQixxQkFBZSxHQUF3QixFQUFFLENBQUM7O0lBMkI5QyxDQUFDOzs7OztJQXpCYSwrQ0FBbUI7Ozs7SUFBN0I7UUFDSSxpQkFBTSxtQkFBbUIsV0FBRSxDQUFDO1FBRTVCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxlQUFlLEdBQUcsRUFBRSxDQUFDO0lBQzlCLENBQUM7Ozs7SUFFTSwrQ0FBbUI7OztJQUExQjs7WUFDUSxHQUFHLEdBQUcsaUJBQU0sbUJBQW1CLFdBQUU7UUFFckMsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUQsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbEUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGlCQUFpQixFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUVwRixPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRU0sOENBQWtCOzs7O0lBQXpCLFVBQTBCLEdBQU87UUFDN0IsaUJBQU0sa0JBQWtCLFlBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLElBQUksR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDdkUsSUFBSSxDQUFDLE1BQU0sR0FBRyxtQkFBbUIsQ0FBQyx1QkFBdUIsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLGVBQWUsQ0FBQyxDQUFDO1FBQzFGLElBQUksQ0FBQyxlQUFlLEdBQUcsbUJBQW1CLENBQUMsdUJBQXVCLENBQUMsR0FBRyxFQUFFLGlCQUFpQixFQUFFLGlCQUFpQixDQUFDLENBQUM7SUFDbEgsQ0FBQztJQUNMLHdCQUFDO0FBQUQsQ0FBQyxBQTlCRCxDQUF1QyxtQkFBbUIsR0E4QnpEOzs7O0lBN0JHLGlDQUFhOztJQUNiLG1DQUErQjs7SUFDL0IsNENBQTBDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnBtbk1vZGVsSnNvbkhlbHBlciwgSnNvbkNvbnZlcnRhYmxlSW1wbCB9IGZyb20gXCJAZWRwLWFpZi9jb21tb24tYXBpXCI7XHJcbmltcG9ydCB7IEZpZWxkc1dpdGhPcmRlciB9IGZyb20gXCIuL0ZpZWxkc1dpdGhPcmRlclwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFN1bW1hcnlGaWVsZHNJbmZvIGV4dGVuZHMgSnNvbkNvbnZlcnRhYmxlSW1wbCB7XHJcbiAgICBjb2RlOiBzdHJpbmc7XHJcbiAgICBmaWVsZHM6IEZpZWxkc1dpdGhPcmRlcltdID0gW107XHJcbiAgICBjaGlsZEZpZWxkSW5mb3M6IFN1bW1hcnlGaWVsZHNJbmZvW10gPSBbXTtcclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcblxyXG4gICAgICAgIHRoaXMuY29kZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5maWVsZHMgPSBbXTtcclxuICAgICAgICB0aGlzLmNoaWxkRmllbGRJbmZvcyA9IFtdO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IHt9IHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJjb2RlXCIsIHRoaXMuY29kZSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiZmllbGRzXCIsIHRoaXMuZmllbGRzKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJjaGlsZEZpZWxkSW5mb3NcIiwgdGhpcy5jaGlsZEZpZWxkSW5mb3MpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLmNvZGUgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImNvZGVcIik7XHJcbiAgICAgICAgdGhpcy5maWVsZHMgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNMaXN0KG9iaiwgXCJmaWVsZHNcIiwgRmllbGRzV2l0aE9yZGVyKTtcclxuICAgICAgICB0aGlzLmNoaWxkRmllbGRJbmZvcyA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc0xpc3Qob2JqLCBcImNoaWxkRmllbGRJbmZvc1wiLCBTdW1tYXJ5RmllbGRzSW5mbyk7XHJcbiAgICB9XHJcbn0iXX0=