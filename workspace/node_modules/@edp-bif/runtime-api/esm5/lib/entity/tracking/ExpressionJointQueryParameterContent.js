/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/tracking/ExpressionJointQueryParameterContent.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper } from "@edp-aif/common-api";
import { JointQueryParameterContent } from "./JointQueryParameterContent";
var ExpressionJointQueryParameterContent = /** @class */ (function (_super) {
    tslib_1.__extends(ExpressionJointQueryParameterContent, _super);
    function ExpressionJointQueryParameterContent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @protected
     * @return {?}
     */
    ExpressionJointQueryParameterContent.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.expressionContent = null;
    };
    /**
     * @return {?}
     */
    ExpressionJointQueryParameterContent.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "expressionContent", this.expressionContent);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    ExpressionJointQueryParameterContent.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.expressionContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "expressionContent");
    };
    return ExpressionJointQueryParameterContent;
}(JointQueryParameterContent));
export { ExpressionJointQueryParameterContent };
if (false) {
    /** @type {?} */
    ExpressionJointQueryParameterContent.prototype.expressionContent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXhwcmVzc2lvbkpvaW50UXVlcnlQYXJhbWV0ZXJDb250ZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1iaWYvcnVudGltZS1hcGkvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L3RyYWNraW5nL0V4cHJlc3Npb25Kb2ludFF1ZXJ5UGFyYW1ldGVyQ29udGVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUUxRTtJQUEwRCxnRUFBMEI7SUFBcEY7O0lBc0JBLENBQUM7Ozs7O0lBbkJhLGtFQUFtQjs7OztJQUE3QjtRQUNJLGlCQUFNLG1CQUFtQixXQUFFLENBQUM7UUFFNUIsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQztJQUNsQyxDQUFDOzs7O0lBRU0sa0VBQW1COzs7SUFBMUI7O1lBQ1EsR0FBRyxHQUFHLGlCQUFNLG1CQUFtQixXQUFFO1FBRXJDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUV4RixPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRU0saUVBQWtCOzs7O0lBQXpCLFVBQTBCLEdBQU87UUFDN0IsaUJBQU0sa0JBQWtCLFlBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLGlCQUFpQixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0lBQ3JHLENBQUM7SUFDTCwyQ0FBQztBQUFELENBQUMsQUF0QkQsQ0FBMEQsMEJBQTBCLEdBc0JuRjs7OztJQXJCRyxpRUFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCcG1uTW9kZWxKc29uSGVscGVyIH0gZnJvbSBcIkBlZHAtYWlmL2NvbW1vbi1hcGlcIjtcclxuaW1wb3J0IHsgSm9pbnRRdWVyeVBhcmFtZXRlckNvbnRlbnQgfSBmcm9tIFwiLi9Kb2ludFF1ZXJ5UGFyYW1ldGVyQ29udGVudFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEV4cHJlc3Npb25Kb2ludFF1ZXJ5UGFyYW1ldGVyQ29udGVudCBleHRlbmRzIEpvaW50UXVlcnlQYXJhbWV0ZXJDb250ZW50IHtcclxuICAgIGV4cHJlc3Npb25Db250ZW50OiBzdHJpbmc7XHJcblxyXG4gICAgcHJvdGVjdGVkIFJlc2V0QmVmb3JlTG9hZEZyb20oKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuUmVzZXRCZWZvcmVMb2FkRnJvbSgpO1xyXG5cclxuICAgICAgICB0aGlzLmV4cHJlc3Npb25Db250ZW50ID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ29udmVydFRvSnNvbk9iamVjdCgpOiB7fSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuXHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiZXhwcmVzc2lvbkNvbnRlbnRcIiwgdGhpcy5leHByZXNzaW9uQ29udGVudCk7XHJcblxyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IHt9KTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMuZXhwcmVzc2lvbkNvbnRlbnQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImV4cHJlc3Npb25Db250ZW50XCIpO1xyXG4gICAgfVxyXG59Il19