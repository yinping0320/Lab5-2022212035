/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/tracking/JointQueryParametersContent.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper, JsonConvertableImpl } from "@edp-aif/common-api";
import { JointQueryParameterMode } from "./JointQueryParameterMode";
var JointQueryParametersContent = /** @class */ (function (_super) {
    tslib_1.__extends(JointQueryParametersContent, _super);
    function JointQueryParametersContent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.jointQueryParameterMode = JointQueryParameterMode.FIELD;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    JointQueryParametersContent.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.jointQueryParameterMode = JointQueryParameterMode.FIELD;
        this.content = null;
    };
    /**
     * @return {?}
     */
    JointQueryParametersContent.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "jointQueryParameterMode", this.jointQueryParameterMode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "content", this.content);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    JointQueryParametersContent.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.jointQueryParameterMode = JointQueryParameterMode[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "jointQueryParameterMode")];
        this.content = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "content");
    };
    return JointQueryParametersContent;
}(JsonConvertableImpl));
export { JointQueryParametersContent };
if (false) {
    /** @type {?} */
    JointQueryParametersContent.prototype.jointQueryParameterMode;
    /** @type {?} */
    JointQueryParametersContent.prototype.content;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSm9pbnRRdWVyeVBhcmFtZXRlcnNDb250ZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1iaWYvcnVudGltZS1hcGkvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L3RyYWNraW5nL0pvaW50UXVlcnlQYXJhbWV0ZXJzQ29udGVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUVwRTtJQUFpRCx1REFBbUI7SUFBcEU7UUFBQSxxRUEwQkM7UUF6QkcsNkJBQXVCLEdBQTRCLHVCQUF1QixDQUFDLEtBQUssQ0FBQzs7SUF5QnJGLENBQUM7Ozs7O0lBdEJhLHlEQUFtQjs7OztJQUE3QjtRQUNJLGlCQUFNLG1CQUFtQixXQUFFLENBQUM7UUFFNUIsSUFBSSxDQUFDLHVCQUF1QixHQUFHLHVCQUF1QixDQUFDLEtBQUssQ0FBQztRQUM3RCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztJQUN4QixDQUFDOzs7O0lBRU0seURBQW1COzs7SUFBMUI7O1lBQ1EsR0FBRyxHQUFHLGlCQUFNLG1CQUFtQixXQUFFO1FBRXJDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSx5QkFBeUIsRUFBRSxJQUFJLENBQUMsdUJBQXVCLENBQUMsQ0FBQztRQUNwRyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUVwRSxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRU0sd0RBQWtCOzs7O0lBQXpCLFVBQTBCLEdBQU87UUFDN0IsaUJBQU0sa0JBQWtCLFlBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLHVCQUF1QixHQUFHLHVCQUF1QixDQUFDLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDLENBQUM7UUFDdEksSUFBSSxDQUFDLE9BQU8sR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDakYsQ0FBQztJQUNMLGtDQUFDO0FBQUQsQ0FBQyxBQTFCRCxDQUFpRCxtQkFBbUIsR0EwQm5FOzs7O0lBekJHLDhEQUFpRjs7SUFDakYsOENBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnBtbk1vZGVsSnNvbkhlbHBlciwgSnNvbkNvbnZlcnRhYmxlSW1wbCB9IGZyb20gXCJAZWRwLWFpZi9jb21tb24tYXBpXCI7XHJcbmltcG9ydCB7IEpvaW50UXVlcnlQYXJhbWV0ZXJNb2RlIH0gZnJvbSBcIi4vSm9pbnRRdWVyeVBhcmFtZXRlck1vZGVcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBKb2ludFF1ZXJ5UGFyYW1ldGVyc0NvbnRlbnQgZXh0ZW5kcyBKc29uQ29udmVydGFibGVJbXBsIHtcclxuICAgIGpvaW50UXVlcnlQYXJhbWV0ZXJNb2RlOiBKb2ludFF1ZXJ5UGFyYW1ldGVyTW9kZSA9IEpvaW50UXVlcnlQYXJhbWV0ZXJNb2RlLkZJRUxEO1xyXG4gICAgY29udGVudDogc3RyaW5nO1xyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICAgICAgdGhpcy5qb2ludFF1ZXJ5UGFyYW1ldGVyTW9kZSA9IEpvaW50UXVlcnlQYXJhbWV0ZXJNb2RlLkZJRUxEO1xyXG4gICAgICAgIHRoaXMuY29udGVudCA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENvbnZlcnRUb0pzb25PYmplY3QoKToge30ge1xyXG4gICAgICAgIGxldCBvYmogPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcblxyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImpvaW50UXVlcnlQYXJhbWV0ZXJNb2RlXCIsIHRoaXMuam9pbnRRdWVyeVBhcmFtZXRlck1vZGUpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImNvbnRlbnRcIiwgdGhpcy5jb250ZW50KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgTG9hZEZyb21Kc29uT2JqZWN0KG9iajoge30pOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy5qb2ludFF1ZXJ5UGFyYW1ldGVyTW9kZSA9IEpvaW50UXVlcnlQYXJhbWV0ZXJNb2RlW0JwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiam9pbnRRdWVyeVBhcmFtZXRlck1vZGVcIildO1xyXG4gICAgICAgIHRoaXMuY29udGVudCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiY29udGVudFwiKTtcclxuICAgIH1cclxufSJdfQ==