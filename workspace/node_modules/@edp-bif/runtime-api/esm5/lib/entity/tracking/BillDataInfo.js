/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/tracking/BillDataInfo.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { JsonConvertableImpl, BpmnModelJsonHelper } from '@edp-aif/common-api';
import { BillChildInfo } from './BillChildInfo';
import { TrackingMappingAssociation } from './TrackingMappingAssociation';
var BillDataInfo = /** @class */ (function (_super) {
    tslib_1.__extends(BillDataInfo, _super);
    function BillDataInfo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.billChildInfos = [];
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    BillDataInfo.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.dataId = null;
        this.caption = null;
        this.summary = null;
        this.canContinueTracking = false;
        this.trackingMappingAssociations = null;
        this.billChildInfos = [];
        this.curYear = null;
    };
    /**
     * @return {?}
     */
    BillDataInfo.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "dataId", this.dataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "caption", this.caption);
        BpmnModelJsonHelper.SetAttributeValue(obj, "summary", this.summary);
        BpmnModelJsonHelper.SetAttributeValue(obj, "canContinueTracking", this.canContinueTracking);
        BpmnModelJsonHelper.SetAttributeValue(obj, "trackingMappingAssociations", this.trackingMappingAssociations);
        BpmnModelJsonHelper.SetAttributeValue(obj, "billChildInfos", this.billChildInfos);
        BpmnModelJsonHelper.SetAttributeValue(obj, "curYear", this.curYear);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    BillDataInfo.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.dataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "dataId");
        this.caption = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "caption");
        this.summary = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "summary");
        this.canContinueTracking = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "canContinueTracking");
        this.trackingMappingAssociations = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "trackingMappingAssociations", TrackingMappingAssociation);
        this.billChildInfos = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "billChildInfos", BillChildInfo);
        this.curYear = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "curYear");
    };
    return BillDataInfo;
}(JsonConvertableImpl));
export { BillDataInfo };
if (false) {
    /** @type {?} */
    BillDataInfo.prototype.dataId;
    /** @type {?} */
    BillDataInfo.prototype.caption;
    /** @type {?} */
    BillDataInfo.prototype.summary;
    /** @type {?} */
    BillDataInfo.prototype.canContinueTracking;
    /** @type {?} */
    BillDataInfo.prototype.trackingMappingAssociations;
    /** @type {?} */
    BillDataInfo.prototype.billChildInfos;
    /** @type {?} */
    BillDataInfo.prototype.curYear;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmlsbERhdGFJbmZvLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1iaWYvcnVudGltZS1hcGkvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L3RyYWNraW5nL0JpbGxEYXRhSW5mby50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDaEQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFFMUU7SUFBa0Msd0NBQW1CO0lBQXJEO1FBQUEscUVBOENDO1FBeENHLG9CQUFjLEdBQXlCLEVBQUUsQ0FBQzs7SUF3QzlDLENBQUM7Ozs7O0lBckNhLDBDQUFtQjs7OztJQUE3QjtRQUNJLGlCQUFNLG1CQUFtQixXQUFFLENBQUM7UUFFNUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDbkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDcEIsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEtBQUssQ0FBQztRQUNqQyxJQUFJLENBQUMsMkJBQTJCLEdBQUcsSUFBSSxDQUFDO1FBQ3hDLElBQUksQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0lBQ3hCLENBQUM7Ozs7SUFFTSwwQ0FBbUI7OztJQUExQjs7WUFDUSxHQUFHLEdBQU8saUJBQU0sbUJBQW1CLFdBQUU7UUFFekMsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbEUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDcEUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDcEUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLHFCQUFxQixFQUFFLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1FBQzVGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSw2QkFBNkIsRUFBRSxJQUFJLENBQUMsMkJBQTJCLENBQUMsQ0FBQztRQUM1RyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ2xGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRXBFLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFTSx5Q0FBa0I7Ozs7SUFBekIsVUFBMEIsR0FBTztRQUM3QixpQkFBTSxrQkFBa0IsWUFBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMsTUFBTSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUMzRSxJQUFJLENBQUMsT0FBTyxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUM3RSxJQUFJLENBQUMsT0FBTyxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUM3RSxJQUFJLENBQUMsbUJBQW1CLEdBQUcsbUJBQW1CLENBQUMsMEJBQTBCLENBQUMsR0FBRyxFQUFFLHFCQUFxQixDQUFDLENBQUM7UUFDdEcsSUFBSSxDQUFDLDJCQUEyQixHQUFHLG1CQUFtQixDQUFDLHVCQUF1QixDQUFDLEdBQUcsRUFBRSw2QkFBNkIsRUFBRSwwQkFBMEIsQ0FBQyxDQUFDO1FBQy9JLElBQUksQ0FBQyxjQUFjLEdBQUcsbUJBQW1CLENBQUMsdUJBQXVCLENBQUMsR0FBRyxFQUFFLGdCQUFnQixFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBQ3hHLElBQUksQ0FBQyxPQUFPLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ2pGLENBQUM7SUFDTCxtQkFBQztBQUFELENBQUMsQUE5Q0QsQ0FBa0MsbUJBQW1CLEdBOENwRDs7OztJQTdDRyw4QkFBZTs7SUFDZiwrQkFBZ0I7O0lBQ2hCLCtCQUFnQjs7SUFDaEIsMkNBQTZCOztJQUM3QixtREFBK0Q7O0lBQy9ELHNDQUEwQzs7SUFDMUMsK0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSnNvbkNvbnZlcnRhYmxlSW1wbCwgQnBtbk1vZGVsSnNvbkhlbHBlciB9IGZyb20gJ0BlZHAtYWlmL2NvbW1vbi1hcGknO1xyXG5pbXBvcnQgeyBCaWxsQ2hpbGRJbmZvIH0gZnJvbSAnLi9CaWxsQ2hpbGRJbmZvJztcclxuaW1wb3J0IHsgVHJhY2tpbmdNYXBwaW5nQXNzb2NpYXRpb24gfSBmcm9tICcuL1RyYWNraW5nTWFwcGluZ0Fzc29jaWF0aW9uJztcclxuXHJcbmV4cG9ydCBjbGFzcyBCaWxsRGF0YUluZm8gZXh0ZW5kcyBKc29uQ29udmVydGFibGVJbXBsIHtcclxuICAgIGRhdGFJZDogc3RyaW5nO1xyXG4gICAgY2FwdGlvbjogc3RyaW5nO1xyXG4gICAgc3VtbWFyeTogc3RyaW5nO1xyXG4gICAgY2FuQ29udGludWVUcmFja2luZzogYm9vbGVhbjtcclxuICAgIHRyYWNraW5nTWFwcGluZ0Fzc29jaWF0aW9uczogQXJyYXk8VHJhY2tpbmdNYXBwaW5nQXNzb2NpYXRpb24+O1xyXG4gICAgYmlsbENoaWxkSW5mb3M6IEFycmF5PEJpbGxDaGlsZEluZm8+ID0gW107XHJcbiAgICBjdXJZZWFyOiBzdHJpbmc7XHJcblxyXG4gICAgcHJvdGVjdGVkIFJlc2V0QmVmb3JlTG9hZEZyb20oKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuUmVzZXRCZWZvcmVMb2FkRnJvbSgpO1xyXG5cclxuICAgICAgICB0aGlzLmRhdGFJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5jYXB0aW9uID0gbnVsbDtcclxuICAgICAgICB0aGlzLnN1bW1hcnkgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuY2FuQ29udGludWVUcmFja2luZyA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMudHJhY2tpbmdNYXBwaW5nQXNzb2NpYXRpb25zID0gbnVsbDtcclxuICAgICAgICB0aGlzLmJpbGxDaGlsZEluZm9zID0gW107XHJcbiAgICAgICAgdGhpcy5jdXJZZWFyID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ29udmVydFRvSnNvbk9iamVjdCgpOiB7fSB7XHJcbiAgICAgICAgbGV0IG9iajoge30gPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcblxyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImRhdGFJZFwiLCB0aGlzLmRhdGFJZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiY2FwdGlvblwiLCB0aGlzLmNhcHRpb24pO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInN1bW1hcnlcIiwgdGhpcy5zdW1tYXJ5KTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJjYW5Db250aW51ZVRyYWNraW5nXCIsIHRoaXMuY2FuQ29udGludWVUcmFja2luZyk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwidHJhY2tpbmdNYXBwaW5nQXNzb2NpYXRpb25zXCIsIHRoaXMudHJhY2tpbmdNYXBwaW5nQXNzb2NpYXRpb25zKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJiaWxsQ2hpbGRJbmZvc1wiLCB0aGlzLmJpbGxDaGlsZEluZm9zKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJjdXJZZWFyXCIsIHRoaXMuY3VyWWVhcik7XHJcblxyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IHt9KTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMuZGF0YUlkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJkYXRhSWRcIik7XHJcbiAgICAgICAgdGhpcy5jYXB0aW9uID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJjYXB0aW9uXCIpO1xyXG4gICAgICAgIHRoaXMuc3VtbWFyeSA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwic3VtbWFyeVwiKTtcclxuICAgICAgICB0aGlzLmNhbkNvbnRpbnVlVHJhY2tpbmcgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNCb29sZWFuKG9iaiwgXCJjYW5Db250aW51ZVRyYWNraW5nXCIpO1xyXG4gICAgICAgIHRoaXMudHJhY2tpbmdNYXBwaW5nQXNzb2NpYXRpb25zID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzTGlzdChvYmosIFwidHJhY2tpbmdNYXBwaW5nQXNzb2NpYXRpb25zXCIsIFRyYWNraW5nTWFwcGluZ0Fzc29jaWF0aW9uKTtcclxuICAgICAgICB0aGlzLmJpbGxDaGlsZEluZm9zID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzTGlzdChvYmosIFwiYmlsbENoaWxkSW5mb3NcIiwgQmlsbENoaWxkSW5mbyk7XHJcbiAgICAgICAgdGhpcy5jdXJZZWFyID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJjdXJZZWFyXCIpO1xyXG4gICAgfVxyXG59Il19