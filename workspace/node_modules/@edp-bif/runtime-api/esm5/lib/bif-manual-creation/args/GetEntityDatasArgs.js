/**
 * @fileoverview added by tsickle
 * Generated from: lib/bif-manual-creation/args/GetEntityDatasArgs.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper, JsonConvertableImpl } from "@edp-aif/common-api";
var GetEntityDatasArgs = /** @class */ (function (_super) {
    tslib_1.__extends(GetEntityDatasArgs, _super);
    function GetEntityDatasArgs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @protected
     * @return {?}
     */
    GetEntityDatasArgs.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.voId = null;
        this.dataId = null;
        this.suCode = null;
    };
    /**
     * @return {?}
     */
    GetEntityDatasArgs.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "schemaId", this.voId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "dataId", this.dataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "suCode", this.suCode);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    GetEntityDatasArgs.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.voId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "schemaId");
        this.dataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "dataId");
        this.suCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "suCode");
    };
    return GetEntityDatasArgs;
}(JsonConvertableImpl));
export { GetEntityDatasArgs };
if (false) {
    /** @type {?} */
    GetEntityDatasArgs.prototype.voId;
    /** @type {?} */
    GetEntityDatasArgs.prototype.dataId;
    /** @type {?} */
    GetEntityDatasArgs.prototype.suCode;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2V0RW50aXR5RGF0YXNBcmdzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1iaWYvcnVudGltZS1hcGkvIiwic291cmNlcyI6WyJsaWIvYmlmLW1hbnVhbC1jcmVhdGlvbi9hcmdzL0dldEVudGl0eURhdGFzQXJncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUUvRTtJQUF3Qyw4Q0FBbUI7SUFBM0Q7O0lBOEJBLENBQUM7Ozs7O0lBekJhLGdEQUFtQjs7OztJQUE3QjtRQUNJLGlCQUFNLG1CQUFtQixXQUFFLENBQUM7UUFFNUIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDbkIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7SUFDdkIsQ0FBQzs7OztJQUVNLGdEQUFtQjs7O0lBQTFCOztZQUNRLEdBQUcsR0FBRyxpQkFBTSxtQkFBbUIsV0FBRTtRQUVyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsRSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNsRSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVsRSxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRU0sK0NBQWtCOzs7O0lBQXpCLFVBQTBCLEdBQU87UUFDN0IsaUJBQU0sa0JBQWtCLFlBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLElBQUksR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLE1BQU0sR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLE1BQU0sR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDL0UsQ0FBQztJQUNMLHlCQUFDO0FBQUQsQ0FBQyxBQTlCRCxDQUF3QyxtQkFBbUIsR0E4QjFEOzs7O0lBN0JHLGtDQUFhOztJQUNiLG9DQUFlOztJQUNmLG9DQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnBtbk1vZGVsSnNvbkhlbHBlciwgSnNvbkNvbnZlcnRhYmxlSW1wbCB9IGZyb20gXCJAZWRwLWFpZi9jb21tb24tYXBpXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgR2V0RW50aXR5RGF0YXNBcmdzIGV4dGVuZHMgSnNvbkNvbnZlcnRhYmxlSW1wbCB7XHJcbiAgICB2b0lkOiBzdHJpbmc7XHJcbiAgICBkYXRhSWQ6IHN0cmluZztcclxuICAgIHN1Q29kZTogc3RyaW5nO1xyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICAgICAgdGhpcy52b0lkID0gbnVsbDtcclxuICAgICAgICB0aGlzLmRhdGFJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5zdUNvZGUgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IHt9IHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJzY2hlbWFJZFwiLCB0aGlzLnZvSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImRhdGFJZFwiLCB0aGlzLmRhdGFJZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwic3VDb2RlXCIsIHRoaXMuc3VDb2RlKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgTG9hZEZyb21Kc29uT2JqZWN0KG9iajoge30pOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy52b0lkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJzY2hlbWFJZFwiKTtcclxuICAgICAgICB0aGlzLmRhdGFJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiZGF0YUlkXCIpO1xyXG4gICAgICAgIHRoaXMuc3VDb2RlID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJzdUNvZGVcIik7XHJcbiAgICB9XHJcbn0iXX0=