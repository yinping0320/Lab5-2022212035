/**
 * @fileoverview added by tsickle
 * Generated from: lib/webcmp/EntityParamUtils.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Entity } from "@farris/devkit";
import { canJSONParse } from "../utils/ObjectUtils";
var EntityParamUtils = /** @class */ (function () {
    function EntityParamUtils() {
    }
    /**
     * 构造sourceVoEntityDataIds和sourceVoEntityDatas参数
     * @param entities 参与生单的上游单据ID列表或实体列表
     * @returns
     */
    /**
     * 构造sourceVoEntityDataIds和sourceVoEntityDatas参数
     * @param {?} entities 参与生单的上游单据ID列表或实体列表
     * @return {?}
     */
    EntityParamUtils.buildSourceVoEntityData = /**
     * 构造sourceVoEntityDataIds和sourceVoEntityDatas参数
     * @param {?} entities 参与生单的上游单据ID列表或实体列表
     * @return {?}
     */
    function (entities) {
        /** @type {?} */
        var sourceVoEntityDataIds = null;
        /** @type {?} */
        var sourceVoEntityDatas = null;
        // 判断entities是不是全为ID字符串
        // 不存在非字符串类型或者可以JSON.parse的元素时
        if (!entities.some((/**
         * @param {?} it
         * @return {?}
         */
        function (it) { return ((typeof it) != "string") || (canJSONParse(it)); }))) {
            sourceVoEntityDataIds = (/** @type {?} */ (entities));
            sourceVoEntityDatas = null;
        }
        else {
            sourceVoEntityDataIds = null;
            sourceVoEntityDatas = entities.map((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item instanceof Entity) {
                    // 如果是Entity
                    return JSON.stringify(((/** @type {?} */ (item))).toJSON(false, true));
                }
                else if (item["__type__"] == "BindingObject") {
                    //如果来自BindingData
                    /** @type {?} */
                    var bindingObject = (/** @type {?} */ (item));
                    return JSON.stringify(bindingObject.toJSON({ useFullMultiLangProperty: true }));
                }
                else if (((/** @type {?} */ (item))).toJSON != null) {
                    /** @type {?} */
                    var e = (/** @type {?} */ (item));
                    return JSON.stringify(((/** @type {?} */ (e))).toJSON(false, true));
                }
                else {
                    /** @type {?} */
                    var e = item;
                    return JSON.stringify(e);
                }
            }));
        }
        return {
            sourceVoEntityDataIds: sourceVoEntityDataIds,
            sourceVoEntityDatas: sourceVoEntityDatas,
        };
    };
    return EntityParamUtils;
}());
export { EntityParamUtils };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW50aXR5UGFyYW1VdGlscy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL3J1bnRpbWUtYXBpLyIsInNvdXJjZXMiOlsibGliL3dlYmNtcC9FbnRpdHlQYXJhbVV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFpQixNQUFNLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFcEQ7SUFBQTtJQXVDQSxDQUFDO0lBdENDOzs7O09BSUc7Ozs7OztJQUNJLHdDQUF1Qjs7Ozs7SUFBOUIsVUFBK0IsUUFBa0I7O1lBQzNDLHFCQUFxQixHQUFhLElBQUk7O1lBQ3RDLG1CQUFtQixHQUFhLElBQUk7UUFDeEMsdUJBQXVCO1FBQ3ZCLDhCQUE4QjtRQUM5QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUk7Ozs7UUFBQyxVQUFDLEVBQU8sSUFBSyxPQUFBLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQS9DLENBQStDLEVBQUMsRUFBRTtZQUNoRixxQkFBcUIsR0FBRyxtQkFBQSxRQUFRLEVBQVMsQ0FBQztZQUMxQyxtQkFBbUIsR0FBRyxJQUFJLENBQUM7U0FDNUI7YUFBTTtZQUNMLHFCQUFxQixHQUFHLElBQUksQ0FBQztZQUM3QixtQkFBbUIsR0FBRyxRQUFRLENBQUMsR0FBRzs7OztZQUFDLFVBQUEsSUFBSTtnQkFDckMsSUFBSSxJQUFJLFlBQVksTUFBTSxFQUFFO29CQUMxQixZQUFZO29CQUNaLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLG1CQUFBLElBQUksRUFBTyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO2lCQUMxRDtxQkFBTSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxlQUFlLEVBQUU7Ozt3QkFFeEMsYUFBYSxHQUFHLG1CQUFBLElBQUksRUFBaUI7b0JBQzNDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEVBQUUsd0JBQXdCLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO2lCQUNqRjtxQkFBTSxJQUFJLENBQUMsbUJBQUEsSUFBSSxFQUFVLENBQUMsQ0FBQyxNQUFNLElBQUksSUFBSSxFQUFFOzt3QkFDcEMsQ0FBQyxHQUFHLG1CQUFBLElBQUksRUFBVTtvQkFDeEIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsbUJBQUEsQ0FBQyxFQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7aUJBQ3ZEO3FCQUFNOzt3QkFDQyxDQUFDLEdBQUcsSUFBSTtvQkFDZCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7aUJBQzFCO1lBQ0gsQ0FBQyxFQUFDLENBQUM7U0FDSjtRQUVELE9BQU87WUFDTCxxQkFBcUIsRUFBRSxxQkFBcUI7WUFDNUMsbUJBQW1CLEVBQUUsbUJBQW1CO1NBQ3pDLENBQUE7SUFDSCxDQUFDO0lBQ0gsdUJBQUM7QUFBRCxDQUFDLEFBdkNELElBdUNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmluZGluZ09iamVjdCwgRW50aXR5IH0gZnJvbSBcIkBmYXJyaXMvZGV2a2l0XCI7XHJcbmltcG9ydCB7IGNhbkpTT05QYXJzZSB9IGZyb20gXCIuLi91dGlscy9PYmplY3RVdGlsc1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEVudGl0eVBhcmFtVXRpbHMge1xyXG4gIC8qKlxyXG4gICAqIOaehOmAoHNvdXJjZVZvRW50aXR5RGF0YUlkc+WSjHNvdXJjZVZvRW50aXR5RGF0YXPlj4LmlbBcclxuICAgKiBAcGFyYW0gZW50aXRpZXMg5Y+C5LiO55Sf5Y2V55qE5LiK5ri45Y2V5o2uSUTliJfooajmiJblrp7kvZPliJfooahcclxuICAgKiBAcmV0dXJuc1xyXG4gICAqL1xyXG4gIHN0YXRpYyBidWlsZFNvdXJjZVZvRW50aXR5RGF0YShlbnRpdGllczogRW50aXR5W10pIHtcclxuICAgIGxldCBzb3VyY2VWb0VudGl0eURhdGFJZHM6IHN0cmluZ1tdID0gbnVsbDtcclxuICAgIGxldCBzb3VyY2VWb0VudGl0eURhdGFzOiBzdHJpbmdbXSA9IG51bGw7XHJcbiAgICAvLyDliKTmlq1lbnRpdGllc+aYr+S4jeaYr+WFqOS4uklE5a2X56ym5LiyXHJcbiAgICAvLyDkuI3lrZjlnKjpnZ7lrZfnrKbkuLLnsbvlnovmiJbogIXlj6/ku6VKU09OLnBhcnNl55qE5YWD57Sg5pe2XHJcbiAgICBpZiAoIWVudGl0aWVzLnNvbWUoKGl0OiBhbnkpID0+ICgodHlwZW9mIGl0KSAhPSBcInN0cmluZ1wiKSB8fCAoY2FuSlNPTlBhcnNlKGl0KSkpKSB7XHJcbiAgICAgIHNvdXJjZVZvRW50aXR5RGF0YUlkcyA9IGVudGl0aWVzIGFzIGFueVtdO1xyXG4gICAgICBzb3VyY2VWb0VudGl0eURhdGFzID0gbnVsbDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHNvdXJjZVZvRW50aXR5RGF0YUlkcyA9IG51bGw7XHJcbiAgICAgIHNvdXJjZVZvRW50aXR5RGF0YXMgPSBlbnRpdGllcy5tYXAoaXRlbSA9PiB7XHJcbiAgICAgICAgaWYgKGl0ZW0gaW5zdGFuY2VvZiBFbnRpdHkpIHtcclxuICAgICAgICAgIC8vIOWmguaenOaYr0VudGl0eVxyXG4gICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KChpdGVtIGFzIGFueSkudG9KU09OKGZhbHNlLCB0cnVlKSk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChpdGVtW1wiX190eXBlX19cIl0gPT0gXCJCaW5kaW5nT2JqZWN0XCIpIHtcclxuICAgICAgICAgIC8v5aaC5p6c5p2l6IeqQmluZGluZ0RhdGFcclxuICAgICAgICAgIGNvbnN0IGJpbmRpbmdPYmplY3QgPSBpdGVtIGFzIEJpbmRpbmdPYmplY3Q7XHJcbiAgICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoYmluZGluZ09iamVjdC50b0pTT04oeyB1c2VGdWxsTXVsdGlMYW5nUHJvcGVydHk6IHRydWUgfSkpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoKGl0ZW0gYXMgRW50aXR5KS50b0pTT04gIT0gbnVsbCkge1xyXG4gICAgICAgICAgY29uc3QgZSA9IGl0ZW0gYXMgRW50aXR5O1xyXG4gICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KChlIGFzIGFueSkudG9KU09OKGZhbHNlLCB0cnVlKSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNvbnN0IGUgPSBpdGVtO1xyXG4gICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgc291cmNlVm9FbnRpdHlEYXRhSWRzOiBzb3VyY2VWb0VudGl0eURhdGFJZHMsXHJcbiAgICAgIHNvdXJjZVZvRW50aXR5RGF0YXM6IHNvdXJjZVZvRW50aXR5RGF0YXMsXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==