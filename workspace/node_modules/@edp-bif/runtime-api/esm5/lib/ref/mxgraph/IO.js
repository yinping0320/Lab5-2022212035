/**
 * @fileoverview added by tsickle
 * Generated from: lib/ref/mxgraph/IO.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { mxgraph } from './mxgraphFactory';
/**
 * IO
 * @type {?}
 */
var mxCellCodecType = mxgraph.mxCellCodec;
export { mxCellCodecType as mxCellCodec };
/** @type {?} */
var mxChildChangeCodecType = mxgraph.mxChildChangeCodec;
export { mxChildChangeCodecType as mxChildChangeCodec };
/** @type {?} */
var mxDefaultKeyHandlerCodecType = mxgraph.mxDefaultKeyHandlerCodec;
export { mxDefaultKeyHandlerCodecType as mxDefaultKeyHandlerCodec };
/** @type {?} */
var mxDefaultPopupMenuCodecType = mxgraph.mxDefaultPopupMenuCodec;
export { mxDefaultPopupMenuCodecType as mxDefaultPopupMenuCodec };
/** @type {?} */
var mxDefaultToolbarCodecType = mxgraph.mxDefaultToolbarCodec;
export { mxDefaultToolbarCodecType as mxDefaultToolbarCodec };
/** @type {?} */
var mxEditorCodecType = mxgraph.mxEditorCodec;
export { mxEditorCodecType as mxEditorCodec };
/** @type {?} */
var mxGenericChangeCodecType = mxgraph.mxGenericChangeCodec;
export { mxGenericChangeCodecType as mxGenericChangeCodec };
/** @type {?} */
var mxGraphCodecType = mxgraph.mxGraphCodec;
export { mxGraphCodecType as mxGraphCodec };
/** @type {?} */
var mxGraphViewCodecType = mxgraph.mxGraphViewCodec;
export { mxGraphViewCodecType as mxGraphViewCodec };
/** @type {?} */
var mxModelCodecType = mxgraph.mxModelCodec;
export { mxModelCodecType as mxModelCodec };
/** @type {?} */
var mxObjectCodecType = mxgraph.mxObjectCodec;
export { mxObjectCodecType as mxObjectCodec };
/** @type {?} */
var mxRootChangeCodecType = mxgraph.mxRootChangeCodec;
export { mxRootChangeCodecType as mxRootChangeCodec };
/** @type {?} */
var mxStylesheetCodecType = mxgraph.mxStylesheetCodec;
export { mxStylesheetCodecType as mxStylesheetCodec };
/** @type {?} */
var mxTerminalChangeCodecType = mxgraph.mxTerminalChangeCodec;
export { mxTerminalChangeCodecType as mxTerminalChangeCodec };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSU8uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWJpZi9ydW50aW1lLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9yZWYvbXhncmFwaC9JTy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7Ozs7SUFLckMsZUFBZSxHQUFHLE9BQU8sQ0FBQyxXQUFXO0FBQzNDLE9BQU8sRUFBRSxlQUFlLElBQUksV0FBVyxFQUFFLENBQUM7O0lBRXBDLHNCQUFzQixHQUFHLE9BQU8sQ0FBQyxrQkFBa0I7QUFDekQsT0FBTyxFQUFFLHNCQUFzQixJQUFJLGtCQUFrQixFQUFFLENBQUM7O0lBRWxELDRCQUE0QixHQUFHLE9BQU8sQ0FBQyx3QkFBd0I7QUFDckUsT0FBTyxFQUFFLDRCQUE0QixJQUFJLHdCQUF3QixFQUFFLENBQUM7O0lBRTlELDJCQUEyQixHQUFHLE9BQU8sQ0FBQyx1QkFBdUI7QUFDbkUsT0FBTyxFQUFFLDJCQUEyQixJQUFJLHVCQUF1QixFQUFFLENBQUM7O0lBRTVELHlCQUF5QixHQUFHLE9BQU8sQ0FBQyxxQkFBcUI7QUFDL0QsT0FBTyxFQUFFLHlCQUF5QixJQUFJLHFCQUFxQixFQUFFLENBQUM7O0lBRXhELGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxhQUFhO0FBQy9DLE9BQU8sRUFBRSxpQkFBaUIsSUFBSSxhQUFhLEVBQUUsQ0FBQzs7SUFFeEMsd0JBQXdCLEdBQUcsT0FBTyxDQUFDLG9CQUFvQjtBQUM3RCxPQUFPLEVBQUUsd0JBQXdCLElBQUksb0JBQW9CLEVBQUUsQ0FBQzs7SUFFdEQsZ0JBQWdCLEdBQUcsT0FBTyxDQUFDLFlBQVk7QUFDN0MsT0FBTyxFQUFFLGdCQUFnQixJQUFJLFlBQVksRUFBRSxDQUFDOztJQUV0QyxvQkFBb0IsR0FBRyxPQUFPLENBQUMsZ0JBQWdCO0FBQ3JELE9BQU8sRUFBRSxvQkFBb0IsSUFBSSxnQkFBZ0IsRUFBRSxDQUFDOztJQUU5QyxnQkFBZ0IsR0FBRyxPQUFPLENBQUMsWUFBWTtBQUM3QyxPQUFPLEVBQUUsZ0JBQWdCLElBQUksWUFBWSxFQUFFLENBQUM7O0lBRXRDLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxhQUFhO0FBQy9DLE9BQU8sRUFBRSxpQkFBaUIsSUFBSSxhQUFhLEVBQUUsQ0FBQzs7SUFFeEMscUJBQXFCLEdBQUcsT0FBTyxDQUFDLGlCQUFpQjtBQUN2RCxPQUFPLEVBQUUscUJBQXFCLElBQUksaUJBQWlCLEVBQUUsQ0FBQzs7SUFFaEQscUJBQXFCLEdBQUcsT0FBTyxDQUFDLGlCQUFpQjtBQUN2RCxPQUFPLEVBQUUscUJBQXFCLElBQUksaUJBQWlCLEVBQUUsQ0FBQzs7SUFFaEQseUJBQXlCLEdBQUcsT0FBTyxDQUFDLHFCQUFxQjtBQUMvRCxPQUFPLEVBQUUseUJBQXlCLElBQUkscUJBQXFCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG14Z3JhcGggfSBmcm9tICcuL214Z3JhcGhGYWN0b3J5JztcclxuXHJcbi8qKlxyXG4gKiBJT1xyXG4gKi9cclxuY29uc3QgbXhDZWxsQ29kZWNUeXBlID0gbXhncmFwaC5teENlbGxDb2RlYztcclxuZXhwb3J0IHsgbXhDZWxsQ29kZWNUeXBlIGFzIG14Q2VsbENvZGVjIH07XHJcblxyXG5jb25zdCBteENoaWxkQ2hhbmdlQ29kZWNUeXBlID0gbXhncmFwaC5teENoaWxkQ2hhbmdlQ29kZWM7XHJcbmV4cG9ydCB7IG14Q2hpbGRDaGFuZ2VDb2RlY1R5cGUgYXMgbXhDaGlsZENoYW5nZUNvZGVjIH07XHJcblxyXG5jb25zdCBteERlZmF1bHRLZXlIYW5kbGVyQ29kZWNUeXBlID0gbXhncmFwaC5teERlZmF1bHRLZXlIYW5kbGVyQ29kZWM7XHJcbmV4cG9ydCB7IG14RGVmYXVsdEtleUhhbmRsZXJDb2RlY1R5cGUgYXMgbXhEZWZhdWx0S2V5SGFuZGxlckNvZGVjIH07XHJcblxyXG5jb25zdCBteERlZmF1bHRQb3B1cE1lbnVDb2RlY1R5cGUgPSBteGdyYXBoLm14RGVmYXVsdFBvcHVwTWVudUNvZGVjO1xyXG5leHBvcnQgeyBteERlZmF1bHRQb3B1cE1lbnVDb2RlY1R5cGUgYXMgbXhEZWZhdWx0UG9wdXBNZW51Q29kZWMgfTtcclxuXHJcbmNvbnN0IG14RGVmYXVsdFRvb2xiYXJDb2RlY1R5cGUgPSBteGdyYXBoLm14RGVmYXVsdFRvb2xiYXJDb2RlYztcclxuZXhwb3J0IHsgbXhEZWZhdWx0VG9vbGJhckNvZGVjVHlwZSBhcyBteERlZmF1bHRUb29sYmFyQ29kZWMgfTtcclxuXHJcbmNvbnN0IG14RWRpdG9yQ29kZWNUeXBlID0gbXhncmFwaC5teEVkaXRvckNvZGVjO1xyXG5leHBvcnQgeyBteEVkaXRvckNvZGVjVHlwZSBhcyBteEVkaXRvckNvZGVjIH07XHJcblxyXG5jb25zdCBteEdlbmVyaWNDaGFuZ2VDb2RlY1R5cGUgPSBteGdyYXBoLm14R2VuZXJpY0NoYW5nZUNvZGVjO1xyXG5leHBvcnQgeyBteEdlbmVyaWNDaGFuZ2VDb2RlY1R5cGUgYXMgbXhHZW5lcmljQ2hhbmdlQ29kZWMgfTtcclxuXHJcbmNvbnN0IG14R3JhcGhDb2RlY1R5cGUgPSBteGdyYXBoLm14R3JhcGhDb2RlYztcclxuZXhwb3J0IHsgbXhHcmFwaENvZGVjVHlwZSBhcyBteEdyYXBoQ29kZWMgfTtcclxuXHJcbmNvbnN0IG14R3JhcGhWaWV3Q29kZWNUeXBlID0gbXhncmFwaC5teEdyYXBoVmlld0NvZGVjO1xyXG5leHBvcnQgeyBteEdyYXBoVmlld0NvZGVjVHlwZSBhcyBteEdyYXBoVmlld0NvZGVjIH07XHJcblxyXG5jb25zdCBteE1vZGVsQ29kZWNUeXBlID0gbXhncmFwaC5teE1vZGVsQ29kZWM7XHJcbmV4cG9ydCB7IG14TW9kZWxDb2RlY1R5cGUgYXMgbXhNb2RlbENvZGVjIH07XHJcblxyXG5jb25zdCBteE9iamVjdENvZGVjVHlwZSA9IG14Z3JhcGgubXhPYmplY3RDb2RlYztcclxuZXhwb3J0IHsgbXhPYmplY3RDb2RlY1R5cGUgYXMgbXhPYmplY3RDb2RlYyB9O1xyXG5cclxuY29uc3QgbXhSb290Q2hhbmdlQ29kZWNUeXBlID0gbXhncmFwaC5teFJvb3RDaGFuZ2VDb2RlYztcclxuZXhwb3J0IHsgbXhSb290Q2hhbmdlQ29kZWNUeXBlIGFzIG14Um9vdENoYW5nZUNvZGVjIH07XHJcblxyXG5jb25zdCBteFN0eWxlc2hlZXRDb2RlY1R5cGUgPSBteGdyYXBoLm14U3R5bGVzaGVldENvZGVjO1xyXG5leHBvcnQgeyBteFN0eWxlc2hlZXRDb2RlY1R5cGUgYXMgbXhTdHlsZXNoZWV0Q29kZWMgfTtcclxuXHJcbmNvbnN0IG14VGVybWluYWxDaGFuZ2VDb2RlY1R5cGUgPSBteGdyYXBoLm14VGVybWluYWxDaGFuZ2VDb2RlYztcclxuZXhwb3J0IHsgbXhUZXJtaW5hbENoYW5nZUNvZGVjVHlwZSBhcyBteFRlcm1pbmFsQ2hhbmdlQ29kZWMgfTsiXX0=