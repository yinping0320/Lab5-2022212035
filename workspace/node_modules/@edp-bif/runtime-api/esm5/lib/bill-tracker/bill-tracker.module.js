/**
 * @fileoverview added by tsickle
 * Generated from: lib/bill-tracker/bill-tracker.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule, LOCALE_ID, NgModuleFactoryLoader, SystemJsNgModuleLoader } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { FrameworkService, FrmEventBus, FuncsService, LoadingService, AppService } from '@gsp-sys/rtf-common';
import { CacheService, SessionService, HttpService } from '@ecp-caf/caf-common';
import { AngularDraggableModule } from '@farris/ui-draggable';
import { MessagerModule } from '@farris/ui-messager';
import { LoadingModule } from '@farris/ui-loading';
import { TextModule } from '@farris/ui-text';
import { FarrisSectionModule } from '@farris/ui-section';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { DatagridModule } from '@farris/ui-datagrid';
import { BillTrackerComponent } from './components/bill-tracker/bill-tracker.component';
import { BillTrackerGraphComponent } from './components/bill-tracker-graph/bill-tracker-graph.component';
import { BillTrackerDataComponent } from './components/bill-tracker-data/bill-tracker-data.component';
import { BasicTableComponent } from './components/basic-table/basic-table.component';
import { ChildRowTableDirective } from './components/basic-table/child-row-table.directive';
import { BasicInfoComponent } from './components/basic-info/basic-info.component';
import { ChildInfoComponent } from './components/child-info/child-info.component';
import { BillTrackerDataService } from './services/bill-tracker-data.service';
import { BillTrackerUiService } from './services/bill-tracker-ui.service';
import { BillTrackerModuleConfig } from './config/bill-tracker-module.config';
import { BillTrackerLocalePipe } from './pipe/bill-tracker-locale.pipe';
import { BillTrackerDataInfoService } from './services/bill-tracker-data-info.service';
import { ChildInfoListComponent } from './components/child-info-list/child-info-list.component';
import { NotifyModule } from '@farris/ui-notify';
import { FormsModule } from '@angular/forms';
import { BillTrackerFieldLabelPipe } from './pipe/bill-tracker-field-label.pipe';
import { BillTrackerInternalUiService } from './services/bill-tracker-internal-ui.service';
var ɵ0 = localStorage.getItem('languageCode') || 'zh-CHS', ɵ1 = {};
var BillTrackerModule = /** @class */ (function () {
    function BillTrackerModule() {
    }
    /**
     * @param {?=} config
     * @return {?}
     */
    BillTrackerModule.forRoot = /**
     * @param {?=} config
     * @return {?}
     */
    function (config) {
        return {
            ngModule: BillTrackerModule,
            providers: [
                { provide: BillTrackerModuleConfig, useValue: config || {} },
            ]
        };
    };
    BillTrackerModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        BillTrackerComponent,
                        BillTrackerGraphComponent,
                        BillTrackerDataComponent,
                        BasicTableComponent,
                        ChildRowTableDirective,
                        BillTrackerLocalePipe,
                        BasicInfoComponent,
                        ChildInfoComponent,
                        ChildInfoListComponent,
                        BillTrackerFieldLabelPipe,
                    ],
                    imports: [
                        CommonModule,
                        HttpClientModule,
                        FormsModule,
                        AngularDraggableModule,
                        MessagerModule.forRoot(),
                        LoadingModule.forRoot(),
                        NotifyModule,
                        TextModule,
                        FarrisSectionModule,
                        DatagridModule.forRoot(),
                        FarrisDialogModule,
                    ],
                    providers: [
                        { provide: LOCALE_ID, useValue: ɵ0 },
                        { provide: BillTrackerModuleConfig, useValue: ɵ1 },
                        { provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader },
                        CacheService,
                        SessionService,
                        HttpService,
                        FrmEventBus,
                        FuncsService,
                        LoadingService,
                        AppService,
                        FrameworkService,
                        BillTrackerDataService,
                        BillTrackerUiService,
                        BillTrackerInternalUiService,
                        BillTrackerLocalePipe,
                        BillTrackerDataInfoService,
                    ],
                    bootstrap: [BillTrackerComponent],
                    exports: [
                        BillTrackerComponent,
                        BillTrackerDataComponent,
                    ],
                    entryComponents: [
                        BillTrackerComponent,
                        BillTrackerDataComponent,
                        BasicTableComponent,
                        BasicInfoComponent,
                        ChildInfoComponent,
                        ChildInfoListComponent,
                    ]
                },] }
    ];
    return BillTrackerModule;
}());
export { BillTrackerModule };
export { ɵ0, ɵ1 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmlsbC10cmFja2VyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL3J1bnRpbWUtYXBpLyIsInNvdXJjZXMiOlsibGliL2JpbGwtdHJhY2tlci9iaWxsLXRyYWNrZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUscUJBQXFCLEVBQUUsc0JBQXNCLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQ3hILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUV4RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDOUcsT0FBTyxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFaEYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDN0MsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDekQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXJELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBQ3hGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDhEQUE4RCxDQUFDO0FBQ3pHLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDREQUE0RCxDQUFDO0FBQ3RHLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLG9EQUFvRCxDQUFDO0FBQzVGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQ2hHLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDakYsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sNkNBQTZDLENBQUM7U0E2QnZELFlBQVksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLElBQUksUUFBUSxPQUNsQyxFQUFFO0FBNUJwRDtJQUFBO0lBbUVBLENBQUM7Ozs7O0lBUlEseUJBQU87Ozs7SUFBZCxVQUFlLE1BQWdDO1FBQzdDLE9BQU87WUFDTCxRQUFRLEVBQUUsaUJBQWlCO1lBQzNCLFNBQVMsRUFBRTtnQkFDVCxFQUFFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxRQUFRLEVBQUUsTUFBTSxJQUFJLEVBQUUsRUFBRTthQUM3RDtTQUNGLENBQUE7SUFDSCxDQUFDOztnQkFsRUYsUUFBUSxTQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWixvQkFBb0I7d0JBQ3BCLHlCQUF5Qjt3QkFDekIsd0JBQXdCO3dCQUN4QixtQkFBbUI7d0JBQ25CLHNCQUFzQjt3QkFDdEIscUJBQXFCO3dCQUNyQixrQkFBa0I7d0JBQ2xCLGtCQUFrQjt3QkFDbEIsc0JBQXNCO3dCQUN0Qix5QkFBeUI7cUJBQzFCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLGdCQUFnQjt3QkFDaEIsV0FBVzt3QkFDWCxzQkFBc0I7d0JBQ3RCLGNBQWMsQ0FBQyxPQUFPLEVBQUU7d0JBQ3hCLGFBQWEsQ0FBQyxPQUFPLEVBQUU7d0JBQ3ZCLFlBQVk7d0JBQ1osVUFBVTt3QkFDVixtQkFBbUI7d0JBQ25CLGNBQWMsQ0FBQyxPQUFPLEVBQUU7d0JBQ3hCLGtCQUFrQjtxQkFDbkI7b0JBQ0QsU0FBUyxFQUFFO3dCQUNULEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLElBQWtELEVBQUU7d0JBQ2xGLEVBQUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFFBQVEsSUFBSSxFQUFFO3dCQUNsRCxFQUFFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxRQUFRLEVBQUUsc0JBQXNCLEVBQUU7d0JBQ3BFLFlBQVk7d0JBQ1osY0FBYzt3QkFDZCxXQUFXO3dCQUNYLFdBQVc7d0JBQ1gsWUFBWTt3QkFDWixjQUFjO3dCQUNkLFVBQVU7d0JBQ1YsZ0JBQWdCO3dCQUNoQixzQkFBc0I7d0JBQ3RCLG9CQUFvQjt3QkFDcEIsNEJBQTRCO3dCQUM1QixxQkFBcUI7d0JBQ3JCLDBCQUEwQjtxQkFDM0I7b0JBQ0QsU0FBUyxFQUFFLENBQUMsb0JBQW9CLENBQUM7b0JBQ2pDLE9BQU8sRUFBRTt3QkFDUCxvQkFBb0I7d0JBQ3BCLHdCQUF3QjtxQkFDekI7b0JBQ0QsZUFBZSxFQUFFO3dCQUNmLG9CQUFvQjt3QkFDcEIsd0JBQXdCO3dCQUN4QixtQkFBbUI7d0JBQ25CLGtCQUFrQjt3QkFDbEIsa0JBQWtCO3dCQUNsQixzQkFBc0I7cUJBQ3ZCO2lCQUNGOztJQVVELHdCQUFDO0NBQUEsQUFuRUQsSUFtRUM7U0FUWSxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTE9DQUxFX0lELCBOZ01vZHVsZUZhY3RvcnlMb2FkZXIsIFN5c3RlbUpzTmdNb2R1bGVMb2FkZXIsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuXHJcbmltcG9ydCB7IEZyYW1ld29ya1NlcnZpY2UsIEZybUV2ZW50QnVzLCBGdW5jc1NlcnZpY2UsIExvYWRpbmdTZXJ2aWNlLCBBcHBTZXJ2aWNlIH0gZnJvbSAnQGdzcC1zeXMvcnRmLWNvbW1vbic7XHJcbmltcG9ydCB7IENhY2hlU2VydmljZSwgU2Vzc2lvblNlcnZpY2UsIEh0dHBTZXJ2aWNlIH0gZnJvbSAnQGVjcC1jYWYvY2FmLWNvbW1vbic7XHJcblxyXG5pbXBvcnQgeyBBbmd1bGFyRHJhZ2dhYmxlTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kcmFnZ2FibGUnO1xyXG5pbXBvcnQgeyBNZXNzYWdlck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbWVzc2FnZXInO1xyXG5pbXBvcnQgeyBMb2FkaW5nTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2FkaW5nJztcclxuaW1wb3J0IHsgVGV4dE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktdGV4dCc7XHJcbmltcG9ydCB7IEZhcnJpc1NlY3Rpb25Nb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLXNlY3Rpb24nO1xyXG5pbXBvcnQgeyBGYXJyaXNEaWFsb2dNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRpYWxvZyc7XHJcbmltcG9ydCB7IERhdGFncmlkTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kYXRhZ3JpZCc7XHJcblxyXG5pbXBvcnQgeyBCaWxsVHJhY2tlckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9iaWxsLXRyYWNrZXIvYmlsbC10cmFja2VyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEJpbGxUcmFja2VyR3JhcGhDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvYmlsbC10cmFja2VyLWdyYXBoL2JpbGwtdHJhY2tlci1ncmFwaC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBCaWxsVHJhY2tlckRhdGFDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvYmlsbC10cmFja2VyLWRhdGEvYmlsbC10cmFja2VyLWRhdGEuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQmFzaWNUYWJsZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9iYXNpYy10YWJsZS9iYXNpYy10YWJsZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBDaGlsZFJvd1RhYmxlRGlyZWN0aXZlIH0gZnJvbSAnLi9jb21wb25lbnRzL2Jhc2ljLXRhYmxlL2NoaWxkLXJvdy10YWJsZS5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBCYXNpY0luZm9Db21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvYmFzaWMtaW5mby9iYXNpYy1pbmZvLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IENoaWxkSW5mb0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9jaGlsZC1pbmZvL2NoaWxkLWluZm8uY29tcG9uZW50JztcclxuaW1wb3J0IHsgQmlsbFRyYWNrZXJEYXRhU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvYmlsbC10cmFja2VyLWRhdGEuc2VydmljZSc7XHJcbmltcG9ydCB7IEJpbGxUcmFja2VyVWlTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9iaWxsLXRyYWNrZXItdWkuc2VydmljZSc7XHJcbmltcG9ydCB7IEJpbGxUcmFja2VyTW9kdWxlQ29uZmlnIH0gZnJvbSAnLi9jb25maWcvYmlsbC10cmFja2VyLW1vZHVsZS5jb25maWcnO1xyXG5pbXBvcnQgeyBCaWxsVHJhY2tlckxvY2FsZVBpcGUgfSBmcm9tICcuL3BpcGUvYmlsbC10cmFja2VyLWxvY2FsZS5waXBlJztcclxuaW1wb3J0IHsgQmlsbFRyYWNrZXJEYXRhSW5mb1NlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2JpbGwtdHJhY2tlci1kYXRhLWluZm8uc2VydmljZSc7XHJcbmltcG9ydCB7IENoaWxkSW5mb0xpc3RDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvY2hpbGQtaW5mby1saXN0L2NoaWxkLWluZm8tbGlzdC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBOb3RpZnlNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW5vdGlmeSc7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBCaWxsVHJhY2tlckZpZWxkTGFiZWxQaXBlIH0gZnJvbSAnLi9waXBlL2JpbGwtdHJhY2tlci1maWVsZC1sYWJlbC5waXBlJztcclxuaW1wb3J0IHsgQmlsbFRyYWNrZXJJbnRlcm5hbFVpU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvYmlsbC10cmFja2VyLWludGVybmFsLXVpLnNlcnZpY2UnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIEJpbGxUcmFja2VyQ29tcG9uZW50LFxyXG4gICAgQmlsbFRyYWNrZXJHcmFwaENvbXBvbmVudCxcclxuICAgIEJpbGxUcmFja2VyRGF0YUNvbXBvbmVudCxcclxuICAgIEJhc2ljVGFibGVDb21wb25lbnQsXHJcbiAgICBDaGlsZFJvd1RhYmxlRGlyZWN0aXZlLFxyXG4gICAgQmlsbFRyYWNrZXJMb2NhbGVQaXBlLFxyXG4gICAgQmFzaWNJbmZvQ29tcG9uZW50LFxyXG4gICAgQ2hpbGRJbmZvQ29tcG9uZW50LFxyXG4gICAgQ2hpbGRJbmZvTGlzdENvbXBvbmVudCxcclxuICAgIEJpbGxUcmFja2VyRmllbGRMYWJlbFBpcGUsXHJcbiAgXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBIdHRwQ2xpZW50TW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBBbmd1bGFyRHJhZ2dhYmxlTW9kdWxlLFxyXG4gICAgTWVzc2FnZXJNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgTG9hZGluZ01vZHVsZS5mb3JSb290KCksXHJcbiAgICBOb3RpZnlNb2R1bGUsXHJcbiAgICBUZXh0TW9kdWxlLFxyXG4gICAgRmFycmlzU2VjdGlvbk1vZHVsZSxcclxuICAgIERhdGFncmlkTW9kdWxlLmZvclJvb3QoKSxcclxuICAgIEZhcnJpc0RpYWxvZ01vZHVsZSxcclxuICBdLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAgeyBwcm92aWRlOiBMT0NBTEVfSUQsIHVzZVZhbHVlOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbGFuZ3VhZ2VDb2RlJykgfHwgJ3poLUNIUycgfSxcclxuICAgIHsgcHJvdmlkZTogQmlsbFRyYWNrZXJNb2R1bGVDb25maWcsIHVzZVZhbHVlOiB7fSB9LFxyXG4gICAgeyBwcm92aWRlOiBOZ01vZHVsZUZhY3RvcnlMb2FkZXIsIHVzZUNsYXNzOiBTeXN0ZW1Kc05nTW9kdWxlTG9hZGVyIH0sXHJcbiAgICBDYWNoZVNlcnZpY2UsXHJcbiAgICBTZXNzaW9uU2VydmljZSxcclxuICAgIEh0dHBTZXJ2aWNlLFxyXG4gICAgRnJtRXZlbnRCdXMsXHJcbiAgICBGdW5jc1NlcnZpY2UsXHJcbiAgICBMb2FkaW5nU2VydmljZSxcclxuICAgIEFwcFNlcnZpY2UsXHJcbiAgICBGcmFtZXdvcmtTZXJ2aWNlLFxyXG4gICAgQmlsbFRyYWNrZXJEYXRhU2VydmljZSxcclxuICAgIEJpbGxUcmFja2VyVWlTZXJ2aWNlLFxyXG4gICAgQmlsbFRyYWNrZXJJbnRlcm5hbFVpU2VydmljZSxcclxuICAgIEJpbGxUcmFja2VyTG9jYWxlUGlwZSxcclxuICAgIEJpbGxUcmFja2VyRGF0YUluZm9TZXJ2aWNlLFxyXG4gIF0sXHJcbiAgYm9vdHN0cmFwOiBbQmlsbFRyYWNrZXJDb21wb25lbnRdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIEJpbGxUcmFja2VyQ29tcG9uZW50LFxyXG4gICAgQmlsbFRyYWNrZXJEYXRhQ29tcG9uZW50LFxyXG4gIF0sXHJcbiAgZW50cnlDb21wb25lbnRzOiBbXHJcbiAgICBCaWxsVHJhY2tlckNvbXBvbmVudCxcclxuICAgIEJpbGxUcmFja2VyRGF0YUNvbXBvbmVudCxcclxuICAgIEJhc2ljVGFibGVDb21wb25lbnQsXHJcbiAgICBCYXNpY0luZm9Db21wb25lbnQsXHJcbiAgICBDaGlsZEluZm9Db21wb25lbnQsXHJcbiAgICBDaGlsZEluZm9MaXN0Q29tcG9uZW50LFxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEJpbGxUcmFja2VyTW9kdWxlIHtcclxuICBzdGF0aWMgZm9yUm9vdChjb25maWc/OiBCaWxsVHJhY2tlck1vZHVsZUNvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmdNb2R1bGU6IEJpbGxUcmFja2VyTW9kdWxlLFxyXG4gICAgICBwcm92aWRlcnM6IFtcclxuICAgICAgICB7IHByb3ZpZGU6IEJpbGxUcmFja2VyTW9kdWxlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnIHx8IHt9IH0sXHJcbiAgICAgIF1cclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19