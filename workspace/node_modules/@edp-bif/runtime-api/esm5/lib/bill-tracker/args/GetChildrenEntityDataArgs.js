/**
 * @fileoverview added by tsickle
 * Generated from: lib/bill-tracker/args/GetChildrenEntityDataArgs.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper, JsonConvertableImpl } from '@edp-aif/common-api';
var GetChildrenEntityDataArgs = /** @class */ (function (_super) {
    tslib_1.__extends(GetChildrenEntityDataArgs, _super);
    function GetChildrenEntityDataArgs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @protected
     * @return {?}
     */
    GetChildrenEntityDataArgs.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.voId = null;
        this.voMetadataId = null;
        this.suCode = null;
        this.nodeCodes = null;
        this.hierachyIdList = null;
    };
    /**
     * @return {?}
     */
    GetChildrenEntityDataArgs.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voId", this.voId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voMetadataId", this.voMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "suCode", this.suCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "nodeCodes", BpmnModelJsonHelper.StringListToJson(this.nodeCodes));
        BpmnModelJsonHelper.SetAttributeValue(obj, "hierachyIdList", BpmnModelJsonHelper.StringListToJson(this.hierachyIdList));
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    GetChildrenEntityDataArgs.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.voId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voId");
        this.voMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voMetadataId");
        this.suCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "suCode");
        this.nodeCodes = BpmnModelJsonHelper.StringListFromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "nodeCodes"));
        this.hierachyIdList = BpmnModelJsonHelper.StringListFromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "hierachyIdList"));
    };
    return GetChildrenEntityDataArgs;
}(JsonConvertableImpl));
export { GetChildrenEntityDataArgs };
if (false) {
    /** @type {?} */
    GetChildrenEntityDataArgs.prototype.voId;
    /** @type {?} */
    GetChildrenEntityDataArgs.prototype.voMetadataId;
    /** @type {?} */
    GetChildrenEntityDataArgs.prototype.suCode;
    /**
     * @type {?}
     * @private
     */
    GetChildrenEntityDataArgs.prototype.nodeCodes;
    /**
     * @type {?}
     * @private
     */
    GetChildrenEntityDataArgs.prototype.hierachyIdList;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2V0Q2hpbGRyZW5FbnRpdHlEYXRhQXJncy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL3J1bnRpbWUtYXBpLyIsInNvdXJjZXMiOlsibGliL2JpbGwtdHJhY2tlci9hcmdzL0dldENoaWxkcmVuRW50aXR5RGF0YUFyZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLG1CQUFtQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFL0U7SUFBK0MscURBQW1CO0lBQWxFOztJQXVDQSxDQUFDOzs7OztJQWhDYSx1REFBbUI7Ozs7SUFBN0I7UUFDSSxpQkFBTSxtQkFBbUIsV0FBRSxDQUFDO1FBRTVCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ25CLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO0lBQy9CLENBQUM7Ozs7SUFFTSx1REFBbUI7OztJQUExQjs7WUFDUSxHQUFHLEdBQUcsaUJBQU0sbUJBQW1CLFdBQUU7UUFFckMsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUQsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGNBQWMsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDOUUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbEUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztRQUM5RyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsbUJBQW1CLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7UUFFeEgsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVNLHNEQUFrQjs7OztJQUF6QixVQUEwQixHQUFPO1FBQzdCLGlCQUFNLGtCQUFrQixZQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxJQUFJLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxZQUFZLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGNBQWMsQ0FBQyxDQUFDO1FBRXZGLElBQUksQ0FBQyxNQUFNLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQzNFLElBQUksQ0FBQyxTQUFTLEdBQUcsbUJBQW1CLENBQUMsa0JBQWtCLENBQUMsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUM7UUFDekgsSUFBSSxDQUFDLGNBQWMsR0FBRyxtQkFBbUIsQ0FBQyxrQkFBa0IsQ0FBQyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO0lBQ3ZJLENBQUM7SUFDTCxnQ0FBQztBQUFELENBQUMsQUF2Q0QsQ0FBK0MsbUJBQW1CLEdBdUNqRTs7OztJQXRDRyx5Q0FBYTs7SUFDYixpREFBcUI7O0lBQ3JCLDJDQUFlOzs7OztJQUNmLDhDQUFpQzs7Ozs7SUFDakMsbURBQXNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnBtbk1vZGVsSnNvbkhlbHBlciwgSnNvbkNvbnZlcnRhYmxlSW1wbCB9IGZyb20gJ0BlZHAtYWlmL2NvbW1vbi1hcGknO1xyXG5cclxuZXhwb3J0IGNsYXNzIEdldENoaWxkcmVuRW50aXR5RGF0YUFyZ3MgZXh0ZW5kcyBKc29uQ29udmVydGFibGVJbXBsIHtcclxuICAgIHZvSWQ6IHN0cmluZztcclxuICAgIHZvTWV0YWRhdGFJZDogc3RyaW5nO1xyXG4gICAgc3VDb2RlOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIG5vZGVDb2RlczogQXJyYXk8c3RyaW5nPjtcclxuICAgIHByaXZhdGUgaGllcmFjaHlJZExpc3Q6IEFycmF5PHN0cmluZz47XHJcblxyXG4gICAgcHJvdGVjdGVkIFJlc2V0QmVmb3JlTG9hZEZyb20oKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuUmVzZXRCZWZvcmVMb2FkRnJvbSgpO1xyXG5cclxuICAgICAgICB0aGlzLnZvSWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMudm9NZXRhZGF0YUlkID0gbnVsbDtcclxuICAgICAgICB0aGlzLnN1Q29kZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5ub2RlQ29kZXMgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuaGllcmFjaHlJZExpc3QgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IHt9IHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJ2b0lkXCIsIHRoaXMudm9JZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwidm9NZXRhZGF0YUlkXCIsIHRoaXMudm9NZXRhZGF0YUlkKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJzdUNvZGVcIiwgdGhpcy5zdUNvZGUpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIm5vZGVDb2Rlc1wiLCBCcG1uTW9kZWxKc29uSGVscGVyLlN0cmluZ0xpc3RUb0pzb24odGhpcy5ub2RlQ29kZXMpKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJoaWVyYWNoeUlkTGlzdFwiLCBCcG1uTW9kZWxKc29uSGVscGVyLlN0cmluZ0xpc3RUb0pzb24odGhpcy5oaWVyYWNoeUlkTGlzdCkpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLnZvSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInZvSWRcIik7XHJcbiAgICAgICAgdGhpcy52b01ldGFkYXRhSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInZvTWV0YWRhdGFJZFwiKTtcclxuXHJcbiAgICAgICAgdGhpcy5zdUNvZGUgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInN1Q29kZVwiKTtcclxuICAgICAgICB0aGlzLm5vZGVDb2RlcyA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuU3RyaW5nTGlzdEZyb21Kc29uKEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwibm9kZUNvZGVzXCIpKTtcclxuICAgICAgICB0aGlzLmhpZXJhY2h5SWRMaXN0ID0gQnBtbk1vZGVsSnNvbkhlbHBlci5TdHJpbmdMaXN0RnJvbUpzb24oQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJoaWVyYWNoeUlkTGlzdFwiKSk7XHJcbiAgICB9XHJcbn0iXX0=