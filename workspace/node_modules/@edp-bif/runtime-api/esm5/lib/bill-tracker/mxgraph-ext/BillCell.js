/**
 * @fileoverview added by tsickle
 * Generated from: lib/bill-tracker/mxgraph-ext/BillCell.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { mxCell, mxEvent, mxEventObject, mxUtils } from "../../ref/mxgraph";
import { BpmnModelJsonHelper } from "@edp-aif/common-api";
import { BillTrackingSettings, JointQueryMode } from '@edp-bif/common-api';
import { FieldNameAndValue } from "../../entity/tracking/FieldNameAndValue";
import { Events } from "./Events";
import { BillTrackerConstant } from "../config/bill-tracker-constant";
var BillCell = /** @class */ (function (_super) {
    tslib_1.__extends(BillCell, _super);
    function BillCell(billDataInfo, billInfo, entry, geometry, style) {
        var _this = _super.call(this, null, geometry, style) || this;
        _this.THUMB_SCALE = 0.6;
        _this.billDataInfo = billDataInfo;
        _this.billInfo = billInfo;
        /** @type {?} */
        var bts = new BillTrackingSettings();
        if (billInfo && billInfo.billTrackingSettings) {
            bts.LoadFromJson(billInfo.billTrackingSettings);
        }
        _this.entry = entry;
        return _this;
        // this.value = this.billDataInfo.caption || bts.billNodeName || this.billInfo.voName || this.billDataInfo.dataId || this.billDataInfo.summary;
    }
    /**
     * @return {?}
     */
    BillCell.prototype.getCaption = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var label = null;
        /** @type {?} */
        var bts = new BillTrackingSettings();
        if (this.billInfo && this.billInfo.billTrackingSettings) {
            bts.LoadFromJson(this.billInfo.billTrackingSettings);
        }
        label = this.billDataInfo.caption || bts.billNodeName || this.billInfo.voName || this.billDataInfo.dataId || this.billDataInfo.summary;
        return label;
    };
    /**
     * @return {?}
     */
    BillCell.prototype.buildHtmlTooltip = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var tooltipHtml = "            <span>" + this.billDataInfo.dataId + "</span>        ";
        return tooltipHtml;
    };
    /**
     * 样式类在graph组件中定义
     * @param graph
     * @returns
     */
    /**
     * 样式类在graph组件中定义
     * @param {?} graph
     * @return {?}
     */
    BillCell.prototype.buildHtmlLabel = /**
     * 样式类在graph组件中定义
     * @param {?} graph
     * @return {?}
     */
    function (graph) {
        return this.buildHtmlLabelByDOM(graph);
    };
    /**
     * 通过操纵dom元素方式创建html
     * @param graph
     * @returns
     */
    /**
     * 通过操纵dom元素方式创建html
     * @private
     * @param {?} graph
     * @return {?}
     */
    BillCell.prototype.buildHtmlLabelByDOM = /**
     * 通过操纵dom元素方式创建html
     * @private
     * @param {?} graph
     * @return {?}
     */
    function (graph) {
        var _this = this;
        /** @type {?} */
        var scale = graph.view.scale;
        /** @type {?} */
        var state = graph.view.getState(this);
        /** @type {?} */
        var width = this.geometry.width;
        /** @type {?} */
        var height = this.geometry.height;
        /** @type {?} */
        var bts = new BillTrackingSettings();
        if (this.billInfo && this.billInfo.billTrackingSettings) {
            bts.LoadFromJson(this.billInfo.billTrackingSettings);
        }
        /** @type {?} */
        var title = this.billDataInfo.caption || bts.billNodeName || this.billInfo.voName || this.billDataInfo.dataId || this.billDataInfo.summary;
        /** @type {?} */
        var isEntry = this.entry;
        // 节点框架
        /** @type {?} */
        var divNodeRoot = document.createElement("div");
        divNodeRoot.classList.add("bif-cell-node");
        divNodeRoot.style.width = width + "px";
        divNodeRoot.style.height = height + "px";
        if (isEntry) {
            // 当前节点标识
            /** @type {?} */
            var divNodeCurrent = document.createElement("div");
            divNodeRoot.appendChild(divNodeCurrent);
            divNodeCurrent.classList.add("bif-cell-node-current");
            /** @type {?} */
            var spanCurrent = document.createElement("span");
            divNodeCurrent.appendChild(spanCurrent);
            spanCurrent.classList.add("bif-cell-node-current-text");
            spanCurrent.innerHTML = graph && graph.localePipe && graph.localePipe.transform("currentNode") || "当前";
        }
        // 当比例小到指定值后仅显示单据名
        if (scale < this.THUMB_SCALE) {
            // // 使用图片+标题
            // const divNodeThumb = document.createElement("div");
            // divNodeRoot.appendChild(divNodeThumb);
            // divNodeThumb.classList.add("bif-cell-node-thumb");
            // const divNodeThumbImg = document.createElement("div");
            // divNodeThumb.appendChild(divNodeThumbImg);
            // divNodeThumbImg.classList.add("bif-cell-node-thumb-img-container");
            // const img = document.createElement("img");
            // divNodeThumbImg.appendChild(img);
            // img.classList.add("bif-cell-node-thumb-img");
            // img.src = "/platform/runtime/common/web/@edp-bif/runtime-api/images/non-entry-bill.png";
            // const divNodeThumbTitle = document.createElement("div");
            // divNodeThumb.appendChild(divNodeThumbTitle);
            // divNodeThumbTitle.classList.add("bif-cell-node-thumb-title");
            // const divNodeThumbTitleText = document.createElement("div");
            // divNodeThumbTitle.appendChild(divNodeThumbTitleText);
            // divNodeThumbTitleText.classList.add("bif-cell-node-thumb-title-text");
            // divNodeThumbTitleText.innerHTML = title;
            // // 判断是否需添加点击事件
            // const jqm = this.billInfo.jointQueryMode;
            // const jqp: JointQueryParameters = JSON.parse(this.billInfo.jointQueryParameters);
            // if ((jqm == JointQueryMode.APP && jqp.funcId) || (jqm == JointQueryMode.URL && jqp.url)) {
            //     divNodeThumbTitleText.classList.add("bif-cell-node-title-link");
            //     mxEvent.addListener(divNodeThumbTitleText, "click", () => {
            //         graph.fireEvent(new mxEventObject(Events.CLICK_FIRST_SUMMARY, "cell", this));
            //         event.stopPropagation();
            //         return false;
            //     });
            // }
            // 使用标题
            // 节点标题
            /** @type {?} */
            var divNodeTitleOnly = document.createElement("div");
            divNodeRoot.appendChild(divNodeTitleOnly);
            divNodeTitleOnly.classList.add("bif-cell-node-title-only");
            /** @type {?} */
            var divNodeTitleOnlyText = document.createElement("div");
            divNodeTitleOnly.appendChild(divNodeTitleOnlyText);
            divNodeTitleOnlyText.classList.add("bif-cell-node-title-only-text");
            divNodeTitleOnlyText.innerHTML = title;
            // 判断是否需添加点击事件
            /** @type {?} */
            var jqm = this.billInfo.jointQueryMode;
            /** @type {?} */
            var jqp = JSON.parse(this.billInfo.jointQueryParameters);
            if ((jqm == JointQueryMode.APP && jqp.funcId) || (jqm == JointQueryMode.URL && jqp.url)) {
                divNodeTitleOnlyText.classList.add("bif-cell-node-title-link");
                mxEvent.addListener(divNodeTitleOnlyText, "click", (/**
                 * @return {?}
                 */
                function () {
                    graph.fireEvent(new mxEventObject(Events.CLICK_FIRST_SUMMARY, "cell", _this));
                    event.stopPropagation();
                    return false;
                }));
            }
        }
        else {
            // 节点主内容
            /** @type {?} */
            var divNodeMain = document.createElement("div");
            divNodeRoot.appendChild(divNodeMain);
            divNodeMain.classList.add("bif-cell-node-main");
            // 节点标题
            /** @type {?} */
            var divNodeTitle = document.createElement("div");
            divNodeMain.appendChild(divNodeTitle);
            divNodeTitle.classList.add("bif-cell-node-title");
            /** @type {?} */
            var divNodeTitleText = document.createElement("div");
            divNodeTitle.appendChild(divNodeTitleText);
            divNodeTitleText.classList.add("bif-cell-node-title-text");
            divNodeTitleText.innerHTML = title;
            divNodeTitleText.title = title;
            // 节点摘要
            /** @type {?} */
            var divNodeSummaryList_1 = document.createElement("div");
            divNodeMain.appendChild(divNodeSummaryList_1);
            divNodeSummaryList_1.classList.add("bif-cell-node-summary-list");
            // 46是标题栏高度
            divNodeSummaryList_1.style.minHeight = (height - 46) + "px";
            try {
                /** @type {?} */
                var fieldNameAndValues = BpmnModelJsonHelper.FromJson(this.billDataInfo.summary, FieldNameAndValue);
                fieldNameAndValues && fieldNameAndValues.forEach((/**
                 * @param {?} fv
                 * @param {?} idx
                 * @return {?}
                 */
                function (fv, idx) {
                    /** @type {?} */
                    var divNodeSummary = document.createElement("div");
                    divNodeSummaryList_1.appendChild(divNodeSummary);
                    divNodeSummary.classList.add("bif-cell-node-summary");
                    /** @type {?} */
                    var divNodeSummaryCaption = document.createElement("div");
                    divNodeSummary.appendChild(divNodeSummaryCaption);
                    divNodeSummaryCaption.classList.add("bif-cell-node-summary-caption");
                    /** @type {?} */
                    var divNodeSummaryCaptionText = document.createElement("div");
                    divNodeSummaryCaption.appendChild(divNodeSummaryCaptionText);
                    divNodeSummaryCaptionText.classList.add("bif-cell-node-summary-caption-text");
                    divNodeSummaryCaptionText.title = fv.name;
                    divNodeSummaryCaptionText.innerHTML = fv.name;
                    /** @type {?} */
                    var divNodeSummaryValue = document.createElement("div");
                    divNodeSummary.appendChild(divNodeSummaryValue);
                    divNodeSummaryValue.classList.add("bif-cell-node-summary-value");
                    /** @type {?} */
                    var divNodeSummaryValueText = document.createElement("div");
                    divNodeSummaryValue.appendChild(divNodeSummaryValueText);
                    divNodeSummaryValueText.classList.add("bif-cell-node-summary-value-text");
                    divNodeSummaryValueText.title = fv.value;
                    divNodeSummaryValueText.innerText = fv.value;
                    if (idx == 0) {
                        // 判断是否需添加点击事件
                        /** @type {?} */
                        var jqm = _this.billInfo.jointQueryMode;
                        /** @type {?} */
                        var jqp = JSON.parse(_this.billInfo.jointQueryParameters);
                        if ((jqm == JointQueryMode.APP && jqp.funcId) || (jqm == JointQueryMode.URL && jqp.url)) {
                            divNodeSummaryValueText.classList.add("bif-cell-node-title-link", "bif-cell-node-title-link-color");
                            mxEvent.addListener(divNodeSummaryValueText, "click", (/**
                             * @return {?}
                             */
                            function () {
                                graph.fireEvent(new mxEventObject(Events.CLICK_FIRST_SUMMARY, "cell", _this));
                                event.stopPropagation();
                                return false;
                            }));
                        }
                    }
                }));
            }
            catch (e) {
                console.error(e);
            }
            // 操作按钮
            /** @type {?} */
            var divNodeBtnGroup_1 = document.createElement("div");
            divNodeMain.appendChild(divNodeBtnGroup_1);
            divNodeBtnGroup_1.classList.add("bif-cell-node-btn-group", "bif-cell-node-btn-group-control");
            // 详情按钮
            /** @type {?} */
            var imgView = document.createElement("img");
            divNodeBtnGroup_1.appendChild(imgView);
            imgView.src = BillTrackerConstant.IMAGE_PATH + "/view.svg";
            imgView.title = graph.localePipe.transform("viewBill");
            imgView.classList.add("bif-cell-node-btn");
            // 点击按钮触发选中事件
            imgView.addEventListener("click", (/**
             * @return {?}
             */
            function () {
                graph.setSelectionCell(_this);
            }));
            // 不是当前节点时添加更多按钮
            if (isEntry == false) {
                // 更多按钮
                /** @type {?} */
                var imgMore_1 = document.createElement("img");
                divNodeBtnGroup_1.appendChild(imgMore_1);
                imgMore_1.src = BillTrackerConstant.IMAGE_PATH + "/more.svg";
                imgMore_1.title = graph.localePipe.transform("more");
                imgMore_1.classList.add("bif-cell-node-btn");
                mxEvent.addListener(imgMore_1, mxEvent.CLICK, (/**
                 * @param {?} evt
                 * @return {?}
                 */
                function (evt) {
                    /** @type {?} */
                    var offset = mxUtils.getOffset(imgMore_1);
                    // 移除more hover效果
                    divNodeBtnGroup_1.classList.remove("bif-cell-node-btn-group-control");
                    // 重写隐藏菜单方法
                    /** @type {?} */
                    var hideMenu = graph.ngComp.morePopupMenu.hideMenu;
                    graph.ngComp.morePopupMenu.hideMenu = (/**
                     * @return {?}
                     */
                    function () {
                        hideMenu.apply(this, arguments);
                        // 重新添加hover效果
                        divNodeBtnGroup_1.classList.add("bif-cell-node-btn-group-control");
                    });
                    // 弹出菜单
                    graph.ngComp.morePopupMenu.popup(offset.x, offset.y + imgMore_1.offsetHeight, _this, evt);
                    // 更新当前打开菜单对象
                    graph.ngComp.currentMenu = graph.ngComp.morePopupMenu;
                }));
            }
        }
        return divNodeRoot;
    };
    /**
     * 通过模板字符串方式创建html
     * @param graph
     * @returns
     */
    /**
     * 通过模板字符串方式创建html
     * @private
     * @param {?} graph
     * @return {?}
     */
    BillCell.prototype.buildHtmlLabelByTemplateText = /**
     * 通过模板字符串方式创建html
     * @private
     * @param {?} graph
     * @return {?}
     */
    function (graph) {
        /** @type {?} */
        var state = graph.view.getState(this);
        /** @type {?} */
        var width = state && state.width ? state.width : this.geometry.width;
        /** @type {?} */
        var height = state && state.height ? state.height : this.geometry.height;
        /** @type {?} */
        var bts = new BillTrackingSettings();
        if (this.billInfo && this.billInfo.billTrackingSettings) {
            bts.LoadFromJson(this.billInfo.billTrackingSettings);
        }
        /** @type {?} */
        var title = this.billDataInfo.caption || bts.billNodeName || this.billInfo.voName || this.billDataInfo.dataId || this.billDataInfo.summary;
        /** @type {?} */
        var titleBackground = this.entry ? "rgba(86,160,255,0.08)" : "#FFFFFF";
        /** @type {?} */
        var summaryHtml = "";
        try {
            /** @type {?} */
            var fieldNameAndValues = BpmnModelJsonHelper.FromJson(this.billDataInfo.summary, FieldNameAndValue);
            fieldNameAndValues && fieldNameAndValues.forEach((/**
             * @param {?} fv
             * @param {?} idx
             * @return {?}
             */
            function (fv, idx) {
                /** @type {?} */
                var valueText = idx == 0 ? "<a href='javascript:void(0);'>" + fv.value + "</a>" : fv.value;
                summaryHtml += "                        <div class=\"bif-cell-node-summary\">                            <div class=\"bif-cell-node-summary-caption\">                                <div class=\"bif-cell-node-summary-caption-text\" title=\"" + fv.name + "\">" + fv.name + "</div>                            </div>                            <div class=\"bif-cell-node-summary-value\">                                <div class=\"bif-cell-node-summary-value-text\" title=\"" + fv.value + "\">" + valueText + "</div>                            </div>                        </div>                    ";
            }));
        }
        catch (e) {
            console.error(e);
        }
        /** @type {?} */
        var html = "            <div class=\"bif-cell-node\" style=\"width:" + width + "px;\">                <div class=\"bif-cell-node-main\" style=\"background: " + titleBackground + ";\">                    <div class=\"bif-cell-node-title\">                        <div class=\"bif-cell-node-title-text\">" + title + "</div>                    </div>                    <div class=\"bif-cell-node-summary-list\" style=\"min-height: " + (height - 30) + "px;\">                        " + summaryHtml + "                    </div>                </div>            </div>        ";
        return html;
    };
    return BillCell;
}(mxCell));
export { BillCell };
if (false) {
    /** @type {?} */
    BillCell.prototype.THUMB_SCALE;
    /** @type {?} */
    BillCell.prototype.entry;
    /** @type {?} */
    BillCell.prototype.data;
    /** @type {?} */
    BillCell.prototype.billDataInfo;
    /** @type {?} */
    BillCell.prototype.billInfo;
    /** @type {?} */
    BillCell.prototype.downCellOverlay;
    /** @type {?} */
    BillCell.prototype.upCellOverlay;
}
//# sourceMappingURL=data:application/json;base64,