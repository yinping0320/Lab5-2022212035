/**
 * @fileoverview added by tsickle
 * Generated from: lib/bill-tracker/mxgraph-ext/VertexHandler.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { mxConstants, mxRectangle, mxRectangleShape, mxVertexHandler } from "../../ref/mxgraph";
import { BillCell } from "./BillCell";
var VertexHandler = /** @class */ (function (_super) {
    tslib_1.__extends(VertexHandler, _super);
    function VertexHandler(state) {
        return _super.call(this, state) || this;
    }
    /**
     * 选中框随节点大小变化
     * @param state
     * @returns
     */
    /**
     * 选中框随节点大小变化
     * @param {?} state
     * @return {?}
     */
    VertexHandler.prototype.getSelectionBounds = /**
     * 选中框随节点大小变化
     * @param {?} state
     * @return {?}
     */
    function (state) {
        return _super.prototype.getSelectionBounds.call(this, state);
    };
    /**
     * 仅显示四个角的调整大小图片
     */
    /**
     * 仅显示四个角的调整大小图片
     * @return {?}
     */
    VertexHandler.prototype.redrawHandles = /**
     * 仅显示四个角的调整大小图片
     * @return {?}
     */
    function () {
        _super.prototype.redrawHandles.call(this);
        if (this.sizers != null && this.sizers.length > 7) {
            this.sizers[1].node.style.display = 'none';
            this.sizers[3].node.style.display = 'none';
            this.sizers[4].node.style.display = 'none';
            this.sizers[6].node.style.display = 'none';
        }
    };
    /**
     * 创建圆角矩形选中框
     * @param bounds
     * @returns
     */
    /**
     * 创建圆角矩形选中框
     * @param {?} bounds
     * @return {?}
     */
    VertexHandler.prototype.createSelectionShape = /**
     * 创建圆角矩形选中框
     * @param {?} bounds
     * @return {?}
     */
    function (bounds) {
        if (this.state.cell instanceof BillCell) {
            /** @type {?} */
            var shape = new mxRectangleShape(mxRectangle.fromRectangle(bounds), null, this.getSelectionColor());
            shape.strokewidth = this.getSelectionStrokeWidth();
            shape.isDashed = this.isSelectionDashed();
            shape.isRounded = true;
            shape.style = shape.style || [];
            // todo: 直接使用4°并不合理，只是视觉上看起来像，放大至足够大还是有问题
            shape.style[mxConstants.STYLE_ARCSIZE] = 4 * this.state.view.scale;
            return shape;
        }
        return _super.prototype.createSelectionShape.call(this, bounds);
    };
    return VertexHandler;
}(mxVertexHandler));
export { VertexHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmVydGV4SGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL3J1bnRpbWUtYXBpLyIsInNvdXJjZXMiOlsibGliL2JpbGwtdHJhY2tlci9teGdyYXBoLWV4dC9WZXJ0ZXhIYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLGdCQUFnQixFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2hHLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFdEM7SUFBbUMseUNBQWU7SUFFOUMsdUJBQVksS0FBSztlQUNiLGtCQUFNLEtBQUssQ0FBQztJQUNoQixDQUFDO0lBRUQ7Ozs7T0FJRzs7Ozs7O0lBQ0gsMENBQWtCOzs7OztJQUFsQixVQUFtQixLQUFLO1FBQ3BCLE9BQU8saUJBQU0sa0JBQWtCLFlBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVEOztPQUVHOzs7OztJQUNILHFDQUFhOzs7O0lBQWI7UUFDSSxpQkFBTSxhQUFhLFdBQUUsQ0FBQztRQUV0QixJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUMvQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztZQUMzQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztZQUMzQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztZQUMzQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztTQUM5QztJQUNMLENBQUM7SUFFRDs7OztPQUlHOzs7Ozs7SUFDSCw0Q0FBb0I7Ozs7O0lBQXBCLFVBQXFCLE1BQU07UUFDdkIsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksWUFBWSxRQUFRLEVBQUU7O2dCQUNqQyxLQUFLLEdBQUcsSUFBSSxnQkFBZ0IsQ0FDNUIsV0FBVyxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsRUFDakMsSUFBSSxFQUFFLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1lBQ25DLEtBQUssQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLHVCQUF1QixFQUFFLENBQUM7WUFDbkQsS0FBSyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztZQUMxQyxLQUFLLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztZQUN2QixLQUFLLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDO1lBQ2hDLHlDQUF5QztZQUN6QyxLQUFLLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1lBRW5FLE9BQU8sS0FBSyxDQUFDO1NBQ2hCO1FBQ0QsT0FBTyxpQkFBTSxvQkFBb0IsWUFBQyxNQUFNLENBQUMsQ0FBQztJQUM5QyxDQUFDO0lBQ0wsb0JBQUM7QUFBRCxDQUFDLEFBbERELENBQW1DLGVBQWUsR0FrRGpEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbXhDb25zdGFudHMsIG14UmVjdGFuZ2xlLCBteFJlY3RhbmdsZVNoYXBlLCBteFZlcnRleEhhbmRsZXIgfSBmcm9tIFwiLi4vLi4vcmVmL214Z3JhcGhcIjtcclxuaW1wb3J0IHsgQmlsbENlbGwgfSBmcm9tIFwiLi9CaWxsQ2VsbFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFZlcnRleEhhbmRsZXIgZXh0ZW5kcyBteFZlcnRleEhhbmRsZXIge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHN0YXRlKSB7XHJcbiAgICAgICAgc3VwZXIoc3RhdGUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6YCJ5Lit5qGG6ZqP6IqC54K55aSn5bCP5Y+Y5YyWXHJcbiAgICAgKiBAcGFyYW0gc3RhdGUgXHJcbiAgICAgKiBAcmV0dXJucyBcclxuICAgICAqL1xyXG4gICAgZ2V0U2VsZWN0aW9uQm91bmRzKHN0YXRlKSB7XHJcbiAgICAgICAgcmV0dXJuIHN1cGVyLmdldFNlbGVjdGlvbkJvdW5kcyhzdGF0ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDku4XmmL7npLrlm5vkuKrop5LnmoTosIPmlbTlpKflsI/lm77niYdcclxuICAgICAqL1xyXG4gICAgcmVkcmF3SGFuZGxlcygpIHtcclxuICAgICAgICBzdXBlci5yZWRyYXdIYW5kbGVzKCk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLnNpemVycyAhPSBudWxsICYmIHRoaXMuc2l6ZXJzLmxlbmd0aCA+IDcpIHtcclxuICAgICAgICAgICAgdGhpcy5zaXplcnNbMV0ubm9kZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICB0aGlzLnNpemVyc1szXS5ub2RlLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgIHRoaXMuc2l6ZXJzWzRdLm5vZGUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgdGhpcy5zaXplcnNbNl0ubm9kZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWIm+W7uuWchuinkuefqeW9oumAieS4reahhlxyXG4gICAgICogQHBhcmFtIGJvdW5kcyBcclxuICAgICAqIEByZXR1cm5zIFxyXG4gICAgICovXHJcbiAgICBjcmVhdGVTZWxlY3Rpb25TaGFwZShib3VuZHMpIHtcclxuICAgICAgICBpZiAodGhpcy5zdGF0ZS5jZWxsIGluc3RhbmNlb2YgQmlsbENlbGwpIHtcclxuICAgICAgICAgICAgbGV0IHNoYXBlID0gbmV3IG14UmVjdGFuZ2xlU2hhcGUoXHJcbiAgICAgICAgICAgICAgICBteFJlY3RhbmdsZS5mcm9tUmVjdGFuZ2xlKGJvdW5kcyksXHJcbiAgICAgICAgICAgICAgICBudWxsLCB0aGlzLmdldFNlbGVjdGlvbkNvbG9yKCkpO1xyXG4gICAgICAgICAgICBzaGFwZS5zdHJva2V3aWR0aCA9IHRoaXMuZ2V0U2VsZWN0aW9uU3Ryb2tlV2lkdGgoKTtcclxuICAgICAgICAgICAgc2hhcGUuaXNEYXNoZWQgPSB0aGlzLmlzU2VsZWN0aW9uRGFzaGVkKCk7XHJcbiAgICAgICAgICAgIHNoYXBlLmlzUm91bmRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIHNoYXBlLnN0eWxlID0gc2hhcGUuc3R5bGUgfHwgW107XHJcbiAgICAgICAgICAgIC8vIHRvZG86IOebtOaOpeS9v+eUqDTCsOW5tuS4jeWQiOeQhu+8jOWPquaYr+inhuinieS4iueci+i1t+adpeWDj++8jOaUvuWkp+iHs+i2s+Wkn+Wkp+i/mOaYr+aciemXrumimFxyXG4gICAgICAgICAgICBzaGFwZS5zdHlsZVtteENvbnN0YW50cy5TVFlMRV9BUkNTSVpFXSA9IDQgKiB0aGlzLnN0YXRlLnZpZXcuc2NhbGU7XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gc2hhcGU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBzdXBlci5jcmVhdGVTZWxlY3Rpb25TaGFwZShib3VuZHMpO1xyXG4gICAgfVxyXG59Il19