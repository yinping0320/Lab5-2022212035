/**
 * @fileoverview added by tsickle
 * Generated from: lib/bill-tracker/pipe/bill-tracker-locale.pipe.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe, Inject, LOCALE_ID } from '@angular/core';
import { BILL_TRACKER_LANG_RESOURCES } from '../i18n/lang.resource';
var BillTrackerLocalePipe = /** @class */ (function () {
    function BillTrackerLocalePipe(localeId) {
        this.defaultLang = "zh-CHS";
        this.langCode = localeId || this.defaultLang;
        this.lang = BILL_TRACKER_LANG_RESOURCES[this.langCode] || BILL_TRACKER_LANG_RESOURCES[this.defaultLang];
    }
    /**
     * @param {?} name
     * @return {?}
     */
    BillTrackerLocalePipe.prototype.transform = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        return this.lang[name] || name;
    };
    BillTrackerLocalePipe.decorators = [
        { type: Pipe, args: [{ name: 'billTrackerLocale' },] }
    ];
    /** @nocollapse */
    BillTrackerLocalePipe.ctorParameters = function () { return [
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }
    ]; };
    return BillTrackerLocalePipe;
}());
export { BillTrackerLocalePipe };
if (false) {
    /**
     * @type {?}
     * @private
     */
    BillTrackerLocalePipe.prototype.defaultLang;
    /**
     * @type {?}
     * @private
     */
    BillTrackerLocalePipe.prototype.langCode;
    /**
     * @type {?}
     * @private
     */
    BillTrackerLocalePipe.prototype.lang;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmlsbC10cmFja2VyLWxvY2FsZS5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1iaWYvcnVudGltZS1hcGkvIiwic291cmNlcyI6WyJsaWIvYmlsbC10cmFja2VyL3BpcGUvYmlsbC10cmFja2VyLWxvY2FsZS5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUVwRTtJQUtJLCtCQUN1QixRQUFnQjtRQUp0QixnQkFBVyxHQUFXLFFBQVEsQ0FBQztRQU01QyxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQzdDLElBQUksQ0FBQyxJQUFJLEdBQUcsMkJBQTJCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLDJCQUEyQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM1RyxDQUFDOzs7OztJQUNELHlDQUFTOzs7O0lBQVQsVUFBVSxJQUFZO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUM7SUFDbkMsQ0FBQzs7Z0JBYkosSUFBSSxTQUFDLEVBQUUsSUFBSSxFQUFFLG1CQUFtQixFQUFFOzs7OzZDQU0xQixNQUFNLFNBQUMsU0FBUzs7SUFRekIsNEJBQUM7Q0FBQSxBQWRELElBY0M7U0FiWSxxQkFBcUI7Ozs7OztJQUM5Qiw0Q0FBZ0Q7Ozs7O0lBQ2hELHlDQUF5Qjs7Ozs7SUFDekIscUNBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSwgSW5qZWN0LCBMT0NBTEVfSUQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQklMTF9UUkFDS0VSX0xBTkdfUkVTT1VSQ0VTIH0gZnJvbSAnLi4vaTE4bi9sYW5nLnJlc291cmNlJztcclxuXHJcbkBQaXBlKHsgbmFtZTogJ2JpbGxUcmFja2VyTG9jYWxlJyB9KVxyXG5leHBvcnQgY2xhc3MgQmlsbFRyYWNrZXJMb2NhbGVQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IGRlZmF1bHRMYW5nOiBzdHJpbmcgPSBcInpoLUNIU1wiO1xyXG4gICAgcHJpdmF0ZSBsYW5nQ29kZTogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBsYW5nOiB7fTtcclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIEBJbmplY3QoTE9DQUxFX0lEKSBsb2NhbGVJZDogc3RyaW5nXHJcbiAgICApIHtcclxuICAgICAgICB0aGlzLmxhbmdDb2RlID0gbG9jYWxlSWQgfHwgdGhpcy5kZWZhdWx0TGFuZztcclxuICAgICAgICB0aGlzLmxhbmcgPSBCSUxMX1RSQUNLRVJfTEFOR19SRVNPVVJDRVNbdGhpcy5sYW5nQ29kZV0gfHwgQklMTF9UUkFDS0VSX0xBTkdfUkVTT1VSQ0VTW3RoaXMuZGVmYXVsdExhbmddO1xyXG4gICAgfVxyXG4gICAgdHJhbnNmb3JtKG5hbWU6IHN0cmluZyk6IGFueSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubGFuZ1tuYW1lXSB8fCBuYW1lO1xyXG4gICAgfVxyXG59XHJcblxyXG4iXX0=