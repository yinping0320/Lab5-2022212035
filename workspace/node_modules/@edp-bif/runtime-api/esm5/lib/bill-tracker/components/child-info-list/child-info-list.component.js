/**
 * @fileoverview added by tsickle
 * Generated from: lib/bill-tracker/components/child-info-list/child-info-list.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ComponentFactoryResolver, Injector, Input, ViewContainerRef } from "@angular/core";
import { LoadingService } from "@farris/ui-loading";
import { MessagerService } from "@farris/ui-messager";
import { BsModalService } from "@farris/ui-modal";
import { NotifyService } from "@farris/ui-notify";
import { BillInfo } from "../../../entity/tracking/BillInfo";
import { BillTrackerLocalePipe } from "../../pipe/bill-tracker-locale.pipe";
import { BillTrackerDataInfoService } from "../../services/bill-tracker-data-info.service";
var ChildInfoListComponent = /** @class */ (function () {
    function ChildInfoListComponent(dataInfoService, notify, messager, loading, modal, localePipe, vcr, inj, cfr, cdr) {
        this.dataInfoService = dataInfoService;
        this.notify = notify;
        this.messager = messager;
        this.loading = loading;
        this.modal = modal;
        this.localePipe = localePipe;
        this.vcr = vcr;
        this.inj = inj;
        this.cfr = cfr;
        this.cdr = cdr;
    }
    /**
     * @return {?}
     */
    ChildInfoListComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    ChildInfoListComponent.decorators = [
        { type: Component, args: [{
                    selector: "lib-bill-tracker-child-info-list",
                    template: "<ng-container *ngFor=\"let childTable of childSchemaTables\">\r\n    <lib-bill-tracker-child-info [schemaTable]=\"childTable\" [dataTable]=\"childDataTableMap[childTable.tableName]\"\r\n        [billInfo]=\"billInfo\">\r\n    </lib-bill-tracker-child-info>\r\n</ng-container>"
                }] }
    ];
    /** @nocollapse */
    ChildInfoListComponent.ctorParameters = function () { return [
        { type: BillTrackerDataInfoService },
        { type: NotifyService },
        { type: MessagerService },
        { type: LoadingService },
        { type: BsModalService },
        { type: BillTrackerLocalePipe },
        { type: ViewContainerRef },
        { type: Injector },
        { type: ComponentFactoryResolver },
        { type: ChangeDetectorRef }
    ]; };
    ChildInfoListComponent.propDecorators = {
        childSchemaTables: [{ type: Input, args: ["childSchemaTables",] }],
        childDataTableMap: [{ type: Input, args: ["childDataTableMap",] }],
        billInfo: [{ type: Input, args: ["billInfo",] }]
    };
    return ChildInfoListComponent;
}());
export { ChildInfoListComponent };
if (false) {
    /** @type {?} */
    ChildInfoListComponent.prototype.childSchemaTables;
    /** @type {?} */
    ChildInfoListComponent.prototype.childDataTableMap;
    /** @type {?} */
    ChildInfoListComponent.prototype.billInfo;
    /** @type {?} */
    ChildInfoListComponent.prototype.bsModalRef;
    /** @type {?} */
    ChildInfoListComponent.prototype.dataInfoService;
    /** @type {?} */
    ChildInfoListComponent.prototype.notify;
    /** @type {?} */
    ChildInfoListComponent.prototype.messager;
    /** @type {?} */
    ChildInfoListComponent.prototype.loading;
    /** @type {?} */
    ChildInfoListComponent.prototype.modal;
    /** @type {?} */
    ChildInfoListComponent.prototype.localePipe;
    /** @type {?} */
    ChildInfoListComponent.prototype.vcr;
    /** @type {?} */
    ChildInfoListComponent.prototype.inj;
    /** @type {?} */
    ChildInfoListComponent.prototype.cfr;
    /** @type {?} */
    ChildInfoListComponent.prototype.cdr;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpbGQtaW5mby1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL3J1bnRpbWUtYXBpLyIsInNvdXJjZXMiOlsibGliL2JpbGwtdHJhY2tlci9jb21wb25lbnRzL2NoaWxkLWluZm8tbGlzdC9jaGlsZC1pbmZvLWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSx3QkFBd0IsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFVLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWxJLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFjLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzlELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDN0QsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDNUUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFFM0Y7SUFpQkksZ0NBQ1csZUFBMkMsRUFDM0MsTUFBcUIsRUFDckIsUUFBeUIsRUFDekIsT0FBdUIsRUFDdkIsS0FBcUIsRUFDckIsVUFBaUMsRUFDakMsR0FBcUIsRUFDckIsR0FBYSxFQUNiLEdBQTZCLEVBQzdCLEdBQXNCO1FBVHRCLG9CQUFlLEdBQWYsZUFBZSxDQUE0QjtRQUMzQyxXQUFNLEdBQU4sTUFBTSxDQUFlO1FBQ3JCLGFBQVEsR0FBUixRQUFRLENBQWlCO1FBQ3pCLFlBQU8sR0FBUCxPQUFPLENBQWdCO1FBQ3ZCLFVBQUssR0FBTCxLQUFLLENBQWdCO1FBQ3JCLGVBQVUsR0FBVixVQUFVLENBQXVCO1FBQ2pDLFFBQUcsR0FBSCxHQUFHLENBQWtCO1FBQ3JCLFFBQUcsR0FBSCxHQUFHLENBQVU7UUFDYixRQUFHLEdBQUgsR0FBRyxDQUEwQjtRQUM3QixRQUFHLEdBQUgsR0FBRyxDQUFtQjtJQUdqQyxDQUFDOzs7O0lBRUQseUNBQVE7OztJQUFSO0lBRUEsQ0FBQzs7Z0JBbENKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsa0NBQWtDO29CQUM1QywrUkFBK0M7aUJBRWxEOzs7O2dCQU5RLDBCQUEwQjtnQkFIMUIsYUFBYTtnQkFGYixlQUFlO2dCQURmLGNBQWM7Z0JBRUYsY0FBYztnQkFHMUIscUJBQXFCO2dCQVA0RCxnQkFBZ0I7Z0JBQXpDLFFBQVE7Z0JBQWxDLHdCQUF3QjtnQkFBdEQsaUJBQWlCOzs7b0NBZ0JyQixLQUFLLFNBQUMsbUJBQW1CO29DQUd6QixLQUFLLFNBQUMsbUJBQW1COzJCQUd6QixLQUFLLFNBQUMsVUFBVTs7SUF1QnJCLDZCQUFDO0NBQUEsQUFuQ0QsSUFtQ0M7U0E5Qlksc0JBQXNCOzs7SUFDL0IsbURBQzRDOztJQUU1QyxtREFDMkQ7O0lBRTNELDBDQUMwQjs7SUFFMUIsNENBQThCOztJQUcxQixpREFBa0Q7O0lBQ2xELHdDQUE0Qjs7SUFDNUIsMENBQWdDOztJQUNoQyx5Q0FBOEI7O0lBQzlCLHVDQUE0Qjs7SUFDNUIsNENBQXdDOztJQUN4QyxxQ0FBNEI7O0lBQzVCLHFDQUFvQjs7SUFDcEIscUNBQW9DOztJQUNwQyxxQ0FBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIEluamVjdG9yLCBJbnB1dCwgT25Jbml0LCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgQmlsbERhdGFUYWJsZSwgQmlsbFNjaGVtYVRhYmxlIH0gZnJvbSBcIkBlZHAtYWlmL2NvbW1vbi1hcGlcIjtcclxuaW1wb3J0IHsgTG9hZGluZ1NlcnZpY2UgfSBmcm9tIFwiQGZhcnJpcy91aS1sb2FkaW5nXCI7XHJcbmltcG9ydCB7IE1lc3NhZ2VyU2VydmljZSB9IGZyb20gXCJAZmFycmlzL3VpLW1lc3NhZ2VyXCI7XHJcbmltcG9ydCB7IEJzTW9kYWxSZWYsIEJzTW9kYWxTZXJ2aWNlIH0gZnJvbSBcIkBmYXJyaXMvdWktbW9kYWxcIjtcclxuaW1wb3J0IHsgTm90aWZ5U2VydmljZSB9IGZyb20gXCJAZmFycmlzL3VpLW5vdGlmeVwiO1xyXG5pbXBvcnQgeyBCaWxsSW5mbyB9IGZyb20gXCIuLi8uLi8uLi9lbnRpdHkvdHJhY2tpbmcvQmlsbEluZm9cIjtcclxuaW1wb3J0IHsgQmlsbFRyYWNrZXJMb2NhbGVQaXBlIH0gZnJvbSBcIi4uLy4uL3BpcGUvYmlsbC10cmFja2VyLWxvY2FsZS5waXBlXCI7XHJcbmltcG9ydCB7IEJpbGxUcmFja2VyRGF0YUluZm9TZXJ2aWNlIH0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL2JpbGwtdHJhY2tlci1kYXRhLWluZm8uc2VydmljZVwiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogXCJsaWItYmlsbC10cmFja2VyLWNoaWxkLWluZm8tbGlzdFwiLFxyXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9jaGlsZC1pbmZvLWxpc3QuY29tcG9uZW50Lmh0bWxcIixcclxuICAgIHN0eWxlVXJsczogW11cclxufSlcclxuZXhwb3J0IGNsYXNzIENoaWxkSW5mb0xpc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gICAgQElucHV0KFwiY2hpbGRTY2hlbWFUYWJsZXNcIilcclxuICAgIHB1YmxpYyBjaGlsZFNjaGVtYVRhYmxlczogQmlsbFNjaGVtYVRhYmxlW107XHJcblxyXG4gICAgQElucHV0KFwiY2hpbGREYXRhVGFibGVNYXBcIilcclxuICAgIHB1YmxpYyBjaGlsZERhdGFUYWJsZU1hcDogeyBba2V5OiBzdHJpbmddOiBCaWxsRGF0YVRhYmxlIH07XHJcblxyXG4gICAgQElucHV0KFwiYmlsbEluZm9cIilcclxuICAgIHB1YmxpYyBiaWxsSW5mbzogQmlsbEluZm87XHJcblxyXG4gICAgcHVibGljIGJzTW9kYWxSZWY6IEJzTW9kYWxSZWY7XHJcblxyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHVibGljIGRhdGFJbmZvU2VydmljZTogQmlsbFRyYWNrZXJEYXRhSW5mb1NlcnZpY2UsXHJcbiAgICAgICAgcHVibGljIG5vdGlmeTogTm90aWZ5U2VydmljZSxcclxuICAgICAgICBwdWJsaWMgbWVzc2FnZXI6IE1lc3NhZ2VyU2VydmljZSxcclxuICAgICAgICBwdWJsaWMgbG9hZGluZzogTG9hZGluZ1NlcnZpY2UsXHJcbiAgICAgICAgcHVibGljIG1vZGFsOiBCc01vZGFsU2VydmljZSxcclxuICAgICAgICBwdWJsaWMgbG9jYWxlUGlwZTogQmlsbFRyYWNrZXJMb2NhbGVQaXBlLFxyXG4gICAgICAgIHB1YmxpYyB2Y3I6IFZpZXdDb250YWluZXJSZWYsXHJcbiAgICAgICAgcHVibGljIGluajogSW5qZWN0b3IsXHJcbiAgICAgICAgcHVibGljIGNmcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxyXG4gICAgICAgIHB1YmxpYyBjZHI6IENoYW5nZURldGVjdG9yUmVmLFxyXG4gICAgKSB7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG5cclxuICAgIH1cclxufSJdfQ==