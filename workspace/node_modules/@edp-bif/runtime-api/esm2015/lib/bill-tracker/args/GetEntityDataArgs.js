/**
 * @fileoverview added by tsickle
 * Generated from: lib/bill-tracker/args/GetEntityDataArgs.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { JsonConvertableImpl, BpmnModelJsonHelper } from '@edp-aif/common-api';
import { BillChildInfo } from '../../entity/tracking/BillChildInfo';
export class GetEntityDataArgs extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.billChildInfos = [];
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.schemaId = null;
        this.dataId = null;
        this.suCode = null;
        this.voMetadataId = null;
        this.billChildInfos = [];
        this.trackingSourceType = null;
        this.curYear = null;
        this.documentTypeId = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "schemaId", this.schemaId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "dataId", this.dataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "suCode", this.suCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voMetadataId", this.voMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "billChildInfos", this.billChildInfos);
        BpmnModelJsonHelper.SetAttributeValue(obj, "trackingSourceType", this.trackingSourceType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "curYear", this.curYear);
        BpmnModelJsonHelper.SetAttributeValue(obj, "documentTypeId", this.documentTypeId);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.schemaId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "schemaId");
        this.dataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "dataId");
        this.suCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "suCode");
        this.voMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voMetadataId");
        this.billChildInfos = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "billChildInfos", BillChildInfo);
        this.trackingSourceType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "trackingSourceType");
        this.curYear = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "curYear");
        this.documentTypeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "documentTypeId");
    }
}
if (false) {
    /** @type {?} */
    GetEntityDataArgs.prototype.schemaId;
    /** @type {?} */
    GetEntityDataArgs.prototype.dataId;
    /** @type {?} */
    GetEntityDataArgs.prototype.suCode;
    /** @type {?} */
    GetEntityDataArgs.prototype.voMetadataId;
    /** @type {?} */
    GetEntityDataArgs.prototype.billChildInfos;
    /** @type {?} */
    GetEntityDataArgs.prototype.trackingSourceType;
    /** @type {?} */
    GetEntityDataArgs.prototype.curYear;
    /** @type {?} */
    GetEntityDataArgs.prototype.documentTypeId;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2V0RW50aXR5RGF0YUFyZ3MuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWJpZi9ydW50aW1lLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9iaWxsLXRyYWNrZXIvYXJncy9HZXRFbnRpdHlEYXRhQXJncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQy9FLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUVwRSxNQUFNLE9BQU8saUJBQWtCLFNBQVEsbUJBQW1CO0lBQTFEOztRQUtJLG1CQUFjLEdBQXlCLEVBQUUsQ0FBQztJQTZDOUMsQ0FBQzs7Ozs7SUF4Q2EsbUJBQW1CO1FBQ3pCLEtBQUssQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBRTVCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ25CLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ25CLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUM7UUFDL0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDcEIsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7SUFDL0IsQ0FBQzs7OztJQUVNLG1CQUFtQjs7WUFDbEIsR0FBRyxHQUFHLEtBQUssQ0FBQyxtQkFBbUIsRUFBRTtRQUVyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN0RSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNsRSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNsRSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsY0FBYyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM5RSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ2xGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxvQkFBb0IsRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUMxRixtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNwRSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBRWxGLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFTSxrQkFBa0IsQ0FBQyxHQUFPO1FBQzdCLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMsUUFBUSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUMvRSxJQUFJLENBQUMsTUFBTSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUMzRSxJQUFJLENBQUMsTUFBTSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUMzRSxJQUFJLENBQUMsWUFBWSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxjQUFjLENBQUMsQ0FBQztRQUN2RixJQUFJLENBQUMsY0FBYyxHQUFHLG1CQUFtQixDQUFDLHVCQUF1QixDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxhQUFhLENBQUMsQ0FBQztRQUN4RyxJQUFJLENBQUMsa0JBQWtCLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLG9CQUFvQixDQUFDLENBQUM7UUFDbkcsSUFBSSxDQUFDLE9BQU8sR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDN0UsSUFBSSxDQUFDLGNBQWMsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztJQUMvRixDQUFDO0NBQ0o7OztJQWpERyxxQ0FBaUI7O0lBQ2pCLG1DQUFlOztJQUNmLG1DQUFlOztJQUNmLHlDQUFxQjs7SUFDckIsMkNBQTBDOztJQUMxQywrQ0FBMkI7O0lBQzNCLG9DQUFnQjs7SUFDaEIsMkNBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSnNvbkNvbnZlcnRhYmxlSW1wbCwgQnBtbk1vZGVsSnNvbkhlbHBlciB9IGZyb20gJ0BlZHAtYWlmL2NvbW1vbi1hcGknO1xyXG5pbXBvcnQgeyBCaWxsQ2hpbGRJbmZvIH0gZnJvbSAnLi4vLi4vZW50aXR5L3RyYWNraW5nL0JpbGxDaGlsZEluZm8nO1xyXG5cclxuZXhwb3J0IGNsYXNzIEdldEVudGl0eURhdGFBcmdzIGV4dGVuZHMgSnNvbkNvbnZlcnRhYmxlSW1wbCB7XHJcbiAgICBzY2hlbWFJZDogc3RyaW5nO1xyXG4gICAgZGF0YUlkOiBzdHJpbmc7XHJcbiAgICBzdUNvZGU6IHN0cmluZztcclxuICAgIHZvTWV0YWRhdGFJZDogc3RyaW5nO1xyXG4gICAgYmlsbENoaWxkSW5mb3M6IEFycmF5PEJpbGxDaGlsZEluZm8+ID0gW107XHJcbiAgICB0cmFja2luZ1NvdXJjZVR5cGU6IHN0cmluZztcclxuICAgIGN1clllYXI6IHN0cmluZztcclxuICAgIGRvY3VtZW50VHlwZUlkOiBzdHJpbmc7XHJcblxyXG4gICAgcHJvdGVjdGVkIFJlc2V0QmVmb3JlTG9hZEZyb20oKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuUmVzZXRCZWZvcmVMb2FkRnJvbSgpO1xyXG5cclxuICAgICAgICB0aGlzLnNjaGVtYUlkID0gbnVsbDtcclxuICAgICAgICB0aGlzLmRhdGFJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5zdUNvZGUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMudm9NZXRhZGF0YUlkID0gbnVsbDtcclxuICAgICAgICB0aGlzLmJpbGxDaGlsZEluZm9zID0gW107XHJcbiAgICAgICAgdGhpcy50cmFja2luZ1NvdXJjZVR5cGUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuY3VyWWVhciA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5kb2N1bWVudFR5cGVJZCA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENvbnZlcnRUb0pzb25PYmplY3QoKToge30ge1xyXG4gICAgICAgIGxldCBvYmogPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcblxyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInNjaGVtYUlkXCIsIHRoaXMuc2NoZW1hSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImRhdGFJZFwiLCB0aGlzLmRhdGFJZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwic3VDb2RlXCIsIHRoaXMuc3VDb2RlKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJ2b01ldGFkYXRhSWRcIiwgdGhpcy52b01ldGFkYXRhSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImJpbGxDaGlsZEluZm9zXCIsIHRoaXMuYmlsbENoaWxkSW5mb3MpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInRyYWNraW5nU291cmNlVHlwZVwiLCB0aGlzLnRyYWNraW5nU291cmNlVHlwZSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiY3VyWWVhclwiLCB0aGlzLmN1clllYXIpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImRvY3VtZW50VHlwZUlkXCIsIHRoaXMuZG9jdW1lbnRUeXBlSWQpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLnNjaGVtYUlkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJzY2hlbWFJZFwiKTtcclxuICAgICAgICB0aGlzLmRhdGFJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiZGF0YUlkXCIpO1xyXG4gICAgICAgIHRoaXMuc3VDb2RlID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJzdUNvZGVcIik7XHJcbiAgICAgICAgdGhpcy52b01ldGFkYXRhSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInZvTWV0YWRhdGFJZFwiKTtcclxuICAgICAgICB0aGlzLmJpbGxDaGlsZEluZm9zID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzTGlzdChvYmosIFwiYmlsbENoaWxkSW5mb3NcIiwgQmlsbENoaWxkSW5mbyk7XHJcbiAgICAgICAgdGhpcy50cmFja2luZ1NvdXJjZVR5cGUgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInRyYWNraW5nU291cmNlVHlwZVwiKTtcclxuICAgICAgICB0aGlzLmN1clllYXIgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImN1clllYXJcIik7XHJcbiAgICAgICAgdGhpcy5kb2N1bWVudFR5cGVJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiZG9jdW1lbnRUeXBlSWRcIik7XHJcbiAgICB9XHJcbn0iXX0=