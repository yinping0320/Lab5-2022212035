/**
 * @fileoverview added by tsickle
 * Generated from: lib/bill-tracker/components/child-info-list/child-info-list.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ComponentFactoryResolver, Injector, Input, ViewContainerRef } from "@angular/core";
import { LoadingService } from "@farris/ui-loading";
import { MessagerService } from "@farris/ui-messager";
import { BsModalService } from "@farris/ui-modal";
import { NotifyService } from "@farris/ui-notify";
import { BillInfo } from "../../../entity/tracking/BillInfo";
import { BillTrackerLocalePipe } from "../../pipe/bill-tracker-locale.pipe";
import { BillTrackerDataInfoService } from "../../services/bill-tracker-data-info.service";
export class ChildInfoListComponent {
    /**
     * @param {?} dataInfoService
     * @param {?} notify
     * @param {?} messager
     * @param {?} loading
     * @param {?} modal
     * @param {?} localePipe
     * @param {?} vcr
     * @param {?} inj
     * @param {?} cfr
     * @param {?} cdr
     */
    constructor(dataInfoService, notify, messager, loading, modal, localePipe, vcr, inj, cfr, cdr) {
        this.dataInfoService = dataInfoService;
        this.notify = notify;
        this.messager = messager;
        this.loading = loading;
        this.modal = modal;
        this.localePipe = localePipe;
        this.vcr = vcr;
        this.inj = inj;
        this.cfr = cfr;
        this.cdr = cdr;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
ChildInfoListComponent.decorators = [
    { type: Component, args: [{
                selector: "lib-bill-tracker-child-info-list",
                template: "<ng-container *ngFor=\"let childTable of childSchemaTables\">\r\n    <lib-bill-tracker-child-info [schemaTable]=\"childTable\" [dataTable]=\"childDataTableMap[childTable.tableName]\"\r\n        [billInfo]=\"billInfo\">\r\n    </lib-bill-tracker-child-info>\r\n</ng-container>"
            }] }
];
/** @nocollapse */
ChildInfoListComponent.ctorParameters = () => [
    { type: BillTrackerDataInfoService },
    { type: NotifyService },
    { type: MessagerService },
    { type: LoadingService },
    { type: BsModalService },
    { type: BillTrackerLocalePipe },
    { type: ViewContainerRef },
    { type: Injector },
    { type: ComponentFactoryResolver },
    { type: ChangeDetectorRef }
];
ChildInfoListComponent.propDecorators = {
    childSchemaTables: [{ type: Input, args: ["childSchemaTables",] }],
    childDataTableMap: [{ type: Input, args: ["childDataTableMap",] }],
    billInfo: [{ type: Input, args: ["billInfo",] }]
};
if (false) {
    /** @type {?} */
    ChildInfoListComponent.prototype.childSchemaTables;
    /** @type {?} */
    ChildInfoListComponent.prototype.childDataTableMap;
    /** @type {?} */
    ChildInfoListComponent.prototype.billInfo;
    /** @type {?} */
    ChildInfoListComponent.prototype.bsModalRef;
    /** @type {?} */
    ChildInfoListComponent.prototype.dataInfoService;
    /** @type {?} */
    ChildInfoListComponent.prototype.notify;
    /** @type {?} */
    ChildInfoListComponent.prototype.messager;
    /** @type {?} */
    ChildInfoListComponent.prototype.loading;
    /** @type {?} */
    ChildInfoListComponent.prototype.modal;
    /** @type {?} */
    ChildInfoListComponent.prototype.localePipe;
    /** @type {?} */
    ChildInfoListComponent.prototype.vcr;
    /** @type {?} */
    ChildInfoListComponent.prototype.inj;
    /** @type {?} */
    ChildInfoListComponent.prototype.cfr;
    /** @type {?} */
    ChildInfoListComponent.prototype.cdr;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpbGQtaW5mby1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL3J1bnRpbWUtYXBpLyIsInNvdXJjZXMiOlsibGliL2JpbGwtdHJhY2tlci9jb21wb25lbnRzL2NoaWxkLWluZm8tbGlzdC9jaGlsZC1pbmZvLWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSx3QkFBd0IsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFVLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWxJLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFjLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzlELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDN0QsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDNUUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFPM0YsTUFBTSxPQUFPLHNCQUFzQjs7Ozs7Ozs7Ozs7OztJQVkvQixZQUNXLGVBQTJDLEVBQzNDLE1BQXFCLEVBQ3JCLFFBQXlCLEVBQ3pCLE9BQXVCLEVBQ3ZCLEtBQXFCLEVBQ3JCLFVBQWlDLEVBQ2pDLEdBQXFCLEVBQ3JCLEdBQWEsRUFDYixHQUE2QixFQUM3QixHQUFzQjtRQVR0QixvQkFBZSxHQUFmLGVBQWUsQ0FBNEI7UUFDM0MsV0FBTSxHQUFOLE1BQU0sQ0FBZTtRQUNyQixhQUFRLEdBQVIsUUFBUSxDQUFpQjtRQUN6QixZQUFPLEdBQVAsT0FBTyxDQUFnQjtRQUN2QixVQUFLLEdBQUwsS0FBSyxDQUFnQjtRQUNyQixlQUFVLEdBQVYsVUFBVSxDQUF1QjtRQUNqQyxRQUFHLEdBQUgsR0FBRyxDQUFrQjtRQUNyQixRQUFHLEdBQUgsR0FBRyxDQUFVO1FBQ2IsUUFBRyxHQUFILEdBQUcsQ0FBMEI7UUFDN0IsUUFBRyxHQUFILEdBQUcsQ0FBbUI7SUFHakMsQ0FBQzs7OztJQUVELFFBQVE7SUFFUixDQUFDOzs7WUFsQ0osU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxrQ0FBa0M7Z0JBQzVDLCtSQUErQzthQUVsRDs7OztZQU5RLDBCQUEwQjtZQUgxQixhQUFhO1lBRmIsZUFBZTtZQURmLGNBQWM7WUFFRixjQUFjO1lBRzFCLHFCQUFxQjtZQVA0RCxnQkFBZ0I7WUFBekMsUUFBUTtZQUFsQyx3QkFBd0I7WUFBdEQsaUJBQWlCOzs7Z0NBZ0JyQixLQUFLLFNBQUMsbUJBQW1CO2dDQUd6QixLQUFLLFNBQUMsbUJBQW1CO3VCQUd6QixLQUFLLFNBQUMsVUFBVTs7OztJQU5qQixtREFDNEM7O0lBRTVDLG1EQUMyRDs7SUFFM0QsMENBQzBCOztJQUUxQiw0Q0FBOEI7O0lBRzFCLGlEQUFrRDs7SUFDbEQsd0NBQTRCOztJQUM1QiwwQ0FBZ0M7O0lBQ2hDLHlDQUE4Qjs7SUFDOUIsdUNBQTRCOztJQUM1Qiw0Q0FBd0M7O0lBQ3hDLHFDQUE0Qjs7SUFDNUIscUNBQW9COztJQUNwQixxQ0FBb0M7O0lBQ3BDLHFDQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgSW5qZWN0b3IsIElucHV0LCBPbkluaXQsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBCaWxsRGF0YVRhYmxlLCBCaWxsU2NoZW1hVGFibGUgfSBmcm9tIFwiQGVkcC1haWYvY29tbW9uLWFwaVwiO1xyXG5pbXBvcnQgeyBMb2FkaW5nU2VydmljZSB9IGZyb20gXCJAZmFycmlzL3VpLWxvYWRpbmdcIjtcclxuaW1wb3J0IHsgTWVzc2FnZXJTZXJ2aWNlIH0gZnJvbSBcIkBmYXJyaXMvdWktbWVzc2FnZXJcIjtcclxuaW1wb3J0IHsgQnNNb2RhbFJlZiwgQnNNb2RhbFNlcnZpY2UgfSBmcm9tIFwiQGZhcnJpcy91aS1tb2RhbFwiO1xyXG5pbXBvcnQgeyBOb3RpZnlTZXJ2aWNlIH0gZnJvbSBcIkBmYXJyaXMvdWktbm90aWZ5XCI7XHJcbmltcG9ydCB7IEJpbGxJbmZvIH0gZnJvbSBcIi4uLy4uLy4uL2VudGl0eS90cmFja2luZy9CaWxsSW5mb1wiO1xyXG5pbXBvcnQgeyBCaWxsVHJhY2tlckxvY2FsZVBpcGUgfSBmcm9tIFwiLi4vLi4vcGlwZS9iaWxsLXRyYWNrZXItbG9jYWxlLnBpcGVcIjtcclxuaW1wb3J0IHsgQmlsbFRyYWNrZXJEYXRhSW5mb1NlcnZpY2UgfSBmcm9tIFwiLi4vLi4vc2VydmljZXMvYmlsbC10cmFja2VyLWRhdGEtaW5mby5zZXJ2aWNlXCI7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiBcImxpYi1iaWxsLXRyYWNrZXItY2hpbGQtaW5mby1saXN0XCIsXHJcbiAgICB0ZW1wbGF0ZVVybDogXCIuL2NoaWxkLWluZm8tbGlzdC5jb21wb25lbnQuaHRtbFwiLFxyXG4gICAgc3R5bGVVcmxzOiBbXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ2hpbGRJbmZvTGlzdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgICBASW5wdXQoXCJjaGlsZFNjaGVtYVRhYmxlc1wiKVxyXG4gICAgcHVibGljIGNoaWxkU2NoZW1hVGFibGVzOiBCaWxsU2NoZW1hVGFibGVbXTtcclxuXHJcbiAgICBASW5wdXQoXCJjaGlsZERhdGFUYWJsZU1hcFwiKVxyXG4gICAgcHVibGljIGNoaWxkRGF0YVRhYmxlTWFwOiB7IFtrZXk6IHN0cmluZ106IEJpbGxEYXRhVGFibGUgfTtcclxuXHJcbiAgICBASW5wdXQoXCJiaWxsSW5mb1wiKVxyXG4gICAgcHVibGljIGJpbGxJbmZvOiBCaWxsSW5mbztcclxuXHJcbiAgICBwdWJsaWMgYnNNb2RhbFJlZjogQnNNb2RhbFJlZjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBwdWJsaWMgZGF0YUluZm9TZXJ2aWNlOiBCaWxsVHJhY2tlckRhdGFJbmZvU2VydmljZSxcclxuICAgICAgICBwdWJsaWMgbm90aWZ5OiBOb3RpZnlTZXJ2aWNlLFxyXG4gICAgICAgIHB1YmxpYyBtZXNzYWdlcjogTWVzc2FnZXJTZXJ2aWNlLFxyXG4gICAgICAgIHB1YmxpYyBsb2FkaW5nOiBMb2FkaW5nU2VydmljZSxcclxuICAgICAgICBwdWJsaWMgbW9kYWw6IEJzTW9kYWxTZXJ2aWNlLFxyXG4gICAgICAgIHB1YmxpYyBsb2NhbGVQaXBlOiBCaWxsVHJhY2tlckxvY2FsZVBpcGUsXHJcbiAgICAgICAgcHVibGljIHZjcjogVmlld0NvbnRhaW5lclJlZixcclxuICAgICAgICBwdWJsaWMgaW5qOiBJbmplY3RvcixcclxuICAgICAgICBwdWJsaWMgY2ZyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXHJcbiAgICAgICAgcHVibGljIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsXHJcbiAgICApIHtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XHJcblxyXG4gICAgfVxyXG59Il19