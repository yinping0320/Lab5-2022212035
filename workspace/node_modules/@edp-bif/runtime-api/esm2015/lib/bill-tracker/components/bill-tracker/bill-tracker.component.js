/**
 * @fileoverview added by tsickle
 * Generated from: lib/bill-tracker/components/bill-tracker/bill-tracker.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, Inject, LOCALE_ID, Input, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, ViewContainerRef, Optional, ApplicationRef, Injector, ComponentFactoryResolver, ReflectiveInjector } from '@angular/core';
import { BillTrackerGraphComponent } from '../bill-tracker-graph/bill-tracker-graph.component';
import { BillTrackerDataService } from '../../services/bill-tracker-data.service';
import { BillTrackerArgs } from '../../config/bill-tracker-args';
import { BillTrackerDataComponent } from '../bill-tracker-data/bill-tracker-data.component';
import { BsModalService } from '@farris/ui-modal';
import { LoadingService } from "@farris/ui-loading";
import { MessagerService } from "@farris/ui-messager";
import { NotifyService } from "@farris/ui-notify";
import { BillTrackerDataInfoService } from '../../services/bill-tracker-data-info.service';
import { BillTrackerDirection } from '../../config/bill-tracker-direction';
import { Events } from '../../mxgraph-ext/Events';
import { BillTrackerInternalUiService } from '../../services/bill-tracker-internal-ui.service';
import { mxEvent } from '../../../ref/mxgraph';
export class BillTrackerComponent {
    /**
     * @param {?} args
     * @param {?} localeId
     * @param {?} dataService
     * @param {?} notify
     * @param {?} messager
     * @param {?} loading
     * @param {?} modal
     * @param {?} cdf
     * @param {?} vcr
     * @param {?} appr
     * @param {?} inj
     * @param {?} cfr
     */
    constructor(args, localeId, dataService, notify, messager, loading, modal, cdf, vcr, appr, inj, cfr) {
        this.localeId = localeId;
        this.dataService = dataService;
        this.notify = notify;
        this.messager = messager;
        this.loading = loading;
        this.modal = modal;
        this.cdf = cdf;
        this.vcr = vcr;
        this.appr = appr;
        this.inj = inj;
        this.cfr = cfr;
        this.defaultDataWrapperHeight = 180;
        this.dataWrapperHeight = 180;
        this.showData = false;
        this.dataFullScreen = false;
        this.billTrackerArgs = args;
        this.dataInfoService = new BillTrackerDataInfoService();
        this.newBTS = this.dataInfoService.isNewBTS(this.billTrackerArgs.canTrackingResult.billTrackingSettings);
        /** @type {?} */
        const inject = ReflectiveInjector.resolveAndCreate([
            BillTrackerInternalUiService
        ], this.inj);
        this.internalUiService = inject.get(BillTrackerInternalUiService, null);
        this.defaultDataWrapperHeight = args && args.gridOptions && args.gridOptions.defaultHeight ? args.gridOptions.defaultHeight : this.defaultDataWrapperHeight;
        this.dataWrapperHeight = this.defaultDataWrapperHeight;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.paintGraph();
        }), 0);
    }
    /**
     * @return {?}
     */
    paintGraph() {
        this.billGraph.paint();
        this.graphZoomScale = this.billGraph.getZoomScale();
        this.billGraph.graph.view.addListener(mxEvent.SCALE, (/**
         * @param {?} sender
         * @param {?} evt
         * @return {?}
         */
        (sender, evt) => {
            // console.log(sender, evt);
            this.graphZoomScale = this.billGraph.getZoomScale();
        }));
    }
    /**
     * @param {?} cell
     * @return {?}
     */
    selectHandler(cell) {
        if (cell) {
            /** @type {?} */
            const billInfo = cell.billInfo;
            /** @type {?} */
            const billDataInfo = cell.billDataInfo;
            if (billInfo == this.lastBillInfo && billDataInfo == this.lastBillDataInfo && this.showData == true) {
                return;
            }
            /** @type {?} */
            const args = this.dataService.buildGetMainEntityDataArgs(billInfo, billDataInfo);
            this.billData.showDataGrid(args, billInfo, billDataInfo, null);
            // 重置滚动条
            this.divDataWrapperER.nativeElement.scrollTo({ top: 0 });
            this.showData = true;
            this.lastBillInfo = billInfo;
            this.lastBillDataInfo = billDataInfo;
        }
        else {
            this.billData.clearDataRegion();
            this.showData = false;
        }
    }
    /**
     * @param {?} evt
     * @return {?}
     */
    stateChangeHandler(evt) {
        if (evt.type == Events.CLICK_FIRST_SUMMARY) {
            this.openBillDetail(evt.data);
        }
    }
    /**
     * @param {?} modalRef
     * @return {?}
     */
    setModalRef(modalRef) {
        this.modalRef = modalRef;
        if (this.billGraph != null) {
            this.billGraph.setModalRef(modalRef);
        }
    }
    /**
     * @param {?} evt
     * @return {?}
     */
    resetGraphHeight(evt) {
        ((/** @type {?} */ (evt.host))).style.top = '';
        ((/** @type {?} */ (evt.host))).style.left = '';
        this.graphContainerER.nativeElement.style.height = `${this.mainContainerER.nativeElement.clientHeight - evt.size.height}px`;
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.billGraph.refresh();
        }));
    }
    /**
     * @return {?}
     */
    expandDataRegion() {
        this.dataFullScreen = true;
        this.divDataWrapperER.nativeElement.style.height = '100%';
        this.divDataWrapperER.nativeElement.style.top = '0';
    }
    /**
     * @return {?}
     */
    collapseDataRegion() {
        this.dataFullScreen = false;
        this.dataWrapperHeight = this.defaultDataWrapperHeight;
        this.divDataWrapperER.nativeElement.style.height = this.dataWrapperHeight + "px";
        this.divDataWrapperER.nativeElement.style.top = null;
    }
    /**
     * @param {?} evt
     * @return {?}
     */
    onRzResized(evt) {
        if (evt.position.top < 0) {
            this.divDataWrapperER.nativeElement.style.top = '0';
            this.divDataWrapperER.nativeElement.style.height = '100%';
            this.dataFullScreen = true;
        }
    }
    /**
     * @return {?}
     */
    graphZoomIn() {
        this.billGraph.zoomIn();
    }
    /**
     * @return {?}
     */
    graphZoomOut() {
        this.billGraph.zoomOut();
    }
    /**
     * @return {?}
     */
    graphZoomActual() {
        this.billGraph.zoomActual();
    }
    /**
     * @return {?}
     */
    graphPrint() {
        this.billGraph.print();
    }
    /**
     * @param {?} direction
     * @param {?=} all
     * @return {?}
     */
    graphExpand(direction, all = false) {
        this.billGraph.expand(direction, all);
    }
    /**
     * @return {?}
     */
    graphExpandUpAll() {
        this.graphExpand(BillTrackerDirection.Up, true);
    }
    /**
     * @return {?}
     */
    graphExpandUp() {
        this.graphExpand(BillTrackerDirection.Up, false);
    }
    /**
     * @return {?}
     */
    graphExpandDown() {
        this.graphExpand(BillTrackerDirection.Down, false);
    }
    /**
     * @return {?}
     */
    graphExpandDownAll() {
        this.graphExpand(BillTrackerDirection.Down, true);
    }
    /**
     * @param {?} cell
     * @return {?}
     */
    openBillDetail(cell) {
        this.internalUiService.openBillDetail(cell.billInfo, cell.billDataInfo);
    }
}
BillTrackerComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-bill-tracker',
                template: "<div class=\"g-main\" style=\"height: 100%; background-color: #ffffff;\" #mainContainer>\r\n  <div class=\"bill-tracker-toolbar-wrapper\" *ngIf=\"modalRef!=null\">\r\n    <button class=\"btn btn-secondary bill-tracker-toolbar-btn mr-1\" (click)=\"graphExpandUpAll()\">\r\n      {{'expandUpAll'|billTrackerLocale}}\r\n    </button>\r\n    <button class=\"btn btn-secondary bill-tracker-toolbar-btn mr-1\" (click)=\"graphExpandUp()\">\r\n      {{'expandUp'|billTrackerLocale}}\r\n    </button>\r\n    <button class=\"btn btn-secondary bill-tracker-toolbar-btn mr-1\" (click)=\"graphExpandDown()\">\r\n      {{'expandDown'|billTrackerLocale}}\r\n    </button>\r\n    <button class=\"btn btn-secondary bill-tracker-toolbar-btn mr-1\" (click)=\"graphExpandDownAll()\">\r\n      {{'expandDownAll'|billTrackerLocale}}\r\n    </button>\r\n    <div class=\"bill-tracker-toolbar-icon\" (click)=\"graphZoomOut()\">\r\n      <i class=\"f-icon f-icon-minus\" title=\"{{'zoomOut' | billTrackerLocale}}\"></i>\r\n    </div>\r\n    <div class=\"bill-tracker-toolbar-input\">\r\n      <input *ngIf=\"false\" type=\"text\" style=\"border: 0; width: 30px; text-align: right;\" readonly\r\n        [(ngModel)]=\"graphZoomScale\">\r\n      <span style=\"border: 0; width: 30px; text-align: right;\">{{graphZoomScale}}</span>\r\n      <span>%</span>\r\n    </div>\r\n    <div class=\"bill-tracker-toolbar-icon\" (click)=\"graphZoomIn()\">\r\n      <i class=\"f-icon f-icon-add\" title=\"{{'zoomIn' | billTrackerLocale}}\"></i>\r\n    </div>\r\n    <div class=\"bill-tracker-toolbar-icon\" (click)=\"graphZoomActual()\">\r\n      <i class=\"f-icon f-icon-reset\" title=\"{{'zoomReset' | billTrackerLocale}}\"></i>\r\n    </div>\r\n    <div class=\"bill-tracker-toolbar-icon\" (click)=\"graphPrint()\" *ngIf=\"false\">\r\n      <i class=\"f-icon f-icon-print\" title=\"{{'print' | billTrackerLocale}}\"></i>\r\n    </div>\r\n  </div>\r\n  <div class=\"bill-tracker-graph-wrapper\" #graphContainer>\r\n    <lib-bill-tracker-graph #billGraph [billTrackerArgs]=\"billTrackerArgs\" (select)=\"selectHandler($event)\"\r\n      (stateChange)=\"stateChangeHandler($event)\">\r\n    </lib-bill-tracker-graph>\r\n  </div>\r\n</div>\r\n<!-- todo: \u5206\u5272\u6761\u6682\u672A\u52A0\u6700\u5927\u9AD8\u5EA6\u9650\u5236 -->\r\n<div #divDataWrapper class=\"bill-tracker-data-wrapper\" [style.height]=\"dataWrapperHeight + 'px'\"\r\n  [style.display]=\"showData ? null : 'none'\" ngResizable rzAspectRatio=\"false\" [rzHandles]=\"'n'\" [rzMinHeight]=\"40\"\r\n  (rzStop)=\"onRzResized($event)\">\r\n  <div class=\"bill-tracker-divider-wrapper\">\r\n    <div class=\"bill-tracker-divider bill-tracker-divider-transparent bill-tracker-divider-img\">\r\n    </div>\r\n  </div>\r\n  <div class=\"bill-tracker-fold-container\">\r\n    <div class=\"bill-tracker-fold-wrapper\">\r\n      <div class=\"bill-tracker-fold-icon\">\r\n        <i class=\"f-icon f-icon-arrow-seek-up\" *ngIf=\"dataFullScreen==false\" (click)=\"expandDataRegion()\"></i>\r\n        <i class=\"f-icon f-icon-arrow-seek-down\" *ngIf=\"dataFullScreen==true\" (click)=\"collapseDataRegion()\"></i>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div #divDataTable class=\"bill-tracker-data-table-wrapper\">\r\n    <lib-bill-tracker-data #billData></lib-bill-tracker-data>\r\n  </div>\r\n</div>\r\n",
                providers: [
                    BillTrackerDataService
                ],
                changeDetection: ChangeDetectionStrategy.Default,
                styles: [".bill-tracker-divider{position:relative;height:5px}.bill-tracker-divider-transparent:before{content:\"\";position:absolute;top:1px;left:0;width:100%;height:2px;background-color:#e9ecf3}.bill-tracker-divider-transparent:hover:before{content:\"\";position:absolute;top:1px;left:0;width:100%;height:2px;background-color:#3f65ff}.bill-tracker-divider-img:after{content:\"\";position:absolute;top:-1px;left:50%;width:60px;height:5px;background-image:url(/platform/runtime/common/web/@edp-bif/runtime-api/images/separator.svg);background-repeat:no-repeat}.bill-tracker-divider-img:hover:after{content:\"\";position:absolute;top:-1px;left:50%;width:60px;height:5px;background-image:url(/platform/runtime/common/web/@edp-bif/runtime-api/images/separator-hover.svg);background-repeat:no-repeat}.bill-tracker-graph-wrapper{height:100%;position:relative}.bill-tracker-data-wrapper{z-index:2;overflow-y:auto;position:absolute;left:0;width:100%;bottom:0;height:200px;background-color:#fff;overflow:hidden}.bill-tracker-data-wrapper .ng-resizable-handle.ng-resizable-n{height:10px}.bill-tracker-data-table-wrapper{position:relative;width:100%;padding-top:6px;height:100%;overflow:auto}.bill-tracker-fold-wrapper{z-index:1;position:absolute;right:1rem;top:0;width:2rem;height:2rem}.bill-tracker-fold-icon{display:inline-flex;width:1.5em;height:1.5em;line-height:1.5em;text-align:center;color:#848c9a;background:#fff;border-radius:1.5em;border:1px solid #e9ecf3;justify-content:center;align-items:center;flex-shrink:0;overflow:hidden;margin:.5em .5em 0 0}.bill-tracker-fold-icon:hover{background-image:linear-gradient(214deg,#3f65ff 0,#4d9aff 100%);box-shadow:0 3px 8px 0 rgba(78,148,255,.4);color:#fff}.bill-tracker-toolbar-wrapper{z-index:1;position:absolute;right:0;top:0;display:flex;margin-right:14px;margin-top:14px;background-color:#fff}.bill-tracker-toolbar-icon{background:#fff;width:22px;height:22px;line-height:22px;text-align:center;color:#595d63;border:1px solid #e8ebf2;box-shadow:0 2px 6px 0 rgba(31,35,41,.06);border-radius:22px;justify-content:center;align-items:center;flex-shrink:0;overflow:hidden}.bill-tracker-toolbar-icon:hover{background-image:linear-gradient(214deg,#3f65ff 0,#4d9aff 100%);box-shadow:0 3px 8px 0 rgba(78,148,255,.4);color:#fff}.bill-tracker-toolbar-btn:hover{background-color:#fff}.bill-tracker-fold-container{position:fixed;height:2rem;width:100%;z-index:1}"]
            }] }
];
/** @nocollapse */
BillTrackerComponent.ctorParameters = () => [
    { type: BillTrackerArgs },
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
    { type: BillTrackerDataService },
    { type: NotifyService },
    { type: MessagerService },
    { type: LoadingService },
    { type: BsModalService },
    { type: ChangeDetectorRef },
    { type: ViewContainerRef },
    { type: ApplicationRef },
    { type: Injector, decorators: [{ type: Optional }] },
    { type: ComponentFactoryResolver, decorators: [{ type: Optional }] }
];
BillTrackerComponent.propDecorators = {
    billGraph: [{ type: ViewChild, args: ["billGraph",] }],
    billGraphVCR: [{ type: ViewChild, args: ["billGraph", { read: ViewContainerRef },] }],
    mainContainerER: [{ type: ViewChild, args: ["mainContainer",] }],
    graphContainerER: [{ type: ViewChild, args: ["graphContainer",] }],
    billData: [{ type: ViewChild, args: ["billData",] }],
    billDataVCR: [{ type: ViewChild, args: ["billData", { read: ViewContainerRef },] }],
    divDataTableER: [{ type: ViewChild, args: ["divDataTable",] }],
    divDataWrapperER: [{ type: ViewChild, args: ["divDataWrapper",] }],
    billTrackerArgs: [{ type: Input, args: ["billTrackerArgs",] }]
};
if (false) {
    /** @type {?} */
    BillTrackerComponent.prototype.billGraph;
    /** @type {?} */
    BillTrackerComponent.prototype.billGraphVCR;
    /** @type {?} */
    BillTrackerComponent.prototype.mainContainerER;
    /** @type {?} */
    BillTrackerComponent.prototype.graphContainerER;
    /** @type {?} */
    BillTrackerComponent.prototype.billData;
    /** @type {?} */
    BillTrackerComponent.prototype.billDataVCR;
    /** @type {?} */
    BillTrackerComponent.prototype.divDataTableER;
    /** @type {?} */
    BillTrackerComponent.prototype.divDataWrapperER;
    /** @type {?} */
    BillTrackerComponent.prototype.modalRef;
    /** @type {?} */
    BillTrackerComponent.prototype.billTrackerArgs;
    /** @type {?} */
    BillTrackerComponent.prototype.defaultDataWrapperHeight;
    /** @type {?} */
    BillTrackerComponent.prototype.dataWrapperHeight;
    /** @type {?} */
    BillTrackerComponent.prototype.showData;
    /** @type {?} */
    BillTrackerComponent.prototype.dataFullScreen;
    /** @type {?} */
    BillTrackerComponent.prototype.lastBillInfo;
    /** @type {?} */
    BillTrackerComponent.prototype.lastBillDataInfo;
    /** @type {?} */
    BillTrackerComponent.prototype.graphZoomScale;
    /** @type {?} */
    BillTrackerComponent.prototype.newBTS;
    /** @type {?} */
    BillTrackerComponent.prototype.dataInfoService;
    /** @type {?} */
    BillTrackerComponent.prototype.internalUiService;
    /** @type {?} */
    BillTrackerComponent.prototype.localeId;
    /** @type {?} */
    BillTrackerComponent.prototype.dataService;
    /** @type {?} */
    BillTrackerComponent.prototype.notify;
    /** @type {?} */
    BillTrackerComponent.prototype.messager;
    /** @type {?} */
    BillTrackerComponent.prototype.loading;
    /** @type {?} */
    BillTrackerComponent.prototype.modal;
    /** @type {?} */
    BillTrackerComponent.prototype.cdf;
    /** @type {?} */
    BillTrackerComponent.prototype.vcr;
    /** @type {?} */
    BillTrackerComponent.prototype.appr;
    /** @type {?} */
    BillTrackerComponent.prototype.inj;
    /** @type {?} */
    BillTrackerComponent.prototype.cfr;
}
//# sourceMappingURL=data:application/json;base64,