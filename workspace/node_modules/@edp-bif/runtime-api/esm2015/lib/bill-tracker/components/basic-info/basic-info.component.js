/**
 * @fileoverview added by tsickle
 * Generated from: lib/bill-tracker/components/basic-info/basic-info.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ComponentFactoryResolver, Inject, Injector, Input, LOCALE_ID, Optional, ReflectiveInjector, ViewContainerRef } from "@angular/core";
import { BillDataTable, BillSchemaTable, DataType } from "@edp-aif/common-api";
import { JointQueryMode } from "@edp-bif/common-api";
import { LoadingService } from "@farris/ui-loading";
import { MessagerService } from "@farris/ui-messager";
import { BsModalService } from "@farris/ui-modal";
import { NotifyService } from "@farris/ui-notify";
import { FrameworkService } from "@gsp-sys/rtf-common";
import { BillDataInfo } from "../../../entity/tracking/BillDataInfo";
import { BillInfo } from "../../../entity/tracking/BillInfo";
import { BillTrackerLocalePipe } from "../../pipe/bill-tracker-locale.pipe";
import { BillTrackerDataInfoService } from "../../services/bill-tracker-data-info.service";
import { BillTrackerInternalUiService } from "../../services/bill-tracker-internal-ui.service";
import { Exceptions } from "../../../entity/tracking/Exceptions";
export class BasicInfoComponent {
    /**
     * @param {?} framework
     * @param {?} dataInfoService
     * @param {?} notify
     * @param {?} messager
     * @param {?} loading
     * @param {?} modal
     * @param {?} localePipe
     * @param {?} vcr
     * @param {?} inj
     * @param {?} cfr
     * @param {?} cdr
     * @param {?} localeId
     */
    constructor(framework, dataInfoService, notify, messager, loading, modal, localePipe, vcr, inj, cfr, cdr, localeId) {
        this.framework = framework;
        this.dataInfoService = dataInfoService;
        this.notify = notify;
        this.messager = messager;
        this.loading = loading;
        this.modal = modal;
        this.localePipe = localePipe;
        this.vcr = vcr;
        this.inj = inj;
        this.cfr = cfr;
        this.cdr = cdr;
        this.localeId = localeId;
        this.fieldsWithValue = [];
        this.childSchemaTables = [];
        this.childDataTableMap = {};
        this.dataType = DataType;
        this.secTitle = "";
        this.localeId = localeId || this.inj.get(LOCALE_ID);
        /** @type {?} */
        const inject = ReflectiveInjector.resolveAndCreate([
            BillTrackerInternalUiService
        ], this.inj);
        this.internalUiService = inject.get(BillTrackerInternalUiService, null);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        // 设置section标题
        this.secTitle = this.localePipe.transform("basicInfo");
        // 表名解析
        this.secTitle = this.dataInfoService.getTableLabel(this.billInfo, this.schemaTable, this.localeId);
        // 获取带值的字段信息
        try {
            this.fieldsWithValue = this.dataInfoService.getBasicInfoFieldsWithValue(this.billInfo, this.schemaTable, this.dataTable);
        }
        catch (error) {
            this.fieldsWithValue = [];
            if (error == Exceptions.SCALE_FIELD_VALUE_IS_NAN) {
                this.messager.error(this.localePipe.transform("scaleFieldCantBeCastToInteger"));
            }
            throw error;
        }
        // 按order排序
        this.fieldsWithValue = this.dataInfoService.sortFieldsByOrder(this.fieldsWithValue);
        //主表数据
        /** @type {?} */
        const r = this.dataTable.GetRowList()[0];
        // 子表列表
        this.childSchemaTables = this.dataInfoService.getChildTables(this.billInfo, this.schemaTable);
        this.childDataTableMap = r.GetChildTableMap();
        if (this.billInfo.jointQueryParameters != null) {
            /** @type {?} */
            const jointQueryParameters = JSON.parse(this.billInfo.jointQueryParameters);
            this.hasLink = (this.billInfo.jointQueryMode == JointQueryMode.APP && jointQueryParameters.funcId != null)
                || (this.billInfo.jointQueryMode == JointQueryMode.URL && jointQueryParameters.url != null);
        }
        else {
            this.hasLink = false;
        }
    }
    /**
     * @return {?}
     */
    clickLink() {
        this.internalUiService.openBillDetailWithFields(this.billInfo, this.billDataInfo, this.fieldsWithValue);
        event.stopPropagation();
        return false;
    }
}
BasicInfoComponent.decorators = [
    { type: Component, args: [{
                selector: "lib-bill-tracker-main-table",
                template: "<farris-section class=\"f-section-form f-section-in-mainsubcard\" [mainTitle]=\"secTitle\">\r\n  <div class=\"f-form-layout farris-form farris-form-controls-inline\">\r\n    <ng-container *ngFor=\"let field of fieldsWithValue; let i = index\">\r\n      <div class=\"col-12 col-md-6 col-xl-3 col-el-2\" *ngIf=\"field.show\">\r\n        <!-- \u4EC5\u663E\u793Ashow\u5C5E\u6027\u4E3Atrue\u7684\u5B57\u6BB5 -->\r\n        <!-- <div class=\"farris-group-wrap\" *ngIf=\"!(hasLink && i==0); else linkTemp\"> -->\r\n        <div class=\"farris-group-wrap\">\r\n          <!-- \u975E\u5E03\u5C14\u503C\u4F7F\u7528\u6587\u672C\u6846 -->\r\n          <div class=\"form-group farris-form-group\" *ngIf=\"field.dataType!=dataType.Boolean\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\" title=\"{{field | billTrackerFieldLabel}}\">\r\n                {{field | billTrackerFieldLabel}}\r\n              </span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <div class=\"f-component-text\" *ngIf=\"field.dataType!=dataType.Boolean\">\r\n                <span class=\"f-form-control-text\" title=\"{{field.fieldValue}}\"\r\n                  [ngStyle]=\"{'text-align': field.dataType == dataType.Integer || field.dataType == dataType.Decimal ? 'right':null}\">\r\n                  {{field.fieldValue}}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- \u5E03\u5C14\u503C\u4F7F\u7528\u590D\u9009\u6846 -->\r\n          <div class=\"form-group farris-form-group\" *ngIf=\"field.dataType==dataType.Boolean\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\" title=\"{{field | billTrackerFieldLabel}}\">\r\n                {{field | billTrackerFieldLabel}}\r\n              </span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <div class=\"custom-control custom-checkbox\">\r\n                <input class=\"custom-control-input\" type=\"checkbox\" readonly [checked]=\"field.fieldValue\" />\r\n                <label class=\"custom-control-label\"></label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- \u6709\u8054\u67E5\u914D\u7F6E\u65F6\uFF0C\u9ED8\u8BA4\u53D6\u7B2C\u4E00\u4E2A\u5B57\u6BB5\u4F5C\u4E3A\u8D85\u94FE\u63A5 -->\r\n        <!-- <ng-template #linkTemp> -->\r\n        <!-- <div class=\"farris-group-wrap\"> -->\r\n        <!-- \u975E\u5E03\u5C14\u503C\u94FE\u63A5\u5728value\u4E0A -->\r\n        <!-- <div class=\"form-group farris-form-group\" *ngIf=\"field.dataType!=dataType.Boolean\">\r\n                            <label class=\"col-form-label\">\r\n                                <span class=\"farris-label-text\" title=\"{{field | billTrackerFieldLabel}}\">\r\n                                    {{field | billTrackerFieldLabel}}\r\n                                </span>\r\n                            </label>\r\n                            <div class=\"farris-input-wrap\">\r\n                                <div class=\"f-component-text\">\r\n                                    <span class=\"f-form-control-text\" title=\"{{field.fieldValue}}\">\r\n                                        <a href=\"javascript:void(0);\" (click)=\"clickLink()\">{{field.fieldValue}}</a>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n\r\n        <!-- \u5E03\u5C14\u503C\u94FE\u63A5\u5728label\u4E0A -->\r\n        <!-- <div class=\"form-group farris-form-group\" *ngIf=\"field.dataType==dataType.Boolean\">\r\n                            <label class=\"col-form-label\">\r\n                                <span class=\"farris-label-text\" title=\"{{field | billTrackerFieldLabel}}\">\r\n                                    <a href=\"javascript:void(0);\" (click)=\"clickLink()\">\r\n                                        {{field | billTrackerFieldLabel}}\r\n                                    </a>\r\n                                </span>\r\n                            </label>\r\n                            <div class=\"farris-input-wrap\">\r\n                                <div class=\"farris-input-wrap\">\r\n                                    <div class=\"custom-control custom-checkbox\">\r\n                                        <input class=\"custom-control-input\" type=\"checkbox\" readonly\r\n                                            [checked]=\"field.fieldValue\" />\r\n                                        <label class=\"custom-control-label\"></label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n        <!-- </div> -->\r\n        <!-- </ng-template> -->\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</farris-section>\r\n<lib-bill-tracker-child-info-list [childSchemaTables]=\"childSchemaTables\" [childDataTableMap]=\"childDataTableMap\"\r\n  [billInfo]=\"billInfo\">\r\n</lib-bill-tracker-child-info-list>\r\n"
            }] }
];
/** @nocollapse */
BasicInfoComponent.ctorParameters = () => [
    { type: FrameworkService },
    { type: BillTrackerDataInfoService },
    { type: NotifyService },
    { type: MessagerService },
    { type: LoadingService },
    { type: BsModalService },
    { type: BillTrackerLocalePipe },
    { type: ViewContainerRef },
    { type: Injector },
    { type: ComponentFactoryResolver },
    { type: ChangeDetectorRef },
    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [LOCALE_ID,] }] }
];
BasicInfoComponent.propDecorators = {
    schemaTable: [{ type: Input, args: ["schemaTable",] }],
    dataTable: [{ type: Input, args: ["dataTable",] }],
    billInfo: [{ type: Input, args: ["billInfo",] }],
    billDataInfo: [{ type: Input, args: ["billDataInfo",] }]
};
if (false) {
    /** @type {?} */
    BasicInfoComponent.prototype.schemaTable;
    /** @type {?} */
    BasicInfoComponent.prototype.dataTable;
    /** @type {?} */
    BasicInfoComponent.prototype.billInfo;
    /** @type {?} */
    BasicInfoComponent.prototype.billDataInfo;
    /** @type {?} */
    BasicInfoComponent.prototype.fieldsWithValue;
    /** @type {?} */
    BasicInfoComponent.prototype.childSchemaTables;
    /** @type {?} */
    BasicInfoComponent.prototype.childDataTableMap;
    /** @type {?} */
    BasicInfoComponent.prototype.hasLink;
    /** @type {?} */
    BasicInfoComponent.prototype.dataType;
    /** @type {?} */
    BasicInfoComponent.prototype.secTitle;
    /** @type {?} */
    BasicInfoComponent.prototype.internalUiService;
    /** @type {?} */
    BasicInfoComponent.prototype.framework;
    /** @type {?} */
    BasicInfoComponent.prototype.dataInfoService;
    /** @type {?} */
    BasicInfoComponent.prototype.notify;
    /** @type {?} */
    BasicInfoComponent.prototype.messager;
    /** @type {?} */
    BasicInfoComponent.prototype.loading;
    /** @type {?} */
    BasicInfoComponent.prototype.modal;
    /** @type {?} */
    BasicInfoComponent.prototype.localePipe;
    /** @type {?} */
    BasicInfoComponent.prototype.vcr;
    /** @type {?} */
    BasicInfoComponent.prototype.inj;
    /** @type {?} */
    BasicInfoComponent.prototype.cfr;
    /** @type {?} */
    BasicInfoComponent.prototype.cdr;
    /** @type {?} */
    BasicInfoComponent.prototype.localeId;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzaWMtaW5mby5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWJpZi9ydW50aW1lLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9iaWxsLXRyYWNrZXIvY29tcG9uZW50cy9iYXNpYy1pbmZvL2Jhc2ljLWluZm8uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSx3QkFBd0IsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQVUsUUFBUSxFQUFFLGtCQUFrQixFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25MLE9BQU8sRUFBMkIsYUFBYSxFQUF3RSxlQUFlLEVBQXVCLFFBQVEsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25NLE9BQU8sRUFBa0csY0FBYyxFQUFpRCxNQUFNLHFCQUFxQixDQUFDO0FBQ3BNLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQXVCLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDNUUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUU3RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUM1RSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUMzRixPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUMvRixPQUFPLEVBQUUsVUFB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QUMsVUFBVTsyQkFHaEIsS0FBSyxTQUFDLGNBQWM7Ozs7SUFUckIseUNBQ29DOztJQUVwQyx1Q0FDZ0M7O0lBRWhDLHNDQUMwQjs7SUFFMUIsMENBQ2tDOztJQUVsQyw2Q0FBK0Q7O0lBQy9ELCtDQUEwQzs7SUFDMUMsK0NBRU87O0lBQ1AscUNBQWlCOztJQUNqQixzQ0FBb0I7O0lBQ3BCLHNDQUFzQjs7SUFFdEIsK0NBQWdEOztJQUc5Qyx1Q0FBa0M7O0lBQ2xDLDZDQUFrRDs7SUFDbEQsb0NBQTRCOztJQUM1QixzQ0FBZ0M7O0lBQ2hDLHFDQUE4Qjs7SUFDOUIsbUNBQTRCOztJQUM1Qix3Q0FBd0M7O0lBQ3hDLGlDQUE0Qjs7SUFDNUIsaUNBQW9COztJQUNwQixpQ0FBb0M7O0lBQ3BDLGlDQUE2Qjs7SUFDN0Isc0NBQXNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBJbmplY3QsIEluamVjdG9yLCBJbnB1dCwgTE9DQUxFX0lELCBPbkluaXQsIE9wdGlvbmFsLCBSZWZsZWN0aXZlSW5qZWN0b3IsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBCaWxsRGF0YSwgQmlsbERhdGFGaWVsZCwgQmlsbERhdGFUYWJsZSwgQmlsbFNjaGVtYSwgQmlsbFNjaGVtYUZpZWxkLCBCaWxsU2NoZW1hRmllbGRCYXNlLCBCaWxsU2NoZW1hU3ViRmllbGQsIEJpbGxTY2hlbWFUYWJsZSwgQnBtbk1vZGVsSnNvbkhlbHBlciwgRGF0YVR5cGUgfSBmcm9tIFwiQGVkcC1haWYvY29tbW9uLWFwaVwiO1xyXG5pbXBvcnQgeyBCaWxsVHJhY2tlclNjaGVtYUZpZWxkQ29udGVudCwgQmlsbFRyYWNraW5nRGF0YVNob3duTW9kZSwgQmlsbFRyYWNraW5nU2V0dGluZ3MsIGZ1bGxQYXRoUHJlZml4LCBKb2ludFF1ZXJ5TW9kZSwgSm9pbnRRdWVyeVBhcmFtZXRlcnMsIEpvaW50UXVlcnlQYXJhbWV0ZXJUeXBlIH0gZnJvbSBcIkBlZHAtYmlmL2NvbW1vbi1hcGlcIjtcclxuaW1wb3J0IHsgTG9hZGluZ1NlcnZpY2UgfSBmcm9tIFwiQGZhcnJpcy91aS1sb2FkaW5nXCI7XHJcbmltcG9ydCB7IE1lc3NhZ2VyU2VydmljZSB9IGZyb20gXCJAZmFycmlzL3VpLW1lc3NhZ2VyXCI7XHJcbmltcG9ydCB7IEJzTW9kYWxTZXJ2aWNlIH0gZnJvbSBcIkBmYXJyaXMvdWktbW9kYWxcIjtcclxuaW1wb3J0IHsgTm90aWZ5U2VydmljZSB9IGZyb20gXCJAZmFycmlzL3VpLW5vdGlmeVwiO1xyXG5pbXBvcnQgeyBBcHBPcHRpb25zLCBBcHBUeXBlLCBGcmFtZXdvcmtTZXJ2aWNlIH0gZnJvbSBcIkBnc3Atc3lzL3J0Zi1jb21tb25cIjtcclxuaW1wb3J0IHsgQmlsbERhdGFJbmZvIH0gZnJvbSBcIi4uLy4uLy4uL2VudGl0eS90cmFja2luZy9CaWxsRGF0YUluZm9cIjtcclxuaW1wb3J0IHsgQmlsbEluZm8gfSBmcm9tIFwiLi4vLi4vLi4vZW50aXR5L3RyYWNraW5nL0JpbGxJbmZvXCI7XHJcbmltcG9ydCB7IEJpbGxUcmFja2VyQ29uc3RhbnQgfSBmcm9tIFwiLi4vLi4vY29uZmlnL2JpbGwtdHJhY2tlci1jb25zdGFudFwiO1xyXG5pbXBvcnQgeyBCaWxsVHJhY2tlckxvY2FsZVBpcGUgfSBmcm9tIFwiLi4vLi4vcGlwZS9iaWxsLXRyYWNrZXItbG9jYWxlLnBpcGVcIjtcclxuaW1wb3J0IHsgQmlsbFRyYWNrZXJEYXRhSW5mb1NlcnZpY2UgfSBmcm9tIFwiLi4vLi4vc2VydmljZXMvYmlsbC10cmFja2VyLWRhdGEtaW5mby5zZXJ2aWNlXCI7XHJcbmltcG9ydCB7IEJpbGxUcmFja2VySW50ZXJuYWxVaVNlcnZpY2UgfSBmcm9tIFwiLi4vLi4vc2VydmljZXMvYmlsbC10cmFja2VyLWludGVybmFsLXVpLnNlcnZpY2VcIjtcclxuaW1wb3J0IHsgRXhjZXB0aW9ucyB9IGZyb20gXCIuLi8uLi8uLi9lbnRpdHkvdHJhY2tpbmcvRXhjZXB0aW9uc1wiO1xyXG5cclxuZGVjbGFyZSBtb2R1bGUgJ0BlZHAtYWlmL2NvbW1vbi1hcGkvbGliL2JpbGxraXQnIHtcclxuICBleHBvcnQgaW50ZXJmYWNlIEtpdEZpZWxkIHtcclxuICAgIGZpZWxkVmFsdWU/OiBhbnk7XHJcbiAgICBjYXB0aW9uUGF0aD86IHN0cmluZztcclxuICAgIGZpZWxkUGF0aD86IHN0cmluZztcclxuICAgIGRpc3BsYXlOYW1lPzogc3RyaW5nO1xyXG4gICAgb3JkZXI/OiBudW1iZXI7XHJcbiAgICBzaG93PzogYm9vbGVhbjtcclxuICB9XHJcblxyXG4gIGV4cG9ydCBpbnRlcmZhY2UgQmlsbFNjaGVtYVRhYmxlIHtcclxuICAgIGZ1bGxQYXRoPzogc3RyaW5nO1xyXG4gICAgc2hvdz86IGJvb2xlYW47XHJcbiAgICBvcmRlcj86IG51bWJlcjtcclxuICB9XHJcbn1cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiBcImxpYi1iaWxsLXRyYWNrZXItbWFpbi10YWJsZVwiLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9iYXNpYy1pbmZvLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFtdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBCYXNpY0luZm9Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBJbnB1dChcInNjaGVtYVRhYmxlXCIpXHJcbiAgcHVibGljIHNjaGVtYVRhYmxlOiBCaWxsU2NoZW1hVGFibGU7XHJcblxyXG4gIEBJbnB1dChcImRhdGFUYWJsZVwiKVxyXG4gIHB1YmxpYyBkYXRhVGFibGU6IEJpbGxEYXRhVGFibGU7XHJcblxyXG4gIEBJbnB1dChcImJpbGxJbmZvXCIpXHJcbiAgcHVibGljIGJpbGxJbmZvOiBCaWxsSW5mbztcclxuXHJcbiAgQElucHV0KFwiYmlsbERhdGFJbmZvXCIpXHJcbiAgcHVibGljIGJpbGxEYXRhSW5mbzogQmlsbERhdGFJbmZvO1xyXG5cclxuICBmaWVsZHNXaXRoVmFsdWU6IChCaWxsU2NoZW1hRmllbGQgfCBCaWxsU2NoZW1hU3ViRmllbGQpW10gPSBbXTtcclxuICBjaGlsZFNjaGVtYVRhYmxlczogQmlsbFNjaGVtYVRhYmxlW10gPSBbXTtcclxuICBjaGlsZERhdGFUYWJsZU1hcDoge1xyXG4gICAgW2tleTogc3RyaW5nXTogQmlsbERhdGFUYWJsZTtcclxuICB9ID0ge307XHJcbiAgaGFzTGluazogYm9vbGVhbjtcclxuICBkYXRhVHlwZSA9IERhdGFUeXBlO1xyXG4gIHNlY1RpdGxlOiBzdHJpbmcgPSBcIlwiO1xyXG5cclxuICBpbnRlcm5hbFVpU2VydmljZTogQmlsbFRyYWNrZXJJbnRlcm5hbFVpU2VydmljZTtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwdWJsaWMgZnJhbWV3b3JrOiBGcmFtZXdvcmtTZXJ2aWNlLFxyXG4gICAgcHVibGljIGRhdGFJbmZvU2VydmljZTogQmlsbFRyYWNrZXJEYXRhSW5mb1NlcnZpY2UsXHJcbiAgICBwdWJsaWMgbm90aWZ5OiBOb3RpZnlTZXJ2aWNlLFxyXG4gICAgcHVibGljIG1lc3NhZ2VyOiBNZXNzYWdlclNlcnZpY2UsXHJcbiAgICBwdWJsaWMgbG9hZGluZzogTG9hZGluZ1NlcnZpY2UsXHJcbiAgICBwdWJsaWMgbW9kYWw6IEJzTW9kYWxTZXJ2aWNlLFxyXG4gICAgcHVibGljIGxvY2FsZVBpcGU6IEJpbGxUcmFja2VyTG9jYWxlUGlwZSxcclxuICAgIHB1YmxpYyB2Y3I6IFZpZXdDb250YWluZXJSZWYsXHJcbiAgICBwdWJsaWMgaW5qOiBJbmplY3RvcixcclxuICAgIHB1YmxpYyBjZnI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcixcclxuICAgIHB1YmxpYyBjZHI6IENoYW5nZURldGVjdG9yUmVmLFxyXG4gICAgQE9wdGlvbmFsKCkgQEluamVjdChMT0NBTEVfSUQpIHB1YmxpYyBsb2NhbGVJZDogc3RyaW5nLFxyXG4gICkge1xyXG4gICAgdGhpcy5sb2NhbGVJZCA9IGxvY2FsZUlkIHx8IHRoaXMuaW5qLmdldChMT0NBTEVfSUQpO1xyXG5cclxuICAgIGNvbnN0IGluamVjdCA9IFJlZmxlY3RpdmVJbmplY3Rvci5yZXNvbHZlQW5kQ3JlYXRlKFtcclxuICAgICAgQmlsbFRyYWNrZXJJbnRlcm5hbFVpU2VydmljZVxyXG4gICAgXSwgdGhpcy5pbmopO1xyXG4gICAgdGhpcy5pbnRlcm5hbFVpU2VydmljZSA9IGluamVjdC5nZXQoQmlsbFRyYWNrZXJJbnRlcm5hbFVpU2VydmljZSwgbnVsbCk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIC8vIOiuvue9rnNlY3Rpb27moIfpophcclxuICAgIHRoaXMuc2VjVGl0bGUgPSB0aGlzLmxvY2FsZVBpcGUudHJhbnNmb3JtKFwiYmFzaWNJbmZvXCIpO1xyXG4gICAgLy8g6KGo5ZCN6Kej5p6QXHJcbiAgICB0aGlzLnNlY1RpdGxlID0gdGhpcy5kYXRhSW5mb1NlcnZpY2UuZ2V0VGFibGVMYWJlbCh0aGlzLmJpbGxJbmZvLCB0aGlzLnNjaGVtYVRhYmxlLCB0aGlzLmxvY2FsZUlkKTtcclxuXHJcbiAgICAvLyDojrflj5bluKblgLznmoTlrZfmrrXkv6Hmga9cclxuICAgIHRyeSB7XHJcbiAgICAgIHRoaXMuZmllbGRzV2l0aFZhbHVlID0gdGhpcy5kYXRhSW5mb1NlcnZpY2UuZ2V0QmFzaWNJbmZvRmllbGRzV2l0aFZhbHVlKHRoaXMuYmlsbEluZm8sIHRoaXMuc2NoZW1hVGFibGUsIHRoaXMuZGF0YVRhYmxlKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRoaXMuZmllbGRzV2l0aFZhbHVlID0gW107XHJcbiAgICAgIGlmIChlcnJvciA9PSBFeGNlcHRpb25zLlNDQUxFX0ZJRUxEX1ZBTFVFX0lTX05BTikge1xyXG4gICAgICAgIHRoaXMubWVzc2FnZXIuZXJyb3IodGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybShcInNjYWxlRmllbGRDYW50QmVDYXN0VG9JbnRlZ2VyXCIpKTtcclxuICAgICAgfVxyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuXHJcbiAgICAvLyDmjIlvcmRlcuaOkuW6j1xyXG4gICAgdGhpcy5maWVsZHNXaXRoVmFsdWUgPSB0aGlzLmRhdGFJbmZvU2VydmljZS5zb3J0RmllbGRzQnlPcmRlcih0aGlzLmZpZWxkc1dpdGhWYWx1ZSk7XHJcblxyXG4gICAgLy/kuLvooajmlbDmja5cclxuICAgIGNvbnN0IHIgPSB0aGlzLmRhdGFUYWJsZS5HZXRSb3dMaXN0KClbMF07XHJcbiAgICAvLyDlrZDooajliJfooahcclxuICAgIHRoaXMuY2hpbGRTY2hlbWFUYWJsZXMgPSB0aGlzLmRhdGFJbmZvU2VydmljZS5nZXRDaGlsZFRhYmxlcyh0aGlzLmJpbGxJbmZvLCB0aGlzLnNjaGVtYVRhYmxlKTtcclxuICAgIHRoaXMuY2hpbGREYXRhVGFibGVNYXAgPSByLkdldENoaWxkVGFibGVNYXAoKTtcclxuXHJcbiAgICBpZiAodGhpcy5iaWxsSW5mby5qb2ludFF1ZXJ5UGFyYW1ldGVycyAhPSBudWxsKSB7XHJcbiAgICAgIGNvbnN0IGpvaW50UXVlcnlQYXJhbWV0ZXJzOiBKb2ludFF1ZXJ5UGFyYW1ldGVycyA9IEpTT04ucGFyc2UodGhpcy5iaWxsSW5mby5qb2ludFF1ZXJ5UGFyYW1ldGVycyk7XHJcbiAgICAgIHRoaXMuaGFzTGluayA9ICh0aGlzLmJpbGxJbmZvLmpvaW50UXVlcnlNb2RlID09IEpvaW50UXVlcnlNb2RlLkFQUCAmJiBqb2ludFF1ZXJ5UGFyYW1ldGVycy5mdW5jSWQgIT0gbnVsbClcclxuICAgICAgICB8fCAodGhpcy5iaWxsSW5mby5qb2ludFF1ZXJ5TW9kZSA9PSBKb2ludFF1ZXJ5TW9kZS5VUkwgJiYgam9pbnRRdWVyeVBhcmFtZXRlcnMudXJsICE9IG51bGwpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5oYXNMaW5rID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjbGlja0xpbmsoKSB7XHJcbiAgICB0aGlzLmludGVybmFsVWlTZXJ2aWNlLm9wZW5CaWxsRGV0YWlsV2l0aEZpZWxkcyh0aGlzLmJpbGxJbmZvLCB0aGlzLmJpbGxEYXRhSW5mbywgdGhpcy5maWVsZHNXaXRoVmFsdWUpO1xyXG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG59XHJcbiJdfQ==