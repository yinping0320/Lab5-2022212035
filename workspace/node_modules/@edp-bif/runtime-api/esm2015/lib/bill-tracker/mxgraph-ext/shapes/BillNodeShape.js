/**
 * @fileoverview added by tsickle
 * Generated from: lib/bill-tracker/mxgraph-ext/shapes/BillNodeShape.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { mxRectangle, mxRectangleShape } from '../../../ref/mxgraph';
export class BillNodeShape extends mxRectangleShape {
    /**
     * @param {?} bounds
     * @param {?} fill
     * @param {?} stroke
     * @param {?=} strokewidth
     */
    constructor(bounds, fill, stroke, strokewidth) {
        bounds = bounds ? bounds : new mxRectangle(0, 0, 0, 0);
        fill = fill ? fill : "none";
        stroke = stroke ? stroke : "#000000";
        strokewidth = strokewidth ? strokewidth : undefined;
        super(bounds, fill, stroke, strokewidth);
    }
    /**
     * @param {?} container
     * @return {?}
     */
    init(container) {
        super.init(container);
        this.fill = "none";
        this.stroke = "#000000";
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmlsbE5vZGVTaGFwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL3J1bnRpbWUtYXBpLyIsInNvdXJjZXMiOlsibGliL2JpbGwtdHJhY2tlci9teGdyYXBoLWV4dC9zaGFwZXMvQmlsbE5vZGVTaGFwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsZ0JBQWdCLEVBQWEsTUFBTSxzQkFBc0IsQ0FBQztBQUVoRixNQUFNLE9BQU8sYUFBYyxTQUFRLGdCQUFnQjs7Ozs7OztJQUMvQyxZQUFZLE1BQTZCLEVBQUUsSUFBWSxFQUFFLE1BQWMsRUFBRSxXQUFvQjtRQUN6RixNQUFNLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksV0FBVyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3ZELElBQUksR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQzVCLE1BQU0sR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1FBQ3JDLFdBQVcsR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1FBQ3BELEtBQUssQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxXQUFXLENBQUMsQ0FBQztJQUM3QyxDQUFDOzs7OztJQUVELElBQUksQ0FBQyxTQUFTO1FBQ1YsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUN0QixJQUFJLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQztRQUNuQixJQUFJLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQztJQUM1QixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBteFJlY3RhbmdsZSwgbXhSZWN0YW5nbGVTaGFwZSwgTXhHcmFwaE5TIH0gZnJvbSAnLi4vLi4vLi4vcmVmL214Z3JhcGgnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEJpbGxOb2RlU2hhcGUgZXh0ZW5kcyBteFJlY3RhbmdsZVNoYXBlIHtcclxuICAgIGNvbnN0cnVjdG9yKGJvdW5kczogTXhHcmFwaE5TLm14UmVjdGFuZ2xlLCBmaWxsOiBzdHJpbmcsIHN0cm9rZTogc3RyaW5nLCBzdHJva2V3aWR0aD86IG51bWJlcikge1xyXG4gICAgICAgIGJvdW5kcyA9IGJvdW5kcyA/IGJvdW5kcyA6IG5ldyBteFJlY3RhbmdsZSgwLCAwLCAwLCAwKTtcclxuICAgICAgICBmaWxsID0gZmlsbCA/IGZpbGwgOiBcIm5vbmVcIjtcclxuICAgICAgICBzdHJva2UgPSBzdHJva2UgPyBzdHJva2UgOiBcIiMwMDAwMDBcIjtcclxuICAgICAgICBzdHJva2V3aWR0aCA9IHN0cm9rZXdpZHRoID8gc3Ryb2tld2lkdGggOiB1bmRlZmluZWQ7XHJcbiAgICAgICAgc3VwZXIoYm91bmRzLCBmaWxsLCBzdHJva2UsIHN0cm9rZXdpZHRoKTtcclxuICAgIH1cclxuXHJcbiAgICBpbml0KGNvbnRhaW5lcikge1xyXG4gICAgICAgIHN1cGVyLmluaXQoY29udGFpbmVyKTtcclxuICAgICAgICB0aGlzLmZpbGwgPSBcIm5vbmVcIjtcclxuICAgICAgICB0aGlzLnN0cm9rZSA9IFwiIzAwMDAwMFwiO1xyXG4gICAgfVxyXG59Il19