/**
 * @fileoverview added by tsickle
 * Generated from: lib/bill-tracker/pipe/bill-tracker-field-label.pipe.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe, Inject, LOCALE_ID } from '@angular/core';
import { BillTrackerDataInfoService } from '../services/bill-tracker-data-info.service';
export class BillTrackerFieldLabelPipe {
    /**
     * @param {?} dataInfoService
     * @param {?} localeId
     */
    constructor(dataInfoService, localeId) {
        this.dataInfoService = dataInfoService;
        this.localeId = localeId;
    }
    /**
     * @param {?} f
     * @param {?=} langCode
     * @return {?}
     */
    transform(f, langCode) {
        return this.dataInfoService.getFieldLabel(f, langCode || this.localeId);
    }
}
BillTrackerFieldLabelPipe.decorators = [
    { type: Pipe, args: [{ name: 'billTrackerFieldLabel' },] }
];
/** @nocollapse */
BillTrackerFieldLabelPipe.ctorParameters = () => [
    { type: BillTrackerDataInfoService },
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }
];
if (false) {
    /** @type {?} */
    BillTrackerFieldLabelPipe.prototype.dataInfoService;
    /** @type {?} */
    BillTrackerFieldLabelPipe.prototype.localeId;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmlsbC10cmFja2VyLWZpZWxkLWxhYmVsLnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWJpZi9ydW50aW1lLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9iaWxsLXRyYWNrZXIvcGlwZS9iaWxsLXRyYWNrZXItZmllbGQtbGFiZWwucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdkUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFHeEYsTUFBTSxPQUFPLHlCQUF5Qjs7Ozs7SUFDbEMsWUFDVyxlQUEyQyxFQUN4QixRQUFnQjtRQURuQyxvQkFBZSxHQUFmLGVBQWUsQ0FBNEI7UUFDeEIsYUFBUSxHQUFSLFFBQVEsQ0FBUTtJQUU5QyxDQUFDOzs7Ozs7SUFDRCxTQUFTLENBQUMsQ0FBdUMsRUFBRSxRQUFpQjtRQUNoRSxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsYUFBYSxDQUFDLENBQUMsRUFBRSxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzVFLENBQUM7OztZQVRKLElBQUksU0FBQyxFQUFFLElBQUksRUFBRSx1QkFBdUIsRUFBRTs7OztZQUY5QiwwQkFBMEI7eUNBTTFCLE1BQU0sU0FBQyxTQUFTOzs7O0lBRGpCLG9EQUFrRDs7SUFDbEQsNkNBQTBDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSwgSW5qZWN0LCBMT0NBTEVfSUQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQmlsbFNjaGVtYUZpZWxkLCBCaWxsU2NoZW1hU3ViRmllbGQgfSBmcm9tICdAZWRwLWFpZi9jb21tb24tYXBpJztcclxuaW1wb3J0IHsgQmlsbFRyYWNrZXJEYXRhSW5mb1NlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9iaWxsLXRyYWNrZXItZGF0YS1pbmZvLnNlcnZpY2UnO1xyXG5cclxuQFBpcGUoeyBuYW1lOiAnYmlsbFRyYWNrZXJGaWVsZExhYmVsJyB9KVxyXG5leHBvcnQgY2xhc3MgQmlsbFRyYWNrZXJGaWVsZExhYmVsUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHVibGljIGRhdGFJbmZvU2VydmljZTogQmlsbFRyYWNrZXJEYXRhSW5mb1NlcnZpY2UsXHJcbiAgICAgICAgQEluamVjdChMT0NBTEVfSUQpIHB1YmxpYyBsb2NhbGVJZDogc3RyaW5nLFxyXG4gICAgKSB7XHJcbiAgICB9XHJcbiAgICB0cmFuc2Zvcm0oZjogQmlsbFNjaGVtYUZpZWxkIHwgQmlsbFNjaGVtYVN1YkZpZWxkLCBsYW5nQ29kZT86IHN0cmluZyk6IGFueSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YUluZm9TZXJ2aWNlLmdldEZpZWxkTGFiZWwoZiwgbGFuZ0NvZGUgfHwgdGhpcy5sb2NhbGVJZCk7XHJcbiAgICB9XHJcbn1cclxuIl19