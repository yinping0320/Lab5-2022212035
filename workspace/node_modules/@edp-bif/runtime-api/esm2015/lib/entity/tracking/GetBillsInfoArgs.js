/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/tracking/GetBillsInfoArgs.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { JsonConvertableImpl, BpmnModelJsonHelper } from '@edp-aif/common-api';
import { BillChildInfo } from './BillChildInfo';
export class GetBillsInfoArgs extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.billChildInfos = [];
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.documentTypeId = null;
        this.bizKind = null;
        this.bizType = null;
        this.billDataId = null;
        this.billChildInfos = [];
        this.curYear = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "documentTypeId", this.documentTypeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizKind", this.bizKind);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizType", this.bizType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "billDataId", this.billDataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "billChildInfos", this.billChildInfos);
        BpmnModelJsonHelper.SetAttributeValue(obj, "curYear", this.curYear);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.documentTypeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "documentTypeId");
        this.bizKind = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizKind");
        this.bizType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizType");
        this.billDataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "billDataId");
        this.billChildInfos = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "billChildInfos", BillChildInfo);
        this.curYear = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "curYear");
    }
}
if (false) {
    /** @type {?} */
    GetBillsInfoArgs.prototype.documentTypeId;
    /** @type {?} */
    GetBillsInfoArgs.prototype.bizKind;
    /** @type {?} */
    GetBillsInfoArgs.prototype.bizType;
    /** @type {?} */
    GetBillsInfoArgs.prototype.billDataId;
    /** @type {?} */
    GetBillsInfoArgs.prototype.billChildInfos;
    /** @type {?} */
    GetBillsInfoArgs.prototype.curYear;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2V0QmlsbHNJbmZvQXJncy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL3J1bnRpbWUtYXBpLyIsInNvdXJjZXMiOlsibGliL2VudGl0eS90cmFja2luZy9HZXRCaWxsc0luZm9BcmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLG1CQUFtQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDL0UsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRWhELE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxtQkFBbUI7SUFBekQ7O1FBS0ksbUJBQWMsR0FBb0IsRUFBRSxDQUFDO0lBcUN6QyxDQUFDOzs7OztJQWxDYSxtQkFBbUI7UUFDekIsS0FBSyxDQUFDLG1CQUFtQixFQUFFLENBQUM7UUFFNUIsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7UUFDM0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDcEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7UUFDdkIsSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUM7UUFDekIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7SUFDeEIsQ0FBQzs7OztJQUVNLG1CQUFtQjs7WUFDbEIsR0FBRyxHQUFHLEtBQUssQ0FBQyxtQkFBbUIsRUFBRTtRQUVyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ2xGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3BFLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3BFLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxZQUFZLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzFFLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDbEYsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFcEUsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVNLGtCQUFrQixDQUFDLEdBQU87UUFDN0IsS0FBSyxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxjQUFjLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFDM0YsSUFBSSxDQUFDLE9BQU8sR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDN0UsSUFBSSxDQUFDLE9BQU8sR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDN0UsSUFBSSxDQUFDLFVBQVUsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFDbkYsSUFBSSxDQUFDLGNBQWMsR0FBRyxtQkFBbUIsQ0FBQyx1QkFBdUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsYUFBYSxDQUFDLENBQUM7UUFDeEcsSUFBSSxDQUFDLE9BQU8sR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDakYsQ0FBQztDQUNKOzs7SUF6Q0csMENBQXVCOztJQUN2QixtQ0FBZ0I7O0lBQ2hCLG1DQUFnQjs7SUFDaEIsc0NBQW1COztJQUNuQiwwQ0FBcUM7O0lBQ3JDLG1DQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEpzb25Db252ZXJ0YWJsZUltcGwsIEJwbW5Nb2RlbEpzb25IZWxwZXIgfSBmcm9tICdAZWRwLWFpZi9jb21tb24tYXBpJztcclxuaW1wb3J0IHsgQmlsbENoaWxkSW5mbyB9IGZyb20gJy4vQmlsbENoaWxkSW5mbyc7XHJcblxyXG5leHBvcnQgY2xhc3MgR2V0QmlsbHNJbmZvQXJncyBleHRlbmRzIEpzb25Db252ZXJ0YWJsZUltcGwge1xyXG4gICAgZG9jdW1lbnRUeXBlSWQ6IHN0cmluZztcclxuICAgIGJpektpbmQ6IHN0cmluZztcclxuICAgIGJpelR5cGU6IHN0cmluZztcclxuICAgIGJpbGxEYXRhSWQ6IHN0cmluZztcclxuICAgIGJpbGxDaGlsZEluZm9zOiBCaWxsQ2hpbGRJbmZvW10gPSBbXTtcclxuICAgIGN1clllYXI6IHN0cmluZztcclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcblxyXG4gICAgICAgIHRoaXMuZG9jdW1lbnRUeXBlSWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuYml6S2luZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5iaXpUeXBlID0gbnVsbDtcclxuICAgICAgICB0aGlzLmJpbGxEYXRhSWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuYmlsbENoaWxkSW5mb3MgPSBbXTtcclxuICAgICAgICB0aGlzLmN1clllYXIgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IHt9IHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJkb2N1bWVudFR5cGVJZFwiLCB0aGlzLmRvY3VtZW50VHlwZUlkKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJiaXpLaW5kXCIsIHRoaXMuYml6S2luZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiYml6VHlwZVwiLCB0aGlzLmJpelR5cGUpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImJpbGxEYXRhSWRcIiwgdGhpcy5iaWxsRGF0YUlkKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJiaWxsQ2hpbGRJbmZvc1wiLCB0aGlzLmJpbGxDaGlsZEluZm9zKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJjdXJZZWFyXCIsIHRoaXMuY3VyWWVhcik7XHJcblxyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IHt9KTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMuZG9jdW1lbnRUeXBlSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImRvY3VtZW50VHlwZUlkXCIpO1xyXG4gICAgICAgIHRoaXMuYml6S2luZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiYml6S2luZFwiKTtcclxuICAgICAgICB0aGlzLmJpelR5cGUgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImJpelR5cGVcIik7XHJcbiAgICAgICAgdGhpcy5iaWxsRGF0YUlkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJiaWxsRGF0YUlkXCIpO1xyXG4gICAgICAgIHRoaXMuYmlsbENoaWxkSW5mb3MgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNMaXN0KG9iaiwgXCJiaWxsQ2hpbGRJbmZvc1wiLCBCaWxsQ2hpbGRJbmZvKTtcclxuICAgICAgICB0aGlzLmN1clllYXIgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImN1clllYXJcIik7XHJcbiAgICB9XHJcbn0iXX0=