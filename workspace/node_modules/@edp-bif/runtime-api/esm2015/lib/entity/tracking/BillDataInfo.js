/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/tracking/BillDataInfo.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { JsonConvertableImpl, BpmnModelJsonHelper } from '@edp-aif/common-api';
import { BillChildInfo } from './BillChildInfo';
import { TrackingMappingAssociation } from './TrackingMappingAssociation';
export class BillDataInfo extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.billChildInfos = [];
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.dataId = null;
        this.caption = null;
        this.summary = null;
        this.canContinueTracking = false;
        this.trackingMappingAssociations = null;
        this.billChildInfos = [];
        this.curYear = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "dataId", this.dataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "caption", this.caption);
        BpmnModelJsonHelper.SetAttributeValue(obj, "summary", this.summary);
        BpmnModelJsonHelper.SetAttributeValue(obj, "canContinueTracking", this.canContinueTracking);
        BpmnModelJsonHelper.SetAttributeValue(obj, "trackingMappingAssociations", this.trackingMappingAssociations);
        BpmnModelJsonHelper.SetAttributeValue(obj, "billChildInfos", this.billChildInfos);
        BpmnModelJsonHelper.SetAttributeValue(obj, "curYear", this.curYear);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.dataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "dataId");
        this.caption = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "caption");
        this.summary = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "summary");
        this.canContinueTracking = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "canContinueTracking");
        this.trackingMappingAssociations = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "trackingMappingAssociations", TrackingMappingAssociation);
        this.billChildInfos = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "billChildInfos", BillChildInfo);
        this.curYear = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "curYear");
    }
}
if (false) {
    /** @type {?} */
    BillDataInfo.prototype.dataId;
    /** @type {?} */
    BillDataInfo.prototype.caption;
    /** @type {?} */
    BillDataInfo.prototype.summary;
    /** @type {?} */
    BillDataInfo.prototype.canContinueTracking;
    /** @type {?} */
    BillDataInfo.prototype.trackingMappingAssociations;
    /** @type {?} */
    BillDataInfo.prototype.billChildInfos;
    /** @type {?} */
    BillDataInfo.prototype.curYear;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmlsbERhdGFJbmZvLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1iaWYvcnVudGltZS1hcGkvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L3RyYWNraW5nL0JpbGxEYXRhSW5mby50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQy9FLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNoRCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUUxRSxNQUFNLE9BQU8sWUFBYSxTQUFRLG1CQUFtQjtJQUFyRDs7UUFNSSxtQkFBYyxHQUF5QixFQUFFLENBQUM7SUF3QzlDLENBQUM7Ozs7O0lBckNhLG1CQUFtQjtRQUN6QixLQUFLLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUNuQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUNwQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUNwQixJQUFJLENBQUMsbUJBQW1CLEdBQUcsS0FBSyxDQUFDO1FBQ2pDLElBQUksQ0FBQywyQkFBMkIsR0FBRyxJQUFJLENBQUM7UUFDeEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUM7UUFDekIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7SUFDeEIsQ0FBQzs7OztJQUVNLG1CQUFtQjs7WUFDbEIsR0FBRyxHQUFPLEtBQUssQ0FBQyxtQkFBbUIsRUFBRTtRQUV6QyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNsRSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNwRSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNwRSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUscUJBQXFCLEVBQUUsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDNUYsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLDZCQUE2QixFQUFFLElBQUksQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO1FBQzVHLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDbEYsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFcEUsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVNLGtCQUFrQixDQUFDLEdBQU87UUFDN0IsS0FBSyxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxNQUFNLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQzNFLElBQUksQ0FBQyxPQUFPLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQzdFLElBQUksQ0FBQyxPQUFPLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQzdFLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxtQkFBbUIsQ0FBQywwQkFBMEIsQ0FBQyxHQUFHLEVBQUUscUJBQXFCLENBQUMsQ0FBQztRQUN0RyxJQUFJLENBQUMsMkJBQTJCLEdBQUcsbUJBQW1CLENBQUMsdUJBQXVCLENBQUMsR0FBRyxFQUFFLDZCQUE2QixFQUFFLDBCQUEwQixDQUFDLENBQUM7UUFDL0ksSUFBSSxDQUFDLGNBQWMsR0FBRyxtQkFBbUIsQ0FBQyx1QkFBdUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsYUFBYSxDQUFDLENBQUM7UUFDeEcsSUFBSSxDQUFDLE9BQU8sR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDakYsQ0FBQztDQUNKOzs7SUE3Q0csOEJBQWU7O0lBQ2YsK0JBQWdCOztJQUNoQiwrQkFBZ0I7O0lBQ2hCLDJDQUE2Qjs7SUFDN0IsbURBQStEOztJQUMvRCxzQ0FBMEM7O0lBQzFDLCtCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEpzb25Db252ZXJ0YWJsZUltcGwsIEJwbW5Nb2RlbEpzb25IZWxwZXIgfSBmcm9tICdAZWRwLWFpZi9jb21tb24tYXBpJztcclxuaW1wb3J0IHsgQmlsbENoaWxkSW5mbyB9IGZyb20gJy4vQmlsbENoaWxkSW5mbyc7XHJcbmltcG9ydCB7IFRyYWNraW5nTWFwcGluZ0Fzc29jaWF0aW9uIH0gZnJvbSAnLi9UcmFja2luZ01hcHBpbmdBc3NvY2lhdGlvbic7XHJcblxyXG5leHBvcnQgY2xhc3MgQmlsbERhdGFJbmZvIGV4dGVuZHMgSnNvbkNvbnZlcnRhYmxlSW1wbCB7XHJcbiAgICBkYXRhSWQ6IHN0cmluZztcclxuICAgIGNhcHRpb246IHN0cmluZztcclxuICAgIHN1bW1hcnk6IHN0cmluZztcclxuICAgIGNhbkNvbnRpbnVlVHJhY2tpbmc6IGJvb2xlYW47XHJcbiAgICB0cmFja2luZ01hcHBpbmdBc3NvY2lhdGlvbnM6IEFycmF5PFRyYWNraW5nTWFwcGluZ0Fzc29jaWF0aW9uPjtcclxuICAgIGJpbGxDaGlsZEluZm9zOiBBcnJheTxCaWxsQ2hpbGRJbmZvPiA9IFtdO1xyXG4gICAgY3VyWWVhcjogc3RyaW5nO1xyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICAgICAgdGhpcy5kYXRhSWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuY2FwdGlvbiA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5zdW1tYXJ5ID0gbnVsbDtcclxuICAgICAgICB0aGlzLmNhbkNvbnRpbnVlVHJhY2tpbmcgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnRyYWNraW5nTWFwcGluZ0Fzc29jaWF0aW9ucyA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5iaWxsQ2hpbGRJbmZvcyA9IFtdO1xyXG4gICAgICAgIHRoaXMuY3VyWWVhciA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENvbnZlcnRUb0pzb25PYmplY3QoKToge30ge1xyXG4gICAgICAgIGxldCBvYmo6IHt9ID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJkYXRhSWRcIiwgdGhpcy5kYXRhSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImNhcHRpb25cIiwgdGhpcy5jYXB0aW9uKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJzdW1tYXJ5XCIsIHRoaXMuc3VtbWFyeSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiY2FuQ29udGludWVUcmFja2luZ1wiLCB0aGlzLmNhbkNvbnRpbnVlVHJhY2tpbmcpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInRyYWNraW5nTWFwcGluZ0Fzc29jaWF0aW9uc1wiLCB0aGlzLnRyYWNraW5nTWFwcGluZ0Fzc29jaWF0aW9ucyk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiYmlsbENoaWxkSW5mb3NcIiwgdGhpcy5iaWxsQ2hpbGRJbmZvcyk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiY3VyWWVhclwiLCB0aGlzLmN1clllYXIpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLmRhdGFJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiZGF0YUlkXCIpO1xyXG4gICAgICAgIHRoaXMuY2FwdGlvbiA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiY2FwdGlvblwiKTtcclxuICAgICAgICB0aGlzLnN1bW1hcnkgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInN1bW1hcnlcIik7XHJcbiAgICAgICAgdGhpcy5jYW5Db250aW51ZVRyYWNraW5nID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzQm9vbGVhbihvYmosIFwiY2FuQ29udGludWVUcmFja2luZ1wiKTtcclxuICAgICAgICB0aGlzLnRyYWNraW5nTWFwcGluZ0Fzc29jaWF0aW9ucyA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc0xpc3Qob2JqLCBcInRyYWNraW5nTWFwcGluZ0Fzc29jaWF0aW9uc1wiLCBUcmFja2luZ01hcHBpbmdBc3NvY2lhdGlvbik7XHJcbiAgICAgICAgdGhpcy5iaWxsQ2hpbGRJbmZvcyA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc0xpc3Qob2JqLCBcImJpbGxDaGlsZEluZm9zXCIsIEJpbGxDaGlsZEluZm8pO1xyXG4gICAgICAgIHRoaXMuY3VyWWVhciA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiY3VyWWVhclwiKTtcclxuICAgIH1cclxufSJdfQ==