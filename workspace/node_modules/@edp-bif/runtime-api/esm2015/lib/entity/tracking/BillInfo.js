/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/tracking/BillInfo.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { JsonConvertableImpl, BpmnModelJsonHelper } from '@edp-aif/common-api';
import { JointQueryMode } from '@edp-bif/common-api';
import { BillDataInfo } from './BillDataInfo';
export class BillInfo extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.billDataInfos = [];
        this.jointQueryMode = JointQueryMode.DEFAULT;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.billTrackingSettings = null;
        this.schemaId = null;
        this.suCode = null;
        this.documentTypeId = null;
        this.bizKind = null;
        this.bizType = null;
        this.billDataInfos = [];
        this.jointQueryMode = JointQueryMode.DEFAULT;
        this.jointQueryParameters = null;
        this.trackingSourceType = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "billTrackingSettings", this.billTrackingSettings);
        BpmnModelJsonHelper.SetAttributeValue(obj, "schemaId", this.schemaId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "suCode", this.suCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "documentTypeId", this.documentTypeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizKind", this.bizKind);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizType", this.bizType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "billDataInfos", this.billDataInfos);
        BpmnModelJsonHelper.SetAttributeValue(obj, "jointQueryMode", this.jointQueryMode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "jointQueryParameters", this.jointQueryParameters);
        BpmnModelJsonHelper.SetAttributeValue(obj, "trackingSourceType", this.trackingSourceType);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.billTrackingSettings = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "billTrackingSettings");
        this.schemaId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "schemaId");
        this.suCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "suCode");
        this.documentTypeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "documentTypeId");
        this.bizKind = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizKind");
        this.bizType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizType");
        this.billDataInfos = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "billDataInfos", BillDataInfo);
        this.jointQueryMode = JointQueryMode[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "jointQueryMode")];
        this.jointQueryParameters = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "jointQueryParameters");
        this.trackingSourceType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "trackingSourceType");
    }
}
if (false) {
    /** @type {?} */
    BillInfo.prototype.billTrackingSettings;
    /** @type {?} */
    BillInfo.prototype.schemaId;
    /** @type {?} */
    BillInfo.prototype.suCode;
    /** @type {?} */
    BillInfo.prototype.documentTypeId;
    /** @type {?} */
    BillInfo.prototype.bizKind;
    /** @type {?} */
    BillInfo.prototype.bizType;
    /** @type {?} */
    BillInfo.prototype.billDataInfos;
    /** @type {?} */
    BillInfo.prototype.jointQueryMode;
    /** @type {?} */
    BillInfo.prototype.jointQueryParameters;
    /** @type {?} */
    BillInfo.prototype.trackingSourceType;
}
//# sourceMappingURL=data:application/json;base64,