import { Observable } from 'rxjs';
import { MessagerService } from "@farris/ui-messager";
import { Entity, BindingData, ViewModel, FrameContext } from "@farris/devkit";
import { IRtSlimBillCreationProcessEntityEx, FormSettings } from "@edp-bif/common-api";
import { FormBillCreationProcessExecutorResult } from '@edp-aif/runtime-api';
import { BifDataService } from '../bif-manual-creation/service/bif-data.service';
import { FormCreateResult, FormUpdateResult } from '../ref';
import { GeneralTextIdWithDataId } from '../entity/form-rest/GeneralTextIdWithDataId';
import { ManualCreationMode } from '../entity/form-rest/ManualCreationMode';
import { LocalePipe } from '../bif-manual-creation/pipe/locale.pipe';
/**
 * 手工生单数据服务类
 */
export declare class BifManualCreationDataWebCmpService {
    dataService: BifDataService;
    bindingData: BindingData;
    messagerService: MessagerService;
    viewModel: ViewModel;
    frameContext: FrameContext;
    localePipe: LocalePipe;
    constructor(dataService: BifDataService, bindingData: BindingData, messagerService: MessagerService, viewModel: ViewModel, frameContext: FrameContext);
    /**
     * 根据生单流程Id查找指定的生单流程
     * @param processId 单据流生单流程 Id
     * @returns creationProcess 生单流程 @type { Observable<IRtSlimBillCreationProcessEntityEx> }
     */
    getSlimBillCreationProcessEntityExById(processId: string): Observable<IRtSlimBillCreationProcessEntityEx>;
    /**
     * 查询表单配置
     * @param formSettingsId 表单配置Id
     * @returns formSettings 表单配置 @type { Observable<FormSettings> }
     */
    getFormSettingsById(formSettingsId: string): Observable<FormSettings>;
    /**
     * 执行生单流程
     * @param entities 参与生单的上游单据ID列表或实体列表
     * @param creationProcessId 单据流生单流程 Id
     * @param creationRuleId 生单规则Id（生单流程实体中记录）
     * @returns creationResult 生单结果 @type { Observable<FormBillCreationProcessExecutorResult> }
     */
    executeBillCreationProcess(entities: Entity[], creationProcessId: string, creationRuleId: string, targetDataIds: string[], manualCreationMode: ManualCreationMode): Observable<FormBillCreationProcessExecutorResult>;
    /**
     * 创建实体数据（RetrieveDefault至缓存）
     * @param formVoId 表单绑定VO Id
     * @param res 生单流程执行结果
     * @returns formCreateResult 创建实体数据返回结果 @type { Observable<FormCreateResult> }
     */
    createEntityDatas(formVoId: string, res: FormBillCreationProcessExecutorResult): Observable<FormCreateResult>;
    /**
     * 更新实体数据
     * @param res 生单流程执行结果
     * @returns formUpdateResult 更新实体数据返回结果 @type { Observable<FormUpdateResult> }
     */
    updateEntityDatas(res: FormBillCreationProcessExecutorResult): Observable<FormUpdateResult>;
    /**
     * 推送任务中心
     * @param res 生单流程执行结果
     * @returns formUpdateResult 更新实体数据返回结果 @type { Observable<FormUpdateResult> }
     */
    pushTaskCenter(res: FormBillCreationProcessExecutorResult): Observable<any>;
    /**
     * 查询生单结果
     * @param creationResultId 生单结果id
     */
    getCreationResultById(creationResultId: string): Observable<FormBillCreationProcessExecutorResult>;
    /**
     * 暂存生单结果
     */
    addFormBillCreationProcessExecutorResult(creationResult: FormBillCreationProcessExecutorResult): Observable<GeneralTextIdWithDataId[]>;
    /**
     * 获取VO序列化数据
     */
    /**
     * 获取VO序列化数据
     * @param args
     * @returns
     */
    getEntityDatas(dataId: string, voId: string, suCode: string): Observable<string>;
}
