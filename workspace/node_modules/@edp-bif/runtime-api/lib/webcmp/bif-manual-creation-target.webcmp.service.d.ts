import { MessagerService } from '@farris/ui-messager';
import { ModalOptions } from '@farris/ui-modal';
import { BindingData, Entity, ViewModel, FrameContext } from '@farris/devkit';
import { StateMachineService, CardDataService } from '@farris/command-services';
import { FormSettings } from '@edp-aif/common-api';
import { IRtSlimBillCreationProcessEntityEx } from "@edp-bif/common-api";
import { BifTargetUiService } from '../bif-manual-creation/service/bif-target-ui.service';
import { BifDataService } from '../bif-manual-creation/service/bif-data.service';
import { FormBillCreationProcessExecutorResult } from '@edp-aif/runtime-api';
import { Observable } from 'rxjs';
import { LocalePipe } from '../bif-manual-creation/pipe/locale.pipe';
/**
 * 手工生单目标端服务类
 */
export declare class BifManualCreationTargetWebCmpService {
    dataService: BifDataService;
    targetUiService: BifTargetUiService;
    stateMachineService: StateMachineService;
    bindingData: BindingData;
    messagerService: MessagerService;
    cardDataService: CardDataService;
    viewModel: ViewModel;
    frameContext: FrameContext;
    localePipe: LocalePipe;
    constructor(dataService: BifDataService, targetUiService: BifTargetUiService, stateMachineService: StateMachineService, bindingData: BindingData, messagerService: MessagerService, cardDataService: CardDataService, viewModel: ViewModel, frameContext: FrameContext);
    /**
     * 加载单据流生单流程执行后数据
     * @param formVoId 表单绑定视图对象 Id
     */
    bifLoad(formVoId: string): void;
    /**
     * 参照，根据目标VO Id打开生单流程选择器并执行选中的生单流程
     *
     * @param targetVoId 单据流目标视图对象 Id
     * @param targetDataIds 目标单据主表Id列表
     * @param bizFlowchartId 业务场景图Id
     * @param modalOptions1 生单流程选择器模态框配置
     * @param customSelectorModuleUrl 生单流程选择器自定义选择器url
     * @param modalOptions2 来源单据选择器模态框配置
     * @param extParams1 打开生单流程选择器弹窗扩展参数
     * @param extParams2 打开来源单据选择器扩展参数
     */
    referByTargetVoId(targetVoId: string, targetDataIds?: string[], bizFlowchartId?: string, modalOptions1?: ModalOptions, customSelectorModuleUrl?: string, modalOptions2?: ModalOptions, extParams1?: {}, extParams2?: {
        [key: string]: any;
        bootstrapComponentSelector?: string;
    }): void;
    /**
     * 特定参照，根据来源VO Id和目标VO Id打开生单流程选择器并执行选中的生单流程
     *
     * @param sourceVoId 单据流来源视图对象 Id
     * @param targetVoId 单据流目标视图对象 Id
     * @param targetDataIds 目标单据主表Id列表
     * @param bizFlowchartId 业务场景图Id
     * @param modalOptions1 生单流程选择器模态框配置
     * @param customSelectorModuleUrl 生单流程选择器自定义选择器url
     * @param modalOptions2 来源单据选择器模态框配置
     * @param extParams1 打开生单流程选择器弹窗扩展参数
     * @param extParams2 打开来源单据选择器扩展参数
     */
    referBySourceVoIdAndTargetVoId(sourceVoId: string, targetVoId: string, targetDataIds?: string[], bizFlowchartId?: string, modalOptions1?: ModalOptions, customSelectorModuleUrl?: string, modalOptions2?: ModalOptions, extParams1?: {}, extParams2?: {
        [key: string]: any;
        bootstrapComponentSelector?: string;
    }): void;
    /**
     * 特定参照，根据生单流程ID执行选中的生单流程
     *
     * @param processId 单据流生单流程 Id
     * @param targetDataIds 目标单据主表Id列表
     * @param modalOptions 来源单据选择器模态框配置
     * @param extParams 打开来源单据选择器扩展参数
     */
    referByCreationProcessId(processId: string, targetDataIds?: string[], modalOptions?: ModalOptions, extParams?: {
        [key: string]: any;
        bootstrapComponentSelector?: string;
    }): void;
    /**
     * @Deprecated 已弃用，请使用 {@link getCreationResult }
     * 获取来源界面传入的生单流程执行结果
     * @returns creationResult 生单流程执行结果 @type { FormBillCreationProcessExecutorResult }
     */
    getFormBillCreationProcessExecutorResult(): FormBillCreationProcessExecutorResult;
    /**
     * 根据目标VO Id打开生单流程选择器查找生单流程
     * @param targetVoId 目标VO Id
     * @param bizFlowchartId 业务场景图Id
     * @param modalOptions 模态框配置
     * @param customSelectorModuleUrl 自定义选择器Url
     * @param extParams 扩展参数
     * @returns creationProcess 生单流程 @type { Observable<IRtSlimBillCreationProcessEntityEx> }
     */
    openBillCreationProcessSelector4Pull(targetVoId: string, bizFlowchartId?: string, modalOptions?: ModalOptions, customSelectorModuleUrl?: string, extParams?: {}): Observable<IRtSlimBillCreationProcessEntityEx>;
    /**
     * 根据来源VO Id和目标VO Id打开生单流程选择器查找生单流程
     * @param sourceVoId 来源VO Id
     * @param targetVoId 目标VO Id
     * @param bizFlowchartId 业务场景图Id
     * @param modalOptions 模态框配置
     * @param customSelectorModuleUrl 自定义选择器Url
     * @param extParams 扩展参数
     * @returns creationProcess 生单流程 @type { Observable<IRtSlimBillCreationProcessEntityEx> }
     */
    openBillCreationProcessSelector4SpecificPull(sourceVoId: string, targetVoId: string, bizFlowchartId?: string, modalOptions?: ModalOptions, customSelectorModuleUrl?: string, extParams?: {}): Observable<IRtSlimBillCreationProcessEntityEx>;
    /**
     * 打开来源单据选择器选择数据
     * @param formSettings 表单配置
     * @param modalOptions 模态框配置
     * @param extParams 扩展参数
     * @returns entities 数据列表 @type { Observable<Entity[]> }
     */
    openSourceDataSelector4Pull(formSettings: FormSettings, modalOptions?: ModalOptions, extParams?: {
        bootstrapComponentSelector?: string;
        loadCommand?: string;
        loadParams?: any;
        [key: string]: any;
    }): Observable<Entity[]>;
    /**
     * 获取传到根组件UIState上的生单规则执行器结果
     * @returns creationResult 生单流程执行结果 @type { FormBillCreationProcessExecutorResult }
     */
    getCreationResult(): Observable<FormBillCreationProcessExecutorResult>;
}
