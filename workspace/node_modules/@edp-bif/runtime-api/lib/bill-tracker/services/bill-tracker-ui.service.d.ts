import { Injector, ComponentFactoryResolver } from '@angular/core';
import { BsModalService, ModalOptions } from '@farris/ui-modal';
import { BillTrackerDataService } from './bill-tracker-data.service';
import { BillTrackerComponent } from '../components/bill-tracker/bill-tracker.component';
import { BillTrackerArgs } from '../config/bill-tracker-args';
import { GetBillsInfoArgs } from '../../entity/tracking/GetBillsInfoArgs';
import { GetDownBillsInfoArgs } from '../../entity/tracking/GetDownBillsInfoArgs';
import { BillTrackerLocalePipe } from '../pipe/bill-tracker-locale.pipe';
import { Observable } from 'rxjs';
import { MessagerService } from '@farris/ui-messager';
import { CanTrackingResult } from '../args/CanTrackingResult';
import { LoadingService } from '@farris/ui-loading';
import { FrameworkService } from '@gsp-sys/rtf-common';
import { IBillTrackerUiService } from '../base/IBillTrackerUiService';
import { BillTrackerGraphOptions } from '../config/bill-tracker-graph-options';
import { BillTrackerGridOptions } from '../config/bill-tracker-grid-options';
import { GetMainEntityDataArgs } from '../args/GetMainEntityDataArgs';
import { EntityDataResult } from '../args/EntityDataResult';
import { GetUpBillsInfoArgs } from '../../entity/tracking/GetUpBillsInfoArgs';
import { UpBillInfoResult } from '../args/UpBillInfoResult';
import { DownBillInfoResult } from '../args/DownBillInfoResult';
export declare class BillTrackerUiService implements IBillTrackerUiService {
    frameworkService: FrameworkService;
    messager: MessagerService;
    loading: LoadingService;
    dataService: BillTrackerDataService;
    modalService: BsModalService;
    cfr: ComponentFactoryResolver;
    injector: Injector;
    /**
     * 内置模态框配置
     */
    readonly defaultModalOptions: ModalOptions;
    localePipe: BillTrackerLocalePipe;
    constructor(frameworkService: FrameworkService, messager: MessagerService, loading: LoadingService, localeId: string, dataService: BillTrackerDataService, modalService: BsModalService, cfr: ComponentFactoryResolver, injector: Injector);
    /**
     * 打开单据追踪弹窗
     * todo: spa模式下，弹窗在body中，位于最上层，打开联查时会盖住新tab页，此问题待解决
     * @param args 单据追踪参数
     * @param maximized 是否最大化弹窗
     * @param modalOptions 弹窗配置
     * @param graphOptions 追踪图配置
     * @param gridOptions 数据表配置
     */
    openDefaultBillTrackerDialog(args: GetBillsInfoArgs, maximized?: boolean, modalOptions?: ModalOptions, graphOptions?: BillTrackerGraphOptions, gridOptions?: BillTrackerGridOptions): Observable<BillTrackerComponent>;
    /**
     * 打开单据追踪应用
     * @param args 单据追踪参数
     * @param graphOptions 追踪图配置
     * @param gridOptions 数据表配置
     */
    openDefaultBillTrackerApp(args: GetBillsInfoArgs, graphOptions?: BillTrackerGraphOptions, gridOptions?: BillTrackerGridOptions): void;
    /**
     * 创建单据追踪组件
     * @param billTrackerArgs 单据追踪参数
     * @param cfr ComponentFactoryResolver
     * @param injector Injector
     * @param custProviders 自定义Provider
     * @returns
     */
    createBillTrackerComponent(billTrackerArgs: BillTrackerArgs, cfr?: ComponentFactoryResolver, injector?: Injector, custProviders?: any[]): import("@angular/core").ComponentRef<BillTrackerComponent>;
    /**
     * 能否继续追踪
     * @param args
     * @returns
     */
    canTracking(args: GetDownBillsInfoArgs): Observable<CanTrackingResult>;
    /**
     * 获取下游单据信息
     * @param args
     * @returns
     */
    getDownBillsInfo(args: GetDownBillsInfoArgs): Observable<DownBillInfoResult[]>;
    /**
     * 获取上游单据信息
     * @param args
     * @returns
     */
    getUpBillsInfo(args: GetUpBillsInfoArgs): Observable<UpBillInfoResult[]>;
    /**
     * 查询实体数据
     * @param args
     * @returns
     */
    getEntityData(args: GetMainEntityDataArgs): Observable<EntityDataResult>;
    private buildQueryMap;
}
