/**
 * @fileoverview added by tsickle
 * Generated from: lib/content/impl/RtBillCreationProcessContent.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper } from '../../ref';
import { AbstractRtBillProcessContent } from './AbstractRtBillProcessContent';
import { RtBillCreationProcessEntity } from '../../entity/impl/RtBillCreationProcessEntity';
/**
 * 单据生单流内容类。
 */
var /**
 * 单据生单流内容类。
 */
RtBillCreationProcessContent = /** @class */ (function (_super) {
    tslib_1.__extends(RtBillCreationProcessContent, _super);
    function RtBillCreationProcessContent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @protected
     * @return {?}
     */
    RtBillCreationProcessContent.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.formSettings = null;
        this.upBillTrackingSettings = null;
        this.downBillTrackingSettings = null;
        this.reverseWriteRuleContent = null;
        this.taskCenterConfig4Push = null;
        this.taskCenterConfig4Pull = null;
    };
    /**
     * @return {?}
     */
    RtBillCreationProcessContent.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "formSettings", this.formSettings);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillTrackingSettings", this.upBillTrackingSettings);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillTrackingSettings", this.downBillTrackingSettings);
        BpmnModelJsonHelper.SetAttributeValue(obj, "reverseWriteRuleContent", this.reverseWriteRuleContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "taskCenterConfig4Push", this.taskCenterConfig4Push);
        BpmnModelJsonHelper.SetAttributeValue(obj, "taskCenterConfig4Pull", this.taskCenterConfig4Pull);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    RtBillCreationProcessContent.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.formSettings = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "formSettings");
        this.upBillTrackingSettings = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillTrackingSettings");
        this.downBillTrackingSettings = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillTrackingSettings");
        this.reverseWriteRuleContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "reverseWriteRuleContent");
        this.taskCenterConfig4Push = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "taskCenterConfig4Push");
        this.taskCenterConfig4Pull = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "taskCenterConfig4Pull");
    };
    /**
     * @protected
     * @return {?}
     */
    RtBillCreationProcessContent.prototype.getEntityClass = /**
     * @protected
     * @return {?}
     */
    function () {
        return RtBillCreationProcessEntity;
    };
    return RtBillCreationProcessContent;
}(AbstractRtBillProcessContent));
/**
 * 单据生单流内容类。
 */
export { RtBillCreationProcessContent };
if (false) {
    /** @type {?} */
    RtBillCreationProcessContent.prototype.formSettings;
    /** @type {?} */
    RtBillCreationProcessContent.prototype.upBillTrackingSettings;
    /** @type {?} */
    RtBillCreationProcessContent.prototype.downBillTrackingSettings;
    /** @type {?} */
    RtBillCreationProcessContent.prototype.reverseWriteRuleContent;
    /** @type {?} */
    RtBillCreationProcessContent.prototype.taskCenterConfig4Push;
    /** @type {?} */
    RtBillCreationProcessContent.prototype.taskCenterConfig4Pull;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUnRCaWxsQ3JlYXRpb25Qcm9jZXNzQ29udGVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL2NvbW1vbi1hcGkvIiwic291cmNlcyI6WyJsaWIvY29udGVudC9pbXBsL1J0QmlsbENyZWF0aW9uUHJvY2Vzc0NvbnRlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2hELE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzlFLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLCtDQUErQyxDQUFDOzs7O0FBTzVGOzs7O0lBQWtELHdEQUEwRDtJQUE1Rzs7SUE4Q0EsQ0FBQzs7Ozs7SUF0Q2EsMERBQW1COzs7O0lBQTdCO1FBQ0ksaUJBQU0sbUJBQW1CLFdBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztRQUN6QixJQUFJLENBQUMsc0JBQXNCLEdBQUcsSUFBSSxDQUFDO1FBQ25DLElBQUksQ0FBQyx3QkFBd0IsR0FBRyxJQUFJLENBQUM7UUFDckMsSUFBSSxDQUFDLHVCQUF1QixHQUFHLElBQUksQ0FBQztRQUNwQyxJQUFJLENBQUMscUJBQXFCLEdBQUcsSUFBSSxDQUFDO1FBQ2xDLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxJQUFJLENBQUM7SUFDdEMsQ0FBQzs7OztJQUVNLDBEQUFtQjs7O0lBQTFCOztZQUNRLEdBQUcsR0FBRyxpQkFBTSxtQkFBbUIsV0FBRTtRQUVyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsY0FBYyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM5RSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsd0JBQXdCLEVBQUUsSUFBSSxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbEcsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLDBCQUEwQixFQUFFLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1FBQ3RHLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSx5QkFBeUIsRUFBRSxJQUFJLENBQUMsdUJBQXVCLENBQUMsQ0FBQztRQUNwRyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsdUJBQXVCLEVBQUUsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFDaEcsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLHVCQUF1QixFQUFFLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1FBRWhHLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFTSx5REFBa0I7Ozs7SUFBekIsVUFBMEIsR0FBTztRQUM3QixpQkFBTSxrQkFBa0IsWUFBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMsWUFBWSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxjQUFjLENBQUMsQ0FBQztRQUN2RixJQUFJLENBQUMsc0JBQXNCLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLHdCQUF3QixDQUFDLENBQUM7UUFDM0csSUFBSSxDQUFDLHdCQUF3QixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSwwQkFBMEIsQ0FBQyxDQUFDO1FBQy9HLElBQUksQ0FBQyx1QkFBdUIsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUseUJBQXlCLENBQUMsQ0FBQztRQUM3RyxJQUFJLENBQUMscUJBQXFCLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLHVCQUF1QixDQUFDLENBQUM7UUFDekcsSUFBSSxDQUFDLHFCQUFxQixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO0lBQzdHLENBQUM7Ozs7O0lBRVMscURBQWM7Ozs7SUFBeEI7UUFDSSxPQUFPLDJCQUEyQixDQUFDO0lBQ3ZDLENBQUM7SUFDTCxtQ0FBQztBQUFELENBQUMsQUE5Q0QsQ0FBa0QsNEJBQTRCLEdBOEM3RTs7Ozs7OztJQTdDRyxvREFBcUI7O0lBQ3JCLDhEQUErQjs7SUFDL0IsZ0VBQWlDOztJQUNqQywrREFBZ0M7O0lBQ2hDLDZEQUE4Qjs7SUFDOUIsNkRBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnBtbk1vZGVsSnNvbkhlbHBlciB9IGZyb20gJy4uLy4uL3JlZic7XHJcbmltcG9ydCB7IEFic3RyYWN0UnRCaWxsUHJvY2Vzc0NvbnRlbnQgfSBmcm9tICcuL0Fic3RyYWN0UnRCaWxsUHJvY2Vzc0NvbnRlbnQnO1xyXG5pbXBvcnQgeyBSdEJpbGxDcmVhdGlvblByb2Nlc3NFbnRpdHkgfSBmcm9tICcuLi8uLi9lbnRpdHkvaW1wbC9SdEJpbGxDcmVhdGlvblByb2Nlc3NFbnRpdHknO1xyXG5pbXBvcnQgeyBJUnRCaWxsQ3JlYXRpb25Qcm9jZXNzQ29udGVudCB9IGZyb20gJy4uL0lSdEJpbGxDcmVhdGlvblByb2Nlc3NDb250ZW50JztcclxuaW1wb3J0IHsgSVJ0QmlsbENyZWF0aW9uUHJvY2Vzc0VudGl0eSB9IGZyb20gJy4uLy4uL2VudGl0eS9JUnRCaWxsQ3JlYXRpb25Qcm9jZXNzRW50aXR5JztcclxuXHJcbi8qKlxyXG4gKiDljZXmja7nlJ/ljZXmtYHlhoXlrrnnsbvjgIJcclxuICovXHJcbmV4cG9ydCBjbGFzcyBSdEJpbGxDcmVhdGlvblByb2Nlc3NDb250ZW50IGV4dGVuZHMgQWJzdHJhY3RSdEJpbGxQcm9jZXNzQ29udGVudDxJUnRCaWxsQ3JlYXRpb25Qcm9jZXNzRW50aXR5PiBpbXBsZW1lbnRzIElSdEJpbGxDcmVhdGlvblByb2Nlc3NDb250ZW50IHtcclxuICAgIGZvcm1TZXR0aW5nczogc3RyaW5nO1xyXG4gICAgdXBCaWxsVHJhY2tpbmdTZXR0aW5nczogc3RyaW5nO1xyXG4gICAgZG93bkJpbGxUcmFja2luZ1NldHRpbmdzOiBzdHJpbmc7XHJcbiAgICByZXZlcnNlV3JpdGVSdWxlQ29udGVudDogc3RyaW5nO1xyXG4gICAgdGFza0NlbnRlckNvbmZpZzRQdXNoOiBzdHJpbmc7XHJcbiAgICB0YXNrQ2VudGVyQ29uZmlnNFB1bGw6IHN0cmluZztcclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcblxyXG4gICAgICAgIHRoaXMuZm9ybVNldHRpbmdzID0gbnVsbDtcclxuICAgICAgICB0aGlzLnVwQmlsbFRyYWNraW5nU2V0dGluZ3MgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuZG93bkJpbGxUcmFja2luZ1NldHRpbmdzID0gbnVsbDtcclxuICAgICAgICB0aGlzLnJldmVyc2VXcml0ZVJ1bGVDb250ZW50ID0gbnVsbDtcclxuICAgICAgICB0aGlzLnRhc2tDZW50ZXJDb25maWc0UHVzaCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy50YXNrQ2VudGVyQ29uZmlnNFB1bGwgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IHt9IHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJmb3JtU2V0dGluZ3NcIiwgdGhpcy5mb3JtU2V0dGluZ3MpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInVwQmlsbFRyYWNraW5nU2V0dGluZ3NcIiwgdGhpcy51cEJpbGxUcmFja2luZ1NldHRpbmdzKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJkb3duQmlsbFRyYWNraW5nU2V0dGluZ3NcIiwgdGhpcy5kb3duQmlsbFRyYWNraW5nU2V0dGluZ3MpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInJldmVyc2VXcml0ZVJ1bGVDb250ZW50XCIsIHRoaXMucmV2ZXJzZVdyaXRlUnVsZUNvbnRlbnQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInRhc2tDZW50ZXJDb25maWc0UHVzaFwiLCB0aGlzLnRhc2tDZW50ZXJDb25maWc0UHVzaCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwidGFza0NlbnRlckNvbmZpZzRQdWxsXCIsIHRoaXMudGFza0NlbnRlckNvbmZpZzRQdWxsKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgTG9hZEZyb21Kc29uT2JqZWN0KG9iajoge30pOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy5mb3JtU2V0dGluZ3MgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImZvcm1TZXR0aW5nc1wiKTtcclxuICAgICAgICB0aGlzLnVwQmlsbFRyYWNraW5nU2V0dGluZ3MgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInVwQmlsbFRyYWNraW5nU2V0dGluZ3NcIik7XHJcbiAgICAgICAgdGhpcy5kb3duQmlsbFRyYWNraW5nU2V0dGluZ3MgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImRvd25CaWxsVHJhY2tpbmdTZXR0aW5nc1wiKTtcclxuICAgICAgICB0aGlzLnJldmVyc2VXcml0ZVJ1bGVDb250ZW50ID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJyZXZlcnNlV3JpdGVSdWxlQ29udGVudFwiKTtcclxuICAgICAgICB0aGlzLnRhc2tDZW50ZXJDb25maWc0UHVzaCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwidGFza0NlbnRlckNvbmZpZzRQdXNoXCIpO1xyXG4gICAgICAgIHRoaXMudGFza0NlbnRlckNvbmZpZzRQdWxsID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJ0YXNrQ2VudGVyQ29uZmlnNFB1bGxcIik7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIGdldEVudGl0eUNsYXNzKCk6IHR5cGVvZiBSdEJpbGxDcmVhdGlvblByb2Nlc3NFbnRpdHkge1xyXG4gICAgICAgIHJldHVybiBSdEJpbGxDcmVhdGlvblByb2Nlc3NFbnRpdHk7XHJcbiAgICB9XHJcbn1cclxuIl19