/**
 * @fileoverview added by tsickle
 * Generated from: lib/slim-entity/impl/AbstractSlimBillProcessEntity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper, SlimEntity } from "../../ref";
/**
 * 简化单据流实体类。
 * @abstract
 */
var /**
 * 简化单据流实体类。
 * @abstract
 */
AbstractSlimBillProcessEntity = /** @class */ (function (_super) {
    tslib_1.__extends(AbstractSlimBillProcessEntity, _super);
    function AbstractSlimBillProcessEntity() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.sysInit = false;
        _this.enabledParentEventRouterCond = true;
        _this.enabledParentMappingCond = true;
        _this.origin = true;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    AbstractSlimBillProcessEntity.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.code = null;
        this.upBillVoMetadataId = null;
        this.upBillVoId = null;
        this.downBillVoMetadataId = null;
        this.downBillVoId = null;
        this.bizEventId = null;
        this.isSupportAutomatinFlow = false;
        this.sysInit = false;
        this.parentId = null;
        this.enabledParentEventRouterCond = true;
        this.enabledParentMappingCond = true;
        this.upBillBeId = null;
        this.downBillBeId = null;
        this.origin = true;
    };
    /**
     * @return {?}
     */
    AbstractSlimBillProcessEntity.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "code", this.code);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillVoMetadataId", this.upBillVoMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillVoId", this.upBillVoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillVoMetadataId", this.downBillVoMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillVoId", this.downBillVoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizEventId", this.bizEventId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "isSupportAutomatinFlow", this.isSupportAutomatinFlow);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sysInit", this.sysInit);
        BpmnModelJsonHelper.SetAttributeValue(obj, "parentId", this.parentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "enabledParentEventRouterCond", this.enabledParentEventRouterCond);
        BpmnModelJsonHelper.SetAttributeValue(obj, "enabledParentMappingCond", this.enabledParentMappingCond);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillBeId", this.upBillBeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillBeId", this.downBillBeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "origin", this.origin);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    AbstractSlimBillProcessEntity.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.code = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "code");
        this.upBillVoMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillVoMetadataId");
        this.upBillVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillVoId");
        this.downBillVoMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillVoMetadataId");
        this.downBillVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillVoId");
        this.bizEventId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizEventId");
        this.isSupportAutomatinFlow = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isSupportAutomatinFlow");
        this.sysInit = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "sysInit");
        this.parentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "parentId");
        this.enabledParentEventRouterCond = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "enabledParentEventRouterCond");
        this.enabledParentMappingCond = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "enabledParentMappingCond");
        this.upBillBeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillBeId");
        this.downBillBeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillBeId");
        this.origin = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "origin");
    };
    return AbstractSlimBillProcessEntity;
}(SlimEntity));
/**
 * 简化单据流实体类。
 * @abstract
 */
export { AbstractSlimBillProcessEntity };
if (false) {
    /** @type {?} */
    AbstractSlimBillProcessEntity.prototype.code;
    /** @type {?} */
    AbstractSlimBillProcessEntity.prototype.upBillVoMetadataId;
    /** @type {?} */
    AbstractSlimBillProcessEntity.prototype.upBillVoId;
    /** @type {?} */
    AbstractSlimBillProcessEntity.prototype.downBillVoMetadataId;
    /** @type {?} */
    AbstractSlimBillProcessEntity.prototype.downBillVoId;
    /** @type {?} */
    AbstractSlimBillProcessEntity.prototype.isSupportAutomatinFlow;
    /** @type {?} */
    AbstractSlimBillProcessEntity.prototype.bizEventId;
    /** @type {?} */
    AbstractSlimBillProcessEntity.prototype.sysInit;
    /** @type {?} */
    AbstractSlimBillProcessEntity.prototype.parentId;
    /** @type {?} */
    AbstractSlimBillProcessEntity.prototype.enabledParentEventRouterCond;
    /** @type {?} */
    AbstractSlimBillProcessEntity.prototype.enabledParentMappingCond;
    /** @type {?} */
    AbstractSlimBillProcessEntity.prototype.upBillBeId;
    /** @type {?} */
    AbstractSlimBillProcessEntity.prototype.downBillBeId;
    /** @type {?} */
    AbstractSlimBillProcessEntity.prototype.origin;
}
//# sourceMappingURL=data:application/json;base64,