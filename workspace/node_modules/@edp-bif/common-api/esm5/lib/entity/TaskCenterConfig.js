/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/TaskCenterConfig.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper, JsonConvertableImpl, TaskCenterContent, TaskHandlingMenuArgs } from "@edp-aif/common-api";
import { JointQueryMode } from "./impl/JointQueryMode";
var TaskCenterConfig = /** @class */ (function (_super) {
    tslib_1.__extends(TaskCenterConfig, _super);
    function TaskCenterConfig() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.jointQueryMode = JointQueryMode.APP;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    TaskCenterConfig.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.taskCenterContent = null;
        this.jointQueryMode = JointQueryMode.APP;
        this.joitQueryMenu = null;
        this.jointQueryUrl = null;
    };
    /**
     * @return {?}
     */
    TaskCenterConfig.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "taskCenterContent", this.taskCenterContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "jointQueryMode", this.jointQueryMode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "joitQueryMenu", this.joitQueryMenu);
        BpmnModelJsonHelper.SetAttributeValue(obj, "jointQueryUrl", this.jointQueryUrl);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    TaskCenterConfig.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.taskCenterContent = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, "taskCenterContent", TaskCenterContent);
        this.jointQueryMode = JointQueryMode[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "jointQueryMode")];
        this.joitQueryMenu = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, "joitQueryMenu", TaskHandlingMenuArgs);
        this.jointQueryUrl = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "jointQueryUrl");
    };
    return TaskCenterConfig;
}(JsonConvertableImpl));
export { TaskCenterConfig };
if (false) {
    /** @type {?} */
    TaskCenterConfig.prototype.taskCenterContent;
    /** @type {?} */
    TaskCenterConfig.prototype.jointQueryMode;
    /** @type {?} */
    TaskCenterConfig.prototype.jointQueryUrl;
    /** @type {?} */
    TaskCenterConfig.prototype.joitQueryMenu;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGFza0NlbnRlckNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL2NvbW1vbi1hcGkvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L1Rhc2tDZW50ZXJDb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLG1CQUFtQixFQUFFLGlCQUFpQixFQUFFLG9CQUFvQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDeEgsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRXZEO0lBQXNDLDRDQUFtQjtJQUF6RDtRQUFBLHFFQWtDQztRQWhDRyxvQkFBYyxHQUFtQixjQUFjLENBQUMsR0FBRyxDQUFDOztJQWdDeEQsQ0FBQzs7Ozs7SUE1QmEsOENBQW1COzs7O0lBQTdCO1FBQ0ksaUJBQU0sbUJBQW1CLFdBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDO1FBQzlCLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDLEdBQUcsQ0FBQztRQUN6QyxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQztRQUMxQixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQztJQUM5QixDQUFDOzs7O0lBRU0sOENBQW1COzs7SUFBMUI7O1lBQ1EsR0FBRyxHQUFHLGlCQUFNLG1CQUFtQixXQUFFO1FBRXJDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUN4RixtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ2xGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxlQUFlLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ2hGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxlQUFlLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBRWhGLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFTSw2Q0FBa0I7Ozs7SUFBekIsVUFBMEIsR0FBTztRQUM3QixpQkFBTSxrQkFBa0IsWUFBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMsaUJBQWlCLEdBQUcsbUJBQW1CLENBQUMsbUNBQW1DLENBQUMsR0FBRyxFQUFFLG1CQUFtQixFQUFFLGlCQUFpQixDQUFDLENBQUM7UUFDOUgsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUMsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUMzRyxJQUFJLENBQUMsYUFBYSxHQUFHLG1CQUFtQixDQUFDLG1DQUFtQyxDQUFDLEdBQUcsRUFBRSxlQUFlLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztRQUN6SCxJQUFJLENBQUMsYUFBYSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxlQUFlLENBQUMsQ0FBQztJQUM3RixDQUFDO0lBQ0wsdUJBQUM7QUFBRCxDQUFDLEFBbENELENBQXNDLG1CQUFtQixHQWtDeEQ7Ozs7SUFqQ0csNkNBQXFDOztJQUNyQywwQ0FBb0Q7O0lBQ3BELHlDQUFzQjs7SUFDdEIseUNBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnBtbk1vZGVsSnNvbkhlbHBlciwgSnNvbkNvbnZlcnRhYmxlSW1wbCwgVGFza0NlbnRlckNvbnRlbnQsIFRhc2tIYW5kbGluZ01lbnVBcmdzIH0gZnJvbSBcIkBlZHAtYWlmL2NvbW1vbi1hcGlcIjtcclxuaW1wb3J0IHsgSm9pbnRRdWVyeU1vZGUgfSBmcm9tIFwiLi9pbXBsL0pvaW50UXVlcnlNb2RlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVGFza0NlbnRlckNvbmZpZyBleHRlbmRzIEpzb25Db252ZXJ0YWJsZUltcGwge1xyXG4gICAgdGFza0NlbnRlckNvbnRlbnQ6IFRhc2tDZW50ZXJDb250ZW50O1xyXG4gICAgam9pbnRRdWVyeU1vZGU6IEpvaW50UXVlcnlNb2RlID0gSm9pbnRRdWVyeU1vZGUuQVBQO1xyXG4gICAgam9pbnRRdWVyeVVybDogc3RyaW5nO1xyXG4gICAgam9pdFF1ZXJ5TWVudTogVGFza0hhbmRsaW5nTWVudUFyZ3M7XHJcblxyXG4gICAgcHJvdGVjdGVkIFJlc2V0QmVmb3JlTG9hZEZyb20oKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuUmVzZXRCZWZvcmVMb2FkRnJvbSgpO1xyXG5cclxuICAgICAgICB0aGlzLnRhc2tDZW50ZXJDb250ZW50ID0gbnVsbDtcclxuICAgICAgICB0aGlzLmpvaW50UXVlcnlNb2RlID0gSm9pbnRRdWVyeU1vZGUuQVBQO1xyXG4gICAgICAgIHRoaXMuam9pdFF1ZXJ5TWVudSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5qb2ludFF1ZXJ5VXJsID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ29udmVydFRvSnNvbk9iamVjdCgpOiB7fSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuXHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwidGFza0NlbnRlckNvbnRlbnRcIiwgdGhpcy50YXNrQ2VudGVyQ29udGVudCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiam9pbnRRdWVyeU1vZGVcIiwgdGhpcy5qb2ludFF1ZXJ5TW9kZSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiam9pdFF1ZXJ5TWVudVwiLCB0aGlzLmpvaXRRdWVyeU1lbnUpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImpvaW50UXVlcnlVcmxcIiwgdGhpcy5qb2ludFF1ZXJ5VXJsKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgTG9hZEZyb21Kc29uT2JqZWN0KG9iajoge30pOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy50YXNrQ2VudGVyQ29udGVudCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc0pzb25TZXJpYWxpemFibGUob2JqLCBcInRhc2tDZW50ZXJDb250ZW50XCIsIFRhc2tDZW50ZXJDb250ZW50KTtcclxuICAgICAgICB0aGlzLmpvaW50UXVlcnlNb2RlID0gSm9pbnRRdWVyeU1vZGVbQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJqb2ludFF1ZXJ5TW9kZVwiKV07XHJcbiAgICAgICAgdGhpcy5qb2l0UXVlcnlNZW51ID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzSnNvblNlcmlhbGl6YWJsZShvYmosIFwiam9pdFF1ZXJ5TWVudVwiLCBUYXNrSGFuZGxpbmdNZW51QXJncyk7XHJcbiAgICAgICAgdGhpcy5qb2ludFF1ZXJ5VXJsID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJqb2ludFF1ZXJ5VXJsXCIpO1xyXG4gICAgfVxyXG59Il19