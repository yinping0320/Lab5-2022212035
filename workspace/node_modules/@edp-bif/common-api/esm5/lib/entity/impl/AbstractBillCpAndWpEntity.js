/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/AbstractBillCpAndWpEntity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Entity, BpmnModelJsonHelper } from '../../ref';
var AbstractBillCpAndWpEntity = /** @class */ (function (_super) {
    tslib_1.__extends(AbstractBillCpAndWpEntity, _super);
    function AbstractBillCpAndWpEntity() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.sysInit = false;
        _this.isCreationProcess = false;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    AbstractBillCpAndWpEntity.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.code = null;
        this.name = null;
        this.persistenceVersion = null;
        this.parentId = null;
        this.upBillVoId = null;
        this.downBillVoId = null;
        this.sysInit = false;
        this.isCreationProcess = false;
        this.originId = null;
        this.rootId = null;
        this.colI18nValues = null;
    };
    /**
     * @return {?}
     */
    AbstractBillCpAndWpEntity.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "code", this.code);
        BpmnModelJsonHelper.SetAttributeValue(obj, "name", this.name);
        BpmnModelJsonHelper.SetAttributeValue(obj, "persistenceVersion", this.persistenceVersion);
        BpmnModelJsonHelper.SetAttributeValue(obj, "parentId", this.parentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillVoId", this.upBillVoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillVoId", this.downBillVoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sysInit", this.sysInit);
        BpmnModelJsonHelper.SetAttributeValue(obj, "isCreationProcess", this.isCreationProcess);
        BpmnModelJsonHelper.SetAttributeValue(obj, "originId", this.originId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "rootId", this.rootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "colI18nValues", this.colI18nValues);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    AbstractBillCpAndWpEntity.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.code = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "code");
        this.name = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "name");
        this.persistenceVersion = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "persistenceVersion");
        this.parentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "parentId");
        this.upBillVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillVoId");
        this.downBillVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillVoId");
        this.sysInit = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "sysInit");
        this.isCreationProcess = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isCreationProcess");
        this.originId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "originId");
        this.rootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "rootId");
        this.colI18nValues = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "colI18nValues");
    };
    return AbstractBillCpAndWpEntity;
}(Entity));
export { AbstractBillCpAndWpEntity };
if (false) {
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.code;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.name;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.persistenceVersion;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.parentId;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.upBillVoId;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.downBillVoId;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.sysInit;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.isCreationProcess;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.originId;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.rootId;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.colI18nValues;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWJzdHJhY3RCaWxsQ3BBbmRXcEVudGl0eS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL2NvbW1vbi1hcGkvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L2ltcGwvQWJzdHJhY3RCaWxsQ3BBbmRXcEVudGl0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLG1CQUFtQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBR3hEO0lBQStDLHFEQUFNO0lBQXJEO1FBQUEscUVBOERDO1FBdkRDLGFBQU8sR0FBWSxLQUFLLENBQUM7UUFDekIsdUJBQWlCLEdBQVksS0FBSyxDQUFDOztJQXNEckMsQ0FBQzs7Ozs7SUFqRFcsdURBQW1COzs7O0lBQTdCO1FBQ0UsaUJBQU0sbUJBQW1CLFdBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDO1FBQy9CLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxLQUFLLENBQUM7UUFDL0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDckIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDbkIsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUM7SUFDNUIsQ0FBQzs7OztJQUVNLHVEQUFtQjs7O0lBQTFCOztZQUNNLEdBQUcsR0FBRyxpQkFBTSxtQkFBbUIsV0FBRTtRQUVyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsTUFB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O0lBQ2IseUNBQWE7O0lBQ2IsdURBQTJCOztJQUMzQiw2Q0FBaUI7O0lBQ2pCLCtDQUFtQjs7SUFDbkIsaURBQXFCOztJQUNyQiw0Q0FBeUI7O0lBQ3pCLHNEQUFtQzs7SUFDbkMsNkNBQWlCOztJQUNqQiwyQ0FBZTs7SUFDZixrREFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbnRpdHksIEJwbW5Nb2RlbEpzb25IZWxwZXIgfSBmcm9tICcuLi8uLi9yZWYnO1xyXG5pbXBvcnQgeyBJQmlsbENwQW5kV3BFbnRpdHkgfSBmcm9tICcuLi9JQmlsbENwQW5kV3BFbnRpdHknO1xyXG5cclxuZXhwb3J0IGNsYXNzIEFic3RyYWN0QmlsbENwQW5kV3BFbnRpdHkgZXh0ZW5kcyBFbnRpdHkgaW1wbGVtZW50cyBJQmlsbENwQW5kV3BFbnRpdHkge1xyXG4gIGNvZGU6IHN0cmluZztcclxuICBuYW1lOiBzdHJpbmc7XHJcbiAgcGVyc2lzdGVuY2VWZXJzaW9uOiBzdHJpbmc7XHJcbiAgcGFyZW50SWQ6IHN0cmluZztcclxuICB1cEJpbGxWb0lkOiBzdHJpbmc7XHJcbiAgZG93bkJpbGxWb0lkOiBzdHJpbmc7XHJcbiAgc3lzSW5pdDogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIGlzQ3JlYXRpb25Qcm9jZXNzOiBib29sZWFuID0gZmFsc2U7XHJcbiAgb3JpZ2luSWQ6IHN0cmluZztcclxuICByb290SWQ6IHN0cmluZztcclxuICBjb2xJMThuVmFsdWVzOiBhbnk7XHJcblxyXG4gIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgc3VwZXIuUmVzZXRCZWZvcmVMb2FkRnJvbSgpO1xyXG5cclxuICAgIHRoaXMuY29kZSA9IG51bGw7XHJcbiAgICB0aGlzLm5hbWUgPSBudWxsO1xyXG4gICAgdGhpcy5wZXJzaXN0ZW5jZVZlcnNpb24gPSBudWxsO1xyXG4gICAgdGhpcy5wYXJlbnRJZCA9IG51bGw7XHJcbiAgICB0aGlzLnVwQmlsbFZvSWQgPSBudWxsO1xyXG4gICAgdGhpcy5kb3duQmlsbFZvSWQgPSBudWxsO1xyXG4gICAgdGhpcy5zeXNJbml0ID0gZmFsc2U7XHJcbiAgICB0aGlzLmlzQ3JlYXRpb25Qcm9jZXNzID0gZmFsc2U7XHJcbiAgICB0aGlzLm9yaWdpbklkID0gbnVsbDtcclxuICAgIHRoaXMucm9vdElkID0gbnVsbDtcclxuICAgIHRoaXMuY29sSTE4blZhbHVlcyA9IG51bGw7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgQ29udmVydFRvSnNvbk9iamVjdCgpOiB7fSB7XHJcbiAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImNvZGVcIiwgdGhpcy5jb2RlKTtcclxuICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIm5hbWVcIiwgdGhpcy5uYW1lKTtcclxuICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInBlcnNpc3RlbmNlVmVyc2lvblwiLCB0aGlzLnBlcnNpc3RlbmNlVmVyc2lvbik7XHJcbiAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJwYXJlbnRJZFwiLCB0aGlzLnBhcmVudElkKTtcclxuICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInVwQmlsbFZvSWRcIiwgdGhpcy51cEJpbGxWb0lkKTtcclxuICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImRvd25CaWxsVm9JZFwiLCB0aGlzLmRvd25CaWxsVm9JZCk7XHJcbiAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJzeXNJbml0XCIsIHRoaXMuc3lzSW5pdCk7XHJcbiAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJpc0NyZWF0aW9uUHJvY2Vzc1wiLCB0aGlzLmlzQ3JlYXRpb25Qcm9jZXNzKTtcclxuICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIm9yaWdpbklkXCIsIHRoaXMub3JpZ2luSWQpO1xyXG4gICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwicm9vdElkXCIsIHRoaXMucm9vdElkKTtcclxuICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImNvbEkxOG5WYWx1ZXNcIiwgdGhpcy5jb2xJMThuVmFsdWVzKTtcclxuXHJcbiAgICByZXR1cm4gb2JqO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IHt9KTogdm9pZCB7XHJcbiAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICB0aGlzLmNvZGUgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImNvZGVcIik7XHJcbiAgICB0aGlzLm5hbWUgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcIm5hbWVcIik7XHJcbiAgICB0aGlzLnBlcnNpc3RlbmNlVmVyc2lvbiA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwicGVyc2lzdGVuY2VWZXJzaW9uXCIpO1xyXG4gICAgdGhpcy5wYXJlbnRJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwicGFyZW50SWRcIik7XHJcbiAgICB0aGlzLnVwQmlsbFZvSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInVwQmlsbFZvSWRcIik7XHJcbiAgICB0aGlzLmRvd25CaWxsVm9JZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiZG93bkJpbGxWb0lkXCIpO1xyXG4gICAgdGhpcy5zeXNJbml0ID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzQm9vbGVhbihvYmosIFwic3lzSW5pdFwiKTtcclxuICAgIHRoaXMuaXNDcmVhdGlvblByb2Nlc3MgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNCb29sZWFuKG9iaiwgXCJpc0NyZWF0aW9uUHJvY2Vzc1wiKTtcclxuICAgIHRoaXMub3JpZ2luSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcIm9yaWdpbklkXCIpO1xyXG4gICAgdGhpcy5yb290SWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInJvb3RJZFwiKTtcclxuICAgIHRoaXMuY29sSTE4blZhbHVlcyA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiY29sSTE4blZhbHVlc1wiKTtcclxuICB9XHJcbn1cclxuIl19