/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/ConditionContent.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { JsonConvertableImpl, BpmnModelJsonHelper } from '../../ref';
var ConditionContent = /** @class */ (function (_super) {
    tslib_1.__extends(ConditionContent, _super);
    function ConditionContent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @protected
     * @return {?}
     */
    ConditionContent.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.unSatisfiedInformation = null;
    };
    /**
     * @return {?}
     */
    ConditionContent.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "unSatisfiedInformation", this.unSatisfiedInformation);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    ConditionContent.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.unSatisfiedInformation = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "unSatisfiedInformation");
    };
    return ConditionContent;
}(JsonConvertableImpl));
export { ConditionContent };
if (false) {
    /** @type {?} */
    ConditionContent.prototype.unSatisfiedInformation;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uZGl0aW9uQ29udGVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL2NvbW1vbi1hcGkvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L2ltcGwvQ29uZGl0aW9uQ29udGVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFckU7SUFBc0MsNENBQW1CO0lBQXpEOztJQXNCQSxDQUFDOzs7OztJQW5CYSw4Q0FBbUI7Ozs7SUFBN0I7UUFDSSxpQkFBTSxtQkFBbUIsV0FBRSxDQUFDO1FBRTVCLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxJQUFJLENBQUM7SUFDdkMsQ0FBQzs7OztJQUVNLDhDQUFtQjs7O0lBQTFCOztZQUNRLEdBQUcsR0FBTyxpQkFBTSxtQkFBbUIsV0FBRTtRQUV6QyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsd0JBQXdCLEVBQUUsSUFBSSxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFFbEcsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVNLDZDQUFrQjs7OztJQUF6QixVQUEwQixHQUFPO1FBQzdCLGlCQUFNLGtCQUFrQixZQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsd0JBQXdCLENBQUMsQ0FBQztJQUMvRyxDQUFDO0lBQ0wsdUJBQUM7QUFBRCxDQUFDLEFBdEJELENBQXNDLG1CQUFtQixHQXNCeEQ7Ozs7SUFyQkcsa0RBQStCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSnNvbkNvbnZlcnRhYmxlSW1wbCwgQnBtbk1vZGVsSnNvbkhlbHBlciB9IGZyb20gJy4uLy4uL3JlZic7XHJcblxyXG5leHBvcnQgY2xhc3MgQ29uZGl0aW9uQ29udGVudCBleHRlbmRzIEpzb25Db252ZXJ0YWJsZUltcGwge1xyXG4gICAgdW5TYXRpc2ZpZWRJbmZvcm1hdGlvbjogc3RyaW5nO1xyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICAgICAgdGhpcy51blNhdGlzZmllZEluZm9ybWF0aW9uID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ29udmVydFRvSnNvbk9iamVjdCgpOiB7fSB7XHJcbiAgICAgICAgbGV0IG9iajoge30gPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcblxyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInVuU2F0aXNmaWVkSW5mb3JtYXRpb25cIiwgdGhpcy51blNhdGlzZmllZEluZm9ybWF0aW9uKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgTG9hZEZyb21Kc29uT2JqZWN0KG9iajoge30pOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy51blNhdGlzZmllZEluZm9ybWF0aW9uID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJ1blNhdGlzZmllZEluZm9ybWF0aW9uXCIpO1xyXG4gICAgfVxyXG59Il19