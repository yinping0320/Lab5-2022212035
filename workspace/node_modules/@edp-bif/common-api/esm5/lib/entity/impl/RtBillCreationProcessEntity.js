/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/RtBillCreationProcessEntity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper } from '../../ref';
import { AbstractBillCreationProcessEntity } from './AbstractBillCreationProcessEntity';
var RtBillCreationProcessEntity = /** @class */ (function (_super) {
    tslib_1.__extends(RtBillCreationProcessEntity, _super);
    function RtBillCreationProcessEntity() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isEnabled = false;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    RtBillCreationProcessEntity.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.isEnabled = false;
        this.eventRouterConditionsId = null;
        this.mappingConditionsId = null;
        this.mappingModeId = null;
        this.saveModeId = null;
        this.formSettingsId = null;
        this.dtBillCreationProcessId = null;
        this.upBillTrackingSettingsId = null;
        this.downBillTrackingSettingsId = null;
        this.reverseWriteRuleId = null;
        this.taskCenterConfig4Push = null;
        this.taskCenterConfig4Pull = null;
        this.isSupportPull = false;
        this.isSupportPush = false;
    };
    /**
     * @return {?}
     */
    RtBillCreationProcessEntity.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "isEnabled", this.isEnabled);
        BpmnModelJsonHelper.SetAttributeValue(obj, "eventRouterConditionsId", this.eventRouterConditionsId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingConditionsId", this.mappingConditionsId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingModeId", this.mappingModeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "saveModeId", this.saveModeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "formSettingsId", this.formSettingsId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "dtBillCreationProcessId", this.dtBillCreationProcessId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillTrackingSettingsId", this.upBillTrackingSettingsId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillTrackingSettingsId", this.downBillTrackingSettingsId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "reverseWriteRuleId", this.reverseWriteRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "taskCenterConfig4Push", this.taskCenterConfig4Push);
        BpmnModelJsonHelper.SetAttributeValue(obj, "taskCenterConfig4Pull", this.taskCenterConfig4Pull);
        BpmnModelJsonHelper.SetAttributeValue(obj, "isSupportPull", this.isSupportPull);
        BpmnModelJsonHelper.SetAttributeValue(obj, "isSupportPush", this.isSupportPush);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    RtBillCreationProcessEntity.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.isEnabled = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isEnabled");
        this.eventRouterConditionsId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "eventRouterConditionsId");
        this.mappingConditionsId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingConditionsId");
        this.mappingModeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingModeId");
        this.saveModeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "saveModeId");
        this.formSettingsId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "formSettingsId");
        this.dtBillCreationProcessId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "dtBillCreationProcessId");
        this.upBillTrackingSettingsId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillTrackingSettingsId");
        this.downBillTrackingSettingsId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillTrackingSettingsId");
        this.reverseWriteRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "reverseWriteRuleId");
        this.taskCenterConfig4Push = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "taskCenterConfig4Push");
        this.taskCenterConfig4Pull = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "taskCenterConfig4Pull");
        this.isSupportPull = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isSupportPull");
        this.isSupportPush = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isSupportPush");
    };
    return RtBillCreationProcessEntity;
}(AbstractBillCreationProcessEntity));
export { RtBillCreationProcessEntity };
if (false) {
    /** @type {?} */
    RtBillCreationProcessEntity.prototype.isEnabled;
    /** @type {?} */
    RtBillCreationProcessEntity.prototype.eventRouterConditionsId;
    /** @type {?} */
    RtBillCreationProcessEntity.prototype.mappingConditionsId;
    /** @type {?} */
    RtBillCreationProcessEntity.prototype.mappingModeId;
    /** @type {?} */
    RtBillCreationProcessEntity.prototype.saveModeId;
    /** @type {?} */
    RtBillCreationProcessEntity.prototype.formSettingsId;
    /** @type {?} */
    RtBillCreationProcessEntity.prototype.dtBillCreationProcessId;
    /** @type {?} */
    RtBillCreationProcessEntity.prototype.upBillTrackingSettingsId;
    /** @type {?} */
    RtBillCreationProcessEntity.prototype.downBillTrackingSettingsId;
    /** @type {?} */
    RtBillCreationProcessEntity.prototype.reverseWriteRuleId;
    /** @type {?} */
    RtBillCreationProcessEntity.prototype.taskCenterConfig4Push;
    /** @type {?} */
    RtBillCreationProcessEntity.prototype.taskCenterConfig4Pull;
    /** @type {?} */
    RtBillCreationProcessEntity.prototype.isSupportPull;
    /** @type {?} */
    RtBillCreationProcessEntity.prototype.isSupportPush;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUnRCaWxsQ3JlYXRpb25Qcm9jZXNzRW50aXR5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1iaWYvY29tbW9uLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvaW1wbC9SdEJpbGxDcmVhdGlvblByb2Nlc3NFbnRpdHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2hELE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBR3hGO0lBQWlELHVEQUFpQztJQUFsRjtRQUFBLHFFQTBFQztRQXpFRyxlQUFTLEdBQVksS0FBSyxDQUFDOztJQXlFL0IsQ0FBQzs7Ozs7SUExRGEseURBQW1COzs7O0lBQTdCO1FBQ0ksaUJBQU0sbUJBQW1CLFdBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztRQUN2QixJQUFJLENBQUMsdUJBQXVCLEdBQUcsSUFBSSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUM7UUFDaEMsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUM7UUFDMUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7UUFDdkIsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7UUFDM0IsSUFBSSxDQUFDLHVCQUF1QixHQUFHLElBQUksQ0FBQztRQUNwQyxJQUFJLENBQUMsd0JBQXdCLEdBQUcsSUFBSSxDQUFDO1FBQ3JDLElBQUksQ0FBQywwQkFBMEIsR0FBRyxJQUFJLENBQUM7UUFDdkMsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQztRQUMvQixJQUFJLENBQUMscUJBQXFCLEdBQUcsSUFBSSxDQUFDO1FBQ2xDLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxJQUFJLENBQUM7UUFDbEMsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7UUFDM0IsSUFBSSxDQUFD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LHlCQUF5QixDQUFDLENBQUM7UUFDN0csSUFBSSxDQUFDLHdCQUF3QixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSwwQkFBMEIsQ0FBQyxDQUFDO1FBQy9HLElBQUksQ0FBQywwQkFBMEIsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsNEJBQTRCLENBQUMsQ0FBQztRQUNuSCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLG9CQUFvQixDQUFDLENBQUM7UUFDbkcsSUFBSSxDQUFDLHFCQUFxQixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO1FBQ3pHLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztRQUN6RyxJQUFJLENBQUMsYUFBYSxHQUFHLG1CQUFtQixDQUFDLDBCQUEwQixDQUFDLEdBQUcsRUFBRSxlQUFlLENBQUMsQ0FBQztRQUMxRixJQUFJLENBQUMsYUFBYSxHQUFHLG1CQUFtQixDQUFDLDBCQUEwQixDQUFDLEdBQUcsRUFBRSxlQUFlLENBQUMsQ0FBQztJQUM5RixDQUFDO0lBQ0wsa0NBQUM7QUFBRCxDQUFDLEFBMUVELENBQWlELGlDQUFpQyxHQTBFakY7Ozs7SUF6RUcsZ0RBQTJCOztJQUMzQiw4REFBZ0M7O0lBQ2hDLDBEQUE0Qjs7SUFDNUIsb0RBQXNCOztJQUN0QixpREFBbUI7O0lBQ25CLHFEQUF1Qjs7SUFDdkIsOERBQWdDOztJQUNoQywrREFBaUM7O0lBQ2pDLGlFQUFtQzs7SUFDbkMseURBQTJCOztJQUMzQiw0REFBOEI7O0lBQzlCLDREQUE4Qjs7SUFDOUIsb0RBQXVCOztJQUN2QixvREFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCcG1uTW9kZWxKc29uSGVscGVyIH0gZnJvbSAnLi4vLi4vcmVmJztcclxuaW1wb3J0IHsgQWJzdHJhY3RCaWxsQ3JlYXRpb25Qcm9jZXNzRW50aXR5IH0gZnJvbSAnLi9BYnN0cmFjdEJpbGxDcmVhdGlvblByb2Nlc3NFbnRpdHknO1xyXG5pbXBvcnQgeyBJUnRCaWxsQ3JlYXRpb25Qcm9jZXNzRW50aXR5IH0gZnJvbSAnLi4vSVJ0QmlsbENyZWF0aW9uUHJvY2Vzc0VudGl0eSc7XHJcblxyXG5leHBvcnQgY2xhc3MgUnRCaWxsQ3JlYXRpb25Qcm9jZXNzRW50aXR5IGV4dGVuZHMgQWJzdHJhY3RCaWxsQ3JlYXRpb25Qcm9jZXNzRW50aXR5IGltcGxlbWVudHMgSVJ0QmlsbENyZWF0aW9uUHJvY2Vzc0VudGl0eSB7XHJcbiAgICBpc0VuYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIGV2ZW50Um91dGVyQ29uZGl0aW9uc0lkOiBzdHJpbmc7XHJcbiAgICBtYXBwaW5nQ29uZGl0aW9uc0lkOiBzdHJpbmc7XHJcbiAgICBtYXBwaW5nTW9kZUlkOiBzdHJpbmc7XHJcbiAgICBzYXZlTW9kZUlkOiBzdHJpbmc7XHJcbiAgICBmb3JtU2V0dGluZ3NJZDogc3RyaW5nO1xyXG4gICAgZHRCaWxsQ3JlYXRpb25Qcm9jZXNzSWQ6IHN0cmluZztcclxuICAgIHVwQmlsbFRyYWNraW5nU2V0dGluZ3NJZDogc3RyaW5nO1xyXG4gICAgZG93bkJpbGxUcmFja2luZ1NldHRpbmdzSWQ6IHN0cmluZztcclxuICAgIHJldmVyc2VXcml0ZVJ1bGVJZDogc3RyaW5nO1xyXG4gICAgdGFza0NlbnRlckNvbmZpZzRQdXNoOiBzdHJpbmc7XHJcbiAgICB0YXNrQ2VudGVyQ29uZmlnNFB1bGw6IHN0cmluZztcclxuICAgIGlzU3VwcG9ydFB1bGw6IGJvb2xlYW47XHJcbiAgICBpc1N1cHBvcnRQdXNoOiBib29sZWFuO1xyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICAgICAgdGhpcy5pc0VuYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmV2ZW50Um91dGVyQ29uZGl0aW9uc0lkID0gbnVsbDtcclxuICAgICAgICB0aGlzLm1hcHBpbmdDb25kaXRpb25zSWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMubWFwcGluZ01vZGVJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5zYXZlTW9kZUlkID0gbnVsbDtcclxuICAgICAgICB0aGlzLmZvcm1TZXR0aW5nc0lkID0gbnVsbDtcclxuICAgICAgICB0aGlzLmR0QmlsbENyZWF0aW9uUHJvY2Vzc0lkID0gbnVsbDtcclxuICAgICAgICB0aGlzLnVwQmlsbFRyYWNraW5nU2V0dGluZ3NJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5kb3duQmlsbFRyYWNraW5nU2V0dGluZ3NJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5yZXZlcnNlV3JpdGVSdWxlSWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMudGFza0NlbnRlckNvbmZpZzRQdXNoID0gbnVsbDtcclxuICAgICAgICB0aGlzLnRhc2tDZW50ZXJDb25maWc0UHVsbCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5pc1N1cHBvcnRQdWxsID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5pc1N1cHBvcnRQdXNoID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENvbnZlcnRUb0pzb25PYmplY3QoKToge30ge1xyXG4gICAgICAgIGxldCBvYmo6IHt9ID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJpc0VuYWJsZWRcIiwgdGhpcy5pc0VuYWJsZWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImV2ZW50Um91dGVyQ29uZGl0aW9uc0lkXCIsIHRoaXMuZXZlbnRSb3V0ZXJDb25kaXRpb25zSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIm1hcHBpbmdDb25kaXRpb25zSWRcIiwgdGhpcy5tYXBwaW5nQ29uZGl0aW9uc0lkKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJtYXBwaW5nTW9kZUlkXCIsIHRoaXMubWFwcGluZ01vZGVJZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwic2F2ZU1vZGVJZFwiLCB0aGlzLnNhdmVNb2RlSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImZvcm1TZXR0aW5nc0lkXCIsIHRoaXMuZm9ybVNldHRpbmdzSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImR0QmlsbENyZWF0aW9uUHJvY2Vzc0lkXCIsIHRoaXMuZHRCaWxsQ3JlYXRpb25Qcm9jZXNzSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInVwQmlsbFRyYWNraW5nU2V0dGluZ3NJZFwiLCB0aGlzLnVwQmlsbFRyYWNraW5nU2V0dGluZ3NJZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiZG93bkJpbGxUcmFja2luZ1NldHRpbmdzSWRcIiwgdGhpcy5kb3duQmlsbFRyYWNraW5nU2V0dGluZ3NJZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwicmV2ZXJzZVdyaXRlUnVsZUlkXCIsIHRoaXMucmV2ZXJzZVdyaXRlUnVsZUlkKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJ0YXNrQ2VudGVyQ29uZmlnNFB1c2hcIiwgdGhpcy50YXNrQ2VudGVyQ29uZmlnNFB1c2gpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInRhc2tDZW50ZXJDb25maWc0UHVsbFwiLCB0aGlzLnRhc2tDZW50ZXJDb25maWc0UHVsbCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiaXNTdXBwb3J0UHVsbFwiLCB0aGlzLmlzU3VwcG9ydFB1bGwpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImlzU3VwcG9ydFB1c2hcIiwgdGhpcy5pc1N1cHBvcnRQdXNoKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgTG9hZEZyb21Kc29uT2JqZWN0KG9iajoge30pOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy5pc0VuYWJsZWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNCb29sZWFuKG9iaiwgXCJpc0VuYWJsZWRcIik7XHJcbiAgICAgICAgdGhpcy5ldmVudFJvdXRlckNvbmRpdGlvbnNJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiZXZlbnRSb3V0ZXJDb25kaXRpb25zSWRcIik7XHJcbiAgICAgICAgdGhpcy5tYXBwaW5nQ29uZGl0aW9uc0lkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJtYXBwaW5nQ29uZGl0aW9uc0lkXCIpO1xyXG4gICAgICAgIHRoaXMubWFwcGluZ01vZGVJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwibWFwcGluZ01vZGVJZFwiKTtcclxuICAgICAgICB0aGlzLnNhdmVNb2RlSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInNhdmVNb2RlSWRcIik7XHJcbiAgICAgICAgdGhpcy5mb3JtU2V0dGluZ3NJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiZm9ybVNldHRpbmdzSWRcIik7XHJcbiAgICAgICAgdGhpcy5kdEJpbGxDcmVhdGlvblByb2Nlc3NJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiZHRCaWxsQ3JlYXRpb25Qcm9jZXNzSWRcIik7XHJcbiAgICAgICAgdGhpcy51cEJpbGxUcmFja2luZ1NldHRpbmdzSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInVwQmlsbFRyYWNraW5nU2V0dGluZ3NJZFwiKTtcclxuICAgICAgICB0aGlzLmRvd25CaWxsVHJhY2tpbmdTZXR0aW5nc0lkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJkb3duQmlsbFRyYWNraW5nU2V0dGluZ3NJZFwiKTtcclxuICAgICAgICB0aGlzLnJldmVyc2VXcml0ZVJ1bGVJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwicmV2ZXJzZVdyaXRlUnVsZUlkXCIpO1xyXG4gICAgICAgIHRoaXMudGFza0NlbnRlckNvbmZpZzRQdXNoID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJ0YXNrQ2VudGVyQ29uZmlnNFB1c2hcIik7XHJcbiAgICAgICAgdGhpcy50YXNrQ2VudGVyQ29uZmlnNFB1bGwgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInRhc2tDZW50ZXJDb25maWc0UHVsbFwiKTtcclxuICAgICAgICB0aGlzLmlzU3VwcG9ydFB1bGwgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNCb29sZWFuKG9iaiwgXCJpc1N1cHBvcnRQdWxsXCIpO1xyXG4gICAgICAgIHRoaXMuaXNTdXBwb3J0UHVzaCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc0Jvb2xlYW4ob2JqLCBcImlzU3VwcG9ydFB1c2hcIik7XHJcbiAgICB9XHJcbn0iXX0=