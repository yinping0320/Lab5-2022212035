/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/ExportLogResult.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { JsonConvertableImpl, BpmnModelJsonHelper, AifLogEntity, BizEventEntity, BizActionEntity, CreationRuleEntity, CreationProcessEntity, WritebackRuleEntity, WritebackProcessEntity, GeneralTextEntity } from '@edp-aif/common-api';
import { RtBillCreationProcessEntity } from './RtBillCreationProcessEntity';
import { RtBillWritebackProcessEntity } from './RtBillWritebackProcessEntity';
var ExportLogResult = /** @class */ (function (_super) {
    tslib_1.__extends(ExportLogResult, _super);
    function ExportLogResult() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.aifLogEntities = new Array();
        _this.rtBillCreationProcessEntities = new Array();
        _this.rtBillWritebackProcessEntities = new Array();
        _this.bizEventEntities = new Array();
        _this.bizActionEntities = new Array();
        _this.creationRuleEntities = new Array();
        _this.creationProcessEntities = new Array();
        _this.writebackRuleEntities = new Array();
        _this.writebackProcessEntities = new Array();
        _this.generalTextEntities = new Array();
        _this.aifLogEntitiesMap = {};
        _this.rtBillCreationProcessEntitiesMap = {};
        _this.rtBillWritebackProcessEntitiesMap = {};
        _this.bizEventEntitiesMap = {};
        _this.bizActionEntitiesMap = {};
        _this.creationRuleEntitiesMap = {};
        _this.creationProcessEntitiesMap = {};
        _this.writebackRuleEntitiesMap = {};
        _this.writebackProcessEntitiesMap = {};
        _this.generalTextEntitiesMap = {};
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    ExportLogResult.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.aifLogEntities = [];
        this.rtBillCreationProcessEntities = [];
        this.rtBillWritebackProcessEntities = [];
        this.bizEventEntities = [];
        this.bizActionEntities = [];
        this.creationRuleEntities = [];
        this.creationProcessEntities = [];
        this.writebackRuleEntities = [];
        this.writebackProcessEntities = [];
        this.generalTextEntities = [];
        this.aifLogEntitiesMap = {};
        this.rtBillCreationProcessEntitiesMap = {};
        this.rtBillWritebackProcessEntitiesMap = {};
        this.bizEventEntitiesMap = {};
        this.bizActionEntitiesMap = {};
        this.creationRuleEntitiesMap = {};
        this.creationProcessEntitiesMap = {};
        this.writebackRuleEntitiesMap = {};
        this.writebackProcessEntitiesMap = {};
        this.generalTextEntitiesMap = {};
    };
    /**
     * @return {?}
     */
    ExportLogResult.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "aifLogEntities", BpmnModelJsonHelper.ToJson(this.aifLogEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "rtBillCreationProcessEntities", BpmnModelJsonHelper.ToJson(this.rtBillCreationProcessEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "rtBillWritebackProcessEntities", BpmnModelJsonHelper.ToJson(this.rtBillWritebackProcessEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizEventEntities", BpmnModelJsonHelper.ToJson(this.bizEventEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizActionEntities", BpmnModelJsonHelper.ToJson(this.bizActionEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationRuleEntities", BpmnModelJsonHelper.ToJson(this.creationRuleEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationProcessEntities", BpmnModelJsonHelper.ToJson(this.creationProcessEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "writebackRuleEntities", BpmnModelJsonHelper.ToJson(this.writebackRuleEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "writebackProcessEntities", BpmnModelJsonHelper.ToJson(this.writebackProcessEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "generalTextEntities", BpmnModelJsonHelper.ToJson(this.generalTextEntities));
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    ExportLogResult.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var e_1, _a, e_2, _b, e_3, _c, e_4, _d, e_5, _e, e_6, _f, e_7, _g, e_8, _h, e_9, _j, e_10, _k;
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.aifLogEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "aifLogEntities"), AifLogEntity);
        this.rtBillCreationProcessEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "rtBillCreationProcessEntities"), RtBillCreationProcessEntity);
        this.rtBillWritebackProcessEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "rtBillWritebackProcessEntities"), RtBillWritebackProcessEntity);
        this.bizEventEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizEventEntities"), BizEventEntity);
        this.bizActionEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizActionEntities"), BizActionEntity);
        this.creationRuleEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationRuleEntities"), CreationRuleEntity);
        this.creationProcessEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationProcessEntities"), CreationProcessEntity);
        this.writebackRuleEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "writebackRuleEntities"), WritebackRuleEntity);
        this.writebackProcessEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "writebackProcessEntities"), WritebackProcessEntity);
        this.generalTextEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "generalTextEntities"), GeneralTextEntity);
        try {
            for (var _l = tslib_1.__values(this.aifLogEntities), _m = _l.next(); !_m.done; _m = _l.next()) {
                var entity = _m.value;
                this.aifLogEntitiesMap[entity.id] = entity;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_m && !_m.done && (_a = _l.return)) _a.call(_l);
            }
            finally { if (e_1) throw e_1.error; }
        }
        try {
            for (var _o = tslib_1.__values(this.rtBillCreationProcessEntities), _p = _o.next(); !_p.done; _p = _o.next()) {
                var entity = _p.value;
                this.rtBillCreationProcessEntitiesMap[entity.id] = entity;
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_p && !_p.done && (_b = _o.return)) _b.call(_o);
            }
            finally { if (e_2) throw e_2.error; }
        }
        try {
            for (var _q = tslib_1.__values(this.rtBillWritebackProcessEntities), _r = _q.next(); !_r.done; _r = _q.next()) {
                var entity = _r.value;
                this.rtBillWritebackProcessEntitiesMap[entity.id] = entity;
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_r && !_r.done && (_c = _q.return)) _c.call(_q);
            }
            finally { if (e_3) throw e_3.error; }
        }
        try {
            for (var _s = tslib_1.__values(this.bizEventEntities), _t = _s.next(); !_t.done; _t = _s.next()) {
                var entity = _t.value;
                this.bizEventEntitiesMap[entity.id] = entity;
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_t && !_t.done && (_d = _s.return)) _d.call(_s);
            }
            finally { if (e_4) throw e_4.error; }
        }
        try {
            for (var _u = tslib_1.__values(this.bizActionEntities), _v = _u.next(); !_v.done; _v = _u.next()) {
                var entity = _v.value;
                this.bizActionEntitiesMap[entity.id] = entity;
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_v && !_v.done && (_e = _u.return)) _e.call(_u);
            }
            finally { if (e_5) throw e_5.error; }
        }
        try {
            for (var _w = tslib_1.__values(this.creationRuleEntities), _x = _w.next(); !_x.done; _x = _w.next()) {
                var entity = _x.value;
                this.creationRuleEntitiesMap[entity.id] = entity;
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (_x && !_x.done && (_f = _w.return)) _f.call(_w);
            }
            finally { if (e_6) throw e_6.error; }
        }
        try {
            for (var _y = tslib_1.__values(this.creationProcessEntities), _z = _y.next(); !_z.done; _z = _y.next()) {
                var entity = _z.value;
                this.creationProcessEntitiesMap[entity.id] = entity;
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (_z && !_z.done && (_g = _y.return)) _g.call(_y);
            }
            finally { if (e_7) throw e_7.error; }
        }
        try {
            for (var _0 = tslib_1.__values(this.writebackRuleEntities), _1 = _0.next(); !_1.done; _1 = _0.next()) {
                var entity = _1.value;
                this.writebackRuleEntitiesMap[entity.id] = entity;
            }
        }
        catch (e_8_1) { e_8 = { error: e_8_1 }; }
        finally {
            try {
                if (_1 && !_1.done && (_h = _0.return)) _h.call(_0);
            }
            finally { if (e_8) throw e_8.error; }
        }
        try {
            for (var _2 = tslib_1.__values(this.writebackProcessEntities), _3 = _2.next(); !_3.done; _3 = _2.next()) {
                var entity = _3.value;
                this.writebackProcessEntitiesMap[entity.id] = entity;
            }
        }
        catch (e_9_1) { e_9 = { error: e_9_1 }; }
        finally {
            try {
                if (_3 && !_3.done && (_j = _2.return)) _j.call(_2);
            }
            finally { if (e_9) throw e_9.error; }
        }
        try {
            for (var _4 = tslib_1.__values(this.generalTextEntities), _5 = _4.next(); !_5.done; _5 = _4.next()) {
                var entity = _5.value;
                this.generalTextEntitiesMap[entity.id] = entity;
            }
        }
        catch (e_10_1) { e_10 = { error: e_10_1 }; }
        finally {
            try {
                if (_5 && !_5.done && (_k = _4.return)) _k.call(_4);
            }
            finally { if (e_10) throw e_10.error; }
        }
    };
    return ExportLogResult;
}(JsonConvertableImpl));
export { ExportLogResult };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.aifLogEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.rtBillCreationProcessEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.rtBillWritebackProcessEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.bizEventEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.bizActionEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.creationRuleEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.creationProcessEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.writebackRuleEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.writebackProcessEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.generalTextEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.aifLogEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.rtBillCreationProcessEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.rtBillWritebackProcessEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.bizEventEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.bizActionEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.creationRuleEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.creationProcessEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.writebackRuleEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.writebackProcessEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.generalTextEntitiesMap;
}
//# sourceMappingURL=data:application/json;base64,