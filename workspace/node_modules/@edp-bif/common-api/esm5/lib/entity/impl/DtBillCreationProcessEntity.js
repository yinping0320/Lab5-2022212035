/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/DtBillCreationProcessEntity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper } from '../../ref';
import { AbstractBillCreationProcessEntity } from './AbstractBillCreationProcessEntity';
var DtBillCreationProcessEntity = /** @class */ (function (_super) {
    tslib_1.__extends(DtBillCreationProcessEntity, _super);
    function DtBillCreationProcessEntity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @protected
     * @return {?}
     */
    DtBillCreationProcessEntity.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.eventRouterConditionsContent = null;
        this.mappingConditionsContent = null;
        this.mappingModeContent = null;
        this.saveModeContent = null;
        this.formSettingsContent = null;
        this.upBillTrackingSettings = null;
        this.downBillTrackingSettings = null;
        this.reverseWriteRuleContent = null;
        this.taskCenterConfig4Push = null;
        this.taskCenterConfig4Pull = null;
        this.isSupportPull = false;
        this.isSupportPush = false;
    };
    /**
     * @return {?}
     */
    DtBillCreationProcessEntity.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "eventRouterConditionsContent", this.eventRouterConditionsContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingConditionsContent", this.mappingConditionsContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingModeContent", this.mappingModeContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "saveModeContent", this.saveModeContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "formSettingsContent", this.formSettingsContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillTrackingSettings", this.upBillTrackingSettings);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillTrackingSettings", this.downBillTrackingSettings);
        BpmnModelJsonHelper.SetAttributeValue(obj, "reverseWriteRuleContent", this.reverseWriteRuleContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "taskCenterConfig4Push", this.taskCenterConfig4Push);
        BpmnModelJsonHelper.SetAttributeValue(obj, "taskCenterConfig4Pull", this.taskCenterConfig4Pull);
        BpmnModelJsonHelper.SetAttributeValue(obj, "isSupportPull", this.isSupportPull);
        BpmnModelJsonHelper.SetAttributeValue(obj, "isSupportPush", this.isSupportPush);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    DtBillCreationProcessEntity.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.eventRouterConditionsContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "eventRouterConditionsContent");
        this.mappingConditionsContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingConditionsContent");
        this.mappingModeContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingModeContent");
        this.saveModeContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "saveModeContent");
        this.formSettingsContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "formSettingsContent");
        this.upBillTrackingSettings = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillTrackingSettings");
        this.downBillTrackingSettings = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillTrackingSettings");
        this.reverseWriteRuleContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "reverseWriteRuleContent");
        this.taskCenterConfig4Push = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "taskCenterConfig4Push");
        this.taskCenterConfig4Pull = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "taskCenterConfig4Pull");
        this.isSupportPull = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isSupportPull");
        this.isSupportPush = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isSupportPush");
    };
    return DtBillCreationProcessEntity;
}(AbstractBillCreationProcessEntity));
export { DtBillCreationProcessEntity };
if (false) {
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.eventRouterConditionsContent;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.mappingConditionsContent;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.mappingModeContent;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.saveModeContent;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.formSettingsContent;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.upBillTrackingSettings;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.downBillTrackingSettings;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.reverseWriteRuleContent;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.taskCenterConfig4Push;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.taskCenterConfig4Pull;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.isSupportPull;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.isSupportPush;
}
//# sourceMappingURL=data:application/json;base64,