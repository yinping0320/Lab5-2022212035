/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/ThirdSchemaInfoEntity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper, Entity } from "@edp-aif/common-api";
var ThirdSchemaInfoEntity = /** @class */ (function (_super) {
    tslib_1.__extends(ThirdSchemaInfoEntity, _super);
    function ThirdSchemaInfoEntity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @protected
     * @return {?}
     */
    ThirdSchemaInfoEntity.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.schemaCategoryId = null;
        this.schemaCategoryName = null;
        this.schemaConvertorClassTypeName = null;
        this.trackingConfigClassTypeName = null;
        this.suCode = null;
    };
    /**
     * @return {?}
     */
    ThirdSchemaInfoEntity.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "schemaCategoryId", this.schemaCategoryId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "schemaCategoryName", this.schemaCategoryName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "schemaConvertorClassTypeName", this.schemaConvertorClassTypeName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "trackingConfigClassTypeName", this.trackingConfigClassTypeName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "suCode", this.suCode);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    ThirdSchemaInfoEntity.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.schemaCategoryId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "schemaCategoryId");
        this.schemaCategoryName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "schemaCategoryName");
        this.schemaConvertorClassTypeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "schemaConvertorClassTypeName");
        this.trackingConfigClassTypeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "trackingConfigClassTypeName");
        this.suCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "suCode");
    };
    return ThirdSchemaInfoEntity;
}(Entity));
export { ThirdSchemaInfoEntity };
if (false) {
    /** @type {?} */
    ThirdSchemaInfoEntity.prototype.schemaCategoryId;
    /** @type {?} */
    ThirdSchemaInfoEntity.prototype.schemaCategoryName;
    /** @type {?} */
    ThirdSchemaInfoEntity.prototype.schemaConvertorClassTypeName;
    /** @type {?} */
    ThirdSchemaInfoEntity.prototype.trackingConfigClassTypeName;
    /** @type {?} */
    ThirdSchemaInfoEntity.prototype.suCode;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGhpcmRTY2hlbWFJbmZvRW50aXR5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1iaWYvY29tbW9uLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvaW1wbC9UaGlyZFNjaGVtYUluZm9FbnRpdHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBR2xFO0lBQTJDLGlEQUFNO0lBQWpEOztJQXNDQSxDQUFDOzs7OztJQS9CYSxtREFBbUI7Ozs7SUFBN0I7UUFDSSxpQkFBTSxtQkFBbUIsV0FBRSxDQUFDO1FBRTVCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7UUFDN0IsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQztRQUMvQixJQUFJLENBQUMsNEJBQTRCLEdBQUcsSUFBSSxDQUFDO1FBQ3pDLElBQUksQ0FBQywyQkFBMkIsR0FBRyxJQUFJLENBQUM7UUFDeEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7SUFDdkIsQ0FBQzs7OztJQUVNLG1EQUFtQjs7O0lBQTFCOztZQUNRLEdBQUcsR0FBRyxpQkFBTSxtQkFBbUIsV0FBRTtRQUVyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsa0JBQWtCLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDdEYsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLG9CQUFvQixFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQzFGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSw4QkFBOEIsRUFBRSxJQUFJLENBQUMsNEJBQTRCLENBQUMsQ0FBQztRQUM5RyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsNkJBQTZCLEVBQUUsSUFBSSxDQUFDLDJCQUEyQixDQUFDLENBQUM7UUFDNUcsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFFbEUsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVNLGtEQUFrQjs7OztJQUF6QixVQUEwQixHQUFPO1FBQzdCLGlCQUFNLGtCQUFrQixZQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztRQUMvRixJQUFJLENBQUMsa0JBQWtCLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLG9CQUFvQixDQUFDLENBQUM7UUFDbkcsSUFBSSxDQUFDLDRCQUE0QixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSw4QkFBOEIsQ0FBQyxDQUFDO1FBQ3ZILElBQUksQ0FBQywyQkFBMkIsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsNkJBQTZCLENBQUMsQ0FBQztRQUNySCxJQUFJLENBQUMsTUFBTSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUMvRSxDQUFDO0lBQ0wsNEJBQUM7QUFBRCxDQUFDLEFBdENELENBQTJDLE1BQU0sR0FzQ2hEOzs7O0lBckNHLGlEQUF5Qjs7SUFDekIsbURBQTJCOztJQUMzQiw2REFBcUM7O0lBQ3JDLDREQUFvQzs7SUFDcEMsdUNBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCcG1uTW9kZWxKc29uSGVscGVyLCBFbnRpdHkgfSBmcm9tIFwiQGVkcC1haWYvY29tbW9uLWFwaVwiO1xyXG5pbXBvcnQgeyBJVGhpcmRTY2hlbWFJbmZvRW50aXR5IH0gZnJvbSBcIi4uL0lUaGlyZFNjaGVtYUluZm9FbnRpdHlcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBUaGlyZFNjaGVtYUluZm9FbnRpdHkgZXh0ZW5kcyBFbnRpdHkgaW1wbGVtZW50cyBJVGhpcmRTY2hlbWFJbmZvRW50aXR5IHtcclxuICAgIHNjaGVtYUNhdGVnb3J5SWQ6IHN0cmluZztcclxuICAgIHNjaGVtYUNhdGVnb3J5TmFtZTogc3RyaW5nO1xyXG4gICAgc2NoZW1hQ29udmVydG9yQ2xhc3NUeXBlTmFtZTogc3RyaW5nO1xyXG4gICAgdHJhY2tpbmdDb25maWdDbGFzc1R5cGVOYW1lOiBzdHJpbmc7XHJcbiAgICBzdUNvZGU6IHN0cmluZztcclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcblxyXG4gICAgICAgIHRoaXMuc2NoZW1hQ2F0ZWdvcnlJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5zY2hlbWFDYXRlZ29yeU5hbWUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuc2NoZW1hQ29udmVydG9yQ2xhc3NUeXBlTmFtZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy50cmFja2luZ0NvbmZpZ0NsYXNzVHlwZU5hbWUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuc3VDb2RlID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ29udmVydFRvSnNvbk9iamVjdCgpOiB7fSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuXHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwic2NoZW1hQ2F0ZWdvcnlJZFwiLCB0aGlzLnNjaGVtYUNhdGVnb3J5SWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInNjaGVtYUNhdGVnb3J5TmFtZVwiLCB0aGlzLnNjaGVtYUNhdGVnb3J5TmFtZSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwic2NoZW1hQ29udmVydG9yQ2xhc3NUeXBlTmFtZVwiLCB0aGlzLnNjaGVtYUNvbnZlcnRvckNsYXNzVHlwZU5hbWUpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInRyYWNraW5nQ29uZmlnQ2xhc3NUeXBlTmFtZVwiLCB0aGlzLnRyYWNraW5nQ29uZmlnQ2xhc3NUeXBlTmFtZSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwic3VDb2RlXCIsIHRoaXMuc3VDb2RlKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgTG9hZEZyb21Kc29uT2JqZWN0KG9iajoge30pOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy5zY2hlbWFDYXRlZ29yeUlkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJzY2hlbWFDYXRlZ29yeUlkXCIpO1xyXG4gICAgICAgIHRoaXMuc2NoZW1hQ2F0ZWdvcnlOYW1lID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJzY2hlbWFDYXRlZ29yeU5hbWVcIik7XHJcbiAgICAgICAgdGhpcy5zY2hlbWFDb252ZXJ0b3JDbGFzc1R5cGVOYW1lID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJzY2hlbWFDb252ZXJ0b3JDbGFzc1R5cGVOYW1lXCIpO1xyXG4gICAgICAgIHRoaXMudHJhY2tpbmdDb25maWdDbGFzc1R5cGVOYW1lID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJ0cmFja2luZ0NvbmZpZ0NsYXNzVHlwZU5hbWVcIik7XHJcbiAgICAgICAgdGhpcy5zdUNvZGUgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInN1Q29kZVwiKTtcclxuICAgIH1cclxufSJdfQ==