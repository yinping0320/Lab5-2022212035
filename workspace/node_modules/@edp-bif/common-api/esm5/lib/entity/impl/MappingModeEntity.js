/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/MappingModeEntity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { JsonConvertableImpl, BpmnModelJsonHelper } from "../../ref";
import { MappingMode } from '../MappingMode';
/**
 * 映射方式实体类。
 */
var /**
 * 映射方式实体类。
 */
MappingModeEntity = /** @class */ (function (_super) {
    tslib_1.__extends(MappingModeEntity, _super);
    function MappingModeEntity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @protected
     * @return {?}
     */
    MappingModeEntity.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.mappingMode = null;
        this.content = null;
        this.mappingRuleContent = null;
        this.componentContent = null;
        this.voActionContent = null;
        this.expressionContent = null;
    };
    /**
     * @return {?}
     */
    MappingModeEntity.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingMode", this.mappingMode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "content", this.content);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingRuleContent", this.mappingRuleContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "componentContent", this.componentContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voActionContent", this.voActionContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "expressionContent", this.expressionContent);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    MappingModeEntity.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.mappingMode = MappingMode[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingMode")];
        this.content = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "content");
        this.mappingRuleContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingRuleContent");
        this.componentContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "componentContent");
        this.voActionContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voActionContent");
        this.expressionContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "expressionContent");
    };
    return MappingModeEntity;
}(JsonConvertableImpl));
/**
 * 映射方式实体类。
 */
export { MappingModeEntity };
if (false) {
    /** @type {?} */
    MappingModeEntity.prototype.mappingMode;
    /** @type {?} */
    MappingModeEntity.prototype.content;
    /** @type {?} */
    MappingModeEntity.prototype.mappingRuleContent;
    /** @type {?} */
    MappingModeEntity.prototype.componentContent;
    /** @type {?} */
    MappingModeEntity.prototype.voActionContent;
    /** @type {?} */
    MappingModeEntity.prototype.expressionContent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFwcGluZ01vZGVFbnRpdHkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWJpZi9jb21tb24tYXBpLyIsInNvdXJjZXMiOlsibGliL2VudGl0eS9pbXBsL01hcHBpbmdNb2RlRW50aXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUVyRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7QUFLN0M7Ozs7SUFBdUMsNkNBQW1CO0lBQTFEOztJQTBDQSxDQUFDOzs7OztJQWxDYSwrQ0FBbUI7Ozs7SUFBN0I7UUFDSSxpQkFBTSxtQkFBbUIsV0FBRSxDQUFDO1FBRTVCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUM7UUFDL0IsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQztRQUM3QixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztRQUM1QixJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDO0lBQ2xDLENBQUM7Ozs7SUFFTSwrQ0FBbUI7OztJQUExQjs7WUFDUSxHQUFHLEdBQUcsaUJBQU0sbUJBQW1CLFdBQUU7UUFFckMsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDNUUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDcEUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLG9CQUFvQixFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQzFGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxrQkFBa0IsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUN0RixtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ3BGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUV4RixPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRU0sOENBQWtCOzs7O0lBQXpCLFVBQTBCLEdBQU87UUFDN0IsaUJBQU0sa0JBQWtCLFlBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUMsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGFBQWEsQ0FBQyxDQUFDLENBQUM7UUFDbEcsSUFBSSxDQUFDLE9BQU8sR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDN0UsSUFBSSxDQUFDLGtCQUFrQixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO1FBQ25HLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztRQUMvRixJQUFJLENBQUMsZUFBZSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO1FBQzdGLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztJQUNyRyxDQUFDO0lBQ0wsd0JBQUM7QUFBRCxDQUFDLEFBMUNELENBQXVDLG1CQUFtQixHQTBDekQ7Ozs7Ozs7SUF6Q0csd0NBQXlCOztJQUN6QixvQ0FBZ0I7O0lBQ2hCLCtDQUEyQjs7SUFDM0IsNkNBQXlCOztJQUN6Qiw0Q0FBd0I7O0lBQ3hCLDhDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEpzb25Db252ZXJ0YWJsZUltcGwsIEJwbW5Nb2RlbEpzb25IZWxwZXIgfSBmcm9tIFwiLi4vLi4vcmVmXCI7XHJcbmltcG9ydCB7IElNYXBwaW5nTW9kZUVudGl0eSB9IGZyb20gJy4uL0lNYXBwaW5nTW9kZUVudGl0eSc7XHJcbmltcG9ydCB7IE1hcHBpbmdNb2RlIH0gZnJvbSAnLi4vTWFwcGluZ01vZGUnO1xyXG5cclxuLyoqXHJcbiAqIOaYoOWwhOaWueW8j+WunuS9k+exu+OAglxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIE1hcHBpbmdNb2RlRW50aXR5IGV4dGVuZHMgSnNvbkNvbnZlcnRhYmxlSW1wbCBpbXBsZW1lbnRzIElNYXBwaW5nTW9kZUVudGl0eSB7XHJcbiAgICBtYXBwaW5nTW9kZTogTWFwcGluZ01vZGU7XHJcbiAgICBjb250ZW50OiBzdHJpbmc7XHJcbiAgICBtYXBwaW5nUnVsZUNvbnRlbnQ6IHN0cmluZztcclxuICAgIGNvbXBvbmVudENvbnRlbnQ6IHN0cmluZztcclxuICAgIHZvQWN0aW9uQ29udGVudDogc3RyaW5nO1xyXG4gICAgZXhwcmVzc2lvbkNvbnRlbnQ6IHN0cmluZztcclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcblxyXG4gICAgICAgIHRoaXMubWFwcGluZ01vZGUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuY29udGVudCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5tYXBwaW5nUnVsZUNvbnRlbnQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuY29tcG9uZW50Q29udGVudCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy52b0FjdGlvbkNvbnRlbnQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuZXhwcmVzc2lvbkNvbnRlbnQgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IHt9IHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJtYXBwaW5nTW9kZVwiLCB0aGlzLm1hcHBpbmdNb2RlKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJjb250ZW50XCIsIHRoaXMuY29udGVudCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwibWFwcGluZ1J1bGVDb250ZW50XCIsIHRoaXMubWFwcGluZ1J1bGVDb250ZW50KTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJjb21wb25lbnRDb250ZW50XCIsIHRoaXMuY29tcG9uZW50Q29udGVudCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwidm9BY3Rpb25Db250ZW50XCIsIHRoaXMudm9BY3Rpb25Db250ZW50KTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJleHByZXNzaW9uQ29udGVudFwiLCB0aGlzLmV4cHJlc3Npb25Db250ZW50KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgTG9hZEZyb21Kc29uT2JqZWN0KG9iajoge30pOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy5tYXBwaW5nTW9kZSA9IE1hcHBpbmdNb2RlW0JwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwibWFwcGluZ01vZGVcIildO1xyXG4gICAgICAgIHRoaXMuY29udGVudCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiY29udGVudFwiKTtcclxuICAgICAgICB0aGlzLm1hcHBpbmdSdWxlQ29udGVudCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwibWFwcGluZ1J1bGVDb250ZW50XCIpO1xyXG4gICAgICAgIHRoaXMuY29tcG9uZW50Q29udGVudCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiY29tcG9uZW50Q29udGVudFwiKTtcclxuICAgICAgICB0aGlzLnZvQWN0aW9uQ29udGVudCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwidm9BY3Rpb25Db250ZW50XCIpO1xyXG4gICAgICAgIHRoaXMuZXhwcmVzc2lvbkNvbnRlbnQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImV4cHJlc3Npb25Db250ZW50XCIpO1xyXG4gICAgfVxyXG59Il19