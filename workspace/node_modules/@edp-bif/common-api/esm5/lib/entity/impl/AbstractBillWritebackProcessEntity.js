/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/AbstractBillWritebackProcessEntity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper } from '../../ref';
import { AbstractBillProcessEntity } from './AbstractBillProcessEntity';
/**
 * 单据回写流实体类。
 */
var /**
 * 单据回写流实体类。
 */
AbstractBillWritebackProcessEntity = /** @class */ (function (_super) {
    tslib_1.__extends(AbstractBillWritebackProcessEntity, _super);
    function AbstractBillWritebackProcessEntity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @protected
     * @return {?}
     */
    AbstractBillWritebackProcessEntity.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.writebackRuleId = null;
        this.writebackProcessId = null;
        this.upBillVoProxyMetadataId = null;
        this.upBillVoProxyId = null;
        this.upBillVoProxyMetadataRootId = null;
        this.upBillVoProxyMetadataParentId = null;
        this.upBillVoProxyMetadataIdPath = null;
        this.upBillVoProxyRootId = null;
        this.upBillVoProxyParentId = null;
        this.upBillVoProxyIdPath = null;
    };
    /**
     * @return {?}
     */
    AbstractBillWritebackProcessEntity.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "writebackRuleId", this.writebackRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "writebackProcessId", this.writebackProcessId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillVoProxyMetadataId", this.upBillVoProxyMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillVoProxyId", this.upBillVoProxyId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillVoProxyMetadataRootId", this.upBillVoProxyMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillVoProxyMetadataParentId", this.upBillVoProxyMetadataParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillVoProxyMetadataIdPath", this.upBillVoProxyMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillVoProxyRootId", this.upBillVoProxyRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillVoProxyParentId", this.upBillVoProxyParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillVoProxyIdPath", this.upBillVoProxyIdPath);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    AbstractBillWritebackProcessEntity.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.writebackRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "writebackRuleId");
        this.writebackProcessId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "writebackProcessId");
        this.upBillVoProxyMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillVoProxyMetadataId");
        this.upBillVoProxyId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillVoProxyId");
        this.upBillVoProxyMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillVoProxyMetadataRootId");
        this.upBillVoProxyMetadataParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillVoProxyMetadataParentId");
        this.upBillVoProxyMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillVoProxyMetadataIdPath");
        this.upBillVoProxyRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillVoProxyRootId");
        this.upBillVoProxyParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillVoProxyParentId");
        this.upBillVoProxyIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillVoProxyIdPath");
    };
    return AbstractBillWritebackProcessEntity;
}(AbstractBillProcessEntity));
/**
 * 单据回写流实体类。
 */
export { AbstractBillWritebackProcessEntity };
if (false) {
    /** @type {?} */
    AbstractBillWritebackProcessEntity.prototype.upBillVoProxyMetadataRootId;
    /** @type {?} */
    AbstractBillWritebackProcessEntity.prototype.upBillVoProxyMetadataParentId;
    /** @type {?} */
    AbstractBillWritebackProcessEntity.prototype.upBillVoProxyMetadataIdPath;
    /** @type {?} */
    AbstractBillWritebackProcessEntity.prototype.upBillVoProxyRootId;
    /** @type {?} */
    AbstractBillWritebackProcessEntity.prototype.upBillVoProxyParentId;
    /** @type {?} */
    AbstractBillWritebackProcessEntity.prototype.upBillVoProxyIdPath;
    /** @type {?} */
    AbstractBillWritebackProcessEntity.prototype.upBillVoProxyMetadataId;
    /** @type {?} */
    AbstractBillWritebackProcessEntity.prototype.upBillVoProxyId;
    /** @type {?} */
    AbstractBillWritebackProcessEntity.prototype.writebackRuleId;
    /** @type {?} */
    AbstractBillWritebackProcessEntity.prototype.writebackProcessId;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWJzdHJhY3RCaWxsV3JpdGViYWNrUHJvY2Vzc0VudGl0eS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL2NvbW1vbi1hcGkvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L2ltcGwvQWJzdHJhY3RCaWxsV3JpdGViYWNrUHJvY2Vzc0VudGl0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDaEQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sNkJBQTZCLENBQUE7Ozs7QUFNdkU7Ozs7SUFBd0QsOERBQXlCO0lBQWpGOztJQTBEQSxDQUFDOzs7OztJQTlDYSxnRUFBbUI7Ozs7SUFBN0I7UUFDSSxpQkFBTSxtQkFBbUIsV0FBRSxDQUFDO1FBRTVCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO1FBQzVCLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUM7UUFDL0IsSUFBSSxDQUFDLHVCQUF1QixHQUFHLElBQUksQ0FBQztRQUNwQyxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztRQUM1QixJQUFJLENBQUMsMkJBQTJCLEdBQUcsSUFBSSxDQUFDO1FBQ3hDLElBQUksQ0FBQyw2QkFBNkIsR0FBRyxJQUFJLENBQUM7UUFDMUMsSUFBSSxDQUFDLDJCQUEyQixHQUFHLElBQUksQ0FBQztRQUN4QyxJQUFJLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxJQUFJLENBQUM7UUFDbEMsSUFBSSxDQUFDLG1CQUFtQixHQUFHLElBQUksQ0FBQztJQUNwQyxDQUFDOzs7O0lBRU0sZ0VBQW1COzs7SUFBMUI7O1lBQ1EsR0FBRyxHQUFPLGlCQUFNLG1CQUFtQixXQUFFO1FBRXpDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENB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Z0VBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnBtbk1vZGVsSnNvbkhlbHBlciB9IGZyb20gJy4uLy4uL3JlZic7XHJcbmltcG9ydCB7IEFic3RyYWN0QmlsbFByb2Nlc3NFbnRpdHkgfSBmcm9tICcuL0Fic3RyYWN0QmlsbFByb2Nlc3NFbnRpdHknXHJcbmltcG9ydCB7IElCaWxsV3JpdGViYWNrUHJvY2Vzc0VudGl0eSB9IGZyb20gJy4uL0lCaWxsV3JpdGViYWNrUHJvY2Vzc0VudGl0eSc7XHJcblxyXG4vKipcclxuICog5Y2V5o2u5Zue5YaZ5rWB5a6e5L2T57G744CCXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQWJzdHJhY3RCaWxsV3JpdGViYWNrUHJvY2Vzc0VudGl0eSBleHRlbmRzIEFic3RyYWN0QmlsbFByb2Nlc3NFbnRpdHkgaW1wbGVtZW50cyBJQmlsbFdyaXRlYmFja1Byb2Nlc3NFbnRpdHkge1xyXG4gICAgdXBCaWxsVm9Qcm94eU1ldGFkYXRhUm9vdElkOiBzdHJpbmc7XHJcbiAgICB1cEJpbGxWb1Byb3h5TWV0YWRhdGFQYXJlbnRJZDogc3RyaW5nO1xyXG4gICAgdXBCaWxsVm9Qcm94eU1ldGFkYXRhSWRQYXRoOiBzdHJpbmc7XHJcbiAgICB1cEJpbGxWb1Byb3h5Um9vdElkOiBzdHJpbmc7XHJcbiAgICB1cEJpbGxWb1Byb3h5UGFyZW50SWQ6IHN0cmluZztcclxuICAgIHVwQmlsbFZvUHJveHlJZFBhdGg6IHN0cmluZztcclxuICAgIHVwQmlsbFZvUHJveHlNZXRhZGF0YUlkOiBzdHJpbmc7XHJcbiAgICB1cEJpbGxWb1Byb3h5SWQ6IHN0cmluZztcclxuICAgIHdyaXRlYmFja1J1bGVJZDogc3RyaW5nO1xyXG4gICAgd3JpdGViYWNrUHJvY2Vzc0lkOiBzdHJpbmc7XHJcblxyXG4gICAgcHJvdGVjdGVkIFJlc2V0QmVmb3JlTG9hZEZyb20oKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuUmVzZXRCZWZvcmVMb2FkRnJvbSgpO1xyXG5cclxuICAgICAgICB0aGlzLndyaXRlYmFja1J1bGVJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy53cml0ZWJhY2tQcm9jZXNzSWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMudXBCaWxsVm9Qcm94eU1ldGFkYXRhSWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMudXBCaWxsVm9Qcm94eUlkID0gbnVsbDtcclxuICAgICAgICB0aGlzLnVwQmlsbFZvUHJveHlNZXRhZGF0YVJvb3RJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy51cEJpbGxWb1Byb3h5TWV0YWRhdGFQYXJlbnRJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy51cEJpbGxWb1Byb3h5TWV0YWRhdGFJZFBhdGggPSBudWxsO1xyXG4gICAgICAgIHRoaXMudXBCaWxsVm9Qcm94eVJvb3RJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy51cEJpbGxWb1Byb3h5UGFyZW50SWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMudXBCaWxsVm9Qcm94eUlkUGF0aCA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENvbnZlcnRUb0pzb25PYmplY3QoKToge30ge1xyXG4gICAgICAgIGxldCBvYmo6IHt9ID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJ3cml0ZWJhY2tSdWxlSWRcIiwgdGhpcy53cml0ZWJhY2tSdWxlSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIndyaXRlYmFja1Byb2Nlc3NJZFwiLCB0aGlzLndyaXRlYmFja1Byb2Nlc3NJZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwidXBCaWxsVm9Qcm94eU1ldGFkYXRhSWRcIiwgdGhpcy51cEJpbGxWb1Byb3h5TWV0YWRhdGFJZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwidXBCaWxsVm9Qcm94eUlkXCIsIHRoaXMudXBCaWxsVm9Qcm94eUlkKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJ1cEJpbGxWb1Byb3h5TWV0YWRhdGFSb290SWRcIiwgdGhpcy51cEJpbGxWb1Byb3h5TWV0YWRhdGFSb290SWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInVwQmlsbFZvUHJveHlNZXRhZGF0YVBhcmVudElkXCIsIHRoaXMudXBCaWxsVm9Qcm94eU1ldGFkYXRhUGFyZW50SWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInVwQmlsbFZvUHJveHlNZXRhZGF0YUlkUGF0aFwiLCB0aGlzLnVwQmlsbFZvUHJveHlNZXRhZGF0YUlkUGF0aCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwidXBCaWxsVm9Qcm94eVJvb3RJZFwiLCB0aGlzLnVwQmlsbFZvUHJveHlSb290SWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInVwQmlsbFZvUHJveHlQYXJlbnRJZFwiLCB0aGlzLnVwQmlsbFZvUHJveHlQYXJlbnRJZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwidXBCaWxsVm9Qcm94eUlkUGF0aFwiLCB0aGlzLnVwQmlsbFZvUHJveHlJZFBhdGgpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLndyaXRlYmFja1J1bGVJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwid3JpdGViYWNrUnVsZUlkXCIpO1xyXG4gICAgICAgIHRoaXMud3JpdGViYWNrUHJvY2Vzc0lkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJ3cml0ZWJhY2tQcm9jZXNzSWRcIik7XHJcbiAgICAgICAgdGhpcy51cEJpbGxWb1Byb3h5TWV0YWRhdGFJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwidXBCaWxsVm9Qcm94eU1ldGFkYXRhSWRcIik7XHJcbiAgICAgICAgdGhpcy51cEJpbGxWb1Byb3h5SWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInVwQmlsbFZvUHJveHlJZFwiKTtcclxuICAgICAgICB0aGlzLnVwQmlsbFZvUHJveHlNZXRhZGF0YVJvb3RJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwidXBCaWxsVm9Qcm94eU1ldGFkYXRhUm9vdElkXCIpO1xyXG4gICAgICAgIHRoaXMudXBCaWxsVm9Qcm94eU1ldGFkYXRhUGFyZW50SWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInVwQmlsbFZvUHJveHlNZXRhZGF0YVBhcmVudElkXCIpO1xyXG4gICAgICAgIHRoaXMudXBCaWxsVm9Qcm94eU1ldGFkYXRhSWRQYXRoID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJ1cEJpbGxWb1Byb3h5TWV0YWRhdGFJZFBhdGhcIik7XHJcbiAgICAgICAgdGhpcy51cEJpbGxWb1Byb3h5Um9vdElkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJ1cEJpbGxWb1Byb3h5Um9vdElkXCIpO1xyXG4gICAgICAgIHRoaXMudXBCaWxsVm9Qcm94eVBhcmVudElkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJ1cEJpbGxWb1Byb3h5UGFyZW50SWRcIik7XHJcbiAgICAgICAgdGhpcy51cEJpbGxWb1Byb3h5SWRQYXRoID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJ1cEJpbGxWb1Byb3h5SWRQYXRoXCIpO1xyXG4gICAgfVxyXG59Il19