/**
 * @fileoverview added by tsickle
 * Generated from: lib/slim-entity/impl/AbstractRtSlimBillProcessEntity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BpmnModelJsonHelper } from "../../ref";
import { AbstractSlimBillProcessEntity } from "./AbstractSlimBillProcessEntity";
/**
 * 运行时简化单据流实体类。
 * @abstract
 */
export class AbstractRtSlimBillProcessEntity extends AbstractSlimBillProcessEntity {
    constructor() {
        super(...arguments);
        this.isEnabled = false;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        this.isEnabled = false;
        this.eventRouterConditionsId = null;
        this.mappingConditionsId = null;
        this.mappingModeId = null;
        this.saveModeId = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "isEnabled", this.isEnabled);
        BpmnModelJsonHelper.SetAttributeValue(obj, "eventRouterConditionsId", this.eventRouterConditionsId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingConditionsId", this.mappingConditionsId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingModeId", this.mappingModeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "saveModeId", this.saveModeId);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.isEnabled = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isEnabled");
        this.eventRouterConditionsId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "eventRouterConditionsId");
        this.mappingConditionsId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingConditionsId");
        this.mappingModeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingModeId");
        this.saveModeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "saveModeId");
    }
}
if (false) {
    /** @type {?} */
    AbstractRtSlimBillProcessEntity.prototype.isEnabled;
    /** @type {?} */
    AbstractRtSlimBillProcessEntity.prototype.eventRouterConditionsId;
    /** @type {?} */
    AbstractRtSlimBillProcessEntity.prototype.mappingConditionsId;
    /** @type {?} */
    AbstractRtSlimBillProcessEntity.prototype.mappingModeId;
    /** @type {?} */
    AbstractRtSlimBillProcessEntity.prototype.saveModeId;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWJzdHJhY3RSdFNsaW1CaWxsUHJvY2Vzc0VudGl0eS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL2NvbW1vbi1hcGkvIiwic291cmNlcyI6WyJsaWIvc2xpbS1lbnRpdHkvaW1wbC9BYnN0cmFjdFJ0U2xpbUJpbGxQcm9jZXNzRW50aXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2hELE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDOzs7OztBQU1oRixNQUFNLE9BQWdCLCtCQUFnQyxTQUFRLDZCQUE2QjtJQUEzRjs7UUFDSSxjQUFTLEdBQVksS0FBSyxDQUFDO0lBZ0MvQixDQUFDOzs7OztJQTFCYSxtQkFBbUI7UUFDekIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFDdkIsSUFBSSxDQUFDLHVCQUF1QixHQUFHLElBQUksQ0FBQztRQUNwQyxJQUFJLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO1FBQzFCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO0lBQzNCLENBQUM7Ozs7SUFFTSxtQkFBbUI7O1lBQ2xCLEdBQUcsR0FBTyxLQUFLLENBQUMsbUJBQW1CLEVBQUU7UUFDekMsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDeEUsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLHlCQUF5QixFQUFFLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1FBQ3BHLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxxQkFBcUIsRUFBRSxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUM1RixtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsZUFBZSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUNoRixtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsWUFBWSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUMxRSxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRU0sa0JBQWtCLENBQUMsR0FBTztRQUM3QixLQUFLLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLFNBQVMsR0FBRyxtQkFBbUIsQ0FBQywwQkFBMEIsQ0FBQyxHQUFHLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFDbEYsSUFBSSxDQUFDLHVCQUF1QixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDO1FBQzdHLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUscUJBQXFCLENBQUMsQ0FBQztRQUNyRyxJQUFJLENBQUMsYUFBYSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxlQUFlLENBQUMsQ0FBQztRQUN6RixJQUFJLENBQUMsVUFBVSxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUN2RixDQUFDO0NBQ0o7OztJQWhDRyxvREFBMkI7O0lBQzNCLGtFQUFnQzs7SUFDaEMsOERBQTRCOztJQUM1Qix3REFBc0I7O0lBQ3RCLHFEQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJwbW5Nb2RlbEpzb25IZWxwZXIgfSBmcm9tIFwiLi4vLi4vcmVmXCI7XHJcbmltcG9ydCB7IEFic3RyYWN0U2xpbUJpbGxQcm9jZXNzRW50aXR5IH0gZnJvbSBcIi4vQWJzdHJhY3RTbGltQmlsbFByb2Nlc3NFbnRpdHlcIjtcclxuaW1wb3J0IHsgSVJ0U2xpbUJpbGxQcm9jZXNzRW50aXR5IH0gZnJvbSBcIi4uL0lSdFNsaW1CaWxsUHJvY2Vzc0VudGl0eVwiO1xyXG5cclxuLyoqXHJcbiAqIOi/kOihjOaXtueugOWMluWNleaNrua1geWunuS9k+exu+OAglxyXG4gKi9cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEFic3RyYWN0UnRTbGltQmlsbFByb2Nlc3NFbnRpdHkgZXh0ZW5kcyBBYnN0cmFjdFNsaW1CaWxsUHJvY2Vzc0VudGl0eSBpbXBsZW1lbnRzIElSdFNsaW1CaWxsUHJvY2Vzc0VudGl0eSB7XHJcbiAgICBpc0VuYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIGV2ZW50Um91dGVyQ29uZGl0aW9uc0lkOiBzdHJpbmc7XHJcbiAgICBtYXBwaW5nQ29uZGl0aW9uc0lkOiBzdHJpbmc7XHJcbiAgICBtYXBwaW5nTW9kZUlkOiBzdHJpbmc7XHJcbiAgICBzYXZlTW9kZUlkOiBzdHJpbmc7XHJcblxyXG4gICAgcHJvdGVjdGVkIFJlc2V0QmVmb3JlTG9hZEZyb20oKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5pc0VuYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmV2ZW50Um91dGVyQ29uZGl0aW9uc0lkID0gbnVsbDtcclxuICAgICAgICB0aGlzLm1hcHBpbmdDb25kaXRpb25zSWQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMubWFwcGluZ01vZGVJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5zYXZlTW9kZUlkID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ29udmVydFRvSnNvbk9iamVjdCgpOiB7fSB7XHJcbiAgICAgICAgbGV0IG9iajoge30gPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiaXNFbmFibGVkXCIsIHRoaXMuaXNFbmFibGVkKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJldmVudFJvdXRlckNvbmRpdGlvbnNJZFwiLCB0aGlzLmV2ZW50Um91dGVyQ29uZGl0aW9uc0lkKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJtYXBwaW5nQ29uZGl0aW9uc0lkXCIsIHRoaXMubWFwcGluZ0NvbmRpdGlvbnNJZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwibWFwcGluZ01vZGVJZFwiLCB0aGlzLm1hcHBpbmdNb2RlSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInNhdmVNb2RlSWRcIiwgdGhpcy5zYXZlTW9kZUlkKTtcclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG4gICAgICAgIHRoaXMuaXNFbmFibGVkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzQm9vbGVhbihvYmosIFwiaXNFbmFibGVkXCIpO1xyXG4gICAgICAgIHRoaXMuZXZlbnRSb3V0ZXJDb25kaXRpb25zSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImV2ZW50Um91dGVyQ29uZGl0aW9uc0lkXCIpO1xyXG4gICAgICAgIHRoaXMubWFwcGluZ0NvbmRpdGlvbnNJZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwibWFwcGluZ0NvbmRpdGlvbnNJZFwiKTtcclxuICAgICAgICB0aGlzLm1hcHBpbmdNb2RlSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcIm1hcHBpbmdNb2RlSWRcIik7XHJcbiAgICAgICAgdGhpcy5zYXZlTW9kZUlkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJzYXZlTW9kZUlkXCIpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==