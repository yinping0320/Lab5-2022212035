/**
 * @fileoverview added by tsickle
 * Generated from: lib/content/impl/RtBillCreationProcessContent.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BpmnModelJsonHelper } from '../../ref';
import { AbstractRtBillProcessContent } from './AbstractRtBillProcessContent';
import { RtBillCreationProcessEntity } from '../../entity/impl/RtBillCreationProcessEntity';
/**
 * 单据生单流内容类。
 */
export class RtBillCreationProcessContent extends AbstractRtBillProcessContent {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.formSettings = null;
        this.upBillTrackingSettings = null;
        this.downBillTrackingSettings = null;
        this.reverseWriteRuleContent = null;
        this.taskCenterConfig4Push = null;
        this.taskCenterConfig4Pull = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "formSettings", this.formSettings);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillTrackingSettings", this.upBillTrackingSettings);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillTrackingSettings", this.downBillTrackingSettings);
        BpmnModelJsonHelper.SetAttributeValue(obj, "reverseWriteRuleContent", this.reverseWriteRuleContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "taskCenterConfig4Push", this.taskCenterConfig4Push);
        BpmnModelJsonHelper.SetAttributeValue(obj, "taskCenterConfig4Pull", this.taskCenterConfig4Pull);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.formSettings = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "formSettings");
        this.upBillTrackingSettings = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillTrackingSettings");
        this.downBillTrackingSettings = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillTrackingSettings");
        this.reverseWriteRuleContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "reverseWriteRuleContent");
        this.taskCenterConfig4Push = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "taskCenterConfig4Push");
        this.taskCenterConfig4Pull = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "taskCenterConfig4Pull");
    }
    /**
     * @protected
     * @return {?}
     */
    getEntityClass() {
        return RtBillCreationProcessEntity;
    }
}
if (false) {
    /** @type {?} */
    RtBillCreationProcessContent.prototype.formSettings;
    /** @type {?} */
    RtBillCreationProcessContent.prototype.upBillTrackingSettings;
    /** @type {?} */
    RtBillCreationProcessContent.prototype.downBillTrackingSettings;
    /** @type {?} */
    RtBillCreationProcessContent.prototype.reverseWriteRuleContent;
    /** @type {?} */
    RtBillCreationProcessContent.prototype.taskCenterConfig4Push;
    /** @type {?} */
    RtBillCreationProcessContent.prototype.taskCenterConfig4Pull;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUnRCaWxsQ3JlYXRpb25Qcm9jZXNzQ29udGVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL2NvbW1vbi1hcGkvIiwic291cmNlcyI6WyJsaWIvY29udGVudC9pbXBsL1J0QmlsbENyZWF0aW9uUHJvY2Vzc0NvbnRlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDaEQsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDOUUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sK0NBQStDLENBQUM7Ozs7QUFPNUYsTUFBTSxPQUFPLDRCQUE2QixTQUFRLDRCQUEwRDs7Ozs7SUFROUYsbUJBQW1CO1FBQ3pCLEtBQUssQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBRTVCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxJQUFJLENBQUM7UUFDbkMsSUFBSSxDQUFDLHdCQUF3QixHQUFHLElBQUksQ0FBQztRQUNyQyxJQUFJLENBQUMsdUJBQXVCLEdBQUcsSUFBSSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxJQUFJLENBQUM7UUFDbEMsSUFBSSxDQUFDLHFCQUFxQixHQUFHLElBQUksQ0FBQztJQUN0QyxDQUFDOzs7O0lBRU0sbUJBQW1COztZQUNsQixHQUFHLEdBQUcsS0FBSyxDQUFDLG1CQUFtQixFQUFFO1FBRXJDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxjQUFjLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzlFLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSx3QkFBd0IsRUFBRSxJQUFJLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUNsRyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsMEJBQTBCLEVBQUUsSUFBSSxDQUFDLHdCQUF3QixDQUFDLENBQUM7UUFDdEcsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLHlCQUF5QixFQUFFLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1FBQ3BHLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSx1QkFBdUIsRUFBRSxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQztRQUNoRyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsdUJBQXVCLEVBQUUsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFFaEcsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVNLGtCQUFrQixDQUFDLEdBQU87UUFDN0IsS0FBSyxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxZQUFZLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGNBQWMsQ0FBQyxDQUFDO1FBQ3ZGLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsd0JBQXdCLENBQUMsQ0FBQztRQUMzRyxJQUFJLENBQUMsd0JBQXdCLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLDBCQUEwQixDQUFDLENBQUM7UUFDL0csSUFBSSxDQUFDLHVCQUF1QixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDO1FBQzdHLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztRQUN6RyxJQUFJLENBQUMscUJBQXFCLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLHVCQUF1QixDQUFDLENBQUM7SUFDN0csQ0FBQzs7Ozs7SUFFUyxjQUFjO1FBQ3BCLE9BQU8sMkJBQTJCLENBQUM7SUFDdkMsQ0FBQztDQUNKOzs7SUE3Q0csb0RBQXFCOztJQUNyQiw4REFBK0I7O0lBQy9CLGdFQUFpQzs7SUFDakMsK0RBQWdDOztJQUNoQyw2REFBOEI7O0lBQzlCLDZEQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJwbW5Nb2RlbEpzb25IZWxwZXIgfSBmcm9tICcuLi8uLi9yZWYnO1xyXG5pbXBvcnQgeyBBYnN0cmFjdFJ0QmlsbFByb2Nlc3NDb250ZW50IH0gZnJvbSAnLi9BYnN0cmFjdFJ0QmlsbFByb2Nlc3NDb250ZW50JztcclxuaW1wb3J0IHsgUnRCaWxsQ3JlYXRpb25Qcm9jZXNzRW50aXR5IH0gZnJvbSAnLi4vLi4vZW50aXR5L2ltcGwvUnRCaWxsQ3JlYXRpb25Qcm9jZXNzRW50aXR5JztcclxuaW1wb3J0IHsgSVJ0QmlsbENyZWF0aW9uUHJvY2Vzc0NvbnRlbnQgfSBmcm9tICcuLi9JUnRCaWxsQ3JlYXRpb25Qcm9jZXNzQ29udGVudCc7XHJcbmltcG9ydCB7IElSdEJpbGxDcmVhdGlvblByb2Nlc3NFbnRpdHkgfSBmcm9tICcuLi8uLi9lbnRpdHkvSVJ0QmlsbENyZWF0aW9uUHJvY2Vzc0VudGl0eSc7XHJcblxyXG4vKipcclxuICog5Y2V5o2u55Sf5Y2V5rWB5YaF5a6557G744CCXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgUnRCaWxsQ3JlYXRpb25Qcm9jZXNzQ29udGVudCBleHRlbmRzIEFic3RyYWN0UnRCaWxsUHJvY2Vzc0NvbnRlbnQ8SVJ0QmlsbENyZWF0aW9uUHJvY2Vzc0VudGl0eT4gaW1wbGVtZW50cyBJUnRCaWxsQ3JlYXRpb25Qcm9jZXNzQ29udGVudCB7XHJcbiAgICBmb3JtU2V0dGluZ3M6IHN0cmluZztcclxuICAgIHVwQmlsbFRyYWNraW5nU2V0dGluZ3M6IHN0cmluZztcclxuICAgIGRvd25CaWxsVHJhY2tpbmdTZXR0aW5nczogc3RyaW5nO1xyXG4gICAgcmV2ZXJzZVdyaXRlUnVsZUNvbnRlbnQ6IHN0cmluZztcclxuICAgIHRhc2tDZW50ZXJDb25maWc0UHVzaDogc3RyaW5nO1xyXG4gICAgdGFza0NlbnRlckNvbmZpZzRQdWxsOiBzdHJpbmc7XHJcblxyXG4gICAgcHJvdGVjdGVkIFJlc2V0QmVmb3JlTG9hZEZyb20oKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuUmVzZXRCZWZvcmVMb2FkRnJvbSgpO1xyXG5cclxuICAgICAgICB0aGlzLmZvcm1TZXR0aW5ncyA9IG51bGw7XHJcbiAgICAgICAgdGhpcy51cEJpbGxUcmFja2luZ1NldHRpbmdzID0gbnVsbDtcclxuICAgICAgICB0aGlzLmRvd25CaWxsVHJhY2tpbmdTZXR0aW5ncyA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5yZXZlcnNlV3JpdGVSdWxlQ29udGVudCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy50YXNrQ2VudGVyQ29uZmlnNFB1c2ggPSBudWxsO1xyXG4gICAgICAgIHRoaXMudGFza0NlbnRlckNvbmZpZzRQdWxsID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ29udmVydFRvSnNvbk9iamVjdCgpOiB7fSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuXHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiZm9ybVNldHRpbmdzXCIsIHRoaXMuZm9ybVNldHRpbmdzKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJ1cEJpbGxUcmFja2luZ1NldHRpbmdzXCIsIHRoaXMudXBCaWxsVHJhY2tpbmdTZXR0aW5ncyk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiZG93bkJpbGxUcmFja2luZ1NldHRpbmdzXCIsIHRoaXMuZG93bkJpbGxUcmFja2luZ1NldHRpbmdzKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJyZXZlcnNlV3JpdGVSdWxlQ29udGVudFwiLCB0aGlzLnJldmVyc2VXcml0ZVJ1bGVDb250ZW50KTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJ0YXNrQ2VudGVyQ29uZmlnNFB1c2hcIiwgdGhpcy50YXNrQ2VudGVyQ29uZmlnNFB1c2gpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInRhc2tDZW50ZXJDb25maWc0UHVsbFwiLCB0aGlzLnRhc2tDZW50ZXJDb25maWc0UHVsbCk7XHJcblxyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IHt9KTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMuZm9ybVNldHRpbmdzID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJmb3JtU2V0dGluZ3NcIik7XHJcbiAgICAgICAgdGhpcy51cEJpbGxUcmFja2luZ1NldHRpbmdzID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJ1cEJpbGxUcmFja2luZ1NldHRpbmdzXCIpO1xyXG4gICAgICAgIHRoaXMuZG93bkJpbGxUcmFja2luZ1NldHRpbmdzID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJkb3duQmlsbFRyYWNraW5nU2V0dGluZ3NcIik7XHJcbiAgICAgICAgdGhpcy5yZXZlcnNlV3JpdGVSdWxlQ29udGVudCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwicmV2ZXJzZVdyaXRlUnVsZUNvbnRlbnRcIik7XHJcbiAgICAgICAgdGhpcy50YXNrQ2VudGVyQ29uZmlnNFB1c2ggPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInRhc2tDZW50ZXJDb25maWc0UHVzaFwiKTtcclxuICAgICAgICB0aGlzLnRhc2tDZW50ZXJDb25maWc0UHVsbCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwidGFza0NlbnRlckNvbmZpZzRQdWxsXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBnZXRFbnRpdHlDbGFzcygpOiB0eXBlb2YgUnRCaWxsQ3JlYXRpb25Qcm9jZXNzRW50aXR5IHtcclxuICAgICAgICByZXR1cm4gUnRCaWxsQ3JlYXRpb25Qcm9jZXNzRW50aXR5O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==