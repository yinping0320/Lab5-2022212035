/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/AbstractBillCpAndWpEntity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Entity, BpmnModelJsonHelper } from '../../ref';
export class AbstractBillCpAndWpEntity extends Entity {
    constructor() {
        super(...arguments);
        this.sysInit = false;
        this.isCreationProcess = false;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.code = null;
        this.name = null;
        this.persistenceVersion = null;
        this.parentId = null;
        this.upBillVoId = null;
        this.downBillVoId = null;
        this.sysInit = false;
        this.isCreationProcess = false;
        this.originId = null;
        this.rootId = null;
        this.colI18nValues = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "code", this.code);
        BpmnModelJsonHelper.SetAttributeValue(obj, "name", this.name);
        BpmnModelJsonHelper.SetAttributeValue(obj, "persistenceVersion", this.persistenceVersion);
        BpmnModelJsonHelper.SetAttributeValue(obj, "parentId", this.parentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillVoId", this.upBillVoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillVoId", this.downBillVoId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sysInit", this.sysInit);
        BpmnModelJsonHelper.SetAttributeValue(obj, "isCreationProcess", this.isCreationProcess);
        BpmnModelJsonHelper.SetAttributeValue(obj, "originId", this.originId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "rootId", this.rootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "colI18nValues", this.colI18nValues);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.code = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "code");
        this.name = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "name");
        this.persistenceVersion = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "persistenceVersion");
        this.parentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "parentId");
        this.upBillVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillVoId");
        this.downBillVoId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillVoId");
        this.sysInit = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "sysInit");
        this.isCreationProcess = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isCreationProcess");
        this.originId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "originId");
        this.rootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "rootId");
        this.colI18nValues = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "colI18nValues");
    }
}
if (false) {
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.code;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.name;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.persistenceVersion;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.parentId;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.upBillVoId;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.downBillVoId;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.sysInit;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.isCreationProcess;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.originId;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.rootId;
    /** @type {?} */
    AbstractBillCpAndWpEntity.prototype.colI18nValues;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWJzdHJhY3RCaWxsQ3BBbmRXcEVudGl0eS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL2NvbW1vbi1hcGkvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L2ltcGwvQWJzdHJhY3RCaWxsQ3BBbmRXcEVudGl0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFHeEQsTUFBTSxPQUFPLHlCQUEwQixTQUFRLE1BQU07SUFBckQ7O1FBT0UsWUFBTyxHQUFZLEtBQUssQ0FBQztRQUN6QixzQkFBaUIsR0FBWSxLQUFLLENBQUM7SUFzRHJDLENBQUM7Ozs7O0lBakRXLG1CQUFtQjtRQUMzQixLQUFLLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDO1FBQy9CLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxLQUFLLENBQUM7UUFDL0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDckIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDbkIsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUM7SUFDNUIsQ0FBQzs7OztJQUVNLG1CQUFtQjs7WUFDcEIsR0FBRyxHQUFHLEtBQUssQ0FBQyxtQkFBbUIsRUFBRTtRQUVyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsTUFBTSxFQUFF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O0lBQ25CLGlEQUFxQjs7SUFDckIsNENBQXlCOztJQUN6QixzREFBbUM7O0lBQ25DLDZDQUFpQjs7SUFDakIsMkNBQWU7O0lBQ2Ysa0RBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW50aXR5LCBCcG1uTW9kZWxKc29uSGVscGVyIH0gZnJvbSAnLi4vLi4vcmVmJztcclxuaW1wb3J0IHsgSUJpbGxDcEFuZFdwRW50aXR5IH0gZnJvbSAnLi4vSUJpbGxDcEFuZFdwRW50aXR5JztcclxuXHJcbmV4cG9ydCBjbGFzcyBBYnN0cmFjdEJpbGxDcEFuZFdwRW50aXR5IGV4dGVuZHMgRW50aXR5IGltcGxlbWVudHMgSUJpbGxDcEFuZFdwRW50aXR5IHtcclxuICBjb2RlOiBzdHJpbmc7XHJcbiAgbmFtZTogc3RyaW5nO1xyXG4gIHBlcnNpc3RlbmNlVmVyc2lvbjogc3RyaW5nO1xyXG4gIHBhcmVudElkOiBzdHJpbmc7XHJcbiAgdXBCaWxsVm9JZDogc3RyaW5nO1xyXG4gIGRvd25CaWxsVm9JZDogc3RyaW5nO1xyXG4gIHN5c0luaXQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBpc0NyZWF0aW9uUHJvY2VzczogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIG9yaWdpbklkOiBzdHJpbmc7XHJcbiAgcm9vdElkOiBzdHJpbmc7XHJcbiAgY29sSTE4blZhbHVlczogYW55O1xyXG5cclxuICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpOiB2b2lkIHtcclxuICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICB0aGlzLmNvZGUgPSBudWxsO1xyXG4gICAgdGhpcy5uYW1lID0gbnVsbDtcclxuICAgIHRoaXMucGVyc2lzdGVuY2VWZXJzaW9uID0gbnVsbDtcclxuICAgIHRoaXMucGFyZW50SWQgPSBudWxsO1xyXG4gICAgdGhpcy51cEJpbGxWb0lkID0gbnVsbDtcclxuICAgIHRoaXMuZG93bkJpbGxWb0lkID0gbnVsbDtcclxuICAgIHRoaXMuc3lzSW5pdCA9IGZhbHNlO1xyXG4gICAgdGhpcy5pc0NyZWF0aW9uUHJvY2VzcyA9IGZhbHNlO1xyXG4gICAgdGhpcy5vcmlnaW5JZCA9IG51bGw7XHJcbiAgICB0aGlzLnJvb3RJZCA9IG51bGw7XHJcbiAgICB0aGlzLmNvbEkxOG5WYWx1ZXMgPSBudWxsO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIENvbnZlcnRUb0pzb25PYmplY3QoKToge30ge1xyXG4gICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuXHJcbiAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJjb2RlXCIsIHRoaXMuY29kZSk7XHJcbiAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJuYW1lXCIsIHRoaXMubmFtZSk7XHJcbiAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJwZXJzaXN0ZW5jZVZlcnNpb25cIiwgdGhpcy5wZXJzaXN0ZW5jZVZlcnNpb24pO1xyXG4gICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwicGFyZW50SWRcIiwgdGhpcy5wYXJlbnRJZCk7XHJcbiAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJ1cEJpbGxWb0lkXCIsIHRoaXMudXBCaWxsVm9JZCk7XHJcbiAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJkb3duQmlsbFZvSWRcIiwgdGhpcy5kb3duQmlsbFZvSWQpO1xyXG4gICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwic3lzSW5pdFwiLCB0aGlzLnN5c0luaXQpO1xyXG4gICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiaXNDcmVhdGlvblByb2Nlc3NcIiwgdGhpcy5pc0NyZWF0aW9uUHJvY2Vzcyk7XHJcbiAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJvcmlnaW5JZFwiLCB0aGlzLm9yaWdpbklkKTtcclxuICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInJvb3RJZFwiLCB0aGlzLnJvb3RJZCk7XHJcbiAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJjb2xJMThuVmFsdWVzXCIsIHRoaXMuY29sSTE4blZhbHVlcyk7XHJcblxyXG4gICAgcmV0dXJuIG9iajtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcblxyXG4gICAgdGhpcy5jb2RlID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJjb2RlXCIpO1xyXG4gICAgdGhpcy5uYW1lID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJuYW1lXCIpO1xyXG4gICAgdGhpcy5wZXJzaXN0ZW5jZVZlcnNpb24gPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInBlcnNpc3RlbmNlVmVyc2lvblwiKTtcclxuICAgIHRoaXMucGFyZW50SWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInBhcmVudElkXCIpO1xyXG4gICAgdGhpcy51cEJpbGxWb0lkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJ1cEJpbGxWb0lkXCIpO1xyXG4gICAgdGhpcy5kb3duQmlsbFZvSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImRvd25CaWxsVm9JZFwiKTtcclxuICAgIHRoaXMuc3lzSW5pdCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc0Jvb2xlYW4ob2JqLCBcInN5c0luaXRcIik7XHJcbiAgICB0aGlzLmlzQ3JlYXRpb25Qcm9jZXNzID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzQm9vbGVhbihvYmosIFwiaXNDcmVhdGlvblByb2Nlc3NcIik7XHJcbiAgICB0aGlzLm9yaWdpbklkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJvcmlnaW5JZFwiKTtcclxuICAgIHRoaXMucm9vdElkID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJyb290SWRcIik7XHJcbiAgICB0aGlzLmNvbEkxOG5WYWx1ZXMgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImNvbEkxOG5WYWx1ZXNcIik7XHJcbiAgfVxyXG59XHJcbiJdfQ==