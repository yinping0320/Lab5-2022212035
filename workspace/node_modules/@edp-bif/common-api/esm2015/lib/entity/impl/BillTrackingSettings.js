/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/BillTrackingSettings.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { JsonConvertableImpl, BpmnModelJsonHelper } from '../../ref';
import { BillTrackingDataShownMode } from '../BillTrackingDataShownMode';
import { BillTrackingNodeShownMode } from '../BillTrackingNodeShownMode';
export class BillTrackingSettings extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.billTrackingNodeShownMode = BillTrackingNodeShownMode.DEFAULT;
        this.billTrackingDataShownMode = BillTrackingDataShownMode.DEFAULT;
    }
    ;
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.billTrackingNodeShownMode = BillTrackingNodeShownMode.DEFAULT;
        this.billNodeName = null;
        this.billNodeShownStyle = null;
        this.summaryFieldsInfo = null;
        this.billTrackingDataShownMode = BillTrackingDataShownMode.DEFAULT;
        this.customFieldContent = null;
        this.customFormContent = null;
        this.version = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "billNodeName", this.billNodeName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "billTrackingNodeShownMode", this.billTrackingNodeShownMode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "billNodeShownStyle", this.billNodeShownStyle);
        BpmnModelJsonHelper.SetAttributeValue(obj, "summaryFieldsInfo", this.summaryFieldsInfo);
        BpmnModelJsonHelper.SetAttributeValue(obj, "billTrackingDataShownMode", this.billTrackingDataShownMode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "customFieldContent", this.customFieldContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "customFormContent", this.customFormContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "version", this.version);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.billNodeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "billNodeName");
        this.billTrackingNodeShownMode = BillTrackingDataShownMode[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "billTrackingNodeShownMode")];
        this.billNodeShownStyle = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "billNodeShownStyle");
        this.summaryFieldsInfo = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "summaryFieldsInfo");
        this.billTrackingDataShownMode = BillTrackingDataShownMode[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "billTrackingDataShownMode")];
        this.customFieldContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "customFieldContent");
        this.customFormContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "customFormContent");
        this.version = (/** @type {?} */ (BpmnModelJsonHelper.GetAttributeValueAsString(obj, "version")));
    }
}
if (false) {
    /** @type {?} */
    BillTrackingSettings.prototype.billNodeName;
    /** @type {?} */
    BillTrackingSettings.prototype.billTrackingNodeShownMode;
    /** @type {?} */
    BillTrackingSettings.prototype.billNodeShownStyle;
    /** @type {?} */
    BillTrackingSettings.prototype.summaryFieldsInfo;
    /** @type {?} */
    BillTrackingSettings.prototype.billTrackingDataShownMode;
    /** @type {?} */
    BillTrackingSettings.prototype.customFieldContent;
    /** @type {?} */
    BillTrackingSettings.prototype.customFormContent;
    /**
     * 旧版本此字段为null，新版本为1.0
     * @type {?}
     */
    BillTrackingSettings.prototype.version;
    /* Skipping unhandled member: ;*/
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmlsbFRyYWNraW5nU2V0dGluZ3MuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWJpZi9jb21tb24tYXBpLyIsInNvdXJjZXMiOlsibGliL2VudGl0eS9pbXBsL0JpbGxUcmFja2luZ1NldHRpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLG1CQUFtQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3pFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBRXpFLE1BQU0sT0FBTyxvQkFBcUIsU0FBUSxtQkFBbUI7SUFBN0Q7O1FBRUksOEJBQXlCLEdBQThCLHlCQUF5QixDQUFDLE9BQU8sQ0FBQztRQUt6Riw4QkFBeUIsR0FBOEIseUJBQXlCLENBQUMsT0FBTyxDQUFDO0lBc0Q3RixDQUFDO0lBdEQ0RixDQUFDOzs7OztJQVFoRixtQkFBbUI7UUFDekIsS0FBSyxDQUFDLG1CQUFtQixFQUFFLENBQUM7UUFFNUIsSUFBSSxDQUFDLHlCQUF5QixHQUFHLHlCQUF5QixDQUFDLE9BQU8sQ0FBQztRQUNuRSxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztRQUN6QixJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDO1FBRS9CLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUM7UUFFOUIsSUFBSSxDQUFDLHlCQUF5QixHQUFHLHlCQUF5QixDQUFDLE9BQU8sQ0FBQztRQUNuRSxJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDO1FBQy9CLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUM7UUFDOUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7SUFDeEIsQ0FBQzs7OztJQUVNLG1CQUFtQjs7WUFDbEIsR0FBRyxHQUFHLEtBQUssQ0FBQyxtQkFBbUIsRUFBRTtRQUVyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsY0FBYyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM5RSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsMkJBQTJCLEVBQUUsSUFBSSxDQUFDLHlCQUF5QixDQUFDLENBQUM7UUFDeEcsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLG9CQUFvQixFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBRTFGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUV4RixtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsMkJBQTJCLEVBQUUsSUFBSSxDQUFDLHlCQUF5QixDQUFDLENBQUM7UUFDeEcsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLG9CQUFvQixFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQzFGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUN4RixtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUVwRSxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRU0sa0JBQWtCLENBQUMsR0FBTztRQUM3QixLQUFLLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLFlBQVksR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsY0FBYyxDQUFDLENBQUM7UUFDdkYsSUFBSSxDQUFDLHlCQUF5QixHQUFHLHlCQUF5QixDQUFDLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSwyQkFBMkIsQ0FBQyxDQUFDLENBQUM7UUFDNUksSUFBSSxDQUFDLGtCQUFrQixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO1FBRW5HLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztRQUVqRyxJQUFJLENBQUMseUJBQXlCLEdBQUcseUJBQXlCLENBQUMsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLDJCQUEyQixDQUFDLENBQUMsQ0FBQztRQUM1SSxJQUFJLENBQUMsa0JBQWtCLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLG9CQUFvQixDQUFDLENBQUM7UUFDbkcsSUFBSSxDQUFDLGlCQUFpQixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO1FBQ2pHLElBQUksQ0FBQyxPQUFPLEdBQUcsbUJBQUEsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxFQUFPLENBQUM7SUFDeEYsQ0FBQztDQUNKOzs7SUE1REcsNENBQXFCOztJQUNyQix5REFBeUY7O0lBQ3pGLGtEQUEyQjs7SUFFM0IsaURBQTBCOztJQUUxQix5REFBeUY7O0lBQ3pGLGtEQUEyQjs7SUFDM0IsaURBQTBCOzs7OztJQUkxQix1Q0FBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEpzb25Db252ZXJ0YWJsZUltcGwsIEJwbW5Nb2RlbEpzb25IZWxwZXIgfSBmcm9tICcuLi8uLi9yZWYnO1xyXG5pbXBvcnQgeyBCaWxsVHJhY2tpbmdEYXRhU2hvd25Nb2RlIH0gZnJvbSAnLi4vQmlsbFRyYWNraW5nRGF0YVNob3duTW9kZSc7XHJcbmltcG9ydCB7IEJpbGxUcmFja2luZ05vZGVTaG93bk1vZGUgfSBmcm9tICcuLi9CaWxsVHJhY2tpbmdOb2RlU2hvd25Nb2RlJztcclxuXHJcbmV4cG9ydCBjbGFzcyBCaWxsVHJhY2tpbmdTZXR0aW5ncyBleHRlbmRzIEpzb25Db252ZXJ0YWJsZUltcGwge1xyXG4gICAgYmlsbE5vZGVOYW1lOiBzdHJpbmc7XHJcbiAgICBiaWxsVHJhY2tpbmdOb2RlU2hvd25Nb2RlOiBCaWxsVHJhY2tpbmdOb2RlU2hvd25Nb2RlID0gQmlsbFRyYWNraW5nTm9kZVNob3duTW9kZS5ERUZBVUxUO1xyXG4gICAgYmlsbE5vZGVTaG93blN0eWxlOiBzdHJpbmc7XHJcblxyXG4gICAgc3VtbWFyeUZpZWxkc0luZm86IHN0cmluZztcclxuXHJcbiAgICBiaWxsVHJhY2tpbmdEYXRhU2hvd25Nb2RlOiBCaWxsVHJhY2tpbmdEYXRhU2hvd25Nb2RlID0gQmlsbFRyYWNraW5nRGF0YVNob3duTW9kZS5ERUZBVUxUOztcclxuICAgIGN1c3RvbUZpZWxkQ29udGVudDogc3RyaW5nO1xyXG4gICAgY3VzdG9tRm9ybUNvbnRlbnQ6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICog5pen54mI5pys5q2k5a2X5q615Li6bnVsbO+8jOaWsOeJiOacrOS4ujEuMFxyXG4gICAgICovXHJcbiAgICB2ZXJzaW9uOiBcIjEuMFwiO1xyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICAgICAgdGhpcy5iaWxsVHJhY2tpbmdOb2RlU2hvd25Nb2RlID0gQmlsbFRyYWNraW5nTm9kZVNob3duTW9kZS5ERUZBVUxUO1xyXG4gICAgICAgIHRoaXMuYmlsbE5vZGVOYW1lID0gbnVsbDtcclxuICAgICAgICB0aGlzLmJpbGxOb2RlU2hvd25TdHlsZSA9IG51bGw7XHJcblxyXG4gICAgICAgIHRoaXMuc3VtbWFyeUZpZWxkc0luZm8gPSBudWxsO1xyXG5cclxuICAgICAgICB0aGlzLmJpbGxUcmFja2luZ0RhdGFTaG93bk1vZGUgPSBCaWxsVHJhY2tpbmdEYXRhU2hvd25Nb2RlLkRFRkFVTFQ7XHJcbiAgICAgICAgdGhpcy5jdXN0b21GaWVsZENvbnRlbnQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuY3VzdG9tRm9ybUNvbnRlbnQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMudmVyc2lvbiA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENvbnZlcnRUb0pzb25PYmplY3QoKToge30ge1xyXG4gICAgICAgIGxldCBvYmogPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcblxyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImJpbGxOb2RlTmFtZVwiLCB0aGlzLmJpbGxOb2RlTmFtZSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiYmlsbFRyYWNraW5nTm9kZVNob3duTW9kZVwiLCB0aGlzLmJpbGxUcmFja2luZ05vZGVTaG93bk1vZGUpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImJpbGxOb2RlU2hvd25TdHlsZVwiLCB0aGlzLmJpbGxOb2RlU2hvd25TdHlsZSk7XHJcblxyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInN1bW1hcnlGaWVsZHNJbmZvXCIsIHRoaXMuc3VtbWFyeUZpZWxkc0luZm8pO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJiaWxsVHJhY2tpbmdEYXRhU2hvd25Nb2RlXCIsIHRoaXMuYmlsbFRyYWNraW5nRGF0YVNob3duTW9kZSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiY3VzdG9tRmllbGRDb250ZW50XCIsIHRoaXMuY3VzdG9tRmllbGRDb250ZW50KTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJjdXN0b21Gb3JtQ29udGVudFwiLCB0aGlzLmN1c3RvbUZvcm1Db250ZW50KTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJ2ZXJzaW9uXCIsIHRoaXMudmVyc2lvbik7XHJcblxyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IHt9KTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMuYmlsbE5vZGVOYW1lID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJiaWxsTm9kZU5hbWVcIik7XHJcbiAgICAgICAgdGhpcy5iaWxsVHJhY2tpbmdOb2RlU2hvd25Nb2RlID0gQmlsbFRyYWNraW5nRGF0YVNob3duTW9kZVtCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImJpbGxUcmFja2luZ05vZGVTaG93bk1vZGVcIildO1xyXG4gICAgICAgIHRoaXMuYmlsbE5vZGVTaG93blN0eWxlID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJiaWxsTm9kZVNob3duU3R5bGVcIik7XHJcblxyXG4gICAgICAgIHRoaXMuc3VtbWFyeUZpZWxkc0luZm8gPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInN1bW1hcnlGaWVsZHNJbmZvXCIpO1xyXG5cclxuICAgICAgICB0aGlzLmJpbGxUcmFja2luZ0RhdGFTaG93bk1vZGUgPSBCaWxsVHJhY2tpbmdEYXRhU2hvd25Nb2RlW0JwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiYmlsbFRyYWNraW5nRGF0YVNob3duTW9kZVwiKV07XHJcbiAgICAgICAgdGhpcy5jdXN0b21GaWVsZENvbnRlbnQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImN1c3RvbUZpZWxkQ29udGVudFwiKTtcclxuICAgICAgICB0aGlzLmN1c3RvbUZvcm1Db250ZW50ID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJjdXN0b21Gb3JtQ29udGVudFwiKTtcclxuICAgICAgICB0aGlzLnZlcnNpb24gPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInZlcnNpb25cIikgYXMgYW55O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==