/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/MappingModeEntity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { JsonConvertableImpl, BpmnModelJsonHelper } from "../../ref";
import { MappingMode } from '../MappingMode';
/**
 * 映射方式实体类。
 */
export class MappingModeEntity extends JsonConvertableImpl {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.mappingMode = null;
        this.content = null;
        this.mappingRuleContent = null;
        this.componentContent = null;
        this.voActionContent = null;
        this.expressionContent = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingMode", this.mappingMode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "content", this.content);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingRuleContent", this.mappingRuleContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "componentContent", this.componentContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "voActionContent", this.voActionContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "expressionContent", this.expressionContent);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.mappingMode = MappingMode[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingMode")];
        this.content = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "content");
        this.mappingRuleContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingRuleContent");
        this.componentContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "componentContent");
        this.voActionContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "voActionContent");
        this.expressionContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "expressionContent");
    }
}
if (false) {
    /** @type {?} */
    MappingModeEntity.prototype.mappingMode;
    /** @type {?} */
    MappingModeEntity.prototype.content;
    /** @type {?} */
    MappingModeEntity.prototype.mappingRuleContent;
    /** @type {?} */
    MappingModeEntity.prototype.componentContent;
    /** @type {?} */
    MappingModeEntity.prototype.voActionContent;
    /** @type {?} */
    MappingModeEntity.prototype.expressionContent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFwcGluZ01vZGVFbnRpdHkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWJpZi9jb21tb24tYXBpLyIsInNvdXJjZXMiOlsibGliL2VudGl0eS9pbXBsL01hcHBpbmdNb2RlRW50aXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLG1CQUFtQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRXJFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7OztBQUs3QyxNQUFNLE9BQU8saUJBQWtCLFNBQVEsbUJBQW1COzs7OztJQVE1QyxtQkFBbUI7UUFDekIsS0FBSyxDQUFDLG1CQUFtQixFQUFFLENBQUM7UUFFNUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7UUFDeEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDcEIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQztRQUMvQixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDO1FBQzdCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO1FBQzVCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUM7SUFDbEMsQ0FBQzs7OztJQUVNLG1CQUFtQjs7WUFDbEIsR0FBRyxHQUFHLEtBQUssQ0FBQyxtQkFBbUIsRUFBRTtRQUVyQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUM1RSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNwRSxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFDMUYsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGtCQUFrQixFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ3RGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDcEYsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBRXhGLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFTSxrQkFBa0IsQ0FBQyxHQUFPO1FBQzdCLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQztRQUNsRyxJQUFJLENBQUMsT0FBTyxHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUM3RSxJQUFJLENBQUMsa0JBQWtCLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLG9CQUFvQixDQUFDLENBQUM7UUFDbkcsSUFBSSxDQUFDLGdCQUFnQixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO1FBQy9GLElBQUksQ0FBQyxlQUFlLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGlCQUFpQixDQUFDLENBQUM7UUFDN0YsSUFBSSxDQUFDLGlCQUFpQixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0lBQ3JHLENBQUM7Q0FDSjs7O0lBekNHLHdDQUF5Qjs7SUFDekIsb0NBQWdCOztJQUNoQiwrQ0FBMkI7O0lBQzNCLDZDQUF5Qjs7SUFDekIsNENBQXdCOztJQUN4Qiw4Q0FBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBKc29uQ29udmVydGFibGVJbXBsLCBCcG1uTW9kZWxKc29uSGVscGVyIH0gZnJvbSBcIi4uLy4uL3JlZlwiO1xyXG5pbXBvcnQgeyBJTWFwcGluZ01vZGVFbnRpdHkgfSBmcm9tICcuLi9JTWFwcGluZ01vZGVFbnRpdHknO1xyXG5pbXBvcnQgeyBNYXBwaW5nTW9kZSB9IGZyb20gJy4uL01hcHBpbmdNb2RlJztcclxuXHJcbi8qKlxyXG4gKiDmmKDlsITmlrnlvI/lrp7kvZPnsbvjgIJcclxuICovXHJcbmV4cG9ydCBjbGFzcyBNYXBwaW5nTW9kZUVudGl0eSBleHRlbmRzIEpzb25Db252ZXJ0YWJsZUltcGwgaW1wbGVtZW50cyBJTWFwcGluZ01vZGVFbnRpdHkge1xyXG4gICAgbWFwcGluZ01vZGU6IE1hcHBpbmdNb2RlO1xyXG4gICAgY29udGVudDogc3RyaW5nO1xyXG4gICAgbWFwcGluZ1J1bGVDb250ZW50OiBzdHJpbmc7XHJcbiAgICBjb21wb25lbnRDb250ZW50OiBzdHJpbmc7XHJcbiAgICB2b0FjdGlvbkNvbnRlbnQ6IHN0cmluZztcclxuICAgIGV4cHJlc3Npb25Db250ZW50OiBzdHJpbmc7XHJcblxyXG4gICAgcHJvdGVjdGVkIFJlc2V0QmVmb3JlTG9hZEZyb20oKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuUmVzZXRCZWZvcmVMb2FkRnJvbSgpO1xyXG5cclxuICAgICAgICB0aGlzLm1hcHBpbmdNb2RlID0gbnVsbDtcclxuICAgICAgICB0aGlzLmNvbnRlbnQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMubWFwcGluZ1J1bGVDb250ZW50ID0gbnVsbDtcclxuICAgICAgICB0aGlzLmNvbXBvbmVudENvbnRlbnQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMudm9BY3Rpb25Db250ZW50ID0gbnVsbDtcclxuICAgICAgICB0aGlzLmV4cHJlc3Npb25Db250ZW50ID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ29udmVydFRvSnNvbk9iamVjdCgpOiB7fSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuXHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwibWFwcGluZ01vZGVcIiwgdGhpcy5tYXBwaW5nTW9kZSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiY29udGVudFwiLCB0aGlzLmNvbnRlbnQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIm1hcHBpbmdSdWxlQ29udGVudFwiLCB0aGlzLm1hcHBpbmdSdWxlQ29udGVudCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiY29tcG9uZW50Q29udGVudFwiLCB0aGlzLmNvbXBvbmVudENvbnRlbnQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcInZvQWN0aW9uQ29udGVudFwiLCB0aGlzLnZvQWN0aW9uQ29udGVudCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiZXhwcmVzc2lvbkNvbnRlbnRcIiwgdGhpcy5leHByZXNzaW9uQ29udGVudCk7XHJcblxyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IHt9KTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMubWFwcGluZ01vZGUgPSBNYXBwaW5nTW9kZVtCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcIm1hcHBpbmdNb2RlXCIpXTtcclxuICAgICAgICB0aGlzLmNvbnRlbnQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImNvbnRlbnRcIik7XHJcbiAgICAgICAgdGhpcy5tYXBwaW5nUnVsZUNvbnRlbnQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcIm1hcHBpbmdSdWxlQ29udGVudFwiKTtcclxuICAgICAgICB0aGlzLmNvbXBvbmVudENvbnRlbnQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImNvbXBvbmVudENvbnRlbnRcIik7XHJcbiAgICAgICAgdGhpcy52b0FjdGlvbkNvbnRlbnQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInZvQWN0aW9uQ29udGVudFwiKTtcclxuICAgICAgICB0aGlzLmV4cHJlc3Npb25Db250ZW50ID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJleHByZXNzaW9uQ29udGVudFwiKTtcclxuICAgIH1cclxufSJdfQ==