/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/DocumentRelationEntity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BpmnModelJsonHelper, Entity } from '@edp-aif/common-api';
import { AssociationLocation } from './AssociationLocation';
import { RelationType } from './RelationType';
import { TrackingMode } from './TrackingMode';
import { TrackingType } from './TrackingType';
export class DocumentRelationEntity extends Entity {
    constructor() {
        super(...arguments);
        this.sysInit = false;
        this.trackingType = TrackingType.DEFAULT;
        this.trackingMode = TrackingMode.DEFAULT;
        this.associationLocation = AssociationLocation.DEFAULT;
        this.relationType = RelationType.DEFAULT;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.code = null;
        this.name = null;
        this.sysInit = false;
        this.upDocuTypeId = null;
        this.downDocuTypeId = null;
        this.trackingType = TrackingType.DEFAULT;
        this.trackingMode = TrackingMode.DEFAULT;
        this.associationLocation = AssociationLocation.DEFAULT;
        this.associationSuCode = null;
        this.associationSchemaId = null;
        this.associationDataSourceType = null;
        this.relationType = RelationType.DEFAULT;
        this.colI18nValues = null;
        this.trackingComponentId = null;
        this.upConditionExpressionText = null;
        this.downConditionExpressionText = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, 'code', this.code);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'name', this.name);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'sysInit', this.sysInit);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'upDocuTypeId', this.upDocuTypeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'downDocuTypeId', this.downDocuTypeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'trackingType', this.trackingType);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'trackingMode', this.trackingMode);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'associationLocation', this.associationLocation);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'associationSuCode', this.associationSuCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'associationSchemaId', this.associationSchemaId);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'associationDataSourceType', this.associationDataSourceType);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'relationType', this.relationType);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'colI18nValues', this.colI18nValues);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'trackingComponentId', this.trackingComponentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'upConditionExpressionText', this.upConditionExpressionText);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'downConditionExpressionText', this.downConditionExpressionText);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.code = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'code');
        this.name = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'name');
        this.sysInit = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, 'sysInit');
        this.upDocuTypeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'upDocuTypeId');
        this.downDocuTypeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'downDocuTypeId');
        this.trackingType = TrackingType[BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'trackingType')];
        this.trackingMode = TrackingMode[BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'trackingMode')];
        this.associationLocation = AssociationLocation[BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'associationLocation')];
        this.associationSuCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'associationSuCode');
        this.associationSchemaId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'associationSchemaId');
        this.associationDataSourceType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'associationDataSourceType');
        this.relationType = RelationType[BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'relationType')];
        this.colI18nValues = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'colI18nValues');
        this.trackingComponentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'trackingComponentId');
        this.upConditionExpressionText = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'upConditionExpressionText');
        this.downConditionExpressionText = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'downConditionExpressionText');
    }
}
if (false) {
    /** @type {?} */
    DocumentRelationEntity.prototype.code;
    /** @type {?} */
    DocumentRelationEntity.prototype.name;
    /** @type {?} */
    DocumentRelationEntity.prototype.sysInit;
    /** @type {?} */
    DocumentRelationEntity.prototype.upDocuTypeId;
    /** @type {?} */
    DocumentRelationEntity.prototype.downDocuTypeId;
    /** @type {?} */
    DocumentRelationEntity.prototype.trackingType;
    /** @type {?} */
    DocumentRelationEntity.prototype.trackingMode;
    /** @type {?} */
    DocumentRelationEntity.prototype.associationLocation;
    /** @type {?} */
    DocumentRelationEntity.prototype.associationSuCode;
    /** @type {?} */
    DocumentRelationEntity.prototype.associationSchemaId;
    /** @type {?} */
    DocumentRelationEntity.prototype.associationDataSourceType;
    /** @type {?} */
    DocumentRelationEntity.prototype.relationType;
    /** @type {?} */
    DocumentRelationEntity.prototype.colI18nValues;
    /** @type {?} */
    DocumentRelationEntity.prototype.trackingComponentId;
    /** @type {?} */
    DocumentRelationEntity.prototype.upConditionExpressionText;
    /** @type {?} */
    DocumentRelationEntity.prototype.downConditionExpressionText;
}
//# sourceMappingURL=data:application/json;base64,