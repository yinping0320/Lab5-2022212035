/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/ExportLogResult.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { JsonConvertableImpl, BpmnModelJsonHelper, AifLogEntity, BizEventEntity, BizActionEntity, CreationRuleEntity, CreationProcessEntity, WritebackRuleEntity, WritebackProcessEntity, GeneralTextEntity } from '@edp-aif/common-api';
import { RtBillCreationProcessEntity } from './RtBillCreationProcessEntity';
import { RtBillWritebackProcessEntity } from './RtBillWritebackProcessEntity';
export class ExportLogResult extends JsonConvertableImpl {
    constructor() {
        super(...arguments);
        this.aifLogEntities = new Array();
        this.rtBillCreationProcessEntities = new Array();
        this.rtBillWritebackProcessEntities = new Array();
        this.bizEventEntities = new Array();
        this.bizActionEntities = new Array();
        this.creationRuleEntities = new Array();
        this.creationProcessEntities = new Array();
        this.writebackRuleEntities = new Array();
        this.writebackProcessEntities = new Array();
        this.generalTextEntities = new Array();
        this.aifLogEntitiesMap = {};
        this.rtBillCreationProcessEntitiesMap = {};
        this.rtBillWritebackProcessEntitiesMap = {};
        this.bizEventEntitiesMap = {};
        this.bizActionEntitiesMap = {};
        this.creationRuleEntitiesMap = {};
        this.creationProcessEntitiesMap = {};
        this.writebackRuleEntitiesMap = {};
        this.writebackProcessEntitiesMap = {};
        this.generalTextEntitiesMap = {};
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.aifLogEntities = [];
        this.rtBillCreationProcessEntities = [];
        this.rtBillWritebackProcessEntities = [];
        this.bizEventEntities = [];
        this.bizActionEntities = [];
        this.creationRuleEntities = [];
        this.creationProcessEntities = [];
        this.writebackRuleEntities = [];
        this.writebackProcessEntities = [];
        this.generalTextEntities = [];
        this.aifLogEntitiesMap = {};
        this.rtBillCreationProcessEntitiesMap = {};
        this.rtBillWritebackProcessEntitiesMap = {};
        this.bizEventEntitiesMap = {};
        this.bizActionEntitiesMap = {};
        this.creationRuleEntitiesMap = {};
        this.creationProcessEntitiesMap = {};
        this.writebackRuleEntitiesMap = {};
        this.writebackProcessEntitiesMap = {};
        this.generalTextEntitiesMap = {};
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "aifLogEntities", BpmnModelJsonHelper.ToJson(this.aifLogEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "rtBillCreationProcessEntities", BpmnModelJsonHelper.ToJson(this.rtBillCreationProcessEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "rtBillWritebackProcessEntities", BpmnModelJsonHelper.ToJson(this.rtBillWritebackProcessEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizEventEntities", BpmnModelJsonHelper.ToJson(this.bizEventEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "bizActionEntities", BpmnModelJsonHelper.ToJson(this.bizActionEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationRuleEntities", BpmnModelJsonHelper.ToJson(this.creationRuleEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationProcessEntities", BpmnModelJsonHelper.ToJson(this.creationProcessEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "writebackRuleEntities", BpmnModelJsonHelper.ToJson(this.writebackRuleEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "writebackProcessEntities", BpmnModelJsonHelper.ToJson(this.writebackProcessEntities));
        BpmnModelJsonHelper.SetAttributeValue(obj, "generalTextEntities", BpmnModelJsonHelper.ToJson(this.generalTextEntities));
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.aifLogEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "aifLogEntities"), AifLogEntity);
        this.rtBillCreationProcessEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "rtBillCreationProcessEntities"), RtBillCreationProcessEntity);
        this.rtBillWritebackProcessEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "rtBillWritebackProcessEntities"), RtBillWritebackProcessEntity);
        this.bizEventEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizEventEntities"), BizEventEntity);
        this.bizActionEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "bizActionEntities"), BizActionEntity);
        this.creationRuleEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationRuleEntities"), CreationRuleEntity);
        this.creationProcessEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationProcessEntities"), CreationProcessEntity);
        this.writebackRuleEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "writebackRuleEntities"), WritebackRuleEntity);
        this.writebackProcessEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "writebackProcessEntities"), WritebackProcessEntity);
        this.generalTextEntities = BpmnModelJsonHelper.FromJson(BpmnModelJsonHelper.GetAttributeValueAsString(obj, "generalTextEntities"), GeneralTextEntity);
        for (let entity of this.aifLogEntities) {
            this.aifLogEntitiesMap[entity.id] = entity;
        }
        for (let entity of this.rtBillCreationProcessEntities) {
            this.rtBillCreationProcessEntitiesMap[entity.id] = entity;
        }
        for (let entity of this.rtBillWritebackProcessEntities) {
            this.rtBillWritebackProcessEntitiesMap[entity.id] = entity;
        }
        for (let entity of this.bizEventEntities) {
            this.bizEventEntitiesMap[entity.id] = entity;
        }
        for (let entity of this.bizActionEntities) {
            this.bizActionEntitiesMap[entity.id] = entity;
        }
        for (let entity of this.creationRuleEntities) {
            this.creationRuleEntitiesMap[entity.id] = entity;
        }
        for (let entity of this.creationProcessEntities) {
            this.creationProcessEntitiesMap[entity.id] = entity;
        }
        for (let entity of this.writebackRuleEntities) {
            this.writebackRuleEntitiesMap[entity.id] = entity;
        }
        for (let entity of this.writebackProcessEntities) {
            this.writebackProcessEntitiesMap[entity.id] = entity;
        }
        for (let entity of this.generalTextEntities) {
            this.generalTextEntitiesMap[entity.id] = entity;
        }
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.aifLogEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.rtBillCreationProcessEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.rtBillWritebackProcessEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.bizEventEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.bizActionEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.creationRuleEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.creationProcessEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.writebackRuleEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.writebackProcessEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.generalTextEntities;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.aifLogEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.rtBillCreationProcessEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.rtBillWritebackProcessEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.bizEventEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.bizActionEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.creationRuleEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.creationProcessEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.writebackRuleEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.writebackProcessEntitiesMap;
    /**
     * @type {?}
     * @private
     */
    ExportLogResult.prototype.generalTextEntitiesMap;
}
//# sourceMappingURL=data:application/json;base64,