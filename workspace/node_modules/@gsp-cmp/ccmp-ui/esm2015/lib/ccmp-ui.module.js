/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonComponentSelectorComponent } from './ccmp-selector/common-component-selector.component';
import { CommonComponentUiRTService } from './ccmp-ui.rt-service';
import { ViewUtils } from './view-utils/view-utils';
import { CommonModule } from '@angular/common';
import { ButtonsModule } from '@progress/kendo-angular-buttons';
import { GridModule } from '@progress/kendo-angular-grid';
import { HttpClientModule } from '@angular/common/http';
import { ModalModule } from '@farris/ui-modal';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { MessagerModule } from '@farris/ui-messager';
import { NotifyModule } from '@farris/ui-notify';
import { CommonComponentUiDTService } from './ccmp-ui.dt-service';
export class CommonComponentUiModule {
}
CommonComponentUiModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    CommonComponentSelectorComponent,
                ],
                imports: [
                    NotifyModule,
                    CommonModule,
                    ButtonsModule,
                    GridModule,
                    HttpClientModule,
                    ModalModule.forRoot(),
                    FarrisDialogModule,
                    MessagerModule.forRoot(),
                ],
                entryComponents: [CommonComponentSelectorComponent],
                providers: [
                    CommonComponentUiRTService,
                    CommonComponentUiDTService,
                    ViewUtils
                ],
                exports: [CommonComponentSelectorComponent]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2NtcC11aS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWNtcC9jY21wLXVpLyIsInNvdXJjZXMiOlsibGliL2NjbXAtdWkubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLHFEQUFxRCxDQUFDO0FBQ3ZHLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQXdCbEUsTUFBTSxPQUFPLHVCQUF1Qjs7O1lBdEJuQyxRQUFRLFNBQUM7Z0JBQ04sWUFBWSxFQUFFO29CQUNWLGdDQUFnQztpQkFDbkM7Z0JBQ0QsT0FBTyxFQUFFO29CQUNMLFlBQVk7b0JBQ1osWUFBWTtvQkFDWixhQUFhO29CQUNiLFVBQVU7b0JBQ1YsZ0JBQWdCO29CQUNoQixXQUFXLENBQUMsT0FBTyxFQUFFO29CQUNyQixrQkFBa0I7b0JBQ2xCLGNBQWMsQ0FBQyxPQUFPLEVBQUU7aUJBQzNCO2dCQUNELGVBQWUsRUFBRSxDQUFDLGdDQUFnQyxDQUFDO2dCQUNuRCxTQUFTLEVBQUU7b0JBQ1AsMEJBQTBCO29CQUMxQiwwQkFBMEI7b0JBQzFCLFNBQVM7aUJBQ1o7Z0JBQ0QsT0FBTyxFQUFFLENBQUMsZ0NBQWdDLENBQUM7YUFDOUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Db21wb25lbnRTZWxlY3RvckNvbXBvbmVudCB9IGZyb20gJy4vY2NtcC1zZWxlY3Rvci9jb21tb24tY29tcG9uZW50LXNlbGVjdG9yLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IENvbW1vbkNvbXBvbmVudFVpUlRTZXJ2aWNlIH0gZnJvbSAnLi9jY21wLXVpLnJ0LXNlcnZpY2UnO1xyXG5pbXBvcnQgeyBWaWV3VXRpbHMgfSBmcm9tICcuL3ZpZXctdXRpbHMvdmlldy11dGlscyc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEJ1dHRvbnNNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1idXR0b25zJztcclxuaW1wb3J0IHsgR3JpZE1vZHVsZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWdyaWQnO1xyXG5pbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQgeyBNb2RhbE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbW9kYWwnO1xyXG5pbXBvcnQgeyBGYXJyaXNEaWFsb2dNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRpYWxvZyc7XHJcbmltcG9ydCB7IE1lc3NhZ2VyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1tZXNzYWdlcic7XHJcbmltcG9ydCB7IE5vdGlmeU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbm90aWZ5JztcclxuaW1wb3J0IHsgQ29tbW9uQ29tcG9uZW50VWlEVFNlcnZpY2UgfSBmcm9tICcuL2NjbXAtdWkuZHQtc2VydmljZSc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gICAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICAgICAgQ29tbW9uQ29tcG9uZW50U2VsZWN0b3JDb21wb25lbnQsXHJcbiAgICBdLFxyXG4gICAgaW1wb3J0czogW1xyXG4gICAgICAgIE5vdGlmeU1vZHVsZSxcclxuICAgICAgICBDb21tb25Nb2R1bGUsXHJcbiAgICAgICAgQnV0dG9uc01vZHVsZSxcclxuICAgICAgICBHcmlkTW9kdWxlLFxyXG4gICAgICAgIEh0dHBDbGllbnRNb2R1bGUsXHJcbiAgICAgICAgTW9kYWxNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIEZhcnJpc0RpYWxvZ01vZHVsZSxcclxuICAgICAgICBNZXNzYWdlck1vZHVsZS5mb3JSb290KCksXHJcbiAgICBdLFxyXG4gICAgZW50cnlDb21wb25lbnRzOiBbQ29tbW9uQ29tcG9uZW50U2VsZWN0b3JDb21wb25lbnRdLFxyXG4gICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgQ29tbW9uQ29tcG9uZW50VWlSVFNlcnZpY2UsXHJcbiAgICAgICAgQ29tbW9uQ29tcG9uZW50VWlEVFNlcnZpY2UsXHJcbiAgICAgICAgVmlld1V0aWxzXHJcbiAgICBdLFxyXG4gICAgZXhwb3J0czogW0NvbW1vbkNvbXBvbmVudFNlbGVjdG9yQ29tcG9uZW50XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ29tbW9uQ29tcG9uZW50VWlNb2R1bGUgeyB9XHJcbiJdfQ==