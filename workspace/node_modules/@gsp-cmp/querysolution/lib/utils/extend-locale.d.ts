export declare const EXTEND_QUERYSOLUTION_LOCALE: {
    "zh-CHS": {
        extendQuerySolution: {
            private: {
                property: string;
                setAsPrivate: string;
            };
            public: {
                label: string;
                property: string;
                setAsPublic: string;
            };
            org: {
                label: string;
                property: string;
                setAsOrgPublic: string;
                placeholder: string;
            };
            auth: {
                createError: string;
                updateError: string;
                deleteError: string;
                apiError: string;
                noDataAuthority: string;
                noSelectedOrg: string;
            };
        };
        advancedMode: {
            text: {
                sysAdvancedName: string;
                standardMode: string;
                advancedMode: string;
                addCondition: string;
                addConditionGroup: string;
                and: string;
                or: string;
                reset: string;
            };
            compareType: {
                Equal: string;
                NotEqual: string;
                Greater: string;
                GreaterOrEqual: string;
                Less: string;
                LessOrEqual: string;
                Like: string;
                LikeStartWith: string;
                LikeEndWith: string;
                NotLike: string;
            };
            auth: {
                conditionEmptyError: string;
            };
            info: {
                deleteGroup: string;
                resetInfo: string;
                deleteGroupTooltip: string;
                noConditionInfo: string;
                existGroupInfo: string;
                checkedGroupInfo: string;
                deleteGroupInfo: string;
            };
        };
    };
    "zh-CHT": {
        extendQuerySolution: {
            private: {
                property: string;
                setAsPrivate: string;
            };
            public: {
                label: string;
                property: string;
                setAsPublic: string;
            };
            org: {
                label: string;
                property: string;
                setAsOrgPublic: string;
                placeholder: string;
            };
            auth: {
                createError: string;
                updateError: string;
                deleteError: string;
                apiError: string;
                noDataAuthority: string;
                noSelectedOrg: string;
            };
        };
        advancedMode: {
            text: {
                sysAdvancedName: string;
                standardMode: string;
                advancedMode: string;
                addCondition: string;
                addConditionGroup: string;
                and: string;
                or: string;
                reset: string;
            };
            compareType: {
                Equal: string;
                NotEqual: string;
                Greater: string;
                GreaterOrEqual: string;
                Less: string;
                LessOrEqual: string;
                Like: string;
                LikeStartWith: string;
                LikeEndWith: string;
                NotLike: string;
            };
            auth: {
                conditionEmptyError: string;
            };
            info: {
                deleteGroup: string;
                resetInfo: string;
                deleteGroupTooltip: string;
                noConditionInfo: string;
                existGroupInfo: string;
                checkedGroupInfo: string;
                deleteGroupInfo: string;
            };
        };
    };
    en: {
        extendQuerySolution: {
            private: {
                property: string;
                setAsPrivate: string;
            };
            public: {
                label: string;
                property: string;
                setAsPublic: string;
            };
            org: {
                label: string;
                property: string;
                setAsOrgPublic: string;
                placeholder: string;
            };
            auth: {
                createError: string;
                updateError: string;
                deleteError: string;
                apiError: string;
                noDataAuthority: string;
                noSelectedOrg: string;
            };
        };
        advancedMode: {
            text: {
                sysAdvancedName: string;
                standardMode: string;
                advancedMode: string;
                addCondition: string;
                addConditionGroup: string;
                and: string;
                or: string;
                reset: string;
            };
            compareType: {
                Equal: string;
                NotEqual: string;
                Greater: string;
                GreaterOrEqual: string;
                Less: string;
                LessOrEqual: string;
                Like: string;
                LikeStartWith: string;
                LikeEndWith: string;
                NotLike: string;
            };
            auth: {
                conditionEmptyError: string;
            };
            info: {
                deleteGroup: string;
                resetInfo: string;
                deleteGroupTooltip: string;
                noConditionInfo: string;
                existGroupInfo: string;
                checkedGroupInfo: string;
                deleteGroupInfo: string;
            };
        };
    };
};
