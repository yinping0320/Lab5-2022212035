import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { QuerySolutionVo, QueryCondition } from '@farris/component-querycondition';
export declare class HttpService {
    private http;
    constructor(http: HttpClient);
    private histroyUrl;
    url: string;
    /**
     * 新增查询方案
     * @param querySolution 查询方案实体
     */
    create(querySolution: QuerySolutionVo, sessionId: string): Observable<any>;
    /**
     * 根据表单ID查询当前表单当前登录用户的查询方案列表
     * @param formId 表单ID
     */
    query(formId: string, sessionId: string): Observable<any>;
    /**
     * 更新
     * @param querySolution 查询方案实体
     */
    update(querySolution: QuerySolutionVo, sessionId: string): Observable<Object>;
    /**
     * 删除
     * @unused
     * @param idArray 删除的解决方案ID列表
     */
    /**
     * 批量更新
     * @param object : '{defaultId, belongId, deletedIds}'
     */
    batchUpdate(body: any, sessionId: string): Observable<any>;
    /**
     * 获取默认查询方案ID
     * @unused
     * @param formId
     */
    /**
        * 是否支持
        */
    supportLS(): boolean;
    /**
     * 设置保存时候，属性从小写变成大写
     * @param key
     * @param value
     */
    setLS(key: any, value: any): void;
    /**
     * 获取时，属性从大写变成小写
     * @param key
     */
    getLS(key: any): Array<QueryCondition>;
    /**
     * 更新
     * @param querySolution 查询方案实体
     */
    saveHistroy(querySolution: QuerySolutionVo, sessionId: string): Observable<Object>;
    getAuth(type: string, sessionId: string): Observable<Object>;
}
