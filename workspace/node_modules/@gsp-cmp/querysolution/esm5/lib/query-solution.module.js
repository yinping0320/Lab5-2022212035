/**
 * @fileoverview added by tsickle
 * Generated from: lib/query-solution.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { QuerySolutionComponent } from './query-solution.component';
import { SolutionManangerComponent } from './solutionmanager/solutionmanager.component';
import { SaveAsDialogComponent } from './saveasdialog/saveasdialog.component';
import { FormsModule } from '@angular/forms';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { LookupModule } from '@farris/ui-lookup';
import { MultiSelectModule } from '@farris/ui-multi-select';
import { FieldGroupModule } from '@farris/ui-field-group';
import { InputGroupModule } from '@farris/ui-input-group';
import { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';
import { NotifyModule } from '@farris/ui-notify';
import { LoadingModule } from '@farris/ui-loading';
import { HttpClientModule } from '@angular/common/http';
import { SolutionService, QueryConditionModule } from '@farris/component-querycondition';
import { LocaleModule } from '@farris/ui-locale';
import { DatagridModule } from '@farris/ui-datagrid';
import { NumberHelperModule } from '@farris/ui-common/number';
import { DateHelperModule } from '@farris/ui-common/date';
import { FarrisTooltipModule } from '@farris/ui-tooltip';
import { SummaryConditionComponent } from './summary-condition/summary-condition.component';
import { SummaryListComponent } from './summary-list/summary-list.component';
import { FarrisFormsModule } from '@farris/ui-forms';
import { OrganizationSelectorModule } from '@farris/ui-organization-selector';
import { LanguageTextboxModule } from '@farris/ui-language-textbox';
var QuerySolutionModule = /** @class */ (function () {
    function QuerySolutionModule() {
    }
    QuerySolutionModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        FarrisDialogModule,
                        LookupModule,
                        MultiSelectModule,
                        FieldGroupModule,
                        InputGroupModule,
                        FDropdownDirectiveTypeModule,
                        NotifyModule.forRoot(),
                        LoadingModule.forRoot(),
                        QueryConditionModule,
                        HttpClientModule,
                        LocaleModule,
                        DatagridModule,
                        NumberHelperModule,
                        DateHelperModule,
                        FarrisTooltipModule,
                        FarrisFormsModule,
                        OrganizationSelectorModule,
                        LanguageTextboxModule
                    ],
                    declarations: [
                        QuerySolutionComponent,
                        SolutionManangerComponent,
                        SaveAsDialogComponent,
                        SummaryConditionComponent,
                        SummaryListComponent,
                    ],
                    entryComponents: [
                        SolutionManangerComponent,
                        SaveAsDialogComponent
                    ],
                    providers: [SolutionService],
                    exports: [
                        QuerySolutionComponent,
                        SolutionManangerComponent,
                        SaveAsDialogComponent
                    ]
                },] }
    ];
    return QuerySolutionModule;
}());
export { QuerySolutionModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnktc29sdXRpb24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1jbXAvcXVlcnlzb2x1dGlvbi8iLCJzb3VyY2VzIjpbImxpYi9xdWVyeS1zb2x1dGlvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUN4RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUM5RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbkQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDMUQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDekQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDNUYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDN0UsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDckQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDOUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFcEU7SUFBQTtJQXlDbUMsQ0FBQzs7Z0JBekNuQyxRQUFRLFNBQUM7b0JBQ1IsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osV0FBVzt3QkFDWCxrQkFBa0I7d0JBQ2xCLFlBQVk7d0JBQ1osaUJBQWlCO3dCQUNqQixnQkFBZ0I7d0JBQ2hCLGdCQUFnQjt3QkFDaEIsNEJBQTRCO3dCQUM1QixZQUFZLENBQUMsT0FBTyxFQUFFO3dCQUN0QixhQUFhLENBQUMsT0FBTyxFQUFFO3dCQUN2QixvQkFBb0I7d0JBQ3BCLGdCQUFnQjt3QkFDaEIsWUFBWTt3QkFDWixjQUFjO3dCQUNkLGtCQUFrQjt3QkFDbEIsZ0JBQWdCO3dCQUNoQixtQkFBbUI7d0JBQ25CLGlCQUFpQjt3QkFDakIsMEJBQTBCO3dCQUMxQixxQkFBcUI7cUJBQ3RCO29CQUNELFlBQVksRUFBRTt3QkFDWixzQkFBc0I7d0JBQ3RCLHlCQUF5Qjt3QkFDekIscUJBQXFCO3dCQUNyQix5QkFBeUI7d0JBQ3pCLG9CQUFvQjtxQkFDckI7b0JBQ0QsZUFBZSxFQUFDO3dCQUNkLHlCQUF5Qjt3QkFDekIscUJBQXFCO3FCQUN0QjtvQkFDRCxTQUFTLEVBQUMsQ0FBQyxlQUFlLENBQUM7b0JBQzNCLE9BQU8sRUFBQzt3QkFDTixzQkFBc0I7d0JBQ3RCLHlCQUF5Qjt3QkFDekIscUJBQXFCO3FCQUN0QjtpQkFDRjs7SUFDa0MsMEJBQUM7Q0FBQSxBQXpDcEMsSUF5Q29DO1NBQXZCLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IFF1ZXJ5U29sdXRpb25Db21wb25lbnQgfSBmcm9tICcuL3F1ZXJ5LXNvbHV0aW9uLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNvbHV0aW9uTWFuYW5nZXJDb21wb25lbnQgfSBmcm9tICcuL3NvbHV0aW9ubWFuYWdlci9zb2x1dGlvbm1hbmFnZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU2F2ZUFzRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi9zYXZlYXNkaWFsb2cvc2F2ZWFzZGlhbG9nLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBGYXJyaXNEaWFsb2dNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRpYWxvZyc7XHJcbmltcG9ydCB7IExvb2t1cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9va3VwJztcclxuaW1wb3J0IHsgTXVsdGlTZWxlY3RNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW11bHRpLXNlbGVjdCc7XHJcbmltcG9ydCB7IEZpZWxkR3JvdXBNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWZpZWxkLWdyb3VwJztcclxuaW1wb3J0IHsgSW5wdXRHcm91cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktaW5wdXQtZ3JvdXAnO1xyXG5pbXBvcnQgeyBGRHJvcGRvd25EaXJlY3RpdmVUeXBlTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kcm9wZG93bic7XHJcbmltcG9ydCB7IE5vdGlmeU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbm90aWZ5JztcclxuaW1wb3J0IHsgTG9hZGluZ01vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9hZGluZyc7XHJcbmltcG9ydCB7IEh0dHBDbGllbnRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IFNvbHV0aW9uU2VydmljZSwgUXVlcnlDb25kaXRpb25Nb2R1bGUgfSBmcm9tICdAZmFycmlzL2NvbXBvbmVudC1xdWVyeWNvbmRpdGlvbic7XHJcbmltcG9ydCB7IExvY2FsZU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9jYWxlJztcclxuaW1wb3J0IHsgRGF0YWdyaWRNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRhdGFncmlkJztcclxuaW1wb3J0IHsgTnVtYmVySGVscGVyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21tb24vbnVtYmVyJztcclxuaW1wb3J0IHsgRGF0ZUhlbHBlck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tbW9uL2RhdGUnO1xyXG5pbXBvcnQgeyBGYXJyaXNUb29sdGlwTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS10b29sdGlwJztcclxuaW1wb3J0IHsgU3VtbWFyeUNvbmRpdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vc3VtbWFyeS1jb25kaXRpb24vc3VtbWFyeS1jb25kaXRpb24uY29tcG9uZW50JztcclxuaW1wb3J0IHsgU3VtbWFyeUxpc3RDb21wb25lbnQgfSBmcm9tICcuL3N1bW1hcnktbGlzdC9zdW1tYXJ5LWxpc3QuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRmFycmlzRm9ybXNNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWZvcm1zJztcclxuaW1wb3J0IHsgT3JnYW5pemF0aW9uU2VsZWN0b3JNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW9yZ2FuaXphdGlvbi1zZWxlY3Rvcic7XHJcbmltcG9ydCB7IExhbmd1YWdlVGV4dGJveE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbGFuZ3VhZ2UtdGV4dGJveCc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgRmFycmlzRGlhbG9nTW9kdWxlLFxyXG4gICAgTG9va3VwTW9kdWxlLFxyXG4gICAgTXVsdGlTZWxlY3RNb2R1bGUsXHJcbiAgICBGaWVsZEdyb3VwTW9kdWxlLFxyXG4gICAgSW5wdXRHcm91cE1vZHVsZSxcclxuICAgIEZEcm9wZG93bkRpcmVjdGl2ZVR5cGVNb2R1bGUsXHJcbiAgICBOb3RpZnlNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgTG9hZGluZ01vZHVsZS5mb3JSb290KCksXHJcbiAgICBRdWVyeUNvbmRpdGlvbk1vZHVsZSxcclxuICAgIEh0dHBDbGllbnRNb2R1bGUsXHJcbiAgICBMb2NhbGVNb2R1bGUsXHJcbiAgICBEYXRhZ3JpZE1vZHVsZSxcclxuICAgIE51bWJlckhlbHBlck1vZHVsZSxcclxuICAgIERhdGVIZWxwZXJNb2R1bGUsXHJcbiAgICBGYXJyaXNUb29sdGlwTW9kdWxlLFxyXG4gICAgRmFycmlzRm9ybXNNb2R1bGUsXHJcbiAgICBPcmdhbml6YXRpb25TZWxlY3Rvck1vZHVsZSxcclxuICAgIExhbmd1YWdlVGV4dGJveE1vZHVsZVxyXG4gIF0sXHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBRdWVyeVNvbHV0aW9uQ29tcG9uZW50LFxyXG4gICAgU29sdXRpb25NYW5hbmdlckNvbXBvbmVudCxcclxuICAgIFNhdmVBc0RpYWxvZ0NvbXBvbmVudCxcclxuICAgIFN1bW1hcnlDb25kaXRpb25Db21wb25lbnQsXHJcbiAgICBTdW1tYXJ5TGlzdENvbXBvbmVudCxcclxuICBdLFxyXG4gIGVudHJ5Q29tcG9uZW50czpbXHJcbiAgICBTb2x1dGlvbk1hbmFuZ2VyQ29tcG9uZW50LFxyXG4gICAgU2F2ZUFzRGlhbG9nQ29tcG9uZW50XHJcbiAgXSxcclxuICBwcm92aWRlcnM6W1NvbHV0aW9uU2VydmljZV0sXHJcbiAgZXhwb3J0czpbIFxyXG4gICAgUXVlcnlTb2x1dGlvbkNvbXBvbmVudCxcclxuICAgIFNvbHV0aW9uTWFuYW5nZXJDb21wb25lbnQsXHJcbiAgICBTYXZlQXNEaWFsb2dDb21wb25lbnRcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBRdWVyeVNvbHV0aW9uTW9kdWxlIHsgfVxyXG4iXX0=