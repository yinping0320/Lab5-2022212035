{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@gsp-cmp/querysolution/lib/service/httpservice.ts","ng://@gsp-cmp/querysolution/lib/service/fieldconfig.service.ts","ng://@gsp-cmp/querysolution/lib/interface/IQuerySolutionHandler.ts","ng://@gsp-cmp/querysolution/lib/service/solution.cache.service.ts","ng://@gsp-cmp/querysolution/lib/utils/extend-locale.ts","ng://@gsp-cmp/querysolution/lib/query-solution.component.ts","ng://@gsp-cmp/querysolution/lib/service/edit.service.ts","ng://@gsp-cmp/querysolution/lib/solutionmanager/solutionmanager.component.ts","ng://@gsp-cmp/querysolution/lib/saveasdialog/saveasdialog.component.ts","ng://@gsp-cmp/querysolution/lib/summary-condition/summary-condition.component.ts","ng://@gsp-cmp/querysolution/lib/summary-list/summary-list.component.ts","ng://@gsp-cmp/querysolution/lib/query-solution.module.ts"],"names":["__generator","thisArg","body","f","y","t","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","this","n","v","step","op","TypeError","call","done","value","pop","length","push","e","__read","o","m","r","i","ar","error","__spread","arguments","concat","HttpService","prototype","create","querySolution","sessionId","options","headers","HttpHeaders","Content-Type","sessionid","QuerySolutionVoConvertor","convertJObject","http","post","url","query","formId","belongId","get","update","put","batchUpdate","supportLS","window","hasOwnProperty","setLS","key","conditionsStr","convertor","JSON","stringify","formatConvertJObject","localStorage","setItem","getLS","result","Array","getItem","undefined","parse","formatFromJobject","saveHistroy","histroyUrl","getAuth","type","Injectable","HttpClient","BasePathService","convertPath","FieldConfigService","QUERYSOLUTION_HANDLER_TOKEN","InjectionToken","SolutionCacheService","clearSolutionCache","solutionListCache","removeSolutionCache","setSolutionCache","getSolutionCache","getSolutionAllCache","setCurrentSolution","currentSolution","getCurrentSolution","removeCurrentSolution","clearCurrentSolution","solutionListChanged","Subject","EXTEND_QUERYSOLUTION_LOCALE","zh-CHS","extendQuerySolution","private","property","setAsPrivate","public","setAsPublic","org","setAsOrgPublic","placeholder","auth","createError","updateError","deleteError","apiError","noDataAuthority","noSelectedOrg","advancedMode","text","sysAdvancedName","standardMode","addCondition","addConditionGroup","and","or","reset","compareType","Equal","NotEqual","Greater","GreaterOrEqual","Less","LessOrEqual","Like","LikeStartWith","LikeEndWith","NotLike","conditionEmptyError","info","deleteGroup","resetInfo","deleteGroupTooltip","noConditionInfo","existGroupInfo","checkedGroupInfo","deleteGroupInfo","zh-CHT","en","Object","defineProperty","QuerySolutionComponent","_fieldConfigs","fieldConfigJson","solutionService","convertToQueryConditions","unformatFieldConfigs","_resetFieldConfigs","resetFieldConfigJson","_this","isArray","formatResetConfigJson","map","tConfigItem","findItem","fieldConfigs","find","presetItem","control","getControlType","convertToSimpleQueryConditions","filter","item","updateConditionVisibleState","updateControl","_presetFieldConfigs","slice","sysQuerySolutionVo","queryConditions","historyRefer","selectedSolution","presetFieldConfigJson","ngOnDestroy","_self","nativeElement","removeEventListener","handleKeyDown","destroy$","complete","ngOnChanges","changes","isSetDefaultValue","currentValue","firstChange","setQueryConditionValues","initAutoQuery","doneInitQuery","ngOnInit","initSysQuerySolution","isDisabled","loadSysQuerySolution","solutionHandler","getUserSessionId","initAutoQueryByLS","loadQuerySolutions","listenKeyBoard","getConditionVisibleState","pipe","takeUntil","subscribe","simpleConditions","selectedFieldConditions","updateFieldParams","templateSimpleConditions","visibleSelectedConditions","visible","whenFoldSetSummaryConditions","setCurrentQueryConditions","cloneDeep","presetQuerySolutionName","QuerySolutionVo","id","getGuid","code","localeService","getValue","presetFieldConfigs","isSystem","mode","querySolutionVos","loadQueryConditions","formatQuerySolutionVO","tConvertor","element","fromJobject","querysolutionVO","sourceData","_tQueryConditions","_fieldCodeArr","initFromJobject","forEach","_item","fieldCode","indexOf","fieldName","placeHolder","beginPlaceHolder","endPlaceHolder","preEventCmd","postEventCmd","clear","click","beforeShow","beforeHide","dateChangedCmd","enumValues","data","queryConditionsAdvanced","_queryConditionsAdvanced","complicateTreeData","__awaiter","_arguments","P","generator","Promise","resolve","reject","fulfilled","rejected","then","apply","httpService","items","openAdvancedMode","val","enableHistory","querySolutionAdvancedVos","isDefault","defaultQuerySolution","formatInitQuerySolution","splice","initAdvancedSolution","publicSolution","tslib_1.__spread","orgSolution","defaultConfigs","message","msgSer","show","showHeader","gspframeworkService","option","rtf","session","getCommonVariable","tabId","setCurrentSolutionCache","showSaveButton","conditionVisibleState","simpleCondition","updatedConditions","simpleConditions_1","__values","tslib_1.__values","simpleConditions_1_1","clearValue","markAsChanged","saveAs","openSaveAsDialog","getDefaultLabel","solution","visibility","select","assign","selectAndQuery","isCurrent","conditions","openFieldConfigDialog","farrisQueryCondition","fieldConditionsChangeHander","$event","target","setFilterConditions","queryAfterValueChange","fieldSolutionChangeHander","save","switchMap","tap","tempIndex","findIndex","x","canClearRelatedFields","showInfo","of","console","warn","title","saveAsDialog","newSaveAsSolutionVo","radioGroupValue","saveAsConfrimHandler","_event","readonly","vo","filterSolutionVos","openManangerDialog","manageDialog","authorityError","managerConfirmHandler","obj","defaultId_1","deletedIds_1","defaultId","deletedIds","includes","Observable","errorArr","isValid","errorFields","field","replace","join","isEmpty","notify","warning","queryEmitter","emit","changeQueryHistroy","some","condition","newList","resetSelectedConditionValues","foldClearHandler","isFold","summaryConditions","arrowClick","isNotEmpty","configs","targetSolution","targetSolutionWithValues","setValues","doneSetDefaultValue","enableInitQuery","enableQuery","setTimeout","isChanged","solutionId","cdf","detectChanges","addEventListener","setLSKey","initQuerySolution","visibleConditions","relation","children","path","groupid","histroyCondition","schemeKeyLS","resetFieldConfigs","initCondition","updateAll","preIndex","qsolutionVO","getTopWindow","curWin","self","location","origin","parent","isRTFTopWin","curWindow","userCode","userInfos","_idSer","encrypt","checkAuthority","orgData","dataPermissionIds","toString","selectedOrgIds","pRadioGroupValue","Component","args","selector","template","encapsulation","ViewEncapsulation","None","providers","ConvertorService","NotifyService","ComponentFactoryResolver","Injector","BsModalService","SolutionService","LocaleService","Input","Output","HostBinding","ViewChild","resolver","injector","modalService","convertService","fieldConfigService","EventEmitter","cls","isControlInline","showCompleteLabel","BehaviorSubject","filterText","hideOrgselector","schemeKey","foundSchme","extendId","extendInfo","event","activeEle","document","blur","focus","IdService","InjectFlags","Optional","MessagerService","ElementRef","ChangeDetectorRef","eventManager","EventManager","langData","setLocaleData","EditService","index","isNew","createdItems","idx","itemIndex","updatedItems","assignValues","source","SolutionManangerComponent","columns","width","formatter","propertyFieldFormatter","halign","align","checkCell","optCell","querySolutions","listData","findSolutionsWithoutSys","checkedSolution","deletedQuerySolutionIds","dialog","getSolutionProperty","qs","delelteSolution","dataItem","config","position","msg","timeout","setDefault","checked","list","refresh","cancel","close","confirm","confirmEmitter","FormBuilder","formBuilder","editService","cancelEmitter","SaveAsDialogComponent","solutionType","currentLang","language","getLanguageCode","solutionCodeObj","codeChangeHandler","codeError","code_chs","code_en","code_cht","QuerySolutionExtendVo","checkStatus","codeMaxLength","changeSolutionType","getAuthority","getSelectedId","orgId","clearAllOrgs","name","languages","default","SummaryConditionComponent","_condition","qCondition","formatCondition","_conditionType","textValueObj","textOriginalValue","getOriginalValue","ControlType","Text","trim","SingleNumber","numberOptions","precision","NumberRange","_isRange","_spliter","SingleDate","returnFormat","format","DateRange","SingleYear","SingleMonth","MonthRange","SingleDateTime","showTime","DateTimeRange","BoolCheck","checkValue","DropDownList","valueField","Radio","InputGroup","SmartHelp","textValue","formatValue","formatLang","currentLanguage","getFormatNumberValue","useThousands","firstLetter","currencyToUpperCase","substring","Number","test","thousand","decimal","expression","prefix","currencySymbol","numberHelper","formatMoney","toDecimal","toPercent","filledSymbol","toFixed","word","toUpperCase","dateToUpperCase","newFormat","getFormatEnumValue","dataSource","curVals_1","split","nameResult","k","findObj","this_1","textField","getFormatCheckBoxValue","dateformat","getDateFromFormatedString","dtHelper","formatTo","dateString","year","month","day","hour","minite","second","a","b","c","d","parseInt","substr","Date","function","date","fmt","M+","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","q+","Math","floor","S","getMilliseconds","RegExp","$1","getFullYear","str","dateValues","dataStr_1","numberValues","resultStr_1","ComboLookUp","DateTimeHelperService","NumberHelperService","SummaryListComponent","ro","unobserve","wrapperEl","observerElement","ngZone","runOutsideAngular","ResizeObserver","entries","observer","tempWidth","contentRect","abs","widthFlag","changeTipsState","observe","tEnableTips","enableTips","clientWidth","scrollWidth","cd","markForCheck","NgZone","read","QuerySolutionModule","NgModule","imports","CommonModule","FormsModule","FarrisDialogModule","LookupModule","MultiSelectModule","FieldGroupModule","InputGroupModule","FDropdownDirectiveTypeModule","NotifyModule","forRoot","LoadingModule","QueryConditionModule","HttpClientModule","LocaleModule","DatagridModule","NumberHelperModule","DateHelperModule","FarrisTooltipModule","FarrisFormsModule","OrganizationSelectorModule","LanguageTextboxModule","declarations","entryComponents","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { QuerySolutionVo, QuerySolutionVoConvertor, QueryCondition } from '@farris/component-querycondition';\r\nimport {BasePathService } from '@farris/rtf';\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n    constructor(private http: HttpClient) { \r\n        this.histroyUrl = BasePathService.convertPath(this.histroyUrl)\r\n        this.url = BasePathService.convertPath(this.url)\r\n    }\r\n    private histroyUrl: string = \"/api/runtime/sys/v1.0/querysolution/previousQuery\";\r\n    url: string = '/api/runtime/sys/v1.0/querysolution';\r\n    /**\r\n     * æ°å¢æ¥è¯¢æ¹æ¡\r\n     * @param querySolution æ¥è¯¢æ¹æ¡å®ä½\r\n     */\r\n    create(querySolution: QuerySolutionVo, sessionId: string): Observable<any> {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'sessionid': sessionId\r\n        });\r\n        const options = {\r\n            headers: headers,\r\n            sessionid: sessionId\r\n        };\r\n        let convertor = new QuerySolutionVoConvertor();\r\n        let body = convertor.convertJObject(querySolution);\r\n        return this.http.post(this.url, body, options);\r\n    }\r\n\r\n    /**\r\n     * æ ¹æ®è¡¨åIDæ¥è¯¢å½åè¡¨åå½åç»å½ç¨æ·çæ¥è¯¢æ¹æ¡åè¡¨\r\n     * @param formId è¡¨åID\r\n     */\r\n    query(formId: string, sessionId: string): Observable<any> {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'sessionid': sessionId\r\n        });\r\n        const options = {\r\n            headers: headers,\r\n        };\r\n        let belongId = formId;\r\n        // let url = `http://localhost:5100/api/dev/main/v1.0/querysolution/bybelongid/${belongId}`;\r\n        let url = `${this.url}/belongId/${belongId}`;\r\n        return this.http.get(url, options);\r\n    }\r\n\r\n    /**\r\n     * æ´æ°\r\n     * @param querySolution æ¥è¯¢æ¹æ¡å®ä½\r\n     */\r\n    update(querySolution: QuerySolutionVo, sessionId: string) {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'sessionid': sessionId\r\n        });\r\n        const options = {\r\n            headers: headers\r\n        };\r\n        let convertor = new QuerySolutionVoConvertor();\r\n        let body = convertor.convertJObject(querySolution);\r\n        return this.http.put(this.url, body, options);\r\n    }\r\n\r\n    /**\r\n     * å é¤\r\n     * @unused\r\n     * @param idArray å é¤çè§£å³æ¹æ¡IDåè¡¨\r\n     */\r\n    // delete(idArray: Array<string>, sessionId: string) {\r\n    //     if (!idArray || idArray.length <= 0) {\r\n    //         return;\r\n    //     }\r\n    //     let headers = new HttpHeaders({\r\n    //         'Content-Type': 'application/json',\r\n    //         'sessionid': sessionId\r\n    //     });\r\n    //     const options = {\r\n    //         headers: headers,\r\n    //         sessionid: sessionId\r\n    //     };\r\n    //     let ids = '';\r\n    //     idArray.forEach(id => {\r\n    //         ids = ids + \"#\" + id;\r\n    //     });\r\n    //     let url = `/api/dev/main/v1.0/querysolution/${encodeURIComponent(ids)}`;\r\n    //     return this.http.delete(url, options);\r\n    // }\r\n\r\n    /**\r\n     * æ¹éæ´æ°\r\n     * @param object : '{defaultId, belongId, deletedIds}'\r\n     */\r\n    batchUpdate(body: any, sessionId: string): Observable<any> {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'sessionid': sessionId\r\n        });\r\n        const options = {\r\n            headers: headers,\r\n            sessionid: sessionId\r\n        };\r\n        let url = `${this.url}/batch`;\r\n        return this.http.put(url, body, options);\r\n    }\r\n\r\n    /**\r\n     * è·åé»è®¤æ¥è¯¢æ¹æ¡ID\r\n     * @unused\r\n     * @param formId\r\n     */\r\n    // getDefaultQuerySolution(formId: string, sessionId: string): Observable<any> {\r\n    //     let headers = new HttpHeaders({\r\n    //         'Content-Type': 'text/plain',\r\n    //         'sessionid': sessionId\r\n    //     });\r\n    //     let belongId = formId;\r\n    //     // let url = `http://localhost:5100/api/dev/main/v1.0/querysolution/defaultSolution/bybelongid/${belongId}`;\r\n    //     let url = `/api/dev/main/v1.0/querysolution/defaultSolution/bybelongid/${belongId}`;\r\n    //     return this.http.get(url, { headers: headers, responseType: 'text' });\r\n    // }\r\n    /**\r\n        * æ¯å¦æ¯æ\r\n        */\r\n    supportLS() {\r\n        if(window.hasOwnProperty(\"localStorage\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * è®¾ç½®ä¿å­æ¶åï¼å±æ§ä»å°ååæå¤§å\r\n     * @param key \r\n     * @param value \r\n     */\r\n    setLS(key, value: any) {\r\n        let conditionsStr = '[]';\r\n        if(value) {\r\n            if( typeof value == 'string') {\r\n                conditionsStr = value;\r\n            } else {\r\n                const convertor = new QuerySolutionVoConvertor();\r\n                conditionsStr = JSON.stringify(convertor.formatConvertJObject(value));\r\n            }\r\n           \r\n        }\r\n        if(key && this.supportLS) {\r\n            localStorage.setItem(key, conditionsStr);\r\n        } \r\n    }\r\n    /**\r\n     * è·åæ¶ï¼å±æ§ä»å¤§ååæå°å\r\n     * @param key \r\n     */\r\n    getLS(key): Array<QueryCondition> {\r\n        let result = new Array<QueryCondition>();\r\n        if(key && this.supportLS) {\r\n            var v = localStorage.getItem(key);\r\n            if (v != undefined || v !== null) {\r\n                result = JSON.parse(v);\r\n            }\r\n        }\r\n        if(result.length > 0) {\r\n            const convertor = new QuerySolutionVoConvertor();\r\n            return convertor.formatFromJobject(result);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * æ´æ°\r\n     * @param querySolution æ¥è¯¢æ¹æ¡å®ä½\r\n     */\r\n    saveHistroy(querySolution: QuerySolutionVo, sessionId: string) {\r\n        let headers = new HttpHeaders({\r\n            \"Content-Type\": \"application/json\",\r\n            sessionid: sessionId\r\n        });\r\n        const options = {\r\n            headers: headers\r\n        };\r\n        let convertor = new QuerySolutionVoConvertor();\r\n        let body = convertor.convertJObject(querySolution);\r\n        return this.http.put(this.histroyUrl, body, options);\r\n    }\r\n\r\n    // è·åå½åç¨æ·æ¯å¦ææééç½®å¬å±ç±»åç­éæ¹æ¡ï¼åå«å¨å±å¬å±ãç»ç»å¬å±\r\n    // è¿åç»æï¼ï¼1ï¼æ¯å¦ææéæ°å¢ãä¿®æ¹ãå é¤å¬å±ç±»åç­éæ¹æ¡ï¼ï¼2ï¼å¯ä¸ºåªäºç»ç»è®¾ç½®ç»ç»å¬å±ç­éæ¹æ¡\r\n    getAuth(type: string, sessionId: string) {\r\n        let headers = new HttpHeaders({\r\n            \"Content-Type\": \"application/json\",\r\n            sessionid: sessionId\r\n        });\r\n        const options = {\r\n            headers: headers\r\n        };\r\n        let url = `${this.url}/componentType/${type}`;\r\n        return this.http.get(url, options);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class FieldConfigService {\r\n}\r\n\r\n","import { QueryCondition } from \"@farris/component-querycondition\";\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport interface IQuerySolutionHandler{\r\n    getUserSessionId(): string;\r\n    setFilterConditions(params: Array<QueryCondition>): void;\r\n    setCurrentQueryConditions(conditions: QueryCondition[]): void;\r\n}\r\n\r\nexport const QUERYSOLUTION_HANDLER_TOKEN = new InjectionToken<IQuerySolutionHandler>('gsp-cmp/I_QUERYSOLUTION_HANDLER');","import { Subject } from 'rxjs';\r\n\r\nexport class SolutionCacheService {\r\n  public static solutionListChanged = new Subject();\r\n\r\n  private static solutionListCache = {};\r\n\r\n  private static currentSolution = {};\r\n\r\n  static clearSolutionCache() {\r\n    SolutionCacheService.solutionListCache = {};\r\n  }\r\n\r\n  static removeSolutionCache(key: string) {\r\n    delete SolutionCacheService.solutionListCache[key];\r\n  }\r\n\r\n  static setSolutionCache(key: string, value: any) {\r\n    SolutionCacheService.solutionListCache[key] = value;\r\n  }\r\n\r\n  static getSolutionCache(key: string) {\r\n    return SolutionCacheService.solutionListCache[key];\r\n  }\r\n\r\n  static getSolutionAllCache() {\r\n    return SolutionCacheService.solutionListCache;\r\n  }\r\n\r\n  static setCurrentSolution(key: string, value: any) {\r\n    SolutionCacheService.currentSolution[key] = value;\r\n  }\r\n\r\n  static getCurrentSolution(key: string) {\r\n    return SolutionCacheService.currentSolution[key];\r\n  }\r\n\r\n  static removeCurrentSolution(key: string) {\r\n    delete SolutionCacheService.currentSolution[key];\r\n  }\r\n\r\n  static clearCurrentSolution() {\r\n    SolutionCacheService.currentSolution = {};\r\n  }\r\n}\r\n","export const EXTEND_QUERYSOLUTION_LOCALE = {\r\n    \"zh-CHS\": {\r\n        extendQuerySolution: {\r\n            private: {\r\n                property: 'ä¸ªäºº',\r\n                setAsPrivate: 'ç¨æ·ä¸ªäººæ¹æ¡'\r\n            },\r\n            public: {\r\n                label: 'ç³»ç»å¬å±',\r\n                property: 'ç³»ç»å¬å±',\r\n                setAsPublic: 'ç³»ç»å¬å±æ¹æ¡'\r\n            },\r\n            org: {\r\n                label: 'ç»ç»å¬å±',\r\n                property: 'ç»ç»å¬å±',\r\n                setAsOrgPublic: 'ç»ç»å¬å±æ¹æ¡',\r\n                placeholder: 'è¯·éæ©'\r\n            },\r\n            auth: {\r\n                createError: 'æ¨ææ æéè®¾ç½®å¬å±ç±»åæ¹æ¡ã',\r\n                updateError: 'æ¨ææ æéä¿®æ¹å¬å±ç±»åæ¹æ¡ã',\r\n                deleteError: 'æ¨ææ æéå é¤å¬å±ç±»åæ¹æ¡ã',\r\n                apiError: 'è°ç¨è·åæéæ¥å£å¤±è´¥ï¼',\r\n                noDataAuthority: 'æ¨ææ æéè®¾ç½®ç»ç»å¬å±æ¹æ¡ã',\r\n                noSelectedOrg: 'è¯·éæ©ç»ç»å¬å±æ¹æ¡æå±ç»ç»ã'\r\n            }\r\n        },\r\n        advancedMode: {\r\n            text: {\r\n                sysAdvancedName: 'ï¼é«çº§ï¼',\r\n                standardMode: 'æ åæ¨¡å¼',\r\n                advancedMode: 'é«çº§æ¨¡å¼',\r\n                addCondition: 'æ·»å æ¡ä»¶',\r\n                addConditionGroup: 'çææ¡ä»¶ç»',\r\n                and: 'ä¸',\r\n                or: 'æ',\r\n                reset: 'éç½®'\r\n\r\n            },\r\n            compareType: {\r\n                Equal: 'ç­äº',\r\n                NotEqual: 'ä¸ç­äº',\r\n                Greater: 'å¤§äº',\r\n                GreaterOrEqual: 'å¤§äºç­äº',\r\n                Less: 'å°äº',\r\n                LessOrEqual: 'å°äºç­äº',\r\n                Like: 'åå«',\r\n                LikeStartWith: 'å¼å¤´æ¯',\r\n                LikeEndWith: 'ç»å°¾æ¯',\r\n                NotLike: 'ä¸åå«'\r\n\r\n            },\r\n            auth: {\r\n                conditionEmptyError: 'é«çº§æ¨¡å¼ä¸ç­éé¡¹å¼ä¸åºä¸ºç©ºã'\r\n            },\r\n            info: {\r\n                deleteGroup: 'æ¯å¦ç¡®è®¤åæ¶è¯¥æ¡ä»¶ç»ï¼',\r\n                resetInfo: 'æ¯å¦ç¡®è®¤éç½®æ¡ä»¶ï¼',\r\n                deleteGroupTooltip: 'åæ¶ç»',\r\n                noConditionInfo: 'è¯·åéæ©ç­éæ¡ä»¶ã',\r\n                existGroupInfo: 'éæ©çæ¡ä»¶å·²å­å¨åç»',\r\n                checkedGroupInfo: 'è·¨ç»æä½æ¶ï¼åºå¾éè¯¥ç»ä¸å¨é¨æ°æ®',\r\n                deleteGroupInfo: 'å·²ç»æ¯æå¤å±åç»äº'\r\n\r\n            }\r\n        }\r\n    },\r\n    \"zh-CHT\": {\r\n        extendQuerySolution: {\r\n            private: {\r\n                property: 'åäºº',\r\n                setAsPrivate: 'ç¨æ¶åäººæ¹æ¡'\r\n            },\r\n            public: {\r\n                label: 'ç³»çµ±å¬å±',\r\n                property: 'ç³»çµ±å¬å±',\r\n                setAsPublic: 'ç³»çµ±å¬å±æ¹æ¡'\r\n            },\r\n            org: {\r\n                label: 'çµç¹å¬å±',\r\n                property: 'çµç¹å¬å±',\r\n                setAsOrgPublic: 'çµç¹å¬å±æ¹æ¡',\r\n                placeholder: 'è«é¸æ'\r\n            },\r\n            auth: {\r\n                createError: 'æ¨æ«ç¡æ¬éè¨­ç½®å¬å±é¡åæ¹æ¡ã',\r\n                updateError: 'æ¨æ«ç¡æ¬éä¿®æ¹å¬å±é¡åæ¹æ¡ã',\r\n                deleteError: 'æ¨æ«ç¡æ¬éåªé¤å¬å±é¡åæ¹æ¡ã',\r\n                apiError: 'èª¿ç¨ç²åæ¬éæ¥å£å¤±æï¼',\r\n                noDataAuthority: 'æ¨æ«ç¡æ¬éè¨­ç½®ç»ç»å¬å±æ¹æ¡ã',\r\n                noSelectedOrg: 'è«é¸æçµç¹å¬å±æ¹æ¡æå±¬çµç¹ã'\r\n            }\r\n        },\r\n        advancedMode: {\r\n            text: {\r\n                sysAdvancedName: 'ï¼é«ç´ï¼',\r\n                standardMode: 'æ¨åæ¨¡å¼',\r\n                advancedMode: 'é«ç´æ¨¡å¼',\r\n                addCondition: 'æ·»å æ¢ä»¶',\r\n                addConditionGroup: 'çææ¢ä»¶çµ',\r\n                and: 'ä¸',\r\n                or: 'æ',\r\n                reset: 'éç½®'\r\n\r\n            },\r\n            compareType: {\r\n                Equal: 'ç­äº',\r\n                NotEqual: 'ä¸ç­äº',\r\n                Greater: 'å¤§äº',\r\n                GreaterOrEqual: 'å¤§äºç­äº',\r\n                Less: 'å°äº',\r\n                LessOrEqual: 'å°äºç­äº',\r\n                Like: 'åå«',\r\n                LikeStartWith: 'éé ­æ¯',\r\n                LikeEndWith: 'çµå°¾æ¯',\r\n                NotLike: 'ä¸åå«'\r\n\r\n            },\r\n            auth: {\r\n                conditionEmptyError: 'é«ç´æ¨¡å¼ä¸ç¯©é¸é å¼ä¸æç²ç©ºã'\r\n            },\r\n            info: {\r\n                deleteGroup: 'æ¯å¦ç¢ºèªåæ¶è©²æ¢ä»¶çµï¼',\r\n                resetInfo: 'æ¯å¦ç¢ºèªéç½®æ¢ä»¶ï¼',\r\n                deleteGroupTooltip: 'åæ¶çµ',\r\n                noConditionInfo: 'è«åé¸æç¯©é¸æ¢ä»¶ã',\r\n                existGroupInfo: 'é¸æçæ¢ä»¶å·²å­å¨åçµã',\r\n                checkedGroupInfo: 'è·¨çµæä½æï¼æå¾é¸è©²çµä¸å¨é¨æ¸æã',\r\n                deleteGroupInfo: 'å·²ç¶æ¯æå¤å±¤åçµäºã'\r\n            }\r\n        }\r\n    },\r\n    en: {\r\n        extendQuerySolution: {\r\n            private: {\r\n                property: 'Private Plan',\r\n                setAsPrivate: 'Private Plan'\r\n            },\r\n            public: {\r\n                label: 'Public',\r\n                property: 'Public Plan',\r\n                setAsPublic: 'Public Plan'\r\n            },\r\n            org: {\r\n                label: 'Org',\r\n                property: 'Org Plan',\r\n                setAsOrgPublic: 'Org Plan',\r\n                placeholder: 'Please select'\r\n            },\r\n            auth: {\r\n                createError: 'Donnot have authority to set public solution.',\r\n                updateError: 'Donnot have authority to save public solution.',\r\n                deleteError: 'Donnot have authority to delete public solution.',\r\n                apiError: 'Failed to get authority data!',\r\n                noDataAuthority: 'Donnot have authority to set org-public solution.',\r\n                noSelectedOrg: 'Please select organizations for solution.'\r\n            }\r\n        },\r\n        advancedMode: {\r\n            text: {\r\n                sysAdvancedName: '(Advanced)',\r\n                standardMode: 'Standard Mode',\r\n                advancedMode: 'Advanced Mode',\r\n                addCondition: 'Add Condition',\r\n                addConditionGroup: 'Generate Condition Group',\r\n                and: 'And',\r\n                or: 'Or',\r\n                reset: 'Reset'\r\n\r\n            },\r\n            compareType: {\r\n                Equal: 'Equal',\r\n                NotEqual: 'NotEqual',\r\n                Greater: 'Greater',\r\n                GreaterOrEqual: 'GreaterOrEqual',\r\n                Less: 'Less',\r\n                LessOrEqual: 'LessOrEqual',\r\n                Like: 'Like',\r\n                LikeStartWith: 'LikeStartWith',\r\n                LikeEndWith: 'LikeEndWith',\r\n                NotLike: 'NotLike'\r\n\r\n            },\r\n            auth: {\r\n                conditionEmptyError: 'Filter condition value should not be empty in advanced mode.'\r\n            },\r\n            info: {\r\n                deleteGroup: 'Are you sure to cancel the condition group?',\r\n                resetInfo: 'Are you sure to reset conditions?',\r\n                deleteGroupTooltip: 'Cancel Condition Group.',\r\n                noConditionInfo: 'Please select conditions first.',\r\n                existGroupInfo: 'The selected condition already has a grouping.',\r\n                checkedGroupInfo: 'When operating across groups, all data under that group should be checked.',\r\n                deleteGroupInfo: 'It is already the outermost group.'\r\n            }\r\n        }\r\n    }\r\n};","import {\r\n    Component, OnInit, ViewEncapsulation, HostBinding, ComponentFactory, ComponentFactoryResolver,\r\n    Injector, Input, Output, EventEmitter, ViewChild, InjectFlags, ElementRef, OnChanges, SimpleChanges, ChangeDetectorRef, OnDestroy, Optional\r\n} from '@angular/core';\r\nimport { SaveAsDialogComponent } from './saveasdialog/saveasdialog.component';\r\nimport { SolutionManangerComponent } from './solutionmanager/solutionmanager.component';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport {\r\n    FieldConfig, ConvertorService, QueryCondition, QueryConditionComponent, QuerySolutionVo,\r\n    SmartHelpContol, DropDownListControl, CheckBoxControl, RadioControl, InputGroupControl, QuerySolutionExtendVo\r\n} from '@farris/component-querycondition';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { BsModalService, BsModalRef } from '@farris/ui-modal';\r\nimport { HttpService } from './service/httpservice';\r\nimport { FieldConfigService } from './service/fieldconfig.service';\r\nimport { QuerySolutionVoConvertor, SolutionService } from '@farris/component-querycondition';\r\nimport { IQuerySolutionHandler, QUERYSOLUTION_HANDLER_TOKEN } from './interface/IQuerySolutionHandler';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { SolutionCacheService } from './service/solution.cache.service';\r\nimport { DefaultConfigs } from './interface/DefaultConfigs';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport { IdService } from '@farris/ui-common';\r\nimport { BehaviorSubject, of, Subject } from 'rxjs';\r\nimport { switchMap, takeUntil, tap } from 'rxjs/operators';\r\nimport { EXTEND_QUERYSOLUTION_LOCALE } from './utils/extend-locale';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\ndeclare var gspframeworkService: any;\r\n\r\n@Component({\r\n    selector: 'farris-querysolution',\r\n    templateUrl: './query-solution.component.html',\r\n    styleUrls: ['./query-solution.component.css'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [HttpService, ConvertorService, FieldConfigService]\r\n})\r\nexport class QuerySolutionComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n    _fieldConfigs: Array<QueryCondition> = [];\r\n    _presetFieldConfigs: Array<QueryCondition> = [];\r\n    _resetFieldConfigs: Array<any> = [];\r\n\r\n    /**\r\n     *  ç­éæ¹æ¡é»è®¤å¼éç½®\r\n     */\r\n    @Input()\r\n    defaultConfigs: DefaultConfigs;\r\n    /**\r\n     * å­æ®µéç½®æ°æ®æºï¼ç¨äºéæ©å­æ®µéç½®\r\n     */\r\n    @Input()\r\n    set fieldConfigs(fieldConfigJson: Array<any>) {\r\n        this._fieldConfigs = this.solutionService.convertToQueryConditions(fieldConfigJson);\r\n        this.unformatFieldConfigs = fieldConfigJson\r\n    }\r\n    get fieldConfigs() {\r\n        return this._fieldConfigs;\r\n    }\r\n\r\n    /**\r\n     * é«çº§æ¨¡å¼éè¦åå§fieldConfigsï¼éè¦å°èå´ç±»æ§ä»¶æ¹ä¸ºåå¼æ§ä»¶\r\n     */\r\n    unformatFieldConfigs: Array<any> = []\r\n    /**\r\n     * ç³»ç»é¢ç½®æ¥è¯¢æ¹æ¡åç§°\r\n     */\r\n    @Input() presetQuerySolutionName: string;\r\n    @Input() \r\n    set resetFieldConfigs(resetFieldConfigJson: Array<any>) {\r\n        if(!resetFieldConfigJson || !Array.isArray(resetFieldConfigJson) || resetFieldConfigJson.length == 0) {\r\n            return;\r\n        }\r\n        // è§èæ°æ®\r\n        let formatResetConfigJson: Array<any> = resetFieldConfigJson.map(tConfigItem => {\r\n            let findItem = this.fieldConfigs.find(presetItem => presetItem['fieldCode'] == tConfigItem['labelCode']);\r\n            if(findItem) {\r\n                if(!tConfigItem.hasOwnProperty('control')) {\r\n                    tConfigItem['control'] = {};\r\n                }\r\n                tConfigItem['control']['controltype'] = findItem.control.getControlType();\r\n                return tConfigItem;\r\n            }\r\n        });\r\n        this._resetFieldConfigs = this.solutionService.convertToSimpleQueryConditions(formatResetConfigJson.filter(item => item));\r\n\r\n        if(this._resetFieldConfigs.length > 0) {\r\n            this.updateConditionVisibleState(this._resetFieldConfigs);\r\n        }\r\n        \r\n        // æ´æ°å·²æéç½®\r\n        this.solutionService.updateControl(this._presetFieldConfigs, this._resetFieldConfigs);\r\n        this.solutionService.updateControl(this._fieldConfigs, this._resetFieldConfigs);\r\n        this._fieldConfigs = this._fieldConfigs.slice();\r\n        // æ´æ°å·²æçæ¹æ¡\r\n        this.sysQuerySolutionVo && this.solutionService.updateControl(this.sysQuerySolutionVo.queryConditions, this._resetFieldConfigs);\r\n        // æ´æ°åå²è®°å½\r\n        this.historyRefer['foundSchme'] && this.solutionService.updateControl(this.historyRefer['foundSchme'].queryConditions, this._resetFieldConfigs);\r\n        // æ´æ°å·²é\r\n        this.selectedSolution && this.solutionService.updateControl(this.selectedSolution.queryConditions, this._resetFieldConfigs);\r\n    }\r\n    get resetFieldConfigs() {\r\n        return this._resetFieldConfigs;\r\n    }\r\n    /**\r\n     * é¢ç½®æ¥è¯¢å­æ®µ\r\n     */\r\n    @Input()\r\n    set presetFieldConfigs(presetFieldConfigJson: Array<any>) {\r\n        this._presetFieldConfigs = this.solutionService.convertToQueryConditions(presetFieldConfigJson);\r\n    }\r\n    get presetFieldConfigs() {\r\n        return this._presetFieldConfigs;\r\n    }\r\n\r\n    /**\r\n     * æ­¤å¼ç±è®¾è®¡å¨ä¼ å¥\r\n     * ç»ä»¶å¨è®¾è®¡æ¶æ æ³ç¹å»è¢«ç¦ç¨ï¼true\r\n     * ç»ä»¶å¨è¿è¡æ¶å¯ä»¥ç¹å»ä½¿ç¨ï¼false\r\n     */\r\n    @Input() isDisabled: boolean = false;\r\n    /**\r\n     * è¡¨åIDï¼å¿éå­æ®µï¼è¡¨ç¤ºæ¥è¯¢æ¹æ¡æå±çè¡¨å\r\n     */\r\n    @Input() formId: string;\r\n\r\n    /**\r\n     * sessionId\r\n     */\r\n    sessionId: string;\r\n\r\n    /**\r\n     * æ¥è¯¢æ¡ä»¶åè¡¨\r\n     */\r\n    @Output() queryEmitter: EventEmitter<any> = new EventEmitter<Array<QueryCondition>>();\r\n\r\n    /**\r\n     * æ¥è¯¢æ¹æ¡cls\r\n     */\r\n    @HostBinding('class') cls = 'query-solution';\r\n\r\n    /**\r\n     * æ¥è¯¢æ¹æ¡æ°æ®æº\r\n     */\r\n    querySolutionVos: Array<QuerySolutionVo> = new Array<QuerySolutionVo>();\r\n    querySolutionAdvancedVos: Array<QuerySolutionVo> = new Array<QuerySolutionVo>();\r\n\r\n    /**\r\n     * å½åæéçæ¹æ¡ï¼æå¯è½ä¸æ¯æ¹æ¡\r\n     */\r\n    selectedSolution: QuerySolutionVo = new QuerySolutionVo();\r\n\r\n    /**\r\n     * æ¯å¦æå \r\n     */\r\n    @Input() isFold: boolean = false;\r\n\r\n    /**\r\n     * labelåæ§ä»¶æ¯å¦ææä¸è¡ï¼é»è®¤æ¯ï¼falseæ¶ææä¸ä¸ä¸¤è¡\r\n     */\r\n    @Input() isControlInline: boolean = true;\r\n\r\n    /**\r\n     * æ¯å¦éè¦å®æ´æ¾ç¤ºè¶è¿6ä¸ªå­ç¬¦çæ ç­¾ï¼é»è®¤false\r\n     */\r\n    @Input() showCompleteLabel: boolean = false;\r\n\r\n    /**\r\n     * æ¯å¦å¯ç¨å è½½åæ¥è¯¢\r\n    */\r\n    @Input() enableInitQuery: boolean = false;\r\n    /**\r\n     * é»è®¤æ¹æ¡\r\n     */\r\n    defaultQuerySolution: QuerySolutionVo;\r\n\r\n    /**\r\n     * éæ©çæ§ä»¶å±ç¤ºåè¡¨\r\n     */\r\n    selectedFieldConditions: Array<QueryCondition> = new Array<QueryCondition>();\r\n\r\n    /**\r\n     * visibleå±æ§ä¸ºtrueçè¿æ»¤æ¡ä»¶ï¼æ¯åéselectedFieldConditionsçå­çº§\r\n     */\r\n    private visibleSelectedConditions: Array<QueryCondition> = new Array<QueryCondition>();\r\n\r\n    sysQuerySolutionVo: QuerySolutionVo;\r\n\r\n    showSaveButton: boolean;\r\n\r\n    //æ¹æ¡æ¯å¦èµé»è®¤å¼\r\n    isSetDefaultValue: boolean = false;\r\n\r\n    //æ¹æ¡æ¯å¦å·²èµé»è®¤å¼\r\n    doneSetDefaultValue: boolean = false;\r\n\r\n    //æ¯å¦å·²å®æèªå¨æ¥è¯¢ï¼é»è®¤å¼ä¸ºtrueï¼å½enableInitQueryè¾å¥å¼ä¸ºtrueæ¶ï¼é¦æ¬¡æ§è¡ngOnchanges()æ¶å°å¶è®¾ä¸ºfalse\r\n    doneInitQuery: boolean = true;\r\n\r\n    //å­æ®µæ¾ç¤ºéèå¨æç¶æ\r\n    private conditionVisibleState: BehaviorSubject<any> = new BehaviorSubject([]);\r\n    //è¡¨åå³é­æ¶åæ­¢çå¬BehaviorSubjectç¸å³\r\n    destroy$: Subject<any> = new Subject<any>();\r\n\r\n    private templateSimpleConditions: Array<any>;\r\n\r\n    //ç­éæé®æ¯å¦å¨çé¢å³ä¾§\r\n    //queryButtonOnRight: boolean = true;\r\n\r\n    /**\r\n     * ç»ä»¶æå¡æ¥å£\r\n    */\r\n    solutionHandler: IQuerySolutionHandler;\r\n    cdf: ChangeDetectorRef;\r\n    /**\r\n     * æ¡ä»¶æ¦è¦\r\n     */\r\n    summaryConditions = []\r\n    eventManager: EventManager;\r\n    /**\r\n     * æ¯å¦å¯ç¨è®°å½åå²æ¹å¼\r\n     * ä¸æ¬¡æ¥è¯¢ââä¸è½å é¤ãå¯ä»¥å¦å­ãä¸å­å¨åæ´\r\n     * æ¹æ¡åè¡¨åªæä¸æ¬¡æ¥è¯¢æ¶ï¼ä¸æ¬¡æ¥è¯¢ãç³»ç»é»è®¤é½å­å¨\r\n     * æ¹æ¡åè¡¨å¤ä¸ªæ¶ï¼æä¸æ¬¡æ¥è¯¢ï¼ä¸æ¬¡æ¥è¯¢éä¸­\r\n     * æ¹æ¡åè¡¨æ²¡æä¸æ¬¡æ¥è¯¢æ¶ï¼ä½æ¯LocalStorageæ,æé ä¸ä¸ªä¸æ¬¡æ¥è¯¢\r\n     * \r\n     */\r\n    @Input() enableHistory: boolean = false;\r\n\r\n    /**\r\n     * æ¯å¦å¯å¨é«çº§æ¨¡å¼\r\n     */\r\n    @Input() openAdvancedMode: boolean = false;\r\n    @Input() filterText: string = this.localeService.getValue(\"queryCondition.container.query\");\r\n    @Input() queryAfterValueChange: boolean = false\r\n    @Input() hideOrgselector: boolean = false\r\n    private historyRefer = {\r\n        schemeKey: '',// åå²è®°å½scheme\r\n        foundSchme: null,// åå²æ¹æ¡ä¿å­\r\n        schemeKeyLS: '',//LocalStorage åå²è®°å½æ è®°\r\n        initCondition: false//LocalStorageæ¯å¦æç§æ§è¡å®æ¥è¯¢\r\n    }\r\n\r\n    @ViewChild('farrisQueryCondition') farrisQueryCondition: QueryConditionComponent;\r\n    @ViewChild('manageDialog') manageDialog: SolutionManangerComponent;\r\n    @ViewChild('saveAsDialog') saveAsDialog: SaveAsDialogComponent;\r\n    _self: any;\r\n    private _idSer: IdService;\r\n    private msgSer: any;\r\n\r\n    constructor(private notify: NotifyService, private resolver: ComponentFactoryResolver, private injector: Injector,\r\n        private modalService: BsModalService, private convertService: ConvertorService, private solutionService: SolutionService,\r\n        private httpService: HttpService, private fieldConfigService: FieldConfigService, private localeService: LocaleService) {\r\n        this._idSer = new IdService();\r\n        this.solutionHandler = this.injector.get<IQuerySolutionHandler>(QUERYSOLUTION_HANDLER_TOKEN, null, InjectFlags.Optional);\r\n        this.msgSer = this.injector.get(MessagerService);\r\n        this._self = this.injector.get(ElementRef);\r\n        this.cdf = this.injector.get(ChangeDetectorRef);\r\n        this.eventManager = this.injector.get(EventManager);\r\n        if(!this.localeService.langData['extendQuerySolution']) {\r\n            this.localeService.setLocaleData(EXTEND_QUERYSOLUTION_LOCALE);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._self.nativeElement.removeEventListener(\"keydown\", this.handleKeyDown);\r\n        //this.removeCurrentSolutionCache();\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes['defaultConfigs']) {\r\n            this.isSetDefaultValue = true;\r\n            if (changes['defaultConfigs'].currentValue && !changes['defaultConfigs'].firstChange) {//è®¾è®¡æ¶ä¸ä¼ç»defaultConfigsèµå¼\r\n                this.setQueryConditionValues(changes['defaultConfigs'].currentValue, this.selectedSolution);\r\n                this.initAutoQuery(this.selectedSolution);\r\n            }\r\n        }\r\n        if (changes['enableInitQuery'] && changes['enableInitQuery'].firstChange && changes['enableInitQuery'].currentValue) {\r\n            this.doneInitQuery = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ç»ä»¶åå§å\r\n     */\r\n    ngOnInit(): void {\r\n        //åªå¨è¿è¡æ¶ è·åsessionIdï¼æ¥è¯¢å·²å­å¨æ¹æ¡\r\n        this.initSysQuerySolution();\r\n        if (!this.isDisabled) {\r\n            this.sessionId = this.solutionHandler.getUserSessionId();\r\n            // ç¼å­åå²æ¹æ¡\r\n            this.initAutoQueryByLS();\r\n            // å è½½æ¹æ¡åè¡¨\r\n            this.loadQuerySolutions();\r\n            //æ³¨åé®ççå¬äºä»¶\r\n            this.listenKeyBoard();\r\n            this.getConditionVisibleState().pipe(takeUntil(this.destroy$)).subscribe((simpleConditions) => {\r\n                if(this.selectedFieldConditions.length > 0) {\r\n                    this.updateFieldParams(simpleConditions);\r\n                } else {\r\n                    this.templateSimpleConditions = simpleConditions;\r\n                }\r\n                this.visibleSelectedConditions = this.selectedFieldConditions.filter((item: QueryCondition) => { return !!item.visible });\r\n                this.whenFoldSetSummaryConditions();\r\n                !this.isDisabled && this.solutionHandler.setCurrentQueryConditions(cloneDeep(this.visibleSelectedConditions));\r\n            });\r\n        } else {\r\n            //è®¾è®¡æ¶åªå è½½ç³»ç»é¢ç½®æ¹æ¡\r\n            this.loadSysQuerySolution();\r\n        }\r\n    }\r\n\r\n    initSysQuerySolution() {\r\n        if (this.presetQuerySolutionName && this.presetQuerySolutionName != '') {\r\n            this.sysQuerySolutionVo = new QuerySolutionVo();\r\n            this.sysQuerySolutionVo.id = this.solutionService.getGuid();\r\n            this.sysQuerySolutionVo.code = (this.presetQuerySolutionName != this.localeService.getValue(\"querySolution.container.sysPresetName\")) ? this.presetQuerySolutionName : this.localeService.getValue(\"querySolution.container.defaultName\");\r\n            this.sysQuerySolutionVo.queryConditions = cloneDeep(this.presetFieldConfigs);\r\n            this.sysQuerySolutionVo.belongId = this.formId;\r\n            this.sysQuerySolutionVo.isSystem = true;\r\n            this.sysQuerySolutionVo.mode = '1';\r\n            // this.querySolutionVos.push(this.sysQuerySolutionVo);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * å è½½ç³»ç»é¢ç½®æ¹æ¡\r\n     */\r\n    loadSysQuerySolution() {\r\n        this.querySolutionVos.push(this.sysQuerySolutionVo);\r\n        this.selectedSolution = cloneDeep(this.sysQuerySolutionVo);\r\n        this.loadQueryConditions();\r\n    }\r\n\r\n    /**\r\n     * è§èæ¹æ¡æ¡ä»¶\r\n     */\r\n    private formatQuerySolutionVO(tConvertor: QuerySolutionVoConvertor, element, fromJobject = false): QuerySolutionVo {\r\n        let querysolutionVO: QuerySolutionVo;\r\n        let sourceData: any;\r\n        let _fieldCodeArr: Array<string> = [];\r\n        let _tQueryConditions: Array<QueryCondition>;\r\n        if (fromJobject) {\r\n            querysolutionVO = tConvertor.initFromJobject(element);\r\n        } else {\r\n            querysolutionVO = element;\r\n        }\r\n        this.fieldConfigs.forEach(_item => { _fieldCodeArr.push(_item.fieldCode) });\r\n        if (querysolutionVO && querysolutionVO.queryConditions && querysolutionVO.queryConditions.length > 0) {\r\n            //è¥è¡¨åä¸å é¤äºæä¸ªå­æ®µï¼ä½å·²ä¿å­çèªå®ä¹æ¹æ¡ä¸­åå«è¯¥å­æ®µæ¶ï¼å¨å è½½æ¹æ¡è¿ç¨ä¸­å°è¯¥å­æ®µåé¤\r\n            _tQueryConditions = querysolutionVO.queryConditions.filter(function (element) {\r\n                return _fieldCodeArr.indexOf(element.fieldCode) > -1;\r\n            });\r\n            querysolutionVO.queryConditions = _tQueryConditions;\r\n\r\n            //å¯¹èªå®ä¹æ¹æ¡çå½éåä¿¡æ¯ãå¸®å©æ§ä»¶çå¸®å©ååå¸®å©åäºä»¶è¿è¡å¨æèµå¼\r\n            querysolutionVO.queryConditions.forEach(element => {\r\n                sourceData = this.fieldConfigs.find(_item => _item.fieldCode == element.fieldCode);\r\n                element.fieldName = sourceData.fieldName;\r\n                element.placeHolder = sourceData.placeHolder;\r\n                element.beginPlaceHolder = sourceData.hasOwnProperty('beginPlaceHolder') ? sourceData['beginPlaceHolder'] : '';\r\n                element.endPlaceHolder = sourceData.hasOwnProperty('endPlaceHolder') ? sourceData['endPlaceHolder'] : '';                                \r\n                if (sourceData.control.preEventCmd) {\r\n                    (element.control as SmartHelpContol).preEventCmd = sourceData.control.preEventCmd;\r\n                }\r\n                if (sourceData.control.postEventCmd) {\r\n                    (element.control as SmartHelpContol).postEventCmd = sourceData.control.postEventCmd;\r\n                }\r\n                if (sourceData.control.clear) {\r\n                    (element.control as SmartHelpContol).clear = sourceData.control.clear;\r\n                }\r\n                if (sourceData.control.click) {\r\n                    (element.control as InputGroupControl).click = sourceData.control.click;\r\n                }\r\n                if(sourceData.control.beforeShow) {\r\n                    (element.control as DropDownListControl).beforeShow = sourceData.control.beforeShow;\r\n                }\r\n                if(sourceData.control.beforeHide) {\r\n                    (element.control as DropDownListControl).beforeHide = sourceData.control.beforeHide;\r\n                }\r\n                if(sourceData.control.dateChangedCmd) {\r\n                    (element.control as any).dateChangedCmd = sourceData.control.dateChangedCmd;\r\n                }\r\n                if (sourceData.control.enumValues && sourceData.control.enumValues.length > 0) {\r\n                    (element.control as DropDownListControl).enumValues = sourceData.control.enumValues;\r\n                    (element.control as RadioControl).enumValues = sourceData.control.enumValues;\r\n                }\r\n                if (sourceData.control.data && sourceData.control.data.length > 0) {\r\n                    (element.control as CheckBoxControl).data = sourceData.control.data;\r\n                }\r\n            });\r\n            //å¨æ­¤å¤queryconditionå¤çå®æ¯ï¼éè¦å°queryconditionåå®¹å¡«åè³queryConditionsAdvanced\r\n            if(querysolutionVO.queryConditionsAdvanced) {\r\n                let _queryConditionsAdvanced = tConvertor.complicateTreeData(querysolutionVO.queryConditionsAdvanced, querysolutionVO.queryConditions)\r\n                querysolutionVO.queryConditionsAdvanced = cloneDeep(_queryConditionsAdvanced)\r\n            }\r\n        }\r\n        return querysolutionVO;\r\n    }\r\n\r\n    /**\r\n     * å è½½æ¥è¯¢æ¹æ¡æ°æ®\r\n     */\r\n    async loadQuerySolutions() {\r\n        const self = this;\r\n        this.httpService.query(this.formId, this.sessionId).subscribe((items: Array<any>) => {\r\n            const convertor = new QuerySolutionVoConvertor();\r\n            let querysolutionVO: QuerySolutionVo;\r\n            if (items && items.length > 0) {\r\n                //é«çº§æ¨¡å¼æªå¼å¯ç¶æä¸ï¼è¿æ»¤æç¸å³æ°æ®\r\n                if(!this.openAdvancedMode) {\r\n                    items = items.filter(val => val.mode !== '2')\r\n                }\r\n                items.forEach(element => {\r\n                    querysolutionVO = this.formatQuerySolutionVO(convertor, element, true);\r\n                    if (this.enableHistory && querysolutionVO['type'] == 'pre' && querysolutionVO.mode !== '2') {\r\n                        // å¦æè¿ååè¡¨åå­å¨åå²è®°å½                        \r\n                        querysolutionVO.code = this.localeService.getValue(\"querySolution.container.histroyName\");\r\n                        this.historyRefer['schemeKey'] = querysolutionVO.id;\r\n                        this.historyRefer['foundSchme'] = cloneDeep(querysolutionVO);\r\n                        this.historyRefer['initCondition'] = true;\r\n                        //  this.defaultQuerySolution = cloneDeep(querysolutionVO);\r\n                    } else if(querysolutionVO['type'] != 'pre') {\r\n                        //æ ¹æ®version éæ©å­å¥åªä¸ä¸ªæ°æ® 1ä¸ºæ åï¼2ä¸ºé«çº§\r\n                        if(querysolutionVO.mode === '2' ) {\r\n                            this.querySolutionAdvancedVos.push(querysolutionVO)\r\n\r\n                        } else {\r\n                            this.querySolutionVos.push(querysolutionVO);\r\n                        }\r\n                        \r\n\r\n                        if (querysolutionVO.isDefault) {\r\n                            //å¦ææé»è®¤æ¹æ¡ï¼åè®¾ç½®å¨å±é»è®¤æ¹æ¡\r\n                            this.defaultQuerySolution = cloneDeep(querysolutionVO);\r\n                        }\r\n                    }\r\n                });\r\n                //self.setSolutionCache(this.querySolutionVos);\r\n            }\r\n            if (this.enableHistory && !this.historyRefer['initCondition']) {\r\n                //å¦æè¿æ²¡æè®¾ç½®æ¡ä»¶\r\n                this.formatInitQuerySolution();\r\n            }\r\n            if (this.enableHistory && this.historyRefer['initCondition']) {\r\n\r\n                this.selectedSolution = cloneDeep(this.historyRefer['foundSchme']);\r\n                //åªæç¼å­è®°å½\r\n                this.querySolutionVos.splice(0, 0, this.historyRefer['foundSchme']);\r\n                //åå²è®°å½ä¸æ¯æé«çº§æ¨¡å¼\r\n                // if(this.historyRefer['foundSchme'].mode === '2' ) {\r\n                //     this.querySolutionAdvancedVos.splice(0, 0, this.historyRefer['foundSchme']);\r\n\r\n                // } else {\r\n                //     this.querySolutionVos.splice(0, 0, this.historyRefer['foundSchme']);\r\n                // }\r\n\r\n                if (this.querySolutionVos.length === 1) {\r\n                    // åªæä¸æ¬¡æ¥è¯¢æ¶\r\n                    this.querySolutionVos.push(this.sysQuerySolutionVo);\r\n                }\r\n                \r\n                if (this.querySolutionAdvancedVos.length === 0) {\r\n                    // åªæä¸æ¬¡æ¥è¯¢æ¶\r\n                    this.querySolutionAdvancedVos.push(this.initAdvancedSolution())\r\n                }\r\n                //self.setSolutionCache(this.querySolutionVos);\r\n                this.loadQueryConditions();\r\n                \r\n                // if(this.historyRefer['schemeKey'] !== ''){\r\n                //     //æ´æ°ä¸æ¬¡ç¼å­\r\n                //     this.changeQueryHistroy(false);\r\n                // }                \r\n            } else if (this.defaultQuerySolution || this.querySolutionVos.length || this.querySolutionAdvancedVos.length) {\r\n                //å¦æå·²æ¥å°æé»è®¤æ¹æ¡ï¼æå·²æå­å¨çæ¹æ¡\r\n                //ä¸åå è½½ç³»ç»éç½®çæ¹æ¡ï¼é¦åå è½½é»è®¤æ¹æ¡ï¼æ²¡æé»è®¤åå è½½ç¬¬ä¸ä¸ªæ¹æ¡\r\n                if (this.defaultQuerySolution && this.defaultQuerySolution.id != '') {\r\n                    this.selectedSolution = cloneDeep(this.defaultQuerySolution);\r\n                } else {\r\n                    const publicSolution = [...this.querySolutionVos, ...this.querySolutionAdvancedVos].find(item => item.type == 'public');\r\n                    if(publicSolution) {\r\n                        this.selectedSolution = publicSolution;\r\n                    } else {\r\n                        const orgSolution = [...this.querySolutionVos, ...this.querySolutionAdvancedVos].find(item => item.type == 'org');\r\n                        this.selectedSolution = !!orgSolution ? orgSolution : cloneDeep([...this.querySolutionVos, ...this.querySolutionAdvancedVos][0]);\r\n                    }\r\n                }\r\n                if (this.querySolutionVos.length < 1) {\r\n                    this.querySolutionVos.push(this.sysQuerySolutionVo)\r\n                }\r\n                if (this.querySolutionAdvancedVos.length < 1) {\r\n                    this.querySolutionAdvancedVos.push(this.initAdvancedSolution())\r\n                }\r\n                this.loadQueryConditions();\r\n            } else {\r\n                //å¦ææ²¡æä»»ä½å·²å­å¨çæ¹æ¡ï¼åå è½½ç³»ç»éç½®æ¹æ¡\r\n                this.loadSysQuerySolution();\r\n                this.querySolutionAdvancedVos.push(this.initAdvancedSolution())\r\n            }\r\n\r\n            if (this.isSetDefaultValue && !this.historyRefer['initCondition']) {\r\n                this.setQueryConditionValues(this.defaultConfigs, this.selectedSolution);\r\n            }\r\n\r\n            this.initAutoQuery(this.selectedSolution);\r\n        }, e => {\r\n            if(e && e.message) {\r\n                this.msgSer.show('error', e.message, {showHeader: false})\r\n            }\r\n        });\r\n    }\r\n\r\n    setSolutionCache(querySolutionVos: any) {\r\n        if (!this.isDisabled && gspframeworkService && querySolutionVos && querySolutionVos.length) {\r\n            // è·åå½ååè½èåä¿¡æ¯, å¹¶ä»¥åè½èåIDä¸ºç¼å­key\r\n            const option = gspframeworkService.rtf.session.getCommonVariable();\r\n            SolutionCacheService.setSolutionCache(option.tabId, querySolutionVos);\r\n            SolutionCacheService.solutionListChanged.next(true);\r\n        }\r\n    }\r\n\r\n    setCurrentSolutionCache(value: any) {\r\n        if (!this.isDisabled && gspframeworkService && value) {\r\n            // è·åå½ååè½èåä¿¡æ¯, å¹¶ä»¥åè½èåIDä¸ºç¼å­key\r\n            const option = gspframeworkService.rtf.session.getCommonVariable();\r\n            if (option && option.tabId) {\r\n                SolutionCacheService.setCurrentSolution(option.tabId, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n    removeCurrentSolutionCache() {\r\n        if (!this.isDisabled && gspframeworkService) {\r\n            // è·åå½ååè½èåä¿¡æ¯, å¹¶ä»¥åè½èåIDä¸ºç¼å­key\r\n            const option = gspframeworkService.rtf.session.getCommonVariable();\r\n            if (option && option.tabId) {\r\n                SolutionCacheService.removeCurrentSolution(option.tabId);\r\n            }\r\n        }\r\n    }\r\n    */\r\n\r\n    loadQueryConditions() {\r\n        //å è½½ç­éæ¡ä»¶\r\n        this.selectedFieldConditions = new Array<QueryCondition>();\r\n        if (this.selectedSolution && this.selectedSolution.queryConditions && this.selectedSolution.queryConditions.length > 0) {\r\n            // this.selectedFieldConditions = this.selectedSolution.queryConditions as Array<QueryCondition>;\r\n            this.selectedFieldConditions = this.selectedSolution.queryConditions;\r\n            if(this.templateSimpleConditions && this.templateSimpleConditions.length > 0) {\r\n                this.updateFieldParams(this.templateSimpleConditions);\r\n                this.templateSimpleConditions = new Array<any>();\r\n            }\r\n        }\r\n        this.visibleSelectedConditions = this.selectedFieldConditions.filter((item: QueryCondition) => { return !!item.visible });\r\n        // å¦ææ¹æ¡çåæ´æ¯å¨åææ¶\r\n        this.whenFoldSetSummaryConditions();\r\n        this.showSaveButton = this.selectedSolution.isSystem ? false : true;\r\n        !this.isDisabled && this.solutionHandler.setCurrentQueryConditions(cloneDeep(this.visibleSelectedConditions));\r\n        //this.setCurrentSolutionCache(this.selectedSolution);\r\n\r\n    }\r\n\r\n    getConditionVisibleState() {\r\n        return this.conditionVisibleState;\r\n    }\r\n\r\n    /**\r\n     * ä¼ éè¿æ¥çæ¯å·²ç»å¤çè¿çæ¡ä»¶\r\n     * @param simpleCondition \r\n     */\r\n    updateConditionVisibleState(simpleCondition: Array<any>) {\r\n        this.conditionVisibleState.next(simpleCondition);\r\n    }\r\n\r\n    // çå¬resetFieldConfigsåååï¼æ´æ°selectedFieldConditionsï¼å¹¶åæ­¥è³queryconditionï¼å¯å®ç°ç­éæ¡ä»¶å¨ææ¾ç¤ºéè\r\n    private updateFieldParams(simpleConditions: Array<any>) {\r\n        if(!simpleConditions || !simpleConditions.length) {\r\n            return;\r\n        }\r\n        const currentConditions = cloneDeep(this.selectedFieldConditions);\r\n        const updatedConditions = currentConditions.map((item: QueryCondition) => {\r\n            for(const simpleCondition of simpleConditions) {\r\n                if(simpleCondition.hasOwnProperty('visible') && item.fieldCode == simpleCondition['fieldCode'] && item.visible !== simpleCondition['visible']) {\r\n                    item.visible = simpleCondition['visible'];\r\n                    item.value.clearValue();\r\n                    this.markAsChanged(true, this.selectedSolution.id);\r\n                }\r\n            }\r\n            return item;\r\n        });\r\n        this.selectedFieldConditions = updatedConditions.slice();\r\n    }\r\n\r\n    saveAs() {\r\n        this.openSaveAsDialog(this.localeService.getValue(\"querySolution.saveAsDialog.title\"));\r\n    }\r\n\r\n    /**\r\n     * è·åé»è®¤æ ç­¾\r\n     * @param solution\r\n     */\r\n    getDefaultLabel(solution: QuerySolutionVo) {\r\n        if (!(this.defaultQuerySolution)) {\r\n            return { 'visibility': 'hidden' }\r\n        }\r\n        else {\r\n            if (solution.id == this.defaultQuerySolution.id) {\r\n                // //ä¸å¤çäº\r\n            }\r\n            else {\r\n                return { 'visibility': 'hidden' }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ¹æ¡éæ©äºä»¶\r\n     * @param solution å½åéä¸­çæ¹æ¡\r\n     */\r\n    select(solution: QuerySolutionVo) {\r\n        this.selectedSolution = Object.assign(new QuerySolutionVo(), solution);\r\n        if (solution.queryConditions && solution.queryConditions.length > 0) {\r\n            this.selectedFieldConditions = this.selectedSolution.queryConditions;\r\n        }\r\n        else {\r\n            this.selectedFieldConditions = new Array<QueryCondition>();\r\n        }\r\n        this.showSaveButton = this.selectedSolution.isSystem ? false : true;\r\n        this.visibleSelectedConditions = this.selectedFieldConditions.filter((item: QueryCondition) => { return !!item.visible });\r\n        !this.isDisabled && this.solutionHandler.setCurrentQueryConditions(cloneDeep(this.visibleSelectedConditions));\r\n        //this.setCurrentSolutionCache(this.selectedSolution);\r\n        // å¦ææ¹æ¡çåæ´æ¯å¨åææ¶\r\n        this.whenFoldSetSummaryConditions();\r\n    }\r\n\r\n    selectAndQuery(solution: QuerySolutionVo) {\r\n        //é«çº§æ¨¡å¼ä¸ä½¿ç¨é»è®¤å¼\r\n        if (solution.mode !== '2' && (this.defaultConfigs && this.defaultConfigs.isCurrent || (solution.isSystem && solution.type !== 'pre'))) {\r\n            this.setQueryConditionValues(this.defaultConfigs, solution);//å·²åå«selectæä½\r\n        } else {\r\n            if (solution.mode !== '2' && this.enableHistory && solution.type == 'pre') {\r\n                let conditions = cloneDeep(this.historyRefer['foundSchme']['queryConditions']);\r\n                if (conditions.length > 0) {\r\n                    solution.queryConditions = conditions;\r\n                }\r\n            }\r\n            this.select(solution);\r\n        }\r\n        this.query();\r\n    }\r\n    \r\n    /**\r\n     * æå¼å­æ®µéç½®çªå£\r\n     */\r\n    openFieldConfigDialog() {\r\n        this.farrisQueryCondition.openFieldConfigDialog();\r\n    }\r\n\r\n    fieldConditionsChangeHander($event: any) {\r\n        let data = $event;\r\n        if(this.selectedSolution.mode === '2') {\r\n            this.selectedSolution.queryConditions = data\r\n            let target = this.querySolutionAdvancedVos.find(val => val.id === this.selectedSolution.id)\r\n            if(target ) {\r\n                target.queryConditions = this.selectedSolution.queryConditions\r\n                target.queryConditionsAdvanced = this.selectedSolution.queryConditionsAdvanced\r\n            }\r\n        }\r\n        // this.selectedSolution.queryConditions = data;æ­¤æ¶ä¸æ¹åå½åéä¸­çæ¹æ¡ï¼ç­å°ä¿å­æ¶ï¼ç´æ¥è°ç¨this.selectedFieldConditionsæ¥ä¿å­ã\r\n        this.selectedFieldConditions = data;\r\n        this.visibleSelectedConditions = this.selectedFieldConditions.filter((item: QueryCondition) => { return !!item.visible });\r\n        if (!this.isDisabled) {\r\n            this.solutionHandler.setCurrentQueryConditions(cloneDeep(this.visibleSelectedConditions));\r\n            this.solutionHandler.setFilterConditions(this.visibleSelectedConditions);\r\n            //this.setCurrentSolutionCache(this.selectedSolution);\r\n        }\r\n        if(this.queryAfterValueChange) {\r\n            this.query()\r\n        }\r\n        this.markAsChanged(true, this.selectedSolution.id);\r\n    }\r\n    //é«çº§æ¨¡å¼æ°å¢ï¼é«çº§æ¨¡å¼ä¸ä¸ä»éè¦ä¿®æ¹conditionsï¼è¿éè¦ä¿®æ¹solutionçç¸å³å±æ§\r\n    fieldSolutionChangeHander($event: any) {\r\n        let data = $event;\r\n        this.selectedSolution = data\r\n    }\r\n\r\n    /**\r\n     * ä¿å­æ¹æ¡\r\n     */\r\n    save() {\r\n        if (!this.formId) {\r\n            this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.pleaseInput\"), 'error', '', 1500);\r\n            return;\r\n        }\r\n        //idä¸ºç©ºåè¡¨ç¤ºæ²¡æé¢ç½®æ¹æ¡ï¼åæ­¤æ¶ä¿å­æ¹æ¡ç¸å½äºæ°å¢ä¸ä¸ªæ¹æ¡\r\n        if (!this.selectedSolution.id) {\r\n            this.openSaveAsDialog(this.localeService.getValue(\"querySolution.container.save\"));\r\n        }\r\n        //ç´æ¥ä¿å­\r\n        else {\r\n            const checkAuthority$ = this.httpService.getAuth('QuerySolution', this.sessionId);\r\n            checkAuthority$.pipe(\r\n                switchMap(\r\n                    (data: any) => {\r\n                        if(!data['success'] && (this.selectedSolution.type == 'public' || this.selectedSolution.type == 'org')) {\r\n                            this.solutionService.showInfo(this.localeService.getValue('extendQuerySolution.auth.updateError'), 'warning', '', 1500);\r\n                            return of(false);\r\n                        } else {\r\n                            this.selectedSolution.queryConditions = this.selectedFieldConditions;\r\n                            const save$ = this.httpService.update(this.selectedSolution, this.sessionId);\r\n                            return save$.pipe(\r\n                                tap(\r\n                                    () => {\r\n                                        if(this.selectedSolution.mode === '2') {\r\n                                            let tempIndex = this.querySolutionAdvancedVos.findIndex(x => x.id == this.selectedSolution.id);\r\n                                            // this.selectedFieldConditions = this.selectedSolution.queryConditions;\r\n                                            this.querySolutionAdvancedVos.splice(tempIndex, 1, this.selectedSolution);\r\n                                        } else {\r\n                                            let tempIndex = this.querySolutionVos.findIndex(x => x.id == this.selectedSolution.id);\r\n                                            // this.selectedFieldConditions = this.selectedSolution.queryConditions;\r\n                                            this.querySolutionVos.splice(tempIndex, 1, this.selectedSolution);\r\n                                        }\r\n                                        \r\n                                        this.markAsChanged(false, this.selectedSolution.id);\r\n                                        this.farrisQueryCondition.canClearRelatedFields = false;\r\n                                        this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.saveSuccess\"), 'success', '', 1500);\r\n                                    },\r\n                                    error => {\r\n                                        this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.saveFail\"), 'error', '', 1500);\r\n                                        throw error;\r\n                                    }\r\n                                )\r\n                            )\r\n                        }\r\n                    }\r\n                ),\r\n                tap(\r\n                    () => { },\r\n                    error => {\r\n                        console.warn(this.localeService.getValue('extendQuerySolution.auth.apiError'));\r\n                    }\r\n                )\r\n            ).subscribe();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æå¼å¦å­ä¸ºå¯¹è¯æ¡ï¼ç¹å»ä¿å­æé®æ¶ä¹èµ°è¯¥é»è¾\r\n     * @param title\r\n     */\r\n    openSaveAsDialog(title: string) {\r\n        if (!this.formId) {\r\n            this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.pleaseInput\"), 'error', '', 1500);\r\n            return;\r\n        }\r\n        this.saveAsDialog.title = title;\r\n        this.saveAsDialog.querySolution = this.newSaveAsSolutionVo();\r\n        this.saveAsDialog.radioGroupValue = 'private';\r\n        this.saveAsDialog.show();\r\n    }\r\n\r\n    newSaveAsSolutionVo = () => {\r\n        //å½åéä¸­çæ¹æ¡ï¼åä¿®æ¹ç­éæ¡ä»¶åï¼å¶åæ¥çç­éæ¡ä»¶å¹¶æ²¡æååï¼ä»ä»this.selectedFieldConditionsæåå\r\n        const solution = cloneDeep(this.selectedSolution);\r\n        //æ°å¢çæ¹æ¡è¦æ¸ç©ºæ¥è¯¢æ¹æ¡ç¼å·\r\n        solution.code = '';\r\n        //æ¯å¦ç³»ç»å±æ§å¿é¡»è®¾ç½®ä¸ºFalse\r\n        solution.isSystem = false;\r\n        //è§£å³æ¹æ¡æå±è¡¨å\r\n        solution.belongId = this.formId;\r\n        //æ°å¢æ¹æ¡Idéè¦Guid\r\n        solution.id = this.solutionService.getGuid();\r\n        //æ°å¢æ¹æ¡isDefaultéè¦è®¾ç½®ä¸ºfalse\r\n        solution.isDefault = false;\r\n        //æ°å¢æ¹æ¡çç­éæ¡ä»¶ï¼æ¯å½åéä¸­çç­éæ¡ä»¶\r\n        solution.queryConditions = this.selectedFieldConditions;\r\n        //è®¾ç½®ç±»åè¦æ¸ç©º\r\n        solution.type = \"private\";\r\n        solution.isChanged = false;\r\n        solution.extendId = 'query-scheme-1';\r\n        solution.extendInfo = new Array<QuerySolutionExtendVo>();\r\n        return solution;\r\n    }\r\n\r\n    /**\r\n     * å¦å­ä¸ºç¡®å®äºä»¶å¤ç\r\n     * @param solution æ°å¢çæ¥è¯¢æ¹æ¡\r\n     */\r\n    saveAsConfrimHandler(_event: any) {\r\n        const solution: QuerySolutionVo = _event['querySolution'];\r\n        if (solution.queryConditions && solution.queryConditions.length) {\r\n            solution.queryConditions.forEach(element => {\r\n                if (!!element.readonly) {\r\n                    element.readonly = false;\r\n                }\r\n            });\r\n        }\r\n        this.httpService.create(solution, this.sessionId).subscribe(\r\n            () => {\r\n                //éæ°è®¾ç½®å¨å±çé»è®¤æ¹æ¡\r\n                if (solution.isDefault) {//è¢«è®¾ç½®ä¸ºé»è®¤æ¹æ¡\r\n                    this.defaultQuerySolution = solution;\r\n                    this.querySolutionVos = this.querySolutionVos.map(vo => {\r\n                        vo.isDefault = false;\r\n                        return vo;\r\n                    });\r\n                    this.querySolutionAdvancedVos = this.querySolutionAdvancedVos.map(vo => {\r\n                        vo.isDefault = false;\r\n                        return vo;\r\n                    });\r\n                }\r\n                //ç¨æ·ä¿å­èªå·±çç­éæ¹æ¡åï¼ä¸åæ¾ç¤ºç³»ç»é»è®¤çæ¹æ¡ï¼æä½æ¹æ¡ä¸ºé«çº§æ¨¡å¼æ¶ä¸å½±åæ å\r\n                if (this.querySolutionVos.length === 1 && this.querySolutionVos[0].isSystem && solution.mode === '1') {\r\n                    //ç¨æ·æ²¡æéç½®èªå·±çç­éæ¹æ¡æ¶ï¼æèç¨æ·åªéç½®äºä¸ä¸ªç­éæ¹æ¡æ¶ï¼æ­¤æ°ç»é½æä¸ä¸ªæ¹æ¡ï¼è¥æ­¤æ¹æ¡æ¯ç³»ç»é»è®¤æ¹æ¡ï¼ååºå¨å¦å­ä¸ºæ¶å æ\r\n                    this.querySolutionVos = new Array<QuerySolutionVo>();\r\n                } else if(this.querySolutionVos.length === 2 && this.enableHistory) {   \r\n                    let filterSolutionVos = new Array<QuerySolutionVo>();                 \r\n                    filterSolutionVos = this.querySolutionVos.filter(item => {\r\n                        if(item.type == 'pre'){\r\n                            return true;\r\n                        }\r\n                        return !item.isSystem\r\n                    })\r\n                    this.querySolutionVos = filterSolutionVos;\r\n                }\r\n                //é«çº§æ¨¡å¼åç\r\n                if (this.querySolutionAdvancedVos.length === 1 && this.querySolutionAdvancedVos[0].isSystem && solution.mode === '2') {\r\n                    this.querySolutionAdvancedVos = new Array<QuerySolutionVo>();\r\n                } else if(this.querySolutionAdvancedVos.length === 2 && this.enableHistory) {   \r\n                    let filterSolutionVos = new Array<QuerySolutionVo>();                 \r\n                    filterSolutionVos = this.querySolutionAdvancedVos.filter(item => {\r\n                        if(item.type == 'pre'){\r\n                            return true;\r\n                        }\r\n                        return !item.isSystem\r\n                    })\r\n                    this.querySolutionAdvancedVos = filterSolutionVos;\r\n                }\r\n\r\n                solution.mode === '2' ? this.querySolutionAdvancedVos.push(solution) : this.querySolutionVos.push(solution);\r\n                this.selectedSolution = solution;\r\n                this.showSaveButton = this.selectedSolution.isSystem ? false : true;\r\n                this.selectedFieldConditions = this.selectedSolution.queryConditions;\r\n                this.visibleSelectedConditions = this.selectedFieldConditions.filter((item: QueryCondition) => { return !!item.visible });\r\n                this.farrisQueryCondition.canClearRelatedFields = false;\r\n                this.saveAsDialog.isDefault = false;\r\n                this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.saveSuccess\"), 'success', '', 1500);\r\n            },\r\n            error => {\r\n                this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.saveFail\"), 'error', '', 1500);\r\n                throw error;\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * æå¼ç®¡ççé¢\r\n     */\r\n    openManangerDialog() {\r\n        this.httpService.getAuth('QuerySolution', this.sessionId).subscribe(data => {\r\n            this.manageDialog.authorityError = data['success'] ? false: true;\r\n            this.manageDialog.show(cloneDeep([...this.querySolutionVos, ...this.querySolutionAdvancedVos]));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * ç®¡ççé¢ç¡®å®å¤ç\r\n     * @param _event\r\n     * @param dialog\r\n     */\r\n    managerConfirmHandler(_event: any) {\r\n        let obj: object = _event;\r\n        if (obj['validator'] == true) {\r\n            //ç¹å»checkboxæ¶ï¼newDefaultQuerySolutionè¢«èµå¼ï¼ å¨å±é»è®¤æ¹æ¡è¢«å é¤æ¶ï¼newDefaultQuerySolutionåä¸ºnull\r\n            const defaultId = obj['newDefaultQuerySolution'] ? obj['newDefaultQuerySolution'].id : '';\r\n            const belongId = this.formId;\r\n            //è¥æ²¡æå é¤ä»»ä½æ¹æ¡ï¼deletedQuerySolutionVosä¼æ¯ä¸ä¸ªç©ºæ°ç»\r\n            const deletedIds = obj['deletedQuerySolutionIds'];\r\n            this.httpService.batchUpdate({ defaultId, belongId, deletedIds }, this.sessionId).subscribe(\r\n                () => {\r\n                    //æå é¤åçvoèµå¼ç» this.querySolutionVosï¼å¦ææ²¡å é¤æ¹æ¡ï¼ this.querySolutionVosè·obj['splicedQuerySolutionVos']åå¼\r\n                    //é»è®¤æ¹æ¡çååä¹è®°å½å¨updatedQuerySolutionVosä¸­\r\n                    this.querySolutionVos = obj['updatedQuerySolutionVos'].filter(val => val.mode !== '2');\r\n                    this.querySolutionAdvancedVos = obj['updatedQuerySolutionVos'].filter(val => val.mode === '2');\r\n                    if (!obj['currentDefaultQuerySolutionId']) {//å¦æä¼ è¿æ¥çå½åé»è®¤æ¹æ¡idæ¯ç©ºï¼ä»£è¡¨ææé»è®¤æ¹æ¡é½åæ¶äº\r\n                        this.defaultQuerySolution = null;\r\n                    }\r\n                    //å¦ææé»è®¤æ¹æ¡åæ¾ç¤ºé»è®¤æ¹æ¡ï¼å¦ææ²¡æé»è®¤æ¹æ¡åç´æ¥æ¾ç¤ºå½åæ¥è¯¢æ¹æ¡çç¬¬ä¸ä¸ªï¼å¦ææ²¡æä»»ä½æ¥è¯¢æ¹æ¡åç´æ¥æ¸ç©ºæ¥è¯¢æ¹æ¡ï¼åæ¾ç¤ºç³»ç»é¢ç½®çé»è®¤æ¹æ¡\r\n                    if (defaultId) {\r\n                        //å·²è®¾ç½®é»è®¤æ¹æ¡\r\n                        this.select(obj['newDefaultQuerySolution']);\r\n                        this.defaultQuerySolution = obj['newDefaultQuerySolution'];\r\n\r\n                        if (this.querySolutionVos.length === 0 || (this.enableHistory && this.querySolutionVos.length === 1 && this.querySolutionVos[0].type == 'pre')) {\r\n                            this.querySolutionVos.push(this.sysQuerySolutionVo);\r\n                        }\r\n                        if (!this.querySolutionAdvancedVos.length) {\r\n                            this.querySolutionAdvancedVos.push(this.initAdvancedSolution())\r\n                        }\r\n                    } else {\r\n                        //æªæ´æ¹é»è®¤æ¹æ¡ï¼å¤æ­å½åéæ©çæ¥è¯¢æ¹æ¡æ¯å¦å·²è¢«å é¤\r\n                        if (deletedIds.includes(this.selectedSolution.id)) {//å¦æè¢«å é¤\r\n                            if (this.querySolutionVos.length > 0) {\r\n                                if(this.enableHistory && this.querySolutionVos.length == 1 && this.querySolutionVos[0].type == 'pre'){\r\n                                    this.select(this.sysQuerySolutionVo);\r\n                                    this.querySolutionVos.push(this.sysQuerySolutionVo);\r\n                                } else {\r\n                                    const publicSolution = this.querySolutionVos.find(item => item.type == 'public');\r\n                                    if(publicSolution) {\r\n                                        this.select(publicSolution);\r\n                                    } else {\r\n                                        const orgSolution = this.querySolutionVos.find(item => item.type == 'org');\r\n                                        this.select(!!orgSolution ? orgSolution : cloneDeep(this.querySolutionVos[0]));\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                this.select(this.sysQuerySolutionVo);\r\n\r\n                                this.querySolutionVos.push(this.sysQuerySolutionVo);\r\n                            }\r\n                            //é«çº§æ¨¡å¼æ²¡æçè¯ä¹éè¦å¢å é»è®¤\r\n                            if(!this.querySolutionAdvancedVos.length) {\r\n                                this.querySolutionAdvancedVos.push(this.initAdvancedSolution())\r\n                            }\r\n                        } else {\r\n                            //ä»ä¹ä¹æ²¡åç\r\n                            //æææçé»è®¤é½åæ¶äº\r\n                            if(this.querySolutionVos.length === 0 || (this.enableHistory && this.querySolutionVos.length === 1 && this.querySolutionVos[0].type == 'pre')){\r\n                                this.querySolutionVos.push(this.sysQuerySolutionVo);\r\n                            } \r\n                            if(!this.querySolutionAdvancedVos.length) {\r\n                                this.querySolutionAdvancedVos.push(this.initAdvancedSolution())\r\n                            }\r\n                        }\r\n                    }\r\n                    this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.saveSuccess\"), 'success', '', 1500);\r\n                },\r\n                error => {\r\n                    this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.saveFail\"), 'error', '', 1500);\r\n                    return Observable.throw(error);\r\n                }\r\n            )\r\n        } else {\r\n            //æ ¡éªå¤±è´¥\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ§è¡ç­é\r\n     */\r\n    query() {\r\n        if (!this.isDisabled) {\r\n            const errorArr = this.solutionService.isValid(this.visibleSelectedConditions);\r\n            //é«çº§æ¨¡å¼ä¸ä¸ç¨å¤æ­requireï¼æèªå·±çæ ¡éªé»è¾\r\n            if (errorArr && errorArr.length && this.selectedSolution.mode !== '2') {\r\n                const errorFields = errorArr.map(error => error.field);\r\n                this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.require\").replace('{fields}', errorFields.join(', ')), 'warning', '', 2500);\r\n            } else {\r\n                //é«çº§æ¨¡å¼ä¸å¿é¡»æææ¡ä»¶é½æå¼ï¼å¦åä¼å½±åå±çº§ä¸å³èå³ç³»\r\n                \r\n                let queryConditions = cloneDeep(this.visibleSelectedConditions);\r\n                if(this.selectedSolution.mode === '2') {\r\n                    queryConditions = cloneDeep(this.selectedFieldConditions);\r\n                    let emptyFlag = queryConditions.find(val => val.value.isEmpty())\r\n                    if( emptyFlag ) {\r\n                        this.notify.warning(this.localeService.getValue('advancedMode.auth.conditionEmptyError'))\r\n                        return\r\n                    }\r\n                    \r\n                }\r\n                this.solutionHandler.setFilterConditions(queryConditions);\r\n                this.queryEmitter.emit(queryConditions);\r\n                // æ´æ°åå²è®°å½\r\n                this.changeQueryHistroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ¸ç©º->æ¡ä»¶å¨é¨éç½®ä¸ºç©º\r\n     */\r\n    clear() {\r\n        // this.isFold = !this.isFold;\r\n        const isNotEmpty = this.visibleSelectedConditions.some(condition => condition.value.isEmpty() == false);\r\n        if (isNotEmpty) {\r\n            const newList: Array<QueryCondition> = cloneDeep(this.farrisQueryCondition.resetSelectedConditionValues(true));\r\n            this.selectedFieldConditions = newList;\r\n            this.selectedSolution.queryConditions = newList;\r\n            this.visibleSelectedConditions = this.selectedFieldConditions.filter((item: QueryCondition) => { return !!item.visible });\r\n            this.solutionHandler.setCurrentQueryConditions(cloneDeep(this.visibleSelectedConditions));\r\n            this.solutionHandler.setFilterConditions(this.visibleSelectedConditions);\r\n            this.markAsChanged(true, this.selectedSolution.id);\r\n            this.query();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æå æé®çæ¸ç©º\r\n     */\r\n    foldClearHandler() {\r\n        if (this.isFold) {\r\n            // å¦æç¹å»çæ¶åæ¯åæç\r\n            this.isFold = false;\r\n            if (this.summaryConditions.length > 0) {\r\n                this.summaryConditions = [];\r\n                this.clear();\r\n            }\r\n        } else {\r\n            // å¦æç¹å»çæ¶åæ¯å±å¼ç\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ç®­å¤´ç¹å»äºä»¶\r\n     */\r\n    arrowClick() {\r\n        this.isFold = !this.isFold;\r\n        this.whenFoldSetSummaryConditions();\r\n        if (!this.isFold) {\r\n            this.summaryConditions = [];\r\n        }\r\n    }\r\n\r\n    private whenFoldSetSummaryConditions() {\r\n        if (this.isFold) {\r\n            // å¦æåæ\r\n            const isNotEmpty = this.visibleSelectedConditions.some(condition => condition.value.isEmpty() == false);\r\n            if (isNotEmpty) {\r\n                this.summaryConditions = this.visibleSelectedConditions.filter(condition => condition.value.isEmpty() == false);\r\n            } else {\r\n                this.summaryConditions = [];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ä¸ºç³»ç»é¢ç½®æ¹æ¡æèèªå®ä¹æ¥è¯¢æ¹æ¡è®¾ç½®ç­éæ¡ä»¶é»è®¤å¼\r\n     * @param configs é»è®¤å¼è®¾ç½®\r\n     * @param selectedSolution å½åéæ©çç­éæ¹æ¡\r\n     */\r\n    setQueryConditionValues(configs: DefaultConfigs, selectedSolution: QuerySolutionVo): void {\r\n        let targetSolution: QuerySolutionVo;\r\n        let targetSolutionWithValues: QuerySolutionVo;\r\n        //é«çº§æ¨¡å¼ä¸ä¸æ¯æé»è®¤å¼\r\n        if (configs && Array.isArray(configs.fieldConfigs) && configs.fieldConfigs.length && selectedSolution.mode !== '2') {\r\n            if(selectedSolution.hasOwnProperty('type') && selectedSolution['type'] == 'pre') {\r\n                //å¦ææ¯åå²è®°å½\r\n                targetSolution = null; \r\n                this.select(selectedSolution);\r\n            } else {\r\n                targetSolution = configs.isCurrent ? selectedSolution : (selectedSolution.isSystem ? selectedSolution : null);\r\n            }\r\n            if (targetSolution && targetSolution.queryConditions && targetSolution.queryConditions.length) {\r\n                targetSolutionWithValues = cloneDeep(this.solutionService.setValues(targetSolution, configs.fieldConfigs, !!configs.readonly));\r\n                this.doneSetDefaultValue = true;\r\n                this.select(targetSolutionWithValues);\r\n            } else {\r\n                //ä¸ä¸ºèªå®ä¹æ¹æ¡è®¾ç½®é»è®¤å¼æ¶ï¼æ è®°ä¸è¦ä¸ºå¶èµé»è®¤å¼çæå¾ï¼ä½æªæå\r\n                this.doneSetDefaultValue = true;\r\n\r\n                //å¦ææ²¡æè®¾ç½®é»è®¤å¼ï¼å°±æå½åéä¸­æ¹æ¡çæ¡ä»¶çå¼ä¼ åº\r\n                this.solutionHandler.setCurrentQueryConditions(this.selectedSolution.queryConditions);\r\n            }\r\n        } else {\r\n            this.select(selectedSolution)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * å è½½ç­éæ¹æ¡åèªå¨æ¥è¯¢\r\n     * @param currentSolution å½åç­éæ¹æ¡ \r\n     */\r\n    initAutoQuery(currentSolution: QuerySolutionVo): void {\r\n        if (this.enableInitQuery && this.doneInitQuery && this.enableHistory && currentSolution.mode !== '2') {\r\n            // å·²éè¿åå²è®°å½è¿è¡è¿æ¥è¯¢\r\n            return;\r\n        }\r\n        let enableQuery: boolean = true;\r\n        if (currentSolution && currentSolution.queryConditions && currentSolution.queryConditions.length) {\r\n            if (this.isSetDefaultValue && !this.doneSetDefaultValue) {\r\n                enableQuery = false;\r\n            }\r\n        } else {\r\n            enableQuery = false;\r\n        }\r\n\r\n        if (enableQuery && this.enableInitQuery) {\r\n            // this.solutionHandler.setFilterConditions(this.selectedSolution.queryConditions); æ§è¡queryæ¹æ³æ¶ï¼å·²ç»æ§è¡setFilterConditions\r\n            //if(this._self.nativeElement.querySelector('.farris-panel .btn-group .btn-primary')){\r\n            setTimeout(() => {\r\n                this.query();\r\n                this.doneInitQuery = true;\r\n            });\r\n            //}\r\n        }\r\n    }\r\n\r\n    /**\r\n     * å½åæ¥è¯¢æ¹æ¡çç­éæ¡ä»¶åçååæ¶ï¼æ è®°æ¹æ¡å¤äºç¼è¾ç¶æ\r\n     * @param isChanged æ¹æ¡æ¯å¦å¤äºç¼è¾ç¶æ\r\n     * @param solutionId éè¦æ è®°æ¯å¦å¤äºç¼è¾ç¶æçæ¹æ¡çid\r\n     */\r\n    markAsChanged(isChanged: boolean, solutionId: string) {\r\n        this.querySolutionVos.forEach(solution => {\r\n            if (solution.id == solutionId)\r\n                solution.isChanged = isChanged;\r\n        });\r\n        this.querySolutionAdvancedVos.forEach(solution => {\r\n            if (solution.id == solutionId)\r\n                solution.isChanged = isChanged;\r\n        });\r\n        this.selectedSolution.isChanged = isChanged;\r\n        this.cdf.detectChanges();\r\n    }\r\n\r\n    /**\r\n     * å¤çç­éæé®åæ¸ç©ºæé®çååºå¼ä½ç½®åæ´\r\n     * @param $event farris-queryconditionç»ä»¶åé¨æ¯å¦æ¾ç¤ºæé®\r\n     */\r\n    // showButtonHandle($event: any) {\r\n    //     if(!this.isDisabled){\r\n    //         let data = $event;\r\n    //         this.queryButtonOnRight = !data;\r\n    //         if(this.enableInitQuery && !this.doneInitQuery) {\r\n    //             this.initAutoQuery(this.selectedSolution);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * é®ççå¬å½æ°ï¼å½æä¸åè½¦é®æ¶ç¸å½äºæä¸ç­éæé®\r\n     */\r\n    private listenKeyBoard() {\r\n        this._self.nativeElement.addEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = (event) => {\r\n        if (event.key == 'Enter') {\r\n            //é«çº§æ¨¡å¼ä¸æ°æ®æ ¼å¼çé®é¢ï¼è¾å¥ç¶æä¸­ç´æ¥åè½¦ï¼è¾å¥æ¡ç±»åæ§ä»¶æ æ³æ´æ°valueï¼æå¨è§¦åä¸ä¸å¤±å»ç¦ç¹ï¼æ´æ°ç¶æ\r\n            if(this.selectedSolution.mode === '2') {\r\n                let activeEle  = document.activeElement as HTMLElement\r\n                activeEle.blur()\r\n                activeEle.focus()\r\n            }\r\n            this.query();\r\n        }\r\n           \r\n    }\r\n    /**\r\n     * èªå¨åå§åæ¥è¯¢\r\n     * å¯ç¨åå²è®°å½ï¼å¹¶ä¸å¯ç¨äºåå§åæ¥è¯¢ï¼å¦æææ¡ä»¶ï¼å°±è¿è¡æ¥è¯¢\r\n     */\r\n    private initAutoQueryByLS() {\r\n        // å¯ç¨åå²\r\n        if (this.enableHistory && !this.isDisabled) {\r\n            // key\r\n            this.setLSKey();\r\n            // åå§åå¯¹è±¡\r\n            this.initQuerySolution();\r\n            // å¦æè®¾ç½®äºåå§æ¥è¯¢\r\n            if (this.enableInitQuery) {\r\n                this.formatInitQuerySolution();\r\n                if (this.historyRefer['foundSchme']['queryConditions'].length > 0) {\r\n                    const queryConditions = cloneDeep(this.historyRefer['foundSchme']['queryConditions']);\r\n                    this.selectedFieldConditions = queryConditions;\r\n                    this.visibleSelectedConditions = this.selectedFieldConditions.filter((item: QueryCondition) => { return !!item.visible });\r\n                    const visibleConditions = cloneDeep(this.visibleSelectedConditions);\r\n                    // è®¾ç½®æ¥è¯¢æ¡ä»¶\r\n                    this.solutionHandler.setFilterConditions(visibleConditions);\r\n                    // æåºæ¥è¯¢äºä»¶\r\n                    this.queryEmitter.emit(visibleConditions);\r\n                    // æ è®°\r\n                    this.doneInitQuery = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * åå§å\r\n     */\r\n    private initQuerySolution() {\r\n        let querysolutionVO = new QuerySolutionVo();\r\n        querysolutionVO.id = this.solutionService.getGuid();\r\n        querysolutionVO.code = this.localeService.getValue(\"querySolution.container.histroyName\");\r\n        querysolutionVO.queryConditions = [];\r\n        querysolutionVO.belongId = this.formId;\r\n        querysolutionVO.isSystem = true;\r\n        querysolutionVO.type = 'pre';\r\n        querysolutionVO.mode = '1';\r\n        querysolutionVO.queryConditionsAdvanced = {relation:1, items:[], children: [], path: [1], groupid:1}\r\n        this.historyRefer['foundSchme'] = querysolutionVO;\r\n    }\r\n    /**\r\n     * åå§åé«çº§æ¨¡å¼\r\n     */\r\n     private initAdvancedSolution() {\r\n        let querysolutionVO = new QuerySolutionVo();\r\n        querysolutionVO.id = this.solutionService.getGuid();\r\n        querysolutionVO.code = ((this.presetQuerySolutionName != this.localeService.getValue(\"querySolution.container.sysPresetName\")) ? this.presetQuerySolutionName : this.localeService.getValue(\"querySolution.container.defaultName\")) + this.localeService.getValue(\"advancedMode.text.sysAdvancedName\");;\r\n        querysolutionVO.queryConditions = [];\r\n        querysolutionVO.belongId = this.formId;\r\n        querysolutionVO.isSystem = true;\r\n        querysolutionVO.type = 'pre';\r\n        querysolutionVO.mode = '2';\r\n        querysolutionVO.queryConditionsAdvanced = {relation:1, items:[], children: [], path: [1], groupid:1}\r\n        return querysolutionVO\r\n    }\r\n\r\n    /**\r\n     * åå§åæ¥èªLSçæ¡ä»¶\r\n     */\r\n    private formatInitQuerySolution() {\r\n        let histroyCondition = this.httpService.getLS(this.historyRefer.schemeKeyLS);\r\n        if (histroyCondition.length > 0) {\r\n            let convertor = new QuerySolutionVoConvertor();\r\n            this.historyRefer['foundSchme']['queryConditions'] = histroyCondition;\r\n            // è§èåæ¡ä»¶\r\n            this.historyRefer['foundSchme'] = this.formatQuerySolutionVO(convertor, this.historyRefer['foundSchme']);\r\n            // æ´æ°éç½®\r\n            this.solutionService.updateControl(this.historyRefer['foundSchme'], this.resetFieldConfigs);\r\n            this.historyRefer.initCondition = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ä¿å­ä¹åæ´æ°åå²\r\n     */\r\n    private changeQueryHistroy(updateAll = true) {\r\n        if (!this.enableHistory || this.selectedSolution.mode !== '1') {\r\n            return;\r\n        }\r\n        let preIndex = this.querySolutionVos.findIndex((qsolutionVO) => {\r\n            return qsolutionVO['type'] == 'pre';\r\n        });\r\n        // æ§è¡æ¥è¯¢ä¹åï¼ä¸æ¬¡æ¥è¯¢çä¿®æ¹å°±ä¸è®¤ä¸ºæ¯åæ´äº\r\n        if (preIndex > -1) {\r\n            this.querySolutionVos[preIndex]['isChanged'] = false;\r\n        }\r\n        if (this.selectedSolution['type'] == 'pre') {\r\n            this.selectedSolution['isChanged'] = false;\r\n        }\r\n        const queryConditions = cloneDeep(this.selectedFieldConditions);\r\n\r\n        this.historyRefer['foundSchme'].queryConditions = queryConditions;\r\n        // æ´æ°ç¼å­\r\n        this.httpService.setLS(this.historyRefer.schemeKeyLS, this.historyRefer['foundSchme'].queryConditions);\r\n        if (updateAll) {\r\n            // åèµ·è¯·æ±ä¿å­åå²è®°å½\r\n            this.httpService.saveHistroy(this.historyRefer['foundSchme'], this.sessionId).subscribe(() => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * å¤çiframeåµå¥\r\n     */\r\n    private getTopWindow(): Window {\r\n        let curWin: Window = window.self;\r\n        try {\r\n            while (curWin.location.origin === curWin.parent.location.origin) {\r\n                if (curWin !== curWin.parent && !(curWin as any).isRTFTopWin) {\r\n                    curWin = curWin.parent;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        } catch (e) { }\r\n        return curWin;\r\n    }\r\n\r\n    /**\r\n     * è®¾ç½®key\r\n     */\r\n    private setLSKey() {\r\n        // è·åwindow\r\n        let curWindow = this.getTopWindow();\r\n        let userCode = '';\r\n        if (curWindow['gspframeworkService'] && curWindow['gspframeworkService'].hasOwnProperty('common')) {\r\n            userCode = curWindow['gspframeworkService']['common'].userInfos.get().code;\r\n        }\r\n        this.historyRefer.schemeKeyLS = userCode ? 'Scheme' + this._idSer.encrypt(userCode + this.formId) : '';\r\n    }\r\n\r\n    // å¤æ­å½åç¨æ·æ¯å¦ææéè®¾ç½®å¬å±ç±»åç­éæ¹æ¡\r\n    checkAuthority(e: any) {\r\n        if(e != 'private') { \r\n            this.httpService.getAuth('QuerySolution', this.sessionId).subscribe(data => {\r\n                if(data) {\r\n                    if(!data['success']) {\r\n                        this.solutionService.showInfo(this.localeService.getValue('extendQuerySolution.auth.createError'), 'warning', '', 1500);\r\n                        this.saveAsDialog.authorityError = true;\r\n                        this.saveAsDialog.radioGroupValue = this.saveAsDialog.pRadioGroupValue;\r\n                    } else {\r\n                        if(e == 'org') {\r\n                            const orgData = data['authOrganizationData'];\r\n                            if (Array.isArray(orgData) && orgData.length) {\r\n                                this.saveAsDialog.dataPermissionIds = orgData;\r\n                                if (orgData.toString() != '*' && !this.saveAsDialog.selectedOrgIds.length) {\r\n                                    this.saveAsDialog.selectedOrgIds = this.saveAsDialog.dataPermissionIds;\r\n                                }\r\n                                this.saveAsDialog.noDataAuthority = false;\r\n                                this.saveAsDialog.pRadioGroupValue = e;\r\n                            } else {\r\n                                this.solutionService.showInfo(this.localeService.getValue('extendQuerySolution.auth.noDataAuthority'), 'warning', '', 1500);\r\n                                this.saveAsDialog.noDataAuthority = true;\r\n                                this.saveAsDialog.radioGroupValue = this.saveAsDialog.pRadioGroupValue;\r\n                            }\r\n                        } else {\r\n                            this.saveAsDialog.pRadioGroupValue = e;\r\n                        }\r\n                    }\r\n                } else {\r\n                    console.warn(this.localeService.getValue('extendQuerySolution.auth.apiError'));\r\n                }\r\n            });\r\n        } else {\r\n            this.saveAsDialog.pRadioGroupValue = e;\r\n            this.saveAsDialog.authorityError = false;\r\n        }\r\n    }\r\n    \r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst itemIndex = (item: any, data: any[]): number => {\r\n    for (let idx = 0; idx < data.length; idx++) {\r\n        if (data[idx].id === item.id) {\r\n            return idx;\r\n        }\r\n    }\r\n\r\n    return -1;\r\n};\r\n\r\n@Injectable()\r\nexport class EditService {\r\n    private createdItems: any[] = [];\r\n    private updatedItems: any[] = [];\r\n\r\n    public update(item: any): void {\r\n        if (!this.isNew(item)) {\r\n            const index = itemIndex(item, this.updatedItems);\r\n            if (index !== -1) {\r\n                this.updatedItems.splice(index, 1, item);\r\n            } else {\r\n                this.updatedItems.push(item);\r\n            }\r\n        } else {\r\n            const index = this.createdItems.indexOf(item);\r\n            this.createdItems.splice(index, 1, item);\r\n        }\r\n    }\r\n\r\n    public isNew(item: any): boolean {\r\n        return !item.id;\r\n    }\r\n\r\n    public assignValues(target: any, source: any): void {\r\n        Object.assign(target, source);\r\n    }\r\n    \r\n}\r\n","import { Component, OnInit, ViewChild, TemplateRef, Output, EventEmitter, Input} from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { EditService } from '../service/edit.service';\r\nimport { NotifyService, NotifyOptions } from '@farris/ui-notify';\r\nimport { QuerySolutionVo } from '@farris/component-querycondition';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { cloneDeep } from 'lodash-es';\r\n@Component({\r\n    selector: 'app-solutionmanager',\r\n    templateUrl: './solutionmanager.component.html',\r\n    styleUrls: ['./solutionmanager.component.css'],\r\n    providers: [EditService]\r\n})\r\nexport class SolutionManangerComponent implements OnInit {\r\n\r\n    @Output() cancelEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() confirmEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n    \r\n    // @Input()\r\n    // currentDefaultQuerySolutionId: string;\r\n    // @Input()\r\n    querySolutions: Array<QuerySolutionVo> = new Array<QuerySolutionVo>();\r\n\r\n    deletedQuerySolutionIds: Array<String> = new Array<String>();\r\n    checkedSolution: QuerySolutionVo;\r\n    listData: QuerySolutionVo[];\r\n\r\n    @ViewChild('dialog') dialog: DialogComponent;\r\n    // è·åå®ä¹çååæ ¼æ¨¡æ¿\r\n    @ViewChild('optCell') optCell: TemplateRef<any>;\r\n    @ViewChild('checkCell') checkCell: TemplateRef<any>;\r\n    @ViewChild('list') list: DatagridComponent;\r\n    columns: Array<any>;\r\n    title: string;\r\n    authorityError = false;\r\n\r\n    constructor(private formBuilder: FormBuilder, private editService: EditService, private notify: NotifyService, private localeService: LocaleService) { }\r\n\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.columns = [\r\n            { field: 'code', width: 272, title: this.localeService.getValue('querySolution.manageDialog.name')},\r\n            { field: 'property', width: 110, title: this.localeService.getValue('querySolution.manageDialog.property'), formatter: this.propertyFieldFormatter, halign: 'center', align: 'center'},\r\n            { field: 'isDefault', width: 70, title: this.localeService.getValue('querySolution.manageDialog.default'), template: this.checkCell, halign: 'center', align: 'center'},\r\n            { width: 70, title: this.localeService.getValue('querySolution.manageDialog.operation'), template: this.optCell, halign: 'center', align: 'center'}\r\n        ];\r\n        this.title = this.localeService.getValue('querySolution.container.manage');\r\n    }\r\n\r\n    show(querySolutions: QuerySolutionVo[]) {\r\n        if(querySolutions){\r\n            this.listData = this.findSolutionsWithoutSys(querySolutions);\r\n            this.querySolutions = querySolutions;\r\n        }\r\n        this.checkedSolution = this.querySolutions.find(vo => vo.isDefault);\r\n\r\n        this.deletedQuerySolutionIds = [];\r\n        // this.checkedSolution = undefined;\r\n        this.dialog.show();\r\n    }\r\n\r\n    getSolutionProperty(value: boolean) {\r\n        return value ? this.localeService.getValue(\"querySolution.manageDialog.system\") : this.localeService.getValue(\"querySolution.manageDialog.personal\");\r\n    }\r\n\r\n    propertyFieldFormatter = (value, data) => {\r\n        if(data['type'] == 'public') {\r\n            return this.localeService.getValue(\"extendQuerySolution.public.property\");\r\n        } else if(data['type'] == 'org') {\r\n            return this.localeService.getValue(\"extendQuerySolution.org.property\");\r\n        } \r\n        else {\r\n            return this.localeService.getValue(\"extendQuerySolution.private.property\");\r\n        }\r\n    }\r\n\r\n    findSolutionsWithoutSys(querySolutions: QuerySolutionVo[]): QuerySolutionVo[]{\r\n        const result: QuerySolutionVo[] = [];\r\n        querySolutions.forEach(qs => {\r\n            if(!qs.isSystem)\r\n                result.push(qs);\r\n        });\r\n        return result;\r\n    }\r\n\r\n    delelteSolution(dataItem: QuerySolutionVo) {\r\n        if(this.authorityError && (dataItem.type == 'public' || dataItem.type == 'org')) {\r\n            this.notify.config.position = 'top-center';\r\n            this.notify.warning(<NotifyOptions>{ title: '', msg: this.localeService.getValue(\"extendQuerySolution.auth.deleteError\"), timeout: 1500 });\r\n            return;\r\n        }\r\n        this.deletedQuerySolutionIds.push(dataItem.id);\r\n        if (this.checkedSolution && dataItem.id == this.checkedSolution.id) {\r\n            this.checkedSolution = null;\r\n        }\r\n        //å½checkedSolutionä¸å­å¨ï¼ç´æ¥å é¤\r\n        for(let i = 0; i < this.querySolutions.length; i++) {\r\n            if(dataItem.id == this.querySolutions[i].id){\r\n                this.querySolutions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        this.listData = this.findSolutionsWithoutSys(this.querySolutions);\r\n    }\r\n\r\n    setDefault(checked: boolean, dataItem: QuerySolutionVo) {\r\n        if (checked) {//if checkedï¼è®¾ç½®å½åvoä¸ºé»è®¤ï¼å¶ä»è®¾ä¸ºéé»è®¤\r\n            this.checkedSolution = dataItem;\r\n            //key pointï¼\r\n            // this.currentDefaultQuerySolutionId = dataItem.id;\r\n            this.querySolutions = this.querySolutions.map(vo => {\r\n                if(vo.id == dataItem.id) {\r\n                    vo.isDefault = true;\r\n                } else {\r\n                    vo.isDefault = false;\r\n                }\r\n                return vo;\r\n            });\r\n        }\r\n        else {//if unchecked, è®¾ç½®å½åvoä¸ºéé»è®¤ï¼å¶ä½voä¸å; æ²¡æcheckedSolutionæ¶\r\n            if (dataItem.id == this.checkedSolution.id) {\r\n                this.checkedSolution = null;\r\n                // this.currentDefaultQuerySolutionId = '';\r\n                this.querySolutions = this.querySolutions.map(vo => {\r\n                    if(vo.id == dataItem.id){\r\n                        vo.isDefault = false;\r\n                    }\r\n                    return vo;\r\n                });\r\n            }\r\n        }\r\n        this.listData = this.findSolutionsWithoutSys(this.querySolutions);\r\n        this.list.refresh();\r\n    }\r\n\r\n    cancel() {\r\n        this.dialog.close();\r\n    }\r\n\r\n    confirm() {\r\n        let obj = new Object();\r\n        \r\n        obj['deletedQuerySolutionIds'] = this.deletedQuerySolutionIds;\r\n        obj['newDefaultQuerySolution'] = cloneDeep(this.checkedSolution);\r\n        obj['updatedQuerySolutionVos'] = cloneDeep(this.querySolutions);\r\n        // obj['currentDefaultQuerySolutionId'] = this.currentDefaultQuerySolutionId;\r\n\r\n        if(this.deletedQuerySolutionIds.length > 0 || this.checkedSolution && this.checkedSolution.id) {\r\n            obj['validator'] = true;\r\n        } else {\r\n            obj['validator'] = false;\r\n        }\r\n        this.confirmEmitter.emit(obj);\r\n        this.dialog.close();\r\n    }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, ViewChild, TemplateRef, HostBinding, ViewEncapsulation, ElementRef, Input } from '@angular/core';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { QuerySolutionVo, QuerySolutionExtendVo, SolutionService } from '@farris/component-querycondition';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { cloneDeep } from 'lodash-es';\r\n@Component({\r\n  selector: 'app-saveasdialog',\r\n  templateUrl: './saveasdialog.component.html',\r\n  styleUrls: ['./saveasdialog.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SaveAsDialogComponent implements OnInit {\r\n\r\n  @HostBinding('class') cls = 'saveasdialog';\r\n  @Output() cancelEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() confirmEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() getAuthority: EventEmitter<any> = new EventEmitter<any>();\r\n  @Input() set hideOrgselector(e) {\r\n    //éèç»ç»æ¹æ¡\r\n    if(e) {\r\n      this.solutionType = this.solutionType.filter(val => val.value !== 'org')\r\n    }\r\n  }\r\n  //@Inputå±æ§ï¼æ§ä»£ç æªè®¾ç½®ï¼æä¿ç\r\n  querySolution: QuerySolutionVo = new QuerySolutionVo();\r\n  //æ°å¢@Inputå±æ§\r\n  title: string;\r\n  //åé¨å±æ§\r\n  defaultQuerySolution: QuerySolutionVo;\r\n\r\n  @ViewChild('dialog') dialog: DialogComponent;\r\n  // æ è®°codeä¸­æ¯å¦æå¼å¸¸\r\n  codeError = false;\r\n  // codeæé¿æ¯100ä¸ªå­ç¬¦ï¼ä¸è®ºä¸­è±æ\r\n  codeMaxLength = 100;\r\n  // æ¹æ¡ç±»åï¼ç¨æ·ä¸ªäººãå¨å±å¬å±ãç»ç»å¬å±\r\n  solutionType = [{\r\n    value: 'private',\r\n    name: this.localeService.getValue(\"extendQuerySolution.private.setAsPrivate\")\r\n  },\r\n  {\r\n    value: 'public',\r\n    name: this.localeService.getValue(\"extendQuerySolution.public.setAsPublic\")\r\n  },\r\n  {\r\n    value: 'org',\r\n    name: this.localeService.getValue(\"extendQuerySolution.org.setAsOrgPublic\")\r\n  }];\r\n  // å½åå·²éæ¹æ¡ç±»å\r\n  radioGroupValue: string = 'private';\r\n  pRadioGroupValue: string;\r\n  // æ¯å¦å·²åéåè½æéï¼æªåéæ¶å¼ä¸ºtrue\r\n  authorityError = false;\r\n  // æ¯å¦å·²åéæ°æ®æéï¼æªåéæ¶å¼ä¸ºtrue \r\n  noDataAuthority = false;\r\n  // åéçç»ç»æ°æ®æé\r\n  dataPermissionIds: string[] = [];\r\n  // ç»ç»éæ©ç»ä»¶çè¿åå¼\r\n  selectedOrgIds: string[] = [];\r\n  placeholder: string;\r\n\r\n  isDefault = false;\r\n\r\n  private currentLang: string;\r\n\r\n  languages = [\r\n    { code: 'zh-cn', name: 'ä¸­æç®ä½', default: true },\r\n    { code: 'en', name: 'English' },\r\n    { code: 'zh-CHT', name: 'ä¸­æç¹ä½' }\r\n  ];\r\n  solutionCodeObj: any;\r\n\r\n  constructor(private notify: NotifyService, private solutionService: SolutionService, private localeService: LocaleService) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.pRadioGroupValue = this.radioGroupValue;\r\n    this.placeholder = this.localeService.getValue('extendQuerySolution.org.placeholder');\r\n    //å¼å®¹æ§çè®¾è®¡å¨\r\n    this.currentLang = (window as any).gspframeworkService ? (window as any).gspframeworkService.rtf.language.getLanguageCode() : 'zh-cn';\r\n  }\r\n\r\n  show() {\r\n    this.dialog.show();\r\n  }\r\n\r\n  cancel() {\r\n    // this.cancelEmitter.emit(true);\r\n    this.solutionCodeObj = null;\r\n    this.dialog.close();\r\n  }\r\n\r\n  confirm() {\r\n    if (this.solutionCodeObj) {\r\n      this.codeChangeHandler(this.solutionCodeObj['zh-cn']);\r\n      this.codeChangeHandler(this.solutionCodeObj['en']);\r\n      this.codeChangeHandler(this.solutionCodeObj['zh-CHT']);\r\n      if (this.codeError) {\r\n        return;\r\n      }\r\n      this.querySolution.code_chs = this.solutionCodeObj['zh-cn'];\r\n      this.querySolution.code_en = this.solutionCodeObj['en'];\r\n      this.querySolution.code_cht = this.solutionCodeObj['zh-CHT'];\r\n    }\r\n\r\n    // å¦ææéè¯¯è¿å\r\n\r\n    // if (!this.querySolution.code) {\r\n    //   this.solutionService.showInfo(this.localeService.getValue('querySolution.saveAsDialog.pleaseInput'), 'info', '', 1500);\r\n    //   return;\r\n    // }\r\n\r\n    if (this.currentLang == 'zh-CHS') {\r\n      if (!this.querySolution.code_chs) {\r\n        this.solutionService.showInfo(this.localeService.getValue('querySolution.saveAsDialog.pleaseInput'), 'info', '', 1500);\r\n        return;\r\n      }\r\n      this.querySolution.code = this.querySolution.code_chs;\r\n    } else if (this.currentLang == 'en') {\r\n      if (!this.querySolution.code_en) {\r\n        this.solutionService.showInfo(this.localeService.getValue('querySolution.saveAsDialog.pleaseInput'), 'info', '', 1500);\r\n        return;\r\n      }\r\n      this.querySolution.code = this.querySolution.code_en;\r\n    } else if (this.currentLang == 'zh-CHT') {\r\n      if (!this.querySolution.code_cht) {\r\n        this.solutionService.showInfo(this.localeService.getValue('querySolution.saveAsDialog.pleaseInput'), 'info', '', 1500);\r\n        return;\r\n      }\r\n      this.querySolution.code = this.querySolution.code_cht;\r\n    }\r\n    if (this.authorityError && this.radioGroupValue != 'private') {\r\n      this.solutionService.showInfo(this.localeService.getValue('extendQuerySolution.auth.createError'), 'warning', '', 1500);\r\n      return;\r\n    }\r\n    this.querySolution.type = this.radioGroupValue;\r\n    this.querySolution.isDefault = this.radioGroupValue == 'private' ? this.isDefault : false;\r\n    if (this.radioGroupValue == 'org') {\r\n      if (this.selectedOrgIds.length) {\r\n        this.querySolution.extendInfo = this.selectedOrgIds.map(id => {\r\n          let info = new QuerySolutionExtendVo();\r\n          info['id'] = this.solutionService.getGuid(),\r\n            info['relatedId'] = this.querySolution.id;\r\n          info['orgId'] = id;\r\n          return info;\r\n        })\r\n      } else {\r\n        this.solutionService.showInfo(this.localeService.getValue('extendQuerySolution.auth.noSelectedOrg'), 'info', '', 1500);\r\n        return;\r\n      }\r\n    }\r\n    let obj = new Object();\r\n    obj['querySolution'] = cloneDeep(this.querySolution);\r\n    this.confirmEmitter.emit(obj);\r\n    this.solutionCodeObj = null;\r\n    this.dialog.close();\r\n  }\r\n\r\n  setDefault(checkStatus: boolean) {\r\n    //this.querySolution.isDefault = checkStatus;\r\n    this.isDefault = checkStatus;\r\n  }\r\n\r\n  // ååæ¶æ£æµ\r\n  codeChangeHandler(result: string) {\r\n    if (result && result.length > this.codeMaxLength) {\r\n      this.codeError = true;\r\n    } else {\r\n      this.codeError = false;\r\n    }\r\n  }\r\n\r\n  // åæ¢æ¹æ¡ç±»åï¼ä¸ªäºº/å¬å±/ç»ç»å¬å±ï¼éè¦å¤æ­æé\r\n  changeSolutionType(e: any) {\r\n    this.querySolution.type = e;\r\n    this.querySolution.isDefault = e == 'private' ? this.isDefault : false;\r\n    this.getAuthority.emit(e);\r\n  }\r\n\r\n  // è·åç»ç»éæ©ç»ä»¶çè¿åå¼ï¼1ãå¼¹çªåç¹ç¡®å®ï¼2ãææ¬æ¡åç§»é¤åä¸ªï¼\r\n  getSelectedId(e: any) {\r\n    this.selectedOrgIds = (e.selections as Array<any>).map(org => org.orgId);\r\n  }\r\n\r\n  // æ¸ç©ºææ¬æ¡\r\n  clearAllOrgs() {\r\n    this.selectedOrgIds = [];\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Injector, OnDestroy } from '@angular/core';\r\nimport { QueryCondition, ControlType, TextValue, DropDownListControl, InputGroupValue, SmartHelpValue, NumberRangeValue, RadioControl, CheckBoxControl, CheckBoxValue } from '@farris/component-querycondition';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\nimport { NumberHelperService } from '@farris/ui-common/number';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n\r\n@Component({\r\n  selector: 'lib-summary-condition',\r\n  templateUrl: './summary-condition.component.html',\r\n  styleUrls: ['./summary-condition.component.css']\r\n})\r\nexport class SummaryConditionComponent implements OnInit {\r\n\r\n\r\n  private _condition: QueryCondition;\r\n  // å½åcontrolType\r\n  private _conditionType;\r\n  // åéç¬¦\r\n  private _spliter = '';\r\n  // æ¯å¦åºé´\r\n  private _isRange = false;\r\n  private showTime = false;\r\n  private textField = 'name';\r\n  private valueField = 'value';\r\n  // ä»æå¡å¨ç«¯åå¼æ¯æ ¼å¼ååç\r\n  private returnFormat = '';\r\n  // éè¦è½¬åç±»åæ ¼å¼çè¡¨è¾¾å¼\r\n  private format: any;\r\n  // è½¬æ¢ç±»åç¨å°çæ°æ®\r\n  private dataSource;\r\n  // ææ¬æ¾ç¤º\r\n  text = \"\";\r\n\r\n  @Input()\r\n  set condition(qCondition) {\r\n    this._condition = qCondition;\r\n    this.formatCondition();\r\n  }\r\n  get condition(): QueryCondition {\r\n    return this._condition;\r\n  };\r\n  // å¤è¯­è¨\r\n  private currentLanguage: string;\r\n  // ååä½ç¬¦å·\r\n  private thousand = ',';\r\n  // å°æ°ç¹å¤ç¬¦å·\r\n  private decimal = '.';\r\n  // è´§å¸ç¬¦å·åå¼å±ç°å½¢å¼\r\n  private expression = '%s%v';\r\n\r\n  // formControlæ¾ç¤ºçææ¬\r\n  /**\r\n   * å½éåç±»å\r\n   \r\n  @Input() localizationType: string;*/\r\n  // è´§å¸ç¬¦å·ï¼é»è®¤æ¯RMB\r\n  currencySymbol = 'ï¿¥';\r\n  // åè¿å¶åé¢å¡«åçç¬¦å·\r\n  @Input() filledSymbol = '0';\r\n  //æ°å¼æ ¼å¼åæ°\r\n  private numberOptions;\r\n\r\n  private localeService: any;\r\n  constructor(\r\n    private dtHelper: DateTimeHelperService,\r\n    private numberHelper: NumberHelperService,\r\n    private injector: Injector\r\n  ) {\r\n    this.localeService = this.injector.get(LocaleService);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  formatCondition() {\r\n    let qCondition = this.condition;\r\n    if (qCondition) {\r\n      this._conditionType = qCondition.control.getControlType();\r\n      let textValueObj;\r\n      let textOriginalValue = qCondition.value.getOriginalValue();\r\n      let startValue;\r\n      let endValue;\r\n      switch (this._conditionType) {\r\n        case ControlType.Text:\r\n          //ææ¬\r\n          textValueObj = qCondition.value as TextValue;\r\n          textOriginalValue = textValueObj.value && textValueObj.value.trim();\r\n          break;\r\n        case ControlType.SingleNumber:\r\n          // æ°å¼\r\n          this.numberOptions = { precision: qCondition.control['precision'], type: 'number' }\r\n          break;\r\n        case ControlType.NumberRange:\r\n          // æ°å¼åºé´\r\n          this._isRange = true;\r\n          this._spliter = '~';\r\n          this.numberOptions = { precision: qCondition.control['precision'], type: 'number' };\r\n          startValue = qCondition.value['startValue'] ? qCondition.value['startValue'] : '';\r\n          endValue = qCondition.value['endValue'] ? qCondition.value['endValue'] : '';\r\n          textOriginalValue = [startValue, endValue].join(this._spliter);\r\n          break;\r\n        case ControlType.SingleDate:\r\n          //åä¸ªæ¥æ\r\n          this.returnFormat = qCondition.control && qCondition.control['returnFormat'] ? qCondition.control['returnFormat'] : \"yyyy-MM-dd\";\r\n          this.format = qCondition.control && qCondition.control['format'] ? qCondition.control['format'] : \"yyyy-MM-dd\";\r\n          break;\r\n\r\n        case ControlType.DateRange:\r\n          //æ¥æåºé´\r\n          this._isRange = true;\r\n          this._spliter = '~';\r\n          this.returnFormat = qCondition.control && qCondition.control['returnFormat'] ? qCondition.control['returnFormat'] : \"yyyy-MM-dd\";\r\n          this.format = qCondition.control && qCondition.control['format'] ? qCondition.control['format'] : \"yyyy-MM-dd\";\r\n\r\n          startValue = qCondition.value['startTime'] ? qCondition.value['startTime'] : '';\r\n          endValue = qCondition.value['endTime'] ? qCondition.value['endTime'] : '';\r\n          textOriginalValue = [startValue, endValue].join(this._spliter);\r\n          break;\r\n\r\n        case ControlType.SingleYear:\r\n          // åªæå¹´\r\n          this.returnFormat = qCondition.control && qCondition.control['returnFormat'] ? qCondition.control['returnFormat'] : \"yyyy\";\r\n          this.format = qCondition.control && qCondition.control['format'] ? qCondition.control['format'] : \"yyyy\";\r\n          break;\r\n        case ControlType.SingleMonth:\r\n          // åªææ\r\n          this.returnFormat = qCondition.control && qCondition.control['returnFormat'] ? qCondition.control['returnFormat'] : \"yyyy-MM\";\r\n          this.format = qCondition.control && qCondition.control['format'] ? qCondition.control['format'] : \"yyyy-MM\";\r\n          break;\r\n        case ControlType.MonthRange:\r\n          // æèå´\r\n          this._isRange = true;\r\n          this._spliter = '~';\r\n          this.returnFormat = qCondition.control && qCondition.control['returnFormat'] ? qCondition.control['returnFormat'] : \"yyyy-MM\";\r\n          this.format = qCondition.control && qCondition.control['format'] ? qCondition.control['format'] : \"yyyy-MM\";\r\n          startValue = qCondition.value['startTime'] ? qCondition.value['startTime'] : '';\r\n          endValue = qCondition.value['endTime'] ? qCondition.value['endTime'] : '';\r\n          break;\r\n        case ControlType.SingleDateTime:\r\n          // æ¶é´\r\n          this.showTime = true;\r\n          this.returnFormat = qCondition.control['returnFormat'] ? qCondition.control['returnFormat'] : this.returnFormat;\r\n          this.format = 'yyyy-MM-dd HH:mm:ss';\r\n          if(qCondition.control) {\r\n            if(qCondition.control['enableCustomFormat']) {\r\n              this.format = qCondition.control['format'] ? qCondition.control['format'] : this.returnFormat;\r\n            }else{\r\n              this.format = qCondition.control && qCondition.control['format'] ? qCondition.control['format'] + ' HH:mm:ss' : this.returnFormat;\r\n            }\r\n          }         \r\n          break;\r\n        case ControlType.DateTimeRange:\r\n          // æ¶é´åºé´\r\n          this.showTime = true;\r\n          this._isRange = true;\r\n          this._spliter = '~';\r\n          this.returnFormat = qCondition.control['returnFormat'] ? qCondition.control['returnFormat'] : this.returnFormat;\r\n          this.format = 'yyyy-MM-dd HH:mm:ss';\r\n          if(qCondition.control) {\r\n            if(qCondition.control['enableCustomFormat']) {\r\n              this.format = qCondition.control['format'] ? qCondition.control['format'] : this.returnFormat;\r\n            }else{\r\n              this.format = qCondition.control && qCondition.control['format'] ? qCondition.control['format'] + ' HH:mm:ss' : this.returnFormat;\r\n            }\r\n          }\r\n          startValue = qCondition.value['startTime'] ? qCondition.value['startTime'] : '';\r\n          endValue = qCondition.value['endTime'] ? qCondition.value['endTime'] : '';\r\n          break;\r\n\r\n        case ControlType.BoolCheck:\r\n          // å¸å°å¼-åä¸ªå¼\r\n          let checkValue = (qCondition.value as CheckBoxValue).value;\r\n          textOriginalValue = checkValue.length > 0 ? checkValue['0'] : null;\r\n          break;\r\n        case ControlType.DropDownList:\r\n          // ä¸æ\r\n          this._spliter = ',';\r\n          if(qCondition.control['uri'] && !qCondition.control['enumValues']) {\r\n            textOriginalValue = (qCondition.value['value'] as Array<any>).map(t => t[this.valueField]).join(this._spliter);\r\n          }\r\n          break;\r\n        case ControlType.Radio:\r\n          // åéç»\r\n          this._spliter = ',';\r\n          break;\r\n        case ControlType.InputGroup:\r\n          // inputgroup\r\n          textValueObj = qCondition.value as InputGroupValue;\r\n          textOriginalValue = textValueObj.textValue && textValueObj.textValue.trim();\r\n          break;\r\n        case ControlType.SmartHelp:\r\n          // å¸®å©\r\n          textValueObj = qCondition.value as SmartHelpValue;\r\n          textOriginalValue = textValueObj.textValue && textValueObj.textValue.trim();\r\n          break;\r\n        default:\r\n          textOriginalValue = qCondition.value.getOriginalValue();\r\n      }\r\n      this.text = this.formatValue(textOriginalValue);\r\n    } else {\r\n      this.text = '';\r\n    }\r\n  }\r\n  /**\r\n   * å¤çå¤è¯­è¨ï¼å¾å®\r\n   */\r\n  formatLang(value: any) {\r\n    return value && value[this.currentLanguage] ? value[this.currentLanguage] : '';\r\n  }\r\n  /**\r\n   * Cè´§å¸\r\n   * Dåè¿å¶\r\n   * Fæµ®ç¹æ°\r\n   * Næ°å­ï¼å¸¦ååä½\r\n   * Pç¾åæ¯\r\n   */\r\n  getFormatNumberValue(value: any) {\r\n    if (!this.format && !this.numberOptions) {\r\n      return value.toString();\r\n    }\r\n    if (this.numberOptions && this.numberOptions.type && this.numberOptions.type == 'number') {\r\n      if (this.numberOptions.formatter) {\r\n        return this.numberOptions.formatter(value);\r\n      }\r\n      else {\r\n        if (this.numberOptions.useThousands) {\r\n          // è®¾ç½®äºååä½\r\n          if (this.numberOptions.precision != undefined) {\r\n            this.format = 'n' + this.numberOptions.precision;\r\n          }\r\n          else {\r\n            this.format = 'n';\r\n          }\r\n        }\r\n        else {\r\n          // æ²¡æè®¾ç½®ååä½\r\n          if (this.numberOptions.precision != undefined) {\r\n            this.format = 'f' + this.numberOptions.precision;\r\n          }\r\n          else {\r\n            // æ²¡æè®¾ç½®ç²¾åº¦ï¼æ²¡æè®¾ç½®ååä½\r\n            return value.toString();\r\n          }\r\n        }\r\n      }\r\n    }else{\r\n      return value.toString();\r\n    }\r\n    const firstLetter = this.currencyToUpperCase(this.format.substring(0, 1));\r\n    const precision = Number(this.format.substring(1));\r\n    let config = {};\r\n    let result: any;\r\n    if (!/C|D|F|N|P/g.test(firstLetter)) {\r\n      console.warn(`ä¸æ¯æformatä¸º ${this.format} ç±»åçæ°å­æ ¼å¼å`);\r\n      return;\r\n    }\r\n    if (this.thousand) {\r\n      Object.assign(config, { thousand: this.thousand });\r\n    }\r\n    if (this.decimal) {\r\n      Object.assign(config, { decimal: this.decimal });\r\n    }\r\n    if (this.expression) {\r\n      Object.assign(config, { format: this.expression });\r\n    }\r\n    switch (firstLetter) {\r\n      case 'C':\r\n        Object.assign(config, { prefix: this.currencySymbol, precision });\r\n        result = this.numberHelper.formatMoney(value, config);\r\n        break;\r\n      case 'D':\r\n        result = this.toDecimal(value, precision);\r\n        break;\r\n      case 'F':\r\n        Object.assign(config, { prefix: '', thousand: '', precision });\r\n        result = this.numberHelper.formatMoney(value, config);\r\n        break;\r\n      case 'N':\r\n        Object.assign(config, { prefix: '', precision });\r\n        result = this.numberHelper.formatMoney(value, config);\r\n        break;\r\n      case 'P':\r\n        result = this.toPercent(value, precision);\r\n        break;\r\n    }\r\n    return result;\r\n  }\r\n  /**\r\n   * @param value è½¬æ¢æåè¿å¶çæ°å­\r\n   * @param precision åè¿å¶æ°å­çé¿åº¦\r\n   */\r\n  toDecimal(value: any, precision: any) {\r\n    if (value.toString().indexOf('.') > -1) {\r\n      console.warn('åè¿å¶è½¬æ¢ä»éæ´åç±»å');\r\n      return;\r\n    }\r\n    return (Array(precision).join(this.filledSymbol) + value).slice(-precision);\r\n  }\r\n  /**\r\n   * @param value è½¬æ¢æç¾åæ°çæ°å­\r\n   * @param decimal å°æ°ç¹ä¿çå ä½\r\n   */\r\n  toPercent(value: any, precision: any) {\r\n    return Number(value * 100).toFixed(Number(precision)) + '%';\r\n  }\r\n\r\n  /**\r\n   * å°è´§å¸ç¬¦å·é¦å­æ¯è½¬æ¢æå¤§å\r\n   */\r\n  currencyToUpperCase(value: any) {\r\n    return value.replace(/[a-z]+/g, (word: any) => {\r\n      return word.toUpperCase();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * å¤çå¹´ï¼Y=>y, D=>d\r\n   */\r\n  dateToUpperCase(value: any) {\r\n    let newFormat: any;\r\n    if (/Y/g.test(value) === true) {\r\n      newFormat = value.replace(/Y/g, 'y');\r\n    } else {\r\n      newFormat = value;\r\n    }\r\n    if (/D/g.test(newFormat) === true) {\r\n      newFormat = newFormat.replace(/D/g, 'd');\r\n    }\r\n\r\n    return newFormat;\r\n  }\r\n  /**\r\n   * æä¸¾ç±»åå¤ç\r\n   */\r\n  getFormatEnumValue(value: any) {\r\n    if (value == undefined || value === null || value === '') {\r\n      return '';\r\n    }\r\n    if (this.dataSource && this.dataSource.length) {\r\n      // å¯è½å­å¨å¤éæä¸¾ï¼ä½ä¸ºåéç¬¦  \r\n      // let curVals = ('' + value).split(',');\r\n      let curVals = ('' + value).split(this._spliter);\r\n      let nameResult = [];\r\n      for (let k = 0; k < curVals.length; k++) {\r\n        let findObj = this.dataSource.find(item => {\r\n          return item[this.valueField] == curVals[k];\r\n        });\r\n        if (findObj) {\r\n          nameResult.push(findObj[this.textField]);\r\n        }\r\n        else {\r\n          nameResult.push(curVals[k]);\r\n        }\r\n      }\r\n      if (nameResult.length > 0) {\r\n        // return nameResult.join(',');\r\n        return nameResult.join(this._spliter)\r\n      }\r\n      return '';\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n  /**\r\n   * booleanå¼å¤ç\r\n   */\r\n  getFormatCheckBoxValue(value: boolean) {\r\n    if (value === true) {\r\n      return this.localeService.getValue('text.yes');\r\n    } else if (value === false || value == null || typeof value === 'undefined') {\r\n      return this.localeService.getValue('text.no');\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n  /*\r\n  * æ¥ææ ¼å¼å\r\n  */\r\n  dateformat(value) {\r\n    let str;\r\n    if (!this.format) {\r\n      this.format = 'YYYY-MM-dd';\r\n    }\r\n    // å½åå¼æ¯å·²ç»æ ¼å¼ååçæ¥æå­ç¬¦ä¸²\r\n    if (this.returnFormat  && typeof value == 'string') {\r\n      value = this.getDateFromFormatedString(value, this.returnFormat);\r\n    }\r\n    if (this.format === 'hh:mm:ss' || this.format === 'HH:mm:ss') {\r\n      // æ ¼å¼åæ¶é´  ä¸´æ¶å¤ç\r\n      str = value;\r\n    } else {\r\n        // æ ¼å¼åæ¥æ\r\n        str = this.dtHelper.formatTo(value, this.dateToUpperCase(this.format));\r\n    }\r\n    return str;\r\n  }\r\n  private getDateFromFormatedString(dateString, format) {\r\n    var result = { year: 0, month: 0, day: 0, hour: 0, minite: 0, second: 0 };//å½ç¶è¿éå¯ä»¥é»è®¤1970-1-1æ¥\r\n    if (dateString) {\r\n      format.replace(/y{4}|Y{4}|M+|d+|D+|h+|H+|m+|s+/g, function (m, a, b, c) {//è¿éåªåäºå¹´ææ¥  å æ¶åç§ä¹æ¯å¯ä»¥ç\r\n        dateString.substring(a).replace(/\\d+/, function (d) {\r\n           if(d){\r\n              c = parseInt(d.substr(0,m.length), 10); \r\n            }\r\n        });\r\n        if (/y+/i.test(m) && !result.year) result.year = c;\r\n        if (/M+/.test(m) && !result.month) result.month = c;\r\n        if (/d+/i.test(m) && !result.day) result.day = c;\r\n        if (/h+/i.test(m) && !result.hour) result.hour = c;\r\n        if (/m+/.test(m) && !result.minite) result.minite = c;\r\n        if (/s+/.test(m) && !result.second) result.second = c;\r\n      });\r\n    }\r\n    result.day = result.day ? result.day : 1;\r\n    result.month = result.month ? result.month : 1;\r\n    var resultDate = new Date(result.year + '/' + result.month + '/' + result.day + ' ' + result.hour + ':' + result.minite + ':' + result.second);\r\n    return resultDate;\r\n  }\r\n\r\n  function (date, fmt) {\r\n    var o = {\r\n      'M+': date.getMonth() + 1, //æä»½\r\n      'd+': date.getDate(), //æ¥\r\n      'h+': date.getHours(), //å°æ¶\r\n      'm+': date.getMinutes(), //å\r\n      's+': date.getSeconds(), //ç§\r\n      'q+': Math.floor((date.getMonth() + 3) / 3), //å­£åº¦\r\n      'S': date.getMilliseconds() //æ¯«ç§\r\n    };\r\n    if (!fmt) {\r\n      fmt = 'yyyy-MM-dd hh:mm:ss';\r\n    }\r\n    if (/(y+)/.test(fmt)) {\r\n      fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\r\n    }\r\n    for (var k in o) {\r\n      if (new RegExp('(' + k + ')').test(fmt)) {\r\n        fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)));\r\n      }\r\n    }\r\n    return fmt;\r\n  }\r\n\r\n  /**\r\n   * æ ¼å¼åå¤ç\r\n   */\r\n  formatValue(value: any) {\r\n    let str: any;\r\n    if (this.currentLanguage) {\r\n      return this.formatLang(value);\r\n    }\r\n    // æ è®°ç±»å\r\n    if (this._conditionType !== ControlType.BoolCheck && (value == null || typeof value === 'undefined')) {\r\n      return '';\r\n    }\r\n    switch (this._conditionType) {\r\n      case ControlType.Text:\r\n        str = value;\r\n        break;\r\n      case ControlType.DateRange:\r\n      case ControlType.MonthRange:\r\n      case ControlType.DateTimeRange:\r\n        const dateValues = value.split(this._spliter);\r\n        let dataStr = [];\r\n        if (dateValues && dateValues.length) {\r\n          dateValues.forEach(date => {\r\n            let val = this.dateformat(date);\r\n            dataStr.push(val);\r\n          });\r\n        }\r\n        str = dataStr.join(this._spliter);\r\n        break;\r\n      case ControlType.SingleDate:\r\n        if(value && value.text) {\r\n          str = value.text\r\n        } else {\r\n          str = this.dateformat(value)\r\n        }\r\n        break;\r\n      case ControlType.SingleDateTime:\r\n      case ControlType.SingleMonth:\r\n      case ControlType.SingleYear:\r\n        str = this.dateformat(value);\r\n        break;\r\n      case ControlType.SingleNumber:\r\n        // æ°å­\r\n        str = this.getFormatNumberValue(value);\r\n        break;\r\n      case ControlType.NumberRange:\r\n        // æ°å­ åºé´     \r\n        const numberValues = value.split(this._spliter);\r\n        let resultStr = [];\r\n        if (numberValues && numberValues.length) {\r\n          numberValues.forEach(date => {\r\n            let val = this.getFormatNumberValue(date);\r\n            resultStr.push(val);\r\n          });\r\n        }\r\n        str = resultStr.join(this._spliter);\r\n        break;\r\n      case ControlType.Radio:\r\n        // åéç»\r\n        this.dataSource = (this.condition.control as RadioControl).enumValues;\r\n        str = this.getFormatEnumValue(value);\r\n        break;\r\n      case ControlType.DropDownList:\r\n        // ä¸æ\r\n        this.dataSource = (this.condition.control as DropDownListControl).enumValues;\r\n        str = this.getFormatEnumValue(value);\r\n        break;\r\n      case ControlType.BoolCheck:\r\n        // å¸å°\r\n        //this.dataSource = (this.condition.control as CheckBoxControl).data;\r\n        str = this.getFormatCheckBoxValue(value);\r\n        break;\r\n        //å¸®å©çè¯å¼å®¹æ§æ°æ®ï¼é¨åå¼ä¸ºhelp-text-value-nullçè½¬åä¸ºç©ºå­ç¬¦ä¸²\r\n      case ControlType.SmartHelp:\r\n        str = value === 'help-text-value-null' ? '' : value;\r\n        break;\r\n      case ControlType.ComboLookUp:\r\n        str = value === 'help-text-value-null' ? '' : value;\r\n        break;\r\n\r\n      default:\r\n        str = value;\r\n    }\r\n\r\n    return str;\r\n  }\r\n}\r\n","import { Component, OnInit, Input,  ViewChild, ElementRef, NgZone, OnDestroy, HostBinding, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { QueryCondition} from '@farris/component-querycondition';\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\n@Component({\r\n  selector: 'lib-summary-list',\r\n  templateUrl: './summary-list.component.html',\r\n  styleUrls: ['./summary-list.component.css']\r\n})\r\nexport class SummaryListComponent implements OnInit, OnDestroy {\r\n    \r\n  @HostBinding('class.summary-list') cls = true;\r\n  \r\n  @ViewChild('wrapper', { read: ElementRef }) wrapperEl: ElementRef;\r\n\r\n  @Input() conditions: Array<QueryCondition> = new Array<QueryCondition>();\r\n  @Input() enableTips = false;\r\n  \r\n  private ro: ResizeObserver | null = null;\r\n  widthFlag = 0;\r\n  \r\n  constructor(private ngZone: NgZone, private cd: ChangeDetectorRef) {\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.ro) {\r\n      this.ro.unobserve(this.wrapperEl.nativeElement);\r\n      this.ro = null;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.observerElement();\r\n  }\r\n\r\n  private observerElement() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.ro = new ResizeObserver((entries, observer) => {\r\n        const tempWidth = entries[0].contentRect.width;\r\n        // å®½åº¦ååè¶è¿80å¼å§è®¡ç®\r\n        if (Math.abs(tempWidth - this.widthFlag) > 15) {\r\n          this.widthFlag = tempWidth;\r\n          this.changeTipsState();\r\n        }\r\n      });\r\n      this.ro.observe(this.wrapperEl.nativeElement);\r\n    });\r\n  }\r\n\r\n  private changeTipsState() {\r\n    let tEnableTips = this.enableTips;\r\n    if (this.wrapperEl.nativeElement.clientWidth +2 < this.wrapperEl.nativeElement.scrollWidth) {\r\n      tEnableTips = true;\r\n    } else {\r\n      tEnableTips = false;\r\n    }\r\n    if(tEnableTips !== this.enableTips) {\r\n      this.enableTips = tEnableTips;\r\n      this.cd.markForCheck();\r\n      this.cd.detectChanges();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { QuerySolutionComponent } from './query-solution.component';\r\nimport { SolutionManangerComponent } from './solutionmanager/solutionmanager.component';\r\nimport { SaveAsDialogComponent } from './saveasdialog/saveasdialog.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { MultiSelectModule } from '@farris/ui-multi-select';\r\nimport { FieldGroupModule } from '@farris/ui-field-group';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { LoadingModule } from '@farris/ui-loading';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SolutionService, QueryConditionModule } from '@farris/component-querycondition';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { DatagridModule } from '@farris/ui-datagrid';\r\nimport { NumberHelperModule } from '@farris/ui-common/number';\r\nimport { DateHelperModule } from '@farris/ui-common/date';\r\nimport { FarrisTooltipModule } from '@farris/ui-tooltip';\r\nimport { SummaryConditionComponent } from './summary-condition/summary-condition.component';\r\nimport { SummaryListComponent } from './summary-list/summary-list.component';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { OrganizationSelectorModule } from '@farris/ui-organization-selector';\r\nimport { LanguageTextboxModule } from '@farris/ui-language-textbox';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FarrisDialogModule,\r\n    LookupModule,\r\n    MultiSelectModule,\r\n    FieldGroupModule,\r\n    InputGroupModule,\r\n    FDropdownDirectiveTypeModule,\r\n    NotifyModule.forRoot(),\r\n    LoadingModule.forRoot(),\r\n    QueryConditionModule,\r\n    HttpClientModule,\r\n    LocaleModule,\r\n    DatagridModule,\r\n    NumberHelperModule,\r\n    DateHelperModule,\r\n    FarrisTooltipModule,\r\n    FarrisFormsModule,\r\n    OrganizationSelectorModule,\r\n    LanguageTextboxModule\r\n  ],\r\n  declarations: [\r\n    QuerySolutionComponent,\r\n    SolutionManangerComponent,\r\n    SaveAsDialogComponent,\r\n    SummaryConditionComponent,\r\n    SummaryListComponent,\r\n  ],\r\n  entryComponents:[\r\n    SolutionManangerComponent,\r\n    SaveAsDialogComponent\r\n  ],\r\n  providers:[SolutionService],\r\n  exports:[ \r\n    QuerySolutionComponent,\r\n    SolutionManangerComponent,\r\n    SaveAsDialogComponent\r\n  ]\r\n})\r\nexport class QuerySolutionModule { }\r\n"]}