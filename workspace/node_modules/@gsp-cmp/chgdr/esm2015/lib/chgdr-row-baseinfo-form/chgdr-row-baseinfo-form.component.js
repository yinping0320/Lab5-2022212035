/**
 * @fileoverview added by tsickle
 * Generated from: lib/chgdr-row-baseinfo-form/chgdr-row-baseinfo-form.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Injector, Input } from '@angular/core';
import { ChgdrTreeNode } from '../chgdr-data-viewer/chgdr-tree-builder';
import { I18nUtil } from '../service/i18n-service';
export class ChgdrRowBaseinfoFormComponent {
    /**
     * @param {?} injector
     */
    constructor(injector) {
        this.injector = injector;
        this.showDataId = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    get technologyPrimaryKeyLabel() {
        return I18nUtil.instant("technology-primary-key-label");
    }
    /**
     * @return {?}
     */
    get changeUserLabel() {
        return I18nUtil.instant("change-user-label");
    }
    /**
     * @return {?}
     */
    get changeTimeLabel() {
        return I18nUtil.instant("change-time-label");
    }
    /**
     * @return {?}
     */
    get changeOperateType() {
        return I18nUtil.instant("change-operate-type");
    }
}
ChgdrRowBaseinfoFormComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-chgdr-row-baseinfo-form',
                template: "<div *ngIf=\"!!chgdrTreeNode\" class=\"farris-form farris-form-controls-inline\">\r\n  <form class=\"f-section-formgroup\">\r\n    <div class=\"f-section-formgroup-inputs\">\r\n      <div class=\"col-12 row\">\r\n\r\n        <div class=\"farris-group-wrap col-6\" *ngIf=\"showDataId\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">{{technologyPrimaryKeyLabel}}</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" [ngModel]=\"chgdrTreeNode.chgdrRow.dataId\" name=\"dataId\"\r\n                [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"farris-group-wrap col-6\" *ngFor=\"let field of chgdrTreeNode.chgdrRow.dataCodes\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">{{field.fieldName}}</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" [ngModel]=\"field.fieldValue\" name=\"dataCode-{{field.fieldName}}\"\r\n                [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"chgdrTreeNode.isRoot\" class=\"farris-group-wrap col-6\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">{{changeUserLabel}}</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" [ngModel]=\"chgdrTreeNode.chgdrData.userName\" name=\"userName\"\r\n                [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"chgdrTreeNode.isRoot\" class=\"farris-group-wrap col-6\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">{{changeTimeLabel}}</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" value=\"{{chgdrTreeNode.chgdrData.changeTime | date:'yyyy-MM-dd HH:mm:ss'}}\" name=\"changeTime\"\r\n                [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"farris-group-wrap col-6\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">{{changeOperateType}}</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" [ngModel]=\"chgdrTreeNode.chgdrRow.operateType.name\" name=\"operateType\"\r\n              [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>",
                styles: [""]
            }] }
];
/** @nocollapse */
ChgdrRowBaseinfoFormComponent.ctorParameters = () => [
    { type: Injector }
];
ChgdrRowBaseinfoFormComponent.propDecorators = {
    chgdrTreeNode: [{ type: Input }],
    showDataId: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ChgdrRowBaseinfoFormComponent.prototype.chgdrTreeNode;
    /** @type {?} */
    ChgdrRowBaseinfoFormComponent.prototype.showDataId;
    /**
     * @type {?}
     * @private
     */
    ChgdrRowBaseinfoFormComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hnZHItcm93LWJhc2VpbmZvLWZvcm0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1jbXAvY2hnZHIvIiwic291cmNlcyI6WyJsaWIvY2hnZHItcm93LWJhc2VpbmZvLWZvcm0vY2hnZHItcm93LWJhc2VpbmZvLWZvcm0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUN4RSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFPbkQsTUFBTSxPQUFPLDZCQUE2Qjs7OztJQUt4QyxZQUFvQixRQUFrQjtRQUFsQixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBRjdCLGVBQVUsR0FBWSxLQUFLLENBQUM7SUFHckMsQ0FBQzs7OztJQUVELFFBQVE7SUFDUixDQUFDOzs7O0lBRUQsSUFBVyx5QkFBeUI7UUFDbEMsT0FBTyxRQUFRLENBQUMsT0FBTyxDQUFDLDhCQUE4QixDQUFDLENBQUM7SUFDMUQsQ0FBQzs7OztJQUNELElBQVcsZUFBZTtRQUN4QixPQUFPLFFBQVEsQ0FBQyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUMvQyxDQUFDOzs7O0lBQ0QsSUFBVyxlQUFlO1FBQ3hCLE9BQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0lBQy9DLENBQUM7Ozs7SUFDRCxJQUFXLGlCQUFpQjtRQUMxQixPQUFPLFFBQVEsQ0FBQyxPQUFPLENBQUMscUJBQXFCLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7WUEzQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSw2QkFBNkI7Z0JBQ3ZDLDg3R0FBdUQ7O2FBRXhEOzs7O1lBUm1CLFFBQVE7Ozs0QkFVekIsS0FBSzt5QkFFTCxLQUFLOzs7O0lBRk4sc0RBQzZCOztJQUM3QixtREFBcUM7Ozs7O0lBRXpCLGlEQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0b3IsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ2hnZHJUcmVlTm9kZSB9IGZyb20gJy4uL2NoZ2RyLWRhdGEtdmlld2VyL2NoZ2RyLXRyZWUtYnVpbGRlcic7XHJcbmltcG9ydCB7IEkxOG5VdGlsIH0gZnJvbSAnLi4vc2VydmljZS9pMThuLXNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdsaWItY2hnZHItcm93LWJhc2VpbmZvLWZvcm0nLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9jaGdkci1yb3ctYmFzZWluZm8tZm9ybS5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vY2hnZHItcm93LWJhc2VpbmZvLWZvcm0uY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDaGdkclJvd0Jhc2VpbmZvRm9ybUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQElucHV0KClcclxuICBjaGdkclRyZWVOb2RlOiBDaGdkclRyZWVOb2RlO1xyXG4gIEBJbnB1dCgpIHNob3dEYXRhSWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IpIHtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCB0ZWNobm9sb2d5UHJpbWFyeUtleUxhYmVsKCkge1xyXG4gICAgcmV0dXJuIEkxOG5VdGlsLmluc3RhbnQoXCJ0ZWNobm9sb2d5LXByaW1hcnkta2V5LWxhYmVsXCIpO1xyXG4gIH1cclxuICBwdWJsaWMgZ2V0IGNoYW5nZVVzZXJMYWJlbCgpIHtcclxuICAgIHJldHVybiBJMThuVXRpbC5pbnN0YW50KFwiY2hhbmdlLXVzZXItbGFiZWxcIik7XHJcbiAgfVxyXG4gIHB1YmxpYyBnZXQgY2hhbmdlVGltZUxhYmVsKCkge1xyXG4gICAgcmV0dXJuIEkxOG5VdGlsLmluc3RhbnQoXCJjaGFuZ2UtdGltZS1sYWJlbFwiKTtcclxuICB9XHJcbiAgcHVibGljIGdldCBjaGFuZ2VPcGVyYXRlVHlwZSgpIHtcclxuICAgIHJldHVybiBJMThuVXRpbC5pbnN0YW50KFwiY2hhbmdlLW9wZXJhdGUtdHlwZVwiKTtcclxuICB9XHJcbn1cclxuIl19