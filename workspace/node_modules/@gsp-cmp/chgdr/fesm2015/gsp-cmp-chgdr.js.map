{"version":3,"file":"gsp-cmp-chgdr.js.map","sources":["ng://@gsp-cmp/chgdr/lib/model/change-data-header.ts","ng://@gsp-cmp/chgdr/lib/chgdr-data-viewer/chgdr-data.ts","ng://@gsp-cmp/chgdr/lib/service/i18n/en.ts","ng://@gsp-cmp/chgdr/lib/service/i18n/zh-CHS.ts","ng://@gsp-cmp/chgdr/lib/service/i18n/zh-CHT.ts","ng://@gsp-cmp/chgdr/lib/service/i18n-service.ts","ng://@gsp-cmp/chgdr/lib/chgdr-data-viewer/chgdr-data-builder.ts","ng://@gsp-cmp/chgdr/lib/util/guid.util.ts","ng://@gsp-cmp/chgdr/lib/chgdr-data-viewer/chgdr-tree-builder.ts","ng://@gsp-cmp/chgdr/lib/service/chgdr-metadata.service.ts","ng://@gsp-cmp/chgdr/lib/service/chgdr-config.service.ts","ng://@gsp-cmp/chgdr/lib/service/chgdr-config-handler.ts","ng://@gsp-cmp/chgdr/lib/service/chgdr-inner.service.ts","ng://@gsp-cmp/chgdr/lib/chgdr-data-viewer/chgdr-data-viewer.component.ts","ng://@gsp-cmp/chgdr/lib/model/operate-type.ts","ng://@gsp-cmp/chgdr/lib/util/map.util.ts","ng://@gsp-cmp/chgdr/lib/service/chgdr.service.ts","ng://@gsp-cmp/chgdr/lib/model/change-data-query-param.ts","ng://@gsp-cmp/chgdr/lib/model/change-data-query-result.ts","ng://@gsp-cmp/chgdr/lib/util/error.util.ts","ng://@gsp-cmp/chgdr/lib/util/time.util.ts","ng://@gsp-cmp/chgdr/lib/chgdr-list/chgdr-list.component.ts","ng://@gsp-cmp/chgdr/lib/chgdr-row-baseinfo-form/chgdr-row-baseinfo-form.component.ts","ng://@gsp-cmp/chgdr/lib/chgdr-row-grid/chgdr-row-grid.component.ts","ng://@gsp-cmp/chgdr/lib/chgdr-list-dialog-content/chgdr-list-dialog-content.component.ts","ng://@gsp-cmp/chgdr/lib/model/chgdr-ui-config.ts","ng://@gsp-cmp/chgdr/lib/service/chgdr-list-ui.service.ts","ng://@gsp-cmp/chgdr/lib/chgdr-header-datagrid/chgdr-header-datagrid.component.ts","ng://@gsp-cmp/chgdr/lib/chgdr.module.ts","ng://@gsp-cmp/chgdr/lib/model/change-data-row.ts","ng://@gsp-cmp/chgdr/lib/model/chgdr-item-query-param.ts"],"sourcesContent":["import { ChangeDataRow } from './change-data-row';\r\nimport { OperateType } from './operate-type';\r\n\r\nexport class ChangeDataHeader {\r\n    id: string;\r\n    /**\r\n     * 用户ID\r\n     */\r\n    userId: string;\r\n    /**\r\n     * 用户编号\r\n     */\r\n    userCode: string;\r\n    /**\r\n     * 用户名称\r\n     */\r\n    userName: string;\r\n    /**\r\n     * 实体ID\r\n     */\r\n    entityId: string;\r\n    /**\r\n     * 数据主键\r\n     */\r\n    dataId: string;\r\n    /**\r\n     * 数据编号\r\n     */\r\n    dataCode: Map<string, string>;\r\n    /**\r\n     * 变更时间\r\n     */\r\n    changeTime: Date;\r\n    /**\r\n     * 变更类型\r\n     */\r\n    operateType: OperateType;\r\n    /**\r\n     * 变更原因\r\n     */\r\n    reason: string;\r\n    /**\r\n     * 分组ID\r\n     */\r\n    groupId: string;\r\n\r\n    /**\r\n     * 变更行列表\r\n     */\r\n    rows: ChangeDataRow[];\r\n}\r\n\r\nexport class ChangeDataCompHeader extends ChangeDataHeader {\r\n    extEntityRows: Map<String, ChangeDataRow[]>;\r\n}","import { OperateType } from '../model/operate-type';\r\n\r\n/** 基本信息 */\r\nexport class ChgdrData {\r\n    entityName: string;\r\n    userName: string;\r\n    operateType: OperateType;\r\n    reason: string;\r\n    dataId: string;\r\n    dataCode: Map<string, string>;\r\n    dataCodes: DataCodeField[];\r\n    changeTime: Date;\r\n    /** 本变更日志的根节点 */\r\n    entityNodes: ChgdrDataEntityNode[];\r\n}\r\n\r\n/** 发生变更的实体节点 */\r\nexport class ChgdrDataEntityNode {\r\n    entityCode: string;\r\n    entityName: string;\r\n    rows: ChgdrDataRowNode[];\r\n}\r\n\r\n/** 发生变更的行 */\r\nexport class ChgdrDataRowNode {\r\n    id: string;\r\n    entityCode: string;\r\n    entityName: string;\r\n    parentDataId: string;\r\n    dataId: string;\r\n    dataCode: Map<string, string>;\r\n    dataCodes: DataCodeField[];\r\n    operateType: OperateType;\r\n    changes: ChangeColumnItem[];\r\n    /** 发生变更的行的下级实体 */\r\n    entityNodes: ChgdrDataEntityNode[];\r\n}\r\n\r\nexport class ChangeColumnItem {\r\n    fieldLabel: string;\r\n    fieldName: string;\r\n    oldValue: string;\r\n    newValue: string;\r\n    /** 是否关联字段 */\r\n    hasAssociation: boolean;\r\n    /** 原始关联字段 */\r\n    originalColumnItem: ChangeColumnItem;\r\n    /** 是否关联带出字段 */\r\n    isAssociationRefField: boolean;\r\n    /** 关联带出字段所属的字段 */\r\n    belongFieldLabelId: string;\r\n    /** 如果当前字段为关联字段，则属性为当前字段的关联带出字段 */\r\n    children: ChangeColumnItem[] = [];\r\n}\r\n\r\nexport class DataCodeField {\r\n    fieldLabelId: string;\r\n    fieldName: string;\r\n    fieldValue: string;\r\n}","export const LangDataEn = {\r\n  \"chgdr-list-dialog-title\": \"Change data records\",\r\n  \"base-info-section-title\": \"Base info\",\r\n  \"change-detail-section-title\": \"Change detail\",\r\n  \"empty-data-text\": \"Empty Data\",\r\n  \"get-business-code-config-error\": \"Get business code config error: {{errorMessage}}\",\r\n  \"user-name-column-title\": \"User\",\r\n  \"change-time-column-title\": \"Time\",\r\n  \"change-time-column-format\": \"yyyy-MM-dd HH:mm:ss\",\r\n  \"operation-type-title\": \"Type\",\r\n  \"tech-pk-column-title\": \"Tech PK\",\r\n  \"operation-column-title\": \"Operation\",\r\n  \"can-not-found-change-record-by-id\": \"Can not found change record 【{{headerId}}】\",\r\n  \"query-change-data-record-error\": \"Query change data record error: {{errorMessage}}\",\r\n  \"show-change-detail-btn\": \"Detail\",\r\n  \"change-detail-dialog-title\": \"Change detail\",\r\n  \"start-time-label\": \"Start\",\r\n  \"end-time-label\": \"End\",\r\n  \"query-btn\": \"Query\",\r\n  \"technology-primary-key-label\": \"Tech PK\",\r\n  \"change-user-label\": \"User\",\r\n  \"change-time-label\": \"Time\",\r\n  \"change-operate-type\": \"Type\",\r\n  \"field-name-column-title\": \"Field\",\r\n  \"value-column-title\": \"Value\",\r\n  \"old-value-column-title\": \"Old value\",\r\n  \"new-value-column-title\": \"New value\",\r\n  \"operate-type-name-ADD\": \"Add\",\r\n  \"operate-type-name-MODIFY\": \"Modify\",\r\n  \"operate-type-name-DELETE\": \"Delete\",\r\n  \"yes-text\": \"Yes\",\r\n  \"no-text\": \"No\",\r\n  \"business-code-text\": \"Business code\"\r\n}","export const LangDataZhChs = {\r\n  \"chgdr-list-dialog-title\": \"变更日志列表\",\r\n  \"base-info-section-title\": \"基本信息\",\r\n  \"change-detail-section-title\": \"变更详情\",\r\n  \"empty-data-text\": \"无数据\",\r\n  \"get-business-code-config-error\": \"获取业务编号配置失败：{{errorMessage}}\",\r\n  \"user-name-column-title\": \"用户\",\r\n  \"change-time-column-title\": \"时间\",\r\n  \"change-time-column-format\": \"yyyy年MM月dd日 HH:mm:ss\",\r\n  \"operation-type-title\": \"操作类型\",\r\n  \"tech-pk-column-title\": \"技术主键\",\r\n  \"operation-column-title\": \"操作\",\r\n  \"can-not-found-change-record-by-id\": \"未找到编号为【{{headerId}}】的变更日志\",\r\n  \"query-change-data-record-error\": \"查询业务变更日志出错：{{errorMessage}}\",\r\n  \"show-change-detail-btn\": \"变更详情\",\r\n  \"change-detail-dialog-title\": \"变更日志详情\",\r\n  \"start-time-label\": \"开始时间\",\r\n  \"end-time-label\": \"结束时间\",\r\n  \"query-btn\": \"查询\",\r\n  \"technology-primary-key-label\": \"技术主键\",\r\n  \"change-user-label\": \"变更人\",\r\n  \"change-time-label\": \"变更时间\",\r\n  \"change-operate-type\": \"变更方式\",\r\n  \"field-name-column-title\": \"字段名\",\r\n  \"value-column-title\": \"值\",\r\n  \"old-value-column-title\": \"原值\",\r\n  \"new-value-column-title\": \"变更值\",\r\n  \"operate-type-name-ADD\": \"新增\",\r\n  \"operate-type-name-MODIFY\": \"修改\",\r\n  \"operate-type-name-DELETE\": \"删除\",\r\n  \"yes-text\": \"是\",\r\n  \"no-text\": \"否\",\r\n  \"business-code-text\": \"业务编号\"\r\n}","export const LangDataZhCht = {\r\n  \"chgdr-list-dialog-title\": \"變更日志列表\",\r\n  \"base-info-section-title\": \"基本信息\",\r\n  \"change-detail-section-title\": \"變更詳情\",\r\n  \"empty-data-text\": \"無數據\",\r\n  \"get-business-code-config-error\": \"獲取業務編號配置失敗：{{errorMessage}}\",\r\n  \"user-name-column-title\": \"用戶\",\r\n  \"change-time-column-title\": \"時間\",\r\n  \"change-time-column-format\": \"yyyy年MM月dd日 HH:mm:ss\",\r\n  \"operation-type-title\": \"操作類型\",\r\n  \"tech-pk-column-title\": \"技術主鍵\",\r\n  \"operation-column-title\": \"操作\",\r\n  \"can-not-found-change-record-by-id\": \"未找到編號爲【{{headerId}}】的變更日志\",\r\n  \"query-change-data-record-error\": \"查詢業務變更日志出錯：{{errorMessage}}\",\r\n  \"show-change-detail-btn\": \"變更詳情\",\r\n  \"change-detail-dialog-title\": \"變更日志詳情\",\r\n  \"start-time-label\": \"開始時間\",\r\n  \"end-time-label\": \"結束時間\",\r\n  \"query-btn\": \"查詢\",\r\n  \"technology-primary-key-label\": \"技術主鍵\",\r\n  \"change-user-label\": \"變更人\",\r\n  \"change-time-label\": \"變更時間\",\r\n  \"change-operate-type\": \"變更方式\",\r\n  \"field-name-column-title\": \"字段名\",\r\n  \"value-column-title\": \"值\",\r\n  \"old-value-column-title\": \"原值\",\r\n  \"new-value-column-title\": \"變更值\",\r\n  \"operate-type-name-ADD\": \"新增\",\r\n  \"operate-type-name-MODIFY\": \"修改\",\r\n  \"operate-type-name-DELETE\": \"刪除\",\r\n  \"yes-text\": \"是\",\r\n  \"no-text\": \"否\",\r\n  \"business-code-text\": \"業務編號\"\r\n}","import { Pipe, PipeTransform, Injectable } from '@angular/core';\r\nimport { TranslateDefaultParser, TranslateParser, TranslateService } from '@ngx-translate/core';\r\nimport { LangDataEn } from './i18n/en';\r\nimport { LangDataZhChs } from './i18n/zh-CHS';\r\nimport { LangDataZhCht } from './i18n/zh-CHT';\r\n\r\nlet I18nServiceInstance: any;\r\n\r\nlet langResourceMap: Map<string, any> = new Map();\r\nlangResourceMap.set(\"en\", LangDataEn);\r\nlangResourceMap.set(\"zh-CHS\", LangDataZhChs);\r\nlangResourceMap.set(\"zh-CHT\", LangDataZhCht);\r\n\r\nlet currentLang: string = localStorage.getItem('languageCode');\r\nif (!currentLang) {\r\n  currentLang = \"zh-CHS\";\r\n  console.log(\"未找到设置的语言，默认使用\" + currentLang);\r\n}\r\n\r\nlet parser: TranslateParser = new TranslateDefaultParser();\r\n\r\nexport class I18nUtil {\r\n  public static instant(key: string, param?: any): string {\r\n    let statement = I18nUtil.getCurrentLangResource()[key];\r\n    if (statement === undefined || statement === null) {\r\n      return key;\r\n    }\r\n\r\n    let result = parser.interpolate(statement, param);\r\n    if (result === undefined || result === null) {\r\n      return key;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private static getCurrentLangResource() {\r\n    return langResourceMap.get(currentLang) || {};\r\n  }\r\n\r\n  public static instantOrDefault(key: string, defaultText: string) {\r\n    let statement = I18nUtil.getCurrentLangResource()[key];\r\n    if (statement === undefined || statement === null) {\r\n      return defaultText;\r\n    }\r\n\r\n    let result = parser.interpolate(statement);\r\n    if (result === undefined || result === null) {\r\n      return defaultText;\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class I18nService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public instant(key: string, param?: any): string {\r\n    return I18nUtil.instant(key, param);\r\n  }\r\n\r\n  private getCurrentLangResource() {\r\n    return langResourceMap.get(currentLang) || {};\r\n  }\r\n\r\n  public static staticInstant(key: string, defaultText: string) {\r\n    return I18nUtil.instantOrDefault(key, defaultText);\r\n  }\r\n}\r\n","import { isToday, format } from 'date-fns';\r\nimport { GSPBusinessEntity } from '@gsp-bef/gsp-be-metadata';\r\nimport { IGSPCommonObject, IGSPCommonElement, GSPAssociation, GSPCommonElement, GSPElementDataType, GSPElementObjectType, GSPEnumValue } from '@gsp-bef/gsp-cm-metadata';\r\nimport { ChangeDataHeader } from '../model/change-data-header';\r\nimport { ChangeDataRow } from '../model/change-data-row';\r\nimport { MapUtil } from '../util/map.util';\r\nimport { ChgdrData, ChgdrDataRowNode, ChangeColumnItem, ChgdrDataEntityNode, DataCodeField } from './chgdr-data';\r\nimport { ChgdrConfigHandler } from '../service/chgdr-config-handler';\r\nimport { I18nUtil } from '../service/i18n-service';\r\n\r\nexport class ChgdrDataBuilder {\r\n    private handler: ChgdrConfigHandler;\r\n\r\n    buildChgdrData(data: ChangeDataHeader, handler: ChgdrConfigHandler): ChgdrData {\r\n        this.handler = handler;\r\n        //初始化变更日志基本信息\r\n        let chgdrData = new ChgdrData();\r\n        chgdrData.entityName = this.handler.getBeName();\r\n        chgdrData.operateType = data.operateType;\r\n        chgdrData.userName = data.userName;\r\n        chgdrData.dataId = data.dataId;\r\n        chgdrData.dataCode = data.dataCode;\r\n        chgdrData.dataCodes = this.buildDataCodes(data.dataCode, this.handler.getMainObjectCode());\r\n        chgdrData.reason = data.reason;\r\n        chgdrData.changeTime = data.changeTime;\r\n        chgdrData.entityNodes = [];\r\n\r\n        //分层组织变更日志行\r\n        let rowNodes: ChgdrDataRowNode[] = [];\r\n        !!data.rows && data.rows.forEach(row => {\r\n            if (!row) {\r\n                return;\r\n            }\r\n            let rowNode = new ChgdrDataRowNode();\r\n            rowNode.id = row.id;\r\n            rowNode.parentDataId = row.parentDataId;\r\n            rowNode.dataId = row.dataId;\r\n            rowNode.dataCode = row.dataCode;\r\n            rowNode.dataCodes = this.buildDataCodes(row.dataCode, row.entityCode);\r\n            rowNode.entityCode = row.entityCode;\r\n            rowNode.entityName = this.handler.getEntityNameOrDefault(row.entityCode);\r\n            rowNode.operateType = row.operateType;\r\n            rowNode.entityNodes = [];\r\n\r\n            //组织列的变更信息\r\n            let changeColumnKeys: string[] = this.extractChangeColumnKeys(row);\r\n            let columnValueChanges: ChangeColumnItem[] = [];\r\n            changeColumnKeys.forEach((key) => {\r\n                let column = new ChangeColumnItem();\r\n                column.fieldLabel = key;\r\n                column.fieldName = this.handler.getEntityFieldNameOrDefault(row.entityCode, key);\r\n                column.oldValue = this.handler.formatFieldValue(row.oldContent.get(key), row.entityCode, key);\r\n                column.newValue = this.handler.formatFieldValue(row.newContent.get(key), row.entityCode, key);\r\n\r\n                let ele: IGSPCommonElement = this.handler.getElement(row.entityCode, key);\r\n                if (ele) {\r\n                    //判断是否是关联字段\r\n                    column.hasAssociation = ele.ObjectType == \"Association\" && ele.IsUdt == false;\r\n                    column.isAssociationRefField = ele.IsRefElement;\r\n                    let parentElement = this.handler.getParentElement(row.entityCode, key);\r\n                    if (parentElement) {\r\n                        column.belongFieldLabelId = parentElement.LabelID;\r\n                    }\r\n                }\r\n\r\n                columnValueChanges.push(column);\r\n            })\r\n            //变更值排序\r\n            this.handler.sort(columnValueChanges, row.entityCode, (column) => column.fieldLabel);\r\n\r\n            //合并关联带出字段\r\n            let columnMap: Map<string, ChangeColumnItem> = new Map();\r\n            columnValueChanges.forEach((column) => {\r\n                columnMap.set(column.fieldLabel, column);\r\n            });\r\n            //1. 移除所有关联带出字段，并附加到其所属关联字段的children属性上\r\n            columnValueChanges = columnValueChanges.filter((column) => {\r\n                if (column.isAssociationRefField) {\r\n                    let parentColumn: ChangeColumnItem = columnMap.get(column.belongFieldLabelId);\r\n                    if (parentColumn) {\r\n                        //找到父级字段则添加为父\r\n                        parentColumn.children.push(column);\r\n                        return false;\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    return true;\r\n                }\r\n            });\r\n            //2. 转换关联字段，将其子级的变更值拼接作为其变更值\r\n            columnValueChanges = columnValueChanges.map<ChangeColumnItem>(column => {\r\n                if (column.hasAssociation && column.children.length > 0) {\r\n                    //如果是关联字段，且存在关联带出字段\r\n                    let virtualColumn: ChangeColumnItem = Object.assign(new ChangeColumnItem(), column);\r\n                    virtualColumn.originalColumnItem = column;\r\n                    virtualColumn.oldValue = column.children.map(child => child.oldValue).join(\";\");\r\n                    virtualColumn.newValue = column.children.map(child => child.newValue).join(\";\");\r\n                    return virtualColumn;\r\n                } else {\r\n                    return column;\r\n                }\r\n            });\r\n\r\n            rowNode.changes = columnValueChanges;\r\n\r\n            rowNodes.push(rowNode);\r\n        });\r\n\r\n        /** dataId与变更行的Map */\r\n        let dataIdRowMap: Map<string, ChgdrDataRowNode> = new Map();\r\n        rowNodes.forEach(node => dataIdRowMap.set(node.dataId, node));\r\n\r\n        rowNodes.forEach(node => {\r\n            if (!node.parentDataId) {\r\n                //根节点\r\n                let entityNode = this.genChgdrDataEntityNode(node.entityCode, node.entityName);\r\n                entityNode.rows.push(node);\r\n                chgdrData.entityNodes.push(entityNode);\r\n                return;\r\n            }\r\n            let parentRowNode = dataIdRowMap.get(node.parentDataId);\r\n            if (!!parentRowNode) {\r\n                //上级节点存在的节点\r\n                let entityNode = parentRowNode.entityNodes.find(en => en.entityCode == node.entityCode);\r\n                if (!entityNode) {\r\n                    entityNode = this.genChgdrDataEntityNode(node.entityCode, node.entityName);\r\n                    parentRowNode.entityNodes.push(entityNode);\r\n                }\r\n                entityNode.rows.push(node);\r\n            } else {\r\n                //上级节点不存在的节点\r\n                //TODO 上级节点不存在的节点是否需要构造完整的上级结构？\r\n                let entityNode = this.genChgdrDataEntityNode(node.entityCode, node.entityName);\r\n                entityNode.rows.push(node);\r\n                chgdrData.entityNodes.push(entityNode);\r\n            }\r\n        })\r\n\r\n        return chgdrData;\r\n    }\r\n\r\n    private buildDataCodes(dataCode: Map<string, string>, entityCode: string): DataCodeField[] {\r\n        let dataCodes: DataCodeField[] = [];\r\n        dataCode && dataCode.forEach((value, key) => {\r\n            let dataCodeField: DataCodeField = new DataCodeField();\r\n            if (key == \"_$dataCode\") {\r\n                dataCodeField.fieldLabelId = \"dataCode\";\r\n                dataCodeField.fieldName = I18nUtil.instantOrDefault(\"business-code-text\", \"业务编号\");\r\n                dataCodeField.fieldValue = value;\r\n            } else {\r\n                dataCodeField.fieldLabelId = key;\r\n                dataCodeField.fieldName = this.handler.getEntityFieldNameOrDefault(entityCode, key);\r\n                dataCodeField.fieldValue = this.handler.formatFieldValue(value, entityCode, key);\r\n            }\r\n            dataCodes.push(dataCodeField);\r\n        })\r\n\r\n        //业务编号排序\r\n        this.handler.sort(dataCodes, entityCode, (dataCode) => dataCode.fieldLabelId);\r\n\r\n        return dataCodes;\r\n    }\r\n\r\n    /** 得到新旧内容中所有的key */\r\n    private extractChangeColumnKeys(row: ChangeDataRow): string[] {\r\n        let keysSet: Set<string> = new Set();\r\n        row.oldContent && row.oldContent.forEach((value, key) => keysSet.add(key));\r\n        row.newContent && row.newContent.forEach((value, key) => keysSet.add(key));\r\n        const keys: string[] = Array.from(keysSet.keys());\r\n        return keys;\r\n    }\r\n\r\n\r\n    private genChgdrDataEntityNode(entityCode: string, entityName: string): ChgdrDataEntityNode {\r\n        let node = new ChgdrDataEntityNode();\r\n        node.entityCode = entityCode;\r\n        node.entityName = entityName;\r\n        node.rows = [];\r\n        return node;\r\n    }\r\n\r\n}","export class Guid {\r\n  static newGuid() {\r\n    const initString = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\r\n    const result = initString.replace(/[xy]/g, (c) => {\r\n      return this.convert(c);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  private static convert(c) {\r\n    // tslint:disable-next-line:no-bitwise\r\n    const r = Math.random() * 16 | 0;\r\n    // tslint:disable-next-line:no-bitwise\r\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  }\r\n}\r\n","import { Guid } from '../util/guid.util';\r\nimport { ChgdrData, ChgdrDataRowNode } from './chgdr-data';\r\n\r\n// 参考： Farris TreeTable的节点结构\r\n// export interface TreeNode {\r\n//     id?: string;\r\n//     data: any;\r\n//     /** 叶子节点图标 */\r\n//     icon?: any;\r\n//     /** 节点展开图标 */\r\n//     expandedIcon?: any;\r\n//     /** 节点折叠图标 */\r\n//     collapsedIcon?: any;\r\n//     /** 子节点 */\r\n//     children?: TreeNode[];\r\n//     /** 是否为叶子节点 */\r\n//     leaf?: boolean;\r\n//     /** 是否展开 */\r\n//     expanded?: boolean;\r\n//     type?: string;\r\n//     /** 父节点 */\r\n//     parent?: TreeNode;\r\n//     /** 是否允许选中 */\r\n//     selectable?: boolean;\r\n//  }\r\n\r\nexport class ChgdrTreeNode {\r\n    // 树配置中设置了idField的情况下，id会被自动赋值为data[idField]的值。所以在此设置必须设置为与data.id中相同。\r\n    /** 节点ID，用于内部处理，请勿使用 */\r\n    id: string;\r\n    /** 节点名称 */\r\n    name: string;\r\n\r\n    /** 父节点 */\r\n    parent: ChgdrTreeNode;\r\n    /** 子节点列表 */\r\n    children: ChgdrTreeNode[];\r\n\r\n    /** 是否展开 */\r\n    expanded: boolean;\r\n    /** 是否隐藏 */\r\n    hidden: boolean;\r\n\r\n    /** 展示树结构用的数据实体 */\r\n    data: any;\r\n    chgdrRow: ChgdrDataRowNode;\r\n    chgdrData: ChgdrData;\r\n    isRoot: boolean;\r\n}\r\n\r\nexport class ChgdrTreeBuilder {\r\n    private chgdrData: ChgdrData;\r\n\r\n    public build(chgdrData: ChgdrData): ChgdrTreeNode[] {\r\n        this.chgdrData = chgdrData;\r\n        if (chgdrData.entityNodes.length == 0) {\r\n            console.warn(\"无变更日志\");\r\n            return [];\r\n        }\r\n        let rootEntityNode = chgdrData.entityNodes[0];\r\n        let rootRows = rootEntityNode.rows;\r\n        if (rootRows.length == 0) {\r\n            console.warn(\"无根变更日志行\");\r\n            return [];\r\n        }\r\n        let rootRow = rootRows[0];\r\n\r\n        let node = this.rowToNode(rootRow);\r\n        node.isRoot = true;\r\n        node.expanded = true;\r\n\r\n        return [node];\r\n    }\r\n\r\n    private rowToNode(row: ChgdrDataRowNode): ChgdrTreeNode {\r\n        const node: ChgdrTreeNode = new ChgdrTreeNode();\r\n        node.id = Guid.newGuid();\r\n        node.name = this.buildTreeNodeName(row);\r\n        node.data = {\r\n            id: node.id,\r\n            name: node.name\r\n        };\r\n        node.chgdrRow = row;\r\n        node.chgdrData = this.chgdrData;\r\n        node.children = [];\r\n        row.entityNodes.forEach(entityNode => {\r\n            entityNode.rows.forEach(childRow => {\r\n                const childNode: ChgdrTreeNode = this.rowToNode(childRow);\r\n                childNode.parent = node;\r\n                node.children.push(childNode);\r\n            })\r\n        })\r\n        return node;\r\n    }\r\n\r\n    private buildTreeNodeName(row: ChgdrDataRowNode): string {\r\n        let dataCodeName;\r\n        if (row.dataCodes && row.dataCodes.length > 0) {\r\n            dataCodeName = row.dataCodes[0].fieldValue;\r\n        }\r\n        if (dataCodeName) {\r\n            return row.entityName + \"-\" + dataCodeName + \"【\" + row.operateType.name + \"】\";\r\n        } else {\r\n            return row.entityName + \"【\" + row.operateType.name + \"】\";\r\n        }\r\n    }\r\n}","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpService, SessionService } from '@ecp-caf/caf-common';\r\nimport { GSPBusinessEntity } from '@gsp-bef/gsp-be-metadata';\r\nimport { GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ChangeDataHeader } from '../model/change-data-header';\r\nimport { ChangeDataQueryParam } from '../model/change-data-query-param';\r\nimport { ChgLogConfigField } from '../model/chgdr-config-field';\r\nimport { OperateType } from '../model/operate-type';\r\nimport { MapUtil } from '../util/map.util';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ChgdrMetadataService {\r\n  private beMetadataCache: Map<string, GSPBusinessEntity> = new Map();\r\n\r\n  constructor(private http: HttpService,\r\n    private sessionService: SessionService,\r\n    private metadataService: GSPMetadataRTService,\r\n    private injector: Injector) { }\r\n\r\n    /** 获取BE元数据 */\r\n    public getGSPBusinessEntity(beId: string):Observable<GSPBusinessEntity>{\r\n      if(this.beMetadataCache.has(beId)){\r\n        let be = this.beMetadataCache.get(beId);\r\n        return of(be);\r\n      }else{\r\n        return this.metadataService.GetMetadataRT(beId).pipe(map(metadata => {\r\n          const be: GSPBusinessEntity = JSON.parse(metadata.content);\r\n          this.beMetadataCache.set(beId, be);\r\n          return be;\r\n        }));\r\n      }\r\n    }\r\n\r\n  // public getBeMetadataAndUdts(beId: string): Observable<any> {\r\n  //   this.metadataService.GetMetadataRT(beId).subscribe((metadata) => {\r\n  //     const be: GSPBusinessEntity = JSON.parse(metadata.content);\r\n  //     let udtids:string[] = this.getAllUdtIds(be.MainObject);\r\n  //     this.metadataService.\r\n  //   });\r\n  // }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { HttpService, SessionService } from '@ecp-caf/caf-common';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ChgLogConfigEntity } from '../model/chgdr-config-entity';\r\nimport { ChgLogConfigField } from '../model/chgdr-config-field';\r\nimport { ChgdrInnerService } from './chgdr-inner.service';\r\n\r\nconst CHGDR_CONFIG_ROUTER = '/api/runtime/bcc/v1.0/chgdr/config';\r\nconst CHGDR_CONFIG_GET_BY_BIZOBJID_AND_MODELID = `${CHGDR_CONFIG_ROUTER}/{bizObjId}/{modelId}`;\r\n\r\nconst ServerIP = '/';\r\nconst chgdrUrl = `${ServerIP}api/runtime/chgdr/v1.0`;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ChgdrConfigService {\r\n\r\n    constructor(private http: HttpService,\r\n        private sessionService: SessionService,\r\n        private injector: Injector) {\r\n    }\r\n\r\n    /**\r\n     * 根据业务实体ID获取所有的配置信息\r\n     */\r\n    getBeChgdrConfig(beId: string): Observable<ChgLogConfigEntity[]> {\r\n        let queryUrl = `${chgdrUrl}/config?beId=${beId}`;\r\n        return (<Observable<ChgLogConfigEntity[]>><unknown>this.http.get(queryUrl)).pipe(tap(data => {\r\n            let configEntities: ChgLogConfigEntity[] = data || [];\r\n            configEntities.forEach(entity => {\r\n                //处理字段顺序号\r\n                let fields: Array<ChgLogConfigField> = entity.fields || [];\r\n                //赋予老数据默认顺序号\r\n                fields.forEach((field, index) => {\r\n                    if (field.showIndex === undefined || field.showIndex === null) {\r\n                        field.showIndex = index;\r\n                    }\r\n                });\r\n                //按照顺序号排序\r\n                entity.fields = fields.sort((a, b) => a.showIndex - b.showIndex);\r\n                //根据排序结果重置顺序号\r\n                fields.forEach((field, index) => {\r\n                    field.showIndex = index;\r\n                })\r\n            })\r\n        }));\r\n    }\r\n}","import { isToday, format } from 'date-fns';\r\nimport { GSPBusinessEntity } from '@gsp-bef/gsp-be-metadata';\r\nimport { IGSPCommonObject, IGSPCommonElement, GSPAssociation, GSPCommonElement, GSPElementDataType, GSPElementObjectType, GSPEnumValue } from '@gsp-bef/gsp-cm-metadata';\r\nimport { ChgLogConfigEntity } from '../model/chgdr-config-entity';\r\nimport { ChgLogConfigField } from '../model/chgdr-config-field';\r\nimport { I18nUtil } from './i18n-service';\r\n\r\nexport class ChgdrConfigHandler {\r\n    private be: GSPBusinessEntity;\r\n    private entityCodeMap: Map<string, IGSPCommonObject> = new Map();\r\n    private entityFieldMap: Map<string, IGSPCommonElement> = new Map();\r\n    private entityFieldShowOrderMap: Map<string, number> = new Map();\r\n    private entityFieldParentMap: Map<string, IGSPCommonElement> = new Map();\r\n\r\n    private entityConfigs: ChgLogConfigEntity[];\r\n    private entityFieldConfigMap: Map<string, ChgLogConfigField> = new Map();\r\n\r\n    public constructor(be: GSPBusinessEntity, entityConfigs: ChgLogConfigEntity[]) {\r\n        //初始化所有BE对象信息\r\n        this.be = be;\r\n        if (!!be) {\r\n            let mainObject = be.MainObject;\r\n            this.updateEntityMap(mainObject, this.entityCodeMap, this.entityFieldMap);\r\n        }\r\n\r\n        //初始化配置信息\r\n        this.entityConfigs = entityConfigs || [];\r\n        this.updateEntityConfigs();\r\n\r\n        //更新显示顺序\r\n        this.updateShowIndex();\r\n    }\r\n\r\n    /** 更新显示顺序号 */\r\n    private updateShowIndex() {\r\n        let entityFieldShowOrderMap: Map<string, number> = new Map();\r\n        //首先用BE字段顺序赋予初始顺序，避免配置中无顺序号造成显示错乱\r\n        this.entityFieldMap.forEach((value, key) => {\r\n            entityFieldShowOrderMap.set(key, entityFieldShowOrderMap.size);\r\n        });\r\n        //然后用配置顺序替代初始顺序\r\n        this.entityFieldConfigMap.forEach((value, key) => {\r\n            if (value.showIndex !== undefined && value.showIndex !== null) {\r\n                entityFieldShowOrderMap.set(key, value.showIndex);\r\n            }\r\n        })\r\n\r\n        this.entityFieldShowOrderMap = entityFieldShowOrderMap;\r\n    }\r\n\r\n    /** 更新配置信息的相关数据 */\r\n    private updateEntityConfigs() {\r\n        let fieldConfigMap: Map<string, ChgLogConfigField> = new Map();\r\n        this.entityConfigs.forEach(entityConfig => {\r\n            let tabCode = entityConfig.tabCode;\r\n            (entityConfig.fields || []).forEach(field => {\r\n                let fieldLabel = field.fieldLabelId;\r\n                let key = tabCode + \"#\" + fieldLabel;\r\n                fieldConfigMap.set(key, field);\r\n            })\r\n        });\r\n        this.entityFieldConfigMap = fieldConfigMap;\r\n    }\r\n\r\n    private updateEntityMap(entity: IGSPCommonObject, entityCodeMap: Map<string, IGSPCommonObject>, entityFieldMap: Map<string, IGSPCommonElement>) {\r\n        if (!entity) {\r\n            return;\r\n        }\r\n        entityCodeMap.set(entity.Code, entity);\r\n\r\n        //实体对象的字段信息\r\n        entity.ContainElements.forEach(ele => {\r\n            this.updateEntityFieldMap(entity, ele, null, entityFieldMap);\r\n        })\r\n\r\n        //处理子节点信息\r\n        let children: IGSPCommonObject[] = entity.ContainChildObjects;\r\n        if (!children || !children.length) {\r\n            return;\r\n        }\r\n\r\n        children.forEach(childEntity => {\r\n            this.updateEntityMap(childEntity, entityCodeMap, entityFieldMap);\r\n        })\r\n    }\r\n\r\n    /** 更新BE节点的指定字段信息，如果该字段是关联字段，同时更新其带出字段 */\r\n    private updateEntityFieldMap(entity: IGSPCommonObject, element: IGSPCommonElement, parentElement: IGSPCommonElement, entityFieldMap: Map<string, IGSPCommonElement>): void {\r\n        let key = entity.Code + \"#\" + element.LabelID;\r\n        entityFieldMap.set(key, element);\r\n        if (parentElement) {\r\n            this.entityFieldParentMap.set(key, parentElement);\r\n        }\r\n\r\n        const childAssociations: GSPAssociation[] = element.ChildAssociations;\r\n        if (!!childAssociations && childAssociations.length > 0) {\r\n            childAssociations.forEach(childAssociation => {\r\n                const refElementCollection: GSPCommonElement[] = childAssociation.RefElementCollection;\r\n                if (!!refElementCollection && refElementCollection.length > 0) {\r\n                    refElementCollection.forEach(rele => {\r\n                        this.updateEntityFieldMap(entity, rele, element, entityFieldMap);\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public sort(items: any[], entityCode: string, fieldLabelIdFunc: (item: any) => string) {\r\n        items.sort((a, b) => {\r\n            const aKey = entityCode + \"#\" + fieldLabelIdFunc(a);\r\n            const bKey = entityCode + \"#\" + fieldLabelIdFunc(b);\r\n            if (!this.entityFieldShowOrderMap.has(aKey) && !this.entityFieldShowOrderMap.has(bKey)) {\r\n                //如果双方均无顺序号，则按照自然排序\r\n                return aKey.localeCompare(bKey);\r\n            } else if (!this.entityFieldShowOrderMap.has(aKey)) {\r\n                //如果有一方无顺序号，则无顺序号的靠后\r\n                return -1;\r\n            } else if (!this.entityFieldShowOrderMap.has(bKey)) {\r\n                //如果有一方无顺序号，则无顺序号的靠后\r\n                return 1;\r\n            } else {\r\n                //如果两方都有顺序号，则按照顺序号排序\r\n                const aOrder = this.entityFieldShowOrderMap.get(aKey);\r\n                const bOrder = this.entityFieldShowOrderMap.get(bKey);\r\n                return aOrder - bOrder;\r\n            }\r\n        });\r\n    }\r\n\r\n    /** 格式化主对象节点中字段的值 */\r\n    public formatMainObjectFieldValue(originalValue: string, fieldLabelId: string) {\r\n        let entityCode = this.getMainObjectCode();\r\n        return this.formatFieldValue(originalValue, entityCode, fieldLabelId);\r\n    }\r\n\r\n    /** 格式化字段值 */\r\n    public formatFieldValue(originalValue: string, entityCode: string, fieldLabelId: string): string {\r\n        let element: IGSPCommonElement = this.getElement(entityCode, fieldLabelId);\r\n        if (!element) {\r\n            console.error(\"未找到业务实体【\" + this.be.ID + \"-\" + this.be.Name + \"】节点【\" + entityCode + \"】的字段【\" + fieldLabelId + \"】\");\r\n            return originalValue;\r\n        }\r\n        if (!element) {\r\n            return originalValue;\r\n        }\r\n\r\n        try {\r\n            //处理历史遗留的数字格式\r\n            if ((element.MDataType == GSPElementDataType.Decimal || element.MDataType == GSPElementDataType.Integer)\r\n                && originalValue && originalValue.toLowerCase().includes(\"e\")) {\r\n                //如果字段是数字类型，且是科学计数法格式\r\n                //转为十进制格式显示\r\n                let num = Number(originalValue);\r\n                if (isNaN(num)) {\r\n                    console.log(\"业务实体【\" + this.be.ID + \"-\" + this.be.Name + \"】节点【\" + entityCode + \"】的字段【\" + fieldLabelId + \"】的值不是有效的数字格式：\" + originalValue);\r\n                    return originalValue;\r\n                } else {\r\n                    let result = this.toNonExponential(num);\r\n                    return result;\r\n                }\r\n            }\r\n\r\n            //处理布尔值类型\r\n            if (element.MDataType == GSPElementDataType.Boolean) {\r\n                //注意：new Boolean(\"false\") == true\r\n                if (originalValue === null || originalValue === undefined || originalValue.length == 0) {\r\n                    return originalValue;\r\n                } else if (originalValue.toLowerCase() == \"false\") {\r\n                    return I18nUtil.instantOrDefault(\"no-text\", \"否\");\r\n                } else if (originalValue.toLowerCase() == \"true\") {\r\n                    return I18nUtil.instantOrDefault(\"yes-text\", \"是\");\r\n                } else {\r\n                    return originalValue;\r\n                }\r\n            }\r\n\r\n            //处理日期格式\r\n            if (element.MDataType == GSPElementDataType.Date) {\r\n                if (originalValue === null || originalValue === undefined || originalValue.length == 0) {\r\n                    //不包含值，直接返回原始值\r\n                    return originalValue;\r\n                } else {\r\n                    let date = new Date(originalValue);\r\n                    let str = format(date, \"yyyy-MM-dd\");\r\n                    return str;\r\n                }\r\n            }\r\n\r\n            //处理日期时间格式\r\n            if (element.MDataType == GSPElementDataType.DateTime) {\r\n                if (originalValue === null || originalValue === undefined || originalValue.length == 0) {\r\n                    //不包含值，直接返回原始值\r\n                    return originalValue;\r\n                } else {\r\n                    let date = new Date(originalValue);\r\n                    let str = format(date, \"yyyy-MM-dd HH:mm:ss\");\r\n                    return str;\r\n                }\r\n            }\r\n\r\n            //处理枚举格式\r\n            if (element.ObjectType == GSPElementObjectType.Enum) {\r\n                let enumValues: GSPEnumValue[] = element.ContainEnumValues || [];\r\n                let enumValue = enumValues.find(item => item.Value == originalValue);\r\n                if (enumValue) {\r\n                    return enumValue.Name;\r\n                } else if (originalValue === null || originalValue === undefined || originalValue.length == 0) {\r\n                    //如果找不到对应的枚举项，并且原始值为空，说明未赋值，不报错\r\n                    return originalValue;\r\n                } else {\r\n                    //打印异常\r\n                    console.log(\"业务实体【\" + this.be.ID + \"-\" + this.be.Name + \"】节点【\" + entityCode + \"】的字段【\" + fieldLabelId + \"】的值未找到匹配的枚举项：\" + originalValue);\r\n                    return originalValue;\r\n                }\r\n            }\r\n\r\n            return originalValue;\r\n        } catch (error) {\r\n            console.error(\"业务实体【\" + this.be.ID + \"-\" + this.be.Name + \"】节点【\" + entityCode + \"】的字段【\" + fieldLabelId + \"】的值【\" + originalValue + \"】格式化出错：\", error);\r\n            return originalValue;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /** JavaScript中科学计数法转化为数值字符串形式。\r\n     * 以下两种情况，JavaScript 会自动将数值转为科学计数法表示\r\n     * (1) 小于1且小数点后面带有6个0以上的浮点数值：\r\n     * (2) 整数位数字多于21位：\r\n     * 首先看看整数位数字多于21位的情况，其实这个一般不会碰到，整数位数字多于21位已经超出了 JavaScript 精确整数范围。\r\n     * 这个方法用于处理小数问题\r\n     * from：https://www.cnblogs.com/xianfengzhike/p/9939029.html */\r\n    private toNonExponential(num) {\r\n        var m = num.toExponential().match(/\\d(?:\\.(\\d*))?e([+-]\\d+)/);\r\n        return num.toFixed(Math.max(0, (m[1] || '').length - m[2]));\r\n    }\r\n\r\n    public getBeName(): string {\r\n        return this.be ? this.be.Name : null;\r\n    }\r\n\r\n    public getMainObjectCode(): string {\r\n        return this.be && this.be.MainObject ? this.be.MainObject.Code : null;\r\n    }\r\n\r\n    public getElement(entityCode: string, fieldLabelId: string): IGSPCommonElement {\r\n        let key = entityCode + \"#\" + fieldLabelId;\r\n        return this.entityFieldMap.get(key);\r\n    }\r\n\r\n    public getParentElement(entityCode: string, fieldLabelId: string): IGSPCommonElement {\r\n        let key = entityCode + \"#\" + fieldLabelId;\r\n        return this.entityFieldParentMap.get(key);\r\n    }\r\n\r\n    public getEntityNameOrDefault(entityCode: string) {\r\n        let entity = this.entityCodeMap.get(entityCode);\r\n        return !!entity ? entity.Name : entityCode;\r\n    }\r\n\r\n    public getEntityFieldNameOrDefault(entityCode: string, fieldLabelId: string) {\r\n        let key = entityCode + \"#\" + fieldLabelId;\r\n        let fieldConfig = this.entityFieldConfigMap.get(key);\r\n        if (fieldConfig && fieldConfig.fieldName && fieldConfig.fieldName != \"\") {\r\n            //优先返回配置的名称\r\n            return fieldConfig.fieldName;\r\n        }\r\n        //如果不存在配置名称，则返回BE字段名称\r\n        let ele = this.entityFieldMap.get(key);\r\n        return !!ele ? ele.Name : fieldLabelId;\r\n    }\r\n}","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpService, SessionService } from '@ecp-caf/caf-common';\r\nimport { GSPBusinessEntity } from '@gsp-bef/gsp-be-metadata';\r\nimport { GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ChangeDataHeader } from '../model/change-data-header';\r\nimport { ChangeDataQueryParam } from '../model/change-data-query-param';\r\nimport { ChgLogConfigEntity } from '../model/chgdr-config-entity';\r\nimport { ChgLogConfigField } from '../model/chgdr-config-field';\r\nimport { OperateType } from '../model/operate-type';\r\nimport { MapUtil } from '../util/map.util';\r\nimport { ChgdrConfigHandler } from './chgdr-config-handler';\r\nimport { ChgdrConfigService } from './chgdr-config.service';\r\nimport { ChgdrMetadataService } from './chgdr-metadata.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ChgdrInnerService {\r\n    private beMetadataCache: Map<string, ChgdrConfigHandler> = new Map();\r\n\r\n    constructor(private http: HttpService,\r\n        private sessionService: SessionService,\r\n        private metadataService: GSPMetadataRTService,\r\n        private chgdrMetadataService: ChgdrMetadataService,\r\n        private chgdrConfigService: ChgdrConfigService,\r\n        private injector: Injector\r\n    ) { }\r\n\r\n    /** 获取BE元数据 */\r\n    public getChgdrConfigHandler(beId: string): Observable<ChgdrConfigHandler> {\r\n        if (this.beMetadataCache.has(beId)) {\r\n            let be = this.beMetadataCache.get(beId);\r\n            return of(be);\r\n        } else {\r\n            let requests = [];\r\n            requests.push(this.chgdrMetadataService.getGSPBusinessEntity(beId));\r\n            requests.push(this.chgdrConfigService.getBeChgdrConfig(beId));\r\n\r\n            return forkJoin(requests).pipe(map(data => {\r\n                const be = data[0];\r\n                const entityConfigs: ChgLogConfigEntity[] = data[1] || [];\r\n                const handler = new ChgdrConfigHandler(be, entityConfigs);\r\n                this.beMetadataCache.set(beId, handler);\r\n                return handler;\r\n            }));\r\n        }\r\n    }\r\n}\r\n","import { Component, Injector, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';\r\nimport { GSPBusinessEntity } from '@gsp-bef/gsp-be-metadata';\r\nimport { ChangeDataHeader } from '../model/change-data-header';\r\nimport { ChangeColumnItem, ChgdrData, ChgdrDataEntityNode, ChgdrDataRowNode } from './chgdr-data';\r\nimport { GSPAssociation, GSPCommonElement, GSPCommonObject, IGSPCommonElement, IGSPCommonObject } from '@gsp-bef/gsp-cm-metadata';\r\nimport { ChangeDataRow } from '../model/change-data-row';\r\nimport { ChgdrDataBuilder } from './chgdr-data-builder';\r\nimport { ChgdrTreeBuilder, ChgdrTreeNode } from './chgdr-tree-builder';\r\nimport { TreeTableComponent } from '@farris/ui-treetable';\r\nimport { ChgdrMetadataService } from '../service/chgdr-metadata.service';\r\nimport { ChgdrConfigService } from '../service/chgdr-config.service';\r\nimport { forkJoin } from 'rxjs';\r\nimport { ChgLogConfigEntity } from '../model/chgdr-config-entity';\r\nimport { ChgdrInnerService } from '../service/chgdr-inner.service';\r\nimport { I18nUtil } from '../service/i18n-service';\r\n\r\n@Component({\r\n  selector: 'chgdr-data-viewer',\r\n  templateUrl: './chgdr-data-viewer.component.html',\r\n  styleUrls: ['./chgdr-data-viewer.component.css']\r\n})\r\nexport class ChgdrDataViewerComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  data: ChangeDataHeader;\r\n  @Input() showDataId: boolean = false;\r\n  @ViewChild(\"treeTable\")\r\n  private treeTableComponent: TreeTableComponent\r\n\r\n  treeConfig: any = {\r\n    idField: 'id',\r\n    columns: [\r\n      { field: 'name', title: 'Name', width: 200 }\r\n    ],\r\n    /** 叶子节点图标 */\r\n    leafIcon: 'f-icon f-icon-page-title-type text-info mr-2',\r\n    /** 节点展开图标 */\r\n    expandIcon: 'f-icon f-icon-file-folder-open text-info mr-2',\r\n    /** 节点折叠图标 */\r\n    collapseIcon: 'f-icon f-icon-file-folder-close text-info mr-2',\r\n    showLevel: -1,\r\n    disabled: false,\r\n    init: false,\r\n    selectValues: []\r\n  };\r\n\r\n  chgdrData: ChgdrData;\r\n  treeData: ChgdrTreeNode[];\r\n  currentNode: ChgdrTreeNode;\r\n\r\n  constructor(private metadataService: GSPMetadataRTService,\r\n    private injector: Injector,\r\n    private chgdrMetadataService: ChgdrMetadataService,\r\n    private chgdrConfigService: ChgdrConfigService,\r\n    private chgdrInnerService: ChgdrInnerService) {\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!!this.data) {\r\n      let beId = this.data.entityId;\r\n      this.chgdrInnerService.getChgdrConfigHandler(beId).subscribe(handler=>{\r\n        this.chgdrData = new ChgdrDataBuilder().buildChgdrData(this.data, handler);\r\n        this.treeData = new ChgdrTreeBuilder().build(this.chgdrData);\r\n        if (this.treeTableComponent) {\r\n          //移除已选中项。\r\n          //避免更换数据源后，treeGrid找不到之前的选中数据，导致控制台告警\r\n          this.treeTableComponent.clearSelections();\r\n        }\r\n        setTimeout(() => {\r\n          this.treeTableComponent.selectNode(this.treeData[0].id);\r\n        }, 0);\r\n      })\r\n    }\r\n  }\r\n\r\n  public handleTreeSelection($event): void {\r\n    const node: ChgdrTreeNode = $event.node;\r\n    if (this.currentNode != null && this.currentNode.id == node.id) {\r\n      //如果选中相同节点，直接返回\r\n      return;\r\n    }\r\n    this.currentNode = node;\r\n  }\r\n\r\n  public get baseInfoSectionTitle(){\r\n    return I18nUtil.instant(\"base-info-section-title\")\r\n  }\r\n\r\n  public get changeDetailSectionTitle(){\r\n    return I18nUtil.instant(\"change-detail-section-title\");\r\n  }\r\n\r\n  public get  emptyDataText(){\r\n    return I18nUtil.instant(\"empty-data-text\");\r\n  }\r\n}\r\n","import { I18nUtil } from \"../service/i18n-service\";\r\n\r\nexport class OperateType {\r\n    /** 新增 */\r\n    static ADD: OperateType = new OperateType(0, \"ADD\", \"新增\");\r\n    /** 修改 */\r\n    static MODIFY: OperateType = new OperateType(1, \"MODIFY\", \"修改\");\r\n    /** 删除 */\r\n    static DELETE: OperateType = new OperateType(2, \"DELETE\", \"删除\");\r\n\r\n    private constructor(public ordinal: number, public code: string, private defaultName: string) {\r\n    }\r\n\r\n    public get name() {\r\n        return I18nUtil.instantOrDefault(\"operate-type-name-\" + this.code, this.defaultName);\r\n    }\r\n\r\n    public static values(): OperateType[] {\r\n        return [OperateType.ADD, OperateType.MODIFY, OperateType.DELETE];\r\n    }\r\n\r\n    public toJson() {\r\n        return this.code;\r\n    }\r\n\r\n    public static parse(obj: any): OperateType {\r\n        if (obj === undefined || obj === null) {\r\n            return null;\r\n        }\r\n        if (obj instanceof OperateType) {\r\n            return obj;\r\n        }\r\n        if (typeof obj === \"string\") {\r\n            return OperateType.values().find(ot => ot.code == obj);\r\n        }\r\n        if (typeof obj === \"number\") {\r\n            return OperateType.values().find(ot => ot.ordinal == obj);\r\n        }\r\n        if (!!obj.code) {\r\n            return OperateType.values().find(ot => ot.code == obj.code);\r\n        }\r\n        return null;\r\n    }\r\n}","export class MapUtil {\r\n    /** 将Map转为Object，便于序列化。（因为JSON.stringfy(Map)返回的值总为{}） */\r\n    static convertMapToObject(map: Map<String, any>) {\r\n        if (!map) {\r\n            return null;\r\n        }\r\n        let obj = Object.create(null);\r\n        map.forEach((value, key: any) => {\r\n            obj[key] = value;\r\n        })\r\n        return obj;\r\n    }\r\n\r\n    /** 将Object转为Map，因为JSON.parse无法识别类型，反序列化后只能是Object类型 */\r\n    static convertObjectToMap(obj: any): Map<string, any> {\r\n        if (obj === undefined || obj === null) {\r\n            return null;\r\n        }\r\n\r\n        let strMap = new Map();\r\n        for (let k of Object.keys(obj)) {\r\n            strMap.set(k, obj[k]);\r\n        }\r\n        return strMap;\r\n    }\r\n}","import { Injectable, Injector } from '@angular/core';\nimport { HttpService, SessionService } from '@ecp-caf/caf-common';\nimport { Observable, of } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ChangeDataCompHeader, ChangeDataHeader } from '../model/change-data-header';\nimport { ChangeDataQueryParam } from '../model/change-data-query-param';\nimport { ChangeDataQueryResult } from '../model/change-data-query-result';\nimport { ChangeDataRow } from '../model/change-data-row';\nimport { ChgLogConfigField } from '../model/chgdr-config-field';\nimport { ChgdrItemQueryParam } from '../model/chgdr-item-query-param';\nimport { OperateType } from '../model/operate-type';\nimport { MapUtil } from '../util/map.util';\n\nconst ServerIP = '/';\nconst chgdrUrl = `${ServerIP}api/runtime/chgdr/v1.0`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChgdrService {\n  private rootDataCodeFieldsMap: Map<string, ChgLogConfigField[]> = new Map();\n\n  constructor(private http: HttpService,\n    private sessionService: SessionService,\n    private injector: Injector) { }\n\n  public queryChangeDataHeader(currentQueryParam: ChangeDataQueryParam): Observable<any> {\n    let obj: any = Object.assign({}, currentQueryParam);\n    if (currentQueryParam.dataCode) {\n      obj.dataCode = MapUtil.convertMapToObject(currentQueryParam.dataCode);\n    }\n\n    let json = JSON.stringify(obj);\n    let queryParam = encodeURIComponent(json);\n    let url = `${chgdrUrl}?queryParam=${queryParam}`;\n    return this.http.get(url).pipe(map(data => {\n      if (!data) {\n        return data;\n      }\n      let queryResult: ChangeDataQueryResult = <ChangeDataQueryResult><unknown>data;\n      queryResult && queryResult.headers && queryResult.headers.forEach(header => {\n        //TODO 待删，兼容老数据格式\n        if (typeof header.dataCode == \"string\") {\n          header.dataCode = JSON.parse(header.dataCode);\n        }\n\n        header.dataCode = MapUtil.convertObjectToMap(header.dataCode);\n        header.changeTime = this.toDate(header.changeTime);\n        header.operateType = OperateType.parse(header.operateType);\n      })\n      return queryResult;\n    }));\n  }\n\n  public getRootEntityDataCodeFields(beId: string): Observable<ChgLogConfigField[]> {\n    if (!beId) {\n      return of([]);\n    }\n    if (this.rootDataCodeFieldsMap.has(beId)) {\n      //直接从缓存中获取\n      return of(this.rootDataCodeFieldsMap.get(beId));\n    } else {\n      //获取结果并存入缓存\n      let url = `${chgdrUrl}/rootDataCodeFields?beId=${beId}`;\n      return (<Observable<ChgLogConfigField[]>><unknown>(this.http.get(url)))\n        .pipe(tap(data => this.rootDataCodeFieldsMap.set(beId, data)));\n    }\n  }\n\n  /** 将字符串或数字转为Date */\n  private toDate(date: any): Date {\n    if (typeof date == \"string\") {\n      return new Date(date);\n    } else if (typeof date == \"number\") {\n      return new Date(date);\n    } else {\n      return date;\n    }\n  }\n\n  /**\n   * 查询业务变更日志详细数据。\n   * @param id headerId\n   * @param changeTime 变更时间，和header.changeTime保持一致\n   */\n  public getChangeData(headerId: string, changeTime: Date): Observable<any>\n  public getChangeData(param: ChgdrItemQueryParam): Observable<any>\n  public getChangeData(idOrParam: ChgdrItemQueryParam | string, changeTime?: Date): Observable<any> {\n    if (idOrParam == null) {\n      throw new Error(\"id can not be null\");\n    }\n    if (idOrParam instanceof String || typeof idOrParam == \"string\") {\n      return this.getChangeDataById(<string>idOrParam, changeTime);\n    } else {\n      return this.getChangeDataByParam(idOrParam);\n    }\n  }\n\n  private getChangeDataById(id: string, changeTime: Date): Observable<any> {\n    let json = JSON.stringify(changeTime);\n    let queryParam = encodeURIComponent(json);\n    let url = `${chgdrUrl}/${id}?changeTime=${queryParam}`;\n    return this.http.get(url).pipe(map(data => {\n      return this.transChangeDataFromResponse(data);\n    }));\n  }\n\n  private getChangeDataByParam(param: ChgdrItemQueryParam): Observable<any> {\n    if (param == null) {\n      throw new Error(\"ChgdrItemQueryParam can not be null\");\n    }\n\n    let requestParam: any = {};\n    Object.assign(requestParam, param);\n    //将Map转为Object，否则无法正常序列化\n    requestParam.dataIds = MapUtil.convertMapToObject(param.dataIds);\n\n    let url = `${chgdrUrl}`;\n    return this.http.post(url, requestParam).pipe(map(data => {\n      return this.transChangeDataFromResponse(data);\n    }));\n  }\n\n  private transChangeDataFromResponse(data): ChangeDataCompHeader {\n    if (!data) {\n      return data;\n    }\n    let sh: ChangeDataCompHeader = <ChangeDataCompHeader><unknown>data;\n    //TODO 待删，兼容老数据格式\n    if (typeof sh.dataCode == \"string\") {\n      sh.dataCode = JSON.parse(sh.dataCode);\n    }\n    sh.dataCode = MapUtil.convertObjectToMap(sh.dataCode);\n    sh.changeTime = this.toDate(sh.changeTime);\n    sh.operateType = OperateType.parse(sh.operateType);\n    sh.rows = this.transChangeDataRowsFromResponse(sh.rows || []);\n    return sh;\n  }\n\n  private transChangeDataRowsFromResponse(rows: ChangeDataRow[]): ChangeDataRow[] {\n    if (!rows || rows.length == 0) {\n      return rows;\n    }\n\n    rows.forEach(row => {\n      if (!row) {\n        return;\n      }\n      row.operateType = OperateType.parse(row.operateType);\n      //TODO 待删，兼容老数据格式\n      if (typeof row.dataCode == \"string\") {\n        row.dataCode = JSON.parse(row.dataCode);\n      }\n      row.dataCode = MapUtil.convertObjectToMap(row.dataCode);\n      row.oldContent = <Map<string, string>>MapUtil.convertObjectToMap(row.oldContent) || new Map();\n      row.newContent = <Map<string, string>>MapUtil.convertObjectToMap(row.newContent) || new Map();\n    });\n\n    return rows;\n  }\n}\n","export class ChangeDataQueryParam {\r\n    /** 用户ID */\r\n    userId: string;\r\n    /** 实体ID */\r\n    entityId: string;\r\n    /** 数据主键 */\r\n    dataId: string;\r\n    /** 数据编号 */\r\n    dataCode: Map<string, string>;\r\n    /** 变更时间-起始 */\r\n    changeTimeStart: Date;\r\n    /** 变更时间-结束 */\r\n    changeTimeEnd: Date;\r\n    /** 每页数量 */\r\n    pageSize: number;\r\n    /** 页码，从1开始 */\r\n    pageIndex: number;\r\n}","import { ChangeDataHeader } from './change-data-header';\r\n\r\nexport class ChangeDataQueryResult {\r\n    /** 当前页面，从1开始 */\r\n    pageIndex: number;\r\n    /** 每页数量 */\r\n    pageSize: number;\r\n    /** 总条数 */\r\n    total: number;\r\n    /** 当前页数据 */\r\n    headers: ChangeDataHeader[];\r\n}","export class ErrorUtil {\r\n    static getErrorMessage(e: any) {\r\n        if (!e) {\r\n            return \"\";\r\n        } else if (!e.error) {\r\n            return \"\";\r\n        } else if (!e.error.Message) {\r\n            return \"\";\r\n        } else {\r\n            return e.error.Message;\r\n        }\r\n    }\r\n}","export class TimeUtil{\r\n    public static getStartTimeInDay(date:Date){\r\n        let d:Date = new Date(date);\r\n        d.setHours(0);\r\n        d.setMinutes(0);\r\n        d.setSeconds(0);\r\n        d.setMilliseconds(0);\r\n        return d;\r\n    }\r\n\r\n    public static getEndTimeInDay(date:Date){\r\n        let d:Date = new Date(date);\r\n        d.setHours(23);\r\n        d.setMinutes(59);\r\n        d.setSeconds(59);\r\n        d.setMilliseconds(999);\r\n        return d;\r\n    }\r\n}","import { Component, HostBinding, Injector, Input, OnChanges, OnInit, SimpleChanges, TemplateRef, ViewChild } from '@angular/core';\nimport { DialogComponent } from '@farris/ui-dialog';\nimport { MessagerService } from '@farris/ui-messager';\nimport { NotifyService } from '@farris/ui-notify';\nimport { ChgdrService } from '../service/chgdr.service';\nimport { ChangeDataHeader } from '../model/change-data-header';\nimport { ChangeDataQueryParam } from '../model/change-data-query-param';\nimport { ChangeDataQueryResult } from '../model/change-data-query-result';\nimport { OperateType } from '../model/operate-type';\nimport { ErrorUtil } from '../util/error.util';\nimport { TimeUtil } from '../util/time.util';\nimport { I18nUtil } from '../service/i18n-service';\nimport { BeforeShowChangeDetailEvent } from '../model/chgdr-ui-config';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'chgdr-list',\n  templateUrl: './chgdr-list.component.html',\n  styleUrls: ['./chgdr-list.component.css']\n})\nexport class ChgdrListComponent implements OnInit, OnChanges {\n  @HostBinding('class.f-utils-fill-flex-column') baseCls = true;\n\n  @Input()\n  /** 业务实体ID */\n  entityId: string;\n  @Input()\n  /** 数据ID */\n  dataId: string;\n  @Input()\n  /** 变更时间-起始 */\n  changeTimeStart: Date;\n  @Input()\n  /** 变更时间-结束 */\n  changeTimeEnd: Date;\n\n  @Input()\n  /** 打开详情前的回调 */\n  beforeShowChangeDetail: (event: BeforeShowChangeDetailEvent) => Observable<boolean>;\n\n  private currentQueryParam: ChangeDataQueryParam;\n  chgdrs: ChangeDataQueryResult;\n\n  constructor(private chgdrService: ChgdrService,\n    private messageService: MessagerService,\n    private notifyService: NotifyService,\n    private injector: Injector) {\n  }\n\n  ngOnInit() {\n    let chgdrs = new ChangeDataQueryResult();\n    chgdrs.total = 0;\n    chgdrs.pageSize = 20;\n    chgdrs.pageIndex = 1;\n    chgdrs.headers = [];\n    this.chgdrs = chgdrs;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.changeTimeStart && !this.changeTimeEnd) {\n      //未录入变更时间范围，则查询最近一周的\n      this.changeTimeEnd = TimeUtil.getEndTimeInDay(new Date());\n      this.changeTimeStart = TimeUtil.getStartTimeInDay(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000));\n    } else if (!this.changeTimeEnd) {\n      //如果未设置截至时间，则与开始时间相同\n      this.changeTimeEnd = TimeUtil.getEndTimeInDay(this.changeTimeStart);\n    } else if (!this.changeTimeStart) {\n      //如果未设置开始时间，则与截至时间相同\n      this.changeTimeStart = TimeUtil.getEndTimeInDay(this.changeTimeEnd);\n    }\n    if (!!this.entityId) {\n      let param = this.buildQueryParam();\n      this.doQuery(param);\n    }\n  }\n\n  public query() {\n    let param = this.buildQueryParam();\n    this.doQuery(param);\n  }\n\n  private buildQueryParam() {\n    let param = new ChangeDataQueryParam();\n    param.pageIndex = 1;\n    param.pageSize = 20;\n    param.entityId = this.entityId;\n    param.dataId = this.dataId;\n    param.changeTimeStart = this.changeTimeStart;\n    param.changeTimeEnd = this.changeTimeEnd;\n    return param;\n  }\n\n  private doQuery(param) {\n    this.chgdrService.queryChangeDataHeader(param).subscribe(data => {\n      this.currentQueryParam = param;\n      this.chgdrs = data;\n    }, error => {\n      console.error(\"查询业务变更日志出错\", error);\n      this.messageService.error(I18nUtil.instant(\"query-change-data-record-error\", { errorMessage: ErrorUtil.getErrorMessage(error) }));\n    });\n  }\n\n  onPageChanged($event) {\n    if (!$event) {\n      return;\n    }\n\n    if ($event.pageIndex) {\n      this.currentQueryParam.pageIndex = $event.pageIndex;\n    }\n    if ($event.pageSize) {\n      this.currentQueryParam.pageSize = $event.pageSize;\n    }\n    this.doQuery(this.currentQueryParam);\n  }\n\n  onPageSizeChanged($event) {\n    this.currentQueryParam.pageSize = $event;\n    this.doQuery(this.currentQueryParam);\n  }\n\n  public get startTimeLabel() {\n    return I18nUtil.instant(\"start-time-label\");\n  }\n\n  public get endTimeLabel() {\n    return I18nUtil.instant(\"end-time-label\");\n  }\n\n  public get queryBtn() {\n    return I18nUtil.instant(\"query-btn\");\n  }\n}\n","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { ChgdrTreeNode } from '../chgdr-data-viewer/chgdr-tree-builder';\r\nimport { I18nUtil } from '../service/i18n-service';\r\n\r\n@Component({\r\n  selector: 'lib-chgdr-row-baseinfo-form',\r\n  templateUrl: './chgdr-row-baseinfo-form.component.html',\r\n  styleUrls: ['./chgdr-row-baseinfo-form.component.css']\r\n})\r\nexport class ChgdrRowBaseinfoFormComponent implements OnInit {\r\n  @Input()\r\n  chgdrTreeNode: ChgdrTreeNode;\r\n  @Input() showDataId: boolean = false;\r\n\r\n  constructor(private injector: Injector) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public get technologyPrimaryKeyLabel() {\r\n    return I18nUtil.instant(\"technology-primary-key-label\");\r\n  }\r\n  public get changeUserLabel() {\r\n    return I18nUtil.instant(\"change-user-label\");\r\n  }\r\n  public get changeTimeLabel() {\r\n    return I18nUtil.instant(\"change-time-label\");\r\n  }\r\n  public get changeOperateType() {\r\n    return I18nUtil.instant(\"change-operate-type\");\r\n  }\r\n}\r\n","import { Component, Injector, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { ChangeColumnItem, ChgdrDataRowNode } from '../chgdr-data-viewer/chgdr-data';\r\nimport { ChgdrTreeNode } from '../chgdr-data-viewer/chgdr-tree-builder';\r\nimport { OperateType } from '../model/operate-type';\r\nimport { I18nUtil } from '../service/i18n-service';\r\n\r\n@Component({\r\n  selector: 'lib-chgdr-row-grid',\r\n  templateUrl: './chgdr-row-grid.component.html',\r\n  styleUrls: ['./chgdr-row-grid.component.css']\r\n})\r\nexport class ChgdrRowGridComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  chgdrTreeNode: ChgdrTreeNode;\r\n  @ViewChild(\"chgdrRowGrid\")\r\n  dataGrid: DatagridComponent;\r\n\r\n  columns: any[];\r\n  data: ChangeColumnItem[];\r\n\r\n  constructor(private injector: Injector) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.columns = [\r\n      { field: 'fieldName', width: 130, title: this.fieldNameColumnTitle },\r\n      { field: 'oldValue', width: 130, title: this.oldValueColumnTitle, showTips: true },\r\n      { field: 'newValue', width: 130, title: this.newValueColumnTitle, showTips: true }\r\n    ];\r\n    let oldValueField = this.columns[1];\r\n    let newValueField = this.columns[2];\r\n\r\n    if (!!this.chgdrTreeNode) {\r\n      //根据初始的变更类型更改显示列的信息\r\n      //此处不能直接调用DataGrid组件的方法更改，因为此处尚未创建DataGrid\r\n      let type: OperateType = this.chgdrTreeNode.chgdrRow.operateType;\r\n      if (type == OperateType.ADD) {\r\n        oldValueField.visible = false;\r\n        newValueField.title = this.valueColumnTitle;\r\n      } else if (type == OperateType.DELETE) {\r\n        newValueField.visible = false;\r\n        oldValueField.title = this.valueColumnTitle;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    //原来变更行类型\r\n    let oldType: OperateType;\r\n    if (!changes.chgdrTreeNode) {\r\n      oldType = null;\r\n    } else if (!changes.chgdrTreeNode.previousValue) {\r\n      oldType = null;\r\n    } else {\r\n      oldType = changes.chgdrTreeNode.previousValue.chgdrRow.operateType;\r\n    }\r\n\r\n    //现在变更行类型\r\n    let newType: OperateType;\r\n    if (!changes.chgdrTreeNode) {\r\n      newType = null;\r\n    } else if (!changes.chgdrTreeNode.currentValue) {\r\n      newType = null;\r\n    } else {\r\n      newType = changes.chgdrTreeNode.currentValue.chgdrRow.operateType;\r\n    }\r\n\r\n    if (oldType == newType || !this.dataGrid || !this.dataGrid.columns) {\r\n      //如果新老类型一致(或DataGrid尚未创建)，则不变动\r\n      //do nothing\r\n    } else if (newType == OperateType.ADD) {\r\n      this.dataGrid.showColumn(\"newValue\");\r\n      this.dataGrid.hideColumn(\"oldValue\");\r\n      this.dataGrid.setColumnTitle(\"newValue\", this.valueColumnTitle);\r\n    } else if (newType == OperateType.DELETE) {\r\n      this.dataGrid.showColumn(\"oldValue\");\r\n      this.dataGrid.hideColumn(\"newValue\");\r\n      this.dataGrid.setColumnTitle(\"oldValue\", this.valueColumnTitle);\r\n    } else {\r\n      this.dataGrid.showColumn(\"oldValue\");\r\n      this.dataGrid.showColumn(\"newValue\");\r\n      this.dataGrid.setColumnTitle(\"oldValue\", this.oldValueColumnTitle);\r\n      this.dataGrid.setColumnTitle(\"newValue\", this.newValueColumnTitle);\r\n    }\r\n\r\n    if (changes.chgdrTreeNode && changes.chgdrTreeNode.currentValue) {\r\n      this.data = changes.chgdrTreeNode.currentValue.chgdrRow.changes;\r\n    }\r\n  }\r\n\r\n  private get fieldNameColumnTitle() {\r\n    return I18nUtil.instant(\"field-name-column-title\");\r\n  }\r\n\r\n  private get valueColumnTitle() {\r\n    return I18nUtil.instant(\"value-column-title\");\r\n  }\r\n\r\n  private get oldValueColumnTitle() {\r\n    return I18nUtil.instant(\"old-value-column-title\");\r\n  }\r\n\r\n  private get newValueColumnTitle() {\r\n    return I18nUtil.instant(\"new-value-column-title\");\r\n  }\r\n\r\n}\r\n","import { Component, Injector, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BeforeShowChangeDetailEvent } from '../model/chgdr-ui-config';\n\n@Component({\n  selector: 'lib-chgdr-list-dialog-content',\n  templateUrl: './chgdr-list-dialog-content.component.html',\n  styleUrls: ['./chgdr-list-dialog-content.component.css']\n})\nexport class ChgdrListDialogContentComponent implements OnInit {\n  @Input()\n  /** 业务实体ID */\n  entityId: string;\n\n  @Input()\n  /** 数据ID */\n  dataId: string;\n\n  @Input()\n  /** 打开详情前的回调 */\n  beforeShowChangeDetail: (event: BeforeShowChangeDetailEvent) => Observable<boolean>;\n\n  constructor(private injector: Injector) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Observable } from \"rxjs\";\r\nimport { ChangeDataHeader } from \"./change-data-header\";\r\n\r\nexport class BeforeShowChangeDetailEvent {\r\n  /** 业务变更日志抬头信息 */\r\n  header: ChangeDataHeader;\r\n}\r\n\r\n/**\r\n * 对于业务变更日志对话框的设置\r\n */\r\nexport class ChgdrListDialogConfig {\r\n  /** 业务实体ID */\r\n  entityId: string;\r\n  /** 数据ID */\r\n  dataId: string;\r\n  /** 显示变更详情前的回调，返回false表示不使用内置界面显示变更详情。 */\r\n  beforeShowChangeDetail: (event: BeforeShowChangeDetailEvent) => Observable<boolean>\r\n}","import { Injectable, ComponentFactoryResolver, Injector } from '@angular/core';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { BsModalService, ModalOptions } from '@farris/ui-modal';\r\nimport { of } from 'rxjs';\r\nimport { ChgdrListDialogContentComponent } from '../chgdr-list-dialog-content/chgdr-list-dialog-content.component';\r\nimport { ChgdrListDialogConfig } from '../model/chgdr-ui-config';\r\nimport { I18nUtil } from './i18n-service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ChgdrListUiService {\r\n\r\n    constructor(\r\n        private resolver: ComponentFactoryResolver,\r\n        private injector: Injector,\r\n        private modalService: BsModalService,\r\n        private messagerService: MessagerService\r\n    ) {\r\n    }\r\n\r\n    showDialog(entityId: string, dataId: string)\r\n    showDialog(config: ChgdrListDialogConfig)\r\n    showDialog(arg1: string | ChgdrListDialogConfig, dataId?: string) {\r\n        if (!arg1) {\r\n            console.error(\"创建业务变更日志列表组件失败，业务实体不能为空，请检查\", arg1, dataId);\r\n            throw new Error(\"创建业务变更日志列表组件失败，业务实体不能为空，请检查\");\r\n        }\r\n        if (arg1 instanceof String || typeof arg1 == \"string\") {\r\n            let config = new ChgdrListDialogConfig();\r\n            config.entityId = arg1.toString();\r\n            config.dataId = dataId;\r\n            this.create(config);\r\n        } else {\r\n            this.create(arg1);\r\n        }\r\n    }\r\n\r\n    private create(config: ChgdrListDialogConfig) {\r\n        if (config.entityId == null) {\r\n            console.error(\"创建业务变更日志列表组件失败，业务实体不能为空，请检查\", config);\r\n            throw new Error(\"创建业务变更日志列表组件失败，业务实体不能为空，请检查\");\r\n        }\r\n\r\n        let fac = this.resolver.resolveComponentFactory(ChgdrListDialogContentComponent);\r\n        let cmpRef = fac.create(this.injector);\r\n        let modalConfig: ModalOptions = {\r\n            title: I18nUtil.instant(\"chgdr-list-dialog-title\"),\r\n            width: 1000,\r\n            height: 550,\r\n            resizable: true,\r\n            showButtons: false,\r\n            showMaxButton: true,\r\n            beforeOpen: () => {\r\n                return of(true);\r\n            }\r\n        }\r\n\r\n        cmpRef.instance.entityId = config.entityId;\r\n        cmpRef.instance.dataId = config.dataId;\r\n        cmpRef.instance.beforeShowChangeDetail = config.beforeShowChangeDetail;\r\n        let dialog = this.modalService.show(cmpRef, modalConfig);\r\n    }\r\n\r\n}\r\n","import { ChangeDetectorRef, Component, EventEmitter, HostBinding, Injector, Input, OnInit, Output, SimpleChanges, TemplateRef, ViewChild } from '@angular/core';\r\nimport { DataColumn } from '@farris/ui-common/column';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { ChgdrService } from '../service/chgdr.service';\r\nimport { ChangeDataHeader } from '../model/change-data-header';\r\nimport { ChangeDataQueryResult } from '../model/change-data-query-result';\r\nimport { OperateType } from '../model/operate-type';\r\nimport { ErrorUtil } from '../util/error.util';\r\nimport { ChgLogConfigField } from '../model/chgdr-config-field';\r\nimport { tap } from 'rxjs/operators';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport { MapUtil } from '../util/map.util';\r\nimport { ChgdrMetadataService } from '../service/chgdr-metadata.service';\r\nimport { GSPBusinessEntity } from '@gsp-bef/gsp-be-metadata';\r\nimport { GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';\r\nimport { GSPCommonElement } from '@gsp-bef/gsp-cm-metadata';\r\nimport { ChgdrInnerService } from '../service/chgdr-inner.service';\r\nimport { ChgdrConfigHandler } from '../service/chgdr-config-handler';\r\nimport { I18nUtil } from '../service/i18n-service';\r\nimport { BeforeShowChangeDetailEvent } from '../model/chgdr-ui-config';\r\n\r\n@Component({\r\n  selector: 'lib-chgdr-header-datagrid',\r\n  templateUrl: './chgdr-header-datagrid.component.html',\r\n  styleUrls: ['./chgdr-header-datagrid.component.css']\r\n})\r\nexport class ChgdrHeaderDatagridComponent implements OnInit {\r\n  @HostBinding('class.f-utils-fill') baseCls = true;\r\n  @Input() chgdrs: ChangeDataQueryResult;\r\n  @Input() showDataId: boolean = true;\r\n\r\n  @Input()\r\n  /** 打开详情前的回调 */\r\n  beforeShowChangeDetail: (event: BeforeShowChangeDetailEvent) => Observable<boolean>;\r\n\r\n  headers: ChangeDataHeader[] = [];\r\n  dataCodeFields: ChgLogConfigField[] = [];\r\n  private chgdrConfigHandler: ChgdrConfigHandler;\r\n  @Output()\r\n  pageChanged: EventEmitter<number> = new EventEmitter();\r\n  @Output()\r\n  pageSizeChanged: EventEmitter<number> = new EventEmitter();\r\n\r\n  // 获取定义的单元格模板\r\n  @ViewChild('opCell') opCell: TemplateRef<any>;\r\n  @ViewChild(\"chgdrInfoDialog\")\r\n  chgdrInfoDialog: DialogComponent;\r\n\r\n  columns: any[];\r\n\r\n  currentChgdrData: ChangeDataHeader;\r\n  I18nUtil: I18nUtil;\r\n\r\n  constructor(private chgdrService: ChgdrService,\r\n    private messageService: MessagerService,\r\n    private notifyService: NotifyService,\r\n    private ref: ChangeDetectorRef,\r\n    private chgdrInnerService: ChgdrInnerService,\r\n    private injector: Injector) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.resetColumnAndData(null, []);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!changes.chgdrs) {\r\n      //如果chgdrs没有更新，则直接返回\r\n      return;\r\n    }\r\n\r\n    let prevEntityId = this.getEntityId(changes.chgdrs.previousValue);\r\n    let curEntityId = this.getEntityId(changes.chgdrs.currentValue);\r\n    let requests = [\r\n      this.updateChgdrConfigHandler(curEntityId),\r\n      this.updateDataCodeFields(prevEntityId, curEntityId)\r\n    ]\r\n    forkJoin(requests).subscribe(data => {\r\n      let chgdrDatas: ChangeDataQueryResult = changes.chgdrs.currentValue;\r\n      if (!!chgdrDatas) {\r\n        this.formatHeaders(chgdrDatas.headers);\r\n      }\r\n\r\n      //如果业务实体变更，则重置列信息\r\n      if (curEntityId != null && curEntityId != prevEntityId) {\r\n        this.resetColumnAndData(curEntityId, chgdrDatas.headers);\r\n      } else {\r\n        this.headers = chgdrDatas.headers;\r\n      }\r\n    }, err => {\r\n      console.error(\"获取BE【\" + curEntityId + \"】的配置的业务变更日志的业务编号失败：\", err);\r\n      this.messageService.error(I18nUtil.instant(\"get-business-code-config-error\", { errorMessage: ErrorUtil.getErrorMessage(err) }));\r\n    });\r\n  }\r\n\r\n  /** 更新业务实体元数据 */\r\n  private updateChgdrConfigHandler(entityId: string) {\r\n    if (entityId) {\r\n      return this.chgdrInnerService.getChgdrConfigHandler(entityId).pipe(tap(data => this.chgdrConfigHandler = data));\r\n    } else {\r\n      return of(this.chgdrConfigHandler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 更新dataCodeField数据\r\n   * @param prevEntityId 原BeId\r\n   * @param curEntityId 当前BeId\r\n   */\r\n  updateDataCodeFields(prevEntityId: string, curEntityId: string) {\r\n    if (curEntityId != null && curEntityId != prevEntityId) {\r\n      //只有发生变更时才更新\r\n      return this.chgdrService.getRootEntityDataCodeFields(curEntityId).pipe(tap(data => this.dataCodeFields = data || []));\r\n    } else {\r\n      //否则直接返回当前值\r\n      return of(this.dataCodeFields);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 格式化headers。主要是解析其中的dataCode，将其转为Object\r\n   * 使用dataCodeObj存放dataCode解析后的结果\r\n   * dataCodeObj属性在ChangeDataHeader中不存在，此处通过强制赋值使用，并且只限于该处使用。\r\n   */\r\n  private formatHeaders(headers: ChangeDataHeader[]) {\r\n    if (!headers) {\r\n      return;\r\n    }\r\n    headers.forEach(header => {\r\n      let dataCodeObj: any;\r\n      this.formatDataCodeMap(header.dataCode);\r\n      if (header.dataCode && header.dataCode.size == 1 && header.dataCode.has(\"_$dataCode\")) {\r\n        //兼容老数据\r\n        //老数据dataCode为自由文本\r\n        dataCodeObj = {};\r\n        if (this.dataCodeFields && this.dataCodeFields.length > 0) {\r\n          dataCodeObj[this.dataCodeFields[0].fieldLabelId] = header.dataCode.get(\"_$dataCode\");\r\n        }\r\n      } else {\r\n        dataCodeObj = MapUtil.convertMapToObject(header.dataCode);\r\n      }\r\n      (<any>header).dataCodeObj = dataCodeObj;\r\n    })\r\n  }\r\n\r\n  /** 格式化业务主键Map */\r\n  private formatDataCodeMap(dataCode: Map<string, string>): void {\r\n    if (!dataCode || !this.chgdrConfigHandler) {\r\n      return;\r\n    }\r\n    Array.from(dataCode.keys()).forEach(fieldLabelId => {\r\n      let value = dataCode.get(fieldLabelId);\r\n      let formatedValue = this.chgdrConfigHandler.formatMainObjectFieldValue(value, fieldLabelId);\r\n      dataCode.set(fieldLabelId, formatedValue);\r\n    })\r\n  }\r\n\r\n  private getEntityId(chgdrs: ChangeDataQueryResult): string {\r\n    if (!chgdrs || !chgdrs.headers || chgdrs.headers.length == 0) {\r\n      return null;\r\n    } else {\r\n      return chgdrs.headers[0].entityId;\r\n    }\r\n  }\r\n\r\n  private resetColumnAndData(entityId: string, headers: ChangeDataHeader[]) {\r\n    let columns: any[] = [\r\n      { field: 'userName', width: 130, title: I18nUtil.instant(\"user-name-column-title\") },\r\n      { field: 'changeTime', width: 130, title: I18nUtil.instant(\"change-time-column-title\"), formatter: { type: 'datetime', options: { format: I18nUtil.instant(\"change-time-column-format\") } } },\r\n      { field: 'operateType.name', width: 60, title: I18nUtil.instant(\"operation-type-title\") },\r\n      { field: 'dataId', width: 130, title: I18nUtil.instant(\"tech-pk-column-title\"), visible: this.showDataId }];\r\n    //{field: 'dataCode', width: 130, title: '业务编号'},\r\n    // {field: 'reason', width: 130, title: '变更原因'},\r\n    this.dataCodeFields.forEach((field) => {\r\n      let column: DataColumn = {\r\n        field: \"dataCodeObj.\" + field.fieldLabelId,\r\n        title: field.fieldName,\r\n        width: 130\r\n      };\r\n      columns.push(column);\r\n    })\r\n    let opColumn = { title: I18nUtil.instant(\"operation-column-title\"), width: 130, template: this.opCell, halign: 'center', align: 'center' };\r\n    columns.push(opColumn);\r\n\r\n    this.columns = columns;\r\n    this.headers = headers;\r\n  }\r\n\r\n  onPageChanged($event) {\r\n    this.pageChanged.emit($event);\r\n  }\r\n\r\n  onPageSizeChanged($event) {\r\n    this.pageSizeChanged.emit($event);\r\n  }\r\n\r\n  clickShowChangeDetail(ctx) {\r\n    let header: ChangeDataHeader = ctx.rowData;\r\n    if (!header) {\r\n      return;\r\n    }\r\n    if (!this.beforeShowChangeDetail) {\r\n      //如果没有打开详情前回调，则按照默认方式打开\r\n      this.showChangeDetail(header);\r\n    } else {\r\n      let event: BeforeShowChangeDetailEvent = new BeforeShowChangeDetailEvent();\r\n      event.header = header;\r\n      this.beforeShowChangeDetail(event).subscribe((isShow) => {\r\n        if (isShow) {\r\n          this.showChangeDetail(header);\r\n        }\r\n      }, (err) => {\r\n        console.error(\"执行业务变更详情打开前事件报错：\", err);\r\n        this.messageService.error(\"执行业务变更详情打开前事件报错：\" + ErrorUtil.getErrorMessage(err));\r\n      })\r\n    }\r\n  }\r\n\r\n  private showChangeDetail(header: ChangeDataHeader) {\r\n    this.chgdrService.getChangeData(header.id, header.changeTime).subscribe(data => {\r\n      if (!data) {\r\n        this.notifyService.error(I18nUtil.instant(\"can-not-found-change-record-by-id\", { headerId: header.id }));\r\n      } else {\r\n        this.currentChgdrData = data;\r\n        this.chgdrInfoDialog.show();\r\n      }\r\n    }, error => {\r\n      console.error(\"查询业务变更日志出错\", error);\r\n      this.messageService.error(I18nUtil.instant(\"query-change-data-record-error\", { errorMessage: ErrorUtil.getErrorMessage(error) }));\r\n    })\r\n  }\r\n\r\n  public get showChangeDetailBtn() {\r\n    return I18nUtil.instant(\"show-change-detail-btn\");\r\n  }\r\n\r\n  public get changeDetailDialogTitle() {\r\n    return I18nUtil.instant(\"change-detail-dialog-title\");\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { SplitterModule } from \"@farris/ui-splitter\";\r\nimport { AngularDraggableModule } from '@farris/ui-draggable';\r\nimport { DatagridModule } from \"@farris/ui-datagrid\";\r\nimport { TreeTableModule } from '@farris/ui-treetable';\r\nimport { FarrisSectionModule } from \"@farris/ui-section\";\r\nimport { MessagerModule, MessagerService } from '@farris/ui-messager';\r\nimport { NotifyModule, NotifyService } from '@farris/ui-notify';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\n\r\nimport { HttpService, SessionService, CacheService } from '@ecp-caf/caf-common';\r\nimport { MetadataRTSelectModule, SelectMetadataRTComponent, GSPMetadataRTServiceModule } from '@gsp-lcm/metadatart-selector';\r\n\r\nimport { ChgdrDataViewerComponent } from './chgdr-data-viewer/chgdr-data-viewer.component';\r\n\r\nimport zh from '@angular/common/locales/zh';\r\nimport { ChgdrListComponent } from './chgdr-list/chgdr-list.component';\r\nimport { ChgdrRowBaseinfoFormComponent } from './chgdr-row-baseinfo-form/chgdr-row-baseinfo-form.component';\r\nimport { ChgdrRowGridComponent } from './chgdr-row-grid/chgdr-row-grid.component';\r\nimport { ChgdrListUiService } from './service/chgdr-list-ui.service';\r\nimport { ChgdrListDialogContentComponent } from './chgdr-list-dialog-content/chgdr-list-dialog-content.component';\r\nimport { ChgdrHeaderDatagridComponent } from './chgdr-header-datagrid/chgdr-header-datagrid.component';\r\nimport { ChgdrMetadataService } from './service/chgdr-metadata.service';\r\nimport { ChgdrConfigService } from './service/chgdr-config.service';\r\nimport { ChgdrInnerService } from './service/chgdr-inner.service';\r\nimport { ChgdrService } from './service/chgdr.service';\r\nimport { I18nService } from './service/i18n-service';\r\nregisterLocaleData(zh);\r\n\r\n@NgModule({\r\n  declarations: [ChgdrDataViewerComponent, ChgdrListComponent, ChgdrRowBaseinfoFormComponent, ChgdrRowGridComponent, ChgdrListDialogContentComponent, ChgdrHeaderDatagridComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    TranslateModule.forRoot(),\r\n    SplitterModule,\r\n    AngularDraggableModule,\r\n    DatagridModule,\r\n    TreeTableModule,\r\n    FarrisSectionModule,\r\n    MessagerModule.forRoot(),\r\n    NotifyModule,\r\n    FarrisDialogModule,\r\n    FarrisDatePickerModule,\r\n    MetadataRTSelectModule,\r\n    GSPMetadataRTServiceModule.forRoot('')\r\n  ],\r\n  providers: [\r\n    MessagerService,\r\n    NotifyService,\r\n    HttpService,\r\n    SessionService,\r\n    CacheService,\r\n    ChgdrListUiService,\r\n    ChgdrMetadataService,\r\n    ChgdrConfigService,\r\n    ChgdrInnerService,\r\n    ChgdrService,\r\n    I18nService\r\n  ],\r\n  entryComponents: [\r\n    ChgdrDataViewerComponent,\r\n    ChgdrListComponent,\r\n    ChgdrListDialogContentComponent\r\n  ],\r\n  exports: [ChgdrDataViewerComponent, ChgdrListComponent, ChgdrHeaderDatagridComponent]\r\n})\r\nexport class ChgdrModule { }\r\n","import { OperateType } from './operate-type';\r\n\r\nexport class ChangeDataRow {\r\n    id: string;\r\n    /**\r\n     * header内码\r\n     */\r\n    headerId: string;\r\n    /**\r\n     * 实体编号\r\n     */\r\n    entityCode: string;\r\n    /**\r\n     * 数据主键\r\n     */\r\n    dataId: string;\r\n    /**\r\n     * 数据编号\r\n     */\r\n    dataCode: Map<string, string>;\r\n    /**\r\n     * 操作类型\r\n     */\r\n    operateType: OperateType;\r\n    /**\r\n     * 旧内容\r\n     */\r\n    oldContent: Map<string, string>;\r\n    /**\r\n     * 新内容\r\n     */\r\n    newContent: Map<string, string>;\r\n    /**\r\n     * 父数据主键\r\n     */\r\n    parentDataId: string;\r\n}","/**\r\n * 业务变更日志详情数据查询参数\r\n */\r\nexport class ChgdrItemQueryParam {\r\n  /**\r\n   * 主业务实体变更Header id\r\n   */\r\n  public id: string;\r\n  /**\r\n   * 变更时间\r\n   */\r\n  public changeTime: Date;\r\n  /**\r\n   * 关联的其他业务实体业务变更日志列表。key为实体ID，value为对应实体的数据主键\r\n   */\r\n  public dataIds: Map<string, string[]>;\r\n}"],"names":["map","ServerIP","chgdrUrl"],"mappings":"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"}
