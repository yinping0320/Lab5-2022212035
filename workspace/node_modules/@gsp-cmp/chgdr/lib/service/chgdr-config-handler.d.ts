import { GSPBusinessEntity } from '@gsp-bef/gsp-be-metadata';
import { IGSPCommonElement } from '@gsp-bef/gsp-cm-metadata';
import { ChgLogConfigEntity } from '../model/chgdr-config-entity';
export declare class ChgdrConfigHandler {
    private be;
    private entityCodeMap;
    private entityFieldMap;
    private entityFieldShowOrderMap;
    private entityFieldParentMap;
    private entityConfigs;
    private entityFieldConfigMap;
    constructor(be: GSPBusinessEntity, entityConfigs: ChgLogConfigEntity[]);
    /** 更新显示顺序号 */
    private updateShowIndex;
    /** 更新配置信息的相关数据 */
    private updateEntityConfigs;
    private updateEntityMap;
    /** 更新BE节点的指定字段信息，如果该字段是关联字段，同时更新其带出字段 */
    private updateEntityFieldMap;
    sort(items: any[], entityCode: string, fieldLabelIdFunc: (item: any) => string): void;
    /** 格式化主对象节点中字段的值 */
    formatMainObjectFieldValue(originalValue: string, fieldLabelId: string): string;
    /** 格式化字段值 */
    formatFieldValue(originalValue: string, entityCode: string, fieldLabelId: string): string;
    /** JavaScript中科学计数法转化为数值字符串形式。
     * 以下两种情况，JavaScript 会自动将数值转为科学计数法表示
     * (1) 小于1且小数点后面带有6个0以上的浮点数值：
     * (2) 整数位数字多于21位：
     * 首先看看整数位数字多于21位的情况，其实这个一般不会碰到，整数位数字多于21位已经超出了 JavaScript 精确整数范围。
     * 这个方法用于处理小数问题
     * from：https://www.cnblogs.com/xianfengzhike/p/9939029.html */
    private toNonExponential;
    getBeName(): string;
    getMainObjectCode(): string;
    getElement(entityCode: string, fieldLabelId: string): IGSPCommonElement;
    getParentElement(entityCode: string, fieldLabelId: string): IGSPCommonElement;
    getEntityNameOrDefault(entityCode: string): string;
    getEntityFieldNameOrDefault(entityCode: string, fieldLabelId: string): string;
}
