/**
 * @fileoverview added by tsickle
 * Generated from: lib/chgdr-row-baseinfo-form/chgdr-row-baseinfo-form.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Injector, Input } from '@angular/core';
import { ChgdrTreeNode } from '../chgdr-data-viewer/chgdr-tree-builder';
import { I18nUtil } from '../service/i18n-service';
var ChgdrRowBaseinfoFormComponent = /** @class */ (function () {
    function ChgdrRowBaseinfoFormComponent(injector) {
        this.injector = injector;
        this.showDataId = false;
    }
    /**
     * @return {?}
     */
    ChgdrRowBaseinfoFormComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    Object.defineProperty(ChgdrRowBaseinfoFormComponent.prototype, "technologyPrimaryKeyLabel", {
        get: /**
         * @return {?}
         */
        function () {
            return I18nUtil.instant("technology-primary-key-label");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChgdrRowBaseinfoFormComponent.prototype, "changeUserLabel", {
        get: /**
         * @return {?}
         */
        function () {
            return I18nUtil.instant("change-user-label");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChgdrRowBaseinfoFormComponent.prototype, "changeTimeLabel", {
        get: /**
         * @return {?}
         */
        function () {
            return I18nUtil.instant("change-time-label");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChgdrRowBaseinfoFormComponent.prototype, "changeOperateType", {
        get: /**
         * @return {?}
         */
        function () {
            return I18nUtil.instant("change-operate-type");
        },
        enumerable: true,
        configurable: true
    });
    ChgdrRowBaseinfoFormComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-chgdr-row-baseinfo-form',
                    template: "<div *ngIf=\"!!chgdrTreeNode\" class=\"farris-form farris-form-controls-inline\">\r\n  <form class=\"f-section-formgroup\">\r\n    <div class=\"f-section-formgroup-inputs\">\r\n      <div class=\"col-12 row\">\r\n\r\n        <div class=\"farris-group-wrap col-6\" *ngIf=\"showDataId\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">{{technologyPrimaryKeyLabel}}</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" [ngModel]=\"chgdrTreeNode.chgdrRow.dataId\" name=\"dataId\"\r\n                [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"farris-group-wrap col-6\" *ngFor=\"let field of chgdrTreeNode.chgdrRow.dataCodes\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">{{field.fieldName}}</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" [ngModel]=\"field.fieldValue\" name=\"dataCode-{{field.fieldName}}\"\r\n                [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"chgdrTreeNode.isRoot\" class=\"farris-group-wrap col-6\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">{{changeUserLabel}}</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" [ngModel]=\"chgdrTreeNode.chgdrData.userName\" name=\"userName\"\r\n                [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"chgdrTreeNode.isRoot\" class=\"farris-group-wrap col-6\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">{{changeTimeLabel}}</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" value=\"{{chgdrTreeNode.chgdrData.changeTime | date:'yyyy-MM-dd HH:mm:ss'}}\" name=\"changeTime\"\r\n                [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"farris-group-wrap col-6\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">{{changeOperateType}}</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" [ngModel]=\"chgdrTreeNode.chgdrRow.operateType.name\" name=\"operateType\"\r\n              [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ChgdrRowBaseinfoFormComponent.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    ChgdrRowBaseinfoFormComponent.propDecorators = {
        chgdrTreeNode: [{ type: Input }],
        showDataId: [{ type: Input }]
    };
    return ChgdrRowBaseinfoFormComponent;
}());
export { ChgdrRowBaseinfoFormComponent };
if (false) {
    /** @type {?} */
    ChgdrRowBaseinfoFormComponent.prototype.chgdrTreeNode;
    /** @type {?} */
    ChgdrRowBaseinfoFormComponent.prototype.showDataId;
    /**
     * @type {?}
     * @private
     */
    ChgdrRowBaseinfoFormComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hnZHItcm93LWJhc2VpbmZvLWZvcm0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1jbXAvY2hnZHIvIiwic291cmNlcyI6WyJsaWIvY2hnZHItcm93LWJhc2VpbmZvLWZvcm0vY2hnZHItcm93LWJhc2VpbmZvLWZvcm0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUN4RSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFbkQ7SUFVRSx1Q0FBb0IsUUFBa0I7UUFBbEIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUY3QixlQUFVLEdBQVksS0FBSyxDQUFDO0lBR3JDLENBQUM7Ozs7SUFFRCxnREFBUTs7O0lBQVI7SUFDQSxDQUFDO0lBRUQsc0JBQVcsb0VBQXlCOzs7O1FBQXBDO1lBQ0UsT0FBTyxRQUFRLENBQUMsT0FBTyxDQUFDLDhCQUE4QixDQUFDLENBQUM7UUFDMUQsQ0FBQzs7O09BQUE7SUFDRCxzQkFBVywwREFBZTs7OztRQUExQjtZQUNFLE9BQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1FBQy9DLENBQUM7OztPQUFBO0lBQ0Qsc0JBQVcsMERBQWU7Ozs7UUFBMUI7WUFDRSxPQUFPLFFBQVEsQ0FBQyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUMvQyxDQUFDOzs7T0FBQTtJQUNELHNCQUFXLDREQUFpQjs7OztRQUE1QjtZQUNFLE9BQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1FBQ2pELENBQUM7OztPQUFBOztnQkEzQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSw2QkFBNkI7b0JBQ3ZDLDg3R0FBdUQ7O2lCQUV4RDs7OztnQkFSbUIsUUFBUTs7O2dDQVV6QixLQUFLOzZCQUVMLEtBQUs7O0lBb0JSLG9DQUFDO0NBQUEsQUE1QkQsSUE0QkM7U0F2QlksNkJBQTZCOzs7SUFDeEMsc0RBQzZCOztJQUM3QixtREFBcUM7Ozs7O0lBRXpCLGlEQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0b3IsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ2hnZHJUcmVlTm9kZSB9IGZyb20gJy4uL2NoZ2RyLWRhdGEtdmlld2VyL2NoZ2RyLXRyZWUtYnVpbGRlcic7XHJcbmltcG9ydCB7IEkxOG5VdGlsIH0gZnJvbSAnLi4vc2VydmljZS9pMThuLXNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdsaWItY2hnZHItcm93LWJhc2VpbmZvLWZvcm0nLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9jaGdkci1yb3ctYmFzZWluZm8tZm9ybS5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vY2hnZHItcm93LWJhc2VpbmZvLWZvcm0uY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDaGdkclJvd0Jhc2VpbmZvRm9ybUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQElucHV0KClcclxuICBjaGdkclRyZWVOb2RlOiBDaGdkclRyZWVOb2RlO1xyXG4gIEBJbnB1dCgpIHNob3dEYXRhSWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IpIHtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCB0ZWNobm9sb2d5UHJpbWFyeUtleUxhYmVsKCkge1xyXG4gICAgcmV0dXJuIEkxOG5VdGlsLmluc3RhbnQoXCJ0ZWNobm9sb2d5LXByaW1hcnkta2V5LWxhYmVsXCIpO1xyXG4gIH1cclxuICBwdWJsaWMgZ2V0IGNoYW5nZVVzZXJMYWJlbCgpIHtcclxuICAgIHJldHVybiBJMThuVXRpbC5pbnN0YW50KFwiY2hhbmdlLXVzZXItbGFiZWxcIik7XHJcbiAgfVxyXG4gIHB1YmxpYyBnZXQgY2hhbmdlVGltZUxhYmVsKCkge1xyXG4gICAgcmV0dXJuIEkxOG5VdGlsLmluc3RhbnQoXCJjaGFuZ2UtdGltZS1sYWJlbFwiKTtcclxuICB9XHJcbiAgcHVibGljIGdldCBjaGFuZ2VPcGVyYXRlVHlwZSgpIHtcclxuICAgIHJldHVybiBJMThuVXRpbC5pbnN0YW50KFwiY2hhbmdlLW9wZXJhdGUtdHlwZVwiKTtcclxuICB9XHJcbn1cclxuIl19