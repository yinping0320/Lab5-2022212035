/**
 * @fileoverview added by tsickle
 * Generated from: lib/chgdr.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule, registerLocaleData } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { TranslateModule } from '@ngx-translate/core';
import { SplitterModule } from "@farris/ui-splitter";
import { AngularDraggableModule } from '@farris/ui-draggable';
import { DatagridModule } from "@farris/ui-datagrid";
import { TreeTableModule } from '@farris/ui-treetable';
import { FarrisSectionModule } from "@farris/ui-section";
import { MessagerModule, MessagerService } from '@farris/ui-messager';
import { NotifyModule, NotifyService } from '@farris/ui-notify';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { FarrisDatePickerModule } from '@farris/ui-datepicker';
import { HttpService, SessionService, CacheService } from '@ecp-caf/caf-common';
import { MetadataRTSelectModule, GSPMetadataRTServiceModule } from '@gsp-lcm/metadatart-selector';
import { ChgdrDataViewerComponent } from './chgdr-data-viewer/chgdr-data-viewer.component';
import zh from '@angular/common/locales/zh';
import { ChgdrListComponent } from './chgdr-list/chgdr-list.component';
import { ChgdrRowBaseinfoFormComponent } from './chgdr-row-baseinfo-form/chgdr-row-baseinfo-form.component';
import { ChgdrRowGridComponent } from './chgdr-row-grid/chgdr-row-grid.component';
import { ChgdrListUiService } from './service/chgdr-list-ui.service';
import { ChgdrListDialogContentComponent } from './chgdr-list-dialog-content/chgdr-list-dialog-content.component';
import { ChgdrHeaderDatagridComponent } from './chgdr-header-datagrid/chgdr-header-datagrid.component';
import { ChgdrMetadataService } from './service/chgdr-metadata.service';
import { ChgdrConfigService } from './service/chgdr-config.service';
import { ChgdrInnerService } from './service/chgdr-inner.service';
import { ChgdrService } from './service/chgdr.service';
import { I18nService } from './service/i18n-service';
registerLocaleData(zh);
var ChgdrModule = /** @class */ (function () {
    function ChgdrModule() {
    }
    ChgdrModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [ChgdrDataViewerComponent, ChgdrListComponent, ChgdrRowBaseinfoFormComponent, ChgdrRowGridComponent, ChgdrListDialogContentComponent, ChgdrHeaderDatagridComponent],
                    imports: [
                        CommonModule,
                        FormsModule,
                        TranslateModule.forRoot(),
                        SplitterModule,
                        AngularDraggableModule,
                        DatagridModule,
                        TreeTableModule,
                        FarrisSectionModule,
                        MessagerModule.forRoot(),
                        NotifyModule,
                        FarrisDialogModule,
                        FarrisDatePickerModule,
                        MetadataRTSelectModule,
                        GSPMetadataRTServiceModule.forRoot('')
                    ],
                    providers: [
                        MessagerService,
                        NotifyService,
                        HttpService,
                        SessionService,
                        CacheService,
                        ChgdrListUiService,
                        ChgdrMetadataService,
                        ChgdrConfigService,
                        ChgdrInnerService,
                        ChgdrService,
                        I18nService
                    ],
                    entryComponents: [
                        ChgdrDataViewerComponent,
                        ChgdrListComponent,
                        ChgdrListDialogContentComponent
                    ],
                    exports: [ChgdrDataViewerComponent, ChgdrListComponent, ChgdrHeaderDatagridComponent]
                },] }
    ];
    return ChgdrModule;
}());
export { ChgdrModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hnZHIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1jbXAvY2hnZHIvIiwic291cmNlcyI6WyJsaWIvY2hnZHIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFbkUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTdDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUV0RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsY0FBYyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxZQUFZLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDaEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFL0QsT0FBTyxFQUFFLFdBQVcsRUFBRSxjQUFjLEVBQUUsWUFBWSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDaEYsT0FBTyxFQUFFLHNCQUFzQixFQUE2QiwwQkFBMEIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBRTdILE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBRTNGLE9BQU8sRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzVDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLDZEQUE2RCxDQUFDO0FBQzVHLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLGlFQUFpRSxDQUFDO0FBQ2xILE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLHlEQUF5RCxDQUFDO0FBQ3ZHLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDckQsa0JBQWtCLENBQUMsRUFBRSxDQUFDLENBQUM7QUFFdkI7SUFBQTtJQXNDMkIsQ0FBQzs7Z0JBdEMzQixRQUFRLFNBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsd0JBQXdCLEVBQUUsa0JBQWtCLEVBQUUsNkJBQTZCLEVBQUUscUJBQXFCLEVBQUUsK0JBQStCLEVBQUUsNEJBQTRCLENBQUM7b0JBQ2pMLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLFdBQVc7d0JBQ1gsZUFBZSxDQUFDLE9BQU8sRUFBRTt3QkFDekIsY0FBYzt3QkFDZCxzQkFBc0I7d0JBQ3RCLGNBQWM7d0JBQ2QsZUFBZTt3QkFDZixtQkFBbUI7d0JBQ25CLGNBQWMsQ0FBQyxPQUFPLEVBQUU7d0JBQ3hCLFlBQVk7d0JBQ1osa0JBQWtCO3dCQUNsQixzQkFBc0I7d0JBQ3RCLHNCQUFzQjt3QkFDdEIsMEJBQTBCLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztxQkFDdkM7b0JBQ0QsU0FBUyxFQUFFO3dCQUNULGVBQWU7d0JBQ2YsYUFBYTt3QkFDYixXQUFXO3dCQUNYLGNBQWM7d0JBQ2QsWUFBWTt3QkFDWixrQkFBa0I7d0JBQ2xCLG9CQUFvQjt3QkFDcEIsa0JBQWtCO3dCQUNsQixpQkFBaUI7d0JBQ2pCLFlBQVk7d0JBQ1osV0FBVztxQkFDWjtvQkFDRCxlQUFlLEVBQUU7d0JBQ2Ysd0JBQXdCO3dCQUN4QixrQkFBa0I7d0JBQ2xCLCtCQUErQjtxQkFDaEM7b0JBQ0QsT0FBTyxFQUFFLENBQUMsd0JBQXdCLEVBQUUsa0JBQWtCLEVBQUUsNEJBQTRCLENBQUM7aUJBQ3RGOztJQUMwQixrQkFBQztDQUFBLEFBdEM1QixJQXNDNEI7U0FBZixXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlLCByZWdpc3RlckxvY2FsZURhdGEgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuXHJcbmltcG9ydCB7IFRyYW5zbGF0ZU1vZHVsZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgU3BsaXR0ZXJNb2R1bGUgfSBmcm9tIFwiQGZhcnJpcy91aS1zcGxpdHRlclwiO1xyXG5pbXBvcnQgeyBBbmd1bGFyRHJhZ2dhYmxlTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kcmFnZ2FibGUnO1xyXG5pbXBvcnQgeyBEYXRhZ3JpZE1vZHVsZSB9IGZyb20gXCJAZmFycmlzL3VpLWRhdGFncmlkXCI7XHJcbmltcG9ydCB7IFRyZWVUYWJsZU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktdHJlZXRhYmxlJztcclxuaW1wb3J0IHsgRmFycmlzU2VjdGlvbk1vZHVsZSB9IGZyb20gXCJAZmFycmlzL3VpLXNlY3Rpb25cIjtcclxuaW1wb3J0IHsgTWVzc2FnZXJNb2R1bGUsIE1lc3NhZ2VyU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbWVzc2FnZXInO1xyXG5pbXBvcnQgeyBOb3RpZnlNb2R1bGUsIE5vdGlmeVNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLW5vdGlmeSc7XHJcbmltcG9ydCB7IEZhcnJpc0RpYWxvZ01vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZGlhbG9nJztcclxuaW1wb3J0IHsgRmFycmlzRGF0ZVBpY2tlck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZGF0ZXBpY2tlcic7XHJcblxyXG5pbXBvcnQgeyBIdHRwU2VydmljZSwgU2Vzc2lvblNlcnZpY2UsIENhY2hlU2VydmljZSB9IGZyb20gJ0BlY3AtY2FmL2NhZi1jb21tb24nO1xyXG5pbXBvcnQgeyBNZXRhZGF0YVJUU2VsZWN0TW9kdWxlLCBTZWxlY3RNZXRhZGF0YVJUQ29tcG9uZW50LCBHU1BNZXRhZGF0YVJUU2VydmljZU1vZHVsZSB9IGZyb20gJ0Bnc3AtbGNtL21ldGFkYXRhcnQtc2VsZWN0b3InO1xyXG5cclxuaW1wb3J0IHsgQ2hnZHJEYXRhVmlld2VyQ29tcG9uZW50IH0gZnJvbSAnLi9jaGdkci1kYXRhLXZpZXdlci9jaGdkci1kYXRhLXZpZXdlci5jb21wb25lbnQnO1xyXG5cclxuaW1wb3J0IHpoIGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL3poJztcclxuaW1wb3J0IHsgQ2hnZHJMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9jaGdkci1saXN0L2NoZ2RyLWxpc3QuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQ2hnZHJSb3dCYXNlaW5mb0Zvcm1Db21wb25lbnQgfSBmcm9tICcuL2NoZ2RyLXJvdy1iYXNlaW5mby1mb3JtL2NoZ2RyLXJvdy1iYXNlaW5mby1mb3JtLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IENoZ2RyUm93R3JpZENvbXBvbmVudCB9IGZyb20gJy4vY2hnZHItcm93LWdyaWQvY2hnZHItcm93LWdyaWQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQ2hnZHJMaXN0VWlTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlL2NoZ2RyLWxpc3QtdWkuc2VydmljZSc7XHJcbmltcG9ydCB7IENoZ2RyTGlzdERpYWxvZ0NvbnRlbnRDb21wb25lbnQgfSBmcm9tICcuL2NoZ2RyLWxpc3QtZGlhbG9nLWNvbnRlbnQvY2hnZHItbGlzdC1kaWFsb2ctY29udGVudC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBDaGdkckhlYWRlckRhdGFncmlkQ29tcG9uZW50IH0gZnJvbSAnLi9jaGdkci1oZWFkZXItZGF0YWdyaWQvY2hnZHItaGVhZGVyLWRhdGFncmlkLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IENoZ2RyTWV0YWRhdGFTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlL2NoZ2RyLW1ldGFkYXRhLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBDaGdkckNvbmZpZ1NlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2UvY2hnZHItY29uZmlnLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBDaGdkcklubmVyU2VydmljZSB9IGZyb20gJy4vc2VydmljZS9jaGdkci1pbm5lci5zZXJ2aWNlJztcclxuaW1wb3J0IHsgQ2hnZHJTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlL2NoZ2RyLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBJMThuU2VydmljZSB9IGZyb20gJy4vc2VydmljZS9pMThuLXNlcnZpY2UnO1xyXG5yZWdpc3RlckxvY2FsZURhdGEoemgpO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtDaGdkckRhdGFWaWV3ZXJDb21wb25lbnQsIENoZ2RyTGlzdENvbXBvbmVudCwgQ2hnZHJSb3dCYXNlaW5mb0Zvcm1Db21wb25lbnQsIENoZ2RyUm93R3JpZENvbXBvbmVudCwgQ2hnZHJMaXN0RGlhbG9nQ29udGVudENvbXBvbmVudCwgQ2hnZHJIZWFkZXJEYXRhZ3JpZENvbXBvbmVudF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBUcmFuc2xhdGVNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgU3BsaXR0ZXJNb2R1bGUsXHJcbiAgICBBbmd1bGFyRHJhZ2dhYmxlTW9kdWxlLFxyXG4gICAgRGF0YWdyaWRNb2R1bGUsXHJcbiAgICBUcmVlVGFibGVNb2R1bGUsXHJcbiAgICBGYXJyaXNTZWN0aW9uTW9kdWxlLFxyXG4gICAgTWVzc2FnZXJNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgTm90aWZ5TW9kdWxlLFxyXG4gICAgRmFycmlzRGlhbG9nTW9kdWxlLFxyXG4gICAgRmFycmlzRGF0ZVBpY2tlck1vZHVsZSxcclxuICAgIE1ldGFkYXRhUlRTZWxlY3RNb2R1bGUsXHJcbiAgICBHU1BNZXRhZGF0YVJUU2VydmljZU1vZHVsZS5mb3JSb290KCcnKVxyXG4gIF0sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICBNZXNzYWdlclNlcnZpY2UsXHJcbiAgICBOb3RpZnlTZXJ2aWNlLFxyXG4gICAgSHR0cFNlcnZpY2UsXHJcbiAgICBTZXNzaW9uU2VydmljZSxcclxuICAgIENhY2hlU2VydmljZSxcclxuICAgIENoZ2RyTGlzdFVpU2VydmljZSxcclxuICAgIENoZ2RyTWV0YWRhdGFTZXJ2aWNlLFxyXG4gICAgQ2hnZHJDb25maWdTZXJ2aWNlLFxyXG4gICAgQ2hnZHJJbm5lclNlcnZpY2UsXHJcbiAgICBDaGdkclNlcnZpY2UsXHJcbiAgICBJMThuU2VydmljZVxyXG4gIF0sXHJcbiAgZW50cnlDb21wb25lbnRzOiBbXHJcbiAgICBDaGdkckRhdGFWaWV3ZXJDb21wb25lbnQsXHJcbiAgICBDaGdkckxpc3RDb21wb25lbnQsXHJcbiAgICBDaGdkckxpc3REaWFsb2dDb250ZW50Q29tcG9uZW50XHJcbiAgXSxcclxuICBleHBvcnRzOiBbQ2hnZHJEYXRhVmlld2VyQ29tcG9uZW50LCBDaGdkckxpc3RDb21wb25lbnQsIENoZ2RySGVhZGVyRGF0YWdyaWRDb21wb25lbnRdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDaGdkck1vZHVsZSB7IH1cclxuIl19