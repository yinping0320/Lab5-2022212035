/**
 * @fileoverview added by tsickle
 * Generated from: lib/chgdr-data-viewer/chgdr-tree-builder.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Guid } from '../util/guid.util';
// 参考： Farris TreeTable的节点结构
// export interface TreeNode {
//     id?: string;
//     data: any;
//     /** 叶子节点图标 */
//     icon?: any;
//     /** 节点展开图标 */
//     expandedIcon?: any;
//     /** 节点折叠图标 */
//     collapsedIcon?: any;
//     /** 子节点 */
//     children?: TreeNode[];
//     /** 是否为叶子节点 */
//     leaf?: boolean;
//     /** 是否展开 */
//     expanded?: boolean;
//     type?: string;
//     /** 父节点 */
//     parent?: TreeNode;
//     /** 是否允许选中 */
//     selectable?: boolean;
//  }
var 
// 参考： Farris TreeTable的节点结构
// export interface TreeNode {
//     id?: string;
//     data: any;
//     /** 叶子节点图标 */
//     icon?: any;
//     /** 节点展开图标 */
//     expandedIcon?: any;
//     /** 节点折叠图标 */
//     collapsedIcon?: any;
//     /** 子节点 */
//     children?: TreeNode[];
//     /** 是否为叶子节点 */
//     leaf?: boolean;
//     /** 是否展开 */
//     expanded?: boolean;
//     type?: string;
//     /** 父节点 */
//     parent?: TreeNode;
//     /** 是否允许选中 */
//     selectable?: boolean;
//  }
ChgdrTreeNode = /** @class */ (function () {
    function ChgdrTreeNode() {
    }
    return ChgdrTreeNode;
}());
// 参考： Farris TreeTable的节点结构
// export interface TreeNode {
//     id?: string;
//     data: any;
//     /** 叶子节点图标 */
//     icon?: any;
//     /** 节点展开图标 */
//     expandedIcon?: any;
//     /** 节点折叠图标 */
//     collapsedIcon?: any;
//     /** 子节点 */
//     children?: TreeNode[];
//     /** 是否为叶子节点 */
//     leaf?: boolean;
//     /** 是否展开 */
//     expanded?: boolean;
//     type?: string;
//     /** 父节点 */
//     parent?: TreeNode;
//     /** 是否允许选中 */
//     selectable?: boolean;
//  }
export { ChgdrTreeNode };
if (false) {
    /**
     * 节点ID，用于内部处理，请勿使用
     * @type {?}
     */
    ChgdrTreeNode.prototype.id;
    /**
     * 节点名称
     * @type {?}
     */
    ChgdrTreeNode.prototype.name;
    /**
     * 父节点
     * @type {?}
     */
    ChgdrTreeNode.prototype.parent;
    /**
     * 子节点列表
     * @type {?}
     */
    ChgdrTreeNode.prototype.children;
    /**
     * 是否展开
     * @type {?}
     */
    ChgdrTreeNode.prototype.expanded;
    /**
     * 是否隐藏
     * @type {?}
     */
    ChgdrTreeNode.prototype.hidden;
    /**
     * 展示树结构用的数据实体
     * @type {?}
     */
    ChgdrTreeNode.prototype.data;
    /** @type {?} */
    ChgdrTreeNode.prototype.chgdrRow;
    /** @type {?} */
    ChgdrTreeNode.prototype.chgdrData;
    /** @type {?} */
    ChgdrTreeNode.prototype.isRoot;
}
var ChgdrTreeBuilder = /** @class */ (function () {
    function ChgdrTreeBuilder() {
    }
    /**
     * @param {?} chgdrData
     * @return {?}
     */
    ChgdrTreeBuilder.prototype.build = /**
     * @param {?} chgdrData
     * @return {?}
     */
    function (chgdrData) {
        this.chgdrData = chgdrData;
        if (chgdrData.entityNodes.length == 0) {
            console.warn("无变更日志");
            return [];
        }
        /** @type {?} */
        var rootEntityNode = chgdrData.entityNodes[0];
        /** @type {?} */
        var rootRows = rootEntityNode.rows;
        if (rootRows.length == 0) {
            console.warn("无根变更日志行");
            return [];
        }
        /** @type {?} */
        var rootRow = rootRows[0];
        /** @type {?} */
        var node = this.rowToNode(rootRow);
        node.isRoot = true;
        node.expanded = true;
        return [node];
    };
    /**
     * @private
     * @param {?} row
     * @return {?}
     */
    ChgdrTreeBuilder.prototype.rowToNode = /**
     * @private
     * @param {?} row
     * @return {?}
     */
    function (row) {
        var _this = this;
        /** @type {?} */
        var node = new ChgdrTreeNode();
        node.id = Guid.newGuid();
        node.name = this.buildTreeNodeName(row);
        node.data = {
            id: node.id,
            name: node.name
        };
        node.chgdrRow = row;
        node.chgdrData = this.chgdrData;
        node.children = [];
        row.entityNodes.forEach((/**
         * @param {?} entityNode
         * @return {?}
         */
        function (entityNode) {
            entityNode.rows.forEach((/**
             * @param {?} childRow
             * @return {?}
             */
            function (childRow) {
                /** @type {?} */
                var childNode = _this.rowToNode(childRow);
                childNode.parent = node;
                node.children.push(childNode);
            }));
        }));
        return node;
    };
    /**
     * @private
     * @param {?} row
     * @return {?}
     */
    ChgdrTreeBuilder.prototype.buildTreeNodeName = /**
     * @private
     * @param {?} row
     * @return {?}
     */
    function (row) {
        /** @type {?} */
        var dataCodeName;
        if (row.dataCodes && row.dataCodes.length > 0) {
            dataCodeName = row.dataCodes[0].fieldValue;
        }
        if (dataCodeName) {
            return row.entityName + "-" + dataCodeName + "【" + row.operateType.name + "】";
        }
        else {
            return row.entityName + "【" + row.operateType.name + "】";
        }
    };
    return ChgdrTreeBuilder;
}());
export { ChgdrTreeBuilder };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ChgdrTreeBuilder.prototype.chgdrData;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hnZHItdHJlZS1idWlsZGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1jbXAvY2hnZHIvIiwic291cmNlcyI6WyJsaWIvY2hnZHItZGF0YS12aWV3ZXIvY2hnZHItdHJlZS1idWlsZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLG1CQUFtQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTBCekM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUFBO0lBc0JBLENBQUM7SUFBRCxvQkFBQztBQUFELENBQUMsQUF0QkQsSUFzQkM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBbkJHLDJCQUFXOzs7OztJQUVYLDZCQUFhOzs7OztJQUdiLCtCQUFzQjs7Ozs7SUFFdEIsaUNBQTBCOzs7OztJQUcxQixpQ0FBa0I7Ozs7O0lBRWxCLCtCQUFnQjs7Ozs7SUFHaEIsNkJBQVU7O0lBQ1YsaUNBQTJCOztJQUMzQixrQ0FBcUI7O0lBQ3JCLCtCQUFnQjs7QUFHcEI7SUFBQTtJQXdEQSxDQUFDOzs7OztJQXJEVSxnQ0FBSzs7OztJQUFaLFVBQWEsU0FBb0I7UUFDN0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxTQUFTLENBQUMsV0FBVyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7WUFDbkMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUN0QixPQUFPLEVBQUUsQ0FBQztTQUNiOztZQUNHLGNBQWMsR0FBRyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQzs7WUFDekMsUUFBUSxHQUFHLGNBQWMsQ0FBQyxJQUFJO1FBQ2xDLElBQUksUUFBUSxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7WUFDdEIsT0FBTyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUN4QixPQUFPLEVBQUUsQ0FBQztTQUNiOztZQUNHLE9BQU8sR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDOztZQUVyQixJQUFJLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUM7UUFDbEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFFckIsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2xCLENBQUM7Ozs7OztJQUVPLG9DQUFTOzs7OztJQUFqQixVQUFrQixHQUFxQjtRQUF2QyxpQkFtQkM7O1lBbEJTLElBQUksR0FBa0IsSUFBSSxhQUFhLEVBQUU7UUFDL0MsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDekIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDeEMsSUFBSSxDQUFDLElBQUksR0FBRztZQUNSLEVBQUUsRUFBRSxJQUFJLENBQUMsRUFBRTtZQUNYLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTtTQUNsQixDQUFDO1FBQ0YsSUFBSSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUM7UUFDcEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ25CLEdBQUcsQ0FBQyxXQUFXLENBQUMsT0FBTzs7OztRQUFDLFVBQUEsVUFBVTtZQUM5QixVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU87Ozs7WUFBQyxVQUFBLFFBQVE7O29CQUN0QixTQUFTLEdBQWtCLEtBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDO2dCQUN6RCxTQUFTLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztnQkFDeEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDbEMsQ0FBQyxFQUFDLENBQUE7UUFDTixDQUFDLEVBQUMsQ0FBQTtRQUNGLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7Ozs7OztJQUVPLDRDQUFpQjs7Ozs7SUFBekIsVUFBMEIsR0FBcUI7O1lBQ3ZDLFlBQVk7UUFDaEIsSUFBSSxHQUFHLENBQUMsU0FBUyxJQUFJLEdBQUcsQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUMzQyxZQUFZLEdBQUcsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUM7U0FDOUM7UUFDRCxJQUFJLFlBQVksRUFBRTtZQUNkLE9BQU8sR0FBRyxDQUFDLFVBQVUsR0FBRyxHQUFHLEdBQUcsWUFBWSxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsV0FBVyxDQUFDLElBQUksR0FBRyxHQUFHLENBQUM7U0FDakY7YUFBTTtZQUNILE9BQU8sR0FBRyxDQUFDLFVBQVUsR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDLFdBQVcsQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDO1NBQzVEO0lBQ0wsQ0FBQztJQUNMLHVCQUFDO0FBQUQsQ0FBQyxBQXhERCxJQXdEQzs7Ozs7OztJQXZERyxxQ0FBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHdWlkIH0gZnJvbSAnLi4vdXRpbC9ndWlkLnV0aWwnO1xyXG5pbXBvcnQgeyBDaGdkckRhdGEsIENoZ2RyRGF0YVJvd05vZGUgfSBmcm9tICcuL2NoZ2RyLWRhdGEnO1xyXG5cclxuLy8g5Y+C6ICD77yaIEZhcnJpcyBUcmVlVGFibGXnmoToioLngrnnu5PmnoRcclxuLy8gZXhwb3J0IGludGVyZmFjZSBUcmVlTm9kZSB7XHJcbi8vICAgICBpZD86IHN0cmluZztcclxuLy8gICAgIGRhdGE6IGFueTtcclxuLy8gICAgIC8qKiDlj7blrZDoioLngrnlm77moIcgKi9cclxuLy8gICAgIGljb24/OiBhbnk7XHJcbi8vICAgICAvKiog6IqC54K55bGV5byA5Zu+5qCHICovXHJcbi8vICAgICBleHBhbmRlZEljb24/OiBhbnk7XHJcbi8vICAgICAvKiog6IqC54K55oqY5Y+g5Zu+5qCHICovXHJcbi8vICAgICBjb2xsYXBzZWRJY29uPzogYW55O1xyXG4vLyAgICAgLyoqIOWtkOiKgueCuSAqL1xyXG4vLyAgICAgY2hpbGRyZW4/OiBUcmVlTm9kZVtdO1xyXG4vLyAgICAgLyoqIOaYr+WQpuS4uuWPtuWtkOiKgueCuSAqL1xyXG4vLyAgICAgbGVhZj86IGJvb2xlYW47XHJcbi8vICAgICAvKiog5piv5ZCm5bGV5byAICovXHJcbi8vICAgICBleHBhbmRlZD86IGJvb2xlYW47XHJcbi8vICAgICB0eXBlPzogc3RyaW5nO1xyXG4vLyAgICAgLyoqIOeItuiKgueCuSAqL1xyXG4vLyAgICAgcGFyZW50PzogVHJlZU5vZGU7XHJcbi8vICAgICAvKiog5piv5ZCm5YWB6K646YCJ5LitICovXHJcbi8vICAgICBzZWxlY3RhYmxlPzogYm9vbGVhbjtcclxuLy8gIH1cclxuXHJcbmV4cG9ydCBjbGFzcyBDaGdkclRyZWVOb2RlIHtcclxuICAgIC8vIOagkemFjee9ruS4reiuvue9ruS6hmlkRmllbGTnmoTmg4XlhrXkuIvvvIxpZOS8muiiq+iHquWKqOi1i+WAvOS4umRhdGFbaWRGaWVsZF3nmoTlgLzjgILmiYDku6XlnKjmraTorr7nva7lv4Xpobvorr7nva7kuLrkuI5kYXRhLmlk5Lit55u45ZCM44CCXHJcbiAgICAvKiog6IqC54K5SUTvvIznlKjkuo7lhoXpg6jlpITnkIbvvIzor7fli7/kvb/nlKggKi9cclxuICAgIGlkOiBzdHJpbmc7XHJcbiAgICAvKiog6IqC54K55ZCN56ewICovXHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqIOeItuiKgueCuSAqL1xyXG4gICAgcGFyZW50OiBDaGdkclRyZWVOb2RlO1xyXG4gICAgLyoqIOWtkOiKgueCueWIl+ihqCAqL1xyXG4gICAgY2hpbGRyZW46IENoZ2RyVHJlZU5vZGVbXTtcclxuXHJcbiAgICAvKiog5piv5ZCm5bGV5byAICovXHJcbiAgICBleHBhbmRlZDogYm9vbGVhbjtcclxuICAgIC8qKiDmmK/lkKbpmpDol48gKi9cclxuICAgIGhpZGRlbjogYm9vbGVhbjtcclxuXHJcbiAgICAvKiog5bGV56S65qCR57uT5p6E55So55qE5pWw5o2u5a6e5L2TICovXHJcbiAgICBkYXRhOiBhbnk7XHJcbiAgICBjaGdkclJvdzogQ2hnZHJEYXRhUm93Tm9kZTtcclxuICAgIGNoZ2RyRGF0YTogQ2hnZHJEYXRhO1xyXG4gICAgaXNSb290OiBib29sZWFuO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgQ2hnZHJUcmVlQnVpbGRlciB7XHJcbiAgICBwcml2YXRlIGNoZ2RyRGF0YTogQ2hnZHJEYXRhO1xyXG5cclxuICAgIHB1YmxpYyBidWlsZChjaGdkckRhdGE6IENoZ2RyRGF0YSk6IENoZ2RyVHJlZU5vZGVbXSB7XHJcbiAgICAgICAgdGhpcy5jaGdkckRhdGEgPSBjaGdkckRhdGE7XHJcbiAgICAgICAgaWYgKGNoZ2RyRGF0YS5lbnRpdHlOb2Rlcy5sZW5ndGggPT0gMCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCLml6Dlj5jmm7Tml6Xlv5dcIik7XHJcbiAgICAgICAgICAgIHJldHVybiBbXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHJvb3RFbnRpdHlOb2RlID0gY2hnZHJEYXRhLmVudGl0eU5vZGVzWzBdO1xyXG4gICAgICAgIGxldCByb290Um93cyA9IHJvb3RFbnRpdHlOb2RlLnJvd3M7XHJcbiAgICAgICAgaWYgKHJvb3RSb3dzLmxlbmd0aCA9PSAwKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIuaXoOagueWPmOabtOaXpeW/l+ihjFwiKTtcclxuICAgICAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgcm9vdFJvdyA9IHJvb3RSb3dzWzBdO1xyXG5cclxuICAgICAgICBsZXQgbm9kZSA9IHRoaXMucm93VG9Ob2RlKHJvb3RSb3cpO1xyXG4gICAgICAgIG5vZGUuaXNSb290ID0gdHJ1ZTtcclxuICAgICAgICBub2RlLmV4cGFuZGVkID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgcmV0dXJuIFtub2RlXTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHJvd1RvTm9kZShyb3c6IENoZ2RyRGF0YVJvd05vZGUpOiBDaGdkclRyZWVOb2RlIHtcclxuICAgICAgICBjb25zdCBub2RlOiBDaGdkclRyZWVOb2RlID0gbmV3IENoZ2RyVHJlZU5vZGUoKTtcclxuICAgICAgICBub2RlLmlkID0gR3VpZC5uZXdHdWlkKCk7XHJcbiAgICAgICAgbm9kZS5uYW1lID0gdGhpcy5idWlsZFRyZWVOb2RlTmFtZShyb3cpO1xyXG4gICAgICAgIG5vZGUuZGF0YSA9IHtcclxuICAgICAgICAgICAgaWQ6IG5vZGUuaWQsXHJcbiAgICAgICAgICAgIG5hbWU6IG5vZGUubmFtZVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgbm9kZS5jaGdkclJvdyA9IHJvdztcclxuICAgICAgICBub2RlLmNoZ2RyRGF0YSA9IHRoaXMuY2hnZHJEYXRhO1xyXG4gICAgICAgIG5vZGUuY2hpbGRyZW4gPSBbXTtcclxuICAgICAgICByb3cuZW50aXR5Tm9kZXMuZm9yRWFjaChlbnRpdHlOb2RlID0+IHtcclxuICAgICAgICAgICAgZW50aXR5Tm9kZS5yb3dzLmZvckVhY2goY2hpbGRSb3cgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY2hpbGROb2RlOiBDaGdkclRyZWVOb2RlID0gdGhpcy5yb3dUb05vZGUoY2hpbGRSb3cpO1xyXG4gICAgICAgICAgICAgICAgY2hpbGROb2RlLnBhcmVudCA9IG5vZGU7XHJcbiAgICAgICAgICAgICAgICBub2RlLmNoaWxkcmVuLnB1c2goY2hpbGROb2RlKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgICAgIHJldHVybiBub2RlO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgYnVpbGRUcmVlTm9kZU5hbWUocm93OiBDaGdkckRhdGFSb3dOb2RlKTogc3RyaW5nIHtcclxuICAgICAgICBsZXQgZGF0YUNvZGVOYW1lO1xyXG4gICAgICAgIGlmIChyb3cuZGF0YUNvZGVzICYmIHJvdy5kYXRhQ29kZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBkYXRhQ29kZU5hbWUgPSByb3cuZGF0YUNvZGVzWzBdLmZpZWxkVmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChkYXRhQ29kZU5hbWUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJvdy5lbnRpdHlOYW1lICsgXCItXCIgKyBkYXRhQ29kZU5hbWUgKyBcIuOAkFwiICsgcm93Lm9wZXJhdGVUeXBlLm5hbWUgKyBcIuOAkVwiO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiByb3cuZW50aXR5TmFtZSArIFwi44CQXCIgKyByb3cub3BlcmF0ZVR5cGUubmFtZSArIFwi44CRXCI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il19