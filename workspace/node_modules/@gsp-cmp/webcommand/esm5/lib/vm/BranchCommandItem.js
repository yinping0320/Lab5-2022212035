/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommandItemType } from "./CommandItemType";
import { CommandItemConvertor } from "./ICommandItem";
var BranchCommandItem = /** @class */ (function () {
    function BranchCommandItem() {
    }
    /**
     * @return {?}
     */
    BranchCommandItem.prototype.GetItemId = /**
     * @return {?}
     */
    function () {
        return this.Id;
    };
    /**
     * @return {?}
     */
    BranchCommandItem.prototype.GetItemCode = /**
     * @return {?}
     */
    function () {
        return this.Code;
    };
    /**
     * @return {?}
     */
    BranchCommandItem.prototype.GetItemName = /**
     * @return {?}
     */
    function () {
        return this.Name;
    };
    /**
     * @return {?}
     */
    BranchCommandItem.prototype.GetItemType = /**
     * @return {?}
     */
    function () {
        return CommandItemType.Branch;
    };
    return BranchCommandItem;
}());
export { BranchCommandItem };
if (false) {
    /** @type {?} */
    BranchCommandItem.prototype.Id;
    /** @type {?} */
    BranchCommandItem.prototype.Code;
    /** @type {?} */
    BranchCommandItem.prototype.Name;
    /** @type {?} */
    BranchCommandItem.prototype.ConditionType;
    /** @type {?} */
    BranchCommandItem.prototype.Express;
    /** @type {?} */
    BranchCommandItem.prototype.Items;
}
var BranchCommandItemConvertor = /** @class */ (function () {
    function BranchCommandItemConvertor() {
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    BranchCommandItemConvertor.prototype.ConvertJObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        /** @type {?} */
        var branchItem = (/** @type {?} */ (obj));
        /** @type {?} */
        var jobj = new Object();
        jobj["Id"] = branchItem.Id;
        jobj["Code"] = branchItem.Code;
        jobj["Name"] = branchItem.Name;
        jobj["ConditionType"] = branchItem.ConditionType;
        jobj["Express"] = branchItem.Express;
        if (branchItem.Items != null) {
            /** @type {?} */
            var itemArray_1 = [];
            /** @type {?} */
            var itemConvertor_1 = new CommandItemConvertor();
            branchItem.Items.forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                itemArray_1.push(itemConvertor_1.ConvertJObject(element));
            }));
            jobj["Items"] = itemArray_1;
        }
        return jobj;
    };
    /**
     * @param {?} jsonObj
     * @return {?}
     */
    BranchCommandItemConvertor.prototype.InitFromJobject = /**
     * @param {?} jsonObj
     * @return {?}
     */
    function (jsonObj) {
        /** @type {?} */
        var branchItem = new BranchCommandItem();
        branchItem.Id = jsonObj["Id"];
        branchItem.Code = jsonObj["Code"];
        branchItem.Name = jsonObj["Name"];
        branchItem.ConditionType = jsonObj["ConditionType"];
        branchItem.Express = jsonObj["Express"];
        if (jsonObj["Items"] != null) {
            branchItem.Items = new Array();
            /** @type {?} */
            var itemConvertor_2 = new CommandItemConvertor();
            jsonObj["Items"].forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                branchItem.Items.push(itemConvertor_2.InitFromJobject(element));
            }));
        }
        return branchItem;
    };
    return BranchCommandItemConvertor;
}());
export { BranchCommandItemConvertor };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnJhbmNoQ29tbWFuZEl0ZW0uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWNtcC93ZWJjb21tYW5kLyIsInNvdXJjZXMiOlsibGliL3ZtL0JyYW5jaENvbW1hbmRJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEQsT0FBTyxFQUFnQixvQkFBb0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBR3BFO0lBQUE7SUF1QkEsQ0FBQzs7OztJQWZHLHFDQUFTOzs7SUFBVDtRQUNJLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQztJQUNuQixDQUFDOzs7O0lBRUQsdUNBQVc7OztJQUFYO1FBQ0ksT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ3JCLENBQUM7Ozs7SUFFRCx1Q0FBVzs7O0lBQVg7UUFDSSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDckIsQ0FBQzs7OztJQUVELHVDQUFXOzs7SUFBWDtRQUNJLE9BQU8sZUFBZSxDQUFDLE1BQU0sQ0FBQztJQUNsQyxDQUFDO0lBQ0wsd0JBQUM7QUFBRCxDQUFDLEFBdkJELElBdUJDOzs7O0lBdEJHLCtCQUFXOztJQUNYLGlDQUFZOztJQUNaLGlDQUFhOztJQUNiLDBDQUE2Qjs7SUFDN0Isb0NBQWdCOztJQUNoQixrQ0FBMkI7O0FBbUIvQjtJQUFBO0lBb0NBLENBQUM7Ozs7O0lBbkNHLG1EQUFjOzs7O0lBQWQsVUFBZSxHQUFzQjs7WUFDN0IsVUFBVSxHQUFHLG1CQUFBLEdBQUcsRUFBcUI7O1lBQ3JDLElBQUksR0FBRyxJQUFJLE1BQU0sRUFBRTtRQUN2QixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsVUFBVSxDQUFDLEVBQUUsQ0FBQztRQUMzQixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQztRQUMvQixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQztRQUMvQixJQUFJLENBQUMsZUFBZSxDQUFDLEdBQUcsVUFBVSxDQUFDLGFBQWEsQ0FBQztRQUNqRCxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsVUFBVSxDQUFDLE9BQU8sQ0FBQztRQUNyQyxJQUFJLFVBQVUsQ0FBQyxLQUFLLElBQUksSUFBSSxFQUFFOztnQkFDdEIsV0FBUyxHQUFHLEVBQUU7O2dCQUNkLGVBQWEsR0FBRyxJQUFJLG9CQUFvQixFQUFFO1lBQzlDLFVBQVUsQ0FBQyxLQUFLLENBQUMsT0FBTzs7OztZQUFDLFVBQUEsT0FBTztnQkFDNUIsV0FBUyxDQUFDLElBQUksQ0FBQyxlQUFhLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDMUQsQ0FBQyxFQUFDLENBQUM7WUFDSCxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUMsV0FBUyxDQUFDO1NBQzNCO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQzs7Ozs7SUFFRCxvREFBZTs7OztJQUFmLFVBQWdCLE9BQWU7O1lBQ3ZCLFVBQVUsR0FBRyxJQUFJLGlCQUFpQixFQUFFO1FBQ3hDLFVBQVUsQ0FBQyxFQUFFLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlCLFVBQVUsQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2xDLFVBQVUsQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2xDLFVBQVUsQ0FBQyxhQUFhLEdBQUcsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ3BELFVBQVUsQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3hDLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLElBQUksRUFBRTtZQUMxQixVQUFVLENBQUMsS0FBSyxHQUFDLElBQUksS0FBSyxFQUFnQixDQUFDOztnQkFDdkMsZUFBYSxHQUFHLElBQUksb0JBQW9CLEVBQUU7WUFDOUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU87Ozs7WUFBQyxVQUFBLE9BQU87Z0JBQzVCLFVBQVUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLGVBQWEsQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUNsRSxDQUFDLEVBQUMsQ0FBQztTQUNOO1FBQ0QsT0FBTyxVQUFVLENBQUM7SUFDdEIsQ0FBQztJQUNMLGlDQUFDO0FBQUQsQ0FBQyxBQXBDRCxJQW9DQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1hbmRJdGVtVHlwZSB9IGZyb20gXCIuL0NvbW1hbmRJdGVtVHlwZVwiO1xuaW1wb3J0IHsgSUNvbW1hbmRJdGVtLCBDb21tYW5kSXRlbUNvbnZlcnRvciB9IGZyb20gXCIuL0lDb21tYW5kSXRlbVwiO1xuaW1wb3J0IHsgQ29uZGl0aW9uVHlwZSB9IGZyb20gXCIuL0NvbmRpdGlvblR5cGVcIjtcblxuZXhwb3J0IGNsYXNzIEJyYW5jaENvbW1hbmRJdGVtIGltcGxlbWVudHMgSUNvbW1hbmRJdGVtIHtcbiAgICBJZDogc3RyaW5nO1xuICAgIENvZGU6c3RyaW5nO1xuICAgIE5hbWU6IHN0cmluZztcbiAgICBDb25kaXRpb25UeXBlOiBDb25kaXRpb25UeXBlO1xuICAgIEV4cHJlc3M6IHN0cmluZztcbiAgICBJdGVtczogQXJyYXk8SUNvbW1hbmRJdGVtPjtcblxuICAgIEdldEl0ZW1JZCgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5JZDtcbiAgICB9XG5cbiAgICBHZXRJdGVtQ29kZSgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5Db2RlO1xuICAgIH1cblxuICAgIEdldEl0ZW1OYW1lKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLk5hbWU7XG4gICAgfVxuXG4gICAgR2V0SXRlbVR5cGUoKTogQ29tbWFuZEl0ZW1UeXBlIHtcbiAgICAgICAgcmV0dXJuIENvbW1hbmRJdGVtVHlwZS5CcmFuY2g7XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgQnJhbmNoQ29tbWFuZEl0ZW1Db252ZXJ0b3Ige1xuICAgIENvbnZlcnRKT2JqZWN0KG9iajogQnJhbmNoQ29tbWFuZEl0ZW0pOiBPYmplY3Qge1xuICAgICAgICBsZXQgYnJhbmNoSXRlbSA9IG9iaiBhcyBCcmFuY2hDb21tYW5kSXRlbTtcbiAgICAgICAgbGV0IGpvYmogPSBuZXcgT2JqZWN0KCk7XG4gICAgICAgIGpvYmpbXCJJZFwiXSA9IGJyYW5jaEl0ZW0uSWQ7XG4gICAgICAgIGpvYmpbXCJDb2RlXCJdID0gYnJhbmNoSXRlbS5Db2RlO1xuICAgICAgICBqb2JqW1wiTmFtZVwiXSA9IGJyYW5jaEl0ZW0uTmFtZTtcbiAgICAgICAgam9ialtcIkNvbmRpdGlvblR5cGVcIl0gPSBicmFuY2hJdGVtLkNvbmRpdGlvblR5cGU7XG4gICAgICAgIGpvYmpbXCJFeHByZXNzXCJdID0gYnJhbmNoSXRlbS5FeHByZXNzO1xuICAgICAgICBpZiAoYnJhbmNoSXRlbS5JdGVtcyAhPSBudWxsKSB7XG4gICAgICAgICAgICBsZXQgaXRlbUFycmF5ID0gW107XG4gICAgICAgICAgICBsZXQgaXRlbUNvbnZlcnRvciA9IG5ldyBDb21tYW5kSXRlbUNvbnZlcnRvcigpO1xuICAgICAgICAgICAgYnJhbmNoSXRlbS5JdGVtcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgICAgICAgICAgIGl0ZW1BcnJheS5wdXNoKGl0ZW1Db252ZXJ0b3IuQ29udmVydEpPYmplY3QoZWxlbWVudCkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBqb2JqW1wiSXRlbXNcIl09aXRlbUFycmF5O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBqb2JqO1xuICAgIH1cblxuICAgIEluaXRGcm9tSm9iamVjdChqc29uT2JqOiBPYmplY3QpOiBCcmFuY2hDb21tYW5kSXRlbSB7XG4gICAgICAgIGxldCBicmFuY2hJdGVtID0gbmV3IEJyYW5jaENvbW1hbmRJdGVtKCk7XG4gICAgICAgIGJyYW5jaEl0ZW0uSWQgPSBqc29uT2JqW1wiSWRcIl07XG4gICAgICAgIGJyYW5jaEl0ZW0uQ29kZSA9IGpzb25PYmpbXCJDb2RlXCJdO1xuICAgICAgICBicmFuY2hJdGVtLk5hbWUgPSBqc29uT2JqW1wiTmFtZVwiXTtcbiAgICAgICAgYnJhbmNoSXRlbS5Db25kaXRpb25UeXBlID0ganNvbk9ialtcIkNvbmRpdGlvblR5cGVcIl07XG4gICAgICAgIGJyYW5jaEl0ZW0uRXhwcmVzcyA9IGpzb25PYmpbXCJFeHByZXNzXCJdO1xuICAgICAgICBpZiAoanNvbk9ialtcIkl0ZW1zXCJdICE9IG51bGwpIHtcbiAgICAgICAgICAgIGJyYW5jaEl0ZW0uSXRlbXM9bmV3IEFycmF5PElDb21tYW5kSXRlbT4oKTtcbiAgICAgICAgICAgIGxldCBpdGVtQ29udmVydG9yID0gbmV3IENvbW1hbmRJdGVtQ29udmVydG9yKCk7XG4gICAgICAgICAgICBqc29uT2JqW1wiSXRlbXNcIl0uZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgICAgICAgICBicmFuY2hJdGVtLkl0ZW1zLnB1c2goaXRlbUNvbnZlcnRvci5Jbml0RnJvbUpvYmplY3QoZWxlbWVudCkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJyYW5jaEl0ZW07XG4gICAgfVxufVxuIl19