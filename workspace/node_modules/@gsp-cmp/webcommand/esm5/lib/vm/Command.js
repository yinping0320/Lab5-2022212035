/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommandItemConvertor } from "./ICommandItem";
var WebCommand = /** @class */ (function () {
    function WebCommand() {
    }
    return WebCommand;
}());
export { WebCommand };
if (false) {
    /** @type {?} */
    WebCommand.prototype.Id;
    /** @type {?} */
    WebCommand.prototype.Code;
    /** @type {?} */
    WebCommand.prototype.Name;
    /** @type {?} */
    WebCommand.prototype.Description;
    /** @type {?} */
    WebCommand.prototype.Parameters;
    /** @type {?} */
    WebCommand.prototype.SourceCode;
    /** @type {?} */
    WebCommand.prototype.Items;
}
var WebCommandConvertor = /** @class */ (function () {
    function WebCommandConvertor() {
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    WebCommandConvertor.prototype.ConvertJObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        /** @type {?} */
        var cmpOp = (/** @type {?} */ (obj));
        /** @type {?} */
        var jobj = new Object();
        jobj["Id"] = cmpOp.Id;
        jobj["Code"] = cmpOp.Code;
        jobj["Name"] = cmpOp.Name;
        jobj["Description"] = cmpOp.Description;
        jobj["SourceCode"] = cmpOp.SourceCode;
        jobj["Parameters"] = cmpOp.Parameters;
        /** @type {?} */
        var items = [];
        if (cmpOp.Items != null) {
            /** @type {?} */
            var itemConvertor_1 = new CommandItemConvertor();
            cmpOp.Items.forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                items.push(itemConvertor_1.ConvertJObject(element));
            }));
        }
        jobj["Items"] = items;
        return jobj;
    };
    /**
     * @param {?} jsonObj
     * @return {?}
     */
    WebCommandConvertor.prototype.InitFromJobject = /**
     * @param {?} jsonObj
     * @return {?}
     */
    function (jsonObj) {
        /** @type {?} */
        var cmpOp = new WebCommand();
        cmpOp.Id = jsonObj["Id"];
        cmpOp.Code = jsonObj["Code"];
        cmpOp.Name = jsonObj["Name"];
        cmpOp.Description = jsonObj["Description"];
        cmpOp.SourceCode = jsonObj["SourceCode"];
        cmpOp.Parameters = jsonObj["Parameters"];
        cmpOp.Items = new Array();
        if (jsonObj["Items"] != null) {
            /** @type {?} */
            var itemConvertor_2 = new CommandItemConvertor();
            jsonObj["Items"].forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                cmpOp.Items.push(itemConvertor_2.InitFromJobject(element));
            }));
        }
        return cmpOp;
    };
    return WebCommandConvertor;
}());
export { WebCommandConvertor };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tbWFuZC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtY21wL3dlYmNvbW1hbmQvIiwic291cmNlcyI6WyJsaWIvdm0vQ29tbWFuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFnQixvQkFBb0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBR3BFO0lBQUE7SUFRQSxDQUFDO0lBQUQsaUJBQUM7QUFBRCxDQUFDLEFBUkQsSUFRQzs7OztJQVBHLHdCQUFVOztJQUNWLDBCQUFZOztJQUNaLDBCQUFZOztJQUNaLGlDQUFtQjs7SUFDbkIsZ0NBQStCOztJQUMvQixnQ0FBa0I7O0lBQ2xCLDJCQUEyQjs7QUFHL0I7SUFBQTtJQTBDQSxDQUFDOzs7OztJQXhDRyw0Q0FBYzs7OztJQUFkLFVBQWUsR0FBZ0I7O1lBRXZCLEtBQUssR0FBRyxtQkFBQSxHQUFHLEVBQWM7O1lBQ3pCLElBQUksR0FBQyxJQUFJLE1BQU0sRUFBRTtRQUNyQixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztRQUNwQixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztRQUN4QixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztRQUN4QixJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQztRQUN0QyxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQztRQUNwQyxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQzs7WUFDaEMsS0FBSyxHQUFDLEVBQUU7UUFDWixJQUFHLEtBQUssQ0FBQyxLQUFLLElBQUUsSUFBSSxFQUNwQjs7Z0JBQ1EsZUFBYSxHQUFHLElBQUksb0JBQW9CLEVBQUU7WUFDOUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPOzs7O1lBQUMsVUFBQSxPQUFPO2dCQUN2QixLQUFLLENBQUMsSUFBSSxDQUFDLGVBQWEsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUN0RCxDQUFDLEVBQUMsQ0FBQztTQUNOO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFDLEtBQUssQ0FBQztRQUNwQixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDOzs7OztJQUVELDZDQUFlOzs7O0lBQWYsVUFBZ0IsT0FBZTs7WUFDdkIsS0FBSyxHQUFHLElBQUksVUFBVSxFQUFFO1FBQzVCLEtBQUssQ0FBQyxFQUFFLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pCLEtBQUssQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdCLEtBQUssQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdCLEtBQUssQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzNDLEtBQUssQ0FBQyxVQUFVLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3pDLEtBQUssQ0FBQyxVQUFVLEdBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3ZDLEtBQUssQ0FBQyxLQUFLLEdBQUMsSUFBSSxLQUFLLEVBQWdCLENBQUM7UUFDdEMsSUFBRyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUUsSUFBSSxFQUN6Qjs7Z0JBQ1EsZUFBYSxHQUFHLElBQUksb0JBQW9CLEVBQUU7WUFDOUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU87Ozs7WUFBQyxVQUFBLE9BQU87Z0JBQzVCLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLGVBQWEsQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUM3RCxDQUFDLEVBQUMsQ0FBQztTQUNOO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQUNMLDBCQUFDO0FBQUQsQ0FBQyxBQTFDRCxJQTBDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElDb21tYW5kSXRlbSwgQ29tbWFuZEl0ZW1Db252ZXJ0b3IgfSBmcm9tIFwiLi9JQ29tbWFuZEl0ZW1cIjsgXG5pbXBvcnQgeyBDbWRQYXJhbWV0ZXIgfSBmcm9tIFwiLi9DbWRQYXJhbWV0ZXJcIjtcblxuZXhwb3J0IGNsYXNzIFdlYkNvbW1hbmR7XG4gICAgSWQ6c3RyaW5nO1xuICAgIENvZGU6c3RyaW5nO1xuICAgIE5hbWU6c3RyaW5nO1xuICAgIERlc2NyaXB0aW9uOnN0cmluZztcbiAgICBQYXJhbWV0ZXJzOkFycmF5PENtZFBhcmFtZXRlcj47XG4gICAgU291cmNlQ29kZTpzdHJpbmc7XG4gICAgSXRlbXM6IEFycmF5PElDb21tYW5kSXRlbT47XG59XG5cbmV4cG9ydCBjbGFzcyBXZWJDb21tYW5kQ29udmVydG9yXG57XG4gICAgQ29udmVydEpPYmplY3Qob2JqIDogV2ViQ29tbWFuZCk6IE9iamVjdCB7XG4gICAgICAgIFxuICAgICAgICBsZXQgY21wT3AgPSBvYmogYXMgV2ViQ29tbWFuZDtcbiAgICAgICAgbGV0IGpvYmo9bmV3IE9iamVjdCgpO1xuICAgICAgICBqb2JqW1wiSWRcIl09Y21wT3AuSWQ7XG4gICAgICAgIGpvYmpbXCJDb2RlXCJdPWNtcE9wLkNvZGU7XG4gICAgICAgIGpvYmpbXCJOYW1lXCJdPWNtcE9wLk5hbWU7XG4gICAgICAgIGpvYmpbXCJEZXNjcmlwdGlvblwiXT1jbXBPcC5EZXNjcmlwdGlvbjtcbiAgICAgICAgam9ialtcIlNvdXJjZUNvZGVcIl09Y21wT3AuU291cmNlQ29kZTtcbiAgICAgICAgam9ialtcIlBhcmFtZXRlcnNcIl09Y21wT3AuUGFyYW1ldGVycztcbiAgICAgICAgbGV0IGl0ZW1zPVtdO1xuICAgICAgICBpZihjbXBPcC5JdGVtcyE9bnVsbClcbiAgICAgICAge1xuICAgICAgICAgICAgbGV0IGl0ZW1Db252ZXJ0b3IgPSBuZXcgQ29tbWFuZEl0ZW1Db252ZXJ0b3IoKTtcbiAgICAgICAgICAgIGNtcE9wLkl0ZW1zLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgICAgICAgICAgICAgaXRlbXMucHVzaChpdGVtQ29udmVydG9yLkNvbnZlcnRKT2JqZWN0KGVsZW1lbnQpKTtcbiAgICAgICAgICAgIH0pOyBcbiAgICAgICAgfVxuICAgICAgICBqb2JqW1wiSXRlbXNcIl09aXRlbXM7XG4gICAgICAgIHJldHVybiBqb2JqO1xuICAgIH0gICAgXG4gICAgXG4gICAgSW5pdEZyb21Kb2JqZWN0KGpzb25PYmo6IE9iamVjdCk6IFdlYkNvbW1hbmQge1xuICAgICAgICBsZXQgY21wT3AgPSBuZXcgV2ViQ29tbWFuZCgpO1xuICAgICAgICBjbXBPcC5JZCA9IGpzb25PYmpbXCJJZFwiXTtcbiAgICAgICAgY21wT3AuQ29kZSA9IGpzb25PYmpbXCJDb2RlXCJdO1xuICAgICAgICBjbXBPcC5OYW1lID0ganNvbk9ialtcIk5hbWVcIl07XG4gICAgICAgIGNtcE9wLkRlc2NyaXB0aW9uID0ganNvbk9ialtcIkRlc2NyaXB0aW9uXCJdO1xuICAgICAgICBjbXBPcC5Tb3VyY2VDb2RlID0ganNvbk9ialtcIlNvdXJjZUNvZGVcIl07XG4gICAgICAgIGNtcE9wLlBhcmFtZXRlcnM9anNvbk9ialtcIlBhcmFtZXRlcnNcIl07XG4gICAgICAgIGNtcE9wLkl0ZW1zPW5ldyBBcnJheTxJQ29tbWFuZEl0ZW0+KCk7XG4gICAgICAgIGlmKGpzb25PYmpbXCJJdGVtc1wiXSE9bnVsbClcbiAgICAgICAge1xuICAgICAgICAgICAgbGV0IGl0ZW1Db252ZXJ0b3IgPSBuZXcgQ29tbWFuZEl0ZW1Db252ZXJ0b3IoKTtcbiAgICAgICAgICAgIGpzb25PYmpbXCJJdGVtc1wiXS5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgICAgICAgICAgIGNtcE9wLkl0ZW1zLnB1c2goaXRlbUNvbnZlcnRvci5Jbml0RnJvbUpvYmplY3QoZWxlbWVudCkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNtcE9wO1xuICAgIH1cbn0iXX0=