/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommandItemType } from "./CommandItemType";
import { CommandItemConvertor } from "./ICommandItem";
export class BranchCommandItem {
    /**
     * @return {?}
     */
    GetItemId() {
        return this.Id;
    }
    /**
     * @return {?}
     */
    GetItemCode() {
        return this.Code;
    }
    /**
     * @return {?}
     */
    GetItemName() {
        return this.Name;
    }
    /**
     * @return {?}
     */
    GetItemType() {
        return CommandItemType.Branch;
    }
}
if (false) {
    /** @type {?} */
    BranchCommandItem.prototype.Id;
    /** @type {?} */
    BranchCommandItem.prototype.Code;
    /** @type {?} */
    BranchCommandItem.prototype.Name;
    /** @type {?} */
    BranchCommandItem.prototype.ConditionType;
    /** @type {?} */
    BranchCommandItem.prototype.Express;
    /** @type {?} */
    BranchCommandItem.prototype.Items;
}
export class BranchCommandItemConvertor {
    /**
     * @param {?} obj
     * @return {?}
     */
    ConvertJObject(obj) {
        /** @type {?} */
        let branchItem = (/** @type {?} */ (obj));
        /** @type {?} */
        let jobj = new Object();
        jobj["Id"] = branchItem.Id;
        jobj["Code"] = branchItem.Code;
        jobj["Name"] = branchItem.Name;
        jobj["ConditionType"] = branchItem.ConditionType;
        jobj["Express"] = branchItem.Express;
        if (branchItem.Items != null) {
            /** @type {?} */
            let itemArray = [];
            /** @type {?} */
            let itemConvertor = new CommandItemConvertor();
            branchItem.Items.forEach((/**
             * @param {?} element
             * @return {?}
             */
            element => {
                itemArray.push(itemConvertor.ConvertJObject(element));
            }));
            jobj["Items"] = itemArray;
        }
        return jobj;
    }
    /**
     * @param {?} jsonObj
     * @return {?}
     */
    InitFromJobject(jsonObj) {
        /** @type {?} */
        let branchItem = new BranchCommandItem();
        branchItem.Id = jsonObj["Id"];
        branchItem.Code = jsonObj["Code"];
        branchItem.Name = jsonObj["Name"];
        branchItem.ConditionType = jsonObj["ConditionType"];
        branchItem.Express = jsonObj["Express"];
        if (jsonObj["Items"] != null) {
            branchItem.Items = new Array();
            /** @type {?} */
            let itemConvertor = new CommandItemConvertor();
            jsonObj["Items"].forEach((/**
             * @param {?} element
             * @return {?}
             */
            element => {
                branchItem.Items.push(itemConvertor.InitFromJobject(element));
            }));
        }
        return branchItem;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnJhbmNoQ29tbWFuZEl0ZW0uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWNtcC93ZWJjb21tYW5kLyIsInNvdXJjZXMiOlsibGliL3ZtL0JyYW5jaENvbW1hbmRJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEQsT0FBTyxFQUFnQixvQkFBb0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBR3BFLE1BQU0sT0FBTyxpQkFBaUI7Ozs7SUFRMUIsU0FBUztRQUNMLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQztJQUNuQixDQUFDOzs7O0lBRUQsV0FBVztRQUNQLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNyQixDQUFDOzs7O0lBRUQsV0FBVztRQUNQLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNyQixDQUFDOzs7O0lBRUQsV0FBVztRQUNQLE9BQU8sZUFBZSxDQUFDLE1BQU0sQ0FBQztJQUNsQyxDQUFDO0NBQ0o7OztJQXRCRywrQkFBVzs7SUFDWCxpQ0FBWTs7SUFDWixpQ0FBYTs7SUFDYiwwQ0FBNkI7O0lBQzdCLG9DQUFnQjs7SUFDaEIsa0NBQTJCOztBQW1CL0IsTUFBTSxPQUFPLDBCQUEwQjs7Ozs7SUFDbkMsY0FBYyxDQUFDLEdBQXNCOztZQUM3QixVQUFVLEdBQUcsbUJBQUEsR0FBRyxFQUFxQjs7WUFDckMsSUFBSSxHQUFHLElBQUksTUFBTSxFQUFFO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxVQUFVLENBQUMsRUFBRSxDQUFDO1FBQzNCLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDO1FBQy9CLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDO1FBQy9CLElBQUksQ0FBQyxlQUFlLENBQUMsR0FBRyxVQUFVLENBQUMsYUFBYSxDQUFDO1FBQ2pELElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxVQUFVLENBQUMsT0FBTyxDQUFDO1FBQ3JDLElBQUksVUFBVSxDQUFDLEtBQUssSUFBSSxJQUFJLEVBQUU7O2dCQUN0QixTQUFTLEdBQUcsRUFBRTs7Z0JBQ2QsYUFBYSxHQUFHLElBQUksb0JBQW9CLEVBQUU7WUFDOUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxPQUFPOzs7O1lBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQy9CLFNBQVMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQzFELENBQUMsRUFBQyxDQUFDO1lBQ0gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFDLFNBQVMsQ0FBQztTQUMzQjtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7Ozs7O0lBRUQsZUFBZSxDQUFDLE9BQWU7O1lBQ3ZCLFVBQVUsR0FBRyxJQUFJLGlCQUFpQixFQUFFO1FBQ3hDLFVBQVUsQ0FBQyxFQUFFLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlCLFVBQVUsQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2xDLFVBQVUsQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2xDLFVBQVUsQ0FBQyxhQUFhLEdBQUcsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ3BELFVBQVUsQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3hDLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLElBQUksRUFBRTtZQUMxQixVQUFVLENBQUMsS0FBSyxHQUFDLElBQUksS0FBSyxFQUFnQixDQUFDOztnQkFDdkMsYUFBYSxHQUFHLElBQUksb0JBQW9CLEVBQUU7WUFDOUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU87Ozs7WUFBQyxPQUFPLENBQUMsRUFBRTtnQkFDL0IsVUFBVSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ2xFLENBQUMsRUFBQyxDQUFDO1NBQ047UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUN0QixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tYW5kSXRlbVR5cGUgfSBmcm9tIFwiLi9Db21tYW5kSXRlbVR5cGVcIjtcbmltcG9ydCB7IElDb21tYW5kSXRlbSwgQ29tbWFuZEl0ZW1Db252ZXJ0b3IgfSBmcm9tIFwiLi9JQ29tbWFuZEl0ZW1cIjtcbmltcG9ydCB7IENvbmRpdGlvblR5cGUgfSBmcm9tIFwiLi9Db25kaXRpb25UeXBlXCI7XG5cbmV4cG9ydCBjbGFzcyBCcmFuY2hDb21tYW5kSXRlbSBpbXBsZW1lbnRzIElDb21tYW5kSXRlbSB7XG4gICAgSWQ6IHN0cmluZztcbiAgICBDb2RlOnN0cmluZztcbiAgICBOYW1lOiBzdHJpbmc7XG4gICAgQ29uZGl0aW9uVHlwZTogQ29uZGl0aW9uVHlwZTtcbiAgICBFeHByZXNzOiBzdHJpbmc7XG4gICAgSXRlbXM6IEFycmF5PElDb21tYW5kSXRlbT47XG5cbiAgICBHZXRJdGVtSWQoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuSWQ7XG4gICAgfVxuXG4gICAgR2V0SXRlbUNvZGUoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuQ29kZTtcbiAgICB9XG5cbiAgICBHZXRJdGVtTmFtZSgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5OYW1lO1xuICAgIH1cblxuICAgIEdldEl0ZW1UeXBlKCk6IENvbW1hbmRJdGVtVHlwZSB7XG4gICAgICAgIHJldHVybiBDb21tYW5kSXRlbVR5cGUuQnJhbmNoO1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIEJyYW5jaENvbW1hbmRJdGVtQ29udmVydG9yIHtcbiAgICBDb252ZXJ0Sk9iamVjdChvYmo6IEJyYW5jaENvbW1hbmRJdGVtKTogT2JqZWN0IHtcbiAgICAgICAgbGV0IGJyYW5jaEl0ZW0gPSBvYmogYXMgQnJhbmNoQ29tbWFuZEl0ZW07XG4gICAgICAgIGxldCBqb2JqID0gbmV3IE9iamVjdCgpO1xuICAgICAgICBqb2JqW1wiSWRcIl0gPSBicmFuY2hJdGVtLklkO1xuICAgICAgICBqb2JqW1wiQ29kZVwiXSA9IGJyYW5jaEl0ZW0uQ29kZTtcbiAgICAgICAgam9ialtcIk5hbWVcIl0gPSBicmFuY2hJdGVtLk5hbWU7XG4gICAgICAgIGpvYmpbXCJDb25kaXRpb25UeXBlXCJdID0gYnJhbmNoSXRlbS5Db25kaXRpb25UeXBlO1xuICAgICAgICBqb2JqW1wiRXhwcmVzc1wiXSA9IGJyYW5jaEl0ZW0uRXhwcmVzcztcbiAgICAgICAgaWYgKGJyYW5jaEl0ZW0uSXRlbXMgIT0gbnVsbCkge1xuICAgICAgICAgICAgbGV0IGl0ZW1BcnJheSA9IFtdO1xuICAgICAgICAgICAgbGV0IGl0ZW1Db252ZXJ0b3IgPSBuZXcgQ29tbWFuZEl0ZW1Db252ZXJ0b3IoKTtcbiAgICAgICAgICAgIGJyYW5jaEl0ZW0uSXRlbXMuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgICAgICAgICBpdGVtQXJyYXkucHVzaChpdGVtQ29udmVydG9yLkNvbnZlcnRKT2JqZWN0KGVsZW1lbnQpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgam9ialtcIkl0ZW1zXCJdPWl0ZW1BcnJheTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gam9iajtcbiAgICB9XG5cbiAgICBJbml0RnJvbUpvYmplY3QoanNvbk9iajogT2JqZWN0KTogQnJhbmNoQ29tbWFuZEl0ZW0ge1xuICAgICAgICBsZXQgYnJhbmNoSXRlbSA9IG5ldyBCcmFuY2hDb21tYW5kSXRlbSgpO1xuICAgICAgICBicmFuY2hJdGVtLklkID0ganNvbk9ialtcIklkXCJdO1xuICAgICAgICBicmFuY2hJdGVtLkNvZGUgPSBqc29uT2JqW1wiQ29kZVwiXTtcbiAgICAgICAgYnJhbmNoSXRlbS5OYW1lID0ganNvbk9ialtcIk5hbWVcIl07XG4gICAgICAgIGJyYW5jaEl0ZW0uQ29uZGl0aW9uVHlwZSA9IGpzb25PYmpbXCJDb25kaXRpb25UeXBlXCJdO1xuICAgICAgICBicmFuY2hJdGVtLkV4cHJlc3MgPSBqc29uT2JqW1wiRXhwcmVzc1wiXTtcbiAgICAgICAgaWYgKGpzb25PYmpbXCJJdGVtc1wiXSAhPSBudWxsKSB7XG4gICAgICAgICAgICBicmFuY2hJdGVtLkl0ZW1zPW5ldyBBcnJheTxJQ29tbWFuZEl0ZW0+KCk7XG4gICAgICAgICAgICBsZXQgaXRlbUNvbnZlcnRvciA9IG5ldyBDb21tYW5kSXRlbUNvbnZlcnRvcigpO1xuICAgICAgICAgICAganNvbk9ialtcIkl0ZW1zXCJdLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgICAgICAgICAgICAgYnJhbmNoSXRlbS5JdGVtcy5wdXNoKGl0ZW1Db252ZXJ0b3IuSW5pdEZyb21Kb2JqZWN0KGVsZW1lbnQpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBicmFuY2hJdGVtO1xuICAgIH1cbn1cbiJdfQ==