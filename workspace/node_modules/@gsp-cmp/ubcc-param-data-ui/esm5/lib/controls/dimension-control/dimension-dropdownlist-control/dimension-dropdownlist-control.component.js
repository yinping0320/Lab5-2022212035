/**
 * @fileoverview added by tsickle
 * Generated from: lib/controls/dimension-control/dimension-dropdownlist-control/dimension-dropdownlist-control.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { UbccEventBusService } from '../../../service/event-bus-service';
var DimensionDropdownlistControlComponent = /** @class */ (function () {
    function DimensionDropdownlistControlComponent(ebsService) {
        this.ebsService = ebsService;
        this.valueChangeEmit = new EventEmitter();
        this.enumerationItems = [];
        this.isMultiSelect = false;
        this.isEnumInfoLoad = false;
    }
    /**
     * @return {?}
     */
    DimensionDropdownlistControlComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.dimensionItem = this.dimensionItem || {};
        if (!this.isEnumInfoLoad) {
            this.enumConfigInit();
        }
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    DimensionDropdownlistControlComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (!this.isEnumInfoLoad) {
            this.enumConfigInit();
        }
    };
    /**
     * @return {?}
     */
    DimensionDropdownlistControlComponent.prototype.enumConfigInit = /**
     * @return {?}
     */
    function () {
        this.getEnumItems();
    };
    /**
     * @return {?}
     */
    DimensionDropdownlistControlComponent.prototype.getEnumItems = /**
     * @return {?}
     */
    function () {
        if (!this.dimensionItem || !this.dimensionItem.dataType) {
            return;
        }
        /** @type {?} */
        var enumType = (/** @type {?} */ (this.dimensionItem.dataType));
        this.get(enumType);
    };
    /**
     * @param {?} enumType
     * @return {?}
     */
    DimensionDropdownlistControlComponent.prototype.get = /**
     * @param {?} enumType
     * @return {?}
     */
    function (enumType) {
        var _this = this;
        if (!enumType || !enumType.enumerationItems) {
            return;
        }
        enumType.enumerationItems.map((/**
         * @param {?} x
         * @return {?}
         */
        function (x) { return _this.enumerationItems.push(x); }));
        this.isEnumInfoLoad = true;
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    DimensionDropdownlistControlComponent.prototype.valueChangeHandler = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.dimensionItem.value = $event.value;
        this.ebsService.ebs.emit(this.dimensionItem);
    };
    DimensionDropdownlistControlComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-dimension-dropdownlist-control',
                    template: "<div class=\"farris-form-controls-inline farris-group-wrap col-12\">\n    <div class=\"form-group farris-form-group\">\n      <label class=\"col-form-label col-4\">\n        <span class=\"farris-label-text\" style=\"float:right\">{{dimensionItem.name}}</span>\n      </label>\n      <div class=\"farris-input-wrap col-6\">\n        <farris-combo-list [idField]=\"'code'\" [textField]=\"'description'\" [data]=\"enumerationItems\" [multiSelect]=\"isMultiSelect\"\n          (valueChange)=\"valueChangeHandler($event)\">\n        </farris-combo-list>\n      </div>\n    </div>\n  </div>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    DimensionDropdownlistControlComponent.ctorParameters = function () { return [
        { type: UbccEventBusService }
    ]; };
    DimensionDropdownlistControlComponent.propDecorators = {
        dimensionItem: [{ type: Input }],
        valueChangeEmit: [{ type: Output }]
    };
    return DimensionDropdownlistControlComponent;
}());
export { DimensionDropdownlistControlComponent };
if (false) {
    /** @type {?} */
    DimensionDropdownlistControlComponent.prototype.dimensionItem;
    /** @type {?} */
    DimensionDropdownlistControlComponent.prototype.valueChangeEmit;
    /** @type {?} */
    DimensionDropdownlistControlComponent.prototype.enumerationItems;
    /** @type {?} */
    DimensionDropdownlistControlComponent.prototype.isMultiSelect;
    /** @type {?} */
    DimensionDropdownlistControlComponent.prototype.isEnumInfoLoad;
    /**
     * @type {?}
     * @private
     */
    DimensionDropdownlistControlComponent.prototype.ebsService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGltZW5zaW9uLWRyb3Bkb3dubGlzdC1jb250cm9sLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtY21wL3ViY2MtcGFyYW0tZGF0YS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9kaW1lbnNpb24tY29udHJvbC9kaW1lbnNpb24tZHJvcGRvd25saXN0LWNvbnRyb2wvZGltZW5zaW9uLWRyb3Bkb3dubGlzdC1jb250cm9sLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUE0QixNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpHLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBRXpFO0lBaUJJLCtDQUFvQixVQUErQjtRQUEvQixlQUFVLEdBQVYsVUFBVSxDQUFxQjtRQVJ6QyxvQkFBZSxHQUFtQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBRS9ELHFCQUFnQixHQUFHLEVBQUUsQ0FBQztRQUV0QixrQkFBYSxHQUFHLEtBQUssQ0FBQztRQUV0QixtQkFBYyxHQUFZLEtBQUssQ0FBQztJQUV1QixDQUFDOzs7O0lBRXhELHdEQUFROzs7SUFBUjtRQUNJLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsSUFBSSxFQUFFLENBQUM7UUFDOUMsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUU7WUFDdEIsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQ3pCO0lBQ0wsQ0FBQzs7Ozs7SUFFRCwyREFBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDOUIsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUU7WUFDdEIsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQ3pCO0lBQ0wsQ0FBQzs7OztJQUVELDhEQUFjOzs7SUFBZDtRQUNJLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN4QixDQUFDOzs7O0lBRUQsNERBQVk7OztJQUFaO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsRUFBRTtZQUNyRCxPQUFPO1NBQ1Y7O1lBQ0csUUFBUSxHQUFDLG1CQUFBLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxFQUFtQjtRQUMzRCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7Ozs7O0lBRUQsbURBQUc7Ozs7SUFBSCxVQUFJLFFBQXlCO1FBQTdCLGlCQU1DO1FBTEcsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsRUFBRTtZQUN6QyxPQUFPO1NBQ1Y7UUFDRCxRQUFRLENBQUMsZ0JBQWdCLENBQUMsR0FBRzs7OztRQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsS0FBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBN0IsQ0FBNkIsRUFBQyxDQUFDO1FBQ2xFLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO0lBQy9CLENBQUM7Ozs7O0lBRUQsa0VBQWtCOzs7O0lBQWxCLFVBQW1CLE1BQU07UUFDckIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEdBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUN0QyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ2pELENBQUM7O2dCQXZESixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLG9DQUFvQztvQkFDOUMsb2xCQUE4RDs7aUJBRWpFOzs7O2dCQU5RLG1CQUFtQjs7O2dDQVN2QixLQUFLO2tDQUVMLE1BQU07O0lBZ0RYLDRDQUFDO0NBQUEsQUF6REQsSUF5REM7U0FwRFkscUNBQXFDOzs7SUFFOUMsOERBQTRCOztJQUU1QixnRUFBK0Q7O0lBRS9ELGlFQUFzQjs7SUFFdEIsOERBQXNCOztJQUV0QiwrREFBZ0M7Ozs7O0lBRXBCLDJEQUF1QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzLCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRW51bWVyYXRpb25UeXBlIH0gZnJvbSAnQGVjcC1jYWYvY29tbW9uLXN0cnVjdHVyZSc7XG5pbXBvcnQgeyBVYmNjRXZlbnRCdXNTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZS9ldmVudC1idXMtc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnbGliLWRpbWVuc2lvbi1kcm9wZG93bmxpc3QtY29udHJvbCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2RpbWVuc2lvbi1kcm9wZG93bmxpc3QtY29udHJvbC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vZGltZW5zaW9uLWRyb3Bkb3dubGlzdC1jb250cm9sLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBEaW1lbnNpb25Ecm9wZG93bmxpc3RDb250cm9sQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0ICxPbkNoYW5nZXN7XG5cbiAgICBASW5wdXQoKSBkaW1lbnNpb25JdGVtOiBhbnk7XG5cbiAgICBAT3V0cHV0KCkgdmFsdWVDaGFuZ2VFbWl0OkV2ZW50RW1pdHRlcjxhbnk+PW5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAgIGVudW1lcmF0aW9uSXRlbXMgPSBbXTtcblxuICAgIGlzTXVsdGlTZWxlY3QgPSBmYWxzZTtcblxuICAgIGlzRW51bUluZm9Mb2FkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVic1NlcnZpY2U6IFViY2NFdmVudEJ1c1NlcnZpY2UpIHsgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuZGltZW5zaW9uSXRlbSA9IHRoaXMuZGltZW5zaW9uSXRlbSB8fCB7fTtcbiAgICAgICAgaWYgKCF0aGlzLmlzRW51bUluZm9Mb2FkKSB7XG4gICAgICAgICAgICB0aGlzLmVudW1Db25maWdJbml0KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XG4gICAgICAgIGlmICghdGhpcy5pc0VudW1JbmZvTG9hZCkge1xuICAgICAgICAgICAgdGhpcy5lbnVtQ29uZmlnSW5pdCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZW51bUNvbmZpZ0luaXQoKSB7XG4gICAgICAgIHRoaXMuZ2V0RW51bUl0ZW1zKCk7XG4gICAgfVxuXG4gICAgZ2V0RW51bUl0ZW1zKCkge1xuICAgICAgICBpZiAoIXRoaXMuZGltZW5zaW9uSXRlbSB8fCAhdGhpcy5kaW1lbnNpb25JdGVtLmRhdGFUeXBlKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGVudW1UeXBlPXRoaXMuZGltZW5zaW9uSXRlbS5kYXRhVHlwZSBhcyBFbnVtZXJhdGlvblR5cGU7XG4gICAgICAgIHRoaXMuZ2V0KGVudW1UeXBlKTtcbiAgICB9XG5cbiAgICBnZXQoZW51bVR5cGU6IEVudW1lcmF0aW9uVHlwZSkge1xuICAgICAgICBpZiAoIWVudW1UeXBlIHx8ICFlbnVtVHlwZS5lbnVtZXJhdGlvbkl0ZW1zKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgZW51bVR5cGUuZW51bWVyYXRpb25JdGVtcy5tYXAoeCA9PiB0aGlzLmVudW1lcmF0aW9uSXRlbXMucHVzaCh4KSk7XG4gICAgICAgIHRoaXMuaXNFbnVtSW5mb0xvYWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHZhbHVlQ2hhbmdlSGFuZGxlcigkZXZlbnQpIHtcbiAgICAgICAgdGhpcy5kaW1lbnNpb25JdGVtLnZhbHVlPSRldmVudC52YWx1ZTtcbiAgICAgICAgdGhpcy5lYnNTZXJ2aWNlLmVicy5lbWl0KHRoaXMuZGltZW5zaW9uSXRlbSk7XG4gICAgfVxuXG59XG4iXX0=