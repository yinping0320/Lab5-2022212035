/**
 * @fileoverview added by tsickle
 * Generated from: lib/controls/dimension-control/dimension-lookup-control/dimension-lookup-control.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';
import { ServerSideToken } from '@farris/ui-lookup';
import { LookUpHttpService } from '../../../service/lookup-http-service';
import { LookUpBindingFields } from '../../../common/look-up-binding-fields';
import { UbccEventBusService } from '../../../service/event-bus-service';
/** @type {?} */
var BCC_HELP_URL = "/api/runtime/bcc/v1.0/param/help/{helpId}";
var DimensionLookupControlComponent = /** @class */ (function () {
    function DimensionLookupControlComponent(metadataRTService, ebsService) {
        this.metadataRTService = metadataRTService;
        this.ebsService = ebsService;
        this.isSingleSelect = true;
        this.isHelpInfoLoad = false;
        this.helpUrl = BCC_HELP_URL;
    }
    /**
     * @return {?}
     */
    DimensionLookupControlComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.dimensionItem = this.dimensionItem || {};
        this.bindingFields = this.bindingFields || new LookUpBindingFields();
        this.helpConfigInit();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    DimensionLookupControlComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        this.helpConfigInit();
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    DimensionLookupControlComponent.prototype.selectedHelpHandler = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if (!$event) {
            return;
        }
        this.dimensionItem.value = '';
        this.dimensionItem.value = $event[this.bindingFields.idField];
        this.ebsService.ebs.emit(this.dimensionItem);
    };
    /**
     * @private
     * @return {?}
     */
    DimensionLookupControlComponent.prototype.helpConfigInit = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.isHelpInfoLoad || !this.dimensionItem || !this.dimensionItem.dataType) {
            return;
        }
        /** @type {?} */
        var helpType = (/** @type {?} */ (this.dimensionItem.dataType));
        this.loadDataFromMetadata(helpType);
    };
    /**
     * @private
     * @param {?} helpType
     * @return {?}
     */
    DimensionLookupControlComponent.prototype.loadDataFromMetadata = /**
     * @private
     * @param {?} helpType
     * @return {?}
     */
    function (helpType) {
        var _this = this;
        if (!helpType.helpId) {
            return;
        }
        this.metadataRTService.GetMetadataRT(helpType.helpId).subscribe((/**
         * @param {?} metadataDto
         * @return {?}
         */
        function (metadataDto) {
            /** @type {?} */
            var helpMetadata = JSON.parse(metadataDto.content);
            _this.setHelpInfo(helpMetadata);
            _this.isHelpInfoLoad = true;
        }));
    };
    /**
     * @param {?} helpMetadata
     * @return {?}
     */
    DimensionLookupControlComponent.prototype.setHelpInfo = /**
     * @param {?} helpMetadata
     * @return {?}
     */
    function (helpMetadata) {
        this.helpUrl = BCC_HELP_URL.replace('{helpId}', helpMetadata.id);
        this.bindingFields.idField = helpMetadata.idField;
        this.bindingFields.textField = helpMetadata.textField;
        this.bindingFields.valueField = helpMetadata.valueField;
        this.bindingFields.displayType = helpMetadata.displayType;
    };
    DimensionLookupControlComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-dimension-lookup-control',
                    template: "<div class=\"farris-form-controls-inline farris-group-wrap col-12\">\n  <div class=\"form-group farris-form-group\">\n    <label class=\"col-form-label col-4\">\n      <span class=\"farris-label-text\" style=\"float:right\">{{dimensionItem.name}}</span>\n    </label>\n    <div class=\"farris-input-wrap col-6\">\n      <farris-lookup-grid [editable]=\"false\" (selectedData)=\"selectedHelpHandler($event)\" [uri]=\"helpUrl\" [idField]=\"bindingFields.idField\"\n        [textField]=\"bindingFields.textField\" [valueField]=\"bindingFields.valueField\" [enableClear]=\"false\" \n        [(ngModel)]=\"dimensionItem.valueText\" name=\"{{dimensionItem.code}}\"\n        [displayType]=\"bindingFields.displayType\" [pagination]=\"true\" [singleSelect]=\"isSingleSelect\" required>\n      </farris-lookup-grid>\n    </div>\n  </div>\n</div>",
                    providers: [{ provide: ServerSideToken, useClass: LookUpHttpService }, GSPMetadataRTService],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    DimensionLookupControlComponent.ctorParameters = function () { return [
        { type: GSPMetadataRTService },
        { type: UbccEventBusService }
    ]; };
    DimensionLookupControlComponent.propDecorators = {
        dimensionItem: [{ type: Input }]
    };
    return DimensionLookupControlComponent;
}());
export { DimensionLookupControlComponent };
if (false) {
    /** @type {?} */
    DimensionLookupControlComponent.prototype.dimensionItem;
    /** @type {?} */
    DimensionLookupControlComponent.prototype.isSingleSelect;
    /** @type {?} */
    DimensionLookupControlComponent.prototype.isHelpInfoLoad;
    /** @type {?} */
    DimensionLookupControlComponent.prototype.bindingFields;
    /** @type {?} */
    DimensionLookupControlComponent.prototype.helpUrl;
    /**
     * @type {?}
     * @private
     */
    DimensionLookupControlComponent.prototype.metadataRTService;
    /**
     * @type {?}
     * @private
     */
    DimensionLookupControlComponent.prototype.ebsService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGltZW5zaW9uLWxvb2t1cC1jb250cm9sLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtY21wL3ViY2MtcGFyYW0tZGF0YS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9kaW1lbnNpb24tY29udHJvbC9kaW1lbnNpb24tbG9va3VwLWNvbnRyb2wvZGltZW5zaW9uLWxvb2t1cC1jb250cm9sLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBdUMsTUFBTSxlQUFlLENBQUM7QUFFekcsT0FBTyxFQUFFLG9CQUFvQixFQUFlLE1BQU0sOEJBQThCLENBQUM7QUFDakYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDOztJQUVuRSxZQUFZLEdBQUMsMkNBQTJDO0FBRTlEO0lBa0JJLHlDQUNZLGlCQUF1QyxFQUN2QyxVQUErQjtRQUQvQixzQkFBaUIsR0FBakIsaUJBQWlCLENBQXNCO1FBQ3ZDLGVBQVUsR0FBVixVQUFVLENBQXFCO1FBVjNDLG1CQUFjLEdBQVksSUFBSSxDQUFDO1FBRS9CLG1CQUFjLEdBQVksS0FBSyxDQUFDO1FBSWhDLFlBQU8sR0FBVyxZQUFZLENBQUM7SUFJZ0IsQ0FBQzs7OztJQUVoRCxrREFBUTs7O0lBQVI7UUFDSSxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxhQUFhLElBQUksRUFBRSxDQUFDO1FBQzlDLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsSUFBSSxJQUFJLG1CQUFtQixFQUFFLENBQUM7UUFDckUsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQzFCLENBQUM7Ozs7O0lBRUQscURBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCO1FBQzlCLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUMxQixDQUFDOzs7OztJQUVELDZEQUFtQjs7OztJQUFuQixVQUFvQixNQUFNO1FBQ3RCLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDVCxPQUFPO1NBQ1Y7UUFDRCxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDOUIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDOUQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7OztJQUVPLHdEQUFjOzs7O0lBQXRCO1FBQ0ksSUFBSSxJQUFJLENBQUMsY0FBYyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxFQUFFO1lBQzVFLE9BQU87U0FDVjs7WUFDRyxRQUFRLEdBQUUsbUJBQUEsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLEVBQVk7UUFDckQsSUFBSSxDQUFDLG9CQUFvQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7Ozs7OztJQUVPLDhEQUFvQjs7Ozs7SUFBNUIsVUFBNkIsUUFBa0I7UUFBL0MsaUJBU0M7UUFSRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRTtZQUNsQixPQUFPO1NBQ1Y7UUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxTQUFTOzs7O1FBQUMsVUFBQyxXQUF3Qjs7Z0JBQ2pGLFlBQVksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUM7WUFDbEQsS0FBSSxDQUFDLFdBQVcsQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUMvQixLQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztRQUMvQixDQUFDLEVBQUMsQ0FBQztJQUNQLENBQUM7Ozs7O0lBRUQscURBQVc7Ozs7SUFBWCxVQUFZLFlBQWlCO1FBQ3pCLElBQUksQ0FBQyxPQUFPLEdBQUcsWUFBWSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ2pFLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxHQUFHLFlBQVksQ0FBQyxPQUFPLENBQUM7UUFDbEQsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLEdBQUcsWUFBWSxDQUFDLFNBQVMsQ0FBQztRQUN0RCxJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsR0FBRyxZQUFZLENBQUMsVUFBVSxDQUFDO1FBQ3hELElBQUksQ0FBQyxhQUFhLENBQUMsV0FBVyxHQUFHLFlBQVksQ0FBQyxXQUFXLENBQUM7SUFDOUQsQ0FBQzs7Z0JBbEVKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsOEJBQThCO29CQUN4QyxnMUJBQXdEO29CQUV4RCxTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLGlCQUFpQixFQUFFLEVBQUUsb0JBQW9CLENBQUM7O2lCQUMvRjs7OztnQkFiUSxvQkFBb0I7Z0JBSXBCLG1CQUFtQjs7O2dDQVl2QixLQUFLOztJQTJEVixzQ0FBQztDQUFBLEFBbkVELElBbUVDO1NBN0RZLCtCQUErQjs7O0lBRXhDLHdEQUE0Qjs7SUFFNUIseURBQStCOztJQUUvQix5REFBZ0M7O0lBRWhDLHdEQUFtQzs7SUFFbkMsa0RBQStCOzs7OztJQUczQiw0REFBK0M7Ozs7O0lBQy9DLHFEQUF1QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBPbkNoYW5nZXMsIElucHV0LCBTaW1wbGVDaGFuZ2VzLCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSGVscFR5cGUgfSBmcm9tICdAZ3NwLWNtcC91YmNjLXBhcmFtLXZvJztcbmltcG9ydCB7IEdTUE1ldGFkYXRhUlRTZXJ2aWNlLCBNZXRhZGF0YUR0byB9IGZyb20gJ0Bnc3AtbGNtL21ldGFkYXRhcnQtc2VsZWN0b3InO1xuaW1wb3J0IHsgU2VydmVyU2lkZVRva2VuIH0gZnJvbSAnQGZhcnJpcy91aS1sb29rdXAnO1xuaW1wb3J0IHsgTG9va1VwSHR0cFNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlL2xvb2t1cC1odHRwLXNlcnZpY2UnO1xuaW1wb3J0IHsgTG9va1VwQmluZGluZ0ZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9sb29rLXVwLWJpbmRpbmctZmllbGRzJztcbmltcG9ydCB7IFViY2NFdmVudEJ1c1NlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlL2V2ZW50LWJ1cy1zZXJ2aWNlJztcblxuY29uc3QgQkNDX0hFTFBfVVJMPWAvYXBpL3J1bnRpbWUvYmNjL3YxLjAvcGFyYW0vaGVscC97aGVscElkfWA7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnbGliLWRpbWVuc2lvbi1sb29rdXAtY29udHJvbCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2RpbWVuc2lvbi1sb29rdXAtY29udHJvbC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vZGltZW5zaW9uLWxvb2t1cC1jb250cm9sLmNvbXBvbmVudC5jc3MnXSxcbiAgICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFNlcnZlclNpZGVUb2tlbiwgdXNlQ2xhc3M6IExvb2tVcEh0dHBTZXJ2aWNlIH0sIEdTUE1ldGFkYXRhUlRTZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBEaW1lbnNpb25Mb29rdXBDb250cm9sQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuXG4gICAgQElucHV0KCkgZGltZW5zaW9uSXRlbTogYW55O1xuXG4gICAgaXNTaW5nbGVTZWxlY3Q6IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgaXNIZWxwSW5mb0xvYWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIGJpbmRpbmdGaWVsZHM6IExvb2tVcEJpbmRpbmdGaWVsZHM7XG5cbiAgICBoZWxwVXJsOiBzdHJpbmcgPSBCQ0NfSEVMUF9VUkw7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSBtZXRhZGF0YVJUU2VydmljZTogR1NQTWV0YWRhdGFSVFNlcnZpY2UsXG4gICAgICAgIHByaXZhdGUgZWJzU2VydmljZTogVWJjY0V2ZW50QnVzU2VydmljZSkgeyB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5kaW1lbnNpb25JdGVtID0gdGhpcy5kaW1lbnNpb25JdGVtIHx8IHt9O1xuICAgICAgICB0aGlzLmJpbmRpbmdGaWVsZHMgPSB0aGlzLmJpbmRpbmdGaWVsZHMgfHwgbmV3IExvb2tVcEJpbmRpbmdGaWVsZHMoKTtcbiAgICAgICAgdGhpcy5oZWxwQ29uZmlnSW5pdCgpO1xuICAgIH1cblxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5oZWxwQ29uZmlnSW5pdCgpO1xuICAgIH1cblxuICAgIHNlbGVjdGVkSGVscEhhbmRsZXIoJGV2ZW50KSB7XG4gICAgICAgIGlmICghJGV2ZW50KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5kaW1lbnNpb25JdGVtLnZhbHVlID0gJyc7XG4gICAgICAgIHRoaXMuZGltZW5zaW9uSXRlbS52YWx1ZSA9ICRldmVudFt0aGlzLmJpbmRpbmdGaWVsZHMuaWRGaWVsZF07XG4gICAgICAgIHRoaXMuZWJzU2VydmljZS5lYnMuZW1pdCh0aGlzLmRpbWVuc2lvbkl0ZW0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgaGVscENvbmZpZ0luaXQoKSB7XG4gICAgICAgIGlmICh0aGlzLmlzSGVscEluZm9Mb2FkIHx8ICF0aGlzLmRpbWVuc2lvbkl0ZW0gfHwgIXRoaXMuZGltZW5zaW9uSXRlbS5kYXRhVHlwZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBoZWxwVHlwZT0gdGhpcy5kaW1lbnNpb25JdGVtLmRhdGFUeXBlIGFzIEhlbHBUeXBlO1xuICAgICAgICB0aGlzLmxvYWREYXRhRnJvbU1ldGFkYXRhKGhlbHBUeXBlKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGxvYWREYXRhRnJvbU1ldGFkYXRhKGhlbHBUeXBlOiBIZWxwVHlwZSkge1xuICAgICAgICBpZiAoIWhlbHBUeXBlLmhlbHBJZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubWV0YWRhdGFSVFNlcnZpY2UuR2V0TWV0YWRhdGFSVChoZWxwVHlwZS5oZWxwSWQpLnN1YnNjcmliZSgobWV0YWRhdGFEdG86IE1ldGFkYXRhRHRvKSA9PiB7XG4gICAgICAgICAgICBsZXQgaGVscE1ldGFkYXRhID0gSlNPTi5wYXJzZShtZXRhZGF0YUR0by5jb250ZW50KTtcbiAgICAgICAgICAgIHRoaXMuc2V0SGVscEluZm8oaGVscE1ldGFkYXRhKTtcbiAgICAgICAgICAgIHRoaXMuaXNIZWxwSW5mb0xvYWQgPSB0cnVlO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBzZXRIZWxwSW5mbyhoZWxwTWV0YWRhdGE6IGFueSkge1xuICAgICAgICB0aGlzLmhlbHBVcmwgPSBCQ0NfSEVMUF9VUkwucmVwbGFjZSgne2hlbHBJZH0nLCBoZWxwTWV0YWRhdGEuaWQpO1xuICAgICAgICB0aGlzLmJpbmRpbmdGaWVsZHMuaWRGaWVsZCA9IGhlbHBNZXRhZGF0YS5pZEZpZWxkO1xuICAgICAgICB0aGlzLmJpbmRpbmdGaWVsZHMudGV4dEZpZWxkID0gaGVscE1ldGFkYXRhLnRleHRGaWVsZDtcbiAgICAgICAgdGhpcy5iaW5kaW5nRmllbGRzLnZhbHVlRmllbGQgPSBoZWxwTWV0YWRhdGEudmFsdWVGaWVsZDtcbiAgICAgICAgdGhpcy5iaW5kaW5nRmllbGRzLmRpc3BsYXlUeXBlID0gaGVscE1ldGFkYXRhLmRpc3BsYXlUeXBlO1xuICAgIH1cbn1cbiJdfQ==