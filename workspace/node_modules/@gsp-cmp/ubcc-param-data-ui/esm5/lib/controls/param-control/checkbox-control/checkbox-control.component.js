/**
 * @fileoverview added by tsickle
 * Generated from: lib/controls/param-control/checkbox-control/checkbox-control.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { UbccParamDataUtils } from '../../../utils/param-data-utils';
var CheckboxControlComponent = /** @class */ (function () {
    function CheckboxControlComponent(service) {
        this.service = service;
        this.canEdit = true;
    }
    /**
     * @return {?}
     */
    CheckboxControlComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.param = this.param || {};
        this.checkboxId = this.service.newGuid();
    };
    /**
     * @return {?}
     */
    CheckboxControlComponent.prototype.getValue = /**
     * @return {?}
     */
    function () {
        if (!this.param || !this.param.value) {
            return false;
        }
        /** @type {?} */
        var value = String(this.param.value).toLowerCase();
        return value === 'true' ? true : false;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    CheckboxControlComponent.prototype.enable = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.param.value = value;
    };
    /**
     * @return {?}
     */
    CheckboxControlComponent.prototype.isReadonly = /**
     * @return {?}
     */
    function () {
        if (!this.canEdit) {
            return true;
        }
        else {
            return !this.param || !this.param.readonly ? false : true;
        }
    };
    /**
     * @return {?}
     */
    CheckboxControlComponent.prototype.show = /**
     * @return {?}
     */
    function () {
        return !this.param || !this.param.description ? false : true;
    };
    CheckboxControlComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-checkbox-control',
                    template: "<div class=\"farris-form-controls-inline farris-group-wrap col-12\">\n  <div class=\"form-group farris-form-group\">\n    <label class=\"col-form-label col-4\">\n      <span class=\"farris-label-text\" style=\"float:right\">{{param.name}}</span>\n    </label>\n    <div class=\"farris-input-wrap col-6\">\n      <div class=\"custom-control custom-checkbox\">\n        <input [checked]=\"getValue()\" class=\"custom-control-input\" id=\"{{checkboxId}}Checkbox\" \n          type=\"checkbox\" (click)=\"enable($event.target.checked)\" [disabled]=\"isReadonly()\">\n        <label class=\"custom-control-label\" for=\"{{checkboxId}}Checkbox\"></label>\n      </div>\n    </div>\n    <span *ngIf=\"show()\" farrisTooltip [placement]=\"'right-top'\" [content]=\"param.description\" class=\"f-icon f-icon-info\"></span>\n  </div>\n</div>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    CheckboxControlComponent.ctorParameters = function () { return [
        { type: UbccParamDataUtils }
    ]; };
    CheckboxControlComponent.propDecorators = {
        param: [{ type: Input }],
        canEdit: [{ type: Input }]
    };
    return CheckboxControlComponent;
}());
export { CheckboxControlComponent };
if (false) {
    /** @type {?} */
    CheckboxControlComponent.prototype.param;
    /** @type {?} */
    CheckboxControlComponent.prototype.canEdit;
    /** @type {?} */
    CheckboxControlComponent.prototype.checkboxId;
    /**
     * @type {?}
     * @private
     */
    CheckboxControlComponent.prototype.service;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gtY29udHJvbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWNtcC91YmNjLXBhcmFtLWRhdGEtdWkvIiwic291cmNlcyI6WyJsaWIvY29udHJvbHMvcGFyYW0tY29udHJvbC9jaGVja2JveC1jb250cm9sL2NoZWNrYm94LWNvbnRyb2wuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFFckU7SUFhSSxrQ0FBb0IsT0FBMEI7UUFBMUIsWUFBTyxHQUFQLE9BQU8sQ0FBbUI7UUFKckMsWUFBTyxHQUFTLElBQUksQ0FBQztJQUlvQixDQUFDOzs7O0lBRW5ELDJDQUFROzs7SUFBUjtRQUNJLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7UUFDOUIsSUFBSSxDQUFDLFVBQVUsR0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzNDLENBQUM7Ozs7SUFFRCwyQ0FBUTs7O0lBQVI7UUFDSSxJQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssSUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFDO1lBQzlCLE9BQU8sS0FBSyxDQUFDO1NBQ2hCOztZQUNHLEtBQUssR0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxXQUFXLEVBQUU7UUFDaEQsT0FBTyxLQUFLLEtBQUcsTUFBTSxDQUFBLENBQUMsQ0FBQSxJQUFJLENBQUEsQ0FBQyxDQUFBLEtBQUssQ0FBQztJQUNyQyxDQUFDOzs7OztJQUVELHlDQUFNOzs7O0lBQU4sVUFBTyxLQUFLO1FBQ1IsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQzdCLENBQUM7Ozs7SUFFRCw2Q0FBVTs7O0lBQVY7UUFDSSxJQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBQztZQUNiLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7YUFDRztZQUNBLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUEsQ0FBQyxDQUFBLEtBQUssQ0FBQSxDQUFDLENBQUEsSUFBSSxDQUFDO1NBQ3ZEO0lBQ0wsQ0FBQzs7OztJQUVELHVDQUFJOzs7SUFBSjtRQUNJLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUEsQ0FBQyxDQUFBLEtBQUssQ0FBQSxDQUFDLENBQUEsSUFBSSxDQUFDO0lBQzNELENBQUM7O2dCQTNDSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLHNCQUFzQjtvQkFDaEMsMjBCQUFnRDs7aUJBRW5EOzs7O2dCQU5RLGtCQUFrQjs7O3dCQVN0QixLQUFLOzBCQUVMLEtBQUs7O0lBb0NWLCtCQUFDO0NBQUEsQUE3Q0QsSUE2Q0M7U0F4Q1ksd0JBQXdCOzs7SUFFakMseUNBQW9COztJQUVwQiwyQ0FBOEI7O0lBRTlCLDhDQUFrQjs7Ozs7SUFFTiwyQ0FBa0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFViY2NQYXJhbURhdGFVdGlscyB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3BhcmFtLWRhdGEtdXRpbHMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2xpYi1jaGVja2JveC1jb250cm9sJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vY2hlY2tib3gtY29udHJvbC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vY2hlY2tib3gtY29udHJvbC5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgQ2hlY2tib3hDb250cm9sQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIEBJbnB1dCgpIHBhcmFtOiBhbnk7XG5cbiAgICBASW5wdXQoKSBjYW5FZGl0OmJvb2xlYW49dHJ1ZTtcblxuICAgIGNoZWNrYm94SWQ6c3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBzZXJ2aWNlOlViY2NQYXJhbURhdGFVdGlscykgeyB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5wYXJhbSA9IHRoaXMucGFyYW0gfHwge307XG4gICAgICAgIHRoaXMuY2hlY2tib3hJZD10aGlzLnNlcnZpY2UubmV3R3VpZCgpO1xuICAgIH1cblxuICAgIGdldFZhbHVlKCl7XG4gICAgICAgIGlmKCF0aGlzLnBhcmFtfHwhdGhpcy5wYXJhbS52YWx1ZSl7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHZhbHVlPVN0cmluZyh0aGlzLnBhcmFtLnZhbHVlKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICByZXR1cm4gdmFsdWU9PT0ndHJ1ZSc/dHJ1ZTpmYWxzZTtcbiAgICB9XG5cbiAgICBlbmFibGUodmFsdWUpIHtcbiAgICAgICAgdGhpcy5wYXJhbS52YWx1ZSA9IHZhbHVlO1xuICAgIH1cblxuICAgIGlzUmVhZG9ubHkoKXtcbiAgICAgICAgaWYoIXRoaXMuY2FuRWRpdCl7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNle1xuICAgICAgICAgICAgcmV0dXJuICF0aGlzLnBhcmFtfHwhdGhpcy5wYXJhbS5yZWFkb25seT9mYWxzZTp0cnVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2hvdygpe1xuICAgICAgICByZXR1cm4gIXRoaXMucGFyYW18fCF0aGlzLnBhcmFtLmRlc2NyaXB0aW9uP2ZhbHNlOnRydWU7XG4gICAgfVxuXG59XG4iXX0=