/**
 * @fileoverview added by tsickle
 * Generated from: lib/ubcc-param-dimension-ui/ubcc-param-dimension-ui.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
import { DataTypeExtensionConst } from '@gsp-cmp/ubcc-param-vo';
import { DataTypeConst } from '@ecp-caf/common-structure';
export class UbccParamDimensionUiComponent {
    constructor() {
        this.dimensionItemDatas = [];
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} dimensionItem
     * @return {?}
     */
    getControlType(dimensionItem) {
        if (!dimensionItem || !dimensionItem.dataType || !dimensionItem.dataType.getKind()) {
            return;
        }
        /** @type {?} */
        let kind = dimensionItem.dataType.getKind();
        switch (kind) {
            case DataTypeConst.DEFAULT_PRIMITIVE:
                return 'input';
            case DataTypeConst.DEFAULT_ENUMERATION:
                return 'dropdownlist';
            case DataTypeExtensionConst.HELP_TYPE:
                return 'lookup';
            default:
                return 'input';
        }
    }
}
UbccParamDimensionUiComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-ubcc-param-dimension-ui',
                template: "<farris-section [mainTitle]=\"'\u7EF4\u5EA6\u4FE1\u606F'\" [enableMaximize]=\"false\">\n  <div *ngFor=\"let item of dimensionItemDatas;let i=index;\" style=\"margin-top: 10px;\">\n    <div class=\"col-12\" [ngSwitch]=\"getControlType(dimensionItemDatas[i])\">\n      <lib-dimension-dropdownlist-control *ngSwitchCase=\"'dropdownlist'\" [(dimensionItem)]=\"dimensionItemDatas[i]\"></lib-dimension-dropdownlist-control>\n      <lib-dimension-lookup-control *ngSwitchCase=\"'lookup'\" [(dimensionItem)]=\"dimensionItemDatas[i]\"></lib-dimension-lookup-control>\n      <lib-dimension-input-control *ngSwitchDefault [(dimensionItem)]=\"dimensionItemDatas[i]\"></lib-dimension-input-control>\n    </div>\n  </div>\n</farris-section>",
                encapsulation: ViewEncapsulation.None,
                styles: [":host{display:flex;flex-direction:column;flex:1}.f-section-header,lib-ubcc-param-dimension-ui .f-section-extend{margin:0 0 .25rem}"]
            }] }
];
/** @nocollapse */
UbccParamDimensionUiComponent.ctorParameters = () => [];
UbccParamDimensionUiComponent.propDecorators = {
    dimensionItemDatas: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    UbccParamDimensionUiComponent.prototype.dimensionItemDatas;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWJjYy1wYXJhbS1kaW1lbnNpb24tdWkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1jbXAvdWJjYy1wYXJhbS1kYXRhLXVpLyIsInNvdXJjZXMiOlsibGliL3ViY2MtcGFyYW0tZGltZW5zaW9uLXVpL3ViY2MtcGFyYW0tZGltZW5zaW9uLXVpLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVFLE9BQU8sRUFBaUIsc0JBQXNCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUMvRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFRMUQsTUFBTSxPQUFPLDZCQUE2QjtJQUl0QztRQUZTLHVCQUFrQixHQUFNLEVBQUUsQ0FBQztJQUVwQixDQUFDOzs7O0lBRWpCLFFBQVE7SUFFUixDQUFDOzs7OztJQUVELGNBQWMsQ0FBQyxhQUE0QjtRQUN2QyxJQUFJLENBQUMsYUFBYSxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLEVBQUU7WUFDaEYsT0FBTztTQUNWOztZQUNHLElBQUksR0FBRyxhQUFhLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRTtRQUMzQyxRQUFRLElBQUksRUFBRTtZQUNWLEtBQUssYUFBYSxDQUFDLGlCQUFpQjtnQkFDaEMsT0FBTyxPQUFPLENBQUM7WUFDbkIsS0FBSyxhQUFhLENBQUMsbUJBQW1CO2dCQUNsQyxPQUFPLGNBQWMsQ0FBQztZQUMxQixLQUFLLHNCQUFzQixDQUFDLFNBQVM7Z0JBQ2pDLE9BQU8sUUFBUSxDQUFDO1lBQ3BCO2dCQUNJLE9BQU8sT0FBTyxDQUFDO1NBQ3RCO0lBQ0wsQ0FBQzs7O1lBL0JKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsNkJBQTZCO2dCQUN2QyxrdUJBQXVEO2dCQUV2RCxhQUFhLEVBQUMsaUJBQWlCLENBQUMsSUFBSTs7YUFDdkM7Ozs7O2lDQUdJLEtBQUs7Ozs7SUFBTiwyREFBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEaW1lbnNpb25JdGVtLCBEYXRhVHlwZUV4dGVuc2lvbkNvbnN0IH0gZnJvbSAnQGdzcC1jbXAvdWJjYy1wYXJhbS12byc7XG5pbXBvcnQgeyBEYXRhVHlwZUNvbnN0IH0gZnJvbSAnQGVjcC1jYWYvY29tbW9uLXN0cnVjdHVyZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnbGliLXViY2MtcGFyYW0tZGltZW5zaW9uLXVpJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vdWJjYy1wYXJhbS1kaW1lbnNpb24tdWkuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL3ViY2MtcGFyYW0tZGltZW5zaW9uLXVpLmNvbXBvbmVudC5jc3MnXSxcbiAgICBlbmNhcHN1bGF0aW9uOlZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgVWJjY1BhcmFtRGltZW5zaW9uVWlDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gICAgQElucHV0KCkgZGltZW5zaW9uSXRlbURhdGFzOiBhbnk9W107XG5cbiAgICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgXG4gICAgfVxuXG4gICAgZ2V0Q29udHJvbFR5cGUoZGltZW5zaW9uSXRlbTogRGltZW5zaW9uSXRlbSkge1xuICAgICAgICBpZiAoIWRpbWVuc2lvbkl0ZW0gfHwgIWRpbWVuc2lvbkl0ZW0uZGF0YVR5cGUgfHwgIWRpbWVuc2lvbkl0ZW0uZGF0YVR5cGUuZ2V0S2luZCgpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGtpbmQgPSBkaW1lbnNpb25JdGVtLmRhdGFUeXBlLmdldEtpbmQoKTtcbiAgICAgICAgc3dpdGNoIChraW5kKSB7XG4gICAgICAgICAgICBjYXNlIERhdGFUeXBlQ29uc3QuREVGQVVMVF9QUklNSVRJVkU6XG4gICAgICAgICAgICAgICAgcmV0dXJuICdpbnB1dCc7XG4gICAgICAgICAgICBjYXNlIERhdGFUeXBlQ29uc3QuREVGQVVMVF9FTlVNRVJBVElPTjpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2Ryb3Bkb3dubGlzdCc7XG4gICAgICAgICAgICBjYXNlIERhdGFUeXBlRXh0ZW5zaW9uQ29uc3QuSEVMUF9UWVBFOlxuICAgICAgICAgICAgICAgIHJldHVybiAnbG9va3VwJztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuICdpbnB1dCc7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cbiJdfQ==