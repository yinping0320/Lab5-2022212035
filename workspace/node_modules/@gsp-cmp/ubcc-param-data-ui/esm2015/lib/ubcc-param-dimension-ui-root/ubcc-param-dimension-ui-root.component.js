/**
 * @fileoverview added by tsickle
 * Generated from: lib/ubcc-param-dimension-ui-root/ubcc-param-dimension-ui-root.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { UbccParamTemplate } from '@gsp-cmp/ubcc-param-vo';
export class UbccParamDimensionUiRootComponent {
    constructor() {
        this.dimensionItemDatas = [];
        this.paramDataItems = [];
        this.canEdit = true;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.template = this.template || new UbccParamTemplate();
    }
}
UbccParamDimensionUiRootComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-ubcc-param-dimension-ui-root',
                template: "\n<lib-ubcc-param-dimension-ui [(dimensionItemDatas)]=\"dimensionItemDatas\"></lib-ubcc-param-dimension-ui>\n<lib-ubcc-param-data-ui [canEdit]=\"canEdit\" [(template)]=\"template\" [(paramDataItems)]=\"paramDataItems\"></lib-ubcc-param-data-ui>",
                styles: [""]
            }] }
];
/** @nocollapse */
UbccParamDimensionUiRootComponent.ctorParameters = () => [];
UbccParamDimensionUiRootComponent.propDecorators = {
    template: [{ type: Input }],
    dimensionItemDatas: [{ type: Input }],
    paramDataItems: [{ type: Input }],
    canEdit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    UbccParamDimensionUiRootComponent.prototype.template;
    /** @type {?} */
    UbccParamDimensionUiRootComponent.prototype.dimensionItemDatas;
    /** @type {?} */
    UbccParamDimensionUiRootComponent.prototype.paramDataItems;
    /** @type {?} */
    UbccParamDimensionUiRootComponent.prototype.canEdit;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWJjYy1wYXJhbS1kaW1lbnNpb24tdWktcm9vdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWNtcC91YmNjLXBhcmFtLWRhdGEtdWkvIiwic291cmNlcyI6WyJsaWIvdWJjYy1wYXJhbS1kaW1lbnNpb24tdWktcm9vdC91YmNjLXBhcmFtLWRpbWVuc2lvbi11aS1yb290LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBTzNELE1BQU0sT0FBTyxpQ0FBaUM7SUFVMUM7UUFOUyx1QkFBa0IsR0FBTSxFQUFFLENBQUM7UUFFM0IsbUJBQWMsR0FBSyxFQUFFLENBQUM7UUFFdEIsWUFBTyxHQUFTLElBQUksQ0FBQztJQUVkLENBQUM7Ozs7SUFFakIsUUFBUTtRQUNKLElBQUksQ0FBQyxRQUFRLEdBQUMsSUFBSSxDQUFDLFFBQVEsSUFBRSxJQUFJLGlCQUFpQixFQUFFLENBQUM7SUFDekQsQ0FBQzs7O1lBbkJKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsa0NBQWtDO2dCQUM1QyxnUUFBNEQ7O2FBRS9EOzs7Ozt1QkFHSSxLQUFLO2lDQUVMLEtBQUs7NkJBRUwsS0FBSztzQkFFTCxLQUFLOzs7O0lBTk4scURBQXFDOztJQUVyQywrREFBb0M7O0lBRXBDLDJEQUErQjs7SUFFL0Isb0RBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBVYmNjUGFyYW1UZW1wbGF0ZSB9IGZyb20gJ0Bnc3AtY21wL3ViY2MtcGFyYW0tdm8nO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2xpYi11YmNjLXBhcmFtLWRpbWVuc2lvbi11aS1yb290JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vdWJjYy1wYXJhbS1kaW1lbnNpb24tdWktcm9vdC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vdWJjYy1wYXJhbS1kaW1lbnNpb24tdWktcm9vdC5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVWJjY1BhcmFtRGltZW5zaW9uVWlSb290Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIEBJbnB1dCgpIHRlbXBsYXRlOiBVYmNjUGFyYW1UZW1wbGF0ZTtcblxuICAgIEBJbnB1dCgpIGRpbWVuc2lvbkl0ZW1EYXRhczogYW55PVtdO1xuXG4gICAgQElucHV0KCkgcGFyYW1EYXRhSXRlbXM6YW55PVtdO1xuXG4gICAgQElucHV0KCkgY2FuRWRpdDpib29sZWFuPXRydWU7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMudGVtcGxhdGU9dGhpcy50ZW1wbGF0ZXx8bmV3IFViY2NQYXJhbVRlbXBsYXRlKCk7XG4gICAgfVxuXG59XG4iXX0=