/**
 * @fileoverview added by tsickle
 * Generated from: lib/controls/param-control/number-control/number-control.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class NumberControlComponent {
    constructor() {
        this.canEdit = true;
        this.precision = 0;
        this.max = NaN;
        this.min = NaN;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.param = this.param || {};
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        this.param = this.param || {};
        if (this.param && this.param.constraint) {
            this.max = Number(this.param.constraint.max) || NaN;
            this.min = Number(this.param.constraint.min) || NaN;
            this.precision = Number(this.param.constraint.precision) || 0;
        }
    }
    /**
     * @return {?}
     */
    isReadonly() {
        if (!this.canEdit) {
            return true;
        }
        else {
            return !this.param || !this.param.readonly ? false : true;
        }
    }
    /**
     * @return {?}
     */
    getUnit() {
        if (!this.param || !this.param.constraint || !this.param.constraint.unit) {
            return '';
        }
        else {
            return `(单位:${this.param.constraint.unit})`;
        }
    }
    /**
     * @return {?}
     */
    show() {
        return !this.param || !this.param.description ? false : true;
    }
}
NumberControlComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-number-control',
                template: "<div class=\"farris-form-controls-inline farris-group-wrap col-12\">\n  <div class=\"form-group farris-form-group\">\n    <label class=\"col-form-label col-4\">\n      <span class=\"farris-label-text\" style=\"float:right\">{{param.name}}{{getUnit()}}</span>\n    </label>\n    <div class=\"farris-input-wrap col-6\">\n      <farris-number-spinner [editable]=\"true\" [max]=\"max\" [min]=\"min\" [precision]=\"precision\" [readonly]=\"isReadonly()\" [(ngModel)]=\"param.value\" name=\"{{param.code}}\"></farris-number-spinner>\n    </div>\n    <span *ngIf=\"show()\" farrisTooltip [placement]=\"'right-top'\" [content]=\"param.description\" class=\"f-icon f-icon-info\"></span>\n  </div>\n</div>",
                styles: [""]
            }] }
];
/** @nocollapse */
NumberControlComponent.ctorParameters = () => [];
NumberControlComponent.propDecorators = {
    param: [{ type: Input }],
    canEdit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    NumberControlComponent.prototype.param;
    /** @type {?} */
    NumberControlComponent.prototype.canEdit;
    /** @type {?} */
    NumberControlComponent.prototype.precision;
    /** @type {?} */
    NumberControlComponent.prototype.max;
    /** @type {?} */
    NumberControlComponent.prototype.min;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVyLWNvbnRyb2wuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1jbXAvdWJjYy1wYXJhbS1kYXRhLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL3BhcmFtLWNvbnRyb2wvbnVtYmVyLWNvbnRyb2wvbnVtYmVyLWNvbnRyb2wuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBT25GLE1BQU0sT0FBTyxzQkFBc0I7SUFZL0I7UUFSUyxZQUFPLEdBQVMsSUFBSSxDQUFDO1FBRTlCLGNBQVMsR0FBUSxDQUFDLENBQUM7UUFFbkIsUUFBRyxHQUFRLEdBQUcsQ0FBQztRQUVmLFFBQUcsR0FBUSxHQUFHLENBQUM7SUFFQyxDQUFDOzs7O0lBRWpCLFFBQVE7UUFDSixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDO0lBQ2xDLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXFCO1FBQzdCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7UUFDOUIsSUFBRyxJQUFJLENBQUMsS0FBSyxJQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFDO1lBQ2pDLElBQUksQ0FBQyxHQUFHLEdBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxJQUFFLEdBQUcsQ0FBQztZQUNoRCxJQUFJLENBQUMsR0FBRyxHQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsSUFBRSxHQUFHLENBQUM7WUFDaEQsSUFBSSxDQUFDLFNBQVMsR0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLElBQUUsQ0FBQyxDQUFDO1NBQzdEO0lBQ0wsQ0FBQzs7OztJQUVELFVBQVU7UUFDTixJQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBQztZQUNiLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7YUFDRztZQUNBLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUEsQ0FBQyxDQUFBLEtBQUssQ0FBQSxDQUFDLENBQUEsSUFBSSxDQUFDO1NBQ3ZEO0lBQ0wsQ0FBQzs7OztJQUVELE9BQU87UUFDSCxJQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssSUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxJQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFDO1lBQ2pFLE9BQU8sRUFBRSxDQUFDO1NBQ1o7YUFDRztZQUNBLE9BQU8sT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEdBQUcsQ0FBQztTQUMvQztJQUNMLENBQUM7Ozs7SUFFRCxJQUFJO1FBQ0EsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQSxDQUFDLENBQUEsS0FBSyxDQUFBLENBQUMsQ0FBQSxJQUFJLENBQUM7SUFDM0QsQ0FBQzs7O1lBcERKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsb0JBQW9CO2dCQUM5Qixtc0JBQThDOzthQUVqRDs7Ozs7b0JBR0ksS0FBSztzQkFFTCxLQUFLOzs7O0lBRk4sdUNBQW9COztJQUVwQix5Q0FBOEI7O0lBRTlCLDJDQUFtQjs7SUFFbkIscUNBQWU7O0lBRWYscUNBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2xpYi1udW1iZXItY29udHJvbCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL251bWJlci1jb250cm9sLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9udW1iZXItY29udHJvbC5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTnVtYmVyQ29udHJvbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCxPbkNoYW5nZXMge1xuXG4gICAgQElucHV0KCkgcGFyYW06IGFueTtcblxuICAgIEBJbnB1dCgpIGNhbkVkaXQ6Ym9vbGVhbj10cnVlO1xuXG4gICAgcHJlY2lzaW9uOm51bWJlcj0wO1xuXG4gICAgbWF4Om51bWJlcj1OYU47XG5cbiAgICBtaW46bnVtYmVyPU5hTjtcblxuICAgIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5wYXJhbSA9IHRoaXMucGFyYW0gfHwge307XG4gICAgfVxuXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczpTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XG4gICAgICAgIHRoaXMucGFyYW0gPSB0aGlzLnBhcmFtIHx8IHt9O1xuICAgICAgICBpZih0aGlzLnBhcmFtJiZ0aGlzLnBhcmFtLmNvbnN0cmFpbnQpe1xuICAgICAgICAgICAgdGhpcy5tYXg9TnVtYmVyKHRoaXMucGFyYW0uY29uc3RyYWludC5tYXgpfHxOYU47XG4gICAgICAgICAgICB0aGlzLm1pbj1OdW1iZXIodGhpcy5wYXJhbS5jb25zdHJhaW50Lm1pbil8fE5hTjtcbiAgICAgICAgICAgIHRoaXMucHJlY2lzaW9uPU51bWJlcih0aGlzLnBhcmFtLmNvbnN0cmFpbnQucHJlY2lzaW9uKXx8MDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlzUmVhZG9ubHkoKXtcbiAgICAgICAgaWYoIXRoaXMuY2FuRWRpdCl7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNle1xuICAgICAgICAgICAgcmV0dXJuICF0aGlzLnBhcmFtfHwhdGhpcy5wYXJhbS5yZWFkb25seT9mYWxzZTp0cnVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0VW5pdCgpe1xuICAgICAgICBpZighdGhpcy5wYXJhbXx8IXRoaXMucGFyYW0uY29uc3RyYWludHx8IXRoaXMucGFyYW0uY29uc3RyYWludC51bml0KXtcbiAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgICByZXR1cm4gYCjljZXkvY06JHt0aGlzLnBhcmFtLmNvbnN0cmFpbnQudW5pdH0pYDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNob3coKXtcbiAgICAgICAgcmV0dXJuICF0aGlzLnBhcmFtfHwhdGhpcy5wYXJhbS5kZXNjcmlwdGlvbj9mYWxzZTp0cnVlO1xuICAgIH1cbn1cbiJdfQ==