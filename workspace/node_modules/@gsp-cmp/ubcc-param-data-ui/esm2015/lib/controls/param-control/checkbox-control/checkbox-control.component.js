/**
 * @fileoverview added by tsickle
 * Generated from: lib/controls/param-control/checkbox-control/checkbox-control.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { UbccParamDataUtils } from '../../../utils/param-data-utils';
export class CheckboxControlComponent {
    /**
     * @param {?} service
     */
    constructor(service) {
        this.service = service;
        this.canEdit = true;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.param = this.param || {};
        this.checkboxId = this.service.newGuid();
    }
    /**
     * @return {?}
     */
    getValue() {
        if (!this.param || !this.param.value) {
            return false;
        }
        /** @type {?} */
        let value = String(this.param.value).toLowerCase();
        return value === 'true' ? true : false;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    enable(value) {
        this.param.value = value;
    }
    /**
     * @return {?}
     */
    isReadonly() {
        if (!this.canEdit) {
            return true;
        }
        else {
            return !this.param || !this.param.readonly ? false : true;
        }
    }
    /**
     * @return {?}
     */
    show() {
        return !this.param || !this.param.description ? false : true;
    }
}
CheckboxControlComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-checkbox-control',
                template: "<div class=\"farris-form-controls-inline farris-group-wrap col-12\">\n  <div class=\"form-group farris-form-group\">\n    <label class=\"col-form-label col-4\">\n      <span class=\"farris-label-text\" style=\"float:right\">{{param.name}}</span>\n    </label>\n    <div class=\"farris-input-wrap col-6\">\n      <div class=\"custom-control custom-checkbox\">\n        <input [checked]=\"getValue()\" class=\"custom-control-input\" id=\"{{checkboxId}}Checkbox\" \n          type=\"checkbox\" (click)=\"enable($event.target.checked)\" [disabled]=\"isReadonly()\">\n        <label class=\"custom-control-label\" for=\"{{checkboxId}}Checkbox\"></label>\n      </div>\n    </div>\n    <span *ngIf=\"show()\" farrisTooltip [placement]=\"'right-top'\" [content]=\"param.description\" class=\"f-icon f-icon-info\"></span>\n  </div>\n</div>",
                styles: [""]
            }] }
];
/** @nocollapse */
CheckboxControlComponent.ctorParameters = () => [
    { type: UbccParamDataUtils }
];
CheckboxControlComponent.propDecorators = {
    param: [{ type: Input }],
    canEdit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    CheckboxControlComponent.prototype.param;
    /** @type {?} */
    CheckboxControlComponent.prototype.canEdit;
    /** @type {?} */
    CheckboxControlComponent.prototype.checkboxId;
    /**
     * @type {?}
     * @private
     */
    CheckboxControlComponent.prototype.service;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gtY29udHJvbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWNtcC91YmNjLXBhcmFtLWRhdGEtdWkvIiwic291cmNlcyI6WyJsaWIvY29udHJvbHMvcGFyYW0tY29udHJvbC9jaGVja2JveC1jb250cm9sL2NoZWNrYm94LWNvbnRyb2wuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFPckUsTUFBTSxPQUFPLHdCQUF3Qjs7OztJQVFqQyxZQUFvQixPQUEwQjtRQUExQixZQUFPLEdBQVAsT0FBTyxDQUFtQjtRQUpyQyxZQUFPLEdBQVMsSUFBSSxDQUFDO0lBSW9CLENBQUM7Ozs7SUFFbkQsUUFBUTtRQUNKLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7UUFDOUIsSUFBSSxDQUFDLFVBQVUsR0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzNDLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ0osSUFBRyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBQztZQUM5QixPQUFPLEtBQUssQ0FBQztTQUNoQjs7WUFDRyxLQUFLLEdBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsV0FBVyxFQUFFO1FBQ2hELE9BQU8sS0FBSyxLQUFHLE1BQU0sQ0FBQSxDQUFDLENBQUEsSUFBSSxDQUFBLENBQUMsQ0FBQSxLQUFLLENBQUM7SUFDckMsQ0FBQzs7Ozs7SUFFRCxNQUFNLENBQUMsS0FBSztRQUNSLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUM3QixDQUFDOzs7O0lBRUQsVUFBVTtRQUNOLElBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFDO1lBQ2IsT0FBTyxJQUFJLENBQUM7U0FDZjthQUNHO1lBQ0EsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQSxDQUFDLENBQUEsS0FBSyxDQUFBLENBQUMsQ0FBQSxJQUFJLENBQUM7U0FDdkQ7SUFDTCxDQUFDOzs7O0lBRUQsSUFBSTtRQUNBLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUEsQ0FBQyxDQUFBLEtBQUssQ0FBQSxDQUFDLENBQUEsSUFBSSxDQUFDO0lBQzNELENBQUM7OztZQTNDSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLHNCQUFzQjtnQkFDaEMsMjBCQUFnRDs7YUFFbkQ7Ozs7WUFOUSxrQkFBa0I7OztvQkFTdEIsS0FBSztzQkFFTCxLQUFLOzs7O0lBRk4seUNBQW9COztJQUVwQiwyQ0FBOEI7O0lBRTlCLDhDQUFrQjs7Ozs7SUFFTiwyQ0FBa0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFViY2NQYXJhbURhdGFVdGlscyB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3BhcmFtLWRhdGEtdXRpbHMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2xpYi1jaGVja2JveC1jb250cm9sJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vY2hlY2tib3gtY29udHJvbC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vY2hlY2tib3gtY29udHJvbC5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgQ2hlY2tib3hDb250cm9sQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIEBJbnB1dCgpIHBhcmFtOiBhbnk7XG5cbiAgICBASW5wdXQoKSBjYW5FZGl0OmJvb2xlYW49dHJ1ZTtcblxuICAgIGNoZWNrYm94SWQ6c3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBzZXJ2aWNlOlViY2NQYXJhbURhdGFVdGlscykgeyB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5wYXJhbSA9IHRoaXMucGFyYW0gfHwge307XG4gICAgICAgIHRoaXMuY2hlY2tib3hJZD10aGlzLnNlcnZpY2UubmV3R3VpZCgpO1xuICAgIH1cblxuICAgIGdldFZhbHVlKCl7XG4gICAgICAgIGlmKCF0aGlzLnBhcmFtfHwhdGhpcy5wYXJhbS52YWx1ZSl7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHZhbHVlPVN0cmluZyh0aGlzLnBhcmFtLnZhbHVlKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICByZXR1cm4gdmFsdWU9PT0ndHJ1ZSc/dHJ1ZTpmYWxzZTtcbiAgICB9XG5cbiAgICBlbmFibGUodmFsdWUpIHtcbiAgICAgICAgdGhpcy5wYXJhbS52YWx1ZSA9IHZhbHVlO1xuICAgIH1cblxuICAgIGlzUmVhZG9ubHkoKXtcbiAgICAgICAgaWYoIXRoaXMuY2FuRWRpdCl7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNle1xuICAgICAgICAgICAgcmV0dXJuICF0aGlzLnBhcmFtfHwhdGhpcy5wYXJhbS5yZWFkb25seT9mYWxzZTp0cnVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2hvdygpe1xuICAgICAgICByZXR1cm4gIXRoaXMucGFyYW18fCF0aGlzLnBhcmFtLmRlc2NyaXB0aW9uP2ZhbHNlOnRydWU7XG4gICAgfVxuXG59XG4iXX0=