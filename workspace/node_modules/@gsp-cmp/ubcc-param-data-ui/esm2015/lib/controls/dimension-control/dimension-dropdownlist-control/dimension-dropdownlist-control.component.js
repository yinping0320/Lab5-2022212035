/**
 * @fileoverview added by tsickle
 * Generated from: lib/controls/dimension-control/dimension-dropdownlist-control/dimension-dropdownlist-control.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { UbccEventBusService } from '../../../service/event-bus-service';
export class DimensionDropdownlistControlComponent {
    /**
     * @param {?} ebsService
     */
    constructor(ebsService) {
        this.ebsService = ebsService;
        this.valueChangeEmit = new EventEmitter();
        this.enumerationItems = [];
        this.isMultiSelect = false;
        this.isEnumInfoLoad = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.dimensionItem = this.dimensionItem || {};
        if (!this.isEnumInfoLoad) {
            this.enumConfigInit();
        }
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (!this.isEnumInfoLoad) {
            this.enumConfigInit();
        }
    }
    /**
     * @return {?}
     */
    enumConfigInit() {
        this.getEnumItems();
    }
    /**
     * @return {?}
     */
    getEnumItems() {
        if (!this.dimensionItem || !this.dimensionItem.dataType) {
            return;
        }
        /** @type {?} */
        let enumType = (/** @type {?} */ (this.dimensionItem.dataType));
        this.get(enumType);
    }
    /**
     * @param {?} enumType
     * @return {?}
     */
    get(enumType) {
        if (!enumType || !enumType.enumerationItems) {
            return;
        }
        enumType.enumerationItems.map((/**
         * @param {?} x
         * @return {?}
         */
        x => this.enumerationItems.push(x)));
        this.isEnumInfoLoad = true;
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    valueChangeHandler($event) {
        this.dimensionItem.value = $event.value;
        this.ebsService.ebs.emit(this.dimensionItem);
    }
}
DimensionDropdownlistControlComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-dimension-dropdownlist-control',
                template: "<div class=\"farris-form-controls-inline farris-group-wrap col-12\">\n    <div class=\"form-group farris-form-group\">\n      <label class=\"col-form-label col-4\">\n        <span class=\"farris-label-text\" style=\"float:right\">{{dimensionItem.name}}</span>\n      </label>\n      <div class=\"farris-input-wrap col-6\">\n        <farris-combo-list [idField]=\"'code'\" [textField]=\"'description'\" [data]=\"enumerationItems\" [multiSelect]=\"isMultiSelect\"\n          (valueChange)=\"valueChangeHandler($event)\">\n        </farris-combo-list>\n      </div>\n    </div>\n  </div>",
                styles: [""]
            }] }
];
/** @nocollapse */
DimensionDropdownlistControlComponent.ctorParameters = () => [
    { type: UbccEventBusService }
];
DimensionDropdownlistControlComponent.propDecorators = {
    dimensionItem: [{ type: Input }],
    valueChangeEmit: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    DimensionDropdownlistControlComponent.prototype.dimensionItem;
    /** @type {?} */
    DimensionDropdownlistControlComponent.prototype.valueChangeEmit;
    /** @type {?} */
    DimensionDropdownlistControlComponent.prototype.enumerationItems;
    /** @type {?} */
    DimensionDropdownlistControlComponent.prototype.isMultiSelect;
    /** @type {?} */
    DimensionDropdownlistControlComponent.prototype.isEnumInfoLoad;
    /**
     * @type {?}
     * @private
     */
    DimensionDropdownlistControlComponent.prototype.ebsService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGltZW5zaW9uLWRyb3Bkb3dubGlzdC1jb250cm9sLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtY21wL3ViY2MtcGFyYW0tZGF0YS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9kaW1lbnNpb24tY29udHJvbC9kaW1lbnNpb24tZHJvcGRvd25saXN0LWNvbnRyb2wvZGltZW5zaW9uLWRyb3Bkb3dubGlzdC1jb250cm9sLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUE0QixNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpHLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBT3pFLE1BQU0sT0FBTyxxQ0FBcUM7Ozs7SUFZOUMsWUFBb0IsVUFBK0I7UUFBL0IsZUFBVSxHQUFWLFVBQVUsQ0FBcUI7UUFSekMsb0JBQWUsR0FBbUIsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUUvRCxxQkFBZ0IsR0FBRyxFQUFFLENBQUM7UUFFdEIsa0JBQWEsR0FBRyxLQUFLLENBQUM7UUFFdEIsbUJBQWMsR0FBWSxLQUFLLENBQUM7SUFFdUIsQ0FBQzs7OztJQUV4RCxRQUFRO1FBQ0osSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsYUFBYSxJQUFJLEVBQUUsQ0FBQztRQUM5QyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRTtZQUN0QixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7U0FDekI7SUFDTCxDQUFDOzs7OztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUM5QixJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRTtZQUN0QixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7U0FDekI7SUFDTCxDQUFDOzs7O0lBRUQsY0FBYztRQUNWLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN4QixDQUFDOzs7O0lBRUQsWUFBWTtRQUNSLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLEVBQUU7WUFDckQsT0FBTztTQUNWOztZQUNHLFFBQVEsR0FBQyxtQkFBQSxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsRUFBbUI7UUFDM0QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN2QixDQUFDOzs7OztJQUVELEdBQUcsQ0FBQyxRQUF5QjtRQUN6QixJQUFJLENBQUMsUUFBUSxJQUFJLENBQUMsUUFBUSxDQUFDLGdCQUFnQixFQUFFO1lBQ3pDLE9BQU87U0FDVjtRQUNELFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHOzs7O1FBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUM7UUFDbEUsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7SUFDL0IsQ0FBQzs7Ozs7SUFFRCxrQkFBa0IsQ0FBQyxNQUFNO1FBQ3JCLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDdEMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7WUF2REosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxvQ0FBb0M7Z0JBQzlDLG9sQkFBOEQ7O2FBRWpFOzs7O1lBTlEsbUJBQW1COzs7NEJBU3ZCLEtBQUs7OEJBRUwsTUFBTTs7OztJQUZQLDhEQUE0Qjs7SUFFNUIsZ0VBQStEOztJQUUvRCxpRUFBc0I7O0lBRXRCLDhEQUFzQjs7SUFFdEIsK0RBQWdDOzs7OztJQUVwQiwyREFBdUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcywgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEVudW1lcmF0aW9uVHlwZSB9IGZyb20gJ0BlY3AtY2FmL2NvbW1vbi1zdHJ1Y3R1cmUnO1xuaW1wb3J0IHsgVWJjY0V2ZW50QnVzU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL3NlcnZpY2UvZXZlbnQtYnVzLXNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2xpYi1kaW1lbnNpb24tZHJvcGRvd25saXN0LWNvbnRyb2wnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9kaW1lbnNpb24tZHJvcGRvd25saXN0LWNvbnRyb2wuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2RpbWVuc2lvbi1kcm9wZG93bmxpc3QtY29udHJvbC5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgRGltZW5zaW9uRHJvcGRvd25saXN0Q29udHJvbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCAsT25DaGFuZ2Vze1xuXG4gICAgQElucHV0KCkgZGltZW5zaW9uSXRlbTogYW55O1xuXG4gICAgQE91dHB1dCgpIHZhbHVlQ2hhbmdlRW1pdDpFdmVudEVtaXR0ZXI8YW55Pj1uZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgICBlbnVtZXJhdGlvbkl0ZW1zID0gW107XG5cbiAgICBpc011bHRpU2VsZWN0ID0gZmFsc2U7XG5cbiAgICBpc0VudW1JbmZvTG9hZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBlYnNTZXJ2aWNlOiBVYmNjRXZlbnRCdXNTZXJ2aWNlKSB7IH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLmRpbWVuc2lvbkl0ZW0gPSB0aGlzLmRpbWVuc2lvbkl0ZW0gfHwge307XG4gICAgICAgIGlmICghdGhpcy5pc0VudW1JbmZvTG9hZCkge1xuICAgICAgICAgICAgdGhpcy5lbnVtQ29uZmlnSW5pdCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgICAgICBpZiAoIXRoaXMuaXNFbnVtSW5mb0xvYWQpIHtcbiAgICAgICAgICAgIHRoaXMuZW51bUNvbmZpZ0luaXQoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGVudW1Db25maWdJbml0KCkge1xuICAgICAgICB0aGlzLmdldEVudW1JdGVtcygpO1xuICAgIH1cblxuICAgIGdldEVudW1JdGVtcygpIHtcbiAgICAgICAgaWYgKCF0aGlzLmRpbWVuc2lvbkl0ZW0gfHwgIXRoaXMuZGltZW5zaW9uSXRlbS5kYXRhVHlwZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBlbnVtVHlwZT10aGlzLmRpbWVuc2lvbkl0ZW0uZGF0YVR5cGUgYXMgRW51bWVyYXRpb25UeXBlO1xuICAgICAgICB0aGlzLmdldChlbnVtVHlwZSk7XG4gICAgfVxuXG4gICAgZ2V0KGVudW1UeXBlOiBFbnVtZXJhdGlvblR5cGUpIHtcbiAgICAgICAgaWYgKCFlbnVtVHlwZSB8fCAhZW51bVR5cGUuZW51bWVyYXRpb25JdGVtcykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGVudW1UeXBlLmVudW1lcmF0aW9uSXRlbXMubWFwKHggPT4gdGhpcy5lbnVtZXJhdGlvbkl0ZW1zLnB1c2goeCkpO1xuICAgICAgICB0aGlzLmlzRW51bUluZm9Mb2FkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICB2YWx1ZUNoYW5nZUhhbmRsZXIoJGV2ZW50KSB7XG4gICAgICAgIHRoaXMuZGltZW5zaW9uSXRlbS52YWx1ZT0kZXZlbnQudmFsdWU7XG4gICAgICAgIHRoaXMuZWJzU2VydmljZS5lYnMuZW1pdCh0aGlzLmRpbWVuc2lvbkl0ZW0pO1xuICAgIH1cblxufVxuIl19