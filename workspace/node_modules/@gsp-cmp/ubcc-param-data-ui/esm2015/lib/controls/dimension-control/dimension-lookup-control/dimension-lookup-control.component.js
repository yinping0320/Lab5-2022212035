/**
 * @fileoverview added by tsickle
 * Generated from: lib/controls/dimension-control/dimension-lookup-control/dimension-lookup-control.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';
import { ServerSideToken } from '@farris/ui-lookup';
import { LookUpHttpService } from '../../../service/lookup-http-service';
import { LookUpBindingFields } from '../../../common/look-up-binding-fields';
import { UbccEventBusService } from '../../../service/event-bus-service';
/** @type {?} */
const BCC_HELP_URL = `/api/runtime/bcc/v1.0/param/help/{helpId}`;
export class DimensionLookupControlComponent {
    /**
     * @param {?} metadataRTService
     * @param {?} ebsService
     */
    constructor(metadataRTService, ebsService) {
        this.metadataRTService = metadataRTService;
        this.ebsService = ebsService;
        this.isSingleSelect = true;
        this.isHelpInfoLoad = false;
        this.helpUrl = BCC_HELP_URL;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.dimensionItem = this.dimensionItem || {};
        this.bindingFields = this.bindingFields || new LookUpBindingFields();
        this.helpConfigInit();
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        this.helpConfigInit();
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    selectedHelpHandler($event) {
        if (!$event) {
            return;
        }
        this.dimensionItem.value = '';
        this.dimensionItem.value = $event[this.bindingFields.idField];
        this.ebsService.ebs.emit(this.dimensionItem);
    }
    /**
     * @private
     * @return {?}
     */
    helpConfigInit() {
        if (this.isHelpInfoLoad || !this.dimensionItem || !this.dimensionItem.dataType) {
            return;
        }
        /** @type {?} */
        let helpType = (/** @type {?} */ (this.dimensionItem.dataType));
        this.loadDataFromMetadata(helpType);
    }
    /**
     * @private
     * @param {?} helpType
     * @return {?}
     */
    loadDataFromMetadata(helpType) {
        if (!helpType.helpId) {
            return;
        }
        this.metadataRTService.GetMetadataRT(helpType.helpId).subscribe((/**
         * @param {?} metadataDto
         * @return {?}
         */
        (metadataDto) => {
            /** @type {?} */
            let helpMetadata = JSON.parse(metadataDto.content);
            this.setHelpInfo(helpMetadata);
            this.isHelpInfoLoad = true;
        }));
    }
    /**
     * @param {?} helpMetadata
     * @return {?}
     */
    setHelpInfo(helpMetadata) {
        this.helpUrl = BCC_HELP_URL.replace('{helpId}', helpMetadata.id);
        this.bindingFields.idField = helpMetadata.idField;
        this.bindingFields.textField = helpMetadata.textField;
        this.bindingFields.valueField = helpMetadata.valueField;
        this.bindingFields.displayType = helpMetadata.displayType;
    }
}
DimensionLookupControlComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-dimension-lookup-control',
                template: "<div class=\"farris-form-controls-inline farris-group-wrap col-12\">\n  <div class=\"form-group farris-form-group\">\n    <label class=\"col-form-label col-4\">\n      <span class=\"farris-label-text\" style=\"float:right\">{{dimensionItem.name}}</span>\n    </label>\n    <div class=\"farris-input-wrap col-6\">\n      <farris-lookup-grid [editable]=\"false\" (selectedData)=\"selectedHelpHandler($event)\" [uri]=\"helpUrl\" [idField]=\"bindingFields.idField\"\n        [textField]=\"bindingFields.textField\" [valueField]=\"bindingFields.valueField\" [enableClear]=\"false\" \n        [(ngModel)]=\"dimensionItem.valueText\" name=\"{{dimensionItem.code}}\"\n        [displayType]=\"bindingFields.displayType\" [pagination]=\"true\" [singleSelect]=\"isSingleSelect\" required>\n      </farris-lookup-grid>\n    </div>\n  </div>\n</div>",
                providers: [{ provide: ServerSideToken, useClass: LookUpHttpService }, GSPMetadataRTService],
                styles: [""]
            }] }
];
/** @nocollapse */
DimensionLookupControlComponent.ctorParameters = () => [
    { type: GSPMetadataRTService },
    { type: UbccEventBusService }
];
DimensionLookupControlComponent.propDecorators = {
    dimensionItem: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    DimensionLookupControlComponent.prototype.dimensionItem;
    /** @type {?} */
    DimensionLookupControlComponent.prototype.isSingleSelect;
    /** @type {?} */
    DimensionLookupControlComponent.prototype.isHelpInfoLoad;
    /** @type {?} */
    DimensionLookupControlComponent.prototype.bindingFields;
    /** @type {?} */
    DimensionLookupControlComponent.prototype.helpUrl;
    /**
     * @type {?}
     * @private
     */
    DimensionLookupControlComponent.prototype.metadataRTService;
    /**
     * @type {?}
     * @private
     */
    DimensionLookupControlComponent.prototype.ebsService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGltZW5zaW9uLWxvb2t1cC1jb250cm9sLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtY21wL3ViY2MtcGFyYW0tZGF0YS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9kaW1lbnNpb24tY29udHJvbC9kaW1lbnNpb24tbG9va3VwLWNvbnRyb2wvZGltZW5zaW9uLWxvb2t1cC1jb250cm9sLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBdUMsTUFBTSxlQUFlLENBQUM7QUFFekcsT0FBTyxFQUFFLG9CQUFvQixFQUFlLE1BQU0sOEJBQThCLENBQUM7QUFDakYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDOztNQUVuRSxZQUFZLEdBQUMsMkNBQTJDO0FBUTlELE1BQU0sT0FBTywrQkFBK0I7Ozs7O0lBWXhDLFlBQ1ksaUJBQXVDLEVBQ3ZDLFVBQStCO1FBRC9CLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBc0I7UUFDdkMsZUFBVSxHQUFWLFVBQVUsQ0FBcUI7UUFWM0MsbUJBQWMsR0FBWSxJQUFJLENBQUM7UUFFL0IsbUJBQWMsR0FBWSxLQUFLLENBQUM7UUFJaEMsWUFBTyxHQUFXLFlBQVksQ0FBQztJQUlnQixDQUFDOzs7O0lBRWhELFFBQVE7UUFDSixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxhQUFhLElBQUksRUFBRSxDQUFDO1FBQzlDLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsSUFBSSxJQUFJLG1CQUFtQixFQUFFLENBQUM7UUFDckUsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQzFCLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQzlCLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUMxQixDQUFDOzs7OztJQUVELG1CQUFtQixDQUFDLE1BQU07UUFDdEIsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNULE9BQU87U0FDVjtRQUNELElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUM5QixJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM5RCxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ2pELENBQUM7Ozs7O0lBRU8sY0FBYztRQUNsQixJQUFJLElBQUksQ0FBQyxjQUFjLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLEVBQUU7WUFDNUUsT0FBTztTQUNWOztZQUNHLFFBQVEsR0FBRSxtQkFBQSxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsRUFBWTtRQUNyRCxJQUFJLENBQUMsb0JBQW9CLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDeEMsQ0FBQzs7Ozs7O0lBRU8sb0JBQW9CLENBQUMsUUFBa0I7UUFDM0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUU7WUFDbEIsT0FBTztTQUNWO1FBQ0QsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsU0FBUzs7OztRQUFDLENBQUMsV0FBd0IsRUFBRSxFQUFFOztnQkFDckYsWUFBWSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQztZQUNsRCxJQUFJLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQy9CLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO1FBQy9CLENBQUMsRUFBQyxDQUFDO0lBQ1AsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsWUFBaUI7UUFDekIsSUFBSSxDQUFDLE9BQU8sR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDakUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEdBQUcsWUFBWSxDQUFDLE9BQU8sQ0FBQztRQUNsRCxJQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsR0FBRyxZQUFZLENBQUMsU0FBUyxDQUFDO1FBQ3RELElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxHQUFHLFlBQVksQ0FBQyxVQUFVLENBQUM7UUFDeEQsSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLEdBQUcsWUFBWSxDQUFDLFdBQVcsQ0FBQztJQUM5RCxDQUFDOzs7WUFsRUosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSw4QkFBOEI7Z0JBQ3hDLGcxQkFBd0Q7Z0JBRXhELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxRQUFRLEVBQUUsaUJBQWlCLEVBQUUsRUFBRSxvQkFBb0IsQ0FBQzs7YUFDL0Y7Ozs7WUFiUSxvQkFBb0I7WUFJcEIsbUJBQW1COzs7NEJBWXZCLEtBQUs7Ozs7SUFBTix3REFBNEI7O0lBRTVCLHlEQUErQjs7SUFFL0IseURBQWdDOztJQUVoQyx3REFBbUM7O0lBRW5DLGtEQUErQjs7Ozs7SUFHM0IsNERBQStDOzs7OztJQUMvQyxxREFBdUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT25DaGFuZ2VzLCBJbnB1dCwgU2ltcGxlQ2hhbmdlcywgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEhlbHBUeXBlIH0gZnJvbSAnQGdzcC1jbXAvdWJjYy1wYXJhbS12byc7XG5pbXBvcnQgeyBHU1BNZXRhZGF0YVJUU2VydmljZSwgTWV0YWRhdGFEdG8gfSBmcm9tICdAZ3NwLWxjbS9tZXRhZGF0YXJ0LXNlbGVjdG9yJztcbmltcG9ydCB7IFNlcnZlclNpZGVUb2tlbiB9IGZyb20gJ0BmYXJyaXMvdWktbG9va3VwJztcbmltcG9ydCB7IExvb2tVcEh0dHBTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZS9sb29rdXAtaHR0cC1zZXJ2aWNlJztcbmltcG9ydCB7IExvb2tVcEJpbmRpbmdGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9jb21tb24vbG9vay11cC1iaW5kaW5nLWZpZWxkcyc7XG5pbXBvcnQgeyBVYmNjRXZlbnRCdXNTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZS9ldmVudC1idXMtc2VydmljZSc7XG5cbmNvbnN0IEJDQ19IRUxQX1VSTD1gL2FwaS9ydW50aW1lL2JjYy92MS4wL3BhcmFtL2hlbHAve2hlbHBJZH1gO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2xpYi1kaW1lbnNpb24tbG9va3VwLWNvbnRyb2wnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9kaW1lbnNpb24tbG9va3VwLWNvbnRyb2wuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2RpbWVuc2lvbi1sb29rdXAtY29udHJvbC5jb21wb25lbnQuY3NzJ10sXG4gICAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTZXJ2ZXJTaWRlVG9rZW4sIHVzZUNsYXNzOiBMb29rVXBIdHRwU2VydmljZSB9LCBHU1BNZXRhZGF0YVJUU2VydmljZV1cbn0pXG5leHBvcnQgY2xhc3MgRGltZW5zaW9uTG9va3VwQ29udHJvbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcblxuICAgIEBJbnB1dCgpIGRpbWVuc2lvbkl0ZW06IGFueTtcblxuICAgIGlzU2luZ2xlU2VsZWN0OiBib29sZWFuID0gdHJ1ZTtcblxuICAgIGlzSGVscEluZm9Mb2FkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBiaW5kaW5nRmllbGRzOiBMb29rVXBCaW5kaW5nRmllbGRzO1xuXG4gICAgaGVscFVybDogc3RyaW5nID0gQkNDX0hFTFBfVVJMO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgbWV0YWRhdGFSVFNlcnZpY2U6IEdTUE1ldGFkYXRhUlRTZXJ2aWNlLFxuICAgICAgICBwcml2YXRlIGVic1NlcnZpY2U6IFViY2NFdmVudEJ1c1NlcnZpY2UpIHsgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuZGltZW5zaW9uSXRlbSA9IHRoaXMuZGltZW5zaW9uSXRlbSB8fCB7fTtcbiAgICAgICAgdGhpcy5iaW5kaW5nRmllbGRzID0gdGhpcy5iaW5kaW5nRmllbGRzIHx8IG5ldyBMb29rVXBCaW5kaW5nRmllbGRzKCk7XG4gICAgICAgIHRoaXMuaGVscENvbmZpZ0luaXQoKTtcbiAgICB9XG5cbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XG4gICAgICAgIHRoaXMuaGVscENvbmZpZ0luaXQoKTtcbiAgICB9XG5cbiAgICBzZWxlY3RlZEhlbHBIYW5kbGVyKCRldmVudCkge1xuICAgICAgICBpZiAoISRldmVudCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZGltZW5zaW9uSXRlbS52YWx1ZSA9ICcnO1xuICAgICAgICB0aGlzLmRpbWVuc2lvbkl0ZW0udmFsdWUgPSAkZXZlbnRbdGhpcy5iaW5kaW5nRmllbGRzLmlkRmllbGRdO1xuICAgICAgICB0aGlzLmVic1NlcnZpY2UuZWJzLmVtaXQodGhpcy5kaW1lbnNpb25JdGVtKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGhlbHBDb25maWdJbml0KCkge1xuICAgICAgICBpZiAodGhpcy5pc0hlbHBJbmZvTG9hZCB8fCAhdGhpcy5kaW1lbnNpb25JdGVtIHx8ICF0aGlzLmRpbWVuc2lvbkl0ZW0uZGF0YVR5cGUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgaGVscFR5cGU9IHRoaXMuZGltZW5zaW9uSXRlbS5kYXRhVHlwZSBhcyBIZWxwVHlwZTtcbiAgICAgICAgdGhpcy5sb2FkRGF0YUZyb21NZXRhZGF0YShoZWxwVHlwZSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBsb2FkRGF0YUZyb21NZXRhZGF0YShoZWxwVHlwZTogSGVscFR5cGUpIHtcbiAgICAgICAgaWYgKCFoZWxwVHlwZS5oZWxwSWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm1ldGFkYXRhUlRTZXJ2aWNlLkdldE1ldGFkYXRhUlQoaGVscFR5cGUuaGVscElkKS5zdWJzY3JpYmUoKG1ldGFkYXRhRHRvOiBNZXRhZGF0YUR0bykgPT4ge1xuICAgICAgICAgICAgbGV0IGhlbHBNZXRhZGF0YSA9IEpTT04ucGFyc2UobWV0YWRhdGFEdG8uY29udGVudCk7XG4gICAgICAgICAgICB0aGlzLnNldEhlbHBJbmZvKGhlbHBNZXRhZGF0YSk7XG4gICAgICAgICAgICB0aGlzLmlzSGVscEluZm9Mb2FkID0gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgc2V0SGVscEluZm8oaGVscE1ldGFkYXRhOiBhbnkpIHtcbiAgICAgICAgdGhpcy5oZWxwVXJsID0gQkNDX0hFTFBfVVJMLnJlcGxhY2UoJ3toZWxwSWR9JywgaGVscE1ldGFkYXRhLmlkKTtcbiAgICAgICAgdGhpcy5iaW5kaW5nRmllbGRzLmlkRmllbGQgPSBoZWxwTWV0YWRhdGEuaWRGaWVsZDtcbiAgICAgICAgdGhpcy5iaW5kaW5nRmllbGRzLnRleHRGaWVsZCA9IGhlbHBNZXRhZGF0YS50ZXh0RmllbGQ7XG4gICAgICAgIHRoaXMuYmluZGluZ0ZpZWxkcy52YWx1ZUZpZWxkID0gaGVscE1ldGFkYXRhLnZhbHVlRmllbGQ7XG4gICAgICAgIHRoaXMuYmluZGluZ0ZpZWxkcy5kaXNwbGF5VHlwZSA9IGhlbHBNZXRhZGF0YS5kaXNwbGF5VHlwZTtcbiAgICB9XG59XG4iXX0=