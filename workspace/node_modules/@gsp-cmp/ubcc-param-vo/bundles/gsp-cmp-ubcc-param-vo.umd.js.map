{"version":3,"file":"gsp-cmp-ubcc-param-vo.umd.js.map","sources":["ng://@gsp-cmp/ubcc-param-vo/lib/ubcc-param-vo.module.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-vo/ubcc-param-template.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-vo/ubcc-param-template-vo.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-assignment-vo/ubcc-param-template-assignment.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-assignment-vo/dimension-data.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-assignment-vo/dimension-info.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-assignment-vo/eventInfo.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-dimension/dimension.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-dimension/dimension-item.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-data-vo/ubcc-param-data-vo.ts","ng://@gsp-cmp/ubcc-param-vo/lib/const/data-row-extension-const.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-data-vo/dimension-data-row.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-data-vo/default-data-row.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-data-vo/data-item.ts","node_modules/tslib/tslib.es6.js","ng://@gsp-cmp/ubcc-param-vo/lib/const/parameter-extension-const.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/parameter/base-param.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/parameter/item-category-param.ts","ng://@gsp-cmp/ubcc-param-vo/lib/const/data-type-extension-const.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/data-type/help-type.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/data-type/structure-type-ref.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/data-type/structure-type-ref-enum.ts","ng://@gsp-cmp/ubcc-param-vo/lib/const/constraint-extension-const.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/constraint/ubcc-string-constaint.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/constraint/ubcc-date-time-constraint.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/constraint/ubcc-decimal-constraint.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/constraint/ubcc-integer-constraint.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-serialzier/base-param-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-serialzier/item-category-param-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/factory/ubcc-param-serializer-factory.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-data-serializer/default-data-row-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-data-serializer/dimension-data-row-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/factory/ubcc-param-data-row-serializer-factory.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/utils/serializer-utils.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/data-type-serializer/help-type-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/data-type-serializer/structure-type-ref-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/factory/ubcc-data-type-serializer-factory.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/constraint-serializer/integer-constraint-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/constraint-serializer/decimal-constraint-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/constraint-serializer/date-time-constraint-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/constraint-serializer/string-constraint-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/factory/ubcc-param-constraint-serializer-factory.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/serializer-context/ubcc-serializer-context.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-vo/parameter-group.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/template-serialzier/ubcc-param-template-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/dimension-serializer/dimension-item-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/dimension-serializer/dimension-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-data-serializer/data-item-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/template-assignment-serializer/dimension-data-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/template-assignment-serializer/dimension-info-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/template-assignment-serializer/template-assignment-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-data-serializer/param-data-vo-serializer.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: []\n})\nexport class UbccParamVoModule { }\n","import { Parameter, StructuredType } from '@ecp-caf/common-structure';\r\nimport { ParameterGroup } from './parameter-group';\r\n\r\nexport class UbccParamTemplate{\r\n    id:string;\r\n    index:number;\r\n    code:string;\r\n    name:string;\r\n    description:string;\r\n    bizTypeId:string;\r\n    bizTypePath:string;\r\n    bizModule:string;\r\n    templateType:string;\r\n    groupEnable:boolean;\r\n    params:Array<Parameter>;\r\n    groups:Array<ParameterGroup>;\r\n    structuredTypes: Array<StructuredType>;\r\n    constructor(){\r\n       this.params=[];\r\n       this.groups=[];\r\n       this.structuredTypes=[];\r\n    }\r\n}","export class UbccParamTemplateVo{\r\n    id:string;\r\n    code:string;\r\n    name:string;\r\n    description:string;\r\n    bizTypeId:string;\r\n    bizTypePath:string;\r\n    bizModule:string;\r\n    templateType:string;\r\n    content:string;\r\n    translations:any;\r\n}","import { DimensionInfo } from './dimension-info';\r\nimport { EventInfo } from './eventInfo';\r\n\r\nexport class UbccParamTemplateAssignment{\r\n    id:string;\r\n    templateId:string;\r\n    bizTypeId:string;\r\n    index:number;\r\n    templateCode:string;\r\n    templateName:string;\r\n    templateType:string;\r\n    useDimension:boolean;\r\n    dimensionInfo:DimensionInfo;\r\n    useEvent:boolean;\r\n    eventInfo:EventInfo;\r\n}","import { DataItem } from '../param-data-vo/data-item';\r\n\r\nexport class DimensionData{\r\n    id:string;\r\n    dataItems:Array<DataItem>;\r\n}","import { Dimension } from '../param-dimension/dimension';\r\nimport { DimensionData } from './dimension-data';\r\n\r\nexport class DimensionInfo{\r\n    dataModificationAllow:boolean;\r\n    data:Array<DimensionData>;\r\n    definition:Dimension;\r\n}","export class EventInfo{\r\n    id:string;\r\n    code:string;\r\n    description:string;\r\n}","import { DimensionItem } from './dimension-item';\r\n\r\nexport class Dimension{\r\n    id:string;\r\n    code:string;\r\n    name:string;\r\n    dimensionItems:Array<DimensionItem>;\r\n}","import { DataType } from '@ecp-caf/common-structure';\r\n\r\nexport class DimensionItem{\r\n    id:string;\r\n    code:string;\r\n    name:string;\r\n    index:number;\r\n    dataType:DataType;\r\n}","import { DataRow } from './data-row';\r\n\r\nexport class UbccParamDataVo{\r\n    templateId:string;\r\n    bizTypeId:string;\r\n    data:Array<DataRow>;\r\n}","export class DataRowExtensionConst{\r\n    public static DEFAULT_DATA_ROW=\"DefaultDataRow\";\r\n    public static DIMENSION_DATA_ROW=\"DimensionDataRow\";\r\n}","import { DataRow } from './data-row';\r\nimport { DataRowExtensionConst } from '../../const/data-row-extension-const';\r\nimport { DataItem } from './data-item';\r\n\r\nexport class DimensionDataRow implements DataRow{\r\n\r\n    getKind(): string {\r\n        return DataRowExtensionConst.DIMENSION_DATA_ROW;\r\n    }\r\n    kind:string=DataRowExtensionConst.DIMENSION_DATA_ROW;\r\n    id:string;\r\n    dimensionDataItems:Array<DataItem>;\r\n    paramDataItems:Array<DataItem>;\r\n}","import { DataRow } from './data-row';\r\nimport { DataRowExtensionConst } from '../../const/data-row-extension-const';\r\nimport { DataItem } from './data-item';\r\n\r\nexport class DefaultDataRow implements DataRow{\r\n\r\n    getKind(): string {\r\n        return DataRowExtensionConst.DEFAULT_DATA_ROW;\r\n    }\r\n    kind:string=DataRowExtensionConst.DEFAULT_DATA_ROW;\r\n    id:string;\r\n    paramItems:Array<DataItem>;\r\n}","export class DataItem{\r\n    id:string;\r\n    dataCode:string;\r\n    dataName:string;\r\n    dataDesc:string;\r\n    dataValue:string;\r\n    dataValueText:string;\r\n    dataType:string;\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class ParamExtensionConst{\r\n    public static BASE_PARAM=\"UbccBaseParam\";\r\n    public static ITEM_CATEGORY_PARAM=\"UbccItemCategoryParam\";\r\n}","import { Parameter } from '@ecp-caf/common-structure';\r\nimport { ParamExtensionConst } from '../../../const/parameter-extension-const';\r\n\r\nexport class BaseParameter extends Parameter{\r\n    id:string;\r\n    index:number;\r\n    visible:boolean;\r\n    readonly:boolean;\r\n    groupId:string;\r\n    groupCode:string;\r\n    groupName:string;\r\n    parameterTypeDesc:string;\r\n    kind:string=ParamExtensionConst.BASE_PARAM;\r\n    constructor(){\r\n        super();\r\n        this.visible=true;\r\n        this.readonly=false;\r\n    }\r\n}","import { ParamExtensionConst } from '../../../const/parameter-extension-const';\r\nimport { BaseParameter } from './base-param';\r\n\r\nexport class ItemCategoryParam extends BaseParameter{\r\n    kind:string=ParamExtensionConst.ITEM_CATEGORY_PARAM;\r\n}","export class DataTypeExtensionConst{\r\n    public static HELP_TYPE=\"HelpType\";\r\n    public static UBCC_STRUCTURE_TYPE_REF=\"UbccStructureTypeRef\";\r\n}","import { StructuredType } from '@ecp-caf/common-structure';\r\nimport { DataTypeExtensionConst } from '../../../const/data-type-extension-const';\r\n\r\nexport class HelpType extends StructuredType{\r\n    kind:string=DataTypeExtensionConst.HELP_TYPE;\r\n    helpId:string;\r\n    helpCode:string;\r\n    helpName:string;\r\n}","import { DataType } from '@ecp-caf/common-structure';\r\nimport { DataTypeExtensionConst } from '../../../const/data-type-extension-const';\r\nimport { StructureTypeRefEnum } from './structure-type-ref-enum';\r\n\r\nexport class StructureTypeRef extends DataType{\r\n    kind: string=DataTypeExtensionConst.UBCC_STRUCTURE_TYPE_REF;\r\n    refId: string;\r\n    type: StructureTypeRefEnum;\r\n    constructor(){\r\n        super();\r\n        this.kind=DataTypeExtensionConst.UBCC_STRUCTURE_TYPE_REF;\r\n    }\r\n}","export enum StructureTypeRefEnum{\r\n    ENUM,\r\n    HELP\r\n}","export class ConstraintExtenionConst{\r\n    public static UBCC_STRING_CONSTRAINT=\"UbccStringConstraint\";\r\n    public static UBCC_INTEGER_CONSTRAINT=\"UbccIntegerConstraint\";\r\n    public static UBCC_DATE_TIME_CONSTRAINT=\"UbccDateTimeConstraint\";\r\n    public static UBCC_DECIMAL_CONSTRAINT=\"UbccDecimalConstraint\";\r\n}","import { ConstraintExtenionConst } from '../../../const/constraint-extension-const';\r\nimport { IConstraint } from '@ecp-caf/common-structure';\r\n\r\nexport class UbccStringConstraint implements IConstraint{\r\n    getKind(): string {\r\n        return ConstraintExtenionConst.UBCC_STRING_CONSTRAINT;\r\n    }\r\n    maxLength:number;\r\n    minLength:number;\r\n    regexExpress:string;\r\n    kind:string=ConstraintExtenionConst.UBCC_STRING_CONSTRAINT;\r\n}","import { IConstraint } from '@ecp-caf/common-structure';\r\nimport { ConstraintExtenionConst } from '../../../const/constraint-extension-const';\r\n\r\nexport class UbccDateTimeConstraint implements IConstraint{\r\n\r\n    getKind(): string {\r\n        return ConstraintExtenionConst.UBCC_DATE_TIME_CONSTRAINT;\r\n    }\r\n    format:string;\r\n    kind:string=ConstraintExtenionConst.UBCC_DATE_TIME_CONSTRAINT;\r\n}","import { IConstraint } from '@ecp-caf/common-structure';\r\nimport { ConstraintExtenionConst } from '../../../const/constraint-extension-const';\r\n\r\nexport class UbccDecimalConstraint implements IConstraint{\r\n\r\n    getKind(): string {\r\n        return ConstraintExtenionConst.UBCC_DECIMAL_CONSTRAINT;\r\n    }\r\n    unit:string;\r\n    precision:number;\r\n    max:number;\r\n    min:number;\r\n    kind:string=ConstraintExtenionConst.UBCC_DECIMAL_CONSTRAINT;\r\n}","import { IConstraint } from '@ecp-caf/common-structure';\r\nimport { ConstraintExtenionConst } from '../../../const/constraint-extension-const';\r\n\r\nexport class UbccIntegerConstraint implements IConstraint{\r\n\r\n    getKind(): string {\r\n        return ConstraintExtenionConst.UBCC_INTEGER_CONSTRAINT;\r\n    }\r\n    unit:string;\r\n    max:number;\r\n    min:number;\r\n    kind:string=ConstraintExtenionConst.UBCC_INTEGER_CONSTRAINT;\r\n}","import { IParameterSerializer, Parameter, ISerializeContext, DefaultParameterSerializer } from '@ecp-caf/common-structure';\r\nimport { BaseParameter } from '../../extension/parameter/base-param';\r\n\r\nexport class BaseParameterSerializer implements IParameterSerializer{\r\n    serialize(param: Parameter, ctxt: ISerializeContext): Object {\r\n        let jobj=new Object();\r\n        if(!param){\r\n            return jobj;\r\n        }\r\n        let baseParam=param as BaseParameter;\r\n        let serializer=new DefaultParameterSerializer();\r\n        jobj=serializer.serialize(baseParam,ctxt);\r\n        jobj['id']=baseParam.id;\r\n        jobj['index']=baseParam.index;\r\n        jobj['visible']=baseParam.visible;\r\n        jobj['readonly']=baseParam.readonly;\r\n        jobj['groupId']=baseParam.groupId;\r\n        jobj['groupCode']=baseParam.groupCode;\r\n        jobj['groupName']=baseParam.groupName;\r\n        jobj['parameterTypeDesc']=baseParam.parameterTypeDesc;\r\n        jobj['kind']=baseParam.kind;\r\n        return jobj;\r\n    }    \r\n    \r\n    deserialize(obj: Object, ctxt: ISerializeContext):Parameter {\r\n        if(!obj){\r\n            return null;\r\n        }\r\n        let param=new BaseParameter();\r\n        let serializer=new DefaultParameterSerializer();\r\n        param=serializer.deserialize(obj,ctxt) as BaseParameter;\r\n        param.id=obj['id'];\r\n        param.index=obj['index'] as number;\r\n        param.visible=obj['visible'] as boolean;\r\n        param.readonly=obj['readonly'] as boolean;\r\n        param.groupId=obj['groupId'];\r\n        param.groupCode=obj['groupCode'];\r\n        param.groupName=obj['groupName'];\r\n        param.parameterTypeDesc=obj['parameterTypeDesc'];\r\n        return param;\r\n    }\r\n}","import { IParameterSerializer, Parameter, ISerializeContext } from '@ecp-caf/common-structure';\r\nimport { ItemCategoryParam } from '../../extension/parameter/item-category-param';\r\nimport { BaseParameterSerializer } from './base-param-serializer';\r\n\r\nexport class ItemCategoryParamSerializer implements IParameterSerializer{\r\n    \r\n    serialize(param: Parameter, ctxt: ISerializeContext): Object {\r\n        let jobj=new Object();\r\n        if(!param){\r\n            return jobj;\r\n        }\r\n        let itemCategoryParam=param as ItemCategoryParam;\r\n        let serializer=new BaseParameterSerializer();\r\n        jobj=serializer.serialize(itemCategoryParam,ctxt);\r\n        jobj['kind']=itemCategoryParam.kind;\r\n        return jobj;\r\n    }    \r\n    \r\n    deserialize(obj: Object, ctxt: ISerializeContext):Parameter {\r\n        if(!obj){\r\n            return null;\r\n        }\r\n        let param=new ItemCategoryParam();\r\n        let serializer=new BaseParameterSerializer();\r\n        param=serializer.deserialize(obj,ctxt) as ItemCategoryParam;\r\n        return param;\r\n    }\r\n}","import { IParameterSerializerFactory, DefaultParameterSerializer, IParameterSerializer, } from '@ecp-caf/common-structure';\r\nimport { ParamExtensionConst } from '../../../const/parameter-extension-const';\r\nimport { ItemCategoryParamSerializer } from '../param-serialzier/item-category-param-serializer';\r\nimport { BaseParameterSerializer } from '../param-serialzier/base-param-serializer';\r\n\r\nexport class UbccParamSerializerFactory implements IParameterSerializerFactory{\r\n\r\n    get(kind: string): IParameterSerializer {\r\n        switch(kind){\r\n            case ParamExtensionConst.BASE_PARAM:\r\n                return new BaseParameterSerializer();\r\n            case ParamExtensionConst.ITEM_CATEGORY_PARAM:\r\n                return new ItemCategoryParamSerializer();\r\n            default:\r\n                return new DefaultParameterSerializer();\r\n        }\r\n    }\r\n\r\n}","import { DefaultDataRow } from '../../param-data-vo/default-data-row';\r\nimport { DataRow } from '../../param-data-vo/data-row';\r\nimport { DataItem } from '../../param-data-vo/data-item';\r\nimport { IDataRowSerializer } from './i-data-row-serializer';\r\n\r\nexport class DefaultDataRowSerializer implements IDataRowSerializer{\r\n\r\n    serialize(dataRow:DataRow):Object{\r\n        let jobj=new Object();\r\n        if(!dataRow){\r\n            return null;\r\n        }\r\n        let defaultDataRow=dataRow as DefaultDataRow;\r\n        jobj['id']=defaultDataRow.id;\r\n        jobj['kind']=defaultDataRow.kind;\r\n        if(defaultDataRow.paramItems){\r\n            jobj['paramItems']=[];\r\n            defaultDataRow.paramItems.forEach(paramItem => {\r\n                jobj['paramItems']=paramItem;\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DataRow{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dataRow=new DefaultDataRow();\r\n        dataRow.id=jobj['id'];\r\n        if(jobj['paramItems']){\r\n            dataRow.paramItems=new Array<DataItem>();\r\n            jobj['paramItems'].forEach(paramItemJobj => {\r\n                dataRow.paramItems.push(Object.assign(new DataItem(),paramItemJobj));\r\n            });\r\n        }\r\n        return dataRow;\r\n    }\r\n}","import { IDataRowSerializer } from './i-data-row-serializer';\r\nimport { DataRow } from '../../param-data-vo/data-row';\r\nimport { DimensionDataRow } from '../../param-data-vo/dimension-data-row';\r\nimport { DataItem } from '../../param-data-vo/data-item';\r\n\r\nexport class DimensionDataRowSerializer implements IDataRowSerializer{\r\n\r\n    serialize(dataRow:DataRow):Object{\r\n        let jobj=new Object();\r\n        if(!dataRow){\r\n            return null;\r\n        }\r\n        let dimensionDataRow=dataRow as DimensionDataRow;\r\n        jobj['id']=dimensionDataRow.id;\r\n        jobj['kind']=dimensionDataRow.kind;\r\n        if(dimensionDataRow.dimensionDataItems){\r\n            jobj['dimensionDataItems']=[];\r\n            dimensionDataRow.dimensionDataItems.forEach(dimensionDataItem => {\r\n                jobj['dimensionDataItems']=dimensionDataItem;\r\n            });\r\n        }\r\n        if(dimensionDataRow.paramDataItems){\r\n            jobj['paramDataItems']=[];\r\n            dimensionDataRow.paramDataItems.forEach(paramItem => {\r\n                jobj['paramDataItems']=paramItem;\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DataRow{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dataRow=new DimensionDataRow();\r\n        dataRow.id=jobj['id'];\r\n        if(jobj['dimensionDataItems']){\r\n            dataRow.dimensionDataItems=new Array<DataItem>();\r\n            jobj['dimensionDataItems'].forEach(dimensionDataItemJobj => {\r\n                dataRow.dimensionDataItems.push(Object.assign(new DataItem(),dimensionDataItemJobj));\r\n            });\r\n        }\r\n        if(jobj['paramDataItems']){\r\n            dataRow.paramDataItems=new Array<DataItem>();\r\n            jobj['paramDataItems'].forEach(paramDataItemsJobj => {\r\n                dataRow.dimensionDataItems.push(Object.assign(new DataItem(),paramDataItemsJobj));\r\n            });\r\n        }\r\n        return dataRow;\r\n    }\r\n    \r\n}","import { IDataRowSerializer } from '../param-data-serializer/i-data-row-serializer';\r\nimport { DataRowExtensionConst } from '../../../const/data-row-extension-const';\r\nimport { DefaultDataRowSerializer } from '../param-data-serializer/default-data-row-serializer';\r\nimport { DimensionDataRowSerializer } from '../param-data-serializer/dimension-data-row-serializer';\r\n\r\nexport class UbccParamDataRowSerializerFactory{\r\n    \r\n    get(kind: string): IDataRowSerializer {\r\n        switch (kind) {\r\n            case DataRowExtensionConst.DEFAULT_DATA_ROW:\r\n                return new DefaultDataRowSerializer();\r\n            case DataRowExtensionConst.DIMENSION_DATA_ROW:\r\n                return new DimensionDataRowSerializer();\r\n            default:\r\n                throw new Error(`æªè·åå°${kind}ç±»åçDATA_ROWåºååå¨`);\r\n        }\r\n    }\r\n\r\n}","import { UbccParamSerializerContext } from '../serializer/serializer-context/ubcc-serializer-context';\r\nimport { UbccParamDataRowSerializerFactory } from '../serializer/factory/ubcc-param-data-row-serializer-factory';\r\n\r\n// @dynamic\r\nexport class SerializerUtils{\r\n\r\n    private static context:UbccParamSerializerContext;\r\n    private static dataRowFactory:UbccParamDataRowSerializerFactory;\r\n  \r\n    public static getContext():UbccParamSerializerContext{\r\n        if(!SerializerUtils.context){\r\n            SerializerUtils.context=new UbccParamSerializerContext();\r\n        }\r\n        return SerializerUtils.context;\r\n    }\r\n\r\n    public static getUbccParamDataRowSerializerFactory():UbccParamDataRowSerializerFactory{\r\n        if(!SerializerUtils.dataRowFactory){\r\n            SerializerUtils.dataRowFactory=new UbccParamDataRowSerializerFactory();\r\n        }\r\n        return SerializerUtils.dataRowFactory;\r\n    }\r\n}","import { IDataTypeSerializer, ISerializeContext, IDataType, DefaultStructuredTypeSerializer } from '@ecp-caf/common-structure';\r\nimport { HelpType } from '../../extension/data-type/help-type';\r\nimport { SerializerUtils } from '../../utils/serializer-utils';\r\n\r\nexport class HelpTypeSerialzier implements IDataTypeSerializer{\r\n    \r\n    serialize(type: IDataType, ctxt: ISerializeContext): Object {\r\n        let jobj=new Object();\r\n        if(!type){\r\n            return null;\r\n        }\r\n        let serializer=new DefaultStructuredTypeSerializer();\r\n        jobj=serializer.serialize(type,SerializerUtils.getContext());\r\n        let helpType=type as HelpType;\r\n        jobj['helpId']=helpType.helpId;\r\n        jobj['helpCode']=helpType.helpCode;\r\n        jobj['helpName']=helpType.helpName;\r\n        jobj['kind']=helpType.kind;\r\n        return jobj;\r\n    }    \r\n    \r\n    deserialize(obj: Object, ctxt:ISerializeContext): IDataType {\r\n        if(!obj){\r\n            return null;\r\n        }\r\n        let helpType=new HelpType();\r\n        let serializer=new DefaultStructuredTypeSerializer();\r\n        helpType=serializer.deserialize(obj,SerializerUtils.getContext()) as HelpType;\r\n        helpType.helpId=obj['helpId'];\r\n        helpType.helpCode=obj['helpCode'];\r\n        helpType.helpName=obj['helpName'];\r\n        return helpType;\r\n    }\r\n\r\n}","import { IDataTypeSerializer, ISerializeContext, IDataType } from '@ecp-caf/common-structure';\r\nimport { StructureTypeRef } from '../../extension/data-type/structure-type-ref';\r\nimport { StructureTypeRefEnum } from '../../extension/data-type/structure-type-ref-enum';\r\n\r\nexport class StructureTypeRefSerializer implements IDataTypeSerializer{\r\n\r\n    serialize(type: IDataType, ctxt: ISerializeContext): Object {\r\n        if(!type){\r\n            return null;\r\n        }\r\n        let jobj=new Object();\r\n        let refType=type as StructureTypeRef;\r\n        jobj['kind']=refType.kind;\r\n        jobj['refId']=refType.refId;\r\n        jobj['type']=refType.type;\r\n        return jobj;\r\n    }    \r\n    \r\n    deserialize(obj: Object, ctxt: ISerializeContext): IDataType {\r\n        if(!obj){\r\n            return null;\r\n        }\r\n        let refType=new StructureTypeRef();\r\n        refType.refId=obj['refId'];\r\n        refType.type=obj['type'] as StructureTypeRefEnum;\r\n        return refType;\r\n    }\r\n\r\n}","import { IDataTypeSerializerFactory, IDataTypeSerializer, DefaultDataTypeSerializerFactory } from '@ecp-caf/common-structure';\r\nimport { DataTypeExtensionConst } from '../../../const/data-type-extension-const';\r\nimport { HelpTypeSerialzier } from '../data-type-serializer/help-type-serializer';\r\nimport { StructureTypeRefSerializer } from '../data-type-serializer/structure-type-ref-serializer';\r\n\r\nexport class UbccDataTypeSerializerFactory implements IDataTypeSerializerFactory{\r\n    \r\n    get(kind: string): IDataTypeSerializer {\r\n        switch (kind) {\r\n            case DataTypeExtensionConst.HELP_TYPE:\r\n                return new HelpTypeSerialzier();\r\n            case DataTypeExtensionConst.UBCC_STRUCTURE_TYPE_REF:\r\n                return new StructureTypeRefSerializer();\r\n            default:\r\n                return new DefaultDataTypeSerializerFactory().get(kind);\r\n        }\r\n    }\r\n\r\n}","import { UbccIntegerConstraint } from '../../extension/constraint/ubcc-integer-constraint';\r\nimport { IConstraint, IConstraintSerializer, ISerializeContext } from '@ecp-caf/common-structure';\r\n\r\nexport class UbccIntegerConstraintSerializer implements IConstraintSerializer{\r\n\r\n    serialize(constraint:IConstraint, ctxt: ISerializeContext):Object{\r\n        let jobj=new Object();\r\n        if(!constraint){\r\n            return jobj;\r\n        }\r\n        let integerConstraint=constraint as UbccIntegerConstraint;\r\n        jobj['kind']=integerConstraint.kind;\r\n        jobj['max']=integerConstraint.max;\r\n        jobj['min']=integerConstraint.min;\r\n        jobj['unit']=integerConstraint.unit;\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object, ctxt: ISerializeContext):IConstraint{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let integerConstraint=new UbccIntegerConstraint();\r\n        integerConstraint.max=jobj['max'] as number;\r\n        integerConstraint.min=jobj['min'] as number;\r\n        integerConstraint.unit=jobj['unit'];\r\n        return integerConstraint;\r\n    }\r\n\r\n}","import { UbccDecimalConstraint } from '../../extension/constraint/ubcc-decimal-constraint';\r\nimport { IConstraint, IConstraintSerializer, ISerializeContext } from '@ecp-caf/common-structure';\r\n\r\nexport class UbccDecimalConstraintSerializer implements IConstraintSerializer{\r\n    \r\n    serialize(constraint:IConstraint,ctxt: ISerializeContext):Object{\r\n        let jobj=new Object();\r\n        if(!constraint){\r\n            return jobj;\r\n        }\r\n        let decimalConstraint=constraint as UbccDecimalConstraint;\r\n        jobj['kind']=decimalConstraint.kind;\r\n        jobj['max']=decimalConstraint.max;\r\n        jobj['min']=decimalConstraint.min;\r\n        jobj['precision']=decimalConstraint.precision;\r\n        jobj['unit']=decimalConstraint.unit;\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object,ctxt: ISerializeContext):IConstraint{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let decimalConstraint=new UbccDecimalConstraint();\r\n        decimalConstraint.max=jobj['max'] as number;\r\n        decimalConstraint.min=jobj['min'] as number;\r\n        decimalConstraint.precision=jobj['precision'] as number;\r\n        decimalConstraint.unit=jobj['unit'];\r\n        return decimalConstraint;\r\n    }\r\n}","import { UbccDateTimeConstraint } from '../../extension/constraint/ubcc-date-time-constraint';\r\nimport { IConstraint, IConstraintSerializer, ISerializeContext } from '@ecp-caf/common-structure';\r\n\r\nexport class UbccDateTimeConstraintSerializer implements IConstraintSerializer{\r\n\r\n    serialize(constraint:IConstraint,ctxt: ISerializeContext):Object{\r\n        let jobj=new Object();\r\n        if(!constraint){\r\n            return jobj;\r\n        }\r\n        let dataTimeConstraint=constraint as UbccDateTimeConstraint;\r\n        jobj['kind']=dataTimeConstraint.kind;\r\n        jobj['format']=dataTimeConstraint.format;\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object,ctxt: ISerializeContext):IConstraint{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dataTimeConstraint=new UbccDateTimeConstraint();\r\n        dataTimeConstraint.format=jobj['format'];\r\n        return dataTimeConstraint;\r\n    }\r\n\r\n}","import { IConstraint, IConstraintSerializer, ISerializeContext } from '@ecp-caf/common-structure';\r\nimport { UbccStringConstraint } from '../../extension/constraint/ubcc-string-constaint';\r\n\r\nexport class UbccStringConstraintSerializer implements IConstraintSerializer{\r\n\r\n    serialize(constraint:IConstraint,ctxt: ISerializeContext):Object{\r\n        let jobj=new Object();\r\n        if(!constraint){\r\n            return jobj;\r\n        }\r\n        let stringConstraint=constraint as UbccStringConstraint;\r\n        jobj['kind']=stringConstraint.kind;\r\n        jobj['maxLength']=stringConstraint.maxLength;\r\n        jobj['minLength']=stringConstraint.minLength;\r\n        jobj['regexExpress']=stringConstraint.regexExpress;\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object,ctxt: ISerializeContext):IConstraint{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let constaint=new UbccStringConstraint();\r\n        constaint.maxLength=jobj['maxLength'] as number;\r\n        constaint.minLength=jobj['minLength'] as number;\r\n        constaint.regexExpress=jobj['regexExpress'];\r\n        return constaint;\r\n    }\r\n\r\n}","import { IConstraintSerializer, DefaultConstraintSerializer, IConstraintSerializerFactory } from '@ecp-caf/common-structure';\r\nimport { ConstraintExtenionConst } from '../../../const/constraint-extension-const';\r\nimport { UbccIntegerConstraintSerializer } from '../constraint-serializer/integer-constraint-serializer';\r\nimport { UbccDecimalConstraintSerializer } from '../constraint-serializer/decimal-constraint-serializer';\r\nimport { UbccDateTimeConstraintSerializer } from '../constraint-serializer/date-time-constraint-serializer';\r\nimport { UbccStringConstraintSerializer } from '../constraint-serializer/string-constraint-serializer';\r\n\r\nexport class UbccParamConstraintSerializerFactory implements IConstraintSerializerFactory {\r\n\r\n    get(kind: string): IConstraintSerializer {\r\n        switch (kind) {\r\n            case ConstraintExtenionConst.UBCC_INTEGER_CONSTRAINT:\r\n                return new UbccIntegerConstraintSerializer();\r\n            case ConstraintExtenionConst.UBCC_DECIMAL_CONSTRAINT:\r\n                return new UbccDecimalConstraintSerializer();\r\n            case ConstraintExtenionConst.UBCC_STRING_CONSTRAINT:\r\n                return new UbccStringConstraintSerializer();\r\n            case ConstraintExtenionConst.UBCC_DATE_TIME_CONSTRAINT:\r\n                return new UbccDateTimeConstraintSerializer();\r\n            default:\r\n                return new DefaultConstraintSerializer();\r\n        }\r\n    }\r\n}","import { ISerializeContext, IParameterSerializerFactory, IPropertySerializerFactory, IDataTypeSerializerFactory, IOperationSerializerFactory, DefaultOperationSerializerFactory, DefaultPropertySerializerFactory, IConstraintSerializerFactory } from '@ecp-caf/common-structure';\r\nimport { UbccParamSerializerFactory } from '../factory/ubcc-param-serializer-factory';\r\nimport { UbccDataTypeSerializerFactory } from '../factory/ubcc-data-type-serializer-factory';\r\nimport { UbccParamConstraintSerializerFactory } from '../factory/ubcc-param-constraint-serializer-factory';\r\n\r\nexport class UbccParamSerializerContext implements ISerializeContext{\r\n\r\n    private dataTypeFactory: IDataTypeSerializerFactory;\r\n    private parameterFactory: IParameterSerializerFactory;\r\n    private operationFactory: IOperationSerializerFactory;\r\n    private propertyFactory: IPropertySerializerFactory;\r\n    private constraintFactory:IConstraintSerializerFactory;\r\n   \r\n    getDataTypeSerializerFactory(): IDataTypeSerializerFactory {\r\n        if (!this.dataTypeFactory) {\r\n            this.dataTypeFactory = new UbccDataTypeSerializerFactory();\r\n        }\r\n        return this.dataTypeFactory;\r\n    }\r\n\r\n\r\n    getParameterSerializerFactory(): IParameterSerializerFactory {\r\n        if (!this.parameterFactory) {\r\n            this.parameterFactory = new UbccParamSerializerFactory();\r\n        }\r\n        return this.parameterFactory;\r\n    }\r\n\r\n    getOperationSerializerFactory(): IOperationSerializerFactory {\r\n        if (!this.operationFactory) {\r\n            this.operationFactory = new DefaultOperationSerializerFactory();\r\n        }\r\n        return this.operationFactory;\r\n    }\r\n\r\n    getPropertySerializerFactory(): IPropertySerializerFactory {\r\n        if (!this.propertyFactory) {\r\n            this.propertyFactory = new DefaultPropertySerializerFactory();\r\n        }\r\n        return this.propertyFactory;\r\n    }\r\n\r\n    getConstraintSerializerFactory(): IConstraintSerializerFactory {\r\n        if(!this.constraintFactory){\r\n            this.constraintFactory=new UbccParamConstraintSerializerFactory();\r\n        }\r\n        return this.constraintFactory;\r\n    }\r\n  \r\n}","export class ParameterGroup{\r\n    groupIndex:number;\r\n    groupId:string;\r\n    groupCode:string;\r\n    groupName:string;\r\n}","import { UbccParamTemplate } from '../../param-template-vo/ubcc-param-template';\r\nimport { UbccParamSerializerContext } from '../serializer-context/ubcc-serializer-context';\r\nimport { Parameter, StructuredType } from '@ecp-caf/common-structure';\r\nimport { ParameterGroup } from '../../param-template-vo/parameter-group';\r\n\r\nexport class UbccParamTemplateSerializer{\r\n\r\n    serialize(template: UbccParamTemplate):Object{\r\n        let jobj=new Object();\r\n        if(!template){\r\n            return null;\r\n        }\r\n        jobj['id'] =template.id;\r\n        jobj['index'] =template.index;\r\n        jobj['code'] =template.code;\r\n        jobj['name'] =template.name;\r\n        jobj['description'] =template.description;\r\n        jobj['bizTypeId'] =template.bizTypeId;\r\n        jobj['bizTypePath'] =template.bizTypePath;\r\n        jobj['bizModule'] =template.bizModule;\r\n        jobj['templateType'] =template.templateType;\r\n        jobj['groupEnable'] =template.groupEnable;\r\n        let context=new UbccParamSerializerContext();\r\n        if(template.params){\r\n            jobj['params']=new Array<Object>();\r\n            template.params.forEach(param => {\r\n                let paramJobj=new Object();\r\n                let serializer=context.getParameterSerializerFactory().get(param.kind);\r\n                paramJobj=serializer.serialize(param,context);\r\n                jobj['params'].push(paramJobj);\r\n            });\r\n        }\r\n        if(template.structuredTypes){\r\n            jobj['structuredTypes']=new Array<Object>();\r\n            template.structuredTypes.forEach(structure => {\r\n                let structureJobj=new Object();\r\n                let serializer=context.getDataTypeSerializerFactory().get(structure.kind);\r\n                structureJobj=serializer.serialize(structure,context);\r\n                jobj['structuredTypes'].push(structureJobj);\r\n            });\r\n        }\r\n        if(template.groups){\r\n            jobj['groups']=new Array<Object>();\r\n            template.groups.forEach(group => {\r\n                jobj['groups'].push(group);\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserializer(jobj:Object):UbccParamTemplate{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let template=new UbccParamTemplate();\r\n        template.id=jobj['id'];\r\n        template.index=jobj['index'] as number;\r\n        template.code=jobj['code'];\r\n        template.name=jobj['name'];\r\n        template.description=jobj['description'];\r\n        template.bizTypeId=jobj['bizTypeId'];\r\n        template.bizTypePath=jobj['bizTypePath'];\r\n        template.bizModule=jobj['bizModule'];\r\n        template.templateType=jobj['templateType'];\r\n        template.groupEnable=jobj['groupEnable'];\r\n        let context=new UbccParamSerializerContext();\r\n        if(jobj['params']){\r\n            template.params=new Array<Parameter>();\r\n            jobj['params'].forEach(paramJobj => {\r\n                let serializer=context.getParameterSerializerFactory().get(paramJobj['kind']);\r\n                let param= serializer.deserialize(paramJobj,context);\r\n                template.params.push(param);\r\n            });\r\n        }\r\n        if(jobj['structuredTypes']){\r\n            template.structuredTypes=new Array<StructuredType>();\r\n            jobj['structuredTypes'].forEach(structurJobj => {\r\n                let serializer=context.getDataTypeSerializerFactory().get(structurJobj['kind']);\r\n                let structure= serializer.deserialize(structurJobj,context) as StructuredType;\r\n                template.structuredTypes.push(structure);\r\n            });\r\n        }\r\n        if(jobj['groups']){\r\n            template.groups=new Array<ParameterGroup>();\r\n            jobj['groups'].forEach(groupJobj => {\r\n                template.groups.push(Object.assign(new ParameterGroup(),groupJobj));\r\n            });\r\n        }\r\n        return template;\r\n    }\r\n}","import { DimensionItem } from '../../param-dimension/dimension-item';\r\nimport { DataType } from '@ecp-caf/common-structure';\r\nimport { SerializerUtils } from '../../utils/serializer-utils';\r\n\r\nexport class DimensionItemSerializer{\r\n\r\n    serialize(dimensionItem:DimensionItem):Object{\r\n        let jobj=new Object();\r\n        if(!dimensionItem){\r\n            return null;\r\n        }\r\n        jobj['id']=dimensionItem.id;\r\n        jobj['index']=dimensionItem.index;\r\n        jobj['code']=dimensionItem.code;\r\n        jobj['name']=dimensionItem.name;\r\n        if(dimensionItem.dataType){\r\n            let context=SerializerUtils.getContext();\r\n            let serializer=context.getDataTypeSerializerFactory().get(dimensionItem.dataType.kind);\r\n            jobj['dataType']=serializer.serialize(dimensionItem.dataType,context);\r\n            //dataTypeä½ä¸ºå­ç¬¦ä¸²å­\r\n            jobj['dataType']=JSON.stringify(jobj['dataType']);\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DimensionItem{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dimensionItem=new DimensionItem();\r\n        dimensionItem.id=jobj['id'];\r\n        dimensionItem.index=jobj['index'] as number;\r\n        dimensionItem.code=jobj['code'];\r\n        dimensionItem.name=jobj['name'];\r\n        if(jobj['dataType']){\r\n            //dataTypeä½ä¸ºå­ç¬¦ä¸²å­\r\n            jobj['dataType']=JSON.parse(jobj['dataType']);\r\n\r\n            let context=SerializerUtils.getContext();\r\n            let kind=jobj['dataType']['kind'];\r\n            let serializer=context.getDataTypeSerializerFactory().get(kind);\r\n            dimensionItem.dataType=serializer.deserialize(jobj['dataType'],context) as DataType;\r\n        }\r\n        return dimensionItem;\r\n    }\r\n}","import { Dimension } from '../../param-dimension/dimension';\r\nimport { DimensionItemSerializer } from './dimension-item-serializer';\r\nimport { DimensionItem } from '../../param-dimension/dimension-item';\r\n\r\nexport class DimensionSerializer{\r\n    \r\n    serialize(dimension:Dimension):Object{\r\n        let jobj=new Object();\r\n        if(!dimension){\r\n            return null;\r\n        }\r\n        jobj['id']=dimension.id;\r\n        jobj['code']=dimension.code;\r\n        jobj['name']=dimension.name;\r\n        if(dimension.dimensionItems){\r\n            jobj['dimensionItems']=[];\r\n            let serializer=new DimensionItemSerializer();\r\n            dimension.dimensionItems.forEach(dimensionItem => {\r\n                jobj['dimensionItems'].push(serializer.serialize(dimensionItem));\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):Dimension{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dimension=new Dimension();\r\n        dimension.id= jobj['id'];\r\n        dimension.code= jobj['code'];\r\n        dimension.name= jobj['name'];\r\n        if(jobj['dimensionItems']){\r\n            dimension.dimensionItems=new Array<DimensionItem>();\r\n            let serializer=new DimensionItemSerializer();\r\n            jobj['dimensionItems'].forEach(dimensionItemJobj => {\r\n                dimension.dimensionItems.push(serializer.deserialize(dimensionItemJobj));\r\n            });\r\n        }\r\n        return dimension;\r\n    }\r\n}","import { DataItem } from '../../param-data-vo/data-item';\r\n\r\nexport class DataItemSerializer{\r\n\r\n    serialize(dataItem:DataItem):Object{\r\n        if(!dataItem){\r\n            return null;\r\n        }\r\n        let jobj=new Object();\r\n        jobj['id']=dataItem.id;\r\n        jobj['dataCode']=dataItem.dataCode;\r\n        jobj['dataName']=dataItem.dataName;\r\n        jobj['dataDesc']=dataItem.dataDesc;\r\n        jobj['dataValue']=dataItem.dataValue;\r\n        jobj['dataType']=dataItem.dataType;\r\n\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DataItem{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dataItem=new DataItem();\r\n        dataItem.id=jobj['id'];\r\n        dataItem.dataCode=jobj['dataCode'];\r\n        dataItem.dataName=jobj['dataName'];\r\n        dataItem.dataDesc=jobj['dataDesc'];\r\n        dataItem.dataValue=jobj['dataValue'];\r\n        dataItem.dataType=jobj['dataType'];\r\n        return dataItem;\r\n    }\r\n}","import { DimensionData } from '../../param-template-assignment-vo/dimension-data';\r\nimport { DataItemSerializer } from '../param-data-serializer/data-item-serializer';\r\n\r\nexport class DimensionDataSerializer{\r\n    serialize(dimensionData:DimensionData):Object{\r\n        if(!dimensionData){\r\n            return null;\r\n        }\r\n        let jobj=new Object();\r\n        jobj['id']=dimensionData.id;\r\n        if(dimensionData.dataItems){\r\n            jobj['dataItems']=dimensionData.dataItems.map(item=>new DataItemSerializer().serialize(item));\r\n        }\r\n\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DimensionData{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dimensionInfo=new DimensionData();\r\n        dimensionInfo.id=jobj['id'];\r\n        if(jobj['dataItems']){\r\n            dimensionInfo.dataItems=jobj['dataItems'].map(item=>new DataItemSerializer().deserialize(item));\r\n        }\r\n\r\n        return dimensionInfo;\r\n    }\r\n}","import { DimensionInfo } from '../../param-template-assignment-vo/dimension-info';\r\nimport { DimensionSerializer } from '../dimension-serializer/dimension-serializer';\r\nimport { DimensionDataSerializer } from './dimension-data-serializer';\r\n\r\nexport class DimensionInfoSerializer{\r\n    serialize(dimensionInfo:DimensionInfo):Object{\r\n        if(!dimensionInfo){\r\n            return null;\r\n        }\r\n        let jobj=new Object();\r\n        jobj['dataModificationAllow']=dimensionInfo.dataModificationAllow;\r\n\r\n        if(dimensionInfo.data){\r\n            jobj['data']=dimensionInfo.data.map(dimensionData=>new DimensionDataSerializer().serialize(dimensionData));\r\n        }\r\n\r\n        if(dimensionInfo.definition){\r\n            let serializer=new DimensionSerializer();\r\n            jobj['definition']=serializer.serialize(dimensionInfo.definition);\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DimensionInfo{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dimensionInfo=new DimensionInfo();\r\n        dimensionInfo.dataModificationAllow=jobj['dataModificationAllow'] as boolean;\r\n\r\n        if(jobj['data']){\r\n            dimensionInfo.data=jobj['data'].map(dimensionData=>new DimensionDataSerializer().deserialize(dimensionData));\r\n        }\r\n\r\n        if(jobj['definition']){\r\n            let serializer=new DimensionSerializer();\r\n            dimensionInfo.definition=serializer.deserialize(jobj['definition']);\r\n        }\r\n        return dimensionInfo;\r\n    }\r\n}","import { UbccParamTemplateAssignment } from '../../param-template-assignment-vo/ubcc-param-template-assignment';\r\nimport { DimensionInfoSerializer } from './dimension-info-serializer';\r\nimport { EventInfo } from '../../param-template-assignment-vo/eventInfo';\r\n\r\nexport class UbccParamTemplateAssignmentSerializer{\r\n\r\n    serialize(templateAssignment:UbccParamTemplateAssignment):Object{\r\n        if(!templateAssignment){\r\n            return null;\r\n        }\r\n        let jobj=new Object();\r\n        jobj['id']=templateAssignment.id;\r\n        jobj['templateId']=templateAssignment.templateId;\r\n        jobj['index']=templateAssignment.index;\r\n        jobj['templateCode']=templateAssignment.templateCode;\r\n        jobj['templateName']=templateAssignment.templateName;\r\n        jobj['templateType']=templateAssignment.templateType;\r\n        jobj['bizTypeId']=templateAssignment.bizTypeId;\r\n        jobj['useEvent']=templateAssignment.useEvent;\r\n        jobj['eventInfo']=templateAssignment.eventInfo;\r\n        jobj['useDimension']=templateAssignment.useDimension;\r\n        if(templateAssignment.dimensionInfo){\r\n            let serializer=new DimensionInfoSerializer();\r\n            jobj['dimensionInfo']=serializer.serialize(templateAssignment.dimensionInfo);\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):UbccParamTemplateAssignment{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let templateAssignment=new UbccParamTemplateAssignment();\r\n        templateAssignment.id=jobj['id'];\r\n        templateAssignment.templateId=jobj['templateId'];\r\n        templateAssignment.index=jobj['index'] as number;\r\n        templateAssignment.templateCode=jobj['templateCode'];\r\n        templateAssignment.templateName=jobj['templateName'];\r\n        templateAssignment.templateType=jobj['templateType'];\r\n        templateAssignment.bizTypeId=jobj['bizTypeId'];\r\n        templateAssignment.useEvent=jobj['useEvent'] as boolean;\r\n        templateAssignment.eventInfo=Object.assign(new EventInfo(),jobj['eventInfo']);\r\n        templateAssignment.useDimension=jobj['useDimension'] as boolean;\r\n        if(jobj['dimensionInfo']){\r\n            let serializer=new DimensionInfoSerializer();\r\n            templateAssignment.dimensionInfo=serializer.deserialize(jobj['dimensionInfo']);\r\n        }\r\n        return templateAssignment;\r\n    }\r\n}","import { UbccParamDataVo } from '../../param-data-vo/ubcc-param-data-vo';\r\nimport { DataRow } from '../../param-data-vo/data-row';\r\nimport { SerializerUtils } from '../../utils/serializer-utils';\r\n\r\nexport  class ParamDataVoSerializer{\r\n\r\n    serialize(paramData:UbccParamDataVo):Object{\r\n        let jobj=new Object();\r\n        if(!paramData){\r\n            return jobj;\r\n        }\r\n        jobj['templateId']=paramData.templateId;\r\n        jobj['bizTypeId']=paramData.bizTypeId;\r\n        if(paramData.data){\r\n            jobj['data']=[];\r\n            paramData.data.forEach(dataRow => {\r\n                let serializer=SerializerUtils.getUbccParamDataRowSerializerFactory().get(dataRow.getKind());\r\n                jobj['data'].push(serializer.serialize(dataRow));\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):UbccParamDataVo{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let paramData=new UbccParamDataVo();\r\n        paramData.templateId=jobj['templateId'];\r\n        paramData.bizTypeId=jobj['bizTypeId'];\r\n        if(jobj['data']){\r\n            paramData.data=new Array<DataRow>();\r\n            jobj['data'].forEach(dataRowJobj => {\r\n                let serializer=SerializerUtils.getUbccParamDataRowSerializerFactory().get(dataRowJobj['kind']);\r\n                paramData.data.push(serializer.deserialize(dataRowJobj));\r\n            });\r\n        }\r\n        return paramData;\r\n    }\r\n}"],"names":["NgModule","tslib_1.__extends","Parameter","StructuredType","DataType","DefaultParameterSerializer","DefaultStructuredTypeSerializer","DefaultDataTypeSerializerFactory","DefaultConstraintSerializer","DefaultOperationSerializerFactory","DefaultPropertySerializerFactory"],"mappings":"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"}
