{"version":3,"sources":["ng://@gsp-cmp/ubcc-param-vo/lib/ubcc-param-vo.module.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-vo/ubcc-param-template.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-vo/ubcc-param-template-vo.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-assignment-vo/ubcc-param-template-assignment.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-assignment-vo/dimension-data.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-assignment-vo/dimension-info.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-assignment-vo/eventInfo.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-dimension/dimension.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-dimension/dimension-item.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-data-vo/ubcc-param-data-vo.ts","ng://@gsp-cmp/ubcc-param-vo/lib/const/data-row-extension-const.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-data-vo/dimension-data-row.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-data-vo/default-data-row.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-data-vo/data-item.ts","node_modules/tslib/tslib.es6.js","ng://@gsp-cmp/ubcc-param-vo/lib/const/parameter-extension-const.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/parameter/base-param.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/parameter/item-category-param.ts","ng://@gsp-cmp/ubcc-param-vo/lib/const/data-type-extension-const.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/data-type/help-type.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/data-type/structure-type-ref.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/data-type/structure-type-ref-enum.ts","ng://@gsp-cmp/ubcc-param-vo/lib/const/constraint-extension-const.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/constraint/ubcc-string-constaint.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/constraint/ubcc-date-time-constraint.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/constraint/ubcc-decimal-constraint.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/constraint/ubcc-integer-constraint.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-serialzier/base-param-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-serialzier/item-category-param-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/factory/ubcc-param-serializer-factory.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-data-serializer/default-data-row-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-data-serializer/dimension-data-row-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/factory/ubcc-param-data-row-serializer-factory.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/utils/serializer-utils.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/data-type-serializer/help-type-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/data-type-serializer/structure-type-ref-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/factory/ubcc-data-type-serializer-factory.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/constraint-serializer/integer-constraint-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/constraint-serializer/decimal-constraint-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/constraint-serializer/date-time-constraint-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/constraint-serializer/string-constraint-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/factory/ubcc-param-constraint-serializer-factory.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/serializer-context/ubcc-serializer-context.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-vo/parameter-group.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/template-serialzier/ubcc-param-template-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/dimension-serializer/dimension-item-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/dimension-serializer/dimension-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-data-serializer/data-item-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/template-assignment-serializer/dimension-data-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/template-assignment-serializer/dimension-info-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/template-assignment-serializer/template-assignment-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-data-serializer/param-data-vo-serializer.ts"],"names":["UbccParamVoModule","NgModule","args","declarations","imports","exports","UbccParamTemplate","this","params","groups","structuredTypes","UbccParamTemplateVo","UbccParamTemplateAssignment","DimensionData","DimensionInfo","EventInfo","Dimension","DimensionItem","UbccParamDataVo","DataRowExtensionConst","DEFAULT_DATA_ROW","DIMENSION_DATA_ROW","DimensionDataRow","kind","prototype","getKind","DefaultDataRow","DataItem","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","ParamExtensionConst","BASE_PARAM","ITEM_CATEGORY_PARAM","BaseParameter","_this","_super","call","visible","readonly","tslib_1.__extends","Parameter","ItemCategoryParam","apply","arguments","DataTypeExtensionConst","HELP_TYPE","UBCC_STRUCTURE_TYPE_REF","HelpType","StructuredType","StructureTypeRef","DataType","StructureTypeRefEnum","ENUM","HELP","ConstraintExtenionConst","UBCC_STRING_CONSTRAINT","UBCC_INTEGER_CONSTRAINT","UBCC_DATE_TIME_CONSTRAINT","UBCC_DECIMAL_CONSTRAINT","UbccStringConstraint","UbccDateTimeConstraint","UbccDecimalConstraint","UbccIntegerConstraint","BaseParameterSerializer","serialize","param","ctxt","jobj","baseParam","DefaultParameterSerializer","id","index","groupId","groupCode","groupName","parameterTypeDesc","deserialize","obj","ItemCategoryParamSerializer","itemCategoryParam","UbccParamSerializerFactory","get","DefaultDataRowSerializer","dataRow","defaultDataRow","paramItems","forEach","paramItem","paramItemJobj","push","assign","DimensionDataRowSerializer","dimensionDataRow","dimensionDataItems","dimensionDataItem","paramDataItems","dimensionDataItemJobj","paramDataItemsJobj","UbccParamDataRowSerializerFactory","Error","SerializerUtils","getContext","context","UbccParamSerializerContext","getUbccParamDataRowSerializerFactory","dataRowFactory","HelpTypeSerialzier","type","helpType","DefaultStructuredTypeSerializer","helpId","helpCode","helpName","StructureTypeRefSerializer","refType","refId","UbccDataTypeSerializerFactory","DefaultDataTypeSerializerFactory","UbccIntegerConstraintSerializer","constraint","integerConstraint","max","min","unit","UbccDecimalConstraintSerializer","decimalConstraint","precision","UbccDateTimeConstraintSerializer","dataTimeConstraint","format","UbccStringConstraintSerializer","stringConstraint","maxLength","minLength","regexExpress","constaint","UbccParamConstraintSerializerFactory","DefaultConstraintSerializer","getDataTypeSerializerFactory","dataTypeFactory","getParameterSerializerFactory","parameterFactory","getOperationSerializerFactory","operationFactory","DefaultOperationSerializerFactory","getPropertySerializerFactory","propertyFactory","DefaultPropertySerializerFactory","getConstraintSerializerFactory","constraintFactory","ParameterGroup","UbccParamTemplateSerializer","template","code","name","description","bizTypeId","bizTypePath","bizModule","templateType","groupEnable","paramJobj","structure","structureJobj","group","deserializer","structurJobj","groupJobj","DimensionItemSerializer","dimensionItem","dataType","serializer","JSON","stringify","parse","DimensionSerializer","dimension","dimensionItems","serializer_1","serializer_2","dimensionItemJobj","DataItemSerializer","dataItem","dataCode","dataName","dataDesc","dataValue","DimensionDataSerializer","dimensionData","dataItems","map","item","dimensionInfo","DimensionInfoSerializer","dataModificationAllow","data","definition","UbccParamTemplateAssignmentSerializer","templateAssignment","templateId","templateCode","templateName","useEvent","eventInfo","useDimension","ParamDataVoSerializer","paramData","dataRowJobj"],"mappings":"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","sourcesContent":["import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: []\n})\nexport class UbccParamVoModule { }\n","import { Parameter, StructuredType } from '@ecp-caf/common-structure';\r\nimport { ParameterGroup } from './parameter-group';\r\n\r\nexport class UbccParamTemplate{\r\n    id:string;\r\n    index:number;\r\n    code:string;\r\n    name:string;\r\n    description:string;\r\n    bizTypeId:string;\r\n    bizTypePath:string;\r\n    bizModule:string;\r\n    templateType:string;\r\n    groupEnable:boolean;\r\n    params:Array<Parameter>;\r\n    groups:Array<ParameterGroup>;\r\n    structuredTypes: Array<StructuredType>;\r\n    constructor(){\r\n       this.params=[];\r\n       this.groups=[];\r\n       this.structuredTypes=[];\r\n    }\r\n}","export class UbccParamTemplateVo{\r\n    id:string;\r\n    code:string;\r\n    name:string;\r\n    description:string;\r\n    bizTypeId:string;\r\n    bizTypePath:string;\r\n    bizModule:string;\r\n    templateType:string;\r\n    content:string;\r\n    translations:any;\r\n}","import { DimensionInfo } from './dimension-info';\r\nimport { EventInfo } from './eventInfo';\r\n\r\nexport class UbccParamTemplateAssignment{\r\n    id:string;\r\n    templateId:string;\r\n    bizTypeId:string;\r\n    index:number;\r\n    templateCode:string;\r\n    templateName:string;\r\n    templateType:string;\r\n    useDimension:boolean;\r\n    dimensionInfo:DimensionInfo;\r\n    useEvent:boolean;\r\n    eventInfo:EventInfo;\r\n}","import { DataItem } from '../param-data-vo/data-item';\r\n\r\nexport class DimensionData{\r\n    id:string;\r\n    dataItems:Array<DataItem>;\r\n}","import { Dimension } from '../param-dimension/dimension';\r\nimport { DimensionData } from './dimension-data';\r\n\r\nexport class DimensionInfo{\r\n    dataModificationAllow:boolean;\r\n    data:Array<DimensionData>;\r\n    definition:Dimension;\r\n}","export class EventInfo{\r\n    id:string;\r\n    code:string;\r\n    description:string;\r\n}","import { DimensionItem } from './dimension-item';\r\n\r\nexport class Dimension{\r\n    id:string;\r\n    code:string;\r\n    name:string;\r\n    dimensionItems:Array<DimensionItem>;\r\n}","import { DataType } from '@ecp-caf/common-structure';\r\n\r\nexport class DimensionItem{\r\n    id:string;\r\n    code:string;\r\n    name:string;\r\n    index:number;\r\n    dataType:DataType;\r\n}","import { DataRow } from './data-row';\r\n\r\nexport class UbccParamDataVo{\r\n    templateId:string;\r\n    bizTypeId:string;\r\n    data:Array<DataRow>;\r\n}","export class DataRowExtensionConst{\r\n    public static DEFAULT_DATA_ROW=\"DefaultDataRow\";\r\n    public static DIMENSION_DATA_ROW=\"DimensionDataRow\";\r\n}","import { DataRow } from './data-row';\r\nimport { DataRowExtensionConst } from '../../const/data-row-extension-const';\r\nimport { DataItem } from './data-item';\r\n\r\nexport class DimensionDataRow implements DataRow{\r\n\r\n    getKind(): string {\r\n        return DataRowExtensionConst.DIMENSION_DATA_ROW;\r\n    }\r\n    kind:string=DataRowExtensionConst.DIMENSION_DATA_ROW;\r\n    id:string;\r\n    dimensionDataItems:Array<DataItem>;\r\n    paramDataItems:Array<DataItem>;\r\n}","import { DataRow } from './data-row';\r\nimport { DataRowExtensionConst } from '../../const/data-row-extension-const';\r\nimport { DataItem } from './data-item';\r\n\r\nexport class DefaultDataRow implements DataRow{\r\n\r\n    getKind(): string {\r\n        return DataRowExtensionConst.DEFAULT_DATA_ROW;\r\n    }\r\n    kind:string=DataRowExtensionConst.DEFAULT_DATA_ROW;\r\n    id:string;\r\n    paramItems:Array<DataItem>;\r\n}","export class DataItem{\r\n    id:string;\r\n    dataCode:string;\r\n    dataName:string;\r\n    dataDesc:string;\r\n    dataValue:string;\r\n    dataValueText:string;\r\n    dataType:string;\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class ParamExtensionConst{\r\n    public static BASE_PARAM=\"UbccBaseParam\";\r\n    public static ITEM_CATEGORY_PARAM=\"UbccItemCategoryParam\";\r\n}","import { Parameter } from '@ecp-caf/common-structure';\r\nimport { ParamExtensionConst } from '../../../const/parameter-extension-const';\r\n\r\nexport class BaseParameter extends Parameter{\r\n    id:string;\r\n    index:number;\r\n    visible:boolean;\r\n    readonly:boolean;\r\n    groupId:string;\r\n    groupCode:string;\r\n    groupName:string;\r\n    parameterTypeDesc:string;\r\n    kind:string=ParamExtensionConst.BASE_PARAM;\r\n    constructor(){\r\n        super();\r\n        this.visible=true;\r\n        this.readonly=false;\r\n    }\r\n}","import { ParamExtensionConst } from '../../../const/parameter-extension-const';\r\nimport { BaseParameter } from './base-param';\r\n\r\nexport class ItemCategoryParam extends BaseParameter{\r\n    kind:string=ParamExtensionConst.ITEM_CATEGORY_PARAM;\r\n}","export class DataTypeExtensionConst{\r\n    public static HELP_TYPE=\"HelpType\";\r\n    public static UBCC_STRUCTURE_TYPE_REF=\"UbccStructureTypeRef\";\r\n}","import { StructuredType } from '@ecp-caf/common-structure';\r\nimport { DataTypeExtensionConst } from '../../../const/data-type-extension-const';\r\n\r\nexport class HelpType extends StructuredType{\r\n    kind:string=DataTypeExtensionConst.HELP_TYPE;\r\n    helpId:string;\r\n    helpCode:string;\r\n    helpName:string;\r\n}","import { DataType } from '@ecp-caf/common-structure';\r\nimport { DataTypeExtensionConst } from '../../../const/data-type-extension-const';\r\nimport { StructureTypeRefEnum } from './structure-type-ref-enum';\r\n\r\nexport class StructureTypeRef extends DataType{\r\n    kind: string=DataTypeExtensionConst.UBCC_STRUCTURE_TYPE_REF;\r\n    refId: string;\r\n    type: StructureTypeRefEnum;\r\n    constructor(){\r\n        super();\r\n        this.kind=DataTypeExtensionConst.UBCC_STRUCTURE_TYPE_REF;\r\n    }\r\n}","export enum StructureTypeRefEnum{\r\n    ENUM,\r\n    HELP\r\n}","export class ConstraintExtenionConst{\r\n    public static UBCC_STRING_CONSTRAINT=\"UbccStringConstraint\";\r\n    public static UBCC_INTEGER_CONSTRAINT=\"UbccIntegerConstraint\";\r\n    public static UBCC_DATE_TIME_CONSTRAINT=\"UbccDateTimeConstraint\";\r\n    public static UBCC_DECIMAL_CONSTRAINT=\"UbccDecimalConstraint\";\r\n}","import { ConstraintExtenionConst } from '../../../const/constraint-extension-const';\r\nimport { IConstraint } from '@ecp-caf/common-structure';\r\n\r\nexport class UbccStringConstraint implements IConstraint{\r\n    getKind(): string {\r\n        return ConstraintExtenionConst.UBCC_STRING_CONSTRAINT;\r\n    }\r\n    maxLength:number;\r\n    minLength:number;\r\n    regexExpress:string;\r\n    kind:string=ConstraintExtenionConst.UBCC_STRING_CONSTRAINT;\r\n}","import { IConstraint } from '@ecp-caf/common-structure';\r\nimport { ConstraintExtenionConst } from '../../../const/constraint-extension-const';\r\n\r\nexport class UbccDateTimeConstraint implements IConstraint{\r\n\r\n    getKind(): string {\r\n        return ConstraintExtenionConst.UBCC_DATE_TIME_CONSTRAINT;\r\n    }\r\n    format:string;\r\n    kind:string=ConstraintExtenionConst.UBCC_DATE_TIME_CONSTRAINT;\r\n}","import { IConstraint } from '@ecp-caf/common-structure';\r\nimport { ConstraintExtenionConst } from '../../../const/constraint-extension-const';\r\n\r\nexport class UbccDecimalConstraint implements IConstraint{\r\n\r\n    getKind(): string {\r\n        return ConstraintExtenionConst.UBCC_DECIMAL_CONSTRAINT;\r\n    }\r\n    unit:string;\r\n    precision:number;\r\n    max:number;\r\n    min:number;\r\n    kind:string=ConstraintExtenionConst.UBCC_DECIMAL_CONSTRAINT;\r\n}","import { IConstraint } from '@ecp-caf/common-structure';\r\nimport { ConstraintExtenionConst } from '../../../const/constraint-extension-const';\r\n\r\nexport class UbccIntegerConstraint implements IConstraint{\r\n\r\n    getKind(): string {\r\n        return ConstraintExtenionConst.UBCC_INTEGER_CONSTRAINT;\r\n    }\r\n    unit:string;\r\n    max:number;\r\n    min:number;\r\n    kind:string=ConstraintExtenionConst.UBCC_INTEGER_CONSTRAINT;\r\n}","import { IParameterSerializer, Parameter, ISerializeContext, DefaultParameterSerializer } from '@ecp-caf/common-structure';\r\nimport { BaseParameter } from '../../extension/parameter/base-param';\r\n\r\nexport class BaseParameterSerializer implements IParameterSerializer{\r\n    serialize(param: Parameter, ctxt: ISerializeContext): Object {\r\n        let jobj=new Object();\r\n        if(!param){\r\n            return jobj;\r\n        }\r\n        let baseParam=param as BaseParameter;\r\n        let serializer=new DefaultParameterSerializer();\r\n        jobj=serializer.serialize(baseParam,ctxt);\r\n        jobj['id']=baseParam.id;\r\n        jobj['index']=baseParam.index;\r\n        jobj['visible']=baseParam.visible;\r\n        jobj['readonly']=baseParam.readonly;\r\n        jobj['groupId']=baseParam.groupId;\r\n        jobj['groupCode']=baseParam.groupCode;\r\n        jobj['groupName']=baseParam.groupName;\r\n        jobj['parameterTypeDesc']=baseParam.parameterTypeDesc;\r\n        jobj['kind']=baseParam.kind;\r\n        return jobj;\r\n    }    \r\n    \r\n    deserialize(obj: Object, ctxt: ISerializeContext):Parameter {\r\n        if(!obj){\r\n            return null;\r\n        }\r\n        let param=new BaseParameter();\r\n        let serializer=new DefaultParameterSerializer();\r\n        param=serializer.deserialize(obj,ctxt) as BaseParameter;\r\n        param.id=obj['id'];\r\n        param.index=obj['index'] as number;\r\n        param.visible=obj['visible'] as boolean;\r\n        param.readonly=obj['readonly'] as boolean;\r\n        param.groupId=obj['groupId'];\r\n        param.groupCode=obj['groupCode'];\r\n        param.groupName=obj['groupName'];\r\n        param.parameterTypeDesc=obj['parameterTypeDesc'];\r\n        return param;\r\n    }\r\n}","import { IParameterSerializer, Parameter, ISerializeContext } from '@ecp-caf/common-structure';\r\nimport { ItemCategoryParam } from '../../extension/parameter/item-category-param';\r\nimport { BaseParameterSerializer } from './base-param-serializer';\r\n\r\nexport class ItemCategoryParamSerializer implements IParameterSerializer{\r\n    \r\n    serialize(param: Parameter, ctxt: ISerializeContext): Object {\r\n        let jobj=new Object();\r\n        if(!param){\r\n            return jobj;\r\n        }\r\n        let itemCategoryParam=param as ItemCategoryParam;\r\n        let serializer=new BaseParameterSerializer();\r\n        jobj=serializer.serialize(itemCategoryParam,ctxt);\r\n        jobj['kind']=itemCategoryParam.kind;\r\n        return jobj;\r\n    }    \r\n    \r\n    deserialize(obj: Object, ctxt: ISerializeContext):Parameter {\r\n        if(!obj){\r\n            return null;\r\n        }\r\n        let param=new ItemCategoryParam();\r\n        let serializer=new BaseParameterSerializer();\r\n        param=serializer.deserialize(obj,ctxt) as ItemCategoryParam;\r\n        return param;\r\n    }\r\n}","import { IParameterSerializerFactory, DefaultParameterSerializer, IParameterSerializer, } from '@ecp-caf/common-structure';\r\nimport { ParamExtensionConst } from '../../../const/parameter-extension-const';\r\nimport { ItemCategoryParamSerializer } from '../param-serialzier/item-category-param-serializer';\r\nimport { BaseParameterSerializer } from '../param-serialzier/base-param-serializer';\r\n\r\nexport class UbccParamSerializerFactory implements IParameterSerializerFactory{\r\n\r\n    get(kind: string): IParameterSerializer {\r\n        switch(kind){\r\n            case ParamExtensionConst.BASE_PARAM:\r\n                return new BaseParameterSerializer();\r\n            case ParamExtensionConst.ITEM_CATEGORY_PARAM:\r\n                return new ItemCategoryParamSerializer();\r\n            default:\r\n                return new DefaultParameterSerializer();\r\n        }\r\n    }\r\n\r\n}","import { DefaultDataRow } from '../../param-data-vo/default-data-row';\r\nimport { DataRow } from '../../param-data-vo/data-row';\r\nimport { DataItem } from '../../param-data-vo/data-item';\r\nimport { IDataRowSerializer } from './i-data-row-serializer';\r\n\r\nexport class DefaultDataRowSerializer implements IDataRowSerializer{\r\n\r\n    serialize(dataRow:DataRow):Object{\r\n        let jobj=new Object();\r\n        if(!dataRow){\r\n            return null;\r\n        }\r\n        let defaultDataRow=dataRow as DefaultDataRow;\r\n        jobj['id']=defaultDataRow.id;\r\n        jobj['kind']=defaultDataRow.kind;\r\n        if(defaultDataRow.paramItems){\r\n            jobj['paramItems']=[];\r\n            defaultDataRow.paramItems.forEach(paramItem => {\r\n                jobj['paramItems']=paramItem;\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DataRow{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dataRow=new DefaultDataRow();\r\n        dataRow.id=jobj['id'];\r\n        if(jobj['paramItems']){\r\n            dataRow.paramItems=new Array<DataItem>();\r\n            jobj['paramItems'].forEach(paramItemJobj => {\r\n                dataRow.paramItems.push(Object.assign(new DataItem(),paramItemJobj));\r\n            });\r\n        }\r\n        return dataRow;\r\n    }\r\n}","import { IDataRowSerializer } from './i-data-row-serializer';\r\nimport { DataRow } from '../../param-data-vo/data-row';\r\nimport { DimensionDataRow } from '../../param-data-vo/dimension-data-row';\r\nimport { DataItem } from '../../param-data-vo/data-item';\r\n\r\nexport class DimensionDataRowSerializer implements IDataRowSerializer{\r\n\r\n    serialize(dataRow:DataRow):Object{\r\n        let jobj=new Object();\r\n        if(!dataRow){\r\n            return null;\r\n        }\r\n        let dimensionDataRow=dataRow as DimensionDataRow;\r\n        jobj['id']=dimensionDataRow.id;\r\n        jobj['kind']=dimensionDataRow.kind;\r\n        if(dimensionDataRow.dimensionDataItems){\r\n            jobj['dimensionDataItems']=[];\r\n            dimensionDataRow.dimensionDataItems.forEach(dimensionDataItem => {\r\n                jobj['dimensionDataItems']=dimensionDataItem;\r\n            });\r\n        }\r\n        if(dimensionDataRow.paramDataItems){\r\n            jobj['paramDataItems']=[];\r\n            dimensionDataRow.paramDataItems.forEach(paramItem => {\r\n                jobj['paramDataItems']=paramItem;\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DataRow{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dataRow=new DimensionDataRow();\r\n        dataRow.id=jobj['id'];\r\n        if(jobj['dimensionDataItems']){\r\n            dataRow.dimensionDataItems=new Array<DataItem>();\r\n            jobj['dimensionDataItems'].forEach(dimensionDataItemJobj => {\r\n                dataRow.dimensionDataItems.push(Object.assign(new DataItem(),dimensionDataItemJobj));\r\n            });\r\n        }\r\n        if(jobj['paramDataItems']){\r\n            dataRow.paramDataItems=new Array<DataItem>();\r\n            jobj['paramDataItems'].forEach(paramDataItemsJobj => {\r\n                dataRow.dimensionDataItems.push(Object.assign(new DataItem(),paramDataItemsJobj));\r\n            });\r\n        }\r\n        return dataRow;\r\n    }\r\n    \r\n}","import { IDataRowSerializer } from '../param-data-serializer/i-data-row-serializer';\r\nimport { DataRowExtensionConst } from '../../../const/data-row-extension-const';\r\nimport { DefaultDataRowSerializer } from '../param-data-serializer/default-data-row-serializer';\r\nimport { DimensionDataRowSerializer } from '../param-data-serializer/dimension-data-row-serializer';\r\n\r\nexport class UbccParamDataRowSerializerFactory{\r\n    \r\n    get(kind: string): IDataRowSerializer {\r\n        switch (kind) {\r\n            case DataRowExtensionConst.DEFAULT_DATA_ROW:\r\n                return new DefaultDataRowSerializer();\r\n            case DataRowExtensionConst.DIMENSION_DATA_ROW:\r\n                return new DimensionDataRowSerializer();\r\n            default:\r\n                throw new Error(`æªè·åå°${kind}ç±»åçDATA_ROWåºååå¨`);\r\n        }\r\n    }\r\n\r\n}","import { UbccParamSerializerContext } from '../serializer/serializer-context/ubcc-serializer-context';\r\nimport { UbccParamDataRowSerializerFactory } from '../serializer/factory/ubcc-param-data-row-serializer-factory';\r\n\r\n// @dynamic\r\nexport class SerializerUtils{\r\n\r\n    private static context:UbccParamSerializerContext;\r\n    private static dataRowFactory:UbccParamDataRowSerializerFactory;\r\n  \r\n    public static getContext():UbccParamSerializerContext{\r\n        if(!SerializerUtils.context){\r\n            SerializerUtils.context=new UbccParamSerializerContext();\r\n        }\r\n        return SerializerUtils.context;\r\n    }\r\n\r\n    public static getUbccParamDataRowSerializerFactory():UbccParamDataRowSerializerFactory{\r\n        if(!SerializerUtils.dataRowFactory){\r\n            SerializerUtils.dataRowFactory=new UbccParamDataRowSerializerFactory();\r\n        }\r\n        return SerializerUtils.dataRowFactory;\r\n    }\r\n}","import { IDataTypeSerializer, ISerializeContext, IDataType, DefaultStructuredTypeSerializer } from '@ecp-caf/common-structure';\r\nimport { HelpType } from '../../extension/data-type/help-type';\r\nimport { SerializerUtils } from '../../utils/serializer-utils';\r\n\r\nexport class HelpTypeSerialzier implements IDataTypeSerializer{\r\n    \r\n    serialize(type: IDataType, ctxt: ISerializeContext): Object {\r\n        let jobj=new Object();\r\n        if(!type){\r\n            return null;\r\n        }\r\n        let serializer=new DefaultStructuredTypeSerializer();\r\n        jobj=serializer.serialize(type,SerializerUtils.getContext());\r\n        let helpType=type as HelpType;\r\n        jobj['helpId']=helpType.helpId;\r\n        jobj['helpCode']=helpType.helpCode;\r\n        jobj['helpName']=helpType.helpName;\r\n        jobj['kind']=helpType.kind;\r\n        return jobj;\r\n    }    \r\n    \r\n    deserialize(obj: Object, ctxt:ISerializeContext): IDataType {\r\n        if(!obj){\r\n            return null;\r\n        }\r\n        let helpType=new HelpType();\r\n        let serializer=new DefaultStructuredTypeSerializer();\r\n        helpType=serializer.deserialize(obj,SerializerUtils.getContext()) as HelpType;\r\n        helpType.helpId=obj['helpId'];\r\n        helpType.helpCode=obj['helpCode'];\r\n        helpType.helpName=obj['helpName'];\r\n        return helpType;\r\n    }\r\n\r\n}","import { IDataTypeSerializer, ISerializeContext, IDataType } from '@ecp-caf/common-structure';\r\nimport { StructureTypeRef } from '../../extension/data-type/structure-type-ref';\r\nimport { StructureTypeRefEnum } from '../../extension/data-type/structure-type-ref-enum';\r\n\r\nexport class StructureTypeRefSerializer implements IDataTypeSerializer{\r\n\r\n    serialize(type: IDataType, ctxt: ISerializeContext): Object {\r\n        if(!type){\r\n            return null;\r\n        }\r\n        let jobj=new Object();\r\n        let refType=type as StructureTypeRef;\r\n        jobj['kind']=refType.kind;\r\n        jobj['refId']=refType.refId;\r\n        jobj['type']=refType.type;\r\n        return jobj;\r\n    }    \r\n    \r\n    deserialize(obj: Object, ctxt: ISerializeContext): IDataType {\r\n        if(!obj){\r\n            return null;\r\n        }\r\n        let refType=new StructureTypeRef();\r\n        refType.refId=obj['refId'];\r\n        refType.type=obj['type'] as StructureTypeRefEnum;\r\n        return refType;\r\n    }\r\n\r\n}","import { IDataTypeSerializerFactory, IDataTypeSerializer, DefaultDataTypeSerializerFactory } from '@ecp-caf/common-structure';\r\nimport { DataTypeExtensionConst } from '../../../const/data-type-extension-const';\r\nimport { HelpTypeSerialzier } from '../data-type-serializer/help-type-serializer';\r\nimport { StructureTypeRefSerializer } from '../data-type-serializer/structure-type-ref-serializer';\r\n\r\nexport class UbccDataTypeSerializerFactory implements IDataTypeSerializerFactory{\r\n    \r\n    get(kind: string): IDataTypeSerializer {\r\n        switch (kind) {\r\n            case DataTypeExtensionConst.HELP_TYPE:\r\n                return new HelpTypeSerialzier();\r\n            case DataTypeExtensionConst.UBCC_STRUCTURE_TYPE_REF:\r\n                return new StructureTypeRefSerializer();\r\n            default:\r\n                return new DefaultDataTypeSerializerFactory().get(kind);\r\n        }\r\n    }\r\n\r\n}","import { UbccIntegerConstraint } from '../../extension/constraint/ubcc-integer-constraint';\r\nimport { IConstraint, IConstraintSerializer, ISerializeContext } from '@ecp-caf/common-structure';\r\n\r\nexport class UbccIntegerConstraintSerializer implements IConstraintSerializer{\r\n\r\n    serialize(constraint:IConstraint, ctxt: ISerializeContext):Object{\r\n        let jobj=new Object();\r\n        if(!constraint){\r\n            return jobj;\r\n        }\r\n        let integerConstraint=constraint as UbccIntegerConstraint;\r\n        jobj['kind']=integerConstraint.kind;\r\n        jobj['max']=integerConstraint.max;\r\n        jobj['min']=integerConstraint.min;\r\n        jobj['unit']=integerConstraint.unit;\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object, ctxt: ISerializeContext):IConstraint{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let integerConstraint=new UbccIntegerConstraint();\r\n        integerConstraint.max=jobj['max'] as number;\r\n        integerConstraint.min=jobj['min'] as number;\r\n        integerConstraint.unit=jobj['unit'];\r\n        return integerConstraint;\r\n    }\r\n\r\n}","import { UbccDecimalConstraint } from '../../extension/constraint/ubcc-decimal-constraint';\r\nimport { IConstraint, IConstraintSerializer, ISerializeContext } from '@ecp-caf/common-structure';\r\n\r\nexport class UbccDecimalConstraintSerializer implements IConstraintSerializer{\r\n    \r\n    serialize(constraint:IConstraint,ctxt: ISerializeContext):Object{\r\n        let jobj=new Object();\r\n        if(!constraint){\r\n            return jobj;\r\n        }\r\n        let decimalConstraint=constraint as UbccDecimalConstraint;\r\n        jobj['kind']=decimalConstraint.kind;\r\n        jobj['max']=decimalConstraint.max;\r\n        jobj['min']=decimalConstraint.min;\r\n        jobj['precision']=decimalConstraint.precision;\r\n        jobj['unit']=decimalConstraint.unit;\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object,ctxt: ISerializeContext):IConstraint{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let decimalConstraint=new UbccDecimalConstraint();\r\n        decimalConstraint.max=jobj['max'] as number;\r\n        decimalConstraint.min=jobj['min'] as number;\r\n        decimalConstraint.precision=jobj['precision'] as number;\r\n        decimalConstraint.unit=jobj['unit'];\r\n        return decimalConstraint;\r\n    }\r\n}","import { UbccDateTimeConstraint } from '../../extension/constraint/ubcc-date-time-constraint';\r\nimport { IConstraint, IConstraintSerializer, ISerializeContext } from '@ecp-caf/common-structure';\r\n\r\nexport class UbccDateTimeConstraintSerializer implements IConstraintSerializer{\r\n\r\n    serialize(constraint:IConstraint,ctxt: ISerializeContext):Object{\r\n        let jobj=new Object();\r\n        if(!constraint){\r\n            return jobj;\r\n        }\r\n        let dataTimeConstraint=constraint as UbccDateTimeConstraint;\r\n        jobj['kind']=dataTimeConstraint.kind;\r\n        jobj['format']=dataTimeConstraint.format;\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object,ctxt: ISerializeContext):IConstraint{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dataTimeConstraint=new UbccDateTimeConstraint();\r\n        dataTimeConstraint.format=jobj['format'];\r\n        return dataTimeConstraint;\r\n    }\r\n\r\n}","import { IConstraint, IConstraintSerializer, ISerializeContext } from '@ecp-caf/common-structure';\r\nimport { UbccStringConstraint } from '../../extension/constraint/ubcc-string-constaint';\r\n\r\nexport class UbccStringConstraintSerializer implements IConstraintSerializer{\r\n\r\n    serialize(constraint:IConstraint,ctxt: ISerializeContext):Object{\r\n        let jobj=new Object();\r\n        if(!constraint){\r\n            return jobj;\r\n        }\r\n        let stringConstraint=constraint as UbccStringConstraint;\r\n        jobj['kind']=stringConstraint.kind;\r\n        jobj['maxLength']=stringConstraint.maxLength;\r\n        jobj['minLength']=stringConstraint.minLength;\r\n        jobj['regexExpress']=stringConstraint.regexExpress;\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object,ctxt: ISerializeContext):IConstraint{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let constaint=new UbccStringConstraint();\r\n        constaint.maxLength=jobj['maxLength'] as number;\r\n        constaint.minLength=jobj['minLength'] as number;\r\n        constaint.regexExpress=jobj['regexExpress'];\r\n        return constaint;\r\n    }\r\n\r\n}","import { IConstraintSerializer, DefaultConstraintSerializer, IConstraintSerializerFactory } from '@ecp-caf/common-structure';\r\nimport { ConstraintExtenionConst } from '../../../const/constraint-extension-const';\r\nimport { UbccIntegerConstraintSerializer } from '../constraint-serializer/integer-constraint-serializer';\r\nimport { UbccDecimalConstraintSerializer } from '../constraint-serializer/decimal-constraint-serializer';\r\nimport { UbccDateTimeConstraintSerializer } from '../constraint-serializer/date-time-constraint-serializer';\r\nimport { UbccStringConstraintSerializer } from '../constraint-serializer/string-constraint-serializer';\r\n\r\nexport class UbccParamConstraintSerializerFactory implements IConstraintSerializerFactory {\r\n\r\n    get(kind: string): IConstraintSerializer {\r\n        switch (kind) {\r\n            case ConstraintExtenionConst.UBCC_INTEGER_CONSTRAINT:\r\n                return new UbccIntegerConstraintSerializer();\r\n            case ConstraintExtenionConst.UBCC_DECIMAL_CONSTRAINT:\r\n                return new UbccDecimalConstraintSerializer();\r\n            case ConstraintExtenionConst.UBCC_STRING_CONSTRAINT:\r\n                return new UbccStringConstraintSerializer();\r\n            case ConstraintExtenionConst.UBCC_DATE_TIME_CONSTRAINT:\r\n                return new UbccDateTimeConstraintSerializer();\r\n            default:\r\n                return new DefaultConstraintSerializer();\r\n        }\r\n    }\r\n}","import { ISerializeContext, IParameterSerializerFactory, IPropertySerializerFactory, IDataTypeSerializerFactory, IOperationSerializerFactory, DefaultOperationSerializerFactory, DefaultPropertySerializerFactory, IConstraintSerializerFactory } from '@ecp-caf/common-structure';\r\nimport { UbccParamSerializerFactory } from '../factory/ubcc-param-serializer-factory';\r\nimport { UbccDataTypeSerializerFactory } from '../factory/ubcc-data-type-serializer-factory';\r\nimport { UbccParamConstraintSerializerFactory } from '../factory/ubcc-param-constraint-serializer-factory';\r\n\r\nexport class UbccParamSerializerContext implements ISerializeContext{\r\n\r\n    private dataTypeFactory: IDataTypeSerializerFactory;\r\n    private parameterFactory: IParameterSerializerFactory;\r\n    private operationFactory: IOperationSerializerFactory;\r\n    private propertyFactory: IPropertySerializerFactory;\r\n    private constraintFactory:IConstraintSerializerFactory;\r\n   \r\n    getDataTypeSerializerFactory(): IDataTypeSerializerFactory {\r\n        if (!this.dataTypeFactory) {\r\n            this.dataTypeFactory = new UbccDataTypeSerializerFactory();\r\n        }\r\n        return this.dataTypeFactory;\r\n    }\r\n\r\n\r\n    getParameterSerializerFactory(): IParameterSerializerFactory {\r\n        if (!this.parameterFactory) {\r\n            this.parameterFactory = new UbccParamSerializerFactory();\r\n        }\r\n        return this.parameterFactory;\r\n    }\r\n\r\n    getOperationSerializerFactory(): IOperationSerializerFactory {\r\n        if (!this.operationFactory) {\r\n            this.operationFactory = new DefaultOperationSerializerFactory();\r\n        }\r\n        return this.operationFactory;\r\n    }\r\n\r\n    getPropertySerializerFactory(): IPropertySerializerFactory {\r\n        if (!this.propertyFactory) {\r\n            this.propertyFactory = new DefaultPropertySerializerFactory();\r\n        }\r\n        return this.propertyFactory;\r\n    }\r\n\r\n    getConstraintSerializerFactory(): IConstraintSerializerFactory {\r\n        if(!this.constraintFactory){\r\n            this.constraintFactory=new UbccParamConstraintSerializerFactory();\r\n        }\r\n        return this.constraintFactory;\r\n    }\r\n  \r\n}","export class ParameterGroup{\r\n    groupIndex:number;\r\n    groupId:string;\r\n    groupCode:string;\r\n    groupName:string;\r\n}","import { UbccParamTemplate } from '../../param-template-vo/ubcc-param-template';\r\nimport { UbccParamSerializerContext } from '../serializer-context/ubcc-serializer-context';\r\nimport { Parameter, StructuredType } from '@ecp-caf/common-structure';\r\nimport { ParameterGroup } from '../../param-template-vo/parameter-group';\r\n\r\nexport class UbccParamTemplateSerializer{\r\n\r\n    serialize(template: UbccParamTemplate):Object{\r\n        let jobj=new Object();\r\n        if(!template){\r\n            return null;\r\n        }\r\n        jobj['id'] =template.id;\r\n        jobj['index'] =template.index;\r\n        jobj['code'] =template.code;\r\n        jobj['name'] =template.name;\r\n        jobj['description'] =template.description;\r\n        jobj['bizTypeId'] =template.bizTypeId;\r\n        jobj['bizTypePath'] =template.bizTypePath;\r\n        jobj['bizModule'] =template.bizModule;\r\n        jobj['templateType'] =template.templateType;\r\n        jobj['groupEnable'] =template.groupEnable;\r\n        let context=new UbccParamSerializerContext();\r\n        if(template.params){\r\n            jobj['params']=new Array<Object>();\r\n            template.params.forEach(param => {\r\n                let paramJobj=new Object();\r\n                let serializer=context.getParameterSerializerFactory().get(param.kind);\r\n                paramJobj=serializer.serialize(param,context);\r\n                jobj['params'].push(paramJobj);\r\n            });\r\n        }\r\n        if(template.structuredTypes){\r\n            jobj['structuredTypes']=new Array<Object>();\r\n            template.structuredTypes.forEach(structure => {\r\n                let structureJobj=new Object();\r\n                let serializer=context.getDataTypeSerializerFactory().get(structure.kind);\r\n                structureJobj=serializer.serialize(structure,context);\r\n                jobj['structuredTypes'].push(structureJobj);\r\n            });\r\n        }\r\n        if(template.groups){\r\n            jobj['groups']=new Array<Object>();\r\n            template.groups.forEach(group => {\r\n                jobj['groups'].push(group);\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserializer(jobj:Object):UbccParamTemplate{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let template=new UbccParamTemplate();\r\n        template.id=jobj['id'];\r\n        template.index=jobj['index'] as number;\r\n        template.code=jobj['code'];\r\n        template.name=jobj['name'];\r\n        template.description=jobj['description'];\r\n        template.bizTypeId=jobj['bizTypeId'];\r\n        template.bizTypePath=jobj['bizTypePath'];\r\n        template.bizModule=jobj['bizModule'];\r\n        template.templateType=jobj['templateType'];\r\n        template.groupEnable=jobj['groupEnable'];\r\n        let context=new UbccParamSerializerContext();\r\n        if(jobj['params']){\r\n            template.params=new Array<Parameter>();\r\n            jobj['params'].forEach(paramJobj => {\r\n                let serializer=context.getParameterSerializerFactory().get(paramJobj['kind']);\r\n                let param= serializer.deserialize(paramJobj,context);\r\n                template.params.push(param);\r\n            });\r\n        }\r\n        if(jobj['structuredTypes']){\r\n            template.structuredTypes=new Array<StructuredType>();\r\n            jobj['structuredTypes'].forEach(structurJobj => {\r\n                let serializer=context.getDataTypeSerializerFactory().get(structurJobj['kind']);\r\n                let structure= serializer.deserialize(structurJobj,context) as StructuredType;\r\n                template.structuredTypes.push(structure);\r\n            });\r\n        }\r\n        if(jobj['groups']){\r\n            template.groups=new Array<ParameterGroup>();\r\n            jobj['groups'].forEach(groupJobj => {\r\n                template.groups.push(Object.assign(new ParameterGroup(),groupJobj));\r\n            });\r\n        }\r\n        return template;\r\n    }\r\n}","import { DimensionItem } from '../../param-dimension/dimension-item';\r\nimport { DataType } from '@ecp-caf/common-structure';\r\nimport { SerializerUtils } from '../../utils/serializer-utils';\r\n\r\nexport class DimensionItemSerializer{\r\n\r\n    serialize(dimensionItem:DimensionItem):Object{\r\n        let jobj=new Object();\r\n        if(!dimensionItem){\r\n            return null;\r\n        }\r\n        jobj['id']=dimensionItem.id;\r\n        jobj['index']=dimensionItem.index;\r\n        jobj['code']=dimensionItem.code;\r\n        jobj['name']=dimensionItem.name;\r\n        if(dimensionItem.dataType){\r\n            let context=SerializerUtils.getContext();\r\n            let serializer=context.getDataTypeSerializerFactory().get(dimensionItem.dataType.kind);\r\n            jobj['dataType']=serializer.serialize(dimensionItem.dataType,context);\r\n            //dataTypeä½ä¸ºå­ç¬¦ä¸²å­\r\n            jobj['dataType']=JSON.stringify(jobj['dataType']);\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DimensionItem{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dimensionItem=new DimensionItem();\r\n        dimensionItem.id=jobj['id'];\r\n        dimensionItem.index=jobj['index'] as number;\r\n        dimensionItem.code=jobj['code'];\r\n        dimensionItem.name=jobj['name'];\r\n        if(jobj['dataType']){\r\n            //dataTypeä½ä¸ºå­ç¬¦ä¸²å­\r\n            jobj['dataType']=JSON.parse(jobj['dataType']);\r\n\r\n            let context=SerializerUtils.getContext();\r\n            let kind=jobj['dataType']['kind'];\r\n            let serializer=context.getDataTypeSerializerFactory().get(kind);\r\n            dimensionItem.dataType=serializer.deserialize(jobj['dataType'],context) as DataType;\r\n        }\r\n        return dimensionItem;\r\n    }\r\n}","import { Dimension } from '../../param-dimension/dimension';\r\nimport { DimensionItemSerializer } from './dimension-item-serializer';\r\nimport { DimensionItem } from '../../param-dimension/dimension-item';\r\n\r\nexport class DimensionSerializer{\r\n    \r\n    serialize(dimension:Dimension):Object{\r\n        let jobj=new Object();\r\n        if(!dimension){\r\n            return null;\r\n        }\r\n        jobj['id']=dimension.id;\r\n        jobj['code']=dimension.code;\r\n        jobj['name']=dimension.name;\r\n        if(dimension.dimensionItems){\r\n            jobj['dimensionItems']=[];\r\n            let serializer=new DimensionItemSerializer();\r\n            dimension.dimensionItems.forEach(dimensionItem => {\r\n                jobj['dimensionItems'].push(serializer.serialize(dimensionItem));\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):Dimension{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dimension=new Dimension();\r\n        dimension.id= jobj['id'];\r\n        dimension.code= jobj['code'];\r\n        dimension.name= jobj['name'];\r\n        if(jobj['dimensionItems']){\r\n            dimension.dimensionItems=new Array<DimensionItem>();\r\n            let serializer=new DimensionItemSerializer();\r\n            jobj['dimensionItems'].forEach(dimensionItemJobj => {\r\n                dimension.dimensionItems.push(serializer.deserialize(dimensionItemJobj));\r\n            });\r\n        }\r\n        return dimension;\r\n    }\r\n}","import { DataItem } from '../../param-data-vo/data-item';\r\n\r\nexport class DataItemSerializer{\r\n\r\n    serialize(dataItem:DataItem):Object{\r\n        if(!dataItem){\r\n            return null;\r\n        }\r\n        let jobj=new Object();\r\n        jobj['id']=dataItem.id;\r\n        jobj['dataCode']=dataItem.dataCode;\r\n        jobj['dataName']=dataItem.dataName;\r\n        jobj['dataDesc']=dataItem.dataDesc;\r\n        jobj['dataValue']=dataItem.dataValue;\r\n        jobj['dataType']=dataItem.dataType;\r\n\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DataItem{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dataItem=new DataItem();\r\n        dataItem.id=jobj['id'];\r\n        dataItem.dataCode=jobj['dataCode'];\r\n        dataItem.dataName=jobj['dataName'];\r\n        dataItem.dataDesc=jobj['dataDesc'];\r\n        dataItem.dataValue=jobj['dataValue'];\r\n        dataItem.dataType=jobj['dataType'];\r\n        return dataItem;\r\n    }\r\n}","import { DimensionData } from '../../param-template-assignment-vo/dimension-data';\r\nimport { DataItemSerializer } from '../param-data-serializer/data-item-serializer';\r\n\r\nexport class DimensionDataSerializer{\r\n    serialize(dimensionData:DimensionData):Object{\r\n        if(!dimensionData){\r\n            return null;\r\n        }\r\n        let jobj=new Object();\r\n        jobj['id']=dimensionData.id;\r\n        if(dimensionData.dataItems){\r\n            jobj['dataItems']=dimensionData.dataItems.map(item=>new DataItemSerializer().serialize(item));\r\n        }\r\n\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DimensionData{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dimensionInfo=new DimensionData();\r\n        dimensionInfo.id=jobj['id'];\r\n        if(jobj['dataItems']){\r\n            dimensionInfo.dataItems=jobj['dataItems'].map(item=>new DataItemSerializer().deserialize(item));\r\n        }\r\n\r\n        return dimensionInfo;\r\n    }\r\n}","import { DimensionInfo } from '../../param-template-assignment-vo/dimension-info';\r\nimport { DimensionSerializer } from '../dimension-serializer/dimension-serializer';\r\nimport { DimensionDataSerializer } from './dimension-data-serializer';\r\n\r\nexport class DimensionInfoSerializer{\r\n    serialize(dimensionInfo:DimensionInfo):Object{\r\n        if(!dimensionInfo){\r\n            return null;\r\n        }\r\n        let jobj=new Object();\r\n        jobj['dataModificationAllow']=dimensionInfo.dataModificationAllow;\r\n\r\n        if(dimensionInfo.data){\r\n            jobj['data']=dimensionInfo.data.map(dimensionData=>new DimensionDataSerializer().serialize(dimensionData));\r\n        }\r\n\r\n        if(dimensionInfo.definition){\r\n            let serializer=new DimensionSerializer();\r\n            jobj['definition']=serializer.serialize(dimensionInfo.definition);\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DimensionInfo{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dimensionInfo=new DimensionInfo();\r\n        dimensionInfo.dataModificationAllow=jobj['dataModificationAllow'] as boolean;\r\n\r\n        if(jobj['data']){\r\n            dimensionInfo.data=jobj['data'].map(dimensionData=>new DimensionDataSerializer().deserialize(dimensionData));\r\n        }\r\n\r\n        if(jobj['definition']){\r\n            let serializer=new DimensionSerializer();\r\n            dimensionInfo.definition=serializer.deserialize(jobj['definition']);\r\n        }\r\n        return dimensionInfo;\r\n    }\r\n}","import { UbccParamTemplateAssignment } from '../../param-template-assignment-vo/ubcc-param-template-assignment';\r\nimport { DimensionInfoSerializer } from './dimension-info-serializer';\r\nimport { EventInfo } from '../../param-template-assignment-vo/eventInfo';\r\n\r\nexport class UbccParamTemplateAssignmentSerializer{\r\n\r\n    serialize(templateAssignment:UbccParamTemplateAssignment):Object{\r\n        if(!templateAssignment){\r\n            return null;\r\n        }\r\n        let jobj=new Object();\r\n        jobj['id']=templateAssignment.id;\r\n        jobj['templateId']=templateAssignment.templateId;\r\n        jobj['index']=templateAssignment.index;\r\n        jobj['templateCode']=templateAssignment.templateCode;\r\n        jobj['templateName']=templateAssignment.templateName;\r\n        jobj['templateType']=templateAssignment.templateType;\r\n        jobj['bizTypeId']=templateAssignment.bizTypeId;\r\n        jobj['useEvent']=templateAssignment.useEvent;\r\n        jobj['eventInfo']=templateAssignment.eventInfo;\r\n        jobj['useDimension']=templateAssignment.useDimension;\r\n        if(templateAssignment.dimensionInfo){\r\n            let serializer=new DimensionInfoSerializer();\r\n            jobj['dimensionInfo']=serializer.serialize(templateAssignment.dimensionInfo);\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):UbccParamTemplateAssignment{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let templateAssignment=new UbccParamTemplateAssignment();\r\n        templateAssignment.id=jobj['id'];\r\n        templateAssignment.templateId=jobj['templateId'];\r\n        templateAssignment.index=jobj['index'] as number;\r\n        templateAssignment.templateCode=jobj['templateCode'];\r\n        templateAssignment.templateName=jobj['templateName'];\r\n        templateAssignment.templateType=jobj['templateType'];\r\n        templateAssignment.bizTypeId=jobj['bizTypeId'];\r\n        templateAssignment.useEvent=jobj['useEvent'] as boolean;\r\n        templateAssignment.eventInfo=Object.assign(new EventInfo(),jobj['eventInfo']);\r\n        templateAssignment.useDimension=jobj['useDimension'] as boolean;\r\n        if(jobj['dimensionInfo']){\r\n            let serializer=new DimensionInfoSerializer();\r\n            templateAssignment.dimensionInfo=serializer.deserialize(jobj['dimensionInfo']);\r\n        }\r\n        return templateAssignment;\r\n    }\r\n}","import { UbccParamDataVo } from '../../param-data-vo/ubcc-param-data-vo';\r\nimport { DataRow } from '../../param-data-vo/data-row';\r\nimport { SerializerUtils } from '../../utils/serializer-utils';\r\n\r\nexport  class ParamDataVoSerializer{\r\n\r\n    serialize(paramData:UbccParamDataVo):Object{\r\n        let jobj=new Object();\r\n        if(!paramData){\r\n            return jobj;\r\n        }\r\n        jobj['templateId']=paramData.templateId;\r\n        jobj['bizTypeId']=paramData.bizTypeId;\r\n        if(paramData.data){\r\n            jobj['data']=[];\r\n            paramData.data.forEach(dataRow => {\r\n                let serializer=SerializerUtils.getUbccParamDataRowSerializerFactory().get(dataRow.getKind());\r\n                jobj['data'].push(serializer.serialize(dataRow));\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):UbccParamDataVo{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let paramData=new UbccParamDataVo();\r\n        paramData.templateId=jobj['templateId'];\r\n        paramData.bizTypeId=jobj['bizTypeId'];\r\n        if(jobj['data']){\r\n            paramData.data=new Array<DataRow>();\r\n            jobj['data'].forEach(dataRowJobj => {\r\n                let serializer=SerializerUtils.getUbccParamDataRowSerializerFactory().get(dataRowJobj['kind']);\r\n                paramData.data.push(serializer.deserialize(dataRowJobj));\r\n            });\r\n        }\r\n        return paramData;\r\n    }\r\n}"]}