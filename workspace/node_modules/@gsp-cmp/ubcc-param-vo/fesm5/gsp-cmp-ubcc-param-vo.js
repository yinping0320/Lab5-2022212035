import { NgModule } from '@angular/core';
import { __extends } from 'tslib';
import { Parameter, StructuredType, DataType, DefaultParameterSerializer, DefaultStructuredTypeSerializer, DefaultDataTypeSerializerFactory, DefaultConstraintSerializer, DefaultOperationSerializerFactory, DefaultPropertySerializerFactory } from '@ecp-caf/common-structure';

/**
 * @fileoverview added by tsickle
 * Generated from: lib/ubcc-param-vo.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccParamVoModule = /** @class */ (function () {
    function UbccParamVoModule() {
    }
    UbccParamVoModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [],
                    imports: [],
                    exports: []
                },] }
    ];
    return UbccParamVoModule;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/param-template-vo/ubcc-param-template.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccParamTemplate = /** @class */ (function () {
    function UbccParamTemplate() {
        this.params = [];
        this.groups = [];
        this.structuredTypes = [];
    }
    return UbccParamTemplate;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/param-template-vo/ubcc-param-template-vo.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccParamTemplateVo = /** @class */ (function () {
    function UbccParamTemplateVo() {
    }
    return UbccParamTemplateVo;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/param-template-assignment-vo/ubcc-param-template-assignment.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccParamTemplateAssignment = /** @class */ (function () {
    function UbccParamTemplateAssignment() {
    }
    return UbccParamTemplateAssignment;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/param-template-assignment-vo/dimension-data.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DimensionData = /** @class */ (function () {
    function DimensionData() {
    }
    return DimensionData;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/param-template-assignment-vo/dimension-info.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DimensionInfo = /** @class */ (function () {
    function DimensionInfo() {
    }
    return DimensionInfo;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/param-template-assignment-vo/eventInfo.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var EventInfo = /** @class */ (function () {
    function EventInfo() {
    }
    return EventInfo;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/param-dimension/dimension.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var Dimension = /** @class */ (function () {
    function Dimension() {
    }
    return Dimension;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/param-dimension/dimension-item.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DimensionItem = /** @class */ (function () {
    function DimensionItem() {
    }
    return DimensionItem;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/param-data-vo/ubcc-param-data-vo.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccParamDataVo = /** @class */ (function () {
    function UbccParamDataVo() {
    }
    return UbccParamDataVo;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/const/data-row-extension-const.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DataRowExtensionConst = /** @class */ (function () {
    function DataRowExtensionConst() {
    }
    DataRowExtensionConst.DEFAULT_DATA_ROW = "DefaultDataRow";
    DataRowExtensionConst.DIMENSION_DATA_ROW = "DimensionDataRow";
    return DataRowExtensionConst;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/param-data-vo/dimension-data-row.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DimensionDataRow = /** @class */ (function () {
    function DimensionDataRow() {
        this.kind = DataRowExtensionConst.DIMENSION_DATA_ROW;
    }
    /**
     * @return {?}
     */
    DimensionDataRow.prototype.getKind = /**
     * @return {?}
     */
    function () {
        return DataRowExtensionConst.DIMENSION_DATA_ROW;
    };
    return DimensionDataRow;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/param-data-vo/default-data-row.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DefaultDataRow = /** @class */ (function () {
    function DefaultDataRow() {
        this.kind = DataRowExtensionConst.DEFAULT_DATA_ROW;
    }
    /**
     * @return {?}
     */
    DefaultDataRow.prototype.getKind = /**
     * @return {?}
     */
    function () {
        return DataRowExtensionConst.DEFAULT_DATA_ROW;
    };
    return DefaultDataRow;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/param-data-vo/data-item.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DataItem = /** @class */ (function () {
    function DataItem() {
    }
    return DataItem;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/const/parameter-extension-const.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ParamExtensionConst = /** @class */ (function () {
    function ParamExtensionConst() {
    }
    ParamExtensionConst.BASE_PARAM = "UbccBaseParam";
    ParamExtensionConst.ITEM_CATEGORY_PARAM = "UbccItemCategoryParam";
    return ParamExtensionConst;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/extension/parameter/base-param.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var BaseParameter = /** @class */ (function (_super) {
    __extends(BaseParameter, _super);
    function BaseParameter() {
        var _this = _super.call(this) || this;
        _this.kind = ParamExtensionConst.BASE_PARAM;
        _this.visible = true;
        _this.readonly = false;
        return _this;
    }
    return BaseParameter;
}(Parameter));

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/extension/parameter/item-category-param.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ItemCategoryParam = /** @class */ (function (_super) {
    __extends(ItemCategoryParam, _super);
    function ItemCategoryParam() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.kind = ParamExtensionConst.ITEM_CATEGORY_PARAM;
        return _this;
    }
    return ItemCategoryParam;
}(BaseParameter));

/**
 * @fileoverview added by tsickle
 * Generated from: lib/const/data-type-extension-const.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DataTypeExtensionConst = /** @class */ (function () {
    function DataTypeExtensionConst() {
    }
    DataTypeExtensionConst.HELP_TYPE = "HelpType";
    DataTypeExtensionConst.UBCC_STRUCTURE_TYPE_REF = "UbccStructureTypeRef";
    return DataTypeExtensionConst;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/extension/data-type/help-type.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var HelpType = /** @class */ (function (_super) {
    __extends(HelpType, _super);
    function HelpType() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.kind = DataTypeExtensionConst.HELP_TYPE;
        return _this;
    }
    return HelpType;
}(StructuredType));

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/extension/data-type/structure-type-ref.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var StructureTypeRef = /** @class */ (function (_super) {
    __extends(StructureTypeRef, _super);
    function StructureTypeRef() {
        var _this = _super.call(this) || this;
        _this.kind = DataTypeExtensionConst.UBCC_STRUCTURE_TYPE_REF;
        _this.kind = DataTypeExtensionConst.UBCC_STRUCTURE_TYPE_REF;
        return _this;
    }
    return StructureTypeRef;
}(DataType));

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/extension/data-type/structure-type-ref-enum.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {number} */
var StructureTypeRefEnum = {
    ENUM: 0,
    HELP: 1,
};
StructureTypeRefEnum[StructureTypeRefEnum.ENUM] = 'ENUM';
StructureTypeRefEnum[StructureTypeRefEnum.HELP] = 'HELP';

/**
 * @fileoverview added by tsickle
 * Generated from: lib/const/constraint-extension-const.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ConstraintExtenionConst = /** @class */ (function () {
    function ConstraintExtenionConst() {
    }
    ConstraintExtenionConst.UBCC_STRING_CONSTRAINT = "UbccStringConstraint";
    ConstraintExtenionConst.UBCC_INTEGER_CONSTRAINT = "UbccIntegerConstraint";
    ConstraintExtenionConst.UBCC_DATE_TIME_CONSTRAINT = "UbccDateTimeConstraint";
    ConstraintExtenionConst.UBCC_DECIMAL_CONSTRAINT = "UbccDecimalConstraint";
    return ConstraintExtenionConst;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/extension/constraint/ubcc-string-constaint.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccStringConstraint = /** @class */ (function () {
    function UbccStringConstraint() {
        this.kind = ConstraintExtenionConst.UBCC_STRING_CONSTRAINT;
    }
    /**
     * @return {?}
     */
    UbccStringConstraint.prototype.getKind = /**
     * @return {?}
     */
    function () {
        return ConstraintExtenionConst.UBCC_STRING_CONSTRAINT;
    };
    return UbccStringConstraint;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/extension/constraint/ubcc-date-time-constraint.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccDateTimeConstraint = /** @class */ (function () {
    function UbccDateTimeConstraint() {
        this.kind = ConstraintExtenionConst.UBCC_DATE_TIME_CONSTRAINT;
    }
    /**
     * @return {?}
     */
    UbccDateTimeConstraint.prototype.getKind = /**
     * @return {?}
     */
    function () {
        return ConstraintExtenionConst.UBCC_DATE_TIME_CONSTRAINT;
    };
    return UbccDateTimeConstraint;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/extension/constraint/ubcc-decimal-constraint.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccDecimalConstraint = /** @class */ (function () {
    function UbccDecimalConstraint() {
        this.kind = ConstraintExtenionConst.UBCC_DECIMAL_CONSTRAINT;
    }
    /**
     * @return {?}
     */
    UbccDecimalConstraint.prototype.getKind = /**
     * @return {?}
     */
    function () {
        return ConstraintExtenionConst.UBCC_DECIMAL_CONSTRAINT;
    };
    return UbccDecimalConstraint;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/extension/constraint/ubcc-integer-constraint.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccIntegerConstraint = /** @class */ (function () {
    function UbccIntegerConstraint() {
        this.kind = ConstraintExtenionConst.UBCC_INTEGER_CONSTRAINT;
    }
    /**
     * @return {?}
     */
    UbccIntegerConstraint.prototype.getKind = /**
     * @return {?}
     */
    function () {
        return ConstraintExtenionConst.UBCC_INTEGER_CONSTRAINT;
    };
    return UbccIntegerConstraint;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/param-serialzier/base-param-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var BaseParameterSerializer = /** @class */ (function () {
    function BaseParameterSerializer() {
    }
    /**
     * @param {?} param
     * @param {?} ctxt
     * @return {?}
     */
    BaseParameterSerializer.prototype.serialize = /**
     * @param {?} param
     * @param {?} ctxt
     * @return {?}
     */
    function (param, ctxt) {
        /** @type {?} */
        var jobj = new Object();
        if (!param) {
            return jobj;
        }
        /** @type {?} */
        var baseParam = (/** @type {?} */ (param));
        /** @type {?} */
        var serializer = new DefaultParameterSerializer();
        jobj = serializer.serialize(baseParam, ctxt);
        jobj['id'] = baseParam.id;
        jobj['index'] = baseParam.index;
        jobj['visible'] = baseParam.visible;
        jobj['readonly'] = baseParam.readonly;
        jobj['groupId'] = baseParam.groupId;
        jobj['groupCode'] = baseParam.groupCode;
        jobj['groupName'] = baseParam.groupName;
        jobj['parameterTypeDesc'] = baseParam.parameterTypeDesc;
        jobj['kind'] = baseParam.kind;
        return jobj;
    };
    /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    BaseParameterSerializer.prototype.deserialize = /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    function (obj, ctxt) {
        if (!obj) {
            return null;
        }
        /** @type {?} */
        var param = new BaseParameter();
        /** @type {?} */
        var serializer = new DefaultParameterSerializer();
        param = (/** @type {?} */ (serializer.deserialize(obj, ctxt)));
        param.id = obj['id'];
        param.index = (/** @type {?} */ (obj['index']));
        param.visible = (/** @type {?} */ (obj['visible']));
        param.readonly = (/** @type {?} */ (obj['readonly']));
        param.groupId = obj['groupId'];
        param.groupCode = obj['groupCode'];
        param.groupName = obj['groupName'];
        param.parameterTypeDesc = obj['parameterTypeDesc'];
        return param;
    };
    return BaseParameterSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/param-serialzier/item-category-param-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ItemCategoryParamSerializer = /** @class */ (function () {
    function ItemCategoryParamSerializer() {
    }
    /**
     * @param {?} param
     * @param {?} ctxt
     * @return {?}
     */
    ItemCategoryParamSerializer.prototype.serialize = /**
     * @param {?} param
     * @param {?} ctxt
     * @return {?}
     */
    function (param, ctxt) {
        /** @type {?} */
        var jobj = new Object();
        if (!param) {
            return jobj;
        }
        /** @type {?} */
        var itemCategoryParam = (/** @type {?} */ (param));
        /** @type {?} */
        var serializer = new BaseParameterSerializer();
        jobj = serializer.serialize(itemCategoryParam, ctxt);
        jobj['kind'] = itemCategoryParam.kind;
        return jobj;
    };
    /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    ItemCategoryParamSerializer.prototype.deserialize = /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    function (obj, ctxt) {
        if (!obj) {
            return null;
        }
        /** @type {?} */
        var param = new ItemCategoryParam();
        /** @type {?} */
        var serializer = new BaseParameterSerializer();
        param = (/** @type {?} */ (serializer.deserialize(obj, ctxt)));
        return param;
    };
    return ItemCategoryParamSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/factory/ubcc-param-serializer-factory.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccParamSerializerFactory = /** @class */ (function () {
    function UbccParamSerializerFactory() {
    }
    /**
     * @param {?} kind
     * @return {?}
     */
    UbccParamSerializerFactory.prototype.get = /**
     * @param {?} kind
     * @return {?}
     */
    function (kind) {
        switch (kind) {
            case ParamExtensionConst.BASE_PARAM:
                return new BaseParameterSerializer();
            case ParamExtensionConst.ITEM_CATEGORY_PARAM:
                return new ItemCategoryParamSerializer();
            default:
                return new DefaultParameterSerializer();
        }
    };
    return UbccParamSerializerFactory;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/param-data-serializer/default-data-row-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DefaultDataRowSerializer = /** @class */ (function () {
    function DefaultDataRowSerializer() {
    }
    /**
     * @param {?} dataRow
     * @return {?}
     */
    DefaultDataRowSerializer.prototype.serialize = /**
     * @param {?} dataRow
     * @return {?}
     */
    function (dataRow) {
        /** @type {?} */
        var jobj = new Object();
        if (!dataRow) {
            return null;
        }
        /** @type {?} */
        var defaultDataRow = (/** @type {?} */ (dataRow));
        jobj['id'] = defaultDataRow.id;
        jobj['kind'] = defaultDataRow.kind;
        if (defaultDataRow.paramItems) {
            jobj['paramItems'] = [];
            defaultDataRow.paramItems.forEach((/**
             * @param {?} paramItem
             * @return {?}
             */
            function (paramItem) {
                jobj['paramItems'] = paramItem;
            }));
        }
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    DefaultDataRowSerializer.prototype.deserialize = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        var dataRow = new DefaultDataRow();
        dataRow.id = jobj['id'];
        if (jobj['paramItems']) {
            dataRow.paramItems = new Array();
            jobj['paramItems'].forEach((/**
             * @param {?} paramItemJobj
             * @return {?}
             */
            function (paramItemJobj) {
                dataRow.paramItems.push(Object.assign(new DataItem(), paramItemJobj));
            }));
        }
        return dataRow;
    };
    return DefaultDataRowSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/param-data-serializer/dimension-data-row-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DimensionDataRowSerializer = /** @class */ (function () {
    function DimensionDataRowSerializer() {
    }
    /**
     * @param {?} dataRow
     * @return {?}
     */
    DimensionDataRowSerializer.prototype.serialize = /**
     * @param {?} dataRow
     * @return {?}
     */
    function (dataRow) {
        /** @type {?} */
        var jobj = new Object();
        if (!dataRow) {
            return null;
        }
        /** @type {?} */
        var dimensionDataRow = (/** @type {?} */ (dataRow));
        jobj['id'] = dimensionDataRow.id;
        jobj['kind'] = dimensionDataRow.kind;
        if (dimensionDataRow.dimensionDataItems) {
            jobj['dimensionDataItems'] = [];
            dimensionDataRow.dimensionDataItems.forEach((/**
             * @param {?} dimensionDataItem
             * @return {?}
             */
            function (dimensionDataItem) {
                jobj['dimensionDataItems'] = dimensionDataItem;
            }));
        }
        if (dimensionDataRow.paramDataItems) {
            jobj['paramDataItems'] = [];
            dimensionDataRow.paramDataItems.forEach((/**
             * @param {?} paramItem
             * @return {?}
             */
            function (paramItem) {
                jobj['paramDataItems'] = paramItem;
            }));
        }
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    DimensionDataRowSerializer.prototype.deserialize = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        var dataRow = new DimensionDataRow();
        dataRow.id = jobj['id'];
        if (jobj['dimensionDataItems']) {
            dataRow.dimensionDataItems = new Array();
            jobj['dimensionDataItems'].forEach((/**
             * @param {?} dimensionDataItemJobj
             * @return {?}
             */
            function (dimensionDataItemJobj) {
                dataRow.dimensionDataItems.push(Object.assign(new DataItem(), dimensionDataItemJobj));
            }));
        }
        if (jobj['paramDataItems']) {
            dataRow.paramDataItems = new Array();
            jobj['paramDataItems'].forEach((/**
             * @param {?} paramDataItemsJobj
             * @return {?}
             */
            function (paramDataItemsJobj) {
                dataRow.dimensionDataItems.push(Object.assign(new DataItem(), paramDataItemsJobj));
            }));
        }
        return dataRow;
    };
    return DimensionDataRowSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/factory/ubcc-param-data-row-serializer-factory.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccParamDataRowSerializerFactory = /** @class */ (function () {
    function UbccParamDataRowSerializerFactory() {
    }
    /**
     * @param {?} kind
     * @return {?}
     */
    UbccParamDataRowSerializerFactory.prototype.get = /**
     * @param {?} kind
     * @return {?}
     */
    function (kind) {
        switch (kind) {
            case DataRowExtensionConst.DEFAULT_DATA_ROW:
                return new DefaultDataRowSerializer();
            case DataRowExtensionConst.DIMENSION_DATA_ROW:
                return new DimensionDataRowSerializer();
            default:
                throw new Error("\u672A\u83B7\u53D6\u5230" + kind + "\u7C7B\u578B\u7684DATA_ROW\u5E8F\u5217\u5316\u5668");
        }
    };
    return UbccParamDataRowSerializerFactory;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/utils/serializer-utils.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// @dynamic
var 
// @dynamic
SerializerUtils = /** @class */ (function () {
    function SerializerUtils() {
    }
    /**
     * @return {?}
     */
    SerializerUtils.getContext = /**
     * @return {?}
     */
    function () {
        if (!SerializerUtils.context) {
            SerializerUtils.context = new UbccParamSerializerContext();
        }
        return SerializerUtils.context;
    };
    /**
     * @return {?}
     */
    SerializerUtils.getUbccParamDataRowSerializerFactory = /**
     * @return {?}
     */
    function () {
        if (!SerializerUtils.dataRowFactory) {
            SerializerUtils.dataRowFactory = new UbccParamDataRowSerializerFactory();
        }
        return SerializerUtils.dataRowFactory;
    };
    return SerializerUtils;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/data-type-serializer/help-type-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var HelpTypeSerialzier = /** @class */ (function () {
    function HelpTypeSerialzier() {
    }
    /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    HelpTypeSerialzier.prototype.serialize = /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    function (type, ctxt) {
        /** @type {?} */
        var jobj = new Object();
        if (!type) {
            return null;
        }
        /** @type {?} */
        var serializer = new DefaultStructuredTypeSerializer();
        jobj = serializer.serialize(type, SerializerUtils.getContext());
        /** @type {?} */
        var helpType = (/** @type {?} */ (type));
        jobj['helpId'] = helpType.helpId;
        jobj['helpCode'] = helpType.helpCode;
        jobj['helpName'] = helpType.helpName;
        jobj['kind'] = helpType.kind;
        return jobj;
    };
    /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    HelpTypeSerialzier.prototype.deserialize = /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    function (obj, ctxt) {
        if (!obj) {
            return null;
        }
        /** @type {?} */
        var helpType = new HelpType();
        /** @type {?} */
        var serializer = new DefaultStructuredTypeSerializer();
        helpType = (/** @type {?} */ (serializer.deserialize(obj, SerializerUtils.getContext())));
        helpType.helpId = obj['helpId'];
        helpType.helpCode = obj['helpCode'];
        helpType.helpName = obj['helpName'];
        return helpType;
    };
    return HelpTypeSerialzier;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/data-type-serializer/structure-type-ref-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var StructureTypeRefSerializer = /** @class */ (function () {
    function StructureTypeRefSerializer() {
    }
    /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    StructureTypeRefSerializer.prototype.serialize = /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    function (type, ctxt) {
        if (!type) {
            return null;
        }
        /** @type {?} */
        var jobj = new Object();
        /** @type {?} */
        var refType = (/** @type {?} */ (type));
        jobj['kind'] = refType.kind;
        jobj['refId'] = refType.refId;
        jobj['type'] = refType.type;
        return jobj;
    };
    /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    StructureTypeRefSerializer.prototype.deserialize = /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    function (obj, ctxt) {
        if (!obj) {
            return null;
        }
        /** @type {?} */
        var refType = new StructureTypeRef();
        refType.refId = obj['refId'];
        refType.type = (/** @type {?} */ (obj['type']));
        return refType;
    };
    return StructureTypeRefSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/factory/ubcc-data-type-serializer-factory.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccDataTypeSerializerFactory = /** @class */ (function () {
    function UbccDataTypeSerializerFactory() {
    }
    /**
     * @param {?} kind
     * @return {?}
     */
    UbccDataTypeSerializerFactory.prototype.get = /**
     * @param {?} kind
     * @return {?}
     */
    function (kind) {
        switch (kind) {
            case DataTypeExtensionConst.HELP_TYPE:
                return new HelpTypeSerialzier();
            case DataTypeExtensionConst.UBCC_STRUCTURE_TYPE_REF:
                return new StructureTypeRefSerializer();
            default:
                return new DefaultDataTypeSerializerFactory().get(kind);
        }
    };
    return UbccDataTypeSerializerFactory;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/constraint-serializer/integer-constraint-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccIntegerConstraintSerializer = /** @class */ (function () {
    function UbccIntegerConstraintSerializer() {
    }
    /**
     * @param {?} constraint
     * @param {?} ctxt
     * @return {?}
     */
    UbccIntegerConstraintSerializer.prototype.serialize = /**
     * @param {?} constraint
     * @param {?} ctxt
     * @return {?}
     */
    function (constraint, ctxt) {
        /** @type {?} */
        var jobj = new Object();
        if (!constraint) {
            return jobj;
        }
        /** @type {?} */
        var integerConstraint = (/** @type {?} */ (constraint));
        jobj['kind'] = integerConstraint.kind;
        jobj['max'] = integerConstraint.max;
        jobj['min'] = integerConstraint.min;
        jobj['unit'] = integerConstraint.unit;
        return jobj;
    };
    /**
     * @param {?} jobj
     * @param {?} ctxt
     * @return {?}
     */
    UbccIntegerConstraintSerializer.prototype.deserialize = /**
     * @param {?} jobj
     * @param {?} ctxt
     * @return {?}
     */
    function (jobj, ctxt) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        var integerConstraint = new UbccIntegerConstraint();
        integerConstraint.max = (/** @type {?} */ (jobj['max']));
        integerConstraint.min = (/** @type {?} */ (jobj['min']));
        integerConstraint.unit = jobj['unit'];
        return integerConstraint;
    };
    return UbccIntegerConstraintSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/constraint-serializer/decimal-constraint-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccDecimalConstraintSerializer = /** @class */ (function () {
    function UbccDecimalConstraintSerializer() {
    }
    /**
     * @param {?} constraint
     * @param {?} ctxt
     * @return {?}
     */
    UbccDecimalConstraintSerializer.prototype.serialize = /**
     * @param {?} constraint
     * @param {?} ctxt
     * @return {?}
     */
    function (constraint, ctxt) {
        /** @type {?} */
        var jobj = new Object();
        if (!constraint) {
            return jobj;
        }
        /** @type {?} */
        var decimalConstraint = (/** @type {?} */ (constraint));
        jobj['kind'] = decimalConstraint.kind;
        jobj['max'] = decimalConstraint.max;
        jobj['min'] = decimalConstraint.min;
        jobj['precision'] = decimalConstraint.precision;
        jobj['unit'] = decimalConstraint.unit;
        return jobj;
    };
    /**
     * @param {?} jobj
     * @param {?} ctxt
     * @return {?}
     */
    UbccDecimalConstraintSerializer.prototype.deserialize = /**
     * @param {?} jobj
     * @param {?} ctxt
     * @return {?}
     */
    function (jobj, ctxt) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        var decimalConstraint = new UbccDecimalConstraint();
        decimalConstraint.max = (/** @type {?} */ (jobj['max']));
        decimalConstraint.min = (/** @type {?} */ (jobj['min']));
        decimalConstraint.precision = (/** @type {?} */ (jobj['precision']));
        decimalConstraint.unit = jobj['unit'];
        return decimalConstraint;
    };
    return UbccDecimalConstraintSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/constraint-serializer/date-time-constraint-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccDateTimeConstraintSerializer = /** @class */ (function () {
    function UbccDateTimeConstraintSerializer() {
    }
    /**
     * @param {?} constraint
     * @param {?} ctxt
     * @return {?}
     */
    UbccDateTimeConstraintSerializer.prototype.serialize = /**
     * @param {?} constraint
     * @param {?} ctxt
     * @return {?}
     */
    function (constraint, ctxt) {
        /** @type {?} */
        var jobj = new Object();
        if (!constraint) {
            return jobj;
        }
        /** @type {?} */
        var dataTimeConstraint = (/** @type {?} */ (constraint));
        jobj['kind'] = dataTimeConstraint.kind;
        jobj['format'] = dataTimeConstraint.format;
        return jobj;
    };
    /**
     * @param {?} jobj
     * @param {?} ctxt
     * @return {?}
     */
    UbccDateTimeConstraintSerializer.prototype.deserialize = /**
     * @param {?} jobj
     * @param {?} ctxt
     * @return {?}
     */
    function (jobj, ctxt) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        var dataTimeConstraint = new UbccDateTimeConstraint();
        dataTimeConstraint.format = jobj['format'];
        return dataTimeConstraint;
    };
    return UbccDateTimeConstraintSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/constraint-serializer/string-constraint-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccStringConstraintSerializer = /** @class */ (function () {
    function UbccStringConstraintSerializer() {
    }
    /**
     * @param {?} constraint
     * @param {?} ctxt
     * @return {?}
     */
    UbccStringConstraintSerializer.prototype.serialize = /**
     * @param {?} constraint
     * @param {?} ctxt
     * @return {?}
     */
    function (constraint, ctxt) {
        /** @type {?} */
        var jobj = new Object();
        if (!constraint) {
            return jobj;
        }
        /** @type {?} */
        var stringConstraint = (/** @type {?} */ (constraint));
        jobj['kind'] = stringConstraint.kind;
        jobj['maxLength'] = stringConstraint.maxLength;
        jobj['minLength'] = stringConstraint.minLength;
        jobj['regexExpress'] = stringConstraint.regexExpress;
        return jobj;
    };
    /**
     * @param {?} jobj
     * @param {?} ctxt
     * @return {?}
     */
    UbccStringConstraintSerializer.prototype.deserialize = /**
     * @param {?} jobj
     * @param {?} ctxt
     * @return {?}
     */
    function (jobj, ctxt) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        var constaint = new UbccStringConstraint();
        constaint.maxLength = (/** @type {?} */ (jobj['maxLength']));
        constaint.minLength = (/** @type {?} */ (jobj['minLength']));
        constaint.regexExpress = jobj['regexExpress'];
        return constaint;
    };
    return UbccStringConstraintSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/factory/ubcc-param-constraint-serializer-factory.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccParamConstraintSerializerFactory = /** @class */ (function () {
    function UbccParamConstraintSerializerFactory() {
    }
    /**
     * @param {?} kind
     * @return {?}
     */
    UbccParamConstraintSerializerFactory.prototype.get = /**
     * @param {?} kind
     * @return {?}
     */
    function (kind) {
        switch (kind) {
            case ConstraintExtenionConst.UBCC_INTEGER_CONSTRAINT:
                return new UbccIntegerConstraintSerializer();
            case ConstraintExtenionConst.UBCC_DECIMAL_CONSTRAINT:
                return new UbccDecimalConstraintSerializer();
            case ConstraintExtenionConst.UBCC_STRING_CONSTRAINT:
                return new UbccStringConstraintSerializer();
            case ConstraintExtenionConst.UBCC_DATE_TIME_CONSTRAINT:
                return new UbccDateTimeConstraintSerializer();
            default:
                return new DefaultConstraintSerializer();
        }
    };
    return UbccParamConstraintSerializerFactory;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/serializer-context/ubcc-serializer-context.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccParamSerializerContext = /** @class */ (function () {
    function UbccParamSerializerContext() {
    }
    /**
     * @return {?}
     */
    UbccParamSerializerContext.prototype.getDataTypeSerializerFactory = /**
     * @return {?}
     */
    function () {
        if (!this.dataTypeFactory) {
            this.dataTypeFactory = new UbccDataTypeSerializerFactory();
        }
        return this.dataTypeFactory;
    };
    /**
     * @return {?}
     */
    UbccParamSerializerContext.prototype.getParameterSerializerFactory = /**
     * @return {?}
     */
    function () {
        if (!this.parameterFactory) {
            this.parameterFactory = new UbccParamSerializerFactory();
        }
        return this.parameterFactory;
    };
    /**
     * @return {?}
     */
    UbccParamSerializerContext.prototype.getOperationSerializerFactory = /**
     * @return {?}
     */
    function () {
        if (!this.operationFactory) {
            this.operationFactory = new DefaultOperationSerializerFactory();
        }
        return this.operationFactory;
    };
    /**
     * @return {?}
     */
    UbccParamSerializerContext.prototype.getPropertySerializerFactory = /**
     * @return {?}
     */
    function () {
        if (!this.propertyFactory) {
            this.propertyFactory = new DefaultPropertySerializerFactory();
        }
        return this.propertyFactory;
    };
    /**
     * @return {?}
     */
    UbccParamSerializerContext.prototype.getConstraintSerializerFactory = /**
     * @return {?}
     */
    function () {
        if (!this.constraintFactory) {
            this.constraintFactory = new UbccParamConstraintSerializerFactory();
        }
        return this.constraintFactory;
    };
    return UbccParamSerializerContext;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/param-template-vo/parameter-group.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ParameterGroup = /** @class */ (function () {
    function ParameterGroup() {
    }
    return ParameterGroup;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/template-serialzier/ubcc-param-template-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccParamTemplateSerializer = /** @class */ (function () {
    function UbccParamTemplateSerializer() {
    }
    /**
     * @param {?} template
     * @return {?}
     */
    UbccParamTemplateSerializer.prototype.serialize = /**
     * @param {?} template
     * @return {?}
     */
    function (template) {
        /** @type {?} */
        var jobj = new Object();
        if (!template) {
            return null;
        }
        jobj['id'] = template.id;
        jobj['index'] = template.index;
        jobj['code'] = template.code;
        jobj['name'] = template.name;
        jobj['description'] = template.description;
        jobj['bizTypeId'] = template.bizTypeId;
        jobj['bizTypePath'] = template.bizTypePath;
        jobj['bizModule'] = template.bizModule;
        jobj['templateType'] = template.templateType;
        jobj['groupEnable'] = template.groupEnable;
        /** @type {?} */
        var context = new UbccParamSerializerContext();
        if (template.params) {
            jobj['params'] = new Array();
            template.params.forEach((/**
             * @param {?} param
             * @return {?}
             */
            function (param) {
                /** @type {?} */
                var paramJobj = new Object();
                /** @type {?} */
                var serializer = context.getParameterSerializerFactory().get(param.kind);
                paramJobj = serializer.serialize(param, context);
                jobj['params'].push(paramJobj);
            }));
        }
        if (template.structuredTypes) {
            jobj['structuredTypes'] = new Array();
            template.structuredTypes.forEach((/**
             * @param {?} structure
             * @return {?}
             */
            function (structure) {
                /** @type {?} */
                var structureJobj = new Object();
                /** @type {?} */
                var serializer = context.getDataTypeSerializerFactory().get(structure.kind);
                structureJobj = serializer.serialize(structure, context);
                jobj['structuredTypes'].push(structureJobj);
            }));
        }
        if (template.groups) {
            jobj['groups'] = new Array();
            template.groups.forEach((/**
             * @param {?} group
             * @return {?}
             */
            function (group) {
                jobj['groups'].push(group);
            }));
        }
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    UbccParamTemplateSerializer.prototype.deserializer = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        var template = new UbccParamTemplate();
        template.id = jobj['id'];
        template.index = (/** @type {?} */ (jobj['index']));
        template.code = jobj['code'];
        template.name = jobj['name'];
        template.description = jobj['description'];
        template.bizTypeId = jobj['bizTypeId'];
        template.bizTypePath = jobj['bizTypePath'];
        template.bizModule = jobj['bizModule'];
        template.templateType = jobj['templateType'];
        template.groupEnable = jobj['groupEnable'];
        /** @type {?} */
        var context = new UbccParamSerializerContext();
        if (jobj['params']) {
            template.params = new Array();
            jobj['params'].forEach((/**
             * @param {?} paramJobj
             * @return {?}
             */
            function (paramJobj) {
                /** @type {?} */
                var serializer = context.getParameterSerializerFactory().get(paramJobj['kind']);
                /** @type {?} */
                var param = serializer.deserialize(paramJobj, context);
                template.params.push(param);
            }));
        }
        if (jobj['structuredTypes']) {
            template.structuredTypes = new Array();
            jobj['structuredTypes'].forEach((/**
             * @param {?} structurJobj
             * @return {?}
             */
            function (structurJobj) {
                /** @type {?} */
                var serializer = context.getDataTypeSerializerFactory().get(structurJobj['kind']);
                /** @type {?} */
                var structure = (/** @type {?} */ (serializer.deserialize(structurJobj, context)));
                template.structuredTypes.push(structure);
            }));
        }
        if (jobj['groups']) {
            template.groups = new Array();
            jobj['groups'].forEach((/**
             * @param {?} groupJobj
             * @return {?}
             */
            function (groupJobj) {
                template.groups.push(Object.assign(new ParameterGroup(), groupJobj));
            }));
        }
        return template;
    };
    return UbccParamTemplateSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/dimension-serializer/dimension-item-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DimensionItemSerializer = /** @class */ (function () {
    function DimensionItemSerializer() {
    }
    /**
     * @param {?} dimensionItem
     * @return {?}
     */
    DimensionItemSerializer.prototype.serialize = /**
     * @param {?} dimensionItem
     * @return {?}
     */
    function (dimensionItem) {
        /** @type {?} */
        var jobj = new Object();
        if (!dimensionItem) {
            return null;
        }
        jobj['id'] = dimensionItem.id;
        jobj['index'] = dimensionItem.index;
        jobj['code'] = dimensionItem.code;
        jobj['name'] = dimensionItem.name;
        if (dimensionItem.dataType) {
            /** @type {?} */
            var context = SerializerUtils.getContext();
            /** @type {?} */
            var serializer = context.getDataTypeSerializerFactory().get(dimensionItem.dataType.kind);
            jobj['dataType'] = serializer.serialize(dimensionItem.dataType, context);
            //dataType作为字符串存
            jobj['dataType'] = JSON.stringify(jobj['dataType']);
        }
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    DimensionItemSerializer.prototype.deserialize = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        var dimensionItem = new DimensionItem();
        dimensionItem.id = jobj['id'];
        dimensionItem.index = (/** @type {?} */ (jobj['index']));
        dimensionItem.code = jobj['code'];
        dimensionItem.name = jobj['name'];
        if (jobj['dataType']) {
            //dataType作为字符串存
            jobj['dataType'] = JSON.parse(jobj['dataType']);
            /** @type {?} */
            var context = SerializerUtils.getContext();
            /** @type {?} */
            var kind = jobj['dataType']['kind'];
            /** @type {?} */
            var serializer = context.getDataTypeSerializerFactory().get(kind);
            dimensionItem.dataType = (/** @type {?} */ (serializer.deserialize(jobj['dataType'], context)));
        }
        return dimensionItem;
    };
    return DimensionItemSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/dimension-serializer/dimension-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DimensionSerializer = /** @class */ (function () {
    function DimensionSerializer() {
    }
    /**
     * @param {?} dimension
     * @return {?}
     */
    DimensionSerializer.prototype.serialize = /**
     * @param {?} dimension
     * @return {?}
     */
    function (dimension) {
        /** @type {?} */
        var jobj = new Object();
        if (!dimension) {
            return null;
        }
        jobj['id'] = dimension.id;
        jobj['code'] = dimension.code;
        jobj['name'] = dimension.name;
        if (dimension.dimensionItems) {
            jobj['dimensionItems'] = [];
            /** @type {?} */
            var serializer_1 = new DimensionItemSerializer();
            dimension.dimensionItems.forEach((/**
             * @param {?} dimensionItem
             * @return {?}
             */
            function (dimensionItem) {
                jobj['dimensionItems'].push(serializer_1.serialize(dimensionItem));
            }));
        }
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    DimensionSerializer.prototype.deserialize = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        var dimension = new Dimension();
        dimension.id = jobj['id'];
        dimension.code = jobj['code'];
        dimension.name = jobj['name'];
        if (jobj['dimensionItems']) {
            dimension.dimensionItems = new Array();
            /** @type {?} */
            var serializer_2 = new DimensionItemSerializer();
            jobj['dimensionItems'].forEach((/**
             * @param {?} dimensionItemJobj
             * @return {?}
             */
            function (dimensionItemJobj) {
                dimension.dimensionItems.push(serializer_2.deserialize(dimensionItemJobj));
            }));
        }
        return dimension;
    };
    return DimensionSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/param-data-serializer/data-item-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DataItemSerializer = /** @class */ (function () {
    function DataItemSerializer() {
    }
    /**
     * @param {?} dataItem
     * @return {?}
     */
    DataItemSerializer.prototype.serialize = /**
     * @param {?} dataItem
     * @return {?}
     */
    function (dataItem) {
        if (!dataItem) {
            return null;
        }
        /** @type {?} */
        var jobj = new Object();
        jobj['id'] = dataItem.id;
        jobj['dataCode'] = dataItem.dataCode;
        jobj['dataName'] = dataItem.dataName;
        jobj['dataDesc'] = dataItem.dataDesc;
        jobj['dataValue'] = dataItem.dataValue;
        jobj['dataType'] = dataItem.dataType;
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    DataItemSerializer.prototype.deserialize = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        var dataItem = new DataItem();
        dataItem.id = jobj['id'];
        dataItem.dataCode = jobj['dataCode'];
        dataItem.dataName = jobj['dataName'];
        dataItem.dataDesc = jobj['dataDesc'];
        dataItem.dataValue = jobj['dataValue'];
        dataItem.dataType = jobj['dataType'];
        return dataItem;
    };
    return DataItemSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/template-assignment-serializer/dimension-data-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DimensionDataSerializer = /** @class */ (function () {
    function DimensionDataSerializer() {
    }
    /**
     * @param {?} dimensionData
     * @return {?}
     */
    DimensionDataSerializer.prototype.serialize = /**
     * @param {?} dimensionData
     * @return {?}
     */
    function (dimensionData) {
        if (!dimensionData) {
            return null;
        }
        /** @type {?} */
        var jobj = new Object();
        jobj['id'] = dimensionData.id;
        if (dimensionData.dataItems) {
            jobj['dataItems'] = dimensionData.dataItems.map((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return new DataItemSerializer().serialize(item); }));
        }
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    DimensionDataSerializer.prototype.deserialize = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        var dimensionInfo = new DimensionData();
        dimensionInfo.id = jobj['id'];
        if (jobj['dataItems']) {
            dimensionInfo.dataItems = jobj['dataItems'].map((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return new DataItemSerializer().deserialize(item); }));
        }
        return dimensionInfo;
    };
    return DimensionDataSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/template-assignment-serializer/dimension-info-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DimensionInfoSerializer = /** @class */ (function () {
    function DimensionInfoSerializer() {
    }
    /**
     * @param {?} dimensionInfo
     * @return {?}
     */
    DimensionInfoSerializer.prototype.serialize = /**
     * @param {?} dimensionInfo
     * @return {?}
     */
    function (dimensionInfo) {
        if (!dimensionInfo) {
            return null;
        }
        /** @type {?} */
        var jobj = new Object();
        jobj['dataModificationAllow'] = dimensionInfo.dataModificationAllow;
        if (dimensionInfo.data) {
            jobj['data'] = dimensionInfo.data.map((/**
             * @param {?} dimensionData
             * @return {?}
             */
            function (dimensionData) { return new DimensionDataSerializer().serialize(dimensionData); }));
        }
        if (dimensionInfo.definition) {
            /** @type {?} */
            var serializer = new DimensionSerializer();
            jobj['definition'] = serializer.serialize(dimensionInfo.definition);
        }
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    DimensionInfoSerializer.prototype.deserialize = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        var dimensionInfo = new DimensionInfo();
        dimensionInfo.dataModificationAllow = (/** @type {?} */ (jobj['dataModificationAllow']));
        if (jobj['data']) {
            dimensionInfo.data = jobj['data'].map((/**
             * @param {?} dimensionData
             * @return {?}
             */
            function (dimensionData) { return new DimensionDataSerializer().deserialize(dimensionData); }));
        }
        if (jobj['definition']) {
            /** @type {?} */
            var serializer = new DimensionSerializer();
            dimensionInfo.definition = serializer.deserialize(jobj['definition']);
        }
        return dimensionInfo;
    };
    return DimensionInfoSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/template-assignment-serializer/template-assignment-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UbccParamTemplateAssignmentSerializer = /** @class */ (function () {
    function UbccParamTemplateAssignmentSerializer() {
    }
    /**
     * @param {?} templateAssignment
     * @return {?}
     */
    UbccParamTemplateAssignmentSerializer.prototype.serialize = /**
     * @param {?} templateAssignment
     * @return {?}
     */
    function (templateAssignment) {
        if (!templateAssignment) {
            return null;
        }
        /** @type {?} */
        var jobj = new Object();
        jobj['id'] = templateAssignment.id;
        jobj['templateId'] = templateAssignment.templateId;
        jobj['index'] = templateAssignment.index;
        jobj['templateCode'] = templateAssignment.templateCode;
        jobj['templateName'] = templateAssignment.templateName;
        jobj['templateType'] = templateAssignment.templateType;
        jobj['bizTypeId'] = templateAssignment.bizTypeId;
        jobj['useEvent'] = templateAssignment.useEvent;
        jobj['eventInfo'] = templateAssignment.eventInfo;
        jobj['useDimension'] = templateAssignment.useDimension;
        if (templateAssignment.dimensionInfo) {
            /** @type {?} */
            var serializer = new DimensionInfoSerializer();
            jobj['dimensionInfo'] = serializer.serialize(templateAssignment.dimensionInfo);
        }
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    UbccParamTemplateAssignmentSerializer.prototype.deserialize = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        var templateAssignment = new UbccParamTemplateAssignment();
        templateAssignment.id = jobj['id'];
        templateAssignment.templateId = jobj['templateId'];
        templateAssignment.index = (/** @type {?} */ (jobj['index']));
        templateAssignment.templateCode = jobj['templateCode'];
        templateAssignment.templateName = jobj['templateName'];
        templateAssignment.templateType = jobj['templateType'];
        templateAssignment.bizTypeId = jobj['bizTypeId'];
        templateAssignment.useEvent = (/** @type {?} */ (jobj['useEvent']));
        templateAssignment.eventInfo = Object.assign(new EventInfo(), jobj['eventInfo']);
        templateAssignment.useDimension = (/** @type {?} */ (jobj['useDimension']));
        if (jobj['dimensionInfo']) {
            /** @type {?} */
            var serializer = new DimensionInfoSerializer();
            templateAssignment.dimensionInfo = serializer.deserialize(jobj['dimensionInfo']);
        }
        return templateAssignment;
    };
    return UbccParamTemplateAssignmentSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/param-data-serializer/param-data-vo-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ParamDataVoSerializer = /** @class */ (function () {
    function ParamDataVoSerializer() {
    }
    /**
     * @param {?} paramData
     * @return {?}
     */
    ParamDataVoSerializer.prototype.serialize = /**
     * @param {?} paramData
     * @return {?}
     */
    function (paramData) {
        /** @type {?} */
        var jobj = new Object();
        if (!paramData) {
            return jobj;
        }
        jobj['templateId'] = paramData.templateId;
        jobj['bizTypeId'] = paramData.bizTypeId;
        if (paramData.data) {
            jobj['data'] = [];
            paramData.data.forEach((/**
             * @param {?} dataRow
             * @return {?}
             */
            function (dataRow) {
                /** @type {?} */
                var serializer = SerializerUtils.getUbccParamDataRowSerializerFactory().get(dataRow.getKind());
                jobj['data'].push(serializer.serialize(dataRow));
            }));
        }
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    ParamDataVoSerializer.prototype.deserialize = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        var paramData = new UbccParamDataVo();
        paramData.templateId = jobj['templateId'];
        paramData.bizTypeId = jobj['bizTypeId'];
        if (jobj['data']) {
            paramData.data = new Array();
            jobj['data'].forEach((/**
             * @param {?} dataRowJobj
             * @return {?}
             */
            function (dataRowJobj) {
                /** @type {?} */
                var serializer = SerializerUtils.getUbccParamDataRowSerializerFactory().get(dataRowJobj['kind']);
                paramData.data.push(serializer.deserialize(dataRowJobj));
            }));
        }
        return paramData;
    };
    return ParamDataVoSerializer;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: gsp-cmp-ubcc-param-vo.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { UbccParamVoModule, UbccParamTemplate, UbccParamTemplateVo, UbccParamTemplateAssignment, DimensionData, DimensionInfo, EventInfo, Dimension, DimensionItem, UbccParamDataVo, DimensionDataRow, DefaultDataRow, DataItem, BaseParameter, ItemCategoryParam, HelpType, StructureTypeRef, StructureTypeRefEnum, UbccStringConstraint, UbccDateTimeConstraint, UbccDecimalConstraint, UbccIntegerConstraint, UbccParamTemplateSerializer, UbccParamTemplateAssignmentSerializer, DimensionInfoSerializer, UbccParamSerializerContext, BaseParameterSerializer, ItemCategoryParamSerializer, ParamDataVoSerializer, DimensionDataRowSerializer, DefaultDataRowSerializer, UbccDataTypeSerializerFactory, UbccParamDataRowSerializerFactory, UbccParamSerializerFactory, DimensionSerializer, DimensionItemSerializer, HelpTypeSerialzier, StructureTypeRefSerializer, UbccDateTimeConstraintSerializer, UbccDecimalConstraintSerializer, UbccIntegerConstraintSerializer, UbccStringConstraintSerializer, ConstraintExtenionConst, DataRowExtensionConst, DataTypeExtensionConst, ParamExtensionConst, ParameterGroup };

//# sourceMappingURL=gsp-cmp-ubcc-param-vo.js.map