{"version":3,"file":"gsp-cmp-ubcc-param-vo.js.map","sources":["ng://@gsp-cmp/ubcc-param-vo/lib/ubcc-param-vo.module.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-vo/ubcc-param-template.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-vo/ubcc-param-template-vo.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-assignment-vo/ubcc-param-template-assignment.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-assignment-vo/dimension-data.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-assignment-vo/dimension-info.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-assignment-vo/eventInfo.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-dimension/dimension.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-dimension/dimension-item.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-data-vo/ubcc-param-data-vo.ts","ng://@gsp-cmp/ubcc-param-vo/lib/const/data-row-extension-const.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-data-vo/dimension-data-row.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-data-vo/default-data-row.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-data-vo/data-item.ts","ng://@gsp-cmp/ubcc-param-vo/lib/const/parameter-extension-const.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/parameter/base-param.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/parameter/item-category-param.ts","ng://@gsp-cmp/ubcc-param-vo/lib/const/data-type-extension-const.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/data-type/help-type.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/data-type/structure-type-ref.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/data-type/structure-type-ref-enum.ts","ng://@gsp-cmp/ubcc-param-vo/lib/const/constraint-extension-const.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/constraint/ubcc-string-constaint.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/constraint/ubcc-date-time-constraint.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/constraint/ubcc-decimal-constraint.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/extension/constraint/ubcc-integer-constraint.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-serialzier/base-param-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-serialzier/item-category-param-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/factory/ubcc-param-serializer-factory.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-data-serializer/default-data-row-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-data-serializer/dimension-data-row-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/factory/ubcc-param-data-row-serializer-factory.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/utils/serializer-utils.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/data-type-serializer/help-type-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/data-type-serializer/structure-type-ref-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/factory/ubcc-data-type-serializer-factory.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/constraint-serializer/integer-constraint-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/constraint-serializer/decimal-constraint-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/constraint-serializer/date-time-constraint-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/constraint-serializer/string-constraint-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/factory/ubcc-param-constraint-serializer-factory.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/serializer-context/ubcc-serializer-context.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/param-template-vo/parameter-group.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/template-serialzier/ubcc-param-template-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/dimension-serializer/dimension-item-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/dimension-serializer/dimension-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-data-serializer/data-item-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/template-assignment-serializer/dimension-data-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/template-assignment-serializer/dimension-info-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/template-assignment-serializer/template-assignment-serializer.ts","ng://@gsp-cmp/ubcc-param-vo/lib/vo/serializer/param-data-serializer/param-data-vo-serializer.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: []\n})\nexport class UbccParamVoModule { }\n","import { Parameter, StructuredType } from '@ecp-caf/common-structure';\r\nimport { ParameterGroup } from './parameter-group';\r\n\r\nexport class UbccParamTemplate{\r\n    id:string;\r\n    index:number;\r\n    code:string;\r\n    name:string;\r\n    description:string;\r\n    bizTypeId:string;\r\n    bizTypePath:string;\r\n    bizModule:string;\r\n    templateType:string;\r\n    groupEnable:boolean;\r\n    params:Array<Parameter>;\r\n    groups:Array<ParameterGroup>;\r\n    structuredTypes: Array<StructuredType>;\r\n    constructor(){\r\n       this.params=[];\r\n       this.groups=[];\r\n       this.structuredTypes=[];\r\n    }\r\n}","export class UbccParamTemplateVo{\r\n    id:string;\r\n    code:string;\r\n    name:string;\r\n    description:string;\r\n    bizTypeId:string;\r\n    bizTypePath:string;\r\n    bizModule:string;\r\n    templateType:string;\r\n    content:string;\r\n    translations:any;\r\n}","import { DimensionInfo } from './dimension-info';\r\nimport { EventInfo } from './eventInfo';\r\n\r\nexport class UbccParamTemplateAssignment{\r\n    id:string;\r\n    templateId:string;\r\n    bizTypeId:string;\r\n    index:number;\r\n    templateCode:string;\r\n    templateName:string;\r\n    templateType:string;\r\n    useDimension:boolean;\r\n    dimensionInfo:DimensionInfo;\r\n    useEvent:boolean;\r\n    eventInfo:EventInfo;\r\n}","import { DataItem } from '../param-data-vo/data-item';\r\n\r\nexport class DimensionData{\r\n    id:string;\r\n    dataItems:Array<DataItem>;\r\n}","import { Dimension } from '../param-dimension/dimension';\r\nimport { DimensionData } from './dimension-data';\r\n\r\nexport class DimensionInfo{\r\n    dataModificationAllow:boolean;\r\n    data:Array<DimensionData>;\r\n    definition:Dimension;\r\n}","export class EventInfo{\r\n    id:string;\r\n    code:string;\r\n    description:string;\r\n}","import { DimensionItem } from './dimension-item';\r\n\r\nexport class Dimension{\r\n    id:string;\r\n    code:string;\r\n    name:string;\r\n    dimensionItems:Array<DimensionItem>;\r\n}","import { DataType } from '@ecp-caf/common-structure';\r\n\r\nexport class DimensionItem{\r\n    id:string;\r\n    code:string;\r\n    name:string;\r\n    index:number;\r\n    dataType:DataType;\r\n}","import { DataRow } from './data-row';\r\n\r\nexport class UbccParamDataVo{\r\n    templateId:string;\r\n    bizTypeId:string;\r\n    data:Array<DataRow>;\r\n}","export class DataRowExtensionConst{\r\n    public static DEFAULT_DATA_ROW=\"DefaultDataRow\";\r\n    public static DIMENSION_DATA_ROW=\"DimensionDataRow\";\r\n}","import { DataRow } from './data-row';\r\nimport { DataRowExtensionConst } from '../../const/data-row-extension-const';\r\nimport { DataItem } from './data-item';\r\n\r\nexport class DimensionDataRow implements DataRow{\r\n\r\n    getKind(): string {\r\n        return DataRowExtensionConst.DIMENSION_DATA_ROW;\r\n    }\r\n    kind:string=DataRowExtensionConst.DIMENSION_DATA_ROW;\r\n    id:string;\r\n    dimensionDataItems:Array<DataItem>;\r\n    paramDataItems:Array<DataItem>;\r\n}","import { DataRow } from './data-row';\r\nimport { DataRowExtensionConst } from '../../const/data-row-extension-const';\r\nimport { DataItem } from './data-item';\r\n\r\nexport class DefaultDataRow implements DataRow{\r\n\r\n    getKind(): string {\r\n        return DataRowExtensionConst.DEFAULT_DATA_ROW;\r\n    }\r\n    kind:string=DataRowExtensionConst.DEFAULT_DATA_ROW;\r\n    id:string;\r\n    paramItems:Array<DataItem>;\r\n}","export class DataItem{\r\n    id:string;\r\n    dataCode:string;\r\n    dataName:string;\r\n    dataDesc:string;\r\n    dataValue:string;\r\n    dataValueText:string;\r\n    dataType:string;\r\n}","export class ParamExtensionConst{\r\n    public static BASE_PARAM=\"UbccBaseParam\";\r\n    public static ITEM_CATEGORY_PARAM=\"UbccItemCategoryParam\";\r\n}","import { Parameter } from '@ecp-caf/common-structure';\r\nimport { ParamExtensionConst } from '../../../const/parameter-extension-const';\r\n\r\nexport class BaseParameter extends Parameter{\r\n    id:string;\r\n    index:number;\r\n    visible:boolean;\r\n    readonly:boolean;\r\n    groupId:string;\r\n    groupCode:string;\r\n    groupName:string;\r\n    parameterTypeDesc:string;\r\n    kind:string=ParamExtensionConst.BASE_PARAM;\r\n    constructor(){\r\n        super();\r\n        this.visible=true;\r\n        this.readonly=false;\r\n    }\r\n}","import { ParamExtensionConst } from '../../../const/parameter-extension-const';\r\nimport { BaseParameter } from './base-param';\r\n\r\nexport class ItemCategoryParam extends BaseParameter{\r\n    kind:string=ParamExtensionConst.ITEM_CATEGORY_PARAM;\r\n}","export class DataTypeExtensionConst{\r\n    public static HELP_TYPE=\"HelpType\";\r\n    public static UBCC_STRUCTURE_TYPE_REF=\"UbccStructureTypeRef\";\r\n}","import { StructuredType } from '@ecp-caf/common-structure';\r\nimport { DataTypeExtensionConst } from '../../../const/data-type-extension-const';\r\n\r\nexport class HelpType extends StructuredType{\r\n    kind:string=DataTypeExtensionConst.HELP_TYPE;\r\n    helpId:string;\r\n    helpCode:string;\r\n    helpName:string;\r\n}","import { DataType } from '@ecp-caf/common-structure';\r\nimport { DataTypeExtensionConst } from '../../../const/data-type-extension-const';\r\nimport { StructureTypeRefEnum } from './structure-type-ref-enum';\r\n\r\nexport class StructureTypeRef extends DataType{\r\n    kind: string=DataTypeExtensionConst.UBCC_STRUCTURE_TYPE_REF;\r\n    refId: string;\r\n    type: StructureTypeRefEnum;\r\n    constructor(){\r\n        super();\r\n        this.kind=DataTypeExtensionConst.UBCC_STRUCTURE_TYPE_REF;\r\n    }\r\n}","export enum StructureTypeRefEnum{\r\n    ENUM,\r\n    HELP\r\n}","export class ConstraintExtenionConst{\r\n    public static UBCC_STRING_CONSTRAINT=\"UbccStringConstraint\";\r\n    public static UBCC_INTEGER_CONSTRAINT=\"UbccIntegerConstraint\";\r\n    public static UBCC_DATE_TIME_CONSTRAINT=\"UbccDateTimeConstraint\";\r\n    public static UBCC_DECIMAL_CONSTRAINT=\"UbccDecimalConstraint\";\r\n}","import { ConstraintExtenionConst } from '../../../const/constraint-extension-const';\r\nimport { IConstraint } from '@ecp-caf/common-structure';\r\n\r\nexport class UbccStringConstraint implements IConstraint{\r\n    getKind(): string {\r\n        return ConstraintExtenionConst.UBCC_STRING_CONSTRAINT;\r\n    }\r\n    maxLength:number;\r\n    minLength:number;\r\n    regexExpress:string;\r\n    kind:string=ConstraintExtenionConst.UBCC_STRING_CONSTRAINT;\r\n}","import { IConstraint } from '@ecp-caf/common-structure';\r\nimport { ConstraintExtenionConst } from '../../../const/constraint-extension-const';\r\n\r\nexport class UbccDateTimeConstraint implements IConstraint{\r\n\r\n    getKind(): string {\r\n        return ConstraintExtenionConst.UBCC_DATE_TIME_CONSTRAINT;\r\n    }\r\n    format:string;\r\n    kind:string=ConstraintExtenionConst.UBCC_DATE_TIME_CONSTRAINT;\r\n}","import { IConstraint } from '@ecp-caf/common-structure';\r\nimport { ConstraintExtenionConst } from '../../../const/constraint-extension-const';\r\n\r\nexport class UbccDecimalConstraint implements IConstraint{\r\n\r\n    getKind(): string {\r\n        return ConstraintExtenionConst.UBCC_DECIMAL_CONSTRAINT;\r\n    }\r\n    unit:string;\r\n    precision:number;\r\n    max:number;\r\n    min:number;\r\n    kind:string=ConstraintExtenionConst.UBCC_DECIMAL_CONSTRAINT;\r\n}","import { IConstraint } from '@ecp-caf/common-structure';\r\nimport { ConstraintExtenionConst } from '../../../const/constraint-extension-const';\r\n\r\nexport class UbccIntegerConstraint implements IConstraint{\r\n\r\n    getKind(): string {\r\n        return ConstraintExtenionConst.UBCC_INTEGER_CONSTRAINT;\r\n    }\r\n    unit:string;\r\n    max:number;\r\n    min:number;\r\n    kind:string=ConstraintExtenionConst.UBCC_INTEGER_CONSTRAINT;\r\n}","import { IParameterSerializer, Parameter, ISerializeContext, DefaultParameterSerializer } from '@ecp-caf/common-structure';\r\nimport { BaseParameter } from '../../extension/parameter/base-param';\r\n\r\nexport class BaseParameterSerializer implements IParameterSerializer{\r\n    serialize(param: Parameter, ctxt: ISerializeContext): Object {\r\n        let jobj=new Object();\r\n        if(!param){\r\n            return jobj;\r\n        }\r\n        let baseParam=param as BaseParameter;\r\n        let serializer=new DefaultParameterSerializer();\r\n        jobj=serializer.serialize(baseParam,ctxt);\r\n        jobj['id']=baseParam.id;\r\n        jobj['index']=baseParam.index;\r\n        jobj['visible']=baseParam.visible;\r\n        jobj['readonly']=baseParam.readonly;\r\n        jobj['groupId']=baseParam.groupId;\r\n        jobj['groupCode']=baseParam.groupCode;\r\n        jobj['groupName']=baseParam.groupName;\r\n        jobj['parameterTypeDesc']=baseParam.parameterTypeDesc;\r\n        jobj['kind']=baseParam.kind;\r\n        return jobj;\r\n    }    \r\n    \r\n    deserialize(obj: Object, ctxt: ISerializeContext):Parameter {\r\n        if(!obj){\r\n            return null;\r\n        }\r\n        let param=new BaseParameter();\r\n        let serializer=new DefaultParameterSerializer();\r\n        param=serializer.deserialize(obj,ctxt) as BaseParameter;\r\n        param.id=obj['id'];\r\n        param.index=obj['index'] as number;\r\n        param.visible=obj['visible'] as boolean;\r\n        param.readonly=obj['readonly'] as boolean;\r\n        param.groupId=obj['groupId'];\r\n        param.groupCode=obj['groupCode'];\r\n        param.groupName=obj['groupName'];\r\n        param.parameterTypeDesc=obj['parameterTypeDesc'];\r\n        return param;\r\n    }\r\n}","import { IParameterSerializer, Parameter, ISerializeContext } from '@ecp-caf/common-structure';\r\nimport { ItemCategoryParam } from '../../extension/parameter/item-category-param';\r\nimport { BaseParameterSerializer } from './base-param-serializer';\r\n\r\nexport class ItemCategoryParamSerializer implements IParameterSerializer{\r\n    \r\n    serialize(param: Parameter, ctxt: ISerializeContext): Object {\r\n        let jobj=new Object();\r\n        if(!param){\r\n            return jobj;\r\n        }\r\n        let itemCategoryParam=param as ItemCategoryParam;\r\n        let serializer=new BaseParameterSerializer();\r\n        jobj=serializer.serialize(itemCategoryParam,ctxt);\r\n        jobj['kind']=itemCategoryParam.kind;\r\n        return jobj;\r\n    }    \r\n    \r\n    deserialize(obj: Object, ctxt: ISerializeContext):Parameter {\r\n        if(!obj){\r\n            return null;\r\n        }\r\n        let param=new ItemCategoryParam();\r\n        let serializer=new BaseParameterSerializer();\r\n        param=serializer.deserialize(obj,ctxt) as ItemCategoryParam;\r\n        return param;\r\n    }\r\n}","import { IParameterSerializerFactory, DefaultParameterSerializer, IParameterSerializer, } from '@ecp-caf/common-structure';\r\nimport { ParamExtensionConst } from '../../../const/parameter-extension-const';\r\nimport { ItemCategoryParamSerializer } from '../param-serialzier/item-category-param-serializer';\r\nimport { BaseParameterSerializer } from '../param-serialzier/base-param-serializer';\r\n\r\nexport class UbccParamSerializerFactory implements IParameterSerializerFactory{\r\n\r\n    get(kind: string): IParameterSerializer {\r\n        switch(kind){\r\n            case ParamExtensionConst.BASE_PARAM:\r\n                return new BaseParameterSerializer();\r\n            case ParamExtensionConst.ITEM_CATEGORY_PARAM:\r\n                return new ItemCategoryParamSerializer();\r\n            default:\r\n                return new DefaultParameterSerializer();\r\n        }\r\n    }\r\n\r\n}","import { DefaultDataRow } from '../../param-data-vo/default-data-row';\r\nimport { DataRow } from '../../param-data-vo/data-row';\r\nimport { DataItem } from '../../param-data-vo/data-item';\r\nimport { IDataRowSerializer } from './i-data-row-serializer';\r\n\r\nexport class DefaultDataRowSerializer implements IDataRowSerializer{\r\n\r\n    serialize(dataRow:DataRow):Object{\r\n        let jobj=new Object();\r\n        if(!dataRow){\r\n            return null;\r\n        }\r\n        let defaultDataRow=dataRow as DefaultDataRow;\r\n        jobj['id']=defaultDataRow.id;\r\n        jobj['kind']=defaultDataRow.kind;\r\n        if(defaultDataRow.paramItems){\r\n            jobj['paramItems']=[];\r\n            defaultDataRow.paramItems.forEach(paramItem => {\r\n                jobj['paramItems']=paramItem;\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DataRow{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dataRow=new DefaultDataRow();\r\n        dataRow.id=jobj['id'];\r\n        if(jobj['paramItems']){\r\n            dataRow.paramItems=new Array<DataItem>();\r\n            jobj['paramItems'].forEach(paramItemJobj => {\r\n                dataRow.paramItems.push(Object.assign(new DataItem(),paramItemJobj));\r\n            });\r\n        }\r\n        return dataRow;\r\n    }\r\n}","import { IDataRowSerializer } from './i-data-row-serializer';\r\nimport { DataRow } from '../../param-data-vo/data-row';\r\nimport { DimensionDataRow } from '../../param-data-vo/dimension-data-row';\r\nimport { DataItem } from '../../param-data-vo/data-item';\r\n\r\nexport class DimensionDataRowSerializer implements IDataRowSerializer{\r\n\r\n    serialize(dataRow:DataRow):Object{\r\n        let jobj=new Object();\r\n        if(!dataRow){\r\n            return null;\r\n        }\r\n        let dimensionDataRow=dataRow as DimensionDataRow;\r\n        jobj['id']=dimensionDataRow.id;\r\n        jobj['kind']=dimensionDataRow.kind;\r\n        if(dimensionDataRow.dimensionDataItems){\r\n            jobj['dimensionDataItems']=[];\r\n            dimensionDataRow.dimensionDataItems.forEach(dimensionDataItem => {\r\n                jobj['dimensionDataItems']=dimensionDataItem;\r\n            });\r\n        }\r\n        if(dimensionDataRow.paramDataItems){\r\n            jobj['paramDataItems']=[];\r\n            dimensionDataRow.paramDataItems.forEach(paramItem => {\r\n                jobj['paramDataItems']=paramItem;\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DataRow{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dataRow=new DimensionDataRow();\r\n        dataRow.id=jobj['id'];\r\n        if(jobj['dimensionDataItems']){\r\n            dataRow.dimensionDataItems=new Array<DataItem>();\r\n            jobj['dimensionDataItems'].forEach(dimensionDataItemJobj => {\r\n                dataRow.dimensionDataItems.push(Object.assign(new DataItem(),dimensionDataItemJobj));\r\n            });\r\n        }\r\n        if(jobj['paramDataItems']){\r\n            dataRow.paramDataItems=new Array<DataItem>();\r\n            jobj['paramDataItems'].forEach(paramDataItemsJobj => {\r\n                dataRow.dimensionDataItems.push(Object.assign(new DataItem(),paramDataItemsJobj));\r\n            });\r\n        }\r\n        return dataRow;\r\n    }\r\n    \r\n}","import { IDataRowSerializer } from '../param-data-serializer/i-data-row-serializer';\r\nimport { DataRowExtensionConst } from '../../../const/data-row-extension-const';\r\nimport { DefaultDataRowSerializer } from '../param-data-serializer/default-data-row-serializer';\r\nimport { DimensionDataRowSerializer } from '../param-data-serializer/dimension-data-row-serializer';\r\n\r\nexport class UbccParamDataRowSerializerFactory{\r\n    \r\n    get(kind: string): IDataRowSerializer {\r\n        switch (kind) {\r\n            case DataRowExtensionConst.DEFAULT_DATA_ROW:\r\n                return new DefaultDataRowSerializer();\r\n            case DataRowExtensionConst.DIMENSION_DATA_ROW:\r\n                return new DimensionDataRowSerializer();\r\n            default:\r\n                throw new Error(`æªè·åå°${kind}ç±»åçDATA_ROWåºååå¨`);\r\n        }\r\n    }\r\n\r\n}","import { UbccParamSerializerContext } from '../serializer/serializer-context/ubcc-serializer-context';\r\nimport { UbccParamDataRowSerializerFactory } from '../serializer/factory/ubcc-param-data-row-serializer-factory';\r\n\r\n// @dynamic\r\nexport class SerializerUtils{\r\n\r\n    private static context:UbccParamSerializerContext;\r\n    private static dataRowFactory:UbccParamDataRowSerializerFactory;\r\n  \r\n    public static getContext():UbccParamSerializerContext{\r\n        if(!SerializerUtils.context){\r\n            SerializerUtils.context=new UbccParamSerializerContext();\r\n        }\r\n        return SerializerUtils.context;\r\n    }\r\n\r\n    public static getUbccParamDataRowSerializerFactory():UbccParamDataRowSerializerFactory{\r\n        if(!SerializerUtils.dataRowFactory){\r\n            SerializerUtils.dataRowFactory=new UbccParamDataRowSerializerFactory();\r\n        }\r\n        return SerializerUtils.dataRowFactory;\r\n    }\r\n}","import { IDataTypeSerializer, ISerializeContext, IDataType, DefaultStructuredTypeSerializer } from '@ecp-caf/common-structure';\r\nimport { HelpType } from '../../extension/data-type/help-type';\r\nimport { SerializerUtils } from '../../utils/serializer-utils';\r\n\r\nexport class HelpTypeSerialzier implements IDataTypeSerializer{\r\n    \r\n    serialize(type: IDataType, ctxt: ISerializeContext): Object {\r\n        let jobj=new Object();\r\n        if(!type){\r\n            return null;\r\n        }\r\n        let serializer=new DefaultStructuredTypeSerializer();\r\n        jobj=serializer.serialize(type,SerializerUtils.getContext());\r\n        let helpType=type as HelpType;\r\n        jobj['helpId']=helpType.helpId;\r\n        jobj['helpCode']=helpType.helpCode;\r\n        jobj['helpName']=helpType.helpName;\r\n        jobj['kind']=helpType.kind;\r\n        return jobj;\r\n    }    \r\n    \r\n    deserialize(obj: Object, ctxt:ISerializeContext): IDataType {\r\n        if(!obj){\r\n            return null;\r\n        }\r\n        let helpType=new HelpType();\r\n        let serializer=new DefaultStructuredTypeSerializer();\r\n        helpType=serializer.deserialize(obj,SerializerUtils.getContext()) as HelpType;\r\n        helpType.helpId=obj['helpId'];\r\n        helpType.helpCode=obj['helpCode'];\r\n        helpType.helpName=obj['helpName'];\r\n        return helpType;\r\n    }\r\n\r\n}","import { IDataTypeSerializer, ISerializeContext, IDataType } from '@ecp-caf/common-structure';\r\nimport { StructureTypeRef } from '../../extension/data-type/structure-type-ref';\r\nimport { StructureTypeRefEnum } from '../../extension/data-type/structure-type-ref-enum';\r\n\r\nexport class StructureTypeRefSerializer implements IDataTypeSerializer{\r\n\r\n    serialize(type: IDataType, ctxt: ISerializeContext): Object {\r\n        if(!type){\r\n            return null;\r\n        }\r\n        let jobj=new Object();\r\n        let refType=type as StructureTypeRef;\r\n        jobj['kind']=refType.kind;\r\n        jobj['refId']=refType.refId;\r\n        jobj['type']=refType.type;\r\n        return jobj;\r\n    }    \r\n    \r\n    deserialize(obj: Object, ctxt: ISerializeContext): IDataType {\r\n        if(!obj){\r\n            return null;\r\n        }\r\n        let refType=new StructureTypeRef();\r\n        refType.refId=obj['refId'];\r\n        refType.type=obj['type'] as StructureTypeRefEnum;\r\n        return refType;\r\n    }\r\n\r\n}","import { IDataTypeSerializerFactory, IDataTypeSerializer, DefaultDataTypeSerializerFactory } from '@ecp-caf/common-structure';\r\nimport { DataTypeExtensionConst } from '../../../const/data-type-extension-const';\r\nimport { HelpTypeSerialzier } from '../data-type-serializer/help-type-serializer';\r\nimport { StructureTypeRefSerializer } from '../data-type-serializer/structure-type-ref-serializer';\r\n\r\nexport class UbccDataTypeSerializerFactory implements IDataTypeSerializerFactory{\r\n    \r\n    get(kind: string): IDataTypeSerializer {\r\n        switch (kind) {\r\n            case DataTypeExtensionConst.HELP_TYPE:\r\n                return new HelpTypeSerialzier();\r\n            case DataTypeExtensionConst.UBCC_STRUCTURE_TYPE_REF:\r\n                return new StructureTypeRefSerializer();\r\n            default:\r\n                return new DefaultDataTypeSerializerFactory().get(kind);\r\n        }\r\n    }\r\n\r\n}","import { UbccIntegerConstraint } from '../../extension/constraint/ubcc-integer-constraint';\r\nimport { IConstraint, IConstraintSerializer, ISerializeContext } from '@ecp-caf/common-structure';\r\n\r\nexport class UbccIntegerConstraintSerializer implements IConstraintSerializer{\r\n\r\n    serialize(constraint:IConstraint, ctxt: ISerializeContext):Object{\r\n        let jobj=new Object();\r\n        if(!constraint){\r\n            return jobj;\r\n        }\r\n        let integerConstraint=constraint as UbccIntegerConstraint;\r\n        jobj['kind']=integerConstraint.kind;\r\n        jobj['max']=integerConstraint.max;\r\n        jobj['min']=integerConstraint.min;\r\n        jobj['unit']=integerConstraint.unit;\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object, ctxt: ISerializeContext):IConstraint{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let integerConstraint=new UbccIntegerConstraint();\r\n        integerConstraint.max=jobj['max'] as number;\r\n        integerConstraint.min=jobj['min'] as number;\r\n        integerConstraint.unit=jobj['unit'];\r\n        return integerConstraint;\r\n    }\r\n\r\n}","import { UbccDecimalConstraint } from '../../extension/constraint/ubcc-decimal-constraint';\r\nimport { IConstraint, IConstraintSerializer, ISerializeContext } from '@ecp-caf/common-structure';\r\n\r\nexport class UbccDecimalConstraintSerializer implements IConstraintSerializer{\r\n    \r\n    serialize(constraint:IConstraint,ctxt: ISerializeContext):Object{\r\n        let jobj=new Object();\r\n        if(!constraint){\r\n            return jobj;\r\n        }\r\n        let decimalConstraint=constraint as UbccDecimalConstraint;\r\n        jobj['kind']=decimalConstraint.kind;\r\n        jobj['max']=decimalConstraint.max;\r\n        jobj['min']=decimalConstraint.min;\r\n        jobj['precision']=decimalConstraint.precision;\r\n        jobj['unit']=decimalConstraint.unit;\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object,ctxt: ISerializeContext):IConstraint{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let decimalConstraint=new UbccDecimalConstraint();\r\n        decimalConstraint.max=jobj['max'] as number;\r\n        decimalConstraint.min=jobj['min'] as number;\r\n        decimalConstraint.precision=jobj['precision'] as number;\r\n        decimalConstraint.unit=jobj['unit'];\r\n        return decimalConstraint;\r\n    }\r\n}","import { UbccDateTimeConstraint } from '../../extension/constraint/ubcc-date-time-constraint';\r\nimport { IConstraint, IConstraintSerializer, ISerializeContext } from '@ecp-caf/common-structure';\r\n\r\nexport class UbccDateTimeConstraintSerializer implements IConstraintSerializer{\r\n\r\n    serialize(constraint:IConstraint,ctxt: ISerializeContext):Object{\r\n        let jobj=new Object();\r\n        if(!constraint){\r\n            return jobj;\r\n        }\r\n        let dataTimeConstraint=constraint as UbccDateTimeConstraint;\r\n        jobj['kind']=dataTimeConstraint.kind;\r\n        jobj['format']=dataTimeConstraint.format;\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object,ctxt: ISerializeContext):IConstraint{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dataTimeConstraint=new UbccDateTimeConstraint();\r\n        dataTimeConstraint.format=jobj['format'];\r\n        return dataTimeConstraint;\r\n    }\r\n\r\n}","import { IConstraint, IConstraintSerializer, ISerializeContext } from '@ecp-caf/common-structure';\r\nimport { UbccStringConstraint } from '../../extension/constraint/ubcc-string-constaint';\r\n\r\nexport class UbccStringConstraintSerializer implements IConstraintSerializer{\r\n\r\n    serialize(constraint:IConstraint,ctxt: ISerializeContext):Object{\r\n        let jobj=new Object();\r\n        if(!constraint){\r\n            return jobj;\r\n        }\r\n        let stringConstraint=constraint as UbccStringConstraint;\r\n        jobj['kind']=stringConstraint.kind;\r\n        jobj['maxLength']=stringConstraint.maxLength;\r\n        jobj['minLength']=stringConstraint.minLength;\r\n        jobj['regexExpress']=stringConstraint.regexExpress;\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object,ctxt: ISerializeContext):IConstraint{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let constaint=new UbccStringConstraint();\r\n        constaint.maxLength=jobj['maxLength'] as number;\r\n        constaint.minLength=jobj['minLength'] as number;\r\n        constaint.regexExpress=jobj['regexExpress'];\r\n        return constaint;\r\n    }\r\n\r\n}","import { IConstraintSerializer, DefaultConstraintSerializer, IConstraintSerializerFactory } from '@ecp-caf/common-structure';\r\nimport { ConstraintExtenionConst } from '../../../const/constraint-extension-const';\r\nimport { UbccIntegerConstraintSerializer } from '../constraint-serializer/integer-constraint-serializer';\r\nimport { UbccDecimalConstraintSerializer } from '../constraint-serializer/decimal-constraint-serializer';\r\nimport { UbccDateTimeConstraintSerializer } from '../constraint-serializer/date-time-constraint-serializer';\r\nimport { UbccStringConstraintSerializer } from '../constraint-serializer/string-constraint-serializer';\r\n\r\nexport class UbccParamConstraintSerializerFactory implements IConstraintSerializerFactory {\r\n\r\n    get(kind: string): IConstraintSerializer {\r\n        switch (kind) {\r\n            case ConstraintExtenionConst.UBCC_INTEGER_CONSTRAINT:\r\n                return new UbccIntegerConstraintSerializer();\r\n            case ConstraintExtenionConst.UBCC_DECIMAL_CONSTRAINT:\r\n                return new UbccDecimalConstraintSerializer();\r\n            case ConstraintExtenionConst.UBCC_STRING_CONSTRAINT:\r\n                return new UbccStringConstraintSerializer();\r\n            case ConstraintExtenionConst.UBCC_DATE_TIME_CONSTRAINT:\r\n                return new UbccDateTimeConstraintSerializer();\r\n            default:\r\n                return new DefaultConstraintSerializer();\r\n        }\r\n    }\r\n}","import { ISerializeContext, IParameterSerializerFactory, IPropertySerializerFactory, IDataTypeSerializerFactory, IOperationSerializerFactory, DefaultOperationSerializerFactory, DefaultPropertySerializerFactory, IConstraintSerializerFactory } from '@ecp-caf/common-structure';\r\nimport { UbccParamSerializerFactory } from '../factory/ubcc-param-serializer-factory';\r\nimport { UbccDataTypeSerializerFactory } from '../factory/ubcc-data-type-serializer-factory';\r\nimport { UbccParamConstraintSerializerFactory } from '../factory/ubcc-param-constraint-serializer-factory';\r\n\r\nexport class UbccParamSerializerContext implements ISerializeContext{\r\n\r\n    private dataTypeFactory: IDataTypeSerializerFactory;\r\n    private parameterFactory: IParameterSerializerFactory;\r\n    private operationFactory: IOperationSerializerFactory;\r\n    private propertyFactory: IPropertySerializerFactory;\r\n    private constraintFactory:IConstraintSerializerFactory;\r\n   \r\n    getDataTypeSerializerFactory(): IDataTypeSerializerFactory {\r\n        if (!this.dataTypeFactory) {\r\n            this.dataTypeFactory = new UbccDataTypeSerializerFactory();\r\n        }\r\n        return this.dataTypeFactory;\r\n    }\r\n\r\n\r\n    getParameterSerializerFactory(): IParameterSerializerFactory {\r\n        if (!this.parameterFactory) {\r\n            this.parameterFactory = new UbccParamSerializerFactory();\r\n        }\r\n        return this.parameterFactory;\r\n    }\r\n\r\n    getOperationSerializerFactory(): IOperationSerializerFactory {\r\n        if (!this.operationFactory) {\r\n            this.operationFactory = new DefaultOperationSerializerFactory();\r\n        }\r\n        return this.operationFactory;\r\n    }\r\n\r\n    getPropertySerializerFactory(): IPropertySerializerFactory {\r\n        if (!this.propertyFactory) {\r\n            this.propertyFactory = new DefaultPropertySerializerFactory();\r\n        }\r\n        return this.propertyFactory;\r\n    }\r\n\r\n    getConstraintSerializerFactory(): IConstraintSerializerFactory {\r\n        if(!this.constraintFactory){\r\n            this.constraintFactory=new UbccParamConstraintSerializerFactory();\r\n        }\r\n        return this.constraintFactory;\r\n    }\r\n  \r\n}","export class ParameterGroup{\r\n    groupIndex:number;\r\n    groupId:string;\r\n    groupCode:string;\r\n    groupName:string;\r\n}","import { UbccParamTemplate } from '../../param-template-vo/ubcc-param-template';\r\nimport { UbccParamSerializerContext } from '../serializer-context/ubcc-serializer-context';\r\nimport { Parameter, StructuredType } from '@ecp-caf/common-structure';\r\nimport { ParameterGroup } from '../../param-template-vo/parameter-group';\r\n\r\nexport class UbccParamTemplateSerializer{\r\n\r\n    serialize(template: UbccParamTemplate):Object{\r\n        let jobj=new Object();\r\n        if(!template){\r\n            return null;\r\n        }\r\n        jobj['id'] =template.id;\r\n        jobj['index'] =template.index;\r\n        jobj['code'] =template.code;\r\n        jobj['name'] =template.name;\r\n        jobj['description'] =template.description;\r\n        jobj['bizTypeId'] =template.bizTypeId;\r\n        jobj['bizTypePath'] =template.bizTypePath;\r\n        jobj['bizModule'] =template.bizModule;\r\n        jobj['templateType'] =template.templateType;\r\n        jobj['groupEnable'] =template.groupEnable;\r\n        let context=new UbccParamSerializerContext();\r\n        if(template.params){\r\n            jobj['params']=new Array<Object>();\r\n            template.params.forEach(param => {\r\n                let paramJobj=new Object();\r\n                let serializer=context.getParameterSerializerFactory().get(param.kind);\r\n                paramJobj=serializer.serialize(param,context);\r\n                jobj['params'].push(paramJobj);\r\n            });\r\n        }\r\n        if(template.structuredTypes){\r\n            jobj['structuredTypes']=new Array<Object>();\r\n            template.structuredTypes.forEach(structure => {\r\n                let structureJobj=new Object();\r\n                let serializer=context.getDataTypeSerializerFactory().get(structure.kind);\r\n                structureJobj=serializer.serialize(structure,context);\r\n                jobj['structuredTypes'].push(structureJobj);\r\n            });\r\n        }\r\n        if(template.groups){\r\n            jobj['groups']=new Array<Object>();\r\n            template.groups.forEach(group => {\r\n                jobj['groups'].push(group);\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserializer(jobj:Object):UbccParamTemplate{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let template=new UbccParamTemplate();\r\n        template.id=jobj['id'];\r\n        template.index=jobj['index'] as number;\r\n        template.code=jobj['code'];\r\n        template.name=jobj['name'];\r\n        template.description=jobj['description'];\r\n        template.bizTypeId=jobj['bizTypeId'];\r\n        template.bizTypePath=jobj['bizTypePath'];\r\n        template.bizModule=jobj['bizModule'];\r\n        template.templateType=jobj['templateType'];\r\n        template.groupEnable=jobj['groupEnable'];\r\n        let context=new UbccParamSerializerContext();\r\n        if(jobj['params']){\r\n            template.params=new Array<Parameter>();\r\n            jobj['params'].forEach(paramJobj => {\r\n                let serializer=context.getParameterSerializerFactory().get(paramJobj['kind']);\r\n                let param= serializer.deserialize(paramJobj,context);\r\n                template.params.push(param);\r\n            });\r\n        }\r\n        if(jobj['structuredTypes']){\r\n            template.structuredTypes=new Array<StructuredType>();\r\n            jobj['structuredTypes'].forEach(structurJobj => {\r\n                let serializer=context.getDataTypeSerializerFactory().get(structurJobj['kind']);\r\n                let structure= serializer.deserialize(structurJobj,context) as StructuredType;\r\n                template.structuredTypes.push(structure);\r\n            });\r\n        }\r\n        if(jobj['groups']){\r\n            template.groups=new Array<ParameterGroup>();\r\n            jobj['groups'].forEach(groupJobj => {\r\n                template.groups.push(Object.assign(new ParameterGroup(),groupJobj));\r\n            });\r\n        }\r\n        return template;\r\n    }\r\n}","import { DimensionItem } from '../../param-dimension/dimension-item';\r\nimport { DataType } from '@ecp-caf/common-structure';\r\nimport { SerializerUtils } from '../../utils/serializer-utils';\r\n\r\nexport class DimensionItemSerializer{\r\n\r\n    serialize(dimensionItem:DimensionItem):Object{\r\n        let jobj=new Object();\r\n        if(!dimensionItem){\r\n            return null;\r\n        }\r\n        jobj['id']=dimensionItem.id;\r\n        jobj['index']=dimensionItem.index;\r\n        jobj['code']=dimensionItem.code;\r\n        jobj['name']=dimensionItem.name;\r\n        if(dimensionItem.dataType){\r\n            let context=SerializerUtils.getContext();\r\n            let serializer=context.getDataTypeSerializerFactory().get(dimensionItem.dataType.kind);\r\n            jobj['dataType']=serializer.serialize(dimensionItem.dataType,context);\r\n            //dataTypeä½ä¸ºå­ç¬¦ä¸²å­\r\n            jobj['dataType']=JSON.stringify(jobj['dataType']);\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DimensionItem{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dimensionItem=new DimensionItem();\r\n        dimensionItem.id=jobj['id'];\r\n        dimensionItem.index=jobj['index'] as number;\r\n        dimensionItem.code=jobj['code'];\r\n        dimensionItem.name=jobj['name'];\r\n        if(jobj['dataType']){\r\n            //dataTypeä½ä¸ºå­ç¬¦ä¸²å­\r\n            jobj['dataType']=JSON.parse(jobj['dataType']);\r\n\r\n            let context=SerializerUtils.getContext();\r\n            let kind=jobj['dataType']['kind'];\r\n            let serializer=context.getDataTypeSerializerFactory().get(kind);\r\n            dimensionItem.dataType=serializer.deserialize(jobj['dataType'],context) as DataType;\r\n        }\r\n        return dimensionItem;\r\n    }\r\n}","import { Dimension } from '../../param-dimension/dimension';\r\nimport { DimensionItemSerializer } from './dimension-item-serializer';\r\nimport { DimensionItem } from '../../param-dimension/dimension-item';\r\n\r\nexport class DimensionSerializer{\r\n    \r\n    serialize(dimension:Dimension):Object{\r\n        let jobj=new Object();\r\n        if(!dimension){\r\n            return null;\r\n        }\r\n        jobj['id']=dimension.id;\r\n        jobj['code']=dimension.code;\r\n        jobj['name']=dimension.name;\r\n        if(dimension.dimensionItems){\r\n            jobj['dimensionItems']=[];\r\n            let serializer=new DimensionItemSerializer();\r\n            dimension.dimensionItems.forEach(dimensionItem => {\r\n                jobj['dimensionItems'].push(serializer.serialize(dimensionItem));\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):Dimension{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dimension=new Dimension();\r\n        dimension.id= jobj['id'];\r\n        dimension.code= jobj['code'];\r\n        dimension.name= jobj['name'];\r\n        if(jobj['dimensionItems']){\r\n            dimension.dimensionItems=new Array<DimensionItem>();\r\n            let serializer=new DimensionItemSerializer();\r\n            jobj['dimensionItems'].forEach(dimensionItemJobj => {\r\n                dimension.dimensionItems.push(serializer.deserialize(dimensionItemJobj));\r\n            });\r\n        }\r\n        return dimension;\r\n    }\r\n}","import { DataItem } from '../../param-data-vo/data-item';\r\n\r\nexport class DataItemSerializer{\r\n\r\n    serialize(dataItem:DataItem):Object{\r\n        if(!dataItem){\r\n            return null;\r\n        }\r\n        let jobj=new Object();\r\n        jobj['id']=dataItem.id;\r\n        jobj['dataCode']=dataItem.dataCode;\r\n        jobj['dataName']=dataItem.dataName;\r\n        jobj['dataDesc']=dataItem.dataDesc;\r\n        jobj['dataValue']=dataItem.dataValue;\r\n        jobj['dataType']=dataItem.dataType;\r\n\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DataItem{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dataItem=new DataItem();\r\n        dataItem.id=jobj['id'];\r\n        dataItem.dataCode=jobj['dataCode'];\r\n        dataItem.dataName=jobj['dataName'];\r\n        dataItem.dataDesc=jobj['dataDesc'];\r\n        dataItem.dataValue=jobj['dataValue'];\r\n        dataItem.dataType=jobj['dataType'];\r\n        return dataItem;\r\n    }\r\n}","import { DimensionData } from '../../param-template-assignment-vo/dimension-data';\r\nimport { DataItemSerializer } from '../param-data-serializer/data-item-serializer';\r\n\r\nexport class DimensionDataSerializer{\r\n    serialize(dimensionData:DimensionData):Object{\r\n        if(!dimensionData){\r\n            return null;\r\n        }\r\n        let jobj=new Object();\r\n        jobj['id']=dimensionData.id;\r\n        if(dimensionData.dataItems){\r\n            jobj['dataItems']=dimensionData.dataItems.map(item=>new DataItemSerializer().serialize(item));\r\n        }\r\n\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DimensionData{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dimensionInfo=new DimensionData();\r\n        dimensionInfo.id=jobj['id'];\r\n        if(jobj['dataItems']){\r\n            dimensionInfo.dataItems=jobj['dataItems'].map(item=>new DataItemSerializer().deserialize(item));\r\n        }\r\n\r\n        return dimensionInfo;\r\n    }\r\n}","import { DimensionInfo } from '../../param-template-assignment-vo/dimension-info';\r\nimport { DimensionSerializer } from '../dimension-serializer/dimension-serializer';\r\nimport { DimensionDataSerializer } from './dimension-data-serializer';\r\n\r\nexport class DimensionInfoSerializer{\r\n    serialize(dimensionInfo:DimensionInfo):Object{\r\n        if(!dimensionInfo){\r\n            return null;\r\n        }\r\n        let jobj=new Object();\r\n        jobj['dataModificationAllow']=dimensionInfo.dataModificationAllow;\r\n\r\n        if(dimensionInfo.data){\r\n            jobj['data']=dimensionInfo.data.map(dimensionData=>new DimensionDataSerializer().serialize(dimensionData));\r\n        }\r\n\r\n        if(dimensionInfo.definition){\r\n            let serializer=new DimensionSerializer();\r\n            jobj['definition']=serializer.serialize(dimensionInfo.definition);\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):DimensionInfo{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let dimensionInfo=new DimensionInfo();\r\n        dimensionInfo.dataModificationAllow=jobj['dataModificationAllow'] as boolean;\r\n\r\n        if(jobj['data']){\r\n            dimensionInfo.data=jobj['data'].map(dimensionData=>new DimensionDataSerializer().deserialize(dimensionData));\r\n        }\r\n\r\n        if(jobj['definition']){\r\n            let serializer=new DimensionSerializer();\r\n            dimensionInfo.definition=serializer.deserialize(jobj['definition']);\r\n        }\r\n        return dimensionInfo;\r\n    }\r\n}","import { UbccParamTemplateAssignment } from '../../param-template-assignment-vo/ubcc-param-template-assignment';\r\nimport { DimensionInfoSerializer } from './dimension-info-serializer';\r\nimport { EventInfo } from '../../param-template-assignment-vo/eventInfo';\r\n\r\nexport class UbccParamTemplateAssignmentSerializer{\r\n\r\n    serialize(templateAssignment:UbccParamTemplateAssignment):Object{\r\n        if(!templateAssignment){\r\n            return null;\r\n        }\r\n        let jobj=new Object();\r\n        jobj['id']=templateAssignment.id;\r\n        jobj['templateId']=templateAssignment.templateId;\r\n        jobj['index']=templateAssignment.index;\r\n        jobj['templateCode']=templateAssignment.templateCode;\r\n        jobj['templateName']=templateAssignment.templateName;\r\n        jobj['templateType']=templateAssignment.templateType;\r\n        jobj['bizTypeId']=templateAssignment.bizTypeId;\r\n        jobj['useEvent']=templateAssignment.useEvent;\r\n        jobj['eventInfo']=templateAssignment.eventInfo;\r\n        jobj['useDimension']=templateAssignment.useDimension;\r\n        if(templateAssignment.dimensionInfo){\r\n            let serializer=new DimensionInfoSerializer();\r\n            jobj['dimensionInfo']=serializer.serialize(templateAssignment.dimensionInfo);\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):UbccParamTemplateAssignment{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let templateAssignment=new UbccParamTemplateAssignment();\r\n        templateAssignment.id=jobj['id'];\r\n        templateAssignment.templateId=jobj['templateId'];\r\n        templateAssignment.index=jobj['index'] as number;\r\n        templateAssignment.templateCode=jobj['templateCode'];\r\n        templateAssignment.templateName=jobj['templateName'];\r\n        templateAssignment.templateType=jobj['templateType'];\r\n        templateAssignment.bizTypeId=jobj['bizTypeId'];\r\n        templateAssignment.useEvent=jobj['useEvent'] as boolean;\r\n        templateAssignment.eventInfo=Object.assign(new EventInfo(),jobj['eventInfo']);\r\n        templateAssignment.useDimension=jobj['useDimension'] as boolean;\r\n        if(jobj['dimensionInfo']){\r\n            let serializer=new DimensionInfoSerializer();\r\n            templateAssignment.dimensionInfo=serializer.deserialize(jobj['dimensionInfo']);\r\n        }\r\n        return templateAssignment;\r\n    }\r\n}","import { UbccParamDataVo } from '../../param-data-vo/ubcc-param-data-vo';\r\nimport { DataRow } from '../../param-data-vo/data-row';\r\nimport { SerializerUtils } from '../../utils/serializer-utils';\r\n\r\nexport  class ParamDataVoSerializer{\r\n\r\n    serialize(paramData:UbccParamDataVo):Object{\r\n        let jobj=new Object();\r\n        if(!paramData){\r\n            return jobj;\r\n        }\r\n        jobj['templateId']=paramData.templateId;\r\n        jobj['bizTypeId']=paramData.bizTypeId;\r\n        if(paramData.data){\r\n            jobj['data']=[];\r\n            paramData.data.forEach(dataRow => {\r\n                let serializer=SerializerUtils.getUbccParamDataRowSerializerFactory().get(dataRow.getKind());\r\n                jobj['data'].push(serializer.serialize(dataRow));\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    deserialize(jobj:Object):UbccParamDataVo{\r\n        if(!jobj){\r\n            return null;\r\n        }\r\n        let paramData=new UbccParamDataVo();\r\n        paramData.templateId=jobj['templateId'];\r\n        paramData.bizTypeId=jobj['bizTypeId'];\r\n        if(jobj['data']){\r\n            paramData.data=new Array<DataRow>();\r\n            jobj['data'].forEach(dataRowJobj => {\r\n                let serializer=SerializerUtils.getUbccParamDataRowSerializerFactory().get(dataRowJobj['kind']);\r\n                paramData.data.push(serializer.deserialize(dataRowJobj));\r\n            });\r\n        }\r\n        return paramData;\r\n    }\r\n}"],"names":["tslib_1.__extends"],"mappings":"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"}
