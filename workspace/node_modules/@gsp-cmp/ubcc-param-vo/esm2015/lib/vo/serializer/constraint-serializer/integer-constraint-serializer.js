/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/constraint-serializer/integer-constraint-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { UbccIntegerConstraint } from '../../extension/constraint/ubcc-integer-constraint';
export class UbccIntegerConstraintSerializer {
    /**
     * @param {?} constraint
     * @param {?} ctxt
     * @return {?}
     */
    serialize(constraint, ctxt) {
        /** @type {?} */
        let jobj = new Object();
        if (!constraint) {
            return jobj;
        }
        /** @type {?} */
        let integerConstraint = (/** @type {?} */ (constraint));
        jobj['kind'] = integerConstraint.kind;
        jobj['max'] = integerConstraint.max;
        jobj['min'] = integerConstraint.min;
        jobj['unit'] = integerConstraint.unit;
        return jobj;
    }
    /**
     * @param {?} jobj
     * @param {?} ctxt
     * @return {?}
     */
    deserialize(jobj, ctxt) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        let integerConstraint = new UbccIntegerConstraint();
        integerConstraint.max = (/** @type {?} */ (jobj['max']));
        integerConstraint.min = (/** @type {?} */ (jobj['min']));
        integerConstraint.unit = jobj['unit'];
        return integerConstraint;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWdlci1jb25zdHJhaW50LXNlcmlhbGl6ZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWNtcC91YmNjLXBhcmFtLXZvLyIsInNvdXJjZXMiOlsibGliL3ZvL3NlcmlhbGl6ZXIvY29uc3RyYWludC1zZXJpYWxpemVyL2ludGVnZXItY29uc3RyYWludC1zZXJpYWxpemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sb0RBQW9ELENBQUM7QUFHM0YsTUFBTSxPQUFPLCtCQUErQjs7Ozs7O0lBRXhDLFNBQVMsQ0FBQyxVQUFzQixFQUFFLElBQXVCOztZQUNqRCxJQUFJLEdBQUMsSUFBSSxNQUFNLEVBQUU7UUFDckIsSUFBRyxDQUFDLFVBQVUsRUFBQztZQUNYLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7O1lBQ0csaUJBQWlCLEdBQUMsbUJBQUEsVUFBVSxFQUF5QjtRQUN6RCxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBQyxpQkFBaUIsQ0FBQyxHQUFHLENBQUM7UUFDbEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQztRQUNsQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDO1FBQ3BDLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7Ozs7OztJQUVELFdBQVcsQ0FBQyxJQUFXLEVBQUUsSUFBdUI7UUFDNUMsSUFBRyxDQUFDLElBQUksRUFBQztZQUNMLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7O1lBQ0csaUJBQWlCLEdBQUMsSUFBSSxxQkFBcUIsRUFBRTtRQUNqRCxpQkFBaUIsQ0FBQyxHQUFHLEdBQUMsbUJBQUEsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFVLENBQUM7UUFDNUMsaUJBQWlCLENBQUMsR0FBRyxHQUFDLG1CQUFBLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBVSxDQUFDO1FBQzVDLGlCQUFpQixDQUFDLElBQUksR0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDcEMsT0FBTyxpQkFBaUIsQ0FBQztJQUM3QixDQUFDO0NBRUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVYmNjSW50ZWdlckNvbnN0cmFpbnQgfSBmcm9tICcuLi8uLi9leHRlbnNpb24vY29uc3RyYWludC91YmNjLWludGVnZXItY29uc3RyYWludCc7XHJcbmltcG9ydCB7IElDb25zdHJhaW50LCBJQ29uc3RyYWludFNlcmlhbGl6ZXIsIElTZXJpYWxpemVDb250ZXh0IH0gZnJvbSAnQGVjcC1jYWYvY29tbW9uLXN0cnVjdHVyZSc7XHJcblxyXG5leHBvcnQgY2xhc3MgVWJjY0ludGVnZXJDb25zdHJhaW50U2VyaWFsaXplciBpbXBsZW1lbnRzIElDb25zdHJhaW50U2VyaWFsaXplcntcclxuXHJcbiAgICBzZXJpYWxpemUoY29uc3RyYWludDpJQ29uc3RyYWludCwgY3R4dDogSVNlcmlhbGl6ZUNvbnRleHQpOk9iamVjdHtcclxuICAgICAgICBsZXQgam9iaj1uZXcgT2JqZWN0KCk7XHJcbiAgICAgICAgaWYoIWNvbnN0cmFpbnQpe1xyXG4gICAgICAgICAgICByZXR1cm4gam9iajtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGludGVnZXJDb25zdHJhaW50PWNvbnN0cmFpbnQgYXMgVWJjY0ludGVnZXJDb25zdHJhaW50O1xyXG4gICAgICAgIGpvYmpbJ2tpbmQnXT1pbnRlZ2VyQ29uc3RyYWludC5raW5kO1xyXG4gICAgICAgIGpvYmpbJ21heCddPWludGVnZXJDb25zdHJhaW50Lm1heDtcclxuICAgICAgICBqb2JqWydtaW4nXT1pbnRlZ2VyQ29uc3RyYWludC5taW47XHJcbiAgICAgICAgam9ialsndW5pdCddPWludGVnZXJDb25zdHJhaW50LnVuaXQ7XHJcbiAgICAgICAgcmV0dXJuIGpvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgZGVzZXJpYWxpemUoam9iajpPYmplY3QsIGN0eHQ6IElTZXJpYWxpemVDb250ZXh0KTpJQ29uc3RyYWludHtcclxuICAgICAgICBpZigham9iail7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgaW50ZWdlckNvbnN0cmFpbnQ9bmV3IFViY2NJbnRlZ2VyQ29uc3RyYWludCgpO1xyXG4gICAgICAgIGludGVnZXJDb25zdHJhaW50Lm1heD1qb2JqWydtYXgnXSBhcyBudW1iZXI7XHJcbiAgICAgICAgaW50ZWdlckNvbnN0cmFpbnQubWluPWpvYmpbJ21pbiddIGFzIG51bWJlcjtcclxuICAgICAgICBpbnRlZ2VyQ29uc3RyYWludC51bml0PWpvYmpbJ3VuaXQnXTtcclxuICAgICAgICByZXR1cm4gaW50ZWdlckNvbnN0cmFpbnQ7XHJcbiAgICB9XHJcblxyXG59Il19