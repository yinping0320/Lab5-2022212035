/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/data-type-serializer/structure-type-ref-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { StructureTypeRef } from '../../extension/data-type/structure-type-ref';
export class StructureTypeRefSerializer {
    /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    serialize(type, ctxt) {
        if (!type) {
            return null;
        }
        /** @type {?} */
        let jobj = new Object();
        /** @type {?} */
        let refType = (/** @type {?} */ (type));
        jobj['kind'] = refType.kind;
        jobj['refId'] = refType.refId;
        jobj['type'] = refType.type;
        return jobj;
    }
    /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    deserialize(obj, ctxt) {
        if (!obj) {
            return null;
        }
        /** @type {?} */
        let refType = new StructureTypeRef();
        refType.refId = obj['refId'];
        refType.type = (/** @type {?} */ (obj['type']));
        return refType;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RydWN0dXJlLXR5cGUtcmVmLXNlcmlhbGl6ZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWNtcC91YmNjLXBhcmFtLXZvLyIsInNvdXJjZXMiOlsibGliL3ZvL3NlcmlhbGl6ZXIvZGF0YS10eXBlLXNlcmlhbGl6ZXIvc3RydWN0dXJlLXR5cGUtcmVmLXNlcmlhbGl6ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUdoRixNQUFNLE9BQU8sMEJBQTBCOzs7Ozs7SUFFbkMsU0FBUyxDQUFDLElBQWUsRUFBRSxJQUF1QjtRQUM5QyxJQUFHLENBQUMsSUFBSSxFQUFDO1lBQ0wsT0FBTyxJQUFJLENBQUM7U0FDZjs7WUFDRyxJQUFJLEdBQUMsSUFBSSxNQUFNLEVBQUU7O1lBQ2pCLE9BQU8sR0FBQyxtQkFBQSxJQUFJLEVBQW9CO1FBQ3BDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQzFCLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQzVCLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQzFCLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7Ozs7OztJQUVELFdBQVcsQ0FBQyxHQUFXLEVBQUUsSUFBdUI7UUFDNUMsSUFBRyxDQUFDLEdBQUcsRUFBQztZQUNKLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7O1lBQ0csT0FBTyxHQUFDLElBQUksZ0JBQWdCLEVBQUU7UUFDbEMsT0FBTyxDQUFDLEtBQUssR0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDM0IsT0FBTyxDQUFDLElBQUksR0FBQyxtQkFBQSxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQXdCLENBQUM7UUFDakQsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQztDQUVKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSURhdGFUeXBlU2VyaWFsaXplciwgSVNlcmlhbGl6ZUNvbnRleHQsIElEYXRhVHlwZSB9IGZyb20gJ0BlY3AtY2FmL2NvbW1vbi1zdHJ1Y3R1cmUnO1xyXG5pbXBvcnQgeyBTdHJ1Y3R1cmVUeXBlUmVmIH0gZnJvbSAnLi4vLi4vZXh0ZW5zaW9uL2RhdGEtdHlwZS9zdHJ1Y3R1cmUtdHlwZS1yZWYnO1xyXG5pbXBvcnQgeyBTdHJ1Y3R1cmVUeXBlUmVmRW51bSB9IGZyb20gJy4uLy4uL2V4dGVuc2lvbi9kYXRhLXR5cGUvc3RydWN0dXJlLXR5cGUtcmVmLWVudW0nO1xyXG5cclxuZXhwb3J0IGNsYXNzIFN0cnVjdHVyZVR5cGVSZWZTZXJpYWxpemVyIGltcGxlbWVudHMgSURhdGFUeXBlU2VyaWFsaXplcntcclxuXHJcbiAgICBzZXJpYWxpemUodHlwZTogSURhdGFUeXBlLCBjdHh0OiBJU2VyaWFsaXplQ29udGV4dCk6IE9iamVjdCB7XHJcbiAgICAgICAgaWYoIXR5cGUpe1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGpvYmo9bmV3IE9iamVjdCgpO1xyXG4gICAgICAgIGxldCByZWZUeXBlPXR5cGUgYXMgU3RydWN0dXJlVHlwZVJlZjtcclxuICAgICAgICBqb2JqWydraW5kJ109cmVmVHlwZS5raW5kO1xyXG4gICAgICAgIGpvYmpbJ3JlZklkJ109cmVmVHlwZS5yZWZJZDtcclxuICAgICAgICBqb2JqWyd0eXBlJ109cmVmVHlwZS50eXBlO1xyXG4gICAgICAgIHJldHVybiBqb2JqO1xyXG4gICAgfSAgICBcclxuICAgIFxyXG4gICAgZGVzZXJpYWxpemUob2JqOiBPYmplY3QsIGN0eHQ6IElTZXJpYWxpemVDb250ZXh0KTogSURhdGFUeXBlIHtcclxuICAgICAgICBpZighb2JqKXtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCByZWZUeXBlPW5ldyBTdHJ1Y3R1cmVUeXBlUmVmKCk7XHJcbiAgICAgICAgcmVmVHlwZS5yZWZJZD1vYmpbJ3JlZklkJ107XHJcbiAgICAgICAgcmVmVHlwZS50eXBlPW9ialsndHlwZSddIGFzIFN0cnVjdHVyZVR5cGVSZWZFbnVtO1xyXG4gICAgICAgIHJldHVybiByZWZUeXBlO1xyXG4gICAgfVxyXG5cclxufSJdfQ==