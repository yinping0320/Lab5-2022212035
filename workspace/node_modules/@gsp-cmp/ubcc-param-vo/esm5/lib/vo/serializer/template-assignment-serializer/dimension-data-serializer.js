/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/template-assignment-serializer/dimension-data-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DimensionData } from '../../param-template-assignment-vo/dimension-data';
import { DataItemSerializer } from '../param-data-serializer/data-item-serializer';
var DimensionDataSerializer = /** @class */ (function () {
    function DimensionDataSerializer() {
    }
    /**
     * @param {?} dimensionData
     * @return {?}
     */
    DimensionDataSerializer.prototype.serialize = /**
     * @param {?} dimensionData
     * @return {?}
     */
    function (dimensionData) {
        if (!dimensionData) {
            return null;
        }
        /** @type {?} */
        var jobj = new Object();
        jobj['id'] = dimensionData.id;
        if (dimensionData.dataItems) {
            jobj['dataItems'] = dimensionData.dataItems.map((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return new DataItemSerializer().serialize(item); }));
        }
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    DimensionDataSerializer.prototype.deserialize = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        var dimensionInfo = new DimensionData();
        dimensionInfo.id = jobj['id'];
        if (jobj['dataItems']) {
            dimensionInfo.dataItems = jobj['dataItems'].map((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return new DataItemSerializer().deserialize(item); }));
        }
        return dimensionInfo;
    };
    return DimensionDataSerializer;
}());
export { DimensionDataSerializer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGltZW5zaW9uLWRhdGEtc2VyaWFsaXplci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtY21wL3ViY2MtcGFyYW0tdm8vIiwic291cmNlcyI6WyJsaWIvdm8vc2VyaWFsaXplci90ZW1wbGF0ZS1hc3NpZ25tZW50LXNlcmlhbGl6ZXIvZGltZW5zaW9uLWRhdGEtc2VyaWFsaXplci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtREFBbUQsQ0FBQztBQUNsRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUVuRjtJQUFBO0lBMEJBLENBQUM7Ozs7O0lBekJHLDJDQUFTOzs7O0lBQVQsVUFBVSxhQUEyQjtRQUNqQyxJQUFHLENBQUMsYUFBYSxFQUFDO1lBQ2QsT0FBTyxJQUFJLENBQUM7U0FDZjs7WUFDRyxJQUFJLEdBQUMsSUFBSSxNQUFNLEVBQUU7UUFDckIsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUM7UUFDNUIsSUFBRyxhQUFhLENBQUMsU0FBUyxFQUFDO1lBQ3ZCLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEdBQUc7Ozs7WUFBQyxVQUFBLElBQUksSUFBRSxPQUFBLElBQUksa0JBQWtCLEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQXhDLENBQXdDLEVBQUMsQ0FBQztTQUNqRztRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7Ozs7O0lBRUQsNkNBQVc7Ozs7SUFBWCxVQUFZLElBQVc7UUFDbkIsSUFBRyxDQUFDLElBQUksRUFBQztZQUNMLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7O1lBQ0csYUFBYSxHQUFDLElBQUksYUFBYSxFQUFFO1FBQ3JDLGFBQWEsQ0FBQyxFQUFFLEdBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVCLElBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUFDO1lBQ2pCLGFBQWEsQ0FBQyxTQUFTLEdBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEdBQUc7Ozs7WUFBQyxVQUFBLElBQUksSUFBRSxPQUFBLElBQUksa0JBQWtCLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQTFDLENBQTBDLEVBQUMsQ0FBQztTQUNuRztRQUVELE9BQU8sYUFBYSxDQUFDO0lBQ3pCLENBQUM7SUFDTCw4QkFBQztBQUFELENBQUMsQUExQkQsSUEwQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaW1lbnNpb25EYXRhIH0gZnJvbSAnLi4vLi4vcGFyYW0tdGVtcGxhdGUtYXNzaWdubWVudC12by9kaW1lbnNpb24tZGF0YSc7XHJcbmltcG9ydCB7IERhdGFJdGVtU2VyaWFsaXplciB9IGZyb20gJy4uL3BhcmFtLWRhdGEtc2VyaWFsaXplci9kYXRhLWl0ZW0tc2VyaWFsaXplcic7XHJcblxyXG5leHBvcnQgY2xhc3MgRGltZW5zaW9uRGF0YVNlcmlhbGl6ZXJ7XHJcbiAgICBzZXJpYWxpemUoZGltZW5zaW9uRGF0YTpEaW1lbnNpb25EYXRhKTpPYmplY3R7XHJcbiAgICAgICAgaWYoIWRpbWVuc2lvbkRhdGEpe1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGpvYmo9bmV3IE9iamVjdCgpO1xyXG4gICAgICAgIGpvYmpbJ2lkJ109ZGltZW5zaW9uRGF0YS5pZDtcclxuICAgICAgICBpZihkaW1lbnNpb25EYXRhLmRhdGFJdGVtcyl7XHJcbiAgICAgICAgICAgIGpvYmpbJ2RhdGFJdGVtcyddPWRpbWVuc2lvbkRhdGEuZGF0YUl0ZW1zLm1hcChpdGVtPT5uZXcgRGF0YUl0ZW1TZXJpYWxpemVyKCkuc2VyaWFsaXplKGl0ZW0pKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBqb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIGRlc2VyaWFsaXplKGpvYmo6T2JqZWN0KTpEaW1lbnNpb25EYXRhe1xyXG4gICAgICAgIGlmKCFqb2JqKXtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBkaW1lbnNpb25JbmZvPW5ldyBEaW1lbnNpb25EYXRhKCk7XHJcbiAgICAgICAgZGltZW5zaW9uSW5mby5pZD1qb2JqWydpZCddO1xyXG4gICAgICAgIGlmKGpvYmpbJ2RhdGFJdGVtcyddKXtcclxuICAgICAgICAgICAgZGltZW5zaW9uSW5mby5kYXRhSXRlbXM9am9ialsnZGF0YUl0ZW1zJ10ubWFwKGl0ZW09Pm5ldyBEYXRhSXRlbVNlcmlhbGl6ZXIoKS5kZXNlcmlhbGl6ZShpdGVtKSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gZGltZW5zaW9uSW5mbztcclxuICAgIH1cclxufSJdfQ==