/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/template-assignment-serializer/dimension-info-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DimensionInfo } from '../../param-template-assignment-vo/dimension-info';
import { DimensionSerializer } from '../dimension-serializer/dimension-serializer';
import { DimensionDataSerializer } from './dimension-data-serializer';
var DimensionInfoSerializer = /** @class */ (function () {
    function DimensionInfoSerializer() {
    }
    /**
     * @param {?} dimensionInfo
     * @return {?}
     */
    DimensionInfoSerializer.prototype.serialize = /**
     * @param {?} dimensionInfo
     * @return {?}
     */
    function (dimensionInfo) {
        if (!dimensionInfo) {
            return null;
        }
        /** @type {?} */
        var jobj = new Object();
        jobj['dataModificationAllow'] = dimensionInfo.dataModificationAllow;
        if (dimensionInfo.data) {
            jobj['data'] = dimensionInfo.data.map((/**
             * @param {?} dimensionData
             * @return {?}
             */
            function (dimensionData) { return new DimensionDataSerializer().serialize(dimensionData); }));
        }
        if (dimensionInfo.definition) {
            /** @type {?} */
            var serializer = new DimensionSerializer();
            jobj['definition'] = serializer.serialize(dimensionInfo.definition);
        }
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    DimensionInfoSerializer.prototype.deserialize = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        if (!jobj) {
            return null;
        }
        /** @type {?} */
        var dimensionInfo = new DimensionInfo();
        dimensionInfo.dataModificationAllow = (/** @type {?} */ (jobj['dataModificationAllow']));
        if (jobj['data']) {
            dimensionInfo.data = jobj['data'].map((/**
             * @param {?} dimensionData
             * @return {?}
             */
            function (dimensionData) { return new DimensionDataSerializer().deserialize(dimensionData); }));
        }
        if (jobj['definition']) {
            /** @type {?} */
            var serializer = new DimensionSerializer();
            dimensionInfo.definition = serializer.deserialize(jobj['definition']);
        }
        return dimensionInfo;
    };
    return DimensionInfoSerializer;
}());
export { DimensionInfoSerializer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGltZW5zaW9uLWluZm8tc2VyaWFsaXplci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtY21wL3ViY2MtcGFyYW0tdm8vIiwic291cmNlcyI6WyJsaWIvdm8vc2VyaWFsaXplci90ZW1wbGF0ZS1hc3NpZ25tZW50LXNlcmlhbGl6ZXIvZGltZW5zaW9uLWluZm8tc2VyaWFsaXplci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtREFBbUQsQ0FBQztBQUNsRixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUNuRixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUV0RTtJQUFBO0lBb0NBLENBQUM7Ozs7O0lBbkNHLDJDQUFTOzs7O0lBQVQsVUFBVSxhQUEyQjtRQUNqQyxJQUFHLENBQUMsYUFBYSxFQUFDO1lBQ2QsT0FBTyxJQUFJLENBQUM7U0FDZjs7WUFDRyxJQUFJLEdBQUMsSUFBSSxNQUFNLEVBQUU7UUFDckIsSUFBSSxDQUFDLHVCQUF1QixDQUFDLEdBQUMsYUFBYSxDQUFDLHFCQUFxQixDQUFDO1FBRWxFLElBQUcsYUFBYSxDQUFDLElBQUksRUFBQztZQUNsQixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxHQUFHOzs7O1lBQUMsVUFBQSxhQUFhLElBQUUsT0FBQSxJQUFJLHVCQUF1QixFQUFFLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxFQUF0RCxDQUFzRCxFQUFDLENBQUM7U0FDOUc7UUFFRCxJQUFHLGFBQWEsQ0FBQyxVQUFVLEVBQUM7O2dCQUNwQixVQUFVLEdBQUMsSUFBSSxtQkFBbUIsRUFBRTtZQUN4QyxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDckU7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDOzs7OztJQUVELDZDQUFXOzs7O0lBQVgsVUFBWSxJQUFXO1FBQ25CLElBQUcsQ0FBQyxJQUFJLEVBQUM7WUFDTCxPQUFPLElBQUksQ0FBQztTQUNmOztZQUNHLGFBQWEsR0FBQyxJQUFJLGFBQWEsRUFBRTtRQUNyQyxhQUFhLENBQUMscUJBQXFCLEdBQUMsbUJBQUEsSUFBSSxDQUFDLHVCQUF1QixDQUFDLEVBQVcsQ0FBQztRQUU3RSxJQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBQztZQUNaLGFBQWEsQ0FBQyxJQUFJLEdBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUc7Ozs7WUFBQyxVQUFBLGFBQWEsSUFBRSxPQUFBLElBQUksdUJBQXVCLEVBQUUsQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLEVBQXhELENBQXdELEVBQUMsQ0FBQztTQUNoSDtRQUVELElBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFDOztnQkFDZCxVQUFVLEdBQUMsSUFBSSxtQkFBbUIsRUFBRTtZQUN4QyxhQUFhLENBQUMsVUFBVSxHQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7U0FDdkU7UUFDRCxPQUFPLGFBQWEsQ0FBQztJQUN6QixDQUFDO0lBQ0wsOEJBQUM7QUFBRCxDQUFDLEFBcENELElBb0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGltZW5zaW9uSW5mbyB9IGZyb20gJy4uLy4uL3BhcmFtLXRlbXBsYXRlLWFzc2lnbm1lbnQtdm8vZGltZW5zaW9uLWluZm8nO1xyXG5pbXBvcnQgeyBEaW1lbnNpb25TZXJpYWxpemVyIH0gZnJvbSAnLi4vZGltZW5zaW9uLXNlcmlhbGl6ZXIvZGltZW5zaW9uLXNlcmlhbGl6ZXInO1xyXG5pbXBvcnQgeyBEaW1lbnNpb25EYXRhU2VyaWFsaXplciB9IGZyb20gJy4vZGltZW5zaW9uLWRhdGEtc2VyaWFsaXplcic7XHJcblxyXG5leHBvcnQgY2xhc3MgRGltZW5zaW9uSW5mb1NlcmlhbGl6ZXJ7XHJcbiAgICBzZXJpYWxpemUoZGltZW5zaW9uSW5mbzpEaW1lbnNpb25JbmZvKTpPYmplY3R7XHJcbiAgICAgICAgaWYoIWRpbWVuc2lvbkluZm8pe1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGpvYmo9bmV3IE9iamVjdCgpO1xyXG4gICAgICAgIGpvYmpbJ2RhdGFNb2RpZmljYXRpb25BbGxvdyddPWRpbWVuc2lvbkluZm8uZGF0YU1vZGlmaWNhdGlvbkFsbG93O1xyXG5cclxuICAgICAgICBpZihkaW1lbnNpb25JbmZvLmRhdGEpe1xyXG4gICAgICAgICAgICBqb2JqWydkYXRhJ109ZGltZW5zaW9uSW5mby5kYXRhLm1hcChkaW1lbnNpb25EYXRhPT5uZXcgRGltZW5zaW9uRGF0YVNlcmlhbGl6ZXIoKS5zZXJpYWxpemUoZGltZW5zaW9uRGF0YSkpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYoZGltZW5zaW9uSW5mby5kZWZpbml0aW9uKXtcclxuICAgICAgICAgICAgbGV0IHNlcmlhbGl6ZXI9bmV3IERpbWVuc2lvblNlcmlhbGl6ZXIoKTtcclxuICAgICAgICAgICAgam9ialsnZGVmaW5pdGlvbiddPXNlcmlhbGl6ZXIuc2VyaWFsaXplKGRpbWVuc2lvbkluZm8uZGVmaW5pdGlvbik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBqb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIGRlc2VyaWFsaXplKGpvYmo6T2JqZWN0KTpEaW1lbnNpb25JbmZve1xyXG4gICAgICAgIGlmKCFqb2JqKXtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBkaW1lbnNpb25JbmZvPW5ldyBEaW1lbnNpb25JbmZvKCk7XHJcbiAgICAgICAgZGltZW5zaW9uSW5mby5kYXRhTW9kaWZpY2F0aW9uQWxsb3c9am9ialsnZGF0YU1vZGlmaWNhdGlvbkFsbG93J10gYXMgYm9vbGVhbjtcclxuXHJcbiAgICAgICAgaWYoam9ialsnZGF0YSddKXtcclxuICAgICAgICAgICAgZGltZW5zaW9uSW5mby5kYXRhPWpvYmpbJ2RhdGEnXS5tYXAoZGltZW5zaW9uRGF0YT0+bmV3IERpbWVuc2lvbkRhdGFTZXJpYWxpemVyKCkuZGVzZXJpYWxpemUoZGltZW5zaW9uRGF0YSkpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYoam9ialsnZGVmaW5pdGlvbiddKXtcclxuICAgICAgICAgICAgbGV0IHNlcmlhbGl6ZXI9bmV3IERpbWVuc2lvblNlcmlhbGl6ZXIoKTtcclxuICAgICAgICAgICAgZGltZW5zaW9uSW5mby5kZWZpbml0aW9uPXNlcmlhbGl6ZXIuZGVzZXJpYWxpemUoam9ialsnZGVmaW5pdGlvbiddKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGRpbWVuc2lvbkluZm87XHJcbiAgICB9XHJcbn0iXX0=