/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/factory/ubcc-data-type-serializer-factory.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DefaultDataTypeSerializerFactory } from '@ecp-caf/common-structure';
import { DataTypeExtensionConst } from '../../../const/data-type-extension-const';
import { HelpTypeSerialzier } from '../data-type-serializer/help-type-serializer';
import { StructureTypeRefSerializer } from '../data-type-serializer/structure-type-ref-serializer';
var UbccDataTypeSerializerFactory = /** @class */ (function () {
    function UbccDataTypeSerializerFactory() {
    }
    /**
     * @param {?} kind
     * @return {?}
     */
    UbccDataTypeSerializerFactory.prototype.get = /**
     * @param {?} kind
     * @return {?}
     */
    function (kind) {
        switch (kind) {
            case DataTypeExtensionConst.HELP_TYPE:
                return new HelpTypeSerialzier();
            case DataTypeExtensionConst.UBCC_STRUCTURE_TYPE_REF:
                return new StructureTypeRefSerializer();
            default:
                return new DefaultDataTypeSerializerFactory().get(kind);
        }
    };
    return UbccDataTypeSerializerFactory;
}());
export { UbccDataTypeSerializerFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWJjYy1kYXRhLXR5cGUtc2VyaWFsaXplci1mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1jbXAvdWJjYy1wYXJhbS12by8iLCJzb3VyY2VzIjpbImxpYi92by9zZXJpYWxpemVyL2ZhY3RvcnkvdWJjYy1kYXRhLXR5cGUtc2VyaWFsaXplci1mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFtRCxnQ0FBZ0MsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzlILE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO0FBRW5HO0lBQUE7SUFhQSxDQUFDOzs7OztJQVhHLDJDQUFHOzs7O0lBQUgsVUFBSSxJQUFZO1FBQ1osUUFBUSxJQUFJLEVBQUU7WUFDVixLQUFLLHNCQUFzQixDQUFDLFNBQVM7Z0JBQ2pDLE9BQU8sSUFBSSxrQkFBa0IsRUFBRSxDQUFDO1lBQ3BDLEtBQUssc0JBQXNCLENBQUMsdUJBQXVCO2dCQUMvQyxPQUFPLElBQUksMEJBQTBCLEVBQUUsQ0FBQztZQUM1QztnQkFDSSxPQUFPLElBQUksZ0NBQWdDLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDL0Q7SUFDTCxDQUFDO0lBRUwsb0NBQUM7QUFBRCxDQUFDLEFBYkQsSUFhQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElEYXRhVHlwZVNlcmlhbGl6ZXJGYWN0b3J5LCBJRGF0YVR5cGVTZXJpYWxpemVyLCBEZWZhdWx0RGF0YVR5cGVTZXJpYWxpemVyRmFjdG9yeSB9IGZyb20gJ0BlY3AtY2FmL2NvbW1vbi1zdHJ1Y3R1cmUnO1xyXG5pbXBvcnQgeyBEYXRhVHlwZUV4dGVuc2lvbkNvbnN0IH0gZnJvbSAnLi4vLi4vLi4vY29uc3QvZGF0YS10eXBlLWV4dGVuc2lvbi1jb25zdCc7XHJcbmltcG9ydCB7IEhlbHBUeXBlU2VyaWFsemllciB9IGZyb20gJy4uL2RhdGEtdHlwZS1zZXJpYWxpemVyL2hlbHAtdHlwZS1zZXJpYWxpemVyJztcclxuaW1wb3J0IHsgU3RydWN0dXJlVHlwZVJlZlNlcmlhbGl6ZXIgfSBmcm9tICcuLi9kYXRhLXR5cGUtc2VyaWFsaXplci9zdHJ1Y3R1cmUtdHlwZS1yZWYtc2VyaWFsaXplcic7XHJcblxyXG5leHBvcnQgY2xhc3MgVWJjY0RhdGFUeXBlU2VyaWFsaXplckZhY3RvcnkgaW1wbGVtZW50cyBJRGF0YVR5cGVTZXJpYWxpemVyRmFjdG9yeXtcclxuICAgIFxyXG4gICAgZ2V0KGtpbmQ6IHN0cmluZyk6IElEYXRhVHlwZVNlcmlhbGl6ZXIge1xyXG4gICAgICAgIHN3aXRjaCAoa2luZCkge1xyXG4gICAgICAgICAgICBjYXNlIERhdGFUeXBlRXh0ZW5zaW9uQ29uc3QuSEVMUF9UWVBFOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBIZWxwVHlwZVNlcmlhbHppZXIoKTtcclxuICAgICAgICAgICAgY2FzZSBEYXRhVHlwZUV4dGVuc2lvbkNvbnN0LlVCQ0NfU1RSVUNUVVJFX1RZUEVfUkVGOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBTdHJ1Y3R1cmVUeXBlUmVmU2VyaWFsaXplcigpO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBEZWZhdWx0RGF0YVR5cGVTZXJpYWxpemVyRmFjdG9yeSgpLmdldChraW5kKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59Il19