/**
 * @fileoverview added by tsickle
 * Generated from: lib/vo/serializer/data-type-serializer/help-type-serializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DefaultStructuredTypeSerializer } from '@ecp-caf/common-structure';
import { HelpType } from '../../extension/data-type/help-type';
import { SerializerUtils } from '../../utils/serializer-utils';
var HelpTypeSerialzier = /** @class */ (function () {
    function HelpTypeSerialzier() {
    }
    /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    HelpTypeSerialzier.prototype.serialize = /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    function (type, ctxt) {
        /** @type {?} */
        var jobj = new Object();
        if (!type) {
            return null;
        }
        /** @type {?} */
        var serializer = new DefaultStructuredTypeSerializer();
        jobj = serializer.serialize(type, SerializerUtils.getContext());
        /** @type {?} */
        var helpType = (/** @type {?} */ (type));
        jobj['helpId'] = helpType.helpId;
        jobj['helpCode'] = helpType.helpCode;
        jobj['helpName'] = helpType.helpName;
        jobj['kind'] = helpType.kind;
        return jobj;
    };
    /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    HelpTypeSerialzier.prototype.deserialize = /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    function (obj, ctxt) {
        if (!obj) {
            return null;
        }
        /** @type {?} */
        var helpType = new HelpType();
        /** @type {?} */
        var serializer = new DefaultStructuredTypeSerializer();
        helpType = (/** @type {?} */ (serializer.deserialize(obj, SerializerUtils.getContext())));
        helpType.helpId = obj['helpId'];
        helpType.helpCode = obj['helpCode'];
        helpType.helpName = obj['helpName'];
        return helpType;
    };
    return HelpTypeSerialzier;
}());
export { HelpTypeSerialzier };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscC10eXBlLXNlcmlhbGl6ZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWNtcC91YmNjLXBhcmFtLXZvLyIsInNvdXJjZXMiOlsibGliL3ZvL3NlcmlhbGl6ZXIvZGF0YS10eXBlLXNlcmlhbGl6ZXIvaGVscC10eXBlLXNlcmlhbGl6ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQXFELCtCQUErQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDL0gsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQy9ELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUUvRDtJQUFBO0lBOEJBLENBQUM7Ozs7OztJQTVCRyxzQ0FBUzs7Ozs7SUFBVCxVQUFVLElBQWUsRUFBRSxJQUF1Qjs7WUFDMUMsSUFBSSxHQUFDLElBQUksTUFBTSxFQUFFO1FBQ3JCLElBQUcsQ0FBQyxJQUFJLEVBQUM7WUFDTCxPQUFPLElBQUksQ0FBQztTQUNmOztZQUNHLFVBQVUsR0FBQyxJQUFJLCtCQUErQixFQUFFO1FBQ3BELElBQUksR0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLElBQUksRUFBQyxlQUFlLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQzs7WUFDekQsUUFBUSxHQUFDLG1CQUFBLElBQUksRUFBWTtRQUM3QixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQztRQUMvQixJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQztRQUNuQyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQztRQUNuQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUMsUUFBUSxDQUFDLElBQUksQ0FBQztRQUMzQixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDOzs7Ozs7SUFFRCx3Q0FBVzs7Ozs7SUFBWCxVQUFZLEdBQVcsRUFBRSxJQUFzQjtRQUMzQyxJQUFHLENBQUMsR0FBRyxFQUFDO1lBQ0osT0FBTyxJQUFJLENBQUM7U0FDZjs7WUFDRyxRQUFRLEdBQUMsSUFBSSxRQUFRLEVBQUU7O1lBQ3ZCLFVBQVUsR0FBQyxJQUFJLCtCQUErQixFQUFFO1FBQ3BELFFBQVEsR0FBQyxtQkFBQSxVQUFVLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBQyxlQUFlLENBQUMsVUFBVSxFQUFFLENBQUMsRUFBWSxDQUFDO1FBQzlFLFFBQVEsQ0FBQyxNQUFNLEdBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzlCLFFBQVEsQ0FBQyxRQUFRLEdBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ2xDLFFBQVEsQ0FBQyxRQUFRLEdBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ2xDLE9BQU8sUUFBUSxDQUFDO0lBQ3BCLENBQUM7SUFFTCx5QkFBQztBQUFELENBQUMsQUE5QkQsSUE4QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJRGF0YVR5cGVTZXJpYWxpemVyLCBJU2VyaWFsaXplQ29udGV4dCwgSURhdGFUeXBlLCBEZWZhdWx0U3RydWN0dXJlZFR5cGVTZXJpYWxpemVyIH0gZnJvbSAnQGVjcC1jYWYvY29tbW9uLXN0cnVjdHVyZSc7XHJcbmltcG9ydCB7IEhlbHBUeXBlIH0gZnJvbSAnLi4vLi4vZXh0ZW5zaW9uL2RhdGEtdHlwZS9oZWxwLXR5cGUnO1xyXG5pbXBvcnQgeyBTZXJpYWxpemVyVXRpbHMgfSBmcm9tICcuLi8uLi91dGlscy9zZXJpYWxpemVyLXV0aWxzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBIZWxwVHlwZVNlcmlhbHppZXIgaW1wbGVtZW50cyBJRGF0YVR5cGVTZXJpYWxpemVye1xyXG4gICAgXHJcbiAgICBzZXJpYWxpemUodHlwZTogSURhdGFUeXBlLCBjdHh0OiBJU2VyaWFsaXplQ29udGV4dCk6IE9iamVjdCB7XHJcbiAgICAgICAgbGV0IGpvYmo9bmV3IE9iamVjdCgpO1xyXG4gICAgICAgIGlmKCF0eXBlKXtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBzZXJpYWxpemVyPW5ldyBEZWZhdWx0U3RydWN0dXJlZFR5cGVTZXJpYWxpemVyKCk7XHJcbiAgICAgICAgam9iaj1zZXJpYWxpemVyLnNlcmlhbGl6ZSh0eXBlLFNlcmlhbGl6ZXJVdGlscy5nZXRDb250ZXh0KCkpO1xyXG4gICAgICAgIGxldCBoZWxwVHlwZT10eXBlIGFzIEhlbHBUeXBlO1xyXG4gICAgICAgIGpvYmpbJ2hlbHBJZCddPWhlbHBUeXBlLmhlbHBJZDtcclxuICAgICAgICBqb2JqWydoZWxwQ29kZSddPWhlbHBUeXBlLmhlbHBDb2RlO1xyXG4gICAgICAgIGpvYmpbJ2hlbHBOYW1lJ109aGVscFR5cGUuaGVscE5hbWU7XHJcbiAgICAgICAgam9ialsna2luZCddPWhlbHBUeXBlLmtpbmQ7XHJcbiAgICAgICAgcmV0dXJuIGpvYmo7XHJcbiAgICB9ICAgIFxyXG4gICAgXHJcbiAgICBkZXNlcmlhbGl6ZShvYmo6IE9iamVjdCwgY3R4dDpJU2VyaWFsaXplQ29udGV4dCk6IElEYXRhVHlwZSB7XHJcbiAgICAgICAgaWYoIW9iail7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgaGVscFR5cGU9bmV3IEhlbHBUeXBlKCk7XHJcbiAgICAgICAgbGV0IHNlcmlhbGl6ZXI9bmV3IERlZmF1bHRTdHJ1Y3R1cmVkVHlwZVNlcmlhbGl6ZXIoKTtcclxuICAgICAgICBoZWxwVHlwZT1zZXJpYWxpemVyLmRlc2VyaWFsaXplKG9iaixTZXJpYWxpemVyVXRpbHMuZ2V0Q29udGV4dCgpKSBhcyBIZWxwVHlwZTtcclxuICAgICAgICBoZWxwVHlwZS5oZWxwSWQ9b2JqWydoZWxwSWQnXTtcclxuICAgICAgICBoZWxwVHlwZS5oZWxwQ29kZT1vYmpbJ2hlbHBDb2RlJ107XHJcbiAgICAgICAgaGVscFR5cGUuaGVscE5hbWU9b2JqWydoZWxwTmFtZSddO1xyXG4gICAgICAgIHJldHVybiBoZWxwVHlwZTtcclxuICAgIH1cclxuXHJcbn0iXX0=