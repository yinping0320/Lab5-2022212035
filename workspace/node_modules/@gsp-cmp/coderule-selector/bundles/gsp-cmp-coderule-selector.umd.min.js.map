{"version":3,"sources":["ng://@gsp-cmp/coderule-selector/lib/service/code-rule-select.service.ts","ng://@gsp-cmp/coderule-selector/lib/model/code-rule-invoke-info.ts","ng://@gsp-cmp/coderule-selector/lib/components/select-code-rule/select-code-rule.component.ts","ng://@gsp-cmp/coderule-selector/lib/model/code-rule-base-info.ts","ng://@gsp-cmp/coderule-selector/lib/components/code-rule-list/code-rule-list.component.ts","ng://@gsp-cmp/coderule-selector/lib/code-rule-select.module.ts"],"names":["CodeRuleSelectService","prototype","addMetadataRT","metadata","this","metadatas","push","clearData","codeRule","getCodeRuleList","headers","HttpHeaders","append","sessionId","http","get","QUERY_URL","serviceUnit","Injectable","HttpClient","CodeRuleInvokeInfo","Object","defineProperty","SelectCodeRuleComponent","value","codeRuleSvc","ngOnChanges","changes","confirmCodeRule","codeRuleInfo","invokeInfo","id","code","name","byMetadata","origin","codeRuleSelected","emit","closeSelector","alert","selectorClosed","Component","args","selector","template","ComponentFactoryResolver","Injector","Input","Output","resolver","injector","EventEmitter","CodeRuleBaseInfo","init","obj","CodeRuleListComponent","clear","data","dataStateChange","state","gridData","process","ngOnInit","_this","subscribe","datas","length","forEach","baseInfo","onSelectionChange","event","selectedRows","dataItem","Array","skip","take","filter","logic","filters","selectableSetting","mode","checkboxOnly","CodeRuleSelectModule","NgModule","imports","CommonModule","FormsModule","TreeViewModule","GridModule","exports","providers","declarations","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { CodeRuleBaseInfo } from '../model/code-rule-base-info';\r\n\r\n@Injectable()\r\nexport class CodeRuleSelectService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  public serviceUnit: string;\r\n  public sessionId: string;\r\n  private QUERY_URL: string = \"/api/runtime/bcc/v1.0/code-rule-data\"\r\n\r\n  codeRule: CodeRuleBaseInfo;\r\n\r\n  metadatas = [];\r\n\r\n  addMetadataRT(metadata) {\r\n    this.metadatas.push(metadata);\r\n  }\r\n\r\n  clearData() {\r\n    this.metadatas = [];\r\n    this.codeRule = null;\r\n  }\r\n\r\n  // 根据类型获取Cloud Server下所有的元数据\r\n  getCodeRuleList(): Observable<any> {\r\n    let headers:HttpHeaders = new HttpHeaders();\r\n    headers.append(\"sessionId\", this.sessionId);\r\n    return this.http.get(`${this.QUERY_URL}?serviceUnit=${this.serviceUnit}`, { headers: headers });\r\n  }\r\n\r\n\r\n\r\n}\r\n","export class CodeRuleInvokeInfo{\r\n    id:string;\r\n    code:string;\r\n    name:string\r\n    serviceUnit:string;\r\n    byMetadata:boolean\r\n}","// tslint:disable-next-line:max-line-length\r\nimport { Component, ViewChild, Input, OnChanges, Output, EventEmitter, SimpleChanges, ComponentFactoryResolver, Injector } from '@angular/core';\r\nimport { CodeRuleSelectService } from '../../service/code-rule-select.service';\r\nimport { CodeRuleInvokeInfo } from '../../model/code-rule-invoke-info';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'app-select-metadatart',\r\n  templateUrl: './select-code-rule.component.html',\r\n  styleUrls: ['./select-code-rule.component.css']\r\n})\r\nexport class SelectCodeRuleComponent implements OnChanges {\r\n  @Input() set serviceUnit(value: string) {\r\n    this.codeRuleSvc.serviceUnit = value;\r\n  }\r\n  @Input() set sessionId(value: string) {\r\n    this.codeRuleSvc.sessionId = value;\r\n  }\r\n  @Output() selectorClosed: EventEmitter<any>;\r\n  @Output() codeRuleSelected = new EventEmitter<CodeRuleInvokeInfo>();\r\n\r\n  constructor(private codeRuleSvc: CodeRuleSelectService,\r\n    private resolver: ComponentFactoryResolver, private injector: Injector) {\r\n    this.selectorClosed = new EventEmitter<any>();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n  }\r\n\r\n  /**\r\n   * 点击确认，确认编号规则\r\n   */\r\n  confirmCodeRule() {\r\n    const codeRuleInfo = this.codeRuleSvc.codeRule;\r\n    if (!codeRuleInfo) {\r\n      alert(\"当前未选中任何数据！\");\r\n      return;\r\n    }\r\n    const invokeInfo: CodeRuleInvokeInfo = new CodeRuleInvokeInfo();\r\n    invokeInfo.id = codeRuleInfo.id;\r\n    invokeInfo.code = codeRuleInfo.code;\r\n    invokeInfo.name = codeRuleInfo.name;\r\n    invokeInfo.serviceUnit = codeRuleInfo.serviceUnit;\r\n    invokeInfo.byMetadata = codeRuleInfo.origin == \"元数据\" ? true : false;\r\n    this.codeRuleSelected.emit(invokeInfo);\r\n    this.closeSelector();\r\n    // 清空缓存\r\n    this.codeRuleSvc.clearData();\r\n  }\r\n\r\n  /**\r\n   * 点击取消，关闭选择器\r\n   */\r\n  closeSelector(): void {\r\n    this.selectorClosed.emit();\r\n  }\r\n\r\n}\r\n","export class CodeRuleBaseInfo{\r\n    id:string;\r\n    code:string;\r\n    name:string;\r\n    serviceUnit:string;\r\n    origin:string;\r\n\r\n    init(obj:Object){\r\n        this.id=obj[\"id\"];\r\n        this.code=obj[\"code\"];\r\n        this.name=obj[\"name\"];\r\n        this.serviceUnit=obj[\"serviceUnit\"];\r\n        this.origin=obj[\"origin\"];\r\n    }\r\n}","import { Component, Input, OnInit } from '@angular/core';\r\nimport { process, State } from '@progress/kendo-data-query';\r\nimport { GridDataResult, DataStateChangeEvent,SelectableSettings} from '@progress/kendo-angular-grid';\r\nimport { CodeRuleBaseInfo } from '../../model/code-rule-base-info';\r\nimport { CodeRuleSelectService } from '../../service/code-rule-select.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'app-coderule-list',\r\n  templateUrl: './code-rule-list.component.html',\r\n  styleUrls: ['./code-rule-list.component.css']\r\n})\r\nexport class CodeRuleListComponent implements OnInit {\r\n\r\n  constructor(private codeRuleSvc: CodeRuleSelectService) { }\r\n\r\n  data: CodeRuleBaseInfo[]=new Array<CodeRuleBaseInfo>();\r\n  clear() {\r\n    this.data = [];\r\n  }\r\n\r\n  // tslint:disable-next-line:member-ordering\r\n  public state: State = {\r\n    skip: 0,\r\n    take: 9999,\r\n    // Initial filter descriptor\r\n    filter: {\r\n      logic: 'and',\r\n      filters: []\r\n    }\r\n  };\r\n\r\n  // tslint:disable-next-line:member-ordering\r\n  public gridData: GridDataResult;\r\n  public dataStateChange(state: DataStateChangeEvent): void {\r\n    this.state = state;\r\n    this.gridData = process(this.data, this.state);\r\n  }\r\n\r\n  // tslint:disable-next-line:member-ordering\r\n  selectableSetting: SelectableSettings = { mode: 'single', checkboxOnly: false };\r\n\r\n\r\n  ngOnInit() {\r\n    this.codeRuleSvc.getCodeRuleList().subscribe(datas => {\r\n      if (datas && datas.length > 0) {\r\n        datas.forEach(obj => {\r\n          let baseInfo = new CodeRuleBaseInfo();\r\n          baseInfo.init(obj);\r\n          this.data.push(baseInfo);\r\n        })\r\n        this.gridData = process(this.data, this.state);\r\n      }\r\n    });\r\n  }\r\n\r\n  // 选中编号规则后的事件处理\r\n  onSelectionChange(event) {\r\n    if (event.selectedRows.length > 0) {\r\n      this.codeRuleSvc.codeRule = null;\r\n      this.codeRuleSvc.codeRule = event.selectedRows[0].dataItem;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TreeViewModule } from '@progress/kendo-angular-treeview';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\n// import { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { SelectCodeRuleComponent } from './components/select-code-rule/select-code-rule.component';\r\nimport { CodeRuleListComponent } from './components/code-rule-list/code-rule-list.component';\r\nimport { CodeRuleSelectService } from './service/code-rule-select.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    TreeViewModule,\r\n    GridModule,\r\n    // FarrisDialogModule\r\n  ],\r\n  exports: [\r\n    SelectCodeRuleComponent\r\n  ],\r\n  providers: [CodeRuleSelectService], // 服务提供者\r\n  declarations: [SelectCodeRuleComponent, CodeRuleListComponent],\r\n  entryComponents: [SelectCodeRuleComponent]\r\n})\r\nexport class CodeRuleSelectModule {\r\n  constructor() {\r\n  }\r\n}\r\n"]}