/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/code-rule-list/code-rule-list.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { process } from '@progress/kendo-data-query';
import { CodeRuleBaseInfo } from '../../model/code-rule-base-info';
import { CodeRuleSelectService } from '../../service/code-rule-select.service';
export class CodeRuleListComponent {
    /**
     * @param {?} codeRuleSvc
     */
    constructor(codeRuleSvc) {
        this.codeRuleSvc = codeRuleSvc;
        this.data = new Array();
        // tslint:disable-next-line:member-ordering
        this.state = {
            skip: 0,
            take: 9999,
            // Initial filter descriptor
            filter: {
                logic: 'and',
                filters: []
            }
        };
        // tslint:disable-next-line:member-ordering
        this.selectableSetting = { mode: 'single', checkboxOnly: false };
    }
    /**
     * @return {?}
     */
    clear() {
        this.data = [];
    }
    /**
     * @param {?} state
     * @return {?}
     */
    dataStateChange(state) {
        this.state = state;
        this.gridData = process(this.data, this.state);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.codeRuleSvc.getCodeRuleList().subscribe((/**
         * @param {?} datas
         * @return {?}
         */
        datas => {
            if (datas && datas.length > 0) {
                datas.forEach((/**
                 * @param {?} obj
                 * @return {?}
                 */
                obj => {
                    /** @type {?} */
                    let baseInfo = new CodeRuleBaseInfo();
                    baseInfo.init(obj);
                    this.data.push(baseInfo);
                }));
                this.gridData = process(this.data, this.state);
            }
        }));
    }
    // 选中编号规则后的事件处理
    /**
     * @param {?} event
     * @return {?}
     */
    onSelectionChange(event) {
        if (event.selectedRows.length > 0) {
            this.codeRuleSvc.codeRule = null;
            this.codeRuleSvc.codeRule = event.selectedRows[0].dataItem;
        }
    }
}
CodeRuleListComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'app-coderule-list',
                template: "<div class=\"templateInfo\">\r\n  <div class=\"templateSelector\">\r\n    <kendo-grid [data]=\"gridData\" [height]=\"449\" [selectable]=\"selectableSetting\"\r\n      (selectionChange)=onSelectionChange($event) [pageSize]=\"state.take\" [skip]=\"state.skip\" [sort]=\"state.sort\"\r\n      [filter]=\"state.filter\" [sortable]=\"true\" [pageable]=\"false\" [filterable]=\"true\" [resizable]=\"true\"\r\n      (dataStateChange)=dataStateChange($event)>\r\n      <kendo-grid-column field=\"code\" title=\"\u7F16\u53F7\" width=\"210\">\r\n      </kendo-grid-column>\r\n      <kendo-grid-column field=\"name\" title=\"\u540D\u79F0\" width=\"200\">\r\n      </kendo-grid-column>\r\n      <kendo-grid-column field=\"serviceUnit\" title=\"\u670D\u52A1\u5355\u5143\" width=\"200\">\r\n      </kendo-grid-column>\r\n    </kendo-grid>\r\n  </div>\r\n</div>",
                styles: [".templateSelector{width:100%;height:450px;border:.5px solid #ddd}.templateDescription{width:200px;height:450px;border:.5px solid #ddd}.templateInfo{display:flex}"]
            }] }
];
/** @nocollapse */
CodeRuleListComponent.ctorParameters = () => [
    { type: CodeRuleSelectService }
];
if (false) {
    /** @type {?} */
    CodeRuleListComponent.prototype.data;
    /** @type {?} */
    CodeRuleListComponent.prototype.state;
    /** @type {?} */
    CodeRuleListComponent.prototype.gridData;
    /** @type {?} */
    CodeRuleListComponent.prototype.selectableSetting;
    /**
     * @type {?}
     * @private
     */
    CodeRuleListComponent.prototype.codeRuleSvc;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZS1ydWxlLWxpc3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1jbXAvY29kZXJ1bGUtc2VsZWN0b3IvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9jb2RlLXJ1bGUtbGlzdC9jb2RlLXJ1bGUtbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQUUsT0FBTyxFQUFTLE1BQU0sNEJBQTRCLENBQUM7QUFFNUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDbkUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFTL0UsTUFBTSxPQUFPLHFCQUFxQjs7OztJQUVoQyxZQUFvQixXQUFrQztRQUFsQyxnQkFBVyxHQUFYLFdBQVcsQ0FBdUI7UUFFdEQsU0FBSSxHQUFxQixJQUFJLEtBQUssRUFBb0IsQ0FBQzs7UUFNaEQsVUFBSyxHQUFVO1lBQ3BCLElBQUksRUFBRSxDQUFDO1lBQ1AsSUFBSSxFQUFFLElBQUk7O1lBRVYsTUFBTSxFQUFFO2dCQUNOLEtBQUssRUFBRSxLQUFLO2dCQUNaLE9BQU8sRUFBRSxFQUFFO2FBQ1o7U0FDRixDQUFDOztRQVVGLHNCQUFpQixHQUF1QixFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxDQUFDO0lBMUJ0QixDQUFDOzs7O0lBRzNELEtBQUs7UUFDSCxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztJQUNqQixDQUFDOzs7OztJQWVNLGVBQWUsQ0FBQyxLQUEyQjtRQUNoRCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7O0lBTUQsUUFBUTtRQUNOLElBQUksQ0FBQyxXQUFXLENBQUMsZUFBZSxFQUFFLENBQUMsU0FBUzs7OztRQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ25ELElBQUksS0FBSyxJQUFJLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO2dCQUM3QixLQUFLLENBQUMsT0FBTzs7OztnQkFBQyxHQUFHLENBQUMsRUFBRTs7d0JBQ2QsUUFBUSxHQUFHLElBQUksZ0JBQWdCLEVBQUU7b0JBQ3JDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7b0JBQ25CLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUMzQixDQUFDLEVBQUMsQ0FBQTtnQkFDRixJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUNoRDtRQUNILENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7O0lBR0QsaUJBQWlCLENBQUMsS0FBSztRQUNyQixJQUFJLEtBQUssQ0FBQyxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNqQyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7WUFDakMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7U0FDNUQ7SUFDSCxDQUFDOzs7WUF4REYsU0FBUyxTQUFDOztnQkFFVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3QiwwMUJBQThDOzthQUUvQzs7OztZQVJRLHFCQUFxQjs7OztJQWE1QixxQ0FBdUQ7O0lBTXZELHNDQVFFOztJQUdGLHlDQUFnQzs7SUFPaEMsa0RBQWdGOzs7OztJQTFCcEUsNENBQTBDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IHByb2Nlc3MsIFN0YXRlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWRhdGEtcXVlcnknO1xyXG5pbXBvcnQgeyBHcmlkRGF0YVJlc3VsdCwgRGF0YVN0YXRlQ2hhbmdlRXZlbnQsU2VsZWN0YWJsZVNldHRpbmdzfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1ncmlkJztcclxuaW1wb3J0IHsgQ29kZVJ1bGVCYXNlSW5mbyB9IGZyb20gJy4uLy4uL21vZGVsL2NvZGUtcnVsZS1iYXNlLWluZm8nO1xyXG5pbXBvcnQgeyBDb2RlUnVsZVNlbGVjdFNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlL2NvZGUtcnVsZS1zZWxlY3Quc2VydmljZSc7XHJcblxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmNvbXBvbmVudC1zZWxlY3RvclxyXG4gIHNlbGVjdG9yOiAnYXBwLWNvZGVydWxlLWxpc3QnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9jb2RlLXJ1bGUtbGlzdC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vY29kZS1ydWxlLWxpc3QuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDb2RlUnVsZUxpc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvZGVSdWxlU3ZjOiBDb2RlUnVsZVNlbGVjdFNlcnZpY2UpIHsgfVxyXG5cclxuICBkYXRhOiBDb2RlUnVsZUJhc2VJbmZvW109bmV3IEFycmF5PENvZGVSdWxlQmFzZUluZm8+KCk7XHJcbiAgY2xlYXIoKSB7XHJcbiAgICB0aGlzLmRhdGEgPSBbXTtcclxuICB9XHJcblxyXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTptZW1iZXItb3JkZXJpbmdcclxuICBwdWJsaWMgc3RhdGU6IFN0YXRlID0ge1xyXG4gICAgc2tpcDogMCxcclxuICAgIHRha2U6IDk5OTksXHJcbiAgICAvLyBJbml0aWFsIGZpbHRlciBkZXNjcmlwdG9yXHJcbiAgICBmaWx0ZXI6IHtcclxuICAgICAgbG9naWM6ICdhbmQnLFxyXG4gICAgICBmaWx0ZXJzOiBbXVxyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTptZW1iZXItb3JkZXJpbmdcclxuICBwdWJsaWMgZ3JpZERhdGE6IEdyaWREYXRhUmVzdWx0O1xyXG4gIHB1YmxpYyBkYXRhU3RhdGVDaGFuZ2Uoc3RhdGU6IERhdGFTdGF0ZUNoYW5nZUV2ZW50KTogdm9pZCB7XHJcbiAgICB0aGlzLnN0YXRlID0gc3RhdGU7XHJcbiAgICB0aGlzLmdyaWREYXRhID0gcHJvY2Vzcyh0aGlzLmRhdGEsIHRoaXMuc3RhdGUpO1xyXG4gIH1cclxuXHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm1lbWJlci1vcmRlcmluZ1xyXG4gIHNlbGVjdGFibGVTZXR0aW5nOiBTZWxlY3RhYmxlU2V0dGluZ3MgPSB7IG1vZGU6ICdzaW5nbGUnLCBjaGVja2JveE9ubHk6IGZhbHNlIH07XHJcblxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuY29kZVJ1bGVTdmMuZ2V0Q29kZVJ1bGVMaXN0KCkuc3Vic2NyaWJlKGRhdGFzID0+IHtcclxuICAgICAgaWYgKGRhdGFzICYmIGRhdGFzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICBkYXRhcy5mb3JFYWNoKG9iaiA9PiB7XHJcbiAgICAgICAgICBsZXQgYmFzZUluZm8gPSBuZXcgQ29kZVJ1bGVCYXNlSW5mbygpO1xyXG4gICAgICAgICAgYmFzZUluZm8uaW5pdChvYmopO1xyXG4gICAgICAgICAgdGhpcy5kYXRhLnB1c2goYmFzZUluZm8pO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgdGhpcy5ncmlkRGF0YSA9IHByb2Nlc3ModGhpcy5kYXRhLCB0aGlzLnN0YXRlKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvLyDpgInkuK3nvJblj7fop4TliJnlkI7nmoTkuovku7blpITnkIZcclxuICBvblNlbGVjdGlvbkNoYW5nZShldmVudCkge1xyXG4gICAgaWYgKGV2ZW50LnNlbGVjdGVkUm93cy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIHRoaXMuY29kZVJ1bGVTdmMuY29kZVJ1bGUgPSBudWxsO1xyXG4gICAgICB0aGlzLmNvZGVSdWxlU3ZjLmNvZGVSdWxlID0gZXZlbnQuc2VsZWN0ZWRSb3dzWzBdLmRhdGFJdGVtO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=