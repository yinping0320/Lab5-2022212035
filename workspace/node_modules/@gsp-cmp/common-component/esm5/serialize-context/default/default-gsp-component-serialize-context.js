/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DefaultOperationSerializerFactory, DefaultParameterSerializerFactory, DefaultPropertySerializerFactory } from '@ecp-caf/common-structure';
import { DefaultGspComponentDataTypeSerializerFactory } from './factory/default-gsp-component-data-type-serializer-factory';
var DefaultGspComponentSerializeContext = /** @class */ (function () {
    function DefaultGspComponentSerializeContext() {
    }
    // private gspComponentFactory: IGspComponentSerializerFactory;
    // private gspComponentFactory: IGspComponentSerializerFactory;
    /**
     * @return {?}
     */
    DefaultGspComponentSerializeContext.prototype.getDataTypeSerializerFactory = 
    // private gspComponentFactory: IGspComponentSerializerFactory;
    /**
     * @return {?}
     */
    function () {
        if (!this.dataTypeFactory) {
            this.dataTypeFactory = new DefaultGspComponentDataTypeSerializerFactory();
        }
        return this.dataTypeFactory;
    };
    /**
     * @return {?}
     */
    DefaultGspComponentSerializeContext.prototype.getOperationSerializerFactory = /**
     * @return {?}
     */
    function () {
        if (!this.operationFactory) {
            this.operationFactory = new DefaultOperationSerializerFactory();
        }
        return this.operationFactory;
    };
    /**
     * @return {?}
     */
    DefaultGspComponentSerializeContext.prototype.getParameterSerializerFactory = /**
     * @return {?}
     */
    function () {
        if (!this.parameterFactory) {
            this.parameterFactory = new DefaultParameterSerializerFactory();
        }
        return this.parameterFactory;
    };
    /**
     * @return {?}
     */
    DefaultGspComponentSerializeContext.prototype.getPropertySerializerFactory = /**
     * @return {?}
     */
    function () {
        if (!this.propertyFactory) {
            this.propertyFactory = new DefaultPropertySerializerFactory();
        }
        return this.propertyFactory;
    };
    return DefaultGspComponentSerializeContext;
}());
export { DefaultGspComponentSerializeContext };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DefaultGspComponentSerializeContext.prototype.dataTypeFactory;
    /**
     * @type {?}
     * @private
     */
    DefaultGspComponentSerializeContext.prototype.operationFactory;
    /**
     * @type {?}
     * @private
     */
    DefaultGspComponentSerializeContext.prototype.parameterFactory;
    /**
     * @type {?}
     * @private
     */
    DefaultGspComponentSerializeContext.prototype.propertyFactory;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1nc3AtY29tcG9uZW50LXNlcmlhbGl6ZS1jb250ZXh0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1jbXAvY29tbW9uLWNvbXBvbmVudC8iLCJzb3VyY2VzIjpbInNlcmlhbGl6ZS1jb250ZXh0L2RlZmF1bHQvZGVmYXVsdC1nc3AtY29tcG9uZW50LXNlcmlhbGl6ZS1jb250ZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxPQUFPLEVBQXNKLGlDQUFpQyxFQUFFLGlDQUFpQyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDdlMsT0FBTyxFQUFFLDRDQUE0QyxFQUFFLE1BQU0sOERBQThELENBQUM7QUFHNUg7SUFBQTtJQTBDQSxDQUFDO0lBckNHLCtEQUErRDs7Ozs7SUFFL0QsMEVBQTRCOzs7OztJQUE1QjtRQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSw0Q0FBNEMsRUFBRSxDQUFDO1NBQzdFO1FBQ0QsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDO0lBQ2hDLENBQUM7Ozs7SUFFRCwyRUFBNkI7OztJQUE3QjtRQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUU7WUFDeEIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksaUNBQWlDLEVBQUUsQ0FBQztTQUNuRTtRQUNELE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDO0lBQ2pDLENBQUM7Ozs7SUFFRCwyRUFBNkI7OztJQUE3QjtRQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUU7WUFDeEIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksaUNBQWlDLEVBQUUsQ0FBQztTQUNuRTtRQUNELE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDO0lBQ2pDLENBQUM7Ozs7SUFFRCwwRUFBNEI7OztJQUE1QjtRQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxnQ0FBZ0MsRUFBRSxDQUFDO1NBQ2pFO1FBQ0QsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDO0lBQ2hDLENBQUM7SUFTTCwwQ0FBQztBQUFELENBQUMsQUExQ0QsSUEwQ0M7Ozs7Ozs7SUF6Q0csOERBQW9EOzs7OztJQUNwRCwrREFBc0Q7Ozs7O0lBQ3RELCtEQUFzRDs7Ozs7SUFDdEQsOERBQW9EIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUdzcENvbXBvbmVudFNlcmlhbGl6ZUNvbnRleHQgfSBmcm9tICcuLi9leHRlbnNpb24vaS1nc3AtY29tcG9uZW50LXNlcmlhbGl6ZS1jb250ZXh0JztcclxuaW1wb3J0IHsgSURhdGFUeXBlU2VyaWFsaXplckZhY3RvcnksIElPcGVyYXRpb25TZXJpYWxpemVyRmFjdG9yeSwgSVBhcmFtZXRlclNlcmlhbGl6ZXJGYWN0b3J5LCBJUHJvcGVydHlTZXJpYWxpemVyRmFjdG9yeSwgRGVmYXVsdERhdGFUeXBlU2VyaWFsaXplckZhY3RvcnksIERlZmF1bHRPcGVyYXRpb25TZXJpYWxpemVyRmFjdG9yeSwgRGVmYXVsdFBhcmFtZXRlclNlcmlhbGl6ZXJGYWN0b3J5LCBEZWZhdWx0UHJvcGVydHlTZXJpYWxpemVyRmFjdG9yeSB9IGZyb20gJ0BlY3AtY2FmL2NvbW1vbi1zdHJ1Y3R1cmUnO1xyXG5pbXBvcnQgeyBEZWZhdWx0R3NwQ29tcG9uZW50RGF0YVR5cGVTZXJpYWxpemVyRmFjdG9yeSB9IGZyb20gJy4vZmFjdG9yeS9kZWZhdWx0LWdzcC1jb21wb25lbnQtZGF0YS10eXBlLXNlcmlhbGl6ZXItZmFjdG9yeSc7XHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIERlZmF1bHRHc3BDb21wb25lbnRTZXJpYWxpemVDb250ZXh0IGltcGxlbWVudHMgSUdzcENvbXBvbmVudFNlcmlhbGl6ZUNvbnRleHQge1xyXG4gICAgcHJpdmF0ZSBkYXRhVHlwZUZhY3Rvcnk6IElEYXRhVHlwZVNlcmlhbGl6ZXJGYWN0b3J5O1xyXG4gICAgcHJpdmF0ZSBvcGVyYXRpb25GYWN0b3J5OiBJT3BlcmF0aW9uU2VyaWFsaXplckZhY3Rvcnk7XHJcbiAgICBwcml2YXRlIHBhcmFtZXRlckZhY3Rvcnk6IElQYXJhbWV0ZXJTZXJpYWxpemVyRmFjdG9yeTtcclxuICAgIHByaXZhdGUgcHJvcGVydHlGYWN0b3J5OiBJUHJvcGVydHlTZXJpYWxpemVyRmFjdG9yeTtcclxuICAgIC8vIHByaXZhdGUgZ3NwQ29tcG9uZW50RmFjdG9yeTogSUdzcENvbXBvbmVudFNlcmlhbGl6ZXJGYWN0b3J5O1xyXG5cclxuICAgIGdldERhdGFUeXBlU2VyaWFsaXplckZhY3RvcnkoKTogSURhdGFUeXBlU2VyaWFsaXplckZhY3Rvcnkge1xyXG4gICAgICAgIGlmICghdGhpcy5kYXRhVHlwZUZhY3RvcnkpIHtcclxuICAgICAgICAgICAgdGhpcy5kYXRhVHlwZUZhY3RvcnkgPSBuZXcgRGVmYXVsdEdzcENvbXBvbmVudERhdGFUeXBlU2VyaWFsaXplckZhY3RvcnkoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVR5cGVGYWN0b3J5O1xyXG4gICAgfVxyXG5cclxuICAgIGdldE9wZXJhdGlvblNlcmlhbGl6ZXJGYWN0b3J5KCk6IElPcGVyYXRpb25TZXJpYWxpemVyRmFjdG9yeSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLm9wZXJhdGlvbkZhY3RvcnkpIHtcclxuICAgICAgICAgICAgdGhpcy5vcGVyYXRpb25GYWN0b3J5ID0gbmV3IERlZmF1bHRPcGVyYXRpb25TZXJpYWxpemVyRmFjdG9yeSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5vcGVyYXRpb25GYWN0b3J5O1xyXG4gICAgfVxyXG5cclxuICAgIGdldFBhcmFtZXRlclNlcmlhbGl6ZXJGYWN0b3J5KCk6IElQYXJhbWV0ZXJTZXJpYWxpemVyRmFjdG9yeSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLnBhcmFtZXRlckZhY3RvcnkpIHtcclxuICAgICAgICAgICAgdGhpcy5wYXJhbWV0ZXJGYWN0b3J5ID0gbmV3IERlZmF1bHRQYXJhbWV0ZXJTZXJpYWxpemVyRmFjdG9yeSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5wYXJhbWV0ZXJGYWN0b3J5O1xyXG4gICAgfVxyXG5cclxuICAgIGdldFByb3BlcnR5U2VyaWFsaXplckZhY3RvcnkoKTogSVByb3BlcnR5U2VyaWFsaXplckZhY3Rvcnkge1xyXG4gICAgICAgIGlmICghdGhpcy5wcm9wZXJ0eUZhY3RvcnkpIHtcclxuICAgICAgICAgICAgdGhpcy5wcm9wZXJ0eUZhY3RvcnkgPSBuZXcgRGVmYXVsdFByb3BlcnR5U2VyaWFsaXplckZhY3RvcnkoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvcGVydHlGYWN0b3J5O1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGdldEdzcENvbXBvbmVudFNlcmlhbGl6ZXJGYWN0b3J5KCk6IElHc3BDb21wb25lbnRTZXJpYWxpemVyRmFjdG9yeSB7XHJcbiAgICAvLyAgICAgaWYgKCF0aGlzLmdzcENvbXBvbmVudEZhY3RvcnkpIHtcclxuICAgIC8vICAgICAgICAgdGhpcy5nc3BDb21wb25lbnRGYWN0b3J5ID0gbmV3IERlZmF1bHRHc3BDb21wb25lbnRTZXJpYWxpemVyRmFjdG9yeSgpO1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vICAgICByZXR1cm4gdGhpcy5nc3BDb21wb25lbnRGYWN0b3J5O1xyXG4gICAgLy8gfVxyXG5cclxufSJdfQ==