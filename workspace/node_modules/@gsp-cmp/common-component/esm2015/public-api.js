/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * Public API Surface of component
 */
/**
 * define
 */
export { GspComponent } from './define/gsp-component';
export { StructureReferType } from './define/data-type/structure-refer-type';
export { RefStructureInfo } from './define/ref-structure-info';
/**
 * Constant
 */
export { GspComponentConstant } from './define/gsp-component-constant';
/**
 * convertor
 */
export { GspComponentConvertor } from "./convertor/gsp-component-convertor";
export { RefStructureUtil } from "./convertor/util/ref-structure-util";
export { StructureReferTypeConvertor } from "./convertor/data-type/structure-refer-type-convertor";
/**
 * default serialize context
 */
export { DefaultGspComponentSerializeContext } from './serialize-context/default/default-gsp-component-serialize-context';
export { DefaultGspComponentDataTypeSerializerFactory } from './serialize-context/default/factory/default-gsp-component-data-type-serializer-factory';
export { DefaultGspComponentSerializerFactory } from './serialize-context/default/factory/default-gsp-component-serializer-factory';
export { DefaultGspComponentDataTypeSerializer } from './serialize-context/default/serializer/default-gsp-component-data-type-serializer';
export { DefaultGspComponentSerializer } from './serialize-context/default/serializer/default-gsp-component-serializer';
export { CommonComponentModule } from './common-component.module';
export { CommonComponentService } from './service/common-component.service';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtY21wL2NvbW1vbi1jb21wb25lbnQvIiwic291cmNlcyI6WyJwdWJsaWMtYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFPQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDN0UsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7Ozs7QUFLL0QsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0saUNBQWlDLENBQUM7Ozs7QUFLdkUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDNUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDdkUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sc0RBQXNELENBQUE7Ozs7QUFhbEcsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLE1BQU0scUVBQXFFLENBQUM7QUFDMUgsT0FBTyxFQUFFLDRDQUE0QyxFQUFFLE1BQU0sd0ZBQXdGLENBQUM7QUFDdEosT0FBTyxFQUFFLG9DQUFvQyxFQUFFLE1BQU0sOEVBQThFLENBQUM7QUFDcEksT0FBTyxFQUFFLHFDQUFxQyxFQUFFLE1BQU0sbUZBQW1GLENBQUM7QUFDMUksT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0seUVBQXlFLENBQUM7QUFHeEgsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFbEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sb0NBQW9DLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogUHVibGljIEFQSSBTdXJmYWNlIG9mIGNvbXBvbmVudFxuICovXG5cbi8qKlxuICogZGVmaW5lXG4gKi9cbmV4cG9ydCB7IEdzcENvbXBvbmVudCB9IGZyb20gJy4vZGVmaW5lL2dzcC1jb21wb25lbnQnO1xuZXhwb3J0IHsgU3RydWN0dXJlUmVmZXJUeXBlIH0gZnJvbSAnLi9kZWZpbmUvZGF0YS10eXBlL3N0cnVjdHVyZS1yZWZlci10eXBlJztcbmV4cG9ydCB7IFJlZlN0cnVjdHVyZUluZm8gfSBmcm9tICcuL2RlZmluZS9yZWYtc3RydWN0dXJlLWluZm8nO1xuXG4vKipcbiAqIENvbnN0YW50XG4gKi9cbmV4cG9ydCB7IEdzcENvbXBvbmVudENvbnN0YW50IH0gZnJvbSAnLi9kZWZpbmUvZ3NwLWNvbXBvbmVudC1jb25zdGFudCc7XG5cbi8qKlxuICogY29udmVydG9yXG4gKi9cbmV4cG9ydCB7IEdzcENvbXBvbmVudENvbnZlcnRvciB9IGZyb20gXCIuL2NvbnZlcnRvci9nc3AtY29tcG9uZW50LWNvbnZlcnRvclwiO1xuZXhwb3J0IHsgUmVmU3RydWN0dXJlVXRpbCB9IGZyb20gXCIuL2NvbnZlcnRvci91dGlsL3JlZi1zdHJ1Y3R1cmUtdXRpbFwiO1xuZXhwb3J0IHsgU3RydWN0dXJlUmVmZXJUeXBlQ29udmVydG9yIH0gZnJvbSBcIi4vY29udmVydG9yL2RhdGEtdHlwZS9zdHJ1Y3R1cmUtcmVmZXItdHlwZS1jb252ZXJ0b3JcIlxuXG5cbi8qKlxuICogc2VyaWFsaXplLWNvbnRleHRcbiAqL1xuZXhwb3J0IHsgSUdzcENvbXBvbmVudFNlcmlhbGl6ZUNvbnRleHQgfSBmcm9tICcuL3NlcmlhbGl6ZS1jb250ZXh0L2V4dGVuc2lvbi9pLWdzcC1jb21wb25lbnQtc2VyaWFsaXplLWNvbnRleHQnO1xuZXhwb3J0IHsgSUdzcENvbXBvbmVudFNlcmlhbGl6ZXJGYWN0b3J5IH0gZnJvbSAnLi9zZXJpYWxpemUtY29udGV4dC9leHRlbnNpb24vZmFjdG9yeS9pLWdzcC1jb21wb25lbnQtc2VyaWFsaXplci1mYWN0b3J5JztcbmV4cG9ydCB7IElHc3BDb21wb25lbnRTZXJpYWxpemVyIH0gZnJvbSAnLi9zZXJpYWxpemUtY29udGV4dC9leHRlbnNpb24vc2VyaWFsaXplci9pLWdzcC1jb21wb25lbnQtc2VyaWFsaXplcic7XG5cbi8qKlxuICogZGVmYXVsdCBzZXJpYWxpemUgY29udGV4dFxuICovXG5leHBvcnQgeyBEZWZhdWx0R3NwQ29tcG9uZW50U2VyaWFsaXplQ29udGV4dCB9IGZyb20gJy4vc2VyaWFsaXplLWNvbnRleHQvZGVmYXVsdC9kZWZhdWx0LWdzcC1jb21wb25lbnQtc2VyaWFsaXplLWNvbnRleHQnO1xuZXhwb3J0IHsgRGVmYXVsdEdzcENvbXBvbmVudERhdGFUeXBlU2VyaWFsaXplckZhY3RvcnkgfSBmcm9tICcuL3NlcmlhbGl6ZS1jb250ZXh0L2RlZmF1bHQvZmFjdG9yeS9kZWZhdWx0LWdzcC1jb21wb25lbnQtZGF0YS10eXBlLXNlcmlhbGl6ZXItZmFjdG9yeSc7XG5leHBvcnQgeyBEZWZhdWx0R3NwQ29tcG9uZW50U2VyaWFsaXplckZhY3RvcnkgfSBmcm9tICcuL3NlcmlhbGl6ZS1jb250ZXh0L2RlZmF1bHQvZmFjdG9yeS9kZWZhdWx0LWdzcC1jb21wb25lbnQtc2VyaWFsaXplci1mYWN0b3J5JztcbmV4cG9ydCB7IERlZmF1bHRHc3BDb21wb25lbnREYXRhVHlwZVNlcmlhbGl6ZXIgfSBmcm9tICcuL3NlcmlhbGl6ZS1jb250ZXh0L2RlZmF1bHQvc2VyaWFsaXplci9kZWZhdWx0LWdzcC1jb21wb25lbnQtZGF0YS10eXBlLXNlcmlhbGl6ZXInO1xuZXhwb3J0IHsgRGVmYXVsdEdzcENvbXBvbmVudFNlcmlhbGl6ZXIgfSBmcm9tICcuL3NlcmlhbGl6ZS1jb250ZXh0L2RlZmF1bHQvc2VyaWFsaXplci9kZWZhdWx0LWdzcC1jb21wb25lbnQtc2VyaWFsaXplcic7XG5cblxuZXhwb3J0IHsgQ29tbW9uQ29tcG9uZW50TW9kdWxlIH0gZnJvbSAnLi9jb21tb24tY29tcG9uZW50Lm1vZHVsZSc7XG5cbmV4cG9ydCB7IENvbW1vbkNvbXBvbmVudFNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2UvY29tbW9uLWNvbXBvbmVudC5zZXJ2aWNlJztcbiJdfQ==