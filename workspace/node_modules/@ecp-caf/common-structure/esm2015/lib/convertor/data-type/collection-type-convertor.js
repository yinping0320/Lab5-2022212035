/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DataTypeConvertUtil } from '../utils/data-type-convert-util';
import { ExtensionConvertor } from '../extension/extension-convertor';
export class CollectionTypeConvertor {
    /**
     * @param {?} obj
     * @param {?} datatype
     * @param {?} ctxt
     * @return {?}
     */
    convertToObject(obj, datatype, ctxt) {
        if (!datatype) {
            return;
        }
        /** @type {?} */
        let collectiontype = (/** @type {?} */ (datatype));
        obj['kind'] = collectiontype.kind;
        obj['elementType'] = null;
        if (collectiontype.elementType) {
            /** @type {?} */
            let kind = collectiontype.elementType.getKind();
            if (!kind) {
                throw new Error('集合类型序列化时TypeKind为空！');
            }
            obj['elementType'] = DataTypeConvertUtil.convertToObject(collectiontype.elementType, ctxt);
        }
        if (collectiontype.extension) {
            /** @type {?} */
            let extensionConvertor = new ExtensionConvertor();
            extensionConvertor.addToJObj(collectiontype, obj);
        }
    }
    /**
     * @param {?} dataType
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    initFromObject(dataType, obj, ctxt) {
        /** @type {?} */
        var collectionType = (/** @type {?} */ (dataType));
        if (!obj) {
            return;
        }
        collectionType.kind = obj['kind'];
        if (obj['elementType']) {
            /** @type {?} */
            let kind = obj['elementType']['kind'];
            if (!kind) {
                throw new Error('解析CollectionType时数据类型的TypeKind为空！');
            }
            collectionType.elementType = DataTypeConvertUtil.initFromObject(obj['elementType'], ctxt);
        }
        if (obj["extension"]) {
            /** @type {?} */
            let extensionConvertor = new ExtensionConvertor();
            extensionConvertor.addToObj(collectionType, obj);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sbGVjdGlvbi10eXBlLWNvbnZlcnRvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlY3AtY2FmL2NvbW1vbi1zdHJ1Y3R1cmUvIiwic291cmNlcyI6WyJsaWIvY29udmVydG9yL2RhdGEtdHlwZS9jb2xsZWN0aW9uLXR5cGUtY29udmVydG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUd0RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUV0RSxNQUFNLE9BQU8sdUJBQXVCOzs7Ozs7O0lBRWhDLGVBQWUsQ0FBQyxHQUFXLEVBQUUsUUFBbUIsRUFBRSxJQUF1QjtRQUNyRSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ1gsT0FBTztTQUNWOztZQUNHLGNBQWMsR0FBRyxtQkFBQSxRQUFRLEVBQWtCO1FBQy9DLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxjQUFjLENBQUMsSUFBSSxDQUFDO1FBQ2xDLEdBQUcsQ0FBQyxhQUFhLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDMUIsSUFBSSxjQUFjLENBQUMsV0FBVyxFQUFFOztnQkFDeEIsSUFBSSxHQUFHLGNBQWMsQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFO1lBQy9DLElBQUksQ0FBQyxJQUFJLEVBQUU7Z0JBQ1AsTUFBTSxJQUFJLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO2FBQzFDO1lBQ0QsR0FBRyxDQUFDLGFBQWEsQ0FBQyxHQUFHLG1CQUFtQixDQUFDLGVBQWUsQ0FBQyxjQUFjLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQzlGO1FBRUQsSUFBSSxjQUFjLENBQUMsU0FBUyxFQUFFOztnQkFDdEIsa0JBQWtCLEdBQUcsSUFBSSxrQkFBa0IsRUFBRTtZQUNqRCxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsY0FBYyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1NBQ3JEO0lBQ0wsQ0FBQzs7Ozs7OztJQUVELGNBQWMsQ0FBQyxRQUFtQixFQUFFLEdBQVcsRUFBRSxJQUF1Qjs7WUFDaEUsY0FBYyxHQUFHLG1CQUFBLFFBQVEsRUFBa0I7UUFDL0MsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNOLE9BQU87U0FDVjtRQUNELGNBQWMsQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2xDLElBQUksR0FBRyxDQUFDLGFBQWEsQ0FBQyxFQUFFOztnQkFDaEIsSUFBSSxHQUFHLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQyxNQUFNLENBQUM7WUFDckMsSUFBSSxDQUFDLElBQUksRUFBRTtnQkFDUCxNQUFNLElBQUksS0FBSyxDQUFDLG1DQUFtQyxDQUFDLENBQUM7YUFDeEQ7WUFDRCxjQUFjLENBQUMsV0FBVyxHQUFHLG1CQUFtQixDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDN0Y7UUFDRCxJQUFJLEdBQUcsQ0FBQyxXQUFXLENBQUMsRUFBRTs7Z0JBQ2Qsa0JBQWtCLEdBQUcsSUFBSSxrQkFBa0IsRUFBRTtZQUNqRCxrQkFBa0IsQ0FBQyxRQUFRLENBQUMsY0FBYyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1NBQ3BEO0lBQ0wsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29sbGVjdGlvblR5cGUgfSBmcm9tICcuLi8uLi9kZWZpbmUvZGF0YS10eXBlL2NvbGxlY3Rpb24tdHlwZS9jb2xsZWN0aW9uLXR5cGUnO1xyXG5pbXBvcnQgeyBEYXRhVHlwZUNvbnZlcnRVdGlsIH0gZnJvbSAnLi4vdXRpbHMvZGF0YS10eXBlLWNvbnZlcnQtdXRpbCc7XHJcbmltcG9ydCB7IElEYXRhVHlwZSB9IGZyb20gJy4uLy4uL2RlZmluZS9kYXRhLXR5cGUvaS1kYXRhLXR5cGUnO1xyXG5pbXBvcnQgeyBJU2VyaWFsaXplQ29udGV4dCB9IGZyb20gJy4uLy4uL3NlcmlhbGl6ZS1jb250ZXh0L2V4dGVuc2lvbi9pLXNlcmlhbGl6ZS1jb250ZXh0JztcclxuaW1wb3J0IHsgRXh0ZW5zaW9uQ29udmVydG9yIH0gZnJvbSAnLi4vZXh0ZW5zaW9uL2V4dGVuc2lvbi1jb252ZXJ0b3InO1xyXG5cclxuZXhwb3J0IGNsYXNzIENvbGxlY3Rpb25UeXBlQ29udmVydG9yIHtcclxuXHJcbiAgICBjb252ZXJ0VG9PYmplY3Qob2JqOiBPYmplY3QsIGRhdGF0eXBlOiBJRGF0YVR5cGUsIGN0eHQ6IElTZXJpYWxpemVDb250ZXh0KTogdm9pZCB7XHJcbiAgICAgICAgaWYgKCFkYXRhdHlwZSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBjb2xsZWN0aW9udHlwZSA9IGRhdGF0eXBlIGFzIENvbGxlY3Rpb25UeXBlO1xyXG4gICAgICAgIG9ialsna2luZCddID0gY29sbGVjdGlvbnR5cGUua2luZDtcclxuICAgICAgICBvYmpbJ2VsZW1lbnRUeXBlJ10gPSBudWxsO1xyXG4gICAgICAgIGlmIChjb2xsZWN0aW9udHlwZS5lbGVtZW50VHlwZSkge1xyXG4gICAgICAgICAgICBsZXQga2luZCA9IGNvbGxlY3Rpb250eXBlLmVsZW1lbnRUeXBlLmdldEtpbmQoKTtcclxuICAgICAgICAgICAgaWYgKCFraW5kKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ+mbhuWQiOexu+Wei+W6j+WIl+WMluaXtlR5cGVLaW5k5Li656m677yBJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgb2JqWydlbGVtZW50VHlwZSddID0gRGF0YVR5cGVDb252ZXJ0VXRpbC5jb252ZXJ0VG9PYmplY3QoY29sbGVjdGlvbnR5cGUuZWxlbWVudFR5cGUsIGN0eHQpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGNvbGxlY3Rpb250eXBlLmV4dGVuc2lvbikge1xyXG4gICAgICAgICAgICBsZXQgZXh0ZW5zaW9uQ29udmVydG9yID0gbmV3IEV4dGVuc2lvbkNvbnZlcnRvcigpO1xyXG4gICAgICAgICAgICBleHRlbnNpb25Db252ZXJ0b3IuYWRkVG9KT2JqKGNvbGxlY3Rpb250eXBlLCBvYmopO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpbml0RnJvbU9iamVjdChkYXRhVHlwZTogSURhdGFUeXBlLCBvYmo6IE9iamVjdCwgY3R4dDogSVNlcmlhbGl6ZUNvbnRleHQpOiB2b2lkIHtcclxuICAgICAgICB2YXIgY29sbGVjdGlvblR5cGUgPSBkYXRhVHlwZSBhcyBDb2xsZWN0aW9uVHlwZTtcclxuICAgICAgICBpZiAoIW9iaikge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbGxlY3Rpb25UeXBlLmtpbmQgPSBvYmpbJ2tpbmQnXTtcclxuICAgICAgICBpZiAob2JqWydlbGVtZW50VHlwZSddKSB7XHJcbiAgICAgICAgICAgIGxldCBraW5kID0gb2JqWydlbGVtZW50VHlwZSddWydraW5kJ107XHJcbiAgICAgICAgICAgIGlmICgha2luZCkge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfop6PmnpBDb2xsZWN0aW9uVHlwZeaXtuaVsOaNruexu+Wei+eahFR5cGVLaW5k5Li656m677yBJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29sbGVjdGlvblR5cGUuZWxlbWVudFR5cGUgPSBEYXRhVHlwZUNvbnZlcnRVdGlsLmluaXRGcm9tT2JqZWN0KG9ialsnZWxlbWVudFR5cGUnXSwgY3R4dCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChvYmpbXCJleHRlbnNpb25cIl0pIHtcclxuICAgICAgICAgICAgbGV0IGV4dGVuc2lvbkNvbnZlcnRvciA9IG5ldyBFeHRlbnNpb25Db252ZXJ0b3IoKTtcclxuICAgICAgICAgICAgZXh0ZW5zaW9uQ29udmVydG9yLmFkZFRvT2JqKGNvbGxlY3Rpb25UeXBlLCBvYmopO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ==