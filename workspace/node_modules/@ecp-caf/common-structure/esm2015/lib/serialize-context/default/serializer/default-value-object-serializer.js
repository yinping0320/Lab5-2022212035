/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ValueObjectConvertor } from '../../../convertor/structure/value-object-convertor';
import { ValueObject } from '../../../define/structure/value-object';
export class DefaultValueObjectSerializer {
    /**
     * @param {?} structure
     * @param {?} ctxt
     * @return {?}
     */
    serialize(structure, ctxt) {
        /** @type {?} */
        let result = new Object();
        /** @type {?} */
        let baseConvertor = new ValueObjectConvertor();
        /** @type {?} */
        let valueObject = (/** @type {?} */ (structure));
        baseConvertor.convertToObject(result, valueObject, ctxt);
        return result;
    }
    /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    deserialize(obj, ctxt) {
        /** @type {?} */
        let result = new ValueObject();
        /** @type {?} */
        let baseConvertor = new ValueObjectConvertor();
        baseConvertor.initFromObject(result, obj, ctxt);
        return result;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC12YWx1ZS1vYmplY3Qtc2VyaWFsaXplci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlY3AtY2FmL2NvbW1vbi1zdHJ1Y3R1cmUvIiwic291cmNlcyI6WyJsaWIvc2VyaWFsaXplLWNvbnRleHQvZGVmYXVsdC9zZXJpYWxpemVyL2RlZmF1bHQtdmFsdWUtb2JqZWN0LXNlcmlhbGl6ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUdBLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHFEQUFxRCxDQUFDO0FBQzNGLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUdyRSxNQUFNLE9BQU8sNEJBQTRCOzs7Ozs7SUFDckMsU0FBUyxDQUFDLFNBQTBCLEVBQUUsSUFBc0M7O1lBQ3BFLE1BQU0sR0FBRyxJQUFJLE1BQU0sRUFBRTs7WUFDckIsYUFBYSxHQUFHLElBQUksb0JBQW9CLEVBQUU7O1lBQzFDLFdBQVcsR0FBRyxtQkFBQSxTQUFTLEVBQWU7UUFDMUMsYUFBYSxDQUFDLGVBQWUsQ0FBQyxNQUFNLEVBQUUsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3pELE9BQU8sTUFBTSxDQUFDO0lBRWxCLENBQUM7Ozs7OztJQUdELFdBQVcsQ0FBQyxHQUFXLEVBQUUsSUFBc0M7O1lBQ3ZELE1BQU0sR0FBRyxJQUFJLFdBQVcsRUFBRTs7WUFDMUIsYUFBYSxHQUFHLElBQUksb0JBQW9CLEVBQUU7UUFDOUMsYUFBYSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2hELE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7Q0FFSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElDb21tb25TdHJ1Y3R1cmVTZXJpYWxpemVyIH0gZnJvbSAnLi4vLi4vZXh0ZW5zaW9uL3NlcmlhbGl6ZXIvaS1jb21tb24tc3RydWN0dXJlLXNlcmlhbGl6ZXInO1xyXG5pbXBvcnQgeyBDb21tb25TdHJ1Y3R1cmUgfSBmcm9tICcuLi8uLi8uLi9kZWZpbmUvc3RydWN0dXJlL2NvbW1vbi1zdHJ1Y3R1cmUnO1xyXG5pbXBvcnQgeyBJU2VyaWFsaXplQ29udGV4dCB9IGZyb20gJy4uLy4uL2V4dGVuc2lvbi9pLXNlcmlhbGl6ZS1jb250ZXh0JztcclxuaW1wb3J0IHsgVmFsdWVPYmplY3RDb252ZXJ0b3IgfSBmcm9tICcuLi8uLi8uLi9jb252ZXJ0b3Ivc3RydWN0dXJlL3ZhbHVlLW9iamVjdC1jb252ZXJ0b3InO1xyXG5pbXBvcnQgeyBWYWx1ZU9iamVjdCB9IGZyb20gJy4uLy4uLy4uL2RlZmluZS9zdHJ1Y3R1cmUvdmFsdWUtb2JqZWN0JztcclxuaW1wb3J0IHsgSUNvbW1vblN0cnVjdHVyZVNlcmlhbGl6ZUNvbnRleHQgfSBmcm9tICcuLi8uLi9leHRlbnNpb24vaS1jb21tb24tc3RydWN0dXJlLXNlcmlhbGl6ZS1jb250ZXh0JztcclxuXHJcbmV4cG9ydCBjbGFzcyBEZWZhdWx0VmFsdWVPYmplY3RTZXJpYWxpemVyIGltcGxlbWVudHMgSUNvbW1vblN0cnVjdHVyZVNlcmlhbGl6ZXIge1xyXG4gICAgc2VyaWFsaXplKHN0cnVjdHVyZTogQ29tbW9uU3RydWN0dXJlLCBjdHh0OiBJQ29tbW9uU3RydWN0dXJlU2VyaWFsaXplQ29udGV4dCk6IE9iamVjdCB7XHJcbiAgICAgICAgbGV0IHJlc3VsdCA9IG5ldyBPYmplY3QoKTtcclxuICAgICAgICBsZXQgYmFzZUNvbnZlcnRvciA9IG5ldyBWYWx1ZU9iamVjdENvbnZlcnRvcigpO1xyXG4gICAgICAgIGxldCB2YWx1ZU9iamVjdCA9IHN0cnVjdHVyZSBhcyBWYWx1ZU9iamVjdDtcclxuICAgICAgICBiYXNlQ29udmVydG9yLmNvbnZlcnRUb09iamVjdChyZXN1bHQsIHZhbHVlT2JqZWN0LCBjdHh0KTtcclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG5cclxuICAgIH1cclxuXHJcblxyXG4gICAgZGVzZXJpYWxpemUob2JqOiBPYmplY3QsIGN0eHQ6IElDb21tb25TdHJ1Y3R1cmVTZXJpYWxpemVDb250ZXh0KTogQ29tbW9uU3RydWN0dXJlIHtcclxuICAgICAgICBsZXQgcmVzdWx0ID0gbmV3IFZhbHVlT2JqZWN0KCk7XHJcbiAgICAgICAgbGV0IGJhc2VDb252ZXJ0b3IgPSBuZXcgVmFsdWVPYmplY3RDb252ZXJ0b3IoKTtcclxuICAgICAgICBiYXNlQ29udmVydG9yLmluaXRGcm9tT2JqZWN0KHJlc3VsdCwgb2JqLCBjdHh0KTtcclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG5cclxufSJdfQ==