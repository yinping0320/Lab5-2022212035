/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DEFAULT_PARAMETER } from '../default-constant';
import { DefaultParameterSerializer } from '../serializer/default-parameter-serializer';
export class DefaultParameterSerializerFactory {
    constructor() {
        this.serializerDict = {};
    }
    /**
     * @param {?} kind
     * @return {?}
     */
    get(kind) {
        switch (kind) {
            case DEFAULT_PARAMETER:
                if (!this.serializerDict[kind]) {
                    /** @type {?} */
                    var serializer = new DefaultParameterSerializer();
                    this.serializerDict[kind] = serializer;
                }
                break;
            default:
                throw new Error(`未匹配到类型为${kind}的序列化器!`);
        }
        return this.serializerDict[kind];
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    DefaultParameterSerializerFactory.prototype.serializerDict;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1wYXJhbWV0ZXItc2VyaWFsaXplci1mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVjcC1jYWYvY29tbW9uLXN0cnVjdHVyZS8iLCJzb3VyY2VzIjpbImxpYi9zZXJpYWxpemUtY29udGV4dC9kZWZhdWx0L2ZhY3RvcnkvZGVmYXVsdC1wYXJhbWV0ZXItc2VyaWFsaXplci1mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUV4RixNQUFNLE9BQU8saUNBQWlDO0lBQTlDO1FBQ1ksbUJBQWMsR0FBNEMsRUFBRSxDQUFDO0lBZ0J6RSxDQUFDOzs7OztJQWRHLEdBQUcsQ0FBQyxJQUFZO1FBQ1osUUFBUSxJQUFJLEVBQUU7WUFDVixLQUFLLGlCQUFpQjtnQkFDbEIsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEVBQUU7O3dCQUN4QixVQUFVLEdBQUcsSUFBSSwwQkFBMEIsRUFBRTtvQkFDakQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsR0FBRyxVQUFVLENBQUM7aUJBQzFDO2dCQUNELE1BQU07WUFDVjtnQkFDSSxNQUFNLElBQUksS0FBSyxDQUFDLFVBQVUsSUFBSSxRQUFRLENBQUMsQ0FBQztTQUMvQztRQUNELE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNyQyxDQUFDO0NBRUo7Ozs7OztJQWhCRywyREFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJUGFyYW1ldGVyU2VyaWFsaXplckZhY3RvcnkgfSBmcm9tICcuLi8uLi9leHRlbnNpb24vZmFjdG9yeS9pLXBhcmFtZXRlci1zZXJpYWxpemVyLWZhY3RvcnknO1xyXG5pbXBvcnQgeyBJUGFyYW1ldGVyU2VyaWFsaXplciB9IGZyb20gJy4uLy4uL2V4dGVuc2lvbi9zZXJpYWxpemVyL2ktcGFyYW1ldGVyLXNlcmlhbGl6ZXInO1xyXG5pbXBvcnQgeyBERUZBVUxUX1BBUkFNRVRFUiB9IGZyb20gJy4uL2RlZmF1bHQtY29uc3RhbnQnO1xyXG5pbXBvcnQgeyBEZWZhdWx0UGFyYW1ldGVyU2VyaWFsaXplciB9IGZyb20gJy4uL3NlcmlhbGl6ZXIvZGVmYXVsdC1wYXJhbWV0ZXItc2VyaWFsaXplcic7XHJcblxyXG5leHBvcnQgY2xhc3MgRGVmYXVsdFBhcmFtZXRlclNlcmlhbGl6ZXJGYWN0b3J5IGltcGxlbWVudHMgSVBhcmFtZXRlclNlcmlhbGl6ZXJGYWN0b3J5e1xyXG4gICAgcHJpdmF0ZSBzZXJpYWxpemVyRGljdDogeyBba2V5OiBzdHJpbmddOiBJUGFyYW1ldGVyU2VyaWFsaXplciB9ID0ge307XHJcblxyXG4gICAgZ2V0KGtpbmQ6IHN0cmluZyk6IElQYXJhbWV0ZXJTZXJpYWxpemVyIHtcclxuICAgICAgICBzd2l0Y2ggKGtpbmQpIHtcclxuICAgICAgICAgICAgY2FzZSBERUZBVUxUX1BBUkFNRVRFUjpcclxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5zZXJpYWxpemVyRGljdFtraW5kXSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBzZXJpYWxpemVyID0gbmV3IERlZmF1bHRQYXJhbWV0ZXJTZXJpYWxpemVyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXJpYWxpemVyRGljdFtraW5kXSA9IHNlcmlhbGl6ZXI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihg5pyq5Yy56YWN5Yiw57G75Z6L5Li6JHtraW5kfeeahOW6j+WIl+WMluWZqCFgKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc2VyaWFsaXplckRpY3Rba2luZF07XHJcbiAgICB9XHJcblxyXG59Il19