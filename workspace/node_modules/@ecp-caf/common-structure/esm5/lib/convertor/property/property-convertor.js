/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DataTypeConvertUtil } from '../utils/data-type-convert-util';
import { ExtensionConvertor } from '../extension/extension-convertor';
var PropertyConvertor = /** @class */ (function () {
    function PropertyConvertor() {
    }
    /**
     * @param {?} obj
     * @param {?} property
     * @param {?} ctxt
     * @return {?}
     */
    PropertyConvertor.prototype.convertToObject = /**
     * @param {?} obj
     * @param {?} property
     * @param {?} ctxt
     * @return {?}
     */
    function (obj, property, ctxt) {
        if (!property) {
            return;
        }
        obj['kind'] = property.kind;
        obj['id'] = property.id;
        obj['code'] = property.code;
        obj['name'] = property.name;
        obj['description'] = property.description;
        obj['defaultValue'] = property.defaultValue;
        obj['required'] = (/** @type {?} */ (property.required));
        if (property.propertyType) {
            /** @type {?} */
            var kind = property.propertyType.getKind();
            if (!kind) {
                throw new Error('属性序列化时属性类型获取TypeKind为空格！');
            }
            obj['propertyType'] = DataTypeConvertUtil.convertToObject(property.propertyType, ctxt);
        }
        obj['constraint'] = null;
        if (property.constraint) {
            /** @type {?} */
            var kind = property.constraint.getKind();
            if (!kind) {
                throw new Error('属性序列化时属性约束获取ConstraintKind为空格！');
            }
            obj['constraint'] = ctxt.getConstraintSerializerFactory().get(kind).serialize(property.constraint, ctxt);
        }
        if (property.extension) {
            /** @type {?} */
            var extensionConvertor = new ExtensionConvertor();
            extensionConvertor.addToJObj(property, obj);
        }
    };
    /**
     * @param {?} property
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    PropertyConvertor.prototype.initFromObject = /**
     * @param {?} property
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    function (property, obj, ctxt) {
        if (!obj) {
            return;
        }
        property.kind = obj['kind'];
        property.id = obj['id'];
        property.code = obj['code'];
        property.name = obj['name'];
        property.defaultValue = obj['defaultValue'];
        property.required = (/** @type {?} */ (obj['required']));
        property.description = obj['description'];
        if (obj['propertyType']) {
            /** @type {?} */
            var kind = obj['propertyType']['kind'];
            if (!kind) {
                throw new Error('解析属性时数据类型的TypeKind为空！');
            }
            property.propertyType = DataTypeConvertUtil.initFromObject(obj['propertyType'], ctxt);
        }
        if (obj['constraint']) {
            /** @type {?} */
            var kind = obj['constraint']['kind'];
            if (!kind) {
                throw new Error('解析属性时约束类型的ConstraintKind为空！');
            }
            property.constraint = ctxt.getConstraintSerializerFactory().get(kind).deserialize(obj['constraint'], ctxt);
        }
        if (obj["extension"]) {
            /** @type {?} */
            var extensionConvertor = new ExtensionConvertor();
            extensionConvertor.addToObj(property, obj);
        }
    };
    return PropertyConvertor;
}());
export { PropertyConvertor };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcGVydHktY29udmVydG9yLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVjcC1jYWYvY29tbW9uLXN0cnVjdHVyZS8iLCJzb3VyY2VzIjpbImxpYi9jb252ZXJ0b3IvcHJvcGVydHkvcHJvcGVydHktY29udmVydG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUV0RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUV0RTtJQUFBO0lBcUVBLENBQUM7Ozs7Ozs7SUFuRUcsMkNBQWU7Ozs7OztJQUFmLFVBQWdCLEdBQVcsRUFBRSxRQUFrQixFQUFFLElBQXVCO1FBQ3BFLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDWCxPQUFPO1NBQ1Y7UUFDRCxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQztRQUM1QixHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsUUFBUSxDQUFDLEVBQUUsQ0FBQztRQUN4QixHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQztRQUM1QixHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQztRQUM1QixHQUFHLENBQUMsYUFBYSxDQUFDLEdBQUcsUUFBUSxDQUFDLFdBQVcsQ0FBQztRQUMxQyxHQUFHLENBQUMsY0FBYyxDQUFDLEdBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQztRQUM1QyxHQUFHLENBQUMsVUFBVSxDQUFDLEdBQUcsbUJBQVMsUUFBUSxDQUFDLFFBQVEsRUFBQSxDQUFDO1FBRTdDLElBQUksUUFBUSxDQUFDLFlBQVksRUFBRTs7Z0JBQ25CLElBQUksR0FBRyxRQUFRLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRTtZQUMxQyxJQUFJLENBQUMsSUFBSSxFQUFFO2dCQUNQLE1BQU0sSUFBSSxLQUFLLENBQUMsMEJBQTBCLENBQUMs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cm9tICcuLi8uLi9kZWZpbmUvcHJvcGVydHkvcHJvcGVydHknO1xyXG5pbXBvcnQgeyBEYXRhVHlwZUNvbnZlcnRVdGlsIH0gZnJvbSAnLi4vdXRpbHMvZGF0YS10eXBlLWNvbnZlcnQtdXRpbCc7XHJcbmltcG9ydCB7IElTZXJpYWxpemVDb250ZXh0IH0gZnJvbSAnLi4vLi4vc2VyaWFsaXplLWNvbnRleHQvZXh0ZW5zaW9uL2ktc2VyaWFsaXplLWNvbnRleHQnO1xyXG5pbXBvcnQgeyBFeHRlbnNpb25Db252ZXJ0b3IgfSBmcm9tICcuLi9leHRlbnNpb24vZXh0ZW5zaW9uLWNvbnZlcnRvcic7XHJcblxyXG5leHBvcnQgY2xhc3MgUHJvcGVydHlDb252ZXJ0b3Ige1xyXG5cclxuICAgIGNvbnZlcnRUb09iamVjdChvYmo6IE9iamVjdCwgcHJvcGVydHk6IFByb3BlcnR5LCBjdHh0OiBJU2VyaWFsaXplQ29udGV4dCk6IHZvaWQge1xyXG4gICAgICAgIGlmICghcHJvcGVydHkpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBvYmpbJ2tpbmQnXSA9IHByb3BlcnR5LmtpbmQ7XHJcbiAgICAgICAgb2JqWydpZCddID0gcHJvcGVydHkuaWQ7XHJcbiAgICAgICAgb2JqWydjb2RlJ10gPSBwcm9wZXJ0eS5jb2RlO1xyXG4gICAgICAgIG9ialsnbmFtZSddID0gcHJvcGVydHkubmFtZTtcclxuICAgICAgICBvYmpbJ2Rlc2NyaXB0aW9uJ10gPSBwcm9wZXJ0eS5kZXNjcmlwdGlvbjtcclxuICAgICAgICBvYmpbJ2RlZmF1bHRWYWx1ZSddID0gcHJvcGVydHkuZGVmYXVsdFZhbHVlO1xyXG4gICAgICAgIG9ialsncmVxdWlyZWQnXSA9IDxib29sZWFuPnByb3BlcnR5LnJlcXVpcmVkO1xyXG5cclxuICAgICAgICBpZiAocHJvcGVydHkucHJvcGVydHlUeXBlKSB7XHJcbiAgICAgICAgICAgIGxldCBraW5kID0gcHJvcGVydHkucHJvcGVydHlUeXBlLmdldEtpbmQoKTtcclxuICAgICAgICAgICAgaWYgKCFraW5kKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ+WxnuaAp+W6j+WIl+WMluaXtuWxnuaAp+exu+Wei+iOt+WPllR5cGVLaW5k5Li656m65qC877yBJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgb2JqWydwcm9wZXJ0eVR5cGUnXSA9IERhdGFUeXBlQ29udmVydFV0aWwuY29udmVydFRvT2JqZWN0KHByb3BlcnR5LnByb3BlcnR5VHlwZSwgY3R4dCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIG9ialsnY29uc3RyYWludCddID0gbnVsbDtcclxuXHJcbiAgICAgICAgaWYgKHByb3BlcnR5LmNvbnN0cmFpbnQpIHtcclxuICAgICAgICAgICAgbGV0IGtpbmQgPSBwcm9wZXJ0eS5jb25zdHJhaW50LmdldEtpbmQoKTtcclxuICAgICAgICAgICAgaWYgKCFraW5kKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ+WxnuaAp+W6j+WIl+WMluaXtuWxnuaAp+e6puadn+iOt+WPlkNvbnN0cmFpbnRLaW5k5Li656m65qC877yBJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgb2JqWydjb25zdHJhaW50J10gPSBjdHh0LmdldENvbnN0cmFpbnRTZXJpYWxpemVyRmFjdG9yeSgpLmdldChraW5kKS5zZXJpYWxpemUocHJvcGVydHkuY29uc3RyYWludCxjdHh0KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChwcm9wZXJ0eS5leHRlbnNpb24pIHtcclxuICAgICAgICAgICAgbGV0IGV4dGVuc2lvbkNvbnZlcnRvciA9IG5ldyBFeHRlbnNpb25Db252ZXJ0b3IoKTtcclxuICAgICAgICAgICAgZXh0ZW5zaW9uQ29udmVydG9yLmFkZFRvSk9iaihwcm9wZXJ0eSwgb2JqKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdEZyb21PYmplY3QocHJvcGVydHk6IFByb3BlcnR5LCBvYmo6IE9iamVjdCwgY3R4dDogSVNlcmlhbGl6ZUNvbnRleHQpOiB2b2lkIHtcclxuICAgICAgICBpZiAoIW9iaikge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHByb3BlcnR5LmtpbmQgPSBvYmpbJ2tpbmQnXTtcclxuICAgICAgICBwcm9wZXJ0eS5pZCA9IG9ialsnaWQnXTtcclxuICAgICAgICBwcm9wZXJ0eS5jb2RlID0gb2JqWydjb2RlJ107XHJcbiAgICAgICAgcHJvcGVydHkubmFtZSA9IG9ialsnbmFtZSddO1xyXG4gICAgICAgIHByb3BlcnR5LmRlZmF1bHRWYWx1ZSA9IG9ialsnZGVmYXVsdFZhbHVlJ107XHJcbiAgICAgICAgcHJvcGVydHkucmVxdWlyZWQgPSBvYmpbJ3JlcXVpcmVkJ10gYXMgYm9vbGVhbjtcclxuICAgICAgICBwcm9wZXJ0eS5kZXNjcmlwdGlvbiA9IG9ialsnZGVzY3JpcHRpb24nXTtcclxuXHJcbiAgICAgICAgaWYgKG9ialsncHJvcGVydHlUeXBlJ10pIHtcclxuICAgICAgICAgICAgbGV0IGtpbmQgPSBvYmpbJ3Byb3BlcnR5VHlwZSddWydraW5kJ107XHJcbiAgICAgICAgICAgIGlmICgha2luZCkge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfop6PmnpDlsZ7mgKfml7bmlbDmja7nsbvlnovnmoRUeXBlS2luZOS4uuepuu+8gScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHByb3BlcnR5LnByb3BlcnR5VHlwZSA9IERhdGFUeXBlQ29udmVydFV0aWwuaW5pdEZyb21PYmplY3Qob2JqWydwcm9wZXJ0eVR5cGUnXSwgY3R4dCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChvYmpbJ2NvbnN0cmFpbnQnXSkge1xyXG4gICAgICAgICAgICBsZXQga2luZCA9IG9ialsnY29uc3RyYWludCddWydraW5kJ107XHJcbiAgICAgICAgICAgIGlmICgha2luZCkge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfop6PmnpDlsZ7mgKfml7bnuqbmnZ/nsbvlnovnmoRDb25zdHJhaW50S2luZOS4uuepuu+8gScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHByb3BlcnR5LmNvbnN0cmFpbnQgPSBjdHh0LmdldENvbnN0cmFpbnRTZXJpYWxpemVyRmFjdG9yeSgpLmdldChraW5kKS5kZXNlcmlhbGl6ZShvYmpbJ2NvbnN0cmFpbnQnXSxjdHh0KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChvYmpbXCJleHRlbnNpb25cIl0pIHtcclxuICAgICAgICAgICAgbGV0IGV4dGVuc2lvbkNvbnZlcnRvciA9IG5ldyBFeHRlbnNpb25Db252ZXJ0b3IoKTtcclxuICAgICAgICAgICAgZXh0ZW5zaW9uQ29udmVydG9yLmFkZFRvT2JqKHByb3BlcnR5LCBvYmopO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ==