/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { RelationConvertor } from './relation-convertor';
var RelationDictConvertor = /** @class */ (function () {
    function RelationDictConvertor() {
    }
    /**
     * @param {?} relationDict
     * @return {?}
     */
    RelationDictConvertor.prototype.convertorToObject = /**
     * @param {?} relationDict
     * @return {?}
     */
    function (relationDict) {
        return relationDict;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    RelationDictConvertor.prototype.initFromObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        /** @type {?} */
        var relationDict = new Object();
        if (!obj) {
            return (/** @type {?} */ (relationDict));
        }
        /** @type {?} */
        var pCodeList = Object.keys(obj);
        pCodeList.forEach((/**
         * @param {?} pCode
         * @return {?}
         */
        function (pCode) {
            /** @type {?} */
            var cDict = obj[pCode];
            if (cDict) {
                relationDict[pCode] = new Object();
                /** @type {?} */
                var cCodeList = Object.keys(cDict);
                cCodeList.forEach((/**
                 * @param {?} cCode
                 * @return {?}
                 */
                function (cCode) {
                    /** @type {?} */
                    var cValue = cDict[cCode];
                    if (cValue) {
                        relationDict[pCode][cCode] = new Array();
                        cValue.forEach((/**
                         * @param {?} relationObj
                         * @return {?}
                         */
                        function (relationObj) {
                            /** @type {?} */
                            var relationConvertor = new RelationConvertor();
                            /** @type {?} */
                            var relation = relationConvertor.initFromObject(relationObj);
                            relationDict[pCode][cCode].push(relation);
                        }));
                    }
                }));
            }
        }));
        return (/** @type {?} */ (relationDict));
    };
    return RelationDictConvertor;
}());
export { RelationDictConvertor };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVsYXRpb24tZGljdC1jb252ZXJ0b3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWNwLWNhZi9jb21tb24tc3RydWN0dXJlLyIsInNvdXJjZXMiOlsibGliL2NvbnZlcnRvci9zdHJ1Y3R1cmUvcmVsYXRpb24tZGljdC1jb252ZXJ0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBR3pEO0lBQUE7SUFnQ0EsQ0FBQzs7Ozs7SUE5QkcsaURBQWlCOzs7O0lBQWpCLFVBQWtCLFlBQTJEO1FBQ3pFLE9BQU8sWUFBWSxDQUFDO0lBQ3hCLENBQUM7Ozs7O0lBRUQsOENBQWM7Ozs7SUFBZCxVQUFlLEdBQVc7O1lBQ2xCLFlBQVksR0FBRyxJQUFJLE1BQU0sRUFBRTtRQUMvQixJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ04sT0FBTyxtQkFBQSxZQUFZLEVBQWlELENBQUM7U0FDeEU7O1lBQ0csU0FBUyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO1FBQ2hDLFNBQVMsQ0FBQyxPQUFPOzs7O1FBQUMsVUFBQSxLQUFLOztnQkFDZixLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQztZQUN0QixJQUFJLEtBQUssRUFBRTtnQkFDUCxZQUFZLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxNQUFNLEVBQUUsQ0FBQzs7b0JBQy9CLFNBQVMsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztnQkFDbEMsU0FBUyxDQUFDLE9BQU87Ozs7Z0JBQUMsVUFBQSxLQUFLOzt3QkFDZixNQUFNLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztvQkFDekIsSUFBSSxNQUFNLEVBQUU7d0JBQ1IsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksS0FBSyxFQUFrQixDQUFDO3dCQUN6RCxNQUFNLENBQUMsT0FBTzs7Ozt3QkFBQyxVQUFBLFdBQVc7O2dDQUNsQixpQkFBaUIsR0FBRyxJQUFJLGlCQUFpQixFQUFFOztnQ0FDM0MsUUFBUSxHQUFHLGlCQUFpQixDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUM7NEJBQzVELFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7d0JBQzlDLENBQUMsRUFBQyxDQUFBO3FCQUNMO2dCQUNMLENBQUMsRUFBQyxDQUFBO2FBQ0w7UUFDTCxDQUFDLEVBQUMsQ0FBQTtRQUNGLE9BQU8sbUJBQUEsWUFBWSxFQUFpRCxDQUFDO0lBQ3pFLENBQUM7SUFDTCw0QkFBQztBQUFELENBQUMsQUFoQ0QsSUFnQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWxhdGlvbkNvbnZlcnRvciB9IGZyb20gJy4vcmVsYXRpb24tY29udmVydG9yJztcclxuaW1wb3J0IHsgRW50aXR5UmVsYXRpb24gfSBmcm9tICcuLi8uLi9kZWZpbmUvc3RydWN0dXJlL2VudGl0eS1yZWxhdGlvbic7XHJcblxyXG5leHBvcnQgY2xhc3MgUmVsYXRpb25EaWN0Q29udmVydG9yIHtcclxuXHJcbiAgICBjb252ZXJ0b3JUb09iamVjdChyZWxhdGlvbkRpY3Q6IHsgc3RyaW5nOiB7IHN0cmluZzogQXJyYXk8RW50aXR5UmVsYXRpb24+IH0gfSk6IE9iamVjdCB7XHJcbiAgICAgICAgcmV0dXJuIHJlbGF0aW9uRGljdDtcclxuICAgIH1cclxuXHJcbiAgICBpbml0RnJvbU9iamVjdChvYmo6IE9iamVjdCk6IHsgc3RyaW5nOiB7IHN0cmluZzogQXJyYXk8RW50aXR5UmVsYXRpb24+IH0gfSB7XHJcbiAgICAgICAgbGV0IHJlbGF0aW9uRGljdCA9IG5ldyBPYmplY3QoKTtcclxuICAgICAgICBpZiAoIW9iaikge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVsYXRpb25EaWN0IGFzIHsgc3RyaW5nOiB7IHN0cmluZzogQXJyYXk8RW50aXR5UmVsYXRpb24+IH0gfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHBDb2RlTGlzdCA9IE9iamVjdC5rZXlzKG9iaik7XHJcbiAgICAgICAgcENvZGVMaXN0LmZvckVhY2gocENvZGUgPT4ge1xyXG4gICAgICAgICAgICBsZXQgY0RpY3QgPSBvYmpbcENvZGVdO1xyXG4gICAgICAgICAgICBpZiAoY0RpY3QpIHtcclxuICAgICAgICAgICAgICAgIHJlbGF0aW9uRGljdFtwQ29kZV0gPSBuZXcgT2JqZWN0KCk7XHJcbiAgICAgICAgICAgICAgICBsZXQgY0NvZGVMaXN0ID0gT2JqZWN0LmtleXMoY0RpY3QpO1xyXG4gICAgICAgICAgICAgICAgY0NvZGVMaXN0LmZvckVhY2goY0NvZGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBjVmFsdWUgPSBjRGljdFtjQ29kZV07XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNWYWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZWxhdGlvbkRpY3RbcENvZGVdW2NDb2RlXSA9IG5ldyBBcnJheTxFbnRpdHlSZWxhdGlvbj4oKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY1ZhbHVlLmZvckVhY2gocmVsYXRpb25PYmogPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHJlbGF0aW9uQ29udmVydG9yID0gbmV3IFJlbGF0aW9uQ29udmVydG9yKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgcmVsYXRpb24gPSByZWxhdGlvbkNvbnZlcnRvci5pbml0RnJvbU9iamVjdChyZWxhdGlvbk9iaik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxhdGlvbkRpY3RbcENvZGVdW2NDb2RlXS5wdXNoKHJlbGF0aW9uKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICByZXR1cm4gcmVsYXRpb25EaWN0IGFzIHsgc3RyaW5nOiB7IHN0cmluZzogQXJyYXk8RW50aXR5UmVsYXRpb24+IH0gfTtcclxuICAgIH1cclxufSJdfQ==