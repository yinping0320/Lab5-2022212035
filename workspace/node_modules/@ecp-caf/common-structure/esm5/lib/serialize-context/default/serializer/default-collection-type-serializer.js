/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CollectionTypeConvertor } from '../../../convertor/data-type/collection-type-convertor';
import { CollectionType } from '../../../define/data-type/collection-type/collection-type';
var DefaultCollectionTypeSerializer = /** @class */ (function () {
    function DefaultCollectionTypeSerializer() {
    }
    /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    DefaultCollectionTypeSerializer.prototype.serialize = /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    function (type, ctxt) {
        /** @type {?} */
        var result = new Object();
        /** @type {?} */
        var baseConvertor = new CollectionTypeConvertor();
        baseConvertor.convertToObject(result, type, ctxt);
        return result;
    };
    /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    DefaultCollectionTypeSerializer.prototype.deserialize = /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    function (obj, ctxt) {
        /** @type {?} */
        var result = new CollectionType();
        /** @type {?} */
        var baseConvertor = new CollectionTypeConvertor();
        baseConvertor.initFromObject(result, obj, ctxt);
        return result;
    };
    return DefaultCollectionTypeSerializer;
}());
export { DefaultCollectionTypeSerializer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1jb2xsZWN0aW9uLXR5cGUtc2VyaWFsaXplci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlY3AtY2FmL2NvbW1vbi1zdHJ1Y3R1cmUvIiwic291cmNlcyI6WyJsaWIvc2VyaWFsaXplLWNvbnRleHQvZGVmYXVsdC9zZXJpYWxpemVyL2RlZmF1bHQtY29sbGVjdGlvbi10eXBlLXNlcmlhbGl6ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUdBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQ2pHLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQUUzRjtJQUFBO0lBZUEsQ0FBQzs7Ozs7O0lBZEcsbURBQVM7Ozs7O0lBQVQsVUFBVSxJQUFlLEVBQUUsSUFBdUI7O1lBQzFDLE1BQU0sR0FBRyxJQUFJLE1BQU0sRUFBRTs7WUFDckIsYUFBYSxHQUFHLElBQUksdUJBQXVCLEVBQUU7UUFDakQsYUFBYSxDQUFDLGVBQWUsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2xELE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7Ozs7OztJQUVELHFEQUFXOzs7OztJQUFYLFVBQVksR0FBVyxFQUFFLElBQXVCOztZQUN4QyxNQUFNLEdBQUcsSUFBSSxjQUFjLEVBQUU7O1lBQzdCLGFBQWEsR0FBRyxJQUFJLHVCQUF1QixFQUFFO1FBQ2pELGFBQWEsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNoRCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBRUwsc0NBQUM7QUFBRCxDQUFDLEFBZkQsSUFlQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElEYXRhVHlwZVNlcmlhbGl6ZXIgfSBmcm9tICcuLi8uLi9leHRlbnNpb24vc2VyaWFsaXplci9pLWRhdGEtdHlwZS1zZXJpYWxpemVyJztcclxuaW1wb3J0IHsgSURhdGFUeXBlIH0gZnJvbSAnLi4vLi4vLi4vZGVmaW5lL2RhdGEtdHlwZS9pLWRhdGEtdHlwZSc7XHJcbmltcG9ydCB7IElTZXJpYWxpemVDb250ZXh0IH0gZnJvbSAnLi4vLi4vZXh0ZW5zaW9uL2ktc2VyaWFsaXplLWNvbnRleHQnO1xyXG5pbXBvcnQgeyBDb2xsZWN0aW9uVHlwZUNvbnZlcnRvciB9IGZyb20gJy4uLy4uLy4uL2NvbnZlcnRvci9kYXRhLXR5cGUvY29sbGVjdGlvbi10eXBlLWNvbnZlcnRvcic7XHJcbmltcG9ydCB7IENvbGxlY3Rpb25UeXBlIH0gZnJvbSAnLi4vLi4vLi4vZGVmaW5lL2RhdGEtdHlwZS9jb2xsZWN0aW9uLXR5cGUvY29sbGVjdGlvbi10eXBlJztcclxuXHJcbmV4cG9ydCBjbGFzcyBEZWZhdWx0Q29sbGVjdGlvblR5cGVTZXJpYWxpemVyIGltcGxlbWVudHMgSURhdGFUeXBlU2VyaWFsaXplciB7XHJcbiAgICBzZXJpYWxpemUodHlwZTogSURhdGFUeXBlLCBjdHh0OiBJU2VyaWFsaXplQ29udGV4dCk6IE9iamVjdCB7XHJcbiAgICAgICAgbGV0IHJlc3VsdCA9IG5ldyBPYmplY3QoKTtcclxuICAgICAgICBsZXQgYmFzZUNvbnZlcnRvciA9IG5ldyBDb2xsZWN0aW9uVHlwZUNvbnZlcnRvcigpO1xyXG4gICAgICAgIGJhc2VDb252ZXJ0b3IuY29udmVydFRvT2JqZWN0KHJlc3VsdCwgdHlwZSwgY3R4dCk7XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxuXHJcbiAgICBkZXNlcmlhbGl6ZShvYmo6IE9iamVjdCwgY3R4dDogSVNlcmlhbGl6ZUNvbnRleHQpOiBJRGF0YVR5cGUge1xyXG4gICAgICAgIGxldCByZXN1bHQgPSBuZXcgQ29sbGVjdGlvblR5cGUoKTtcclxuICAgICAgICBsZXQgYmFzZUNvbnZlcnRvciA9IG5ldyBDb2xsZWN0aW9uVHlwZUNvbnZlcnRvcigpO1xyXG4gICAgICAgIGJhc2VDb252ZXJ0b3IuaW5pdEZyb21PYmplY3QocmVzdWx0LCBvYmosIGN0eHQpO1xyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcblxyXG59Il19