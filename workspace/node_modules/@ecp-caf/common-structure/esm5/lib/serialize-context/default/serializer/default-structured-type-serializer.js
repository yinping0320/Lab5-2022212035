/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { StructuredTypeConvertor } from '../../../convertor/data-type/structured-type-convertor';
import { StructuredType } from '../../../define/data-type/structured-type/structured-type';
var DefaultStructuredTypeSerializer = /** @class */ (function () {
    function DefaultStructuredTypeSerializer() {
    }
    /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    DefaultStructuredTypeSerializer.prototype.serialize = /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    function (type, ctxt) {
        /** @type {?} */
        var result = new Object();
        /** @type {?} */
        var baseConvertor = new StructuredTypeConvertor();
        baseConvertor.convertToObject(result, type, ctxt);
        return result;
    };
    /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    DefaultStructuredTypeSerializer.prototype.deserialize = /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    function (obj, ctxt) {
        /** @type {?} */
        var result = new StructuredType();
        /** @type {?} */
        var baseConvertor = new StructuredTypeConvertor();
        baseConvertor.initFromObject(result, obj, ctxt);
        return result;
    };
    return DefaultStructuredTypeSerializer;
}());
export { DefaultStructuredTypeSerializer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1zdHJ1Y3R1cmVkLXR5cGUtc2VyaWFsaXplci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlY3AtY2FmL2NvbW1vbi1zdHJ1Y3R1cmUvIiwic291cmNlcyI6WyJsaWIvc2VyaWFsaXplLWNvbnRleHQvZGVmYXVsdC9zZXJpYWxpemVyL2RlZmF1bHQtc3RydWN0dXJlZC10eXBlLXNlcmlhbGl6ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUdBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQ2pHLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQUUzRjtJQUFBO0lBZ0JBLENBQUM7Ozs7OztJQWZHLG1EQUFTOzs7OztJQUFULFVBQVUsSUFBZSxFQUFFLElBQXVCOztZQUMxQyxNQUFNLEdBQUMsSUFBSSxNQUFNLEVBQUU7O1lBQ25CLGFBQWEsR0FBQyxJQUFJLHVCQUF1QixFQUFFO1FBQy9DLGFBQWEsQ0FBQyxlQUFlLENBQUMsTUFBTSxFQUFDLElBQUksRUFBQyxJQUFJLENBQUMsQ0FBQztRQUNoRCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDOzs7Ozs7SUFFRCxxREFBVzs7Ozs7SUFBWCxVQUFZLEdBQVcsRUFBRSxJQUF1Qjs7WUFDeEMsTUFBTSxHQUFHLElBQUksY0FBYyxFQUFFOztZQUM3QixhQUFhLEdBQUcsSUFBSSx1QkFBdUIsRUFBRTtRQUNqRCxhQUFhLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDaEQsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUdMLHNDQUFDO0FBQUQsQ0FBQyxBQWhCRCxJQWdCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElEYXRhVHlwZVNlcmlhbGl6ZXIgfSBmcm9tICcuLi8uLi9leHRlbnNpb24vc2VyaWFsaXplci9pLWRhdGEtdHlwZS1zZXJpYWxpemVyJztcclxuaW1wb3J0IHsgSURhdGFUeXBlIH0gZnJvbSAnLi4vLi4vLi4vZGVmaW5lL2RhdGEtdHlwZS9pLWRhdGEtdHlwZSc7XHJcbmltcG9ydCB7IElTZXJpYWxpemVDb250ZXh0IH0gZnJvbSAnLi4vLi4vZXh0ZW5zaW9uL2ktc2VyaWFsaXplLWNvbnRleHQnO1xyXG5pbXBvcnQgeyBTdHJ1Y3R1cmVkVHlwZUNvbnZlcnRvciB9IGZyb20gJy4uLy4uLy4uL2NvbnZlcnRvci9kYXRhLXR5cGUvc3RydWN0dXJlZC10eXBlLWNvbnZlcnRvcic7XHJcbmltcG9ydCB7IFN0cnVjdHVyZWRUeXBlIH0gZnJvbSAnLi4vLi4vLi4vZGVmaW5lL2RhdGEtdHlwZS9zdHJ1Y3R1cmVkLXR5cGUvc3RydWN0dXJlZC10eXBlJztcclxuXHJcbmV4cG9ydCBjbGFzcyBEZWZhdWx0U3RydWN0dXJlZFR5cGVTZXJpYWxpemVyIGltcGxlbWVudHMgSURhdGFUeXBlU2VyaWFsaXplcntcclxuICAgIHNlcmlhbGl6ZSh0eXBlOiBJRGF0YVR5cGUsIGN0eHQ6IElTZXJpYWxpemVDb250ZXh0KTogT2JqZWN0IHtcclxuICAgICAgICBsZXQgcmVzdWx0PW5ldyBPYmplY3QoKTtcclxuICAgICAgICBsZXQgYmFzZUNvbnZlcnRvcj1uZXcgU3RydWN0dXJlZFR5cGVDb252ZXJ0b3IoKTtcclxuICAgICAgICBiYXNlQ29udmVydG9yLmNvbnZlcnRUb09iamVjdChyZXN1bHQsdHlwZSxjdHh0KTtcclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfSAgICBcclxuICAgIFxyXG4gICAgZGVzZXJpYWxpemUob2JqOiBPYmplY3QsIGN0eHQ6IElTZXJpYWxpemVDb250ZXh0KTogSURhdGFUeXBlIHtcclxuICAgICAgICBsZXQgcmVzdWx0ID0gbmV3IFN0cnVjdHVyZWRUeXBlKCk7XHJcbiAgICAgICAgbGV0IGJhc2VDb252ZXJ0b3IgPSBuZXcgU3RydWN0dXJlZFR5cGVDb252ZXJ0b3IoKTtcclxuICAgICAgICBiYXNlQ29udmVydG9yLmluaXRGcm9tT2JqZWN0KHJlc3VsdCwgb2JqLCBjdHh0KTtcclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG5cclxuICAgIFxyXG59Il19