/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ObjectTypeConvertor } from '../../../convertor/data-type/object-type-convertor';
import { ObjectType } from '../../../define/data-type/object-type/object-type';
var DefaultObjectTypeSerializer = /** @class */ (function () {
    function DefaultObjectTypeSerializer() {
    }
    /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    DefaultObjectTypeSerializer.prototype.serialize = /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    function (type, ctxt) {
        /** @type {?} */
        var result = new Object();
        /** @type {?} */
        var baseConvertor = new ObjectTypeConvertor();
        baseConvertor.convertToObject(result, type, ctxt);
        return result;
    };
    /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    DefaultObjectTypeSerializer.prototype.deserialize = /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    function (obj, ctxt) {
        /** @type {?} */
        var result = new ObjectType();
        /** @type {?} */
        var baseConvertor = new ObjectTypeConvertor();
        baseConvertor.initFromObject(result, obj, ctxt);
        return result;
    };
    return DefaultObjectTypeSerializer;
}());
export { DefaultObjectTypeSerializer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1vYmplY3QtdHlwZS1zZXJpYWxpemVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVjcC1jYWYvY29tbW9uLXN0cnVjdHVyZS8iLCJzb3VyY2VzIjpbImxpYi9zZXJpYWxpemUtY29udGV4dC9kZWZhdWx0L3NlcmlhbGl6ZXIvZGVmYXVsdC1vYmplY3QtdHlwZS1zZXJpYWxpemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFHQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUN6RixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbURBQW1ELENBQUM7QUFFL0U7SUFBQTtJQWdCQSxDQUFDOzs7Ozs7SUFmRywrQ0FBUzs7Ozs7SUFBVCxVQUFVLElBQWUsRUFBRSxJQUF1Qjs7WUFDMUMsTUFBTSxHQUFHLElBQUksTUFBTSxFQUFFOztZQUNyQixhQUFhLEdBQUcsSUFBSSxtQkFBbUIsRUFBRTtRQUM3QyxhQUFhLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDbEQsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQzs7Ozs7O0lBRUQsaURBQVc7Ozs7O0lBQVgsVUFBWSxHQUFXLEVBQUUsSUFBdUI7O1lBQ3hDLE1BQU0sR0FBRyxJQUFJLFVBQVUsRUFBRTs7WUFDekIsYUFBYSxHQUFHLElBQUksbUJBQW1CLEVBQUU7UUFDN0MsYUFBYSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2hELE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFHTCxrQ0FBQztBQUFELENBQUMsQUFoQkQsSUFnQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJRGF0YVR5cGVTZXJpYWxpemVyIH0gZnJvbSAnLi4vLi4vZXh0ZW5zaW9uL3NlcmlhbGl6ZXIvaS1kYXRhLXR5cGUtc2VyaWFsaXplcic7XHJcbmltcG9ydCB7IElEYXRhVHlwZSB9IGZyb20gJy4uLy4uLy4uL2RlZmluZS9kYXRhLXR5cGUvaS1kYXRhLXR5cGUnO1xyXG5pbXBvcnQgeyBJU2VyaWFsaXplQ29udGV4dCB9IGZyb20gJy4uLy4uL2V4dGVuc2lvbi9pLXNlcmlhbGl6ZS1jb250ZXh0JztcclxuaW1wb3J0IHsgT2JqZWN0VHlwZUNvbnZlcnRvciB9IGZyb20gJy4uLy4uLy4uL2NvbnZlcnRvci9kYXRhLXR5cGUvb2JqZWN0LXR5cGUtY29udmVydG9yJztcclxuaW1wb3J0IHsgT2JqZWN0VHlwZSB9IGZyb20gJy4uLy4uLy4uL2RlZmluZS9kYXRhLXR5cGUvb2JqZWN0LXR5cGUvb2JqZWN0LXR5cGUnO1xyXG5cclxuZXhwb3J0IGNsYXNzIERlZmF1bHRPYmplY3RUeXBlU2VyaWFsaXplciBpbXBsZW1lbnRzIElEYXRhVHlwZVNlcmlhbGl6ZXIge1xyXG4gICAgc2VyaWFsaXplKHR5cGU6IElEYXRhVHlwZSwgY3R4dDogSVNlcmlhbGl6ZUNvbnRleHQpOiBPYmplY3Qge1xyXG4gICAgICAgIGxldCByZXN1bHQgPSBuZXcgT2JqZWN0KCk7XHJcbiAgICAgICAgbGV0IGJhc2VDb252ZXJ0b3IgPSBuZXcgT2JqZWN0VHlwZUNvbnZlcnRvcigpO1xyXG4gICAgICAgIGJhc2VDb252ZXJ0b3IuY29udmVydFRvT2JqZWN0KHJlc3VsdCwgdHlwZSwgY3R4dCk7XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxuXHJcbiAgICBkZXNlcmlhbGl6ZShvYmo6IE9iamVjdCwgY3R4dDogSVNlcmlhbGl6ZUNvbnRleHQpOiBJRGF0YVR5cGUge1xyXG4gICAgICAgIGxldCByZXN1bHQgPSBuZXcgT2JqZWN0VHlwZSgpO1xyXG4gICAgICAgIGxldCBiYXNlQ29udmVydG9yID0gbmV3IE9iamVjdFR5cGVDb252ZXJ0b3IoKTtcclxuICAgICAgICBiYXNlQ29udmVydG9yLmluaXRGcm9tT2JqZWN0KHJlc3VsdCwgb2JqLCBjdHh0KTtcclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG5cclxuXHJcbn0iXX0=