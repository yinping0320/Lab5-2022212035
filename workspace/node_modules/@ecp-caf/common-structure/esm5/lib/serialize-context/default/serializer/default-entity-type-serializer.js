/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EntityTypeConvertor } from '../../../convertor/data-type/entity-type-convertor';
import { EntityType } from '../../../define/data-type/structured-type/entity-type/entity-type';
var DefaultEntityTypeSerializer = /** @class */ (function () {
    function DefaultEntityTypeSerializer() {
    }
    /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    DefaultEntityTypeSerializer.prototype.serialize = /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    function (type, ctxt) {
        /** @type {?} */
        var result = new Object();
        /** @type {?} */
        var baseConvertor = new EntityTypeConvertor();
        baseConvertor.convertToObject(result, type, ctxt);
        return result;
    };
    /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    DefaultEntityTypeSerializer.prototype.deserialize = /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    function (obj, ctxt) {
        /** @type {?} */
        var result = new EntityType();
        /** @type {?} */
        var baseConvertor = new EntityTypeConvertor();
        baseConvertor.initFromObject(result, obj, ctxt);
        return result;
    };
    return DefaultEntityTypeSerializer;
}());
export { DefaultEntityTypeSerializer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1lbnRpdHktdHlwZS1zZXJpYWxpemVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVjcC1jYWYvY29tbW9uLXN0cnVjdHVyZS8iLCJzb3VyY2VzIjpbImxpYi9zZXJpYWxpemUtY29udGV4dC9kZWZhdWx0L3NlcmlhbGl6ZXIvZGVmYXVsdC1lbnRpdHktdHlwZS1zZXJpYWxpemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFHQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUN6RixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbUVBQW1FLENBQUM7QUFFL0Y7SUFBQTtJQWdCQSxDQUFDOzs7Ozs7SUFmRywrQ0FBUzs7Ozs7SUFBVCxVQUFVLElBQWUsRUFBRSxJQUF1Qjs7WUFDMUMsTUFBTSxHQUFDLElBQUksTUFBTSxFQUFFOztZQUNuQixhQUFhLEdBQUMsSUFBSSxtQkFBbUIsRUFBRTtRQUMzQyxhQUFhLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBQyxJQUFJLEVBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEQsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQzs7Ozs7O0lBRUQsaURBQVc7Ozs7O0lBQVgsVUFBWSxHQUFXLEVBQUUsSUFBdUI7O1lBQ3hDLE1BQU0sR0FBRyxJQUFJLFVBQVUsRUFBRTs7WUFDekIsYUFBYSxHQUFHLElBQUksbUJBQW1CLEVBQUU7UUFDN0MsYUFBYSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2hELE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFHTCxrQ0FBQztBQUFELENBQUMsQUFoQkQsSUFnQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJRGF0YVR5cGVTZXJpYWxpemVyIH0gZnJvbSAnLi4vLi4vZXh0ZW5zaW9uL3NlcmlhbGl6ZXIvaS1kYXRhLXR5cGUtc2VyaWFsaXplcic7XHJcbmltcG9ydCB7IElEYXRhVHlwZSB9IGZyb20gJy4uLy4uLy4uL2RlZmluZS9kYXRhLXR5cGUvaS1kYXRhLXR5cGUnO1xyXG5pbXBvcnQgeyBJU2VyaWFsaXplQ29udGV4dCB9IGZyb20gJy4uLy4uL2V4dGVuc2lvbi9pLXNlcmlhbGl6ZS1jb250ZXh0JztcclxuaW1wb3J0IHsgRW50aXR5VHlwZUNvbnZlcnRvciB9IGZyb20gJy4uLy4uLy4uL2NvbnZlcnRvci9kYXRhLXR5cGUvZW50aXR5LXR5cGUtY29udmVydG9yJztcclxuaW1wb3J0IHsgRW50aXR5VHlwZSB9IGZyb20gJy4uLy4uLy4uL2RlZmluZS9kYXRhLXR5cGUvc3RydWN0dXJlZC10eXBlL2VudGl0eS10eXBlL2VudGl0eS10eXBlJztcclxuXHJcbmV4cG9ydCBjbGFzcyBEZWZhdWx0RW50aXR5VHlwZVNlcmlhbGl6ZXIgaW1wbGVtZW50cyBJRGF0YVR5cGVTZXJpYWxpemVye1xyXG4gICAgc2VyaWFsaXplKHR5cGU6IElEYXRhVHlwZSwgY3R4dDogSVNlcmlhbGl6ZUNvbnRleHQpOiBPYmplY3Qge1xyXG4gICAgICAgIGxldCByZXN1bHQ9bmV3IE9iamVjdCgpO1xyXG4gICAgICAgIGxldCBiYXNlQ29udmVydG9yPW5ldyBFbnRpdHlUeXBlQ29udmVydG9yKCk7XHJcbiAgICAgICAgYmFzZUNvbnZlcnRvci5jb252ZXJ0VG9PYmplY3QocmVzdWx0LHR5cGUsY3R4dCk7XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH0gICAgXHJcbiAgICBcclxuICAgIGRlc2VyaWFsaXplKG9iajogT2JqZWN0LCBjdHh0OiBJU2VyaWFsaXplQ29udGV4dCk6IElEYXRhVHlwZSB7XHJcbiAgICAgICAgbGV0IHJlc3VsdCA9IG5ldyBFbnRpdHlUeXBlKCk7XHJcbiAgICAgICAgbGV0IGJhc2VDb252ZXJ0b3IgPSBuZXcgRW50aXR5VHlwZUNvbnZlcnRvcigpO1xyXG4gICAgICAgIGJhc2VDb252ZXJ0b3IuaW5pdEZyb21PYmplY3QocmVzdWx0LCBvYmosIGN0eHQpO1xyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcblxyXG4gICAgXHJcbn0iXX0=