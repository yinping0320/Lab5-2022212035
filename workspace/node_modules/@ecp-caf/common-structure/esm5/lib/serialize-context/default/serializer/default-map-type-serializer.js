/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { MapTypeConvertor } from '../../../convertor/data-type/map-type-convertor';
import { MapType } from '../../../define/data-type/map-type/map-type';
var DefaultMapTypeSerializer = /** @class */ (function () {
    function DefaultMapTypeSerializer() {
    }
    /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    DefaultMapTypeSerializer.prototype.serialize = /**
     * @param {?} type
     * @param {?} ctxt
     * @return {?}
     */
    function (type, ctxt) {
        /** @type {?} */
        var result = new Object();
        /** @type {?} */
        var baseConvertor = new MapTypeConvertor();
        baseConvertor.convertToObject(result, type, ctxt);
        return result;
    };
    /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    DefaultMapTypeSerializer.prototype.deserialize = /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    function (obj, ctxt) {
        /** @type {?} */
        var result = new MapType();
        /** @type {?} */
        var baseConvertor = new MapTypeConvertor();
        baseConvertor.initFromObject(result, obj, ctxt);
        return result;
    };
    return DefaultMapTypeSerializer;
}());
export { DefaultMapTypeSerializer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1tYXAtdHlwZS1zZXJpYWxpemVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVjcC1jYWYvY29tbW9uLXN0cnVjdHVyZS8iLCJzb3VyY2VzIjpbImxpYi9zZXJpYWxpemUtY29udGV4dC9kZWZhdWx0L3NlcmlhbGl6ZXIvZGVmYXVsdC1tYXAtdHlwZS1zZXJpYWxpemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFHQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUNuRixPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFFdEU7SUFBQTtJQWVBLENBQUM7Ozs7OztJQWRHLDRDQUFTOzs7OztJQUFULFVBQVUsSUFBZSxFQUFFLElBQXVCOztZQUMxQyxNQUFNLEdBQUMsSUFBSSxNQUFNLEVBQUU7O1lBQ25CLGFBQWEsR0FBQyxJQUFJLGdCQUFnQixFQUFFO1FBQ3hDLGFBQWEsQ0FBQyxlQUFlLENBQUMsTUFBTSxFQUFDLElBQUksRUFBQyxJQUFJLENBQUMsQ0FBQztRQUNoRCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDOzs7Ozs7SUFFRCw4Q0FBVzs7Ozs7SUFBWCxVQUFZLEdBQVcsRUFBRSxJQUF1Qjs7WUFDeEMsTUFBTSxHQUFHLElBQUksT0FBTyxFQUFFOztZQUN0QixhQUFhLEdBQUcsSUFBSSxnQkFBZ0IsRUFBRTtRQUMxQyxhQUFhLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDaEQsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUVMLCtCQUFDO0FBQUQsQ0FBQyxBQWZELElBZUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJRGF0YVR5cGVTZXJpYWxpemVyIH0gZnJvbSAnLi4vLi4vZXh0ZW5zaW9uL3NlcmlhbGl6ZXIvaS1kYXRhLXR5cGUtc2VyaWFsaXplcic7XHJcbmltcG9ydCB7IElEYXRhVHlwZSB9IGZyb20gJy4uLy4uLy4uL2RlZmluZS9kYXRhLXR5cGUvaS1kYXRhLXR5cGUnO1xyXG5pbXBvcnQgeyBJU2VyaWFsaXplQ29udGV4dCB9IGZyb20gJy4uLy4uL2V4dGVuc2lvbi9pLXNlcmlhbGl6ZS1jb250ZXh0JztcclxuaW1wb3J0IHsgTWFwVHlwZUNvbnZlcnRvciB9IGZyb20gJy4uLy4uLy4uL2NvbnZlcnRvci9kYXRhLXR5cGUvbWFwLXR5cGUtY29udmVydG9yJztcclxuaW1wb3J0IHsgTWFwVHlwZSB9IGZyb20gJy4uLy4uLy4uL2RlZmluZS9kYXRhLXR5cGUvbWFwLXR5cGUvbWFwLXR5cGUnO1xyXG5cclxuZXhwb3J0IGNsYXNzIERlZmF1bHRNYXBUeXBlU2VyaWFsaXplciBpbXBsZW1lbnRzIElEYXRhVHlwZVNlcmlhbGl6ZXJ7XHJcbiAgICBzZXJpYWxpemUodHlwZTogSURhdGFUeXBlLCBjdHh0OiBJU2VyaWFsaXplQ29udGV4dCk6IE9iamVjdCB7XHJcbiAgICAgICAgbGV0IHJlc3VsdD1uZXcgT2JqZWN0KCk7XHJcbiAgICAgICAgbGV0IGJhc2VDb252ZXJ0b3I9bmV3IE1hcFR5cGVDb252ZXJ0b3IoKTtcclxuICAgICAgICBiYXNlQ29udmVydG9yLmNvbnZlcnRUb09iamVjdChyZXN1bHQsdHlwZSxjdHh0KTtcclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfSAgICBcclxuICAgIFxyXG4gICAgZGVzZXJpYWxpemUob2JqOiBPYmplY3QsIGN0eHQ6IElTZXJpYWxpemVDb250ZXh0KTogSURhdGFUeXBlIHtcclxuICAgICAgICBsZXQgcmVzdWx0ID0gbmV3IE1hcFR5cGUoKTsgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgbGV0IGJhc2VDb252ZXJ0b3IgPSBuZXcgTWFwVHlwZUNvbnZlcnRvcigpO1xyXG4gICAgICAgIGJhc2VDb252ZXJ0b3IuaW5pdEZyb21PYmplY3QocmVzdWx0LCBvYmosIGN0eHQpO1xyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcbiAgICBcclxufSJdfQ==