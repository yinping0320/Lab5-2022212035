/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ValueObjectConvertor } from '../../../convertor/structure/value-object-convertor';
import { ValueObject } from '../../../define/structure/value-object';
var DefaultValueObjectSerializer = /** @class */ (function () {
    function DefaultValueObjectSerializer() {
    }
    /**
     * @param {?} structure
     * @param {?} ctxt
     * @return {?}
     */
    DefaultValueObjectSerializer.prototype.serialize = /**
     * @param {?} structure
     * @param {?} ctxt
     * @return {?}
     */
    function (structure, ctxt) {
        /** @type {?} */
        var result = new Object();
        /** @type {?} */
        var baseConvertor = new ValueObjectConvertor();
        /** @type {?} */
        var valueObject = (/** @type {?} */ (structure));
        baseConvertor.convertToObject(result, valueObject, ctxt);
        return result;
    };
    /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    DefaultValueObjectSerializer.prototype.deserialize = /**
     * @param {?} obj
     * @param {?} ctxt
     * @return {?}
     */
    function (obj, ctxt) {
        /** @type {?} */
        var result = new ValueObject();
        /** @type {?} */
        var baseConvertor = new ValueObjectConvertor();
        baseConvertor.initFromObject(result, obj, ctxt);
        return result;
    };
    return DefaultValueObjectSerializer;
}());
export { DefaultValueObjectSerializer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC12YWx1ZS1vYmplY3Qtc2VyaWFsaXplci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlY3AtY2FmL2NvbW1vbi1zdHJ1Y3R1cmUvIiwic291cmNlcyI6WyJsaWIvc2VyaWFsaXplLWNvbnRleHQvZGVmYXVsdC9zZXJpYWxpemVyL2RlZmF1bHQtdmFsdWUtb2JqZWN0LXNlcmlhbGl6ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUdBLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHFEQUFxRCxDQUFDO0FBQzNGLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUdyRTtJQUFBO0lBa0JBLENBQUM7Ozs7OztJQWpCRyxnREFBUzs7Ozs7SUFBVCxVQUFVLFNBQTBCLEVBQUUsSUFBc0M7O1lBQ3BFLE1BQU0sR0FBRyxJQUFJLE1BQU0sRUFBRTs7WUFDckIsYUFBYSxHQUFHLElBQUksb0JBQW9CLEVBQUU7O1lBQzFDLFdBQVcsR0FBRyxtQkFBQSxTQUFTLEVBQWU7UUFDMUMsYUFBYSxDQUFDLGVBQWUsQ0FBQyxNQUFNLEVBQUUsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3pELE9BQU8sTUFBTSxDQUFDO0lBRWxCLENBQUM7Ozs7OztJQUdELGtEQUFXOzs7OztJQUFYLFVBQVksR0FBVyxFQUFFLElBQXNDOztZQUN2RCxNQUFNLEdBQUcsSUFBSSxXQUFXLEVBQUU7O1lBQzFCLGFBQWEsR0FBRyxJQUFJLG9CQUFvQixFQUFFO1FBQzlDLGFBQWEsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNoRCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBRUwsbUNBQUM7QUFBRCxDQUFDLEFBbEJELElBa0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUNvbW1vblN0cnVjdHVyZVNlcmlhbGl6ZXIgfSBmcm9tICcuLi8uLi9leHRlbnNpb24vc2VyaWFsaXplci9pLWNvbW1vbi1zdHJ1Y3R1cmUtc2VyaWFsaXplcic7XHJcbmltcG9ydCB7IENvbW1vblN0cnVjdHVyZSB9IGZyb20gJy4uLy4uLy4uL2RlZmluZS9zdHJ1Y3R1cmUvY29tbW9uLXN0cnVjdHVyZSc7XHJcbmltcG9ydCB7IElTZXJpYWxpemVDb250ZXh0IH0gZnJvbSAnLi4vLi4vZXh0ZW5zaW9uL2ktc2VyaWFsaXplLWNvbnRleHQnO1xyXG5pbXBvcnQgeyBWYWx1ZU9iamVjdENvbnZlcnRvciB9IGZyb20gJy4uLy4uLy4uL2NvbnZlcnRvci9zdHJ1Y3R1cmUvdmFsdWUtb2JqZWN0LWNvbnZlcnRvcic7XHJcbmltcG9ydCB7IFZhbHVlT2JqZWN0IH0gZnJvbSAnLi4vLi4vLi4vZGVmaW5lL3N0cnVjdHVyZS92YWx1ZS1vYmplY3QnO1xyXG5pbXBvcnQgeyBJQ29tbW9uU3RydWN0dXJlU2VyaWFsaXplQ29udGV4dCB9IGZyb20gJy4uLy4uL2V4dGVuc2lvbi9pLWNvbW1vbi1zdHJ1Y3R1cmUtc2VyaWFsaXplLWNvbnRleHQnO1xyXG5cclxuZXhwb3J0IGNsYXNzIERlZmF1bHRWYWx1ZU9iamVjdFNlcmlhbGl6ZXIgaW1wbGVtZW50cyBJQ29tbW9uU3RydWN0dXJlU2VyaWFsaXplciB7XHJcbiAgICBzZXJpYWxpemUoc3RydWN0dXJlOiBDb21tb25TdHJ1Y3R1cmUsIGN0eHQ6IElDb21tb25TdHJ1Y3R1cmVTZXJpYWxpemVDb250ZXh0KTogT2JqZWN0IHtcclxuICAgICAgICBsZXQgcmVzdWx0ID0gbmV3IE9iamVjdCgpO1xyXG4gICAgICAgIGxldCBiYXNlQ29udmVydG9yID0gbmV3IFZhbHVlT2JqZWN0Q29udmVydG9yKCk7XHJcbiAgICAgICAgbGV0IHZhbHVlT2JqZWN0ID0gc3RydWN0dXJlIGFzIFZhbHVlT2JqZWN0O1xyXG4gICAgICAgIGJhc2VDb252ZXJ0b3IuY29udmVydFRvT2JqZWN0KHJlc3VsdCwgdmFsdWVPYmplY3QsIGN0eHQpO1xyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcblxyXG4gICAgfVxyXG5cclxuXHJcbiAgICBkZXNlcmlhbGl6ZShvYmo6IE9iamVjdCwgY3R4dDogSUNvbW1vblN0cnVjdHVyZVNlcmlhbGl6ZUNvbnRleHQpOiBDb21tb25TdHJ1Y3R1cmUge1xyXG4gICAgICAgIGxldCByZXN1bHQgPSBuZXcgVmFsdWVPYmplY3QoKTtcclxuICAgICAgICBsZXQgYmFzZUNvbnZlcnRvciA9IG5ldyBWYWx1ZU9iamVjdENvbnZlcnRvcigpO1xyXG4gICAgICAgIGJhc2VDb252ZXJ0b3IuaW5pdEZyb21PYmplY3QocmVzdWx0LCBvYmosIGN0eHQpO1xyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcblxyXG59Il19