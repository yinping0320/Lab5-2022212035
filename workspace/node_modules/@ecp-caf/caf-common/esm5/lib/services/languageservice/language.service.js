/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { CookieService } from 'ngx-cookie-service';
import { CommonUtil } from '../../utilities/common.utilities';
var LanguageService = /** @class */ (function () {
    function LanguageService(cookieService) {
        this.cookieService = cookieService;
        this.languageKey = 'languageCode';
        this.curLangugaeKey = 'caf_web_language';
    }
    /**
     * @param {?} languageCode
     * @return {?}
     */
    LanguageService.prototype.setLanguageCode = /**
     * @param {?} languageCode
     * @return {?}
     */
    function (languageCode) {
        localStorage.setItem(this.languageKey, languageCode);
    };
    /**
     * @return {?}
     */
    LanguageService.prototype.getLanguageCode = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var curLancode = this.cookieService && this.cookieService.get(this.curLangugaeKey);
        if (!curLancode) {
            curLancode = CommonUtil.getCookieMapFromDoc().get(this.curLangugaeKey) ||
                localStorage.getItem(this.languageKey) ||
                'zh-CHS';
        }
        return curLancode;
    };
    LanguageService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    LanguageService.ctorParameters = function () { return [
        { type: CookieService }
    ]; };
    return LanguageService;
}());
export { LanguageService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    LanguageService.prototype.languageKey;
    /**
     * @type {?}
     * @private
     */
    LanguageService.prototype.curLangugaeKey;
    /**
     * @type {?}
     * @private
     */
    LanguageService.prototype.cookieService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2Uuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlY3AtY2FmL2NhZi1jb21tb24vIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvbGFuZ3VhZ2VzZXJ2aWNlL2xhbmd1YWdlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUU5RDtJQUtJLHlCQUFvQixhQUE0QjtRQUE1QixrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQUh4QyxnQkFBVyxHQUFHLGNBQWMsQ0FBQztRQUM3QixtQkFBYyxHQUFHLGtCQUFrQixDQUFDO0lBRVEsQ0FBQzs7Ozs7SUFFOUMseUNBQWU7Ozs7SUFBdEIsVUFBdUIsWUFBb0I7UUFDdkMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3pELENBQUM7Ozs7SUFFTSx5Q0FBZTs7O0lBQXRCOztZQUNRLFVBQVUsR0FBRyxJQUFJLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUM7UUFDbEYsSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNiLFVBQVUsR0FBRyxVQUFVLENBQUMsbUJBQW1CLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQztnQkFDbEUsWUFBWSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO2dCQUN0QyxRQUFRLENBQUM7U0FDaEI7UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUN0QixDQUFDOztnQkFuQkosVUFBVTs7OztnQkFIRixhQUFhOztJQXVCdEIsc0JBQUM7Q0FBQSxBQXBCRCxJQW9CQztTQW5CWSxlQUFlOzs7Ozs7SUFDeEIsc0NBQXFDOzs7OztJQUNyQyx5Q0FBNEM7Ozs7O0lBRWhDLHdDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29va2llU2VydmljZSB9IGZyb20gJ25neC1jb29raWUtc2VydmljZSc7XHJcbmltcG9ydCB7IENvbW1vblV0aWwgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvY29tbW9uLnV0aWxpdGllcyc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBMYW5ndWFnZVNlcnZpY2Uge1xyXG4gICAgcHJpdmF0ZSBsYW5ndWFnZUtleSA9ICdsYW5ndWFnZUNvZGUnO1xyXG4gICAgcHJpdmF0ZSBjdXJMYW5ndWdhZUtleSA9ICdjYWZfd2ViX2xhbmd1YWdlJztcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvb2tpZVNlcnZpY2U6IENvb2tpZVNlcnZpY2UpIHsgfVxyXG5cclxuICAgIHB1YmxpYyBzZXRMYW5ndWFnZUNvZGUobGFuZ3VhZ2VDb2RlOiBzdHJpbmcpIHtcclxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0aGlzLmxhbmd1YWdlS2V5LCBsYW5ndWFnZUNvZGUpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRMYW5ndWFnZUNvZGUoKTogc3RyaW5nIHtcclxuICAgICAgICBsZXQgY3VyTGFuY29kZSA9IHRoaXMuY29va2llU2VydmljZSAmJiB0aGlzLmNvb2tpZVNlcnZpY2UuZ2V0KHRoaXMuY3VyTGFuZ3VnYWVLZXkpO1xyXG4gICAgICAgIGlmICghY3VyTGFuY29kZSkge1xyXG4gICAgICAgICAgICBjdXJMYW5jb2RlID0gQ29tbW9uVXRpbC5nZXRDb29raWVNYXBGcm9tRG9jKCkuZ2V0KHRoaXMuY3VyTGFuZ3VnYWVLZXkpIHx8XHJcbiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLmxhbmd1YWdlS2V5KSB8fFxyXG4gICAgICAgICAgICAgICAgJ3poLUNIUyc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBjdXJMYW5jb2RlO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==