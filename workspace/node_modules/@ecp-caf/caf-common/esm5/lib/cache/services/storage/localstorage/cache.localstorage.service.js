/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { CacheStorageAbstract } from '../cache.storage.abstract.service';
/**
 * Service for storing data in local storage
 */
var CacheLocalStorage = /** @class */ (function (_super) {
    tslib_1.__extends(CacheLocalStorage, _super);
    function CacheLocalStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @param {?} key
     * @return {?}
     */
    CacheLocalStorage.prototype.getItem = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        /** @type {?} */
        var value = localStorage.getItem(key);
        return value ? JSON.parse(value) : null;
    };
    /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    CacheLocalStorage.prototype.setItem = /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    function (key, value) {
        try {
            localStorage.setItem(key, JSON.stringify(value));
            return true;
        }
        catch (e) {
            return false;
        }
    };
    /**
     * @param {?} key
     * @return {?}
     */
    CacheLocalStorage.prototype.removeItem = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        localStorage.removeItem(key);
    };
    /**
     * @return {?}
     */
    CacheLocalStorage.prototype.clear = /**
     * @return {?}
     */
    function () {
        localStorage.clear();
    };
    /**
     * @return {?}
     */
    CacheLocalStorage.prototype.type = /**
     * @return {?}
     */
    function () {
        return 0 /* LOCAL_STORAGE */;
    };
    /**
     * @return {?}
     */
    CacheLocalStorage.prototype.isEnabled = /**
     * @return {?}
     */
    function () {
        try {
            localStorage.setItem('test', 'test');
            localStorage.removeItem('test');
            return true;
        }
        catch (e) {
            return false;
        }
    };
    CacheLocalStorage.decorators = [
        { type: Injectable }
    ];
    return CacheLocalStorage;
}(CacheStorageAbstract));
export { CacheLocalStorage };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGUubG9jYWxzdG9yYWdlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWNwLWNhZi9jYWYtY29tbW9uLyIsInNvdXJjZXMiOlsibGliL2NhY2hlL3NlcnZpY2VzL3N0b3JhZ2UvbG9jYWxzdG9yYWdlL2NhY2hlLmxvY2Fsc3RvcmFnZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQzs7OztBQU96RTtJQUN1Qyw2Q0FBb0I7SUFEM0Q7O0lBc0NBLENBQUM7Ozs7O0lBbkNVLG1DQUFPOzs7O0lBQWQsVUFBZSxHQUFXOztZQUNoQixLQUFLLEdBQUcsWUFBWSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUM7UUFDdkMsT0FBTyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUM1QyxDQUFDOzs7Ozs7SUFFTSxtQ0FBTzs7Ozs7SUFBZCxVQUFlLEdBQVcsRUFBRSxLQUE0QjtRQUNwRCxJQUFJO1lBQ0EsWUFBWSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ2pELE9BQU8sSUFBSSxDQUFDO1NBQ2Y7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNSLE9BQU8sS0FBSyxDQUFDO1NBQ2hCO0lBQ0wsQ0FBQzs7Ozs7SUFFTSxzQ0FBVTs7OztJQUFqQixVQUFrQixHQUFXO1FBQ3pCLFlBQVksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDakMsQ0FBQzs7OztJQUVNLGlDQUFLOzs7SUFBWjtRQUNJLFlBQVksQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN6QixDQUFDOzs7O0lBRU0sZ0NBQUk7OztJQUFYO1FBQ0ksNkJBQXVDO0lBQzNDLENBQUM7Ozs7SUFFTSxxQ0FBUzs7O0lBQWhCO1FBQ0ksSUFBSTtZQUNBLFlBQVksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBQ3JDLFlBQVksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDaEMsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ1IsT0FBTyxLQUFLLENBQUM7U0FDaEI7SUFDTCxDQUFDOztnQkFyQ0osVUFBVTs7SUFzQ1gsd0JBQUM7Q0FBQSxBQXRDRCxDQUN1QyxvQkFBb0IsR0FxQzFEO1NBckNZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ2FjaGVTdG9yYWdlQWJzdHJhY3QgfSBmcm9tICcuLi9jYWNoZS5zdG9yYWdlLmFic3RyYWN0LnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBDYWNoZVN0b3JhZ2VzRW51bSB9IGZyb20gJy4uLy4uLy4uL2VudW1zL2NhY2hlLnN0b3JhZ2VzLmVudW0nO1xyXG5pbXBvcnQgeyBTdG9yYWdlVmFsdWVJbnRlcmZhY2UgfSBmcm9tICcuLi8uLi8uLi9pbnRlcmZhY2VzL3N0b3JhZ2UudmFsdWUuaW50ZXJmYWNlJztcclxuXHJcbi8qKlxyXG4gKiBTZXJ2aWNlIGZvciBzdG9yaW5nIGRhdGEgaW4gbG9jYWwgc3RvcmFnZVxyXG4gKi9cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgQ2FjaGVMb2NhbFN0b3JhZ2UgZXh0ZW5kcyBDYWNoZVN0b3JhZ2VBYnN0cmFjdCB7XHJcblxyXG4gICAgcHVibGljIGdldEl0ZW0oa2V5OiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCB2YWx1ZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSk7XHJcbiAgICAgICAgcmV0dXJuIHZhbHVlID8gSlNPTi5wYXJzZSh2YWx1ZSkgOiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXRJdGVtKGtleTogc3RyaW5nLCB2YWx1ZTogU3RvcmFnZVZhbHVlSW50ZXJmYWNlKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeSh2YWx1ZSkpO1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHJlbW92ZUl0ZW0oa2V5OiBzdHJpbmcpIHtcclxuICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBjbGVhcigpIHtcclxuICAgICAgICBsb2NhbFN0b3JhZ2UuY2xlYXIoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdHlwZSgpIHtcclxuICAgICAgICByZXR1cm4gQ2FjaGVTdG9yYWdlc0VudW0uTE9DQUxfU1RPUkFHRTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgaXNFbmFibGVkKCkge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0ZXN0JywgJ3Rlc3QnKTtcclxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3Rlc3QnKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==