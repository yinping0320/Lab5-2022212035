{"version":3,"file":"ecp-caf-caf-common.js.map","sources":["ng://@ecp-caf/caf-common/lib/common.module.ts","ng://@ecp-caf/caf-common/lib/cache/services/storage/cache.storage.abstract.service.ts","ng://@ecp-caf/caf-common/lib/cache/services/storage/sessionstorage/cache.sessionstorage.service.ts","ng://@ecp-caf/caf-common/lib/cache/services/storage/localstorage/cache.localstorage.service.ts","ng://@ecp-caf/caf-common/lib/services/window-service/window-variable.service.ts","ng://@ecp-caf/caf-common/lib/cache/services/storage/memory/cache.memory.service.ts","ng://@ecp-caf/caf-common/lib/cache/services/cache.service.ts","ng://@ecp-caf/caf-common/lib/utilities/common.utilities.ts","ng://@ecp-caf/caf-common/lib/services/sessionservice/session.service.ts","ng://@ecp-caf/caf-common/lib/services/httpservice/http.service.ts","ng://@ecp-caf/caf-common/lib/services/languageservice/language.service.ts","ng://@ecp-caf/caf-common/lib/services/tabservice/tab-entity.service.ts","ng://@ecp-caf/caf-common/lib/caf.common.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [\r\n  ],\r\n  exports: [],\r\n  providers: [ ],\r\n  entryComponents: []\r\n})\r\nexport class CommonSharedModule {}\r\n","import { CacheStoragesEnum } from '../../enums/cache.storages.enum';\r\nimport { StorageValueInterface } from '../../interfaces/storage.value.interface';\r\n\r\n/**\r\n * Abstract cache storage\r\n */\r\nexport abstract class CacheStorageAbstract {\r\n\r\n    /**\r\n     * Get item from storage\r\n     * @param key\r\n     */\r\n    public abstract getItem(key: string): StorageValueInterface;\r\n\r\n    /**\r\n     * Set item to storage\r\n     * @param key\r\n     * @param value\r\n     */\r\n    public abstract setItem(key: string, value: StorageValueInterface): boolean;\r\n\r\n    /**\r\n     * Remove item from storage\r\n     * @param key\r\n     */\r\n    public abstract removeItem(key: string): void;\r\n\r\n    /**\r\n     * Clear item in storage\r\n     */\r\n    public abstract clear(): void;\r\n\r\n    /**\r\n     * Get current storage type\r\n     */\r\n    public abstract type(): CacheStoragesEnum;\r\n\r\n    /**\r\n     * Check if storage is enabled\r\n     */\r\n    public abstract isEnabled(): boolean;\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CacheStorageAbstract } from '../cache.storage.abstract.service';\r\nimport { CacheStoragesEnum } from '../../../enums/cache.storages.enum';\r\nimport { StorageValueInterface } from '../../../interfaces/storage.value.interface';\r\n\r\n/**\r\n * Service for storing data in session storage\r\n */\r\n@Injectable()\r\nexport class CacheSessionStorage extends CacheStorageAbstract {\r\n\r\n    public getItem(key: string) {\r\n        const value = sessionStorage.getItem(key);\r\n        return value ? JSON.parse(value) : null;\r\n    }\r\n\r\n    public setItem(key: string, value: StorageValueInterface) {\r\n        try {\r\n            sessionStorage.setItem(key, JSON.stringify(value));\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public removeItem(key: string) {\r\n        sessionStorage.removeItem(key);\r\n    }\r\n\r\n    public clear() {\r\n        sessionStorage.clear();\r\n    }\r\n\r\n    public type() {\r\n        return CacheStoragesEnum.SESSION_STORAGE;\r\n    }\r\n\r\n    public isEnabled() {\r\n        try {\r\n            sessionStorage.setItem('test', 'test');\r\n            sessionStorage.removeItem('test');\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CacheStorageAbstract } from '../cache.storage.abstract.service';\r\nimport { CacheStoragesEnum } from '../../../enums/cache.storages.enum';\r\nimport { StorageValueInterface } from '../../../interfaces/storage.value.interface';\r\n\r\n/**\r\n * Service for storing data in local storage\r\n */\r\n@Injectable()\r\nexport class CacheLocalStorage extends CacheStorageAbstract {\r\n\r\n    public getItem(key: string) {\r\n        const value = localStorage.getItem(key);\r\n        return value ? JSON.parse(value) : null;\r\n    }\r\n\r\n    public setItem(key: string, value: StorageValueInterface) {\r\n        try {\r\n            localStorage.setItem(key, JSON.stringify(value));\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public removeItem(key: string) {\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n    public clear() {\r\n        localStorage.clear();\r\n    }\r\n\r\n    public type() {\r\n        return CacheStoragesEnum.LOCAL_STORAGE;\r\n    }\r\n\r\n    public isEnabled() {\r\n        try {\r\n            localStorage.setItem('test', 'test');\r\n            localStorage.removeItem('test');\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class WindowVariableService {\r\n\r\n    constructor() { }\r\n\r\n    /**\r\n     * 从当前window遍历到框架顶级window\r\n     * 并获取一个非空的自定义变量\r\n     */\r\n    public getVariableFromWindow(key: string): any {\r\n        const topWin = this.getTopWindow();\r\n        let frmWin: Window = window;\r\n        while (!frmWin[key] && frmWin !== topWin) {\r\n            frmWin = frmWin.parent;\r\n        }\r\n        return frmWin[key];\r\n    }\r\n\r\n    /**\r\n     * 从当前window遍历到框架顶级window\r\n     * 并获取一个非空且含有元素的自定义数组变量\r\n     */\r\n    public getArrayFromWindow(key: string): any[] {\r\n        const topWin = this.getTopWindow();\r\n        let frmWin: Window = window;\r\n        while ((!frmWin[key] || frmWin[key].length === 0) && frmWin !== topWin) {\r\n            frmWin = frmWin.parent;\r\n        }\r\n        return frmWin[key] as any[] || [];\r\n    }\r\n\r\n    /**\r\n     * 获取框架的顶级window\r\n     * 进行跨域封装\r\n     */\r\n    public getTopWindow(): Window {\r\n        let curWin: Window = window.self;\r\n        try {\r\n            while (curWin.location.origin === curWin.parent.location.origin) {\r\n                if (curWin !== curWin.parent && !(curWin as any).isRTFTopWin) {\r\n                    curWin = curWin.parent;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        } catch (e) { }\r\n        return curWin;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CacheStorageAbstract } from '../cache.storage.abstract.service';\r\nimport { CacheStoragesEnum } from '../../../enums/cache.storages.enum';\r\nimport { StorageValueInterface } from '../../../interfaces/storage.value.interface';\r\nimport { WindowVariableService } from '../../../../services/window-service/window-variable.service';\r\n\r\n/**\r\n * Service for storing data in local storage\r\n */\r\n@Injectable()\r\nexport class CacheMemoryStorage extends CacheStorageAbstract {\r\n\r\n  private _data: { [key: string]: any } = {};\r\n  private windowSvc = new WindowVariableService();\r\n\r\n  public getItem(key: string) {\r\n    const cache = this.getGlobleCache(key);\r\n    if (cache) {\r\n      this._data[key] = cache;\r\n    }\r\n    return this._data[key] ? this._data[key] : null;\r\n  }\r\n\r\n  public setItem(key: string, value: StorageValueInterface) {\r\n    this.setGlobleCache(key, value);\r\n    this._data[key] = value;\r\n    return true;\r\n  }\r\n\r\n  public removeItem(key: string) {\r\n    delete this._data[key];\r\n  }\r\n\r\n  public clear() {\r\n    this._data = [];\r\n  }\r\n\r\n  public type() {\r\n    return CacheStoragesEnum.MEMORY;\r\n  }\r\n\r\n  public isEnabled() {\r\n    return true;\r\n  }\r\n\r\n  private setGlobleCache(key: any, value: any) {\r\n    const topWindow = this.windowSvc.getTopWindow();\r\n    try {\r\n      if (topWindow.name) {\r\n        let exist = false;\r\n        const ary = topWindow.name.split('&|&');\r\n        // tslint:disable-next-line: prefer-for-of\r\n        for (let i = 0; i < ary.length; i++) {\r\n          if (ary[i]) {\r\n            const obj = JSON.parse(ary[i]);\r\n            if (obj[key]) {\r\n              topWindow.name = topWindow.name.replace(ary[i], this.serializeData(key, value));\r\n              exist = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (!exist) {\r\n          topWindow.name += '&|&' + this.serializeData(key, value);\r\n        }\r\n        } else {\r\n        topWindow.name = this.serializeData(key, value);\r\n      }\r\n    } catch {\r\n      topWindow.name = '';\r\n    }\r\n  }\r\n\r\n  private getGlobleCache(key: any) {\r\n    const topWindow = this.windowSvc.getTopWindow();\r\n    try {\r\n      let result: any;\r\n      if (topWindow.name) {\r\n        if (topWindow.name.indexOf('&|&') >= 0) {\r\n          const ary = topWindow.name.split('&|&');\r\n          for (let i = 0; i < ary.length; i++) {\r\n            if (ary[i]) {\r\n              const obj = JSON.parse(ary[i]);\r\n              if (obj[key]) {\r\n                result = obj[key].value;\r\n                if (i === 0) {\r\n                  topWindow.name = topWindow.name.replace(ary[i] + '&|&', '');\r\n                } else {\r\n                  topWindow.name = topWindow.name.replace('&|&' + ary[i], '');\r\n                }\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          const obj = JSON.parse(topWindow.name);\r\n          if (obj[key]) {\r\n            result = obj[key].value;\r\n            topWindow.name = '';\r\n          }\r\n        }\r\n      }\r\n\r\n      return result;\r\n    } catch {\r\n      topWindow.name = '';\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private serializeData(key: string, value: any) {\r\n    const obj = {};\r\n    obj[key] = {\r\n      value\r\n    };\r\n\r\n    return JSON.stringify(obj);\r\n  }\r\n\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { CacheOptionsInterface } from '../interfaces/cache.options.interface';\r\nimport { CacheStoragesEnum } from '../enums/cache.storages.enum';\r\nimport { CacheStorageAbstract } from './storage/cache.storage.abstract.service';\r\nimport { CacheSessionStorage } from './storage/sessionstorage/cache.sessionstorage.service';\r\nimport { CacheLocalStorage } from './storage/localstorage/cache.localstorage.service';\r\nimport { CacheMemoryStorage } from './storage/memory/cache.memory.service';\r\nimport { StorageValueInterface } from '../interfaces/storage.value.interface';\r\n\r\nconst CACHE_PREFIX = 'CacheService';\r\n\r\nconst DEFAULT_STORAGE = CacheStoragesEnum.MEMORY;\r\nconst DEFAULT_ENABLED_STORAGE = CacheStoragesEnum.SESSION_STORAGE;\r\n\r\n@Injectable()\r\nexport class CacheService {\r\n\r\n    /**\r\n     * Default cache options\r\n     * CacheOptionsInterface\r\n     * \r\n     */\r\n    private _defaultOptions: CacheOptionsInterface = {\r\n        expires: Number.MAX_VALUE,\r\n        maxAge : Number.MAX_VALUE\r\n    };\r\n\r\n    /**\r\n     * Cache prefix\r\n     */\r\n    private _prefix: string = CACHE_PREFIX;\r\n\r\n    public constructor(@Optional() private _storage: CacheStorageAbstract) {\r\n        this._validateStorage();\r\n    }\r\n\r\n    /**\r\n     * Set data to cache\r\n     */\r\n    public set(key: string, value: any, options?: CacheOptionsInterface) {\r\n        const storageKey = this._toStorageKey(key);\r\n        options = options ? options : this._defaultOptions;\r\n        if (this._storage.setItem(storageKey, this._toStorageValue(value, options))) {\r\n            if (!this._isSystemKey(key) && options.tag) {\r\n                this._saveTag(options.tag, storageKey);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    /**\r\n     * Get data from cache\r\n     */\r\n    public get(key: string): any {\r\n        const storageValue = this._storage.getItem(this._toStorageKey(key));\r\n        let value: any = null;\r\n        if (storageValue) {\r\n            if (this._validateStorageValue(storageValue)) {\r\n                value = storageValue.value;\r\n            } else {\r\n                this.remove(key);\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Check if value exists\r\n     */\r\n    public exists(key: string): boolean {\r\n        return !!this.get(key);\r\n    }\r\n\r\n    /**\r\n     * Remove item from cache\r\n     */\r\n    public remove(key: string) {\r\n        this._storage.removeItem(this._toStorageKey(key));\r\n        this._removeFromTag(this._toStorageKey(key));\r\n    }\r\n\r\n    /**\r\n     * Remove all from cache\r\n     */\r\n    public removeAll() {\r\n        this._storage.clear();\r\n    }\r\n\r\n    /**\r\n     * Get all tag data\r\n     */\r\n    public getTagData(tag: string) {\r\n        const tags = this.get(this._tagsStorageKey()) || {};\r\n        const result: {[key: string]: any} = {};\r\n        if (tags[tag]) {\r\n            tags[tag].forEach((key: string) => {\r\n                const data = this.get(this._fromStorageKey(key));\r\n                if (data) {\r\n                    result[this._fromStorageKey(key)] = data;\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Create a new instance of cache with needed storage\r\n     */\r\n    public useStorage(type: CacheStoragesEnum) {\r\n        const service = new CacheService(this._initStorage(type));\r\n        service.setGlobalPrefix(this._getCachePrefix());\r\n        return service;\r\n    }\r\n\r\n    /**\r\n     * Remove all by tag\r\n     */\r\n    public removeTag(tag: string) {\r\n        const tags = this.get(this._tagsStorageKey()) || {};\r\n        if (tags[tag]) {\r\n            tags[tag].forEach((key: string) => {\r\n                this._storage.removeItem(key);\r\n            });\r\n            delete tags[tag];\r\n            this.set(this._tagsStorageKey(), tags);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set global cache key prefix\r\n     */\r\n    public setGlobalPrefix(prefix: string) {\r\n        this._prefix = prefix;\r\n    }\r\n\r\n    /**\r\n     * Validate cache storage\r\n     * \r\n     */\r\n    private _validateStorage() {\r\n        if (!this._storage) {\r\n            this._storage = this._initStorage(DEFAULT_STORAGE);\r\n        }\r\n        if (!this._storage.isEnabled()) {\r\n            this._storage = this._initStorage(DEFAULT_ENABLED_STORAGE);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove key from tags keys list\r\n     */\r\n    private _removeFromTag(key: string) {\r\n        // tslint:disable-next-line:prefer-const\r\n        let tags = this.get(this._tagsStorageKey()) || {};\r\n        let index: number;\r\n        // tslint:disable-next-line:forin\r\n        for (const tag in tags) {\r\n            index = tags[tag].indexOf(key);\r\n            if (index !== -1) {\r\n                tags[tag].splice(index, 1);\r\n                this.set(this._tagsStorageKey(), tags);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Init storage by type\r\n     */\r\n    private _initStorage(type: CacheStoragesEnum) {\r\n        let storage: CacheStorageAbstract;\r\n        switch (type) {\r\n            case CacheStoragesEnum.SESSION_STORAGE:\r\n                storage = new CacheSessionStorage();\r\n                break;\r\n            case CacheStoragesEnum.LOCAL_STORAGE:\r\n                storage = new CacheLocalStorage();\r\n                break;\r\n            default: storage = new CacheMemoryStorage();\r\n        }\r\n        return storage;\r\n    }\r\n\r\n    private _toStorageKey(key: string) {\r\n        return this._getCachePrefix() + key;\r\n    }\r\n\r\n    private _fromStorageKey(key: string) {\r\n        return key.replace(this._getCachePrefix(), '');\r\n    }\r\n\r\n    /**\r\n     * Prepare value to set to storage\r\n     *\r\n     */\r\n    private _toStorageValue(value: any, options: CacheOptionsInterface): StorageValueInterface {\r\n        return {\r\n            value: value,\r\n            options: this._toStorageOptions(options)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Prepare options to set to storage\r\n     * \r\n     */\r\n    private _toStorageOptions(options: CacheOptionsInterface): CacheOptionsInterface {\r\n        const storageOptions: CacheOptionsInterface = {};\r\n        storageOptions.expires = options.expires ? options.expires :\r\n            (options.maxAge ? Date.now() + (options.maxAge * 1000) : this._defaultOptions.expires);\r\n        storageOptions.maxAge = options.maxAge ? options.maxAge : this._defaultOptions.maxAge;\r\n        return storageOptions;\r\n    }\r\n\r\n    /**\r\n     * Validate storage value\r\n     *\r\n     */\r\n    private _validateStorageValue(value: StorageValueInterface) {\r\n        return !!value.options.expires && value.options.expires > Date.now();\r\n    }\r\n\r\n    /**\r\n     * check if its system cache key\r\n     * \r\n     */\r\n    private _isSystemKey(key: string) {\r\n        return [this._tagsStorageKey()].indexOf(key) !== -1;\r\n    }\r\n\r\n    /**\r\n     * Save tag to list of tags\r\n     * \r\n     * \r\n     */\r\n    private _saveTag(tag: string, key: string) {\r\n        const tags = this.get(this._tagsStorageKey()) || {};\r\n        if (!tags[tag]) {\r\n            tags[tag] = [key];\r\n        } else {\r\n            tags[tag].push(key);\r\n        }\r\n        this.set(this._tagsStorageKey(), tags);\r\n    }\r\n\r\n    /**\r\n     * Get global cache prefix\r\n     * \r\n     * \r\n     */\r\n    private _getCachePrefix() {\r\n        return this._prefix;\r\n    }\r\n\r\n    private _tagsStorageKey() {\r\n        return 'CacheService_tags';\r\n    }\r\n\r\n}\r\n","\r\nexport class CommonUtil {\r\n\r\n    public static getQueryString(paraName: string) {\r\n        const reg = new RegExp('(^|&)' + paraName + '=([^&]*)(&|$)', 'i');\r\n        const r = window.location.search.substr(1).match(reg);\r\n        let paraValue = '';\r\n        if (r) {\r\n            paraValue = r[2];\r\n        }\r\n        return paraValue;\r\n    }\r\n\r\n    public static getQueryStringFromHash(paraName: string) {\r\n        const url = window.location.hash;\r\n        const arrObj = url && url.split('?');\r\n        if (arrObj && arrObj.length > 1) {\r\n            const arrPara = arrObj[1].split('&');\r\n            if (!arrPara) {\r\n                return '';\r\n            }\r\n            let arr: any[];\r\n            // tslint:disable-next-line: prefer-for-of\r\n            for (let i = 0; i < arrPara.length; i++) {\r\n                arr = arrPara[i].split('=');\r\n                if (arr != null && arr[0] === paraName) {\r\n                    return arr[1];\r\n                }\r\n            }\r\n            return '';\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    public static getCookieMapFromDoc(): Map<string, string> {\r\n        const cookieArr = document.cookie && document.cookie.split(';');\r\n        const cookieMap = new Map<string, string>();\r\n        if (cookieArr) {\r\n            cookieArr.forEach(item => {\r\n                const params = item.split('=');\r\n                cookieMap.set(params[0], params[1]);\r\n            });\r\n        }\r\n        return cookieMap;\r\n    }\r\n\r\n    /**\r\n     * 获取当前window 中funcId appId等公共变量\r\n     * 返回结果格式：funcId=xx&appType=xxx&\r\n     */\r\n    public static getCommonVariables(): string {\r\n        return CommonUtil.getQueryStringFromHash('cvft');\r\n    }\r\n\r\n    private static matchCommonVariableKey(item: string): boolean {\r\n        const itemArr = item.split('=');\r\n        if (!itemArr || itemArr.length !== 2 || !itemArr[0]) {\r\n            return false;\r\n        }\r\n        switch (itemArr[0].toLowerCase()) {\r\n            case 'funcid': return true;\r\n            case 'appid': return true;\r\n            case 'appentrance': return true;\r\n            case 'apptype': return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { WindowVariableService } from '../window-service/window-variable.service';\r\nimport { CommonUtil } from '../../utilities/common.utilities';\r\n\r\n\r\n@Injectable()\r\nexport class SessionService {\r\n    private SessionKey = 'session';\r\n    private SessionKeyForIde = 'sessionId';\r\n    private FuncSessionKey = 'FuncSession';\r\n    private windowService: WindowVariableService;\r\n\r\n    constructor() {\r\n        window[this.FuncSessionKey] = window[this.FuncSessionKey] || new Map<string, string>();\r\n        this.windowService = new WindowVariableService();\r\n    }\r\n\r\n    /**\r\n     * 获取用户sessionid\r\n     */\r\n    getUserSessionId(): string {\r\n        return localStorage.getItem(this.SessionKey) || '';\r\n    }\r\n\r\n    /**\r\n     * 获取当前session 之前依赖router的方式改掉\r\n     * 从url hash中获取query\r\n     * N 栈为funcSession\r\n     * J 栈为formToken\r\n     */\r\n    getCurrentSeesionId(tabId?: string): string {\r\n        if (!!tabId) {\r\n            const tab = this.getTabArray().find(t => t.id === tabId);\r\n            return tab && (tab.formToken || tab.sessionId);\r\n        }\r\n        let ssid = CommonUtil.getQueryStringFromHash('cvft');\r\n        if (!ssid) {\r\n            const pageId = CommonUtil.getQueryStringFromHash('tabId');\r\n            const tab = this.getTabArray().find(t => t.id === pageId);\r\n            if (tab) {\r\n                ssid = (tab.formToken || tab.sessionId);\r\n            }\r\n        }\r\n        return ssid || this.getUserSessionId();\r\n    }\r\n\r\n    /***\r\n     * 获取功能的session(功能重复打开，会存在多个)\r\n     * (1912 框架移除funcSession，接口作废)\r\n     */\r\n    getFuncSessionId(funcId: string) {\r\n        const ssMap = new Map<string, string>();\r\n        const tabs = this.getTabArray().filter(t => t.funcId === funcId);\r\n        if (!tabs || tabs.length === 0) {\r\n            return ssMap;\r\n        }\r\n        // tslint:disable-next-line: prefer-for-of\r\n        for (let i = 0; i < tabs.length; i++) {\r\n            ssMap.set(tabs[i].tabId, tabs[i].sessionId);\r\n        }\r\n\r\n        return ssMap;\r\n    }\r\n\r\n    /**\r\n     * 获取应用session（应用重复打开会存在多个）\r\n     * (1912 框架移除funcSession，接口作废)\r\n     */\r\n    getAppSessionId(appId: string, appEntrance: string) {\r\n        const ssMap = new Map<string, string>();\r\n        const tabs = this.getTabArray().filter(t => t.appId === appId && t.appEntrance === appEntrance);\r\n        if (!tabs || tabs.length === 0) {\r\n            return ssMap;\r\n        }\r\n        // tslint:disable-next-line: prefer-for-of\r\n        for (let i = 0; i < tabs.length; i++) {\r\n            ssMap.set(tabs[i].tabId, tabs[i].sessionId);\r\n        }\r\n        return ssMap;\r\n    }\r\n\r\n    /**\r\n     * 设置用户sessionid\r\n     * 只是用于N版\r\n     */\r\n    setUserSessionId(ssid: string) {\r\n        // todo框架修改之后，要和IDE同步\r\n        localStorage.setItem(this.SessionKey, ssid);\r\n        localStorage.setItem(this.SessionKeyForIde, ssid);\r\n    }\r\n\r\n    /**\r\n     * 缓存当前功能的sessionid\r\n     * (1912 框架移除funcSession，接口作废)\r\n     */\r\n    setFuncSessionId(key: string, ssid: string) {\r\n        this.getFuncSessionCache().set(key, ssid);\r\n    }\r\n\r\n    /**\r\n     * 缓存当前应用的sessionId\r\n     * (1912 框架移除funcSession，接口作废)\r\n     */\r\n    setAppSessionId(appId: string, appEntrance: string, ssid: string) {\r\n        this.setFuncSessionId(`${appId}#${appEntrance}`, ssid);\r\n    }\r\n\r\n    private getFuncSessionCache(): Map<string, string> {\r\n        const sessionValue = this.windowService.getVariableFromWindow(this.FuncSessionKey);\r\n        return sessionValue as Map<string, string>;\r\n    }\r\n\r\n    private getTabArray(): any[] {\r\n        const iframeTabarray = 'iframeTabarray';\r\n        const iframArr = this.windowService.getArrayFromWindow(iframeTabarray);\r\n        return iframArr;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { SessionService } from '../sessionservice/session.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { CommonUtil } from '../../utilities/common.utilities';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private sessionService: SessionService\r\n    ) { }\r\n\r\n    get(url: string) {\r\n        return this.request('Get', url, this.setHeader({}));\r\n    }\r\n\r\n    post(url: string, body: any) {\r\n        return this.request('Post', url, this.setHeader({ body }));\r\n    }\r\n    put(url: string, body: any) {\r\n        return this.request('Put', url, this.setHeader({ body }));\r\n    }\r\n    delete(url: string, body: any) {\r\n        return this.request('Delete', url, this.setHeader({ body }));\r\n    }\r\n    patch(url: string, body: any) {\r\n        return this.request('Patch', url, this.setHeader({ body }));\r\n    }\r\n\r\n    /** 默认用当前sessionid */\r\n    setHeader(options: any, bizContextId?: string) {\r\n\r\n        options.headers = {\r\n            'Content-Type': 'application/json'\r\n        };\r\n        const commonVariables = CommonUtil.getCommonVariables();\r\n        if (commonVariables) {\r\n            const commonVariableKey = 'X-CAF-Runtime-CommonVariable';\r\n            options.headers[commonVariableKey] = commonVariables;\r\n        }\r\n        if (bizContextId) {\r\n            const bizContextKey = 'X-CAF-Runtime-Context';\r\n            options.headers[bizContextKey] = bizContextId;\r\n        }\r\n        return options;\r\n    }\r\n\r\n    request(method: string, url: string, options: any) {\r\n        if (options.body) {\r\n            if (typeof options.body !== 'string') {\r\n                options.body = JSON.stringify(options.body);\r\n            }\r\n        }\r\n        return this.http.request(method, url, options)\r\n            .pipe(map((data) => {\r\n                return data;\r\n            }));\r\n    }\r\n\r\n    request$(method: string, url: string, options: any): Observable<any> {\r\n        return this.http.request(method, url, options);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { CommonUtil } from '../../utilities/common.utilities';\r\n\r\n@Injectable()\r\nexport class LanguageService {\r\n    private languageKey = 'languageCode';\r\n    private curLangugaeKey = 'caf_web_language';\r\n\r\n    constructor(private cookieService: CookieService) { }\r\n\r\n    public setLanguageCode(languageCode: string) {\r\n        localStorage.setItem(this.languageKey, languageCode);\r\n    }\r\n\r\n    public getLanguageCode(): string {\r\n        let curLancode = this.cookieService && this.cookieService.get(this.curLangugaeKey);\r\n        if (!curLancode) {\r\n            curLancode = CommonUtil.getCookieMapFromDoc().get(this.curLangugaeKey) ||\r\n                localStorage.getItem(this.languageKey) ||\r\n                'zh-CHS';\r\n        }\r\n        return curLancode;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { WindowVariableService } from '../window-service/window-variable.service';\r\n\r\ninterface TabEntity {\r\n    tabId: string;\r\n    code?: string;\r\n    name?: string;\r\n    appType: string;\r\n    funcId: string;\r\n    appId: string;\r\n    appEntrance: string;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TabEntityService {\r\n\r\n    private nameSpace = 'gsp-rtf-tabarr-service';\r\n    private tabarrayKey = 'tab-arry';\r\n    private windowService: WindowVariableService;\r\n    private topWin: Window;\r\n\r\n\r\n    constructor() {\r\n        this.windowService = new WindowVariableService();\r\n        this.topWin = this.windowService.getTopWindow();\r\n        this.topWin[this.nameSpace] = this.topWin[this.nameSpace] || {};\r\n    }\r\n\r\n    public setTabs(tabs: any[]) {\r\n        if (!tabs || tabs.length === 0) {\r\n            return;\r\n        }\r\n        const copy = this.deepClone(tabs);\r\n        this.topWin[this.nameSpace][this.tabarrayKey] = copy;\r\n    }\r\n\r\n    public getTabs(): any[] {\r\n        const tabs = this.topWin[this.nameSpace][this.tabarrayKey] || [];\r\n        if (!tabs || tabs.length === 0) {\r\n            return tabs;\r\n        }\r\n        return this.deepClone(tabs);\r\n    }\r\n\r\n    public setActiveTab(tab: any) {\r\n        const tabs: any[] = this.getTabs();\r\n        const activeOld = tabs.find(t => t.active);\r\n        if (!tab) {\r\n            if (!!activeOld) {\r\n                activeOld.active = false;\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (tabs.length > 0) {\r\n            let activeNew = tabs.find(t => t.id === tab.id);\r\n            if (!activeNew) {\r\n                activeNew = tab;\r\n                if (!!activeOld) {\r\n                    activeOld.active = false;\r\n                }\r\n                activeNew.active = true;\r\n                tabs.push(activeNew);\r\n            } else {\r\n                if (!!activeOld) {\r\n                    if (activeOld === activeNew) {\r\n                        return;\r\n                    } else {\r\n                        activeOld.active = false;\r\n                        activeNew.active = true;\r\n                    }\r\n                } else {\r\n                    activeNew.active = true;\r\n                }\r\n            }\r\n            this.setTabs(tabs);\r\n        }\r\n    }\r\n\r\n    public getActiveTab(): any {\r\n        const tabs: any[] = this.getTabs();\r\n        const activeTab = tabs && tabs.find(t => t.active);\r\n        const res: TabEntity = activeTab && {\r\n            tabId: activeTab.id,\r\n            appType: activeTab.appType,\r\n            funcId: activeTab.funcId,\r\n            appId: activeTab.appId,\r\n            appEntrance: activeTab.appEntrance,\r\n            name: activeTab.FuncName\r\n        };\r\n        return res;\r\n    }\r\n\r\n    private deepClone(target: any): any {\r\n        let result;\r\n        if (typeof target === 'object') {\r\n            if (Array.isArray(target)) {\r\n                result = [];\r\n                for (let i in target) {\r\n                    result.push(this.deepClone(target[i]))\r\n                }\r\n            } else if (target === null) {\r\n                result = null;\r\n            } else if (target.constructor === RegExp) {\r\n                result = target;\r\n            } else {\r\n                result = {};\r\n                for (let i in target) {\r\n                    result[i] = this.deepClone(target[i]);\r\n                }\r\n            }\r\n        } else {\r\n            result = target;\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CacheService } from './cache/services/cache.service';\r\nimport { CacheStorageAbstract } from './cache/services/storage/cache.storage.abstract.service';\r\nimport { CacheMemoryStorage } from './cache/services/storage/memory/cache.memory.service';\r\nimport { HttpService } from './services/httpservice/http.service';\r\nimport { SessionService } from './services/sessionservice/session.service';\r\nimport { LanguageService } from './services/languageservice/language.service';\r\nimport { WindowVariableService } from './services/window-service/window-variable.service';\r\nimport { TabEntityService } from './services/tabservice/tab-entity.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n    ],\r\n    exports: [],\r\n    providers: [],\r\n    entryComponents: []\r\n})\r\nexport class FrmCommonModule {\r\n    static forRoot(): ModuleWithProviders {\r\n\r\n        return {\r\n            ngModule: FrmCommonModule,\r\n            providers: [\r\n                CacheService,\r\n                { provide: CacheStorageAbstract, useClass: CacheMemoryStorage },\r\n                HttpService,\r\n                SessionService,\r\n                LanguageService,\r\n                WindowVariableService,\r\n                TabEntityService,\r\n                CookieService\r\n            ]\r\n        };\r\n    }\r\n}\r\n"],"names":["tslib_1.__extends"],"mappings":"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"}
