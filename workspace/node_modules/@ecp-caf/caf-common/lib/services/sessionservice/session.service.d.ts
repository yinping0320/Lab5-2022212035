export declare class SessionService {
    private SessionKey;
    private SessionKeyForIde;
    private FuncSessionKey;
    private windowService;
    constructor();
    /**
     * 获取用户sessionid
     */
    getUserSessionId(): string;
    /**
     * 获取当前session 之前依赖router的方式改掉
     * 从url hash中获取query
     * N 栈为funcSession
     * J 栈为formToken
     */
    getCurrentSeesionId(tabId?: string): string;
    /***
     * 获取功能的session(功能重复打开，会存在多个)
     * (1912 框架移除funcSession，接口作废)
     */
    getFuncSessionId(funcId: string): Map<string, string>;
    /**
     * 获取应用session（应用重复打开会存在多个）
     * (1912 框架移除funcSession，接口作废)
     */
    getAppSessionId(appId: string, appEntrance: string): Map<string, string>;
    /**
     * 设置用户sessionid
     * 只是用于N版
     */
    setUserSessionId(ssid: string): void;
    /**
     * 缓存当前功能的sessionid
     * (1912 框架移除funcSession，接口作废)
     */
    setFuncSessionId(key: string, ssid: string): void;
    /**
     * 缓存当前应用的sessionId
     * (1912 框架移除funcSession，接口作废)
     */
    setAppSessionId(appId: string, appEntrance: string, ssid: string): void;
    private getFuncSessionCache;
    private getTabArray;
}
